source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_z = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_cbdc.14 = constant i32 -382906384
@global_var_1f5b8.20 = global i32 0
@global_var_b428.24 = constant i32 -382906384
@global_var_b894.26 = constant i32 -382906384
@global_var_ab9c.28 = constant i32 -382906384
@global_var_a4c4.30 = constant i32 -382906384
@global_var_9da0.32 = constant i32 -382906384
@global_var_9574.34 = constant i32 -382906384
@global_var_8f14.36 = constant i32 -382906384
@global_var_10000.37 = constant i32 93628
@global_var_21644.39 = global i32 0
@global_var_1f5bc.50 = global i32 0
@global_var_16b44.52 = constant i32 47
@global_var_21648.55 = local_unnamed_addr global i32 0
@global_var_1f5c0.57 = global i32 0
@global_var_21650.64 = local_unnamed_addr global i32 0
@global_var_2164e.65 = local_unnamed_addr global i32 0
@global_var_1f5c4.70 = global i32 0
@global_var_16ba8.78 = constant i32 10
@global_var_11548.84 = constant i32 -382910336
@global_var_166bc.88 = constant i32 16777216
@global_var_1f5cc.90 = global i32 0
@global_var_1f5d8.92 = global i32 0
@global_var_d3ec.93 = constant i32 128464
@global_var_1f5d0.94 = global i32 0
@global_var_1f5d4.96 = global i32 0
@global_var_166c4.102 = constant [23 x i8] c"j5elo2hkam13cdbinpg40f\00"
@global_var_12fe4.107 = constant i32 -382909968
@global_var_d95c.108 = constant i32 -509607925
@global_var_1f610.110 = global i32 0
@global_var_1f5dc.112 = global i32 0
@global_var_1f608.114 = global i32 0
@global_var_21664.118 = global i32 0
@global_var_2165c.122 = global i32 0
@global_var_21660.124 = global i32 0
@global_var_1f5e2.127 = local_unnamed_addr global i32 0
@global_var_1f5e8.131 = local_unnamed_addr global i32 0
@global_var_1f5e4.132 = local_unnamed_addr global i32 0
@global_var_1f5e9.133 = local_unnamed_addr global i32 0
@global_var_1f602.136 = local_unnamed_addr global i32 0
@global_var_16768.138 = constant i32 0
@global_var_166dc.140 = constant i32 369954064
@global_var_166e4.142 = constant i32 984579
@global_var_166e8.144 = constant i32 185533955
@global_var_166f0.146 = constant [4 x i8] c"@KL\00"
@global_var_166f4.148 = constant i32 252117766
@global_var_dcdc.149 = constant i32 91900
@global_var_166fc.150 = constant i32 1185623
@global_var_16700.152 = constant i32 1464926490
@global_var_16708.154 = constant i32 437783316
@global_var_16710.156 = constant i32 50595590
@global_var_16718.158 = constant [7 x i8] c"ZZZZZZ\00"
@global_var_16720.160 = constant i32 101322522
@global_var_16728.162 = constant [7 x i8] c"SPQVWT\00"
@global_var_16730.164 = constant [6 x i8] c"WVQPS\00"
@global_var_16e10.166 = constant i32 234886930
@global_var_16738.168 = constant [8 x i8] c"QWRRMPV\00"
@global_var_16740.170 = constant [8 x i8] c"\0ASU[QWR\00"
@global_var_16c88.172 = constant [4 x i8] c"SPQ\00"
@global_var_16d68.174 = constant [5 x i8] c"SPQV\00"
@global_var_16748.176 = constant [6 x i8] c"SPQVW\00"
@global_var_16750.178 = constant i32 268898583
@global_var_16758.180 = constant i32 286327570
@global_var_16760.182 = constant i32 286327570
@global_var_16b84.184 = constant i32 82
@global_var_16770.186 = constant i32 81
@global_var_16778.188 = constant [3 x i8] c"QQ\00"
@global_var_16780.190 = constant [4 x i8] c"QQQ\00"
@global_var_16788.192 = constant [5 x i8] c"QQQQ\00"
@global_var_1676c.194 = constant [6 x i8] c"QQQQQ\00"
@global_var_16774.196 = constant [7 x i8] c"QQQQQQ\00"
@global_var_1677c.198 = constant [8 x i8] c"QQQQQQQ\00"
@global_var_16784.200 = constant [9 x i8] c"QQQQQQQQ\00"
@global_var_16790.202 = constant [8 x i8] c"PPPPPPP\00"
@global_var_16798.204 = constant [9 x i8] c"PPPPPPPP\00"
@global_var_167a4.206 = constant i32 51843843
@global_var_16b38.208 = constant i32 83
@global_var_167ac.210 = constant [7 x i8] c"SSSSSS\00"
@global_var_167b4.212 = constant [8 x i8] c"SSSSSSS\00"
@global_var_167bc.214 = constant [9 x i8] c"SSSSSSSS\00"
@global_var_167c8.216 = constant [6 x i8] c"VVVVV\00"
@global_var_167d0.218 = constant [6 x i8] c"RRRRR\00"
@global_var_167d8.220 = constant [8 x i8] c"UUUPRRR\00"
@global_var_167e0.222 = constant i32 370219793
@global_var_167e8.224 = constant i32 185533955
@global_var_167c0.226 = constant [5 x i8] c"SSSS\00"
@global_var_167f4.228 = constant i32 50401041
@global_var_16800.230 = constant i32 1393823241
@global_var_16808.232 = constant [9 x i8] c"SPQVSPQV\00"
@global_var_16814.234 = constant i32 118232598
@global_var_1681c.236 = constant i32 336594705
@global_var_16824.238 = constant i32 118626065
@global_var_16830.240 = constant i32 218696707
@global_var_16838.242 = constant i32 285677317
@global_var_16840.244 = constant i32 285677349
@global_var_16848.246 = constant i32 185533955
@global_var_16850.248 = constant i32 1464927503
@global_var_16858.250 = constant i32 235931407
@global_var_16860.252 = constant i32 1343230982
@global_var_1686c.254 = constant i32 185533955
@global_var_1687c.256 = constant i32 201525761
@global_var_16e18.258 = constant i32 369885207
@global_var_16888.260 = constant i32 369891082
@global_var_16894.262 = constant i32 1393823241
@global_var_1689c.264 = constant i32 1460082232
@global_var_16e20.266 = constant i32 402658312
@global_var_168a4.268 = constant i32 437915160
@global_var_168ac.270 = constant [7 x i8] c"%/ZSZP\00"
@global_var_168b4.272 = constant i32 1397903955
@global_var_168c0.274 = constant i32 1393951489
@global_var_168c8.276 = constant i32 117838859
@global_var_168d0.278 = constant i32 185471254
@global_var_168d8.280 = constant i32 202052867
@global_var_168e4.282 = constant i32 202838296
@global_var_168f0.284 = constant [9 x i8] c"PRRZRZPT\00"
@global_var_168fc.286 = constant i32 1460799313
@global_var_16904.288 = constant i32 185533955
@global_var_1690c.290 = constant i32 1460735745
@global_var_16914.292 = constant i32 219415302
@global_var_1691c.294 = constant i32 269748996
@global_var_16928.296 = constant i32 235146251
@global_var_16934.298 = constant i32 51775246
@global_var_1693c.300 = constant i32 252708626
@global_var_16944.302 = constant i32 118561557
@global_var_1694c.304 = constant [10 x i8] c"5C\0CRD\0D-UL\00"
@global_var_dddc.305 = constant i32 92504
@global_var_16958.306 = constant i32 1426281475
@global_var_16964.308 = constant [6 x i8] c"SSSSS\00"
@global_var_1696c.310 = constant i32 789059413
@global_var_1697c.312 = constant i32 185533955
@global_var_16988.314 = constant [5 x i8] c"VQPS\00"
@global_var_16990.316 = constant i32 252513560
@global_var_1699c.318 = constant i32 185533955
@global_var_16e28.320 = constant i32 369888000
@global_var_169a4.322 = constant i32 1397904464
@global_var_169ac.324 = constant i32 202119953
@global_var_169b4.326 = constant i32 185533955
@global_var_169bc.328 = constant [5 x i8] c"RRRR\00"
@global_var_1679c.330 = constant [5 x i8] c"PPPP\00"
@global_var_169c4.332 = constant [6 x i8] c"PPPPP\00"
@global_var_169cc.334 = constant [7 x i8] c"QTPUP[\00"
@global_var_169d4.336 = constant i32 185533987
@global_var_16e30.338 = constant i32 1444643
@global_var_169e0.340 = constant [9 x i8] c" %!4&1.P\00"
@global_var_169ec.342 = constant i32 555091756
@global_var_169f8.344 = constant [4 x i8] c"-!1\00"
@global_var_169fc.346 = constant i32 369954866
@global_var_16a08.348 = constant i32 235996675
@global_var_16a14.350 = constant i32 185995267
@global_var_16a1c.352 = constant i32 201527555
@global_var_16a24.354 = constant i32 397571
@global_var_16a28.356 = constant i32 51254787
@global_var_16e40.358 = constant i32 269484800
@global_var_16e4c.360 = constant i32 234881793
@global_var_16a34.362 = constant i32 100871457
@global_var_16a40.364 = constant i32 17763585
@global_var_16a4c.366 = constant i32 118230273
@global_var_16a58.368 = constant i32 251857670
@global_var_16a60.370 = constant i32 17502727
@global_var_16a6c.372 = constant i32 118888967
@global_var_16a78.374 = constant i32 51383045
@global_var_16a80.376 = constant i32 1393955845
@global_var_16a8c.378 = constant i32 302318346
@global_var_16a98.380 = constant i32 391515402
@global_var_16aa4.382 = constant i32 21762570
@global_var_16aac.384 = constant i32 369888521
@global_var_16ab8.386 = constant i32 5903
@global_var_16abc.388 = constant i32 51775244
@global_var_16ac8.390 = constant i32 268898829
@global_var_16ad4.392 = constant i32 1185042
@global_var_16ad8.394 = constant i32 184943376
@global_var_16ae0.396 = constant i32 118230800
@global_var_16ae8.398 = constant i32 385943313
@global_var_16af0.400 = constant i32 387319569
@global_var_16af8.402 = constant i32 185533987
@global_var_16b00.404 = constant i32 286327602
@global_var_16b0c.406 = constant i32 118626065
@global_var_16b18.408 = constant i32 588323601
@global_var_16b24.410 = constant i32 386992916
@global_var_16b2c.412 = constant i32 370214678
@global_var_16b34.414 = constant i32 370214678
@global_var_16b3c.416 = constant i32 1448022839
@global_var_16b48.418 = constant i32 1381388309
@global_var_16b50.420 = constant i32 1090913050
@global_var_16b58.422 = constant i32 235996675
@global_var_16b64.424 = constant i32 201789462
@global_var_16b70.426 = constant i32 51052801
@global_var_16b7c.428 = constant i32 369893889
@global_var_16b88.430 = constant i32 386795286
@global_var_16b94.432 = constant i32 118885137
@global_var_16ba0.434 = constant i32 71178
@global_var_16ba4.436 = constant i32 17249844
@global_var_16bac.438 = constant i32 185533987
@global_var_16bbc.440 = constant [7 x i8] c"OGKLQO\00"
@global_var_16bc4.442 = constant i32 268637521
@global_var_16bcc.444 = constant i32 236077905
@global_var_16bd4.446 = constant i32 789913868
@global_var_16e58.448 = constant i32 1121041
@global_var_16be0.450 = constant i32 65795
@global_var_16be4.452 = constant i32 117704195
@global_var_16bec.454 = constant i32 286723599
@global_var_16bf4.456 = constant i32 167843343
@global_var_16bfc.458 = constant i32 234952207
@global_var_16c04.460 = constant i32 100860684
@global_var_16c0c.462 = constant i32 386663183
@global_var_16c14.464 = constant i32 454760986
@global_var_16c1c.466 = constant i32 1117964
@global_var_16c20.468 = constant i32 303107852
@global_var_16c28.470 = constant [8 x i8] c"SPQVWTU\00"
@global_var_16c30.472 = constant i32 185468685
@global_var_16c3c.474 = constant i32 51452689
@global_var_16c44.476 = constant i32 17501187
@global_var_16c4c.478 = constant i32 202245910
@global_var_16c54.480 = constant i32 1121041
@global_var_16c58.482 = constant i32 51452689
@global_var_16c64.484 = constant [11 x i8] c"SPQVWTUZ[R\00"
@global_var_16c70.486 = constant i32 336462593
@global_var_16c78.488 = constant i32 1448169555
@global_var_16c84.490 = constant i32 369954064
@global_var_16c8c.492 = constant i32 369560067
@global_var_16c98.494 = constant [7 x i8] c"SPQSPQ\00"
@global_var_16ca0.496 = constant [8 x i8] c"0--6WRR\00"
@global_var_16ca8.499 = constant i32 1527191064
@global_var_16e60.501 = constant i32 1380995840
@global_var_16cb0.503 = constant [9 x i8] c"2#115-0&\00"
@global_var_16e6c.505 = constant i32 17237776
@global_var_16cbc.508 = constant [6 x i8] c"#&/+,\00"
@global_var_16cc4.511 = constant i32 253101836
@global_var_16ccc.515 = constant i32 285677317
@global_var_16cd4.517 = constant i32 51119919
@global_var_16cdc.519 = constant i32 118426890
@global_var_16ce4.521 = constant [9 x i8] c"SPQVWTUZ\00"
@global_var_16cf0.523 = constant i32 268898615
@global_var_16cf8.525 = constant i32 51255081
@global_var_16d00.527 = constant i32 118164993
@global_var_16d08.529 = constant i32 118626065
@global_var_16d10.531 = constant [8 x i8] c"WUUUQTV\00"
@global_var_16d18.533 = constant i32 69393
@global_var_16d1c.538 = constant i32 185339151
@global_var_16d24.540 = constant i32 51118863
@global_var_16d2c.542 = constant [8 x i8] c"OCLCEGP\00"
@global_var_16d34.544 = constant i32 100863766
@global_var_16d3c.546 = constant i32 51451649
@global_var_16d48.548 = constant i32 168102666
@global_var_16e7c.551 = constant i32 855589
@global_var_16d54.553 = constant i32 118359830
@global_var_16d5c.557 = constant i32 286657539
@global_var_16d64.560 = constant i32 100866840
@global_var_16d70.562 = constant i32 50401803
@global_var_16d80.564 = constant i32 51794454
@global_var_16d90.566 = constant i32 370149140
@global_var_16da4.568 = constant i32 118626065
@global_var_16db0.570 = constant i32 185470228
@global_var_16dbc.571 = constant i32 118626065
@global_var_16dc8.573 = constant i32 390467883
@global_var_16dd8.575 = constant i32 118359830
@global_var_16de8.577 = constant i32 139798284
@global_var_1f5ec.581 = local_unnamed_addr global i32 0
@global_var_1f5ea.582 = local_unnamed_addr global i32 0
@global_var_1f5f0.583 = local_unnamed_addr global i32 0
@global_var_1f5f8.586 = local_unnamed_addr global i32 0
@global_var_1f604.587 = local_unnamed_addr global i32 0
@global_var_da44.591 = constant i32 -382910352
@global_var_16dfc.593 = constant [3 x i8] c"\0D\0A\00"
@global_var_16e00.595 = constant [5 x i8] c"ogin\00"
@global_var_16e08.597 = constant [8 x i8] c"assword\00"
@global_var_16e91.599 = constant i32 1830812671
@global_var_16e88.601 = constant i32 2095871
@global_var_16df4.606 = constant [6 x i8] c"enter\00"
@global_var_2166c.608 = global i32 0
@global_var_16e94.615 = constant [3 x i8] c"m?\00"
@global_var_2167c.616 = local_unnamed_addr global i32 0
@global_var_21680.617 = local_unnamed_addr global i32 0
@global_var_16e98.619 = constant i32 118885387
@global_var_21724.620 = local_unnamed_addr global i32 0
@global_var_21728.621 = local_unnamed_addr global i32 0
@global_var_16eac.623 = constant i32 34777
@global_var_2172c.624 = local_unnamed_addr global i32 0
@global_var_21730.625 = local_unnamed_addr global i32 0
@global_var_16eb0.627 = constant i32 370215694
@global_var_21674.628 = local_unnamed_addr global i32 0
@global_var_21678.629 = local_unnamed_addr global i32 0
@global_var_16ec0.631 = constant i32 235342353
@global_var_216ec.632 = local_unnamed_addr global i32 0
@global_var_216f0.633 = local_unnamed_addr global i32 0
@global_var_16fdc.635 = constant i32 199687
@global_var_216f4.636 = local_unnamed_addr global i32 0
@global_var_216f8.637 = local_unnamed_addr global i32 0
@global_var_16ec8.639 = constant i32 370219793
@global_var_216fc.640 = local_unnamed_addr global i32 0
@global_var_21700.641 = local_unnamed_addr global i32 0
@global_var_16ed0.643 = constant i32 6425105
@global_var_21710.644 = local_unnamed_addr global i32 0
@global_var_2170c.645 = local_unnamed_addr global i32 0
@global_var_16ed4.647 = constant i32 724313962
@global_var_21708.648 = local_unnamed_addr global i32 0
@global_var_21704.649 = local_unnamed_addr global i32 0
@global_var_16eec.651 = constant i32 269878280
@global_var_21718.652 = local_unnamed_addr global i32 0
@global_var_21714.653 = local_unnamed_addr global i32 0
@global_var_16f08.655 = constant [10 x i8] c"+&*77 &1E\00"
@global_var_21720.656 = local_unnamed_addr global i32 0
@global_var_2171c.657 = local_unnamed_addr global i32 0
@global_var_16f14.659 = constant [17 x i8] c"j',+j'06<'*=e56E\00"
@global_var_21738.660 = local_unnamed_addr global i32 0
@global_var_21734.661 = local_unnamed_addr global i32 0
@global_var_16f28.663 = constant [23 x i8] c"j',+j'06<'*=e.,))eh|jE\00"
@global_var_2173c.664 = local_unnamed_addr global i32 0
@global_var_21740.665 = local_unnamed_addr global i32 0
@global_var_16f40.667 = constant i32 219157069
@global_var_21684.668 = local_unnamed_addr global i32 0
@global_var_21688.669 = local_unnamed_addr global i32 0
@global_var_16f48.671 = constant i32 119146317
@global_var_21690.672 = local_unnamed_addr global i32 0
@global_var_2168c.673 = local_unnamed_addr global i32 0
@global_var_16f50.675 = constant i32 1644561485
@global_var_216a0.676 = local_unnamed_addr global i32 0
@global_var_2169c.677 = local_unnamed_addr global i32 0
@global_var_16f58.679 = constant i32 302190413
@global_var_216a4.680 = local_unnamed_addr global i32 0
@global_var_216a8.681 = local_unnamed_addr global i32 0
@global_var_16f60.683 = constant i32 219157069
@global_var_216ac.684 = local_unnamed_addr global i32 0
@global_var_216b0.685 = local_unnamed_addr global i32 0
@global_var_16f70.687 = constant i32 705696774
@global_var_216b8.688 = local_unnamed_addr global i32 0
@global_var_216b4.689 = local_unnamed_addr global i32 0
@global_var_16f7c.691 = constant i32 386740534
@global_var_216c0.692 = local_unnamed_addr global i32 0
@global_var_216bc.693 = local_unnamed_addr global i32 0
@global_var_16f94.695 = constant i32 18220877
@global_var_216c8.696 = local_unnamed_addr global i32 0
@global_var_216c4.697 = local_unnamed_addr global i32 0
@global_var_16fa8.699 = constant i32 118424332
@global_var_216d0.700 = local_unnamed_addr global i32 0
@global_var_216cc.701 = local_unnamed_addr global i32 0
@global_var_16fb8.703 = constant i32 336004685
@global_var_216d4.704 = local_unnamed_addr global i32 0
@global_var_216d8.705 = local_unnamed_addr global i32 0
@global_var_16fc8.707 = constant i32 336004685
@global_var_216dc.708 = local_unnamed_addr global i32 0
@global_var_216e0.709 = local_unnamed_addr global i32 0
@global_var_1160c.715 = constant i32 -443088884
@global_var_1f630.732 = global i32 0
@global_var_11a3c.734 = constant i32 -456978431
@global_var_11fd4.752 = constant i32 -478871519
@global_var_12a54.766 = constant i32 -478805983
@global_var_c37c.770 = constant i32 -481099767
@global_var_12e30.776 = constant i32 -382906384
@global_var_1f614.784 = local_unnamed_addr global i32 0
@global_var_146bc.786 = constant i32 -509591552
@global_var_1f618.793 = local_unnamed_addr global i32 0
@global_var_150f0.796 = constant i32 -382909968
@global_var_13494.797 = constant i32 -494075872
@global_var_11510.798 = constant i32 -382910336
@global_var_16ffc.802 = constant [11 x i8] c"/proc/stat\00"
@global_var_17008.805 = constant i32 32
@global_var_1700c.808 = constant [14 x i8] c"/proc/cpuinfo\00"
@global_var_1701c.810 = constant [10 x i8] c"processor\00"
@global_var_17040.812 = constant i32 604672
@global_var_13654.815 = constant i32 -369098421
@global_var_1f628.828 = local_unnamed_addr global i32 0
@global_var_1f62c.830 = local_unnamed_addr global i32 0
@global_var_17044.833 = constant [10 x i8] c"/dev/null\00"
@global_var_13260.834 = constant i32 -442543860
@global_var_15054.839 = constant i32 -382910352
@global_var_11a70.844 = constant i32 -369094754
@global_var_14020.857 = constant i32 -335545128
@global_var_144e8.863 = constant i32 -382909456
@global_var_21640.866 = local_unnamed_addr global i32 0
@global_var_16df8.874 = constant i32 114
@global_var_15514.879 = constant i32 -382906384
@global_var_20003.888 = global i32 0
@global_var_20000.889 = global i32 0
@global_var_14ff4.899 = constant i32 -509607926
@global_var_17350.904 = constant i32 0
@global_var_164a8.905 = constant i32 -382909968
@global_var_a088.912 = constant i32 -393084916
@global_var_15338.916 = constant i32 -509607928
@global_var_1f598.2 = external global i8*
@global_var_1f5b4.18 = external global i8*
@global_var_1f5b5.22 = global i8 0
@global_var_2164c.62 = global i16* null
@1 = internal constant [4 x i8] c"\F8\F3\01\00"
@global_var_1f5c8.82 = external global i8*
@global_var_1f60c.116 = global i16* null
@global_var_1f5e0.126 = external global i8*
@global_var_1f5f4.129 = global i16 0
@global_var_1f600.130 = local_unnamed_addr global i8 0
@global_var_1f5f6.134 = local_unnamed_addr global i16 0
@global_var_1f601.135 = local_unnamed_addr global i8 0

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_8094() local_unnamed_addr {
entry:
  %v3_8098 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_8098)
  %v31_80a0 = load i32, i32* @r0, align 4
  ret i32 %v31_80a0
}

define i32 @function_80b0() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_80b0 = load i32, i32* @r4, align 4
  store i32 %v3_80b0, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i8** @global_var_1f598.2 to i32), i32* %r4.global-to-local, align 4
  %v2_80b8 = load i8, i8* bitcast (i8** @global_var_1f598.2 to i8*), align 4
  %v2_80bc = icmp eq i8 %v2_80b8, 0
  br i1 %v2_80bc, label %dec_label_pc_80c4, label %dec_label_pc_80e0

dec_label_pc_80c4:                                ; preds = %entry
  store i1 true, i1* @cpsr_z, align 1
  %v3_80d4 = call i32 @function_80ec()
  %v2_80dc = load i32, i32* %r4.global-to-local, align 4
  %v3_80dc = inttoptr i32 %v2_80dc to i8*
  store i8 1, i8* %v3_80dc, align 1
  %v2_80e0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_80e0

dec_label_pc_80e0:                                ; preds = %entry, %dec_label_pc_80c4
  %v2_80e0 = phi i32 [ %v2_80e0.pre, %dec_label_pc_80c4 ], [ %v3_80b0, %entry ]
  %.0 = phi i32 [ %v3_80d4, %dec_label_pc_80c4 ], [ undef, %entry ]
  store i32 %v2_80e0, i32* %r4.global-to-local, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i8** @global_var_1f598.2, { 1, 0 }
  uselistorder label %dec_label_pc_80e0, { 1, 0 }
}

define i32 @function_80ec() local_unnamed_addr {
dec_label_pc_80ec:
  %v0_80f0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_80f0, label %bb, label %bb3

bb:                                               ; preds = %dec_label_pc_80ec
  %v1_80f0 = load i32, i32* @r1, align 4
  %v2_80f0 = load i32, i32* @r8, align 4
  %v3_80f0 = udiv i32 %v2_80f0, 64
  %v4_80f0 = mul i32 %v2_80f0, 67108864
  %v5_80f0 = or i32 %v3_80f0, %v4_80f0
  %v8_80f0 = and i32 %v5_80f0, %v1_80f0
  call void @__pseudo_branch(i32 %v8_80f0)
  br label %bb3

bb3:                                              ; preds = %bb, %dec_label_pc_80ec
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_8118 = load i32, i32* inttoptr (i32 127860 to i32*), align 4
  %v2_811c = icmp eq i32 %v2_8118, 0
  br i1 %v2_811c, label %dec_label_pc_8134, label %dec_label_pc_8124

dec_label_pc_8124:                                ; preds = %bb3
  call void @__pseudo_cond_branch(i1 false, i32 0)
  br label %dec_label_pc_8134

dec_label_pc_8134:                                ; preds = %bb3, %dec_label_pc_8124
  ret i32 127860

; uselistorder directives
  uselistorder label %dec_label_pc_8134, { 1, 0 }
}

define i32 @entry_point(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_4 = alloca i32, align 4
  %v4_815c = ptrtoint i32* %stack_var_4 to i32
  %v8_817c = call i32 @function_13d90(i32 ptrtoint (i32* @global_var_cbdc.14 to i32), i32 %arg2, i32* nonnull %stack_var_4, i32 32916, i32 91820, i32 %arg1, i32 %v4_815c)
  %v0_8180 = call i32 @function_13260()
  ret i32 %v0_8180
}

define i32 @function_8190(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_8190:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_8190 = icmp eq i32 %arg1, 0
  br i1 %v2_8190, label %dec_label_pc_81d8, label %dec_label_pc_81a0

dec_label_pc_81a0:                                ; preds = %dec_label_pc_8190
  %v0_81a0 = load i32, i32* %r1.global-to-local, align 4
  %v1_81a0 = add i32 %v0_81a0, 4
  %v2_81a0 = inttoptr i32 %v1_81a0 to i8*
  %v3_81a0 = load i8, i8* %v2_81a0, align 1
  %v4_81a0 = zext i8 %v3_81a0 to i32
  %v9_81a4 = icmp eq i32 %v4_81a0, %arg3
  br i1 %v9_81a4, label %dec_label_pc_81e4, label %dec_label_pc_81c8.preheader

dec_label_pc_81c8.preheader:                      ; preds = %dec_label_pc_81a0
  br label %dec_label_pc_81c8

dec_label_pc_81b8:                                ; preds = %dec_label_pc_81c8
  %v1_81b8 = add i32 %v0_81c0.in, 12
  %v2_81b8 = inttoptr i32 %v1_81b8 to i8*
  %v3_81b8 = load i8, i8* %v2_81b8, align 1
  %v4_81b8 = zext i8 %v3_81b8 to i32
  %v9_81bc = icmp eq i32 %v4_81b8, %arg3
  br i1 %v9_81bc, label %dec_label_pc_81e4, label %dec_label_pc_81c8

dec_label_pc_81c8:                                ; preds = %dec_label_pc_81c8.preheader, %dec_label_pc_81b8
  %v0_81c0.in = phi i32 [ %v0_81a0, %dec_label_pc_81c8.preheader ], [ %v0_81c0, %dec_label_pc_81b8 ]
  %v0_81c8 = phi i32 [ 0, %dec_label_pc_81c8.preheader ], [ %v1_81c8, %dec_label_pc_81b8 ]
  %v0_81c0 = add i32 %v0_81c0.in, 8
  %v1_81c8 = add i32 %v0_81c8, 1
  %v9_81cc = icmp eq i32 %v1_81c8, %arg1
  store i32 %v0_81c0, i32* %r1.global-to-local, align 4
  br i1 %v9_81cc, label %dec_label_pc_81d8, label %dec_label_pc_81b8

dec_label_pc_81d8:                                ; preds = %dec_label_pc_81c8, %dec_label_pc_8190, %dec_label_pc_81e4
  %v0_81d8 = phi i32 [ %arg4, %dec_label_pc_8190 ], [ %v2_81e4, %dec_label_pc_81e4 ], [ %arg4, %dec_label_pc_81c8 ]
  ret i32 %v0_81d8

dec_label_pc_81e4:                                ; preds = %dec_label_pc_81b8, %dec_label_pc_81a0
  %v0_81e4 = phi i32 [ %v0_81a0, %dec_label_pc_81a0 ], [ %v0_81c0, %dec_label_pc_81b8 ]
  %v1_81e4 = inttoptr i32 %v0_81e4 to i32*
  %v2_81e4 = load i32, i32* %v1_81e4, align 4
  br label %dec_label_pc_81d8

; uselistorder directives
  uselistorder i32 %v1_81c8, { 1, 0 }
  uselistorder i32 %v0_81c0, { 1, 0, 2 }
  uselistorder i32 %v0_81c0.in, { 1, 0 }
  uselistorder i32 %v0_81a0, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_81d8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_81c8, { 1, 0 }
}

define i32 @function_81ec(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_81ec:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_81ec = icmp eq i32 %arg1, 0
  %v6_81f0 = load i32, i32* @lr, align 4
  store i32 %arg4, i32* @r4, align 4
  br i1 %v2_81ec, label %dec_label_pc_8234, label %dec_label_pc_81fc

dec_label_pc_81fc:                                ; preds = %dec_label_pc_81ec
  %v0_81fc = load i32, i32* %r1.global-to-local, align 4
  %v1_81fc = add i32 %v0_81fc, 4
  %v2_81fc = inttoptr i32 %v1_81fc to i8*
  %v3_81fc = load i8, i8* %v2_81fc, align 1
  %v4_81fc = zext i8 %v3_81fc to i32
  %v9_8200 = icmp eq i32 %v4_81fc, %arg3
  br i1 %v9_8200, label %dec_label_pc_8240, label %dec_label_pc_8224.preheader

dec_label_pc_8224.preheader:                      ; preds = %dec_label_pc_81fc
  br label %dec_label_pc_8224

dec_label_pc_8214:                                ; preds = %dec_label_pc_8224
  %v1_8214 = add i32 %v0_821c.in, 12
  %v2_8214 = inttoptr i32 %v1_8214 to i8*
  %v3_8214 = load i8, i8* %v2_8214, align 1
  %v4_8214 = zext i8 %v3_8214 to i32
  %v9_8218 = icmp eq i32 %v4_8214, %arg3
  br i1 %v9_8218, label %dec_label_pc_8240, label %dec_label_pc_8224

dec_label_pc_8224:                                ; preds = %dec_label_pc_8224.preheader, %dec_label_pc_8214
  %v0_821c.in = phi i32 [ %v0_81fc, %dec_label_pc_8224.preheader ], [ %v0_821c, %dec_label_pc_8214 ]
  %v0_8224 = phi i32 [ 0, %dec_label_pc_8224.preheader ], [ %v1_8224, %dec_label_pc_8214 ]
  %v0_821c = add i32 %v0_821c.in, 8
  %v1_8224 = add i32 %v0_8224, 1
  %v9_8228 = icmp eq i32 %v1_8224, %arg1
  store i32 %v0_821c, i32* %r1.global-to-local, align 4
  br i1 %v9_8228, label %dec_label_pc_8234, label %dec_label_pc_8214

dec_label_pc_8234:                                ; preds = %dec_label_pc_8224, %dec_label_pc_8240, %dec_label_pc_81ec, %dec_label_pc_824c
  %v0_8234 = phi i32 [ %arg4, %dec_label_pc_8240 ], [ %arg4, %dec_label_pc_81ec ], [ %v1_824c, %dec_label_pc_824c ], [ %arg4, %dec_label_pc_8224 ]
  store i32 %v6_81f0, i32* @lr, align 4
  ret i32 %v0_8234

dec_label_pc_8240:                                ; preds = %dec_label_pc_8214, %dec_label_pc_81fc
  %v0_8240 = phi i32 [ %v0_81fc, %dec_label_pc_81fc ], [ %v0_821c, %dec_label_pc_8214 ]
  %v1_8240 = inttoptr i32 %v0_8240 to i32*
  %v2_8240 = load i32, i32* %v1_8240, align 4
  store i32 %v2_8240, i32* @r0, align 4
  %v2_8244 = icmp eq i32 %v2_8240, 0
  br i1 %v2_8244, label %dec_label_pc_8234, label %dec_label_pc_824c

dec_label_pc_824c:                                ; preds = %dec_label_pc_8240
  %v1_824c = call i32 @function_11a80(i32 %v2_8240)
  br label %dec_label_pc_8234

; uselistorder directives
  uselistorder i32 %v1_8224, { 1, 0 }
  uselistorder i32 %v0_821c, { 1, 0, 2 }
  uselistorder i32 %v0_821c.in, { 1, 0 }
  uselistorder i32 %v0_81fc, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8234, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_8224, { 1, 0 }
}

define i32 @function_8258(i32 %arg1) local_unnamed_addr {
dec_label_pc_8258:
  %stack_var_-8 = alloca i32, align 4
  %v2_8258 = icmp eq i32 %arg1, 0
  %v3_825c = load i32, i32* @r4, align 4
  store i32 %v3_825c, i32* %stack_var_-8, align 4
  %v6_825c = load i32, i32* @lr, align 4
  %v0_8260 = load i32, i32* @r3, align 4
  store i32 %v0_8260, i32* @r4, align 4
  br i1 %v2_8258, label %dec_label_pc_82a0, label %dec_label_pc_8268

dec_label_pc_8268:                                ; preds = %dec_label_pc_8258
  %v0_8268 = load i32, i32* @r1, align 4
  %v1_8268 = add i32 %v0_8268, 4
  %v2_8268 = inttoptr i32 %v1_8268 to i8*
  %v3_8268 = load i8, i8* %v2_8268, align 1
  %v4_8268 = zext i8 %v3_8268 to i32
  %v1_826c = load i32, i32* @r2, align 4
  %v9_826c = icmp eq i32 %v4_8268, %v1_826c
  br i1 %v9_826c, label %dec_label_pc_82ac, label %dec_label_pc_8290.preheader

dec_label_pc_8290.preheader:                      ; preds = %dec_label_pc_8268
  %v2_8270 = add i32 %v0_8268, 8
  store i32 %v2_8270, i32* @ip, align 4
  br label %dec_label_pc_8290

dec_label_pc_8280:                                ; preds = %dec_label_pc_8290
  %v1_8280 = add i32 %v0_8288, 4
  %v2_8280 = inttoptr i32 %v1_8280 to i8*
  %v3_8280 = load i8, i8* %v2_8280, align 1
  %v4_8280 = zext i8 %v3_8280 to i32
  %v9_8284 = icmp eq i32 %v1_826c, %v4_8280
  %v1_8288 = add i32 %v0_8288, 8
  store i32 %v1_8288, i32* @ip, align 4
  br i1 %v9_8284, label %dec_label_pc_82ac, label %dec_label_pc_8290

dec_label_pc_8290:                                ; preds = %dec_label_pc_8290.preheader, %dec_label_pc_8280
  %v0_8288 = phi i32 [ %v2_8270, %dec_label_pc_8290.preheader ], [ %v1_8288, %dec_label_pc_8280 ]
  %v0_8290 = phi i32 [ 0, %dec_label_pc_8290.preheader ], [ %v1_8290, %dec_label_pc_8280 ]
  %v1_8290 = add i32 %v0_8290, 1
  store i32 %v1_8290, i32* @lr, align 4
  %v9_8294 = icmp eq i32 %v1_8290, %arg1
  br i1 %v9_8294, label %dec_label_pc_82a0, label %dec_label_pc_8280

dec_label_pc_82a0:                                ; preds = %dec_label_pc_8290, %dec_label_pc_82ac, %dec_label_pc_8258, %dec_label_pc_82b8
  %v2_82a4 = phi i32 [ %v3_825c, %dec_label_pc_82ac ], [ %v3_825c, %dec_label_pc_8258 ], [ %v2_82a4.pre, %dec_label_pc_82b8 ], [ %v3_825c, %dec_label_pc_8290 ]
  %v0_82a0 = phi i32 [ %v0_8260, %dec_label_pc_82ac ], [ %v0_8260, %dec_label_pc_8258 ], [ %v3_82bc, %dec_label_pc_82b8 ], [ %v0_8260, %dec_label_pc_8290 ]
  store i32 %v2_82a4, i32* @r4, align 4
  store i32 %v6_825c, i32* @lr, align 4
  ret i32 %v0_82a0

dec_label_pc_82ac:                                ; preds = %dec_label_pc_8280, %dec_label_pc_8268
  %v0_82ac = phi i32 [ %v0_8268, %dec_label_pc_8268 ], [ %v0_8288, %dec_label_pc_8280 ]
  %v1_82ac = inttoptr i32 %v0_82ac to i32*
  %v2_82ac = load i32, i32* %v1_82ac, align 4
  %v2_82b0 = icmp eq i32 %v2_82ac, 0
  br i1 %v2_82b0, label %dec_label_pc_82a0, label %dec_label_pc_82b8

dec_label_pc_82b8:                                ; preds = %dec_label_pc_82ac
  %v2_82bc = inttoptr i32 %v2_82ac to i8*
  %v3_82bc = call i32 @function_10c60(i8* %v2_82bc, i32 10)
  %v2_82a4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_82a0

; uselistorder directives
  uselistorder i32 %v1_8290, { 1, 2, 0 }
  uselistorder i32 %v0_8288, { 0, 2, 1 }
  uselistorder label %dec_label_pc_82a0, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_8290, { 1, 0 }
}

define i32 @function_82c8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_82c8:
  store i32 %arg2, i32* @r1, align 4
  store i32 -411025149, i32* @r7, align 4
  %v0_82ce = call i32 @function_8974()
  ret i32 %v0_82ce
}

define i32 @function_8388(i32 %arg1) local_unnamed_addr {
dec_label_pc_8388:
  %v0_838a = call i32 @unknown_7ea6()
  ret i32 %v0_838a
}

define i32 @function_8560(i32 %arg1) local_unnamed_addr {
dec_label_pc_8560:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_8560 = load i32, i32* @r4, align 4
  store i32 %v3_8560, i32* %stack_var_-24, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v2_856c = call i32 @function_12898(i32 1, i32 8)
  store i32 ptrtoint (i8** @global_var_1f5b4.18 to i32), i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_1f5b8.20 to i32), i32* @r6, align 4
  store i32 44636, i32* %r2.global-to-local, align 4
  store i32 %v2_856c, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1f5b5.22 to i32), i32* %r1.global-to-local, align 4
  %v2_858c = load i32, i32* @global_var_1f5b8.20, align 4
  %v2_8590 = inttoptr i32 %v2_856c to i32*
  store i32 44636, i32* %v2_8590, align 4
  %v3_8594 = load i32, i32* @r4, align 4
  %v4_8594 = add i32 %v3_8594, 4
  %v5_8594 = inttoptr i32 %v4_8594 to i8*
  store i8 0, i8* %v5_8594, align 1
  %v0_8598 = load i32, i32* %r1.global-to-local, align 4
  %v3_8598 = mul i32 %v0_8598, 4
  store i32 %v3_8598, i32* %r1.global-to-local, align 4
  %v5_859c = inttoptr i32 %v2_858c to i32*
  %v6_859c = call i32 @function_129cc(i32* %v5_859c, i32 %v3_8598, i32 44636, i32 0)
  %v2_85a0 = load i8, i8* bitcast (i8** @global_var_1f5b4.18 to i8*), align 4
  %v3_85a0 = zext i8 %v2_85a0 to i32
  store i32 %v6_859c, i32* %r2.global-to-local, align 4
  %v0_85a8 = load i32, i32* @r4, align 4
  %v5_85a8 = mul nuw nsw i32 %v3_85a0, 4
  %v6_85a8 = add i32 %v5_85a8, %v6_859c
  %v7_85a8 = inttoptr i32 %v6_85a8 to i32*
  store i32 %v0_85a8, i32* %v7_85a8, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1f5b5.22 to i32), i32* %r3.global-to-local, align 4
  %v1_85b8 = load i32, i32* @r6, align 4
  %v2_85b8 = inttoptr i32 %v1_85b8 to i32*
  store i32 %v6_859c, i32* %v2_85b8, align 4
  %v0_85bc = load i32, i32* %r3.global-to-local, align 4
  %v1_85bc = trunc i32 %v0_85bc to i8
  %v2_85bc = load i32, i32* @r5, align 4
  %v3_85bc = inttoptr i32 %v2_85bc to i8*
  store i8 %v1_85bc, i8* %v3_85bc, align 1
  %v2_85c0 = call i32 @function_12898(i32 1, i32 8)
  store i32 ptrtoint (i32* @global_var_b428.24 to i32), i32* %r3.global-to-local, align 4
  store i32 1, i32* @r7, align 4
  store i32 %v2_85c0, i32* @r4, align 4
  store i32 ptrtoint (i8* @global_var_1f5b5.22 to i32), i32* %r1.global-to-local, align 4
  %v2_85d8 = load i32, i32* @global_var_1f5b8.20, align 4
  %v2_85dc = inttoptr i32 %v2_85c0 to i32*
  store i32 ptrtoint (i32* @global_var_b428.24 to i32), i32* %v2_85dc, align 4
  %v0_85e0 = load i32, i32* @r7, align 4
  %v1_85e0 = trunc i32 %v0_85e0 to i8
  %v2_85e0 = load i32, i32* @r4, align 4
  %v3_85e0 = add i32 %v2_85e0, 4
  %v4_85e0 = inttoptr i32 %v3_85e0 to i8*
  store i8 %v1_85e0, i8* %v4_85e0, align 1
  %v0_85e4 = load i32, i32* %r1.global-to-local, align 4
  %v3_85e4 = mul i32 %v0_85e4, 4
  store i32 %v3_85e4, i32* %r1.global-to-local, align 4
  %v4_85e8 = inttoptr i32 %v2_85d8 to i32*
  %v5_85e8 = call i32 @function_129cc(i32* %v4_85e8, i32 %v3_85e4, i32 %v6_859c, i32 ptrtoint (i32* @global_var_b428.24 to i32))
  %v2_85ec = load i8, i8* bitcast (i8** @global_var_1f5b4.18 to i8*), align 4
  %v3_85ec = zext i8 %v2_85ec to i32
  store i32 %v3_85ec, i32* %r3.global-to-local, align 4
  store i32 %v5_85e8, i32* %r2.global-to-local, align 4
  %v0_85f4 = load i32, i32* @r4, align 4
  %v5_85f4 = mul nuw nsw i32 %v3_85ec, 4
  %v6_85f4 = add i32 %v5_85f4, %v5_85e8
  %v7_85f4 = inttoptr i32 %v6_85f4 to i32*
  store i32 %v0_85f4, i32* %v7_85f4, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_85fc = load i32, i32* %r3.global-to-local, align 4
  %v1_85fc = load i32, i32* @r7, align 4
  %v2_85fc = add i32 %v1_85fc, %v0_85fc
  store i32 %v2_85fc, i32* %r3.global-to-local, align 4
  %v1_8604 = trunc i32 %v2_85fc to i8
  %v2_8604 = load i32, i32* @r5, align 4
  %v3_8604 = inttoptr i32 %v2_8604 to i8*
  store i8 %v1_8604, i8* %v3_8604, align 1
  %v0_8608 = load i32, i32* %r2.global-to-local, align 4
  %v1_8608 = load i32, i32* @r6, align 4
  %v2_8608 = inttoptr i32 %v1_8608 to i32*
  store i32 %v0_8608, i32* %v2_8608, align 4
  %v2_860c = call i32 @function_12898(i32 %v1_85fc, i32 8)
  %v2_8610 = load i8, i8* bitcast (i8** @global_var_1f5b4.18 to i8*), align 4
  %v3_8610 = zext i8 %v2_8610 to i32
  store i32 ptrtoint (i32* @global_var_b894.26 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_860c, i32* @r4, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_8620 = load i32, i32* @r7, align 4
  %v2_8620 = add i32 %v1_8620, %v3_8610
  store i32 %v2_8620, i32* %r1.global-to-local, align 4
  %v2_8624 = load i32, i32* @global_var_1f5b8.20, align 4
  %v2_8628 = inttoptr i32 %v2_860c to i32*
  store i32 ptrtoint (i32* @global_var_b894.26 to i32), i32* %v2_8628, align 4
  %v3_862c = load i32, i32* @r4, align 4
  %v4_862c = add i32 %v3_862c, 4
  %v5_862c = inttoptr i32 %v4_862c to i8*
  store i8 2, i8* %v5_862c, align 1
  %v0_8630 = load i32, i32* %r1.global-to-local, align 4
  %v3_8630 = mul i32 %v0_8630, 4
  store i32 %v3_8630, i32* %r1.global-to-local, align 4
  %v5_8634 = inttoptr i32 %v2_8624 to i32*
  %v6_8634 = call i32 @function_129cc(i32* %v5_8634, i32 %v3_8630, i32 ptrtoint (i32* @global_var_b894.26 to i32), i32 2)
  %v2_8638 = load i8, i8* bitcast (i8** @global_var_1f5b4.18 to i8*), align 4
  %v3_8638 = zext i8 %v2_8638 to i32
  store i32 %v3_8638, i32* %r3.global-to-local, align 4
  store i32 %v6_8634, i32* %r2.global-to-local, align 4
  %v0_8640 = load i32, i32* @r4, align 4
  %v5_8640 = mul nuw nsw i32 %v3_8638, 4
  %v6_8640 = add i32 %v5_8640, %v6_8634
  %v7_8640 = inttoptr i32 %v6_8640 to i32*
  store i32 %v0_8640, i32* %v7_8640, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_8648 = load i32, i32* %r3.global-to-local, align 4
  %v1_8648 = load i32, i32* @r7, align 4
  %v2_8648 = add i32 %v1_8648, %v0_8648
  store i32 %v2_8648, i32* %r3.global-to-local, align 4
  %v1_8650 = load i32, i32* @r6, align 4
  %v2_8650 = inttoptr i32 %v1_8650 to i32*
  store i32 %v6_8634, i32* %v2_8650, align 4
  %v0_8654 = load i32, i32* %r3.global-to-local, align 4
  %v1_8654 = trunc i32 %v0_8654 to i8
  %v2_8654 = load i32, i32* @r5, align 4
  %v3_8654 = inttoptr i32 %v2_8654 to i8*
  store i8 %v1_8654, i8* %v3_8654, align 1
  %v2_8658 = call i32 @function_12898(i32 %v1_8648, i32 8)
  %v2_865c = load i8, i8* bitcast (i8** @global_var_1f5b4.18 to i8*), align 4
  %v3_865c = zext i8 %v2_865c to i32
  store i32 ptrtoint (i32* @global_var_ab9c.28 to i32), i32* %r3.global-to-local, align 4
  store i32 8, i32* @r8, align 4
  store i32 %v2_8658, i32* @r4, align 4
  %v1_866c = load i32, i32* @r7, align 4
  %v2_866c = add i32 %v1_866c, %v3_865c
  store i32 %v2_866c, i32* %r1.global-to-local, align 4
  %v2_8670 = load i32, i32* @global_var_1f5b8.20, align 4
  %v2_8674 = inttoptr i32 %v2_8658 to i32*
  store i32 ptrtoint (i32* @global_var_ab9c.28 to i32), i32* %v2_8674, align 4
  %v0_8678 = load i32, i32* @r8, align 4
  %v1_8678 = trunc i32 %v0_8678 to i8
  %v2_8678 = load i32, i32* @r4, align 4
  %v3_8678 = add i32 %v2_8678, 4
  %v4_8678 = inttoptr i32 %v3_8678 to i8*
  store i8 %v1_8678, i8* %v4_8678, align 1
  %v0_867c = load i32, i32* %r1.global-to-local, align 4
  %v3_867c = mul i32 %v0_867c, 4
  store i32 %v3_867c, i32* %r1.global-to-local, align 4
  %v4_8680 = inttoptr i32 %v2_8670 to i32*
  %v5_8680 = call i32 @function_129cc(i32* %v4_8680, i32 %v3_867c, i32 %v6_8634, i32 ptrtoint (i32* @global_var_ab9c.28 to i32))
  %v2_8684 = load i8, i8* bitcast (i8** @global_var_1f5b4.18 to i8*), align 4
  %v3_8684 = zext i8 %v2_8684 to i32
  store i32 %v3_8684, i32* %r3.global-to-local, align 4
  store i32 %v5_8680, i32* %r2.global-to-local, align 4
  %v0_868c = load i32, i32* @r4, align 4
  %v5_868c = mul nuw nsw i32 %v3_8684, 4
  %v6_868c = add i32 %v5_868c, %v5_8680
  %v7_868c = inttoptr i32 %v6_868c to i32*
  store i32 %v0_868c, i32* %v7_868c, align 4
  %v0_8690 = load i32, i32* @r8, align 4
  store i32 %v0_8690, i32* %r1.global-to-local, align 4
  %v0_8694 = load i32, i32* %r3.global-to-local, align 4
  %v1_8694 = load i32, i32* @r7, align 4
  %v2_8694 = add i32 %v1_8694, %v0_8694
  store i32 %v2_8694, i32* %r3.global-to-local, align 4
  %v1_869c = trunc i32 %v2_8694 to i8
  %v2_869c = load i32, i32* @r5, align 4
  %v3_869c = inttoptr i32 %v2_869c to i8*
  store i8 %v1_869c, i8* %v3_869c, align 1
  %v0_86a0 = load i32, i32* %r2.global-to-local, align 4
  %v1_86a0 = load i32, i32* @r6, align 4
  %v2_86a0 = inttoptr i32 %v1_86a0 to i32*
  store i32 %v0_86a0, i32* %v2_86a0, align 4
  %v2_86a4 = call i32 @function_12898(i32 %v1_8694, i32 %v0_8690)
  %v2_86a8 = load i8, i8* bitcast (i8** @global_var_1f5b4.18 to i8*), align 4
  %v3_86a8 = zext i8 %v2_86a8 to i32
  store i32 ptrtoint (i32* @global_var_a4c4.30 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_86a4, i32* @r4, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v1_86b8 = load i32, i32* @r7, align 4
  %v2_86b8 = add i32 %v1_86b8, %v3_86a8
  store i32 %v2_86b8, i32* %r1.global-to-local, align 4
  %v2_86bc = load i32, i32* @global_var_1f5b8.20, align 4
  %v2_86c0 = inttoptr i32 %v2_86a4 to i32*
  store i32 ptrtoint (i32* @global_var_a4c4.30 to i32), i32* %v2_86c0, align 4
  %v3_86c4 = load i32, i32* @r4, align 4
  %v4_86c4 = add i32 %v3_86c4, 4
  %v5_86c4 = inttoptr i32 %v4_86c4 to i8*
  store i8 3, i8* %v5_86c4, align 1
  %v0_86c8 = load i32, i32* %r1.global-to-local, align 4
  %v3_86c8 = mul i32 %v0_86c8, 4
  store i32 %v3_86c8, i32* %r1.global-to-local, align 4
  %v5_86cc = inttoptr i32 %v2_86bc to i32*
  %v6_86cc = call i32 @function_129cc(i32* %v5_86cc, i32 %v3_86c8, i32 ptrtoint (i32* @global_var_a4c4.30 to i32), i32 3)
  %v2_86d0 = load i8, i8* bitcast (i8** @global_var_1f5b4.18 to i8*), align 4
  %v3_86d0 = zext i8 %v2_86d0 to i32
  store i32 %v3_86d0, i32* %r3.global-to-local, align 4
  store i32 %v6_86cc, i32* %r2.global-to-local, align 4
  %v0_86d8 = load i32, i32* @r4, align 4
  %v5_86d8 = mul nuw nsw i32 %v3_86d0, 4
  %v6_86d8 = add i32 %v5_86d8, %v6_86cc
  %v7_86d8 = inttoptr i32 %v6_86d8 to i32*
  store i32 %v0_86d8, i32* %v7_86d8, align 4
  %v0_86dc = load i32, i32* @r8, align 4
  store i32 %v0_86dc, i32* %r1.global-to-local, align 4
  %v0_86e0 = load i32, i32* %r3.global-to-local, align 4
  %v1_86e0 = load i32, i32* @r7, align 4
  %v2_86e0 = add i32 %v1_86e0, %v0_86e0
  store i32 %v2_86e0, i32* %r3.global-to-local, align 4
  %v1_86e8 = trunc i32 %v2_86e0 to i8
  %v2_86e8 = load i32, i32* @r5, align 4
  %v3_86e8 = inttoptr i32 %v2_86e8 to i8*
  store i8 %v1_86e8, i8* %v3_86e8, align 1
  %v0_86ec = load i32, i32* %r2.global-to-local, align 4
  %v1_86ec = load i32, i32* @r6, align 4
  %v2_86ec = inttoptr i32 %v1_86ec to i32*
  store i32 %v0_86ec, i32* %v2_86ec, align 4
  %v2_86f0 = call i32 @function_12898(i32 %v1_86e0, i32 %v0_86dc)
  %v2_86f4 = load i8, i8* bitcast (i8** @global_var_1f5b4.18 to i8*), align 4
  %v3_86f4 = zext i8 %v2_86f4 to i32
  store i32 ptrtoint (i32* @global_var_9da0.32 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_86f0, i32* @r4, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v1_8704 = load i32, i32* @r7, align 4
  %v2_8704 = add i32 %v1_8704, %v3_86f4
  store i32 %v2_8704, i32* %r1.global-to-local, align 4
  %v2_8708 = load i32, i32* @global_var_1f5b8.20, align 4
  %v2_870c = inttoptr i32 %v2_86f0 to i32*
  store i32 ptrtoint (i32* @global_var_9da0.32 to i32), i32* %v2_870c, align 4
  %v3_8710 = load i32, i32* @r4, align 4
  %v4_8710 = add i32 %v3_8710, 4
  %v5_8710 = inttoptr i32 %v4_8710 to i8*
  store i8 4, i8* %v5_8710, align 1
  %v0_8714 = load i32, i32* %r1.global-to-local, align 4
  %v3_8714 = mul i32 %v0_8714, 4
  store i32 %v3_8714, i32* %r1.global-to-local, align 4
  %v5_8718 = inttoptr i32 %v2_8708 to i32*
  %v6_8718 = call i32 @function_129cc(i32* %v5_8718, i32 %v3_8714, i32 ptrtoint (i32* @global_var_9da0.32 to i32), i32 4)
  %v2_871c = load i8, i8* bitcast (i8** @global_var_1f5b4.18 to i8*), align 4
  %v3_871c = zext i8 %v2_871c to i32
  store i32 %v3_871c, i32* %r3.global-to-local, align 4
  store i32 %v6_8718, i32* %r2.global-to-local, align 4
  %v0_8724 = load i32, i32* @r4, align 4
  %v5_8724 = mul nuw nsw i32 %v3_871c, 4
  %v6_8724 = add i32 %v5_8724, %v6_8718
  %v7_8724 = inttoptr i32 %v6_8724 to i32*
  store i32 %v0_8724, i32* %v7_8724, align 4
  %v0_8728 = load i32, i32* @r8, align 4
  store i32 %v0_8728, i32* %r1.global-to-local, align 4
  %v0_872c = load i32, i32* %r3.global-to-local, align 4
  %v1_872c = load i32, i32* @r7, align 4
  %v2_872c = add i32 %v1_872c, %v0_872c
  store i32 %v2_872c, i32* %r3.global-to-local, align 4
  %v1_8734 = trunc i32 %v2_872c to i8
  %v2_8734 = load i32, i32* @r5, align 4
  %v3_8734 = inttoptr i32 %v2_8734 to i8*
  store i8 %v1_8734, i8* %v3_8734, align 1
  %v0_8738 = load i32, i32* %r2.global-to-local, align 4
  %v1_8738 = load i32, i32* @r6, align 4
  %v2_8738 = inttoptr i32 %v1_8738 to i32*
  store i32 %v0_8738, i32* %v2_8738, align 4
  %v2_873c = call i32 @function_12898(i32 %v1_872c, i32 %v0_8728)
  %v2_8740 = load i8, i8* bitcast (i8** @global_var_1f5b4.18 to i8*), align 4
  %v3_8740 = zext i8 %v2_8740 to i32
  store i32 ptrtoint (i32* @global_var_9574.34 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_873c, i32* @r4, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v1_8750 = load i32, i32* @r7, align 4
  %v2_8750 = add i32 %v1_8750, %v3_8740
  store i32 %v2_8750, i32* %r1.global-to-local, align 4
  %v2_8754 = load i32, i32* @global_var_1f5b8.20, align 4
  %v2_8758 = inttoptr i32 %v2_873c to i32*
  store i32 ptrtoint (i32* @global_var_9574.34 to i32), i32* %v2_8758, align 4
  %v3_875c = load i32, i32* @r4, align 4
  %v4_875c = add i32 %v3_875c, 4
  %v5_875c = inttoptr i32 %v4_875c to i8*
  store i8 5, i8* %v5_875c, align 1
  %v0_8760 = load i32, i32* %r1.global-to-local, align 4
  %v3_8760 = mul i32 %v0_8760, 4
  store i32 %v3_8760, i32* %r1.global-to-local, align 4
  %v5_8764 = inttoptr i32 %v2_8754 to i32*
  %v6_8764 = call i32 @function_129cc(i32* %v5_8764, i32 %v3_8760, i32 ptrtoint (i32* @global_var_9574.34 to i32), i32 5)
  %v2_8768 = load i8, i8* bitcast (i8** @global_var_1f5b4.18 to i8*), align 4
  %v3_8768 = zext i8 %v2_8768 to i32
  store i32 %v3_8768, i32* %r3.global-to-local, align 4
  store i32 %v6_8764, i32* %r2.global-to-local, align 4
  %v0_8770 = load i32, i32* @r4, align 4
  %v5_8770 = mul nuw nsw i32 %v3_8768, 4
  %v6_8770 = add i32 %v5_8770, %v6_8764
  %v7_8770 = inttoptr i32 %v6_8770 to i32*
  store i32 %v0_8770, i32* %v7_8770, align 4
  %v0_8774 = load i32, i32* @r8, align 4
  store i32 %v0_8774, i32* %r1.global-to-local, align 4
  %v0_8778 = load i32, i32* %r3.global-to-local, align 4
  %v1_8778 = load i32, i32* @r7, align 4
  %v2_8778 = add i32 %v1_8778, %v0_8778
  store i32 %v2_8778, i32* %r3.global-to-local, align 4
  %v1_8780 = trunc i32 %v2_8778 to i8
  %v2_8780 = load i32, i32* @r5, align 4
  %v3_8780 = inttoptr i32 %v2_8780 to i8*
  store i8 %v1_8780, i8* %v3_8780, align 1
  %v0_8784 = load i32, i32* %r2.global-to-local, align 4
  %v1_8784 = load i32, i32* @r6, align 4
  %v2_8784 = inttoptr i32 %v1_8784 to i32*
  store i32 %v0_8784, i32* %v2_8784, align 4
  %v2_8788 = call i32 @function_12898(i32 %v1_8778, i32 %v0_8774)
  %v2_878c = load i8, i8* bitcast (i8** @global_var_1f5b4.18 to i8*), align 4
  %v3_878c = zext i8 %v2_878c to i32
  store i32 ptrtoint (i32* @global_var_8f14.36 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_8788, i32* @r4, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  %v1_879c = load i32, i32* @r7, align 4
  %v2_879c = add i32 %v1_879c, %v3_878c
  store i32 %v2_879c, i32* %r1.global-to-local, align 4
  %v2_87a0 = load i32, i32* @global_var_1f5b8.20, align 4
  %v2_87a4 = inttoptr i32 %v2_8788 to i32*
  store i32 ptrtoint (i32* @global_var_8f14.36 to i32), i32* %v2_87a4, align 4
  %v3_87a8 = load i32, i32* @r4, align 4
  %v4_87a8 = add i32 %v3_87a8, 4
  %v5_87a8 = inttoptr i32 %v4_87a8 to i8*
  store i8 6, i8* %v5_87a8, align 1
  %v0_87ac = load i32, i32* %r1.global-to-local, align 4
  %v3_87ac = mul i32 %v0_87ac, 4
  store i32 %v3_87ac, i32* %r1.global-to-local, align 4
  %v5_87b0 = inttoptr i32 %v2_87a0 to i32*
  %v6_87b0 = call i32 @function_129cc(i32* %v5_87b0, i32 %v3_87ac, i32 ptrtoint (i32* @global_var_8f14.36 to i32), i32 6)
  %v2_87b4 = load i8, i8* bitcast (i8** @global_var_1f5b4.18 to i8*), align 4
  %v3_87b4 = zext i8 %v2_87b4 to i32
  store i32 %v3_87b4, i32* %r3.global-to-local, align 4
  store i32 %v6_87b0, i32* %r2.global-to-local, align 4
  %v0_87bc = load i32, i32* @r4, align 4
  %v5_87bc = mul nuw nsw i32 %v3_87b4, 4
  %v6_87bc = add i32 %v5_87bc, %v6_87b0
  %v7_87bc = inttoptr i32 %v6_87bc to i32*
  store i32 %v0_87bc, i32* %v7_87bc, align 4
  %v0_87c0 = load i32, i32* @r8, align 4
  store i32 %v0_87c0, i32* %r1.global-to-local, align 4
  %v0_87c4 = load i32, i32* %r3.global-to-local, align 4
  %v1_87c4 = load i32, i32* @r7, align 4
  %v2_87c4 = add i32 %v1_87c4, %v0_87c4
  store i32 %v2_87c4, i32* %r3.global-to-local, align 4
  %v1_87cc = trunc i32 %v2_87c4 to i8
  %v2_87cc = load i32, i32* @r5, align 4
  %v3_87cc = inttoptr i32 %v2_87cc to i8*
  store i8 %v1_87cc, i8* %v3_87cc, align 1
  %v0_87d0 = load i32, i32* %r2.global-to-local, align 4
  %v1_87d0 = load i32, i32* @r6, align 4
  %v2_87d0 = inttoptr i32 %v1_87d0 to i32*
  store i32 %v0_87d0, i32* %v2_87d0, align 4
  %v2_87d4 = call i32 @function_12898(i32 %v1_87c4, i32 %v0_87c0)
  %v1_87da = call i32 @function_8388(i32 undef)
  store i32 0, i32* @sb, align 4
  store i32 %v1_87da, i32* @r6, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  %v0_8868 = load i32, i32* @r3, align 4
  store i32 %v0_8868, i32* @r5, align 4
  %v3_886c = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_886c, i32* @r4, align 4
  %v0_8870 = load i32, i32* @r2, align 4
  store i32 %v0_8870, i32* @sl, align 4
  %v2_8878 = call i32 @function_12898(i32 %v0_87c0, i32 4)
  %v0_887c = load i32, i32* @r4, align 4
  store i32 %v0_887c, i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  %v0_8888 = load i32, i32* @sb, align 4
  store i32 %v0_8888, i32* @r3, align 4
  %v0_888c = load i32, i32* @r5, align 4
  %v1_8890 = call i32 @function_8258(i32 %v0_888c)
  store i32 add (i32 ptrtoint (i32* @global_var_10000.37 to i32), i32 -1), i32* @r3, align 4
  store i32 3, i32* @r2, align 4
  %v0_88a8 = load i32, i32* @r4, align 4
  store i32 %v0_88a8, i32* @r1, align 4
  %v0_88ac = load i32, i32* @r5, align 4
  %v1_88b4 = call i32 @function_8258(i32 %v0_88ac)
  %v0_88b8 = load i32, i32* @r4, align 4
  store i32 %v0_88b8, i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  store i32 64, i32* @r3, align 4
  store i32 %v1_88b4, i32* @fp, align 4
  %v0_88c8 = load i32, i32* @r5, align 4
  %v1_88cc = call i32 @function_8258(i32 %v0_88c8)
  %v0_88d8 = load i32, i32* @r4, align 4
  store i32 %v0_88d8, i32* @r1, align 4
  store i32 5, i32* @r2, align 4
  store i32 1, i32* @r3, align 4
  %v0_88e4 = load i32, i32* @r5, align 4
  %v1_88ec = call i32 @function_8258(i32 %v0_88e4)
  store i32 add (i32 ptrtoint (i32* @global_var_10000.37 to i32), i32 -1), i32* @r3, align 4
  store i32 6, i32* @r2, align 4
  %v0_8904 = load i32, i32* @r4, align 4
  store i32 %v0_8904, i32* @r1, align 4
  %v0_8908 = load i32, i32* @r5, align 4
  %v1_8910 = call i32 @function_8258(i32 %v0_8908)
  %v0_891c = load i32, i32* @r4, align 4
  store i32 %v0_891c, i32* @r1, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.37 to i32), i32 -1), i32* @r3, align 4
  store i32 7, i32* @r2, align 4
  %v0_8928 = load i32, i32* @r5, align 4
  %v1_892c = call i32 @function_8258(i32 %v0_8928)
  %v0_8930 = load i32, i32* @r4, align 4
  store i32 %v0_8930, i32* @r1, align 4
  %v0_8934 = load i32, i32* @sb, align 4
  store i32 %v0_8934, i32* @r2, align 4
  store i32 512, i32* @r3, align 4
  store i32 %v1_892c, i32* @r8, align 4
  %v0_8940 = load i32, i32* @r5, align 4
  %v1_8944 = call i32 @function_8258(i32 %v0_8940)
  store i32 1, i32* @r2, align 4
  store i32 1, i32* @r3, align 4
  %v0_8954 = load i32, i32* @r4, align 4
  store i32 %v0_8954, i32* @r1, align 4
  %v0_8958 = load i32, i32* @r5, align 4
  %v1_895c = call i32 @function_8258(i32 %v0_8958)
  %v0_8968 = load i32, i32* @r4, align 4
  store i32 %v0_8968, i32* %r1.global-to-local, align 4
  store i32 18, i32* %r2.global-to-local, align 4
  %v0_8970 = load i32, i32* @sb, align 4
  store i32 %v0_8970, i32* %r3.global-to-local, align 4
  ret i32 %v1_895c

; uselistorder directives
  uselistorder i32 %v1_87c4, { 1, 0 }
  uselistorder i32 %v3_87ac, { 1, 0 }
  uselistorder i32 %v1_8778, { 1, 0 }
  uselistorder i32 %v3_8760, { 1, 0 }
  uselistorder i32 %v1_872c, { 1, 0 }
  uselistorder i32 %v3_8714, { 1, 0 }
  uselistorder i32 %v1_86e0, { 1, 0 }
  uselistorder i32 %v3_86c8, { 1, 0 }
  uselistorder i32 %v1_8694, { 1, 0 }
  uselistorder i32 %v3_867c, { 1, 0 }
  uselistorder i32 %v1_8648, { 1, 0 }
  uselistorder i32 %v6_8634, { 1, 2, 0, 3 }
  uselistorder i32 %v3_8630, { 1, 0 }
  uselistorder i32 %v1_85fc, { 1, 0 }
  uselistorder i32 %v3_85e4, { 1, 0 }
  uselistorder i32 %v2_85c0, { 1, 0 }
  uselistorder i32 %v6_859c, { 1, 2, 0, 3 }
  uselistorder i32 %v3_8598, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 32, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i32* %r2.global-to-local, { 20, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i32* %r1.global-to-local, { 33, 34, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i8* bitcast (i8** @global_var_1f5b4.18 to i8*), { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i8* @global_var_1f5b5.22 to i32), { 2, 1, 0 }
  uselistorder i8** @global_var_1f5b4.18, { 1, 0 }
}

define i32 @function_8974() local_unnamed_addr {
dec_label_pc_8974:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp35 = call i16 @__decompiler_undefined_function_2()
  %tmp36 = call i8 @__decompiler_undefined_function_3()
  %tmp38 = call i32 @__decompiler_undefined_function_0()
  %tmp43 = call i32 @__decompiler_undefined_function_0()
  %tmp50 = call i32 @__decompiler_undefined_function_0()
  %tmp51 = call i32 @__decompiler_undefined_function_0()
  %stack_var_98 = alloca i32, align 4
  %stack_var_96 = alloca i32, align 4
  %stack_var_100 = alloca i32, align 4
  %stack_var_104 = alloca i32, align 4
  %stack_var_108 = alloca i32, align 4
  %v0_8974 = load i32, i32* @r5, align 4
  store i32 %v0_8974, i32* %r0.global-to-local, align 4
  %v0_8978 = load i32, i32* @ip, align 4
  %v1_897c = call i32 @function_8258(i32 %v0_8974)
  %v0_8984 = load i32, i32* @r4, align 4
  store i32 %v0_8984, i32* @r1, align 4
  %v2_8988 = load i32, i32* @global_var_21644.39, align 4
  store i32 %v2_8988, i32* @r3, align 4
  store i32 %v1_897c, i32* @r7, align 4
  store i32 19, i32* @r2, align 4
  %v0_8994 = load i32, i32* @r5, align 4
  store i32 %v0_8994, i32* %r0.global-to-local, align 4
  %v1_8998 = call i32 @function_8258(i32 %v0_8994)
  %v0_89a0 = load i32, i32* @sb, align 4
  store i32 %v0_89a0, i32* %r0.global-to-local, align 4
  %v1_89a4 = inttoptr i32 %v0_89a0 to i32*
  %v2_89a4 = call i32 @function_111c8(i32* %v1_89a4)
  %v1_89a8 = load i32, i32* @r6, align 4
  %v2_89a8 = add i32 %v1_89a8, %v2_89a4
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_89bc = call i32 @function_11d30(i32 2, i32 3, i32 6)
  store i32 %v3_89bc, i32* %r0.global-to-local, align 4
  %v7_89c0 = icmp eq i32 %v3_89bc, -1
  store i1 %v7_89c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_89c0, label %dec_label_pc_8ef8, label %dec_label_pc_89cc

dec_label_pc_89cc:                                ; preds = %dec_label_pc_8974
  store i32 1, i32* %stack_var_108, align 4
  %v6_89d4 = ptrtoint i32* %stack_var_108 to i32
  store i32 %v6_89d4, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_89dc = load i32, i32* @sb, align 4
  store i32 %v0_89dc, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_89e8 = call i32 @function_11cec(i32 %v3_89bc, i32 %v0_89dc, i32 3, i32 %v6_89d4, i32 4)
  store i32 %v5_89e8, i32* %r0.global-to-local, align 4
  %v7_89ec = icmp eq i32 %v5_89e8, -1
  store i1 %v7_89ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_89ec, label %dec_label_pc_8f04, label %dec_label_pc_89f4

dec_label_pc_89f4:                                ; preds = %dec_label_pc_89cc
  store i32 %tmp50, i32* %r2.global-to-local, align 4
  %v3_89fc = mul i32 %tmp51, 65536
  store i32 %v3_89fc, i32* %r1.global-to-local, align 4
  %v0_8a00 = load i32, i32* @r8, align 4
  %v0_8a04 = load i32, i32* @fp, align 4
  %v0_8a08 = load i32, i32* @r7, align 4
  %v1_8a08 = urem i32 %v0_8a08, 256
  store i32 %v1_8a08, i32* @r7, align 4
  %v3_8a0c = urem i32 %v0_8a04, 65536
  store i32 %v3_8a0c, i32* %r3.global-to-local, align 4
  %v3_8a10 = urem i32 %tmp51, 65536
  store i32 %v3_8a10, i32* %ip.global-to-local, align 4
  %v3_8a14 = urem i32 %v0_8a00, 65536
  %v2_8a18 = icmp eq i32 %tmp50, 0
  store i1 %v2_8a18, i1* %cpsr_z.global-to-local, align 1
  %v0_8a28 = load i32, i32* @sb, align 4
  store i32 %v0_8a28, i32* %stack_var_108, align 4
  br i1 %v2_8a18, label %dec_label_pc_8c30.preheader, label %dec_label_pc_8a3c

dec_label_pc_8a3c:                                ; preds = %dec_label_pc_89f4
  %v3_8a00 = mul i32 %v0_8a00, 65536
  %v3_8a40 = mul i32 %tmp43, 65536
  %v1_8a44 = add i32 %v3_8a40, 4325376
  %v0_8a04.not = or i32 %v0_8a04, -65536
  %v1_8a48 = xor i32 %v0_8a04.not, 65535
  %v3_8a54 = mul i32 %v1_8a48, 65536
  store i32 %v3_8a54, i32* @r6, align 4
  %tmp65 = udiv i32 %v1_8a44, 256
  %v3_8a6c = and i32 %tmp65, 65280
  store i32 %v3_8a6c, i32* %r3.global-to-local, align 4
  %v1_8a70 = add i32 %v3_8a40, 524288
  %tmp66 = mul i32 %v0_8a04, 256
  %v3_8a74 = and i32 %tmp66, 65280
  %v1_8a78 = add i32 %v3_8a40, 1835008
  %tmp67 = mul nsw i32 %v1_8a48, 256
  %v3_8a7c = and i32 %tmp67, 65280
  %v4_8a80 = udiv i32 %v1_8a44, 16777216
  %v5_8a80 = or i32 %v4_8a80, %tmp65
  %v3_8a88 = udiv i32 %v1_8a78, 256
  %v5_8a8c = trunc i32 %v5_8a80 to i16
  %tmp68 = udiv i32 %v0_8a04, 256
  %v4_8a90 = urem i32 %tmp68, 256
  %v5_8a90 = or i32 %v4_8a90, %v3_8a74
  store i32 %v5_8a90, i32* @r7, align 4
  %tmp69 = udiv i32 %v1_8a48, 256
  %v4_8a94 = urem i32 %tmp69, 256
  %v5_8a94 = or i32 %v4_8a94, %v3_8a7c
  store i32 %v5_8a94, i32* @fp, align 4
  store i32 %v3_8a00, i32* %r2.global-to-local, align 4
  store i32 %v3_89fc, i32* %r1.global-to-local, align 4
  %v1_8aa0 = and i32 %v3_8a88, 65280
  %tmp70 = mul i32 %tmp51, 256
  %v3_8aa4 = and i32 %tmp70, 65280
  %tmp71 = mul i32 %v0_8a00, 256
  %v3_8aa8 = and i32 %tmp71, 65280
  %v4_8ab0 = udiv i32 %v1_8a78, 16777216
  %v5_8ab0 = or i32 %v1_8aa0, %v4_8ab0
  store i32 %v5_8ab0, i32* @r5, align 4
  %tmp72 = udiv i32 %tmp51, 256
  %v4_8ab4 = urem i32 %tmp72, 256
  %v5_8ab4 = or i32 %v4_8ab4, %v3_8aa4
  store i32 %v5_8ab4, i32* %r0.global-to-local, align 4
  %tmp73 = udiv i32 %v0_8a00, 256
  %v4_8ab8 = urem i32 %tmp73, 256
  %v5_8ab8 = or i32 %v4_8ab8, %v3_8aa8
  store i32 %v5_8ab8, i32* %ip.global-to-local, align 4
  %tmp74 = udiv i32 %v1_8a70, 256
  %v3_8abc = and i32 %tmp74, 65280
  store i32 %v3_8abc, i32* @lr, align 4
  %v5_8ac8 = trunc i32 %v5_8ab0 to i16
  %v4_8acc = udiv i32 %v1_8a70, 16777216
  %v5_8acc = or i32 %v3_8abc, %v4_8acc
  store i32 %v5_8acc, i32* @r8, align 4
  store i32 %v0_8a28, i32* @r4, align 4
  %v4_8b28 = sext i8 %tmp36 to i32
  %v4_8b30 = sext i16 %tmp35 to i32
  %v1_8b34 = trunc i16 %tmp35 to i8
  %v2_8be8 = icmp eq i32 %v1_8a08, 0
  %sext = mul nuw i32 %v5_8ab4, 65536
  %v4_8c0c = sdiv i32 %sext, 65536
  %sext7 = mul nuw i32 %v5_8ab8, 65536
  %v4_8c14 = sdiv i32 %sext7, 65536
  br label %dec_label_pc_8ad4

dec_label_pc_8ad4:                                ; preds = %bb77, %dec_label_pc_8a3c
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_8ae0 = call i32 @function_12898(i32 1510, i32 4)
  store i32 %v2_8ae0, i32* %r0.global-to-local, align 4
  %v3_8ae8 = load i32, i32* %stack_var_108, align 4
  store i32 %v3_8ae8, i32* %r2.global-to-local, align 4
  %v2_8aec = load i32, i32* @r4, align 4
  %v5_8aec = mul i32 %v2_8aec, 4
  %v6_8aec = add i32 %v5_8aec, %tmp38
  %v7_8aec = inttoptr i32 %v6_8aec to i32*
  store i32 %v2_8ae0, i32* %v7_8aec, align 4
  store i32 %tmp38, i32* %r1.global-to-local, align 4
  %v0_8af4 = load i32, i32* %r2.global-to-local, align 4
  %v3_8af4 = mul i32 %v0_8af4, 32
  store i32 %v3_8af4, i32* %r3.global-to-local, align 4
  %v4_8af8 = mul i32 %v0_8af4, 4
  %v5_8af8 = add i32 %v4_8af8, %tmp38
  %v6_8af8 = inttoptr i32 %v5_8af8 to i32*
  %v7_8af8 = load i32, i32* %v6_8af8, align 4
  store i32 %v7_8af8, i32* %r4.global-to-local, align 4
  %v5_8afc = mul i32 %v0_8af4, 24
  store i32 %v5_8afc, i32* %r3.global-to-local, align 4
  %v1_8b00 = load i32, i32* @sl, align 4
  %v2_8b00 = add i32 %v1_8b00, %v5_8afc
  store i32 %v2_8b00, i32* %lr.global-to-local, align 4
  %v1_8b04 = inttoptr i32 %v7_8af8 to i8*
  %v2_8b04 = load i8, i8* %v1_8b04, align 1
  %tmp = urem i8 %v2_8b04, 16
  %v1_8b08 = zext i8 %tmp to i32
  %v1_8b0c = or i32 %v1_8b08, 64
  store i32 %v1_8b0c, i32* %r3.global-to-local, align 4
  %v1_8b10 = trunc i32 %v1_8b0c to i8
  store i8 %v1_8b10, i8* %v1_8b04, align 1
  %v0_8b14 = load i32, i32* %r4.global-to-local, align 4
  %v1_8b14 = inttoptr i32 %v0_8b14 to i8*
  %v2_8b14 = load i8, i8* %v1_8b14, align 1
  %v1_8b18 = and i8 %v2_8b14, -16
  %v1_8b1c = or i8 %v1_8b18, 5
  store i8 %v1_8b1c, i8* %v1_8b14, align 1
  store i32 %v4_8b28, i32* %r1.global-to-local, align 4
  %v2_8b2c = load i32, i32* %r4.global-to-local, align 4
  %v3_8b2c = add i32 %v2_8b2c, 1
  %v4_8b2c = inttoptr i32 %v3_8b2c to i8*
  store i8 %tmp36, i8* %v4_8b2c, align 1
  store i32 %v4_8b30, i32* %r2.global-to-local, align 4
  %v2_8b34 = load i32, i32* %r4.global-to-local, align 4
  %v3_8b34 = add i32 %v2_8b34, 8
  %v4_8b34 = inttoptr i32 %v3_8b34 to i8*
  store i8 %v1_8b34, i8* %v4_8b34, align 1
  %v0_8b38 = load i32, i32* %r3.global-to-local, align 4
  %v2_8b38 = icmp eq i32 %v0_8b38, 0
  store i1 %v2_8b38, i1* %cpsr_z.global-to-local, align 1
  %v2_8b40 = load i32, i32* %r4.global-to-local, align 4
  %v3_8b40 = add i32 %v2_8b40, 2
  %v4_8b40 = inttoptr i32 %v3_8b40 to i16*
  store i16 %v5_8a8c, i16* %v4_8b40, align 2
  %v2_8b48 = load i32, i32* %r4.global-to-local, align 4
  %v3_8b48 = add i32 %v2_8b48, 9
  %v4_8b48 = inttoptr i32 %v3_8b48 to i8*
  store i8 47, i8* %v4_8b48, align 1
  store i32 %v1_8998, i32* %r3.global-to-local, align 4
  %v1_8b50 = load i32, i32* %r4.global-to-local, align 4
  %v2_8b50 = add i32 %v1_8b50, 12
  %v3_8b50 = inttoptr i32 %v2_8b50 to i32*
  store i32 %v1_8998, i32* %v3_8b50, align 4
  %v0_8b54 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_8b54, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_8ad4
  store i32 64, i32* %r2.global-to-local, align 4
  %v3_8b58 = load i32, i32* %r4.global-to-local, align 4
  %v4_8b58 = add i32 %v3_8b58, 6
  %v5_8b58 = inttoptr i32 %v4_8b58 to i16*
  store i16 64, i16* %v5_8b58, align 2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_8ad4, %bb
  %v0_8b5c = load i32, i32* %lr.global-to-local, align 4
  %v1_8b5c = add i32 %v0_8b5c, 16
  %v2_8b5c = inttoptr i32 %v1_8b5c to i32*
  %v3_8b5c = load i32, i32* %v2_8b5c, align 4
  store i32 22528, i32* %ip.global-to-local, align 4
  %v1_8b64 = load i32, i32* %r4.global-to-local, align 4
  %v2_8b64 = add i32 %v1_8b64, 16
  %v3_8b64 = inttoptr i32 %v2_8b64 to i32*
  store i32 %v3_8b5c, i32* %v3_8b64, align 4
  %v0_8b68 = load i32, i32* %r4.global-to-local, align 4
  %v1_8b68 = add i32 %v0_8b68, 24
  store i32 %v1_8b68, i32* %r0.global-to-local, align 4
  %v1_8b6c = add i32 %v0_8b68, 20
  store i32 %v1_8b6c, i32* %r1.global-to-local, align 4
  %v0_8b70 = load i32, i32* %ip.global-to-local, align 4
  %v1_8b70 = add i32 %v0_8b70, 101
  store i32 %v1_8b70, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v0_8b7c = load i32, i32* @r7, align 4
  %v1_8b7c = trunc i32 %v0_8b7c to i16
  %v3_8b7c = add i32 %v0_8b68, 4
  %v4_8b7c = inttoptr i32 %v3_8b7c to i16*
  store i16 %v1_8b7c, i16* %v4_8b7c, align 2
  %v0_8b80 = load i32, i32* %ip.global-to-local, align 4
  %v1_8b80 = trunc i32 %v0_8b80 to i16
  %v2_8b80 = load i32, i32* %r1.global-to-local, align 4
  %v3_8b80 = add i32 %v2_8b80, 2
  %v4_8b80 = inttoptr i32 %v3_8b80 to i16*
  store i16 %v1_8b80, i16* %v4_8b80, align 2
  %v0_8b84 = load i32, i32* %r3.global-to-local, align 4
  %v1_8b84 = trunc i32 %v0_8b84 to i8
  %v2_8b84 = load i32, i32* %r0.global-to-local, align 4
  %v3_8b84 = add i32 %v2_8b84, 13
  %v4_8b84 = inttoptr i32 %v3_8b84 to i8*
  store i8 %v1_8b84, i8* %v4_8b84, align 1
  %v0_8b88 = load i32, i32* %r2.global-to-local, align 4
  %v1_8b88 = trunc i32 %v0_8b88 to i8
  %v2_8b88 = load i32, i32* %r0.global-to-local, align 4
  %v3_8b88 = add i32 %v2_8b88, 12
  %v4_8b88 = inttoptr i32 %v3_8b88 to i8*
  store i8 %v1_8b88, i8* %v4_8b88, align 1
  %v0_8b8c = load i32, i32* %r4.global-to-local, align 4
  %v1_8b8c = add i32 %v0_8b8c, 38
  %v2_8b8c = inttoptr i32 %v1_8b8c to i8*
  %v3_8b8c = load i8, i8* %v2_8b8c, align 1
  %tmp79 = urem i8 %v3_8b8c, 16
  %v1_8b90 = zext i8 %tmp79 to i32
  %v1_8b94 = or i32 %v1_8b90, 64
  store i32 %v1_8b94, i32* %r3.global-to-local, align 4
  %v1_8b98 = trunc i32 %v1_8b94 to i8
  store i8 %v1_8b98, i8* %v2_8b8c, align 1
  %v0_8b9c = load i32, i32* %r4.global-to-local, align 4
  %v1_8b9c = add i32 %v0_8b9c, 38
  %v2_8b9c = inttoptr i32 %v1_8b9c to i8*
  %v3_8b9c = load i8, i8* %v2_8b9c, align 1
  %v4_8b9c = zext i8 %v3_8b9c to i32
  %v1_8ba0 = and i32 %v4_8b9c, 240
  %v1_8ba4 = or i32 %v1_8ba0, 5
  store i32 %v1_8ba4, i32* %r2.global-to-local, align 4
  %v1_8ba8 = trunc i32 %v1_8ba4 to i8
  store i8 %v1_8ba8, i8* %v2_8b9c, align 1
  store i32 %v4_8b28, i32* %ip.global-to-local, align 4
  %v0_8bb0 = load i32, i32* %r4.global-to-local, align 4
  %v1_8bb0 = add i32 %v0_8bb0, 38
  store i32 %v1_8bb0, i32* @r5, align 4
  %v3_8bb4 = add i32 %v0_8bb0, 39
  %v4_8bb4 = inttoptr i32 %v3_8bb4 to i8*
  store i8 %tmp36, i8* %v4_8bb4, align 1
  store i32 %v5_8ab0, i32* %lr.global-to-local, align 4
  %v2_8bbc = load i32, i32* @r5, align 4
  %v3_8bbc = add i32 %v2_8bbc, 2
  %v4_8bbc = inttoptr i32 %v3_8bbc to i16*
  store i16 %v5_8ac8, i16* %v4_8bbc, align 2
  store i32 %v4_8b30, i32* %r1.global-to-local, align 4
  %v0_8bc4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_8bc4, label %.thread8, label %bb75

.thread8:                                         ; preds = %.thread
  store i32 17, i32* %r3.global-to-local, align 4
  br label %bb76

bb75:                                             ; preds = %.thread
  store i32 64, i32* %r2.global-to-local, align 4
  store i32 17, i32* %r3.global-to-local, align 4
  %v3_8bcc = load i32, i32* @r5, align 4
  %v4_8bcc = add i32 %v3_8bcc, 6
  %v5_8bcc = inttoptr i32 %v4_8bcc to i16*
  store i16 64, i16* %v5_8bcc, align 2
  %v0_8bd0.pre = load i32, i32* %r1.global-to-local, align 4
  %extract.t22 = trunc i32 %v0_8bd0.pre to i8
  br label %bb76

bb76:                                             ; preds = %.thread8, %bb75
  %v0_8bd0.off0 = phi i8 [ %v1_8b34, %.thread8 ], [ %extract.t22, %bb75 ]
  %v2_8bd0 = load i32, i32* @r5, align 4
  %v3_8bd0 = add i32 %v2_8bd0, 8
  %v4_8bd0 = inttoptr i32 %v3_8bd0 to i8*
  store i8 %v0_8bd0.off0, i8* %v4_8bd0, align 1
  %v0_8bd4 = load i32, i32* %r3.global-to-local, align 4
  %v1_8bd4 = trunc i32 %v0_8bd4 to i8
  %v2_8bd4 = load i32, i32* @r5, align 4
  %v3_8bd4 = add i32 %v2_8bd4, 9
  %v4_8bd4 = inttoptr i32 %v3_8bd4 to i8*
  store i8 %v1_8bd4, i8* %v4_8bd4, align 1
  %v0_8bd8 = load i32, i32* @fp, align 4
  %v1_8bd8 = trunc i32 %v0_8bd8 to i16
  %v2_8bd8 = load i32, i32* @r5, align 4
  %v3_8bd8 = add i32 %v2_8bd8, 4
  %v4_8bd8 = inttoptr i32 %v3_8bd8 to i16*
  store i16 %v1_8bd8, i16* %v4_8bd8, align 2
  %v0_8bdc = call i32 @function_d398()
  store i32 %v0_8bdc, i32* %r0.global-to-local, align 4
  store i32 %v1_8a08, i32* %ip.global-to-local, align 4
  store i1 %v2_8be8, i1* %cpsr_z.global-to-local, align 1
  %v1_8bec = sub i32 1023, %v0_8bdc
  store i32 %v1_8bec, i32* %r3.global-to-local, align 4
  br i1 %v2_8be8, label %.thread9, label %.thread10

.thread9:                                         ; preds = %bb76
  %v2_8bf4 = load i32, i32* @r5, align 4
  %v3_8bf4 = add i32 %v2_8bf4, 16
  %v4_8bf4 = inttoptr i32 %v3_8bf4 to i32*
  store i32 %v1_8bec, i32* %v4_8bf4, align 4
  br label %bb77

.thread10:                                        ; preds = %bb76
  %v1_8bf0 = load i32, i32* %r4.global-to-local, align 4
  %v2_8bf0 = add i32 %v1_8bf0, 16
  %v3_8bf0 = inttoptr i32 %v2_8bf0 to i32*
  %v4_8bf0 = load i32, i32* %v3_8bf0, align 4
  store i32 %v4_8bf0, i32* %r3.global-to-local, align 4
  %v2_8bf8 = load i32, i32* @r5, align 4
  %v3_8bf8 = add i32 %v2_8bf8, 16
  %v4_8bf8 = inttoptr i32 %v3_8bf8 to i32*
  store i32 %v4_8bf0, i32* %v4_8bf8, align 4
  br label %bb77

bb77:                                             ; preds = %.thread9, %.thread10
  %v1_8bfc = load i32, i32* @r5, align 4
  %v2_8bfc = add i32 %v1_8bfc, 12
  %v3_8bfc = inttoptr i32 %v2_8bfc to i32*
  store i32 %v0_8bdc, i32* %v3_8bfc, align 4
  %v3_8c00 = load i32, i32* %stack_var_108, align 4
  store i32 %v3_8c00, i32* %r3.global-to-local, align 4
  store i32 %tmp50, i32* @lr, align 4
  %v0_8c08 = load i32, i32* %r4.global-to-local, align 4
  %v1_8c08 = add i32 %v0_8c08, 58
  store i32 %v1_8c08, i32* @r6, align 4
  store i32 %v4_8c0c, i32* %r1.global-to-local, align 4
  %v1_8c10 = add i32 %v3_8c00, 1
  store i32 %v1_8c10, i32* @r4, align 4
  store i32 %v4_8c14, i32* %r2.global-to-local, align 4
  %v9_8c18 = icmp eq i32 %v1_8c10, %tmp50
  store i1 %v9_8c18, i1* %cpsr_z.global-to-local, align 1
  %v0_8c1c = load i32, i32* @r8, align 4
  %v1_8c1c = trunc i32 %v0_8c1c to i16
  %v3_8c1c = add i32 %v0_8c08, 62
  %v4_8c1c = inttoptr i32 %v3_8c1c to i16*
  store i16 %v1_8c1c, i16* %v4_8c1c, align 2
  %v0_8c20 = load i32, i32* %r1.global-to-local, align 4
  %v1_8c20 = trunc i32 %v0_8c20 to i16
  %v2_8c20 = load i32, i32* @r6, align 4
  %v3_8c20 = inttoptr i32 %v2_8c20 to i16*
  store i16 %v1_8c20, i16* %v3_8c20, align 2
  %v0_8c24 = load i32, i32* %r2.global-to-local, align 4
  %v1_8c24 = trunc i32 %v0_8c24 to i16
  %v2_8c24 = load i32, i32* @r6, align 4
  %v3_8c24 = add i32 %v2_8c24, 2
  %v4_8c24 = inttoptr i32 %v3_8c24 to i16*
  store i16 %v1_8c24, i16* %v4_8c24, align 2
  %v0_8c28 = load i32, i32* @r4, align 4
  store i32 %v0_8c28, i32* %stack_var_108, align 4
  %v5_8c2c = icmp slt i32 %v1_8c10, %tmp50
  br i1 %v5_8c2c, label %dec_label_pc_8ad4, label %dec_label_pc_8c30.preheader

dec_label_pc_8c30.preheader:                      ; preds = %bb77, %dec_label_pc_89f4
  %v1_8c4c = add i32 %tmp43, 8
  %v1_8c50 = add i32 %tmp43, 66
  %v2_8c5c = icmp eq i32 %v1_8998, -1
  %v7_8c5c = icmp eq i32 %v1_8998, -1
  %v9_8e54 = icmp eq i32 %v3_8a0c, add (i32 ptrtoint (i32* @global_var_10000.37 to i32), i32 -1)
  %v2_8ea4 = icmp eq i32 %v1_8a08, 0
  %v2_8cb8 = ptrtoint i32* %stack_var_104 to i32
  %v2_8cd0 = ptrtoint i32* %stack_var_100 to i32
  %v2_8ce0 = ptrtoint i32* %stack_var_96 to i32
  %v2_8cec = ptrtoint i32* %stack_var_98 to i32
  %v2_8d00 = icmp eq i32 %v0_8978, 0
  br label %dec_label_pc_8c30

dec_label_pc_8c30:                                ; preds = %dec_label_pc_8c30.preheader, %dec_label_pc_8ee4
  store i1 %v2_8a18, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_108, align 4
  br i1 %v2_8a18, label %dec_label_pc_8ee4, label %dec_label_pc_8c44

dec_label_pc_8c44:                                ; preds = %dec_label_pc_8c30
  store i32 %tmp43, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v1_8c4c, i32* @fp, align 4
  store i32 %v1_8c50, i32* @sb, align 4
  br label %dec_label_pc_8db8

dec_label_pc_8c58:                                ; preds = %dec_label_pc_8db8
  store i32 %v1_8998, i32* %r1.global-to-local, align 4
  store i1 %v7_8c5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8c5c, label %dec_label_pc_8e44, label %dec_label_pc_8c64

dec_label_pc_8c64:                                ; preds = %dec_label_pc_8de4, %dec_label_pc_8c58
  store i32 %v3_8a0c, i32* %r2.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.37 to i32), i32 -1), i32* @r4, align 4
  store i1 %v9_8e54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_8e54, label %dec_label_pc_8e60, label %dec_label_pc_8c78

dec_label_pc_8c78:                                ; preds = %dec_label_pc_8e44.dec_label_pc_8c78_crit_edge, %dec_label_pc_8c64
  %v1_8c7c = phi i32 [ %v1_8c7c.pre, %dec_label_pc_8e44.dec_label_pc_8c78_crit_edge ], [ add (i32 ptrtoint (i32* @global_var_10000.37 to i32), i32 -1), %dec_label_pc_8c64 ]
  store i32 %v3_8a10, i32* %r3.global-to-local, align 4
  %v9_8c7c = icmp eq i32 %v3_8a10, %v1_8c7c
  store i1 %v9_8c7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_8c7c, label %dec_label_pc_8e88, label %dec_label_pc_8c84

dec_label_pc_8c84:                                ; preds = %dec_label_pc_8e60, %dec_label_pc_8c78
  %v1_8c88 = phi i32 [ %v1_8e80, %dec_label_pc_8e60 ], [ %v1_8c7c, %dec_label_pc_8c78 ]
  store i32 %v3_8a14, i32* %ip.global-to-local, align 4
  %v9_8c88 = icmp eq i32 %v3_8a14, %v1_8c88
  store i1 %v9_8c88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_8c88, label %dec_label_pc_8e9c, label %dec_label_pc_8c90

dec_label_pc_8c90:                                ; preds = %dec_label_pc_8e88, %dec_label_pc_8c84
  store i32 %v1_8a08, i32* @lr, align 4
  store i1 %v2_8ea4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8ea4, label %dec_label_pc_8eb8, label %.thread11

.thread11:                                        ; preds = %dec_label_pc_8c90
  %v1_8c98 = load i32, i32* @r5, align 4
  %v2_8c98 = add i32 %v1_8c98, 16
  %v3_8c98 = inttoptr i32 %v2_8c98 to i32*
  %v4_8c98 = load i32, i32* %v3_8c98, align 4
  store i32 %v4_8c98, i32* %r3.global-to-local, align 4
  %v2_8c9c = load i32, i32* @r6, align 4
  %v3_8c9c = add i32 %v2_8c9c, 16
  %v4_8c9c = inttoptr i32 %v3_8c9c to i32*
  store i32 %v4_8c98, i32* %v4_8c9c, align 4
  br label %dec_label_pc_8ca4

dec_label_pc_8ca4:                                ; preds = %bb78, %.thread11, %dec_label_pc_8eb8
  %v0_8ca4 = call i32 @function_d398()
  store i32 %v0_8ca4, i32* %r0.global-to-local, align 4
  store i32 %v0_8ca4, i32* %stack_var_104, align 4
  %v0_8cac = call i32 @function_d398()
  store i32 %v0_8cac, i32* %r0.global-to-local, align 4
  store i32 %v0_8cac, i32* %stack_var_100, align 4
  %v0_8cb4 = call i32 @function_d398()
  store i32 %v2_8cb8, i32* %r1.global-to-local, align 4
  store i32 %v0_8cb4, i32* %stack_var_96, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_8cc4 = load i32, i32* @r7, align 4
  store i32 %v0_8cc4, i32* %r0.global-to-local, align 4
  %v3_8cc8 = call i32 @function_10bac(i32 %v0_8cc4, i32 %v2_8cb8, i32 4)
  %v0_8ccc = load i32, i32* @r7, align 4
  %v1_8ccc = add i32 %v0_8ccc, 6
  store i32 %v1_8ccc, i32* %r0.global-to-local, align 4
  store i32 %v2_8cd0, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v3_8cd8 = call i32 @function_10bac(i32 %v1_8ccc, i32 %v2_8cd0, i32 4)
  %v0_8cdc = load i32, i32* @r7, align 4
  %v1_8cdc = add i32 %v0_8cdc, 4
  store i32 %v1_8cdc, i32* %r0.global-to-local, align 4
  store i32 %v2_8ce0, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v3_8ce8 = call i32 @function_10bac(i32 %v1_8cdc, i32 %v2_8ce0, i32 2)
  store i32 %v2_8cec, i32* %r1.global-to-local, align 4
  %v0_8cf0 = load i32, i32* @r7, align 4
  %v1_8cf0 = add i32 %v0_8cf0, 10
  store i32 %v1_8cf0, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v3_8cf8 = call i32 @function_10bac(i32 %v1_8cf0, i32 %v2_8cec, i32 2)
  store i32 %v3_8cf8, i32* %r0.global-to-local, align 4
  store i32 %v0_8978, i32* %r1.global-to-local, align 4
  store i1 %v2_8d00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8d00, label %dec_label_pc_8d08, label %dec_label_pc_8ec4

dec_label_pc_8d08:                                ; preds = %dec_label_pc_8ca4, %dec_label_pc_8ec4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_8d0c = load i32, i32* @r5, align 4
  %v3_8d0c = add i32 %v2_8d0c, 10
  %v4_8d0c = inttoptr i32 %v3_8d0c to i16*
  store i16 0, i16* %v4_8d0c, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_8d14 = load i32, i32* @r5, align 4
  store i32 %v0_8d14, i32* @r0, align 4
  %v2_8d18 = call i32 @function_bf78(i32 %v0_8d14, i32 20)
  %v3_8d18 = trunc i32 %v2_8d18 to i16
  store i32 0, i32* %ip.global-to-local, align 4
  %v3_8d20 = load i32, i32* @r5, align 4
  %v4_8d20 = add i32 %v3_8d20, 10
  %v5_8d20 = inttoptr i32 %v4_8d20 to i16*
  store i16 %v3_8d18, i16* %v5_8d20, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_8d28 = load i32, i32* %ip.global-to-local, align 4
  %v1_8d28 = trunc i32 %v0_8d28 to i16
  %v2_8d28 = load i32, i32* @r6, align 4
  %v3_8d28 = add i32 %v2_8d28, 10
  %v4_8d28 = inttoptr i32 %v3_8d28 to i16*
  store i16 %v1_8d28, i16* %v4_8d28, align 2
  %v0_8d2c = load i32, i32* @r6, align 4
  store i32 %v0_8d2c, i32* @r0, align 4
  %v2_8d30 = call i32 @function_bf78(i32 %v0_8d2c, i32 20)
  %v3_8d30 = trunc i32 %v2_8d30 to i16
  store i32 %v2_8d30, i32* %r0.global-to-local, align 4
  %v3_8d34 = load i32, i32* @r6, align 4
  %v4_8d34 = add i32 %v3_8d34, 10
  %v5_8d34 = inttoptr i32 %v4_8d34 to i16*
  store i16 %v3_8d30, i16* %v5_8d34, align 2
  %v2_8d3c = load i32, i32* @r8, align 4
  %v3_8d3c = add i32 %v2_8d3c, 6
  %v4_8d3c = inttoptr i32 %v3_8d3c to i16*
  store i16 0, i16* %v4_8d3c, align 2
  %v0_8d40 = load i32, i32* @r8, align 4
  store i32 %v0_8d40, i32* @r1, align 4
  %v1_8d44 = add i32 %v0_8d40, 4
  %v2_8d44 = inttoptr i32 %v1_8d44 to i16*
  %v3_8d44 = load i16, i16* %v2_8d44, align 2
  %v4_8d44 = zext i16 %v3_8d44 to i32
  store i32 %v4_8d44, i32* %r2.global-to-local, align 4
  %v0_8d48 = load i32, i32* @fp, align 4
  store i32 %v0_8d48, i32* %r3.global-to-local, align 4
  %v0_8d4c = load i32, i32* @r6, align 4
  store i32 %v0_8d4c, i32* %r0.global-to-local, align 4
  %v4_8d50 = call i32 @function_bfc8(i32 %v0_8d4c, i32 %v0_8d40, i32 %v4_8d44, i32 %v0_8d48)
  %v5_8d50 = trunc i32 %v4_8d50 to i16
  store i32 %v4_8d50, i32* %r0.global-to-local, align 4
  %v3_8d54 = load i32, i32* %stack_var_108, align 4
  store i32 %v3_8d54, i32* %r2.global-to-local, align 4
  %v3_8d58 = mul i32 %v3_8d54, 32
  store i32 %v3_8d58, i32* %r3.global-to-local, align 4
  %v0_8d5c = load i32, i32* @r5, align 4
  %v1_8d5c = add i32 %v0_8d5c, 16
  %v2_8d5c = inttoptr i32 %v1_8d5c to i32*
  %v3_8d5c = load i32, i32* %v2_8d5c, align 4
  %v5_8d60 = mul i32 %v3_8d54, 24
  store i32 %v5_8d60, i32* %r3.global-to-local, align 4
  %v1_8d64 = load i32, i32* @sl, align 4
  %v2_8d64 = add i32 %v1_8d64, %v5_8d60
  store i32 %v2_8d64, i32* @lr, align 4
  %v2_8d68 = add i32 %v2_8d64, 4
  %v3_8d68 = inttoptr i32 %v2_8d68 to i32*
  store i32 %v3_8d5c, i32* %v3_8d68, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_8d74 = load i32, i32* @r8, align 4
  %v4_8d74 = add i32 %v3_8d74, 6
  %v5_8d74 = inttoptr i32 %v4_8d74 to i16*
  store i16 %v5_8d50, i16* %v5_8d74, align 2
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_8d7c = load i32, i32* %r1.global-to-local, align 4
  %v1_8d7c = trunc i32 %v0_8d7c to i16
  %v2_8d7c = load i32, i32* %r3.global-to-local, align 4
  %v3_8d7c = load i32, i32* @sl, align 4
  %v4_8d7c = add i32 %v3_8d7c, %v2_8d7c
  %v5_8d7c = inttoptr i32 %v4_8d7c to i16*
  store i16 %v1_8d7c, i16* %v5_8d7c, align 2
  %v0_8d80 = load i32, i32* %r2.global-to-local, align 4
  %v1_8d80 = trunc i32 %v0_8d80 to i16
  %v2_8d80 = load i32, i32* @lr, align 4
  %v3_8d80 = add i32 %v2_8d80, 2
  %v4_8d80 = inttoptr i32 %v3_8d80 to i16*
  store i16 %v1_8d80, i16* %v4_8d80, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_8d88 = load i32, i32* @r5, align 4
  store i32 %v0_8d88, i32* %r1.global-to-local, align 4
  store i32 %v3_89bc, i32* %r0.global-to-local, align 4
  %v0_8d90 = load i32, i32* @sb, align 4
  store i32 %v0_8d90, i32* %r2.global-to-local, align 4
  %v0_8d94 = load i32, i32* @lr, align 4
  %v0_8d98 = load i32, i32* %ip.global-to-local, align 4
  %v6_8d9c = call i32 @function_11cac(i32 %v3_89bc, i32 %v0_8d88, i32 %v0_8d90, i32 16384, i32 %v0_8d94, i32 %v0_8d98)
  %v3_8da0 = load i32, i32* %stack_var_108, align 4
  %v1_8da4 = add i32 %v3_8da0, 1
  store i32 %v1_8da4, i32* %r0.global-to-local, align 4
  store i32 %tmp50, i32* %r3.global-to-local, align 4
  %v9_8dac = icmp eq i32 %v1_8da4, %tmp50
  store i1 %v9_8dac, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_8da4, i32* %stack_var_108, align 4
  %v6_8db4 = icmp slt i32 %v1_8da4, %tmp50
  br i1 %v6_8db4, label %dec_label_pc_8db8, label %dec_label_pc_8ee4

dec_label_pc_8db8:                                ; preds = %dec_label_pc_8d08, %dec_label_pc_8c44
  %v1_8dcc = phi i32 [ %v1_8da4, %dec_label_pc_8d08 ], [ 0, %dec_label_pc_8c44 ]
  %v5_8dbc = mul i32 %v1_8dcc, 24
  %v1_8dc0 = load i32, i32* @sl, align 4
  %v2_8dc0 = add i32 %v1_8dc0, %v5_8dbc
  store i32 %v2_8dc0, i32* %r3.global-to-local, align 4
  store i32 %tmp38, i32* %lr.global-to-local, align 4
  %v1_8dc8 = add i32 %v2_8dc0, 20
  %v2_8dc8 = inttoptr i32 %v1_8dc8 to i8*
  %v3_8dc8 = load i8, i8* %v2_8dc8, align 1
  %v4_8dc8 = zext i8 %v3_8dc8 to i32
  store i32 %v4_8dc8, i32* %r2.global-to-local, align 4
  %v4_8dcc = mul i32 %v1_8dcc, 4
  %v5_8dcc = add i32 %v4_8dcc, %tmp38
  %v6_8dcc = inttoptr i32 %v5_8dcc to i32*
  %v7_8dcc = load i32, i32* %v6_8dcc, align 4
  store i32 %v7_8dcc, i32* @r5, align 4
  %v2_8dd0 = icmp ugt i8 %v3_8dc8, 30
  %v7_8dd0 = icmp eq i8 %v3_8dc8, 31
  store i1 %v7_8dd0, i1* %cpsr_z.global-to-local, align 1
  %v1_8dd4 = add i32 %v7_8dcc, 24
  store i32 %v1_8dd4, i32* @r7, align 4
  %v1_8dd8 = add i32 %v7_8dcc, 38
  store i32 %v1_8dd8, i32* @r6, align 4
  %v1_8ddc = add i32 %v7_8dcc, 58
  store i32 %v1_8ddc, i32* @r8, align 4
  %v2_8de0 = xor i1 %v7_8dd0, true
  %v3_8de0 = and i1 %v2_8dd0, %v2_8de0
  br i1 %v3_8de0, label %dec_label_pc_8c58, label %dec_label_pc_8de4

dec_label_pc_8de4:                                ; preds = %dec_label_pc_8db8
  %v1_8de4 = add i32 %v2_8dc0, 16
  %v2_8de4 = inttoptr i32 %v1_8de4 to i32*
  %v3_8de4 = load i32, i32* %v2_8de4, align 4
  store i32 %v3_8de4, i32* %r4.global-to-local, align 4
  %v0_8de8 = call i32 @function_d398()
  store i32 %v0_8de8, i32* %r0.global-to-local, align 4
  %v3_8dec = load i32, i32* %stack_var_108, align 4
  %v5_8df4 = mul i32 %v3_8dec, 24
  %v1_8df8 = and i32 %v3_8de4, 16711680
  store i32 %v1_8df8, i32* %ip.global-to-local, align 4
  %v3_8dfc = udiv i32 %v3_8de4, 16777216
  %v4_8e00 = udiv i32 %v1_8df8, 256
  %v5_8e00 = or i32 %v4_8e00, %v3_8dfc
  store i32 %v5_8e00, i32* %r2.global-to-local, align 4
  %v1_8e04 = load i32, i32* @sl, align 4
  %v2_8e04 = add i32 %v1_8e04, %v5_8df4
  store i32 %v2_8e04, i32* %r1.global-to-local, align 4
  %v1_8e08 = and i32 %v3_8de4, 65280
  store i32 %v1_8e08, i32* %r3.global-to-local, align 4
  %v1_8e0c = add i32 %v2_8e04, 20
  %v2_8e0c = inttoptr i32 %v1_8e0c to i8*
  %v3_8e0c = load i8, i8* %v2_8e0c, align 1
  %v4_8e0c = zext i8 %v3_8e0c to i32
  store i32 %v4_8e0c, i32* %ip.global-to-local, align 4
  %v5_8e14 = call i32 @llvm.bswap.i32(i32 %v3_8de4)
  %v7_8e18 = lshr i32 %v0_8de8, %v4_8e0c
  %v8_8e18 = add i32 %v7_8e18, %v5_8e14
  store i32 %v8_8e18, i32* %r2.global-to-local, align 4
  %v1_8e1c = and i32 %v8_8e18, 16711680
  store i32 %v1_8e1c, i32* %r0.global-to-local, align 4
  store i32 %v1_8998, i32* %r1.global-to-local, align 4
  %v5_8e34 = call i32 @llvm.bswap.i32(i32 %v8_8e18)
  store i32 %v5_8e34, i32* %r3.global-to-local, align 4
  store i1 %v7_8c5c, i1* %cpsr_z.global-to-local, align 1
  %v1_8e3c = load i32, i32* @r5, align 4
  %v2_8e3c = add i32 %v1_8e3c, 16
  %v3_8e3c = inttoptr i32 %v2_8e3c to i32*
  store i32 %v5_8e34, i32* %v3_8e3c, align 4
  br i1 %v2_8c5c, label %dec_label_pc_8e44, label %dec_label_pc_8c64

dec_label_pc_8e44:                                ; preds = %dec_label_pc_8de4, %dec_label_pc_8c58
  %v0_8e44 = call i32 @function_d398()
  store i32 %v0_8e44, i32* %r0.global-to-local, align 4
  store i32 %v3_8a0c, i32* %r2.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.37 to i32), i32 -1), i32* @r4, align 4
  store i1 %v9_8e54, i1* %cpsr_z.global-to-local, align 1
  %v1_8e58 = load i32, i32* @r5, align 4
  %v2_8e58 = add i32 %v1_8e58, 12
  %v3_8e58 = inttoptr i32 %v2_8e58 to i32*
  store i32 %v0_8e44, i32* %v3_8e58, align 4
  br i1 %v9_8e54, label %dec_label_pc_8e60, label %dec_label_pc_8e44.dec_label_pc_8c78_crit_edge

dec_label_pc_8e44.dec_label_pc_8c78_crit_edge:    ; preds = %dec_label_pc_8e44
  %v1_8c7c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_8c78

dec_label_pc_8e60:                                ; preds = %dec_label_pc_8e44, %dec_label_pc_8c64
  %v0_8e60 = call i32 @function_d398()
  %v3_8e68 = urem i32 %v0_8e60, 65536
  store i32 %v3_8e68, i32* %r0.global-to-local, align 4
  %v1_8e70 = sub nsw i32 999, %v3_8e68
  store i32 %v1_8e70, i32* %r3.global-to-local, align 4
  %v1_8e74 = trunc i32 %v0_8e60 to i16
  %v2_8e74 = load i32, i32* @r5, align 4
  %v3_8e74 = add i32 %v2_8e74, 4
  %v4_8e74 = inttoptr i32 %v3_8e74 to i16*
  store i16 %v1_8e74, i16* %v4_8e74, align 2
  %v0_8e78 = load i32, i32* %r3.global-to-local, align 4
  %v1_8e78 = trunc i32 %v0_8e78 to i16
  %v2_8e78 = load i32, i32* @r6, align 4
  %v3_8e78 = add i32 %v2_8e78, 4
  %v4_8e78 = inttoptr i32 %v3_8e78 to i16*
  store i16 %v1_8e78, i16* %v4_8e78, align 2
  store i32 %v3_8a10, i32* %r3.global-to-local, align 4
  %v1_8e80 = load i32, i32* @r4, align 4
  %v9_8e80 = icmp eq i32 %v3_8a10, %v1_8e80
  store i1 %v9_8e80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_8e80, label %dec_label_pc_8e88, label %dec_label_pc_8c84

dec_label_pc_8e88:                                ; preds = %dec_label_pc_8e60, %dec_label_pc_8c78
  %v0_8e88 = call i32 @function_d398()
  %v1_8e88 = trunc i32 %v0_8e88 to i16
  store i32 %v0_8e88, i32* %r0.global-to-local, align 4
  store i32 %v3_8a14, i32* %ip.global-to-local, align 4
  %v1_8e90 = load i32, i32* @r4, align 4
  %v9_8e90 = icmp eq i32 %v3_8a14, %v1_8e90
  store i1 %v9_8e90, i1* %cpsr_z.global-to-local, align 1
  %v3_8e94 = load i32, i32* @r5, align 4
  %v4_8e94 = add i32 %v3_8e94, 58
  %v5_8e94 = inttoptr i32 %v4_8e94 to i16*
  store i16 %v1_8e88, i16* %v5_8e94, align 2
  br i1 %v9_8e90, label %dec_label_pc_8e9c, label %dec_label_pc_8c90

dec_label_pc_8e9c:                                ; preds = %dec_label_pc_8e88, %dec_label_pc_8c84
  %v0_8e9c = call i32 @function_d398()
  %v1_8e9c = trunc i32 %v0_8e9c to i16
  store i32 %v0_8e9c, i32* %r0.global-to-local, align 4
  store i32 %v1_8a08, i32* @lr, align 4
  store i1 %v2_8ea4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8ea4, label %.thread23, label %bb78

.thread23:                                        ; preds = %dec_label_pc_8e9c
  %v3_8eac24 = load i32, i32* @r8, align 4
  %v4_8eac25 = add i32 %v3_8eac24, 2
  %v5_8eac26 = inttoptr i32 %v4_8eac25 to i16*
  store i16 %v1_8e9c, i16* %v5_8eac26, align 2
  br label %dec_label_pc_8eb8

bb78:                                             ; preds = %dec_label_pc_8e9c
  %v1_8ea8 = load i32, i32* @r5, align 4
  %v2_8ea8 = add i32 %v1_8ea8, 16
  %v3_8ea8 = inttoptr i32 %v2_8ea8 to i32*
  %v4_8ea8 = load i32, i32* %v3_8ea8, align 4
  store i32 %v4_8ea8, i32* %r3.global-to-local, align 4
  %v3_8eac = load i32, i32* @r8, align 4
  %v4_8eac = add i32 %v3_8eac, 2
  %v5_8eac = inttoptr i32 %v4_8eac to i16*
  store i16 %v1_8e9c, i16* %v5_8eac, align 2
  %v1_8eb0 = load i32, i32* %r3.global-to-local, align 4
  %v2_8eb0 = load i32, i32* @r6, align 4
  %v3_8eb0 = add i32 %v2_8eb0, 16
  %v4_8eb0 = inttoptr i32 %v3_8eb0 to i32*
  store i32 %v1_8eb0, i32* %v4_8eb0, align 4
  br label %dec_label_pc_8ca4

dec_label_pc_8eb8:                                ; preds = %.thread23, %dec_label_pc_8c90
  %v0_8eb8 = call i32 @function_d398()
  store i32 %v0_8eb8, i32* %r0.global-to-local, align 4
  %v1_8ebc = load i32, i32* @r6, align 4
  %v2_8ebc = add i32 %v1_8ebc, 16
  %v3_8ebc = inttoptr i32 %v2_8ebc to i32*
  store i32 %v0_8eb8, i32* %v3_8ebc, align 4
  br label %dec_label_pc_8ca4

dec_label_pc_8ec4:                                ; preds = %dec_label_pc_8ca4
  %v0_8ec4 = load i32, i32* @r8, align 4
  %v1_8ec4 = add i32 %v0_8ec4, 8
  store i32 %v1_8ec4, i32* @r4, align 4
  store i32 %v1_8ec4, i32* %r0.global-to-local, align 4
  store i32 %tmp43, i32* %r1.global-to-local, align 4
  %v2_8ed0 = call i32 @function_d45c(i32 %v1_8ec4, i32 %tmp43)
  store i32 %v2_8ed0, i32* %r0.global-to-local, align 4
  store i32 %tmp43, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_8edc = load i32, i32* @r4, align 4
  %v4_8edc = add i32 %v2_8edc, %tmp43
  %v5_8edc = inttoptr i32 %v4_8edc to i8*
  store i8 0, i8* %v5_8edc, align 1
  br label %dec_label_pc_8d08

dec_label_pc_8ee4:                                ; preds = %dec_label_pc_8d08, %dec_label_pc_8c30
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_8ee8 = call i32 @function_111c8(i32* null)
  store i32 %v2_8ee8, i32* %r0.global-to-local, align 4
  store i32 %v2_89a8, i32* %ip.global-to-local, align 4
  %v9_8ef0 = icmp eq i32 %v2_89a8, %v2_8ee8
  store i1 %v9_8ef0, i1* %cpsr_z.global-to-local, align 1
  %v6_8ef4 = icmp slt i32 %v2_89a8, %v2_8ee8
  br i1 %v6_8ef4, label %dec_label_pc_8ef8, label %dec_label_pc_8c30

dec_label_pc_8ef8:                                ; preds = %dec_label_pc_8ee4, %dec_label_pc_8974, %dec_label_pc_8f04
  %v1_8f00 = phi i32 [ %v3_89bc, %dec_label_pc_8974 ], [ %v1_8f08, %dec_label_pc_8f04 ], [ %v2_8ee8, %dec_label_pc_8ee4 ]
  ret i32 %v1_8f00

dec_label_pc_8f04:                                ; preds = %dec_label_pc_89cc
  store i32 %v3_89bc, i32* %r0.global-to-local, align 4
  %v1_8f08 = call i32 @function_11548(i32 %v3_89bc)
  store i32 %v1_8f08, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8ef8

; uselistorder directives
  uselistorder i32 %v1_8f08, { 1, 0 }
  uselistorder i16 %v1_8e9c, { 1, 0 }
  uselistorder i32 %v0_8e9c, { 1, 0 }
  uselistorder i32 %v0_8e88, { 1, 0 }
  uselistorder i32 %v1_8e80, { 1, 0 }
  uselistorder i32 %v3_8e68, { 1, 0 }
  uselistorder i32 %v0_8e60, { 1, 0 }
  uselistorder i32 %v5_8e34, { 1, 0 }
  uselistorder i32 %v3_8de4, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v7_8dcc, { 2, 1, 0, 3 }
  uselistorder i32 %v1_8da4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_8d54, { 1, 0, 2 }
  uselistorder i32 %v4_8d50, { 1, 0 }
  uselistorder i32 %v2_8d30, { 1, 0 }
  uselistorder i1 %v2_8ea4, { 2, 3, 1, 0 }
  uselistorder i1 %v9_8e54, { 2, 3, 1, 0 }
  uselistorder i1 %v7_8c5c, { 2, 1, 0 }
  uselistorder i32 %v0_8bdc, { 1, 0, 2 }
  uselistorder i32 %v0_8af4, { 1, 2, 0 }
  uselistorder i32 %tmp65, { 1, 0 }
  uselistorder i32 %v1_8a48, { 2, 0, 1 }
  uselistorder i32 %v3_8a40, { 2, 1, 0 }
  uselistorder i1 %v2_8a18, { 1, 0, 2, 3 }
  uselistorder i32 %v3_8a0c, { 2, 1, 3, 0 }
  uselistorder i32 %v1_8a08, { 4, 3, 5, 1, 2, 0 }
  uselistorder i32 %v0_8a04, { 1, 0, 3, 2 }
  uselistorder i32 %v0_8a00, { 1, 0, 2, 3 }
  uselistorder i32 %v3_89fc, { 1, 0 }
  uselistorder i1 %v7_89ec, { 1, 0 }
  uselistorder i1 %v7_89c0, { 1, 0 }
  uselistorder i32 %v3_89bc, { 3, 4, 1, 5, 6, 2, 0, 7 }
  uselistorder i32 %v2_89a8, { 2, 1, 0 }
  uselistorder i32 %v1_8998, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32* %stack_var_108, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder i32 %tmp51, { 1, 0, 3, 2 }
  uselistorder i32 %tmp50, { 3, 7, 6, 1, 0, 5, 2, 4 }
  uselistorder i32 %tmp43, { 1, 7, 6, 5, 2, 4, 3, 0 }
  uselistorder i32 %tmp38, { 0, 4, 1, 3, 2 }
  uselistorder i8 %tmp36, { 0, 2, 1 }
  uselistorder i16 %tmp35, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 18, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 0, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 14, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28 }
  uselistorder i32* %r0.global-to-local, { 5, 6, 8, 7, 1, 9, 10, 12, 13, 11, 15, 14, 17, 16, 18, 0, 19, 20, 22, 21, 23, 24, 25, 26, 28, 27, 4, 29, 30, 31, 34, 32, 33, 3, 2, 35, 36, 37, 38 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 13, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder label %dec_label_pc_8ef8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8d08, { 1, 0 }
  uselistorder label %dec_label_pc_8ca4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8c30, { 1, 0 }
  uselistorder label %bb77, { 1, 0 }
  uselistorder label %bb76, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_8f14(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_8f14:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_8f14 = load i32, i32* @r4, align 4
  %v24_8f14 = load i32, i32* @fp, align 4
  %v27_8f14 = load i32, i32* @lr, align 4
  store i32 0, i32* @sb, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 %arg3, i32* @sl, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_8f40 = call i32 @function_12898(i32 %arg2, i32 4)
  %v0_8f44 = load i32, i32* @r4, align 4
  store i32 %v0_8f44, i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  %v0_8f50 = load i32, i32* @sb, align 4
  store i32 %v0_8f50, i32* @r3, align 4
  %v0_8f54 = load i32, i32* @r5, align 4
  %v1_8f58 = call i32 @function_8258(i32 %v0_8f54)
  %v1_8f64 = urem i32 %v1_8f58, 256
  store i32 %v1_8f64, i32* %ip.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.37 to i32), i32 -1), i32* @r3, align 4
  store i32 3, i32* @r2, align 4
  %v0_8f70 = load i32, i32* @r4, align 4
  store i32 %v0_8f70, i32* @r1, align 4
  %v0_8f74 = load i32, i32* @r5, align 4
  %v5_8f78 = trunc i32 %v1_8f58 to i8
  %v1_8f7c = call i32 @function_8258(i32 %v0_8f74)
  %v0_8f80 = load i32, i32* @r4, align 4
  store i32 %v0_8f80, i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  store i32 64, i32* @r3, align 4
  %v0_8f90 = load i32, i32* @r5, align 4
  %v1_8f94 = call i32 @function_8258(i32 %v0_8f90)
  %v1_8f9c = urem i32 %v1_8f94, 256
  store i32 %v1_8f9c, i32* %ip.global-to-local, align 4
  %v0_8fa0 = load i32, i32* @r4, align 4
  store i32 %v0_8fa0, i32* @r1, align 4
  store i32 5, i32* @r2, align 4
  store i32 1, i32* @r3, align 4
  %v0_8fac = load i32, i32* @r5, align 4
  %v1_8fb4 = call i32 @function_8258(i32 %v0_8fac)
  %v1_8fc0 = urem i32 %v1_8fb4, 256
  store i32 %v1_8fc0, i32* %ip.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.37 to i32), i32 -1), i32* @r3, align 4
  store i32 6, i32* @r2, align 4
  %v0_8fcc = load i32, i32* @r4, align 4
  store i32 %v0_8fcc, i32* @r1, align 4
  %v0_8fd0 = load i32, i32* @r5, align 4
  %v1_8fd8 = call i32 @function_8258(i32 %v0_8fd0)
  %v0_8fe0 = load i32, i32* @r4, align 4
  store i32 %v0_8fe0, i32* @r1, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.37 to i32), i32 -1), i32* @r3, align 4
  store i32 7, i32* @r2, align 4
  store i32 %v1_8fd8, i32* %fp.global-to-local, align 4
  %v0_8ff0 = load i32, i32* @r5, align 4
  %v1_8ff4 = call i32 @function_8258(i32 %v0_8ff0)
  %v0_8ff8 = load i32, i32* @r4, align 4
  store i32 %v0_8ff8, i32* @r1, align 4
  %v0_8ffc = load i32, i32* @sb, align 4
  store i32 %v0_8ffc, i32* @r2, align 4
  store i32 512, i32* @r3, align 4
  store i32 %v1_8ff4, i32* @r8, align 4
  %v0_9008 = load i32, i32* @r5, align 4
  %v1_900c = call i32 @function_8258(i32 %v0_9008)
  store i32 1, i32* @r2, align 4
  store i32 1, i32* @r3, align 4
  %v0_901c = load i32, i32* @r4, align 4
  store i32 %v0_901c, i32* @r1, align 4
  %v0_9020 = load i32, i32* @r5, align 4
  %v1_9024 = call i32 @function_8258(i32 %v0_9020)
  %v1_902c = urem i32 %v1_9024, 256
  store i32 %v1_902c, i32* %ip.global-to-local, align 4
  %v0_9030 = load i32, i32* @r4, align 4
  store i32 %v0_9030, i32* @r1, align 4
  store i32 18, i32* @r2, align 4
  %v0_9038 = load i32, i32* @sb, align 4
  store i32 %v0_9038, i32* @r3, align 4
  %v0_903c = load i32, i32* @r5, align 4
  %v1_9044 = call i32 @function_8258(i32 %v0_903c)
  %v0_904c = load i32, i32* @r4, align 4
  store i32 %v0_904c, i32* @r1, align 4
  %v2_9050 = load i32, i32* @global_var_21644.39, align 4
  store i32 %v2_9050, i32* @r3, align 4
  store i32 %v1_9044, i32* @r7, align 4
  store i32 19, i32* @r2, align 4
  %v0_905c = load i32, i32* @r5, align 4
  %v1_9060 = call i32 @function_8258(i32 %v0_905c)
  %v0_9068 = load i32, i32* @sb, align 4
  %v1_906c = inttoptr i32 %v0_9068 to i32*
  %v2_906c = call i32 @function_111c8(i32* %v1_906c)
  %v1_9070 = load i32, i32* @r6, align 4
  %v2_9070 = add i32 %v1_9070, %v2_906c
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_9084 = call i32 @function_11d30(i32 2, i32 3, i32 6)
  %v7_9088 = icmp eq i32 %v3_9084, -1
  store i1 %v7_9088, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9088, label %dec_label_pc_9558, label %dec_label_pc_9094

dec_label_pc_9094:                                ; preds = %dec_label_pc_8f14
  store i32 1, i32* %stack_var_-44, align 4
  %v6_909c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_909c, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_90a4 = load i32, i32* @sb, align 4
  store i32 %v0_90a4, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_90b0 = call i32 @function_11cec(i32 %v3_9084, i32 %v0_90a4, i32 3, i32 %v6_909c, i32 4)
  %v7_90b4 = icmp eq i32 %v5_90b0, -1
  store i1 %v7_90b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_90b4, label %dec_label_pc_9564, label %dec_label_pc_90bc

dec_label_pc_90bc:                                ; preds = %dec_label_pc_9094
  %v0_90bc = load i32, i32* %fp.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v0_90d0 = load i32, i32* @r8, align 4
  %v3_90d4 = mul i32 %v1_8f7c, 65536
  store i32 %v3_90d4, i32* %r1.global-to-local, align 4
  %v0_90d8 = load i32, i32* @r7, align 4
  %v1_90d8 = urem i32 %v0_90d8, 256
  store i32 %v1_90d8, i32* @r7, align 4
  %v3_90dc = urem i32 %v0_90bc, 65536
  store i32 %v3_90dc, i32* %r3.global-to-local, align 4
  %v3_90e0 = urem i32 %v0_90d0, 65536
  store i32 %v3_90e0, i32* %ip.global-to-local, align 4
  %v2_90e4 = icmp eq i32 %arg2, 0
  store i1 %v2_90e4, i1* %cpsr_z.global-to-local, align 1
  %v0_90f4 = load i32, i32* @sb, align 4
  store i32 %v0_90f4, i32* %stack_var_-44, align 4
  %v3_90f8 = urem i32 %v1_8f7c, 65536
  store i32 %v3_90f8, i32* @fp, align 4
  br i1 %v2_90e4, label %dec_label_pc_92ec.preheader, label %dec_label_pc_9108

dec_label_pc_9108:                                ; preds = %dec_label_pc_90bc
  %v3_90d0 = mul i32 %v0_90d0, 65536
  %v3_90bc = mul i32 %v0_90bc, 65536
  %v3_910c = mul i32 %v1_900c, 65536
  %v1_9110 = add i32 %v3_910c, 3407872
  %tmp68 = udiv i32 %v1_9110, 256
  %v3_911c = and i32 %tmp68, 65280
  %v1_8f7c.not = or i32 %v1_8f7c, -65536
  %v1_9120 = xor i32 %v1_8f7c.not, 65535
  %v4_9124 = udiv i32 %v1_9110, 16777216
  %v5_9124 = or i32 %v3_911c, %v4_9124
  store i32 %v3_90d4, i32* %r3.global-to-local, align 4
  %tmp69 = mul i32 %v1_8f7c, 256
  %v3_913c = and i32 %tmp69, 65280
  %tmp70 = mul nsw i32 %v1_9120, 256
  %v3_9140 = and i32 %tmp70, 65280
  %tmp71 = udiv i32 %v1_8f7c, 256
  %v4_9144 = urem i32 %tmp71, 256
  %v5_9144 = or i32 %v4_9144, %v3_913c
  %tmp72 = udiv i32 %v1_9120, 256
  %v4_914c = urem i32 %tmp72, 256
  %v5_914c = or i32 %v4_914c, %v3_9140
  store i32 %v5_914c, i32* @r6, align 4
  store i32 %v3_90bc, i32* %r1.global-to-local, align 4
  store i32 %v3_90d0, i32* %r2.global-to-local, align 4
  %v1_9160 = add i32 %v3_910c, 524288
  %tmp73 = mul i32 %v0_90bc, 256
  %v3_9164 = and i32 %tmp73, 65280
  %v1_9168 = add i32 %v3_910c, 1835008
  store i32 %v1_9168, i32* @r5, align 4
  %tmp74 = mul i32 %v0_90d0, 256
  %v3_916c = and i32 %tmp74, 65280
  %v3_9174 = udiv i32 %v1_9168, 256
  %tmp75 = udiv i32 %v0_90bc, 256
  %v4_9178 = urem i32 %tmp75, 256
  %v5_9178 = or i32 %v4_9178, %v3_9164
  %tmp76 = udiv i32 %v0_90d0, 256
  %v4_917c = urem i32 %tmp76, 256
  %v5_917c = or i32 %v4_917c, %v3_916c
  store i32 %v5_917c, i32* %ip.global-to-local, align 4
  %v1_9180 = and i32 %v3_9174, 65280
  %tmp77 = udiv i32 %v1_9160, 256
  %v3_9184 = and i32 %tmp77, 65280
  store i32 %v3_9184, i32* @lr, align 4
  %v4_9198 = udiv i32 %v1_9160, 16777216
  %v5_9198 = or i32 %v3_9184, %v4_9198
  store i32 %v5_9198, i32* @r7, align 4
  %v4_919c = udiv i32 %v1_9168, 16777216
  %v5_919c = or i32 %v1_9180, %v4_919c
  store i32 %v5_919c, i32* @r8, align 4
  store i32 %v0_90f4, i32* @r4, align 4
  %v4_91f4 = sext i8 %v5_8f78 to i32
  %v1_9200 = trunc i32 %v1_8f94 to i8
  %sext = mul nuw i32 %v5_9124, 65536
  %v4_9208 = sdiv i32 %sext, 65536
  %sext8 = mul nuw i32 %v5_9144, 65536
  %v4_920c = sdiv i32 %sext8, 65536
  %sext9 = mul nuw i32 %v5_914c, 65536
  %v4_9274 = sdiv i32 %sext9, 65536
  %v2_92a4 = icmp eq i32 %v1_90d8, 0
  %sext10 = mul nuw i32 %v5_9178, 65536
  %v4_92c8 = sdiv i32 %sext10, 65536
  %sext11 = mul nuw i32 %v5_917c, 65536
  %v4_92d0 = sdiv i32 %sext11, 65536
  %extract.t = trunc i32 %v4_9208 to i16
  br label %dec_label_pc_91a4

dec_label_pc_91a4:                                ; preds = %bb82, %dec_label_pc_9108
  store i32 4, i32* %r1.global-to-local, align 4
  %v2_91b0 = call i32 @function_12898(i32 1510, i32 4)
  store i32 %v2_8f40, i32* %ip.global-to-local, align 4
  %v2_91bc = load i32, i32* @r4, align 4
  %v5_91bc = mul i32 %v2_91bc, 4
  %v6_91bc = add i32 %v5_91bc, %v2_8f40
  %v7_91bc = inttoptr i32 %v6_91bc to i32*
  store i32 %v2_91b0, i32* %v7_91bc, align 4
  %v3_91c0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_91c0, i32* %r3.global-to-local, align 4
  %v0_91c4 = load i32, i32* %ip.global-to-local, align 4
  %v4_91c4 = mul i32 %v3_91c0, 4
  %v5_91c4 = add i32 %v0_91c4, %v4_91c4
  %v6_91c4 = inttoptr i32 %v5_91c4 to i32*
  %v7_91c4 = load i32, i32* %v6_91c4, align 4
  store i32 %v7_91c4, i32* %r4.global-to-local, align 4
  %v1_91c8 = inttoptr i32 %v7_91c4 to i8*
  %v2_91c8 = load i8, i8* %v1_91c8, align 1
  %tmp = urem i8 %v2_91c8, 16
  %v1_91cc = zext i8 %tmp to i32
  %v1_91d0 = or i32 %v1_91cc, 64
  store i32 %v1_91d0, i32* %r2.global-to-local, align 4
  %v1_91d4 = trunc i32 %v1_91d0 to i8
  store i8 %v1_91d4, i8* %v1_91c8, align 1
  %v0_91d8 = load i32, i32* %r3.global-to-local, align 4
  %v5_91dc = mul i32 %v0_91d8, 24
  store i32 %v5_91dc, i32* %r1.global-to-local, align 4
  %v0_91e0 = load i32, i32* %r4.global-to-local, align 4
  %v1_91e0 = inttoptr i32 %v0_91e0 to i8*
  %v2_91e0 = load i8, i8* %v1_91e0, align 1
  %v1_91e4 = and i8 %v2_91e0, -16
  %v1_91e8 = or i8 %v1_91e4, 5
  store i32 %v1_8fc0, i32* %lr.global-to-local, align 4
  store i8 %v1_91e8, i8* %v1_91e0, align 1
  store i32 %v4_91f4, i32* %r2.global-to-local, align 4
  %v2_91f8 = load i32, i32* %r4.global-to-local, align 4
  %v3_91f8 = add i32 %v2_91f8, 1
  %v4_91f8 = inttoptr i32 %v3_91f8 to i8*
  store i8 %v5_8f78, i8* %v4_91f8, align 1
  store i32 %v1_8f9c, i32* %r3.global-to-local, align 4
  %v2_9200 = load i32, i32* %r4.global-to-local, align 4
  %v3_9200 = add i32 %v2_9200, 8
  %v4_9200 = inttoptr i32 %v3_9200 to i8*
  store i8 %v1_9200, i8* %v4_9200, align 1
  %v0_9204 = load i32, i32* %lr.global-to-local, align 4
  %v2_9204 = icmp eq i32 %v0_9204, 0
  store i1 %v2_9204, i1* %cpsr_z.global-to-local, align 1
  store i32 %v4_9208, i32* %ip.global-to-local, align 4
  store i32 %v4_920c, i32* %lr.global-to-local, align 4
  br i1 %v2_9204, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_91a4
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_9214 = load i32, i32* %r4.global-to-local, align 4
  %v4_9214 = add i32 %v3_9214, 6
  %v5_9214 = inttoptr i32 %v4_9214 to i16*
  store i16 64, i16* %v5_9214, align 2
  %v0_9218.pre = load i32, i32* %ip.global-to-local, align 4
  %extract.t27 = trunc i32 %v0_9218.pre to i16
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_91a4, %bb
  %v0_9218.off0 = phi i16 [ %extract.t, %dec_label_pc_91a4 ], [ %extract.t27, %bb ]
  %v2_9218 = load i32, i32* %r4.global-to-local, align 4
  %v3_9218 = add i32 %v2_9218, 2
  %v4_9218 = inttoptr i32 %v3_9218 to i16*
  store i16 %v0_9218.off0, i16* %v4_9218, align 2
  %v0_921c = load i32, i32* %r4.global-to-local, align 4
  %v1_921c = add i32 %v0_921c, 20
  store i32 %v1_921c, i32* %r2.global-to-local, align 4
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 47, i32* %r3.global-to-local, align 4
  %v3_9228 = add i32 %v0_921c, 9
  %v4_9228 = inttoptr i32 %v3_9228 to i8*
  store i8 47, i8* %v4_9228, align 1
  %v0_922c = load i32, i32* %lr.global-to-local, align 4
  %v1_922c = trunc i32 %v0_922c to i16
  %v2_922c = load i32, i32* %r4.global-to-local, align 4
  %v3_922c = add i32 %v2_922c, 4
  %v4_922c = inttoptr i32 %v3_922c to i16*
  store i16 %v1_922c, i16* %v4_922c, align 2
  %v0_9230 = load i32, i32* %ip.global-to-local, align 4
  %v1_9230 = trunc i32 %v0_9230 to i16
  %v2_9230 = load i32, i32* %r2.global-to-local, align 4
  %v3_9230 = add i32 %v2_9230, 2
  %v4_9230 = inttoptr i32 %v3_9230 to i16*
  store i16 %v1_9230, i16* %v4_9230, align 2
  store i32 %v1_9060, i32* %lr.global-to-local, align 4
  %v0_9238 = load i32, i32* %r4.global-to-local, align 4
  %v1_9238 = add i32 %v0_9238, 24
  %v2_9238 = inttoptr i32 %v1_9238 to i8*
  %v3_9238 = load i8, i8* %v2_9238, align 1
  %v4_9238 = zext i8 %v3_9238 to i32
  store i32 %v4_9238, i32* %r2.global-to-local, align 4
  %v2_923c = add i32 %v0_9238, 12
  %v3_923c = inttoptr i32 %v2_923c to i32*
  store i32 %v1_9060, i32* %v3_923c, align 4
  %v0_9240 = load i32, i32* %r2.global-to-local, align 4
  %v1_9240 = and i32 %v0_9240, -241
  %v1_9244 = or i32 %v1_9240, 64
  store i32 %v1_9244, i32* %r2.global-to-local, align 4
  %v0_9248 = load i32, i32* %r1.global-to-local, align 4
  %v1_9248 = load i32, i32* @sl, align 4
  %v2_9248 = add i32 %v1_9248, %v0_9248
  store i32 %v2_9248, i32* %r1.global-to-local, align 4
  %v1_924c = add i32 %v2_9248, 16
  %v2_924c = inttoptr i32 %v1_924c to i32*
  %v3_924c = load i32, i32* %v2_924c, align 4
  store i32 %v3_924c, i32* %r1.global-to-local, align 4
  %v1_9250 = trunc i32 %v1_9244 to i8
  %v2_9250 = load i32, i32* %r4.global-to-local, align 4
  %v3_9250 = add i32 %v2_9250, 24
  %v4_9250 = inttoptr i32 %v3_9250 to i8*
  store i8 %v1_9250, i8* %v4_9250, align 1
  %v0_9254 = load i32, i32* %r4.global-to-local, align 4
  %v1_9254 = add i32 %v0_9254, 24
  %v2_9254 = inttoptr i32 %v1_9254 to i8*
  %v3_9254 = load i8, i8* %v2_9254, align 1
  %v1_9258 = and i8 %v3_9254, -16
  %v1_925c = or i8 %v1_9258, 5
  store i8 %v1_925c, i8* %v2_9254, align 1
  %v0_9264 = load i32, i32* %r1.global-to-local, align 4
  %v1_9264 = load i32, i32* %r4.global-to-local, align 4
  %v2_9264 = add i32 %v1_9264, 16
  %v3_9264 = inttoptr i32 %v2_9264 to i32*
  store i32 %v0_9264, i32* %v3_9264, align 4
  store i32 %v4_91f4, i32* %r1.global-to-local, align 4
  %v0_926c = load i32, i32* %r4.global-to-local, align 4
  %v1_926c = add i32 %v0_926c, 24
  store i32 %v1_926c, i32* @r5, align 4
  %v3_9270 = add i32 %v0_926c, 25
  %v4_9270 = inttoptr i32 %v3_9270 to i8*
  store i8 %v5_8f78, i8* %v4_9270, align 1
  store i32 %v4_9274, i32* %r2.global-to-local, align 4
  %v0_9278 = load i32, i32* @r8, align 4
  %v1_9278 = trunc i32 %v0_9278 to i16
  %v2_9278 = load i32, i32* @r5, align 4
  %v3_9278 = add i32 %v2_9278, 2
  %v4_9278 = inttoptr i32 %v3_9278 to i16*
  store i16 %v1_9278, i16* %v4_9278, align 2
  %v0_927c = load i32, i32* %r2.global-to-local, align 4
  %v1_927c = trunc i32 %v0_927c to i16
  %v2_927c = load i32, i32* @r5, align 4
  %v3_927c = add i32 %v2_927c, 4
  %v4_927c = inttoptr i32 %v3_927c to i16*
  store i16 %v1_927c, i16* %v4_927c, align 2
  store i32 %v1_8f9c, i32* %r3.global-to-local, align 4
  %v0_9284 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9284, label %bb79, label %bb78

bb78:                                             ; preds = %.thread
  store i32 64, i32* %ip.global-to-local, align 4
  br label %bb79

bb79:                                             ; preds = %.thread, %bb78
  %v2_9288 = load i32, i32* @r5, align 4
  %v3_9288 = add i32 %v2_9288, 8
  %v4_9288 = inttoptr i32 %v3_9288 to i8*
  store i8 %v1_9200, i8* %v4_9288, align 1
  store i32 17, i32* %r3.global-to-local, align 4
  %v0_9290 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9290, label %bb81, label %bb80

bb80:                                             ; preds = %bb79
  %v1_9290 = load i32, i32* %ip.global-to-local, align 4
  %v2_9290 = trunc i32 %v1_9290 to i16
  %v3_9290 = load i32, i32* @r5, align 4
  %v4_9290 = add i32 %v3_9290, 6
  %v5_9290 = inttoptr i32 %v4_9290 to i16*
  store i16 %v2_9290, i16* %v5_9290, align 2
  %v0_9294.pre = load i32, i32* %r3.global-to-local, align 4
  %extract.t28 = trunc i32 %v0_9294.pre to i8
  br label %bb81

bb81:                                             ; preds = %bb79, %bb80
  %v0_9294.off0 = phi i8 [ 17, %bb79 ], [ %extract.t28, %bb80 ]
  %v2_9294 = load i32, i32* @r5, align 4
  %v3_9294 = add i32 %v2_9294, 9
  %v4_9294 = inttoptr i32 %v3_9294 to i8*
  store i8 %v0_9294.off0, i8* %v4_9294, align 1
  %v0_9298 = call i32 @function_d398()
  store i32 %v1_90d8, i32* @lr, align 4
  store i1 %v2_92a4, i1* %cpsr_z.global-to-local, align 1
  %v1_92a8 = sub i32 1023, %v0_9298
  store i32 %v1_92a8, i32* %r3.global-to-local, align 4
  br i1 %v2_92a4, label %.thread12, label %.thread13

.thread12:                                        ; preds = %bb81
  %v2_92b0 = load i32, i32* @r5, align 4
  %v3_92b0 = add i32 %v2_92b0, 16
  %v4_92b0 = inttoptr i32 %v3_92b0 to i32*
  store i32 %v1_92a8, i32* %v4_92b0, align 4
  br label %bb82

.thread13:                                        ; preds = %bb81
  %v1_92ac = load i32, i32* %r4.global-to-local, align 4
  %v2_92ac = add i32 %v1_92ac, 16
  %v3_92ac = inttoptr i32 %v2_92ac to i32*
  %v4_92ac = load i32, i32* %v3_92ac, align 4
  store i32 %v4_92ac, i32* %r3.global-to-local, align 4
  %v2_92b4 = load i32, i32* @r5, align 4
  %v3_92b4 = add i32 %v2_92b4, 16
  %v4_92b4 = inttoptr i32 %v3_92b4 to i32*
  store i32 %v4_92ac, i32* %v4_92b4, align 4
  br label %bb82

bb82:                                             ; preds = %.thread12, %.thread13
  %v1_92b8 = load i32, i32* @r5, align 4
  %v2_92b8 = add i32 %v1_92b8, 12
  %v3_92b8 = inttoptr i32 %v2_92b8 to i32*
  store i32 %v0_9298, i32* %v3_92b8, align 4
  %v3_92bc = load i32, i32* %stack_var_-44, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v0_92c4 = load i32, i32* %r4.global-to-local, align 4
  %v1_92c4 = add i32 %v0_92c4, 44
  store i32 %v1_92c4, i32* @r6, align 4
  store i32 %v4_92c8, i32* %r2.global-to-local, align 4
  %v1_92cc = add i32 %v3_92bc, 1
  store i32 %v1_92cc, i32* @r4, align 4
  store i32 %v4_92d0, i32* %r3.global-to-local, align 4
  %v9_92d4 = icmp eq i32 %v1_92cc, %arg2
  store i1 %v9_92d4, i1* %cpsr_z.global-to-local, align 1
  %v0_92d8 = load i32, i32* @r7, align 4
  %v1_92d8 = trunc i32 %v0_92d8 to i16
  %v3_92d8 = add i32 %v0_92c4, 48
  %v4_92d8 = inttoptr i32 %v3_92d8 to i16*
  store i16 %v1_92d8, i16* %v4_92d8, align 2
  %v0_92dc = load i32, i32* %r2.global-to-local, align 4
  %v1_92dc = trunc i32 %v0_92dc to i16
  %v2_92dc = load i32, i32* @r6, align 4
  %v3_92dc = inttoptr i32 %v2_92dc to i16*
  store i16 %v1_92dc, i16* %v3_92dc, align 2
  %v0_92e0 = load i32, i32* %r3.global-to-local, align 4
  %v1_92e0 = trunc i32 %v0_92e0 to i16
  %v2_92e0 = load i32, i32* @r6, align 4
  %v3_92e0 = add i32 %v2_92e0, 2
  %v4_92e0 = inttoptr i32 %v3_92e0 to i16*
  store i16 %v1_92e0, i16* %v4_92e0, align 2
  %v0_92e4 = load i32, i32* @r4, align 4
  store i32 %v0_92e4, i32* %stack_var_-44, align 4
  %v5_92e8 = icmp slt i32 %v1_92cc, %arg2
  br i1 %v5_92e8, label %dec_label_pc_91a4, label %dec_label_pc_92ec.preheader

dec_label_pc_92ec.preheader:                      ; preds = %bb82, %dec_label_pc_90bc
  %v1_9308 = add i32 %v1_900c, 8
  %v1_930c = add i32 %v1_900c, 52
  %v2_9318 = icmp eq i32 %v1_9060, -1
  %v7_9318 = icmp eq i32 %v1_9060, -1
  %v2_94fc = icmp eq i32 %v1_90d8, 0
  %v2_9518 = icmp eq i32 %v1_902c, 0
  br label %dec_label_pc_92ec

dec_label_pc_92ec:                                ; preds = %dec_label_pc_92ec.preheader, %dec_label_pc_9544
  store i32 %arg2, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 %v2_90e4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_90e4, label %dec_label_pc_9544, label %dec_label_pc_9300

dec_label_pc_9300:                                ; preds = %dec_label_pc_92ec
  store i32 %v1_900c, i32* %lr.global-to-local, align 4
  store i32 %v1_9308, i32* @sb, align 4
  store i32 %v1_930c, i32* @r8, align 4
  br label %dec_label_pc_9418

dec_label_pc_9314:                                ; preds = %dec_label_pc_9418
  store i32 %v1_9060, i32* %r2.global-to-local, align 4
  store i1 %v7_9318, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9318, label %dec_label_pc_94a0, label %dec_label_pc_9320

dec_label_pc_9320:                                ; preds = %dec_label_pc_9440, %dec_label_pc_9314
  store i32 add (i32 ptrtoint (i32* @global_var_10000.37 to i32), i32 -1), i32* @r4, align 4
  %v0_9328 = load i32, i32* @fp, align 4
  %v9_9328 = icmp eq i32 %v0_9328, add (i32 ptrtoint (i32* @global_var_10000.37 to i32), i32 -1)
  store i1 %v9_9328, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9328, label %dec_label_pc_94b8, label %dec_label_pc_9330

dec_label_pc_9330:                                ; preds = %dec_label_pc_94a0.dec_label_pc_9330_crit_edge, %dec_label_pc_9320
  %v1_9334 = phi i32 [ %v1_9334.pre, %dec_label_pc_94a0.dec_label_pc_9330_crit_edge ], [ add (i32 ptrtoint (i32* @global_var_10000.37 to i32), i32 -1), %dec_label_pc_9320 ]
  store i32 %v3_90dc, i32* %r3.global-to-local, align 4
  %v9_9334 = icmp eq i32 %v3_90dc, %v1_9334
  store i1 %v9_9334, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9334, label %dec_label_pc_94e0, label %dec_label_pc_933c

dec_label_pc_933c:                                ; preds = %dec_label_pc_94b8, %dec_label_pc_9330
  %v1_9340 = phi i32 [ %v1_94d8, %dec_label_pc_94b8 ], [ %v1_9334, %dec_label_pc_9330 ]
  store i32 %v3_90e0, i32* @ip, align 4
  %v9_9340 = icmp eq i32 %v3_90e0, %v1_9340
  store i1 %v9_9340, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9340, label %dec_label_pc_94f4, label %dec_label_pc_9348

dec_label_pc_9348:                                ; preds = %dec_label_pc_94e0, %dec_label_pc_933c
  store i32 %v1_90d8, i32* @lr, align 4
  store i1 %v2_94fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_94fc, label %dec_label_pc_9510, label %.thread14

.thread14:                                        ; preds = %dec_label_pc_9348
  %v1_9350 = load i32, i32* @r5, align 4
  %v2_9350 = add i32 %v1_9350, 16
  %v3_9350 = inttoptr i32 %v2_9350 to i32*
  %v4_9350 = load i32, i32* %v3_9350, align 4
  store i32 %v4_9350, i32* @r3, align 4
  %v2_9354 = load i32, i32* @r6, align 4
  %v3_9354 = add i32 %v2_9354, 16
  %v4_9354 = inttoptr i32 %v3_9354 to i32*
  store i32 %v4_9350, i32* %v4_9354, align 4
  br label %dec_label_pc_935c

dec_label_pc_935c:                                ; preds = %bb83, %.thread14
  store i32 %v1_902c, i32* %r1.global-to-local, align 4
  store i1 %v2_9518, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9518, label %dec_label_pc_9368, label %dec_label_pc_9524

dec_label_pc_9368:                                ; preds = %dec_label_pc_935c, %dec_label_pc_9510, %dec_label_pc_9524
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_936c = load i32, i32* @r5, align 4
  %v3_936c = add i32 %v2_936c, 10
  %v4_936c = inttoptr i32 %v3_936c to i16*
  store i16 0, i16* %v4_936c, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_9374 = load i32, i32* @r5, align 4
  store i32 %v0_9374, i32* @r0, align 4
  %v2_9378 = call i32 @function_bf78(i32 %v0_9374, i32 20)
  %v3_9378 = trunc i32 %v2_9378 to i16
  store i32 0, i32* %ip.global-to-local, align 4
  %v3_9380 = load i32, i32* @r5, align 4
  %v4_9380 = add i32 %v3_9380, 10
  %v5_9380 = inttoptr i32 %v4_9380 to i16*
  store i16 %v3_9378, i16* %v5_9380, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_9388 = load i32, i32* %ip.global-to-local, align 4
  %v1_9388 = trunc i32 %v0_9388 to i16
  %v2_9388 = load i32, i32* @r6, align 4
  %v3_9388 = add i32 %v2_9388, 10
  %v4_9388 = inttoptr i32 %v3_9388 to i16*
  store i16 %v1_9388, i16* %v4_9388, align 2
  %v0_938c = load i32, i32* @r6, align 4
  store i32 %v0_938c, i32* @r0, align 4
  %v2_9390 = call i32 @function_bf78(i32 %v0_938c, i32 20)
  %v3_9390 = trunc i32 %v2_9390 to i16
  %v3_9394 = load i32, i32* @r6, align 4
  %v4_9394 = add i32 %v3_9394, 10
  %v5_9394 = inttoptr i32 %v4_9394 to i16*
  store i16 %v3_9390, i16* %v5_9394, align 2
  %v2_939c = load i32, i32* @r7, align 4
  %v3_939c = add i32 %v2_939c, 6
  %v4_939c = inttoptr i32 %v3_939c to i16*
  store i16 0, i16* %v4_939c, align 2
  %v0_93a0 = load i32, i32* @r7, align 4
  store i32 %v0_93a0, i32* @r1, align 4
  %v1_93a4 = add i32 %v0_93a0, 4
  %v2_93a4 = inttoptr i32 %v1_93a4 to i16*
  %v3_93a4 = load i16, i16* %v2_93a4, align 2
  %v4_93a4 = zext i16 %v3_93a4 to i32
  store i32 %v4_93a4, i32* %r2.global-to-local, align 4
  %v0_93a8 = load i32, i32* @sb, align 4
  store i32 %v0_93a8, i32* %r3.global-to-local, align 4
  %v0_93ac = load i32, i32* @r6, align 4
  %v4_93b0 = call i32 @function_bfc8(i32 %v0_93ac, i32 %v0_93a0, i32 %v4_93a4, i32 %v0_93a8)
  %v5_93b0 = trunc i32 %v4_93b0 to i16
  %v3_93b4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_93b4, i32* %r2.global-to-local, align 4
  %v3_93b8 = mul i32 %v3_93b4, 32
  store i32 %v3_93b8, i32* %r3.global-to-local, align 4
  %v0_93bc = load i32, i32* @r5, align 4
  %v1_93bc = add i32 %v0_93bc, 16
  %v2_93bc = inttoptr i32 %v1_93bc to i32*
  %v3_93bc = load i32, i32* %v2_93bc, align 4
  %v5_93c0 = mul i32 %v3_93b4, 24
  store i32 %v5_93c0, i32* %r3.global-to-local, align 4
  %v1_93c4 = load i32, i32* @sl, align 4
  %v2_93c4 = add i32 %v1_93c4, %v5_93c0
  store i32 %v2_93c4, i32* @lr, align 4
  %v2_93c8 = add i32 %v2_93c4, 4
  %v3_93c8 = inttoptr i32 %v2_93c8 to i32*
  store i32 %v3_93bc, i32* %v3_93c8, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_93d4 = load i32, i32* @r7, align 4
  %v4_93d4 = add i32 %v3_93d4, 6
  %v5_93d4 = inttoptr i32 %v4_93d4 to i16*
  store i16 %v5_93b0, i16* %v5_93d4, align 2
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_93dc = load i32, i32* %r1.global-to-local, align 4
  %v1_93dc = trunc i32 %v0_93dc to i16
  %v2_93dc = load i32, i32* %r3.global-to-local, align 4
  %v3_93dc = load i32, i32* @sl, align 4
  %v4_93dc = add i32 %v3_93dc, %v2_93dc
  %v5_93dc = inttoptr i32 %v4_93dc to i16*
  store i16 %v1_93dc, i16* %v5_93dc, align 2
  %v0_93e0 = load i32, i32* %r2.global-to-local, align 4
  %v1_93e0 = trunc i32 %v0_93e0 to i16
  %v2_93e0 = load i32, i32* @lr, align 4
  %v3_93e0 = add i32 %v2_93e0, 2
  %v4_93e0 = inttoptr i32 %v3_93e0 to i16*
  store i16 %v1_93e0, i16* %v4_93e0, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_93e8 = load i32, i32* @r5, align 4
  store i32 %v0_93e8, i32* %r1.global-to-local, align 4
  %v0_93f0 = load i32, i32* @r8, align 4
  store i32 %v0_93f0, i32* %r2.global-to-local, align 4
  %v0_93f4 = load i32, i32* @lr, align 4
  %v0_93f8 = load i32, i32* %ip.global-to-local, align 4
  %v6_93fc = call i32 @function_11cac(i32 %v3_9084, i32 %v0_93e8, i32 %v0_93f0, i32 16384, i32 %v0_93f4, i32 %v0_93f8)
  %v3_9400 = load i32, i32* %stack_var_-44, align 4
  %v1_9404 = add i32 %v3_9400, 1
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v9_940c = icmp eq i32 %v1_9404, %arg2
  store i1 %v9_940c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_9404, i32* %stack_var_-44, align 4
  %v6_9414 = icmp slt i32 %v1_9404, %arg2
  br i1 %v6_9414, label %dec_label_pc_9418, label %dec_label_pc_9544

dec_label_pc_9418:                                ; preds = %dec_label_pc_9368, %dec_label_pc_9300
  %v1_942c = phi i32 [ %v1_9404, %dec_label_pc_9368 ], [ 0, %dec_label_pc_9300 ]
  %v5_941c = mul i32 %v1_942c, 24
  %v1_9420 = load i32, i32* @sl, align 4
  %v2_9420 = add i32 %v1_9420, %v5_941c
  store i32 %v2_9420, i32* %r3.global-to-local, align 4
  store i32 %v2_8f40, i32* %r1.global-to-local, align 4
  %v1_9428 = add i32 %v2_9420, 20
  %v2_9428 = inttoptr i32 %v1_9428 to i8*
  %v3_9428 = load i8, i8* %v2_9428, align 1
  %v4_9428 = zext i8 %v3_9428 to i32
  store i32 %v4_9428, i32* %r2.global-to-local, align 4
  %v4_942c = mul i32 %v1_942c, 4
  %v5_942c = add i32 %v4_942c, %v2_8f40
  %v6_942c = inttoptr i32 %v5_942c to i32*
  %v7_942c = load i32, i32* %v6_942c, align 4
  store i32 %v7_942c, i32* @r5, align 4
  %v2_9430 = icmp ugt i8 %v3_9428, 30
  %v7_9430 = icmp eq i8 %v3_9428, 31
  store i1 %v7_9430, i1* %cpsr_z.global-to-local, align 1
  %v1_9434 = add i32 %v7_942c, 24
  store i32 %v1_9434, i32* @r6, align 4
  %v1_9438 = add i32 %v7_942c, 44
  store i32 %v1_9438, i32* @r7, align 4
  %v2_943c = xor i1 %v7_9430, true
  %v3_943c = and i1 %v2_9430, %v2_943c
  br i1 %v3_943c, label %dec_label_pc_9314, label %dec_label_pc_9440

dec_label_pc_9440:                                ; preds = %dec_label_pc_9418
  %v1_9440 = add i32 %v2_9420, 16
  %v2_9440 = inttoptr i32 %v1_9440 to i32*
  %v3_9440 = load i32, i32* %v2_9440, align 4
  store i32 %v3_9440, i32* %r4.global-to-local, align 4
  %v0_9444 = call i32 @function_d398()
  %v3_9448 = load i32, i32* %stack_var_-44, align 4
  %v5_9450 = mul i32 %v3_9448, 24
  %v1_9454 = and i32 %v3_9440, 16711680
  store i32 %v1_9454, i32* %ip.global-to-local, align 4
  %v3_9458 = udiv i32 %v3_9440, 16777216
  %v4_945c = udiv i32 %v1_9454, 256
  %v5_945c = or i32 %v4_945c, %v3_9458
  store i32 %v5_945c, i32* %r2.global-to-local, align 4
  %v1_9460 = load i32, i32* @sl, align 4
  %v2_9460 = add i32 %v1_9460, %v5_9450
  store i32 %v2_9460, i32* %r1.global-to-local, align 4
  %v1_9464 = and i32 %v3_9440, 65280
  store i32 %v1_9464, i32* %r3.global-to-local, align 4
  %v1_9468 = add i32 %v2_9460, 20
  %v2_9468 = inttoptr i32 %v1_9468 to i8*
  %v3_9468 = load i8, i8* %v2_9468, align 1
  %v4_9468 = zext i8 %v3_9468 to i32
  store i32 %v4_9468, i32* %ip.global-to-local, align 4
  %v5_9470 = call i32 @llvm.bswap.i32(i32 %v3_9440)
  %v7_9474 = lshr i32 %v0_9444, %v4_9468
  %v8_9474 = add i32 %v7_9474, %v5_9470
  %v1_9480 = and i32 %v8_9474, 65280
  store i32 %v1_9480, i32* %r1.global-to-local, align 4
  %v5_948c = call i32 @llvm.bswap.i32(i32 %v8_9474)
  store i32 %v5_948c, i32* %r3.global-to-local, align 4
  store i32 %v1_9060, i32* %r2.global-to-local, align 4
  store i1 %v7_9318, i1* %cpsr_z.global-to-local, align 1
  %v1_9498 = load i32, i32* @r5, align 4
  %v2_9498 = add i32 %v1_9498, 16
  %v3_9498 = inttoptr i32 %v2_9498 to i32*
  store i32 %v5_948c, i32* %v3_9498, align 4
  br i1 %v2_9318, label %dec_label_pc_94a0, label %dec_label_pc_9320

dec_label_pc_94a0:                                ; preds = %dec_label_pc_9440, %dec_label_pc_9314
  %v0_94a0 = call i32 @function_d398()
  store i32 add (i32 ptrtoint (i32* @global_var_10000.37 to i32), i32 -1), i32* @r4, align 4
  %v0_94ac = load i32, i32* @fp, align 4
  %v9_94ac = icmp eq i32 %v0_94ac, add (i32 ptrtoint (i32* @global_var_10000.37 to i32), i32 -1)
  store i1 %v9_94ac, i1* %cpsr_z.global-to-local, align 1
  %v1_94b0 = load i32, i32* @r5, align 4
  %v2_94b0 = add i32 %v1_94b0, 12
  %v3_94b0 = inttoptr i32 %v2_94b0 to i32*
  store i32 %v0_94a0, i32* %v3_94b0, align 4
  br i1 %v9_94ac, label %dec_label_pc_94b8, label %dec_label_pc_94a0.dec_label_pc_9330_crit_edge

dec_label_pc_94a0.dec_label_pc_9330_crit_edge:    ; preds = %dec_label_pc_94a0
  %v1_9334.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_9330

dec_label_pc_94b8:                                ; preds = %dec_label_pc_94a0, %dec_label_pc_9320
  %v0_94b8 = call i32 @function_d398()
  %v3_94c0 = urem i32 %v0_94b8, 65536
  %v1_94c8 = sub nsw i32 999, %v3_94c0
  store i32 %v1_94c8, i32* %r3.global-to-local, align 4
  %v1_94cc = trunc i32 %v0_94b8 to i16
  %v2_94cc = load i32, i32* @r5, align 4
  %v3_94cc = add i32 %v2_94cc, 4
  %v4_94cc = inttoptr i32 %v3_94cc to i16*
  store i16 %v1_94cc, i16* %v4_94cc, align 2
  %v0_94d0 = load i32, i32* %r3.global-to-local, align 4
  %v1_94d0 = trunc i32 %v0_94d0 to i16
  %v2_94d0 = load i32, i32* @r6, align 4
  %v3_94d0 = add i32 %v2_94d0, 4
  %v4_94d0 = inttoptr i32 %v3_94d0 to i16*
  store i16 %v1_94d0, i16* %v4_94d0, align 2
  store i32 %v3_90dc, i32* %r3.global-to-local, align 4
  %v1_94d8 = load i32, i32* @r4, align 4
  %v9_94d8 = icmp eq i32 %v3_90dc, %v1_94d8
  store i1 %v9_94d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_94d8, label %dec_label_pc_94e0, label %dec_label_pc_933c

dec_label_pc_94e0:                                ; preds = %dec_label_pc_94b8, %dec_label_pc_9330
  %v0_94e0 = call i32 @function_d398()
  %v1_94e0 = trunc i32 %v0_94e0 to i16
  store i32 %v3_90e0, i32* @ip, align 4
  %v1_94e8 = load i32, i32* @r4, align 4
  %v9_94e8 = icmp eq i32 %v3_90e0, %v1_94e8
  store i1 %v9_94e8, i1* %cpsr_z.global-to-local, align 1
  %v3_94ec = load i32, i32* @r5, align 4
  %v4_94ec = add i32 %v3_94ec, 44
  %v5_94ec = inttoptr i32 %v4_94ec to i16*
  store i16 %v1_94e0, i16* %v5_94ec, align 2
  br i1 %v9_94e8, label %dec_label_pc_94f4, label %dec_label_pc_9348

dec_label_pc_94f4:                                ; preds = %dec_label_pc_94e0, %dec_label_pc_933c
  %v0_94f4 = call i32 @function_d398()
  %v1_94f4 = trunc i32 %v0_94f4 to i16
  store i32 %v1_90d8, i32* @lr, align 4
  store i1 %v2_94fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_94fc, label %.thread29, label %bb83

.thread29:                                        ; preds = %dec_label_pc_94f4
  %v3_950430 = load i32, i32* @r7, align 4
  %v4_950431 = add i32 %v3_950430, 2
  %v5_950432 = inttoptr i32 %v4_950431 to i16*
  store i16 %v1_94f4, i16* %v5_950432, align 2
  br label %dec_label_pc_9510

bb83:                                             ; preds = %dec_label_pc_94f4
  %v1_9500 = load i32, i32* @r5, align 4
  %v2_9500 = add i32 %v1_9500, 16
  %v3_9500 = inttoptr i32 %v2_9500 to i32*
  %v4_9500 = load i32, i32* %v3_9500, align 4
  store i32 %v4_9500, i32* @r3, align 4
  %v3_9504 = load i32, i32* @r7, align 4
  %v4_9504 = add i32 %v3_9504, 2
  %v5_9504 = inttoptr i32 %v4_9504 to i16*
  store i16 %v1_94f4, i16* %v5_9504, align 2
  %v1_9508 = load i32, i32* @r3, align 4
  %v2_9508 = load i32, i32* @r6, align 4
  %v3_9508 = add i32 %v2_9508, 16
  %v4_9508 = inttoptr i32 %v3_9508 to i32*
  store i32 %v1_9508, i32* %v4_9508, align 4
  br label %dec_label_pc_935c

dec_label_pc_9510:                                ; preds = %.thread29, %dec_label_pc_9348
  %v0_9510 = call i32 @function_d398()
  store i32 %v1_902c, i32* %r1.global-to-local, align 4
  store i1 %v2_9518, i1* %cpsr_z.global-to-local, align 1
  %v1_951c = load i32, i32* @r6, align 4
  %v2_951c = add i32 %v1_951c, 16
  %v3_951c = inttoptr i32 %v2_951c to i32*
  store i32 %v0_9510, i32* %v3_951c, align 4
  br i1 %v2_9518, label %dec_label_pc_9368, label %dec_label_pc_9524

dec_label_pc_9524:                                ; preds = %dec_label_pc_935c, %dec_label_pc_9510
  %v0_9524 = load i32, i32* @r7, align 4
  %v1_9524 = add i32 %v0_9524, 8
  store i32 %v1_9524, i32* @r4, align 4
  store i32 %v1_900c, i32* %r1.global-to-local, align 4
  %v2_9530 = call i32 @function_d45c(i32 %v1_9524, i32 %v1_900c)
  store i32 %v1_900c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_953c = load i32, i32* @r4, align 4
  %v4_953c = add i32 %v2_953c, %v1_900c
  %v5_953c = inttoptr i32 %v4_953c to i8*
  store i8 0, i8* %v5_953c, align 1
  br label %dec_label_pc_9368

dec_label_pc_9544:                                ; preds = %dec_label_pc_9368, %dec_label_pc_92ec
  %v2_9548 = call i32 @function_111c8(i32* null)
  store i32 %v2_9070, i32* %ip.global-to-local, align 4
  %v9_9550 = icmp eq i32 %v2_9070, %v2_9548
  store i1 %v9_9550, i1* %cpsr_z.global-to-local, align 1
  %v6_9554 = icmp slt i32 %v2_9070, %v2_9548
  br i1 %v6_9554, label %dec_label_pc_9558, label %dec_label_pc_92ec

dec_label_pc_9558:                                ; preds = %dec_label_pc_9544, %dec_label_pc_8f14, %dec_label_pc_9564
  %v1_9560 = phi i32 [ %v3_9084, %dec_label_pc_8f14 ], [ %v1_9568, %dec_label_pc_9564 ], [ %v2_9548, %dec_label_pc_9544 ]
  store i32 %v3_8f14, i32* %r4.global-to-local, align 4
  store i32 %v24_8f14, i32* %fp.global-to-local, align 4
  store i32 %v27_8f14, i32* %lr.global-to-local, align 4
  ret i32 %v1_9560

dec_label_pc_9564:                                ; preds = %dec_label_pc_9094
  %v1_9568 = call i32 @function_11548(i32 %v3_9084)
  br label %dec_label_pc_9558

; uselistorder directives
  uselistorder i16 %v1_94f4, { 1, 0 }
  uselistorder i32 %v1_94d8, { 1, 0 }
  uselistorder i32 %v0_94b8, { 1, 0 }
  uselistorder i32 %v5_948c, { 1, 0 }
  uselistorder i32 %v3_9440, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v7_942c, { 1, 0, 2 }
  uselistorder i32 %v1_9404, { 1, 2, 0, 3 }
  uselistorder i32 %v3_93b4, { 1, 0, 2 }
  uselistorder i1 %v2_9518, { 2, 3, 1, 0 }
  uselistorder i1 %v2_94fc, { 2, 3, 1, 0 }
  uselistorder i1 %v7_9318, { 2, 1, 0 }
  uselistorder i32 %v0_9298, { 1, 0 }
  uselistorder i32 %v1_9120, { 1, 0 }
  uselistorder i32 %v3_910c, { 2, 1, 0 }
  uselistorder i1 %v2_90e4, { 1, 0, 2, 3 }
  uselistorder i32 %v1_90d8, { 4, 3, 5, 1, 2, 0 }
  uselistorder i32 %v3_90d4, { 1, 0 }
  uselistorder i32 %v0_90d0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_90bc, { 2, 0, 1, 3 }
  uselistorder i1 %v7_90b4, { 1, 0 }
  uselistorder i1 %v7_9088, { 1, 0 }
  uselistorder i32 %v3_9084, { 3, 1, 4, 2, 0 }
  uselistorder i32 %v2_9070, { 2, 1, 0 }
  uselistorder i32 %v1_9060, { 3, 4, 0, 5, 1, 2 }
  uselistorder i32 %v1_902c, { 2, 1, 3, 0 }
  uselistorder i32 %v1_900c, { 1, 4, 3, 2, 5, 7, 6, 0 }
  uselistorder i32 %v1_8fc0, { 1, 0 }
  uselistorder i32 %v1_8f9c, { 2, 1, 0 }
  uselistorder i32 %v1_8f94, { 1, 0 }
  uselistorder i32 %v1_8f7c, { 1, 0, 4, 3, 2 }
  uselistorder i8 %v5_8f78, { 0, 2, 1 }
  uselistorder i32 %v1_8f58, { 1, 0 }
  uselistorder i32 %v2_8f40, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 12, 13, 14, 15, 11, 2, 3, 4, 5, 6, 7, 8, 9, 10, 16 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 23, 7, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 8, 9, 10, 11, 12, 13, 14, 15, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 21, 4, 16, 17, 18, 19, 20, 22, 23, 24, 25, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 22, 16, 17, 18, 19, 20, 21, 23, 24, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 0 }
  uselistorder i32* %lr.global-to-local, { 0, 6, 1, 2, 3, 4, 5 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 16, 17, 18, 19, 20, 21, 22, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 20, 7, 14, 15, 16, 17, 18, 19, 21, 22, 23, 8, 9, 10, 11, 12, 13 }
  uselistorder i32 %arg2, { 6, 5, 4, 7, 1, 0, 3, 2, 8, 9, 10 }
  uselistorder label %dec_label_pc_9558, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9524, { 1, 0 }
  uselistorder label %dec_label_pc_9368, { 2, 1, 0 }
  uselistorder label %dec_label_pc_92ec, { 1, 0 }
  uselistorder label %bb82, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_9574(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_9574:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp30 = call i8 @__decompiler_undefined_function_3()
  %tmp31 = call i16 @__decompiler_undefined_function_2()
  %tmp32 = call i32 @__decompiler_undefined_function_0()
  %tmp34 = call i32 @__decompiler_undefined_function_0()
  %tmp60 = call i16 @__decompiler_undefined_function_2()
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_9574 = load i32, i32* @r4, align 4
  %v27_9574 = load i32, i32* @lr, align 4
  store i32 0, i32* @r7, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 16, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 %arg3, i32* @fp, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_95a0 = call i32 @function_12898(i32 %arg2, i32 16)
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v2_95b0 = call i32 @function_12898(i32 %arg2, i32 4)
  %v0_95b4 = load i32, i32* @r4, align 4
  store i32 %v0_95b4, i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  %v0_95c0 = load i32, i32* @r7, align 4
  store i32 %v0_95c0, i32* @r3, align 4
  %v0_95c4 = load i32, i32* @r5, align 4
  store i32 %v0_95c4, i32* %r0.global-to-local, align 4
  %v1_95c8 = call i32 @function_8258(i32 %v0_95c4)
  %v1_95d4 = urem i32 %v1_95c8, 256
  store i32 %v1_95d4, i32* %ip.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.37 to i32), i32 -1), i32* @r3, align 4
  store i32 3, i32* @r2, align 4
  %v0_95e0 = load i32, i32* @r4, align 4
  store i32 %v0_95e0, i32* @r1, align 4
  %v0_95e4 = load i32, i32* @r5, align 4
  store i32 %v0_95e4, i32* %r0.global-to-local, align 4
  %v5_95e8 = trunc i32 %v1_95c8 to i8
  %v1_95ec = call i32 @function_8258(i32 %v0_95e4)
  %v0_95f0 = load i32, i32* @r4, align 4
  store i32 %v0_95f0, i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  store i32 64, i32* @r3, align 4
  store i32 %v1_95ec, i32* @r8, align 4
  %v0_9600 = load i32, i32* @r5, align 4
  store i32 %v0_9600, i32* %r0.global-to-local, align 4
  %v1_9604 = call i32 @function_8258(i32 %v0_9600)
  %v1_960c = urem i32 %v1_9604, 256
  store i32 %v1_960c, i32* %ip.global-to-local, align 4
  %v0_9610 = load i32, i32* @r4, align 4
  store i32 %v0_9610, i32* @r1, align 4
  store i32 5, i32* @r2, align 4
  store i32 1, i32* @r3, align 4
  %v0_961c = load i32, i32* @r5, align 4
  store i32 %v0_961c, i32* %r0.global-to-local, align 4
  %v5_9620 = trunc i32 %v1_9604 to i8
  %v1_9624 = call i32 @function_8258(i32 %v0_961c)
  %v1_9630 = urem i32 %v1_9624, 256
  store i32 %v1_9630, i32* %ip.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.37 to i32), i32 -1), i32* @r3, align 4
  %v0_9638 = load i32, i32* @r4, align 4
  store i32 %v0_9638, i32* @r1, align 4
  store i32 7, i32* @r2, align 4
  %v0_9640 = load i32, i32* @r5, align 4
  store i32 %v0_9640, i32* %r0.global-to-local, align 4
  %v1_9648 = call i32 @function_8258(i32 %v0_9640)
  %v0_964c = load i32, i32* @r4, align 4
  store i32 %v0_964c, i32* @r1, align 4
  %v3_9650 = mul i32 %v1_9648, 65536
  store i32 %v3_9650, i32* %ip.global-to-local, align 4
  store i32 10, i32* @r2, align 4
  %v0_9658 = load i32, i32* @r7, align 4
  store i32 %v0_9658, i32* @r3, align 4
  %v0_965c = load i32, i32* @r5, align 4
  store i32 %v0_965c, i32* %r0.global-to-local, align 4
  %v3_9660 = urem i32 %v1_9648, 65536
  store i32 %v3_9660, i32* @sb, align 4
  %v1_9664 = call i32 @function_8258(i32 %v0_965c)
  %v1_966c = urem i32 %v1_9664, 256
  store i32 %v1_966c, i32* %ip.global-to-local, align 4
  %v0_9670 = load i32, i32* @r4, align 4
  store i32 %v0_9670, i32* @r1, align 4
  store i32 11, i32* @r2, align 4
  store i32 1, i32* @r3, align 4
  %v0_967c = load i32, i32* @r5, align 4
  store i32 %v0_967c, i32* %r0.global-to-local, align 4
  %v1_9684 = call i32 @function_8258(i32 %v0_967c)
  %v1_968c = urem i32 %v1_9684, 256
  store i32 %v1_968c, i32* %ip.global-to-local, align 4
  %v0_9690 = load i32, i32* @r4, align 4
  store i32 %v0_9690, i32* @r1, align 4
  store i32 12, i32* @r2, align 4
  store i32 1, i32* @r3, align 4
  %v0_969c = load i32, i32* @r5, align 4
  store i32 %v0_969c, i32* %r0.global-to-local, align 4
  %v1_96a4 = call i32 @function_8258(i32 %v0_969c)
  %v1_96ac = urem i32 %v1_96a4, 256
  store i32 %v1_96ac, i32* %ip.global-to-local, align 4
  %v0_96b0 = load i32, i32* @r4, align 4
  store i32 %v0_96b0, i32* @r1, align 4
  store i32 13, i32* @r2, align 4
  %v0_96b8 = load i32, i32* @r7, align 4
  store i32 %v0_96b8, i32* @r3, align 4
  %v0_96bc = load i32, i32* @r5, align 4
  store i32 %v0_96bc, i32* %r0.global-to-local, align 4
  %v1_96c4 = call i32 @function_8258(i32 %v0_96bc)
  %v1_96cc = urem i32 %v1_96c4, 256
  store i32 %v1_96cc, i32* %ip.global-to-local, align 4
  %v0_96d0 = load i32, i32* @r4, align 4
  store i32 %v0_96d0, i32* @r1, align 4
  store i32 14, i32* @r2, align 4
  %v0_96d8 = load i32, i32* @r7, align 4
  store i32 %v0_96d8, i32* @r3, align 4
  %v0_96dc = load i32, i32* @r5, align 4
  store i32 %v0_96dc, i32* %r0.global-to-local, align 4
  %v1_96e4 = call i32 @function_8258(i32 %v0_96dc)
  %v1_96ec = urem i32 %v1_96e4, 256
  store i32 %v1_96ec, i32* %ip.global-to-local, align 4
  %v0_96f0 = load i32, i32* @r4, align 4
  store i32 %v0_96f0, i32* @r1, align 4
  store i32 15, i32* @r2, align 4
  %v0_96f8 = load i32, i32* @r7, align 4
  store i32 %v0_96f8, i32* @r3, align 4
  %v0_96fc = load i32, i32* @r5, align 4
  store i32 %v0_96fc, i32* %r0.global-to-local, align 4
  %v1_9704 = call i32 @function_8258(i32 %v0_96fc)
  %v1_970c = urem i32 %v1_9704, 256
  store i32 %v1_970c, i32* %ip.global-to-local, align 4
  %v0_9710 = load i32, i32* @r7, align 4
  store i32 %v0_9710, i32* @r2, align 4
  store i32 768, i32* @r3, align 4
  %v0_9718 = load i32, i32* @r4, align 4
  store i32 %v0_9718, i32* @r1, align 4
  %v0_971c = load i32, i32* @r5, align 4
  store i32 %v0_971c, i32* %r0.global-to-local, align 4
  %v1_9724 = call i32 @function_8258(i32 %v0_971c)
  store i32 1, i32* @r2, align 4
  store i32 1, i32* @r3, align 4
  %v0_9730 = load i32, i32* @r4, align 4
  store i32 %v0_9730, i32* @r1, align 4
  %v0_9738 = load i32, i32* @r5, align 4
  store i32 %v0_9738, i32* %r0.global-to-local, align 4
  %v1_973c = call i32 @function_8258(i32 %v0_9738)
  %v1_9744 = urem i32 %v1_973c, 256
  store i32 %v1_9744, i32* %r3.global-to-local, align 4
  %v0_9748 = load i32, i32* @r7, align 4
  store i32 %v0_9748, i32* %r0.global-to-local, align 4
  %v1_9750 = inttoptr i32 %v0_9748 to i32*
  %v2_9750 = call i32 @function_111c8(i32* %v1_9750)
  %v1_9754 = load i32, i32* @r6, align 4
  %v2_9754 = add i32 %v1_9754, %v2_9750
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_9768 = call i32 @function_11d30(i32 2, i32 3, i32 6)
  store i32 %v3_9768, i32* %r0.global-to-local, align 4
  %v7_976c = icmp eq i32 %v3_9768, -1
  store i32 %v3_9768, i32* @sl, align 4
  br i1 %v7_976c, label %dec_label_pc_9aac, label %dec_label_pc_9778

dec_label_pc_9778:                                ; preds = %dec_label_pc_9574
  store i32 1, i32* %stack_var_-44, align 4
  %v6_9780 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_9780, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_9788 = load i32, i32* @r7, align 4
  store i32 %v0_9788, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_9794 = call i32 @function_11cec(i32 %v3_9768, i32 %v0_9788, i32 3, i32 %v6_9780, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_9794, i32* %r0.global-to-local, align 4
  %v7_9798 = icmp eq i32 %v5_9794, -1
  br i1 %v7_9798, label %dec_label_pc_9aa4, label %dec_label_pc_97a0

dec_label_pc_97a0:                                ; preds = %dec_label_pc_9778
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v0_97a4 = load i32, i32* @r8, align 4
  %v3_97a8 = urem i32 %v0_97a4, 65536
  store i32 %v3_97a8, i32* @r3, align 4
  %v2_97ac = icmp eq i32 %arg2, 0
  %v0_97b0 = load i32, i32* @r7, align 4
  store i32 %v0_97b0, i32* %stack_var_-44, align 4
  %v5_97b4 = trunc i32 %v0_97a4 to i16
  br i1 %v2_97ac, label %dec_label_pc_97a0.dec_label_pc_9948.preheader_crit_edge, label %dec_label_pc_97bc.preheader

dec_label_pc_97a0.dec_label_pc_9948.preheader_crit_edge: ; preds = %dec_label_pc_97a0
  %.pre = sext i16 %v5_97b4 to i32
  %.pre91 = add i32 %v1_9724, 40
  br label %dec_label_pc_9948.preheader

dec_label_pc_97bc.preheader:                      ; preds = %dec_label_pc_97a0
  %v2_9800 = ptrtoint i32* %stack_var_-160 to i32
  %v2_9848 = ptrtoint i32* %stack_var_-64 to i32
  %v2_9860 = ptrtoint i32* %stack_var_-80 to i32
  %v2_9868 = ptrtoint i32* %stack_var_-336 to i32
  %v2_986c = ptrtoint i32* %stack_var_-48 to i32
  %v4_98f4 = zext i8 %tmp30 to i32
  %v1_98f8 = and i32 %v4_98f4, 18
  %v2_98fc = icmp eq i32 %v1_98f8, 18
  %v1_9bac = add i32 %v1_9724, 40
  %v4_9bec = sext i16 %v5_97b4 to i32
  %v3_9bf8 = udiv i32 %v4_9bec, 256
  %v1_9cd4 = urem i32 %v1_9664, 2
  %tmp92 = sub nsw i32 0, %v1_9cd4
  %v4_9cdc = and i32 %tmp92, 32
  %v1_9d08 = urem i32 %v1_96a4, 2
  %tmp93 = sub nsw i32 0, %v1_9d08
  %v4_9d10 = and i32 %tmp93, 8
  %v1_9d54 = urem i32 %v1_9704, 2
  %v3_98e0 = sext i16 %tmp60 to i32
  %v1_9904 = and i32 %v4_98f4, 5
  %v2_9904 = icmp eq i32 %v1_9904, 0
  %v4_9840 = add i32 %v2_9800, 98
  %v5_9840 = inttoptr i32 %v4_9840 to i16*
  %v1_9bf4 = mul nsw i32 %v4_9bec, 256
  %v4_9c04 = and i32 %v1_9bf4, 65280
  %v5_9c04 = or i32 %v4_9c04, %v3_9bf8
  %v1_9cec = urem i32 %v1_9684, 2
  %tmp94 = sub nsw i32 0, %v1_9cec
  %v4_9cf4 = and i32 %tmp94, 16
  %v1_9d20 = urem i32 %v1_96c4, 2
  %tmp95 = sub nsw i32 0, %v1_9d20
  %v4_9d28 = and i32 %tmp95, 4
  %v1_9d38 = urem i32 %v1_96e4, 2
  %tmp96 = sub nsw i32 0, %v1_9d38
  %v3_9d40 = and i32 %tmp96, 2
  br label %dec_label_pc_97bc.outer

dec_label_pc_97bc.outer:                          ; preds = %dec_label_pc_97bc.preheader, %.thread10
  %stack_var_-340.0.ph = phi i32 [ %tmp, %dec_label_pc_97bc.preheader ], [ %v0_9c38, %.thread10 ]
  %stack_var_-62.0.ph = phi i16 [ %tmp31, %dec_label_pc_97bc.preheader ], [ %stack_var_-62.2, %.thread10 ]
  %stack_var_-60.0.ph = phi i32 [ %tmp34, %dec_label_pc_97bc.preheader ], [ %v0_9b50, %.thread10 ]
  br label %dec_label_pc_97bc

dec_label_pc_97bc:                                ; preds = %dec_label_pc_97bc.outer, %dec_label_pc_9930
  %stack_var_-62.0 = phi i16 [ %stack_var_-62.3, %dec_label_pc_9930 ], [ %stack_var_-62.0.ph, %dec_label_pc_97bc.outer ]
  %stack_var_-60.0 = phi i32 [ %stack_var_-60.4, %dec_label_pc_9930 ], [ %stack_var_-60.0.ph, %dec_label_pc_97bc.outer ]
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_97c8 = call i32 @function_11d30(i32 2, i32 1, i32 0)
  store i32 %v3_97c8, i32* %r0.global-to-local, align 4
  %v7_97cc = icmp eq i32 %v3_97c8, -1
  store i32 %v3_97c8, i32* @r8, align 4
  br i1 %v7_97cc, label %dec_label_pc_9930, label %dec_label_pc_97d8

dec_label_pc_97d8:                                ; preds = %dec_label_pc_97bc, %dec_label_pc_990c
  %v0_97e0 = phi i32 [ %v3_9920, %dec_label_pc_990c ], [ %v3_97c8, %dec_label_pc_97bc ]
  %stack_var_-62.1 = phi i16 [ %stack_var_-62.2, %dec_label_pc_990c ], [ %stack_var_-62.0, %dec_label_pc_97bc ]
  %stack_var_-60.1 = phi i32 [ %v0_9b50, %dec_label_pc_990c ], [ %stack_var_-60.0, %dec_label_pc_97bc ]
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_97e0 = call i32 @function_1137c(i32 %v0_97e0, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_97e8 = or i32 %v2_97e0, 2048
  store i32 %v1_97e8, i32* %r2.global-to-local, align 4
  %v0_97ec = load i32, i32* @r8, align 4
  store i32 %v0_97ec, i32* %r0.global-to-local, align 4
  %v2_97f0 = call i32 @function_1137c(i32 %v0_97ec, i32 4)
  store i32 %v2_97f0, i32* %r0.global-to-local, align 4
  %v3_97f4 = load i32, i32* %stack_var_-44, align 4
  %v5_97fc = mul i32 %v3_97f4, 24
  store i32 %v2_9800, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-64, align 4
  %v1_980c = load i32, i32* @fp, align 4
  %v2_980c = add i32 %v1_980c, %v5_97fc
  store i32 %v2_980c, i32* %r3.global-to-local, align 4
  %v1_9810 = add i32 %v2_980c, 20
  %v2_9810 = inttoptr i32 %v1_9810 to i8*
  %v3_9810 = load i8, i8* %v2_9810, align 1
  %v4_9810 = zext i8 %v3_9810 to i32
  store i32 %v4_9810, i32* %r2.global-to-local, align 4
  %v2_9814 = icmp ugt i8 %v3_9810, 30
  %v7_9814 = icmp eq i8 %v3_9810, 31
  %v2_9818 = xor i1 %v7_9814, true
  %v3_9818 = and i1 %v2_9814, %v2_9818
  br i1 %v3_9818, label %bb, label %bb70

bb:                                               ; preds = %dec_label_pc_97d8
  %v5_9818 = add i32 %v2_980c, 16
  %v6_9818 = inttoptr i32 %v5_9818 to i32*
  %v7_9818 = load i32, i32* %v6_9818, align 4
  store i32 %v7_9818, i32* %r3.global-to-local, align 4
  br label %bb70

bb70:                                             ; preds = %dec_label_pc_97d8, %bb
  %v4_981c = phi i32 [ %v2_980c, %dec_label_pc_97d8 ], [ %v7_9818, %bb ]
  %v4_981c.stack_var_-60.1 = select i1 %v3_9818, i32 %v4_981c, i32 %stack_var_-60.1
  %v2_9820 = xor i1 %v2_9814, true
  %v3_9820 = or i1 %v7_9814, %v2_9820
  br i1 %v3_9820, label %dec_label_pc_9ab8, label %dec_label_pc_9824

dec_label_pc_9824:                                ; preds = %bb70, %dec_label_pc_9ab8
  %v0_9b50 = phi i32 [ %v5_9b04, %dec_label_pc_9ab8 ], [ %v4_981c.stack_var_-60.1, %bb70 ]
  store i32 add (i32 ptrtoint (i32* @global_var_10000.37 to i32), i32 -1), i32* %r3.global-to-local, align 4
  %v0_982c = load i32, i32* @sb, align 4
  %v9_982c = icmp eq i32 %v0_982c, add (i32 ptrtoint (i32* @global_var_10000.37 to i32), i32 -1)
  br i1 %v9_982c, label %dec_label_pc_9b10, label %.thread7

.thread7:                                         ; preds = %dec_label_pc_9824
  %v4_9830 = udiv i32 %v0_982c, 256
  %v2_9834 = urem i32 %v0_982c, 256
  store i32 %v2_9834, i32* %r2.global-to-local, align 4
  %v5_9838 = mul nuw nsw i32 %v2_9834, 256
  %v6_9838 = or i32 %v5_9838, %v4_9830
  store i32 %v6_9838, i32* %r3.global-to-local, align 4
  store i32 %v2_9800, i32* %ip.global-to-local, align 4
  %v2_9840 = trunc i32 %v6_9838 to i16
  store i16 %v2_9840, i16* %v5_9840, align 2
  br label %dec_label_pc_9848

dec_label_pc_9848:                                ; preds = %.thread7, %dec_label_pc_9b10
  %stack_var_-62.2 = phi i16 [ %v1_9b10, %dec_label_pc_9b10 ], [ %stack_var_-62.1, %.thread7 ]
  store i32 %v2_9848, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v0_9850 = load i32, i32* @r8, align 4
  store i32 %v0_9850, i32* %r0.global-to-local, align 4
  %v3_9854 = call i32 @function_11b18(i32 %v0_9850, i32 %v2_9848, i32 16)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_985c = call i32 @function_111c8(i32* null)
  store i32 %v2_985c, i32* %r0.global-to-local, align 4
  store i32 %v2_9860, i32* @r7, align 4
  store i32 %v2_985c, i32* @r4, align 4
  store i32 %v2_9868, i32* @r6, align 4
  %v9_98c0 = icmp eq i32 %tmp32, %v0_9b50
  %v4_98e8 = zext i16 %stack_var_-62.2 to i32
  %v9_98d4 = icmp eq i1 %v9_98c0, false
  %v9_98ec = icmp eq i32 %v3_98e0, %v4_98e8
  br label %dec_label_pc_9884

dec_label_pc_9874:                                ; preds = %.thread, %dec_label_pc_98dc, %dec_label_pc_9904, %bb73
  %v2_9874 = call i32 @function_111c8(i32* null)
  %v0_9878 = load i32, i32* @r4, align 4
  %v2_9878 = sub i32 %v2_9874, %v0_9878
  store i32 %v2_9878, i32* %r0.global-to-local, align 4
  %v8_9880 = icmp sgt i32 %v2_9878, 10
  br i1 %v8_9880, label %dec_label_pc_990c, label %dec_label_pc_9884

dec_label_pc_9884:                                ; preds = %dec_label_pc_9874, %dec_label_pc_9848
  store i32 256, i32* %r2.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  store i32 %v2_9868, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_9894 = load i32, i32* @sl, align 4
  store i32 %v0_9894, i32* %r0.global-to-local, align 4
  store i32 16, i32* %stack_var_-48, align 4
  %v6_98a4 = call i32 @function_11c38(i32 %v0_9894, i32 %v2_9868, i32 256, i32 16384, i32 %v2_9860, i32 %v2_986c)
  store i32 %v6_98a4, i32* %r2.global-to-local, align 4
  %v7_98ac = icmp eq i32 %v6_98a4, -1
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v7_98ac, label %dec_label_pc_9aac, label %dec_label_pc_98b8

dec_label_pc_98b8:                                ; preds = %dec_label_pc_9884
  store i32 %v0_9b50, i32* %r1.global-to-local, align 4
  store i32 %tmp32, i32* @r3, align 4
  %tmp97 = icmp ult i32 %v6_98a4, 41
  br i1 %tmp97, label %.thread, label %bb73

.thread:                                          ; preds = %dec_label_pc_98b8
  br label %dec_label_pc_9874

bb73:                                             ; preds = %dec_label_pc_98b8
  br i1 %v9_98d4, label %dec_label_pc_9874, label %dec_label_pc_98dc

dec_label_pc_98dc:                                ; preds = %bb73
  store i32 %v3_98e0, i32* @lr, align 4
  store i32 %v2_9800, i32* @r3, align 4
  store i32 %v4_98e8, i32* %r2.global-to-local, align 4
  br i1 %v9_98ec, label %dec_label_pc_98f4, label %dec_label_pc_9874

dec_label_pc_98f4:                                ; preds = %dec_label_pc_98dc
  store i32 %v4_98f4, i32* %r2.global-to-local, align 4
  store i32 %v1_98f8, i32* @r3, align 4
  br i1 %v2_98fc, label %dec_label_pc_9b44, label %dec_label_pc_9904

dec_label_pc_9904:                                ; preds = %dec_label_pc_98f4
  br i1 %v2_9904, label %dec_label_pc_9874, label %dec_label_pc_990c

dec_label_pc_990c:                                ; preds = %dec_label_pc_9904, %dec_label_pc_9874
  %v0_990c = load i32, i32* @r8, align 4
  store i32 %v0_990c, i32* %r0.global-to-local, align 4
  %v1_9910 = call i32 @function_11548(i32 %v0_990c)
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_9920 = call i32 @function_11d30(i32 2, i32 1, i32 0)
  store i32 %v3_9920, i32* %r0.global-to-local, align 4
  %v3_9924 = icmp eq i32 %v3_9920, -1
  store i32 %v3_9920, i32* @r8, align 4
  br i1 %v3_9924, label %dec_label_pc_9930, label %dec_label_pc_97d8

dec_label_pc_9930:                                ; preds = %dec_label_pc_990c, %dec_label_pc_97bc
  %stack_var_-62.3 = phi i16 [ %stack_var_-62.0, %dec_label_pc_97bc ], [ %stack_var_-62.2, %dec_label_pc_990c ]
  %stack_var_-60.4 = phi i32 [ %stack_var_-60.0, %dec_label_pc_97bc ], [ %v0_9b50, %dec_label_pc_990c ]
  %v3_9930 = load i32, i32* %stack_var_-44, align 4
  %v1_9938 = add i32 %v3_9930, 1
  store i32 %v1_9938, i32* @r3, align 4
  store i32 %v1_9938, i32* %stack_var_-44, align 4
  %v5_9944 = icmp slt i32 %v1_9938, %arg2
  br i1 %v5_9944, label %dec_label_pc_97bc, label %dec_label_pc_9948.preheader

dec_label_pc_9948.preheader:                      ; preds = %.thread10, %dec_label_pc_9930, %dec_label_pc_97a0.dec_label_pc_9948.preheader_crit_edge
  %v1_9980.pre-phi = phi i32 [ %.pre91, %dec_label_pc_97a0.dec_label_pc_9948.preheader_crit_edge ], [ %v1_9bac, %dec_label_pc_9930 ], [ %v1_9bac, %.thread10 ]
  %v4_9a64.pre-phi = phi i32 [ %.pre, %dec_label_pc_97a0.dec_label_pc_9948.preheader_crit_edge ], [ %v4_9bec, %dec_label_pc_9930 ], [ %v4_9bec, %.thread10 ]
  %v3_9960 = mul i32 %v1_9724, 65536
  %v1_9964 = add i32 %v3_9960, 1310720
  %tmp75 = udiv i32 %v1_9964, 256
  %v3_9970 = and i32 %tmp75, 65280
  %v2_9a7c = icmp eq i32 %v1_9744, 0
  %v4_9974 = udiv i32 %v1_9964, 16777216
  %v5_9974 = or i32 %v3_9970, %v4_9974
  %v1_997c = add i32 %v1_9724, 20
  %v9_9a6c = icmp eq i32 %v4_9a64.pre-phi, add (i32 ptrtoint (i32* @global_var_10000.37 to i32), i32 -1)
  br label %dec_label_pc_9948

dec_label_pc_9948:                                ; preds = %dec_label_pc_9948.preheader, %dec_label_pc_9b2c
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_97ac, label %dec_label_pc_9b2c, label %dec_label_pc_995c

dec_label_pc_995c:                                ; preds = %dec_label_pc_9948
  store i32 %v1_9964, i32* %r2.global-to-local, align 4
  store i32 %v1_9724, i32* @ip, align 4
  store i32 %v3_9970, i32* %r3.global-to-local, align 4
  store i32 %v5_9974, i32* @sb, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v1_997c, i32* @r8, align 4
  store i32 %v1_9980.pre-phi, i32* @r7, align 4
  br label %dec_label_pc_9a58

dec_label_pc_9988:                                ; preds = %dec_label_pc_9a78, %dec_label_pc_9a84
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_998c = load i32, i32* @r5, align 4
  %v3_998c = add i32 %v2_998c, 10
  %v4_998c = inttoptr i32 %v3_998c to i16*
  store i16 0, i16* %v4_998c, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_9994 = load i32, i32* @r5, align 4
  store i32 %v0_9994, i32* @r0, align 4
  %v2_9998 = call i32 @function_bf78(i32 %v0_9994, i32 20)
  %v3_9998 = trunc i32 %v2_9998 to i16
  store i32 %v2_9998, i32* %r0.global-to-local, align 4
  %v3_999c = load i32, i32* %stack_var_-44, align 4
  store i32 %v2_95a0, i32* %ip.global-to-local, align 4
  %v3_99a4 = mul i32 %v3_999c, 16
  %v2_99a8 = add i32 %v3_99a4, %v2_95a0
  store i32 %v2_99a8, i32* %r1.global-to-local, align 4
  %v1_99ac = add i32 %v2_99a8, 4
  %v2_99ac = inttoptr i32 %v1_99ac to i32*
  %v3_99ac = load i32, i32* %v2_99ac, align 4
  %v3_99b0 = mul i32 %v3_99ac, 65536
  store i32 %v3_99b0, i32* %ip.global-to-local, align 4
  %tmp76 = mul i32 %v3_99ac, 256
  %v1_99b8 = and i32 %tmp76, 65280
  %tmp77 = udiv i32 %v3_99ac, 256
  %v4_99bc = urem i32 %tmp77, 256
  %v5_99bc = or i32 %v4_99bc, %v1_99b8
  store i32 %v5_99bc, i32* %r3.global-to-local, align 4
  %v1_99c0 = add i32 %v3_99ac, 1
  store i32 %v1_99c0, i32* %r2.global-to-local, align 4
  store i32 %v1_99c0, i32* %v2_99ac, align 4
  %v0_99c8 = load i32, i32* %r3.global-to-local, align 4
  %v1_99c8 = load i32, i32* @r6, align 4
  %v2_99c8 = add i32 %v1_99c8, 4
  %v3_99c8 = inttoptr i32 %v2_99c8 to i32*
  store i32 %v0_99c8, i32* %v3_99c8, align 4
  %v0_99cc = load i32, i32* %r1.global-to-local, align 4
  %v1_99cc = add i32 %v0_99cc, 8
  %v2_99cc = inttoptr i32 %v1_99cc to i32*
  %v3_99cc = load i32, i32* %v2_99cc, align 4
  %tmp78 = mul i32 %v3_99cc, 256
  %v1_99d8 = and i32 %tmp78, 65280
  %tmp79 = udiv i32 %v3_99cc, 256
  %v4_99dc = urem i32 %tmp79, 256
  %v5_99dc = or i32 %v4_99dc, %v1_99d8
  store i32 %v5_99dc, i32* %r3.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  %v3_99e4 = load i32, i32* @r5, align 4
  %v4_99e4 = add i32 %v3_99e4, 10
  %v5_99e4 = inttoptr i32 %v4_99e4 to i16*
  store i16 %v3_9998, i16* %v5_99e4, align 2
  %v0_99e8 = load i32, i32* %r3.global-to-local, align 4
  %v1_99e8 = load i32, i32* @r6, align 4
  %v2_99e8 = add i32 %v1_99e8, 8
  %v3_99e8 = inttoptr i32 %v2_99e8 to i32*
  store i32 %v0_99e8, i32* %v3_99e8, align 4
  %v0_99ec = load i32, i32* @lr, align 4
  %v1_99ec = trunc i32 %v0_99ec to i16
  %v2_99ec = load i32, i32* @r6, align 4
  %v3_99ec = add i32 %v2_99ec, 16
  %v4_99ec = inttoptr i32 %v3_99ec to i16*
  store i16 %v1_99ec, i16* %v4_99ec, align 2
  %v0_99f0 = load i32, i32* @r6, align 4
  store i32 %v0_99f0, i32* @r1, align 4
  %v0_99f4 = load i32, i32* @sb, align 4
  store i32 %v0_99f4, i32* %r2.global-to-local, align 4
  %v0_99f8 = load i32, i32* @r8, align 4
  store i32 %v0_99f8, i32* %r3.global-to-local, align 4
  %v0_99fc = load i32, i32* @r5, align 4
  store i32 %v0_99fc, i32* %r0.global-to-local, align 4
  %v4_9a00 = call i32 @function_bfc8(i32 %v0_99fc, i32 %v0_99f0, i32 %v0_99f4, i32 %v0_99f8)
  %v5_9a00 = trunc i32 %v4_9a00 to i16
  store i32 %v4_9a00, i32* %r0.global-to-local, align 4
  %v3_9a04 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9a04, i32* %r3.global-to-local, align 4
  %v3_9a08 = mul i32 %v3_9a04, 32
  store i32 %v3_9a08, i32* %lr.global-to-local, align 4
  %v3_9a0c = load i32, i32* @r6, align 4
  %v4_9a0c = add i32 %v3_9a0c, 16
  %v5_9a0c = inttoptr i32 %v4_9a0c to i16*
  store i16 %v5_9a00, i16* %v5_9a0c, align 2
  %v0_9a10 = load i32, i32* %lr.global-to-local, align 4
  %v1_9a10 = load i32, i32* %r3.global-to-local, align 4
  %tmp98 = mul i32 %v1_9a10, -8
  %v5_9a10 = add i32 %v0_9a10, %tmp98
  store i32 %v5_9a10, i32* %lr.global-to-local, align 4
  %v0_9a14 = load i32, i32* @r6, align 4
  %v1_9a14 = add i32 %v0_9a14, 2
  %v2_9a14 = inttoptr i32 %v1_9a14 to i16*
  %v3_9a14 = load i16, i16* %v2_9a14, align 2
  %v1_9a18 = load i32, i32* @fp, align 4
  %v2_9a18 = add i32 %v1_9a18, %v5_9a10
  store i32 %v2_9a18, i32* @lr, align 4
  %v3_9a1c = add i32 %v2_9a18, 2
  %v4_9a1c = inttoptr i32 %v3_9a1c to i16*
  store i16 %v3_9a14, i16* %v4_9a1c, align 2
  %v0_9a20 = load i32, i32* @r5, align 4
  store i32 %v0_9a20, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* @ip, align 4
  %v0_9a2c = load i32, i32* @sl, align 4
  store i32 %v0_9a2c, i32* %r0.global-to-local, align 4
  %v0_9a30 = load i32, i32* @r7, align 4
  store i32 %v0_9a30, i32* %r2.global-to-local, align 4
  %v0_9a34 = load i32, i32* @lr, align 4
  %v6_9a3c = call i32 @function_11cac(i32 %v0_9a2c, i32 %v0_9a20, i32 %v0_9a30, i32 16384, i32 %v0_9a34, i32 16)
  %v3_9a40 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9a40, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v1_9a48 = add i32 %v3_9a40, 1
  store i32 %v1_9a48, i32* %r0.global-to-local, align 4
  store i32 %v1_9a48, i32* %stack_var_-44, align 4
  %v7_9a54 = icmp slt i32 %v1_9a48, %arg2
  br i1 %v7_9a54, label %dec_label_pc_9a58, label %dec_label_pc_9b2c

dec_label_pc_9a58:                                ; preds = %dec_label_pc_9988, %dec_label_pc_995c
  %v1_9a60 = phi i32 [ %v1_9a48, %dec_label_pc_9988 ], [ 0, %dec_label_pc_995c ]
  store i32 %v2_95b0, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_10000.37 to i32), i32* %r3.global-to-local, align 4
  %v4_9a60 = mul i32 %v1_9a60, 4
  %v5_9a60 = add i32 %v4_9a60, %v2_95b0
  %v6_9a60 = inttoptr i32 %v5_9a60 to i32*
  %v7_9a60 = load i32, i32* %v6_9a60, align 4
  store i32 %v7_9a60, i32* @r5, align 4
  store i32 %v4_9a64.pre-phi, i32* %r0.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.37 to i32), i32 -1), i32* @r3, align 4
  %v1_9a70 = add i32 %v7_9a60, 20
  store i32 %v1_9a70, i32* @r6, align 4
  br i1 %v9_9a6c, label %dec_label_pc_9b20, label %dec_label_pc_9a78

dec_label_pc_9a78:                                ; preds = %dec_label_pc_9a58, %dec_label_pc_9b20
  store i32 %v1_9744, i32* %r1.global-to-local, align 4
  br i1 %v2_9a7c, label %dec_label_pc_9988, label %dec_label_pc_9a84

dec_label_pc_9a84:                                ; preds = %dec_label_pc_9a78
  %v0_9a84 = load i32, i32* @r5, align 4
  %v1_9a84 = add i32 %v0_9a84, 40
  store i32 %v1_9a84, i32* @r4, align 4
  store i32 %v1_9a84, i32* %r0.global-to-local, align 4
  store i32 %v1_9724, i32* %r1.global-to-local, align 4
  %v2_9a90 = call i32 @function_d45c(i32 %v1_9a84, i32 %v1_9724)
  store i32 %v2_9a90, i32* %r0.global-to-local, align 4
  store i32 %v1_9724, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_9a9c = load i32, i32* @r4, align 4
  %v4_9a9c = add i32 %v2_9a9c, %v1_9724
  %v5_9a9c = inttoptr i32 %v4_9a9c to i8*
  store i8 0, i8* %v5_9a9c, align 1
  br label %dec_label_pc_9988

dec_label_pc_9aa4:                                ; preds = %dec_label_pc_9778
  %v0_9aa4 = load i32, i32* @sl, align 4
  store i32 %v0_9aa4, i32* %r0.global-to-local, align 4
  %v1_9aa8 = call i32 @function_11548(i32 %v0_9aa4)
  store i32 %v1_9aa8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9aac

dec_label_pc_9aac:                                ; preds = %dec_label_pc_9884, %dec_label_pc_9b2c, %dec_label_pc_9574, %dec_label_pc_9aa4
  %v1_9ab4 = phi i32 [ %v3_9768, %dec_label_pc_9574 ], [ %v1_9aa8, %dec_label_pc_9aa4 ], [ %v2_9b30, %dec_label_pc_9b2c ], [ 0, %dec_label_pc_9884 ]
  store i32 %v3_9574, i32* %r4.global-to-local, align 4
  store i32 %v27_9574, i32* %lr.global-to-local, align 4
  ret i32 %v1_9ab4

dec_label_pc_9ab8:                                ; preds = %bb70
  %v1_9ab8 = add i32 %v4_981c, 16
  %v2_9ab8 = inttoptr i32 %v1_9ab8 to i32*
  %v3_9ab8 = load i32, i32* %v2_9ab8, align 4
  store i32 %v3_9ab8, i32* @r4, align 4
  %v0_9abc = call i32 @function_d398()
  store i32 %v0_9abc, i32* %r0.global-to-local, align 4
  %v3_9ac0 = load i32, i32* %stack_var_-44, align 4
  %v5_9ac8 = mul i32 %v3_9ac0, 24
  %v0_9acc = load i32, i32* @r4, align 4
  %v1_9acc = and i32 %v0_9acc, 16711680
  store i32 %v1_9acc, i32* %ip.global-to-local, align 4
  %v3_9ad0 = udiv i32 %v0_9acc, 16777216
  %v4_9ad4 = udiv i32 %v1_9acc, 256
  %v5_9ad4 = or i32 %v4_9ad4, %v3_9ad0
  store i32 %v5_9ad4, i32* %r2.global-to-local, align 4
  %v1_9ad8 = load i32, i32* @fp, align 4
  %v2_9ad8 = add i32 %v1_9ad8, %v5_9ac8
  store i32 %v2_9ad8, i32* %r1.global-to-local, align 4
  %v1_9adc = and i32 %v0_9acc, 65280
  store i32 %v1_9adc, i32* %r3.global-to-local, align 4
  %v1_9ae0 = add i32 %v2_9ad8, 20
  %v2_9ae0 = inttoptr i32 %v1_9ae0 to i8*
  %v3_9ae0 = load i8, i8* %v2_9ae0, align 1
  %v4_9ae0 = zext i8 %v3_9ae0 to i32
  store i32 %v4_9ae0, i32* %ip.global-to-local, align 4
  %v5_9ae8 = call i32 @llvm.bswap.i32(i32 %v0_9acc)
  %v7_9aec = lshr i32 %v0_9abc, %v4_9ae0
  %v8_9aec = add i32 %v7_9aec, %v5_9ae8
  store i32 %v8_9aec, i32* %r2.global-to-local, align 4
  %v1_9af0 = and i32 %v8_9aec, 16711680
  store i32 %v1_9af0, i32* %r0.global-to-local, align 4
  %v1_9afc = and i32 %v8_9aec, 65280
  store i32 %v1_9afc, i32* %r1.global-to-local, align 4
  %v5_9b04 = call i32 @llvm.bswap.i32(i32 %v8_9aec)
  store i32 %v5_9b04, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_9824

dec_label_pc_9b10:                                ; preds = %dec_label_pc_9824
  %v0_9b10 = call i32 @function_d398()
  %v1_9b10 = trunc i32 %v0_9b10 to i16
  store i32 %v0_9b10, i32* %r0.global-to-local, align 4
  store i32 %v2_9800, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_9848

dec_label_pc_9b20:                                ; preds = %dec_label_pc_9a58
  %v0_9b20 = call i32 @function_d398()
  %v1_9b20 = trunc i32 %v0_9b20 to i16
  store i32 %v0_9b20, i32* %r0.global-to-local, align 4
  %v3_9b24 = load i32, i32* @r5, align 4
  %v4_9b24 = add i32 %v3_9b24, 4
  %v5_9b24 = inttoptr i32 %v4_9b24 to i16*
  store i16 %v1_9b20, i16* %v5_9b24, align 2
  br label %dec_label_pc_9a78

dec_label_pc_9b2c:                                ; preds = %dec_label_pc_9988, %dec_label_pc_9948
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_9b30 = call i32 @function_111c8(i32* null)
  store i32 %v2_9b30, i32* %r0.global-to-local, align 4
  store i32 %v2_9754, i32* %r2.global-to-local, align 4
  %v6_9b3c = icmp slt i32 %v2_9754, %v2_9b30
  br i1 %v6_9b3c, label %dec_label_pc_9aac, label %dec_label_pc_9948

dec_label_pc_9b44:                                ; preds = %dec_label_pc_98f4
  %v3_9b44 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9b44, i32* @r5, align 4
  store i32 %v2_95a0, i32* %ip.global-to-local, align 4
  store i32 %stack_var_-340.0.ph, i32* %r0.global-to-local, align 4
  %v5_9b50 = mul i32 %v3_9b44, 16
  %v6_9b50 = add i32 %v5_9b50, %v2_95a0
  %v7_9b50 = inttoptr i32 %v6_9b50 to i32*
  store i32 %v0_9b50, i32* %v7_9b50, align 4
  %v0_9b54 = load i32, i32* %r0.global-to-local, align 4
  %v1_9b54 = add i32 %v0_9b54, 4
  %v2_9b54 = inttoptr i32 %v1_9b54 to i32*
  %v3_9b54 = load i32, i32* %v2_9b54, align 4
  %v1_9b58 = and i32 %v3_9b54, 16711680
  store i32 %v1_9b58, i32* %r0.global-to-local, align 4
  %v5_9b6c = call i32 @llvm.bswap.i32(i32 %v3_9b54)
  store i32 %v5_9b6c, i32* %r3.global-to-local, align 4
  store i32 %v2_95a0, i32* %r1.global-to-local, align 4
  %v0_9b74 = load i32, i32* @r5, align 4
  %v3_9b74 = mul i32 %v0_9b74, 16
  %v2_9b78 = add i32 %v3_9b74, %v2_95a0
  store i32 %v2_9b78, i32* %ip.global-to-local, align 4
  %v2_9b7c = add i32 %v2_9b78, 4
  %v3_9b7c = inttoptr i32 %v2_9b7c to i32*
  store i32 %v5_9b6c, i32* %v3_9b7c, align 4
  store i32 %stack_var_-340.0.ph, i32* %r2.global-to-local, align 4
  %v1_9b84 = add i32 %stack_var_-340.0.ph, 8
  %v2_9b84 = inttoptr i32 %v1_9b84 to i32*
  %v3_9b84 = load i32, i32* %v2_9b84, align 4
  %v1_9b90 = and i32 %v3_9b84, 65280
  store i32 %v1_9b90, i32* %r2.global-to-local, align 4
  %v5_9b9c = call i32 @llvm.bswap.i32(i32 %v3_9b84)
  store i32 %v5_9b9c, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-340.0.ph, i32* %r1.global-to-local, align 4
  store i32 %v1_9724, i32* %r0.global-to-local, align 4
  %v1_9ba8 = add i32 %stack_var_-340.0.ph, 2
  %v2_9ba8 = inttoptr i32 %v1_9ba8 to i16*
  %v3_9ba8 = load i16, i16* %v2_9ba8, align 2
  %v4_9ba8 = zext i16 %v3_9ba8 to i32
  store i32 %v4_9ba8, i32* %r1.global-to-local, align 4
  store i32 %v1_9bac, i32* @r4, align 4
  %v2_9bb0 = load i32, i32* %ip.global-to-local, align 4
  %v3_9bb0 = add i32 %v2_9bb0, 12
  %v4_9bb0 = inttoptr i32 %v3_9bb0 to i16*
  store i16 %v3_9ba8, i16* %v4_9bb0, align 2
  %v0_9bb4 = load i32, i32* @lr, align 4
  %v1_9bb4 = trunc i32 %v0_9bb4 to i16
  %v2_9bb4 = load i32, i32* %ip.global-to-local, align 4
  %v3_9bb4 = add i32 %v2_9bb4, 14
  %v4_9bb4 = inttoptr i32 %v3_9bb4 to i16*
  store i16 %v1_9bb4, i16* %v4_9bb4, align 2
  %v0_9bb8 = load i32, i32* %r3.global-to-local, align 4
  %v1_9bb8 = load i32, i32* %ip.global-to-local, align 4
  %v2_9bb8 = add i32 %v1_9bb8, 8
  %v3_9bb8 = inttoptr i32 %v2_9bb8 to i32*
  store i32 %v0_9bb8, i32* %v3_9bb8, align 4
  %v0_9bbc = load i32, i32* @r4, align 4
  store i32 %v0_9bbc, i32* @r0, align 4
  %v0_9bc0 = call i32 @function_11f78()
  store i32 %v0_9bc0, i32* %r0.global-to-local, align 4
  store i32 %v2_95b0, i32* %r3.global-to-local, align 4
  %v2_9bcc = load i32, i32* @r5, align 4
  %v5_9bcc = mul i32 %v2_9bcc, 4
  %v6_9bcc = add i32 %v5_9bcc, %v2_95b0
  %v7_9bcc = inttoptr i32 %v6_9bcc to i32*
  store i32 %v0_9bc0, i32* %v7_9bcc, align 4
  %v3_9bd0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9bd0, i32* %r2.global-to-local, align 4
  %v0_9bd4 = load i32, i32* %r3.global-to-local, align 4
  %v4_9bd4 = mul i32 %v3_9bd0, 4
  %v5_9bd4 = add i32 %v0_9bd4, %v4_9bd4
  %v6_9bd4 = inttoptr i32 %v5_9bd4 to i32*
  %v7_9bd4 = load i32, i32* %v6_9bd4, align 4
  store i32 %v7_9bd4, i32* %ip.global-to-local, align 4
  %v1_9bd8 = inttoptr i32 %v7_9bd4 to i8*
  %v2_9bd8 = load i8, i8* %v1_9bd8, align 1
  %tmp99 = urem i8 %v2_9bd8, 16
  %v1_9bdc = zext i8 %tmp99 to i32
  %v1_9be0 = or i32 %v1_9bdc, 64
  store i32 %v1_9be0, i32* %r3.global-to-local, align 4
  %v1_9be4 = trunc i32 %v1_9be0 to i8
  store i8 %v1_9be4, i8* %v1_9bd8, align 1
  %v0_9be8 = load i32, i32* %ip.global-to-local, align 4
  %v1_9be8 = inttoptr i32 %v0_9be8 to i8*
  %v2_9be8 = load i8, i8* %v1_9be8, align 1
  store i32 %v4_9bec, i32* %lr.global-to-local, align 4
  %v1_9bf0 = and i8 %v2_9be8, -16
  %v1_9bfc = or i8 %v1_9bf0, 5
  %v0_9c00 = load i32, i32* @r4, align 4
  %v3_9c00 = mul i32 %v0_9c00, 65536
  store i32 %v3_9c00, i32* %r4.global-to-local, align 4
  store i32 %v5_9c04, i32* %r1.global-to-local, align 4
  store i32 %v1_9630, i32* %r0.global-to-local, align 4
  store i8 %v1_9bfc, i8* %v1_9be8, align 1
  %v0_9c10 = load i32, i32* %r1.global-to-local, align 4
  %v1_9c10 = trunc i32 %v0_9c10 to i16
  %v2_9c10 = load i32, i32* %ip.global-to-local, align 4
  %v3_9c10 = add i32 %v2_9c10, 4
  %v4_9c10 = inttoptr i32 %v3_9c10 to i16*
  store i16 %v1_9c10, i16* %v4_9c10, align 2
  %v0_9c14 = load i32, i32* %r4.global-to-local, align 4
  %v3_9c14 = udiv i32 %v0_9c14, 256
  %v1_9c1c = and i32 %v3_9c14, 65280
  store i32 %v1_9c1c, i32* %r2.global-to-local, align 4
  %v2_9c20 = load i32, i32* %ip.global-to-local, align 4
  %v3_9c20 = add i32 %v2_9c20, 1
  %v4_9c20 = inttoptr i32 %v3_9c20 to i8*
  store i8 %v5_95e8, i8* %v4_9c20, align 1
  %v0_9c24 = load i32, i32* %r2.global-to-local, align 4
  %v1_9c24 = load i32, i32* %r4.global-to-local, align 4
  %v4_9c24 = udiv i32 %v1_9c24, 16777216
  %v5_9c24 = or i32 %v4_9c24, %v0_9c24
  %v1_9c28 = trunc i32 %v5_9c24 to i16
  %v2_9c28 = load i32, i32* %ip.global-to-local, align 4
  %v3_9c28 = add i32 %v2_9c28, 2
  %v4_9c28 = inttoptr i32 %v3_9c28 to i16*
  store i16 %v1_9c28, i16* %v4_9c28, align 2
  %v0_9c30 = load i32, i32* %ip.global-to-local, align 4
  %v1_9c30 = add i32 %v0_9c30, 20
  store i32 %v1_9c30, i32* %r3.global-to-local, align 4
  %v3_9c34 = add i32 %v0_9c30, 8
  %v4_9c34 = inttoptr i32 %v3_9c34 to i8*
  store i8 %v5_9620, i8* %v4_9c34, align 1
  %v0_9c38 = load i32, i32* %r3.global-to-local, align 4
  %v2_9c40 = load i32, i32* %ip.global-to-local, align 4
  %v3_9c40 = add i32 %v2_9c40, 9
  %v4_9c40 = inttoptr i32 %v3_9c40 to i8*
  store i8 6, i8* %v4_9c40, align 1
  store i32 ptrtoint (i32* @global_var_21644.39 to i32), i32* %r2.global-to-local, align 4
  %v2_9c48 = load i32, i32* @global_var_21644.39, align 4
  store i32 %v2_9c48, i32* %r1.global-to-local, align 4
  %v1_9c4c = load i32, i32* %ip.global-to-local, align 4
  %v2_9c4c = add i32 %v1_9c4c, 12
  %v3_9c4c = inttoptr i32 %v2_9c4c to i32*
  store i32 %v2_9c48, i32* %v3_9c4c, align 4
  %v0_9c50 = load i32, i32* %r0.global-to-local, align 4
  %v2_9c50 = icmp eq i32 %v0_9c50, 0
  %v3_9c54 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9c54, i32* %r3.global-to-local, align 4
  store i32 %v2_95a0, i32* %r0.global-to-local, align 4
  br i1 %v2_9c50, label %.thread10, label %bb80

bb80:                                             ; preds = %dec_label_pc_9b44
  store i32 64, i32* %lr.global-to-local, align 4
  %v3_9c60 = load i32, i32* %ip.global-to-local, align 4
  %v4_9c60 = add i32 %v3_9c60, 6
  %v5_9c60 = inttoptr i32 %v4_9c60 to i16*
  store i16 64, i16* %v5_9c60, align 2
  %v0_9c64.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_9c64.pre = load i32, i32* %r3.global-to-local, align 4
  br label %.thread10

.thread10:                                        ; preds = %dec_label_pc_9b44, %bb80
  %v0_9c68 = phi i32 [ %v3_9c54, %dec_label_pc_9b44 ], [ %v1_9c64.pre, %bb80 ]
  %v1_9c6c = phi i32 [ %v2_95a0, %dec_label_pc_9b44 ], [ %v0_9c64.pre, %bb80 ]
  %v4_9c64 = mul i32 %v0_9c68, 16
  %v5_9c64 = add i32 %v4_9c64, %v1_9c6c
  %v6_9c64 = inttoptr i32 %v5_9c64 to i32*
  %v7_9c64 = load i32, i32* %v6_9c64, align 4
  store i32 %v7_9c64, i32* %r2.global-to-local, align 4
  store i32 %v5_9c64, i32* %r3.global-to-local, align 4
  %v1_9c70 = load i32, i32* %ip.global-to-local, align 4
  %v2_9c70 = add i32 %v1_9c70, 16
  %v3_9c70 = inttoptr i32 %v2_9c70 to i32*
  store i32 %v7_9c64, i32* %v3_9c70, align 4
  %v0_9c74 = load i32, i32* %r3.global-to-local, align 4
  %v1_9c74 = add i32 %v0_9c74, 12
  %v2_9c74 = inttoptr i32 %v1_9c74 to i16*
  %v3_9c74 = load i16, i16* %v2_9c74, align 2
  %v4_9c74 = zext i16 %v3_9c74 to i32
  store i32 %v4_9c74, i32* %r1.global-to-local, align 4
  %v0_9c78 = load i32, i32* %ip.global-to-local, align 4
  %v1_9c78 = add i32 %v0_9c78, 40
  store i32 %v1_9c78, i32* @r4, align 4
  %v3_9c7c = add i32 %v0_9c78, 20
  %v4_9c7c = inttoptr i32 %v3_9c7c to i16*
  store i16 %v3_9c74, i16* %v4_9c7c, align 2
  store i32 %v0_9c38, i32* %ip.global-to-local, align 4
  %v0_9c84 = load i32, i32* %r3.global-to-local, align 4
  %v1_9c84 = add i32 %v0_9c84, 8
  %v2_9c84 = inttoptr i32 %v1_9c84 to i32*
  %v3_9c84 = load i32, i32* %v2_9c84, align 4
  store i32 %v3_9c84, i32* %r1.global-to-local, align 4
  %v2_9c88 = add i32 %v0_9c38, 4
  %v3_9c88 = inttoptr i32 %v2_9c88 to i32*
  store i32 %v3_9c84, i32* %v3_9c88, align 4
  %v0_9c8c = load i32, i32* %ip.global-to-local, align 4
  %v1_9c8c = add i32 %v0_9c8c, 13
  %v2_9c8c = inttoptr i32 %v1_9c8c to i8*
  %v3_9c8c = load i8, i8* %v2_9c8c, align 1
  %v4_9c8c = zext i8 %v3_9c8c to i32
  store i32 %v4_9c8c, i32* %r2.global-to-local, align 4
  %v0_9c90 = load i32, i32* %r3.global-to-local, align 4
  %v1_9c90 = add i32 %v0_9c90, 4
  %v2_9c90 = inttoptr i32 %v1_9c90 to i32*
  %v3_9c90 = load i32, i32* %v2_9c90, align 4
  store i32 %v3_9c90, i32* %r1.global-to-local, align 4
  %v1_9c94 = add i32 %v0_9c90, 14
  %v2_9c94 = inttoptr i32 %v1_9c94 to i16*
  %v3_9c94 = load i16, i16* %v2_9c94, align 2
  %v4_9c94 = zext i16 %v3_9c94 to i32
  store i32 %v4_9c94, i32* %r3.global-to-local, align 4
  %v1_9c98 = or i32 %v4_9c8c, 1
  store i32 %v1_9c98, i32* %r2.global-to-local, align 4
  %v3_9c9c = add i32 %v0_9c8c, 2
  %v4_9c9c = inttoptr i32 %v3_9c9c to i16*
  store i16 %v3_9c94, i16* %v4_9c9c, align 2
  %v0_9ca0 = load i32, i32* %r2.global-to-local, align 4
  %v1_9ca0 = trunc i32 %v0_9ca0 to i8
  %v2_9ca0 = load i32, i32* %ip.global-to-local, align 4
  %v3_9ca0 = add i32 %v2_9ca0, 13
  %v4_9ca0 = inttoptr i32 %v3_9ca0 to i8*
  store i8 %v1_9ca0, i8* %v4_9ca0, align 1
  %v0_9ca4 = load i32, i32* %ip.global-to-local, align 4
  %v1_9ca4 = add i32 %v0_9ca4, 12
  %v2_9ca4 = inttoptr i32 %v1_9ca4 to i8*
  %v3_9ca4 = load i8, i8* %v2_9ca4, align 1
  %v4_9ca4 = zext i8 %v3_9ca4 to i32
  store i32 %v4_9ca4, i32* %r3.global-to-local, align 4
  %v1_9ca8 = add i32 %v0_9ca4, 13
  %v2_9ca8 = inttoptr i32 %v1_9ca8 to i8*
  %v3_9ca8 = load i8, i8* %v2_9ca8, align 1
  %v4_9ca8 = zext i8 %v3_9ca8 to i32
  %tmp100 = urem i8 %v3_9ca4, 16
  %v1_9cac = zext i8 %tmp100 to i32
  %v1_9cb0 = or i32 %v1_9cac, 128
  store i32 %v1_9cb0, i32* %r3.global-to-local, align 4
  %v1_9cb4 = or i32 %v4_9ca8, 16
  store i32 %v1_9cb4, i32* %r2.global-to-local, align 4
  %v0_9cb8 = load i32, i32* %r1.global-to-local, align 4
  %v2_9cb8 = add i32 %v0_9ca4, 8
  %v3_9cb8 = inttoptr i32 %v2_9cb8 to i32*
  store i32 %v0_9cb8, i32* %v3_9cb8, align 4
  %v0_9cbc = load i32, i32* %r3.global-to-local, align 4
  %v1_9cbc = trunc i32 %v0_9cbc to i8
  %v2_9cbc = load i32, i32* %ip.global-to-local, align 4
  %v3_9cbc = add i32 %v2_9cbc, 12
  %v4_9cbc = inttoptr i32 %v3_9cbc to i8*
  store i8 %v1_9cbc, i8* %v4_9cbc, align 1
  %v0_9cc0 = load i32, i32* %r2.global-to-local, align 4
  %v1_9cc0 = trunc i32 %v0_9cc0 to i8
  %v2_9cc0 = load i32, i32* %ip.global-to-local, align 4
  %v3_9cc0 = add i32 %v2_9cc0, 13
  %v4_9cc0 = inttoptr i32 %v3_9cc0 to i8*
  store i8 %v1_9cc0, i8* %v4_9cc0, align 1
  %v0_9cc4 = call i32 @function_d398()
  %v1_9cc4 = trunc i32 %v0_9cc4 to i16
  store i32 %v0_9cc4, i32* %r0.global-to-local, align 4
  store i32 %v0_9c38, i32* %lr.global-to-local, align 4
  store i32 %v1_966c, i32* %r1.global-to-local, align 4
  %v1_9cd0 = add i32 %v0_9c38, 13
  %v2_9cd0 = inttoptr i32 %v1_9cd0 to i8*
  %v3_9cd0 = load i8, i8* %v2_9cd0, align 1
  %v4_9cd0 = zext i8 %v3_9cd0 to i32
  store i32 %v1_9cd4, i32* %r2.global-to-local, align 4
  %v1_9cd8 = and i32 %v4_9cd0, 223
  %v5_9cdc = or i32 %v1_9cd8, %v4_9cdc
  store i32 %v5_9cdc, i32* %r3.global-to-local, align 4
  %v1_9ce0 = trunc i32 %v5_9cdc to i8
  store i8 %v1_9ce0, i8* %v2_9cd0, align 1
  store i32 %v1_968c, i32* %ip.global-to-local, align 4
  %v0_9ce8 = load i32, i32* %lr.global-to-local, align 4
  %v1_9ce8 = add i32 %v0_9ce8, 13
  %v2_9ce8 = inttoptr i32 %v1_9ce8 to i8*
  %v3_9ce8 = load i8, i8* %v2_9ce8, align 1
  %v4_9ce8 = zext i8 %v3_9ce8 to i32
  store i32 %v1_9cec, i32* %r3.global-to-local, align 4
  %v1_9cf0 = and i32 %v4_9ce8, 239
  %v5_9cf4 = or i32 %v1_9cf0, %v4_9cf4
  store i32 %v5_9cf4, i32* %r2.global-to-local, align 4
  %v1_9cf8 = trunc i32 %v5_9cf4 to i8
  store i8 %v1_9cf8, i8* %v2_9ce8, align 1
  %v0_9cfc = load i32, i32* %lr.global-to-local, align 4
  %v1_9cfc = add i32 %v0_9cfc, 13
  %v2_9cfc = inttoptr i32 %v1_9cfc to i8*
  %v3_9cfc = load i8, i8* %v2_9cfc, align 1
  %v4_9cfc = zext i8 %v3_9cfc to i32
  store i32 %v1_96ac, i32* %lr.global-to-local, align 4
  store i32 %v0_9c38, i32* %r1.global-to-local, align 4
  store i32 %v1_9d08, i32* %r2.global-to-local, align 4
  %v1_9d0c = and i32 %v4_9cfc, 247
  %v5_9d10 = or i32 %v1_9d0c, %v4_9d10
  store i32 %v5_9d10, i32* %r3.global-to-local, align 4
  %v1_9d14 = trunc i32 %v5_9d10 to i8
  store i8 %v1_9d14, i8* %v2_9cd0, align 1
  store i32 %v1_96cc, i32* @ip, align 4
  %v0_9d1c = load i32, i32* %r1.global-to-local, align 4
  %v1_9d1c = add i32 %v0_9d1c, 13
  %v2_9d1c = inttoptr i32 %v1_9d1c to i8*
  %v3_9d1c = load i8, i8* %v2_9d1c, align 1
  %v4_9d1c = zext i8 %v3_9d1c to i32
  store i32 %v1_9d20, i32* %r3.global-to-local, align 4
  %v1_9d24 = and i32 %v4_9d1c, 251
  %v5_9d28 = or i32 %v1_9d24, %v4_9d28
  store i32 %v5_9d28, i32* %r2.global-to-local, align 4
  %v1_9d2c = trunc i32 %v5_9d28 to i8
  store i8 %v1_9d2c, i8* %v2_9d1c, align 1
  store i32 %v1_96ec, i32* @lr, align 4
  %v0_9d34 = load i32, i32* %r1.global-to-local, align 4
  %v1_9d34 = add i32 %v0_9d34, 13
  %v2_9d34 = inttoptr i32 %v1_9d34 to i8*
  %v3_9d34 = load i8, i8* %v2_9d34, align 1
  %v4_9d34 = zext i8 %v3_9d34 to i32
  store i32 %v1_9d38, i32* %r2.global-to-local, align 4
  %v1_9d3c = and i32 %v4_9d34, 253
  %v4_9d40 = or i32 %v1_9d3c, %v3_9d40
  store i32 %v4_9d40, i32* %r3.global-to-local, align 4
  %v1_9d44 = trunc i32 %v4_9d40 to i8
  store i8 %v1_9d44, i8* %v2_9d34, align 1
  %v0_9d48 = load i32, i32* %r1.global-to-local, align 4
  %v1_9d48 = add i32 %v0_9d48, 13
  %v2_9d48 = inttoptr i32 %v1_9d48 to i8*
  %v3_9d48 = load i8, i8* %v2_9d48, align 1
  %v4_9d48 = zext i8 %v3_9d48 to i32
  %v1_9d50 = and i32 %v4_9d48, 254
  %v2_9d58 = or i32 %v1_9d50, %v1_9d54
  store i32 %v2_9d58, i32* @r3, align 4
  store i32 %v0_9c38, i32* %r2.global-to-local, align 4
  %v1_9d60 = trunc i32 %v2_9d58 to i8
  store i8 %v1_9d60, i8* %v2_9cd0, align 1
  %v3_9d64 = load i32, i32* %r2.global-to-local, align 4
  %v4_9d64 = add i32 %v3_9d64, 14
  %v5_9d64 = inttoptr i32 %v4_9d64 to i16*
  store i16 %v1_9cc4, i16* %v5_9d64, align 2
  store i32 %v1_9724, i32* %r1.global-to-local, align 4
  %v0_9d6c = load i32, i32* @r4, align 4
  store i32 %v0_9d6c, i32* %r0.global-to-local, align 4
  %v2_9d70 = call i32 @function_d45c(i32 %v0_9d6c, i32 %v1_9724)
  store i32 %v2_9d70, i32* %r0.global-to-local, align 4
  store i32 %v1_9724, i32* %ip.global-to-local, align 4
  %v2_9d7c = load i32, i32* @r4, align 4
  %v4_9d7c = add i32 %v2_9d7c, %v1_9724
  %v5_9d7c = inttoptr i32 %v4_9d7c to i8*
  store i8 0, i8* %v5_9d7c, align 1
  %v3_9d80 = load i32, i32* %stack_var_-44, align 4
  %v1_9d88 = add i32 %v3_9d80, 1
  store i32 %v1_9d88, i32* @r3, align 4
  store i32 %v1_9d88, i32* %stack_var_-44, align 4
  %v5_9d94 = icmp slt i32 %v1_9d88, %arg2
  br i1 %v5_9d94, label %dec_label_pc_97bc.outer, label %dec_label_pc_9948.preheader

; uselistorder directives
  uselistorder i32 %v1_9d88, { 1, 0, 2 }
  uselistorder i8* %v2_9cd0, { 2, 0, 1, 3 }
  uselistorder i32 %v0_9cc4, { 1, 0 }
  uselistorder i32 %v0_9c38, { 1, 2, 4, 3, 6, 5, 0 }
  uselistorder i32 %v5_9b6c, { 1, 0 }
  uselistorder i32 %v2_9b30, { 1, 2, 0 }
  uselistorder i32 %v0_9b20, { 1, 0 }
  uselistorder i32 %v0_9b10, { 1, 0 }
  uselistorder i32 %v0_9acc, { 1, 2, 0, 3 }
  uselistorder i32 %v1_9a48, { 1, 2, 0, 3 }
  uselistorder i32 %v5_9a10, { 1, 0 }
  uselistorder i32 %v4_9a00, { 1, 0 }
  uselistorder i32 %v3_99cc, { 1, 0 }
  uselistorder i32 %v3_99ac, { 3, 2, 0, 1 }
  uselistorder i32 %v2_9998, { 1, 0 }
  uselistorder i32 %v3_9970, { 1, 0 }
  uselistorder i32 %v1_9964, { 2, 0, 1 }
  uselistorder i32 %v1_9938, { 1, 0, 2 }
  uselistorder i32 %v3_9920, { 0, 2, 3, 1 }
  uselistorder i32 %v4_98e8, { 1, 0 }
  uselistorder i16 %stack_var_-62.2, { 0, 3, 1, 2 }
  uselistorder i32 %v0_982c, { 1, 0, 2 }
  uselistorder i32 %v0_9b50, { 1, 0, 4, 5, 2, 3 }
  uselistorder i32 %v4_981c, { 1, 0 }
  uselistorder i1 %v7_9814, { 1, 0 }
  uselistorder i32 %v3_97c8, { 1, 2, 0, 3 }
  uselistorder i32 %stack_var_-60.0, { 1, 0 }
  uselistorder i16 %stack_var_-62.0, { 1, 0 }
  uselistorder i32 %stack_var_-340.0.ph, { 3, 4, 1, 2, 0 }
  uselistorder i32 %v1_9d38, { 1, 0 }
  uselistorder i32 %v1_9d20, { 1, 0 }
  uselistorder i32 %v1_9cec, { 1, 0 }
  uselistorder i32 %v3_98e0, { 1, 0 }
  uselistorder i32 %v1_9d08, { 1, 0 }
  uselistorder i32 %v1_9cd4, { 1, 0 }
  uselistorder i32 %v4_9bec, { 4, 2, 3, 0, 1 }
  uselistorder i32 %v1_9bac, { 2, 0, 1 }
  uselistorder i32 %v1_98f8, { 1, 0 }
  uselistorder i32 %v4_98f4, { 2, 0, 1 }
  uselistorder i32 %v2_9800, { 3, 2, 1, 4, 0 }
  uselistorder i16 %v5_97b4, { 1, 0 }
  uselistorder i32 %v0_97a4, { 1, 0 }
  uselistorder i32 %v3_9768, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_9754, { 1, 0 }
  uselistorder i32 %v1_9744, { 2, 1, 0 }
  uselistorder i32 %v1_9724, { 2, 7, 6, 5, 8, 3, 12, 11, 10, 13, 4, 0, 9, 1 }
  uselistorder i32 %v1_96ec, { 1, 0 }
  uselistorder i32 %v1_96cc, { 1, 0 }
  uselistorder i32 %v1_96ac, { 1, 0 }
  uselistorder i32 %v1_968c, { 1, 0 }
  uselistorder i32 %v1_966c, { 1, 0 }
  uselistorder i32 %v1_9648, { 1, 0 }
  uselistorder i32 %v1_9630, { 1, 0 }
  uselistorder i32 %v1_9604, { 1, 0 }
  uselistorder i32 %v1_95c8, { 1, 0 }
  uselistorder i32 %v2_95b0, { 0, 2, 1, 3 }
  uselistorder i32 %v2_95a0, { 3, 4, 0, 5, 1, 6, 2, 7 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 15, 16 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 38, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 37, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 7, 3, 4, 5, 6, 12, 8, 9, 10, 11, 14, 13, 16, 17, 15, 18, 20, 19, 23, 21, 27, 22, 24, 26, 25, 30, 28, 29, 31, 32, 33, 35, 36, 34, 37, 39, 38, 41, 40, 44, 43, 42, 45, 47, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 0 }
  uselistorder i32 %arg2, { 2, 1, 4, 5, 3, 0, 6, 8, 7, 10, 9, 11 }
  uselistorder label %.thread10, { 1, 0 }
  uselistorder label %dec_label_pc_9aac, { 1, 3, 0, 2 }
  uselistorder label %dec_label_pc_9a78, { 1, 0 }
  uselistorder label %dec_label_pc_9988, { 1, 0 }
  uselistorder label %dec_label_pc_9948, { 1, 0 }
  uselistorder label %dec_label_pc_9874, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_9848, { 1, 0 }
  uselistorder label %dec_label_pc_9824, { 1, 0 }
  uselistorder label %bb70, { 1, 0 }
  uselistorder label %dec_label_pc_97d8, { 1, 0 }
  uselistorder label %dec_label_pc_97bc, { 1, 0 }
  uselistorder label %dec_label_pc_97bc.outer, { 1, 0 }
}

define i32 @function_9da0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_9da0:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v18_9da0 = load i32, i32* @sb, align 4
  %v24_9da0 = load i32, i32* @fp, align 4
  %v27_9da0 = load i32, i32* @lr, align 4
  store i32 0, i32* @sl, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_9dcc = call i32 @function_12898(i32 %arg2, i32 4)
  %v0_9dd0 = load i32, i32* @r4, align 4
  store i32 %v0_9dd0, i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  %v0_9ddc = load i32, i32* @sl, align 4
  store i32 %v0_9ddc, i32* @r3, align 4
  %v0_9de0 = load i32, i32* @r5, align 4
  store i32 %v0_9de0, i32* %r0.global-to-local, align 4
  %v1_9de4 = call i32 @function_8258(i32 %v0_9de0)
  %v1_9df0 = urem i32 %v1_9de4, 256
  store i32 %v1_9df0, i32* %ip.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.37 to i32), i32 -1), i32* @r3, align 4
  store i32 3, i32* @r2, align 4
  %v0_9dfc = load i32, i32* @r4, align 4
  store i32 %v0_9dfc, i32* @r1, align 4
  %v0_9e00 = load i32, i32* @r5, align 4
  store i32 %v0_9e00, i32* %r0.global-to-local, align 4
  %v5_9e04 = trunc i32 %v1_9de4 to i8
  %v1_9e08 = call i32 @function_8258(i32 %v0_9e00)
  %v0_9e0c = load i32, i32* @r4, align 4
  store i32 %v0_9e0c, i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  store i32 64, i32* @r3, align 4
  %v0_9e1c = load i32, i32* @r5, align 4
  store i32 %v0_9e1c, i32* %r0.global-to-local, align 4
  %v1_9e20 = call i32 @function_8258(i32 %v0_9e1c)
  %v1_9e28 = urem i32 %v1_9e20, 256
  store i32 %v1_9e28, i32* %ip.global-to-local, align 4
  %v0_9e2c = load i32, i32* @r4, align 4
  store i32 %v0_9e2c, i32* @r1, align 4
  store i32 5, i32* @r2, align 4
  %v0_9e34 = load i32, i32* @sl, align 4
  store i32 %v0_9e34, i32* @r3, align 4
  %v0_9e38 = load i32, i32* @r5, align 4
  store i32 %v0_9e38, i32* %r0.global-to-local, align 4
  %v1_9e40 = call i32 @function_8258(i32 %v0_9e38)
  %v1_9e4c = urem i32 %v1_9e40, 256
  store i32 %v1_9e4c, i32* %ip.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.37 to i32), i32 -1), i32* @r3, align 4
  store i32 6, i32* @r2, align 4
  %v0_9e58 = load i32, i32* @r4, align 4
  store i32 %v0_9e58, i32* @r1, align 4
  %v0_9e5c = load i32, i32* @r5, align 4
  store i32 %v0_9e5c, i32* %r0.global-to-local, align 4
  %v1_9e64 = call i32 @function_8258(i32 %v0_9e5c)
  %v0_9e6c = load i32, i32* @r4, align 4
  store i32 %v0_9e6c, i32* @r1, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.37 to i32), i32 -1), i32* @r3, align 4
  store i32 7, i32* @r2, align 4
  store i32 %v1_9e64, i32* %fp.global-to-local, align 4
  %v0_9e7c = load i32, i32* @r5, align 4
  store i32 %v0_9e7c, i32* %r0.global-to-local, align 4
  %v1_9e80 = call i32 @function_8258(i32 %v0_9e7c)
  %v0_9e88 = load i32, i32* @r4, align 4
  store i32 %v0_9e88, i32* @r1, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.37 to i32), i32 -1), i32* @r3, align 4
  store i32 16, i32* @r2, align 4
  store i32 %v1_9e80, i32* %sb.global-to-local, align 4
  %v0_9e98 = load i32, i32* @r5, align 4
  store i32 %v0_9e98, i32* %r0.global-to-local, align 4
  %v1_9e9c = call i32 @function_8258(i32 %v0_9e98)
  %v0_9ea8 = load i32, i32* @r4, align 4
  store i32 %v0_9ea8, i32* @r1, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.37 to i32), i32 -1), i32* @r3, align 4
  store i32 17, i32* @r2, align 4
  %v0_9eb4 = load i32, i32* @r5, align 4
  store i32 %v0_9eb4, i32* %r0.global-to-local, align 4
  %v1_9eb8 = call i32 @function_8258(i32 %v0_9eb4)
  %v0_9ebc = load i32, i32* @r4, align 4
  store i32 %v0_9ebc, i32* @r1, align 4
  store i32 10, i32* @r2, align 4
  %v0_9ec8 = load i32, i32* @sl, align 4
  store i32 %v0_9ec8, i32* @r3, align 4
  %v0_9ecc = load i32, i32* @r5, align 4
  store i32 %v0_9ecc, i32* %r0.global-to-local, align 4
  %v1_9ed0 = call i32 @function_8258(i32 %v0_9ecc)
  %v0_9ed4 = load i32, i32* @r4, align 4
  store i32 %v0_9ed4, i32* @r1, align 4
  store i32 11, i32* @r2, align 4
  store i32 1, i32* @r3, align 4
  %v0_9ee4 = load i32, i32* @r5, align 4
  store i32 %v0_9ee4, i32* %r0.global-to-local, align 4
  %v1_9ee8 = call i32 @function_8258(i32 %v0_9ee4)
  %v0_9eec = load i32, i32* @r4, align 4
  store i32 %v0_9eec, i32* @r1, align 4
  store i32 12, i32* @r2, align 4
  %v0_9ef8 = load i32, i32* @sl, align 4
  store i32 %v0_9ef8, i32* @r3, align 4
  %v0_9efc = load i32, i32* @r5, align 4
  store i32 %v0_9efc, i32* %r0.global-to-local, align 4
  %v1_9f00 = call i32 @function_8258(i32 %v0_9efc)
  %v0_9f04 = load i32, i32* @r4, align 4
  store i32 %v0_9f04, i32* @r1, align 4
  store i32 13, i32* @r2, align 4
  %v0_9f10 = load i32, i32* @sl, align 4
  store i32 %v0_9f10, i32* @r3, align 4
  %v0_9f14 = load i32, i32* @r5, align 4
  store i32 %v0_9f14, i32* %r0.global-to-local, align 4
  %v1_9f18 = call i32 @function_8258(i32 %v0_9f14)
  %v0_9f1c = load i32, i32* @r4, align 4
  store i32 %v0_9f1c, i32* @r1, align 4
  store i32 14, i32* @r2, align 4
  %v0_9f28 = load i32, i32* @sl, align 4
  store i32 %v0_9f28, i32* @r3, align 4
  %v0_9f2c = load i32, i32* @r5, align 4
  store i32 %v0_9f2c, i32* %r0.global-to-local, align 4
  %v1_9f30 = call i32 @function_8258(i32 %v0_9f2c)
  %v0_9f34 = load i32, i32* @r4, align 4
  store i32 %v0_9f34, i32* @r1, align 4
  %v0_9f3c = load i32, i32* @sl, align 4
  store i32 %v0_9f3c, i32* @r3, align 4
  store i32 15, i32* @r2, align 4
  %v0_9f44 = load i32, i32* @r5, align 4
  store i32 %v0_9f44, i32* %r0.global-to-local, align 4
  %v1_9f48 = call i32 @function_8258(i32 %v0_9f44)
  %v0_9f4c = load i32, i32* @r4, align 4
  store i32 %v0_9f4c, i32* @r1, align 4
  %v0_9f54 = load i32, i32* @sl, align 4
  store i32 %v0_9f54, i32* @r2, align 4
  store i32 512, i32* @r3, align 4
  %v0_9f5c = load i32, i32* @r5, align 4
  store i32 %v0_9f5c, i32* %r0.global-to-local, align 4
  %v1_9f60 = call i32 @function_8258(i32 %v0_9f5c)
  store i32 1, i32* @r2, align 4
  store i32 1, i32* @r3, align 4
  %v0_9f6c = load i32, i32* @r4, align 4
  store i32 %v0_9f6c, i32* @r1, align 4
  store i32 %v1_9f60, i32* @r8, align 4
  %v0_9f74 = load i32, i32* @r5, align 4
  store i32 %v0_9f74, i32* %r0.global-to-local, align 4
  %v1_9f78 = call i32 @function_8258(i32 %v0_9f74)
  %v2_9f84 = load i32, i32* @global_var_21644.39, align 4
  store i32 %v2_9f84, i32* %r3.global-to-local, align 4
  %v1_9f88 = urem i32 %v1_9f78, 256
  store i32 %v1_9f88, i32* %ip.global-to-local, align 4
  %v0_9f8c = load i32, i32* @r4, align 4
  store i32 %v0_9f8c, i32* %r1.global-to-local, align 4
  store i32 19, i32* %r2.global-to-local, align 4
  %v0_9f94 = load i32, i32* @r5, align 4
  store i32 %v0_9f94, i32* %r0.global-to-local, align 4
  %v5_9f9c = inttoptr i32 %v0_9f8c to i32*
  %v6_9f9c = call i32 @function_81ec(i32 %v0_9f94, i32* %v5_9f9c, i32 19, i32 %v2_9f84, i32 %v1_9f88)
  %v0_9fa4 = load i32, i32* @sl, align 4
  store i32 %v0_9fa4, i32* %r0.global-to-local, align 4
  %v1_9fa8 = inttoptr i32 %v0_9fa4 to i32*
  %v2_9fa8 = call i32 @function_111c8(i32* %v1_9fa8)
  %v1_9fac = load i32, i32* @r6, align 4
  %v2_9fac = add i32 %v1_9fac, %v2_9fa8
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_9fc0 = call i32 @function_11d30(i32 2, i32 3, i32 6)
  store i32 %v3_9fc0, i32* %r0.global-to-local, align 4
  %v7_9fc4 = icmp eq i32 %v3_9fc0, -1
  store i1 %v7_9fc4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9fc4, label %dec_label_pc_a4a8, label %dec_label_pc_9fd0

dec_label_pc_9fd0:                                ; preds = %dec_label_pc_9da0
  store i32 1, i32* %stack_var_-44, align 4
  %v6_9fd8 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_9fd8, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_9fe0 = load i32, i32* @sl, align 4
  store i32 %v0_9fe0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_9fec = call i32 @function_11cec(i32 %v3_9fc0, i32 %v0_9fe0, i32 3, i32 %v6_9fd8, i32 4)
  store i32 %v5_9fec, i32* %r0.global-to-local, align 4
  %v7_9ff0 = icmp eq i32 %v5_9fec, -1
  store i1 %v7_9ff0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9ff0, label %dec_label_pc_a4b4, label %dec_label_pc_9ff8

dec_label_pc_9ff8:                                ; preds = %dec_label_pc_9fd0
  store i32 %v1_9e08, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v0_a004 = load i32, i32* %fp.global-to-local, align 4
  %v0_a008 = load i32, i32* %sb.global-to-local, align 4
  %v3_a008 = mul i32 %v0_a008, 65536
  store i32 %v3_a008, i32* %sb.global-to-local, align 4
  %v3_a00c = urem i32 %v1_9e08, 65536
  store i32 %v3_a00c, i32* %r2.global-to-local, align 4
  %v3_a010 = urem i32 %v0_a004, 65536
  store i32 %v3_a010, i32* %r3.global-to-local, align 4
  %v3_a014 = urem i32 %v0_a008, 65536
  store i32 %v3_a014, i32* %ip.global-to-local, align 4
  %v2_a018 = icmp eq i32 %arg2, 0
  store i1 %v2_a018, i1* %cpsr_z.global-to-local, align 1
  %v0_a01c = load i32, i32* @sl, align 4
  store i32 %v0_a01c, i32* %stack_var_-44, align 4
  br i1 %v2_a018, label %dec_label_pc_a258.preheader, label %dec_label_pc_a030

dec_label_pc_a030:                                ; preds = %dec_label_pc_9ff8
  %v0_a040 = load i32, i32* @r8, align 4
  %v3_a040 = mul i32 %v0_a040, 65536
  %v1_a048 = add i32 %v3_a040, 2621440
  %tmp59 = mul i32 %v0_a004, 256
  %v3_a054 = and i32 %tmp59, 65280
  %tmp60 = mul i32 %v0_a008, 256
  %v3_a058 = and i32 %tmp60, 65280
  %tmp61 = udiv i32 %v0_a004, 256
  %v4_a060 = urem i32 %tmp61, 256
  %v5_a060 = or i32 %v4_a060, %v3_a054
  %tmp62 = udiv i32 %v1_a048, 256
  %v3_a064 = and i32 %tmp62, 65280
  %tmp63 = mul i32 %v1_9e08, 256
  %v3_a068 = and i32 %tmp63, 65280
  %tmp64 = udiv i32 %v0_a008, 256
  %v4_a06c = urem i32 %tmp64, 256
  %v5_a06c = or i32 %v4_a06c, %v3_a058
  store i32 %v5_a06c, i32* @fp, align 4
  %v4_a07c = udiv i32 %v1_a048, 16777216
  %v5_a07c = or i32 %v3_a064, %v4_a07c
  store i32 %v5_a07c, i32* @lr, align 4
  %tmp65 = udiv i32 %v1_9e08, 256
  %v4_a080 = urem i32 %tmp65, 256
  %v5_a080 = or i32 %v4_a080, %v3_a068
  store i32 %v5_a080, i32* @r5, align 4
  %tmp66 = mul i32 %v1_9e9c, 256
  %v3_a08c = and i32 %tmp66, 65280
  %v1_a090 = urem i32 %v1_9ed0, 2
  %v1_a094 = urem i32 %v1_9ee8, 2
  %tmp67 = udiv i32 %v1_9e9c, 256
  %v4_a098 = urem i32 %tmp67, 256
  %v5_a098 = or i32 %v4_a098, %v3_a08c
  %v1_a0a4 = urem i32 %v1_9f00, 2
  store i32 %v1_a0a4, i32* %r2.global-to-local, align 4
  %v1_a0a8 = urem i32 %v1_9f18, 2
  store i32 %v1_a0a8, i32* %r3.global-to-local, align 4
  store i32 %v1_9f30, i32* %ip.global-to-local, align 4
  store i32 %v1_9f48, i32* %r0.global-to-local, align 4
  store i32 %v1_9f00, i32* %r1.global-to-local, align 4
  %v1_a0d0 = urem i32 %v1_9f30, 2
  store i32 %v1_a0d0, i32* @sb, align 4
  store i32 %v0_a01c, i32* @r4, align 4
  %v1_a0d8 = urem i32 %v1_9f00, 256
  store i32 %v1_a0d8, i32* @r6, align 4
  %v1_a0dc = urem i32 %v1_9f48, 2
  store i32 %v1_a0dc, i32* @sl, align 4
  %v4_a134 = sext i8 %v5_9e04 to i32
  %sext6 = mul nuw i32 %v5_a07c, 65536
  %v4_a150 = sdiv i32 %sext6, 65536
  %sext7 = mul nuw i32 %v5_a080, 65536
  %v4_a158 = sdiv i32 %sext7, 65536
  %sext8 = mul nuw i32 %v5_a060, 65536
  %v4_a174 = sdiv i32 %sext8, 65536
  %tmp = sub nsw i32 0, %v1_a094
  %v4_a1c4 = and i32 %tmp, 16
  %tmp70 = sub nsw i32 0, %v1_a0a4
  %v4_a1d8 = and i32 %tmp70, 8
  %tmp71 = sub nsw i32 0, %v1_a0a8
  %v4_a1ec = and i32 %tmp71, 4
  %v1_a144 = trunc i32 %v1_9e20 to i8
  br label %dec_label_pc_a0e0

dec_label_pc_a0e0:                                ; preds = %.thread10, %dec_label_pc_a030
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_a0ec = call i32 @function_12898(i32 1510, i32 1)
  %v2_a0f4 = load i32, i32* @r4, align 4
  %v5_a0f4 = mul i32 %v2_a0f4, 4
  %v6_a0f4 = add i32 %v5_a0f4, %v2_9dcc
  %v7_a0f4 = inttoptr i32 %v6_a0f4 to i32*
  store i32 %v2_a0ec, i32* %v7_a0f4, align 4
  %v3_a0f8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a0f8, i32* %r2.global-to-local, align 4
  %v5_a100 = mul i32 %v3_a0f8, 24
  %v1_a104 = load i32, i32* @r7, align 4
  %v2_a104 = add i32 %v1_a104, %v5_a100
  store i32 %v2_a104, i32* %r0.global-to-local, align 4
  store i32 %v2_9dcc, i32* %r3.global-to-local, align 4
  %v4_a10c = mul i32 %v3_a0f8, 4
  %v5_a10c = add i32 %v4_a10c, %v2_9dcc
  %v6_a10c = inttoptr i32 %v5_a10c to i32*
  %v7_a10c = load i32, i32* %v6_a10c, align 4
  store i32 %v7_a10c, i32* %r1.global-to-local, align 4
  %v1_a110 = inttoptr i32 %v7_a10c to i8*
  %v2_a110 = load i8, i8* %v1_a110, align 1
  %tmp72 = urem i8 %v2_a110, 16
  %v1_a114 = zext i8 %tmp72 to i32
  %v1_a118 = or i32 %v1_a114, 64
  store i32 %v1_a118, i32* %r3.global-to-local, align 4
  %v1_a11c = trunc i32 %v1_a118 to i8
  store i8 %v1_a11c, i8* %v1_a110, align 1
  %v0_a120 = load i32, i32* %r1.global-to-local, align 4
  %v1_a120 = inttoptr i32 %v0_a120 to i8*
  %v2_a120 = load i8, i8* %v1_a120, align 1
  %v1_a124 = and i8 %v2_a120, -16
  %v1_a128 = or i8 %v1_a124, 5
  store i32 %v1_9e4c, i32* %ip.global-to-local, align 4
  store i8 %v1_a128, i8* %v1_a120, align 1
  store i32 %v4_a134, i32* %r2.global-to-local, align 4
  %v2_a138 = load i32, i32* %r1.global-to-local, align 4
  %v3_a138 = add i32 %v2_a138, 1
  %v4_a138 = inttoptr i32 %v3_a138 to i8*
  store i8 %v5_9e04, i8* %v4_a138, align 1
  store i32 %v1_9e28, i32* %r3.global-to-local, align 4
  %v0_a140 = load i32, i32* %ip.global-to-local, align 4
  %v2_a140 = icmp eq i32 %v0_a140, 0
  store i1 %v2_a140, i1* %cpsr_z.global-to-local, align 1
  %v2_a144 = load i32, i32* %r1.global-to-local, align 4
  %v3_a144 = add i32 %v2_a144, 8
  %v4_a144 = inttoptr i32 %v3_a144 to i8*
  store i8 %v1_a144, i8* %v4_a144, align 1
  %v0_a148 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a148, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_a0e0
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_a14c = load i32, i32* %r1.global-to-local, align 4
  %v4_a14c = add i32 %v3_a14c, 6
  %v5_a14c = inttoptr i32 %v4_a14c to i16*
  store i16 64, i16* %v5_a14c, align 2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_a0e0, %bb
  store i32 %v4_a150, i32* %ip.global-to-local, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  store i32 %v4_a158, i32* %r2.global-to-local, align 4
  %v2_a15c = load i32, i32* %r1.global-to-local, align 4
  %v3_a15c = add i32 %v2_a15c, 9
  %v4_a15c = inttoptr i32 %v3_a15c to i8*
  store i8 6, i8* %v4_a15c, align 1
  %v0_a160 = load i32, i32* %ip.global-to-local, align 4
  %v1_a160 = trunc i32 %v0_a160 to i16
  %v2_a160 = load i32, i32* %r1.global-to-local, align 4
  %v3_a160 = add i32 %v2_a160, 2
  %v4_a160 = inttoptr i32 %v3_a160 to i16*
  store i16 %v1_a160, i16* %v4_a160, align 2
  store i32 %v6_9f9c, i32* %ip.global-to-local, align 4
  %v1_a168 = load i32, i32* %r1.global-to-local, align 4
  %v2_a168 = add i32 %v1_a168, 12
  %v3_a168 = inttoptr i32 %v2_a168 to i32*
  store i32 %v6_9f9c, i32* %v3_a168, align 4
  %v0_a16c = load i32, i32* %r2.global-to-local, align 4
  %v1_a16c = trunc i32 %v0_a16c to i16
  %v2_a16c = load i32, i32* %r1.global-to-local, align 4
  %v3_a16c = add i32 %v2_a16c, 4
  %v4_a16c = inttoptr i32 %v3_a16c to i16*
  store i16 %v1_a16c, i16* %v4_a16c, align 2
  %v0_a170 = load i32, i32* %r0.global-to-local, align 4
  %v1_a170 = add i32 %v0_a170, 16
  %v2_a170 = inttoptr i32 %v1_a170 to i32*
  %v3_a170 = load i32, i32* %v2_a170, align 4
  store i32 %v3_a170, i32* %r2.global-to-local, align 4
  store i32 %v4_a174, i32* %r0.global-to-local, align 4
  %v1_a178 = load i32, i32* %r1.global-to-local, align 4
  %v2_a178 = add i32 %v1_a178, 16
  %v3_a178 = inttoptr i32 %v2_a178 to i32*
  store i32 %v3_a170, i32* %v3_a178, align 4
  %v0_a17c = load i32, i32* %r0.global-to-local, align 4
  %v1_a17c = trunc i32 %v0_a17c to i16
  %v2_a17c = load i32, i32* %r1.global-to-local, align 4
  %v3_a17c = add i32 %v2_a17c, 20
  %v4_a17c = inttoptr i32 %v3_a17c to i16*
  store i16 %v1_a17c, i16* %v4_a17c, align 2
  %v0_a180 = load i32, i32* %r1.global-to-local, align 4
  %v1_a180 = add i32 %v0_a180, 20
  store i32 %v1_a180, i32* @r4, align 4
  %v1_a184 = add i32 %v0_a180, 32
  %v2_a184 = inttoptr i32 %v1_a184 to i8*
  %v3_a184 = load i8, i8* %v2_a184, align 1
  %v4_a184 = zext i8 %v3_a184 to i32
  %v1_a188 = and i32 %v4_a184, 95
  store i32 %v1_a188, i32* %r3.global-to-local, align 4
  %v1_a18c = add i32 %v0_a180, 33
  %v2_a18c = inttoptr i32 %v1_a18c to i8*
  %v3_a18c = load i8, i8* %v2_a18c, align 1
  %v4_a18c = zext i8 %v3_a18c to i32
  store i32 %v4_a18c, i32* %r2.global-to-local, align 4
  %v1_a190 = or i32 %v1_a188, 80
  %v1_a194 = add i32 %v0_a180, 40
  store i32 %v1_a194, i32* @r5, align 4
  store i32 %v1_a090, i32* %r1.global-to-local, align 4
  %v1_a19c = trunc i32 %v1_a190 to i8
  store i8 %v1_a19c, i8* %v2_a184, align 1
  store i32 %v5_a098, i32* %r3.global-to-local, align 4
  %v0_a1a4 = load i32, i32* %r2.global-to-local, align 4
  %v1_a1a4 = and i32 %v0_a1a4, -33
  %v1_a1a8 = load i32, i32* %r1.global-to-local, align 4
  %v4_a1a8 = mul i32 %v1_a1a8, 32
  %v5_a1a8 = or i32 %v4_a1a8, %v1_a1a4
  store i32 %v5_a1a8, i32* %r2.global-to-local, align 4
  %v1_a1ac = load i32, i32* @r4, align 4
  %v2_a1ac = add i32 %v1_a1ac, 4
  %v3_a1ac = inttoptr i32 %v2_a1ac to i32*
  store i32 %v5_a098, i32* %v3_a1ac, align 4
  %v0_a1b0 = load i32, i32* @fp, align 4
  %v1_a1b0 = trunc i32 %v0_a1b0 to i16
  %v2_a1b0 = load i32, i32* @r4, align 4
  %v3_a1b0 = add i32 %v2_a1b0, 2
  %v4_a1b0 = inttoptr i32 %v3_a1b0 to i16*
  store i16 %v1_a1b0, i16* %v4_a1b0, align 2
  %v0_a1b4 = load i32, i32* %r2.global-to-local, align 4
  %v1_a1b4 = trunc i32 %v0_a1b4 to i8
  %v2_a1b4 = load i32, i32* @r4, align 4
  %v3_a1b4 = add i32 %v2_a1b4, 13
  %v4_a1b4 = inttoptr i32 %v3_a1b4 to i8*
  store i8 %v1_a1b4, i8* %v4_a1b4, align 1
  %v0_a1b8 = load i32, i32* @r4, align 4
  %v1_a1b8 = add i32 %v0_a1b8, 13
  %v2_a1b8 = inttoptr i32 %v1_a1b8 to i8*
  %v3_a1b8 = load i8, i8* %v2_a1b8, align 1
  %v4_a1b8 = zext i8 %v3_a1b8 to i32
  store i32 %v1_a094, i32* %ip.global-to-local, align 4
  %v1_a1c0 = and i32 %v4_a1b8, 239
  %v5_a1c4 = or i32 %v1_a1c0, %v4_a1c4
  store i32 %v5_a1c4, i32* %r3.global-to-local, align 4
  %v1_a1c8 = trunc i32 %v5_a1c4 to i8
  store i8 %v1_a1c8, i8* %v2_a1b8, align 1
  %v0_a1cc = load i32, i32* @r4, align 4
  %v1_a1cc = add i32 %v0_a1cc, 13
  %v2_a1cc = inttoptr i32 %v1_a1cc to i8*
  %v3_a1cc = load i8, i8* %v2_a1cc, align 1
  %v4_a1cc = zext i8 %v3_a1cc to i32
  store i32 %v1_a0a4, i32* %r0.global-to-local, align 4
  %v1_a1d4 = and i32 %v4_a1cc, 247
  %v5_a1d8 = or i32 %v1_a1d4, %v4_a1d8
  store i32 %v5_a1d8, i32* %r2.global-to-local, align 4
  %v1_a1dc = trunc i32 %v5_a1d8 to i8
  store i8 %v1_a1dc, i8* %v2_a1cc, align 1
  %v0_a1e0 = load i32, i32* @r4, align 4
  %v1_a1e0 = add i32 %v0_a1e0, 13
  %v2_a1e0 = inttoptr i32 %v1_a1e0 to i8*
  %v3_a1e0 = load i8, i8* %v2_a1e0, align 1
  %v4_a1e0 = zext i8 %v3_a1e0 to i32
  store i32 %v1_a0a8, i32* %r1.global-to-local, align 4
  %v1_a1e8 = and i32 %v4_a1e0, 251
  %v5_a1ec = or i32 %v1_a1e8, %v4_a1ec
  store i32 %v5_a1ec, i32* %r3.global-to-local, align 4
  %v1_a1f0 = trunc i32 %v5_a1ec to i8
  store i8 %v1_a1f0, i8* %v2_a1e0, align 1
  %v0_a1f4 = load i32, i32* @r4, align 4
  %v1_a1f4 = add i32 %v0_a1f4, 13
  %v2_a1f4 = inttoptr i32 %v1_a1f4 to i8*
  %v3_a1f4 = load i8, i8* %v2_a1f4, align 1
  %v4_a1f4 = zext i8 %v3_a1f4 to i32
  %v1_a1f8 = and i32 %v4_a1f4, 253
  %v1_a1fc = load i32, i32* @sb, align 4
  %v3_a1fc = mul i32 %v1_a1fc, 2
  %v4_a1fc = or i32 %v3_a1fc, %v1_a1f8
  store i32 %v4_a1fc, i32* %r2.global-to-local, align 4
  %v1_a200 = trunc i32 %v4_a1fc to i8
  store i8 %v1_a200, i8* %v2_a1f4, align 1
  %v0_a204 = load i32, i32* @r4, align 4
  %v1_a204 = add i32 %v0_a204, 13
  %v2_a204 = inttoptr i32 %v1_a204 to i8*
  %v3_a204 = load i8, i8* %v2_a204, align 1
  %v4_a204 = zext i8 %v3_a204 to i32
  %v1_a208 = and i32 %v4_a204, 254
  %v0_a20c = load i32, i32* @sl, align 4
  %v2_a20c = or i32 %v1_a208, %v0_a20c
  store i32 %v2_a20c, i32* %r3.global-to-local, align 4
  %v1_a210 = trunc i32 %v2_a20c to i8
  store i8 %v1_a210, i8* %v2_a204, align 1
  %v0_a214 = call i32 @function_d398()
  %v1_a214 = trunc i32 %v0_a214 to i16
  store i32 %v0_a214, i32* %r0.global-to-local, align 4
  %v0_a218 = load i32, i32* @r6, align 4
  %v2_a218 = icmp eq i32 %v0_a218, 0
  store i1 %v2_a218, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a218, label %.thread10, label %bb68

bb68:                                             ; preds = %.thread
  %v1_a21c = load i32, i32* @r4, align 4
  %v2_a21c = add i32 %v1_a21c, 13
  %v3_a21c = inttoptr i32 %v2_a21c to i8*
  %v4_a21c = load i8, i8* %v3_a21c, align 1
  %v5_a21c = zext i8 %v4_a21c to i32
  %v2_a220 = or i32 %v5_a21c, 8
  store i32 %v2_a220, i32* @r3, align 4
  %v2_a224 = trunc i32 %v2_a220 to i8
  store i8 %v2_a224, i8* %v3_a21c, align 1
  br label %.thread10

.thread10:                                        ; preds = %.thread, %bb68
  %v3_a228 = load i32, i32* @r4, align 4
  %v4_a228 = add i32 %v3_a228, 14
  %v5_a228 = inttoptr i32 %v4_a228 to i16*
  store i16 %v1_a214, i16* %v5_a228, align 2
  %v0_a22c = load i32, i32* @r8, align 4
  store i32 %v0_a22c, i32* %r1.global-to-local, align 4
  %v0_a230 = load i32, i32* @r5, align 4
  store i32 %v0_a230, i32* %r0.global-to-local, align 4
  %v2_a234 = call i32 @function_d45c(i32 %v0_a230, i32 %v0_a22c)
  store i32 %v2_a234, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_a23c = load i32, i32* @r5, align 4
  %v3_a23c = load i32, i32* @r8, align 4
  %v4_a23c = add i32 %v3_a23c, %v2_a23c
  %v5_a23c = inttoptr i32 %v4_a23c to i8*
  store i8 0, i8* %v5_a23c, align 1
  %v3_a240 = load i32, i32* %stack_var_-44, align 4
  %v1_a244 = add i32 %v3_a240, 1
  store i32 %v1_a244, i32* @r4, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v9_a24c = icmp eq i32 %v1_a244, %arg2
  store i1 %v9_a24c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a244, i32* %stack_var_-44, align 4
  %v5_a254 = icmp slt i32 %v1_a244, %arg2
  br i1 %v5_a254, label %dec_label_pc_a0e0, label %dec_label_pc_a258.preheader

dec_label_pc_a258.preheader:                      ; preds = %.thread10, %dec_label_pc_9ff8
  %v2_a294 = icmp eq i32 %v6_9f9c, -1
  %v7_a294 = icmp eq i32 %v6_9f9c, -1
  %v9_a408 = icmp eq i32 %v3_a00c, add (i32 ptrtoint (i32* @global_var_10000.37 to i32), i32 -1)
  %v2_a46c = icmp eq i32 %v1_9f88, 0
  br label %dec_label_pc_a258

dec_label_pc_a258:                                ; preds = %dec_label_pc_a258.preheader, %dec_label_pc_a494
  store i32 %arg2, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i1 %v2_a018, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_a018, label %dec_label_pc_a494, label %dec_label_pc_a26c

dec_label_pc_a26c:                                ; preds = %dec_label_pc_a258
  %v0_a26c = load i32, i32* @r8, align 4
  %v3_a26c = mul i32 %v0_a26c, 65536
  %v1_a270 = add i32 %v3_a26c, 1310720
  store i32 %v1_a270, i32* %r2.global-to-local, align 4
  %tmp69 = udiv i32 %v1_a270, 256
  %v3_a278 = and i32 %tmp69, 65280
  store i32 %v3_a278, i32* %r3.global-to-local, align 4
  %v4_a27c = udiv i32 %v1_a270, 16777216
  %v5_a27c = or i32 %v3_a278, %v4_a27c
  store i32 %v5_a27c, i32* @fp, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_a284 = add i32 %v0_a26c, 20
  store i32 %v1_a284, i32* @sb, align 4
  %v1_a288 = add i32 %v0_a26c, 40
  store i32 %v1_a288, i32* @sl, align 4
  br label %dec_label_pc_a374

dec_label_pc_a290:                                ; preds = %dec_label_pc_a374
  store i32 %v6_9f9c, i32* %r0.global-to-local, align 4
  store i1 %v7_a294, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a294, label %dec_label_pc_a3f8, label %dec_label_pc_a29c

dec_label_pc_a29c:                                ; preds = %dec_label_pc_a398, %dec_label_pc_a290
  store i32 %v3_a00c, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.37 to i32), i32 -1), i32* @r4, align 4
  store i1 %v9_a408, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a408, label %dec_label_pc_a414, label %dec_label_pc_a2b0

dec_label_pc_a2b0:                                ; preds = %dec_label_pc_a3f8.dec_label_pc_a2b0_crit_edge, %dec_label_pc_a29c
  %v1_a2b4 = phi i32 [ %v1_a2b4.pre, %dec_label_pc_a3f8.dec_label_pc_a2b0_crit_edge ], [ add (i32 ptrtoint (i32* @global_var_10000.37 to i32), i32 -1), %dec_label_pc_a29c ]
  store i32 %v3_a010, i32* %r2.global-to-local, align 4
  %v9_a2b4 = icmp eq i32 %v3_a010, %v1_a2b4
  store i1 %v9_a2b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a2b4, label %dec_label_pc_a428, label %dec_label_pc_a2bc

dec_label_pc_a2bc:                                ; preds = %dec_label_pc_a414.dec_label_pc_a2bc_crit_edge, %dec_label_pc_a2b0
  %v1_a2c0 = phi i32 [ %v1_a2c0.pre, %dec_label_pc_a414.dec_label_pc_a2bc_crit_edge ], [ %v1_a2b4, %dec_label_pc_a2b0 ]
  store i32 %v3_a014, i32* @r3, align 4
  %v9_a2c0 = icmp eq i32 %v3_a014, %v1_a2c0
  store i1 %v9_a2c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a2c0, label %dec_label_pc_a43c, label %dec_label_pc_a2c8

dec_label_pc_a2c8:                                ; preds = %dec_label_pc_a428.dec_label_pc_a2c8_crit_edge, %dec_label_pc_a2bc
  %v1_a2cc = phi i32 [ %v1_a2cc.pre, %dec_label_pc_a428.dec_label_pc_a2c8_crit_edge ], [ %v1_a2c0, %dec_label_pc_a2bc ]
  store i32 %v1_9e9c, i32* @ip, align 4
  %v9_a2cc = icmp eq i32 %v1_9e9c, %v1_a2cc
  store i1 %v9_a2cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a2cc, label %dec_label_pc_a450, label %dec_label_pc_a2d4

dec_label_pc_a2d4:                                ; preds = %dec_label_pc_a43c.dec_label_pc_a2d4_crit_edge, %dec_label_pc_a2c8
  %v1_a2d8 = phi i32 [ %v1_a2d8.pre, %dec_label_pc_a43c.dec_label_pc_a2d4_crit_edge ], [ %v1_a2cc, %dec_label_pc_a2c8 ]
  store i32 %v1_9eb8, i32* %r0.global-to-local, align 4
  %v9_a2d8 = icmp eq i32 %v1_9eb8, %v1_a2d8
  store i1 %v9_a2d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a2d8, label %dec_label_pc_a464, label %dec_label_pc_a2e0

dec_label_pc_a2e0:                                ; preds = %dec_label_pc_a450, %dec_label_pc_a2d4
  store i32 %v1_9f88, i32* %r1.global-to-local, align 4
  store i1 %v2_a46c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a46c, label %dec_label_pc_a2ec, label %dec_label_pc_a478

dec_label_pc_a2ec:                                ; preds = %dec_label_pc_a2e0, %dec_label_pc_a464, %dec_label_pc_a478
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_a2f0 = load i32, i32* @r5, align 4
  %v3_a2f0 = add i32 %v2_a2f0, 10
  %v4_a2f0 = inttoptr i32 %v3_a2f0 to i16*
  store i16 0, i16* %v4_a2f0, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_a2f8 = load i32, i32* @r5, align 4
  store i32 %v0_a2f8, i32* @r0, align 4
  %v2_a2fc = call i32 @function_bf78(i32 %v0_a2f8, i32 20)
  %v3_a2fc = trunc i32 %v2_a2fc to i16
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_a304 = load i32, i32* @r5, align 4
  %v4_a304 = add i32 %v3_a304, 10
  %v5_a304 = inttoptr i32 %v4_a304 to i16*
  store i16 %v3_a2fc, i16* %v5_a304, align 2
  %v0_a308 = load i32, i32* @r6, align 4
  store i32 %v0_a308, i32* @r1, align 4
  %v0_a30c = load i32, i32* %r3.global-to-local, align 4
  %v1_a30c = trunc i32 %v0_a30c to i16
  %v3_a30c = add i32 %v0_a308, 16
  %v4_a30c = inttoptr i32 %v3_a30c to i16*
  store i16 %v1_a30c, i16* %v4_a30c, align 2
  %v0_a310 = load i32, i32* @fp, align 4
  store i32 %v0_a310, i32* %r2.global-to-local, align 4
  %v0_a314 = load i32, i32* @sb, align 4
  store i32 %v0_a314, i32* %r3.global-to-local, align 4
  %v0_a318 = load i32, i32* @r5, align 4
  store i32 %v0_a318, i32* %r0.global-to-local, align 4
  %v4_a31c = call i32 @function_bfc8(i32 %v0_a318, i32 %v0_a308, i32 %v0_a310, i32 %v0_a314)
  %v5_a31c = trunc i32 %v4_a31c to i16
  store i32 %v4_a31c, i32* %r0.global-to-local, align 4
  %v3_a320 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a320, i32* %r3.global-to-local, align 4
  %v3_a324 = mul i32 %v3_a320, 32
  store i32 %v3_a324, i32* %lr.global-to-local, align 4
  %v3_a328 = load i32, i32* @r6, align 4
  %v4_a328 = add i32 %v3_a328, 16
  %v5_a328 = inttoptr i32 %v4_a328 to i16*
  store i16 %v5_a31c, i16* %v5_a328, align 2
  %v0_a32c = load i32, i32* %lr.global-to-local, align 4
  %v1_a32c = load i32, i32* %r3.global-to-local, align 4
  %tmp73 = mul i32 %v1_a32c, -8
  %v5_a32c = add i32 %v0_a32c, %tmp73
  store i32 %v5_a32c, i32* %lr.global-to-local, align 4
  %v0_a330 = load i32, i32* @r6, align 4
  %v1_a330 = add i32 %v0_a330, 2
  %v2_a330 = inttoptr i32 %v1_a330 to i16*
  %v3_a330 = load i16, i16* %v2_a330, align 2
  %v1_a334 = load i32, i32* @r7, align 4
  %v2_a334 = add i32 %v1_a334, %v5_a32c
  store i32 %v2_a334, i32* @lr, align 4
  %v3_a338 = add i32 %v2_a334, 2
  %v4_a338 = inttoptr i32 %v3_a338 to i16*
  store i16 %v3_a330, i16* %v4_a338, align 2
  store i32 16, i32* %ip.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_a344 = load i32, i32* @r5, align 4
  store i32 %v0_a344, i32* %r1.global-to-local, align 4
  store i32 %v3_9fc0, i32* %r0.global-to-local, align 4
  %v0_a34c = load i32, i32* @sl, align 4
  store i32 %v0_a34c, i32* %r2.global-to-local, align 4
  %v0_a354 = load i32, i32* @lr, align 4
  %v6_a358 = call i32 @function_11cac(i32 %v3_9fc0, i32 %v0_a344, i32 %v0_a34c, i32 16384, i32 %v0_a354, i32 16)
  %v3_a35c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a35c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  %v1_a364 = add i32 %v3_a35c, 1
  store i32 %v1_a364, i32* %r0.global-to-local, align 4
  %v9_a368 = icmp eq i32 %v1_a364, %arg2
  store i1 %v9_a368, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a364, i32* %stack_var_-44, align 4
  %v6_a370 = icmp slt i32 %v1_a364, %arg2
  br i1 %v6_a370, label %dec_label_pc_a374, label %dec_label_pc_a494

dec_label_pc_a374:                                ; preds = %dec_label_pc_a2ec, %dec_label_pc_a26c
  %v1_a388 = phi i32 [ %v1_a364, %dec_label_pc_a2ec ], [ 0, %dec_label_pc_a26c ]
  %v5_a378 = mul i32 %v1_a388, 24
  %v1_a37c = load i32, i32* @r7, align 4
  %v2_a37c = add i32 %v1_a37c, %v5_a378
  store i32 %v2_a37c, i32* %r3.global-to-local, align 4
  store i32 %v2_9dcc, i32* %ip.global-to-local, align 4
  %v1_a384 = add i32 %v2_a37c, 20
  %v2_a384 = inttoptr i32 %v1_a384 to i8*
  %v3_a384 = load i8, i8* %v2_a384, align 1
  %v4_a384 = zext i8 %v3_a384 to i32
  store i32 %v4_a384, i32* %r2.global-to-local, align 4
  %v4_a388 = mul i32 %v1_a388, 4
  %v5_a388 = add i32 %v4_a388, %v2_9dcc
  %v6_a388 = inttoptr i32 %v5_a388 to i32*
  %v7_a388 = load i32, i32* %v6_a388, align 4
  store i32 %v7_a388, i32* @r5, align 4
  %v2_a38c = icmp ugt i8 %v3_a384, 30
  %v7_a38c = icmp eq i8 %v3_a384, 31
  store i1 %v7_a38c, i1* %cpsr_z.global-to-local, align 1
  %v1_a390 = add i32 %v7_a388, 20
  store i32 %v1_a390, i32* @r6, align 4
  %v2_a394 = xor i1 %v7_a38c, true
  %v3_a394 = and i1 %v2_a38c, %v2_a394
  br i1 %v3_a394, label %dec_label_pc_a290, label %dec_label_pc_a398

dec_label_pc_a398:                                ; preds = %dec_label_pc_a374
  %v1_a398 = add i32 %v2_a37c, 16
  %v2_a398 = inttoptr i32 %v1_a398 to i32*
  %v3_a398 = load i32, i32* %v2_a398, align 4
  %v0_a39c = call i32 @function_d398()
  store i32 %v0_a39c, i32* %r0.global-to-local, align 4
  %v3_a3a0 = load i32, i32* %stack_var_-44, align 4
  %v5_a3a8 = mul i32 %v3_a3a0, 24
  %v1_a3ac = and i32 %v3_a398, 16711680
  store i32 %v1_a3ac, i32* %ip.global-to-local, align 4
  %v3_a3b0 = udiv i32 %v3_a398, 16777216
  %v4_a3b4 = udiv i32 %v1_a3ac, 256
  %v5_a3b4 = or i32 %v4_a3b4, %v3_a3b0
  store i32 %v5_a3b4, i32* %r2.global-to-local, align 4
  %v1_a3b8 = load i32, i32* @r7, align 4
  %v2_a3b8 = add i32 %v1_a3b8, %v5_a3a8
  store i32 %v2_a3b8, i32* %r1.global-to-local, align 4
  %v1_a3bc = and i32 %v3_a398, 65280
  store i32 %v1_a3bc, i32* %r3.global-to-local, align 4
  %v1_a3c0 = add i32 %v2_a3b8, 20
  %v2_a3c0 = inttoptr i32 %v1_a3c0 to i8*
  %v3_a3c0 = load i8, i8* %v2_a3c0, align 1
  %v4_a3c0 = zext i8 %v3_a3c0 to i32
  store i32 %v4_a3c0, i32* %ip.global-to-local, align 4
  %v5_a3c8 = call i32 @llvm.bswap.i32(i32 %v3_a398)
  %v7_a3cc = lshr i32 %v0_a39c, %v4_a3c0
  %v8_a3cc = add i32 %v7_a3cc, %v5_a3c8
  store i32 %v8_a3cc, i32* %r2.global-to-local, align 4
  %v1_a3dc = and i32 %v8_a3cc, 65280
  store i32 %v1_a3dc, i32* %r1.global-to-local, align 4
  store i32 %v6_9f9c, i32* %r0.global-to-local, align 4
  %v5_a3e8 = call i32 @llvm.bswap.i32(i32 %v8_a3cc)
  store i32 %v5_a3e8, i32* %r3.global-to-local, align 4
  store i1 %v7_a294, i1* %cpsr_z.global-to-local, align 1
  %v1_a3f0 = load i32, i32* @r5, align 4
  %v2_a3f0 = add i32 %v1_a3f0, 16
  %v3_a3f0 = inttoptr i32 %v2_a3f0 to i32*
  store i32 %v5_a3e8, i32* %v3_a3f0, align 4
  br i1 %v2_a294, label %dec_label_pc_a3f8, label %dec_label_pc_a29c

dec_label_pc_a3f8:                                ; preds = %dec_label_pc_a398, %dec_label_pc_a290
  %v0_a3f8 = call i32 @function_d398()
  store i32 %v0_a3f8, i32* %r0.global-to-local, align 4
  store i32 %v3_a00c, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.37 to i32), i32 -1), i32* @r4, align 4
  store i1 %v9_a408, i1* %cpsr_z.global-to-local, align 1
  %v1_a40c = load i32, i32* @r5, align 4
  %v2_a40c = add i32 %v1_a40c, 12
  %v3_a40c = inttoptr i32 %v2_a40c to i32*
  store i32 %v0_a3f8, i32* %v3_a40c, align 4
  br i1 %v9_a408, label %dec_label_pc_a414, label %dec_label_pc_a3f8.dec_label_pc_a2b0_crit_edge

dec_label_pc_a3f8.dec_label_pc_a2b0_crit_edge:    ; preds = %dec_label_pc_a3f8
  %v1_a2b4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_a2b0

dec_label_pc_a414:                                ; preds = %dec_label_pc_a3f8, %dec_label_pc_a29c
  %v0_a414 = call i32 @function_d398()
  %v1_a414 = trunc i32 %v0_a414 to i16
  store i32 %v0_a414, i32* %r0.global-to-local, align 4
  store i32 %v3_a010, i32* %r2.global-to-local, align 4
  %v1_a41c = load i32, i32* @r4, align 4
  %v9_a41c = icmp eq i32 %v3_a010, %v1_a41c
  store i1 %v9_a41c, i1* %cpsr_z.global-to-local, align 1
  %v3_a420 = load i32, i32* @r5, align 4
  %v4_a420 = add i32 %v3_a420, 4
  %v5_a420 = inttoptr i32 %v4_a420 to i16*
  store i16 %v1_a414, i16* %v5_a420, align 2
  br i1 %v9_a41c, label %dec_label_pc_a428, label %dec_label_pc_a414.dec_label_pc_a2bc_crit_edge

dec_label_pc_a414.dec_label_pc_a2bc_crit_edge:    ; preds = %dec_label_pc_a414
  %v1_a2c0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_a2bc

dec_label_pc_a428:                                ; preds = %dec_label_pc_a414, %dec_label_pc_a2b0
  %v0_a428 = call i32 @function_d398()
  %v1_a428 = trunc i32 %v0_a428 to i16
  store i32 %v0_a428, i32* %r0.global-to-local, align 4
  store i32 %v3_a014, i32* @r3, align 4
  %v1_a430 = load i32, i32* @r4, align 4
  %v9_a430 = icmp eq i32 %v3_a014, %v1_a430
  store i1 %v9_a430, i1* %cpsr_z.global-to-local, align 1
  %v3_a434 = load i32, i32* @r5, align 4
  %v4_a434 = add i32 %v3_a434, 20
  %v5_a434 = inttoptr i32 %v4_a434 to i16*
  store i16 %v1_a428, i16* %v5_a434, align 2
  br i1 %v9_a430, label %dec_label_pc_a43c, label %dec_label_pc_a428.dec_label_pc_a2c8_crit_edge

dec_label_pc_a428.dec_label_pc_a2c8_crit_edge:    ; preds = %dec_label_pc_a428
  %v1_a2cc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_a2c8

dec_label_pc_a43c:                                ; preds = %dec_label_pc_a428, %dec_label_pc_a2bc
  %v0_a43c = call i32 @function_d398()
  %v1_a43c = trunc i32 %v0_a43c to i16
  store i32 %v0_a43c, i32* %r0.global-to-local, align 4
  store i32 %v1_9e9c, i32* @ip, align 4
  %v1_a444 = load i32, i32* @r4, align 4
  %v9_a444 = icmp eq i32 %v1_9e9c, %v1_a444
  store i1 %v9_a444, i1* %cpsr_z.global-to-local, align 1
  %v3_a448 = load i32, i32* @r6, align 4
  %v4_a448 = add i32 %v3_a448, 2
  %v5_a448 = inttoptr i32 %v4_a448 to i16*
  store i16 %v1_a43c, i16* %v5_a448, align 2
  br i1 %v9_a444, label %dec_label_pc_a450, label %dec_label_pc_a43c.dec_label_pc_a2d4_crit_edge

dec_label_pc_a43c.dec_label_pc_a2d4_crit_edge:    ; preds = %dec_label_pc_a43c
  %v1_a2d8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_a2d4

dec_label_pc_a450:                                ; preds = %dec_label_pc_a43c, %dec_label_pc_a2c8
  %v0_a450 = call i32 @function_d398()
  %v1_a454 = load i32, i32* @r6, align 4
  %v2_a454 = add i32 %v1_a454, 4
  %v3_a454 = inttoptr i32 %v2_a454 to i32*
  store i32 %v0_a450, i32* %v3_a454, align 4
  store i32 %v1_9eb8, i32* %r0.global-to-local, align 4
  %v1_a45c = load i32, i32* @r4, align 4
  %v9_a45c = icmp eq i32 %v1_9eb8, %v1_a45c
  store i1 %v9_a45c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a45c, label %dec_label_pc_a464, label %dec_label_pc_a2e0

dec_label_pc_a464:                                ; preds = %dec_label_pc_a450, %dec_label_pc_a2d4
  %v0_a464 = call i32 @function_d398()
  store i32 %v0_a464, i32* %r0.global-to-local, align 4
  store i32 %v1_9f88, i32* %r1.global-to-local, align 4
  store i1 %v2_a46c, i1* %cpsr_z.global-to-local, align 1
  %v1_a470 = load i32, i32* @r6, align 4
  %v2_a470 = add i32 %v1_a470, 8
  %v3_a470 = inttoptr i32 %v2_a470 to i32*
  store i32 %v0_a464, i32* %v3_a470, align 4
  br i1 %v2_a46c, label %dec_label_pc_a2ec, label %dec_label_pc_a478

dec_label_pc_a478:                                ; preds = %dec_label_pc_a2e0, %dec_label_pc_a464
  %v0_a478 = load i32, i32* @r5, align 4
  %v1_a478 = add i32 %v0_a478, 40
  store i32 %v1_a478, i32* @r4, align 4
  store i32 %v1_a478, i32* %r0.global-to-local, align 4
  %v0_a480 = load i32, i32* @r8, align 4
  store i32 %v0_a480, i32* %r1.global-to-local, align 4
  %v2_a484 = call i32 @function_d45c(i32 %v1_a478, i32 %v0_a480)
  store i32 %v2_a484, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_a48c = load i32, i32* @r4, align 4
  %v3_a48c = load i32, i32* @r8, align 4
  %v4_a48c = add i32 %v3_a48c, %v2_a48c
  %v5_a48c = inttoptr i32 %v4_a48c to i8*
  store i8 0, i8* %v5_a48c, align 1
  br label %dec_label_pc_a2ec

dec_label_pc_a494:                                ; preds = %dec_label_pc_a2ec, %dec_label_pc_a258
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_a498 = call i32 @function_111c8(i32* null)
  store i32 %v2_a498, i32* %r0.global-to-local, align 4
  store i32 %v2_9fac, i32* %r1.global-to-local, align 4
  %v9_a4a0 = icmp eq i32 %v2_9fac, %v2_a498
  store i1 %v9_a4a0, i1* %cpsr_z.global-to-local, align 1
  %v6_a4a4 = icmp slt i32 %v2_9fac, %v2_a498
  br i1 %v6_a4a4, label %dec_label_pc_a4a8, label %dec_label_pc_a258

dec_label_pc_a4a8:                                ; preds = %dec_label_pc_a494, %dec_label_pc_9da0, %dec_label_pc_a4b4
  %v1_a4b0 = phi i32 [ %v3_9fc0, %dec_label_pc_9da0 ], [ %v1_a4b8, %dec_label_pc_a4b4 ], [ %v2_a498, %dec_label_pc_a494 ]
  store i32 %v18_9da0, i32* %sb.global-to-local, align 4
  store i32 %v24_9da0, i32* %fp.global-to-local, align 4
  store i32 %v27_9da0, i32* %lr.global-to-local, align 4
  ret i32 %v1_a4b0

dec_label_pc_a4b4:                                ; preds = %dec_label_pc_9fd0
  store i32 %v3_9fc0, i32* %r0.global-to-local, align 4
  %v1_a4b8 = call i32 @function_11548(i32 %v3_9fc0)
  store i32 %v1_a4b8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a4a8

; uselistorder directives
  uselistorder i32 %v1_a4b8, { 1, 0 }
  uselistorder i32 %v0_a43c, { 1, 0 }
  uselistorder i32 %v0_a428, { 1, 0 }
  uselistorder i32 %v0_a414, { 1, 0 }
  uselistorder i32 %v5_a3e8, { 1, 0 }
  uselistorder i32 %v3_a398, { 2, 1, 3, 0 }
  uselistorder i32 %v1_a364, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v5_a32c, { 1, 0 }
  uselistorder i32 %v4_a31c, { 1, 0 }
  uselistorder i32 %v0_a26c, { 2, 1, 0 }
  uselistorder i1 %v2_a46c, { 2, 3, 1, 0 }
  uselistorder i1 %v9_a408, { 2, 3, 1, 0 }
  uselistorder i1 %v7_a294, { 2, 1, 0 }
  uselistorder i32 %v1_a244, { 1, 0, 2, 3 }
  uselistorder i32 %v0_a214, { 1, 0 }
  uselistorder i32 %v0_a180, { 1, 0, 2, 3 }
  uselistorder i32 %v1_a0a8, { 2, 0, 1 }
  uselistorder i32 %v1_a0a4, { 2, 0, 1 }
  uselistorder i32 %v1_a094, { 1, 0 }
  uselistorder i1 %v2_a018, { 1, 0, 2, 3 }
  uselistorder i32 %v3_a00c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_a008, { 1, 0, 3, 2 }
  uselistorder i32 %v0_a004, { 1, 0, 2 }
  uselistorder i1 %v7_9ff0, { 1, 0 }
  uselistorder i1 %v7_9fc4, { 1, 0 }
  uselistorder i32 %v3_9fc0, { 3, 4, 1, 5, 6, 2, 0, 7 }
  uselistorder i32 %v2_9fac, { 2, 1, 0 }
  uselistorder i32 %v6_9f9c, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_9f88, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v1_9f00, { 0, 2, 1 }
  uselistorder i32 %v1_9eb8, { 3, 2, 1, 0 }
  uselistorder i32 %v1_9e9c, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_9e4c, { 1, 0 }
  uselistorder i32 %v1_9e28, { 1, 0 }
  uselistorder i32 %v1_9e20, { 1, 0 }
  uselistorder i32 %v1_9e08, { 1, 0, 2, 3 }
  uselistorder i8 %v5_9e04, { 1, 0 }
  uselistorder i32 %v1_9de4, { 1, 0 }
  uselistorder i32 %v2_9dcc, { 0, 4, 1, 3, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 11, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 8, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 7, 5, 8, 6, 9, 10, 11, 13, 12, 15, 14, 16, 18, 17, 19, 20, 21, 23, 22, 29, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 4, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 16, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32 %arg2, { 6, 5, 4, 7, 3, 2, 1, 0, 8, 10, 9, 11 }
  uselistorder label %dec_label_pc_a4a8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a478, { 1, 0 }
  uselistorder label %dec_label_pc_a2ec, { 2, 1, 0 }
  uselistorder label %dec_label_pc_a258, { 1, 0 }
  uselistorder label %.thread10, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_a4c4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_a4c4:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_a4c4 = load i32, i32* @r4, align 4
  %v24_a4c4 = load i32, i32* @fp, align 4
  %v27_a4c4 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* @sb, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_a4f0 = call i32 @function_12898(i32 %arg2, i32 4)
  %v0_a4f4 = load i32, i32* @r4, align 4
  store i32 %v0_a4f4, i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  store i32 %v2_a4f0, i32* @sl, align 4
  %v0_a504 = load i32, i32* @r5, align 4
  store i32 %v0_a504, i32* %r0.global-to-local, align 4
  %v1_a508 = call i32 @function_8258(i32 %v0_a504)
  store i32 add (i32 ptrtoint (i32* @global_var_10000.37 to i32), i32 -1), i32* @r3, align 4
  store i32 3, i32* @r2, align 4
  %v0_a520 = load i32, i32* @r4, align 4
  store i32 %v0_a520, i32* @r1, align 4
  %v0_a524 = load i32, i32* @r5, align 4
  store i32 %v0_a524, i32* %r0.global-to-local, align 4
  %v5_a528 = trunc i32 %v1_a508 to i8
  %v1_a52c = call i32 @function_8258(i32 %v0_a524)
  %v0_a530 = load i32, i32* @r4, align 4
  store i32 %v0_a530, i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  store i32 64, i32* @r3, align 4
  %v0_a540 = load i32, i32* @r5, align 4
  store i32 %v0_a540, i32* %r0.global-to-local, align 4
  %v1_a544 = call i32 @function_8258(i32 %v0_a540)
  %v1_a54c = urem i32 %v1_a544, 256
  %v0_a550 = load i32, i32* @r4, align 4
  store i32 %v0_a550, i32* @r1, align 4
  store i32 5, i32* @r2, align 4
  store i32 1, i32* @r3, align 4
  %v0_a55c = load i32, i32* @r5, align 4
  store i32 %v0_a55c, i32* %r0.global-to-local, align 4
  %v1_a564 = call i32 @function_8258(i32 %v0_a55c)
  %v1_a570 = urem i32 %v1_a564, 256
  store i32 add (i32 ptrtoint (i32* @global_var_10000.37 to i32), i32 -1), i32* @r3, align 4
  store i32 6, i32* @r2, align 4
  %v0_a57c = load i32, i32* @r4, align 4
  store i32 %v0_a57c, i32* @r1, align 4
  %v0_a580 = load i32, i32* @r5, align 4
  store i32 %v0_a580, i32* %r0.global-to-local, align 4
  %v1_a588 = call i32 @function_8258(i32 %v0_a580)
  %v0_a594 = load i32, i32* @r4, align 4
  store i32 %v0_a594, i32* @r1, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.37 to i32), i32 -1), i32* @r3, align 4
  store i32 7, i32* @r2, align 4
  %v0_a5a0 = load i32, i32* @r5, align 4
  store i32 %v0_a5a0, i32* %r0.global-to-local, align 4
  %v1_a5a4 = call i32 @function_8258(i32 %v0_a5a0)
  %v0_a5ac = load i32, i32* @r4, align 4
  store i32 %v0_a5ac, i32* @r1, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.37 to i32), i32 -1), i32* @r3, align 4
  store i32 16, i32* @r2, align 4
  store i32 %v1_a5a4, i32* %fp.global-to-local, align 4
  %v0_a5bc = load i32, i32* @r5, align 4
  store i32 %v0_a5bc, i32* %r0.global-to-local, align 4
  %v1_a5c0 = call i32 @function_8258(i32 %v0_a5bc)
  %v0_a5c4 = load i32, i32* @r4, align 4
  store i32 %v0_a5c4, i32* @r1, align 4
  store i32 17, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v0_a5d4 = load i32, i32* @r5, align 4
  store i32 %v0_a5d4, i32* %r0.global-to-local, align 4
  %v1_a5d8 = call i32 @function_8258(i32 %v0_a5d4)
  %v0_a5dc = load i32, i32* @r4, align 4
  store i32 %v0_a5dc, i32* @r1, align 4
  store i32 10, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v0_a5ec = load i32, i32* @r5, align 4
  store i32 %v0_a5ec, i32* %r0.global-to-local, align 4
  %v1_a5f0 = call i32 @function_8258(i32 %v0_a5ec)
  %v0_a5f4 = load i32, i32* @r4, align 4
  store i32 %v0_a5f4, i32* @r1, align 4
  store i32 11, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v0_a604 = load i32, i32* @r5, align 4
  store i32 %v0_a604, i32* %r0.global-to-local, align 4
  %v1_a608 = call i32 @function_8258(i32 %v0_a604)
  %v0_a60c = load i32, i32* @r4, align 4
  store i32 %v0_a60c, i32* @r1, align 4
  store i32 12, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v0_a61c = load i32, i32* @r5, align 4
  store i32 %v0_a61c, i32* %r0.global-to-local, align 4
  %v1_a620 = call i32 @function_8258(i32 %v0_a61c)
  %v0_a624 = load i32, i32* @r4, align 4
  store i32 %v0_a624, i32* @r1, align 4
  store i32 13, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v0_a634 = load i32, i32* @r5, align 4
  store i32 %v0_a634, i32* %r0.global-to-local, align 4
  %v1_a638 = call i32 @function_8258(i32 %v0_a634)
  %v0_a63c = load i32, i32* @r4, align 4
  store i32 %v0_a63c, i32* @r1, align 4
  store i32 14, i32* @r2, align 4
  store i32 1, i32* @r3, align 4
  %v0_a64c = load i32, i32* @r5, align 4
  store i32 %v0_a64c, i32* %r0.global-to-local, align 4
  %v1_a650 = call i32 @function_8258(i32 %v0_a64c)
  %v0_a654 = load i32, i32* @r4, align 4
  store i32 %v0_a654, i32* @r1, align 4
  store i32 15, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v0_a664 = load i32, i32* @r5, align 4
  store i32 %v0_a664, i32* %r0.global-to-local, align 4
  %v1_a668 = call i32 @function_8258(i32 %v0_a664)
  %v0_a670 = load i32, i32* @r4, align 4
  store i32 %v0_a670, i32* %r1.global-to-local, align 4
  %v2_a674 = load i32, i32* @global_var_21644.39, align 4
  store i32 %v2_a674, i32* %r3.global-to-local, align 4
  store i32 19, i32* %r2.global-to-local, align 4
  %v0_a680 = load i32, i32* @r5, align 4
  store i32 %v0_a680, i32* %r0.global-to-local, align 4
  %v5_a684 = inttoptr i32 %v0_a670 to i32*
  %v6_a684 = call i32 @function_81ec(i32 %v0_a680, i32* %v5_a684, i32 19, i32 %v2_a674, i32 %v1_a668)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_a690 = call i32 @function_111c8(i32* null)
  %v1_a694 = load i32, i32* @r6, align 4
  %v2_a694 = add i32 %v1_a694, %v2_a690
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_a6a8 = call i32 @function_11d30(i32 2, i32 3, i32 6)
  store i32 %v3_a6a8, i32* %r0.global-to-local, align 4
  %v7_a6ac = icmp eq i32 %v3_a6a8, -1
  store i1 %v7_a6ac, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_a6a8, i32* @r8, align 4
  br i1 %v7_a6ac, label %dec_label_pc_ab80, label %dec_label_pc_a6b8

dec_label_pc_a6b8:                                ; preds = %dec_label_pc_a4c4
  store i32 1, i32* %stack_var_-44, align 4
  %v6_a6c0 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_a6c0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_a6d4 = call i32 @function_11cec(i32 %v3_a6a8, i32 0, i32 3, i32 %v6_a6c0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_a6d4, i32* %r0.global-to-local, align 4
  %v7_a6d8 = icmp eq i32 %v5_a6d4, -1
  store i1 %v7_a6d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a6d8, label %dec_label_pc_ab8c, label %dec_label_pc_a6e0

dec_label_pc_a6e0:                                ; preds = %dec_label_pc_a6b8
  %v3_a6ec = mul i32 %v1_a52c, 65536
  store i32 %v3_a6ec, i32* %r0.global-to-local, align 4
  %v0_a6f4 = load i32, i32* %fp.global-to-local, align 4
  store i32 0, i32* %stack_var_-44, align 4
  store i32 %v1_a5f0, i32* %r1.global-to-local, align 4
  %v3_a700 = urem i32 %v1_a52c, 65536
  store i32 %v3_a700, i32* %r2.global-to-local, align 4
  %v3_a704 = urem i32 %v1_a588, 65536
  store i32 %v3_a704, i32* %r3.global-to-local, align 4
  %v3_a708 = urem i32 %v0_a6f4, 65536
  %v0_a70c = load i32, i32* @sb, align 4
  %v2_a70c = icmp eq i32 %v0_a70c, 0
  store i1 %v2_a70c, i1* %cpsr_z.global-to-local, align 1
  %v1_a71c = urem i32 %v1_a5f0, 256
  store i32 %v1_a71c, i32* @fp, align 4
  br i1 %v2_a70c, label %dec_label_pc_a970.preheader, label %dec_label_pc_a724

dec_label_pc_a724:                                ; preds = %dec_label_pc_a6e0
  %trunc = trunc i32 %v1_a52c to i16
  %rev = call i16 @llvm.bswap.i16(i16 %trunc)
  %tmp60 = mul nuw nsw i32 %v3_a704, 256
  %v3_a750 = and i32 %tmp60, 65280
  %tmp61 = mul i32 %v0_a6f4, 256
  %v3_a754 = and i32 %tmp61, 65280
  %tmp62 = mul i32 %v1_a5c0, 256
  %v3_a758 = and i32 %tmp62, 65280
  %v1_a75c = urem i32 %v1_a5f0, 2
  %tmp63 = udiv i32 %v1_a588, 256
  %v4_a760 = urem i32 %tmp63, 256
  %v5_a760 = or i32 %v3_a750, %v4_a760
  %tmp64 = udiv i32 %v0_a6f4, 256
  %v4_a764 = urem i32 %tmp64, 256
  %v5_a764 = or i32 %v4_a764, %v3_a754
  store i32 %v5_a764, i32* @r5, align 4
  %tmp65 = udiv i32 %v1_a5c0, 256
  %v4_a768 = urem i32 %tmp65, 256
  %v5_a768 = or i32 %v4_a768, %v3_a758
  store i32 %v5_a768, i32* @lr, align 4
  %v1_a77c = urem i32 %v1_a608, 2
  store i32 %v1_a77c, i32* %r1.global-to-local, align 4
  %v1_a780 = urem i32 %v1_a620, 2
  store i32 %v1_a780, i32* %r2.global-to-local, align 4
  %v1_a784 = urem i32 %v1_a638, 2
  store i32 %v1_a784, i32* %r3.global-to-local, align 4
  %v1_a788 = urem i32 %v1_a650, 2
  store i32 %v1_a788, i32* @r6, align 4
  %v1_a78c = urem i32 %v1_a668, 2
  store i32 %v1_a78c, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_a808 = trunc i32 %v1_a544 to i8
  %sext6 = mul nuw i32 %v5_a760, 65536
  %v4_a834 = sdiv i32 %sext6, 65536
  %sext7 = mul nuw i32 %v5_a764, 65536
  %v6_a870 = sdiv i32 %sext7, 65536
  %tmp = sub nsw i32 0, %v1_a77c
  %v4_a888 = and i32 %tmp, 16
  %tmp66 = sub nsw i32 0, %v1_a780
  %v4_a8a0 = and i32 %tmp66, 8
  %tmp67 = sub nsw i32 0, %v1_a784
  %v4_a8b4 = and i32 %tmp67, 4
  %tmp68 = sub nsw i32 0, %v1_a788
  %v3_a8c8 = and i32 %tmp68, 2
  br label %dec_label_pc_a7b4

dec_label_pc_a7b4:                                ; preds = %.thread, %dec_label_pc_a724
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 128, i32* %r0.global-to-local, align 4
  %v2_a7bc = call i32 @function_12898(i32 128, i32 1)
  store i32 %v2_a7bc, i32* %r0.global-to-local, align 4
  %v3_a7c0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a7c0, i32* %r2.global-to-local, align 4
  %v1_a7c4 = load i32, i32* @sl, align 4
  %v2_a7c4 = load i32, i32* @r4, align 4
  %v5_a7c4 = mul i32 %v2_a7c4, 4
  %v6_a7c4 = add i32 %v5_a7c4, %v1_a7c4
  %v7_a7c4 = inttoptr i32 %v6_a7c4 to i32*
  store i32 %v2_a7bc, i32* %v7_a7c4, align 4
  %v0_a7c8 = load i32, i32* %r2.global-to-local, align 4
  %v3_a7c8 = mul i32 %v0_a7c8, 32
  store i32 %v3_a7c8, i32* %r3.global-to-local, align 4
  %v0_a7cc = load i32, i32* @sl, align 4
  %v4_a7cc = mul i32 %v0_a7c8, 4
  %v5_a7cc = add i32 %v0_a7cc, %v4_a7cc
  %v6_a7cc = inttoptr i32 %v5_a7cc to i32*
  %v7_a7cc = load i32, i32* %v6_a7cc, align 4
  store i32 %v7_a7cc, i32* %r4.global-to-local, align 4
  %v5_a7d0 = mul i32 %v0_a7c8, 24
  store i32 %v5_a7d0, i32* %r3.global-to-local, align 4
  %v1_a7d4 = load i32, i32* @r7, align 4
  %v2_a7d4 = add i32 %v1_a7d4, %v5_a7d0
  store i32 %v2_a7d4, i32* %r0.global-to-local, align 4
  %v1_a7d8 = inttoptr i32 %v7_a7cc to i8*
  %v2_a7d8 = load i8, i8* %v1_a7d8, align 1
  %tmp69 = urem i8 %v2_a7d8, 16
  %v1_a7dc = zext i8 %tmp69 to i32
  %v1_a7e0 = or i32 %v1_a7dc, 64
  store i32 %v1_a7e0, i32* %r3.global-to-local, align 4
  %v1_a7e4 = trunc i32 %v1_a7e0 to i8
  store i8 %v1_a7e4, i8* %v1_a7d8, align 1
  %v0_a7e8 = load i32, i32* %r4.global-to-local, align 4
  %v1_a7e8 = inttoptr i32 %v0_a7e8 to i8*
  %v2_a7e8 = load i8, i8* %v1_a7e8, align 1
  %v1_a7ec = and i8 %v2_a7e8, -16
  %v1_a7f0 = or i8 %v1_a7ec, 5
  store i32 %v1_a570, i32* %r1.global-to-local, align 4
  store i8 %v1_a7f0, i8* %v1_a7e8, align 1
  %v2_a800 = load i32, i32* %r4.global-to-local, align 4
  %v3_a800 = add i32 %v2_a800, 1
  %v4_a800 = inttoptr i32 %v3_a800 to i8*
  store i8 %v5_a528, i8* %v4_a800, align 1
  store i32 %v1_a54c, i32* %r3.global-to-local, align 4
  %v2_a808 = load i32, i32* %r4.global-to-local, align 4
  %v3_a808 = add i32 %v2_a808, 8
  %v4_a808 = inttoptr i32 %v3_a808 to i8*
  store i8 %v1_a808, i8* %v4_a808, align 1
  %v0_a810 = load i32, i32* %r1.global-to-local, align 4
  %v2_a810 = icmp eq i32 %v0_a810, 0
  store i1 %v2_a810, i1* %cpsr_z.global-to-local, align 1
  %v2_a814 = load i32, i32* %r4.global-to-local, align 4
  %v3_a814 = add i32 %v2_a814, 4
  %v4_a814 = inttoptr i32 %v3_a814 to i16*
  store i16 %rev, i16* %v4_a814, align 2
  store i32 6, i32* %r2.global-to-local, align 4
  %v2_a81c = load i32, i32* %r4.global-to-local, align 4
  %v3_a81c = add i32 %v2_a81c, 9
  %v4_a81c = inttoptr i32 %v3_a81c to i8*
  store i8 6, i8* %v4_a81c, align 1
  %v0_a820 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a820, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_a7b4
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_a824 = load i32, i32* %r4.global-to-local, align 4
  %v4_a824 = add i32 %v3_a824, 6
  %v5_a824 = inttoptr i32 %v4_a824 to i16*
  store i16 64, i16* %v5_a824, align 2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_a7b4, %bb
  store i32 %v6_a684, i32* %r3.global-to-local, align 4
  %v1_a82c = load i32, i32* %r4.global-to-local, align 4
  %v2_a82c = add i32 %v1_a82c, 12
  %v3_a82c = inttoptr i32 %v2_a82c to i32*
  store i32 %v6_a684, i32* %v3_a82c, align 4
  %v0_a830 = load i32, i32* %r0.global-to-local, align 4
  %v1_a830 = add i32 %v0_a830, 16
  %v2_a830 = inttoptr i32 %v1_a830 to i32*
  %v3_a830 = load i32, i32* %v2_a830, align 4
  store i32 %v3_a830, i32* %r3.global-to-local, align 4
  store i32 %v4_a834, i32* %r0.global-to-local, align 4
  %v2_a83c = load i32, i32* %r4.global-to-local, align 4
  %v3_a83c = add i32 %v2_a83c, 2
  %v4_a83c = inttoptr i32 %v3_a83c to i16*
  store i16 15360, i16* %v4_a83c, align 2
  %v0_a840 = load i32, i32* %r3.global-to-local, align 4
  %v1_a840 = load i32, i32* %r4.global-to-local, align 4
  %v2_a840 = add i32 %v1_a840, 16
  %v3_a840 = inttoptr i32 %v2_a840 to i32*
  store i32 %v0_a840, i32* %v3_a840, align 4
  %v0_a844 = load i32, i32* %r0.global-to-local, align 4
  %v1_a844 = trunc i32 %v0_a844 to i16
  %v2_a844 = load i32, i32* %r4.global-to-local, align 4
  %v3_a844 = add i32 %v2_a844, 20
  %v4_a844 = inttoptr i32 %v3_a844 to i16*
  store i16 %v1_a844, i16* %v4_a844, align 2
  %v0_a848 = load i32, i32* %r4.global-to-local, align 4
  %v1_a848 = add i32 %v0_a848, 20
  store i32 %v1_a848, i32* %r1.global-to-local, align 4
  %v1_a84c = add i32 %v0_a848, 32
  %v2_a84c = inttoptr i32 %v1_a84c to i8*
  %v3_a84c = load i8, i8* %v2_a84c, align 1
  %v4_a84c = zext i8 %v3_a84c to i32
  store i32 %v4_a84c, i32* %r3.global-to-local, align 4
  %v1_a850 = add i32 %v0_a848, 33
  %v2_a850 = inttoptr i32 %v1_a850 to i8*
  %v3_a850 = load i8, i8* %v2_a850, align 1
  %v4_a850 = zext i8 %v3_a850 to i32
  store i32 %v1_a75c, i32* %r0.global-to-local, align 4
  %v1_a858 = urem i8 %v3_a84c, 16
  %v1_a85c = or i8 %v1_a858, -96
  %v1_a860 = and i32 %v4_a850, 223
  store i32 %v1_a860, i32* %r2.global-to-local, align 4
  store i8 %v1_a85c, i8* %v2_a84c, align 1
  %v0_a868 = load i32, i32* %r2.global-to-local, align 4
  %v1_a868 = load i32, i32* %r0.global-to-local, align 4
  %v4_a868 = mul i32 %v1_a868, 32
  %v5_a868 = or i32 %v4_a868, %v0_a868
  store i32 %v5_a868, i32* %r2.global-to-local, align 4
  store i32 %v5_a768, i32* %r0.global-to-local, align 4
  store i32 %v6_a870, i32* %r3.global-to-local, align 4
  %v1_a874 = trunc i32 %v5_a868 to i8
  %v2_a874 = load i32, i32* %r1.global-to-local, align 4
  %v3_a874 = add i32 %v2_a874, 13
  %v4_a874 = inttoptr i32 %v3_a874 to i8*
  store i8 %v1_a874, i8* %v4_a874, align 1
  %v0_a878 = load i32, i32* %r3.global-to-local, align 4
  %v1_a878 = trunc i32 %v0_a878 to i16
  %v2_a878 = load i32, i32* %r1.global-to-local, align 4
  %v3_a878 = add i32 %v2_a878, 2
  %v4_a878 = inttoptr i32 %v3_a878 to i16*
  store i16 %v1_a878, i16* %v4_a878, align 2
  %v0_a87c = load i32, i32* %r1.global-to-local, align 4
  %v1_a87c = add i32 %v0_a87c, 13
  %v2_a87c = inttoptr i32 %v1_a87c to i8*
  %v3_a87c = load i8, i8* %v2_a87c, align 1
  %v4_a87c = zext i8 %v3_a87c to i32
  store i32 %v1_a77c, i32* %r2.global-to-local, align 4
  %v1_a884 = and i32 %v4_a87c, 239
  %v5_a888 = or i32 %v1_a884, %v4_a888
  store i32 %v5_a888, i32* %r3.global-to-local, align 4
  %v0_a88c = load i32, i32* %r0.global-to-local, align 4
  %v2_a88c = add i32 %v0_a87c, 4
  %v3_a88c = inttoptr i32 %v2_a88c to i32*
  store i32 %v0_a88c, i32* %v3_a88c, align 4
  %v0_a890 = load i32, i32* %r3.global-to-local, align 4
  %v1_a890 = trunc i32 %v0_a890 to i8
  %v2_a890 = load i32, i32* %r1.global-to-local, align 4
  %v3_a890 = add i32 %v2_a890, 13
  %v4_a890 = inttoptr i32 %v3_a890 to i8*
  store i8 %v1_a890, i8* %v4_a890, align 1
  %v0_a894 = load i32, i32* %r1.global-to-local, align 4
  %v1_a894 = add i32 %v0_a894, 13
  %v2_a894 = inttoptr i32 %v1_a894 to i8*
  %v3_a894 = load i8, i8* %v2_a894, align 1
  %v4_a894 = zext i8 %v3_a894 to i32
  store i32 %v1_a780, i32* %r3.global-to-local, align 4
  %v1_a89c = and i32 %v4_a894, 247
  %v5_a8a0 = or i32 %v1_a89c, %v4_a8a0
  store i32 %v5_a8a0, i32* %r2.global-to-local, align 4
  %v1_a8a4 = trunc i32 %v5_a8a0 to i8
  store i8 %v1_a8a4, i8* %v2_a894, align 1
  %v0_a8a8 = load i32, i32* %r1.global-to-local, align 4
  %v1_a8a8 = add i32 %v0_a8a8, 13
  %v2_a8a8 = inttoptr i32 %v1_a8a8 to i8*
  %v3_a8a8 = load i8, i8* %v2_a8a8, align 1
  %v4_a8a8 = zext i8 %v3_a8a8 to i32
  store i32 %v1_a784, i32* %r0.global-to-local, align 4
  %v1_a8b0 = and i32 %v4_a8a8, 251
  %v5_a8b4 = or i32 %v1_a8b0, %v4_a8b4
  store i32 %v5_a8b4, i32* %r3.global-to-local, align 4
  %v1_a8b8 = trunc i32 %v5_a8b4 to i8
  store i8 %v1_a8b8, i8* %v2_a8a8, align 1
  %v0_a8bc = load i32, i32* %r1.global-to-local, align 4
  %v1_a8bc = add i32 %v0_a8bc, 13
  %v2_a8bc = inttoptr i32 %v1_a8bc to i8*
  %v3_a8bc = load i8, i8* %v2_a8bc, align 1
  %v4_a8bc = zext i8 %v3_a8bc to i32
  store i32 %v1_a788, i32* %r3.global-to-local, align 4
  %v1_a8c4 = and i32 %v4_a8bc, 253
  %v4_a8c8 = or i32 %v1_a8c4, %v3_a8c8
  store i32 %v4_a8c8, i32* %r2.global-to-local, align 4
  %v1_a8cc = trunc i32 %v4_a8c8 to i8
  store i8 %v1_a8cc, i8* %v2_a8bc, align 1
  %v0_a8d0 = load i32, i32* %r1.global-to-local, align 4
  %v1_a8d0 = add i32 %v0_a8d0, 13
  %v2_a8d0 = inttoptr i32 %v1_a8d0 to i8*
  %v3_a8d0 = load i8, i8* %v2_a8d0, align 1
  %v4_a8d0 = zext i8 %v3_a8d0 to i32
  store i32 %v1_a78c, i32* %r0.global-to-local, align 4
  %v1_a8d8 = and i32 %v4_a8d0, 254
  %v2_a8dc = or i32 %v1_a8d8, %v1_a78c
  store i32 %v2_a8dc, i32* %r3.global-to-local, align 4
  store i32 2, i32* @r5, align 4
  store i32 4, i32* @r6, align 4
  %v1_a8e8 = trunc i32 %v2_a8dc to i8
  store i8 %v1_a8e8, i8* %v2_a8d0, align 1
  %v0_a8ec = load i32, i32* @r5, align 4
  %v1_a8ec = trunc i32 %v0_a8ec to i8
  %v2_a8ec = load i32, i32* %r4.global-to-local, align 4
  %v3_a8ec = add i32 %v2_a8ec, 40
  %v4_a8ec = inttoptr i32 %v3_a8ec to i8*
  store i8 %v1_a8ec, i8* %v4_a8ec, align 1
  %v0_a8f0 = load i32, i32* @r6, align 4
  %v1_a8f0 = trunc i32 %v0_a8f0 to i8
  %v2_a8f0 = load i32, i32* %r4.global-to-local, align 4
  %v3_a8f0 = add i32 %v2_a8f0, 41
  %v4_a8f0 = inttoptr i32 %v3_a8f0 to i8*
  store i8 %v1_a8f0, i8* %v4_a8f0, align 1
  %v0_a8f4 = call i32 @function_d398()
  %v1_a8f8 = urem i32 %v0_a8f4, 16
  %v1_a8fc = or i32 %v1_a8f8, 1392
  %v1_a900 = add nuw nsw i32 %v1_a8fc, 8
  %v3_a904 = mul nuw nsw i32 %v1_a900, 65536
  store i32 %v3_a904, i32* %r0.global-to-local, align 4
  %v3_a908 = mul nuw nsw i32 %v1_a900, 256
  %v5_a910 = or i32 %v3_a908, 5
  %v1_a914 = trunc i32 %v5_a910 to i16
  %v2_a914 = load i32, i32* %r4.global-to-local, align 4
  %v3_a914 = add i32 %v2_a914, 42
  %v4_a914 = inttoptr i32 %v3_a914 to i16*
  store i16 %v1_a914, i16* %v4_a914, align 2
  store i32 10, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  %v2_a920 = load i32, i32* %r4.global-to-local, align 4
  %v3_a920 = add i32 %v2_a920, 46
  %v4_a920 = inttoptr i32 %v3_a920 to i8*
  store i8 8, i8* %v4_a920, align 1
  %v0_a924 = load i32, i32* %r2.global-to-local, align 4
  %v1_a924 = trunc i32 %v0_a924 to i8
  %v2_a924 = load i32, i32* %r4.global-to-local, align 4
  %v3_a924 = add i32 %v2_a924, 47
  %v4_a924 = inttoptr i32 %v3_a924 to i8*
  store i8 %v1_a924, i8* %v4_a924, align 1
  %v0_a928 = load i32, i32* @r6, align 4
  %v1_a928 = trunc i32 %v0_a928 to i8
  %v2_a928 = load i32, i32* %r4.global-to-local, align 4
  %v3_a928 = add i32 %v2_a928, 44
  %v4_a928 = inttoptr i32 %v3_a928 to i8*
  store i8 %v1_a928, i8* %v4_a928, align 1
  %v0_a92c = load i32, i32* @r5, align 4
  %v1_a92c = trunc i32 %v0_a92c to i8
  %v2_a92c = load i32, i32* %r4.global-to-local, align 4
  %v3_a92c = add i32 %v2_a92c, 45
  %v4_a92c = inttoptr i32 %v3_a92c to i8*
  store i8 %v1_a92c, i8* %v4_a92c, align 1
  %v0_a930 = call i32 @function_d398()
  store i32 %v0_a930, i32* %r0.global-to-local, align 4
  %v2_a938 = load i32, i32* %r4.global-to-local, align 4
  %v3_a938 = add i32 %v2_a938, 59
  %v4_a938 = inttoptr i32 %v3_a938 to i8*
  store i8 6, i8* %v4_a938, align 1
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v1_a948 = load i32, i32* %r4.global-to-local, align 4
  %v2_a948 = add i32 %v1_a948, 48
  %v3_a948 = inttoptr i32 %v2_a948 to i32*
  store i32 %v0_a930, i32* %v3_a948, align 4
  %v0_a94c = load i32, i32* %r3.global-to-local, align 4
  %v1_a94c = load i32, i32* %r4.global-to-local, align 4
  %v2_a94c = add i32 %v1_a94c, 52
  %v3_a94c = inttoptr i32 %v2_a94c to i32*
  store i32 %v0_a94c, i32* %v3_a94c, align 4
  %v0_a950 = load i32, i32* %r2.global-to-local, align 4
  %v1_a950 = trunc i32 %v0_a950 to i8
  %v2_a950 = load i32, i32* %r4.global-to-local, align 4
  %v3_a950 = add i32 %v2_a950, 56
  %v4_a950 = inttoptr i32 %v3_a950 to i8*
  store i8 %v1_a950, i8* %v4_a950, align 1
  %v0_a954 = load i32, i32* %r1.global-to-local, align 4
  %v1_a954 = trunc i32 %v0_a954 to i8
  %v2_a954 = load i32, i32* %r4.global-to-local, align 4
  %v3_a954 = add i32 %v2_a954, 58
  %v4_a954 = inttoptr i32 %v3_a954 to i8*
  store i8 %v1_a954, i8* %v4_a954, align 1
  %v0_a958 = load i32, i32* %r1.global-to-local, align 4
  %v1_a958 = trunc i32 %v0_a958 to i8
  %v2_a958 = load i32, i32* %r4.global-to-local, align 4
  %v3_a958 = add i32 %v2_a958, 57
  %v4_a958 = inttoptr i32 %v3_a958 to i8*
  store i8 %v1_a958, i8* %v4_a958, align 1
  %v3_a95c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a95c, i32* %r3.global-to-local, align 4
  %v1_a960 = load i32, i32* %r2.global-to-local, align 4
  %v2_a960 = add i32 %v1_a960, %v3_a95c
  store i32 %v2_a960, i32* @r4, align 4
  %v1_a964 = load i32, i32* @sb, align 4
  %v9_a964 = icmp eq i32 %v2_a960, %v1_a964
  store i1 %v9_a964, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_a960, i32* %stack_var_-44, align 4
  %v5_a96c = icmp slt i32 %v2_a960, %v1_a964
  br i1 %v5_a96c, label %dec_label_pc_a7b4, label %dec_label_pc_a970.preheader

dec_label_pc_a970.preheader:                      ; preds = %.thread, %dec_label_pc_a6e0
  %v0_a97410 = phi i32 [ 0, %dec_label_pc_a6e0 ], [ %v1_a964, %.thread ]
  %v2_a98c = icmp eq i32 %v6_a684, -1
  %v7_a98c = icmp eq i32 %v6_a684, -1
  %v9_a9a0 = icmp eq i32 %v3_a700, add (i32 ptrtoint (i32* @global_var_10000.37 to i32), i32 -1)
  br label %dec_label_pc_a970

dec_label_pc_a970:                                ; preds = %dec_label_pc_ab6c.dec_label_pc_a970_crit_edge, %dec_label_pc_a970.preheader
  %v0_a974 = phi i32 [ %v0_a974.pre, %dec_label_pc_ab6c.dec_label_pc_a970_crit_edge ], [ %v0_a97410, %dec_label_pc_a970.preheader ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_a974 = icmp eq i32 %v0_a974, 0
  store i1 %v2_a974, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_a974, label %dec_label_pc_ab6c, label %dec_label_pc_a980

dec_label_pc_a980:                                ; preds = %dec_label_pc_a970
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_aa64

dec_label_pc_a988:                                ; preds = %dec_label_pc_aa64
  store i32 %v6_a684, i32* %r3.global-to-local, align 4
  store i1 %v7_a98c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a98c, label %dec_label_pc_aae4, label %dec_label_pc_a994

dec_label_pc_a994:                                ; preds = %dec_label_pc_aa84, %dec_label_pc_a988
  store i32 %v3_a700, i32* %r0.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.37 to i32), i32 -1), i32* @r4, align 4
  store i1 %v9_a9a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a9a0, label %dec_label_pc_ab00, label %dec_label_pc_a9a8

dec_label_pc_a9a8:                                ; preds = %dec_label_pc_aae4, %dec_label_pc_a994
  %v1_a9ac = phi i32 [ %v1_aaf4, %dec_label_pc_aae4 ], [ add (i32 ptrtoint (i32* @global_var_10000.37 to i32), i32 -1), %dec_label_pc_a994 ]
  store i32 %v3_a704, i32* %r1.global-to-local, align 4
  %v9_a9ac = icmp eq i32 %v3_a704, %v1_a9ac
  store i1 %v9_a9ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a9ac, label %dec_label_pc_ab14, label %dec_label_pc_a9b4

dec_label_pc_a9b4:                                ; preds = %dec_label_pc_ab00.dec_label_pc_a9b4_crit_edge, %dec_label_pc_a9a8
  %v1_a9b8 = phi i32 [ %v1_a9b8.pre, %dec_label_pc_ab00.dec_label_pc_a9b4_crit_edge ], [ %v1_a9ac, %dec_label_pc_a9a8 ]
  store i32 %v3_a708, i32* %r2.global-to-local, align 4
  %v9_a9b8 = icmp eq i32 %v3_a708, %v1_a9b8
  store i1 %v9_a9b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a9b8, label %dec_label_pc_ab28, label %dec_label_pc_a9c0

dec_label_pc_a9c0:                                ; preds = %dec_label_pc_ab14.dec_label_pc_a9c0_crit_edge, %dec_label_pc_a9b4
  %v1_a9c4 = phi i32 [ %v1_a9c4.pre, %dec_label_pc_ab14.dec_label_pc_a9c0_crit_edge ], [ %v1_a9b8, %dec_label_pc_a9b4 ]
  store i32 %v1_a5c0, i32* %r3.global-to-local, align 4
  %v9_a9c4 = icmp eq i32 %v1_a5c0, %v1_a9c4
  store i1 %v9_a9c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a9c4, label %dec_label_pc_ab3c, label %dec_label_pc_a9cc

dec_label_pc_a9cc:                                ; preds = %dec_label_pc_ab28.dec_label_pc_a9cc_crit_edge, %dec_label_pc_a9c0
  %v1_a9d0 = phi i32 [ %v1_a9d0.pre, %dec_label_pc_ab28.dec_label_pc_a9cc_crit_edge ], [ %v1_a9c4, %dec_label_pc_a9c0 ]
  store i32 %v1_a5d8, i32* %r0.global-to-local, align 4
  %v9_a9d0 = icmp eq i32 %v1_a5d8, %v1_a9d0
  store i1 %v9_a9d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a9d0, label %dec_label_pc_ab50, label %dec_label_pc_a9d8

dec_label_pc_a9d8:                                ; preds = %dec_label_pc_ab3c, %dec_label_pc_a9cc
  %v0_a9d8 = load i32, i32* @fp, align 4
  %v2_a9d8 = icmp eq i32 %v0_a9d8, 0
  store i1 %v2_a9d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a9d8, label %dec_label_pc_a9e0, label %dec_label_pc_ab60

dec_label_pc_a9e0:                                ; preds = %dec_label_pc_a9d8, %dec_label_pc_ab50, %dec_label_pc_ab60
  %v2_a9e4 = load i32, i32* @r5, align 4
  %v3_a9e4 = add i32 %v2_a9e4, 10
  %v4_a9e4 = inttoptr i32 %v3_a9e4 to i16*
  store i16 0, i16* %v4_a9e4, align 2
  %v0_a9e8 = load i32, i32* @r5, align 4
  store i32 %v0_a9e8, i32* @r0, align 4
  store i32 20, i32* %r1.global-to-local, align 4
  %v2_a9f0 = call i32 @function_bf78(i32 %v0_a9e8, i32 20)
  %v3_a9f0 = trunc i32 %v2_a9f0 to i16
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_a9f8 = load i32, i32* @r5, align 4
  %v4_a9f8 = add i32 %v3_a9f8, 10
  %v5_a9f8 = inttoptr i32 %v4_a9f8 to i16*
  store i16 %v3_a9f0, i16* %v5_a9f8, align 2
  %v0_a9fc = load i32, i32* @r6, align 4
  store i32 %v0_a9fc, i32* @r1, align 4
  %v0_aa00 = load i32, i32* %r2.global-to-local, align 4
  %v1_aa00 = trunc i32 %v0_aa00 to i16
  %v3_aa00 = add i32 %v0_a9fc, 16
  %v4_aa00 = inttoptr i32 %v3_aa00 to i16*
  store i16 %v1_aa00, i16* %v4_aa00, align 2
  store i32 40, i32* %r3.global-to-local, align 4
  store i32 10240, i32* %r2.global-to-local, align 4
  %v0_aa0c = load i32, i32* @r5, align 4
  store i32 %v0_aa0c, i32* %r0.global-to-local, align 4
  %v4_aa10 = call i32 @function_bfc8(i32 %v0_aa0c, i32 %v0_a9fc, i32 10240, i32 40)
  %v5_aa10 = trunc i32 %v4_aa10 to i16
  store i32 %v4_aa10, i32* %r0.global-to-local, align 4
  %v3_aa14 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_aa14, i32* %r3.global-to-local, align 4
  %v3_aa18 = mul i32 %v3_aa14, 32
  store i32 %v3_aa18, i32* %lr.global-to-local, align 4
  %v3_aa1c = load i32, i32* @r6, align 4
  %v4_aa1c = add i32 %v3_aa1c, 16
  %v5_aa1c = inttoptr i32 %v4_aa1c to i16*
  store i16 %v5_aa10, i16* %v5_aa1c, align 2
  %v0_aa20 = load i32, i32* %lr.global-to-local, align 4
  %v1_aa20 = load i32, i32* %r3.global-to-local, align 4
  %tmp70 = mul i32 %v1_aa20, -8
  %v5_aa20 = add i32 %v0_aa20, %tmp70
  store i32 %v5_aa20, i32* %lr.global-to-local, align 4
  %v0_aa24 = load i32, i32* @r6, align 4
  %v1_aa24 = add i32 %v0_aa24, 2
  %v2_aa24 = inttoptr i32 %v1_aa24 to i16*
  %v3_aa24 = load i16, i16* %v2_aa24, align 2
  %v1_aa28 = load i32, i32* @r7, align 4
  %v2_aa28 = add i32 %v1_aa28, %v5_aa20
  store i32 %v2_aa28, i32* @lr, align 4
  %v3_aa2c = add i32 %v2_aa28, 2
  %v4_aa2c = inttoptr i32 %v3_aa2c to i16*
  store i16 %v3_aa24, i16* %v4_aa2c, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_aa38 = load i32, i32* @r5, align 4
  store i32 %v0_aa38, i32* %r1.global-to-local, align 4
  %v0_aa3c = load i32, i32* @r8, align 4
  store i32 %v0_aa3c, i32* %r0.global-to-local, align 4
  store i32 60, i32* %r2.global-to-local, align 4
  %v0_aa44 = load i32, i32* @lr, align 4
  %v6_aa4c = call i32 @function_11cac(i32 %v0_aa3c, i32 %v0_aa38, i32 60, i32 16384, i32 %v0_aa44, i32 16)
  %v3_aa50 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_aa50, i32* %r3.global-to-local, align 4
  %v1_aa54 = add i32 %v3_aa50, 1
  store i32 %v1_aa54, i32* %r0.global-to-local, align 4
  %v1_aa58 = load i32, i32* @sb, align 4
  %v9_aa58 = icmp eq i32 %v1_aa54, %v1_aa58
  store i1 %v9_aa58, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_aa54, i32* %stack_var_-44, align 4
  %v6_aa60 = icmp slt i32 %v1_aa54, %v1_aa58
  br i1 %v6_aa60, label %dec_label_pc_aa64, label %dec_label_pc_ab6c

dec_label_pc_aa64:                                ; preds = %dec_label_pc_a9e0, %dec_label_pc_a980
  %v1_aa74 = phi i32 [ %v1_aa54, %dec_label_pc_a9e0 ], [ 0, %dec_label_pc_a980 ]
  %v5_aa68 = mul i32 %v1_aa74, 24
  %v1_aa6c = load i32, i32* @r7, align 4
  %v2_aa6c = add i32 %v1_aa6c, %v5_aa68
  store i32 %v2_aa6c, i32* %r3.global-to-local, align 4
  %v1_aa70 = add i32 %v2_aa6c, 20
  %v2_aa70 = inttoptr i32 %v1_aa70 to i8*
  %v3_aa70 = load i8, i8* %v2_aa70, align 1
  %v4_aa70 = zext i8 %v3_aa70 to i32
  store i32 %v4_aa70, i32* %r2.global-to-local, align 4
  %v0_aa74 = load i32, i32* @sl, align 4
  %v4_aa74 = mul i32 %v1_aa74, 4
  %v5_aa74 = add i32 %v0_aa74, %v4_aa74
  %v6_aa74 = inttoptr i32 %v5_aa74 to i32*
  %v7_aa74 = load i32, i32* %v6_aa74, align 4
  store i32 %v7_aa74, i32* @r5, align 4
  %v2_aa78 = icmp ugt i8 %v3_aa70, 30
  %v7_aa78 = icmp eq i8 %v3_aa70, 31
  store i1 %v7_aa78, i1* %cpsr_z.global-to-local, align 1
  %v1_aa7c = add i32 %v7_aa74, 20
  store i32 %v1_aa7c, i32* @r6, align 4
  %v2_aa80 = xor i1 %v7_aa78, true
  %v3_aa80 = and i1 %v2_aa78, %v2_aa80
  br i1 %v3_aa80, label %dec_label_pc_a988, label %dec_label_pc_aa84

dec_label_pc_aa84:                                ; preds = %dec_label_pc_aa64
  %v1_aa84 = add i32 %v2_aa6c, 16
  %v2_aa84 = inttoptr i32 %v1_aa84 to i32*
  %v3_aa84 = load i32, i32* %v2_aa84, align 4
  store i32 %v3_aa84, i32* %r4.global-to-local, align 4
  %v0_aa88 = call i32 @function_d398()
  store i32 %v0_aa88, i32* %r0.global-to-local, align 4
  %v3_aa8c = load i32, i32* %stack_var_-44, align 4
  %v5_aa94 = mul i32 %v3_aa8c, 24
  %v0_aa98 = load i32, i32* %r4.global-to-local, align 4
  %v1_aa98 = and i32 %v0_aa98, 16711680
  %v3_aa9c = udiv i32 %v0_aa98, 16777216
  %v4_aaa0 = udiv i32 %v1_aa98, 256
  %v5_aaa0 = or i32 %v4_aaa0, %v3_aa9c
  store i32 %v5_aaa0, i32* %r2.global-to-local, align 4
  %v1_aaa4 = load i32, i32* @r7, align 4
  %v2_aaa4 = add i32 %v1_aaa4, %v5_aa94
  store i32 %v2_aaa4, i32* %r1.global-to-local, align 4
  %v1_aaa8 = and i32 %v0_aa98, 65280
  store i32 %v1_aaa8, i32* %r3.global-to-local, align 4
  %v1_aaac = add i32 %v2_aaa4, 20
  %v2_aaac = inttoptr i32 %v1_aaac to i8*
  %v3_aaac = load i8, i8* %v2_aaac, align 1
  %v4_aaac = zext i8 %v3_aaac to i32
  %v5_aab4 = call i32 @llvm.bswap.i32(i32 %v0_aa98)
  %v7_aab8 = lshr i32 %v0_aa88, %v4_aaac
  %v8_aab8 = add i32 %v7_aab8, %v5_aab4
  store i32 %v8_aab8, i32* %r2.global-to-local, align 4
  %v1_aabc = and i32 %v8_aab8, 16711680
  store i32 %v1_aabc, i32* %r0.global-to-local, align 4
  %v1_aac8 = and i32 %v8_aab8, 65280
  store i32 %v1_aac8, i32* %r1.global-to-local, align 4
  %v5_aad0 = call i32 @llvm.bswap.i32(i32 %v8_aab8)
  %v1_aad4 = load i32, i32* @r5, align 4
  %v2_aad4 = add i32 %v1_aad4, 16
  %v3_aad4 = inttoptr i32 %v2_aad4 to i32*
  store i32 %v5_aad0, i32* %v3_aad4, align 4
  store i32 %v6_a684, i32* %r3.global-to-local, align 4
  store i1 %v7_a98c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a98c, label %dec_label_pc_aae4, label %dec_label_pc_a994

dec_label_pc_aae4:                                ; preds = %dec_label_pc_aa84, %dec_label_pc_a988
  %v0_aae4 = call i32 @function_d398()
  store i32 ptrtoint (i32* @global_var_10000.37 to i32), i32* %r4.global-to-local, align 4
  %v1_aaec = load i32, i32* @r5, align 4
  %v2_aaec = add i32 %v1_aaec, 12
  %v3_aaec = inttoptr i32 %v2_aaec to i32*
  store i32 %v0_aae4, i32* %v3_aaec, align 4
  store i32 %v3_a700, i32* %r0.global-to-local, align 4
  %v0_aaf4 = load i32, i32* %r4.global-to-local, align 4
  %v1_aaf4 = add i32 %v0_aaf4, -1
  store i32 %v1_aaf4, i32* @r4, align 4
  %v9_aaf8 = icmp eq i32 %v3_a700, %v1_aaf4
  store i1 %v9_aaf8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_aaf8, label %dec_label_pc_ab00, label %dec_label_pc_a9a8

dec_label_pc_ab00:                                ; preds = %dec_label_pc_aae4, %dec_label_pc_a994
  %v0_ab00 = call i32 @function_d398()
  %v1_ab00 = trunc i32 %v0_ab00 to i16
  store i32 %v0_ab00, i32* %r0.global-to-local, align 4
  store i32 %v3_a704, i32* %r1.global-to-local, align 4
  %v1_ab08 = load i32, i32* @r4, align 4
  %v9_ab08 = icmp eq i32 %v3_a704, %v1_ab08
  store i1 %v9_ab08, i1* %cpsr_z.global-to-local, align 1
  %v3_ab0c = load i32, i32* @r5, align 4
  %v4_ab0c = add i32 %v3_ab0c, 4
  %v5_ab0c = inttoptr i32 %v4_ab0c to i16*
  store i16 %v1_ab00, i16* %v5_ab0c, align 2
  br i1 %v9_ab08, label %dec_label_pc_ab14, label %dec_label_pc_ab00.dec_label_pc_a9b4_crit_edge

dec_label_pc_ab00.dec_label_pc_a9b4_crit_edge:    ; preds = %dec_label_pc_ab00
  %v1_a9b8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_a9b4

dec_label_pc_ab14:                                ; preds = %dec_label_pc_ab00, %dec_label_pc_a9a8
  %v0_ab14 = call i32 @function_d398()
  %v1_ab14 = trunc i32 %v0_ab14 to i16
  store i32 %v0_ab14, i32* %r0.global-to-local, align 4
  store i32 %v3_a708, i32* %r2.global-to-local, align 4
  %v1_ab1c = load i32, i32* @r4, align 4
  %v9_ab1c = icmp eq i32 %v3_a708, %v1_ab1c
  store i1 %v9_ab1c, i1* %cpsr_z.global-to-local, align 1
  %v3_ab20 = load i32, i32* @r5, align 4
  %v4_ab20 = add i32 %v3_ab20, 20
  %v5_ab20 = inttoptr i32 %v4_ab20 to i16*
  store i16 %v1_ab14, i16* %v5_ab20, align 2
  br i1 %v9_ab1c, label %dec_label_pc_ab28, label %dec_label_pc_ab14.dec_label_pc_a9c0_crit_edge

dec_label_pc_ab14.dec_label_pc_a9c0_crit_edge:    ; preds = %dec_label_pc_ab14
  %v1_a9c4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_a9c0

dec_label_pc_ab28:                                ; preds = %dec_label_pc_ab14, %dec_label_pc_a9b4
  %v0_ab28 = call i32 @function_d398()
  %v1_ab28 = trunc i32 %v0_ab28 to i16
  store i32 %v0_ab28, i32* %r0.global-to-local, align 4
  store i32 %v1_a5c0, i32* %r3.global-to-local, align 4
  %v1_ab30 = load i32, i32* @r4, align 4
  %v9_ab30 = icmp eq i32 %v1_a5c0, %v1_ab30
  store i1 %v9_ab30, i1* %cpsr_z.global-to-local, align 1
  %v3_ab34 = load i32, i32* @r6, align 4
  %v4_ab34 = add i32 %v3_ab34, 2
  %v5_ab34 = inttoptr i32 %v4_ab34 to i16*
  store i16 %v1_ab28, i16* %v5_ab34, align 2
  br i1 %v9_ab30, label %dec_label_pc_ab3c, label %dec_label_pc_ab28.dec_label_pc_a9cc_crit_edge

dec_label_pc_ab28.dec_label_pc_a9cc_crit_edge:    ; preds = %dec_label_pc_ab28
  %v1_a9d0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_a9cc

dec_label_pc_ab3c:                                ; preds = %dec_label_pc_ab28, %dec_label_pc_a9c0
  %v0_ab3c = call i32 @function_d398()
  %v1_ab40 = load i32, i32* @r6, align 4
  %v2_ab40 = add i32 %v1_ab40, 4
  %v3_ab40 = inttoptr i32 %v2_ab40 to i32*
  store i32 %v0_ab3c, i32* %v3_ab40, align 4
  store i32 %v1_a5d8, i32* %r0.global-to-local, align 4
  %v1_ab48 = load i32, i32* @r4, align 4
  %v9_ab48 = icmp eq i32 %v1_a5d8, %v1_ab48
  store i1 %v9_ab48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ab48, label %dec_label_pc_ab50, label %dec_label_pc_a9d8

dec_label_pc_ab50:                                ; preds = %dec_label_pc_ab3c, %dec_label_pc_a9cc
  %v0_ab50 = call i32 @function_d398()
  store i32 %v0_ab50, i32* %r0.global-to-local, align 4
  %v0_ab54 = load i32, i32* @fp, align 4
  %v2_ab54 = icmp eq i32 %v0_ab54, 0
  store i1 %v2_ab54, i1* %cpsr_z.global-to-local, align 1
  %v1_ab58 = load i32, i32* @r6, align 4
  %v2_ab58 = add i32 %v1_ab58, 8
  %v3_ab58 = inttoptr i32 %v2_ab58 to i32*
  store i32 %v0_ab50, i32* %v3_ab58, align 4
  br i1 %v2_ab54, label %dec_label_pc_a9e0, label %dec_label_pc_ab60

dec_label_pc_ab60:                                ; preds = %dec_label_pc_a9d8, %dec_label_pc_ab50
  %v0_ab60 = call i32 @function_d398()
  %v1_ab60 = trunc i32 %v0_ab60 to i16
  store i32 %v0_ab60, i32* %r0.global-to-local, align 4
  %v3_ab64 = load i32, i32* @r6, align 4
  %v4_ab64 = add i32 %v3_ab64, 18
  %v5_ab64 = inttoptr i32 %v4_ab64 to i16*
  store i16 %v1_ab60, i16* %v5_ab64, align 2
  br label %dec_label_pc_a9e0

dec_label_pc_ab6c:                                ; preds = %dec_label_pc_a9e0, %dec_label_pc_a970
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_ab70 = call i32 @function_111c8(i32* null)
  store i32 %v2_ab70, i32* %r0.global-to-local, align 4
  store i32 %v2_a694, i32* %r3.global-to-local, align 4
  %v9_ab78 = icmp eq i32 %v2_a694, %v2_ab70
  store i1 %v9_ab78, i1* %cpsr_z.global-to-local, align 1
  %v6_ab7c = icmp slt i32 %v2_a694, %v2_ab70
  br i1 %v6_ab7c, label %dec_label_pc_ab80, label %dec_label_pc_ab6c.dec_label_pc_a970_crit_edge

dec_label_pc_ab6c.dec_label_pc_a970_crit_edge:    ; preds = %dec_label_pc_ab6c
  %v0_a974.pre = load i32, i32* @sb, align 4
  br label %dec_label_pc_a970

dec_label_pc_ab80:                                ; preds = %dec_label_pc_ab6c, %dec_label_pc_a4c4, %dec_label_pc_ab8c
  %v1_ab88 = phi i32 [ %v3_a6a8, %dec_label_pc_a4c4 ], [ %v1_ab90, %dec_label_pc_ab8c ], [ %v2_ab70, %dec_label_pc_ab6c ]
  store i32 %v3_a4c4, i32* %r4.global-to-local, align 4
  store i32 %v24_a4c4, i32* %fp.global-to-local, align 4
  store i32 %v27_a4c4, i32* %lr.global-to-local, align 4
  ret i32 %v1_ab88

dec_label_pc_ab8c:                                ; preds = %dec_label_pc_a6b8
  %v0_ab8c = load i32, i32* @r8, align 4
  store i32 %v0_ab8c, i32* %r0.global-to-local, align 4
  %v1_ab90 = call i32 @function_11548(i32 %v0_ab8c)
  store i32 %v1_ab90, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ab80

; uselistorder directives
  uselistorder i32 %v1_ab90, { 1, 0 }
  uselistorder i32 %v0_ab60, { 1, 0 }
  uselistorder i32 %v0_ab28, { 1, 0 }
  uselistorder i32 %v0_ab14, { 1, 0 }
  uselistorder i32 %v0_ab00, { 1, 0 }
  uselistorder i32 %v1_aaf4, { 1, 2, 0 }
  uselistorder i32 %v0_aa98, { 1, 2, 0, 3 }
  uselistorder i32 %v1_aa54, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v5_aa20, { 1, 0 }
  uselistorder i32 %v4_aa10, { 1, 0 }
  uselistorder i1 %v7_a98c, { 2, 1, 0 }
  uselistorder i32 %v2_a960, { 1, 0, 2, 3 }
  uselistorder i32 %v0_a7c8, { 1, 2, 0 }
  uselistorder i32 %v1_a78c, { 2, 1, 0 }
  uselistorder i32 %v1_a788, { 2, 0, 1 }
  uselistorder i32 %v1_a784, { 2, 0, 1 }
  uselistorder i32 %v1_a780, { 2, 0, 1 }
  uselistorder i32 %v1_a77c, { 2, 0, 1 }
  uselistorder i32 %v3_a704, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %v3_a700, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_a6f4, { 1, 0, 2 }
  uselistorder i1 %v7_a6d8, { 1, 0 }
  uselistorder i1 %v7_a6ac, { 1, 0 }
  uselistorder i32 %v3_a6a8, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_a694, { 2, 1, 0 }
  uselistorder i32 %v6_a684, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_a5d8, { 3, 2, 1, 0 }
  uselistorder i32 %v1_a5c0, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_a544, { 1, 0 }
  uselistorder i32 %v1_a52c, { 2, 1, 0 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 12, 5, 6, 7, 8, 9, 10, 11, 16, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 9, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 6, 7, 5, 8, 10, 11, 9, 12, 14, 13, 15, 17, 16, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 33, 34, 35, 37, 39, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 16, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i32 247, { 1, 2, 0 }
  uselistorder i32 %arg2, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_ab80, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ab60, { 1, 0 }
  uselistorder label %dec_label_pc_a9e0, { 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_ab9c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_ab9c:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  store i32 %arg2, i32* @fp, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* @r4, align 4
  store i32 %arg5, i32* @r5, align 4
  store i32 %arg3, i32* %stack_var_-80, align 4
  %v2_abc0 = call i32 @function_12898(i32 %arg2, i32 4)
  %v0_abcc = load i32, i32* @fp, align 4
  store i32 %v0_abcc, i32* %r0.global-to-local, align 4
  %v2_abd0 = call i32 @function_12898(i32 %v0_abcc, i32 4)
  store i32 add (i32 ptrtoint (i32* @global_var_10000.37 to i32), i32 -1), i32* @r6, align 4
  %v0_abdc = load i32, i32* @r5, align 4
  store i32 %v0_abdc, i32* @r1, align 4
  store i32 7, i32* @r2, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.37 to i32), i32 -1), i32* @r3, align 4
  store i32 %v2_abd0, i32* @sb, align 4
  %v0_abec = load i32, i32* @r4, align 4
  store i32 %v0_abec, i32* %r0.global-to-local, align 4
  %v1_abf0 = call i32 @function_8258(i32 %v0_abec)
  %v0_abf4 = load i32, i32* @r5, align 4
  store i32 %v0_abf4, i32* @r1, align 4
  store i32 6, i32* @r2, align 4
  %v0_ac00 = load i32, i32* @r6, align 4
  store i32 %v0_ac00, i32* @r3, align 4
  %v0_ac04 = load i32, i32* @r4, align 4
  store i32 %v0_ac04, i32* %r0.global-to-local, align 4
  %v3_ac08 = urem i32 %v1_abf0, 65536
  store i32 %v3_ac08, i32* @r8, align 4
  %v1_ac0c = call i32 @function_8258(i32 %v0_ac04)
  %v0_ac10 = load i32, i32* @r5, align 4
  store i32 %v0_ac10, i32* @r1, align 4
  %v3_ac14 = mul i32 %v1_ac0c, 65536
  store i32 %v3_ac14, i32* @sl, align 4
  store i32 0, i32* @r2, align 4
  store i32 512, i32* @r3, align 4
  %v0_ac20 = load i32, i32* @r4, align 4
  store i32 %v0_ac20, i32* %r0.global-to-local, align 4
  %v1_ac24 = call i32 @function_8258(i32 %v0_ac20)
  store i32 1, i32* @r2, align 4
  store i32 1, i32* @r3, align 4
  %v3_ac34 = urem i32 %v1_ac24, 65536
  store i32 %v3_ac34, i32* @ip, align 4
  %v0_ac38 = load i32, i32* @r5, align 4
  store i32 %v0_ac38, i32* @r1, align 4
  %v0_ac3c = load i32, i32* @r4, align 4
  store i32 %v0_ac3c, i32* %r0.global-to-local, align 4
  %v1_ac44 = call i32 @function_8258(i32 %v0_ac3c)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_ac50 = urem i32 %v1_ac44, 256
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-56, align 4
  %v2_ac6c = call i32 @function_111c8(i32* null)
  store i32 %v2_ac6c, i32* %r0.global-to-local, align 4
  %v0_ac70 = load i32, i32* @sl, align 4
  %v3_ac70 = udiv i32 %v0_ac70, 65536
  %v1_ac74 = load i32, i32* @r6, align 4
  %v9_ac74 = icmp eq i32 %v3_ac70, %v1_ac74
  br i1 %v9_ac74, label %dec_label_pc_ae48, label %bb

bb:                                               ; preds = %dec_label_pc_ab9c
  %v4_ac7c = udiv i32 %v0_ac70, 16777216
  store i32 %v4_ac7c, i32* %r3.global-to-local, align 4
  %v1_ac80 = load i32, i32* @r7, align 4
  %v2_ac80 = add i32 %v1_ac80, %v2_ac6c
  store i32 %v2_ac80, i32* %r0.global-to-local, align 4
  %v2_ac78 = mul nuw nsw i32 %v3_ac70, 256
  %v6_ac84 = or i32 %v2_ac78, %v4_ac7c
  %extract.t58 = trunc i32 %v6_ac84 to i16
  br label %dec_label_pc_ac94

dec_label_pc_ac94:                                ; preds = %bb, %dec_label_pc_ae48
  %v6_ac84.sink.off0 = phi i16 [ %extract.t58, %bb ], [ %extract.t59, %dec_label_pc_ae48 ]
  %v0_ac8810 = phi i32 [ %v2_ac80, %bb ], [ %v2_ac8013, %dec_label_pc_ae48 ]
  %v0_ac94 = load i32, i32* @fp, align 4
  %v2_ac94 = icmp eq i32 %v0_ac94, 0
  br i1 %v2_ac94, label %dec_label_pc_adcc, label %dec_label_pc_ac9c

dec_label_pc_ac9c:                                ; preds = %dec_label_pc_ac94
  store i32 0, i32* @sl, align 4
  store i32 0, i32* @r6, align 4
  store i32 0, i32* @r7, align 4
  %v2_acc8 = ptrtoint i32* %stack_var_-56 to i32
  %v4_ace8 = sext i16 %v6_ac84.sink.off0 to i32
  br label %dec_label_pc_ad1c

dec_label_pc_acac:                                ; preds = %.thread26, %dec_label_pc_ad58
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_acb8 = call i32 @function_11d30(i32 2, i32 2, i32 17)
  store i32 %v3_acb8, i32* %r0.global-to-local, align 4
  %v7_acbc = icmp eq i32 %v3_acb8, -1
  %v0_acc0 = load i32, i32* @sl, align 4
  %v1_acc0 = add i32 %v0_acc0, 1
  store i32 %v1_acc0, i32* @sl, align 4
  %v0_acc4 = load i32, i32* @r7, align 4
  %v1_acc4 = add i32 %v0_acc4, 24
  store i32 %v1_acc4, i32* @r7, align 4
  %v1_acd0 = load i32, i32* @r6, align 4
  %v2_acd0 = load i32, i32* @sb, align 4
  %v3_acd0 = add i32 %v2_acd0, %v1_acd0
  %v4_acd0 = inttoptr i32 %v3_acd0 to i32*
  store i32 %v3_acb8, i32* %v4_acd0, align 4
  br i1 %v7_acbc, label %dec_label_pc_adf0.loopexit14, label %dec_label_pc_acd8

dec_label_pc_acd8:                                ; preds = %dec_label_pc_acac
  store i32 2, i32* %stack_var_-56, align 4
  store i32 %v4_ace8, i32* %r3.global-to-local, align 4
  %v0_acf0 = load i32, i32* %r0.global-to-local, align 4
  %v3_acf0 = call i32 @function_11ae0(i32 %v0_acf0, i32 %v2_acc8, i32 16)
  store i32 %v3_acf0, i32* %r0.global-to-local, align 4
  %v0_acf4 = load i32, i32* @r5, align 4
  %v1_acf4 = add i32 %v0_acf4, 20
  %v2_acf4 = inttoptr i32 %v1_acf4 to i8*
  %v3_acf4 = load i8, i8* %v2_acf4, align 1
  %v4_acf4 = zext i8 %v3_acf4 to i32
  store i32 %v4_acf4, i32* %r3.global-to-local, align 4
  %tmp = icmp ult i8 %v3_acf4, 32
  br i1 %tmp, label %dec_label_pc_ad6c, label %dec_label_pc_ad00

dec_label_pc_ad00:                                ; preds = %dec_label_pc_acd8
  %v0_ad00 = load i32, i32* @r6, align 4
  %v1_ad00 = load i32, i32* @sb, align 4
  %v2_ad00 = add i32 %v1_ad00, %v0_ad00
  %v3_ad00 = inttoptr i32 %v2_ad00 to i32*
  %v4_ad00 = load i32, i32* %v3_ad00, align 4
  store i32 %v4_ad00, i32* %r0.global-to-local, align 4
  %v3_ad0c = call i32 @function_11b18(i32 %v4_ad00, i32 %v0_acf4, i32 16)
  store i32 %v3_ad0c, i32* %r0.global-to-local, align 4
  %v0_ad10 = load i32, i32* @sl, align 4
  %v1_ad10 = load i32, i32* @fp, align 4
  %v9_ad10 = icmp eq i32 %v0_ad10, %v1_ad10
  %v0_ad14 = load i32, i32* @r6, align 4
  %v1_ad14 = add i32 %v0_ad14, 4
  store i32 %v1_ad14, i32* @r6, align 4
  br i1 %v9_ad10, label %dec_label_pc_adcc, label %dec_label_pc_ad1c

dec_label_pc_ad1c:                                ; preds = %dec_label_pc_ad6c, %dec_label_pc_ad00, %dec_label_pc_ac9c
  store i32 add (i32 ptrtoint (i32* @global_var_10000.37 to i32), i32 -1), i32* @r4, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.37 to i32), i32 -1), i32* %r0.global-to-local, align 4
  %v2_ad2c = call i32 @function_12898(i32 add (i32 ptrtoint (i32* @global_var_10000.37 to i32), i32 -1), i32 1)
  store i32 %v2_ad2c, i32* %r0.global-to-local, align 4
  %v0_ad30 = load i32, i32* @r8, align 4
  %v3_ad34 = udiv i32 %v0_ad30, 256
  %v1_ad30 = mul i32 %v0_ad30, 256
  %v4_ad38 = and i32 %v1_ad30, 65280
  %v5_ad38 = or i32 %v4_ad38, %v3_ad34
  store i32 %v5_ad38, i32* %r3.global-to-local, align 4
  %v2_ad3c = load i32, i32* %stack_var_-80, align 4
  %v1_ad40 = load i32, i32* @r7, align 4
  %v2_ad40 = add i32 %v1_ad40, %v2_ad3c
  store i32 %v2_ad40, i32* @r5, align 4
  %v1_ad48 = load i32, i32* @r4, align 4
  %v9_ad48 = icmp eq i32 %v0_ad30, %v1_ad48
  %v1_ad4c = load i32, i32* @r6, align 4
  %v3_ad4c = add i32 %v1_ad4c, %v2_abc0
  %v4_ad4c = inttoptr i32 %v3_ad4c to i32*
  store i32 %v2_ad2c, i32* %v4_ad4c, align 4
  br i1 %v9_ad48, label %dec_label_pc_ad58, label %.thread26

.thread26:                                        ; preds = %dec_label_pc_ad1c
  %v1_ad5027 = load i32, i32* %r3.global-to-local, align 4
  %v2_ad5028 = trunc i32 %v1_ad5027 to i16
  %v3_ad5029 = load i32, i32* @r5, align 4
  %v4_ad5030 = add i32 %v3_ad5029, 2
  %v5_ad5031 = inttoptr i32 %v4_ad5030 to i16*
  store i16 %v2_ad5028, i16* %v5_ad5031, align 2
  br label %dec_label_pc_acac

dec_label_pc_ad58:                                ; preds = %dec_label_pc_ad1c
  %v0_ad58 = call i32 @function_d398()
  %v1_ad58 = trunc i32 %v0_ad58 to i16
  store i32 %v0_ad58, i32* %r0.global-to-local, align 4
  %v2_ad5c = load i32, i32* %stack_var_-80, align 4
  store i32 %v2_ad5c, i32* %r3.global-to-local, align 4
  %v1_ad60 = load i32, i32* @r7, align 4
  %v2_ad60 = add i32 %v1_ad60, %v2_ad5c
  store i32 %v2_ad60, i32* @r5, align 4
  %v4_ad64 = add i32 %v2_ad60, 2
  %v5_ad64 = inttoptr i32 %v4_ad64 to i16*
  store i16 %v1_ad58, i16* %v5_ad64, align 2
  br label %dec_label_pc_acac

dec_label_pc_ad6c:                                ; preds = %dec_label_pc_acd8
  %v1_ad6c = add i32 %v0_acf4, 16
  %v2_ad6c = inttoptr i32 %v1_ad6c to i32*
  %v3_ad6c = load i32, i32* %v2_ad6c, align 4
  store i32 %v3_ad6c, i32* @r4, align 4
  %v0_ad70 = call i32 @function_d398()
  store i32 %v0_ad70, i32* %r0.global-to-local, align 4
  %v0_ad74 = load i32, i32* @r4, align 4
  %v1_ad80 = and i32 %v0_ad74, 65280
  store i32 %v1_ad80, i32* %r3.global-to-local, align 4
  %v0_ad84 = load i32, i32* @r5, align 4
  %v1_ad84 = add i32 %v0_ad84, 20
  %v2_ad84 = inttoptr i32 %v1_ad84 to i8*
  %v3_ad84 = load i8, i8* %v2_ad84, align 1
  %v4_ad84 = zext i8 %v3_ad84 to i32
  %v5_ad8c = call i32 @llvm.bswap.i32(i32 %v0_ad74)
  %v7_ad90 = lshr i32 %v0_ad70, %v4_ad84
  %v8_ad90 = add i32 %v7_ad90, %v5_ad8c
  %v1_ad94 = and i32 %v8_ad90, 16711680
  store i32 %v1_ad94, i32* %r0.global-to-local, align 4
  %v5_ada8 = call i32 @llvm.bswap.i32(i32 %v8_ad90)
  store i32 %v5_ada8, i32* %r3.global-to-local, align 4
  %v2_adac = add i32 %v0_ad84, 4
  %v3_adac = inttoptr i32 %v2_adac to i32*
  store i32 %v5_ada8, i32* %v3_adac, align 4
  %v0_adb0 = load i32, i32* @r5, align 4
  %v0_adb4 = load i32, i32* @r6, align 4
  %v1_adb4 = load i32, i32* @sb, align 4
  %v2_adb4 = add i32 %v1_adb4, %v0_adb4
  %v3_adb4 = inttoptr i32 %v2_adb4 to i32*
  %v4_adb4 = load i32, i32* %v3_adb4, align 4
  store i32 %v4_adb4, i32* %r0.global-to-local, align 4
  %v3_adbc = call i32 @function_11b18(i32 %v4_adb4, i32 %v0_adb0, i32 16)
  store i32 %v3_adbc, i32* %r0.global-to-local, align 4
  %v0_adc0 = load i32, i32* @sl, align 4
  %v1_adc0 = load i32, i32* @fp, align 4
  %v9_adc0 = icmp eq i32 %v0_adc0, %v1_adc0
  %v0_adc4 = load i32, i32* @r6, align 4
  %v1_adc4 = add i32 %v0_adc4, 4
  store i32 %v1_adc4, i32* @r6, align 4
  br i1 %v9_adc0, label %dec_label_pc_adcc, label %dec_label_pc_ad1c

dec_label_pc_adcc:                                ; preds = %dec_label_pc_ad6c, %dec_label_pc_ad00, %dec_label_pc_ac94
  %v1_add021 = phi i32 [ 0, %dec_label_pc_ac94 ], [ %v0_adc0, %dec_label_pc_ad6c ], [ %v0_ad10, %dec_label_pc_ad00 ]
  store i32 0, i32* @r5, align 4
  %v2_ae04 = icmp eq i32 %v1_ac50, 0
  br label %dec_label_pc_add0

dec_label_pc_add0:                                ; preds = %dec_label_pc_add0.backedge, %dec_label_pc_adcc
  %v1_add0 = phi i32 [ %v1_add0.pre, %dec_label_pc_add0.backedge ], [ %v1_add021, %dec_label_pc_adcc ]
  %v1_ae08 = phi i32 [ %v0_add019, %dec_label_pc_add0.backedge ], [ 0, %dec_label_pc_adcc ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v5_add8 = icmp slt i32 %v1_ae08, %v1_add0
  br i1 %v5_add8, label %dec_label_pc_adfc, label %dec_label_pc_addc

dec_label_pc_addc:                                ; preds = %dec_label_pc_add0
  %v2_addc = call i32 @function_111c8(i32* null)
  store i32 %v2_addc, i32* %r0.global-to-local, align 4
  store i32 %v0_ac8810, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v6_adec = icmp slt i32 %v0_ac8810, %v2_addc
  br i1 %v6_adec, label %dec_label_pc_adf0, label %dec_label_pc_add0.backedge

dec_label_pc_adf0.loopexit14:                     ; preds = %dec_label_pc_acac
  %v1_adf8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_adf0

dec_label_pc_adf0:                                ; preds = %dec_label_pc_addc, %dec_label_pc_adf0.loopexit14
  %v1_adf8 = phi i32 [ %v1_adf8.pre, %dec_label_pc_adf0.loopexit14 ], [ %v2_addc, %dec_label_pc_addc ]
  ret i32 %v1_adf8

dec_label_pc_adfc:                                ; preds = %dec_label_pc_add0
  store i32 %v2_abc0, i32* @r3, align 4
  %v4_ae08 = mul i32 %v1_ae08, 4
  %v5_ae08 = add i32 %v4_ae08, %v2_abc0
  %v6_ae08 = inttoptr i32 %v5_ae08 to i32*
  %v7_ae08 = load i32, i32* %v6_ae08, align 4
  store i32 %v7_ae08, i32* @r4, align 4
  br i1 %v2_ae04, label %dec_label_pc_ae10, label %dec_label_pc_ae2c

dec_label_pc_ae10:                                ; preds = %dec_label_pc_adfc, %dec_label_pc_ae2c
  %v0_ae14 = phi i32 [ %v7_ae08, %dec_label_pc_adfc ], [ %v0_ae14.pre, %dec_label_pc_ae2c ]
  %v1_ae10 = phi i32 [ %v1_ae08, %dec_label_pc_adfc ], [ %v1_ae10.pre, %dec_label_pc_ae2c ]
  %v0_ae10 = load i32, i32* @sb, align 4
  %v4_ae10 = mul i32 %v1_ae10, 4
  %v5_ae10 = add i32 %v4_ae10, %v0_ae10
  %v6_ae10 = inttoptr i32 %v5_ae10 to i32*
  %v7_ae10 = load i32, i32* %v6_ae10, align 4
  store i32 %v7_ae10, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_ae20 = call i32 @function_11c74(i32 %v7_ae10, i32 %v0_ae14, i32 %v3_ac34, i32 16384)
  store i32 %v4_ae20, i32* %r0.global-to-local, align 4
  %v0_ae24 = load i32, i32* @r5, align 4
  %v1_ae24 = add i32 %v0_ae24, 1
  store i32 %v1_ae24, i32* @r5, align 4
  br label %dec_label_pc_add0.backedge

dec_label_pc_add0.backedge:                       ; preds = %dec_label_pc_ae10, %dec_label_pc_addc
  %v0_add019 = phi i32 [ %v1_ae24, %dec_label_pc_ae10 ], [ 0, %dec_label_pc_addc ]
  %v1_add0.pre = load i32, i32* @fp, align 4
  br label %dec_label_pc_add0

dec_label_pc_ae2c:                                ; preds = %dec_label_pc_adfc
  store i32 %v7_ae08, i32* %r0.global-to-local, align 4
  %v2_ae34 = call i32 @function_d45c(i32 %v7_ae08, i32 %v3_ac34)
  store i32 %v2_ae34, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_ae40 = load i32, i32* @r4, align 4
  %v4_ae40 = add i32 %v3_ae40, %v3_ac34
  %v5_ae40 = inttoptr i32 %v4_ae40 to i8*
  store i8 0, i8* %v5_ae40, align 1
  %v1_ae10.pre = load i32, i32* @r5, align 4
  %v0_ae14.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_ae10

dec_label_pc_ae48:                                ; preds = %dec_label_pc_ab9c
  %v1_ac8012 = load i32, i32* @r7, align 4
  %v2_ac8013 = add i32 %v1_ac8012, %v2_ac6c
  store i32 %v2_ac8013, i32* %r0.global-to-local, align 4
  %v0_ae48 = call i32 @function_d398()
  %v3_ae50 = urem i32 %v0_ae48, 65536
  store i32 %v3_ae50, i32* %r0.global-to-local, align 4
  %extract.t59 = trunc i32 %v0_ae48 to i16
  br label %dec_label_pc_ac94

; uselistorder directives
  uselistorder i32 %v0_ae48, { 1, 0 }
  uselistorder i32 %v2_ac8013, { 1, 0 }
  uselistorder i32 %v7_ae08, { 2, 1, 0, 3 }
  uselistorder i32 %v5_ada8, { 1, 0 }
  uselistorder i32 %v0_ad58, { 1, 0 }
  uselistorder i32 %v0_ad30, { 2, 0, 1 }
  uselistorder i32 %v3_acb8, { 1, 0, 2 }
  uselistorder i32 %v0_ac8810, { 1, 0 }
  uselistorder i32 %v4_ac7c, { 1, 0 }
  uselistorder i32 %v3_ac34, { 3, 2, 1, 0 }
  uselistorder i32 %v2_abc0, { 0, 2, 1 }
  uselistorder i32* %stack_var_-56, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 9, 10, 7, 8, 11, 12, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 5, 4, 31, 6, 18, 8, 7, 11, 9, 10, 12, 13, 22, 20, 15, 14, 1, 17, 19, 16, 21, 24, 23, 25, 26, 27, 28, 29, 30, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ae10, { 1, 0 }
  uselistorder label %dec_label_pc_adf0, { 1, 0 }
  uselistorder label %dec_label_pc_acac, { 1, 0 }
  uselistorder label %dec_label_pc_ac94, { 1, 0 }
}

define i32 @function_ae5c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_ae5c:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v27_ae5c = load i32, i32* @lr, align 4
  store i32 0, i32* @r8, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_ae88 = call i32 @function_12898(i32 %arg2, i32 4)
  %v0_ae8c = load i32, i32* @r4, align 4
  store i32 %v0_ae8c, i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  %v0_ae98 = load i32, i32* @r8, align 4
  store i32 %v0_ae98, i32* @r3, align 4
  %v0_ae9c = load i32, i32* @r5, align 4
  store i32 %v0_ae9c, i32* %r0.global-to-local, align 4
  %v1_aea0 = call i32 @function_8258(i32 %v0_ae9c)
  %v1_aeac = urem i32 %v1_aea0, 256
  store i32 %v1_aeac, i32* %ip.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.37 to i32), i32 -1), i32* @r3, align 4
  store i32 3, i32* @r2, align 4
  %v0_aeb8 = load i32, i32* @r4, align 4
  store i32 %v0_aeb8, i32* @r1, align 4
  %v0_aebc = load i32, i32* @r5, align 4
  store i32 %v0_aebc, i32* %r0.global-to-local, align 4
  %v5_aec0 = trunc i32 %v1_aea0 to i8
  %v1_aec4 = call i32 @function_8258(i32 %v0_aebc)
  %v0_aec8 = load i32, i32* @r4, align 4
  store i32 %v0_aec8, i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  store i32 64, i32* @r3, align 4
  %v0_aed8 = load i32, i32* @r5, align 4
  store i32 %v0_aed8, i32* %r0.global-to-local, align 4
  %v1_aedc = call i32 @function_8258(i32 %v0_aed8)
  %v1_aee4 = urem i32 %v1_aedc, 256
  store i32 %v1_aee4, i32* %ip.global-to-local, align 4
  %v0_aee8 = load i32, i32* @r4, align 4
  store i32 %v0_aee8, i32* @r1, align 4
  store i32 5, i32* @r2, align 4
  %v0_aef0 = load i32, i32* @r8, align 4
  store i32 %v0_aef0, i32* @r3, align 4
  %v0_aef4 = load i32, i32* @r5, align 4
  store i32 %v0_aef4, i32* %r0.global-to-local, align 4
  %v5_aef8 = trunc i32 %v1_aedc to i8
  %v1_aefc = call i32 @function_8258(i32 %v0_aef4)
  %v1_af08 = urem i32 %v1_aefc, 256
  store i32 %v1_af08, i32* %ip.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.37 to i32), i32 -1), i32* @r3, align 4
  store i32 6, i32* @r2, align 4
  %v0_af14 = load i32, i32* @r4, align 4
  store i32 %v0_af14, i32* @r1, align 4
  %v0_af18 = load i32, i32* @r5, align 4
  store i32 %v0_af18, i32* %r0.global-to-local, align 4
  %v1_af20 = call i32 @function_8258(i32 %v0_af18)
  %v0_af2c = load i32, i32* @r4, align 4
  store i32 %v0_af2c, i32* @r1, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.37 to i32), i32 -1), i32* @r3, align 4
  store i32 7, i32* @r2, align 4
  %v0_af38 = load i32, i32* @r5, align 4
  store i32 %v0_af38, i32* %r0.global-to-local, align 4
  %v1_af3c = call i32 @function_8258(i32 %v0_af38)
  %v0_af40 = load i32, i32* @r4, align 4
  store i32 %v0_af40, i32* @r1, align 4
  %v0_af48 = load i32, i32* @r8, align 4
  store i32 %v0_af48, i32* @r2, align 4
  store i32 512, i32* @r3, align 4
  %v0_af50 = load i32, i32* @r5, align 4
  store i32 %v0_af50, i32* %r0.global-to-local, align 4
  %v1_af54 = call i32 @function_8258(i32 %v0_af50)
  store i32 1, i32* @r2, align 4
  store i32 1, i32* @r3, align 4
  %v0_af60 = load i32, i32* @r4, align 4
  store i32 %v0_af60, i32* @r1, align 4
  store i32 %v1_af54, i32* @sl, align 4
  %v0_af68 = load i32, i32* @r5, align 4
  store i32 %v0_af68, i32* %r0.global-to-local, align 4
  %v1_af6c = call i32 @function_8258(i32 %v0_af68)
  %v2_af78 = load i32, i32* @global_var_21644.39, align 4
  store i32 %v2_af78, i32* @r3, align 4
  %v1_af7c = urem i32 %v1_af6c, 256
  store i32 %v1_af7c, i32* %ip.global-to-local, align 4
  %v0_af80 = load i32, i32* @r4, align 4
  store i32 %v0_af80, i32* @r1, align 4
  store i32 19, i32* @r2, align 4
  %v0_af88 = load i32, i32* @r5, align 4
  store i32 %v0_af88, i32* %r0.global-to-local, align 4
  %v1_af90 = call i32 @function_8258(i32 %v0_af88)
  store i32 %v1_af90, i32* @sb, align 4
  %v0_af98 = load i32, i32* @r8, align 4
  store i32 %v0_af98, i32* %r0.global-to-local, align 4
  %v1_af9c = inttoptr i32 %v0_af98 to i32*
  %v2_af9c = call i32 @function_111c8(i32* %v1_af9c)
  %v1_afa0 = load i32, i32* @r6, align 4
  %v2_afa0 = add i32 %v1_afa0, %v2_af9c
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_afb4 = call i32 @function_11d30(i32 2, i32 3, i32 17)
  store i32 %v3_afb4, i32* %r0.global-to-local, align 4
  %v7_afb8 = icmp eq i32 %v3_afb4, -1
  store i32 %v3_afb4, i32* @fp, align 4
  br i1 %v7_afb8, label %dec_label_pc_b40c, label %dec_label_pc_afc4

dec_label_pc_afc4:                                ; preds = %dec_label_pc_ae5c
  store i32 1, i32* %stack_var_-44, align 4
  %v6_afcc = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_afcc, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_afd4 = load i32, i32* @r8, align 4
  store i32 %v0_afd4, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_afe0 = call i32 @function_11cec(i32 %v3_afb4, i32 %v0_afd4, i32 3, i32 %v6_afcc, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_afe0, i32* %r0.global-to-local, align 4
  %v7_afe4 = icmp eq i32 %v5_afe0, -1
  br i1 %v7_afe4, label %dec_label_pc_b418, label %dec_label_pc_afec

dec_label_pc_afec:                                ; preds = %dec_label_pc_afc4
  %v0_afec = load i32, i32* @sl, align 4
  store i32 1460, i32* %r3.global-to-local, align 4
  %v3_aff8 = urem i32 %v0_afec, 65536
  %v3_affc = icmp ugt i32 %v3_aff8, 1459
  br i1 %v3_affc, label %bb, label %bb40

bb:                                               ; preds = %dec_label_pc_afec
  br label %bb40

bb40:                                             ; preds = %dec_label_pc_afec, %bb
  %storemerge = phi i32 [ 1460, %bb ], [ %v3_aff8, %dec_label_pc_afec ]
  %v0_b008 = phi i32 [ 1460, %bb ], [ %v3_aff8, %dec_label_pc_afec ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  store i32 %v1_af20, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v3_b01c = mul i32 %v1_af3c, 65536
  store i32 %v3_b01c, i32* %r2.global-to-local, align 4
  %v3_b024 = urem i32 %v1_aec4, 65536
  %v3_b028 = urem i32 %v1_af20, 65536
  store i32 %v3_b028, i32* %ip.global-to-local, align 4
  %v3_b02c = urem i32 %v1_af3c, 65536
  store i32 %v3_b02c, i32* %r0.global-to-local, align 4
  %v2_b030 = icmp eq i32 %arg2, 0
  %v0_b038 = load i32, i32* @r8, align 4
  store i32 %v0_b038, i32* %stack_var_-44, align 4
  br i1 %v2_b030, label %.dec_label_pc_b164.preheader_crit_edge, label %dec_label_pc_b04c

.dec_label_pc_b164.preheader_crit_edge:           ; preds = %bb40
  %.pre = add nuw nsw i32 %v0_b008, 8
  %.pre10 = add nuw nsw i32 %v0_b008, 28
  br label %dec_label_pc_b164.preheader

dec_label_pc_b04c:                                ; preds = %bb40
  %v1_b054 = add nuw nsw i32 %v0_b008, 28
  %v1_b058 = add nuw nsw i32 %v0_b008, 8
  %tmp41 = mul nuw nsw i32 %v3_b028, 256
  %v3_b068 = and i32 %tmp41, 65280
  %v3_b070 = mul i32 %v1_b054, 65536
  store i32 %v3_b070, i32* @lr, align 4
  %tmp42 = udiv i32 %v1_af20, 256
  %v4_b078 = urem i32 %tmp42, 256
  %v5_b078 = or i32 %v3_b068, %v4_b078
  store i32 %v5_b078, i32* @sl, align 4
  store i32 %v3_b01c, i32* %r1.global-to-local, align 4
  %tmp43 = mul i32 %v1_af3c, 256
  %v3_b090 = and i32 %tmp43, 65280
  %v2_b094 = icmp eq i32 %v1_af08, 0
  %tmp44 = mul nuw nsw i32 %v1_b054, 256
  %v3_b098 = and i32 %tmp44, 65280
  store i32 %v3_b098, i32* %r3.global-to-local, align 4
  %tmp45 = mul i32 %v1_aec4, 256
  %v3_b09c = and i32 %tmp45, 65280
  store i32 %v3_b09c, i32* %r2.global-to-local, align 4
  %tmp46 = mul nuw nsw i32 %v1_b058, 256
  %v3_b0a0 = and i32 %tmp46, 65280
  store i32 %v3_b0a0, i32* %ip.global-to-local, align 4
  %tmp47 = udiv i32 %v1_af3c, 256
  %v4_b0a4 = urem i32 %tmp47, 256
  %v5_b0a4 = or i32 %v4_b0a4, %v3_b090
  store i32 %v5_b0a4, i32* %r0.global-to-local, align 4
  %tmp48 = udiv i32 %v1_aec4, 256
  %v4_b0a8 = urem i32 %tmp48, 256
  %v5_b0a8 = or i32 %v4_b0a8, %v3_b09c
  store i32 %v5_b0a8, i32* @r8, align 4
  %tmp49 = udiv i32 %v1_b054, 256
  %v4_b0ac = urem i32 %tmp49, 256
  %v5_b0ac = or i32 %v4_b0ac, %v3_b098
  store i32 %v5_b0ac, i32* @r6, align 4
  %tmp50 = udiv i32 %v1_b058, 256
  %v4_b0b0 = urem i32 %tmp50, 256
  %v5_b0b0 = or i32 %v4_b0b0, %v3_b0a0
  store i32 %v5_b0b0, i32* @r5, align 4
  %v5_b0b4 = trunc i32 %v5_b0a4 to i16
  store i32 0, i32* @r4, align 4
  br i1 %v2_b094, label %dec_label_pc_b0c0.preheader, label %dec_label_pc_b34c.preheader

dec_label_pc_b34c.preheader:                      ; preds = %dec_label_pc_b04c
  %v4_b39c = sext i8 %v5_aef8 to i32
  %v4_b3dc = sext i16 %v5_b0b4 to i32
  br label %dec_label_pc_b34c

dec_label_pc_b0c0.preheader:                      ; preds = %dec_label_pc_b04c
  %v4_b138 = sext i16 %v5_b0b4 to i32
  br label %dec_label_pc_b0c0

dec_label_pc_b0c0:                                ; preds = %dec_label_pc_b0c0.preheader, %dec_label_pc_b0c0
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_b0cc = call i32 @function_12898(i32 1510, i32 1)
  store i32 %v2_b0cc, i32* %r0.global-to-local, align 4
  store i32 %v2_ae88, i32* %r2.global-to-local, align 4
  %v2_b0d8 = load i32, i32* @r4, align 4
  %v5_b0d8 = mul i32 %v2_b0d8, 4
  %v6_b0d8 = add i32 %v5_b0d8, %v2_ae88
  %v7_b0d8 = inttoptr i32 %v6_b0d8 to i32*
  store i32 %v2_b0cc, i32* %v7_b0d8, align 4
  %v3_b0dc = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b0dc, i32* %r1.global-to-local, align 4
  %v0_b0e0 = load i32, i32* %r2.global-to-local, align 4
  %v4_b0e0 = mul i32 %v3_b0dc, 4
  %v5_b0e0 = add i32 %v0_b0e0, %v4_b0e0
  %v6_b0e0 = inttoptr i32 %v5_b0e0 to i32*
  %v7_b0e0 = load i32, i32* %v6_b0e0, align 4
  store i32 %v7_b0e0, i32* %r3.global-to-local, align 4
  %v1_b0e4 = inttoptr i32 %v7_b0e0 to i8*
  %v2_b0e4 = load i8, i8* %v1_b0e4, align 1
  %tmp = urem i8 %v2_b0e4, 16
  %v1_b0e8 = zext i8 %tmp to i32
  %v1_b0ec = or i32 %v1_b0e8, 64
  store i32 %v1_b0ec, i32* %r2.global-to-local, align 4
  %v1_b0f0 = trunc i32 %v1_b0ec to i8
  store i8 %v1_b0f0, i8* %v1_b0e4, align 1
  %v0_b0f4 = load i32, i32* %r3.global-to-local, align 4
  %v1_b0f4 = inttoptr i32 %v0_b0f4 to i8*
  %v2_b0f4 = load i8, i8* %v1_b0f4, align 1
  %v1_b0f8 = and i8 %v2_b0f4, -16
  %v1_b0fc = or i8 %v1_b0f8, 5
  store i32 17, i32* %ip.global-to-local, align 4
  store i8 %v1_b0fc, i8* %v1_b0f4, align 1
  %v0_b108 = load i32, i32* %ip.global-to-local, align 4
  %v1_b108 = trunc i32 %v0_b108 to i8
  %v2_b108 = load i32, i32* %r3.global-to-local, align 4
  %v3_b108 = add i32 %v2_b108, 9
  %v4_b108 = inttoptr i32 %v3_b108 to i8*
  store i8 %v1_b108, i8* %v4_b108, align 1
  %v2_b110 = load i32, i32* %r3.global-to-local, align 4
  %v3_b110 = add i32 %v2_b110, 1
  %v4_b110 = inttoptr i32 %v3_b110 to i8*
  store i8 %v5_aec0, i8* %v4_b110, align 1
  %v0_b118 = load i32, i32* %r1.global-to-local, align 4
  %v3_b118 = mul i32 %v0_b118, 32
  store i32 %v3_b118, i32* %r0.global-to-local, align 4
  %v2_b11c = load i32, i32* %r3.global-to-local, align 4
  %v3_b11c = add i32 %v2_b11c, 8
  %v4_b11c = inttoptr i32 %v3_b11c to i8*
  store i8 %v5_aef8, i8* %v4_b11c, align 1
  %v0_b120 = load i32, i32* @sb, align 4
  %v1_b120 = load i32, i32* %r3.global-to-local, align 4
  %v2_b120 = add i32 %v1_b120, 12
  %v3_b120 = inttoptr i32 %v2_b120 to i32*
  store i32 %v0_b120, i32* %v3_b120, align 4
  %v0_b124 = load i32, i32* %r0.global-to-local, align 4
  %v1_b124 = load i32, i32* %r1.global-to-local, align 4
  %tmp52 = mul i32 %v1_b124, -8
  %v5_b124 = add i32 %v0_b124, %tmp52
  %v1_b128 = load i32, i32* @r7, align 4
  %v2_b128 = add i32 %v5_b124, %v1_b128
  store i32 %v2_b128, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  %v1_b130 = add i32 %v1_b124, 1
  store i32 %v1_b130, i32* @r4, align 4
  %v1_b134 = add i32 %v2_b128, 16
  %v2_b134 = inttoptr i32 %v1_b134 to i32*
  %v3_b134 = load i32, i32* %v2_b134, align 4
  store i32 %v3_b134, i32* %r2.global-to-local, align 4
  store i32 %v4_b138, i32* %r0.global-to-local, align 4
  %v0_b13c = load i32, i32* %r3.global-to-local, align 4
  %v1_b13c = add i32 %v0_b13c, 20
  store i32 %v1_b13c, i32* %r1.global-to-local, align 4
  %v0_b144 = load i32, i32* @r6, align 4
  %v1_b144 = trunc i32 %v0_b144 to i16
  %v3_b144 = add i32 %v0_b13c, 2
  %v4_b144 = inttoptr i32 %v3_b144 to i16*
  store i16 %v1_b144, i16* %v4_b144, align 2
  %v0_b148 = load i32, i32* @r8, align 4
  %v1_b148 = trunc i32 %v0_b148 to i16
  %v2_b148 = load i32, i32* %r3.global-to-local, align 4
  %v3_b148 = add i32 %v2_b148, 4
  %v4_b148 = inttoptr i32 %v3_b148 to i16*
  store i16 %v1_b148, i16* %v4_b148, align 2
  %v0_b14c = load i32, i32* %r2.global-to-local, align 4
  %v1_b14c = load i32, i32* %r3.global-to-local, align 4
  %v2_b14c = add i32 %v1_b14c, 16
  %v3_b14c = inttoptr i32 %v2_b14c to i32*
  store i32 %v0_b14c, i32* %v3_b14c, align 4
  %v0_b150 = load i32, i32* @sl, align 4
  %v1_b150 = trunc i32 %v0_b150 to i16
  %v2_b150 = load i32, i32* %r3.global-to-local, align 4
  %v3_b150 = add i32 %v2_b150, 20
  %v4_b150 = inttoptr i32 %v3_b150 to i16*
  store i16 %v1_b150, i16* %v4_b150, align 2
  %v0_b154 = load i32, i32* @r5, align 4
  %v1_b154 = trunc i32 %v0_b154 to i16
  %v2_b154 = load i32, i32* %r1.global-to-local, align 4
  %v3_b154 = add i32 %v2_b154, 4
  %v4_b154 = inttoptr i32 %v3_b154 to i16*
  store i16 %v1_b154, i16* %v4_b154, align 2
  %v0_b158 = load i32, i32* %r0.global-to-local, align 4
  %v1_b158 = trunc i32 %v0_b158 to i16
  %v2_b158 = load i32, i32* %r1.global-to-local, align 4
  %v3_b158 = add i32 %v2_b158, 2
  %v4_b158 = inttoptr i32 %v3_b158 to i16*
  store i16 %v1_b158, i16* %v4_b158, align 2
  %v0_b15c = load i32, i32* @r4, align 4
  store i32 %v0_b15c, i32* %stack_var_-44, align 4
  %v5_b160 = icmp slt i32 %v1_b130, %arg2
  br i1 %v5_b160, label %dec_label_pc_b0c0, label %dec_label_pc_b164.preheader

dec_label_pc_b164.preheader:                      ; preds = %dec_label_pc_b34c, %dec_label_pc_b0c0, %.dec_label_pc_b164.preheader_crit_edge
  %v1_b184.pre-phi = phi i32 [ %.pre10, %.dec_label_pc_b164.preheader_crit_edge ], [ %v1_b054, %dec_label_pc_b0c0 ], [ %v1_b054, %dec_label_pc_b34c ]
  %v1_b180.pre-phi = phi i32 [ %.pre, %.dec_label_pc_b164.preheader_crit_edge ], [ %v1_b058, %dec_label_pc_b0c0 ], [ %v1_b058, %dec_label_pc_b34c ]
  %v9_b2e4 = icmp eq i32 %v3_b024, add (i32 ptrtoint (i32* @global_var_10000.37 to i32), i32 -1)
  %v2_b320 = icmp eq i32 %v1_af7c, 0
  br label %dec_label_pc_b164

dec_label_pc_b164:                                ; preds = %dec_label_pc_b164.preheader, %dec_label_pc_b3f8
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_b030, label %dec_label_pc_b3f8, label %dec_label_pc_b178

dec_label_pc_b178:                                ; preds = %dec_label_pc_b164
  store i32 %v0_b008, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v1_b180.pre-phi, i32* @sl, align 4
  store i32 %v1_b184.pre-phi, i32* @r8, align 4
  br label %dec_label_pc_b254

dec_label_pc_b18c:                                ; preds = %dec_label_pc_b254
  %v0_b18c = load i32, i32* @sb, align 4
  %v7_b18c = icmp eq i32 %v0_b18c, -1
  br i1 %v7_b18c, label %dec_label_pc_b2d4, label %dec_label_pc_b194

dec_label_pc_b194:                                ; preds = %dec_label_pc_b278, %dec_label_pc_b18c
  store i32 %v3_b024, i32* @ip, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.37 to i32), i32 -1), i32* @r4, align 4
  br i1 %v9_b2e4, label %dec_label_pc_b2f0, label %dec_label_pc_b1a8

dec_label_pc_b1a8:                                ; preds = %dec_label_pc_b2d4.dec_label_pc_b1a8_crit_edge, %dec_label_pc_b194
  %v1_b1ac = phi i32 [ %v1_b1ac.pre, %dec_label_pc_b2d4.dec_label_pc_b1a8_crit_edge ], [ add (i32 ptrtoint (i32* @global_var_10000.37 to i32), i32 -1), %dec_label_pc_b194 ]
  store i32 %v3_b028, i32* %r0.global-to-local, align 4
  %v9_b1ac = icmp eq i32 %v3_b028, %v1_b1ac
  br i1 %v9_b1ac, label %dec_label_pc_b304, label %dec_label_pc_b1b4

dec_label_pc_b1b4:                                ; preds = %dec_label_pc_b2f0, %dec_label_pc_b1a8
  %v1_b1b8 = phi i32 [ %v1_b2fc, %dec_label_pc_b2f0 ], [ %v1_b1ac, %dec_label_pc_b1a8 ]
  store i32 %v3_b02c, i32* %r1.global-to-local, align 4
  %v9_b1b8 = icmp eq i32 %v3_b02c, %v1_b1b8
  br i1 %v9_b1b8, label %dec_label_pc_b318, label %dec_label_pc_b1c0

dec_label_pc_b1c0:                                ; preds = %dec_label_pc_b304, %dec_label_pc_b1b4
  store i32 %v1_af7c, i32* %r2.global-to-local, align 4
  br i1 %v2_b320, label %dec_label_pc_b1cc, label %dec_label_pc_b32c

dec_label_pc_b1cc:                                ; preds = %dec_label_pc_b1c0, %dec_label_pc_b318, %dec_label_pc_b32c
  %v2_b1d0 = load i32, i32* @r5, align 4
  %v3_b1d0 = add i32 %v2_b1d0, 10
  %v4_b1d0 = inttoptr i32 %v3_b1d0 to i16*
  store i16 0, i16* %v4_b1d0, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_b1d8 = load i32, i32* @r5, align 4
  store i32 %v0_b1d8, i32* @r0, align 4
  %v2_b1dc = call i32 @function_bf78(i32 %v0_b1d8, i32 20)
  %v3_b1dc = trunc i32 %v2_b1dc to i16
  store i32 %v2_b1dc, i32* %r0.global-to-local, align 4
  %v3_b1e0 = load i32, i32* @r5, align 4
  %v4_b1e0 = add i32 %v3_b1e0, 10
  %v5_b1e0 = inttoptr i32 %v4_b1e0 to i16*
  store i16 %v3_b1dc, i16* %v5_b1e0, align 2
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_b1e8 = load i32, i32* @r6, align 4
  %v3_b1e8 = add i32 %v2_b1e8, 6
  %v4_b1e8 = inttoptr i32 %v3_b1e8 to i16*
  store i16 0, i16* %v4_b1e8, align 2
  %v0_b1ec = load i32, i32* @r6, align 4
  %v1_b1ec = add i32 %v0_b1ec, 4
  %v2_b1ec = inttoptr i32 %v1_b1ec to i16*
  %v3_b1ec = load i16, i16* %v2_b1ec, align 2
  %v4_b1ec = zext i16 %v3_b1ec to i32
  store i32 %v4_b1ec, i32* %r2.global-to-local, align 4
  store i32 %v0_b1ec, i32* @r1, align 4
  %v0_b1f4 = load i32, i32* @sl, align 4
  store i32 %v0_b1f4, i32* %r3.global-to-local, align 4
  %v0_b1f8 = load i32, i32* @r5, align 4
  store i32 %v0_b1f8, i32* %r0.global-to-local, align 4
  %v4_b1fc = call i32 @function_bfc8(i32 %v0_b1f8, i32 %v0_b1ec, i32 %v4_b1ec, i32 %v0_b1f4)
  %v5_b1fc = trunc i32 %v4_b1fc to i16
  store i32 %v4_b1fc, i32* %r0.global-to-local, align 4
  %v3_b200 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b200, i32* %r3.global-to-local, align 4
  %v3_b204 = mul i32 %v3_b200, 32
  store i32 %v3_b204, i32* %lr.global-to-local, align 4
  %v3_b208 = load i32, i32* @r6, align 4
  %v4_b208 = add i32 %v3_b208, 6
  %v5_b208 = inttoptr i32 %v4_b208 to i16*
  store i16 %v5_b1fc, i16* %v5_b208, align 2
  %v0_b20c = load i32, i32* %lr.global-to-local, align 4
  %v1_b20c = load i32, i32* %r3.global-to-local, align 4
  %tmp53 = mul i32 %v1_b20c, -8
  %v5_b20c = add i32 %v0_b20c, %tmp53
  store i32 %v5_b20c, i32* %lr.global-to-local, align 4
  %v0_b210 = load i32, i32* @r6, align 4
  %v1_b210 = add i32 %v0_b210, 2
  %v2_b210 = inttoptr i32 %v1_b210 to i16*
  %v3_b210 = load i16, i16* %v2_b210, align 2
  %v1_b214 = load i32, i32* @r7, align 4
  %v2_b214 = add i32 %v1_b214, %v5_b20c
  store i32 %v2_b214, i32* @lr, align 4
  %v3_b218 = add i32 %v2_b214, 2
  %v4_b218 = inttoptr i32 %v3_b218 to i16*
  store i16 %v3_b210, i16* %v4_b218, align 2
  %v0_b21c = load i32, i32* @r8, align 4
  store i32 %v0_b21c, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_b228 = load i32, i32* @r5, align 4
  store i32 %v0_b228, i32* %r1.global-to-local, align 4
  %v0_b22c = load i32, i32* @fp, align 4
  store i32 %v0_b22c, i32* %r0.global-to-local, align 4
  %v0_b230 = load i32, i32* @lr, align 4
  %v6_b238 = call i32 @function_11cac(i32 %v0_b22c, i32 %v0_b228, i32 %v0_b21c, i32 16384, i32 %v0_b230, i32 16)
  %v3_b23c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b23c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v1_b244 = add i32 %v3_b23c, 1
  store i32 %v1_b244, i32* %r0.global-to-local, align 4
  store i32 %v1_b244, i32* %stack_var_-44, align 4
  %v6_b250 = icmp slt i32 %v1_b244, %arg2
  br i1 %v6_b250, label %dec_label_pc_b254, label %dec_label_pc_b3f8

dec_label_pc_b254:                                ; preds = %dec_label_pc_b1cc, %dec_label_pc_b178
  %v1_b268 = phi i32 [ %v1_b244, %dec_label_pc_b1cc ], [ 0, %dec_label_pc_b178 ]
  %v5_b258 = mul i32 %v1_b268, 24
  %v1_b260 = load i32, i32* @r7, align 4
  %v2_b260 = add i32 %v1_b260, %v5_b258
  store i32 %v2_b260, i32* @r3, align 4
  %v1_b264 = add i32 %v2_b260, 20
  %v2_b264 = inttoptr i32 %v1_b264 to i8*
  %v3_b264 = load i8, i8* %v2_b264, align 1
  %v4_b264 = zext i8 %v3_b264 to i32
  store i32 %v4_b264, i32* %r2.global-to-local, align 4
  %v4_b268 = mul i32 %v1_b268, 4
  %v5_b268 = add i32 %v4_b268, %v2_ae88
  %v6_b268 = inttoptr i32 %v5_b268 to i32*
  %v7_b268 = load i32, i32* %v6_b268, align 4
  store i32 %v7_b268, i32* @r5, align 4
  %v1_b270 = add i32 %v7_b268, 20
  store i32 %v1_b270, i32* @r6, align 4
  %tmp54 = icmp ugt i8 %v3_b264, 31
  br i1 %tmp54, label %dec_label_pc_b18c, label %dec_label_pc_b278

dec_label_pc_b278:                                ; preds = %dec_label_pc_b254
  %v1_b278 = add i32 %v2_b260, 16
  %v2_b278 = inttoptr i32 %v1_b278 to i32*
  %v3_b278 = load i32, i32* %v2_b278, align 4
  %v0_b27c = call i32 @function_d398()
  store i32 %v0_b27c, i32* %r0.global-to-local, align 4
  %v3_b280 = load i32, i32* %stack_var_-44, align 4
  %v5_b288 = mul i32 %v3_b280, 24
  %v1_b28c = and i32 %v3_b278, 16711680
  store i32 %v1_b28c, i32* %ip.global-to-local, align 4
  %v3_b290 = udiv i32 %v3_b278, 16777216
  %v4_b294 = udiv i32 %v1_b28c, 256
  %v5_b294 = or i32 %v4_b294, %v3_b290
  store i32 %v5_b294, i32* %r2.global-to-local, align 4
  %v1_b298 = load i32, i32* @r7, align 4
  %v2_b298 = add i32 %v1_b298, %v5_b288
  store i32 %v2_b298, i32* %r1.global-to-local, align 4
  %v1_b29c = and i32 %v3_b278, 65280
  store i32 %v1_b29c, i32* %r3.global-to-local, align 4
  %v1_b2a0 = add i32 %v2_b298, 20
  %v2_b2a0 = inttoptr i32 %v1_b2a0 to i8*
  %v3_b2a0 = load i8, i8* %v2_b2a0, align 1
  %v4_b2a0 = zext i8 %v3_b2a0 to i32
  store i32 %v4_b2a0, i32* %ip.global-to-local, align 4
  %v5_b2a8 = call i32 @llvm.bswap.i32(i32 %v3_b278)
  %v7_b2ac = lshr i32 %v0_b27c, %v4_b2a0
  %v8_b2ac = add i32 %v7_b2ac, %v5_b2a8
  store i32 %v8_b2ac, i32* %r2.global-to-local, align 4
  %v1_b2b0 = and i32 %v8_b2ac, 16711680
  store i32 %v1_b2b0, i32* %r0.global-to-local, align 4
  %v1_b2bc = and i32 %v8_b2ac, 65280
  store i32 %v1_b2bc, i32* %r1.global-to-local, align 4
  %v5_b2c4 = call i32 @llvm.bswap.i32(i32 %v8_b2ac)
  store i32 %v5_b2c4, i32* @r3, align 4
  %v0_b2c8 = load i32, i32* @sb, align 4
  %v3_b2c8 = icmp eq i32 %v0_b2c8, -1
  %v1_b2cc = load i32, i32* @r5, align 4
  %v2_b2cc = add i32 %v1_b2cc, 16
  %v3_b2cc = inttoptr i32 %v2_b2cc to i32*
  store i32 %v5_b2c4, i32* %v3_b2cc, align 4
  br i1 %v3_b2c8, label %dec_label_pc_b2d4, label %dec_label_pc_b194

dec_label_pc_b2d4:                                ; preds = %dec_label_pc_b278, %dec_label_pc_b18c
  %v0_b2d4 = call i32 @function_d398()
  store i32 %v0_b2d4, i32* %r0.global-to-local, align 4
  store i32 %v3_b024, i32* @ip, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.37 to i32), i32 -1), i32* @r4, align 4
  %v1_b2e8 = load i32, i32* @r5, align 4
  %v2_b2e8 = add i32 %v1_b2e8, 12
  %v3_b2e8 = inttoptr i32 %v2_b2e8 to i32*
  store i32 %v0_b2d4, i32* %v3_b2e8, align 4
  br i1 %v9_b2e4, label %dec_label_pc_b2f0, label %dec_label_pc_b2d4.dec_label_pc_b1a8_crit_edge

dec_label_pc_b2d4.dec_label_pc_b1a8_crit_edge:    ; preds = %dec_label_pc_b2d4
  %v1_b1ac.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_b1a8

dec_label_pc_b2f0:                                ; preds = %dec_label_pc_b2d4, %dec_label_pc_b194
  %v0_b2f0 = call i32 @function_d398()
  %v1_b2f0 = trunc i32 %v0_b2f0 to i16
  %v3_b2f4 = load i32, i32* @r5, align 4
  %v4_b2f4 = add i32 %v3_b2f4, 4
  %v5_b2f4 = inttoptr i32 %v4_b2f4 to i16*
  store i16 %v1_b2f0, i16* %v5_b2f4, align 2
  store i32 %v3_b028, i32* %r0.global-to-local, align 4
  %v1_b2fc = load i32, i32* @r4, align 4
  %v9_b2fc = icmp eq i32 %v3_b028, %v1_b2fc
  br i1 %v9_b2fc, label %dec_label_pc_b304, label %dec_label_pc_b1b4

dec_label_pc_b304:                                ; preds = %dec_label_pc_b2f0, %dec_label_pc_b1a8
  %v0_b304 = call i32 @function_d398()
  %v1_b304 = trunc i32 %v0_b304 to i16
  store i32 %v0_b304, i32* %r0.global-to-local, align 4
  store i32 %v3_b02c, i32* %r1.global-to-local, align 4
  %v1_b30c = load i32, i32* @r4, align 4
  %v9_b30c = icmp eq i32 %v3_b02c, %v1_b30c
  %v3_b310 = load i32, i32* @r5, align 4
  %v4_b310 = add i32 %v3_b310, 20
  %v5_b310 = inttoptr i32 %v4_b310 to i16*
  store i16 %v1_b304, i16* %v5_b310, align 2
  br i1 %v9_b30c, label %dec_label_pc_b318, label %dec_label_pc_b1c0

dec_label_pc_b318:                                ; preds = %dec_label_pc_b304, %dec_label_pc_b1b4
  %v0_b318 = call i32 @function_d398()
  %v1_b318 = trunc i32 %v0_b318 to i16
  store i32 %v0_b318, i32* %r0.global-to-local, align 4
  store i32 %v1_af7c, i32* %r2.global-to-local, align 4
  %v3_b324 = load i32, i32* @r6, align 4
  %v4_b324 = add i32 %v3_b324, 2
  %v5_b324 = inttoptr i32 %v4_b324 to i16*
  store i16 %v1_b318, i16* %v5_b324, align 2
  br i1 %v2_b320, label %dec_label_pc_b1cc, label %dec_label_pc_b32c

dec_label_pc_b32c:                                ; preds = %dec_label_pc_b1c0, %dec_label_pc_b318
  %v0_b32c = load i32, i32* @r5, align 4
  %v1_b32c = add i32 %v0_b32c, 28
  store i32 %v1_b32c, i32* @r4, align 4
  store i32 %v1_b32c, i32* %r0.global-to-local, align 4
  store i32 %v0_b008, i32* %r1.global-to-local, align 4
  %v2_b338 = call i32 @function_d45c(i32 %v1_b32c, i32 %v0_b008)
  store i32 %v2_b338, i32* %r0.global-to-local, align 4
  store i32 %v0_b008, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_b344 = load i32, i32* @r4, align 4
  %v4_b344 = add i32 %v3_b344, %v0_b008
  %v5_b344 = inttoptr i32 %v4_b344 to i8*
  store i8 0, i8* %v5_b344, align 1
  br label %dec_label_pc_b1cc

dec_label_pc_b34c:                                ; preds = %dec_label_pc_b34c.preheader, %dec_label_pc_b34c
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_b358 = call i32 @function_12898(i32 1510, i32 1)
  store i32 %v2_b358, i32* %r0.global-to-local, align 4
  store i32 %v2_ae88, i32* %ip.global-to-local, align 4
  %v3_b360 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b360, i32* %r1.global-to-local, align 4
  %v2_b364 = load i32, i32* @r4, align 4
  %v5_b364 = mul i32 %v2_b364, 4
  %v6_b364 = add i32 %v5_b364, %v2_ae88
  %v7_b364 = inttoptr i32 %v6_b364 to i32*
  store i32 %v2_b358, i32* %v7_b364, align 4
  %v0_b368 = load i32, i32* %ip.global-to-local, align 4
  %v1_b368 = load i32, i32* %r1.global-to-local, align 4
  %v4_b368 = mul i32 %v1_b368, 4
  %v5_b368 = add i32 %v4_b368, %v0_b368
  %v6_b368 = inttoptr i32 %v5_b368 to i32*
  %v7_b368 = load i32, i32* %v6_b368, align 4
  store i32 %v7_b368, i32* %r3.global-to-local, align 4
  %v1_b36c = inttoptr i32 %v7_b368 to i8*
  %v2_b36c = load i8, i8* %v1_b36c, align 1
  %tmp55 = urem i8 %v2_b36c, 16
  %v1_b370 = zext i8 %tmp55 to i32
  %v1_b374 = or i32 %v1_b370, 64
  store i32 %v1_b374, i32* %r2.global-to-local, align 4
  %v1_b378 = trunc i32 %v1_b374 to i8
  store i8 %v1_b378, i8* %v1_b36c, align 1
  %v0_b37c = load i32, i32* %r3.global-to-local, align 4
  %v1_b37c = inttoptr i32 %v0_b37c to i8*
  %v2_b37c = load i8, i8* %v1_b37c, align 1
  %v1_b380 = and i8 %v2_b37c, -16
  %v1_b384 = or i8 %v1_b380, 5
  store i32 17, i32* %ip.global-to-local, align 4
  store i8 %v1_b384, i8* %v1_b37c, align 1
  %v0_b390 = load i32, i32* %ip.global-to-local, align 4
  %v1_b390 = trunc i32 %v0_b390 to i8
  %v2_b390 = load i32, i32* %r3.global-to-local, align 4
  %v3_b390 = add i32 %v2_b390, 9
  %v4_b390 = inttoptr i32 %v3_b390 to i8*
  store i8 %v1_b390, i8* %v4_b390, align 1
  %v2_b398 = load i32, i32* %r3.global-to-local, align 4
  %v3_b398 = add i32 %v2_b398, 1
  %v4_b398 = inttoptr i32 %v3_b398 to i8*
  store i8 %v5_aec0, i8* %v4_b398, align 1
  store i32 %v4_b39c, i32* %ip.global-to-local, align 4
  %v0_b3a0 = load i32, i32* %r1.global-to-local, align 4
  %v3_b3a0 = mul i32 %v0_b3a0, 32
  store i32 %v3_b3a0, i32* %r0.global-to-local, align 4
  %v2_b3a4 = load i32, i32* %r3.global-to-local, align 4
  %v3_b3a4 = add i32 %v2_b3a4, 8
  %v4_b3a4 = inttoptr i32 %v3_b3a4 to i8*
  store i8 %v5_aef8, i8* %v4_b3a4, align 1
  %v0_b3a8 = load i32, i32* @sb, align 4
  %v1_b3a8 = load i32, i32* %r3.global-to-local, align 4
  %v2_b3a8 = add i32 %v1_b3a8, 12
  %v3_b3a8 = inttoptr i32 %v2_b3a8 to i32*
  store i32 %v0_b3a8, i32* %v3_b3a8, align 4
  %v0_b3ac = load i32, i32* %r0.global-to-local, align 4
  %v1_b3ac = load i32, i32* %r1.global-to-local, align 4
  %tmp56 = mul i32 %v1_b3ac, -8
  %v5_b3ac = add i32 %v0_b3ac, %tmp56
  %v1_b3b0 = load i32, i32* @r7, align 4
  %v2_b3b0 = add i32 %v5_b3ac, %v1_b3b0
  store i32 %v2_b3b0, i32* %r2.global-to-local, align 4
  %v1_b3b4 = add i32 %v2_b3b0, 16
  %v2_b3b4 = inttoptr i32 %v1_b3b4 to i32*
  %v3_b3b4 = load i32, i32* %v2_b3b4, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v1_b3bc = load i32, i32* %r3.global-to-local, align 4
  %v2_b3bc = add i32 %v1_b3bc, 16
  %v3_b3bc = inttoptr i32 %v2_b3bc to i32*
  store i32 %v3_b3b4, i32* %v3_b3bc, align 4
  store i32 64, i32* %r2.global-to-local, align 4
  %v0_b3c4 = load i32, i32* %r1.global-to-local, align 4
  %v1_b3c4 = add i32 %v0_b3c4, 1
  store i32 %v1_b3c4, i32* @r4, align 4
  %v0_b3c8 = load i32, i32* @r6, align 4
  %v1_b3c8 = trunc i32 %v0_b3c8 to i16
  %v2_b3c8 = load i32, i32* %r3.global-to-local, align 4
  %v3_b3c8 = add i32 %v2_b3c8, 2
  %v4_b3c8 = inttoptr i32 %v3_b3c8 to i16*
  store i16 %v1_b3c8, i16* %v4_b3c8, align 2
  %v0_b3cc = load i32, i32* %r3.global-to-local, align 4
  %v1_b3cc = add i32 %v0_b3cc, 20
  store i32 %v1_b3cc, i32* %r1.global-to-local, align 4
  %v0_b3d0 = load i32, i32* @r8, align 4
  %v1_b3d0 = trunc i32 %v0_b3d0 to i16
  %v3_b3d0 = add i32 %v0_b3cc, 4
  %v4_b3d0 = inttoptr i32 %v3_b3d0 to i16*
  store i16 %v1_b3d0, i16* %v4_b3d0, align 2
  %v0_b3d4 = load i32, i32* %r2.global-to-local, align 4
  %v1_b3d4 = trunc i32 %v0_b3d4 to i16
  %v2_b3d4 = load i32, i32* %r3.global-to-local, align 4
  %v3_b3d4 = add i32 %v2_b3d4, 6
  %v4_b3d4 = inttoptr i32 %v3_b3d4 to i16*
  store i16 %v1_b3d4, i16* %v4_b3d4, align 2
  %v0_b3d8 = load i32, i32* @sl, align 4
  %v1_b3d8 = trunc i32 %v0_b3d8 to i16
  %v2_b3d8 = load i32, i32* %r3.global-to-local, align 4
  %v3_b3d8 = add i32 %v2_b3d8, 20
  %v4_b3d8 = inttoptr i32 %v3_b3d8 to i16*
  store i16 %v1_b3d8, i16* %v4_b3d8, align 2
  store i32 %v4_b3dc, i32* %r3.global-to-local, align 4
  %v0_b3e0 = load i32, i32* @r4, align 4
  %v1_b3e0 = load i32, i32* %r0.global-to-local, align 4
  %v0_b3e4 = load i32, i32* @r5, align 4
  %v1_b3e4 = trunc i32 %v0_b3e4 to i16
  %v2_b3e4 = load i32, i32* %r1.global-to-local, align 4
  %v3_b3e4 = add i32 %v2_b3e4, 4
  %v4_b3e4 = inttoptr i32 %v3_b3e4 to i16*
  store i16 %v1_b3e4, i16* %v4_b3e4, align 2
  %v0_b3e8 = load i32, i32* %r3.global-to-local, align 4
  %v1_b3e8 = trunc i32 %v0_b3e8 to i16
  %v2_b3e8 = load i32, i32* %r1.global-to-local, align 4
  %v3_b3e8 = add i32 %v2_b3e8, 2
  %v4_b3e8 = inttoptr i32 %v3_b3e8 to i16*
  store i16 %v1_b3e8, i16* %v4_b3e8, align 2
  %v0_b3ec = load i32, i32* @r4, align 4
  store i32 %v0_b3ec, i32* %stack_var_-44, align 4
  %v5_b3f0 = icmp slt i32 %v0_b3e0, %v1_b3e0
  br i1 %v5_b3f0, label %dec_label_pc_b34c, label %dec_label_pc_b164.preheader

dec_label_pc_b3f8:                                ; preds = %dec_label_pc_b1cc, %dec_label_pc_b164
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_b3fc = call i32 @function_111c8(i32* null)
  store i32 %v2_b3fc, i32* %r0.global-to-local, align 4
  store i32 %v2_afa0, i32* %r3.global-to-local, align 4
  %v6_b408 = icmp slt i32 %v2_afa0, %v2_b3fc
  br i1 %v6_b408, label %dec_label_pc_b40c, label %dec_label_pc_b164

dec_label_pc_b40c:                                ; preds = %dec_label_pc_b3f8, %dec_label_pc_ae5c, %dec_label_pc_b418
  %v1_b414 = phi i32 [ %v3_afb4, %dec_label_pc_ae5c ], [ %v1_b41c, %dec_label_pc_b418 ], [ %v2_b3fc, %dec_label_pc_b3f8 ]
  store i32 %v27_ae5c, i32* %lr.global-to-local, align 4
  ret i32 %v1_b414

dec_label_pc_b418:                                ; preds = %dec_label_pc_afc4
  %v0_b418 = load i32, i32* @fp, align 4
  store i32 %v0_b418, i32* %r0.global-to-local, align 4
  %v1_b41c = call i32 @function_11548(i32 %v0_b418)
  store i32 %v1_b41c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b40c

; uselistorder directives
  uselistorder i32 %v1_b41c, { 1, 0 }
  uselistorder i32 %v0_b318, { 1, 0 }
  uselistorder i32 %v0_b304, { 1, 0 }
  uselistorder i32 %v1_b2fc, { 1, 0 }
  uselistorder i32 %v5_b2c4, { 1, 0 }
  uselistorder i32 %v3_b278, { 2, 1, 3, 0 }
  uselistorder i32 %v1_b244, { 1, 2, 0, 3 }
  uselistorder i32 %v5_b20c, { 1, 0 }
  uselistorder i32 %v4_b1fc, { 1, 0 }
  uselistorder i32 %v0_b1ec, { 1, 0, 2 }
  uselistorder i32 %v2_b1dc, { 1, 0 }
  uselistorder i1 %v2_b320, { 1, 0 }
  uselistorder i1 %v9_b2e4, { 1, 0 }
  uselistorder i32 %v1_b124, { 1, 0 }
  uselistorder i16 %v5_b0b4, { 1, 0 }
  uselistorder i32 %v3_b0a0, { 1, 0 }
  uselistorder i32 %v3_b09c, { 1, 0 }
  uselistorder i32 %v3_b098, { 1, 0 }
  uselistorder i32 %v1_b058, { 2, 3, 1, 0 }
  uselistorder i32 %v1_b054, { 3, 4, 2, 0, 1 }
  uselistorder i32 %v3_b028, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %v3_b024, { 1, 2, 0 }
  uselistorder i32 %v3_b01c, { 1, 0 }
  uselistorder i32 %v0_b008, { 0, 4, 5, 6, 3, 7, 8, 1, 2 }
  uselistorder i32 %v3_afb4, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_afa0, { 1, 0 }
  uselistorder i32 %v1_af7c, { 2, 3, 1, 0 }
  uselistorder i32 %v1_af3c, { 1, 0, 3, 2 }
  uselistorder i32 %v1_af08, { 1, 0 }
  uselistorder i8 %v5_aef8, { 1, 0, 2 }
  uselistorder i32 %v1_aedc, { 1, 0 }
  uselistorder i32 %v1_aec4, { 1, 0, 2 }
  uselistorder i32 %v1_aea0, { 1, 0 }
  uselistorder i32 %v2_ae88, { 0, 3, 1, 2, 4 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 10, 11 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 27, 28, 29, 30, 32, 33, 34, 35, 36, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 13, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 23, 24, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 7, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 8, 3, 4, 5, 6, 7, 10, 9, 12, 11, 14, 15, 13, 17, 16, 19, 18, 20, 22, 21, 29, 23, 24, 25, 26, 27, 28, 33, 30, 31, 32, 34, 36, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 0 }
  uselistorder i32 %arg2, { 2, 5, 4, 6, 0, 3, 1, 7, 9, 8, 10 }
  uselistorder label %dec_label_pc_b40c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b34c, { 1, 0 }
  uselistorder label %dec_label_pc_b32c, { 1, 0 }
  uselistorder label %dec_label_pc_b1cc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_b164, { 1, 0 }
  uselistorder label %dec_label_pc_b0c0, { 1, 0 }
  uselistorder label %bb40, { 1, 0 }
}

define i32 @function_b428(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_b428:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v3_b428 = load i32, i32* @r4, align 4
  %v27_b428 = load i32, i32* @lr, align 4
  store i32 0, i32* @r7, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* @fp, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 %arg3, i32* @r8, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_b454 = call i32 @function_12898(i32 %arg2, i32 4)
  %v0_b458 = load i32, i32* @r4, align 4
  store i32 %v0_b458, i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  %v0_b460 = load i32, i32* @r7, align 4
  store i32 %v0_b460, i32* @r3, align 4
  store i32 %v2_b454, i32* @sb, align 4
  %v0_b468 = load i32, i32* @r5, align 4
  %v1_b46c = call i32 @function_8258(i32 %v0_b468)
  %v1_b478 = urem i32 %v1_b46c, 256
  store i32 %v1_b478, i32* %ip.global-to-local, align 4
  %v0_b47c = load i32, i32* @r4, align 4
  store i32 %v0_b47c, i32* @r1, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.37 to i32), i32 -1), i32* @r3, align 4
  store i32 3, i32* @r2, align 4
  %v0_b488 = load i32, i32* @r5, align 4
  %v5_b48c = trunc i32 %v1_b46c to i8
  %v1_b490 = call i32 @function_8258(i32 %v0_b488)
  %v0_b494 = load i32, i32* @r4, align 4
  store i32 %v0_b494, i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  store i32 64, i32* @r3, align 4
  %v0_b4a4 = load i32, i32* @r5, align 4
  %v1_b4a8 = call i32 @function_8258(i32 %v0_b4a4)
  %v0_b4b0 = load i32, i32* @r4, align 4
  store i32 %v0_b4b0, i32* @r1, align 4
  %v1_b4b4 = urem i32 %v1_b4a8, 256
  store i32 %v1_b4b4, i32* %ip.global-to-local, align 4
  store i32 5, i32* @r2, align 4
  %v0_b4bc = load i32, i32* @r7, align 4
  store i32 %v0_b4bc, i32* @r3, align 4
  %v0_b4c0 = load i32, i32* @r5, align 4
  %v1_b4c8 = call i32 @function_8258(i32 %v0_b4c0)
  %v1_b4d4 = urem i32 %v1_b4c8, 256
  store i32 %v1_b4d4, i32* %ip.global-to-local, align 4
  %v0_b4d8 = load i32, i32* @r4, align 4
  store i32 %v0_b4d8, i32* @r1, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.37 to i32), i32 -1), i32* @r3, align 4
  store i32 6, i32* @r2, align 4
  %v0_b4e4 = load i32, i32* @r5, align 4
  %v1_b4ec = call i32 @function_8258(i32 %v0_b4e4)
  %v0_b4f4 = load i32, i32* @r4, align 4
  store i32 %v0_b4f4, i32* @r1, align 4
  store i32 27015, i32* @r3, align 4
  store i32 7, i32* @r2, align 4
  %v0_b504 = load i32, i32* @r5, align 4
  %v1_b508 = call i32 @function_8258(i32 %v0_b504)
  store i32 %v1_b508, i32* @r4, align 4
  %v0_b510 = load i32, i32* @r7, align 4
  store i32 %v0_b510, i32* %stack_var_-48, align 4
  %v1_b518 = inttoptr i32 %v0_b510 to i32*
  %v2_b518 = call i32 @function_111c8(i32* %v1_b518)
  %v1_b51c = load i32, i32* @r6, align 4
  %v2_b51c = add i32 %v1_b51c, %v2_b518
  %v1_b528 = call i32 @function_106dc(i32 10)
  %v3_b534 = call i32 @function_10618(i32 10, i32* nonnull %stack_var_-48)
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_b548 = call i32 @function_11d30(i32 2, i32 3, i32 17)
  %v7_b54c = icmp eq i32 %v3_b548, -1
  store i32 %v3_b548, i32* @sl, align 4
  br i1 %v7_b54c, label %dec_label_pc_b878, label %dec_label_pc_b558

dec_label_pc_b558:                                ; preds = %dec_label_pc_b428
  store i32 1, i32* %stack_var_-44, align 4
  %v6_b560 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_b560, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_b568 = load i32, i32* @r7, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_b574 = call i32 @function_11cec(i32 %v3_b548, i32 %v0_b568, i32 3, i32 %v6_b560, i32 ptrtoint (i32* @0 to i32))
  %v7_b578 = icmp eq i32 %v5_b574, -1
  br i1 %v7_b578, label %dec_label_pc_b884, label %dec_label_pc_b580

dec_label_pc_b580:                                ; preds = %dec_label_pc_b558
  store i32 %v1_b4ec, i32* %r2.global-to-local, align 4
  %v0_b58c = load i32, i32* @r4, align 4
  %v3_b590 = mul i32 %v1_b4ec, 65536
  store i32 %v3_b590, i32* %ip.global-to-local, align 4
  %v3_b594 = urem i32 %v1_b490, 65536
  store i32 %v3_b594, i32* %r3.global-to-local, align 4
  %v3_b598 = urem i32 %v1_b4ec, 65536
  %v3_b59c = urem i32 %v0_b58c, 65536
  %v0_b5a0 = load i32, i32* @fp, align 4
  %v2_b5a0 = icmp eq i32 %v0_b5a0, 0
  %v0_b5a4 = load i32, i32* @r7, align 4
  store i32 %v0_b5a4, i32* %stack_var_-44, align 4
  br i1 %v2_b5a0, label %dec_label_pc_b6e4.preheader, label %dec_label_pc_b5b8

dec_label_pc_b5b8:                                ; preds = %dec_label_pc_b580
  %tmp39 = mul i32 %v1_b490, 256
  %v3_b5c0 = and i32 %tmp39, 65280
  store i32 %v3_b5c0, i32* %r3.global-to-local, align 4
  %tmp40 = mul i32 %v0_b58c, 256
  %v3_b5c4 = and i32 %tmp40, 65280
  %tmp41 = udiv i32 %v1_b490, 256
  %v4_b5cc = urem i32 %tmp41, 256
  %v5_b5cc = or i32 %v4_b5cc, %tmp39
  %tmp42 = udiv i32 %v0_b58c, 256
  %v4_b5d0 = urem i32 %tmp42, 256
  %v5_b5d0 = or i32 %v4_b5d0, %v3_b5c4
  store i32 %v5_b5d0, i32* @lr, align 4
  %tmp43 = mul i32 %v1_b4ec, 256
  %v3_b5d4 = and i32 %tmp43, 65280
  store i32 %v3_b5d4, i32* %r2.global-to-local, align 4
  %v5_b5d8 = trunc i32 %v5_b5cc to i16
  %tmp44 = udiv i32 %v1_b4ec, 256
  %v4_b5e0 = urem i32 %tmp44, 256
  %v5_b5e0 = or i32 %v4_b5e0, %v3_b5d4
  store i32 %v5_b5e0, i32* @r6, align 4
  store i32 %v0_b5a4, i32* @r4, align 4
  %sext5 = mul nuw i32 %v5_b5d0, 65536
  %v4_b6b0 = sdiv i32 %sext5, 65536
  %v1_b65c = trunc i32 %v1_b4a8 to i8
  br label %dec_label_pc_b5e8

dec_label_pc_b5e8:                                ; preds = %.thread, %dec_label_pc_b5b8
  %v2_b5f0 = call i32 @function_12898(i32 128, i32 1)
  %v3_b5f4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b5f4, i32* %r2.global-to-local, align 4
  %v1_b5f8 = load i32, i32* @sb, align 4
  %v2_b5f8 = load i32, i32* @r4, align 4
  %v5_b5f8 = mul i32 %v2_b5f8, 4
  %v6_b5f8 = add i32 %v5_b5f8, %v1_b5f8
  %v7_b5f8 = inttoptr i32 %v6_b5f8 to i32*
  store i32 %v2_b5f0, i32* %v7_b5f8, align 4
  %v0_b5fc = load i32, i32* %r2.global-to-local, align 4
  %v3_b5fc = mul i32 %v0_b5fc, 32
  store i32 %v3_b5fc, i32* %r3.global-to-local, align 4
  %v0_b600 = load i32, i32* @sb, align 4
  %v4_b600 = mul i32 %v0_b5fc, 4
  %v5_b600 = add i32 %v0_b600, %v4_b600
  %v6_b600 = inttoptr i32 %v5_b600 to i32*
  %v7_b600 = load i32, i32* %v6_b600, align 4
  store i32 %v7_b600, i32* @lr, align 4
  %v5_b604 = mul i32 %v0_b5fc, 24
  store i32 %v5_b604, i32* %r3.global-to-local, align 4
  %v1_b608 = load i32, i32* @r8, align 4
  %v2_b608 = add i32 %v1_b608, %v5_b604
  store i32 %v2_b608, i32* @r5, align 4
  %v1_b60c = inttoptr i32 %v7_b600 to i8*
  %v2_b60c = load i8, i8* %v1_b60c, align 1
  %tmp = urem i8 %v2_b60c, 16
  %v1_b610 = zext i8 %tmp to i32
  %v1_b614 = or i32 %v1_b610, 64
  store i32 %v1_b614, i32* %r3.global-to-local, align 4
  %v1_b61c = trunc i32 %v1_b614 to i8
  store i8 %v1_b61c, i8* %v1_b60c, align 1
  %v0_b620 = load i32, i32* @lr, align 4
  %v1_b620 = inttoptr i32 %v0_b620 to i8*
  %v2_b620 = load i8, i8* %v1_b620, align 1
  %v1_b624 = and i8 %v2_b620, -16
  %v1_b628 = or i8 %v1_b624, 5
  store i8 %v1_b628, i8* %v1_b620, align 1
  %v2_b634 = load i32, i32* @lr, align 4
  %v3_b634 = add i32 %v2_b634, 1
  %v4_b634 = inttoptr i32 %v3_b634 to i8*
  store i8 %v5_b48c, i8* %v4_b634, align 1
  %v3_b638 = load i32, i32* %stack_var_-48, align 4
  %v3_b63c = mul i32 %v3_b638, 65536
  %v1_b640 = add i32 %v3_b63c, 2097152
  %v3_b644 = udiv i32 %v1_b640, 256
  %v1_b648 = and i32 %v3_b644, 65280
  %v4_b64c = udiv i32 %v1_b640, 16777216
  %v5_b64c = or i32 %v1_b648, %v4_b64c
  store i32 %v5_b64c, i32* %r3.global-to-local, align 4
  store i32 %v1_b4d4, i32* %r4.global-to-local, align 4
  %v3_b658 = urem i32 %v3_b638, 65536
  store i32 %v3_b658, i32* %r2.global-to-local, align 4
  %v2_b65c = load i32, i32* @lr, align 4
  %v3_b65c = add i32 %v2_b65c, 8
  %v4_b65c = inttoptr i32 %v3_b65c to i8*
  store i8 %v1_b65c, i8* %v4_b65c, align 1
  %v0_b660 = load i32, i32* %r3.global-to-local, align 4
  %v1_b660 = trunc i32 %v0_b660 to i16
  %v2_b660 = load i32, i32* @lr, align 4
  %v3_b660 = add i32 %v2_b660, 2
  %v4_b660 = inttoptr i32 %v3_b660 to i16*
  store i16 %v1_b660, i16* %v4_b660, align 2
  %v0_b664 = load i32, i32* %r2.global-to-local, align 4
  %v1_b664 = mul i32 %v0_b664, 65536
  %v3_b66c = add i32 %v1_b664, 786432
  store i32 %v3_b66c, i32* %r2.global-to-local, align 4
  %v2_b670 = load i32, i32* @lr, align 4
  %v3_b670 = add i32 %v2_b670, 4
  %v4_b670 = inttoptr i32 %v3_b670 to i16*
  store i16 %v5_b5d8, i16* %v4_b670, align 2
  %v0_b674 = load i32, i32* %r2.global-to-local, align 4
  %v3_b674 = udiv i32 %v0_b674, 256
  %v1_b678 = and i32 %v3_b674, 65280
  %v4_b67c = udiv i32 %v0_b674, 16777216
  %v5_b67c = or i32 %v1_b678, %v4_b67c
  store i32 %v5_b67c, i32* %ip.global-to-local, align 4
  %v2_b684 = load i32, i32* @lr, align 4
  %v3_b684 = add i32 %v2_b684, 9
  %v4_b684 = inttoptr i32 %v3_b684 to i8*
  store i8 17, i8* %v4_b684, align 1
  %v0_b688 = load i32, i32* %r4.global-to-local, align 4
  %v2_b688 = icmp eq i32 %v0_b688, 0
  store i32 ptrtoint (i32* @global_var_21644.39 to i32), i32* %r3.global-to-local, align 4
  br i1 %v2_b688, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_b5e8
  store i32 64, i32* %r2.global-to-local, align 4
  %v3_b694 = load i32, i32* @lr, align 4
  %v4_b694 = add i32 %v3_b694, 6
  %v5_b694 = inttoptr i32 %v4_b694 to i16*
  store i16 64, i16* %v5_b694, align 2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_b5e8, %bb
  %v2_b698 = load i32, i32* @global_var_21644.39, align 4
  store i32 %v2_b698, i32* %r2.global-to-local, align 4
  %v1_b69c = load i32, i32* @lr, align 4
  %v2_b69c = add i32 %v1_b69c, 12
  %v3_b69c = inttoptr i32 %v2_b69c to i32*
  store i32 %v2_b698, i32* %v3_b69c, align 4
  %v0_b6a0 = load i32, i32* @r5, align 4
  %v1_b6a0 = add i32 %v0_b6a0, 16
  %v2_b6a0 = inttoptr i32 %v1_b6a0 to i32*
  %v3_b6a0 = load i32, i32* %v2_b6a0, align 4
  store i32 %v3_b6a0, i32* %r3.global-to-local, align 4
  %v0_b6a4 = load i32, i32* @lr, align 4
  %v1_b6a4 = add i32 %v0_b6a4, 20
  store i32 %v1_b6a4, i32* %r4.global-to-local, align 4
  %v0_b6a8 = load i32, i32* %ip.global-to-local, align 4
  %v1_b6a8 = trunc i32 %v0_b6a8 to i16
  %v3_b6a8 = add i32 %v0_b6a4, 24
  %v4_b6a8 = inttoptr i32 %v3_b6a8 to i16*
  store i16 %v1_b6a8, i16* %v4_b6a8, align 2
  %v0_b6ac = load i32, i32* %r3.global-to-local, align 4
  %v1_b6ac = load i32, i32* @lr, align 4
  %v2_b6ac = add i32 %v1_b6ac, 16
  %v3_b6ac = inttoptr i32 %v2_b6ac to i32*
  store i32 %v0_b6ac, i32* %v3_b6ac, align 4
  store i32 %v4_b6b0, i32* %ip.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_b6b8 = load i32, i32* @lr, align 4
  %v2_b6b8 = add i32 %v1_b6b8, 28
  %v3_b6b8 = inttoptr i32 %v2_b6b8 to i32*
  store i32 -1, i32* %v3_b6b8, align 4
  %v0_b6bc = load i32, i32* %ip.global-to-local, align 4
  %v1_b6bc = trunc i32 %v0_b6bc to i16
  %v2_b6bc = load i32, i32* %r4.global-to-local, align 4
  %v3_b6bc = add i32 %v2_b6bc, 2
  %v4_b6bc = inttoptr i32 %v3_b6bc to i16*
  store i16 %v1_b6bc, i16* %v4_b6bc, align 2
  %v0_b6c0 = load i32, i32* @lr, align 4
  %v1_b6c0 = add i32 %v0_b6c0, 32
  %v0_b6c4 = load i32, i32* @r6, align 4
  %v1_b6c4 = trunc i32 %v0_b6c4 to i16
  %v3_b6c4 = add i32 %v0_b6c0, 20
  %v4_b6c4 = inttoptr i32 %v3_b6c4 to i16*
  store i16 %v1_b6c4, i16* %v4_b6c4, align 2
  %v3_b6c8 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_b6c8, i32* %r2.global-to-local, align 4
  %v3_b6cc = call i32 @function_10bac(i32 %v1_b6c0, i32 %v3_b534, i32 %v3_b6c8)
  %v3_b6d0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b6d0, i32* %r3.global-to-local, align 4
  %v1_b6d4 = add i32 %v3_b6d0, 1
  store i32 %v1_b6d4, i32* @r4, align 4
  %v1_b6d8 = load i32, i32* @fp, align 4
  store i32 %v1_b6d4, i32* %stack_var_-44, align 4
  %v5_b6e0 = icmp slt i32 %v1_b6d4, %v1_b6d8
  br i1 %v5_b6e0, label %dec_label_pc_b5e8, label %dec_label_pc_b6e4.preheader

dec_label_pc_b6e4.preheader:                      ; preds = %.thread, %dec_label_pc_b580
  %v0_b6e8.ph = phi i32 [ 0, %dec_label_pc_b580 ], [ %v1_b6d8, %.thread ]
  %v9_b700 = icmp eq i32 %v3_b594, add (i32 ptrtoint (i32* @global_var_10000.37 to i32), i32 -1)
  br label %dec_label_pc_b6e4

dec_label_pc_b6e4:                                ; preds = %dec_label_pc_b6e4.preheader, %dec_label_pc_b864.dec_label_pc_b6e4_crit_edge
  %v0_b6e8 = phi i32 [ %v0_b6e8.pre, %dec_label_pc_b864.dec_label_pc_b6e4_crit_edge ], [ %v0_b6e8.ph, %dec_label_pc_b6e4.preheader ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_b6e8 = icmp eq i32 %v0_b6e8, 0
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_b6e8, label %dec_label_pc_b864, label %dec_label_pc_b6f4

dec_label_pc_b6f4:                                ; preds = %dec_label_pc_b6e4
  br label %dec_label_pc_b7a8

dec_label_pc_b6fc:                                ; preds = %dec_label_pc_b7a8
  br i1 %v9_b700, label %dec_label_pc_b830, label %dec_label_pc_b708

dec_label_pc_b708:                                ; preds = %dec_label_pc_b7d0.dec_label_pc_b708_crit_edge, %dec_label_pc_b6fc
  %v1_b70c = phi i32 [ %v1_b70c.pre, %dec_label_pc_b7d0.dec_label_pc_b708_crit_edge ], [ add (i32 ptrtoint (i32* @global_var_10000.37 to i32), i32 -1), %dec_label_pc_b6fc ]
  store i32 %v3_b598, i32* %r2.global-to-local, align 4
  %v9_b70c = icmp eq i32 %v3_b598, %v1_b70c
  br i1 %v9_b70c, label %dec_label_pc_b844, label %dec_label_pc_b714

dec_label_pc_b714:                                ; preds = %dec_label_pc_b830.dec_label_pc_b714_crit_edge, %dec_label_pc_b708
  %v1_b718 = phi i32 [ %v1_b718.pre, %dec_label_pc_b830.dec_label_pc_b714_crit_edge ], [ %v1_b70c, %dec_label_pc_b708 ]
  store i32 %v3_b59c, i32* %r3.global-to-local, align 4
  %v9_b718 = icmp eq i32 %v3_b59c, %v1_b718
  br i1 %v9_b718, label %dec_label_pc_b858, label %dec_label_pc_b720

dec_label_pc_b720:                                ; preds = %dec_label_pc_b844, %dec_label_pc_b714, %dec_label_pc_b858
  store i32 0, i32* @r4, align 4
  %v2_b728 = load i32, i32* @r5, align 4
  %v3_b728 = add i32 %v2_b728, 10
  %v4_b728 = inttoptr i32 %v3_b728 to i16*
  store i16 0, i16* %v4_b728, align 2
  %v0_b72c = load i32, i32* @r5, align 4
  store i32 %v0_b72c, i32* @r0, align 4
  %v2_b730 = call i32 @function_bf78(i32 %v0_b72c, i32 20)
  %v3_b730 = trunc i32 %v2_b730 to i16
  %v3_b734 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_b734, i32* %r3.global-to-local, align 4
  %v3_b738 = load i32, i32* @r5, align 4
  %v4_b738 = add i32 %v3_b738, 10
  %v5_b738 = inttoptr i32 %v4_b738 to i16*
  store i16 %v3_b730, i16* %v5_b738, align 2
  %v0_b73c = load i32, i32* @r6, align 4
  store i32 %v0_b73c, i32* @r1, align 4
  %v1_b740 = add i32 %v0_b73c, 4
  %v2_b740 = inttoptr i32 %v1_b740 to i16*
  %v3_b740 = load i16, i16* %v2_b740, align 2
  %v4_b740 = zext i16 %v3_b740 to i32
  store i32 %v4_b740, i32* %r2.global-to-local, align 4
  %v0_b744 = load i32, i32* @r4, align 4
  %v1_b744 = trunc i32 %v0_b744 to i16
  %v3_b744 = add i32 %v0_b73c, 6
  %v4_b744 = inttoptr i32 %v3_b744 to i16*
  store i16 %v1_b744, i16* %v4_b744, align 2
  %v0_b748 = load i32, i32* %r3.global-to-local, align 4
  %v1_b748 = add i32 %v0_b748, 12
  store i32 %v1_b748, i32* %r3.global-to-local, align 4
  %v0_b74c = load i32, i32* @r5, align 4
  %v4_b750 = call i32 @function_bfc8(i32 %v0_b74c, i32 %v0_b73c, i32 %v4_b740, i32 %v1_b748)
  %v5_b750 = trunc i32 %v4_b750 to i16
  %v3_b754 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b754, i32* %r3.global-to-local, align 4
  %v3_b758 = mul i32 %v3_b754, 32
  store i32 %v3_b758, i32* %lr.global-to-local, align 4
  %v3_b75c = load i32, i32* @r6, align 4
  %v4_b75c = add i32 %v3_b75c, 6
  %v5_b75c = inttoptr i32 %v4_b75c to i16*
  store i16 %v5_b750, i16* %v5_b75c, align 2
  %v0_b760 = load i32, i32* %lr.global-to-local, align 4
  %v1_b760 = load i32, i32* %r3.global-to-local, align 4
  %tmp45 = mul i32 %v1_b760, -8
  %v5_b760 = add i32 %v0_b760, %tmp45
  store i32 %v5_b760, i32* %lr.global-to-local, align 4
  %v0_b764 = load i32, i32* @r6, align 4
  %v1_b764 = add i32 %v0_b764, 2
  %v2_b764 = inttoptr i32 %v1_b764 to i16*
  %v3_b764 = load i16, i16* %v2_b764, align 2
  %v3_b768 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_b768, i32* %r2.global-to-local, align 4
  %v1_b76c = load i32, i32* @r8, align 4
  %v2_b76c = add i32 %v1_b76c, %v5_b760
  store i32 %v2_b76c, i32* @lr, align 4
  %v3_b770 = add i32 %v2_b76c, 2
  %v4_b770 = inttoptr i32 %v3_b770 to i16*
  store i16 %v3_b764, i16* %v4_b770, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_b77c = load i32, i32* @r5, align 4
  %v0_b780 = load i32, i32* %r2.global-to-local, align 4
  %v1_b780 = add i32 %v0_b780, 32
  store i32 %v1_b780, i32* %r2.global-to-local, align 4
  %v0_b784 = load i32, i32* @sl, align 4
  %v0_b788 = load i32, i32* @lr, align 4
  %v6_b790 = call i32 @function_11cac(i32 %v0_b784, i32 %v0_b77c, i32 %v1_b780, i32 16384, i32 %v0_b788, i32 16)
  %v3_b794 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b794, i32* %r3.global-to-local, align 4
  %v1_b798 = add i32 %v3_b794, 1
  %v1_b79c = load i32, i32* @fp, align 4
  store i32 %v1_b798, i32* %stack_var_-44, align 4
  %v6_b7a4 = icmp slt i32 %v1_b798, %v1_b79c
  br i1 %v6_b7a4, label %dec_label_pc_b7a8, label %dec_label_pc_b864

dec_label_pc_b7a8:                                ; preds = %dec_label_pc_b720, %dec_label_pc_b6f4
  %v1_b7b8 = phi i32 [ %v1_b798, %dec_label_pc_b720 ], [ 0, %dec_label_pc_b6f4 ]
  %v5_b7ac = mul i32 %v1_b7b8, 24
  %v1_b7b0 = load i32, i32* @r8, align 4
  %v2_b7b0 = add i32 %v1_b7b0, %v5_b7ac
  store i32 %v2_b7b0, i32* %r3.global-to-local, align 4
  %v1_b7b4 = add i32 %v2_b7b0, 20
  %v2_b7b4 = inttoptr i32 %v1_b7b4 to i8*
  %v3_b7b4 = load i8, i8* %v2_b7b4, align 1
  %v4_b7b4 = zext i8 %v3_b7b4 to i32
  store i32 %v4_b7b4, i32* %r2.global-to-local, align 4
  %v0_b7b8 = load i32, i32* @sb, align 4
  %v4_b7b8 = mul i32 %v1_b7b8, 4
  %v5_b7b8 = add i32 %v0_b7b8, %v4_b7b8
  %v6_b7b8 = inttoptr i32 %v5_b7b8 to i32*
  %v7_b7b8 = load i32, i32* %v6_b7b8, align 4
  store i32 %v7_b7b8, i32* @r5, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.37 to i32), i32 -1), i32* @r7, align 4
  %v1_b7c8 = add i32 %v7_b7b8, 20
  store i32 %v1_b7c8, i32* @r6, align 4
  %tmp46 = icmp ugt i8 %v3_b7b4, 31
  br i1 %tmp46, label %dec_label_pc_b6fc, label %dec_label_pc_b7d0

dec_label_pc_b7d0:                                ; preds = %dec_label_pc_b7a8
  %v1_b7d0 = add i32 %v2_b7b0, 16
  %v2_b7d0 = inttoptr i32 %v1_b7d0 to i32*
  %v3_b7d0 = load i32, i32* %v2_b7d0, align 4
  store i32 %v3_b7d0, i32* %r4.global-to-local, align 4
  %v0_b7d4 = call i32 @function_d398()
  %v3_b7d8 = load i32, i32* %stack_var_-44, align 4
  %v5_b7e0 = mul i32 %v3_b7d8, 24
  %v1_b7e4 = and i32 %v3_b7d0, 16711680
  store i32 %v1_b7e4, i32* %ip.global-to-local, align 4
  %v3_b7e8 = udiv i32 %v3_b7d0, 16777216
  %v4_b7ec = udiv i32 %v1_b7e4, 256
  %v5_b7ec = or i32 %v4_b7ec, %v3_b7e8
  store i32 %v5_b7ec, i32* %r2.global-to-local, align 4
  %v1_b7f0 = load i32, i32* @r8, align 4
  %v2_b7f0 = add i32 %v1_b7f0, %v5_b7e0
  %v1_b7f4 = and i32 %v3_b7d0, 65280
  store i32 %v1_b7f4, i32* %r3.global-to-local, align 4
  %v1_b7f8 = add i32 %v2_b7f0, 20
  %v2_b7f8 = inttoptr i32 %v1_b7f8 to i8*
  %v3_b7f8 = load i8, i8* %v2_b7f8, align 1
  %v4_b7f8 = zext i8 %v3_b7f8 to i32
  store i32 %v4_b7f8, i32* %ip.global-to-local, align 4
  %v5_b800 = call i32 @llvm.bswap.i32(i32 %v3_b7d0)
  %v7_b804 = lshr i32 %v0_b7d4, %v4_b7f8
  %v8_b804 = add i32 %v7_b804, %v5_b800
  store i32 %v8_b804, i32* %r2.global-to-local, align 4
  %v5_b820 = call i32 @llvm.bswap.i32(i32 %v8_b804)
  store i32 %v5_b820, i32* %r3.global-to-local, align 4
  %v1_b824 = load i32, i32* @r7, align 4
  %v9_b824 = icmp eq i32 %v3_b594, %v1_b824
  %v1_b828 = load i32, i32* @r5, align 4
  %v2_b828 = add i32 %v1_b828, 16
  %v3_b828 = inttoptr i32 %v2_b828 to i32*
  store i32 %v5_b820, i32* %v3_b828, align 4
  br i1 %v9_b824, label %dec_label_pc_b830, label %dec_label_pc_b7d0.dec_label_pc_b708_crit_edge

dec_label_pc_b7d0.dec_label_pc_b708_crit_edge:    ; preds = %dec_label_pc_b7d0
  %v1_b70c.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_b708

dec_label_pc_b830:                                ; preds = %dec_label_pc_b7d0, %dec_label_pc_b6fc
  %v0_b830 = call i32 @function_d398()
  %v1_b830 = trunc i32 %v0_b830 to i16
  store i32 %v3_b598, i32* %r2.global-to-local, align 4
  %v1_b838 = load i32, i32* @r7, align 4
  %v9_b838 = icmp eq i32 %v3_b598, %v1_b838
  %v3_b83c = load i32, i32* @r5, align 4
  %v4_b83c = add i32 %v3_b83c, 4
  %v5_b83c = inttoptr i32 %v4_b83c to i16*
  store i16 %v1_b830, i16* %v5_b83c, align 2
  br i1 %v9_b838, label %dec_label_pc_b844, label %dec_label_pc_b830.dec_label_pc_b714_crit_edge

dec_label_pc_b830.dec_label_pc_b714_crit_edge:    ; preds = %dec_label_pc_b830
  %v1_b718.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_b714

dec_label_pc_b844:                                ; preds = %dec_label_pc_b830, %dec_label_pc_b708
  %v0_b844 = call i32 @function_d398()
  %v1_b844 = trunc i32 %v0_b844 to i16
  store i32 %v3_b59c, i32* %r3.global-to-local, align 4
  %v1_b84c = load i32, i32* @r7, align 4
  %v9_b84c = icmp eq i32 %v3_b59c, %v1_b84c
  %v3_b850 = load i32, i32* @r5, align 4
  %v4_b850 = add i32 %v3_b850, 20
  %v5_b850 = inttoptr i32 %v4_b850 to i16*
  store i16 %v1_b844, i16* %v5_b850, align 2
  br i1 %v9_b84c, label %dec_label_pc_b858, label %dec_label_pc_b720

dec_label_pc_b858:                                ; preds = %dec_label_pc_b844, %dec_label_pc_b714
  %v0_b858 = call i32 @function_d398()
  %v1_b858 = trunc i32 %v0_b858 to i16
  %v3_b85c = load i32, i32* @r6, align 4
  %v4_b85c = add i32 %v3_b85c, 2
  %v5_b85c = inttoptr i32 %v4_b85c to i16*
  store i16 %v1_b858, i16* %v5_b85c, align 2
  br label %dec_label_pc_b720

dec_label_pc_b864:                                ; preds = %dec_label_pc_b720, %dec_label_pc_b6e4
  %v2_b868 = call i32 @function_111c8(i32* null)
  store i32 %v2_b51c, i32* %ip.global-to-local, align 4
  %v6_b874 = icmp slt i32 %v2_b51c, %v2_b868
  br i1 %v6_b874, label %dec_label_pc_b878, label %dec_label_pc_b864.dec_label_pc_b6e4_crit_edge

dec_label_pc_b864.dec_label_pc_b6e4_crit_edge:    ; preds = %dec_label_pc_b864
  %v0_b6e8.pre = load i32, i32* @fp, align 4
  br label %dec_label_pc_b6e4

dec_label_pc_b878:                                ; preds = %dec_label_pc_b864, %dec_label_pc_b428, %dec_label_pc_b884
  %v1_b880 = phi i32 [ %v3_b548, %dec_label_pc_b428 ], [ %v1_b888, %dec_label_pc_b884 ], [ %v2_b868, %dec_label_pc_b864 ]
  store i32 %v3_b428, i32* %r4.global-to-local, align 4
  store i32 %v27_b428, i32* %lr.global-to-local, align 4
  ret i32 %v1_b880

dec_label_pc_b884:                                ; preds = %dec_label_pc_b558
  %v0_b884 = load i32, i32* @sl, align 4
  %v1_b888 = call i32 @function_11548(i32 %v0_b884)
  br label %dec_label_pc_b878

; uselistorder directives
  uselistorder i32 %v5_b820, { 1, 0 }
  uselistorder i32 %v3_b7d0, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v1_b798, { 1, 2, 0 }
  uselistorder i32 %v5_b760, { 1, 0 }
  uselistorder i32 %v0_b73c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_b6d4, { 1, 0, 2 }
  uselistorder i32 %v3_b638, { 1, 0 }
  uselistorder i32 %v0_b5fc, { 1, 2, 0 }
  uselistorder i32 %v3_b5d4, { 1, 0 }
  uselistorder i32 %v0_b58c, { 1, 0, 2 }
  uselistorder i32 %v3_b548, { 1, 2, 3, 0 }
  uselistorder i32 %v2_b51c, { 1, 0 }
  uselistorder i32 %v1_b4ec, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_b4d4, { 1, 0 }
  uselistorder i32 %v1_b4a8, { 1, 0 }
  uselistorder i32 %v1_b490, { 1, 0, 2 }
  uselistorder i32 %v1_b46c, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 12, 4, 5, 6, 7, 8, 9, 10, 11, 14, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 9, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_b878, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b720, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b6e4, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_b894(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_b894:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-2124 = alloca i32, align 4
  %v9_b894 = load i32, i32* @r6, align 4
  %v18_b894 = load i32, i32* @sb, align 4
  %v27_b894 = load i32, i32* @lr, align 4
  store i32 0, i32* @sl, align 4
  store i32 %arg1, i32* @fp, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_b8c4 = call i32 @function_12898(i32 %arg2, i32 4)
  %v0_b8c8 = load i32, i32* @r4, align 4
  store i32 %v0_b8c8, i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  %v0_b8d4 = load i32, i32* @sl, align 4
  store i32 %v0_b8d4, i32* @r3, align 4
  %v0_b8d8 = load i32, i32* @r5, align 4
  store i32 %v0_b8d8, i32* %r0.global-to-local, align 4
  %v1_b8dc = call i32 @function_8258(i32 %v0_b8d8)
  %v1_b8e8 = urem i32 %v1_b8dc, 256
  store i32 %v1_b8e8, i32* %ip.global-to-local, align 4
  %v0_b8ec = load i32, i32* @r4, align 4
  store i32 %v0_b8ec, i32* @r1, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.37 to i32), i32 -1), i32* @r3, align 4
  store i32 3, i32* @r2, align 4
  %v0_b8f8 = load i32, i32* @r5, align 4
  store i32 %v0_b8f8, i32* %r0.global-to-local, align 4
  %v1_b900 = call i32 @function_8258(i32 %v0_b8f8)
  %v0_b904 = load i32, i32* @r4, align 4
  store i32 %v0_b904, i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  store i32 64, i32* @r3, align 4
  %v0_b914 = load i32, i32* @r5, align 4
  store i32 %v0_b914, i32* %r0.global-to-local, align 4
  %v1_b918 = call i32 @function_8258(i32 %v0_b914)
  %v0_b920 = load i32, i32* @r4, align 4
  store i32 %v0_b920, i32* @r1, align 4
  %v1_b924 = urem i32 %v1_b918, 256
  store i32 %v1_b924, i32* %ip.global-to-local, align 4
  store i32 5, i32* @r2, align 4
  %v0_b92c = load i32, i32* @sl, align 4
  store i32 %v0_b92c, i32* @r3, align 4
  %v0_b930 = load i32, i32* @r5, align 4
  store i32 %v0_b930, i32* %r0.global-to-local, align 4
  %v1_b938 = call i32 @function_8258(i32 %v0_b930)
  %v1_b944 = urem i32 %v1_b938, 256
  store i32 %v1_b944, i32* %ip.global-to-local, align 4
  %v0_b948 = load i32, i32* @r4, align 4
  store i32 %v0_b948, i32* @r1, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.37 to i32), i32 -1), i32* @r3, align 4
  store i32 6, i32* @r2, align 4
  %v0_b954 = load i32, i32* @r5, align 4
  store i32 %v0_b954, i32* %r0.global-to-local, align 4
  %v1_b95c = call i32 @function_8258(i32 %v0_b954)
  %v0_b960 = load i32, i32* @r4, align 4
  store i32 %v0_b960, i32* @r1, align 4
  store i32 7, i32* @r2, align 4
  store i32 53, i32* @r3, align 4
  %v0_b970 = load i32, i32* @r5, align 4
  store i32 %v0_b970, i32* %r0.global-to-local, align 4
  %v1_b974 = call i32 @function_8258(i32 %v0_b970)
  %v0_b97c = load i32, i32* @r4, align 4
  store i32 %v0_b97c, i32* @r1, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.37 to i32), i32 -1), i32* @r3, align 4
  store i32 9, i32* @r2, align 4
  %v0_b98c = load i32, i32* @r5, align 4
  store i32 %v0_b98c, i32* %r0.global-to-local, align 4
  %v1_b990 = call i32 @function_8258(i32 %v0_b98c)
  %v0_b994 = load i32, i32* @r4, align 4
  store i32 %v0_b994, i32* @r1, align 4
  %v0_b99c = load i32, i32* @sl, align 4
  store i32 %v0_b99c, i32* @r2, align 4
  store i32 12, i32* @r3, align 4
  %v0_b9a4 = load i32, i32* @r5, align 4
  store i32 %v0_b9a4, i32* %r0.global-to-local, align 4
  %v1_b9a8 = call i32 @function_8258(i32 %v0_b9a4)
  store i32 8, i32* %r2.global-to-local, align 4
  %v0_b9b0 = load i32, i32* @sl, align 4
  store i32 %v0_b9b0, i32* %r3.global-to-local, align 4
  %v0_b9b4 = load i32, i32* @r4, align 4
  store i32 %v0_b9b4, i32* %r1.global-to-local, align 4
  %v0_b9bc = load i32, i32* @r5, align 4
  store i32 %v0_b9bc, i32* %r0.global-to-local, align 4
  %v5_b9c0 = inttoptr i32 %v0_b9b4 to i32*
  %v6_b9c0 = call i32 @function_8190(i32 %v0_b9bc, i32* %v5_b9c0, i32 8, i32 %v0_b9b0, i32 %v1_b9a8)
  store i32 %v6_b9c0, i32* @r7, align 4
  store i32 11, i32* %r0.global-to-local, align 4
  %v1_b9cc = call i32 @function_106dc(i32 11)
  %v0_b9d0 = load i32, i32* @sl, align 4
  store i32 %v0_b9d0, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r0.global-to-local, align 4
  %v2_b9d8 = inttoptr i32 %v0_b9d0 to i32*
  %v3_b9d8 = call i32 @function_10618(i32 11, i32* %v2_b9d8)
  store i32 %v3_b9d8, i32* %r0.global-to-local, align 4
  %v0_b9dc = load i32, i32* @sl, align 4
  store i32 %v0_b9dc, i32* %r1.global-to-local, align 4
  %v2_b9e0 = call i32 @function_11154(i32 %v3_b9d8, i32 %v0_b9dc)
  store i32 %v2_b9e0, i32* @r4, align 4
  store i32 11, i32* %r0.global-to-local, align 4
  %v1_b9ec = call i32 @function_1063c(i32 11)
  store i32 %v1_b9ec, i32* %r0.global-to-local, align 4
  %v0_b9f0 = load i32, i32* @r4, align 4
  %v1_b9f0 = load i32, i32* @sl, align 4
  %v9_b9f0 = icmp eq i32 %v0_b9f0, %v1_b9f0
  store i1 %v9_b9f0, i1* %cpsr_z.global-to-local, align 1
  %v5_b9f4 = icmp slt i32 %v0_b9f0, %v1_b9f0
  br i1 %v5_b9f4, label %dec_label_pc_bab0, label %dec_label_pc_b9f8

dec_label_pc_b9f8:                                ; preds = %dec_label_pc_b894
  %v2_b9fc = ptrtoint i32* %stack_var_-2124 to i32
  store i32 %v2_b9fc, i32* %sb.global-to-local, align 4
  store i32 2048, i32* %r2.global-to-local, align 4
  store i32 %v2_b9fc, i32* %r1.global-to-local, align 4
  store i32 %v0_b9f0, i32* %r0.global-to-local, align 4
  %v1_ba0c = call i32 @function_112e0(i32 %v0_b9f0)
  store i32 %v1_ba0c, i32* @r6, align 4
  %v0_ba14 = load i32, i32* @r4, align 4
  store i32 %v0_ba14, i32* %r0.global-to-local, align 4
  %v1_ba18 = call i32 @function_11548(i32 %v0_ba14)
  store i32 12, i32* %r0.global-to-local, align 4
  %v1_ba20 = call i32 @function_106dc(i32 12)
  %v0_ba24 = load i32, i32* @sl, align 4
  store i32 %v0_ba24, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r0.global-to-local, align 4
  %v2_ba2c = inttoptr i32 %v0_ba24 to i32*
  %v3_ba2c = call i32 @function_10618(i32 12, i32* %v2_ba2c)
  %v0_ba30 = load i32, i32* @r6, align 4
  store i32 %v0_ba30, i32* @r1, align 4
  store i32 %v3_ba2c, i32* %r2.global-to-local, align 4
  store i32 %v2_b9fc, i32* %r0.global-to-local, align 4
  %v3_ba3c = bitcast i32* %stack_var_-2124 to i8*
  %v4_ba3c = call i32 @function_10e8c(i8* %v3_ba3c, i32 %v0_ba30, i32 %v3_ba2c)
  store i32 %v4_ba3c, i32* @r8, align 4
  store i32 12, i32* %r0.global-to-local, align 4
  %v1_ba48 = call i32 @function_1063c(i32 12)
  store i32 %v1_ba48, i32* %r0.global-to-local, align 4
  %v0_ba4c = load i32, i32* @r8, align 4
  %v7_ba4c = icmp eq i32 %v0_ba4c, -1
  store i1 %v7_ba4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ba4c, label %dec_label_pc_bab0, label %dec_label_pc_ba54

dec_label_pc_ba54:                                ; preds = %dec_label_pc_b9f8
  %v0_ba54 = load i32, i32* @r6, align 4
  %v9_ba54 = icmp eq i32 %v0_ba54, %v0_ba4c
  store i1 %v9_ba54, i1* %cpsr_z.global-to-local, align 1
  %v7_ba58 = icmp sgt i32 %v0_ba54, %v0_ba4c
  br i1 %v7_ba58, label %dec_label_pc_ba5c, label %dec_label_pc_bab0

dec_label_pc_ba5c:                                ; preds = %dec_label_pc_ba54
  %v0_ba5c = load i32, i32* @sl, align 4
  store i32 %v0_ba5c, i32* %r1.global-to-local, align 4
  %v0_ba60 = load i32, i32* %sb.global-to-local, align 4
  %v2_ba60 = add i32 %v0_ba60, %v0_ba4c
  store i32 %v2_ba60, i32* %ip.global-to-local, align 4
  %v1_ba70 = add i32 %v0_ba54, -1
  br label %dec_label_pc_ba68

dec_label_pc_ba68:                                ; preds = %dec_label_pc_baa4, %dec_label_pc_ba5c
  %v0_baa4 = phi i32 [ %v1_baa4, %dec_label_pc_baa4 ], [ %v0_ba4c, %dec_label_pc_ba5c ]
  %v0_ba8c = phi i32 [ %v0_ba8c27, %dec_label_pc_baa4 ], [ %v0_ba5c, %dec_label_pc_ba5c ]
  %v0_ba6c = phi i32 [ %v0_ba6c23, %dec_label_pc_baa4 ], [ %v0_ba5c, %dec_label_pc_ba5c ]
  %v0_ba74 = phi i32 [ %v1_ba74, %dec_label_pc_baa4 ], [ %v2_ba60, %dec_label_pc_ba5c ]
  %v1_ba68 = inttoptr i32 %v0_ba74 to i8*
  %v2_ba68 = load i8, i8* %v1_ba68, align 1
  %v3_ba68 = zext i8 %v2_ba68 to i32
  store i32 %v3_ba68, i32* %r0.global-to-local, align 4
  %v2_ba6c = icmp eq i32 %v0_ba6c, 0
  store i1 %v2_ba6c, i1* %cpsr_z.global-to-local, align 1
  %v1_ba74 = add i32 %v0_ba74, 1
  store i32 %v1_ba74, i32* %ip.global-to-local, align 4
  %v1_ba78 = add nsw i32 %v3_ba68, -48
  store i32 %v1_ba78, i32* @lr, align 4
  br i1 %v2_ba6c, label %dec_label_pc_ba80, label %dec_label_pc_ba90

dec_label_pc_ba80:                                ; preds = %dec_label_pc_ba68
  %v7_ba80 = icmp eq i8 %v2_ba68, 9
  store i1 %v7_ba80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ba80, label %dec_label_pc_baa4, label %bb

bb:                                               ; preds = %dec_label_pc_ba80
  %v8_ba84 = icmp eq i8 %v2_ba68, 32
  store i1 %v8_ba84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_ba84, label %dec_label_pc_baa4, label %dec_label_pc_ba8c

dec_label_pc_ba8c:                                ; preds = %bb
  %v1_ba8c = add i32 %v0_ba8c, 1
  store i32 %v1_ba8c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_ba90

dec_label_pc_ba90:                                ; preds = %dec_label_pc_ba68, %dec_label_pc_ba8c
  %v0_ba8c28 = phi i32 [ %v0_ba8c, %dec_label_pc_ba68 ], [ %v1_ba8c, %dec_label_pc_ba8c ]
  %v0_ba6c24 = phi i32 [ %v0_ba6c, %dec_label_pc_ba68 ], [ %v1_ba8c, %dec_label_pc_ba8c ]
  %v7_ba90 = icmp eq i8 %v2_ba68, 46
  store i1 %v7_ba90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ba90, label %dec_label_pc_ba9c, label %bb113

bb113:                                            ; preds = %dec_label_pc_ba90
  %v3_ba94 = icmp ugt i32 %v1_ba78, 8
  %v8_ba94 = icmp eq i32 %v1_ba78, 9
  store i1 %v8_ba94, i1* %cpsr_z.global-to-local, align 1
  %v2_ba98 = xor i1 %v8_ba94, true
  %v3_ba98 = and i1 %v3_ba94, %v2_ba98
  br i1 %v3_ba98, label %dec_label_pc_bf04, label %dec_label_pc_ba9c

dec_label_pc_ba9c:                                ; preds = %dec_label_pc_ba90, %bb113
  %v9_ba9c = icmp eq i32 %v1_ba70, %v0_baa4
  store i1 %v9_ba9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ba9c, label %dec_label_pc_bf04, label %dec_label_pc_baa4

dec_label_pc_baa4:                                ; preds = %dec_label_pc_ba80, %dec_label_pc_ba9c, %bb
  %v0_ba8c27 = phi i32 [ %v0_ba8c, %dec_label_pc_ba80 ], [ %v0_ba8c28, %dec_label_pc_ba9c ], [ %v0_ba8c, %bb ]
  %v0_ba6c23 = phi i32 [ 0, %dec_label_pc_ba80 ], [ %v0_ba6c24, %dec_label_pc_ba9c ], [ 0, %bb ]
  %v1_baa4 = add i32 %v0_baa4, 1
  %v9_baa8 = icmp eq i32 %v1_baa4, %v0_ba54
  store i1 %v9_baa8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_baa8, label %dec_label_pc_bab0, label %dec_label_pc_ba68

dec_label_pc_bab0:                                ; preds = %dec_label_pc_baa4, %dec_label_pc_ba54, %dec_label_pc_b9f8, %dec_label_pc_b894
  %v0_bab0 = call i32 @function_d398()
  %v1_bab4 = urem i32 %v0_bab0, 4
  store i32 %v1_bab4, i32* %r0.global-to-local, align 4
  %v2_bab8 = icmp eq i32 %v1_bab4, 3
  store i1 %v2_bab8, i1* %cpsr_z.global-to-local, align 1
  %trunc = trunc i32 %v0_bab0 to i2
  switch i2 %trunc, label %dec_label_pc_bae410 [
    i2 0, label %dec_label_pc_bf50
    i2 1, label %dec_label_pc_bf64
    i2 -2, label %dec_label_pc_bf40
    i2 -1, label %dec_label_pc_bad4
  ]

dec_label_pc_bad4:                                ; preds = %dec_label_pc_bab0
  store i32 33686020, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_bae4

dec_label_pc_bae410:                              ; preds = %dec_label_pc_bab0
  unreachable

dec_label_pc_bae4:                                ; preds = %dec_label_pc_bf64, %dec_label_pc_bf50, %dec_label_pc_bf40, %dec_label_pc_bf04, %dec_label_pc_bad4
  %stack_var_-2184.0 = phi i32 [ 33686020, %dec_label_pc_bad4 ], [ 104859200, %dec_label_pc_bf40 ], [ 707416650, %dec_label_pc_bf64 ], [ 134744072, %dec_label_pc_bf50 ], [ %v1_bf34, %dec_label_pc_bf04 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_bae8 = call i32 @function_111c8(i32* null)
  %v0_baec = load i32, i32* @r7, align 4
  %v2_baec = icmp eq i32 %v0_baec, 0
  store i1 %v2_baec, i1* %cpsr_z.global-to-local, align 1
  %v1_baf0 = load i32, i32* @fp, align 4
  %v2_baf0 = add i32 %v1_baf0, %v2_bae8
  store i32 %v2_baf0, i32* %r0.global-to-local, align 4
  br i1 %v2_baec, label %dec_label_pc_bedc, label %dec_label_pc_bafc

dec_label_pc_bafc:                                ; preds = %dec_label_pc_bae4
  store i32 %v0_baec, i32* %r0.global-to-local, align 4
  %v1_bb00 = inttoptr i32 %v0_baec to i8*
  %v2_bb00 = call i32 @function_10b3c(i8* %v1_bb00)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_bb14 = call i32 @function_11d30(i32 2, i32 3, i32 17)
  store i32 %v3_bb14, i32* %r0.global-to-local, align 4
  %v7_bb18 = icmp eq i32 %v3_bb14, -1
  store i1 %v7_bb18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_bb18, label %dec_label_pc_bedc, label %dec_label_pc_bb24

dec_label_pc_bb24:                                ; preds = %dec_label_pc_bafc
  store i32 1, i32* %stack_var_-44, align 4
  %v6_bb2c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_bb2c, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_bb40 = call i32 @function_11cec(i32 %v3_bb14, i32 0, i32 3, i32 %v6_bb2c, i32 4)
  store i32 %v5_bb40, i32* %r0.global-to-local, align 4
  %v7_bb44 = icmp eq i32 %v5_bb40, -1
  store i1 %v7_bb44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_bb44, label %dec_label_pc_bed4, label %dec_label_pc_bb4c

dec_label_pc_bb4c:                                ; preds = %dec_label_pc_bb24
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v3_bb60 = mul i32 %v1_b900, 65536
  store i32 %v3_bb60, i32* %r6.global-to-local, align 4
  %v3_bb68 = mul i32 %v1_b974, 65536
  store i32 %v3_bb68, i32* %sb.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v3_bb78 = urem i32 %v1_b900, 65536
  %v3_bb7c = urem i32 %v1_b95c, 65536
  store i32 %v3_bb7c, i32* %r0.global-to-local, align 4
  %v3_bb80 = urem i32 %v1_b974, 65536
  store i32 %v3_bb80, i32* %r1.global-to-local, align 4
  %v3_bb84 = urem i32 %v1_b990, 65536
  store i32 %v3_bb84, i32* %r2.global-to-local, align 4
  %v2_bb88 = icmp eq i32 %arg2, 0
  store i1 %v2_bb88, i1* %cpsr_z.global-to-local, align 1
  %v1_bb8c = urem i32 %v1_b9a8, 256
  store i32 %v1_bb8c, i32* @sl, align 4
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_bb88, label %dec_label_pc_beec.critedge, label %dec_label_pc_bba8

dec_label_pc_bba8:                                ; preds = %dec_label_pc_bb4c
  %v3_bb5c = mul i32 %v1_b990, 65536
  %v2_bbb4 = add i32 %v2_bb00, %v1_bb8c
  %v3_bbb8 = mul i32 %v2_bbb4, 65536
  %v1_bbc4 = add i32 %v3_bbb8, 1769472
  %tmp114 = mul nuw nsw i32 %v3_bb80, 256
  %v3_bbc8 = and i32 %tmp114, 65280
  %v1_bbcc = add i32 %v3_bbb8, 3080192
  %tmp115 = udiv i32 %v1_b974, 256
  %v4_bbdc = urem i32 %tmp115, 256
  %v5_bbdc = or i32 %v3_bbc8, %v4_bbdc
  store i32 %v5_bbdc, i32* @sb, align 4
  store i32 %v3_bb5c, i32* %ip.global-to-local, align 4
  %tmp116 = udiv i32 %v1_bbc4, 256
  %v3_bbe4 = and i32 %tmp116, 65280
  %tmp117 = udiv i32 %v1_bbcc, 256
  %v3_bbe8 = and i32 %tmp117, 65280
  store i32 %v3_bbe8, i32* %r2.global-to-local, align 4
  %tmp118 = mul i32 %v1_b990, 256
  %v3_bbec = and i32 %tmp118, 65280
  %v4_bbf0 = udiv i32 %v1_bbc4, 16777216
  %v5_bbf0 = or i32 %v3_bbe4, %v4_bbf0
  store i32 %v5_bbf0, i32* @fp, align 4
  %tmp119 = mul i32 %v1_b900, 256
  %v3_bbf8 = and i32 %tmp119, 65280
  store i32 %v3_bbf8, i32* %r1.global-to-local, align 4
  %v4_bbfc = udiv i32 %v1_bbcc, 16777216
  %v5_bbfc = or i32 %v3_bbe8, %v4_bbfc
  store i32 %v5_bbfc, i32* %r3.global-to-local, align 4
  %tmp120 = udiv i32 %v1_b990, 256
  %v4_bc00 = urem i32 %tmp120, 256
  %v5_bc00 = or i32 %v4_bc00, %v3_bbec
  store i32 %v5_bc00, i32* @r4, align 4
  store i32 %v2_bb00, i32* @lr, align 4
  %tmp121 = udiv i32 %v1_b900, 256
  %v4_bc08 = urem i32 %tmp121, 256
  %v5_bc08 = or i32 %v4_bc08, %v3_bbf8
  %tmp122 = mul i32 %v1_b95c, 256
  %v3_bc0c = and i32 %tmp122, 65280
  store i32 %v3_bc0c, i32* %r0.global-to-local, align 4
  %tmp123 = udiv i32 %v1_b95c, 256
  %v4_bc1c = urem i32 %tmp123, 256
  %v5_bc1c = or i32 %v4_bc1c, %v3_bc0c
  store i32 %v5_bc1c, i32* @r8, align 4
  store i32 0, i32* @r5, align 4
  %v1_bc24 = add i32 %v2_bb00, 1
  store i32 %v1_bc24, i32* @r6, align 4
  %v1_bc6c = trunc i32 %v1_b8dc to i8
  %sext = mul i32 %v1_b918, 16777216
  %v4_bc70 = sdiv i32 %sext, 16777216
  %sext6 = mul nuw i32 %v5_bbfc, 65536
  %v4_bc78 = sdiv i32 %sext6, 65536
  %sext7 = mul nuw i32 %v5_bc08, 65536
  %v4_bc7c = sdiv i32 %sext7, 65536
  %sext8 = mul nuw i32 %v5_bc00, 65536
  %v4_bcd8 = sdiv i32 %sext8, 65536
  %v2_bcfc = icmp eq i32 %v2_bb00, 0
  %tmp124 = icmp slt i32 %v2_bb00, 1
  %v1_bc84 = trunc i32 %v4_bc70 to i8
  br label %dec_label_pc_bc28

dec_label_pc_bc28:                                ; preds = %dec_label_pc_bd48, %dec_label_pc_bba8
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 600, i32* %r0.global-to-local, align 4
  %v2_bc30 = call i32 @function_12898(i32 600, i32 1)
  store i32 %v2_bc30, i32* %r0.global-to-local, align 4
  store i32 %v2_b8c4, i32* %r1.global-to-local, align 4
  %v3_bc38 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_bc38, i32* %r3.global-to-local, align 4
  %v2_bc3c = load i32, i32* @r5, align 4
  %v5_bc3c = mul i32 %v2_bc3c, 4
  %v6_bc3c = add i32 %v5_bc3c, %v2_b8c4
  %v7_bc3c = inttoptr i32 %v6_bc3c to i32*
  store i32 %v2_bc30, i32* %v7_bc3c, align 4
  %v0_bc40 = load i32, i32* %r1.global-to-local, align 4
  %v1_bc40 = load i32, i32* %r3.global-to-local, align 4
  %v4_bc40 = mul i32 %v1_bc40, 4
  %v5_bc40 = add i32 %v4_bc40, %v0_bc40
  %v6_bc40 = inttoptr i32 %v5_bc40 to i32*
  %v7_bc40 = load i32, i32* %v6_bc40, align 4
  store i32 %v7_bc40, i32* %r1.global-to-local, align 4
  %v1_bc44 = inttoptr i32 %v7_bc40 to i8*
  %v2_bc44 = load i8, i8* %v1_bc44, align 1
  %tmp = urem i8 %v2_bc44, 16
  %v1_bc48 = zext i8 %tmp to i32
  %v1_bc4c = or i32 %v1_bc48, 64
  store i32 %v1_bc4c, i32* %r2.global-to-local, align 4
  %v1_bc50 = trunc i32 %v1_bc4c to i8
  store i8 %v1_bc50, i8* %v1_bc44, align 1
  %v0_bc54 = load i32, i32* %r1.global-to-local, align 4
  %v1_bc54 = inttoptr i32 %v0_bc54 to i8*
  %v2_bc54 = load i8, i8* %v1_bc54, align 1
  %v1_bc58 = and i8 %v2_bc54, -16
  %v1_bc5c = or i8 %v1_bc58, 5
  store i32 %v1_b944, i32* %ip.global-to-local, align 4
  store i8 %v1_bc5c, i8* %v1_bc54, align 1
  store i32 %v1_b8e8, i32* %lr.global-to-local, align 4
  %v2_bc6c = load i32, i32* %r1.global-to-local, align 4
  %v3_bc6c = add i32 %v2_bc6c, 1
  %v4_bc6c = inttoptr i32 %v3_bc6c to i8*
  store i8 %v1_bc6c, i8* %v4_bc6c, align 1
  store i32 %v4_bc70, i32* %r3.global-to-local, align 4
  %v0_bc74 = load i32, i32* %ip.global-to-local, align 4
  %v2_bc74 = icmp eq i32 %v0_bc74, 0
  store i1 %v2_bc74, i1* %cpsr_z.global-to-local, align 1
  store i32 %v4_bc78, i32* %r0.global-to-local, align 4
  store i32 %v4_bc7c, i32* %r2.global-to-local, align 4
  br i1 %v2_bc74, label %bb126, label %bb125

bb125:                                            ; preds = %dec_label_pc_bc28
  store i32 64, i32* %lr.global-to-local, align 4
  br label %bb126

bb126:                                            ; preds = %dec_label_pc_bc28, %bb125
  %v2_bc84 = load i32, i32* %r1.global-to-local, align 4
  %v3_bc84 = add i32 %v2_bc84, 8
  %v4_bc84 = inttoptr i32 %v3_bc84 to i8*
  store i8 %v1_bc84, i8* %v4_bc84, align 1
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_bc8c = load i32, i32* %r1.global-to-local, align 4
  %v3_bc8c = add i32 %v2_bc8c, 9
  %v4_bc8c = inttoptr i32 %v3_bc8c to i8*
  store i8 17, i8* %v4_bc8c, align 1
  %v0_bc90 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_bc90, label %bb128, label %bb127

bb127:                                            ; preds = %bb126
  %v1_bc90 = load i32, i32* %lr.global-to-local, align 4
  %v2_bc90 = trunc i32 %v1_bc90 to i16
  %v3_bc90 = load i32, i32* %r1.global-to-local, align 4
  %v4_bc90 = add i32 %v3_bc90, 6
  %v5_bc90 = inttoptr i32 %v4_bc90 to i16*
  store i16 %v2_bc90, i16* %v5_bc90, align 2
  br label %bb128

bb128:                                            ; preds = %bb126, %bb127
  store i32 ptrtoint (i32* @global_var_21644.39 to i32), i32* @lr, align 4
  %v0_bc98 = load i32, i32* %r0.global-to-local, align 4
  %v1_bc98 = trunc i32 %v0_bc98 to i16
  %v2_bc98 = load i32, i32* %r1.global-to-local, align 4
  %v3_bc98 = add i32 %v2_bc98, 2
  %v4_bc98 = inttoptr i32 %v3_bc98 to i16*
  store i16 %v1_bc98, i16* %v4_bc98, align 2
  %v0_bc9c = load i32, i32* %r2.global-to-local, align 4
  %v1_bc9c = trunc i32 %v0_bc9c to i16
  %v2_bc9c = load i32, i32* %r1.global-to-local, align 4
  %v3_bc9c = add i32 %v2_bc9c, 4
  %v4_bc9c = inttoptr i32 %v3_bc9c to i16*
  store i16 %v1_bc9c, i16* %v4_bc9c, align 2
  %v2_bca0 = load i32, i32* @global_var_21644.39, align 4
  store i32 %v2_bca0, i32* %r3.global-to-local, align 4
  %v0_bca4 = load i32, i32* %r1.global-to-local, align 4
  %v1_bca4 = add i32 %v0_bca4, 20
  store i32 %v1_bca4, i32* %r0.global-to-local, align 4
  %v1_bca8 = add i32 %v0_bca4, 41
  store i32 %v1_bca8, i32* %r2.global-to-local, align 4
  %v0_bcac = load i32, i32* @fp, align 4
  %v1_bcac = trunc i32 %v0_bcac to i16
  %v3_bcac = add i32 %v0_bca4, 24
  %v4_bcac = inttoptr i32 %v3_bcac to i16*
  store i16 %v1_bcac, i16* %v4_bcac, align 2
  %v0_bcb0 = load i32, i32* @sb, align 4
  %v1_bcb0 = trunc i32 %v0_bcb0 to i16
  %v2_bcb0 = load i32, i32* %r0.global-to-local, align 4
  %v3_bcb0 = add i32 %v2_bcb0, 2
  %v4_bcb0 = inttoptr i32 %v3_bcb0 to i16*
  store i16 %v1_bcb0, i16* %v4_bcb0, align 2
  %v0_bcb4 = load i32, i32* %r1.global-to-local, align 4
  %v1_bcb4 = add i32 %v0_bcb4, 28
  store i32 %v1_bcb4, i32* %ip.global-to-local, align 4
  %v0_bcb8 = load i32, i32* %r2.global-to-local, align 4
  %v1_bcb8 = load i32, i32* @sl, align 4
  %v2_bcb8 = add i32 %v1_bcb8, %v0_bcb8
  store i32 %v2_bcb8, i32* @r4, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_bcc4 = load i32, i32* @r8, align 4
  %v1_bcc4 = trunc i32 %v0_bcc4 to i16
  %v3_bcc4 = add i32 %v0_bcb4, 20
  %v4_bcc4 = inttoptr i32 %v3_bcc4 to i16*
  store i16 %v1_bcc4, i16* %v4_bcc4, align 2
  %v0_bcc8 = load i32, i32* %r3.global-to-local, align 4
  %v1_bcc8 = load i32, i32* %r1.global-to-local, align 4
  %v2_bcc8 = add i32 %v1_bcc8, 12
  %v3_bcc8 = inttoptr i32 %v2_bcc8 to i32*
  store i32 %v0_bcc8, i32* %v3_bcc8, align 4
  %v0_bccc = load i32, i32* %r0.global-to-local, align 4
  %v1_bccc = trunc i32 %v0_bccc to i16
  %v2_bccc = load i32, i32* %ip.global-to-local, align 4
  %v3_bccc = add i32 %v2_bccc, 4
  %v4_bccc = inttoptr i32 %v3_bccc to i16*
  store i16 %v1_bccc, i16* %v4_bccc, align 2
  %v0_bcd0 = load i32, i32* %r2.global-to-local, align 4
  %v1_bcd0 = trunc i32 %v0_bcd0 to i16
  %v2_bcd0 = load i32, i32* %ip.global-to-local, align 4
  %v3_bcd0 = add i32 %v2_bcd0, 2
  %v4_bcd0 = inttoptr i32 %v3_bcd0 to i16*
  store i16 %v1_bcd0, i16* %v4_bcd0, align 2
  store i32 %stack_var_-2184.0, i32* %r3.global-to-local, align 4
  store i32 %v4_bcd8, i32* %ip.global-to-local, align 4
  %v1_bcdc = load i32, i32* %r1.global-to-local, align 4
  %v2_bcdc = add i32 %v1_bcdc, 16
  %v3_bcdc = inttoptr i32 %v2_bcdc to i32*
  store i32 %stack_var_-2184.0, i32* %v3_bcdc, align 4
  %v0_bce0 = load i32, i32* %ip.global-to-local, align 4
  %v1_bce0 = trunc i32 %v0_bce0 to i16
  %v2_bce0 = load i32, i32* %r1.global-to-local, align 4
  %v3_bce0 = add i32 %v2_bce0, 28
  %v4_bce0 = inttoptr i32 %v3_bce0 to i16*
  store i16 %v1_bce0, i16* %v4_bce0, align 2
  %v0_bce4 = load i32, i32* @sl, align 4
  %v1_bce4 = trunc i32 %v0_bce4 to i8
  %v2_bce4 = load i32, i32* %r1.global-to-local, align 4
  %v3_bce4 = add i32 %v2_bce4, 40
  %v4_bce4 = inttoptr i32 %v3_bce4 to i8*
  store i8 %v1_bce4, i8* %v4_bce4, align 1
  %v0_bce8 = load i32, i32* @r4, align 4
  %v1_bce8 = add i32 %v0_bce8, 1
  store i32 %v1_bce8, i32* %r0.global-to-local, align 4
  %v0_bcec = load i32, i32* @r7, align 4
  store i32 %v0_bcec, i32* %r1.global-to-local, align 4
  %v0_bcf0 = load i32, i32* @r6, align 4
  store i32 %v0_bcf0, i32* %r2.global-to-local, align 4
  %v3_bcf4 = call i32 @function_10bac(i32 %v1_bce8, i32 %v0_bcec, i32 %v0_bcf0)
  store i32 %v3_bcf4, i32* %r0.global-to-local, align 4
  store i32 %v2_bb00, i32* %lr.global-to-local, align 4
  store i1 %v2_bcfc, i1* %cpsr_z.global-to-local, align 1
  br i1 %tmp124, label %.dec_label_pc_bd48_crit_edge, label %dec_label_pc_bd0c

.dec_label_pc_bd48_crit_edge:                     ; preds = %bb128
  %v5_bd00 = load i32, i32* @r4, align 4
  store i32 %v5_bd00, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_bd48

dec_label_pc_bd0c:                                ; preds = %bb128
  store i32 0, i32* %ip.global-to-local, align 4
  %v0_bd10 = load i32, i32* @r4, align 4
  store i32 %v0_bd10, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_bd18

dec_label_pc_bd18:                                ; preds = %.thread21, %dec_label_pc_bd0c
  %v1_bd20 = phi i32 [ %v1_bd2035, %.thread21 ], [ 0, %dec_label_pc_bd0c ]
  %v0_bd3419 = phi i32 [ %v0_bd40, %.thread21 ], [ 0, %dec_label_pc_bd0c ]
  %v1_bd18 = load i32, i32* @r7, align 4
  %v2_bd18 = add i32 %v1_bd18, %v0_bd3419
  %v3_bd18 = inttoptr i32 %v2_bd18 to i8*
  %v4_bd18 = load i8, i8* %v3_bd18, align 1
  %v6_bd18 = zext i8 %v4_bd18 to i32
  store i32 %v6_bd18, i32* %r3.global-to-local, align 4
  %v7_bd1c = icmp eq i8 %v4_bd18, 46
  store i1 %v7_bd1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_bd1c, label %bb129, label %bb131

bb129:                                            ; preds = %dec_label_pc_bd18
  %v2_bd20 = trunc i32 %v1_bd20 to i8
  %v3_bd20 = load i32, i32* %r0.global-to-local, align 4
  %v4_bd20 = inttoptr i32 %v3_bd20 to i8*
  store i8 %v2_bd20, i8* %v4_bd20, align 1
  %v0_bd28.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_bd24 = load i32, i32* %ip.global-to-local, align 4
  %v1_bd24 = add i32 %v0_bd24, 1
  store i32 %v1_bd24, i32* %r2.global-to-local, align 4
  br i1 %v0_bd28.pr, label %bb132, label %bb130

bb130:                                            ; preds = %bb129
  %v2_bd2817 = urem i32 %v1_bd24, 256
  store i32 %v2_bd2817, i32* %ip.global-to-local, align 4
  store i32 %v2_bb00, i32* %r2.global-to-local, align 4
  %v0_bd34.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_bd34 = add i32 %v0_bd34.pre, 1
  store i32 %v1_bd34, i32* %r1.global-to-local, align 4
  br label %.thread21

bb131:                                            ; preds = %dec_label_pc_bd18
  %v1_bd2413 = add nsw i32 %v1_bd20, 1
  %v2_bd28 = urem i32 %v1_bd2413, 256
  store i32 %v2_bd28, i32* %ip.global-to-local, align 4
  store i32 %v2_bb00, i32* %r2.global-to-local, align 4
  %v1_bd3420 = add i32 %v0_bd3419, 1
  store i32 %v1_bd3420, i32* %r1.global-to-local, align 4
  br label %.thread21

bb132:                                            ; preds = %bb129
  store i32 %v2_bb00, i32* %r2.global-to-local, align 4
  %v1_bd30.pre = load i32, i32* %r1.global-to-local, align 4
  %v2_bd30 = load i32, i32* @r4, align 4
  %v3_bd30 = add i32 %v2_bd30, %v1_bd30.pre
  store i32 %v3_bd30, i32* %r3.global-to-local, align 4
  %v1_bd3465 = add i32 %v1_bd30.pre, 1
  store i32 %v1_bd3465, i32* %r1.global-to-local, align 4
  %v2_bd38 = add i32 %v3_bd30, 1
  store i32 %v2_bd38, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %.thread21

.thread21:                                        ; preds = %bb131, %bb130, %bb132
  %v0_bd40 = phi i32 [ %v1_bd34, %bb130 ], [ %v1_bd3420, %bb131 ], [ %v1_bd3465, %bb132 ]
  %v1_bd2035 = phi i32 [ %v2_bd2817, %bb130 ], [ %v2_bd28, %bb131 ], [ 0, %bb132 ]
  %v9_bd40 = icmp eq i32 %v0_bd40, %v2_bb00
  store i1 %v9_bd40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_bd40, label %dec_label_pc_bd48.loopexit, label %dec_label_pc_bd18

dec_label_pc_bd48.loopexit:                       ; preds = %.thread21
  %v2_bd48.pre = load i32, i32* %r0.global-to-local, align 4
  %extract.t71 = trunc i32 %v1_bd2035 to i8
  br label %dec_label_pc_bd48

dec_label_pc_bd48:                                ; preds = %.dec_label_pc_bd48_crit_edge, %dec_label_pc_bd48.loopexit
  %v0_bd48.pre.sink.off0 = phi i8 [ 0, %.dec_label_pc_bd48_crit_edge ], [ %extract.t71, %dec_label_pc_bd48.loopexit ]
  %v2_bd48 = phi i32 [ %v5_bd00, %.dec_label_pc_bd48_crit_edge ], [ %v2_bd48.pre, %dec_label_pc_bd48.loopexit ]
  %v3_bd48 = inttoptr i32 %v2_bd48 to i8*
  store i8 %v0_bd48.pre.sink.off0, i8* %v3_bd48, align 1
  %v3_bd4c = load i32, i32* %stack_var_-44, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  %v1_bd54 = add i32 %v3_bd4c, 1
  store i32 %v1_bd54, i32* @r5, align 4
  store i32 %v2_bb00, i32* %r3.global-to-local, align 4
  store i32 256, i32* @lr, align 4
  %v0_bd60 = load i32, i32* @r4, align 4
  %v2_bd60 = add i32 %v0_bd60, %v2_bb00
  store i32 %v2_bd60, i32* %r2.global-to-local, align 4
  %v9_bd64 = icmp eq i32 %v1_bd54, %arg2
  store i1 %v9_bd64, i1* %cpsr_z.global-to-local, align 1
  %v3_bd68 = add i32 %v2_bd60, 4
  %v4_bd68 = inttoptr i32 %v3_bd68 to i16*
  store i16 256, i16* %v4_bd68, align 2
  %v0_bd6c = load i32, i32* @lr, align 4
  %v1_bd6c = trunc i32 %v0_bd6c to i16
  %v2_bd6c = load i32, i32* %r2.global-to-local, align 4
  %v3_bd6c = add i32 %v2_bd6c, 2
  %v4_bd6c = inttoptr i32 %v3_bd6c to i16*
  store i16 %v1_bd6c, i16* %v4_bd6c, align 2
  %v0_bd70 = load i32, i32* @r5, align 4
  store i32 %v0_bd70, i32* %stack_var_-44, align 4
  %v8_bd74 = icmp slt i32 %v1_bd54, %arg2
  br i1 %v8_bd74, label %dec_label_pc_bc28, label %dec_label_pc_bd78

dec_label_pc_bd78:                                ; preds = %dec_label_pc_bd48, %dec_label_pc_beec
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i1 %v2_bb88, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_bb88, label %dec_label_pc_beec, label %dec_label_pc_bd8c

dec_label_pc_bd8c:                                ; preds = %dec_label_pc_bd78
  store i32 %v2_bb00, i32* %r1.global-to-local, align 4
  %v1_bd90 = load i32, i32* @sl, align 4
  %v2_bd90 = add i32 %v1_bd90, %v2_bb00
  store i32 %v2_bd90, i32* %r3.global-to-local, align 4
  %v1_bd94 = add i32 %v2_bd90, 47
  store i32 %v1_bd94, i32* @fp, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_bd9c = add i32 %v2_bd90, 27
  store i32 %v1_bd9c, i32* @sb, align 4
  %v9_be78 = icmp eq i32 %v3_bb78, add (i32 ptrtoint (i32* @global_var_10000.37 to i32), i32 -1)
  %v9_bda8 = icmp eq i32 %v3_bb7c, add (i32 ptrtoint (i32* @global_var_10000.37 to i32), i32 -1)
  br label %dec_label_pc_be64

dec_label_pc_bda4:                                ; preds = %dec_label_pc_be64
  store i32 %v3_bb7c, i32* @ip, align 4
  store i1 %v9_bda8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_bda8, label %dec_label_pc_bea0, label %dec_label_pc_bdb0

dec_label_pc_bdb0:                                ; preds = %dec_label_pc_be8c.dec_label_pc_bdb0_crit_edge, %dec_label_pc_bda4
  %v1_bdb4 = phi i32 [ %v1_bdb4.pre, %dec_label_pc_be8c.dec_label_pc_bdb0_crit_edge ], [ add (i32 ptrtoint (i32* @global_var_10000.37 to i32), i32 -1), %dec_label_pc_bda4 ]
  store i32 %v3_bb80, i32* @lr, align 4
  %v9_bdb4 = icmp eq i32 %v3_bb80, %v1_bdb4
  store i1 %v9_bdb4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_bdb4, label %dec_label_pc_beb4, label %dec_label_pc_bdbc

dec_label_pc_bdbc:                                ; preds = %dec_label_pc_bea0.dec_label_pc_bdbc_crit_edge, %dec_label_pc_bdb0
  %v1_bdc0 = phi i32 [ %v1_bdc0.pre, %dec_label_pc_bea0.dec_label_pc_bdbc_crit_edge ], [ %v1_bdb4, %dec_label_pc_bdb0 ]
  store i32 %v3_bb84, i32* %r0.global-to-local, align 4
  %v9_bdc0 = icmp eq i32 %v3_bb84, %v1_bdc0
  store i1 %v9_bdc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_bdc0, label %dec_label_pc_bec8, label %dec_label_pc_bdc8

dec_label_pc_bdc8:                                ; preds = %dec_label_pc_beb4, %dec_label_pc_bdbc, %dec_label_pc_bec8
  %v0_bdc8 = load i32, i32* @r7, align 4
  store i32 %v0_bdc8, i32* %r0.global-to-local, align 4
  %v0_bdcc = load i32, i32* @sl, align 4
  store i32 %v0_bdcc, i32* %r1.global-to-local, align 4
  %v2_bdd0 = call i32 @function_d45c(i32 %v0_bdc8, i32 %v0_bdcc)
  %v0_bdd4 = load i32, i32* @r8, align 4
  %v1_bdd4 = trunc i32 %v0_bdd4 to i8
  %v2_bdd4 = load i32, i32* @r7, align 4
  %v3_bdd4 = load i32, i32* @sl, align 4
  %v4_bdd4 = add i32 %v3_bdd4, %v2_bdd4
  %v5_bdd4 = inttoptr i32 %v4_bdd4 to i8*
  store i8 %v1_bdd4, i8* %v5_bdd4, align 1
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_bddc = load i32, i32* @r8, align 4
  %v1_bddc = trunc i32 %v0_bddc to i16
  %v2_bddc = load i32, i32* @r4, align 4
  %v3_bddc = add i32 %v2_bddc, 10
  %v4_bddc = inttoptr i32 %v3_bddc to i16*
  store i16 %v1_bddc, i16* %v4_bddc, align 2
  %v0_bde0 = load i32, i32* @r4, align 4
  store i32 %v0_bde0, i32* @r0, align 4
  %v2_bde4 = call i32 @function_bf78(i32 %v0_bde0, i32 20)
  %v3_bde4 = trunc i32 %v2_bde4 to i16
  store i32 %v2_bde4, i32* %r0.global-to-local, align 4
  %v3_bde8 = load i32, i32* @r4, align 4
  %v4_bde8 = add i32 %v3_bde8, 10
  %v5_bde8 = inttoptr i32 %v4_bde8 to i16*
  store i16 %v3_bde4, i16* %v5_bde8, align 2
  %v0_bdec = load i32, i32* @r6, align 4
  store i32 %v0_bdec, i32* @r1, align 4
  %v1_bdf0 = add i32 %v0_bdec, 4
  %v2_bdf0 = inttoptr i32 %v1_bdf0 to i16*
  %v3_bdf0 = load i16, i16* %v2_bdf0, align 2
  %v4_bdf0 = zext i16 %v3_bdf0 to i32
  store i32 %v4_bdf0, i32* %r2.global-to-local, align 4
  %v0_bdf4 = load i32, i32* @r8, align 4
  %v1_bdf4 = trunc i32 %v0_bdf4 to i16
  %v3_bdf4 = add i32 %v0_bdec, 6
  %v4_bdf4 = inttoptr i32 %v3_bdf4 to i16*
  store i16 %v1_bdf4, i16* %v4_bdf4, align 2
  %v0_bdf8 = load i32, i32* @sb, align 4
  store i32 %v0_bdf8, i32* %r3.global-to-local, align 4
  %v0_bdfc = load i32, i32* @r4, align 4
  store i32 %v0_bdfc, i32* %r0.global-to-local, align 4
  %v4_be00 = call i32 @function_bfc8(i32 %v0_bdfc, i32 %v0_bdec, i32 %v4_bdf0, i32 %v0_bdf8)
  %v5_be00 = trunc i32 %v4_be00 to i16
  store i32 %v4_be00, i32* %r0.global-to-local, align 4
  %v3_be04 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_be04, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r1.global-to-local, align 4
  %v3_be0c = mul i32 %v3_be04, 32
  store i32 %v3_be0c, i32* %ip.global-to-local, align 4
  %v3_be10 = load i32, i32* @r6, align 4
  %v4_be10 = add i32 %v3_be10, 6
  %v5_be10 = inttoptr i32 %v4_be10 to i16*
  store i16 %v5_be00, i16* %v5_be10, align 2
  store i32 %stack_var_-2184.0, i32* %r2.global-to-local, align 4
  %v0_be18 = load i32, i32* @r6, align 4
  %v1_be18 = add i32 %v0_be18, 2
  %v2_be18 = inttoptr i32 %v1_be18 to i16*
  %v3_be18 = load i16, i16* %v2_be18, align 2
  %v4_be18 = zext i16 %v3_be18 to i32
  store i32 %v4_be18, i32* %r6.global-to-local, align 4
  %v0_be1c = load i32, i32* %ip.global-to-local, align 4
  %v1_be1c = load i32, i32* %r3.global-to-local, align 4
  %tmp135 = mul i32 %v1_be1c, -8
  %v5_be1c = add i32 %v0_be1c, %tmp135
  %v1_be20 = load i32, i32* %r1.global-to-local, align 4
  %v2_be20 = add i32 %v1_be20, %v5_be1c
  store i32 %v2_be20, i32* %ip.global-to-local, align 4
  %v2_be24 = add i32 %v2_be20, 4
  %v3_be24 = inttoptr i32 %v2_be24 to i32*
  store i32 %stack_var_-2184.0, i32* %v3_be24, align 4
  %v0_be28 = load i32, i32* %r6.global-to-local, align 4
  %v1_be28 = trunc i32 %v0_be28 to i16
  %v2_be28 = load i32, i32* %ip.global-to-local, align 4
  %v3_be28 = add i32 %v2_be28, 2
  %v4_be28 = inttoptr i32 %v3_be28 to i16*
  store i16 %v1_be28, i16* %v4_be28, align 2
  %v0_be2c = load i32, i32* @r4, align 4
  store i32 %v0_be2c, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 %v3_bb14, i32* %r0.global-to-local, align 4
  %v0_be38 = load i32, i32* @fp, align 4
  store i32 %v0_be38, i32* %r2.global-to-local, align 4
  store i32 16, i32* @r4, align 4
  %v0_be40 = load i32, i32* %ip.global-to-local, align 4
  %v6_be48 = call i32 @function_11cac(i32 %v3_bb14, i32 %v0_be2c, i32 %v0_be38, i32 16384, i32 %v0_be40, i32 16)
  %v3_be4c = load i32, i32* %stack_var_-44, align 4
  %v1_be50 = add i32 %v3_be4c, 1
  store i32 %v1_be50, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v9_be58 = icmp eq i32 %v1_be50, %arg2
  store i1 %v9_be58, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_be50, i32* %stack_var_-44, align 4
  %v7_be60 = icmp slt i32 %v1_be50, %arg2
  br i1 %v7_be60, label %dec_label_pc_be64, label %dec_label_pc_beec

dec_label_pc_be64:                                ; preds = %dec_label_pc_bdc8, %dec_label_pc_bd8c
  %v1_be70 = phi i32 [ %v1_be50, %dec_label_pc_bdc8 ], [ 0, %dec_label_pc_bd8c ]
  store i32 %v2_b8c4, i32* %r2.global-to-local, align 4
  store i32 %v3_bb78, i32* @r3, align 4
  %v4_be70 = mul i32 %v1_be70, 4
  %v5_be70 = add i32 %v4_be70, %v2_b8c4
  %v6_be70 = inttoptr i32 %v5_be70 to i32*
  %v7_be70 = load i32, i32* %v6_be70, align 4
  store i32 %v7_be70, i32* @r4, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.37 to i32), i32 -1), i32* @r5, align 4
  store i1 %v9_be78, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* @r8, align 4
  %v1_be80 = add i32 %v7_be70, 20
  store i32 %v1_be80, i32* @r6, align 4
  %v1_be84 = add i32 %v7_be70, 41
  store i32 %v1_be84, i32* @r7, align 4
  br i1 %v9_be78, label %dec_label_pc_be8c, label %dec_label_pc_bda4

dec_label_pc_be8c:                                ; preds = %dec_label_pc_be64
  %v0_be8c = call i32 @function_d398()
  %v1_be8c = trunc i32 %v0_be8c to i16
  store i32 %v0_be8c, i32* %r0.global-to-local, align 4
  store i32 %v3_bb7c, i32* @ip, align 4
  %v1_be94 = load i32, i32* @r5, align 4
  %v9_be94 = icmp eq i32 %v3_bb7c, %v1_be94
  store i1 %v9_be94, i1* %cpsr_z.global-to-local, align 1
  %v3_be98 = load i32, i32* @r4, align 4
  %v4_be98 = add i32 %v3_be98, 4
  %v5_be98 = inttoptr i32 %v4_be98 to i16*
  store i16 %v1_be8c, i16* %v5_be98, align 2
  br i1 %v9_be94, label %dec_label_pc_bea0, label %dec_label_pc_be8c.dec_label_pc_bdb0_crit_edge

dec_label_pc_be8c.dec_label_pc_bdb0_crit_edge:    ; preds = %dec_label_pc_be8c
  %v1_bdb4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_bdb0

dec_label_pc_bea0:                                ; preds = %dec_label_pc_be8c, %dec_label_pc_bda4
  %v0_bea0 = call i32 @function_d398()
  %v1_bea0 = trunc i32 %v0_bea0 to i16
  store i32 %v0_bea0, i32* %r0.global-to-local, align 4
  store i32 %v3_bb80, i32* @lr, align 4
  %v1_bea8 = load i32, i32* @r5, align 4
  %v9_bea8 = icmp eq i32 %v3_bb80, %v1_bea8
  store i1 %v9_bea8, i1* %cpsr_z.global-to-local, align 1
  %v3_beac = load i32, i32* @r4, align 4
  %v4_beac = add i32 %v3_beac, 20
  %v5_beac = inttoptr i32 %v4_beac to i16*
  store i16 %v1_bea0, i16* %v5_beac, align 2
  br i1 %v9_bea8, label %dec_label_pc_beb4, label %dec_label_pc_bea0.dec_label_pc_bdbc_crit_edge

dec_label_pc_bea0.dec_label_pc_bdbc_crit_edge:    ; preds = %dec_label_pc_bea0
  %v1_bdc0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_bdbc

dec_label_pc_beb4:                                ; preds = %dec_label_pc_bea0, %dec_label_pc_bdb0
  %v0_beb4 = call i32 @function_d398()
  %v1_beb4 = trunc i32 %v0_beb4 to i16
  %v3_beb8 = load i32, i32* @r6, align 4
  %v4_beb8 = add i32 %v3_beb8, 2
  %v5_beb8 = inttoptr i32 %v4_beb8 to i16*
  store i16 %v1_beb4, i16* %v5_beb8, align 2
  store i32 %v3_bb84, i32* %r0.global-to-local, align 4
  %v1_bec0 = load i32, i32* @r5, align 4
  %v9_bec0 = icmp eq i32 %v3_bb84, %v1_bec0
  store i1 %v9_bec0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_bec0, label %dec_label_pc_bec8, label %dec_label_pc_bdc8

dec_label_pc_bec8:                                ; preds = %dec_label_pc_beb4, %dec_label_pc_bdbc
  %v0_bec8 = call i32 @function_d398()
  %v1_bec8 = trunc i32 %v0_bec8 to i16
  store i32 %v0_bec8, i32* %r0.global-to-local, align 4
  %v3_becc = load i32, i32* @r4, align 4
  %v4_becc = add i32 %v3_becc, 28
  %v5_becc = inttoptr i32 %v4_becc to i16*
  store i16 %v1_bec8, i16* %v5_becc, align 2
  br label %dec_label_pc_bdc8

dec_label_pc_bed4:                                ; preds = %dec_label_pc_bb24
  store i32 %v3_bb14, i32* %r0.global-to-local, align 4
  %v1_bed8 = call i32 @function_11548(i32 %v3_bb14)
  store i32 %v1_bed8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_bedc

dec_label_pc_bedc:                                ; preds = %dec_label_pc_beec, %dec_label_pc_bafc, %dec_label_pc_bae4, %dec_label_pc_bed4
  %v1_bee8 = phi i32 [ %v3_bb14, %dec_label_pc_bafc ], [ %v2_baf0, %dec_label_pc_bae4 ], [ %v1_bed8, %dec_label_pc_bed4 ], [ %v2_bef0, %dec_label_pc_beec ]
  store i32 %v9_b894, i32* %r6.global-to-local, align 4
  store i32 %v18_b894, i32* %sb.global-to-local, align 4
  store i32 %v27_b894, i32* %lr.global-to-local, align 4
  ret i32 %v1_bee8

dec_label_pc_beec.critedge:                       ; preds = %dec_label_pc_bb4c
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br label %dec_label_pc_beec

dec_label_pc_beec:                                ; preds = %dec_label_pc_bdc8, %dec_label_pc_beec.critedge, %dec_label_pc_bd78
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_bef0 = call i32 @function_111c8(i32* null)
  store i32 %v2_bef0, i32* %r0.global-to-local, align 4
  %v9_bef8 = icmp eq i32 %v2_baf0, %v2_bef0
  store i1 %v9_bef8, i1* %cpsr_z.global-to-local, align 1
  %v6_befc = icmp slt i32 %v2_baf0, %v2_bef0
  br i1 %v6_befc, label %dec_label_pc_bedc, label %dec_label_pc_bd78

dec_label_pc_bf04:                                ; preds = %dec_label_pc_ba9c, %bb113
  %v0_baa4.lcssa = phi i32 [ %v1_ba70, %dec_label_pc_ba9c ], [ %v0_baa4, %bb113 ]
  %v2_bf08 = sub i32 %v0_baa4.lcssa, %v0_ba4c
  store i32 %v2_bf08, i32* @r4, align 4
  %v2_bf0c = ptrtoint i32* %stack_var_-76 to i32
  store i32 %v2_ba60, i32* %r1.global-to-local, align 4
  store i32 %v2_bf0c, i32* %r0.global-to-local, align 4
  store i32 %v2_bf08, i32* %r2.global-to-local, align 4
  %v3_bf1c = call i32 @function_10bac(i32 %v2_bf0c, i32 %v2_ba60, i32 %v2_bf08)
  %v2_bf20 = ptrtoint i32* %stack_var_-40 to i32
  %v1_bf24 = load i32, i32* @r4, align 4
  %v2_bf24 = add i32 %v1_bf24, %v2_bf20
  store i32 %v2_bf24, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_bf0c, i32* @r0, align 4
  %v3_bf30 = add i32 %v2_bf24, -36
  %v4_bf30 = inttoptr i32 %v3_bf30 to i8*
  store i8 0, i8* %v4_bf30, align 1
  %v1_bf34 = call i32 @function_11a80(i32 %v2_bf0c)
  store i32 %v1_bf34, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_bae4

dec_label_pc_bf40:                                ; preds = %dec_label_pc_bab0
  store i32 104859200, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_bae4

dec_label_pc_bf50:                                ; preds = %dec_label_pc_bab0
  store i32 134744072, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_bae4

dec_label_pc_bf64:                                ; preds = %dec_label_pc_bab0
  store i32 707416650, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_bae4

; uselistorder directives
  uselistorder i32 %v1_bf34, { 1, 0 }
  uselistorder i32 %v2_bf0c, { 0, 1, 3, 2 }
  uselistorder i32 %v2_bf08, { 1, 0, 2 }
  uselistorder i32 %v2_bef0, { 1, 2, 3, 0 }
  uselistorder i32 %v0_bec8, { 1, 0 }
  uselistorder i32 %v0_bea0, { 1, 0 }
  uselistorder i32 %v0_be8c, { 1, 0 }
  uselistorder i32 %v7_be70, { 1, 0, 2 }
  uselistorder i32 %v1_be50, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v4_be00, { 1, 0 }
  uselistorder i32 %v0_bdec, { 1, 0, 2, 3 }
  uselistorder i32 %v2_bde4, { 1, 0 }
  uselistorder i32 %v1_bd30.pre, { 1, 0 }
  uselistorder i32 %v2_bd28, { 1, 0 }
  uselistorder i32 %v2_bd2817, { 1, 0 }
  uselistorder i32 %v0_bd3419, { 1, 0 }
  uselistorder i32 %v1_bd20, { 1, 0 }
  uselistorder i32 %v3_bc0c, { 1, 0 }
  uselistorder i32 %v3_bbf8, { 1, 0 }
  uselistorder i32 %v3_bbb8, { 1, 0 }
  uselistorder i32 %v1_bb8c, { 1, 0 }
  uselistorder i32 %v3_bb80, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %v3_bb7c, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v3_bb78, { 1, 0 }
  uselistorder i1 %v7_bb44, { 1, 0 }
  uselistorder i1 %v7_bb18, { 1, 0 }
  uselistorder i32 %v3_bb14, { 1, 3, 4, 5, 6, 2, 0, 7 }
  uselistorder i32 %v2_bb00, { 0, 13, 1, 8, 3, 6, 7, 5, 9, 11, 10, 4, 12, 2 }
  uselistorder i32 %v2_baf0, { 2, 1, 0, 3 }
  uselistorder i32 %v0_baec, { 1, 0, 2 }
  uselistorder i32 %stack_var_-2184.0, { 0, 3, 2, 1 }
  uselistorder i32 %v1_bab4, { 1, 0 }
  uselistorder i32 %v0_bab0, { 1, 0 }
  uselistorder i32 %v1_baa4, { 1, 0 }
  uselistorder i1 %v7_ba90, { 1, 0 }
  uselistorder i32 %v1_ba8c, { 1, 0, 2 }
  uselistorder i1 %v8_ba84, { 1, 0 }
  uselistorder i1 %v7_ba80, { 1, 0 }
  uselistorder i32 %v1_ba74, { 1, 0 }
  uselistorder i8 %v2_ba68, { 2, 0, 1, 3 }
  uselistorder i32 %v0_ba6c, { 1, 0 }
  uselistorder i32 %v0_ba8c, { 1, 2, 3, 0 }
  uselistorder i32 %v2_ba60, { 1, 0, 2, 3 }
  uselistorder i32 %v0_ba5c, { 1, 0, 2 }
  uselistorder i32 %v0_ba54, { 1, 0, 2, 3 }
  uselistorder i1 %v7_ba4c, { 1, 0 }
  uselistorder i32 %v0_ba4c, { 2, 3, 1, 5, 4, 0 }
  uselistorder i32 %v0_b9f0, { 1, 0, 2, 3 }
  uselistorder i32 %v1_b990, { 2, 0, 1, 3 }
  uselistorder i32 %v1_b974, { 0, 2, 1 }
  uselistorder i32 %v1_b95c, { 1, 0, 2 }
  uselistorder i32 %v1_b944, { 1, 0 }
  uselistorder i32 %v1_b900, { 1, 0, 3, 2 }
  uselistorder i32 %v1_b8e8, { 1, 0 }
  uselistorder i32 %v1_b8dc, { 1, 0 }
  uselistorder i32 %v2_b8c4, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 21, 22, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 0 }
  uselistorder i32* %r2.global-to-local, { 29, 30, 27, 6, 3, 4, 5, 7, 8, 9, 1, 10, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 28, 24, 25, 26, 0 }
  uselistorder i32* %r1.global-to-local, { 43, 44, 2, 3, 4, 5, 6, 7, 42, 40, 1, 8, 41, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 67, 3, 2, 66, 6, 4, 7, 5, 8, 10, 9, 11, 13, 12, 14, 16, 15, 17, 18, 21, 19, 20, 22, 23, 31, 24, 25, 26, 27, 28, 29, 30, 35, 32, 33, 34, 36, 38, 37, 40, 39, 41, 42, 43, 45, 44, 46, 47, 49, 48, 50, 52, 51, 54, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 0 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %ip.global-to-local, { 27, 1, 2, 3, 4, 5, 6, 7, 8, 0, 10, 11, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 32, 1, 2, 3, 8, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i32 41, { 1, 2, 3, 0 }
  uselistorder i8 17, { 1, 2, 0 }
  uselistorder i8 -16, { 0, 1, 3, 2, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 707416650, { 1, 0 }
  uselistorder i32 104859200, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_10000.37 to i32), i32 -1), { 2, 0, 1, 3, 14, 15, 16, 6, 4, 5, 17, 18, 21, 7, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 8, 31, 30, 32, 33, 34, 35, 38, 9, 36, 37, 39, 40, 41, 42, 43, 10, 11, 44, 45, 46, 47, 50, 51, 12, 48, 49, 52, 53, 54, 57, 13, 55, 56, 58, 59, 60 }
  uselistorder i32 (i32)* @function_8258, { 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 3, 4, 6, 7, 0, 1, 5, 2, 8, 10, 9, 11 }
  uselistorder label %dec_label_pc_beec, { 1, 0, 2 }
  uselistorder label %dec_label_pc_bedc, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_bdc8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_bd78, { 1, 0 }
  uselistorder label %dec_label_pc_bd48, { 1, 0 }
  uselistorder label %.thread21, { 2, 0, 1 }
  uselistorder label %bb128, { 1, 0 }
  uselistorder label %bb126, { 1, 0 }
  uselistorder label %dec_label_pc_baa4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_ba9c, { 1, 0 }
  uselistorder label %dec_label_pc_ba90, { 1, 0 }
}

define i32 @function_bf78(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_bf78:
  %tmp = or i32 %arg1, 1
  %tmp9 = icmp eq i32 %tmp, 1
  br i1 %tmp9, label %dec_label_pc_bf9c, label %dec_label_pc_bf84

dec_label_pc_bf84:                                ; preds = %dec_label_pc_bf78
  %v0_bf8c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_bf88

dec_label_pc_bf88:                                ; preds = %dec_label_pc_bf88, %dec_label_pc_bf84
  %v0_bf94 = phi i32 [ %v2_bf94, %dec_label_pc_bf88 ], [ 0, %dec_label_pc_bf84 ]
  %v0_bf8c = phi i32 [ %v5_bf8c, %dec_label_pc_bf88 ], [ %v0_bf8c.pre, %dec_label_pc_bf84 ]
  %v0_bf88 = phi i32 [ %v1_bf88, %dec_label_pc_bf88 ], [ %arg1, %dec_label_pc_bf84 ]
  %v1_bf88 = add i32 %v0_bf88, -2
  %v1_bf8c = inttoptr i32 %v0_bf8c to i16*
  %v2_bf8c = load i16, i16* %v1_bf8c, align 2
  %v3_bf8c = zext i16 %v2_bf8c to i32
  %v5_bf8c = add i32 %v0_bf8c, -2
  store i32 %v5_bf8c, i32* @r0, align 4
  %v2_bf94 = add i32 %v3_bf8c, %v0_bf94
  %v1_bf88.cmp = icmp ugt i32 %v1_bf88, 1
  br i1 %v1_bf88.cmp, label %dec_label_pc_bf88, label %dec_label_pc_bf9c.loopexit

dec_label_pc_bf9c.loopexit:                       ; preds = %dec_label_pc_bf88
  br label %dec_label_pc_bf9c

dec_label_pc_bf9c:                                ; preds = %dec_label_pc_bf78, %dec_label_pc_bf9c.loopexit
  %v1_bfa4 = phi i32 [ %v2_bf94, %dec_label_pc_bf9c.loopexit ], [ 0, %dec_label_pc_bf78 ]
  %v0_bf9c = phi i32 [ %v1_bf88, %dec_label_pc_bf9c.loopexit ], [ %arg1, %dec_label_pc_bf78 ]
  %v7_bf9c = icmp eq i32 %v0_bf9c, 1
  br i1 %v7_bf9c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_bf9c
  %v1_bfa0 = load i32, i32* @r0, align 4
  %v2_bfa0 = inttoptr i32 %v1_bfa0 to i8*
  %v3_bfa0 = load i8, i8* %v2_bfa0, align 1
  %v4_bfa0 = zext i8 %v3_bfa0 to i32
  %v3_bfa4 = add i32 %v1_bfa4, %v4_bfa0
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_bf9c, %bb
  %v0_bfa8 = phi i32 [ %v1_bfa4, %dec_label_pc_bf9c ], [ %v3_bfa4, %bb ]
  %v3_bfac = urem i32 %v0_bfa8, 65536
  %v4_bfb0 = udiv i32 %v0_bfa8, 65536
  %v5_bfb0 = add nuw nsw i32 %v4_bfb0, %v3_bfac
  %v4_bfb4 = udiv i32 %v5_bfb0, 65536
  %v5_bfb4 = add nuw nsw i32 %v4_bfb4, %v5_bfb0
  %v1_bfb8 = urem i32 %v5_bfb4, 65536
  %v3_bfc0 = xor i32 %v1_bfb8, 65535
  ret i32 %v3_bfc0

; uselistorder directives
  uselistorder i32 %v5_bfb0, { 1, 0 }
  uselistorder i32 %v5_bf8c, { 1, 0 }
  uselistorder i32 %v1_bf88, { 1, 0, 2 }
  uselistorder i32 %v0_bf8c, { 1, 0 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_bf9c, { 1, 0 }
}

define i32 @function_bfc8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_bfc8:
  %v1_bfd8 = add i32 %arg1, 12
  %v2_bfd8 = inttoptr i32 %v1_bfd8 to i32*
  %v3_bfd8 = load i32, i32* %v2_bfd8, align 4
  %v1_bfdc = add i32 %arg1, 16
  %v2_bfdc = inttoptr i32 %v1_bfdc to i32*
  %v3_bfdc = load i32, i32* %v2_bfdc, align 4
  %v7_bfe0 = icmp sgt i32 %arg3, 1
  br i1 %v7_bfe0, label %dec_label_pc_bfec.preheader, label %dec_label_pc_c000

dec_label_pc_bfec.preheader:                      ; preds = %dec_label_pc_bfc8
  %v0_bff0.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_bfec

dec_label_pc_bfec:                                ; preds = %dec_label_pc_bfec.preheader, %dec_label_pc_bfec
  %v0_bff8 = phi i32 [ 0, %dec_label_pc_bfec.preheader ], [ %v2_bff8, %dec_label_pc_bfec ]
  %v0_bff0 = phi i32 [ %v0_bff0.pre, %dec_label_pc_bfec.preheader ], [ %v5_bff0, %dec_label_pc_bfec ]
  %v0_bfec = phi i32 [ %arg3, %dec_label_pc_bfec.preheader ], [ %v1_bfec, %dec_label_pc_bfec ]
  %v1_bfec = add nsw i32 %v0_bfec, -2
  %v1_bff0 = inttoptr i32 %v0_bff0 to i16*
  %v2_bff0 = load i16, i16* %v1_bff0, align 2
  %v3_bff0 = zext i16 %v2_bff0 to i32
  %v5_bff0 = add i32 %v0_bff0, -2
  store i32 %v5_bff0, i32* @r1, align 4
  %v2_bff8 = add i32 %v3_bff0, %v0_bff8
  %v8_bffc = icmp sgt i32 %v1_bfec, 1
  br i1 %v8_bffc, label %dec_label_pc_bfec, label %dec_label_pc_c000.loopexit

dec_label_pc_c000.loopexit:                       ; preds = %dec_label_pc_bfec
  br label %dec_label_pc_c000

dec_label_pc_c000:                                ; preds = %dec_label_pc_c000.loopexit, %dec_label_pc_bfc8
  %v1_c00c = phi i32 [ %v2_bff8, %dec_label_pc_c000.loopexit ], [ 0, %dec_label_pc_bfc8 ]
  %v0_c000 = phi i32 [ %v1_bfec, %dec_label_pc_c000.loopexit ], [ %arg3, %dec_label_pc_bfc8 ]
  %v7_c000 = icmp eq i32 %v0_c000, 1
  br i1 %v7_c000, label %bb, label %.thread

.thread:                                          ; preds = %dec_label_pc_c000
  br label %bb19

bb:                                               ; preds = %dec_label_pc_c000
  %v1_c004 = load i32, i32* @r1, align 4
  %v2_c004 = inttoptr i32 %v1_c004 to i8*
  %v3_c004 = load i8, i8* %v2_c004, align 1
  %v4_c004 = zext i8 %v3_c004 to i32
  %v3_c00c = add i32 %v4_c004, %v1_c00c
  br label %bb19

bb19:                                             ; preds = %.thread, %bb
  %v1_c034 = phi i32 [ %v1_c00c, %.thread ], [ %v3_c00c, %bb ]
  %v0_c014 = mul i32 %v3_bfd8, 65536
  %v3_c014 = udiv i32 %v0_c014, 65536
  %v3_c018 = urem i32 %v3_bfdc, 65536
  %v4_c020 = udiv i32 %v3_bfd8, 65536
  %v2_c01c = add nuw nsw i32 %v3_c018, %v4_c020
  %v5_c020 = add nuw nsw i32 %v2_c01c, %v3_c014
  %v1_c024 = add i32 %arg1, 9
  %v2_c024 = inttoptr i32 %v1_c024 to i8*
  %v3_c024 = load i8, i8* %v2_c024, align 1
  %v4_c024 = zext i8 %v3_c024 to i32
  %v4_c028 = udiv i32 %v3_bfdc, 65536
  %v3_c030 = mul nuw nsw i32 %v4_c024, 256
  %v5_c028 = add i32 %v4_c028, %arg2
  %v2_c02c = add i32 %v5_c028, %v1_c034
  %v2_c034 = add i32 %v2_c02c, %v5_c020
  %v2_c038 = add i32 %v2_c034, %v3_c030
  %tmp = icmp ult i32 %v2_c038, 65536
  br i1 %tmp, label %dec_label_pc_c058, label %dec_label_pc_c044

dec_label_pc_c044:                                ; preds = %bb19, %dec_label_pc_c044
  %v2_c04c5 = phi i32 [ %v2_c04c, %dec_label_pc_c044 ], [ %v2_c038, %bb19 ]
  %v3_c0506.in = phi i32 [ %v2_c04c, %dec_label_pc_c044 ], [ %v2_c038, %bb19 ]
  %v3_c0506 = udiv i32 %v3_c0506.in, 65536
  %v3_c048 = urem i32 %v2_c04c5, 65536
  %v2_c04c = add nuw nsw i32 %v3_c048, %v3_c0506
  %tmp20 = icmp ult i32 %v2_c04c, 65536
  br i1 %tmp20, label %dec_label_pc_c058.loopexit, label %dec_label_pc_c044

dec_label_pc_c058.loopexit:                       ; preds = %dec_label_pc_c044
  br label %dec_label_pc_c058

dec_label_pc_c058:                                ; preds = %dec_label_pc_c058.loopexit, %bb19
  %v0_c058 = phi i32 [ %v2_c04c, %dec_label_pc_c058.loopexit ], [ %v2_c038, %bb19 ]
  %v1_c058 = urem i32 %v0_c058, 65536
  %v3_c060 = xor i32 %v1_c058, 65535
  ret i32 %v3_c060

; uselistorder directives
  uselistorder i32 %v2_c04c, { 2, 1, 3, 0 }
  uselistorder i32 %v2_c038, { 3, 0, 2, 1 }
  uselistorder i32 %v1_c00c, { 1, 0 }
  uselistorder i32 %v5_bff0, { 1, 0 }
  uselistorder i32 %v0_bff0, { 1, 0 }
  uselistorder i32 %v3_bfd8, { 1, 0 }
  uselistorder i32 %arg3, { 2, 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_c044, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %dec_label_pc_bfec, { 1, 0 }
}

define i32 @function_c06c(i32 %arg1) local_unnamed_addr {
dec_label_pc_c06c:
  %v2_c078 = load i32, i32* @global_var_1f5bc.50, align 4
  %v2_c080 = call i32 @function_11314(i32 %v2_c078, i32 9)
  ret i32 %v2_c080
}

define i32 @function_c094(i32 %arg1) local_unnamed_addr {
dec_label_pc_c094:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i8, align 1
  %stack_var_-4681 = alloca i32, align 4
  %stack_var_-8777 = alloca i32, align 4
  %stack_var_-585 = alloca i8, align 1
  %v3_c094 = load i32, i32* @r4, align 4
  %v6_c094 = load i32, i32* @r5, align 4
  %v9_c094 = load i32, i32* @r6, align 4
  %v12_c094 = load i32, i32* @r7, align 4
  %v15_c094 = load i32, i32* @r8, align 4
  %v18_c094 = load i32, i32* @sb, align 4
  %v21_c094 = load i32, i32* @sl, align 4
  %v24_c094 = load i32, i32* @fp, align 4
  %v27_c094 = load i32, i32* @lr, align 4
  store i32 0, i32* @r5, align 4
  %v2_c0b0 = ptrtoint i8* %stack_var_-585 to i32
  store i32 %v2_c0b0, i32* @r6, align 4
  store i32 0, i32* %stack_var_-56, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  store i32 513, i32* @r2, align 4
  %v2_c0dc = ptrtoint i32* %stack_var_-8777 to i32
  store i32 %v2_c0dc, i32* @fp, align 4
  %v3_c0e8 = call i32 @function_119c0(i8* nonnull %stack_var_-585, i32 0)
  %v2_c0ec = ptrtoint i32* %stack_var_-4681 to i32
  store i32 %v2_c0ec, i32* @sl, align 4
  %v0_c0f0 = load i32, i32* @r5, align 4
  store i32 4096, i32* @r2, align 4
  %v2_c0fc = bitcast i32* %stack_var_-8777 to i8*
  %v3_c0fc = call i32 @function_119c0(i8* %v2_c0fc, i32 %v0_c0f0)
  %v0_c104 = load i32, i32* @r5, align 4
  store i32 4096, i32* @r2, align 4
  %v2_c110 = bitcast i32* %stack_var_-4681 to i8*
  %v3_c110 = call i32 @function_119c0(i8* %v2_c110, i32 %v0_c104)
  %v2_c114 = ptrtoint i8* %stack_var_-72 to i32
  store i32 %v2_c114, i32* @sb, align 4
  %v0_c118 = load i32, i32* %r4.global-to-local, align 4
  %v3_c118 = udiv i32 %v0_c118, 256
  %v1_c11c = urem i32 %v0_c118, 256
  store i32 %v1_c11c, i32* @r4, align 4
  %v3_c12c = trunc i32 %v3_c118 to i8
  %v4_c12c = call i32 @function_10f1c(i8 %v3_c12c, i32 16, i32 %v2_c114)
  %v2_c134 = call i32 @function_10b3c(i8* nonnull %stack_var_-72)
  %v7_c138 = icmp eq i32 %v2_c134, 2
  br i1 %v7_c138, label %dec_label_pc_c5e4, label %dec_label_pc_c140

dec_label_pc_c140:                                ; preds = %dec_label_pc_c094, %dec_label_pc_c5e4
  %v1_c144 = call i32 @function_106dc(i32 3)
  %v1_c14c = call i32 @function_106dc(i32 4)
  %v1_c154 = call i32 @function_106dc(i32 6)
  %v1_c15c = call i32 @function_106dc(i32 8)
  %v0_c160 = load i32, i32* @r5, align 4
  %v2_c168 = inttoptr i32 %v0_c160 to i32*
  %v3_c168 = call i32 @function_10618(i32 8, i32* %v2_c168)
  %v0_c16c = load i32, i32* @r5, align 4
  %v2_c170 = call i32 @function_11154(i32 %v3_c168, i32 %v0_c16c)
  %v7_c174 = icmp eq i32 %v2_c170, -1
  store i32 %v2_c170, i32* @r8, align 4
  br i1 %v7_c174, label %bb, label %dec_label_pc_c184.preheader

bb:                                               ; preds = %dec_label_pc_c140
  %v1_c17c = load i32, i32* @r5, align 4
  store i32 %v1_c17c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_c5a4

dec_label_pc_c184.preheader:                      ; preds = %dec_label_pc_c140
  %v4_c19057 = call i32 @function_10d9c(i8* nonnull %stack_var_-585, i32 512, i32 %v2_c170)
  %v2_c19459 = icmp eq i32 %v4_c19057, 0
  br i1 %v2_c19459, label %dec_label_pc_c31c.loopexit, label %dec_label_pc_c19c.lr.ph

dec_label_pc_c19c.lr.ph:                          ; preds = %dec_label_pc_c184.preheader
  %v2_c1e4 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_c19c

dec_label_pc_c19c:                                ; preds = %dec_label_pc_c19c.lr.ph, %dec_label_pc_c184.backedge
  %v3_c1a0 = load i8, i8* %stack_var_-585, align 1
  %v4_c1a0 = sext i8 %v3_c1a0 to i32
  %v2_c1a4 = icmp eq i8 %v3_c1a0, 0
  br i1 %v2_c1a4, label %bb130, label %bb129

bb129:                                            ; preds = %dec_label_pc_c19c
  %v8_c1a8 = icmp eq i8 %v3_c1a0, 58
  br i1 %v8_c1a8, label %.thread8, label %dec_label_pc_c1bc

.thread8:                                         ; preds = %bb129
  br label %dec_label_pc_c1d4

bb130:                                            ; preds = %dec_label_pc_c19c
  br label %dec_label_pc_c1d4

dec_label_pc_c1bc:                                ; preds = %bb129
  %v1_c1c4.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_c1c0

dec_label_pc_c1c0:                                ; preds = %bb131, %dec_label_pc_c1bc
  %v0_c1c0 = phi i32 [ %v1_c1c0, %bb131 ], [ 0, %dec_label_pc_c1bc ]
  %v1_c1c0 = add i32 %v0_c1c0, 1
  %v2_c1c4 = add i32 %v1_c1c0, %v1_c1c4.pre
  %v3_c1c4 = inttoptr i32 %v2_c1c4 to i8*
  %v4_c1c4 = load i8, i8* %v3_c1c4, align 1
  %v6_c1c4 = zext i8 %v4_c1c4 to i32
  %v2_c1c8 = icmp eq i8 %v4_c1c4, 0
  br i1 %v2_c1c8, label %dec_label_pc_c1d4, label %bb131

bb131:                                            ; preds = %dec_label_pc_c1c0
  %v8_c1cc = icmp eq i8 %v4_c1c4, 58
  br i1 %v8_c1cc, label %dec_label_pc_c1d4, label %dec_label_pc_c1c0

dec_label_pc_c1d4:                                ; preds = %dec_label_pc_c1c0, %bb131, %bb130, %.thread8
  %v1_c200 = phi i32 [ 0, %.thread8 ], [ 0, %bb130 ], [ %v1_c1c0, %bb131 ], [ %v1_c1c0, %dec_label_pc_c1c0 ]
  %v0_c1d4 = phi i32 [ %v4_c1a0, %.thread8 ], [ %v4_c1a0, %bb130 ], [ %v6_c1c4, %bb131 ], [ %v6_c1c4, %dec_label_pc_c1c0 ]
  %v2_c1d4 = icmp eq i32 %v0_c1d4, 0
  br i1 %v2_c1d4, label %dec_label_pc_c184.backedge, label %dec_label_pc_c1dc

dec_label_pc_c184.backedge:                       ; preds = %dec_label_pc_c1d4, %dec_label_pc_c2a4, %dec_label_pc_c2f0, %dec_label_pc_c220
  %v0_c18c = load i32, i32* @r8, align 4
  %v4_c190 = call i32 @function_10d9c(i8* nonnull %stack_var_-585, i32 512, i32 %v0_c18c)
  %v2_c194 = icmp eq i32 %v4_c190, 0
  br i1 %v2_c194, label %dec_label_pc_c31c.loopexit, label %dec_label_pc_c19c

dec_label_pc_c1dc:                                ; preds = %dec_label_pc_c1d4
  %v1_c1e0 = add i32 %v1_c200, 2
  %v2_c1e8 = add i32 %v1_c1e0, %v2_c1e4
  %v1_c1ec = add i32 %v2_c1e8, -545
  %v2_c1ec = inttoptr i32 %v1_c1ec to i8*
  %v3_c1ec = load i8, i8* %v2_c1ec, align 1
  %v2_c1f0 = icmp eq i8 %v3_c1ec, 0
  br i1 %v2_c1f0, label %bb133, label %bb132

bb132:                                            ; preds = %dec_label_pc_c1dc
  %v8_c1f4 = icmp eq i8 %v3_c1ec, 32
  br i1 %v8_c1f4, label %.thread13, label %dec_label_pc_c200

.thread13:                                        ; preds = %bb132
  store i32 %v1_c1e0, i32* @r5, align 4
  br label %dec_label_pc_c220

bb133:                                            ; preds = %dec_label_pc_c1dc
  store i32 %v1_c1e0, i32* @r5, align 4
  br label %dec_label_pc_c220

dec_label_pc_c200:                                ; preds = %bb132
  %v0_c200 = load i32, i32* @r6, align 4
  %v2_c200 = add i32 %v0_c200, %v1_c200
  br label %dec_label_pc_c208

dec_label_pc_c208:                                ; preds = %bb134, %dec_label_pc_c200
  %v0_c21416 = phi i32 [ %v1_c214, %bb134 ], [ %v1_c1e0, %dec_label_pc_c200 ]
  %v0_c21818 = phi i32 [ %v1_c218, %bb134 ], [ %v2_c200, %dec_label_pc_c200 ]
  %v1_c208 = add i32 %v0_c21818, 3
  %v2_c208 = inttoptr i32 %v1_c208 to i8*
  %v3_c208 = load i8, i8* %v2_c208, align 1
  %v2_c20c = icmp eq i8 %v3_c208, 0
  br i1 %v2_c20c, label %.thread15, label %bb134

.thread15:                                        ; preds = %dec_label_pc_c208
  %v1_c21417 = add i32 %v0_c21416, 1
  store i32 %v1_c21417, i32* @r5, align 4
  br label %dec_label_pc_c220

bb134:                                            ; preds = %dec_label_pc_c208
  %v8_c210 = icmp eq i8 %v3_c208, 32
  %v1_c214 = add i32 %v0_c21416, 1
  store i32 %v1_c214, i32* @r5, align 4
  %v1_c218 = add i32 %v0_c21818, 1
  br i1 %v8_c210, label %dec_label_pc_c220, label %dec_label_pc_c208

dec_label_pc_c220:                                ; preds = %bb134, %bb133, %.thread15, %.thread13
  %v1_c22c = phi i32 [ %v1_c21417, %.thread15 ], [ %v1_c1e0, %.thread13 ], [ %v1_c1e0, %bb133 ], [ %v1_c214, %bb134 ]
  %v0_c220 = load i32, i32* @r6, align 4
  %v2_c220 = add i32 %v0_c220, %v1_c1e0
  store i32 %v2_c220, i32* @r4, align 4
  %v2_c22c = add i32 %v1_c22c, %v2_c1e4
  store i32 0, i32* @r7, align 4
  %v3_c234 = add i32 %v2_c22c, -545
  %v4_c234 = inttoptr i32 %v3_c234 to i8*
  store i8 0, i8* %v4_c234, align 1
  %v0_c238 = load i32, i32* @r4, align 4
  %v1_c23c = inttoptr i32 %v0_c238 to i8*
  %v2_c23c = call i32 @function_10b3c(i8* %v1_c23c)
  store i32 %v2_c23c, i32* @r1, align 4
  %v0_c248 = load i32, i32* @r4, align 4
  %v3_c24c = inttoptr i32 %v0_c248 to i8*
  %v4_c24c = call i32 @function_10e8c(i8* %v3_c24c, i32 %v2_c23c, i32 %v2_c114)
  %v7_c250 = icmp eq i32 %v4_c24c, -1
  br i1 %v7_c250, label %dec_label_pc_c184.backedge, label %dec_label_pc_c26c.preheader

dec_label_pc_c26c.preheader:                      ; preds = %dec_label_pc_c220
  %v1_c254 = load i32, i32* @r7, align 4
  %v1_c258 = load i32, i32* @r6, align 4
  %v2_c258 = load i32, i32* @r5, align 4
  %v3_c258 = add i32 %v2_c258, %v1_c258
  store i32 %v1_c254, i32* @lr, align 4
  %v1_c26c49 = add i32 %v3_c258, 2
  %v2_c26c50 = inttoptr i32 %v1_c26c49 to i8*
  %v3_c26c51 = load i8, i8* %v2_c26c50, align 1
  %v2_c27053 = icmp eq i8 %v3_c26c51, 0
  %v1_c27455 = add i32 %v2_c258, 2
  br i1 %v2_c27053, label %dec_label_pc_c2a4, label %dec_label_pc_c27c

dec_label_pc_c27c:                                ; preds = %dec_label_pc_c26c.preheader, %dec_label_pc_c26c.backedge
  %v0_c2a484 = phi i32 [ %v0_c2a482, %dec_label_pc_c26c.backedge ], [ %v1_c254, %dec_label_pc_c26c.preheader ]
  %v0_c28c.pr = phi i32 [ %v0_c28c.pr71, %dec_label_pc_c26c.backedge ], [ %v1_c254, %dec_label_pc_c26c.preheader ]
  %v0_c5b8 = phi i32 [ %v0_c5b874, %dec_label_pc_c26c.backedge ], [ %v1_c254, %dec_label_pc_c26c.preheader ]
  %v0_c27479 = phi i32 [ %v1_c274, %dec_label_pc_c26c.backedge ], [ %v1_c27455, %dec_label_pc_c26c.preheader ]
  %v0_c29c = phi i32 [ %v0_c26c, %dec_label_pc_c26c.backedge ], [ %v3_c258, %dec_label_pc_c26c.preheader ]
  %v1_c280.in = phi i8 [ %v3_c26c, %dec_label_pc_c26c.backedge ], [ %v3_c26c51, %dec_label_pc_c26c.preheader ]
  %v7_c27c = icmp eq i8 %v1_c280.in, 9
  br i1 %v7_c27c, label %bb136, label %bb135

bb135:                                            ; preds = %dec_label_pc_c27c
  %v8_c280 = icmp eq i8 %v1_c280.in, 32
  br i1 %v8_c280, label %.thread27, label %dec_label_pc_c28c

.thread27:                                        ; preds = %bb135
  br label %dec_label_pc_c298

bb136:                                            ; preds = %dec_label_pc_c27c
  br label %dec_label_pc_c298

dec_label_pc_c28c:                                ; preds = %bb135
  %v7_c28c = icmp eq i32 %v0_c28c.pr, 1
  br i1 %v7_c28c, label %dec_label_pc_c5b8, label %dec_label_pc_c294

dec_label_pc_c294:                                ; preds = %dec_label_pc_c5b8, %dec_label_pc_c28c
  %v0_c29876 = phi i32 [ %v1_c5b8, %dec_label_pc_c5b8 ], [ %v0_c5b8, %dec_label_pc_c28c ]
  br label %dec_label_pc_c298

dec_label_pc_c298:                                ; preds = %bb136, %.thread27, %dec_label_pc_c294
  %v0_c298 = phi i32 [ %v0_c5b8, %.thread27 ], [ %v0_c5b8, %bb136 ], [ %v0_c29876, %dec_label_pc_c294 ]
  %v0_c28c.pr72 = phi i32 [ 1, %.thread27 ], [ 1, %bb136 ], [ 0, %dec_label_pc_c294 ]
  %v7_c2a0 = icmp sgt i32 %v0_c298, 6
  br i1 %v7_c2a0, label %dec_label_pc_c2a4, label %dec_label_pc_c26c.backedge

dec_label_pc_c2a4:                                ; preds = %dec_label_pc_c26c.backedge, %dec_label_pc_c298, %dec_label_pc_c26c.preheader
  %v1_c2f4 = phi i32 [ %v1_c27455, %dec_label_pc_c26c.preheader ], [ %v1_c274, %dec_label_pc_c26c.backedge ], [ %v0_c27479, %dec_label_pc_c298 ]
  %v0_c2a4 = phi i32 [ %v1_c254, %dec_label_pc_c26c.preheader ], [ %v0_c2a482, %dec_label_pc_c26c.backedge ], [ %v0_c2a484, %dec_label_pc_c298 ]
  %v2_c2a4 = icmp eq i32 %v0_c2a4, 0
  br i1 %v2_c2a4, label %dec_label_pc_c184.backedge, label %dec_label_pc_c2b0

dec_label_pc_c2b0:                                ; preds = %dec_label_pc_c2a4
  %v2_c2b8 = add i32 %v1_c2f4, %v2_c1e4
  %v1_c2bc = add i32 %v2_c2b8, -545
  %v2_c2bc = inttoptr i32 %v1_c2bc to i8*
  %v3_c2bc = load i8, i8* %v2_c2bc, align 1
  %v2_c2c0 = icmp eq i8 %v3_c2bc, 0
  br i1 %v2_c2c0, label %dec_label_pc_c2f0, label %bb137

bb137:                                            ; preds = %dec_label_pc_c2b0
  %v8_c2c4 = icmp eq i8 %v3_c2bc, 32
  br i1 %v8_c2c4, label %dec_label_pc_c2f0, label %dec_label_pc_c2cc

dec_label_pc_c2cc:                                ; preds = %bb137
  %v2_c2cc = add i32 %v1_c2f4, %v1_c258
  br label %dec_label_pc_c2d0

dec_label_pc_c2d0:                                ; preds = %bb138, %dec_label_pc_c2cc
  %v0_c2dc30 = phi i32 [ %v1_c2dc, %bb138 ], [ %v1_c2f4, %dec_label_pc_c2cc ]
  %v0_c2d0 = phi i32 [ %v1_c2d0, %bb138 ], [ %v2_c2cc, %dec_label_pc_c2cc ]
  %v1_c2d0 = add i32 %v0_c2d0, 1
  %v2_c2d0 = inttoptr i32 %v1_c2d0 to i8*
  %v3_c2d0 = load i8, i8* %v2_c2d0, align 1
  %v2_c2d4 = icmp eq i8 %v3_c2d0, 0
  br i1 %v2_c2d4, label %.thread29, label %bb138

.thread29:                                        ; preds = %dec_label_pc_c2d0
  %v1_c2dc31 = add i32 %v0_c2dc30, 1
  br label %dec_label_pc_c2e4

bb138:                                            ; preds = %dec_label_pc_c2d0
  %v8_c2d8 = icmp eq i8 %v3_c2d0, 32
  %v1_c2dc = add i32 %v0_c2dc30, 1
  br i1 %v8_c2d8, label %dec_label_pc_c2e4, label %dec_label_pc_c2d0

dec_label_pc_c2e4:                                ; preds = %bb138, %.thread29
  %v1_c2ec = phi i32 [ %v1_c2dc31, %.thread29 ], [ %v1_c2dc, %bb138 ]
  %v2_c2ec = add i32 %v1_c2ec, %v2_c1e4
  br label %dec_label_pc_c2f0

dec_label_pc_c2f0:                                ; preds = %dec_label_pc_c2b0, %bb137, %dec_label_pc_c2e4
  %v2_c2fc = phi i32 [ %v2_c2b8, %dec_label_pc_c2b0 ], [ %v2_c2b8, %bb137 ], [ %v2_c2ec, %dec_label_pc_c2e4 ]
  %v2_c2f4 = add i32 %v1_c2f4, %v1_c258
  store i32 %v2_c2f4, i32* @r4, align 4
  %v3_c2fc = add i32 %v2_c2fc, -545
  %v4_c2fc = inttoptr i32 %v3_c2fc to i8*
  store i8 0, i8* %v4_c2fc, align 1
  %v1_c300 = inttoptr i32 %v2_c2f4 to i8*
  %v2_c300 = call i32 @function_10b3c(i8* %v1_c300)
  %v8_c308 = icmp sgt i32 %v2_c300, 15
  br i1 %v8_c308, label %dec_label_pc_c184.backedge, label %dec_label_pc_c30c

dec_label_pc_c30c:                                ; preds = %dec_label_pc_c2f0
  %v0_c310 = load i32, i32* @r4, align 4
  %v2_c314 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_c314, i32* @r0, align 4
  %v2_c318 = bitcast i32* %stack_var_-56 to i8*
  %v3_c318 = call i32 @function_10b64(i8* %v2_c318, i32 %v0_c310)
  br label %dec_label_pc_c31c

dec_label_pc_c31c.loopexit:                       ; preds = %dec_label_pc_c184.backedge, %dec_label_pc_c184.preheader
  %.pre = ptrtoint i32* %stack_var_-56 to i32
  %.pre96 = bitcast i32* %stack_var_-56 to i8*
  br label %dec_label_pc_c31c

dec_label_pc_c31c:                                ; preds = %dec_label_pc_c31c.loopexit, %dec_label_pc_c30c
  %v1_c32c.pre-phi = phi i8* [ %.pre96, %dec_label_pc_c31c.loopexit ], [ %v2_c318, %dec_label_pc_c30c ]
  %v2_c328.pre-phi = phi i32 [ %.pre, %dec_label_pc_c31c.loopexit ], [ %v2_c314, %dec_label_pc_c30c ]
  %v0_c31c = load i32, i32* @r8, align 4
  %v1_c320 = call i32 @function_11548(i32 %v0_c31c)
  %v2_c32c = call i32 @function_10b3c(i8* %v1_c32c.pre-phi)
  store i32 %v2_c32c, i32* @r4, align 4
  %v2_c330 = icmp eq i32 %v2_c32c, 0
  br i1 %v2_c330, label %dec_label_pc_c588, label %dec_label_pc_c33c

dec_label_pc_c33c:                                ; preds = %dec_label_pc_c31c
  %v3_c344 = call i32 @function_10618(i32 3, i32* null)
  %v1_c348 = call i32 @function_11744(i32 %v3_c344)
  store i32 %v1_c348, i32* @sb, align 4
  %v2_c34c = icmp eq i32 %v1_c348, 0
  br i1 %v2_c34c, label %dec_label_pc_c57c, label %dec_label_pc_c35c.preheader

dec_label_pc_c35c.preheader:                      ; preds = %dec_label_pc_c33c
  store i32 0, i32* @r5, align 4
  %v1_c36044 = inttoptr i32 %v1_c348 to i32*
  %v2_c36045 = call i32 @function_11888(i32* %v1_c36044)
  %v2_c36447 = icmp eq i32 %v2_c36045, 0
  br i1 %v2_c36447, label %dec_label_pc_c570, label %dec_label_pc_c36c.preheader

dec_label_pc_c35c.loopexit:                       ; preds = %dec_label_pc_c374, %dec_label_pc_c384, %dec_label_pc_c3f0
  %v0_c35c = load i32, i32* @sb, align 4
  %v1_c360 = inttoptr i32 %v0_c35c to i32*
  %v2_c360 = call i32 @function_11888(i32* %v1_c360)
  %v2_c364 = icmp eq i32 %v2_c360, 0
  br i1 %v2_c364, label %dec_label_pc_c570, label %dec_label_pc_c36c.preheader

dec_label_pc_c36c.preheader:                      ; preds = %dec_label_pc_c35c.preheader, %dec_label_pc_c35c.loopexit
  %v0_c37492 = phi i32 [ %v2_c360, %dec_label_pc_c35c.loopexit ], [ %v2_c36045, %dec_label_pc_c35c.preheader ]
  br label %dec_label_pc_c36c

dec_label_pc_c36c:                                ; preds = %dec_label_pc_c36c.preheader, %dec_label_pc_c558
  %v0_c38c = phi i32 [ %v0_c37492, %dec_label_pc_c36c.preheader ], [ %v2_c564, %dec_label_pc_c558 ]
  %v0_c36c = load i32, i32* @r5, align 4
  %v2_c36c = icmp eq i32 %v0_c36c, 0
  br i1 %v2_c36c, label %dec_label_pc_c374, label %dec_label_pc_c570

dec_label_pc_c374:                                ; preds = %dec_label_pc_c36c
  %v1_c374 = add i32 %v0_c38c, 11
  %v2_c374 = inttoptr i32 %v1_c374 to i8*
  %v3_c374 = load i8, i8* %v2_c374, align 1
  %v4_c374 = zext i8 %v3_c374 to i32
  %v1_c378 = add nsw i32 %v4_c374, -48
  %tmp = icmp ugt i32 %v1_c378, 9
  br i1 %tmp, label %dec_label_pc_c35c.loopexit, label %dec_label_pc_c384

dec_label_pc_c384:                                ; preds = %dec_label_pc_c374
  store i32 %v1_c374, i32* @r7, align 4
  %v3_c390 = call i32 @function_10618(i32 3, i32* null)
  store i32 %v2_c0ec, i32* @r0, align 4
  %v3_c39c = call i32 @function_10b64(i8* %v2_c110, i32 %v3_c390)
  %v2_c3a4 = call i32 @function_10b3c(i8* %v2_c110)
  %v0_c3a8 = load i32, i32* @r7, align 4
  %v1_c3ac = load i32, i32* @sl, align 4
  %v2_c3ac = add i32 %v1_c3ac, %v2_c3a4
  store i32 %v2_c3ac, i32* @r0, align 4
  %v2_c3b0 = inttoptr i32 %v2_c3ac to i8*
  %v3_c3b0 = call i32 @function_10b64(i8* %v2_c3b0, i32 %v0_c3a8)
  %v2_c3b8 = call i32 @function_10b3c(i8* %v2_c110)
  %v0_c3bc = load i32, i32* @r5, align 4
  store i32 %v2_c3b8, i32* @r4, align 4
  %v2_c3c8 = inttoptr i32 %v0_c3bc to i32*
  %v3_c3c8 = call i32 @function_10618(i32 4, i32* %v2_c3c8)
  %v0_c3d0 = load i32, i32* @r4, align 4
  %v1_c3d0 = load i32, i32* @sl, align 4
  %v2_c3d0 = add i32 %v1_c3d0, %v0_c3d0
  store i32 %v2_c3d0, i32* @r0, align 4
  %v2_c3d4 = inttoptr i32 %v2_c3d0 to i8*
  %v3_c3d4 = call i32 @function_10b64(i8* %v2_c3d4, i32 %v3_c3c8)
  %v3_c3e4 = call i32 @function_112ac(i32 %v2_c0ec, i32 %v2_c0dc, i32 4096)
  %v7_c3e8 = icmp eq i32 %v3_c3e4, -1
  br i1 %v7_c3e8, label %dec_label_pc_c35c.loopexit, label %dec_label_pc_c3f0

dec_label_pc_c3f0:                                ; preds = %dec_label_pc_c384
  %v0_c3f0 = load i32, i32* @r5, align 4
  %v2_c3f8 = inttoptr i32 %v0_c3f0 to i32*
  %v3_c3f8 = call i32 @function_10618(i32 3, i32* %v2_c3f8)
  store i32 %v2_c0ec, i32* @r0, align 4
  %v3_c404 = call i32 @function_10b64(i8* %v2_c110, i32 %v3_c3f8)
  %v2_c40c = call i32 @function_10b3c(i8* %v2_c110)
  %v0_c410 = load i32, i32* @r7, align 4
  %v1_c414 = load i32, i32* @sl, align 4
  %v2_c414 = add i32 %v1_c414, %v2_c40c
  store i32 %v2_c414, i32* @r0, align 4
  %v2_c418 = inttoptr i32 %v2_c414 to i8*
  %v3_c418 = call i32 @function_10b64(i8* %v2_c418, i32 %v0_c410)
  %v2_c420 = call i32 @function_10b3c(i8* %v2_c110)
  %v0_c424 = load i32, i32* @r5, align 4
  store i32 %v2_c420, i32* @r4, align 4
  %v2_c430 = inttoptr i32 %v0_c424 to i32*
  %v3_c430 = call i32 @function_10618(i32 6, i32* %v2_c430)
  %v0_c438 = load i32, i32* @r4, align 4
  %v1_c438 = load i32, i32* @sl, align 4
  %v2_c438 = add i32 %v1_c438, %v0_c438
  store i32 %v2_c438, i32* @r0, align 4
  %v2_c43c = inttoptr i32 %v2_c438 to i8*
  %v3_c43c = call i32 @function_10b64(i8* %v2_c43c, i32 %v3_c430)
  %v1_c444 = call i32 @function_11744(i32 %v2_c0ec)
  store i32 %v1_c444, i32* @r8, align 4
  %v2_c448 = icmp eq i32 %v1_c444, 0
  br i1 %v2_c448, label %dec_label_pc_c35c.loopexit, label %dec_label_pc_c450.preheader

dec_label_pc_c450.preheader:                      ; preds = %dec_label_pc_c3f0
  %v1_c45439 = inttoptr i32 %v1_c444 to i32*
  %v2_c45440 = call i32 @function_11888(i32* %v1_c45439)
  store i32 %v2_c45440, i32* @r6, align 4
  %v2_c45842 = icmp eq i32 %v2_c45440, 0
  store i32 4096, i32* @r1, align 4
  store i32 %v2_c0dc, i32* @r0, align 4
  br i1 %v2_c45842, label %dec_label_pc_c558, label %dec_label_pc_c468thread-pre-split

dec_label_pc_c450.loopexit:                       ; preds = %dec_label_pc_c470, %dec_label_pc_c508
  %v0_c450 = load i32, i32* @r8, align 4
  %v1_c454 = inttoptr i32 %v0_c450 to i32*
  %v2_c454 = call i32 @function_11888(i32* %v1_c454)
  store i32 %v2_c454, i32* @r6, align 4
  %v2_c458 = icmp eq i32 %v2_c454, 0
  store i32 4096, i32* @r1, align 4
  store i32 %v2_c0dc, i32* @r0, align 4
  br i1 %v2_c458, label %dec_label_pc_c558, label %dec_label_pc_c468thread-pre-split

dec_label_pc_c468thread-pre-split:                ; preds = %dec_label_pc_c450.preheader, %dec_label_pc_c450.loopexit
  %v0_c468.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_c468

dec_label_pc_c468:                                ; preds = %dec_label_pc_c468thread-pre-split, %dec_label_pc_c530
  %v0_c468 = phi i32 [ %v0_c468.pr, %dec_label_pc_c468thread-pre-split ], [ 1, %dec_label_pc_c530 ]
  %v2_c468 = icmp eq i32 %v0_c468, 0
  br i1 %v2_c468, label %dec_label_pc_c470, label %dec_label_pc_c558

dec_label_pc_c470:                                ; preds = %dec_label_pc_c468
  %v0_c470 = call i32 @function_10bd0()
  %v0_c474 = load i32, i32* @r5, align 4
  %v2_c47c = inttoptr i32 %v0_c474 to i32*
  %v3_c47c = call i32 @function_10618(i32 3, i32* %v2_c47c)
  store i32 %v2_c0ec, i32* @r0, align 4
  %v3_c488 = call i32 @function_10b64(i8* %v2_c110, i32 %v3_c47c)
  %v2_c490 = call i32 @function_10b3c(i8* %v2_c110)
  %v0_c494 = load i32, i32* @r7, align 4
  %v1_c498 = load i32, i32* @sl, align 4
  %v2_c498 = add i32 %v1_c498, %v2_c490
  store i32 %v2_c498, i32* @r0, align 4
  %v2_c49c = inttoptr i32 %v2_c498 to i8*
  %v3_c49c = call i32 @function_10b64(i8* %v2_c49c, i32 %v0_c494)
  %v2_c4a4 = call i32 @function_10b3c(i8* %v2_c110)
  %v0_c4a8 = load i32, i32* @r5, align 4
  store i32 %v2_c4a4, i32* @r4, align 4
  %v2_c4b4 = inttoptr i32 %v0_c4a8 to i32*
  %v3_c4b4 = call i32 @function_10618(i32 6, i32* %v2_c4b4)
  %v0_c4bc = load i32, i32* @r4, align 4
  %v1_c4bc = load i32, i32* @sl, align 4
  %v2_c4bc = add i32 %v1_c4bc, %v0_c4bc
  store i32 %v2_c4bc, i32* @r0, align 4
  %v2_c4c0 = inttoptr i32 %v2_c4bc to i8*
  %v3_c4c0 = call i32 @function_10b64(i8* %v2_c4c0, i32 %v3_c4b4)
  %v2_c4c8 = call i32 @function_10b3c(i8* %v2_c110)
  %v1_c4d0 = load i32, i32* @sl, align 4
  %v2_c4d0 = add i32 %v1_c4d0, %v2_c4c8
  store i32 %v2_c4d0, i32* @r0, align 4
  %v2_c4d4 = inttoptr i32 %v2_c4d0 to i8*
  %v3_c4d4 = call i32 @function_10b64(i8* %v2_c4d4, i32 ptrtoint (i32* @global_var_16b44.52 to i32))
  %v2_c4dc = call i32 @function_10b3c(i8* %v2_c110)
  %v0_c4e0 = load i32, i32* @r6, align 4
  %v1_c4e0 = add i32 %v0_c4e0, 11
  %v1_c4e4 = load i32, i32* @sl, align 4
  %v2_c4e4 = add i32 %v1_c4e4, %v2_c4dc
  store i32 %v2_c4e4, i32* @r0, align 4
  %v2_c4e8 = inttoptr i32 %v2_c4e4 to i8*
  %v3_c4e8 = call i32 @function_10b64(i8* %v2_c4e8, i32 %v1_c4e0)
  %v3_c4f8 = call i32 @function_112ac(i32 %v2_c0ec, i32 %v2_c0dc, i32 4096)
  %v7_c4fc = icmp eq i32 %v3_c4f8, -1
  br i1 %v7_c4fc, label %dec_label_pc_c450.loopexit, label %dec_label_pc_c508

dec_label_pc_c508:                                ; preds = %dec_label_pc_c470
  %v2_c508 = call i32 @function_10b3c(i8* %v2_c0fc)
  store i32 %v2_c508, i32* @r1, align 4
  %v4_c51c = call i32 @function_10e8c(i8* %v2_c0fc, i32 %v2_c508, i32 %v2_c328.pre-phi)
  %v7_c520 = icmp eq i32 %v4_c51c, -1
  br i1 %v7_c520, label %dec_label_pc_c450.loopexit, label %dec_label_pc_c530

dec_label_pc_c530:                                ; preds = %dec_label_pc_c508
  %v0_c528 = load i32, i32* @r7, align 4
  %v2_c530 = inttoptr i32 %v0_c528 to i8*
  %v3_c530 = call i32 @function_10c60(i8* %v2_c530, i32 10)
  %v2_c538 = call i32 @function_11314(i32 %v3_c530, i32 9)
  %v0_c53c = load i32, i32* @r8, align 4
  %v1_c540 = inttoptr i32 %v0_c53c to i32*
  %v2_c540 = call i32 @function_11888(i32* %v1_c540)
  store i32 %v2_c540, i32* @r6, align 4
  %v2_c544 = icmp eq i32 %v2_c540, 0
  store i32 1, i32* @r5, align 4
  store i32 4096, i32* @r1, align 4
  store i32 %v2_c0dc, i32* @r0, align 4
  br i1 %v2_c544, label %dec_label_pc_c558, label %dec_label_pc_c468

dec_label_pc_c558:                                ; preds = %dec_label_pc_c450.loopexit, %dec_label_pc_c530, %dec_label_pc_c468, %dec_label_pc_c450.preheader
  %v0_c558 = load i32, i32* @r8, align 4
  %v1_c55c = inttoptr i32 %v0_c558 to i32*
  %v2_c55c = call i32 @function_1157c(i32* %v1_c55c)
  %v0_c560 = load i32, i32* @sb, align 4
  %v1_c564 = inttoptr i32 %v0_c560 to i32*
  %v2_c564 = call i32 @function_11888(i32* %v1_c564)
  %v2_c568 = icmp eq i32 %v2_c564, 0
  br i1 %v2_c568, label %dec_label_pc_c570, label %dec_label_pc_c36c

dec_label_pc_c570:                                ; preds = %dec_label_pc_c35c.loopexit, %dec_label_pc_c558, %dec_label_pc_c36c, %dec_label_pc_c35c.preheader
  %v0_c570 = load i32, i32* @sb, align 4
  %v1_c574 = inttoptr i32 %v0_c570 to i32*
  %v2_c574 = call i32 @function_1157c(i32* %v1_c574)
  %v0_c578 = load i32, i32* @r5, align 4
  %v1_c578 = urem i32 %v0_c578, 256
  br label %dec_label_pc_c57c

dec_label_pc_c57c:                                ; preds = %dec_label_pc_c33c, %dec_label_pc_c570
  %storemerge = phi i32 [ %v1_c578, %dec_label_pc_c570 ], [ 0, %dec_label_pc_c33c ]
  store i32 %storemerge, i32* @r4, align 4
  %v1_c580 = call i32 @function_13440(i32 1)
  br label %dec_label_pc_c588

dec_label_pc_c588:                                ; preds = %dec_label_pc_c31c, %dec_label_pc_c57c
  %v1_c588 = call i32 @function_1063c(i32 3)
  %v1_c590 = call i32 @function_1063c(i32 4)
  %v1_c598 = call i32 @function_1063c(i32 6)
  %v1_c5a0 = call i32 @function_1063c(i32 8)
  %v0_c5a4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c5a4

dec_label_pc_c5a4:                                ; preds = %bb, %dec_label_pc_c588
  %v0_c5a4 = phi i32 [ %v1_c17c, %bb ], [ %v0_c5a4.pre, %dec_label_pc_c588 ]
  store i32 %v3_c094, i32* @r4, align 4
  store i32 %v6_c094, i32* @r5, align 4
  store i32 %v9_c094, i32* @r6, align 4
  store i32 %v12_c094, i32* @r7, align 4
  store i32 %v15_c094, i32* @r8, align 4
  store i32 %v18_c094, i32* @sb, align 4
  store i32 %v21_c094, i32* @sl, align 4
  store i32 %v24_c094, i32* @fp, align 4
  store i32 %v27_c094, i32* @lr, align 4
  ret i32 %v0_c5a4

dec_label_pc_c5b8:                                ; preds = %dec_label_pc_c28c
  %v1_c5b8 = add i32 %v0_c5b8, 1
  %v7_c5bc = icmp eq i32 %v0_c5b8, 0
  br i1 %v7_c5bc, label %dec_label_pc_c5c4, label %dec_label_pc_c294

dec_label_pc_c5c4:                                ; preds = %dec_label_pc_c5b8
  %v1_c5c4 = add i32 %v0_c29c, 3
  %v2_c5c4 = inttoptr i32 %v1_c5c4 to i8*
  %v3_c5c4 = load i8, i8* %v2_c5c4, align 1
  %v7_c5c8 = icmp eq i8 %v3_c5c4, 65
  br i1 %v7_c5c8, label %dec_label_pc_c5dc, label %dec_label_pc_c5d0

dec_label_pc_c5d0:                                ; preds = %dec_label_pc_c5c4, %dec_label_pc_c5dc
  %v0_c2a483 = phi i32 [ %v0_c2a484, %dec_label_pc_c5c4 ], [ 1, %dec_label_pc_c5dc ]
  br label %dec_label_pc_c26c.backedge

dec_label_pc_c26c.backedge:                       ; preds = %dec_label_pc_c5d0, %dec_label_pc_c298
  %v0_c2a482 = phi i32 [ %v0_c2a483, %dec_label_pc_c5d0 ], [ %v0_c2a484, %dec_label_pc_c298 ]
  %v0_c5b874 = phi i32 [ %v1_c5b8, %dec_label_pc_c5d0 ], [ %v0_c298, %dec_label_pc_c298 ]
  %v0_c28c.pr71 = phi i32 [ 0, %dec_label_pc_c5d0 ], [ %v0_c28c.pr72, %dec_label_pc_c298 ]
  %v0_c26c = add i32 %v0_c29c, 1
  %v1_c26c = add i32 %v0_c29c, 3
  %v2_c26c = inttoptr i32 %v1_c26c to i8*
  %v3_c26c = load i8, i8* %v2_c26c, align 1
  %v2_c270 = icmp eq i8 %v3_c26c, 0
  %v1_c274 = add i32 %v0_c27479, 1
  br i1 %v2_c270, label %dec_label_pc_c2a4, label %dec_label_pc_c27c

dec_label_pc_c5dc:                                ; preds = %dec_label_pc_c5c4
  store i32 1, i32* @lr, align 4
  br label %dec_label_pc_c5d0

dec_label_pc_c5e4:                                ; preds = %dec_label_pc_c094
  store i8 48, i8* %stack_var_-72, align 1
  br label %dec_label_pc_c140

; uselistorder directives
  uselistorder i32 %v1_c274, { 1, 0 }
  uselistorder i8 %v3_c26c, { 1, 0 }
  uselistorder i32 %v0_c2a482, { 1, 0 }
  uselistorder i32 %v1_c5b8, { 1, 0 }
  uselistorder i32 %v2_c564, { 1, 0 }
  uselistorder i32 %v1_c2d0, { 1, 0 }
  uselistorder i32 %v0_c2dc30, { 1, 0 }
  uselistorder i32 %v1_c2f4, { 0, 3, 1, 2 }
  uselistorder i32 %v0_c298, { 1, 0 }
  uselistorder i32 %v0_c27479, { 1, 0 }
  uselistorder i32 %v0_c5b8, { 4, 3, 0, 1, 2 }
  uselistorder i32 %v0_c2a484, { 1, 2, 0 }
  uselistorder i32 %v1_c27455, { 1, 0 }
  uselistorder i32 %v2_c258, { 1, 0 }
  uselistorder i32 %v1_c254, { 3, 1, 0, 2, 4 }
  uselistorder i32 %v1_c214, { 0, 2, 1 }
  uselistorder i32 %v0_c21416, { 1, 0 }
  uselistorder i32 %v1_c1e0, { 0, 2, 3, 4, 5, 6, 1 }
  uselistorder i32 %v2_c170, { 1, 2, 0 }
  uselistorder i32 %v0_c118, { 1, 0 }
  uselistorder i32 %v2_c114, { 1, 0, 2 }
  uselistorder i8* %v2_c0fc, { 1, 0, 2 }
  uselistorder i32 %v2_c0dc, { 1, 2, 3, 0, 4, 5 }
  uselistorder i8* %stack_var_-585, { 1, 4, 0, 2, 3 }
  uselistorder i8* %stack_var_-72, { 2, 0, 1 }
  uselistorder i32* %stack_var_-56, { 0, 1, 2, 4, 3 }
  uselistorder i32 (i32, i32, i32)* @function_112ac, { 1, 0 }
  uselistorder i32 (i8*, i32, i32)* @function_10d9c, { 1, 0 }
  uselistorder label %dec_label_pc_c5d0, { 1, 0 }
  uselistorder label %dec_label_pc_c5a4, { 1, 0 }
  uselistorder label %dec_label_pc_c588, { 1, 0 }
  uselistorder label %dec_label_pc_c57c, { 1, 0 }
  uselistorder label %dec_label_pc_c570, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_c558, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_c468, { 1, 0 }
  uselistorder label %dec_label_pc_c468thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_c450.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_c36c, { 1, 0 }
  uselistorder label %dec_label_pc_c36c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_c35c.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_c2f0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_c298, { 2, 0, 1 }
  uselistorder label %dec_label_pc_c27c, { 1, 0 }
  uselistorder label %dec_label_pc_c220, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_c184.backedge, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_c1d4, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_c19c, { 1, 0 }
  uselistorder label %dec_label_pc_c140, { 1, 0 }
}

define i32 @function_c610(i32 %arg1) local_unnamed_addr {
dec_label_pc_c610:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-632 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %v3_c610 = load i32, i32* @r4, align 4
  %v6_c610 = load i32, i32* @r5, align 4
  %v9_c610 = load i32, i32* @r6, align 4
  %v12_c610 = load i32, i32* @r7, align 4
  %v15_c610 = load i32, i32* @r8, align 4
  %v18_c610 = load i32, i32* @sb, align 4
  %v21_c610 = load i32, i32* @sl, align 4
  %v24_c610 = load i32, i32* @fp, align 4
  %v2_c61c = call i32 @function_111c8(i32* null)
  store i32 %v2_c61c, i32* @r0, align 4
  store i32 %v2_c61c, i32* @r5, align 4
  %v0_c624 = call i32 @function_11238()
  %v7_c628 = icmp eq i32 %v0_c624, -1
  %. = zext i1 %v7_c628 to i32
  %tmp69 = icmp slt i32 %v0_c624, 1
  %storemerge50 = select i1 %tmp69, i32 %., i32 1
  store i32 %storemerge50, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_1f5bc.50 to i32), i32* %r3.global-to-local, align 4
  %v2_c644 = icmp eq i32 %storemerge50, 0
  store i32 %v0_c624, i32* @global_var_1f5bc.50, align 4
  br i1 %v2_c644, label %dec_label_pc_c65c, label %dec_label_pc_c650

dec_label_pc_c650:                                ; preds = %dec_label_pc_c6ac, %dec_label_pc_c610
  %v1_c658 = phi i32 [ %v0_c624, %dec_label_pc_c610 ], [ 0, %dec_label_pc_c6ac ]
  store i32 %v3_c610, i32* @r4, align 4
  store i32 %v6_c610, i32* @r5, align 4
  store i32 %v9_c610, i32* @r6, align 4
  store i32 %v12_c610, i32* @r7, align 4
  store i32 %v15_c610, i32* @r8, align 4
  store i32 %v18_c610, i32* @sb, align 4
  store i32 %v21_c610, i32* @sl, align 4
  store i32 %v24_c610, i32* @fp, align 4
  ret i32 %v1_c658

dec_label_pc_c65c:                                ; preds = %dec_label_pc_c610
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-56, align 4
  %v1_c670 = call i32 @function_c094(i32 20736)
  %v2_c674 = icmp eq i32 %v1_c670, 0
  br i1 %v2_c674, label %dec_label_pc_c67c, label %dec_label_pc_c8d8

dec_label_pc_c67c:                                ; preds = %dec_label_pc_c65c, %dec_label_pc_c8d8, %dec_label_pc_c900
  %v1_c680 = call i32 @function_13440(i32 5)
  store i32 4096, i32* @r0, align 4
  %v0_c688 = call i32 @function_11f78()
  %v1_c688 = inttoptr i32 %v0_c688 to i8*
  store i32 %v0_c688, i32* @global_var_21648.55, align 4
  store i32 ptrtoint (i32* @global_var_1f5c0.57 to i32), i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v1_c688, align 1
  %v0_c6a0 = load i32, i32* %r2.global-to-local, align 4
  %v1_c6a0 = load i32, i32* %r3.global-to-local, align 4
  %v2_c6a0 = inttoptr i32 %v1_c6a0 to i32*
  store i32 %v0_c6a0, i32* %v2_c6a0, align 4
  %v0_c6a4 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_c6a4, i32* @fp, align 4
  store i32 400, i32* @r6, align 4
  %v2_c7a0 = ptrtoint i32* %stack_var_-120 to i32
  %v2_c7ac = bitcast i32* %stack_var_-120 to i8*
  %v2_c80c = ptrtoint i32* %stack_var_-632 to i32
  br label %dec_label_pc_c6ac

dec_label_pc_c6ac:                                ; preds = %dec_label_pc_c76c, %dec_label_pc_c67c
  %v1_c6b0 = call i32 @function_106dc(i32 3)
  %v3_c6bc = call i32 @function_10618(i32 3, i32* null)
  %v1_c6c0 = call i32 @function_11744(i32 %v3_c6bc)
  store i32 %v1_c6c0, i32* @sl, align 4
  %v2_c6c4 = icmp eq i32 %v1_c6c0, 0
  br i1 %v2_c6c4, label %dec_label_pc_c650, label %dec_label_pc_c6cc

dec_label_pc_c6cc:                                ; preds = %dec_label_pc_c6ac
  %v1_c6d0 = call i32 @function_1063c(i32 3)
  %v0_c6d431 = load i32, i32* @sl, align 4
  %v1_c6d832 = inttoptr i32 %v0_c6d431 to i32*
  %v2_c6d833 = call i32 @function_11888(i32* %v1_c6d832)
  %v2_c6dc35 = icmp eq i32 %v2_c6d833, 0
  br i1 %v2_c6dc35, label %dec_label_pc_c76c, label %dec_label_pc_c6e4.preheader

dec_label_pc_c6e4.preheader:                      ; preds = %dec_label_pc_c6cc, %dec_label_pc_c6d4.backedge
  %v0_c6e440 = phi i32 [ %v2_c6d8, %dec_label_pc_c6d4.backedge ], [ %v2_c6d833, %dec_label_pc_c6cc ]
  br label %dec_label_pc_c6e4

dec_label_pc_c6e4:                                ; preds = %dec_label_pc_c6e4.preheader, %dec_label_pc_c754
  %v0_c6f4 = phi i32 [ %v0_c6e440, %dec_label_pc_c6e4.preheader ], [ %v2_c760, %dec_label_pc_c754 ]
  %v1_c6e4 = add i32 %v0_c6f4, 11
  %v2_c6e4 = inttoptr i32 %v1_c6e4 to i8*
  %v3_c6e4 = load i8, i8* %v2_c6e4, align 1
  %v4_c6e4 = zext i8 %v3_c6e4 to i32
  %v1_c6e8 = add nsw i32 %v4_c6e4, -48
  store i32 %v1_c6e8, i32* %r3.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_c6e8, 9
  br i1 %tmp, label %dec_label_pc_c6d4.backedge, label %dec_label_pc_c6f4

dec_label_pc_c6f4:                                ; preds = %dec_label_pc_c6e4
  store i32 %v1_c6e4, i32* @r4, align 4
  %v3_c700 = call i32 @function_10c60(i8* %v2_c6e4, i32 10)
  %v0_c704 = load i32, i32* @r6, align 4
  store i32 %v3_c700, i32* @r8, align 4
  %v0_c70c = load i32, i32* @fp, align 4
  %v1_c70c = add i32 %v0_c70c, 1
  store i32 %v1_c70c, i32* @fp, align 4
  %v5_c710 = icmp slt i32 %v0_c704, %v3_c700
  %v2_c77c = call i32 @function_111c8(i32* null)
  br i1 %v5_c710, label %dec_label_pc_c778, label %dec_label_pc_c714

dec_label_pc_c714:                                ; preds = %dec_label_pc_c6f4
  %v0_c71c = load i32, i32* @r5, align 4
  %v2_c71c = sub i32 %v2_c77c, %v0_c71c
  %v7_c724 = icmp slt i32 %v2_c71c, 601
  br i1 %v7_c724, label %dec_label_pc_c72c, label %.thread7

.thread7:                                         ; preds = %dec_label_pc_c714
  store i32 400, i32* @r6, align 4
  br label %dec_label_pc_c6d4.backedge

dec_label_pc_c72c:                                ; preds = %dec_label_pc_c714
  %v0_c72c = load i32, i32* @r8, align 4
  %v7_c730 = icmp slt i32 %v0_c72c, 401
  br i1 %v7_c730, label %dec_label_pc_c6d4.backedge, label %dec_label_pc_c734

dec_label_pc_c734:                                ; preds = %dec_label_pc_c72c
  %v2_c738 = load i32, i32* @fp, align 4
  %v3_c738 = zext i32 %v2_c738 to i64
  %v4_c738 = mul nuw i64 %v3_c738, 3435973837
  %v3_c73c1 = udiv i64 %v4_c738, 34359738368
  %v3_c7403 = mul nuw nsw i64 %v3_c73c1, 8
  %v3_c740 = trunc i64 %v3_c7403 to i32
  store i32 %v3_c740, i32* %r3.global-to-local, align 4
  %v2_c7445 = mul nuw nsw i64 %v3_c73c1, 2
  %v2_c744 = trunc i64 %v2_c7445 to i32
  %v2_c748 = add i32 %v3_c740, %v2_c744
  store i32 %v2_c748, i32* %r2.global-to-local, align 4
  %v9_c74c = icmp eq i32 %v2_c738, %v2_c748
  br i1 %v9_c74c, label %dec_label_pc_c754, label %dec_label_pc_c6d4.backedge

dec_label_pc_c754:                                ; preds = %dec_label_pc_c734
  %v1_c758 = call i32 @function_13440(i32 1)
  %v0_c75c = load i32, i32* @sl, align 4
  %v1_c760 = inttoptr i32 %v0_c75c to i32*
  %v2_c760 = call i32 @function_11888(i32* %v1_c760)
  %v2_c764 = icmp eq i32 %v2_c760, 0
  br i1 %v2_c764, label %dec_label_pc_c76c, label %dec_label_pc_c6e4

dec_label_pc_c76c:                                ; preds = %dec_label_pc_c6d4.backedge, %dec_label_pc_c754, %dec_label_pc_c6cc
  %v0_c76c = load i32, i32* @sl, align 4
  %v1_c770 = inttoptr i32 %v0_c76c to i32*
  %v2_c770 = call i32 @function_1157c(i32* %v1_c770)
  br label %dec_label_pc_c6ac

dec_label_pc_c778:                                ; preds = %dec_label_pc_c6f4
  %v1_c788 = call i32 @function_106dc(i32 3)
  %v1_c790 = call i32 @function_106dc(i32 7)
  %v3_c79c = call i32 @function_10618(i32 3, i32* null)
  store i32 %v2_c7a0, i32* @sb, align 4
  store i32 %v2_c7a0, i32* @r0, align 4
  %v3_c7ac = call i32 @function_10b64(i8* %v2_c7ac, i32 %v3_c79c)
  %v1_c7b0 = load i32, i32* @sb, align 4
  %v2_c7b0 = add i32 %v1_c7b0, %v3_c7ac
  store i32 %v2_c7b0, i32* @r5, align 4
  %v0_c7b4 = load i32, i32* @r4, align 4
  store i32 %v2_c7b0, i32* @r0, align 4
  %v2_c7bc = inttoptr i32 %v2_c7b0 to i8*
  %v3_c7bc = call i32 @function_10b64(i8* %v2_c7bc, i32 %v0_c7b4)
  store i32 %v3_c7bc, i32* @r4, align 4
  %v3_c7cc = call i32 @function_10618(i32 7, i32* null)
  %v0_c7d4 = load i32, i32* @r4, align 4
  %v1_c7d4 = load i32, i32* @r5, align 4
  %v2_c7d4 = add i32 %v1_c7d4, %v0_c7d4
  store i32 %v2_c7d4, i32* @r0, align 4
  %v2_c7d8 = inttoptr i32 %v2_c7d4 to i8*
  %v3_c7d8 = call i32 @function_10b64(i8* %v2_c7d8, i32 %v3_c7cc)
  %v1_c7e0 = call i32 @function_1063c(i32 3)
  %v1_c7e8 = call i32 @function_1063c(i32 7)
  %v2_c7f4 = call i32 @function_11154(i32 %v2_c7a0, i32 0)
  %v7_c7f8 = icmp eq i32 %v2_c7f4, -1
  store i32 %v2_c7f4, i32* @r7, align 4
  br i1 %v7_c7f8, label %dec_label_pc_c8a4, label %dec_label_pc_c804

dec_label_pc_c804:                                ; preds = %dec_label_pc_c778
  %v1_c808 = call i32 @function_106dc(i32 9)
  store i32 %v2_c80c, i32* @r6, align 4
  %v0_c81027 = load i32, i32* @r7, align 4
  store i32 512, i32* %r2.global-to-local, align 4
  %v1_c81c28 = call i32 @function_112e0(i32 %v0_c81027)
  store i32 %v1_c81c28, i32* @r4, align 4
  %tmp72 = icmp slt i32 %v1_c81c28, 1
  br i1 %tmp72, label %dec_label_pc_c8c4, label %dec_label_pc_c828

dec_label_pc_c828:                                ; preds = %dec_label_pc_c804, %dec_label_pc_c810.backedge
  %v3_c830 = call i32 @function_10618(i32 9, i32* null)
  store i32 %v3_c830, i32* @r5, align 4
  %v3_c840 = call i32 @function_10618(i32 9, i32* null)
  %v1_c844 = inttoptr i32 %v3_c840 to i8*
  %v2_c844 = call i32 @function_10b3c(i8* %v1_c844)
  %v0_c848 = load i32, i32* @r4, align 4
  %v5_c84c = icmp slt i32 %v0_c848, %v2_c844
  br i1 %v5_c84c, label %dec_label_pc_c810.backedge, label %.thread12

dec_label_pc_c810.backedge:                       ; preds = %dec_label_pc_c874, %.thread12, %dec_label_pc_c828
  %v0_c810 = load i32, i32* @r7, align 4
  store i32 512, i32* %r2.global-to-local, align 4
  %v1_c81c = call i32 @function_112e0(i32 %v0_c810)
  store i32 %v1_c81c, i32* @r4, align 4
  %tmp73 = icmp slt i32 %v1_c81c, 1
  br i1 %tmp73, label %dec_label_pc_c8c4, label %dec_label_pc_c828

.thread12:                                        ; preds = %dec_label_pc_c828
  %v1_c85819 = add i32 %v0_c848, -1
  store i32 %v1_c85819, i32* @r4, align 4
  %v2_c85820 = icmp eq i32 %v0_c848, 0
  br i1 %v2_c85820, label %dec_label_pc_c810.backedge, label %dec_label_pc_c860.lr.ph

dec_label_pc_c860.lr.ph:                          ; preds = %.thread12
  %v0_c860.pre = load i32, i32* @r5, align 4
  %v1_c864.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_c860

dec_label_pc_c860:                                ; preds = %dec_label_pc_c874, %dec_label_pc_c860.lr.ph
  %v0_c858 = phi i32 [ %v1_c85819, %dec_label_pc_c860.lr.ph ], [ %v1_c858, %dec_label_pc_c874 ]
  %v0_c874 = phi i32 [ 0, %dec_label_pc_c860.lr.ph ], [ %v1_c874, %dec_label_pc_c874 ]
  %v1_c860 = phi i32 [ 0, %dec_label_pc_c860.lr.ph ], [ %v1_c86043, %dec_label_pc_c874 ]
  %v2_c860 = add i32 %v1_c860, %v0_c860.pre
  %v3_c860 = inttoptr i32 %v2_c860 to i8*
  %v4_c860 = load i8, i8* %v3_c860, align 1
  %v6_c860 = zext i8 %v4_c860 to i32
  store i32 %v6_c860, i32* %r2.global-to-local, align 4
  %v2_c864 = add i32 %v0_c874, %v1_c864.pre
  %v3_c864 = inttoptr i32 %v2_c864 to i8*
  %v4_c864 = load i8, i8* %v3_c864, align 1
  %v6_c864 = zext i8 %v4_c864 to i32
  store i32 %v6_c864, i32* %r3.global-to-local, align 4
  %v9_c868 = icmp eq i8 %v4_c864, %v4_c860
  br i1 %v9_c868, label %dec_label_pc_c87c, label %bb74

bb74:                                             ; preds = %dec_label_pc_c860
  br label %dec_label_pc_c874

dec_label_pc_c874:                                ; preds = %bb74, %dec_label_pc_c87c
  %v1_c86043 = phi i32 [ %v1_c87c, %dec_label_pc_c87c ], [ 0, %bb74 ]
  %v1_c874 = add i32 %v0_c874, 1
  %v1_c858 = add i32 %v0_c858, -1
  store i32 %v1_c858, i32* @r4, align 4
  %v2_c858 = icmp eq i32 %v0_c858, 0
  br i1 %v2_c858, label %dec_label_pc_c810.backedge, label %dec_label_pc_c860

dec_label_pc_c87c:                                ; preds = %dec_label_pc_c860
  %v1_c87c = add i32 %v1_c860, 1
  %v9_c880 = icmp eq i32 %v2_c844, %v1_c87c
  br i1 %v9_c880, label %dec_label_pc_c888, label %dec_label_pc_c874

dec_label_pc_c888:                                ; preds = %dec_label_pc_c87c
  %v1_c88c = call i32 @function_1063c(i32 9)
  %v0_c890 = load i32, i32* @r7, align 4
  %v1_c894 = call i32 @function_11548(i32 %v0_c890)
  %v0_c898 = load i32, i32* @r8, align 4
  %v2_c8a0 = call i32 @function_11314(i32 %v0_c898, i32 9)
  br label %dec_label_pc_c8a4

dec_label_pc_c8a4:                                ; preds = %dec_label_pc_c778, %dec_label_pc_c8c4, %dec_label_pc_c888
  store i32 %v2_c7a0, i32* @r0, align 4
  store i32 64, i32* @r1, align 4
  %v0_c8ac = call i32 @function_10bd0()
  %v1_c8b4 = call i32 @function_13440(i32 1)
  store i32 %v2_c77c, i32* @r5, align 4
  %v0_c8bc = load i32, i32* @r8, align 4
  store i32 %v0_c8bc, i32* @r6, align 4
  br label %dec_label_pc_c6d4.backedge

dec_label_pc_c6d4.backedge:                       ; preds = %dec_label_pc_c734, %dec_label_pc_c72c, %dec_label_pc_c6e4, %dec_label_pc_c8a4, %.thread7
  %v0_c6d4 = load i32, i32* @sl, align 4
  %v1_c6d8 = inttoptr i32 %v0_c6d4 to i32*
  %v2_c6d8 = call i32 @function_11888(i32* %v1_c6d8)
  %v2_c6dc = icmp eq i32 %v2_c6d8, 0
  br i1 %v2_c6dc, label %dec_label_pc_c76c, label %dec_label_pc_c6e4.preheader

dec_label_pc_c8c4:                                ; preds = %dec_label_pc_c810.backedge, %dec_label_pc_c804
  %v1_c8c8 = call i32 @function_1063c(i32 9)
  %v0_c8cc = load i32, i32* @r7, align 4
  %v1_c8d0 = call i32 @function_11548(i32 %v0_c8cc)
  br label %dec_label_pc_c8a4

dec_label_pc_c8d8:                                ; preds = %dec_label_pc_c65c
  %v2_c660 = ptrtoint i32* %stack_var_-128 to i32
  store i32 %v2_c660, i32* %r3.global-to-local, align 4
  %v0_c8e0 = load i32, i32* @r4, align 4
  store i32 %v0_c8e0, i32* %r2.global-to-local, align 4
  %v3_c8f0 = call i32 @function_11d30(i32 2, i32 1, i32 %v0_c8e0)
  %v7_c8f4 = icmp eq i32 %v3_c8f0, -1
  store i32 %v3_c8f0, i32* @r4, align 4
  br i1 %v7_c8f4, label %dec_label_pc_c67c, label %dec_label_pc_c900

dec_label_pc_c900:                                ; preds = %dec_label_pc_c8d8
  %v2_c900 = ptrtoint i32* %stack_var_-56 to i32
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_c908 = call i32 @function_11ae0(i32 %v3_c8f0, i32 %v2_c900, i32 16)
  %v0_c90c = load i32, i32* @r4, align 4
  %v2_c914 = call i32 @function_11bcc(i32 %v0_c90c, i32 1)
  br label %dec_label_pc_c67c

; uselistorder directives
  uselistorder i32 %v3_c8f0, { 2, 1, 0 }
  uselistorder i32 %v2_c6d8, { 1, 0 }
  uselistorder i32 %v1_c87c, { 1, 0 }
  uselistorder i32 %v1_c858, { 1, 0 }
  uselistorder i32 %v1_c860, { 1, 0 }
  uselistorder i32 %v0_c874, { 1, 0 }
  uselistorder i32 %v0_c858, { 1, 0 }
  uselistorder i32 %v0_c848, { 1, 0, 2 }
  uselistorder i32 %v2_c844, { 1, 0 }
  uselistorder i32 %v2_c7f4, { 1, 0 }
  uselistorder i32 %v2_c760, { 1, 0 }
  uselistorder i32 %storemerge50, { 1, 0 }
  uselistorder i32 %v0_c624, { 1, 2, 3, 0 }
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9 }
  uselistorder i32 (i32*)* @function_11888, { 4, 3, 0, 5, 6, 7, 2, 8, 1 }
  uselistorder i32 (i32)* @function_11744, { 2, 1, 0 }
  uselistorder i32* @global_var_1f5bc.50, { 0, 2, 1 }
  uselistorder label %dec_label_pc_c6d4.backedge, { 3, 0, 1, 4, 2 }
  uselistorder label %dec_label_pc_c8a4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_c874, { 1, 0 }
  uselistorder label %dec_label_pc_c828, { 1, 0 }
  uselistorder label %dec_label_pc_c6e4, { 1, 0 }
  uselistorder label %dec_label_pc_c6e4.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_c67c, { 2, 1, 0 }
}

define i32 @function_c92c() local_unnamed_addr {
dec_label_pc_c92c:
  store i32 51524, i32* inttoptr (i32 127988 to i32*), align 4
  %v1_c938 = load i32, i32* @r0, align 4
  ret i32 %v1_c938
}

define i32 @function_c944(i32 %arg1) local_unnamed_addr {
dec_label_pc_c944:
  %v1_c94c = call i32 @function_106dc(i32 2)
  store i32 ptrtoint (i16** @global_var_2164c.62 to i32), i32* @r4, align 4
  store i32 2128547635, i32* @global_var_21650.64, align 4
  %v3_c964 = call i32 @function_10618(i32 2, i32* null)
  %v4_c964 = inttoptr i32 %v3_c964 to i16*
  %v3_c968 = load i16, i16* %v4_c964, align 2
  store i16 %v3_c968, i16* bitcast (i32* @global_var_2164e.65 to i16*), align 4
  %v1_c974 = call i32 @function_1063c(i32 2)
  ret i32 %v1_c974
}

define i32 @function_c988(i32 %arg1) local_unnamed_addr {
dec_label_pc_c988:
  %r0.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v9_c988 = load i32, i32* @r6, align 4
  %v12_c988 = load i32, i32* @r7, align 4
  %v15_c988 = load i32, i32* @r8, align 4
  store i32 1, i32* @r4, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %stack_var_-28, align 4
  %v3_c9a4 = call i32 @function_11d30(i32 2, i32 1, i32 0)
  store i32 %v3_c9a4, i32* %r0.global-to-local, align 4
  store i32 127980, i32* @r6, align 4
  %v7_c9ac = icmp eq i32 %v3_c9a4, -1
  store i32 %v3_c9a4, i32* inttoptr (i32 127980 to i32*), align 4
  br i1 %v7_c9ac, label %dec_label_pc_c988.dec_label_pc_ca64_crit_edge, label %dec_label_pc_c9b8

dec_label_pc_c988.dec_label_pc_ca64_crit_edge:    ; preds = %dec_label_pc_c988
  %v1_ca6c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ca64

dec_label_pc_c9b8:                                ; preds = %dec_label_pc_c988
  %v2_c9b8 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_c9b8, i32* @r3, align 4
  %v0_c9bc = load i32, i32* @r4, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  %v0_c9cc = load i32, i32* %r0.global-to-local, align 4
  %v5_c9cc = call i32 @function_11cec(i32 %v0_c9cc, i32 %v0_c9bc, i32 2, i32 %v2_c9b8, i32 4)
  store i32 %v5_c9cc, i32* %r0.global-to-local, align 4
  %v0_c9d0 = load i32, i32* @r6, align 4
  %v1_c9d0 = inttoptr i32 %v0_c9d0 to i32*
  %v2_c9d0 = load i32, i32* %v1_c9d0, align 4
  store i32 %v2_c9d0, i32* %r0.global-to-local, align 4
  %v2_c9e0 = call i32 @function_1137c(i32 %v2_c9d0, i32 3)
  %v0_c9e4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v2_c9d0, i32* %r0.global-to-local, align 4
  %v2_c9f0 = call i32 @function_1137c(i32 %v2_c9d0, i32 %v0_c9e4)
  store i32 %v2_c9f0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @1 to i32), i32* @r8, align 4
  %v0_ca20 = call i32 @function_11970()
  store i32 %v0_ca20, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  %v2_ca28 = inttoptr i32 %v0_ca20 to i32*
  store i32 0, i32* %v2_ca28, align 4
  %v2_ca2c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_ca2c, i32* @r5, align 4
  store i32 %v0_ca20, i32* @r4, align 4
  %v0_ca3c = load i32, i32* @r6, align 4
  %v1_ca3c = inttoptr i32 %v0_ca3c to i32*
  %v2_ca3c = load i32, i32* %v1_ca3c, align 4
  store i32 %v2_ca3c, i32* %r0.global-to-local, align 4
  store i32 2, i32* %stack_var_-44, align 4
  %v3_ca48 = call i32 @function_11ae0(i32 %v2_ca3c, i32 %v2_ca2c, i32 16)
  store i32 %v3_ca48, i32* %r0.global-to-local, align 4
  %v7_ca4c = icmp eq i32 %v3_ca48, -1
  br i1 %v7_ca4c, label %dec_label_pc_ca70, label %dec_label_pc_ca54

dec_label_pc_ca54:                                ; preds = %dec_label_pc_c9b8
  %v2_ca5c = load i32, i32* inttoptr (i32 127980 to i32*), align 4
  store i32 %v2_ca5c, i32* %r0.global-to-local, align 4
  %v2_ca60 = call i32 @function_11bcc(i32 %v2_ca5c, i32 1)
  store i32 %v2_ca60, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ca64

dec_label_pc_ca64:                                ; preds = %dec_label_pc_c988.dec_label_pc_ca64_crit_edge, %dec_label_pc_ca7c, %dec_label_pc_ca54
  %v1_ca6c = phi i32 [ %v1_ca6c.pre, %dec_label_pc_c988.dec_label_pc_ca64_crit_edge ], [ %v1_cac4, %dec_label_pc_ca7c ], [ %v2_ca60, %dec_label_pc_ca54 ]
  store i32 %v9_c988, i32* @r6, align 4
  store i32 %v12_c988, i32* @r7, align 4
  store i32 %v15_c988, i32* @r8, align 4
  ret i32 %v1_ca6c

dec_label_pc_ca70:                                ; preds = %dec_label_pc_c9b8
  %v0_ca70 = load i32, i32* @r4, align 4
  %v1_ca70 = inttoptr i32 %v0_ca70 to i32*
  %v2_ca70 = load i32, i32* %v1_ca70, align 4
  %v7_ca74 = icmp eq i32 %v2_ca70, 99
  br i1 %v7_ca74, label %dec_label_pc_cacc, label %dec_label_pc_ca7c

dec_label_pc_ca7c:                                ; preds = %dec_label_pc_cacc, %bb, %dec_label_pc_ca70
  %v0_ca94 = load i32, i32* @r6, align 4
  %v1_ca94 = inttoptr i32 %v0_ca94 to i32*
  %v2_ca94 = load i32, i32* %v1_ca94, align 4
  store i32 %v2_ca94, i32* %r0.global-to-local, align 4
  store i32 2, i32* %stack_var_-44, align 4
  %v3_caa4 = call i32 @function_11b18(i32 %v2_ca94, i32 %v2_ca2c, i32 16)
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_caac = call i32 @function_13440(i32 5)
  store i32 %v1_caac, i32* %r0.global-to-local, align 4
  %v0_cab0 = load i32, i32* @r6, align 4
  %v1_cab0 = inttoptr i32 %v0_cab0 to i32*
  %v2_cab0 = load i32, i32* %v1_cab0, align 4
  store i32 %v2_cab0, i32* %r0.global-to-local, align 4
  %v1_cab4 = call i32 @function_11548(i32 %v2_cab0)
  store i32 50951, i32* %r0.global-to-local, align 4
  %v1_cac0 = call i32 @function_c094(i32 50951)
  store i32 %v1_cac0, i32* %r0.global-to-local, align 4
  %v1_cac4 = call i32 @function_c988(i32 %v1_cac0)
  store i32 %v1_cac4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ca64

dec_label_pc_cacc:                                ; preds = %dec_label_pc_ca70
  %v0_cacc = load i32, i32* @r8, align 4
  %v1_cacc = inttoptr i32 %v0_cacc to i8*
  %v2_cacc = load i8, i8* %v1_cacc, align 1
  %v3_cacc = zext i8 %v2_cacc to i32
  %v1_cad0 = load i32, i32* @r7, align 4
  %v9_cad0 = icmp eq i32 %v3_cacc, %v1_cad0
  br i1 %v9_cad0, label %dec_label_pc_ca7c, label %bb

bb:                                               ; preds = %dec_label_pc_cacc
  %v2_cad8 = trunc i32 %v1_cad0 to i8
  store i8 %v2_cad8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @1, i32 0, i32 0), align 1
  br label %dec_label_pc_ca7c

; uselistorder directives
  uselistorder i32 %v1_cac4, { 1, 0 }
  uselistorder i32 %v2_ca2c, { 1, 0, 2 }
  uselistorder i32 %v2_c9d0, { 1, 0, 2, 3 }
  uselistorder i32 %v3_c9a4, { 1, 0, 2 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3, 4, 6, 5, 8, 7, 10, 9, 11, 13, 12, 14, 15, 17, 18, 19, 16 }
  uselistorder i32 (i32)* @function_c094, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_11bcc, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_11ae0, { 2, 1, 0 }
  uselistorder [4 x i8]* @1, { 1, 0 }
  uselistorder label %dec_label_pc_ca7c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ca64, { 1, 2, 0 }
}

define i32 @function_caec(i32 %arg1) local_unnamed_addr {
dec_label_pc_caec:
  %stack_var_-20 = alloca i32, align 4
  %v3_caec = load i32, i32* @r4, align 4
  %v6_caec = load i32, i32* @r5, align 4
  %v0_caf4 = call i32 @function_11238()
  %v7_caf8 = icmp eq i32 %v0_caf4, -1
  %. = zext i1 %v7_caf8 to i32
  %tmp12 = icmp slt i32 %v0_caf4, 1
  %storemerge5 = select i1 %tmp12, i32 %., i32 1
  store i32 %storemerge5, i32* @r5, align 4
  %v2_cb14 = icmp eq i32 %storemerge5, 0
  store i32 %v0_caf4, i32* @global_var_1f5c4.70, align 4
  br i1 %v2_cb14, label %dec_label_pc_cb2c, label %dec_label_pc_cb20

dec_label_pc_cb20:                                ; preds = %dec_label_pc_caec
  store i32 %v3_caec, i32* @r4, align 4
  store i32 %v6_caec, i32* @r5, align 4
  ret i32 %v0_caf4

dec_label_pc_cb2c:                                ; preds = %dec_label_pc_caec
  store i32 1, i32* %stack_var_-20, align 4
  %v1_cb38 = call i32 @function_106dc(i32 13)
  %v1_cb40 = call i32 @function_106dc(i32 14)
  %v0_cb44 = load i32, i32* @r5, align 4
  %v2_cb4c = inttoptr i32 %v0_cb44 to i32*
  %v3_cb4c = call i32 @function_10618(i32 13, i32* %v2_cb4c)
  %v2_cb54 = call i32 @function_11154(i32 %v3_cb4c, i32 2)
  %v7_cb58 = icmp eq i32 %v2_cb54, -1
  store i32 %v2_cb54, i32* @r4, align 4
  br i1 %v7_cb58, label %dec_label_pc_cba0, label %dec_label_pc_cb64

dec_label_pc_cb64:                                ; preds = %dec_label_pc_cba0, %dec_label_pc_cb2c
  %v0_cb70 = phi i32 [ %v2_cbb0, %dec_label_pc_cba0 ], [ %v2_cb54, %dec_label_pc_cb2c ]
  %v2_cb74 = ptrtoint i32* %stack_var_-20 to i32
  %v3_cb78 = call i32 @function_114bc(i32 %v0_cb70, i32 -2147199228, i32 %v2_cb74)
  br label %dec_label_pc_cb7c

dec_label_pc_cb7c:                                ; preds = %dec_label_pc_cb7c, %dec_label_pc_cb64
  %v0_cb88 = load i32, i32* @r4, align 4
  %v3_cb90 = call i32 @function_114bc(i32 %v0_cb88, i32 -2147199227, i32 0)
  %v1_cb98 = call i32 @function_13440(i32 10)
  br label %dec_label_pc_cb7c

dec_label_pc_cba0:                                ; preds = %dec_label_pc_cb2c
  %v0_cba0 = load i32, i32* @r5, align 4
  %v2_cba8 = inttoptr i32 %v0_cba0 to i32*
  %v3_cba8 = call i32 @function_10618(i32 14, i32* %v2_cba8)
  %v2_cbb0 = call i32 @function_11154(i32 %v3_cba8, i32 2)
  %v3_cbb4 = icmp eq i32 %v2_cbb0, -1
  store i32 %v2_cbb0, i32* @r4, align 4
  br i1 %v3_cbb4, label %dec_label_pc_cbc0, label %dec_label_pc_cb64

dec_label_pc_cbc0:                                ; preds = %dec_label_pc_cba0
  %v1_cbc4 = call i32 @function_1063c(i32 13)
  %v1_cbcc = call i32 @function_1063c(i32 14)
  %v0_cbd0 = load i32, i32* @r5, align 4
  %v1_cbd4 = call i32 @function_13388(i32 %v0_cbd0)
  %v0_cbd8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_cbd8, label %bb15, label %bb16

bb15:                                             ; preds = %dec_label_pc_cbc0
  %v2_cbd8 = load i32, i32* @r4, align 4
  %v5_cbd81 = udiv i32 %v2_cbd8, 2048
  %v6_cbd8 = and i32 %v5_cbd81, 2
  call void @__pseudo_branch(i32 %v6_cbd8)
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_cbc0, %bb15
  ret i32 %v1_cbd4

; uselistorder directives
  uselistorder i32 %v2_cbb0, { 1, 2, 0 }
  uselistorder i32 %v2_cb54, { 1, 2, 0 }
  uselistorder i32 %storemerge5, { 1, 0 }
  uselistorder i32 %v0_caf4, { 2, 1, 3, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
}

define i32 @function_cbdc(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_cbdc:
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-1432 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-42 = alloca i8*, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-408 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %v15_cbdc = load i32, i32* @r8, align 4
  %v2_cbec = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_cbec, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %tmp, i32* @r8, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %v2_cc04 = call i32 @function_11dc8(i32* nonnull %stack_var_-64)
  store i32 %v2_cbec, i32* @r0, align 4
  %v2_cc10 = call i32 @function_11d84(i32 %v2_cbec, i32 2)
  %v0_cc14 = load i32, i32* @r5, align 4
  store i32 %v0_cc14, i32* %r2.global-to-local, align 4
  %v3_cc20 = call i32 @function_11510(i32 %v0_cc14, i32 %v2_cbec, i32 %v0_cc14)
  %v2_cc2c = call i32 @function_11ddc(i32 17, i32 1)
  %v2_cc38 = call i32 @function_11ddc(i32 5, i32 51500)
  %v0_cc3c = call i32 @function_10df8()
  store i32 ptrtoint (i16** @global_var_2164c.62 to i32), i32* %r2.global-to-local, align 4
  store i32 1494907824, i32* @global_var_21650.64, align 4
  store i32 2, i32* %ip.global-to-local, align 4
  store i32 5888, i32* %r3.global-to-local, align 4
  store i32 %v0_cc3c, i32* @global_var_21644.39, align 4
  store i16 5888, i16* bitcast (i32* @global_var_2164e.65 to i16*), align 4
  store i16 2, i16* bitcast (i16** @global_var_2164c.62 to i16*), align 4
  %v6_cc64 = call i32 @function_1077c(i32 %v0_cc3c, i32 ptrtoint (i32* @global_var_21644.39 to i32), i32 ptrtoint (i16** @global_var_2164c.62 to i32), i32 5888)
  store i32 51524, i32* %r3.global-to-local, align 4
  store i32 127988, i32* @lr, align 4
  %v2_cc70 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_cc70, i32* @sb, align 4
  store i32 51524, i32* inttoptr (i32 127988 to i32*), align 4
  %v1_cc78 = call i32 @function_c988(i32 %v6_cc64)
  %v1_cc7c = call i32 @function_d3f4(i32 %v1_cc78)
  store i32 %v2_cc70, i32* @r0, align 4
  store i32 32, i32* @r1, align 4
  %v0_cc88 = call i32 @function_10bd0()
  %v0_cc8c = load i32, i32* @r6, align 4
  %v7_cc8c = icmp eq i32 %v0_cc8c, 2
  br i1 %v7_cc8c, label %dec_label_pc_cdc0, label %dec_label_pc_cc94

dec_label_pc_cc94:                                ; preds = %dec_label_pc_cdc0, %dec_label_pc_cbdc, %dec_label_pc_cdd0
  %v0_cc94 = call i32 @function_d398()
  store i32 %v0_cc94, i32* @r6, align 4
  %v0_cc9c = load i32, i32* @r8, align 4
  %v1_cc9c = inttoptr i32 %v0_cc9c to i32*
  %v2_cc9c = load i32, i32* %v1_cc9c, align 4
  %v1_cca0 = inttoptr i32 %v2_cc9c to i8*
  %v2_cca0 = call i32 @function_10b3c(i8* %v1_cca0)
  %v0_cca8 = load i32, i32* @r8, align 4
  %v1_cca8 = inttoptr i32 %v0_cca8 to i32*
  %v2_cca8 = load i32, i32* %v1_cca8, align 4
  %v1_ccac = inttoptr i32 %v2_cca8 to i8*
  %v2_ccac = call i32 @function_10b3c(i8* %v1_ccac)
  %v1_ccb0 = sub i32 20, %v2_cca0
  store i32 %v2_ccac, i32* @r4, align 4
  %v0_ccb8 = load i32, i32* @r6, align 4
  %v2_ccbc = call i32 @function_11114(i32 %v0_ccb8, i32 %v1_ccb0)
  %v2_ccc0 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_ccc0, i32* @r5, align 4
  %v0_ccc4 = load i32, i32* @r4, align 4
  %v2_ccc4 = add i32 %v0_ccc4, %v1_ccb0
  store i32 %v2_ccc4, i32* @r4, align 4
  %v2_ccd0 = call i32 @function_d45c(i32 %v2_ccc0, i32 %v2_ccc4)
  %v2_ccd4 = ptrtoint i32* %stack_var_-40 to i32
  %v1_ccd8 = load i32, i32* @r4, align 4
  %v2_ccd8 = add i32 %v1_ccd8, %v2_ccd4
  store i32 %v2_ccd8, i32* %r3.global-to-local, align 4
  store i32 0, i32* @sl, align 4
  %v0_cce4 = load i32, i32* @r8, align 4
  %v1_cce4 = inttoptr i32 %v0_cce4 to i32*
  %v2_cce4 = load i32, i32* %v1_cce4, align 4
  store i32 %v2_cce4, i32* @r0, align 4
  %v3_cce8 = add i32 %v2_ccd8, -80
  %v4_cce8 = inttoptr i32 %v3_cce8 to i8*
  store i8 0, i8* %v4_cce8, align 1
  %v2_ccec = inttoptr i32 %v2_cce4 to i8*
  %v3_ccec = call i32 @function_10b64(i8* %v2_ccec, i32 %v2_ccc0)
  store i32 32, i32* @r1, align 4
  store i32 %v2_ccc0, i32* @r0, align 4
  %v0_ccf8 = call i32 @function_10bd0()
  %v0_ccfc = call i32 @function_d398()
  store i32 %v0_ccfc, i32* @r7, align 4
  %v0_cd04 = load i32, i32* @r8, align 4
  %v1_cd04 = inttoptr i32 %v0_cd04 to i32*
  %v2_cd04 = load i32, i32* %v1_cd04, align 4
  %v1_cd08 = inttoptr i32 %v2_cd04 to i8*
  %v2_cd08 = call i32 @function_10b3c(i8* %v1_cd08)
  store i32 %v2_cd08, i32* @r6, align 4
  %v0_cd10 = load i32, i32* @r8, align 4
  %v1_cd10 = inttoptr i32 %v0_cd10 to i32*
  %v2_cd10 = load i32, i32* %v1_cd10, align 4
  %v1_cd14 = inttoptr i32 %v2_cd10 to i8*
  %v2_cd14 = call i32 @function_10b3c(i8* %v1_cd14)
  %v0_cd18 = load i32, i32* @r6, align 4
  %v1_cd18 = sub i32 20, %v0_cd18
  store i32 %v2_cd14, i32* @r4, align 4
  %v0_cd20 = load i32, i32* @r7, align 4
  %v2_cd24 = call i32 @function_11114(i32 %v0_cd20, i32 %v1_cd18)
  %v0_cd28 = load i32, i32* @r4, align 4
  %v2_cd28 = add i32 %v0_cd28, %v1_cd18
  store i32 %v2_cd28, i32* @r4, align 4
  %v2_cd34 = call i32 @function_d45c(i32 %v2_ccc0, i32 %v2_cd28)
  store i32 %v2_ccd4, i32* %r2.global-to-local, align 4
  %v1_cd3c = load i32, i32* @r4, align 4
  %v2_cd3c = add i32 %v1_cd3c, %v2_ccd4
  store i32 %v2_cd3c, i32* %r3.global-to-local, align 4
  %v0_cd40 = load i32, i32* @sl, align 4
  %v1_cd40 = trunc i32 %v0_cd40 to i8
  %v3_cd40 = add i32 %v2_cd3c, -80
  %v4_cd40 = inttoptr i32 %v3_cd40 to i8*
  store i8 %v1_cd40, i8* %v4_cd40, align 1
  %v4_cd4c = call i32 @function_111f8(i32 15, i32 %v2_ccc0, i32 %v2_ccd4, i32 %v2_cd3c)
  %v1_cd54 = call i32 @function_106dc(i32 1)
  %v3_cd64 = call i32 @function_10618(i32 1, i32* nonnull %stack_var_-48)
  %v3_cd68 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_cd68, i32* %r2.global-to-local, align 4
  %v2_cd74 = call i32 @function_11454(i32 1, i32 %v3_cd64)
  store i32 1, i32* %r2.global-to-local, align 4
  %v2_cd84 = call i32 @function_11454(i32 1, i32 ptrtoint (i32* @global_var_16ba8.78 to i32))
  %v1_cd8c = call i32 @function_1063c(i32 1)
  %v1_cd90 = call i32 @function_8560(i32 %v1_cd8c)
  %v1_cd94 = call i32 @function_c610(i32 %v1_cd90)
  store i32 %v1_cd94, i32* @r0, align 4
  %v1_cd98 = call i32 @function_caec(i32 %v1_cd94)
  store i32 %v1_cd98, i32* @r0, align 4
  %v1_cd9c = call i32 @function_dc6c(i32 %v1_cd98)
  store i32 %v1_cd9c, i32* @r0, align 4
  %v0_cda0 = call i32 @function_11238()
  %v1_cda4 = load i32, i32* @sl, align 4
  %v7_cda8 = icmp sgt i32 %v0_cda0, %v1_cda4
  br i1 %v7_cda8, label %dec_label_pc_cdac, label %dec_label_pc_cdf8

dec_label_pc_cdac:                                ; preds = %dec_label_pc_cc94
  store i32 %v15_cbdc, i32* %r8.global-to-local, align 4
  ret i32 %v1_cda4

dec_label_pc_cdc0:                                ; preds = %dec_label_pc_cbdc
  %v0_cdc0 = load i32, i32* @r8, align 4
  %v1_cdc0 = add i32 %v0_cdc0, 4
  %v2_cdc0 = inttoptr i32 %v1_cdc0 to i32*
  %v3_cdc0 = load i32, i32* %v2_cdc0, align 4
  %v1_cdc4 = inttoptr i32 %v3_cdc0 to i8*
  %v2_cdc4 = call i32 @function_10b3c(i8* %v1_cdc4)
  %v8_cdcc = icmp sgt i32 %v2_cdc4, 31
  br i1 %v8_cdcc, label %dec_label_pc_cc94, label %dec_label_pc_cdd0

dec_label_pc_cdd0:                                ; preds = %dec_label_pc_cdc0
  %v0_cdd0 = load i32, i32* @r8, align 4
  %v1_cdd0 = add i32 %v0_cdd0, 4
  %v2_cdd0 = inttoptr i32 %v1_cdd0 to i32*
  %v3_cdd0 = load i32, i32* %v2_cdd0, align 4
  store i32 %v2_cc70, i32* @r0, align 4
  %v2_cdd8 = bitcast i32* %stack_var_-152 to i8*
  %v3_cdd8 = call i32 @function_10b64(i8* %v2_cdd8, i32 %v3_cdd0)
  %v0_cddc = load i32, i32* @r8, align 4
  %v1_cddc = add i32 %v0_cddc, 4
  %v2_cddc = inttoptr i32 %v1_cddc to i32*
  %v3_cddc = load i32, i32* %v2_cddc, align 4
  %v1_cde4 = inttoptr i32 %v3_cddc to i8*
  %v2_cde4 = call i32 @function_10b3c(i8* %v1_cde4)
  store i32 %v2_cde4, i32* @r1, align 4
  store i32 %v3_cddc, i32* @r0, align 4
  %v0_cdf0 = call i32 @function_10bd0()
  br label %dec_label_pc_cc94

dec_label_pc_cdf8:                                ; preds = %dec_label_pc_cc94
  %v1_cdf8 = call i32 @function_11488(i32 %v0_cda0)
  %v0_ce00 = load i32, i32* @sl, align 4
  %v1_ce04 = call i32 @function_11548(i32 %v0_ce00)
  %v1_ce0c = call i32 @function_11548(i32 1)
  %v1_ce14 = call i32 @function_11548(i32 2)
  store i32 127984, i32* @fp, align 4
  %v0_ce1c = load i32, i32* @sl, align 4
  %v2_ce20 = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_ce20, i32* @r7, align 4
  %v2_ce24 = ptrtoint i32* %stack_var_-408 to i32
  store i32 %v2_ce24, i32* @r6, align 4
  %v2_cf04 = ptrtoint i32* %stack_var_-72 to i32
  %v2_cf54 = ptrtoint i32* %stack_var_-168 to i32
  %v2_d130 = ptrtoint i32* %stack_var_-56 to i32
  %v2_d138 = ptrtoint i8** %stack_var_-42 to i32
  %v2_d2dc = ptrtoint i32* %stack_var_-1432 to i32
  %v2_d154 = ptrtoint i32* %stack_var_-52 to i32
  %v1_d204 = bitcast i32* %stack_var_-152 to i8*
  %v2_d1c8 = ptrtoint i32* %stack_var_-88 to i32
  %v1_d1e0 = sub i32 0, %v1_cdf8
  br label %dec_label_pc_ce28

dec_label_pc_ce28:                                ; preds = %dec_label_pc_d264, %dec_label_pc_d300, %bb43, %dec_label_pc_d200, %dec_label_pc_d038, %dec_label_pc_d028, %bb40, %dec_label_pc_d354, %dec_label_pc_d2c0, %dec_label_pc_d274, %dec_label_pc_d250, %dec_label_pc_d180, %dec_label_pc_d0a8, %dec_label_pc_cfe0, %dec_label_pc_cdf8
  %stack_var_-1436.0 = phi i32 [ %v0_ce1c, %dec_label_pc_cdf8 ], [ %stack_var_-1436.0, %bb40 ], [ %stack_var_-1436.1, %dec_label_pc_d028 ], [ %stack_var_-1436.1, %dec_label_pc_d038 ], [ %stack_var_-1436.1, %bb43 ], [ %stack_var_-1436.1, %dec_label_pc_d274 ], [ %stack_var_-1436.1, %dec_label_pc_d0a8 ], [ %stack_var_-1436.1, %dec_label_pc_d300 ], [ %stack_var_-1436.1, %dec_label_pc_d354 ], [ %stack_var_-1436.1, %dec_label_pc_d2c0 ], [ %stack_var_-1436.1, %dec_label_pc_cfe0 ], [ %stack_var_-1436.1, %dec_label_pc_d200 ], [ %stack_var_-1436.1, %dec_label_pc_d250 ], [ %stack_var_-1436.1, %dec_label_pc_d180 ], [ %stack_var_-1436.1, %dec_label_pc_d264 ]
  store i32 0, i32* %stack_var_-280, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_ce34

dec_label_pc_ce34:                                ; preds = %dec_label_pc_ce34, %dec_label_pc_ce28
  %v1_ce38 = phi i32 [ %v1_ce3c, %dec_label_pc_ce34 ], [ 4, %dec_label_pc_ce28 ]
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_ce38 = load i32, i32* @r7, align 4
  %v3_ce38 = add i32 %v2_ce38, %v1_ce38
  %v4_ce38 = inttoptr i32 %v3_ce38 to i32*
  store i32 0, i32* %v4_ce38, align 4
  %v0_ce3c = load i32, i32* %r3.global-to-local, align 4
  %v1_ce3c = add i32 %v0_ce3c, 4
  store i32 %v1_ce3c, i32* %r3.global-to-local, align 4
  %v7_ce40 = icmp eq i32 %v1_ce3c, 128
  br i1 %v7_ce40, label %dec_label_pc_ce48, label %dec_label_pc_ce34

dec_label_pc_ce48:                                ; preds = %dec_label_pc_ce34
  %v0_ce48 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_ce48, i32* %stack_var_-408, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_ce50

dec_label_pc_ce50:                                ; preds = %dec_label_pc_ce50, %dec_label_pc_ce48
  %v1_ce54 = phi i32 [ %v1_ce58, %dec_label_pc_ce50 ], [ 4, %dec_label_pc_ce48 ]
  store i32 0, i32* @r4, align 4
  %v2_ce54 = load i32, i32* @r6, align 4
  %v3_ce54 = add i32 %v2_ce54, %v1_ce54
  %v4_ce54 = inttoptr i32 %v3_ce54 to i32*
  store i32 0, i32* %v4_ce54, align 4
  %v0_ce58 = load i32, i32* %r3.global-to-local, align 4
  %v1_ce58 = add i32 %v0_ce58, 4
  store i32 %v1_ce58, i32* %r3.global-to-local, align 4
  %v7_ce5c = icmp eq i32 %v1_ce58, 128
  br i1 %v7_ce5c, label %dec_label_pc_ce64, label %dec_label_pc_ce50

dec_label_pc_ce64:                                ; preds = %dec_label_pc_ce50
  store i32 127980, i32* %r3.global-to-local, align 4
  %v2_ce68 = load i32, i32* inttoptr (i32 127980 to i32*), align 4
  %v7_ce6c = icmp eq i32 %v2_ce68, -1
  br i1 %v7_ce6c, label %dec_label_pc_ce98, label %dec_label_pc_ce74

dec_label_pc_ce74:                                ; preds = %dec_label_pc_ce64
  %v3_ce74 = udiv i32 %v2_ce68, 32
  %v3_ce78 = mul nuw nsw i32 %v3_ce74, 4
  store i32 %v2_ccd4, i32* %ip.global-to-local, align 4
  %v2_ce80 = add i32 %v3_ce78, %v2_ccd4
  store i32 %v2_ce80, i32* %r3.global-to-local, align 4
  %v1_ce84 = add i32 %v2_ce80, -240
  %v2_ce84 = inttoptr i32 %v1_ce84 to i32*
  %v3_ce84 = load i32, i32* %v2_ce84, align 4
  %v1_ce88 = urem i32 %v2_ce68, 32
  %v7_ce90 = shl i32 1, %v1_ce88
  %v8_ce90 = or i32 %v3_ce84, %v7_ce90
  store i32 %v8_ce90, i32* %r2.global-to-local, align 4
  store i32 %v8_ce90, i32* %v2_ce84, align 4
  br label %dec_label_pc_ce98

dec_label_pc_ce98:                                ; preds = %dec_label_pc_ce64, %dec_label_pc_ce74
  %v0_ce98 = load i32, i32* @fp, align 4
  %v1_ce98 = inttoptr i32 %v0_ce98 to i32*
  %v2_ce98 = load i32, i32* %v1_ce98, align 4
  store i32 %v2_ce98, i32* @r3, align 4
  %v7_ce9c = icmp eq i32 %v2_ce98, -1
  store i32 127984, i32* %r8.global-to-local, align 4
  br i1 %v7_ce9c, label %dec_label_pc_d0c0, label %dec_label_pc_cea8

dec_label_pc_cea8:                                ; preds = %dec_label_pc_d0c0, %dec_label_pc_ce98, %bb42
  %v2_ceac = load i8, i8* bitcast (i8** @global_var_1f5c8.82 to i8*), align 4
  %v3_ceac = zext i8 %v2_ceac to i32
  store i32 %v3_ceac, i32* %r3.global-to-local, align 4
  %v2_ceb0 = icmp eq i8 %v2_ceac, 0
  %v0_cffc = load i32, i32* @fp, align 4
  %v1_cffc = inttoptr i32 %v0_cffc to i32*
  %v2_cffc = load i32, i32* %v1_cffc, align 4
  store i32 %v2_cffc, i32* %ip.global-to-local, align 4
  %v3_d000 = udiv i32 %v2_cffc, 32
  store i32 %v3_d000, i32* %r3.global-to-local, align 4
  br i1 %v2_ceb0, label %dec_label_pc_cffc, label %dec_label_pc_ceb8

dec_label_pc_ceb8:                                ; preds = %dec_label_pc_cea8
  %v3_cec4 = mul nuw nsw i32 %v3_d000, 4
  %v2_cec8 = add i32 %v3_cec4, %v2_ccd4
  store i32 %v2_cec8, i32* %r3.global-to-local, align 4
  %v1_cecc = add i32 %v2_cec8, -368
  %v2_cecc = inttoptr i32 %v1_cecc to i32*
  %v3_cecc = load i32, i32* %v2_cecc, align 4
  %v1_ced0 = urem i32 %v2_cffc, 32
  %v7_ced8 = shl i32 1, %v1_ced0
  %v8_ced8 = or i32 %v3_cecc, %v7_ced8
  store i32 %v8_ced8, i32* %r2.global-to-local, align 4
  store i32 %v8_ced8, i32* %v2_cecc, align 4
  br label %dec_label_pc_cee0

dec_label_pc_cee0:                                ; preds = %dec_label_pc_cffc, %dec_label_pc_ceb8
  store i32 127980, i32* %r3.global-to-local, align 4
  %v2_cee4 = load i32, i32* inttoptr (i32 127980 to i32*), align 4
  store i32 0, i32* @lr, align 4
  %v0_ceec = load i32, i32* %ip.global-to-local, align 4
  %v5_cef0 = icmp slt i32 %v0_ceec, %v2_cee4
  br i1 %v5_cef0, label %bb40, label %bb

bb:                                               ; preds = %dec_label_pc_cee0
  br label %bb40

bb40:                                             ; preds = %dec_label_pc_cee0, %bb
  %v0_cf00 = phi i32 [ %v2_cee4, %dec_label_pc_cee0 ], [ %v0_ceec, %bb ]
  store i32 10, i32* %stack_var_-72, align 4
  %v1_cf00 = add i32 %v0_cf00, 1
  store i32 %v2_cf04, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_ce24, i32* %r2.global-to-local, align 4
  %v5_cf1c = call i32 @function_1126c(i32 %v1_cf00, i32 %v2_ce20, i32 %v2_ce24, i32 0, i32 %v2_cf04)
  %v8_cf20 = icmp eq i32 %v5_cf1c, -1
  br i1 %v8_cf20, label %dec_label_pc_ce28, label %dec_label_pc_cf28

dec_label_pc_cf28:                                ; preds = %bb40
  %v6_cf1c = trunc i32 %v5_cf1c to i16
  %v3_cf28 = icmp eq i16 %v6_cf1c, 0
  br i1 %v3_cf28, label %dec_label_pc_cf30, label %dec_label_pc_cf64

dec_label_pc_cf30:                                ; preds = %dec_label_pc_cf28
  %v5_cf3c = srem i32 %stack_var_-1436.0, 6
  %v4_cf44 = sub i32 %stack_var_-1436.0, %v5_cf3c
  store i32 %v4_cf44, i32* %r3.global-to-local, align 4
  %v2_cf4c = icmp eq i32 %v5_cf3c, 0
  %v1_cf50 = add i32 %stack_var_-1436.0, 1
  store i32 %v1_cf50, i32* @lr, align 4
  store i32 %v2_cf54, i32* %r2.global-to-local, align 4
  %v7_cf58 = inttoptr i32 %v5_cf1c to i8*
  store i8* %v7_cf58, i8** %stack_var_-42, align 4
  br i1 %v2_cf4c, label %dec_label_pc_d130, label %dec_label_pc_cf64

dec_label_pc_cf64:                                ; preds = %dec_label_pc_cf28, %dec_label_pc_cf30, %dec_label_pc_d130
  %stack_var_-1436.1 = phi i32 [ %v1_cf50, %dec_label_pc_d130 ], [ %v1_cf50, %dec_label_pc_cf30 ], [ %stack_var_-1436.0, %dec_label_pc_cf28 ]
  store i32 127980, i32* %r3.global-to-local, align 4
  %v2_cf68 = load i32, i32* inttoptr (i32 127980 to i32*), align 4
  %v7_cf6c = icmp eq i32 %v2_cf68, -1
  br i1 %v7_cf6c, label %dec_label_pc_cf98, label %dec_label_pc_cf74

dec_label_pc_cf74:                                ; preds = %dec_label_pc_cf64
  %v3_cf74 = udiv i32 %v2_cf68, 32
  %v3_cf78 = mul nuw nsw i32 %v3_cf74, 4
  store i32 %v2_ccd4, i32* %ip.global-to-local, align 4
  %v2_cf80 = add i32 %v3_cf78, %v2_ccd4
  store i32 %v2_cf80, i32* %r3.global-to-local, align 4
  %v1_cf84 = add i32 %v2_cf80, -240
  %v2_cf84 = inttoptr i32 %v1_cf84 to i32*
  %v3_cf84 = load i32, i32* %v2_cf84, align 4
  %v1_cf88 = urem i32 %v2_cf68, 32
  %v6_cf8c = lshr i32 %v3_cf84, %v1_cf88
  store i32 %v6_cf8c, i32* %r2.global-to-local, align 4
  %v1_cf90 = urem i32 %v6_cf8c, 2
  %v2_cf90 = icmp eq i32 %v1_cf90, 0
  br i1 %v2_cf90, label %dec_label_pc_cf98, label %dec_label_pc_d1bc

dec_label_pc_cf98:                                ; preds = %dec_label_pc_cf74, %dec_label_pc_cf64
  %v2_cf9c = load i8, i8* bitcast (i8** @global_var_1f5c8.82 to i8*), align 4
  %v3_cf9c = zext i8 %v2_cf9c to i32
  store i32 %v3_cf9c, i32* @r4, align 4
  %v2_cfa0 = icmp eq i8 %v2_cf9c, 0
  %v0_d028 = load i32, i32* @fp, align 4
  %v1_d028 = inttoptr i32 %v0_d028 to i32*
  %v2_d028 = load i32, i32* %v1_d028, align 4
  br i1 %v2_cfa0, label %dec_label_pc_d028, label %dec_label_pc_cfa8

dec_label_pc_cfa8:                                ; preds = %dec_label_pc_cf98
  %v3_cfac = udiv i32 %v2_d028, 32
  store i32 %v2_ccd4, i32* %r2.global-to-local, align 4
  %v3_cfb4 = mul nuw nsw i32 %v3_cfac, 4
  %v2_cfb8 = add i32 %v3_cfb4, %v2_ccd4
  store i32 %v2_cfb8, i32* %r3.global-to-local, align 4
  %v1_cfbc = add i32 %v2_cfb8, -368
  %v2_cfbc = inttoptr i32 %v1_cfbc to i32*
  %v3_cfbc = load i32, i32* %v2_cfbc, align 4
  %v1_cfc0 = urem i32 %v2_d028, 32
  %v6_cfc4 = lshr i32 %v3_cfbc, %v1_cfc0
  store i32 %v6_cfc4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_1f5c8.82 to i32), i32* %r3.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v1_cfd0 = urem i32 %v6_cfc4, 2
  %v2_cfd0 = icmp eq i32 %v1_cfd0, 0
  store i8 0, i8* bitcast (i8** @global_var_1f5c8.82 to i8*), align 4
  store i32 127984, i32* @r5, align 4
  br i1 %v2_cfd0, label %dec_label_pc_cfe0, label %dec_label_pc_d14c

dec_label_pc_cfe0:                                ; preds = %dec_label_pc_cfa8
  store i32 53224, i32* @lr, align 4
  %v1_cfe4 = icmp ne i32 %v2_d028, -1
  call void @__pseudo_cond_branch(i1 %v1_cfe4, i32 ptrtoint (i32* @global_var_11548.84 to i32))
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_cfec = load i32, i32* @r5, align 4
  %v2_cfec = inttoptr i32 %v1_cfec to i32*
  store i32 -1, i32* %v2_cfec, align 4
  %v1_cff4 = call i32 @function_13440(i32 1)
  br label %dec_label_pc_ce28

dec_label_pc_cffc:                                ; preds = %dec_label_pc_cea8
  store i32 %v2_ccd4, i32* %r2.global-to-local, align 4
  %v3_d008 = mul nuw nsw i32 %v3_d000, 4
  %v2_d00c = add i32 %v3_d008, %v2_ccd4
  store i32 %v2_d00c, i32* %r3.global-to-local, align 4
  %v1_d010 = add i32 %v2_d00c, -240
  %v2_d010 = inttoptr i32 %v1_d010 to i32*
  %v3_d010 = load i32, i32* %v2_d010, align 4
  %v1_d014 = urem i32 %v2_cffc, 32
  %v7_d01c = shl i32 1, %v1_d014
  %v8_d01c = or i32 %v3_d010, %v7_d01c
  store i32 %v8_d01c, i32* %r2.global-to-local, align 4
  store i32 %v8_d01c, i32* %v2_d010, align 4
  br label %dec_label_pc_cee0

dec_label_pc_d028:                                ; preds = %dec_label_pc_cf98
  %v7_d02c = icmp eq i32 %v2_d028, -1
  store i32 127984, i32* @r8, align 4
  br i1 %v7_d02c, label %dec_label_pc_ce28, label %dec_label_pc_d038

dec_label_pc_d038:                                ; preds = %dec_label_pc_d028
  %v3_d038 = udiv i32 %v2_d028, 32
  store i32 %v2_ccd4, i32* %r2.global-to-local, align 4
  %v3_d040 = mul nuw nsw i32 %v3_d038, 4
  %v2_d044 = add i32 %v3_d040, %v2_ccd4
  store i32 %v2_d044, i32* %r3.global-to-local, align 4
  %v1_d048 = add i32 %v2_d044, -240
  %v2_d048 = inttoptr i32 %v1_d048 to i32*
  %v3_d048 = load i32, i32* %v2_d048, align 4
  %v1_d04c = urem i32 %v2_d028, 32
  %v6_d050 = lshr i32 %v3_d048, %v1_d04c
  store i32 %v6_d050, i32* %r2.global-to-local, align 4
  %v1_d054 = urem i32 %v6_d050, 2
  %v2_d054 = icmp eq i32 %v1_d054, 0
  br i1 %v2_d054, label %dec_label_pc_ce28, label %dec_label_pc_d05c

dec_label_pc_d05c:                                ; preds = %dec_label_pc_d038
  %v6_d060 = inttoptr i32 %v3_cf9c to i8*
  store i8* %v6_d060, i8** %stack_var_-42, align 4
  store i32 %v2_d138, i32* @sl, align 4
  %v0_d064 = call i32 @function_11970()
  %v0_d068 = load i32, i32* @r4, align 4
  %v2_d068 = inttoptr i32 %v0_d064 to i32*
  store i32 %v0_d068, i32* %v2_d068, align 4
  store i32 %v0_d064, i32* @r5, align 4
  store i32 16386, i32* %r3.global-to-local, align 4
  %v0_d078 = load i32, i32* @r8, align 4
  %v1_d078 = inttoptr i32 %v0_d078 to i32*
  %v2_d078 = load i32, i32* %v1_d078, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_d084 = call i32 @function_11c00(i32 %v2_d078, i32 %v2_d138, i32 2, i32 16386)
  %v7_d088 = icmp eq i32 %v4_d084, -1
  br i1 %v7_d088, label %dec_label_pc_d264, label %dec_label_pc_d090

dec_label_pc_d090:                                ; preds = %dec_label_pc_d05c
  %v2_d090 = icmp eq i32 %v4_d084, 0
  br i1 %v2_d090, label %dec_label_pc_d274, label %dec_label_pc_d098

dec_label_pc_d098:                                ; preds = %dec_label_pc_d090
  store i32 %v2_cf54, i32* %ip.global-to-local, align 4
  %v3_d09c = load i8*, i8** %stack_var_-42, align 4
  %v4_d09c = ptrtoint i8* %v3_d09c to i32
  store i32 %v4_d09c, i32* %r3.global-to-local, align 4
  %v2_d0a0 = icmp eq i8* %v3_d09c, null
  br i1 %v2_d0a0, label %dec_label_pc_d0a8, label %dec_label_pc_d2a4

dec_label_pc_d0a8:                                ; preds = %dec_label_pc_d098
  %v0_d0a8 = load i32, i32* @r8, align 4
  %v1_d0a8 = inttoptr i32 %v0_d0a8 to i32*
  %v2_d0a8 = load i32, i32* %v1_d0a8, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_d0b4 = add i32 %v4_d09c, 16384
  store i32 %v1_d0b4, i32* %r3.global-to-local, align 4
  %v4_d0b8 = call i32 @function_11c00(i32 %v2_d0a8, i32 %v2_d138, i32 2, i32 %v1_d0b4)
  br label %dec_label_pc_ce28

dec_label_pc_d0c0:                                ; preds = %dec_label_pc_ce98
  %v0_d0c8 = load i32, i32* @r4, align 4
  store i32 %v0_d0c8, i32* %r2.global-to-local, align 4
  %v3_d0cc = call i32 @function_11d30(i32 2, i32 1, i32 %v0_d0c8)
  %v7_d0d0 = icmp eq i32 %v3_d0cc, -1
  store i32 %v3_d0cc, i32* @r5, align 4
  %v1_d0d8 = load i32, i32* %r8.global-to-local, align 4
  %v2_d0d8 = inttoptr i32 %v1_d0d8 to i32*
  store i32 %v3_d0cc, i32* %v2_d0d8, align 4
  br i1 %v7_d0d0, label %dec_label_pc_cea8, label %dec_label_pc_d0e0

dec_label_pc_d0e0:                                ; preds = %dec_label_pc_d0c0
  %v0_d0e0 = load i32, i32* @r4, align 4
  store i32 %v0_d0e0, i32* %r2.global-to-local, align 4
  %v2_d0e8 = call i32 @function_1137c(i32 %v3_d0cc, i32 3)
  %v1_d0f0 = or i32 %v2_d0e8, 2048
  store i32 %v1_d0f0, i32* %r2.global-to-local, align 4
  %v0_d0f4 = load i32, i32* @r5, align 4
  %v2_d0f8 = call i32 @function_1137c(i32 %v0_d0f4, i32 4)
  %v2_d100 = load i32, i32* inttoptr (i32 127988 to i32*), align 4
  store i32 %v2_d100, i32* %r3.global-to-local, align 4
  %v2_d104 = icmp eq i32 %v2_d100, 0
  br i1 %v2_d104, label %bb42, label %bb41

bb41:                                             ; preds = %dec_label_pc_d0e0
  br label %bb42

bb42:                                             ; preds = %dec_label_pc_d0e0, %bb41
  %v2_d10c = xor i1 %v2_d104, true
  call void @__pseudo_cond_branch(i1 %v2_d10c, i32 %v2_d100)
  store i32 ptrtoint (i8** @global_var_1f5c8.82 to i32), i32* %ip.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_d118 = load i32, i32* %r8.global-to-local, align 4
  %v1_d118 = inttoptr i32 %v0_d118 to i32*
  %v2_d118 = load i32, i32* %v1_d118, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i8 1, i8* bitcast (i8** @global_var_1f5c8.82 to i8*), align 4
  %v4_d128 = call i32 @function_11b18(i32 %v2_d118, i32 ptrtoint (i16** @global_var_2164c.62 to i32), i32 16)
  br label %dec_label_pc_cea8

dec_label_pc_d130:                                ; preds = %dec_label_pc_cf30
  %v0_d134 = load i32, i32* @fp, align 4
  %v1_d134 = inttoptr i32 %v0_d134 to i32*
  %v2_d134 = load i32, i32* %v1_d134, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_d144 = call i32 @function_11c74(i32 %v2_d134, i32 %v2_d138, i32 2, i32 16384)
  br label %dec_label_pc_cf64

dec_label_pc_d14c:                                ; preds = %dec_label_pc_cfa8
  store i32 4, i32* @r4, align 4
  store i32 %v2_d154, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  store i32 %v2_d130, i32* %ip.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 4, i32* %stack_var_-56, align 4
  %v5_d170 = call i32 @function_11b88(i32 %v2_d028, i32 1, i32 4, i32 %v2_d154, i32 %v2_d130)
  %v3_d174 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_d174, i32* %r3.global-to-local, align 4
  %v2_d178 = icmp eq i32 %v3_d174, 0
  br i1 %v2_d178, label %dec_label_pc_d200, label %dec_label_pc_d180

dec_label_pc_d180:                                ; preds = %dec_label_pc_d14c
  %v0_d180 = load i32, i32* @r5, align 4
  %v1_d180 = inttoptr i32 %v0_d180 to i32*
  %v2_d180 = load i32, i32* %v1_d180, align 4
  %v1_d184 = call i32 @function_11548(i32 %v2_d180)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_d18c = load i32, i32* @r5, align 4
  %v2_d18c = inttoptr i32 %v1_d18c to i32*
  store i32 -1, i32* %v2_d18c, align 4
  %v0_d190 = call i32 @function_d398()
  %v3_d198 = zext i32 %v0_d190 to i64
  %v4_d198 = mul nuw i64 %v3_d198, 3435973837
  %v7_d198 = trunc i64 %v4_d198 to i32
  store i32 %v7_d198, i32* %ip.global-to-local, align 4
  %v3_d19c1 = udiv i64 %v4_d198, 34359738368
  %v3_d1a03 = mul nuw nsw i64 %v3_d19c1, 8
  %v3_d1a0 = trunc i64 %v3_d1a03 to i32
  store i32 %v3_d1a0, i32* %r2.global-to-local, align 4
  %v2_d1a45 = mul nuw nsw i64 %v3_d19c1, 2
  %v2_d1a4 = trunc i64 %v2_d1a45 to i32
  %v2_d1a8 = add i32 %v3_d1a0, %v2_d1a4
  store i32 %v2_d1a8, i32* %r3.global-to-local, align 4
  %v2_d1ac = sub i32 %v0_d190, %v2_d1a8
  %v1_d1b0 = add i32 %v2_d1ac, 1
  %v1_d1b4 = call i32 @function_13440(i32 %v1_d1b0)
  br label %dec_label_pc_ce28

dec_label_pc_d1bc:                                ; preds = %dec_label_pc_cf74
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 %v2_d154, i32* %r2.global-to-local, align 4
  store i32 16, i32* %stack_var_-52, align 4
  %v5_d1d0 = call i32 @function_11aa8(i32 %v2_cf68, i32 %v2_d1c8, i32 %v2_d154, i32 16, i32 16)
  %v1_d1d4 = call i32 @function_c06c(i32 %v5_d1d0)
  store i32 %v1_cdf8, i32* @lr, align 4
  %v2_d1e4 = call i32 @function_11314(i32 %v1_d1e0, i32 9)
  store i32 ptrtoint (i32* @global_var_1f5c4.70 to i32), i32* %r3.global-to-local, align 4
  %v2_d1ec = load i32, i32* @global_var_1f5c4.70, align 4
  %v2_d1f0 = icmp eq i32 %v2_d1ec, 0
  br i1 %v2_d1f0, label %dec_label_pc_d1f8, label %dec_label_pc_d298

dec_label_pc_d1f8:                                ; preds = %dec_label_pc_d1bc, %dec_label_pc_d298
  %v1_d1fc = call i32 @function_13388(i32 0)
  br label %dec_label_pc_d200

dec_label_pc_d200:                                ; preds = %dec_label_pc_d14c, %dec_label_pc_d1f8
  %v2_d204 = call i32 @function_10b3c(i8* %v1_d204)
  %sext = mul i32 %v2_d204, 16777216
  %v1_d208 = sdiv i32 %sext, 16777216
  %v7_d208 = inttoptr i32 %v1_d208 to i8*
  store i8* %v7_d208, i8** %stack_var_-42, align 4
  %v0_d20c = call i32 @function_10df8()
  %v0_d214 = load i32, i32* @r4, align 4
  store i32 %v0_d214, i32* %r2.global-to-local, align 4
  store i32 %v0_d20c, i32* @global_var_21644.39, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_d224 = load i32, i32* @r5, align 4
  %v1_d224 = inttoptr i32 %v0_d224 to i32*
  %v2_d224 = load i32, i32* %v1_d224, align 4
  %v4_d228 = call i32 @function_11c74(i32 %v2_d224, i32 ptrtoint (i32* @global_var_166bc.88 to i32), i32 %v0_d214, i32 16384)
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_d234 = load i32, i32* @r5, align 4
  %v1_d234 = inttoptr i32 %v0_d234 to i32*
  %v2_d234 = load i32, i32* %v1_d234, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_d240 = call i32 @function_11c74(i32 %v2_d234, i32 %v2_d138, i32 1, i32 16384)
  %v3_d244 = load i8*, i8** %stack_var_-42, align 4
  %v4_d244 = ptrtoint i8* %v3_d244 to i32
  store i32 %v4_d244, i32* %r2.global-to-local, align 4
  %v3_d248 = icmp eq i8* %v3_d244, null
  br i1 %v3_d248, label %dec_label_pc_ce28, label %dec_label_pc_d250

dec_label_pc_d250:                                ; preds = %dec_label_pc_d200
  %v0_d250 = load i32, i32* @r5, align 4
  %v1_d250 = inttoptr i32 %v0_d250 to i32*
  %v2_d250 = load i32, i32* %v1_d250, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_d25c = call i32 @function_11c74(i32 %v2_d250, i32 %v2_cc70, i32 %v4_d244, i32 16384)
  br label %dec_label_pc_ce28

dec_label_pc_d264:                                ; preds = %dec_label_pc_d2d4, %dec_label_pc_d05c
  %v0_d264 = load i32, i32* @r5, align 4
  %v1_d264 = inttoptr i32 %v0_d264 to i32*
  %v2_d264 = load i32, i32* %v1_d264, align 4
  store i32 %v2_d264, i32* %r3.global-to-local, align 4
  %v7_d268 = icmp eq i32 %v2_d264, 4
  br i1 %v7_d268, label %dec_label_pc_ce28, label %bb43

bb43:                                             ; preds = %dec_label_pc_d264
  %v8_d26c = icmp eq i32 %v2_d264, 11
  br i1 %v8_d26c, label %dec_label_pc_ce28, label %dec_label_pc_d274

dec_label_pc_d274:                                ; preds = %dec_label_pc_d2f8, %bb43, %dec_label_pc_d090
  %v0_d274 = load i32, i32* @fp, align 4
  %v1_d274 = inttoptr i32 %v0_d274 to i32*
  %v2_d274 = load i32, i32* %v1_d274, align 4
  store i32 53888, i32* @lr, align 4
  %v1_d27c = icmp ne i32 %v2_d274, -1
  call void @__pseudo_cond_branch(i1 %v1_d27c, i32 ptrtoint (i32* @global_var_11548.84 to i32))
  store i32 127984, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 -1, i32* inttoptr (i32 127984 to i32*), align 16
  %v1_d290 = call i32 @function_13440(i32 1)
  br label %dec_label_pc_ce28

dec_label_pc_d298:                                ; preds = %dec_label_pc_d1bc
  %v2_d29c = call i32 @function_11314(i32 %v2_d1ec, i32 9)
  br label %dec_label_pc_d1f8

dec_label_pc_d2a4:                                ; preds = %dec_label_pc_d098
  %v3_d2a4 = udiv i32 %v4_d09c, 256
  %v1_d2a8 = urem i32 %v4_d09c, 256
  store i32 %v1_d2a8, i32* %r3.global-to-local, align 4
  %v4_d2ac = mul nuw nsw i32 %v1_d2a8, 256
  %v5_d2ac = or i32 %v4_d2ac, %v3_d2a4
  %v6_d2ac = trunc i32 %v5_d2ac to i16
  store i32 %v5_d2ac, i32* %r2.global-to-local, align 4
  %v7_d2b8 = inttoptr i32 %v5_d2ac to i8*
  store i8* %v7_d2b8, i8** %stack_var_-42, align 4
  %tmp44 = icmp ult i16 %v6_d2ac, 1025
  br i1 %tmp44, label %dec_label_pc_d2d4, label %dec_label_pc_d2c0

dec_label_pc_d2c0:                                ; preds = %dec_label_pc_d2a4
  %v0_d2c0 = load i32, i32* @r8, align 4
  %v1_d2c0 = inttoptr i32 %v0_d2c0 to i32*
  %v2_d2c0 = load i32, i32* %v1_d2c0, align 4
  %v1_d2c4 = call i32 @function_11548(i32 %v2_d2c0)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_d2cc = load i32, i32* @r8, align 4
  %v2_d2cc = inttoptr i32 %v1_d2cc to i32*
  store i32 -1, i32* %v2_d2cc, align 4
  br label %dec_label_pc_ce28

dec_label_pc_d2d4:                                ; preds = %dec_label_pc_d2a4
  %v0_d2d4 = load i32, i32* @r4, align 4
  %v1_d2d4 = load i32, i32* @r5, align 4
  %v2_d2d4 = inttoptr i32 %v1_d2d4 to i32*
  store i32 %v0_d2d4, i32* %v2_d2d4, align 4
  store i32 %v2_d2dc, i32* @r4, align 4
  store i32 16386, i32* %r3.global-to-local, align 4
  %v0_d2e4 = load i32, i32* @r8, align 4
  %v1_d2e4 = inttoptr i32 %v0_d2e4 to i32*
  %v2_d2e4 = load i32, i32* %v1_d2e4, align 4
  %v7_d2ec = call i32 @function_11c00(i32 %v2_d2e4, i32 %v2_d2dc, i32 %v5_d2ac, i32 16386)
  %v7_d2f0 = icmp eq i32 %v7_d2ec, -1
  br i1 %v7_d2f0, label %dec_label_pc_d264, label %dec_label_pc_d2f8

dec_label_pc_d2f8:                                ; preds = %dec_label_pc_d2d4
  %v2_d2f8 = icmp eq i32 %v7_d2ec, 0
  br i1 %v2_d2f8, label %dec_label_pc_d274, label %dec_label_pc_d300

dec_label_pc_d300:                                ; preds = %dec_label_pc_d2f8
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_d30c = load i32, i32* @r8, align 4
  %v1_d30c = inttoptr i32 %v0_d30c to i32*
  %v2_d30c = load i32, i32* %v1_d30c, align 4
  %v4_d310 = call i32 @function_11c00(i32 %v2_d30c, i32 %v2_d138, i32 2, i32 16384)
  %v3_d318 = load i8*, i8** %stack_var_-42, align 4
  %v4_d318 = ptrtoint i8* %v3_d318 to i32
  %v3_d31c = udiv i32 %v4_d318, 256
  %v1_d320 = urem i32 %v4_d318, 256
  store i32 %v1_d320, i32* %r3.global-to-local, align 4
  %v4_d324 = mul nuw nsw i32 %v1_d320, 256
  %v5_d324 = or i32 %v4_d324, %v3_d31c
  store i32 %v5_d324, i32* @ip, align 4
  store i32 %v2_cf54, i32* @lr, align 4
  store i32 %v5_d324, i32* %r2.global-to-local, align 4
  %v0_d334 = load i32, i32* @r8, align 4
  %v1_d334 = inttoptr i32 %v0_d334 to i32*
  %v2_d334 = load i32, i32* %v1_d334, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_d33c = inttoptr i32 %v5_d324 to i8*
  store i8* %v6_d33c, i8** %stack_var_-42, align 4
  %v6_d340 = call i32 @function_11c00(i32 %v2_d334, i32 %v2_d2dc, i32 %v5_d324, i32 16384)
  store i32 %v2_cf54, i32* @r2, align 4
  %v3_d348 = load i8*, i8** %stack_var_-42, align 4
  %v3_d34c = icmp eq i8* %v3_d348, null
  br i1 %v3_d34c, label %dec_label_pc_ce28, label %dec_label_pc_d354

dec_label_pc_d354:                                ; preds = %dec_label_pc_d300
  %v4_d348 = ptrtoint i8* %v3_d348 to i32
  %v4_d358 = call i32 @function_82c8(i32 %v2_d2dc, i32 %v4_d348, i32 %v2_cf54)
  br label %dec_label_pc_ce28

; uselistorder directives
  uselistorder i8* %v3_d348, { 1, 0 }
  uselistorder i32 %v5_d324, { 1, 0, 2, 3 }
  uselistorder i32 %v4_d318, { 1, 0 }
  uselistorder i32 %v7_d2ec, { 1, 0 }
  uselistorder i32 %v5_d2ac, { 1, 0, 3, 2 }
  uselistorder i32 %v3_d0cc, { 3, 2, 1, 0 }
  uselistorder i32 %v4_d09c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_d084, { 1, 0 }
  uselistorder i32 %v2_d028, { 6, 3, 2, 0, 1, 5, 4 }
  uselistorder i32 %v2_cf68, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-1436.1, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_cf50, { 1, 0, 2 }
  uselistorder i32 %v5_cf1c, { 1, 2, 0 }
  uselistorder i32 %v2_ce68, { 2, 1, 0 }
  uselistorder i32 %v1_ce58, { 1, 2, 0 }
  uselistorder i32 %v1_ce3c, { 1, 2, 0 }
  uselistorder i32 %stack_var_-1436.0, { 4, 3, 0, 1, 2 }
  uselistorder i32 %v2_d154, { 1, 0, 2, 3 }
  uselistorder i32 %v2_d2dc, { 1, 0, 2, 3 }
  uselistorder i32 %v2_d138, { 3, 0, 5, 4, 2, 1 }
  uselistorder i32 %v2_d130, { 1, 0 }
  uselistorder i32 %v2_cf54, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v2_ce24, { 1, 0, 2 }
  uselistorder i32 %v2_ccd4, { 0, 12, 1, 13, 2, 11, 3, 10, 4, 5, 9, 8, 6, 14, 7 }
  uselistorder i32 %v2_ccc0, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v2_cbec, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-152, { 1, 0, 2 }
  uselistorder i32* %stack_var_-48, { 1, 0, 2 }
  uselistorder i8** %stack_var_-42, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 30, 34, 32, 33, 25, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 44, 45, 46 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 30, 31 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 6, 7, 8, 4, 5, 9, 10 }
  uselistorder i32* @global_var_1f5c4.70, { 1, 2, 0 }
  uselistorder i8* null, { 0, 2, 1 }
  uselistorder i32 16386, { 1, 2, 0, 3 }
  uselistorder i32 ptrtoint (i8** @global_var_1f5c8.82 to i32), { 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_1f5c8.82 to i8*), { 0, 1, 3, 2 }
  uselistorder i32* inttoptr (i32 127980 to i32*), { 1, 2, 3, 4, 0 }
  uselistorder i32 (i32, i32)* @function_d45c, { 1, 10, 9, 8, 7, 6, 5, 4, 3, 2, 0 }
  uselistorder i32 (i32)* @function_c988, { 1, 0 }
  uselistorder i32 ptrtoint (i16** @global_var_2164c.62 to i32), { 0, 1, 3, 2 }
  uselistorder i32 (i32, i32)* @function_11ddc, { 1, 0 }
  uselistorder label %dec_label_pc_d200, { 1, 0 }
  uselistorder label %dec_label_pc_d1f8, { 1, 0 }
  uselistorder label %bb42, { 1, 0 }
  uselistorder label %dec_label_pc_cf64, { 2, 1, 0 }
  uselistorder label %bb40, { 1, 0 }
  uselistorder label %dec_label_pc_cea8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ce98, { 1, 0 }
  uselistorder label %dec_label_pc_ce28, { 7, 1, 8, 9, 2, 0, 10, 3, 11, 12, 4, 5, 13, 6, 14 }
  uselistorder label %dec_label_pc_cc94, { 2, 0, 1 }
}

define i32 @function_d398() local_unnamed_addr {
dec_label_pc_d398:
  %v2_d3a4 = load i32, i32* @global_var_1f5cc.90, align 4
  %v2_d3a8 = load i32, i32* @global_var_1f5d8.92, align 4
  %v4_d3b4 = mul i32 %v2_d3a4, 2048
  %v5_d3b4 = xor i32 %v4_d3b4, %v2_d3a4
  store i32 %v5_d3b4, i32* @r3, align 4
  %v4_d3b8 = udiv i32 %v2_d3a8, 524288
  %v5_d3b8 = xor i32 %v4_d3b8, %v2_d3a8
  %v2_d3bc = load i32, i32* @global_var_1f5d0.94, align 4
  %v2_d3c0 = load i32, i32* @global_var_1f5d4.96, align 4
  store i32 %v2_d3c0, i32* @ip, align 4
  %v2_d3c4 = xor i32 %v5_d3b8, %v5_d3b4
  %v4_d3c8 = udiv i32 %v5_d3b4, 256
  %v5_d3c8 = xor i32 %v2_d3c4, %v4_d3c8
  store i32 %v2_d3bc, i32* @global_var_1f5cc.90, align 4
  store i32 %v2_d3c0, i32* @global_var_1f5d0.94, align 4
  store i32 %v2_d3a8, i32* @global_var_1f5d4.96, align 4
  store i32 %v5_d3c8, i32* @global_var_1f5d8.92, align 4
  ret i32 %v5_d3c8

; uselistorder directives
  uselistorder i32 %v2_d3a8, { 2, 1, 0 }
  uselistorder i32 %v2_d3a4, { 1, 0 }
}

define i32 @function_d3f4(i32 %arg1) local_unnamed_addr {
dec_label_pc_d3f4:
  %v2_d400 = call i32 @function_111c8(i32* null)
  store i32 %v2_d400, i32* @r0, align 4
  store i32 %v2_d400, i32* @global_var_1f5cc.90, align 4
  %v0_d40c = call i32 @function_111b4()
  store i32 %v0_d40c, i32* @r0, align 4
  %v0_d414 = call i32 @function_11140()
  %v2_d41c = xor i32 %v0_d40c, %v0_d414
  store i32 %v2_d41c, i32* @global_var_1f5d0.94, align 4
  %v1_d424 = call i32 @function_1198c(i32 %v2_d41c)
  %v2_d428 = load i32, i32* @global_var_1f5d0.94, align 4
  %v2_d434 = xor i32 %v2_d428, %v1_d424
  store i32 %v2_d434, i32* @global_var_1f5d8.92, align 4
  store i32 %v1_d424, i32* @global_var_1f5d4.96, align 4
  ret i32 %v1_d424

; uselistorder directives
  uselistorder i32 %v1_d424, { 1, 2, 0 }
}

define i32 @function_d45c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_d45c:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-63 = alloca i32, align 4
  %v3_d45c = load i32, i32* @r4, align 4
  %v12_d45c = load i32, i32* @r7, align 4
  store i32 %arg2, i32* %fp.global-to-local, align 4
  %v2_d460 = icmp eq i32 %arg2, 0
  %v0_d468 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_d468, i32* %sb.global-to-local, align 4
  br i1 %v2_d460, label %dec_label_pc_d4f4, label %dec_label_pc_d470

dec_label_pc_d470:                                ; preds = %dec_label_pc_d45c
  %v2_d470 = ptrtoint i32* %stack_var_-63 to i32
  store i32 %v2_d470, i32* @r0, align 4
  store i32 ptrtoint ([23 x i8]* @global_var_166c4.102 to i32), i32* @r1, align 4
  store i32 23, i32* @r2, align 4
  %v0_d47c = call i32 @function_11a70()
  store i32 %v0_d47c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1f5cc.90 to i32), i32* %sl.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1f5d0.94 to i32), i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1f5d4.96 to i32), i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_1f5d8.92 to i32), i32* %r6.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  %v1_d4c8 = bitcast i32* %stack_var_-63 to i8*
  %v2_d4d8 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_d494

dec_label_pc_d494:                                ; preds = %dec_label_pc_d494.dec_label_pc_d494_crit_edge, %dec_label_pc_d470
  %v1_d4b8 = phi i32 [ %v1_d4b8.pre, %dec_label_pc_d494.dec_label_pc_d494_crit_edge ], [ ptrtoint (i32* @global_var_1f5cc.90 to i32), %dec_label_pc_d470 ]
  %v2_d494 = load i32, i32* @global_var_1f5d8.92, align 4
  store i32 %v2_d494, i32* %r2.global-to-local, align 4
  %v2_d498 = load i32, i32* @global_var_1f5cc.90, align 4
  %v4_d49c = udiv i32 %v2_d494, 524288
  %v5_d49c = xor i32 %v4_d49c, %v2_d494
  %v4_d4a0 = mul i32 %v2_d498, 2048
  %v5_d4a0 = xor i32 %v4_d4a0, %v2_d498
  %v2_d4a4 = xor i32 %v5_d49c, %v5_d4a0
  %v2_d4a8 = load i32, i32* @global_var_1f5d0.94, align 4
  %v2_d4ac = load i32, i32* @global_var_1f5d4.96, align 4
  store i32 %v2_d4ac, i32* @ip, align 4
  %v4_d4b0 = udiv i32 %v5_d4a0, 256
  %v5_d4b0 = xor i32 %v2_d4a4, %v4_d4b0
  store i32 %v5_d4b0, i32* @r4, align 4
  store i32 %v2_d470, i32* %r0.global-to-local, align 4
  %v2_d4b8 = inttoptr i32 %v1_d4b8 to i32*
  store i32 %v2_d4a8, i32* %v2_d4b8, align 4
  %v0_d4bc = load i32, i32* @ip, align 4
  %v1_d4bc = load i32, i32* %r8.global-to-local, align 4
  %v2_d4bc = inttoptr i32 %v1_d4bc to i32*
  store i32 %v0_d4bc, i32* %v2_d4bc, align 4
  %v0_d4c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_d4c0 = load i32, i32* @r7, align 4
  %v2_d4c0 = inttoptr i32 %v1_d4c0 to i32*
  store i32 %v0_d4c0, i32* %v2_d4c0, align 4
  %v0_d4c4 = load i32, i32* @r4, align 4
  %v1_d4c4 = load i32, i32* %r6.global-to-local, align 4
  %v2_d4c4 = inttoptr i32 %v1_d4c4 to i32*
  store i32 %v0_d4c4, i32* %v2_d4c4, align 4
  %v2_d4c8 = call i32 @function_10b3c(i8* %v1_d4c8)
  %v0_d4d0 = load i32, i32* @r4, align 4
  store i32 %v0_d4d0, i32* %r0.global-to-local, align 4
  %v2_d4d4 = call i32 @function_11114(i32 %v0_d4d0, i32 %v2_d4c8)
  store i32 %v2_d4d4, i32* %r0.global-to-local, align 4
  %v2_d4dc = add i32 %v2_d4c8, %v2_d4d8
  %v1_d4e0 = add i32 %v2_d4dc, -23
  %v2_d4e0 = inttoptr i32 %v1_d4e0 to i8*
  %v3_d4e0 = load i8, i8* %v2_d4e0, align 1
  %v2_d4e4 = load i32, i32* %r5.global-to-local, align 4
  %v3_d4e4 = load i32, i32* %sb.global-to-local, align 4
  %v4_d4e4 = add i32 %v3_d4e4, %v2_d4e4
  %v5_d4e4 = inttoptr i32 %v4_d4e4 to i8*
  store i8 %v3_d4e0, i8* %v5_d4e4, align 1
  %v0_d4e8 = load i32, i32* %r5.global-to-local, align 4
  %v1_d4e8 = add i32 %v0_d4e8, 1
  store i32 %v1_d4e8, i32* %r5.global-to-local, align 4
  %v1_d4ec = load i32, i32* %fp.global-to-local, align 4
  %v9_d4ec = icmp eq i32 %v1_d4e8, %v1_d4ec
  br i1 %v9_d4ec, label %dec_label_pc_d4f4.loopexit, label %dec_label_pc_d494.dec_label_pc_d494_crit_edge

dec_label_pc_d494.dec_label_pc_d494_crit_edge:    ; preds = %dec_label_pc_d494
  %v1_d4b8.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_d494

dec_label_pc_d4f4.loopexit:                       ; preds = %dec_label_pc_d494
  %v1_d4fc.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d4f4

dec_label_pc_d4f4:                                ; preds = %dec_label_pc_d4f4.loopexit, %dec_label_pc_d45c
  %v1_d4fc = phi i32 [ %v1_d4fc.pre, %dec_label_pc_d4f4.loopexit ], [ %v0_d468, %dec_label_pc_d45c ]
  store i32 %v3_d45c, i32* @r4, align 4
  store i32 %v12_d45c, i32* @r7, align 4
  ret i32 %v1_d4fc

; uselistorder directives
  uselistorder i32 %v2_d498, { 1, 0 }
  uselistorder i32 %v2_d494, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 3, 2, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 2, 5, 6, 0, 1 }
  uselistorder i32* @global_var_1f5d8.92, { 2, 4, 1, 0, 3 }
  uselistorder i32* @global_var_1f5d4.96, { 2, 4, 1, 0, 3 }
  uselistorder i32* @global_var_1f5d0.94, { 2, 5, 3, 1, 0, 4 }
  uselistorder i32* @global_var_1f5cc.90, { 2, 4, 1, 0, 3 }
}

define i32 @function_d514(i32 %arg1) local_unnamed_addr {
dec_label_pc_d514:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_d514 = load i32, i32* @r4, align 4
  store i32 %v3_d514, i32* %stack_var_-8, align 4
  %v6_d514 = load i32, i32* @lr, align 4
  %v0_d518 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_d518, i32* @r4, align 4
  %v2_d518 = icmp eq i32 %v0_d518, 0
  br i1 %v2_d518, label %dec_label_pc_d534, label %dec_label_pc_d520

dec_label_pc_d520:                                ; preds = %dec_label_pc_d514
  %v1_d520 = add i32 %v0_d518, 4
  %v2_d520 = inttoptr i32 %v1_d520 to i32*
  %v3_d520 = load i32, i32* %v2_d520, align 4
  store i32 %v3_d520, i32* %r0.global-to-local, align 4
  store i32 54572, i32* @lr, align 4
  %v1_d528 = icmp ne i32 %v3_d520, 0
  call void @__pseudo_cond_branch(i1 %v1_d528, i32 ptrtoint (i32* @global_var_12fe4.107 to i32))
  %v0_d52c = load i32, i32* @r4, align 4
  store i32 %v0_d52c, i32* @r0, align 4
  %v0_d530 = call i32 @function_12fe4()
  store i32 %v0_d530, i32* %r0.global-to-local, align 4
  %v2_d534.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_d534

dec_label_pc_d534:                                ; preds = %dec_label_pc_d514, %dec_label_pc_d520
  %v1_d538 = phi i32 [ 0, %dec_label_pc_d514 ], [ %v0_d530, %dec_label_pc_d520 ]
  %v2_d534 = phi i32 [ %v3_d514, %dec_label_pc_d514 ], [ %v2_d534.pre, %dec_label_pc_d520 ]
  store i32 %v2_d534, i32* @r4, align 4
  store i32 %v6_d514, i32* @lr, align 4
  ret i32 %v1_d538

; uselistorder directives
  uselistorder i32 %v0_d518, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_d534, { 1, 0 }
}

define i32 @function_d53c(i32 %arg1) local_unnamed_addr {
dec_label_pc_d53c:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp79 = call i16 @__decompiler_undefined_function_2()
  %stack_var_-4280 = alloca i32, align 4
  %stack_var_-4292 = alloca i16, align 2
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-2230 = alloca i32, align 4
  %stack_var_-2244 = alloca i16, align 2
  %stack_var_-2232 = alloca i32, align 4
  %v3_d53c = load i32, i32* @r4, align 4
  %v9_d53c = load i32, i32* @r6, align 4
  %v12_d53c = load i32, i32* @r7, align 4
  %v15_d53c = load i32, i32* @r8, align 4
  %v18_d53c = load i32, i32* @sb, align 4
  %v21_d53c = load i32, i32* @sl, align 4
  %v24_d53c = load i32, i32* @fp, align 4
  %v27_d53c = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_d554 = call i32 @function_12898(i32 1, i32 8)
  store i32 %v2_d554, i32* @fp, align 4
  %v0_d55c = load i32, i32* @r5, align 4
  store i32 %v0_d55c, i32* %r0.global-to-local, align 4
  %v1_d560 = inttoptr i32 %v0_d55c to i8*
  %v2_d560 = call i32 @function_10b3c(i8* %v1_d560)
  %v2_d568 = ptrtoint i16* %stack_var_-2244 to i32
  store i32 %v2_d568, i32* @sl, align 4
  %v2_d56c = ptrtoint i32* %stack_var_-2232 to i32
  store i32 %v2_d56c, i32* @sb, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v1_d574 = add i32 %v2_d560, 1
  store i32 %v1_d574, i32* %r0.global-to-local, align 4
  %v2_d578 = ptrtoint i32* %stack_var_-2230 to i32
  store i32 %v2_d578, i32* %r2.global-to-local, align 4
  store i32 %v2_d56c, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %v1_d574, i32* %r3.global-to-local, align 4
  %v2_d5b4146 = icmp eq i32 %v1_d574, 0
  store i1 %v2_d5b4146, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* @lr, align 4
  %v1_d5bc147 = add i32 %v2_d578, -1
  store i32 %v1_d5bc147, i32* %r1.global-to-local, align 4
  %tmp116148 = icmp slt i32 %v1_d574, 1
  br i1 %tmp116148, label %dec_label_pc_d5c4, label %dec_label_pc_d588

dec_label_pc_d588:                                ; preds = %dec_label_pc_d53c, %bb115
  %v0_d588151 = phi i32 [ %v1_d5a8, %bb115 ], [ 0, %dec_label_pc_d53c ]
  %v1_d594150.off0 = phi i8 [ %extract.t152, %bb115 ], [ 0, %dec_label_pc_d53c ]
  %v2_d5c8149 = phi i32 [ %v1_d5ac, %bb115 ], [ %v2_d578, %dec_label_pc_d53c ]
  %v1_d588 = load i32, i32* @r5, align 4
  %v2_d588 = add i32 %v1_d588, %v0_d588151
  %v3_d588 = inttoptr i32 %v2_d588 to i8*
  %v4_d588 = load i8, i8* %v3_d588, align 1
  %v6_d588 = zext i8 %v4_d588 to i32
  store i32 %v6_d588, i32* %r3.global-to-local, align 4
  %v2_d58c = icmp eq i8 %v4_d588, 0
  store i1 %v2_d58c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_d58c, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_d588
  %v8_d590 = icmp eq i8 %v4_d588, 46
  store i1 %v8_d590, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_d590, label %.thread, label %.thread7

.thread:                                          ; preds = %dec_label_pc_d588, %bb
  %v3_d594 = load i32, i32* %r6.global-to-local, align 4
  %v4_d594 = inttoptr i32 %v3_d594 to i8*
  store i8 %v1_d594150.off0, i8* %v4_d594, align 1
  %v0_d598.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d598.pr, label %.thread9.thread13, label %.thread..thread7_crit_edge

.thread..thread7_crit_edge:                       ; preds = %.thread
  %v1_d598.pre = load i32, i32* %r3.global-to-local, align 4
  %v3_d598.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t = trunc i32 %v1_d598.pre to i8
  br label %.thread7

.thread7:                                         ; preds = %.thread..thread7_crit_edge, %bb
  %v3_d598 = phi i32 [ %v3_d598.pre, %.thread..thread7_crit_edge ], [ %v2_d5c8149, %bb ]
  %v1_d598.off0 = phi i8 [ %extract.t, %.thread..thread7_crit_edge ], [ %v4_d588, %bb ]
  %v4_d598 = add i32 %v3_d598, -1
  %v5_d598 = inttoptr i32 %v4_d598 to i8*
  store i8 %v1_d598.off0, i8* %v5_d598, align 1
  %v0_d59c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d59c.pr, label %.thread9, label %.thread12

.thread9.thread13:                                ; preds = %.thread
  %v1_d59c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_d59c, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %bb115

.thread9:                                         ; preds = %.thread7
  %v1_d59c11 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_d59c11, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %bb115

.thread12:                                        ; preds = %.thread7
  %v1_d5a4 = load i32, i32* @lr, align 4
  %v2_d5a4 = urem i32 %v1_d5a4, 256
  store i32 %v2_d5a4, i32* %r4.global-to-local, align 4
  br label %bb115

bb115:                                            ; preds = %.thread9, %.thread9.thread13, %.thread12
  %v0_d5b833 = phi i32 [ 0, %.thread9.thread13 ], [ 0, %.thread9 ], [ %v2_d5a4, %.thread12 ]
  %v0_d5a8 = load i32, i32* %ip.global-to-local, align 4
  %v1_d5a8 = add i32 %v0_d5a8, 1
  store i32 %v1_d5a8, i32* %ip.global-to-local, align 4
  %v0_d5ac = load i32, i32* %r2.global-to-local, align 4
  %v1_d5ac = add i32 %v0_d5ac, 1
  store i32 %v1_d5ac, i32* %r2.global-to-local, align 4
  %v1_d5b0.pre = load i32, i32* %r0.global-to-local, align 4
  %v2_d5b0 = sub i32 %v1_d5b0.pre, %v1_d5a8
  store i32 %v2_d5b0, i32* %r3.global-to-local, align 4
  %v2_d5b4 = icmp eq i32 %v2_d5b0, 0
  store i1 %v2_d5b4, i1* %cpsr_z.global-to-local, align 1
  %v1_d5b8 = add nuw nsw i32 %v0_d5b833, 1
  store i32 %v1_d5b8, i32* @lr, align 4
  store i32 %v0_d5ac, i32* %r1.global-to-local, align 4
  %tmp116 = icmp slt i32 %v2_d5b0, 1
  %extract.t152 = trunc i32 %v0_d5b833 to i8
  br i1 %tmp116, label %dec_label_pc_d5c4, label %dec_label_pc_d588

dec_label_pc_d5c4:                                ; preds = %bb115, %dec_label_pc_d53c
  %v1_d5bc.lcssa = phi i32 [ %v1_d5bc147, %dec_label_pc_d53c ], [ %v0_d5ac, %bb115 ]
  store i32 0, i32* @r4, align 4
  %v4_d5c8 = inttoptr i32 %v1_d5bc.lcssa to i8*
  store i8 0, i8* %v4_d5c8, align 1
  store i32 %v2_d56c, i32* %r0.global-to-local, align 4
  %v1_d5d0 = bitcast i32* %stack_var_-2232 to i8*
  %v2_d5d0 = call i32 @function_10b3c(i8* %v1_d5d0)
  %v2_d5d4 = ptrtoint i32* %stack_var_-216 to i32
  store i32 %v2_d5d4, i32* %r1.global-to-local, align 4
  %v1_d5d8 = load i32, i32* @sb, align 4
  %v2_d5d8 = add i32 %v1_d5d8, %v2_d5d0
  store i32 %v2_d5d8, i32* @r5, align 4
  %v0_d5e0 = load i32, i32* @r4, align 4
  store i32 %v0_d5e0, i32* %stack_var_-68, align 4
  store i32 %v2_d56c, i32* %r0.global-to-local, align 4
  %v2_d5f0 = call i32 @function_10b3c(i8* %v1_d5d0)
  %v1_d5f4 = add i32 %v2_d5f0, 17
  store i32 %v1_d5f4, i32* %r0.global-to-local, align 4
  %v0_d5fc = call i32 @function_d398()
  %v1_d5fc = sext i32 %v0_d5fc to i64
  store i32 -2147450879, i32* %r3.global-to-local, align 4
  %v5_d608 = mul nuw nsw i64 %v1_d5fc, 2147516417
  %v6_d608 = udiv i64 %v5_d608, 4294967296
  %v7_d608 = trunc i64 %v6_d608 to i32
  %v8_d608 = trunc i64 %v5_d608 to i32
  store i32 %v8_d608, i32* @lr, align 4
  store i32 %v7_d608, i32* %r2.global-to-local, align 4
  %v5_d60c4 = udiv i64 %v5_d608, 140737488355328
  %v5_d60c = trunc i64 %v5_d60c4 to i32
  %v6_d60c = add i32 %v5_d60c, %v0_d5fc
  store i32 16, i32* @r1, align 4
  %v6_d618 = urem i32 %v6_d60c, 65536
  store i32 %v6_d618, i32* %ip.global-to-local, align 4
  %v2_d620 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_d620, i32* @r0, align 4
  %v5_d624 = trunc i32 %v6_d60c to i16
  %v0_d628 = call i32 @function_10bd0()
  store i32 %v0_d628, i32* %r0.global-to-local, align 4
  store i32 13568, i32* %ip.global-to-local, align 4
  store i32 2, i32* %stack_var_-68, align 4
  store i32 256, i32* %r3.global-to-local, align 4
  %v0_d658 = load i32, i32* @r5, align 4
  %v1_d658 = add i32 %v0_d658, 1
  store i32 %v1_d658, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i16 %v5_d624, i16* %stack_var_-2244, align 2
  %v4_d66c = inttoptr i32 %v1_d658 to i16*
  store i16 256, i16* %v4_d66c, align 2
  %v0_d670 = load i32, i32* %r3.global-to-local, align 4
  %v1_d670 = trunc i32 %v0_d670 to i16
  %v2_d670 = load i32, i32* %r2.global-to-local, align 4
  %v3_d670 = add i32 %v2_d670, 2
  %v4_d670 = inttoptr i32 %v3_d670 to i16*
  store i16 %v1_d670, i16* %v4_d670, align 2
  store i32 -1, i32* %r6.global-to-local, align 4
  %v2_d708 = ptrtoint i32* %stack_var_-196 to i32
  %v2_d730 = ptrtoint i32* %stack_var_-40 to i32
  %v2_d75c = ptrtoint i32* %stack_var_-52 to i32
  %v2_d7a0 = ptrtoint i16* %stack_var_-4292 to i32
  %v2_d834 = ptrtoint i32* %stack_var_-4280 to i32
  %v1_d83c = bitcast i32* %stack_var_-4280 to i8*
  %v4_d860 = zext i16 %tmp79 to i32
  %v2_d864 = icmp eq i16 %tmp79, 0
  br label %dec_label_pc_d67c

dec_label_pc_d67c:                                ; preds = %dec_label_pc_d7e8, %dec_label_pc_d5c4
  %v1_d680 = phi i32 [ -1, %dec_label_pc_d5c4 ], [ %v0_d67c.pre, %dec_label_pc_d7e8 ]
  %storemerge = phi i32 [ 1, %dec_label_pc_d5c4 ], [ %v1_d7e8, %dec_label_pc_d7e8 ]
  store i32 %storemerge, i32* @r8, align 4
  %v7_d67c = icmp eq i32 %v1_d680, -1
  store i1 %v7_d67c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d67c, label %bb118, label %bb117

bb117:                                            ; preds = %dec_label_pc_d67c
  store i32 %v1_d680, i32* %r0.global-to-local, align 4
  br label %bb118

bb118:                                            ; preds = %dec_label_pc_d67c, %bb117
  store i32 54920, i32* @lr, align 4
  %v1_d684 = xor i1 %v7_d67c, true
  call void @__pseudo_cond_branch(i1 %v1_d684, i32 ptrtoint (i32* @global_var_11548.84 to i32))
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_d694 = call i32 @function_11d30(i32 2, i32 2, i32 0)
  store i32 %v3_d694, i32* %r0.global-to-local, align 4
  %v7_d698 = icmp eq i32 %v3_d694, -1
  store i1 %v7_d698, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_d694, i32* @r6, align 4
  br i1 %v7_d698, label %dec_label_pc_d828, label %dec_label_pc_d6a4

dec_label_pc_d6a4:                                ; preds = %bb118
  store i32 %v2_d620, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_d6b0 = call i32 @function_11b18(i32 %v3_d694, i32 %v2_d620, i32 16)
  store i32 %v3_d6b0, i32* %r0.global-to-local, align 4
  %v7_d6b4 = icmp eq i32 %v3_d6b0, -1
  store i1 %v7_d6b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d6b4, label %dec_label_pc_d7f0, label %dec_label_pc_d6bc

dec_label_pc_d6bc:                                ; preds = %dec_label_pc_d6a4
  %v0_d6bc = load i32, i32* @r6, align 4
  store i32 %v0_d6bc, i32* %r0.global-to-local, align 4
  store i32 %v2_d568, i32* %r1.global-to-local, align 4
  store i32 %v1_d5f4, i32* %r2.global-to-local, align 4
  store i32 16384, i32* @r3, align 4
  %v4_d6cc = call i32 @function_11c74(i32 %v0_d6bc, i32 %v2_d568, i32 %v1_d5f4, i32 16384)
  store i32 %v4_d6cc, i32* %r0.global-to-local, align 4
  %v7_d6d0 = icmp eq i32 %v4_d6cc, -1
  store i1 %v7_d6d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d6d0, label %dec_label_pc_d7f0, label %dec_label_pc_d6d8

dec_label_pc_d6d8:                                ; preds = %dec_label_pc_d6bc
  %v0_d6d8 = load i32, i32* @r6, align 4
  store i32 %v0_d6d8, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_d6e4 = call i32 @function_1137c(i32 3, i32 %v0_d6d8)
  %v0_d6e8 = load i32, i32* @r6, align 4
  store i32 %v0_d6e8, i32* %r1.global-to-local, align 4
  %v1_d6ec = or i32 %v2_d6e4, 2048
  store i32 %v1_d6ec, i32* %r2.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v2_d6f4 = call i32 @function_1137c(i32 4, i32 %v0_d6e8)
  store i32 %v2_d6f4, i32* %r0.global-to-local, align 4
  store i32 %v2_d5d4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %stack_var_-196, align 4
  store i32 %v2_d708, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_d710

dec_label_pc_d710:                                ; preds = %dec_label_pc_d710, %dec_label_pc_d6d8
  %v1_d714 = phi i32 [ %v1_d718, %dec_label_pc_d710 ], [ 4, %dec_label_pc_d6d8 ]
  store i32 0, i32* @r4, align 4
  %v3_d714 = add i32 %v1_d714, %v2_d708
  %v4_d714 = inttoptr i32 %v3_d714 to i32*
  store i32 0, i32* %v4_d714, align 4
  %v0_d718 = load i32, i32* %r3.global-to-local, align 4
  %v1_d718 = add i32 %v0_d718, 4
  store i32 %v1_d718, i32* %r3.global-to-local, align 4
  %v7_d71c = icmp eq i32 %v1_d718, 128
  br i1 %v7_d71c, label %dec_label_pc_d724, label %dec_label_pc_d710

dec_label_pc_d724:                                ; preds = %dec_label_pc_d710
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_d724 = load i32, i32* @r6, align 4
  %v3_d724 = udiv i32 %v0_d724, 32
  %v3_d72c = mul nuw nsw i32 %v3_d724, 4
  store i32 %v3_d72c, i32* %r3.global-to-local, align 4
  %v2_d734 = add i32 %v3_d72c, %v2_d730
  store i32 %v2_d734, i32* @r5, align 4
  %v1_d738 = add i32 %v2_d734, -156
  %v2_d738 = inttoptr i32 %v1_d738 to i32*
  %v3_d738 = load i32, i32* %v2_d738, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_d740 = urem i32 %v0_d724, 32
  store i32 %v1_d740, i32* @r7, align 4
  %v7_d744 = shl i32 1, %v1_d740
  %v8_d744 = or i32 %v3_d738, %v7_d744
  store i32 5, i32* %ip.global-to-local, align 4
  store i32 %v8_d744, i32* %v2_d738, align 4
  %v0_d754 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_d754, i32* %stack_var_-52, align 4
  store i32 %v2_d75c, i32* @lr, align 4
  store i32 %v2_d5d4, i32* @ip, align 4
  %v0_d764 = load i32, i32* @r6, align 4
  %v1_d764 = load i32, i32* %r3.global-to-local, align 4
  %v2_d764 = add i32 %v1_d764, %v0_d764
  store i32 %v2_d764, i32* %r0.global-to-local, align 4
  %v0_d76c = load i32, i32* @r4, align 4
  store i32 %v0_d76c, i32* %r2.global-to-local, align 4
  store i32 %v0_d76c, i32* %r3.global-to-local, align 4
  %v5_d778 = call i32 @function_1126c(i32 %v2_d764, i32 %v2_d708, i32 %v0_d76c, i32 %v0_d76c, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_d778, i32* %r0.global-to-local, align 4
  %v7_d77c = icmp eq i32 %v5_d778, -1
  store i1 %v7_d77c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d77c, label %dec_label_pc_d800, label %dec_label_pc_d784

dec_label_pc_d784:                                ; preds = %dec_label_pc_d724
  %v1_d784 = load i32, i32* @r4, align 4
  %v9_d784 = icmp eq i32 %v5_d778, %v1_d784
  store i1 %v9_d784, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d784, label %dec_label_pc_d7e0, label %dec_label_pc_d78c

dec_label_pc_d78c:                                ; preds = %dec_label_pc_d784
  %v0_d78c = load i32, i32* @r5, align 4
  %v1_d78c = add i32 %v0_d78c, -156
  %v2_d78c = inttoptr i32 %v1_d78c to i32*
  %v3_d78c = load i32, i32* %v2_d78c, align 4
  %v1_d790 = load i32, i32* @r7, align 4
  %v6_d790 = ashr i32 %v3_d78c, %v1_d790
  store i32 %v6_d790, i32* %r3.global-to-local, align 4
  %v1_d794 = urem i32 %v6_d790, 2
  %v2_d794 = icmp eq i32 %v1_d794, 0
  store i1 %v2_d794, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_d794, label %dec_label_pc_d800, label %dec_label_pc_d79c

dec_label_pc_d79c:                                ; preds = %dec_label_pc_d78c
  store i32 %v2_d7a0, i32* @r5, align 4
  store i32 %v2_d7a0, i32* %r1.global-to-local, align 4
  store i32 2048, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_d7b0 = load i32, i32* @r6, align 4
  store i32 %v0_d7b0, i32* %r0.global-to-local, align 4
  %v6_d7bc = call i32 @function_11c38(i32 %v0_d7b0, i32 %v2_d7a0, i32 2048, i32 16384, i32 %v1_d784, i32 %v1_d784)
  store i32 %v6_d7bc, i32* %r4.global-to-local, align 4
  %v0_d7c4 = load i32, i32* @sb, align 4
  store i32 %v0_d7c4, i32* %r0.global-to-local, align 4
  %v1_d7c8 = inttoptr i32 %v0_d7c4 to i8*
  %v2_d7c8 = call i32 @function_10b3c(i8* %v1_d7c8)
  %v1_d7cc = add i32 %v2_d7c8, 17
  store i32 %v1_d7cc, i32* %r0.global-to-local, align 4
  %v0_d7d0 = load i32, i32* %r4.global-to-local, align 4
  %v3_d7d0 = icmp ult i32 %v0_d7d0, %v1_d7cc
  %v9_d7d0 = icmp eq i32 %v0_d7d0, %v1_d7cc
  store i1 %v9_d7d0, i1* %cpsr_z.global-to-local, align 1
  store i32 -4252, i32* @r4, align 4
  br i1 %v3_d7d0, label %dec_label_pc_d7e0, label %dec_label_pc_d834

dec_label_pc_d7e0:                                ; preds = %dec_label_pc_d79c, %dec_label_pc_d834, %dec_label_pc_d860, %dec_label_pc_d784, %dec_label_pc_d828
  %v0_d7e0 = load i32, i32* @r8, align 4
  %v7_d7e0 = icmp eq i32 %v0_d7e0, 5
  store i1 %v7_d7e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d7e0, label %dec_label_pc_d800, label %dec_label_pc_d7e8

dec_label_pc_d7e8:                                ; preds = %dec_label_pc_d7f0, %dec_label_pc_d7e0
  %v0_d7e8 = phi i32 [ %v0_d7f8, %dec_label_pc_d7f0 ], [ %v0_d7e0, %dec_label_pc_d7e0 ]
  %v1_d7e8 = add i32 %v0_d7e8, 1
  %v0_d67c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_d67c

dec_label_pc_d7f0:                                ; preds = %dec_label_pc_d6bc, %dec_label_pc_d6a4
  %v0_d7f0 = phi i32 [ %v4_d6cc, %dec_label_pc_d6bc ], [ %v3_d6b0, %dec_label_pc_d6a4 ]
  %v1_d7f0 = add i32 %v0_d7f0, 2
  store i32 %v1_d7f0, i32* %r0.global-to-local, align 4
  %v1_d7f4 = call i32 @function_13440(i32 %v1_d7f0)
  store i32 %v1_d7f4, i32* %r0.global-to-local, align 4
  %v0_d7f8 = load i32, i32* @r8, align 4
  %v7_d7f8 = icmp eq i32 %v0_d7f8, 5
  store i1 %v7_d7f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d7f8, label %dec_label_pc_d800, label %dec_label_pc_d7e8

dec_label_pc_d800:                                ; preds = %dec_label_pc_d7f0, %dec_label_pc_d7e0, %dec_label_pc_d78c, %dec_label_pc_d724, %dec_label_pc_d86c, %dec_label_pc_d878.backedge
  %v0_d800 = load i32, i32* @r6, align 4
  store i32 %v0_d800, i32* %r0.global-to-local, align 4
  %v1_d804 = call i32 @function_11548(i32 %v0_d800)
  store i32 %v1_d804, i32* %r0.global-to-local, align 4
  %v0_d808 = load i32, i32* @fp, align 4
  %v1_d808 = inttoptr i32 %v0_d808 to i8*
  %v2_d808 = load i8, i8* %v1_d808, align 1
  %v3_d808 = zext i8 %v2_d808 to i32
  store i32 %v3_d808, i32* @r4, align 4
  %v2_d80c = icmp eq i8 %v2_d808, 0
  store i1 %v2_d80c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_d80c, label %dec_label_pc_d950, label %dec_label_pc_d814

dec_label_pc_d814:                                ; preds = %dec_label_pc_d800, %dec_label_pc_d950
  %v0_d814 = phi i32 [ %v0_d808, %dec_label_pc_d800 ], [ %v0_d964, %dec_label_pc_d950 ]
  store i32 %v0_d814, i32* %r0.global-to-local, align 4
  store i32 %v3_d53c, i32* @r4, align 4
  store i32 %v9_d53c, i32* @r6, align 4
  store i32 %v12_d53c, i32* @r7, align 4
  store i32 %v15_d53c, i32* @r8, align 4
  store i32 %v18_d53c, i32* @sb, align 4
  store i32 %v21_d53c, i32* @sl, align 4
  store i32 %v24_d53c, i32* @fp, align 4
  store i32 %v27_d53c, i32* @lr, align 4
  ret i32 %v0_d814

dec_label_pc_d828:                                ; preds = %bb118
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_d82c = call i32 @function_13440(i32 1)
  store i32 %v1_d82c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d7e0

dec_label_pc_d834:                                ; preds = %dec_label_pc_d79c
  store i32 %v2_d834, i32* @sb, align 4
  store i32 %v2_d834, i32* %r0.global-to-local, align 4
  %v2_d83c = call i32 @function_10b3c(i8* %v1_d83c)
  %v4_d848 = load i16, i16* %stack_var_-4292, align 2
  %v5_d848 = sext i16 %v4_d848 to i32
  store i32 %v5_d848, i32* %r3.global-to-local, align 4
  store i32 %v6_d60c, i32* %r1.global-to-local, align 4
  %v1_d850 = load i32, i32* @sb, align 4
  %v9_d854 = icmp eq i16 %v4_d848, %v5_d624
  store i1 %v9_d854, i1* %cpsr_z.global-to-local, align 1
  %v2_d850 = add i32 %v2_d83c, 5
  %v1_d858 = add i32 %v2_d850, %v1_d850
  store i32 %v1_d858, i32* %r0.global-to-local, align 4
  br i1 %v9_d854, label %dec_label_pc_d860, label %dec_label_pc_d7e0

dec_label_pc_d860:                                ; preds = %dec_label_pc_d834
  store i32 %v4_d860, i32* %r3.global-to-local, align 4
  store i1 %v2_d864, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_d864, label %dec_label_pc_d7e0, label %dec_label_pc_d86c

dec_label_pc_d86c:                                ; preds = %dec_label_pc_d860
  %div = udiv i16 %tmp79, 256
  %v3_d86c = zext i16 %div to i32
  store i32 %v3_d86c, i32* %r2.global-to-local, align 4
  %v1_d870 = mul nuw nsw i32 %v4_d860, 256
  %v4_d874 = and i32 %v1_d870, 65280
  %v5_d874 = or i32 %v4_d874, %v3_d86c
  %v1_d878134 = add nsw i32 %v5_d874, -1
  %v3_d87c135 = mul i32 %v1_d878134, 65536
  store i32 %v3_d87c135, i32* %r3.global-to-local, align 4
  %v7_d880141 = icmp eq i32 %v3_d87c135, -65536
  store i1 %v7_d880141, i1* %cpsr_z.global-to-local, align 1
  %v3_d884142 = urem i32 %v1_d878134, 65536
  store i32 %v3_d884142, i32* @r8, align 4
  br i1 %v7_d880141, label %dec_label_pc_d800, label %dec_label_pc_d88c

dec_label_pc_d88c:                                ; preds = %dec_label_pc_d86c, %dec_label_pc_d878.backedge
  %v3_d884144 = phi i32 [ %v3_d884, %dec_label_pc_d878.backedge ], [ %v3_d884142, %dec_label_pc_d86c ]
  %v0_d8dc143 = phi i32 [ %storemerge29, %dec_label_pc_d878.backedge ], [ %v1_d858, %dec_label_pc_d86c ]
  store i32 %v0_d8dc143, i32* %r3.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  store i32 1, i32* @ip, align 4
  %v1_d89818 = inttoptr i32 %v0_d8dc143 to i8*
  %v2_d89819 = load i8, i8* %v1_d89818, align 1
  %v3_d89820 = zext i8 %v2_d89819 to i32
  store i32 %v3_d89820, i32* %r2.global-to-local, align 4
  %v2_d89c21 = icmp eq i8 %v2_d89819, 0
  store i1 %v2_d89c21, i1* %cpsr_z.global-to-local, align 1
  %v3_d8a022 = mul nuw nsw i32 %v3_d89820, 256
  store i32 %v3_d8a022, i32* %r1.global-to-local, align 4
  br i1 %v2_d89c21, label %dec_label_pc_d8d4, label %dec_label_pc_d8a8.preheader

dec_label_pc_d8a8.preheader:                      ; preds = %dec_label_pc_d88c, %dec_label_pc_d898.backedge
  %v1_d974 = phi i32 [ %v1_d97450, %dec_label_pc_d898.backedge ], [ 1, %dec_label_pc_d88c ]
  %v0_d96c48 = phi i32 [ %v0_d96c, %dec_label_pc_d898.backedge ], [ 0, %dec_label_pc_d88c ]
  %v0_d8b446 = phi i32 [ %v3_d8a0, %dec_label_pc_d898.backedge ], [ %v3_d8a022, %dec_label_pc_d88c ]
  %v0_d8b044 = phi i32 [ %v1_d970, %dec_label_pc_d898.backedge ], [ %v0_d8dc143, %dec_label_pc_d88c ]
  %v0_d8a842 = phi i32 [ %v3_d898, %dec_label_pc_d898.backedge ], [ %v3_d89820, %dec_label_pc_d88c ]
  br label %dec_label_pc_d8a8

dec_label_pc_d8a8:                                ; preds = %dec_label_pc_d8a8.preheader, %dec_label_pc_d8b0
  %v0_d96c = phi i32 [ %v0_d96c48, %dec_label_pc_d8a8.preheader ], [ 1, %dec_label_pc_d8b0 ]
  %v0_d8b4 = phi i32 [ %v0_d8b446, %dec_label_pc_d8a8.preheader ], [ %v3_d8cc, %dec_label_pc_d8b0 ]
  %v0_d970 = phi i32 [ %v0_d8b044, %dec_label_pc_d8a8.preheader ], [ %v2_d8bc, %dec_label_pc_d8b0 ]
  %v0_d8a8 = phi i32 [ %v0_d8a842, %dec_label_pc_d8a8.preheader ], [ %v3_d8c0, %dec_label_pc_d8b0 ]
  %v7_d8a8 = icmp eq i32 %v0_d8a8, 191
  store i1 %v7_d8a8, i1* %cpsr_z.global-to-local, align 1
  %tmp = icmp ult i32 %v0_d8a8, 192
  br i1 %tmp, label %dec_label_pc_d96c, label %dec_label_pc_d8b0

dec_label_pc_d8b0:                                ; preds = %dec_label_pc_d8a8
  %v1_d8b0 = add i32 %v0_d970, 1
  %v2_d8b0 = inttoptr i32 %v1_d8b0 to i8*
  %v3_d8b0 = load i8, i8* %v2_d8b0, align 1
  %v4_d8b0 = zext i8 %v3_d8b0 to i32
  %v2_d8b4 = or i32 %v4_d8b0, -49152
  %v0_d8bc = load i32, i32* @r5, align 4
  %v1_d8b8 = add i32 %v0_d8bc, %v0_d8b4
  %v2_d8bc = add i32 %v1_d8b8, %v2_d8b4
  store i32 %v2_d8bc, i32* %r3.global-to-local, align 4
  %v1_d8c0 = inttoptr i32 %v2_d8bc to i8*
  %v2_d8c0 = load i8, i8* %v1_d8c0, align 1
  %v3_d8c0 = zext i8 %v2_d8c0 to i32
  store i32 %v3_d8c0, i32* %r2.global-to-local, align 4
  %v2_d8c4 = icmp eq i8 %v2_d8c0, 0
  store i1 %v2_d8c4, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* @lr, align 4
  %v3_d8cc = mul nuw nsw i32 %v3_d8c0, 256
  store i32 %v3_d8cc, i32* %r1.global-to-local, align 4
  br i1 %v2_d8c4, label %dec_label_pc_d8d4, label %dec_label_pc_d8a8

dec_label_pc_d8d4:                                ; preds = %dec_label_pc_d898.backedge, %dec_label_pc_d8b0, %dec_label_pc_d88c
  %v1_d8d8 = phi i32 [ 1, %dec_label_pc_d88c ], [ %v1_d974, %dec_label_pc_d8b0 ], [ %v1_d97450, %dec_label_pc_d898.backedge ]
  %v0_d8d4 = phi i32 [ 0, %dec_label_pc_d88c ], [ 1, %dec_label_pc_d8b0 ], [ %v0_d96c, %dec_label_pc_d898.backedge ]
  %v7_d8d4 = icmp eq i32 %v0_d8d4, 1
  store i1 %v7_d8d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d8d4, label %bb119, label %bb120

bb119:                                            ; preds = %dec_label_pc_d8d4
  %v2_d8d8 = add i32 %v1_d8d8, 1
  store i32 %v2_d8d8, i32* @ip, align 4
  br label %bb120

bb120:                                            ; preds = %dec_label_pc_d8d4, %bb119
  %v1_d8dc = phi i32 [ %v1_d8d8, %dec_label_pc_d8d4 ], [ %v2_d8d8, %bb119 ]
  %v2_d8dc = add i32 %v1_d8dc, %v0_d8dc143
  store i32 %v2_d8dc, i32* @r4, align 4
  %v3_d8e0 = inttoptr i32 %v2_d8dc to i8*
  %v4_d8e0 = load i8, i8* %v3_d8e0, align 1
  %v6_d8e0 = zext i8 %v4_d8e0 to i32
  store i32 %v6_d8e0, i32* %r3.global-to-local, align 4
  %v1_d8e4 = add i32 %v2_d8dc, 1
  %v2_d8e4 = inttoptr i32 %v1_d8e4 to i8*
  %v3_d8e4 = load i8, i8* %v2_d8e4, align 1
  %v4_d8e4 = zext i8 %v3_d8e4 to i32
  store i32 %v4_d8e4, i32* %r2.global-to-local, align 4
  %v4_d8e8 = mul nuw nsw i32 %v4_d8e4, 256
  %v5_d8e8 = or i32 %v4_d8e8, %v6_d8e0
  store i32 %v5_d8e8, i32* %r3.global-to-local, align 4
  %v7_d8ec = icmp eq i32 %v5_d8e8, 256
  store i1 %v7_d8ec, i1* %cpsr_z.global-to-local, align 1
  %v1_d8f0 = add i32 %v2_d8dc, 10
  store i32 %v1_d8f0, i32* @r7, align 4
  br i1 %v7_d8ec, label %dec_label_pc_d98c, label %dec_label_pc_d8f8

dec_label_pc_d8f8:                                ; preds = %dec_label_pc_d98c, %bb120
  store i32 %v1_d8f0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @ip, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_d90424 = inttoptr i32 %v1_d8f0 to i8*
  %v2_d90425 = load i8, i8* %v1_d90424, align 1
  %v3_d90426 = zext i8 %v2_d90425 to i32
  store i32 %v3_d90426, i32* %r2.global-to-local, align 4
  %v2_d90827 = icmp eq i8 %v2_d90425, 0
  store i1 %v2_d90827, i1* %cpsr_z.global-to-local, align 1
  %v3_d90c28 = mul nuw nsw i32 %v3_d90426, 256
  store i32 %v3_d90c28, i32* %r1.global-to-local, align 4
  br i1 %v2_d90827, label %dec_label_pc_d940, label %dec_label_pc_d914.preheader

dec_label_pc_d914.preheader:                      ; preds = %dec_label_pc_d8f8, %dec_label_pc_d904.backedge
  %v1_d984 = phi i32 [ %v1_d98465, %dec_label_pc_d904.backedge ], [ 1, %dec_label_pc_d8f8 ]
  %v0_d97c63 = phi i32 [ %v0_d97c, %dec_label_pc_d904.backedge ], [ 0, %dec_label_pc_d8f8 ]
  %v0_d92061 = phi i32 [ %v3_d90c, %dec_label_pc_d904.backedge ], [ %v3_d90c28, %dec_label_pc_d8f8 ]
  %v0_d91c59 = phi i32 [ %v1_d980, %dec_label_pc_d904.backedge ], [ %v1_d8f0, %dec_label_pc_d8f8 ]
  %v0_d91457 = phi i32 [ %v3_d904, %dec_label_pc_d904.backedge ], [ %v3_d90426, %dec_label_pc_d8f8 ]
  br label %dec_label_pc_d914

dec_label_pc_d914:                                ; preds = %dec_label_pc_d914.preheader, %dec_label_pc_d91c
  %v0_d97c = phi i32 [ %v0_d97c63, %dec_label_pc_d914.preheader ], [ 1, %dec_label_pc_d91c ]
  %v0_d920 = phi i32 [ %v0_d92061, %dec_label_pc_d914.preheader ], [ %v3_d938, %dec_label_pc_d91c ]
  %v0_d980 = phi i32 [ %v0_d91c59, %dec_label_pc_d914.preheader ], [ %v2_d928, %dec_label_pc_d91c ]
  %v0_d914 = phi i32 [ %v0_d91457, %dec_label_pc_d914.preheader ], [ %v3_d92c, %dec_label_pc_d91c ]
  %v7_d914 = icmp eq i32 %v0_d914, 191
  store i1 %v7_d914, i1* %cpsr_z.global-to-local, align 1
  %tmp159 = icmp ult i32 %v0_d914, 192
  br i1 %tmp159, label %dec_label_pc_d97c, label %dec_label_pc_d91c

dec_label_pc_d91c:                                ; preds = %dec_label_pc_d914
  %v1_d91c = add i32 %v0_d980, 1
  %v2_d91c = inttoptr i32 %v1_d91c to i8*
  %v3_d91c = load i8, i8* %v2_d91c, align 1
  %v4_d91c = zext i8 %v3_d91c to i32
  %v2_d920 = or i32 %v4_d91c, -49152
  %v0_d928 = load i32, i32* @r5, align 4
  %v1_d924 = add i32 %v0_d928, %v0_d920
  %v2_d928 = add i32 %v1_d924, %v2_d920
  store i32 %v2_d928, i32* %r3.global-to-local, align 4
  %v1_d92c = inttoptr i32 %v2_d928 to i8*
  %v2_d92c = load i8, i8* %v1_d92c, align 1
  %v3_d92c = zext i8 %v2_d92c to i32
  store i32 %v3_d92c, i32* %r2.global-to-local, align 4
  %v2_d930 = icmp eq i8 %v2_d92c, 0
  store i1 %v2_d930, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* @ip, align 4
  %v3_d938 = mul nuw nsw i32 %v3_d92c, 256
  store i32 %v3_d938, i32* %r1.global-to-local, align 4
  br i1 %v2_d930, label %dec_label_pc_d940, label %dec_label_pc_d914

dec_label_pc_d940:                                ; preds = %dec_label_pc_d904.backedge, %dec_label_pc_d91c, %dec_label_pc_d8f8
  %v1_d944 = phi i32 [ 1, %dec_label_pc_d8f8 ], [ %v1_d984, %dec_label_pc_d91c ], [ %v1_d98465, %dec_label_pc_d904.backedge ]
  %v0_d940 = phi i32 [ 0, %dec_label_pc_d8f8 ], [ 1, %dec_label_pc_d91c ], [ %v0_d97c, %dec_label_pc_d904.backedge ]
  %v7_d940 = icmp eq i32 %v0_d940, 1
  store i1 %v7_d940, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d940, label %bb121, label %bb122

bb121:                                            ; preds = %dec_label_pc_d940
  %v2_d944 = add i32 %v1_d944, 1
  store i32 %v2_d944, i32* %r0.global-to-local, align 4
  br label %bb122

bb122:                                            ; preds = %dec_label_pc_d9a0, %dec_label_pc_d940, %bb121
  %v1_d948 = phi i32 [ %v5_d9b8, %dec_label_pc_d9a0 ], [ %v1_d944, %dec_label_pc_d940 ], [ %v2_d944, %bb121 ]
  %v2_d948 = add i32 %v1_d948, %v1_d8f0
  br label %dec_label_pc_d878.backedge

dec_label_pc_d878.backedge:                       ; preds = %bb122, %dec_label_pc_d9c4
  %v0_d878.pre = phi i32 [ %v3_d884144, %bb122 ], [ %v0_d878.pre.pre, %dec_label_pc_d9c4 ]
  %storemerge29 = phi i32 [ %v2_d948, %bb122 ], [ %v2_da3c, %dec_label_pc_d9c4 ]
  store i32 %storemerge29, i32* %r0.global-to-local, align 4
  %v1_d878 = add i32 %v0_d878.pre, -1
  %v3_d87c = mul i32 %v1_d878, 65536
  store i32 %v3_d87c, i32* %r3.global-to-local, align 4
  %v7_d880 = icmp eq i32 %v3_d87c, -65536
  store i1 %v7_d880, i1* %cpsr_z.global-to-local, align 1
  %v3_d884 = urem i32 %v1_d878, 65536
  store i32 %v3_d884, i32* @r8, align 4
  br i1 %v7_d880, label %dec_label_pc_d800, label %dec_label_pc_d88c

dec_label_pc_d950:                                ; preds = %dec_label_pc_d800
  %v1_d950 = add i32 %v0_d808, 4
  %v2_d950 = inttoptr i32 %v1_d950 to i32*
  %v3_d950 = load i32, i32* %v2_d950, align 4
  store i32 %v3_d950, i32* %r0.global-to-local, align 4
  %v2_d954 = icmp eq i32 %v3_d950, 0
  store i1 %v2_d954, i1* %cpsr_z.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_d95c.108 to i32), i32* @lr, align 4
  %v1_d958 = xor i1 %v2_d954, true
  call void @__pseudo_cond_branch(i1 %v1_d958, i32 ptrtoint (i32* @global_var_12fe4.107 to i32))
  %v0_d95c = load i32, i32* @fp, align 4
  store i32 %v0_d95c, i32* @r0, align 4
  %v0_d960 = call i32 @function_12fe4()
  store i32 %v0_d960, i32* %r0.global-to-local, align 4
  %v0_d964 = load i32, i32* @r4, align 4
  br label %dec_label_pc_d814

dec_label_pc_d96c:                                ; preds = %dec_label_pc_d8a8
  %v2_d96c = icmp eq i32 %v0_d96c, 0
  store i1 %v2_d96c, i1* %cpsr_z.global-to-local, align 1
  %v1_d970 = add i32 %v0_d970, 1
  store i32 %v1_d970, i32* %r3.global-to-local, align 4
  br i1 %v2_d96c, label %bb123, label %dec_label_pc_d898.backedge

dec_label_pc_d898.backedge:                       ; preds = %dec_label_pc_d96c, %bb123
  %v1_d97450 = phi i32 [ %v1_d974, %dec_label_pc_d96c ], [ %v2_d974, %bb123 ]
  %v1_d898 = inttoptr i32 %v1_d970 to i8*
  %v2_d898 = load i8, i8* %v1_d898, align 1
  %v3_d898 = zext i8 %v2_d898 to i32
  store i32 %v3_d898, i32* %r2.global-to-local, align 4
  %v2_d89c = icmp eq i8 %v2_d898, 0
  store i1 %v2_d89c, i1* %cpsr_z.global-to-local, align 1
  %v3_d8a0 = mul nuw nsw i32 %v3_d898, 256
  store i32 %v3_d8a0, i32* %r1.global-to-local, align 4
  br i1 %v2_d89c, label %dec_label_pc_d8d4, label %dec_label_pc_d8a8.preheader

bb123:                                            ; preds = %dec_label_pc_d96c
  %v2_d974 = add i32 %v1_d974, 1
  store i32 %v2_d974, i32* @ip, align 4
  br label %dec_label_pc_d898.backedge

dec_label_pc_d97c:                                ; preds = %dec_label_pc_d914
  %v2_d97c = icmp eq i32 %v0_d97c, 0
  store i1 %v2_d97c, i1* %cpsr_z.global-to-local, align 1
  %v1_d980 = add i32 %v0_d980, 1
  store i32 %v1_d980, i32* %r3.global-to-local, align 4
  br i1 %v2_d97c, label %bb124, label %dec_label_pc_d904.backedge

dec_label_pc_d904.backedge:                       ; preds = %dec_label_pc_d97c, %bb124
  %v1_d98465 = phi i32 [ %v1_d984, %dec_label_pc_d97c ], [ %v2_d984, %bb124 ]
  %v1_d904 = inttoptr i32 %v1_d980 to i8*
  %v2_d904 = load i8, i8* %v1_d904, align 1
  %v3_d904 = zext i8 %v2_d904 to i32
  store i32 %v3_d904, i32* %r2.global-to-local, align 4
  %v2_d908 = icmp eq i8 %v2_d904, 0
  store i1 %v2_d908, i1* %cpsr_z.global-to-local, align 1
  %v3_d90c = mul nuw nsw i32 %v3_d904, 256
  store i32 %v3_d90c, i32* %r1.global-to-local, align 4
  br i1 %v2_d908, label %dec_label_pc_d940, label %dec_label_pc_d914.preheader

bb124:                                            ; preds = %dec_label_pc_d97c
  %v2_d984 = add i32 %v1_d984, 1
  store i32 %v2_d984, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d904.backedge

dec_label_pc_d98c:                                ; preds = %bb120
  %v1_d98c = add i32 %v2_d8dc, 2
  %v2_d98c = inttoptr i32 %v1_d98c to i8*
  %v3_d98c = load i8, i8* %v2_d98c, align 1
  %v4_d98c = zext i8 %v3_d98c to i32
  store i32 %v4_d98c, i32* %r3.global-to-local, align 4
  %v1_d990 = add i32 %v2_d8dc, 3
  %v2_d990 = inttoptr i32 %v1_d990 to i8*
  %v3_d990 = load i8, i8* %v2_d990, align 1
  %v4_d990 = zext i8 %v3_d990 to i32
  store i32 %v4_d990, i32* %r2.global-to-local, align 4
  %v4_d994 = mul nuw nsw i32 %v4_d990, 256
  %v5_d994 = or i32 %v4_d994, %v4_d98c
  store i32 %v5_d994, i32* %r3.global-to-local, align 4
  %v7_d998 = icmp eq i32 %v5_d994, 256
  store i1 %v7_d998, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d998, label %dec_label_pc_d9a0, label %dec_label_pc_d8f8

dec_label_pc_d9a0:                                ; preds = %dec_label_pc_d98c
  %v1_d9a0 = add i32 %v2_d8dc, 9
  %v2_d9a0 = inttoptr i32 %v1_d9a0 to i8*
  %v3_d9a0 = load i8, i8* %v2_d9a0, align 1
  %v4_d9a0 = zext i8 %v3_d9a0 to i32
  store i32 %v4_d9a0, i32* %r2.global-to-local, align 4
  %v1_d9a4 = add i32 %v2_d8dc, 8
  %v2_d9a4 = inttoptr i32 %v1_d9a4 to i8*
  %v3_d9a4 = load i8, i8* %v2_d9a4, align 1
  %v4_d9a4 = zext i8 %v3_d9a4 to i32
  %v4_d9a8 = mul nuw nsw i32 %v4_d9a0, 256
  %v5_d9a8 = or i32 %v4_d9a4, %v4_d9a8
  %v3_d9ac = mul i32 %v5_d9a8, 65536
  store i32 %v3_d9ac, i32* %r3.global-to-local, align 4
  %v3_d9b0 = mul nuw nsw i32 %v4_d9a4, 256
  store i32 %v3_d9b0, i32* %r2.global-to-local, align 4
  %v5_d9b8 = or i32 %v3_d9b0, %v4_d9a0
  store i32 %v5_d9b8, i32* %r0.global-to-local, align 4
  %v7_d9bc = icmp eq i32 %v5_d9b8, 4
  store i1 %v7_d9bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d9bc, label %dec_label_pc_d9c4, label %bb122

dec_label_pc_d9c4:                                ; preds = %dec_label_pc_d9a0
  %v2_d9c4 = inttoptr i32 %v1_d8f0 to i8*
  %v3_d9c4 = load i8, i8* %v2_d9c4, align 1
  %v4_d9c4 = zext i8 %v3_d9c4 to i32
  store i32 %v4_d9c4, i32* %r3.global-to-local, align 4
  store i32 %v2_d5d4, i32* %r2.global-to-local, align 4
  %v1_d9d0 = add i32 %v2_d8dc, 11
  %v2_d9d0 = inttoptr i32 %v1_d9d0 to i8*
  %v3_d9d0 = load i8, i8* %v2_d9d0, align 1
  %v4_d9d0 = zext i8 %v3_d9d0 to i32
  store i32 %v4_d9d0, i32* %r2.global-to-local, align 4
  store i32 %v2_d5d4, i32* %r3.global-to-local, align 4
  %v1_d9dc = add i32 %v2_d8dc, 12
  %v2_d9dc = inttoptr i32 %v1_d9dc to i8*
  %v3_d9dc = load i8, i8* %v2_d9dc, align 1
  %v4_d9dc = zext i8 %v3_d9dc to i32
  store i32 %v4_d9dc, i32* %r3.global-to-local, align 4
  store i32 %v2_d5d4, i32* @ip, align 4
  %v1_d9e8 = add i32 %v2_d8dc, 13
  %v2_d9e8 = inttoptr i32 %v1_d9e8 to i8*
  %v3_d9e8 = load i8, i8* %v2_d9e8, align 1
  %v4_d9e8 = zext i8 %v3_d9e8 to i32
  store i32 %v4_d9e8, i32* %r2.global-to-local, align 4
  %v0_d9f0 = load i32, i32* @fp, align 4
  %v1_d9f0 = inttoptr i32 %v0_d9f0 to i8*
  %v2_d9f0 = load i8, i8* %v1_d9f0, align 1
  %v3_d9f0 = zext i8 %v2_d9f0 to i32
  %v1_d9f4 = mul nuw nsw i32 %v3_d9f0, 4
  %v3_d9f8 = add nuw nsw i32 %v1_d9f4, 4
  store i32 %v3_d9f8, i32* %r1.global-to-local, align 4
  %v1_d9fc = add i32 %v0_d9f0, 4
  %v2_d9fc = inttoptr i32 %v1_d9fc to i32*
  %v3_d9fc = load i32, i32* %v2_d9fc, align 4
  store i32 %v3_d9fc, i32* %r0.global-to-local, align 4
  %v3_da00 = sext i8 %v3_d9e8 to i32
  %v5_da00 = sext i8 %v3_d9dc to i32
  %v10_da00 = inttoptr i32 %v3_d9fc to i32*
  %v11_da00 = call i32 @function_129cc(i32* %v10_da00, i32 %v3_d9f8, i32 %v3_da00, i32 %v5_da00)
  store i32 %v11_da00, i32* %r0.global-to-local, align 4
  %v0_da04 = load i32, i32* @fp, align 4
  %v1_da04 = inttoptr i32 %v0_da04 to i8*
  %v2_da04 = load i8, i8* %v1_da04, align 1
  %v3_da04 = zext i8 %v2_da04 to i32
  store i32 %v3_da04, i32* %r2.global-to-local, align 4
  %v4_da0c = sext i8 %v3_d9c4 to i32
  store i32 %v4_da0c, i32* %r3.global-to-local, align 4
  %v1_da10 = add nuw nsw i32 %v3_da04, 1
  store i32 %v1_da10, i32* %r1.global-to-local, align 4
  %v5_da14 = mul nuw nsw i32 %v3_da04, 4
  %v6_da14 = add i32 %v5_da14, %v11_da00
  %v7_da14 = inttoptr i32 %v6_da14 to i32*
  store i32 %v4_da0c, i32* %v7_da14, align 4
  %v1_da18 = load i32, i32* @fp, align 4
  %v2_da18 = add i32 %v1_da18, 4
  %v3_da18 = inttoptr i32 %v2_da18 to i32*
  store i32 %v11_da00, i32* %v3_da18, align 4
  %v0_da1c = load i32, i32* %r1.global-to-local, align 4
  %v1_da1c = trunc i32 %v0_da1c to i8
  %v2_da1c = load i32, i32* @fp, align 4
  %v3_da1c = inttoptr i32 %v2_da1c to i8*
  store i8 %v1_da1c, i8* %v3_da1c, align 1
  %v0_da20 = load i32, i32* @r4, align 4
  %v1_da20 = add i32 %v0_da20, 9
  %v2_da20 = inttoptr i32 %v1_da20 to i8*
  %v3_da20 = load i8, i8* %v2_da20, align 1
  %v4_da20 = zext i8 %v3_da20 to i32
  store i32 %v4_da20, i32* %r3.global-to-local, align 4
  %v1_da24 = add i32 %v0_da20, 8
  %v2_da24 = inttoptr i32 %v1_da24 to i8*
  %v3_da24 = load i8, i8* %v2_da24, align 1
  %v4_da24 = zext i8 %v3_da24 to i32
  %v4_da28 = mul nuw nsw i32 %v4_da20, 256
  %v5_da28 = or i32 %v4_da24, %v4_da28
  %v3_da2c = mul i32 %v5_da28, 65536
  store i32 %v3_da2c, i32* %r2.global-to-local, align 4
  %v3_da30 = mul nuw nsw i32 %v4_da24, 256
  store i32 %v3_da30, i32* %r3.global-to-local, align 4
  %v5_da38 = or i32 %v3_da30, %v4_da20
  store i32 %v5_da38, i32* %r0.global-to-local, align 4
  %v0_da3c = load i32, i32* @r7, align 4
  %v2_da3c = add i32 %v0_da3c, %v5_da38
  %v0_d878.pre.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_d878.backedge

; uselistorder directives
  uselistorder i32 %v3_da30, { 1, 0 }
  uselistorder i32 %v4_da20, { 1, 0, 2 }
  uselistorder i32 %v11_da00, { 1, 0, 2 }
  uselistorder i32 %v3_d9f8, { 1, 0 }
  uselistorder i32 %v5_d9b8, { 1, 2, 0 }
  uselistorder i32 %v3_d9b0, { 1, 0 }
  uselistorder i32 %v4_d9a0, { 1, 0, 2 }
  uselistorder i32 %v2_d984, { 1, 0 }
  uselistorder i32 %v3_d904, { 0, 2, 1 }
  uselistorder i32 %v1_d98465, { 1, 0 }
  uselistorder i32 %v1_d980, { 1, 2, 0 }
  uselistorder i32 %v2_d974, { 1, 0 }
  uselistorder i32 %v3_d898, { 0, 2, 1 }
  uselistorder i32 %v1_d97450, { 1, 0 }
  uselistorder i32 %v1_d970, { 1, 2, 0 }
  uselistorder i1 %v7_d880, { 1, 0 }
  uselistorder i32 %v1_d878, { 1, 0 }
  uselistorder i32 %storemerge29, { 1, 0 }
  uselistorder i32 %v3_d92c, { 0, 2, 1 }
  uselistorder i32 %v2_d928, { 1, 2, 0 }
  uselistorder i32 %v0_d97c, { 2, 0, 1 }
  uselistorder i32 %v1_d984, { 1, 2, 0 }
  uselistorder i32 %v3_d90c28, { 1, 0 }
  uselistorder i32 %v3_d90426, { 1, 0, 2 }
  uselistorder i32 %v1_d8f0, { 2, 1, 0, 4, 3, 5 }
  uselistorder i32 %v2_d8dc, { 0, 1, 2, 4, 3, 6, 5, 7, 9, 8, 10 }
  uselistorder i32 %v3_d8c0, { 0, 2, 1 }
  uselistorder i32 %v2_d8bc, { 1, 2, 0 }
  uselistorder i32 %v0_d96c, { 2, 0, 1 }
  uselistorder i32 %v1_d974, { 1, 2, 0 }
  uselistorder i32 %v3_d8a022, { 1, 0 }
  uselistorder i32 %v3_d89820, { 1, 0, 2 }
  uselistorder i32 %v0_d8dc143, { 3, 0, 1, 2 }
  uselistorder i32 %v3_d884142, { 1, 0 }
  uselistorder i1 %v7_d880141, { 1, 0 }
  uselistorder i32 %v1_d878134, { 1, 0 }
  uselistorder i1 %v9_d854, { 1, 0 }
  uselistorder i32 %v0_d814, { 1, 0 }
  uselistorder i32 %v0_d808, { 1, 0, 2 }
  uselistorder i32 %v0_d7f8, { 1, 0 }
  uselistorder i32 %v0_d7d0, { 1, 0 }
  uselistorder i32 %v1_d784, { 1, 0, 2 }
  uselistorder i1 %v7_d77c, { 1, 0 }
  uselistorder i32 %v5_d778, { 1, 0, 2 }
  uselistorder i32 %v1_d740, { 1, 0 }
  uselistorder i32 %v3_d72c, { 1, 0 }
  uselistorder i32 %v0_d724, { 1, 0 }
  uselistorder i32 %v1_d718, { 1, 2, 0 }
  uselistorder i1 %v7_d6d0, { 1, 0 }
  uselistorder i32 %v4_d6cc, { 1, 0, 2 }
  uselistorder i1 %v7_d6b4, { 1, 0 }
  uselistorder i32 %v3_d6b0, { 1, 0, 2 }
  uselistorder i1 %v7_d698, { 1, 0 }
  uselistorder i32 %v3_d694, { 2, 1, 0, 3 }
  uselistorder i1 %v7_d67c, { 2, 1, 0 }
  uselistorder i32 %v1_d680, { 1, 0 }
  uselistorder i32 %v2_d708, { 1, 0, 2 }
  uselistorder i16 %v5_d624, { 1, 0 }
  uselistorder i32 %v2_d620, { 1, 0, 2 }
  uselistorder i32 %v6_d60c, { 1, 2, 0 }
  uselistorder i64 %v5_d608, { 0, 2, 1 }
  uselistorder i32 %v1_d5f4, { 1, 0, 2 }
  uselistorder i32 %v1_d5ac, { 1, 0 }
  uselistorder i32 %v1_d5a8, { 1, 2, 0 }
  uselistorder i32 %v2_d5a4, { 1, 0 }
  uselistorder i1 %v8_d590, { 1, 0 }
  uselistorder i32 %v2_d568, { 1, 0, 2 }
  uselistorder i16* %stack_var_-2244, { 1, 0 }
  uselistorder i32* %stack_var_-68, { 0, 2, 1 }
  uselistorder i16* %stack_var_-4292, { 1, 0 }
  uselistorder i16 %tmp79, { 0, 2, 1 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 16, 11, 14, 12, 13, 15, 17, 36, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 32, 33, 35 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 12, 8, 29, 10, 11, 28, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 25, 27 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 4, 6, 3, 20, 5, 19, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 22, 21, 23, 18 }
  uselistorder i32* %r0.global-to-local, { 1, 5, 2, 3, 4, 11, 6, 8, 7, 9, 10, 12, 15, 13, 14, 17, 16, 20, 18, 19, 21, 22, 24, 23, 26, 25, 27, 29, 28, 30, 33, 32, 31, 34, 35, 36, 37, 38, 39, 40, 41, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 8, 2, 13, 3, 4, 14, 5, 6, 7, 34, 9, 10, 11, 12, 33, 36, 15, 16, 17, 18, 19, 20, 21, 22, 23, 35, 24, 25, 26, 27, 32, 29, 30, 28, 31, 37 }
  uselistorder i32 (i32)* @function_13440, { 10, 9, 8, 7, 6, 0, 5, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_d904.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_d898.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_d878.backedge, { 1, 0 }
  uselistorder label %bb122, { 0, 2, 1 }
  uselistorder label %dec_label_pc_d914, { 1, 0 }
  uselistorder label %dec_label_pc_d914.preheader, { 1, 0 }
  uselistorder label %bb120, { 1, 0 }
  uselistorder label %dec_label_pc_d8a8, { 1, 0 }
  uselistorder label %dec_label_pc_d8a8.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_d88c, { 1, 0 }
  uselistorder label %dec_label_pc_d814, { 1, 0 }
  uselistorder label %dec_label_pc_d800, { 5, 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_d7e0, { 2, 1, 4, 0, 3 }
  uselistorder label %bb118, { 1, 0 }
  uselistorder label %bb115, { 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_d588, { 1, 0 }
}

define i32 @function_da44() local_unnamed_addr {
dec_label_pc_da44:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_da44 = load i32, i32* @r4, align 4
  store i32 %v3_da44, i32* %stack_var_-16, align 4
  %v12_da44 = load i32, i32* @lr, align 4
  %v0_da48 = load i32, i32* @r0, align 4
  store i32 %v0_da48, i32* %r5.global-to-local, align 4
  %v1_da4c = add i32 %v0_da48, 4
  %v2_da4c = inttoptr i32 %v1_da4c to i32*
  %v3_da4c = load i32, i32* %v2_da4c, align 4
  store i32 %v3_da4c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 0, i32* %stack_var_-32, align 4
  store i32 55920, i32* @lr, align 4
  %v1_da6c = icmp ne i32 %v3_da4c, -1
  call void @__pseudo_cond_branch(i1 %v1_da6c, i32 ptrtoint (i32* @global_var_11548.84 to i32))
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_da7c = call i32 @function_11d30(i32 2, i32 1, i32 0)
  store i32 %v3_da7c, i32* %r0.global-to-local, align 4
  %v7_da80 = icmp eq i32 %v3_da7c, -1
  %v1_da84 = load i32, i32* %r5.global-to-local, align 4
  %v2_da84 = add i32 %v1_da84, 4
  %v3_da84 = inttoptr i32 %v2_da84 to i32*
  store i32 %v3_da7c, i32* %v3_da84, align 4
  br i1 %v7_da80, label %dec_label_pc_da44.dec_label_pc_dafc_crit_edge, label %dec_label_pc_da8c

dec_label_pc_da44.dec_label_pc_dafc_crit_edge:    ; preds = %dec_label_pc_da44
  %v1_db04.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_dafc

dec_label_pc_da8c:                                ; preds = %dec_label_pc_da44
  %v2_da50 = ptrtoint i32* %stack_var_-32 to i32
  %v0_da8c = load i32, i32* %r5.global-to-local, align 4
  %v1_da8c = add i32 %v0_da8c, 28
  store i32 %v1_da8c, i32* @r0, align 4
  %v0_da90 = load i32, i32* %r6.global-to-local, align 4
  %v2_da90 = add i32 %v0_da8c, 24
  %v3_da90 = inttoptr i32 %v2_da90 to i32*
  store i32 %v0_da90, i32* %v3_da90, align 4
  store i32 256, i32* @r1, align 4
  %v0_da98 = call i32 @function_10bd0()
  store i32 %v0_da98, i32* %r0.global-to-local, align 4
  %v0_da9c = load i32, i32* %r5.global-to-local, align 4
  %v1_da9c = add i32 %v0_da9c, 4
  %v2_da9c = inttoptr i32 %v1_da9c to i32*
  %v3_da9c = load i32, i32* %v2_da9c, align 4
  store i32 %v3_da9c, i32* %r4.global-to-local, align 4
  %v0_daa0 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_daa0, i32* %r2.global-to-local, align 4
  store i32 %v3_da9c, i32* %r0.global-to-local, align 4
  %v2_daac = call i32 @function_1137c(i32 %v3_da9c, i32 3)
  %v1_dab4 = or i32 %v2_daac, 2048
  store i32 %v1_dab4, i32* %r2.global-to-local, align 4
  %v0_dab8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_dab8, i32* %r0.global-to-local, align 4
  %v2_dabc = call i32 @function_1137c(i32 %v0_dab8, i32 4)
  store i32 %v2_dabc, i32* %r0.global-to-local, align 4
  %v2_dac4 = load i32, i32* @global_var_1f610.110, align 4
  store i32 %v2_dac4, i32* %r2.global-to-local, align 4
  %v1_dacc = load i32, i32* %r5.global-to-local, align 4
  %v2_dacc = add i32 %v1_dacc, 12
  %v3_dacc = inttoptr i32 %v2_dacc to i32*
  store i32 1, i32* %v3_dacc, align 4
  store i32 2, i32* @r3, align 4
  store i32 2, i32* %stack_var_-32, align 4
  %v0_dad8 = load i32, i32* %r2.global-to-local, align 4
  %v1_dad8 = load i32, i32* %r5.global-to-local, align 4
  %v2_dad8 = add i32 %v1_dad8, 8
  %v3_dad8 = inttoptr i32 %v2_dad8 to i32*
  store i32 %v0_dad8, i32* %v3_dad8, align 4
  %v0_dadc = load i32, i32* %r5.global-to-local, align 4
  %v1_dadc = add i32 %v0_dadc, 16
  %v2_dadc = inttoptr i32 %v1_dadc to i32*
  %v3_dadc = load i32, i32* %v2_dadc, align 4
  store i32 %v3_dadc, i32* @ip, align 4
  %v1_dae0 = add i32 %v0_dadc, 4
  %v2_dae0 = inttoptr i32 %v1_dae0 to i32*
  %v3_dae0 = load i32, i32* %v2_dae0, align 4
  store i32 %v3_dae0, i32* %r0.global-to-local, align 4
  %v1_dae4 = add i32 %v0_dadc, 20
  %v2_dae4 = inttoptr i32 %v1_dae4 to i16*
  %v3_dae4 = load i16, i16* %v2_dae4, align 2
  %v4_dae4 = zext i16 %v3_dae4 to i32
  store i32 %v4_dae4, i32* %r5.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_daf8 = call i32 @function_11b18(i32 %v3_dae0, i32 %v2_da50, i32 16)
  store i32 %v3_daf8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_dafc

dec_label_pc_dafc:                                ; preds = %dec_label_pc_da44.dec_label_pc_dafc_crit_edge, %dec_label_pc_da8c
  %v1_db04 = phi i32 [ %v1_db04.pre, %dec_label_pc_da44.dec_label_pc_dafc_crit_edge ], [ %v3_daf8, %dec_label_pc_da8c ]
  %v2_db00 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_db00, i32* @r4, align 4
  store i32 %v12_da44, i32* @lr, align 4
  ret i32 %v1_db04

; uselistorder directives
  uselistorder i32 %v3_da7c, { 1, 0, 2 }
  uselistorder i32* %stack_var_-32, { 0, 2, 1 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 5, 6, 4, 7 }
  uselistorder i32* %r0.global-to-local, { 1, 0, 3, 2, 4, 5, 8, 9, 7, 6 }
  uselistorder i32 ()* @function_10bd0, { 5, 6, 4, 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_dafc, { 1, 0 }
}

define i32 @function_db0c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_db0c:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_db0c = load i32, i32* @r4, align 4
  %v6_db0c = load i32, i32* @r5, align 4
  %v9_db0c = load i32, i32* @r6, align 4
  %v12_db0c = load i32, i32* @r7, align 4
  %v15_db0c = load i32, i32* @r8, align 4
  %v18_db0c = load i32, i32* @sb, align 4
  %v21_db0c = load i32, i32* @sl, align 4
  %v24_db0c = load i32, i32* @fp, align 4
  store i32 ptrtoint (i32* @global_var_1f5dc.112 to i32), i32* @fp, align 4
  %v2_db14 = load i32, i32* @global_var_1f5dc.112, align 4
  store i32 ptrtoint (i32* @global_var_1f608.114 to i32), i32* @sl, align 4
  %v1_db20 = add i32 %v2_db14, 1
  store i32 %v1_db20, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r5, align 4
  %v2_db2c = load i32, i32* @global_var_1f608.114, align 4
  store i32 %v2_db2c, i32* %r0.global-to-local, align 4
  %v3_db30 = mul i32 %v1_db20, 16
  store i32 %v3_db30, i32* %r1.global-to-local, align 4
  %v4_db38 = inttoptr i32 %v2_db2c to i32*
  %v5_db38 = call i32 @function_129cc(i32* %v4_db38, i32 %v3_db30, i32 %arg3, i32 %v1_db20)
  %v2_db3c = load i32, i32* @global_var_1f5dc.112, align 4
  store i32 %v2_db3c, i32* %r2.global-to-local, align 4
  store i32 %v5_db38, i32* @r8, align 4
  %v0_db44 = load i32, i32* @r5, align 4
  store i32 %v0_db44, i32* %r0.global-to-local, align 4
  %v1_db4c = load i32, i32* @sl, align 4
  %v2_db4c = inttoptr i32 %v1_db4c to i32*
  store i32 %v5_db38, i32* %v2_db4c, align 4
  %v1_db50 = inttoptr i32 %v0_db44 to i8*
  %v2_db50 = call i32 @function_10b3c(i8* %v1_db50)
  %sext = mul i32 %v2_db50, 16777216
  %v1_db54 = sdiv i32 %sext, 16777216
  %v2_db54 = add nsw i32 %v1_db54, 1
  store i32 %v2_db54, i32* @r4, align 4
  store i32 %v1_db54, i32* @r7, align 4
  store i32 %v2_db54, i32* @r0, align 4
  %v0_db60 = call i32 @function_11f78()
  store i32 %v0_db60, i32* %r0.global-to-local, align 4
  %v0_db64 = load i32, i32* @r5, align 4
  store i32 %v0_db64, i32* %r1.global-to-local, align 4
  %v0_db68 = load i32, i32* @r4, align 4
  store i32 %v0_db68, i32* %r2.global-to-local, align 4
  store i32 %v0_db60, i32* %r6.global-to-local, align 4
  %v3_db70 = call i32 @function_10bac(i32 %v0_db60, i32 %v0_db64, i32 %v0_db68)
  store i32 %v3_db70, i32* %r0.global-to-local, align 4
  %v0_db74 = load i32, i32* @r7, align 4
  %tmp22 = icmp slt i32 %v0_db74, 1
  %extract.t6 = trunc i32 %v0_db74 to i8
  br i1 %tmp22, label %dec_label_pc_db98, label %dec_label_pc_db7c

dec_label_pc_db7c:                                ; preds = %dec_label_pc_db0c
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_db80

dec_label_pc_db80:                                ; preds = %dec_label_pc_db80, %dec_label_pc_db7c
  %v2_db88 = phi i32 [ %v1_db8c, %dec_label_pc_db80 ], [ 0, %dec_label_pc_db7c ]
  %v1_db80 = load i32, i32* %r6.global-to-local, align 4
  %v2_db80 = add i32 %v1_db80, %v2_db88
  %v3_db80 = inttoptr i32 %v2_db80 to i8*
  %v4_db80 = load i8, i8* %v3_db80, align 1
  %v6_db80 = zext i8 %v4_db80 to i32
  %v1_db84 = xor i32 %v6_db80, 98
  store i32 %v1_db84, i32* %r3.global-to-local, align 4
  %v1_db88 = trunc i32 %v1_db84 to i8
  store i8 %v1_db88, i8* %v3_db80, align 1
  %v0_db8c = load i32, i32* %r2.global-to-local, align 4
  %v1_db8c = add i32 %v0_db8c, 1
  store i32 %v1_db8c, i32* %r2.global-to-local, align 4
  %v1_db90 = load i32, i32* @r7, align 4
  %v9_db90 = icmp eq i32 %v1_db8c, %v1_db90
  br i1 %v9_db90, label %dec_label_pc_db98.loopexit, label %dec_label_pc_db80

dec_label_pc_db98.loopexit:                       ; preds = %dec_label_pc_db80
  %extract.t = trunc i32 %v1_db8c to i8
  br label %dec_label_pc_db98

dec_label_pc_db98:                                ; preds = %dec_label_pc_db98.loopexit, %dec_label_pc_db0c
  %v0_dba8.off0 = phi i8 [ %extract.t, %dec_label_pc_db98.loopexit ], [ %extract.t6, %dec_label_pc_db0c ]
  %v2_db98 = load i32, i32* @global_var_1f5dc.112, align 4
  %v2_db9c = load i32, i32* @global_var_1f608.114, align 4
  %v3_dba0 = mul i32 %v2_db98, 16
  store i32 %v3_dba0, i32* @sb, align 4
  %v2_dba4 = add i32 %v2_db9c, %v3_dba0
  store i32 %v2_dba4, i32* %r2.global-to-local, align 4
  %v3_dba8 = add i32 %v2_dba4, 12
  %v4_dba8 = inttoptr i32 %v3_dba8 to i8*
  store i8 %v0_dba8.off0, i8* %v4_dba8, align 1
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %v2_db3c, i32* %r3.global-to-local, align 4
  %v0_dbb4 = load i32, i32* %r6.global-to-local, align 4
  %v1_dbb4 = load i32, i32* @r8, align 4
  %v5_dbb4 = mul i32 %v2_db3c, 16
  %v6_dbb4 = add i32 %v1_dbb4, %v5_dbb4
  %v7_dbb4 = inttoptr i32 %v6_dbb4 to i32*
  store i32 %v0_dbb4, i32* %v7_dbb4, align 4
  %v2_dbb8 = load i32, i32* @global_var_1f608.114, align 4
  store i32 %v2_dbb8, i32* @r7, align 4
  %v1_dbbc = inttoptr i32 %arg2 to i8*
  %v2_dbbc = call i32 @function_10b3c(i8* %v1_dbbc)
  %sext1 = mul i32 %v2_dbbc, 16777216
  %v1_dbc0 = sdiv i32 %sext1, 16777216
  %v2_dbc0 = add nsw i32 %v1_dbc0, 1
  store i32 %v2_dbc0, i32* @r4, align 4
  store i32 %v1_dbc0, i32* @r6, align 4
  store i32 %v2_dbc0, i32* @r0, align 4
  %v0_dbcc = call i32 @function_11f78()
  store i32 %v0_dbcc, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v0_dbd4 = load i32, i32* @r4, align 4
  store i32 %v0_dbd4, i32* %r2.global-to-local, align 4
  store i32 %v0_dbcc, i32* %r5.global-to-local, align 4
  %v3_dbdc = call i32 @function_10bac(i32 %v0_dbcc, i32 %arg2, i32 %v0_dbd4)
  store i32 %v3_dbdc, i32* %r0.global-to-local, align 4
  %v0_dbe0 = load i32, i32* @r6, align 4
  %tmp23 = icmp slt i32 %v0_dbe0, 1
  %extract.t8 = trunc i32 %v0_dbe0 to i8
  br i1 %tmp23, label %dec_label_pc_dc04, label %dec_label_pc_dbe8

dec_label_pc_dbe8:                                ; preds = %dec_label_pc_db98
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_dbec

dec_label_pc_dbec:                                ; preds = %dec_label_pc_dbec, %dec_label_pc_dbe8
  %v2_dbf4 = phi i32 [ %v1_dbf8, %dec_label_pc_dbec ], [ 0, %dec_label_pc_dbe8 ]
  %v1_dbec = load i32, i32* %r5.global-to-local, align 4
  %v2_dbec = add i32 %v1_dbec, %v2_dbf4
  %v3_dbec = inttoptr i32 %v2_dbec to i8*
  %v4_dbec = load i8, i8* %v3_dbec, align 1
  %v6_dbec = zext i8 %v4_dbec to i32
  %v1_dbf0 = xor i32 %v6_dbec, 98
  store i32 %v1_dbf0, i32* %r3.global-to-local, align 4
  %v1_dbf4 = trunc i32 %v1_dbf0 to i8
  store i8 %v1_dbf4, i8* %v3_dbec, align 1
  %v0_dbf8 = load i32, i32* %r2.global-to-local, align 4
  %v1_dbf8 = add i32 %v0_dbf8, 1
  store i32 %v1_dbf8, i32* %r2.global-to-local, align 4
  %v1_dbfc = load i32, i32* @r6, align 4
  %v9_dbfc = icmp eq i32 %v1_dbf8, %v1_dbfc
  br i1 %v9_dbfc, label %dec_label_pc_dc04.loopexit, label %dec_label_pc_dbec

dec_label_pc_dc04.loopexit:                       ; preds = %dec_label_pc_dbec
  %extract.t7 = trunc i32 %v1_dbf8 to i8
  br label %dec_label_pc_dc04

dec_label_pc_dc04:                                ; preds = %dec_label_pc_dc04.loopexit, %dec_label_pc_db98
  %v0_dc14.off0 = phi i8 [ %extract.t7, %dec_label_pc_dc04.loopexit ], [ %extract.t8, %dec_label_pc_db98 ]
  %v2_dc04 = load i32, i32* @global_var_1f5dc.112, align 4
  store i32 %v2_dc04, i32* %r0.global-to-local, align 4
  %v2_dc08 = load i32, i32* @global_var_1f608.114, align 4
  %v3_dc0c = mul i32 %v2_dc04, 16
  store i32 %v3_dc0c, i32* %r1.global-to-local, align 4
  %v2_dc10 = or i32 %v3_dc0c, 13
  %v3_dc14 = add i32 %v2_dc10, %v2_dc08
  %v4_dc14 = inttoptr i32 %v3_dc14 to i8*
  store i8 %v0_dc14.off0, i8* %v4_dc14, align 1
  store i32 ptrtoint (i16** @global_var_1f60c.116 to i32), i32* %r4.global-to-local, align 4
  %v2_dc20 = load i16, i16* bitcast (i16** @global_var_1f60c.116 to i16*), align 4
  %v3_dc20 = zext i16 %v2_dc20 to i32
  store i32 %v3_dc20, i32* %lr.global-to-local, align 4
  %v2_dc28 = load i32, i32* @global_var_1f608.114, align 4
  store i32 %v2_dc28, i32* %r2.global-to-local, align 4
  %v0_dc30 = load i32, i32* %r1.global-to-local, align 4
  %v2_dc30 = add i32 %v0_dc30, %v2_dc28
  store i32 %v2_dc30, i32* %r1.global-to-local, align 4
  store i32 lshr (i32 shl (i32 ptrtoint (i16** @global_var_1f60c.116 to i32), i32 16), i32 16), i32* %r3.global-to-local, align 4
  %v0_dc38 = load i32, i32* @sb, align 4
  %v1_dc38 = load i32, i32* @r7, align 4
  %v2_dc38 = add i32 %v1_dc38, %v0_dc38
  store i32 %v2_dc38, i32* %ip.global-to-local, align 4
  %v0_dc3c = load i32, i32* %r0.global-to-local, align 4
  %v1_dc3c = add i32 %v0_dc3c, 1
  store i32 %v1_dc3c, i32* %r0.global-to-local, align 4
  %v3_dc40 = add i32 %v2_dc30, 10
  %v4_dc40 = inttoptr i32 %v3_dc40 to i16*
  store i16 trunc (i32 lshr (i32 shl (i32 ptrtoint (i16** @global_var_1f60c.116 to i32), i32 16), i32 16) to i16), i16* %v4_dc40, align 2
  %v0_dc44 = load i32, i32* %lr.global-to-local, align 4
  %v1_dc44 = trunc i32 %v0_dc44 to i16
  %v2_dc44 = load i32, i32* %r1.global-to-local, align 4
  %v3_dc44 = add i32 %v2_dc44, 8
  %v4_dc44 = inttoptr i32 %v3_dc44 to i16*
  store i16 %v1_dc44, i16* %v4_dc44, align 2
  %v0_dc48 = load i32, i32* %r5.global-to-local, align 4
  %v1_dc48 = load i32, i32* %ip.global-to-local, align 4
  %v2_dc48 = add i32 %v1_dc48, 4
  %v3_dc48 = inttoptr i32 %v2_dc48 to i32*
  store i32 %v0_dc48, i32* %v3_dc48, align 4
  %v1_dc4c = load i32, i32* @fp, align 4
  %v2_dc4c = inttoptr i32 %v1_dc4c to i32*
  store i32 %v1_dc3c, i32* %v2_dc4c, align 4
  %v0_dc50 = load i32, i32* %r3.global-to-local, align 4
  %v1_dc50 = trunc i32 %v0_dc50 to i16
  %v2_dc50 = load i32, i32* %r4.global-to-local, align 4
  %v3_dc50 = inttoptr i32 %v2_dc50 to i16*
  store i16 %v1_dc50, i16* %v3_dc50, align 2
  store i32 %v3_db0c, i32* @r4, align 4
  store i32 %v6_db0c, i32* @r5, align 4
  store i32 %v9_db0c, i32* @r6, align 4
  store i32 %v12_db0c, i32* @r7, align 4
  store i32 %v15_db0c, i32* @r8, align 4
  store i32 %v18_db0c, i32* @sb, align 4
  store i32 %v21_db0c, i32* @sl, align 4
  store i32 %v24_db0c, i32* @fp, align 4
  ret i32 %v1_dc3c

; uselistorder directives
  uselistorder i32 %v3_dc0c, { 1, 0 }
  uselistorder i32 %v1_dbf8, { 0, 2, 3, 1 }
  uselistorder i32 %v0_dbcc, { 1, 0, 2 }
  uselistorder i32 %v3_dba0, { 1, 0 }
  uselistorder i32 %v1_db8c, { 0, 2, 3, 1 }
  uselistorder i32 %v0_db60, { 1, 0, 2 }
  uselistorder i32 %v2_db3c, { 1, 0, 2 }
  uselistorder i32 %v3_db30, { 1, 0 }
  uselistorder i32 %v1_db20, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder i32 (i8*)* @function_10b3c, { 5, 6, 0, 1, 2, 3, 4, 29, 7, 8, 9, 27, 28, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 25 }
  uselistorder i32 %arg2, { 3, 2, 1, 0, 4 }
}

define i32 @function_dc6c(i32 %arg1) local_unnamed_addr {
dec_label_pc_dc6c:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp296 = call i32 @__decompiler_undefined_function_0()
  %tmp300 = call i32 @__decompiler_undefined_function_0()
  %tmp301 = call i32 @__decompiler_undefined_function_0()
  %tmp302 = call i16 @__decompiler_undefined_function_2()
  %stack_var_-42 = alloca i32, align 4
  %stack_var_-77 = alloca i32, align 4
  %stack_var_-45 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-352 = alloca i32, align 4
  %stack_var_-224 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-1866 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_dc6c = load i32, i32* @r4, align 4
  %v6_dc6c = load i32, i32* @r5, align 4
  %v12_dc6c = load i32, i32* @r7, align 4
  %v18_dc6c = load i32, i32* @sb, align 4
  %v21_dc6c = load i32, i32* @sl, align 4
  %v0_dc78 = call i32 @function_11238()
  store i32 %v0_dc78, i32* %r0.global-to-local, align 4
  %v7_dc7c = icmp eq i32 %v0_dc78, -1
  %. = zext i1 %v7_dc7c to i32
  %tmp335 = icmp slt i32 %v0_dc78, 1
  %storemerge294 = select i1 %tmp335, i32 %., i32 1
  store i32 %storemerge294, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_21664.118 to i32), i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_dc98 = icmp eq i32 %storemerge294, 0
  store i1 %v2_dc98, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_dc78, i32* @global_var_21664.118, align 4
  br i1 %v2_dc98, label %dec_label_pc_dfa0, label %dec_label_pc_dca4

dec_label_pc_dca4:                                ; preds = %dec_label_pc_dc6c
  store i32 %v3_dc6c, i32* %r4.global-to-local, align 4
  store i32 %v6_dc6c, i32* @r5, align 4
  store i32 %v12_dc6c, i32* @r7, align 4
  store i32 %v18_dc6c, i32* @sb, align 4
  store i32 %v21_dc6c, i32* @sl, align 4
  ret i32 %v0_dc78

dec_label_pc_dfa0:                                ; preds = %dec_label_pc_dc6c
  %v0_dfa0 = call i32 @function_10df8()
  store i32 %v0_dfa0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_21644.39 to i32), i32* %r1.global-to-local, align 4
  store i32 %v0_dfa0, i32* @global_var_21644.39, align 4
  %v1_dfac = call i32 @function_d3f4(i32 %v0_dfa0)
  %v0_dfb0 = load i32, i32* @r4, align 4
  store i32 %v0_dfb0, i32* %r0.global-to-local, align 4
  %v1_dfb4 = inttoptr i32 %v0_dfb0 to i32*
  %v2_dfb4 = call i32 @function_111c8(i32* %v1_dfb4)
  store i32 ptrtoint (i32* @global_var_1f610.110 to i32), i32* %r2.global-to-local, align 4
  store i32 288, i32* %r1.global-to-local, align 4
  store i32 %v2_dfb4, i32* @global_var_1f610.110, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  %v2_dfc8 = call i32 @function_12898(i32 256, i32 288)
  store i32 ptrtoint (i32* @global_var_2165c.122 to i32), i32* %r3.global-to-local, align 4
  %v0_dfd0 = load i32, i32* @r4, align 4
  store i32 %v0_dfd0, i32* %stack_var_-52, align 4
  store i32 %v2_dfc8, i32* @global_var_2165c.122, align 4
  store i32 %v0_dfd0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_dfdc

dec_label_pc_dfdc:                                ; preds = %dec_label_pc_dfdc.dec_label_pc_dfdc_crit_edge, %dec_label_pc_dfa0
  %v2_dfe8 = phi i32 [ %v2_dfe8.pre, %dec_label_pc_dfdc.dec_label_pc_dfdc_crit_edge ], [ %v2_dfc8, %dec_label_pc_dfa0 ]
  %v0_dff0 = phi i32 [ %v0_e020, %dec_label_pc_dfdc.dec_label_pc_dfdc_crit_edge ], [ %v0_dfd0, %dec_label_pc_dfa0 ]
  %v3_dfe4 = mul i32 %v0_dff0, 256
  store i32 %v3_dfe4, i32* %ip.global-to-local, align 4
  %v2_dff8 = mul i32 %v0_dff0, 288
  %v1_e000 = add i32 %v0_dff0, 1
  store i32 %v1_e000, i32* %r0.global-to-local, align 4
  %v2_e004 = add i32 %v2_dff8, %v2_dfe8
  store i32 %v2_e004, i32* %r2.global-to-local, align 4
  store i32 %v2_e004, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 -1, i32* @r3, align 4
  %v2_e018 = add i32 %v2_e004, 4
  %v3_e018 = inttoptr i32 %v2_e018 to i32*
  store i32 -1, i32* %v3_e018, align 4
  %v0_e01c = load i32, i32* @r5, align 4
  %v1_e01c = load i32, i32* %r1.global-to-local, align 4
  %v2_e01c = add i32 %v1_e01c, 12
  %v3_e01c = inttoptr i32 %v2_e01c to i32*
  store i32 %v0_e01c, i32* %v3_e01c, align 4
  %v0_e020 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_e020, i32* %stack_var_-52, align 4
  %v7_e024 = icmp sgt i32 %v1_e000, 255
  br i1 %v7_e024, label %dec_label_pc_e028, label %dec_label_pc_dfdc.dec_label_pc_dfdc_crit_edge

dec_label_pc_dfdc.dec_label_pc_dfdc_crit_edge:    ; preds = %dec_label_pc_dfdc
  %v2_dfe8.pre = load i32, i32* @global_var_2165c.122, align 4
  br label %dec_label_pc_dfdc

dec_label_pc_e028:                                ; preds = %dec_label_pc_dfdc
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  %v3_e034 = call i32 @function_11d30(i32 2, i32 3, i32 6)
  store i32 %v3_e034, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_21660.124 to i32), i32* %r2.global-to-local, align 4
  %v2_e03c = icmp eq i32 %v3_e034, -1
  store i1 %v2_e03c, i1* %cpsr_c.global-to-local, align 1
  %v7_e03c = icmp eq i32 %v3_e034, -1
  store i1 %v7_e03c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_e034, i32* %r4.global-to-local, align 4
  store i32 %v3_e034, i32* @global_var_21660.124, align 4
  br i1 %v7_e03c, label %dec_label_pc_f674, label %dec_label_pc_e04c

dec_label_pc_e04c:                                ; preds = %dec_label_pc_e028
  store i32 3, i32* %r1.global-to-local, align 4
  %v0_e050 = load i32, i32* @r5, align 4
  store i32 %v0_e050, i32* %r2.global-to-local, align 4
  %v2_e054 = call i32 @function_1137c(i32 %v3_e034, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_e05c = or i32 %v2_e054, 2048
  store i32 %v1_e05c, i32* %r2.global-to-local, align 4
  %v0_e060 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_e060, i32* %r0.global-to-local, align 4
  %v2_e064 = call i32 @function_1137c(i32 %v0_e060, i32 4)
  %v2_e06c = load i32, i32* @global_var_21660.124, align 4
  store i32 %v2_e06c, i32* %r0.global-to-local, align 4
  store i32 1, i32* %ip.global-to-local, align 4
  %v0_e078 = load i32, i32* @r5, align 4
  store i32 %v0_e078, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v2_e080 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_e080, i32* %r3.global-to-local, align 4
  store i32 1, i32* %stack_var_-52, align 4
  %v5_e090 = call i32 @function_11cec(i32 %v2_e06c, i32 %v0_e078, i32 3, i32 %v2_e080, i32 4)
  store i32 %v5_e090, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e094 = icmp eq i32 %v5_e090, 0
  store i1 %v2_e094, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e094, label %dec_label_pc_e09c, label %dec_label_pc_f668

dec_label_pc_e09c:                                ; preds = %dec_label_pc_e04c, %dec_label_pc_e09c
  %v0_e09c = call i32 @function_d398()
  %v1_e0a8 = urem i32 %v0_e09c, 256
  store i32 %v1_e0a8, i32* %r3.global-to-local, align 4
  %tmp338 = udiv i32 %v0_e09c, 256
  %v3_e0ac = urem i32 %tmp338, 256
  %v4_e0b0 = mul nuw nsw i32 %v1_e0a8, 256
  %v5_e0b0 = or i32 %v4_e0b0, %v3_e0ac
  store i32 %v5_e0b0, i32* %r0.global-to-local, align 4
  %v2_e0b4 = icmp ugt i32 %v5_e0b0, 1023
  store i1 %v2_e0b4, i1* %cpsr_c.global-to-local, align 1
  %v7_e0b4 = icmp eq i32 %v5_e0b0, 1024
  store i1 %v7_e0b4, i1* %cpsr_z.global-to-local, align 1
  %v3_e0bc = icmp ult i32 %v5_e0b0, 1022
  br i1 %v3_e0bc, label %dec_label_pc_e09c, label %dec_label_pc_e0c0

dec_label_pc_e0c0:                                ; preds = %dec_label_pc_e09c
  %v5_e0b8.le = trunc i32 %v0_e09c to i16
  store i32 ptrtoint (i8** @global_var_1f5e0.126 to i32), i32* %r0.global-to-local, align 4
  %v2_e0c4 = load i8, i8* bitcast (i8** @global_var_1f5e0.126 to i8*), align 4
  %v3_e0c4 = zext i8 %v2_e0c4 to i32
  %v1_e0c8 = and i32 %v3_e0c4, 240
  %v1_e0cc = or i32 %v1_e0c8, 5
  store i32 %v1_e0cc, i32* %r3.global-to-local, align 4
  store i32 69, i32* %r2.global-to-local, align 4
  store i32 10240, i32* %r1.global-to-local, align 4
  store i8 69, i8* bitcast (i8** @global_var_1f5e0.126 to i8*), align 4
  store i16 10240, i16* bitcast (i32* @global_var_1f5e2.127 to i16*), align 4
  %v0_e0ec = call i32 @function_d398()
  %v1_e0ec = trunc i32 %v0_e0ec to i16
  %v3_e0f4 = load i8, i8* @global_var_1f600.130, align 1
  store i32 ptrtoint (i16* @global_var_1f5f4.129 to i32), i32* @lr, align 4
  store i32 ptrtoint (i8** @global_var_1f5e0.126 to i32), i32* %ip.global-to-local, align 4
  %tmp = urem i8 %v3_e0f4, 16
  %v1_e100 = zext i8 %tmp to i32
  store i32 6, i32* @r4, align 4
  %v1_e108 = or i32 %v1_e100, 80
  store i32 %v1_e108, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i8 64, i8* bitcast (i32* @global_var_1f5e8.131 to i8*), align 4
  store i16 %v1_e0ec, i16* bitcast (i32* @global_var_1f5e4.132 to i16*), align 4
  %v1_e118 = trunc i32 %v1_e108 to i8
  store i8 %v1_e118, i8* @global_var_1f600.130, align 1
  store i8 6, i8* bitcast (i32* @global_var_1f5e9.133 to i8*), align 4
  %v4_e120 = sext i16 %v5_e0b8.le to i32
  store i32 %v4_e120, i32* %r1.global-to-local, align 4
  store i32 5888, i32* %r0.global-to-local, align 4
  store i16 5888, i16* @global_var_1f5f6.134, align 2
  store i16 %v5_e0b8.le, i16* @global_var_1f5f4.129, align 2
  %v0_e130 = call i32 @function_d398()
  %v1_e130 = trunc i32 %v0_e130 to i16
  %v3_e138 = load i8, i8* @global_var_1f601.135, align 1
  %v4_e138 = zext i8 %v3_e138 to i32
  store i32 ptrtoint (i16* @global_var_1f5f4.129 to i32), i32* %ip.global-to-local, align 4
  %v1_e140 = or i32 %v4_e138, 2
  store i32 %v1_e140, i32* %r3.global-to-local, align 4
  store i16 %v1_e130, i16* bitcast (i32* @global_var_1f602.136 to i16*), align 4
  store i32 ptrtoint (i32* @global_var_16768.138 to i32), i32* %r1.global-to-local, align 4
  %v1_e14c = trunc i32 %v1_e140 to i8
  store i8 %v1_e14c, i8* @global_var_1f601.135, align 1
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v3_e158 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint (i32* @global_var_16768.138 to i32), i32 4)
  store i32 ptrtoint (i32* @global_var_166e4.142 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16768.138 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v3_e168 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e4.142 to i32), i32 ptrtoint (i32* @global_var_16768.138 to i32), i32 3)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16768.138 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v3_e178 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_16768.138 to i32), i32 5)
  store i32 ptrtoint ([4 x i8]* @global_var_166f0.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16768.138 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v4_e188 = call i32 @function_db0c(i32 ptrtoint ([4 x i8]* @global_var_166f0.146 to i32), i32 ptrtoint (i32* @global_var_16768.138 to i32), i32 3)
  store i32 ptrtoint (i32* @global_var_166f4.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16768.138 to i32), i32* %r1.global-to-local, align 4
  %v0_e194 = load i32, i32* @r4, align 4
  store i32 %v0_e194, i32* %r2.global-to-local, align 4
  %v3_e198 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166f4.148 to i32), i32 ptrtoint (i32* @global_var_16768.138 to i32), i32 %v0_e194)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_166fc.150 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v3_e1a8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint (i32* @global_var_166fc.150 to i32), i32 4)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16700.152 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v3_e1b8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint (i32* @global_var_16700.152 to i32), i32 10)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16708.154 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v3_e1c8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint (i32* @global_var_16708.154 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_e1d8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r1.global-to-local, align 4
  %v3_e1e8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_16710.156 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16768.138 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v3_e1f8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16710.156 to i32), i32 ptrtoint (i32* @global_var_16768.138 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_16718.158 to i32), i32* %r1.global-to-local, align 4
  %v0_e204 = load i32, i32* @r4, align 4
  store i32 %v0_e204, i32* %r2.global-to-local, align 4
  %v4_e208 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint ([7 x i8]* @global_var_16718.158 to i32), i32 %v0_e204)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16720.160 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v3_e218 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint (i32* @global_var_16720.160 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_16728.162 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_e228 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint ([7 x i8]* @global_var_16728.162 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_16730.164 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_e238 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint ([6 x i8]* @global_var_16730.164 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16e10.166 to i32), i32* %r1.global-to-local, align 4
  %v0_e244 = load i32, i32* @r4, align 4
  store i32 %v0_e244, i32* %r2.global-to-local, align 4
  %v3_e248 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint (i32* @global_var_16e10.166 to i32), i32 %v0_e244)
  store i32 ptrtoint ([8 x i8]* @global_var_16738.168 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16768.138 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_e258 = call i32 @function_db0c(i32 ptrtoint ([8 x i8]* @global_var_16738.168 to i32), i32 ptrtoint (i32* @global_var_16768.138 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_16738.168 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_16740.170 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_e268 = call i32 @function_db0c(i32 ptrtoint ([8 x i8]* @global_var_16738.168 to i32), i32 ptrtoint ([8 x i8]* @global_var_16740.170 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_16738.168 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_16738.168 to i32), i32* %r1.global-to-local, align 4
  %v5_e278 = call i32 @function_db0c(i32 ptrtoint ([8 x i8]* @global_var_16738.168 to i32), i32 ptrtoint ([8 x i8]* @global_var_16738.168 to i32), i32 5)
  store i32 ptrtoint ([8 x i8]* @global_var_16738.168 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_e288 = call i32 @function_db0c(i32 ptrtoint ([8 x i8]* @global_var_16738.168 to i32), i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_16738.168 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_16c88.172 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_e298 = call i32 @function_db0c(i32 ptrtoint ([8 x i8]* @global_var_16738.168 to i32), i32 ptrtoint ([4 x i8]* @global_var_16c88.172 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_16738.168 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_16d68.174 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_e2a8 = call i32 @function_db0c(i32 ptrtoint ([8 x i8]* @global_var_16738.168 to i32), i32 ptrtoint ([5 x i8]* @global_var_16d68.174 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_16738.168 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_16748.176 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_e2b8 = call i32 @function_db0c(i32 ptrtoint ([8 x i8]* @global_var_16738.168 to i32), i32 ptrtoint ([6 x i8]* @global_var_16748.176 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_16738.168 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_16728.162 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_e2c8 = call i32 @function_db0c(i32 ptrtoint ([8 x i8]* @global_var_16738.168 to i32), i32 ptrtoint ([7 x i8]* @global_var_16728.162 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_16738.168 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16750.178 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_e2d8 = call i32 @function_db0c(i32 ptrtoint ([8 x i8]* @global_var_16738.168 to i32), i32 ptrtoint (i32* @global_var_16750.178 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_16738.168 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16758.180 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_e2e8 = call i32 @function_db0c(i32 ptrtoint ([8 x i8]* @global_var_16738.168 to i32), i32 ptrtoint (i32* @global_var_16758.180 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_16738.168 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16760.182 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_e2f8 = call i32 @function_db0c(i32 ptrtoint ([8 x i8]* @global_var_16738.168 to i32), i32 ptrtoint (i32* @global_var_16760.182 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16760.182 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_e308 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint (i32* @global_var_16760.182 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16b84.184 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_e318 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint (i32* @global_var_16b84.184 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16770.186 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_e328 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint (i32* @global_var_16770.186 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_16778.188 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_e338 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint ([3 x i8]* @global_var_16778.188 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_16780.190 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_e348 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint ([4 x i8]* @global_var_16780.190 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_16788.192 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_e358 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint ([5 x i8]* @global_var_16788.192 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1676c.194 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_e368 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint ([6 x i8]* @global_var_1676c.194 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_16774.196 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_e378 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint ([7 x i8]* @global_var_16774.196 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1677c.198 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_e388 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint ([8 x i8]* @global_var_1677c.198 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_16784.200 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_e398 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint ([9 x i8]* @global_var_16784.200 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_16790.202 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_e3a8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint ([8 x i8]* @global_var_16790.202 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_16798.204 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_e3b8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint ([9 x i8]* @global_var_16798.204 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_167a4.206 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v3_e3c8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_167a4.206 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_16738.168 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_e3d8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint ([8 x i8]* @global_var_16738.168 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16760.182 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_e3e8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_16760.182 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16b38.208 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v3_e3f8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_16b38.208 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_167ac.210 to i32), i32* %r1.global-to-local, align 4
  %v0_e404 = load i32, i32* @r4, align 4
  store i32 %v0_e404, i32* %r2.global-to-local, align 4
  %v4_e408 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint ([7 x i8]* @global_var_167ac.210 to i32), i32 %v0_e404)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_167b4.212 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_e418 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint ([8 x i8]* @global_var_167b4.212 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_167bc.214 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_e428 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint ([9 x i8]* @global_var_167bc.214 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_167c8.216 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_e438 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint ([6 x i8]* @global_var_167c8.216 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_167d0.218 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_e448 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint ([6 x i8]* @global_var_167d0.218 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_167d8.220 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_e458 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint ([8 x i8]* @global_var_167d8.220 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r1.global-to-local, align 4
  %v3_e468 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 4)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_16748.176 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_e478 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint ([6 x i8]* @global_var_16748.176 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_16750.178 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16768.138 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v3_e488 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16750.178 to i32), i32 ptrtoint (i32* @global_var_16768.138 to i32), i32 4)
  store i32 ptrtoint (i32* @global_var_16750.178 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16750.178 to i32), i32* %r1.global-to-local, align 4
  %v3_e498 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16750.178 to i32), i32 ptrtoint (i32* @global_var_16750.178 to i32), i32 4)
  store i32 ptrtoint (i32* @global_var_16750.178 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_16728.162 to i32), i32* %r1.global-to-local, align 4
  %v0_e4a4 = load i32, i32* @r4, align 4
  store i32 %v0_e4a4, i32* %r2.global-to-local, align 4
  %v4_e4a8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16750.178 to i32), i32 ptrtoint ([7 x i8]* @global_var_16728.162 to i32), i32 %v0_e4a4)
  store i32 ptrtoint (i32* @global_var_16750.178 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_16d68.174 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_e4b8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16750.178 to i32), i32 ptrtoint ([5 x i8]* @global_var_16d68.174 to i32), i32 4)
  store i32 ptrtoint (i32* @global_var_16750.178 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16758.180 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v3_e4c8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16750.178 to i32), i32 ptrtoint (i32* @global_var_16758.180 to i32), i32 4)
  store i32 ptrtoint (i32* @global_var_16750.178 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16760.182 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_e4d8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16750.178 to i32), i32 ptrtoint (i32* @global_var_16760.182 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_16750.178 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16e10.166 to i32), i32* %r1.global-to-local, align 4
  %v0_e4e4 = load i32, i32* @r4, align 4
  store i32 %v0_e4e4, i32* %r2.global-to-local, align 4
  %v3_e4e8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16750.178 to i32), i32 ptrtoint (i32* @global_var_16e10.166 to i32), i32 %v0_e4e4)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16758.180 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v3_e4f8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint (i32* @global_var_16758.180 to i32), i32 3)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_167e0.222 to i32), i32* %r1.global-to-local, align 4
  %v0_e504 = load i32, i32* @r4, align 4
  store i32 %v0_e504, i32* %r2.global-to-local, align 4
  %v3_e508 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_167e0.222 to i32), i32 %v0_e504)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_167e8.224 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v3_e518 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_167e8.224 to i32), i32 9)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_167c0.226 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_e528 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint ([5 x i8]* @global_var_167c0.226 to i32), i32 4)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_167c0.226 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_e538 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint ([5 x i8]* @global_var_167c0.226 to i32), i32 2)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_167f4.228 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_e548 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_167f4.228 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16760.182 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_e558 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint (i32* @global_var_16760.182 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_16d68.174 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_e568 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint ([5 x i8]* @global_var_16d68.174 to i32), i32 4)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16800.230 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v3_e578 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint (i32* @global_var_16800.230 to i32), i32 1)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_16808.232 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_e588 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint ([9 x i8]* @global_var_16808.232 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16814.234 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v3_e598 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint (i32* @global_var_16814.234 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_1681c.236 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1681c.236 to i32), i32* %r1.global-to-local, align 4
  %v3_e5a8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_1681c.236 to i32), i32 ptrtoint (i32* @global_var_1681c.236 to i32), i32 1)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1681c.236 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v3_e5b8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_1681c.236 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_16824.238 to i32), i32* %r0.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16824.238 to i32), i32* %r1.global-to-local, align 4
  %v3_e5c8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16824.238 to i32), i32 ptrtoint (i32* @global_var_16824.238 to i32), i32 10)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16830.240 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v3_e5d8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint (i32* @global_var_16830.240 to i32), i32 4)
  store i32 ptrtoint (i32* @global_var_16838.242 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16768.138 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v3_e5e8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16838.242 to i32), i32 ptrtoint (i32* @global_var_16768.138 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_16838.242 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16838.242 to i32), i32* %r1.global-to-local, align 4
  %v3_e5f8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16838.242 to i32), i32 ptrtoint (i32* @global_var_16838.242 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_16838.242 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_16748.176 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_e608 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16838.242 to i32), i32 ptrtoint ([6 x i8]* @global_var_16748.176 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_16840.244 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16840.244 to i32), i32* %r1.global-to-local, align 4
  %v3_e618 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16840.244 to i32), i32 ptrtoint (i32* @global_var_16840.244 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_16848.246 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16760.182 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v3_e628 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16848.246 to i32), i32 ptrtoint (i32* @global_var_16760.182 to i32), i32 1)
  store i32 ptrtoint (i32* @global_var_16850.248 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16858.250 to i32), i32* %r1.global-to-local, align 4
  %v0_e634 = load i32, i32* @r4, align 4
  store i32 %v0_e634, i32* %r2.global-to-local, align 4
  %v3_e638 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16850.248 to i32), i32 ptrtoint (i32* @global_var_16858.250 to i32), i32 %v0_e634)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16860.252 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v3_e648 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_16860.252 to i32), i32 10)
  store i32 ptrtoint (i32* @global_var_1686c.254 to i32), i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1686c.254 to i32), i32* %r1.global-to-local, align 4
  %v3_e658 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_1686c.254 to i32), i32 ptrtoint (i32* @global_var_1686c.254 to i32), i32 13)
  store i32 ptrtoint (i32* @global_var_1686c.254 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_16d68.174 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v4_e668 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_1686c.254 to i32), i32 ptrtoint ([5 x i8]* @global_var_16d68.174 to i32), i32 13)
  store i32 ptrtoint (i32* @global_var_1686c.254 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1687c.256 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v3_e678 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_1686c.254 to i32), i32 ptrtoint (i32* @global_var_1687c.256 to i32), i32 13)
  store i32 ptrtoint (i32* @global_var_16e18.258 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16e18.258 to i32), i32* %r1.global-to-local, align 4
  %v3_e688 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16e18.258 to i32), i32 ptrtoint (i32* @global_var_16e18.258 to i32), i32 4)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16888.260 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_e698 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint (i32* @global_var_16888.260 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16e18.258 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v3_e6a8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint (i32* @global_var_16e18.258 to i32), i32 4)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16894.262 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v3_e6b8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint (i32* @global_var_16894.262 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1689c.264 to i32), i32* %r1.global-to-local, align 4
  %v0_e6c4 = load i32, i32* @r4, align 4
  store i32 %v0_e6c4, i32* %r2.global-to-local, align 4
  %v3_e6c8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint (i32* @global_var_1689c.264 to i32), i32 %v0_e6c4)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16e20.266 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v3_e6d8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint (i32* @global_var_16e20.266 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_168a4.268 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v3_e6e8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint (i32* @global_var_168a4.268 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1687c.256 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_e6f8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint (i32* @global_var_1687c.256 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_168ac.270 to i32), i32* %r1.global-to-local, align 4
  %v0_e704 = load i32, i32* @r4, align 4
  store i32 %v0_e704, i32* %r2.global-to-local, align 4
  %v4_e708 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint ([7 x i8]* @global_var_168ac.270 to i32), i32 %v0_e704)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_168b4.272 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_e718 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint (i32* @global_var_168b4.272 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_168c0.274 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v3_e728 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint (i32* @global_var_168c0.274 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_168c8.276 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v3_e738 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint (i32* @global_var_168c8.276 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_168d0.278 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v3_e748 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint (i32* @global_var_168d0.278 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_168d8.280 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v3_e758 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint (i32* @global_var_168d8.280 to i32), i32 9)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_168e4.282 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_e768 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint (i32* @global_var_168e4.282 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_168f0.284 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_e778 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint ([9 x i8]* @global_var_168f0.284 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_168fc.286 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v3_e788 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint (i32* @global_var_168fc.286 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16904.288 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v3_e798 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint (i32* @global_var_16904.288 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1690c.290 to i32), i32* %r1.global-to-local, align 4
  %v0_e7a4 = load i32, i32* @r4, align 4
  store i32 %v0_e7a4, i32* %r2.global-to-local, align 4
  %v3_e7a8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint (i32* @global_var_1690c.290 to i32), i32 %v0_e7a4)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16914.292 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v3_e7b8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint (i32* @global_var_16914.292 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1691c.294 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_e7c8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint (i32* @global_var_1691c.294 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16928.296 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v3_e7d8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint (i32* @global_var_16928.296 to i32), i32 10)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16934.298 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v3_e7e8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint (i32* @global_var_16934.298 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1693c.300 to i32), i32* %r1.global-to-local, align 4
  %v0_e7f4 = load i32, i32* @r4, align 4
  store i32 %v0_e7f4, i32* %r2.global-to-local, align 4
  %v3_e7f8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint (i32* @global_var_1693c.300 to i32), i32 %v0_e7f4)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16944.302 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v3_e808 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint (i32* @global_var_16944.302 to i32), i32 4)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([10 x i8]* @global_var_1694c.304 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_e818 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint ([10 x i8]* @global_var_1694c.304 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_167e0.222 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v3_e828 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint (i32* @global_var_167e0.222 to i32), i32 1)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16750.178 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v3_e838 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint (i32* @global_var_16750.178 to i32), i32 1)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16958.306 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v3_e848 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint (i32* @global_var_16958.306 to i32), i32 9)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_16964.308 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_e858 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint ([6 x i8]* @global_var_16964.308 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_16d68.174 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_e868 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint ([5 x i8]* @global_var_16d68.174 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_16748.176 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_e878 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint ([6 x i8]* @global_var_16748.176 to i32), i32 1)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_16730.164 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_e888 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint ([6 x i8]* @global_var_16730.164 to i32), i32 1)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_16728.162 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_e898 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint ([7 x i8]* @global_var_16728.162 to i32), i32 1)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1696c.310 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v3_e8a8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_1696c.310 to i32), i32 1)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1697c.312 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_e8b8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_1697c.312 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16758.180 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v3_e8c8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_16758.180 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_16988.314 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_e8d8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint ([5 x i8]* @global_var_16988.314 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16990.316 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_e8e8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_16990.316 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1699c.318 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v3_e8f8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_1699c.318 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16e28.320 to i32), i32* %r1.global-to-local, align 4
  %v0_e904 = load i32, i32* @r4, align 4
  store i32 %v0_e904, i32* %r2.global-to-local, align 4
  %v3_e908 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_16e28.320 to i32), i32 %v0_e904)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_169a4.322 to i32), i32* %r1.global-to-local, align 4
  %v0_e914 = load i32, i32* @r4, align 4
  store i32 %v0_e914, i32* %r2.global-to-local, align 4
  %v3_e918 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_169a4.322 to i32), i32 %v0_e914)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_169ac.324 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v3_e928 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_169ac.324 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16b84.184 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v3_e938 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_16b84.184 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_169b4.326 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v3_e948 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_169b4.326 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_169bc.328 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_e958 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint ([5 x i8]* @global_var_169bc.328 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_16c88.172 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_e968 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint ([4 x i8]* @global_var_16c88.172 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1679c.330 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_e978 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint ([5 x i8]* @global_var_1679c.330 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_169c4.332 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_e988 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint ([6 x i8]* @global_var_169c4.332 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_169cc.334 to i32), i32* %r1.global-to-local, align 4
  %v0_e994 = load i32, i32* @r4, align 4
  store i32 %v0_e994, i32* %r2.global-to-local, align 4
  %v4_e998 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint ([7 x i8]* @global_var_169cc.334 to i32), i32 %v0_e994)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_169d4.336 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_e9a8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_169d4.336 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16e30.338 to i32), i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v3_e9b8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_16e30.338 to i32), i32 12)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_169e0.340 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_e9c8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint ([9 x i8]* @global_var_169e0.340 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_169ec.342 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_e9d8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_169ec.342 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_169f8.344 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_e9e8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint ([4 x i8]* @global_var_169f8.344 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_169fc.346 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v3_e9f8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_169fc.346 to i32), i32 9)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16a08.348 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v3_ea08 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_16a08.348 to i32), i32 10)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16a14.350 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v3_ea18 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_16a14.350 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16a1c.352 to i32), i32* %r1.global-to-local, align 4
  %v0_ea24 = load i32, i32* @r4, align 4
  store i32 %v0_ea24, i32* %r2.global-to-local, align 4
  %v3_ea28 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_16a1c.352 to i32), i32 %v0_ea24)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16a24.354 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v3_ea38 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_16a24.354 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16a28.356 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_ea48 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_16a28.356 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16e40.358 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v3_ea58 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_16e40.358 to i32), i32 9)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16e4c.360 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v3_ea68 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_16e4c.360 to i32), i32 9)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1687c.256 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_ea78 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_1687c.256 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16a34.362 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v3_ea88 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_16a34.362 to i32), i32 10)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16a40.364 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v3_ea98 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_16a40.364 to i32), i32 9)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16a4c.366 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_eaa8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_16a4c.366 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16a58.368 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v3_eab8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_16a58.368 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16a60.370 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v3_eac8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_16a60.370 to i32), i32 10)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16a6c.372 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v3_ead8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_16a6c.372 to i32), i32 9)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16a78.374 to i32), i32* %r1.global-to-local, align 4
  %v0_eae4 = load i32, i32* @r4, align 4
  store i32 %v0_eae4, i32* %r2.global-to-local, align 4
  %v3_eae8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_16a78.374 to i32), i32 %v0_eae4)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16a80.376 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_eaf8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_16a80.376 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16a8c.378 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_eb08 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_16a8c.378 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16a98.380 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v3_eb18 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_16a98.380 to i32), i32 9)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16aa4.382 to i32), i32* %r1.global-to-local, align 4
  %v0_eb24 = load i32, i32* @r4, align 4
  store i32 %v0_eb24, i32* %r2.global-to-local, align 4
  %v3_eb28 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_16aa4.382 to i32), i32 %v0_eb24)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16aac.384 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_eb38 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_16aac.384 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16ab8.386 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v3_eb48 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_16ab8.386 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16abc.388 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_eb58 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_16abc.388 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16ac8.390 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_eb68 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_16ac8.390 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16ad4.392 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v3_eb78 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_16ad4.392 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16ad8.394 to i32), i32* %r1.global-to-local, align 4
  %v0_eb84 = load i32, i32* @r4, align 4
  store i32 %v0_eb84, i32* %r2.global-to-local, align 4
  %v3_eb88 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_16ad8.394 to i32), i32 %v0_eb84)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16ae0.396 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v3_eb98 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_16ae0.396 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v3_eba8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16ae8.398 to i32), i32* %r1.global-to-local, align 4
  %v0_ebb4 = load i32, i32* @r4, align 4
  store i32 %v0_ebb4, i32* %r2.global-to-local, align 4
  %v3_ebb8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_16ae8.398 to i32), i32 %v0_ebb4)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16af0.400 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v3_ebc8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_16af0.400 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_16af8.402 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16768.138 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v3_ebd8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16af8.402 to i32), i32 ptrtoint (i32* @global_var_16768.138 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_16af8.402 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16af8.402 to i32), i32* %r1.global-to-local, align 4
  %v3_ebe8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16af8.402 to i32), i32 ptrtoint (i32* @global_var_16af8.402 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_16af8.402 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v3_ebf8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16af8.402 to i32), i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_16af8.402 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16b00.404 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_ec08 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16af8.402 to i32), i32 ptrtoint (i32* @global_var_16b00.404 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_16af8.402 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_167f4.228 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_ec18 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16af8.402 to i32), i32 ptrtoint (i32* @global_var_167f4.228 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16b0c.406 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v3_ec28 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_16b0c.406 to i32), i32 9)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16b18.408 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_ec38 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_16b18.408 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16b24.410 to i32), i32* %r1.global-to-local, align 4
  %v0_ec44 = load i32, i32* @r4, align 4
  store i32 %v0_ec44, i32* %r2.global-to-local, align 4
  %v3_ec48 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_16b24.410 to i32), i32 %v0_ec44)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16b2c.412 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v3_ec58 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_16b2c.412 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16b34.414 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_ec68 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_16b34.414 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16b3c.416 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v3_ec78 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_16b3c.416 to i32), i32 9)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16b48.418 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v3_ec88 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_16b48.418 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16b50.420 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_ec98 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_16b50.420 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16b58.422 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v3_eca8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_16b58.422 to i32), i32 9)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16b64.424 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v3_ecb8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_16b64.424 to i32), i32 9)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16b70.426 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_ecc8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_16b70.426 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16b7c.428 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v3_ecd8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_16b7c.428 to i32), i32 9)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16b88.430 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_ece8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_16b88.430 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16b94.432 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v3_ecf8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_16b94.432 to i32), i32 9)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16ba0.434 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v3_ed08 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_16ba0.434 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_16ba4.436 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16ba4.436 to i32), i32* %r1.global-to-local, align 4
  %v3_ed18 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16ba4.436 to i32), i32 ptrtoint (i32* @global_var_16ba4.436 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_16bac.438 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16768.138 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v3_ed28 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16bac.438 to i32), i32 ptrtoint (i32* @global_var_16768.138 to i32), i32 13)
  store i32 ptrtoint (i32* @global_var_16bac.438 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_16bbc.440 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v4_ed38 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16bac.438 to i32), i32 ptrtoint ([7 x i8]* @global_var_16bbc.440 to i32), i32 13)
  store i32 ptrtoint (i32* @global_var_16bac.438 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1687c.256 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v3_ed48 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16bac.438 to i32), i32 ptrtoint (i32* @global_var_1687c.256 to i32), i32 13)
  store i32 ptrtoint (i32* @global_var_16bac.438 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16bc4.442 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v3_ed58 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16bac.438 to i32), i32 ptrtoint (i32* @global_var_16bc4.442 to i32), i32 13)
  store i32 ptrtoint (i32* @global_var_16bac.438 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16760.182 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v3_ed68 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16bac.438 to i32), i32 ptrtoint (i32* @global_var_16760.182 to i32), i32 13)
  store i32 ptrtoint (i32* @global_var_16bac.438 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_167f4.228 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v3_ed78 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16bac.438 to i32), i32 ptrtoint (i32* @global_var_167f4.228 to i32), i32 13)
  store i32 ptrtoint (i32* @global_var_16bac.438 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16bcc.444 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v3_ed88 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16bac.438 to i32), i32 ptrtoint (i32* @global_var_16bcc.444 to i32), i32 13)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1686c.254 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v3_ed98 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_1686c.254 to i32), i32 13)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16bd4.446 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v3_eda8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_16bd4.446 to i32), i32 10)
  store i32 ptrtoint (i32* @global_var_16e58.448 to i32), i32* %r0.global-to-local, align 4
  %v0_edb0 = load i32, i32* @r4, align 4
  store i32 %v0_edb0, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16e58.448 to i32), i32* %r1.global-to-local, align 4
  %v3_edb8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16e58.448 to i32), i32 ptrtoint (i32* @global_var_16e58.448 to i32), i32 %v0_edb0)
  store i32 ptrtoint (i32* @global_var_16be0.450 to i32), i32* %r0.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16be0.450 to i32), i32* %r1.global-to-local, align 4
  %v3_edc8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16be0.450 to i32), i32 ptrtoint (i32* @global_var_16be0.450 to i32), i32 3)
  store i32 ptrtoint (i32* @global_var_16be4.452 to i32), i32* %r0.global-to-local, align 4
  %v0_edd0 = load i32, i32* @r4, align 4
  store i32 %v0_edd0, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16be4.452 to i32), i32* %r1.global-to-local, align 4
  %v3_edd8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16be4.452 to i32), i32 ptrtoint (i32* @global_var_16be4.452 to i32), i32 %v0_edd0)
  store i32 ptrtoint (i32* @global_var_16914.292 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16914.292 to i32), i32* %r1.global-to-local, align 4
  %v3_ede8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16914.292 to i32), i32 ptrtoint (i32* @global_var_16914.292 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_16bec.454 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16bec.454 to i32), i32* %r1.global-to-local, align 4
  %v3_edf8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16bec.454 to i32), i32 ptrtoint (i32* @global_var_16bec.454 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_16bf4.456 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16bf4.456 to i32), i32* %r1.global-to-local, align 4
  %v3_ee08 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16bf4.456 to i32), i32 ptrtoint (i32* @global_var_16bf4.456 to i32), i32 4)
  store i32 ptrtoint (i32* @global_var_16bfc.458 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16bfc.458 to i32), i32* %r1.global-to-local, align 4
  %v3_ee18 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16bfc.458 to i32), i32 ptrtoint (i32* @global_var_16bfc.458 to i32), i32 4)
  store i32 ptrtoint (i32* @global_var_16c04.460 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16c04.460 to i32), i32* %r1.global-to-local, align 4
  %v3_ee28 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16c04.460 to i32), i32 ptrtoint (i32* @global_var_16c04.460 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_16c0c.462 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16c14.464 to i32), i32* %r1.global-to-local, align 4
  %v0_ee34 = load i32, i32* @r4, align 4
  store i32 %v0_ee34, i32* %r2.global-to-local, align 4
  %v3_ee38 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16c0c.462 to i32), i32 ptrtoint (i32* @global_var_16c14.464 to i32), i32 %v0_ee34)
  store i32 ptrtoint (i32* @global_var_16c1c.466 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16c20.468 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v3_ee48 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16c1c.466 to i32), i32 ptrtoint (i32* @global_var_16c20.468 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_16c88.172 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_ee58 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint ([4 x i8]* @global_var_16c88.172 to i32), i32 1)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_16c28.470 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_ee68 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint ([8 x i8]* @global_var_16c28.470 to i32), i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_167c0.226 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_167c0.226 to i32), i32* %r1.global-to-local, align 4
  %v5_ee78 = call i32 @function_db0c(i32 ptrtoint ([5 x i8]* @global_var_167c0.226 to i32), i32 ptrtoint ([5 x i8]* @global_var_167c0.226 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_16d68.174 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_16d68.174 to i32), i32* %r1.global-to-local, align 4
  %v5_ee88 = call i32 @function_db0c(i32 ptrtoint ([5 x i8]* @global_var_16d68.174 to i32), i32 ptrtoint ([5 x i8]* @global_var_16d68.174 to i32), i32 4)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16c30.472 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v3_ee98 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint (i32* @global_var_16c30.472 to i32), i32 10)
  store i32 ptrtoint (i32* @global_var_16c3c.474 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16768.138 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v3_eea8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16c3c.474 to i32), i32 ptrtoint (i32* @global_var_16768.138 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_16c3c.474 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v3_eeb8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16c3c.474 to i32), i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_16c3c.474 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16c3c.474 to i32), i32* %r1.global-to-local, align 4
  %v3_eec8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16c3c.474 to i32), i32 ptrtoint (i32* @global_var_16c3c.474 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_16c3c.474 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16c44.476 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v3_eed8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16c3c.474 to i32), i32 ptrtoint (i32* @global_var_16c44.476 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_16c4c.478 to i32), i32* %r0.global-to-local, align 4
  %v0_eee0 = load i32, i32* @r4, align 4
  store i32 %v0_eee0, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16c4c.478 to i32), i32* %r1.global-to-local, align 4
  %v3_eee8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16c4c.478 to i32), i32 ptrtoint (i32* @global_var_16c4c.478 to i32), i32 %v0_eee0)
  store i32 ptrtoint (i32* @global_var_167e0.222 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16760.182 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_eef8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_167e0.222 to i32), i32 ptrtoint (i32* @global_var_16760.182 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_167e0.222 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16c54.480 to i32), i32* %r1.global-to-local, align 4
  %v0_ef04 = load i32, i32* @r4, align 4
  store i32 %v0_ef04, i32* %r2.global-to-local, align 4
  %v3_ef08 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_167e0.222 to i32), i32 ptrtoint (i32* @global_var_16c54.480 to i32), i32 %v0_ef04)
  store i32 ptrtoint (i32* @global_var_16c58.482 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16760.182 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_ef18 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16c58.482 to i32), i32 ptrtoint (i32* @global_var_16760.182 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_16c58.482 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16c58.482 to i32), i32* %r1.global-to-local, align 4
  %v3_ef28 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16c58.482 to i32), i32 ptrtoint (i32* @global_var_16c58.482 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_16c64.484 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_ef38 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint ([11 x i8]* @global_var_16c64.484 to i32), i32 10)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16c70.486 to i32), i32* %r1.global-to-local, align 4
  %v0_ef44 = load i32, i32* @r4, align 4
  store i32 %v0_ef44, i32* %r2.global-to-local, align 4
  %v3_ef48 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint (i32* @global_var_16c70.486 to i32), i32 %v0_ef44)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16c78.488 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_ef58 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint (i32* @global_var_16c78.488 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16c84.490 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v3_ef68 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint (i32* @global_var_16c84.490 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16c8c.492 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_ef78 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint (i32* @global_var_16c8c.492 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_16c98.494 to i32), i32* %r1.global-to-local, align 4
  %v0_ef84 = load i32, i32* @r4, align 4
  store i32 %v0_ef84, i32* %r2.global-to-local, align 4
  %v4_ef88 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint ([7 x i8]* @global_var_16c98.494 to i32), i32 %v0_ef84)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_16ca0.496 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_ef98 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint ([8 x i8]* @global_var_16ca0.496 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16ca8.499 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v3_efa8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint (i32* @global_var_16ca8.499 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16e60.501 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_efb8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint (i32* @global_var_16e60.501 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_16cb0.503 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_efc8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint ([9 x i8]* @global_var_16cb0.503 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16e6c.505 to i32), i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v3_efd8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint (i32* @global_var_16e6c.505 to i32), i32 12)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_16cbc.508 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_efe8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint ([6 x i8]* @global_var_16cbc.508 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_16cbc.508 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_16cbc.508 to i32), i32* %r1.global-to-local, align 4
  %v5_eff8 = call i32 @function_db0c(i32 ptrtoint ([6 x i8]* @global_var_16cbc.508 to i32), i32 ptrtoint ([6 x i8]* @global_var_16cbc.508 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_16af0.400 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16af0.400 to i32), i32* %r1.global-to-local, align 4
  %v3_f008 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16af0.400 to i32), i32 ptrtoint (i32* @global_var_16af0.400 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_16cc4.511 to i32), i32* %r0.global-to-local, align 4
  %v0_f010 = load i32, i32* @r4, align 4
  store i32 %v0_f010, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16cc4.511 to i32), i32* %r1.global-to-local, align 4
  %v3_f018 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16cc4.511 to i32), i32 ptrtoint (i32* @global_var_16cc4.511 to i32), i32 %v0_f010)
  store i32 ptrtoint (i32* @global_var_16838.242 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_16728.162 to i32), i32* %r1.global-to-local, align 4
  %v0_f024 = load i32, i32* @r4, align 4
  store i32 %v0_f024, i32* %r2.global-to-local, align 4
  %v4_f028 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16838.242 to i32), i32 ptrtoint ([7 x i8]* @global_var_16728.162 to i32), i32 %v0_f024)
  store i32 ptrtoint (i32* @global_var_16ccc.515 to i32), i32* %r0.global-to-local, align 4
  %v0_f030 = load i32, i32* @r4, align 4
  store i32 %v0_f030, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16ccc.515 to i32), i32* %r1.global-to-local, align 4
  %v3_f038 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16ccc.515 to i32), i32 ptrtoint (i32* @global_var_16ccc.515 to i32), i32 %v0_f030)
  store i32 ptrtoint (i32* @global_var_16cd4.517 to i32), i32* %r0.global-to-local, align 4
  %v0_f040 = load i32, i32* @r4, align 4
  store i32 %v0_f040, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16cd4.517 to i32), i32* %r1.global-to-local, align 4
  %v3_f048 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16cd4.517 to i32), i32 ptrtoint (i32* @global_var_16cd4.517 to i32), i32 %v0_f040)
  store i32 ptrtoint (i32* @global_var_16cdc.519 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_16ce4.521 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_f058 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16cdc.519 to i32), i32 ptrtoint ([9 x i8]* @global_var_16ce4.521 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_16cf0.523 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16cf8.525 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v3_f068 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16cf0.523 to i32), i32 ptrtoint (i32* @global_var_16cf8.525 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_16d00.527 to i32), i32* %r0.global-to-local, align 4
  %v0_f070 = load i32, i32* @r4, align 4
  store i32 %v0_f070, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16d00.527 to i32), i32* %r1.global-to-local, align 4
  %v3_f078 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16d00.527 to i32), i32 ptrtoint (i32* @global_var_16d00.527 to i32), i32 %v0_f070)
  store i32 ptrtoint (i32* @global_var_16d08.529 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16d08.529 to i32), i32* %r1.global-to-local, align 4
  %v3_f088 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16d08.529 to i32), i32 ptrtoint (i32* @global_var_16d08.529 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_16d08.529 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_16d10.531 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_f098 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16d08.529 to i32), i32 ptrtoint ([8 x i8]* @global_var_16d10.531 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_16d18.533 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_167f4.228 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_f0a8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16d18.533 to i32), i32 ptrtoint (i32* @global_var_167f4.228 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_16b2c.412 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16768.138 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v3_f0b8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16b2c.412 to i32), i32 ptrtoint (i32* @global_var_16768.138 to i32), i32 4)
  store i32 ptrtoint (i32* @global_var_16b2c.412 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16b2c.412 to i32), i32* %r1.global-to-local, align 4
  %v3_f0c8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16b2c.412 to i32), i32 ptrtoint (i32* @global_var_16b2c.412 to i32), i32 4)
  store i32 ptrtoint (i32* @global_var_16d1c.538 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16d1c.538 to i32), i32* %r1.global-to-local, align 4
  %v3_f0d8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16d1c.538 to i32), i32 ptrtoint (i32* @global_var_16d1c.538 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_16d24.540 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_f0e8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16d24.540 to i32), i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_16d24.540 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_16d2c.542 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_f0f8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16d24.540 to i32), i32 ptrtoint ([8 x i8]* @global_var_16d2c.542 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_16d34.544 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16d34.544 to i32), i32* %r1.global-to-local, align 4
  %v3_f108 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16d34.544 to i32), i32 ptrtoint (i32* @global_var_16d34.544 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_16d3c.546 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16d48.548 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v3_f118 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16d3c.546 to i32), i32 ptrtoint (i32* @global_var_16d48.548 to i32), i32 9)
  store i32 ptrtoint (i32* @global_var_16d3c.546 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16760.182 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_f128 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16d3c.546 to i32), i32 ptrtoint (i32* @global_var_16760.182 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_16e7c.551 to i32), i32* %r0.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16e7c.551 to i32), i32* %r1.global-to-local, align 4
  %v3_f138 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16e7c.551 to i32), i32 ptrtoint (i32* @global_var_16e7c.551 to i32), i32 11)
  store i32 ptrtoint (i32* @global_var_16d54.553 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16d54.553 to i32), i32* %r1.global-to-local, align 4
  %v3_f148 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16d54.553 to i32), i32 ptrtoint (i32* @global_var_16d54.553 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_16b0c.406 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_16728.162 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v4_f158 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16b0c.406 to i32), i32 ptrtoint ([7 x i8]* @global_var_16728.162 to i32), i32 9)
  store i32 ptrtoint (i32* @global_var_16b0c.406 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v3_f168 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16b0c.406 to i32), i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 9)
  store i32 ptrtoint (i32* @global_var_16ac8.390 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16ac8.390 to i32), i32* %r1.global-to-local, align 4
  %v3_f178 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16ac8.390 to i32), i32 ptrtoint (i32* @global_var_16ac8.390 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16d5c.557 to i32), i32* %r1.global-to-local, align 4
  %v0_f184 = load i32, i32* @r4, align 4
  store i32 %v0_f184, i32* %r2.global-to-local, align 4
  %v3_f188 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint (i32* @global_var_16d5c.557 to i32), i32 %v0_f184)
  store i32 ptrtoint (i32* @global_var_16824.238 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16d64.560 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v3_f198 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16824.238 to i32), i32 ptrtoint (i32* @global_var_16d64.560 to i32), i32 10)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16d70.562 to i32), i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v3_f1a8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint (i32* @global_var_16d70.562 to i32), i32 12)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16d80.564 to i32), i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  %v3_f1b8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint (i32* @global_var_16d80.564 to i32), i32 14)
  store i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16d90.566 to i32), i32* %r1.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_f1c8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166dc.140 to i32), i32 ptrtoint (i32* @global_var_16d90.566 to i32), i32 17)
  store i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16d90.566 to i32), i32* %r1.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_f1d8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_166e8.144 to i32), i32 ptrtoint (i32* @global_var_16d90.566 to i32), i32 17)
  store i32 ptrtoint (i32* @global_var_16da4.568 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16768.138 to i32), i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  %v3_f1e8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16da4.568 to i32), i32 ptrtoint (i32* @global_var_16768.138 to i32), i32 11)
  store i32 ptrtoint (i32* @global_var_16db0.570 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16db0.570 to i32), i32* %r1.global-to-local, align 4
  %v3_f1f8 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16db0.570 to i32), i32 ptrtoint (i32* @global_var_16db0.570 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_16dbc.571 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16768.138 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v3_f208 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16dbc.571 to i32), i32 ptrtoint (i32* @global_var_16768.138 to i32), i32 10)
  store i32 ptrtoint (i32* @global_var_16dbc.571 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16dc8.573 to i32), i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v3_f218 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16dbc.571 to i32), i32 ptrtoint (i32* @global_var_16dc8.573 to i32), i32 12)
  store i32 ptrtoint (i32* @global_var_16dd8.575 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16de8.577 to i32), i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v3_f228 = call i32 @function_db0c(i32 ptrtoint (i32* @global_var_16dd8.575 to i32), i32 ptrtoint (i32* @global_var_16de8.577 to i32), i32 12)
  store i32 %v3_f228, i32* %r0.global-to-local, align 4
  %v2_f230 = ptrtoint i32* %stack_var_-1866 to i32
  br label %dec_label_pc_f238

dec_label_pc_f238:                                ; preds = %dec_label_pc_f98c, %dec_label_pc_e0c0
  %stack_var_-1880.0 = phi i32 [ %tmp300, %dec_label_pc_e0c0 ], [ %stack_var_-1880.2, %dec_label_pc_f98c ]
  %v0_f544 = phi i32 [ %v2_f230, %dec_label_pc_e0c0 ], [ %stack_var_-1888.1, %dec_label_pc_f98c ]
  %stack_var_-1884.0 = phi i16 [ %v5_e0b8.le, %dec_label_pc_e0c0 ], [ %stack_var_-1884.1, %dec_label_pc_f98c ]
  store i32 ptrtoint (i32* @global_var_1f610.110 to i32), i32* %r0.global-to-local, align 4
  store i32 %stack_var_-1880.0, i32* %r1.global-to-local, align 4
  %v2_f240 = load i32, i32* @global_var_1f610.110, align 4
  store i32 %v2_f240, i32* @r4, align 4
  %v3_f244 = icmp uge i32 %stack_var_-1880.0, %v2_f240
  store i1 %v3_f244, i1* %cpsr_c.global-to-local, align 1
  %v9_f244 = icmp eq i32 %stack_var_-1880.0, %v2_f240
  store i1 %v9_f244, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_f244, label %dec_label_pc_f4c8, label %dec_label_pc_f24c

dec_label_pc_f24c:                                ; preds = %dec_label_pc_f238
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_f250 = ptrtoint i32* %stack_var_-104 to i32
  store i32 0, i32* %stack_var_-52, align 4
  %v2_f258 = ptrtoint i32* %stack_var_-96 to i32
  br label %dec_label_pc_f25c

dec_label_pc_f25c:                                ; preds = %bb366, %dec_label_pc_f24c
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-96, align 4
  %v0_f270 = call i32 @function_d398()
  %v1_f270 = trunc i32 %v0_f270 to i16
  store i32 %v0_f270, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_21644.39 to i32), i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_1f5e0.126 to i32), i32* %ip.global-to-local, align 4
  %v2_f27c = load i32, i32* @global_var_21644.39, align 4
  store i32 %v2_f27c, i32* %r3.global-to-local, align 4
  store i16 %v1_f270, i16* bitcast (i32* @global_var_1f5e4.132 to i16*), align 4
  store i32 %v2_f27c, i32* @global_var_1f5ec.581, align 4
  br label %dec_label_pc_f288

dec_label_pc_f288:                                ; preds = %dec_label_pc_f35c, %dec_label_pc_f2b8, %dec_label_pc_f390, %dec_label_pc_f384, %dec_label_pc_f378, %dec_label_pc_f36c, %.thread28, %bb357, %bb356, %bb355, %bb354, %bb353, %dec_label_pc_f354, %dec_label_pc_f34c, %bb349, %dec_label_pc_f31c, %dec_label_pc_f2f8, %bb342, %dec_label_pc_f2c8, %bb341, %dec_label_pc_f2b0, %bb340, %bb359, %dec_label_pc_f25c
  %v0_f288 = call i32 @function_d398()
  store i32 %v0_f288, i32* %r0.global-to-local, align 4
  %v1_f28c = urem i32 %v0_f288, 256
  store i32 %v1_f28c, i32* %r1.global-to-local, align 4
  %v3_f290 = udiv i32 %v0_f288, 256
  store i32 %v3_f290, i32* %r3.global-to-local, align 4
  %v3_f294 = udiv i32 %v0_f288, 65536
  store i32 %v3_f294, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f298 = icmp eq i32 %v1_f28c, 0
  store i1 %v2_f298, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f298, label %bb340, label %bb339

bb339:                                            ; preds = %dec_label_pc_f288
  %v3_f29c = icmp ugt i32 %v1_f28c, 126
  store i1 %v3_f29c, i1* %cpsr_c.global-to-local, align 1
  %v8_f29c = icmp eq i32 %v1_f28c, 127
  store i1 %v8_f29c, i1* %cpsr_z.global-to-local, align 1
  br label %bb340

bb340:                                            ; preds = %dec_label_pc_f288, %bb339
  %v0_f2ac = phi i1 [ true, %dec_label_pc_f288 ], [ %v8_f29c, %bb339 ]
  %v1_f2a0 = urem i32 %v3_f290, 256
  store i32 %v1_f2a0, i32* %ip.global-to-local, align 4
  %v1_f2a4 = urem i32 %v3_f294, 256
  store i32 %v1_f2a4, i32* %r2.global-to-local, align 4
  %v1_f2a8 = and i32 %v0_f288, 8388608
  %v2_f2a8 = icmp ne i32 %v1_f2a8, 0
  store i1 %v2_f2a8, i1* %cpsr_c.global-to-local, align 1
  %v3_f2a8 = udiv i32 %v0_f288, 16777216
  store i32 %v3_f2a8, i32* %r0.global-to-local, align 4
  br i1 %v0_f2ac, label %dec_label_pc_f288, label %dec_label_pc_f2b0

dec_label_pc_f2b0:                                ; preds = %bb340
  %v2_f2b0 = icmp ugt i32 %v1_f28c, 2
  store i1 %v2_f2b0, i1* %cpsr_c.global-to-local, align 1
  %v7_f2b0 = icmp eq i32 %v1_f28c, 3
  store i1 %v7_f2b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f2b0, label %dec_label_pc_f288, label %dec_label_pc_f2b8

dec_label_pc_f2b8:                                ; preds = %dec_label_pc_f2b0
  %v1_f2b8 = add nsw i32 %v1_f28c, -15
  store i32 %v1_f2b8, i32* %r3.global-to-local, align 4
  %v2_f2bc = icmp ugt i32 %v1_f28c, 55
  store i1 %v2_f2bc, i1* %cpsr_c.global-to-local, align 1
  %v7_f2bc = icmp eq i32 %v1_f28c, 56
  store i1 %v7_f2bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f2bc, label %dec_label_pc_f288, label %bb341

bb341:                                            ; preds = %dec_label_pc_f2b8
  %v3_f2c0 = icmp ne i32 %v1_f2b8, 0
  store i1 %v3_f2c0, i1* %cpsr_c.global-to-local, align 1
  %v8_f2c0 = icmp eq i32 %v1_f2b8, 1
  store i1 %v8_f2c0, i1* %cpsr_z.global-to-local, align 1
  %v2_f2c4 = xor i1 %v3_f2c0, true
  %v3_f2c4 = or i1 %v8_f2c0, %v2_f2c4
  br i1 %v3_f2c4, label %dec_label_pc_f288, label %dec_label_pc_f2c8

dec_label_pc_f2c8:                                ; preds = %bb341
  %v2_f2c8 = icmp ugt i32 %v1_f28c, 9
  store i1 %v2_f2c8, i1* %cpsr_c.global-to-local, align 1
  %v7_f2c8 = icmp eq i32 %v1_f28c, 10
  store i1 %v7_f2c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f2c8, label %dec_label_pc_f288, label %dec_label_pc_f2d0

dec_label_pc_f2d0:                                ; preds = %dec_label_pc_f2c8
  %v2_f2d0 = icmp ugt i32 %v1_f28c, 191
  store i1 %v2_f2d0, i1* %cpsr_c.global-to-local, align 1
  %v7_f2d0 = icmp eq i32 %v1_f28c, 192
  store i1 %v7_f2d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f2d0, label %bb342, label %dec_label_pc_f2dc

bb342:                                            ; preds = %dec_label_pc_f2d0
  %v3_f2d4 = icmp ugt i32 %v1_f2a0, 167
  store i1 %v3_f2d4, i1* %cpsr_c.global-to-local, align 1
  %v8_f2d4 = icmp eq i32 %v1_f2a0, 168
  store i1 %v8_f2d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f2d4, label %dec_label_pc_f288, label %dec_label_pc_f2dc

dec_label_pc_f2dc:                                ; preds = %dec_label_pc_f2d0, %bb342
  %v7_f2dc = icmp eq i32 %v1_f28c, 172
  %.419 = zext i1 %v7_f2dc to i32
  store i32 %.419, i32* %r3.global-to-local, align 4
  %v2_f2e8 = icmp ugt i32 %v1_f2a0, 14
  store i1 %v2_f2e8, i1* %cpsr_c.global-to-local, align 1
  %v7_f2e8 = icmp eq i32 %v1_f2a0, 15
  store i1 %v7_f2e8, i1* %cpsr_z.global-to-local, align 1
  %v2_f2ec = xor i1 %v2_f2e8, true
  %v3_f2ec = or i1 %v7_f2e8, %v2_f2ec
  br i1 %v3_f2ec, label %.thread6, label %bb345

.thread6:                                         ; preds = %dec_label_pc_f2dc
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f300

bb345:                                            ; preds = %dec_label_pc_f2dc
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f2f0 = icmp eq i1 %v7_f2dc, false
  store i1 %v2_f2f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f2f0, label %dec_label_pc_f300, label %dec_label_pc_f2f8

dec_label_pc_f2f8:                                ; preds = %bb345
  %v2_f2f8 = icmp ugt i32 %v1_f2a0, 30
  store i1 %v2_f2f8, i1* %cpsr_c.global-to-local, align 1
  %v7_f2f8 = icmp eq i32 %v1_f2a0, 31
  store i1 %v7_f2f8, i1* %cpsr_z.global-to-local, align 1
  %v2_f2fc = xor i1 %v2_f2f8, true
  %v3_f2fc = or i1 %v7_f2f8, %v2_f2fc
  br i1 %v3_f2fc, label %dec_label_pc_f288, label %dec_label_pc_f300

dec_label_pc_f300:                                ; preds = %.thread6, %dec_label_pc_f2f8, %bb345
  %v7_f300 = icmp eq i32 %v1_f28c, 100
  %.420 = zext i1 %v7_f300 to i32
  store i32 %.420, i32* %r3.global-to-local, align 4
  %v2_f30c = icmp ugt i32 %v1_f2a0, 62
  store i1 %v2_f30c, i1* %cpsr_c.global-to-local, align 1
  %v7_f30c = icmp eq i32 %v1_f2a0, 63
  store i1 %v7_f30c, i1* %cpsr_z.global-to-local, align 1
  %v2_f310 = xor i1 %v2_f30c, true
  %v3_f310 = or i1 %v7_f30c, %v2_f310
  br i1 %v3_f310, label %.thread11, label %bb348

.thread11:                                        ; preds = %dec_label_pc_f300
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f324

bb348:                                            ; preds = %dec_label_pc_f300
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f314 = icmp eq i1 %v7_f300, false
  store i1 %v2_f314, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f314, label %dec_label_pc_f324, label %dec_label_pc_f31c

dec_label_pc_f31c:                                ; preds = %bb348
  %v2_f31c = icmp ugt i32 %v1_f2a0, 125
  store i1 %v2_f31c, i1* %cpsr_c.global-to-local, align 1
  %v7_f31c = icmp eq i32 %v1_f2a0, 126
  store i1 %v7_f31c, i1* %cpsr_z.global-to-local, align 1
  %v2_f320 = xor i1 %v2_f31c, true
  %v3_f320 = or i1 %v7_f31c, %v2_f320
  br i1 %v3_f320, label %dec_label_pc_f288, label %dec_label_pc_f324

dec_label_pc_f324:                                ; preds = %.thread11, %dec_label_pc_f31c, %bb348
  %v2_f324 = icmp ugt i32 %v1_f28c, 168
  store i1 %v2_f324, i1* %cpsr_c.global-to-local, align 1
  %v7_f324 = icmp eq i32 %v1_f28c, 169
  store i1 %v7_f324, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f324, label %bb349, label %dec_label_pc_f330

bb349:                                            ; preds = %dec_label_pc_f324
  %v3_f328 = icmp eq i32 %v1_f2a0, 255
  store i1 %v3_f328, i1* %cpsr_c.global-to-local, align 1
  store i1 %v3_f328, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_f328, label %dec_label_pc_f288, label %dec_label_pc_f330

dec_label_pc_f330:                                ; preds = %dec_label_pc_f324, %bb349
  %v7_f330 = icmp eq i32 %v1_f28c, 198
  %.421 = zext i1 %v7_f330 to i32
  store i32 %.421, i32* %r3.global-to-local, align 4
  %v2_f33c = icmp ugt i32 %v1_f2a0, 16
  store i1 %v2_f33c, i1* %cpsr_c.global-to-local, align 1
  %v7_f33c = icmp eq i32 %v1_f2a0, 17
  store i1 %v7_f33c, i1* %cpsr_z.global-to-local, align 1
  %v2_f340 = xor i1 %v2_f33c, true
  %v3_f340 = or i1 %v7_f33c, %v2_f340
  br i1 %v3_f340, label %.thread17, label %bb352

.thread17:                                        ; preds = %dec_label_pc_f330
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f354

bb352:                                            ; preds = %dec_label_pc_f330
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f344 = icmp eq i1 %v7_f330, false
  store i1 %v2_f344, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f344, label %dec_label_pc_f354, label %dec_label_pc_f34c

dec_label_pc_f34c:                                ; preds = %bb352
  %v2_f34c = icmp ugt i32 %v1_f2a0, 18
  store i1 %v2_f34c, i1* %cpsr_c.global-to-local, align 1
  %v7_f34c = icmp eq i32 %v1_f2a0, 19
  store i1 %v7_f34c, i1* %cpsr_z.global-to-local, align 1
  %v2_f350 = xor i1 %v2_f34c, true
  %v3_f350 = or i1 %v7_f34c, %v2_f350
  br i1 %v3_f350, label %dec_label_pc_f288, label %dec_label_pc_f354

dec_label_pc_f354:                                ; preds = %.thread17, %dec_label_pc_f34c, %bb352
  %v2_f354 = icmp ugt i32 %v1_f28c, 222
  store i1 %v2_f354, i1* %cpsr_c.global-to-local, align 1
  %v7_f354 = icmp eq i32 %v1_f28c, 223
  store i1 %v7_f354, i1* %cpsr_z.global-to-local, align 1
  %v2_f358 = xor i1 %v7_f354, true
  %v3_f358 = and i1 %v2_f354, %v2_f358
  br i1 %v3_f358, label %dec_label_pc_f288, label %dec_label_pc_f35c

dec_label_pc_f35c:                                ; preds = %dec_label_pc_f354
  %v1_f35c = add nsw i32 %v1_f28c, -6
  store i32 %v1_f35c, i32* %r3.global-to-local, align 4
  %v2_f360 = icmp ugt i32 %v1_f28c, 10
  store i1 %v2_f360, i1* %cpsr_c.global-to-local, align 1
  %v7_f360 = icmp eq i32 %v1_f28c, 11
  store i1 %v7_f360, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f360, label %dec_label_pc_f288, label %bb353

bb353:                                            ; preds = %dec_label_pc_f35c
  %v3_f364 = icmp ne i32 %v1_f35c, 0
  store i1 %v3_f364, i1* %cpsr_c.global-to-local, align 1
  %v8_f364 = icmp eq i32 %v1_f35c, 1
  store i1 %v8_f364, i1* %cpsr_z.global-to-local, align 1
  %v2_f368 = xor i1 %v3_f364, true
  %v3_f368 = or i1 %v8_f364, %v2_f368
  br i1 %v3_f368, label %dec_label_pc_f288, label %dec_label_pc_f36c

dec_label_pc_f36c:                                ; preds = %bb353
  %v2_f36c = icmp ugt i32 %v1_f28c, 21
  store i1 %v2_f36c, i1* %cpsr_c.global-to-local, align 1
  %v7_f36c = icmp eq i32 %v1_f28c, 22
  store i1 %v7_f36c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f36c, label %dec_label_pc_f288, label %bb354

bb354:                                            ; preds = %dec_label_pc_f36c
  %v3_f370 = icmp ugt i32 %v1_f28c, 20
  store i1 %v3_f370, i1* %cpsr_c.global-to-local, align 1
  %v8_f370 = icmp eq i32 %v1_f28c, 21
  store i1 %v8_f370, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f370, label %dec_label_pc_f288, label %dec_label_pc_f378

dec_label_pc_f378:                                ; preds = %bb354
  %v2_f378 = icmp ugt i32 %v1_f28c, 27
  store i1 %v2_f378, i1* %cpsr_c.global-to-local, align 1
  %v7_f378 = icmp eq i32 %v1_f28c, 28
  store i1 %v7_f378, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f378, label %dec_label_pc_f288, label %bb355

bb355:                                            ; preds = %dec_label_pc_f378
  %v3_f37c = icmp ugt i32 %v1_f28c, 25
  store i1 %v3_f37c, i1* %cpsr_c.global-to-local, align 1
  %v8_f37c = icmp eq i32 %v1_f28c, 26
  store i1 %v8_f37c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f37c, label %dec_label_pc_f288, label %dec_label_pc_f384

dec_label_pc_f384:                                ; preds = %bb355
  %v2_f384 = icmp ugt i32 %v1_f28c, 29
  store i1 %v2_f384, i1* %cpsr_c.global-to-local, align 1
  %v7_f384 = icmp eq i32 %v1_f28c, 30
  store i1 %v7_f384, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f384, label %dec_label_pc_f288, label %bb356

bb356:                                            ; preds = %dec_label_pc_f384
  %v3_f388 = icmp ugt i32 %v1_f28c, 28
  store i1 %v3_f388, i1* %cpsr_c.global-to-local, align 1
  %v8_f388 = icmp eq i32 %v1_f28c, 29
  store i1 %v8_f388, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f388, label %dec_label_pc_f288, label %dec_label_pc_f390

dec_label_pc_f390:                                ; preds = %bb356
  %v2_f390 = icmp ugt i32 %v1_f28c, 54
  store i1 %v2_f390, i1* %cpsr_c.global-to-local, align 1
  %v7_f390 = icmp eq i32 %v1_f28c, 55
  store i1 %v7_f390, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f390, label %dec_label_pc_f288, label %bb357

bb357:                                            ; preds = %dec_label_pc_f390
  %v3_f394 = icmp ugt i32 %v1_f28c, 32
  store i1 %v3_f394, i1* %cpsr_c.global-to-local, align 1
  %v8_f394 = icmp eq i32 %v1_f28c, 33
  store i1 %v8_f394, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f394, label %dec_label_pc_f288, label %dec_label_pc_f39c

dec_label_pc_f39c:                                ; preds = %bb357
  %v2_f39c = icmp ugt i32 %v1_f28c, 214
  store i1 %v2_f39c, i1* %cpsr_c.global-to-local, align 1
  %v7_f39c = icmp eq i32 %v1_f28c, 215
  store i1 %v7_f39c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f39c, label %.thread28, label %bb358

bb358:                                            ; preds = %dec_label_pc_f39c
  %v3_f3a0 = icmp ugt i32 %v1_f28c, 213
  store i1 %v3_f3a0, i1* %cpsr_c.global-to-local, align 1
  %v8_f3a0 = icmp eq i32 %v1_f28c, 214
  store i1 %v8_f3a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f3a0, label %bb359, label %dec_label_pc_f3b0

.thread28:                                        ; preds = %dec_label_pc_f39c
  br label %dec_label_pc_f288

bb359:                                            ; preds = %bb358
  br label %dec_label_pc_f288

dec_label_pc_f3b0:                                ; preds = %bb358
  %v5_f3bc = call i32 @llvm.bswap.i32(i32 %v0_f288)
  store i32 %v5_f3bc, i32* %r3.global-to-local, align 4
  %tmp360 = and i32 %v0_f288, 65280
  %tmp361 = call i32 @llvm.bswap.i32(i32 %tmp360)
  %v3_f3c4 = udiv i32 %v5_f3bc, 16777216
  %tmp362 = and i32 %v0_f288, 16711680
  %tmp363 = call i32 @llvm.bswap.i32(i32 %tmp362)
  %v4_f3cc = udiv i32 %tmp361, 256
  %v4_f3d0 = mul nuw nsw i32 %tmp363, 256
  store i32 ptrtoint (i8** @global_var_1f5e0.126 to i32), i32* @r0, align 4
  %tmp364 = and i32 %v0_f288, 65536
  %v3_f3d8 = icmp ne i32 %tmp364, 0
  store i1 %v3_f3d8, i1* %cpsr_c.global-to-local, align 1
  %v4_f3d8 = mul i32 %v5_f3bc, 16777216
  %v5_f3cc = or i32 %v4_f3d8, %v3_f3c4
  %v5_f3d0 = or i32 %v5_f3cc, %v4_f3cc
  %v5_f3d8 = or i32 %v5_f3d0, %v4_f3d0
  store i32 %v5_f3d8, i32* %r2.global-to-local, align 4
  store i16 0, i16* bitcast (i32* @global_var_1f5ea.582 to i16*), align 4
  store i32 20, i32* %r1.global-to-local, align 4
  store i32 %v5_f3d8, i32* @global_var_1f5f0.583, align 4
  %v3_f3e8 = call i32 @function_bf78(i32 ptrtoint (i8** @global_var_1f5e0.126 to i32), i32 20)
  %v4_f3e8 = trunc i32 %v3_f3e8 to i16
  store i32 %v3_f3e8, i32* %r0.global-to-local, align 4
  %v3_f3ec = load i32, i32* %stack_var_-52, align 4
  %v5_f3fc = sdiv i32 %v3_f3ec, 10
  %v3_f400 = mul i32 %v5_f3fc, 8
  store i32 %v3_f400, i32* %r2.global-to-local, align 4
  %v2_f408 = mul i32 %v5_f3fc, 10
  store i32 %v2_f408, i32* %r3.global-to-local, align 4
  %v3_f40c = icmp uge i32 %v3_f3ec, %v2_f408
  store i1 %v3_f40c, i1* %cpsr_c.global-to-local, align 1
  %v9_f40c = icmp eq i32 %v3_f3ec, %v2_f408
  store i1 %v9_f40c, i1* %cpsr_z.global-to-local, align 1
  store i32 ptrtoint (i8** @global_var_1f5e0.126 to i32), i32* %r1.global-to-local, align 4
  br i1 %v9_f40c, label %bb365, label %.thread40

.thread40:                                        ; preds = %dec_label_pc_f3b0
  store i32 ptrtoint (i16* @global_var_1f5f4.129 to i32), i32* %r3.global-to-local, align 4
  store i16 %v4_f3e8, i16* bitcast (i32* @global_var_1f5ea.582 to i16*), align 4
  store i32 ptrtoint (i8** @global_var_1f5e0.126 to i32), i32* %r0.global-to-local, align 4
  store i16 5888, i16* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_1f5f4.129 to i32), i32 2) to i16*), align 2
  %v4_f42c = load i32, i32* @global_var_1f5f0.583, align 4
  store i32 %v4_f42c, i32* @global_var_1f5f8.586, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %bb366

bb365:                                            ; preds = %dec_label_pc_f3b0
  store i16 %v4_f3e8, i16* bitcast (i32* @global_var_1f5ea.582 to i16*), align 4
  store i32 ptrtoint (i8** @global_var_1f5e0.126 to i32), i32* %r0.global-to-local, align 4
  %v4_f42c34 = load i32, i32* @global_var_1f5f0.583, align 4
  store i32 ptrtoint (i16* @global_var_1f5f4.129 to i32), i32* %r2.global-to-local, align 4
  store i32 4873, i32* %r3.global-to-local, align 4
  store i32 %v4_f42c34, i32* @global_var_1f5f8.586, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i16 4873, i16* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_1f5f4.129 to i32), i32 2) to i16*), align 2
  br label %bb366

bb366:                                            ; preds = %.thread40, %bb365
  store i16 0, i16* bitcast (i32* @global_var_1f604.587 to i16*), align 4
  store i32 ptrtoint (i16* @global_var_1f5f4.129 to i32), i32* @r1, align 4
  store i32 5120, i32* %r2.global-to-local, align 4
  store i32 20, i32* %r3.global-to-local, align 4
  %v6_f458 = call i32 @function_bfc8(i32 ptrtoint (i8** @global_var_1f5e0.126 to i32), i32 sext (i16 ptrtoint (i16* @global_var_1f5f4.129 to i16) to i32), i32 5120, i32 20)
  %v7_f458 = trunc i32 %v6_f458 to i16
  store i32 ptrtoint (i8** @global_var_1f5e0.126 to i32), i32* %r1.global-to-local, align 4
  %v2_f464 = load i32, i32* @global_var_21660.124, align 4
  store i16 %v7_f458, i16* bitcast (i32* @global_var_1f604.587 to i16*), align 4
  store i32 2, i32* %stack_var_-96, align 4
  store i32 %v2_f250, i32* %ip.global-to-local, align 4
  store i32 %v2_f464, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 40, i32* %r2.global-to-local, align 4
  %v7_f4ac = call i32 @function_11cac(i32 %v2_f464, i32 ptrtoint (i8** @global_var_1f5e0.126 to i32), i32 40, i32 16384, i32 %v2_f258, i32 16)
  store i32 %v7_f4ac, i32* %r0.global-to-local, align 4
  %v3_f4b0 = load i32, i32* %stack_var_-52, align 4
  %v1_f4b4 = add i32 %v3_f4b0, 1
  store i32 %v1_f4b4, i32* %r3.global-to-local, align 4
  %v3_f4b8 = icmp ugt i32 %v1_f4b4, 383
  store i1 %v3_f4b8, i1* %cpsr_c.global-to-local, align 1
  %v8_f4b8 = icmp eq i32 %v1_f4b4, 384
  store i1 %v8_f4b8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_f4b4, i32* %stack_var_-52, align 4
  %v5_f4c0 = icmp slt i32 %v1_f4b4, 384
  br i1 %v5_f4c0, label %dec_label_pc_f25c, label %dec_label_pc_f4c4

dec_label_pc_f4c4:                                ; preds = %bb366
  %v0_f4c4 = load i32, i32* @r4, align 4
  br label %dec_label_pc_f4c8

dec_label_pc_f4c8:                                ; preds = %dec_label_pc_f238, %dec_label_pc_f4c4
  %stack_var_-1880.1 = phi i32 [ %stack_var_-1880.0, %dec_label_pc_f238 ], [ %v0_f4c4, %dec_label_pc_f4c4 ]
  %v0_f4c8 = call i32 @function_11970()
  store i32 %v0_f544, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v1_f4d8 = add i32 %v0_f544, 20
  store i32 %v1_f4d8, i32* @r4, align 4
  %v2_f4e4 = inttoptr i32 %v0_f4c8 to i32*
  %v1_f534 = add i32 %v0_f544, 16
  %v2_f534 = inttoptr i32 %v1_f534 to i32*
  %v4_f570 = sext i16 %stack_var_-1884.0 to i32
  %v1_f544 = add i32 %v0_f544, 9
  %v2_f544 = inttoptr i32 %v1_f544 to i8*
  %v1_f5d8 = add i32 %v0_f544, 12
  %v2_f5d8 = inttoptr i32 %v1_f5d8 to i32*
  br label %dec_label_pc_f4dc

dec_label_pc_f4dc:                                ; preds = %dec_label_pc_f5a0, %dec_label_pc_f598, %dec_label_pc_f590, %dec_label_pc_f56c, %dec_label_pc_f55c, %dec_label_pc_f544, %dec_label_pc_f52c, %dec_label_pc_f588, %dec_label_pc_f57c, %dec_label_pc_f524, %dec_label_pc_f658, %dec_label_pc_f4c8
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %v2_f4e4, align 4
  %v2_f4ec = load i32, i32* @global_var_21660.124, align 4
  store i32 %v2_f4ec, i32* %r0.global-to-local, align 4
  store i32 1514, i32* %r2.global-to-local, align 4
  store i32 %v0_f544, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_f500 = load i32, i32* %ip.global-to-local, align 4
  %v6_f508 = call i32 @function_11c38(i32 %v2_f4ec, i32 %v0_f544, i32 1514, i32 16384, i32 %v0_f500, i32 %v0_f500)
  store i32 %v6_f508, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f50c = icmp eq i32 %v6_f508, 0
  store i1 %v2_f50c, i1* %cpsr_z.global-to-local, align 1
  %tmp367 = icmp slt i32 %v6_f508, 1
  br i1 %tmp367, label %dec_label_pc_f67c, label %dec_label_pc_f514

dec_label_pc_f514:                                ; preds = %dec_label_pc_f4dc
  store i32 %v0_f4c8, i32* %ip.global-to-local, align 4
  %v2_f518 = load i32, i32* %v2_f4e4, align 4
  store i32 %v2_f518, i32* %r3.global-to-local, align 4
  %v2_f51c = icmp ugt i32 %v2_f518, 10
  store i1 %v2_f51c, i1* %cpsr_c.global-to-local, align 1
  %v7_f51c = icmp eq i32 %v2_f518, 11
  store i1 %v7_f51c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f51c, label %dec_label_pc_f67c, label %dec_label_pc_f524

dec_label_pc_f524:                                ; preds = %dec_label_pc_f514
  %v2_f524 = icmp ugt i32 %v6_f508, 38
  store i1 %v2_f524, i1* %cpsr_c.global-to-local, align 1
  %v7_f524 = icmp eq i32 %v6_f508, 39
  store i1 %v7_f524, i1* %cpsr_z.global-to-local, align 1
  %v2_f528 = xor i1 %v2_f524, true
  %v3_f528 = or i1 %v7_f524, %v2_f528
  br i1 %v3_f528, label %dec_label_pc_f4dc, label %dec_label_pc_f52c

dec_label_pc_f52c:                                ; preds = %dec_label_pc_f524
  store i32 ptrtoint (i32* @global_var_21644.39 to i32), i32* %r0.global-to-local, align 4
  %v3_f534 = load i32, i32* %v2_f534, align 4
  store i32 %v3_f534, i32* %r2.global-to-local, align 4
  %v2_f538 = load i32, i32* @global_var_21644.39, align 4
  store i32 %v2_f538, i32* %r3.global-to-local, align 4
  %v3_f53c = icmp uge i32 %v3_f534, %v2_f538
  store i1 %v3_f53c, i1* %cpsr_c.global-to-local, align 1
  %v9_f53c = icmp eq i32 %v3_f534, %v2_f538
  store i1 %v9_f53c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_f53c, label %dec_label_pc_f544, label %dec_label_pc_f4dc

dec_label_pc_f544:                                ; preds = %dec_label_pc_f52c
  %v3_f544 = load i8, i8* %v2_f544, align 1
  %v4_f544 = zext i8 %v3_f544 to i32
  store i32 %v4_f544, i32* %r3.global-to-local, align 4
  %v2_f548 = icmp ugt i8 %v3_f544, 5
  store i1 %v2_f548, i1* %cpsr_c.global-to-local, align 1
  %v7_f548 = icmp eq i8 %v3_f544, 6
  store i1 %v7_f548, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f548, label %dec_label_pc_f550, label %dec_label_pc_f4dc

dec_label_pc_f550:                                ; preds = %dec_label_pc_f544
  %v0_f550 = load i32, i32* @r4, align 4
  %v1_f550 = inttoptr i32 %v0_f550 to i16*
  %v2_f550 = load i16, i16* %v1_f550, align 2
  %v3_f550 = zext i16 %v2_f550 to i32
  store i32 %v3_f550, i32* %ip.global-to-local, align 4
  %v2_f554 = icmp ugt i16 %v2_f550, 5887
  store i1 %v2_f554, i1* %cpsr_c.global-to-local, align 1
  %v7_f554 = icmp eq i16 %v2_f550, 5888
  store i1 %v7_f554, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f554, label %dec_label_pc_f56c, label %dec_label_pc_f55c

dec_label_pc_f55c:                                ; preds = %dec_label_pc_f550
  store i32 4873, i32* %r3.global-to-local, align 4
  %v3_f564 = icmp ugt i16 %v2_f550, 4872
  store i1 %v3_f564, i1* %cpsr_c.global-to-local, align 1
  %v9_f564 = icmp eq i16 %v2_f550, 4873
  store i1 %v9_f564, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_f564, label %dec_label_pc_f56c, label %dec_label_pc_f4dc

dec_label_pc_f56c:                                ; preds = %dec_label_pc_f55c, %dec_label_pc_f550
  %v1_f56c = add i32 %v0_f550, 2
  %v2_f56c = inttoptr i32 %v1_f56c to i16*
  %v3_f56c = load i16, i16* %v2_f56c, align 2
  %v4_f56c = zext i16 %v3_f56c to i32
  store i32 %v4_f56c, i32* %r3.global-to-local, align 4
  store i32 %v4_f570, i32* %r1.global-to-local, align 4
  %v3_f574 = icmp uge i32 %v4_f56c, %v4_f570
  store i1 %v3_f574, i1* %cpsr_c.global-to-local, align 1
  %v9_f574 = icmp eq i32 %v4_f56c, %v4_f570
  store i1 %v9_f574, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_f574, label %dec_label_pc_f57c, label %dec_label_pc_f4dc

dec_label_pc_f57c:                                ; preds = %dec_label_pc_f56c
  %v1_f57c = add i32 %v0_f550, 13
  %v2_f57c = inttoptr i32 %v1_f57c to i8*
  %v3_f57c = load i8, i8* %v2_f57c, align 1
  %v4_f57c = zext i8 %v3_f57c to i32
  store i32 %v4_f57c, i32* %r3.global-to-local, align 4
  %v1_f580 = and i32 %v4_f57c, 2
  %v2_f580 = icmp eq i32 %v1_f580, 0
  store i1 %v2_f580, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f580, label %dec_label_pc_f4dc, label %dec_label_pc_f588

dec_label_pc_f588:                                ; preds = %dec_label_pc_f57c
  %v1_f588 = and i32 %v4_f57c, 16
  %v2_f588 = icmp eq i32 %v1_f588, 0
  store i1 %v2_f588, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f588, label %dec_label_pc_f4dc, label %dec_label_pc_f590

dec_label_pc_f590:                                ; preds = %dec_label_pc_f588
  %v1_f590 = and i32 %v4_f57c, 4
  %v2_f590 = icmp eq i32 %v1_f590, 0
  store i1 %v2_f590, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f590, label %dec_label_pc_f598, label %dec_label_pc_f4dc

dec_label_pc_f598:                                ; preds = %dec_label_pc_f590
  %tmp515 = urem i8 %v3_f57c, 2
  %v2_f598 = icmp eq i8 %tmp515, 0
  store i1 %v2_f598, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f598, label %dec_label_pc_f5a0, label %dec_label_pc_f4dc

dec_label_pc_f5a0:                                ; preds = %dec_label_pc_f598
  %v1_f5a0 = add i32 %v0_f550, 8
  %v2_f5a0 = inttoptr i32 %v1_f5a0 to i32*
  %v3_f5a0 = load i32, i32* %v2_f5a0, align 4
  %v5_f5b8 = call i32 @llvm.bswap.i32(i32 %v3_f5a0)
  %v1_f5bc = add i32 %v5_f5b8, -1
  store i32 %v1_f5bc, i32* %r2.global-to-local, align 4
  %v3_f5c4 = udiv i32 %v1_f5bc, 16777216
  %v1_f5c0 = udiv i32 %v1_f5bc, 256
  %v4_f5c8 = and i32 %v1_f5c0, 65280
  %v5_f5c8 = or i32 %v4_f5c8, %v3_f5c4
  store i32 %v0_f544, i32* %r0.global-to-local, align 4
  %v1_f5d0 = and i32 %v1_f5bc, 65280
  store i32 %v1_f5d0, i32* %r1.global-to-local, align 4
  %v4_f5d4 = mul nuw nsw i32 %v1_f5d0, 256
  %v5_f5d4 = or i32 %v5_f5c8, %v4_f5d4
  store i32 %v5_f5d4, i32* %r3.global-to-local, align 4
  %v3_f5d8 = load i32, i32* %v2_f5d8, align 4
  store i32 %v3_f5d8, i32* @lr, align 4
  %v5_f5dc = call i32 @llvm.bswap.i32(i32 %v1_f5bc)
  store i32 %v5_f5dc, i32* %r3.global-to-local, align 4
  %v3_f5e0 = icmp uge i32 %v5_f5dc, %v3_f5d8
  store i1 %v3_f5e0, i1* %cpsr_c.global-to-local, align 1
  %v9_f5e0 = icmp eq i32 %v5_f5dc, %v3_f5d8
  store i1 %v9_f5e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_f5e0, label %dec_label_pc_f5e8, label %dec_label_pc_f4dc

dec_label_pc_f5e8:                                ; preds = %dec_label_pc_f5a0
  %v0_f5e8 = load i32, i32* @r5, align 4
  %v2_f5e8 = icmp ugt i32 %v0_f5e8, 254
  store i1 %v2_f5e8, i1* %cpsr_c.global-to-local, align 1
  %v7_f5e8 = icmp eq i32 %v0_f5e8, 255
  store i1 %v7_f5e8, i1* %cpsr_z.global-to-local, align 1
  %v8_f5ec = icmp sgt i32 %v0_f5e8, 255
  br i1 %v8_f5ec, label %dec_label_pc_f67c, label %dec_label_pc_f5f0

dec_label_pc_f5f0:                                ; preds = %dec_label_pc_f5e8
  %v2_f5f8 = load i32, i32* @global_var_2165c.122, align 4
  store i32 %v2_f5f8, i32* %r1.global-to-local, align 4
  %v3_f5fc = mul i32 %v0_f5e8, 256
  store i32 %v3_f5fc, i32* %r2.global-to-local, align 4
  %v2_f600 = mul i32 %v0_f5e8, 288
  store i32 %v2_f600, i32* %r3.global-to-local, align 4
  %v2_f604 = add i32 %v2_f5f8, %v2_f600
  store i32 %v2_f604, i32* @r0, align 4
  %v1_f608 = add i32 %v2_f604, 12
  %v2_f608 = inttoptr i32 %v1_f608 to i32*
  %v3_f608 = load i32, i32* %v2_f608, align 4
  store i32 %v3_f608, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f60c = icmp eq i32 %v3_f608, 0
  store i1 %v2_f60c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f60c, label %dec_label_pc_f650, label %dec_label_pc_f62c.preheader

dec_label_pc_f62c.preheader:                      ; preds = %dec_label_pc_f5f0
  %v2_f610 = add i32 %v0_f5e8, 1
  %v2_f618 = and i32 %v2_f610, 134217728
  %v3_f618 = icmp ne i32 %v2_f618, 0
  store i1 %v3_f618, i1* %cpsr_c.global-to-local, align 1
  %v3_f61c = mul i32 %v2_f610, 288
  %v3_f620 = add i32 %v2_f5f8, %v3_f61c
  store i32 %v3_f620, i32* %r3.global-to-local, align 4
  store i32 %v0_f5e8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_f62c

dec_label_pc_f62c:                                ; preds = %dec_label_pc_f62c.preheader, %dec_label_pc_f638
  %v0_f638 = phi i32 [ %v3_f620, %dec_label_pc_f62c.preheader ], [ %v1_f644, %dec_label_pc_f638 ]
  %v0_f62c = phi i32 [ %v0_f5e8, %dec_label_pc_f62c.preheader ], [ %v1_f62c, %dec_label_pc_f638 ]
  %v1_f62c = add i32 %v0_f62c, 1
  store i32 %v1_f62c, i32* %r2.global-to-local, align 4
  %v7_f630 = icmp eq i32 %v1_f62c, 256
  br i1 %v7_f630, label %dec_label_pc_f67c.loopexit, label %dec_label_pc_f638

dec_label_pc_f638:                                ; preds = %dec_label_pc_f62c
  store i32 %v0_f638, i32* @r0, align 4
  %v1_f63c = add i32 %v0_f638, 12
  %v2_f63c = inttoptr i32 %v1_f63c to i32*
  %v3_f63c = load i32, i32* %v2_f63c, align 4
  %v2_f640 = icmp eq i32 %v3_f63c, 0
  %v1_f644 = add i32 %v0_f638, 288
  store i32 %v1_f644, i32* %r3.global-to-local, align 4
  br i1 %v2_f640, label %dec_label_pc_f64c, label %dec_label_pc_f62c

dec_label_pc_f64c:                                ; preds = %dec_label_pc_f638
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_f62c, i32* @r5, align 4
  br label %dec_label_pc_f650

dec_label_pc_f650:                                ; preds = %dec_label_pc_f5f0, %dec_label_pc_f64c
  %v1_f658 = phi i32 [ %v2_f604, %dec_label_pc_f5f0 ], [ %v0_f638, %dec_label_pc_f64c ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f650 = icmp eq i32 %v1_f658, 0
  store i1 %v2_f650, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f650, label %dec_label_pc_f67c, label %dec_label_pc_f658

dec_label_pc_f658:                                ; preds = %dec_label_pc_f650
  %v2_f658 = add i32 %v1_f658, 16
  %v3_f658 = inttoptr i32 %v2_f658 to i32*
  store i32 %v3_f5d8, i32* %v3_f658, align 4
  %v0_f65c = load i32, i32* %ip.global-to-local, align 4
  %v1_f65c = trunc i32 %v0_f65c to i16
  %v2_f65c = load i32, i32* @r0, align 4
  %v3_f65c = add i32 %v2_f65c, 20
  %v4_f65c = inttoptr i32 %v3_f65c to i16*
  store i16 %v1_f65c, i16* %v4_f65c, align 2
  %v0_f660 = call i32 @function_da44()
  store i32 %v0_f660, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f4dc

dec_label_pc_f668:                                ; preds = %dec_label_pc_e04c
  store i32 ptrtoint (i32* @global_var_21660.124 to i32), i32* %ip.global-to-local, align 4
  %v2_f66c = load i32, i32* @global_var_21660.124, align 4
  store i32 %v2_f66c, i32* %r0.global-to-local, align 4
  %v1_f670 = call i32 @function_11548(i32 %v2_f66c)
  store i32 %v1_f670, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f674

dec_label_pc_f674:                                ; preds = %dec_label_pc_e028, %dec_label_pc_f668
  %v0_f674 = load i32, i32* @r5, align 4
  store i32 %v0_f674, i32* %r0.global-to-local, align 4
  %v1_f678 = call i32 @function_13388(i32 %v0_f674)
  store i32 %v1_f678, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f67c

dec_label_pc_f67c.loopexit:                       ; preds = %dec_label_pc_f62c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f67c

dec_label_pc_f67c:                                ; preds = %dec_label_pc_f650, %dec_label_pc_f5e8, %dec_label_pc_f514, %dec_label_pc_f4dc, %dec_label_pc_f67c.loopexit, %dec_label_pc_f674
  %stack_var_-1876.0 = phi i32 [ %tmp296, %dec_label_pc_f674 ], [ %v0_f4c8, %dec_label_pc_f67c.loopexit ], [ %v0_f4c8, %dec_label_pc_f4dc ], [ %v0_f4c8, %dec_label_pc_f514 ], [ %v0_f4c8, %dec_label_pc_f5e8 ], [ %v0_f4c8, %dec_label_pc_f650 ]
  %stack_var_-1880.2 = phi i32 [ %tmp300, %dec_label_pc_f674 ], [ %stack_var_-1880.1, %dec_label_pc_f67c.loopexit ], [ %stack_var_-1880.1, %dec_label_pc_f4dc ], [ %stack_var_-1880.1, %dec_label_pc_f514 ], [ %stack_var_-1880.1, %dec_label_pc_f5e8 ], [ %stack_var_-1880.1, %dec_label_pc_f650 ]
  %stack_var_-1888.1 = phi i32 [ %tmp301, %dec_label_pc_f674 ], [ %v0_f544, %dec_label_pc_f67c.loopexit ], [ %v0_f544, %dec_label_pc_f4dc ], [ %v0_f544, %dec_label_pc_f514 ], [ %v0_f544, %dec_label_pc_f5e8 ], [ %v0_f544, %dec_label_pc_f650 ]
  %stack_var_-1884.1 = phi i16 [ %tmp302, %dec_label_pc_f674 ], [ %stack_var_-1884.0, %dec_label_pc_f67c.loopexit ], [ %stack_var_-1884.0, %dec_label_pc_f4dc ], [ %stack_var_-1884.0, %dec_label_pc_f514 ], [ %stack_var_-1884.0, %dec_label_pc_f5e8 ], [ %stack_var_-1884.0, %dec_label_pc_f650 ]
  store i32 0, i32* %stack_var_-224, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 1676, i32* %ip.global-to-local, align 4
  %v2_f69c473 = load i32, i32* @sp, align 4
  %v3_f69c474 = add i32 %v2_f69c473, 1676
  %v4_f69c475 = inttoptr i32 %v3_f69c474 to i32*
  store i32 0, i32* %v4_f69c475, align 4
  br label %dec_label_pc_f688.dec_label_pc_f688_crit_edge

dec_label_pc_f688.dec_label_pc_f688_crit_edge:    ; preds = %dec_label_pc_f67c, %dec_label_pc_f688.dec_label_pc_f688_crit_edge
  %v0_f688.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_f68c = add i32 %v0_f688.pre, 4
  store i32 %v1_f68c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_f694 = add i32 %v0_f688.pre, 1672
  store i32 %v1_f694, i32* %ip.global-to-local, align 4
  %v7_f698 = icmp eq i32 %v1_f68c, 128
  %v2_f69c = load i32, i32* @sp, align 4
  %v3_f69c = add i32 %v2_f69c, %v1_f694
  %v4_f69c = inttoptr i32 %v3_f69c to i32*
  store i32 0, i32* %v4_f69c, align 4
  br i1 %v7_f698, label %dec_label_pc_f6a4, label %dec_label_pc_f688.dec_label_pc_f688_crit_edge

dec_label_pc_f6a4:                                ; preds = %dec_label_pc_f688.dec_label_pc_f688_crit_edge
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_f6a4 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_f6a4, i32* %stack_var_-352, align 4
  %v1_f6b0467 = add i32 %v0_f6a4, 8
  store i32 %v1_f6b0467, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_f6b8468 = add i32 %v0_f6a4, 1548
  store i32 %v1_f6b8468, i32* @lr, align 4
  %v7_f6bc469 = icmp eq i32 %v1_f6b0467, 128
  %v2_f6c0470 = load i32, i32* @sp, align 4
  %v3_f6c0471 = add i32 %v2_f6c0470, %v1_f6b8468
  %v4_f6c0472 = inttoptr i32 %v3_f6c0471 to i32*
  store i32 0, i32* %v4_f6c0472, align 4
  br i1 %v7_f6bc469, label %dec_label_pc_f6c8, label %dec_label_pc_f6ac.dec_label_pc_f6ac_crit_edge

dec_label_pc_f6ac.dec_label_pc_f6ac_crit_edge:    ; preds = %dec_label_pc_f6a4, %dec_label_pc_f6ac.dec_label_pc_f6ac_crit_edge
  %v0_f6ac.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_f6b0 = add i32 %v0_f6ac.pre, 4
  store i32 %v1_f6b0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_f6b8 = add i32 %v0_f6ac.pre, 1544
  store i32 %v1_f6b8, i32* @lr, align 4
  %v7_f6bc = icmp eq i32 %v1_f6b0, 128
  %v2_f6c0 = load i32, i32* @sp, align 4
  %v3_f6c0 = add i32 %v2_f6c0, %v1_f6b8
  %v4_f6c0 = inttoptr i32 %v3_f6c0 to i32*
  store i32 0, i32* %v4_f6c0, align 4
  br i1 %v7_f6bc, label %dec_label_pc_f6c8, label %dec_label_pc_f6ac.dec_label_pc_f6ac_crit_edge

dec_label_pc_f6c8:                                ; preds = %dec_label_pc_f6ac.dec_label_pc_f6ac_crit_edge, %dec_label_pc_f6a4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_f6c8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_f6c8, i32* @r6, align 4
  store i32 %v0_f6c8, i32* @r5, align 4
  store i32 %v0_f6c8, i32* %stack_var_-52, align 4
  %v2_105e4 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_f724

dec_label_pc_f6d8:                                ; preds = %dec_label_pc_f754
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f740, i1* %cpsr_z.global-to-local, align 1
  %v1_105d8 = add i32 %v2_f738, 4
  %v2_105d8 = inttoptr i32 %v1_105d8 to i32*
  %v3_105d8 = load i32, i32* %v2_105d8, align 4
  br i1 %v7_f740, label %dec_label_pc_105d8, label %dec_label_pc_f6e0

dec_label_pc_f6e0:                                ; preds = %dec_label_pc_f6d8
  store i32 %v3_105d8, i32* %ip.global-to-local, align 4
  %v3_f6e4 = udiv i32 %v3_105d8, 32
  store i32 %v2_105e4, i32* %r0.global-to-local, align 4
  %v3_f6ec = mul nuw nsw i32 %v3_f6e4, 4
  %v2_f6f0 = add i32 %v3_f6ec, %v2_105e4
  store i32 %v2_f6f0, i32* %r3.global-to-local, align 4
  %v1_f6f4 = add i32 %v2_f6f0, -184
  %v2_f6f4 = inttoptr i32 %v1_f6f4 to i32*
  %v3_f6f4 = load i32, i32* %v2_f6f4, align 4
  %v1_f6f8 = urem i32 %v3_105d8, 32
  store i32 %v1_f6f8, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v7_f700 = shl i32 1, %v1_f6f8
  %v8_f700 = or i32 %v3_f6f4, %v7_f700
  store i32 %v8_f700, i32* %r2.global-to-local, align 4
  store i32 %v8_f700, i32* %v2_f6f4, align 4
  %v0_f708 = load i32, i32* @r6, align 4
  %v1_f708 = load i32, i32* %ip.global-to-local, align 4
  %v3_f708 = icmp uge i32 %v0_f708, %v1_f708
  store i1 %v3_f708, i1* %cpsr_c.global-to-local, align 1
  %v9_f708 = icmp eq i32 %v0_f708, %v1_f708
  store i1 %v9_f708, i1* %cpsr_z.global-to-local, align 1
  %v5_f70c = icmp slt i32 %v0_f708, %v1_f708
  br i1 %v5_f70c, label %bb368, label %bb369

bb368:                                            ; preds = %dec_label_pc_f6e0
  store i32 %v1_f708, i32* @r6, align 4
  br label %bb369

bb369:                                            ; preds = %.thread55, %bb375, %bb373, %bb418, %dec_label_pc_f7b8, %dec_label_pc_f6e0, %bb368
  %v3_f710 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_f710, i32* %r3.global-to-local, align 4
  %v1_f714 = add i32 %v3_f710, 1
  store i32 %v1_f714, i32* %r2.global-to-local, align 4
  %v2_f718 = icmp ugt i32 %v1_f714, 254
  store i1 %v2_f718, i1* %cpsr_c.global-to-local, align 1
  %v7_f718 = icmp eq i32 %v1_f714, 255
  store i1 %v7_f718, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_f714, i32* %stack_var_-52, align 4
  %v8_f720 = icmp sgt i32 %v1_f714, 255
  br i1 %v8_f720, label %dec_label_pc_f7c4, label %dec_label_pc_f724

dec_label_pc_f724:                                ; preds = %bb369, %dec_label_pc_f6c8
  %v0_f730 = phi i32 [ %v1_f714, %bb369 ], [ %v0_f6c8, %dec_label_pc_f6c8 ]
  store i32 ptrtoint (i32* @global_var_2165c.122 to i32), i32* %r0.global-to-local, align 4
  %v3_f728 = mul i32 %v0_f730, 256
  store i32 %v3_f728, i32* %r3.global-to-local, align 4
  %v2_f72c = load i32, i32* @global_var_2165c.122, align 4
  store i32 %v2_f72c, i32* %r1.global-to-local, align 4
  %v2_f734 = mul i32 %v0_f730, 288
  store i32 %v2_f734, i32* %r2.global-to-local, align 4
  %v2_f738 = add i32 %v2_f72c, %v2_f734
  store i32 %v2_f738, i32* @r4, align 4
  %v1_f73c = add i32 %v2_f738, 12
  %v2_f73c = inttoptr i32 %v1_f73c to i32*
  %v3_f73c = load i32, i32* %v2_f73c, align 4
  store i32 %v3_f73c, i32* %ip.global-to-local, align 4
  %v2_f740 = icmp ne i32 %v3_f73c, 0
  store i1 %v2_f740, i1* %cpsr_c.global-to-local, align 1
  %v7_f740 = icmp eq i32 %v3_f73c, 1
  store i1 %v7_f740, i1* %cpsr_z.global-to-local, align 1
  %v2_f744 = xor i1 %v2_f740, true
  %v3_f744 = or i1 %v7_f740, %v2_f744
  br i1 %v3_f744, label %bb370, label %bb371

bb370:                                            ; preds = %dec_label_pc_f724
  store i32 5, i32* %r1.global-to-local, align 4
  br label %bb371

bb371:                                            ; preds = %dec_label_pc_f724, %bb370
  %v1_f764165 = phi i32 [ %v2_f72c, %dec_label_pc_f724 ], [ 5, %bb370 ]
  %v2_f748 = xor i1 %v7_f740, true
  %v3_f748 = and i1 %v2_f740, %v2_f748
  br i1 %v3_f748, label %bb372, label %bb373

bb372:                                            ; preds = %bb371
  store i32 30, i32* %r1.global-to-local, align 4
  br label %bb373

bb373:                                            ; preds = %bb371, %bb372
  %v1_f764 = phi i32 [ %v1_f764165, %bb371 ], [ 30, %bb372 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f74c = icmp eq i32 %v3_f73c, 0
  store i1 %v2_f74c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f74c, label %bb369, label %dec_label_pc_f754

dec_label_pc_f754:                                ; preds = %bb373
  store i32 ptrtoint (i32* @global_var_1f610.110 to i32), i32* %r2.global-to-local, align 4
  %v2_f758 = load i32, i32* @global_var_1f610.110, align 4
  store i32 %v2_f758, i32* %r3.global-to-local, align 4
  %v1_f75c = add i32 %v2_f738, 8
  %v2_f75c = inttoptr i32 %v1_f75c to i32*
  %v3_f75c = load i32, i32* %v2_f75c, align 4
  store i32 %v3_f75c, i32* %r2.global-to-local, align 4
  %v2_f760 = sub i32 %v2_f758, %v3_f75c
  store i32 %v2_f760, i32* %r3.global-to-local, align 4
  %v3_f764 = icmp uge i32 %v2_f760, %v1_f764
  store i1 %v3_f764, i1* %cpsr_c.global-to-local, align 1
  %v9_f764 = icmp eq i32 %v2_f760, %v1_f764
  store i1 %v9_f764, i1* %cpsr_z.global-to-local, align 1
  %v2_f768 = xor i1 %v3_f764, true
  %v3_f768 = or i1 %v9_f764, %v2_f768
  br i1 %v3_f768, label %dec_label_pc_f6d8, label %dec_label_pc_f76c

dec_label_pc_f76c:                                ; preds = %dec_label_pc_f754
  %v1_f76c = add i32 %v2_f738, 4
  %v2_f76c = inttoptr i32 %v1_f76c to i32*
  %v3_f76c = load i32, i32* %v2_f76c, align 4
  store i32 %v3_f76c, i32* %r0.global-to-local, align 4
  %v1_f770 = call i32 @function_11548(i32 %v3_f76c)
  store i32 %v1_f770, i32* %r0.global-to-local, align 4
  %v0_f774 = load i32, i32* @r4, align 4
  %v1_f774 = add i32 %v0_f774, 12
  %v2_f774 = inttoptr i32 %v1_f774 to i32*
  %v3_f774 = load i32, i32* %v2_f774, align 4
  store i32 %v3_f774, i32* %r3.global-to-local, align 4
  %v2_f778 = icmp ugt i32 %v3_f774, 1
  store i1 %v2_f778, i1* %cpsr_c.global-to-local, align 1
  %v7_f778 = icmp eq i32 %v3_f774, 2
  store i1 %v7_f778, i1* %cpsr_z.global-to-local, align 1
  %v2_f77c = xor i1 %v2_f778, true
  %v3_f77c = or i1 %v7_f778, %v2_f77c
  br i1 %v3_f77c, label %bb374, label %.thread267

.thread267:                                       ; preds = %dec_label_pc_f76c
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_f784264268 = add i32 %v0_f774, 4
  %v3_f784265269 = inttoptr i32 %v2_f784264268 to i32*
  store i32 -1, i32* %v3_f784265269, align 4
  br label %bb375

bb374:                                            ; preds = %dec_label_pc_f76c
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_f784261 = add i32 %v0_f774, 4
  %v3_f784262 = inttoptr i32 %v2_f784261 to i32*
  store i32 -1, i32* %v3_f784262, align 4
  %v4_f788 = load i32, i32* %r3.global-to-local, align 4
  %v5_f788 = load i32, i32* @r4, align 4
  %v6_f788 = add i32 %v5_f788, 12
  %v7_f788 = inttoptr i32 %v6_f788 to i32*
  store i32 %v4_f788, i32* %v7_f788, align 4
  %v4_f78c = load i32, i32* %r3.global-to-local, align 4
  %v5_f78c = trunc i32 %v4_f78c to i8
  %v6_f78c = load i32, i32* @r4, align 4
  %v7_f78c = add i32 %v6_f78c, 284
  %v8_f78c = inttoptr i32 %v7_f78c to i8*
  store i8 %v5_f78c, i8* %v8_f78c, align 1
  %v0_f790.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_f790.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br label %bb375

bb375:                                            ; preds = %.thread267, %bb374
  %v1_f790 = phi i1 [ %v1_f790.pre, %bb374 ], [ %v2_f778, %.thread267 ]
  %v0_f790 = phi i1 [ %v0_f790.pre, %bb374 ], [ false, %.thread267 ]
  %v2_f790 = xor i1 %v1_f790, true
  %v3_f790 = or i1 %v0_f790, %v2_f790
  br i1 %v3_f790, label %bb369, label %dec_label_pc_f794

dec_label_pc_f794:                                ; preds = %bb375
  %v0_f794 = load i32, i32* @r4, align 4
  %v1_f794 = add i32 %v0_f794, 284
  %v2_f794 = inttoptr i32 %v1_f794 to i8*
  %v3_f794 = load i8, i8* %v2_f794, align 1
  %v4_f794 = zext i8 %v3_f794 to i32
  %v1_f798 = add nuw nsw i32 %v4_f794, 1
  %v1_f79c = urem i32 %v1_f798, 256
  store i32 %v1_f79c, i32* %r3.global-to-local, align 4
  %v2_f7a0 = icmp ugt i32 %v1_f79c, 9
  store i1 %v2_f7a0, i1* %cpsr_c.global-to-local, align 1
  %v7_f7a0 = icmp eq i32 %v1_f79c, 10
  store i1 %v7_f7a0, i1* %cpsr_z.global-to-local, align 1
  %v1_f7a4 = trunc i32 %v1_f798 to i8
  store i8 %v1_f7a4, i8* %v2_f794, align 1
  %v0_f7a8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_f7a8, label %.thread55, label %dec_label_pc_f7b8

.thread55:                                        ; preds = %dec_label_pc_f794
  %v1_f7a8 = load i32, i32* %r3.global-to-local, align 4
  %v2_f7a8 = add i32 %v1_f7a8, -10
  store i32 %v2_f7a8, i32* %r3.global-to-local, align 4
  %v2_f7ac = load i32, i32* @r4, align 4
  %v3_f7ac = add i32 %v2_f7ac, 12
  %v4_f7ac = inttoptr i32 %v3_f7ac to i32*
  store i32 %v2_f7a8, i32* %v4_f7ac, align 4
  %v1_f7b0 = load i32, i32* %r3.global-to-local, align 4
  %v2_f7b0 = trunc i32 %v1_f7b0 to i8
  %v3_f7b0 = load i32, i32* @r4, align 4
  %v4_f7b0 = add i32 %v3_f7b0, 284
  %v5_f7b0 = inttoptr i32 %v4_f7b0 to i8*
  store i8 %v2_f7b0, i8* %v5_f7b0, align 1
  %v0_f7b4.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_f7b4.pr.pr, label %bb369, label %dec_label_pc_f7b8

dec_label_pc_f7b8:                                ; preds = %dec_label_pc_f794, %.thread55
  %v0_f7b8 = load i32, i32* @r4, align 4
  store i32 %v0_f7b8, i32* @r0, align 4
  %v0_f7bc = call i32 @function_da44()
  store i32 %v0_f7bc, i32* %r0.global-to-local, align 4
  br label %bb369

dec_label_pc_f7c4:                                ; preds = %bb369
  store i32 0, i32* @r4, align 4
  store i32 1, i32* %stack_var_-68, align 4
  %v0_f7d0 = load i32, i32* @r5, align 4
  %v1_f7d0 = load i32, i32* @r6, align 4
  %v3_f7d0 = icmp uge i32 %v0_f7d0, %v1_f7d0
  store i1 %v3_f7d0, i1* %cpsr_c.global-to-local, align 1
  %v9_f7d0 = icmp eq i32 %v0_f7d0, %v1_f7d0
  store i1 %v9_f7d0, i1* %cpsr_z.global-to-local, align 1
  %v5_f7d4 = icmp slt i32 %v0_f7d0, %v1_f7d0
  %storemerge126 = select i1 %v5_f7d4, i32 %v1_f7d0, i32 %v0_f7d0
  %v2_f7e8 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_f7e8, i32* %ip.global-to-local, align 4
  %v2_f7ec = ptrtoint i32* %stack_var_-224 to i32
  store i32 %v2_f7ec, i32* %r1.global-to-local, align 4
  %v2_f7f0 = ptrtoint i32* %stack_var_-352 to i32
  store i32 %v2_f7f0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_f7f8 = add i32 %storemerge126, 1
  store i32 %v1_f7f8, i32* %r0.global-to-local, align 4
  %v5_f804 = call i32 @function_1126c(i32 %v1_f7f8, i32 %v2_f7ec, i32 %v2_f7f0, i32 0, i32 %v2_f7e8)
  %v0_f808 = load i32, i32* @r4, align 4
  store i32 %v0_f808, i32* %r0.global-to-local, align 4
  %v1_f80c = inttoptr i32 %v0_f808 to i32*
  %v2_f80c = call i32 @function_111c8(i32* %v1_f80c)
  store i32 %v2_f80c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1f610.110 to i32), i32* @lr, align 4
  %v0_f814 = load i32, i32* @r4, align 4
  store i32 %v0_f814, i32* %stack_var_-52, align 4
  store i32 %v2_f80c, i32* @global_var_1f610.110, align 4
  %v2_f8a0 = inttoptr i32 %stack_var_-1876.0 to i32*
  %v2_10178 = ptrtoint i32* %stack_var_-45 to i32
  %v2_1018c = ptrtoint i32* %stack_var_-77 to i32
  %v2_fe20 = ptrtoint i32* %stack_var_-60 to i32
  %v2_102bc = ptrtoint i32* %stack_var_-104 to i32
  %v2_104e8 = ptrtoint i32* %stack_var_-96 to i32
  %v2_10514 = ptrtoint i32* %stack_var_-56 to i32
  %v2_10540 = ptrtoint i32* %stack_var_-42 to i32
  br label %dec_label_pc_f81c

dec_label_pc_f81c:                                ; preds = %dec_label_pc_f98c, %dec_label_pc_f7c4
  %v0_f828 = phi i32 [ %v1_f990, %dec_label_pc_f98c ], [ %v0_f814, %dec_label_pc_f7c4 ]
  store i32 ptrtoint (i32* @global_var_2165c.122 to i32), i32* %r0.global-to-local, align 4
  %v3_f820 = mul i32 %v0_f828, 256
  store i32 %v3_f820, i32* %r3.global-to-local, align 4
  %v2_f824 = load i32, i32* @global_var_2165c.122, align 4
  store i32 %v2_f824, i32* %r1.global-to-local, align 4
  %v2_f82c = mul i32 %v0_f828, 288
  store i32 %v2_f82c, i32* %r2.global-to-local, align 4
  %v2_f830 = add i32 %v2_f824, %v2_f82c
  store i32 %v2_f830, i32* @r6, align 4
  %v1_f834 = add i32 %v2_f830, 4
  %v2_f834 = inttoptr i32 %v1_f834 to i32*
  %v3_f834 = load i32, i32* %v2_f834, align 4
  store i32 %v3_f834, i32* %r0.global-to-local, align 4
  %v2_f838 = icmp eq i32 %v3_f834, -1
  store i1 %v2_f838, i1* %cpsr_c.global-to-local, align 1
  %v7_f838 = icmp eq i32 %v3_f834, -1
  store i1 %v7_f838, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f838, label %dec_label_pc_f98c, label %dec_label_pc_f840

dec_label_pc_f840:                                ; preds = %dec_label_pc_f81c
  %v3_f840 = udiv i32 %v3_f834, 32
  store i32 %v2_105e4, i32* %r1.global-to-local, align 4
  %v3_f848 = mul nuw nsw i32 %v3_f840, 4
  store i32 %v3_f848, i32* @ip, align 4
  %v2_f84c = add i32 %v3_f848, %v2_105e4
  store i32 %v2_f84c, i32* %r2.global-to-local, align 4
  %v1_f850 = add i32 %v2_f84c, -312
  %v2_f850 = inttoptr i32 %v1_f850 to i32*
  %v3_f850 = load i32, i32* %v2_f850, align 4
  %v1_f854 = urem i32 %v3_f834, 32
  store i32 %v1_f854, i32* %r1.global-to-local, align 4
  %v2_f858 = add nsw i32 %v1_f854, -1
  %v3_f858 = shl i32 1, %v2_f858
  %v4_f858 = and i32 %v3_f850, %v3_f858
  %v5_f858 = icmp ne i32 %v4_f858, 0
  store i1 %v5_f858, i1* %cpsr_c.global-to-local, align 1
  %v6_f858 = lshr i32 %v3_f850, %v1_f854
  store i32 %v6_f858, i32* %r3.global-to-local, align 4
  %v1_f85c = urem i32 %v6_f858, 2
  %v2_f85c = icmp eq i32 %v1_f85c, 0
  store i1 %v2_f85c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f85c, label %dec_label_pc_f864, label %dec_label_pc_103a4

dec_label_pc_f864:                                ; preds = %dec_label_pc_f840, %dec_label_pc_10450
  %v1_f870 = phi i32 [ %v1_f854, %dec_label_pc_f840 ], [ %v1_f870.pre, %dec_label_pc_10450 ]
  %v0_f868 = phi i32 [ %v3_f848, %dec_label_pc_f840 ], [ %v0_f868.pre, %dec_label_pc_10450 ]
  store i32 %v2_105e4, i32* @lr, align 4
  %v2_f868 = add i32 %v0_f868, %v2_105e4
  store i32 %v2_f868, i32* %r2.global-to-local, align 4
  %v1_f86c = add i32 %v2_f868, -184
  %v2_f86c = inttoptr i32 %v1_f86c to i32*
  %v3_f86c = load i32, i32* %v2_f86c, align 4
  %v2_f870 = add i32 %v1_f870, -1
  %v3_f870 = shl i32 1, %v2_f870
  %v4_f870 = and i32 %v3_f86c, %v3_f870
  %v5_f870 = icmp ne i32 %v4_f870, 0
  store i1 %v5_f870, i1* %cpsr_c.global-to-local, align 1
  %v6_f870 = lshr i32 %v3_f86c, %v1_f870
  store i32 %v6_f870, i32* %r3.global-to-local, align 4
  %v1_f874 = urem i32 %v6_f870, 2
  %v2_f874 = icmp eq i32 %v1_f874, 0
  store i1 %v2_f874, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f874, label %dec_label_pc_f98c, label %dec_label_pc_f87c.preheader

dec_label_pc_f87c.preheader:                      ; preds = %dec_label_pc_f864
  %v0_f87c149 = load i32, i32* @r6, align 4
  %v1_f87c150 = add i32 %v0_f87c149, 12
  %v2_f87c151 = inttoptr i32 %v1_f87c150 to i32*
  %v3_f87c152 = load i32, i32* %v2_f87c151, align 4
  store i32 %v3_f87c152, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f880148154 = icmp eq i32 %v3_f87c152, 0
  store i1 %v2_f880148154, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f880148154, label %dec_label_pc_f98c, label %dec_label_pc_f888.lr.ph

dec_label_pc_f87c.loopexit:                       ; preds = %dec_label_pc_10260, %dec_label_pc_1007c, %dec_label_pc_ff08, %dec_label_pc_105b4
  %v0_f87c = load i32, i32* @r6, align 4
  %v1_f87c = add i32 %v0_f87c, 12
  %v2_f87c = inttoptr i32 %v1_f87c to i32*
  %v3_f87c = load i32, i32* %v2_f87c, align 4
  store i32 %v3_f87c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f880148 = icmp eq i32 %v3_f87c, 0
  store i1 %v2_f880148, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f880148, label %dec_label_pc_f98c, label %dec_label_pc_f888.lr.ph

dec_label_pc_f888.lr.ph:                          ; preds = %dec_label_pc_f87c.preheader, %dec_label_pc_f87c.loopexit
  %v0_f888180 = phi i32 [ %v0_f87c, %dec_label_pc_f87c.loopexit ], [ %v0_f87c149, %dec_label_pc_f87c.preheader ]
  br label %dec_label_pc_f888

dec_label_pc_f880thread-pre-split.thread:         ; preds = %dec_label_pc_fa44, %dec_label_pc_fb18, %dec_label_pc_fbec, %dec_label_pc_fcc0, %dec_label_pc_fd94
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f888

dec_label_pc_f880thread-pre-split.thread512:      ; preds = %dec_label_pc_fdf8, %dec_label_pc_fc50, %dec_label_pc_fb7c, %dec_label_pc_fd24, %dec_label_pc_faa8
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f888

dec_label_pc_f880thread-pre-split:                ; preds = %dec_label_pc_f900
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f880 = icmp eq i32 %v3_f900, 0
  store i1 %v2_f880, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f880, label %dec_label_pc_f98c, label %dec_label_pc_f888

dec_label_pc_f888:                                ; preds = %dec_label_pc_f880thread-pre-split.thread, %dec_label_pc_f880thread-pre-split, %dec_label_pc_f880thread-pre-split.thread512, %dec_label_pc_f888.lr.ph
  %v0_10350 = phi i32 [ %v0_f888180, %dec_label_pc_f888.lr.ph ], [ %v0_f900, %dec_label_pc_f880thread-pre-split.thread512 ], [ %v0_f900, %dec_label_pc_f880thread-pre-split ], [ %v0_f900, %dec_label_pc_f880thread-pre-split.thread ]
  %v1_f888 = add i32 %v0_10350, 24
  %v2_f888 = inttoptr i32 %v1_f888 to i32*
  %v3_f888 = load i32, i32* %v2_f888, align 4
  store i32 %v3_f888, i32* @r3, align 4
  %v2_f88c = icmp ugt i32 %v3_f888, 255
  store i1 %v2_f88c, i1* %cpsr_c.global-to-local, align 1
  %v7_f88c = icmp eq i32 %v3_f888, 256
  store i1 %v7_f88c, i1* %cpsr_z.global-to-local, align 1
  %.pre = add i32 %v0_10350, 28
  store i32 %.pre, i32* @fp, align 4
  br i1 %v7_f88c, label %dec_label_pc_10350, label %dec_label_pc_f898

dec_label_pc_f898:                                ; preds = %dec_label_pc_f888, %dec_label_pc_10350
  store i32 %stack_var_-1876.0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* %v2_f8a0, align 4
  %v0_f8a4 = load i32, i32* @r6, align 4
  %v1_f8a4 = add i32 %v0_f8a4, 24
  %v2_f8a4 = inttoptr i32 %v1_f8a4 to i32*
  %v3_f8a4 = load i32, i32* %v2_f8a4, align 4
  store i32 %v3_f8a4, i32* %r2.global-to-local, align 4
  %v0_f8a8 = load i32, i32* @fp, align 4
  %v2_f8a8 = add i32 %v0_f8a8, %v3_f8a4
  store i32 %v2_f8a8, i32* @r4, align 4
  %v1_f8ac = add i32 %v0_f8a4, 4
  %v2_f8ac = inttoptr i32 %v1_f8ac to i32*
  %v3_f8ac = load i32, i32* %v2_f8ac, align 4
  store i32 %v3_f8ac, i32* %r0.global-to-local, align 4
  %v1_f8b0 = sub i32 256, %v3_f8a4
  store i32 %v1_f8b0, i32* %r2.global-to-local, align 4
  store i32 %v2_f8a8, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_f8bc = call i32 @function_11c00(i32 %v3_f8ac, i32 %v2_f8a8, i32 %v1_f8b0, i32 16384)
  store i32 %v4_f8bc, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f8c0 = icmp eq i32 %v4_f8bc, 0
  store i1 %v2_f8c0, i1* %cpsr_z.global-to-local, align 1
  %tmp376 = icmp slt i32 %v4_f8bc, 1
  br i1 %tmp376, label %dec_label_pc_f938, label %dec_label_pc_f8c8

dec_label_pc_f8c8:                                ; preds = %dec_label_pc_f898
  %v0_f8c8 = load i32, i32* @r5, align 4
  store i32 %v0_f8c8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_f8cc

dec_label_pc_f8cc:                                ; preds = %.thread62, %dec_label_pc_f8c8
  %v3_f8d8 = phi i32 [ %v1_f8dc, %.thread62 ], [ %v0_f8c8, %dec_label_pc_f8c8 ]
  %v1_f8cc = load i32, i32* @r4, align 4
  %v2_f8cc = add i32 %v1_f8cc, %v3_f8d8
  %v3_f8cc = inttoptr i32 %v2_f8cc to i8*
  %v4_f8cc = load i8, i8* %v3_f8cc, align 1
  %v6_f8cc = zext i8 %v4_f8cc to i32
  store i32 %v6_f8cc, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f8d0 = icmp eq i8 %v4_f8cc, 0
  store i1 %v2_f8d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f8d0, label %bb377, label %.thread62

bb377:                                            ; preds = %dec_label_pc_f8cc
  %v2_f8d4 = add nuw nsw i32 %v6_f8cc, 65
  store i32 %v2_f8d4, i32* %r3.global-to-local, align 4
  %v2_f8d8 = trunc i32 %v2_f8d4 to i8
  store i8 %v2_f8d8, i8* %v3_f8cc, align 1
  %v0_f8dc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %.thread62

.thread62:                                        ; preds = %dec_label_pc_f8cc, %bb377
  %v0_f8dc = phi i32 [ %v3_f8d8, %dec_label_pc_f8cc ], [ %v0_f8dc.pre, %bb377 ]
  %v1_f8dc = add i32 %v0_f8dc, 1
  store i32 %v1_f8dc, i32* %r2.global-to-local, align 4
  %v3_f8e0 = icmp uge i32 %v1_f8dc, %v4_f8bc
  store i1 %v3_f8e0, i1* %cpsr_c.global-to-local, align 1
  %v9_f8e0 = icmp eq i32 %v1_f8dc, %v4_f8bc
  store i1 %v9_f8e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_f8e0, label %dec_label_pc_f8e8, label %dec_label_pc_f8cc

dec_label_pc_f8e8:                                ; preds = %.thread62, %dec_label_pc_f93c
  store i32 ptrtoint (i32* @global_var_1f610.110 to i32), i32* @ip, align 4
  %v0_f8ec = load i32, i32* @r6, align 4
  %v1_f8ec = add i32 %v0_f8ec, 24
  %v2_f8ec = inttoptr i32 %v1_f8ec to i32*
  %v3_f8ec = load i32, i32* %v2_f8ec, align 4
  %v2_f8f0 = load i32, i32* @global_var_1f610.110, align 4
  store i32 %v2_f8f0, i32* %r2.global-to-local, align 4
  %v2_f8f4 = add i32 %v3_f8ec, %v4_f8bc
  store i32 %v2_f8f4, i32* %r3.global-to-local, align 4
  store i32 %v2_f8f4, i32* %v2_f8ec, align 4
  %v0_f8fc = load i32, i32* %r2.global-to-local, align 4
  %v1_f8fc = load i32, i32* @r6, align 4
  %v2_f8fc = add i32 %v1_f8fc, 8
  %v3_f8fc = inttoptr i32 %v2_f8fc to i32*
  store i32 %v0_f8fc, i32* %v3_f8fc, align 4
  br label %dec_label_pc_f900

dec_label_pc_f900:                                ; preds = %dec_label_pc_fa1c, %dec_label_pc_f8e8
  %v0_f900 = load i32, i32* @r6, align 4
  %v1_f900 = add i32 %v0_f900, 12
  %v2_f900 = inttoptr i32 %v1_f900 to i32*
  %v3_f900 = load i32, i32* %v2_f900, align 4
  store i32 %v3_f900, i32* %r0.global-to-local, align 4
  %v1_f904 = add i32 %v3_f900, -2
  store i32 %v1_f904, i32* @r3, align 4
  %v7_f908 = icmp eq i32 %v1_f904, 8
  store i1 %v7_f908, i1* %cpsr_z.global-to-local, align 1
  %v5_f90c = and i32 %v1_f904, 1073741824
  %v6_f90c = icmp ne i32 %v5_f90c, 0
  store i1 %v6_f90c, i1* %cpsr_c.global-to-local, align 1
  switch i32 %v3_f900, label %dec_label_pc_f880thread-pre-split [
    i32 2, label %dec_label_pc_100a4
    i32 3, label %dec_label_pc_fe68
    i32 4, label %dec_label_pc_ff14
    i32 5, label %dec_label_pc_fd94
    i32 6, label %dec_label_pc_fbec
    i32 7, label %dec_label_pc_fb18
    i32 8, label %dec_label_pc_fcc0
    i32 9, label %dec_label_pc_fa44
    i32 10, label %dec_label_pc_f9a4
  ]

dec_label_pc_f938:                                ; preds = %dec_label_pc_f898
  br i1 %v2_f8c0, label %dec_label_pc_10608, label %dec_label_pc_f93c

dec_label_pc_f93c:                                ; preds = %dec_label_pc_f938
  %v3_f93c = icmp eq i32 %v4_f8bc, -1
  store i1 %v3_f93c, i1* %cpsr_c.global-to-local, align 1
  %v8_f93c = icmp eq i32 %v4_f8bc, -1
  store i1 %v8_f93c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_f93c, label %dec_label_pc_f944, label %dec_label_pc_f8e8

dec_label_pc_f944:                                ; preds = %dec_label_pc_f93c
  store i32 %stack_var_-1876.0, i32* %r2.global-to-local, align 4
  %v2_f948 = load i32, i32* %v2_f8a0, align 4
  store i32 %v2_f948, i32* %r3.global-to-local, align 4
  %v2_f94c = icmp ugt i32 %v2_f948, 10
  store i1 %v2_f94c, i1* %cpsr_c.global-to-local, align 1
  %v7_f94c = icmp eq i32 %v2_f948, 11
  store i1 %v7_f94c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f94c, label %dec_label_pc_f98c, label %dec_label_pc_f954

dec_label_pc_f954:                                ; preds = %dec_label_pc_f944, %dec_label_pc_10608
  %v0_f954 = load i32, i32* @r6, align 4
  %v1_f954 = add i32 %v0_f954, 4
  %v2_f954 = inttoptr i32 %v1_f954 to i32*
  %v3_f954 = load i32, i32* %v2_f954, align 4
  store i32 %v3_f954, i32* %r0.global-to-local, align 4
  %v1_f958 = call i32 @function_11548(i32 %v3_f954)
  store i32 %v1_f958, i32* %r0.global-to-local, align 4
  %v0_f95c = load i32, i32* @r6, align 4
  %v1_f95c = add i32 %v0_f95c, 284
  %v2_f95c = inttoptr i32 %v1_f95c to i8*
  %v3_f95c = load i8, i8* %v2_f95c, align 1
  %v4_f95c = zext i8 %v3_f95c to i32
  %v1_f960 = add nuw nsw i32 %v4_f95c, 1
  %v1_f964 = urem i32 %v1_f960, 256
  store i32 %v1_f964, i32* %r3.global-to-local, align 4
  %v2_f968 = icmp ugt i32 %v1_f964, 8
  store i1 %v2_f968, i1* %cpsr_c.global-to-local, align 1
  %v7_f968 = icmp eq i32 %v1_f964, 9
  store i1 %v7_f968, i1* %cpsr_z.global-to-local, align 1
  %v1_f96c = trunc i32 %v1_f960 to i8
  store i8 %v1_f96c, i8* %v2_f95c, align 1
  store i32 -1, i32* %r2.global-to-local, align 4
  %v0_f974 = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_f974 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v2_f974 = xor i1 %v1_f974, true
  %v3_f974 = and i1 %v0_f974, %v2_f974
  br i1 %v3_f974, label %bb378, label %.thread281

.thread281:                                       ; preds = %dec_label_pc_f954
  %v1_f978277282 = load i32, i32* @r6, align 4
  %v2_f978278283 = add i32 %v1_f978277282, 4
  %v3_f978279284 = inttoptr i32 %v2_f978278283 to i32*
  store i32 -1, i32* %v3_f978279284, align 4
  br label %bb379

bb378:                                            ; preds = %dec_label_pc_f954
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_f978273 = load i32, i32* @r6, align 4
  %v2_f978274 = add i32 %v1_f978273, 4
  %v3_f978275 = inttoptr i32 %v2_f978274 to i32*
  store i32 -1, i32* %v3_f978275, align 4
  %v4_f97c = load i32, i32* %r3.global-to-local, align 4
  %v5_f97c = load i32, i32* @r6, align 4
  %v6_f97c = add i32 %v5_f97c, 12
  %v7_f97c = inttoptr i32 %v6_f97c to i32*
  store i32 %v4_f97c, i32* %v7_f97c, align 4
  %v4_f980 = load i32, i32* %r3.global-to-local, align 4
  %v5_f980 = trunc i32 %v4_f980 to i8
  %v6_f980 = load i32, i32* @r6, align 4
  %v7_f980 = add i32 %v6_f980, 284
  %v8_f980 = inttoptr i32 %v7_f980 to i8*
  store i8 %v5_f980, i8* %v8_f980, align 1
  %v0_f984.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_f984.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br label %bb379

bb379:                                            ; preds = %.thread281, %bb378
  %v1_f988 = phi i1 [ %v1_f984.pre, %bb378 ], [ %v0_f974, %.thread281 ]
  %v0_f988 = phi i1 [ %v0_f984.pre, %bb378 ], [ %v1_f974, %.thread281 ]
  %v2_f984 = xor i1 %v1_f988, true
  %v3_f984 = or i1 %v0_f988, %v2_f984
  br i1 %v3_f984, label %bb380, label %bb381

bb380:                                            ; preds = %bb379
  %v4_f984 = load i32, i32* @r6, align 4
  store i32 %v4_f984, i32* %r0.global-to-local, align 4
  br label %bb381

bb381:                                            ; preds = %bb379, %bb380
  store i32 63884, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_f984, i32 ptrtoint (i32* @global_var_da44.591 to i32))
  br label %dec_label_pc_f98c

dec_label_pc_f98c:                                ; preds = %dec_label_pc_f87c.loopexit, %dec_label_pc_f880thread-pre-split, %dec_label_pc_f87c.preheader, %dec_label_pc_f944, %dec_label_pc_f864, %dec_label_pc_f81c, %dec_label_pc_10470, %bb381
  %v3_f98c = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_f98c, i32* %r3.global-to-local, align 4
  %v1_f990 = add i32 %v3_f98c, 1
  store i32 %v1_f990, i32* @r4, align 4
  %v2_f994 = icmp ugt i32 %v1_f990, 254
  store i1 %v2_f994, i1* %cpsr_c.global-to-local, align 1
  %v7_f994 = icmp eq i32 %v1_f990, 255
  store i1 %v7_f994, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_f990, i32* %stack_var_-52, align 4
  %v7_f99c = icmp slt i32 %v1_f990, 256
  br i1 %v7_f99c, label %dec_label_pc_f81c, label %dec_label_pc_f238

dec_label_pc_f9a4:                                ; preds = %dec_label_pc_f900
  store i32 22, i32* %r0.global-to-local, align 4
  %v1_f9a8 = call i32 @function_106dc(i32 22)
  store i32 %v2_fe20, i32* %r1.global-to-local, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v3_f9b8 = call i32 @function_10618(i32 22, i32* nonnull %stack_var_-60)
  %v3_f9bc = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_f9b8, i32* %r2.global-to-local, align 4
  %v1_f9c4 = add i32 %v3_f9bc, -1
  store i32 %v1_f9c4, i32* %r3.global-to-local, align 4
  %v0_f9c8 = load i32, i32* @fp, align 4
  store i32 %v0_f9c8, i32* %r0.global-to-local, align 4
  %v0_f9cc = load i32, i32* @r6, align 4
  %v1_f9cc = add i32 %v0_f9cc, 24
  %v2_f9cc = inttoptr i32 %v1_f9cc to i32*
  %v3_f9cc = load i32, i32* %v2_f9cc, align 4
  store i32 %v3_f9cc, i32* %r1.global-to-local, align 4
  %v4_f9d0 = call i32 @function_10bf4(i32 %v0_f9c8, i32 %v3_f9cc, i32 %v3_f9b8, i32 %v1_f9c4)
  %v2_f9d4 = icmp eq i32 %v4_f9d0, -1
  store i1 %v2_f9d4, i1* %cpsr_c.global-to-local, align 1
  %v7_f9d4 = icmp eq i32 %v4_f9d0, -1
  store i1 %v7_f9d4, i1* %cpsr_z.global-to-local, align 1
  store i32 22, i32* %r0.global-to-local, align 4
  %v1_10264 = call i32 @function_1063c(i32 22)
  br i1 %v7_f9d4, label %dec_label_pc_10260, label %dec_label_pc_f9dc

dec_label_pc_f9dc:                                ; preds = %dec_label_pc_f9a4
  store i32 %v1_10264, i32* %r0.global-to-local, align 4
  %v0_f9e4 = load i32, i32* @r6, align 4
  %v1_f9e4 = add i32 %v0_f9e4, 4
  %v2_f9e4 = inttoptr i32 %v1_f9e4 to i32*
  %v3_f9e4 = load i32, i32* %v2_f9e4, align 4
  store i32 %v3_f9e4, i32* %r0.global-to-local, align 4
  %v1_f9e8 = call i32 @function_11548(i32 %v3_f9e4)
  store i32 %v1_f9e8, i32* %r0.global-to-local, align 4
  %v0_f9ec = load i32, i32* @r6, align 4
  %v1_f9ec = add i32 %v0_f9ec, 284
  %v2_f9ec = inttoptr i32 %v1_f9ec to i8*
  %v3_f9ec = load i8, i8* %v2_f9ec, align 1
  %v4_f9ec = zext i8 %v3_f9ec to i32
  %v1_f9f0 = add nuw nsw i32 %v4_f9ec, 1
  %v1_f9f4 = urem i32 %v1_f9f0, 256
  store i32 %v1_f9f4, i32* @r3, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_f9fc = icmp ugt i32 %v1_f9f4, 9
  store i1 %v2_f9fc, i1* %cpsr_c.global-to-local, align 1
  %v7_f9fc = icmp eq i32 %v1_f9f4, 10
  store i1 %v7_f9fc, i1* %cpsr_z.global-to-local, align 1
  %v2_fa00 = add i32 %v0_f9ec, 4
  %v3_fa00 = inttoptr i32 %v2_fa00 to i32*
  store i32 -1, i32* %v3_fa00, align 4
  %v0_fa04 = load i32, i32* @r3, align 4
  %v1_fa04 = trunc i32 %v0_fa04 to i8
  %v2_fa04 = load i32, i32* @r6, align 4
  %v3_fa04 = add i32 %v2_fa04, 284
  %v4_fa04 = inttoptr i32 %v3_fa04 to i8*
  store i8 %v1_fa04, i8* %v4_fa04, align 1
  %v0_fa08 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_fa08, label %dec_label_pc_fa0c, label %dec_label_pc_10398

dec_label_pc_fa0c:                                ; preds = %dec_label_pc_f9dc
  store i32 0, i32* @r3, align 4
  %v1_fa10 = load i32, i32* @r6, align 4
  %v2_fa10 = add i32 %v1_fa10, 12
  %v3_fa10 = inttoptr i32 %v2_fa10 to i32*
  store i32 0, i32* %v3_fa10, align 4
  %v0_fa14 = load i32, i32* @r3, align 4
  %v1_fa14 = trunc i32 %v0_fa14 to i8
  %v2_fa14 = load i32, i32* @r6, align 4
  %v3_fa14 = add i32 %v2_fa14, 284
  %v4_fa14 = inttoptr i32 %v3_fa14 to i8*
  store i8 %v1_fa14, i8* %v4_fa14, align 1
  br label %dec_label_pc_fa18

dec_label_pc_fa18:                                ; preds = %dec_label_pc_10398, %dec_label_pc_fa0c
  store i32 -1, i32* @r8, align 4
  br label %dec_label_pc_fa1c

dec_label_pc_fa1c:                                ; preds = %dec_label_pc_ff08, %dec_label_pc_fe10, %dec_label_pc_fd3c, %dec_label_pc_fc68, %dec_label_pc_fb94, %dec_label_pc_fac0, %dec_label_pc_fa18
  %v0_fa1c = load i32, i32* @r6, align 4
  %v1_fa1c = add i32 %v0_fa1c, 24
  %v2_fa1c = inttoptr i32 %v1_fa1c to i32*
  %v3_fa1c = load i32, i32* %v2_fa1c, align 4
  %v0_fa20 = load i32, i32* @r8, align 4
  %v2_fa20 = sub i32 %v0_fa20, %v3_fa1c
  %v3_fa20 = icmp uge i32 %v0_fa20, %v3_fa1c
  store i1 %v3_fa20, i1* %cpsr_c.global-to-local, align 1
  %v4_fa20 = xor i32 %v0_fa20, %v3_fa1c
  %v5_fa20 = xor i32 %v2_fa20, %v0_fa20
  %v6_fa20 = and i32 %v5_fa20, %v4_fa20
  %v7_fa20 = icmp slt i32 %v6_fa20, 0
  %v8_fa20 = icmp slt i32 %v2_fa20, 0
  %v9_fa20 = icmp eq i32 %v0_fa20, %v3_fa1c
  store i1 %v9_fa20, i1* %cpsr_z.global-to-local, align 1
  %v2_fa24 = xor i1 %v8_fa20, %v7_fa20
  %v0_fa20.v3_fa1c = select i1 %v2_fa24, i32 %v0_fa20, i32 %v3_fa1c
  store i32 %v0_fa20.v3_fa1c, i32* %r1.global-to-local, align 4
  %v2_fa2c = sub i32 %v3_fa1c, %v0_fa20.v3_fa1c
  store i32 %v2_fa2c, i32* @r2, align 4
  store i32 %v2_fa2c, i32* %v2_fa1c, align 4
  %v0_fa34 = load i32, i32* @fp, align 4
  %v1_fa34 = load i32, i32* %r1.global-to-local, align 4
  %v2_fa34 = add i32 %v1_fa34, %v0_fa34
  store i32 %v2_fa34, i32* @r1, align 4
  store i32 %v0_fa34, i32* @r0, align 4
  %v3_fa3c = call i32 @function_11a60(i32 %v0_fa34, i32 %v2_fa34, i32 %v2_fa2c)
  store i32 %v3_fa3c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f900

dec_label_pc_fa44:                                ; preds = %dec_label_pc_f900
  %v1_fa44 = add i32 %v0_f900, 24
  %v2_fa44 = inttoptr i32 %v1_fa44 to i32*
  %v3_fa44 = load i32, i32* %v2_fa44, align 4
  store i32 %v3_fa44, i32* %r2.global-to-local, align 4
  %v1_fa48 = add i32 %v3_fa44, -1
  store i32 %v1_fa48, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fa4c = icmp eq i32 %v1_fa48, 0
  store i1 %v2_fa4c, i1* %cpsr_z.global-to-local, align 1
  %tmp384 = icmp slt i32 %v1_fa48, 1
  br i1 %tmp384, label %dec_label_pc_f880thread-pre-split.thread, label %dec_label_pc_fa54

dec_label_pc_fa54:                                ; preds = %dec_label_pc_fa44
  %v2_fa54 = add i32 %v1_fa48, %v0_f900
  store i32 %v2_fa54, i32* %r3.global-to-local, align 4
  %v1_fa58 = add i32 %v2_fa54, 28
  %v2_fa58 = inttoptr i32 %v1_fa58 to i8*
  %v3_fa58 = load i8, i8* %v2_fa58, align 1
  %v4_fa58 = zext i8 %v3_fa58 to i32
  store i32 %v4_fa58, i32* %r3.global-to-local, align 4
  %v2_fa5c = icmp ugt i8 %v3_fa58, 61
  store i1 %v2_fa5c, i1* %cpsr_c.global-to-local, align 1
  %v7_fa5c = icmp eq i8 %v3_fa58, 62
  store i1 %v7_fa5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fa5c, label %dec_label_pc_fac0, label %bb385

bb385:                                            ; preds = %dec_label_pc_fa54
  %v3_fa60 = icmp ugt i8 %v3_fa58, 57
  store i1 %v3_fa60, i1* %cpsr_c.global-to-local, align 1
  %v8_fa60 = icmp eq i8 %v3_fa58, 58
  store i1 %v8_fa60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fa60, label %dec_label_pc_fac0, label %dec_label_pc_fa68

dec_label_pc_fa68:                                ; preds = %bb385
  %v2_fa68 = icmp ugt i8 %v3_fa58, 35
  store i1 %v2_fa68, i1* %cpsr_c.global-to-local, align 1
  %v7_fa68 = icmp eq i8 %v3_fa58, 36
  store i1 %v7_fa68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fa68, label %dec_label_pc_fac0, label %dec_label_pc_fa70

dec_label_pc_fa70:                                ; preds = %dec_label_pc_fa68
  %v2_fa70 = icmp ugt i8 %v3_fa58, 34
  store i1 %v2_fa70, i1* %cpsr_c.global-to-local, align 1
  %v7_fa70 = icmp eq i8 %v3_fa58, 35
  store i1 %v7_fa70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fa70, label %dec_label_pc_fac0, label %dec_label_pc_fa78

dec_label_pc_fa78:                                ; preds = %dec_label_pc_fa70
  %v2_fa78 = icmp ugt i8 %v3_fa58, 36
  store i1 %v2_fa78, i1* %cpsr_c.global-to-local, align 1
  %v7_fa78 = icmp eq i8 %v3_fa58, 37
  store i1 %v7_fa78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fa78, label %dec_label_pc_fac0, label %dec_label_pc_faa8.preheader

dec_label_pc_faa8.preheader:                      ; preds = %dec_label_pc_fa78
  %v3_fa7c = add i32 %v0_f900, 28
  %v2_fa80 = add i32 %v3_fa7c, %v3_fa44
  store i32 %v2_fa80, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_faa8

dec_label_pc_fa8c:                                ; preds = %bb386
  %v2_fa8c = icmp ugt i8 %v3_fab0, 35
  store i1 %v2_fa8c, i1* %cpsr_c.global-to-local, align 1
  %v7_fa8c = icmp eq i8 %v3_fab0, 36
  store i1 %v7_fa8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fa8c, label %dec_label_pc_fac0, label %dec_label_pc_fa94

dec_label_pc_fa94:                                ; preds = %dec_label_pc_fa8c
  %v2_fa94 = icmp ugt i8 %v3_fab0, 34
  store i1 %v2_fa94, i1* %cpsr_c.global-to-local, align 1
  %v7_fa94 = icmp eq i8 %v3_fab0, 35
  store i1 %v7_fa94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fa94, label %dec_label_pc_fac0, label %dec_label_pc_fa9c

dec_label_pc_fa9c:                                ; preds = %dec_label_pc_fa94
  %v2_fa9c = icmp ugt i8 %v3_fab0, 36
  store i1 %v2_fa9c, i1* %cpsr_c.global-to-local, align 1
  %v7_fa9c = icmp eq i8 %v3_fab0, 37
  store i1 %v7_fa9c, i1* %cpsr_z.global-to-local, align 1
  %v1_faa0 = add i32 %v0_faa0, -1
  store i32 %v1_faa0, i32* %r3.global-to-local, align 4
  br i1 %v7_fa9c, label %dec_label_pc_fac0, label %dec_label_pc_faa8

dec_label_pc_faa8:                                ; preds = %dec_label_pc_faa8.preheader, %dec_label_pc_fa9c
  %v0_faa0 = phi i32 [ %v2_fa80, %dec_label_pc_faa8.preheader ], [ %v1_faa0, %dec_label_pc_fa9c ]
  %v0_faa8 = phi i32 [ %v1_fa48, %dec_label_pc_faa8.preheader ], [ %v1_faa8, %dec_label_pc_fa9c ]
  %v1_faa8 = add i32 %v0_faa8, -1
  store i32 %v1_faa8, i32* %r1.global-to-local, align 4
  %v2_faa8 = icmp ne i32 %v0_faa8, 0
  store i1 %v2_faa8, i1* %cpsr_c.global-to-local, align 1
  %v7_faa8 = icmp eq i32 %v0_faa8, 1
  store i1 %v7_faa8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_faa8, label %dec_label_pc_f880thread-pre-split.thread512, label %dec_label_pc_fab0

dec_label_pc_fab0:                                ; preds = %dec_label_pc_faa8
  %v1_fab0 = add i32 %v0_faa0, -2
  %v2_fab0 = inttoptr i32 %v1_fab0 to i8*
  %v3_fab0 = load i8, i8* %v2_fab0, align 1
  %v4_fab0 = zext i8 %v3_fab0 to i32
  store i32 %v4_fab0, i32* %r2.global-to-local, align 4
  %v2_fab4 = icmp ugt i8 %v3_fab0, 61
  store i1 %v2_fab4, i1* %cpsr_c.global-to-local, align 1
  %v7_fab4 = icmp eq i8 %v3_fab0, 62
  store i1 %v7_fab4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fab4, label %dec_label_pc_fac0, label %bb386

bb386:                                            ; preds = %dec_label_pc_fab0
  %v3_fab8 = icmp ugt i8 %v3_fab0, 57
  store i1 %v3_fab8, i1* %cpsr_c.global-to-local, align 1
  %v8_fab8 = icmp eq i8 %v3_fab0, 58
  store i1 %v8_fab8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fab8, label %dec_label_pc_fac0, label %dec_label_pc_fa8c

dec_label_pc_fac0:                                ; preds = %dec_label_pc_fab0, %bb386, %dec_label_pc_fa9c, %dec_label_pc_fa94, %dec_label_pc_fa8c, %dec_label_pc_fa78, %dec_label_pc_fa54, %dec_label_pc_fa70, %dec_label_pc_fa68, %bb385
  %v0_fac4 = phi i32 [ %v1_fa48, %dec_label_pc_fa78 ], [ %v1_fa48, %dec_label_pc_fa54 ], [ %v1_fa48, %dec_label_pc_fa70 ], [ %v1_fa48, %dec_label_pc_fa68 ], [ %v1_fa48, %bb385 ], [ %v1_faa8, %dec_label_pc_fa8c ], [ %v1_faa8, %dec_label_pc_fa94 ], [ %v1_faa8, %dec_label_pc_fa9c ], [ %v1_faa8, %bb386 ], [ %v1_faa8, %dec_label_pc_fab0 ]
  store i32 19, i32* %r0.global-to-local, align 4
  %v1_fac4 = add i32 %v0_fac4, 1
  store i32 %v1_fac4, i32* @r8, align 4
  %v1_fac8 = call i32 @function_106dc(i32 19)
  store i32 %v2_fe20, i32* %r1.global-to-local, align 4
  store i32 19, i32* %r0.global-to-local, align 4
  %v3_fad8 = call i32 @function_10618(i32 19, i32* nonnull %stack_var_-60)
  store i32 %v3_fad8, i32* %r0.global-to-local, align 4
  %v3_fadc = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_fadc, i32* %r2.global-to-local, align 4
  store i32 %v3_fad8, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_fae8 = load i32, i32* @r6, align 4
  %v1_fae8 = add i32 %v0_fae8, 4
  %v2_fae8 = inttoptr i32 %v1_fae8 to i32*
  %v3_fae8 = load i32, i32* %v2_fae8, align 4
  store i32 %v3_fae8, i32* %r0.global-to-local, align 4
  %v4_faec = call i32 @function_11c74(i32 %v3_fae8, i32 %v3_fad8, i32 %v3_fadc, i32 16384)
  store i32 %v4_faec, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_16dfc.593 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_fafc = load i32, i32* @r6, align 4
  %v1_fafc = add i32 %v0_fafc, 4
  %v2_fafc = inttoptr i32 %v1_fafc to i32*
  %v3_fafc = load i32, i32* %v2_fafc, align 4
  store i32 %v3_fafc, i32* %r0.global-to-local, align 4
  %v4_fb00 = call i32 @function_11c74(i32 %v3_fafc, i32 ptrtoint ([3 x i8]* @global_var_16dfc.593 to i32), i32 2, i32 16384)
  store i32 19, i32* %r0.global-to-local, align 4
  %v1_fb08 = call i32 @function_1063c(i32 19)
  store i32 %v1_fb08, i32* %r0.global-to-local, align 4
  store i32 10, i32* @r3, align 4
  %v1_fb10 = load i32, i32* @r6, align 4
  %v2_fb10 = add i32 %v1_fb10, 12
  %v3_fb10 = inttoptr i32 %v2_fb10 to i32*
  store i32 10, i32* %v3_fb10, align 4
  br label %dec_label_pc_fa1c

dec_label_pc_fb18:                                ; preds = %dec_label_pc_f900
  %v1_fb18 = add i32 %v0_f900, 24
  %v2_fb18 = inttoptr i32 %v1_fb18 to i32*
  %v3_fb18 = load i32, i32* %v2_fb18, align 4
  store i32 %v3_fb18, i32* %r2.global-to-local, align 4
  %v1_fb1c = add i32 %v3_fb18, -1
  store i32 %v1_fb1c, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fb20 = icmp eq i32 %v1_fb1c, 0
  store i1 %v2_fb20, i1* %cpsr_z.global-to-local, align 1
  %tmp387 = icmp slt i32 %v1_fb1c, 1
  br i1 %tmp387, label %dec_label_pc_f880thread-pre-split.thread, label %dec_label_pc_fb28

dec_label_pc_fb28:                                ; preds = %dec_label_pc_fb18
  %v2_fb28 = add i32 %v1_fb1c, %v0_f900
  store i32 %v2_fb28, i32* %r3.global-to-local, align 4
  %v1_fb2c = add i32 %v2_fb28, 28
  %v2_fb2c = inttoptr i32 %v1_fb2c to i8*
  %v3_fb2c = load i8, i8* %v2_fb2c, align 1
  %v4_fb2c = zext i8 %v3_fb2c to i32
  store i32 %v4_fb2c, i32* %r3.global-to-local, align 4
  %v2_fb30 = icmp ugt i8 %v3_fb2c, 61
  store i1 %v2_fb30, i1* %cpsr_c.global-to-local, align 1
  %v7_fb30 = icmp eq i8 %v3_fb2c, 62
  store i1 %v7_fb30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb30, label %dec_label_pc_fb94, label %bb388

bb388:                                            ; preds = %dec_label_pc_fb28
  %v3_fb34 = icmp ugt i8 %v3_fb2c, 57
  store i1 %v3_fb34, i1* %cpsr_c.global-to-local, align 1
  %v8_fb34 = icmp eq i8 %v3_fb2c, 58
  store i1 %v8_fb34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fb34, label %dec_label_pc_fb94, label %dec_label_pc_fb3c

dec_label_pc_fb3c:                                ; preds = %bb388
  %v2_fb3c = icmp ugt i8 %v3_fb2c, 35
  store i1 %v2_fb3c, i1* %cpsr_c.global-to-local, align 1
  %v7_fb3c = icmp eq i8 %v3_fb2c, 36
  store i1 %v7_fb3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb3c, label %dec_label_pc_fb94, label %dec_label_pc_fb44

dec_label_pc_fb44:                                ; preds = %dec_label_pc_fb3c
  %v2_fb44 = icmp ugt i8 %v3_fb2c, 34
  store i1 %v2_fb44, i1* %cpsr_c.global-to-local, align 1
  %v7_fb44 = icmp eq i8 %v3_fb2c, 35
  store i1 %v7_fb44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb44, label %dec_label_pc_fb94, label %dec_label_pc_fb4c

dec_label_pc_fb4c:                                ; preds = %dec_label_pc_fb44
  %v2_fb4c = icmp ugt i8 %v3_fb2c, 36
  store i1 %v2_fb4c, i1* %cpsr_c.global-to-local, align 1
  %v7_fb4c = icmp eq i8 %v3_fb2c, 37
  store i1 %v7_fb4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb4c, label %dec_label_pc_fb94, label %dec_label_pc_fb7c.preheader

dec_label_pc_fb7c.preheader:                      ; preds = %dec_label_pc_fb4c
  %v3_fb50 = add i32 %v0_f900, 28
  %v2_fb54 = add i32 %v3_fb50, %v3_fb18
  store i32 %v2_fb54, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_fb7c

dec_label_pc_fb60:                                ; preds = %bb389
  %v2_fb60 = icmp ugt i8 %v3_fb84, 35
  store i1 %v2_fb60, i1* %cpsr_c.global-to-local, align 1
  %v7_fb60 = icmp eq i8 %v3_fb84, 36
  store i1 %v7_fb60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb60, label %dec_label_pc_fb94, label %dec_label_pc_fb68

dec_label_pc_fb68:                                ; preds = %dec_label_pc_fb60
  %v2_fb68 = icmp ugt i8 %v3_fb84, 34
  store i1 %v2_fb68, i1* %cpsr_c.global-to-local, align 1
  %v7_fb68 = icmp eq i8 %v3_fb84, 35
  store i1 %v7_fb68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb68, label %dec_label_pc_fb94, label %dec_label_pc_fb70

dec_label_pc_fb70:                                ; preds = %dec_label_pc_fb68
  %v2_fb70 = icmp ugt i8 %v3_fb84, 36
  store i1 %v2_fb70, i1* %cpsr_c.global-to-local, align 1
  %v7_fb70 = icmp eq i8 %v3_fb84, 37
  store i1 %v7_fb70, i1* %cpsr_z.global-to-local, align 1
  %v1_fb74 = add i32 %v0_fb74, -1
  store i32 %v1_fb74, i32* %r3.global-to-local, align 4
  br i1 %v7_fb70, label %dec_label_pc_fb94, label %dec_label_pc_fb7c

dec_label_pc_fb7c:                                ; preds = %dec_label_pc_fb7c.preheader, %dec_label_pc_fb70
  %v0_fb74 = phi i32 [ %v2_fb54, %dec_label_pc_fb7c.preheader ], [ %v1_fb74, %dec_label_pc_fb70 ]
  %v0_fb7c = phi i32 [ %v1_fb1c, %dec_label_pc_fb7c.preheader ], [ %v1_fb7c, %dec_label_pc_fb70 ]
  %v1_fb7c = add i32 %v0_fb7c, -1
  store i32 %v1_fb7c, i32* %r1.global-to-local, align 4
  %v2_fb7c = icmp ne i32 %v0_fb7c, 0
  store i1 %v2_fb7c, i1* %cpsr_c.global-to-local, align 1
  %v7_fb7c = icmp eq i32 %v0_fb7c, 1
  store i1 %v7_fb7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb7c, label %dec_label_pc_f880thread-pre-split.thread512, label %dec_label_pc_fb84

dec_label_pc_fb84:                                ; preds = %dec_label_pc_fb7c
  %v1_fb84 = add i32 %v0_fb74, -2
  %v2_fb84 = inttoptr i32 %v1_fb84 to i8*
  %v3_fb84 = load i8, i8* %v2_fb84, align 1
  %v4_fb84 = zext i8 %v3_fb84 to i32
  store i32 %v4_fb84, i32* %r2.global-to-local, align 4
  %v2_fb88 = icmp ugt i8 %v3_fb84, 61
  store i1 %v2_fb88, i1* %cpsr_c.global-to-local, align 1
  %v7_fb88 = icmp eq i8 %v3_fb84, 62
  store i1 %v7_fb88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb88, label %dec_label_pc_fb94, label %bb389

bb389:                                            ; preds = %dec_label_pc_fb84
  %v3_fb8c = icmp ugt i8 %v3_fb84, 57
  store i1 %v3_fb8c, i1* %cpsr_c.global-to-local, align 1
  %v8_fb8c = icmp eq i8 %v3_fb84, 58
  store i1 %v8_fb8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fb8c, label %dec_label_pc_fb94, label %dec_label_pc_fb60

dec_label_pc_fb94:                                ; preds = %dec_label_pc_fb84, %bb389, %dec_label_pc_fb70, %dec_label_pc_fb68, %dec_label_pc_fb60, %dec_label_pc_fb4c, %dec_label_pc_fb28, %dec_label_pc_fb44, %dec_label_pc_fb3c, %bb388
  %v0_fb98 = phi i32 [ %v1_fb1c, %dec_label_pc_fb4c ], [ %v1_fb1c, %dec_label_pc_fb28 ], [ %v1_fb1c, %dec_label_pc_fb44 ], [ %v1_fb1c, %dec_label_pc_fb3c ], [ %v1_fb1c, %bb388 ], [ %v1_fb7c, %dec_label_pc_fb60 ], [ %v1_fb7c, %dec_label_pc_fb68 ], [ %v1_fb7c, %dec_label_pc_fb70 ], [ %v1_fb7c, %bb389 ], [ %v1_fb7c, %dec_label_pc_fb84 ]
  store i32 16, i32* %r0.global-to-local, align 4
  %v1_fb98 = add i32 %v0_fb98, 1
  store i32 %v1_fb98, i32* @r8, align 4
  %v1_fb9c = call i32 @function_106dc(i32 16)
  store i32 %v2_fe20, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r0.global-to-local, align 4
  %v3_fbac = call i32 @function_10618(i32 16, i32* nonnull %stack_var_-60)
  store i32 %v3_fbac, i32* %r0.global-to-local, align 4
  %v3_fbb0 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_fbb0, i32* %r2.global-to-local, align 4
  store i32 %v3_fbac, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_fbbc = load i32, i32* @r6, align 4
  %v1_fbbc = add i32 %v0_fbbc, 4
  %v2_fbbc = inttoptr i32 %v1_fbbc to i32*
  %v3_fbbc = load i32, i32* %v2_fbbc, align 4
  store i32 %v3_fbbc, i32* %r0.global-to-local, align 4
  %v4_fbc0 = call i32 @function_11c74(i32 %v3_fbbc, i32 %v3_fbac, i32 %v3_fbb0, i32 16384)
  store i32 %v4_fbc0, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_16dfc.593 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_fbd0 = load i32, i32* @r6, align 4
  %v1_fbd0 = add i32 %v0_fbd0, 4
  %v2_fbd0 = inttoptr i32 %v1_fbd0 to i32*
  %v3_fbd0 = load i32, i32* %v2_fbd0, align 4
  store i32 %v3_fbd0, i32* %r0.global-to-local, align 4
  %v4_fbd4 = call i32 @function_11c74(i32 %v3_fbd0, i32 ptrtoint ([3 x i8]* @global_var_16dfc.593 to i32), i32 2, i32 16384)
  store i32 16, i32* %r0.global-to-local, align 4
  %v1_fbdc = call i32 @function_1063c(i32 16)
  store i32 %v1_fbdc, i32* %r0.global-to-local, align 4
  store i32 8, i32* @r3, align 4
  %v1_fbe4 = load i32, i32* @r6, align 4
  %v2_fbe4 = add i32 %v1_fbe4, 12
  %v3_fbe4 = inttoptr i32 %v2_fbe4 to i32*
  store i32 8, i32* %v3_fbe4, align 4
  br label %dec_label_pc_fa1c

dec_label_pc_fbec:                                ; preds = %dec_label_pc_f900
  %v1_fbec = add i32 %v0_f900, 24
  %v2_fbec = inttoptr i32 %v1_fbec to i32*
  %v3_fbec = load i32, i32* %v2_fbec, align 4
  store i32 %v3_fbec, i32* %r2.global-to-local, align 4
  %v1_fbf0 = add i32 %v3_fbec, -1
  store i32 %v1_fbf0, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fbf4 = icmp eq i32 %v1_fbf0, 0
  store i1 %v2_fbf4, i1* %cpsr_z.global-to-local, align 1
  %tmp390 = icmp slt i32 %v1_fbf0, 1
  br i1 %tmp390, label %dec_label_pc_f880thread-pre-split.thread, label %dec_label_pc_fbfc

dec_label_pc_fbfc:                                ; preds = %dec_label_pc_fbec
  %v2_fbfc = add i32 %v1_fbf0, %v0_f900
  store i32 %v2_fbfc, i32* %r3.global-to-local, align 4
  %v1_fc00 = add i32 %v2_fbfc, 28
  %v2_fc00 = inttoptr i32 %v1_fc00 to i8*
  %v3_fc00 = load i8, i8* %v2_fc00, align 1
  %v4_fc00 = zext i8 %v3_fc00 to i32
  store i32 %v4_fc00, i32* %r3.global-to-local, align 4
  %v2_fc04 = icmp ugt i8 %v3_fc00, 61
  store i1 %v2_fc04, i1* %cpsr_c.global-to-local, align 1
  %v7_fc04 = icmp eq i8 %v3_fc00, 62
  store i1 %v7_fc04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fc04, label %dec_label_pc_fc68, label %bb391

bb391:                                            ; preds = %dec_label_pc_fbfc
  %v3_fc08 = icmp ugt i8 %v3_fc00, 57
  store i1 %v3_fc08, i1* %cpsr_c.global-to-local, align 1
  %v8_fc08 = icmp eq i8 %v3_fc00, 58
  store i1 %v8_fc08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fc08, label %dec_label_pc_fc68, label %dec_label_pc_fc10

dec_label_pc_fc10:                                ; preds = %bb391
  %v2_fc10 = icmp ugt i8 %v3_fc00, 35
  store i1 %v2_fc10, i1* %cpsr_c.global-to-local, align 1
  %v7_fc10 = icmp eq i8 %v3_fc00, 36
  store i1 %v7_fc10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fc10, label %dec_label_pc_fc68, label %dec_label_pc_fc18

dec_label_pc_fc18:                                ; preds = %dec_label_pc_fc10
  %v2_fc18 = icmp ugt i8 %v3_fc00, 34
  store i1 %v2_fc18, i1* %cpsr_c.global-to-local, align 1
  %v7_fc18 = icmp eq i8 %v3_fc00, 35
  store i1 %v7_fc18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fc18, label %dec_label_pc_fc68, label %dec_label_pc_fc20

dec_label_pc_fc20:                                ; preds = %dec_label_pc_fc18
  %v2_fc20 = icmp ugt i8 %v3_fc00, 36
  store i1 %v2_fc20, i1* %cpsr_c.global-to-local, align 1
  %v7_fc20 = icmp eq i8 %v3_fc00, 37
  store i1 %v7_fc20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fc20, label %dec_label_pc_fc68, label %dec_label_pc_fc50.preheader

dec_label_pc_fc50.preheader:                      ; preds = %dec_label_pc_fc20
  %v3_fc24 = add i32 %v0_f900, 28
  %v2_fc28 = add i32 %v3_fc24, %v3_fbec
  store i32 %v2_fc28, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_fc50

dec_label_pc_fc34:                                ; preds = %bb392
  %v2_fc34 = icmp ugt i8 %v3_fc58, 35
  store i1 %v2_fc34, i1* %cpsr_c.global-to-local, align 1
  %v7_fc34 = icmp eq i8 %v3_fc58, 36
  store i1 %v7_fc34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fc34, label %dec_label_pc_fc68, label %dec_label_pc_fc3c

dec_label_pc_fc3c:                                ; preds = %dec_label_pc_fc34
  %v2_fc3c = icmp ugt i8 %v3_fc58, 34
  store i1 %v2_fc3c, i1* %cpsr_c.global-to-local, align 1
  %v7_fc3c = icmp eq i8 %v3_fc58, 35
  store i1 %v7_fc3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fc3c, label %dec_label_pc_fc68, label %dec_label_pc_fc44

dec_label_pc_fc44:                                ; preds = %dec_label_pc_fc3c
  %v2_fc44 = icmp ugt i8 %v3_fc58, 36
  store i1 %v2_fc44, i1* %cpsr_c.global-to-local, align 1
  %v7_fc44 = icmp eq i8 %v3_fc58, 37
  store i1 %v7_fc44, i1* %cpsr_z.global-to-local, align 1
  %v1_fc48 = add i32 %v0_fc48, -1
  store i32 %v1_fc48, i32* %r3.global-to-local, align 4
  br i1 %v7_fc44, label %dec_label_pc_fc68, label %dec_label_pc_fc50

dec_label_pc_fc50:                                ; preds = %dec_label_pc_fc50.preheader, %dec_label_pc_fc44
  %v0_fc48 = phi i32 [ %v2_fc28, %dec_label_pc_fc50.preheader ], [ %v1_fc48, %dec_label_pc_fc44 ]
  %v0_fc50 = phi i32 [ %v1_fbf0, %dec_label_pc_fc50.preheader ], [ %v1_fc50, %dec_label_pc_fc44 ]
  %v1_fc50 = add i32 %v0_fc50, -1
  store i32 %v1_fc50, i32* %r1.global-to-local, align 4
  %v2_fc50 = icmp ne i32 %v0_fc50, 0
  store i1 %v2_fc50, i1* %cpsr_c.global-to-local, align 1
  %v7_fc50 = icmp eq i32 %v0_fc50, 1
  store i1 %v7_fc50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fc50, label %dec_label_pc_f880thread-pre-split.thread512, label %dec_label_pc_fc58

dec_label_pc_fc58:                                ; preds = %dec_label_pc_fc50
  %v1_fc58 = add i32 %v0_fc48, -2
  %v2_fc58 = inttoptr i32 %v1_fc58 to i8*
  %v3_fc58 = load i8, i8* %v2_fc58, align 1
  %v4_fc58 = zext i8 %v3_fc58 to i32
  store i32 %v4_fc58, i32* %r2.global-to-local, align 4
  %v2_fc5c = icmp ugt i8 %v3_fc58, 61
  store i1 %v2_fc5c, i1* %cpsr_c.global-to-local, align 1
  %v7_fc5c = icmp eq i8 %v3_fc58, 62
  store i1 %v7_fc5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fc5c, label %dec_label_pc_fc68, label %bb392

bb392:                                            ; preds = %dec_label_pc_fc58
  %v3_fc60 = icmp ugt i8 %v3_fc58, 57
  store i1 %v3_fc60, i1* %cpsr_c.global-to-local, align 1
  %v8_fc60 = icmp eq i8 %v3_fc58, 58
  store i1 %v8_fc60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fc60, label %dec_label_pc_fc68, label %dec_label_pc_fc34

dec_label_pc_fc68:                                ; preds = %dec_label_pc_fc58, %bb392, %dec_label_pc_fc44, %dec_label_pc_fc3c, %dec_label_pc_fc34, %dec_label_pc_fc20, %dec_label_pc_fbfc, %dec_label_pc_fc18, %dec_label_pc_fc10, %bb391
  %v0_fc6c = phi i32 [ %v1_fbf0, %dec_label_pc_fc20 ], [ %v1_fbf0, %dec_label_pc_fbfc ], [ %v1_fbf0, %dec_label_pc_fc18 ], [ %v1_fbf0, %dec_label_pc_fc10 ], [ %v1_fbf0, %bb391 ], [ %v1_fc50, %dec_label_pc_fc34 ], [ %v1_fc50, %dec_label_pc_fc3c ], [ %v1_fc50, %dec_label_pc_fc44 ], [ %v1_fc50, %bb392 ], [ %v1_fc50, %dec_label_pc_fc58 ]
  store i32 18, i32* %r0.global-to-local, align 4
  %v1_fc6c = add i32 %v0_fc6c, 1
  store i32 %v1_fc6c, i32* @r8, align 4
  %v1_fc70 = call i32 @function_106dc(i32 18)
  store i32 %v2_fe20, i32* %r1.global-to-local, align 4
  store i32 18, i32* %r0.global-to-local, align 4
  %v3_fc80 = call i32 @function_10618(i32 18, i32* nonnull %stack_var_-60)
  store i32 %v3_fc80, i32* %r0.global-to-local, align 4
  %v3_fc84 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_fc84, i32* %r2.global-to-local, align 4
  store i32 %v3_fc80, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_fc90 = load i32, i32* @r6, align 4
  %v1_fc90 = add i32 %v0_fc90, 4
  %v2_fc90 = inttoptr i32 %v1_fc90 to i32*
  %v3_fc90 = load i32, i32* %v2_fc90, align 4
  store i32 %v3_fc90, i32* %r0.global-to-local, align 4
  %v4_fc94 = call i32 @function_11c74(i32 %v3_fc90, i32 %v3_fc80, i32 %v3_fc84, i32 16384)
  store i32 %v4_fc94, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_16dfc.593 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_fca4 = load i32, i32* @r6, align 4
  %v1_fca4 = add i32 %v0_fca4, 4
  %v2_fca4 = inttoptr i32 %v1_fca4 to i32*
  %v3_fca4 = load i32, i32* %v2_fca4, align 4
  store i32 %v3_fca4, i32* %r0.global-to-local, align 4
  %v4_fca8 = call i32 @function_11c74(i32 %v3_fca4, i32 ptrtoint ([3 x i8]* @global_var_16dfc.593 to i32), i32 2, i32 16384)
  store i32 18, i32* %r0.global-to-local, align 4
  %v1_fcb0 = call i32 @function_1063c(i32 18)
  store i32 %v1_fcb0, i32* %r0.global-to-local, align 4
  store i32 7, i32* @r3, align 4
  %v1_fcb8 = load i32, i32* @r6, align 4
  %v2_fcb8 = add i32 %v1_fcb8, 12
  %v3_fcb8 = inttoptr i32 %v2_fcb8 to i32*
  store i32 7, i32* %v3_fcb8, align 4
  br label %dec_label_pc_fa1c

dec_label_pc_fcc0:                                ; preds = %dec_label_pc_f900
  %v1_fcc0 = add i32 %v0_f900, 24
  %v2_fcc0 = inttoptr i32 %v1_fcc0 to i32*
  %v3_fcc0 = load i32, i32* %v2_fcc0, align 4
  store i32 %v3_fcc0, i32* %r2.global-to-local, align 4
  %v1_fcc4 = add i32 %v3_fcc0, -1
  store i32 %v1_fcc4, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fcc8 = icmp eq i32 %v1_fcc4, 0
  store i1 %v2_fcc8, i1* %cpsr_z.global-to-local, align 1
  %tmp393 = icmp slt i32 %v1_fcc4, 1
  br i1 %tmp393, label %dec_label_pc_f880thread-pre-split.thread, label %dec_label_pc_fcd0

dec_label_pc_fcd0:                                ; preds = %dec_label_pc_fcc0
  %v2_fcd0 = add i32 %v1_fcc4, %v0_f900
  store i32 %v2_fcd0, i32* %r3.global-to-local, align 4
  %v1_fcd4 = add i32 %v2_fcd0, 28
  %v2_fcd4 = inttoptr i32 %v1_fcd4 to i8*
  %v3_fcd4 = load i8, i8* %v2_fcd4, align 1
  %v4_fcd4 = zext i8 %v3_fcd4 to i32
  store i32 %v4_fcd4, i32* %r3.global-to-local, align 4
  %v2_fcd8 = icmp ugt i8 %v3_fcd4, 61
  store i1 %v2_fcd8, i1* %cpsr_c.global-to-local, align 1
  %v7_fcd8 = icmp eq i8 %v3_fcd4, 62
  store i1 %v7_fcd8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fcd8, label %dec_label_pc_fd3c, label %bb394

bb394:                                            ; preds = %dec_label_pc_fcd0
  %v3_fcdc = icmp ugt i8 %v3_fcd4, 57
  store i1 %v3_fcdc, i1* %cpsr_c.global-to-local, align 1
  %v8_fcdc = icmp eq i8 %v3_fcd4, 58
  store i1 %v8_fcdc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fcdc, label %dec_label_pc_fd3c, label %dec_label_pc_fce4

dec_label_pc_fce4:                                ; preds = %bb394
  %v2_fce4 = icmp ugt i8 %v3_fcd4, 35
  store i1 %v2_fce4, i1* %cpsr_c.global-to-local, align 1
  %v7_fce4 = icmp eq i8 %v3_fcd4, 36
  store i1 %v7_fce4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fce4, label %dec_label_pc_fd3c, label %dec_label_pc_fcec

dec_label_pc_fcec:                                ; preds = %dec_label_pc_fce4
  %v2_fcec = icmp ugt i8 %v3_fcd4, 34
  store i1 %v2_fcec, i1* %cpsr_c.global-to-local, align 1
  %v7_fcec = icmp eq i8 %v3_fcd4, 35
  store i1 %v7_fcec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fcec, label %dec_label_pc_fd3c, label %dec_label_pc_fcf4

dec_label_pc_fcf4:                                ; preds = %dec_label_pc_fcec
  %v2_fcf4 = icmp ugt i8 %v3_fcd4, 36
  store i1 %v2_fcf4, i1* %cpsr_c.global-to-local, align 1
  %v7_fcf4 = icmp eq i8 %v3_fcd4, 37
  store i1 %v7_fcf4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fcf4, label %dec_label_pc_fd3c, label %dec_label_pc_fd24.preheader

dec_label_pc_fd24.preheader:                      ; preds = %dec_label_pc_fcf4
  %v3_fcf8 = add i32 %v0_f900, 28
  %v2_fcfc = add i32 %v3_fcf8, %v3_fcc0
  store i32 %v2_fcfc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_fd24

dec_label_pc_fd08:                                ; preds = %bb395
  %v2_fd08 = icmp ugt i8 %v3_fd2c, 35
  store i1 %v2_fd08, i1* %cpsr_c.global-to-local, align 1
  %v7_fd08 = icmp eq i8 %v3_fd2c, 36
  store i1 %v7_fd08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fd08, label %dec_label_pc_fd3c, label %dec_label_pc_fd10

dec_label_pc_fd10:                                ; preds = %dec_label_pc_fd08
  %v2_fd10 = icmp ugt i8 %v3_fd2c, 34
  store i1 %v2_fd10, i1* %cpsr_c.global-to-local, align 1
  %v7_fd10 = icmp eq i8 %v3_fd2c, 35
  store i1 %v7_fd10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fd10, label %dec_label_pc_fd3c, label %dec_label_pc_fd18

dec_label_pc_fd18:                                ; preds = %dec_label_pc_fd10
  %v2_fd18 = icmp ugt i8 %v3_fd2c, 36
  store i1 %v2_fd18, i1* %cpsr_c.global-to-local, align 1
  %v7_fd18 = icmp eq i8 %v3_fd2c, 37
  store i1 %v7_fd18, i1* %cpsr_z.global-to-local, align 1
  %v1_fd1c = add i32 %v0_fd1c, -1
  store i32 %v1_fd1c, i32* %r3.global-to-local, align 4
  br i1 %v7_fd18, label %dec_label_pc_fd3c, label %dec_label_pc_fd24

dec_label_pc_fd24:                                ; preds = %dec_label_pc_fd24.preheader, %dec_label_pc_fd18
  %v0_fd1c = phi i32 [ %v2_fcfc, %dec_label_pc_fd24.preheader ], [ %v1_fd1c, %dec_label_pc_fd18 ]
  %v0_fd24 = phi i32 [ %v1_fcc4, %dec_label_pc_fd24.preheader ], [ %v1_fd24, %dec_label_pc_fd18 ]
  %v1_fd24 = add i32 %v0_fd24, -1
  store i32 %v1_fd24, i32* %r1.global-to-local, align 4
  %v2_fd24 = icmp ne i32 %v0_fd24, 0
  store i1 %v2_fd24, i1* %cpsr_c.global-to-local, align 1
  %v7_fd24 = icmp eq i32 %v0_fd24, 1
  store i1 %v7_fd24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fd24, label %dec_label_pc_f880thread-pre-split.thread512, label %dec_label_pc_fd2c

dec_label_pc_fd2c:                                ; preds = %dec_label_pc_fd24
  %v1_fd2c = add i32 %v0_fd1c, -2
  %v2_fd2c = inttoptr i32 %v1_fd2c to i8*
  %v3_fd2c = load i8, i8* %v2_fd2c, align 1
  %v4_fd2c = zext i8 %v3_fd2c to i32
  store i32 %v4_fd2c, i32* %r2.global-to-local, align 4
  %v2_fd30 = icmp ugt i8 %v3_fd2c, 61
  store i1 %v2_fd30, i1* %cpsr_c.global-to-local, align 1
  %v7_fd30 = icmp eq i8 %v3_fd2c, 62
  store i1 %v7_fd30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fd30, label %dec_label_pc_fd3c, label %bb395

bb395:                                            ; preds = %dec_label_pc_fd2c
  %v3_fd34 = icmp ugt i8 %v3_fd2c, 57
  store i1 %v3_fd34, i1* %cpsr_c.global-to-local, align 1
  %v8_fd34 = icmp eq i8 %v3_fd2c, 58
  store i1 %v8_fd34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fd34, label %dec_label_pc_fd3c, label %dec_label_pc_fd08

dec_label_pc_fd3c:                                ; preds = %dec_label_pc_fd2c, %bb395, %dec_label_pc_fd18, %dec_label_pc_fd10, %dec_label_pc_fd08, %dec_label_pc_fcf4, %dec_label_pc_fcd0, %dec_label_pc_fcec, %dec_label_pc_fce4, %bb394
  %v0_fd40 = phi i32 [ %v1_fcc4, %dec_label_pc_fcf4 ], [ %v1_fcc4, %dec_label_pc_fcd0 ], [ %v1_fcc4, %dec_label_pc_fcec ], [ %v1_fcc4, %dec_label_pc_fce4 ], [ %v1_fcc4, %bb394 ], [ %v1_fd24, %dec_label_pc_fd08 ], [ %v1_fd24, %dec_label_pc_fd10 ], [ %v1_fd24, %dec_label_pc_fd18 ], [ %v1_fd24, %bb395 ], [ %v1_fd24, %dec_label_pc_fd2c ]
  store i32 20, i32* %r0.global-to-local, align 4
  %v1_fd40 = add i32 %v0_fd40, 1
  store i32 %v1_fd40, i32* @r8, align 4
  %v1_fd44 = call i32 @function_106dc(i32 20)
  store i32 %v2_fe20, i32* %r1.global-to-local, align 4
  store i32 20, i32* %r0.global-to-local, align 4
  %v3_fd54 = call i32 @function_10618(i32 20, i32* nonnull %stack_var_-60)
  store i32 %v3_fd54, i32* %r0.global-to-local, align 4
  %v3_fd58 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_fd58, i32* %r2.global-to-local, align 4
  store i32 %v3_fd54, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_fd64 = load i32, i32* @r6, align 4
  %v1_fd64 = add i32 %v0_fd64, 4
  %v2_fd64 = inttoptr i32 %v1_fd64 to i32*
  %v3_fd64 = load i32, i32* %v2_fd64, align 4
  store i32 %v3_fd64, i32* %r0.global-to-local, align 4
  %v4_fd68 = call i32 @function_11c74(i32 %v3_fd64, i32 %v3_fd54, i32 %v3_fd58, i32 16384)
  store i32 %v4_fd68, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_16dfc.593 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_fd78 = load i32, i32* @r6, align 4
  %v1_fd78 = add i32 %v0_fd78, 4
  %v2_fd78 = inttoptr i32 %v1_fd78 to i32*
  %v3_fd78 = load i32, i32* %v2_fd78, align 4
  store i32 %v3_fd78, i32* %r0.global-to-local, align 4
  %v4_fd7c = call i32 @function_11c74(i32 %v3_fd78, i32 ptrtoint ([3 x i8]* @global_var_16dfc.593 to i32), i32 2, i32 16384)
  store i32 20, i32* %r0.global-to-local, align 4
  %v1_fd84 = call i32 @function_1063c(i32 20)
  store i32 %v1_fd84, i32* %r0.global-to-local, align 4
  store i32 9, i32* @r3, align 4
  %v1_fd8c = load i32, i32* @r6, align 4
  %v2_fd8c = add i32 %v1_fd8c, 12
  %v3_fd8c = inttoptr i32 %v2_fd8c to i32*
  store i32 9, i32* %v3_fd8c, align 4
  br label %dec_label_pc_fa1c

dec_label_pc_fd94:                                ; preds = %dec_label_pc_f900
  %v1_fd94 = add i32 %v0_f900, 24
  %v2_fd94 = inttoptr i32 %v1_fd94 to i32*
  %v3_fd94 = load i32, i32* %v2_fd94, align 4
  store i32 %v3_fd94, i32* %r2.global-to-local, align 4
  %v1_fd98 = add i32 %v3_fd94, -1
  store i32 %v1_fd98, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fd9c = icmp eq i32 %v1_fd98, 0
  store i1 %v2_fd9c, i1* %cpsr_z.global-to-local, align 1
  %tmp396 = icmp slt i32 %v1_fd98, 1
  br i1 %tmp396, label %dec_label_pc_f880thread-pre-split.thread, label %dec_label_pc_fda4

dec_label_pc_fda4:                                ; preds = %dec_label_pc_fd94
  %v2_fda4 = add i32 %v1_fd98, %v0_f900
  store i32 %v2_fda4, i32* %r3.global-to-local, align 4
  %v1_fda8 = add i32 %v2_fda4, 28
  %v2_fda8 = inttoptr i32 %v1_fda8 to i8*
  %v3_fda8 = load i8, i8* %v2_fda8, align 1
  %v4_fda8 = zext i8 %v3_fda8 to i32
  store i32 %v4_fda8, i32* %r3.global-to-local, align 4
  %v2_fdac = icmp ugt i8 %v3_fda8, 61
  store i1 %v2_fdac, i1* %cpsr_c.global-to-local, align 1
  %v7_fdac = icmp eq i8 %v3_fda8, 62
  store i1 %v7_fdac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fdac, label %dec_label_pc_fe10, label %bb397

bb397:                                            ; preds = %dec_label_pc_fda4
  %v3_fdb0 = icmp ugt i8 %v3_fda8, 57
  store i1 %v3_fdb0, i1* %cpsr_c.global-to-local, align 1
  %v8_fdb0 = icmp eq i8 %v3_fda8, 58
  store i1 %v8_fdb0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fdb0, label %dec_label_pc_fe10, label %dec_label_pc_fdb8

dec_label_pc_fdb8:                                ; preds = %bb397
  %v2_fdb8 = icmp ugt i8 %v3_fda8, 35
  store i1 %v2_fdb8, i1* %cpsr_c.global-to-local, align 1
  %v7_fdb8 = icmp eq i8 %v3_fda8, 36
  store i1 %v7_fdb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fdb8, label %dec_label_pc_fe10, label %dec_label_pc_fdc0

dec_label_pc_fdc0:                                ; preds = %dec_label_pc_fdb8
  %v2_fdc0 = icmp ugt i8 %v3_fda8, 34
  store i1 %v2_fdc0, i1* %cpsr_c.global-to-local, align 1
  %v7_fdc0 = icmp eq i8 %v3_fda8, 35
  store i1 %v7_fdc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fdc0, label %dec_label_pc_fe10, label %dec_label_pc_fdc8

dec_label_pc_fdc8:                                ; preds = %dec_label_pc_fdc0
  %v2_fdc8 = icmp ugt i8 %v3_fda8, 36
  store i1 %v2_fdc8, i1* %cpsr_c.global-to-local, align 1
  %v7_fdc8 = icmp eq i8 %v3_fda8, 37
  store i1 %v7_fdc8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fdc8, label %dec_label_pc_fe10, label %dec_label_pc_fdf8.preheader

dec_label_pc_fdf8.preheader:                      ; preds = %dec_label_pc_fdc8
  %v3_fdcc = add i32 %v0_f900, 28
  %v2_fdd0 = add i32 %v3_fdcc, %v3_fd94
  store i32 %v2_fdd0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_fdf8

dec_label_pc_fddc:                                ; preds = %bb398
  %v2_fddc = icmp ugt i8 %v3_fe00, 35
  store i1 %v2_fddc, i1* %cpsr_c.global-to-local, align 1
  %v7_fddc = icmp eq i8 %v3_fe00, 36
  store i1 %v7_fddc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fddc, label %dec_label_pc_fe10, label %dec_label_pc_fde4

dec_label_pc_fde4:                                ; preds = %dec_label_pc_fddc
  %v2_fde4 = icmp ugt i8 %v3_fe00, 34
  store i1 %v2_fde4, i1* %cpsr_c.global-to-local, align 1
  %v7_fde4 = icmp eq i8 %v3_fe00, 35
  store i1 %v7_fde4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fde4, label %dec_label_pc_fe10, label %dec_label_pc_fdec

dec_label_pc_fdec:                                ; preds = %dec_label_pc_fde4
  %v2_fdec = icmp ugt i8 %v3_fe00, 36
  store i1 %v2_fdec, i1* %cpsr_c.global-to-local, align 1
  %v7_fdec = icmp eq i8 %v3_fe00, 37
  store i1 %v7_fdec, i1* %cpsr_z.global-to-local, align 1
  %v1_fdf0 = add i32 %v0_fdf0, -1
  store i32 %v1_fdf0, i32* %r3.global-to-local, align 4
  br i1 %v7_fdec, label %dec_label_pc_fe10, label %dec_label_pc_fdf8

dec_label_pc_fdf8:                                ; preds = %dec_label_pc_fdf8.preheader, %dec_label_pc_fdec
  %v0_fdf0 = phi i32 [ %v2_fdd0, %dec_label_pc_fdf8.preheader ], [ %v1_fdf0, %dec_label_pc_fdec ]
  %v0_fdf8 = phi i32 [ %v1_fd98, %dec_label_pc_fdf8.preheader ], [ %v1_fdf8, %dec_label_pc_fdec ]
  %v1_fdf8 = add i32 %v0_fdf8, -1
  store i32 %v1_fdf8, i32* %r1.global-to-local, align 4
  %v2_fdf8 = icmp ne i32 %v0_fdf8, 0
  store i1 %v2_fdf8, i1* %cpsr_c.global-to-local, align 1
  %v7_fdf8 = icmp eq i32 %v0_fdf8, 1
  store i1 %v7_fdf8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fdf8, label %dec_label_pc_f880thread-pre-split.thread512, label %dec_label_pc_fe00

dec_label_pc_fe00:                                ; preds = %dec_label_pc_fdf8
  %v1_fe00 = add i32 %v0_fdf0, -2
  %v2_fe00 = inttoptr i32 %v1_fe00 to i8*
  %v3_fe00 = load i8, i8* %v2_fe00, align 1
  %v4_fe00 = zext i8 %v3_fe00 to i32
  store i32 %v4_fe00, i32* %r2.global-to-local, align 4
  %v2_fe04 = icmp ugt i8 %v3_fe00, 61
  store i1 %v2_fe04, i1* %cpsr_c.global-to-local, align 1
  %v7_fe04 = icmp eq i8 %v3_fe00, 62
  store i1 %v7_fe04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fe04, label %dec_label_pc_fe10, label %bb398

bb398:                                            ; preds = %dec_label_pc_fe00
  %v3_fe08 = icmp ugt i8 %v3_fe00, 57
  store i1 %v3_fe08, i1* %cpsr_c.global-to-local, align 1
  %v8_fe08 = icmp eq i8 %v3_fe00, 58
  store i1 %v8_fe08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fe08, label %dec_label_pc_fe10, label %dec_label_pc_fddc

dec_label_pc_fe10:                                ; preds = %dec_label_pc_fe00, %bb398, %dec_label_pc_fdec, %dec_label_pc_fde4, %dec_label_pc_fddc, %dec_label_pc_fdc8, %dec_label_pc_fda4, %dec_label_pc_fdc0, %dec_label_pc_fdb8, %bb397
  %v0_fe14 = phi i32 [ %v1_fd98, %dec_label_pc_fdc8 ], [ %v1_fd98, %dec_label_pc_fda4 ], [ %v1_fd98, %dec_label_pc_fdc0 ], [ %v1_fd98, %dec_label_pc_fdb8 ], [ %v1_fd98, %bb397 ], [ %v1_fdf8, %dec_label_pc_fddc ], [ %v1_fdf8, %dec_label_pc_fde4 ], [ %v1_fdf8, %dec_label_pc_fdec ], [ %v1_fdf8, %bb398 ], [ %v1_fdf8, %dec_label_pc_fe00 ]
  store i32 17, i32* %r0.global-to-local, align 4
  %v1_fe14 = add i32 %v0_fe14, 1
  store i32 %v1_fe14, i32* @r8, align 4
  %v1_fe18 = call i32 @function_106dc(i32 17)
  store i32 %v2_fe20, i32* %r1.global-to-local, align 4
  store i32 17, i32* %r0.global-to-local, align 4
  %v3_fe28 = call i32 @function_10618(i32 17, i32* nonnull %stack_var_-60)
  store i32 %v3_fe28, i32* %r0.global-to-local, align 4
  %v3_fe2c = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_fe2c, i32* %r2.global-to-local, align 4
  store i32 %v3_fe28, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_fe38 = load i32, i32* @r6, align 4
  %v1_fe38 = add i32 %v0_fe38, 4
  %v2_fe38 = inttoptr i32 %v1_fe38 to i32*
  %v3_fe38 = load i32, i32* %v2_fe38, align 4
  store i32 %v3_fe38, i32* %r0.global-to-local, align 4
  %v4_fe3c = call i32 @function_11c74(i32 %v3_fe38, i32 %v3_fe28, i32 %v3_fe2c, i32 16384)
  store i32 %v4_fe3c, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_16dfc.593 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_fe4c = load i32, i32* @r6, align 4
  %v1_fe4c = add i32 %v0_fe4c, 4
  %v2_fe4c = inttoptr i32 %v1_fe4c to i32*
  %v3_fe4c = load i32, i32* %v2_fe4c, align 4
  store i32 %v3_fe4c, i32* %r0.global-to-local, align 4
  %v4_fe50 = call i32 @function_11c74(i32 %v3_fe4c, i32 ptrtoint ([3 x i8]* @global_var_16dfc.593 to i32), i32 2, i32 16384)
  store i32 17, i32* %r0.global-to-local, align 4
  %v1_fe58 = call i32 @function_1063c(i32 17)
  store i32 %v1_fe58, i32* %r0.global-to-local, align 4
  store i32 6, i32* @r3, align 4
  %v1_fe60 = load i32, i32* @r6, align 4
  %v2_fe60 = add i32 %v1_fe60, 12
  %v3_fe60 = inttoptr i32 %v2_fe60 to i32*
  store i32 6, i32* %v3_fe60, align 4
  br label %dec_label_pc_fa1c

dec_label_pc_fe68:                                ; preds = %dec_label_pc_f900
  %v1_fe68 = add i32 %v0_f900, 24
  %v2_fe68 = inttoptr i32 %v1_fe68 to i32*
  %v3_fe68 = load i32, i32* %v2_fe68, align 4
  store i32 %v3_fe68, i32* %r1.global-to-local, align 4
  %v1_fe6c = add i32 %v3_fe68, -1
  store i32 %v1_fe6c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fe70 = icmp eq i32 %v1_fe6c, 0
  store i1 %v2_fe70, i1* %cpsr_z.global-to-local, align 1
  %tmp399 = icmp slt i32 %v1_fe6c, 1
  br i1 %tmp399, label %dec_label_pc_fee4, label %dec_label_pc_fe78

dec_label_pc_fe78:                                ; preds = %dec_label_pc_fe68
  %v2_fe78 = add i32 %v1_fe6c, %v0_f900
  store i32 %v2_fe78, i32* %r3.global-to-local, align 4
  %v1_fe7c = add i32 %v2_fe78, 28
  %v2_fe7c = inttoptr i32 %v1_fe7c to i8*
  %v3_fe7c = load i8, i8* %v2_fe7c, align 1
  %v4_fe7c = zext i8 %v3_fe7c to i32
  store i32 %v4_fe7c, i32* %r3.global-to-local, align 4
  %v2_fe80 = icmp ugt i8 %v3_fe7c, 61
  store i1 %v2_fe80, i1* %cpsr_c.global-to-local, align 1
  %v7_fe80 = icmp eq i8 %v3_fe7c, 62
  store i1 %v7_fe80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fe80, label %dec_label_pc_101e8, label %bb400

bb400:                                            ; preds = %dec_label_pc_fe78
  %v3_fe84 = icmp ugt i8 %v3_fe7c, 57
  store i1 %v3_fe84, i1* %cpsr_c.global-to-local, align 1
  %v8_fe84 = icmp eq i8 %v3_fe7c, 58
  store i1 %v8_fe84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fe84, label %dec_label_pc_101e8, label %dec_label_pc_fe8c

dec_label_pc_fe8c:                                ; preds = %bb400
  %v2_fe8c = icmp ugt i8 %v3_fe7c, 35
  store i1 %v2_fe8c, i1* %cpsr_c.global-to-local, align 1
  %v7_fe8c = icmp eq i8 %v3_fe7c, 36
  store i1 %v7_fe8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fe8c, label %dec_label_pc_101e8, label %dec_label_pc_fe94

dec_label_pc_fe94:                                ; preds = %dec_label_pc_fe8c
  %v2_fe94 = icmp ugt i8 %v3_fe7c, 34
  store i1 %v2_fe94, i1* %cpsr_c.global-to-local, align 1
  %v7_fe94 = icmp eq i8 %v3_fe7c, 35
  store i1 %v7_fe94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fe94, label %dec_label_pc_101e8, label %dec_label_pc_fe9c

dec_label_pc_fe9c:                                ; preds = %dec_label_pc_fe94
  %v2_fe9c = icmp ugt i8 %v3_fe7c, 36
  store i1 %v2_fe9c, i1* %cpsr_c.global-to-local, align 1
  %v7_fe9c = icmp eq i8 %v3_fe7c, 37
  store i1 %v7_fe9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fe9c, label %dec_label_pc_101e8, label %dec_label_pc_fedc.preheader

dec_label_pc_fedc.preheader:                      ; preds = %dec_label_pc_fe9c
  %v3_fea0 = add i32 %v0_f900, 28
  %v2_fea4 = add i32 %v3_fea0, %v3_fe68
  store i32 %v2_fea4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_fedc

dec_label_pc_feb0:                                ; preds = %dec_label_pc_fedc
  %v1_feb0 = add i32 %v0_fed4, -2
  %v2_feb0 = inttoptr i32 %v1_feb0 to i8*
  %v3_feb0 = load i8, i8* %v2_feb0, align 1
  %v4_feb0 = zext i8 %v3_feb0 to i32
  store i32 %v4_feb0, i32* %r2.global-to-local, align 4
  %v2_feb4 = icmp ugt i8 %v3_feb0, 61
  store i1 %v2_feb4, i1* %cpsr_c.global-to-local, align 1
  %v7_feb4 = icmp eq i8 %v3_feb0, 62
  store i1 %v7_feb4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_feb4, label %dec_label_pc_101e8, label %bb401

bb401:                                            ; preds = %dec_label_pc_feb0
  %v3_feb8 = icmp ugt i8 %v3_feb0, 57
  store i1 %v3_feb8, i1* %cpsr_c.global-to-local, align 1
  %v8_feb8 = icmp eq i8 %v3_feb0, 58
  store i1 %v8_feb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_feb8, label %dec_label_pc_101e8, label %dec_label_pc_fec0

dec_label_pc_fec0:                                ; preds = %bb401
  %v2_fec0 = icmp ugt i8 %v3_feb0, 35
  store i1 %v2_fec0, i1* %cpsr_c.global-to-local, align 1
  %v7_fec0 = icmp eq i8 %v3_feb0, 36
  store i1 %v7_fec0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fec0, label %dec_label_pc_101e8, label %dec_label_pc_fec8

dec_label_pc_fec8:                                ; preds = %dec_label_pc_fec0
  %v2_fec8 = icmp ugt i8 %v3_feb0, 34
  store i1 %v2_fec8, i1* %cpsr_c.global-to-local, align 1
  %v7_fec8 = icmp eq i8 %v3_feb0, 35
  store i1 %v7_fec8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fec8, label %dec_label_pc_101e8, label %dec_label_pc_fed0

dec_label_pc_fed0:                                ; preds = %dec_label_pc_fec8
  %v2_fed0 = icmp ugt i8 %v3_feb0, 36
  store i1 %v2_fed0, i1* %cpsr_c.global-to-local, align 1
  %v7_fed0 = icmp eq i8 %v3_feb0, 37
  store i1 %v7_fed0, i1* %cpsr_z.global-to-local, align 1
  %v1_fed4 = add i32 %v0_fed4, -1
  store i32 %v1_fed4, i32* %r3.global-to-local, align 4
  br i1 %v7_fed0, label %dec_label_pc_101e8, label %dec_label_pc_fedc

dec_label_pc_fedc:                                ; preds = %dec_label_pc_fedc.preheader, %dec_label_pc_fed0
  %v0_fed4 = phi i32 [ %v2_fea4, %dec_label_pc_fedc.preheader ], [ %v1_fed4, %dec_label_pc_fed0 ]
  %v0_fedc = phi i32 [ %v1_fe6c, %dec_label_pc_fedc.preheader ], [ %v1_fedc, %dec_label_pc_fed0 ]
  %v1_fedc = add i32 %v0_fedc, -1
  store i32 %v1_fedc, i32* %r0.global-to-local, align 4
  %v2_fedc = icmp ne i32 %v0_fedc, 0
  store i1 %v2_fedc, i1* %cpsr_c.global-to-local, align 1
  %v7_fedc = icmp eq i32 %v0_fedc, 1
  store i1 %v7_fedc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fedc, label %dec_label_pc_fee4, label %dec_label_pc_feb0

dec_label_pc_fee4:                                ; preds = %dec_label_pc_fedc, %dec_label_pc_fe68
  %v0_fee4 = load i32, i32* @fp, align 4
  store i32 %v0_fee4, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_16e00.595 to i32), i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v5_fef0 = call i32 @function_10bf4(i32 %v0_fee4, i32 %v3_fe68, i32 ptrtoint ([5 x i8]* @global_var_16e00.595 to i32), i32 4)
  store i32 %v5_fef0, i32* %r0.global-to-local, align 4
  %v2_fef4 = icmp eq i32 %v5_fef0, -1
  store i1 %v2_fef4, i1* %cpsr_c.global-to-local, align 1
  %v7_fef4 = icmp eq i32 %v5_fef0, -1
  store i1 %v7_fef4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_fef0, i32* @r8, align 4
  br i1 %v7_fef4, label %dec_label_pc_105b4, label %dec_label_pc_ff00

dec_label_pc_ff00:                                ; preds = %dec_label_pc_105b4, %dec_label_pc_fee4
  %v0_ff00 = phi i32 [ %v5_105c4, %dec_label_pc_105b4 ], [ %v5_fef0, %dec_label_pc_fee4 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ff00 = icmp eq i32 %v0_ff00, 0
  store i1 %v2_ff00, i1* %cpsr_z.global-to-local, align 1
  %v5_ff04 = icmp sgt i32 %v0_ff00, 0
  br i1 %v5_ff04, label %dec_label_pc_ff00.dec_label_pc_101ec_crit_edge, label %dec_label_pc_ff08

dec_label_pc_ff00.dec_label_pc_101ec_crit_edge:   ; preds = %dec_label_pc_ff00
  %v0_101ec.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_101ec

dec_label_pc_ff08:                                ; preds = %dec_label_pc_10164, %bb409, %dec_label_pc_10098, %dec_label_pc_ff00, %dec_label_pc_102ac, %dec_label_pc_10228, %dec_label_pc_101ec, %dec_label_pc_10334
  %v0_ff08 = load i32, i32* @r8, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ff08 = icmp eq i32 %v0_ff08, 0
  store i1 %v2_ff08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ff08, label %dec_label_pc_f87c.loopexit, label %dec_label_pc_fa1c

dec_label_pc_ff14:                                ; preds = %dec_label_pc_f900
  %v1_ff14 = add i32 %v0_f900, 24
  %v2_ff14 = inttoptr i32 %v1_ff14 to i32*
  %v3_ff14 = load i32, i32* %v2_ff14, align 4
  store i32 %v3_ff14, i32* %r1.global-to-local, align 4
  %v1_ff18 = add i32 %v3_ff14, -1
  store i32 %v1_ff18, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ff1c = icmp eq i32 %v1_ff18, 0
  store i1 %v2_ff1c, i1* %cpsr_z.global-to-local, align 1
  %tmp402 = icmp slt i32 %v1_ff18, 1
  br i1 %tmp402, label %dec_label_pc_1007c, label %dec_label_pc_ff24

dec_label_pc_ff24:                                ; preds = %dec_label_pc_ff14
  %v2_ff24 = add i32 %v1_ff18, %v0_f900
  store i32 %v2_ff24, i32* %r3.global-to-local, align 4
  %v1_ff28 = add i32 %v2_ff24, 28
  %v2_ff28 = inttoptr i32 %v1_ff28 to i8*
  %v3_ff28 = load i8, i8* %v2_ff28, align 1
  %v4_ff28 = zext i8 %v3_ff28 to i32
  store i32 %v4_ff28, i32* %r3.global-to-local, align 4
  %v2_ff2c = icmp ugt i8 %v3_ff28, 61
  store i1 %v2_ff2c, i1* %cpsr_c.global-to-local, align 1
  %v7_ff2c = icmp eq i8 %v3_ff28, 62
  store i1 %v7_ff2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ff2c, label %dec_label_pc_10224, label %bb403

bb403:                                            ; preds = %dec_label_pc_ff24
  %v3_ff30 = icmp ugt i8 %v3_ff28, 57
  store i1 %v3_ff30, i1* %cpsr_c.global-to-local, align 1
  %v8_ff30 = icmp eq i8 %v3_ff28, 58
  store i1 %v8_ff30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_ff30, label %dec_label_pc_10224, label %dec_label_pc_ff38

dec_label_pc_ff38:                                ; preds = %bb403
  %v2_ff38 = icmp ugt i8 %v3_ff28, 35
  store i1 %v2_ff38, i1* %cpsr_c.global-to-local, align 1
  %v7_ff38 = icmp eq i8 %v3_ff28, 36
  store i1 %v7_ff38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ff38, label %dec_label_pc_10224, label %dec_label_pc_ff40

dec_label_pc_ff40:                                ; preds = %dec_label_pc_ff38
  %v2_ff40 = icmp ugt i8 %v3_ff28, 34
  store i1 %v2_ff40, i1* %cpsr_c.global-to-local, align 1
  %v7_ff40 = icmp eq i8 %v3_ff28, 35
  store i1 %v7_ff40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ff40, label %dec_label_pc_10224, label %dec_label_pc_10074.preheader

dec_label_pc_10074.preheader:                     ; preds = %dec_label_pc_ff40
  %v3_ff44 = add i32 %v0_f900, 28
  %v2_ff48 = add i32 %v3_ff44, %v3_ff14
  store i32 %v2_ff48, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10074

dec_label_pc_10050:                               ; preds = %dec_label_pc_10074
  %v1_10050 = add i32 %v0_1006c, -2
  %v2_10050 = inttoptr i32 %v1_10050 to i8*
  %v3_10050 = load i8, i8* %v2_10050, align 1
  %v4_10050 = zext i8 %v3_10050 to i32
  store i32 %v4_10050, i32* %r2.global-to-local, align 4
  %v2_10054 = icmp ugt i8 %v3_10050, 61
  store i1 %v2_10054, i1* %cpsr_c.global-to-local, align 1
  %v7_10054 = icmp eq i8 %v3_10050, 62
  store i1 %v7_10054, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10054, label %dec_label_pc_10224, label %bb404

bb404:                                            ; preds = %dec_label_pc_10050
  %v3_10058 = icmp ugt i8 %v3_10050, 57
  store i1 %v3_10058, i1* %cpsr_c.global-to-local, align 1
  %v8_10058 = icmp eq i8 %v3_10050, 58
  store i1 %v8_10058, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10058, label %dec_label_pc_10224, label %dec_label_pc_10060

dec_label_pc_10060:                               ; preds = %bb404
  %v2_10060 = icmp ugt i8 %v3_10050, 35
  store i1 %v2_10060, i1* %cpsr_c.global-to-local, align 1
  %v7_10060 = icmp eq i8 %v3_10050, 36
  store i1 %v7_10060, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10060, label %dec_label_pc_10224, label %dec_label_pc_10068

dec_label_pc_10068:                               ; preds = %dec_label_pc_10060
  %v2_10068 = icmp ugt i8 %v3_10050, 34
  store i1 %v2_10068, i1* %cpsr_c.global-to-local, align 1
  %v7_10068 = icmp eq i8 %v3_10050, 35
  store i1 %v7_10068, i1* %cpsr_z.global-to-local, align 1
  %v1_1006c = add i32 %v0_1006c, -1
  store i32 %v1_1006c, i32* %r3.global-to-local, align 4
  br i1 %v7_10068, label %dec_label_pc_10224, label %dec_label_pc_10074

dec_label_pc_10074:                               ; preds = %dec_label_pc_10074.preheader, %dec_label_pc_10068
  %v0_1006c = phi i32 [ %v2_ff48, %dec_label_pc_10074.preheader ], [ %v1_1006c, %dec_label_pc_10068 ]
  %v0_10074 = phi i32 [ %v1_ff18, %dec_label_pc_10074.preheader ], [ %v1_10074, %dec_label_pc_10068 ]
  %v1_10074 = add i32 %v0_10074, -1
  store i32 %v1_10074, i32* %r0.global-to-local, align 4
  %v2_10074 = icmp ne i32 %v0_10074, 0
  store i1 %v2_10074, i1* %cpsr_c.global-to-local, align 1
  %v7_10074 = icmp eq i32 %v0_10074, 1
  store i1 %v7_10074, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10074, label %dec_label_pc_1007c, label %dec_label_pc_10050

dec_label_pc_1007c:                               ; preds = %dec_label_pc_10074, %dec_label_pc_ff14
  %v0_1007c = load i32, i32* @fp, align 4
  store i32 %v0_1007c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_16e08.597 to i32), i32* %r2.global-to-local, align 4
  store i32 7, i32* %r3.global-to-local, align 4
  %v5_10088 = call i32 @function_10bf4(i32 %v0_1007c, i32 %v3_ff14, i32 ptrtoint ([8 x i8]* @global_var_16e08.597 to i32), i32 7)
  store i32 %v5_10088, i32* %r0.global-to-local, align 4
  %v2_1008c = icmp eq i32 %v5_10088, -1
  store i1 %v2_1008c, i1* %cpsr_c.global-to-local, align 1
  %v7_1008c = icmp eq i32 %v5_10088, -1
  store i1 %v7_1008c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_10088, i32* @r8, align 4
  br i1 %v7_1008c, label %dec_label_pc_f87c.loopexit, label %dec_label_pc_10098

dec_label_pc_10098:                               ; preds = %dec_label_pc_1007c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10098 = icmp eq i32 %v5_10088, 0
  store i1 %v2_10098, i1* %cpsr_z.global-to-local, align 1
  %tmp405 = icmp slt i32 %v5_10088, 1
  br i1 %tmp405, label %dec_label_pc_ff08, label %dec_label_pc_10098.dec_label_pc_10228_crit_edge

dec_label_pc_10098.dec_label_pc_10228_crit_edge:  ; preds = %dec_label_pc_10098
  %v0_10228.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_10228

dec_label_pc_100a4:                               ; preds = %dec_label_pc_f900
  %v1_100a4 = add i32 %v0_f900, 24
  %v2_100a4 = inttoptr i32 %v1_100a4 to i32*
  %v3_100a4 = load i32, i32* %v2_100a4, align 4
  store i32 %v3_100a4, i32* %r2.global-to-local, align 4
  %v0_100a8 = load i32, i32* @fp, align 4
  store i32 %v0_100a8, i32* @r4, align 4
  store i32 0, i32* @r8, align 4
  %v3_100b0139 = icmp eq i32 %v3_100a4, 0
  store i1 %v3_100b0139, i1* %cpsr_c.global-to-local, align 1
  store i1 %v3_100b0139, i1* %cpsr_z.global-to-local, align 1
  %v6_100b4146 = icmp sgt i32 %v3_100a4, 0
  br i1 %v6_100b4146, label %dec_label_pc_100b8.preheader, label %dec_label_pc_10164

dec_label_pc_100b0.loopexit:                      ; preds = %dec_label_pc_100d4
  %v2_100dc = add i32 %v1_100dc, 2
  store i32 %v2_100dc, i32* @r4, align 4
  %v2_100e0 = add i32 %v1_100e0, 2
  store i32 %v2_100e0, i32* @r8, align 4
  %v3_100b0 = icmp uge i32 %v2_100e0, %v1_100b0
  store i1 %v3_100b0, i1* %cpsr_c.global-to-local, align 1
  %v9_100b0 = icmp eq i32 %v2_100e0, %v1_100b0
  store i1 %v9_100b0, i1* %cpsr_z.global-to-local, align 1
  %v6_100b4 = icmp slt i32 %v2_100e0, %v1_100b0
  br i1 %v6_100b4, label %dec_label_pc_100b8.preheader, label %dec_label_pc_10164

dec_label_pc_100b8.preheader:                     ; preds = %dec_label_pc_100a4, %dec_label_pc_100b0.loopexit
  %v6_1016c223 = phi i32 [ %v6_1016c224, %dec_label_pc_100b0.loopexit ], [ %v0_f900, %dec_label_pc_100a4 ]
  %v1_100e0212 = phi i32 [ %v2_100e0, %dec_label_pc_100b0.loopexit ], [ 0, %dec_label_pc_100a4 ]
  %v1_100c4210 = phi i32 [ %v1_100b0, %dec_label_pc_100b0.loopexit ], [ %v3_100a4, %dec_label_pc_100a4 ]
  %v0_100b8208 = phi i32 [ %v2_100dc, %dec_label_pc_100b0.loopexit ], [ %v0_100a8, %dec_label_pc_100a4 ]
  br label %dec_label_pc_100b8

dec_label_pc_100b8:                               ; preds = %dec_label_pc_100b8.preheader, %dec_label_pc_10148
  %v6_1016c224 = phi i32 [ %v6_1016c223, %dec_label_pc_100b8.preheader ], [ %v0_10150, %dec_label_pc_10148 ]
  %v1_100e0 = phi i32 [ %v1_100e0212, %dec_label_pc_100b8.preheader ], [ %v1_10154, %dec_label_pc_10148 ]
  %v1_100b0 = phi i32 [ %v1_100c4210, %dec_label_pc_100b8.preheader ], [ %v3_10150, %dec_label_pc_10148 ]
  %v1_100dc = phi i32 [ %v0_100b8208, %dec_label_pc_100b8.preheader ], [ %v1_1015c, %dec_label_pc_10148 ]
  %v1_100b8 = inttoptr i32 %v1_100dc to i8*
  %v2_100b8 = load i8, i8* %v1_100b8, align 1
  %v3_100b8 = zext i8 %v2_100b8 to i32
  store i32 %v3_100b8, i32* @r3, align 4
  %v2_100bc = icmp eq i8 %v2_100b8, -1
  store i1 %v2_100bc, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_100bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_100bc, label %dec_label_pc_100c4, label %dec_label_pc_10164

dec_label_pc_100c4:                               ; preds = %dec_label_pc_100b8
  %v0_100c4 = load i32, i32* @fp, align 4
  %v2_100c4 = add i32 %v0_100c4, %v1_100b0
  store i32 %v2_100c4, i32* %r1.global-to-local, align 4
  %v1_100c8 = add i32 %v1_100dc, 1
  store i32 %v1_100c8, i32* @r5, align 4
  %v3_100cc = icmp uge i32 %v2_100c4, %v1_100c8
  store i1 %v3_100cc, i1* %cpsr_c.global-to-local, align 1
  %v9_100cc = icmp eq i32 %v2_100c4, %v1_100c8
  store i1 %v9_100cc, i1* %cpsr_z.global-to-local, align 1
  %v2_100d0 = xor i1 %v3_100cc, true
  %v3_100d0 = or i1 %v9_100cc, %v2_100d0
  br i1 %v3_100d0, label %dec_label_pc_10164, label %dec_label_pc_100d4

dec_label_pc_100d4:                               ; preds = %dec_label_pc_100c4
  %v2_100d4 = inttoptr i32 %v1_100c8 to i8*
  %v3_100d4 = load i8, i8* %v2_100d4, align 1
  %v4_100d4 = zext i8 %v3_100d4 to i32
  store i32 %v4_100d4, i32* @r3, align 4
  %v2_100d8 = icmp eq i8 %v3_100d4, -1
  store i1 %v2_100d8, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_100d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_100d8, label %dec_label_pc_100b0.loopexit, label %dec_label_pc_100e8

dec_label_pc_100e8:                               ; preds = %dec_label_pc_100d4
  %v2_100e8 = icmp ugt i8 %v3_100d4, -4
  store i1 %v2_100e8, i1* %cpsr_c.global-to-local, align 1
  %v7_100e8 = icmp eq i8 %v3_100d4, -3
  store i1 %v7_100e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_100e8, label %dec_label_pc_10174, label %dec_label_pc_100f0

dec_label_pc_100f0:                               ; preds = %dec_label_pc_100e8
  %v1_100f0 = add i32 %v1_100dc, 2
  store i32 %v1_100f0, i32* @r3, align 4
  %v3_100f4 = icmp uge i32 %v2_100c4, %v1_100f0
  store i1 %v3_100f4, i1* %cpsr_c.global-to-local, align 1
  %v9_100f4 = icmp eq i32 %v2_100c4, %v1_100f0
  store i1 %v9_100f4, i1* %cpsr_z.global-to-local, align 1
  %v2_100f8 = xor i1 %v3_100f4, true
  %v3_100f8 = or i1 %v9_100f4, %v2_100f8
  br i1 %v3_100f8, label %dec_label_pc_10164, label %dec_label_pc_100fc

dec_label_pc_100fc:                               ; preds = %dec_label_pc_101d8, %bb410, %.thread109, %dec_label_pc_100f0
  %v0_100fc = load i32, i32* @r5, align 4
  %v1_100fc = inttoptr i32 %v0_100fc to i8*
  %v2_100fc = load i8, i8* %v1_100fc, align 1
  %v3_100fc = zext i8 %v2_100fc to i32
  store i32 %v3_100fc, i32* %r3.global-to-local, align 4
  %v2_10100 = icmp ugt i8 %v2_100fc, -4
  store i1 %v2_10100, i1* %cpsr_c.global-to-local, align 1
  %v7_10100 = icmp eq i8 %v2_100fc, -3
  store i1 %v7_10100, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10100, label %.thread101, label %dec_label_pc_10110

.thread101:                                       ; preds = %dec_label_pc_100fc
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v1_100fc, align 1
  %v0_1010c.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1010c.pr.pr, label %.thread104, label %.thread101.dec_label_pc_10110thread-pre-split_crit_edge

.thread101.dec_label_pc_10110thread-pre-split_crit_edge: ; preds = %.thread101
  %v0_10110.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10110

dec_label_pc_10110:                               ; preds = %dec_label_pc_100fc, %.thread101.dec_label_pc_10110thread-pre-split_crit_edge
  %v0_10110.pr = phi i32 [ %v0_10110.pr.pre, %.thread101.dec_label_pc_10110thread-pre-split_crit_edge ], [ %v3_100fc, %dec_label_pc_100fc ]
  %v2_10110 = icmp ugt i32 %v0_10110.pr, 250
  store i1 %v2_10110, i1* %cpsr_c.global-to-local, align 1
  %v7_10110 = icmp eq i32 %v0_10110.pr, 251
  store i1 %v7_10110, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10110, label %bb406, label %.thread104

bb406:                                            ; preds = %dec_label_pc_10110
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_10118 = load i32, i32* @r5, align 4
  %v4_10118 = inttoptr i32 %v3_10118 to i8*
  store i8 -3, i8* %v4_10118, align 1
  br label %.thread104

.thread104:                                       ; preds = %dec_label_pc_10110, %.thread101, %bb406
  %v0_1011c = load i32, i32* @r4, align 4
  %v1_1011c = add i32 %v0_1011c, 2
  %v2_1011c = inttoptr i32 %v1_1011c to i8*
  %v3_1011c = load i8, i8* %v2_1011c, align 1
  %v4_1011c = zext i8 %v3_1011c to i32
  store i32 %v4_1011c, i32* %r3.global-to-local, align 4
  %v2_10120 = icmp ugt i8 %v3_1011c, -4
  store i1 %v2_10120, i1* %cpsr_c.global-to-local, align 1
  %v7_10120 = icmp eq i8 %v3_1011c, -3
  store i1 %v7_10120, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10120, label %.thread105, label %dec_label_pc_10130

.thread105:                                       ; preds = %.thread104
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v2_1011c, align 1
  %v0_1012c.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1012c.pr.pr, label %.thread108, label %.thread105.dec_label_pc_10130thread-pre-split_crit_edge

.thread105.dec_label_pc_10130thread-pre-split_crit_edge: ; preds = %.thread105
  %v0_10130.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10130

dec_label_pc_10130:                               ; preds = %.thread104, %.thread105.dec_label_pc_10130thread-pre-split_crit_edge
  %v0_10130.pr = phi i32 [ %v0_10130.pr.pre, %.thread105.dec_label_pc_10130thread-pre-split_crit_edge ], [ %v4_1011c, %.thread104 ]
  %v2_10130 = icmp ugt i32 %v0_10130.pr, 250
  store i1 %v2_10130, i1* %cpsr_c.global-to-local, align 1
  %v7_10130 = icmp eq i32 %v0_10130.pr, 251
  store i1 %v7_10130, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10130, label %bb407, label %.thread108

bb407:                                            ; preds = %dec_label_pc_10130
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_10138 = load i32, i32* @r4, align 4
  %v4_10138 = add i32 %v3_10138, 2
  %v5_10138 = inttoptr i32 %v4_10138 to i8*
  store i8 -3, i8* %v5_10138, align 1
  br label %.thread108

.thread108:                                       ; preds = %dec_label_pc_10130, %.thread105, %bb407
  %v0_1013c = load i32, i32* @r6, align 4
  %v1_1013c = add i32 %v0_1013c, 4
  %v2_1013c = inttoptr i32 %v1_1013c to i32*
  %v3_1013c = load i32, i32* %v2_1013c, align 4
  store i32 %v3_1013c, i32* %r0.global-to-local, align 4
  %v0_10140 = load i32, i32* @r4, align 4
  br label %dec_label_pc_10148

dec_label_pc_10148:                               ; preds = %dec_label_pc_10374, %.thread108
  %v0_1014c = phi i32 [ %v3_10388, %dec_label_pc_10374 ], [ %v3_1013c, %.thread108 ]
  %storemerge2 = phi i32 [ %v2_1018c, %dec_label_pc_10374 ], [ %v0_10140, %.thread108 ]
  %storemerge = phi i32 [ 9, %dec_label_pc_10374 ], [ 3, %.thread108 ]
  store i32 %storemerge2, i32* %r1.global-to-local, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  store i32 16384, i32* @r3, align 4
  %v4_1014c = call i32 @function_11c74(i32 %v0_1014c, i32 %storemerge2, i32 %storemerge, i32 16384)
  store i32 %v4_1014c, i32* %r0.global-to-local, align 4
  %v0_10150 = load i32, i32* @r6, align 4
  %v1_10150 = add i32 %v0_10150, 24
  %v2_10150 = inttoptr i32 %v1_10150 to i32*
  %v3_10150 = load i32, i32* %v2_10150, align 4
  store i32 %v3_10150, i32* %r2.global-to-local, align 4
  %v0_10154 = load i32, i32* @r8, align 4
  %v1_10154 = add i32 %v0_10154, 3
  store i32 %v1_10154, i32* @r8, align 4
  %v3_10158 = icmp uge i32 %v1_10154, %v3_10150
  store i1 %v3_10158, i1* %cpsr_c.global-to-local, align 1
  %v9_10158 = icmp eq i32 %v1_10154, %v3_10150
  store i1 %v9_10158, i1* %cpsr_z.global-to-local, align 1
  %v0_1015c = load i32, i32* @r4, align 4
  %v1_1015c = add i32 %v0_1015c, 3
  store i32 %v1_1015c, i32* @r4, align 4
  %v5_10160 = icmp slt i32 %v1_10154, %v3_10150
  br i1 %v5_10160, label %dec_label_pc_100b8, label %dec_label_pc_10164

dec_label_pc_10164:                               ; preds = %dec_label_pc_100b0.loopexit, %dec_label_pc_100b8, %dec_label_pc_10148, %dec_label_pc_100f0, %dec_label_pc_100c4, %dec_label_pc_100a4, %dec_label_pc_10174.dec_label_pc_10164.loopexit_crit_edge
  %v6_1016c = phi i32 [ %v0_101a4, %dec_label_pc_10174.dec_label_pc_10164.loopexit_crit_edge ], [ %v0_f900, %dec_label_pc_100a4 ], [ %v6_1016c224, %dec_label_pc_100b8 ], [ %v0_10150, %dec_label_pc_10148 ], [ %v6_1016c224, %dec_label_pc_100f0 ], [ %v6_1016c224, %dec_label_pc_100c4 ], [ %v6_1016c224, %dec_label_pc_100b0.loopexit ]
  %v0_10164 = phi i32 [ %v0_10164.pre.pre, %dec_label_pc_10174.dec_label_pc_10164.loopexit_crit_edge ], [ 0, %dec_label_pc_100a4 ], [ %v1_100e0, %dec_label_pc_100b8 ], [ %v1_10154, %dec_label_pc_10148 ], [ %v1_100e0, %dec_label_pc_100f0 ], [ %v1_100e0, %dec_label_pc_100c4 ], [ %v2_100e0, %dec_label_pc_100b0.loopexit ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10164 = icmp eq i32 %v0_10164, 0
  store i1 %v2_10164, i1* %cpsr_z.global-to-local, align 1
  %tmp408 = icmp slt i32 %v0_10164, 1
  br i1 %tmp408, label %dec_label_pc_ff08, label %bb409

bb409:                                            ; preds = %dec_label_pc_10164
  store i32 3, i32* @r3, align 4
  %v7_1016c = add i32 %v6_1016c, 12
  %v8_1016c = inttoptr i32 %v7_1016c to i32*
  store i32 3, i32* %v8_1016c, align 4
  br label %dec_label_pc_ff08

dec_label_pc_10174:                               ; preds = %dec_label_pc_100e8
  store i32 %v2_10178, i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_16e91.599 to i32), i32* @r1, align 4
  store i32 3, i32* @r2, align 4
  store i32 %v2_10178, i32* @r0, align 4
  %v0_10190 = call i32 @function_11a70()
  store i32 9, i32* @r2, align 4
  store i32 %v2_1018c, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_16e88.601 to i32), i32* @r1, align 4
  %v0_101a0 = call i32 @function_11a70()
  store i32 %v0_101a0, i32* %r0.global-to-local, align 4
  %v0_101a4 = load i32, i32* @r6, align 4
  %v1_101a4 = add i32 %v0_101a4, 24
  %v2_101a4 = inttoptr i32 %v1_101a4 to i32*
  %v3_101a4 = load i32, i32* %v2_101a4, align 4
  %v0_101a8 = load i32, i32* @r4, align 4
  %v1_101a8 = add i32 %v0_101a8, 2
  store i32 %v1_101a8, i32* %r2.global-to-local, align 4
  %v0_101ac = load i32, i32* @fp, align 4
  %v2_101ac = add i32 %v0_101ac, %v3_101a4
  store i32 %v2_101ac, i32* @r3, align 4
  %v3_101b0 = icmp uge i32 %v2_101ac, %v1_101a8
  store i1 %v3_101b0, i1* %cpsr_c.global-to-local, align 1
  %v9_101b0 = icmp eq i32 %v2_101ac, %v1_101a8
  store i1 %v9_101b0, i1* %cpsr_z.global-to-local, align 1
  %v2_101b4 = xor i1 %v3_101b0, true
  %v3_101b4 = or i1 %v9_101b0, %v2_101b4
  br i1 %v3_101b4, label %dec_label_pc_10174.dec_label_pc_10164.loopexit_crit_edge, label %dec_label_pc_101b8

dec_label_pc_10174.dec_label_pc_10164.loopexit_crit_edge: ; preds = %dec_label_pc_10174
  %v0_10164.pre.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_10164

dec_label_pc_101b8:                               ; preds = %dec_label_pc_10174
  %v2_101b8 = inttoptr i32 %v1_101a8 to i8*
  %v3_101b8 = load i8, i8* %v2_101b8, align 1
  %v4_101b8 = zext i8 %v3_101b8 to i32
  store i32 %v4_101b8, i32* %r3.global-to-local, align 4
  %v2_101bc = icmp ugt i8 %v3_101b8, 30
  store i1 %v2_101bc, i1* %cpsr_c.global-to-local, align 1
  %v7_101bc = icmp eq i8 %v3_101b8, 31
  store i1 %v7_101bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_101bc, label %dec_label_pc_10374, label %dec_label_pc_101c4

dec_label_pc_101c4:                               ; preds = %dec_label_pc_101b8
  %v1_101c4 = inttoptr i32 %v0_101a8 to i8*
  %v2_101c4 = load i8, i8* %v1_101c4, align 1
  %v3_101c4 = zext i8 %v2_101c4 to i32
  store i32 %v3_101c4, i32* %r3.global-to-local, align 4
  %v2_101c8 = icmp ugt i8 %v2_101c4, -4
  store i1 %v2_101c8, i1* %cpsr_c.global-to-local, align 1
  %v7_101c8 = icmp eq i8 %v2_101c4, -3
  store i1 %v7_101c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_101c8, label %.thread109, label %dec_label_pc_101d8

.thread109:                                       ; preds = %dec_label_pc_101c4
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v1_101c4, align 1
  %v0_101d4.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_101d4.pr.pr, label %dec_label_pc_100fc, label %.thread109.dec_label_pc_101d8thread-pre-split_crit_edge

.thread109.dec_label_pc_101d8thread-pre-split_crit_edge: ; preds = %.thread109
  %v0_101d8.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_101d8

dec_label_pc_101d8:                               ; preds = %dec_label_pc_101c4, %.thread109.dec_label_pc_101d8thread-pre-split_crit_edge
  %v0_101d8.pr = phi i32 [ %v0_101d8.pr.pre, %.thread109.dec_label_pc_101d8thread-pre-split_crit_edge ], [ %v3_101c4, %dec_label_pc_101c4 ]
  %v2_101d8 = icmp ugt i32 %v0_101d8.pr, 250
  store i1 %v2_101d8, i1* %cpsr_c.global-to-local, align 1
  %v7_101d8 = icmp eq i32 %v0_101d8.pr, 251
  store i1 %v7_101d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_101d8, label %bb410, label %dec_label_pc_100fc

bb410:                                            ; preds = %dec_label_pc_101d8
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_101e0 = load i32, i32* @r4, align 4
  %v4_101e0 = inttoptr i32 %v3_101e0 to i8*
  store i8 -3, i8* %v4_101e0, align 1
  br label %dec_label_pc_100fc

dec_label_pc_101e8:                               ; preds = %dec_label_pc_feb0, %dec_label_pc_fed0, %dec_label_pc_fec8, %dec_label_pc_fec0, %bb401, %dec_label_pc_fe9c, %dec_label_pc_fe78, %dec_label_pc_fe94, %dec_label_pc_fe8c, %bb400
  %v0_101e8 = phi i32 [ %v1_fe6c, %dec_label_pc_fe9c ], [ %v1_fe6c, %dec_label_pc_fe78 ], [ %v1_fe6c, %dec_label_pc_fe94 ], [ %v1_fe6c, %dec_label_pc_fe8c ], [ %v1_fe6c, %bb400 ], [ %v1_fedc, %bb401 ], [ %v1_fedc, %dec_label_pc_fec0 ], [ %v1_fedc, %dec_label_pc_fec8 ], [ %v1_fedc, %dec_label_pc_fed0 ], [ %v1_fedc, %dec_label_pc_feb0 ]
  %v1_101e8 = add i32 %v0_101e8, 1
  store i32 %v1_101e8, i32* @r8, align 4
  br label %dec_label_pc_101ec

dec_label_pc_101ec:                               ; preds = %dec_label_pc_ff00.dec_label_pc_101ec_crit_edge, %dec_label_pc_101e8
  %v0_101ec = phi i32 [ %v0_101ec.pre, %dec_label_pc_ff00.dec_label_pc_101ec_crit_edge ], [ %v0_f900, %dec_label_pc_101e8 ]
  %v1_101ec = inttoptr i32 %v0_101ec to i32*
  %v2_101ec = load i32, i32* %v1_101ec, align 4
  store i32 %v2_101ec, i32* %r3.global-to-local, align 4
  %v1_101f0 = add i32 %v0_101ec, 4
  %v2_101f0 = inttoptr i32 %v1_101f0 to i32*
  %v3_101f0 = load i32, i32* %v2_101f0, align 4
  store i32 %v3_101f0, i32* %r0.global-to-local, align 4
  %v1_101f4 = add i32 %v2_101ec, 12
  %v2_101f4 = inttoptr i32 %v1_101f4 to i8*
  %v3_101f4 = load i8, i8* %v2_101f4, align 1
  %v4_101f4 = zext i8 %v3_101f4 to i32
  store i32 %v4_101f4, i32* %r2.global-to-local, align 4
  %v1_101f8 = inttoptr i32 %v2_101ec to i32*
  %v2_101f8 = load i32, i32* %v1_101f8, align 4
  store i32 %v2_101f8, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_10200 = call i32 @function_11c74(i32 %v3_101f0, i32 %v2_101f8, i32 %v4_101f4, i32 16384)
  store i32 %v4_10200, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10208 = load i32, i32* @r6, align 4
  %v1_10208 = add i32 %v0_10208, 4
  %v2_10208 = inttoptr i32 %v1_10208 to i32*
  %v3_10208 = load i32, i32* %v2_10208, align 4
  store i32 %v3_10208, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_16dfc.593 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_10214 = call i32 @function_11c74(i32 %v3_10208, i32 ptrtoint ([3 x i8]* @global_var_16dfc.593 to i32), i32 2, i32 16384)
  store i32 %v4_10214, i32* %r0.global-to-local, align 4
  store i32 4, i32* @r3, align 4
  %v1_1021c = load i32, i32* @r6, align 4
  %v2_1021c = add i32 %v1_1021c, 12
  %v3_1021c = inttoptr i32 %v2_1021c to i32*
  store i32 4, i32* %v3_1021c, align 4
  br label %dec_label_pc_ff08

dec_label_pc_10224:                               ; preds = %dec_label_pc_10050, %dec_label_pc_10068, %dec_label_pc_10060, %bb404, %dec_label_pc_ff40, %dec_label_pc_ff24, %dec_label_pc_ff38, %bb403
  %v0_10224 = phi i32 [ %v1_ff18, %dec_label_pc_ff40 ], [ %v1_ff18, %dec_label_pc_ff24 ], [ %v1_ff18, %dec_label_pc_ff38 ], [ %v1_ff18, %bb403 ], [ %v1_10074, %bb404 ], [ %v1_10074, %dec_label_pc_10060 ], [ %v1_10074, %dec_label_pc_10068 ], [ %v1_10074, %dec_label_pc_10050 ]
  %v1_10224 = add i32 %v0_10224, 1
  store i32 %v1_10224, i32* @r8, align 4
  br label %dec_label_pc_10228

dec_label_pc_10228:                               ; preds = %dec_label_pc_10098.dec_label_pc_10228_crit_edge, %dec_label_pc_10224
  %v0_10228 = phi i32 [ %v0_10228.pre, %dec_label_pc_10098.dec_label_pc_10228_crit_edge ], [ %v0_f900, %dec_label_pc_10224 ]
  %v1_10228 = inttoptr i32 %v0_10228 to i32*
  %v2_10228 = load i32, i32* %v1_10228, align 4
  store i32 %v2_10228, i32* %r3.global-to-local, align 4
  %v1_1022c = add i32 %v0_10228, 4
  %v2_1022c = inttoptr i32 %v1_1022c to i32*
  %v3_1022c = load i32, i32* %v2_1022c, align 4
  store i32 %v3_1022c, i32* %r0.global-to-local, align 4
  %v1_10230 = add i32 %v2_10228, 13
  %v2_10230 = inttoptr i32 %v1_10230 to i8*
  %v3_10230 = load i8, i8* %v2_10230, align 1
  %v4_10230 = zext i8 %v3_10230 to i32
  store i32 %v4_10230, i32* %r2.global-to-local, align 4
  %v1_10234 = add i32 %v2_10228, 4
  %v2_10234 = inttoptr i32 %v1_10234 to i32*
  %v3_10234 = load i32, i32* %v2_10234, align 4
  store i32 %v3_10234, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_1023c = call i32 @function_11c74(i32 %v3_1022c, i32 %v3_10234, i32 %v4_10230, i32 16384)
  store i32 %v4_1023c, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10244 = load i32, i32* @r6, align 4
  %v1_10244 = add i32 %v0_10244, 4
  %v2_10244 = inttoptr i32 %v1_10244 to i32*
  %v3_10244 = load i32, i32* %v2_10244, align 4
  store i32 %v3_10244, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_16dfc.593 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_10250 = call i32 @function_11c74(i32 %v3_10244, i32 ptrtoint ([3 x i8]* @global_var_16dfc.593 to i32), i32 2, i32 16384)
  store i32 %v4_10250, i32* %r0.global-to-local, align 4
  store i32 5, i32* @r3, align 4
  %v1_10258 = load i32, i32* @r6, align 4
  %v2_10258 = add i32 %v1_10258, 12
  %v3_10258 = inttoptr i32 %v2_10258 to i32*
  store i32 5, i32* %v3_10258, align 4
  br label %dec_label_pc_ff08

dec_label_pc_10260:                               ; preds = %dec_label_pc_f9a4
  store i32 21, i32* %r0.global-to-local, align 4
  %v1_1026c = call i32 @function_106dc(i32 21)
  store i32 %v2_fe20, i32* %r1.global-to-local, align 4
  store i32 21, i32* %r0.global-to-local, align 4
  %v3_1027c = call i32 @function_10618(i32 21, i32* nonnull %stack_var_-60)
  store i32 %v3_1027c, i32* %r0.global-to-local, align 4
  %v3_10280 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_1027c, i32* %r2.global-to-local, align 4
  %v1_10288 = add i32 %v3_10280, -1
  store i32 %v1_10288, i32* %r3.global-to-local, align 4
  %v0_1028c = load i32, i32* @r6, align 4
  %v1_1028c = add i32 %v0_1028c, 24
  %v2_1028c = inttoptr i32 %v1_1028c to i32*
  %v3_1028c = load i32, i32* %v2_1028c, align 4
  store i32 %v3_1028c, i32* %r1.global-to-local, align 4
  %v0_10290 = load i32, i32* @fp, align 4
  store i32 %v0_10290, i32* %r0.global-to-local, align 4
  %v4_10294 = call i32 @function_10bf4(i32 %v0_10290, i32 %v3_1028c, i32 %v3_1027c, i32 %v1_10288)
  store i32 %v4_10294, i32* @r8, align 4
  store i32 21, i32* %r0.global-to-local, align 4
  %v1_102a0 = call i32 @function_1063c(i32 21)
  store i32 %v1_102a0, i32* @r0, align 4
  %v0_102a4 = load i32, i32* @r8, align 4
  %v2_102a4 = icmp eq i32 %v0_102a4, -1
  store i1 %v2_102a4, i1* %cpsr_c.global-to-local, align 1
  %v7_102a4 = icmp eq i32 %v0_102a4, -1
  store i1 %v7_102a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_102a4, label %dec_label_pc_f87c.loopexit, label %dec_label_pc_102ac

dec_label_pc_102ac:                               ; preds = %dec_label_pc_10260
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_102ac = icmp eq i32 %v0_102a4, 0
  store i1 %v2_102ac, i1* %cpsr_z.global-to-local, align 1
  %tmp411 = icmp slt i32 %v0_102a4, 1
  br i1 %tmp411, label %dec_label_pc_ff08, label %dec_label_pc_102b4

dec_label_pc_102b4:                               ; preds = %dec_label_pc_102ac
  %v0_102b4 = load i32, i32* @r6, align 4
  %v1_102b4 = add i32 %v0_102b4, 20
  %v2_102b4 = inttoptr i32 %v1_102b4 to i16*
  %v3_102b4 = load i16, i16* %v2_102b4, align 2
  %v4_102b4 = zext i16 %v3_102b4 to i32
  store i32 %v4_102b4, i32* %r3.global-to-local, align 4
  %v1_102b8 = add i32 %v0_102b4, 16
  %v2_102b8 = inttoptr i32 %v1_102b8 to i32*
  %v3_102b8 = load i32, i32* %v2_102b8, align 4
  store i32 %v3_102b8, i32* %r2.global-to-local, align 4
  store i32 %v2_102bc, i32* @lr, align 4
  store i32 %v4_102b4, i32* %stack_var_-42, align 4
  store i32 %v3_102b8, i32* %stack_var_-60, align 4
  %v1_102c8 = inttoptr i32 %v0_102b4 to i32*
  %v2_102c8 = load i32, i32* %v1_102c8, align 4
  store i32 %v2_102c8, i32* @sb, align 4
  %v0_102cc = call i32 @function_11238()
  store i32 %v0_102cc, i32* %r0.global-to-local, align 4
  %v7_102d0 = icmp eq i32 %v0_102cc, -1
  %.422 = zext i1 %v7_102d0 to i32
  store i32 %.422, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_102dc = icmp eq i32 %v0_102cc, 0
  store i1 %v2_102dc, i1* %cpsr_z.global-to-local, align 1
  %tmp414 = icmp slt i32 %v0_102cc, 1
  br i1 %tmp414, label %bb415, label %.thread115

.thread115:                                       ; preds = %dec_label_pc_102b4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10334

bb415:                                            ; preds = %dec_label_pc_102b4
  store i32 %.422, i32* @sl, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_102e8 = icmp eq i1 %v7_102d0, false
  store i1 %v2_102e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_102e8, label %dec_label_pc_102f0, label %dec_label_pc_10334

dec_label_pc_102f0:                               ; preds = %bb415
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_102fc = call i32 @function_11d30(i32 2, i32 1, i32 0)
  store i32 %v3_102fc, i32* %r0.global-to-local, align 4
  %v2_10300 = icmp eq i32 %v3_102fc, -1
  store i1 %v2_10300, i1* %cpsr_c.global-to-local, align 1
  %v7_10300 = icmp eq i32 %v3_102fc, -1
  store i1 %v7_10300, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_102fc, i32* @r7, align 4
  br i1 %v7_10300, label %dec_label_pc_105ac, label %dec_label_pc_1030c

dec_label_pc_1030c:                               ; preds = %dec_label_pc_102f0
  store i32 23, i32* %r0.global-to-local, align 4
  %v1_10310 = call i32 @function_106dc(i32 23)
  store i32 24, i32* %r0.global-to-local, align 4
  %v1_10318 = call i32 @function_106dc(i32 24)
  %v0_1031c = load i32, i32* @sl, align 4
  store i32 %v0_1031c, i32* %r1.global-to-local, align 4
  store i32 23, i32* %r0.global-to-local, align 4
  %v2_10324 = inttoptr i32 %v0_1031c to i32*
  %v3_10324 = call i32 @function_10618(i32 23, i32* %v2_10324)
  store i32 %v3_10324, i32* %r0.global-to-local, align 4
  %v1_10328 = call i32 @function_d53c(i32 %v3_10324)
  store i32 %v1_10328, i32* %r0.global-to-local, align 4
  store i32 %v1_10328, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_1032c = icmp eq i32 %v1_10328, 0
  store i1 %v3_1032c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1032c, label %dec_label_pc_10334, label %dec_label_pc_1048c

dec_label_pc_10334:                               ; preds = %.thread115, %dec_label_pc_1030c, %bb415
  %v0_10334 = load i32, i32* @r6, align 4
  %v1_10334 = add i32 %v0_10334, 4
  %v2_10334 = inttoptr i32 %v1_10334 to i32*
  %v3_10334 = load i32, i32* %v2_10334, align 4
  store i32 %v3_10334, i32* %r0.global-to-local, align 4
  %v1_10338 = call i32 @function_11548(i32 %v3_10334)
  store i32 %v1_10338, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @r3, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_10344 = load i32, i32* @r6, align 4
  %v2_10344 = add i32 %v1_10344, 4
  %v3_10344 = inttoptr i32 %v2_10344 to i32*
  store i32 -1, i32* %v3_10344, align 4
  %v0_10348 = load i32, i32* %r2.global-to-local, align 4
  %v1_10348 = load i32, i32* @r6, align 4
  %v2_10348 = add i32 %v1_10348, 12
  %v3_10348 = inttoptr i32 %v2_10348 to i32*
  store i32 %v0_10348, i32* %v3_10348, align 4
  br label %dec_label_pc_ff08

dec_label_pc_10350:                               ; preds = %dec_label_pc_f888
  store i32 %.pre, i32* @r0, align 4
  %v1_10358 = add i32 %v0_10350, 92
  store i32 %v1_10358, i32* @r1, align 4
  store i32 192, i32* @r2, align 4
  %v3_10360 = call i32 @function_11a60(i32 %.pre, i32 %v1_10358, i32 192)
  store i32 %v3_10360, i32* %r0.global-to-local, align 4
  %v0_10364 = load i32, i32* @r6, align 4
  %v1_10364 = add i32 %v0_10364, 24
  %v2_10364 = inttoptr i32 %v1_10364 to i32*
  %v3_10364 = load i32, i32* %v2_10364, align 4
  %v1_10368 = add i32 %v3_10364, -64
  store i32 %v1_10368, i32* %r3.global-to-local, align 4
  store i32 %v1_10368, i32* %v2_10364, align 4
  br label %dec_label_pc_f898

dec_label_pc_10374:                               ; preds = %dec_label_pc_101b8
  store i32 %v2_10178, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v1_10380 = add i32 %v0_101a4, 4
  %v2_10380 = inttoptr i32 %v1_10380 to i32*
  %v3_10380 = load i32, i32* %v2_10380, align 4
  store i32 %v3_10380, i32* %r0.global-to-local, align 4
  %v4_10384 = call i32 @function_11c74(i32 %v3_10380, i32 %v2_10178, i32 3, i32 16384)
  store i32 %v4_10384, i32* %r0.global-to-local, align 4
  %v0_10388 = load i32, i32* @r6, align 4
  %v1_10388 = add i32 %v0_10388, 4
  %v2_10388 = inttoptr i32 %v1_10388 to i32*
  %v3_10388 = load i32, i32* %v2_10388, align 4
  store i32 %v3_10388, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10148

dec_label_pc_10398:                               ; preds = %dec_label_pc_f9dc
  %v0_10398 = load i32, i32* @r6, align 4
  store i32 %v0_10398, i32* @r0, align 4
  %v0_1039c = call i32 @function_da44()
  store i32 %v0_1039c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_fa18

dec_label_pc_103a4:                               ; preds = %dec_label_pc_f840
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 4, i32* %stack_var_-60, align 4
  store i32 %v2_10514, i32* %r3.global-to-local, align 4
  store i32 %v2_fe20, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %stack_var_-56, align 4
  %v5_103cc = call i32 @function_11b88(i32 %v3_f834, i32 1, i32 4, i32 %v2_10514, i32 %v2_fe20)
  %v3_103d0 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_103d0, i32* %r3.global-to-local, align 4
  %v2_103d4 = or i32 %v3_103d0, %v5_103cc
  store i32 %v2_103d4, i32* %r0.global-to-local, align 4
  %v4_103d4 = icmp eq i32 %v2_103d4, 0
  store i1 %v4_103d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_103d4, label %dec_label_pc_103dc, label %dec_label_pc_10470

dec_label_pc_103dc:                               ; preds = %dec_label_pc_103a4
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_103e0 = load i32, i32* @r6, align 4
  %v2_103e0 = add i32 %v1_103e0, 12
  %v3_103e0 = inttoptr i32 %v2_103e0 to i32*
  store i32 2, i32* %v3_103e0, align 4
  %v0_103e4 = call i32 @function_d398()
  store i32 %v0_103e4, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i16** @global_var_1f60c.116 to i32), i32* %r3.global-to-local, align 4
  %v2_103ec = load i16, i16* bitcast (i16** @global_var_1f60c.116 to i16*), align 4
  %v3_103ec = zext i16 %v2_103ec to i32
  store i32 %v3_103ec, i32* %r1.global-to-local, align 4
  %v3_103f0 = call i32 @function_11114(i32 %v0_103e4, i32 %v3_103ec)
  store i32 %v3_103f0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1f5dc.112 to i32), i32* %r3.global-to-local, align 4
  %v2_103f8 = load i32, i32* @global_var_1f5dc.112, align 4
  store i32 %v2_103f8, i32* %ip.global-to-local, align 4
  %v1_10400 = load i32, i32* @r4, align 4
  %v9_10400 = icmp eq i32 %v2_103f8, %v1_10400
  store i1 %v9_10400, i1* %cpsr_z.global-to-local, align 1
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i32 %v3_103ec, i32* %r1.global-to-local, align 4
  %v7_10408 = icmp sgt i32 %v2_103f8, %v1_10400
  br i1 %v7_10408, label %dec_label_pc_1040c, label %dec_label_pc_1044c

dec_label_pc_1040c:                               ; preds = %dec_label_pc_103dc
  %v2_10410 = load i32, i32* @global_var_1f608.114, align 4
  store i32 %v2_10410, i32* %r3.global-to-local, align 4
  store i32 %v1_10400, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1042c

dec_label_pc_1041c:                               ; preds = %dec_label_pc_1043c, %dec_label_pc_1042c
  %v1_1041c = add i32 %v0_1041c, 1
  store i32 %v1_1041c, i32* %r2.global-to-local, align 4
  %v9_10420 = icmp eq i32 %v1_1041c, %v2_103f8
  %v1_10424 = add i32 %v0_10424, 16
  store i32 %v1_10424, i32* %r3.global-to-local, align 4
  br i1 %v9_10420, label %dec_label_pc_1044c.loopexit, label %dec_label_pc_1042c

dec_label_pc_1042c:                               ; preds = %dec_label_pc_1041c, %dec_label_pc_1040c
  %v0_1041c = phi i32 [ %v1_1041c, %dec_label_pc_1041c ], [ %v1_10400, %dec_label_pc_1040c ]
  %v0_10424 = phi i32 [ %v1_10424, %dec_label_pc_1041c ], [ %v2_10410, %dec_label_pc_1040c ]
  store i32 %v0_10424, i32* %r0.global-to-local, align 4
  %v1_10430 = add i32 %v0_10424, 8
  %v2_10430 = inttoptr i32 %v1_10430 to i16*
  %v3_10430 = load i16, i16* %v2_10430, align 2
  %v4_10430 = zext i16 %v3_10430 to i32
  store i32 %v4_10430, i32* %r3.global-to-local, align 4
  %tmp416 = icmp ugt i16 %v3_10430, %v2_103ec
  br i1 %tmp416, label %dec_label_pc_1041c, label %dec_label_pc_1043c

dec_label_pc_1043c:                               ; preds = %dec_label_pc_1042c
  %v1_1043c = add i32 %v0_10424, 10
  %v2_1043c = inttoptr i32 %v1_1043c to i16*
  %v3_1043c = load i16, i16* %v2_1043c, align 2
  %v4_1043c = zext i16 %v3_1043c to i32
  store i32 %v4_1043c, i32* %r3.global-to-local, align 4
  %v3_10440 = icmp uge i16 %v3_1043c, %v2_103ec
  %v9_10440 = icmp eq i16 %v3_1043c, %v2_103ec
  %v2_10444 = xor i1 %v3_10440, true
  %v3_10444 = or i1 %v9_10440, %v2_10444
  br i1 %v3_10444, label %dec_label_pc_1041c, label %dec_label_pc_10450.loopexit

dec_label_pc_1044c.loopexit:                      ; preds = %dec_label_pc_1041c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1044c

dec_label_pc_1044c:                               ; preds = %dec_label_pc_1044c.loopexit, %dec_label_pc_103dc
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10450

dec_label_pc_10450.loopexit:                      ; preds = %dec_label_pc_1043c
  store i1 %v3_10440, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10450

dec_label_pc_10450:                               ; preds = %dec_label_pc_10450.loopexit, %dec_label_pc_1044c
  %v0_10464 = phi i32 [ %v0_10424, %dec_label_pc_10450.loopexit ], [ 0, %dec_label_pc_1044c ]
  %v0_10450 = load i32, i32* @r6, align 4
  %v1_10450 = add i32 %v0_10450, 4
  %v2_10450 = inttoptr i32 %v1_10450 to i32*
  %v3_10450 = load i32, i32* %v2_10450, align 4
  %v3_10454 = udiv i32 %v3_10450, 32
  store i32 %v3_10454, i32* %r2.global-to-local, align 4
  %v1_10458 = urem i32 %v3_10450, 32
  store i32 %v1_10458, i32* %r1.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_1045c = mul nuw nsw i32 %v3_10454, 4
  store i32 %v3_1045c, i32* @ip, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_10464 = inttoptr i32 %v0_10450 to i32*
  store i32 %v0_10464, i32* %v2_10464, align 4
  %v0_10468 = load i32, i32* %r3.global-to-local, align 4
  %v1_10468 = load i32, i32* @r6, align 4
  %v2_10468 = add i32 %v1_10468, 24
  %v3_10468 = inttoptr i32 %v2_10468 to i32*
  store i32 %v0_10468, i32* %v3_10468, align 4
  %v0_f868.pre = load i32, i32* @ip, align 4
  %v1_f870.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_f864

dec_label_pc_10470:                               ; preds = %dec_label_pc_103a4
  %v0_10470 = load i32, i32* @r6, align 4
  %v1_10470 = add i32 %v0_10470, 4
  %v2_10470 = inttoptr i32 %v1_10470 to i32*
  %v3_10470 = load i32, i32* %v2_10470, align 4
  store i32 %v3_10470, i32* %r0.global-to-local, align 4
  %v1_10474 = call i32 @function_11548(i32 %v3_10470)
  store i32 %v1_10474, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_1047c = load i32, i32* @r4, align 4
  %v1_1047c = load i32, i32* @r6, align 4
  %v2_1047c = add i32 %v1_1047c, 12
  %v3_1047c = inttoptr i32 %v2_1047c to i32*
  store i32 %v0_1047c, i32* %v3_1047c, align 4
  %v0_10480 = load i32, i32* %r3.global-to-local, align 4
  %v1_10480 = load i32, i32* @r6, align 4
  %v2_10480 = add i32 %v1_10480, 4
  %v3_10480 = inttoptr i32 %v2_10480 to i32*
  store i32 %v0_10480, i32* %v3_10480, align 4
  %v0_10484 = load i32, i32* @r4, align 4
  %v1_10484 = trunc i32 %v0_10484 to i8
  %v2_10484 = load i32, i32* @r6, align 4
  %v3_10484 = add i32 %v2_10484, 284
  %v4_10484 = inttoptr i32 %v3_10484 to i8*
  store i8 %v1_10484, i8* %v4_10484, align 1
  br label %dec_label_pc_f98c

dec_label_pc_1048c:                               ; preds = %dec_label_pc_1030c
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 %v2_102bc, i32* %r0.global-to-local, align 4
  store i32 2, i32* %stack_var_-96, align 4
  %v1_10498 = add i32 %v1_10328, 4
  %v2_10498 = inttoptr i32 %v1_10498 to i32*
  %v3_10498 = load i32, i32* %v2_10498, align 4
  store i32 %v3_10498, i32* @r4, align 4
  %v0_1049c = call i32 @function_d398()
  store i32 %v0_1049c, i32* %r0.global-to-local, align 4
  %v0_104a0 = load i32, i32* @r5, align 4
  %v1_104a0 = inttoptr i32 %v0_104a0 to i8*
  %v2_104a0 = load i8, i8* %v1_104a0, align 1
  %v3_104a0 = zext i8 %v2_104a0 to i32
  store i32 %v3_104a0, i32* %r1.global-to-local, align 4
  %v2_104a4 = call i32 @function_11114(i32 %v0_1049c, i32 %v3_104a0)
  store i32 %v2_104a4, i32* %r0.global-to-local, align 4
  %v0_104a8 = load i32, i32* @r4, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v4_104a8 = mul nuw nsw i32 %v3_104a0, 4
  %v5_104a8 = add i32 %v0_104a8, %v4_104a8
  %v6_104a8 = inttoptr i32 %v5_104a8 to i32*
  %v7_104a8 = load i32, i32* %v6_104a8, align 4
  store i32 %v7_104a8, i32* %r3.global-to-local, align 4
  store i32 24, i32* %r0.global-to-local, align 4
  %v0_104b0 = load i32, i32* @sl, align 4
  store i32 %v0_104b0, i32* %r1.global-to-local, align 4
  %v2_104b8 = inttoptr i32 %v0_104b0 to i32*
  %v3_104b8 = call i32 @function_10618(i32 24, i32* %v2_104b8)
  store i32 %v2_102bc, i32* %r2.global-to-local, align 4
  %v0_104c8 = load i32, i32* @r5, align 4
  store i32 %v0_104c8, i32* %r0.global-to-local, align 4
  %v1_104cc = call i32 @function_d514(i32 %v0_104c8)
  store i32 23, i32* %r0.global-to-local, align 4
  %v1_104d4 = call i32 @function_1063c(i32 23)
  store i32 24, i32* %r0.global-to-local, align 4
  %v1_104dc = call i32 @function_1063c(i32 24)
  %v0_104e4 = load i32, i32* @r7, align 4
  store i32 %v0_104e4, i32* %r0.global-to-local, align 4
  store i32 %v2_104e8, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_104f0 = call i32 @function_11b18(i32 %v0_104e4, i32 %v2_104e8, i32 16)
  store i32 %v3_104f0, i32* %r0.global-to-local, align 4
  %v3_104f4 = icmp eq i32 %v3_104f0, -1
  store i1 %v3_104f4, i1* %cpsr_c.global-to-local, align 1
  %v8_104f4 = icmp eq i32 %v3_104f0, -1
  store i1 %v8_104f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_104f4, label %dec_label_pc_104fc, label %dec_label_pc_1050c

dec_label_pc_104fc:                               ; preds = %dec_label_pc_1048c
  %v0_104fc = load i32, i32* @r7, align 4
  store i32 %v0_104fc, i32* %r0.global-to-local, align 4
  %v1_10500 = call i32 @function_11548(i32 %v0_104fc)
  %v0_10504 = load i32, i32* @sl, align 4
  store i32 %v0_10504, i32* %r0.global-to-local, align 4
  %v1_10508 = call i32 @function_13388(i32 %v0_10504)
  store i32 %v1_10508, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1050c

dec_label_pc_1050c:                               ; preds = %dec_label_pc_1048c, %dec_label_pc_104fc
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 %v2_10514, i32* %r1.global-to-local, align 4
  %v0_10518 = load i32, i32* @r7, align 4
  store i32 %v0_10518, i32* %r0.global-to-local, align 4
  %v0_1051c = load i32, i32* @sl, align 4
  store i32 %v0_1051c, i32* %stack_var_-56, align 4
  %v5_10520 = call i32 @function_11c74(i32 %v0_10518, i32 %v2_10514, i32 1, i32 16384)
  store i32 %v2_fe20, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10534 = load i32, i32* @r7, align 4
  store i32 %v0_10534, i32* %r0.global-to-local, align 4
  %v4_10538 = call i32 @function_11c74(i32 %v0_10534, i32 %v2_fe20, i32 4, i32 16384)
  store i32 %v2_10540, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_1054c = load i32, i32* @r7, align 4
  store i32 %v0_1054c, i32* %r0.global-to-local, align 4
  %v4_10550 = call i32 @function_11c74(i32 %v0_1054c, i32 %v2_10540, i32 2, i32 16384)
  %v0_10554 = load i32, i32* @sb, align 4
  %v1_10554 = add i32 %v0_10554, 12
  store i32 %v1_10554, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10560 = load i32, i32* @r7, align 4
  store i32 %v0_10560, i32* %r0.global-to-local, align 4
  %v4_10564 = call i32 @function_11c74(i32 %v0_10560, i32 %v1_10554, i32 1, i32 16384)
  store i32 %v4_10564, i32* %r0.global-to-local, align 4
  %v0_10568 = load i32, i32* @sb, align 4
  %v1_10568 = inttoptr i32 %v0_10568 to i32*
  %v2_10568 = load i32, i32* %v1_10568, align 4
  store i32 %v2_10568, i32* %r1.global-to-local, align 4
  %v1_1056c = add i32 %v0_10568, 12
  %v2_1056c = inttoptr i32 %v1_1056c to i8*
  %v3_1056c = load i8, i8* %v2_1056c, align 1
  %v4_1056c = zext i8 %v3_1056c to i32
  store i32 %v4_1056c, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10574 = load i32, i32* @r7, align 4
  store i32 %v0_10574, i32* %r0.global-to-local, align 4
  %v4_10578 = call i32 @function_11c74(i32 %v0_10574, i32 %v2_10568, i32 %v4_1056c, i32 16384)
  %v0_1057c = load i32, i32* @sb, align 4
  %v1_1057c = add i32 %v0_1057c, 13
  store i32 %v1_1057c, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10588 = load i32, i32* @r7, align 4
  store i32 %v0_10588, i32* %r0.global-to-local, align 4
  %v4_1058c = call i32 @function_11c74(i32 %v0_10588, i32 %v1_1057c, i32 1, i32 16384)
  %v0_10590 = load i32, i32* @r7, align 4
  store i32 %v0_10590, i32* %r0.global-to-local, align 4
  %v0_10594 = load i32, i32* @sb, align 4
  %v1_10594 = add i32 %v0_10594, 13
  %v2_10594 = inttoptr i32 %v1_10594 to i8*
  %v3_10594 = load i8, i8* %v2_10594, align 1
  %v4_10594 = zext i8 %v3_10594 to i32
  store i32 %v4_10594, i32* %r2.global-to-local, align 4
  %v1_10598 = add i32 %v0_10594, 4
  %v2_10598 = inttoptr i32 %v1_10598 to i32*
  %v3_10598 = load i32, i32* %v2_10598, align 4
  store i32 %v3_10598, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_105a0 = call i32 @function_11c74(i32 %v0_10590, i32 %v3_10598, i32 %v4_10594, i32 16384)
  %v0_105a4 = load i32, i32* @r7, align 4
  store i32 %v0_105a4, i32* %r0.global-to-local, align 4
  %v1_105a8 = call i32 @function_11548(i32 %v0_105a4)
  store i32 %v1_105a8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_105ac

dec_label_pc_105ac:                               ; preds = %dec_label_pc_102f0, %dec_label_pc_1050c
  %v0_105ac = load i32, i32* @sl, align 4
  store i32 %v0_105ac, i32* %r0.global-to-local, align 4
  %v1_105b0 = call i32 @function_13388(i32 %v0_105ac)
  store i32 %v1_105b0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_105b4

dec_label_pc_105b4:                               ; preds = %dec_label_pc_fee4, %dec_label_pc_105ac
  %v0_105b4 = load i32, i32* @fp, align 4
  store i32 %v0_105b4, i32* %r0.global-to-local, align 4
  %v0_105b8 = load i32, i32* @r6, align 4
  %v1_105b8 = add i32 %v0_105b8, 24
  %v2_105b8 = inttoptr i32 %v1_105b8 to i32*
  %v3_105b8 = load i32, i32* %v2_105b8, align 4
  store i32 %v3_105b8, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_16df4.606 to i32), i32* %r2.global-to-local, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v5_105c4 = call i32 @function_10bf4(i32 %v0_105b4, i32 %v3_105b8, i32 ptrtoint ([6 x i8]* @global_var_16df4.606 to i32), i32 5)
  store i32 %v5_105c4, i32* %r0.global-to-local, align 4
  %v3_105c8 = icmp eq i32 %v5_105c4, -1
  store i1 %v3_105c8, i1* %cpsr_c.global-to-local, align 1
  %v8_105c8 = icmp eq i32 %v5_105c4, -1
  store i1 %v8_105c8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_105c4, i32* @r8, align 4
  br i1 %v3_105c8, label %dec_label_pc_f87c.loopexit, label %dec_label_pc_ff00

dec_label_pc_105d8:                               ; preds = %dec_label_pc_f6d8
  store i32 %v3_105d8, i32* %r0.global-to-local, align 4
  %v3_105dc = udiv i32 %v3_105d8, 32
  %v3_105e0 = mul nuw nsw i32 %v3_105dc, 4
  store i32 %v2_105e4, i32* @lr, align 4
  %v2_105e8 = add i32 %v3_105e0, %v2_105e4
  store i32 %v2_105e8, i32* %r3.global-to-local, align 4
  %v1_105ec = add i32 %v2_105e8, -312
  %v2_105ec = inttoptr i32 %v1_105ec to i32*
  %v3_105ec = load i32, i32* %v2_105ec, align 4
  %v1_105f0 = urem i32 %v3_105d8, 32
  store i32 %v1_105f0, i32* %r1.global-to-local, align 4
  %v7_105f4 = shl i32 1, %v1_105f0
  %v8_105f4 = or i32 %v3_105ec, %v7_105f4
  store i32 %v8_105f4, i32* %r2.global-to-local, align 4
  %v0_105f8 = load i32, i32* @r5, align 4
  %v3_105f8 = icmp uge i32 %v0_105f8, %v3_105d8
  store i1 %v3_105f8, i1* %cpsr_c.global-to-local, align 1
  %v9_105f8 = icmp eq i32 %v0_105f8, %v3_105d8
  store i1 %v9_105f8, i1* %cpsr_z.global-to-local, align 1
  %v5_105fc = icmp slt i32 %v0_105f8, %v3_105d8
  br i1 %v5_105fc, label %bb417, label %bb418

bb417:                                            ; preds = %dec_label_pc_105d8
  store i32 %v3_105d8, i32* @r5, align 4
  br label %bb418

bb418:                                            ; preds = %dec_label_pc_105d8, %bb417
  store i32 %v8_105f4, i32* %v2_105ec, align 4
  br label %bb369

dec_label_pc_10608:                               ; preds = %dec_label_pc_f938
  store i32 %stack_var_-1876.0, i32* %r1.global-to-local, align 4
  store i32 104, i32* %r3.global-to-local, align 4
  store i32 104, i32* %v2_f8a0, align 4
  br label %dec_label_pc_f954

; uselistorder directives
  uselistorder i32 %v0_105f8, { 0, 2, 1 }
  uselistorder i32 %v1_105f0, { 1, 0 }
  uselistorder i32 %v5_105c4, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v3_10450, { 1, 0 }
  uselistorder i1 %v3_10440, { 1, 0 }
  uselistorder i32 %v0_10424, { 0, 2, 4, 3, 1 }
  uselistorder i32 %v2_103f8, { 0, 2, 1, 3 }
  uselistorder i32 %v3_10388, { 1, 0 }
  uselistorder i1 %v7_10300, { 1, 0 }
  uselistorder i32 %v3_102fc, { 1, 0, 2, 3 }
  uselistorder i1 %v2_102e8, { 1, 0 }
  uselistorder i32 %.422, { 1, 0 }
  uselistorder i1 %v7_102d0, { 1, 0 }
  uselistorder i32 %v0_102cc, { 2, 1, 0, 3 }
  uselistorder i1 %v7_102a4, { 1, 0 }
  uselistorder i32 %v0_102a4, { 2, 1, 0, 3 }
  uselistorder i32 %v0_10228, { 1, 0 }
  uselistorder i32 %v0_101ec, { 1, 0 }
  uselistorder i32 %v0_101d8.pr, { 1, 0 }
  uselistorder i32 %v0_101a4, { 1, 2, 0 }
  uselistorder i32 %v0_10164, { 1, 0 }
  uselistorder i32 %v1_1015c, { 1, 0 }
  uselistorder i32 %v1_10154, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 %v3_10150, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_10150, { 0, 2, 1 }
  uselistorder i32 %v0_10130.pr, { 1, 0 }
  uselistorder i32 %v0_10110.pr, { 1, 0 }
  uselistorder i1 %v7_100e8, { 1, 0 }
  uselistorder i1 %v2_100d8, { 1, 0, 2 }
  uselistorder i1 %v2_100bc, { 1, 0, 2 }
  uselistorder i32 %v1_100dc, { 1, 2, 3, 0 }
  uselistorder i32 %v1_100b0, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v2_100e0, { 0, 1, 4, 2, 3, 5 }
  uselistorder i1 %v7_1008c, { 1, 0 }
  uselistorder i32 %v5_10088, { 2, 3, 1, 0, 4, 5 }
  uselistorder i32 %v1_10074, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_10074, { 0, 2, 1 }
  uselistorder i32 %v0_1006c, { 1, 0 }
  uselistorder i1 %v7_10068, { 1, 0 }
  uselistorder i1 %v7_10060, { 1, 0 }
  uselistorder i1 %v8_10058, { 1, 0 }
  uselistorder i1 %v7_ff40, { 1, 0 }
  uselistorder i1 %v7_ff38, { 1, 0 }
  uselistorder i1 %v8_ff30, { 1, 0 }
  uselistorder i32 %v1_ff18, { 1, 2, 3, 4, 5, 0, 6, 7, 8 }
  uselistorder i32 %v3_ff14, { 1, 0, 2, 3 }
  uselistorder i32 %v0_ff00, { 1, 0 }
  uselistorder i1 %v7_fef4, { 1, 0 }
  uselistorder i32 %v5_fef0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_fedc, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_fedc, { 0, 2, 1 }
  uselistorder i32 %v0_fed4, { 1, 0 }
  uselistorder i1 %v7_fed0, { 1, 0 }
  uselistorder i1 %v7_fec8, { 1, 0 }
  uselistorder i1 %v7_fec0, { 1, 0 }
  uselistorder i1 %v8_feb8, { 1, 0 }
  uselistorder i1 %v7_fe9c, { 1, 0 }
  uselistorder i1 %v7_fe94, { 1, 0 }
  uselistorder i1 %v7_fe8c, { 1, 0 }
  uselistorder i1 %v8_fe84, { 1, 0 }
  uselistorder i32 %v1_fe6c, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %v3_fe68, { 1, 0, 2, 3 }
  uselistorder i1 %v8_fe08, { 1, 0 }
  uselistorder i8 %v3_fe00, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_fdf8, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_fdf8, { 0, 2, 1 }
  uselistorder i32 %v0_fdf0, { 1, 0 }
  uselistorder i1 %v7_fdec, { 1, 0 }
  uselistorder i1 %v7_fde4, { 1, 0 }
  uselistorder i1 %v7_fddc, { 1, 0 }
  uselistorder i1 %v7_fdc8, { 1, 0 }
  uselistorder i1 %v7_fdc0, { 1, 0 }
  uselistorder i1 %v7_fdb8, { 1, 0 }
  uselistorder i1 %v8_fdb0, { 1, 0 }
  uselistorder i32 %v1_fd98, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_fd34, { 1, 0 }
  uselistorder i8 %v3_fd2c, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_fd24, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_fd24, { 0, 2, 1 }
  uselistorder i32 %v0_fd1c, { 1, 0 }
  uselistorder i1 %v7_fd18, { 1, 0 }
  uselistorder i1 %v7_fd10, { 1, 0 }
  uselistorder i1 %v7_fd08, { 1, 0 }
  uselistorder i1 %v7_fcf4, { 1, 0 }
  uselistorder i1 %v7_fcec, { 1, 0 }
  uselistorder i1 %v7_fce4, { 1, 0 }
  uselistorder i1 %v8_fcdc, { 1, 0 }
  uselistorder i32 %v1_fcc4, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_fc60, { 1, 0 }
  uselistorder i8 %v3_fc58, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_fc50, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_fc50, { 0, 2, 1 }
  uselistorder i32 %v0_fc48, { 1, 0 }
  uselistorder i1 %v7_fc44, { 1, 0 }
  uselistorder i1 %v7_fc3c, { 1, 0 }
  uselistorder i1 %v7_fc34, { 1, 0 }
  uselistorder i1 %v7_fc20, { 1, 0 }
  uselistorder i1 %v7_fc18, { 1, 0 }
  uselistorder i1 %v7_fc10, { 1, 0 }
  uselistorder i1 %v8_fc08, { 1, 0 }
  uselistorder i32 %v1_fbf0, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_fb8c, { 1, 0 }
  uselistorder i8 %v3_fb84, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_fb7c, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_fb7c, { 0, 2, 1 }
  uselistorder i32 %v0_fb74, { 1, 0 }
  uselistorder i1 %v7_fb70, { 1, 0 }
  uselistorder i1 %v7_fb68, { 1, 0 }
  uselistorder i1 %v7_fb60, { 1, 0 }
  uselistorder i1 %v7_fb4c, { 1, 0 }
  uselistorder i1 %v7_fb44, { 1, 0 }
  uselistorder i1 %v7_fb3c, { 1, 0 }
  uselistorder i1 %v8_fb34, { 1, 0 }
  uselistorder i32 %v1_fb1c, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_fab8, { 1, 0 }
  uselistorder i8 %v3_fab0, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_faa8, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_faa8, { 0, 2, 1 }
  uselistorder i32 %v0_faa0, { 1, 0 }
  uselistorder i1 %v7_fa9c, { 1, 0 }
  uselistorder i1 %v7_fa94, { 1, 0 }
  uselistorder i1 %v7_fa8c, { 1, 0 }
  uselistorder i1 %v7_fa78, { 1, 0 }
  uselistorder i1 %v7_fa70, { 1, 0 }
  uselistorder i1 %v7_fa68, { 1, 0 }
  uselistorder i1 %v8_fa60, { 1, 0 }
  uselistorder i32 %v1_fa48, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %v0_fa34, { 1, 2, 0 }
  uselistorder i32 %v2_fa20, { 1, 0 }
  uselistorder i32 %v0_fa20, { 2, 4, 0, 1, 3, 5 }
  uselistorder i32 %v3_fa1c, { 2, 1, 4, 0, 5, 3 }
  uselistorder i32 %v1_f9f4, { 2, 1, 0 }
  uselistorder i1 %v7_f9d4, { 1, 0 }
  uselistorder i32 %v1_f990, { 2, 0, 3, 4, 5, 1 }
  uselistorder i1 %v1_f974, { 1, 0 }
  uselistorder i32 %v1_f964, { 2, 1, 0 }
  uselistorder i32 %v1_f960, { 1, 0 }
  uselistorder i32 %v3_f900, { 1, 2, 3, 0 }
  uselistorder i32 %v0_f900, { 22, 20, 4, 0, 19, 5, 6, 23, 7, 8, 21, 9, 10, 24, 11, 12, 27, 13, 14, 25, 15, 16, 26, 17, 18, 28, 29, 3, 2, 1 }
  uselistorder i32 %v1_f8dc, { 1, 2, 3, 0 }
  uselistorder i32 %v3_f8d8, { 1, 0 }
  uselistorder i32 %v4_f8bc, { 0, 2, 1, 3, 4, 5, 6, 7 }
  uselistorder i32 %v2_f8a8, { 1, 0, 2 }
  uselistorder i32 %v3_f8a4, { 1, 0, 2 }
  uselistorder i32 %v0_10350, { 1, 0, 2 }
  uselistorder i32 %v3_f86c, { 1, 0 }
  uselistorder i32 %v1_f854, { 3, 2, 1, 0 }
  uselistorder i32 %v3_f850, { 1, 0 }
  uselistorder i32 %v3_f848, { 1, 2, 0 }
  uselistorder i1 %v7_f838, { 1, 0 }
  uselistorder i32 %v3_f834, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 %v0_f828, { 1, 0 }
  uselistorder i32 %v2_10514, { 2, 3, 1, 0 }
  uselistorder i32 %v2_fe20, { 4, 5, 1, 0, 3, 10, 7, 9, 8, 6, 2 }
  uselistorder i32 %v2_1018c, { 1, 0 }
  uselistorder i32 %v1_f7d0, { 0, 1, 3, 2 }
  uselistorder i32 %v0_f7d0, { 0, 1, 3, 2 }
  uselistorder i32 %v1_f79c, { 2, 1, 0 }
  uselistorder i32 %v1_f798, { 1, 0 }
  uselistorder i1 %v2_f778, { 1, 0, 2 }
  uselistorder i32 %v0_f774, { 1, 0, 2 }
  uselistorder i1 %v7_f740, { 0, 3, 4, 1, 2 }
  uselistorder i1 %v2_f740, { 1, 0, 2 }
  uselistorder i32 %v2_f738, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_f72c, { 1, 0, 2 }
  uselistorder i32 %v0_f730, { 1, 0 }
  uselistorder i32 %v1_f714, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 %v1_f708, { 0, 1, 3, 2 }
  uselistorder i32 %v0_f708, { 0, 2, 1 }
  uselistorder i32 %v1_f6f8, { 1, 0 }
  uselistorder i32 %v3_105d8, { 4, 7, 5, 6, 1, 0, 9, 3, 2, 8 }
  uselistorder i32 %v2_105e4, { 0, 7, 1, 5, 2, 4, 3, 6 }
  uselistorder i32 %stack_var_-1876.0, { 1, 0, 2, 3 }
  uselistorder i32 %v1_f644, { 1, 0 }
  uselistorder i32 %v1_f62c, { 0, 2, 3, 1 }
  uselistorder i32 %v0_f638, { 0, 3, 2, 1 }
  uselistorder i32 %v0_f5e8, { 2, 3, 4, 1, 0, 5, 7, 6 }
  uselistorder i32 %v5_f5dc, { 2, 1, 0 }
  uselistorder i32 %v1_f5bc, { 2, 3, 0, 1, 4 }
  uselistorder i1 %v2_f598, { 1, 0 }
  uselistorder i1 %v9_f564, { 1, 0 }
  uselistorder i32 %v1_f4b4, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_f464, { 1, 0 }
  uselistorder i32 %v5_f3fc, { 1, 0 }
  uselistorder i32 %v3_f3ec, { 1, 2, 0 }
  uselistorder i16 %v4_f3e8, { 1, 0 }
  uselistorder i32 %v3_f3e8, { 1, 0 }
  uselistorder i1 %v2_f344, { 1, 0 }
  uselistorder i1 %v3_f328, { 1, 0, 2 }
  uselistorder i1 %v2_f314, { 1, 0 }
  uselistorder i1 %v2_f2f0, { 1, 0 }
  uselistorder i32 %v1_f2a0, { 14, 13, 12, 11, 15, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_f28c, { 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 20, 21, 22, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 6, 7, 8, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_f288, { 4, 5, 6, 7, 0, 8, 1, 2, 3, 9 }
  uselistorder i32 %v0_f270, { 1, 0 }
  uselistorder i32 %v0_f544, { 0, 1, 2, 3, 6, 7, 10, 9, 4, 5, 8, 12, 11 }
  uselistorder i32 %stack_var_-1880.0, { 0, 3, 2, 1 }
  uselistorder i16 %v5_e0b8.le, { 0, 2, 1 }
  uselistorder i32 %v0_e09c, { 2, 0, 1 }
  uselistorder i1 %v7_e03c, { 1, 0 }
  uselistorder i32 %v3_e034, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 %v0_e020, { 1, 0 }
  uselistorder i32 %v2_e004, { 1, 0, 2 }
  uselistorder i32 %v0_dff0, { 1, 2, 0 }
  uselistorder i32 %storemerge294, { 1, 0 }
  uselistorder i32 %v0_dc78, { 1, 2, 3, 0, 4 }
  uselistorder i32* %stack_var_-52, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 11, 12 }
  uselistorder i32* %stack_var_-96, { 0, 3, 1, 2, 4 }
  uselistorder i32* %stack_var_-68, { 1, 0 }
  uselistorder i32* %stack_var_-224, { 1, 0 }
  uselistorder i32* %stack_var_-352, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 7, 8, 9, 5, 10, 0, 11, 3, 12, 1, 13, 2, 14, 4, 15, 6, 16 }
  uselistorder i32 %tmp300, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 73, 74, 61, 62, 63, 64, 65, 66, 67, 68, 69, 75, 76, 77, 78, 79, 81, 80, 82, 83, 84, 86, 85, 87, 1, 88, 140, 70, 71, 15, 16, 17, 60, 58, 59, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 28, 30, 31, 32, 33, 35, 34, 36, 37, 38, 39, 41, 40, 42, 43, 44, 45, 47, 46, 48, 49, 50, 51, 53, 52, 54, 55, 56, 57, 72, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 115, 114, 111, 117, 116, 0, 118, 119, 159, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 158, 136, 137, 138, 139, 142, 141, 144, 143, 157, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156 }
  uselistorder i32* %r2.global-to-local, { 51, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 52, 53, 54, 55, 0, 43, 44, 45, 46, 47, 5, 6, 31, 32, 1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 48, 49, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 368, 369, 70, 71, 73, 72, 69, 370, 74, 371, 75, 372, 373, 76, 77, 78, 79, 80, 81, 82, 83, 84, 50, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 342, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 374, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367 }
  uselistorder i32* %r1.global-to-local, { 52, 53, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 54, 55, 56, 57, 58, 1, 46, 47, 48, 49, 3, 4, 32, 33, 0, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 356, 357, 50, 51, 59, 60, 61, 62, 63, 65, 66, 67, 64, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 329, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 358, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355 }
  uselistorder i32* %r0.global-to-local, { 113, 63, 62, 65, 64, 67, 66, 69, 68, 70, 72, 71, 73, 74, 75, 76, 77, 78, 80, 79, 81, 83, 82, 84, 85, 87, 86, 117, 114, 115, 116, 118, 120, 119, 88, 0, 2, 1, 122, 90, 89, 91, 93, 92, 94, 95, 97, 96, 98, 99, 100, 102, 101, 103, 7, 6, 9, 8, 59, 58, 61, 60, 3, 5, 4, 13, 10, 11, 12, 17, 14, 15, 16, 18, 20, 19, 22, 21, 24, 23, 25, 26, 28, 27, 30, 29, 32, 31, 33, 34, 36, 35, 38, 37, 40, 39, 41, 42, 44, 43, 46, 45, 48, 47, 49, 50, 52, 51, 54, 53, 56, 55, 57, 105, 107, 106, 108, 104, 109, 110, 111, 121, 125, 123, 124, 131, 126, 127, 128, 443, 129, 130, 132, 134, 133, 135, 140, 136, 139, 137, 138, 141, 143, 144, 142, 147, 145, 146, 150, 148, 149, 152, 151, 112, 444, 154, 153, 155, 157, 156, 159, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 411, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 445, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 431, 433, 438, 434, 435, 436, 437, 439, 440, 441, 442 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 3, 6, 4, 5, 7, 22, 8, 9, 10, 11, 12, 13, 14, 15, 0, 16, 17, 18, 19, 20, 21 }
  uselistorder i1* %cpsr_z.global-to-local, { 123, 106, 107, 213, 214, 124, 125, 108, 109, 110, 122, 111, 113, 114, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 208, 19, 20, 25, 21, 22, 23, 24, 26, 27, 28, 29, 30, 112, 105, 31, 37, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 47, 48, 49, 44, 45, 46, 50, 51, 52, 53, 54, 55, 59, 60, 61, 56, 57, 58, 63, 64, 65, 66, 67, 68, 72, 73, 74, 69, 70, 71, 75, 76, 77, 78, 79, 80, 84, 85, 86, 81, 82, 83, 87, 88, 89, 90, 91, 92, 96, 97, 98, 93, 94, 95, 99, 100, 101, 102, 103, 104, 115, 116, 117, 118, 126, 128, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 62, 218, 209, 210, 138, 139, 140, 141, 143, 142, 144, 145, 146, 149, 151, 152, 150, 147, 148, 215, 216, 211, 153, 212, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 121, 186, 187, 188, 189, 190, 120, 191, 192, 193, 119, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 217, 207 }
  uselistorder i1* %cpsr_c.global-to-local, { 120, 103, 104, 105, 121, 207, 208, 122, 106, 107, 108, 119, 109, 111, 112, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 202, 16, 17, 22, 18, 19, 20, 21, 23, 24, 25, 26, 27, 110, 102, 28, 34, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 44, 45, 46, 41, 42, 43, 47, 48, 49, 50, 51, 52, 56, 57, 58, 53, 54, 55, 59, 60, 61, 62, 63, 64, 68, 69, 70, 65, 66, 67, 71, 72, 73, 74, 75, 76, 80, 81, 82, 77, 78, 79, 83, 84, 85, 86, 88, 89, 93, 94, 95, 90, 91, 92, 96, 97, 98, 99, 100, 101, 113, 114, 115, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 87, 212, 203, 204, 135, 136, 137, 138, 139, 140, 141, 144, 146, 147, 145, 142, 143, 209, 210, 205, 148, 206, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 118, 179, 180, 181, 182, 183, 117, 184, 185, 186, 116, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 211, 201 }
  uselistorder i16* bitcast (i16** @global_var_1f60c.116 to i16*), { 1, 0 }
  uselistorder i16** @global_var_1f60c.116, { 1, 0 }
  uselistorder i32 ptrtoint (i16** @global_var_1f60c.116 to i32), { 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_11b88, { 1, 0 }
  uselistorder i32 23, { 0, 3, 1, 4, 2, 5, 6 }
  uselistorder i8 31, { 6, 0, 1, 2, 3, 7, 4, 5 }
  uselistorder i8 30, { 4, 0, 1, 5, 2, 3 }
  uselistorder i32 251, { 3, 4, 5, 0, 1, 2 }
  uselistorder i8 -3, { 3, 4, 1, 5, 2, 6, 0 }
  uselistorder i8 -4, { 3, 4, 1, 5, 2, 6, 0 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_16dfc.593 to i32), { 5, 7, 6, 8, 0, 9, 3, 10, 1, 11, 2, 12, 4, 13 }
  uselistorder i32 (i32, i32, i32, i32)* @function_11c74, { 12, 11, 10, 9, 8, 7, 6, 28, 26, 25, 14, 13, 27, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 5, 4, 3, 2, 1, 0 }
  uselistorder i8 37, { 0, 1, 2, 3, 8, 9, 4, 5, 6, 7, 10, 11 }
  uselistorder i8 34, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13 }
  uselistorder i8 36, { 4, 5, 0, 1, 2, 3, 6, 7, 8, 9, 18, 19, 20, 21, 10, 11, 12, 13, 14, 15, 16, 17, 22, 23, 24, 25 }
  uselistorder i8 35, { 4, 5, 6, 7, 0, 1, 2, 3, 8, 9, 10, 11, 20, 21, 22, 23, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 26, 27 }
  uselistorder i8 58, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13, 14, 15 }
  uselistorder i8 57, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13 }
  uselistorder i8 62, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13 }
  uselistorder i8 61, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13 }
  uselistorder i32 (i32)* @function_1063c, { 18, 17, 16, 23, 22, 21, 20, 19, 15, 0, 2, 1, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10bf4, { 2, 1, 4, 3, 0 }
  uselistorder i32 (i32, i32*)* @function_10618, { 5, 6, 7, 0, 1, 2, 3, 4, 8, 28, 26, 27, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 22, 23, 24 }
  uselistorder i32 (i32)* @function_106dc, { 18, 17, 16, 23, 22, 21, 20, 19, 15, 0, 2, 1, 14, 13, 12, 11, 10, 6, 5, 4, 3, 9, 8, 7 }
  uselistorder i32 (i32, i32, i32, i32)* @function_11c00, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_1126c, { 1, 2, 0 }
  uselistorder i32 284, { 3, 0, 1, 2, 4, 5, 6, 7, 8 }
  uselistorder i32 ()* @function_da44, { 2, 1, 0 }
  uselistorder i32 254, { 3, 4, 5, 0, 1, 2 }
  uselistorder i8 5, { 11, 0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 39, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_11c38, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_11cac, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_bfc8, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 4873, { 1, 0 }
  uselistorder i32* @global_var_1f5f8.586, { 1, 0 }
  uselistorder i16* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_1f5f4.129 to i32), i32 2) to i16*), { 1, 0 }
  uselistorder i32 (i32, i32)* @function_bf78, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i16* bitcast (i32* @global_var_1f5ea.582 to i16*), { 1, 0, 2 }
  uselistorder i32 (i32)* @llvm.bswap.i32, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 15, 16, 19, 20, 21, 22 }
  uselistorder i32 214, { 1, 0 }
  uselistorder i32 29, { 1, 0 }
  uselistorder i32 223, { 2, 0, 1 }
  uselistorder i32 62, { 1, 0 }
  uselistorder i32 192, { 2, 3, 4, 0, 1 }
  uselistorder i32 126, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_16dbc.571 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_16d90.566 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_16d3c.546 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_16d24.540 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_16d08.529 to i32), { 0, 4, 1, 2, 3, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_16d00.527 to i32), { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_16cd4.517 to i32), { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_16ccc.515 to i32), { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_16cc4.511 to i32), { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_16cbc.508 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_16c58.482 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_16c4c.478 to i32), { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_16c3c.474 to i32), { 0, 6, 1, 2, 3, 7, 4, 8, 5, 9 }
  uselistorder i32 ptrtoint (i32* @global_var_16be4.452 to i32), { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_16e58.448 to i32), { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_16bac.438 to i32), { 0, 7, 1, 8, 2, 9, 3, 10, 4, 11, 5, 12, 6, 13 }
  uselistorder i32 ptrtoint (i32* @global_var_16b2c.412 to i32), { 0, 1, 2, 5, 3, 6, 4, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_16b0c.406 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_16af8.402 to i32), { 0, 7, 1, 8, 2, 9, 3, 4, 5, 10, 6, 11 }
  uselistorder i32 ptrtoint (i32* @global_var_16af0.400 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_16ac8.390 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_16914.292 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_16e18.258 to i32), { 0, 4, 1, 2, 3, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_1687c.256 to i32), { 0, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_1686c.254 to i32), { 0, 6, 1, 7, 2, 8, 3, 4, 5, 9 }
  uselistorder i32 ptrtoint (i32* @global_var_16838.242 to i32), { 0, 6, 1, 7, 2, 3, 4, 8, 5, 9 }
  uselistorder i32 ptrtoint (i32* @global_var_16824.238 to i32), { 0, 4, 1, 2, 3, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_1681c.236 to i32), { 0, 4, 1, 2, 3, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_167f4.228 to i32), { 0, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_167c0.226 to i32), { 0, 1, 2, 5, 3, 6, 4, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_167e0.222 to i32), { 0, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_16b84.184 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_16760.182 to i32), { 0, 10, 1, 11, 2, 12, 3, 13, 4, 14, 5, 15, 6, 16, 7, 17, 8, 18, 9, 19 }
  uselistorder i32 ptrtoint (i32* @global_var_16758.180 to i32), { 0, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_16750.178 to i32), { 2, 11, 0, 12, 3, 13, 4, 14, 5, 15, 1, 16, 6, 7, 8, 17, 9, 18, 10, 19 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_16748.176 to i32), { 0, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_16d68.174 to i32), { 0, 1, 2, 8, 3, 9, 4, 10, 5, 11, 6, 12, 7, 13 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_16c88.172 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_16738.168 to i32), { 0, 14, 1, 15, 2, 16, 3, 17, 4, 18, 5, 19, 6, 20, 7, 21, 8, 22, 9, 10, 11, 23, 12, 24, 13, 25 }
  uselistorder i32 ptrtoint (i32* @global_var_16e10.166 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_16730.164 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_16728.162 to i32), { 0, 6, 1, 7, 2, 8, 3, 9, 4, 10, 5, 11 }
  uselistorder i32 ptrtoint (i32* @global_var_166e8.144 to i32), { 11, 101, 12, 102, 13, 103, 14, 104, 15, 105, 16, 106, 17, 107, 18, 108, 19, 109, 20, 110, 21, 111, 22, 112, 23, 113, 24, 114, 25, 115, 26, 116, 27, 117, 28, 118, 29, 119, 0, 120, 30, 121, 31, 122, 32, 123, 33, 124, 1, 125, 34, 126, 35, 127, 2, 128, 36, 129, 37, 130, 38, 131, 39, 132, 40, 133, 3, 134, 41, 135, 42, 136, 43, 137, 4, 138, 44, 139, 45, 140, 46, 141, 47, 142, 48, 143, 49, 144, 50, 145, 51, 146, 52, 147, 53, 148, 54, 149, 5, 150, 55, 151, 56, 152, 57, 153, 58, 154, 59, 155, 60, 156, 61, 157, 62, 158, 6, 159, 63, 160, 64, 161, 65, 162, 66, 163, 67, 164, 68, 165, 69, 166, 7, 167, 8, 168, 70, 169, 71, 170, 72, 171, 73, 172, 74, 173, 75, 174, 76, 175, 77, 176, 78, 177, 79, 178, 80, 179, 81, 180, 82, 181, 83, 182, 84, 183, 85, 184, 9, 185, 86, 186, 87, 187, 88, 188, 89, 189, 90, 190, 10, 191, 91, 192, 92, 193, 93, 194, 94, 195, 95, 196, 96, 97, 98, 197, 99, 198, 100, 199 }
  uselistorder i32 (i32, i32, i32)* @function_db0c, { 269, 268, 267, 266, 265, 264, 263, 262, 261, 260, 259, 258, 257, 256, 255, 254, 253, 252, 251, 250, 249, 248, 247, 246, 245, 244, 243, 242, 241, 240, 239, 238, 237, 236, 235, 234, 233, 232, 231, 230, 229, 228, 227, 226, 225, 224, 223, 222, 221, 220, 219, 218, 217, 216, 215, 214, 213, 212, 211, 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_166dc.140 to i32), { 9, 81, 10, 82, 11, 83, 0, 84, 12, 85, 13, 86, 14, 87, 15, 88, 16, 89, 1, 90, 17, 91, 18, 92, 19, 93, 2, 94, 20, 95, 21, 96, 22, 97, 23, 98, 24, 99, 25, 100, 26, 101, 27, 102, 28, 103, 29, 104, 3, 105, 30, 106, 31, 107, 32, 108, 33, 109, 4, 110, 34, 111, 35, 112, 36, 113, 37, 114, 38, 115, 39, 116, 40, 117, 41, 118, 42, 119, 5, 120, 43, 121, 44, 122, 45, 123, 6, 124, 46, 125, 47, 126, 48, 127, 49, 128, 50, 129, 51, 130, 52, 131, 53, 132, 54, 133, 55, 134, 56, 135, 57, 136, 58, 59, 60, 137, 61, 138, 62, 139, 63, 140, 64, 141, 65, 142, 66, 143, 67, 144, 68, 145, 69, 146, 70, 147, 71, 148, 72, 149, 7, 150, 73, 151, 74, 152, 75, 153, 8, 154, 76, 155, 77, 156, 78, 157, 79, 158, 80, 159 }
  uselistorder i32 ptrtoint (i32* @global_var_16768.138 to i32), { 1, 15, 2, 16, 3, 17, 4, 18, 5, 19, 6, 20, 7, 21, 8, 22, 9, 23, 10, 24, 11, 25, 12, 26, 13, 27, 14, 28, 0, 29 }
  uselistorder i8* @global_var_1f601.135, { 1, 0 }
  uselistorder i16 5888, { 1, 0, 2, 3 }
  uselistorder i32 5888, { 1, 0, 2 }
  uselistorder i8 6, { 2, 0, 3, 4, 5, 6, 1 }
  uselistorder i8 16, { 0, 1, 2, 4, 3, 12, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i16* @global_var_1f5f4.129, { 0, 2, 1 }
  uselistorder i32 ptrtoint (i16* @global_var_1f5f4.129 to i32), { 5, 2, 1, 0, 4, 3 }
  uselistorder i8* @global_var_1f600.130, { 1, 0 }
  uselistorder i32 10240, { 1, 0, 2 }
  uselistorder i8** @global_var_1f5e0.126, { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_1f5e0.126 to i32), { 2, 10, 3, 1, 0, 9, 4, 8, 7, 6, 5 }
  uselistorder i32 1023, { 2, 0, 1 }
  uselistorder i32 ()* @function_d398, { 66, 64, 63, 62, 61, 60, 59, 65, 58, 11, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_11cec, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 2048, { 7, 6, 3, 4, 5, 0, 1, 8, 2, 9, 10 }
  uselistorder i32* @global_var_21660.124, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* @global_var_2165c.122, { 2, 3, 4, 0, 1, 5 }
  uselistorder i32 288, { 2, 3, 6, 0, 1, 4, 5, 7 }
  uselistorder i32* @global_var_1f610.110, { 2, 0, 3, 4, 1, 6, 5 }
  uselistorder i32 (i32)* @function_d3f4, { 1, 0 }
  uselistorder i32* @global_var_21644.39, { 3, 4, 1, 2, 0, 5, 6, 7, 8, 9, 10, 13, 11, 12 }
  uselistorder i32 ptrtoint (i32* @global_var_21644.39 to i32), { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 ()* @function_10df8, { 2, 1, 0 }
  uselistorder i32 ()* @function_11238, { 4, 3, 2, 0, 1 }
  uselistorder label %bb418, { 1, 0 }
  uselistorder label %dec_label_pc_105b4, { 1, 0 }
  uselistorder label %dec_label_pc_105ac, { 1, 0 }
  uselistorder label %dec_label_pc_1050c, { 1, 0 }
  uselistorder label %dec_label_pc_10334, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10228, { 1, 0 }
  uselistorder label %dec_label_pc_10224, { 1, 2, 3, 0, 4, 6, 7, 5 }
  uselistorder label %dec_label_pc_101ec, { 1, 0 }
  uselistorder label %dec_label_pc_101e8, { 1, 2, 3, 4, 0, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_101d8, { 1, 0 }
  uselistorder label %dec_label_pc_10164, { 6, 2, 3, 4, 1, 0, 5 }
  uselistorder label %.thread108, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10130, { 1, 0 }
  uselistorder label %.thread104, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10110, { 1, 0 }
  uselistorder label %dec_label_pc_100fc, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_100b8, { 1, 0 }
  uselistorder label %dec_label_pc_100b8.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10074, { 1, 0 }
  uselistorder label %dec_label_pc_ff08, { 7, 4, 5, 6, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_fedc, { 1, 0 }
  uselistorder label %dec_label_pc_fe10, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_fdf8, { 1, 0 }
  uselistorder label %dec_label_pc_fd3c, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_fd24, { 1, 0 }
  uselistorder label %dec_label_pc_fc68, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_fc50, { 1, 0 }
  uselistorder label %dec_label_pc_fb94, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_fb7c, { 1, 0 }
  uselistorder label %dec_label_pc_fac0, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_faa8, { 1, 0 }
  uselistorder label %dec_label_pc_f98c, { 6, 7, 3, 1, 0, 2, 4, 5 }
  uselistorder label %bb381, { 1, 0 }
  uselistorder label %bb379, { 1, 0 }
  uselistorder label %dec_label_pc_f954, { 1, 0 }
  uselistorder label %dec_label_pc_f8e8, { 1, 0 }
  uselistorder label %.thread62, { 1, 0 }
  uselistorder label %dec_label_pc_f898, { 1, 0 }
  uselistorder label %dec_label_pc_f888, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_f880thread-pre-split.thread512, { 0, 3, 1, 2, 4 }
  uselistorder label %dec_label_pc_f880thread-pre-split.thread, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_f888.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_f87c.loopexit, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_f864, { 1, 0 }
  uselistorder label %dec_label_pc_f7b8, { 1, 0 }
  uselistorder label %bb375, { 1, 0 }
  uselistorder label %bb373, { 1, 0 }
  uselistorder label %bb371, { 1, 0 }
  uselistorder label %bb369, { 3, 4, 0, 1, 2, 6, 5 }
  uselistorder label %dec_label_pc_f6ac.dec_label_pc_f6ac_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_f688.dec_label_pc_f688_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_f67c, { 4, 5, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_f674, { 1, 0 }
  uselistorder label %dec_label_pc_f650, { 1, 0 }
  uselistorder label %dec_label_pc_f62c, { 1, 0 }
  uselistorder label %dec_label_pc_f4dc, { 10, 0, 1, 2, 7, 8, 3, 4, 5, 6, 9, 11 }
  uselistorder label %dec_label_pc_f4c8, { 1, 0 }
  uselistorder label %bb366, { 1, 0 }
  uselistorder label %dec_label_pc_f354, { 1, 2, 0 }
  uselistorder label %dec_label_pc_f330, { 1, 0 }
  uselistorder label %dec_label_pc_f324, { 1, 2, 0 }
  uselistorder label %dec_label_pc_f300, { 1, 2, 0 }
  uselistorder label %dec_label_pc_f2dc, { 1, 0 }
  uselistorder label %bb340, { 1, 0 }
  uselistorder label %dec_label_pc_f288, { 22, 6, 7, 2, 8, 3, 9, 4, 10, 5, 11, 0, 12, 13, 14, 15, 16, 17, 18, 19, 1, 20, 21, 23 }
  uselistorder label %dec_label_pc_e09c, { 1, 0 }
}

define i32 @function_10618(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_10618:
  store i32 ptrtoint (i32* @global_var_2166c.608 to i32), i32* @r2, align 4
  %v3_1061c = mul i32 %arg1, 8
  %v2_10620 = add i32 %v3_1061c, ptrtoint (i32* @global_var_2166c.608 to i32)
  store i32 %v2_10620, i32* @r3, align 4
  %v2_10624 = icmp eq i32* %arg2, null
  br i1 %v2_10624, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_10618
  %v3_1062c4 = inttoptr i32 %v2_10620 to i32*
  %v4_1062c5 = load i32, i32* %v3_1062c4, align 4
  br label %bb7

bb:                                               ; preds = %dec_label_pc_10618
  %v2_10628 = add i32 %v3_1061c, add (i32 ptrtoint (i32* @global_var_2166c.608 to i32), i32 4)
  %v3_10628 = inttoptr i32 %v2_10628 to i16*
  %v4_10628 = load i16, i16* %v3_10628, align 4
  %v5_10628 = zext i16 %v4_10628 to i32
  store i32 %v5_10628, i32* @r3, align 4
  %v3_1062c = inttoptr i32 %v2_10620 to i32*
  %v4_1062c = load i32, i32* %v3_1062c, align 4
  store i32 %v5_10628, i32* %arg2, align 4
  br label %bb7

bb7:                                              ; preds = %.thread, %bb
  %v4_1062c6 = phi i32 [ %v4_1062c5, %.thread ], [ %v4_1062c, %bb ]
  ret i32 %v4_1062c6

; uselistorder directives
  uselistorder i32 %v2_10620, { 1, 0, 2 }
  uselistorder i32 %v3_1061c, { 1, 0 }
  uselistorder label %bb7, { 1, 0 }
}

define i32 @function_1063c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1063c:
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_10644 = mul i32 %arg1, 8
  %v2_10648 = add i32 %v3_10644, ptrtoint (i32* @global_var_2166c.608 to i32)
  %v2_1064c = load i32, i32* inttoptr (i32 127996 to i32*), align 4
  %v1_10650 = add i32 %v3_10644, add (i32 ptrtoint (i32* @global_var_2166c.608 to i32), i32 4)
  %v2_10650 = inttoptr i32 %v1_10650 to i16*
  %v3_10650 = load i16, i16* %v2_10650, align 4
  %v3_10654 = udiv i32 %v2_1064c, 256
  store i32 %v3_10654, i32* @r2, align 4
  %v2_10658 = icmp eq i16 %v3_10650, 0
  store i1 %v2_10658, i1* @cpsr_z, align 1
  %v3_1065c = udiv i32 %v2_1064c, 65536
  store i32 %v3_1065c, i32* @r3, align 4
  %v3_10660 = load i32, i32* @r4, align 4
  store i32 %v3_10660, i32* %stack_var_-16, align 4
  %v1_10664 = urem i32 %v3_10654, 256
  store i32 %v1_10664, i32* %r6.global-to-local, align 4
  %v1_10668 = urem i32 %v3_1065c, 256
  store i32 %v1_10668, i32* %r5.global-to-local, align 4
  %v3_1066c = udiv i32 %v2_1064c, 16777216
  store i32 %v3_1066c, i32* %r4.global-to-local, align 4
  %v1_10670 = urem i32 %v2_1064c, 256
  store i32 %v1_10670, i32* %lr.global-to-local, align 4
  br i1 %v2_10658, label %dec_label_pc_106cc, label %dec_label_pc_10678

dec_label_pc_10678:                               ; preds = %dec_label_pc_1063c
  store i32 0, i32* @ip, align 4
  %v1_1067c = inttoptr i32 %v2_10648 to i32*
  br label %dec_label_pc_1067c

dec_label_pc_1067c:                               ; preds = %dec_label_pc_1067c.dec_label_pc_1067c_crit_edge, %dec_label_pc_10678
  %v0_10684 = phi i32 [ %v0_10684.pre, %dec_label_pc_1067c.dec_label_pc_1067c_crit_edge ], [ %v1_10670, %dec_label_pc_10678 ]
  %v2_10688 = phi i32 [ %v1_106c0, %dec_label_pc_1067c.dec_label_pc_1067c_crit_edge ], [ 0, %dec_label_pc_10678 ]
  %v2_1067c = load i32, i32* %v1_1067c, align 4
  %v2_10680 = add i32 %v2_1067c, %v2_10688
  %v3_10680 = inttoptr i32 %v2_10680 to i8*
  %v4_10680 = load i8, i8* %v3_10680, align 1
  %v6_10680 = zext i8 %v4_10680 to i32
  %v2_10684 = xor i32 %v6_10680, %v0_10684
  %v1_10688 = trunc i32 %v2_10684 to i8
  store i8 %v1_10688, i8* %v3_10680, align 1
  %v2_1068c = load i32, i32* %v1_1067c, align 4
  %v0_10690 = load i32, i32* @ip, align 4
  %v2_10690 = add i32 %v0_10690, %v2_1068c
  %v3_10690 = inttoptr i32 %v2_10690 to i8*
  %v4_10690 = load i8, i8* %v3_10690, align 1
  %v6_10690 = zext i8 %v4_10690 to i32
  %v0_10694 = load i32, i32* %r6.global-to-local, align 4
  %v2_10694 = xor i32 %v0_10694, %v6_10690
  %v1_10698 = trunc i32 %v2_10694 to i8
  store i8 %v1_10698, i8* %v3_10690, align 1
  %v2_1069c = load i32, i32* %v1_1067c, align 4
  %v0_106a0 = load i32, i32* @ip, align 4
  %v2_106a0 = add i32 %v0_106a0, %v2_1069c
  %v3_106a0 = inttoptr i32 %v2_106a0 to i8*
  %v4_106a0 = load i8, i8* %v3_106a0, align 1
  %v6_106a0 = zext i8 %v4_106a0 to i32
  %v0_106a4 = load i32, i32* %r5.global-to-local, align 4
  %v2_106a4 = xor i32 %v0_106a4, %v6_106a0
  %v1_106a8 = trunc i32 %v2_106a4 to i8
  store i8 %v1_106a8, i8* %v3_106a0, align 1
  %v2_106ac = load i32, i32* %v1_1067c, align 4
  %v0_106b0 = load i32, i32* @ip, align 4
  %v2_106b0 = add i32 %v0_106b0, %v2_106ac
  %v3_106b0 = inttoptr i32 %v2_106b0 to i8*
  %v4_106b0 = load i8, i8* %v3_106b0, align 1
  %v6_106b0 = zext i8 %v4_106b0 to i32
  %v0_106b4 = load i32, i32* %r4.global-to-local, align 4
  %v2_106b4 = xor i32 %v0_106b4, %v6_106b0
  store i32 %v2_106b4, i32* @r3, align 4
  %v1_106b8 = trunc i32 %v2_106b4 to i8
  store i8 %v1_106b8, i8* %v3_106b0, align 1
  %v3_106bc = load i16, i16* %v2_10650, align 4
  %v4_106bc = zext i16 %v3_106bc to i32
  store i32 %v4_106bc, i32* @r2, align 4
  %v0_106c0 = load i32, i32* @ip, align 4
  %v1_106c0 = add i32 %v0_106c0, 1
  store i32 %v1_106c0, i32* @ip, align 4
  %v9_106c4 = icmp eq i32 %v4_106bc, %v1_106c0
  store i1 %v9_106c4, i1* @cpsr_z, align 1
  %v8_106c8 = icmp sgt i32 %v4_106bc, %v1_106c0
  br i1 %v8_106c8, label %dec_label_pc_1067c.dec_label_pc_1067c_crit_edge, label %dec_label_pc_106cc.loopexit

dec_label_pc_1067c.dec_label_pc_1067c_crit_edge:  ; preds = %dec_label_pc_1067c
  %v0_10684.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_1067c

dec_label_pc_106cc.loopexit:                      ; preds = %dec_label_pc_1067c
  %v2_106cc.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_106cc

dec_label_pc_106cc:                               ; preds = %dec_label_pc_106cc.loopexit, %dec_label_pc_1063c
  %v2_106cc = phi i32 [ %v2_106cc.pre, %dec_label_pc_106cc.loopexit ], [ %v3_10660, %dec_label_pc_1063c ]
  store i32 %v2_106cc, i32* @r4, align 4
  ret i32 %v2_10648

; uselistorder directives
  uselistorder i32 %v1_106c0, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10670, { 1, 0 }
  uselistorder i32 %v3_1065c, { 1, 0 }
  uselistorder i32 %v3_10654, { 1, 0 }
  uselistorder i32 %v2_1064c, { 3, 0, 1, 2 }
  uselistorder i32 %v3_10644, { 1, 0 }
}

define i32 @function_106dc(i32 %arg1) local_unnamed_addr {
dec_label_pc_106dc:
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_106e4 = mul i32 %arg1, 8
  %v2_106e8 = add i32 %v3_106e4, ptrtoint (i32* @global_var_2166c.608 to i32)
  %v2_106ec = load i32, i32* inttoptr (i32 127996 to i32*), align 4
  %v1_106f0 = add i32 %v3_106e4, add (i32 ptrtoint (i32* @global_var_2166c.608 to i32), i32 4)
  %v2_106f0 = inttoptr i32 %v1_106f0 to i16*
  %v3_106f0 = load i16, i16* %v2_106f0, align 4
  %v3_106f4 = udiv i32 %v2_106ec, 256
  %v2_106f8 = icmp eq i16 %v3_106f0, 0
  %v3_106fc = udiv i32 %v2_106ec, 65536
  %v3_10700 = load i32, i32* @r4, align 4
  store i32 %v3_10700, i32* %stack_var_-16, align 4
  %v1_10704 = urem i32 %v3_106f4, 256
  store i32 %v1_10704, i32* %r6.global-to-local, align 4
  %v1_10708 = urem i32 %v3_106fc, 256
  store i32 %v1_10708, i32* %r5.global-to-local, align 4
  %v3_1070c = udiv i32 %v2_106ec, 16777216
  store i32 %v3_1070c, i32* %r4.global-to-local, align 4
  %v1_10710 = urem i32 %v2_106ec, 256
  store i32 %v1_10710, i32* %lr.global-to-local, align 4
  br i1 %v2_106f8, label %dec_label_pc_1076c, label %dec_label_pc_10718

dec_label_pc_10718:                               ; preds = %dec_label_pc_106dc
  store i32 0, i32* @ip, align 4
  %v1_1071c = inttoptr i32 %v2_106e8 to i32*
  br label %dec_label_pc_1071c

dec_label_pc_1071c:                               ; preds = %dec_label_pc_1071c.dec_label_pc_1071c_crit_edge, %dec_label_pc_10718
  %v0_10724 = phi i32 [ %v0_10724.pre, %dec_label_pc_1071c.dec_label_pc_1071c_crit_edge ], [ %v1_10710, %dec_label_pc_10718 ]
  %v2_10728 = phi i32 [ %v1_10760, %dec_label_pc_1071c.dec_label_pc_1071c_crit_edge ], [ 0, %dec_label_pc_10718 ]
  %v2_1071c = load i32, i32* %v1_1071c, align 4
  %v2_10720 = add i32 %v2_1071c, %v2_10728
  %v3_10720 = inttoptr i32 %v2_10720 to i8*
  %v4_10720 = load i8, i8* %v3_10720, align 1
  %v6_10720 = zext i8 %v4_10720 to i32
  %v2_10724 = xor i32 %v6_10720, %v0_10724
  %v1_10728 = trunc i32 %v2_10724 to i8
  store i8 %v1_10728, i8* %v3_10720, align 1
  %v2_1072c = load i32, i32* %v1_1071c, align 4
  %v0_10730 = load i32, i32* @ip, align 4
  %v2_10730 = add i32 %v0_10730, %v2_1072c
  %v3_10730 = inttoptr i32 %v2_10730 to i8*
  %v4_10730 = load i8, i8* %v3_10730, align 1
  %v6_10730 = zext i8 %v4_10730 to i32
  %v0_10734 = load i32, i32* %r6.global-to-local, align 4
  %v2_10734 = xor i32 %v0_10734, %v6_10730
  %v1_10738 = trunc i32 %v2_10734 to i8
  store i8 %v1_10738, i8* %v3_10730, align 1
  %v2_1073c = load i32, i32* %v1_1071c, align 4
  %v0_10740 = load i32, i32* @ip, align 4
  %v2_10740 = add i32 %v0_10740, %v2_1073c
  %v3_10740 = inttoptr i32 %v2_10740 to i8*
  %v4_10740 = load i8, i8* %v3_10740, align 1
  %v6_10740 = zext i8 %v4_10740 to i32
  %v0_10744 = load i32, i32* %r5.global-to-local, align 4
  %v2_10744 = xor i32 %v0_10744, %v6_10740
  %v1_10748 = trunc i32 %v2_10744 to i8
  store i8 %v1_10748, i8* %v3_10740, align 1
  %v2_1074c = load i32, i32* %v1_1071c, align 4
  %v0_10750 = load i32, i32* @ip, align 4
  %v2_10750 = add i32 %v0_10750, %v2_1074c
  %v3_10750 = inttoptr i32 %v2_10750 to i8*
  %v4_10750 = load i8, i8* %v3_10750, align 1
  %v6_10750 = zext i8 %v4_10750 to i32
  %v0_10754 = load i32, i32* %r4.global-to-local, align 4
  %v2_10754 = xor i32 %v0_10754, %v6_10750
  %v1_10758 = trunc i32 %v2_10754 to i8
  store i8 %v1_10758, i8* %v3_10750, align 1
  %v3_1075c = load i16, i16* %v2_106f0, align 4
  %v4_1075c = zext i16 %v3_1075c to i32
  %v0_10760 = load i32, i32* @ip, align 4
  %v1_10760 = add i32 %v0_10760, 1
  store i32 %v1_10760, i32* @ip, align 4
  %v8_10768 = icmp sgt i32 %v4_1075c, %v1_10760
  br i1 %v8_10768, label %dec_label_pc_1071c.dec_label_pc_1071c_crit_edge, label %dec_label_pc_1076c.loopexit

dec_label_pc_1071c.dec_label_pc_1071c_crit_edge:  ; preds = %dec_label_pc_1071c
  %v0_10724.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_1071c

dec_label_pc_1076c.loopexit:                      ; preds = %dec_label_pc_1071c
  %v2_1076c.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_1076c

dec_label_pc_1076c:                               ; preds = %dec_label_pc_1076c.loopexit, %dec_label_pc_106dc
  %v2_1076c = phi i32 [ %v2_1076c.pre, %dec_label_pc_1076c.loopexit ], [ %v3_10700, %dec_label_pc_106dc ]
  store i32 %v2_1076c, i32* @r4, align 4
  ret i32 %v2_106e8

; uselistorder directives
  uselistorder i32 %v1_10760, { 1, 2, 0 }
  uselistorder i32 %v1_10710, { 1, 0 }
  uselistorder i32 %v2_106ec, { 3, 0, 1, 2 }
  uselistorder i32 %v2_106e8, { 1, 0 }
  uselistorder i32 %v3_106e4, { 1, 0 }
}

define i32 @function_1077c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1077c:
  %v3_1077c = load i32, i32* @r4, align 4
  %v6_1077c = load i32, i32* @r5, align 4
  %v9_1077c = load i32, i32* @r6, align 4
  %v12_1077c = load i32, i32* @r7, align 4
  %v15_1077c = load i32, i32* @r8, align 4
  %v18_1077c = load i32, i32* @sl, align 4
  store i32 2, i32* @r0, align 4
  %v0_10788 = call i32 @function_11f78()
  store i32 ptrtoint (i32* @global_var_2166c.608 to i32), i32* @r4, align 4
  store i32 2, i32* @r5, align 4
  store i32 %v0_10788, i32* @r6, align 4
  %v4_107a0 = call i32 @function_10bac(i32 %v0_10788, i32 ptrtoint ([3 x i8]* @global_var_16e94.615 to i32), i32 2)
  store i32 22, i32* @r0, align 4
  %v0_107a8 = load i32, i32* @r6, align 4
  store i32 %v0_107a8, i32* @global_var_2167c.616, align 4
  %v0_107ac = load i32, i32* @r5, align 4
  %v1_107ac = trunc i32 %v0_107ac to i16
  store i16 %v1_107ac, i16* bitcast (i32* @global_var_21680.617 to i16*), align 4
  %v0_107b0 = call i32 @function_11f78()
  store i32 %v0_107b0, i32* @r6, align 4
  store i32 22, i32* @r8, align 4
  %v3_107c4 = call i32 @function_10bac(i32 %v0_107b0, i32 ptrtoint (i32* @global_var_16e98.619 to i32), i32 22)
  %v0_107c8 = load i32, i32* @r5, align 4
  store i32 %v0_107c8, i32* @r0, align 4
  %v0_107cc = load i32, i32* @r6, align 4
  store i32 %v0_107cc, i32* @global_var_21724.620, align 4
  %v0_107d0 = load i32, i32* @r8, align 4
  %v1_107d0 = trunc i32 %v0_107d0 to i16
  store i16 %v1_107d0, i16* bitcast (i32* @global_var_21728.621 to i16*), align 4
  %v0_107d4 = call i32 @function_11f78()
  %v0_107d8 = load i32, i32* @r5, align 4
  store i32 %v0_107d4, i32* @r6, align 4
  %v3_107e4 = call i32 @function_10bac(i32 %v0_107d4, i32 ptrtoint (i32* @global_var_16eac.623 to i32), i32 %v0_107d8)
  store i32 14, i32* @r0, align 4
  %v0_107ec = load i32, i32* @r6, align 4
  store i32 %v0_107ec, i32* @global_var_2172c.624, align 4
  %v0_107f0 = load i32, i32* @r5, align 4
  %v1_107f0 = trunc i32 %v0_107f0 to i16
  store i16 %v1_107f0, i16* bitcast (i32* @global_var_21730.625 to i16*), align 4
  %v0_107f4 = call i32 @function_11f78()
  store i32 14, i32* @r7, align 4
  store i32 %v0_107f4, i32* @r5, align 4
  %v3_10808 = call i32 @function_10bac(i32 %v0_107f4, i32 ptrtoint (i32* @global_var_16eb0.627 to i32), i32 14)
  store i32 6, i32* @r0, align 4
  %v0_10810 = load i32, i32* @r5, align 4
  store i32 %v0_10810, i32* @global_var_21674.628, align 4
  %v0_10814 = load i32, i32* @r7, align 4
  %v1_10814 = trunc i32 %v0_10814 to i16
  store i16 %v1_10814, i16* bitcast (i32* @global_var_21678.629 to i16*), align 4
  %v0_10818 = call i32 @function_11f78()
  store i32 %v0_10818, i32* @r5, align 4
  store i32 6, i32* @sl, align 4
  %v3_1082c = call i32 @function_10bac(i32 %v0_10818, i32 ptrtoint (i32* @global_var_16ec0.631 to i32), i32 6)
  store i32 7, i32* @r0, align 4
  store i32 7, i32* @r6, align 4
  %v0_10838 = load i32, i32* @r5, align 4
  store i32 %v0_10838, i32* @global_var_216ec.632, align 4
  %v0_1083c = load i32, i32* @sl, align 4
  %v1_1083c = trunc i32 %v0_1083c to i16
  store i16 %v1_1083c, i16* bitcast (i32* @global_var_216f0.633 to i16*), align 4
  %v0_10840 = call i32 @function_11f78()
  %v0_10848 = load i32, i32* @r6, align 4
  store i32 %v0_10840, i32* @r5, align 4
  %v3_10850 = call i32 @function_10bac(i32 %v0_10840, i32 ptrtoint (i32* @global_var_16fdc.635 to i32), i32 %v0_10848)
  %v0_10854 = load i32, i32* @r6, align 4
  store i32 %v0_10854, i32* @r0, align 4
  %v0_10858 = load i32, i32* @r5, align 4
  store i32 %v0_10858, i32* @global_var_216f4.636, align 4
  %v1_1085c = trunc i32 %v0_10854 to i16
  store i16 %v1_1085c, i16* bitcast (i32* @global_var_216f8.637 to i16*), align 4
  %v0_10860 = call i32 @function_11f78()
  %v0_10868 = load i32, i32* @r6, align 4
  store i32 %v0_10860, i32* @r5, align 4
  %v3_10870 = call i32 @function_10bac(i32 %v0_10860, i32 ptrtoint (i32* @global_var_16ec8.639 to i32), i32 %v0_10868)
  store i32 3, i32* @r0, align 4
  %v0_10878 = load i32, i32* @r5, align 4
  store i32 %v0_10878, i32* @global_var_216fc.640, align 4
  %v0_1087c = load i32, i32* @r6, align 4
  %v1_1087c = trunc i32 %v0_1087c to i16
  store i16 %v1_1087c, i16* bitcast (i32* @global_var_21700.641 to i16*), align 4
  %v0_10880 = call i32 @function_11f78()
  store i32 %v0_10880, i32* @r5, align 4
  %v3_10890 = call i32 @function_10bac(i32 %v0_10880, i32 ptrtoint (i32* @global_var_16ed0.643 to i32), i32 3)
  store i32 20, i32* @r0, align 4
  store i16 3, i16* bitcast (i32* @global_var_21710.644 to i16*), align 4
  %v0_108a0 = load i32, i32* @r5, align 4
  store i32 %v0_108a0, i32* @global_var_2170c.645, align 4
  %v0_108a4 = call i32 @function_11f78()
  store i32 %v0_108a4, i32* @r5, align 4
  %v3_108b4 = call i32 @function_10bac(i32 %v0_108a4, i32 ptrtoint (i32* @global_var_16ed4.647 to i32), i32 20)
  store i32 25, i32* @r0, align 4
  store i16 20, i16* bitcast (i32* @global_var_21708.648 to i16*), align 4
  %v0_108c4 = load i32, i32* @r5, align 4
  store i32 %v0_108c4, i32* @global_var_21704.649, align 4
  %v0_108c8 = call i32 @function_11f78()
  store i32 %v0_108c8, i32* @r5, align 4
  %v3_108d8 = call i32 @function_10bac(i32 %v0_108c8, i32 ptrtoint (i32* @global_var_16eec.651 to i32), i32 25)
  store i32 9, i32* @r0, align 4
  store i16 25, i16* bitcast (i32* @global_var_21718.652 to i16*), align 4
  %v0_108e8 = load i32, i32* @r5, align 4
  store i32 %v0_108e8, i32* @global_var_21714.653, align 4
  %v0_108ec = call i32 @function_11f78()
  store i32 %v0_108ec, i32* @r5, align 4
  %v4_108fc = call i32 @function_10bac(i32 %v0_108ec, i32 ptrtoint ([10 x i8]* @global_var_16f08.655 to i32), i32 9)
  store i32 16, i32* @r0, align 4
  store i16 9, i16* bitcast (i32* @global_var_21720.656 to i16*), align 4
  %v0_1090c = load i32, i32* @r5, align 4
  store i32 %v0_1090c, i32* @global_var_2171c.657, align 4
  %v0_10910 = call i32 @function_11f78()
  store i32 %v0_10910, i32* @r5, align 4
  %v4_10920 = call i32 @function_10bac(i32 %v0_10910, i32 ptrtoint ([17 x i8]* @global_var_16f14.659 to i32), i32 16)
  %v0_10928 = load i32, i32* @r8, align 4
  store i32 %v0_10928, i32* @r0, align 4
  store i16 16, i16* bitcast (i32* @global_var_21738.660 to i16*), align 4
  %v0_10930 = load i32, i32* @r5, align 4
  store i32 %v0_10930, i32* @global_var_21734.661, align 4
  %v0_10934 = call i32 @function_11f78()
  %v0_1093c = load i32, i32* @r8, align 4
  store i32 %v0_10934, i32* @r5, align 4
  %v4_10944 = call i32 @function_10bac(i32 %v0_10934, i32 ptrtoint ([23 x i8]* @global_var_16f28.663 to i32), i32 %v0_1093c)
  %v0_10948 = load i32, i32* @r6, align 4
  store i32 %v0_10948, i32* @r0, align 4
  %v0_1094c = load i32, i32* @r5, align 4
  store i32 %v0_1094c, i32* @global_var_2173c.664, align 4
  %v0_10950 = load i32, i32* @r8, align 4
  %v1_10950 = trunc i32 %v0_10950 to i16
  store i16 %v1_10950, i16* bitcast (i32* @global_var_21740.665 to i16*), align 4
  %v0_10954 = call i32 @function_11f78()
  %v0_1095c = load i32, i32* @r6, align 4
  store i32 %v0_10954, i32* @r5, align 4
  %v3_10964 = call i32 @function_10bac(i32 %v0_10954, i32 ptrtoint (i32* @global_var_16f40.667 to i32), i32 %v0_1095c)
  store i32 5, i32* @r0, align 4
  %v0_1096c = load i32, i32* @r5, align 4
  store i32 %v0_1096c, i32* @global_var_21684.668, align 4
  %v0_10970 = load i32, i32* @r6, align 4
  %v1_10970 = trunc i32 %v0_10970 to i16
  store i16 %v1_10970, i16* bitcast (i32* @global_var_21688.669 to i16*), align 4
  %v0_10974 = call i32 @function_11f78()
  store i32 %v0_10974, i32* @r5, align 4
  %v3_10984 = call i32 @function_10bac(i32 %v0_10974, i32 ptrtoint (i32* @global_var_16f48.671 to i32), i32 5)
  store i32 4, i32* @r0, align 4
  store i16 5, i16* bitcast (i32* @global_var_21690.672 to i16*), align 4
  %v0_10994 = load i32, i32* @r5, align 4
  store i32 %v0_10994, i32* @global_var_2168c.673, align 4
  %v0_10998 = call i32 @function_11f78()
  store i32 %v0_10998, i32* @r5, align 4
  %v3_109a8 = call i32 @function_10bac(i32 %v0_10998, i32 ptrtoint (i32* @global_var_16f50.675 to i32), i32 4)
  %v0_109b0 = load i32, i32* @sl, align 4
  store i32 %v0_109b0, i32* @r0, align 4
  store i16 4, i16* bitcast (i32* @global_var_216a0.676 to i16*), align 4
  %v0_109b8 = load i32, i32* @r5, align 4
  store i32 %v0_109b8, i32* @global_var_2169c.677, align 4
  %v0_109bc = call i32 @function_11f78()
  %v0_109c4 = load i32, i32* @sl, align 4
  store i32 %v0_109bc, i32* @r5, align 4
  %v3_109cc = call i32 @function_10bac(i32 %v0_109bc, i32 ptrtoint (i32* @global_var_16f58.679 to i32), i32 %v0_109c4)
  %v0_109d0 = load i32, i32* @r7, align 4
  store i32 %v0_109d0, i32* @r0, align 4
  %v0_109d4 = load i32, i32* @r5, align 4
  store i32 %v0_109d4, i32* @global_var_216a4.680, align 4
  %v0_109d8 = load i32, i32* @sl, align 4
  %v1_109d8 = trunc i32 %v0_109d8 to i16
  store i16 %v1_109d8, i16* bitcast (i32* @global_var_216a8.681 to i16*), align 4
  %v0_109dc = call i32 @function_11f78()
  %v0_109e4 = load i32, i32* @r7, align 4
  store i32 %v0_109dc, i32* @r5, align 4
  %v3_109ec = call i32 @function_10bac(i32 %v0_109dc, i32 ptrtoint (i32* @global_var_16f60.683 to i32), i32 %v0_109e4)
  store i32 10, i32* @r0, align 4
  %v0_109f4 = load i32, i32* @r5, align 4
  store i32 %v0_109f4, i32* @global_var_216ac.684, align 4
  %v0_109f8 = load i32, i32* @r7, align 4
  %v1_109f8 = trunc i32 %v0_109f8 to i16
  store i16 %v1_109f8, i16* bitcast (i32* @global_var_216b0.685 to i16*), align 4
  %v0_109fc = call i32 @function_11f78()
  store i32 %v0_109fc, i32* @r5, align 4
  %v3_10a0c = call i32 @function_10bac(i32 %v0_109fc, i32 ptrtoint (i32* @global_var_16f70.687 to i32), i32 10)
  store i32 21, i32* @r0, align 4
  store i16 10, i16* bitcast (i32* @global_var_216b8.688 to i16*), align 4
  %v0_10a1c = load i32, i32* @r5, align 4
  store i32 %v0_10a1c, i32* @global_var_216b4.689, align 4
  %v0_10a20 = call i32 @function_11f78()
  store i32 %v0_10a20, i32* @r5, align 4
  %v3_10a30 = call i32 @function_10bac(i32 %v0_10a20, i32 ptrtoint (i32* @global_var_16f7c.691 to i32), i32 21)
  store i32 17, i32* @r0, align 4
  store i16 21, i16* bitcast (i32* @global_var_216c0.692 to i16*), align 4
  %v0_10a40 = load i32, i32* @r5, align 4
  store i32 %v0_10a40, i32* @global_var_216bc.693, align 4
  %v0_10a44 = call i32 @function_11f78()
  store i32 %v0_10a44, i32* @r5, align 4
  %v3_10a54 = call i32 @function_10bac(i32 %v0_10a44, i32 ptrtoint (i32* @global_var_16f94.695 to i32), i32 17)
  store i32 12, i32* @r0, align 4
  store i16 17, i16* bitcast (i32* @global_var_216c8.696 to i16*), align 4
  %v0_10a64 = load i32, i32* @r5, align 4
  store i32 %v0_10a64, i32* @global_var_216c4.697, align 4
  %v0_10a68 = call i32 @function_11f78()
  store i32 %v0_10a68, i32* @r5, align 4
  %v3_10a78 = call i32 @function_10bac(i32 %v0_10a68, i32 ptrtoint (i32* @global_var_16fa8.699 to i32), i32 12)
  %v0_10a80 = load i32, i32* @r7, align 4
  store i32 %v0_10a80, i32* @r0, align 4
  store i16 12, i16* bitcast (i32* @global_var_216d0.700 to i16*), align 4
  %v0_10a88 = load i32, i32* @r5, align 4
  store i32 %v0_10a88, i32* @global_var_216cc.701, align 4
  %v0_10a8c = call i32 @function_11f78()
  %v0_10a94 = load i32, i32* @r7, align 4
  store i32 %v0_10a8c, i32* @r5, align 4
  %v3_10a9c = call i32 @function_10bac(i32 %v0_10a8c, i32 ptrtoint (i32* @global_var_16fb8.703 to i32), i32 %v0_10a94)
  store i32 19, i32* @r0, align 4
  %v0_10aa4 = load i32, i32* @r5, align 4
  store i32 %v0_10aa4, i32* @global_var_216d4.704, align 4
  %v0_10aa8 = load i32, i32* @r7, align 4
  %v1_10aa8 = trunc i32 %v0_10aa8 to i16
  store i16 %v1_10aa8, i16* bitcast (i32* @global_var_216d8.705 to i16*), align 4
  %v0_10aac = call i32 @function_11f78()
  %v3_10abc = call i32 @function_10bac(i32 %v0_10aac, i32 ptrtoint (i32* @global_var_16fc8.707 to i32), i32 19)
  store i32 %v0_10aac, i32* @global_var_216dc.708, align 4
  store i16 19, i16* bitcast (i32* @global_var_216e0.709 to i16*), align 4
  store i32 %v3_1077c, i32* @r4, align 4
  store i32 %v6_1077c, i32* @r5, align 4
  store i32 %v9_1077c, i32* @r6, align 4
  store i32 %v12_1077c, i32* @r7, align 4
  store i32 %v15_1077c, i32* @r8, align 4
  store i32 %v18_1077c, i32* @sl, align 4
  ret i32 %v3_10abc

; uselistorder directives
  uselistorder i32 %v0_10a8c, { 1, 0 }
  uselistorder i32 %v0_109dc, { 1, 0 }
  uselistorder i32 %v0_109bc, { 1, 0 }
  uselistorder i32 %v0_10954, { 1, 0 }
  uselistorder i32 %v0_10934, { 1, 0 }
  uselistorder i32 %v0_10860, { 1, 0 }
  uselistorder i32 %v0_10840, { 1, 0 }
  uselistorder i32 %v0_107f4, { 1, 0 }
  uselistorder i32 %v0_107d4, { 1, 0 }
  uselistorder i32 %v0_10788, { 1, 0 }
  uselistorder i32 21, { 0, 8, 1, 5, 2, 6, 3, 7, 9, 4 }
  uselistorder i32 (i32, i32, i32)* @function_10bac, { 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 4, 6, 5, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_2166c.608 to i32), { 4, 0, 1, 2, 3, 5 }
}

define i32 @function_10b3c(i8* %arg1) local_unnamed_addr {
dec_label_pc_10b3c:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_10b40 = load i8, i8* %arg1, align 1
  %v2_10b44 = icmp eq i8 %v3_10b40, 0
  %v0_10b48 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_10b44, i32 %v0_10b48)
  br label %dec_label_pc_10b50

dec_label_pc_10b50:                               ; preds = %dec_label_pc_10b50, %dec_label_pc_10b3c
  %v0_10b50 = phi i32 [ %v1_10b50, %dec_label_pc_10b50 ], [ 0, %dec_label_pc_10b3c ]
  %v1_10b50 = add i32 %v0_10b50, 1
  %v2_10b54 = add i32 %v1_10b50, %tmp
  %v3_10b54 = inttoptr i32 %v2_10b54 to i8*
  %v4_10b54 = load i8, i8* %v3_10b54, align 1
  %v2_10b58 = icmp eq i8 %v4_10b54, 0
  br i1 %v2_10b58, label %dec_label_pc_10b60, label %dec_label_pc_10b50

dec_label_pc_10b60:                               ; preds = %dec_label_pc_10b50
  ret i32 %v1_10b50
}

define i32 @function_10b64(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10b64:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_10b64 = load i8, i8* %arg1, align 1
  %v3_10b64 = zext i8 %v2_10b64 to i32
  %v2_10b68 = icmp eq i8 %v2_10b64, 0
  br i1 %v2_10b68, label %bb, label %dec_label_pc_10b74

bb:                                               ; preds = %dec_label_pc_10b64
  store i32 %v3_10b64, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_10b88

dec_label_pc_10b74:                               ; preds = %dec_label_pc_10b64
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_10b78

dec_label_pc_10b78:                               ; preds = %dec_label_pc_10b78, %dec_label_pc_10b74
  %v0_10b78 = phi i32 [ %v1_10b78, %dec_label_pc_10b78 ], [ 0, %dec_label_pc_10b74 ]
  %v1_10b78 = add i32 %v0_10b78, 1
  store i32 %v1_10b78, i32* %ip.global-to-local, align 4
  %v2_10b7c = add i32 %v1_10b78, %tmp
  %v3_10b7c = inttoptr i32 %v2_10b7c to i8*
  %v4_10b7c = load i8, i8* %v3_10b7c, align 1
  %v6_10b7c = zext i8 %v4_10b7c to i32
  store i32 %v6_10b7c, i32* %r3.global-to-local, align 4
  %v2_10b80 = icmp eq i8 %v4_10b7c, 0
  br i1 %v2_10b80, label %dec_label_pc_10b88, label %dec_label_pc_10b78

dec_label_pc_10b88:                               ; preds = %dec_label_pc_10b78, %bb
  %v0_10b88 = phi i32 [ %v3_10b64, %bb ], [ %v1_10b78, %dec_label_pc_10b78 ]
  store i32 %v0_10b88, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10b94

dec_label_pc_10b90:                               ; preds = %dec_label_pc_10b94
  %v0_10b90 = load i32, i32* %r1.global-to-local, align 4
  %v1_10b90 = add i32 %v0_10b90, 1
  %v2_10b90 = inttoptr i32 %v1_10b90 to i8*
  %v3_10b90 = load i8, i8* %v2_10b90, align 1
  store i32 %v1_10b90, i32* %r1.global-to-local, align 4
  %v0_10b94.pr = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10b94

dec_label_pc_10b94:                               ; preds = %dec_label_pc_10b88, %dec_label_pc_10b90
  %v0_10b9c.off0 = phi i8 [ %v2_10b64, %dec_label_pc_10b88 ], [ %v3_10b90, %dec_label_pc_10b90 ]
  %v0_10b94 = phi i32 [ %v0_10b88, %dec_label_pc_10b88 ], [ %v0_10b94.pr, %dec_label_pc_10b90 ]
  %v1_10b94 = add i32 %v0_10b94, -1
  store i32 %v1_10b94, i32* %r3.global-to-local, align 4
  %v3_10b98 = icmp eq i32 %v0_10b94, 0
  %v2_10b9c = load i32, i32* @r0, align 4
  %v3_10b9c = inttoptr i32 %v2_10b9c to i8*
  store i8 %v0_10b9c.off0, i8* %v3_10b9c, align 1
  %v4_10b9c = load i32, i32* @r0, align 4
  %v5_10b9c = add i32 %v4_10b9c, 1
  store i32 %v5_10b9c, i32* @r0, align 4
  br i1 %v3_10b98, label %dec_label_pc_10ba4, label %dec_label_pc_10b90

dec_label_pc_10ba4:                               ; preds = %dec_label_pc_10b94
  %v0_10ba4 = load i32, i32* %ip.global-to-local, align 4
  ret i32 %v0_10ba4

; uselistorder directives
  uselistorder i32 %v0_10b94, { 1, 0 }
  uselistorder i32 %v0_10b88, { 1, 0 }
  uselistorder i32 %v1_10b78, { 0, 1, 3, 2 }
  uselistorder i32* %r3.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r1.global-to-local, { 2, 1, 0 }
  uselistorder i32* %ip.global-to-local, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10b94, { 1, 0 }
}

define i32 @function_10bac(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10bac:
  %v2_10bac = icmp eq i32 %arg3, 0
  %v0_10bb0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_10bac, i32 %v0_10bb0)
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_10bb8

dec_label_pc_10bb8:                               ; preds = %dec_label_pc_10bb8, %dec_label_pc_10bac
  %v0_10bb8 = phi i32 [ %v1_10bc0, %dec_label_pc_10bb8 ], [ 0, %dec_label_pc_10bac ]
  %v2_10bb8 = add i32 %v0_10bb8, %arg2
  %v3_10bb8 = inttoptr i32 %v2_10bb8 to i8*
  %v4_10bb8 = load i8, i8* %v3_10bb8, align 1
  %v6_10bb8 = zext i8 %v4_10bb8 to i32
  store i32 %v6_10bb8, i32* @r3, align 4
  %v4_10bbc = add i32 %v0_10bb8, %arg1
  %v5_10bbc = inttoptr i32 %v4_10bbc to i8*
  store i8 %v4_10bb8, i8* %v5_10bbc, align 1
  %v0_10bc0 = load i32, i32* @ip, align 4
  %v1_10bc0 = add i32 %v0_10bc0, 1
  store i32 %v1_10bc0, i32* @ip, align 4
  %v9_10bc4 = icmp eq i32 %v1_10bc0, %arg3
  br i1 %v9_10bc4, label %dec_label_pc_10bcc, label %dec_label_pc_10bb8

dec_label_pc_10bcc:                               ; preds = %dec_label_pc_10bb8
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_10bc0, { 1, 2, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_10bd0() local_unnamed_addr {
dec_label_pc_10bd0:
  %r2.global-to-local = alloca i32, align 4
  %v0_10bd0 = load i32, i32* @r1, align 4
  %v2_10bd0 = icmp eq i32 %v0_10bd0, 0
  %v0_10bd4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_10bd0, i32 %v0_10bd4)
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10bdc

dec_label_pc_10bdc:                               ; preds = %dec_label_pc_10bdc, %dec_label_pc_10bd0
  %v2_10be0 = phi i32 [ %v1_10be4, %dec_label_pc_10bdc ], [ 0, %dec_label_pc_10bd0 ]
  store i32 0, i32* @r3, align 4
  %v3_10be0 = load i32, i32* @r0, align 4
  %v4_10be0 = add i32 %v3_10be0, %v2_10be0
  %v5_10be0 = inttoptr i32 %v4_10be0 to i8*
  store i8 0, i8* %v5_10be0, align 1
  %v0_10be4 = load i32, i32* %r2.global-to-local, align 4
  %v1_10be4 = add i32 %v0_10be4, 1
  store i32 %v1_10be4, i32* %r2.global-to-local, align 4
  %v1_10be8 = load i32, i32* @r1, align 4
  %v9_10be8 = icmp eq i32 %v1_10be4, %v1_10be8
  br i1 %v9_10be8, label %dec_label_pc_10bf0, label %dec_label_pc_10bdc

dec_label_pc_10bf0:                               ; preds = %dec_label_pc_10bdc
  %v1_10bf0 = load i32, i32* @r0, align 4
  ret i32 %v1_10bf0

; uselistorder directives
  uselistorder i32 %v1_10be4, { 1, 2, 0 }
}

define i32 @function_10bf4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10bf4:
  store i32 %arg4, i32* @r3, align 4
  %v7_10c08 = icmp sgt i32 %arg4, %arg2
  br i1 %v7_10c08, label %dec_label_pc_10c10, label %dec_label_pc_10c18

dec_label_pc_10c10:                               ; preds = %dec_label_pc_10c2c, %dec_label_pc_10c18, %dec_label_pc_10bf4, %dec_label_pc_10c58
  %storemerge = phi i32 [ %v1_10c58, %dec_label_pc_10c58 ], [ -1, %dec_label_pc_10bf4 ], [ -1, %dec_label_pc_10c18 ], [ -1, %dec_label_pc_10c2c ]
  ret i32 %storemerge

dec_label_pc_10c18:                               ; preds = %dec_label_pc_10bf4
  %tmp12 = icmp slt i32 %arg2, 1
  br i1 %tmp12, label %dec_label_pc_10c10, label %dec_label_pc_10c20

dec_label_pc_10c20:                               ; preds = %dec_label_pc_10c18
  br label %dec_label_pc_10c38

dec_label_pc_10c2c:                               ; preds = %bb, %dec_label_pc_10c4c
  %v1_10c383 = phi i32 [ %v1_10c4c, %dec_label_pc_10c4c ], [ 0, %bb ]
  %v1_10c2c = add i32 %v0_10c58, 1
  %v9_10c30 = icmp eq i32 %v1_10c2c, %arg2
  br i1 %v9_10c30, label %dec_label_pc_10c10, label %dec_label_pc_10c38

dec_label_pc_10c38:                               ; preds = %dec_label_pc_10c2c, %dec_label_pc_10c20
  %v0_10c58 = phi i32 [ %v1_10c2c, %dec_label_pc_10c2c ], [ 0, %dec_label_pc_10c20 ]
  %v1_10c38 = phi i32 [ %v1_10c383, %dec_label_pc_10c2c ], [ 0, %dec_label_pc_10c20 ]
  %v2_10c38 = add i32 %v1_10c38, %arg3
  %v3_10c38 = inttoptr i32 %v2_10c38 to i8*
  %v4_10c38 = load i8, i8* %v3_10c38, align 1
  %v2_10c3c = add i32 %v0_10c58, %arg1
  %v3_10c3c = inttoptr i32 %v2_10c3c to i8*
  %v4_10c3c = load i8, i8* %v3_10c3c, align 1
  %v6_10c3c = zext i8 %v4_10c3c to i32
  store i32 %v6_10c3c, i32* @r3, align 4
  %v9_10c40 = icmp eq i8 %v4_10c3c, %v4_10c38
  br i1 %v9_10c40, label %dec_label_pc_10c4c, label %bb

bb:                                               ; preds = %dec_label_pc_10c38
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_10c2c

dec_label_pc_10c4c:                               ; preds = %dec_label_pc_10c38
  %v1_10c4c = add i32 %v1_10c38, 1
  store i32 %v1_10c4c, i32* @ip, align 4
  %v9_10c50 = icmp eq i32 %v1_10c4c, %arg4
  br i1 %v9_10c50, label %dec_label_pc_10c58, label %dec_label_pc_10c2c

dec_label_pc_10c58:                               ; preds = %dec_label_pc_10c4c
  %v1_10c58 = add i32 %v0_10c58, 1
  br label %dec_label_pc_10c10

; uselistorder directives
  uselistorder i32 %v1_10c4c, { 1, 2, 0 }
  uselistorder i32 %v1_10c38, { 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10c2c, { 1, 0 }
  uselistorder label %dec_label_pc_10c10, { 3, 0, 1, 2 }
}

define i32 @function_10c60(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10c60:
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_10c60 = load i32, i32* @r4, align 4
  %v12_10c60 = load i32, i32* @r7, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10c70

dec_label_pc_10c70:                               ; preds = %.thread, %dec_label_pc_10c84, %bb, %dec_label_pc_10c60
  %v0_10c70 = phi i32 [ %tmp, %dec_label_pc_10c60 ], [ %v5_10c70, %bb ], [ %v5_10c70, %dec_label_pc_10c84 ], [ %v5_10c70, %.thread ]
  %v1_10c70 = inttoptr i32 %v0_10c70 to i8*
  %v2_10c70 = load i8, i8* %v1_10c70, align 1
  %v5_10c70 = add i32 %v0_10c70, 1
  store i32 %v5_10c70, i32* %r5.global-to-local, align 4
  %v7_10c74 = icmp eq i8 %v2_10c70, 9
  br i1 %v7_10c74, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_10c70
  br label %dec_label_pc_10c70

bb:                                               ; preds = %dec_label_pc_10c70
  %v3_10c70 = zext i8 %v2_10c70 to i32
  %v8_10c78 = icmp eq i8 %v2_10c70, 32
  store i32 %v3_10c70, i32* @r4, align 4
  br i1 %v8_10c78, label %dec_label_pc_10c70, label %dec_label_pc_10c84

dec_label_pc_10c84:                               ; preds = %bb
  %v7_10c84 = icmp eq i8 %v2_10c70, 10
  br i1 %v7_10c84, label %dec_label_pc_10c70, label %dec_label_pc_10c8c

dec_label_pc_10c8c:                               ; preds = %dec_label_pc_10c84
  %v7_10c8c = icmp eq i8 %v2_10c70, 45
  br i1 %v7_10c8c, label %dec_label_pc_10d7c, label %dec_label_pc_10c94

dec_label_pc_10c94:                               ; preds = %dec_label_pc_10c8c
  %v7_10c94 = icmp eq i8 %v2_10c70, 43
  br i1 %v7_10c94, label %bb44, label %dec_label_pc_10ca4

bb44:                                             ; preds = %dec_label_pc_10c94
  %v2_10c98 = inttoptr i32 %v5_10c70 to i8*
  %v3_10c98 = load i8, i8* %v2_10c98, align 1
  %v4_10c98 = zext i8 %v3_10c98 to i32
  store i32 %v4_10c98, i32* @r4, align 4
  %v6_10c98 = add i32 %v0_10c70, 2
  store i32 %v6_10c98, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10ca4

dec_label_pc_10ca4:                               ; preds = %bb44, %dec_label_pc_10c94, %dec_label_pc_10d7c
  %storemerge1 = phi i32 [ -2147483648, %dec_label_pc_10d7c ], [ 2147483647, %dec_label_pc_10c94 ], [ 2147483647, %bb44 ]
  %storemerge = phi i32 [ 1, %dec_label_pc_10d7c ], [ 0, %dec_label_pc_10c94 ], [ 0, %bb44 ]
  store i32 %storemerge1, i32* @r7, align 4
  store i32 %storemerge, i32* %sl.global-to-local, align 4
  %v2_10cac = call i32 @function_11114(i32 %storemerge1, i32 %arg2)
  %v0_10cb0 = load i32, i32* @r7, align 4
  store i32 %v0_10cb0, i32* @r0, align 4
  store i32 %arg2, i32* %r8.global-to-local, align 4
  %v0_10cb8 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_10cb8, i32* @r1, align 4
  %v0_10cbc = call i32 @function_11018()
  store i32 0, i32* @ip, align 4
  %v0_10ccc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10ccc.outer

dec_label_pc_10ccc.outer:                         ; preds = %.thread5, %dec_label_pc_10ca4
  %v2_10d48.ph = phi i32 [ %v5_10d48, %.thread5 ], [ 0, %dec_label_pc_10ca4 ]
  %v1_10d0c.ph = phi i32 [ %v4_10d4c, %.thread5 ], [ %v0_10ccc.pre, %dec_label_pc_10ca4 ]
  %v1_10d24.ph = phi i32 [ 1, %.thread5 ], [ 0, %dec_label_pc_10ca4 ]
  %v3_10d18 = icmp uge i32 %v2_10d48.ph, %v0_10cbc
  %v9_10d18 = icmp eq i32 %v2_10d48.ph, %v0_10cbc
  %v2_10d1c = xor i1 %v3_10d18, true
  %v3_10d1c = or i1 %v9_10d18, %v2_10d1c
  %v2_10d20 = xor i1 %v9_10d18, true
  %v3_10d20 = and i1 %v3_10d18, %v2_10d20
  %v2_10d40 = icmp eq i1 %v9_10d18, false
  br label %dec_label_pc_10ccc

dec_label_pc_10ccc:                               ; preds = %dec_label_pc_10ccc.outer, %dec_label_pc_10d54
  %v1_10d24 = phi i32 [ -1, %dec_label_pc_10d54 ], [ %v1_10d24.ph, %dec_label_pc_10ccc.outer ]
  %v1_10d0c = phi i32 [ %v3_10d54, %dec_label_pc_10d54 ], [ %v1_10d0c.ph, %dec_label_pc_10ccc.outer ]
  %v1_10ccc = urem i32 %v1_10d0c, 256
  %v1_10cd0 = add nsw i32 %v1_10ccc, -48
  %v1_10cd8 = add nsw i32 %v1_10ccc, -97
  %v1_10cdc = add i32 %v1_10d0c, -48
  %v1_10ce0 = add nsw i32 %v1_10ccc, -65
  %tmp75 = icmp ult i32 %v1_10cd0, 10
  br i1 %tmp75, label %dec_label_pc_10d10, label %dec_label_pc_10ce8

dec_label_pc_10ce8:                               ; preds = %dec_label_pc_10ccc
  %v2_10ce8 = icmp ugt i32 %v1_10ce0, 24
  %v7_10ce8 = icmp eq i32 %v1_10ce0, 25
  %v2_10cec = xor i1 %v7_10ce8, true
  %v3_10cec = and i1 %v2_10ce8, %v2_10cec
  br i1 %v3_10cec, label %bb45, label %bb46

bb45:                                             ; preds = %dec_label_pc_10ce8
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_10ce8, %bb45
  %v0_10d0014 = phi i32 [ %v1_10cdc, %dec_label_pc_10ce8 ], [ 0, %bb45 ]
  %v2_10cf0 = xor i1 %v2_10ce8, true
  %v3_10cf0 = or i1 %v7_10ce8, %v2_10cf0
  br i1 %v3_10cf0, label %bb47, label %bb48

bb47:                                             ; preds = %bb46
  br label %bb48

bb48:                                             ; preds = %bb46, %bb47
  %v0_10d00 = phi i32 [ %v0_10d0014, %bb46 ], [ 1, %bb47 ]
  br i1 %v3_10cec, label %bb49, label %bb50

bb49:                                             ; preds = %bb48
  %v6_10cf8 = icmp ugt i32 %v1_10cd8, 24
  %v11_10cf8 = icmp eq i32 %v1_10cd8, 25
  br label %bb50

bb50:                                             ; preds = %bb48, %bb49
  %v1_10cfc = phi i1 [ %v7_10ce8, %bb48 ], [ %v11_10cf8, %bb49 ]
  %v0_10cfc = phi i1 [ %v2_10ce8, %bb48 ], [ %v6_10cf8, %bb49 ]
  %v2_10cfc = xor i1 %v1_10cfc, true
  %v3_10cfc = and i1 %v0_10cfc, %v2_10cfc
  br i1 %v3_10cfc, label %dec_label_pc_10d60, label %dec_label_pc_10d00

dec_label_pc_10d00:                               ; preds = %bb50
  %v2_10d00 = icmp eq i32 %v0_10d00, 0
  %. = select i1 %v2_10d00, i32 87, i32 55
  %v2_10d0c = sub i32 %v1_10d0c, %.
  br label %dec_label_pc_10d10

dec_label_pc_10d10:                               ; preds = %dec_label_pc_10ccc, %dec_label_pc_10d00
  %v0_10d2429 = phi i32 [ %v1_10ce0, %dec_label_pc_10ccc ], [ %., %dec_label_pc_10d00 ]
  %v3_10d48 = phi i32 [ %v1_10cdc, %dec_label_pc_10ccc ], [ %v2_10d0c, %dec_label_pc_10d00 ]
  %v1_10d10 = load i32, i32* %r6.global-to-local, align 4
  %v2_10d10 = sub i32 %v3_10d48, %v1_10d10
  %v4_10d10 = xor i32 %v1_10d10, %v3_10d48
  %v5_10d10 = xor i32 %v2_10d10, %v3_10d48
  %v6_10d10 = and i32 %v5_10d10, %v4_10d10
  %v7_10d10 = icmp slt i32 %v6_10d10, 0
  %v8_10d10 = icmp slt i32 %v2_10d10, 0
  %v2_10d14 = xor i1 %v8_10d10, %v7_10d10
  br i1 %v2_10d14, label %dec_label_pc_10d18, label %dec_label_pc_10d60

dec_label_pc_10d18:                               ; preds = %dec_label_pc_10d10
  br i1 %v3_10d1c, label %bb53, label %bb54

bb53:                                             ; preds = %dec_label_pc_10d18
  br label %bb54

bb54:                                             ; preds = %dec_label_pc_10d18, %bb53
  %v0_10d2428 = phi i32 [ %v0_10d2429, %dec_label_pc_10d18 ], [ 0, %bb53 ]
  br i1 %v3_10d20, label %bb55, label %bb56

bb55:                                             ; preds = %bb54
  br label %bb56

bb56:                                             ; preds = %bb54, %bb55
  %v0_10d24 = phi i32 [ %v0_10d2428, %bb54 ], [ 1, %bb55 ]
  %tmp76 = icmp slt i32 %v1_10d24, 0
  %v4_10d24 = zext i1 %tmp76 to i32
  %v5_10d24 = or i32 %v0_10d24, %v4_10d24
  %v7_10d24 = icmp eq i32 %v5_10d24, 0
  br i1 %v7_10d24, label %dec_label_pc_10d2c, label %dec_label_pc_10d54

dec_label_pc_10d2c:                               ; preds = %bb56
  %v1_10d38 = load i32, i32* %r8.global-to-local, align 4
  %v2_10d38 = sub i32 %v3_10d48, %v1_10d38
  %v4_10d38 = xor i32 %v1_10d38, %v3_10d48
  %v5_10d38 = xor i32 %v2_10d38, %v3_10d48
  %v6_10d38 = and i32 %v5_10d38, %v4_10d38
  %v7_10d38 = icmp slt i32 %v6_10d38, 0
  %v8_10d38 = icmp slt i32 %v2_10d38, 0
  %v9_10d38 = icmp eq i32 %v3_10d48, %v1_10d38
  %v3_10d3c = xor i1 %v8_10d38, %v7_10d38
  %v4_10d3c = or i1 %v9_10d38, %v3_10d3c
  br i1 %v4_10d3c, label %thread-pre-split.thread, label %thread-pre-split

thread-pre-split.thread:                          ; preds = %dec_label_pc_10d2c
  store i32 1, i32* @ip, align 4
  br label %.thread5

thread-pre-split:                                 ; preds = %dec_label_pc_10d2c
  store i32 1, i32* @ip, align 4
  br i1 %v2_10d40, label %.thread5, label %dec_label_pc_10d54

.thread5:                                         ; preds = %thread-pre-split, %thread-pre-split.thread
  %v4_10d48 = mul i32 %v1_10d10, %v2_10d48.ph
  %v5_10d48 = add i32 %v4_10d48, %v3_10d48
  %v1_10d4c = load i32, i32* %r5.global-to-local, align 4
  %v2_10d4c = inttoptr i32 %v1_10d4c to i8*
  %v3_10d4c = load i8, i8* %v2_10d4c, align 1
  %v4_10d4c = zext i8 %v3_10d4c to i32
  %v6_10d4c = add i32 %v1_10d4c, 1
  store i32 %v6_10d4c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10ccc.outer

dec_label_pc_10d54:                               ; preds = %thread-pre-split, %bb56
  %v0_10d54 = load i32, i32* %r5.global-to-local, align 4
  %v1_10d54 = inttoptr i32 %v0_10d54 to i8*
  %v2_10d54 = load i8, i8* %v1_10d54, align 1
  %v3_10d54 = zext i8 %v2_10d54 to i32
  %v5_10d54 = add i32 %v0_10d54, 1
  store i32 %v5_10d54, i32* %r5.global-to-local, align 4
  store i32 -1, i32* @ip, align 4
  br label %dec_label_pc_10ccc

dec_label_pc_10d60:                               ; preds = %dec_label_pc_10d10, %bb50
  %v1_10d60 = icmp slt i32 %v1_10d24, 0
  %v0_10d8c = load i32, i32* %sl.global-to-local, align 4
  %v2_10d8c = icmp eq i32 %v0_10d8c, 0
  br i1 %v1_10d60, label %dec_label_pc_10d8c, label %dec_label_pc_10d68

dec_label_pc_10d68:                               ; preds = %dec_label_pc_10d60
  br i1 %v2_10d8c, label %bb60, label %bb59

bb59:                                             ; preds = %dec_label_pc_10d68
  %v2_10d6c = sub i32 0, %v2_10d48.ph
  br label %bb60

bb60:                                             ; preds = %.thread32, %bb61, %dec_label_pc_10d68, %bb59
  %v1_10d78 = phi i32 [ -2147483648, %bb61 ], [ %v2_10d48.ph, %dec_label_pc_10d68 ], [ %v2_10d6c, %bb59 ], [ 2147483647, %.thread32 ]
  store i32 %v3_10c60, i32* @r4, align 4
  store i32 %v12_10c60, i32* @r7, align 4
  ret i32 %v1_10d78

dec_label_pc_10d7c:                               ; preds = %dec_label_pc_10c8c
  %v1_10d7c = inttoptr i32 %v5_10c70 to i8*
  %v2_10d7c = load i8, i8* %v1_10d7c, align 1
  %v3_10d7c = zext i8 %v2_10d7c to i32
  store i32 %v3_10d7c, i32* @r4, align 4
  %v5_10d7c = add i32 %v0_10c70, 2
  store i32 %v5_10d7c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10ca4

dec_label_pc_10d8c:                               ; preds = %dec_label_pc_10d60
  br i1 %v2_10d8c, label %.thread32, label %bb61

.thread32:                                        ; preds = %dec_label_pc_10d8c
  br label %bb60

bb61:                                             ; preds = %dec_label_pc_10d8c
  br label %bb60

; uselistorder directives
  uselistorder i1 %v2_10d8c, { 1, 0 }
  uselistorder i32 %v2_10d38, { 1, 0 }
  uselistorder i32 %v1_10d38, { 1, 0, 2 }
  uselistorder i32 %v2_10d10, { 1, 0 }
  uselistorder i32 %v3_10d48, { 0, 6, 1, 2, 5, 3, 4, 7 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i1 %v7_10ce8, { 1, 2, 0 }
  uselistorder i1 %v2_10ce8, { 1, 0, 2 }
  uselistorder i32 %v1_10ccc, { 1, 2, 0 }
  uselistorder i32 %v1_10d0c, { 1, 2, 0 }
  uselistorder i32 %v1_10d24, { 1, 0 }
  uselistorder i1 %v9_10d18, { 1, 0, 2 }
  uselistorder i1 %v3_10d18, { 1, 0 }
  uselistorder i32 %v2_10d48.ph, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v0_10cbc, { 1, 0 }
  uselistorder i32 %v5_10c70, { 3, 4, 5, 2, 1, 0 }
  uselistorder i8 %v2_10c70, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_10c70, { 0, 1, 3, 2 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 5, 2, 4, 3, 6, 7 }
  uselistorder i32 25, { 4, 5, 0, 3, 2, 1 }
  uselistorder i8 32, { 2, 3, 4, 0, 5, 6, 7, 1 }
  uselistorder i8 9, { 2, 0, 1 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %bb60, { 1, 0, 3, 2 }
  uselistorder label %bb56, { 1, 0 }
  uselistorder label %bb54, { 1, 0 }
  uselistorder label %dec_label_pc_10d10, { 1, 0 }
  uselistorder label %bb50, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %dec_label_pc_10ccc, { 1, 0 }
  uselistorder label %dec_label_pc_10ca4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10c70, { 1, 2, 0, 3 }
}

define i32 @function_10d9c(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10d9c:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_10d9c = load i32, i32* @r4, align 4
  store i32 %v3_10d9c, i32* %stack_var_-24, align 4
  %v12_10d9c = load i32, i32* @r7, align 4
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg2, i32* %r8.global-to-local, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10db4

dec_label_pc_10db4:                               ; preds = %dec_label_pc_10dd8.dec_label_pc_10db4_crit_edge, %dec_label_pc_10d9c
  %v0_10db8 = phi i32 [ %v0_10db8.pre, %dec_label_pc_10dd8.dec_label_pc_10db4_crit_edge ], [ %arg3, %dec_label_pc_10d9c ]
  %v1_10dc0 = call i32 @function_112e0(i32 %v0_10db8)
  %v7_10dc4 = icmp eq i32 %v1_10dc0, 1
  %v0_10dcc = load i32, i32* %r5.global-to-local, align 4
  br i1 %v7_10dc4, label %dec_label_pc_10dcc, label %dec_label_pc_10de4

dec_label_pc_10dcc:                               ; preds = %dec_label_pc_10db4
  %v1_10dcc = add i32 %v0_10dcc, 1
  store i32 %v1_10dcc, i32* %r5.global-to-local, align 4
  %v1_10dd0 = load i32, i32* %r8.global-to-local, align 4
  %v6_10dd4 = icmp slt i32 %v1_10dcc, %v1_10dd0
  br i1 %v6_10dd4, label %dec_label_pc_10dd8, label %.loopexit

dec_label_pc_10dd8:                               ; preds = %dec_label_pc_10dcc
  %v0_10dd8 = load i32, i32* %r4.global-to-local, align 4
  %v1_10dd8 = inttoptr i32 %v0_10dd8 to i8*
  %v2_10dd8 = load i8, i8* %v1_10dd8, align 1
  %v5_10dd8 = add i32 %v0_10dd8, 1
  store i32 %v5_10dd8, i32* %r4.global-to-local, align 4
  %v7_10ddc = icmp eq i8 %v2_10dd8, 10
  br i1 %v7_10ddc, label %dec_label_pc_10de4, label %dec_label_pc_10dd8.dec_label_pc_10db4_crit_edge

dec_label_pc_10dd8.dec_label_pc_10db4_crit_edge:  ; preds = %dec_label_pc_10dd8
  %v0_10db8.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10db4

dec_label_pc_10de4:                               ; preds = %dec_label_pc_10db4, %dec_label_pc_10dd8
  %v0_10de4 = phi i32 [ %v1_10dcc, %dec_label_pc_10dd8 ], [ %v0_10dcc, %dec_label_pc_10db4 ]
  %v2_10de4 = icmp eq i32 %v0_10de4, 0
  br i1 %v2_10de4, label %bb, label %.loopexit

bb:                                               ; preds = %dec_label_pc_10de4
  store i32 0, i32* @r7, align 4
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_10dcc, %dec_label_pc_10de4, %bb
  %v0_10dec = load i32, i32* @r7, align 4
  %v2_10df0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_10df0, i32* @r4, align 4
  store i32 %v12_10d9c, i32* @r7, align 4
  ret i32 %v0_10dec

; uselistorder directives
  uselistorder label %.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10de4, { 1, 0 }
}

define i32 @function_10df8() local_unnamed_addr {
dec_label_pc_10df8:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  store i32 16, i32* %r6.global-to-local, align 4
  store i32 16, i32* %stack_var_-20, align 4
  %v0_10e08 = call i32 @function_11970()
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_10e10 = inttoptr i32 %v0_10e08 to i32*
  store i32 0, i32* %v2_10e10, align 4
  %v0_10e1c = load i32, i32* %r4.global-to-local, align 4
  %v3_10e20 = call i32 @function_11d30(i32 2, i32 2, i32 %v0_10e1c)
  %v7_10e24 = icmp eq i32 %v3_10e20, -1
  store i32 %v3_10e20, i32* %r5.global-to-local, align 4
  br i1 %v7_10e24, label %bb, label %dec_label_pc_10e34

bb:                                               ; preds = %dec_label_pc_10df8
  %v1_10e2c = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10e80

dec_label_pc_10e34:                               ; preds = %dec_label_pc_10df8
  %v2_10e40 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_10e40, i32* %r4.global-to-local, align 4
  %v0_10e4c = load i32, i32* %r6.global-to-local, align 4
  store i32 2, i32* %stack_var_-36, align 4
  %v3_10e60 = call i32 @function_11b18(i32 %v3_10e20, i32 %v2_10e40, i32 %v0_10e4c)
  %v2_10e68 = ptrtoint i32* %stack_var_-20 to i32
  %v0_10e6c = load i32, i32* %r5.global-to-local, align 4
  %v3_10e70 = call i32 @function_11b50(i32 %v0_10e6c, i32 %v2_10e40, i32 %v2_10e68)
  %v1_10e78 = call i32 @function_11548(i32 %v0_10e6c)
  br label %dec_label_pc_10e80

dec_label_pc_10e80:                               ; preds = %bb, %dec_label_pc_10e34
  %storemerge = phi i32 [ 134744072, %dec_label_pc_10e34 ], [ %v1_10e2c, %bb ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_10e20, { 1, 2, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32 134744072, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @function_11b18, { 6, 8, 5, 7, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_11d30, { 16, 18, 14, 15, 17, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10e80, { 1, 0 }
}

define i32 @function_10e8c(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10e8c:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp23 = ptrtoint i8* %arg1 to i32
  %v3_10e90 = load i8, i8* %tmp, align 1
  %v2_10e94 = icmp eq i8 %v3_10e90, 0
  br i1 %v2_10e94, label %bb, label %dec_label_pc_10ea8

bb:                                               ; preds = %dec_label_pc_10e8c
  %v4_10e90 = zext i8 %v3_10e90 to i32
  br label %dec_label_pc_10ebc

dec_label_pc_10ea8:                               ; preds = %dec_label_pc_10e8c
  br label %dec_label_pc_10eac

dec_label_pc_10eac:                               ; preds = %dec_label_pc_10eac, %dec_label_pc_10ea8
  %v0_10eac = phi i32 [ %v1_10eac, %dec_label_pc_10eac ], [ 0, %dec_label_pc_10ea8 ]
  %v1_10eac = add i32 %v0_10eac, 1
  %v2_10eb0 = add i32 %v1_10eac, %arg2
  %v3_10eb0 = inttoptr i32 %v2_10eb0 to i8*
  %v4_10eb0 = load i8, i8* %v3_10eb0, align 1
  %v2_10eb4 = icmp eq i8 %v4_10eb0, 0
  br i1 %v2_10eb4, label %dec_label_pc_10ebc, label %dec_label_pc_10eac

dec_label_pc_10ebc:                               ; preds = %dec_label_pc_10eac, %bb
  %v0_10f0021 = phi i32 [ %v4_10e90, %bb ], [ %v1_10eac, %dec_label_pc_10eac ]
  %v0_10ec42 = load i32, i32* @r1, align 4
  %tmp29 = icmp slt i32 %v0_10ec42, 1
  br i1 %tmp29, label %dec_label_pc_10f14, label %dec_label_pc_10ed0

dec_label_pc_10ed0:                               ; preds = %dec_label_pc_10ebc, %dec_label_pc_10ec4.backedge
  %v0_10ec8.in = phi i32 [ %v0_10ec8, %dec_label_pc_10ec4.backedge ], [ %v0_10ec42, %dec_label_pc_10ebc ]
  %v1_10edc = phi i32 [ %v1_10edc15, %dec_label_pc_10ec4.backedge ], [ 0, %dec_label_pc_10ebc ]
  %v0_10ed0 = phi i32 [ %v5_10ed0, %dec_label_pc_10ec4.backedge ], [ %tmp23, %dec_label_pc_10ebc ]
  %v0_10ec8 = add i32 %v0_10ec8.in, -1
  %v1_10ed0 = inttoptr i32 %v0_10ed0 to i8*
  %v2_10ed0 = load i8, i8* %v1_10ed0, align 1
  %v3_10ed0 = zext i8 %v2_10ed0 to i32
  %v5_10ed0 = add i32 %v0_10ed0, 1
  %v1_10ed4 = add nsw i32 %v3_10ed0, -65
  %v2_10edc = add i32 %v1_10edc, %arg2
  %v3_10edc = inttoptr i32 %v2_10edc to i8*
  %v4_10edc = load i8, i8* %v3_10edc, align 1
  %v6_10edc = zext i8 %v4_10edc to i32
  %v1_10ee0 = add nsw i32 %v6_10edc, -65
  %tmp38 = icmp ult i32 %v1_10ed4, 26
  br i1 %tmp38, label %bb30, label %bb31

bb30:                                             ; preds = %dec_label_pc_10ed0
  %v5_10ee4 = or i32 %v3_10ed0, 96
  br label %bb31

bb31:                                             ; preds = %dec_label_pc_10ed0, %bb30
  %v0_10ef0 = phi i32 [ %v3_10ed0, %dec_label_pc_10ed0 ], [ %v5_10ee4, %bb30 ]
  %tmp39 = icmp ult i32 %v1_10ee0, 26
  br i1 %tmp39, label %bb32, label %bb33

bb32:                                             ; preds = %bb31
  %v5_10eec = or i32 %v6_10edc, 96
  br label %bb33

bb33:                                             ; preds = %bb31, %bb32
  %v1_10ef0 = phi i32 [ %v6_10edc, %bb31 ], [ %v5_10eec, %bb32 ]
  %v9_10ef0 = icmp eq i32 %v0_10ef0, %v1_10ef0
  br i1 %v9_10ef0, label %dec_label_pc_10efc, label %bb34

bb34:                                             ; preds = %bb33
  br label %dec_label_pc_10ec4.backedge

dec_label_pc_10ec4.backedge:                      ; preds = %bb34, %dec_label_pc_10efc
  %v1_10edc15 = phi i32 [ 0, %bb34 ], [ %v1_10efc, %dec_label_pc_10efc ]
  %tmp35 = icmp slt i32 %v0_10ec8, 1
  br i1 %tmp35, label %dec_label_pc_10f14, label %dec_label_pc_10ed0

dec_label_pc_10efc:                               ; preds = %bb33
  %v1_10efc = add i32 %v1_10edc, 1
  %v9_10f00 = icmp eq i32 %v0_10f0021, %v1_10efc
  br i1 %v9_10f00, label %dec_label_pc_10f08, label %dec_label_pc_10ec4.backedge

dec_label_pc_10f08:                               ; preds = %dec_label_pc_10efc
  %v2_10f08 = sub i32 %v5_10ed0, %tmp23
  br label %dec_label_pc_10f14

dec_label_pc_10f14:                               ; preds = %dec_label_pc_10ec4.backedge, %dec_label_pc_10ebc, %dec_label_pc_10f08
  %storemerge = phi i32 [ %v2_10f08, %dec_label_pc_10f08 ], [ -1, %dec_label_pc_10ebc ], [ -1, %dec_label_pc_10ec4.backedge ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_10efc, { 1, 0 }
  uselistorder i32 %v0_10ed0, { 1, 0 }
  uselistorder i32 %v1_10edc, { 1, 0 }
  uselistorder i8 %v3_10e90, { 1, 0 }
  uselistorder i32 %tmp23, { 1, 0 }
  uselistorder label %dec_label_pc_10f14, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10ec4.backedge, { 1, 0 }
  uselistorder label %bb33, { 1, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %dec_label_pc_10ed0, { 1, 0 }
}

define i32 @function_10f1c(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10f1c:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = sext i8 %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-66 = alloca i32, align 4
  %v3_10f1c = load i32, i32* @r4, align 4
  %v12_10f1c = load i32, i32* @r7, align 4
  %v0_10f20 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_10f20, i32* %r8.global-to-local, align 4
  %v2_10f20 = icmp eq i32 %v0_10f20, 0
  store i1 %v2_10f20, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* %r6.global-to-local, align 4
  br i1 %v2_10f20, label %dec_label_pc_11000, label %dec_label_pc_10f30

dec_label_pc_10f30:                               ; preds = %dec_label_pc_10f1c
  %v3_10f30 = icmp eq i8 %arg1, 0
  store i1 %v3_10f30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_10f30, label %.thread, label %dec_label_pc_10f44

.thread:                                          ; preds = %dec_label_pc_10f30
  %v4_10f38 = inttoptr i32 %v0_10f20 to i8*
  store i8 48, i8* %v4_10f38, align 1
  %v0_10f3c.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10f3c.pr.pr, label %.thread1, label %dec_label_pc_10f44

.thread1:                                         ; preds = %.thread
  %v4_10f3c = load i32, i32* %r8.global-to-local, align 4
  %v5_10f3c = add i32 %v4_10f3c, 1
  %v6_10f3c = inttoptr i32 %v5_10f3c to i8*
  store i8 0, i8* %v6_10f3c, align 1
  %v0_10f40.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10f40.pr.pr, label %dec_label_pc_11000, label %dec_label_pc_10f44

dec_label_pc_10f44:                               ; preds = %dec_label_pc_10f30, %.thread, %.thread1
  %tmp47 = icmp slt i8 %arg1, 0
  %v7_10f48 = icmp eq i32 %arg2, 10
  store i1 %v7_10f48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10f48, label %bb, label %.thread28

.thread28:                                        ; preds = %dec_label_pc_10f44
  store i32 0, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %.thread6

bb:                                               ; preds = %dec_label_pc_10f44
  %v4_10f44 = zext i1 %tmp47 to i32
  store i32 %v4_10f44, i32* %r2.global-to-local, align 4
  %phitmp = icmp eq i1 %tmp47, false
  store i1 %phitmp, i1* %cpsr_z.global-to-local, align 1
  %v3_10f688 = sub nsw i32 0, %tmp
  %tmp.v3_10f688 = select i1 %phitmp, i32 %tmp, i32 %v3_10f688
  %tmp46 = zext i1 %phitmp to i32
  %. = xor i32 %tmp46, 1
  br label %.thread6

.thread6:                                         ; preds = %bb, %.thread28
  %storemerge30 = phi i32 [ %tmp, %.thread28 ], [ %tmp.v3_10f688, %bb ]
  %storemerge = phi i32 [ 0, %.thread28 ], [ %., %bb ]
  store i32 %storemerge30, i32* @r4, align 4
  store i32 %storemerge, i32* %sl.global-to-local, align 4
  store i32 32, i32* %r5.global-to-local, align 4
  %v2_10f74 = ptrtoint i32* %stack_var_-66 to i32
  store i32 %v2_10f74, i32* @r7, align 4
  br label %dec_label_pc_10f78

dec_label_pc_10f78:                               ; preds = %bb45, %.thread6
  %v0_10f78 = phi i32 [ %v0_10f9c, %bb45 ], [ %storemerge30, %.thread6 ]
  store i32 %v0_10f78, i32* %r0.global-to-local, align 4
  %v0_10f7c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_10f7c, i32* %r1.global-to-local, align 4
  %sext = mul i32 %v0_10f78, 16777216
  %v1_10f80 = sdiv i32 %sext, 16777216
  %v3_10f80 = call i32 @function_11114(i32 %v1_10f80, i32 %v0_10f7c)
  %v7_10f84 = icmp eq i32 %v0_10f7c, 9
  store i1 %v7_10f84, i1* %cpsr_z.global-to-local, align 1
  %v1_10f88 = add i32 %v0_10f7c, 48
  %v0_10f8c = load i32, i32* @r4, align 4
  store i32 %v0_10f8c, i32* @r0, align 4
  %v7_10f90 = icmp sgt i32 %v0_10f7c, 9
  %extract.t = trunc i32 %v1_10f88 to i8
  br i1 %v7_10f90, label %bb44, label %bb45

bb44:                                             ; preds = %dec_label_pc_10f78
  %v9_10f90 = add i32 %v0_10f7c, 55
  %extract.t27 = trunc i32 %v9_10f90 to i8
  br label %bb45

bb45:                                             ; preds = %dec_label_pc_10f78, %bb44
  %v0_10f98.off0 = phi i8 [ %extract.t, %dec_label_pc_10f78 ], [ %extract.t27, %bb44 ]
  %v0_10f94 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_10f94, i32* @r1, align 4
  %v2_10f98 = load i32, i32* %r5.global-to-local, align 4
  %v3_10f98 = load i32, i32* @r7, align 4
  %v4_10f98 = add i32 %v3_10f98, %v2_10f98
  %v5_10f98 = inttoptr i32 %v4_10f98 to i8*
  store i8 %v0_10f98.off0, i8* %v5_10f98, align 1
  %v0_10f9c = call i32 @function_11018()
  store i32 %v0_10f9c, i32* %r0.global-to-local, align 4
  store i32 %v0_10f9c, i32* @r4, align 4
  %v2_10fa0 = icmp eq i32 %v0_10f9c, 0
  store i1 %v2_10fa0, i1* %cpsr_z.global-to-local, align 1
  %v0_10fa4 = load i32, i32* %r5.global-to-local, align 4
  %v1_10fa4 = add i32 %v0_10fa4, -1
  store i32 %v1_10fa4, i32* %r5.global-to-local, align 4
  br i1 %v2_10fa0, label %dec_label_pc_10fac, label %dec_label_pc_10f78

dec_label_pc_10fac:                               ; preds = %bb45
  %v0_10fac = load i32, i32* %sl.global-to-local, align 4
  %v2_10fac = icmp eq i32 %v0_10fac, 0
  store i1 %v2_10fac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10fac, label %.thread12, label %.thread11

.thread11:                                        ; preds = %dec_label_pc_10fac
  %v3_10fb0 = ptrtoint i32* %stack_var_-32 to i32
  %v3_10fb4 = add i32 %v1_10fa4, %v3_10fb0
  store i32 %v3_10fb4, i32* %r2.global-to-local, align 4
  %v4_10fbc = add i32 %v3_10fb4, -34
  %v5_10fbc = inttoptr i32 %v4_10fbc to i8*
  store i8 45, i8* %v5_10fbc, align 1
  %v0_10fc0.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_10fc0.pre = load i32, i32* %r5.global-to-local, align 4
  br i1 %v0_10fc0.pr.pr.pr, label %.thread12, label %.thread11._crit_edge

.thread12:                                        ; preds = %.thread11, %dec_label_pc_10fac
  %v1_10fc0 = phi i32 [ %v1_10fa4, %dec_label_pc_10fac ], [ %v1_10fc0.pre, %.thread11 ]
  %v2_10fc0 = add i32 %v1_10fc0, 1
  store i32 %v2_10fc0, i32* %r5.global-to-local, align 4
  br label %.thread11._crit_edge

.thread11._crit_edge:                             ; preds = %.thread11, %.thread12
  %v1_10fcc = phi i32 [ %v2_10fc0, %.thread12 ], [ %v1_10fc0.pre, %.thread11 ]
  %v0_10fc4 = load i32, i32* @r7, align 4
  %v2_10fc4 = add i32 %v0_10fc4, %v1_10fcc
  %v3_10fc4 = inttoptr i32 %v2_10fc4 to i8*
  %v4_10fc4 = load i8, i8* %v3_10fc4, align 1
  %v6_10fc4 = zext i8 %v4_10fc4 to i32
  %v2_10fc8 = icmp eq i8 %v4_10fc4, 0
  store i1 %v2_10fc8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_10fc4, i32* %r2.global-to-local, align 4
  br i1 %v2_10fc8, label %dec_label_pc_11010, label %dec_label_pc_10fd8.preheader

dec_label_pc_10fd8.preheader:                     ; preds = %.thread11._crit_edge
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_10fd8

dec_label_pc_10fd8:                               ; preds = %dec_label_pc_10fd8.preheader, %dec_label_pc_10fd8
  %v0_10fd8 = phi i32 [ 0, %dec_label_pc_10fd8.preheader ], [ %v1_10fd8, %dec_label_pc_10fd8 ]
  %v1_10fd8 = add i32 %v0_10fd8, 1
  store i32 %v1_10fd8, i32* %r1.global-to-local, align 4
  %v2_10fdc = add i32 %v1_10fd8, %v2_10fc4
  %v3_10fdc = inttoptr i32 %v2_10fdc to i8*
  %v4_10fdc = load i8, i8* %v3_10fdc, align 1
  %v2_10fe0 = icmp eq i8 %v4_10fdc, 0
  store i1 %v2_10fe0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10fe0, label %dec_label_pc_10fe8, label %dec_label_pc_10fd8

dec_label_pc_10fe8:                               ; preds = %dec_label_pc_10fd8, %dec_label_pc_11010
  %v0_10fec24 = phi i32 [ %v6_10fc4, %dec_label_pc_11010 ], [ %v1_10fd8, %dec_label_pc_10fd8 ]
  %v0_10fe8 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_10fe8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10fec

dec_label_pc_10fec:                               ; preds = %dec_label_pc_10fec.dec_label_pc_10fec_crit_edge, %dec_label_pc_10fe8
  %v2_10ff8 = phi i32 [ %v5_10ff8, %dec_label_pc_10fec.dec_label_pc_10fec_crit_edge ], [ %v0_10fe8, %dec_label_pc_10fe8 ]
  %v0_10ff0 = phi i32 [ %v0_10ff0.pre, %dec_label_pc_10fec.dec_label_pc_10fec_crit_edge ], [ %v2_10fc4, %dec_label_pc_10fe8 ]
  %v0_10fec = phi i32 [ %v0_10fec.pre, %dec_label_pc_10fec.dec_label_pc_10fec_crit_edge ], [ %v0_10fec24, %dec_label_pc_10fe8 ]
  %v1_10fec = add i32 %v0_10fec, -1
  store i32 %v1_10fec, i32* %r1.global-to-local, align 4
  %v1_10ff0 = inttoptr i32 %v0_10ff0 to i8*
  %v2_10ff0 = load i8, i8* %v1_10ff0, align 1
  %v5_10ff0 = add i32 %v0_10ff0, 1
  store i32 %v5_10ff0, i32* %r2.global-to-local, align 4
  %v3_10ff4 = icmp eq i32 %v0_10fec, 0
  store i1 %v3_10ff4, i1* %cpsr_z.global-to-local, align 1
  %v3_10ff8 = inttoptr i32 %v2_10ff8 to i8*
  store i8 %v2_10ff0, i8* %v3_10ff8, align 1
  %v4_10ff8 = load i32, i32* %r0.global-to-local, align 4
  %v5_10ff8 = add i32 %v4_10ff8, 1
  store i32 %v5_10ff8, i32* %r0.global-to-local, align 4
  br i1 %v3_10ff4, label %dec_label_pc_11000, label %dec_label_pc_10fec.dec_label_pc_10fec_crit_edge

dec_label_pc_10fec.dec_label_pc_10fec_crit_edge:  ; preds = %dec_label_pc_10fec
  %v0_10fec.pre = load i32, i32* %r1.global-to-local, align 4
  %v0_10ff0.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10fec

dec_label_pc_11000:                               ; preds = %dec_label_pc_10fec, %.thread1, %dec_label_pc_10f1c
  %v0_11000 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_11000, i32* %r0.global-to-local, align 4
  store i32 %v3_10f1c, i32* @r4, align 4
  store i32 %v12_10f1c, i32* @r7, align 4
  ret i32 %v0_11000

dec_label_pc_11010:                               ; preds = %.thread11._crit_edge
  store i32 %v6_10fc4, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_10fe8

; uselistorder directives
  uselistorder i32 %v5_10ff8, { 1, 0 }
  uselistorder i1 %v3_10ff4, { 1, 0 }
  uselistorder i32 %v0_10ff0, { 1, 0 }
  uselistorder i32 %v1_10fd8, { 0, 1, 3, 2 }
  uselistorder i32 %v6_10fc4, { 1, 0 }
  uselistorder i32 %v2_10fc4, { 1, 0, 2, 3 }
  uselistorder i32 %v1_10fc0.pre, { 1, 0 }
  uselistorder i32 %v1_10fa4, { 1, 0, 2 }
  uselistorder i32 %v0_10f9c, { 1, 2, 3, 0 }
  uselistorder i32 %v0_10f7c, { 2, 0, 1, 3, 4, 5 }
  uselistorder i1 %phitmp, { 2, 1, 0 }
  uselistorder i32 %v0_10f20, { 0, 2, 1 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 6, 7, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 13, 8, 10, 9, 11, 12 }
  uselistorder i8 45, { 1, 0 }
  uselistorder i32 55, { 3, 0, 2, 1 }
  uselistorder i32 (i32, i32)* @function_11114, { 3, 0, 6, 5, 1, 2, 4 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10fe8, { 1, 0 }
  uselistorder label %dec_label_pc_10fd8, { 1, 0 }
  uselistorder label %.thread11._crit_edge, { 1, 0 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %dec_label_pc_10f44, { 2, 1, 0 }
}

define i32 @function_11018() local_unnamed_addr {
dec_label_pc_11018:
  %v0_11018 = load i32, i32* @r1, align 4
  %v1_11018 = add i32 %v0_11018, -1
  store i32 %v1_11018, i32* @r2, align 4
  %v2_11018 = icmp eq i32 %v0_11018, 0
  %v7_11018 = icmp eq i32 %v0_11018, 1
  %v0_1101c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v7_11018, i32 %v0_1101c)
  br i1 %v2_11018, label %dec_label_pc_11100, label %dec_label_pc_11024

dec_label_pc_11024:                               ; preds = %dec_label_pc_11018
  %v0_11024 = load i32, i32* @r0, align 4
  %v1_11024 = load i32, i32* @r1, align 4
  %tmp = icmp ugt i32 %v0_11024, %v1_11024
  br i1 %tmp, label %dec_label_pc_1102c, label %dec_label_pc_110b8

dec_label_pc_1102c:                               ; preds = %dec_label_pc_11024
  %v1_1102c = load i32, i32* @r2, align 4
  %v2_1102c = and i32 %v1_1102c, %v1_11024
  %v4_1102c = icmp eq i32 %v2_1102c, 0
  br i1 %v4_1102c, label %dec_label_pc_110c4, label %dec_label_pc_11034

dec_label_pc_11034:                               ; preds = %dec_label_pc_1102c
  %v3_11034 = icmp ult i32 %v1_11024, 536870912
  br i1 %v3_11034, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_11034
  %v4_11038 = mul i32 %v1_11024, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_11034, %.thread
  %v0_11058.pr36.ph = phi i32 [ %v4_11038, %.thread ], [ %v1_11024, %dec_label_pc_11034 ]
  %storemerge133 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_11034 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb81
  %v0_11058.pr36 = phi i32 [ %v4_1104c, %bb81 ], [ %v0_11058.pr36.ph, %.preheader.preheader ]
  %v1_11050 = phi i32 [ %v4_11050, %bb81 ], [ %storemerge133, %.preheader.preheader ]
  %v2_11044 = icmp ugt i32 %v0_11058.pr36, 268435455
  br i1 %v2_11044, label %.thread2, label %bb

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_11058thread-pre-split.loopexit

bb:                                               ; preds = %.preheader
  %v4_11048 = icmp ult i32 %v0_11058.pr36, %v0_11024
  br i1 %v4_11048, label %bb80, label %dec_label_pc_11058thread-pre-split.loopexit.loopexit

bb80:                                             ; preds = %bb
  %v2_1104c = and i32 %v0_11058.pr36, 268435456
  %v3_1104c = icmp eq i32 %v2_1104c, 0
  %v4_1104c = mul i32 %v0_11058.pr36, 16
  br i1 %v3_1104c, label %bb81, label %dec_label_pc_11058.loopexit

bb81:                                             ; preds = %bb80
  %v2_11050 = and i32 %v1_11050, 268435456
  %v3_11050 = icmp eq i32 %v2_11050, 0
  %v4_11050 = mul i32 %v1_11050, 16
  br i1 %v3_11050, label %.preheader, label %dec_label_pc_11058thread-pre-split.loopexit.loopexit

dec_label_pc_11058thread-pre-split.loopexit.loopexit: ; preds = %bb81, %bb
  %v1_1106448.ph = phi i32 [ %v1_11050, %bb ], [ %v4_11050, %bb81 ]
  %v0_11058.pr38.ph = phi i32 [ %v0_11058.pr36, %bb ], [ %v4_1104c, %bb81 ]
  br label %dec_label_pc_11058thread-pre-split.loopexit

dec_label_pc_11058thread-pre-split.loopexit:      ; preds = %dec_label_pc_11058thread-pre-split.loopexit.loopexit, %.thread2
  %v1_1106448 = phi i32 [ %v1_11050, %.thread2 ], [ %v1_1106448.ph, %dec_label_pc_11058thread-pre-split.loopexit.loopexit ]
  %v0_11058.pr38 = phi i32 [ %v0_11058.pr36, %.thread2 ], [ %v0_11058.pr38.ph, %dec_label_pc_11058thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_11058thread-pre-split

dec_label_pc_11058thread-pre-split:               ; preds = %dec_label_pc_11058thread-pre-split.loopexit, %bb83
  %v1_1106446 = phi i32 [ %v1_1106448, %dec_label_pc_11058thread-pre-split.loopexit ], [ %v3_11064, %bb83 ]
  %v0_11058.pr = phi i32 [ %v0_11058.pr38, %dec_label_pc_11058thread-pre-split.loopexit ], [ %v3_11060, %bb83 ]
  br label %dec_label_pc_11058

dec_label_pc_11058.loopexit:                      ; preds = %bb80
  br label %dec_label_pc_11058

dec_label_pc_11058:                               ; preds = %dec_label_pc_11058.loopexit, %dec_label_pc_11058thread-pre-split
  %v1_11064 = phi i32 [ %v1_1106446, %dec_label_pc_11058thread-pre-split ], [ %v1_11050, %dec_label_pc_11058.loopexit ]
  %v1_11060 = phi i32 [ %v0_11058.pr, %dec_label_pc_11058thread-pre-split ], [ %v4_1104c, %dec_label_pc_11058.loopexit ]
  %v2_11058 = icmp slt i32 %v1_11060, 0
  br i1 %v2_11058, label %dec_label_pc_1106c, label %bb82

bb82:                                             ; preds = %dec_label_pc_11058
  %v4_1105c = icmp ult i32 %v1_11060, %v0_11024
  br i1 %v4_1105c, label %bb83, label %dec_label_pc_1106c

bb83:                                             ; preds = %bb82
  %v3_11060 = mul i32 %v1_11060, 2
  %v2_11064 = icmp slt i32 %v1_11064, 0
  %v3_11064 = mul i32 %v1_11064, 2
  br i1 %v2_11064, label %dec_label_pc_1106c, label %dec_label_pc_11058thread-pre-split

dec_label_pc_1106c:                               ; preds = %bb82, %dec_label_pc_11058, %bb83
  %v2_1107859 = phi i32 [ %v3_11064, %bb83 ], [ %v1_11064, %bb82 ], [ %v1_11064, %dec_label_pc_11058 ]
  %v1_1107051 = phi i32 [ %v3_11060, %bb83 ], [ %v1_11060, %bb82 ], [ %v1_11060, %dec_label_pc_11058 ]
  store i32 0, i32* @r2, align 4
  br label %dec_label_pc_11070

dec_label_pc_11070:                               ; preds = %.thread11, %dec_label_pc_1106c
  %v1_110a4 = phi i32 [ %v4_110a4, %.thread11 ], [ %v2_1107859, %dec_label_pc_1106c ]
  %v1_11078 = phi i32 [ %v0_110b0, %.thread11 ], [ 0, %dec_label_pc_1106c ]
  %v1_110a8 = phi i32 [ %v4_110a8, %.thread11 ], [ %v1_1107051, %dec_label_pc_1106c ]
  %v1_11074 = phi i32 [ %v0_110a0, %.thread11 ], [ %v0_11024, %dec_label_pc_1106c ]
  %v3_11070 = icmp ult i32 %v1_11074, %v1_110a8
  br i1 %v3_11070, label %.thread7, label %bb84

bb84:                                             ; preds = %dec_label_pc_11070
  %v3_11074 = sub i32 %v1_11074, %v1_110a8
  %v3_11078 = or i32 %v1_11078, %v1_110a4
  store i32 %v3_11078, i32* @r2, align 4
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_11070, %bb84
  %v1_11080 = phi i32 [ %v1_11074, %dec_label_pc_11070 ], [ %v3_11074, %bb84 ]
  %v1_11084 = phi i32 [ %v1_11078, %dec_label_pc_11070 ], [ %v3_11078, %bb84 ]
  %v4_1107c = udiv i32 %v1_110a8, 2
  %v6_1107c = icmp ult i32 %v1_11080, %v4_1107c
  br i1 %v6_1107c, label %.thread8, label %bb85

bb85:                                             ; preds = %.thread7
  %v3_11080 = urem i32 %v1_110a8, 2
  %v4_11080 = icmp eq i32 %v3_11080, 0
  %v6_11080 = sub i32 %v1_11080, %v4_1107c
  br i1 %v4_11080, label %.thread8, label %bb86

bb86:                                             ; preds = %bb85
  %v5_11084 = udiv i32 %v1_110a4, 2
  %v6_11084 = or i32 %v1_11084, %v5_11084
  store i32 %v6_11084, i32* @r2, align 4
  br label %.thread8

.thread8:                                         ; preds = %bb85, %.thread7, %bb86
  %v1_1108c = phi i32 [ %v6_11080, %bb85 ], [ %v1_11080, %.thread7 ], [ %v6_11080, %bb86 ]
  %v1_11090 = phi i32 [ %v1_11084, %bb85 ], [ %v1_11084, %.thread7 ], [ %v6_11084, %bb86 ]
  %v4_11088 = udiv i32 %v1_110a8, 4
  %v6_11088 = icmp ult i32 %v1_1108c, %v4_11088
  br i1 %v6_11088, label %.thread9, label %bb87

bb87:                                             ; preds = %.thread8
  %v3_1108c = and i32 %v1_110a8, 2
  %v4_1108c = icmp eq i32 %v3_1108c, 0
  %v6_1108c = sub i32 %v1_1108c, %v4_11088
  br i1 %v4_1108c, label %.thread9, label %bb88

bb88:                                             ; preds = %bb87
  %v5_11090 = udiv i32 %v1_110a4, 4
  %v6_11090 = or i32 %v1_11090, %v5_11090
  store i32 %v6_11090, i32* @r2, align 4
  br label %.thread9

.thread9:                                         ; preds = %bb87, %.thread8, %bb88
  %v1_11098 = phi i32 [ %v6_1108c, %bb87 ], [ %v1_1108c, %.thread8 ], [ %v6_1108c, %bb88 ]
  %v1_1109c = phi i32 [ %v1_11090, %bb87 ], [ %v1_11090, %.thread8 ], [ %v6_11090, %bb88 ]
  %v4_11094 = udiv i32 %v1_110a8, 8
  %v6_11094 = icmp ult i32 %v1_11098, %v4_11094
  br i1 %v6_11094, label %thread-pre-split, label %bb89

bb89:                                             ; preds = %.thread9
  %v3_11098 = and i32 %v1_110a8, 4
  %v4_11098 = icmp eq i32 %v3_11098, 0
  %v6_11098 = sub i32 %v1_11098, %v4_11094
  br i1 %v4_11098, label %thread-pre-split, label %bb90

bb90:                                             ; preds = %bb89
  %v5_1109c = udiv i32 %v1_110a4, 8
  %v6_1109c = or i32 %v1_1109c, %v5_1109c
  store i32 %v6_1109c, i32* @r2, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb90, %.thread9, %bb89
  %v0_110b0 = phi i32 [ %v1_1109c, %bb89 ], [ %v1_1109c, %.thread9 ], [ %v6_1109c, %bb90 ]
  %v0_110a0 = phi i32 [ %v6_11098, %bb89 ], [ %v1_11098, %.thread9 ], [ %v6_11098, %bb90 ]
  %v2_110a0 = icmp eq i32 %v0_110a0, 0
  br i1 %v2_110a0, label %dec_label_pc_110b0, label %bb91

bb91:                                             ; preds = %thread-pre-split
  %tmp138 = icmp ult i32 %v1_110a4, 16
  br i1 %tmp138, label %dec_label_pc_110b0, label %.thread11

.thread11:                                        ; preds = %bb91
  %v4_110a4 = udiv i32 %v1_110a4, 16
  %v4_110a8 = udiv i32 %v1_110a8, 16
  br label %dec_label_pc_11070

dec_label_pc_110b0:                               ; preds = %thread-pre-split, %bb91
  ret i32 %v0_110b0

dec_label_pc_110b8:                               ; preds = %dec_label_pc_11024
  %v9_11024 = icmp eq i32 %v0_11024, %v1_11024
  %. = zext i1 %v9_11024 to i32
  ret i32 %.

dec_label_pc_110c4:                               ; preds = %dec_label_pc_1102c
  %v2_110c4 = icmp ugt i32 %v1_11024, 65535
  br i1 %v2_110c4, label %bb95, label %.thread16

bb95:                                             ; preds = %dec_label_pc_110c4
  %v2_110c8 = and i32 %v1_11024, 32768
  %v3_110c8 = icmp eq i32 %v2_110c8, 0
  %v4_110c8 = udiv i32 %v1_11024, 65536
  br i1 %v3_110c8, label %.thread16, label %bb96

.thread16:                                        ; preds = %bb95, %dec_label_pc_110c4
  %v0_110d465 = phi i32 [ %v1_11024, %dec_label_pc_110c4 ], [ %v4_110c8, %bb95 ]
  br label %bb96

bb96:                                             ; preds = %bb95, %.thread16
  %v1_110d8 = phi i32 [ %v0_110d465, %.thread16 ], [ %v4_110c8, %bb95 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb95 ]
  store i32 %storemerge, i32* @r2, align 4
  %v2_110d4 = icmp ugt i32 %v1_110d8, 255
  br i1 %v2_110d4, label %bb97, label %.thread17

bb97:                                             ; preds = %bb96
  %v2_110d8 = and i32 %v1_110d8, 128
  %v3_110d8 = icmp eq i32 %v2_110d8, 0
  %v4_110d8 = udiv i32 %v1_110d8, 256
  br i1 %v3_110d8, label %.thread17, label %bb98

bb98:                                             ; preds = %bb97
  %v2_110dc = or i32 %storemerge, 8
  store i32 %v2_110dc, i32* @r2, align 4
  br label %.thread17

.thread17:                                        ; preds = %bb97, %bb96, %bb98
  %v1_110e8 = phi i32 [ %storemerge, %bb96 ], [ %storemerge, %bb97 ], [ %v2_110dc, %bb98 ]
  %v1_110e4 = phi i32 [ %v1_110d8, %bb96 ], [ %v4_110d8, %bb97 ], [ %v4_110d8, %bb98 ]
  %v2_110e0 = icmp ugt i32 %v1_110e4, 15
  br i1 %v2_110e0, label %bb99, label %.thread18

bb99:                                             ; preds = %.thread17
  %v2_110e4 = and i32 %v1_110e4, 8
  %v3_110e4 = icmp eq i32 %v2_110e4, 0
  %v4_110e4 = udiv i32 %v1_110e4, 16
  br i1 %v3_110e4, label %.thread18, label %bb100

bb100:                                            ; preds = %bb99
  %v2_110e8 = add nsw i32 %v1_110e8, 4
  store i32 %v2_110e8, i32* @r2, align 4
  br label %.thread18

.thread18:                                        ; preds = %bb99, %.thread17, %bb100
  %v4_110f0 = phi i32 [ %v1_110e8, %.thread17 ], [ %v1_110e8, %bb99 ], [ %v2_110e8, %bb100 ]
  %v5_110f4 = phi i32 [ %v1_110e4, %.thread17 ], [ %v4_110e4, %bb99 ], [ %v4_110e4, %bb100 ]
  %v2_110ec = icmp ugt i32 %v5_110f4, 3
  %v7_110ec = icmp eq i32 %v5_110f4, 4
  %v2_110f0 = xor i1 %v7_110ec, true
  %v3_110f0 = and i1 %v2_110ec, %v2_110f0
  br i1 %v3_110f0, label %bb101, label %bb102

bb101:                                            ; preds = %.thread18
  %v5_110f0 = add nsw i32 %v4_110f0, 3
  store i32 %v5_110f0, i32* @r2, align 4
  br label %bb102

bb102:                                            ; preds = %.thread18, %bb101
  %v4_110f4 = phi i32 [ %v4_110f0, %.thread18 ], [ %v5_110f0, %bb101 ]
  %v2_110f4 = xor i1 %v2_110ec, true
  %v3_110f4 = or i1 %v7_110ec, %v2_110f4
  br i1 %v3_110f4, label %bb103, label %bb104

bb103:                                            ; preds = %bb102
  %v8_110f4 = udiv i32 %v5_110f4, 2
  %v9_110f4 = add i32 %v4_110f4, %v8_110f4
  store i32 %v9_110f4, i32* @r2, align 4
  br label %bb104

bb104:                                            ; preds = %bb102, %bb103
  %v1_110f8 = phi i32 [ %v4_110f4, %bb102 ], [ %v9_110f4, %bb103 ]
  %v6_110f8 = lshr i32 %v0_11024, %v1_110f8
  ret i32 %v6_110f8

dec_label_pc_11100:                               ; preds = %dec_label_pc_11018
  %v0_11100 = load i32, i32* @lr, align 4
  %v0_11104 = call i32 @function_1112c()
  store i32 %v0_11100, i32* @lr, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_110f4, { 1, 0 }
  uselistorder i1 %v7_110ec, { 1, 0 }
  uselistorder i32 %v4_110e4, { 1, 0 }
  uselistorder i32 %v1_110e4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_110dc, { 1, 0 }
  uselistorder i32 %v4_110d8, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2, 3 }
  uselistorder i32 %v1_110d8, { 1, 0, 2, 3 }
  uselistorder i32 %v4_110c8, { 1, 0 }
  uselistorder i32 %v0_110a0, { 1, 0 }
  uselistorder i32 %v4_11094, { 1, 0 }
  uselistorder i32 %v1_1109c, { 1, 2, 0 }
  uselistorder i32 %v4_11088, { 1, 0 }
  uselistorder i32 %v1_11090, { 1, 2, 0 }
  uselistorder i32 %v4_1107c, { 1, 0 }
  uselistorder i32 %v1_11084, { 1, 2, 0 }
  uselistorder i32 %v1_110a8, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_11078, { 1, 0 }
  uselistorder i32 %v1_110a4, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_11064, { 1, 0 }
  uselistorder i32 %v3_11060, { 1, 0 }
  uselistorder i32 %v1_11060, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_11064, { 1, 2, 0, 3 }
  uselistorder i32 %v4_11050, { 1, 0 }
  uselistorder i32 %v4_1104c, { 2, 1, 0 }
  uselistorder i32 %v1_11050, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_11058.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v1_11024, { 6, 2, 7, 8, 9, 4, 3, 0, 5, 1 }
  uselistorder i32 %v0_11024, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %v0_11018, { 2, 0, 1 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_110b0, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_1106c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11058thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @function_11114(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11114:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %v0_11118 = call i32 @function_11018()
  %v2_11120 = mul i32 %v0_11118, %arg2
  store i32 %v2_11120, i32* @r3, align 4
  ret i32 %v0_11118

; uselistorder directives
  uselistorder i32 %v0_11118, { 1, 0 }
}

define i32 @function_1112c() local_unnamed_addr {
dec_label_pc_1112c:
  %v1_11134 = call i32 @function_11d68(i32 8)
  ret i32 %v1_11134
}

define i32 @function_11140() local_unnamed_addr {
dec_label_pc_11140:
  %v1_11150 = load i32, i32* @r0, align 4
  ret i32 %v1_11150
}

define i32 @function_11154(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11154:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v6_11154 = load i32, i32* @r2, align 4
  %v9_11154 = load i32, i32* @r3, align 4
  store i32 %v9_11154, i32* %stack_var_-4, align 4
  %v1_11164 = and i32 %arg2, 64
  %v2_11164 = icmp eq i32 %v1_11164, 0
  br i1 %v2_11164, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_11154
  %v3_1116c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v3_1116c, i32* @r3, align 4
  %phitmp = urem i32 %v6_11154, 65536
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_11154, %bb
  %v0_11170 = phi i32 [ 0, %dec_label_pc_11154 ], [ %phitmp, %bb ]
  store i32 %v0_11170, i32* @r2, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_111a0, label %dec_label_pc_11190

dec_label_pc_11190:                               ; preds = %.thread
  %v0_11190 = call i32 @function_11970()
  %v0_11194 = load i32, i32* %r7.global-to-local, align 4
  %v1_11194 = sub i32 0, %v0_11194
  store i32 %v1_11194, i32* @r3, align 4
  %v2_11198 = inttoptr i32 %v0_11190 to i32*
  store i32 %v1_11194, i32* %v2_11198, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_111a0

dec_label_pc_111a0:                               ; preds = %.thread, %dec_label_pc_11190
  %v0_111a0 = phi i32 [ %arg1, %.thread ], [ -1, %dec_label_pc_11190 ]
  ret i32 %v0_111a0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_111a0, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_111b4() local_unnamed_addr {
dec_label_pc_111b4:
  %v1_111c4 = load i32, i32* @r0, align 4
  ret i32 %v1_111c4
}

define i32 @function_111c8(i32* %arg1) local_unnamed_addr {
dec_label_pc_111c8:
  %stack_var_-16 = alloca i32, align 4
  %v2_111cc = ptrtoint i32* %stack_var_-16 to i32
  %v2_111dc = call i32 @function_11348(i32 %v2_111cc, i32 0)
  %v2_111e0 = load i32, i32* %stack_var_-16, align 4
  %v2_111e4 = icmp eq i32* %arg1, null
  br i1 %v2_111e4, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_111c8
  store i32 %v2_111e0, i32* %arg1, align 4
  br label %bb6

bb6:                                              ; preds = %dec_label_pc_111c8, %bb
  ret i32 %v2_111e0

; uselistorder directives
  uselistorder label %bb6, { 1, 0 }
}

define i32 @function_111f8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_111f8:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1122c, label %dec_label_pc_1121c

dec_label_pc_1121c:                               ; preds = %dec_label_pc_111f8
  %v0_1121c = call i32 @function_11970()
  %v0_11220 = load i32, i32* %r4.global-to-local, align 4
  %v1_11220 = sub i32 0, %v0_11220
  %v2_11224 = inttoptr i32 %v0_1121c to i32*
  store i32 %v1_11220, i32* %v2_11224, align 4
  br label %dec_label_pc_1122c

dec_label_pc_1122c:                               ; preds = %dec_label_pc_111f8, %dec_label_pc_1121c
  %v1_11234 = phi i32 [ %arg1, %dec_label_pc_111f8 ], [ -1, %dec_label_pc_1121c ]
  ret i32 %v1_11234

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1122c, { 1, 0 }
}

define i32 @function_11238() local_unnamed_addr {
dec_label_pc_11238:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11238 = load i32, i32* @r7, align 4
  store i32 %v3_11238, i32* %stack_var_-8, align 4
  %v0_11244 = load i32, i32* @r0, align 4
  store i32 %v0_11244, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11244, -4095
  br i1 %tmp, label %dec_label_pc_11264, label %dec_label_pc_11254

dec_label_pc_11254:                               ; preds = %dec_label_pc_11238
  %v0_11254 = call i32 @function_11970()
  %v0_11258 = load i32, i32* %r7.global-to-local, align 4
  %v1_11258 = sub i32 0, %v0_11258
  %v2_1125c = inttoptr i32 %v0_11254 to i32*
  store i32 %v1_11258, i32* %v2_1125c, align 4
  %v2_11264.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11264

dec_label_pc_11264:                               ; preds = %dec_label_pc_11238, %dec_label_pc_11254
  %v1_11268 = phi i32 [ %v0_11244, %dec_label_pc_11238 ], [ -1, %dec_label_pc_11254 ]
  %v2_11264 = phi i32 [ %v3_11238, %dec_label_pc_11238 ], [ %v2_11264.pre, %dec_label_pc_11254 ]
  store i32 %v2_11264, i32* @r7, align 4
  ret i32 %v1_11268

; uselistorder directives
  uselistorder i32 %v0_11244, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11264, { 1, 0 }
}

define i32 @function_1126c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1126c:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1129c, label %dec_label_pc_1128c

dec_label_pc_1128c:                               ; preds = %dec_label_pc_1126c
  %v0_1128c = call i32 @function_11970()
  %v0_11290 = load i32, i32* %r4.global-to-local, align 4
  %v1_11290 = sub i32 0, %v0_11290
  %v2_11294 = inttoptr i32 %v0_1128c to i32*
  store i32 %v1_11290, i32* %v2_11294, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1129c

dec_label_pc_1129c:                               ; preds = %dec_label_pc_1126c, %dec_label_pc_1128c
  %v0_1129c = phi i32 [ %arg1, %dec_label_pc_1126c ], [ -1, %dec_label_pc_1128c ]
  ret i32 %v0_1129c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1129c, { 1, 0 }
}

define i32 @function_112ac(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_112ac:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_112ac = load i32, i32* @r7, align 4
  store i32 %v3_112ac, i32* %stack_var_-8, align 4
  %v0_112b8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_112b8, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_112b8, -4095
  br i1 %tmp, label %dec_label_pc_112d8, label %dec_label_pc_112c8

dec_label_pc_112c8:                               ; preds = %dec_label_pc_112ac
  %v0_112c8 = call i32 @function_11970()
  %v0_112cc = load i32, i32* %r7.global-to-local, align 4
  %v1_112cc = sub i32 0, %v0_112cc
  %v2_112d0 = inttoptr i32 %v0_112c8 to i32*
  store i32 %v1_112cc, i32* %v2_112d0, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_112d8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_112d8

dec_label_pc_112d8:                               ; preds = %dec_label_pc_112ac, %dec_label_pc_112c8
  %v1_112dc = phi i32 [ %v0_112b8, %dec_label_pc_112ac ], [ -1, %dec_label_pc_112c8 ]
  %v2_112d8 = phi i32 [ %v3_112ac, %dec_label_pc_112ac ], [ %v2_112d8.pre, %dec_label_pc_112c8 ]
  store i32 %v2_112d8, i32* @r7, align 4
  ret i32 %v1_112dc

; uselistorder directives
  uselistorder i32 %v0_112b8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_112d8, { 1, 0 }
}

define i32 @function_112e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_112e0:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_112e0 = load i32, i32* @r7, align 4
  store i32 %v3_112e0, i32* %stack_var_-8, align 4
  %v0_112ec = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_112ec, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_112ec, -4095
  br i1 %tmp, label %dec_label_pc_1130c, label %dec_label_pc_112fc

dec_label_pc_112fc:                               ; preds = %dec_label_pc_112e0
  %v0_112fc = call i32 @function_11970()
  %v0_11300 = load i32, i32* %r7.global-to-local, align 4
  %v1_11300 = sub i32 0, %v0_11300
  %v2_11304 = inttoptr i32 %v0_112fc to i32*
  store i32 %v1_11300, i32* %v2_11304, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1130c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1130c

dec_label_pc_1130c:                               ; preds = %dec_label_pc_112e0, %dec_label_pc_112fc
  %v1_11310 = phi i32 [ %v0_112ec, %dec_label_pc_112e0 ], [ -1, %dec_label_pc_112fc ]
  %v2_1130c = phi i32 [ %v3_112e0, %dec_label_pc_112e0 ], [ %v2_1130c.pre, %dec_label_pc_112fc ]
  store i32 %v2_1130c, i32* @r7, align 4
  ret i32 %v1_11310

; uselistorder directives
  uselistorder i32 %v0_112ec, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1130c, { 1, 0 }
}

define i32 @function_11314(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11314:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11314 = load i32, i32* @r7, align 4
  store i32 %v3_11314, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1133c, label %dec_label_pc_1132c

dec_label_pc_1132c:                               ; preds = %dec_label_pc_11314
  %v0_1132c = call i32 @function_11970()
  %v0_11330 = load i32, i32* %r7.global-to-local, align 4
  %v1_11330 = sub i32 0, %v0_11330
  %v2_11334 = inttoptr i32 %v0_1132c to i32*
  store i32 %v1_11330, i32* %v2_11334, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_11340.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1133c

dec_label_pc_1133c:                               ; preds = %dec_label_pc_11314, %dec_label_pc_1132c
  %v2_11340 = phi i32 [ %v3_11314, %dec_label_pc_11314 ], [ %v2_11340.pre, %dec_label_pc_1132c ]
  %v0_1133c = phi i32 [ %arg1, %dec_label_pc_11314 ], [ -1, %dec_label_pc_1132c ]
  store i32 %v2_11340, i32* @r7, align 4
  ret i32 %v0_1133c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1133c, { 1, 0 }
}

define i32 @function_11348(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11348:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11348 = load i32, i32* @r7, align 4
  store i32 %v3_11348, i32* %stack_var_-8, align 4
  %v0_11354 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_11354, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11354, -4095
  br i1 %tmp, label %dec_label_pc_11374, label %dec_label_pc_11364

dec_label_pc_11364:                               ; preds = %dec_label_pc_11348
  %v0_11364 = call i32 @function_11970()
  %v0_11368 = load i32, i32* %r7.global-to-local, align 4
  %v1_11368 = sub i32 0, %v0_11368
  store i32 %v1_11368, i32* @r3, align 4
  %v2_1136c = inttoptr i32 %v0_11364 to i32*
  store i32 %v1_11368, i32* %v2_1136c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_11374.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11374

dec_label_pc_11374:                               ; preds = %dec_label_pc_11348, %dec_label_pc_11364
  %v1_11378 = phi i32 [ %v0_11354, %dec_label_pc_11348 ], [ -1, %dec_label_pc_11364 ]
  %v2_11374 = phi i32 [ %v3_11348, %dec_label_pc_11348 ], [ %v2_11374.pre, %dec_label_pc_11364 ]
  store i32 %v2_11374, i32* @r7, align 4
  ret i32 %v1_11378

; uselistorder directives
  uselistorder i32 %v0_11354, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11374, { 1, 0 }
}

define i32 @function_1137c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1137c:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-4 = alloca i32, align 4
  %v9_1137c = load i32, i32* @r3, align 4
  store i32 %v9_1137c, i32* %stack_var_-4, align 4
  %v2_11394 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_11394, i32* @r3, align 4
  %v0_113b8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_113b8, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_113b8, -4095
  br i1 %tmp, label %dec_label_pc_113d8, label %dec_label_pc_113c8

dec_label_pc_113c8:                               ; preds = %dec_label_pc_1137c
  %v0_113c8 = call i32 @function_11970()
  %v0_113cc = load i32, i32* %r7.global-to-local, align 4
  %v1_113cc = sub i32 0, %v0_113cc
  store i32 %v1_113cc, i32* @r3, align 4
  %v2_113d0 = inttoptr i32 %v0_113c8 to i32*
  store i32 %v1_113cc, i32* %v2_113d0, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_113d8

dec_label_pc_113d8:                               ; preds = %dec_label_pc_1137c, %dec_label_pc_113c8
  %v1_113e4 = phi i32 [ %v0_113b8, %dec_label_pc_1137c ], [ -1, %dec_label_pc_113c8 ]
  ret i32 %v1_113e4

; uselistorder directives
  uselistorder i32 %v0_113b8, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_113d8, { 1, 0 }
}

define i32 @function_113e8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_113e8:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_11424 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_11424, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11424, -4095
  br i1 %tmp, label %dec_label_pc_11444, label %dec_label_pc_11434

dec_label_pc_11434:                               ; preds = %dec_label_pc_113e8
  %v0_11434 = call i32 @function_11970()
  %v0_11438 = load i32, i32* %r7.global-to-local, align 4
  %v1_11438 = sub i32 0, %v0_11438
  %v2_1143c = inttoptr i32 %v0_11434 to i32*
  store i32 %v1_11438, i32* %v2_1143c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11444

dec_label_pc_11444:                               ; preds = %dec_label_pc_113e8, %dec_label_pc_11434
  %v1_11450 = phi i32 [ %v0_11424, %dec_label_pc_113e8 ], [ -1, %dec_label_pc_11434 ]
  ret i32 %v1_11450

; uselistorder directives
  uselistorder i32 %v0_11424, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11444, { 1, 0 }
}

define i32 @function_11454(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11454:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11454 = load i32, i32* @r7, align 4
  store i32 %v3_11454, i32* %stack_var_-8, align 4
  %v0_11460 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_11460, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11460, -4095
  br i1 %tmp, label %dec_label_pc_11480, label %dec_label_pc_11470

dec_label_pc_11470:                               ; preds = %dec_label_pc_11454
  %v0_11470 = call i32 @function_11970()
  %v0_11474 = load i32, i32* %r7.global-to-local, align 4
  %v1_11474 = sub i32 0, %v0_11474
  %v2_11478 = inttoptr i32 %v0_11470 to i32*
  store i32 %v1_11474, i32* %v2_11478, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_11480.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11480

dec_label_pc_11480:                               ; preds = %dec_label_pc_11454, %dec_label_pc_11470
  %v1_11484 = phi i32 [ %v0_11460, %dec_label_pc_11454 ], [ -1, %dec_label_pc_11470 ]
  %v2_11480 = phi i32 [ %v3_11454, %dec_label_pc_11454 ], [ %v2_11480.pre, %dec_label_pc_11470 ]
  store i32 %v2_11480, i32* @r7, align 4
  ret i32 %v1_11484

; uselistorder directives
  uselistorder i32 %v0_11460, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11480, { 1, 0 }
}

define i32 @function_11488(i32 %arg1) local_unnamed_addr {
dec_label_pc_11488:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11488 = load i32, i32* @r7, align 4
  store i32 %v3_11488, i32* %stack_var_-8, align 4
  %v0_11494 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_11494, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11494, -4095
  br i1 %tmp, label %dec_label_pc_114b4, label %dec_label_pc_114a4

dec_label_pc_114a4:                               ; preds = %dec_label_pc_11488
  %v0_114a4 = call i32 @function_11970()
  %v0_114a8 = load i32, i32* %r7.global-to-local, align 4
  %v1_114a8 = sub i32 0, %v0_114a8
  %v2_114ac = inttoptr i32 %v0_114a4 to i32*
  store i32 %v1_114a8, i32* %v2_114ac, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_114b4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_114b4

dec_label_pc_114b4:                               ; preds = %dec_label_pc_11488, %dec_label_pc_114a4
  %v1_114b8 = phi i32 [ %v0_11494, %dec_label_pc_11488 ], [ -1, %dec_label_pc_114a4 ]
  %v2_114b4 = phi i32 [ %v3_11488, %dec_label_pc_11488 ], [ %v2_114b4.pre, %dec_label_pc_114a4 ]
  store i32 %v2_114b4, i32* @r7, align 4
  ret i32 %v1_114b8

; uselistorder directives
  uselistorder i32 %v0_11494, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_114b4, { 1, 0 }
}

define i32 @function_114bc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_114bc:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v9_114bc = load i32, i32* @r3, align 4
  store i32 %v9_114bc, i32* %stack_var_-4, align 4
  %v2_114c8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_114c8, i32* @r3, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_114fc, label %dec_label_pc_114ec

dec_label_pc_114ec:                               ; preds = %dec_label_pc_114bc
  %v0_114ec = call i32 @function_11970()
  %v0_114f0 = load i32, i32* %r7.global-to-local, align 4
  %v1_114f0 = sub i32 0, %v0_114f0
  store i32 %v1_114f0, i32* @r3, align 4
  %v2_114f4 = inttoptr i32 %v0_114ec to i32*
  store i32 %v1_114f0, i32* %v2_114f4, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_114fc

dec_label_pc_114fc:                               ; preds = %dec_label_pc_114bc, %dec_label_pc_114ec
  %v0_114fc = phi i32 [ %arg1, %dec_label_pc_114bc ], [ -1, %dec_label_pc_114ec ]
  ret i32 %v0_114fc

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_114fc, { 1, 0 }
}

define i32 @function_11510(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11510:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11510 = load i32, i32* @r7, align 4
  store i32 %v3_11510, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1153c, label %dec_label_pc_1152c

dec_label_pc_1152c:                               ; preds = %dec_label_pc_11510
  %v0_1152c = call i32 @function_11970()
  %v0_11530 = load i32, i32* %r7.global-to-local, align 4
  %v1_11530 = sub i32 0, %v0_11530
  %v2_11534 = inttoptr i32 %v0_1152c to i32*
  store i32 %v1_11530, i32* %v2_11534, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_11540.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1153c

dec_label_pc_1153c:                               ; preds = %dec_label_pc_11510, %dec_label_pc_1152c
  %v2_11540 = phi i32 [ %v3_11510, %dec_label_pc_11510 ], [ %v2_11540.pre, %dec_label_pc_1152c ]
  %v0_1153c = phi i32 [ %arg1, %dec_label_pc_11510 ], [ -1, %dec_label_pc_1152c ]
  store i32 %v2_11540, i32* @r7, align 4
  ret i32 %v0_1153c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1153c, { 1, 0 }
}

define i32 @function_11548(i32 %arg1) local_unnamed_addr {
dec_label_pc_11548:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11548 = load i32, i32* @r7, align 4
  store i32 %v3_11548, i32* %stack_var_-8, align 4
  %v0_11554 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_11554, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11554, -4095
  br i1 %tmp, label %dec_label_pc_11574, label %dec_label_pc_11564

dec_label_pc_11564:                               ; preds = %dec_label_pc_11548
  %v0_11564 = call i32 @function_11970()
  %v0_11568 = load i32, i32* %r7.global-to-local, align 4
  %v1_11568 = sub i32 0, %v0_11568
  store i32 %v1_11568, i32* @r3, align 4
  %v2_1156c = inttoptr i32 %v0_11564 to i32*
  store i32 %v1_11568, i32* %v2_1156c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_11574.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11574

dec_label_pc_11574:                               ; preds = %dec_label_pc_11548, %dec_label_pc_11564
  %v1_11578 = phi i32 [ %v0_11554, %dec_label_pc_11548 ], [ -1, %dec_label_pc_11564 ]
  %v2_11574 = phi i32 [ %v3_11548, %dec_label_pc_11548 ], [ %v2_11574.pre, %dec_label_pc_11564 ]
  store i32 %v2_11574, i32* @r7, align 4
  ret i32 %v1_11578

; uselistorder directives
  uselistorder i32 %v0_11554, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11574, { 1, 0 }
}

define i32 @function_1157c(i32* %arg1) local_unnamed_addr {
dec_label_pc_1157c:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_1157c = load i32, i32* @r4, align 4
  store i32 %v3_1157c, i32* %stack_var_-24, align 4
  %v9_1157c = load i32, i32* @r6, align 4
  %v12_1157c = load i32, i32* @r7, align 4
  %v15_1157c = load i32, i32* @r8, align 4
  %v18_1157c = load i32, i32* @lr, align 4
  %v2_11580 = load i32, i32* %arg1, align 4
  store i32 %v2_11580, i32* %r4.global-to-local, align 4
  %v3_11588 = icmp eq i32 %v2_11580, -1
  store i32 %tmp, i32* @r7, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_dddc.305 to i32), i32 71068), i32* @r6, align 4
  br i1 %v3_11588, label %dec_label_pc_1159c, label %dec_label_pc_115b0

dec_label_pc_1159c:                               ; preds = %dec_label_pc_1157c
  %v0_1159c = call i32 @function_11970()
  store i32 9, i32* %r3.global-to-local, align 4
  %v0_115a4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_115a4, i32* %r2.global-to-local, align 4
  %v2_115a8 = inttoptr i32 %v0_1159c to i32*
  store i32 9, i32* %v2_115a8, align 4
  %v0_11650.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11650

dec_label_pc_115b0:                               ; preds = %dec_label_pc_1157c
  store i32 36, i32* %r3.global-to-local, align 4
  %v1_115b4 = add i32 %tmp, 24
  store i32 %v1_115b4, i32* %r4.global-to-local, align 4
  store i32 %v1_115b4, i32* %r2.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v4_115c8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_dddc.305 to i32), i32 71140) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_115c8)
  store i32 -1, i32* @r8, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_115e0 = load i32, i32* @r6, align 4
  %v2_115e0 = add i32 %v0_115e0, 16
  %v3_115e0 = inttoptr i32 %v2_115e0 to i32*
  %v4_115e0 = load i32, i32* %v3_115e0, align 4
  call void @__pseudo_branch(i32 %v4_115e0)
  %v0_115ec = load i32, i32* @r7, align 4
  %v1_115ec = inttoptr i32 %v0_115ec to i32*
  %v2_115ec = load i32, i32* %v1_115ec, align 4
  store i32 %v2_115ec, i32* @r4, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  %v0_115fc = load i32, i32* @r8, align 4
  store i32 %v0_115fc, i32* %v1_115ec, align 4
  %v0_11600 = load i32, i32* @r6, align 4
  %v1_11600 = load i32, i32* %r3.global-to-local, align 4
  %v2_11600 = add i32 %v1_11600, %v0_11600
  %v3_11600 = inttoptr i32 %v2_11600 to i32*
  %v4_11600 = load i32, i32* %v3_11600, align 4
  store i32 ptrtoint (i32* @global_var_1160c.715 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_11600)
  %v0_1160c = load i32, i32* @r7, align 4
  %v1_1160c = add i32 %v0_1160c, 12
  %v2_1160c = inttoptr i32 %v1_1160c to i32*
  %v3_1160c = load i32, i32* %v2_1160c, align 4
  store i32 %v3_1160c, i32* @r0, align 4
  %v0_11610 = call i32 @function_12fe4()
  %v0_11614 = load i32, i32* @r7, align 4
  store i32 %v0_11614, i32* @r0, align 4
  %v0_11618 = call i32 @function_12fe4()
  %v0_11620 = load i32, i32* @r4, align 4
  %tmp11 = icmp ult i32 %v0_11620, -4095
  br i1 %tmp11, label %dec_label_pc_1164c, label %dec_label_pc_1163c

dec_label_pc_1163c:                               ; preds = %dec_label_pc_115b0
  %v0_1163c = call i32 @function_11970()
  %v0_11640 = load i32, i32* @r4, align 4
  %v1_11640 = sub i32 0, %v0_11640
  store i32 %v1_11640, i32* %r3.global-to-local, align 4
  %v2_11644 = inttoptr i32 %v0_1163c to i32*
  store i32 %v1_11640, i32* %v2_11644, align 4
  %v0_11648 = load i32, i32* @r8, align 4
  br label %dec_label_pc_1164c

dec_label_pc_1164c:                               ; preds = %dec_label_pc_115b0, %dec_label_pc_1163c
  %v0_1164c = phi i32 [ %v0_11620, %dec_label_pc_115b0 ], [ %v0_11648, %dec_label_pc_1163c ]
  store i32 %v0_1164c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11650

dec_label_pc_11650:                               ; preds = %dec_label_pc_1159c, %dec_label_pc_1164c
  %v0_11650 = phi i32 [ %v0_11650.pre, %dec_label_pc_1159c ], [ %v0_1164c, %dec_label_pc_1164c ]
  %v2_11658 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_11658, i32* @r4, align 4
  store i32 %v9_1157c, i32* @r6, align 4
  store i32 %v12_1157c, i32* @r7, align 4
  store i32 %v15_1157c, i32* @r8, align 4
  store i32 %v18_1157c, i32* @lr, align 4
  ret i32 %v0_11650

; uselistorder directives
  uselistorder i32 %v0_11620, { 1, 0 }
  uselistorder label %dec_label_pc_11650, { 1, 0 }
  uselistorder label %dec_label_pc_1164c, { 1, 0 }
}

define i32 @function_11664(i32 %arg1) local_unnamed_addr {
dec_label_pc_11664:
  %v0_11664 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11664, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_11664
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_11664, %bb
  %v10_11670 = phi i32 [ %arg1, %dec_label_pc_11664 ], [ 0, %bb ]
  ret i32 %v10_11670

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_11674(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11674:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v6_11674 = load i32, i32* @r5, align 4
  %v9_11674 = load i32, i32* @r6, align 4
  %v12_11674 = load i32, i32* @r7, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 48, i32* @r0, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_11688 = call i32 @function_11f78()
  %v2_11690 = icmp eq i32 %v0_11688, 0
  store i32 add (i32 ptrtoint (i32* @global_var_dcdc.149 to i32), i32 71324), i32* @r6, align 4
  br i1 %v2_11690, label %bb, label %dec_label_pc_116a0

bb:                                               ; preds = %dec_label_pc_11674
  br label %dec_label_pc_1172c

dec_label_pc_116a0:                               ; preds = %dec_label_pc_11674
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_116a4 = load i32, i32* @r4, align 4
  %v2_116a4 = icmp ugt i32 %v0_116a4, 511
  %v2_116a8 = add i32 %v0_11688, 4
  %v3_116a8 = inttoptr i32 %v2_116a8 to i32*
  store i32 0, i32* %v3_116a8, align 4
  %v0_116ac = load i32, i32* %r3.global-to-local, align 4
  %v2_116ac = add i32 %v0_11688, 16
  %v3_116ac = inttoptr i32 %v2_116ac to i32*
  store i32 %v0_116ac, i32* %v3_116ac, align 4
  %v0_116b0 = load i32, i32* %r3.global-to-local, align 4
  %v2_116b0 = add i32 %v0_11688, 8
  %v3_116b0 = inttoptr i32 %v2_116b0 to i32*
  store i32 %v0_116b0, i32* %v3_116b0, align 4
  br i1 %v2_116a4, label %.thread, label %bb16

.thread:                                          ; preds = %dec_label_pc_116a0
  %v0_116b82 = load i32, i32* @r4, align 4
  %v2_116b83 = add i32 %v0_11688, 20
  %v3_116b84 = inttoptr i32 %v2_116b83 to i32*
  store i32 %v0_116b82, i32* %v3_116b84, align 4
  br label %bb17

bb16:                                             ; preds = %dec_label_pc_116a0
  %v1_116b4 = load i32, i32* %r3.global-to-local, align 4
  %v2_116b4 = add i32 %v1_116b4, 512
  store i32 %v2_116b4, i32* %r3.global-to-local, align 4
  %v0_116b8 = load i32, i32* @r4, align 4
  %v2_116b8 = add i32 %v0_11688, 20
  %v3_116b8 = inttoptr i32 %v2_116b8 to i32*
  store i32 %v0_116b8, i32* %v3_116b8, align 4
  %v1_116bc = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_116bc, i32* %v3_116b8, align 4
  br label %bb17

bb17:                                             ; preds = %.thread, %bb16
  store i32 %v0_11688, i32* @r5, align 4
  %v0_116c4 = load i32, i32* @r7, align 4
  %v2_116c4 = inttoptr i32 %v0_11688 to i32*
  store i32 %v0_116c4, i32* %v2_116c4, align 4
  %v0_116c8 = load i32, i32* @r5, align 4
  %v1_116c8 = add i32 %v0_116c8, 20
  %v2_116c8 = inttoptr i32 %v1_116c8 to i32*
  %v3_116c8 = load i32, i32* %v2_116c8, align 4
  store i32 %v3_116c8, i32* %r1.global-to-local, align 4
  %v2_116d0 = call i32 @function_12898(i32 1, i32 %v3_116c8)
  %v2_116d4 = icmp eq i32 %v2_116d0, 0
  store i32 %v2_116d0, i32* @r4, align 4
  %v1_116dc = load i32, i32* @r5, align 4
  %v2_116dc = add i32 %v1_116dc, 12
  %v3_116dc = inttoptr i32 %v2_116dc to i32*
  store i32 %v2_116d0, i32* %v3_116dc, align 4
  br i1 %v2_116d4, label %dec_label_pc_116e4, label %dec_label_pc_116f4

dec_label_pc_116e4:                               ; preds = %bb17
  %v0_116e4 = load i32, i32* @r5, align 4
  store i32 %v0_116e4, i32* @r0, align 4
  %v0_116e8 = call i32 @function_12fe4()
  %v0_116ec = load i32, i32* @r4, align 4
  br label %dec_label_pc_1172c

dec_label_pc_116f4:                               ; preds = %bb17
  store i32 0, i32* %stack_var_-32, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_1171c = load i32, i32* @r5, align 4
  %v1_1171c = add i32 %v0_1171c, 24
  %v1_11720 = inttoptr i32 %v1_1171c to i32*
  store i32 0, i32* %v1_11720, align 4
  %v3_11720 = add i32 %v0_1171c, 28
  %v4_11720 = inttoptr i32 %v3_11720 to i32*
  %v5_11720 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_11720, i32* %v4_11720, align 4
  %v6_11720 = add i32 %v0_1171c, 32
  %v7_11720 = inttoptr i32 %v6_11720 to i32*
  %v8_11720 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_11720, i32* %v7_11720, align 4
  %v9_11720 = add i32 %v0_1171c, 36
  %v10_11720 = inttoptr i32 %v9_11720 to i32*
  %v11_11720 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_11720, i32* %v10_11720, align 4
  %v12_11720 = add i32 %v0_1171c, 40
  %v2_11724 = load i32, i32* %stack_var_-32, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_11728 = inttoptr i32 %v12_11720 to i32*
  store i32 %v2_11724, i32* %v1_11728, align 4
  %v3_11728 = add i32 %v0_1171c, 44
  %v4_11728 = inttoptr i32 %v3_11728 to i32*
  %v5_11728 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_11728, i32* %v4_11728, align 4
  %v0_1172c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1172c

dec_label_pc_1172c:                               ; preds = %bb, %dec_label_pc_116e4, %dec_label_pc_116f4
  %v0_1172c = phi i32 [ 0, %bb ], [ %v0_116ec, %dec_label_pc_116e4 ], [ %v0_1172c.pre, %dec_label_pc_116f4 ]
  store i32 %v6_11674, i32* @r5, align 4
  store i32 %v9_11674, i32* @r6, align 4
  store i32 %v12_11674, i32* @r7, align 4
  ret i32 %v0_1172c

; uselistorder directives
  uselistorder i32 %v2_116d0, { 1, 0, 2 }
  uselistorder i32 %v0_11688, { 2, 1, 5, 0, 6, 3, 4, 7 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 512, { 4, 3, 0, 2, 1, 5, 6, 7, 8, 9 }
  uselistorder label %dec_label_pc_1172c, { 2, 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @function_11744(i32 %arg1) local_unnamed_addr {
dec_label_pc_11744:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-104 = alloca i32, align 4
  %v6_11744 = load i32, i32* @r7, align 4
  %v2_1174c = ptrtoint i32* %stack_var_-104 to i32
  store i32 %arg1, i32* @r7, align 4
  %tmp7 = icmp ult i32 %arg1, -4095
  br i1 %tmp7, label %dec_label_pc_11774, label %dec_label_pc_11764

dec_label_pc_11764:                               ; preds = %dec_label_pc_11744
  %v0_11764 = call i32 @function_11970()
  %v0_11768 = load i32, i32* @r7, align 4
  %v1_11768 = sub i32 0, %v0_11768
  %v2_1176c = inttoptr i32 %v0_11764 to i32*
  store i32 %v1_11768, i32* %v2_1176c, align 4
  br label %dec_label_pc_11798

dec_label_pc_11774:                               ; preds = %dec_label_pc_11744
  %v1_11774 = icmp slt i32 %arg1, 0
  br i1 %v1_11774, label %dec_label_pc_11798, label %dec_label_pc_1177c

dec_label_pc_1177c:                               ; preds = %dec_label_pc_11774
  store i32 %v2_1174c, i32* @r1, align 4
  %v0_11780 = call i32 @function_14298()
  %v1_11784 = icmp slt i32 %v0_11780, 0
  br i1 %v1_11784, label %dec_label_pc_1178c, label %dec_label_pc_117a0

dec_label_pc_1178c:                               ; preds = %dec_label_pc_1177c
  br label %dec_label_pc_11798

dec_label_pc_11798:                               ; preds = %dec_label_pc_1178c, %dec_label_pc_11774, %dec_label_pc_11764
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_117dc

dec_label_pc_117a0:                               ; preds = %dec_label_pc_1177c
  %v0_117a8 = load i32, i32* @r7, align 4
  %v3_117ac = call i32 @function_113e8(i32 %v0_117a8, i32 2, i32 1)
  %v0_117b0 = load i32, i32* @r7, align 4
  %v2_117b8 = call i32 @function_11674(i32 %v0_117b0, i32 %tmp)
  store i32 %v2_117b8, i32* %r4.global-to-local, align 4
  %v2_117bc = icmp eq i32 %v2_117b8, 0
  br i1 %v2_117bc, label %dec_label_pc_117c4, label %dec_label_pc_117dc

dec_label_pc_117c4:                               ; preds = %dec_label_pc_117a0
  %v0_117d0 = call i32 @function_11970()
  %v2_117d8 = inttoptr i32 %v0_117d0 to i32*
  store i32 12, i32* %v2_117d8, align 4
  %v0_117dc.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_117dc

dec_label_pc_117dc:                               ; preds = %dec_label_pc_117a0, %dec_label_pc_11798, %dec_label_pc_117c4
  %v0_117dc = phi i32 [ %v2_117b8, %dec_label_pc_117a0 ], [ 0, %dec_label_pc_11798 ], [ %v0_117dc.pre, %dec_label_pc_117c4 ]
  store i32 %v6_11744, i32* @r7, align 4
  ret i32 %v0_117dc

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_117dc, { 2, 0, 1 }
}

define i32 @function_117ec(i32 %arg1) local_unnamed_addr {
dec_label_pc_117ec:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-104 = alloca i32, align 4
  %v0_117ec = load i1, i1* @cpsr_z, align 1
  br i1 %v0_117ec, label %bb, label %dec_label_pc_117ec._crit_edge

dec_label_pc_117ec._crit_edge:                    ; preds = %dec_label_pc_117ec
  br label %bb11

bb:                                               ; preds = %dec_label_pc_117ec
  br label %bb11

bb11:                                             ; preds = %dec_label_pc_117ec._crit_edge, %bb
  %v2_117f4 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_117f4, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_11800 = call i32 @function_14298()
  store i32 %v0_11800, i32* @r5, align 4
  %v2_11804 = icmp eq i32 %v0_11800, 0
  br i1 %v2_11804, label %dec_label_pc_1180c, label %dec_label_pc_11874

dec_label_pc_1180c:                               ; preds = %bb11
  %v1_11810 = and i32 %tmp5, 61440
  store i32 %v1_11810, i32* @r3, align 4
  %v7_11814 = icmp eq i32 %v1_11810, 16384
  br i1 %v7_11814, label %dec_label_pc_1182c, label %dec_label_pc_1181c

dec_label_pc_1181c:                               ; preds = %dec_label_pc_1180c
  %v0_1181c = call i32 @function_11970()
  br label %dec_label_pc_11858

dec_label_pc_1182c:                               ; preds = %dec_label_pc_1180c
  %v0_1182c = load i32, i32* @r4, align 4
  %v2_11834 = call i32 @function_1137c(i32 %v0_1182c, i32 3)
  %v7_11838 = icmp eq i32 %v2_11834, -1
  br i1 %v7_11838, label %dec_label_pc_11874, label %dec_label_pc_11840

dec_label_pc_11840:                               ; preds = %dec_label_pc_1182c
  %v1_11840 = urem i32 %v2_11834, 4
  %v7_11844 = icmp eq i32 %v1_11840, 1
  br i1 %v7_11844, label %dec_label_pc_1184c, label %dec_label_pc_11860

dec_label_pc_1184c:                               ; preds = %dec_label_pc_11840
  %v0_1184c = call i32 @function_11970()
  br label %dec_label_pc_11858

dec_label_pc_11858:                               ; preds = %dec_label_pc_1181c, %dec_label_pc_1184c
  %storemerge2 = phi i32 [ %v0_1181c, %dec_label_pc_1181c ], [ %v0_1184c, %dec_label_pc_1184c ]
  %storemerge = phi i32 [ 20, %dec_label_pc_1181c ], [ 22, %dec_label_pc_1184c ]
  %storemerge1 = load i32, i32* @r5, align 4
  store i32 %storemerge1, i32* %r2.global-to-local, align 4
  %v2_11858 = inttoptr i32 %storemerge2 to i32*
  store i32 %storemerge, i32* %v2_11858, align 4
  %v0_11878.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11878

dec_label_pc_11860:                               ; preds = %dec_label_pc_11840
  %v0_11860 = load i32, i32* @r4, align 4
  %v2_11868 = call i32 @function_11674(i32 %v0_11860, i32 %tmp)
  store i32 %v2_11868, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11878

dec_label_pc_11874:                               ; preds = %bb11, %dec_label_pc_1182c
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11878

dec_label_pc_11878:                               ; preds = %dec_label_pc_11860, %dec_label_pc_11858, %dec_label_pc_11874
  %v0_11878 = phi i32 [ %v2_11868, %dec_label_pc_11860 ], [ %v0_11878.pre, %dec_label_pc_11858 ], [ 0, %dec_label_pc_11874 ]
  ret i32 %v0_11878

; uselistorder directives
  uselistorder i32 %v2_11834, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_11674, { 1, 0 }
  uselistorder i32 ()* @function_14298, { 1, 0 }
  uselistorder label %dec_label_pc_11878, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11874, { 1, 0 }
  uselistorder label %dec_label_pc_11858, { 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @function_11888(i32* %arg1) local_unnamed_addr {
dec_label_pc_11888:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_11888 = load i32, i32* @r4, align 4
  %v6_11888 = load i32, i32* @r5, align 4
  %v9_11888 = load i32, i32* @r6, align 4
  %v12_11888 = load i32, i32* @r7, align 4
  %v15_11888 = load i32, i32* @lr, align 4
  store i32 127864, i32* @r6, align 4
  %v1_1189c = add i32 %tmp, 24
  store i32 %v1_1189c, i32* @r4, align 4
  %v4_118a0 = load i32, i32* inttoptr (i32 127900 to i32*), align 4
  store i32 %v4_118a0, i32* %r1.global-to-local, align 4
  store i32 %v1_1189c, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  %v4_118b4 = load i32, i32* inttoptr (i32 127936 to i32*), align 64
  call void @__pseudo_branch(i32 %v4_118b4)
  %v0_118c8 = load i32, i32* @r6, align 4
  %v2_118c8 = add i32 %v0_118c8, 16
  %v3_118c8 = inttoptr i32 %v2_118c8 to i32*
  %v4_118c8 = load i32, i32* %v3_118c8, align 4
  store i32 %v4_118c8, i32* @ip, align 4
  store i32 71892, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_118c8)
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_118d8

dec_label_pc_118d8:                               ; preds = %dec_label_pc_11908, %dec_label_pc_11888
  %v0_118d8 = load i32, i32* @r5, align 4
  %v1_118d8 = add i32 %v0_118d8, 4
  %v2_118d8 = inttoptr i32 %v1_118d8 to i32*
  %v3_118d8 = load i32, i32* %v2_118d8, align 4
  store i32 %v3_118d8, i32* %r2.global-to-local, align 4
  %v4_118d8 = add i32 %v0_118d8, 8
  %v5_118d8 = inttoptr i32 %v4_118d8 to i32*
  %v6_118d8 = load i32, i32* %v5_118d8, align 4
  %tmp10 = icmp ugt i32 %v6_118d8, %v3_118d8
  br i1 %tmp10, label %dec_label_pc_11908, label %dec_label_pc_118e4

dec_label_pc_118e4:                               ; preds = %dec_label_pc_118d8
  %v1_118e4 = inttoptr i32 %v0_118d8 to i32*
  %v2_118e4 = load i32, i32* %v1_118e4, align 4
  %v1_118e8 = add i32 %v0_118d8, 12
  %v2_118e8 = inttoptr i32 %v1_118e8 to i32*
  %v3_118e8 = load i32, i32* %v2_118e8, align 4
  store i32 %v3_118e8, i32* %r1.global-to-local, align 4
  %v1_118ec = add i32 %v0_118d8, 20
  %v2_118ec = inttoptr i32 %v1_118ec to i32*
  %v3_118ec = load i32, i32* %v2_118ec, align 4
  store i32 %v3_118ec, i32* %r2.global-to-local, align 4
  %v4_118f0 = call i32 @function_14204(i32 %v2_118e4, i32 %v3_118e8, i32 %v3_118ec, i32 %v6_118d8)
  %tmp9 = icmp slt i32 %v4_118f0, 1
  br i1 %tmp9, label %.thread, label %dec_label_pc_11900

.thread:                                          ; preds = %dec_label_pc_118e4
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_11934

dec_label_pc_11900:                               ; preds = %dec_label_pc_118e4
  %v1_11900 = load i32, i32* @r5, align 4
  %v2_11900 = add i32 %v1_11900, 8
  %v3_11900 = inttoptr i32 %v2_11900 to i32*
  store i32 %v4_118f0, i32* %v3_11900, align 4
  %v0_11904 = load i32, i32* @r7, align 4
  %v1_11904 = load i32, i32* @r5, align 4
  %v2_11904 = add i32 %v1_11904, 4
  %v3_11904 = inttoptr i32 %v2_11904 to i32*
  store i32 %v0_11904, i32* %v3_11904, align 4
  %v0_11908.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_11908

dec_label_pc_11908:                               ; preds = %dec_label_pc_118d8, %dec_label_pc_11900
  %v1_11918 = phi i32 [ %v0_118d8, %dec_label_pc_118d8 ], [ %v0_11908.pre, %dec_label_pc_11900 ]
  %v1_11908 = add i32 %v1_11918, 4
  %v2_11908 = inttoptr i32 %v1_11908 to i32*
  %v3_11908 = load i32, i32* %v2_11908, align 4
  store i32 %v3_11908, i32* %r2.global-to-local, align 4
  %v1_1190c = add i32 %v1_11918, 12
  %v2_1190c = inttoptr i32 %v1_1190c to i32*
  %v3_1190c = load i32, i32* %v2_1190c, align 4
  store i32 %v3_1190c, i32* %r1.global-to-local, align 4
  %v2_11910 = add i32 %v3_1190c, %v3_11908
  store i32 %v2_11910, i32* @r4, align 4
  %v1_11914 = add i32 %v2_11910, 4
  %v2_11914 = inttoptr i32 %v1_11914 to i32*
  %v3_11914 = load i32, i32* %v2_11914, align 4
  %v2_11918 = add i32 %v1_11918, 16
  %v3_11918 = inttoptr i32 %v2_11918 to i32*
  store i32 %v3_11914, i32* %v3_11918, align 4
  %v0_1191c = load i32, i32* @r4, align 4
  %v1_1191c = add i32 %v0_1191c, 8
  %v2_1191c = inttoptr i32 %v1_1191c to i16*
  %v3_1191c = load i16, i16* %v2_1191c, align 2
  %v4_1191c = zext i16 %v3_1191c to i32
  %v0_11920 = load i32, i32* %r2.global-to-local, align 4
  %v1_11920 = load i32, i32* %r1.global-to-local, align 4
  %v2_11920 = add i32 %v1_11920, %v0_11920
  %v3_11920 = inttoptr i32 %v2_11920 to i32*
  %v4_11920 = load i32, i32* %v3_11920, align 4
  store i32 %v4_11920, i32* %r1.global-to-local, align 4
  %v2_11924 = add i32 %v0_11920, %v4_1191c
  %v2_11928 = icmp eq i32 %v4_11920, 0
  %v1_1192c = load i32, i32* @r5, align 4
  %v2_1192c = add i32 %v1_1192c, 4
  %v3_1192c = inttoptr i32 %v2_1192c to i32*
  store i32 %v2_11924, i32* %v3_1192c, align 4
  br i1 %v2_11928, label %dec_label_pc_118d8, label %dec_label_pc_11934

dec_label_pc_11934:                               ; preds = %dec_label_pc_11908, %.thread
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_11940 = load i32, i32* @r6, align 4
  %v2_11940 = add i32 %v0_11940, 24
  %v3_11940 = inttoptr i32 %v2_11940 to i32*
  %v4_11940 = load i32, i32* %v3_11940, align 4
  call void @__pseudo_branch(i32 %v4_11940)
  %v0_1194c = load i32, i32* @r4, align 4
  store i32 %v3_11888, i32* @r4, align 4
  store i32 %v6_11888, i32* @r5, align 4
  store i32 %v9_11888, i32* @r6, align 4
  store i32 %v12_11888, i32* @r7, align 4
  store i32 %v15_11888, i32* @lr, align 4
  ret i32 %v0_1194c

; uselistorder directives
  uselistorder i32 %v1_11918, { 0, 2, 1 }
  uselistorder i32 %v6_118d8, { 1, 0 }
  uselistorder i32 %v0_118d8, { 0, 1, 3, 2, 4, 5 }
  uselistorder label %dec_label_pc_11908, { 1, 0 }
}

define i32 @function_11960(i32 %arg1) local_unnamed_addr {
dec_label_pc_11960:
  %v0_11960 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11960, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_11960
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_11960, %bb
  %v10_1196c = phi i32 [ %arg1, %dec_label_pc_11960 ], [ 0, %bb ]
  ret i32 %v10_1196c

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_11970() local_unnamed_addr {
dec_label_pc_11970:
  store i32 127864, i32* @r3, align 4
  ret i32 ptrtoint (i32* @global_var_1f630.732 to i32)
}

define i32 @function_1198c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1198c:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %v2_11990 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_11990, i32* @r0, align 4
  %v1_11998 = call i32 @function_14674(i32 %v2_11990)
  %v2_1199c = load i32, i32* %stack_var_-24, align 4
  %v2_119a0 = add i32 %v2_1199c, %tmp
  %v2_119a8 = mul i32 %v2_119a0, 10000
  %v1_119ac = and i32 %v2_119a8, 2147483632
  ret i32 %v1_119ac

; uselistorder directives
  uselistorder i32 %v2_11990, { 1, 0 }
}

define i32 @function_119c0(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_119c0:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v0_119c4 = load i32, i32* @r2, align 4
  %v8_119c4 = icmp eq i32 %v0_119c4, 8
  store i1 %v8_119c4, i1* %cpsr_z.global-to-local, align 1
  %v5_119c8 = icmp slt i32 %v0_119c4, 8
  br i1 %v5_119c8, label %dec_label_pc_11a28, label %dec_label_pc_119cc

dec_label_pc_119cc:                               ; preds = %dec_label_pc_119c0
  %v4_119cc = mul i32 %arg2, 256
  %v5_119cc = or i32 %v4_119cc, %arg2
  %v4_119d0 = mul i32 %v5_119cc, 65536
  %v5_119d0 = or i32 %v4_119d0, %v5_119cc
  store i32 %v5_119d0, i32* %r1.global-to-local, align 4
  %v1_119d457 = urem i32 %tmp, 4
  %v2_119d458 = icmp eq i32 %v1_119d457, 0
  store i1 %v2_119d458, i1* %cpsr_z.global-to-local, align 1
  %extract.t83 = trunc i32 %arg2 to i8
  br i1 %v2_119d458, label %dec_label_pc_119e4, label %bb

bb:                                               ; preds = %dec_label_pc_119cc, %.thread.bb_crit_edge
  %arg2.sink.off0 = phi i8 [ %extract.t82, %.thread.bb_crit_edge ], [ %extract.t83, %dec_label_pc_119cc ]
  %v3_119d859 = phi i32 [ %v6_119d8, %.thread.bb_crit_edge ], [ %tmp, %dec_label_pc_119cc ]
  %v4_119d8 = inttoptr i32 %v3_119d859 to i8*
  store i8 %arg2.sink.off0, i8* %v4_119d8, align 1
  %v5_119d8 = load i32, i32* @r3, align 4
  %v6_119d8 = add i32 %v5_119d8, 1
  store i32 %v6_119d8, i32* @r3, align 4
  %v0_119dc.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_119e8.pr.pre = load i32, i32* @r2, align 4
  br i1 %v0_119dc.pr, label %dec_label_pc_119e4, label %.thread

.thread:                                          ; preds = %bb
  %v2_119dc = add i32 %v0_119e8.pr.pre, -1
  store i32 %v2_119dc, i32* @r2, align 4
  %v1_119d4 = urem i32 %v6_119d8, 4
  %v2_119d4 = icmp eq i32 %v1_119d4, 0
  store i1 %v2_119d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_119d4, label %dec_label_pc_119e4, label %.thread.bb_crit_edge

.thread.bb_crit_edge:                             ; preds = %.thread
  %v1_119d8.pre = load i32, i32* %r1.global-to-local, align 4
  %extract.t82 = trunc i32 %v1_119d8.pre to i8
  br label %bb

dec_label_pc_119e4:                               ; preds = %.thread, %bb, %dec_label_pc_119cc
  %v0_119f028 = phi i32 [ %tmp, %dec_label_pc_119cc ], [ %v6_119d8, %bb ], [ %v6_119d8, %.thread ]
  %v0_119e8.pr = phi i32 [ %v0_119c4, %dec_label_pc_119cc ], [ %v0_119e8.pr.pre, %bb ], [ %v2_119dc, %.thread ]
  %v0_119e4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_119e4, i32* @ip, align 4
  %v8_119e810 = icmp eq i32 %v0_119e8.pr, 8
  store i1 %v8_119e810, i1* %cpsr_z.global-to-local, align 1
  %v5_119ec11 = icmp slt i32 %v0_119e8.pr, 8
  br i1 %v5_119ec11, label %dec_label_pc_11a28, label %dec_label_pc_119f0.preheader

dec_label_pc_119f0.preheader:                     ; preds = %dec_label_pc_119e4
  %v1_119f046 = inttoptr i32 %v0_119f028 to i32*
  store i32 %v0_119e4, i32* %v1_119f046, align 4
  %v3_119f047 = add i32 %v0_119f028, 4
  %v4_119f048 = inttoptr i32 %v3_119f047 to i32*
  %v5_119f049 = load i32, i32* @ip, align 4
  store i32 %v5_119f049, i32* %v4_119f048, align 4
  %v6_119f050 = add i32 %v0_119f028, 8
  store i32 %v6_119f050, i32* @r3, align 4
  %v0_119f451 = load i32, i32* @r2, align 4
  %v1_119f452 = add i32 %v0_119f451, -8
  store i32 %v1_119f452, i32* @r2, align 4
  %v5_119fc53 = icmp slt i32 %v1_119f452, 8
  br i1 %v5_119fc53, label %dec_label_pc_119f0.dec_label_pc_11a28.loopexit_crit_edge, label %dec_label_pc_11a00

dec_label_pc_11a00:                               ; preds = %dec_label_pc_119f0.preheader, %dec_label_pc_119e8.dec_label_pc_119f0_crit_edge
  %v6_119f055 = phi i32 [ %v6_119f0, %dec_label_pc_119e8.dec_label_pc_119f0_crit_edge ], [ %v6_119f050, %dec_label_pc_119f0.preheader ]
  %v0_119f054 = phi i32 [ %v12_11a1c, %dec_label_pc_119e8.dec_label_pc_119f0_crit_edge ], [ %v0_119f028, %dec_label_pc_119f0.preheader ]
  %v1_11a00 = inttoptr i32 %v6_119f055 to i32*
  %v2_11a00 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_11a00, i32* %v1_11a00, align 4
  %v3_11a00 = add i32 %v0_119f054, 12
  %v4_11a00 = inttoptr i32 %v3_11a00 to i32*
  %v5_11a00 = load i32, i32* @ip, align 4
  store i32 %v5_11a00, i32* %v4_11a00, align 4
  %v6_11a00 = add i32 %v0_119f054, 16
  store i32 %v6_11a00, i32* @r3, align 4
  %v0_11a04 = load i32, i32* @r2, align 4
  %v1_11a04 = add i32 %v0_11a04, -8
  store i32 %v1_11a04, i32* @r2, align 4
  %v5_11a0c = icmp slt i32 %v1_11a04, 8
  br i1 %v5_11a0c, label %dec_label_pc_11a00.dec_label_pc_11a28.loopexit_crit_edge, label %dec_label_pc_11a10

dec_label_pc_11a10:                               ; preds = %dec_label_pc_11a00
  %v1_11a10 = inttoptr i32 %v6_11a00 to i32*
  %v2_11a10 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_11a10, i32* %v1_11a10, align 4
  %v3_11a10 = add i32 %v0_119f054, 20
  %v4_11a10 = inttoptr i32 %v3_11a10 to i32*
  %v5_11a10 = load i32, i32* @ip, align 4
  store i32 %v5_11a10, i32* %v4_11a10, align 4
  %v6_11a10 = add i32 %v0_119f054, 24
  store i32 %v6_11a10, i32* @r3, align 4
  %v0_11a14 = load i32, i32* @r2, align 4
  %v1_11a14 = add i32 %v0_11a14, -8
  store i32 %v1_11a14, i32* @r2, align 4
  %v5_11a1c = icmp slt i32 %v1_11a14, 8
  br i1 %v5_11a1c, label %dec_label_pc_11a10.dec_label_pc_11a28.loopexit_crit_edge, label %dec_label_pc_119e8

dec_label_pc_119e8:                               ; preds = %dec_label_pc_11a10
  %v7_11a1c = inttoptr i32 %v6_11a10 to i32*
  %v8_11a1c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v8_11a1c, i32* %v7_11a1c, align 4
  %v9_11a1c = add i32 %v0_119f054, 28
  %v10_11a1c = inttoptr i32 %v9_11a1c to i32*
  %v11_11a1c = load i32, i32* @ip, align 4
  store i32 %v11_11a1c, i32* %v10_11a1c, align 4
  %v12_11a1c = add i32 %v0_119f054, 32
  store i32 %v12_11a1c, i32* @r3, align 4
  %v6_11a20 = load i32, i32* @r2, align 4
  %v7_11a20 = add i32 %v6_11a20, -8
  store i32 %v7_11a20, i32* @r2, align 4
  %v5_119ec = icmp slt i32 %v7_11a20, 8
  br i1 %v5_119ec, label %dec_label_pc_119e8.dec_label_pc_11a28.loopexit_crit_edge, label %dec_label_pc_119e8.dec_label_pc_119f0_crit_edge

dec_label_pc_119e8.dec_label_pc_119f0_crit_edge:  ; preds = %dec_label_pc_119e8
  %v2_119f0.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_119f0 = inttoptr i32 %v12_11a1c to i32*
  store i32 %v2_119f0.pre, i32* %v1_119f0, align 4
  %v3_119f0 = add i32 %v0_119f054, 36
  %v4_119f0 = inttoptr i32 %v3_119f0 to i32*
  %v5_119f0 = load i32, i32* @ip, align 4
  store i32 %v5_119f0, i32* %v4_119f0, align 4
  %v6_119f0 = add i32 %v0_119f054, 40
  store i32 %v6_119f0, i32* @r3, align 4
  %v0_119f4 = load i32, i32* @r2, align 4
  %v1_119f4 = add i32 %v0_119f4, -8
  store i32 %v1_119f4, i32* @r2, align 4
  %v5_119fc = icmp slt i32 %v1_119f4, 8
  br i1 %v5_119fc, label %dec_label_pc_119f0.dec_label_pc_11a28.loopexit_crit_edge, label %dec_label_pc_11a00

dec_label_pc_119e8.dec_label_pc_11a28.loopexit_crit_edge: ; preds = %dec_label_pc_119e8
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11a28

dec_label_pc_119f0.dec_label_pc_11a28.loopexit_crit_edge: ; preds = %dec_label_pc_119e8.dec_label_pc_119f0_crit_edge, %dec_label_pc_119f0.preheader
  %v1_119f4.lcssa = phi i32 [ %v1_119f452, %dec_label_pc_119f0.preheader ], [ %v1_119f4, %dec_label_pc_119e8.dec_label_pc_119f0_crit_edge ]
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11a28

dec_label_pc_11a00.dec_label_pc_11a28.loopexit_crit_edge: ; preds = %dec_label_pc_11a00
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11a28

dec_label_pc_11a10.dec_label_pc_11a28.loopexit_crit_edge: ; preds = %dec_label_pc_11a10
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11a28

dec_label_pc_11a28:                               ; preds = %dec_label_pc_119e4, %dec_label_pc_119e8.dec_label_pc_11a28.loopexit_crit_edge, %dec_label_pc_119f0.dec_label_pc_11a28.loopexit_crit_edge, %dec_label_pc_11a00.dec_label_pc_11a28.loopexit_crit_edge, %dec_label_pc_11a10.dec_label_pc_11a28.loopexit_crit_edge, %dec_label_pc_119c0
  %v0_11a30 = phi i32 [ %v0_119c4, %dec_label_pc_119c0 ], [ %v1_11a14, %dec_label_pc_11a10.dec_label_pc_11a28.loopexit_crit_edge ], [ %v1_11a04, %dec_label_pc_11a00.dec_label_pc_11a28.loopexit_crit_edge ], [ %v1_119f4.lcssa, %dec_label_pc_119f0.dec_label_pc_11a28.loopexit_crit_edge ], [ %v7_11a20, %dec_label_pc_119e8.dec_label_pc_11a28.loopexit_crit_edge ], [ %v0_119e8.pr, %dec_label_pc_119e4 ]
  %v2_11a28 = icmp eq i32 %v0_11a30, 0
  store i1 %v2_11a28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11a28, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_11a28
  ret i32 %tmp

bb33:                                             ; preds = %dec_label_pc_11a28
  %v1_11a30 = sub i32 7, %v0_11a30
  store i32 %v1_11a30, i32* @r2, align 4
  %v3_11a34 = mul i32 %v1_11a30, 4
  %v4_11a34 = add i32 %v3_11a34, ptrtoint (i32* @global_var_11a3c.734 to i32)
  call void @__pseudo_branch(i32 %v4_11a34)
  %v0_11a3c = load i32, i32* %r1.global-to-local, align 4
  %v1_11a3c = trunc i32 %v0_11a3c to i8
  %v2_11a3c = load i32, i32* @r3, align 4
  %v3_11a3c = inttoptr i32 %v2_11a3c to i8*
  store i8 %v1_11a3c, i8* %v3_11a3c, align 1
  %v4_11a3c = load i32, i32* @r3, align 4
  %v5_11a3c = add i32 %v4_11a3c, 1
  store i32 %v5_11a3c, i32* %r3.global-to-local, align 4
  %v0_11a40 = load i32, i32* %r1.global-to-local, align 4
  %v1_11a40 = trunc i32 %v0_11a40 to i8
  %v3_11a40 = inttoptr i32 %v5_11a3c to i8*
  store i8 %v1_11a40, i8* %v3_11a40, align 1
  %v4_11a40 = load i32, i32* %r3.global-to-local, align 4
  %v5_11a40 = add i32 %v4_11a40, 1
  store i32 %v5_11a40, i32* %r3.global-to-local, align 4
  %v0_11a44 = load i32, i32* %r1.global-to-local, align 4
  %v1_11a44 = trunc i32 %v0_11a44 to i8
  %v3_11a44 = inttoptr i32 %v5_11a40 to i8*
  store i8 %v1_11a44, i8* %v3_11a44, align 1
  %v4_11a44 = load i32, i32* %r3.global-to-local, align 4
  %v5_11a44 = add i32 %v4_11a44, 1
  store i32 %v5_11a44, i32* %r3.global-to-local, align 4
  %v0_11a48 = load i32, i32* %r1.global-to-local, align 4
  %v1_11a48 = trunc i32 %v0_11a48 to i8
  %v3_11a48 = inttoptr i32 %v5_11a44 to i8*
  store i8 %v1_11a48, i8* %v3_11a48, align 1
  %v4_11a48 = load i32, i32* %r3.global-to-local, align 4
  %v5_11a48 = add i32 %v4_11a48, 1
  store i32 %v5_11a48, i32* %r3.global-to-local, align 4
  %v0_11a4c = load i32, i32* %r1.global-to-local, align 4
  %v1_11a4c = trunc i32 %v0_11a4c to i8
  %v3_11a4c = inttoptr i32 %v5_11a48 to i8*
  store i8 %v1_11a4c, i8* %v3_11a4c, align 1
  %v4_11a4c = load i32, i32* %r3.global-to-local, align 4
  %v5_11a4c = add i32 %v4_11a4c, 1
  store i32 %v5_11a4c, i32* %r3.global-to-local, align 4
  %v0_11a50 = load i32, i32* %r1.global-to-local, align 4
  %v1_11a50 = trunc i32 %v0_11a50 to i8
  %v3_11a50 = inttoptr i32 %v5_11a4c to i8*
  store i8 %v1_11a50, i8* %v3_11a50, align 1
  %v4_11a50 = load i32, i32* %r3.global-to-local, align 4
  %v5_11a50 = add i32 %v4_11a50, 1
  store i32 %v5_11a50, i32* %r3.global-to-local, align 4
  %v0_11a54 = load i32, i32* %r1.global-to-local, align 4
  %v1_11a54 = trunc i32 %v0_11a54 to i8
  %v3_11a54 = inttoptr i32 %v5_11a50 to i8*
  store i8 %v1_11a54, i8* %v3_11a54, align 1
  %v4_11a54 = load i32, i32* %r3.global-to-local, align 4
  %v5_11a54 = add i32 %v4_11a54, 1
  store i32 %v5_11a54, i32* @r3, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_119f0, { 1, 0 }
  uselistorder i32 %v12_11a1c, { 1, 2, 0 }
  uselistorder i32 %v0_119f054, { 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_119e8.pr, { 0, 2, 1 }
  uselistorder i32 %v6_119d8, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v5_119cc, { 1, 0 }
  uselistorder i32 %v0_119c4, { 1, 0, 2, 3 }
  uselistorder i32 %tmp, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 9, 14, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 5, 3, 2, 1, 4, 0, 6, 8, 9, 7 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_11a28, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_11a00, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @function_11a60(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11a60:
  %v0_11a60 = call i32 @function_158f0()
  ret i32 %v0_11a60
}

define i32 @function_11a70() local_unnamed_addr {
dec_label_pc_11a70:
  %v0_11a70 = call i32 @function_158f0()
  ret i32 %v0_11a70
}

define i32 @function_11a80(i32 %arg1) local_unnamed_addr {
dec_label_pc_11a80:
  %stack_var_-12 = alloca i32, align 4
  %v2_11a88 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_11a88, i32* @r1, align 4
  %v0_11a8c = call i32 @function_1615c()
  %v2_11a90 = icmp eq i32 %v0_11a8c, 0
  %v4_11a94 = load i32, i32* %stack_var_-12, align 4
  %storemerge = select i1 %v2_11a90, i32 -1, i32 %v4_11a94
  ret i32 %storemerge
}

define i32 @function_11aa8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_11aa8:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11aa8 = load i32, i32* @r7, align 4
  store i32 %v3_11aa8, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_11ad0, label %dec_label_pc_11ac0

dec_label_pc_11ac0:                               ; preds = %dec_label_pc_11aa8
  %v0_11ac0 = call i32 @function_11970()
  %v0_11ac4 = load i32, i32* %r7.global-to-local, align 4
  %v1_11ac4 = sub i32 0, %v0_11ac4
  %v2_11ac8 = inttoptr i32 %v0_11ac0 to i32*
  store i32 %v1_11ac4, i32* %v2_11ac8, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_11ad4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11ad0

dec_label_pc_11ad0:                               ; preds = %dec_label_pc_11aa8, %dec_label_pc_11ac0
  %v2_11ad4 = phi i32 [ %v3_11aa8, %dec_label_pc_11aa8 ], [ %v2_11ad4.pre, %dec_label_pc_11ac0 ]
  %v0_11ad0 = phi i32 [ %arg1, %dec_label_pc_11aa8 ], [ -1, %dec_label_pc_11ac0 ]
  store i32 %v2_11ad4, i32* @r7, align 4
  ret i32 %v0_11ad0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11ad0, { 1, 0 }
}

define i32 @function_11ae0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11ae0:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11ae0 = load i32, i32* @r7, align 4
  store i32 %v3_11ae0, i32* %stack_var_-8, align 4
  %v0_11aec = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_11aec, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11aec, -4095
  br i1 %tmp, label %dec_label_pc_11b0c, label %dec_label_pc_11afc

dec_label_pc_11afc:                               ; preds = %dec_label_pc_11ae0
  %v0_11afc = call i32 @function_11970()
  %v0_11b00 = load i32, i32* %r7.global-to-local, align 4
  %v1_11b00 = sub i32 0, %v0_11b00
  %v2_11b04 = inttoptr i32 %v0_11afc to i32*
  store i32 %v1_11b00, i32* %v2_11b04, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_11b0c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11b0c

dec_label_pc_11b0c:                               ; preds = %dec_label_pc_11ae0, %dec_label_pc_11afc
  %v1_11b10 = phi i32 [ %v0_11aec, %dec_label_pc_11ae0 ], [ -1, %dec_label_pc_11afc ]
  %v2_11b0c = phi i32 [ %v3_11ae0, %dec_label_pc_11ae0 ], [ %v2_11b0c.pre, %dec_label_pc_11afc ]
  store i32 %v2_11b0c, i32* @r7, align 4
  ret i32 %v1_11b10

; uselistorder directives
  uselistorder i32 %v0_11aec, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11b0c, { 1, 0 }
}

define i32 @function_11b18(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11b18:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11b18 = load i32, i32* @r7, align 4
  store i32 %v3_11b18, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_11b40, label %dec_label_pc_11b30

dec_label_pc_11b30:                               ; preds = %dec_label_pc_11b18
  %v0_11b30 = call i32 @function_11970()
  %v0_11b34 = load i32, i32* %r7.global-to-local, align 4
  %v1_11b34 = sub i32 0, %v0_11b34
  store i32 %v1_11b34, i32* @r3, align 4
  %v2_11b38 = inttoptr i32 %v0_11b30 to i32*
  store i32 %v1_11b34, i32* %v2_11b38, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_11b44.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11b40

dec_label_pc_11b40:                               ; preds = %dec_label_pc_11b18, %dec_label_pc_11b30
  %v2_11b44 = phi i32 [ %v3_11b18, %dec_label_pc_11b18 ], [ %v2_11b44.pre, %dec_label_pc_11b30 ]
  %v0_11b40 = phi i32 [ %arg1, %dec_label_pc_11b18 ], [ -1, %dec_label_pc_11b30 ]
  store i32 %v2_11b44, i32* @r7, align 4
  ret i32 %v0_11b40

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11b40, { 1, 0 }
}

define i32 @function_11b50(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11b50:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11b50 = load i32, i32* @r7, align 4
  store i32 %v3_11b50, i32* %stack_var_-8, align 4
  %v0_11b5c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_11b5c, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11b5c, -4095
  br i1 %tmp, label %dec_label_pc_11b7c, label %dec_label_pc_11b6c

dec_label_pc_11b6c:                               ; preds = %dec_label_pc_11b50
  %v0_11b6c = call i32 @function_11970()
  %v0_11b70 = load i32, i32* %r7.global-to-local, align 4
  %v1_11b70 = sub i32 0, %v0_11b70
  %v2_11b74 = inttoptr i32 %v0_11b6c to i32*
  store i32 %v1_11b70, i32* %v2_11b74, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_11b7c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11b7c

dec_label_pc_11b7c:                               ; preds = %dec_label_pc_11b50, %dec_label_pc_11b6c
  %v1_11b80 = phi i32 [ %v0_11b5c, %dec_label_pc_11b50 ], [ -1, %dec_label_pc_11b6c ]
  %v2_11b7c = phi i32 [ %v3_11b50, %dec_label_pc_11b50 ], [ %v2_11b7c.pre, %dec_label_pc_11b6c ]
  store i32 %v2_11b7c, i32* @r7, align 4
  ret i32 %v1_11b80

; uselistorder directives
  uselistorder i32 %v0_11b5c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11b7c, { 1, 0 }
}

define i32 @function_11b88(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_11b88:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_11bbc, label %dec_label_pc_11bac

dec_label_pc_11bac:                               ; preds = %dec_label_pc_11b88
  %v0_11bac = call i32 @function_11970()
  %v0_11bb0 = load i32, i32* %r4.global-to-local, align 4
  %v1_11bb0 = sub i32 0, %v0_11bb0
  %v2_11bb4 = inttoptr i32 %v0_11bac to i32*
  store i32 %v1_11bb0, i32* %v2_11bb4, align 4
  br label %dec_label_pc_11bbc

dec_label_pc_11bbc:                               ; preds = %dec_label_pc_11b88, %dec_label_pc_11bac
  %v1_11bc4 = phi i32 [ %arg1, %dec_label_pc_11b88 ], [ -1, %dec_label_pc_11bac ]
  ret i32 %v1_11bc4

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11bbc, { 1, 0 }
}

define i32 @function_11bcc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11bcc:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11bcc = load i32, i32* @r7, align 4
  store i32 %v3_11bcc, i32* %stack_var_-8, align 4
  %v0_11bd8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_11bd8, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11bd8, -4095
  br i1 %tmp, label %dec_label_pc_11bf8, label %dec_label_pc_11be8

dec_label_pc_11be8:                               ; preds = %dec_label_pc_11bcc
  %v0_11be8 = call i32 @function_11970()
  %v0_11bec = load i32, i32* %r7.global-to-local, align 4
  %v1_11bec = sub i32 0, %v0_11bec
  %v2_11bf0 = inttoptr i32 %v0_11be8 to i32*
  store i32 %v1_11bec, i32* %v2_11bf0, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_11bf8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11bf8

dec_label_pc_11bf8:                               ; preds = %dec_label_pc_11bcc, %dec_label_pc_11be8
  %v1_11bfc = phi i32 [ %v0_11bd8, %dec_label_pc_11bcc ], [ -1, %dec_label_pc_11be8 ]
  %v2_11bf8 = phi i32 [ %v3_11bcc, %dec_label_pc_11bcc ], [ %v2_11bf8.pre, %dec_label_pc_11be8 ]
  store i32 %v2_11bf8, i32* @r7, align 4
  ret i32 %v1_11bfc

; uselistorder directives
  uselistorder i32 %v0_11bd8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11bf8, { 1, 0 }
}

define i32 @function_11c00(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_11c00:
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r3, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11c00 = load i32, i32* @r7, align 4
  store i32 %v3_11c00, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_11c28, label %dec_label_pc_11c18

dec_label_pc_11c18:                               ; preds = %dec_label_pc_11c00
  %v0_11c18 = call i32 @function_11970()
  %v0_11c1c = load i32, i32* %r7.global-to-local, align 4
  %v1_11c1c = sub i32 0, %v0_11c1c
  store i32 %v1_11c1c, i32* @r3, align 4
  %v2_11c20 = inttoptr i32 %v0_11c18 to i32*
  store i32 %v1_11c1c, i32* %v2_11c20, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_11c2c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11c28

dec_label_pc_11c28:                               ; preds = %dec_label_pc_11c00, %dec_label_pc_11c18
  %v2_11c2c = phi i32 [ %v3_11c00, %dec_label_pc_11c00 ], [ %v2_11c2c.pre, %dec_label_pc_11c18 ]
  %v0_11c28 = phi i32 [ %arg1, %dec_label_pc_11c00 ], [ -1, %dec_label_pc_11c18 ]
  store i32 %v2_11c2c, i32* @r7, align 4
  ret i32 %v0_11c28

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11c28, { 1, 0 }
}

define i32 @function_11c38(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_11c38:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_11c38 = load i32, i32* @r4, align 4
  store i32 %v3_11c38, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_11c68, label %dec_label_pc_11c58

dec_label_pc_11c58:                               ; preds = %dec_label_pc_11c38
  %v0_11c58 = call i32 @function_11970()
  %v0_11c5c = load i32, i32* %r4.global-to-local, align 4
  %v1_11c5c = sub i32 0, %v0_11c5c
  %v2_11c60 = inttoptr i32 %v0_11c58 to i32*
  store i32 %v1_11c5c, i32* %v2_11c60, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_11c6c.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_11c68

dec_label_pc_11c68:                               ; preds = %dec_label_pc_11c38, %dec_label_pc_11c58
  %v2_11c6c = phi i32 [ %v3_11c38, %dec_label_pc_11c38 ], [ %v2_11c6c.pre, %dec_label_pc_11c58 ]
  %v0_11c68 = phi i32 [ %arg1, %dec_label_pc_11c38 ], [ -1, %dec_label_pc_11c58 ]
  store i32 %v2_11c6c, i32* @r4, align 4
  ret i32 %v0_11c68

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11c68, { 1, 0 }
}

define i32 @function_11c74(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_11c74:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11c74 = load i32, i32* @r7, align 4
  store i32 %v3_11c74, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_11c9c, label %dec_label_pc_11c8c

dec_label_pc_11c8c:                               ; preds = %dec_label_pc_11c74
  %v0_11c8c = call i32 @function_11970()
  %v0_11c90 = load i32, i32* %r7.global-to-local, align 4
  %v1_11c90 = sub i32 0, %v0_11c90
  store i32 %v1_11c90, i32* @r3, align 4
  %v2_11c94 = inttoptr i32 %v0_11c8c to i32*
  store i32 %v1_11c90, i32* %v2_11c94, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_11ca0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11c9c

dec_label_pc_11c9c:                               ; preds = %dec_label_pc_11c74, %dec_label_pc_11c8c
  %v2_11ca0 = phi i32 [ %v3_11c74, %dec_label_pc_11c74 ], [ %v2_11ca0.pre, %dec_label_pc_11c8c ]
  %v0_11c9c = phi i32 [ %arg1, %dec_label_pc_11c74 ], [ -1, %dec_label_pc_11c8c ]
  store i32 %v2_11ca0, i32* @r7, align 4
  ret i32 %v0_11c9c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11c9c, { 1, 0 }
}

define i32 @function_11cac(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_11cac:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_11cac = load i32, i32* @r4, align 4
  store i32 %v3_11cac, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_11cdc, label %dec_label_pc_11ccc

dec_label_pc_11ccc:                               ; preds = %dec_label_pc_11cac
  %v0_11ccc = call i32 @function_11970()
  %v0_11cd0 = load i32, i32* %r4.global-to-local, align 4
  %v1_11cd0 = sub i32 0, %v0_11cd0
  %v2_11cd4 = inttoptr i32 %v0_11ccc to i32*
  store i32 %v1_11cd0, i32* %v2_11cd4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_11ce0.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_11cdc

dec_label_pc_11cdc:                               ; preds = %dec_label_pc_11cac, %dec_label_pc_11ccc
  %v2_11ce0 = phi i32 [ %v3_11cac, %dec_label_pc_11cac ], [ %v2_11ce0.pre, %dec_label_pc_11ccc ]
  %v0_11cdc = phi i32 [ %arg1, %dec_label_pc_11cac ], [ -1, %dec_label_pc_11ccc ]
  store i32 %v2_11ce0, i32* @r4, align 4
  ret i32 %v0_11cdc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11cdc, { 1, 0 }
}

define i32 @function_11cec(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_11cec:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_11d20, label %dec_label_pc_11d10

dec_label_pc_11d10:                               ; preds = %dec_label_pc_11cec
  %v0_11d10 = call i32 @function_11970()
  %v0_11d14 = load i32, i32* %r4.global-to-local, align 4
  %v1_11d14 = sub i32 0, %v0_11d14
  store i32 %v1_11d14, i32* @r3, align 4
  %v2_11d18 = inttoptr i32 %v0_11d10 to i32*
  store i32 %v1_11d14, i32* %v2_11d18, align 4
  br label %dec_label_pc_11d20

dec_label_pc_11d20:                               ; preds = %dec_label_pc_11cec, %dec_label_pc_11d10
  %v1_11d28 = phi i32 [ %arg1, %dec_label_pc_11cec ], [ -1, %dec_label_pc_11d10 ]
  ret i32 %v1_11d28

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11d20, { 1, 0 }
}

define i32 @function_11d30(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11d30:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11d30 = load i32, i32* @r7, align 4
  store i32 %v3_11d30, i32* %stack_var_-8, align 4
  %v0_11d3c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_11d3c, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11d3c, -4095
  br i1 %tmp, label %dec_label_pc_11d5c, label %dec_label_pc_11d4c

dec_label_pc_11d4c:                               ; preds = %dec_label_pc_11d30
  %v0_11d4c = call i32 @function_11970()
  %v0_11d50 = load i32, i32* %r7.global-to-local, align 4
  %v1_11d50 = sub i32 0, %v0_11d50
  store i32 %v1_11d50, i32* @r3, align 4
  %v2_11d54 = inttoptr i32 %v0_11d4c to i32*
  store i32 %v1_11d50, i32* %v2_11d54, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_11d5c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11d5c

dec_label_pc_11d5c:                               ; preds = %dec_label_pc_11d30, %dec_label_pc_11d4c
  %v1_11d60 = phi i32 [ %v0_11d3c, %dec_label_pc_11d30 ], [ -1, %dec_label_pc_11d4c ]
  %v2_11d5c = phi i32 [ %v3_11d30, %dec_label_pc_11d30 ], [ %v2_11d5c.pre, %dec_label_pc_11d4c ]
  store i32 %v2_11d5c, i32* @r7, align 4
  ret i32 %v1_11d60

; uselistorder directives
  uselistorder i32 %v0_11d3c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11d5c, { 1, 0 }
}

define i32 @function_11d68(i32 %arg1) local_unnamed_addr {
dec_label_pc_11d68:
  store i32 %arg1, i32* @r0, align 4
  %v3_11d68 = load i32, i32* @r4, align 4
  %v0_11d70 = call i32 @function_111b4()
  %v2_11d78 = call i32 @function_11314(i32 %v0_11d70, i32 %arg1)
  store i32 %v3_11d68, i32* @r4, align 4
  ret i32 %v2_11d78

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_11314, { 0, 5, 4, 3, 2, 1 }
}

define i32 @function_11d84(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11d84:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r1, align 4
  %tmp4 = icmp slt i32 %arg1, 1
  br i1 %tmp4, label %dec_label_pc_11d9c, label %dec_label_pc_11d94

dec_label_pc_11d94:                               ; preds = %dec_label_pc_11d84
  %v7_11d98 = icmp slt i32 %arg1, 65
  br i1 %v7_11d98, label %dec_label_pc_11db0, label %dec_label_pc_11d9c

dec_label_pc_11d9c:                               ; preds = %dec_label_pc_11d94, %dec_label_pc_11d84
  %v0_11d9c = call i32 @function_11970()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_11da8 = inttoptr i32 %v0_11d9c to i32*
  store i32 22, i32* %v2_11da8, align 4
  %v0_11db8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11db8

dec_label_pc_11db0:                               ; preds = %dec_label_pc_11d94
  %v0_11db0 = call i32 @function_11eb8()
  store i32 %v0_11db0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11db8

dec_label_pc_11db8:                               ; preds = %dec_label_pc_11d9c, %dec_label_pc_11db0
  %v0_11db8 = phi i32 [ %v0_11db8.pre, %dec_label_pc_11d9c ], [ %v0_11db0, %dec_label_pc_11db0 ]
  ret i32 %v0_11db8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11db8, { 1, 0 }
}

define i32 @function_11dc8(i32* %arg1) local_unnamed_addr {
dec_label_pc_11dc8:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_11dd0 = add i32 %tmp, 4
  %v3_11dd0 = inttoptr i32 %v2_11dd0 to i32*
  store i32 0, i32* %v3_11dd0, align 4
  %v1_11dd4 = load i32, i32* %r3.global-to-local, align 4
  %v2_11dd4 = inttoptr i32 %v1_11dd4 to i32*
  store i32 0, i32* %v2_11dd4, align 4
  ret i32 0
}

define i32 @function_11ddc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11ddc:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_11ddc = load i32, i32* @r4, align 4
  store i32 %v3_11ddc, i32* %stack_var_-16, align 4
  %v6_11ddc = load i32, i32* @r5, align 4
  %v9_11ddc = load i32, i32* @r6, align 4
  %v7_11de4 = icmp eq i32 %arg2, -1
  br i1 %v7_11de4, label %.thread4, label %bb

.thread4:                                         ; preds = %dec_label_pc_11ddc
  br label %.thread16

bb:                                               ; preds = %dec_label_pc_11ddc
  %v2_11dec = ptrtoint i32* %stack_var_-56 to i32
  store i32 %arg1, i32* @r5, align 4
  %tmp28 = icmp slt i32 %arg1, 1
  br i1 %tmp28, label %.thread16, label %dec_label_pc_11e08

.thread16:                                        ; preds = %bb, %.thread4
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11e10

dec_label_pc_11e08:                               ; preds = %bb
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 127864, i32* @r6, align 4
  %v7_11e0c = icmp slt i32 %arg1, 65
  br i1 %v7_11e0c, label %dec_label_pc_11e24, label %dec_label_pc_11e10

dec_label_pc_11e10:                               ; preds = %.thread16, %dec_label_pc_11e08
  %v0_11e10 = call i32 @function_11970()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_11e1c = inttoptr i32 %v0_11e10 to i32*
  store i32 22, i32* %v2_11e1c, align 4
  %v0_11e7c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb33

dec_label_pc_11e24:                               ; preds = %dec_label_pc_11e08
  %v2_11e24 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_11e24, i32* @r4, align 4
  store i32 %arg1, i32* @r1, align 4
  %v2_11e2c = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_11e2c, i32* @r0, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  store i32 0, i32* %stack_var_-24, align 4
  %v0_11e3c = call i32 @function_11eb8()
  %v0_11e44 = load i32, i32* @r5, align 4
  %v0_11e48 = load i32, i32* @r6, align 4
  %v2_11e48 = add i32 %v0_11e48, 9068
  %v2_11e4c = call i32 @function_11e94(i32 %v2_11e48, i32 %v0_11e44)
  store i32 %v2_11dec, i32* %r2.global-to-local, align 4
  %v0_11e64 = load i32, i32* @r5, align 4
  %v3_11e6c = call i32 @function_140cc(i32 %v0_11e64, i32 %v2_11e24, i32 %v2_11dec)
  %v1_11e70 = icmp slt i32 %v3_11e6c, 0
  br i1 %v1_11e70, label %bb32, label %bb31

bb31:                                             ; preds = %dec_label_pc_11e24
  %v5_11e74 = load i32, i32* %stack_var_-56, align 4
  store i32 %v5_11e74, i32* %r2.global-to-local, align 4
  br label %bb33

bb32:                                             ; preds = %dec_label_pc_11e24
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %bb33

bb33:                                             ; preds = %bb31, %dec_label_pc_11e10, %bb32
  %v0_11e7c = phi i32 [ %v5_11e74, %bb31 ], [ %v0_11e7c.pre, %dec_label_pc_11e10 ], [ -1, %bb32 ]
  %v2_11e84 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_11e84, i32* @r4, align 4
  store i32 %v6_11ddc, i32* @r5, align 4
  store i32 %v9_11ddc, i32* @r6, align 4
  ret i32 %v0_11e7c

; uselistorder directives
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 ()* @function_11eb8, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 2, 0, 3 }
  uselistorder label %bb33, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11e10, { 1, 0 }
}

define i32 @function_11e94(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11e94:
  %v1_11e94 = add i32 %arg2, -1
  %v3_11e98 = udiv i32 %v1_11e94, 32
  %v4_11e9c = mul nuw nsw i32 %v3_11e98, 4
  %v5_11e9c = add i32 %v4_11e9c, %arg1
  %v6_11e9c = inttoptr i32 %v5_11e9c to i32*
  %v7_11e9c = load i32, i32* %v6_11e9c, align 4
  %v1_11ea0 = urem i32 %v1_11e94, 32
  %v7_11ea8 = shl i32 1, %v1_11ea0
  %v8_11ea8 = and i32 %v7_11e9c, %v7_11ea8
  %v10_11ea8 = icmp ne i32 %v8_11ea8, 0
  %. = zext i1 %v10_11ea8 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v1_11e94, { 1, 0 }
}

define i32 @function_11eb8() local_unnamed_addr {
dec_label_pc_11eb8:
  %v0_11eb8 = load i32, i32* @r1, align 4
  %v1_11eb8 = add i32 %v0_11eb8, -1
  %v3_11ebc = udiv i32 %v1_11eb8, 32
  %v0_11ec0 = load i32, i32* @r0, align 4
  %v4_11ec0 = mul nuw nsw i32 %v3_11ebc, 4
  %v5_11ec0 = add i32 %v0_11ec0, %v4_11ec0
  %v6_11ec0 = inttoptr i32 %v5_11ec0 to i32*
  %v7_11ec0 = load i32, i32* %v6_11ec0, align 4
  %v1_11ec4 = urem i32 %v1_11eb8, 32
  %v7_11ecc = shl i32 1, %v1_11ec4
  %v8_11ecc = or i32 %v7_11ec0, %v7_11ecc
  store i32 %v8_11ecc, i32* %v6_11ec0, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_11eb8, { 1, 0 }
}

define i32 @function_11edc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11edc:
  %v1_11edc = add i32 %arg2, -1
  %v3_11ee0 = udiv i32 %v1_11edc, 32
  %v4_11ee4 = mul nuw nsw i32 %v3_11ee0, 4
  %v5_11ee4 = add i32 %v4_11ee4, %arg1
  %v6_11ee4 = inttoptr i32 %v5_11ee4 to i32*
  %v7_11ee4 = load i32, i32* %v6_11ee4, align 4
  %v1_11ee8 = urem i32 %v1_11edc, 32
  %tmp = shl i32 -1, %v1_11ee8
  %v8_11ef0 = add i32 %tmp, -1
  %v9_11ef0 = and i32 %v7_11ee4, %v8_11ef0
  store i32 %v9_11ef0, i32* %v6_11ee4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_11edc, { 1, 0 }
}

define i32 @function_11f00(i32 %arg1) local_unnamed_addr {
dec_label_pc_11f00:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v3_11f00 = udiv i32 %arg1, 256
  store i32 %v3_11f00, i32* %r1.global-to-local, align 4
  %v2_11f04 = icmp ugt i32 %arg1, 16777215
  store i32 %arg1, i32* %ip.global-to-local, align 4
  br i1 %v2_11f04, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_11f00
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_11f00, %bb
  %v0_11f10 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_11f04, i32 %v0_11f10)
  %v0_11f14 = load i32, i32* %r1.global-to-local, align 4
  %v1_11f14 = add i32 %v0_11f14, 1048320
  %v3_11f18 = udiv i32 %v1_11f14, 65536
  %v1_11f1c = and i32 %v3_11f18, 8
  %v6_11f20 = shl i32 %v0_11f14, %v1_11f1c
  %v1_11f24 = add i32 %v6_11f20, 520192
  %v3_11f28 = udiv i32 %v1_11f24, 65536
  %v1_11f2c = and i32 %v3_11f28, 4
  %v6_11f30 = shl i32 %v6_11f20, %v1_11f2c
  %v1_11f34 = add i32 %v6_11f30, 245760
  %v3_11f38 = udiv i32 %v1_11f34, 65536
  %v1_11f3c = and i32 %v3_11f38, 2
  %v6_11f40 = shl i32 %v6_11f30, %v1_11f3c
  store i32 %v6_11f40, i32* %r1.global-to-local, align 4
  %v1_11f44 = sub nsw i32 13, %v1_11f1c
  %v2_11f48 = sub nsw i32 %v1_11f44, %v1_11f2c
  %v3_11f4c = udiv i32 %v6_11f40, 32768
  %v4_11f4c = sub nuw nsw i32 -1, %v3_11f4c
  %v4_11f50 = udiv i32 %v6_11f40, 16384
  %v5_11f50 = and i32 %v4_11f50, %v4_11f4c
  %v2_11f54 = sub nsw i32 %v2_11f48, %v1_11f3c
  %v2_11f58 = add nsw i32 %v2_11f54, %v5_11f50
  %v1_11f5c = add nsw i32 %v2_11f58, 6
  %v0_11f60 = load i32, i32* %ip.global-to-local, align 4
  %v6_11f60 = lshr i32 %v0_11f60, %v1_11f5c
  %v3_11f64 = mul nsw i32 %v2_11f58, 4
  %v1_11f68 = add nsw i32 %v3_11f64, 32
  %v1_11f6c = urem i32 %v6_11f60, 4
  %v2_11f70 = or i32 %v1_11f6c, %v1_11f68
  ret i32 %v2_11f70

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @function_11f78() local_unnamed_addr {
dec_label_pc_11f78:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_11f78 = load i32, i32* @r4, align 4
  %v6_11f78 = load i32, i32* @r5, align 4
  %v9_11f78 = load i32, i32* @r6, align 4
  %v12_11f78 = load i32, i32* @r7, align 4
  %v15_11f78 = load i32, i32* @r8, align 4
  %v18_11f78 = load i32, i32* @sb, align 4
  %v21_11f78 = load i32, i32* @sl, align 4
  %v24_11f78 = load i32, i32* @fp, align 4
  %v27_11f78 = load i32, i32* @lr, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_d3ec.93 to i32), i32 73612), i32* %r1.global-to-local, align 4
  %v4_11f8c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_d3ec.93 to i32), i32 73680) to i32*), align 4
  store i32 %v4_11f8c, i32* %r4.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  %v4_11f98 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_d3ec.93 to i32), i32 73648) to i32*), align 4
  store i32 %v4_11f98, i32* %r1.global-to-local, align 4
  %v0_11f9c = load i32, i32* @r0, align 4
  store i32 %v0_11f9c, i32* @r5, align 4
  store i32 %v4_11f8c, i32* @r2, align 4
  %v2_11fa4 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_11fa4, i32* %r0.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_d3ec.93 to i32), i32 73612), i32* %ip.global-to-local, align 4
  %v4_11fb0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_d3ec.93 to i32), i32 73684) to i32*), align 4
  store i32 %v4_11fb0, i32* %ip.global-to-local, align 4
  store i32 73660, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_11fb0)
  %v0_11fbc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_11fbc, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_d3ec.93 to i32), i32 73612), i32* %r1.global-to-local, align 4
  %v4_11fc8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_d3ec.93 to i32), i32 73628) to i32*), align 4
  store i32 %v4_11fc8, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_11fd4.752 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_11fc8)
  %v0_11fd4 = load i32, i32* @r5, align 4
  %tmp = icmp ult i32 %v0_11fd4, -32
  br i1 %tmp, label %dec_label_pc_11ff0, label %dec_label_pc_11fdc

dec_label_pc_11fdc:                               ; preds = %dec_label_pc_11f78
  %v0_11fdc = call i32 @function_11970()
  store i32 %v0_11fdc, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 12, i32* @r3, align 4
  %v2_11fe8 = inttoptr i32 %v0_11fdc to i32*
  store i32 12, i32* %v2_11fe8, align 4
  br label %dec_label_pc_1286c

dec_label_pc_11ff0:                               ; preds = %dec_label_pc_11f78
  %v1_11ff0 = add i32 %v0_11fd4, 11
  store i32 %v1_11ff0, i32* %r0.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_d3ec.93 to i32), i32 73612), i32* %r2.global-to-local, align 4
  %v2_11ffc = icmp ugt i32 %v1_11ff0, 14
  %v7_11ffc = icmp eq i32 %v1_11ff0, 15
  %v2_12000 = xor i1 %v7_11ffc, true
  %v3_12000 = and i1 %v2_11ffc, %v2_12000
  br i1 %v3_12000, label %bb, label %bb138

bb:                                               ; preds = %dec_label_pc_11ff0
  %v5_12000 = and i32 %v1_11ff0, -8
  store i32 %v5_12000, i32* @sl, align 4
  br label %bb138

bb138:                                            ; preds = %dec_label_pc_11ff0, %bb
  %v4_12004 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_d3ec.93 to i32), i32 73644) to i32*), align 4
  store i32 %v4_12004, i32* @r0, align 4
  %v1_12008 = inttoptr i32 %v4_12004 to i32*
  %v2_12008 = load i32, i32* %v1_12008, align 4
  store i32 %v2_12008, i32* @r4, align 4
  %v2_1200c = xor i1 %v2_11ffc, true
  %v3_1200c = or i1 %v7_11ffc, %v2_1200c
  br i1 %v3_1200c, label %bb139, label %bb140

bb139:                                            ; preds = %bb138
  store i32 16, i32* @sl, align 4
  br label %bb140

bb140:                                            ; preds = %bb138, %bb139
  %v1_12010 = urem i32 %v2_12008, 2
  %v2_12010 = icmp eq i32 %v1_12010, 0
  br i1 %v2_12010, label %dec_label_pc_12018, label %dec_label_pc_12028

dec_label_pc_12018:                               ; preds = %bb140
  %v2_12018 = icmp eq i32 %v2_12008, 0
  br i1 %v2_12018, label %dec_label_pc_12020, label %dec_label_pc_12404

dec_label_pc_12020:                               ; preds = %dec_label_pc_12018
  %v0_12020 = call i32 @function_12e30()
  store i32 %v0_12020, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12404

dec_label_pc_12028:                               ; preds = %bb140
  %v0_12028 = load i32, i32* @sl, align 4
  %tmp201 = icmp ugt i32 %v0_12028, %v2_12008
  br i1 %tmp201, label %dec_label_pc_12050, label %dec_label_pc_12030

dec_label_pc_12030:                               ; preds = %dec_label_pc_12028
  %v1_12030 = add i32 %v4_12004, -4
  store i32 %v1_12030, i32* %r1.global-to-local, align 4
  %v3_12034 = udiv i32 %v0_12028, 8
  store i32 %v3_12034, i32* %r2.global-to-local, align 4
  %v4_12038 = mul nuw i32 %v3_12034, 4
  %v5_12038 = add i32 %v4_12038, %v1_12030
  %v6_12038 = inttoptr i32 %v5_12038 to i32*
  %v7_12038 = load i32, i32* %v6_12038, align 4
  store i32 %v7_12038, i32* %r0.global-to-local, align 4
  %v2_1203c = icmp eq i32 %v7_12038, 0
  br i1 %v2_1203c, label %dec_label_pc_12050, label %.thread1

.thread1:                                         ; preds = %dec_label_pc_12030
  %v2_12040 = add i32 %v7_12038, 8
  %v3_12040 = inttoptr i32 %v2_12040 to i32*
  %v4_12040 = load i32, i32* %v3_12040, align 4
  store i32 %v4_12040, i32* %r3.global-to-local, align 4
  store i32 %v2_12040, i32* %r0.global-to-local, align 4
  store i32 %v2_12040, i32* %r4.global-to-local, align 4
  store i32 %v4_12040, i32* %v6_12038, align 4
  br label %dec_label_pc_12850

dec_label_pc_12050:                               ; preds = %dec_label_pc_12030, %dec_label_pc_12028
  %tmp202 = icmp ugt i32 %v0_12028, 255
  br i1 %tmp202, label %dec_label_pc_120a0, label %dec_label_pc_12058

dec_label_pc_12058:                               ; preds = %dec_label_pc_12050
  store i32 add (i32 ptrtoint (i32* @global_var_d3ec.93 to i32), i32 73612), i32* %ip.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_12060 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_d3ec.93 to i32), i32 73644) to i32*), align 4
  %v3_12064 = udiv i32 %v0_12028, 8
  store i32 %v3_12064, i32* @r7, align 4
  %v4_12068 = mul nuw i32 %v3_12064, 8
  %v5_12068 = add i32 %v4_12060, %v4_12068
  store i32 %v5_12068, i32* %r3.global-to-local, align 4
  %v1_1206c = add i32 %v5_12068, 44
  store i32 %v1_1206c, i32* %ip.global-to-local, align 4
  %v1_12070 = add i32 %v5_12068, 56
  %v2_12070 = inttoptr i32 %v1_12070 to i32*
  %v3_12070 = load i32, i32* %v2_12070, align 4
  store i32 %v3_12070, i32* %r0.global-to-local, align 4
  %v9_12074 = icmp eq i32 %v3_12070, %v1_1206c
  br i1 %v9_12074, label %dec_label_pc_12200, label %dec_label_pc_1207c

dec_label_pc_1207c:                               ; preds = %dec_label_pc_12058
  %v2_1207c = add i32 %v3_12070, %v0_12028
  store i32 %v2_1207c, i32* %r3.global-to-local, align 4
  %v1_12080 = add i32 %v2_1207c, 4
  %v2_12080 = inttoptr i32 %v1_12080 to i32*
  %v3_12080 = load i32, i32* %v2_12080, align 4
  store i32 %v3_12080, i32* %r2.global-to-local, align 4
  %v1_12084 = add i32 %v3_12070, 12
  %v2_12084 = inttoptr i32 %v1_12084 to i32*
  %v3_12084 = load i32, i32* %v2_12084, align 4
  store i32 %v3_12084, i32* %r1.global-to-local, align 4
  %v1_12088 = or i32 %v3_12080, 1
  store i32 %v1_12088, i32* %r2.global-to-local, align 4
  %v1_1208c = add i32 %v3_12070, 8
  store i32 %v1_1208c, i32* %r4.global-to-local, align 4
  store i32 %v1_12088, i32* %v2_12080, align 4
  %v0_12094 = load i32, i32* %ip.global-to-local, align 4
  %v1_12094 = load i32, i32* %r1.global-to-local, align 4
  %v2_12094 = add i32 %v1_12094, 8
  %v3_12094 = inttoptr i32 %v2_12094 to i32*
  store i32 %v0_12094, i32* %v3_12094, align 4
  %v0_12098 = load i32, i32* %r1.global-to-local, align 4
  %v1_12098 = load i32, i32* %ip.global-to-local, align 4
  %v2_12098 = add i32 %v1_12098, 12
  %v3_12098 = inttoptr i32 %v2_12098 to i32*
  store i32 %v0_12098, i32* %v3_12098, align 4
  br label %dec_label_pc_12850

dec_label_pc_120a0:                               ; preds = %dec_label_pc_12050
  store i32 %v0_12028, i32* %r0.global-to-local, align 4
  %v1_120a4 = call i32 @function_11f00(i32 %v0_12028)
  store i32 %v1_120a4, i32* %r0.global-to-local, align 4
  %v0_120a8 = load i32, i32* @r4, align 4
  %v1_120a8 = and i32 %v0_120a8, 2
  %v2_120a8 = icmp eq i32 %v1_120a8, 0
  store i32 %v1_120a4, i32* @r7, align 4
  br i1 %v2_120a8, label %dec_label_pc_12200, label %dec_label_pc_120b4

dec_label_pc_120b4:                               ; preds = %dec_label_pc_120a0
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_d3ec.93 to i32), i32 73612), i32* %r1.global-to-local, align 4
  %v4_120bc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_d3ec.93 to i32), i32 73644) to i32*), align 4
  store i32 %v4_120bc, i32* @r0, align 4
  %v0_120c0 = call i32 @function_12e30()
  store i32 %v0_120c0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12200

dec_label_pc_120c8:                               ; preds = %dec_label_pc_12214
  %v1_120c8 = add i32 %v3_12214, 4
  %v2_120c8 = inttoptr i32 %v1_120c8 to i32*
  %v3_120c8 = load i32, i32* %v2_120c8, align 4
  store i32 %v3_120c8, i32* %r3.global-to-local, align 4
  %v0_120cc = load i32, i32* @sl, align 4
  %v1_120d0 = and i32 %v3_120c8, -4
  store i32 %v1_120d0, i32* %r4.global-to-local, align 4
  %v1_120d4 = add i32 %v3_12214, 12
  %v2_120d4 = inttoptr i32 %v1_120d4 to i32*
  %v3_120d4 = load i32, i32* %v2_120d4, align 4
  store i32 %v3_120d4, i32* %ip.global-to-local, align 4
  %tmp203 = icmp ugt i32 %v0_120cc, 255
  br i1 %tmp203, label %dec_label_pc_12130, label %dec_label_pc_120dc

dec_label_pc_120dc:                               ; preds = %dec_label_pc_120c8
  %v9_120dc = icmp eq i32 %v3_120d4, %v0_12134
  br i1 %v9_120dc, label %dec_label_pc_120e4, label %dec_label_pc_12130

dec_label_pc_120e4:                               ; preds = %dec_label_pc_120dc
  %v0_120e4 = load i32, i32* @sb, align 4
  %v1_120e4 = add i32 %v0_120e4, 48
  %v2_120e4 = inttoptr i32 %v1_120e4 to i32*
  %v3_120e4 = load i32, i32* %v2_120e4, align 4
  store i32 %v3_120e4, i32* %r3.global-to-local, align 4
  %v9_120e8 = icmp eq i32 %v3_12214, %v3_120e4
  br i1 %v9_120e8, label %dec_label_pc_120f0, label %dec_label_pc_12130

dec_label_pc_120f0:                               ; preds = %dec_label_pc_120e4
  %v1_120f0 = load i32, i32* @fp, align 4
  %tmp204 = icmp ugt i32 %v1_120d0, %v1_120f0
  br i1 %tmp204, label %dec_label_pc_120f8, label %dec_label_pc_12130

dec_label_pc_120f8:                               ; preds = %dec_label_pc_120f0
  %v2_120f8 = sub i32 %v1_120d0, %v0_120cc
  store i32 %v2_120f8, i32* %r2.global-to-local, align 4
  %v2_120fc = add i32 %v0_120cc, %v3_12214
  store i32 %v2_120fc, i32* %r3.global-to-local, align 4
  %v1_12100 = or i32 %v0_120cc, 1
  store i32 %v1_12100, i32* %r0.global-to-local, align 4
  %v1_12104 = or i32 %v2_120f8, 1
  store i32 %v1_12104, i32* %r1.global-to-local, align 4
  %v1_12108 = add i32 %v3_12214, 8
  store i32 %v1_12108, i32* %r4.global-to-local, align 4
  %v2_1210c = add i32 %v0_12134, 8
  %v3_1210c = inttoptr i32 %v2_1210c to i32*
  store i32 %v2_120fc, i32* %v3_1210c, align 4
  %v0_12110 = load i32, i32* %r3.global-to-local, align 4
  %v1_12110 = load i32, i32* %ip.global-to-local, align 4
  %v2_12110 = add i32 %v1_12110, 12
  %v3_12110 = inttoptr i32 %v2_12110 to i32*
  store i32 %v0_12110, i32* %v3_12110, align 4
  %v0_12114 = load i32, i32* %r0.global-to-local, align 4
  %v1_12114 = load i32, i32* @r6, align 4
  %v2_12114 = add i32 %v1_12114, 4
  %v3_12114 = inttoptr i32 %v2_12114 to i32*
  store i32 %v0_12114, i32* %v3_12114, align 4
  %v0_12118 = load i32, i32* %r3.global-to-local, align 4
  %v1_12118 = load i32, i32* @sb, align 4
  %v2_12118 = add i32 %v1_12118, 48
  %v3_12118 = inttoptr i32 %v2_12118 to i32*
  store i32 %v0_12118, i32* %v3_12118, align 4
  %v0_1211c = load i32, i32* %r2.global-to-local, align 4
  %v1_1211c = load i32, i32* %r3.global-to-local, align 4
  %v3_1211c = add i32 %v1_1211c, %v0_1211c
  %v4_1211c = inttoptr i32 %v3_1211c to i32*
  store i32 %v0_1211c, i32* %v4_1211c, align 4
  %v0_12120 = load i32, i32* %r1.global-to-local, align 4
  %v1_12120 = load i32, i32* %r3.global-to-local, align 4
  %v2_12120 = add i32 %v1_12120, 4
  %v3_12120 = inttoptr i32 %v2_12120 to i32*
  store i32 %v0_12120, i32* %v3_12120, align 4
  %v0_12124 = load i32, i32* %ip.global-to-local, align 4
  %v1_12124 = load i32, i32* %r3.global-to-local, align 4
  %v2_12124 = add i32 %v1_12124, 12
  %v3_12124 = inttoptr i32 %v2_12124 to i32*
  store i32 %v0_12124, i32* %v3_12124, align 4
  %v0_12128 = load i32, i32* %ip.global-to-local, align 4
  %v1_12128 = load i32, i32* %r3.global-to-local, align 4
  %v2_12128 = add i32 %v1_12128, 8
  %v3_12128 = inttoptr i32 %v2_12128 to i32*
  store i32 %v0_12128, i32* %v3_12128, align 4
  br label %dec_label_pc_12850

dec_label_pc_12130:                               ; preds = %dec_label_pc_120f0, %dec_label_pc_120e4, %dec_label_pc_120dc, %dec_label_pc_120c8
  %v9_12130 = icmp eq i32 %v1_120d0, %v0_120cc
  %v2_12134 = add i32 %v3_120d4, 8
  %v3_12134 = inttoptr i32 %v2_12134 to i32*
  store i32 %v0_12134, i32* %v3_12134, align 4
  %v0_12138 = load i32, i32* %ip.global-to-local, align 4
  %v1_12138 = load i32, i32* %r5.global-to-local, align 4
  %v2_12138 = add i32 %v1_12138, 12
  %v3_12138 = inttoptr i32 %v2_12138 to i32*
  store i32 %v0_12138, i32* %v3_12138, align 4
  br i1 %v9_12130, label %dec_label_pc_12290.loopexit, label %dec_label_pc_1214c

dec_label_pc_1214c:                               ; preds = %dec_label_pc_12130
  %v0_1214c = load i32, i32* %r4.global-to-local, align 4
  %tmp205 = icmp ugt i32 %v0_1214c, 255
  br i1 %tmp205, label %dec_label_pc_12170, label %dec_label_pc_12154

dec_label_pc_12154:                               ; preds = %dec_label_pc_1214c
  store i32 add (i32 ptrtoint (i32* @global_var_d3ec.93 to i32), i32 73612), i32* %r2.global-to-local, align 4
  %v1_12158 = load i32, i32* %r8.global-to-local, align 4
  %v2_12158 = add i32 %v1_12158, add (i32 ptrtoint (i32* @global_var_d3ec.93 to i32), i32 73612)
  %v3_12158 = inttoptr i32 %v2_12158 to i32*
  %v4_12158 = load i32, i32* %v3_12158, align 4
  %v3_1215c = udiv i32 %v0_1214c, 8
  store i32 %v3_1215c, i32* %r0.global-to-local, align 4
  %v4_12160 = mul nuw i32 %v3_1215c, 8
  %v5_12160 = add i32 %v4_12158, %v4_12160
  store i32 %v5_12160, i32* %r3.global-to-local, align 4
  %v1_12164 = add i32 %v5_12160, 44
  store i32 %v1_12164, i32* %ip.global-to-local, align 4
  %v1_12168 = add i32 %v5_12160, 52
  %v2_12168 = inttoptr i32 %v1_12168 to i32*
  %v3_12168 = load i32, i32* %v2_12168, align 4
  store i32 %v3_12168, i32* @lr, align 4
  br label %dec_label_pc_121c8

dec_label_pc_12170:                               ; preds = %dec_label_pc_1214c
  store i32 %v0_1214c, i32* %r0.global-to-local, align 4
  %v1_12174 = call i32 @function_11f00(i32 %v0_1214c)
  store i32 %v1_12174, i32* %r0.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_d3ec.93 to i32), i32 73612), i32* %ip.global-to-local, align 4
  %v1_1217c = load i32, i32* %r8.global-to-local, align 4
  %v2_1217c = add i32 %v1_1217c, add (i32 ptrtoint (i32* @global_var_d3ec.93 to i32), i32 73612)
  %v3_1217c = inttoptr i32 %v2_1217c to i32*
  %v4_1217c = load i32, i32* %v3_1217c, align 4
  %v4_12180 = mul i32 %v1_12174, 8
  %v5_12180 = add i32 %v4_1217c, %v4_12180
  store i32 %v5_12180, i32* %r3.global-to-local, align 4
  %v1_12184 = add i32 %v5_12180, 44
  store i32 %v1_12184, i32* %ip.global-to-local, align 4
  %v1_12188 = add i32 %v5_12180, 52
  %v2_12188 = inttoptr i32 %v1_12188 to i32*
  %v3_12188 = load i32, i32* %v2_12188, align 4
  store i32 %v3_12188, i32* @lr, align 4
  %v9_1218c = icmp eq i32 %v3_12188, %v1_12184
  br i1 %v9_1218c, label %dec_label_pc_121c8, label %dec_label_pc_12194

dec_label_pc_12194:                               ; preds = %dec_label_pc_12170
  %v1_12194 = add i32 %v5_12180, 56
  %v2_12194 = inttoptr i32 %v1_12194 to i32*
  %v3_12194 = load i32, i32* %v2_12194, align 4
  store i32 %v3_12194, i32* %r1.global-to-local, align 4
  %v1_12198 = add i32 %v3_12194, 4
  %v2_12198 = inttoptr i32 %v1_12198 to i32*
  %v3_12198 = load i32, i32* %v2_12198, align 4
  store i32 %v3_12198, i32* %r3.global-to-local, align 4
  %v0_1219c = load i32, i32* %r4.global-to-local, align 4
  %v3_1219c = icmp ult i32 %v0_1219c, %v3_12198
  br i1 %v3_1219c, label %.thread, label %dec_label_pc_121b8.preheader

.thread:                                          ; preds = %dec_label_pc_12194
  store i32 %v1_12184, i32* @lr, align 4
  store i32 %v3_12194, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_121c8

dec_label_pc_121b8.preheader:                     ; preds = %dec_label_pc_12194
  %v2_121a4 = or i32 %v0_1219c, 1
  store i32 %v2_121a4, i32* %r2.global-to-local, align 4
  %v1_121b8179 = add i32 %v3_12188, 4
  %v2_121b8180 = inttoptr i32 %v1_121b8179 to i32*
  %v3_121b8181 = load i32, i32* %v2_121b8180, align 4
  store i32 %v3_121b8181, i32* %r3.global-to-local, align 4
  %v3_121bc183 = icmp ult i32 %v2_121a4, %v3_121b8181
  br i1 %v3_121bc183, label %dec_label_pc_121b4, label %dec_label_pc_121c4

dec_label_pc_121b4:                               ; preds = %dec_label_pc_121b8.preheader, %dec_label_pc_121b4
  %v0_121c4184 = phi i32 [ %v3_121b4, %dec_label_pc_121b4 ], [ %v3_12188, %dec_label_pc_121b8.preheader ]
  %v1_121b4 = add i32 %v0_121c4184, 8
  %v2_121b4 = inttoptr i32 %v1_121b4 to i32*
  %v3_121b4 = load i32, i32* %v2_121b4, align 4
  store i32 %v3_121b4, i32* @lr, align 4
  %v1_121b8 = add i32 %v3_121b4, 4
  %v2_121b8 = inttoptr i32 %v1_121b8 to i32*
  %v3_121b8 = load i32, i32* %v2_121b8, align 4
  store i32 %v3_121b8, i32* %r3.global-to-local, align 4
  %v3_121bc = icmp ult i32 %v2_121a4, %v3_121b8
  br i1 %v3_121bc, label %dec_label_pc_121b4, label %dec_label_pc_121c4

dec_label_pc_121c4:                               ; preds = %dec_label_pc_121b4, %dec_label_pc_121b8.preheader
  %v0_121c4.lcssa = phi i32 [ %v3_12188, %dec_label_pc_121b8.preheader ], [ %v3_121b4, %dec_label_pc_121b4 ]
  %v1_121c4 = add i32 %v0_121c4.lcssa, 12
  %v2_121c4 = inttoptr i32 %v1_121c4 to i32*
  %v3_121c4 = load i32, i32* %v2_121c4, align 4
  store i32 %v3_121c4, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_121c8

dec_label_pc_121c8:                               ; preds = %.thread, %dec_label_pc_12170, %dec_label_pc_12154, %dec_label_pc_121c4
  %v0_121e8 = phi i32 [ %v1_12184, %dec_label_pc_12170 ], [ %v1_12164, %dec_label_pc_12154 ], [ %v3_121c4, %dec_label_pc_121c4 ], [ %v3_12194, %.thread ]
  %v0_121dc = phi i32 [ %v1_12174, %dec_label_pc_12170 ], [ %v3_1215c, %dec_label_pc_12154 ], [ %v1_12174, %dec_label_pc_121c4 ], [ %v1_12174, %.thread ]
  %v1_121cc = phi i32 [ %v1_1217c, %dec_label_pc_12170 ], [ %v1_12158, %dec_label_pc_12154 ], [ %v1_1217c, %dec_label_pc_121c4 ], [ %v1_1217c, %.thread ]
  store i32 add (i32 ptrtoint (i32* @global_var_d3ec.93 to i32), i32 73612), i32* %r2.global-to-local, align 4
  %v2_121cc = add i32 %v1_121cc, add (i32 ptrtoint (i32* @global_var_d3ec.93 to i32), i32 73612)
  %v3_121cc = inttoptr i32 %v2_121cc to i32*
  %v4_121cc = load i32, i32* %v3_121cc, align 4
  %v3_121d0 = sdiv i32 %v0_121dc, 32
  store i32 %v3_121d0, i32* %r3.global-to-local, align 4
  %v4_121d4 = mul nsw i32 %v3_121d0, 4
  %v5_121d4 = add i32 %v4_121cc, %v4_121d4
  store i32 %v5_121d4, i32* %r1.global-to-local, align 4
  %v1_121d8 = add i32 %v5_121d4, 820
  %v2_121d8 = inttoptr i32 %v1_121d8 to i32*
  %v3_121d8 = load i32, i32* %v2_121d8, align 4
  %v1_121dc = urem i32 %v0_121dc, 32
  store i32 %v1_121dc, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v7_121e4 = shl i32 1, %v1_121dc
  %v8_121e4 = or i32 %v3_121d8, %v7_121e4
  store i32 %v8_121e4, i32* %r3.global-to-local, align 4
  %v1_121e8 = load i32, i32* @r6, align 4
  %v2_121e8 = add i32 %v1_121e8, 12
  %v3_121e8 = inttoptr i32 %v2_121e8 to i32*
  store i32 %v0_121e8, i32* %v3_121e8, align 4
  %v0_121ec = load i32, i32* @lr, align 4
  %v1_121ec = load i32, i32* @r6, align 4
  %v2_121ec = add i32 %v1_121ec, 8
  %v3_121ec = inttoptr i32 %v2_121ec to i32*
  store i32 %v0_121ec, i32* %v3_121ec, align 4
  %v0_121f0 = load i32, i32* %r3.global-to-local, align 4
  %v1_121f0 = load i32, i32* %r1.global-to-local, align 4
  %v2_121f0 = add i32 %v1_121f0, 820
  %v3_121f0 = inttoptr i32 %v2_121f0 to i32*
  store i32 %v0_121f0, i32* %v3_121f0, align 4
  %v0_121f4 = load i32, i32* @r6, align 4
  %v1_121f4 = load i32, i32* @lr, align 4
  %v2_121f4 = add i32 %v1_121f4, 12
  %v3_121f4 = inttoptr i32 %v2_121f4 to i32*
  store i32 %v0_121f4, i32* %v3_121f4, align 4
  %v0_121f8 = load i32, i32* @r6, align 4
  %v1_121f8 = load i32, i32* %ip.global-to-local, align 4
  %v2_121f8 = add i32 %v1_121f8, 8
  %v3_121f8 = inttoptr i32 %v2_121f8 to i32*
  store i32 %v0_121f8, i32* %v3_121f8, align 4
  %v0_12214.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_12214

dec_label_pc_12200:                               ; preds = %dec_label_pc_120a0, %dec_label_pc_12058, %dec_label_pc_120b4
  store i32 32, i32* %r8.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_d3ec.93 to i32), i32 73612), i32* %r1.global-to-local, align 4
  %v4_12208 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_d3ec.93 to i32), i32 73644) to i32*), align 4
  store i32 %v4_12208, i32* @sb, align 4
  %v0_1220c = load i32, i32* @sl, align 4
  %v1_1220c = add i32 %v0_1220c, 16
  store i32 %v1_1220c, i32* @fp, align 4
  %v1_12210 = add i32 %v4_12208, 52
  store i32 %v1_12210, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_12214

dec_label_pc_12214:                               ; preds = %dec_label_pc_121c8, %dec_label_pc_12200
  %v0_12134 = phi i32 [ %v0_12214.pre, %dec_label_pc_121c8 ], [ %v1_12210, %dec_label_pc_12200 ]
  %v1_12214 = add i32 %v0_12134, 12
  %v2_12214 = inttoptr i32 %v1_12214 to i32*
  %v3_12214 = load i32, i32* %v2_12214, align 4
  store i32 %v3_12214, i32* @r6, align 4
  %v9_12218 = icmp eq i32 %v3_12214, %v0_12134
  br i1 %v9_12218, label %dec_label_pc_12220, label %dec_label_pc_120c8

dec_label_pc_12220:                               ; preds = %dec_label_pc_12214
  %v0_12220 = load i32, i32* @sl, align 4
  %tmp206 = icmp ult i32 %v0_12220, 256
  %v0_122d8.pre = load i32, i32* @r7, align 4
  br i1 %tmp206, label %dec_label_pc_12220.dec_label_pc_122d8_crit_edge, label %dec_label_pc_12228

dec_label_pc_12220.dec_label_pc_122d8_crit_edge:  ; preds = %dec_label_pc_12220
  %.pre200 = mul i32 %v0_122d8.pre, 8
  br label %dec_label_pc_122d8

dec_label_pc_12228:                               ; preds = %dec_label_pc_12220
  %v4_12228 = mul i32 %v0_122d8.pre, 8
  %v5_12228 = add i32 %v4_12228, %v0_12134
  store i32 %v5_12228, i32* %r3.global-to-local, align 4
  %v1_1222c = add i32 %v5_12228, -8
  store i32 %v1_1222c, i32* %r1.global-to-local, align 4
  %v1_12230 = add i32 %v5_12228, 4
  %v2_12230 = inttoptr i32 %v1_12230 to i32*
  %storemerge.pre = load i32, i32* %v2_12230, align 4
  br label %dec_label_pc_122d0

dec_label_pc_12238:                               ; preds = %dec_label_pc_122d0
  %v1_12238 = add i32 %v1_12260, 4
  %v2_12238 = inttoptr i32 %v1_12238 to i32*
  %v3_12238 = load i32, i32* %v2_12238, align 4
  store i32 %v3_12238, i32* %r3.global-to-local, align 4
  %v1_1223c = and i32 %v3_12238, -4
  store i32 %v1_1223c, i32* %r2.global-to-local, align 4
  %v3_12240 = icmp ult i32 %v1_1223c, %v0_12220
  %v1_12244 = add i32 %v1_12260, 12
  %v2_12244 = inttoptr i32 %v1_12244 to i32*
  %v3_12244 = load i32, i32* %v2_12244, align 4
  store i32 %v3_12244, i32* %r0.global-to-local, align 4
  br i1 %v3_12240, label %dec_label_pc_122d0, label %dec_label_pc_1224c

dec_label_pc_1224c:                               ; preds = %dec_label_pc_12238
  %v1_1224c = add i32 %v1_12260, 8
  %v2_1224c = inttoptr i32 %v1_1224c to i32*
  %v3_1224c = load i32, i32* %v2_1224c, align 4
  store i32 %v3_1224c, i32* %r1.global-to-local, align 4
  %v1_12250 = add i32 %v3_1224c, 12
  %v2_12250 = inttoptr i32 %v1_12250 to i32*
  %v3_12250 = load i32, i32* %v2_12250, align 4
  store i32 %v3_12250, i32* %r3.global-to-local, align 4
  %v9_12254 = icmp eq i32 %v3_12250, %v1_12260
  br i1 %v9_12254, label %dec_label_pc_1225c, label %dec_label_pc_12268

dec_label_pc_1225c:                               ; preds = %dec_label_pc_1224c
  %v1_1225c = add i32 %v3_12244, 8
  %v2_1225c = inttoptr i32 %v1_1225c to i32*
  %v3_1225c = load i32, i32* %v2_1225c, align 4
  store i32 %v3_1225c, i32* %r3.global-to-local, align 4
  %v9_12260 = icmp eq i32 %v3_1225c, %v1_12260
  br i1 %v9_12260, label %dec_label_pc_1226c, label %dec_label_pc_12268

dec_label_pc_12268:                               ; preds = %dec_label_pc_1224c, %dec_label_pc_1225c
  %v0_12268 = call i32 @function_13260()
  store i32 %v0_12268, i32* %r0.global-to-local, align 4
  %v0_1226c.pre = load i32, i32* @sl, align 4
  %v1_1226c.pre = load i32, i32* @r2, align 4
  %v0_12274.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_1226c

dec_label_pc_1226c:                               ; preds = %dec_label_pc_1225c, %dec_label_pc_12268
  %v1_12274 = phi i32 [ %v3_12244, %dec_label_pc_1225c ], [ %v0_12268, %dec_label_pc_12268 ]
  %v0_12274 = phi i32 [ %v3_1224c, %dec_label_pc_1225c ], [ %v0_12274.pre, %dec_label_pc_12268 ]
  %v1_1226c = phi i32 [ %v1_1223c, %dec_label_pc_1225c ], [ %v1_1226c.pre, %dec_label_pc_12268 ]
  %v0_1226c = phi i32 [ %v0_12220, %dec_label_pc_1225c ], [ %v0_1226c.pre, %dec_label_pc_12268 ]
  %v2_1226c = sub i32 %v1_1226c, %v0_1226c
  store i32 %v2_1226c, i32* %lr.global-to-local, align 4
  %v2_12274 = add i32 %v1_12274, 8
  %v3_12274 = inttoptr i32 %v2_12274 to i32*
  store i32 %v0_12274, i32* %v3_12274, align 4
  %v0_12278 = load i32, i32* %r0.global-to-local, align 4
  %v1_12278 = load i32, i32* %r1.global-to-local, align 4
  %v2_12278 = add i32 %v1_12278, 12
  %v3_12278 = inttoptr i32 %v2_12278 to i32*
  store i32 %v0_12278, i32* %v3_12278, align 4
  %v0_1227c = load i32, i32* %ip.global-to-local, align 4
  %v1_1227c = add i32 %v0_1227c, 8
  store i32 %v1_1227c, i32* %r0.global-to-local, align 4
  %tmp207 = icmp ugt i32 %v2_1226c, 15
  br i1 %tmp207, label %dec_label_pc_1229c, label %dec_label_pc_12284

dec_label_pc_12284:                               ; preds = %dec_label_pc_1226c
  %v1_12284 = load i32, i32* %r2.global-to-local, align 4
  %v2_12284 = add i32 %v1_12284, %v0_1227c
  store i32 %v2_12284, i32* %r2.global-to-local, align 4
  %v1_12288 = add i32 %v2_12284, 4
  %v2_12288 = inttoptr i32 %v1_12288 to i32*
  %v3_12288 = load i32, i32* %v2_12288, align 4
  store i32 %v3_12288, i32* %r3.global-to-local, align 4
  store i32 %v1_1227c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12290

dec_label_pc_12290.loopexit:                      ; preds = %dec_label_pc_12130
  %v1_1213c = load i32, i32* @r6, align 4
  %v2_1213c = load i32, i32* @sl, align 4
  %v3_1213c = add i32 %v2_1213c, %v1_1213c
  store i32 %v3_1213c, i32* %r2.global-to-local, align 4
  %v2_12140 = add i32 %v3_1213c, 4
  %v3_12140 = inttoptr i32 %v2_12140 to i32*
  %v4_12140 = load i32, i32* %v3_12140, align 4
  store i32 %v4_12140, i32* %r3.global-to-local, align 4
  %v2_12144 = add i32 %v1_1213c, 8
  store i32 %v2_12144, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12290

dec_label_pc_12290:                               ; preds = %.dec_label_pc_12290_crit_edge, %dec_label_pc_12290.loopexit, %dec_label_pc_12284
  %v1_12294 = phi i32 [ %v4_123b8, %.dec_label_pc_12290_crit_edge ], [ %v3_1213c, %dec_label_pc_12290.loopexit ], [ %v2_12284, %dec_label_pc_12284 ]
  %v0_12290 = phi i32 [ %v7_123b8, %.dec_label_pc_12290_crit_edge ], [ %v4_12140, %dec_label_pc_12290.loopexit ], [ %v3_12288, %dec_label_pc_12284 ]
  %v1_12290 = or i32 %v0_12290, 1
  store i32 %v1_12290, i32* %r3.global-to-local, align 4
  %v2_12294 = add i32 %v1_12294, 4
  %v3_12294 = inttoptr i32 %v2_12294 to i32*
  store i32 %v1_12290, i32* %v3_12294, align 4
  br label %dec_label_pc_12850

dec_label_pc_1229c:                               ; preds = %dec_label_pc_1226c
  %v1_1229c = load i32, i32* @sl, align 4
  %v2_1229c = add i32 %v1_1229c, %v0_1227c
  store i32 %v2_1229c, i32* %r2.global-to-local, align 4
  %v1_122a0 = or i32 %v1_1229c, 1
  store i32 %v1_122a0, i32* %r3.global-to-local, align 4
  %v0_122a4 = load i32, i32* %lr.global-to-local, align 4
  %v1_122a4 = or i32 %v0_122a4, 1
  store i32 %v1_122a4, i32* %r1.global-to-local, align 4
  store i32 %v1_1227c, i32* %r4.global-to-local, align 4
  %v2_122ac = add i32 %v0_1227c, 4
  %v3_122ac = inttoptr i32 %v2_122ac to i32*
  store i32 %v1_122a0, i32* %v3_122ac, align 4
  %v0_122b0 = load i32, i32* %r2.global-to-local, align 4
  %v1_122b0 = load i32, i32* @r6, align 4
  %v2_122b0 = add i32 %v1_122b0, 8
  %v3_122b0 = inttoptr i32 %v2_122b0 to i32*
  store i32 %v0_122b0, i32* %v3_122b0, align 4
  %v0_122b4 = load i32, i32* %r2.global-to-local, align 4
  %v1_122b4 = load i32, i32* @r6, align 4
  %v2_122b4 = add i32 %v1_122b4, 12
  %v3_122b4 = inttoptr i32 %v2_122b4 to i32*
  store i32 %v0_122b4, i32* %v3_122b4, align 4
  %v0_122b8 = load i32, i32* %lr.global-to-local, align 4
  %v1_122b8 = load i32, i32* %r2.global-to-local, align 4
  %v3_122b8 = add i32 %v1_122b8, %v0_122b8
  %v4_122b8 = inttoptr i32 %v3_122b8 to i32*
  store i32 %v0_122b8, i32* %v4_122b8, align 4
  %v0_122bc = load i32, i32* %r1.global-to-local, align 4
  %v1_122bc = load i32, i32* %r2.global-to-local, align 4
  %v2_122bc = add i32 %v1_122bc, 4
  %v3_122bc = inttoptr i32 %v2_122bc to i32*
  store i32 %v0_122bc, i32* %v3_122bc, align 4
  %v0_122c0 = load i32, i32* @r6, align 4
  %v1_122c0 = load i32, i32* %r2.global-to-local, align 4
  %v2_122c0 = add i32 %v1_122c0, 12
  %v3_122c0 = inttoptr i32 %v2_122c0 to i32*
  store i32 %v0_122c0, i32* %v3_122c0, align 4
  %v0_122c4 = load i32, i32* @r6, align 4
  %v1_122c4 = load i32, i32* %r2.global-to-local, align 4
  %v2_122c4 = add i32 %v1_122c4, 8
  %v3_122c4 = inttoptr i32 %v2_122c4 to i32*
  store i32 %v0_122c4, i32* %v3_122c4, align 4
  br label %dec_label_pc_12850

dec_label_pc_122d0:                               ; preds = %dec_label_pc_12238, %dec_label_pc_12228
  %v1_12260 = phi i32 [ %storemerge.pre, %dec_label_pc_12228 ], [ %v3_12244, %dec_label_pc_12238 ]
  store i32 %v1_12260, i32* %ip.global-to-local, align 4
  %v9_122d0 = icmp eq i32 %v1_12260, %v1_1222c
  br i1 %v9_122d0, label %dec_label_pc_122d8.loopexit, label %dec_label_pc_12238

dec_label_pc_122d8.loopexit:                      ; preds = %dec_label_pc_122d0
  br label %dec_label_pc_122d8

dec_label_pc_122d8:                               ; preds = %dec_label_pc_12220.dec_label_pc_122d8_crit_edge, %dec_label_pc_122d8.loopexit
  %v4_12308.pre-phi = phi i32 [ %.pre200, %dec_label_pc_12220.dec_label_pc_122d8_crit_edge ], [ %v4_12228, %dec_label_pc_122d8.loopexit ]
  %v1_122d8 = add i32 %v0_122d8.pre, 1
  store i32 %v1_122d8, i32* %r2.global-to-local, align 4
  %v1_122dc = urem i32 %v1_122d8, 32
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_d3ec.93 to i32), i32 73612), i32* %r0.global-to-local, align 4
  %v6_122e8 = shl i32 1, %v1_122dc
  store i32 %v6_122e8, i32* %ip.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_122f0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_d3ec.93 to i32), i32 73644) to i32*), align 4
  store i32 %v4_122f0, i32* %r3.global-to-local, align 4
  %v3_122f4 = udiv i32 %v1_122d8, 32
  store i32 %v3_122f4, i32* @r5, align 4
  %v4_122f8 = mul nuw nsw i32 %v3_122f4, 4
  %v5_122f8 = add i32 %v4_122f0, %v4_122f8
  store i32 %v5_122f8, i32* %r2.global-to-local, align 4
  %v1_122fc = add i32 %v5_122f8, 820
  %v2_122fc = inttoptr i32 %v1_122fc to i32*
  %v3_122fc = load i32, i32* %v2_122fc, align 4
  store i32 %v3_122fc, i32* @r4, align 4
  %v1_12300 = add i32 %v4_122f0, 52
  store i32 %v1_12300, i32* %r3.global-to-local, align 4
  store i32 32, i32* @r8, align 4
  %v5_12308 = add i32 %v1_12300, %v4_12308.pre-phi
  store i32 %v5_12308, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1230c

dec_label_pc_1230c:                               ; preds = %dec_label_pc_12374, %dec_label_pc_122d8
  %v1_12314 = phi i32 [ %v1_12314.pre, %dec_label_pc_12374 ], [ %v3_122fc, %dec_label_pc_122d8 ]
  %v0_12314 = phi i32 [ %v0_1230c.pre, %dec_label_pc_12374 ], [ %v6_122e8, %dec_label_pc_122d8 ]
  %v1_1230c = sub i32 1, %v0_12314
  %v2_1230c = icmp ult i32 %v0_12314, 2
  %v1_1230c. = select i1 %v2_1230c, i32 %v1_1230c, i32 0
  store i32 %v1_1230c., i32* %r3.global-to-local, align 4
  %tmp141 = icmp ugt i32 %v0_12314, %v1_12314
  br i1 %tmp141, label %.thread12, label %bb142

.thread12:                                        ; preds = %dec_label_pc_1230c
  %v5_12318 = or i32 %v1_1230c., 1
  store i32 %v5_12318, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_12324.preheader

bb142:                                            ; preds = %dec_label_pc_1230c
  %v2_1231c = icmp eq i32 %v1_1230c., 0
  br i1 %v2_1231c, label %.dec_label_pc_12360.preheader_crit_edge, label %dec_label_pc_12324.preheader

.dec_label_pc_12360.preheader_crit_edge:          ; preds = %bb142
  %v0_1235854.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12360.preheader

dec_label_pc_12324.preheader:                     ; preds = %bb142, %.thread12
  %v0_12324.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_12324

dec_label_pc_12324:                               ; preds = %dec_label_pc_12324.preheader, %dec_label_pc_12330
  %v0_12324 = phi i32 [ %v0_12324.pre, %dec_label_pc_12324.preheader ], [ %v1_12324, %dec_label_pc_12330 ]
  %v1_12324 = add i32 %v0_12324, 1
  store i32 %v1_12324, i32* @r5, align 4
  %tmp208 = icmp ugt i32 %v1_12324, 2
  br i1 %tmp208, label %dec_label_pc_12404.loopexit, label %dec_label_pc_12330

dec_label_pc_12330:                               ; preds = %dec_label_pc_12324
  store i32 add (i32 ptrtoint (i32* @global_var_d3ec.93 to i32), i32 73612), i32* %r3.global-to-local, align 4
  %v1_12334 = load i32, i32* @r8, align 4
  %v2_12334 = add i32 %v1_12334, add (i32 ptrtoint (i32* @global_var_d3ec.93 to i32), i32 73612)
  %v3_12334 = inttoptr i32 %v2_12334 to i32*
  %v4_12334 = load i32, i32* %v3_12334, align 4
  store i32 %v4_12334, i32* %r2.global-to-local, align 4
  %v4_12338 = mul i32 %v1_12324, 4
  %v5_12338 = add i32 %v4_12334, %v4_12338
  store i32 %v5_12338, i32* %r3.global-to-local, align 4
  %v1_1233c = add i32 %v5_12338, 820
  %v2_1233c = inttoptr i32 %v1_1233c to i32*
  %v3_1233c = load i32, i32* %v2_1233c, align 4
  store i32 %v3_1233c, i32* @r4, align 4
  %v2_12340 = icmp eq i32 %v3_1233c, 0
  br i1 %v2_12340, label %dec_label_pc_12324, label %dec_label_pc_12348

dec_label_pc_12348:                               ; preds = %dec_label_pc_12330
  %v4_12348 = mul i32 %v1_12324, 256
  %v5_12348 = add i32 %v4_12334, %v4_12348
  store i32 %v5_12348, i32* %r3.global-to-local, align 4
  %v1_1234c = add i32 %v5_12348, 44
  store i32 %v1_1234c, i32* %r0.global-to-local, align 4
  %v0_12350 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_12350, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_12360.preheader

dec_label_pc_12360.preheader:                     ; preds = %.dec_label_pc_12360.preheader_crit_edge, %dec_label_pc_12348
  %v0_1235854 = phi i32 [ %v1_1234c, %dec_label_pc_12348 ], [ %v0_1235854.pre, %.dec_label_pc_12360.preheader_crit_edge ]
  %v0_1237c = phi i32 [ %v3_1233c, %dec_label_pc_12348 ], [ %v1_12314, %.dec_label_pc_12360.preheader_crit_edge ]
  %ip.promoted = phi i32 [ %v0_12350, %dec_label_pc_12348 ], [ %v0_12314, %.dec_label_pc_12360.preheader_crit_edge ]
  %v2_1236051 = and i32 %ip.promoted, %v0_1237c
  %v4_1236053 = icmp eq i32 %v2_1236051, 0
  br i1 %v4_1236053, label %dec_label_pc_12358, label %dec_label_pc_12368

dec_label_pc_12358:                               ; preds = %dec_label_pc_12360.preheader, %dec_label_pc_12358
  %v2_1235c56 = phi i32 [ %v2_1235c, %dec_label_pc_12358 ], [ %ip.promoted, %dec_label_pc_12360.preheader ]
  %v0_1235855 = phi i32 [ %v1_12358, %dec_label_pc_12358 ], [ %v0_1235854, %dec_label_pc_12360.preheader ]
  %v1_12358 = add i32 %v0_1235855, 8
  %v2_1235c = mul i32 %v2_1235c56, 2
  %v2_12360 = and i32 %v2_1235c, %v0_1237c
  %v4_12360 = icmp eq i32 %v2_12360, 0
  br i1 %v4_12360, label %dec_label_pc_12358, label %dec_label_pc_12360.dec_label_pc_12368_crit_edge

dec_label_pc_12360.dec_label_pc_12368_crit_edge:  ; preds = %dec_label_pc_12358
  store i32 %v1_12358, i32* %r0.global-to-local, align 4
  store i32 %v2_1235c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_12368

dec_label_pc_12368:                               ; preds = %dec_label_pc_12360.dec_label_pc_12368_crit_edge, %dec_label_pc_12360.preheader
  %v0_12388 = phi i32 [ %v2_1235c, %dec_label_pc_12360.dec_label_pc_12368_crit_edge ], [ %ip.promoted, %dec_label_pc_12360.preheader ]
  %v0_123ac = phi i32 [ %v1_12358, %dec_label_pc_12360.dec_label_pc_12368_crit_edge ], [ %v0_1235854, %dec_label_pc_12360.preheader ]
  %v1_12368 = add i32 %v0_123ac, 12
  %v2_12368 = inttoptr i32 %v1_12368 to i32*
  %v3_12368 = load i32, i32* %v2_12368, align 4
  store i32 %v3_12368, i32* @lr, align 4
  %v9_1236c = icmp eq i32 %v3_12368, %v0_123ac
  br i1 %v9_1236c, label %dec_label_pc_12374, label %dec_label_pc_12394

dec_label_pc_12374:                               ; preds = %dec_label_pc_12368
  store i32 add (i32 ptrtoint (i32* @global_var_d3ec.93 to i32), i32 73612), i32* %r0.global-to-local, align 4
  %v1_12378 = load i32, i32* @r8, align 4
  %v2_12378 = add i32 %v1_12378, add (i32 ptrtoint (i32* @global_var_d3ec.93 to i32), i32 73612)
  %v3_12378 = inttoptr i32 %v2_12378 to i32*
  %v4_12378 = load i32, i32* %v3_12378, align 4
  %v2_1237c = sub i32 -1, %v0_12388
  %v3_1237c = and i32 %v0_1237c, %v2_1237c
  store i32 %v3_1237c, i32* @r4, align 4
  %v1_12380 = load i32, i32* @r5, align 4
  %v4_12380 = mul i32 %v1_12380, 4
  %v5_12380 = add i32 %v4_12380, %v4_12378
  store i32 %v5_12380, i32* %r3.global-to-local, align 4
  %v1_12384 = add i32 %v0_123ac, 8
  store i32 %v1_12384, i32* %r0.global-to-local, align 4
  %v2_12388 = mul i32 %v0_12388, 2
  store i32 %v2_12388, i32* %ip.global-to-local, align 4
  %v2_1238c = add i32 %v5_12380, 820
  %v3_1238c = inttoptr i32 %v2_1238c to i32*
  store i32 %v3_1237c, i32* %v3_1238c, align 4
  %v0_1230c.pre = load i32, i32* %ip.global-to-local, align 4
  %v1_12314.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1230c

dec_label_pc_12394:                               ; preds = %dec_label_pc_12368
  %v1_12394 = add i32 %v3_12368, 4
  %v2_12394 = inttoptr i32 %v1_12394 to i32*
  %v3_12394 = load i32, i32* %v2_12394, align 4
  store i32 %v3_12394, i32* %r3.global-to-local, align 4
  %v1_12398 = and i32 %v3_12394, -4
  store i32 %v1_12398, i32* %r2.global-to-local, align 4
  %v0_1239c = load i32, i32* @sl, align 4
  %v2_1239c = sub i32 %v1_12398, %v0_1239c
  store i32 %v2_1239c, i32* %ip.global-to-local, align 4
  %v1_123a0 = add i32 %v3_12368, 12
  %v2_123a0 = inttoptr i32 %v1_123a0 to i32*
  %v3_123a0 = load i32, i32* %v2_123a0, align 4
  store i32 %v3_123a0, i32* %r3.global-to-local, align 4
  %tmp209 = icmp ult i32 %v2_1239c, 16
  br i1 %tmp209, label %bb143, label %bb144

bb143:                                            ; preds = %dec_label_pc_12394
  %v6_123a8 = add i32 %v1_12398, %v3_12368
  store i32 %v6_123a8, i32* %r2.global-to-local, align 4
  br label %bb144

bb144:                                            ; preds = %dec_label_pc_12394, %bb143
  %v2_123ac = add i32 %v3_123a0, 8
  %v3_123ac = inttoptr i32 %v2_123ac to i32*
  store i32 %v0_123ac, i32* %v3_123ac, align 4
  %v0_123b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_123b0 = load i32, i32* %r0.global-to-local, align 4
  %v2_123b0 = add i32 %v1_123b0, 12
  %v3_123b0 = inttoptr i32 %v2_123b0 to i32*
  store i32 %v0_123b0, i32* %v3_123b0, align 4
  %v4_123b4 = load i32, i32* @lr, align 4
  br i1 %tmp209, label %.dec_label_pc_12290_crit_edge, label %dec_label_pc_123c0

.dec_label_pc_12290_crit_edge:                    ; preds = %bb144
  %v5_123b4 = add i32 %v4_123b4, 8
  store i32 %v5_123b4, i32* %r4.global-to-local, align 4
  %v4_123b8 = load i32, i32* %r2.global-to-local, align 4
  %v5_123b8 = add i32 %v4_123b8, 4
  %v6_123b8 = inttoptr i32 %v5_123b8 to i32*
  %v7_123b8 = load i32, i32* %v6_123b8, align 4
  store i32 %v7_123b8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_12290

dec_label_pc_123c0:                               ; preds = %bb144
  %v1_123c0 = load i32, i32* @sl, align 4
  %v2_123c0 = add i32 %v1_123c0, %v4_123b4
  store i32 %v2_123c0, i32* %r1.global-to-local, align 4
  %v1_123c8 = load i32, i32* @r6, align 4
  %v2_123c8 = add i32 %v1_123c8, 8
  %v3_123c8 = inttoptr i32 %v2_123c8 to i32*
  store i32 %v2_123c0, i32* %v3_123c8, align 4
  %v0_123cc = load i32, i32* %r1.global-to-local, align 4
  %v1_123cc = load i32, i32* @r6, align 4
  %v2_123cc = add i32 %v1_123cc, 12
  %v3_123cc = inttoptr i32 %v2_123cc to i32*
  store i32 %v0_123cc, i32* %v3_123cc, align 4
  %v0_123d0 = load i32, i32* @r6, align 4
  %v1_123d0 = load i32, i32* %r1.global-to-local, align 4
  %v2_123d0 = add i32 %v1_123d0, 8
  %v3_123d0 = inttoptr i32 %v2_123d0 to i32*
  store i32 %v0_123d0, i32* %v3_123d0, align 4
  %v0_123d4 = load i32, i32* @r6, align 4
  %v1_123d4 = load i32, i32* %r1.global-to-local, align 4
  %v2_123d4 = add i32 %v1_123d4, 12
  %v3_123d4 = inttoptr i32 %v2_123d4 to i32*
  store i32 %v0_123d4, i32* %v3_123d4, align 4
  %tmp210 = icmp ult i32 %v1_123c0, 256
  br i1 %tmp210, label %bb145, label %.thread121

bb145:                                            ; preds = %dec_label_pc_123c0
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_d3ec.93 to i32), i32 73612), i32* %r2.global-to-local, align 4
  %v8_123e0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_d3ec.93 to i32), i32 73644) to i32*), align 4
  store i32 %v8_123e0, i32* %r3.global-to-local, align 4
  %v4_123e4 = load i32, i32* %r1.global-to-local, align 4
  %v6_123e4 = add i32 %v8_123e0, 48
  %v7_123e4 = inttoptr i32 %v6_123e4 to i32*
  store i32 %v4_123e4, i32* %v7_123e4, align 4
  br label %.thread121

.thread121:                                       ; preds = %dec_label_pc_123c0, %bb145
  %v0_123e8 = load i32, i32* @sl, align 4
  %v1_123e8 = or i32 %v0_123e8, 1
  store i32 %v1_123e8, i32* %r2.global-to-local, align 4
  %v0_123ec = load i32, i32* %ip.global-to-local, align 4
  %v1_123ec = or i32 %v0_123ec, 1
  store i32 %v1_123ec, i32* %r3.global-to-local, align 4
  %v0_123f0 = load i32, i32* @lr, align 4
  %v1_123f0 = add i32 %v0_123f0, 8
  store i32 %v1_123f0, i32* %r4.global-to-local, align 4
  %v2_123f4 = add i32 %v0_123f0, 4
  %v3_123f4 = inttoptr i32 %v2_123f4 to i32*
  store i32 %v1_123e8, i32* %v3_123f4, align 4
  %v0_123f8 = load i32, i32* %ip.global-to-local, align 4
  %v1_123f8 = load i32, i32* %r1.global-to-local, align 4
  %v3_123f8 = add i32 %v1_123f8, %v0_123f8
  %v4_123f8 = inttoptr i32 %v3_123f8 to i32*
  store i32 %v0_123f8, i32* %v4_123f8, align 4
  %v0_123fc = load i32, i32* %r3.global-to-local, align 4
  %v1_123fc = load i32, i32* %r1.global-to-local, align 4
  %v2_123fc = add i32 %v1_123fc, 4
  %v3_123fc = inttoptr i32 %v2_123fc to i32*
  store i32 %v0_123fc, i32* %v3_123fc, align 4
  br label %dec_label_pc_12850

dec_label_pc_12404.loopexit:                      ; preds = %dec_label_pc_12324
  br label %dec_label_pc_12404

dec_label_pc_12404:                               ; preds = %dec_label_pc_12404.loopexit, %dec_label_pc_12018, %dec_label_pc_12020
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_d3ec.93 to i32), i32 73612), i32* %ip.global-to-local, align 4
  %v4_1240c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_d3ec.93 to i32), i32 73644) to i32*), align 4
  store i32 %v4_1240c, i32* @r0, align 4
  %v1_12410 = add i32 %v4_1240c, 44
  %v2_12410 = inttoptr i32 %v1_12410 to i32*
  %v3_12410 = load i32, i32* %v2_12410, align 4
  store i32 %v3_12410, i32* %ip.global-to-local, align 4
  %v1_12414 = add i32 %v3_12410, 4
  %v2_12414 = inttoptr i32 %v1_12414 to i32*
  %v3_12414 = load i32, i32* %v2_12414, align 4
  %v0_12418 = load i32, i32* @sl, align 4
  %v1_12418 = add i32 %v0_12418, 16
  store i32 %v1_12418, i32* %r1.global-to-local, align 4
  %v1_1241c = and i32 %v3_12414, -4
  store i32 %v1_1241c, i32* %r3.global-to-local, align 4
  %v3_12420 = icmp ult i32 %v1_1241c, %v1_12418
  br i1 %v3_12420, label %dec_label_pc_12450, label %dec_label_pc_1242c

dec_label_pc_1242c:                               ; preds = %dec_label_pc_12404
  %v2_1242c = sub i32 %v1_1241c, %v0_12418
  %v2_12430 = add i32 %v0_12418, %v3_12410
  store i32 %v2_12430, i32* %r1.global-to-local, align 4
  %v1_12434 = or i32 %v2_1242c, 1
  store i32 %v1_12434, i32* %r3.global-to-local, align 4
  %v1_12438 = or i32 %v0_12418, 1
  store i32 %v1_12438, i32* %r2.global-to-local, align 4
  %v1_1243c = add i32 %v3_12410, 8
  store i32 %v1_1243c, i32* %r4.global-to-local, align 4
  store i32 %v1_12438, i32* %v2_12414, align 4
  %v0_12444 = load i32, i32* %r1.global-to-local, align 4
  %v1_12444 = load i32, i32* @r0, align 4
  %v2_12444 = add i32 %v1_12444, 44
  %v3_12444 = inttoptr i32 %v2_12444 to i32*
  store i32 %v0_12444, i32* %v3_12444, align 4
  %v0_12448 = load i32, i32* %r3.global-to-local, align 4
  %v1_12448 = load i32, i32* %r1.global-to-local, align 4
  %v2_12448 = add i32 %v1_12448, 4
  %v3_12448 = inttoptr i32 %v2_12448 to i32*
  store i32 %v0_12448, i32* %v3_12448, align 4
  br label %dec_label_pc_12850

dec_label_pc_12450:                               ; preds = %dec_label_pc_12404
  %v1_12450 = inttoptr i32 %v4_1240c to i32*
  %v2_12450 = load i32, i32* %v1_12450, align 4
  store i32 %v2_12450, i32* %r3.global-to-local, align 4
  %v1_12454 = and i32 %v2_12450, 2
  store i32 %v1_12454, i32* %ip.global-to-local, align 4
  %v2_12454 = icmp eq i32 %v1_12454, 0
  %v1_12458 = add i32 %v4_1240c, 860
  %v2_12458 = inttoptr i32 %v1_12458 to i32*
  %v3_12458 = load i32, i32* %v2_12458, align 4
  store i32 %v3_12458, i32* %r1.global-to-local, align 4
  br i1 %v2_12454, label %dec_label_pc_12470, label %dec_label_pc_12460

dec_label_pc_12460:                               ; preds = %dec_label_pc_12450
  %v0_12460 = call i32 @function_12e30()
  %v0_12464 = load i32, i32* @sl, align 4
  %v1_12464 = add i32 %v0_12464, -7
  store i32 %v1_12464, i32* @r0, align 4
  %v0_12468 = call i32 @function_11f78()
  store i32 %v0_12468, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1284c

dec_label_pc_12470:                               ; preds = %dec_label_pc_12450
  %v1_12470 = add i32 %v4_1240c, 844
  %v2_12470 = inttoptr i32 %v1_12470 to i32*
  %v3_12470 = load i32, i32* %v2_12470, align 4
  store i32 %v3_12470, i32* %r3.global-to-local, align 4
  %v3_12474 = icmp ult i32 %v0_12418, %v3_12470
  %v1_12478 = add i32 %v3_12458, -1
  store i32 %v1_12478, i32* %sb.global-to-local, align 4
  br i1 %v3_12474, label %dec_label_pc_1254c, label %dec_label_pc_12480

dec_label_pc_12480:                               ; preds = %dec_label_pc_12470
  %v1_12480 = add i32 %v4_1240c, 852
  %v2_12480 = inttoptr i32 %v1_12480 to i32*
  %v3_12480 = load i32, i32* %v2_12480, align 4
  store i32 %v3_12480, i32* %r2.global-to-local, align 4
  %v1_12484 = add i32 %v4_1240c, 848
  %v2_12484 = inttoptr i32 %v1_12484 to i32*
  %v3_12484 = load i32, i32* %v2_12484, align 4
  store i32 %v3_12484, i32* %r3.global-to-local, align 4
  %v6_1248c = icmp slt i32 %v3_12484, %v3_12480
  br i1 %v6_1248c, label %dec_label_pc_12490, label %dec_label_pc_1254c

dec_label_pc_12490:                               ; preds = %dec_label_pc_12480
  %v1_12490 = add i32 %v0_12418, 10
  %v2_12494 = add i32 %v1_12490, %v3_12458
  store i32 %v2_12494, i32* %r3.global-to-local, align 4
  %v2_12498 = sub i32 0, %v3_12458
  %v3_12498 = and i32 %v2_12494, %v2_12498
  store i32 %v3_12498, i32* @r4, align 4
  %tmp211 = icmp ugt i32 %v3_12498, %v0_12418
  br i1 %tmp211, label %dec_label_pc_124a4, label %dec_label_pc_1254c

dec_label_pc_124a4:                               ; preds = %dec_label_pc_12490
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_12498, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_124bc = call i32 @function_14064(i32 0, i32 %v3_12498, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_124bc, i32* %r0.global-to-local, align 4
  %v7_124c0 = icmp eq i32 %v6_124bc, -1
  br i1 %v7_124c0, label %dec_label_pc_124a4.dec_label_pc_1254c_crit_edge, label %dec_label_pc_124c8

dec_label_pc_124a4.dec_label_pc_1254c_crit_edge:  ; preds = %dec_label_pc_124a4
  %v1_12570.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_1254c

dec_label_pc_124c8:                               ; preds = %dec_label_pc_124a4
  %v1_124c8 = urem i32 %v6_124bc, 8
  store i32 %v1_124c8, i32* %r2.global-to-local, align 4
  %v2_124c8 = icmp eq i32 %v1_124c8, 0
  br i1 %v2_124c8, label %bb146, label %.thread25

.thread25:                                        ; preds = %dec_label_pc_124c8
  %v2_124cc = sub nsw i32 8, %v1_124c8
  store i32 %v2_124cc, i32* %r3.global-to-local, align 4
  %v2_124d0 = load i32, i32* @r4, align 4
  %v3_124d0 = sub i32 %v2_124d0, %v2_124cc
  %v3_124d4 = add i32 %v2_124cc, %v6_124bc
  store i32 %v3_124d4, i32* %lr.global-to-local, align 4
  %v2_124dc = or i32 %v3_124d0, 2
  store i32 %v2_124dc, i32* %r2.global-to-local, align 4
  %v5_124e4 = inttoptr i32 %v3_124d4 to i32*
  store i32 %v2_124cc, i32* %v5_124e4, align 4
  %v1_124e8 = load i32, i32* %r2.global-to-local, align 4
  %v2_124e8 = load i32, i32* %lr.global-to-local, align 4
  %v3_124e8 = add i32 %v2_124e8, 4
  %v4_124e8 = inttoptr i32 %v3_124e8 to i32*
  store i32 %v1_124e8, i32* %v4_124e8, align 4
  br label %.thread27

bb146:                                            ; preds = %dec_label_pc_124c8
  store i32 %v6_124bc, i32* %lr.global-to-local, align 4
  %v1_124e047 = load i32, i32* @r4, align 4
  %v2_124e048 = or i32 %v1_124e047, 2
  store i32 %v2_124e048, i32* %r3.global-to-local, align 4
  %v3_124ec = inttoptr i32 %v6_124bc to i32*
  store i32 0, i32* %v3_124ec, align 4
  %v1_124f0 = load i32, i32* %r3.global-to-local, align 4
  %v2_124f0 = load i32, i32* %lr.global-to-local, align 4
  %v3_124f0 = add i32 %v2_124f0, 4
  %v4_124f0 = inttoptr i32 %v3_124f0 to i32*
  store i32 %v1_124f0, i32* %v4_124f0, align 4
  br label %.thread27

.thread27:                                        ; preds = %.thread25, %bb146
  store i32 add (i32 ptrtoint (i32* @global_var_d3ec.93 to i32), i32 73612), i32* %r2.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_124fc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_d3ec.93 to i32), i32 73644) to i32*), align 4
  store i32 %v4_124fc, i32* %ip.global-to-local, align 4
  %v1_12500 = add i32 %v4_124fc, 848
  %v2_12500 = inttoptr i32 %v1_12500 to i32*
  %v3_12500 = load i32, i32* %v2_12500, align 4
  store i32 %v3_12500, i32* %r3.global-to-local, align 4
  %v1_12504 = add i32 %v4_124fc, 856
  %v2_12504 = inttoptr i32 %v1_12504 to i32*
  %v3_12504 = load i32, i32* %v2_12504, align 4
  store i32 %v3_12504, i32* %r2.global-to-local, align 4
  %v1_12508 = add i32 %v3_12500, 1
  store i32 %v1_12508, i32* %r3.global-to-local, align 4
  %v7_12510 = icmp sgt i32 %v1_12508, %v3_12504
  br i1 %v7_12510, label %bb147, label %bb148

bb147:                                            ; preds = %.thread27
  store i32 %v1_12508, i32* %v2_12504, align 4
  %v0_12514.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_12514.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb148

bb148:                                            ; preds = %.thread27, %bb147
  %v1_12514 = phi i32 [ %v4_124fc, %.thread27 ], [ %v1_12514.pre, %bb147 ]
  %v0_12514 = phi i32 [ %v1_12508, %.thread27 ], [ %v0_12514.pre, %bb147 ]
  %v2_12514 = add i32 %v1_12514, 848
  %v3_12514 = inttoptr i32 %v2_12514 to i32*
  store i32 %v0_12514, i32* %v3_12514, align 4
  %v0_12518 = load i32, i32* %ip.global-to-local, align 4
  %v1_12518 = add i32 %v0_12518, 868
  %v2_12518 = inttoptr i32 %v1_12518 to i32*
  %v3_12518 = load i32, i32* %v2_12518, align 4
  store i32 %v3_12518, i32* %r3.global-to-local, align 4
  %v1_1251c = add i32 %v0_12518, 880
  %v2_1251c = inttoptr i32 %v1_1251c to i32*
  %v3_1251c = load i32, i32* %v2_1251c, align 4
  store i32 %v3_1251c, i32* %r2.global-to-local, align 4
  %v0_12520 = load i32, i32* @r4, align 4
  %v2_12520 = add i32 %v0_12520, %v3_12518
  store i32 %v2_12520, i32* %r1.global-to-local, align 4
  %v1_12524 = add i32 %v0_12518, 872
  %v2_12524 = inttoptr i32 %v1_12524 to i32*
  %v3_12524 = load i32, i32* %v2_12524, align 4
  store i32 %v3_12524, i32* %r3.global-to-local, align 4
  %v1_1252c = add i32 %v0_12518, 884
  %v2_1252c = inttoptr i32 %v1_1252c to i32*
  %v3_1252c = load i32, i32* %v2_1252c, align 4
  store i32 %v3_1252c, i32* %r2.global-to-local, align 4
  %tmp212 = icmp ugt i32 %v2_12520, %v3_1251c
  br i1 %tmp212, label %bb149, label %bb150

bb149:                                            ; preds = %bb148
  store i32 %v2_12520, i32* %v2_1251c, align 4
  %v0_12534.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_12534.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %bb148, %bb149
  %v1_12534 = phi i32 [ %v0_12518, %bb148 ], [ %v1_12534.pre, %bb149 ]
  %v0_12534 = phi i32 [ %v2_12520, %bb148 ], [ %v0_12534.pre, %bb149 ]
  %v2_12534 = add i32 %v1_12534, 868
  %v3_12534 = inttoptr i32 %v2_12534 to i32*
  store i32 %v0_12534, i32* %v3_12534, align 4
  %v0_12538 = load i32, i32* %r1.global-to-local, align 4
  %v1_12538 = load i32, i32* %r3.global-to-local, align 4
  %v2_12538 = add i32 %v1_12538, %v0_12538
  store i32 %v2_12538, i32* %r1.global-to-local, align 4
  %v1_1253c = load i32, i32* %r2.global-to-local, align 4
  %v0_12540 = load i32, i32* %lr.global-to-local, align 4
  %v1_12540 = add i32 %v0_12540, 8
  store i32 %v1_12540, i32* %r0.global-to-local, align 4
  %tmp213 = icmp ugt i32 %v2_12538, %v1_1253c
  br i1 %tmp213, label %bb151, label %dec_label_pc_1284c

bb151:                                            ; preds = %bb150
  %v5_12544 = load i32, i32* %ip.global-to-local, align 4
  %v6_12544 = add i32 %v5_12544, 884
  %v7_12544 = inttoptr i32 %v6_12544 to i32*
  store i32 %v2_12538, i32* %v7_12544, align 4
  br label %dec_label_pc_1284c

dec_label_pc_1254c:                               ; preds = %dec_label_pc_12490, %dec_label_pc_12470, %dec_label_pc_124a4.dec_label_pc_1254c_crit_edge, %dec_label_pc_12480
  %v1_12570 = phi i32 [ %v1_12570.pre, %dec_label_pc_124a4.dec_label_pc_1254c_crit_edge ], [ %v0_12418, %dec_label_pc_12480 ], [ %v0_12418, %dec_label_pc_12470 ], [ %v0_12418, %dec_label_pc_12490 ]
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_d3ec.93 to i32), i32 73612), i32* %ip.global-to-local, align 4
  %v4_12554 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_d3ec.93 to i32), i32 73644) to i32*), align 4
  store i32 %v4_12554, i32* %r3.global-to-local, align 4
  %v1_12558 = add i32 %v4_12554, 44
  %v2_12558 = inttoptr i32 %v1_12558 to i32*
  %v3_12558 = load i32, i32* %v2_12558, align 4
  store i32 %v3_12558, i32* %r0.global-to-local, align 4
  %v1_1255c = add i32 %v4_12554, 864
  %v2_1255c = inttoptr i32 %v1_1255c to i32*
  %v3_1255c = load i32, i32* %v2_1255c, align 4
  store i32 %v3_1255c, i32* %r2.global-to-local, align 4
  %v1_12560 = add i32 %v4_12554, 840
  %v2_12560 = inttoptr i32 %v1_12560 to i32*
  %v3_12560 = load i32, i32* %v2_12560, align 4
  store i32 %v3_12560, i32* %r3.global-to-local, align 4
  %v1_12564 = add i32 %v3_12558, 4
  %v2_12564 = inttoptr i32 %v1_12564 to i32*
  %v3_12564 = load i32, i32* %v2_12564, align 4
  store i32 %v3_12564, i32* %r1.global-to-local, align 4
  %v1_1256c = urem i32 %v3_1255c, 2
  %v2_1256c = icmp eq i32 %v1_1256c, 0
  %v1_12568 = add i32 %v1_12570, 16
  %v2_12570 = add i32 %v1_12568, %v3_12560
  store i32 %v2_12570, i32* %r3.global-to-local, align 4
  %v1_12574 = and i32 %v3_12564, -4
  store i32 %v1_12574, i32* @r8, align 4
  br i1 %v2_1256c, label %bb153, label %bb152

bb152:                                            ; preds = %dec_label_pc_1254c
  %v3_12578 = sub i32 %v2_12570, %v1_12574
  store i32 %v3_12578, i32* %r3.global-to-local, align 4
  br label %bb153

bb153:                                            ; preds = %dec_label_pc_1254c, %bb152
  %v0_1257c = phi i32 [ %v2_12570, %dec_label_pc_1254c ], [ %v3_12578, %bb152 ]
  %v1_1257c = load i32, i32* %sb.global-to-local, align 4
  %v2_1257c = add i32 %v1_1257c, %v0_1257c
  store i32 %v2_1257c, i32* %r3.global-to-local, align 4
  %v1_12580 = sub i32 -1, %v1_1257c
  store i32 %v1_12580, i32* %fp.global-to-local, align 4
  %v2_12584 = and i32 %v2_1257c, %v1_12580
  store i32 %v2_12584, i32* @r5, align 4
  %tmp154 = icmp slt i32 %v2_12584, 1
  br i1 %tmp154, label %dec_label_pc_125a8, label %dec_label_pc_12594

dec_label_pc_12594:                               ; preds = %bb153
  store i32 %v2_12584, i32* %r0.global-to-local, align 4
  %v1_12598 = call i32 @function_142f0(i32 %v2_12584)
  store i32 %v1_12598, i32* %r0.global-to-local, align 4
  %v3_1259c = icmp eq i32 %v1_12598, -1
  store i32 %v1_12598, i32* @r4, align 4
  br i1 %v3_1259c, label %dec_label_pc_125a8, label %dec_label_pc_12614

dec_label_pc_125a8:                               ; preds = %dec_label_pc_12594, %bb153
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_d3ec.93 to i32), i32 73612), i32* %r1.global-to-local, align 4
  %v4_125b0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_d3ec.93 to i32), i32 73644) to i32*), align 4
  store i32 %v4_125b0, i32* %r6.global-to-local, align 4
  %v1_125b4 = add i32 %v4_125b0, 864
  %v2_125b4 = inttoptr i32 %v1_125b4 to i32*
  %v3_125b4 = load i32, i32* %v2_125b4, align 4
  store i32 %v3_125b4, i32* %r3.global-to-local, align 4
  %v1_125b8 = urem i32 %v3_125b4, 2
  %v2_125b8 = icmp eq i32 %v1_125b8, 0
  br i1 %v2_125b8, label %.thread29thread-pre-split, label %bb155

bb155:                                            ; preds = %dec_label_pc_125a8
  %v1_125bc = load i32, i32* @r8, align 4
  %v2_125bc = load i32, i32* %sb.global-to-local, align 4
  %v3_125bc = add i32 %v2_125bc, %v1_125bc
  %v2_125c0 = load i32, i32* @r5, align 4
  %v3_125c0 = add i32 %v3_125bc, %v2_125c0
  store i32 %v3_125c0, i32* %r3.global-to-local, align 4
  %v2_125c4 = load i32, i32* %fp.global-to-local, align 4
  %v3_125c4 = and i32 %v2_125c4, %v3_125c0
  store i32 %v3_125c4, i32* @r5, align 4
  br label %.thread29

.thread29thread-pre-split:                        ; preds = %dec_label_pc_125a8
  %v0_125c8.pr = load i32, i32* @r5, align 4
  br label %.thread29

.thread29:                                        ; preds = %.thread29thread-pre-split, %bb155
  %v0_125c8 = phi i32 [ %v0_125c8.pr, %.thread29thread-pre-split ], [ %v3_125c4, %bb155 ]
  %v2_125c8 = icmp ugt i32 %v0_125c8, 1048575
  br i1 %v2_125c8, label %bb157, label %bb156

bb156:                                            ; preds = %.thread29
  store i32 1048576, i32* @r5, align 4
  br label %bb157

bb157:                                            ; preds = %.thread29, %bb156
  %v0_125e0 = phi i32 [ %v0_125c8, %.thread29 ], [ 1048576, %bb156 ]
  %v1_125d0 = load i32, i32* @sl, align 4
  %tmp214 = icmp ugt i32 %v0_125e0, %v1_125d0
  br i1 %tmp214, label %dec_label_pc_125d8, label %dec_label_pc_1283c

dec_label_pc_125d8:                               ; preds = %bb157
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_125e0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_125f4 = call i32 @function_14064(i32 0, i32 %v0_125e0, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_125f4, i32* %r0.global-to-local, align 4
  %v3_125f8 = icmp eq i32 %v6_125f4, -1
  %v8_125f8 = icmp eq i32 %v6_125f4, -1
  store i32 %v6_125f4, i32* @r4, align 4
  br i1 %v8_125f8, label %.thread32, label %bb158

bb158:                                            ; preds = %dec_label_pc_125d8
  %v1_12600 = load i32, i32* %r6.global-to-local, align 4
  %v2_12600 = add i32 %v1_12600, 864
  %v3_12600 = inttoptr i32 %v2_12600 to i32*
  %v4_12600 = load i32, i32* %v3_12600, align 4
  %v2_12604 = load i32, i32* @r5, align 4
  %v3_12604 = add i32 %v2_12604, %v6_125f4
  store i32 %v3_12604, i32* %r0.global-to-local, align 4
  %v2_12608 = and i32 %v4_12600, -2
  store i32 %v2_12608, i32* %r3.global-to-local, align 4
  store i32 %v2_12608, i32* %v3_12600, align 4
  br label %.thread32

.thread32:                                        ; preds = %dec_label_pc_125d8, %bb158
  br i1 %v3_125f8, label %dec_label_pc_12614, label %dec_label_pc_12618

dec_label_pc_12614:                               ; preds = %.thread32, %dec_label_pc_12594
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12618

dec_label_pc_12618:                               ; preds = %.thread32, %dec_label_pc_12614
  %v0_12618 = load i32, i32* @r4, align 4
  %v7_12618 = icmp eq i32 %v0_12618, -1
  br i1 %v7_12618, label %dec_label_pc_1283c, label %dec_label_pc_12620

dec_label_pc_12620:                               ; preds = %dec_label_pc_12618
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_d3ec.93 to i32), i32 73612), i32* %r2.global-to-local, align 4
  %v4_12628 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_d3ec.93 to i32), i32 73644) to i32*), align 4
  store i32 %v4_12628, i32* %ip.global-to-local, align 4
  store i32 %v3_12558, i32* %r2.global-to-local, align 4
  %v1_12630 = add i32 %v4_12628, 872
  %v2_12630 = inttoptr i32 %v1_12630 to i32*
  %v3_12630 = load i32, i32* %v2_12630, align 4
  %v1_12634 = load i32, i32* @r8, align 4
  %v2_12634 = add i32 %v1_12634, %v3_12558
  store i32 %v2_12634, i32* %r1.global-to-local, align 4
  %v0_12638 = load i32, i32* @r5, align 4
  %v2_12638 = add i32 %v0_12638, %v3_12630
  store i32 %v2_12638, i32* %r3.global-to-local, align 4
  %v9_1263c = icmp eq i32 %v0_12618, %v2_12634
  br i1 %v9_1263c, label %bb159, label %.thread122

.thread122:                                       ; preds = %dec_label_pc_12620
  store i32 %v2_12638, i32* %v2_12630, align 4
  br label %dec_label_pc_12658

bb159:                                            ; preds = %dec_label_pc_12620
  %v1_12640 = load i32, i32* %r0.global-to-local, align 4
  %v8_12640 = icmp eq i32 %v1_12640, -1
  store i32 %v2_12638, i32* %v2_12630, align 4
  br i1 %v8_12640, label %.thread34, label %dec_label_pc_12658

.thread34:                                        ; preds = %bb159
  %v1_12648 = load i32, i32* @r5, align 4
  %v2_12648 = load i32, i32* @r8, align 4
  %v3_12648 = add i32 %v2_12648, %v1_12648
  %v2_1264c = or i32 %v3_12648, 1
  store i32 %v2_1264c, i32* %r3.global-to-local, align 4
  %v2_12650 = load i32, i32* %r2.global-to-local, align 4
  %v3_12650 = add i32 %v2_12650, 4
  %v4_12650 = inttoptr i32 %v3_12650 to i32*
  store i32 %v2_1264c, i32* %v4_12650, align 4
  br label %dec_label_pc_127d0

dec_label_pc_12658:                               ; preds = %bb159, %.thread122
  %v0_1265c.pr = load i32, i32* @r8, align 4
  %v0_12658 = load i32, i32* %ip.global-to-local, align 4
  %v1_12658 = add i32 %v0_12658, 864
  %v2_12658 = inttoptr i32 %v1_12658 to i32*
  %v3_12658 = load i32, i32* %v2_12658, align 4
  store i32 %v3_12658, i32* %r2.global-to-local, align 4
  %v2_1265c = icmp eq i32 %v0_1265c.pr, 0
  br i1 %v2_1265c, label %.thread37, label %.thread36

.thread37:                                        ; preds = %dec_label_pc_12658
  store i32 0, i32* %r3.global-to-local, align 4
  br label %.thread40

.thread36:                                        ; preds = %dec_label_pc_12658
  %v2_12664 = urem i32 %v3_12658, 2
  store i32 %v2_12664, i32* %r3.global-to-local, align 4
  %v2_12668 = icmp eq i32 %v2_12664, 0
  br i1 %v2_12668, label %.thread40, label %dec_label_pc_12670

dec_label_pc_12670:                               ; preds = %.thread36
  %v0_12670 = load i32, i32* @r4, align 4
  %v1_12670 = load i32, i32* %r1.global-to-local, align 4
  %v3_12670 = icmp ult i32 %v0_12670, %v1_12670
  br i1 %v3_12670, label %bb160, label %.thread40

bb160:                                            ; preds = %dec_label_pc_12670
  %v2_12674 = and i32 %v3_12658, -2
  store i32 %v2_12674, i32* %r3.global-to-local, align 4
  store i32 %v2_12674, i32* %v2_12658, align 4
  br label %.thread40

.thread40:                                        ; preds = %dec_label_pc_12670, %.thread37, %.thread36, %bb160
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_d3ec.93 to i32), i32 73612), i32* %ip.global-to-local, align 4
  %v4_12684 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_d3ec.93 to i32), i32 73644) to i32*), align 4
  store i32 %v4_12684, i32* @r7, align 4
  %v1_12688 = add i32 %v4_12684, 864
  %v2_12688 = inttoptr i32 %v1_12688 to i32*
  %v3_12688 = load i32, i32* %v2_12688, align 4
  store i32 %v3_12688, i32* %r3.global-to-local, align 4
  %v1_1268c = urem i32 %v3_12688, 2
  store i32 %v1_1268c, i32* @r6, align 4
  %v2_1268c = icmp eq i32 %v1_1268c, 0
  br i1 %v2_1268c, label %dec_label_pc_12720, label %dec_label_pc_12694

dec_label_pc_12694:                               ; preds = %.thread40
  %v0_12694 = load i32, i32* @r8, align 4
  %v2_12694 = icmp eq i32 %v0_12694, 0
  br i1 %v2_12694, label %.thread43, label %bb161

bb161:                                            ; preds = %dec_label_pc_12694
  %v2_12698 = add i32 %v4_12684, 872
  %v3_12698 = inttoptr i32 %v2_12698 to i32*
  %v4_12698 = load i32, i32* %v3_12698, align 4
  store i32 %v4_12698, i32* %r2.global-to-local, align 4
  %v1_1269c = load i32, i32* %r1.global-to-local, align 4
  %v2_1269c = load i32, i32* @r4, align 4
  %v3_1269c = sub i32 %v2_1269c, %v1_1269c
  %v3_126a0 = add i32 %v3_1269c, %v4_12698
  store i32 %v3_126a0, i32* %r3.global-to-local, align 4
  store i32 %v3_126a0, i32* %v3_12698, align 4
  br label %.thread43

.thread43:                                        ; preds = %dec_label_pc_12694, %bb161
  %v0_126a8 = load i32, i32* @r4, align 4
  %v1_126a8 = urem i32 %v0_126a8, 8
  store i32 %v1_126a8, i32* %r3.global-to-local, align 4
  %v2_126a8 = icmp eq i32 %v1_126a8, 0
  br i1 %v2_126a8, label %.thread44, label %bb162

bb162:                                            ; preds = %.thread43
  %v2_126ac = sub nsw i32 8, %v1_126a8
  store i32 %v2_126ac, i32* %r3.global-to-local, align 4
  %v3_126b0 = add i32 %v2_126ac, %v0_126a8
  store i32 %v3_126b0, i32* @r7, align 4
  br label %.thread44

.thread44:                                        ; preds = %.thread43, %bb162
  %v0_126b8 = phi i32 [ 0, %.thread43 ], [ %v2_126ac, %bb162 ]
  %v1_126b4 = load i32, i32* @r5, align 4
  %v2_126b4 = add i32 %v1_126b4, %v0_126a8
  store i32 %v2_126b4, i32* @r6, align 4
  %v1_126b8 = load i32, i32* @r8, align 4
  %v2_126b8 = add i32 %v2_126b4, %v0_126b8
  %v2_126bc = add i32 %v2_126b8, %v1_126b8
  store i32 %v2_126bc, i32* %r1.global-to-local, align 4
  %v1_126c0 = load i32, i32* %sb.global-to-local, align 4
  %v2_126c0 = add i32 %v1_126c0, %v2_126bc
  %v1_126c4 = load i32, i32* %fp.global-to-local, align 4
  %v2_126c4 = and i32 %v1_126c4, %v2_126c0
  store i32 %v2_126c4, i32* %r2.global-to-local, align 4
  %v2_126c8 = sub i32 0, %v2_126b4
  store i32 %v2_126c8, i32* %r3.global-to-local, align 4
  %v2_126cc = sub i32 %v2_126c4, %v2_126b4
  store i32 %v2_126cc, i32* @r5, align 4
  store i32 %v2_126cc, i32* %r0.global-to-local, align 4
  br i1 %v2_126a8, label %bb163, label %bb164

bb163:                                            ; preds = %.thread44
  store i32 %v0_126a8, i32* @r7, align 4
  br label %bb164

bb164:                                            ; preds = %.thread44, %bb163
  %v1_126d8 = call i32 @function_142f0(i32 %v2_126cc)
  store i32 %v1_126d8, i32* %r0.global-to-local, align 4
  %v3_126dc = icmp eq i32 %v1_126d8, -1
  br i1 %v3_126dc, label %dec_label_pc_126e4, label %dec_label_pc_126f4

dec_label_pc_126e4:                               ; preds = %bb164
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_126e8 = call i32 @function_142f0(i32 0)
  store i32 %v1_126e8, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_1274c

dec_label_pc_126f4:                               ; preds = %bb164
  %v1_126f4 = load i32, i32* @r4, align 4
  %v3_126f4 = icmp ult i32 %v1_126d8, %v1_126f4
  br i1 %v3_126f4, label %dec_label_pc_126fc, label %dec_label_pc_1274c

dec_label_pc_126fc:                               ; preds = %dec_label_pc_126f4
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_d3ec.93 to i32), i32 73612), i32* %r0.global-to-local, align 4
  %v4_12704 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_d3ec.93 to i32), i32 73644) to i32*), align 4
  store i32 %v4_12704, i32* %r2.global-to-local, align 4
  %v1_12708 = add i32 %v4_12704, 864
  %v2_12708 = inttoptr i32 %v1_12708 to i32*
  %v3_12708 = load i32, i32* %v2_12708, align 4
  %v0_1270c = load i32, i32* @r6, align 4
  store i32 %v0_1270c, i32* %r0.global-to-local, align 4
  %v1_12710 = and i32 %v3_12708, -2
  store i32 %v1_12710, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 %v1_12710, i32* %v2_12708, align 4
  br label %dec_label_pc_1274c

dec_label_pc_12720:                               ; preds = %.thread40
  %v0_12720 = load i32, i32* %r0.global-to-local, align 4
  %v3_12720 = icmp eq i32 %v0_12720, -1
  br i1 %v3_12720, label %dec_label_pc_12728, label %dec_label_pc_12744

dec_label_pc_12728:                               ; preds = %dec_label_pc_12720
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1272c = call i32 @function_142f0(i32 0)
  store i32 %v1_1272c, i32* %r0.global-to-local, align 4
  %v0_12730 = load i32, i32* @r7, align 4
  %v1_12730 = add i32 %v0_12730, 872
  %v2_12730 = inttoptr i32 %v1_12730 to i32*
  %v3_12730 = load i32, i32* %v2_12730, align 4
  store i32 %v3_12730, i32* %r2.global-to-local, align 4
  %v0_12734 = load i32, i32* @r4, align 4
  %v0_12738 = load i32, i32* @r5, align 4
  %v2_12734 = add i32 %v3_12730, %v1_1272c
  %v2_12738 = sub i32 %v2_12734, %v0_12734
  %v2_1273c = sub i32 %v2_12738, %v0_12738
  store i32 %v2_1273c, i32* %r3.global-to-local, align 4
  store i32 %v2_1273c, i32* %v2_12730, align 4
  %v0_12748.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_12744

dec_label_pc_12744:                               ; preds = %dec_label_pc_12720, %dec_label_pc_12728
  %v0_12748 = phi i32 [ 0, %dec_label_pc_12720 ], [ %v0_12748.pre, %dec_label_pc_12728 ]
  %v0_12744 = load i32, i32* @r4, align 4
  store i32 %v0_12744, i32* @r7, align 4
  store i32 %v0_12748, i32* @r5, align 4
  br label %dec_label_pc_1274c

dec_label_pc_1274c:                               ; preds = %dec_label_pc_126f4, %dec_label_pc_126fc, %dec_label_pc_126e4, %dec_label_pc_12744
  %v0_1274c = load i32, i32* %r0.global-to-local, align 4
  %v7_1274c = icmp eq i32 %v0_1274c, -1
  br i1 %v7_1274c, label %dec_label_pc_127d0, label %dec_label_pc_12754

dec_label_pc_12754:                               ; preds = %dec_label_pc_1274c
  %v1_12754 = load i32, i32* @r5, align 4
  %v2_12754 = add i32 %v1_12754, %v0_1274c
  %v0_12758 = load i32, i32* @r7, align 4
  %v2_12758 = sub i32 %v2_12754, %v0_12758
  %v1_1275c = or i32 %v2_12758, 1
  %v2_12760 = add i32 %v0_12758, 4
  %v3_12760 = inttoptr i32 %v2_12760 to i32*
  store i32 %v1_1275c, i32* %v3_12760, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_d3ec.93 to i32), i32 73612), i32* %r1.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_1276c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_d3ec.93 to i32), i32 73644) to i32*), align 4
  store i32 %v4_1276c, i32* @r6, align 4
  %v1_12770 = add i32 %v4_1276c, 872
  %v2_12770 = inttoptr i32 %v1_12770 to i32*
  %v3_12770 = load i32, i32* %v2_12770, align 4
  %v0_12774 = load i32, i32* @r8, align 4
  %v2_12774 = icmp eq i32 %v0_12774, 0
  %v0_12778 = load i32, i32* @r5, align 4
  %v2_12778 = add i32 %v0_12778, %v3_12770
  store i32 %v2_12778, i32* %r3.global-to-local, align 4
  store i32 %v2_12778, i32* %v2_12770, align 4
  %v0_12780 = load i32, i32* @r7, align 4
  %v1_12780 = load i32, i32* @r6, align 4
  %v2_12780 = add i32 %v1_12780, 44
  %v3_12780 = inttoptr i32 %v2_12780 to i32*
  store i32 %v0_12780, i32* %v3_12780, align 4
  br i1 %v2_12774, label %dec_label_pc_127d0, label %dec_label_pc_12788

dec_label_pc_12788:                               ; preds = %dec_label_pc_12754
  %v0_1278c = load i32, i32* @r8, align 4
  %v1_1278c = add i32 %v0_1278c, -12
  %v1_12790 = and i32 %v1_1278c, -8
  store i32 %v3_12558, i32* %ip.global-to-local, align 4
  %v2_12798 = add i32 %v1_12790, %v3_12558
  store i32 %v2_12798, i32* %r1.global-to-local, align 4
  %v2_1279c = icmp ugt i32 %v1_12790, 14
  store i32 5, i32* %r2.global-to-local, align 4
  %v1_127a4 = or i32 %v1_12790, 1
  store i32 %v1_127a4, i32* %r3.global-to-local, align 4
  store i32 %v1_127a4, i32* %v2_12564, align 4
  %v0_127ac = load i32, i32* %r2.global-to-local, align 4
  %v1_127ac = load i32, i32* %r1.global-to-local, align 4
  %v2_127ac = add i32 %v1_127ac, 8
  %v3_127ac = inttoptr i32 %v2_127ac to i32*
  store i32 %v0_127ac, i32* %v3_127ac, align 4
  %v0_127b0 = load i32, i32* %r2.global-to-local, align 4
  %v1_127b0 = load i32, i32* %r1.global-to-local, align 4
  %v2_127b0 = add i32 %v1_127b0, 4
  %v3_127b0 = inttoptr i32 %v2_127b0 to i32*
  store i32 %v0_127b0, i32* %v3_127b0, align 4
  br i1 %v2_1279c, label %dec_label_pc_127b8, label %dec_label_pc_127d0

dec_label_pc_127b8:                               ; preds = %dec_label_pc_12788
  %v0_127b8 = load i32, i32* @r6, align 4
  %v1_127b8 = add i32 %v0_127b8, 836
  %v2_127b8 = inttoptr i32 %v1_127b8 to i32*
  %v3_127b8 = load i32, i32* %v2_127b8, align 4
  store i32 %v3_127b8, i32* @r4, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_127c0 = load i32, i32* %ip.global-to-local, align 4
  %v1_127c0 = add i32 %v0_127c0, 8
  store i32 %v1_127c0, i32* @r0, align 4
  store i32 -1, i32* %v2_127b8, align 4
  %v0_127c8 = call i32 @function_12fe4()
  store i32 %v0_127c8, i32* %r0.global-to-local, align 4
  %v0_127cc = load i32, i32* @r4, align 4
  %v1_127cc = load i32, i32* @r6, align 4
  %v2_127cc = add i32 %v1_127cc, 836
  %v3_127cc = inttoptr i32 %v2_127cc to i32*
  store i32 %v0_127cc, i32* %v3_127cc, align 4
  br label %dec_label_pc_127d0

dec_label_pc_127d0:                               ; preds = %.thread34, %dec_label_pc_12788, %dec_label_pc_12754, %dec_label_pc_1274c, %dec_label_pc_127b8
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_d3ec.93 to i32), i32 73612), i32* %r0.global-to-local, align 4
  %v4_127d8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_d3ec.93 to i32), i32 73644) to i32*), align 4
  store i32 %v4_127d8, i32* %lr.global-to-local, align 4
  %v1_127dc = add i32 %v4_127d8, 872
  store i32 %v1_127dc, i32* %r1.global-to-local, align 4
  %v1_127e0 = inttoptr i32 %v1_127dc to i32*
  %v2_127e0 = load i32, i32* %v1_127e0, align 4
  store i32 %v2_127e0, i32* %r1.global-to-local, align 4
  %v3_127e0 = add i32 %v4_127d8, 876
  %v4_127e0 = inttoptr i32 %v3_127e0 to i32*
  %v5_127e0 = load i32, i32* %v4_127e0, align 4
  store i32 %v5_127e0, i32* %r3.global-to-local, align 4
  %v1_127e8 = add i32 %v4_127d8, 868
  %v2_127e8 = inttoptr i32 %v1_127e8 to i32*
  %v3_127e8 = load i32, i32* %v2_127e8, align 4
  store i32 %v3_127e8, i32* %r3.global-to-local, align 4
  %v1_127ec = add i32 %v4_127d8, 884
  %v2_127ec = inttoptr i32 %v1_127ec to i32*
  %v3_127ec = load i32, i32* %v2_127ec, align 4
  store i32 %v3_127ec, i32* %r2.global-to-local, align 4
  %v2_127f0 = add i32 %v3_127e8, %v2_127e0
  store i32 %v2_127f0, i32* %r3.global-to-local, align 4
  %tmp215 = icmp ugt i32 %v2_127e0, %v5_127e0
  br i1 %tmp215, label %bb165, label %bb166

bb165:                                            ; preds = %dec_label_pc_127d0
  store i32 %v2_127e0, i32* %v4_127e0, align 4
  %v0_127f8.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_127f8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb166

bb166:                                            ; preds = %dec_label_pc_127d0, %bb165
  %v1_127f8 = phi i32 [ %v3_127ec, %dec_label_pc_127d0 ], [ %v1_127f8.pre, %bb165 ]
  %v4_127fc = phi i32 [ %v2_127f0, %dec_label_pc_127d0 ], [ %v0_127f8.pre, %bb165 ]
  %tmp216 = icmp ugt i32 %v4_127fc, %v1_127f8
  br i1 %tmp216, label %bb167, label %bb168

bb167:                                            ; preds = %bb166
  %v5_127fc = load i32, i32* %lr.global-to-local, align 4
  %v6_127fc = add i32 %v5_127fc, 884
  %v7_127fc = inttoptr i32 %v6_127fc to i32*
  store i32 %v4_127fc, i32* %v7_127fc, align 4
  br label %bb168

bb168:                                            ; preds = %bb166, %bb167
  %v0_12800 = load i32, i32* %lr.global-to-local, align 4
  %v1_12800 = add i32 %v0_12800, 44
  %v2_12800 = inttoptr i32 %v1_12800 to i32*
  %v3_12800 = load i32, i32* %v2_12800, align 4
  store i32 %v3_12800, i32* %ip.global-to-local, align 4
  %v1_12804 = add i32 %v3_12800, 4
  %v2_12804 = inttoptr i32 %v1_12804 to i32*
  %v3_12804 = load i32, i32* %v2_12804, align 4
  store i32 %v1_12418, i32* %r1.global-to-local, align 4
  %v1_1280c = and i32 %v3_12804, -4
  store i32 %v1_1280c, i32* %r3.global-to-local, align 4
  %v3_12810 = icmp ult i32 %v1_1280c, %v1_12418
  br i1 %v3_12810, label %dec_label_pc_1283c, label %dec_label_pc_12818

dec_label_pc_12818:                               ; preds = %bb168
  %v0_12818 = load i32, i32* @sl, align 4
  %v2_12818 = sub i32 %v1_1280c, %v0_12818
  %v2_1281c = add i32 %v0_12818, %v3_12800
  store i32 %v2_1281c, i32* %r1.global-to-local, align 4
  %v1_12820 = or i32 %v2_12818, 1
  store i32 %v1_12820, i32* %r3.global-to-local, align 4
  %v1_12824 = or i32 %v0_12818, 1
  store i32 %v1_12824, i32* %r2.global-to-local, align 4
  %v1_12828 = add i32 %v3_12800, 8
  store i32 %v1_12828, i32* %r0.global-to-local, align 4
  store i32 %v1_12824, i32* %v2_12804, align 4
  %v0_12830 = load i32, i32* %r1.global-to-local, align 4
  %v1_12830 = load i32, i32* %lr.global-to-local, align 4
  %v2_12830 = add i32 %v1_12830, 44
  %v3_12830 = inttoptr i32 %v2_12830 to i32*
  store i32 %v0_12830, i32* %v3_12830, align 4
  %v0_12834 = load i32, i32* %r3.global-to-local, align 4
  %v1_12834 = load i32, i32* %r1.global-to-local, align 4
  %v2_12834 = add i32 %v1_12834, 4
  %v3_12834 = inttoptr i32 %v2_12834 to i32*
  store i32 %v0_12834, i32* %v3_12834, align 4
  br label %dec_label_pc_1284c

dec_label_pc_1283c:                               ; preds = %bb157, %bb168, %dec_label_pc_12618
  %v0_1283c = call i32 @function_11970()
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_12844 = inttoptr i32 %v0_1283c to i32*
  store i32 12, i32* %v2_12844, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1284c

dec_label_pc_1284c:                               ; preds = %bb151, %bb150, %dec_label_pc_12818, %dec_label_pc_12460, %dec_label_pc_1283c
  %v0_1284c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1284c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12850

dec_label_pc_12850:                               ; preds = %.thread1, %dec_label_pc_1242c, %.thread121, %dec_label_pc_1207c, %dec_label_pc_1229c, %dec_label_pc_12290, %dec_label_pc_120f8, %dec_label_pc_1284c
  store i32 %v2_11fa4, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 24, i32* @r3, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_d3ec.93 to i32), i32 73612), i32* @r2, align 4
  %v4_12860 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_d3ec.93 to i32), i32 73636) to i32*), align 4
  store i32 %v4_12860, i32* @ip, align 4
  store i32 75884, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_12860)
  br label %dec_label_pc_1286c

dec_label_pc_1286c:                               ; preds = %dec_label_pc_11fdc, %dec_label_pc_12850
  %v0_1286c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1286c, i32* %r0.global-to-local, align 4
  store i32 %v3_11f78, i32* @r4, align 4
  store i32 %v6_11f78, i32* @r5, align 4
  store i32 %v9_11f78, i32* @r6, align 4
  store i32 %v12_11f78, i32* @r7, align 4
  store i32 %v15_11f78, i32* @r8, align 4
  store i32 %v18_11f78, i32* @sb, align 4
  store i32 %v21_11f78, i32* @sl, align 4
  store i32 %v24_11f78, i32* @fp, align 4
  store i32 %v27_11f78, i32* @lr, align 4
  ret i32 %v0_1286c

; uselistorder directives
  uselistorder i32 %v0_12818, { 1, 0, 2 }
  uselistorder i32 %v3_12800, { 1, 0, 2, 3 }
  uselistorder i32 %v4_127fc, { 1, 0 }
  uselistorder i32 %v2_127e0, { 2, 0, 1, 3 }
  uselistorder i32 %v4_127d8, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_12790, { 1, 2, 0 }
  uselistorder i32 %v0_12758, { 1, 0 }
  uselistorder i32 %v0_1274c, { 1, 0 }
  uselistorder i32 %v2_1273c, { 1, 0 }
  uselistorder i32 %v2_126cc, { 2, 1, 0 }
  uselistorder i32 %v2_126b4, { 1, 2, 0, 3 }
  uselistorder i32 %v2_126ac, { 1, 0, 2 }
  uselistorder i32 %v1_126a8, { 2, 1, 0 }
  uselistorder i32 %v0_126a8, { 3, 1, 2, 0 }
  uselistorder i32 %v1_1268c, { 1, 0 }
  uselistorder i32 %v2_12664, { 1, 0 }
  uselistorder i32 %v3_12658, { 1, 0, 2 }
  uselistorder i32 %v2_12638, { 1, 0, 2 }
  uselistorder i32* %v2_12630, { 1, 0, 2 }
  uselistorder i32 %v0_12618, { 1, 0 }
  uselistorder i32 %v6_125f4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_125e0, { 2, 1, 0 }
  uselistorder i32 %v0_125c8, { 1, 0 }
  uselistorder i32 %v2_12584, { 1, 0, 2, 3 }
  uselistorder i32 %v1_12580, { 1, 0 }
  uselistorder i32 %v3_12558, { 0, 3, 1, 2, 4, 5 }
  uselistorder i32 %v2_12538, { 1, 0, 2 }
  uselistorder i32 %v2_12520, { 1, 2, 0, 3 }
  uselistorder i32 %v1_124c8, { 2, 1, 0 }
  uselistorder i32 %v6_124bc, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32 %v3_12498, { 2, 1, 0, 3 }
  uselistorder i32 %v3_12458, { 1, 0, 2, 3 }
  uselistorder i32 %v0_12418, { 5, 6, 7, 0, 1, 8, 3, 2, 4, 9 }
  uselistorder i32 %v3_12410, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1240c, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %v0_123f8, { 1, 0 }
  uselistorder i32 %v7_123b8, { 1, 0 }
  uselistorder i32 %v4_123b8, { 1, 0 }
  uselistorder i32 %v0_12388, { 1, 0 }
  uselistorder i32 %v2_1235c, { 3, 2, 1, 0 }
  uselistorder i32 %ip.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_1235854, { 1, 0 }
  uselistorder i32 %v1_12324, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v1_1230c., { 1, 2, 0 }
  uselistorder i32 %v0_12314, { 0, 1, 3, 2 }
  uselistorder i32 %v1_12314, { 1, 0 }
  uselistorder i32 %v3_122f4, { 1, 0 }
  uselistorder i32 %v4_122f0, { 1, 0, 2 }
  uselistorder i32 %v1_12260, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_122b8, { 1, 0 }
  uselistorder i32 %v1_1229c, { 1, 0 }
  uselistorder i32 %v1_1213c, { 1, 0 }
  uselistorder i32 %v0_1227c, { 2, 0, 1, 3 }
  uselistorder i32 %v3_12244, { 2, 0, 1, 3 }
  uselistorder i32 %v0_122d8.pre, { 1, 2, 0 }
  uselistorder i32 %v0_12220, { 2, 1, 0 }
  uselistorder i32 %v3_12214, { 5, 6, 4, 3, 2, 0, 1 }
  uselistorder i32 %v0_12134, { 0, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_121dc, { 1, 0 }
  uselistorder i32 %v3_121d0, { 1, 0 }
  uselistorder i32 %v0_121dc, { 1, 0 }
  uselistorder i32 %v3_121b4, { 0, 2, 3, 1 }
  uselistorder i32 %v2_121a4, { 1, 0, 2 }
  uselistorder i32 %v3_1215c, { 2, 1, 0 }
  uselistorder i32 %v0_1214c, { 3, 2, 1, 0 }
  uselistorder i32 %v0_1211c, { 1, 0 }
  uselistorder i32 %v1_120d0, { 2, 1, 0, 3 }
  uselistorder i32 %v0_120cc, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v3_12070, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_12064, { 1, 0 }
  uselistorder i32 %v3_12034, { 1, 0 }
  uselistorder i32 %v0_12028, { 5, 6, 4, 2, 0, 3, 1 }
  uselistorder i32 %v2_12008, { 0, 2, 1, 3 }
  uselistorder i1 %v7_11ffc, { 1, 0 }
  uselistorder i32 %v0_11fd4, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r4.global-to-local, { 15, 0, 1, 2, 3, 13, 16, 14, 6, 5, 4, 7, 8, 9, 10, 11, 12 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 43, 40, 41, 42, 44, 45, 46, 47, 0, 1, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 89, 90, 92, 93, 94, 95, 101, 109, 96, 97, 98, 99, 100, 102, 103, 104, 105, 91, 106, 107, 108, 75, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 29, 31, 32, 39, 40, 41, 42, 43, 44, 45, 46, 47, 55, 48, 49, 50, 51, 52, 53, 54, 33, 34, 35, 36, 37, 38 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 46, 47, 48, 49, 50, 51, 52, 37, 53, 54, 55, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45 }
  uselistorder i32* %r0.global-to-local, { 5, 3, 27, 4, 6, 7, 46, 19, 11, 8, 20, 9, 10, 13, 12, 17, 14, 21, 16, 15, 22, 18, 45, 24, 23, 25, 44, 26, 28, 49, 29, 30, 2, 31, 48, 50, 51, 52, 53, 1, 54, 55, 0, 57, 56, 32, 33, 34, 39, 35, 36, 37, 38, 47, 40, 43, 42, 41 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 7, 5, 6, 8, 9, 11, 12, 13, 10 }
  uselistorder i32* %ip.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 12, 10, 13, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 23, 37, 30, 29, 41, 38, 1, 39, 40, 42, 26, 27, 24, 25, 28, 31, 32, 33, 34, 35, 36 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_14064, { 1, 0 }
  uselistorder i32 34, { 1, 2, 0, 3 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_d3ec.93 to i32), i32 73644) to i32*), { 5, 6, 7, 8, 9, 4, 10, 3, 11, 0, 12, 13, 2, 14, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_d3ec.93 to i32), { 2, 1, 3, 4, 0, 5, 6 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_d3ec.93 to i32), i32 73612), { 23, 19, 17, 16, 18, 20, 21, 22, 15, 24, 10, 12, 11, 9, 8, 13, 14, 5, 4, 7, 6, 3, 2, 1, 0, 25, 26, 27, 28 }
  uselistorder label %dec_label_pc_1286c, { 1, 0 }
  uselistorder label %dec_label_pc_12850, { 7, 1, 2, 4, 5, 6, 3, 0 }
  uselistorder label %dec_label_pc_1284c, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1283c, { 1, 2, 0 }
  uselistorder label %bb168, { 1, 0 }
  uselistorder label %bb166, { 1, 0 }
  uselistorder label %dec_label_pc_127d0, { 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_1274c, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_12744, { 1, 0 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %.thread44, { 1, 0 }
  uselistorder label %.thread43, { 1, 0 }
  uselistorder label %.thread40, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_12618, { 1, 0 }
  uselistorder label %.thread32, { 1, 0 }
  uselistorder label %bb157, { 1, 0 }
  uselistorder label %bb153, { 1, 0 }
  uselistorder label %dec_label_pc_1254c, { 2, 0, 3, 1 }
  uselistorder label %bb150, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
  uselistorder label %.thread27, { 1, 0 }
  uselistorder label %dec_label_pc_12404, { 0, 2, 1 }
  uselistorder label %.thread121, { 1, 0 }
  uselistorder label %bb144, { 1, 0 }
  uselistorder label %dec_label_pc_12358, { 1, 0 }
  uselistorder label %dec_label_pc_12360.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_12324, { 1, 0 }
  uselistorder label %dec_label_pc_122d8, { 1, 0 }
  uselistorder label %dec_label_pc_1226c, { 1, 0 }
  uselistorder label %dec_label_pc_12268, { 1, 0 }
  uselistorder label %dec_label_pc_12214, { 1, 0 }
  uselistorder label %dec_label_pc_12200, { 2, 0, 1 }
  uselistorder label %dec_label_pc_121c8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_121b4, { 1, 0 }
  uselistorder label %bb140, { 1, 0 }
  uselistorder label %bb138, { 1, 0 }
}

define i32 @function_12880(i32 %arg1) local_unnamed_addr {
dec_label_pc_12880:
  %v0_12880 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12880, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_12880
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_12880, %bb
  %v10_12894 = phi i32 [ %arg1, %dec_label_pc_12880 ], [ 0, %bb ]
  ret i32 %v10_12894

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @function_12898(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12898:
  %ip.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v3_12898 = load i32, i32* @r4, align 4
  %v6_12898 = load i32, i32* @r5, align 4
  %v9_12898 = load i32, i32* @r6, align 4
  %v12_12898 = load i32, i32* @lr, align 4
  %v2_128a0 = icmp eq i32 %arg1, 0
  store i32 127864, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v2_128b0 = mul i32 %arg2, %arg1
  store i32 %v2_128b0, i32* @r6, align 4
  br i1 %v2_128a0, label %dec_label_pc_128e0, label %dec_label_pc_128b8

dec_label_pc_128b8:                               ; preds = %dec_label_pc_12898
  store i32 %arg1, i32* @r1, align 4
  store i32 %v2_128b0, i32* @r0, align 4
  %v0_128c0 = call i32 @function_11018()
  %v0_128c4 = load i32, i32* @r4, align 4
  %v9_128c4 = icmp eq i32 %v0_128c4, %v0_128c0
  br i1 %v9_128c4, label %dec_label_pc_128b8.dec_label_pc_128e0_crit_edge, label %dec_label_pc_128cc

dec_label_pc_128b8.dec_label_pc_128e0_crit_edge:  ; preds = %dec_label_pc_128b8
  %v0_128e4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_128e0

dec_label_pc_128cc:                               ; preds = %dec_label_pc_128b8
  %v0_128cc = call i32 @function_11970()
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 12, i32* @r3, align 4
  %v2_128d8 = inttoptr i32 %v0_128cc to i32*
  store i32 12, i32* %v2_128d8, align 4
  br label %dec_label_pc_129a4

dec_label_pc_128e0:                               ; preds = %dec_label_pc_128b8.dec_label_pc_128e0_crit_edge, %dec_label_pc_12898
  %v0_128fc = phi i32 [ %v0_128e4.pre, %dec_label_pc_128b8.dec_label_pc_128e0_crit_edge ], [ 127864, %dec_label_pc_12898 ]
  %v2_128e4 = add i32 %v0_128fc, 68
  %v3_128e4 = inttoptr i32 %v2_128e4 to i32*
  %v4_128e4 = load i32, i32* %v3_128e4, align 4
  store i32 %v4_128e4, i32* @r4, align 4
  %v2_128fc = add i32 %v0_128fc, 72
  %v3_128fc = inttoptr i32 %v2_128fc to i32*
  %v4_128fc = load i32, i32* %v3_128fc, align 4
  store i32 %v4_128fc, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_128fc)
  %v0_12910 = load i32, i32* @r5, align 4
  %v2_12910 = add i32 %v0_12910, 16
  %v3_12910 = inttoptr i32 %v2_12910 to i32*
  %v4_12910 = load i32, i32* %v3_12910, align 4
  store i32 %v4_12910, i32* %ip.global-to-local, align 4
  store i32 76060, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_12910)
  %v0_1291c = load i32, i32* @r6, align 4
  store i32 %v0_1291c, i32* @r0, align 4
  %v0_12920 = call i32 @function_11f78()
  store i32 %v0_12920, i32* %r4.global-to-local, align 4
  %v2_12924 = icmp eq i32 %v0_12920, 0
  br i1 %v2_12924, label %.thread, label %dec_label_pc_1292c

dec_label_pc_1292c:                               ; preds = %dec_label_pc_128e0
  %v1_1292c = add i32 %v0_12920, -4
  %v2_1292c = inttoptr i32 %v1_1292c to i32*
  %v3_1292c = load i32, i32* %v2_1292c, align 4
  %v1_12930 = and i32 %v3_1292c, 2
  %v2_12930 = icmp eq i32 %v1_12930, 0
  br i1 %v2_12930, label %dec_label_pc_12938, label %.thread

dec_label_pc_12938:                               ; preds = %dec_label_pc_1292c
  %v1_129387 = add i32 %v3_1292c, -4
  %v1_1293c = and i32 %v1_129387, -4
  store i32 %v1_1293c, i32* @r2, align 4
  %v3_12940 = udiv i32 %v1_1293c, 4
  store i32 %v3_12940, i32* %ip.global-to-local, align 4
  %tmp = icmp eq i32 %v1_1293c, 36
  %v2_12948 = icmp ult i32 %v1_1293c, 33
  %v3_12948 = or i1 %tmp, %v2_12948
  br i1 %v3_12948, label %dec_label_pc_12954, label %dec_label_pc_1294c

dec_label_pc_1294c:                               ; preds = %dec_label_pc_12938
  %v2_1294c = inttoptr i32 %v0_12920 to i8*
  %v3_1294c = call i32 @function_119c0(i8* %v2_1294c, i32 0)
  br label %.thread

dec_label_pc_12954:                               ; preds = %dec_label_pc_12938
  %tmp8 = icmp eq i32 %v1_1293c, 16
  %v2_12958 = inttoptr i32 %v0_12920 to i32*
  store i32 0, i32* %v2_12958, align 4
  %v1_1295c = load i32, i32* %r4.global-to-local, align 4
  %v2_1295c = add i32 %v1_1295c, 4
  %v3_1295c = inttoptr i32 %v2_1295c to i32*
  store i32 0, i32* %v3_1295c, align 4
  %v1_12960 = load i32, i32* %r4.global-to-local, align 4
  %v2_12960 = add i32 %v1_12960, 8
  %v3_12960 = inttoptr i32 %v2_12960 to i32*
  store i32 0, i32* %v3_12960, align 4
  %v2_12964 = icmp ult i32 %v1_1293c, 13
  %v3_12964 = or i1 %tmp8, %v2_12964
  br i1 %v3_12964, label %.thread, label %dec_label_pc_12968

dec_label_pc_12968:                               ; preds = %dec_label_pc_12954
  %v0_12968 = load i32, i32* %ip.global-to-local, align 4
  %v1_1296c = load i32, i32* %r4.global-to-local, align 4
  %v2_1296c = add i32 %v1_1296c, 12
  %v3_1296c = inttoptr i32 %v2_1296c to i32*
  store i32 0, i32* %v3_1296c, align 4
  %v1_12970 = load i32, i32* %r4.global-to-local, align 4
  %v2_12970 = add i32 %v1_12970, 16
  %v3_12970 = inttoptr i32 %v2_12970 to i32*
  store i32 0, i32* %v3_12970, align 4
  %tmp9 = icmp ult i32 %v0_12968, 7
  br i1 %tmp9, label %.thread, label %dec_label_pc_12978

dec_label_pc_12978:                               ; preds = %dec_label_pc_12968
  %v0_12978 = load i32, i32* %ip.global-to-local, align 4
  %v7_12978 = icmp eq i32 %v0_12978, 9
  %v1_1297c = load i32, i32* %r4.global-to-local, align 4
  %v2_1297c = add i32 %v1_1297c, 20
  %v3_1297c = inttoptr i32 %v2_1297c to i32*
  store i32 0, i32* %v3_1297c, align 4
  %v1_12980 = load i32, i32* %r4.global-to-local, align 4
  %v2_12980 = add i32 %v1_12980, 24
  %v3_12980 = inttoptr i32 %v2_12980 to i32*
  store i32 0, i32* %v3_12980, align 4
  br i1 %v7_12978, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_12978
  %v2_12984 = load i32, i32* %r4.global-to-local, align 4
  %v3_12984 = add i32 %v2_12984, 32
  %v4_12984 = inttoptr i32 %v3_12984 to i32*
  store i32 0, i32* %v4_12984, align 4
  %v2_12988 = load i32, i32* %r4.global-to-local, align 4
  %v3_12988 = add i32 %v2_12988, 28
  %v4_12988 = inttoptr i32 %v3_12988 to i32*
  store i32 0, i32* %v4_12988, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_12978, %dec_label_pc_1292c, %dec_label_pc_12968, %dec_label_pc_12954, %dec_label_pc_128e0, %dec_label_pc_1294c, %bb
  store i32 24, i32* @r3, align 4
  %v0_12998 = load i32, i32* @r5, align 4
  %v2_12998 = add i32 %v0_12998, 24
  %v3_12998 = inttoptr i32 %v2_12998 to i32*
  %v4_12998 = load i32, i32* %v3_12998, align 4
  store i32 %v4_12998, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_12998)
  br label %dec_label_pc_129a4

dec_label_pc_129a4:                               ; preds = %dec_label_pc_128cc, %.thread
  %v0_129a4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v3_12898, i32* @r4, align 4
  store i32 %v6_12898, i32* @r5, align 4
  store i32 %v9_12898, i32* @r6, align 4
  store i32 %v12_12898, i32* @lr, align 4
  ret i32 %v0_129a4

; uselistorder directives
  uselistorder i32 %v1_1293c, { 0, 5, 1, 4, 3, 2 }
  uselistorder i32 %v0_12920, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10 }
  uselistorder i32 33, { 0, 3, 2, 1 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_129a4, { 1, 0 }
  uselistorder label %.thread, { 6, 0, 2, 3, 5, 1, 4 }
}

define i32 @function_129b8(i32 %arg1) local_unnamed_addr {
dec_label_pc_129b8:
  %v0_129b8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_129b8, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_129b8
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_129b8, %bb
  %v10_129c8 = phi i32 [ %arg1, %dec_label_pc_129b8 ], [ 0, %bb ]
  ret i32 %v10_129c8

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @function_129cc(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_129cc:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_129cc = load i32, i32* @r4, align 4
  %v6_129cc = load i32, i32* @r5, align 4
  %v9_129cc = load i32, i32* @r6, align 4
  %v12_129cc = load i32, i32* @r7, align 4
  %v15_129cc = load i32, i32* @r8, align 4
  %v18_129cc = load i32, i32* @sb, align 4
  %v21_129cc = load i32, i32* @sl, align 4
  %v24_129cc = load i32, i32* @fp, align 4
  %v27_129cc = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_129d8 = icmp eq i32* %arg1, null
  store i32 127864, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_129d8, label %dec_label_pc_129ec, label %dec_label_pc_129fc

dec_label_pc_129ec:                               ; preds = %dec_label_pc_129cc
  store i32 %arg2, i32* @r0, align 4
  %v0_129f0 = call i32 @function_11f78()
  store i32 %v0_129f0, i32* %r0.global-to-local, align 4
  store i32 %v0_129f0, i32* @r4, align 4
  br label %dec_label_pc_12d54

dec_label_pc_129fc:                               ; preds = %dec_label_pc_129cc
  %v2_129fc = icmp eq i32 %arg2, 0
  br i1 %v2_129fc, label %dec_label_pc_12a04, label %dec_label_pc_12a10

dec_label_pc_12a04:                               ; preds = %dec_label_pc_129fc
  %v0_12a04 = call i32 @function_12fe4()
  store i32 %v0_12a04, i32* %r0.global-to-local, align 4
  %v0_12a08 = load i32, i32* @r6, align 4
  store i32 %v0_12a08, i32* @r4, align 4
  br label %dec_label_pc_12d54

dec_label_pc_12a10:                               ; preds = %dec_label_pc_129fc
  store i32 68, i32* %r3.global-to-local, align 4
  %v4_12a18 = load i32, i32* inttoptr (i32 127932 to i32*), align 4
  store i32 %v4_12a18, i32* @r4, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 %v4_12a18, i32* %r2.global-to-local, align 4
  %v4_12a24 = load i32, i32* inttoptr (i32 127900 to i32*), align 4
  store i32 %v4_12a24, i32* %r1.global-to-local, align 4
  %v2_12a28 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_12a28, i32* %r0.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v4_12a30 = load i32, i32* inttoptr (i32 127936 to i32*), align 64
  call void @__pseudo_branch(i32 %v4_12a30)
  %v0_12a3c = load i32, i32* @r4, align 4
  store i32 %v0_12a3c, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 127864, i32* %r1.global-to-local, align 4
  %v4_12a48 = load i32, i32* inttoptr (i32 127880 to i32*), align 8
  store i32 %v4_12a48, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_12a54.766 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_12a48)
  %v0_12a54 = load i32, i32* @r6, align 4
  %tmp36 = icmp ult i32 %v0_12a54, -32
  br i1 %tmp36, label %dec_label_pc_12a70, label %dec_label_pc_12a5c

dec_label_pc_12a5c:                               ; preds = %dec_label_pc_12a10
  %v0_12a5c = call i32 @function_11970()
  store i32 %v0_12a5c, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_12a68 = inttoptr i32 %v0_12a5c to i32*
  store i32 12, i32* %v2_12a68, align 4
  br label %dec_label_pc_12d54

dec_label_pc_12a70:                               ; preds = %dec_label_pc_12a10
  %v1_12a70 = add i32 %v0_12a54, 11
  store i32 %v1_12a70, i32* %r0.global-to-local, align 4
  %v0_12a74 = load i32, i32* @r5, align 4
  %v1_12a74 = add i32 %v0_12a74, -4
  %v2_12a74 = inttoptr i32 %v1_12a74 to i32*
  %v3_12a74 = load i32, i32* %v2_12a74, align 4
  store i32 %v3_12a74, i32* %r2.global-to-local, align 4
  %v2_12a78 = icmp ugt i32 %v1_12a70, 14
  %v7_12a78 = icmp eq i32 %v1_12a70, 15
  %v2_12a7c = xor i1 %v2_12a78, true
  %v3_12a7c = or i1 %v7_12a78, %v2_12a7c
  br i1 %v3_12a7c, label %bb, label %bb27

bb:                                               ; preds = %dec_label_pc_12a70
  store i32 16, i32* @sb, align 4
  br label %bb27

bb27:                                             ; preds = %dec_label_pc_12a70, %bb
  %v2_12a80 = xor i1 %v7_12a78, true
  %v3_12a80 = and i1 %v2_12a78, %v2_12a80
  br i1 %v3_12a80, label %bb28, label %bb29

bb28:                                             ; preds = %bb27
  %v5_12a80 = and i32 %v1_12a70, -8
  store i32 %v5_12a80, i32* @sb, align 4
  br label %bb29

bb29:                                             ; preds = %bb27, %bb28
  %v1_12a84 = and i32 %v3_12a74, 2
  %v2_12a84 = icmp eq i32 %v1_12a84, 0
  %v1_12a88 = add i32 %v0_12a74, -8
  store i32 %v1_12a88, i32* @sl, align 4
  %v1_12a8c = and i32 %v3_12a74, -4
  store i32 %v1_12a8c, i32* @r6, align 4
  br i1 %v2_12a84, label %dec_label_pc_12a94, label %dec_label_pc_12c6c

dec_label_pc_12a94:                               ; preds = %bb29
  %v1_12a94 = load i32, i32* @sb, align 4
  %v3_12a94 = icmp ult i32 %v1_12a8c, %v1_12a94
  br i1 %v3_12a94, label %dec_label_pc_12aa0, label %bb30

bb30:                                             ; preds = %dec_label_pc_12a94
  store i32 %v1_12a8c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12c04

dec_label_pc_12aa0:                               ; preds = %dec_label_pc_12a94
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_12aa8 = load i32, i32* inttoptr (i32 127896 to i32*), align 8
  store i32 %v4_12aa8, i32* %r0.global-to-local, align 4
  %v1_12aac = add i32 %v4_12aa8, 44
  %v2_12aac = inttoptr i32 %v1_12aac to i32*
  %v3_12aac = load i32, i32* %v2_12aac, align 4
  store i32 %v3_12aac, i32* %r3.global-to-local, align 4
  %v2_12ab0 = add i32 %v1_12a8c, %v1_12a88
  store i32 %v2_12ab0, i32* @r4, align 4
  %v9_12ab4 = icmp eq i32 %v2_12ab0, %v3_12aac
  %v1_12ab8 = add i32 %v2_12ab0, 4
  %v2_12ab8 = inttoptr i32 %v1_12ab8 to i32*
  %v3_12ab8 = load i32, i32* %v2_12ab8, align 4
  store i32 %v3_12ab8, i32* %r1.global-to-local, align 4
  br i1 %v9_12ab4, label %dec_label_pc_12ac0, label %dec_label_pc_12afc

dec_label_pc_12ac0:                               ; preds = %dec_label_pc_12aa0
  %v1_12ac0 = and i32 %v3_12ab8, -4
  %v2_12ac4 = add i32 %v1_12ac0, %v1_12a8c
  store i32 %v2_12ac4, i32* %r1.global-to-local, align 4
  %v1_12ac8 = add i32 %v1_12a94, 16
  store i32 %v1_12ac8, i32* %r3.global-to-local, align 4
  %v3_12acc = icmp ult i32 %v2_12ac4, %v1_12ac8
  br i1 %v3_12acc, label %dec_label_pc_12b50, label %dec_label_pc_12ad4

dec_label_pc_12ad4:                               ; preds = %dec_label_pc_12ac0
  %v2_12ad4 = sub i32 %v2_12ac4, %v1_12a94
  %v1_12ad8 = urem i32 %v3_12a74, 2
  %v2_12adc = add i32 %v1_12a94, %v1_12a88
  store i32 %v2_12adc, i32* %r1.global-to-local, align 4
  %v2_12ae0 = or i32 %v1_12a94, %v1_12ad8
  store i32 %v2_12ae0, i32* %r2.global-to-local, align 4
  %v1_12ae4 = or i32 %v2_12ad4, 1
  store i32 %v1_12ae4, i32* %r3.global-to-local, align 4
  store i32 %v0_12a74, i32* @r4, align 4
  store i32 %v2_12ae0, i32* %v2_12a74, align 4
  %v0_12af0 = load i32, i32* %r1.global-to-local, align 4
  %v1_12af0 = load i32, i32* %r0.global-to-local, align 4
  %v2_12af0 = add i32 %v1_12af0, 44
  %v3_12af0 = inttoptr i32 %v2_12af0 to i32*
  store i32 %v0_12af0, i32* %v3_12af0, align 4
  %v0_12af4 = load i32, i32* %r3.global-to-local, align 4
  %v1_12af4 = load i32, i32* %r1.global-to-local, align 4
  %v2_12af4 = add i32 %v1_12af4, 4
  %v3_12af4 = inttoptr i32 %v2_12af4 to i32*
  store i32 %v0_12af4, i32* %v3_12af4, align 4
  br label %dec_label_pc_12d38

dec_label_pc_12afc:                               ; preds = %dec_label_pc_12aa0
  %v1_12afc = and i32 %v3_12ab8, -2
  %v2_12b00 = add i32 %v1_12afc, %v2_12ab0
  store i32 %v2_12b00, i32* %r3.global-to-local, align 4
  %v1_12b04 = add i32 %v2_12b00, 4
  %v2_12b04 = inttoptr i32 %v1_12b04 to i32*
  %v3_12b04 = load i32, i32* %v2_12b04, align 4
  store i32 %v3_12b04, i32* %r3.global-to-local, align 4
  %v1_12b08 = urem i32 %v3_12b04, 2
  %v2_12b08 = icmp eq i32 %v1_12b08, 0
  br i1 %v2_12b08, label %dec_label_pc_12b10, label %dec_label_pc_12b50

dec_label_pc_12b10:                               ; preds = %dec_label_pc_12afc
  %v1_12b10 = and i32 %v3_12ab8, -4
  store i32 %v1_12b10, i32* %r3.global-to-local, align 4
  %v2_12b14 = add i32 %v1_12b10, %v1_12a8c
  store i32 %v2_12b14, i32* %r0.global-to-local, align 4
  %v3_12b18 = icmp ult i32 %v2_12b14, %v1_12a94
  br i1 %v3_12b18, label %dec_label_pc_12b50, label %dec_label_pc_12b20

dec_label_pc_12b20:                               ; preds = %dec_label_pc_12b10
  %v1_12b20 = add i32 %v1_12a8c, %v0_12a74
  %v2_12b20 = inttoptr i32 %v1_12b20 to i32*
  %v3_12b20 = load i32, i32* %v2_12b20, align 4
  store i32 %v3_12b20, i32* %r1.global-to-local, align 4
  %v1_12b24 = add i32 %v3_12b20, 12
  %v2_12b24 = inttoptr i32 %v1_12b24 to i32*
  %v3_12b24 = load i32, i32* %v2_12b24, align 4
  store i32 %v3_12b24, i32* %r3.global-to-local, align 4
  %v9_12b28 = icmp eq i32 %v3_12b24, %v2_12ab0
  %v1_12b2c = add i32 %v2_12ab0, 12
  %v2_12b2c = inttoptr i32 %v1_12b2c to i32*
  %v3_12b2c = load i32, i32* %v2_12b2c, align 4
  store i32 %v3_12b2c, i32* %r2.global-to-local, align 4
  br i1 %v9_12b28, label %dec_label_pc_12b34, label %dec_label_pc_12b40

dec_label_pc_12b34:                               ; preds = %dec_label_pc_12b20
  %v1_12b34 = add i32 %v3_12b2c, 8
  %v2_12b34 = inttoptr i32 %v1_12b34 to i32*
  %v3_12b34 = load i32, i32* %v2_12b34, align 4
  store i32 %v3_12b34, i32* %r3.global-to-local, align 4
  %v9_12b38 = icmp eq i32 %v3_12b34, %v2_12ab0
  br i1 %v9_12b38, label %dec_label_pc_12b44, label %dec_label_pc_12b40

dec_label_pc_12b40:                               ; preds = %dec_label_pc_12b20, %dec_label_pc_12b34
  %v0_12b40 = call i32 @function_13260()
  store i32 %v0_12b40, i32* %r0.global-to-local, align 4
  %v0_12b44.pre = load i32, i32* @r1, align 4
  %v1_12b44.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_12b44

dec_label_pc_12b44:                               ; preds = %dec_label_pc_12b34, %dec_label_pc_12b40
  %v1_12b44 = phi i32 [ %v3_12b2c, %dec_label_pc_12b34 ], [ %v1_12b44.pre, %dec_label_pc_12b40 ]
  %v0_12b44 = phi i32 [ %v3_12b20, %dec_label_pc_12b34 ], [ %v0_12b44.pre, %dec_label_pc_12b40 ]
  %v2_12b44 = add i32 %v1_12b44, 8
  %v3_12b44 = inttoptr i32 %v2_12b44 to i32*
  store i32 %v0_12b44, i32* %v3_12b44, align 4
  %v0_12b48 = load i32, i32* %r2.global-to-local, align 4
  %v1_12b48 = load i32, i32* %r1.global-to-local, align 4
  %v2_12b48 = add i32 %v1_12b48, 12
  %v3_12b48 = inttoptr i32 %v2_12b48 to i32*
  store i32 %v0_12b48, i32* %v3_12b48, align 4
  %v1_12c04.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12c04

dec_label_pc_12b50:                               ; preds = %dec_label_pc_12ac0, %dec_label_pc_12b10, %dec_label_pc_12afc
  %v1_12b50 = add i32 %v1_12a94, -7
  store i32 %v1_12b50, i32* @r0, align 4
  %v0_12b54 = call i32 @function_11f78()
  store i32 %v0_12b54, i32* @r0, align 4
  store i32 %v0_12b54, i32* %r1.global-to-local, align 4
  %v2_12b58 = icmp eq i32 %v0_12b54, 0
  br i1 %v2_12b58, label %bb31, label %dec_label_pc_12b64

bb31:                                             ; preds = %dec_label_pc_12b50
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_12d38

dec_label_pc_12b64:                               ; preds = %dec_label_pc_12b50
  %v1_12b6c.pre = load i32, i32* @r4, align 4
  %v1_12b64 = add i32 %v0_12b54, -4
  %v2_12b64 = inttoptr i32 %v1_12b64 to i32*
  %v3_12b64 = load i32, i32* %v2_12b64, align 4
  store i32 %v3_12b64, i32* @r3, align 4
  %v1_12b68 = add i32 %v0_12b54, -8
  store i32 %v1_12b68, i32* @r7, align 4
  %v9_12b6c = icmp eq i32 %v1_12b68, %v1_12b6c.pre
  br i1 %v9_12b6c, label %.thread2, label %dec_label_pc_12b7c

.thread2:                                         ; preds = %dec_label_pc_12b64
  %v2_12b70 = and i32 %v3_12b64, -4
  store i32 %v2_12b70, i32* %r3.global-to-local, align 4
  %v2_12b74 = load i32, i32* @r6, align 4
  %v3_12b74 = add i32 %v2_12b74, %v2_12b70
  store i32 %v3_12b74, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12c04

dec_label_pc_12b7c:                               ; preds = %dec_label_pc_12b64
  %v0_12b7c = load i32, i32* @r6, align 4
  %v1_12b7c = add i32 %v0_12b7c, -4
  store i32 %v1_12b7c, i32* @r2, align 4
  %v3_12b80 = udiv i32 %v1_12b7c, 4
  store i32 %v3_12b80, i32* @ip, align 4
  %tmp37 = and i32 %v1_12b7c, -4
  %tmp38 = icmp eq i32 %tmp37, 36
  %v2_12b88 = icmp ult i32 %v1_12b7c, 36
  %v3_12b88 = or i1 %tmp38, %v2_12b88
  %v0_12b98 = load i32, i32* @r5, align 4
  br i1 %v3_12b88, label %dec_label_pc_12b98, label %dec_label_pc_12b8c

dec_label_pc_12b8c:                               ; preds = %dec_label_pc_12b7c
  store i32 %v0_12b98, i32* @r1, align 4
  %v0_12b90 = call i32 @function_11a70()
  store i32 %v0_12b90, i32* %r0.global-to-local, align 4
  br label %.thread6

dec_label_pc_12b98:                               ; preds = %dec_label_pc_12b7c
  %v1_12b98 = inttoptr i32 %v0_12b98 to i32*
  %v2_12b98 = load i32, i32* %v1_12b98, align 4
  store i32 %v2_12b98, i32* %r3.global-to-local, align 4
  %v2_12b9c = inttoptr i32 %v0_12b54 to i32*
  store i32 %v2_12b98, i32* %v2_12b9c, align 4
  %v0_12ba0 = load i32, i32* @r5, align 4
  %v1_12ba0 = add i32 %v0_12ba0, 4
  %v2_12ba0 = inttoptr i32 %v1_12ba0 to i32*
  %v3_12ba0 = load i32, i32* %v2_12ba0, align 4
  store i32 %v3_12ba0, i32* %r3.global-to-local, align 4
  %v1_12ba4 = load i32, i32* %r1.global-to-local, align 4
  %v2_12ba4 = add i32 %v1_12ba4, 4
  %v3_12ba4 = inttoptr i32 %v2_12ba4 to i32*
  store i32 %v3_12ba0, i32* %v3_12ba4, align 4
  %v0_12ba8 = load i32, i32* @r5, align 4
  %v1_12ba8 = add i32 %v0_12ba8, 8
  %v2_12ba8 = inttoptr i32 %v1_12ba8 to i32*
  %v3_12ba8 = load i32, i32* %v2_12ba8, align 4
  store i32 %v3_12ba8, i32* %r3.global-to-local, align 4
  %v0_12bac = load i32, i32* @ip, align 4
  %v1_12bb0 = load i32, i32* %r1.global-to-local, align 4
  %v2_12bb0 = add i32 %v1_12bb0, 8
  %v3_12bb0 = inttoptr i32 %v2_12bb0 to i32*
  store i32 %v3_12ba8, i32* %v3_12bb0, align 4
  %tmp39 = icmp ult i32 %v0_12bac, 5
  br i1 %tmp39, label %.thread6, label %dec_label_pc_12bb8

dec_label_pc_12bb8:                               ; preds = %dec_label_pc_12b98
  %v0_12bb8 = load i32, i32* @r5, align 4
  %v1_12bb8 = add i32 %v0_12bb8, 12
  %v2_12bb8 = inttoptr i32 %v1_12bb8 to i32*
  %v3_12bb8 = load i32, i32* %v2_12bb8, align 4
  store i32 %v3_12bb8, i32* %r3.global-to-local, align 4
  %v1_12bbc = load i32, i32* %r1.global-to-local, align 4
  %v2_12bbc = add i32 %v1_12bbc, 12
  %v3_12bbc = inttoptr i32 %v2_12bbc to i32*
  store i32 %v3_12bb8, i32* %v3_12bbc, align 4
  %v0_12bc0 = load i32, i32* @r5, align 4
  %v1_12bc0 = add i32 %v0_12bc0, 16
  %v2_12bc0 = inttoptr i32 %v1_12bc0 to i32*
  %v3_12bc0 = load i32, i32* %v2_12bc0, align 4
  store i32 %v3_12bc0, i32* %r3.global-to-local, align 4
  %v0_12bc4 = load i32, i32* @ip, align 4
  %v1_12bc8 = load i32, i32* %r1.global-to-local, align 4
  %v2_12bc8 = add i32 %v1_12bc8, 16
  %v3_12bc8 = inttoptr i32 %v2_12bc8 to i32*
  store i32 %v3_12bc0, i32* %v3_12bc8, align 4
  %tmp40 = icmp ult i32 %v0_12bc4, 7
  br i1 %tmp40, label %.thread6, label %dec_label_pc_12bd0

dec_label_pc_12bd0:                               ; preds = %dec_label_pc_12bb8
  %v0_12bd0 = load i32, i32* @r5, align 4
  %v1_12bd0 = add i32 %v0_12bd0, 20
  %v2_12bd0 = inttoptr i32 %v1_12bd0 to i32*
  %v3_12bd0 = load i32, i32* %v2_12bd0, align 4
  store i32 %v3_12bd0, i32* %r3.global-to-local, align 4
  %v1_12bd4 = load i32, i32* %r1.global-to-local, align 4
  %v2_12bd4 = add i32 %v1_12bd4, 20
  %v3_12bd4 = inttoptr i32 %v2_12bd4 to i32*
  store i32 %v3_12bd0, i32* %v3_12bd4, align 4
  %v0_12bd8 = load i32, i32* @r5, align 4
  %v1_12bd8 = add i32 %v0_12bd8, 24
  %v2_12bd8 = inttoptr i32 %v1_12bd8 to i32*
  %v3_12bd8 = load i32, i32* %v2_12bd8, align 4
  store i32 %v3_12bd8, i32* %r3.global-to-local, align 4
  %v1_12bdc = load i32, i32* %r1.global-to-local, align 4
  %v2_12bdc = add i32 %v1_12bdc, 24
  %v3_12bdc = inttoptr i32 %v2_12bdc to i32*
  store i32 %v3_12bd8, i32* %v3_12bdc, align 4
  %v0_12be0 = load i32, i32* @ip, align 4
  %v7_12be0 = icmp eq i32 %v0_12be0, 9
  br i1 %v7_12be0, label %bb32, label %.thread6

bb32:                                             ; preds = %dec_label_pc_12bd0
  %v1_12be4 = load i32, i32* @r5, align 4
  %v2_12be4 = add i32 %v1_12be4, 28
  %v3_12be4 = inttoptr i32 %v2_12be4 to i32*
  %v4_12be4 = load i32, i32* %v3_12be4, align 4
  store i32 %v4_12be4, i32* %r3.global-to-local, align 4
  %v2_12be8 = load i32, i32* %r1.global-to-local, align 4
  %v3_12be8 = add i32 %v2_12be8, 28
  %v4_12be8 = inttoptr i32 %v3_12be8 to i32*
  store i32 %v4_12be4, i32* %v4_12be8, align 4
  %v1_12bec = load i32, i32* @r5, align 4
  %v2_12bec = add i32 %v1_12bec, 32
  %v3_12bec = inttoptr i32 %v2_12bec to i32*
  %v4_12bec = load i32, i32* %v3_12bec, align 4
  store i32 %v4_12bec, i32* %r3.global-to-local, align 4
  %v2_12bf0 = load i32, i32* %r1.global-to-local, align 4
  %v3_12bf0 = add i32 %v2_12bf0, 32
  %v4_12bf0 = inttoptr i32 %v3_12bf0 to i32*
  store i32 %v4_12bec, i32* %v4_12bf0, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_12bd0, %dec_label_pc_12bb8, %dec_label_pc_12b98, %dec_label_pc_12b8c, %bb32
  %v0_12bf4 = load i32, i32* @r5, align 4
  store i32 %v0_12bf4, i32* @r0, align 4
  %v0_12bf8 = call i32 @function_12fe4()
  store i32 %v0_12bf8, i32* %r0.global-to-local, align 4
  %v0_12bfc = load i32, i32* @r7, align 4
  %v1_12bfc = add i32 %v0_12bfc, 8
  store i32 %v1_12bfc, i32* @r4, align 4
  br label %dec_label_pc_12d38

dec_label_pc_12c04:                               ; preds = %bb30, %.thread2, %dec_label_pc_12b44
  %v0_12c18 = phi i32 [ %v3_12b74, %.thread2 ], [ %v1_12a8c, %bb30 ], [ %v1_12c04.pre, %dec_label_pc_12b44 ]
  %v0_12c04 = load i32, i32* @sb, align 4
  %v2_12c04 = sub i32 %v0_12c18, %v0_12c04
  store i32 %v2_12c04, i32* %r1.global-to-local, align 4
  %v0_12c0c = load i32, i32* @sl, align 4
  %v1_12c0c = add i32 %v0_12c0c, 4
  %v2_12c0c = inttoptr i32 %v1_12c0c to i32*
  %v3_12c0c = load i32, i32* %v2_12c0c, align 4
  %tmp41 = icmp ugt i32 %v2_12c04, 15
  %v1_12c34 = urem i32 %v3_12c0c, 2
  store i32 %v1_12c34, i32* %r3.global-to-local, align 4
  br i1 %tmp41, label %dec_label_pc_12c34, label %dec_label_pc_12c14

dec_label_pc_12c14:                               ; preds = %dec_label_pc_12c04
  %v2_12c18 = or i32 %v1_12c34, %v0_12c18
  store i32 %v2_12c18, i32* %r3.global-to-local, align 4
  store i32 %v2_12c18, i32* %v2_12c0c, align 4
  %v0_12c20 = load i32, i32* @sl, align 4
  %v1_12c20 = load i32, i32* %r0.global-to-local, align 4
  %v2_12c20 = add i32 %v1_12c20, %v0_12c20
  store i32 %v2_12c20, i32* %r2.global-to-local, align 4
  %v1_12c24 = add i32 %v2_12c20, 4
  %v2_12c24 = inttoptr i32 %v1_12c24 to i32*
  %v3_12c24 = load i32, i32* %v2_12c24, align 4
  %v1_12c28 = or i32 %v3_12c24, 1
  store i32 %v1_12c28, i32* %r3.global-to-local, align 4
  store i32 %v1_12c28, i32* %v2_12c24, align 4
  br label %dec_label_pc_12c64

dec_label_pc_12c34:                               ; preds = %dec_label_pc_12c04
  %v2_12c38 = add i32 %v0_12c0c, %v0_12c04
  store i32 %v2_12c38, i32* %r0.global-to-local, align 4
  %v2_12c3c = or i32 %v1_12c34, %v0_12c04
  store i32 %v2_12c3c, i32* %r3.global-to-local, align 4
  %v1_12c40 = or i32 %v2_12c04, 1
  store i32 %v1_12c40, i32* %r2.global-to-local, align 4
  store i32 %v2_12c3c, i32* %v2_12c0c, align 4
  %v0_12c48 = load i32, i32* %r2.global-to-local, align 4
  %v1_12c48 = load i32, i32* %r0.global-to-local, align 4
  %v2_12c48 = add i32 %v1_12c48, 4
  %v3_12c48 = inttoptr i32 %v2_12c48 to i32*
  store i32 %v0_12c48, i32* %v3_12c48, align 4
  %v0_12c4c = load i32, i32* %r0.global-to-local, align 4
  %v1_12c4c = load i32, i32* %r1.global-to-local, align 4
  %v2_12c4c = add i32 %v1_12c4c, %v0_12c4c
  store i32 %v2_12c4c, i32* %r2.global-to-local, align 4
  %v1_12c50 = add i32 %v2_12c4c, 4
  %v2_12c50 = inttoptr i32 %v1_12c50 to i32*
  %v3_12c50 = load i32, i32* %v2_12c50, align 4
  %v1_12c54 = or i32 %v3_12c50, 1
  store i32 %v1_12c54, i32* %r3.global-to-local, align 4
  store i32 %v1_12c54, i32* %v2_12c50, align 4
  %v0_12c5c = load i32, i32* %r0.global-to-local, align 4
  %v1_12c5c = add i32 %v0_12c5c, 8
  store i32 %v1_12c5c, i32* @r0, align 4
  %v0_12c60 = call i32 @function_12fe4()
  store i32 %v0_12c60, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12c64

dec_label_pc_12c64:                               ; preds = %dec_label_pc_12c14, %dec_label_pc_12c34
  %v0_12c64 = load i32, i32* @sl, align 4
  %v1_12c64 = add i32 %v0_12c64, 8
  store i32 %v1_12c64, i32* @r4, align 4
  br label %dec_label_pc_12d38

dec_label_pc_12c6c:                               ; preds = %bb29
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 127864, i32* %r1.global-to-local, align 4
  %v4_12c74 = load i32, i32* inttoptr (i32 127896 to i32*), align 8
  store i32 %v4_12c74, i32* @r8, align 4
  %v2_12c78 = inttoptr i32 %v1_12a88 to i32*
  %v3_12c78 = load i32, i32* %v2_12c78, align 4
  store i32 %v3_12c78, i32* @r4, align 4
  %v1_12c7c = add i32 %v4_12c74, 860
  %v2_12c7c = inttoptr i32 %v1_12c7c to i32*
  %v3_12c7c = load i32, i32* %v2_12c7c, align 4
  %v1_12c80 = add i32 %v3_12c78, 4
  %v1_12c84 = add i32 %v3_12c7c, -1
  store i32 %v1_12c84, i32* %r2.global-to-local, align 4
  %v2_12c88 = add i32 %v1_12c80, %v1_12c84
  %v1_12c8c = load i32, i32* @sb, align 4
  %v2_12c8c = add i32 %v2_12c88, %v1_12c8c
  store i32 %v2_12c8c, i32* %r3.global-to-local, align 4
  %v2_12c90 = sub i32 0, %v3_12c7c
  %v3_12c90 = and i32 %v2_12c8c, %v2_12c90
  store i32 %v3_12c90, i32* @r7, align 4
  %v2_12c94 = sub i32 %v3_12c90, %v3_12c78
  store i32 %v2_12c94, i32* @fp, align 4
  %v9_12c98 = icmp eq i32 %v1_12a8c, %v2_12c94
  br i1 %v9_12c98, label %dec_label_pc_12d0c, label %dec_label_pc_12ca0

dec_label_pc_12ca0:                               ; preds = %dec_label_pc_12c6c
  %v2_12ca0 = sub i32 %v1_12a88, %v3_12c78
  store i32 %v2_12ca0, i32* %r0.global-to-local, align 4
  %v2_12ca4 = add i32 %v3_12c78, %v1_12a8c
  store i32 %v2_12ca4, i32* %r1.global-to-local, align 4
  store i32 %v3_12c90, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_12cb0 = call i32 @function_14634(i32 %v2_12ca0, i32 %v2_12ca4, i32 %v3_12c90, i32 1)
  store i32 %v4_12cb0, i32* %r0.global-to-local, align 4
  %v7_12cb4 = icmp eq i32 %v4_12cb0, -1
  br i1 %v7_12cb4, label %dec_label_pc_12d00, label %dec_label_pc_12cbc

dec_label_pc_12cbc:                               ; preds = %dec_label_pc_12ca0
  %v1_12cbc = load i32, i32* @r4, align 4
  %v2_12cbc = add i32 %v1_12cbc, %v4_12cb0
  store i32 %v2_12cbc, i32* %r0.global-to-local, align 4
  %v0_12cc0 = load i32, i32* @fp, align 4
  %v1_12cc0 = or i32 %v0_12cc0, 2
  store i32 %v1_12cc0, i32* %r3.global-to-local, align 4
  %v2_12cc4 = add i32 %v2_12cbc, 4
  %v3_12cc4 = inttoptr i32 %v2_12cc4 to i32*
  store i32 %v1_12cc0, i32* %v3_12cc4, align 4
  %v0_12cc8 = load i32, i32* @r8, align 4
  %v1_12cc8 = add i32 %v0_12cc8, 868
  %v2_12cc8 = inttoptr i32 %v1_12cc8 to i32*
  %v3_12cc8 = load i32, i32* %v2_12cc8, align 4
  store i32 %v3_12cc8, i32* %r3.global-to-local, align 4
  %v1_12ccc = add i32 %v0_12cc8, 880
  %v2_12ccc = inttoptr i32 %v1_12ccc to i32*
  %v3_12ccc = load i32, i32* %v2_12ccc, align 4
  store i32 %v3_12ccc, i32* %r2.global-to-local, align 4
  %v0_12cd0 = load i32, i32* @r6, align 4
  %v2_12cd0 = sub i32 %v3_12cc8, %v0_12cd0
  store i32 %v2_12cd0, i32* %r3.global-to-local, align 4
  %v1_12cd4 = load i32, i32* @r7, align 4
  %v2_12cd4 = add i32 %v1_12cd4, %v2_12cd0
  store i32 %v2_12cd4, i32* %r1.global-to-local, align 4
  %v1_12cd8 = add i32 %v0_12cc8, 872
  %v2_12cd8 = inttoptr i32 %v1_12cd8 to i32*
  %v3_12cd8 = load i32, i32* %v2_12cd8, align 4
  store i32 %v3_12cd8, i32* %r3.global-to-local, align 4
  %v1_12ce0 = add i32 %v0_12cc8, 884
  %v2_12ce0 = inttoptr i32 %v1_12ce0 to i32*
  %v3_12ce0 = load i32, i32* %v2_12ce0, align 4
  store i32 %v3_12ce0, i32* %r2.global-to-local, align 4
  %tmp42 = icmp ugt i32 %v2_12cd4, %v3_12ccc
  br i1 %tmp42, label %bb33, label %bb34

bb33:                                             ; preds = %dec_label_pc_12cbc
  store i32 %v2_12cd4, i32* %v2_12ccc, align 4
  %v0_12ce8.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_12ce8.pre = load i32, i32* @r8, align 4
  br label %bb34

bb34:                                             ; preds = %dec_label_pc_12cbc, %bb33
  %v1_12ce8 = phi i32 [ %v0_12cc8, %dec_label_pc_12cbc ], [ %v1_12ce8.pre, %bb33 ]
  %v0_12ce8 = phi i32 [ %v2_12cd4, %dec_label_pc_12cbc ], [ %v0_12ce8.pre, %bb33 ]
  %v2_12ce8 = add i32 %v1_12ce8, 868
  %v3_12ce8 = inttoptr i32 %v2_12ce8 to i32*
  store i32 %v0_12ce8, i32* %v3_12ce8, align 4
  %v0_12cec = load i32, i32* %r1.global-to-local, align 4
  %v1_12cec = load i32, i32* %r3.global-to-local, align 4
  %v2_12cec = add i32 %v1_12cec, %v0_12cec
  store i32 %v2_12cec, i32* %r1.global-to-local, align 4
  %v1_12cf0 = load i32, i32* %r2.global-to-local, align 4
  %v0_12cf4 = load i32, i32* %r0.global-to-local, align 4
  %v1_12cf4 = add i32 %v0_12cf4, 8
  store i32 %v1_12cf4, i32* @r4, align 4
  %tmp43 = icmp ugt i32 %v2_12cec, %v1_12cf0
  br i1 %tmp43, label %bb35, label %dec_label_pc_12d38

bb35:                                             ; preds = %bb34
  %v5_12cf8 = load i32, i32* @r8, align 4
  %v6_12cf8 = add i32 %v5_12cf8, 884
  %v7_12cf8 = inttoptr i32 %v6_12cf8 to i32*
  store i32 %v2_12cec, i32* %v7_12cf8, align 4
  br label %dec_label_pc_12d38

dec_label_pc_12d00:                               ; preds = %dec_label_pc_12ca0
  %v0_12d00 = load i32, i32* @sb, align 4
  %v1_12d00 = add i32 %v0_12d00, 4
  store i32 %v1_12d00, i32* %r3.global-to-local, align 4
  %v0_12d04 = load i32, i32* @r6, align 4
  %v3_12d04 = icmp ult i32 %v0_12d04, %v1_12d00
  br i1 %v3_12d04, label %dec_label_pc_12d14, label %dec_label_pc_12d00.dec_label_pc_12d0c_crit_edge

dec_label_pc_12d00.dec_label_pc_12d0c_crit_edge:  ; preds = %dec_label_pc_12d00
  %v0_12d0c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_12d0c

dec_label_pc_12d0c:                               ; preds = %dec_label_pc_12d00.dec_label_pc_12d0c_crit_edge, %dec_label_pc_12c6c
  %v0_12d0c = phi i32 [ %v0_12d0c.pre, %dec_label_pc_12d00.dec_label_pc_12d0c_crit_edge ], [ %v0_12a74, %dec_label_pc_12c6c ]
  store i32 %v0_12d0c, i32* @r4, align 4
  br label %dec_label_pc_12d38

dec_label_pc_12d14:                               ; preds = %dec_label_pc_12d00
  %v1_12d14 = add i32 %v0_12d00, -7
  store i32 %v1_12d14, i32* @r0, align 4
  %v0_12d18 = call i32 @function_11f78()
  store i32 %v0_12d18, i32* @r0, align 4
  store i32 %v0_12d18, i32* @r4, align 4
  %v2_12d1c = icmp eq i32 %v0_12d18, 0
  br i1 %v2_12d1c, label %dec_label_pc_12d38, label %dec_label_pc_12d24

dec_label_pc_12d24:                               ; preds = %dec_label_pc_12d14
  %v0_12d24 = load i32, i32* @r6, align 4
  %v1_12d24 = add i32 %v0_12d24, -8
  store i32 %v1_12d24, i32* @r2, align 4
  %v0_12d28 = load i32, i32* @r5, align 4
  store i32 %v0_12d28, i32* @r1, align 4
  %v0_12d2c = call i32 @function_11a70()
  %v0_12d30 = load i32, i32* @r5, align 4
  store i32 %v0_12d30, i32* @r0, align 4
  %v0_12d34 = call i32 @function_12fe4()
  store i32 %v0_12d34, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12d38

dec_label_pc_12d38:                               ; preds = %bb31, %bb35, %bb34, %dec_label_pc_12d14, %dec_label_pc_12d0c, %dec_label_pc_12c64, %.thread6, %dec_label_pc_12ad4, %dec_label_pc_12d24
  store i32 %v2_12a28, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  store i32 127864, i32* %r2.global-to-local, align 4
  %v4_12d48 = load i32, i32* inttoptr (i32 127888 to i32*), align 16
  store i32 %v4_12d48, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_12d48)
  br label %dec_label_pc_12d54

dec_label_pc_12d54:                               ; preds = %dec_label_pc_12a5c, %dec_label_pc_12a04, %dec_label_pc_129ec, %dec_label_pc_12d38
  %v0_12d54 = load i32, i32* @r4, align 4
  store i32 %v0_12d54, i32* %r0.global-to-local, align 4
  store i32 %v3_129cc, i32* @r4, align 4
  store i32 %v6_129cc, i32* @r5, align 4
  store i32 %v9_129cc, i32* @r6, align 4
  store i32 %v12_129cc, i32* @r7, align 4
  store i32 %v15_129cc, i32* @r8, align 4
  store i32 %v18_129cc, i32* @sb, align 4
  store i32 %v21_129cc, i32* @sl, align 4
  store i32 %v24_129cc, i32* @fp, align 4
  store i32 %v27_129cc, i32* @lr, align 4
  ret i32 %v0_12d54

; uselistorder directives
  uselistorder i32 %v2_12cec, { 1, 0, 2 }
  uselistorder i32 %v2_12cd4, { 1, 2, 0, 3 }
  uselistorder i32 %v4_12cb0, { 1, 0, 2 }
  uselistorder i32 %v3_12c90, { 1, 0, 2, 3 }
  uselistorder i32 %v1_12c34, { 2, 1, 0 }
  uselistorder i32 %v2_12c04, { 1, 0, 2 }
  uselistorder i32 %v0_12b98, { 1, 0 }
  uselistorder i32 %v0_12b54, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %v3_12ab8, { 0, 2, 1, 3 }
  uselistorder i32 %v2_12ab0, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 %v1_12a94, { 3, 5, 0, 1, 2, 4, 6 }
  uselistorder i32 %v1_12a8c, { 0, 7, 5, 1, 2, 3, 4, 6, 8, 9 }
  uselistorder i32 %v1_12a88, { 2, 3, 0, 1, 4 }
  uselistorder i1 %v2_12a78, { 1, 0 }
  uselistorder i32 %v0_12a74, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_12a54, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 11, 7, 8, 9, 10, 21, 12, 14, 13, 20, 22, 15, 16, 17, 18, 19, 25, 24, 23, 26, 27 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_12d54, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_12d38, { 8, 3, 4, 1, 2, 5, 6, 0, 7 }
  uselistorder label %bb34, { 1, 0 }
  uselistorder label %dec_label_pc_12c64, { 1, 0 }
  uselistorder label %dec_label_pc_12c04, { 1, 2, 0 }
  uselistorder label %.thread6, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_12b50, { 1, 2, 0 }
  uselistorder label %dec_label_pc_12b44, { 1, 0 }
  uselistorder label %dec_label_pc_12b40, { 1, 0 }
  uselistorder label %bb29, { 1, 0 }
  uselistorder label %bb27, { 1, 0 }
}

define i32 @function_12d68(i32 %arg1) local_unnamed_addr {
dec_label_pc_12d68:
  %v0_12d68 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12d68, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_12d68
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_12d68, %bb
  %v10_12d7c = phi i32 [ %arg1, %dec_label_pc_12d68 ], [ 0, %bb ]
  ret i32 %v10_12d7c

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @function_12d80(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12d80:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v1_12d80 = add i32 %arg2, 44
  %v2_12d80 = inttoptr i32 %v1_12d80 to i32*
  %v3_12d80 = load i32, i32* %v2_12d80, align 4
  %v3_12d84 = load i32, i32* @r4, align 4
  store i32 %v3_12d84, i32* %stack_var_-20, align 4
  %v1_12d88 = add i32 %v3_12d80, 4
  %v2_12d88 = inttoptr i32 %v1_12d88 to i32*
  %v3_12d88 = load i32, i32* %v2_12d88, align 4
  %v1_12d8c = add i32 %arg2, 860
  %v2_12d8c = inttoptr i32 %v1_12d8c to i32*
  %v3_12d8c = load i32, i32* %v2_12d8c, align 4
  store i32 %v3_12d8c, i32* @r4, align 4
  %v1_12d90 = and i32 %v3_12d88, -4
  store i32 %v1_12d90, i32* @r6, align 4
  %v1_12d94 = add i32 %v1_12d90, -17
  %v2_12d98 = add i32 %v1_12d94, %v3_12d8c
  store i32 %arg2, i32* @r5, align 4
  %v2_12da4 = sub i32 %v2_12d98, %arg1
  store i32 %v2_12da4, i32* @r0, align 4
  store i32 %v3_12d8c, i32* @r1, align 4
  %v0_12dac = call i32 @function_11018()
  %v1_12db0 = add i32 %v0_12dac, -1
  store i32 %v1_12db0, i32* %r0.global-to-local, align 4
  %v0_12db4 = load i32, i32* @r4, align 4
  %v2_12db4 = mul i32 %v0_12db4, %v1_12db0
  store i32 %v2_12db4, i32* %r7.global-to-local, align 4
  %v2_12db8 = icmp eq i32 %v2_12db4, 0
  store i1 %v2_12db8, i1* @cpsr_z, align 1
  %tmp8 = icmp slt i32 %v2_12db4, 1
  br i1 %tmp8, label %dec_label_pc_12e20, label %dec_label_pc_12dc0

dec_label_pc_12dc0:                               ; preds = %dec_label_pc_12d80
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_12dc4 = call i32 @function_142f0(i32 0)
  store i32 %v1_12dc4, i32* %r0.global-to-local, align 4
  %v0_12dc8 = load i32, i32* @r5, align 4
  %v1_12dc8 = add i32 %v0_12dc8, 44
  %v2_12dc8 = inttoptr i32 %v1_12dc8 to i32*
  %v3_12dc8 = load i32, i32* %v2_12dc8, align 4
  %v0_12dcc = load i32, i32* @r6, align 4
  %v2_12dcc = add i32 %v0_12dcc, %v3_12dc8
  %v9_12dd0 = icmp eq i32 %v1_12dc4, %v2_12dcc
  store i1 %v9_12dd0, i1* @cpsr_z, align 1
  store i32 %v1_12dc4, i32* @r4, align 4
  br i1 %v9_12dd0, label %dec_label_pc_12ddc, label %dec_label_pc_12e20

dec_label_pc_12ddc:                               ; preds = %dec_label_pc_12dc0
  %v0_12ddc = load i32, i32* %r7.global-to-local, align 4
  %v1_12ddc = sub i32 0, %v0_12ddc
  store i32 %v1_12ddc, i32* %r0.global-to-local, align 4
  %v1_12de0 = call i32 @function_142f0(i32 %v1_12ddc)
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_12de8 = call i32 @function_142f0(i32 0)
  store i32 %v1_12de8, i32* %r0.global-to-local, align 4
  %v7_12dec = icmp eq i32 %v1_12de8, -1
  store i1 %v7_12dec, i1* @cpsr_z, align 1
  br i1 %v7_12dec, label %dec_label_pc_12e20, label %dec_label_pc_12df4

dec_label_pc_12df4:                               ; preds = %dec_label_pc_12ddc
  %v0_12df4 = load i32, i32* @r4, align 4
  %v2_12df4 = sub i32 %v0_12df4, %v1_12de8
  store i32 %v2_12df4, i32* %r0.global-to-local, align 4
  %v9_12df4 = icmp eq i32 %v0_12df4, %v1_12de8
  store i1 %v9_12df4, i1* @cpsr_z, align 1
  br i1 %v9_12df4, label %dec_label_pc_12e20, label %dec_label_pc_12dfc

dec_label_pc_12dfc:                               ; preds = %dec_label_pc_12df4
  %v0_12dfc = load i32, i32* @r5, align 4
  %v1_12dfc = add i32 %v0_12dfc, 872
  %v2_12dfc = inttoptr i32 %v1_12dfc to i32*
  %v3_12dfc = load i32, i32* %v2_12dfc, align 4
  %v1_12e00 = load i32, i32* @r6, align 4
  %v2_12e00 = sub i32 %v1_12e00, %v2_12df4
  store i32 %v2_12e00, i32* %r2.global-to-local, align 4
  %v1_12e04 = add i32 %v0_12dfc, 44
  %v2_12e04 = inttoptr i32 %v1_12e04 to i32*
  %v3_12e04 = load i32, i32* %v2_12e04, align 4
  store i32 %v3_12e04, i32* %r1.global-to-local, align 4
  %v2_12e08 = sub i32 %v3_12dfc, %v2_12df4
  %v1_12e0c = or i32 %v2_12e00, 1
  store i32 %v1_12e0c, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v2_12e08, i32* %v2_12dfc, align 4
  %v0_12e18 = load i32, i32* %r2.global-to-local, align 4
  %v1_12e18 = load i32, i32* %r1.global-to-local, align 4
  %v2_12e18 = add i32 %v1_12e18, 4
  %v3_12e18 = inttoptr i32 %v2_12e18 to i32*
  store i32 %v0_12e18, i32* %v3_12e18, align 4
  %v1_12e2c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12e24

dec_label_pc_12e20:                               ; preds = %dec_label_pc_12dc0, %dec_label_pc_12df4, %dec_label_pc_12ddc, %dec_label_pc_12d80
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12e24

dec_label_pc_12e24:                               ; preds = %dec_label_pc_12dfc, %dec_label_pc_12e20
  %v1_12e2c = phi i32 [ %v1_12e2c.pre, %dec_label_pc_12dfc ], [ 0, %dec_label_pc_12e20 ]
  %v2_12e28 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_12e28, i32* @r4, align 4
  ret i32 %v1_12e2c

; uselistorder directives
  uselistorder i1 %v7_12dec, { 1, 0 }
  uselistorder i32 %v1_12de8, { 2, 1, 0, 3 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 10, 9, 8, 0 }
  uselistorder i32 872, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 (i32)* @function_142f0, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @function_11018, { 3, 2, 1, 4, 0 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_12e24, { 1, 0 }
  uselistorder label %dec_label_pc_12e20, { 1, 2, 0, 3 }
}

define i32 @function_12e30() local_unnamed_addr {
dec_label_pc_12e30:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_12e30 = load i32, i32* @r4, align 4
  store i32 %v3_12e30, i32* %stack_var_-36, align 4
  %v0_12e34 = load i32, i32* @r0, align 4
  %v1_12e34 = inttoptr i32 %v0_12e34 to i32*
  %v2_12e34 = load i32, i32* %v1_12e34, align 4
  store i32 %v2_12e34, i32* %r3.global-to-local, align 4
  %v2_12e38 = icmp eq i32 %v2_12e34, 0
  store i32 %v0_12e34, i32* @r4, align 4
  br i1 %v2_12e38, label %dec_label_pc_12f70.preheader, label %dec_label_pc_12e4c

dec_label_pc_12f70.preheader:                     ; preds = %dec_label_pc_12e30
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_12f7825 = add i32 %v0_12e34, 52
  store i32 %v1_12f7825, i32* %r3.global-to-local, align 4
  %v2_12f8026 = add i32 %v0_12e34, 60
  %v3_12f8027 = inttoptr i32 %v2_12f8026 to i32*
  store i32 %v1_12f7825, i32* %v3_12f8027, align 4
  %v0_12f8428 = load i32, i32* %r3.global-to-local, align 4
  %v2_12f8429 = add i32 %v0_12f8428, 12
  %v3_12f8430 = inttoptr i32 %v2_12f8429 to i32*
  store i32 %v0_12f8428, i32* %v3_12f8430, align 4
  br label %dec_label_pc_12f70.dec_label_pc_12f70_crit_edge

dec_label_pc_12e4c:                               ; preds = %dec_label_pc_12e30
  %v1_12e4c = and i32 %v2_12e34, -3
  %v3_12e50 = udiv i32 %v2_12e34, 8
  store i32 %v3_12e50, i32* %r2.global-to-local, align 4
  store i32 %v1_12e4c, i32* %v1_12e34, align 4
  %v0_12e58 = load i32, i32* @r0, align 4
  %v1_12e58 = add i32 %v0_12e58, -4
  store i32 %v1_12e58, i32* %r3.global-to-local, align 4
  %v1_12e5c = load i32, i32* %r2.global-to-local, align 4
  %v4_12e5c = mul i32 %v1_12e5c, 4
  %v5_12e5c = add i32 %v4_12e5c, %v1_12e58
  store i32 %v5_12e5c, i32* %sb.global-to-local, align 4
  %v1_12e60 = add i32 %v0_12e58, 52
  store i32 %v1_12e60, i32* %r7.global-to-local, align 4
  %v1_12e64 = add i32 %v0_12e58, 4
  store i32 %v1_12e64, i32* %r6.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_12e6c

dec_label_pc_12e6c:                               ; preds = %dec_label_pc_12f68, %dec_label_pc_12e4c
  %v1_12f6010 = phi i32 [ %v1_12f60, %dec_label_pc_12f68 ], [ %v5_12e5c, %dec_label_pc_12e4c ]
  %v1_12e78 = phi i32 [ %v1_12f68, %dec_label_pc_12f68 ], [ %v1_12e64, %dec_label_pc_12e4c ]
  %v1_12e6c = inttoptr i32 %v1_12e78 to i32*
  %v2_12e6c = load i32, i32* %v1_12e6c, align 4
  store i32 %v2_12e6c, i32* %r1.global-to-local, align 4
  %v2_12e70 = icmp eq i32 %v2_12e6c, 0
  br i1 %v2_12e70, label %dec_label_pc_12f60, label %dec_label_pc_12e78

dec_label_pc_12e78:                               ; preds = %dec_label_pc_12e6c
  %v0_12e78 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_12e78, i32* %v1_12e6c, align 4
  %v0_12e7c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12e7c

dec_label_pc_12e7c:                               ; preds = %dec_label_pc_12f54, %dec_label_pc_12e78
  %v0_12e98 = phi i32 [ %v0_12f54, %dec_label_pc_12f54 ], [ %v0_12e7c.pre, %dec_label_pc_12e78 ]
  %v1_12e7c = add i32 %v0_12e98, 4
  %v2_12e7c = inttoptr i32 %v1_12e7c to i32*
  %v3_12e7c = load i32, i32* %v2_12e7c, align 4
  store i32 %v3_12e7c, i32* %r3.global-to-local, align 4
  %v1_12e80 = and i32 %v3_12e7c, -2
  store i32 %v1_12e80, i32* %lr.global-to-local, align 4
  %v2_12e84 = add i32 %v1_12e80, %v0_12e98
  store i32 %v2_12e84, i32* @r0, align 4
  %v1_12e88 = urem i32 %v3_12e7c, 2
  %v2_12e88 = icmp eq i32 %v1_12e88, 0
  %v1_12e8c = add i32 %v0_12e98, 8
  %v2_12e8c = inttoptr i32 %v1_12e8c to i32*
  %v3_12e8c = load i32, i32* %v2_12e8c, align 4
  store i32 %v3_12e8c, i32* %sl.global-to-local, align 4
  %v1_12e90 = add i32 %v2_12e84, 4
  %v2_12e90 = inttoptr i32 %v1_12e90 to i32*
  %v3_12e90 = load i32, i32* %v2_12e90, align 4
  store i32 %v3_12e90, i32* %r8.global-to-local, align 4
  br i1 %v2_12e88, label %dec_label_pc_12e98, label %dec_label_pc_12ecc

dec_label_pc_12e98:                               ; preds = %dec_label_pc_12e7c
  %v1_12e98 = inttoptr i32 %v0_12e98 to i32*
  %v2_12e98 = load i32, i32* %v1_12e98, align 4
  store i32 %v2_12e98, i32* %r5.global-to-local, align 4
  %v2_12e9c = sub i32 %v0_12e98, %v2_12e98
  store i32 %v2_12e9c, i32* %r3.global-to-local, align 4
  %v1_12ea0 = add i32 %v2_12e9c, 8
  %v2_12ea0 = inttoptr i32 %v1_12ea0 to i32*
  %v3_12ea0 = load i32, i32* %v2_12ea0, align 4
  store i32 %v3_12ea0, i32* %ip.global-to-local, align 4
  %v1_12ea4 = add i32 %v3_12ea0, 12
  %v2_12ea4 = inttoptr i32 %v1_12ea4 to i32*
  %v3_12ea4 = load i32, i32* %v2_12ea4, align 4
  store i32 %v3_12ea4, i32* %r1.global-to-local, align 4
  %v9_12ea8 = icmp eq i32 %v3_12ea4, %v2_12e9c
  %v1_12eac = add i32 %v2_12e9c, 12
  %v2_12eac = inttoptr i32 %v1_12eac to i32*
  %v3_12eac = load i32, i32* %v2_12eac, align 4
  store i32 %v3_12eac, i32* %r2.global-to-local, align 4
  br i1 %v9_12ea8, label %dec_label_pc_12eb4, label %dec_label_pc_12f10

dec_label_pc_12eb4:                               ; preds = %dec_label_pc_12e98
  %v1_12eb4 = add i32 %v3_12eac, 8
  %v2_12eb4 = inttoptr i32 %v1_12eb4 to i32*
  %v3_12eb4 = load i32, i32* %v2_12eb4, align 4
  store i32 %v3_12eb4, i32* %r3.global-to-local, align 4
  %v9_12eb8 = icmp eq i32 %v3_12eb4, %v2_12e9c
  br i1 %v9_12eb8, label %dec_label_pc_12ec0, label %dec_label_pc_12f10

dec_label_pc_12ec0:                               ; preds = %dec_label_pc_12eb4
  store i32 %v3_12ea0, i32* %v2_12eb4, align 4
  %v0_12ec4 = load i32, i32* %r2.global-to-local, align 4
  %v1_12ec4 = load i32, i32* %ip.global-to-local, align 4
  %v2_12ec4 = add i32 %v1_12ec4, 12
  %v3_12ec4 = inttoptr i32 %v2_12ec4 to i32*
  store i32 %v0_12ec4, i32* %v3_12ec4, align 4
  %v0_12ec8 = load i32, i32* %lr.global-to-local, align 4
  %v1_12ec8 = load i32, i32* %r5.global-to-local, align 4
  %v2_12ec8 = add i32 %v1_12ec8, %v0_12ec8
  store i32 %v2_12ec8, i32* %lr.global-to-local, align 4
  %v0_12ed0.pre = load i32, i32* @r0, align 4
  %v0_12ed4.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_12ecc

dec_label_pc_12ecc:                               ; preds = %dec_label_pc_12e7c, %dec_label_pc_12ec0
  %v0_12f44 = phi i32 [ %v1_12e80, %dec_label_pc_12e7c ], [ %v2_12ec8, %dec_label_pc_12ec0 ]
  %v0_12ed4 = phi i32 [ %v3_12e90, %dec_label_pc_12e7c ], [ %v0_12ed4.pre, %dec_label_pc_12ec0 ]
  %v1_12ee8 = phi i32 [ %v2_12e84, %dec_label_pc_12e7c ], [ %v0_12ed0.pre, %dec_label_pc_12ec0 ]
  %v0_12ecc = load i32, i32* @r4, align 4
  %v1_12ecc = add i32 %v0_12ecc, 44
  %v2_12ecc = inttoptr i32 %v1_12ecc to i32*
  %v3_12ecc = load i32, i32* %v2_12ecc, align 4
  store i32 %v3_12ecc, i32* %r3.global-to-local, align 4
  %v9_12ed0 = icmp eq i32 %v1_12ee8, %v3_12ecc
  %v1_12ed4 = and i32 %v0_12ed4, -4
  store i32 %v1_12ed4, i32* %r5.global-to-local, align 4
  br i1 %v9_12ed0, label %dec_label_pc_12f44, label %dec_label_pc_12edc

dec_label_pc_12edc:                               ; preds = %dec_label_pc_12ecc
  %v2_12edc = add i32 %v1_12ee8, %v1_12ed4
  store i32 %v2_12edc, i32* %r3.global-to-local, align 4
  %v1_12ee0 = add i32 %v2_12edc, 4
  %v2_12ee0 = inttoptr i32 %v1_12ee0 to i32*
  %v3_12ee0 = load i32, i32* %v2_12ee0, align 4
  store i32 %v3_12ee0, i32* %r3.global-to-local, align 4
  %v1_12ee4 = urem i32 %v3_12ee0, 2
  %v2_12ee4 = icmp eq i32 %v1_12ee4, 0
  %v2_12ee8 = add i32 %v1_12ee8, 4
  %v3_12ee8 = inttoptr i32 %v2_12ee8 to i32*
  store i32 %v1_12ed4, i32* %v3_12ee8, align 4
  br i1 %v2_12ee4, label %dec_label_pc_12ef0, label %dec_label_pc_12edc.dec_label_pc_12f20_crit_edge

dec_label_pc_12edc.dec_label_pc_12f20_crit_edge:  ; preds = %dec_label_pc_12edc
  %v0_12f24.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_12f20

dec_label_pc_12ef0:                               ; preds = %dec_label_pc_12edc
  %v0_12ef0 = load i32, i32* @r0, align 4
  %v1_12ef0 = add i32 %v0_12ef0, 8
  %v2_12ef0 = inttoptr i32 %v1_12ef0 to i32*
  %v3_12ef0 = load i32, i32* %v2_12ef0, align 4
  store i32 %v3_12ef0, i32* %ip.global-to-local, align 4
  %v1_12ef4 = add i32 %v3_12ef0, 12
  %v2_12ef4 = inttoptr i32 %v1_12ef4 to i32*
  %v3_12ef4 = load i32, i32* %v2_12ef4, align 4
  store i32 %v3_12ef4, i32* %r3.global-to-local, align 4
  %v9_12ef8 = icmp eq i32 %v3_12ef4, %v0_12ef0
  %v1_12efc = add i32 %v0_12ef0, 12
  %v2_12efc = inttoptr i32 %v1_12efc to i32*
  %v3_12efc = load i32, i32* %v2_12efc, align 4
  store i32 %v3_12efc, i32* %r2.global-to-local, align 4
  br i1 %v9_12ef8, label %dec_label_pc_12f04, label %dec_label_pc_12f10

dec_label_pc_12f04:                               ; preds = %dec_label_pc_12ef0
  %v1_12f04 = add i32 %v3_12efc, 8
  %v2_12f04 = inttoptr i32 %v1_12f04 to i32*
  %v3_12f04 = load i32, i32* %v2_12f04, align 4
  store i32 %v3_12f04, i32* %r3.global-to-local, align 4
  %v9_12f08 = icmp eq i32 %v3_12f04, %v0_12ef0
  br i1 %v9_12f08, label %dec_label_pc_12f14, label %dec_label_pc_12f10

dec_label_pc_12f10:                               ; preds = %dec_label_pc_12ef0, %dec_label_pc_12eb4, %dec_label_pc_12e98, %dec_label_pc_12f04
  %v0_12f10 = call i32 @function_13260()
  store i32 %v0_12f10, i32* @r0, align 4
  %v0_12f14.pre = load i32, i32* @ip, align 4
  %v1_12f14.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_12f14

dec_label_pc_12f14:                               ; preds = %dec_label_pc_12f04, %dec_label_pc_12f10
  %v1_12f14 = phi i32 [ %v3_12efc, %dec_label_pc_12f04 ], [ %v1_12f14.pre, %dec_label_pc_12f10 ]
  %v0_12f14 = phi i32 [ %v3_12ef0, %dec_label_pc_12f04 ], [ %v0_12f14.pre, %dec_label_pc_12f10 ]
  %v2_12f14 = add i32 %v1_12f14, 8
  %v3_12f14 = inttoptr i32 %v2_12f14 to i32*
  store i32 %v0_12f14, i32* %v3_12f14, align 4
  %v0_12f18 = load i32, i32* %r2.global-to-local, align 4
  %v1_12f18 = load i32, i32* %ip.global-to-local, align 4
  %v2_12f18 = add i32 %v1_12f18, 12
  %v3_12f18 = inttoptr i32 %v2_12f18 to i32*
  store i32 %v0_12f18, i32* %v3_12f18, align 4
  %v0_12f1c = load i32, i32* %lr.global-to-local, align 4
  %v1_12f1c = load i32, i32* %r5.global-to-local, align 4
  %v2_12f1c = add i32 %v1_12f1c, %v0_12f1c
  store i32 %v2_12f1c, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_12f20

dec_label_pc_12f20:                               ; preds = %dec_label_pc_12edc.dec_label_pc_12f20_crit_edge, %dec_label_pc_12f14
  %v0_12f24 = phi i32 [ %v0_12f24.pre, %dec_label_pc_12edc.dec_label_pc_12f20_crit_edge ], [ %v2_12f1c, %dec_label_pc_12f14 ]
  %v0_12f20 = load i32, i32* %r7.global-to-local, align 4
  %v1_12f20 = add i32 %v0_12f20, 8
  %v2_12f20 = inttoptr i32 %v1_12f20 to i32*
  %v3_12f20 = load i32, i32* %v2_12f20, align 4
  store i32 %v3_12f20, i32* %r2.global-to-local, align 4
  %v1_12f24 = or i32 %v0_12f24, 1
  store i32 %v1_12f24, i32* %r3.global-to-local, align 4
  %v0_12f28 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_12f28, i32* %v2_12f20, align 4
  %v0_12f2c = load i32, i32* %r1.global-to-local, align 4
  %v1_12f2c = load i32, i32* %r2.global-to-local, align 4
  %v2_12f2c = add i32 %v1_12f2c, 12
  %v3_12f2c = inttoptr i32 %v2_12f2c to i32*
  store i32 %v0_12f2c, i32* %v3_12f2c, align 4
  %v0_12f30 = load i32, i32* %lr.global-to-local, align 4
  %v1_12f30 = load i32, i32* %r1.global-to-local, align 4
  %v3_12f30 = add i32 %v1_12f30, %v0_12f30
  %v4_12f30 = inttoptr i32 %v3_12f30 to i32*
  store i32 %v0_12f30, i32* %v4_12f30, align 4
  %v0_12f34 = load i32, i32* %r3.global-to-local, align 4
  %v1_12f34 = load i32, i32* %r1.global-to-local, align 4
  %v2_12f34 = add i32 %v1_12f34, 4
  %v3_12f34 = inttoptr i32 %v2_12f34 to i32*
  store i32 %v0_12f34, i32* %v3_12f34, align 4
  %v0_12f38 = load i32, i32* %r2.global-to-local, align 4
  %v1_12f38 = load i32, i32* %r1.global-to-local, align 4
  %v2_12f38 = add i32 %v1_12f38, 8
  %v3_12f38 = inttoptr i32 %v2_12f38 to i32*
  store i32 %v0_12f38, i32* %v3_12f38, align 4
  %v0_12f3c = load i32, i32* %r7.global-to-local, align 4
  %v1_12f3c = load i32, i32* %r1.global-to-local, align 4
  %v2_12f3c = add i32 %v1_12f3c, 12
  %v3_12f3c = inttoptr i32 %v2_12f3c to i32*
  store i32 %v0_12f3c, i32* %v3_12f3c, align 4
  br label %dec_label_pc_12f54

dec_label_pc_12f44:                               ; preds = %dec_label_pc_12ecc
  %v2_12f44 = add i32 %v1_12ed4, %v0_12f44
  %v1_12f48 = or i32 %v2_12f44, 1
  store i32 %v1_12f48, i32* %r3.global-to-local, align 4
  %v1_12f4c = load i32, i32* %r1.global-to-local, align 4
  %v2_12f4c = add i32 %v1_12f4c, 4
  %v3_12f4c = inttoptr i32 %v2_12f4c to i32*
  store i32 %v1_12f48, i32* %v3_12f4c, align 4
  %v0_12f50 = load i32, i32* %r1.global-to-local, align 4
  %v1_12f50 = load i32, i32* @r4, align 4
  %v2_12f50 = add i32 %v1_12f50, 44
  %v3_12f50 = inttoptr i32 %v2_12f50 to i32*
  store i32 %v0_12f50, i32* %v3_12f50, align 4
  br label %dec_label_pc_12f54

dec_label_pc_12f54:                               ; preds = %dec_label_pc_12f20, %dec_label_pc_12f44
  %v0_12f54 = load i32, i32* %sl.global-to-local, align 4
  %v2_12f54 = icmp eq i32 %v0_12f54, 0
  store i32 %v0_12f54, i32* %r1.global-to-local, align 4
  br i1 %v2_12f54, label %dec_label_pc_12f60.loopexit, label %dec_label_pc_12e7c

dec_label_pc_12f60.loopexit:                      ; preds = %dec_label_pc_12f54
  %v0_12f60.pre = load i32, i32* %r6.global-to-local, align 4
  %v1_12f60.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_12f60

dec_label_pc_12f60:                               ; preds = %dec_label_pc_12f60.loopexit, %dec_label_pc_12e6c
  %v1_12f60 = phi i32 [ %v1_12f60.pre, %dec_label_pc_12f60.loopexit ], [ %v1_12f6010, %dec_label_pc_12e6c ]
  %v0_12f68 = phi i32 [ %v0_12f60.pre, %dec_label_pc_12f60.loopexit ], [ %v1_12e78, %dec_label_pc_12e6c ]
  %v9_12f60 = icmp eq i32 %v0_12f68, %v1_12f60
  br i1 %v9_12f60, label %dec_label_pc_12fd8, label %dec_label_pc_12f68

dec_label_pc_12f68:                               ; preds = %dec_label_pc_12f60
  %v1_12f68 = add i32 %v0_12f68, 4
  store i32 %v1_12f68, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_12e6c

dec_label_pc_12f70.dec_label_pc_12f70_crit_edge:  ; preds = %dec_label_pc_12f70.preheader, %dec_label_pc_12f70.dec_label_pc_12f70_crit_edge
  %v0_12f70.pre = load i32, i32* @r4, align 4
  %v1_12f70.pre = load i32, i32* %r2.global-to-local, align 4
  %v4_12f70 = mul i32 %v1_12f70.pre, 8
  %v5_12f70 = add i32 %v4_12f70, %v0_12f70.pre
  %v1_12f74 = add i32 %v1_12f70.pre, 1
  store i32 %v1_12f74, i32* %r2.global-to-local, align 4
  %v1_12f78 = add i32 %v5_12f70, 44
  store i32 %v1_12f78, i32* %r3.global-to-local, align 4
  %v2_12f80 = add i32 %v5_12f70, 52
  %v3_12f80 = inttoptr i32 %v2_12f80 to i32*
  store i32 %v1_12f78, i32* %v3_12f80, align 4
  %v0_12f84 = load i32, i32* %r3.global-to-local, align 4
  %v2_12f84 = add i32 %v0_12f84, 12
  %v3_12f84 = inttoptr i32 %v2_12f84 to i32*
  store i32 %v0_12f84, i32* %v3_12f84, align 4
  %v7_12f88 = icmp sgt i32 %v1_12f74, 95
  br i1 %v7_12f88, label %dec_label_pc_12f8c, label %dec_label_pc_12f70.dec_label_pc_12f70_crit_edge

dec_label_pc_12f8c:                               ; preds = %dec_label_pc_12f70.dec_label_pc_12f70_crit_edge
  %v0_12f8c = load i32, i32* @r4, align 4
  %v1_12f8c = inttoptr i32 %v0_12f8c to i32*
  %v2_12f8c = load i32, i32* %v1_12f8c, align 4
  store i32 %v2_12f8c, i32* %r2.global-to-local, align 4
  %v1_12f90 = add i32 %v0_12f8c, 864
  %v2_12f90 = inttoptr i32 %v1_12f90 to i32*
  %v3_12f90 = load i32, i32* %v2_12f90, align 4
  %v1_12f98 = urem i32 %v2_12f8c, 4
  store i32 262144, i32* %r0.global-to-local, align 4
  %v1_12fa0 = or i32 %v3_12f90, 1
  store i32 %v1_12fa0, i32* %r1.global-to-local, align 4
  %v1_12fa4 = or i32 %v1_12f98, 72
  store i32 %v1_12fa4, i32* %r2.global-to-local, align 4
  %v1_12fa8 = add i32 %v0_12f8c, 52
  store i32 %v1_12fa8, i32* %ip.global-to-local, align 4
  %v2_12fac = add i32 %v0_12f8c, 840
  %v3_12fac = inttoptr i32 %v2_12fac to i32*
  store i32 0, i32* %v3_12fac, align 4
  store i32 ptrtoint (i32* @global_var_10000.37 to i32), i32* %r3.global-to-local, align 4
  %v0_12fb4 = load i32, i32* %r0.global-to-local, align 4
  %v1_12fb4 = load i32, i32* @r4, align 4
  %v2_12fb4 = add i32 %v1_12fb4, 836
  %v3_12fb4 = inttoptr i32 %v2_12fb4 to i32*
  store i32 %v0_12fb4, i32* %v3_12fb4, align 4
  %v0_12fb8 = load i32, i32* %r0.global-to-local, align 4
  %v1_12fb8 = load i32, i32* @r4, align 4
  %v2_12fb8 = add i32 %v1_12fb8, 844
  %v3_12fb8 = inttoptr i32 %v2_12fb8 to i32*
  store i32 %v0_12fb8, i32* %v3_12fb8, align 4
  %v1_12fbc = load i32, i32* @r4, align 4
  %v2_12fbc = add i32 %v1_12fbc, 852
  %v3_12fbc = inttoptr i32 %v2_12fbc to i32*
  store i32 ptrtoint (i32* @global_var_10000.37 to i32), i32* %v3_12fbc, align 4
  %v1_12fc0 = load i32, i32* @r4, align 4
  %v2_12fc0 = add i32 %v1_12fc0, 864
  %v3_12fc0 = inttoptr i32 %v2_12fc0 to i32*
  store i32 %v1_12fa0, i32* %v3_12fc0, align 4
  %v1_12fc4 = load i32, i32* @r4, align 4
  %v2_12fc4 = inttoptr i32 %v1_12fc4 to i32*
  store i32 %v1_12fa4, i32* %v2_12fc4, align 4
  %v0_12fc8 = load i32, i32* %ip.global-to-local, align 4
  %v1_12fc8 = load i32, i32* @r4, align 4
  %v2_12fc8 = add i32 %v1_12fc8, 44
  %v3_12fc8 = inttoptr i32 %v2_12fc8 to i32*
  store i32 %v0_12fc8, i32* %v3_12fc8, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v4_12fd0 = call i32 @function_13638(i32 30, i32 %v1_12fa0, i32 %v1_12fa4, i32 ptrtoint (i32* @global_var_10000.37 to i32))
  store i32 %v4_12fd0, i32* @r0, align 4
  %v1_12fd4 = load i32, i32* @r4, align 4
  %v2_12fd4 = add i32 %v1_12fd4, 860
  %v3_12fd4 = inttoptr i32 %v2_12fd4 to i32*
  store i32 %v4_12fd0, i32* %v3_12fd4, align 4
  br label %dec_label_pc_12fd8

dec_label_pc_12fd8:                               ; preds = %dec_label_pc_12f60, %dec_label_pc_12f8c
  %v2_12fdc = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_12fdc, i32* @r4, align 4
  %v1_12fe0 = load i32, i32* @r0, align 4
  ret i32 %v1_12fe0

; uselistorder directives
  uselistorder i32 %v0_12f8c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_12f84, { 1, 0 }
  uselistorder i32 %v1_12f68, { 1, 0 }
  uselistorder i32 %v0_12f54, { 0, 2, 1 }
  uselistorder i32 %v0_12f30, { 1, 0 }
  uselistorder i32 %v1_12e80, { 1, 0, 2 }
  uselistorder i32 %v0_12e98, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_12e58, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 1, 17 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 2, 3, 12 }
  uselistorder i32* %lr.global-to-local, { 3, 0, 4, 2, 1, 5, 6 }
  uselistorder i32 860, { 2, 1, 0, 3 }
  uselistorder i32 30, { 1, 5, 0, 3, 4, 2 }
  uselistorder label %dec_label_pc_12fd8, { 1, 0 }
  uselistorder label %dec_label_pc_12f70.dec_label_pc_12f70_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_12f54, { 1, 0 }
  uselistorder label %dec_label_pc_12f20, { 1, 0 }
  uselistorder label %dec_label_pc_12f14, { 1, 0 }
  uselistorder label %dec_label_pc_12f10, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_12ecc, { 1, 0 }
}

define i32 @function_12fe4() local_unnamed_addr {
dec_label_pc_12fe4:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_12fe4 = load i32, i32* @r4, align 4
  %v6_12fe4 = load i32, i32* @r5, align 4
  %v9_12fe4 = load i32, i32* @r6, align 4
  %v12_12fe4 = load i32, i32* @r7, align 4
  %v18_12fe4 = load i32, i32* @lr, align 4
  %v0_12fec = load i32, i32* @r0, align 4
  store i32 %v0_12fec, i32* @r6, align 4
  %v2_12fec = icmp eq i32 %v0_12fec, 0
  %v2_12ff0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 add (i32 ptrtoint (i32* @global_var_c37c.770 to i32), i32 77820), i32* @r7, align 4
  br i1 %v2_12fec, label %dec_label_pc_131f8, label %dec_label_pc_12ffc

dec_label_pc_12ffc:                               ; preds = %dec_label_pc_12fe4
  store i32 68, i32* %r3.global-to-local, align 4
  %v4_13000 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_c37c.770 to i32), i32 77888) to i32*), align 4
  store i32 %v4_13000, i32* %r4.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 %v4_13000, i32* %r2.global-to-local, align 4
  %v4_1300c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_c37c.770 to i32), i32 77856) to i32*), align 4
  store i32 %v4_1300c, i32* %r1.global-to-local, align 4
  store i32 %v2_12ff0, i32* %r0.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v4_13018 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_c37c.770 to i32), i32 77892) to i32*), align 4
  store i32 %v4_13018, i32* %ip.global-to-local, align 4
  store i32 77860, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_13018)
  %v0_13024 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_13024, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_1302c = load i32, i32* @r7, align 4
  %v2_1302c = add i32 %v0_1302c, 16
  %v3_1302c = inttoptr i32 %v2_1302c to i32*
  %v4_1302c = load i32, i32* %v3_1302c, align 4
  store i32 %v4_1302c, i32* %ip.global-to-local, align 4
  store i32 77880, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1302c)
  store i32 32, i32* %r3.global-to-local, align 4
  %v0_1303c = load i32, i32* @r7, align 4
  %v2_1303c = add i32 %v0_1303c, 32
  %v3_1303c = inttoptr i32 %v2_1303c to i32*
  %v4_1303c = load i32, i32* %v3_1303c, align 4
  store i32 %v4_1303c, i32* @lr, align 4
  %v0_13040 = load i32, i32* @r6, align 4
  %v1_13040 = add i32 %v0_13040, -4
  %v2_13040 = inttoptr i32 %v1_13040 to i32*
  %v3_13040 = load i32, i32* %v2_13040, align 4
  store i32 %v3_13040, i32* %r2.global-to-local, align 4
  %v1_13044 = inttoptr i32 %v4_1303c to i32*
  %v2_13044 = load i32, i32* %v1_13044, align 4
  store i32 %v2_13044, i32* %r3.global-to-local, align 4
  %v1_13048 = and i32 %v3_13040, -4
  store i32 %v1_13048, i32* %ip.global-to-local, align 4
  %v1_1304c = add i32 %v0_13040, -8
  store i32 %v1_1304c, i32* @r5, align 4
  store i32 %v1_1304c, i32* %r4.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_13048, %v2_13044
  br i1 %tmp, label %dec_label_pc_1307c, label %dec_label_pc_1305c

dec_label_pc_1305c:                               ; preds = %dec_label_pc_12ffc
  %v1_1305c = or i32 %v2_13044, 3
  store i32 %v1_1305c, i32* %r3.global-to-local, align 4
  store i32 %v1_1305c, i32* %v1_13044, align 4
  %v3_13060 = load i32, i32* @lr, align 4
  %v4_13060 = add i32 %v3_13060, -8
  store i32 %v4_13060, i32* %lr.global-to-local, align 4
  %v0_13064 = load i32, i32* %ip.global-to-local, align 4
  %v3_13064 = udiv i32 %v0_13064, 8
  store i32 %v3_13064, i32* %r1.global-to-local, align 4
  %v1_13068 = add i32 %v3_13060, -4
  store i32 %v1_13068, i32* %r2.global-to-local, align 4
  %v4_1306c = mul nuw i32 %v3_13064, 4
  %v5_1306c = add i32 %v4_1306c, %v1_13068
  %v6_1306c = inttoptr i32 %v5_1306c to i32*
  %v7_1306c = load i32, i32* %v6_1306c, align 4
  store i32 %v7_1306c, i32* %r3.global-to-local, align 4
  %v1_13070 = load i32, i32* @r5, align 4
  %v2_13070 = add i32 %v1_13070, 8
  %v3_13070 = inttoptr i32 %v2_13070 to i32*
  store i32 %v7_1306c, i32* %v3_13070, align 4
  %v0_13074 = load i32, i32* @r5, align 4
  %v1_13074 = load i32, i32* %r2.global-to-local, align 4
  %v2_13074 = load i32, i32* %r1.global-to-local, align 4
  %v5_13074 = mul i32 %v2_13074, 4
  %v6_13074 = add i32 %v5_13074, %v1_13074
  %v7_13074 = inttoptr i32 %v6_13074 to i32*
  store i32 %v0_13074, i32* %v7_13074, align 4
  br label %dec_label_pc_131e0

dec_label_pc_1307c:                               ; preds = %dec_label_pc_12ffc
  %v1_1307c = and i32 %v3_13040, 2
  %v2_1307c = icmp eq i32 %v1_1307c, 0
  br i1 %v2_1307c, label %dec_label_pc_13084, label %dec_label_pc_131b8

dec_label_pc_13084:                               ; preds = %dec_label_pc_1307c
  %v1_13084 = or i32 %v2_13044, 1
  store i32 %v1_13084, i32* %r3.global-to-local, align 4
  store i32 %v1_13084, i32* %v1_13044, align 4
  %v0_1308c = load i32, i32* @r6, align 4
  %v1_1308c = add i32 %v0_1308c, -4
  %v2_1308c = inttoptr i32 %v1_1308c to i32*
  %v3_1308c = load i32, i32* %v2_1308c, align 4
  store i32 %v3_1308c, i32* %r3.global-to-local, align 4
  %v0_13090 = load i32, i32* @r5, align 4
  %v1_13090 = load i32, i32* %ip.global-to-local, align 4
  %v2_13090 = add i32 %v1_13090, %v0_13090
  store i32 %v2_13090, i32* %lr.global-to-local, align 4
  %v1_13094 = urem i32 %v3_1308c, 2
  %v2_13094 = icmp eq i32 %v1_13094, 0
  %v1_13098 = add i32 %v2_13090, 4
  %v2_13098 = inttoptr i32 %v1_13098 to i32*
  %v3_13098 = load i32, i32* %v2_13098, align 4
  store i32 %v3_13098, i32* %r8.global-to-local, align 4
  br i1 %v2_13094, label %dec_label_pc_130a0, label %dec_label_pc_130d4

dec_label_pc_130a0:                               ; preds = %dec_label_pc_13084
  %v1_130a0 = add i32 %v0_1308c, -8
  %v2_130a0 = inttoptr i32 %v1_130a0 to i32*
  %v3_130a0 = load i32, i32* %v2_130a0, align 4
  store i32 %v3_130a0, i32* %r1.global-to-local, align 4
  %v2_130a4 = sub i32 %v0_13090, %v3_130a0
  store i32 %v2_130a4, i32* %r3.global-to-local, align 4
  %v1_130a8 = add i32 %v2_130a4, 8
  %v2_130a8 = inttoptr i32 %v1_130a8 to i32*
  %v3_130a8 = load i32, i32* %v2_130a8, align 4
  store i32 %v3_130a8, i32* %r2.global-to-local, align 4
  %v1_130ac = add i32 %v3_130a8, 12
  %v2_130ac = inttoptr i32 %v1_130ac to i32*
  %v3_130ac = load i32, i32* %v2_130ac, align 4
  store i32 %v3_130ac, i32* %r4.global-to-local, align 4
  %v9_130b0 = icmp eq i32 %v3_130ac, %v2_130a4
  %v1_130b4 = add i32 %v2_130a4, 12
  %v2_130b4 = inttoptr i32 %v1_130b4 to i32*
  %v3_130b4 = load i32, i32* %v2_130b4, align 4
  store i32 %v3_130b4, i32* %r0.global-to-local, align 4
  br i1 %v9_130b0, label %dec_label_pc_130bc, label %dec_label_pc_13120

dec_label_pc_130bc:                               ; preds = %dec_label_pc_130a0
  %v1_130bc = add i32 %v3_130b4, 8
  %v2_130bc = inttoptr i32 %v1_130bc to i32*
  %v3_130bc = load i32, i32* %v2_130bc, align 4
  store i32 %v3_130bc, i32* %r3.global-to-local, align 4
  %v9_130c0 = icmp eq i32 %v3_130bc, %v2_130a4
  br i1 %v9_130c0, label %dec_label_pc_130c8, label %dec_label_pc_13120

dec_label_pc_130c8:                               ; preds = %dec_label_pc_130bc
  store i32 %v3_130a8, i32* %v2_130bc, align 4
  %v0_130cc = load i32, i32* %r0.global-to-local, align 4
  %v1_130cc = load i32, i32* %r2.global-to-local, align 4
  %v2_130cc = add i32 %v1_130cc, 12
  %v3_130cc = inttoptr i32 %v2_130cc to i32*
  store i32 %v0_130cc, i32* %v3_130cc, align 4
  %v0_130d0 = load i32, i32* %ip.global-to-local, align 4
  %v1_130d0 = load i32, i32* %r1.global-to-local, align 4
  %v2_130d0 = add i32 %v1_130d0, %v0_130d0
  store i32 %v2_130d0, i32* %ip.global-to-local, align 4
  %v0_130e0.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_130e4.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_130d4

dec_label_pc_130d4:                               ; preds = %dec_label_pc_13084, %dec_label_pc_130c8
  %v0_13160 = phi i32 [ %v1_13090, %dec_label_pc_13084 ], [ %v2_130d0, %dec_label_pc_130c8 ]
  %v0_130e4 = phi i32 [ %v3_13098, %dec_label_pc_13084 ], [ %v0_130e4.pre, %dec_label_pc_130c8 ]
  %v1_130f8 = phi i32 [ %v2_13090, %dec_label_pc_13084 ], [ %v0_130e0.pre, %dec_label_pc_130c8 ]
  store i32 32, i32* %r3.global-to-local, align 4
  %v0_130d8 = load i32, i32* @r7, align 4
  %v2_130d8 = add i32 %v0_130d8, 32
  %v3_130d8 = inttoptr i32 %v2_130d8 to i32*
  %v4_130d8 = load i32, i32* %v3_130d8, align 4
  store i32 %v4_130d8, i32* %r2.global-to-local, align 4
  %v1_130dc = add i32 %v4_130d8, 44
  %v2_130dc = inttoptr i32 %v1_130dc to i32*
  %v3_130dc = load i32, i32* %v2_130dc, align 4
  store i32 %v3_130dc, i32* %r3.global-to-local, align 4
  %v9_130e0 = icmp eq i32 %v1_130f8, %v3_130dc
  %v1_130e4 = and i32 %v0_130e4, -4
  store i32 %v1_130e4, i32* %r0.global-to-local, align 4
  br i1 %v9_130e0, label %dec_label_pc_13160, label %dec_label_pc_130ec

dec_label_pc_130ec:                               ; preds = %dec_label_pc_130d4
  %v2_130ec = add i32 %v1_130f8, %v1_130e4
  store i32 %v2_130ec, i32* %r3.global-to-local, align 4
  %v1_130f0 = add i32 %v2_130ec, 4
  %v2_130f0 = inttoptr i32 %v1_130f0 to i32*
  %v3_130f0 = load i32, i32* %v2_130f0, align 4
  store i32 %v3_130f0, i32* %r3.global-to-local, align 4
  %v1_130f4 = urem i32 %v3_130f0, 2
  %v2_130f4 = icmp eq i32 %v1_130f4, 0
  %v2_130f8 = add i32 %v1_130f8, 4
  %v3_130f8 = inttoptr i32 %v2_130f8 to i32*
  store i32 %v1_130e4, i32* %v3_130f8, align 4
  br i1 %v2_130f4, label %dec_label_pc_13100, label %dec_label_pc_130ec.dec_label_pc_13130_crit_edge

dec_label_pc_130ec.dec_label_pc_13130_crit_edge:  ; preds = %dec_label_pc_130ec
  %v0_13140.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13130

dec_label_pc_13100:                               ; preds = %dec_label_pc_130ec
  %v0_13100 = load i32, i32* %lr.global-to-local, align 4
  %v1_13100 = add i32 %v0_13100, 8
  %v2_13100 = inttoptr i32 %v1_13100 to i32*
  %v3_13100 = load i32, i32* %v2_13100, align 4
  store i32 %v3_13100, i32* %r1.global-to-local, align 4
  %v1_13104 = add i32 %v3_13100, 12
  %v2_13104 = inttoptr i32 %v1_13104 to i32*
  %v3_13104 = load i32, i32* %v2_13104, align 4
  store i32 %v3_13104, i32* %r3.global-to-local, align 4
  %v9_13108 = icmp eq i32 %v3_13104, %v0_13100
  %v1_1310c = add i32 %v0_13100, 12
  %v2_1310c = inttoptr i32 %v1_1310c to i32*
  %v3_1310c = load i32, i32* %v2_1310c, align 4
  store i32 %v3_1310c, i32* %r2.global-to-local, align 4
  br i1 %v9_13108, label %dec_label_pc_13114, label %dec_label_pc_13120

dec_label_pc_13114:                               ; preds = %dec_label_pc_13100
  %v1_13114 = add i32 %v3_1310c, 8
  %v2_13114 = inttoptr i32 %v1_13114 to i32*
  %v3_13114 = load i32, i32* %v2_13114, align 4
  store i32 %v3_13114, i32* %r3.global-to-local, align 4
  %v9_13118 = icmp eq i32 %v3_13114, %v0_13100
  br i1 %v9_13118, label %dec_label_pc_13124, label %dec_label_pc_13120

dec_label_pc_13120:                               ; preds = %dec_label_pc_13100, %dec_label_pc_130bc, %dec_label_pc_130a0, %dec_label_pc_13114
  %v0_13120 = call i32 @function_13260()
  store i32 %v0_13120, i32* %r0.global-to-local, align 4
  %v0_13124.pre = load i32, i32* @r1, align 4
  %v1_13124.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_13124

dec_label_pc_13124:                               ; preds = %dec_label_pc_13114, %dec_label_pc_13120
  %v1_13124 = phi i32 [ %v3_1310c, %dec_label_pc_13114 ], [ %v1_13124.pre, %dec_label_pc_13120 ]
  %v0_13124 = phi i32 [ %v3_13100, %dec_label_pc_13114 ], [ %v0_13124.pre, %dec_label_pc_13120 ]
  %v2_13124 = add i32 %v1_13124, 8
  %v3_13124 = inttoptr i32 %v2_13124 to i32*
  store i32 %v0_13124, i32* %v3_13124, align 4
  %v0_13128 = load i32, i32* %r2.global-to-local, align 4
  %v1_13128 = load i32, i32* %r1.global-to-local, align 4
  %v2_13128 = add i32 %v1_13128, 12
  %v3_13128 = inttoptr i32 %v2_13128 to i32*
  store i32 %v0_13128, i32* %v3_13128, align 4
  %v0_1312c = load i32, i32* %ip.global-to-local, align 4
  %v1_1312c = load i32, i32* %r0.global-to-local, align 4
  %v2_1312c = add i32 %v1_1312c, %v0_1312c
  store i32 %v2_1312c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13130

dec_label_pc_13130:                               ; preds = %dec_label_pc_130ec.dec_label_pc_13130_crit_edge, %dec_label_pc_13124
  %v0_13140 = phi i32 [ %v0_13140.pre, %dec_label_pc_130ec.dec_label_pc_13130_crit_edge ], [ %v2_1312c, %dec_label_pc_13124 ]
  store i32 32, i32* %r3.global-to-local, align 4
  %v0_13134 = load i32, i32* @r7, align 4
  %v2_13134 = add i32 %v0_13134, 32
  %v3_13134 = inttoptr i32 %v2_13134 to i32*
  %v4_13134 = load i32, i32* %v3_13134, align 4
  %v1_13138 = add i32 %v4_13134, 52
  store i32 %v1_13138, i32* %r3.global-to-local, align 4
  %v1_1313c = add i32 %v4_13134, 60
  %v2_1313c = inttoptr i32 %v1_1313c to i32*
  %v3_1313c = load i32, i32* %v2_1313c, align 4
  store i32 %v3_1313c, i32* %r1.global-to-local, align 4
  %v1_13140 = or i32 %v0_13140, 1
  store i32 %v1_13140, i32* %r2.global-to-local, align 4
  %v1_13144 = load i32, i32* %r4.global-to-local, align 4
  %v2_13144 = add i32 %v1_13144, 12
  %v3_13144 = inttoptr i32 %v2_13144 to i32*
  store i32 %v1_13138, i32* %v3_13144, align 4
  %v0_13148 = load i32, i32* %r1.global-to-local, align 4
  %v1_13148 = load i32, i32* %r4.global-to-local, align 4
  %v2_13148 = add i32 %v1_13148, 8
  %v3_13148 = inttoptr i32 %v2_13148 to i32*
  store i32 %v0_13148, i32* %v3_13148, align 4
  %v0_1314c = load i32, i32* %r2.global-to-local, align 4
  %v1_1314c = load i32, i32* %r4.global-to-local, align 4
  %v2_1314c = add i32 %v1_1314c, 4
  %v3_1314c = inttoptr i32 %v2_1314c to i32*
  store i32 %v0_1314c, i32* %v3_1314c, align 4
  %v0_13150 = load i32, i32* %ip.global-to-local, align 4
  %v1_13150 = load i32, i32* %r4.global-to-local, align 4
  %v3_13150 = add i32 %v1_13150, %v0_13150
  %v4_13150 = inttoptr i32 %v3_13150 to i32*
  store i32 %v0_13150, i32* %v4_13150, align 4
  %v0_13154 = load i32, i32* %r4.global-to-local, align 4
  %v1_13154 = load i32, i32* %r1.global-to-local, align 4
  %v2_13154 = add i32 %v1_13154, 12
  %v3_13154 = inttoptr i32 %v2_13154 to i32*
  store i32 %v0_13154, i32* %v3_13154, align 4
  %v0_13158 = load i32, i32* %r4.global-to-local, align 4
  %v1_13158 = load i32, i32* %r3.global-to-local, align 4
  %v2_13158 = add i32 %v1_13158, 8
  %v3_13158 = inttoptr i32 %v2_13158 to i32*
  store i32 %v0_13158, i32* %v3_13158, align 4
  br label %dec_label_pc_13170

dec_label_pc_13160:                               ; preds = %dec_label_pc_130d4
  %v2_13160 = add i32 %v1_130e4, %v0_13160
  store i32 %v2_13160, i32* %ip.global-to-local, align 4
  %v1_13164 = or i32 %v2_13160, 1
  store i32 %v1_13164, i32* %r3.global-to-local, align 4
  %v0_13168 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_13168, i32* %v2_130dc, align 4
  %v0_1316c = load i32, i32* %r3.global-to-local, align 4
  %v1_1316c = load i32, i32* %r4.global-to-local, align 4
  %v2_1316c = add i32 %v1_1316c, 4
  %v3_1316c = inttoptr i32 %v2_1316c to i32*
  store i32 %v0_1316c, i32* %v3_1316c, align 4
  br label %dec_label_pc_13170

dec_label_pc_13170:                               ; preds = %dec_label_pc_13130, %dec_label_pc_13160
  %v0_13170 = load i32, i32* %ip.global-to-local, align 4
  %v3_13174 = icmp ult i32 %v0_13170, 131070
  br i1 %v3_13174, label %dec_label_pc_131e0, label %dec_label_pc_13178

dec_label_pc_13178:                               ; preds = %dec_label_pc_13170
  store i32 32, i32* %r3.global-to-local, align 4
  %v0_1317c = load i32, i32* @r7, align 4
  %v2_1317c = add i32 %v0_1317c, 32
  %v3_1317c = inttoptr i32 %v2_1317c to i32*
  %v4_1317c = load i32, i32* %v3_1317c, align 4
  store i32 %v4_1317c, i32* @r4, align 4
  %v1_13180 = inttoptr i32 %v4_1317c to i32*
  %v2_13180 = load i32, i32* %v1_13180, align 4
  store i32 %v2_13180, i32* %r3.global-to-local, align 4
  %v1_13184 = and i32 %v2_13180, 2
  %v2_13184 = icmp eq i32 %v1_13184, 0
  br i1 %v2_13184, label %bb15, label %bb

bb:                                               ; preds = %dec_label_pc_13178
  store i32 %v4_1317c, i32* %r0.global-to-local, align 4
  br label %bb15

bb15:                                             ; preds = %dec_label_pc_13178, %bb
  store i32 78224, i32* @lr, align 4
  %v1_1318c = xor i1 %v2_13184, true
  call void @__pseudo_cond_branch(i1 %v1_1318c, i32 ptrtoint (i32* @global_var_12e30.776 to i32))
  %v0_13190 = load i32, i32* @r4, align 4
  %v1_13190 = add i32 %v0_13190, 44
  %v2_13190 = inttoptr i32 %v1_13190 to i32*
  %v3_13190 = load i32, i32* %v2_13190, align 4
  store i32 %v3_13190, i32* %r3.global-to-local, align 4
  %v1_13194 = add i32 %v3_13190, 4
  %v2_13194 = inttoptr i32 %v1_13194 to i32*
  %v3_13194 = load i32, i32* %v2_13194, align 4
  store i32 %v3_13194, i32* %r3.global-to-local, align 4
  %v1_13198 = add i32 %v0_13190, 836
  %v2_13198 = inttoptr i32 %v1_13198 to i32*
  %v3_13198 = load i32, i32* %v2_13198, align 4
  store i32 %v3_13198, i32* %r2.global-to-local, align 4
  %v1_1319c = and i32 %v3_13194, -4
  store i32 %v1_1319c, i32* %r3.global-to-local, align 4
  %v3_131a0 = icmp ult i32 %v1_1319c, %v3_13198
  br i1 %v3_131a0, label %dec_label_pc_131e0, label %dec_label_pc_131a8

dec_label_pc_131a8:                               ; preds = %bb15
  store i32 %v0_13190, i32* %r1.global-to-local, align 4
  %v1_131ac = add i32 %v0_13190, 840
  %v2_131ac = inttoptr i32 %v1_131ac to i32*
  %v3_131ac = load i32, i32* %v2_131ac, align 4
  store i32 %v3_131ac, i32* %r0.global-to-local, align 4
  %v2_131b0 = call i32 @function_12d80(i32 %v3_131ac, i32 %v0_13190)
  store i32 %v2_131b0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_131e0

dec_label_pc_131b8:                               ; preds = %dec_label_pc_1307c
  %v2_131b8 = inttoptr i32 %v1_1304c to i32*
  %v3_131b8 = load i32, i32* %v2_131b8, align 4
  store i32 %v3_131b8, i32* %r0.global-to-local, align 4
  %v1_131bc = add i32 %v4_1303c, 848
  %v2_131bc = inttoptr i32 %v1_131bc to i32*
  %v3_131bc = load i32, i32* %v2_131bc, align 4
  store i32 %v3_131bc, i32* %r2.global-to-local, align 4
  %v1_131c0 = add i32 %v4_1303c, 868
  %v2_131c0 = inttoptr i32 %v1_131c0 to i32*
  %v3_131c0 = load i32, i32* %v2_131c0, align 4
  %v2_131c4 = add i32 %v3_131b8, %v1_13048
  store i32 %v2_131c4, i32* %r1.global-to-local, align 4
  %v1_131c8 = add i32 %v3_131bc, -1
  store i32 %v1_131c8, i32* %r2.global-to-local, align 4
  %v2_131cc = sub i32 %v3_131c0, %v2_131c4
  store i32 %v2_131cc, i32* %r3.global-to-local, align 4
  store i32 %v2_131cc, i32* %v2_131c0, align 4
  %v1_131d4 = load i32, i32* @lr, align 4
  %v2_131d4 = add i32 %v1_131d4, 848
  %v3_131d4 = inttoptr i32 %v2_131d4 to i32*
  store i32 %v1_131c8, i32* %v3_131d4, align 4
  %v0_131d8 = load i32, i32* %r0.global-to-local, align 4
  %v1_131d8 = load i32, i32* @r5, align 4
  %v2_131d8 = sub i32 %v1_131d8, %v0_131d8
  store i32 %v2_131d8, i32* %r0.global-to-local, align 4
  %v4_131dc = call i32 @function_145cc(i32 %v2_131d8, i32 %v2_131c4, i32 %v1_131c8, i32 %v2_131cc)
  store i32 %v4_131dc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_131e0

dec_label_pc_131e0:                               ; preds = %bb15, %dec_label_pc_13170, %dec_label_pc_131a8, %dec_label_pc_1305c, %dec_label_pc_131b8
  store i32 %v2_12ff0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  %v0_131ec = load i32, i32* @r7, align 4
  %v2_131ec = add i32 %v0_131ec, 24
  %v3_131ec = inttoptr i32 %v2_131ec to i32*
  %v4_131ec = load i32, i32* %v3_131ec, align 4
  store i32 %v4_131ec, i32* @ip, align 4
  store i32 78328, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_131ec)
  br label %dec_label_pc_131f8

dec_label_pc_131f8:                               ; preds = %dec_label_pc_12fe4, %dec_label_pc_131e0
  store i32 %v3_12fe4, i32* @r4, align 4
  store i32 %v6_12fe4, i32* @r5, align 4
  store i32 %v9_12fe4, i32* @r6, align 4
  store i32 %v12_12fe4, i32* @r7, align 4
  store i32 %v18_12fe4, i32* @lr, align 4
  ret i32 %v2_12ff0

; uselistorder directives
  uselistorder i32 %v0_13190, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_13150, { 1, 0 }
  uselistorder i32 %v1_13090, { 1, 0 }
  uselistorder i32 %v0_13090, { 1, 0 }
  uselistorder i32 %v3_13064, { 1, 0 }
  uselistorder i32 %v1_13048, { 1, 0, 2 }
  uselistorder i32 %v2_13044, { 1, 2, 0, 3 }
  uselistorder i32 %v4_1303c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_12fec, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32* %r0.global-to-local, { 4, 14, 1, 2, 3, 0, 5, 6, 12, 13, 7, 8, 9, 11, 10 }
  uselistorder i32* %lr.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %ip.global-to-local, { 4, 0, 5, 1, 6, 3, 2, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 868, { 2, 0, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_131f8, { 1, 0 }
  uselistorder label %dec_label_pc_131e0, { 4, 2, 0, 1, 3 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %dec_label_pc_13170, { 1, 0 }
  uselistorder label %dec_label_pc_13130, { 1, 0 }
  uselistorder label %dec_label_pc_13124, { 1, 0 }
  uselistorder label %dec_label_pc_13120, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_130d4, { 1, 0 }
}

define i32 @function_13208(i32 %arg1) local_unnamed_addr {
dec_label_pc_13208:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_13208 = load i1, i1* @cpsr_z, align 1
  %v2_13208 = load i32, i32* @r4, align 4
  br i1 %v0_13208, label %bb, label %dec_label_pc_13208..thread4_crit_edge

dec_label_pc_13208..thread4_crit_edge:            ; preds = %dec_label_pc_13208
  %v0_13234.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread4

bb:                                               ; preds = %dec_label_pc_13208
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_13208..thread4_crit_edge, %bb
  %v0_13234 = phi i32 [ %v0_13234.pre, %dec_label_pc_13208..thread4_crit_edge ], [ 0, %bb ]
  store i32 %v2_13208, i32* %stack_var_-12, align 4
  %v6_13220 = load i32, i32* @r5, align 4
  %v9_13220 = load i32, i32* @lr, align 4
  %v4_13230 = load i32, i32* inttoptr (i32 127896 to i32*), align 8
  store i32 %v4_13230, i32* @r5, align 4
  store i32 %v0_13234, i32* @r4, align 4
  store i32 %v4_13230, i32* @r0, align 4
  %v0_13240 = call i32 @function_12e30()
  %v0_13244 = load i32, i32* @r4, align 4
  store i32 %v0_13244, i32* %r0.global-to-local, align 4
  %v0_13248 = load i32, i32* @r5, align 4
  %v2_13250 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_13250, i32* @r4, align 4
  store i32 %v6_13220, i32* @r5, align 4
  store i32 %v9_13220, i32* @lr, align 4
  %v2_13254 = call i32 @function_12d80(i32 %v0_13244, i32 %v0_13248)
  store i32 %v2_13254, i32* %r0.global-to-local, align 4
  %v0_13258 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13258, label %bb13, label %.thread5

bb13:                                             ; preds = %.thread4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread5

.thread5:                                         ; preds = %.thread4, %bb13
  %v4_1325c = phi i32 [ %v2_13254, %.thread4 ], [ 0, %bb13 ]
  ret i32 %v4_1325c

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 2, 5, 3, 4, 0, 1 }
  uselistorder i32 (i32, i32)* @function_12d80, { 1, 0 }
  uselistorder i32 ()* @function_12e30, { 3, 2, 1, 0 }
  uselistorder i32* inttoptr (i32 127896 to i32*), { 2, 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @function_13260() local_unnamed_addr {
dec_label_pc_13260:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  store i32 127864, i32* @r5, align 4
  %v4_13278 = load i32, i32* inttoptr (i32 127880 to i32*), align 8
  store i32 78468, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_13278)
  %v2_13294 = ptrtoint i32* %stack_var_-8 to i32
  store i32 32, i32* %stack_var_-8, align 4
  %v3_132a0 = call i32 @function_11510(i32 1, i32 %v2_13294, i32 0)
  %v4_132a8 = load i32, i32* @global_var_1f614.784, align 4
  %v2_132ac = icmp eq i32 %v4_132a8, 0
  br i1 %v2_132ac, label %dec_label_pc_132b4, label %dec_label_pc_132f4

dec_label_pc_132b4:                               ; preds = %dec_label_pc_13260
  store i32 1, i32* @global_var_1f614.784, align 4
  br label %dec_label_pc_132bc

dec_label_pc_132bc:                               ; preds = %dec_label_pc_13304, %dec_label_pc_132b4
  %v0_132c0 = load i32, i32* @r5, align 4
  %v2_132c0 = add i32 %v0_132c0, 160
  store i32 %v2_132c0, i32* @r4, align 4
  %v2_132cc = add i32 %v0_132c0, 36
  %v3_132cc = inttoptr i32 %v2_132cc to i32*
  %v4_132cc = load i32, i32* %v3_132cc, align 4
  call void @__pseudo_branch(i32 %v4_132cc)
  %v1_132dc = call i32 @function_11d68(i32 6)
  %v0_132e8 = load i32, i32* @r5, align 4
  %v2_132e8 = add i32 %v0_132e8, 16
  %v3_132e8 = inttoptr i32 %v2_132e8 to i32*
  %v4_132e8 = load i32, i32* %v3_132e8, align 4
  store i32 78580, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_132e8)
  %v4_132f8.pre = load i32, i32* @global_var_1f614.784, align 4
  br label %dec_label_pc_132f4

dec_label_pc_132f4:                               ; preds = %dec_label_pc_13260, %dec_label_pc_132bc
  %v0_13308 = phi i32 [ %v4_132a8, %dec_label_pc_13260 ], [ %v4_132f8.pre, %dec_label_pc_132bc ]
  %v7_132fc = icmp eq i32 %v0_13308, 1
  br i1 %v7_132fc, label %dec_label_pc_13304, label %dec_label_pc_13340

dec_label_pc_13304:                               ; preds = %dec_label_pc_132f4
  %v2_13304 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_13304, i32* @r4, align 4
  store i32 2, i32* @global_var_1f614.784, align 4
  store i32 20, i32* @r2, align 4
  %v2_1331c = bitcast i32* %stack_var_-28 to i8*
  %v3_1331c = call i32 @function_119c0(i8* %v2_1331c, i32 0)
  %v3_13338 = call i32 @function_140cc(i32 6, i32 %v2_13304, i32 0)
  br label %dec_label_pc_132bc

dec_label_pc_13340:                               ; preds = %dec_label_pc_132f4
  %v7_13340 = icmp eq i32 %v0_13308, 2
  br i1 %v7_13340, label %dec_label_pc_13348, label %dec_label_pc_13354

dec_label_pc_13348:                               ; preds = %dec_label_pc_13340
  store i32 3, i32* @global_var_1f614.784, align 4
  %v0_13350 = call i32 @function_13260()
  %v4_13354.pre = load i32, i32* @global_var_1f614.784, align 4
  br label %dec_label_pc_13354

dec_label_pc_13354:                               ; preds = %dec_label_pc_13340, %dec_label_pc_13348
  %v1_1335c = phi i32 [ %v0_13308, %dec_label_pc_13340 ], [ %v4_13354.pre, %dec_label_pc_13348 ]
  %v7_13358 = icmp eq i32 %v1_1335c, 3
  br i1 %v7_13358, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_13354
  store i32 4, i32* @global_var_1f614.784, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_13354, %bb
  call void @__pseudo_cond_branch(i1 %v7_13358, i32 ptrtoint (i32* @global_var_146bc.786 to i32))
  br label %dec_label_pc_1336c

dec_label_pc_1336c:                               ; preds = %dec_label_pc_1336c, %.thread1
  %v0_1336c = call i32 @function_13260()
  br label %dec_label_pc_1336c

; uselistorder directives
  uselistorder i32 ()* @function_13260, { 2, 1, 5, 4, 6, 0, 3 }
  uselistorder i32 6, { 4, 5, 53, 6, 19, 20, 7, 18, 1, 21, 8, 22, 0, 9, 10, 11, 3, 12, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 13, 39, 40, 41, 42, 14, 43, 44, 45, 15, 46, 47, 48, 49, 50, 16, 51, 52, 54, 55, 56, 57, 58, 17, 59, 60, 2, 23 }
  uselistorder i32* @global_var_1f614.784, { 2, 0, 3, 4, 1, 5, 6 }
  uselistorder i32* inttoptr (i32 127880 to i32*), { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_13354, { 1, 0 }
  uselistorder label %dec_label_pc_132f4, { 1, 0 }
}

define i32 @function_13378(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13378:
  %v0_13378 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13378, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_13378
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_13378, %bb
  %v4_13384 = phi i32 [ %arg1, %dec_label_pc_13378 ], [ 0, %bb ]
  ret i32 %v4_13384

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_13388(i32 %arg1) local_unnamed_addr {
dec_label_pc_13388:
  %stack_var_-16 = alloca i32, align 4
  store i32 127864, i32* @r5, align 4
  %v4_13394 = load i32, i32* inttoptr (i32 127952 to i32*), align 16
  store i32 %v4_13394, i32* @r4, align 4
  %v2_1339c = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* @r6, align 4
  %v4_133b4 = load i32, i32* inttoptr (i32 127936 to i32*), align 64
  call void @__pseudo_branch(i32 %v4_133b4)
  %v0_133c8 = load i32, i32* @r5, align 4
  %v2_133c8 = add i32 %v0_133c8, 16
  %v3_133c8 = inttoptr i32 %v2_133c8 to i32*
  %v4_133c8 = load i32, i32* %v3_133c8, align 4
  call void @__pseudo_branch(i32 %v4_133c8)
  %v4_133d8 = load i32, i32* @global_var_1f618.793, align 4
  %v2_133dc = icmp eq i32 %v4_133d8, 0
  br i1 %v2_133dc, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_13388
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_13388, %bb
  %v2_133e8 = xor i1 %v2_133dc, true
  call void @__pseudo_cond_branch(i1 %v2_133e8, i32 %v4_133d8)
  store i32 %v2_1339c, i32* @r0, align 4
  %v0_133f8 = load i32, i32* @r5, align 4
  %v2_133f8 = add i32 %v0_133f8, 24
  %v3_133f8 = inttoptr i32 %v2_133f8 to i32*
  %v4_133f8 = load i32, i32* %v3_133f8, align 4
  call void @__pseudo_branch(i32 %v4_133f8)
  %v0_13404 = call i32 @function_13c54()
  %v0_1340c = load i32, i32* @r5, align 4
  %v9_1340c = icmp eq i32 %v0_1340c, 41608
  br i1 %v9_1340c, label %bb9, label %bb8

bb8:                                              ; preds = %.thread
  br label %bb9

bb9:                                              ; preds = %.thread, %bb8
  %v2_13414 = xor i1 %v9_1340c, true
  call void @__pseudo_cond_branch(i1 %v2_13414, i32 ptrtoint (i32* @global_var_150f0.796 to i32))
  %v0_13418 = load i32, i32* @r6, align 4
  %v1_1341c = call i32 @function_146bc(i32 %v0_13418)
  %v0_13420 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13420, label %bb10, label %.thread6

bb10:                                             ; preds = %bb9
  %tmp = icmp slt i32 %v1_1341c, 0
  %v3_13420 = zext i1 %tmp to i32
  %v4_13420 = mul i32 %v1_1341c, 2
  %v5_13420 = or i32 %v3_13420, %v4_13420
  %v8_13420 = and i32 %v5_13420, %v1_1341c
  store i32 %v8_13420, i32* @fp, align 4
  br label %.thread6

.thread6:                                         ; preds = %bb9, %bb10
  %v10_13438 = phi i32 [ %v1_1341c, %bb9 ], [ 0, %bb10 ]
  ret i32 %v10_13438

; uselistorder directives
  uselistorder i32 %v1_1341c, { 3, 2, 0, 1 }
  uselistorder i1 %v9_1340c, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %bb9, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_13440(i32 %arg1) local_unnamed_addr {
dec_label_pc_13440:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_13440 = load i32, i32* @r4, align 4
  %v6_13440 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @ip, align 4
  %v2_13444 = icmp eq i32 %arg1, 0
  store i32 0, i32* @r4, align 4
  br i1 %v2_13444, label %dec_label_pc_134d8, label %dec_label_pc_13454

dec_label_pc_13454:                               ; preds = %dec_label_pc_13440
  %v2_13464 = ptrtoint i32* %stack_var_-44 to i32
  store i32 ptrtoint (i32* @global_var_10000.37 to i32), i32* %stack_var_-24, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v3_13478 = call i32 @function_140cc(i32 17, i32 0, i32 %v2_13464)
  %v3_1347c = load i32, i32* %stack_var_-44, align 4
  %v7_13480 = icmp eq i32 %v3_1347c, 1
  br i1 %v7_13480, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_13454
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_13454, %bb
  call void @__pseudo_cond_branch(i1 %v7_13480, i32 ptrtoint (i32* @global_var_11510.798 to i32))
  %v2_13494 = ptrtoint i32* %stack_var_-16 to i32
  %v2_1349c = call i32 @function_14600(i32 %v2_13494, i32 %v2_13494)
  %v2_134a0 = icmp eq i32 %v2_1349c, 0
  br i1 %v2_134a0, label %bb19, label %bb18

bb18:                                             ; preds = %.thread2
  %v3_134b4 = load i32, i32* %stack_var_-16, align 4
  br label %bb19

bb19:                                             ; preds = %.thread2, %bb18
  %storemerge = phi i32 [ %v3_134b4, %bb18 ], [ 0, %.thread2 ]
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  %v3_134c4 = load i32, i32* %stack_var_-24, align 4
  %v1_134c8 = and i32 %v3_134c4, ptrtoint (i32* @global_var_10000.37 to i32)
  %v2_134c8 = icmp eq i32 %v1_134c8, 0
  br i1 %v2_134c8, label %bb20, label %.thread6

bb20:                                             ; preds = %bb19
  br label %.thread6

.thread6:                                         ; preds = %bb19, %bb20
  call void @__pseudo_cond_branch(i1 %v2_134c8, i32 ptrtoint (i32* @global_var_11510.798 to i32))
  %v0_134d8.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_134d8

dec_label_pc_134d8:                               ; preds = %dec_label_pc_13440, %.thread6
  %v0_134d8 = phi i32 [ %v0_134d8.pre, %.thread6 ], [ 0, %dec_label_pc_13440 ]
  store i32 %v3_13440, i32* @r4, align 4
  store i32 %v6_13440, i32* @lr, align 4
  ret i32 %v0_134d8

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @function_140cc, { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_10000.37 to i32), { 4, 0, 1, 2, 5, 6, 7, 3 }
  uselistorder label %dec_label_pc_134d8, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_134ec() local_unnamed_addr {
dec_label_pc_134ec:
  %stack_var_-36 = alloca i32, align 4
  store i32 127864, i32* @r4, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_16ffc.802 to i32), i32* @r0, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* %stack_var_-36, align 4
  %v2_1350c = call i32 @function_14b30(i32 ptrtoint ([11 x i8]* @global_var_16ffc.802 to i32))
  store i32 %v2_1350c, i32* @r6, align 4
  %v2_13510 = icmp eq i32 %v2_1350c, 0
  br i1 %v2_13510, label %dec_label_pc_13590, label %dec_label_pc_13518

dec_label_pc_13518:                               ; preds = %dec_label_pc_134ec
  store i32 224, i32* @sl, align 4
  store i32 ptrtoint (i32* @global_var_17008.805 to i32), i32* @r8, align 4
  %v2_13524 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_13524, i32* @r7, align 4
  br label %bb18

dec_label_pc_1352c:                               ; preds = %bb18
  %v3_1352c = load i32, i32* %stack_var_-36, align 4
  %v1_13530 = inttoptr i32 %v3_1352c to i32*
  %v2_13530 = load i32, i32* %v1_13530, align 4
  %v1_13534 = inttoptr i32 %v2_13530 to i8*
  %v2_13534 = load i8, i8* %v1_13534, align 1
  %v7_13538 = icmp eq i8 %v2_13534, 99
  br i1 %v7_13538, label %dec_label_pc_13540, label %.backedge3

dec_label_pc_13540:                               ; preds = %dec_label_pc_1352c
  %v1_13540 = add i32 %v2_13530, 1
  %v2_13540 = inttoptr i32 %v1_13540 to i8*
  %v3_13540 = load i8, i8* %v2_13540, align 1
  %v7_13544 = icmp eq i8 %v3_13540, 112
  br i1 %v7_13544, label %dec_label_pc_1354c, label %.backedge3

dec_label_pc_1354c:                               ; preds = %dec_label_pc_13540
  %v1_1354c = add i32 %v2_13530, 2
  %v2_1354c = inttoptr i32 %v1_1354c to i8*
  %v3_1354c = load i8, i8* %v2_1354c, align 1
  %v7_13550 = icmp eq i8 %v3_1354c, 117
  br i1 %v7_13550, label %dec_label_pc_13558, label %.backedge3

dec_label_pc_13558:                               ; preds = %dec_label_pc_1354c
  %v1_13558 = add i32 %v2_13530, 3
  %v2_13558 = inttoptr i32 %v1_13558 to i8*
  %v3_13558 = load i8, i8* %v2_13558, align 1
  %v4_13558 = zext i8 %v3_13558 to i32
  %v0_1355c = load i32, i32* @r4, align 4
  %v1_1355c = load i32, i32* @sl, align 4
  %v2_1355c = add i32 %v1_1355c, %v0_1355c
  %v3_1355c = inttoptr i32 %v2_1355c to i32*
  %v4_1355c = load i32, i32* %v3_1355c, align 4
  %v2_13560 = mul nuw nsw i32 %v4_13558, 2
  %v2_13564 = add i32 %v4_1355c, %v2_13560
  %v3_13564 = inttoptr i32 %v2_13564 to i16*
  %v4_13564 = load i16, i16* %v3_13564, align 2
  %v1_13568 = and i16 %v4_13564, 8
  %v2_13568 = icmp eq i16 %v1_13568, 0
  br i1 %v2_13568, label %.backedge3, label %bb

bb:                                               ; preds = %dec_label_pc_13558
  %v1_1356c = load i32, i32* @r5, align 4
  %v2_1356c = add i32 %v1_1356c, 1
  store i32 %v2_1356c, i32* @r5, align 4
  br label %.backedge3

.backedge3:                                       ; preds = %bb, %dec_label_pc_13558, %dec_label_pc_1352c, %dec_label_pc_13540, %dec_label_pc_1354c
  %v0_13570.pre = load i32, i32* @r6, align 4
  %v0_1357c.pre = load i32, i32* @r8, align 4
  br label %bb18

bb18:                                             ; preds = %.backedge3, %dec_label_pc_13518
  %v0_1357c = phi i32 [ %v0_1357c.pre, %.backedge3 ], [ ptrtoint (i32* @global_var_17008.805 to i32), %dec_label_pc_13518 ]
  %v0_13570 = phi i32 [ %v0_13570.pre, %.backedge3 ], [ %v2_1350c, %dec_label_pc_13518 ]
  %v4_13580 = inttoptr i32 %v0_13570 to i32*
  %v5_13580 = call i32 @function_147d4(i32* %v4_13580, i32 %v2_13524, i32 258, i32 %v0_1357c)
  %v2_13584 = icmp eq i32 %v5_13580, 0
  br i1 %v2_13584, label %dec_label_pc_135f4, label %dec_label_pc_1352c

dec_label_pc_13590:                               ; preds = %dec_label_pc_134ec
  store i32 ptrtoint ([14 x i8]* @global_var_1700c.808 to i32), i32* @r0, align 4
  %v2_13598 = call i32 @function_14b30(i32 ptrtoint ([14 x i8]* @global_var_1700c.808 to i32))
  store i32 %v2_13598, i32* @r6, align 4
  %v2_1359c = icmp eq i32 %v2_13598, 0
  br i1 %v2_1359c, label %bb19, label %dec_label_pc_135a8

bb19:                                             ; preds = %dec_label_pc_13590
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_135f4

dec_label_pc_135a8:                               ; preds = %dec_label_pc_13590
  store i32 ptrtoint ([10 x i8]* @global_var_1701c.810 to i32), i32* @r8, align 4
  store i32 ptrtoint (i32* @global_var_17040.812 to i32), i32* @r7, align 4
  %v2_135b8 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_135b8, i32* @r4, align 4
  br label %bb21

dec_label_pc_135c0:                               ; preds = %bb21
  %v0_135ec = load i32, i32* @r8, align 4
  %v1_135ec = inttoptr i32 %v0_135ec to i8*
  %v3_135c0 = load i32, i32* %stack_var_-36, align 4
  %v1_135c4 = inttoptr i32 %v3_135c0 to i32*
  %v2_135c4 = load i32, i32* %v1_135c4, align 4
  store i32 %v2_135c4, i32* @r1, align 4
  %v4_135c8 = call i32 @function_15de0(i8* %v1_135ec, i32 %v2_135c4)
  %v2_135cc = icmp eq i32 %v4_135c8, 0
  br i1 %v2_135cc, label %bb20, label %.backedge

bb20:                                             ; preds = %dec_label_pc_135c0
  %v1_135d0 = load i32, i32* @r5, align 4
  %v2_135d0 = add i32 %v1_135d0, 1
  store i32 %v2_135d0, i32* @r5, align 4
  br label %.backedge

.backedge:                                        ; preds = %bb20, %dec_label_pc_135c0
  %v0_135dc.pre = load i32, i32* @r7, align 4
  %v0_135e0.pre = load i32, i32* @r6, align 4
  br label %bb21

bb21:                                             ; preds = %.backedge, %dec_label_pc_135a8
  %v0_135e0 = phi i32 [ %v0_135e0.pre, %.backedge ], [ %v2_13598, %dec_label_pc_135a8 ]
  %v0_135dc = phi i32 [ %v0_135dc.pre, %.backedge ], [ ptrtoint (i32* @global_var_17040.812 to i32), %dec_label_pc_135a8 ]
  %v4_135e4 = inttoptr i32 %v0_135e0 to i32*
  %v5_135e4 = call i32 @function_147d4(i32* %v4_135e4, i32 %v2_135b8, i32 459266, i32 %v0_135dc)
  %v2_135e8 = icmp eq i32 %v5_135e4, 0
  br i1 %v2_135e8, label %dec_label_pc_135f4, label %dec_label_pc_135c0

dec_label_pc_135f4:                               ; preds = %bb18, %bb21, %bb19
  %v0_135f4 = load i32, i32* @r6, align 4
  %v1_135f8 = inttoptr i32 %v0_135f4 to i32*
  %v2_135f8 = call i32 @function_14afc(i32* %v1_135f8)
  %v0_135fc = load i32, i32* @r5, align 4
  %v2_135fc = icmp eq i32 %v0_135fc, 0
  %.v0_135fc = select i1 %v2_135fc, i32 1, i32 %v0_135fc
  ret i32 %.v0_135fc

; uselistorder directives
  uselistorder i32* %stack_var_-36, { 0, 3, 1, 4, 2 }
  uselistorder i32 (i32)* @function_14b30, { 1, 0 }
  uselistorder label %dec_label_pc_135f4, { 1, 2, 0 }
  uselistorder label %.backedge3, { 0, 1, 4, 3, 2 }
}

define i32 @function_13638(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_13638:
  %r2.global-to-local = alloca i32, align 4
  %tmp = icmp ult i32 %arg1, 241
  br i1 %tmp, label %bb, label %dec_label_pc_13a20

bb:                                               ; preds = %dec_label_pc_13638
  %v7_1364c = mul i32 %arg1, 4
  %v8_1364c = add i32 %v7_1364c, ptrtoint (i32* @global_var_13654.815 to i32)
  call void @__pseudo_branch(i32 %v8_1364c)
  br label %dec_label_pc_13a20

dec_label_pc_13a20:                               ; preds = %bb, %dec_label_pc_13638
  %v0_13a20 = call i32 @function_11970()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_13a2c = inttoptr i32 %v0_13a20 to i32*
  store i32 22, i32* %v2_13a2c, align 4
  %v0_13bdc = load i32, i32* %r2.global-to-local, align 4
  ret i32 %v0_13bdc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_13c54() local_unnamed_addr {
dec_label_pc_13c78.lr.ph:
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_13c54 = load i32, i32* @r4, align 4
  store i32 %v3_13c54, i32* %stack_var_-16, align 4
  store i32 127856, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13c78

dec_label_pc_13c78:                               ; preds = %dec_label_pc_13c78.dec_label_pc_13c78_crit_edge, %dec_label_pc_13c78.lr.ph
  %v1_13c78 = phi i32 [ %v1_13c84, %dec_label_pc_13c78.dec_label_pc_13c78_crit_edge ], [ 0, %dec_label_pc_13c78.lr.ph ]
  %v0_13c78 = phi i32 [ %v0_13c78.pre, %dec_label_pc_13c78.dec_label_pc_13c78_crit_edge ], [ 127856, %dec_label_pc_13c78.lr.ph ]
  %v4_13c78 = mul i32 %v1_13c78, 4
  %v5_13c78 = add i32 %v4_13c78, %v0_13c78
  %v6_13c78 = inttoptr i32 %v5_13c78 to i32*
  %v7_13c78 = load i32, i32* %v6_13c78, align 4
  call void @__pseudo_branch(i32 %v7_13c78)
  %v0_13c84 = load i32, i32* %r4.global-to-local, align 4
  %v1_13c84 = add i32 %v0_13c84, -1
  store i32 %v1_13c84, i32* %r4.global-to-local, align 4
  %v2_13c84 = icmp eq i32 %v0_13c84, 0
  br i1 %v2_13c84, label %dec_label_pc_13c8c, label %dec_label_pc_13c78.dec_label_pc_13c78_crit_edge

dec_label_pc_13c78.dec_label_pc_13c78_crit_edge:  ; preds = %dec_label_pc_13c78
  %v0_13c78.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13c78

dec_label_pc_13c8c:                               ; preds = %dec_label_pc_13c78
  %v4_13c90 = load i32, i32* @global_var_1f628.828, align 4
  %v2_13c94 = icmp eq i32 %v4_13c90, 0
  br i1 %v2_13c94, label %bb16, label %bb

bb:                                               ; preds = %dec_label_pc_13c8c
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_13c8c, %bb
  %v2_13c9c = xor i1 %v2_13c94, true
  call void @__pseudo_cond_branch(i1 %v2_13c9c, i32 %v4_13c90)
  %v4_13ca4 = load i32, i32* @global_var_1f62c.830, align 4
  %v2_13ca8 = icmp eq i32 %v4_13ca4, 0
  br i1 %v2_13ca8, label %bb18, label %bb17

bb17:                                             ; preds = %bb16
  br label %bb18

bb18:                                             ; preds = %bb16, %bb17
  %v2_13cb0 = xor i1 %v2_13ca8, true
  call void @__pseudo_cond_branch(i1 %v2_13cb0, i32 %v4_13ca4)
  %v2_13cb4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_13cb4, i32* %r4.global-to-local, align 4
  %v1_13cb8 = load i32, i32* @r0, align 4
  ret i32 %v1_13cb8

; uselistorder directives
  uselistorder i32 %v1_13c84, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 3, 2, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
}

define i32 @function_13cd0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13cd0:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %v2_13ce4 = call i32 @function_1137c(i32 %arg1, i32 1)
  %v3_13cec = icmp eq i32 %v2_13ce4, -1
  store i32 127864, i32* @r3, align 4
  br i1 %v3_13cec, label %dec_label_pc_13cf8, label %dec_label_pc_13d10

dec_label_pc_13cf8:                               ; preds = %dec_label_pc_13cd0
  %v0_13cfc = load i32, i32* %r5.global-to-local, align 4
  %v3_13d04 = call i32 @function_11154(i32 ptrtoint ([10 x i8]* @global_var_17044.833 to i32), i32 %v0_13cfc)
  %v1_13d08 = load i32, i32* %r4.global-to-local, align 4
  %v1_13d0c = icmp ne i32 %v3_13d04, %v1_13d08
  call void @__pseudo_cond_branch(i1 %v1_13d0c, i32 ptrtoint (i32* @global_var_13260.834 to i32))
  br label %dec_label_pc_13d10

dec_label_pc_13d10:                               ; preds = %dec_label_pc_13cd0, %dec_label_pc_13cf8
  %v1_13d18 = phi i32 [ %v2_13ce4, %dec_label_pc_13cd0 ], [ %v3_13d04, %dec_label_pc_13cf8 ]
  ret i32 %v1_13d18

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_13d10, { 1, 0 }
}

define i32 @function_13d24(i32 %arg1) local_unnamed_addr {
dec_label_pc_13d24:
  %r4.global-to-local = alloca i32, align 4
  store i32 127864, i32* %r4.global-to-local, align 4
  %v4_13d34 = load i32, i32* inttoptr (i32 127956 to i32*), align 4
  %v1_13d38 = inttoptr i32 %v4_13d34 to i32*
  %v2_13d38 = load i32, i32* %v1_13d38, align 4
  %v2_13d3c = icmp eq i32 %v2_13d38, 0
  br i1 %v2_13d3c, label %dec_label_pc_13d44, label %dec_label_pc_13d78

dec_label_pc_13d44:                               ; preds = %dec_label_pc_13d24
  %v4_13d48 = load i32, i32* inttoptr (i32 127916 to i32*), align 4
  %v2_13d50 = icmp eq i32 %v4_13d48, 0
  store i32 4096, i32* %v1_13d38, align 4
  br i1 %v2_13d50, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_13d44
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_13d44, %bb
  %v2_13d5c = xor i1 %v2_13d50, true
  call void @__pseudo_cond_branch(i1 %v2_13d5c, i32 %v4_13d48)
  %v0_13d64 = load i32, i32* %r4.global-to-local, align 4
  %v2_13d6c = icmp eq i32 %v0_13d64, 41764
  br i1 %v2_13d6c, label %bb6, label %bb5

bb5:                                              ; preds = %bb4
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  %v2_13d74 = xor i1 %v2_13d6c, true
  call void @__pseudo_cond_branch(i1 %v2_13d74, i32 ptrtoint (i32* @global_var_15054.839 to i32))
  br label %dec_label_pc_13d78

dec_label_pc_13d78:                               ; preds = %dec_label_pc_13d24, %bb6
  %v1_13d7c = load i32, i32* @r0, align 4
  ret i32 %v1_13d7c

; uselistorder directives
  uselistorder i1 %v2_13d6c, { 1, 0 }
  uselistorder label %dec_label_pc_13d78, { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @function_13d90(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_13d90:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp49 = call i32 @__decompiler_undefined_function_0()
  %tmp50 = call i32 @__decompiler_undefined_function_0()
  %tmp51 = call i32 @__decompiler_undefined_function_0()
  %tmp52 = call i32 @__decompiler_undefined_function_0()
  %tmp53 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-120 = alloca i32, align 4
  store i32 %tmp, i32* @r7, align 4
  %v1_13d98 = add i32 %tmp, 4
  store i32 %v1_13d98, i32* %ip.global-to-local, align 4
  %v2_13d9c = load i32, i32* %arg3, align 4
  store i32 20, i32* %r2.global-to-local, align 4
  store i32 127864, i32* @r6, align 4
  %v3_13da8 = mul i32 %arg2, 4
  store i32 %v3_13da8, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %sb.global-to-local, align 4
  %v4_13db0 = load i32, i32* inttoptr (i32 127884 to i32*), align 4
  store i32 28, i32* %r2.global-to-local, align 4
  %v2_13db8 = ptrtoint i32* %stack_var_-120 to i32
  %v4_13dbc = load i32, i32* inttoptr (i32 127892 to i32*), align 4
  store i32 %v4_13dbc, i32* %r4.global-to-local, align 4
  %v2_13dc4 = add i32 %v1_13d98, %v3_13da8
  store i32 %v2_13dc4, i32* %ip.global-to-local, align 4
  %v9_13dc8 = icmp eq i32 %v2_13dc4, %v2_13d9c
  store i1 %v9_13dc8, i1* %cpsr_z.global-to-local, align 1
  %v2_13dcc = inttoptr i32 %v4_13db0 to i32*
  store i32 %arg7, i32* %v2_13dcc, align 4
  store i32 692, i32* %r2.global-to-local, align 4
  %v0_13dd8 = load i32, i32* %r3.global-to-local, align 4
  br i1 %v9_13dc8, label %bb, label %.critedge

bb:                                               ; preds = %dec_label_pc_13d90
  %v1_13ddc = load i32, i32* @r7, align 4
  %v2_13ddc = load i32, i32* %r5.global-to-local, align 4
  %v3_13ddc = add i32 %v2_13ddc, %v1_13ddc
  store i32 %v3_13ddc, i32* %r3.global-to-local, align 4
  store i32 %arg6, i32* @global_var_1f62c.830, align 4
  %v0_13de4 = load i32, i32* %ip.global-to-local, align 4
  %v1_13de4 = load i32, i32* %r4.global-to-local, align 4
  %v2_13de4 = inttoptr i32 %v1_13de4 to i32*
  store i32 %v0_13de4, i32* %v2_13de4, align 4
  store i32 120, i32* @r2, align 4
  %v1_13df0 = load i32, i32* %r3.global-to-local, align 4
  %v2_13df0 = load i32, i32* %r4.global-to-local, align 4
  %v3_13df0 = inttoptr i32 %v2_13df0 to i32*
  store i32 %v1_13df0, i32* %v3_13df0, align 4
  br label %bb57

.critedge:                                        ; preds = %dec_label_pc_13d90
  store i32 %arg6, i32* @global_var_1f62c.830, align 4
  %v0_13de4.c = load i32, i32* %ip.global-to-local, align 4
  %v1_13de4.c = load i32, i32* %r4.global-to-local, align 4
  %v2_13de4.c = inttoptr i32 %v1_13de4.c to i32*
  store i32 %v0_13de4.c, i32* %v2_13de4.c, align 4
  store i32 120, i32* @r2, align 4
  br label %bb57

bb57:                                             ; preds = %.critedge, %bb
  store i32 %v2_13db8, i32* %r0.global-to-local, align 4
  %v2_13dfc = bitcast i32* %stack_var_-120 to i8*
  %v3_13dfc = call i32 @function_119c0(i8* %v2_13dfc, i32 0)
  store i32 %v3_13dfc, i32* %r0.global-to-local, align 4
  %v0_13e00 = load i32, i32* %r4.global-to-local, align 4
  %v1_13e00 = inttoptr i32 %v0_13e00 to i32*
  %storemerge.pre = load i32, i32* %v1_13e00, align 4
  br label %dec_label_pc_13e0c

dec_label_pc_13e0c:                               ; preds = %dec_label_pc_13e0c, %bb57
  %storemerge = phi i32 [ %storemerge.pre, %bb57 ], [ %v4_13e0c, %dec_label_pc_13e0c ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_13e0c = inttoptr i32 %storemerge to i32*
  %v2_13e0c = load i32, i32* %v1_13e0c, align 4
  store i32 %v2_13e0c, i32* %r3.global-to-local, align 4
  %v4_13e0c = add i32 %storemerge, 4
  store i32 %v4_13e0c, i32* %r2.global-to-local, align 4
  %v2_13e10 = icmp eq i32 %v2_13e0c, 0
  br i1 %v2_13e10, label %dec_label_pc_13e1c, label %dec_label_pc_13e0c

dec_label_pc_13e1c:                               ; preds = %dec_label_pc_13e0c
  store i32 %v4_13e0c, i32* @r4, align 4
  store i32 %v2_13db8, i32* @r5, align 4
  %v1_13e4029 = inttoptr i32 %v4_13e0c to i32*
  %v2_13e4030 = load i32, i32* %v1_13e4029, align 4
  store i32 %v2_13e4030, i32* %r3.global-to-local, align 4
  %v2_13e4432 = icmp eq i32 %v2_13e4030, 0
  store i1 %v2_13e4432, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13e4432, label %dec_label_pc_13e4c, label %dec_label_pc_13e28

dec_label_pc_13e28:                               ; preds = %dec_label_pc_13e1c, %dec_label_pc_13e40
  %v5_13e2c = phi i32 [ %v2_13e40, %dec_label_pc_13e40 ], [ %v2_13e4030, %dec_label_pc_13e1c ]
  %v2_13e28 = icmp ugt i32 %v5_13e2c, 13
  %v7_13e28 = icmp eq i32 %v5_13e2c, 14
  store i1 %v7_13e28, i1* %cpsr_z.global-to-local, align 1
  %v2_13e2c = xor i1 %v2_13e28, true
  %v3_13e2c = or i1 %v7_13e28, %v2_13e2c
  br i1 %v3_13e2c, label %bb58, label %bb59

bb58:                                             ; preds = %dec_label_pc_13e28
  %v4_13e2c = load i32, i32* @r5, align 4
  %v6_13e2c = and i32 %v5_13e2c, 536870912
  %v7_13e2c = icmp ne i32 %v6_13e2c, 0
  %v8_13e2c = mul i32 %v5_13e2c, 8
  %v9_13e2c = add i32 %v4_13e2c, %v8_13e2c
  store i32 %v9_13e2c, i32* %r0.global-to-local, align 4
  br label %bb59

bb59:                                             ; preds = %dec_label_pc_13e28, %bb58
  %v1_13e38 = phi i1 [ %v2_13e28, %dec_label_pc_13e28 ], [ %v7_13e2c, %bb58 ]
  %v2_13e30 = xor i1 %v1_13e38, true
  %v3_13e30 = or i1 %v7_13e28, %v2_13e30
  br i1 %v3_13e30, label %bb60, label %dec_label_pc_13e40

bb60:                                             ; preds = %bb59
  store i32 8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13e40

dec_label_pc_13e40:                               ; preds = %bb59, %bb60
  call void @__pseudo_cond_branch(i1 %v3_13e30, i32 ptrtoint (i32* @global_var_11a70.844 to i32))
  %v0_13e3c = load i32, i32* @r4, align 4
  %v1_13e3c = add i32 %v0_13e3c, 8
  store i32 %v1_13e3c, i32* @r4, align 4
  %v1_13e40 = inttoptr i32 %v1_13e3c to i32*
  %v2_13e40 = load i32, i32* %v1_13e40, align 4
  store i32 %v2_13e40, i32* %r3.global-to-local, align 4
  %v2_13e44 = icmp eq i32 %v2_13e40, 0
  store i1 %v2_13e44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13e44, label %dec_label_pc_13e4c, label %dec_label_pc_13e28

dec_label_pc_13e4c:                               ; preds = %dec_label_pc_13e40, %dec_label_pc_13e1c
  store i32 %v2_13db8, i32* %r0.global-to-local, align 4
  %v1_13e50 = call i32 @function_16254(i32 %v2_13db8)
  store i32 %v1_13e50, i32* @r0, align 4
  %v1_13e54 = call i32 @function_13d24(i32 %v1_13e50)
  store i32 %v1_13e54, i32* @r0, align 4
  store i32 92, i32* %r3.global-to-local, align 4
  store i32 %tmp53, i32* @r2, align 4
  %v0_13e60 = load i32, i32* @r6, align 4
  %v2_13e60 = add i32 %v0_13e60, 92
  %v3_13e60 = inttoptr i32 %v2_13e60 to i32*
  %v4_13e60 = load i32, i32* %v3_13e60, align 4
  store i32 %tmp52, i32* @r3, align 4
  %v2_13e68 = icmp eq i32 %tmp53, 0
  store i1 %v2_13e68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13e68, label %bb61, label %bb62

bb61:                                             ; preds = %dec_label_pc_13e4c
  store i32 4096, i32* @r2, align 4
  br label %bb62

bb62:                                             ; preds = %dec_label_pc_13e4c, %bb61
  %v0_13e74 = phi i32 [ %tmp53, %dec_label_pc_13e4c ], [ 4096, %bb61 ]
  %v3_13e70 = icmp eq i32 %tmp52, -1
  %v8_13e70 = icmp eq i32 %tmp52, -1
  store i1 %v8_13e70, i1* %cpsr_z.global-to-local, align 1
  %v2_13e74 = inttoptr i32 %v4_13e60 to i32*
  store i32 %v0_13e74, i32* %v2_13e74, align 4
  br i1 %v3_13e70, label %dec_label_pc_13e7c, label %dec_label_pc_13ea4

dec_label_pc_13e7c:                               ; preds = %bb62
  %v0_13e7c = call i32 @function_14194()
  store i32 %v0_13e7c, i32* @r0, align 4
  store i32 %v0_13e7c, i32* @r4, align 4
  %v0_13e84 = call i32 @function_141f0()
  store i32 %v0_13e84, i32* @r0, align 4
  %v0_13e88 = load i32, i32* @r4, align 4
  %v9_13e88 = icmp eq i32 %v0_13e88, %v0_13e84
  store i1 %v9_13e88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_13e88, label %dec_label_pc_13e90, label %dec_label_pc_13ecc

dec_label_pc_13e90:                               ; preds = %dec_label_pc_13e7c
  %v1_13e90 = call i32 @function_1435c(i32 %v0_13e84)
  store i32 %v1_13e90, i32* @r0, align 4
  store i32 %v1_13e90, i32* @r4, align 4
  %v0_13e98 = call i32 @function_141dc()
  store i32 %v0_13e98, i32* @r0, align 4
  %v0_13e9c = load i32, i32* @r4, align 4
  %v9_13e9c = icmp eq i32 %v0_13e9c, %v0_13e98
  store i1 %v9_13e9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_13e9c, label %dec_label_pc_13ea4, label %dec_label_pc_13ecc

dec_label_pc_13ea4:                               ; preds = %dec_label_pc_13e90, %bb62
  store i32 %tmp52, i32* @r2, align 4
  store i1 %v8_13e70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_13e70, label %dec_label_pc_13ef0, label %dec_label_pc_13eb0

dec_label_pc_13eb0:                               ; preds = %dec_label_pc_13ea4
  store i32 %tmp51, i32* @r3, align 4
  %v9_13eb4 = icmp eq i32 %tmp52, %tmp51
  store i1 %v9_13eb4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_13eb4, label %dec_label_pc_13ebc, label %dec_label_pc_13ecc

dec_label_pc_13ebc:                               ; preds = %dec_label_pc_13eb0
  store i32 %tmp50, i32* @r2, align 4
  store i32 %tmp49, i32* @r3, align 4
  %v9_13ec4 = icmp eq i32 %tmp50, %tmp49
  store i1 %v9_13ec4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_13ec4, label %dec_label_pc_13ef0, label %dec_label_pc_13ecc

dec_label_pc_13ecc:                               ; preds = %dec_label_pc_13eb0, %dec_label_pc_13e90, %dec_label_pc_13e7c, %dec_label_pc_13ebc
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_13ed4 = call i32 @function_13cd0(i32 0, i32 32768)
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_13ee0 = call i32 @function_13cd0(i32 1, i32 32770)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_13eec = call i32 @function_13cd0(i32 2, i32 32770)
  store i32 %v2_13eec, i32* @r0, align 4
  br label %dec_label_pc_13ef0

dec_label_pc_13ef0:                               ; preds = %dec_label_pc_13ebc, %dec_label_pc_13ea4, %dec_label_pc_13ecc
  %v0_13ef0 = load i32, i32* @r7, align 4
  %v1_13ef0 = inttoptr i32 %v0_13ef0 to i32*
  %v2_13ef0 = load i32, i32* %v1_13ef0, align 4
  store i32 %v2_13ef0, i32* %r2.global-to-local, align 4
  store i32 208, i32* %r3.global-to-local, align 4
  %v1_13ef8 = load i32, i32* @r6, align 4
  %v3_13ef8 = add i32 %v1_13ef8, 208
  %v4_13ef8 = inttoptr i32 %v3_13ef8 to i32*
  store i32 %v2_13ef0, i32* %v4_13ef8, align 4
  %v0_13efc = load i32, i32* @r7, align 4
  %v1_13efc = inttoptr i32 %v0_13efc to i32*
  %v2_13efc = load i32, i32* %v1_13efc, align 4
  store i32 %v2_13efc, i32* @r4, align 4
  %v2_13f00 = icmp eq i32 %v2_13efc, 0
  store i1 %v2_13f00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13f00, label %dec_label_pc_13fa4.lr.ph, label %dec_label_pc_13f08

dec_label_pc_13f08:                               ; preds = %dec_label_pc_13ef0
  store i32 112, i32* %r3.global-to-local, align 4
  %v0_13f0c = load i32, i32* @r6, align 4
  %v2_13f0c = add i32 %v0_13f0c, 112
  %v3_13f0c = inttoptr i32 %v2_13f0c to i32*
  %v4_13f0c = load i32, i32* %v3_13f0c, align 4
  store i32 %v4_13f0c, i32* %r3.global-to-local, align 4
  %v2_13f10 = inttoptr i32 %v4_13f0c to i32*
  store i32 %v2_13efc, i32* %v2_13f10, align 4
  %v0_13f18 = load i32, i32* @r7, align 4
  %v1_13f18 = inttoptr i32 %v0_13f18 to i32*
  %v2_13f18 = load i32, i32* %v1_13f18, align 4
  store i32 %v2_13f18, i32* %r0.global-to-local, align 4
  %v4_13f1c = call i32 @function_15e90(i32 %v2_13f18, i32 47, i32 %v2_13ef0, i32 %v4_13f0c)
  store i32 %v4_13f1c, i32* @r0, align 4
  store i32 60, i32* %r3.global-to-local, align 4
  %v2_13f24 = icmp eq i32 %v4_13f1c, 0
  store i1 %v2_13f24, i1* %cpsr_z.global-to-local, align 1
  %v0_13f28 = load i32, i32* @r6, align 4
  %v2_13f28 = add i32 %v0_13f28, 60
  %v3_13f28 = inttoptr i32 %v2_13f28 to i32*
  %v4_13f28 = load i32, i32* %v3_13f28, align 4
  store i32 %v4_13f28, i32* %r2.global-to-local, align 4
  br i1 %v2_13f24, label %.thread46, label %bb63

.thread46:                                        ; preds = %dec_label_pc_13f08
  %v2_13f3047 = inttoptr i32 %v4_13f28 to i32*
  store i32 0, i32* %v2_13f3047, align 4
  br label %dec_label_pc_13fa4.lr.ph

bb63:                                             ; preds = %dec_label_pc_13f08
  %v2_13f2c = add i32 %v4_13f1c, 1
  store i32 %v2_13f2c, i32* %r3.global-to-local, align 4
  %v2_13f30 = inttoptr i32 %v4_13f28 to i32*
  store i32 %v4_13f1c, i32* %v2_13f30, align 4
  %v1_13f34 = load i32, i32* %r3.global-to-local, align 4
  %v2_13f34 = load i32, i32* %r2.global-to-local, align 4
  %v3_13f34 = inttoptr i32 %v2_13f34 to i32*
  store i32 %v1_13f34, i32* %v3_13f34, align 4
  br label %dec_label_pc_13fa4.lr.ph

dec_label_pc_13fa4.lr.ph:                         ; preds = %.thread46, %bb63, %dec_label_pc_13ef0
  store i32 0, i32* %r5.global-to-local, align 4
  %v0_13f4c = load i32, i32* @r6, align 4
  %v2_13f4c = add i32 %v0_13f4c, -12
  store i32 %v2_13f4c, i32* %r8.global-to-local, align 4
  store i32 688, i32* %r3.global-to-local, align 4
  store i32 %arg5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %arg5, i32* @global_var_1f628.828, align 4
  %v2_13f7c = icmp eq i32 %v0_13dd8, 0
  store i1 %v2_13f7c, i1* %cpsr_z.global-to-local, align 1
  %v2_13f84 = xor i1 %v2_13f7c, true
  call void @__pseudo_cond_branch(i1 %v2_13f84, i32 %v0_13dd8)
  store i32 -12, i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r5.global-to-local, align 4
  %v0_13f98 = load i32, i32* @r6, align 4
  %v2_13f98 = add i32 %v0_13f98, -12
  store i32 %v2_13f98, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13fa4

dec_label_pc_13fa4:                               ; preds = %dec_label_pc_13fa4.dec_label_pc_13fa4_crit_edge, %dec_label_pc_13fa4.lr.ph
  %v1_13fa4 = phi i32 [ %v1_13fb0, %dec_label_pc_13fa4.dec_label_pc_13fa4_crit_edge ], [ 0, %dec_label_pc_13fa4.lr.ph ]
  %v0_13fa4 = phi i32 [ %v0_13fa4.pre, %dec_label_pc_13fa4.dec_label_pc_13fa4_crit_edge ], [ %v2_13f98, %dec_label_pc_13fa4.lr.ph ]
  %v4_13fa4 = mul i32 %v1_13fa4, 4
  %v5_13fa4 = add i32 %v4_13fa4, %v0_13fa4
  %v6_13fa4 = inttoptr i32 %v5_13fa4 to i32*
  %v7_13fa4 = load i32, i32* %v6_13fa4, align 4
  store i32 %v7_13fa4, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v7_13fa4)
  %v0_13fb0 = load i32, i32* %r4.global-to-local, align 4
  %v1_13fb0 = add i32 %v0_13fb0, 1
  store i32 %v1_13fb0, i32* %r4.global-to-local, align 4
  %v1_13fb4 = load i32, i32* %r5.global-to-local, align 4
  %v3_13fb4 = icmp ult i32 %v1_13fb0, %v1_13fb4
  %v9_13fb4 = icmp eq i32 %v1_13fb0, %v1_13fb4
  store i1 %v9_13fb4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_13fb4, label %dec_label_pc_13fa4.dec_label_pc_13fa4_crit_edge, label %dec_label_pc_13fbc

dec_label_pc_13fa4.dec_label_pc_13fa4_crit_edge:  ; preds = %dec_label_pc_13fa4
  %v0_13fa4.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_13fa4

dec_label_pc_13fbc:                               ; preds = %dec_label_pc_13fa4
  %v0_13fc0.pre = load i32, i32* @r6, align 4
  store i32 104, i32* %r3.global-to-local, align 4
  %v2_13fc0 = add i32 %v0_13fc0.pre, 104
  %v3_13fc0 = inttoptr i32 %v2_13fc0 to i32*
  %v4_13fc0 = load i32, i32* %v3_13fc0, align 4
  store i32 %v4_13fc0, i32* %r2.global-to-local, align 4
  store i32 %v4_13fc0, i32* %r3.global-to-local, align 4
  %v2_13fc8 = icmp eq i32 %v4_13fc0, 0
  store i1 %v2_13fc8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13fc8, label %dec_label_pc_13fe0, label %dec_label_pc_13fd0

dec_label_pc_13fd0:                               ; preds = %dec_label_pc_13fbc
  call void @__pseudo_branch(i32 %v4_13fc0)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_13fdc = load i32, i32* @r0, align 4
  %v2_13fdc = inttoptr i32 %v1_13fdc to i32*
  store i32 0, i32* %v2_13fdc, align 4
  %v0_13fe4.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_13fe0

dec_label_pc_13fe0:                               ; preds = %dec_label_pc_13fbc, %dec_label_pc_13fd0
  %v0_13fe4 = phi i32 [ %v0_13fc0.pre, %dec_label_pc_13fbc ], [ %v0_13fe4.pre, %dec_label_pc_13fd0 ]
  store i32 80, i32* %r3.global-to-local, align 4
  %v2_13fe4 = add i32 %v0_13fe4, 80
  %v3_13fe4 = inttoptr i32 %v2_13fe4 to i32*
  %v4_13fe4 = load i32, i32* %v3_13fe4, align 4
  store i32 %v4_13fe4, i32* %r2.global-to-local, align 4
  store i32 %v4_13fe4, i32* %r3.global-to-local, align 4
  %v2_13fec = icmp eq i32 %v4_13fe4, 0
  store i1 %v2_13fec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13fec, label %dec_label_pc_14004, label %dec_label_pc_13ff4

dec_label_pc_13ff4:                               ; preds = %dec_label_pc_13fe0
  call void @__pseudo_branch(i32 %v4_13fe4)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_14000 = load i32, i32* @r0, align 4
  %v2_14000 = inttoptr i32 %v1_14000 to i32*
  store i32 0, i32* %v2_14000, align 4
  %v0_14008.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_14004

dec_label_pc_14004:                               ; preds = %dec_label_pc_13fe0, %dec_label_pc_13ff4
  %v0_14008 = phi i32 [ %v0_13fe4, %dec_label_pc_13fe0 ], [ %v0_14008.pre, %dec_label_pc_13ff4 ]
  store i32 28, i32* %r3.global-to-local, align 4
  %v2_14008 = add i32 %v0_14008, 28
  %v3_14008 = inttoptr i32 %v2_14008 to i32*
  %v4_14008 = load i32, i32* %v3_14008, align 4
  store i32 %v4_14008, i32* %r3.global-to-local, align 4
  %v1_14010 = inttoptr i32 %v4_14008 to i32*
  %v2_14010 = load i32, i32* %v1_14010, align 4
  store i32 %v2_14010, i32* %r2.global-to-local, align 4
  %v0_14014 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_14014, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v1_14020 = call i32 @function_13388(i32 %v0_14014)
  store i32 %v1_14020, i32* %r0.global-to-local, align 4
  %v0_14024 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14024, label %bb64, label %.thread8

bb64:                                             ; preds = %dec_label_pc_14004
  %v2_14024 = load i32, i32* %ip.global-to-local, align 4
  %v2_14028 = load i32, i32* %r4.global-to-local, align 4
  %v8_14028 = shl i32 %v2_14028, %v1_14020
  %v9_14028 = and i32 %v8_14028, %v1_14020
  %v8_1402c = shl i32 %v2_14024, %v9_14028
  %v9_1402c = and i32 %v8_1402c, %v9_14028
  store i32 %v9_1402c, i32* %r0.global-to-local, align 4
  %v2_14030 = trunc i32 %v9_1402c to i16
  %v4_14030 = inttoptr i32 %v9_1402c to i16*
  store i16 %v2_14030, i16* %v4_14030, align 2
  %v5_14030 = load i32, i32* %r4.global-to-local, align 4
  %v6_14030 = load i32, i32* %r0.global-to-local, align 4
  %v7_14030 = sub i32 %v6_14030, %v5_14030
  %v2_14034 = load i32, i32* %ip.global-to-local, align 4
  %v8_14034 = ashr i32 %v2_14034, %v7_14030
  %v9_14034 = and i32 %v8_14034, %v7_14030
  %v2_14038 = load i32, i32* %r2.global-to-local, align 4
  %v3_14038 = and i32 %v9_14034, %v2_14038
  store i32 %v3_14038, i32* %r8.global-to-local, align 4
  %v2_1403c = inttoptr i32 %v9_14034 to i64*
  %v3_1403c = load i64, i64* %v2_1403c, align 4
  %v6_1403c = udiv i64 %v3_1403c, 4294967296
  %v7_1403c = trunc i64 %v6_1403c to i32
  %v9_1403c = sub i32 %v7_1403c, %v9_14034
  %v5_14040 = sub i32 32, %v9_1403c
  %v6_14040 = shl i32 %v9_1403c, %v5_14040
  %v9_14040 = and i32 %v6_14040, %v9_1403c
  %v8_14044 = lshr i32 %v2_14034, %v9_14040
  %v9_14044 = and i32 %v8_14044, %v9_14040
  store i32 %v9_14044, i32* %r0.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_14004, %bb64
  %v10_14044 = phi i32 [ %v1_14020, %dec_label_pc_14004 ], [ %v9_14044, %bb64 ]
  ret i32 %v10_14044

; uselistorder directives
  uselistorder i32 %v9_14034, { 2, 1, 0 }
  uselistorder i32 %v9_1402c, { 1, 0, 2 }
  uselistorder i32 %v1_14020, { 1, 0, 2, 3 }
  uselistorder i32 %v0_13fc0.pre, { 1, 0 }
  uselistorder i32 %v1_13fb4, { 1, 0 }
  uselistorder i32 %v1_13fb0, { 3, 2, 1, 0 }
  uselistorder i32 %v4_13f28, { 1, 0, 2 }
  uselistorder i1 %v8_13e70, { 1, 2, 0 }
  uselistorder i32 %v2_13e40, { 1, 2, 0 }
  uselistorder i1 %v2_13e28, { 1, 0 }
  uselistorder i32 %v5_13e2c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_13e0c, { 1, 0, 3, 2 }
  uselistorder i32 %storemerge, { 2, 1, 0 }
  uselistorder i32 %v0_13dd8, { 1, 0 }
  uselistorder i32 %v2_13db8, { 1, 0, 2, 3 }
  uselistorder i32 %v3_13da8, { 1, 0 }
  uselistorder i32 %tmp52, { 1, 4, 0, 2, 3 }
  uselistorder i32 %tmp51, { 1, 0 }
  uselistorder i32 %tmp50, { 1, 0 }
  uselistorder i32 %tmp49, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 4, 3, 0, 5, 7, 6, 8, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 15, 16, 17, 18, 7, 8, 9, 10, 11, 12, 13, 14, 19, 20, 2, 21, 22, 23, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 10, 5, 6, 7, 8, 9, 11, 12, 0, 13, 14, 15, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 5, 2, 6, 7, 8, 9, 10, 11, 12, 1, 13, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 2, 3, 8, 4, 0, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 16, 1, 18 }
  uselistorder i32 (i32)* @function_13388, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 47, { 0, 2, 3, 4, 1 }
  uselistorder i32 (i32, i32)* @function_13cd0, { 2, 1, 0 }
  uselistorder i32 536870912, { 1, 0 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_14004, { 1, 0 }
  uselistorder label %dec_label_pc_13fe0, { 1, 0 }
  uselistorder label %dec_label_pc_13fa4.lr.ph, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13ef0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13ecc, { 3, 0, 1, 2 }
  uselistorder label %bb62, { 1, 0 }
  uselistorder label %dec_label_pc_13e40, { 1, 0 }
  uselistorder label %bb59, { 1, 0 }
  uselistorder label %dec_label_pc_13e28, { 1, 0 }
}

define i32 @function_14064(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_14064:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_14064 = load i32, i32* @r4, align 4
  store i32 %v3_14064, i32* %stack_var_-16, align 4
  %v3_14070 = urem i32 %arg3, 4096
  %v2_14074 = icmp eq i32 %v3_14070, 0
  br i1 %v2_14074, label %dec_label_pc_14090, label %dec_label_pc_1407c

dec_label_pc_1407c:                               ; preds = %dec_label_pc_14064
  %v0_1407c = call i32 @function_11970()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_14088 = inttoptr i32 %v0_1407c to i32*
  store i32 22, i32* %v2_14088, align 4
  %v0_140c0.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_140c0

dec_label_pc_14090:                               ; preds = %dec_label_pc_14064
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_140bc, label %dec_label_pc_140ac

dec_label_pc_140ac:                               ; preds = %dec_label_pc_14090
  %v0_140ac = call i32 @function_11970()
  %v0_140b0 = load i32, i32* %r4.global-to-local, align 4
  %v1_140b0 = sub i32 0, %v0_140b0
  %v2_140b4 = inttoptr i32 %v0_140ac to i32*
  store i32 %v1_140b0, i32* %v2_140b4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_140bc

dec_label_pc_140bc:                               ; preds = %dec_label_pc_14090, %dec_label_pc_140ac
  %v0_140bc = phi i32 [ %arg1, %dec_label_pc_14090 ], [ -1, %dec_label_pc_140ac ]
  store i32 %v0_140bc, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_140c0

dec_label_pc_140c0:                               ; preds = %dec_label_pc_1407c, %dec_label_pc_140bc
  %v0_140c0 = phi i32 [ %v0_140c0.pre, %dec_label_pc_1407c ], [ %v0_140bc, %dec_label_pc_140bc ]
  %v2_140c4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_140c4, i32* @r4, align 4
  ret i32 %v0_140c0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_140c0, { 1, 0 }
  uselistorder label %dec_label_pc_140bc, { 1, 0 }
}

define i32 @function_140cc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_140cc:
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_140cc = load i32, i32* @r4, align 4
  %v6_140cc = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @ip, align 4
  %v2_140d4 = icmp eq i32 %arg2, 0
  store i32 127864, i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  br i1 %v2_140d4, label %dec_label_pc_14128, label %dec_label_pc_140ec

dec_label_pc_140ec:                               ; preds = %dec_label_pc_140cc
  %v1_140ec = add i32 %arg2, 4
  %v2_140ec = inttoptr i32 %v1_140ec to i32*
  %v3_140ec = load i32, i32* %v2_140ec, align 4
  store i32 %v3_140ec, i32* @r3, align 4
  %v1_140f0 = and i32 %v3_140ec, 67108864
  %v2_140f0 = icmp eq i32 %v1_140f0, 0
  br i1 %v2_140f0, label %dec_label_pc_140f8, label %dec_label_pc_14128

dec_label_pc_140f8:                               ; preds = %dec_label_pc_140ec
  store i32 20, i32* @r2, align 4
  %v2_140fc = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_140fc, i32* @r0, align 4
  %v0_14100 = call i32 @function_11a70()
  store i32 %v2_140fc, i32* @ip, align 4
  %v0_14128.pre = load i32, i32* @r5, align 4
  %v0_14130.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14128

dec_label_pc_14128:                               ; preds = %dec_label_pc_140ec, %dec_label_pc_140cc, %dec_label_pc_140f8
  %v0_14130 = phi i32 [ %arg3, %dec_label_pc_140ec ], [ %arg3, %dec_label_pc_140cc ], [ %v0_14130.pre, %dec_label_pc_140f8 ]
  %v0_1412c = phi i32 [ %arg2, %dec_label_pc_140ec ], [ 0, %dec_label_pc_140cc ], [ %v2_140fc, %dec_label_pc_140f8 ]
  %v0_14128 = phi i32 [ %arg1, %dec_label_pc_140ec ], [ %arg1, %dec_label_pc_140cc ], [ %v0_14128.pre, %dec_label_pc_140f8 ]
  %v4_14138 = call i32 @function_14688(i32 %v0_14128, i32 %v0_1412c, i32 %v0_14130, i32 8)
  store i32 %v3_140cc, i32* @r4, align 4
  store i32 %v6_140cc, i32* @r5, align 4
  ret i32 %v4_14138

; uselistorder directives
  uselistorder i32 67108864, { 1, 0 }
  uselistorder label %dec_label_pc_14128, { 2, 0, 1 }
}

define i32 @function_1414c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1414c:
  %v0_1414c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1414c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1414c
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1414c, %bb
  %v0_14160 = phi i32 [ %arg1, %dec_label_pc_1414c ], [ 0, %bb ]
  ret i32 %v0_14160

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_1416c() local_unnamed_addr {
dec_label_pc_1416c:
  %v4_14178 = load i32, i32* inttoptr (i32 127956 to i32*), align 4
  %v1_1417c = inttoptr i32 %v4_14178 to i32*
  %v2_1417c = load i32, i32* %v1_1417c, align 4
  %v2_14180 = icmp eq i32 %v2_1417c, 0
  br i1 %v2_14180, label %bb, label %bb2

bb:                                               ; preds = %dec_label_pc_1416c
  br label %bb2

bb2:                                              ; preds = %dec_label_pc_1416c, %bb
  %v1_14188 = phi i32 [ %v2_1417c, %dec_label_pc_1416c ], [ 4096, %bb ]
  ret i32 %v1_14188

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @function_14194() local_unnamed_addr {
dec_label_pc_14194:
  %v1_141a4 = load i32, i32* @r0, align 4
  ret i32 %v1_141a4
}

define i32 @function_141a8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_141a8:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_141a8 = load i32, i32* @r7, align 4
  store i32 %v3_141a8, i32* %stack_var_-8, align 4
  %v0_141b4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_141b4, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_141b4, -4095
  br i1 %tmp, label %dec_label_pc_141d4, label %dec_label_pc_141c4

dec_label_pc_141c4:                               ; preds = %dec_label_pc_141a8
  %v0_141c4 = call i32 @function_11970()
  %v0_141c8 = load i32, i32* %r7.global-to-local, align 4
  %v1_141c8 = sub i32 0, %v0_141c8
  %v2_141cc = inttoptr i32 %v0_141c4 to i32*
  store i32 %v1_141c8, i32* %v2_141cc, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_141d4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_141d4

dec_label_pc_141d4:                               ; preds = %dec_label_pc_141a8, %dec_label_pc_141c4
  %v1_141d8 = phi i32 [ %v0_141b4, %dec_label_pc_141a8 ], [ -1, %dec_label_pc_141c4 ]
  %v2_141d4 = phi i32 [ %v3_141a8, %dec_label_pc_141a8 ], [ %v2_141d4.pre, %dec_label_pc_141c4 ]
  store i32 %v2_141d4, i32* %r7.global-to-local, align 4
  ret i32 %v1_141d8

; uselistorder directives
  uselistorder i32 %v0_141b4, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_141d4, { 1, 0 }
}

define i32 @function_141dc() local_unnamed_addr {
dec_label_pc_141dc:
  %v1_141ec = load i32, i32* @r0, align 4
  ret i32 %v1_141ec
}

define i32 @function_141f0() local_unnamed_addr {
dec_label_pc_141f0:
  %v1_14200 = load i32, i32* @r0, align 4
  ret i32 %v1_14200
}

define i32 @function_14204(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_14204:
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %v6_14204 = load i32, i32* @r5, align 4
  %v18_14204 = load i32, i32* @sl, align 4
  store i32 141, i32* %r7.global-to-local, align 4
  store i32 %arg1, i32* @r5, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_14234, label %dec_label_pc_14220

dec_label_pc_14220:                               ; preds = %dec_label_pc_14204
  %v0_14220 = call i32 @function_11970()
  %v0_14224 = load i32, i32* @r5, align 4
  %v1_14224 = sub i32 0, %v0_14224
  store i32 %v1_14224, i32* %r3.global-to-local, align 4
  store i32 -1, i32* @r5, align 4
  %v2_1422c = inttoptr i32 %v0_14220 to i32*
  store i32 %v1_14224, i32* %v2_1422c, align 4
  br label %dec_label_pc_14288

dec_label_pc_14234:                               ; preds = %dec_label_pc_14204
  br i1 false, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_14234
  store i32 %arg2, i32* %r7.global-to-local, align 4
  %v3_1423c = add i32 %arg2, %arg1
  store i32 %v3_1423c, i32* @sl, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_14234, %bb
  %v1_142784 = phi i32 [ %v18_14204, %dec_label_pc_14234 ], [ %v3_1423c, %bb ]
  %v0_142742 = phi i32 [ 141, %dec_label_pc_14234 ], [ %arg2, %bb ]
  br i1 false, label %dec_label_pc_14288, label %dec_label_pc_14274

dec_label_pc_14248:                               ; preds = %dec_label_pc_14274
  %v1_14248 = add i32 %v0_14248, 8
  %v2_14248 = inttoptr i32 %v1_14248 to i16*
  %v3_14248 = load i16, i16* %v2_14248, align 2
  %v4_14248 = zext i16 %v3_14248 to i32
  %v2_1424c = add i32 %v4_14248, %v0_14248
  store i32 %v2_1424c, i32* %r3.global-to-local, align 4
  %v1_14250 = add i32 %v2_1424c, -1
  %v2_14250 = inttoptr i32 %v1_14250 to i8*
  %v3_14250 = load i8, i8* %v2_14250, align 1
  %v4_14250 = zext i8 %v3_14250 to i32
  store i32 %v4_14250, i32* @r4, align 4
  %v1_14254 = call i32 @function_15d80(i32 %v1_14274)
  %v0_14258 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_14258, i32* @r1, align 4
  %v1_1425c = add i32 %v1_14254, 1
  store i32 %v1_1425c, i32* @r2, align 4
  %v0_14260 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_14260, i32* @r0, align 4
  %v3_14264 = call i32 @function_11a60(i32 %v0_14260, i32 %v0_14258, i32 %v1_1425c)
  %v0_14268 = load i32, i32* %r7.global-to-local, align 4
  %v1_14268 = add i32 %v0_14268, 8
  %v2_14268 = inttoptr i32 %v1_14268 to i16*
  %v3_14268 = load i16, i16* %v2_14268, align 2
  %v4_14268 = zext i16 %v3_14268 to i32
  store i32 %v4_14268, i32* %r3.global-to-local, align 4
  %v0_1426c = load i32, i32* @r4, align 4
  %v1_1426c = trunc i32 %v0_1426c to i8
  %v3_1426c = add i32 %v0_14268, 10
  %v4_1426c = inttoptr i32 %v3_1426c to i8*
  store i8 %v1_1426c, i8* %v4_1426c, align 1
  %v0_14270 = load i32, i32* %r7.global-to-local, align 4
  %v1_14270 = load i32, i32* %r3.global-to-local, align 4
  %v2_14270 = add i32 %v1_14270, %v0_14270
  store i32 %v2_14270, i32* %r7.global-to-local, align 4
  %v1_14278.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_14274

dec_label_pc_14274:                               ; preds = %.thread, %dec_label_pc_14248
  %v1_14278 = phi i32 [ %v1_14278.pre, %dec_label_pc_14248 ], [ %v1_142784, %.thread ]
  %v0_14248 = phi i32 [ %v2_14270, %dec_label_pc_14248 ], [ %v0_142742, %.thread ]
  %v1_14274 = add i32 %v0_14248, 10
  store i32 %v1_14274, i32* %r6.global-to-local, align 4
  %v3_14278 = icmp ult i32 %v0_14248, %v1_14278
  %v1_14280 = add i32 %v0_14248, 11
  store i32 %v1_14280, i32* %r8.global-to-local, align 4
  br i1 %v3_14278, label %dec_label_pc_14248, label %dec_label_pc_14288

dec_label_pc_14288:                               ; preds = %dec_label_pc_14274, %.thread, %dec_label_pc_14220
  %v0_14288 = load i32, i32* @r5, align 4
  store i32 %v6_14204, i32* @r5, align 4
  store i32 %v18_14204, i32* @sl, align 4
  ret i32 %v0_14288

; uselistorder directives
  uselistorder i32 %v1_14274, { 1, 0 }
  uselistorder i32 %v0_14248, { 2, 4, 3, 1, 0 }
  uselistorder i32 %v18_14204, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 3, 1, 4 }
  uselistorder i32* %r6.global-to-local, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14274, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_14298() local_unnamed_addr {
dec_label_pc_14298:
  %r7.global-to-local = alloca i32, align 4
  %v0_142a0 = load i32, i32* @r1, align 4
  store i32 %v0_142a0, i32* @r3, align 4
  %v0_142b0 = load i32, i32* @r0, align 4
  store i32 %v0_142b0, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_142b0, -4095
  br i1 %tmp, label %dec_label_pc_142d0, label %dec_label_pc_142bc

dec_label_pc_142bc:                               ; preds = %dec_label_pc_14298
  %v0_142bc = call i32 @function_11970()
  %v0_142c0 = load i32, i32* %r7.global-to-local, align 4
  %v1_142c0 = sub i32 0, %v0_142c0
  store i32 %v1_142c0, i32* @r3, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_142c8 = inttoptr i32 %v0_142bc to i32*
  store i32 %v1_142c0, i32* %v2_142c8, align 4
  br label %dec_label_pc_142e0

dec_label_pc_142d0:                               ; preds = %dec_label_pc_14298
  %v2_142d0 = icmp eq i32 %v0_142b0, 0
  br i1 %v2_142d0, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_142d0
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_142d0, %bb
  call void @__pseudo_cond_branch(i1 %v2_142d0, i32 ptrtoint (i32* @global_var_144e8.863 to i32))
  br label %dec_label_pc_142e0

dec_label_pc_142e0:                               ; preds = %dec_label_pc_142bc, %.thread
  %v0_142e0 = load i32, i32* %r7.global-to-local, align 4
  ret i32 %v0_142e0

; uselistorder directives
  uselistorder i32 %v0_142b0, { 1, 0, 2 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_142e0, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_142f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_142f0:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_142f0 = load i32, i32* @r4, align 4
  store i32 %v3_142f0, i32* %stack_var_-16, align 4
  store i32 127864, i32* %r4.global-to-local, align 4
  %v4_14300 = load i32, i32* @global_var_21640.866, align 4
  %v2_14304 = icmp eq i32 %v4_14300, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v2_14304, label %dec_label_pc_14310, label %dec_label_pc_14320

dec_label_pc_14310:                               ; preds = %dec_label_pc_142f0
  %v1_14314 = call i32 @function_1628c(i32 0)
  %v1_14318 = icmp slt i32 %v1_14314, 0
  br i1 %v1_14318, label %dec_label_pc_14344, label %dec_label_pc_14320thread-pre-split

dec_label_pc_14320thread-pre-split:               ; preds = %dec_label_pc_14310
  %v0_14324.pr = load i32, i32* %r5.global-to-local, align 4
  %v4_14320.pre = load i32, i32* @global_var_21640.866, align 4
  br label %dec_label_pc_14320

dec_label_pc_14320:                               ; preds = %dec_label_pc_14320thread-pre-split, %dec_label_pc_142f0
  %v0_14330 = phi i32 [ %v4_14320.pre, %dec_label_pc_14320thread-pre-split ], [ %v4_14300, %dec_label_pc_142f0 ]
  %v1_14334 = phi i32 [ %v0_14324.pr, %dec_label_pc_14320thread-pre-split ], [ %arg1, %dec_label_pc_142f0 ]
  %v2_14324 = icmp eq i32 %v1_14334, 0
  store i32 %v0_14330, i32* %r4.global-to-local, align 4
  br i1 %v2_14324, label %dec_label_pc_14348, label %dec_label_pc_14330

dec_label_pc_14330:                               ; preds = %dec_label_pc_14320
  %v2_14334 = add i32 %v1_14334, %v0_14330
  %v1_14338 = call i32 @function_1628c(i32 %v2_14334)
  %v1_1433c = icmp slt i32 %v1_14338, 0
  br i1 %v1_1433c, label %dec_label_pc_14344, label %dec_label_pc_14330.dec_label_pc_14348_crit_edge

dec_label_pc_14330.dec_label_pc_14348_crit_edge:  ; preds = %dec_label_pc_14330
  %v0_14348.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14348

dec_label_pc_14344:                               ; preds = %dec_label_pc_14330, %dec_label_pc_14310
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14348

dec_label_pc_14348:                               ; preds = %dec_label_pc_14320, %dec_label_pc_14330.dec_label_pc_14348_crit_edge, %dec_label_pc_14344
  %v0_14348 = phi i32 [ %v0_14348.pre, %dec_label_pc_14330.dec_label_pc_14348_crit_edge ], [ -1, %dec_label_pc_14344 ], [ %v0_14330, %dec_label_pc_14320 ]
  %v2_1434c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1434c, i32* @r4, align 4
  ret i32 %v0_14348

; uselistorder directives
  uselistorder i32 %v0_14330, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_1628c, { 1, 0 }
  uselistorder label %dec_label_pc_14348, { 2, 1, 0 }
}

define i32 @function_1435c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1435c:
  %v1_1436c = load i32, i32* @r0, align 4
  ret i32 %v1_1436c
}

define i32 @function_14370(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14370:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_14370 = load i32, i32* @r4, align 4
  store i32 %v3_14370, i32* %stack_var_-24, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 104, i32* @r2, align 4
  %v2_14388 = inttoptr i32 %arg2 to i8*
  %v3_14388 = call i32 @function_119c0(i8* %v2_14388, i32 0)
  %v2_1438c = load i32, i32* %arg1, align 4
  store i32 %v2_1438c, i32* %r3.global-to-local, align 4
  %v3_1438c = add i32 %tmp, 4
  %v4_1438c = inttoptr i32 %v3_1438c to i32*
  %v5_1438c = load i32, i32* %v4_1438c, align 4
  store i32 %v5_1438c, i32* %r4.global-to-local, align 4
  %v0_14390 = load i32, i32* %r5.global-to-local, align 4
  %v1_14390 = inttoptr i32 %v0_14390 to i32*
  store i32 %v2_1438c, i32* %v1_14390, align 4
  %v3_14390 = add i32 %v0_14390, 4
  %v4_14390 = inttoptr i32 %v3_14390 to i32*
  %v5_14390 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_14390, i32* %v4_14390, align 4
  %v0_14394 = load i32, i32* %r6.global-to-local, align 4
  %v1_14394 = add i32 %v0_14394, 12
  %v2_14394 = inttoptr i32 %v1_14394 to i32*
  %v3_14394 = load i32, i32* %v2_14394, align 4
  %v1_14398 = load i32, i32* %r5.global-to-local, align 4
  %v2_14398 = add i32 %v1_14398, 12
  %v3_14398 = inttoptr i32 %v2_14398 to i32*
  store i32 %v3_14394, i32* %v3_14398, align 4
  %v0_1439c = load i32, i32* %r6.global-to-local, align 4
  %v1_1439c = add i32 %v0_1439c, 96
  store i32 %v1_1439c, i32* %r3.global-to-local, align 4
  %v1_143a0 = inttoptr i32 %v1_1439c to i32*
  %v2_143a0 = load i32, i32* %v1_143a0, align 4
  store i32 %v2_143a0, i32* %r3.global-to-local, align 4
  %v3_143a0 = add i32 %v0_1439c, 100
  %v4_143a0 = inttoptr i32 %v3_143a0 to i32*
  %v5_143a0 = load i32, i32* %v4_143a0, align 4
  store i32 %v5_143a0, i32* %r4.global-to-local, align 4
  %v1_143a4 = add i32 %v0_1439c, 56
  %v2_143a4 = inttoptr i32 %v1_143a4 to i32*
  %v3_143a4 = load i32, i32* %v2_143a4, align 4
  store i32 %v3_143a4, i32* %r2.global-to-local, align 4
  %v1_143a8 = load i32, i32* %r5.global-to-local, align 4
  %v2_143a8 = add i32 %v1_143a8, 96
  %v3_143a8 = inttoptr i32 %v2_143a8 to i32*
  store i32 %v2_143a0, i32* %v3_143a8, align 4
  %v0_143ac = load i32, i32* %r4.global-to-local, align 4
  %v1_143ac = load i32, i32* %r5.global-to-local, align 4
  %v2_143ac = add i32 %v1_143ac, 100
  %v3_143ac = inttoptr i32 %v2_143ac to i32*
  store i32 %v0_143ac, i32* %v3_143ac, align 4
  %v0_143b0 = load i32, i32* %r6.global-to-local, align 4
  %v1_143b0 = add i32 %v0_143b0, 24
  store i32 %v1_143b0, i32* %ip.global-to-local, align 4
  %v1_143b4 = inttoptr i32 %v1_143b0 to i32*
  %v2_143b4 = load i32, i32* %v1_143b4, align 4
  store i32 %v2_143b4, i32* %ip.global-to-local, align 4
  %v3_143b4 = add i32 %v0_143b0, 28
  %v4_143b4 = inttoptr i32 %v3_143b4 to i32*
  %v5_143b4 = load i32, i32* %v4_143b4, align 4
  store i32 %v5_143b4, i32* %lr.global-to-local, align 4
  %v0_143b8 = load i32, i32* %r2.global-to-local, align 4
  %v1_143b8 = load i32, i32* %r5.global-to-local, align 4
  %v2_143b8 = add i32 %v1_143b8, 56
  %v3_143b8 = inttoptr i32 %v2_143b8 to i32*
  store i32 %v0_143b8, i32* %v3_143b8, align 4
  %v0_143bc = load i32, i32* %r6.global-to-local, align 4
  %v1_143bc = add i32 %v0_143bc, 72
  store i32 %v1_143bc, i32* %r3.global-to-local, align 4
  %v1_143c0 = add i32 %v0_143bc, 32
  store i32 %v1_143c0, i32* %r7.global-to-local, align 4
  %v1_143c4 = inttoptr i32 %v1_143c0 to i32*
  %v2_143c4 = load i32, i32* %v1_143c4, align 4
  store i32 %v2_143c4, i32* %r7.global-to-local, align 4
  %v3_143c4 = add i32 %v0_143bc, 36
  %v4_143c4 = inttoptr i32 %v3_143c4 to i32*
  %v5_143c4 = load i32, i32* %v4_143c4, align 4
  store i32 %v5_143c4, i32* %r8.global-to-local, align 4
  %v1_143c8 = inttoptr i32 %v1_143bc to i32*
  %v2_143c8 = load i32, i32* %v1_143c8, align 4
  %v3_143c8 = add i32 %v0_143bc, 76
  %v4_143c8 = inttoptr i32 %v3_143c8 to i32*
  %v5_143c8 = load i32, i32* %v4_143c8, align 4
  store i32 %v5_143c8, i32* %r1.global-to-local, align 4
  %v0_143cc = load i32, i32* %r5.global-to-local, align 4
  %v1_143cc = add i32 %v0_143cc, 72
  %v1_143d0 = inttoptr i32 %v1_143cc to i32*
  store i32 %v2_143c8, i32* %v1_143d0, align 4
  %v3_143d0 = add i32 %v0_143cc, 76
  %v4_143d0 = inttoptr i32 %v3_143d0 to i32*
  %v5_143d0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_143d0, i32* %v4_143d0, align 4
  %v0_143d4 = load i32, i32* %r7.global-to-local, align 4
  %v1_143d4 = load i32, i32* %r5.global-to-local, align 4
  %v2_143d4 = add i32 %v1_143d4, 32
  %v3_143d4 = inttoptr i32 %v2_143d4 to i32*
  store i32 %v0_143d4, i32* %v3_143d4, align 4
  %v0_143d8 = load i32, i32* %r8.global-to-local, align 4
  %v1_143d8 = load i32, i32* %r5.global-to-local, align 4
  %v2_143d8 = add i32 %v1_143d8, 36
  %v3_143d8 = inttoptr i32 %v2_143d8 to i32*
  store i32 %v0_143d8, i32* %v3_143d8, align 4
  %v0_143dc = load i32, i32* %r6.global-to-local, align 4
  %v1_143dc = add i32 %v0_143dc, 80
  store i32 %v1_143dc, i32* %r3.global-to-local, align 4
  %v1_143e0 = add i32 %v0_143dc, 48
  store i32 %v1_143e0, i32* %r7.global-to-local, align 4
  %v1_143e4 = inttoptr i32 %v1_143e0 to i32*
  %v2_143e4 = load i32, i32* %v1_143e4, align 4
  store i32 %v2_143e4, i32* %r7.global-to-local, align 4
  %v3_143e4 = add i32 %v0_143dc, 52
  %v4_143e4 = inttoptr i32 %v3_143e4 to i32*
  %v5_143e4 = load i32, i32* %v4_143e4, align 4
  store i32 %v5_143e4, i32* %r8.global-to-local, align 4
  %v1_143e8 = inttoptr i32 %v1_143dc to i32*
  %v2_143e8 = load i32, i32* %v1_143e8, align 4
  %v3_143e8 = add i32 %v0_143dc, 84
  %v4_143e8 = inttoptr i32 %v3_143e8 to i32*
  %v5_143e8 = load i32, i32* %v4_143e8, align 4
  store i32 %v5_143e8, i32* %r1.global-to-local, align 4
  %v1_143ec = add i32 %v0_143dc, 16
  %v2_143ec = inttoptr i32 %v1_143ec to i32*
  %v3_143ec = load i32, i32* %v2_143ec, align 4
  store i32 %v3_143ec, i32* %r2.global-to-local, align 4
  %v0_143f0 = load i32, i32* %r5.global-to-local, align 4
  %v1_143f0 = add i32 %v0_143f0, 80
  %v1_143f4 = inttoptr i32 %v1_143f0 to i32*
  store i32 %v2_143e8, i32* %v1_143f4, align 4
  %v3_143f4 = add i32 %v0_143f0, 84
  %v4_143f4 = inttoptr i32 %v3_143f4 to i32*
  %v5_143f4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_143f4, i32* %v4_143f4, align 4
  %v0_143f8 = load i32, i32* %r7.global-to-local, align 4
  %v1_143f8 = load i32, i32* %r5.global-to-local, align 4
  %v2_143f8 = add i32 %v1_143f8, 48
  %v3_143f8 = inttoptr i32 %v2_143f8 to i32*
  store i32 %v0_143f8, i32* %v3_143f8, align 4
  %v0_143fc = load i32, i32* %r8.global-to-local, align 4
  %v1_143fc = load i32, i32* %r5.global-to-local, align 4
  %v2_143fc = add i32 %v1_143fc, 52
  %v3_143fc = inttoptr i32 %v2_143fc to i32*
  store i32 %v0_143fc, i32* %v3_143fc, align 4
  %v0_14400 = load i32, i32* %r2.global-to-local, align 4
  %v1_14400 = load i32, i32* %r5.global-to-local, align 4
  %v2_14400 = add i32 %v1_14400, 16
  %v3_14400 = inttoptr i32 %v2_14400 to i32*
  store i32 %v0_14400, i32* %v3_14400, align 4
  %v0_14404 = load i32, i32* %r6.global-to-local, align 4
  %v1_14404 = add i32 %v0_14404, 88
  store i32 %v1_14404, i32* %r3.global-to-local, align 4
  %v1_14408 = add i32 %v0_14404, 20
  %v2_14408 = inttoptr i32 %v1_14408 to i32*
  %v3_14408 = load i32, i32* %v2_14408, align 4
  store i32 %v3_14408, i32* %r2.global-to-local, align 4
  %v1_1440c = inttoptr i32 %v1_14404 to i32*
  %v2_1440c = load i32, i32* %v1_1440c, align 4
  %v3_1440c = add i32 %v0_14404, 92
  %v4_1440c = inttoptr i32 %v3_1440c to i32*
  %v5_1440c = load i32, i32* %v4_1440c, align 4
  store i32 %v5_1440c, i32* %r1.global-to-local, align 4
  %v1_14410 = add i32 %v0_14404, 64
  store i32 %v1_14410, i32* %r6.global-to-local, align 4
  %v1_14414 = inttoptr i32 %v1_14410 to i32*
  %v2_14414 = load i32, i32* %v1_14414, align 4
  store i32 %v2_14414, i32* %r6.global-to-local, align 4
  %v3_14414 = add i32 %v0_14404, 68
  %v4_14414 = inttoptr i32 %v3_14414 to i32*
  %v5_14414 = load i32, i32* %v4_14414, align 4
  store i32 %v5_14414, i32* %r7.global-to-local, align 4
  %v0_14418 = load i32, i32* %r5.global-to-local, align 4
  %v1_14418 = add i32 %v0_14418, 88
  store i32 %v1_14418, i32* %r3.global-to-local, align 4
  %v2_1441c = add i32 %v0_14418, 20
  %v3_1441c = inttoptr i32 %v2_1441c to i32*
  store i32 %v3_14408, i32* %v3_1441c, align 4
  %v0_14420 = load i32, i32* %ip.global-to-local, align 4
  %v1_14420 = load i32, i32* %r5.global-to-local, align 4
  %v2_14420 = add i32 %v1_14420, 24
  %v3_14420 = inttoptr i32 %v2_14420 to i32*
  store i32 %v0_14420, i32* %v3_14420, align 4
  %v0_14424 = load i32, i32* %lr.global-to-local, align 4
  %v1_14424 = load i32, i32* %r5.global-to-local, align 4
  %v2_14424 = add i32 %v1_14424, 28
  %v3_14424 = inttoptr i32 %v2_14424 to i32*
  store i32 %v0_14424, i32* %v3_14424, align 4
  %v0_14428 = load i32, i32* %r6.global-to-local, align 4
  %v1_14428 = load i32, i32* %r5.global-to-local, align 4
  %v2_14428 = add i32 %v1_14428, 64
  %v3_14428 = inttoptr i32 %v2_14428 to i32*
  store i32 %v0_14428, i32* %v3_14428, align 4
  %v0_1442c = load i32, i32* %r7.global-to-local, align 4
  %v1_1442c = load i32, i32* %r5.global-to-local, align 4
  %v2_1442c = add i32 %v1_1442c, 68
  %v3_1442c = inttoptr i32 %v2_1442c to i32*
  store i32 %v0_1442c, i32* %v3_1442c, align 4
  %v0_14430 = load i32, i32* %r3.global-to-local, align 4
  %v1_14430 = inttoptr i32 %v0_14430 to i32*
  store i32 %v2_1440c, i32* %v1_14430, align 4
  %v3_14430 = add i32 %v0_14430, 4
  %v4_14430 = inttoptr i32 %v3_14430 to i32*
  %v5_14430 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_14430, i32* %v4_14430, align 4
  %v2_14434 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_14434, i32* %r4.global-to-local, align 4
  ret i32 %v2_1440c

; uselistorder directives
  uselistorder i32 %v0_14404, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_143dc, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 3, 8, 4, 5, 6, 7, 9 }
  uselistorder i32* %r5.global-to-local, { 8, 0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 100, { 1, 0, 2 }
  uselistorder i32 104, { 3, 0, 1, 2, 4 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @function_1443c(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1443c:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_1443c = load i32, i32* @r4, align 4
  store i32 %v3_1443c, i32* %stack_var_-16, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 88, i32* @r2, align 4
  %v2_14454 = inttoptr i32 %arg2 to i8*
  %v3_14454 = call i32 @function_119c0(i8* %v2_14454, i32 0)
  %v2_14458 = load i32, i32* %arg1, align 4
  %v3_14458 = add i32 %tmp, 4
  %v4_14458 = inttoptr i32 %v3_14458 to i32*
  %v5_14458 = load i32, i32* %v4_14458, align 4
  store i32 %v5_14458, i32* %r4.global-to-local, align 4
  %v0_1445c = load i32, i32* %r6.global-to-local, align 4
  %v1_1445c = inttoptr i32 %v0_1445c to i32*
  store i32 %v2_14458, i32* %v1_1445c, align 4
  %v3_1445c = add i32 %v0_1445c, 4
  %v4_1445c = inttoptr i32 %v3_1445c to i32*
  %v5_1445c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1445c, i32* %v4_1445c, align 4
  %v0_14460 = load i32, i32* %r5.global-to-local, align 4
  %v1_14460 = add i32 %v0_14460, 32
  %v1_14464 = inttoptr i32 %v1_14460 to i32*
  %v2_14464 = load i32, i32* %v1_14464, align 4
  %v3_14464 = add i32 %v0_14460, 36
  %v4_14464 = inttoptr i32 %v3_14464 to i32*
  %v5_14464 = load i32, i32* %v4_14464, align 4
  store i32 %v5_14464, i32* %r4.global-to-local, align 4
  %v1_14468 = add i32 %v0_14460, 96
  %v2_14468 = inttoptr i32 %v1_14468 to i32*
  %v3_14468 = load i32, i32* %v2_14468, align 4
  store i32 %v3_14468, i32* %r2.global-to-local, align 4
  %v1_1446c = load i32, i32* %r6.global-to-local, align 4
  %v2_1446c = add i32 %v1_1446c, 32
  %v3_1446c = inttoptr i32 %v2_1446c to i32*
  store i32 %v2_14464, i32* %v3_1446c, align 4
  %v0_14470 = load i32, i32* %r4.global-to-local, align 4
  %v1_14470 = load i32, i32* %r6.global-to-local, align 4
  %v2_14470 = add i32 %v1_14470, 36
  %v3_14470 = inttoptr i32 %v2_14470 to i32*
  store i32 %v0_14470, i32* %v3_14470, align 4
  %v0_14474 = load i32, i32* %r2.global-to-local, align 4
  %v1_14474 = load i32, i32* %r6.global-to-local, align 4
  %v2_14474 = add i32 %v1_14474, 12
  %v3_14474 = inttoptr i32 %v2_14474 to i32*
  store i32 %v0_14474, i32* %v3_14474, align 4
  %v0_14478 = load i32, i32* %r5.global-to-local, align 4
  %v1_14478 = add i32 %v0_14478, 48
  %v2_14478 = inttoptr i32 %v1_14478 to i32*
  %v3_14478 = load i32, i32* %v2_14478, align 4
  %v1_1447c = add i32 %v0_14478, 24
  store i32 %v1_1447c, i32* %ip.global-to-local, align 4
  %v1_14480 = inttoptr i32 %v1_1447c to i32*
  %v2_14480 = load i32, i32* %v1_14480, align 4
  store i32 %v2_14480, i32* %ip.global-to-local, align 4
  %v3_14480 = add i32 %v0_14478, 28
  %v4_14480 = inttoptr i32 %v3_14480 to i32*
  %v5_14480 = load i32, i32* %v4_14480, align 4
  store i32 %v5_14480, i32* %lr.global-to-local, align 4
  %v1_14484 = load i32, i32* %r6.global-to-local, align 4
  %v2_14484 = add i32 %v1_14484, 44
  %v3_14484 = inttoptr i32 %v2_14484 to i32*
  store i32 %v3_14478, i32* %v3_14484, align 4
  %v0_14488 = load i32, i32* %r5.global-to-local, align 4
  %v1_14488 = add i32 %v0_14488, 64
  %v2_14488 = inttoptr i32 %v1_14488 to i32*
  %v3_14488 = load i32, i32* %v2_14488, align 4
  %v1_1448c = add i32 %v0_14488, 56
  %v2_1448c = inttoptr i32 %v1_1448c to i32*
  %v3_1448c = load i32, i32* %v2_1448c, align 4
  store i32 %v3_1448c, i32* %r2.global-to-local, align 4
  %v1_14490 = load i32, i32* %r6.global-to-local, align 4
  %v2_14490 = add i32 %v1_14490, 52
  %v3_14490 = inttoptr i32 %v2_14490 to i32*
  store i32 %v3_14488, i32* %v3_14490, align 4
  %v0_14494 = load i32, i32* %r2.global-to-local, align 4
  %v1_14494 = load i32, i32* %r6.global-to-local, align 4
  %v2_14494 = add i32 %v1_14494, 48
  %v3_14494 = inttoptr i32 %v2_14494 to i32*
  store i32 %v0_14494, i32* %v3_14494, align 4
  %v0_14498 = load i32, i32* %r5.global-to-local, align 4
  %v1_14498 = add i32 %v0_14498, 72
  %v1_1449c = inttoptr i32 %v1_14498 to i32*
  %v2_1449c = load i32, i32* %v1_1449c, align 4
  %v3_1449c = add i32 %v0_14498, 76
  %v4_1449c = inttoptr i32 %v3_1449c to i32*
  %v5_1449c = load i32, i32* %v4_1449c, align 4
  store i32 %v5_1449c, i32* %r1.global-to-local, align 4
  %v0_144a0 = load i32, i32* %r6.global-to-local, align 4
  %v1_144a0 = add i32 %v0_144a0, 56
  %v1_144a4 = inttoptr i32 %v1_144a0 to i32*
  store i32 %v2_1449c, i32* %v1_144a4, align 4
  %v3_144a4 = add i32 %v0_144a0, 60
  %v4_144a4 = inttoptr i32 %v3_144a4 to i32*
  %v5_144a4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_144a4, i32* %v4_144a4, align 4
  %v0_144a8 = load i32, i32* %r5.global-to-local, align 4
  %v1_144a8 = add i32 %v0_144a8, 80
  %v1_144ac = inttoptr i32 %v1_144a8 to i32*
  %v2_144ac = load i32, i32* %v1_144ac, align 4
  %v3_144ac = add i32 %v0_144a8, 84
  %v4_144ac = inttoptr i32 %v3_144ac to i32*
  %v5_144ac = load i32, i32* %v4_144ac, align 4
  store i32 %v5_144ac, i32* %r1.global-to-local, align 4
  %v0_144b0 = load i32, i32* %r6.global-to-local, align 4
  %v1_144b0 = add i32 %v0_144b0, 64
  %v1_144b4 = inttoptr i32 %v1_144b0 to i32*
  store i32 %v2_144ac, i32* %v1_144b4, align 4
  %v3_144b4 = add i32 %v0_144b0, 68
  %v4_144b4 = inttoptr i32 %v3_144b4 to i32*
  %v5_144b4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_144b4, i32* %v4_144b4, align 4
  %v0_144b8 = load i32, i32* %r5.global-to-local, align 4
  %v1_144b8 = add i32 %v0_144b8, 16
  %v2_144b8 = inttoptr i32 %v1_144b8 to i32*
  %v3_144b8 = load i32, i32* %v2_144b8, align 4
  %v1_144bc = load i32, i32* %r6.global-to-local, align 4
  %v2_144bc = add i32 %v1_144bc, 16
  %v3_144bc = inttoptr i32 %v2_144bc to i32*
  store i32 %v3_144b8, i32* %v3_144bc, align 4
  %v0_144c0 = load i32, i32* %r5.global-to-local, align 4
  %v1_144c0 = add i32 %v0_144c0, 88
  %v1_144c4 = add i32 %v0_144c0, 20
  %v2_144c4 = inttoptr i32 %v1_144c4 to i32*
  %v3_144c4 = load i32, i32* %v2_144c4, align 4
  store i32 %v3_144c4, i32* %r2.global-to-local, align 4
  %v1_144c8 = inttoptr i32 %v1_144c0 to i32*
  %v2_144c8 = load i32, i32* %v1_144c8, align 4
  %v3_144c8 = add i32 %v0_144c0, 92
  %v4_144c8 = inttoptr i32 %v3_144c8 to i32*
  %v5_144c8 = load i32, i32* %v4_144c8, align 4
  store i32 %v5_144c8, i32* %r1.global-to-local, align 4
  %v0_144cc = load i32, i32* %r6.global-to-local, align 4
  %v1_144cc = add i32 %v0_144cc, 72
  %v1_144d0 = inttoptr i32 %v1_144cc to i32*
  store i32 %v2_144c8, i32* %v1_144d0, align 4
  %v3_144d0 = add i32 %v0_144cc, 76
  %v4_144d0 = inttoptr i32 %v3_144d0 to i32*
  %v5_144d0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_144d0, i32* %v4_144d0, align 4
  %v0_144d4 = load i32, i32* %r2.global-to-local, align 4
  %v1_144d4 = load i32, i32* %r6.global-to-local, align 4
  %v2_144d4 = add i32 %v1_144d4, 20
  %v3_144d4 = inttoptr i32 %v2_144d4 to i32*
  store i32 %v0_144d4, i32* %v3_144d4, align 4
  %v0_144d8 = load i32, i32* %ip.global-to-local, align 4
  %v1_144d8 = load i32, i32* %r6.global-to-local, align 4
  %v2_144d8 = add i32 %v1_144d8, 24
  %v3_144d8 = inttoptr i32 %v2_144d8 to i32*
  store i32 %v0_144d8, i32* %v3_144d8, align 4
  %v0_144dc = load i32, i32* %lr.global-to-local, align 4
  %v1_144dc = load i32, i32* %r6.global-to-local, align 4
  %v2_144dc = add i32 %v1_144dc, 28
  %v3_144dc = inttoptr i32 %v2_144dc to i32*
  store i32 %v0_144dc, i32* %v3_144dc, align 4
  %v2_144e0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_144e0, i32* %r4.global-to-local, align 4
  ret i32 %v2_144c8

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 84, { 1, 2, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @function_144e8(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_144e8:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 88, i32* @r2, align 4
  %v2_14504 = inttoptr i32 %arg2 to i8*
  %v3_14504 = call i32 @function_119c0(i8* %v2_14504, i32 0)
  %v1_14508 = add i32 %tmp, 4
  %v2_14508 = inttoptr i32 %v1_14508 to i32*
  %v3_14508 = load i32, i32* %v2_14508, align 4
  %v2_1450c = load i32, i32* %arg1, align 4
  store i32 %v2_1450c, i32* %r8.global-to-local, align 4
  %v1_14510 = load i32, i32* %r5.global-to-local, align 4
  %v2_14510 = add i32 %v1_14510, 12
  %v3_14510 = inttoptr i32 %v2_14510 to i32*
  store i32 %v3_14508, i32* %v3_14510, align 4
  %v0_14514 = load i32, i32* %r4.global-to-local, align 4
  %v1_14514 = add i32 %v0_14514, 20
  %v2_14514 = inttoptr i32 %v1_14514 to i32*
  %v3_14514 = load i32, i32* %v2_14514, align 4
  %v1_14518 = add i32 %v0_14514, 16
  %v2_14518 = inttoptr i32 %v1_14518 to i32*
  %v3_14518 = load i32, i32* %v2_14518, align 4
  store i32 %v3_14518, i32* %r6.global-to-local, align 4
  %v1_1451c = load i32, i32* %r5.global-to-local, align 4
  %v2_1451c = add i32 %v1_1451c, 44
  %v3_1451c = inttoptr i32 %v2_1451c to i32*
  store i32 %v3_14514, i32* %v3_1451c, align 4
  %v0_14520 = load i32, i32* %r4.global-to-local, align 4
  %v1_14520 = add i32 %v0_14520, 24
  %v2_14520 = inttoptr i32 %v1_14520 to i32*
  %v3_14520 = load i32, i32* %v2_14520, align 4
  %v1_14524 = load i32, i32* %r5.global-to-local, align 4
  %v2_14524 = add i32 %v1_14524, 48
  %v3_14524 = inttoptr i32 %v2_14524 to i32*
  store i32 %v3_14520, i32* %v3_14524, align 4
  %v0_14528 = load i32, i32* %r4.global-to-local, align 4
  %v1_14528 = add i32 %v0_14528, 28
  %v2_14528 = inttoptr i32 %v1_14528 to i32*
  %v3_14528 = load i32, i32* %v2_14528, align 4
  %v1_1452c = load i32, i32* %r5.global-to-local, align 4
  %v2_1452c = add i32 %v1_1452c, 52
  %v3_1452c = inttoptr i32 %v2_1452c to i32*
  store i32 %v3_14528, i32* %v3_1452c, align 4
  %v0_14530 = load i32, i32* %r4.global-to-local, align 4
  %v1_14530 = add i32 %v0_14530, 32
  %v1_14534 = inttoptr i32 %v1_14530 to i32*
  %v2_14534 = load i32, i32* %v1_14534, align 4
  %v3_14534 = add i32 %v0_14530, 36
  %v4_14534 = inttoptr i32 %v3_14534 to i32*
  %v5_14534 = load i32, i32* %v4_14534, align 4
  store i32 %v5_14534, i32* %r1.global-to-local, align 4
  %v0_14538 = load i32, i32* %r5.global-to-local, align 4
  %v1_14538 = add i32 %v0_14538, 56
  %v1_1453c = inttoptr i32 %v1_14538 to i32*
  store i32 %v2_14534, i32* %v1_1453c, align 4
  %v3_1453c = add i32 %v0_14538, 60
  %v4_1453c = inttoptr i32 %v3_1453c to i32*
  %v5_1453c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1453c, i32* %v4_1453c, align 4
  %v0_14540 = load i32, i32* %r4.global-to-local, align 4
  %v1_14540 = add i32 %v0_14540, 40
  %v1_14544 = inttoptr i32 %v1_14540 to i32*
  %v2_14544 = load i32, i32* %v1_14544, align 4
  %v3_14544 = add i32 %v0_14540, 44
  %v4_14544 = inttoptr i32 %v3_14544 to i32*
  %v5_14544 = load i32, i32* %v4_14544, align 4
  store i32 %v5_14544, i32* %r1.global-to-local, align 4
  %v0_14548 = load i32, i32* %r5.global-to-local, align 4
  %v1_14548 = add i32 %v0_14548, 64
  %v1_1454c = inttoptr i32 %v1_14548 to i32*
  store i32 %v2_14544, i32* %v1_1454c, align 4
  %v3_1454c = add i32 %v0_14548, 68
  %v4_1454c = inttoptr i32 %v3_1454c to i32*
  %v5_1454c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1454c, i32* %v4_1454c, align 4
  %v0_14550 = load i32, i32* %r4.global-to-local, align 4
  %v1_14550 = add i32 %v0_14550, 48
  %v1_14554 = inttoptr i32 %v1_14550 to i32*
  %v2_14554 = load i32, i32* %v1_14554, align 4
  %v3_14554 = add i32 %v0_14550, 52
  %v4_14554 = inttoptr i32 %v3_14554 to i32*
  %v5_14554 = load i32, i32* %v4_14554, align 4
  store i32 %v5_14554, i32* %r1.global-to-local, align 4
  %v1_14558 = add i32 %v0_14550, 8
  %v2_14558 = inttoptr i32 %v1_14558 to i16*
  %v3_14558 = load i16, i16* %v2_14558, align 2
  %v4_14558 = zext i16 %v3_14558 to i32
  store i32 %v4_14558, i32* %r2.global-to-local, align 4
  %v1_1455c = add i32 %v0_14550, 10
  %v2_1455c = inttoptr i32 %v1_1455c to i16*
  %v3_1455c = load i16, i16* %v2_1455c, align 2
  %v4_1455c = zext i16 %v3_1455c to i32
  store i32 %v4_1455c, i32* %ip.global-to-local, align 4
  %v1_14560 = add i32 %v0_14550, 12
  %v2_14560 = inttoptr i32 %v1_14560 to i16*
  %v3_14560 = load i16, i16* %v2_14560, align 2
  %v4_14560 = zext i16 %v3_14560 to i32
  store i32 %v4_14560, i32* %lr.global-to-local, align 4
  %v1_14564 = add i32 %v0_14550, 14
  %v2_14564 = inttoptr i32 %v1_14564 to i16*
  %v3_14564 = load i16, i16* %v2_14564, align 2
  %v4_14564 = zext i16 %v3_14564 to i32
  store i32 %v4_14564, i32* %r4.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_14570 = load i32, i32* %r5.global-to-local, align 4
  %v1_14570 = add i32 %v0_14570, 72
  %v1_14574 = inttoptr i32 %v1_14570 to i32*
  store i32 %v2_14554, i32* %v1_14574, align 4
  %v3_14574 = add i32 %v0_14570, 76
  %v4_14574 = inttoptr i32 %v3_14574 to i32*
  %v5_14574 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_14574, i32* %v4_14574, align 4
  %v0_14578 = load i32, i32* %r5.global-to-local, align 4
  %v1_14578 = inttoptr i32 %v0_14578 to i32*
  %v2_14578 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v2_14578, i32* %v1_14578, align 4
  %v3_14578 = add i32 %v0_14578, 4
  %v4_14578 = inttoptr i32 %v3_14578 to i32*
  %v5_14578 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v5_14578, i32* %v4_14578, align 4
  %v0_1457c = load i32, i32* %r6.global-to-local, align 4
  %v1_1457c = load i32, i32* %r5.global-to-local, align 4
  %v2_1457c = add i32 %v1_1457c, 32
  %v3_1457c = inttoptr i32 %v2_1457c to i32*
  store i32 %v0_1457c, i32* %v3_1457c, align 4
  %v0_14580 = load i32, i32* %r7.global-to-local, align 4
  %v1_14580 = load i32, i32* %r5.global-to-local, align 4
  %v2_14580 = add i32 %v1_14580, 36
  %v3_14580 = inttoptr i32 %v2_14580 to i32*
  store i32 %v0_14580, i32* %v3_14580, align 4
  %v0_14584 = load i32, i32* %r2.global-to-local, align 4
  %v1_14584 = load i32, i32* %r5.global-to-local, align 4
  %v2_14584 = add i32 %v1_14584, 16
  %v3_14584 = inttoptr i32 %v2_14584 to i32*
  store i32 %v0_14584, i32* %v3_14584, align 4
  %v0_14588 = load i32, i32* %ip.global-to-local, align 4
  %v1_14588 = load i32, i32* %r5.global-to-local, align 4
  %v2_14588 = add i32 %v1_14588, 20
  %v3_14588 = inttoptr i32 %v2_14588 to i32*
  store i32 %v0_14588, i32* %v3_14588, align 4
  %v0_1458c = load i32, i32* %lr.global-to-local, align 4
  %v1_1458c = load i32, i32* %r5.global-to-local, align 4
  %v2_1458c = add i32 %v1_1458c, 24
  %v3_1458c = inttoptr i32 %v2_1458c to i32*
  store i32 %v0_1458c, i32* %v3_1458c, align 4
  %v0_14590 = load i32, i32* %r4.global-to-local, align 4
  %v1_14590 = load i32, i32* %r5.global-to-local, align 4
  %v2_14590 = add i32 %v1_14590, 28
  %v3_14590 = inttoptr i32 %v2_14590 to i32*
  store i32 %v0_14590, i32* %v3_14590, align 4
  ret i32 %v2_14554

; uselistorder directives
  uselistorder i32 %v0_14550, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 76, { 1, 2, 3, 4, 0 }
  uselistorder i32 68, { 0, 1, 7, 2, 3, 4, 5, 6 }
  uselistorder i32 60, { 3, 4, 1, 5, 6, 0, 2, 7 }
  uselistorder i32 88, { 4, 0, 1, 2, 3 }
}

define i32 @function_145a0() local_unnamed_addr {
dec_label_pc_145a0:
  %stack_var_-16 = alloca i32, align 4
  %v2_145a4 = ptrtoint i32* %stack_var_-16 to i32
  %v2_145b0 = call i32 @function_162d8(i32 7, i32 %v2_145a4)
  %v1_145b4 = icmp slt i32 %v2_145b0, 0
  %v5_145b8 = load i32, i32* %stack_var_-16, align 4
  %storemerge = select i1 %v1_145b4, i32 256, i32 %v5_145b8
  ret i32 %storemerge
}

define i32 @function_145cc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_145cc:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_145cc = load i32, i32* @r7, align 4
  store i32 %v3_145cc, i32* %stack_var_-8, align 4
  %v0_145d8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_145d8, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_145d8, -4095
  br i1 %tmp, label %dec_label_pc_145f8, label %dec_label_pc_145e8

dec_label_pc_145e8:                               ; preds = %dec_label_pc_145cc
  %v0_145e8 = call i32 @function_11970()
  %v0_145ec = load i32, i32* %r7.global-to-local, align 4
  %v1_145ec = sub i32 0, %v0_145ec
  %v2_145f0 = inttoptr i32 %v0_145e8 to i32*
  store i32 %v1_145ec, i32* %v2_145f0, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_145f8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_145f8

dec_label_pc_145f8:                               ; preds = %dec_label_pc_145cc, %dec_label_pc_145e8
  %v1_145fc = phi i32 [ %v0_145d8, %dec_label_pc_145cc ], [ -1, %dec_label_pc_145e8 ]
  %v2_145f8 = phi i32 [ %v3_145cc, %dec_label_pc_145cc ], [ %v2_145f8.pre, %dec_label_pc_145e8 ]
  store i32 %v2_145f8, i32* @r7, align 4
  ret i32 %v1_145fc

; uselistorder directives
  uselistorder i32 %v0_145d8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_145f8, { 1, 0 }
}

define i32 @function_14600(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14600:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14600 = load i32, i32* @r7, align 4
  store i32 %v3_14600, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_14628, label %dec_label_pc_14618

dec_label_pc_14618:                               ; preds = %dec_label_pc_14600
  %v0_14618 = call i32 @function_11970()
  %v0_1461c = load i32, i32* %r7.global-to-local, align 4
  %v1_1461c = sub i32 0, %v0_1461c
  %v2_14620 = inttoptr i32 %v0_14618 to i32*
  store i32 %v1_1461c, i32* %v2_14620, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_1462c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_14628

dec_label_pc_14628:                               ; preds = %dec_label_pc_14600, %dec_label_pc_14618
  %v2_1462c = phi i32 [ %v3_14600, %dec_label_pc_14600 ], [ %v2_1462c.pre, %dec_label_pc_14618 ]
  %v0_14628 = phi i32 [ %arg1, %dec_label_pc_14600 ], [ -1, %dec_label_pc_14618 ]
  store i32 %v2_1462c, i32* @r7, align 4
  ret i32 %v0_14628

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14628, { 1, 0 }
}

define i32 @function_14634(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_14634:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_14668, label %dec_label_pc_14658

dec_label_pc_14658:                               ; preds = %dec_label_pc_14634
  %v0_14658 = call i32 @function_11970()
  %v0_1465c = load i32, i32* %r4.global-to-local, align 4
  %v1_1465c = sub i32 0, %v0_1465c
  %v2_14660 = inttoptr i32 %v0_14658 to i32*
  store i32 %v1_1465c, i32* %v2_14660, align 4
  br label %dec_label_pc_14668

dec_label_pc_14668:                               ; preds = %dec_label_pc_14634, %dec_label_pc_14658
  %v1_14670 = phi i32 [ %arg1, %dec_label_pc_14634 ], [ -1, %dec_label_pc_14658 ]
  ret i32 %v1_14670

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14668, { 1, 0 }
}

define i32 @function_14674(i32 %arg1) local_unnamed_addr {
dec_label_pc_14674:
  %v1_14684 = load i32, i32* @r0, align 4
  ret i32 %v1_14684
}

define i32 @function_14688(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_14688:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14688 = load i32, i32* @r7, align 4
  store i32 %v3_14688, i32* %stack_var_-8, align 4
  %v0_14694 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_14694, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_14694, -4095
  br i1 %tmp, label %dec_label_pc_146b4, label %dec_label_pc_146a4

dec_label_pc_146a4:                               ; preds = %dec_label_pc_14688
  %v0_146a4 = call i32 @function_11970()
  %v0_146a8 = load i32, i32* %r7.global-to-local, align 4
  %v1_146a8 = sub i32 0, %v0_146a8
  %v2_146ac = inttoptr i32 %v0_146a4 to i32*
  store i32 %v1_146a8, i32* %v2_146ac, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_146b4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_146b4

dec_label_pc_146b4:                               ; preds = %dec_label_pc_14688, %dec_label_pc_146a4
  %v1_146b8 = phi i32 [ %v0_14694, %dec_label_pc_14688 ], [ -1, %dec_label_pc_146a4 ]
  %v2_146b4 = phi i32 [ %v3_14688, %dec_label_pc_14688 ], [ %v2_146b4.pre, %dec_label_pc_146a4 ]
  store i32 %v2_146b4, i32* @r7, align 4
  ret i32 %v1_146b8

; uselistorder directives
  uselistorder i32 %v0_14694, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_146b4, { 1, 0 }
}

define i32 @function_146bc(i32 %arg1) local_unnamed_addr {
dec_label_pc_146bc:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_146c0.outer

dec_label_pc_146c0.outer:                         ; preds = %dec_label_pc_146d8, %dec_label_pc_146bc
  %v0_146c0.ph = phi i32 [ %v0_146c0.pre.pre, %dec_label_pc_146d8 ], [ %arg1, %dec_label_pc_146bc ]
  %tmp = icmp ult i32 %v0_146c0.ph, -4095
  br label %dec_label_pc_146c0

dec_label_pc_146c0:                               ; preds = %dec_label_pc_146c0.outer, %dec_label_pc_146c0
  br i1 %tmp, label %dec_label_pc_146c0, label %dec_label_pc_146d8

dec_label_pc_146d8:                               ; preds = %dec_label_pc_146c0
  %v0_146d8 = call i32 @function_11970()
  %v1_146dc = sub i32 0, %v0_146c0.ph
  %v2_146e0 = inttoptr i32 %v0_146d8 to i32*
  store i32 %v1_146dc, i32* %v2_146e0, align 4
  %v0_146c0.pre.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_146c0.outer

; uselistorder directives
  uselistorder i32 %v0_146c0.ph, { 1, 0 }
  uselistorder label %dec_label_pc_146c0, { 1, 0 }
}

define i32 @function_146e8(i32* %arg1) local_unnamed_addr {
dec_label_pc_146e8:
  %ip.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 127864, i32* @r6, align 4
  %v1_146fc = add i32 %tmp, 24
  store i32 %v1_146fc, i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  %v4_14714 = load i32, i32* inttoptr (i32 127936 to i32*), align 64
  store i32 %v4_14714, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_14714)
  %v0_14728 = load i32, i32* @r6, align 4
  %v2_14728 = add i32 %v0_14728, 16
  %v3_14728 = inttoptr i32 %v2_14728 to i32*
  %v4_14728 = load i32, i32* %v3_14728, align 4
  store i32 %v4_14728, i32* %ip.global-to-local, align 4
  store i32 83764, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_14728)
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_14738

dec_label_pc_14738:                               ; preds = %dec_label_pc_14768, %dec_label_pc_146e8
  %v0_14738 = load i32, i32* @r5, align 4
  %v1_14738 = add i32 %v0_14738, 4
  %v2_14738 = inttoptr i32 %v1_14738 to i32*
  %v3_14738 = load i32, i32* %v2_14738, align 4
  %v4_14738 = add i32 %v0_14738, 8
  %v5_14738 = inttoptr i32 %v4_14738 to i32*
  %v6_14738 = load i32, i32* %v5_14738, align 4
  %tmp10 = icmp ugt i32 %v6_14738, %v3_14738
  br i1 %tmp10, label %dec_label_pc_14768, label %dec_label_pc_14744

dec_label_pc_14744:                               ; preds = %dec_label_pc_14738
  %v1_14744 = inttoptr i32 %v0_14738 to i32*
  %v2_14744 = load i32, i32* %v1_14744, align 4
  %v1_14748 = add i32 %v0_14738, 12
  %v2_14748 = inttoptr i32 %v1_14748 to i32*
  %v3_14748 = load i32, i32* %v2_14748, align 4
  %v1_1474c = add i32 %v0_14738, 20
  %v2_1474c = inttoptr i32 %v1_1474c to i32*
  %v3_1474c = load i32, i32* %v2_1474c, align 4
  %v4_14750 = inttoptr i32 %v3_14748 to i32*
  %v5_14750 = call i32 @function_1630c(i32 %v2_14744, i32* %v4_14750, i32 %v3_1474c, i32 %v6_14738)
  %tmp9 = icmp slt i32 %v5_14750, 1
  br i1 %tmp9, label %.thread, label %dec_label_pc_14760

.thread:                                          ; preds = %dec_label_pc_14744
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_14798

dec_label_pc_14760:                               ; preds = %dec_label_pc_14744
  %v1_14760 = load i32, i32* @r5, align 4
  %v2_14760 = add i32 %v1_14760, 8
  %v3_14760 = inttoptr i32 %v2_14760 to i32*
  store i32 %v5_14750, i32* %v3_14760, align 4
  %v0_14764 = load i32, i32* @r7, align 4
  %v1_14764 = load i32, i32* @r5, align 4
  %v2_14764 = add i32 %v1_14764, 4
  %v3_14764 = inttoptr i32 %v2_14764 to i32*
  store i32 %v0_14764, i32* %v3_14764, align 4
  %v0_14768.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_14768

dec_label_pc_14768:                               ; preds = %dec_label_pc_14738, %dec_label_pc_14760
  %v1_1478c = phi i32 [ %v0_14738, %dec_label_pc_14738 ], [ %v0_14768.pre, %dec_label_pc_14760 ]
  %v1_14768 = add i32 %v1_1478c, 4
  %v2_14768 = inttoptr i32 %v1_14768 to i32*
  %v3_14768 = load i32, i32* %v2_14768, align 4
  %v1_1476c = add i32 %v1_1478c, 12
  %v2_1476c = inttoptr i32 %v1_1476c to i32*
  %v3_1476c = load i32, i32* %v2_1476c, align 4
  %v2_14770 = add i32 %v3_1476c, %v3_14768
  store i32 %v2_14770, i32* @r4, align 4
  %v3_14774 = inttoptr i32 %v2_14770 to i32*
  %v4_14774 = load i32, i32* %v3_14774, align 4
  %v1_14778 = add i32 %v2_14770, 4
  %v2_14778 = inttoptr i32 %v1_14778 to i32*
  %v3_14778 = load i32, i32* %v2_14778, align 4
  %v1_1477c = add i32 %v2_14770, 16
  %v2_1477c = inttoptr i32 %v1_1477c to i16*
  %v3_1477c = load i16, i16* %v2_1477c, align 2
  %v4_1477c = zext i16 %v3_1477c to i32
  %v1_14780 = add i32 %v2_14770, 8
  %v2_14780 = inttoptr i32 %v1_14780 to i32*
  %v3_14780 = load i32, i32* %v2_14780, align 4
  store i32 %v3_14780, i32* %ip.global-to-local, align 4
  %v2_14784 = add i32 %v4_1477c, %v3_14768
  %v2_14788 = or i32 %v3_14778, %v4_14774
  %v4_14788 = icmp eq i32 %v2_14788, 0
  store i32 %v2_14784, i32* %v2_14768, align 4
  %v0_14790 = load i32, i32* %ip.global-to-local, align 4
  %v1_14790 = load i32, i32* @r5, align 4
  %v2_14790 = add i32 %v1_14790, 16
  %v3_14790 = inttoptr i32 %v2_14790 to i32*
  store i32 %v0_14790, i32* %v3_14790, align 4
  br i1 %v4_14788, label %dec_label_pc_14738, label %dec_label_pc_14798

dec_label_pc_14798:                               ; preds = %dec_label_pc_14768, %.thread
  %v0_147a4 = load i32, i32* @r6, align 4
  %v2_147a4 = add i32 %v0_147a4, 24
  %v3_147a4 = inttoptr i32 %v2_147a4 to i32*
  %v4_147a4 = load i32, i32* %v3_147a4, align 4
  store i32 %v4_147a4, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_147a4)
  %v0_147b0 = load i32, i32* @r4, align 4
  ret i32 %v0_147b0

; uselistorder directives
  uselistorder i32 %v2_14770, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_1478c, { 1, 0 }
  uselistorder i32 %v6_14738, { 1, 0 }
  uselistorder i32 %v0_14738, { 0, 1, 3, 2, 4, 5 }
  uselistorder label %dec_label_pc_14768, { 1, 0 }
}

define i32 @function_147c4(i32 %arg1) local_unnamed_addr {
dec_label_pc_147c4:
  %v0_147c4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_147c4, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_147c4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_147c4, %bb
  %v10_147d0 = phi i32 [ %arg1, %dec_label_pc_147c4 ], [ 0, %bb ]
  ret i32 %v10_147d0

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_147d4(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_147d4:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_147d4 = load i32, i32* @r4, align 4
  %v6_147d4 = load i32, i32* @r5, align 4
  %v9_147d4 = load i32, i32* @r6, align 4
  %v12_147d4 = load i32, i32* @r7, align 4
  %v15_147d4 = load i32, i32* @r8, align 4
  %v18_147d4 = load i32, i32* @sb, align 4
  %v21_147d4 = load i32, i32* @sl, align 4
  %v24_147d4 = load i32, i32* @fp, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_147d8 = icmp eq i32* %arg1, null
  store i1 %v2_147d8, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg4, i32* @r7, align 4
  br i1 %v2_147d8, label %dec_label_pc_14ae8, label %dec_label_pc_147f0

dec_label_pc_147f0:                               ; preds = %dec_label_pc_147d4
  %v1_147f0 = urem i32 %arg3, 256
  store i32 %v1_147f0, i32* @sb, align 4
  %v1_147f4 = udiv i32 %arg3, 256
  %v3_147f8 = urem i32 %v1_147f4, 256
  %v3_147fc = mul nuw nsw i32 %v1_147f0, 4
  %v1_14804 = or i32 %v3_147fc, 1
  %v1_14810 = and i32 %arg3, 131072
  %v1_14814 = add nsw i32 %v1_147f0, -1
  %v1_14820 = and i32 %arg3, 262144
  store i32 %v1_14820, i32* %r2.global-to-local, align 4
  %v1_14824 = and i32 %arg3, 65536
  store i32 %v1_14824, i32* %r3.global-to-local, align 4
  store i32 %v1_14824, i32* %stack_var_-72, align 4
  store i32 0, i32* @fp, align 4
  %v1_14834 = add i32 %arg4, 1
  store i32 %v1_14834, i32* @sl, align 4
  %v2_149b4 = inttoptr i32 %arg2 to i32*
  %v2_149c4 = icmp eq i32 %v1_14810, 0
  %v2_14a1c = icmp eq i32 %v1_14820, 0
  br label %dec_label_pc_14838

dec_label_pc_14838:                               ; preds = %dec_label_pc_14838.backedge, %dec_label_pc_147f0
  %v2_14854 = phi i32 [ %v0_14838.pre, %dec_label_pc_14838.backedge ], [ %tmp, %dec_label_pc_147f0 ]
  %v1_14838 = add i32 %v2_14854, 4
  %v2_14838 = inttoptr i32 %v1_14838 to i32*
  %v3_14838 = load i32, i32* %v2_14838, align 4
  store i32 %v3_14838, i32* %r3.global-to-local, align 4
  %v2_1483c = icmp eq i32 %v3_14838, 0
  store i1 %v2_1483c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1483c, label %dec_label_pc_14844, label %dec_label_pc_1488c

dec_label_pc_14844:                               ; preds = %dec_label_pc_14838
  %v1_14844 = add i32 %v2_14854, 16
  %v2_14844 = inttoptr i32 %v1_14844 to i32*
  %v3_14844 = load i32, i32* %v2_14844, align 4
  store i32 %v3_14844, i32* %r3.global-to-local, align 4
  %v2_14848 = icmp eq i32 %v3_14844, 0
  store i1 %v2_14848, i1* %cpsr_z.global-to-local, align 1
  %v1_1484c = add i32 %v2_14854, 8
  %v2_1484c = inttoptr i32 %v1_1484c to i32*
  %v3_1484c = load i32, i32* %v2_1484c, align 4
  store i32 %v3_1484c, i32* %r3.global-to-local, align 4
  br i1 %v2_14848, label %bb, label %bb66

bb:                                               ; preds = %dec_label_pc_14844
  store i32 81, i32* %r2.global-to-local, align 4
  store i32 81, i32* %v2_14844, align 4
  %v0_14858.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_14844, %bb
  %v0_14858 = phi i32 [ %v0_14858.pre, %bb ], [ %v3_1484c, %dec_label_pc_14844 ]
  %v2_14858 = icmp eq i32 %v0_14858, 0
  store i1 %v2_14858, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14858, label %bb67, label %.thread

bb67:                                             ; preds = %bb66
  store i32 %v1_14804, i32* %r3.global-to-local, align 4
  %v2_14860 = load i32, i32* @r5, align 4
  %v3_14860 = add i32 %v2_14860, 8
  %v4_14860 = inttoptr i32 %v3_14860 to i32*
  store i32 %v1_14804, i32* %v4_14860, align 4
  br label %.thread

.thread:                                          ; preds = %bb66, %bb67
  %v0_14864 = load i32, i32* @r5, align 4
  %v1_14864 = add i32 %v0_14864, 16
  %v2_14864 = inttoptr i32 %v1_14864 to i32*
  %v3_14864 = load i32, i32* %v2_14864, align 4
  store i32 %v3_14864, i32* %r0.global-to-local, align 4
  %v1_14868 = add i32 %v0_14864, 8
  %v2_14868 = inttoptr i32 %v1_14868 to i32*
  %v3_14868 = load i32, i32* %v2_14868, align 4
  store i32 %v3_14868, i32* %r3.global-to-local, align 4
  %v2_1486c = add i32 %v3_14868, %v3_14864
  store i32 %v2_1486c, i32* @r0, align 4
  %v0_14870 = call i32 @function_11f78()
  store i32 %v0_14870, i32* %r0.global-to-local, align 4
  %v2_14874 = icmp eq i32 %v0_14870, 0
  store i1 %v2_14874, i1* %cpsr_z.global-to-local, align 1
  %v1_14878 = load i32, i32* @r5, align 4
  %v2_14878 = add i32 %v1_14878, 4
  %v3_14878 = inttoptr i32 %v2_14878 to i32*
  store i32 %v0_14870, i32* %v3_14878, align 4
  br i1 %v2_14874, label %dec_label_pc_14ae8, label %dec_label_pc_14880

dec_label_pc_14880:                               ; preds = %.thread
  %v0_14880 = load i32, i32* @r5, align 4
  %v1_14880 = add i32 %v0_14880, 20
  %v2_14880 = inttoptr i32 %v1_14880 to i32*
  %v3_14880 = load i32, i32* %v2_14880, align 4
  %v1_14884 = or i32 %v3_14880, 1
  store i32 %v1_14884, i32* %r3.global-to-local, align 4
  store i32 %v1_14884, i32* %v2_14880, align 4
  %v0_1488c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1488c

dec_label_pc_1488c:                               ; preds = %dec_label_pc_14838, %dec_label_pc_14880
  %v1_14894 = phi i32 [ %v2_14854, %dec_label_pc_14838 ], [ %v0_1488c.pre, %dec_label_pc_14880 ]
  %v1_1488c = add i32 %v1_14894, 4
  %v2_1488c = inttoptr i32 %v1_1488c to i32*
  %v3_1488c = load i32, i32* %v2_1488c, align 4
  store i32 %v3_1488c, i32* %r2.global-to-local, align 4
  %v4_1488c = add i32 %v1_14894, 8
  %v5_1488c = inttoptr i32 %v4_1488c to i32*
  %v6_1488c = load i32, i32* %v5_1488c, align 4
  %v2_14890 = add i32 %v6_1488c, %v3_1488c
  store i32 %v2_14890, i32* %r3.global-to-local, align 4
  %v2_14894 = add i32 %v1_14894, 12
  %v3_14894 = inttoptr i32 %v2_14894 to i32*
  store i32 %v2_14890, i32* %v3_14894, align 4
  %v0_14898 = load i32, i32* @fp, align 4
  store i32 %v0_14898, i32* @r6, align 4
  br label %dec_label_pc_1489c

dec_label_pc_1489c:                               ; preds = %dec_label_pc_14928, %dec_label_pc_14914, %dec_label_pc_1488c
  %v0_148a4 = phi i32 [ %v0_14898, %dec_label_pc_1488c ], [ %v1_14914, %dec_label_pc_14914 ], [ %v0_148a4.pre.pre, %dec_label_pc_14928 ]
  %v0_1489c = load i32, i32* @r5, align 4
  %v1_1489c = add i32 %v0_1489c, 12
  store i32 %v1_1489c, i32* %r0.global-to-local, align 4
  %v1_148a0 = inttoptr i32 %v1_1489c to i32*
  %v2_148a0 = load i32, i32* %v1_148a0, align 4
  store i32 %v2_148a0, i32* %r0.global-to-local, align 4
  %v3_148a0 = add i32 %v0_1489c, 16
  %v4_148a0 = inttoptr i32 %v3_148a0 to i32*
  %v5_148a0 = load i32, i32* %v4_148a0, align 4
  %v2_148a4 = add i32 %v2_148a0, %v0_148a4
  store i32 %v2_148a4, i32* %r0.global-to-local, align 4
  %v2_148a8 = sub i32 %v5_148a0, %v0_148a4
  %v1_148ac = inttoptr i32 %v0_1489c to i32*
  %v2_148ac = load i32, i32* %v1_148ac, align 4
  store i32 %v2_148ac, i32* %r2.global-to-local, align 4
  %v3_148b0 = call i32 @function_152d0(i32 %v2_148a4, i32 %v2_148a8, i32 %v2_148ac)
  store i32 %v3_148b0, i32* %r0.global-to-local, align 4
  store i32 %v3_148b0, i32* %r4.global-to-local, align 4
  %v2_148b4 = icmp eq i32 %v3_148b0, 0
  store i1 %v2_148b4, i1* %cpsr_z.global-to-local, align 1
  %v0_148bc = load i32, i32* @r5, align 4
  %v1_148bc = add i32 %v0_148bc, 12
  br i1 %v2_148b4, label %dec_label_pc_148bc, label %dec_label_pc_148d4

dec_label_pc_148bc:                               ; preds = %dec_label_pc_1489c
  store i32 %v1_148bc, i32* %r0.global-to-local, align 4
  %v1_148c0 = inttoptr i32 %v1_148bc to i32*
  %v2_148c0 = load i32, i32* %v1_148c0, align 4
  store i32 %v2_148c0, i32* %r0.global-to-local, align 4
  %v3_148c0 = add i32 %v0_148bc, 16
  %v4_148c0 = inttoptr i32 %v3_148c0 to i32*
  %v5_148c0 = load i32, i32* %v4_148c0, align 4
  store i32 %v5_148c0, i32* @r2, align 4
  %v2_148c8 = inttoptr i32 %v2_148c0 to i8*
  %v3_148c8 = call i32 @function_119c0(i8* %v2_148c8, i32 0)
  store i32 %v3_148c8, i32* %r0.global-to-local, align 4
  %v0_148cc = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14aec

dec_label_pc_148d4:                               ; preds = %dec_label_pc_1489c
  %v2_148d4 = inttoptr i32 %v1_148bc to i32*
  %v3_148d4 = load i32, i32* %v2_148d4, align 4
  store i32 %v3_148d4, i32* @r4, align 4
  %v1_148d8 = load i32, i32* @r6, align 4
  %v2_148d8 = add i32 %v1_148d8, %v3_148d4
  store i32 %v2_148d8, i32* %r0.global-to-local, align 4
  %v1_148dc = call i32 @function_15d80(i32 %v2_148d8)
  %v0_148e4 = load i32, i32* @r6, align 4
  %v2_148e4 = add i32 %v0_148e4, %v1_148dc
  store i32 %v2_148e4, i32* @r6, align 4
  %v0_148e8 = load i32, i32* @r4, align 4
  store i32 %v0_148e8, i32* @r0, align 4
  %v2_148ec = call i32 @function_15fcc(i32 %v0_148e8, i32 10)
  store i32 %v2_148ec, i32* %r0.global-to-local, align 4
  %v2_148f0 = icmp eq i32 %v2_148ec, 0
  store i1 %v2_148f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_148f0, label %dec_label_pc_1491c, label %dec_label_pc_148f8

dec_label_pc_148f8:                               ; preds = %dec_label_pc_148d4
  %v1_148f8 = inttoptr i32 %v2_148ec to i8*
  %v2_148f8 = load i8, i8* %v1_148f8, align 1
  %v3_148f8 = zext i8 %v2_148f8 to i32
  %v1_148fc = add nuw nsw i32 %v3_148f8, 255
  %v1_14900 = urem i32 %v1_148fc, 256
  store i32 %v1_14900, i32* %r3.global-to-local, align 4
  %v7_14904 = icmp eq i32 %v1_14900, 92
  store i1 %v7_14904, i1* %cpsr_z.global-to-local, align 1
  %v1_14908 = trunc i32 %v1_148fc to i8
  store i8 %v1_14908, i8* %v1_148f8, align 1
  %v0_1490c = load i32, i32* @r6, align 4
  %v1_1490c = add i32 %v0_1490c, -1
  store i32 %v1_1490c, i32* @r6, align 4
  %v0_14910 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14910, label %dec_label_pc_14914, label %dec_label_pc_149a0

dec_label_pc_14914:                               ; preds = %dec_label_pc_148f8
  %v1_14914 = add i32 %v0_1490c, -2
  store i32 %v1_14914, i32* @r6, align 4
  br label %dec_label_pc_1489c

dec_label_pc_1491c:                               ; preds = %dec_label_pc_148d4
  %v0_1491c = load i32, i32* @r5, align 4
  %v1_1491c = add i32 %v0_1491c, 20
  %v2_1491c = inttoptr i32 %v1_1491c to i32*
  %v3_1491c = load i32, i32* %v2_1491c, align 4
  store i32 %v3_1491c, i32* %r3.global-to-local, align 4
  %v2_14920 = icmp eq i32 %v3_1491c, 0
  store i1 %v2_14920, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14920, label %dec_label_pc_14958, label %dec_label_pc_14928

dec_label_pc_14928:                               ; preds = %dec_label_pc_1491c
  %v1_14928 = add i32 %v0_1491c, 16
  %v2_14928 = inttoptr i32 %v1_14928 to i32*
  %v3_14928 = load i32, i32* %v2_14928, align 4
  store i32 %v3_14928, i32* %r3.global-to-local, align 4
  %v1_1492c = add i32 %v0_1491c, 8
  %v2_1492c = inttoptr i32 %v1_1492c to i32*
  %v3_1492c = load i32, i32* %v2_1492c, align 4
  %v1_14930 = add i32 %v3_14928, 4096
  store i32 %v1_14930, i32* %r3.global-to-local, align 4
  %v2_14934 = add i32 %v3_1492c, %v1_14930
  store i32 %v1_14930, i32* %v2_14928, align 4
  %v0_1493c = load i32, i32* @r5, align 4
  %v1_1493c = add i32 %v0_1493c, 4
  %v2_1493c = inttoptr i32 %v1_1493c to i32*
  %v3_1493c = load i32, i32* %v2_1493c, align 4
  store i32 %v3_1493c, i32* %r0.global-to-local, align 4
  %v4_14940 = inttoptr i32 %v3_1493c to i32*
  %v5_14940 = call i32 @function_129cc(i32* %v4_14940, i32 %v2_14934, i32 %v2_148ac, i32 %v1_14930)
  store i32 %v5_14940, i32* %r0.global-to-local, align 4
  %v0_14944 = load i32, i32* @r5, align 4
  %v1_14944 = add i32 %v0_14944, 8
  %v2_14944 = inttoptr i32 %v1_14944 to i32*
  %v3_14944 = load i32, i32* %v2_14944, align 4
  %v2_14948 = add i32 %v3_14944, %v5_14940
  store i32 %v2_14948, i32* %r3.global-to-local, align 4
  %v2_1494c = add i32 %v0_14944, 12
  %v3_1494c = inttoptr i32 %v2_1494c to i32*
  store i32 %v2_14948, i32* %v3_1494c, align 4
  %v1_14950 = load i32, i32* @r5, align 4
  %v2_14950 = add i32 %v1_14950, 4
  %v3_14950 = inttoptr i32 %v2_14950 to i32*
  store i32 %v5_14940, i32* %v3_14950, align 4
  %v0_148a4.pre.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1489c

dec_label_pc_14958:                               ; preds = %dec_label_pc_1491c, %.dec_label_pc_14958_crit_edge
  %v0_14958 = phi i32 [ %v0_14958.pre, %.dec_label_pc_14958_crit_edge ], [ %v0_1491c, %dec_label_pc_1491c ]
  %v1_14958 = inttoptr i32 %v0_14958 to i32*
  %v2_14958 = load i32, i32* %v1_14958, align 4
  %v1_1495c = add i32 %v2_14958, 52
  %v2_1495c = inttoptr i32 %v1_1495c to i32*
  %v3_1495c = load i32, i32* %v2_1495c, align 4
  store i32 %v3_1495c, i32* %r3.global-to-local, align 4
  %v2_14960 = icmp eq i32 %v3_1495c, 0
  store i1 %v2_14960, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14960, label %dec_label_pc_1498c, label %dec_label_pc_14968

dec_label_pc_14968:                               ; preds = %dec_label_pc_14958
  %v1_14968 = add i32 %v2_14958, 16
  %v2_14968 = inttoptr i32 %v1_14968 to i32*
  %v3_14968 = load i32, i32* %v2_14968, align 4
  store i32 %v3_14968, i32* %r2.global-to-local, align 4
  %v1_1496c = add i32 %v2_14958, 24
  %v2_1496c = inttoptr i32 %v1_1496c to i32*
  %v3_1496c = load i32, i32* %v2_1496c, align 4
  store i32 %v3_1496c, i32* %r3.global-to-local, align 4
  %v3_14970 = icmp ult i32 %v3_14968, %v3_1496c
  %v9_14970 = icmp eq i32 %v3_14968, %v3_1496c
  store i1 %v9_14970, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_14970, label %dec_label_pc_14994thread-pre-split, label %dec_label_pc_14980

dec_label_pc_14980:                               ; preds = %dec_label_pc_14968
  store i32 %v2_14958, i32* %r0.global-to-local, align 4
  %v1_14984 = inttoptr i32 %v2_14958 to i16*
  %v2_14984 = call i32 @function_15720(i16* %v1_14984)
  store i32 %v2_14984, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14994

dec_label_pc_1498c:                               ; preds = %dec_label_pc_14958
  store i32 %v2_14958, i32* %r0.global-to-local, align 4
  %v1_14990 = call i32 @function_151f4(i32 %v2_14958)
  store i32 %v1_14990, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14994

dec_label_pc_14994thread-pre-split:               ; preds = %dec_label_pc_14968
  %v2_14974 = inttoptr i32 %v3_14968 to i8*
  %v3_14974 = load i8, i8* %v2_14974, align 1
  %v4_14974 = zext i8 %v3_14974 to i32
  store i32 %v4_14974, i32* %r0.global-to-local, align 4
  %v6_14974 = add i32 %v3_14968, 1
  store i32 %v6_14974, i32* %r2.global-to-local, align 4
  store i32 %v6_14974, i32* %v2_14968, align 4
  %v0_14994.pr = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14994

dec_label_pc_14994:                               ; preds = %dec_label_pc_14994thread-pre-split, %dec_label_pc_14980, %dec_label_pc_1498c
  %v1_14998 = phi i32 [ %v0_14994.pr, %dec_label_pc_14994thread-pre-split ], [ %v2_14984, %dec_label_pc_14980 ], [ %v1_14990, %dec_label_pc_1498c ]
  %v7_14994 = icmp eq i32 %v1_14998, 10
  store i1 %v7_14994, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_14994, label %dec_label_pc_149a0.loopexit, label %bb68

bb68:                                             ; preds = %dec_label_pc_14994
  %v8_14998 = icmp eq i32 %v1_14998, -1
  store i1 %v8_14998, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_14998, label %dec_label_pc_149a0.loopexit, label %.dec_label_pc_14958_crit_edge

.dec_label_pc_14958_crit_edge:                    ; preds = %bb68
  %v0_14958.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_14958

dec_label_pc_149a0.loopexit:                      ; preds = %bb68, %dec_label_pc_14994
  %v0_149a0.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_149a0

dec_label_pc_149a0:                               ; preds = %dec_label_pc_148f8, %dec_label_pc_149a0.loopexit
  %v0_149a0 = phi i32 [ %v0_149a0.pre, %dec_label_pc_149a0.loopexit ], [ %v1_1490c, %dec_label_pc_148f8 ]
  %v7_149a0 = icmp eq i32 %v0_149a0, -1
  store i1 %v7_149a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_149a0, label %dec_label_pc_14ae8, label %dec_label_pc_149a8

dec_label_pc_149a8:                               ; preds = %dec_label_pc_149a0
  %v0_149a8 = load i32, i32* @r5, align 4
  %v1_149a8 = add i32 %v0_149a8, 4
  %v2_149a8 = inttoptr i32 %v1_149a8 to i32*
  %v3_149a8 = load i32, i32* %v2_149a8, align 4
  store i32 %v3_149a8, i32* %r0.global-to-local, align 4
  store i32 %v3_147fc, i32* @r2, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  store i32 %v3_149a8, i32* %v2_149b4, align 4
  %v0_149b8 = load i32, i32* @fp, align 4
  %v2_149bc = inttoptr i32 %v3_149a8 to i8*
  %v3_149bc = call i32 @function_119c0(i8* %v2_149bc, i32 %v0_149b8)
  store i32 %v3_149bc, i32* %r0.global-to-local, align 4
  store i32 %v1_14810, i32* %r2.global-to-local, align 4
  store i1 %v2_149c4, i1* %cpsr_z.global-to-local, align 1
  %v0_149c8 = load i32, i32* @r5, align 4
  %v1_149c8 = add i32 %v0_149c8, 12
  %v2_149c8 = inttoptr i32 %v1_149c8 to i32*
  %v3_149c8 = load i32, i32* %v2_149c8, align 4
  store i32 %v3_149c8, i32* @r4, align 4
  br i1 %v2_149c4, label %dec_label_pc_149e0, label %dec_label_pc_149d0

dec_label_pc_149d0:                               ; preds = %dec_label_pc_149a8
  store i32 %v3_149c8, i32* @r0, align 4
  %v0_149d4 = load i32, i32* @sl, align 4
  %v2_149d8 = inttoptr i32 %v3_149c8 to i8*
  %v3_149d8 = call i32 @function_15e44(i8* %v2_149d8, i32 %v0_149d4)
  store i32 %v3_149d8, i32* %r0.global-to-local, align 4
  %v0_149dc = load i32, i32* @r4, align 4
  %v2_149dc = add i32 %v0_149dc, %v3_149d8
  store i32 %v2_149dc, i32* @r4, align 4
  br label %dec_label_pc_149e0

dec_label_pc_149e0:                               ; preds = %dec_label_pc_149a8, %dec_label_pc_149d0
  %v0_14ab813 = phi i32 [ %v3_149c8, %dec_label_pc_149a8 ], [ %v2_149dc, %dec_label_pc_149d0 ]
  %v1_149e0 = inttoptr i32 %v0_14ab813 to i8*
  %v2_149e0 = load i8, i8* %v1_149e0, align 1
  %v3_149e0 = zext i8 %v2_149e0 to i32
  store i32 %v3_149e0, i32* %r2.global-to-local, align 4
  %v2_149e4 = icmp eq i8 %v2_149e0, 0
  store i1 %v2_149e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_149e4, label %dec_label_pc_14838.backedge, label %dec_label_pc_149ec

dec_label_pc_14838.backedge:                      ; preds = %dec_label_pc_149e0, %dec_label_pc_14ae0, %dec_label_pc_149ec
  %v0_14838.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_14838

dec_label_pc_149ec:                               ; preds = %dec_label_pc_149e0
  %v0_149ec = load i32, i32* @r7, align 4
  %v1_149ec = inttoptr i32 %v0_149ec to i8*
  %v2_149ec = load i8, i8* %v1_149ec, align 1
  %v3_149ec = zext i8 %v2_149ec to i32
  store i32 %v3_149ec, i32* %r3.global-to-local, align 4
  %v9_149f0 = icmp eq i8 %v2_149ec, %v2_149e0
  store i1 %v9_149f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_149f0, label %dec_label_pc_14838.backedge, label %dec_label_pc_14ab8.preheader

dec_label_pc_14ab8.preheader:                     ; preds = %dec_label_pc_149ec
  %v1_149f4 = load i32, i32* @fp, align 4
  store i32 %v1_149f4, i32* @r6, align 4
  %v2_14ab815 = load i8, i8* %v1_149e0, align 1
  %v3_14ab816 = zext i8 %v2_14ab815 to i32
  store i32 %v3_14ab816, i32* %r2.global-to-local, align 4
  %v2_14abc17 = icmp eq i8 %v2_14ab815, 0
  store i1 %v2_14abc17, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14abc17, label %dec_label_pc_14ad4, label %dec_label_pc_14ac4.preheader

dec_label_pc_14ac4.preheader:                     ; preds = %dec_label_pc_14ab8.preheader
  %v2_14ac482 = load i8, i8* %v1_149ec, align 1
  %v3_14ac483 = zext i8 %v2_14ac482 to i32
  store i32 %v3_14ac483, i32* %r3.global-to-local, align 4
  %v9_14ac886 = icmp eq i8 %v2_14ac482, %v2_14ab815
  store i1 %v9_14ac886, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_14ac886, label %dec_label_pc_14ad4, label %bb74

dec_label_pc_14a00:                               ; preds = %bb74
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v2_14a04 = load i32, i32* %v2_149b4, align 4
  store i32 %v2_14a04, i32* %r3.global-to-local, align 4
  store i32 %v1_14814, i32* %r2.global-to-local, align 4
  %v9_14a0c = icmp eq i32 %v2_14a1088, %v1_14814
  store i1 %v9_14a0c, i1* %cpsr_z.global-to-local, align 1
  %v5_14a10 = mul i32 %v2_14a1088, 4
  %v6_14a10 = add i32 %v2_14a04, %v5_14a10
  %v7_14a10 = inttoptr i32 %v6_14a10 to i32*
  store i32 %v0_14a1087, i32* %v7_14a10, align 4
  br i1 %v9_14a0c, label %dec_label_pc_14a18, label %dec_label_pc_14a24

dec_label_pc_14a18:                               ; preds = %dec_label_pc_14a00
  store i32 %v1_14820, i32* %r3.global-to-local, align 4
  store i1 %v2_14a1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14a1c, label %dec_label_pc_14a24, label %dec_label_pc_14a44

dec_label_pc_14a24:                               ; preds = %dec_label_pc_14a18, %dec_label_pc_14a00
  %v0_14a24 = load i32, i32* @r7, align 4
  %v1_14a24 = inttoptr i32 %v0_14a24 to i8*
  %v2_14a24 = load i8, i8* %v1_14a24, align 1
  %v3_14a24 = zext i8 %v2_14a24 to i32
  store i32 %v3_14a24, i32* %r3.global-to-local, align 4
  %v2_14a28 = icmp eq i8 %v2_14a24, 0
  store i1 %v2_14a28, i1* %cpsr_z.global-to-local, align 1
  %v0_14a2c = load i32, i32* @r4, align 4
  store i32 %v0_14a2c, i32* @r0, align 4
  %v1_14a30 = load i32, i32* @sl, align 4
  %storemerge = select i1 %v2_14a28, i32 %v1_14a30, i32 %v0_14a24
  store i32 %storemerge, i32* @r1, align 4
  %v0_14a38 = call i32 @function_15e00()
  store i32 %v0_14a38, i32* %r0.global-to-local, align 4
  %v0_14a3c = load i32, i32* @r4, align 4
  %v2_14a3c = add i32 %v0_14a3c, %v0_14a38
  store i32 %v2_14a3c, i32* @r4, align 4
  br label %dec_label_pc_14a7c

dec_label_pc_14a44:                               ; preds = %dec_label_pc_14a18
  %v0_14a44 = load i32, i32* @r4, align 4
  store i32 %v0_14a44, i32* @r0, align 4
  %v0_14a48 = load i32, i32* @r7, align 4
  %v1_14a48 = inttoptr i32 %v0_14a48 to i8*
  %v2_14a48 = load i8, i8* %v1_14a48, align 1
  %v3_14a48 = zext i8 %v2_14a48 to i32
  %v5_14a4c = call i32 @function_15ee0(i32 %v0_14a44, i32 %v3_14a48, i32 %v1_14814, i32 %v1_14820)
  store i32 %v5_14a4c, i32* %r0.global-to-local, align 4
  store i32 %v1_14810, i32* %r2.global-to-local, align 4
  store i1 %v2_149c4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_14a4c, i32* @r4, align 4
  br i1 %v2_149c4, label %dec_label_pc_14a7c, label %dec_label_pc_14a68

dec_label_pc_14a64:                               ; preds = %dec_label_pc_14a68
  %v1_14a64 = add i32 %v0_14a7c.pre, -1
  store i32 %v1_14a64, i32* @r4, align 4
  br label %dec_label_pc_14a68

dec_label_pc_14a68:                               ; preds = %dec_label_pc_14a44, %dec_label_pc_14a64
  %v0_14a68 = phi i32 [ %v1_14a64, %dec_label_pc_14a64 ], [ %v5_14a4c, %dec_label_pc_14a44 ]
  %v1_14a68 = add i32 %v0_14a68, -1
  %v2_14a68 = inttoptr i32 %v1_14a68 to i8*
  %v3_14a68 = load i8, i8* %v2_14a68, align 1
  %v4_14a68 = zext i8 %v3_14a68 to i32
  %v0_14a6c = load i32, i32* @sl, align 4
  store i32 %v0_14a6c, i32* @r0, align 4
  %v2_14a70 = call i32 @function_15fcc(i32 %v0_14a6c, i32 %v4_14a68)
  store i32 %v2_14a70, i32* %r0.global-to-local, align 4
  %v2_14a74 = icmp eq i32 %v2_14a70, 0
  store i1 %v2_14a74, i1* %cpsr_z.global-to-local, align 1
  %v0_14a7c.pre = load i32, i32* @r4, align 4
  br i1 %v2_14a74, label %dec_label_pc_14a7c, label %dec_label_pc_14a64

dec_label_pc_14a7c:                               ; preds = %dec_label_pc_14a68, %dec_label_pc_14a44, %dec_label_pc_14a24
  %v3_14a88 = phi i32 [ %v5_14a4c, %dec_label_pc_14a44 ], [ %v2_14a3c, %dec_label_pc_14a24 ], [ %v0_14a7c.pre, %dec_label_pc_14a68 ]
  %v1_14a7c = inttoptr i32 %v3_14a88 to i8*
  %v2_14a7c = load i8, i8* %v1_14a7c, align 1
  %v3_14a7c = zext i8 %v2_14a7c to i32
  store i32 %v3_14a7c, i32* %r2.global-to-local, align 4
  %v0_14a80 = load i32, i32* @r7, align 4
  %v1_14a80 = inttoptr i32 %v0_14a80 to i8*
  %v2_14a80 = load i8, i8* %v1_14a80, align 1
  %v3_14a80 = zext i8 %v2_14a80 to i32
  store i32 %v3_14a80, i32* %r3.global-to-local, align 4
  %v9_14a84 = icmp eq i8 %v2_14a80, %v2_14a7c
  store i1 %v9_14a84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_14a84, label %bb71, label %dec_label_pc_14a90

bb71:                                             ; preds = %dec_label_pc_14a7c
  %v1_14a88 = load i32, i32* @fp, align 4
  %v2_14a88 = trunc i32 %v1_14a88 to i8
  store i8 %v2_14a88, i8* %v1_14a7c, align 1
  %v0_14a8c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14a8c.pr, label %bb73, label %.dec_label_pc_14a90_crit_edge

.dec_label_pc_14a90_crit_edge:                    ; preds = %bb71
  %v0_14a90.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14a90

dec_label_pc_14a90:                               ; preds = %.dec_label_pc_14a90_crit_edge, %dec_label_pc_14a7c
  %v0_14a90 = phi i32 [ %v0_14a90.pre, %.dec_label_pc_14a90_crit_edge ], [ %v3_14a7c, %dec_label_pc_14a7c ]
  %v2_14a90 = icmp eq i32 %v0_14a90, 0
  store i1 %v2_14a90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14a90, label %bb73, label %bb72

bb72:                                             ; preds = %dec_label_pc_14a90
  %v1_14a94 = load i32, i32* @fp, align 4
  %v2_14a94 = trunc i32 %v1_14a94 to i8
  %v3_14a94 = load i32, i32* @r4, align 4
  %v4_14a94 = inttoptr i32 %v3_14a94 to i8*
  store i8 %v2_14a94, i8* %v4_14a94, align 1
  %v5_14a94 = load i32, i32* @r4, align 4
  %v6_14a94 = add i32 %v5_14a94, 1
  store i32 %v6_14a94, i32* @r4, align 4
  br label %bb73

bb73:                                             ; preds = %bb71, %dec_label_pc_14a90, %bb72
  %v2_14a98 = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_14a98, i32* %r3.global-to-local, align 4
  %v2_14a9c = icmp eq i32 %v2_14a98, 0
  store i1 %v2_14a9c, i1* %cpsr_z.global-to-local, align 1
  %v0_14ab8.pre = load i32, i32* @r4, align 4
  br i1 %v2_14a9c, label %dec_label_pc_14ab4, label %dec_label_pc_14aa4

dec_label_pc_14aa4:                               ; preds = %bb73
  store i32 %v0_14ab8.pre, i32* @r0, align 4
  %v0_14aa8 = load i32, i32* @sl, align 4
  %v2_14aac = inttoptr i32 %v0_14ab8.pre to i8*
  %v3_14aac = call i32 @function_15e44(i8* %v2_14aac, i32 %v0_14aa8)
  store i32 %v3_14aac, i32* %r0.global-to-local, align 4
  %v0_14ab0 = load i32, i32* @r4, align 4
  %v2_14ab0 = add i32 %v0_14ab0, %v3_14aac
  store i32 %v2_14ab0, i32* @r4, align 4
  br label %dec_label_pc_14ab4

dec_label_pc_14ab4:                               ; preds = %bb73, %dec_label_pc_14aa4
  %v0_14ab8 = phi i32 [ %v2_14ab0, %dec_label_pc_14aa4 ], [ %v0_14ab8.pre, %bb73 ]
  %v0_14ab4 = load i32, i32* @r6, align 4
  %v1_14ab4 = add i32 %v0_14ab4, 1
  store i32 %v1_14ab4, i32* @r6, align 4
  %v1_14ab8 = inttoptr i32 %v0_14ab8 to i8*
  %v2_14ab8 = load i8, i8* %v1_14ab8, align 1
  %v3_14ab8 = zext i8 %v2_14ab8 to i32
  store i32 %v3_14ab8, i32* %r2.global-to-local, align 4
  %v2_14abc = icmp eq i8 %v2_14ab8, 0
  store i1 %v2_14abc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14abc, label %dec_label_pc_14ad4, label %dec_label_pc_14ab4.dec_label_pc_14ac4_crit_edge

dec_label_pc_14ab4.dec_label_pc_14ac4_crit_edge:  ; preds = %dec_label_pc_14ab4
  %v0_14ac4.pre = load i32, i32* @r7, align 4
  %v1_14ac4 = inttoptr i32 %v0_14ac4.pre to i8*
  %v2_14ac4 = load i8, i8* %v1_14ac4, align 1
  %v3_14ac4 = zext i8 %v2_14ac4 to i32
  store i32 %v3_14ac4, i32* %r3.global-to-local, align 4
  %v9_14ac8 = icmp eq i8 %v2_14ac4, %v2_14ab8
  store i1 %v9_14ac8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_14ac8, label %dec_label_pc_14ad4, label %bb74

bb74:                                             ; preds = %dec_label_pc_14ac4.preheader, %dec_label_pc_14ab4.dec_label_pc_14ac4_crit_edge
  %v2_14a1088 = phi i32 [ %v1_14ab4, %dec_label_pc_14ab4.dec_label_pc_14ac4_crit_edge ], [ %v1_149f4, %dec_label_pc_14ac4.preheader ]
  %v0_14a1087 = phi i32 [ %v0_14ab8, %dec_label_pc_14ab4.dec_label_pc_14ac4_crit_edge ], [ %v0_14ab813, %dec_label_pc_14ac4.preheader ]
  %v2_14acc = load i32, i32* @sb, align 4
  %v3_14acc = sub i32 %v2_14a1088, %v2_14acc
  %v5_14acc = xor i32 %v2_14acc, %v2_14a1088
  %v6_14acc = xor i32 %v3_14acc, %v2_14a1088
  %v7_14acc = and i32 %v6_14acc, %v5_14acc
  %v8_14acc = icmp slt i32 %v7_14acc, 0
  %v9_14acc = icmp slt i32 %v3_14acc, 0
  %v10_14acc = icmp eq i32 %v2_14a1088, %v2_14acc
  store i1 %v10_14acc, i1* %cpsr_z.global-to-local, align 1
  %v2_14ad0 = xor i1 %v9_14acc, %v8_14acc
  br i1 %v2_14ad0, label %dec_label_pc_14a00, label %dec_label_pc_14ad4

dec_label_pc_14ad4:                               ; preds = %dec_label_pc_14ac4.preheader, %bb74, %dec_label_pc_14ab4, %dec_label_pc_14ab4.dec_label_pc_14ac4_crit_edge, %dec_label_pc_14ab8.preheader
  %v0_14ad8 = phi i32 [ %v1_149f4, %dec_label_pc_14ab8.preheader ], [ %v1_149f4, %dec_label_pc_14ac4.preheader ], [ %v2_14a1088, %bb74 ], [ %v1_14ab4, %dec_label_pc_14ab4 ], [ %v1_14ab4, %dec_label_pc_14ab4.dec_label_pc_14ac4_crit_edge ]
  store i32 %v3_147f8, i32* %r2.global-to-local, align 4
  %v9_14ad8 = icmp eq i32 %v0_14ad8, %v3_147f8
  store i1 %v9_14ad8, i1* %cpsr_z.global-to-local, align 1
  %v6_14adc = icmp slt i32 %v0_14ad8, %v3_147f8
  br i1 %v6_14adc, label %dec_label_pc_14ae0, label %dec_label_pc_14aec

dec_label_pc_14ae0:                               ; preds = %dec_label_pc_14ad4
  %v0_14ae0 = load i32, i32* @r8, align 4
  %v1_14ae0 = and i32 %v0_14ae0, 1048576
  %v2_14ae0 = icmp eq i32 %v1_14ae0, 0
  store i1 %v2_14ae0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14ae0, label %dec_label_pc_14838.backedge, label %dec_label_pc_14ae8

dec_label_pc_14ae8:                               ; preds = %dec_label_pc_14ae0, %dec_label_pc_149a0, %.thread, %dec_label_pc_147d4
  br label %dec_label_pc_14aec

dec_label_pc_14aec:                               ; preds = %dec_label_pc_14ad4, %dec_label_pc_148bc, %dec_label_pc_14ae8
  %v0_14aec = phi i32 [ %v0_148cc, %dec_label_pc_148bc ], [ 0, %dec_label_pc_14ae8 ], [ %v0_14ad8, %dec_label_pc_14ad4 ]
  store i32 %v0_14aec, i32* %r0.global-to-local, align 4
  store i32 %v3_147d4, i32* @r4, align 4
  store i32 %v6_147d4, i32* @r5, align 4
  store i32 %v9_147d4, i32* @r6, align 4
  store i32 %v12_147d4, i32* @r7, align 4
  store i32 %v15_147d4, i32* @r8, align 4
  store i32 %v18_147d4, i32* @sb, align 4
  store i32 %v21_147d4, i32* @sl, align 4
  store i32 %v24_147d4, i32* @fp, align 4
  ret i32 %v0_14aec

; uselistorder directives
  uselistorder i32 %v0_14aec, { 1, 0 }
  uselistorder i32 %v0_14ad8, { 0, 2, 1 }
  uselistorder i32 %v3_14acc, { 1, 0 }
  uselistorder i32 %v2_14acc, { 1, 0, 2 }
  uselistorder i32 %v2_14a1088, { 0, 1, 6, 5, 2, 3, 4 }
  uselistorder i1 %v9_14ac8, { 1, 0 }
  uselistorder i32 %v0_14ab8.pre, { 0, 2, 1 }
  uselistorder i32 %v5_14a4c, { 1, 0, 2, 3 }
  uselistorder i1 %v9_14ac886, { 1, 0 }
  uselistorder i1 %v9_149f0, { 1, 0 }
  uselistorder i32 %v3_149c8, { 0, 2, 1, 3 }
  uselistorder i1 %v7_149a0, { 1, 0 }
  uselistorder i1 %v8_14998, { 1, 0 }
  uselistorder i32 %v3_14968, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_14958, { 3, 2, 0, 1, 4, 5, 6 }
  uselistorder i32 %v5_14940, { 1, 0, 2 }
  uselistorder i32 %v1_14930, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1491c, { 0, 2, 1, 3 }
  uselistorder i32 %v1_14914, { 1, 0 }
  uselistorder i32 %v1_14900, { 1, 0 }
  uselistorder i32 %v1_148fc, { 1, 0 }
  uselistorder i32 %v1_148bc, { 2, 0, 1 }
  uselistorder i32 %v0_148a4, { 1, 0 }
  uselistorder i32 %v1_14894, { 0, 2, 1 }
  uselistorder i1 %v2_149c4, { 1, 0, 2, 3 }
  uselistorder i32 %v1_14820, { 2, 0, 1, 3 }
  uselistorder i32 %v1_14814, { 2, 1, 0 }
  uselistorder i32 %v3_147fc, { 1, 0 }
  uselistorder i32 %v3_147f8, { 2, 1, 0 }
  uselistorder i32 %v1_147f0, { 2, 0, 1 }
  uselistorder i32* %r3.global-to-local, { 6, 1, 2, 3, 4, 5, 25, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 7, 2, 3, 4, 5, 6, 16, 8, 9, 10, 11, 12, 13, 14, 15, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 8, 7, 11, 12, 10, 9, 14, 13, 16, 15, 17, 18, 21, 19, 20, 25, 22, 23, 24, 27, 26, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 11, 12, 13, 2, 3, 4, 5, 6, 7, 8, 9, 10, 33, 32, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i32 1048576, { 1, 0, 2 }
  uselistorder i32 (i32*, i32, i32, i32)* @function_129cc, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 92, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 (i32)* @function_15d80, { 1, 0 }
  uselistorder i32 81, { 0, 2, 1 }
  uselistorder i32* @sl, { 4, 5, 6, 7, 8, 9, 10, 53, 0, 54, 55, 11, 12, 22, 23, 24, 25, 26, 27, 130, 131, 132, 1, 133, 134, 135, 136, 137, 138, 140, 2, 139, 142, 141, 143, 144, 145, 146, 28, 29, 30, 31, 32, 33, 34, 13, 14, 15, 16, 17, 18, 39, 40, 35, 36, 37, 38, 19, 20, 21, 41, 42, 43, 44, 45, 46, 49, 47, 48, 3, 50, 51, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 125, 126, 128, 129, 147, 150, 148, 149, 151, 152 }
  uselistorder i32 %arg3, { 3, 4, 2, 0, 1, 5, 6 }
  uselistorder label %dec_label_pc_14aec, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14ad4, { 1, 3, 2, 0, 4 }
  uselistorder label %bb74, { 1, 0 }
  uselistorder label %dec_label_pc_14ab4, { 1, 0 }
  uselistorder label %bb73, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14a68, { 1, 0 }
  uselistorder label %dec_label_pc_14838.backedge, { 1, 2, 0 }
  uselistorder label %dec_label_pc_149e0, { 1, 0 }
  uselistorder label %dec_label_pc_149a0, { 1, 0 }
  uselistorder label %dec_label_pc_14994, { 0, 2, 1 }
  uselistorder label %dec_label_pc_14958, { 1, 0 }
  uselistorder label %dec_label_pc_1488c, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb66, { 1, 0 }
}

define i32 @function_14afc(i32* %arg1) local_unnamed_addr {
dec_label_pc_14afc:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v2_14b00 = icmp eq i32* %arg1, null
  br i1 %v2_14b00, label %dec_label_pc_14b28, label %dec_label_pc_14b08

dec_label_pc_14b08:                               ; preds = %dec_label_pc_14afc
  %v2_14b08 = load i32, i32* %arg1, align 4
  %v1_14b0c = inttoptr i32 %v2_14b08 to i16*
  %v2_14b0c = call i32 @function_14b78(i16* %v1_14b0c)
  %v0_14b10 = load i32, i32* @r4, align 4
  %v1_14b10 = add i32 %v0_14b10, 20
  %v2_14b10 = inttoptr i32 %v1_14b10 to i32*
  %v3_14b10 = load i32, i32* %v2_14b10, align 4
  %v2_14b14 = icmp eq i32 %v3_14b10, 0
  br i1 %v2_14b14, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_14b08
  br label %bb6

bb6:                                              ; preds = %dec_label_pc_14b08, %bb
  store i32 84768, i32* @lr, align 4
  %v1_14b1c = xor i1 %v2_14b14, true
  call void @__pseudo_cond_branch(i1 %v1_14b1c, i32 ptrtoint (i32* @global_var_12fe4.107 to i32))
  %v0_14b20 = load i32, i32* @r4, align 4
  store i32 %v0_14b20, i32* @r0, align 4
  %v0_14b24 = call i32 @function_12fe4()
  br label %dec_label_pc_14b28

dec_label_pc_14b28:                               ; preds = %dec_label_pc_14afc, %bb6
  %v1_14b2c = phi i32 [ 0, %dec_label_pc_14afc ], [ %v0_14b24, %bb6 ]
  ret i32 %v1_14b2c

; uselistorder directives
  uselistorder i32* null, { 0, 4, 5, 1, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 2, 17, 18, 19, 20, 21, 7, 22, 23, 24, 25, 26, 3, 27, 28, 29 }
  uselistorder label %dec_label_pc_14b28, { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @function_14b30(i32 %arg1) local_unnamed_addr {
dec_label_pc_14b30:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14b3c = load i32, i32* @r4, align 4
  store i32 %v3_14b3c, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_16df8.874 to i32), i32* @r1, align 4
  %v0_14b44 = call i32 @function_14d2c()
  store i32 %v0_14b44, i32* %r0.global-to-local, align 4
  store i32 %v0_14b44, i32* @r4, align 4
  %v2_14b48 = icmp eq i32 %v0_14b44, 0
  br i1 %v2_14b48, label %bb, label %dec_label_pc_14b54

bb:                                               ; preds = %dec_label_pc_14b30
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb5

dec_label_pc_14b54:                               ; preds = %dec_label_pc_14b30
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_14b5c = call i32 @function_12898(i32 1, i32 24)
  store i32 %v2_14b5c, i32* %r0.global-to-local, align 4
  %v2_14b60 = icmp eq i32 %v2_14b5c, 0
  br i1 %v2_14b60, label %bb5, label %bb4

bb4:                                              ; preds = %dec_label_pc_14b54
  %v1_14b64 = load i32, i32* @r4, align 4
  %v3_14b64 = inttoptr i32 %v2_14b5c to i32*
  store i32 %v1_14b64, i32* %v3_14b64, align 4
  %v1_14b6c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %bb, %dec_label_pc_14b54, %bb4
  %v1_14b6c = phi i32 [ 0, %bb ], [ 0, %dec_label_pc_14b54 ], [ %v1_14b6c.pre, %bb4 ]
  %v2_14b68 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14b68, i32* @r4, align 4
  ret i32 %v1_14b6c

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 2, 3, 1, 0, 4 }
  uselistorder i32 (i32, i32)* @function_12898, { 29, 30, 31, 32, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 1, 0, 10, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder label %bb5, { 2, 1, 0 }
}

define i32 @function_14b78(i16* %arg1) local_unnamed_addr {
dec_label_pc_14b78:
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_14b78 = load i32, i32* @r4, align 4
  store i32 %v3_14b78, i32* %stack_var_-36, align 4
  %v6_14b78 = load i32, i32* @r5, align 4
  %v9_14b78 = load i32, i32* @r6, align 4
  %v12_14b78 = load i32, i32* @r7, align 4
  %v2_14b7c = add i32 %tmp, 52
  %v3_14b7c = inttoptr i32 %v2_14b7c to i32*
  %v4_14b7c = load i32, i32* %v3_14b7c, align 4
  %v1_14b84 = sub i32 1, %v4_14b7c
  %v2_14b84 = icmp ult i32 %v4_14b7c, 2
  br i1 %v2_14b84, label %bb18, label %bb

bb:                                               ; preds = %dec_label_pc_14b78
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_14b78, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_14b84, %dec_label_pc_14b78 ]
  %v0_14b8c = phi i32 [ 0, %bb ], [ %v1_14b84, %dec_label_pc_14b78 ]
  store i32 %storemerge, i32* %sb.global-to-local, align 4
  %v2_14b8c = icmp eq i32 %v0_14b8c, 0
  store i32 %tmp, i32* @r5, align 4
  store i32 127864, i32* @r6, align 4
  br i1 %v2_14b8c, label %dec_label_pc_14bd8, label %dec_label_pc_14ba0

dec_label_pc_14ba0:                               ; preds = %bb18
  %v4_14bb8 = load i32, i32* inttoptr (i32 127936 to i32*), align 64
  call void @__pseudo_branch(i32 %v4_14bb8)
  %v0_14bcc = load i32, i32* @r6, align 4
  %v2_14bcc = add i32 %v0_14bcc, 16
  %v3_14bcc = inttoptr i32 %v2_14bcc to i32*
  %v4_14bcc = load i32, i32* %v3_14bcc, align 4
  call void @__pseudo_branch(i32 %v4_14bcc)
  %v0_14bd8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_14bd8

dec_label_pc_14bd8:                               ; preds = %bb18, %dec_label_pc_14ba0
  %v1_14be0 = phi i32 [ %tmp, %bb18 ], [ %v0_14bd8.pre, %dec_label_pc_14ba0 ]
  %v1_14bd8 = inttoptr i32 %v1_14be0 to i16*
  %v2_14bd8 = load i16, i16* %v1_14bd8, align 2
  %v3_14bd8 = zext i16 %v2_14bd8 to i32
  %v1_14bdc = and i32 %v3_14bd8, 64
  %v2_14bdc = icmp eq i32 %v1_14bdc, 0
  br i1 %v2_14bdc, label %bb20, label %bb19

bb19:                                             ; preds = %dec_label_pc_14bd8
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_14bd8, %bb19
  %storemerge26 = phi i32 [ %v1_14be0, %bb19 ], [ %v1_14bdc, %dec_label_pc_14bd8 ]
  %v1_14be4 = xor i1 %v2_14bdc, true
  call void @__pseudo_cond_branch(i1 %v1_14be4, i32 ptrtoint (i32* @global_var_15514.879 to i32))
  store i32 %storemerge26, i32* %sl.global-to-local, align 4
  %v0_14bec = load i32, i32* @r5, align 4
  %v1_14bec = add i32 %v0_14bec, 4
  %v2_14bec = inttoptr i32 %v1_14bec to i32*
  %v3_14bec = load i32, i32* %v2_14bec, align 4
  %v1_14bf0 = call i32 @function_11548(i32 %v3_14bec)
  %v0_14bf8 = load i32, i32* @r6, align 4
  %v2_14c04 = add i32 %v0_14bf8, 108
  %v3_14c04 = inttoptr i32 %v2_14c04 to i32*
  %v4_14c04 = load i32, i32* %v3_14c04, align 4
  store i32 %v4_14c04, i32* @r7, align 4
  %v1_14c0c = load i32, i32* @r5, align 4
  %v2_14c0c = add i32 %v1_14c0c, 4
  %v3_14c0c = inttoptr i32 %v2_14c0c to i32*
  store i32 -1, i32* %v3_14c0c, align 4
  %v0_14c14 = load i32, i32* @r6, align 4
  %v2_14c14 = add i32 %v0_14c14, 72
  %v3_14c14 = inttoptr i32 %v2_14c14 to i32*
  %v4_14c14 = load i32, i32* %v3_14c14, align 4
  %v1_14c1c = icmp slt i32 %v1_14bf0, 0
  store i32 %v4_14c14, i32* %stack_var_-80, align 4
  br i1 %v1_14c1c, label %bb21, label %bb22

bb21:                                             ; preds = %bb20
  store i32 -1, i32* %sl.global-to-local, align 4
  br label %bb22

bb22:                                             ; preds = %bb20, %bb21
  call void @__pseudo_branch(i32 %v4_14c14)
  %v0_14c44 = load i32, i32* @r6, align 4
  %v2_14c44 = add i32 %v0_14c44, 16
  %v3_14c44 = inttoptr i32 %v2_14c44 to i32*
  %v4_14c44 = load i32, i32* %v3_14c44, align 4
  call void @__pseudo_branch(i32 %v4_14c44)
  %v0_14c54 = load i32, i32* @r6, align 4
  %v2_14c54 = add i32 %v0_14c54, 12
  %v3_14c54 = inttoptr i32 %v2_14c54 to i32*
  %v4_14c54 = load i32, i32* %v3_14c54, align 4
  %v1_14c58 = inttoptr i32 %v4_14c54 to i32*
  %v2_14c58 = load i32, i32* %v1_14c58, align 4
  %v1_14c60 = add i32 %v2_14c58, 1
  %v2_14c64 = add i32 %v0_14c54, 24
  %v3_14c64 = inttoptr i32 %v2_14c64 to i32*
  %v4_14c64 = load i32, i32* %v3_14c64, align 4
  store i32 %v4_14c64, i32* @r4, align 4
  store i32 %v1_14c60, i32* %v1_14c58, align 4
  call void @__pseudo_branch(i32 %v4_14c64)
  %v0_14c7c = load i32, i32* @r5, align 4
  %v1_14c7c = inttoptr i32 %v0_14c7c to i16*
  %v2_14c7c = load i16, i16* %v1_14c7c, align 2
  %v1_14c80 = and i16 %v2_14c7c, 24576
  %v1_14c84 = or i16 %v1_14c80, 48
  %v0_14c88 = load i32, i32* %sb.global-to-local, align 4
  %v2_14c88 = icmp eq i32 %v0_14c88, 0
  store i16 %v1_14c84, i16* %v1_14c7c, align 2
  br i1 %v2_14c88, label %.thread, label %bb23

bb23:                                             ; preds = %bb22
  br label %.thread

.thread:                                          ; preds = %bb22, %bb23
  %v2_14c9c = xor i1 %v2_14c88, true
  call void @__pseudo_cond_branch(i1 %v2_14c9c, i32 %v4_14c64)
  %v0_14ca0 = load i32, i32* @r5, align 4
  %v1_14ca0 = inttoptr i32 %v0_14ca0 to i16*
  %v2_14ca0 = load i16, i16* %v1_14ca0, align 2
  %v1_14ca4 = and i16 %v2_14ca0, 16384
  %v2_14ca4 = icmp eq i16 %v1_14ca4, 0
  br i1 %v2_14ca4, label %bb25, label %bb24

bb24:                                             ; preds = %.thread
  br label %bb25

bb25:                                             ; preds = %.thread, %bb24
  %v1_14cac = xor i1 %v2_14ca4, true
  call void @__pseudo_cond_branch(i1 %v1_14cac, i32 ptrtoint (i32* @global_var_12fe4.107 to i32))
  %v2_14cb8 = load i32, i32* %stack_var_-80, align 4
  call void @__pseudo_branch(i32 %v2_14cb8)
  call void @__pseudo_branch(i32 %v4_14c44)
  %v0_14cd8 = load i32, i32* @r6, align 4
  %v2_14cd8 = add i32 %v0_14cd8, 48
  %v3_14cd8 = inttoptr i32 %v2_14cd8 to i32*
  %v4_14cd8 = load i32, i32* %v3_14cd8, align 4
  %v1_14cdc = inttoptr i32 %v4_14cd8 to i32*
  %v2_14cdc = load i32, i32* %v1_14cdc, align 4
  %v1_14ce0 = add i32 %v2_14cdc, 1
  store i32 %v1_14ce0, i32* %v1_14cdc, align 4
  call void @__pseudo_branch(i32 %v4_14c64)
  %v0_14cf8 = call i32 @function_1538c()
  %v0_14cfc = load i32, i32* %sl.global-to-local, align 4
  %v2_14d04 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_14d04, i32* @r4, align 4
  store i32 %v6_14b78, i32* @r5, align 4
  store i32 %v9_14b78, i32* @r6, align 4
  store i32 %v12_14b78, i32* @r7, align 4
  ret i32 %v0_14cfc

; uselistorder directives
  uselistorder i1 %v2_14ca4, { 1, 0 }
  uselistorder i32 %v4_14c64, { 0, 2, 1, 3 }
  uselistorder i32 %v4_14b7c, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %sb.global-to-local, { 1, 0 }
  uselistorder i32 (i32)* @function_11548, { 10, 24, 29, 28, 23, 27, 26, 22, 21, 20, 25, 19, 18, 17, 16, 15, 14, 13, 12, 11, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %bb25, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %dec_label_pc_14bd8, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
}

define i32 @function_14d10(i32 %arg1) local_unnamed_addr {
dec_label_pc_14d10:
  %v0_14d10 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14d10, label %bb, label %.thread5

bb:                                               ; preds = %dec_label_pc_14d10
  br label %.thread5

.thread5:                                         ; preds = %dec_label_pc_14d10, %bb
  %v10_14d28 = phi i32 [ %arg1, %dec_label_pc_14d10 ], [ 0, %bb ]
  ret i32 %v10_14d28

; uselistorder directives
  uselistorder label %.thread5, { 1, 0 }
}

define i32 @function_14d2c() local_unnamed_addr {
dec_label_pc_14d2c:
  store i32 0, i32* @r2, align 4
  store i32 -1, i32* @r3, align 4
  %v0_14d3c = call i32 @function_14d4c()
  ret i32 %v0_14d3c
}

define i32 @function_14d4c() local_unnamed_addr {
dec_label_pc_14d4c:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_14d4c = load i32, i32* @r4, align 4
  store i32 %v3_14d4c, i32* %stack_var_-36, align 4
  %v6_14d4c = load i32, i32* @r5, align 4
  %v9_14d4c = load i32, i32* @r6, align 4
  %v18_14d4c = load i32, i32* @sb, align 4
  %v24_14d4c = load i32, i32* @fp, align 4
  %v0_14d50 = load i32, i32* @r1, align 4
  %v1_14d50 = inttoptr i32 %v0_14d50 to i8*
  %v2_14d50 = load i8, i8* %v1_14d50, align 1
  %v3_14d50 = zext i8 %v2_14d50 to i32
  store i32 %v3_14d50, i32* @ip, align 4
  %v7_14d58 = icmp eq i8 %v2_14d50, 114
  store i32 127864, i32* @fp, align 4
  %v2_14d60 = ptrtoint i32* %stack_var_-72 to i32
  %v0_14d64 = load i32, i32* @r0, align 4
  store i32 %v0_14d64, i32* @r6, align 4
  %v0_14d68 = load i32, i32* @r2, align 4
  store i32 %v0_14d68, i32* @sb, align 4
  %v0_14d6c = load i32, i32* @r3, align 4
  store i32 %v0_14d6c, i32* @r5, align 4
  br i1 %v7_14d58, label %dec_label_pc_14db8, label %dec_label_pc_14d74

dec_label_pc_14d74:                               ; preds = %dec_label_pc_14d4c
  %v7_14d74 = icmp eq i8 %v2_14d50, 119
  br i1 %v7_14d74, label %bb, label %dec_label_pc_14d80

bb:                                               ; preds = %dec_label_pc_14d74
  store i32 577, i32* @r4, align 4
  br label %dec_label_pc_14dbc

dec_label_pc_14d80:                               ; preds = %dec_label_pc_14d74
  %v7_14d80 = icmp eq i8 %v2_14d50, 97
  br i1 %v7_14d80, label %bb32, label %dec_label_pc_14d8c

bb32:                                             ; preds = %dec_label_pc_14d80
  store i32 1089, i32* @r4, align 4
  br label %dec_label_pc_14dbc

dec_label_pc_14d8c:                               ; preds = %dec_label_pc_14d80, %dec_label_pc_14e40, %dec_label_pc_14e14
  %v0_14d8c = call i32 @function_11970()
  store i32 %v0_14d8c, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v0_14d94 = load i32, i32* @sb, align 4
  %v2_14d94 = icmp eq i32 %v0_14d94, 0
  %v2_14d98 = inttoptr i32 %v0_14d8c to i32*
  store i32 22, i32* %v2_14d98, align 4
  br i1 %v2_14d94, label %dec_label_pc_1500c, label %dec_label_pc_14da0

dec_label_pc_14da0:                               ; preds = %dec_label_pc_14e64._crit_edge, %dec_label_pc_14d8c
  %v0_14da0 = load i32, i32* @sb, align 4
  %v1_14da0 = inttoptr i32 %v0_14da0 to i16*
  %v2_14da0 = load i16, i16* %v1_14da0, align 2
  %v3_14da0 = zext i16 %v2_14da0 to i32
  store i32 %v3_14da0, i32* %r3.global-to-local, align 4
  %v1_14da4 = and i32 %v3_14da0, 8192
  %v2_14da4 = icmp eq i32 %v1_14da4, 0
  br i1 %v2_14da4, label %dec_label_pc_1500c, label %dec_label_pc_14dac

dec_label_pc_14dac:                               ; preds = %dec_label_pc_14da0
  store i32 %v0_14da0, i32* @r0, align 4
  %v0_14db0 = call i32 @function_12fe4()
  store i32 %v0_14db0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1500c

dec_label_pc_14db8:                               ; preds = %dec_label_pc_14d4c
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_14dbc

dec_label_pc_14dbc:                               ; preds = %bb, %bb32, %dec_label_pc_14db8
  %v1_14dd4 = phi i32 [ 1089, %bb32 ], [ 577, %bb ], [ 1, %dec_label_pc_14db8 ]
  %v1_14dbc = add i32 %v0_14d50, 1
  %v2_14dbc = inttoptr i32 %v1_14dbc to i8*
  %v3_14dbc = load i8, i8* %v2_14dbc, align 1
  %v7_14dc0 = icmp eq i8 %v3_14dbc, 98
  %v1_14dbc.v0_14d50 = select i1 %v7_14dc0, i32 %v1_14dbc, i32 %v0_14d50
  store i32 %v1_14dbc.v0_14d50, i32* %r3.global-to-local, align 4
  %v1_14dcc = add i32 %v1_14dbc.v0_14d50, 1
  %v2_14dcc = inttoptr i32 %v1_14dcc to i8*
  %v3_14dcc = load i8, i8* %v2_14dcc, align 1
  %v4_14dcc = zext i8 %v3_14dcc to i32
  store i32 %v4_14dcc, i32* @r3, align 4
  %v7_14dd0 = icmp eq i8 %v3_14dcc, 43
  br i1 %v7_14dd0, label %bb35, label %.thread3

bb35:                                             ; preds = %dec_label_pc_14dbc
  store i32 %v1_14dd4, i32* @r3, align 4
  %v2_14dd8 = add nuw nsw i32 %v1_14dd4, 1
  store i32 %v2_14dd8, i32* @r4, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_14dbc, %bb35
  %v2_14ddc = icmp eq i32 %v0_14d68, 0
  br i1 %v2_14ddc, label %dec_label_pc_14de4, label %dec_label_pc_14e0c

dec_label_pc_14de4:                               ; preds = %.thread3
  store i32 80, i32* @r0, align 4
  %v0_14de8 = call i32 @function_11f78()
  store i32 %v0_14de8, i32* %r0.global-to-local, align 4
  store i32 %v0_14de8, i32* @sb, align 4
  %v3_14dec = icmp eq i32 %v0_14de8, 0
  br i1 %v3_14dec, label %dec_label_pc_15010, label %dec_label_pc_14df4

dec_label_pc_14df4:                               ; preds = %dec_label_pc_14de4
  %v2_14df8 = add i32 %v0_14de8, 8
  %v3_14df8 = inttoptr i32 %v2_14df8 to i32*
  store i32 0, i32* %v3_14df8, align 4
  store i32 8192, i32* %r3.global-to-local, align 4
  %v2_14e00 = load i32, i32* @sb, align 4
  %v3_14e00 = inttoptr i32 %v2_14e00 to i16*
  store i16 8192, i16* %v3_14e00, align 2
  %v0_14e04 = load i32, i32* @sb, align 4
  %v1_14e04 = add i32 %v0_14e04, 56
  store i32 %v1_14e04, i32* @r0, align 4
  %v1_14e08 = call i32 @function_150bc(i32 %v1_14e04)
  store i32 %v1_14e08, i32* %r0.global-to-local, align 4
  %v0_14e0c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_14e0c

dec_label_pc_14e0c:                               ; preds = %.thread3, %dec_label_pc_14df4
  %v0_14e64 = phi i32 [ %v0_14d6c, %.thread3 ], [ %v0_14e0c.pre, %dec_label_pc_14df4 ]
  %v1_14e0c = icmp slt i32 %v0_14e64, 0
  br i1 %v1_14e0c, label %dec_label_pc_14e64, label %dec_label_pc_14e14

dec_label_pc_14e14:                               ; preds = %dec_label_pc_14e0c
  %v0_14e18 = load i32, i32* @r4, align 4
  %v2_14e18 = and i32 %v0_14e18, ptrtoint (i32* @global_var_20003.888 to i32)
  %v1_14e1c = or i32 %v2_14e18, 1
  store i32 %v1_14e1c, i32* %r2.global-to-local, align 4
  %v0_14e20 = load i32, i32* @r6, align 4
  %v1_14e20 = add i32 %v0_14e20, 1
  %v2_14e24 = and i32 %v1_14e20, %v1_14e1c
  store i32 %v2_14e24, i32* %r3.global-to-local, align 4
  %v9_14e28 = icmp eq i32 %v2_14e24, %v1_14e1c
  %v1_14e2c = load i32, i32* @sb, align 4
  %v2_14e2c = add i32 %v1_14e2c, 4
  %v3_14e2c = inttoptr i32 %v2_14e2c to i32*
  store i32 %v0_14e64, i32* %v3_14e2c, align 4
  br i1 %v9_14e28, label %dec_label_pc_14e34, label %dec_label_pc_14d8c

dec_label_pc_14e34:                               ; preds = %dec_label_pc_14e14
  %v0_14e34 = load i32, i32* @r4, align 4
  %v1_14e34 = load i32, i32* @r6, align 4
  %v2_14e34 = sub i32 -1, %v1_14e34
  %v3_14e34 = and i32 %v0_14e34, %v2_14e34
  store i32 %v3_14e34, i32* @r3, align 4
  %v1_14e38 = and i32 %v3_14e34, 1024
  %v2_14e38 = icmp eq i32 %v1_14e38, 0
  br i1 %v2_14e38, label %dec_label_pc_14e58, label %dec_label_pc_14e40

dec_label_pc_14e40:                               ; preds = %dec_label_pc_14e34
  %v0_14e40 = load i32, i32* @r5, align 4
  store i32 %v0_14e40, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1024, i32* %r2.global-to-local, align 4
  %v2_14e4c = call i32 @function_1137c(i32 %v0_14e40, i32 4)
  store i32 %v2_14e4c, i32* %r0.global-to-local, align 4
  %v2_14e50 = icmp eq i32 %v2_14e4c, 0
  br i1 %v2_14e50, label %dec_label_pc_14e40.dec_label_pc_14e58_crit_edge, label %dec_label_pc_14d8c

dec_label_pc_14e40.dec_label_pc_14e58_crit_edge:  ; preds = %dec_label_pc_14e40
  %v0_14e58.pre = load i32, i32* @r6, align 4
  %v0_14e5c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_14e58

dec_label_pc_14e58:                               ; preds = %dec_label_pc_14e40.dec_label_pc_14e58_crit_edge, %dec_label_pc_14e34
  %v0_14e5c = phi i32 [ %v0_14e5c.pre, %dec_label_pc_14e40.dec_label_pc_14e58_crit_edge ], [ %v0_14e34, %dec_label_pc_14e34 ]
  %v0_14e58 = phi i32 [ %v0_14e58.pre, %dec_label_pc_14e40.dec_label_pc_14e58_crit_edge ], [ %v1_14e34, %dec_label_pc_14e34 ]
  %v1_14e58 = and i32 %v0_14e58, 131072
  store i32 %v1_14e58, i32* %r3.global-to-local, align 4
  %v2_14e5c = or i32 %v1_14e58, %v0_14e5c
  store i32 %v2_14e5c, i32* @r4, align 4
  br label %dec_label_pc_14e88

dec_label_pc_14e64:                               ; preds = %dec_label_pc_14e0c
  %v7_14e64 = icmp eq i32 %v0_14e64, -1
  %v0_14e70.pre = load i32, i32* @r4, align 4
  br i1 %v7_14e64, label %dec_label_pc_14e64._crit_edge, label %bb36

bb36:                                             ; preds = %dec_label_pc_14e64
  %v2_14e68 = or i32 %v0_14e70.pre, ptrtoint (i32* @global_var_20000.889 to i32)
  store i32 %v2_14e68, i32* @r4, align 4
  br label %dec_label_pc_14e64._crit_edge

dec_label_pc_14e64._crit_edge:                    ; preds = %dec_label_pc_14e64, %bb36
  %v0_14e70 = phi i32 [ %v2_14e68, %bb36 ], [ %v0_14e70.pre, %dec_label_pc_14e64 ]
  %v0_14e6c = load i32, i32* @r6, align 4
  store i32 %v0_14e6c, i32* %r0.global-to-local, align 4
  store i32 %v0_14e70, i32* %r1.global-to-local, align 4
  store i32 438, i32* @r2, align 4
  %v2_14e78 = call i32 @function_11154(i32 %v0_14e6c, i32 %v0_14e70)
  store i32 %v2_14e78, i32* %r0.global-to-local, align 4
  %v1_14e7c = icmp slt i32 %v2_14e78, 0
  %v1_14e80 = load i32, i32* @sb, align 4
  %v2_14e80 = add i32 %v1_14e80, 4
  %v3_14e80 = inttoptr i32 %v2_14e80 to i32*
  store i32 %v2_14e78, i32* %v3_14e80, align 4
  br i1 %v1_14e7c, label %dec_label_pc_14da0, label %.dec_label_pc_14e88_crit_edge

.dec_label_pc_14e88_crit_edge:                    ; preds = %dec_label_pc_14e64._crit_edge
  %v0_14e8c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_14e88

dec_label_pc_14e88:                               ; preds = %.dec_label_pc_14e88_crit_edge, %dec_label_pc_14e58
  %v0_14ea4 = phi i32 [ %v0_14e8c.pre, %.dec_label_pc_14e88_crit_edge ], [ %v2_14e5c, %dec_label_pc_14e58 ]
  %v0_14e88 = load i32, i32* @sb, align 4
  %v1_14e88 = inttoptr i32 %v0_14e88 to i16*
  %v2_14e88 = load i16, i16* %v1_14e88, align 2
  %v3_14e88 = zext i16 %v2_14e88 to i32
  %v1_14e8c = urem i32 %v0_14ea4, 4
  %v1_14e90 = and i32 %v0_14ea4, 1024
  %v1_14e94 = and i32 %v3_14e88, 8192
  %v1_14e98 = add nuw nsw i32 %v1_14e8c, 1
  %v2_14e9c = or i32 %v1_14e94, %v1_14e90
  store i32 %v2_14e9c, i32* %r3.global-to-local, align 4
  %v1_14ea0 = xor i32 %v1_14e98, 3
  store i32 %v1_14ea0, i32* %r1.global-to-local, align 4
  %v1_14ea4 = and i32 %v0_14ea4, ptrtoint (i32* @global_var_20000.889 to i32)
  store i32 %v1_14ea4, i32* %r2.global-to-local, align 4
  %v2_14ea4 = icmp eq i32 %v1_14ea4, 0
  %v1_14ea8 = add i32 %v0_14e88, 4
  %v2_14ea8 = inttoptr i32 %v1_14ea8 to i32*
  %v3_14ea8 = load i32, i32* %v2_14ea8, align 4
  store i32 %v3_14ea8, i32* @r5, align 4
  br i1 %v2_14ea4, label %bb38, label %bb37

bb37:                                             ; preds = %dec_label_pc_14e88
  store i32 32768, i32* %r2.global-to-local, align 4
  br label %bb38

bb38:                                             ; preds = %dec_label_pc_14e88, %bb37
  %v0_14eb4 = phi i32 [ 0, %dec_label_pc_14e88 ], [ 32768, %bb37 ]
  %v4_14eb0 = mul nuw nsw i32 %v1_14ea0, 16
  %v5_14eb0 = or i32 %v2_14e9c, %v4_14eb0
  store i32 %v5_14eb0, i32* %r3.global-to-local, align 4
  %v2_14eb4 = or i32 %v0_14eb4, %v5_14eb0
  store i32 %v2_14eb4, i32* %r2.global-to-local, align 4
  %v8_14eb8 = icmp eq i32 %v3_14ea8, 2147483647
  %v1_14ebc = trunc i32 %v2_14eb4 to i16
  store i16 %v1_14ebc, i16* %v1_14e88, align 2
  br i1 %v8_14eb8, label %dec_label_pc_14eec, label %dec_label_pc_14ec4

dec_label_pc_14ec4:                               ; preds = %bb38
  %v0_14ec4 = call i32 @function_11970()
  store i32 %v0_14ec4, i32* @r4, align 4
  %v0_14ecc = load i32, i32* @r5, align 4
  store i32 %v0_14ecc, i32* @r0, align 4
  %v1_14ed0 = inttoptr i32 %v0_14ec4 to i32*
  %v2_14ed0 = load i32, i32* %v1_14ed0, align 4
  store i32 %v2_14ed0, i32* @r5, align 4
  %v1_14ed4 = call i32 @function_160bc(i32 %v0_14ecc)
  store i32 %v1_14ed4, i32* %r0.global-to-local, align 4
  %v2_14ed8 = icmp eq i32 %v1_14ed4, 0
  br i1 %v2_14ed8, label %.thread5, label %bb39

bb39:                                             ; preds = %dec_label_pc_14ec4
  %v1_14edc = load i32, i32* @sb, align 4
  %v2_14edc = inttoptr i32 %v1_14edc to i16*
  %v3_14edc = load i16, i16* %v2_14edc, align 2
  %v4_14edc = zext i16 %v3_14edc to i32
  %v2_14ee0 = or i32 %v4_14edc, 256
  store i32 %v2_14ee0, i32* %r3.global-to-local, align 4
  %v2_14ee4 = trunc i32 %v2_14ee0 to i16
  store i16 %v2_14ee4, i16* %v2_14edc, align 2
  br label %.thread5

.thread5:                                         ; preds = %dec_label_pc_14ec4, %bb39
  %v0_14ee8 = load i32, i32* @r5, align 4
  %v1_14ee8 = load i32, i32* @r4, align 4
  %v2_14ee8 = inttoptr i32 %v1_14ee8 to i32*
  store i32 %v0_14ee8, i32* %v2_14ee8, align 4
  br label %dec_label_pc_14eec

dec_label_pc_14eec:                               ; preds = %bb38, %.thread5
  %v0_14eec = load i32, i32* @sb, align 4
  %v1_14eec = add i32 %v0_14eec, 8
  %v2_14eec = inttoptr i32 %v1_14eec to i32*
  %v3_14eec = load i32, i32* %v2_14eec, align 4
  store i32 %v3_14eec, i32* %r3.global-to-local, align 4
  %v2_14ef0 = icmp eq i32 %v3_14eec, 0
  br i1 %v2_14ef0, label %dec_label_pc_14ef8, label %bb40

dec_label_pc_14ef8:                               ; preds = %dec_label_pc_14eec
  store i32 4096, i32* @r0, align 4
  %v0_14efc = call i32 @function_11f78()
  store i32 %v0_14efc, i32* %r0.global-to-local, align 4
  %v2_14f00 = icmp eq i32 %v0_14efc, 0
  %v1_14f10.pre = load i32, i32* @sb, align 4
  br i1 %v2_14f00, label %.thread9, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_14ef8
  %v2_14f04 = inttoptr i32 %v1_14f10.pre to i16*
  %v3_14f04 = load i16, i16* %v2_14f04, align 2
  %v4_14f04 = zext i16 %v3_14f04 to i32
  %v2_14f08 = add i32 %v0_14efc, 4096
  store i32 %v2_14f08, i32* %r2.global-to-local, align 4
  %v2_14f0c = or i32 %v4_14f04, 16384
  store i32 %v2_14f0c, i32* %r3.global-to-local, align 4
  %v2_14f10 = add i32 %v1_14f10.pre, 8
  %v3_14f10 = inttoptr i32 %v2_14f10 to i32*
  store i32 %v0_14efc, i32* %v3_14f10, align 4
  %v1_14f14 = load i32, i32* %r2.global-to-local, align 4
  %v2_14f14 = load i32, i32* @sb, align 4
  %v3_14f14 = add i32 %v2_14f14, 12
  %v4_14f14 = inttoptr i32 %v3_14f14 to i32*
  store i32 %v1_14f14, i32* %v4_14f14, align 4
  %v1_14f18 = load i32, i32* %r3.global-to-local, align 4
  %v2_14f18 = trunc i32 %v1_14f18 to i16
  %v3_14f18 = load i32, i32* @sb, align 4
  %v4_14f18 = inttoptr i32 %v3_14f18 to i16*
  store i16 %v2_14f18, i16* %v4_14f18, align 2
  br label %bb40

.thread9:                                         ; preds = %dec_label_pc_14ef8
  %v2_14f1019 = add i32 %v1_14f10.pre, 8
  %v3_14f1020 = inttoptr i32 %v2_14f1019 to i32*
  store i32 0, i32* %v3_14f1020, align 4
  %v2_14f1c = load i32, i32* @sb, align 4
  %v3_14f1c = add i32 %v2_14f1c, 12
  %v4_14f1c = inttoptr i32 %v3_14f1c to i32*
  store i32 0, i32* %v4_14f1c, align 4
  br label %bb40

bb40:                                             ; preds = %.thread8, %dec_label_pc_14eec, %.thread9
  store i32 56, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_14f28 = load i32, i32* @fp, align 4
  %v2_14f28 = add i32 %v0_14f28, 56
  %v3_14f28 = inttoptr i32 %v2_14f28 to i32*
  %v4_14f28 = load i32, i32* %v3_14f28, align 4
  store i32 %v4_14f28, i32* %r3.global-to-local, align 4
  %v2_14f2c = load i32, i32* @sb, align 4
  %v3_14f2c = add i32 %v2_14f2c, 2
  %v4_14f2c = inttoptr i32 %v3_14f2c to i8*
  store i8 0, i8* %v4_14f2c, align 1
  %v0_14f30 = load i32, i32* @sb, align 4
  %v1_14f30 = inttoptr i32 %v0_14f30 to i16*
  %v2_14f30 = load i16, i16* %v1_14f30, align 2
  %v3_14f30 = zext i16 %v2_14f30 to i32
  store i32 %v3_14f30, i32* %r2.global-to-local, align 4
  %v0_14f34 = load i32, i32* %r3.global-to-local, align 4
  %v1_14f34 = inttoptr i32 %v0_14f34 to i32*
  %v2_14f34 = load i32, i32* %v1_14f34, align 4
  store i32 %v2_14f34, i32* %r1.global-to-local, align 4
  %v1_14f38 = add i32 %v0_14f30, 8
  %v2_14f38 = inttoptr i32 %v1_14f38 to i32*
  %v3_14f38 = load i32, i32* %v2_14f38, align 4
  store i32 %v3_14f38, i32* %r3.global-to-local, align 4
  %v1_14f3c = and i32 %v3_14f30, 8192
  %v2_14f3c = icmp eq i32 %v1_14f3c, 0
  %v2_14f40 = add i32 %v0_14f30, 20
  %v3_14f40 = inttoptr i32 %v2_14f40 to i32*
  store i32 %v3_14f38, i32* %v3_14f40, align 4
  %v0_14f44 = load i32, i32* %r0.global-to-local, align 4
  %v1_14f44 = load i32, i32* @sb, align 4
  %v2_14f44 = add i32 %v1_14f44, 44
  %v3_14f44 = inttoptr i32 %v2_14f44 to i32*
  store i32 %v0_14f44, i32* %v3_14f44, align 4
  %v0_14f48 = load i32, i32* %r1.global-to-local, align 4
  %v1_14f48 = load i32, i32* @sb, align 4
  %v2_14f48 = add i32 %v1_14f48, 52
  %v3_14f48 = inttoptr i32 %v2_14f48 to i32*
  store i32 %v0_14f48, i32* %v3_14f48, align 4
  %v0_14f4c = load i32, i32* %r3.global-to-local, align 4
  %v1_14f4c = load i32, i32* @sb, align 4
  %v2_14f4c = add i32 %v1_14f4c, 24
  %v3_14f4c = inttoptr i32 %v2_14f4c to i32*
  store i32 %v0_14f4c, i32* %v3_14f4c, align 4
  %v0_14f50 = load i32, i32* %r3.global-to-local, align 4
  %v1_14f50 = load i32, i32* @sb, align 4
  %v2_14f50 = add i32 %v1_14f50, 28
  %v3_14f50 = inttoptr i32 %v2_14f50 to i32*
  store i32 %v0_14f50, i32* %v3_14f50, align 4
  %v0_14f54 = load i32, i32* %r3.global-to-local, align 4
  %v1_14f54 = load i32, i32* @sb, align 4
  %v2_14f54 = add i32 %v1_14f54, 16
  %v3_14f54 = inttoptr i32 %v2_14f54 to i32*
  store i32 %v0_14f54, i32* %v3_14f54, align 4
  br i1 %v2_14f3c, label %dec_label_pc_15010, label %dec_label_pc_14f5c

dec_label_pc_14f5c:                               ; preds = %bb40
  store i32 36, i32* %r3.global-to-local, align 4
  %v0_14f60 = load i32, i32* @fp, align 4
  %v2_14f60 = add i32 %v0_14f60, 36
  %v3_14f60 = inttoptr i32 %v2_14f60 to i32*
  %v4_14f60 = load i32, i32* %v3_14f60, align 4
  store i32 %v4_14f60, i32* %r8.global-to-local, align 4
  store i32 108, i32* %r3.global-to-local, align 4
  %v2_14f68 = add i32 %v0_14f60, 108
  %v3_14f68 = inttoptr i32 %v2_14f68 to i32*
  %v4_14f68 = load i32, i32* %v3_14f68, align 4
  store i32 %v4_14f68, i32* %r4.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v2_14f70 = ptrtoint i32* %stack_var_-56 to i32
  %v2_14f74 = add i32 %v0_14f60, 72
  %v3_14f74 = inttoptr i32 %v2_14f74 to i32*
  %v4_14f74 = load i32, i32* %v3_14f74, align 4
  store i32 %v4_14f60, i32* %r1.global-to-local, align 4
  store i32 %v4_14f68, i32* %r2.global-to-local, align 4
  store i32 %v2_14f70, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_14f74)
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_14f90 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_14f90, i32* %r0.global-to-local, align 4
  %v0_14f94 = load i32, i32* @fp, align 4
  %v2_14f94 = add i32 %v0_14f94, 16
  %v3_14f94 = inttoptr i32 %v2_14f94 to i32*
  %v4_14f94 = load i32, i32* %v3_14f94, align 4
  call void @__pseudo_branch(i32 %v4_14f94)
  store i32 96, i32* %r3.global-to-local, align 4
  %v0_14fa4 = load i32, i32* @fp, align 4
  %v2_14fa4 = add i32 %v0_14fa4, 96
  %v3_14fa4 = inttoptr i32 %v2_14fa4 to i32*
  %v4_14fa4 = load i32, i32* %v3_14fa4, align 4
  store i32 %v4_14fa4, i32* %r4.global-to-local, align 4
  %v0_14fa8 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_14fa8, i32* %r1.global-to-local, align 4
  store i32 %v4_14fa4, i32* %r2.global-to-local, align 4
  store i32 %v2_14d60, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_14f74)
  store i32 %v4_14fa4, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_14f94)
  store i32 44, i32* %r3.global-to-local, align 4
  %v0_14fcc = load i32, i32* @fp, align 4
  %v2_14fcc = add i32 %v0_14fcc, 44
  %v3_14fcc = inttoptr i32 %v2_14fcc to i32*
  %v4_14fcc = load i32, i32* %v3_14fcc, align 4
  store i32 %v4_14fcc, i32* @ip, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  %v1_14fd4 = inttoptr i32 %v4_14fcc to i32*
  %v2_14fd4 = load i32, i32* %v1_14fd4, align 4
  store i32 %v2_14fd4, i32* %r2.global-to-local, align 4
  store i32 %v2_14d60, i32* %r0.global-to-local, align 4
  %v1_14fdc = load i32, i32* @sb, align 4
  %v2_14fdc = add i32 %v1_14fdc, 32
  %v3_14fdc = inttoptr i32 %v2_14fdc to i32*
  store i32 %v2_14fd4, i32* %v3_14fdc, align 4
  %v0_14fe0 = load i32, i32* @fp, align 4
  %v1_14fe0 = load i32, i32* %r3.global-to-local, align 4
  %v2_14fe0 = add i32 %v1_14fe0, %v0_14fe0
  %v3_14fe0 = inttoptr i32 %v2_14fe0 to i32*
  %v4_14fe0 = load i32, i32* %v3_14fe0, align 4
  store i32 %v4_14fe0, i32* %r4.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_14fe8 = load i32, i32* @sb, align 4
  %v1_14fe8 = load i32, i32* @ip, align 4
  %v2_14fe8 = inttoptr i32 %v1_14fe8 to i32*
  store i32 %v0_14fe8, i32* %v2_14fe8, align 4
  call void @__pseudo_branch(i32 %v4_14fe0)
  store i32 %v2_14f70, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_14fe0)
  br label %dec_label_pc_15010

dec_label_pc_1500c:                               ; preds = %dec_label_pc_14da0, %dec_label_pc_14d8c, %dec_label_pc_14dac
  store i32 0, i32* @sb, align 4
  br label %dec_label_pc_15010

dec_label_pc_15010:                               ; preds = %bb40, %dec_label_pc_14de4, %dec_label_pc_14f5c, %dec_label_pc_1500c
  %v0_15010 = load i32, i32* @sb, align 4
  store i32 %v0_15010, i32* %r0.global-to-local, align 4
  %v2_15018 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_15018, i32* %r4.global-to-local, align 4
  store i32 %v6_14d4c, i32* @r5, align 4
  store i32 %v9_14d4c, i32* @r6, align 4
  store i32 %v18_14d4c, i32* @sb, align 4
  store i32 %v24_14d4c, i32* @fp, align 4
  ret i32 %v0_15010

; uselistorder directives
  uselistorder i32 %v1_14f10.pre, { 2, 1, 0 }
  uselistorder i32 %v0_14ea4, { 1, 2, 0 }
  uselistorder i32 %v0_14e70, { 1, 0 }
  uselistorder i32 %v1_14e34, { 1, 0 }
  uselistorder i32 %v0_14e34, { 1, 0 }
  uselistorder i32 %v1_14e1c, { 1, 0, 2 }
  uselistorder i32 %v1_14dd4, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 24, 25 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 5, 4, 6, 7, 8, 9, 10, 0, 12, 11, 14, 13, 18, 15, 16, 17 }
  uselistorder i32 16384, { 45, 0, 46, 33, 63, 34, 64, 35, 65, 36, 66, 37, 67, 38, 68, 16, 69, 15, 47, 1, 49, 31, 50, 2, 61, 32, 62, 30, 48, 3, 51, 4, 52, 5, 53, 6, 54, 7, 55, 8, 56, 9, 57, 10, 58, 11, 59, 12, 60, 39, 72, 13, 73, 14, 74, 17, 70, 40, 71, 20, 75, 19, 76, 42, 77, 43, 78, 18, 79, 41, 80, 81, 21, 82, 22, 83, 23, 84, 44, 85, 24, 86, 25, 87, 27, 88, 26, 89, 28, 90, 29, 91 }
  uselistorder i32 4096, { 7, 8, 9, 1, 0, 2, 15, 3, 10, 11, 5, 12, 4, 6, 13, 14 }
  uselistorder i32 32768, { 1, 4, 2, 0, 3 }
  uselistorder i32 (i32, i32)* @function_11154, { 5, 0, 2, 1, 6, 3, 4 }
  uselistorder i32 (i32, i32)* @function_1137c, { 3, 0, 14, 9, 8, 11, 10, 13, 12, 7, 6, 5, 4, 2, 1 }
  uselistorder i32 ()* @function_11f78, { 4, 3, 36, 35, 34, 33, 0, 1, 5, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 2 }
  uselistorder i32 80, { 5, 2, 3, 4, 0, 1, 6, 7 }
  uselistorder i8 43, { 1, 0 }
  uselistorder i32 ()* @function_12fe4, { 1, 11, 8, 7, 6, 5, 0, 4, 3, 2, 10, 9 }
  uselistorder i32* @fp, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 107, 37, 38, 39, 40, 97, 99, 98, 100, 24, 25, 19, 20, 21, 22, 23, 26, 27, 42, 41, 43, 44, 45, 46, 28, 29, 30, 31, 32, 33, 34, 35, 36, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 0, 68, 69, 70, 71, 72, 73, 74, 1, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 101, 102, 103, 104, 105, 106 }
  uselistorder i32* @sb, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 45, 46, 47, 48, 49, 50, 51, 52, 112, 115, 113, 114, 116, 33, 34, 35, 36, 37, 57, 58, 53, 54, 55, 56, 38, 39, 40, 41, 42, 43, 44, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 1, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 117, 118, 119, 120, 121, 122, 123, 124, 125 }
  uselistorder label %dec_label_pc_15010, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_1500c, { 2, 0, 1 }
  uselistorder label %bb40, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14eec, { 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %bb38, { 1, 0 }
  uselistorder label %dec_label_pc_14e64._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_14e0c, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_14dbc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14d8c, { 1, 2, 0 }
}

define i32 @function_15024(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_15024:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %v0_15024 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15024, label %bb, label %.thread10

bb:                                               ; preds = %dec_label_pc_15024
  %v1_1502c = load i32, i32* %r2.global-to-local, align 4
  %v2_1502c = load i32, i32* %r3.global-to-local, align 4
  %v3_1502c = and i32 %v2_1502c, %v1_1502c
  %v2_15030 = trunc i32 %v3_1502c to i16
  %v4_15030 = inttoptr i32 %v3_1502c to i16*
  store i16 %v2_15030, i16* %v4_15030, align 2
  br label %.thread10

.thread10:                                        ; preds = %dec_label_pc_15024, %bb
  %v0_15058 = call i32 @function_11970()
  store i32 %v0_15058, i32* @r5, align 4
  store i32 0, i32* @r0, align 4
  %v1_15064 = inttoptr i32 %v0_15058 to i32*
  %v2_15064 = load i32, i32* %v1_15064, align 4
  store i32 %v2_15064, i32* @r6, align 4
  %v1_15068 = call i32 @function_160bc(i32 0)
  %v2_15070 = icmp eq i32 %v1_15068, 0
  store i32 127864, i32* @r4, align 4
  br i1 %v2_15070, label %bb23, label %.thread13

bb23:                                             ; preds = %.thread10
  store i32 304, i32* %r2.global-to-local, align 4
  %v5_1507c = load i16, i16* inttoptr (i32 128168 to i16*), align 8
  %v7_1507c = zext i16 %v5_1507c to i32
  %v2_15080 = xor i32 %v7_1507c, 256
  store i32 %v2_15080, i32* @r3, align 4
  %v2_15084 = trunc i32 %v2_15080 to i16
  store i16 %v2_15084, i16* inttoptr (i32 128168 to i16*), align 8
  br label %.thread13

.thread13:                                        ; preds = %.thread10, %bb23
  store i32 1, i32* @r0, align 4
  %v1_1508c = call i32 @function_160bc(i32 1)
  %v2_15090 = icmp eq i32 %v1_1508c, 0
  br i1 %v2_15090, label %bb24, label %.thread17

bb24:                                             ; preds = %.thread13
  %v1_15098 = load i32, i32* @r4, align 4
  %v3_15098 = add i32 %v1_15098, 304
  store i32 %v3_15098, i32* %r2.global-to-local, align 4
  %v2_1509c = add i32 %v1_15098, 384
  %v3_1509c = inttoptr i32 %v2_1509c to i16*
  %v4_1509c = load i16, i16* %v3_1509c, align 2
  %v5_1509c = zext i16 %v4_1509c to i32
  %v2_150a0 = xor i32 %v5_1509c, 256
  store i32 %v2_150a0, i32* %r3.global-to-local, align 4
  %v2_150a4 = trunc i32 %v2_150a0 to i16
  store i16 %v2_150a4, i16* %v3_1509c, align 2
  br label %.thread17

.thread17:                                        ; preds = %.thread13, %bb24
  %v0_150a8 = load i32, i32* @r6, align 4
  %v1_150a8 = load i32, i32* @r5, align 4
  %v2_150a8 = inttoptr i32 %v1_150a8 to i32*
  store i32 %v0_150a8, i32* %v2_150a8, align 4
  ret i32 %v1_1508c

; uselistorder directives
  uselistorder i32 %v3_1502c, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 (i32)* @function_160bc, { 2, 1, 0 }
  uselistorder label %.thread17, { 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
  uselistorder label %.thread10, { 1, 0 }
}

define i32 @function_150bc(i32 %arg1) local_unnamed_addr {
dec_label_pc_150bc:
  store i32 127864, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_17350.904 to i32), i32* @r1, align 4
  store i32 24, i32* @r2, align 4
  %v0_150d8 = call i32 @function_11a70()
  ret i32 %v0_150d8
}

define i32 @function_151c4(i32 %arg1) local_unnamed_addr {
dec_label_pc_151c4:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_151c4 = load i32, i32* @r4, align 4
  store i32 %v3_151c4, i32* %stack_var_-8, align 4
  %v1_151c8 = add i32 %arg1, 8
  %v2_151c8 = inttoptr i32 %v1_151c8 to i32*
  %v3_151c8 = load i32, i32* %v2_151c8, align 4
  %v1_151cc = add i32 %arg1, 16
  %v2_151cc = inttoptr i32 %v1_151cc to i32*
  %v3_151cc = load i32, i32* %v2_151cc, align 4
  %v9_151d0 = icmp eq i32 %v3_151cc, %v3_151c8
  store i32 %arg1, i32* %r4.global-to-local, align 4
  br i1 %v9_151d0, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_151c4
  store i32 %v3_151c8, i32* %v2_151cc, align 4
  br label %bb3

bb3:                                              ; preds = %dec_label_pc_151c4, %bb
  %v1_151dc = xor i1 %v9_151d0, true
  call void @__pseudo_cond_branch(i1 %v1_151dc, i32 ptrtoint (i32* @global_var_164a8.905 to i32))
  %v0_151e0 = load i32, i32* %r4.global-to-local, align 4
  %v1_151e0 = add i32 %v0_151e0, 8
  %v2_151e0 = inttoptr i32 %v1_151e0 to i32*
  %v3_151e0 = load i32, i32* %v2_151e0, align 4
  %v1_151e4 = add i32 %v0_151e0, 16
  %v2_151e4 = inttoptr i32 %v1_151e4 to i32*
  %v3_151e4 = load i32, i32* %v2_151e4, align 4
  %v2_151e8 = sub i32 %v3_151e4, %v3_151e0
  %v2_151ec = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_151ec, i32* @r4, align 4
  ret i32 %v2_151e8

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @function_151f4(i32 %arg1) local_unnamed_addr {
dec_label_pc_151f4:
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_151f4 = load i32, i32* @r4, align 4
  store i32 %v3_151f4, i32* %stack_var_-16, align 4
  %v6_151f4 = load i32, i32* @r5, align 4
  %v12_151f4 = load i32, i32* @lr, align 4
  %v1_151f8 = add i32 %arg1, 52
  %v2_151f8 = inttoptr i32 %v1_151f8 to i32*
  %v3_151f8 = load i32, i32* %v2_151f8, align 4
  %v2_15200 = icmp eq i32 %v3_151f8, 0
  store i32 %arg1, i32* @r5, align 4
  store i32 127864, i32* %r6.global-to-local, align 4
  br i1 %v2_15200, label %dec_label_pc_15238, label %dec_label_pc_15214

dec_label_pc_15214:                               ; preds = %dec_label_pc_151f4
  %v1_15214 = add i32 %arg1, 16
  %v2_15214 = inttoptr i32 %v1_15214 to i32*
  %v3_15214 = load i32, i32* %v2_15214, align 4
  %v1_15218 = add i32 %arg1, 24
  %v2_15218 = inttoptr i32 %v1_15218 to i32*
  %v3_15218 = load i32, i32* %v2_15218, align 4
  %v3_1521c = icmp ult i32 %v3_15214, %v3_15218
  br i1 %v3_1521c, label %.thread, label %dec_label_pc_1522c

.thread:                                          ; preds = %dec_label_pc_15214
  %v2_15220 = inttoptr i32 %v3_15214 to i8*
  %v3_15220 = load i8, i8* %v2_15220, align 1
  %v4_15220 = zext i8 %v3_15220 to i32
  store i32 %v4_15220, i32* %r4.global-to-local, align 4
  %v6_15220 = add i32 %v3_15214, 1
  store i32 %v6_15220, i32* %v2_15214, align 4
  br label %dec_label_pc_152ac

dec_label_pc_1522c:                               ; preds = %dec_label_pc_15214
  %v1_1522c = inttoptr i32 %arg1 to i16*
  %v2_1522c = call i32 @function_15720(i16* %v1_1522c)
  store i32 %v2_1522c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_152ac

dec_label_pc_15238:                               ; preds = %dec_label_pc_151f4
  %v1_1523c = add i32 %arg1, 56
  store i32 %v1_1523c, i32* @r4, align 4
  %v4_15250 = load i32, i32* inttoptr (i32 127936 to i32*), align 64
  call void @__pseudo_branch(i32 %v4_15250)
  %v0_15264 = load i32, i32* %r6.global-to-local, align 4
  %v2_15264 = add i32 %v0_15264, 16
  %v3_15264 = inttoptr i32 %v2_15264 to i32*
  %v4_15264 = load i32, i32* %v3_15264, align 4
  store i32 86640, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_15264)
  %v0_15270 = load i32, i32* @r5, align 4
  %v1_15270 = add i32 %v0_15270, 16
  %v2_15270 = inttoptr i32 %v1_15270 to i32*
  %v3_15270 = load i32, i32* %v2_15270, align 4
  %v1_15274 = add i32 %v0_15270, 24
  %v2_15274 = inttoptr i32 %v1_15274 to i32*
  %v3_15274 = load i32, i32* %v2_15274, align 4
  %v3_15278 = icmp ult i32 %v3_15270, %v3_15274
  br i1 %v3_15278, label %.thread2, label %dec_label_pc_15288

.thread2:                                         ; preds = %dec_label_pc_15238
  %v2_1527c = inttoptr i32 %v3_15270 to i8*
  %v3_1527c = load i8, i8* %v2_1527c, align 1
  %v4_1527c = zext i8 %v3_1527c to i32
  store i32 %v4_1527c, i32* %r4.global-to-local, align 4
  %v6_1527c = add i32 %v3_15270, 1
  store i32 %v6_1527c, i32* %v2_15270, align 4
  br label %dec_label_pc_15294

dec_label_pc_15288:                               ; preds = %dec_label_pc_15238
  %v1_1528c = inttoptr i32 %v0_15270 to i16*
  %v2_1528c = call i32 @function_15720(i16* %v1_1528c)
  store i32 %v2_1528c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15294

dec_label_pc_15294:                               ; preds = %.thread2, %dec_label_pc_15288
  %v0_152a0 = load i32, i32* %r6.global-to-local, align 4
  %v2_152a0 = add i32 %v0_152a0, 24
  %v3_152a0 = inttoptr i32 %v2_152a0 to i32*
  %v4_152a0 = load i32, i32* %v3_152a0, align 4
  store i32 %v4_152a0, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_152a0)
  br label %dec_label_pc_152ac

dec_label_pc_152ac:                               ; preds = %.thread, %dec_label_pc_1522c, %dec_label_pc_15294
  %v0_152ac = load i32, i32* %r4.global-to-local, align 4
  %v2_152b4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_152b4, i32* @r4, align 4
  store i32 %v6_151f4, i32* @r5, align 4
  store i32 %v12_151f4, i32* @lr, align 4
  ret i32 %v0_152ac

; uselistorder directives
  uselistorder i32 %v3_15270, { 1, 0, 2 }
  uselistorder i32 %v3_15214, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32 %arg1, { 1, 5, 3, 2, 0, 4 }
  uselistorder label %dec_label_pc_152ac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15294, { 1, 0 }
}

define i32 @function_152c0(i32 %arg1) local_unnamed_addr {
dec_label_pc_152c0:
  %v0_152c0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_152c0, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_152c0
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_152c0, %bb
  %v10_152cc = phi i32 [ %arg1, %dec_label_pc_152c0 ], [ 0, %bb ]
  ret i32 %v10_152cc

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_152d0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_152d0:
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_152d0 = load i32, i32* @r4, align 4
  store i32 %v3_152d0, i32* %stack_var_-28, align 4
  %v6_152d0 = load i32, i32* @r5, align 4
  %v9_152d0 = load i32, i32* @r6, align 4
  %v12_152d0 = load i32, i32* @r7, align 4
  %v21_152d0 = load i32, i32* @lr, align 4
  %v1_152d4 = add i32 %arg3, 52
  %v2_152d4 = inttoptr i32 %v1_152d4 to i32*
  %v3_152d4 = load i32, i32* %v2_152d4, align 4
  %v1_152dc = sub i32 1, %v3_152d4
  %v2_152dc = icmp ult i32 %v3_152d4, 2
  br i1 %v2_152dc, label %bb16, label %bb

bb:                                               ; preds = %dec_label_pc_152d0
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_152d0, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_152dc, %dec_label_pc_152d0 ]
  %v0_152e4 = phi i32 [ 0, %bb ], [ %v1_152dc, %dec_label_pc_152d0 ]
  store i32 %storemerge, i32* %sl.global-to-local, align 4
  %v2_152e4 = icmp eq i32 %v0_152e4, 0
  store i32 add (i32 ptrtoint (i32* @global_var_a088.912 to i32), i32 86768), i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* @r7, align 4
  br i1 %v2_152e4, label %dec_label_pc_15338, label %dec_label_pc_15300

dec_label_pc_15300:                               ; preds = %bb16
  %v1_15304 = add i32 %arg3, 56
  store i32 %v1_15304, i32* @r4, align 4
  %v4_15318 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_a088.912 to i32), i32 86840) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_15318)
  %v0_1532c = load i32, i32* @r5, align 4
  %v2_1532c = add i32 %v0_1532c, 16
  %v3_1532c = inttoptr i32 %v2_1532c to i32*
  %v4_1532c = load i32, i32* %v3_1532c, align 4
  store i32 %v4_1532c, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_15338.916 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1532c)
  %v0_15338.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_1533c.pre = load i32, i32* @r7, align 4
  %v0_15340.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_15338

dec_label_pc_15338:                               ; preds = %bb16, %dec_label_pc_15300
  %v0_15340 = phi i32 [ %arg3, %bb16 ], [ %v0_15340.pre, %dec_label_pc_15300 ]
  %v0_1533c = phi i32 [ %arg2, %bb16 ], [ %v0_1533c.pre, %dec_label_pc_15300 ]
  %v0_15338 = phi i32 [ %arg1, %bb16 ], [ %v0_15338.pre, %dec_label_pc_15300 ]
  %v3_15344 = inttoptr i32 %v0_15338 to i8*
  %v4_15344 = call i32 @function_1584c(i8* %v3_15344, i32 %v0_1533c, i32 %v0_15340)
  %v0_15348 = load i32, i32* %sl.global-to-local, align 4
  %v2_15348 = icmp eq i32 %v0_15348, 0
  store i32 %v4_15344, i32* %r4.global-to-local, align 4
  br i1 %v2_15348, label %dec_label_pc_15338..thread3_crit_edge, label %bb17

dec_label_pc_15338..thread3_crit_edge:            ; preds = %dec_label_pc_15338
  %v0_15364.pre = load i32, i32* @ip, align 4
  br label %.thread3

bb17:                                             ; preds = %dec_label_pc_15338
  %v1_1535c = load i32, i32* @r5, align 4
  %v3_1535c = add i32 %v1_1535c, 24
  %v4_1535c = inttoptr i32 %v3_1535c to i32*
  %v5_1535c = load i32, i32* %v4_1535c, align 4
  store i32 %v5_1535c, i32* @ip, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_15338..thread3_crit_edge, %bb17
  %v0_15364 = phi i32 [ %v0_15364.pre, %dec_label_pc_15338..thread3_crit_edge ], [ %v5_1535c, %bb17 ]
  %v2_15364 = xor i1 %v2_15348, true
  call void @__pseudo_cond_branch(i1 %v2_15364, i32 %v0_15364)
  %v0_15368 = load i32, i32* %r4.global-to-local, align 4
  %v2_15370 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_15370, i32* %r4.global-to-local, align 4
  store i32 %v6_152d0, i32* @r5, align 4
  store i32 %v9_152d0, i32* @r6, align 4
  store i32 %v12_152d0, i32* @r7, align 4
  store i32 %v21_152d0, i32* @lr, align 4
  ret i32 %v0_15368

; uselistorder directives
  uselistorder i32 %v3_152d4, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0 }
  uselistorder i32 52, { 8, 9, 10, 11, 12, 2, 13, 6, 7, 3, 16, 17, 1, 18, 0, 19, 20, 4, 5, 14, 15 }
  uselistorder i32 %arg3, { 0, 3, 1, 2 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_15338, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
}

define i32 @function_1537c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1537c:
  %v0_1537c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1537c, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_1537c
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1537c, %bb
  %v10_15388 = phi i32 [ %arg1, %dec_label_pc_1537c ], [ 0, %bb ]
  ret i32 %v10_15388

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_1538c() local_unnamed_addr {
dec_label_pc_1538c:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_1538c = load i32, i32* @r4, align 4
  store i32 %v3_1538c, i32* %stack_var_-24, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 127864, i32* %r6.global-to-local, align 4
  %v4_1539c = load i32, i32* inttoptr (i32 127900 to i32*), align 4
  store i32 %v4_1539c, i32* %r8.global-to-local, align 4
  store i32 108, i32* %r3.global-to-local, align 4
  %v4_153a4 = load i32, i32* inttoptr (i32 127972 to i32*), align 4
  store i32 %v4_153a4, i32* %r4.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v4_153b0 = load i32, i32* inttoptr (i32 127936 to i32*), align 64
  store i32 %v4_153b0, i32* %r7.global-to-local, align 4
  %v2_153bc = ptrtoint i32* %stack_var_-40 to i32
  call void @__pseudo_branch(i32 %v4_153b0)
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_153d0 = load i32, i32* %r6.global-to-local, align 4
  %v2_153d0 = add i32 %v0_153d0, 16
  %v3_153d0 = inttoptr i32 %v2_153d0 to i32*
  %v4_153d0 = load i32, i32* %v3_153d0, align 4
  store i32 %v4_153d0, i32* %r5.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_153d0)
  store i32 12, i32* %r3.global-to-local, align 4
  %v0_153e0 = load i32, i32* %r6.global-to-local, align 4
  %v2_153e0 = add i32 %v0_153e0, 12
  %v3_153e0 = inttoptr i32 %v2_153e0 to i32*
  %v4_153e0 = load i32, i32* %v3_153e0, align 4
  store i32 %v4_153e0, i32* %r3.global-to-local, align 4
  %v1_153e4 = inttoptr i32 %v4_153e0 to i32*
  %v2_153e4 = load i32, i32* %v1_153e4, align 4
  store i32 %v2_153e4, i32* %r3.global-to-local, align 4
  %v7_153e8 = icmp eq i32 %v2_153e4, 1
  br i1 %v7_153e8, label %dec_label_pc_153f0, label %dec_label_pc_154b0

dec_label_pc_153f0:                               ; preds = %dec_label_pc_1538c
  store i32 48, i32* %r3.global-to-local, align 4
  %v2_153f4 = add i32 %v0_153e0, 48
  %v3_153f4 = inttoptr i32 %v2_153f4 to i32*
  %v4_153f4 = load i32, i32* %v3_153f4, align 4
  store i32 %v4_153f4, i32* %r3.global-to-local, align 4
  %v1_153f8 = inttoptr i32 %v4_153f4 to i32*
  %v2_153f8 = load i32, i32* %v1_153f8, align 4
  store i32 %v2_153f8, i32* %r3.global-to-local, align 4
  %tmp30 = icmp slt i32 %v2_153f8, 1
  br i1 %tmp30, label %dec_label_pc_154b0, label %dec_label_pc_15404

dec_label_pc_15404:                               ; preds = %dec_label_pc_153f0
  store i32 96, i32* %r3.global-to-local, align 4
  %v2_15408 = add i32 %v0_153e0, 96
  %v3_15408 = inttoptr i32 %v2_15408 to i32*
  %v4_15408 = load i32, i32* %v3_15408, align 4
  store i32 %v4_15408, i32* %r4.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_153b0)
  call void @__pseudo_branch(i32 %v4_153d0)
  %v0_15430 = load i32, i32* %r6.global-to-local, align 4
  %v2_15430 = add i32 %v0_15430, 44
  %v3_15430 = inttoptr i32 %v2_15430 to i32*
  %v4_15430 = load i32, i32* %v3_15430, align 4
  store i32 %v4_15430, i32* %r3.global-to-local, align 4
  %v1_15434 = inttoptr i32 %v4_15430 to i32*
  %v2_15434 = load i32, i32* %v1_15434, align 4
  store i32 %v2_15434, i32* %r4.global-to-local, align 4
  store i32 44, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v2_1548011 = icmp eq i32 %v2_15434, 0
  br i1 %v2_1548011, label %dec_label_pc_1548c, label %dec_label_pc_15444

dec_label_pc_15444:                               ; preds = %dec_label_pc_15404, %dec_label_pc_1547c
  %v0_154682 = phi i32 [ %v0_1547c, %dec_label_pc_1547c ], [ %v2_15434, %dec_label_pc_15404 ]
  %v1_15444 = inttoptr i32 %v0_154682 to i16*
  %v2_15444 = load i16, i16* %v1_15444, align 2
  %v3_15444 = zext i16 %v2_15444 to i32
  store i32 %v3_15444, i32* %r3.global-to-local, align 4
  %v2_15448 = and i32 %v3_15444, 32816
  %v7_1544c = icmp eq i32 %v2_15448, 48
  %v1_15450 = add i32 %v0_154682, 32
  %v2_15450 = inttoptr i32 %v1_15450 to i32*
  %v3_15450 = load i32, i32* %v2_15450, align 4
  store i32 %v3_15450, i32* %r5.global-to-local, align 4
  br i1 %v7_1544c, label %dec_label_pc_1545c, label %.thread21

.thread21:                                        ; preds = %dec_label_pc_15444
  store i32 %v0_154682, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1547c

dec_label_pc_1545c:                               ; preds = %dec_label_pc_15444
  %v0_1545c = load i32, i32* %r7.global-to-local, align 4
  %v2_1545c = icmp eq i32 %v0_1545c, 0
  br i1 %v2_1545c, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_1545c
  %v1_15460 = load i32, i32* %r6.global-to-local, align 4
  %v2_15460 = load i32, i32* %r8.global-to-local, align 4
  %v3_15460 = add i32 %v2_15460, %v1_15460
  %v4_15460 = inttoptr i32 %v3_15460 to i32*
  %v5_15460 = load i32, i32* %v4_15460, align 4
  store i32 %v5_15460, i32* %r3.global-to-local, align 4
  %v3_15464 = inttoptr i32 %v5_15460 to i32*
  store i32 %v3_15450, i32* %v3_15464, align 4
  %v0_15468 = load i32, i32* %r4.global-to-local, align 4
  %v1_15468 = inttoptr i32 %v0_15468 to i16*
  %v2_15468 = load i16, i16* %v1_15468, align 2
  %v3_15468 = zext i16 %v2_15468 to i32
  store i32 %v3_15468, i32* %r3.global-to-local, align 4
  br label %bb31

bb:                                               ; preds = %dec_label_pc_1545c
  %v2_154688 = load i16, i16* %v1_15444, align 2
  %v3_154689 = zext i16 %v2_154688 to i32
  store i32 %v3_154689, i32* %r3.global-to-local, align 4
  %v3_1546c = add i32 %v0_1545c, 32
  %v4_1546c = inttoptr i32 %v3_1546c to i32*
  store i32 %v3_15450, i32* %v4_1546c, align 4
  %v0_15470.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb31

bb31:                                             ; preds = %.thread, %bb
  %v0_15470 = phi i32 [ %v3_15468, %.thread ], [ %v0_15470.pre, %bb ]
  %v1_15470 = and i32 %v0_15470, 8192
  %v2_15470 = icmp eq i32 %v1_15470, 0
  br i1 %v2_15470, label %bb33, label %bb32

bb32:                                             ; preds = %bb31
  br label %bb33

bb33:                                             ; preds = %bb31, %bb32
  %v1_15478 = xor i1 %v2_15470, true
  call void @__pseudo_cond_branch(i1 %v1_15478, i32 ptrtoint (i32* @global_var_12fe4.107 to i32))
  %v0_1547c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1547c

dec_label_pc_1547c:                               ; preds = %.thread21, %bb33
  %v0_1547c = phi i32 [ %v0_1547c.pre, %bb33 ], [ %v3_15450, %.thread21 ]
  store i32 %v0_1547c, i32* %r4.global-to-local, align 4
  %v2_15480 = icmp eq i32 %v0_1547c, 0
  br i1 %v2_15480, label %dec_label_pc_15480.dec_label_pc_1548c_crit_edge, label %dec_label_pc_15444

dec_label_pc_15480.dec_label_pc_1548c_crit_edge:  ; preds = %dec_label_pc_1547c
  %v0_15498.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1548c

dec_label_pc_1548c:                               ; preds = %dec_label_pc_15480.dec_label_pc_1548c_crit_edge, %dec_label_pc_15404
  %v0_15498 = phi i32 [ %v0_15498.pre, %dec_label_pc_15480.dec_label_pc_1548c_crit_edge ], [ %v0_15430, %dec_label_pc_15404 ]
  store i32 24, i32* %r3.global-to-local, align 4
  %v2_15498 = add i32 %v0_15498, 24
  %v3_15498 = inttoptr i32 %v2_15498 to i32*
  %v4_15498 = load i32, i32* %v3_15498, align 4
  call void @__pseudo_branch(i32 %v4_15498)
  store i32 48, i32* %r3.global-to-local, align 4
  %v0_154a8 = load i32, i32* %r6.global-to-local, align 4
  %v2_154a8 = add i32 %v0_154a8, 48
  %v3_154a8 = inttoptr i32 %v2_154a8 to i32*
  %v4_154a8 = load i32, i32* %v3_154a8, align 4
  store i32 %v4_154a8, i32* %r3.global-to-local, align 4
  %v0_154ac = load i32, i32* %r4.global-to-local, align 4
  %v2_154ac = inttoptr i32 %v4_154a8 to i32*
  store i32 %v0_154ac, i32* %v2_154ac, align 4
  %v0_154b4.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_154b0

dec_label_pc_154b0:                               ; preds = %dec_label_pc_1538c, %dec_label_pc_153f0, %dec_label_pc_1548c
  %v0_154b4 = phi i32 [ %v0_153e0, %dec_label_pc_1538c ], [ %v0_153e0, %dec_label_pc_153f0 ], [ %v0_154b4.pre, %dec_label_pc_1548c ]
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_154b4 = add i32 %v0_154b4, 12
  %v3_154b4 = inttoptr i32 %v2_154b4 to i32*
  %v4_154b4 = load i32, i32* %v3_154b4, align 4
  %v1_154b8 = inttoptr i32 %v4_154b4 to i32*
  %v2_154b8 = load i32, i32* %v1_154b8, align 4
  %v1_154bc = add i32 %v2_154b8, -1
  store i32 %v1_154bc, i32* %v1_154b8, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  %v0_154d0 = load i32, i32* %r6.global-to-local, align 4
  %v2_154d0 = add i32 %v0_154d0, 24
  %v3_154d0 = inttoptr i32 %v2_154d0 to i32*
  %v4_154d0 = load i32, i32* %v3_154d0, align 4
  call void @__pseudo_branch(i32 %v4_154d0)
  %v2_154e0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_154e0, i32* %r4.global-to-local, align 4
  ret i32 %v2_153bc

; uselistorder directives
  uselistorder i32 %v0_1547c, { 2, 1, 0 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32* %r6.global-to-local, { 2, 1, 3, 0, 4, 5, 6, 7, 8 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 7, 8, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32* inttoptr (i32 127900 to i32*), { 2, 0, 1 }
  uselistorder label %dec_label_pc_154b0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1547c, { 1, 0 }
  uselistorder label %bb33, { 1, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %dec_label_pc_15444, { 1, 0 }
}

define i32 @function_154ec(i16* %arg1) local_unnamed_addr {
dec_label_pc_154ec:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v0_154ec = load i1, i1* @cpsr_z, align 1
  %v2_154ec = load i32, i32* @r4, align 4
  br i1 %v0_154ec, label %bb, label %dec_label_pc_154ec..thread8_crit_edge

dec_label_pc_154ec..thread8_crit_edge:            ; preds = %dec_label_pc_154ec
  %v0_15528.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread8

bb:                                               ; preds = %dec_label_pc_154ec
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_154ec..thread8_crit_edge, %bb
  %v0_156c8 = phi i32 [ %v0_15528.pre, %dec_label_pc_154ec..thread8_crit_edge ], [ 0, %bb ]
  store i32 %v2_154ec, i32* %stack_var_-36, align 4
  store i32 44, i32* %r3.global-to-local, align 4
  store i32 127864, i32* %sb.global-to-local, align 4
  %v4_15524 = load i32, i32* inttoptr (i32 127908 to i32*), align 4
  store i32 %v4_15524, i32* %r3.global-to-local, align 4
  %v9_15528 = icmp eq i32 %v0_156c8, %v4_15524
  store i32 %v0_156c8, i32* %fp.global-to-local, align 4
  br i1 %v9_15528, label %bb49, label %dec_label_pc_15540

bb49:                                             ; preds = %.thread8
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_15550

dec_label_pc_15540:                               ; preds = %.thread8
  store i32 256, i32* %r2.global-to-local, align 4
  %v2_15544 = icmp eq i32 %v0_156c8, 0
  br i1 %v2_15544, label %dec_label_pc_15550, label %dec_label_pc_156b8

dec_label_pc_15550:                               ; preds = %bb49, %dec_label_pc_15540
  %stack_var_-60.1.in = phi i32 [ 0, %bb49 ], [ 256, %dec_label_pc_15540 ]
  store i32 108, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v4_15564 = load i32, i32* inttoptr (i32 127972 to i32*), align 4
  store i32 %v4_15564, i32* %r4.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v2_1556c = ptrtoint i32* %stack_var_-56 to i32
  %v4_15570 = load i32, i32* inttoptr (i32 127936 to i32*), align 64
  store i32 16, i32* %stack_var_-72, align 4
  store i32 %v2_1556c, i32* %r0.global-to-local, align 4
  store i32 %v4_15564, i32* %r2.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_15570)
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_15590 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_15590, i32* %r0.global-to-local, align 4
  %v0_15594 = load i32, i32* %sb.global-to-local, align 4
  %v2_15594 = add i32 %v0_15594, 16
  %v3_15594 = inttoptr i32 %v2_15594 to i32*
  %v4_15594 = load i32, i32* %v3_15594, align 4
  call void @__pseudo_branch(i32 %v4_15594)
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_155a4 = add i32 %v0_15594, 12
  %v3_155a4 = inttoptr i32 %v2_155a4 to i32*
  %v4_155a4 = load i32, i32* %v3_155a4, align 4
  store i32 %v4_155a4, i32* %r2.global-to-local, align 4
  %v1_155a8 = inttoptr i32 %v4_155a4 to i32*
  %v2_155a8 = load i32, i32* %v1_155a8, align 4
  store i32 24, i32* %sl.global-to-local, align 4
  %v1_155b0 = add i32 %v2_155a8, 1
  store i32 %v1_155b0, i32* %r3.global-to-local, align 4
  %v2_155b4 = add i32 %v0_15594, 24
  %v3_155b4 = inttoptr i32 %v2_155b4 to i32*
  %v4_155b4 = load i32, i32* %v3_155b4, align 4
  store i32 %v1_155b0, i32* %v1_155a8, align 4
  store i32 %v2_1556c, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_155b4)
  store i32 96, i32* %r3.global-to-local, align 4
  %v0_155d0 = load i32, i32* %sb.global-to-local, align 4
  %v2_155d0 = add i32 %v0_155d0, 96
  %v3_155d0 = inttoptr i32 %v2_155d0 to i32*
  %v4_155d0 = load i32, i32* %v3_155d0, align 4
  store i32 %v4_155d0, i32* @r4, align 4
  store i32 %v4_155d0, i32* %r2.global-to-local, align 4
  store i32 %v2_1556c, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_15570)
  %v0_155e8 = load i32, i32* @r4, align 4
  store i32 %v0_155e8, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_15594)
  store i32 44, i32* %r3.global-to-local, align 4
  %v0_155f8 = load i32, i32* %sb.global-to-local, align 4
  %v2_155f8 = add i32 %v0_155f8, 44
  %v3_155f8 = inttoptr i32 %v2_155f8 to i32*
  %v4_155f8 = load i32, i32* %v3_155f8, align 4
  store i32 %v4_155f8, i32* %r3.global-to-local, align 4
  store i32 %v2_1556c, i32* %r0.global-to-local, align 4
  %v1_15604 = inttoptr i32 %v4_155f8 to i32*
  %v2_15604 = load i32, i32* %v1_15604, align 4
  store i32 %v2_15604, i32* @r7, align 4
  call void @__pseudo_branch(i32 %v4_155b4)
  %v0_15610 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_15610, i32* @r6, align 4
  %v2_15614 = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_15614, i32* @r8, align 4
  store i32 72, i32* %fp.global-to-local, align 4
  %v0_156a8.pr = load i32, i32* @r7, align 4
  %v2_156a828 = icmp eq i32 %v0_156a8.pr, 0
  br i1 %v2_156a828, label %dec_label_pc_156b0, label %dec_label_pc_1561c

dec_label_pc_1561c:                               ; preds = %dec_label_pc_15550, %dec_label_pc_156a4
  %v0_15628 = phi i32 [ %v3_156a4, %dec_label_pc_156a4 ], [ %v0_156a8.pr, %dec_label_pc_15550 ]
  %v1_1561c = inttoptr i32 %v0_15628 to i16*
  %v2_1561c = load i16, i16* %v1_1561c, align 2
  %v3_1561c = zext i16 %v2_1561c to i32
  store i32 %v3_1561c, i32* %r3.global-to-local, align 4
  %v1_15620 = and i32 %v3_1561c, 64
  %v2_15620 = icmp eq i32 %v1_15620, 0
  br i1 %v2_15620, label %dec_label_pc_156a4, label %dec_label_pc_15628

dec_label_pc_15628:                               ; preds = %dec_label_pc_1561c
  %v1_15628 = add i32 %v0_15628, 56
  store i32 %v1_15628, i32* @r4, align 4
  store i32 %v1_15628, i32* %r2.global-to-local, align 4
  store i32 %v2_1556c, i32* %r0.global-to-local, align 4
  %v0_15638 = load i32, i32* %sb.global-to-local, align 4
  %v1_15638 = load i32, i32* %fp.global-to-local, align 4
  %v2_15638 = add i32 %v1_15638, %v0_15638
  %v3_15638 = inttoptr i32 %v2_15638 to i32*
  %v4_15638 = load i32, i32* %v3_15638, align 4
  call void @__pseudo_branch(i32 %v4_15638)
  %v0_15644 = load i32, i32* @r4, align 4
  store i32 %v0_15644, i32* %r0.global-to-local, align 4
  %v0_15648 = load i32, i32* %sb.global-to-local, align 4
  %v1_15648 = load i32, i32* @r8, align 4
  %v2_15648 = add i32 %v1_15648, %v0_15648
  %v3_15648 = inttoptr i32 %v2_15648 to i32*
  %v4_15648 = load i32, i32* %v3_15648, align 4
  call void @__pseudo_branch(i32 %v4_15648)
  %v0_15654 = load i32, i32* @r7, align 4
  %v1_15654 = inttoptr i32 %v0_15654 to i16*
  %v2_15654 = load i16, i16* %v1_15654, align 2
  %v3_15654 = zext i16 %v2_15654 to i32
  store i32 %stack_var_-60.1.in, i32* %r2.global-to-local, align 4
  %v2_1565c = or i32 %v3_15654, %stack_var_-60.1.in
  %v1_15660 = xor i32 %v2_1565c, 320
  store i32 %v1_15660, i32* %r3.global-to-local, align 4
  %v1_15664 = and i32 %v1_15660, 832
  %v2_15664 = icmp eq i32 %v1_15664, 0
  br i1 %v2_15664, label %dec_label_pc_1566c, label %bb50

dec_label_pc_1566c:                               ; preds = %dec_label_pc_15628
  store i32 %v0_15654, i32* %r0.global-to-local, align 4
  %v1_15670 = call i32 @function_151c4(i32 %v0_15654)
  store i32 %v1_15670, i32* %r0.global-to-local, align 4
  %v2_15674 = icmp eq i32 %v1_15670, 0
  br i1 %v2_15674, label %.thread16, label %.thread17

.thread16:                                        ; preds = %dec_label_pc_1566c
  %v1_15678 = load i32, i32* @r7, align 4
  %v2_15678 = inttoptr i32 %v1_15678 to i16*
  %v3_15678 = load i16, i16* %v2_15678, align 2
  %v4_15678 = zext i16 %v3_15678 to i32
  store i32 %v4_15678, i32* %r3.global-to-local, align 4
  %v2_1567c = add i32 %v1_15678, 8
  %v3_1567c = inttoptr i32 %v2_1567c to i32*
  %v4_1567c = load i32, i32* %v3_1567c, align 4
  store i32 %v4_1567c, i32* %r2.global-to-local, align 4
  %v2_15680 = and i32 %v4_15678, 65471
  store i32 %v2_15680, i32* %r3.global-to-local, align 4
  %v3_15684 = add i32 %v1_15678, 28
  %v4_15684 = inttoptr i32 %v3_15684 to i32*
  store i32 %v4_1567c, i32* %v4_15684, align 4
  %v1_15688 = load i32, i32* %r3.global-to-local, align 4
  %v2_15688 = trunc i32 %v1_15688 to i16
  %v3_15688 = load i32, i32* @r7, align 4
  %v4_15688 = inttoptr i32 %v3_15688 to i16*
  store i16 %v2_15688, i16* %v4_15688, align 2
  br label %bb50

.thread17:                                        ; preds = %dec_label_pc_1566c
  store i32 -1, i32* @r6, align 4
  br label %bb50

bb50:                                             ; preds = %.thread16, %dec_label_pc_15628, %.thread17
  store i32 %v2_1556c, i32* %r0.global-to-local, align 4
  %v0_15698 = load i32, i32* %sb.global-to-local, align 4
  %v1_15698 = load i32, i32* %sl.global-to-local, align 4
  %v2_15698 = add i32 %v1_15698, %v0_15698
  %v3_15698 = inttoptr i32 %v2_15698 to i32*
  %v4_15698 = load i32, i32* %v3_15698, align 4
  call void @__pseudo_branch(i32 %v4_15698)
  %v0_156a4.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_156a4

dec_label_pc_156a4:                               ; preds = %dec_label_pc_1561c, %bb50
  %v0_156a4 = phi i32 [ %v0_15628, %dec_label_pc_1561c ], [ %v0_156a4.pre, %bb50 ]
  %v1_156a4 = add i32 %v0_156a4, 32
  %v2_156a4 = inttoptr i32 %v1_156a4 to i32*
  %v3_156a4 = load i32, i32* %v2_156a4, align 4
  store i32 %v3_156a4, i32* @r7, align 4
  %v2_156a8 = icmp eq i32 %v3_156a4, 0
  br i1 %v2_156a8, label %dec_label_pc_156b0, label %dec_label_pc_1561c

dec_label_pc_156b0:                               ; preds = %dec_label_pc_156a4, %dec_label_pc_15550
  %v0_156b0 = call i32 @function_1538c()
  store i32 %v0_156b0, i32* %r0.global-to-local, align 4
  %v0_156ec.pre = load i32, i32* @r6, align 4
  br label %bb52

dec_label_pc_156b8:                               ; preds = %dec_label_pc_15540
  %v1_156b8 = inttoptr i32 %v0_156c8 to i16*
  %v2_156b8 = load i16, i16* %v1_156b8, align 2
  %v3_156b8 = zext i16 %v2_156b8 to i32
  %v1_156bc = and i32 %v3_156b8, 64
  store i32 %v1_156bc, i32* %r3.global-to-local, align 4
  %v2_156bc = icmp eq i32 %v1_156bc, 0
  br i1 %v2_156bc, label %bb51, label %dec_label_pc_156c8

bb51:                                             ; preds = %dec_label_pc_156b8
  br label %bb52

dec_label_pc_156c8:                               ; preds = %dec_label_pc_156b8
  %v1_156c8 = call i32 @function_151c4(i32 %v0_156c8)
  store i32 %v1_156c8, i32* %r0.global-to-local, align 4
  %v2_156cc = icmp eq i32 %v1_156c8, 0
  br i1 %v2_156cc, label %.thread24, label %.thread26

.thread26:                                        ; preds = %dec_label_pc_156c8
  br label %bb52

.thread24:                                        ; preds = %dec_label_pc_156c8
  %v1_156d0 = load i32, i32* %fp.global-to-local, align 4
  %v2_156d0 = inttoptr i32 %v1_156d0 to i16*
  %v3_156d0 = load i16, i16* %v2_156d0, align 2
  %v4_156d0 = zext i16 %v3_156d0 to i32
  store i32 %v4_156d0, i32* %r3.global-to-local, align 4
  %v2_156d4 = add i32 %v1_156d0, 8
  %v3_156d4 = inttoptr i32 %v2_156d4 to i32*
  %v4_156d4 = load i32, i32* %v3_156d4, align 4
  store i32 %v4_156d4, i32* %r2.global-to-local, align 4
  %v2_156d8 = and i32 %v4_156d0, 65471
  store i32 %v2_156d8, i32* %r3.global-to-local, align 4
  %v2_156dc = trunc i32 %v2_156d8 to i16
  store i16 %v2_156dc, i16* %v2_156d0, align 2
  %v1_156e0 = load i32, i32* %r2.global-to-local, align 4
  %v2_156e0 = load i32, i32* %fp.global-to-local, align 4
  %v3_156e0 = add i32 %v2_156e0, 28
  %v4_156e0 = inttoptr i32 %v3_156e0 to i32*
  store i32 %v1_156e0, i32* %v4_156e0, align 4
  br label %bb52

bb52:                                             ; preds = %bb51, %.thread26, %dec_label_pc_156b0, %.thread24
  %v0_156ec = phi i32 [ -1, %.thread26 ], [ 0, %bb51 ], [ %v0_156ec.pre, %dec_label_pc_156b0 ], [ 0, %.thread24 ]
  store i32 %v0_156ec, i32* %r0.global-to-local, align 4
  %v2_156f4 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_156f4, i32* %r4.global-to-local, align 4
  ret i32 %v0_156ec

; uselistorder directives
  uselistorder i32 %v0_156ec, { 1, 0 }
  uselistorder i32 %v3_156a4, { 1, 2, 0 }
  uselistorder i32 %v0_15654, { 1, 0, 2 }
  uselistorder i32 %v0_15594, { 1, 0, 2 }
  uselistorder i32 %v0_156c8, { 2, 1, 0, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 6, 5, 16, 7, 9, 8, 10, 12, 11, 13, 14, 15, 2, 0, 1 }
  uselistorder i32* %fp.global-to-local, { 3, 4, 0, 1, 5, 2, 6 }
  uselistorder i32 ()* @function_1538c, { 1, 0 }
  uselistorder i32 56, { 8, 9, 10, 1, 2, 11, 13, 4, 5, 6, 7, 0, 3, 12, 14 }
  uselistorder i32* @r8, { 9, 10, 11, 12, 13, 14, 15, 16, 2, 17, 42, 43, 3, 44, 45, 46, 159, 160, 161, 162, 163, 6, 164, 165, 166, 167, 168, 169, 170, 171, 93, 94, 95, 96, 97, 47, 48, 49, 50, 51, 52, 53, 31, 33, 34, 22, 24, 4, 18, 19, 20, 21, 23, 32, 25, 26, 27, 28, 29, 30, 35, 36, 54, 55, 56, 57, 5, 37, 0, 38, 39, 40, 7, 41, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 98, 99, 100, 101, 102, 103, 104, 105, 106, 110, 107, 108, 109, 111, 112, 113, 114, 115, 117, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 172, 173, 1, 177, 174, 175, 176, 178, 179, 180, 181, 69, 70, 71, 72, 73, 74, 75, 8 }
  uselistorder i32 72, { 0, 1, 2, 3, 4, 5, 15, 11, 12, 13, 14, 6, 16, 7, 8, 9, 10 }
  uselistorder label %bb52, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_156a4, { 1, 0 }
  uselistorder label %bb50, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1561c, { 1, 0 }
  uselistorder label %dec_label_pc_15550, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
}

define i32 @function_15700(i32 %arg1) local_unnamed_addr {
dec_label_pc_15700:
  %v0_15700 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15700, label %bb, label %.thread6

bb:                                               ; preds = %dec_label_pc_15700
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_15700, %bb
  %v5_1571c = phi i32 [ %arg1, %dec_label_pc_15700 ], [ 0, %bb ]
  ret i32 %v5_1571c

; uselistorder directives
  uselistorder label %.thread6, { 1, 0 }
}

define i32 @function_15720(i16* %arg1) local_unnamed_addr {
dec_label_pc_15720:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-17 = alloca i8, align 1
  %stack_var_-12 = alloca i32, align 4
  %v3_15720 = load i32, i32* @r4, align 4
  store i32 %v3_15720, i32* %stack_var_-12, align 4
  %v6_15720 = load i32, i32* @r5, align 4
  %v9_15720 = load i32, i32* @lr, align 4
  %v0_15724 = load i32, i32* @r0, align 4
  %v1_15724 = add i32 %v0_15724, 16
  %v2_15724 = inttoptr i32 %v1_15724 to i32*
  %v3_15724 = load i32, i32* %v2_15724, align 4
  store i32 %v3_15724, i32* %r2.global-to-local, align 4
  %v1_15728 = add i32 %v0_15724, 24
  %v2_15728 = inttoptr i32 %v1_15728 to i32*
  %v3_15728 = load i32, i32* %v2_15728, align 4
  %v3_1572c = icmp ult i32 %v3_15724, %v3_15728
  store i32 %v0_15724, i32* @r4, align 4
  br i1 %v3_1572c, label %bb, label %dec_label_pc_1574c

bb:                                               ; preds = %dec_label_pc_15720
  %v2_15738 = inttoptr i32 %v3_15724 to i8*
  %v3_15738 = load i8, i8* %v2_15738, align 1
  %v4_15738 = zext i8 %v3_15738 to i32
  store i32 %v4_15738, i32* %r0.global-to-local, align 4
  %v6_15738 = add i32 %v3_15724, 1
  store i32 %v6_15738, i32* %r2.global-to-local, align 4
  store i32 %v6_15738, i32* %v2_15724, align 4
  br label %dec_label_pc_15838

dec_label_pc_1574c:                               ; preds = %dec_label_pc_15720
  store i32 127864, i32* @r5, align 4
  %v1_1574c = inttoptr i32 %v0_15724 to i16*
  %v2_1574c = load i16, i16* %v1_1574c, align 2
  %v3_1574c = zext i16 %v2_1574c to i32
  %v1_15750 = and i32 %v3_1574c, 131
  %tmp24 = icmp ugt i32 %v1_15750, 128
  br i1 %tmp24, label %dec_label_pc_1576c, label %dec_label_pc_1575c

dec_label_pc_1575c:                               ; preds = %dec_label_pc_1574c
  store i32 128, i32* @r1, align 4
  %v0_15760 = call i32 @function_1658c()
  store i32 %v0_15760, i32* %r0.global-to-local, align 4
  %v2_15764 = icmp eq i32 %v0_15760, 0
  br i1 %v2_15764, label %dec_label_pc_1575c.dec_label_pc_1576c_crit_edge, label %dec_label_pc_15834

dec_label_pc_1575c.dec_label_pc_1576c_crit_edge:  ; preds = %dec_label_pc_1575c
  %v0_1576c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1576c

dec_label_pc_1576c:                               ; preds = %dec_label_pc_1575c.dec_label_pc_1576c_crit_edge, %dec_label_pc_1574c
  %v2_157ac = phi i32 [ %v0_1576c.pre, %dec_label_pc_1575c.dec_label_pc_1576c_crit_edge ], [ %v0_15724, %dec_label_pc_1574c ]
  %v1_1576c = inttoptr i32 %v2_157ac to i16*
  %v2_1576c = load i16, i16* %v1_1576c, align 2
  %v3_1576c = zext i16 %v2_1576c to i32
  store i32 %v3_1576c, i32* %r2.global-to-local, align 4
  %v1_15770 = and i32 %v3_1576c, 2
  %v2_15770 = icmp eq i32 %v1_15770, 0
  br i1 %v2_15770, label %dec_label_pc_1579c, label %dec_label_pc_15778

dec_label_pc_15778:                               ; preds = %dec_label_pc_1576c
  %tmp25 = urem i16 %v2_1576c, 2
  %v1_15778 = zext i16 %tmp25 to i32
  %tmp21 = sub nsw i32 0, %v1_15778
  %v4_1577c = and i32 %tmp21, 4
  %v5_1577c = add i32 %v4_1577c, %v2_157ac
  %v1_15780 = add i32 %v5_1577c, 36
  %v2_15780 = inttoptr i32 %v1_15780 to i8*
  %v3_15780 = load i8, i8* %v2_15780, align 1
  %v4_15780 = zext i8 %v3_15780 to i32
  %v1_15784 = add nsw i32 %v3_1576c, -1
  store i32 %v1_15784, i32* %r2.global-to-local, align 4
  store i32 %v4_15780, i32* %r0.global-to-local, align 4
  %v2_15790 = add i32 %v2_157ac, 40
  %v3_15790 = inttoptr i32 %v2_15790 to i32*
  store i32 0, i32* %v3_15790, align 4
  %v0_15794 = load i32, i32* %r2.global-to-local, align 4
  %v1_15794 = trunc i32 %v0_15794 to i16
  %v2_15794 = load i32, i32* @r4, align 4
  %v3_15794 = inttoptr i32 %v2_15794 to i16*
  store i16 %v1_15794, i16* %v3_15794, align 2
  br label %dec_label_pc_15838

dec_label_pc_1579c:                               ; preds = %dec_label_pc_1576c
  %v1_1579c = add i32 %v2_157ac, 16
  %v1_157a0 = inttoptr i32 %v1_1579c to i32*
  %v2_157a0 = load i32, i32* %v1_157a0, align 4
  %v3_157a0 = add i32 %v2_157ac, 20
  %v4_157a0 = inttoptr i32 %v3_157a0 to i32*
  %v5_157a0 = load i32, i32* %v4_157a0, align 4
  %v9_157a4 = icmp eq i32 %v5_157a0, %v2_157a0
  br i1 %v9_157a4, label %dec_label_pc_157b4, label %.thread5

.thread5:                                         ; preds = %dec_label_pc_1579c
  %v2_157a8 = inttoptr i32 %v2_157a0 to i8*
  %v3_157a8 = load i8, i8* %v2_157a8, align 1
  %v4_157a8 = zext i8 %v3_157a8 to i32
  store i32 %v4_157a8, i32* %r0.global-to-local, align 4
  %v6_157a8 = add i32 %v2_157a0, 1
  store i32 %v6_157a8, i32* %v1_157a0, align 4
  br label %dec_label_pc_15838

dec_label_pc_157b4:                               ; preds = %dec_label_pc_1579c
  %v1_157b4 = add i32 %v2_157ac, 4
  %v2_157b4 = inttoptr i32 %v1_157b4 to i32*
  %v3_157b4 = load i32, i32* %v2_157b4, align 4
  %v7_157b8 = icmp eq i32 %v3_157b4, -2
  br i1 %v7_157b8, label %.thread8, label %dec_label_pc_157cc

.thread8:                                         ; preds = %dec_label_pc_157b4
  %v2_157bc = or i16 %v2_1576c, 4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i16 %v2_157bc, i16* %v1_1576c, align 2
  br label %dec_label_pc_15838

dec_label_pc_157cc:                               ; preds = %dec_label_pc_157b4
  %v1_157cc = and i32 %v3_1576c, 768
  %v2_157cc = icmp eq i32 %v1_157cc, 0
  br i1 %v2_157cc, label %.thread10, label %bb22

bb22:                                             ; preds = %dec_label_pc_157cc
  %v1_157d4 = load i32, i32* @r5, align 4
  %v3_157d4 = add i32 %v1_157d4, 44
  %v4_157d4 = inttoptr i32 %v3_157d4 to i32*
  %v5_157d4 = load i32, i32* %v4_157d4, align 4
  store i32 %v5_157d4, i32* %r0.global-to-local, align 4
  br label %.thread10

.thread10:                                        ; preds = %dec_label_pc_157cc, %bb22
  %v1_157d8 = xor i1 %v2_157cc, true
  call void @__pseudo_cond_branch(i1 %v1_157d8, i32 ptrtoint (i32* @global_var_15514.879 to i32))
  %v0_157dc = load i32, i32* @r4, align 4
  %v1_157dc = add i32 %v0_157dc, 8
  store i32 %v1_157dc, i32* %r2.global-to-local, align 4
  %v1_157e0 = inttoptr i32 %v1_157dc to i32*
  %v2_157e0 = load i32, i32* %v1_157e0, align 4
  store i32 %v2_157e0, i32* %r2.global-to-local, align 4
  %v3_157e0 = add i32 %v0_157dc, 12
  %v4_157e0 = inttoptr i32 %v3_157e0 to i32*
  %v5_157e0 = load i32, i32* %v4_157e0, align 4
  %v9_157e4 = icmp eq i32 %v5_157e0, %v2_157e0
  br i1 %v9_157e4, label %dec_label_pc_15818, label %dec_label_pc_157ec

dec_label_pc_157ec:                               ; preds = %.thread10
  %v2_157ec = add i32 %v0_157dc, 24
  %v3_157ec = inttoptr i32 %v2_157ec to i32*
  store i32 %v2_157e0, i32* %v3_157ec, align 4
  %v0_157f0 = load i32, i32* @r4, align 4
  store i32 %v0_157f0, i32* %r0.global-to-local, align 4
  %v2_157f4 = call i32 @function_1655c(i32 %v0_157f0)
  store i32 %v2_157f4, i32* %r0.global-to-local, align 4
  %v2_157f8 = icmp eq i32 %v2_157f4, 0
  br i1 %v2_157f8, label %dec_label_pc_15834, label %dec_label_pc_15800

dec_label_pc_15800:                               ; preds = %dec_label_pc_157ec
  %v0_15800 = load i32, i32* @r4, align 4
  %v1_15800 = add i32 %v0_15800, 20
  %v2_15800 = inttoptr i32 %v1_15800 to i32*
  %v3_15800 = load i32, i32* %v2_15800, align 4
  %v2_15804 = add i32 %v0_15800, 24
  %v3_15804 = inttoptr i32 %v2_15804 to i32*
  store i32 %v3_15800, i32* %v3_15804, align 4
  %v0_15808 = load i32, i32* @r4, align 4
  %v1_15808 = add i32 %v0_15808, 16
  %v2_15808 = inttoptr i32 %v1_15808 to i32*
  %v3_15808 = load i32, i32* %v2_15808, align 4
  %v1_1580c = inttoptr i32 %v3_15808 to i8*
  %v2_1580c = load i8, i8* %v1_1580c, align 1
  %v3_1580c = zext i8 %v2_1580c to i32
  store i32 %v3_1580c, i32* %r0.global-to-local, align 4
  %v5_1580c = add i32 %v3_15808, 1
  store i32 %v5_1580c, i32* %v2_15808, align 4
  br label %dec_label_pc_15838

dec_label_pc_15818:                               ; preds = %.thread10
  %v1_15818 = inttoptr i32 %v0_157dc to i16*
  store i32 %v0_157dc, i32* %r0.global-to-local, align 4
  %v2_1581c = ptrtoint i8* %stack_var_-17 to i32
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_15824 = call i32 @function_16450(i16* %v1_15818, i32 %v2_1581c, i32 1)
  store i32 %v5_15824, i32* %r0.global-to-local, align 4
  %v2_15828 = icmp eq i32 %v5_15824, 0
  br i1 %v2_15828, label %dec_label_pc_15834, label %bb23

bb23:                                             ; preds = %dec_label_pc_15818
  %v4_1582c = load i8, i8* %stack_var_-17, align 1
  %v5_1582c = sext i8 %v4_1582c to i32
  store i32 %v5_1582c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15838

dec_label_pc_15834:                               ; preds = %dec_label_pc_15818, %dec_label_pc_1575c, %dec_label_pc_157ec
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15838

dec_label_pc_15838:                               ; preds = %bb, %.thread8, %bb23, %.thread5, %dec_label_pc_15800, %dec_label_pc_15778, %dec_label_pc_15834
  %v2_1583c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1583c, i32* @r4, align 4
  store i32 %v6_15720, i32* @r5, align 4
  store i32 %v9_15720, i32* @lr, align 4
  %v1_15840 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_15840

; uselistorder directives
  uselistorder i32 %v2_157a0, { 1, 0, 2 }
  uselistorder i32 %v2_157ac, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 %v3_15724, { 1, 0, 2, 3 }
  uselistorder i32 %v0_15724, { 1, 0, 2, 3, 4 }
  uselistorder i8* %stack_var_-17, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 11, 1, 0, 4, 3, 2, 10, 5, 6, 7, 8, 9, 13, 12 }
  uselistorder i32 128, { 5, 0, 4, 7, 1, 8, 6, 9, 10, 2, 3, 11, 12 }
  uselistorder label %dec_label_pc_15838, { 6, 2, 4, 1, 3, 5, 0 }
  uselistorder label %dec_label_pc_15834, { 0, 2, 1 }
  uselistorder label %.thread10, { 1, 0 }
}

define i32 @function_1584c(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1584c:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v6_1584c = load i32, i32* @r5, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15850 = icmp eq i32 %arg2, 0
  store i1 %v2_15850, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r4, align 4
  %tmp22 = icmp slt i32 %arg2, 1
  br i1 %tmp22, label %dec_label_pc_158d8, label %dec_label_pc_158c0.preheader

dec_label_pc_158c0.preheader:                     ; preds = %dec_label_pc_1584c
  store i32 %tmp, i32* @r5, align 4
  %v1_158c02 = add i32 %arg2, -1
  store i32 %v1_158c02, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_158c08 = icmp eq i32 %arg2, 1
  store i1 %v7_158c08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_158c08, label %dec_label_pc_158c8, label %dec_label_pc_1586c

dec_label_pc_1586c:                               ; preds = %dec_label_pc_158c0.preheader, %dec_label_pc_158c0.backedge.dec_label_pc_1586c_crit_edge
  %v0_15890 = phi i32 [ %v0_1586c.pre, %dec_label_pc_158c0.backedge.dec_label_pc_1586c_crit_edge ], [ %arg3, %dec_label_pc_158c0.preheader ]
  %v1_1586c = add i32 %v0_15890, 16
  %v2_1586c = inttoptr i32 %v1_1586c to i32*
  %v3_1586c = load i32, i32* %v2_1586c, align 4
  store i32 %v3_1586c, i32* %r2.global-to-local, align 4
  %v1_15870 = add i32 %v0_15890, 24
  %v2_15870 = inttoptr i32 %v1_15870 to i32*
  %v3_15870 = load i32, i32* %v2_15870, align 4
  store i32 %v3_15870, i32* %r3.global-to-local, align 4
  %v3_15874 = icmp uge i32 %v3_1586c, %v3_15870
  store i1 %v3_15874, i1* %cpsr_c.global-to-local, align 1
  %v9_15874 = icmp eq i32 %v3_1586c, %v3_15870
  store i1 %v9_15874, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_15874, label %dec_label_pc_15890, label %dec_label_pc_1587c

dec_label_pc_1587c:                               ; preds = %dec_label_pc_1586c
  %v1_1587c = inttoptr i32 %v3_1586c to i8*
  %v2_1587c = load i8, i8* %v1_1587c, align 1
  %v3_1587c = zext i8 %v2_1587c to i32
  store i32 %v3_1587c, i32* %r3.global-to-local, align 4
  %v5_1587c = add i32 %v3_1586c, 1
  store i32 %v5_1587c, i32* %r2.global-to-local, align 4
  %v2_15880 = load i32, i32* @r5, align 4
  %v3_15880 = inttoptr i32 %v2_15880 to i8*
  store i8 %v2_1587c, i8* %v3_15880, align 1
  %v4_15880 = load i32, i32* @r5, align 4
  %v5_15880 = add i32 %v4_15880, 1
  store i32 %v5_15880, i32* @r5, align 4
  %v0_15884 = load i32, i32* %r3.global-to-local, align 4
  %v2_15884 = icmp ugt i32 %v0_15884, 9
  store i1 %v2_15884, i1* %cpsr_c.global-to-local, align 1
  %v7_15884 = icmp eq i32 %v0_15884, 10
  store i1 %v7_15884, i1* %cpsr_z.global-to-local, align 1
  %v0_15888 = load i32, i32* %r2.global-to-local, align 4
  %v1_15888 = load i32, i32* @r4, align 4
  %v2_15888 = add i32 %v1_15888, 16
  %v3_15888 = inttoptr i32 %v2_15888 to i32*
  store i32 %v0_15888, i32* %v3_15888, align 4
  br i1 %v7_15884, label %dec_label_pc_158c8, label %dec_label_pc_158c0.backedge

dec_label_pc_15890:                               ; preds = %dec_label_pc_1586c
  %v1_15890 = inttoptr i32 %v0_15890 to i16*
  %v3_15894 = call i32 @function_15720(i16* %v1_15890)
  %v3_15898 = icmp eq i32 %v3_15894, -1
  store i1 %v3_15898, i1* %cpsr_c.global-to-local, align 1
  %v8_15898 = icmp eq i32 %v3_15894, -1
  store i1 %v8_15898, i1* %cpsr_z.global-to-local, align 1
  %v1_1589c = urem i32 %v3_15894, 256
  store i32 %v1_1589c, i32* %r3.global-to-local, align 4
  br i1 %v3_15898, label %dec_label_pc_158a4, label %dec_label_pc_158bc

dec_label_pc_158a4:                               ; preds = %dec_label_pc_15890
  %v0_158a4 = load i32, i32* @r4, align 4
  %v1_158a4 = inttoptr i32 %v0_158a4 to i16*
  %v2_158a4 = load i16, i16* %v1_158a4, align 2
  %v3_158a4 = zext i16 %v2_158a4 to i32
  store i32 %v3_158a4, i32* %r3.global-to-local, align 4
  %v1_158a8 = and i32 %v3_158a4, 8
  %v2_158a8 = icmp eq i32 %v1_158a8, 0
  store i1 %v2_158a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_158a8, label %dec_label_pc_158c8, label %dec_label_pc_158d8

dec_label_pc_158bc:                               ; preds = %dec_label_pc_15890
  %v1_158b4 = trunc i32 %v3_15894 to i8
  %v2_158b4 = load i32, i32* @r5, align 4
  %v3_158b4 = inttoptr i32 %v2_158b4 to i8*
  store i8 %v1_158b4, i8* %v3_158b4, align 1
  %v4_158b4 = load i32, i32* @r5, align 4
  %v5_158b4 = add i32 %v4_158b4, 1
  store i32 %v5_158b4, i32* @r5, align 4
  %v0_158b8 = load i32, i32* %r3.global-to-local, align 4
  %v2_158b8 = icmp ugt i32 %v0_158b8, 9
  store i1 %v2_158b8, i1* %cpsr_c.global-to-local, align 1
  %v7_158b8 = icmp eq i32 %v0_158b8, 10
  store i1 %v7_158b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_158b8, label %dec_label_pc_158c8, label %dec_label_pc_158c0.backedge

dec_label_pc_158c0.backedge:                      ; preds = %dec_label_pc_158bc, %dec_label_pc_1587c
  %v0_158c0 = load i32, i32* %r6.global-to-local, align 4
  %v1_158c0 = add i32 %v0_158c0, -1
  store i32 %v1_158c0, i32* %r6.global-to-local, align 4
  %v2_158c0 = icmp ne i32 %v0_158c0, 0
  store i1 %v2_158c0, i1* %cpsr_c.global-to-local, align 1
  %v7_158c0 = icmp eq i32 %v0_158c0, 1
  store i1 %v7_158c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_158c0, label %dec_label_pc_158c8, label %dec_label_pc_158c0.backedge.dec_label_pc_1586c_crit_edge

dec_label_pc_158c0.backedge.dec_label_pc_1586c_crit_edge: ; preds = %dec_label_pc_158c0.backedge
  %v0_1586c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1586c

dec_label_pc_158c8:                               ; preds = %dec_label_pc_158bc, %dec_label_pc_158c0.backedge, %dec_label_pc_1587c, %dec_label_pc_158c0.preheader, %dec_label_pc_158a4
  %v0_158c8 = load i32, i32* @r5, align 4
  %v1_158c8 = load i32, i32* @r7, align 4
  %v3_158c8 = icmp uge i32 %v0_158c8, %v1_158c8
  store i1 %v3_158c8, i1* %cpsr_c.global-to-local, align 1
  %v9_158c8 = icmp eq i32 %v0_158c8, %v1_158c8
  store i1 %v9_158c8, i1* %cpsr_z.global-to-local, align 1
  %v2_158cc = xor i1 %v9_158c8, true
  %v3_158cc = and i1 %v3_158c8, %v2_158cc
  br i1 %v3_158cc, label %bb, label %.thread14

bb:                                               ; preds = %dec_label_pc_158c8
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_158d0 = inttoptr i32 %v0_158c8 to i8*
  store i8 0, i8* %v7_158d0, align 1
  %v0_158d4.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_158d4.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %.thread14

.thread14:                                        ; preds = %dec_label_pc_158c8, %bb
  %v1_158d4 = phi i1 [ %v1_158d4.pre, %bb ], [ %v9_158c8, %dec_label_pc_158c8 ]
  %v0_158d4 = phi i1 [ %v0_158d4.pre, %bb ], [ %v3_158c8, %dec_label_pc_158c8 ]
  %v2_158d4 = xor i1 %v1_158d4, true
  %v3_158d4 = and i1 %v0_158d4, %v2_158d4
  br i1 %v3_158d4, label %.dec_label_pc_158dc_crit_edge, label %dec_label_pc_158d8

.dec_label_pc_158dc_crit_edge:                    ; preds = %.thread14
  %v0_158dc.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_158dc

dec_label_pc_158d8:                               ; preds = %dec_label_pc_1584c, %dec_label_pc_158a4, %.thread14
  br label %dec_label_pc_158dc

dec_label_pc_158dc:                               ; preds = %.dec_label_pc_158dc_crit_edge, %dec_label_pc_158d8
  %v0_158dc = phi i32 [ %v0_158dc.pre, %.dec_label_pc_158dc_crit_edge ], [ 0, %dec_label_pc_158d8 ]
  store i32 %v6_1584c, i32* @r5, align 4
  ret i32 %v0_158dc

; uselistorder directives
  uselistorder i1 %v9_158c8, { 1, 0, 2 }
  uselistorder i32 %v1_158c8, { 1, 0 }
  uselistorder i32 %v0_158c8, { 0, 2, 1 }
  uselistorder i32 %v0_158c0, { 2, 0, 1 }
  uselistorder i32 %v0_158b8, { 1, 0 }
  uselistorder i32 %v3_15894, { 2, 1, 0, 3 }
  uselistorder i32 %v0_15884, { 1, 0 }
  uselistorder i32 %v3_1586c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_15890, { 0, 2, 1 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 3, 1 }
  uselistorder i32* %r3.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 7, 2, 3, 4, 5, 6, 9, 8 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 6, 2, 3, 4, 5, 8, 7 }
  uselistorder i32 (i16*)* @function_15720, { 0, 2, 3, 1 }
  uselistorder i1 true, { 0, 1, 66, 91, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 64, 26, 27, 28, 29, 30, 71, 70, 31, 92, 93, 83, 94, 95, 34, 96, 35, 36, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 32, 33, 107, 108, 109, 62, 65, 82, 81, 47, 48, 49, 110, 50, 51, 72, 73, 77, 74, 78, 68, 76, 111, 69, 80, 112, 37, 113, 38, 39, 40, 114, 84, 85, 41, 42, 115, 86, 87, 43, 44, 116, 88, 89, 45, 46, 67, 117, 118, 79, 119, 52, 75, 53, 54, 63, 55, 56, 57, 58, 59, 60, 61, 90 }
  uselistorder i32 %arg2, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_158dc, { 1, 0 }
  uselistorder label %dec_label_pc_158d8, { 2, 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %dec_label_pc_158c8, { 1, 0, 4, 2, 3 }
  uselistorder label %dec_label_pc_1586c, { 1, 0 }
}

define i32 @function_158f0() local_unnamed_addr {
dec_label_pc_158f0:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i8*, align 4
  %v0_158f0 = load i32, i32* @r1, align 4
  %v1_158f0 = load i32, i32* @r0, align 4
  %v2_158f0 = sub i32 %v0_158f0, %v1_158f0
  %v3_158f0 = icmp ult i32 %v0_158f0, %v1_158f0
  %v4_158f0 = xor i32 %v1_158f0, %v0_158f0
  %v5_158f0 = xor i32 %v2_158f0, %v0_158f0
  %v6_158f0 = and i32 %v5_158f0, %v4_158f0
  %v7_158f0 = icmp slt i32 %v6_158f0, 0
  store i1 %v7_158f0, i1* %cpsr_v.global-to-local, align 1
  %v8_158f0 = icmp slt i32 %v2_158f0, 0
  store i1 %v8_158f0, i1* %cpsr_n.global-to-local, align 1
  %v9_158f0 = icmp eq i32 %v0_158f0, %v1_158f0
  store i1 %v9_158f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_158f0, label %dec_label_pc_15b44, label %dec_label_pc_158f8

dec_label_pc_158f8:                               ; preds = %dec_label_pc_158f0
  br i1 %v9_158f0, label %.thread130, label %bb

.thread130:                                       ; preds = %bb153, %.thread129, %bb150, %dec_label_pc_158f8
  %merge = phi i32 [ %v0_158f0, %dec_label_pc_158f8 ], [ %v2_15bd8, %bb150 ], [ %v11_15bf4, %bb153 ], [ %v7_15bf4, %.thread129 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_158f8
  %v5_158fc = inttoptr i32 %v1_158f0 to i8*
  store i8* %v5_158fc, i8** %stack_var_-8, align 4
  %v8_158fc = load i32, i32* @lr, align 4
  %v0_15900 = load i32, i32* @r2, align 4
  %v2_15900 = add i32 %v0_15900, -4
  store i32 %v2_15900, i32* %r2.global-to-local, align 4
  %v4_15900 = sub i32 3, %v0_15900
  %v5_15900 = and i32 %v4_15900, %v0_15900
  %v6_15900 = icmp slt i32 %v5_15900, 0
  store i1 %v6_15900, i1* %cpsr_v.global-to-local, align 1
  %v7_15900 = icmp slt i32 %v2_15900, 0
  store i1 %v7_15900, i1* %cpsr_n.global-to-local, align 1
  %v8_15900 = icmp eq i32 %v0_15900, 4
  store i1 %v8_15900, i1* %cpsr_z.global-to-local, align 1
  %v5_15904 = icmp slt i32 %v0_15900, 4
  br i1 %v5_15904, label %bb140, label %dec_label_pc_15908

dec_label_pc_15908:                               ; preds = %bb
  %v1_15908 = urem i32 %v1_158f0, 4
  store i32 %v1_15908, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_15908 = icmp eq i32 %v1_15908, 0
  store i1 %v2_15908, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15908, label %dec_label_pc_15910, label %dec_label_pc_159bc

dec_label_pc_15910:                               ; preds = %dec_label_pc_15908
  %v1_15910 = urem i32 %v0_158f0, 4
  store i32 %v1_15910, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_15910 = icmp eq i32 %v1_15910, 0
  store i1 %v2_15910, i1* %cpsr_z.global-to-local, align 1
  %extract.t = trunc i32 %v0_158f0 to i2
  br i1 %v2_15910, label %dec_label_pc_15918, label %dec_label_pc_159ec

dec_label_pc_15918:                               ; preds = %dec_label_pc_15910, %dec_label_pc_159e4
  %v0_1593094 = phi i32 [ %v1_158f0, %dec_label_pc_15910 ], [ %v0_15b0c77, %dec_label_pc_159e4 ]
  %v0_1592c93 = phi i32 [ %v0_158f0, %dec_label_pc_15910 ], [ %v0_159e4, %dec_label_pc_159e4 ]
  %v0_15918 = phi i32 [ %v2_15900, %dec_label_pc_15910 ], [ %v2_159dc, %dec_label_pc_159e4 ]
  %v1_15918 = add i32 %v0_15918, -8
  store i32 %v1_15918, i32* %r2.global-to-local, align 4
  %v3_15918 = sub i32 7, %v0_15918
  %v4_15918 = and i32 %v3_15918, %v0_15918
  %v5_15918 = icmp slt i32 %v4_15918, 0
  store i1 %v5_15918, i1* %cpsr_v.global-to-local, align 1
  %v6_15918 = icmp slt i32 %v1_15918, 0
  store i1 %v6_15918, i1* %cpsr_n.global-to-local, align 1
  %v7_15918 = icmp eq i32 %v0_15918, 8
  store i1 %v7_15918, i1* %cpsr_z.global-to-local, align 1
  %v2_1591c = xor i1 %v6_15918, %v5_15918
  br i1 %v2_1591c, label %dec_label_pc_1596c, label %dec_label_pc_15920

dec_label_pc_15920:                               ; preds = %dec_label_pc_15918
  %v1_15920 = add i32 %v0_15918, -28
  store i32 %v1_15920, i32* %r2.global-to-local, align 4
  %v3_15920 = sub i32 27, %v0_15918
  %v4_15920 = and i32 %v3_15920, %v1_15918
  %v5_15920 = icmp slt i32 %v4_15920, 0
  store i1 %v5_15920, i1* %cpsr_v.global-to-local, align 1
  %v6_15920 = icmp slt i32 %v1_15920, 0
  store i1 %v6_15920, i1* %cpsr_n.global-to-local, align 1
  %v7_15920 = icmp eq i32 %v1_15918, 20
  store i1 %v7_15920, i1* %cpsr_z.global-to-local, align 1
  %v2_15924 = xor i1 %v6_15920, %v5_15920
  br i1 %v2_15924, label %dec_label_pc_15958, label %dec_label_pc_15928

dec_label_pc_15928:                               ; preds = %dec_label_pc_15920
  %v0_15928 = load i32, i32* @r4, align 4
  store i32 %v0_15928, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1592c

dec_label_pc_1592c:                               ; preds = %dec_label_pc_1592c.dec_label_pc_1592c_crit_edge, %dec_label_pc_15928
  %v0_15930 = phi i32 [ %v12_15938, %dec_label_pc_1592c.dec_label_pc_1592c_crit_edge ], [ %v0_1593094, %dec_label_pc_15928 ]
  %v0_1592c = phi i32 [ %v0_1592c.pre, %dec_label_pc_1592c.dec_label_pc_1592c_crit_edge ], [ %v0_1592c93, %dec_label_pc_15928 ]
  %v1_1592c = inttoptr i32 %v0_1592c to i32*
  %v2_1592c = load i32, i32* %v1_1592c, align 4
  %v3_1592c = add i32 %v0_1592c, 4
  %v4_1592c = inttoptr i32 %v3_1592c to i32*
  %v5_1592c = load i32, i32* %v4_1592c, align 4
  store i32 %v5_1592c, i32* %r4.global-to-local, align 4
  %v6_1592c = add i32 %v0_1592c, 8
  %v7_1592c = inttoptr i32 %v6_1592c to i32*
  %v8_1592c = load i32, i32* %v7_1592c, align 4
  store i32 %v8_1592c, i32* %ip.global-to-local, align 4
  %v9_1592c = add i32 %v0_1592c, 12
  %v10_1592c = inttoptr i32 %v9_1592c to i32*
  %v11_1592c = load i32, i32* %v10_1592c, align 4
  store i32 %v11_1592c, i32* %lr.global-to-local, align 4
  %v12_1592c = add i32 %v0_1592c, 16
  store i32 %v12_1592c, i32* %r1.global-to-local, align 4
  %v1_15930 = inttoptr i32 %v0_15930 to i32*
  store i32 %v2_1592c, i32* %v1_15930, align 4
  %v3_15930 = add i32 %v0_15930, 4
  %v4_15930 = inttoptr i32 %v3_15930 to i32*
  %v5_15930 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_15930, i32* %v4_15930, align 4
  %v6_15930 = add i32 %v0_15930, 8
  %v7_15930 = inttoptr i32 %v6_15930 to i32*
  %v8_15930 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_15930, i32* %v7_15930, align 4
  %v9_15930 = add i32 %v0_15930, 12
  %v10_15930 = inttoptr i32 %v9_15930 to i32*
  %v11_15930 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_15930, i32* %v10_15930, align 4
  %v12_15930 = add i32 %v0_15930, 16
  store i32 %v12_15930, i32* %r0.global-to-local, align 4
  %v0_15934 = load i32, i32* %r1.global-to-local, align 4
  %v1_15934 = inttoptr i32 %v0_15934 to i32*
  %v2_15934 = load i32, i32* %v1_15934, align 4
  store i32 %v2_15934, i32* @r3, align 4
  %v3_15934 = add i32 %v0_15934, 4
  %v4_15934 = inttoptr i32 %v3_15934 to i32*
  %v5_15934 = load i32, i32* %v4_15934, align 4
  store i32 %v5_15934, i32* %r4.global-to-local, align 4
  %v6_15934 = add i32 %v0_15934, 8
  %v7_15934 = inttoptr i32 %v6_15934 to i32*
  %v8_15934 = load i32, i32* %v7_15934, align 4
  store i32 %v8_15934, i32* @ip, align 4
  %v9_15934 = add i32 %v0_15934, 12
  %v10_15934 = inttoptr i32 %v9_15934 to i32*
  %v11_15934 = load i32, i32* %v10_15934, align 4
  store i32 %v11_15934, i32* %lr.global-to-local, align 4
  %v12_15934 = add i32 %v0_15934, 16
  store i32 %v12_15934, i32* @r1, align 4
  %v1_15938 = inttoptr i32 %v12_15930 to i32*
  store i32 %v2_15934, i32* %v1_15938, align 4
  %v3_15938 = add i32 %v0_15930, 20
  %v4_15938 = inttoptr i32 %v3_15938 to i32*
  %v5_15938 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_15938, i32* %v4_15938, align 4
  %v6_15938 = add i32 %v0_15930, 24
  %v7_15938 = inttoptr i32 %v6_15938 to i32*
  %v8_15938 = load i32, i32* @ip, align 4
  store i32 %v8_15938, i32* %v7_15938, align 4
  %v9_15938 = add i32 %v0_15930, 28
  %v10_15938 = inttoptr i32 %v9_15938 to i32*
  %v11_15938 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_15938, i32* %v10_15938, align 4
  %v12_15938 = add i32 %v0_15930, 32
  store i32 %v12_15938, i32* @r0, align 4
  %v0_1593c = load i32, i32* %r2.global-to-local, align 4
  %v1_1593c = add i32 %v0_1593c, -32
  store i32 %v1_1593c, i32* %r2.global-to-local, align 4
  %v3_1593c = sub i32 31, %v0_1593c
  %v4_1593c = and i32 %v3_1593c, %v0_1593c
  %v5_1593c = icmp slt i32 %v4_1593c, 0
  %v6_1593c = icmp slt i32 %v1_1593c, 0
  %v2_15940 = xor i1 %v6_1593c, %v5_1593c
  br i1 %v2_15940, label %dec_label_pc_15944, label %dec_label_pc_1592c.dec_label_pc_1592c_crit_edge

dec_label_pc_1592c.dec_label_pc_1592c_crit_edge:  ; preds = %dec_label_pc_1592c
  %v0_1592c.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_1592c

dec_label_pc_15944:                               ; preds = %dec_label_pc_1592c
  %v1_15944 = add i32 %v0_1593c, -16
  %v3_15944 = add i32 %v0_1593c, 2147483616
  %v4_15944 = and i32 %v1_15944, %v3_15944
  %v5_15944 = icmp slt i32 %v4_15944, 0
  store i1 %v5_15944, i1* %cpsr_v.global-to-local, align 1
  %v6_15944 = icmp slt i32 %v1_15944, 0
  store i1 %v6_15944, i1* %cpsr_n.global-to-local, align 1
  %v7_15944 = icmp eq i32 %v1_15944, 0
  store i1 %v7_15944, i1* %cpsr_z.global-to-local, align 1
  %v2_15948 = xor i1 %v6_15944, %v5_15944
  br i1 %v2_15948, label %bb137, label %bb136

bb136:                                            ; preds = %dec_label_pc_15944
  %v3_15948 = load i32, i32* @r1, align 4
  %v4_15948 = inttoptr i32 %v3_15948 to i32*
  %v5_15948 = load i32, i32* %v4_15948, align 4
  store i32 %v5_15948, i32* @r3, align 4
  %v6_15948 = add i32 %v3_15948, 4
  %v7_15948 = inttoptr i32 %v6_15948 to i32*
  %v8_15948 = load i32, i32* %v7_15948, align 4
  store i32 %v8_15948, i32* %r4.global-to-local, align 4
  %v9_15948 = add i32 %v3_15948, 8
  %v10_15948 = inttoptr i32 %v9_15948 to i32*
  %v11_15948 = load i32, i32* %v10_15948, align 4
  store i32 %v11_15948, i32* @ip, align 4
  %v12_15948 = add i32 %v3_15948, 12
  %v13_15948 = inttoptr i32 %v12_15948 to i32*
  %v14_15948 = load i32, i32* %v13_15948, align 4
  store i32 %v14_15948, i32* %lr.global-to-local, align 4
  %v15_15948 = add i32 %v3_15948, 16
  store i32 %v15_15948, i32* @r1, align 4
  %v4_1594c = inttoptr i32 %v12_15938 to i32*
  store i32 %v5_15948, i32* %v4_1594c, align 4
  %v6_1594c = add i32 %v0_15930, 36
  %v7_1594c = inttoptr i32 %v6_1594c to i32*
  %v8_1594c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v8_1594c, i32* %v7_1594c, align 4
  %v9_1594c = add i32 %v0_15930, 40
  %v10_1594c = inttoptr i32 %v9_1594c to i32*
  %v11_1594c = load i32, i32* @ip, align 4
  store i32 %v11_1594c, i32* %v10_1594c, align 4
  %v12_1594c = add i32 %v0_15930, 44
  %v13_1594c = inttoptr i32 %v12_1594c to i32*
  %v14_1594c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v14_1594c, i32* %v13_1594c, align 4
  %v15_1594c = add i32 %v0_15930, 48
  store i32 %v15_1594c, i32* @r0, align 4
  %v3_15950 = load i32, i32* %r2.global-to-local, align 4
  %v4_15950 = add i32 %v3_15950, -16
  store i32 %v4_15950, i32* %r2.global-to-local, align 4
  br label %bb137

bb137:                                            ; preds = %dec_label_pc_15944, %bb136
  %v3_15960102111 = phi i32 [ %v15_1594c, %bb136 ], [ %v12_15938, %dec_label_pc_15944 ]
  %v0_15958.pre = phi i32 [ %v4_15950, %bb136 ], [ %v1_1593c, %dec_label_pc_15944 ]
  %v2_15954 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_15954, i32* @r4, align 4
  br label %dec_label_pc_15958

dec_label_pc_15958:                               ; preds = %dec_label_pc_15920, %bb137
  %v3_15960101 = phi i32 [ %v0_1593094, %dec_label_pc_15920 ], [ %v3_15960102111, %bb137 ]
  %v0_15958 = phi i32 [ %v1_15920, %dec_label_pc_15920 ], [ %v0_15958.pre, %bb137 ]
  %v1_15958 = add i32 %v0_15958, 20
  store i32 %v1_15958, i32* %r2.global-to-local, align 4
  %v3_15958 = sub i32 0, %v0_15958
  %v4_15958 = and i32 %v1_15958, %v3_15958
  %v5_15958 = icmp slt i32 %v4_15958, 0
  store i1 %v5_15958, i1* %cpsr_v.global-to-local, align 1
  %v6_15958 = icmp slt i32 %v1_15958, 0
  store i1 %v6_15958, i1* %cpsr_n.global-to-local, align 1
  %v7_15958 = icmp eq i32 %v1_15958, 0
  store i1 %v7_15958, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1595c

dec_label_pc_1595c:                               ; preds = %.thread115, %dec_label_pc_15958
  %v0_1596c.pre157 = phi i32 [ %v0_1596c.pre, %.thread115 ], [ %v1_15958, %dec_label_pc_15958 ]
  %v3_15960 = phi i32 [ %v3_1596099116, %.thread115 ], [ %v3_15960101, %dec_label_pc_15958 ]
  %v1_15964 = phi i1 [ %v1_15968, %.thread115 ], [ %v5_15958, %dec_label_pc_15958 ]
  %v0_15964 = phi i1 [ %v0_15968, %.thread115 ], [ %v6_15958, %dec_label_pc_15958 ]
  %v2_1595c = xor i1 %v1_15964, %v0_15964
  br i1 %v2_1595c, label %.thread115, label %bb138

bb138:                                            ; preds = %dec_label_pc_1595c
  %v3_1595c = load i32, i32* @r1, align 4
  %v4_1595c = inttoptr i32 %v3_1595c to i32*
  %v5_1595c = load i32, i32* %v4_1595c, align 4
  store i32 %v5_1595c, i32* @r3, align 4
  %v6_1595c = add i32 %v3_1595c, 4
  %v7_1595c = inttoptr i32 %v6_1595c to i32*
  %v8_1595c = load i32, i32* %v7_1595c, align 4
  store i32 %v8_1595c, i32* @ip, align 4
  %v9_1595c = add i32 %v3_1595c, 8
  %v10_1595c = inttoptr i32 %v9_1595c to i32*
  %v11_1595c = load i32, i32* %v10_1595c, align 4
  store i32 %v11_1595c, i32* %lr.global-to-local, align 4
  %v12_1595c = add i32 %v3_1595c, 12
  store i32 %v12_1595c, i32* @r1, align 4
  %v4_15960 = inttoptr i32 %v3_15960 to i32*
  store i32 %v5_1595c, i32* %v4_15960, align 4
  %v6_15960 = add i32 %v3_15960, 4
  %v7_15960 = inttoptr i32 %v6_15960 to i32*
  %v8_15960 = load i32, i32* @ip, align 4
  store i32 %v8_15960, i32* %v7_15960, align 4
  %v9_15960 = add i32 %v3_15960, 8
  %v10_15960 = inttoptr i32 %v9_15960 to i32*
  %v11_15960 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_15960, i32* %v10_15960, align 4
  %v12_15960 = add i32 %v3_15960, 12
  store i32 %v12_15960, i32* @r0, align 4
  %v3_15964 = load i32, i32* %r2.global-to-local, align 4
  %v4_15964 = add i32 %v3_15964, -12
  store i32 %v4_15964, i32* %r2.global-to-local, align 4
  %v6_15964 = sub i32 11, %v3_15964
  %v7_15964 = and i32 %v6_15964, %v3_15964
  %v8_15964 = icmp slt i32 %v7_15964, 0
  store i1 %v8_15964, i1* %cpsr_v.global-to-local, align 1
  %v9_15964 = icmp slt i32 %v4_15964, 0
  store i1 %v9_15964, i1* %cpsr_n.global-to-local, align 1
  %v10_15964 = icmp eq i32 %v3_15964, 12
  store i1 %v10_15964, i1* %cpsr_z.global-to-local, align 1
  br label %.thread115

.thread115:                                       ; preds = %dec_label_pc_1595c, %bb138
  %v0_1596c.pre = phi i32 [ %v4_15964, %bb138 ], [ %v0_1596c.pre157, %dec_label_pc_1595c ]
  %v3_1596099116 = phi i32 [ %v12_15960, %bb138 ], [ %v3_15960, %dec_label_pc_1595c ]
  %v1_15968 = phi i1 [ %v8_15964, %bb138 ], [ %v1_15964, %dec_label_pc_1595c ]
  %v0_15968 = phi i1 [ %v9_15964, %bb138 ], [ %v0_15964, %dec_label_pc_1595c ]
  %v2_15968 = xor i1 %v1_15968, %v0_15968
  br i1 %v2_15968, label %dec_label_pc_1596c, label %dec_label_pc_1595c

dec_label_pc_1596c:                               ; preds = %.thread115, %dec_label_pc_15918
  %v4_1597c = phi i32 [ %v0_1593094, %dec_label_pc_15918 ], [ %v3_1596099116, %.thread115 ]
  %v0_1596c = phi i32 [ %v1_15918, %dec_label_pc_15918 ], [ %v0_1596c.pre, %.thread115 ]
  %v1_1596c = add i32 %v0_1596c, 8
  store i32 %v1_1596c, i32* %r2.global-to-local, align 4
  %v3_1596c = sub i32 0, %v0_1596c
  %v4_1596c = and i32 %v1_1596c, %v3_1596c
  %v5_1596c = icmp slt i32 %v4_1596c, 0
  store i1 %v5_1596c, i1* %cpsr_v.global-to-local, align 1
  %v6_1596c = icmp slt i32 %v1_1596c, 0
  store i1 %v6_1596c, i1* %cpsr_n.global-to-local, align 1
  %v7_1596c = icmp eq i32 %v1_1596c, 0
  store i1 %v7_1596c, i1* %cpsr_z.global-to-local, align 1
  %v2_15970 = xor i1 %v6_1596c, %v5_1596c
  br i1 %v2_15970, label %bb140, label %dec_label_pc_15974

dec_label_pc_15974:                               ; preds = %dec_label_pc_1596c
  %v1_15974 = add i32 %v0_1596c, 4
  store i32 %v1_15974, i32* %r2.global-to-local, align 4
  %v3_15974 = sub i32 -5, %v0_1596c
  %v4_15974 = and i32 %v3_15974, %v1_1596c
  %v5_15974 = icmp slt i32 %v4_15974, 0
  store i1 %v5_15974, i1* %cpsr_v.global-to-local, align 1
  %v6_15974 = icmp slt i32 %v1_15974, 0
  store i1 %v6_15974, i1* %cpsr_n.global-to-local, align 1
  %v7_15974 = icmp eq i32 %v1_1596c, 4
  store i1 %v7_15974, i1* %cpsr_z.global-to-local, align 1
  %v2_15978 = xor i1 %v6_15974, %v5_15974
  %v3_15978 = load i32, i32* @r1, align 4
  %v4_15978 = inttoptr i32 %v3_15978 to i32*
  %v5_15978 = load i32, i32* %v4_15978, align 4
  store i32 %v5_15978, i32* @r3, align 4
  %v7_15978 = add i32 %v3_15978, 4
  br i1 %v2_15978, label %.thread122, label %bb139

.thread122:                                       ; preds = %dec_label_pc_15974
  store i32 %v7_15978, i32* @r1, align 4
  %v5_1597c = inttoptr i32 %v4_1597c to i32*
  store i32 %v5_15978, i32* %v5_1597c, align 4
  %v6_1597c = load i32, i32* @r0, align 4
  %v7_1597c = add i32 %v6_1597c, 4
  store i32 %v7_1597c, i32* @r0, align 4
  %v0_1598c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb140

bb139:                                            ; preds = %dec_label_pc_15974
  %v7_15980 = inttoptr i32 %v7_15978 to i32*
  %v8_15980 = load i32, i32* %v7_15980, align 4
  store i32 %v8_15980, i32* @ip, align 4
  %v9_15980 = add i32 %v3_15978, 8
  store i32 %v9_15980, i32* @r1, align 4
  %v4_15984 = inttoptr i32 %v4_1597c to i32*
  store i32 %v5_15978, i32* %v4_15984, align 4
  %v6_15984 = add i32 %v4_1597c, 4
  %v7_15984 = inttoptr i32 %v6_15984 to i32*
  %v8_15984 = load i32, i32* @ip, align 4
  store i32 %v8_15984, i32* %v7_15984, align 4
  %v9_15984 = add i32 %v4_1597c, 8
  store i32 %v9_15984, i32* @r0, align 4
  %v3_15988 = load i32, i32* %r2.global-to-local, align 4
  %v4_15988 = add i32 %v3_15988, -4
  store i32 %v4_15988, i32* %r2.global-to-local, align 4
  br label %bb140

bb140:                                            ; preds = %.thread122, %.thread128, %dec_label_pc_1596c, %bb, %dec_label_pc_15b3c, %dec_label_pc_15ad0, %dec_label_pc_15a64, %bb139
  %v0_1598c = phi i32 [ %v0_1598c.pre, %.thread122 ], [ %v2_159dc, %.thread128 ], [ %v1_1596c, %dec_label_pc_1596c ], [ %v2_15900, %bb ], [ %v0_1598c61, %dec_label_pc_15b3c ], [ %v0_1598c60, %dec_label_pc_15ad0 ], [ %v0_1598c59, %dec_label_pc_15a64 ], [ %v4_15988, %bb139 ]
  %v1_1598c = add i32 %v0_1598c, 4
  store i32 %v1_1598c, i32* %r2.global-to-local, align 4
  %v3_1598c = sub i32 0, %v0_1598c
  %v4_1598c = and i32 %v1_1598c, %v3_1598c
  %v5_1598c = icmp slt i32 %v4_1598c, 0
  store i1 %v5_1598c, i1* %cpsr_v.global-to-local, align 1
  %v6_1598c = icmp slt i32 %v1_1598c, 0
  store i1 %v6_1598c, i1* %cpsr_n.global-to-local, align 1
  %v7_1598c = icmp eq i32 %v1_1598c, 0
  store i1 %v7_1598c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1598c, label %bb141, label %bb140.bb142_crit_edge

bb140.bb142_crit_edge:                            ; preds = %bb140
  %v0_15994.pre = load i32, i32* @r3, align 4
  br label %bb142

bb141:                                            ; preds = %bb140
  %v3_15990 = load i8*, i8** %stack_var_-8, align 4
  %v4_15990 = ptrtoint i8* %v3_15990 to i32
  store i32 %v4_15990, i32* @r0, align 4
  br label %bb142

bb142:                                            ; preds = %bb140.bb142_crit_edge, %bb141
  %v0_15994 = phi i32 [ %v0_15994.pre, %bb140.bb142_crit_edge ], [ %v8_158fc, %bb141 ]
  call void @__pseudo_cond_branch(i1 %v7_1598c, i32 %v0_15994)
  %v0_15998 = load i32, i32* %r2.global-to-local, align 4
  %v1_15998 = add i32 %v0_15998, -2
  %v3_15998 = sub i32 1, %v0_15998
  %v4_15998 = and i32 %v3_15998, %v0_15998
  %v5_15998 = icmp slt i32 %v4_15998, 0
  store i1 %v5_15998, i1* %cpsr_v.global-to-local, align 1
  %v6_15998 = icmp slt i32 %v1_15998, 0
  store i1 %v6_15998, i1* %cpsr_n.global-to-local, align 1
  %v7_15998 = icmp eq i32 %v0_15998, 2
  store i1 %v7_15998, i1* %cpsr_z.global-to-local, align 1
  %v0_1599c = load i32, i32* @r1, align 4
  %v1_1599c = inttoptr i32 %v0_1599c to i8*
  %v2_1599c = load i8, i8* %v1_1599c, align 1
  %v5_1599c = add i32 %v0_1599c, 1
  store i32 %v5_1599c, i32* %r1.global-to-local, align 4
  %v2_159a0 = load i32, i32* @r0, align 4
  %v3_159a0 = inttoptr i32 %v2_159a0 to i8*
  store i8 %v2_1599c, i8* %v3_159a0, align 1
  %v4_159a0 = load i32, i32* @r0, align 4
  %v5_159a0 = add i32 %v4_159a0, 1
  store i32 %v5_159a0, i32* %r0.global-to-local, align 4
  %v0_159a4 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_159a4 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_159a4 = xor i1 %v0_159a4, %v1_159a4
  br i1 %v2_159a4, label %.thread125, label %bb143

bb143:                                            ; preds = %bb142
  %v3_159a4 = load i32, i32* %r1.global-to-local, align 4
  %v4_159a4 = inttoptr i32 %v3_159a4 to i8*
  %v5_159a4 = load i8, i8* %v4_159a4, align 1
  %v8_159a4 = add i32 %v3_159a4, 1
  store i32 %v8_159a4, i32* %r1.global-to-local, align 4
  %v6_159a8 = inttoptr i32 %v5_159a0 to i8*
  store i8 %v5_159a4, i8* %v6_159a8, align 1
  %v7_159a8 = load i32, i32* %r0.global-to-local, align 4
  %v8_159a8 = add i32 %v7_159a8, 1
  store i32 %v8_159a8, i32* %r0.global-to-local, align 4
  %v1_159ac.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_159ac.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread125

.thread125:                                       ; preds = %bb142, %bb143
  %v7_159b0 = phi i32 [ %v8_159a8, %bb143 ], [ %v5_159a0, %bb142 ]
  %v2_159b0 = phi i1 [ %v2_159ac.pre, %bb143 ], [ %v1_159a4, %bb142 ]
  %v1_159b0 = phi i1 [ %v1_159ac.pre, %bb143 ], [ %v0_159a4, %bb142 ]
  %v0_159ac = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_159ac = xor i1 %v2_159b0, %v1_159b0
  %v4_159ac = or i1 %v0_159ac, %v3_159ac
  br i1 %v4_159ac, label %.thread126, label %bb144

bb144:                                            ; preds = %.thread125
  %v5_159ac = load i32, i32* %r1.global-to-local, align 4
  %v6_159ac = inttoptr i32 %v5_159ac to i8*
  %v7_159ac = load i8, i8* %v6_159ac, align 1
  %v10_159ac = add i32 %v5_159ac, 1
  store i32 %v10_159ac, i32* %r1.global-to-local, align 4
  %v8_159b0 = inttoptr i32 %v7_159b0 to i8*
  store i8 %v7_159ac, i8* %v8_159b0, align 1
  %v9_159b0 = load i32, i32* %r0.global-to-local, align 4
  %v10_159b0 = add i32 %v9_159b0, 1
  store i32 %v10_159b0, i32* %r0.global-to-local, align 4
  br label %.thread126

.thread126:                                       ; preds = %.thread125, %bb144
  %v2_159b4 = load i8*, i8** %stack_var_-8, align 4
  %v3_159b4 = ptrtoint i8* %v2_159b4 to i32
  store i32 %v3_159b4, i32* @r0, align 4
  call void @__pseudo_branch(i32 %v8_158fc)
  %v0_159bc.pre = load i32, i32* @ip, align 4
  %v0_159c4.pre = load i32, i32* %r1.global-to-local, align 4
  %v2_159c8.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_159bc

dec_label_pc_159bc:                               ; preds = %dec_label_pc_15908, %.thread126
  %v2_159c8 = phi i32 [ %v1_158f0, %dec_label_pc_15908 ], [ %v2_159c8.pre, %.thread126 ]
  %v0_159c4 = phi i32 [ %v0_158f0, %dec_label_pc_15908 ], [ %v0_159c4.pre, %.thread126 ]
  %v0_159bc = phi i32 [ %v1_15908, %dec_label_pc_15908 ], [ %v0_159bc.pre, %.thread126 ]
  %v1_159bc = sub i32 4, %v0_159bc
  store i32 %v1_159bc, i32* @ip, align 4
  %v1_159c0 = add i32 %v1_159bc, -2
  %v3_159c0 = sub i32 1, %v1_159bc
  %v4_159c0 = and i32 %v3_159c0, %v1_159bc
  %v5_159c0 = icmp slt i32 %v4_159c0, 0
  store i1 %v5_159c0, i1* %cpsr_v.global-to-local, align 1
  %v6_159c0 = icmp slt i32 %v1_159c0, 0
  store i1 %v6_159c0, i1* %cpsr_n.global-to-local, align 1
  %v7_159c0 = icmp eq i32 %v1_159bc, 2
  store i1 %v7_159c0, i1* %cpsr_z.global-to-local, align 1
  %v1_159c4 = inttoptr i32 %v0_159c4 to i8*
  %v2_159c4 = load i8, i8* %v1_159c4, align 1
  %v3_159c4 = zext i8 %v2_159c4 to i32
  store i32 %v3_159c4, i32* @r3, align 4
  %v5_159c4 = add i32 %v0_159c4, 1
  store i32 %v5_159c4, i32* @r1, align 4
  %v3_159c8 = inttoptr i32 %v2_159c8 to i8*
  store i8 %v2_159c4, i8* %v3_159c8, align 1
  %v4_159c8 = load i32, i32* @r0, align 4
  %v5_159c8 = add i32 %v4_159c8, 1
  store i32 %v5_159c8, i32* @r0, align 4
  %v0_159cc = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_159cc = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_159cc = xor i1 %v0_159cc, %v1_159cc
  br i1 %v2_159cc, label %.thread127, label %bb145

bb145:                                            ; preds = %dec_label_pc_159bc
  %v3_159cc = load i32, i32* @r1, align 4
  %v4_159cc = inttoptr i32 %v3_159cc to i8*
  %v5_159cc = load i8, i8* %v4_159cc, align 1
  %v6_159cc = zext i8 %v5_159cc to i32
  store i32 %v6_159cc, i32* @r3, align 4
  %v8_159cc = add i32 %v3_159cc, 1
  store i32 %v8_159cc, i32* @r1, align 4
  %v6_159d0 = inttoptr i32 %v5_159c8 to i8*
  store i8 %v5_159cc, i8* %v6_159d0, align 1
  %v7_159d0 = load i32, i32* @r0, align 4
  %v8_159d0 = add i32 %v7_159d0, 1
  store i32 %v8_159d0, i32* @r0, align 4
  %v1_159d4.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_159d4.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread127

.thread127:                                       ; preds = %dec_label_pc_159bc, %bb145
  %v7_159d8 = phi i32 [ %v8_159d0, %bb145 ], [ %v5_159c8, %dec_label_pc_159bc ]
  %v2_159d8 = phi i1 [ %v2_159d4.pre, %bb145 ], [ %v1_159cc, %dec_label_pc_159bc ]
  %v1_159d8 = phi i1 [ %v1_159d4.pre, %bb145 ], [ %v0_159cc, %dec_label_pc_159bc ]
  %v0_159d4 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_159d4 = xor i1 %v2_159d8, %v1_159d8
  %v4_159d4 = or i1 %v0_159d4, %v3_159d4
  br i1 %v4_159d4, label %.thread128, label %bb146

bb146:                                            ; preds = %.thread127
  %v5_159d4 = load i32, i32* @r1, align 4
  %v6_159d4 = inttoptr i32 %v5_159d4 to i8*
  %v7_159d4 = load i8, i8* %v6_159d4, align 1
  %v8_159d4 = zext i8 %v7_159d4 to i32
  store i32 %v8_159d4, i32* @r3, align 4
  %v10_159d4 = add i32 %v5_159d4, 1
  store i32 %v10_159d4, i32* @r1, align 4
  %v8_159d8 = inttoptr i32 %v7_159d8 to i8*
  store i8 %v7_159d4, i8* %v8_159d8, align 1
  %v9_159d8 = load i32, i32* @r0, align 4
  %v10_159d8 = add i32 %v9_159d8, 1
  store i32 %v10_159d8, i32* @r0, align 4
  br label %.thread128

.thread128:                                       ; preds = %.thread127, %bb146
  %v0_15b0c77 = phi i32 [ %v10_159d8, %bb146 ], [ %v7_159d8, %.thread127 ]
  %v0_159dc = load i32, i32* %r2.global-to-local, align 4
  %v1_159dc = load i32, i32* @ip, align 4
  %v2_159dc = sub i32 %v0_159dc, %v1_159dc
  store i32 %v2_159dc, i32* %r2.global-to-local, align 4
  %v4_159dc = xor i32 %v1_159dc, %v0_159dc
  %v5_159dc = xor i32 %v2_159dc, %v0_159dc
  %v6_159dc = and i32 %v5_159dc, %v4_159dc
  %v7_159dc = icmp slt i32 %v6_159dc, 0
  store i1 %v7_159dc, i1* %cpsr_v.global-to-local, align 1
  %v8_159dc = icmp slt i32 %v2_159dc, 0
  store i1 %v8_159dc, i1* %cpsr_n.global-to-local, align 1
  %v9_159dc = icmp eq i32 %v0_159dc, %v1_159dc
  store i1 %v9_159dc, i1* %cpsr_z.global-to-local, align 1
  %v2_159e0 = xor i1 %v8_159dc, %v7_159dc
  br i1 %v2_159e0, label %bb140, label %dec_label_pc_159e4

dec_label_pc_159e4:                               ; preds = %.thread128
  %v0_159e4 = load i32, i32* @r1, align 4
  %v1_159e4 = urem i32 %v0_159e4, 4
  store i32 %v1_159e4, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_159e4 = icmp eq i32 %v1_159e4, 0
  store i1 %v2_159e4, i1* %cpsr_z.global-to-local, align 1
  %extract.t131 = trunc i32 %v0_159e4 to i2
  br i1 %v2_159e4, label %dec_label_pc_15918, label %dec_label_pc_159ec

dec_label_pc_159ec:                               ; preds = %dec_label_pc_15910, %dec_label_pc_159e4
  %v0_15b0c76 = phi i32 [ %v1_158f0, %dec_label_pc_15910 ], [ %v0_15b0c77, %dec_label_pc_159e4 ]
  %v0_15a74 = phi i32 [ %v2_15900, %dec_label_pc_15910 ], [ %v2_159dc, %dec_label_pc_159e4 ]
  %v0_159f4.off0 = phi i2 [ %extract.t, %dec_label_pc_15910 ], [ %extract.t131, %dec_label_pc_159e4 ]
  %v0_159ec = phi i32 [ %v0_158f0, %dec_label_pc_15910 ], [ %v0_159e4, %dec_label_pc_159e4 ]
  %v1_159ec = and i32 %v0_159ec, -4
  store i32 %v1_159ec, i32* %r1.global-to-local, align 4
  %v1_159f0 = inttoptr i32 %v1_159ec to i32*
  %v2_159f0 = load i32, i32* %v1_159f0, align 4
  store i32 %v2_159f0, i32* %lr.global-to-local, align 4
  %v4_159f0 = add i32 %v1_159ec, 4
  store i32 %v4_159f0, i32* %r1.global-to-local, align 4
  %v1_15a6c = add i32 %v0_15a74, -12
  %v3_15a6c = sub i32 11, %v0_15a74
  %v4_15a6c = and i32 %v3_15a6c, %v0_15a74
  %v5_15a6c = icmp slt i32 %v4_15a6c, 0
  store i1 %v5_15a6c, i1* %cpsr_v.global-to-local, align 1
  %v6_15a6c = icmp slt i32 %v1_15a6c, 0
  store i1 %v6_15a6c, i1* %cpsr_n.global-to-local, align 1
  %v7_15a6c = icmp eq i32 %v0_15a74, 12
  store i1 %v7_15a6c, i1* %cpsr_z.global-to-local, align 1
  %v2_15a70 = xor i1 %v6_15a6c, %v5_15a6c
  switch i2 %v0_159f4.off0, label %dec_label_pc_15a00 [
    i2 -1, label %dec_label_pc_15ad8
    i2 -2, label %dec_label_pc_15a6c
  ]

dec_label_pc_15a00:                               ; preds = %dec_label_pc_159ec
  br i1 %v2_15a70, label %dec_label_pc_15a4c, label %dec_label_pc_15a08

dec_label_pc_15a08:                               ; preds = %dec_label_pc_15a00
  store i32 %v1_15a6c, i32* %r2.global-to-local, align 4
  %v3_15a0c = load i32, i32* @r4, align 4
  store i32 %v3_15a0c, i32* %stack_var_-16, align 4
  %v6_15a0c = load i32, i32* @r5, align 4
  store i32 %v6_15a0c, i32* %stack_var_-12, align 4
  br label %dec_label_pc_15a10

dec_label_pc_15a10:                               ; preds = %dec_label_pc_15a10.dec_label_pc_15a10_crit_edge, %dec_label_pc_15a08
  %v0_15a34 = phi i32 [ %v12_15a34, %dec_label_pc_15a10.dec_label_pc_15a10_crit_edge ], [ %v0_15b0c76, %dec_label_pc_15a08 ]
  %v0_15a14 = phi i32 [ %v0_15a14.pre, %dec_label_pc_15a10.dec_label_pc_15a10_crit_edge ], [ %v4_159f0, %dec_label_pc_15a08 ]
  %v0_15a10 = phi i32 [ %v0_15a10.pre, %dec_label_pc_15a10.dec_label_pc_15a10_crit_edge ], [ %v2_159f0, %dec_label_pc_15a08 ]
  %v3_15a10 = udiv i32 %v0_15a10, 256
  %v1_15a14 = inttoptr i32 %v0_15a14 to i32*
  %v2_15a14 = load i32, i32* %v1_15a14, align 4
  store i32 %v2_15a14, i32* %r4.global-to-local, align 4
  %v3_15a14 = add i32 %v0_15a14, 4
  %v4_15a14 = inttoptr i32 %v3_15a14 to i32*
  %v5_15a14 = load i32, i32* %v4_15a14, align 4
  store i32 %v5_15a14, i32* %r5.global-to-local, align 4
  %v6_15a14 = add i32 %v0_15a14, 8
  %v7_15a14 = inttoptr i32 %v6_15a14 to i32*
  %v8_15a14 = load i32, i32* %v7_15a14, align 4
  store i32 %v8_15a14, i32* %ip.global-to-local, align 4
  %v9_15a14 = add i32 %v0_15a14, 12
  %v10_15a14 = inttoptr i32 %v9_15a14 to i32*
  %v11_15a14 = load i32, i32* %v10_15a14, align 4
  store i32 %v11_15a14, i32* %lr.global-to-local, align 4
  %v12_15a14 = add i32 %v0_15a14, 16
  store i32 %v12_15a14, i32* %r1.global-to-local, align 4
  %v4_15a18 = mul i32 %v2_15a14, 16777216
  %v5_15a18 = or i32 %v4_15a18, %v3_15a10
  store i32 %v5_15a18, i32* @r3, align 4
  %v3_15a1c = udiv i32 %v2_15a14, 256
  %v4_15a20 = mul i32 %v5_15a14, 16777216
  %v5_15a20 = or i32 %v4_15a20, %v3_15a1c
  store i32 %v5_15a20, i32* %r4.global-to-local, align 4
  %v3_15a24 = udiv i32 %v5_15a14, 256
  %v4_15a28 = mul i32 %v8_15a14, 16777216
  %v5_15a28 = or i32 %v4_15a28, %v3_15a24
  store i32 %v5_15a28, i32* %r5.global-to-local, align 4
  %v3_15a2c = udiv i32 %v8_15a14, 256
  %v4_15a30 = mul i32 %v11_15a14, 16777216
  %v5_15a30 = or i32 %v4_15a30, %v3_15a2c
  store i32 %v5_15a30, i32* @ip, align 4
  %v1_15a34 = inttoptr i32 %v0_15a34 to i32*
  store i32 %v5_15a18, i32* %v1_15a34, align 4
  %v3_15a34 = add i32 %v0_15a34, 4
  %v4_15a34 = inttoptr i32 %v3_15a34 to i32*
  %v5_15a34 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_15a34, i32* %v4_15a34, align 4
  %v6_15a34 = add i32 %v0_15a34, 8
  %v7_15a34 = inttoptr i32 %v6_15a34 to i32*
  %v8_15a34 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_15a34, i32* %v7_15a34, align 4
  %v9_15a34 = add i32 %v0_15a34, 12
  %v10_15a34 = inttoptr i32 %v9_15a34 to i32*
  %v11_15a34 = load i32, i32* @ip, align 4
  store i32 %v11_15a34, i32* %v10_15a34, align 4
  %v12_15a34 = add i32 %v0_15a34, 16
  store i32 %v12_15a34, i32* @r0, align 4
  %v0_15a38 = load i32, i32* %r2.global-to-local, align 4
  %v1_15a38 = add i32 %v0_15a38, -16
  store i32 %v1_15a38, i32* %r2.global-to-local, align 4
  %v3_15a38 = sub i32 15, %v0_15a38
  %v4_15a38 = and i32 %v3_15a38, %v0_15a38
  %v5_15a38 = icmp slt i32 %v4_15a38, 0
  %v6_15a38 = icmp slt i32 %v1_15a38, 0
  %v2_15a3c = xor i1 %v6_15a38, %v5_15a38
  br i1 %v2_15a3c, label %dec_label_pc_15a40, label %dec_label_pc_15a10.dec_label_pc_15a10_crit_edge

dec_label_pc_15a10.dec_label_pc_15a10_crit_edge:  ; preds = %dec_label_pc_15a10
  %v0_15a10.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_15a14.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15a10

dec_label_pc_15a40:                               ; preds = %dec_label_pc_15a10
  %v2_15a40 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_15a40, i32* @r4, align 4
  %v5_15a40 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_15a40, i32* @r5, align 4
  %v1_15a44 = add i32 %v0_15a38, -4
  store i32 %v1_15a44, i32* %r2.global-to-local, align 4
  %v3_15a44 = add i32 %v0_15a38, 2147483632
  %v4_15a44 = and i32 %v1_15a44, %v3_15a44
  %v5_15a44 = icmp slt i32 %v4_15a44, 0
  store i1 %v5_15a44, i1* %cpsr_v.global-to-local, align 1
  %v6_15a44 = icmp slt i32 %v1_15a44, 0
  store i1 %v6_15a44, i1* %cpsr_n.global-to-local, align 1
  %v7_15a44 = icmp eq i32 %v1_15a44, 0
  store i1 %v7_15a44, i1* %cpsr_z.global-to-local, align 1
  %v2_15a48 = xor i1 %v6_15a44, %v5_15a44
  br i1 %v2_15a48, label %dec_label_pc_15a64, label %dec_label_pc_15a4c

dec_label_pc_15a4c:                               ; preds = %dec_label_pc_15a40, %dec_label_pc_15a00, %dec_label_pc_15a4c
  %v1_15a58 = phi i32 [ %v4_15a58, %dec_label_pc_15a4c ], [ %v12_15a34, %dec_label_pc_15a40 ], [ %v0_15b0c76, %dec_label_pc_15a00 ]
  %v0_15a4c = load i32, i32* %lr.global-to-local, align 4
  %v3_15a4c = udiv i32 %v0_15a4c, 256
  store i32 %v3_15a4c, i32* %ip.global-to-local, align 4
  %v0_15a50 = load i32, i32* %r1.global-to-local, align 4
  %v1_15a50 = inttoptr i32 %v0_15a50 to i32*
  %v2_15a50 = load i32, i32* %v1_15a50, align 4
  store i32 %v2_15a50, i32* %lr.global-to-local, align 4
  %v4_15a50 = add i32 %v0_15a50, 4
  store i32 %v4_15a50, i32* %r1.global-to-local, align 4
  %v4_15a54 = mul i32 %v2_15a50, 16777216
  %v5_15a54 = or i32 %v4_15a54, %v3_15a4c
  store i32 %v5_15a54, i32* @ip, align 4
  %v2_15a58 = inttoptr i32 %v1_15a58 to i32*
  store i32 %v5_15a54, i32* %v2_15a58, align 4
  %v3_15a58 = load i32, i32* @r0, align 4
  %v4_15a58 = add i32 %v3_15a58, 4
  store i32 %v4_15a58, i32* @r0, align 4
  %v0_15a5c = load i32, i32* %r2.global-to-local, align 4
  %v1_15a5c = add i32 %v0_15a5c, -4
  store i32 %v1_15a5c, i32* %r2.global-to-local, align 4
  %v3_15a5c = sub i32 3, %v0_15a5c
  %v4_15a5c = and i32 %v3_15a5c, %v0_15a5c
  %v5_15a5c = icmp slt i32 %v4_15a5c, 0
  %v6_15a5c = icmp slt i32 %v1_15a5c, 0
  %v2_15a60 = xor i1 %v6_15a5c, %v5_15a5c
  br i1 %v2_15a60, label %dec_label_pc_15a64.loopexit, label %dec_label_pc_15a4c

dec_label_pc_15a64.loopexit:                      ; preds = %dec_label_pc_15a4c
  %v7_15a5c = icmp eq i32 %v0_15a5c, 4
  store i1 %v5_15a5c, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_15a5c, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_15a5c, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15a64

dec_label_pc_15a64:                               ; preds = %dec_label_pc_15a64.loopexit, %dec_label_pc_15a40
  %v0_1598c59 = phi i32 [ %v1_15a5c, %dec_label_pc_15a64.loopexit ], [ %v1_15a44, %dec_label_pc_15a40 ]
  %v0_15a64 = load i32, i32* %r1.global-to-local, align 4
  %v1_15a64 = add i32 %v0_15a64, -3
  store i32 %v1_15a64, i32* @r1, align 4
  br label %bb140

dec_label_pc_15a6c:                               ; preds = %dec_label_pc_159ec
  br i1 %v2_15a70, label %dec_label_pc_15ab8, label %dec_label_pc_15a74

dec_label_pc_15a74:                               ; preds = %dec_label_pc_15a6c
  store i32 %v1_15a6c, i32* %r2.global-to-local, align 4
  %v3_15a78 = load i32, i32* @r4, align 4
  store i32 %v3_15a78, i32* %stack_var_-16, align 4
  %v6_15a78 = load i32, i32* @r5, align 4
  store i32 %v6_15a78, i32* %stack_var_-12, align 4
  br label %dec_label_pc_15a7c

dec_label_pc_15a7c:                               ; preds = %dec_label_pc_15a7c.dec_label_pc_15a7c_crit_edge, %dec_label_pc_15a74
  %v0_15aa0 = phi i32 [ %v12_15aa0, %dec_label_pc_15a7c.dec_label_pc_15a7c_crit_edge ], [ %v0_15b0c76, %dec_label_pc_15a74 ]
  %v0_15a80 = phi i32 [ %v0_15a80.pre, %dec_label_pc_15a7c.dec_label_pc_15a7c_crit_edge ], [ %v4_159f0, %dec_label_pc_15a74 ]
  %v0_15a7c = phi i32 [ %v0_15a7c.pre, %dec_label_pc_15a7c.dec_label_pc_15a7c_crit_edge ], [ %v2_159f0, %dec_label_pc_15a74 ]
  %v3_15a7c = udiv i32 %v0_15a7c, 65536
  %v1_15a80 = inttoptr i32 %v0_15a80 to i32*
  %v2_15a80 = load i32, i32* %v1_15a80, align 4
  store i32 %v2_15a80, i32* %r4.global-to-local, align 4
  %v3_15a80 = add i32 %v0_15a80, 4
  %v4_15a80 = inttoptr i32 %v3_15a80 to i32*
  %v5_15a80 = load i32, i32* %v4_15a80, align 4
  store i32 %v5_15a80, i32* %r5.global-to-local, align 4
  %v6_15a80 = add i32 %v0_15a80, 8
  %v7_15a80 = inttoptr i32 %v6_15a80 to i32*
  %v8_15a80 = load i32, i32* %v7_15a80, align 4
  store i32 %v8_15a80, i32* %ip.global-to-local, align 4
  %v9_15a80 = add i32 %v0_15a80, 12
  %v10_15a80 = inttoptr i32 %v9_15a80 to i32*
  %v11_15a80 = load i32, i32* %v10_15a80, align 4
  store i32 %v11_15a80, i32* %lr.global-to-local, align 4
  %v12_15a80 = add i32 %v0_15a80, 16
  store i32 %v12_15a80, i32* %r1.global-to-local, align 4
  %v4_15a84 = mul i32 %v2_15a80, 65536
  %v5_15a84 = or i32 %v4_15a84, %v3_15a7c
  store i32 %v5_15a84, i32* @r3, align 4
  %v3_15a88 = udiv i32 %v2_15a80, 65536
  %v4_15a8c = mul i32 %v5_15a80, 65536
  %v5_15a8c = or i32 %v4_15a8c, %v3_15a88
  store i32 %v5_15a8c, i32* %r4.global-to-local, align 4
  %v3_15a90 = udiv i32 %v5_15a80, 65536
  %v4_15a94 = mul i32 %v8_15a80, 65536
  %v5_15a94 = or i32 %v4_15a94, %v3_15a90
  store i32 %v5_15a94, i32* %r5.global-to-local, align 4
  %v3_15a98 = udiv i32 %v8_15a80, 65536
  %v4_15a9c = mul i32 %v11_15a80, 65536
  %v5_15a9c = or i32 %v4_15a9c, %v3_15a98
  store i32 %v5_15a9c, i32* @ip, align 4
  %v1_15aa0 = inttoptr i32 %v0_15aa0 to i32*
  store i32 %v5_15a84, i32* %v1_15aa0, align 4
  %v3_15aa0 = add i32 %v0_15aa0, 4
  %v4_15aa0 = inttoptr i32 %v3_15aa0 to i32*
  %v5_15aa0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_15aa0, i32* %v4_15aa0, align 4
  %v6_15aa0 = add i32 %v0_15aa0, 8
  %v7_15aa0 = inttoptr i32 %v6_15aa0 to i32*
  %v8_15aa0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_15aa0, i32* %v7_15aa0, align 4
  %v9_15aa0 = add i32 %v0_15aa0, 12
  %v10_15aa0 = inttoptr i32 %v9_15aa0 to i32*
  %v11_15aa0 = load i32, i32* @ip, align 4
  store i32 %v11_15aa0, i32* %v10_15aa0, align 4
  %v12_15aa0 = add i32 %v0_15aa0, 16
  store i32 %v12_15aa0, i32* @r0, align 4
  %v0_15aa4 = load i32, i32* %r2.global-to-local, align 4
  %v1_15aa4 = add i32 %v0_15aa4, -16
  store i32 %v1_15aa4, i32* %r2.global-to-local, align 4
  %v3_15aa4 = sub i32 15, %v0_15aa4
  %v4_15aa4 = and i32 %v3_15aa4, %v0_15aa4
  %v5_15aa4 = icmp slt i32 %v4_15aa4, 0
  %v6_15aa4 = icmp slt i32 %v1_15aa4, 0
  %v2_15aa8 = xor i1 %v6_15aa4, %v5_15aa4
  br i1 %v2_15aa8, label %dec_label_pc_15aac, label %dec_label_pc_15a7c.dec_label_pc_15a7c_crit_edge

dec_label_pc_15a7c.dec_label_pc_15a7c_crit_edge:  ; preds = %dec_label_pc_15a7c
  %v0_15a7c.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_15a80.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15a7c

dec_label_pc_15aac:                               ; preds = %dec_label_pc_15a7c
  %v2_15aac = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_15aac, i32* @r4, align 4
  %v5_15aac = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_15aac, i32* @r5, align 4
  %v1_15ab0 = add i32 %v0_15aa4, -4
  store i32 %v1_15ab0, i32* %r2.global-to-local, align 4
  %v3_15ab0 = add i32 %v0_15aa4, 2147483632
  %v4_15ab0 = and i32 %v1_15ab0, %v3_15ab0
  %v5_15ab0 = icmp slt i32 %v4_15ab0, 0
  store i1 %v5_15ab0, i1* %cpsr_v.global-to-local, align 1
  %v6_15ab0 = icmp slt i32 %v1_15ab0, 0
  store i1 %v6_15ab0, i1* %cpsr_n.global-to-local, align 1
  %v7_15ab0 = icmp eq i32 %v1_15ab0, 0
  store i1 %v7_15ab0, i1* %cpsr_z.global-to-local, align 1
  %v2_15ab4 = xor i1 %v6_15ab0, %v5_15ab0
  br i1 %v2_15ab4, label %dec_label_pc_15ad0, label %dec_label_pc_15ab8

dec_label_pc_15ab8:                               ; preds = %dec_label_pc_15aac, %dec_label_pc_15a6c, %dec_label_pc_15ab8
  %v1_15ac4 = phi i32 [ %v4_15ac4, %dec_label_pc_15ab8 ], [ %v12_15aa0, %dec_label_pc_15aac ], [ %v0_15b0c76, %dec_label_pc_15a6c ]
  %v0_15ab8 = load i32, i32* %lr.global-to-local, align 4
  %v3_15ab8 = udiv i32 %v0_15ab8, 65536
  store i32 %v3_15ab8, i32* %ip.global-to-local, align 4
  %v0_15abc = load i32, i32* %r1.global-to-local, align 4
  %v1_15abc = inttoptr i32 %v0_15abc to i32*
  %v2_15abc = load i32, i32* %v1_15abc, align 4
  store i32 %v2_15abc, i32* %lr.global-to-local, align 4
  %v4_15abc = add i32 %v0_15abc, 4
  store i32 %v4_15abc, i32* %r1.global-to-local, align 4
  %v4_15ac0 = mul i32 %v2_15abc, 65536
  %v5_15ac0 = or i32 %v4_15ac0, %v3_15ab8
  store i32 %v5_15ac0, i32* @ip, align 4
  %v2_15ac4 = inttoptr i32 %v1_15ac4 to i32*
  store i32 %v5_15ac0, i32* %v2_15ac4, align 4
  %v3_15ac4 = load i32, i32* @r0, align 4
  %v4_15ac4 = add i32 %v3_15ac4, 4
  store i32 %v4_15ac4, i32* @r0, align 4
  %v0_15ac8 = load i32, i32* %r2.global-to-local, align 4
  %v1_15ac8 = add i32 %v0_15ac8, -4
  store i32 %v1_15ac8, i32* %r2.global-to-local, align 4
  %v3_15ac8 = sub i32 3, %v0_15ac8
  %v4_15ac8 = and i32 %v3_15ac8, %v0_15ac8
  %v5_15ac8 = icmp slt i32 %v4_15ac8, 0
  %v6_15ac8 = icmp slt i32 %v1_15ac8, 0
  %v2_15acc = xor i1 %v6_15ac8, %v5_15ac8
  br i1 %v2_15acc, label %dec_label_pc_15ad0.loopexit, label %dec_label_pc_15ab8

dec_label_pc_15ad0.loopexit:                      ; preds = %dec_label_pc_15ab8
  %v7_15ac8 = icmp eq i32 %v0_15ac8, 4
  store i1 %v5_15ac8, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_15ac8, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_15ac8, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15ad0

dec_label_pc_15ad0:                               ; preds = %dec_label_pc_15ad0.loopexit, %dec_label_pc_15aac
  %v0_1598c60 = phi i32 [ %v1_15ac8, %dec_label_pc_15ad0.loopexit ], [ %v1_15ab0, %dec_label_pc_15aac ]
  %v0_15ad0 = load i32, i32* %r1.global-to-local, align 4
  %v1_15ad0 = add i32 %v0_15ad0, -2
  store i32 %v1_15ad0, i32* @r1, align 4
  br label %bb140

dec_label_pc_15ad8:                               ; preds = %dec_label_pc_159ec
  br i1 %v2_15a70, label %dec_label_pc_15b24, label %dec_label_pc_15ae0

dec_label_pc_15ae0:                               ; preds = %dec_label_pc_15ad8
  store i32 %v1_15a6c, i32* %r2.global-to-local, align 4
  %v3_15ae4 = load i32, i32* @r4, align 4
  store i32 %v3_15ae4, i32* %stack_var_-16, align 4
  %v6_15ae4 = load i32, i32* @r5, align 4
  store i32 %v6_15ae4, i32* %stack_var_-12, align 4
  br label %dec_label_pc_15ae8

dec_label_pc_15ae8:                               ; preds = %dec_label_pc_15ae8.dec_label_pc_15ae8_crit_edge, %dec_label_pc_15ae0
  %v0_15b0c = phi i32 [ %v12_15b0c, %dec_label_pc_15ae8.dec_label_pc_15ae8_crit_edge ], [ %v0_15b0c76, %dec_label_pc_15ae0 ]
  %v0_15aec = phi i32 [ %v0_15aec.pre, %dec_label_pc_15ae8.dec_label_pc_15ae8_crit_edge ], [ %v4_159f0, %dec_label_pc_15ae0 ]
  %v0_15ae8 = phi i32 [ %v0_15ae8.pre, %dec_label_pc_15ae8.dec_label_pc_15ae8_crit_edge ], [ %v2_159f0, %dec_label_pc_15ae0 ]
  %v3_15ae8 = udiv i32 %v0_15ae8, 16777216
  %v1_15aec = inttoptr i32 %v0_15aec to i32*
  %v2_15aec = load i32, i32* %v1_15aec, align 4
  store i32 %v2_15aec, i32* %r4.global-to-local, align 4
  %v3_15aec = add i32 %v0_15aec, 4
  %v4_15aec = inttoptr i32 %v3_15aec to i32*
  %v5_15aec = load i32, i32* %v4_15aec, align 4
  store i32 %v5_15aec, i32* %r5.global-to-local, align 4
  %v6_15aec = add i32 %v0_15aec, 8
  %v7_15aec = inttoptr i32 %v6_15aec to i32*
  %v8_15aec = load i32, i32* %v7_15aec, align 4
  store i32 %v8_15aec, i32* %ip.global-to-local, align 4
  %v9_15aec = add i32 %v0_15aec, 12
  %v10_15aec = inttoptr i32 %v9_15aec to i32*
  %v11_15aec = load i32, i32* %v10_15aec, align 4
  store i32 %v11_15aec, i32* %lr.global-to-local, align 4
  %v12_15aec = add i32 %v0_15aec, 16
  store i32 %v12_15aec, i32* %r1.global-to-local, align 4
  %v4_15af0 = mul i32 %v2_15aec, 256
  %v5_15af0 = or i32 %v4_15af0, %v3_15ae8
  store i32 %v5_15af0, i32* @r3, align 4
  %v3_15af4 = udiv i32 %v2_15aec, 16777216
  %v4_15af8 = mul i32 %v5_15aec, 256
  %v5_15af8 = or i32 %v4_15af8, %v3_15af4
  store i32 %v5_15af8, i32* %r4.global-to-local, align 4
  %v3_15afc = udiv i32 %v5_15aec, 16777216
  %v4_15b00 = mul i32 %v8_15aec, 256
  %v5_15b00 = or i32 %v4_15b00, %v3_15afc
  store i32 %v5_15b00, i32* %r5.global-to-local, align 4
  %v3_15b04 = udiv i32 %v8_15aec, 16777216
  %v4_15b08 = mul i32 %v11_15aec, 256
  %v5_15b08 = or i32 %v4_15b08, %v3_15b04
  store i32 %v5_15b08, i32* @ip, align 4
  %v1_15b0c = inttoptr i32 %v0_15b0c to i32*
  store i32 %v5_15af0, i32* %v1_15b0c, align 4
  %v3_15b0c = add i32 %v0_15b0c, 4
  %v4_15b0c = inttoptr i32 %v3_15b0c to i32*
  %v5_15b0c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_15b0c, i32* %v4_15b0c, align 4
  %v6_15b0c = add i32 %v0_15b0c, 8
  %v7_15b0c = inttoptr i32 %v6_15b0c to i32*
  %v8_15b0c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_15b0c, i32* %v7_15b0c, align 4
  %v9_15b0c = add i32 %v0_15b0c, 12
  %v10_15b0c = inttoptr i32 %v9_15b0c to i32*
  %v11_15b0c = load i32, i32* @ip, align 4
  store i32 %v11_15b0c, i32* %v10_15b0c, align 4
  %v12_15b0c = add i32 %v0_15b0c, 16
  store i32 %v12_15b0c, i32* @r0, align 4
  %v0_15b10 = load i32, i32* %r2.global-to-local, align 4
  %v1_15b10 = add i32 %v0_15b10, -16
  store i32 %v1_15b10, i32* %r2.global-to-local, align 4
  %v3_15b10 = sub i32 15, %v0_15b10
  %v4_15b10 = and i32 %v3_15b10, %v0_15b10
  %v5_15b10 = icmp slt i32 %v4_15b10, 0
  %v6_15b10 = icmp slt i32 %v1_15b10, 0
  %v2_15b14 = xor i1 %v6_15b10, %v5_15b10
  br i1 %v2_15b14, label %dec_label_pc_15b18, label %dec_label_pc_15ae8.dec_label_pc_15ae8_crit_edge

dec_label_pc_15ae8.dec_label_pc_15ae8_crit_edge:  ; preds = %dec_label_pc_15ae8
  %v0_15ae8.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_15aec.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15ae8

dec_label_pc_15b18:                               ; preds = %dec_label_pc_15ae8
  %v2_15b18 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_15b18, i32* @r4, align 4
  %v5_15b18 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_15b18, i32* @r5, align 4
  %v1_15b1c = add i32 %v0_15b10, -4
  store i32 %v1_15b1c, i32* %r2.global-to-local, align 4
  %v3_15b1c = add i32 %v0_15b10, 2147483632
  %v4_15b1c = and i32 %v1_15b1c, %v3_15b1c
  %v5_15b1c = icmp slt i32 %v4_15b1c, 0
  store i1 %v5_15b1c, i1* %cpsr_v.global-to-local, align 1
  %v6_15b1c = icmp slt i32 %v1_15b1c, 0
  store i1 %v6_15b1c, i1* %cpsr_n.global-to-local, align 1
  %v7_15b1c = icmp eq i32 %v1_15b1c, 0
  store i1 %v7_15b1c, i1* %cpsr_z.global-to-local, align 1
  %v2_15b20 = xor i1 %v6_15b1c, %v5_15b1c
  br i1 %v2_15b20, label %dec_label_pc_15b3c, label %dec_label_pc_15b24

dec_label_pc_15b24:                               ; preds = %dec_label_pc_15b18, %dec_label_pc_15ad8, %dec_label_pc_15b24
  %v1_15b30 = phi i32 [ %v4_15b30, %dec_label_pc_15b24 ], [ %v12_15b0c, %dec_label_pc_15b18 ], [ %v0_15b0c76, %dec_label_pc_15ad8 ]
  %v0_15b24 = load i32, i32* %lr.global-to-local, align 4
  %v3_15b24 = udiv i32 %v0_15b24, 16777216
  store i32 %v3_15b24, i32* %ip.global-to-local, align 4
  %v0_15b28 = load i32, i32* %r1.global-to-local, align 4
  %v1_15b28 = inttoptr i32 %v0_15b28 to i32*
  %v2_15b28 = load i32, i32* %v1_15b28, align 4
  store i32 %v2_15b28, i32* %lr.global-to-local, align 4
  %v4_15b28 = add i32 %v0_15b28, 4
  store i32 %v4_15b28, i32* %r1.global-to-local, align 4
  %v4_15b2c = mul i32 %v2_15b28, 256
  %v5_15b2c = or i32 %v4_15b2c, %v3_15b24
  store i32 %v5_15b2c, i32* @ip, align 4
  %v2_15b30 = inttoptr i32 %v1_15b30 to i32*
  store i32 %v5_15b2c, i32* %v2_15b30, align 4
  %v3_15b30 = load i32, i32* @r0, align 4
  %v4_15b30 = add i32 %v3_15b30, 4
  store i32 %v4_15b30, i32* @r0, align 4
  %v0_15b34 = load i32, i32* %r2.global-to-local, align 4
  %v1_15b34 = add i32 %v0_15b34, -4
  store i32 %v1_15b34, i32* %r2.global-to-local, align 4
  %v3_15b34 = sub i32 3, %v0_15b34
  %v4_15b34 = and i32 %v3_15b34, %v0_15b34
  %v5_15b34 = icmp slt i32 %v4_15b34, 0
  %v6_15b34 = icmp slt i32 %v1_15b34, 0
  %v2_15b38 = xor i1 %v6_15b34, %v5_15b34
  br i1 %v2_15b38, label %dec_label_pc_15b3c.loopexit, label %dec_label_pc_15b24

dec_label_pc_15b3c.loopexit:                      ; preds = %dec_label_pc_15b24
  %v7_15b34 = icmp eq i32 %v0_15b34, 4
  store i1 %v5_15b34, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_15b34, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_15b34, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15b3c

dec_label_pc_15b3c:                               ; preds = %dec_label_pc_15b3c.loopexit, %dec_label_pc_15b18
  %v0_1598c61 = phi i32 [ %v1_15b34, %dec_label_pc_15b3c.loopexit ], [ %v1_15b1c, %dec_label_pc_15b18 ]
  %v0_15b3c = load i32, i32* %r1.global-to-local, align 4
  %v1_15b3c = add i32 %v0_15b3c, -1
  store i32 %v1_15b3c, i32* @r1, align 4
  br label %bb140

dec_label_pc_15b44:                               ; preds = %dec_label_pc_158f0
  %v1_15b44 = load i32, i32* @r2, align 4
  %v2_15b44 = add i32 %v1_15b44, %v0_158f0
  store i32 %v2_15b44, i32* %r1.global-to-local, align 4
  %v2_15b48 = add i32 %v1_15b44, %v1_158f0
  store i32 %v2_15b48, i32* %r0.global-to-local, align 4
  %v2_15b4c = add i32 %v1_15b44, -4
  store i32 %v2_15b4c, i32* %r2.global-to-local, align 4
  %v4_15b4c = sub i32 3, %v1_15b44
  %v5_15b4c = and i32 %v4_15b4c, %v1_15b44
  %v6_15b4c = icmp slt i32 %v5_15b4c, 0
  store i1 %v6_15b4c, i1* %cpsr_v.global-to-local, align 1
  %v7_15b4c = icmp slt i32 %v2_15b4c, 0
  store i1 %v7_15b4c, i1* %cpsr_n.global-to-local, align 1
  %v8_15b4c = icmp eq i32 %v1_15b44, 4
  store i1 %v8_15b4c, i1* %cpsr_z.global-to-local, align 1
  %v5_15b50 = icmp slt i32 %v1_15b44, 4
  br i1 %v5_15b50, label %bb150, label %dec_label_pc_15b54

dec_label_pc_15b54:                               ; preds = %dec_label_pc_15b44
  %v1_15b54 = urem i32 %v2_15b48, 4
  store i32 %v1_15b54, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_15b54 = icmp eq i32 %v1_15b54, 0
  store i1 %v2_15b54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15b54, label %dec_label_pc_15b5c, label %dec_label_pc_15bfc

dec_label_pc_15b5c:                               ; preds = %dec_label_pc_15b54
  %v1_15b5c = urem i32 %v2_15b44, 4
  store i32 %v1_15b5c, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_15b5c = icmp eq i32 %v1_15b5c, 0
  store i1 %v2_15b5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15b5c, label %dec_label_pc_15b64, label %dec_label_pc_15c28

dec_label_pc_15b64:                               ; preds = %dec_label_pc_15b5c, %dec_label_pc_15c20
  %v0_15b7c37 = phi i32 [ %v2_15b48, %dec_label_pc_15b5c ], [ %v0_15c7020, %dec_label_pc_15c20 ]
  %v0_15b7836 = phi i32 [ %v2_15b44, %dec_label_pc_15b5c ], [ %v0_15c20, %dec_label_pc_15c20 ]
  %v0_15b64 = phi i32 [ %v2_15b4c, %dec_label_pc_15b5c ], [ %v2_15c18, %dec_label_pc_15c20 ]
  %v2_15b64 = add i32 %v0_15b64, -8
  store i32 %v2_15b64, i32* %r2.global-to-local, align 4
  %v4_15b64 = sub i32 7, %v0_15b64
  %v5_15b64 = and i32 %v4_15b64, %v0_15b64
  %v6_15b64 = icmp slt i32 %v5_15b64, 0
  store i1 %v6_15b64, i1* %cpsr_v.global-to-local, align 1
  %v7_15b64 = icmp slt i32 %v2_15b64, 0
  store i1 %v7_15b64, i1* %cpsr_n.global-to-local, align 1
  %v8_15b64 = icmp eq i32 %v0_15b64, 8
  store i1 %v8_15b64, i1* %cpsr_z.global-to-local, align 1
  %v5_15b68 = icmp slt i32 %v0_15b64, 8
  br i1 %v5_15b68, label %dec_label_pc_15bb4, label %dec_label_pc_15b6c

dec_label_pc_15b6c:                               ; preds = %dec_label_pc_15b64
  %v3_15b6c = load i32, i32* @r4, align 4
  %v5_15b6c = inttoptr i32 %v3_15b6c to i8*
  store i8* %v5_15b6c, i8** %stack_var_-8, align 4
  %v8_15b6c = load i32, i32* @lr, align 4
  %v2_15b70 = add i32 %v0_15b64, -28
  store i32 %v2_15b70, i32* %r2.global-to-local, align 4
  %v4_15b70 = sub i32 27, %v0_15b64
  %v5_15b70 = and i32 %v4_15b70, %v2_15b64
  %v6_15b70 = icmp slt i32 %v5_15b70, 0
  store i1 %v6_15b70, i1* %cpsr_v.global-to-local, align 1
  %v7_15b70 = icmp slt i32 %v2_15b70, 0
  store i1 %v7_15b70, i1* %cpsr_n.global-to-local, align 1
  %v8_15b70 = icmp eq i32 %v2_15b64, 20
  store i1 %v8_15b70, i1* %cpsr_z.global-to-local, align 1
  %v5_15b74 = icmp slt i32 %v2_15b64, 20
  br i1 %v5_15b74, label %dec_label_pc_15b90, label %dec_label_pc_15b78

dec_label_pc_15b78:                               ; preds = %dec_label_pc_15b6c, %dec_label_pc_15b78.dec_label_pc_15b78_crit_edge
  %v0_15b7c = phi i32 [ %v1_15b84, %dec_label_pc_15b78.dec_label_pc_15b78_crit_edge ], [ %v0_15b7c37, %dec_label_pc_15b6c ]
  %v0_15b78 = phi i32 [ %v0_15b78.pre, %dec_label_pc_15b78.dec_label_pc_15b78_crit_edge ], [ %v0_15b7836, %dec_label_pc_15b6c ]
  %v1_15b78 = add i32 %v0_15b78, -4
  %v2_15b78 = inttoptr i32 %v1_15b78 to i32*
  %v3_15b78 = load i32, i32* %v2_15b78, align 4
  %v4_15b78 = add i32 %v0_15b78, -8
  %v5_15b78 = inttoptr i32 %v4_15b78 to i32*
  %v6_15b78 = load i32, i32* %v5_15b78, align 4
  store i32 %v6_15b78, i32* %r4.global-to-local, align 4
  %v7_15b78 = add i32 %v0_15b78, -12
  %v8_15b78 = inttoptr i32 %v7_15b78 to i32*
  %v9_15b78 = load i32, i32* %v8_15b78, align 4
  store i32 %v9_15b78, i32* %ip.global-to-local, align 4
  %v10_15b78 = add i32 %v0_15b78, -16
  %v11_15b78 = inttoptr i32 %v10_15b78 to i32*
  %v12_15b78 = load i32, i32* %v11_15b78, align 4
  store i32 %v12_15b78, i32* %lr.global-to-local, align 4
  store i32 %v10_15b78, i32* %r1.global-to-local, align 4
  %v1_15b7c = add i32 %v0_15b7c, -16
  %v2_15b7c = inttoptr i32 %v1_15b7c to i32*
  store i32 %v3_15b78, i32* %v2_15b7c, align 4
  %v4_15b7c = add i32 %v0_15b7c, -12
  %v5_15b7c = inttoptr i32 %v4_15b7c to i32*
  %v6_15b7c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_15b7c, i32* %v5_15b7c, align 4
  %v7_15b7c = add i32 %v0_15b7c, -8
  %v8_15b7c = inttoptr i32 %v7_15b7c to i32*
  %v9_15b7c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_15b7c, i32* %v8_15b7c, align 4
  %v10_15b7c = add i32 %v0_15b7c, -4
  %v11_15b7c = inttoptr i32 %v10_15b7c to i32*
  %v12_15b7c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_15b7c, i32* %v11_15b7c, align 4
  store i32 %v1_15b7c, i32* %r0.global-to-local, align 4
  %v0_15b80 = load i32, i32* %r1.global-to-local, align 4
  %v1_15b80 = add i32 %v0_15b80, -4
  %v2_15b80 = inttoptr i32 %v1_15b80 to i32*
  %v3_15b80 = load i32, i32* %v2_15b80, align 4
  store i32 %v3_15b80, i32* @r3, align 4
  %v4_15b80 = add i32 %v0_15b80, -8
  %v5_15b80 = inttoptr i32 %v4_15b80 to i32*
  %v6_15b80 = load i32, i32* %v5_15b80, align 4
  store i32 %v6_15b80, i32* %r4.global-to-local, align 4
  %v7_15b80 = add i32 %v0_15b80, -12
  %v8_15b80 = inttoptr i32 %v7_15b80 to i32*
  %v9_15b80 = load i32, i32* %v8_15b80, align 4
  store i32 %v9_15b80, i32* @ip, align 4
  %v10_15b80 = add i32 %v0_15b80, -16
  %v11_15b80 = inttoptr i32 %v10_15b80 to i32*
  %v12_15b80 = load i32, i32* %v11_15b80, align 4
  store i32 %v12_15b80, i32* %lr.global-to-local, align 4
  store i32 %v10_15b80, i32* %r1.global-to-local, align 4
  %v1_15b84 = add i32 %v0_15b7c, -32
  %v2_15b84 = inttoptr i32 %v1_15b84 to i32*
  store i32 %v3_15b80, i32* %v2_15b84, align 4
  %v4_15b84 = add i32 %v0_15b7c, -28
  %v5_15b84 = inttoptr i32 %v4_15b84 to i32*
  %v6_15b84 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_15b84, i32* %v5_15b84, align 4
  %v7_15b84 = add i32 %v0_15b7c, -24
  %v8_15b84 = inttoptr i32 %v7_15b84 to i32*
  %v9_15b84 = load i32, i32* @ip, align 4
  store i32 %v9_15b84, i32* %v8_15b84, align 4
  %v10_15b84 = add i32 %v0_15b7c, -20
  %v11_15b84 = inttoptr i32 %v10_15b84 to i32*
  %v12_15b84 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_15b84, i32* %v11_15b84, align 4
  store i32 %v1_15b84, i32* %r0.global-to-local, align 4
  %v0_15b88 = load i32, i32* %r2.global-to-local, align 4
  %v2_15b88 = add i32 %v0_15b88, -32
  store i32 %v2_15b88, i32* %r2.global-to-local, align 4
  %v6_15b8c = icmp slt i32 %v0_15b88, 32
  br i1 %v6_15b8c, label %dec_label_pc_15b90.loopexit, label %dec_label_pc_15b78.dec_label_pc_15b78_crit_edge

dec_label_pc_15b78.dec_label_pc_15b78_crit_edge:  ; preds = %dec_label_pc_15b78
  %v0_15b78.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15b78

dec_label_pc_15b90.loopexit:                      ; preds = %dec_label_pc_15b78
  %v4_15b88 = sub i32 31, %v0_15b88
  %v5_15b88 = and i32 %v4_15b88, %v0_15b88
  %v6_15b88 = icmp slt i32 %v5_15b88, 0
  %v7_15b88 = icmp slt i32 %v2_15b88, 0
  store i1 %v6_15b88, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_15b88, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15b90

dec_label_pc_15b90:                               ; preds = %dec_label_pc_15b90.loopexit, %dec_label_pc_15b6c
  %v6_15b98 = phi i32 [ %v1_15b84, %dec_label_pc_15b90.loopexit ], [ %v0_15b7c37, %dec_label_pc_15b6c ]
  %v0_15ba0.pr = phi i32 [ %v2_15b88, %dec_label_pc_15b90.loopexit ], [ %v2_15b70, %dec_label_pc_15b6c ]
  %v4_15b90 = add i32 %v0_15ba0.pr, 16
  %v6_15b90 = sub i32 0, %v0_15ba0.pr
  %v7_15b90 = and i32 %v4_15b90, %v6_15b90
  %v8_15b90 = icmp slt i32 %v7_15b90, 0
  store i1 %v8_15b90, i1* %cpsr_v.global-to-local, align 1
  %v9_15b90 = icmp slt i32 %v4_15b90, 0
  store i1 %v9_15b90, i1* %cpsr_n.global-to-local, align 1
  %v10_15b90 = icmp eq i32 %v4_15b90, 0
  store i1 %v10_15b90, i1* %cpsr_z.global-to-local, align 1
  %v5_15b94 = icmp slt i32 %v0_15ba0.pr, -16
  br i1 %v5_15b94, label %.thread2, label %bb147

bb147:                                            ; preds = %dec_label_pc_15b90
  %v6_15b94 = load i32, i32* %r1.global-to-local, align 4
  %v7_15b94 = add i32 %v6_15b94, -4
  %v8_15b94 = inttoptr i32 %v7_15b94 to i32*
  %v9_15b94 = load i32, i32* %v8_15b94, align 4
  store i32 %v9_15b94, i32* @r3, align 4
  %v10_15b94 = add i32 %v6_15b94, -8
  %v11_15b94 = inttoptr i32 %v10_15b94 to i32*
  %v12_15b94 = load i32, i32* %v11_15b94, align 4
  store i32 %v12_15b94, i32* %r4.global-to-local, align 4
  %v13_15b94 = add i32 %v6_15b94, -12
  %v14_15b94 = inttoptr i32 %v13_15b94 to i32*
  %v15_15b94 = load i32, i32* %v14_15b94, align 4
  store i32 %v15_15b94, i32* @ip, align 4
  %v16_15b94 = add i32 %v6_15b94, -16
  %v17_15b94 = inttoptr i32 %v16_15b94 to i32*
  %v18_15b94 = load i32, i32* %v17_15b94, align 4
  store i32 %v18_15b94, i32* %lr.global-to-local, align 4
  store i32 %v16_15b94, i32* %r1.global-to-local, align 4
  %v7_15b98 = add i32 %v6_15b98, -16
  %v8_15b98 = inttoptr i32 %v7_15b98 to i32*
  store i32 %v9_15b94, i32* %v8_15b98, align 4
  %v10_15b98 = add i32 %v6_15b98, -12
  %v11_15b98 = inttoptr i32 %v10_15b98 to i32*
  %v12_15b98 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v12_15b98, i32* %v11_15b98, align 4
  %v13_15b98 = add i32 %v6_15b98, -8
  %v14_15b98 = inttoptr i32 %v13_15b98 to i32*
  %v15_15b98 = load i32, i32* @ip, align 4
  store i32 %v15_15b98, i32* %v14_15b98, align 4
  %v16_15b98 = add i32 %v6_15b98, -4
  %v17_15b98 = inttoptr i32 %v16_15b98 to i32*
  %v18_15b98 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v18_15b98, i32* %v17_15b98, align 4
  store i32 %v7_15b98, i32* %r0.global-to-local, align 4
  %v6_15b9c = load i32, i32* %r2.global-to-local, align 4
  %v7_15b9c = add i32 %v6_15b9c, -16
  store i32 %v7_15b9c, i32* %r2.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_15b90, %bb147
  %v6_15ba8 = phi i32 [ %v7_15b98, %bb147 ], [ %v6_15b98, %dec_label_pc_15b90 ]
  %v0_15ba0 = phi i32 [ %v7_15b9c, %bb147 ], [ %v0_15ba0.pr, %dec_label_pc_15b90 ]
  %v4_15ba0 = add i32 %v0_15ba0, 20
  store i32 %v4_15ba0, i32* %r2.global-to-local, align 4
  %v6_15ba0 = sub i32 0, %v0_15ba0
  %v7_15ba0 = and i32 %v4_15ba0, %v6_15ba0
  %v8_15ba0 = icmp slt i32 %v7_15ba0, 0
  store i1 %v8_15ba0, i1* %cpsr_v.global-to-local, align 1
  %v9_15ba0 = icmp slt i32 %v4_15ba0, 0
  store i1 %v9_15ba0, i1* %cpsr_n.global-to-local, align 1
  %v10_15ba0 = icmp eq i32 %v4_15ba0, 0
  store i1 %v10_15ba0, i1* %cpsr_z.global-to-local, align 1
  %v5_15ba4 = icmp slt i32 %v0_15ba0, -20
  br i1 %v5_15ba4, label %.thread4, label %bb148

bb148:                                            ; preds = %.thread2
  %v6_15ba4 = load i32, i32* %r1.global-to-local, align 4
  %v7_15ba4 = add i32 %v6_15ba4, -4
  %v8_15ba4 = inttoptr i32 %v7_15ba4 to i32*
  %v9_15ba4 = load i32, i32* %v8_15ba4, align 4
  store i32 %v9_15ba4, i32* @r3, align 4
  %v10_15ba4 = add i32 %v6_15ba4, -8
  %v11_15ba4 = inttoptr i32 %v10_15ba4 to i32*
  %v12_15ba4 = load i32, i32* %v11_15ba4, align 4
  store i32 %v12_15ba4, i32* @ip, align 4
  %v13_15ba4 = add i32 %v6_15ba4, -12
  %v14_15ba4 = inttoptr i32 %v13_15ba4 to i32*
  %v15_15ba4 = load i32, i32* %v14_15ba4, align 4
  store i32 %v15_15ba4, i32* %lr.global-to-local, align 4
  store i32 %v13_15ba4, i32* %r1.global-to-local, align 4
  %v7_15ba8 = add i32 %v6_15ba8, -12
  %v8_15ba8 = inttoptr i32 %v7_15ba8 to i32*
  store i32 %v9_15ba4, i32* %v8_15ba8, align 4
  %v10_15ba8 = add i32 %v6_15ba8, -8
  %v11_15ba8 = inttoptr i32 %v10_15ba8 to i32*
  %v12_15ba8 = load i32, i32* @ip, align 4
  store i32 %v12_15ba8, i32* %v11_15ba8, align 4
  %v13_15ba8 = add i32 %v6_15ba8, -4
  %v14_15ba8 = inttoptr i32 %v13_15ba8 to i32*
  %v15_15ba8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v15_15ba8, i32* %v14_15ba8, align 4
  store i32 %v7_15ba8, i32* %r0.global-to-local, align 4
  %v6_15bac = load i32, i32* %r2.global-to-local, align 4
  %v7_15bac = add i32 %v6_15bac, -12
  store i32 %v7_15bac, i32* %r2.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %.thread2, %bb148
  %v6_15bcc45 = phi i32 [ %v6_15ba8, %.thread2 ], [ %v7_15ba8, %bb148 ]
  %v0_15bb443 = phi i32 [ %v4_15ba0, %.thread2 ], [ %v7_15bac, %bb148 ]
  %v2_15bb0 = load i8*, i8** %stack_var_-8, align 4
  %v3_15bb0 = ptrtoint i8* %v2_15bb0 to i32
  store i32 %v3_15bb0, i32* @r4, align 4
  store i32 %v8_15b6c, i32* @lr, align 4
  br label %dec_label_pc_15bb4

dec_label_pc_15bb4:                               ; preds = %dec_label_pc_15b64, %.thread4
  %v7_15bc4 = phi i32 [ %v0_15b7c37, %dec_label_pc_15b64 ], [ %v6_15bcc45, %.thread4 ]
  %v0_15bb4 = phi i32 [ %v2_15b64, %dec_label_pc_15b64 ], [ %v0_15bb443, %.thread4 ]
  %v2_15bb4 = add i32 %v0_15bb4, 8
  store i32 %v2_15bb4, i32* %r2.global-to-local, align 4
  %v4_15bb4 = sub i32 0, %v0_15bb4
  %v5_15bb4 = and i32 %v2_15bb4, %v4_15bb4
  %v6_15bb4 = icmp slt i32 %v5_15bb4, 0
  store i1 %v6_15bb4, i1* %cpsr_v.global-to-local, align 1
  %v7_15bb4 = icmp slt i32 %v2_15bb4, 0
  store i1 %v7_15bb4, i1* %cpsr_n.global-to-local, align 1
  %v8_15bb4 = icmp eq i32 %v2_15bb4, 0
  store i1 %v8_15bb4, i1* %cpsr_z.global-to-local, align 1
  %v5_15bb8 = icmp slt i32 %v0_15bb4, -8
  br i1 %v5_15bb8, label %bb150, label %dec_label_pc_15bbc

dec_label_pc_15bbc:                               ; preds = %dec_label_pc_15bb4
  %v6_15bbc = add i32 %v0_15bb4, 4
  store i32 %v6_15bbc, i32* %r2.global-to-local, align 4
  %v8_15bbc = sub i32 -5, %v0_15bb4
  %v9_15bbc = and i32 %v8_15bbc, %v2_15bb4
  %v10_15bbc = icmp slt i32 %v9_15bbc, 0
  store i1 %v10_15bbc, i1* %cpsr_v.global-to-local, align 1
  %v11_15bbc = icmp slt i32 %v6_15bbc, 0
  store i1 %v11_15bbc, i1* %cpsr_n.global-to-local, align 1
  %v12_15bbc = icmp eq i32 %v2_15bb4, 4
  store i1 %v12_15bbc, i1* %cpsr_z.global-to-local, align 1
  %v5_15bc0 = icmp slt i32 %v2_15bb4, 4
  %v6_15bc0 = load i32, i32* %r1.global-to-local, align 4
  %v7_15bc0 = add i32 %v6_15bc0, -4
  %v8_15bc0 = inttoptr i32 %v7_15bc0 to i32*
  %v9_15bc0 = load i32, i32* %v8_15bc0, align 4
  store i32 %v9_15bc0, i32* @r3, align 4
  br i1 %v5_15bc0, label %.thread8, label %bb149

.thread8:                                         ; preds = %dec_label_pc_15bbc
  store i32 %v7_15bc0, i32* %r1.global-to-local, align 4
  %v8_15bc4 = add i32 %v7_15bc4, -4
  %v9_15bc4 = inttoptr i32 %v8_15bc4 to i32*
  store i32 %v9_15bc0, i32* %v9_15bc4, align 4
  %v10_15bc4 = load i32, i32* %r0.global-to-local, align 4
  %v11_15bc4 = add i32 %v10_15bc4, -4
  store i32 %v11_15bc4, i32* %r0.global-to-local, align 4
  %v0_15bd4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb150

bb149:                                            ; preds = %dec_label_pc_15bbc
  %v10_15bc8 = add i32 %v6_15bc0, -8
  %v11_15bc8 = inttoptr i32 %v10_15bc8 to i32*
  %v12_15bc8 = load i32, i32* %v11_15bc8, align 4
  store i32 %v12_15bc8, i32* @ip, align 4
  store i32 %v10_15bc8, i32* %r1.global-to-local, align 4
  %v7_15bcc = add i32 %v7_15bc4, -8
  %v8_15bcc = inttoptr i32 %v7_15bcc to i32*
  store i32 %v9_15bc0, i32* %v8_15bcc, align 4
  %v10_15bcc = add i32 %v7_15bc4, -4
  %v11_15bcc = inttoptr i32 %v10_15bcc to i32*
  %v12_15bcc = load i32, i32* @ip, align 4
  store i32 %v12_15bcc, i32* %v11_15bcc, align 4
  store i32 %v7_15bcc, i32* %r0.global-to-local, align 4
  %v6_15bd0 = load i32, i32* %r2.global-to-local, align 4
  %v7_15bd0 = add i32 %v6_15bd0, -4
  store i32 %v7_15bd0, i32* %r2.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %.thread8, %dec_label_pc_15bb4, %dec_label_pc_15b44, %.thread14, %dec_label_pc_15d78, %dec_label_pc_15d0c, %dec_label_pc_15ca0, %bb149
  %v2_15bd8 = phi i32 [ %v11_15bc4, %.thread8 ], [ %v7_15bc4, %dec_label_pc_15bb4 ], [ %v2_15b48, %dec_label_pc_15b44 ], [ %v0_15c7020, %.thread14 ], [ %v2_15be453, %dec_label_pc_15d78 ], [ %v2_15be452, %dec_label_pc_15d0c ], [ %v2_15be451, %dec_label_pc_15ca0 ], [ %v7_15bcc, %bb149 ]
  %v0_15bd4 = phi i32 [ %v0_15bd4.pre, %.thread8 ], [ %v2_15bb4, %dec_label_pc_15bb4 ], [ %v2_15b4c, %dec_label_pc_15b44 ], [ %v2_15c18, %.thread14 ], [ %v0_15bd449, %dec_label_pc_15d78 ], [ %v0_15bd448, %dec_label_pc_15d0c ], [ %v0_15bd447, %dec_label_pc_15ca0 ], [ %v7_15bd0, %bb149 ]
  %v1_15bd4 = add i32 %v0_15bd4, 4
  store i32 %v1_15bd4, i32* %r2.global-to-local, align 4
  %v3_15bd4 = sub i32 0, %v0_15bd4
  %v4_15bd4 = and i32 %v1_15bd4, %v3_15bd4
  %v5_15bd4 = icmp slt i32 %v4_15bd4, 0
  store i1 %v5_15bd4, i1* %cpsr_v.global-to-local, align 1
  %v6_15bd4 = icmp slt i32 %v1_15bd4, 0
  store i1 %v6_15bd4, i1* %cpsr_n.global-to-local, align 1
  %v7_15bd4 = icmp eq i32 %v1_15bd4, 0
  store i1 %v7_15bd4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_15bd4, label %.thread130, label %bb151

bb151:                                            ; preds = %bb150
  %v1_15bdc = add i32 %v0_15bd4, 2
  %v3_15bdc = sub i32 -3, %v0_15bd4
  %v4_15bdc = and i32 %v3_15bdc, %v1_15bd4
  %v5_15bdc = icmp slt i32 %v4_15bdc, 0
  store i1 %v5_15bdc, i1* %cpsr_v.global-to-local, align 1
  %v6_15bdc = icmp slt i32 %v1_15bdc, 0
  store i1 %v6_15bdc, i1* %cpsr_n.global-to-local, align 1
  %v7_15bdc = icmp eq i32 %v1_15bd4, 2
  store i1 %v7_15bdc, i1* %cpsr_z.global-to-local, align 1
  %v0_15be0 = load i32, i32* %r1.global-to-local, align 4
  %v1_15be0 = add i32 %v0_15be0, -1
  %v2_15be0 = inttoptr i32 %v1_15be0 to i8*
  %v3_15be0 = load i8, i8* %v2_15be0, align 1
  %v4_15be0 = zext i8 %v3_15be0 to i32
  store i32 %v4_15be0, i32* @r3, align 4
  store i32 %v1_15be0, i32* %r1.global-to-local, align 4
  %v3_15be4 = add i32 %v2_15bd8, -1
  %v4_15be4 = inttoptr i32 %v3_15be4 to i8*
  store i8 %v3_15be0, i8* %v4_15be4, align 1
  %v5_15be4 = load i32, i32* %r0.global-to-local, align 4
  %v6_15be4 = add i32 %v5_15be4, -1
  store i32 %v6_15be4, i32* %r0.global-to-local, align 4
  %v0_15be8 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_15be8 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_15be8 = xor i1 %v0_15be8, %v1_15be8
  br i1 %v2_15be8, label %.thread129, label %bb152

bb152:                                            ; preds = %bb151
  %v3_15be8 = load i32, i32* %r1.global-to-local, align 4
  %v4_15be8 = add i32 %v3_15be8, -1
  %v5_15be8 = inttoptr i32 %v4_15be8 to i8*
  %v6_15be8 = load i8, i8* %v5_15be8, align 1
  %v7_15be8 = zext i8 %v6_15be8 to i32
  store i32 %v7_15be8, i32* @r3, align 4
  store i32 %v4_15be8, i32* %r1.global-to-local, align 4
  %v6_15bec = add i32 %v5_15be4, -2
  %v7_15bec = inttoptr i32 %v6_15bec to i8*
  store i8 %v6_15be8, i8* %v7_15bec, align 1
  %v8_15bec = load i32, i32* %r0.global-to-local, align 4
  %v9_15bec = add i32 %v8_15bec, -1
  store i32 %v9_15bec, i32* %r0.global-to-local, align 4
  %v1_15bf0.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_15bf0.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread129

.thread129:                                       ; preds = %bb151, %bb152
  %v7_15bf4 = phi i32 [ %v9_15bec, %bb152 ], [ %v6_15be4, %bb151 ]
  %v2_15bf4 = phi i1 [ %v2_15bf0.pre, %bb152 ], [ %v1_15be8, %bb151 ]
  %v1_15bf4 = phi i1 [ %v1_15bf0.pre, %bb152 ], [ %v0_15be8, %bb151 ]
  %v0_15bf0 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_15bf0 = xor i1 %v2_15bf4, %v1_15bf4
  %v4_15bf0 = or i1 %v0_15bf0, %v3_15bf0
  br i1 %v4_15bf0, label %.thread130, label %bb153

bb153:                                            ; preds = %.thread129
  %v5_15bf0 = load i32, i32* %r1.global-to-local, align 4
  %v6_15bf0 = add i32 %v5_15bf0, -1
  %v7_15bf0 = inttoptr i32 %v6_15bf0 to i8*
  %v8_15bf0 = load i8, i8* %v7_15bf0, align 1
  %v9_15bf0 = zext i8 %v8_15bf0 to i32
  store i32 %v9_15bf0, i32* @r3, align 4
  store i32 %v6_15bf0, i32* %r1.global-to-local, align 4
  %v8_15bf4 = add i32 %v7_15bf4, -1
  %v9_15bf4 = inttoptr i32 %v8_15bf4 to i8*
  store i8 %v8_15bf0, i8* %v9_15bf4, align 1
  %v10_15bf4 = load i32, i32* %r0.global-to-local, align 4
  %v11_15bf4 = add i32 %v10_15bf4, -1
  store i32 %v11_15bf4, i32* %r0.global-to-local, align 4
  br label %.thread130

dec_label_pc_15bfc:                               ; preds = %dec_label_pc_15b54
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_15bfc = icmp eq i32 %v1_15b54, 1
  store i1 %v8_15bfc, i1* %cpsr_n.global-to-local, align 1
  %v9_15bfc = icmp eq i32 %v1_15b54, 2
  store i1 %v9_15bfc, i1* %cpsr_z.global-to-local, align 1
  %v1_15c00 = add i32 %v2_15b44, -1
  %v2_15c00 = inttoptr i32 %v1_15c00 to i8*
  %v3_15c00 = load i8, i8* %v2_15c00, align 1
  %v4_15c00 = zext i8 %v3_15c00 to i32
  store i32 %v4_15c00, i32* @r3, align 4
  store i32 %v1_15c00, i32* %r1.global-to-local, align 4
  %v3_15c04 = add i32 %v2_15b48, -1
  %v4_15c04 = inttoptr i32 %v3_15c04 to i8*
  store i8 %v3_15c00, i8* %v4_15c04, align 1
  %v5_15c04 = load i32, i32* %r0.global-to-local, align 4
  %v6_15c04 = add i32 %v5_15c04, -1
  store i32 %v6_15c04, i32* %r0.global-to-local, align 4
  br i1 %v8_15bfc, label %.thread14, label %bb154

bb154:                                            ; preds = %dec_label_pc_15bfc
  %v6_15c08 = load i32, i32* %r1.global-to-local, align 4
  %v7_15c08 = add i32 %v6_15c08, -1
  %v8_15c08 = inttoptr i32 %v7_15c08 to i8*
  %v9_15c08 = load i8, i8* %v8_15c08, align 1
  %v10_15c08 = zext i8 %v9_15c08 to i32
  store i32 %v10_15c08, i32* @r3, align 4
  store i32 %v7_15c08, i32* %r1.global-to-local, align 4
  %v9_15c0c = add i32 %v5_15c04, -2
  %v10_15c0c = inttoptr i32 %v9_15c0c to i8*
  store i8 %v9_15c08, i8* %v10_15c0c, align 1
  %v11_15c0c = load i32, i32* %r0.global-to-local, align 4
  %v12_15c0c = add i32 %v11_15c0c, -1
  store i32 %v12_15c0c, i32* %r0.global-to-local, align 4
  br i1 %v9_15bfc, label %.thread14, label %bb155

bb155:                                            ; preds = %bb154
  %v8_15c10 = load i32, i32* %r1.global-to-local, align 4
  %v9_15c10 = add i32 %v8_15c10, -1
  %v10_15c10 = inttoptr i32 %v9_15c10 to i8*
  %v11_15c10 = load i8, i8* %v10_15c10, align 1
  %v12_15c10 = zext i8 %v11_15c10 to i32
  store i32 %v12_15c10, i32* @r3, align 4
  store i32 %v9_15c10, i32* %r1.global-to-local, align 4
  %v11_15c14 = add i32 %v11_15c0c, -2
  %v12_15c14 = inttoptr i32 %v11_15c14 to i8*
  store i8 %v11_15c10, i8* %v12_15c14, align 1
  %v13_15c14 = load i32, i32* %r0.global-to-local, align 4
  %v14_15c14 = add i32 %v13_15c14, -1
  store i32 %v14_15c14, i32* %r0.global-to-local, align 4
  br label %.thread14

.thread14:                                        ; preds = %bb154, %dec_label_pc_15bfc, %bb155
  %v0_15c7020 = phi i32 [ %v12_15c0c, %bb154 ], [ %v6_15c04, %dec_label_pc_15bfc ], [ %v14_15c14, %bb155 ]
  %v0_15c18 = load i32, i32* %r2.global-to-local, align 4
  %v1_15c18 = load i32, i32* @ip, align 4
  %v2_15c18 = sub i32 %v0_15c18, %v1_15c18
  store i32 %v2_15c18, i32* %r2.global-to-local, align 4
  %v4_15c18 = xor i32 %v1_15c18, %v0_15c18
  %v5_15c18 = xor i32 %v2_15c18, %v0_15c18
  %v6_15c18 = and i32 %v5_15c18, %v4_15c18
  %v7_15c18 = icmp slt i32 %v6_15c18, 0
  store i1 %v7_15c18, i1* %cpsr_v.global-to-local, align 1
  %v8_15c18 = icmp slt i32 %v2_15c18, 0
  store i1 %v8_15c18, i1* %cpsr_n.global-to-local, align 1
  %v9_15c18 = icmp eq i32 %v0_15c18, %v1_15c18
  store i1 %v9_15c18, i1* %cpsr_z.global-to-local, align 1
  %v5_15c1c = icmp slt i32 %v0_15c18, %v1_15c18
  br i1 %v5_15c1c, label %bb150, label %dec_label_pc_15c20

dec_label_pc_15c20:                               ; preds = %.thread14
  %v0_15c20 = load i32, i32* %r1.global-to-local, align 4
  %v1_15c20 = urem i32 %v0_15c20, 4
  store i32 %v1_15c20, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_15c20 = icmp eq i32 %v1_15c20, 0
  store i1 %v2_15c20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15c20, label %dec_label_pc_15b64, label %dec_label_pc_15c28

dec_label_pc_15c28:                               ; preds = %dec_label_pc_15b5c, %dec_label_pc_15c20
  %v0_15c7019 = phi i32 [ %v2_15b48, %dec_label_pc_15b5c ], [ %v0_15c7020, %dec_label_pc_15c20 ]
  %v0_15d1c = phi i32 [ %v2_15b4c, %dec_label_pc_15b5c ], [ %v2_15c18, %dec_label_pc_15c20 ]
  %v0_15c28 = phi i32 [ %v2_15b44, %dec_label_pc_15b5c ], [ %v0_15c20, %dec_label_pc_15c20 ]
  %v0_15c30 = phi i32 [ %v1_15b5c, %dec_label_pc_15b5c ], [ %v1_15c20, %dec_label_pc_15c20 ]
  %v1_15c28 = and i32 %v0_15c28, -4
  store i32 %v1_15c28, i32* %r1.global-to-local, align 4
  %v1_15c2c = inttoptr i32 %v1_15c28 to i32*
  %v2_15c2c = load i32, i32* %v1_15c2c, align 4
  store i32 %v2_15c2c, i32* @r3, align 4
  %v7_15c30 = icmp ult i32 %v0_15c30, 2
  %v2_15d14 = add i32 %v0_15d1c, -12
  %v4_15d14 = sub i32 11, %v0_15d1c
  %v5_15d14 = and i32 %v4_15d14, %v0_15d1c
  %v6_15d14 = icmp slt i32 %v5_15d14, 0
  store i1 %v6_15d14, i1* %cpsr_v.global-to-local, align 1
  %v7_15d14 = icmp slt i32 %v2_15d14, 0
  store i1 %v7_15d14, i1* %cpsr_n.global-to-local, align 1
  %v8_15d14 = icmp eq i32 %v0_15d1c, 12
  store i1 %v8_15d14, i1* %cpsr_z.global-to-local, align 1
  %v5_15d18 = icmp slt i32 %v0_15d1c, 12
  br i1 %v7_15c30, label %dec_label_pc_15d14, label %dec_label_pc_15c38

dec_label_pc_15c38:                               ; preds = %dec_label_pc_15c28
  %v8_15c30 = icmp eq i32 %v0_15c30, 2
  br i1 %v8_15c30, label %dec_label_pc_15ca8, label %dec_label_pc_15c3c

dec_label_pc_15c3c:                               ; preds = %dec_label_pc_15c38
  br i1 %v5_15d18, label %dec_label_pc_15c88, label %dec_label_pc_15c44

dec_label_pc_15c44:                               ; preds = %dec_label_pc_15c3c
  store i32 %v2_15d14, i32* %r2.global-to-local, align 4
  %v3_15c48 = load i32, i32* @r4, align 4
  store i32 %v3_15c48, i32* %stack_var_-12, align 4
  %v6_15c48 = load i32, i32* @r5, align 4
  %v8_15c48 = inttoptr i32 %v6_15c48 to i8*
  store i8* %v8_15c48, i8** %stack_var_-8, align 4
  %v11_15c48 = load i32, i32* @lr, align 4
  br label %dec_label_pc_15c4c

dec_label_pc_15c4c:                               ; preds = %dec_label_pc_15c4c.dec_label_pc_15c4c_crit_edge, %dec_label_pc_15c44
  %v0_15c70 = phi i32 [ %v1_15c70, %dec_label_pc_15c4c.dec_label_pc_15c4c_crit_edge ], [ %v0_15c7019, %dec_label_pc_15c44 ]
  %v0_15c50 = phi i32 [ %v0_15c50.pre, %dec_label_pc_15c4c.dec_label_pc_15c4c_crit_edge ], [ %v1_15c28, %dec_label_pc_15c44 ]
  %v0_15c4c = phi i32 [ %v0_15c4c.pre, %dec_label_pc_15c4c.dec_label_pc_15c4c_crit_edge ], [ %v2_15c2c, %dec_label_pc_15c44 ]
  %v3_15c4c = mul i32 %v0_15c4c, 256
  store i32 %v3_15c4c, i32* %lr.global-to-local, align 4
  %v1_15c50 = add i32 %v0_15c50, -4
  %v2_15c50 = inttoptr i32 %v1_15c50 to i32*
  %v3_15c50 = load i32, i32* %v2_15c50, align 4
  store i32 %v3_15c50, i32* @r3, align 4
  %v4_15c50 = add i32 %v0_15c50, -8
  %v5_15c50 = inttoptr i32 %v4_15c50 to i32*
  %v6_15c50 = load i32, i32* %v5_15c50, align 4
  store i32 %v6_15c50, i32* %r4.global-to-local, align 4
  %v7_15c50 = add i32 %v0_15c50, -12
  %v8_15c50 = inttoptr i32 %v7_15c50 to i32*
  %v9_15c50 = load i32, i32* %v8_15c50, align 4
  store i32 %v9_15c50, i32* %r5.global-to-local, align 4
  %v10_15c50 = add i32 %v0_15c50, -16
  %v11_15c50 = inttoptr i32 %v10_15c50 to i32*
  %v12_15c50 = load i32, i32* %v11_15c50, align 4
  store i32 %v10_15c50, i32* %r1.global-to-local, align 4
  %v4_15c54 = udiv i32 %v12_15c50, 16777216
  %v5_15c54 = or i32 %v4_15c54, %v3_15c4c
  store i32 %v5_15c54, i32* %lr.global-to-local, align 4
  %v3_15c58 = mul i32 %v12_15c50, 256
  %v4_15c5c = udiv i32 %v9_15c50, 16777216
  %v5_15c5c = or i32 %v3_15c58, %v4_15c5c
  store i32 %v5_15c5c, i32* @ip, align 4
  %v3_15c60 = mul i32 %v9_15c50, 256
  %v4_15c64 = udiv i32 %v6_15c50, 16777216
  %v5_15c64 = or i32 %v3_15c60, %v4_15c64
  store i32 %v5_15c64, i32* %r5.global-to-local, align 4
  %v3_15c68 = mul i32 %v6_15c50, 256
  %v4_15c6c = udiv i32 %v3_15c50, 16777216
  %v5_15c6c = or i32 %v3_15c68, %v4_15c6c
  store i32 %v5_15c6c, i32* %r4.global-to-local, align 4
  %v1_15c70 = add i32 %v0_15c70, -16
  %v2_15c70 = inttoptr i32 %v1_15c70 to i32*
  store i32 %v5_15c6c, i32* %v2_15c70, align 4
  %v4_15c70 = add i32 %v0_15c70, -12
  %v5_15c70 = inttoptr i32 %v4_15c70 to i32*
  %v6_15c70 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_15c70, i32* %v5_15c70, align 4
  %v7_15c70 = add i32 %v0_15c70, -8
  %v8_15c70 = inttoptr i32 %v7_15c70 to i32*
  %v9_15c70 = load i32, i32* @ip, align 4
  store i32 %v9_15c70, i32* %v8_15c70, align 4
  %v10_15c70 = add i32 %v0_15c70, -4
  %v11_15c70 = inttoptr i32 %v10_15c70 to i32*
  %v12_15c70 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_15c70, i32* %v11_15c70, align 4
  store i32 %v1_15c70, i32* %r0.global-to-local, align 4
  %v0_15c74 = load i32, i32* %r2.global-to-local, align 4
  %v2_15c74 = add i32 %v0_15c74, -16
  store i32 %v2_15c74, i32* %r2.global-to-local, align 4
  %v6_15c78 = icmp slt i32 %v0_15c74, 16
  br i1 %v6_15c78, label %dec_label_pc_15c7c, label %dec_label_pc_15c4c.dec_label_pc_15c4c_crit_edge

dec_label_pc_15c4c.dec_label_pc_15c4c_crit_edge:  ; preds = %dec_label_pc_15c4c
  %v0_15c4c.pre = load i32, i32* @r3, align 4
  %v0_15c50.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15c4c

dec_label_pc_15c7c:                               ; preds = %dec_label_pc_15c4c
  %v2_15c7c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_15c7c, i32* @r4, align 4
  %v5_15c7c = load i8*, i8** %stack_var_-8, align 4
  %v6_15c7c = ptrtoint i8* %v5_15c7c to i32
  store i32 %v6_15c7c, i32* @r5, align 4
  store i32 %v11_15c48, i32* @lr, align 4
  %v2_15c80 = add i32 %v0_15c74, -4
  store i32 %v2_15c80, i32* %r2.global-to-local, align 4
  %v4_15c80 = add i32 %v0_15c74, 2147483632
  %v5_15c80 = and i32 %v2_15c80, %v4_15c80
  %v6_15c80 = icmp slt i32 %v5_15c80, 0
  store i1 %v6_15c80, i1* %cpsr_v.global-to-local, align 1
  %v7_15c80 = icmp slt i32 %v2_15c80, 0
  store i1 %v7_15c80, i1* %cpsr_n.global-to-local, align 1
  %v8_15c80 = icmp eq i32 %v2_15c80, 0
  store i1 %v8_15c80, i1* %cpsr_z.global-to-local, align 1
  %v5_15c84 = icmp slt i32 %v2_15c74, -12
  br i1 %v5_15c84, label %dec_label_pc_15ca0, label %dec_label_pc_15c88

dec_label_pc_15c88:                               ; preds = %dec_label_pc_15c7c, %dec_label_pc_15c3c, %dec_label_pc_15c88
  %v1_15c94 = phi i32 [ %v5_15c94, %dec_label_pc_15c88 ], [ %v1_15c70, %dec_label_pc_15c7c ], [ %v0_15c7019, %dec_label_pc_15c3c ]
  %v0_15c88 = load i32, i32* @r3, align 4
  %v3_15c88 = mul i32 %v0_15c88, 256
  store i32 %v3_15c88, i32* %ip.global-to-local, align 4
  %v0_15c8c = load i32, i32* %r1.global-to-local, align 4
  %v1_15c8c = add i32 %v0_15c8c, -4
  %v2_15c8c = inttoptr i32 %v1_15c8c to i32*
  %v3_15c8c = load i32, i32* %v2_15c8c, align 4
  store i32 %v3_15c8c, i32* @r3, align 4
  store i32 %v1_15c8c, i32* %r1.global-to-local, align 4
  %v4_15c90 = udiv i32 %v3_15c8c, 16777216
  %v5_15c90 = or i32 %v4_15c90, %v3_15c88
  store i32 %v5_15c90, i32* @ip, align 4
  %v2_15c94 = add i32 %v1_15c94, -4
  %v3_15c94 = inttoptr i32 %v2_15c94 to i32*
  store i32 %v5_15c90, i32* %v3_15c94, align 4
  %v4_15c94 = load i32, i32* %r0.global-to-local, align 4
  %v5_15c94 = add i32 %v4_15c94, -4
  store i32 %v5_15c94, i32* %r0.global-to-local, align 4
  %v0_15c98 = load i32, i32* %r2.global-to-local, align 4
  %v2_15c98 = add i32 %v0_15c98, -4
  store i32 %v2_15c98, i32* %r2.global-to-local, align 4
  %v6_15c9c = icmp slt i32 %v0_15c98, 4
  br i1 %v6_15c9c, label %dec_label_pc_15ca0.loopexit, label %dec_label_pc_15c88

dec_label_pc_15ca0.loopexit:                      ; preds = %dec_label_pc_15c88
  %v4_15c98 = sub i32 3, %v0_15c98
  %v5_15c98 = and i32 %v4_15c98, %v0_15c98
  %v6_15c98 = icmp slt i32 %v5_15c98, 0
  %v7_15c98 = icmp slt i32 %v2_15c98, 0
  store i1 %v6_15c98, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_15c98, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15ca0

dec_label_pc_15ca0:                               ; preds = %dec_label_pc_15ca0.loopexit, %dec_label_pc_15c7c
  %v2_15be451 = phi i32 [ %v5_15c94, %dec_label_pc_15ca0.loopexit ], [ %v1_15c70, %dec_label_pc_15c7c ]
  %v0_15bd447 = phi i32 [ %v2_15c98, %dec_label_pc_15ca0.loopexit ], [ %v2_15c80, %dec_label_pc_15c7c ]
  %v0_15ca0 = load i32, i32* %r1.global-to-local, align 4
  %v1_15ca0 = add i32 %v0_15ca0, 3
  store i32 %v1_15ca0, i32* %r1.global-to-local, align 4
  br label %bb150

dec_label_pc_15ca8:                               ; preds = %dec_label_pc_15c38
  br i1 %v5_15d18, label %dec_label_pc_15cf4, label %dec_label_pc_15cb0

dec_label_pc_15cb0:                               ; preds = %dec_label_pc_15ca8
  store i32 %v2_15d14, i32* %r2.global-to-local, align 4
  %v3_15cb4 = load i32, i32* @r4, align 4
  store i32 %v3_15cb4, i32* %stack_var_-12, align 4
  %v6_15cb4 = load i32, i32* @r5, align 4
  %v8_15cb4 = inttoptr i32 %v6_15cb4 to i8*
  store i8* %v8_15cb4, i8** %stack_var_-8, align 4
  %v11_15cb4 = load i32, i32* @lr, align 4
  br label %dec_label_pc_15cb8

dec_label_pc_15cb8:                               ; preds = %dec_label_pc_15cb8.dec_label_pc_15cb8_crit_edge, %dec_label_pc_15cb0
  %v0_15cdc = phi i32 [ %v1_15cdc, %dec_label_pc_15cb8.dec_label_pc_15cb8_crit_edge ], [ %v0_15c7019, %dec_label_pc_15cb0 ]
  %v0_15cbc = phi i32 [ %v0_15cbc.pre, %dec_label_pc_15cb8.dec_label_pc_15cb8_crit_edge ], [ %v1_15c28, %dec_label_pc_15cb0 ]
  %v0_15cb8 = phi i32 [ %v0_15cb8.pre, %dec_label_pc_15cb8.dec_label_pc_15cb8_crit_edge ], [ %v2_15c2c, %dec_label_pc_15cb0 ]
  %v3_15cb8 = mul i32 %v0_15cb8, 65536
  store i32 %v3_15cb8, i32* %lr.global-to-local, align 4
  %v1_15cbc = add i32 %v0_15cbc, -4
  %v2_15cbc = inttoptr i32 %v1_15cbc to i32*
  %v3_15cbc = load i32, i32* %v2_15cbc, align 4
  store i32 %v3_15cbc, i32* @r3, align 4
  %v4_15cbc = add i32 %v0_15cbc, -8
  %v5_15cbc = inttoptr i32 %v4_15cbc to i32*
  %v6_15cbc = load i32, i32* %v5_15cbc, align 4
  store i32 %v6_15cbc, i32* %r4.global-to-local, align 4
  %v7_15cbc = add i32 %v0_15cbc, -12
  %v8_15cbc = inttoptr i32 %v7_15cbc to i32*
  %v9_15cbc = load i32, i32* %v8_15cbc, align 4
  store i32 %v9_15cbc, i32* %r5.global-to-local, align 4
  %v10_15cbc = add i32 %v0_15cbc, -16
  %v11_15cbc = inttoptr i32 %v10_15cbc to i32*
  %v12_15cbc = load i32, i32* %v11_15cbc, align 4
  store i32 %v10_15cbc, i32* %r1.global-to-local, align 4
  %v4_15cc0 = udiv i32 %v12_15cbc, 65536
  %v5_15cc0 = or i32 %v4_15cc0, %v3_15cb8
  store i32 %v5_15cc0, i32* %lr.global-to-local, align 4
  %v3_15cc4 = mul i32 %v12_15cbc, 65536
  %v4_15cc8 = udiv i32 %v9_15cbc, 65536
  %v5_15cc8 = or i32 %v3_15cc4, %v4_15cc8
  store i32 %v5_15cc8, i32* @ip, align 4
  %v3_15ccc = mul i32 %v9_15cbc, 65536
  %v4_15cd0 = udiv i32 %v6_15cbc, 65536
  %v5_15cd0 = or i32 %v3_15ccc, %v4_15cd0
  store i32 %v5_15cd0, i32* %r5.global-to-local, align 4
  %v3_15cd4 = mul i32 %v6_15cbc, 65536
  %v4_15cd8 = udiv i32 %v3_15cbc, 65536
  %v5_15cd8 = or i32 %v3_15cd4, %v4_15cd8
  store i32 %v5_15cd8, i32* %r4.global-to-local, align 4
  %v1_15cdc = add i32 %v0_15cdc, -16
  %v2_15cdc = inttoptr i32 %v1_15cdc to i32*
  store i32 %v5_15cd8, i32* %v2_15cdc, align 4
  %v4_15cdc = add i32 %v0_15cdc, -12
  %v5_15cdc = inttoptr i32 %v4_15cdc to i32*
  %v6_15cdc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_15cdc, i32* %v5_15cdc, align 4
  %v7_15cdc = add i32 %v0_15cdc, -8
  %v8_15cdc = inttoptr i32 %v7_15cdc to i32*
  %v9_15cdc = load i32, i32* @ip, align 4
  store i32 %v9_15cdc, i32* %v8_15cdc, align 4
  %v10_15cdc = add i32 %v0_15cdc, -4
  %v11_15cdc = inttoptr i32 %v10_15cdc to i32*
  %v12_15cdc = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_15cdc, i32* %v11_15cdc, align 4
  store i32 %v1_15cdc, i32* %r0.global-to-local, align 4
  %v0_15ce0 = load i32, i32* %r2.global-to-local, align 4
  %v2_15ce0 = add i32 %v0_15ce0, -16
  store i32 %v2_15ce0, i32* %r2.global-to-local, align 4
  %v6_15ce4 = icmp slt i32 %v0_15ce0, 16
  br i1 %v6_15ce4, label %dec_label_pc_15ce8, label %dec_label_pc_15cb8.dec_label_pc_15cb8_crit_edge

dec_label_pc_15cb8.dec_label_pc_15cb8_crit_edge:  ; preds = %dec_label_pc_15cb8
  %v0_15cb8.pre = load i32, i32* @r3, align 4
  %v0_15cbc.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15cb8

dec_label_pc_15ce8:                               ; preds = %dec_label_pc_15cb8
  %v2_15ce8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_15ce8, i32* @r4, align 4
  %v5_15ce8 = load i8*, i8** %stack_var_-8, align 4
  %v6_15ce8 = ptrtoint i8* %v5_15ce8 to i32
  store i32 %v6_15ce8, i32* @r5, align 4
  store i32 %v11_15cb4, i32* @lr, align 4
  %v2_15cec = add i32 %v0_15ce0, -4
  store i32 %v2_15cec, i32* %r2.global-to-local, align 4
  %v4_15cec = add i32 %v0_15ce0, 2147483632
  %v5_15cec = and i32 %v2_15cec, %v4_15cec
  %v6_15cec = icmp slt i32 %v5_15cec, 0
  store i1 %v6_15cec, i1* %cpsr_v.global-to-local, align 1
  %v7_15cec = icmp slt i32 %v2_15cec, 0
  store i1 %v7_15cec, i1* %cpsr_n.global-to-local, align 1
  %v8_15cec = icmp eq i32 %v2_15cec, 0
  store i1 %v8_15cec, i1* %cpsr_z.global-to-local, align 1
  %v5_15cf0 = icmp slt i32 %v2_15ce0, -12
  br i1 %v5_15cf0, label %dec_label_pc_15d0c, label %dec_label_pc_15cf4

dec_label_pc_15cf4:                               ; preds = %dec_label_pc_15ce8, %dec_label_pc_15ca8, %dec_label_pc_15cf4
  %v1_15d00 = phi i32 [ %v5_15d00, %dec_label_pc_15cf4 ], [ %v1_15cdc, %dec_label_pc_15ce8 ], [ %v0_15c7019, %dec_label_pc_15ca8 ]
  %v0_15cf4 = load i32, i32* @r3, align 4
  %v3_15cf4 = mul i32 %v0_15cf4, 65536
  store i32 %v3_15cf4, i32* %ip.global-to-local, align 4
  %v0_15cf8 = load i32, i32* %r1.global-to-local, align 4
  %v1_15cf8 = add i32 %v0_15cf8, -4
  %v2_15cf8 = inttoptr i32 %v1_15cf8 to i32*
  %v3_15cf8 = load i32, i32* %v2_15cf8, align 4
  store i32 %v3_15cf8, i32* @r3, align 4
  store i32 %v1_15cf8, i32* %r1.global-to-local, align 4
  %v4_15cfc = udiv i32 %v3_15cf8, 65536
  %v5_15cfc = or i32 %v4_15cfc, %v3_15cf4
  store i32 %v5_15cfc, i32* @ip, align 4
  %v2_15d00 = add i32 %v1_15d00, -4
  %v3_15d00 = inttoptr i32 %v2_15d00 to i32*
  store i32 %v5_15cfc, i32* %v3_15d00, align 4
  %v4_15d00 = load i32, i32* %r0.global-to-local, align 4
  %v5_15d00 = add i32 %v4_15d00, -4
  store i32 %v5_15d00, i32* %r0.global-to-local, align 4
  %v0_15d04 = load i32, i32* %r2.global-to-local, align 4
  %v2_15d04 = add i32 %v0_15d04, -4
  store i32 %v2_15d04, i32* %r2.global-to-local, align 4
  %v6_15d08 = icmp slt i32 %v0_15d04, 4
  br i1 %v6_15d08, label %dec_label_pc_15d0c.loopexit, label %dec_label_pc_15cf4

dec_label_pc_15d0c.loopexit:                      ; preds = %dec_label_pc_15cf4
  %v4_15d04 = sub i32 3, %v0_15d04
  %v5_15d04 = and i32 %v4_15d04, %v0_15d04
  %v6_15d04 = icmp slt i32 %v5_15d04, 0
  %v7_15d04 = icmp slt i32 %v2_15d04, 0
  store i1 %v6_15d04, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_15d04, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15d0c

dec_label_pc_15d0c:                               ; preds = %dec_label_pc_15d0c.loopexit, %dec_label_pc_15ce8
  %v2_15be452 = phi i32 [ %v5_15d00, %dec_label_pc_15d0c.loopexit ], [ %v1_15cdc, %dec_label_pc_15ce8 ]
  %v0_15bd448 = phi i32 [ %v2_15d04, %dec_label_pc_15d0c.loopexit ], [ %v2_15cec, %dec_label_pc_15ce8 ]
  %v0_15d0c = load i32, i32* %r1.global-to-local, align 4
  %v1_15d0c = add i32 %v0_15d0c, 2
  store i32 %v1_15d0c, i32* %r1.global-to-local, align 4
  br label %bb150

dec_label_pc_15d14:                               ; preds = %dec_label_pc_15c28
  br i1 %v5_15d18, label %dec_label_pc_15d60, label %dec_label_pc_15d1c

dec_label_pc_15d1c:                               ; preds = %dec_label_pc_15d14
  store i32 %v2_15d14, i32* %r2.global-to-local, align 4
  %v3_15d20 = load i32, i32* @r4, align 4
  store i32 %v3_15d20, i32* %stack_var_-12, align 4
  %v6_15d20 = load i32, i32* @r5, align 4
  %v8_15d20 = inttoptr i32 %v6_15d20 to i8*
  store i8* %v8_15d20, i8** %stack_var_-8, align 4
  %v11_15d20 = load i32, i32* @lr, align 4
  br label %dec_label_pc_15d24

dec_label_pc_15d24:                               ; preds = %dec_label_pc_15d24.dec_label_pc_15d24_crit_edge, %dec_label_pc_15d1c
  %v0_15d48 = phi i32 [ %v1_15d48, %dec_label_pc_15d24.dec_label_pc_15d24_crit_edge ], [ %v0_15c7019, %dec_label_pc_15d1c ]
  %v0_15d28 = phi i32 [ %v0_15d28.pre, %dec_label_pc_15d24.dec_label_pc_15d24_crit_edge ], [ %v1_15c28, %dec_label_pc_15d1c ]
  %v0_15d24 = phi i32 [ %v0_15d24.pre, %dec_label_pc_15d24.dec_label_pc_15d24_crit_edge ], [ %v2_15c2c, %dec_label_pc_15d1c ]
  %v3_15d24 = mul i32 %v0_15d24, 16777216
  store i32 %v3_15d24, i32* %lr.global-to-local, align 4
  %v1_15d28 = add i32 %v0_15d28, -4
  %v2_15d28 = inttoptr i32 %v1_15d28 to i32*
  %v3_15d28 = load i32, i32* %v2_15d28, align 4
  store i32 %v3_15d28, i32* @r3, align 4
  %v4_15d28 = add i32 %v0_15d28, -8
  %v5_15d28 = inttoptr i32 %v4_15d28 to i32*
  %v6_15d28 = load i32, i32* %v5_15d28, align 4
  store i32 %v6_15d28, i32* %r4.global-to-local, align 4
  %v7_15d28 = add i32 %v0_15d28, -12
  %v8_15d28 = inttoptr i32 %v7_15d28 to i32*
  %v9_15d28 = load i32, i32* %v8_15d28, align 4
  store i32 %v9_15d28, i32* %r5.global-to-local, align 4
  %v10_15d28 = add i32 %v0_15d28, -16
  %v11_15d28 = inttoptr i32 %v10_15d28 to i32*
  %v12_15d28 = load i32, i32* %v11_15d28, align 4
  store i32 %v10_15d28, i32* %r1.global-to-local, align 4
  %v4_15d2c = udiv i32 %v12_15d28, 256
  %v5_15d2c = or i32 %v4_15d2c, %v3_15d24
  store i32 %v5_15d2c, i32* %lr.global-to-local, align 4
  %v3_15d30 = mul i32 %v12_15d28, 16777216
  %v4_15d34 = udiv i32 %v9_15d28, 256
  %v5_15d34 = or i32 %v3_15d30, %v4_15d34
  store i32 %v5_15d34, i32* @ip, align 4
  %v3_15d38 = mul i32 %v9_15d28, 16777216
  %v4_15d3c = udiv i32 %v6_15d28, 256
  %v5_15d3c = or i32 %v3_15d38, %v4_15d3c
  store i32 %v5_15d3c, i32* %r5.global-to-local, align 4
  %v3_15d40 = mul i32 %v6_15d28, 16777216
  %v4_15d44 = udiv i32 %v3_15d28, 256
  %v5_15d44 = or i32 %v3_15d40, %v4_15d44
  store i32 %v5_15d44, i32* %r4.global-to-local, align 4
  %v1_15d48 = add i32 %v0_15d48, -16
  %v2_15d48 = inttoptr i32 %v1_15d48 to i32*
  store i32 %v5_15d44, i32* %v2_15d48, align 4
  %v4_15d48 = add i32 %v0_15d48, -12
  %v5_15d48 = inttoptr i32 %v4_15d48 to i32*
  %v6_15d48 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_15d48, i32* %v5_15d48, align 4
  %v7_15d48 = add i32 %v0_15d48, -8
  %v8_15d48 = inttoptr i32 %v7_15d48 to i32*
  %v9_15d48 = load i32, i32* @ip, align 4
  store i32 %v9_15d48, i32* %v8_15d48, align 4
  %v10_15d48 = add i32 %v0_15d48, -4
  %v11_15d48 = inttoptr i32 %v10_15d48 to i32*
  %v12_15d48 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_15d48, i32* %v11_15d48, align 4
  store i32 %v1_15d48, i32* %r0.global-to-local, align 4
  %v0_15d4c = load i32, i32* %r2.global-to-local, align 4
  %v2_15d4c = add i32 %v0_15d4c, -16
  store i32 %v2_15d4c, i32* %r2.global-to-local, align 4
  %v6_15d50 = icmp slt i32 %v0_15d4c, 16
  br i1 %v6_15d50, label %dec_label_pc_15d54, label %dec_label_pc_15d24.dec_label_pc_15d24_crit_edge

dec_label_pc_15d24.dec_label_pc_15d24_crit_edge:  ; preds = %dec_label_pc_15d24
  %v0_15d24.pre = load i32, i32* @r3, align 4
  %v0_15d28.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15d24

dec_label_pc_15d54:                               ; preds = %dec_label_pc_15d24
  %v2_15d54 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_15d54, i32* @r4, align 4
  %v5_15d54 = load i8*, i8** %stack_var_-8, align 4
  %v6_15d54 = ptrtoint i8* %v5_15d54 to i32
  store i32 %v6_15d54, i32* @r5, align 4
  store i32 %v11_15d20, i32* @lr, align 4
  %v2_15d58 = add i32 %v0_15d4c, -4
  store i32 %v2_15d58, i32* %r2.global-to-local, align 4
  %v4_15d58 = add i32 %v0_15d4c, 2147483632
  %v5_15d58 = and i32 %v2_15d58, %v4_15d58
  %v6_15d58 = icmp slt i32 %v5_15d58, 0
  store i1 %v6_15d58, i1* %cpsr_v.global-to-local, align 1
  %v7_15d58 = icmp slt i32 %v2_15d58, 0
  store i1 %v7_15d58, i1* %cpsr_n.global-to-local, align 1
  %v8_15d58 = icmp eq i32 %v2_15d58, 0
  store i1 %v8_15d58, i1* %cpsr_z.global-to-local, align 1
  %v5_15d5c = icmp slt i32 %v2_15d4c, -12
  br i1 %v5_15d5c, label %dec_label_pc_15d78, label %dec_label_pc_15d60

dec_label_pc_15d60:                               ; preds = %dec_label_pc_15d54, %dec_label_pc_15d14, %dec_label_pc_15d60
  %v1_15d6c = phi i32 [ %v5_15d6c, %dec_label_pc_15d60 ], [ %v1_15d48, %dec_label_pc_15d54 ], [ %v0_15c7019, %dec_label_pc_15d14 ]
  %v0_15d60 = load i32, i32* @r3, align 4
  %v3_15d60 = mul i32 %v0_15d60, 16777216
  store i32 %v3_15d60, i32* %ip.global-to-local, align 4
  %v0_15d64 = load i32, i32* %r1.global-to-local, align 4
  %v1_15d64 = add i32 %v0_15d64, -4
  %v2_15d64 = inttoptr i32 %v1_15d64 to i32*
  %v3_15d64 = load i32, i32* %v2_15d64, align 4
  store i32 %v3_15d64, i32* @r3, align 4
  store i32 %v1_15d64, i32* %r1.global-to-local, align 4
  %v4_15d68 = udiv i32 %v3_15d64, 256
  %v5_15d68 = or i32 %v4_15d68, %v3_15d60
  store i32 %v5_15d68, i32* @ip, align 4
  %v2_15d6c = add i32 %v1_15d6c, -4
  %v3_15d6c = inttoptr i32 %v2_15d6c to i32*
  store i32 %v5_15d68, i32* %v3_15d6c, align 4
  %v4_15d6c = load i32, i32* %r0.global-to-local, align 4
  %v5_15d6c = add i32 %v4_15d6c, -4
  store i32 %v5_15d6c, i32* %r0.global-to-local, align 4
  %v0_15d70 = load i32, i32* %r2.global-to-local, align 4
  %v2_15d70 = add i32 %v0_15d70, -4
  store i32 %v2_15d70, i32* %r2.global-to-local, align 4
  %v6_15d74 = icmp slt i32 %v0_15d70, 4
  br i1 %v6_15d74, label %dec_label_pc_15d78.loopexit, label %dec_label_pc_15d60

dec_label_pc_15d78.loopexit:                      ; preds = %dec_label_pc_15d60
  %v4_15d70 = sub i32 3, %v0_15d70
  %v5_15d70 = and i32 %v4_15d70, %v0_15d70
  %v6_15d70 = icmp slt i32 %v5_15d70, 0
  %v7_15d70 = icmp slt i32 %v2_15d70, 0
  store i1 %v6_15d70, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_15d70, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15d78

dec_label_pc_15d78:                               ; preds = %dec_label_pc_15d78.loopexit, %dec_label_pc_15d54
  %v2_15be453 = phi i32 [ %v5_15d6c, %dec_label_pc_15d78.loopexit ], [ %v1_15d48, %dec_label_pc_15d54 ]
  %v0_15bd449 = phi i32 [ %v2_15d70, %dec_label_pc_15d78.loopexit ], [ %v2_15d58, %dec_label_pc_15d54 ]
  %v0_15d78 = load i32, i32* %r1.global-to-local, align 4
  %v1_15d78 = add i32 %v0_15d78, 1
  store i32 %v1_15d78, i32* %r1.global-to-local, align 4
  br label %bb150

; uselistorder directives
  uselistorder i32 %v5_15d6c, { 0, 2, 1 }
  uselistorder i32 %v3_15d60, { 1, 0 }
  uselistorder i32 %v2_15d58, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_15d48, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_15d28, { 1, 0 }
  uselistorder i32 %v3_15d24, { 1, 0 }
  uselistorder i32 %v0_15d28, { 3, 2, 1, 0 }
  uselistorder i32 %v0_15d48, { 3, 2, 1, 0 }
  uselistorder i32 %v5_15d00, { 0, 2, 1 }
  uselistorder i32 %v3_15cf4, { 1, 0 }
  uselistorder i32 %v2_15cec, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_15cdc, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_15cbc, { 1, 0 }
  uselistorder i32 %v3_15cb8, { 1, 0 }
  uselistorder i32 %v0_15cbc, { 3, 2, 1, 0 }
  uselistorder i32 %v0_15cdc, { 3, 2, 1, 0 }
  uselistorder i32 %v5_15c94, { 0, 2, 1 }
  uselistorder i32 %v3_15c88, { 1, 0 }
  uselistorder i32 %v2_15c80, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_15c70, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_15c50, { 1, 0 }
  uselistorder i32 %v3_15c4c, { 1, 0 }
  uselistorder i32 %v0_15c50, { 3, 2, 1, 0 }
  uselistorder i32 %v0_15c70, { 3, 2, 1, 0 }
  uselistorder i1 %v5_15d18, { 2, 0, 1 }
  uselistorder i32 %v0_15c30, { 1, 0 }
  uselistorder i32 %v0_15d1c, { 4, 1, 0, 3, 2 }
  uselistorder i32 %v0_15c7019, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_15c20, { 2, 1, 0 }
  uselistorder i32 %v0_15c20, { 2, 0, 1 }
  uselistorder i32 %v2_15c18, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_15c18, { 1, 2, 0, 3 }
  uselistorder i32 %v0_15c18, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_15c7020, { 2, 1, 0 }
  uselistorder i32 %v11_15bf4, { 1, 0 }
  uselistorder i32 %v7_15bf4, { 1, 0 }
  uselistorder i32 %v1_15bd4, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_15bd4, { 1, 2, 0, 3 }
  uselistorder i32 %v2_15bd8, { 1, 0 }
  uselistorder i32 %v7_15bcc, { 0, 2, 1 }
  uselistorder i32 %v10_15bc8, { 1, 0 }
  uselistorder i32 %v9_15bc0, { 1, 0, 2 }
  uselistorder i32 %v6_15bbc, { 1, 0 }
  uselistorder i32 %v2_15bb4, { 0, 2, 1, 3, 5, 6, 4, 7 }
  uselistorder i32 %v0_15bb4, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_15bc4, { 0, 3, 2, 1 }
  uselistorder i32 %v7_15ba8, { 0, 2, 1 }
  uselistorder i32 %v13_15ba4, { 1, 0 }
  uselistorder i32 %v4_15ba0, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_15ba0, { 2, 0, 1 }
  uselistorder i32 %v6_15ba8, { 0, 3, 2, 1 }
  uselistorder i32 %v7_15b98, { 0, 2, 1 }
  uselistorder i32 %v16_15b94, { 1, 0 }
  uselistorder i32 %v4_15b90, { 1, 2, 0 }
  uselistorder i32 %v0_15ba0.pr, { 1, 3, 0, 2 }
  uselistorder i32 %v6_15b98, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_15b84, { 0, 3, 2, 1 }
  uselistorder i32 %v10_15b80, { 1, 0 }
  uselistorder i32 %v1_15b7c, { 1, 0 }
  uselistorder i32 %v10_15b78, { 1, 0 }
  uselistorder i32 %v0_15b78, { 3, 2, 1, 0 }
  uselistorder i32 %v0_15b7c, { 0, 1, 2, 3, 7, 6, 5, 4 }
  uselistorder i32 %v2_15b70, { 0, 2, 1 }
  uselistorder i32 %v2_15b64, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_15b64, { 1, 2, 6, 3, 0, 5, 4 }
  uselistorder i32 %v0_15b7c37, { 1, 2, 0 }
  uselistorder i32 %v1_15b5c, { 2, 1, 0 }
  uselistorder i32 %v1_15b54, { 2, 3, 1, 0 }
  uselistorder i32 %v2_15b4c, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v2_15b48, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 %v2_15b44, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v1_15b44, { 3, 4, 0, 6, 5, 1, 2 }
  uselistorder i32 %v1_15b34, { 0, 2, 1 }
  uselistorder i32 %v4_15b30, { 1, 0 }
  uselistorder i32 %v3_15b24, { 1, 0 }
  uselistorder i32 %v1_15b1c, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_15b10, { 1, 0 }
  uselistorder i32 %v12_15b0c, { 0, 2, 1 }
  uselistorder i32 %v8_15aec, { 1, 0, 2 }
  uselistorder i32 %v5_15aec, { 1, 0, 2 }
  uselistorder i32 %v2_15aec, { 1, 0, 2 }
  uselistorder i32 %v0_15aec, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_15b0c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_15ac8, { 0, 2, 1 }
  uselistorder i32 %v4_15ac4, { 1, 0 }
  uselistorder i32 %v3_15ab8, { 1, 0 }
  uselistorder i32 %v1_15ab0, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_15aa4, { 1, 0 }
  uselistorder i32 %v12_15aa0, { 0, 2, 1 }
  uselistorder i32 %v8_15a80, { 1, 0, 2 }
  uselistorder i32 %v5_15a80, { 1, 0, 2 }
  uselistorder i32 %v2_15a80, { 1, 0, 2 }
  uselistorder i32 %v0_15a80, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_15aa0, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_15a5c, { 0, 2, 1 }
  uselistorder i32 %v4_15a58, { 1, 0 }
  uselistorder i32 %v3_15a4c, { 1, 0 }
  uselistorder i32 %v1_15a44, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_15a38, { 1, 0 }
  uselistorder i32 %v12_15a34, { 0, 2, 1 }
  uselistorder i32 %v8_15a14, { 1, 0, 2 }
  uselistorder i32 %v5_15a14, { 1, 0, 2 }
  uselistorder i32 %v2_15a14, { 1, 0, 2 }
  uselistorder i32 %v0_15a14, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_15a34, { 4, 3, 2, 1, 0 }
  uselistorder i1 %v2_15a70, { 0, 2, 1 }
  uselistorder i32 %v1_15a6c, { 2, 0, 1, 3 }
  uselistorder i32 %v4_159f0, { 2, 0, 1, 3 }
  uselistorder i32 %v2_159f0, { 2, 0, 1, 3 }
  uselistorder i32 %v0_15a74, { 1, 0, 3, 2 }
  uselistorder i32 %v0_15b0c76, { 0, 5, 1, 3, 2, 4 }
  uselistorder i32 %v1_159e4, { 1, 0 }
  uselistorder i32 %v0_159e4, { 3, 1, 0, 2 }
  uselistorder i32 %v2_159dc, { 2, 4, 0, 5, 1, 3 }
  uselistorder i32 %v1_159dc, { 1, 0, 2 }
  uselistorder i32 %v0_159dc, { 2, 0, 1, 3 }
  uselistorder i32 %v0_15b0c77, { 1, 0 }
  uselistorder i32 %v1_159bc, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_159c4, { 1, 0 }
  uselistorder i32 %v0_15998, { 3, 0, 1, 2 }
  uselistorder i32 %v1_1598c, { 1, 2, 0, 3 }
  uselistorder i32 %v5_15978, { 1, 0, 2 }
  uselistorder i32 %v1_15974, { 1, 0 }
  uselistorder i32 %v1_1596c, { 2, 0, 1, 4, 5, 3, 6 }
  uselistorder i32 %v0_1596c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_15964, { 0, 2, 1 }
  uselistorder i32 %v3_15964, { 3, 0, 1, 2 }
  uselistorder i1 %v0_15964, { 1, 0 }
  uselistorder i1 %v1_15964, { 1, 0 }
  uselistorder i32 %v3_15960, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_15958, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_15944, { 1, 2, 0 }
  uselistorder i32 %v1_1593c, { 0, 2, 1 }
  uselistorder i32 %v12_15938, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1592c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_15930, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 11, 10, 9, 8 }
  uselistorder i32 %v1_15920, { 0, 2, 1 }
  uselistorder i32 %v1_15918, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_15918, { 1, 2, 3, 0, 5, 4 }
  uselistorder i32 %v1_15910, { 1, 0 }
  uselistorder i32 %v1_15908, { 2, 1, 0 }
  uselistorder i32 %v2_15900, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v0_15900, { 1, 4, 0, 2, 3 }
  uselistorder i32 %v8_158fc, { 1, 0 }
  uselistorder i32 %v2_158f0, { 1, 0 }
  uselistorder i32 %v1_158f0, { 1, 4, 5, 3, 0, 6, 8, 2, 7, 9 }
  uselistorder i32 %v0_158f0, { 1, 7, 8, 6, 4, 0, 5, 10, 2, 3, 9, 11 }
  uselistorder i8** %stack_var_-8, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 15, 16, 17, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 26, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32* %r2.global-to-local, { 0, 69, 1, 2, 3, 4, 5, 70, 6, 7, 8, 9, 10, 71, 11, 12, 67, 68, 72, 28, 13, 14, 16, 15, 17, 18, 19, 20, 21, 22, 24, 23, 25, 26, 27, 29, 30, 62, 31, 32, 33, 34, 35, 63, 36, 37, 38, 39, 40, 64, 41, 42, 43, 44, 45, 65, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 66 }
  uselistorder i32* %r1.global-to-local, { 1, 3, 0, 56, 2, 4, 6, 8, 5, 57, 7, 9, 11, 54, 10, 58, 53, 55, 59, 62, 60, 66, 67, 12, 13, 14, 16, 15, 17, 18, 61, 19, 20, 63, 21, 64, 22, 65, 23, 24, 25, 26, 27, 30, 28, 40, 29, 31, 34, 32, 41, 33, 35, 38, 36, 42, 37, 39, 43, 44, 47, 45, 48, 46, 49, 50, 51, 52 }
  uselistorder i32* %r0.global-to-local, { 0, 28, 1, 2, 29, 3, 4, 30, 5, 27, 33, 34, 6, 7, 19, 8, 10, 9, 11, 12, 31, 13, 14, 32, 15, 16, 17, 18, 20, 21, 23, 22, 24, 25, 26 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 5, 35, 36, 37, 6, 7, 8, 9, 10, 11, 12, 13, 14, 23, 15, 16, 17, 24, 18, 19, 20, 25, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34 }
  uselistorder i1* %cpsr_z.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 46, 47, 11, 12, 13, 14, 15, 16, 17, 18, 3, 19, 20, 21, 22, 23, 2, 24, 0, 25, 1, 27, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45 }
  uselistorder i1* %cpsr_v.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 44, 11, 12, 13, 14, 15, 16, 17, 18, 19, 3, 20, 21, 22, 2, 23, 0, 24, 1, 26, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i1* %cpsr_n.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 49, 50, 11, 12, 13, 14, 15, 16, 17, 18, 19, 3, 20, 21, 22, 23, 24, 2, 25, 0, 26, 1, 28, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48 }
  uselistorder i32 -20, { 1, 0 }
  uselistorder i32 -3, { 0, 4, 5, 3, 1, 2 }
  uselistorder i32 2147483632, { 3, 4, 5, 2, 0, 1, 6 }
  uselistorder i32 15, { 4, 5, 6, 0, 8, 1, 13, 7, 9, 2, 3, 10, 11, 12 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 27, 2, 4, 5, 3, 6, 7, 8, 9, 18, 32, 37, 35, 36, 34, 28, 29, 19, 20, 30, 31, 33, 22, 23, 24, 21, 25, 26, 13, 14, 10, 11, 12, 15, 16, 17, 0, 1 }
  uselistorder i32 -5, { 1, 0 }
  uselistorder i32 11, { 6, 7, 8, 17, 9, 26, 10, 11, 12, 1, 13, 2, 14, 0, 15, 16, 18, 19, 3, 20, 4, 21, 5, 22, 23, 24, 25 }
  uselistorder i32 -12, { 0, 12, 13, 1, 15, 16, 2, 17, 18, 14, 11, 10, 9, 8, 7, 19, 20, 21, 22, 6, 3, 5, 4, 23 }
  uselistorder i32 48, { 0, 2, 4, 11, 3, 5, 6, 12, 13, 7, 8, 9, 10, 17, 18, 19, 14, 15, 16, 1 }
  uselistorder i32 40, { 2, 6, 8, 1, 4, 3, 7, 9, 5, 10, 11, 12, 13, 14, 15, 17, 16, 0 }
  uselistorder i32 36, { 4, 19, 5, 6, 7, 20, 8, 17, 9, 18, 10, 11, 12, 0, 1, 13, 2, 14, 3, 15, 16 }
  uselistorder i32 -16, { 6, 7, 8, 9, 10, 11, 12, 13, 14, 5, 4, 3, 1, 15, 16, 17, 18, 19, 20, 2, 0 }
  uselistorder i32 31, { 1, 2, 3, 0 }
  uselistorder i32 -32, { 3, 2, 4, 0, 1 }
  uselistorder i32 24, { 0, 56, 57, 58, 59, 8, 9, 10, 12, 11, 13, 1, 14, 60, 61, 62, 15, 63, 16, 17, 64, 18, 55, 90, 91, 51, 52, 53, 54, 19, 20, 21, 22, 82, 83, 23, 24, 101, 25, 2, 26, 92, 93, 27, 94, 49, 50, 75, 28, 76, 29, 77, 84, 85, 30, 78, 79, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 80, 81, 86, 87, 88, 89, 31, 32, 33, 34, 3, 35, 36, 95, 37, 38, 4, 39, 40, 41, 42, 43, 44, 96, 45, 5, 97, 98, 99, 100, 46, 47, 102, 48, 6, 103, 7 }
  uselistorder i32 27, { 1, 0, 2, 3 }
  uselistorder i32 -28, { 1, 2, 0 }
  uselistorder i32* @lr, { 154, 155, 156, 157, 158, 159, 160, 161, 162, 4, 5, 6, 7, 8, 9, 10, 11, 12, 3, 49, 50, 163, 164, 13, 14, 118, 119, 120, 121, 122, 123, 29, 30, 31, 124, 137, 138, 125, 126, 127, 128, 129, 130, 131, 2, 132, 133, 135, 136, 134, 51, 52, 53, 54, 55, 56, 139, 140, 141, 57, 142, 143, 32, 15, 33, 34, 35, 36, 0, 40, 41, 37, 38, 39, 16, 17, 18, 19, 20, 21, 22, 24, 23, 1, 25, 26, 27, 28, 42, 43, 44, 45, 46, 47, 48, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 107, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 98, 99 }
  uselistorder label %dec_label_pc_15d60, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15cf4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15c88, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15c28, { 1, 0 }
  uselistorder label %.thread14, { 2, 0, 1 }
  uselistorder label %.thread129, { 1, 0 }
  uselistorder label %bb150, { 4, 5, 6, 3, 7, 0, 1, 2 }
  uselistorder label %dec_label_pc_15bb4, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_15b78, { 1, 0 }
  uselistorder label %dec_label_pc_15b64, { 1, 0 }
  uselistorder label %dec_label_pc_15b24, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15ab8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15a4c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_159ec, { 1, 0 }
  uselistorder label %.thread128, { 1, 0 }
  uselistorder label %.thread127, { 1, 0 }
  uselistorder label %dec_label_pc_159bc, { 1, 0 }
  uselistorder label %.thread126, { 1, 0 }
  uselistorder label %.thread125, { 1, 0 }
  uselistorder label %bb142, { 1, 0 }
  uselistorder label %bb140, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %.thread115, { 1, 0 }
  uselistorder label %dec_label_pc_15958, { 1, 0 }
  uselistorder label %bb137, { 1, 0 }
  uselistorder label %dec_label_pc_15918, { 1, 0 }
}

define i32 @function_15d80(i32 %arg1) local_unnamed_addr {
dec_label_pc_15d80:
  %v1_15d80 = and i32 %arg1, -4
  %v1_15d84 = inttoptr i32 %v1_15d80 to i32*
  %v2_15d84 = load i32, i32* %v1_15d84, align 4
  %v1_15d88 = urem i32 %arg1, 4
  store i32 %v1_15d88, i32* @r3, align 4
  %v2_15d88 = icmp eq i32 %v1_15d88, 0
  %v1_15d8c = sub nsw i32 0, %v1_15d88
  br i1 %v2_15d88, label %.preheader.preheader, label %dec_label_pc_15d94

dec_label_pc_15d94:                               ; preds = %dec_label_pc_15d80
  %v1_15d94 = or i32 %v2_15d84, 255
  %v7_15d98 = icmp eq i32 %v1_15d88, 1
  br i1 %v7_15d98, label %bb33, label %bb

bb:                                               ; preds = %dec_label_pc_15d94
  %v9_15d9c = or i32 %v2_15d84, 65535
  br label %bb33

bb33:                                             ; preds = %dec_label_pc_15d94, %bb
  %v8_15da4 = phi i32 [ %v1_15d94, %dec_label_pc_15d94 ], [ %v9_15d9c, %bb ]
  %v1_15da0 = add nsw i32 %v1_15d88, -2
  store i32 %v1_15da0, i32* @r3, align 4
  %v7_15da4 = icmp eq i32 %v1_15d88, 3
  br i1 %v7_15da4, label %bb34, label %.preheader.preheader

bb34:                                             ; preds = %bb33
  %v9_15da4 = or i32 %v8_15da4, 16711680
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %bb33, %bb34, %dec_label_pc_15d80
  %v1_15db4.ph = phi i32 [ %v2_15d84, %dec_label_pc_15d80 ], [ %v9_15da4, %bb34 ], [ %v8_15da4, %bb33 ]
  %v1_15da838 = urem i32 %v1_15db4.ph, 256
  %v2_15da839 = icmp eq i32 %v1_15da838, 0
  %v2_15dac40 = and i32 %v1_15db4.ph, 65280
  %v3_15dac41 = icmp eq i32 %v2_15dac40, 0
  %or.cond42 = or i1 %v2_15da839, %v3_15dac41
  %v2_15db043 = and i32 %v1_15db4.ph, 16711680
  %v3_15db044 = icmp eq i32 %v2_15db043, 0
  %or.cond3145 = or i1 %v3_15db044, %or.cond42
  %v4_15db446 = icmp ult i32 %v1_15db4.ph, 16777216
  %or.cond3247 = or i1 %v4_15db446, %or.cond3145
  br i1 %or.cond3247, label %dec_label_pc_15dc4, label %.thread4

.thread4:                                         ; preds = %.preheader.preheader, %.thread4
  %v1_15db81349 = phi i32 [ %v2_15db814, %.thread4 ], [ %v1_15d8c, %.preheader.preheader ]
  %v1_15dbc48.in = phi i32 [ %v1_15dbc48, %.thread4 ], [ %v1_15d80, %.preheader.preheader ]
  %v1_15dbc48 = add i32 %v1_15dbc48.in, 4
  %v2_15db814 = add i32 %v1_15db81349, 4
  %v2_15dbc = inttoptr i32 %v1_15dbc48 to i32*
  %v3_15dbc = load i32, i32* %v2_15dbc, align 4
  %v1_15da8 = urem i32 %v3_15dbc, 256
  %v2_15da8 = icmp eq i32 %v1_15da8, 0
  %v2_15dac = and i32 %v3_15dbc, 65280
  %v3_15dac = icmp eq i32 %v2_15dac, 0
  %or.cond = or i1 %v2_15da8, %v3_15dac
  %v2_15db0 = and i32 %v3_15dbc, 16711680
  %v3_15db0 = icmp eq i32 %v2_15db0, 0
  %or.cond31 = or i1 %v3_15db0, %or.cond
  %v4_15db4 = icmp ult i32 %v3_15dbc, 16777216
  %or.cond32 = or i1 %v4_15db4, %or.cond31
  br i1 %or.cond32, label %dec_label_pc_15dc4, label %.thread4

dec_label_pc_15dc4:                               ; preds = %.thread4, %.preheader.preheader
  %v1_15db813.lcssa = phi i32 [ %v1_15d8c, %.preheader.preheader ], [ %v2_15db814, %.thread4 ]
  %v2_15da8.lcssa = phi i1 [ %v2_15da839, %.preheader.preheader ], [ %v2_15da8, %.thread4 ]
  %v3_15dac.lcssa = phi i1 [ %v3_15dac41, %.preheader.preheader ], [ %v3_15dac, %.thread4 ]
  %v3_15db0.lcssa = phi i1 [ %v3_15db044, %.preheader.preheader ], [ %v3_15db0, %.thread4 ]
  br i1 %v2_15da8.lcssa, label %.thread10, label %bb35

bb35:                                             ; preds = %dec_label_pc_15dc4
  %v2_15dc8 = add i32 %v1_15db813.lcssa, 1
  br i1 %v3_15dac.lcssa, label %.thread10, label %bb36

bb36:                                             ; preds = %bb35
  %v2_15dd017 = add i32 %v1_15db813.lcssa, 2
  br i1 %v3_15db0.lcssa, label %.thread10, label %bb37

bb37:                                             ; preds = %bb36
  %v2_15dd8 = add i32 %v1_15db813.lcssa, 3
  br label %.thread10

.thread10:                                        ; preds = %dec_label_pc_15dc4, %bb35, %bb36, %bb37
  %v1_15ddc = phi i32 [ %v2_15dc8, %bb35 ], [ %v2_15dd017, %bb36 ], [ %v2_15dd8, %bb37 ], [ %v1_15db813.lcssa, %dec_label_pc_15dc4 ]
  ret i32 %v1_15ddc

; uselistorder directives
  uselistorder i32 %v1_15db813.lcssa, { 1, 3, 2, 0 }
  uselistorder i32 %v3_15dbc, { 3, 2, 1, 0 }
  uselistorder i32 %v1_15db4.ph, { 1, 2, 3, 0 }
  uselistorder i32 %v1_15d88, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 16711680, { 1, 0, 3, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32 -2, { 1, 3, 4, 2, 6, 7, 8, 0, 5, 22, 21, 23, 24, 25, 14, 15, 16, 17, 18, 19, 20, 9, 10, 11, 12, 13 }
  uselistorder i32 65535, { 2, 5, 0, 1, 3, 4 }
  uselistorder i32 -4, { 46, 17, 61, 62, 63, 6, 18, 19, 20, 64, 65, 66, 7, 21, 22, 23, 67, 68, 69, 8, 24, 25, 70, 16, 15, 71, 72, 73, 14, 13, 12, 11, 26, 27, 28, 29, 30, 5, 31, 3, 32, 4, 74, 10, 33, 48, 49, 50, 9, 51, 52, 53, 34, 47, 2, 35, 40, 41, 42, 43, 44, 45, 0, 1, 54, 55, 56, 57, 58, 59, 60, 36, 37, 38, 39 }
  uselistorder label %.thread10, { 3, 2, 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0, 2 }
  uselistorder label %bb33, { 1, 0 }
}

define i32 @function_15de0(i8* %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_15de4.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_15de0

dec_label_pc_15de0:                               ; preds = %bb3, %bb
  %v0_15de4 = phi i32 [ %v0_15de4.pre, %bb ], [ %v5_15de4, %bb3 ]
  %v0_15de0 = phi i32 [ %tmp, %bb ], [ %v5_15de0, %bb3 ]
  %v1_15de0 = inttoptr i32 %v0_15de0 to i8*
  %v2_15de0 = load i8, i8* %v1_15de0, align 1
  %v1_15de4 = inttoptr i32 %v0_15de4 to i8*
  %v2_15de4 = load i8, i8* %v1_15de4, align 1
  %v3_15de4 = zext i8 %v2_15de4 to i32
  %v2_15de8 = icmp eq i8 %v2_15de0, 0
  br i1 %v2_15de8, label %.dec_label_pc_15df4_crit_edge, label %bb3

bb3:                                              ; preds = %dec_label_pc_15de0
  %v5_15de4 = add i32 %v0_15de4, 1
  %v5_15de0 = add i32 %v0_15de0, 1
  %v3_15de0 = zext i8 %v2_15de0 to i32
  %v10_15dec = icmp eq i8 %v2_15de0, %v2_15de4
  br i1 %v10_15dec, label %dec_label_pc_15de0, label %dec_label_pc_15df4

.dec_label_pc_15df4_crit_edge:                    ; preds = %dec_label_pc_15de0
  br label %dec_label_pc_15df4

dec_label_pc_15df4:                               ; preds = %bb3, %.dec_label_pc_15df4_crit_edge
  %.pn = phi i32 [ 0, %.dec_label_pc_15df4_crit_edge ], [ %v3_15de0, %bb3 ]
  %v2_15df4.pre-phi = sub nsw i32 %.pn, %v3_15de4
  ret i32 %v2_15df4.pre-phi

; uselistorder directives
  uselistorder i8 %v2_15de0, { 0, 2, 1 }
  uselistorder i32 %v0_15de0, { 1, 0 }
  uselistorder i32 %v0_15de4, { 1, 0 }
  uselistorder label %dec_label_pc_15df4, { 1, 0 }
}

define i32 @function_15e00() local_unnamed_addr {
dec_label_pc_15e00:
  %stack_var_-16 = alloca i32, align 4
  %v3_15e00 = load i32, i32* @r4, align 4
  store i32 %v3_15e00, i32* %stack_var_-16, align 4
  %v6_15e00 = load i32, i32* @r5, align 4
  %v9_15e00 = load i32, i32* @r6, align 4
  %v0_15e04 = load i32, i32* @r0, align 4
  %v0_15e08 = load i32, i32* @r1, align 4
  store i32 %v0_15e08, i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  %v1_15e248 = inttoptr i32 %v0_15e04 to i8*
  %v2_15e249 = load i8, i8* %v1_15e248, align 1
  %v2_15e2811 = icmp eq i8 %v2_15e249, 0
  store i32 %v0_15e08, i32* @r0, align 4
  %v1_15e3012 = add i32 %v0_15e04, 1
  store i32 %v1_15e3012, i32* @r4, align 4
  br i1 %v2_15e2811, label %dec_label_pc_15e38, label %dec_label_pc_15e14

dec_label_pc_15e14:                               ; preds = %dec_label_pc_15e00, %dec_label_pc_15e20
  %v3_15e2414.in = phi i8 [ %v2_15e24, %dec_label_pc_15e20 ], [ %v2_15e249, %dec_label_pc_15e00 ]
  %v0_15e2c13 = phi i32 [ %v0_15e2c.pre, %dec_label_pc_15e20 ], [ %v0_15e08, %dec_label_pc_15e00 ]
  %v3_15e2414 = zext i8 %v3_15e2414.in to i32
  %v2_15e14 = call i32 @function_15fcc(i32 %v0_15e2c13, i32 %v3_15e2414)
  %v2_15e18 = icmp eq i32 %v2_15e14, 0
  %v0_15e20 = load i32, i32* @r5, align 4
  br i1 %v2_15e18, label %dec_label_pc_15e20, label %dec_label_pc_15e38

dec_label_pc_15e20:                               ; preds = %dec_label_pc_15e14
  %v1_15e20 = add i32 %v0_15e20, 1
  %v0_15e24.pre = load i32, i32* @r4, align 4
  %v0_15e2c.pre = load i32, i32* @r6, align 4
  store i32 %v1_15e20, i32* @r5, align 4
  %v1_15e24 = inttoptr i32 %v0_15e24.pre to i8*
  %v2_15e24 = load i8, i8* %v1_15e24, align 1
  %v2_15e28 = icmp eq i8 %v2_15e24, 0
  store i32 %v0_15e2c.pre, i32* @r0, align 4
  %v1_15e30 = add i32 %v0_15e24.pre, 1
  store i32 %v1_15e30, i32* @r4, align 4
  br i1 %v2_15e28, label %dec_label_pc_15e38, label %dec_label_pc_15e14

dec_label_pc_15e38:                               ; preds = %dec_label_pc_15e20, %dec_label_pc_15e14, %dec_label_pc_15e00
  %v0_15e38 = phi i32 [ 0, %dec_label_pc_15e00 ], [ %v0_15e20, %dec_label_pc_15e14 ], [ %v1_15e20, %dec_label_pc_15e20 ]
  %v2_15e3c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_15e3c, i32* @r4, align 4
  store i32 %v6_15e00, i32* @r5, align 4
  store i32 %v9_15e00, i32* @r6, align 4
  ret i32 %v0_15e38

; uselistorder directives
  uselistorder i8 %v2_15e24, { 1, 0 }
  uselistorder i32 %v0_15e2c.pre, { 1, 0 }
  uselistorder i32 %v0_15e24.pre, { 1, 0 }
  uselistorder i32* @r6, {}
  uselistorder label %dec_label_pc_15e14, { 1, 0 }
}

define i32 @function_15e44(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15e44:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_15e742 = load i32, i32* @r0, align 4
  %v1_15e743 = inttoptr i32 %v0_15e742 to i8*
  %v2_15e744 = load i8, i8* %v1_15e743, align 1
  %v3_15e745 = zext i8 %v2_15e744 to i32
  store i32 %v3_15e745, i32* @ip, align 4
  %v2_15e786 = icmp eq i8 %v2_15e744, 0
  br i1 %v2_15e786, label %dec_label_pc_15e84, label %dec_label_pc_15e58.preheader

dec_label_pc_15e50:                               ; preds = %dec_label_pc_15e58
  %v3_15e58 = zext i8 %v2_15e58 to i32
  %v1_15e60 = add i32 %v0_15e60, 1
  %v9_15e50 = icmp eq i32 %v0_15e5010, %v3_15e58
  br i1 %v9_15e50, label %dec_label_pc_15e6c, label %dec_label_pc_15e58

dec_label_pc_15e58:                               ; preds = %dec_label_pc_15e58.preheader, %dec_label_pc_15e50
  %v0_15e60 = phi i32 [ %tmp, %dec_label_pc_15e58.preheader ], [ %v1_15e60, %dec_label_pc_15e50 ]
  %v1_15e58 = inttoptr i32 %v0_15e60 to i8*
  %v2_15e58 = load i8, i8* %v1_15e58, align 1
  %v2_15e5c = icmp eq i8 %v2_15e58, 0
  br i1 %v2_15e5c, label %dec_label_pc_15e84, label %dec_label_pc_15e50

dec_label_pc_15e6c:                               ; preds = %dec_label_pc_15e50
  %v1_15e6c = add i32 %v0_15e6c, 1
  %v1_15e70 = add i32 %v0_15e70, 1
  %v1_15e74 = inttoptr i32 %v1_15e70 to i8*
  %v2_15e74 = load i8, i8* %v1_15e74, align 1
  %v3_15e74 = zext i8 %v2_15e74 to i32
  store i32 %v3_15e74, i32* @ip, align 4
  %v2_15e78 = icmp eq i8 %v2_15e74, 0
  br i1 %v2_15e78, label %dec_label_pc_15e84, label %dec_label_pc_15e58.preheader

dec_label_pc_15e58.preheader:                     ; preds = %dec_label_pc_15e44, %dec_label_pc_15e6c
  %v0_15e70 = phi i32 [ %v1_15e70, %dec_label_pc_15e6c ], [ %v0_15e742, %dec_label_pc_15e44 ]
  %v0_15e6c = phi i32 [ %v1_15e6c, %dec_label_pc_15e6c ], [ 0, %dec_label_pc_15e44 ]
  %v0_15e5010 = phi i32 [ %v3_15e74, %dec_label_pc_15e6c ], [ %v3_15e745, %dec_label_pc_15e44 ]
  br label %dec_label_pc_15e58

dec_label_pc_15e84:                               ; preds = %dec_label_pc_15e6c, %dec_label_pc_15e58, %dec_label_pc_15e44
  %v0_15e84 = phi i32 [ 0, %dec_label_pc_15e44 ], [ %v0_15e6c, %dec_label_pc_15e58 ], [ %v1_15e6c, %dec_label_pc_15e6c ]
  ret i32 %v0_15e84

; uselistorder directives
  uselistorder i32 %v0_15e60, { 1, 0 }
  uselistorder label %dec_label_pc_15e58.preheader, { 1, 0 }
}

define i32 @function_15e90(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_15e90:
  store i32 %arg1, i32* @r0, align 4
  %v1_15e94 = urem i32 %arg2, 256
  store i32 %v1_15e94, i32* @r4, align 4
  %v2_15e94 = icmp eq i32 %v1_15e94, 0
  br i1 %v2_15e94, label %dec_label_pc_15ea8, label %dec_label_pc_15ebc.preheader

dec_label_pc_15ebc.preheader:                     ; preds = %dec_label_pc_15e90
  store i32 0, i32* @r5, align 4
  store i32 %arg1, i32* @r0, align 4
  %v2_15ec43 = call i32 @function_15fcc(i32 %arg1, i32 %v1_15e94)
  %v2_15ec85 = icmp eq i32 %v2_15ec43, 0
  br i1 %v2_15ec85, label %dec_label_pc_15ed0, label %dec_label_pc_15eb4

dec_label_pc_15ea8:                               ; preds = %dec_label_pc_15e90
  %v2_15eac = call i32 @function_15fcc(i32 %arg1, i32 0)
  br label %dec_label_pc_15ed4

dec_label_pc_15eb4:                               ; preds = %dec_label_pc_15ebc.preheader, %dec_label_pc_15eb4
  %v2_15ec46 = phi i32 [ %v2_15ec4, %dec_label_pc_15eb4 ], [ %v2_15ec43, %dec_label_pc_15ebc.preheader ]
  store i32 %v2_15ec46, i32* @r5, align 4
  %v1_15eb8 = add i32 %v2_15ec46, 1
  store i32 %v1_15eb8, i32* @r0, align 4
  %v0_15ec0 = load i32, i32* @r4, align 4
  %v2_15ec4 = call i32 @function_15fcc(i32 %v1_15eb8, i32 %v0_15ec0)
  %v2_15ec8 = icmp eq i32 %v2_15ec4, 0
  br i1 %v2_15ec8, label %dec_label_pc_15ed0, label %dec_label_pc_15eb4

dec_label_pc_15ed0:                               ; preds = %dec_label_pc_15eb4, %dec_label_pc_15ebc.preheader
  %v0_15ed0 = load i32, i32* @r5, align 4
  br label %dec_label_pc_15ed4

dec_label_pc_15ed4:                               ; preds = %dec_label_pc_15ea8, %dec_label_pc_15ed0
  %storemerge = phi i32 [ %v2_15eac, %dec_label_pc_15ea8 ], [ %v0_15ed0, %dec_label_pc_15ed0 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_15ec4, { 1, 0 }
  uselistorder i32 %v1_15eb8, { 1, 0 }
  uselistorder i32 %v1_15e94, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_15fcc, { 2, 1, 0, 5, 4, 3 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_15ed4, { 1, 0 }
  uselistorder label %dec_label_pc_15eb4, { 1, 0 }
}

define i32 @function_15ee0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_15ee0:
  %v1_15ee4 = urem i32 %arg1, 256
  %v0_15f042 = load i32, i32* @r0, align 4
  %v1_15f043 = urem i32 %v0_15f042, 4
  %v2_15f044 = icmp eq i32 %v1_15f043, 0
  br i1 %v2_15f044, label %dec_label_pc_15f0c, label %dec_label_pc_15eec

dec_label_pc_15eec:                               ; preds = %dec_label_pc_15ee0, %dec_label_pc_15f00
  %v0_15f00 = phi i32 [ %v1_15f00, %dec_label_pc_15f00 ], [ %v0_15f042, %dec_label_pc_15ee0 ]
  %v1_15eec = inttoptr i32 %v0_15f00 to i8*
  %v2_15eec = load i8, i8* %v1_15eec, align 1
  %v3_15eec = zext i8 %v2_15eec to i32
  %v9_15ef0 = icmp eq i32 %v3_15eec, %v1_15ee4
  br i1 %v9_15ef0, label %dec_label_pc_15fbc, label %dec_label_pc_15ef8

dec_label_pc_15ef8:                               ; preds = %dec_label_pc_15eec
  %v2_15ef8 = icmp eq i8 %v2_15eec, 0
  br i1 %v2_15ef8, label %dec_label_pc_15fbc, label %dec_label_pc_15f00

dec_label_pc_15f00:                               ; preds = %dec_label_pc_15ef8
  %v1_15f00 = add i32 %v0_15f00, 1
  %v1_15f04 = urem i32 %v1_15f00, 4
  %v2_15f04 = icmp eq i32 %v1_15f04, 0
  br i1 %v2_15f04, label %dec_label_pc_15f0c, label %dec_label_pc_15eec

dec_label_pc_15f0c:                               ; preds = %dec_label_pc_15f00, %dec_label_pc_15ee0
  %v0_15f10 = phi i32 [ %v0_15f042, %dec_label_pc_15ee0 ], [ %v1_15f00, %dec_label_pc_15f00 ]
  %v4_15f0c = mul nuw nsw i32 %v1_15ee4, 256
  %v5_15f0c = or i32 %v4_15f0c, %v1_15ee4
  %v4_15f14 = mul i32 %v5_15f0c, 65536
  %v5_15f14 = or i32 %v4_15f14, %v5_15f0c
  br label %dec_label_pc_15f18

dec_label_pc_15f18:                               ; preds = %dec_label_pc_15fb4, %dec_label_pc_15f54, %dec_label_pc_15f0c
  %v0_15f7c = phi i32 [ %v0_15f10, %dec_label_pc_15f0c ], [ %v4_15f18, %dec_label_pc_15f54 ], [ %v4_15f18, %dec_label_pc_15fb4 ]
  %v1_15f18 = inttoptr i32 %v0_15f7c to i32*
  %v2_15f18 = load i32, i32* %v1_15f18, align 4
  %v4_15f18 = add i32 %v0_15f7c, 4
  %v2_15f20 = xor i32 %v2_15f18, %v5_15f14
  %v2_15f24 = add i32 %v2_15f20, 2130640639
  store i32 %v2_15f24, i32* @ip, align 4
  %v2_15f2c = add i32 %v2_15f18, 2130640639
  %v1_15f30 = sub i32 -1, %v2_15f18
  %v2_15f34 = xor i32 %v2_15f2c, %v1_15f30
  %v2_15f40 = and i32 %v2_15f34, -2130640640
  %v2_15f48 = icmp eq i32 %v2_15f40, 0
  br i1 %v2_15f48, label %dec_label_pc_15f54, label %dec_label_pc_15f5c

dec_label_pc_15f54:                               ; preds = %dec_label_pc_15f18
  %v1_15f3c = sub i32 -1, %v2_15f20
  %v2_15f44 = xor i32 %v2_15f24, %v1_15f3c
  %v2_15f4c = and i32 %v2_15f44, -2130640640
  %v2_15f54 = icmp eq i32 %v2_15f4c, 0
  br i1 %v2_15f54, label %dec_label_pc_15f18, label %dec_label_pc_15f5c

dec_label_pc_15f5c:                               ; preds = %dec_label_pc_15f18, %dec_label_pc_15f54
  %v2_15f5c = inttoptr i32 %v0_15f7c to i8*
  %v3_15f5c = load i8, i8* %v2_15f5c, align 1
  %v4_15f5c = zext i8 %v3_15f5c to i32
  %v9_15f60 = icmp eq i32 %v4_15f5c, %v1_15ee4
  br i1 %v9_15f60, label %dec_label_pc_15fbc, label %dec_label_pc_15f6c

dec_label_pc_15f6c:                               ; preds = %dec_label_pc_15f5c
  %v2_15f6c = icmp eq i8 %v3_15f5c, 0
  br i1 %v2_15f6c, label %dec_label_pc_15fbc, label %dec_label_pc_15f74

dec_label_pc_15f74:                               ; preds = %dec_label_pc_15f6c
  %v1_15f74 = add i32 %v0_15f7c, 1
  %v2_15f74 = inttoptr i32 %v1_15f74 to i8*
  %v3_15f74 = load i8, i8* %v2_15f74, align 1
  %v4_15f74 = zext i8 %v3_15f74 to i32
  %v9_15f78 = icmp eq i32 %v4_15f74, %v1_15ee4
  br i1 %v9_15f78, label %dec_label_pc_15fbc, label %dec_label_pc_15f84

dec_label_pc_15f84:                               ; preds = %dec_label_pc_15f74
  %v2_15f84 = icmp eq i8 %v3_15f74, 0
  br i1 %v2_15f84, label %dec_label_pc_15fbc, label %dec_label_pc_15f8c

dec_label_pc_15f8c:                               ; preds = %dec_label_pc_15f84
  %v1_15f8c = add i32 %v0_15f7c, 2
  %v2_15f8c = inttoptr i32 %v1_15f8c to i8*
  %v3_15f8c = load i8, i8* %v2_15f8c, align 1
  %v4_15f8c = zext i8 %v3_15f8c to i32
  %v9_15f90 = icmp eq i32 %v4_15f8c, %v1_15ee4
  br i1 %v9_15f90, label %dec_label_pc_15fbc, label %dec_label_pc_15f9c

dec_label_pc_15f9c:                               ; preds = %dec_label_pc_15f8c
  %v2_15f9c = icmp eq i8 %v3_15f8c, 0
  br i1 %v2_15f9c, label %dec_label_pc_15fbc, label %dec_label_pc_15fa4

dec_label_pc_15fa4:                               ; preds = %dec_label_pc_15f9c
  %v1_15fa4 = add i32 %v0_15f7c, 3
  %v2_15fa4 = inttoptr i32 %v1_15fa4 to i8*
  %v3_15fa4 = load i8, i8* %v2_15fa4, align 1
  %v4_15fa4 = zext i8 %v3_15fa4 to i32
  %v9_15fa8 = icmp eq i32 %v4_15fa4, %v1_15ee4
  br i1 %v9_15fa8, label %dec_label_pc_15fbc, label %dec_label_pc_15fb4

dec_label_pc_15fb4:                               ; preds = %dec_label_pc_15fa4
  %v2_15fb4 = icmp eq i8 %v3_15fa4, 0
  br i1 %v2_15fb4, label %dec_label_pc_15fbc, label %dec_label_pc_15f18

dec_label_pc_15fbc:                               ; preds = %dec_label_pc_15ef8, %dec_label_pc_15eec, %dec_label_pc_15fb4, %dec_label_pc_15fa4, %dec_label_pc_15f9c, %dec_label_pc_15f8c, %dec_label_pc_15f84, %dec_label_pc_15f74, %dec_label_pc_15f6c, %dec_label_pc_15f5c
  %v1_15fc0 = phi i32 [ %v1_15fa4, %dec_label_pc_15fb4 ], [ %v1_15fa4, %dec_label_pc_15fa4 ], [ %v1_15f8c, %dec_label_pc_15f9c ], [ %v1_15f8c, %dec_label_pc_15f8c ], [ %v1_15f74, %dec_label_pc_15f84 ], [ %v1_15f74, %dec_label_pc_15f74 ], [ %v0_15f7c, %dec_label_pc_15f6c ], [ %v0_15f7c, %dec_label_pc_15f5c ], [ %v0_15f00, %dec_label_pc_15eec ], [ %v0_15f00, %dec_label_pc_15ef8 ]
  ret i32 %v1_15fc0

; uselistorder directives
  uselistorder i32 %v4_15f18, { 1, 0 }
  uselistorder i32 %v2_15f18, { 0, 2, 1 }
  uselistorder i32 %v0_15f7c, { 0, 1, 2, 3, 4, 5, 7, 6 }
  uselistorder i32 %v5_15f0c, { 1, 0 }
  uselistorder i32 %v1_15f00, { 1, 0, 2 }
  uselistorder i32 %v0_15f042, { 2, 1, 0 }
  uselistorder i32 %v1_15ee4, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_15fbc, { 2, 3, 4, 5, 6, 7, 8, 9, 0, 1 }
  uselistorder label %dec_label_pc_15f5c, { 1, 0 }
  uselistorder label %dec_label_pc_15eec, { 1, 0 }
}

define i32 @function_15fcc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15fcc:
  %v1_15fd0 = urem i32 %arg1, 256
  %v0_15ff03 = load i32, i32* @r0, align 4
  %v1_15ff04 = urem i32 %v0_15ff03, 4
  %v2_15ff05 = icmp eq i32 %v1_15ff04, 0
  br i1 %v2_15ff05, label %dec_label_pc_15ff8, label %dec_label_pc_15fd8

dec_label_pc_15fd8:                               ; preds = %dec_label_pc_15fcc, %dec_label_pc_15fec
  %v0_15fec = phi i32 [ %v1_15fec, %dec_label_pc_15fec ], [ %v0_15ff03, %dec_label_pc_15fcc ]
  %v1_15fd8 = inttoptr i32 %v0_15fec to i8*
  %v2_15fd8 = load i8, i8* %v1_15fd8, align 1
  %v3_15fd8 = zext i8 %v2_15fd8 to i32
  %v9_15fdc = icmp eq i32 %v3_15fd8, %v1_15fd0
  br i1 %v9_15fdc, label %dec_label_pc_160ac, label %dec_label_pc_15fe4

dec_label_pc_15fe4:                               ; preds = %dec_label_pc_15fd8
  %v2_15fe4 = icmp eq i8 %v2_15fd8, 0
  br i1 %v2_15fe4, label %dec_label_pc_160a8, label %dec_label_pc_15fec

dec_label_pc_15fec:                               ; preds = %dec_label_pc_15fe4
  %v1_15fec = add i32 %v0_15fec, 1
  %v1_15ff0 = urem i32 %v1_15fec, 4
  %v2_15ff0 = icmp eq i32 %v1_15ff0, 0
  br i1 %v2_15ff0, label %dec_label_pc_15ff8, label %dec_label_pc_15fd8

dec_label_pc_15ff8:                               ; preds = %dec_label_pc_15fec, %dec_label_pc_15fcc
  %v0_15ffc = phi i32 [ %v0_15ff03, %dec_label_pc_15fcc ], [ %v1_15fec, %dec_label_pc_15fec ]
  %v4_15ff8 = mul nuw nsw i32 %v1_15fd0, 256
  %v5_15ff8 = or i32 %v4_15ff8, %v1_15fd0
  %v4_16000 = mul i32 %v5_15ff8, 65536
  %v5_16000 = or i32 %v4_16000, %v5_15ff8
  br label %dec_label_pc_16004

dec_label_pc_16004:                               ; preds = %dec_label_pc_160a0, %dec_label_pc_16040, %dec_label_pc_15ff8
  %v0_16068 = phi i32 [ %v0_15ffc, %dec_label_pc_15ff8 ], [ %v4_16004, %dec_label_pc_16040 ], [ %v4_16004, %dec_label_pc_160a0 ]
  %v1_16004 = inttoptr i32 %v0_16068 to i32*
  %v2_16004 = load i32, i32* %v1_16004, align 4
  %v4_16004 = add i32 %v0_16068, 4
  %v2_1600c = xor i32 %v2_16004, %v5_16000
  %v2_16010 = add i32 %v2_1600c, 2130640639
  store i32 %v2_16010, i32* @ip, align 4
  %v2_16018 = add i32 %v2_16004, 2130640639
  %v1_1601c = sub i32 -1, %v2_16004
  %v2_16020 = xor i32 %v2_16018, %v1_1601c
  %v2_1602c = and i32 %v2_16020, -2130640640
  %v2_16034 = icmp eq i32 %v2_1602c, 0
  br i1 %v2_16034, label %dec_label_pc_16040, label %dec_label_pc_16048

dec_label_pc_16040:                               ; preds = %dec_label_pc_16004
  %v1_16028 = sub i32 -1, %v2_1600c
  %v2_16030 = xor i32 %v2_16010, %v1_16028
  %v2_16038 = and i32 %v2_16030, -2130640640
  %v2_16040 = icmp eq i32 %v2_16038, 0
  br i1 %v2_16040, label %dec_label_pc_16004, label %dec_label_pc_16048

dec_label_pc_16048:                               ; preds = %dec_label_pc_16004, %dec_label_pc_16040
  %v2_16048 = inttoptr i32 %v0_16068 to i8*
  %v3_16048 = load i8, i8* %v2_16048, align 1
  %v4_16048 = zext i8 %v3_16048 to i32
  %v9_1604c = icmp eq i32 %v4_16048, %v1_15fd0
  br i1 %v9_1604c, label %dec_label_pc_160ac, label %dec_label_pc_16058

dec_label_pc_16058:                               ; preds = %dec_label_pc_16048
  %v2_16058 = icmp eq i8 %v3_16048, 0
  br i1 %v2_16058, label %dec_label_pc_160a8, label %dec_label_pc_16060

dec_label_pc_16060:                               ; preds = %dec_label_pc_16058
  %v1_16060 = add i32 %v0_16068, 1
  %v2_16060 = inttoptr i32 %v1_16060 to i8*
  %v3_16060 = load i8, i8* %v2_16060, align 1
  %v4_16060 = zext i8 %v3_16060 to i32
  %v9_16064 = icmp eq i32 %v4_16060, %v1_15fd0
  br i1 %v9_16064, label %dec_label_pc_160ac, label %dec_label_pc_16070

dec_label_pc_16070:                               ; preds = %dec_label_pc_16060
  %v2_16070 = icmp eq i8 %v3_16060, 0
  br i1 %v2_16070, label %dec_label_pc_160a8, label %dec_label_pc_16078

dec_label_pc_16078:                               ; preds = %dec_label_pc_16070
  %v1_16078 = add i32 %v0_16068, 2
  %v2_16078 = inttoptr i32 %v1_16078 to i8*
  %v3_16078 = load i8, i8* %v2_16078, align 1
  %v4_16078 = zext i8 %v3_16078 to i32
  %v9_1607c = icmp eq i32 %v4_16078, %v1_15fd0
  br i1 %v9_1607c, label %dec_label_pc_160ac, label %dec_label_pc_16088

dec_label_pc_16088:                               ; preds = %dec_label_pc_16078
  %v2_16088 = icmp eq i8 %v3_16078, 0
  br i1 %v2_16088, label %dec_label_pc_160a8, label %dec_label_pc_16090

dec_label_pc_16090:                               ; preds = %dec_label_pc_16088
  %v1_16090 = add i32 %v0_16068, 3
  %v2_16090 = inttoptr i32 %v1_16090 to i8*
  %v3_16090 = load i8, i8* %v2_16090, align 1
  %v4_16090 = zext i8 %v3_16090 to i32
  %v9_16094 = icmp eq i32 %v4_16090, %v1_15fd0
  br i1 %v9_16094, label %dec_label_pc_160ac, label %dec_label_pc_160a0

dec_label_pc_160a0:                               ; preds = %dec_label_pc_16090
  %v2_160a0 = icmp eq i8 %v3_16090, 0
  br i1 %v2_160a0, label %dec_label_pc_160a8, label %dec_label_pc_16004

dec_label_pc_160a8:                               ; preds = %dec_label_pc_15fe4, %dec_label_pc_160a0, %dec_label_pc_16088, %dec_label_pc_16070, %dec_label_pc_16058
  br label %dec_label_pc_160ac

dec_label_pc_160ac:                               ; preds = %dec_label_pc_15fd8, %dec_label_pc_16090, %dec_label_pc_16078, %dec_label_pc_16060, %dec_label_pc_16048, %dec_label_pc_160a8
  %v1_160b0 = phi i32 [ 0, %dec_label_pc_160a8 ], [ %v1_16090, %dec_label_pc_16090 ], [ %v1_16078, %dec_label_pc_16078 ], [ %v1_16060, %dec_label_pc_16060 ], [ %v0_16068, %dec_label_pc_16048 ], [ %v0_15fec, %dec_label_pc_15fd8 ]
  ret i32 %v1_160b0

; uselistorder directives
  uselistorder i32 %v4_16004, { 1, 0 }
  uselistorder i32 %v2_16004, { 0, 2, 1 }
  uselistorder i32 %v0_16068, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_15ff8, { 1, 0 }
  uselistorder i32 %v1_15fec, { 1, 0, 2 }
  uselistorder i32 %v0_15ff03, { 2, 1, 0 }
  uselistorder i32 %v1_15fd0, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 3, { 3, 4, 1, 5, 64, 65, 115, 66, 67, 68, 69, 70, 71, 73, 74, 116, 6, 109, 27, 110, 26, 111, 30, 112, 72, 31, 82, 28, 75, 76, 2, 77, 78, 79, 32, 20, 83, 33, 84, 34, 85, 35, 86, 36, 87, 29, 88, 37, 89, 38, 90, 39, 80, 40, 81, 41, 42, 43, 44, 45, 46, 47, 48, 0, 92, 7, 49, 50, 51, 52, 93, 53, 22, 21, 54, 94, 55, 95, 9, 8, 56, 96, 11, 10, 57, 97, 98, 99, 24, 23, 58, 100, 101, 13, 12, 59, 102, 103, 60, 104, 15, 14, 61, 105, 106, 17, 16, 62, 107, 108, 19, 18, 63, 113, 114, 25, 91 }
  uselistorder i32 2130640639, { 0, 2, 1, 3 }
  uselistorder i32 65536, { 4, 5, 7, 6, 12, 8, 13, 9, 14, 10, 15, 11, 16, 17, 18, 22, 19, 23, 20, 24, 21, 25, 144, 26, 27, 28, 29, 30, 31, 32, 33, 143, 34, 35, 36, 38, 37, 40, 39, 41, 42, 2, 43, 0, 3, 44, 45, 47, 46, 1, 50, 48, 49, 51, 57, 52, 58, 53, 59, 54, 55, 56, 62, 63, 64, 65, 60, 61, 142, 67, 66, 69, 68, 71, 72, 73, 70, 74, 76, 77, 78, 75, 79, 80, 82, 83, 81, 84, 85, 88, 86, 89, 87, 91, 92, 93, 90, 94, 99, 95, 100, 96, 101, 97, 98, 103, 104, 105, 102, 106, 107, 108, 109, 111, 110, 112, 120, 113, 121, 114, 122, 115, 123, 116, 124, 117, 118, 119, 126, 127, 128, 129, 125, 130, 135, 131, 136, 132, 133, 134, 137, 139, 140, 141, 138 }
  uselistorder label %dec_label_pc_160ac, { 5, 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_160a8, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_16048, { 1, 0 }
  uselistorder label %dec_label_pc_15fd8, { 1, 0 }
}

define i32 @function_160bc(i32 %arg1) local_unnamed_addr {
dec_label_pc_160bc:
  %stack_var_-68 = alloca i32, align 4
  %v2_160c4 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_160c4, i32* @r1, align 4
  %v0_160c8 = call i32 @function_160e0()
  %v1_160cc = sub i32 1, %v0_160c8
  %v2_160cc = icmp ult i32 %v0_160c8, 2
  br i1 %v2_160cc, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_160bc
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_160bc, %bb
  %v1_160dc = phi i32 [ %v1_160cc, %dec_label_pc_160bc ], [ 0, %bb ]
  ret i32 %v1_160dc

; uselistorder directives
  uselistorder i32 %v0_160c8, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @function_160e0() local_unnamed_addr {
dec_label_pc_160e0:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_3()
  %stack_var_-35 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v3_160e0 = load i32, i32* @r4, align 4
  %v6_160e0 = load i32, i32* @r5, align 4
  %v2_160e8 = ptrtoint i32* %stack_var_-52 to i32
  %v0_160ec = load i32, i32* @r1, align 4
  store i32 %v0_160ec, i32* @r4, align 4
  store i32 21505, i32* %r1.global-to-local, align 4
  %v0_160f8 = load i32, i32* @r0, align 4
  %v3_160f8 = call i32 @function_114bc(i32 %v0_160f8, i32 21505, i32 %v2_160e8)
  store i32 %v3_160f8, i32* %r0.global-to-local, align 4
  store i32 %v3_160f8, i32* @r5, align 4
  %v2_160fc = icmp eq i32 %v3_160f8, 0
  br i1 %v2_160fc, label %dec_label_pc_16104, label %dec_label_pc_16148

dec_label_pc_16104:                               ; preds = %dec_label_pc_160e0
  %v4_16110 = zext i8 %tmp to i32
  store i32 %v4_16110, i32* @ip, align 4
  %v3_16114 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_16114, i32* @r3, align 4
  %v1_16118 = load i32, i32* @r4, align 4
  %v2_16118 = add i32 %v1_16118, 4
  %v3_16118 = inttoptr i32 %v2_16118 to i32*
  %v0_1611c = load i32, i32* %r1.global-to-local, align 4
  %v1_1611c = load i32, i32* @r4, align 4
  %v2_1611c = add i32 %v1_1611c, 8
  %v3_1611c = inttoptr i32 %v2_1611c to i32*
  store i32 %v0_1611c, i32* %v3_1611c, align 4
  %v0_16120 = load i32, i32* %r0.global-to-local, align 4
  %v1_16120 = load i32, i32* @r4, align 4
  %v2_16120 = add i32 %v1_16120, 12
  %v3_16120 = inttoptr i32 %v2_16120 to i32*
  store i32 %v0_16120, i32* %v3_16120, align 4
  %v2_16124 = ptrtoint i32* %stack_var_-35 to i32
  store i32 %v2_16124, i32* @r1, align 4
  %v1_1612c = load i32, i32* @r4, align 4
  %v2_1612c = inttoptr i32 %v1_1612c to i32*
  store i32 %v3_16114, i32* %v2_1612c, align 4
  %v0_16130 = load i32, i32* @ip, align 4
  %v1_16130 = trunc i32 %v0_16130 to i8
  %v2_16130 = load i32, i32* @r4, align 4
  %v3_16130 = add i32 %v2_16130, 16
  %v4_16130 = inttoptr i32 %v3_16130 to i8*
  store i8 %v1_16130, i8* %v4_16130, align 1
  %v0_16134 = load i32, i32* @r4, align 4
  %v1_16134 = add i32 %v0_16134, 17
  store i32 %v1_16134, i32* %r0.global-to-local, align 4
  %v4_16138 = call i32 @function_16624(i32 %v1_16134, i32 %v2_16124, i32 19, i32 %v3_16114)
  store i32 %v4_16138, i32* %r0.global-to-local, align 4
  %v0_1613c = load i32, i32* @r5, align 4
  store i32 %v0_1613c, i32* %r1.global-to-local, align 4
  store i32 13, i32* @r2, align 4
  %v2_16144 = inttoptr i32 %v4_16138 to i8*
  %v3_16144 = call i32 @function_119c0(i8* %v2_16144, i32 %v0_1613c)
  store i32 %v3_16144, i32* %r0.global-to-local, align 4
  %v0_16148.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_16148

dec_label_pc_16148:                               ; preds = %dec_label_pc_160e0, %dec_label_pc_16104
  %v0_16148 = phi i32 [ %v3_160f8, %dec_label_pc_160e0 ], [ %v0_16148.pre, %dec_label_pc_16104 ]
  store i32 %v0_16148, i32* %r0.global-to-local, align 4
  store i32 %v3_160e0, i32* @r4, align 4
  store i32 %v6_160e0, i32* @r5, align 4
  ret i32 %v0_16148

; uselistorder directives
  uselistorder i32 %v0_16148, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 (i8*, i32)* @function_119c0, { 2, 3, 4, 5, 0, 1, 11, 10, 9, 6, 7, 8 }
  uselistorder i32 13, { 19, 18, 0, 1, 21, 22, 20, 23, 4, 24, 5, 25, 6, 26, 7, 27, 8, 28, 9, 29, 10, 30, 11, 31, 12, 32, 13, 33, 14, 34, 2, 3, 15, 16, 17, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62 }
  uselistorder i32 17, { 13, 1, 2, 19, 3, 14, 4, 15, 5, 16, 20, 6, 21, 7, 22, 17, 18, 8, 23, 9, 24, 10, 25, 26, 27, 11, 28, 12, 29, 30, 31, 32, 0 }
  uselistorder i32 (i32, i32, i32)* @function_114bc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16148, { 1, 0 }
}

define i32 @function_1615c() local_unnamed_addr {
dec_label_pc_1615c:
  %r0.global-to-local = alloca i32, align 4
  %v0_16164 = load i32, i32* @r0, align 4
  %v2_16164 = icmp eq i32 %v0_16164, 0
  %v0_1616c = load i32, i32* @r1, align 4
  br i1 %v2_16164, label %dec_label_pc_16240, label %dec_label_pc_16174

dec_label_pc_16174:                               ; preds = %dec_label_pc_1615c
  br label %dec_label_pc_1618c

dec_label_pc_1618c:                               ; preds = %dec_label_pc_16174, %dec_label_pc_16204
  %v1_16204 = phi i32 [ 0, %dec_label_pc_16174 ], [ %v5_16204, %dec_label_pc_16204 ]
  %v0_16208 = phi i32 [ 1, %dec_label_pc_16174 ], [ %v1_16208, %dec_label_pc_16204 ]
  %v0_1618c = phi i32 [ %v0_16164, %dec_label_pc_16174 ], [ %v0_1618c12, %dec_label_pc_16204 ]
  %v1_1618c = inttoptr i32 %v0_1618c to i8*
  %v2_1618c = load i8, i8* %v1_1618c, align 1
  %v3_1618c = zext i8 %v2_1618c to i32
  %v4_16190 = load i32, i32* inttoptr (i32 128088 to i32*), align 8
  %v2_16194 = mul nuw nsw i32 %v3_1618c, 2
  %v2_16198 = add i32 %v2_16194, %v4_16190
  %v3_16198 = inttoptr i32 %v2_16198 to i16*
  %v4_16198 = load i16, i16* %v3_16198, align 2
  %v1_1619c = and i16 %v4_16198, 8
  %v2_1619c = icmp eq i16 %v1_1619c, 0
  br i1 %v2_1619c, label %dec_label_pc_16240, label %dec_label_pc_161a4

dec_label_pc_161a4:                               ; preds = %dec_label_pc_1618c
  br label %dec_label_pc_161c4

dec_label_pc_161ac:                               ; preds = %dec_label_pc_161c4
  %v2_161ac = mul i32 %v0_16204, 10
  %v1_161b0 = add i32 %v2_161ac, -48
  %v2_161b4 = add i32 %v3_161c4, %v1_161b0
  %v8_161bc = icmp sgt i32 %v2_161b4, 255
  br i1 %v8_161bc, label %dec_label_pc_16240, label %dec_label_pc_161c0

dec_label_pc_161c0:                               ; preds = %dec_label_pc_161ac
  %v1_161c0 = add i32 %v0_161f4, 1
  store i32 %v1_161c0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_161c4

dec_label_pc_161c4:                               ; preds = %dec_label_pc_161a4, %dec_label_pc_161c0
  %v0_16204 = phi i32 [ 0, %dec_label_pc_161a4 ], [ %v2_161b4, %dec_label_pc_161c0 ]
  %v0_161f4 = phi i32 [ %v0_1618c, %dec_label_pc_161a4 ], [ %v1_161c0, %dec_label_pc_161c0 ]
  %v1_161c4 = inttoptr i32 %v0_161f4 to i8*
  %v2_161c4 = load i8, i8* %v1_161c4, align 1
  %v3_161c4 = zext i8 %v2_161c4 to i32
  %v2_161c8 = mul nuw nsw i32 %v3_161c4, 2
  %v2_161cc = add i32 %v2_161c8, %v4_16190
  %v3_161cc = inttoptr i32 %v2_161cc to i16*
  %v4_161cc = load i16, i16* %v3_161cc, align 2
  %v6_161cc = zext i16 %v4_161cc to i32
  %v1_161d0 = and i32 %v6_161cc, 8
  %v2_161d0 = icmp eq i32 %v1_161d0, 0
  br i1 %v2_161d0, label %dec_label_pc_161d8, label %dec_label_pc_161ac

dec_label_pc_161d8:                               ; preds = %dec_label_pc_161c4
  %v7_161d8 = icmp eq i32 %v0_16208, 4
  br i1 %v7_161d8, label %dec_label_pc_161f0, label %dec_label_pc_161e0

dec_label_pc_161e0:                               ; preds = %dec_label_pc_161d8
  %v7_161e0 = icmp eq i8 %v2_161c4, 46
  br i1 %v7_161e0, label %dec_label_pc_161e8, label %dec_label_pc_16240

dec_label_pc_161e8:                               ; preds = %dec_label_pc_161e0
  %v1_161e8 = add i32 %v0_161f4, 1
  store i32 %v1_161e8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16204

dec_label_pc_161f0:                               ; preds = %dec_label_pc_161d8
  %v2_161f0 = icmp eq i8 %v2_161c4, 0
  %v1_161f4 = add i32 %v0_161f4, 1
  store i32 %v1_161f4, i32* %r0.global-to-local, align 4
  br i1 %v2_161f0, label %dec_label_pc_16204, label %dec_label_pc_161fc

dec_label_pc_161fc:                               ; preds = %dec_label_pc_161f0
  %v1_161fc = and i32 %v6_161cc, 32
  %v2_161fc = icmp eq i32 %v1_161fc, 0
  br i1 %v2_161fc, label %dec_label_pc_16240, label %dec_label_pc_16204

dec_label_pc_16204:                               ; preds = %dec_label_pc_161fc, %dec_label_pc_161f0, %dec_label_pc_161e8
  %v0_1618c12 = phi i32 [ %v1_161f4, %dec_label_pc_161fc ], [ %v1_161f4, %dec_label_pc_161f0 ], [ %v1_161e8, %dec_label_pc_161e8 ]
  %v4_16204 = mul i32 %v1_16204, 256
  %v5_16204 = or i32 %v0_16204, %v4_16204
  %v1_16208 = add nuw nsw i32 %v0_16208, 1
  %v7_16210 = icmp slt i32 %v1_16208, 5
  br i1 %v7_16210, label %dec_label_pc_1618c, label %dec_label_pc_16214

dec_label_pc_16214:                               ; preds = %dec_label_pc_16204
  %v2_16214 = icmp eq i32 %v0_1616c, 0
  br i1 %v2_16214, label %.thread7.thread, label %bb

.thread7.thread:                                  ; preds = %dec_label_pc_16214
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16244

bb:                                               ; preds = %dec_label_pc_16214
  %v4_16218 = udiv i32 %v5_16204, 16777216
  %v2_1621c = udiv i32 %v5_16204, 256
  %v5_16220 = and i32 %v2_1621c, 65280
  %v2_16224 = and i32 %v5_16204, 65280
  %v5_16228 = mul nuw nsw i32 %v2_16224, 256
  %v5_1622c = mul i32 %v0_16204, 16777216
  %v6_16220 = or i32 %v4_16218, %v5_1622c
  %v6_16228 = or i32 %v6_16220, %v5_16220
  %v6_1622c = or i32 %v6_16228, %v5_16228
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_16238 = inttoptr i32 %v0_1616c to i32*
  store i32 %v6_1622c, i32* %v3_16238, align 4
  %v1_16248.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16244

dec_label_pc_16240:                               ; preds = %dec_label_pc_161e0, %dec_label_pc_161fc, %dec_label_pc_1618c, %dec_label_pc_161ac, %dec_label_pc_1615c
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16244

dec_label_pc_16244:                               ; preds = %.thread7.thread, %bb, %dec_label_pc_16240
  %v1_16248 = phi i32 [ %v1_16248.pre, %bb ], [ 0, %dec_label_pc_16240 ], [ 1, %.thread7.thread ]
  ret i32 %v1_16248

; uselistorder directives
  uselistorder i32 %v1_16208, { 1, 0 }
  uselistorder i32 %v5_16204, { 2, 0, 1, 3 }
  uselistorder i32 %v0_161f4, { 0, 1, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 5, 6, 0, 2, 3, 4 }
  uselistorder i32 65280, { 55, 2, 6, 1, 46, 3, 7, 0, 8, 9, 10, 11, 12, 38, 47, 48, 49, 13, 14, 15, 50, 51, 16, 17, 18, 19, 39, 52, 4, 53, 54, 20, 21, 40, 56, 57, 41, 22, 23, 24, 25, 26, 58, 59, 60, 61, 42, 43, 44, 5, 62, 63, 27, 64, 28, 29, 30, 31, 45, 65, 32, 33, 34, 66, 35, 36, 37 }
  uselistorder i32 16777216, { 0, 1, 61, 60, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 22, 24, 25, 26, 27, 28, 29, 31, 30, 33, 32, 35, 34, 39, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62 }
  uselistorder i32 5, { 5, 0, 125, 6, 65, 8, 61, 7, 60, 3, 2, 66, 9, 67, 10, 68, 11, 69, 12, 70, 13, 71, 14, 72, 15, 73, 16, 74, 17, 75, 18, 76, 19, 77, 20, 78, 21, 79, 22, 80, 23, 81, 24, 82, 25, 83, 26, 84, 27, 85, 28, 86, 29, 87, 30, 88, 31, 89, 32, 90, 33, 91, 34, 92, 35, 93, 36, 94, 37, 95, 38, 96, 39, 97, 40, 98, 41, 99, 42, 100, 43, 101, 44, 102, 45, 103, 46, 104, 47, 105, 48, 106, 49, 107, 50, 108, 51, 109, 52, 110, 53, 111, 54, 112, 55, 113, 114, 1, 62, 63, 64, 56, 57, 116, 58, 117, 118, 119, 59, 120, 121, 122, 123, 124, 126, 127, 4, 115 }
  uselistorder i32 32, { 99, 49, 47, 86, 87, 88, 89, 94, 95, 82, 83, 84, 85, 102, 50, 51, 55, 52, 56, 53, 57, 54, 58, 59, 90, 91, 60, 100, 68, 69, 67, 70, 71, 72, 73, 74, 75, 62, 63, 1, 64, 2, 65, 4, 3, 61, 66, 76, 101, 6, 5, 8, 7, 10, 9, 48, 77, 96, 12, 11, 14, 13, 16, 15, 18, 17, 81, 20, 19, 22, 21, 23, 25, 24, 27, 26, 28, 29, 31, 30, 92, 93, 32, 97, 33, 98, 34, 35, 36, 37, 38, 39, 78, 40, 41, 42, 79, 43, 0, 44, 45, 46, 80 }
  uselistorder i8 0, { 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 28, 27, 19, 29, 3, 17, 4, 30, 32, 31, 20, 33, 34, 35, 0, 18, 36, 37, 38, 39, 40, 41, 42, 43, 44, 1, 47, 49, 46, 21, 48, 22, 50, 51, 45, 2, 52, 53, 54, 24, 55, 58, 25, 56, 57, 23, 59, 60, 61, 62, 63, 64, 5, 65, 66, 67, 68, 69, 70, 71, 72, 26, 73, 74, 75, 76 }
  uselistorder i8 46, { 0, 1, 3, 2 }
  uselistorder i32 255, { 5, 14, 6, 0, 1, 2, 9, 11, 10, 7, 12, 8, 13, 3, 4 }
  uselistorder i32 10, { 2, 32, 33, 34, 4, 55, 57, 56, 79, 58, 0, 6, 38, 39, 7, 35, 36, 29, 3, 40, 30, 8, 1, 31, 41, 9, 42, 10, 43, 11, 44, 12, 45, 13, 46, 14, 47, 15, 48, 16, 49, 17, 50, 18, 51, 19, 52, 20, 53, 54, 37, 21, 22, 23, 5, 59, 60, 61, 62, 24, 25, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 26, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 27, 28 }
  uselistorder i16 0, { 0, 1, 2, 5, 6, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i32 2, { 3, 4, 132, 57, 58, 53, 261, 262, 67, 263, 264, 59, 265, 266, 137, 133, 138, 134, 80, 267, 5, 139, 6, 268, 63, 243, 7, 8, 244, 9, 10, 52, 160, 11, 12, 13, 161, 245, 14, 15, 16, 17, 68, 246, 247, 18, 19, 0, 135, 248, 20, 249, 81, 21, 131, 22, 23, 24, 25, 26, 82, 84, 83, 60, 61, 71, 162, 163, 85, 153, 90, 154, 87, 164, 86, 155, 88, 146, 89, 152, 140, 141, 142, 143, 144, 145, 72, 147, 73, 148, 74, 149, 75, 150, 76, 151, 69, 27, 28, 165, 168, 169, 91, 64, 136, 92, 170, 171, 93, 172, 95, 166, 94, 167, 156, 157, 29, 96, 97, 98, 158, 159, 99, 78, 173, 101, 174, 100, 77, 175, 102, 176, 30, 31, 32, 103, 178, 179, 104, 79, 105, 106, 108, 65, 109, 107, 180, 110, 111, 112, 113, 114, 181, 62, 66, 182, 183, 184, 185, 186, 187, 188, 189, 190, 115, 191, 192, 193, 194, 195, 196, 197, 116, 198, 199, 200, 201, 202, 203, 204, 205, 117, 206, 207, 208, 54, 118, 119, 120, 209, 210, 211, 212, 213, 214, 215, 1, 33, 34, 35, 36, 37, 38, 121, 216, 217, 218, 219, 220, 39, 221, 222, 40, 41, 42, 43, 44, 45, 122, 223, 224, 225, 226, 227, 228, 229, 123, 230, 124, 231, 125, 232, 2, 46, 47, 48, 49, 50, 51, 126, 233, 234, 235, 55, 236, 237, 238, 239, 240, 241, 127, 242, 250, 56, 251, 252, 128, 253, 129, 254, 255, 256, 257, 258, 130, 259, 260, 70, 177 }
  uselistorder label %dec_label_pc_16244, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16240, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_161c4, { 1, 0 }
  uselistorder label %dec_label_pc_1618c, { 1, 0 }
}

define i32 @function_16254(i32 %arg1) local_unnamed_addr {
dec_label_pc_16254:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 127864, i32* %r2.global-to-local, align 4
  %v4_16260 = load i32, i32* inttoptr (i32 127964 to i32*), align 4
  %v4_16268 = load i32, i32* inttoptr (i32 127928 to i32*), align 8
  store i32 %v4_16268, i32* %r1.global-to-local, align 4
  %v1_1626c = add i32 %arg1, 44
  %v2_1626c = inttoptr i32 %v1_1626c to i32*
  %v3_1626c = load i32, i32* %v2_1626c, align 4
  %v1_16270 = add i32 %arg1, 28
  %v2_16270 = inttoptr i32 %v1_16270 to i32*
  %v3_16270 = load i32, i32* %v2_16270, align 4
  store i32 %v3_16270, i32* %r2.global-to-local, align 4
  %v2_16274 = inttoptr i32 %v4_16260 to i32*
  store i32 %v3_1626c, i32* %v2_16274, align 4
  %v0_16278 = load i32, i32* %r2.global-to-local, align 4
  %v1_16278 = load i32, i32* %r1.global-to-local, align 4
  %v2_16278 = inttoptr i32 %v1_16278 to i32*
  store i32 %v0_16278, i32* %v2_16278, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 44, { 39, 0, 1, 3, 4, 5, 2, 6, 7, 8, 12, 9, 15, 11, 23, 24, 25, 26, 27, 28, 20, 21, 22, 13, 14, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 10, 16, 17, 18, 19 }
  uselistorder i32 127864, { 15, 1, 16, 17, 2, 18, 3, 4, 5, 19, 20, 6, 7, 21, 8, 22, 23, 24, 11, 12, 10, 9, 13, 14, 0, 25, 26 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_16284(i32 %arg1) local_unnamed_addr {
dec_label_pc_16284:
  %v0_16284 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16284, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_16284
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_16284, %bb
  %v4_16288 = phi i32 [ %arg1, %dec_label_pc_16284 ], [ 0, %bb ]
  ret i32 %v4_16288

; uselistorder directives
  uselistorder i1* @cpsr_z, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 27, 11, 12, 13, 23, 24, 25, 26, 14, 15, 16, 17, 18, 19, 21, 22, 20, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_1628c(i32 %arg1) local_unnamed_addr {
dec_label_pc_162c8:
  store i32 %arg1, i32* @global_var_21640.866, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32* @global_var_21640.866, { 1, 0, 2 }
}

define i32 @function_162d8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_162d8:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_162d8 = load i32, i32* @r7, align 4
  store i32 %v3_162d8, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_16300, label %dec_label_pc_162f0

dec_label_pc_162f0:                               ; preds = %dec_label_pc_162d8
  %v0_162f0 = call i32 @function_11970()
  %v0_162f4 = load i32, i32* %r7.global-to-local, align 4
  %v1_162f4 = sub i32 0, %v0_162f4
  %v2_162f8 = inttoptr i32 %v0_162f0 to i32*
  store i32 %v1_162f4, i32* %v2_162f8, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_16304.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_16300

dec_label_pc_16300:                               ; preds = %dec_label_pc_162d8, %dec_label_pc_162f0
  %v2_16304 = phi i32 [ %v3_162d8, %dec_label_pc_162d8 ], [ %v2_16304.pre, %dec_label_pc_162f0 ]
  %v0_16300 = phi i32 [ %arg1, %dec_label_pc_162d8 ], [ -1, %dec_label_pc_162f0 ]
  store i32 %v2_16304, i32* %r7.global-to-local, align 4
  ret i32 %v0_16300

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16300, { 1, 0 }
}

define i32 @function_1630c(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1630c:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_16310 = load i32, i32* @r4, align 4
  %v6_16310 = load i32, i32* @r5, align 4
  %v12_16310 = load i32, i32* @r7, align 4
  %v1_16314 = add i32 %arg3, 14
  %v2_1631c = ptrtoint i32* %stack_var_-72 to i32
  %v1_16320 = and i32 %v1_16314, -8
  %v2_16324 = sub i32 %v2_1631c, %v1_16320
  %v1_16328 = add i32 %v2_16324, 8
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 %v1_16328, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp25 = icmp ult i32 %arg1, -4095
  br i1 %tmp25, label %dec_label_pc_16364, label %dec_label_pc_16350

dec_label_pc_16350:                               ; preds = %dec_label_pc_1630c
  %v0_16350 = call i32 @function_11970()
  %v0_16354 = load i32, i32* %r4.global-to-local, align 4
  %v1_16354 = sub i32 0, %v0_16354
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1635c = inttoptr i32 %v0_16350 to i32*
  store i32 %v1_16354, i32* %v2_1635c, align 4
  %v0_1636c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1636c

dec_label_pc_16364:                               ; preds = %dec_label_pc_1630c
  br i1 false, label %dec_label_pc_1636c, label %dec_label_pc_16374

dec_label_pc_1636c:                               ; preds = %dec_label_pc_16364, %dec_label_pc_16350
  %v0_1636c = phi i32 [ -1, %dec_label_pc_16364 ], [ %v0_1636c.pre, %dec_label_pc_16350 ]
  store i32 %v0_1636c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16440

dec_label_pc_16374:                               ; preds = %dec_label_pc_16364
  %v2_16374 = add i32 %v1_16328, %arg1
  %v2_16378 = add i32 %tmp, %arg3
  store i32 %v2_16378, i32* @ip, align 4
  store i32 %v1_16328, i32* @r7, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  store i32 -1, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_16428

dec_label_pc_16394:                               ; preds = %dec_label_pc_16428
  %v1_16394 = add i32 %v0_163e8, 16
  %v2_16394 = inttoptr i32 %v1_16394 to i16*
  %v3_16394 = load i16, i16* %v2_16394, align 2
  %v4_16394 = zext i16 %v3_16394 to i32
  %v1_16398 = add nuw nsw i32 %v4_16394, 7
  %v1_1639c = and i32 %v1_16398, 131064
  store i32 %v1_1639c, i32* %r2.global-to-local, align 4
  %v2_163a4 = add i32 %v1_1639c, %v0_163f0
  store i32 %v2_163a4, i32* %r8.global-to-local, align 4
  %tmp26 = icmp ugt i32 %v2_163a4, %v2_16378
  br i1 %tmp26, label %dec_label_pc_163b0, label %dec_label_pc_163e4

dec_label_pc_163b0:                               ; preds = %dec_label_pc_16394
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_163b8 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_163b8, i32* %r2.global-to-local, align 4
  %v0_163bc = load i32, i32* %sl.global-to-local, align 4
  %v1_163c0 = load i32, i32* @sp, align 4
  %v2_163c0 = inttoptr i32 %v1_163c0 to i32*
  store i32 0, i32* %v2_163c0, align 4
  %v4_163c4 = call i32 @function_16648(i32 %arg1, i32 0, i32 %v0_163b8, i32 %v0_163bc)
  %v0_163c8 = load i32, i32* @r5, align 4
  %v1_163c8 = load i32, i32* %r6.global-to-local, align 4
  %v9_163c8 = icmp eq i32 %v0_163c8, %v1_163c8
  br i1 %v9_163c8, label %dec_label_pc_163d0, label %dec_label_pc_1643c

dec_label_pc_163d0:                               ; preds = %dec_label_pc_163b0
  %v0_163d0 = call i32 @function_11970()
  store i32 -1, i32* %r1.global-to-local, align 4
  %v2_163dc = inttoptr i32 %v0_163d0 to i32*
  store i32 22, i32* %v2_163dc, align 4
  %v0_16440.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16440

dec_label_pc_163e4:                               ; preds = %dec_label_pc_16394
  %v1_163e4 = inttoptr i32 %v0_163e8 to i32*
  %v2_163e4 = load i32, i32* %v1_163e4, align 4
  %v3_163e4 = add i32 %v0_163e8, 4
  %v4_163e4 = inttoptr i32 %v3_163e4 to i32*
  %v5_163e4 = load i32, i32* %v4_163e4, align 4
  store i32 %v5_163e4, i32* %r4.global-to-local, align 4
  %v1_163e8 = add i32 %v0_163e8, 8
  store i32 %v1_163e8, i32* %sb.global-to-local, align 4
  %v1_163ec = inttoptr i32 %v1_163e8 to i32*
  %v2_163ec = load i32, i32* %v1_163ec, align 4
  store i32 %v2_163ec, i32* %sb.global-to-local, align 4
  %v3_163ec = add i32 %v0_163e8, 12
  %v4_163ec = inttoptr i32 %v3_163ec to i32*
  %v5_163ec = load i32, i32* %v4_163ec, align 4
  store i32 %v5_163ec, i32* %sl.global-to-local, align 4
  %v1_163f0 = inttoptr i32 %v0_163f0 to i32*
  store i32 %v2_163e4, i32* %v1_163f0, align 4
  %v3_163f0 = add i32 %v0_163f0, 4
  %v4_163f0 = inttoptr i32 %v3_163f0 to i32*
  %v5_163f0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_163f0, i32* %v4_163f0, align 4
  %v0_163f4 = load i32, i32* @r7, align 4
  %v1_163f4 = add i32 %v0_163f4, 8
  %v1_163f8 = inttoptr i32 %v1_163f4 to i32*
  %v2_163f8 = load i32, i32* %v1_163f8, align 4
  %v3_163f8 = add i32 %v0_163f4, 12
  %v4_163f8 = inttoptr i32 %v3_163f8 to i32*
  %v5_163f8 = load i32, i32* %v4_163f8, align 4
  store i32 %v5_163f8, i32* @r4, align 4
  %v1_163fc = load i32, i32* @r5, align 4
  %v2_163fc = add i32 %v1_163fc, 8
  %v3_163fc = inttoptr i32 %v2_163fc to i32*
  store i32 %v2_163f8, i32* %v3_163fc, align 4
  %v0_16400 = load i32, i32* @r4, align 4
  %v1_16400 = load i32, i32* @r5, align 4
  %v2_16400 = add i32 %v1_16400, 12
  %v3_16400 = inttoptr i32 %v2_16400 to i32*
  store i32 %v0_16400, i32* %v3_16400, align 4
  %v0_16404 = load i32, i32* %r2.global-to-local, align 4
  %v1_16404 = trunc i32 %v0_16404 to i16
  %v2_16404 = load i32, i32* @r5, align 4
  %v3_16404 = add i32 %v2_16404, 16
  %v4_16404 = inttoptr i32 %v3_16404 to i16*
  store i16 %v1_16404, i16* %v4_16404, align 2
  %v0_16408 = load i32, i32* @r7, align 4
  %v1_16408 = add i32 %v0_16408, 18
  %v2_16408 = inttoptr i32 %v1_16408 to i8*
  %v3_16408 = load i8, i8* %v2_16408, align 1
  %v4_16408 = zext i8 %v3_16408 to i32
  store i32 %v4_16408, i32* @r3, align 4
  %v2_1640c = load i32, i32* @r5, align 4
  %v3_1640c = add i32 %v2_1640c, 18
  %v4_1640c = inttoptr i32 %v3_1640c to i8*
  store i8 %v3_16408, i8* %v4_1640c, align 1
  %v0_16410 = load i32, i32* @r7, align 4
  %v1_16410 = add i32 %v0_16410, 16
  %v2_16410 = inttoptr i32 %v1_16410 to i16*
  %v3_16410 = load i16, i16* %v2_16410, align 2
  %v4_16410 = zext i16 %v3_16410 to i32
  %v1_16414 = add nsw i32 %v4_16410, -19
  store i32 %v1_16414, i32* @r2, align 4
  %v0_16418 = call i32 @function_11a70()
  %v0_1641c = load i32, i32* @r7, align 4
  %v1_1641c = add i32 %v0_1641c, 16
  %v2_1641c = inttoptr i32 %v1_1641c to i16*
  %v3_1641c = load i16, i16* %v2_1641c, align 2
  %v4_1641c = zext i16 %v3_1641c to i32
  %v0_16420 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_16420, i32* @r5, align 4
  %v2_16424 = add i32 %v4_1641c, %v0_1641c
  store i32 %v2_16424, i32* @r7, align 4
  br label %dec_label_pc_16428

dec_label_pc_16428:                               ; preds = %dec_label_pc_16374, %dec_label_pc_163e4
  %v0_163f0 = phi i32 [ %tmp, %dec_label_pc_16374 ], [ %v0_16420, %dec_label_pc_163e4 ]
  %v0_163e8 = phi i32 [ %v1_16328, %dec_label_pc_16374 ], [ %v2_16424, %dec_label_pc_163e4 ]
  %v3_1642c = icmp ult i32 %v0_163e8, %v2_16374
  %v1_16430 = add i32 %v0_163f0, 19
  store i32 %v1_16430, i32* @r0, align 4
  %v1_16434 = add i32 %v0_163e8, 19
  store i32 %v1_16434, i32* @r1, align 4
  br i1 %v3_1642c, label %dec_label_pc_16394, label %dec_label_pc_1643c.loopexit

dec_label_pc_1643c.loopexit:                      ; preds = %dec_label_pc_16428
  %v0_1643c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1643c

dec_label_pc_1643c:                               ; preds = %dec_label_pc_1643c.loopexit, %dec_label_pc_163b0
  %v1_1643c = phi i32 [ %v0_163f0, %dec_label_pc_1643c.loopexit ], [ %v0_163c8, %dec_label_pc_163b0 ]
  %v0_1643c = phi i32 [ %v0_1643c.pre, %dec_label_pc_1643c.loopexit ], [ %v1_163c8, %dec_label_pc_163b0 ]
  %v2_1643c = sub i32 %v1_1643c, %v0_1643c
  store i32 %v2_1643c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16440

dec_label_pc_16440:                               ; preds = %dec_label_pc_163d0, %dec_label_pc_1636c, %dec_label_pc_1643c
  %v0_16440 = phi i32 [ %v0_16440.pre, %dec_label_pc_163d0 ], [ %v0_1636c, %dec_label_pc_1636c ], [ %v2_1643c, %dec_label_pc_1643c ]
  store i32 %v3_16310, i32* %r4.global-to-local, align 4
  store i32 %v6_16310, i32* @r5, align 4
  store i32 %v12_16310, i32* @r7, align 4
  ret i32 %v0_16440

; uselistorder directives
  uselistorder i32 %v0_163e8, { 5, 6, 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_163f0, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v1_16328, { 1, 2, 0, 3 }
  uselistorder i32 %tmp, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 3, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 19, { 7, 8, 0, 2, 12, 3, 9, 4, 10, 5, 11, 13, 14, 6, 15, 1, 16, 17, 18 }
  uselistorder i32* @r3, { 8, 9, 51, 52, 182, 183, 2, 184, 185, 186, 3, 187, 188, 189, 4, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 0, 208, 209, 210, 211, 10, 7, 11, 12, 13, 14, 15, 53, 54, 212, 221, 222, 223, 216, 40, 160, 163, 161, 162, 164, 165, 86, 41, 5, 125, 16, 17, 18, 227, 224, 225, 226, 1, 228, 229, 230, 217, 19, 166, 42, 43, 44, 218, 219, 220, 167, 213, 214, 215, 168, 32, 6, 55, 169, 56, 57, 67, 68, 34, 26, 33, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 45, 46, 48, 47, 39, 170, 49, 50, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 179 }
  uselistorder i32 18, { 5, 6, 0, 7, 1, 8, 2, 9, 4, 10, 3, 11, 12, 13 }
  uselistorder i32 22, { 1, 0, 11, 2, 3, 4, 5, 6, 7, 15, 16, 8, 12, 9, 13, 10, 14, 17 }
  uselistorder i32* @sp, { 2, 3, 1, 4, 0 }
  uselistorder i32 7, { 55, 53, 54, 3, 0, 1, 111, 4, 58, 5, 56, 6, 57, 2, 7, 59, 8, 60, 9, 61, 10, 62, 11, 63, 12, 64, 13, 65, 14, 66, 15, 67, 16, 68, 17, 69, 18, 70, 19, 71, 20, 72, 21, 73, 22, 74, 23, 75, 24, 76, 25, 77, 26, 78, 27, 79, 28, 80, 29, 81, 30, 82, 31, 83, 32, 84, 33, 85, 34, 86, 35, 87, 36, 88, 37, 89, 38, 90, 39, 91, 40, 92, 41, 93, 42, 94, 43, 95, 44, 96, 45, 97, 46, 98, 47, 99, 48, 100, 49, 101, 50, 51, 52, 102, 103, 104, 105, 106, 107, 108, 109, 110 }
  uselistorder i32* @ip, { 7, 8, 9, 80, 10, 11, 6, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 3, 114, 115, 116, 117, 118, 119, 120, 121, 122, 12, 0, 13, 14, 15, 16, 17, 123, 124, 38, 64, 4, 27, 28, 29, 30, 31, 32, 65, 66, 67, 128, 125, 126, 127, 1, 129, 39, 68, 69, 2, 70, 18, 19, 71, 72, 73, 48, 49, 50, 51, 52, 53, 40, 41, 42, 43, 44, 45, 5, 33, 34, 35, 36, 20, 21, 22, 23, 24, 25, 26, 74, 75, 76, 37, 46, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 77, 78, 79 }
  uselistorder i1 false, { 0, 17, 18, 19, 31, 13, 16, 32, 33, 34, 35, 36, 2, 1, 20, 23, 22, 21, 24, 3, 5, 30, 29, 14, 15, 6, 27, 4, 11, 12, 7, 8, 9, 25, 10, 28, 26, 37 }
  uselistorder i32 -8, { 37, 17, 18, 19, 20, 21, 22, 16, 15, 9, 14, 13, 12, 11, 23, 24, 25, 26, 27, 39, 28, 29, 30, 31, 32, 38, 40, 33, 41, 36, 10, 34, 35, 8, 0, 1, 4, 3, 2, 5, 6, 7 }
  uselistorder i32 14, { 9, 13, 21, 5, 6, 7, 0, 10, 11, 8, 1, 12, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_16440, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16428, { 1, 0 }
}

define i32 @function_16450(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_16450:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_16450 = load i32, i32* @r4, align 4
  store i32 %v3_16450, i32* %stack_var_-12, align 4
  %v0_16454 = load i32, i32* %r0.global-to-local, align 4
  %v1_16454 = inttoptr i32 %v0_16454 to i16*
  %v2_16454 = load i16, i16* %v1_16454, align 2
  %v3_16454 = zext i16 %v2_16454 to i32
  %v1_16458 = and i32 %v3_16454, 4
  store i32 %v1_16458, i32* %r5.global-to-local, align 4
  %v2_16458 = icmp eq i32 %v1_16458, 0
  store i32 %v0_16454, i32* %r4.global-to-local, align 4
  br i1 %v2_16458, label %dec_label_pc_1646c, label %bb

bb:                                               ; preds = %dec_label_pc_16450
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread7

dec_label_pc_1646c:                               ; preds = %dec_label_pc_16450
  %v1_1646c = icmp slt i32 %arg2, 0
  br i1 %v1_1646c, label %bb18, label %bb19

bb18:                                             ; preds = %dec_label_pc_1646c
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_1646c, %bb18
  %v1_16474 = add i32 %v0_16454, 4
  %v2_16474 = inttoptr i32 %v1_16474 to i32*
  %v3_16474 = load i32, i32* %v2_16474, align 4
  store i32 %v3_16474, i32* %r0.global-to-local, align 4
  %v1_16478 = call i32 @function_112e0(i32 %v3_16474)
  store i32 %v1_16478, i32* %r0.global-to-local, align 4
  %v5_16480 = icmp sgt i32 %v1_16478, 0
  br i1 %v5_16480, label %.thread7, label %dec_label_pc_16484

dec_label_pc_16484:                               ; preds = %bb19
  %v2_1647c = icmp eq i32 %v1_16478, 0
  %v0_16484 = load i32, i32* %r4.global-to-local, align 4
  %v1_16484 = inttoptr i32 %v0_16484 to i16*
  %v2_16484 = load i16, i16* %v1_16484, align 2
  br i1 %v2_1647c, label %bb20, label %bb21

bb20:                                             ; preds = %dec_label_pc_16484
  %v2_16488 = or i16 %v2_16484, 4
  store i16 %v2_16488, i16* %v1_16484, align 2
  %v1_164a4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread7

bb21:                                             ; preds = %dec_label_pc_16484
  %v2_1648c = or i16 %v2_16484, 8
  store i16 %v2_1648c, i16* %v1_16484, align 2
  %v1_16498 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_16498, i32* %r0.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %bb20, %bb, %bb19, %bb21
  %v1_164a4 = phi i32 [ %v1_164a4.pre, %bb20 ], [ 0, %bb ], [ %v1_16478, %bb19 ], [ %v1_16498, %bb21 ]
  %v2_164a0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_164a0, i32* @r4, align 4
  ret i32 %v1_164a4

; uselistorder directives
  uselistorder i16 %v2_16484, { 1, 0 }
  uselistorder i32 %v1_16478, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 2, 5, 6, 3, 4, 0, 1 }
  uselistorder i32 (i32)* @function_112e0, { 4, 2, 3, 0, 1 }
  uselistorder label %.thread7, { 3, 0, 2, 1 }
  uselistorder label %bb19, { 1, 0 }
}

define i32 @function_164a8(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_164a8:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_164a8 = load i32, i32* @r4, align 4
  store i32 %v3_164a8, i32* %stack_var_-24, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 2147483647, i32* %r8.global-to-local, align 4
  %v2_164c02 = icmp eq i32 %arg3, 0
  store i1 %v2_164c02, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_164c02, label %dec_label_pc_16550, label %dec_label_pc_164c8

dec_label_pc_164c0thread-pre-split:               ; preds = %dec_label_pc_164c8
  %v3_164e0 = load i32, i32* %r6.global-to-local, align 4
  %v5_164e0 = add i32 %v3_164e0, %v3_164d8
  store i32 %v5_164e0, i32* %r6.global-to-local, align 4
  %v4_164e4 = load i32, i32* %r5.global-to-local, align 4
  %v5_164e4 = sub i32 %v4_164e4, %v3_164d8
  store i32 %v5_164e4, i32* %r5.global-to-local, align 4
  %v2_164c0 = icmp eq i32 %v5_164e4, 0
  store i1 %v2_164c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_164c0, label %dec_label_pc_164c0.dec_label_pc_16550.loopexit_crit_edge, label %dec_label_pc_164c0thread-pre-split.dec_label_pc_164c8_crit_edge

dec_label_pc_164c0thread-pre-split.dec_label_pc_164c8_crit_edge: ; preds = %dec_label_pc_164c0thread-pre-split
  %v3_164c8.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_164d4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_164c8

dec_label_pc_164c8:                               ; preds = %dec_label_pc_164a8, %dec_label_pc_164c0thread-pre-split.dec_label_pc_164c8_crit_edge
  %v0_164d4 = phi i32 [ %v0_164d4.pre, %dec_label_pc_164c0thread-pre-split.dec_label_pc_164c8_crit_edge ], [ %tmp, %dec_label_pc_164a8 ]
  %v0_164d0 = phi i32 [ %v5_164e0, %dec_label_pc_164c0thread-pre-split.dec_label_pc_164c8_crit_edge ], [ %arg2, %dec_label_pc_164a8 ]
  %v3_164c8 = phi i32 [ %v3_164c8.pre, %dec_label_pc_164c0thread-pre-split.dec_label_pc_164c8_crit_edge ], [ 2147483647, %dec_label_pc_164a8 ]
  %v0_164cc.in = phi i32 [ %v5_164e4, %dec_label_pc_164c0thread-pre-split.dec_label_pc_164c8_crit_edge ], [ %arg3, %dec_label_pc_164a8 ]
  %v3_164cc = phi i32 [ %v5_164e4, %dec_label_pc_164c0thread-pre-split.dec_label_pc_164c8_crit_edge ], [ %arg3, %dec_label_pc_164a8 ]
  %v0_164cc = icmp slt i32 %v0_164cc.in, 0
  %storemerge = select i1 %v0_164cc, i32 %v3_164c8, i32 %v3_164cc
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  store i32 %v0_164d0, i32* %r1.global-to-local, align 4
  %v1_164d4 = add i32 %v0_164d4, 4
  %v2_164d4 = inttoptr i32 %v1_164d4 to i32*
  %v3_164d4 = load i32, i32* %v2_164d4, align 4
  %v3_164d8 = call i32 @function_11454(i32 %v3_164d4, i32 %v0_164d0)
  %v1_164dc = icmp slt i32 %v3_164d8, 0
  %v2_164dc = icmp eq i32 %v3_164d8, 0
  store i1 %v2_164dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_164dc, label %dec_label_pc_164ec, label %dec_label_pc_164c0thread-pre-split

dec_label_pc_164ec:                               ; preds = %dec_label_pc_164c8
  %v0_164ec = load i32, i32* %r4.global-to-local, align 4
  %v1_164ec = inttoptr i32 %v0_164ec to i16*
  %v2_164ec = load i16, i16* %v1_164ec, align 2
  %v3_164ec = zext i16 %v2_164ec to i32
  store i32 %v3_164ec, i32* %r3.global-to-local, align 4
  %v1_164f0 = add i32 %v0_164ec, 8
  store i32 %v1_164f0, i32* %r1.global-to-local, align 4
  %v1_164f4 = inttoptr i32 %v1_164f0 to i32*
  %v2_164f4 = load i32, i32* %v1_164f4, align 4
  store i32 %v2_164f4, i32* %r1.global-to-local, align 4
  %v3_164f4 = add i32 %v0_164ec, 12
  %v4_164f4 = inttoptr i32 %v3_164f4 to i32*
  %v5_164f4 = load i32, i32* %v4_164f4, align 4
  %v1_164f8 = or i32 %v3_164ec, 8
  store i32 %v1_164f8, i32* %r3.global-to-local, align 4
  %v2_164fc = sub i32 %v5_164f4, %v2_164f4
  store i32 %v2_164fc, i32* %r2.global-to-local, align 4
  %v9_164fc = icmp eq i32 %v5_164f4, %v2_164f4
  store i1 %v9_164fc, i1* %cpsr_z.global-to-local, align 1
  %v1_16500 = trunc i32 %v1_164f8 to i16
  store i16 %v1_16500, i16* %v1_164ec, align 2
  br i1 %v9_164fc, label %dec_label_pc_164ec.dec_label_pc_1654c_crit_edge, label %dec_label_pc_16508

dec_label_pc_164ec.dec_label_pc_1654c_crit_edge:  ; preds = %dec_label_pc_164ec
  %v0_1654c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1654c

dec_label_pc_16508:                               ; preds = %dec_label_pc_164ec
  %v0_16508 = load i32, i32* %r2.global-to-local, align 4
  %v1_16508 = load i32, i32* %r5.global-to-local, align 4
  %v3_16508 = icmp ult i32 %v0_16508, %v1_16508
  %v9_16508 = icmp eq i32 %v0_16508, %v1_16508
  store i1 %v9_16508, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_16508, label %.preheader, label %bb23

bb23:                                             ; preds = %dec_label_pc_16508
  store i32 %v1_16508, i32* %r2.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_16508, %bb23
  %v2_1651c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb24

bb24:                                             ; preds = %.preheader, %dec_label_pc_16530
  %v2_1651c = phi i32 [ %v2_1651c.pre, %.preheader ], [ %v1_16534, %dec_label_pc_16530 ]
  %v0_16510 = load i32, i32* %r6.global-to-local, align 4
  %v1_16510 = inttoptr i32 %v0_16510 to i8*
  %v2_16510 = load i8, i8* %v1_16510, align 1
  %v3_16510 = zext i8 %v2_16510 to i32
  store i32 %v3_16510, i32* %r3.global-to-local, align 4
  %v7_16514 = icmp eq i8 %v2_16510, 10
  store i1 %v7_16514, i1* %cpsr_z.global-to-local, align 1
  %v1_16518 = add i32 %v0_16510, 1
  store i32 %v1_16518, i32* %r6.global-to-local, align 4
  %v3_1651c = inttoptr i32 %v2_1651c to i8*
  store i8 %v2_16510, i8* %v3_1651c, align 1
  %v0_16520 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_16520, label %dec_label_pc_16524, label %dec_label_pc_16530

dec_label_pc_16524:                               ; preds = %bb24
  %v0_16524 = load i32, i32* %r4.global-to-local, align 4
  %v1_16524 = inttoptr i32 %v0_16524 to i16*
  %v2_16524 = load i16, i16* %v1_16524, align 2
  %v3_16524 = zext i16 %v2_16524 to i32
  store i32 %v3_16524, i32* %r3.global-to-local, align 4
  %v1_16528 = and i32 %v3_16524, 256
  %v2_16528 = icmp eq i32 %v1_16528, 0
  store i1 %v2_16528, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16528, label %dec_label_pc_16530, label %dec_label_pc_16524.dec_label_pc_1653c_crit_edge

dec_label_pc_16524.dec_label_pc_1653c_crit_edge:  ; preds = %dec_label_pc_16524
  %v0_16540.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1653c

dec_label_pc_16530:                               ; preds = %dec_label_pc_16524, %bb24
  %v0_16530 = load i32, i32* %r2.global-to-local, align 4
  %v1_16530 = add i32 %v0_16530, -1
  store i32 %v1_16530, i32* %r2.global-to-local, align 4
  %v7_16530 = icmp eq i32 %v0_16530, 1
  store i1 %v7_16530, i1* %cpsr_z.global-to-local, align 1
  %v0_16534 = load i32, i32* %r1.global-to-local, align 4
  %v1_16534 = add i32 %v0_16534, 1
  store i32 %v1_16534, i32* %r1.global-to-local, align 4
  br i1 %v7_16530, label %dec_label_pc_16530.dec_label_pc_1653c_crit_edge, label %bb24

dec_label_pc_16530.dec_label_pc_1653c_crit_edge:  ; preds = %dec_label_pc_16530
  %v0_1653c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1653c

dec_label_pc_1653c:                               ; preds = %dec_label_pc_16524.dec_label_pc_1653c_crit_edge, %dec_label_pc_16530.dec_label_pc_1653c_crit_edge
  %v0_16540 = phi i32 [ %v1_16534, %dec_label_pc_16530.dec_label_pc_1653c_crit_edge ], [ %v0_16540.pre, %dec_label_pc_16524.dec_label_pc_1653c_crit_edge ]
  %v0_1653c = phi i32 [ %v0_1653c.pre, %dec_label_pc_16530.dec_label_pc_1653c_crit_edge ], [ %v0_16524, %dec_label_pc_16524.dec_label_pc_1653c_crit_edge ]
  %v1_1653c = add i32 %v0_1653c, 8
  %v2_1653c = inttoptr i32 %v1_1653c to i32*
  %v3_1653c = load i32, i32* %v2_1653c, align 4
  store i32 %v3_1653c, i32* %r3.global-to-local, align 4
  %v2_16540 = add i32 %v0_1653c, 16
  %v3_16540 = inttoptr i32 %v2_16540 to i32*
  store i32 %v0_16540, i32* %v3_16540, align 4
  %v0_16544 = load i32, i32* %r3.global-to-local, align 4
  %v1_16544 = load i32, i32* %r1.global-to-local, align 4
  %v2_16544 = sub i32 %v1_16544, %v0_16544
  store i32 %v2_16544, i32* %r3.global-to-local, align 4
  %v1_16548 = load i32, i32* %r5.global-to-local, align 4
  %v2_16548 = sub i32 %v1_16548, %v2_16544
  store i32 %v2_16548, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1654c

dec_label_pc_1654c:                               ; preds = %dec_label_pc_164ec.dec_label_pc_1654c_crit_edge, %dec_label_pc_1653c
  %v0_1654c = phi i32 [ %v0_1654c.pre, %dec_label_pc_164ec.dec_label_pc_1654c_crit_edge ], [ %v2_16548, %dec_label_pc_1653c ]
  %v1_1654c = load i32, i32* @r7, align 4
  %v2_1654c = sub i32 %v1_1654c, %v0_1654c
  br label %dec_label_pc_16550

dec_label_pc_164c0.dec_label_pc_16550.loopexit_crit_edge: ; preds = %dec_label_pc_164c0thread-pre-split
  %v0_16550.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_16550

dec_label_pc_16550:                               ; preds = %dec_label_pc_164a8, %dec_label_pc_164c0.dec_label_pc_16550.loopexit_crit_edge, %dec_label_pc_1654c
  %v0_16550 = phi i32 [ %v2_1654c, %dec_label_pc_1654c ], [ %v0_16550.pre.pre, %dec_label_pc_164c0.dec_label_pc_16550.loopexit_crit_edge ], [ 0, %dec_label_pc_164a8 ]
  %v2_16554 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_16554, i32* %r4.global-to-local, align 4
  ret i32 %v0_16550

; uselistorder directives
  uselistorder i32 %v0_1653c, { 1, 0 }
  uselistorder i32 %v1_16534, { 0, 2, 1 }
  uselistorder i32 %v0_16530, { 1, 0 }
  uselistorder i32 %v1_16508, { 0, 2, 1 }
  uselistorder i32 %v0_16508, { 1, 0 }
  uselistorder i32 %v5_164f4, { 1, 0 }
  uselistorder i32 %v2_164f4, { 1, 0, 2 }
  uselistorder i32 %v3_164d8, { 2, 3, 0, 1 }
  uselistorder i32 %v0_164d0, { 1, 0 }
  uselistorder i32 %v5_164e4, { 2, 0, 1, 3 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r5.global-to-local, { 0, 3, 4, 2, 1, 5, 6 }
  uselistorder i32* %r4.global-to-local, { 0, 4, 2, 3, 1, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 3, 2, 4, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 3, 1, 4, 5, 2, 6, 7, 8, 0 }
  uselistorder i32 256, { 257, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 250, 258, 255, 256, 259, 33, 35, 34, 36, 249, 0, 254, 1, 37, 38, 39, 40, 42, 43, 44, 41, 46, 47, 48, 45, 49, 252, 50, 263, 264, 51, 52, 53, 266, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 64, 66, 67, 253, 267, 265, 68, 69, 70, 71, 260, 72, 73, 74, 75, 76, 261, 77, 78, 79, 80, 262, 81, 82, 83, 84, 86, 85, 87, 89, 88, 90, 92, 91, 93, 268, 94, 95, 269, 106, 100, 96, 107, 101, 108, 102, 97, 98, 103, 104, 109, 105, 99, 110, 111, 112, 113, 114, 115, 116, 123, 120, 117, 124, 121, 125, 122, 118, 119, 126, 127, 128, 129, 140, 135, 141, 136, 142, 137, 143, 138, 130, 131, 132, 133, 144, 139, 134, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 161, 158, 162, 159, 163, 160, 155, 156, 157, 164, 165, 166, 167, 168, 178, 179, 173, 169, 180, 174, 181, 175, 170, 176, 182, 177, 171, 172, 183, 184, 185, 186, 187, 188, 193, 191, 189, 194, 192, 190, 195, 251, 270, 196, 198, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 216, 223, 217, 224, 218, 219, 212, 213, 225, 220, 226, 221, 214, 215, 222, 227, 228, 229, 230, 231, 232, 237, 244, 238, 245, 239, 233, 234, 246, 240, 247, 241, 242, 235, 236, 243, 248 }
  uselistorder i8 10, { 1, 2, 0 }
  uselistorder i32 (i32, i32)* @function_11454, { 2, 1, 0 }
  uselistorder i32 4, { 202, 203, 204, 196, 197, 364, 205, 456, 4, 5, 206, 6, 7, 67, 0, 8, 79, 74, 75, 9, 457, 76, 458, 57, 10, 11, 77, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 12, 476, 477, 478, 479, 480, 481, 56, 482, 483, 484, 485, 486, 487, 13, 14, 78, 488, 207, 89, 208, 15, 209, 90, 210, 211, 212, 213, 136, 214, 215, 216, 217, 218, 219, 16, 198, 199, 200, 201, 322, 323, 191, 192, 193, 194, 195, 489, 137, 91, 490, 17, 491, 138, 139, 58, 397, 398, 399, 400, 401, 402, 140, 141, 18, 403, 404, 405, 406, 407, 408, 409, 410, 142, 395, 396, 254, 255, 256, 257, 258, 259, 260, 261, 262, 19, 263, 264, 265, 411, 20, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 143, 144, 145, 426, 427, 430, 433, 428, 429, 92, 146, 431, 49, 432, 434, 435, 436, 438, 147, 22, 21, 437, 148, 149, 150, 266, 151, 50, 23, 24, 324, 325, 326, 327, 328, 25, 329, 439, 440, 190, 26, 27, 93, 267, 59, 28, 240, 94, 241, 152, 242, 269, 270, 29, 271, 80, 95, 96, 220, 221, 243, 244, 223, 224, 225, 98, 237, 238, 239, 222, 97, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 245, 246, 53, 52, 272, 68, 273, 30, 274, 55, 54, 275, 31, 268, 276, 277, 282, 99, 283, 100, 284, 101, 285, 102, 286, 103, 287, 104, 288, 105, 289, 106, 290, 107, 291, 108, 292, 109, 293, 110, 294, 111, 295, 112, 296, 113, 297, 114, 298, 115, 299, 116, 300, 117, 302, 118, 119, 303, 304, 301, 278, 120, 279, 280, 281, 247, 153, 248, 51, 32, 249, 250, 33, 251, 60, 69, 121, 252, 253, 305, 66, 65, 64, 306, 122, 34, 35, 36, 37, 38, 39, 307, 62, 61, 308, 63, 123, 309, 310, 311, 124, 321, 125, 126, 127, 330, 154, 331, 332, 333, 334, 335, 155, 156, 128, 336, 40, 338, 81, 339, 340, 157, 341, 342, 158, 159, 343, 344, 82, 345, 346, 160, 161, 347, 162, 348, 349, 350, 163, 164, 351, 352, 83, 353, 165, 166, 354, 355, 356, 129, 84, 357, 358, 167, 359, 360, 361, 168, 169, 1, 362, 85, 363, 365, 366, 170, 367, 368, 171, 172, 2, 70, 369, 371, 86, 372, 373, 374, 375, 173, 174, 376, 377, 378, 175, 379, 380, 130, 381, 3, 382, 383, 131, 384, 385, 386, 176, 387, 388, 389, 390, 177, 178, 132, 391, 71, 392, 393, 87, 394, 441, 442, 179, 443, 444, 445, 133, 446, 134, 447, 448, 449, 180, 181, 135, 450, 72, 451, 452, 88, 455, 182, 41, 312, 183, 42, 313, 184, 73, 43, 314, 315, 185, 44, 316, 186, 45, 317, 187, 46, 318, 188, 47, 319, 189, 48, 320, 453, 454, 370, 337 }
  uselistorder i32 2147483647, { 1, 5, 0, 2, 3, 4 }
  uselistorder i32* @r7, { 1, 26, 27, 15, 16, 17, 18, 19, 20, 21, 22, 25, 2, 28, 29, 30, 3, 31, 32, 33, 11, 34, 35, 4, 36, 37, 38, 39, 40, 41, 5, 42, 43, 44, 45, 46, 47, 23, 24, 297, 298, 136, 137, 252, 253, 14, 299, 300, 301, 306, 307, 6, 48, 49, 254, 255, 256, 257, 258, 259, 260, 261, 262, 68, 69, 70, 71, 72, 73, 263, 264, 265, 266, 267, 268, 269, 270, 7, 271, 272, 273, 274, 275, 204, 205, 74, 75, 126, 127, 76, 77, 225, 226, 206, 207, 78, 79, 138, 139, 140, 141, 142, 147, 148, 149, 150, 151, 143, 144, 145, 146, 152, 153, 154, 155, 156, 157, 276, 277, 304, 305, 80, 81, 82, 83, 278, 279, 302, 303, 179, 180, 158, 159, 128, 129, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 280, 281, 13, 282, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 50, 101, 102, 94, 95, 96, 97, 98, 99, 100, 62, 63, 64, 65, 66, 67, 283, 284, 285, 286, 103, 104, 120, 121, 122, 123, 124, 125, 130, 131, 132, 10, 133, 134, 135, 170, 171, 172, 173, 174, 175, 176, 177, 178, 183, 181, 182, 184, 185, 186, 187, 188, 8, 189, 9, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 200, 202, 203, 12, 208, 211, 209, 210, 212, 213, 214, 215, 217, 216, 218, 219, 220, 222, 221, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 0, 245, 242, 243, 244, 246, 247, 248, 249, 250, 291, 287, 288, 289, 290, 292, 293, 294, 295, 296, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 251 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_16550, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1654c, { 1, 0 }
  uselistorder label %dec_label_pc_1653c, { 1, 0 }
  uselistorder label %bb24, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_164c8, { 1, 0 }
}

define i32 @function_1655c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1655c:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1655c = load i32, i32* @r4, align 4
  store i32 %v3_1655c, i32* %stack_var_-8, align 4
  %v1_16560 = add i32 %arg1, 8
  %v1_16564 = inttoptr i32 %v1_16560 to i32*
  %v2_16564 = load i32, i32* %v1_16564, align 4
  %v3_16564 = add i32 %arg1, 12
  %v4_16564 = inttoptr i32 %v3_16564 to i32*
  %v5_16564 = load i32, i32* %v4_16564, align 4
  %v2_16568 = sub i32 %v5_16564, %v2_16564
  store i32 %v2_16568, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v3_16570 = inttoptr i32 %arg1 to i16*
  %v4_16570 = call i32 @function_16450(i16* %v3_16570, i32 %v2_16564, i32 %v2_16568)
  %v0_16574 = load i32, i32* @r4, align 4
  %v1_16574 = add i32 %v0_16574, 8
  %v2_16574 = inttoptr i32 %v1_16574 to i32*
  %v3_16574 = load i32, i32* %v2_16574, align 4
  store i32 %v3_16574, i32* %r2.global-to-local, align 4
  %v2_16578 = add i32 %v3_16574, %v4_16570
  %v2_1657c = add i32 %v0_16574, 20
  %v3_1657c = inttoptr i32 %v2_1657c to i32*
  store i32 %v2_16578, i32* %v3_1657c, align 4
  %v0_16580 = load i32, i32* %r2.global-to-local, align 4
  %v1_16580 = load i32, i32* @r4, align 4
  %v2_16580 = add i32 %v1_16580, 16
  %v3_16580 = inttoptr i32 %v2_16580 to i32*
  store i32 %v0_16580, i32* %v3_16580, align 4
  %v2_16584 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16584, i32* @r4, align 4
  ret i32 %v4_16570

; uselistorder directives
  uselistorder i32 %v4_16570, { 1, 0 }
  uselistorder i32 20, { 29, 109, 3, 110, 111, 1, 112, 30, 9, 31, 32, 33, 34, 28, 49, 50, 24, 25, 26, 27, 113, 10, 114, 39, 40, 103, 2, 51, 11, 52, 53, 0, 12, 41, 38, 13, 35, 14, 36, 15, 37, 43, 44, 4, 45, 16, 46, 23, 42, 47, 48, 54, 56, 5, 55, 57, 58, 59, 60, 61, 62, 6, 63, 64, 65, 66, 67, 68, 70, 71, 17, 69, 72, 73, 74, 75, 76, 77, 79, 80, 18, 78, 81, 82, 83, 84, 86, 87, 19, 85, 88, 89, 90, 91, 92, 93, 95, 20, 94, 96, 97, 98, 101, 7, 99, 21, 100, 102, 104, 107, 8, 105, 22, 106, 108 }
  uselistorder i32 12, { 7, 8, 36, 9, 10, 39, 6, 164, 165, 166, 167, 168, 170, 171, 169, 172, 173, 174, 175, 176, 177, 178, 11, 12, 13, 14, 16, 15, 17, 40, 41, 18, 42, 43, 44, 45, 46, 37, 38, 87, 88, 33, 34, 35, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 2, 60, 61, 62, 63, 64, 19, 65, 135, 20, 158, 21, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 154, 147, 148, 149, 150, 151, 152, 153, 155, 156, 22, 157, 3, 89, 90, 23, 91, 92, 24, 66, 56, 57, 67, 68, 58, 48, 54, 55, 47, 49, 50, 51, 52, 53, 59, 69, 70, 71, 5, 72, 73, 74, 75, 77, 78, 79, 25, 80, 26, 81, 27, 82, 28, 83, 29, 84, 86, 85, 76, 4, 159, 93, 30, 94, 31, 95, 32, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 160, 161, 162, 163, 0, 1 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @function_1658c() local_unnamed_addr {
dec_label_pc_1658c:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1658c = load i32, i32* @r4, align 4
  store i32 %v3_1658c, i32* %stack_var_-12, align 4
  %v0_16590 = load i32, i32* @r0, align 4
  %v1_16590 = inttoptr i32 %v0_16590 to i16*
  %v2_16590 = load i16, i16* %v1_16590, align 2
  %v3_16590 = zext i16 %v2_16590 to i32
  store i32 %v3_16590, i32* %r3.global-to-local, align 4
  %v0_16594 = load i32, i32* @r1, align 4
  %v2_16594 = and i32 %v0_16594, %v3_16590
  %v4_16594 = icmp eq i32 %v2_16594, 0
  store i32 %v0_16590, i32* @r4, align 4
  br i1 %v4_16594, label %dec_label_pc_165a4, label %dec_label_pc_165b4

dec_label_pc_165a4:                               ; preds = %dec_label_pc_1658c
  %v1_165a4 = and i32 %v3_16590, 2176
  %v2_165a4 = icmp eq i32 %v1_165a4, 0
  br i1 %v2_165a4, label %dec_label_pc_165ac, label %dec_label_pc_165c0

dec_label_pc_165ac:                               ; preds = %dec_label_pc_165a4
  %v2_165ac = or i32 %v0_16594, %v3_16590
  store i32 %v2_165ac, i32* %r3.global-to-local, align 4
  %v1_165b0 = trunc i32 %v2_165ac to i16
  store i16 %v1_165b0, i16* %v1_16590, align 2
  %v0_165b4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_165b4

dec_label_pc_165b4:                               ; preds = %dec_label_pc_1658c, %dec_label_pc_165ac
  %v0_165b4 = phi i32 [ %v0_16590, %dec_label_pc_1658c ], [ %v0_165b4.pre, %dec_label_pc_165ac ]
  %v1_165b4 = inttoptr i32 %v0_165b4 to i16*
  %v2_165b4 = load i16, i16* %v1_165b4, align 2
  %v3_165b4 = zext i16 %v2_165b4 to i32
  store i32 %v3_165b4, i32* %r3.global-to-local, align 4
  %v1_165b8 = and i32 %v3_165b4, 16
  store i32 %v1_165b8, i32* %r5.global-to-local, align 4
  %v2_165b8 = icmp eq i32 %v1_165b8, 0
  br i1 %v2_165b8, label %dec_label_pc_165e0, label %dec_label_pc_165c0

dec_label_pc_165c0:                               ; preds = %dec_label_pc_165a4, %dec_label_pc_165b4
  %v0_165c0 = call i32 @function_11970()
  store i32 %v0_165c0, i32* %r0.global-to-local, align 4
  store i32 9, i32* %r3.global-to-local, align 4
  %v2_165c8 = inttoptr i32 %v0_165c0 to i32*
  store i32 9, i32* %v2_165c8, align 4
  br label %dec_label_pc_165cc

dec_label_pc_165cc:                               ; preds = %dec_label_pc_165e8, %dec_label_pc_165c0
  %v0_165cc = load i32, i32* @r4, align 4
  %v1_165cc = inttoptr i32 %v0_165cc to i16*
  %v2_165cc = load i16, i16* %v1_165cc, align 2
  %v3_165cc = zext i16 %v2_165cc to i32
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_165d4 = or i32 %v3_165cc, 8
  store i32 %v1_165d4, i32* %r3.global-to-local, align 4
  %v1_165d8 = trunc i32 %v1_165d4 to i16
  store i16 %v1_165d8, i16* %v1_165cc, align 2
  %v1_16620.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16618

dec_label_pc_165e0:                               ; preds = %dec_label_pc_165b4
  %v1_165e0 = and i32 %v3_165b4, 64
  %v2_165e0 = icmp eq i32 %v1_165e0, 0
  br i1 %v2_165e0, label %dec_label_pc_16608, label %dec_label_pc_165e8

dec_label_pc_165e8:                               ; preds = %dec_label_pc_165e0
  %v0_165e8 = load i32, i32* @r0, align 4
  %v1_165e8 = call i32 @function_151c4(i32 %v0_165e8)
  store i32 %v1_165e8, i32* %r0.global-to-local, align 4
  %v2_165ec = icmp eq i32 %v1_165e8, 0
  br i1 %v2_165ec, label %dec_label_pc_165f4, label %dec_label_pc_165cc

dec_label_pc_165f4:                               ; preds = %dec_label_pc_165e8
  %v0_165f4 = load i32, i32* @r4, align 4
  %v1_165f4 = inttoptr i32 %v0_165f4 to i16*
  %v2_165f4 = load i16, i16* %v1_165f4, align 2
  %v3_165f4 = zext i16 %v2_165f4 to i32
  store i32 %v3_165f4, i32* %r3.global-to-local, align 4
  %v1_165f8 = add i32 %v0_165f4, 8
  %v2_165f8 = inttoptr i32 %v1_165f8 to i32*
  %v3_165f8 = load i32, i32* %v2_165f8, align 4
  %v1_165fc = and i32 %v3_165f4, 65471
  store i32 %v1_165fc, i32* %r3.global-to-local, align 4
  %v2_16600 = add i32 %v0_165f4, 28
  %v3_16600 = inttoptr i32 %v2_16600 to i32*
  store i32 %v3_165f8, i32* %v3_16600, align 4
  %v0_16604 = load i32, i32* %r3.global-to-local, align 4
  %v1_16604 = trunc i32 %v0_16604 to i16
  %v2_16604 = load i32, i32* @r4, align 4
  %v3_16604 = inttoptr i32 %v2_16604 to i16*
  store i16 %v1_16604, i16* %v3_16604, align 2
  %v0_16608.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_16608

dec_label_pc_16608:                               ; preds = %dec_label_pc_165e0, %dec_label_pc_165f4
  %v2_16610 = phi i32 [ %v0_165b4, %dec_label_pc_165e0 ], [ %v0_16608.pre, %dec_label_pc_165f4 ]
  %v1_16608 = inttoptr i32 %v2_16610 to i16*
  %v2_16608 = load i16, i16* %v1_16608, align 2
  %v3_16608 = zext i16 %v2_16608 to i32
  %v1_1660c = or i32 %v3_16608, 1
  store i32 %v1_1660c, i32* %r3.global-to-local, align 4
  %v1_16610 = trunc i32 %v1_1660c to i16
  store i16 %v1_16610, i16* %v1_16608, align 2
  %v0_16614 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_16614, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16618

dec_label_pc_16618:                               ; preds = %dec_label_pc_165cc, %dec_label_pc_16608
  %v1_16620 = phi i32 [ %v1_16620.pre, %dec_label_pc_165cc ], [ %v0_16614, %dec_label_pc_16608 ]
  %v2_1661c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1661c, i32* @r4, align 4
  ret i32 %v1_16620

; uselistorder directives
  uselistorder i32 %v3_16590, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32 28, { 20, 44, 7, 21, 22, 23, 35, 36, 18, 11, 19, 12, 13, 14, 15, 31, 32, 43, 8, 16, 0, 24, 1, 25, 2, 26, 3, 27, 4, 28, 5, 29, 6, 30, 9, 17, 34, 33, 37, 38, 39, 40, 41, 42, 10 }
  uselistorder i32 65471, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_151c4, { 2, 1, 0 }
  uselistorder i32 64, { 5, 6, 7, 8, 11, 1, 2, 3, 4, 41, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0 }
  uselistorder i32 8, { 126, 127, 128, 129, 130, 131, 132, 119, 120, 121, 122, 252, 133, 324, 31, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 134, 135, 136, 137, 138, 139, 140, 25, 141, 142, 143, 144, 145, 146, 147, 148, 149, 123, 124, 125, 235, 236, 237, 41, 342, 343, 110, 268, 269, 270, 271, 272, 273, 274, 275, 5, 111, 276, 277, 278, 279, 280, 281, 282, 283, 6, 154, 155, 156, 157, 158, 159, 160, 161, 284, 285, 286, 287, 288, 7, 289, 290, 8, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 308, 301, 302, 303, 304, 112, 20, 305, 306, 307, 113, 114, 9, 309, 310, 311, 312, 314, 315, 115, 10, 316, 11, 313, 34, 35, 32, 33, 22, 23, 28, 29, 36, 344, 238, 239, 240, 241, 42, 117, 26, 12, 13, 19, 14, 15, 16, 17, 162, 43, 150, 118, 30, 163, 164, 165, 21, 24, 167, 18, 44, 168, 45, 169, 46, 170, 47, 171, 48, 172, 49, 173, 50, 174, 51, 175, 52, 176, 53, 177, 54, 178, 55, 179, 56, 180, 57, 181, 58, 182, 59, 183, 60, 184, 61, 185, 62, 186, 63, 187, 64, 188, 65, 189, 66, 190, 67, 191, 68, 192, 69, 193, 70, 194, 71, 195, 72, 196, 73, 197, 74, 198, 75, 199, 76, 200, 77, 201, 78, 202, 79, 203, 80, 204, 81, 205, 82, 206, 83, 207, 84, 208, 85, 209, 86, 210, 87, 211, 88, 212, 89, 213, 90, 214, 91, 215, 92, 216, 93, 217, 94, 218, 95, 219, 96, 220, 97, 221, 98, 222, 99, 223, 100, 224, 101, 225, 102, 226, 103, 227, 104, 228, 229, 166, 151, 152, 105, 153, 106, 107, 108, 242, 116, 37, 243, 244, 245, 246, 247, 27, 248, 249, 250, 251, 2, 253, 254, 255, 3, 256, 257, 258, 259, 260, 261, 262, 4, 263, 264, 265, 266, 267, 317, 318, 319, 320, 321, 230, 38, 231, 39, 232, 40, 233, 109, 234, 322, 323, 0, 1 }
  uselistorder i32 9, { 4, 42, 37, 38, 47, 82, 5, 69, 3, 70, 6, 48, 43, 7, 8, 44, 39, 49, 2, 40, 50, 41, 9, 51, 10, 52, 11, 53, 12, 54, 13, 55, 14, 56, 15, 57, 16, 58, 17, 59, 18, 60, 19, 61, 20, 62, 21, 63, 22, 64, 23, 65, 24, 66, 25, 67, 26, 68, 45, 46, 27, 28, 29, 30, 31, 32, 33, 34, 0, 35, 1, 36, 83, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85 }
  uselistorder i32 16, { 93, 94, 95, 87, 88, 89, 90, 96, 29, 30, 31, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 97, 98, 99, 100, 101, 2, 1, 22, 41, 42, 43, 44, 104, 45, 105, 102, 103, 46, 47, 106, 8, 48, 49, 107, 108, 50, 51, 109, 110, 91, 92, 52, 133, 134, 83, 84, 85, 86, 53, 54, 55, 56, 118, 119, 120, 121, 57, 191, 3, 58, 192, 193, 0, 194, 195, 59, 21, 135, 60, 136, 61, 62, 9, 20, 10, 11, 4, 12, 13, 63, 122, 64, 123, 68, 114, 124, 115, 65, 111, 66, 112, 67, 113, 127, 128, 129, 32, 82, 69, 70, 14, 79, 15, 16, 71, 125, 126, 72, 116, 117, 35, 34, 33, 130, 36, 131, 37, 73, 74, 132, 38, 196, 75, 137, 138, 139, 140, 23, 141, 142, 143, 144, 145, 146, 147, 24, 148, 149, 150, 76, 151, 77, 39, 152, 153, 25, 154, 155, 17, 156, 157, 5, 158, 159, 160, 26, 161, 162, 163, 164, 165, 6, 166, 167, 168, 80, 18, 81, 169, 27, 170, 171, 172, 19, 28, 173, 78, 174, 175, 7, 40, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 187, 189, 190, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 207, 209, 210 }
  uselistorder i32* @r1, { 15, 14, 97, 16, 17, 18, 19, 1, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 2, 177, 178, 20, 21, 22, 23, 0, 41, 42, 11, 24, 3, 141, 30, 31, 4, 142, 5, 32, 33, 9, 98, 25, 43, 12, 143, 144, 44, 7, 145, 45, 46, 34, 26, 27, 28, 36, 35, 29, 146, 37, 38, 39, 40, 47, 48, 49, 8, 50, 147, 148, 6, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 10, 158, 13 }
  uselistorder label %dec_label_pc_16618, { 1, 0 }
  uselistorder label %dec_label_pc_16608, { 1, 0 }
  uselistorder label %dec_label_pc_165c0, { 1, 0 }
  uselistorder label %dec_label_pc_165b4, { 1, 0 }
}

define i32 @function_16624(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_16624:
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r0, align 4
  %v6_16624 = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_16634 = call i32 @function_11a70()
  %v0_16638 = load i32, i32* @r5, align 4
  %v1_16638 = load i32, i32* @r4, align 4
  %v2_16638 = add i32 %v1_16638, %v0_16638
  store i32 %v6_16624, i32* @r5, align 4
  ret i32 %v2_16638

; uselistorder directives
  uselistorder i32 ()* @function_11a70, { 7, 8, 2, 0, 4, 3, 6, 5, 1 }
  uselistorder i32* @r5, { 43, 44, 45, 46, 29, 30, 31, 32, 33, 34, 35, 36, 37, 47, 4, 48, 49, 50, 566, 567, 568, 51, 25, 52, 0, 53, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 21, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 27, 28, 76, 77, 78, 79, 80, 81, 5, 82, 83, 84, 85, 86, 87, 88, 6, 89, 90, 91, 9, 92, 93, 7, 94, 95, 96, 97, 98, 99, 8, 100, 101, 102, 103, 104, 105, 38, 10, 39, 40, 41, 42, 261, 262, 263, 264, 265, 266, 581, 11, 582, 583, 591, 592, 106, 107, 108, 109, 110, 111, 112, 584, 585, 586, 587, 588, 589, 590, 113, 114, 115, 116, 496, 497, 501, 502, 503, 504, 505, 498, 499, 500, 134, 135, 136, 12, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 506, 507, 530, 13, 531, 532, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 2, 521, 522, 523, 524, 525, 14, 526, 527, 528, 529, 150, 151, 152, 153, 154, 267, 268, 15, 269, 270, 271, 272, 273, 26, 117, 274, 16, 275, 276, 277, 278, 279, 280, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 121, 122, 123, 118, 119, 120, 204, 205, 206, 207, 208, 209, 210, 211, 217, 218, 219, 220, 221, 222, 212, 213, 214, 215, 216, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 249, 250, 251, 235, 236, 237, 238, 1, 239, 252, 253, 17, 254, 255, 256, 257, 258, 259, 260, 281, 282, 283, 284, 285, 22, 286, 287, 288, 289, 290, 291, 292, 23, 293, 24, 294, 295, 296, 297, 298, 299, 300, 301, 18, 302, 19, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 327, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 348, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 20, 361, 362, 363, 364, 365, 366, 367, 3, 369, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 384, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 415, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 448, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 474, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 533, 534, 535, 536, 537, 544, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 240, 241, 242, 243, 244, 245, 246, 247, 248 }
  uselistorder i32* @r2, { 9, 12, 13, 141, 142, 14, 15, 16, 17, 18, 19, 27, 10, 11, 28, 143, 147, 148, 149, 150, 3, 162, 144, 4, 5, 23, 24, 6, 115, 116, 7, 117, 151, 158, 159, 152, 153, 154, 155, 156, 157, 0, 1, 160, 8, 161, 145, 146, 118, 119, 120, 121, 2, 122, 123, 124, 125, 126, 127, 128, 32, 33, 42, 25, 20, 21, 22, 129, 26, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 138 }
}

define i32 @function_16648(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_16648:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_16688, label %dec_label_pc_16674

dec_label_pc_16674:                               ; preds = %dec_label_pc_16648
  %v0_16674 = call i32 @function_11970()
  %v0_16678 = load i32, i32* %r4.global-to-local, align 4
  %v1_16678 = sub i32 0, %v0_16678
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_16680 = inttoptr i32 %v0_16674 to i32*
  store i32 %v1_16678, i32* %v2_16680, align 4
  %v0_16690.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16690

dec_label_pc_16688:                               ; preds = %dec_label_pc_16648
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %v2_16688 = icmp eq i32 %arg1, 0
  br i1 %v2_16688, label %dec_label_pc_1669c, label %dec_label_pc_16690

dec_label_pc_16690:                               ; preds = %dec_label_pc_16688, %dec_label_pc_16674
  %v0_16690 = phi i32 [ %arg1, %dec_label_pc_16688 ], [ %v0_16690.pre, %dec_label_pc_16674 ]
  br label %dec_label_pc_166a0

dec_label_pc_1669c:                               ; preds = %dec_label_pc_16688
  br label %dec_label_pc_166a0

dec_label_pc_166a0:                               ; preds = %dec_label_pc_16690, %dec_label_pc_1669c
  %v1_166a8 = phi i32 [ %v0_16690, %dec_label_pc_16690 ], [ %tmp8, %dec_label_pc_1669c ]
  ret i32 %v1_166a8

; uselistorder directives
  uselistorder i32 -1, { 236, 242, 160, 237, 238, 239, 107, 240, 108, 241, 78, 79, 80, 81, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 161, 162, 0, 163, 146, 243, 244, 164, 109, 245, 165, 1, 82, 246, 247, 150, 248, 166, 3, 2, 167, 168, 110, 312, 111, 112, 272, 113, 285, 100, 286, 273, 274, 275, 114, 235, 115, 287, 288, 4, 169, 170, 171, 289, 172, 5, 173, 6, 174, 151, 290, 10, 175, 176, 9, 11, 291, 8, 177, 178, 83, 7, 179, 84, 85, 86, 87, 180, 181, 182, 94, 254, 255, 12, 256, 116, 292, 117, 118, 293, 119, 281, 120, 283, 121, 257, 122, 271, 123, 124, 258, 125, 284, 126, 282, 127, 259, 99, 159, 13, 277, 183, 128, 294, 129, 314, 130, 260, 131, 261, 132, 262, 133, 276, 134, 316, 135, 295, 136, 313, 137, 279, 138, 278, 139, 263, 140, 141, 142, 315, 184, 185, 186, 92, 97, 14, 15, 296, 98, 93, 148, 149, 187, 19, 188, 20, 189, 264, 152, 249, 21, 190, 88, 22, 191, 192, 18, 193, 194, 195, 196, 17, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 250, 143, 251, 23, 216, 217, 102, 101, 265, 16, 218, 219, 220, 24, 221, 105, 106, 103, 104, 222, 25, 223, 145, 266, 89, 26, 27, 224, 96, 28, 29, 30, 31, 32, 144, 252, 253, 95, 35, 154, 267, 153, 268, 34, 155, 269, 33, 36, 37, 156, 270, 38, 39, 40, 41, 42, 225, 43, 90, 44, 45, 47, 226, 147, 46, 91, 48, 49, 50, 51, 52, 53, 54, 227, 55, 157, 280, 56, 57, 228, 58, 59, 60, 61, 229, 62, 230, 63, 64, 65, 231, 66, 67, 232, 68, 69, 70, 71, 72, 233, 73, 74, 75, 234, 76, 77, 158 }
  uselistorder i32 ()* @function_11970, { 59, 55, 58, 57, 56, 61, 24, 23, 5, 4, 52, 33, 17, 32, 31, 60, 16, 15, 14, 51, 11, 13, 12, 50, 49, 10, 9, 8, 22, 20, 48, 35, 47, 46, 19, 21, 45, 54, 53, 30, 28, 27, 26, 7, 2, 44, 43, 42, 29, 0, 6, 3, 18, 25, 41, 34, 40, 1, 39, 38, 37, 36 }
  uselistorder i32 1, { 211, 210, 746, 572, 343, 344, 345, 573, 172, 747, 748, 749, 574, 236, 238, 237, 239, 234, 240, 235, 241, 575, 62, 61, 63, 576, 151, 152, 149, 155, 153, 150, 154, 577, 68, 65, 64, 416, 441, 417, 966, 967, 968, 969, 429, 340, 579, 578, 371, 372, 750, 580, 420, 1044, 421, 751, 1045, 752, 753, 754, 756, 755, 404, 581, 758, 757, 900, 901, 1046, 422, 1047, 1048, 1049, 1050, 1051, 1052, 742, 1053, 1054, 1055, 1056, 1057, 1058, 743, 565, 583, 582, 375, 376, 381, 383, 382, 377, 374, 378, 380, 379, 762, 759, 760, 761, 439, 423, 35, 33, 34, 37, 36, 455, 763, 764, 765, 766, 584, 566, 38, 39, 767, 587, 586, 585, 40, 43, 41, 44, 45, 46, 42, 456, 768, 589, 588, 330, 333, 331, 328, 329, 332, 769, 590, 73, 72, 71, 770, 771, 591, 83, 82, 592, 199, 457, 745, 6, 7, 772, 773, 774, 775, 458, 776, 777, 778, 424, 595, 594, 593, 335, 334, 338, 337, 336, 339, 779, 780, 781, 597, 596, 19, 20, 459, 782, 598, 293, 783, 784, 785, 786, 787, 460, 599, 242, 244, 245, 243, 246, 461, 247, 175, 600, 137, 136, 214, 601, 201, 602, 57, 56, 603, 216, 221, 215, 220, 224, 223, 219, 222, 217, 218, 604, 231, 230, 228, 227, 229, 225, 226, 605, 156, 157, 164, 165, 161, 162, 160, 163, 158, 159, 606, 88, 89, 392, 902, 195, 198, 196, 197, 607, 70, 69, 608, 51, 609, 58, 59, 1059, 462, 1060, 463, 1061, 610, 275, 270, 276, 274, 272, 277, 271, 278, 273, 118, 464, 67, 66, 611, 341, 342, 52, 411, 788, 789, 790, 612, 903, 615, 614, 613, 84, 616, 1062, 430, 465, 618, 617, 619, 53, 994, 997, 998, 999, 620, 316, 321, 322, 320, 319, 323, 317, 318, 1000, 1001, 1002, 1003, 621, 362, 368, 361, 367, 366, 360, 370, 369, 364, 358, 363, 359, 365, 995, 996, 466, 622, 180, 179, 178, 181, 848, 467, 849, 850, 851, 852, 853, 623, 167, 168, 166, 169, 124, 123, 1004, 1005, 1006, 1007, 1008, 1009, 446, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 469, 1018, 1019, 1020, 1021, 1022, 468, 1023, 1024, 1025, 1026, 1027, 624, 348, 350, 346, 349, 355, 356, 357, 352, 354, 351, 353, 347, 55, 54, 470, 471, 854, 415, 628, 627, 626, 625, 268, 148, 425, 60, 629, 87, 86, 174, 630, 281, 631, 294, 632, 119, 633, 126, 634, 280, 279, 135, 635, 194, 193, 636, 257, 637, 285, 284, 638, 256, 639, 791, 792, 793, 794, 795, 796, 797, 1063, 144, 145, 146, 640, 904, 472, 139, 140, 798, 641, 182, 473, 642, 200, 447, 474, 643, 98, 96, 97, 644, 143, 142, 141, 645, 122, 121, 646, 138, 647, 269, 648, 171, 170, 649, 287, 286, 213, 212, 650, 233, 232, 651, 283, 282, 652, 120, 653, 177, 176, 654, 203, 202, 134, 655, 324, 173, 656, 657, 258, 399, 1028, 905, 906, 907, 908, 410, 909, 659, 658, 32, 30, 29, 27, 28, 25, 26, 31, 927, 426, 928, 427, 929, 661, 660, 326, 325, 327, 910, 911, 912, 662, 24, 23, 21, 22, 1029, 1030, 1031, 418, 431, 0, 407, 454, 1032, 16, 15, 17, 18, 814, 815, 816, 475, 913, 373, 1033, 915, 914, 916, 13, 12, 14, 1034, 945, 663, 93, 92, 91, 90, 930, 664, 315, 314, 313, 312, 432, 476, 817, 477, 818, 448, 819, 855, 479, 856, 489, 820, 490, 491, 800, 802, 480, 799, 482, 801, 483, 803, 481, 804, 805, 484, 806, 807, 487, 808, 809, 485, 810, 811, 486, 812, 813, 488, 821, 857, 858, 859, 492, 860, 861, 862, 493, 863, 744, 866, 865, 478, 864, 867, 868, 494, 869, 870, 871, 495, 872, 496, 873, 497, 874, 498, 875, 499, 876, 500, 877, 501, 878, 502, 879, 503, 880, 504, 881, 433, 888, 889, 412, 505, 677, 676, 675, 674, 673, 672, 671, 670, 669, 668, 667, 666, 665, 304, 308, 309, 310, 311, 307, 306, 305, 882, 883, 506, 884, 885, 507, 886, 887, 263, 262, 261, 267, 264, 265, 266, 260, 259, 508, 509, 679, 678, 395, 396, 393, 394, 397, 822, 823, 824, 825, 826, 827, 828, 400, 409, 829, 830, 434, 401, 831, 832, 833, 834, 402, 408, 835, 836, 435, 403, 837, 510, 838, 839, 511, 840, 512, 841, 842, 428, 845, 843, 844, 405, 406, 846, 513, 847, 687, 568, 686, 685, 684, 683, 682, 681, 567, 680, 102, 101, 108, 105, 107, 104, 103, 106, 688, 47, 1035, 690, 689, 251, 252, 250, 249, 255, 248, 254, 253, 516, 449, 890, 891, 450, 892, 514, 515, 517, 893, 894, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 703, 702, 701, 700, 699, 698, 697, 696, 695, 694, 571, 693, 692, 691, 8, 10, 11, 9, 528, 413, 529, 704, 532, 531, 530, 896, 706, 705, 94, 95, 533, 534, 535, 897, 898, 536, 440, 537, 899, 414, 538, 710, 709, 708, 707, 184, 183, 917, 923, 2, 436, 918, 539, 919, 1, 920, 442, 921, 437, 438, 922, 924, 925, 443, 926, 569, 714, 713, 570, 712, 711, 85, 1036, 451, 452, 1037, 3, 4, 5, 931, 932, 933, 419, 444, 445, 934, 935, 936, 937, 938, 541, 939, 540, 940, 542, 941, 942, 943, 718, 717, 716, 715, 297, 296, 300, 301, 303, 302, 295, 299, 298, 946, 947, 948, 543, 544, 720, 719, 289, 290, 291, 288, 292, 949, 950, 545, 951, 952, 953, 954, 546, 955, 547, 548, 956, 721, 205, 206, 208, 209, 204, 207, 957, 549, 958, 550, 959, 723, 722, 99, 100, 960, 961, 962, 551, 963, 552, 964, 965, 724, 186, 188, 190, 191, 192, 185, 189, 187, 970, 971, 972, 553, 973, 554, 555, 975, 976, 725, 113, 112, 111, 116, 117, 109, 115, 114, 110, 977, 978, 979, 980, 981, 982, 556, 983, 557, 984, 558, 559, 985, 986, 987, 988, 731, 730, 729, 728, 727, 726, 127, 130, 129, 133, 132, 128, 131, 989, 990, 991, 560, 561, 992, 993, 732, 74, 79, 80, 81, 76, 78, 75, 77, 1038, 1039, 1040, 562, 737, 736, 735, 734, 733, 385, 387, 389, 390, 391, 384, 386, 388, 563, 1041, 1042, 895, 453, 564, 738, 48, 49, 50, 1043, 739, 974, 125, 944, 147, 740, 741, 398 }
  uselistorder i32 %arg1, { 1, 3, 4, 0, 2 }
  uselistorder label %dec_label_pc_166a0, { 1, 0 }
}

define i32 @function_166ac() local_unnamed_addr {
entry:
  %v3_166b0 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_166b0)
  %v31_166b8 = load i32, i32* @r0, align 4
  ret i32 %v31_166b8

; uselistorder directives
  uselistorder i32* @r0, { 31, 24, 29, 55, 54, 168, 17, 4, 5, 197, 6, 30, 7, 56, 0, 57, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 1, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 58, 25, 52, 53, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 16, 27, 138, 139, 13, 28, 14, 224, 226, 227, 44, 45, 46, 47, 48, 49, 50, 51, 11, 18, 73, 74, 225, 75, 176, 22, 40, 41, 177, 2, 178, 179, 180, 175, 83, 34, 84, 85, 86, 35, 87, 88, 12, 188, 189, 181, 182, 183, 184, 185, 186, 187, 89, 90, 19, 91, 9, 20, 140, 141, 142, 143, 132, 15, 21, 26, 190, 144, 191, 23, 145, 146, 147, 148, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 78, 116, 33, 76, 77, 79, 117, 120, 121, 122, 123, 124, 125, 118, 119, 80, 81, 82, 192, 36, 37, 126, 127, 38, 42, 43, 128, 129, 130, 131, 10, 133, 134, 135, 136, 137, 39, 149, 150, 151, 152, 153, 154, 155, 8, 156, 157, 158, 159, 160, 161, 162, 193, 194, 3, 163, 164, 165, 166, 167, 169, 171, 172, 173, 174, 195, 196, 170, 32 }
  uselistorder void (i32)* @__pseudo_branch, { 1, 60, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 2, 3, 4, 65, 66, 67, 68, 61, 49, 62, 63, 64, 69, 70, 71, 50, 51, 52, 39, 40, 41, 53, 57, 58, 54, 55, 56, 72, 43, 44, 45, 46, 47, 48, 42, 0, 59 }
  uselistorder i32 0, { 456, 457, 466, 467, 468, 469, 470, 81, 471, 472, 473, 0, 474, 244, 44, 475, 283, 476, 477, 478, 271, 272, 458, 459, 464, 1, 82, 83, 798, 799, 800, 801, 113, 114, 802, 479, 115, 84, 937, 938, 939, 245, 480, 481, 482, 246, 940, 45, 247, 941, 942, 63, 35, 36, 483, 53, 2, 75, 76, 677, 54, 55, 56, 678, 679, 943, 944, 945, 946, 947, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 948, 949, 960, 961, 962, 963, 964, 965, 966, 967, 26, 968, 969, 970, 971, 972, 27, 973, 974, 975, 28, 976, 977, 978, 29, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1003, 1004, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 30, 1022, 1023, 1024, 1025, 1026, 31, 1027, 1028, 1029, 1030, 1031, 32, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 116, 484, 436, 485, 486, 487, 488, 489, 284, 285, 490, 491, 85, 86, 87, 492, 493, 497, 494, 495, 496, 248, 260, 498, 499, 88, 117, 502, 500, 501, 249, 503, 89, 504, 505, 3, 4, 90, 506, 450, 451, 286, 452, 507, 508, 509, 46, 47, 510, 511, 512, 118, 513, 514, 515, 516, 517, 287, 518, 519, 520, 521, 522, 523, 91, 524, 525, 526, 527, 5, 6, 119, 121, 528, 120, 529, 122, 530, 92, 531, 536, 537, 532, 533, 534, 539, 540, 541, 123, 542, 543, 544, 545, 546, 535, 538, 547, 93, 460, 461, 462, 1047, 1048, 591, 680, 845, 465, 681, 682, 273, 683, 288, 453, 289, 454, 846, 847, 848, 124, 849, 684, 685, 686, 455, 463, 94, 125, 1049, 1050, 850, 851, 290, 1054, 1055, 291, 1056, 1057, 126, 251, 1058, 1059, 292, 48, 1060, 1061, 293, 1068, 1069, 1072, 428, 250, 1073, 294, 1070, 1071, 1051, 1052, 437, 127, 234, 548, 550, 549, 128, 551, 552, 553, 295, 554, 77, 687, 70, 688, 130, 129, 689, 95, 33, 1053, 96, 297, 298, 1063, 296, 97, 435, 98, 131, 857, 858, 859, 860, 861, 132, 862, 863, 864, 865, 866, 867, 133, 852, 299, 853, 854, 300, 855, 856, 99, 592, 301, 134, 593, 594, 595, 596, 597, 100, 135, 138, 142, 139, 137, 141, 144, 136, 143, 140, 868, 869, 893, 894, 101, 870, 871, 148, 146, 147, 872, 873, 154, 153, 110, 145, 874, 875, 876, 877, 878, 879, 265, 264, 274, 302, 880, 881, 882, 49, 883, 150, 149, 151, 152, 109, 884, 885, 252, 886, 887, 78, 888, 889, 890, 891, 892, 7, 8, 598, 599, 50, 102, 9, 275, 303, 895, 896, 897, 767, 817, 600, 669, 601, 602, 818, 768, 603, 803, 1074, 1075, 57, 103, 690, 691, 692, 155, 555, 556, 156, 693, 698, 699, 700, 701, 157, 276, 158, 266, 267, 304, 694, 159, 695, 696, 104, 702, 898, 1064, 604, 605, 606, 697, 1067, 899, 1062, 731, 703, 607, 670, 608, 305, 1065, 73, 1066, 10, 900, 901, 74, 902, 903, 904, 905, 906, 160, 907, 429, 438, 430, 431, 908, 439, 111, 161, 704, 705, 706, 71, 261, 707, 708, 162, 37, 163, 306, 609, 709, 710, 711, 910, 909, 911, 912, 913, 914, 34, 164, 915, 916, 917, 165, 64, 65, 307, 281, 282, 567, 167, 166, 168, 712, 169, 713, 714, 170, 918, 919, 308, 171, 715, 172, 173, 751, 174, 732, 610, 177, 611, 612, 309, 613, 569, 570, 175, 176, 571, 573, 557, 66, 38, 237, 238, 558, 559, 440, 560, 572, 310, 568, 441, 561, 442, 562, 443, 563, 444, 564, 445, 565, 446, 566, 574, 575, 311, 576, 614, 427, 615, 312, 616, 617, 254, 253, 618, 619, 620, 621, 179, 178, 622, 623, 624, 447, 235, 625, 60, 61, 236, 626, 58, 59, 313, 628, 629, 432, 630, 631, 632, 633, 634, 314, 635, 636, 637, 262, 112, 434, 638, 639, 640, 433, 641, 642, 315, 643, 316, 644, 647, 648, 649, 180, 645, 181, 646, 12, 11, 182, 627, 577, 578, 579, 68, 39, 580, 67, 40, 581, 582, 317, 583, 318, 584, 319, 585, 586, 588, 183, 184, 587, 263, 41, 62, 268, 589, 185, 13, 590, 920, 921, 650, 320, 651, 653, 186, 654, 655, 656, 657, 658, 659, 660, 188, 187, 661, 321, 662, 322, 663, 323, 652, 666, 269, 667, 324, 664, 338, 339, 325, 668, 326, 672, 448, 191, 190, 189, 256, 327, 671, 255, 673, 674, 675, 42, 676, 192, 328, 72, 716, 717, 718, 719, 259, 720, 721, 722, 258, 723, 724, 725, 726, 193, 727, 729, 728, 105, 106, 194, 257, 196, 195, 730, 197, 198, 51, 199, 733, 734, 79, 80, 52, 735, 200, 201, 239, 736, 203, 737, 204, 202, 329, 738, 739, 741, 740, 742, 205, 743, 744, 277, 745, 746, 747, 206, 207, 748, 208, 750, 209, 752, 210, 753, 754, 69, 755, 756, 211, 757, 758, 759, 212, 761, 213, 240, 762, 760, 763, 764, 765, 214, 766, 769, 216, 771, 772, 215, 770, 773, 107, 330, 331, 774, 775, 332, 333, 776, 777, 778, 779, 217, 780, 781, 218, 219, 782, 783, 108, 784, 785, 14, 15, 16, 17, 786, 787, 220, 278, 788, 789, 790, 791, 792, 793, 794, 795, 796, 334, 797, 804, 805, 221, 807, 808, 222, 241, 809, 806, 810, 811, 812, 18, 19, 20, 813, 223, 816, 819, 820, 43, 821, 224, 822, 823, 225, 242, 825, 824, 335, 826, 828, 829, 830, 336, 831, 21, 22, 23, 827, 24, 25, 832, 226, 833, 834, 227, 837, 838, 839, 243, 840, 835, 836, 842, 841, 843, 228, 844, 922, 923, 229, 925, 926, 927, 230, 337, 929, 928, 924, 931, 932, 930, 933, 936, 270, 665, 934, 231, 935, 814, 232, 815, 233, 749, 279, 449, 280, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090 }
  uselistorder i32* @r4, { 36, 49, 50, 51, 7, 52, 53, 54, 8, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 42, 43, 44, 65, 66, 67, 68, 69, 70, 71, 72, 73, 671, 672, 74, 75, 9, 1, 76, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 10, 77, 78, 79, 80, 81, 82, 83, 84, 85, 11, 86, 87, 90, 91, 92, 93, 37, 94, 95, 96, 97, 98, 99, 88, 89, 38, 39, 100, 101, 12, 102, 13, 103, 14, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 15, 124, 125, 126, 16, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 45, 46, 47, 48, 40, 41, 581, 582, 334, 335, 689, 690, 691, 583, 584, 694, 699, 700, 701, 702, 703, 704, 705, 692, 139, 140, 141, 336, 337, 338, 693, 695, 698, 142, 143, 144, 145, 585, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 17, 604, 605, 606, 607, 586, 587, 588, 589, 590, 591, 176, 177, 178, 179, 180, 181, 182, 183, 184, 18, 185, 186, 187, 188, 189, 190, 191, 192, 193, 608, 630, 631, 632, 633, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 34, 622, 623, 0, 624, 625, 626, 627, 628, 629, 194, 195, 196, 696, 697, 634, 635, 530, 531, 339, 340, 341, 342, 343, 344, 345, 146, 147, 148, 346, 347, 348, 6, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 2, 359, 360, 361, 636, 637, 19, 638, 639, 640, 197, 198, 199, 411, 412, 377, 378, 158, 159, 200, 201, 202, 203, 149, 150, 151, 152, 153, 154, 155, 156, 157, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 264, 265, 266, 3, 267, 258, 259, 260, 261, 262, 263, 218, 219, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 641, 642, 643, 644, 645, 268, 269, 270, 271, 272, 273, 274, 275, 276, 308, 309, 310, 311, 312, 313, 314, 315, 316, 277, 278, 279, 280, 281, 282, 317, 318, 319, 320, 321, 322, 323, 324, 325, 33, 327, 326, 32, 328, 329, 330, 331, 332, 4, 333, 362, 20, 5, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 379, 380, 381, 382, 383, 390, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 21, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 22, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 23, 464, 24, 465, 25, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 26, 492, 27, 493, 28, 494, 29, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 30, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 646, 647, 648, 649, 31, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 668, 669, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 665, 666, 667, 511, 35, 670 }
}

declare i32 @unknown_7ea6() local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8* @__decompiler_undefined_function_1() local_unnamed_addr

declare i16 @__decompiler_undefined_function_2() local_unnamed_addr

declare i8 @__decompiler_undefined_function_3() local_unnamed_addr

declare i16* @__decompiler_undefined_function_4() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #0

; Function Attrs: nounwind readnone
declare i16 @llvm.bswap.i16(i16) #0

attributes #0 = { nounwind readnone }
