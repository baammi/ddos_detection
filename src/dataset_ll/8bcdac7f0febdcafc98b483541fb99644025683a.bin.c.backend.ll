source_filename = "test"
target datalayout = "E-p:32:32:32-f80:32:32"

%0 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }

@r1 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r9 = internal unnamed_addr global i32 0
@r11 = internal unnamed_addr global i32 0
@r15 = internal unnamed_addr global i32 0
@r20 = internal unnamed_addr global i32 0
@r21 = internal unnamed_addr global i32 0
@r22 = internal unnamed_addr global i32 0
@r23 = internal unnamed_addr global i32 0
@r24 = internal unnamed_addr global i32 0
@r25 = internal unnamed_addr global i32 0
@r26 = internal unnamed_addr global i32 0
@r27 = internal unnamed_addr global i32 0
@r28 = internal unnamed_addr global i32 0
@r29 = internal unnamed_addr global i32 0
@r30 = internal unnamed_addr global i32 0
@r31 = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@global_var_100000a4.1 = constant i32 1208007117
@global_var_1001c0e0.3 = global i32 0
@global_var_1001c0ec.4 = local_unnamed_addr global i32* @global_var_1001c0e0.3
@global_var_1001c2c8.6 = global i32 0
@global_var_10000314.7 = constant i32 1207996049
@global_var_10000320.8 = constant [3 x i8] c"8`\00"
@global_var_1001c254.10 = local_unnamed_addr global i32 0
@global_var_10000588.11 = constant [3 x i8] c";{\00"
@global_var_100005b4.12 = constant i32 939524096
@global_var_1001c258.14 = local_unnamed_addr global i32 0
@global_var_10000f54.15 = constant [3 x i8] c"8~\00"
@global_var_10000f64.16 = constant [3 x i8] c"8~\00"
@global_var_10000f74.17 = constant [3 x i8] c"8~\00"
@global_var_100016f0.18 = constant i32 939524096
@global_var_10001c14.19 = constant [3 x i8] c"8`\00"
@global_var_1000225c.20 = constant [3 x i8] c"8`\00"
@global_var_10002f10.21 = constant i32 939524104
@global_var_10002f40.22 = constant i32 939524096
@global_var_10003240.23 = constant i32 939524096
@global_var_10003f14.24 = constant [3 x i8] c"8`\00"
@global_var_10004004.25 = constant [3 x i8] c"9!\00"
@global_var_1001c264.26 = local_unnamed_addr global i32 0
@global_var_100045c8.27 = constant [3 x i8] c"8`\00"
@global_var_100045d0.28 = constant [3 x i8] c"8`\00"
@global_var_100045d8.29 = constant [3 x i8] c"8`\00"
@global_var_100046d8.30 = constant [3 x i8] c"9@\00"
@global_var_1000bafc.31 = constant i32 788529152
@global_var_10004a20.32 = constant [3 x i8] c"8`\00"
@global_var_10004a28.33 = constant [3 x i8] c"8`\00"
@global_var_10004a30.34 = constant [3 x i8] c"8`\00"
@global_var_10004a38.35 = constant [3 x i8] c"8`\00"
@global_var_10004aa4.36 = constant [3 x i8] c"8`\00"
@global_var_10004aac.37 = constant [3 x i8] c"8`\00"
@global_var_10004ab4.38 = constant [3 x i8] c"8`\00"
@global_var_10004bf8.39 = constant i32 939572197
@global_var_10004c3c.40 = constant i32 939526087
@global_var_10004c78.41 = constant [3 x i8] c"8`\00"
@global_var_10004cac.42 = constant [3 x i8] c"8`\00"
@global_var_10004cb4.43 = constant i32 939524118
@global_var_10004cf0.44 = constant [3 x i8] c"8`\00"
@global_var_10004cf8.45 = constant i32 939524119
@global_var_10004d34.46 = constant [3 x i8] c"8`\00"
@global_var_1001c25c.47 = local_unnamed_addr global i32 0
@global_var_1001c260.48 = local_unnamed_addr global i32 0
@global_var_10004d68.49 = constant [3 x i8] c"8`\00"
@global_var_10004de4.50 = constant [3 x i8] c"8`\00"
@global_var_10004dec.51 = constant [3 x i8] c"8`\00"
@global_var_10004e50.52 = constant i32 1207977929
@global_var_10004eec.53 = constant [3 x i8] c"8`\00"
@global_var_10004f7c.54 = constant [3 x i8] c"8`\00"
@global_var_10004f84.55 = constant [3 x i8] c"8`\00"
@global_var_10004ff4.56 = constant [3 x i8] c"8`\00"
@global_var_10004ffc.57 = constant i32 1207976289
@global_var_100050ac.58 = constant [3 x i8] c"8`\00"
@global_var_100050b4.59 = constant [3 x i8] c"8`\00"
@global_var_100050bc.60 = constant [3 x i8] c"8`\00"
@global_var_100050c4.61 = constant [3 x i8] c"8`\00"
@global_var_100050cc.62 = constant [3 x i8] c"8`\00"
@global_var_100052f0.63 = constant [3 x i8] c"8`\00"
@global_var_100052f8.64 = constant [3 x i8] c"8`\00"
@global_var_10005300.65 = constant [3 x i8] c"8`\00"
@global_var_10005308.66 = constant [3 x i8] c"8`\00"
@global_var_10005310.67 = constant [3 x i8] c"8`\00"
@global_var_10005348.68 = constant [3 x i8] c"8`\00"
@global_var_100053ac.69 = constant [3 x i8] c"8`\00"
@global_var_100053b4.70 = constant [3 x i8] c"8`\00"
@global_var_100053bc.71 = constant [3 x i8] c"8`\00"
@global_var_100053c4.72 = constant [3 x i8] c"8`\00"
@global_var_100053cc.73 = constant [3 x i8] c"8`\00"
@global_var_1001c238.74 = local_unnamed_addr global i32 268471312
@global_var_1001c230.75 = local_unnamed_addr global i32 -1
@global_var_10005584.77 = constant [3 x i8] c"8`\00"
@global_var_10005594.78 = constant [3 x i8] c"8`\00"
@global_var_1000560c.79 = constant i32 1207962709
@global_var_1001c330.80 = global i32 0
@global_var_1001c334.81 = local_unnamed_addr global i32 0
@global_var_1000565c.82 = constant [3 x i8] c"8`\00"
@global_var_10005664.83 = constant [3 x i8] c"8`\00"
@global_var_1001c332.84 = local_unnamed_addr global i32 0
@global_var_1001c268.85 = local_unnamed_addr global i32 0
@global_var_100056ec.86 = constant [3 x i8] c"8`\00"
@global_var_10005748.87 = constant [3 x i8] c"8`\00"
@global_var_10005780.88 = constant [3 x i8] c"8`\00"
@global_var_10005788.89 = constant [3 x i8] c"8`\00"
@global_var_10005844.90 = constant i32 1207972813
@global_var_10005880.91 = constant i32 1207961357
@global_var_1000589c.92 = constant [3 x i8] c";a\00"
@global_var_10005900.93 = constant i32 1207961149
@global_var_10005954.94 = constant [3 x i8] c"8`\00"
@global_var_1000bb00.95 = constant i32 167772160
@global_var_1000598c.96 = constant [3 x i8] c"8`\00"
@global_var_100059a0.97 = constant i32 1207973749
@global_var_10005a40.98 = constant [3 x i8] c":`\00"
@global_var_10005a50.99 = constant [3 x i8] c"8`\00"
@global_var_10005a58.100 = constant [3 x i8] c"8`\00"
@global_var_1001c234.101 = local_unnamed_addr global i32 -1
@global_var_10005c18.103 = constant i32 939589631
@global_var_10005cd0.104 = constant i32 939589631
@global_var_10005da4.105 = constant i32 939589631
@global_var_10005db0.106 = constant i32 1006685388
@global_var_10005de8.107 = constant i32 1207962005
@global_var_10005df0.108 = constant [3 x i8] c"|q\00"
@global_var_1000bb04.109 = constant i32 1
@global_var_10005e98.110 = constant i32 939589631
@global_var_1001c2ec.111 = local_unnamed_addr global i32 0
@global_var_1001c2e0.112 = local_unnamed_addr global i32 0
@global_var_1001c2e8.113 = local_unnamed_addr global i32 0
@global_var_1001c2e4.114 = local_unnamed_addr global i32 0
@global_var_100062cc.115 = constant [3 x i8] c"9A\00"
@global_var_10006350.116 = constant i32 939524096
@global_var_10006384.117 = constant i32 1006665728
@global_var_100063b0.118 = constant i32 939524098
@global_var_100063f8.119 = constant [3 x i8] c"8`\00"
@global_var_1000646c.120 = constant i32 939524128
@global_var_10006518.121 = constant [3 x i8] c"8c\00"
@global_var_1001c288.122 = local_unnamed_addr global i32 0
@global_var_1001c27c.123 = local_unnamed_addr global i32 0
@global_var_1001c270.124 = local_unnamed_addr global i32 0
@global_var_1001c274.125 = local_unnamed_addr global i32 0
@global_var_10006b28.127 = constant [3 x i8] c"8`\00"
@global_var_1001c280.128 = local_unnamed_addr global i32 0
@global_var_1001c284.129 = local_unnamed_addr global i32 0
@global_var_1001c2f0.130 = global i32 0
@global_var_1001c304.131 = global i32 0
@global_var_1000bb94.132 = constant i32 0
@global_var_1001c2f2.133 = local_unnamed_addr global i32 0
@global_var_1001c310.134 = local_unnamed_addr global i32 0
@global_var_1001c2f8.135 = local_unnamed_addr global i32 0
@global_var_1001c2f9.136 = local_unnamed_addr global i32 0
@global_var_1001c2f4.137 = local_unnamed_addr global i32 0
@global_var_1000bb90.138 = constant [5 x i8] c"&;; \00"
@global_var_1000bb20.140 = constant [8 x i8] c"0125!8 \00"
@global_var_1001c312.141 = local_unnamed_addr global i32 0
@global_var_1000bb0c.142 = constant [5 x i8] c"5:?;\00"
@global_var_1000bb14.143 = constant [9 x i8] c"<!: acam\00"
@global_var_1000bb34.144 = constant [6 x i8] c"509=:\00"
@global_var_1000bb28.145 = constant [9 x i8] c"$5''#;&0\00"
@global_var_1000bb3c.146 = constant [6 x i8] c"\22=.,\22\00"
@global_var_1000bb44.147 = constant [8 x i8] c"'!$$;& \00"
@global_var_1000bb4c.148 = constant i32 1663122969
@global_var_1000bb5c.149 = constant [6 x i8] c"efg`a\00"
@global_var_1000bb64.150 = constant [5 x i8] c"!'1&\00"
@global_var_1000bb6c.151 = constant i32 455883832
@global_var_1000bb78.152 = constant i32 124138003
@global_var_1000bb84.153 = constant [5 x i8] c"efg`\00"
@global_var_1001c2fc.154 = local_unnamed_addr global i32 0
@global_var_1001c300.155 = local_unnamed_addr global i32 0
@global_var_1001c2fa.156 = local_unnamed_addr global i32 0
@global_var_1001c314.157 = local_unnamed_addr global i32 0
@global_var_1001c308.158 = local_unnamed_addr global i32 0
@global_var_100073fc.160 = constant [3 x i8] c"8`\00"
@global_var_1000bb98.161 = constant i32 -18200
@global_var_1001c340.183 = global i32 0
@global_var_1001c23c.184 = local_unnamed_addr global i32 -555811921
@global_var_1000bbd4.185 = constant i32 1441136640
@global_var_100083b4.186 = constant [3 x i8] c"8`\00"
@global_var_1001c348.187 = local_unnamed_addr global i32 0
@global_var_1001c34c.188 = local_unnamed_addr global i32 0
@global_var_1000bbd8.189 = constant [13 x i8] c"&;; 91z78!6T\00"
@global_var_100083d8.190 = constant [3 x i8] c"8`\00"
@global_var_1001c350.191 = local_unnamed_addr global i32 0
@global_var_1001c354.192 = local_unnamed_addr global i32 0
@global_var_1000bbe8.193 = constant [13 x i8] c"'1:$5=z'= 1T\00"
@global_var_100083fc.194 = constant [3 x i8] c"8`\00"
@global_var_1001c358.195 = local_unnamed_addr global i32 0
@global_var_1001c35c.196 = local_unnamed_addr global i32 0
@global_var_1000bbf8.197 = constant i32 -294715392
@global_var_10008420.198 = constant [3 x i8] c"8`\00"
@global_var_1001c360.199 = local_unnamed_addr global i32 0
@global_var_1001c364.200 = local_unnamed_addr global i32 0
@global_var_1000bbfc.201 = constant [37 x i8] c"&;; t'1:$5=t>!' t=:217 10t-;!&t'<= T\00"
@global_var_10008444.202 = constant i32 939524132
@global_var_1001c36c.203 = local_unnamed_addr global i32 0
@global_var_1001c368.204 = local_unnamed_addr global i32 0
@global_var_1000bc24.205 = constant [7 x i8] c"'<188T\00"
@global_var_1000846c.206 = constant [3 x i8] c"8`\00"
@global_var_1001c370.207 = local_unnamed_addr global i32 0
@global_var_1001c374.208 = local_unnamed_addr global i32 0
@global_var_1000bc2c.209 = constant [8 x i8] c"1:5681T\00"
@global_var_10008494.210 = constant [3 x i8] c"8`\00"
@global_var_1001c378.211 = local_unnamed_addr global i32 0
@global_var_1001c37c.212 = local_unnamed_addr global i32 0
@global_var_1000bc34.213 = constant [8 x i8] c"'-' 19T\00"
@global_var_100084b8.214 = constant [3 x i8] c"8`\00"
@global_var_1001c380.215 = local_unnamed_addr global i32 0
@global_var_1001c384.216 = local_unnamed_addr global i32 0
@global_var_1000bc3c.217 = constant [4 x i8] c"'<T\00"
@global_var_100084dc.218 = constant i32 939524099
@global_var_1001c38c.219 = local_unnamed_addr global i32 0
@global_var_1001c388.220 = local_unnamed_addr global i32 0
@global_var_1000bc40.221 = constant i32 2067152186
@global_var_10008504.222 = constant [3 x i8] c"8`\00"
@global_var_1001c390.223 = local_unnamed_addr global i32 0
@global_var_1001c394.224 = local_unnamed_addr global i32 0
@global_var_1000bc54.225 = constant i32 421337862
@global_var_10008528.226 = constant i32 939524120
@global_var_1001c39c.227 = local_unnamed_addr global i32 0
@global_var_1001c398.228 = local_unnamed_addr global i32 0
@global_var_1000bc70.229 = constant [10 x i8] c":7;&&17 T\00"
@global_var_10008550.230 = constant i32 939524105
@global_var_1001c3a4.231 = local_unnamed_addr global i32 0
@global_var_1001c3a0.232 = local_unnamed_addr global i32 0
@global_var_1000bc7c.233 = constant [17 x i8] c"{6=:{6!'-6;,t$'T\00"
@global_var_10008578.234 = constant [3 x i8] c"8`\00"
@global_var_1001c3a8.235 = local_unnamed_addr global i32 0
@global_var_1001c3ac.236 = local_unnamed_addr global i32 0
@global_var_1000bc90.237 = constant [23 x i8] c"{6=:{6!'-6;,t?=88tymtT\00"
@global_var_1000859c.238 = constant i32 939524118
@global_var_1001c3b4.239 = local_unnamed_addr global i32 0
@global_var_1001c3b0.240 = local_unnamed_addr global i32 0
@global_var_1000bca8.241 = constant [8 x i8] c"{$&;7{T\00"
@global_var_100085c4.242 = constant [3 x i8] c"8`\00"
@global_var_1001c3b8.243 = local_unnamed_addr global i32 0
@global_var_1001c3bc.244 = local_unnamed_addr global i32 0
@global_var_1000bcb0.245 = constant [6 x i8] c"{1,1T\00"
@global_var_100085e8.246 = constant [3 x i8] c"8`\00"
@global_var_1001c3c0.247 = local_unnamed_addr global i32 0
@global_var_1001c3c4.248 = local_unnamed_addr global i32 0
@global_var_1000bcb8.249 = constant [5 x i8] c"{20T\00"
@global_var_1000860c.250 = constant i32 939524100
@global_var_1001c3cc.251 = local_unnamed_addr global i32 0
@global_var_1001c3c8.252 = local_unnamed_addr global i32 0
@global_var_1000bcc0.253 = constant [7 x i8] c"{95$'T\00"
@global_var_10008634.254 = constant [3 x i8] c"8`\00"
@global_var_1001c3d0.255 = local_unnamed_addr global i32 0
@global_var_1001c3d4.256 = local_unnamed_addr global i32 0
@global_var_1000bcc8.257 = constant [15 x i8] c"{$&;7{:1 { 7$T\00"
@global_var_10008658.258 = constant [3 x i8] c"8`\00"
@global_var_1001c3d8.259 = local_unnamed_addr global i32 0
@global_var_1001c3dc.260 = local_unnamed_addr global i32 0
@global_var_1000bcd8.261 = constant [9 x i8] c"{' 5 !'T\00"
@global_var_1000867c.262 = constant [3 x i8] c"8`\00"
@global_var_1001c450.263 = local_unnamed_addr global i32 0
@global_var_1001c454.264 = local_unnamed_addr global i32 0
@global_var_1000bce4.265 = constant [8 x i8] c"z5:=91T\00"
@global_var_100086a0.266 = constant [3 x i8] c"8`\00"
@global_var_1001c458.267 = local_unnamed_addr global i32 0
@global_var_1001c45c.268 = local_unnamed_addr global i32 0
@global_var_1000bcec.269 = constant [17 x i8] c"{$&;7{:1 {&;! 1T\00"
@global_var_100086c4.270 = constant [3 x i8] c"8`\00"
@global_var_1001c3e0.271 = local_unnamed_addr global i32 0
@global_var_1001c3e4.272 = local_unnamed_addr global i32 0
@global_var_1000bd00.273 = constant [24 x i8] c"3e567`09;ga<:$f8=1d?>2T\00"
@global_var_100086ec.274 = constant [3 x i8] c"8`\00"
@global_var_1001c3e8.275 = local_unnamed_addr global i32 0
@global_var_1001c3ec.276 = local_unnamed_addr global i32 0
@global_var_1000bd18.277 = constant [9 x i8] c"5''#;&0T\00"
@global_var_1000bd24.278 = constant [15 x i8] c"{01\22{#5 7<0;3T\00"
@global_var_10008718.279 = constant [3 x i8] c"8`\00"
@global_var_1001c3f0.280 = local_unnamed_addr global i32 0
@global_var_1001c3f4.281 = local_unnamed_addr global i32 0
@global_var_1000bd34.282 = constant [20 x i8] c"{01\22{9='7{#5 7<0;3T\00"
@global_var_1000873c.283 = constant [3 x i8] c"8`\00"
@global_var_1001c3f8.284 = local_unnamed_addr global i32 0
@global_var_1001c3fc.285 = local_unnamed_addr global i32 0
@global_var_1000875c.286 = constant [3 x i8] c"8`\00"
@global_var_1001c400.287 = local_unnamed_addr global i32 0
@global_var_1001c404.288 = local_unnamed_addr global i32 0
@global_var_1000bd48.289 = constant [11 x i8] c"0\22&<18$1&T\00"
@global_var_10008780.290 = constant i32 939524106
@global_var_1001c464.291 = local_unnamed_addr global i32 0
@global_var_1001c460.292 = local_unnamed_addr global i32 0
@global_var_1000bdac.293 = constant i32 473889
@global_var_100087a8.294 = constant i32 939524117
@global_var_1001c40c.295 = local_unnamed_addr global i32 0
@global_var_1001c408.296 = local_unnamed_addr global i32 0
@global_var_1000bd54.297 = constant [18 x i8] c"{1 7{&1';8\22z7;:2T\00"
@global_var_100087d0.298 = constant i32 939524113
@global_var_1001c414.299 = local_unnamed_addr global i32 0
@global_var_1001c410.300 = local_unnamed_addr global i32 0
@global_var_1000bd68.301 = constant [13 x i8] c":591'1&\221&tT\00"
@global_var_100087f8.302 = constant [3 x i8] c"8`\00"
@global_var_1001c418.303 = local_unnamed_addr global i32 0
@global_var_1001c41c.304 = local_unnamed_addr global i32 0
@global_var_10008818.305 = constant [3 x i8] c"8`\00"
@global_var_1001c420.306 = local_unnamed_addr global i32 0
@global_var_1001c424.307 = local_unnamed_addr global i32 0
@global_var_10008838.308 = constant [3 x i8] c"8`\00"
@global_var_1001c428.309 = local_unnamed_addr global i32 0
@global_var_1001c42c.310 = local_unnamed_addr global i32 0
@global_var_1000bd78.311 = constant [9 x i8] c"$662*7!E\00"
@global_var_1000885c.312 = constant [3 x i8] c"8`\00"
@global_var_1001c430.313 = local_unnamed_addr global i32 0
@global_var_1001c434.314 = local_unnamed_addr global i32 0
@global_var_1000bd84.315 = constant [6 x i8] c";3=:T\00"
@global_var_10008880.316 = constant [3 x i8] c"8`\00"
@global_var_1001c438.317 = local_unnamed_addr global i32 0
@global_var_1001c43c.318 = local_unnamed_addr global i32 0
@global_var_1000bd8c.319 = constant [7 x i8] c"1: 1&T\00"
@global_var_100088a4.320 = constant [3 x i8] c"8`\00"
@global_var_1001c440.321 = local_unnamed_addr global i32 0
@global_var_1001c444.322 = local_unnamed_addr global i32 0
@global_var_1000bd94.323 = constant [24 x i8] c"e365`70;9ag:<$ef1=d?2>T\00"
@global_var_1001c44c.324 = local_unnamed_addr global i32 0
@global_var_1001c448.325 = local_unnamed_addr global i32 0
@global_var_10008c34.326 = constant i32 939524096
@global_var_10008f7c.327 = constant i32 1207959564
@global_var_10009458.328 = constant i32 939524118
@global_var_1000ab7c.329 = constant [3 x i8] c"8`\00"
@global_var_100095b0.330 = constant i32 939524105
@global_var_100095cc.331 = constant i32 939589631
@global_var_100096f4.332 = constant i32 1207959797
@global_var_100096f8.333 = constant i32 939524108
@global_var_1001c2ac.334 = global i32 0
@global_var_10009e70.335 = constant i32 939524118
@global_var_10009ef8.336 = constant i32 939524118
@global_var_1001c468.337 = global i32 0
@global_var_1001c318.338 = global i32 0
@global_var_1001c240 = external global i32
@global_var_1000bed0.340 = constant i32 33554944
@global_var_1001c29c.341 = local_unnamed_addr global i32 0
@global_var_1001c4e8.342 = global i32 0
@global_var_1000a154.343 = constant i32 939524108
@global_var_1000a1a8.344 = constant i32 939524108
@global_var_1000a25c.345 = constant [3 x i8] c"8`\00"
@global_var_1000a308.346 = constant [3 x i8] c"8`\00"
@global_var_1000a630.347 = constant i32 1207959640
@global_var_1000a66c.348 = constant i32 1207959580
@global_var_1001c24c.349 = local_unnamed_addr global i32* @global_var_1000bed0.340
@global_var_1000a860.350 = constant i32 939524130
@global_var_1001c200.351 = global i32 0
@global_var_1001c290.352 = local_unnamed_addr global i32 0
@global_var_1000a8f4.353 = constant i32 1207960053
@global_var_1000a8f8.354 = constant [3 x i8] c"= \00"
@global_var_1001c0d4.355 = global i32 -1
@global_var_1001c2a0.356 = local_unnamed_addr global i32 0
@global_var_1001c2a4.357 = local_unnamed_addr global i32 0
@global_var_1000bdc4.358 = constant [10 x i8] c"/dev/null\00"
@global_var_1001c2a8.359 = local_unnamed_addr global i32 0
@global_var_1001c294.361 = local_unnamed_addr global i32 0
@global_var_1001c298.362 = local_unnamed_addr global i32 0
@global_var_1000ae94.363 = constant i32 939524096
@global_var_1000b120.365 = constant i32 939524118
@global_var_1000b31c.366 = constant i32 939589631
@global_var_1001c2c0.367 = local_unnamed_addr global i32 0
@global_var_1001c218.368 = global i32 0
@global_var_1000b840.369 = constant i32 939524129
@global_var_1001c2b4.370 = local_unnamed_addr global i32 0
@global_var_1000b8b4.371 = constant [3 x i8] c"8`\00"
@global_var_1000b8ec.372 = constant i32 939524129
@global_var_1001c2b8.373 = local_unnamed_addr global i32 0
@global_var_1001c2bc.374 = local_unnamed_addr global i32 0
@global_var_1001c0d8.375 = global i32 0
@global_var_1001c2c4.2 = local_unnamed_addr global i8 0
@global_var_1001c250.9 = local_unnamed_addr global i8 0
@global_var_1001c251.13 = global i8 0
@global_var_1001c0f0.76 = local_unnamed_addr global i8 1
@global_var_1001c26c.102 = local_unnamed_addr global i16 0
@global_var_1001c278.126 = global i16 0
@global_var_1001c306.139 = local_unnamed_addr global i16 0

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_10000094() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_100000a4.1 to i32), i32* @lr, align 4
  %v0_100000a0 = call i32 @function_10000168()
  store i32 %v0_100000a0, i32* @r3, align 4
  store i32 268435624, i32* @lr, align 4
  %v1_100000a4 = call i32 @function_1000ba70(i32 %v0_100000a0)
  ret i32 %v1_100000a4
}

define i32 @function_100000b8() local_unnamed_addr {
entry:
  %v3_100000cc = load i8, i8* @global_var_1001c2c4.2, align 1
  %v3_100000d4 = icmp eq i8 %v3_100000cc, 0
  br i1 %v3_100000d4, label %dec_label_pc_100000dc, label %dec_label_pc_10000134

dec_label_pc_100000dc:                            ; preds = %entry
  %v3_100000e0 = load i32, i32* bitcast (i32** @global_var_1001c0ec.4 to i32*), align 4
  %v3_100000e8 = icmp eq i32 %v3_100000e0, 0
  br i1 %v3_100000e8, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_100000f0:                            ; preds = %dec_label_pc_100000dc, %dec_label_pc_100000f0
  %v0_100000f4 = phi i32 [ %v3_10000100, %dec_label_pc_100000f0 ], [ %v3_100000e0, %dec_label_pc_100000dc ]
  %v1_100000f0 = add i32 %v0_100000f4, 4
  store i32 %v1_100000f0, i32* bitcast (i32** @global_var_1001c0ec.4 to i32*), align 4
  call void @__pseudo_call(i32 %v0_100000f4)
  %v3_10000100 = load i32, i32* bitcast (i32** @global_var_1001c0ec.4 to i32*), align 4
  %v3_10000108 = icmp eq i32 %v3_10000100, 0
  br i1 %v3_10000108, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_10000110:                            ; preds = %dec_label_pc_100000f0, %dec_label_pc_100000dc
  store i8 1, i8* @global_var_1001c2c4.2, align 1
  br label %dec_label_pc_10000134

dec_label_pc_10000134:                            ; preds = %entry, %dec_label_pc_10000110
  ret i32 undef

; uselistorder directives
  uselistorder i32 %v3_10000100, { 1, 0 }
  uselistorder i8* @global_var_1001c2c4.2, { 1, 0 }
  uselistorder label %dec_label_pc_10000134, { 1, 0 }
  uselistorder label %dec_label_pc_100000f0, { 1, 0 }
}

define i32 @function_1000014c() local_unnamed_addr {
dec_label_pc_1000014c:
  %v0_10000164 = load i32, i32* @r3, align 4
  ret i32 %v0_10000164
}

define i32 @function_10000168() local_unnamed_addr {
dec_label_pc_10000168:
  %v3_100001a0 = load i32, i32* inttoptr (i32 268550372 to i32*), align 4
  %v3_100001ac = icmp eq i32 %v3_100001a0, 0
  br i1 %v3_100001ac, label %dec_label_pc_100001c4, label %dec_label_pc_100001b4

dec_label_pc_100001b4:                            ; preds = %dec_label_pc_10000168
  br label %dec_label_pc_100001c4

dec_label_pc_100001c4:                            ; preds = %dec_label_pc_100001b4, %dec_label_pc_10000168
  ret i32 268550372
}

define i32 @function_100001d4() local_unnamed_addr {
dec_label_pc_100001d4:
  %v0_100001ec = load i32, i32* @r3, align 4
  ret i32 %v0_100001ec
}

define i32 @entry_point(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_0, align 4
  %v0_100001f4 = load i32, i32* @r1, align 4
  %v1_100001f4 = call i32 @__asm_rlwinm(i32 %v0_100001f4, i32 0, i32 0, i32 27)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10000204 = add i32 %v1_100001f4, -16
  %v3_10000204 = inttoptr i32 %v2_10000204 to i32*
  store i32 %v1_100001f4, i32* %v3_10000204, align 4
  %v0_10000208 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10000208, i32* %v3_10000204, align 4
  %v2_10000210 = load i32, i32* %stack_var_0, align 4
  %v7_10000234 = call i32 @function_1000ac68(i32 268457872, i32 %v2_10000210, i32* nonnull %stack_var_4, i32 268435604, i32 268483292, i32 %arg1)
  ret i32 %v7_10000234

; uselistorder directives
  uselistorder i32 %v1_100001f4, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
}

define i32 @function_10000238(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10000238:
  %ctr.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %ctr.global-to-local, align 4
  %v0_10000244 = load i32, i32* @lr, align 4
  %tmp4 = icmp slt i32 %arg1, 1
  call void @__pseudo_cond_branch(i1 %tmp4, i32 %v0_10000244)
  %v1_10000248 = add i32 %tmp, 4
  %v2_10000248 = inttoptr i32 %v1_10000248 to i8*
  %v3_10000248 = load i8, i8* %v2_10000248, align 1
  %v4_10000248 = zext i8 %v3_10000248 to i32
  %v4_10000250 = icmp eq i32 %v4_10000248, %arg3
  br i1 %v4_10000250, label %dec_label_pc_10000278, label %dec_label_pc_1000026c.preheader

dec_label_pc_1000026c.preheader:                  ; preds = %dec_label_pc_10000238
  %v0_10000270.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000026c

dec_label_pc_1000025c:                            ; preds = %dec_label_pc_1000026c
  %v1_1000025c = add i32 %v0_1000025c.in, 12
  %v2_1000025c = inttoptr i32 %v1_1000025c to i8*
  %v3_1000025c = load i8, i8* %v2_1000025c, align 1
  %v4_1000025c = zext i8 %v3_1000025c to i32
  %v4_10000264 = icmp eq i32 %v4_1000025c, %arg3
  br i1 %v4_10000264, label %dec_label_pc_10000278, label %dec_label_pc_1000026c

dec_label_pc_1000026c:                            ; preds = %dec_label_pc_1000026c.preheader, %dec_label_pc_1000025c
  %v0_10000270 = phi i32 [ %v0_10000270.pre, %dec_label_pc_1000026c.preheader ], [ %v1_10000270, %dec_label_pc_1000025c ]
  %v0_1000025c.in = phi i32 [ %tmp, %dec_label_pc_1000026c.preheader ], [ %v0_1000025c, %dec_label_pc_1000025c ]
  %v0_1000025c = add i32 %v0_1000025c.in, 8
  %v1_10000270 = add i32 %v0_10000270, -1
  store i32 %v1_10000270, i32* %ctr.global-to-local, align 4
  %v2_10000270 = icmp eq i32 %v1_10000270, 0
  br i1 %v2_10000270, label %dec_label_pc_10000274, label %dec_label_pc_1000025c

dec_label_pc_10000274:                            ; preds = %dec_label_pc_1000026c
  ret i32 %arg4

dec_label_pc_10000278:                            ; preds = %dec_label_pc_1000025c, %dec_label_pc_10000238
  %v0_10000278 = phi i32 [ %tmp, %dec_label_pc_10000238 ], [ %v0_1000025c, %dec_label_pc_1000025c ]
  %v1_10000278 = inttoptr i32 %v0_10000278 to i32*
  %v2_10000278 = load i32, i32* %v1_10000278, align 4
  ret i32 %v2_10000278

; uselistorder directives
  uselistorder i32 %v1_10000270, { 2, 1, 0 }
  uselistorder i32 %v0_1000025c.in, { 1, 0 }
  uselistorder i32 %tmp, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000026c, { 1, 0 }
}

define i32 @function_10000280(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_10000280:
  store i32 %arg4, i32* @r28, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 %arg2, i32* @r30, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268436160, i32* @lr, align 4
  %v0_100002bc = call i32 @function_10009114()
  %v3_100002c0 = icmp eq i32 %v0_100002bc, -1
  br i1 %v3_100002c0, label %dec_label_pc_100002d0, label %dec_label_pc_100002c8

dec_label_pc_100002c8:                            ; preds = %dec_label_pc_10000280
  %tmp14 = icmp slt i32 %v0_100002bc, 1
  br i1 %tmp14, label %dec_label_pc_100002f8, label %dec_label_pc_100002d0

dec_label_pc_100002d0:                            ; preds = %dec_label_pc_100002c8, %dec_label_pc_10000280
  ret i32 %v0_100002bc

dec_label_pc_100002f8:                            ; preds = %dec_label_pc_100002c8
  store i32 268436220, i32* @lr, align 4
  %v0_100002f8 = call i32 @function_10009114()
  %v3_100002fc = icmp eq i32 %v0_100002f8, -1
  br i1 %v3_100002fc, label %dec_label_pc_10000320, label %dec_label_pc_10000304

dec_label_pc_10000304:                            ; preds = %dec_label_pc_100002f8
  %v3_10000304 = icmp eq i32 %v0_100002f8, 0
  br i1 %v3_10000304, label %dec_label_pc_1000030c, label %dec_label_pc_10000328

dec_label_pc_1000030c:                            ; preds = %dec_label_pc_10000304
  %v0_1000030c = load i32, i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_10000314.7 to i32), i32* @lr, align 4
  %v1_10000310 = call i32 @function_1000a914(i32 %v0_1000030c)
  store i32 268436248, i32* @lr, align 4
  %v0_10000314 = call i32 @function_100091a4()
  store i32 ptrtoint ([3 x i8]* @global_var_10000320.8 to i32), i32* @lr, align 4
  %v2_1000031c = call i32 @function_100091ec(i32 %v0_10000314, i32 9)
  br label %dec_label_pc_10000320

dec_label_pc_10000320:                            ; preds = %dec_label_pc_10000358, %dec_label_pc_10000328, %dec_label_pc_100002f8, %dec_label_pc_10000374, %dec_label_pc_1000030c
  %v0_10000324 = call i32 @function_1000a890()
  br label %dec_label_pc_10000328

dec_label_pc_10000328:                            ; preds = %dec_label_pc_10000304, %dec_label_pc_10000320
  %v3_1000032c = load i8, i8* @global_var_1001c250.9, align 1
  %v3_10000330 = icmp eq i8 %v3_1000032c, 0
  br i1 %v3_10000330, label %dec_label_pc_10000320, label %dec_label_pc_10000338

dec_label_pc_10000338:                            ; preds = %dec_label_pc_10000328
  %v4_1000032c = zext i8 %v3_1000032c to i32
  %v3_10000340 = load i32, i32* @global_var_1001c254.10, align 4
  %v1_10000348 = inttoptr i32 %v3_10000340 to i32*
  %v2_10000348 = load i32, i32* %v1_10000348, align 4
  %v1_1000034c = add i32 %v2_10000348, 4
  %v2_1000034c = inttoptr i32 %v1_1000034c to i8*
  %v3_1000034c = load i8, i8* %v2_1000034c, align 1
  %v4_1000034c = zext i8 %v3_1000034c to i32
  %v1_10000350 = load i32, i32* @r30, align 4
  %v4_10000350 = icmp eq i32 %v4_1000034c, %v1_10000350
  br i1 %v4_10000350, label %dec_label_pc_10000374, label %dec_label_pc_10000358

dec_label_pc_10000358:                            ; preds = %dec_label_pc_10000338, %dec_label_pc_10000360
  %v0_1000035c = phi i32 [ %v1_1000035c, %dec_label_pc_10000360 ], [ %v4_1000032c, %dec_label_pc_10000338 ]
  %v0_10000358 = phi i32 [ %v1_10000358, %dec_label_pc_10000360 ], [ 0, %dec_label_pc_10000338 ]
  %v1_10000358 = add i32 %v0_10000358, 1
  %v1_1000035c = add i32 %v0_1000035c, -1
  %v2_1000035c = icmp eq i32 %v1_1000035c, 0
  br i1 %v2_1000035c, label %dec_label_pc_10000320, label %dec_label_pc_10000360

dec_label_pc_10000360:                            ; preds = %dec_label_pc_10000358
  %v1_10000360 = mul i32 %v1_10000358, 4
  %v2_10000364 = add i32 %v1_10000360, %v3_10000340
  %v3_10000364 = inttoptr i32 %v2_10000364 to i32*
  %v4_10000364 = load i32, i32* %v3_10000364, align 4
  %v1_10000368 = add i32 %v4_10000364, 4
  %v2_10000368 = inttoptr i32 %v1_10000368 to i8*
  %v3_10000368 = load i8, i8* %v2_10000368, align 1
  %v4_10000368 = zext i8 %v3_10000368 to i32
  %v4_1000036c = icmp eq i32 %v4_10000368, %v1_10000350
  br i1 %v4_1000036c, label %dec_label_pc_10000374, label %dec_label_pc_10000358

dec_label_pc_10000374:                            ; preds = %dec_label_pc_10000360, %dec_label_pc_10000338
  %v0_10000374 = phi i32 [ %v2_10000348, %dec_label_pc_10000338 ], [ %v4_10000364, %dec_label_pc_10000360 ]
  %v1_10000374 = inttoptr i32 %v0_10000374 to i32*
  %v2_10000374 = load i32, i32* %v1_10000374, align 4
  call void @__pseudo_call(i32 %v2_10000374)
  br label %dec_label_pc_10000320

; uselistorder directives
  uselistorder i32 %v1_1000035c, { 1, 0 }
  uselistorder i8 %v3_1000032c, { 1, 0 }
  uselistorder label %dec_label_pc_10000358, { 1, 0 }
  uselistorder label %dec_label_pc_10000328, { 1, 0 }
  uselistorder label %dec_label_pc_10000320, { 3, 0, 1, 4, 2 }
}

define i32 @function_10000394(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10000394:
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v0_10000394 = call i32 @__asm_mfcr()
  store i32 %v0_10000394, i32* %r3.global-to-local, align 4
  %v0_100003a4 = load i32, i32* @r30, align 4
  %v0_100003c4 = load i32, i32* @r24, align 4
  %v0_100003cc = load i32, i32* @r26, align 4
  %v0_100003d4 = load i32, i32* @r28, align 4
  %v0_100003d8 = load i32, i32* @r29, align 4
  %tmp25 = icmp ult i32 %arg2, 4
  br i1 %tmp25, label %dec_label_pc_100003f4, label %dec_label_pc_100003e8

dec_label_pc_100003e8:                            ; preds = %dec_label_pc_10000394
  %v3_100003e8 = icmp eq i32 %arg2, 4
  %v1_100003ec = inttoptr i32 %v0_10000394 to i32*
  %v2_100003ec = load i32, i32* %v1_100003ec, align 4
  store i32 %v2_100003ec, i32* %r25.global-to-local, align 4
  br i1 %v3_100003e8, label %dec_label_pc_100003f4, label %dec_label_pc_1000043c

dec_label_pc_100003f4:                            ; preds = %dec_label_pc_100003e8, %dec_label_pc_100005e8, %dec_label_pc_10000454, %dec_label_pc_10000448, %dec_label_pc_1000043c, %dec_label_pc_10000394, %dec_label_pc_1000061c
  %v1_10000408 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10000394)
  store i32 %v0_100003c4, i32* @r24, align 4
  store i32 %v0_100003cc, i32* @r26, align 4
  store i32 %v0_100003d4, i32* @r28, align 4
  store i32 %v0_100003d8, i32* @r29, align 4
  store i32 %v0_100003a4, i32* @r30, align 4
  %v0_10000438 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10000438

dec_label_pc_1000043c:                            ; preds = %dec_label_pc_100003e8
  %v3_1000043c = icmp eq i32 %arg2, 5
  %v1_10000440 = add i32 %v0_10000394, 4
  %v2_10000440 = inttoptr i32 %v1_10000440 to i8*
  %v3_10000440 = load i8, i8* %v2_10000440, align 1
  %v4_10000440 = zext i8 %v3_10000440 to i32
  store i32 %v4_10000440, i32* %r22.global-to-local, align 4
  br i1 %v3_1000043c, label %dec_label_pc_100003f4, label %dec_label_pc_10000448

dec_label_pc_10000448:                            ; preds = %dec_label_pc_1000043c
  %v1_10000448 = add i32 %v0_10000394, 5
  %v2_10000448 = inttoptr i32 %v1_10000448 to i8*
  %v3_10000448 = load i8, i8* %v2_10000448, align 1
  %v4_10000448 = zext i8 %v3_10000448 to i32
  store i32 %v4_10000448, i32* @r26, align 4
  %v3_1000044c = icmp eq i8 %v3_10000448, 0
  store i1 false, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_1000044c, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_1000044c, label %dec_label_pc_100003f4, label %dec_label_pc_10000454

dec_label_pc_10000454:                            ; preds = %dec_label_pc_10000448
  %v1_10000454 = mul nuw nsw i32 %v4_10000448, 5
  store i32 %v1_10000454, i32* @r27, align 4
  %v1_10000458 = add i32 %arg2, -6
  store i32 %v1_10000458, i32* @r28, align 4
  %v2_1000045c = icmp ult i32 %v1_10000458, %v1_10000454
  br i1 %v2_1000045c, label %dec_label_pc_100003f4, label %dec_label_pc_10000464

dec_label_pc_10000464:                            ; preds = %dec_label_pc_10000454
  store i32 %v4_10000448, i32* %r3.global-to-local, align 4
  store i32 268436592, i32* @lr, align 4
  %v2_1000046c = call i32 @function_1000a178(i32 %v4_10000448, i32 24)
  store i32 %v2_1000046c, i32* %r3.global-to-local, align 4
  %v0_10000470 = load i32, i32* @r31, align 4
  %v1_10000470 = add i32 %v0_10000470, 6
  store i32 %v1_10000470, i32* @r29, align 4
  store i32 %v2_1000046c, i32* %r20.global-to-local, align 4
  %v0_10000478 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10000478 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10000478 = or i1 %v0_10000478, %v1_10000478
  br i1 %v2_10000478, label %dec_label_pc_100004d4thread-pre-split, label %dec_label_pc_1000047c

dec_label_pc_1000047c:                            ; preds = %dec_label_pc_10000464
  %v0_1000047c = load i32, i32* @r27, align 4
  store i32 %v2_1000046c, i32* %r11.global-to-local, align 4
  %tmp29 = mul i32 %v0_1000047c, -858993459
  store i32 2, i32* %r10.global-to-local, align 4
  store i32 %tmp29, i32* %r9.global-to-local, align 4
  store i32 %tmp29, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100004a4

dec_label_pc_100004a4:                            ; preds = %dec_label_pc_100004a4.dec_label_pc_100004a4_crit_edge, %dec_label_pc_1000047c
  %v2_100004b0 = phi i32 [ %v1_100004c0, %dec_label_pc_100004a4.dec_label_pc_100004a4_crit_edge ], [ %v2_1000046c, %dec_label_pc_1000047c ]
  %v0_100004ac = phi i32 [ %v0_100004a4.pre, %dec_label_pc_100004a4.dec_label_pc_100004a4_crit_edge ], [ %v1_10000470, %dec_label_pc_1000047c ]
  %v1_100004a4 = add i32 %v0_100004ac, 4
  %v2_100004a4 = inttoptr i32 %v1_100004a4 to i8*
  %v3_100004a4 = load i8, i8* %v2_100004a4, align 1
  %v1_100004a8 = inttoptr i32 %v0_100004ac to i32*
  %v2_100004a8 = load i32, i32* %v1_100004a8, align 4
  store i32 %v2_100004a8, i32* %r9.global-to-local, align 4
  %v1_100004ac = add i32 %v0_100004ac, 5
  store i32 %v1_100004ac, i32* @r29, align 4
  %v3_100004b0 = add i32 %v2_100004b0, 20
  %v4_100004b0 = inttoptr i32 %v3_100004b0 to i8*
  store i8 %v3_100004a4, i8* %v4_100004b0, align 1
  %v0_100004b4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100004b4 = load i32, i32* %r11.global-to-local, align 4
  %v2_100004b4 = add i32 %v1_100004b4, 4
  %v3_100004b4 = inttoptr i32 %v2_100004b4 to i32*
  store i32 %v0_100004b4, i32* %v3_100004b4, align 4
  %v0_100004b8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100004b8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100004b8 = add i32 %v1_100004b8, 16
  %v3_100004b8 = inttoptr i32 %v2_100004b8 to i32*
  store i32 %v0_100004b8, i32* %v3_100004b8, align 4
  %v0_100004bc = load i32, i32* %r10.global-to-local, align 4
  %v1_100004bc = trunc i32 %v0_100004bc to i16
  %v2_100004bc = load i32, i32* %r11.global-to-local, align 4
  %v3_100004bc = inttoptr i32 %v2_100004bc to i16*
  store i16 %v1_100004bc, i16* %v3_100004bc, align 2
  %v0_100004c0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100004c0 = add i32 %v0_100004c0, 24
  store i32 %v1_100004c0, i32* %r11.global-to-local, align 4
  %v0_100004c4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100004c4 = add i32 %v0_100004c4, -1
  store i32 %v1_100004c4, i32* %ctr.global-to-local, align 4
  %v2_100004c4 = icmp eq i32 %v1_100004c4, 0
  br i1 %v2_100004c4, label %dec_label_pc_100004c8, label %dec_label_pc_100004a4.dec_label_pc_100004a4_crit_edge

dec_label_pc_100004a4.dec_label_pc_100004a4_crit_edge: ; preds = %dec_label_pc_100004a4
  %v0_100004a4.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100004a4

dec_label_pc_100004c8:                            ; preds = %dec_label_pc_100004a4
  %v0_100004c8 = load i32, i32* @r26, align 4
  %v1_100004c8 = mul i32 %v0_100004c8, -5
  %v0_100004cc = load i32, i32* @r30, align 4
  %v2_100004cc = add i32 %v0_100004cc, %v1_100004c8
  store i32 %v2_100004cc, i32* %r9.global-to-local, align 4
  %v1_100004d0 = add i32 %v2_100004cc, -6
  store i32 %v1_100004d0, i32* @r28, align 4
  br label %dec_label_pc_100004d4

dec_label_pc_100004d4thread-pre-split:            ; preds = %dec_label_pc_10000464
  %v0_100004d4.pr = load i32, i32* @r28, align 4
  br label %dec_label_pc_100004d4

dec_label_pc_100004d4:                            ; preds = %dec_label_pc_100004d4thread-pre-split, %dec_label_pc_100004c8
  %v0_100004d4 = phi i32 [ %v0_100004d4.pr, %dec_label_pc_100004d4thread-pre-split ], [ %v1_100004d0, %dec_label_pc_100004c8 ]
  %v3_100004d4 = icmp eq i32 %v0_100004d4, 0
  store i32 0, i32* %r21.global-to-local, align 4
  br i1 %v3_100004d4, label %dec_label_pc_100005d8, label %dec_label_pc_100004e0

dec_label_pc_100004e0:                            ; preds = %dec_label_pc_100004d4
  %v0_100004e0 = load i32, i32* @r29, align 4
  %v1_100004e0 = inttoptr i32 %v0_100004e0 to i8*
  %v2_100004e0 = load i8, i8* %v1_100004e0, align 1
  %v3_100004e0 = zext i8 %v2_100004e0 to i32
  store i32 %v3_100004e0, i32* @r24, align 4
  %v3_100004e4 = icmp eq i8 %v2_100004e0, 0
  store i1 false, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_100004e4, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_100004e4, label %dec_label_pc_100005b0, label %dec_label_pc_100004ec

dec_label_pc_100004ec:                            ; preds = %dec_label_pc_100004e0
  store i32 %v3_100004e0, i32* %r3.global-to-local, align 4
  store i32 268436728, i32* @lr, align 4
  %v2_100004f4 = call i32 @function_1000a178(i32 %v3_100004e0, i32 8)
  store i32 %v2_100004f4, i32* %r3.global-to-local, align 4
  store i32 %v2_100004f4, i32* %r21.global-to-local, align 4
  %v0_100004fc = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100004fc = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_100004fc = or i1 %v0_100004fc, %v1_100004fc
  br i1 %v2_100004fc, label %dec_label_pc_100005b0, label %dec_label_pc_10000500

dec_label_pc_10000500:                            ; preds = %dec_label_pc_100004ec
  %v0_10000500 = load i32, i32* @r28, align 4
  %v1_10000500 = add i32 %v0_10000500, -1
  %v4_10000500 = icmp eq i32 %v1_10000500, 0
  store i32 %v1_10000500, i32* %ctr.global-to-local, align 4
  br i1 %v4_10000500, label %dec_label_pc_100005d8, label %dec_label_pc_1000050c

dec_label_pc_1000050c:                            ; preds = %dec_label_pc_10000500
  %v0_1000050c = load i32, i32* @r29, align 4
  %v1_1000050c = add i32 %v0_1000050c, 1
  %v2_1000050c = inttoptr i32 %v1_1000050c to i8*
  %v3_1000050c = load i8, i8* %v2_1000050c, align 1
  store i32 %v1_1000050c, i32* %r9.global-to-local, align 4
  %v3_10000514 = add i32 %v2_100004f4, 4
  %v4_10000514 = inttoptr i32 %v3_10000514 to i8*
  store i8 %v3_1000050c, i8* %v4_10000514, align 1
  %v0_10000518 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10000518 = add i32 %v0_10000518, -1
  store i32 %v1_10000518, i32* %ctr.global-to-local, align 4
  %v2_10000518 = icmp eq i32 %v1_10000518, 0
  br i1 %v2_10000518, label %dec_label_pc_100005d8, label %dec_label_pc_1000051c

dec_label_pc_1000051c:                            ; preds = %dec_label_pc_1000050c
  store i32 %v1_10000518, i32* %r11.global-to-local, align 4
  %v0_10000520 = load i32, i32* %r9.global-to-local, align 4
  %v1_10000520 = add i32 %v0_10000520, 1
  %v2_10000520 = inttoptr i32 %v1_10000520 to i8*
  %v3_10000520 = load i8, i8* %v2_10000520, align 1
  %v4_10000520 = zext i8 %v3_10000520 to i32
  %v1_10000528 = add i32 %v0_10000518, -2
  store i32 %v1_10000528, i32* @r29, align 4
  %v2_1000052c = icmp slt i32 %v1_10000528, %v4_10000520
  br i1 %v2_1000052c, label %dec_label_pc_100005d8, label %dec_label_pc_10000534

dec_label_pc_10000534:                            ; preds = %dec_label_pc_1000051c
  %v1_10000534 = add i32 %v0_10000520, 2
  store i32 %v1_10000534, i32* @r28, align 4
  %v0_10000538 = load i32, i32* %r3.global-to-local, align 4
  %v1_10000538 = add i32 %v0_10000538, 8
  store i32 %v1_10000538, i32* %r23.global-to-local, align 4
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_1000057c

dec_label_pc_10000548:                            ; preds = %dec_label_pc_1000057c
  %v5_100005a4 = icmp eq i32 %v2_100005a4, 0
  br i1 %v5_100005a4, label %dec_label_pc_100005d8, label %dec_label_pc_1000054c

dec_label_pc_1000054c:                            ; preds = %dec_label_pc_10000548
  %v1_1000054c = load i32, i32* @r28, align 4
  %v2_1000054c = add i32 %v1_1000054c, %v0_100005a4
  %v3_1000054c = inttoptr i32 %v2_1000054c to i8*
  %v4_1000054c = load i8, i8* %v3_1000054c, align 1
  store i32 %v2_1000054c, i32* %r3.global-to-local, align 4
  %v1_10000554 = add i32 %v2_1000054c, 1
  store i32 %v1_10000554, i32* %r9.global-to-local, align 4
  %v2_10000558 = load i32, i32* @r30, align 4
  %v3_10000558 = add i32 %v2_10000558, 4
  %v4_10000558 = inttoptr i32 %v3_10000558 to i8*
  store i8 %v4_1000054c, i8* %v4_10000558, align 1
  %v0_1000055c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000055c = add i32 %v0_1000055c, -1
  %v4_1000055c = icmp eq i32 %v1_1000055c, 0
  %v0_10000560 = load i32, i32* %r9.global-to-local, align 4
  %v1_10000560 = add i32 %v0_10000560, 1
  store i32 %v1_10000560, i32* @r28, align 4
  br i1 %v4_1000055c, label %dec_label_pc_100005d8, label %dec_label_pc_10000568

dec_label_pc_10000568:                            ; preds = %dec_label_pc_1000054c
  %v0_10000568 = load i32, i32* %r3.global-to-local, align 4
  %v1_10000568 = add i32 %v0_10000568, 1
  %v2_10000568 = inttoptr i32 %v1_10000568 to i8*
  %v3_10000568 = load i8, i8* %v2_10000568, align 1
  %v4_10000568 = zext i8 %v3_10000568 to i32
  store i32 %v1_1000055c, i32* %r9.global-to-local, align 4
  %v1_10000570 = add i32 %v0_1000055c, -2
  store i32 %v1_10000570, i32* @r29, align 4
  %v2_10000574 = icmp slt i32 %v1_10000570, %v4_10000568
  br i1 %v2_10000574, label %dec_label_pc_100005d8, label %dec_label_pc_1000057c

dec_label_pc_1000057c:                            ; preds = %dec_label_pc_10000568, %dec_label_pc_10000534
  %v0_10000580 = phi i32 [ %v4_10000568, %dec_label_pc_10000568 ], [ %v4_10000520, %dec_label_pc_10000534 ]
  %v1_10000580 = add nuw nsw i32 %v0_10000580, 1
  store i32 %v1_10000580, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000588.11 to i32), i32* @lr, align 4
  %v2_10000584 = call i32 @function_1000a178(i32 %v1_10000580, i32 1)
  store i32 %v2_10000584, i32* %r3.global-to-local, align 4
  %v0_10000588 = load i32, i32* @r27, align 4
  %v1_10000588 = add i32 %v0_10000588, 1
  store i32 %v1_10000588, i32* @r27, align 4
  %v1_1000058c = load i32, i32* @r30, align 4
  %v2_1000058c = inttoptr i32 %v1_1000058c to i32*
  store i32 %v2_10000584, i32* %v2_1000058c, align 4
  %v0_10000590 = load i32, i32* @r28, align 4
  %v0_10000594 = load i32, i32* @r31, align 4
  %v0_10000598 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10000598, i32* @r30, align 4
  store i32 268436896, i32* @lr, align 4
  %v3_1000059c = call i32 @function_10008990(i32 %v2_10000584, i32 %v0_10000590, i32 %v0_10000594)
  store i32 %v3_1000059c, i32* %r3.global-to-local, align 4
  %v0_100005a0 = load i32, i32* @r27, align 4
  %v1_100005a0 = load i32, i32* @r24, align 4
  %v4_100005a0 = icmp eq i32 %v0_100005a0, %v1_100005a0
  %v0_100005a4 = load i32, i32* @r31, align 4
  %v1_100005a4 = load i32, i32* @r29, align 4
  %v2_100005a4 = sub i32 %v1_100005a4, %v0_100005a4
  store i32 %v2_100005a4, i32* %r11.global-to-local, align 4
  %v0_100005a8 = load i32, i32* %r23.global-to-local, align 4
  %v1_100005a8 = add i32 %v0_100005a8, 8
  store i32 %v1_100005a8, i32* %r23.global-to-local, align 4
  br i1 %v4_100005a0, label %dec_label_pc_100005b0, label %dec_label_pc_10000548

dec_label_pc_100005b0:                            ; preds = %dec_label_pc_1000057c, %dec_label_pc_100004ec, %dec_label_pc_100004e0
  %v0_100005b0 = call i32 @function_100097e8()
  %v2_100005b8 = inttoptr i32 %v0_100005b0 to i32*
  store i32 0, i32* %v2_100005b8, align 4
  %v0_100005bc = load i32, i32* %r22.global-to-local, align 4
  %v0_100005c0 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100005c0, i32* %r3.global-to-local, align 4
  %v0_100005c4 = load i32, i32* @r26, align 4
  %v0_100005c8 = load i32, i32* %r20.global-to-local, align 4
  %v0_100005cc = load i32, i32* @r24, align 4
  %v0_100005d0 = load i32, i32* %r21.global-to-local, align 4
  store i32 268436952, i32* @lr, align 4
  %v6_100005d4 = call i32 @function_10000280(i32 %v0_100005c0, i32 %v0_100005bc, i32 %v0_100005c4, i32 %v0_100005c8, i32 %v0_100005cc, i32 %v0_100005d0)
  store i32 %v6_100005d4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100005d8

dec_label_pc_100005d8:                            ; preds = %dec_label_pc_10000568, %dec_label_pc_1000054c, %dec_label_pc_10000548, %dec_label_pc_1000051c, %dec_label_pc_1000050c, %dec_label_pc_10000500, %dec_label_pc_100004d4, %dec_label_pc_100005b0
  %v0_100005d8 = load i32, i32* %r20.global-to-local, align 4
  %v3_100005d8 = icmp eq i32 %v0_100005d8, 0
  br i1 %v3_100005d8, label %dec_label_pc_100005e8, label %dec_label_pc_100005e0

dec_label_pc_100005e0:                            ; preds = %dec_label_pc_100005d8
  store i32 %v0_100005d8, i32* @r3, align 4
  store i32 268436968, i32* @lr, align 4
  %v0_100005e4 = call i32 @function_1000a1e8()
  store i32 %v0_100005e4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100005e8

dec_label_pc_100005e8:                            ; preds = %dec_label_pc_100005d8, %dec_label_pc_100005e0
  %v0_100005e8 = load i32, i32* %r21.global-to-local, align 4
  %v3_100005e8 = icmp eq i32 %v0_100005e8, 0
  br i1 %v3_100005e8, label %dec_label_pc_100003f4, label %dec_label_pc_100005f0

dec_label_pc_100005f0:                            ; preds = %dec_label_pc_100005e8
  %v0_100005f0 = load i32, i32* @r24, align 4
  %tmp27 = icmp slt i32 %v0_100005f0, 1
  br i1 %tmp27, label %dec_label_pc_1000061c, label %dec_label_pc_100005f8

dec_label_pc_100005f8:                            ; preds = %dec_label_pc_100005f0
  br label %dec_label_pc_100005fc

dec_label_pc_100005fc:                            ; preds = %dec_label_pc_10000614, %dec_label_pc_100005f8
  %v0_100006146 = phi i32 [ %v0_100005f0, %dec_label_pc_100005f8 ], [ %v0_10000614, %dec_label_pc_10000614 ]
  %v0_10000604 = phi i32 [ %v0_100005e8, %dec_label_pc_100005f8 ], [ %v0_1000061c.pre, %dec_label_pc_10000614 ]
  %v0_100005fc = phi i32 [ 0, %dec_label_pc_100005f8 ], [ %v1_10000614, %dec_label_pc_10000614 ]
  %v1_100005fc = mul i32 %v0_100005fc, 8
  %v1_10000600 = add i32 %v0_100005fc, 1
  store i32 %v1_10000600, i32* @r31, align 4
  %v2_10000604 = add i32 %v1_100005fc, %v0_10000604
  %v3_10000604 = inttoptr i32 %v2_10000604 to i32*
  %v4_10000604 = load i32, i32* %v3_10000604, align 4
  store i32 %v4_10000604, i32* @r3, align 4
  %v3_10000608 = icmp eq i32 %v4_10000604, 0
  br i1 %v3_10000608, label %dec_label_pc_10000614, label %dec_label_pc_10000610

dec_label_pc_10000610:                            ; preds = %dec_label_pc_100005fc
  store i32 268437012, i32* @lr, align 4
  %v0_10000610 = call i32 @function_1000a1e8()
  store i32 %v0_10000610, i32* %r3.global-to-local, align 4
  %v0_10000614.pre = load i32, i32* @r24, align 4
  %v1_10000614.pre = load i32, i32* @r31, align 4
  %v0_1000061c.pre.pre = load i32, i32* %r21.global-to-local, align 4
  br label %dec_label_pc_10000614

dec_label_pc_10000614:                            ; preds = %dec_label_pc_100005fc, %dec_label_pc_10000610
  %v0_1000061c.pre = phi i32 [ %v0_10000604, %dec_label_pc_100005fc ], [ %v0_1000061c.pre.pre, %dec_label_pc_10000610 ]
  %v1_10000614 = phi i32 [ %v1_10000600, %dec_label_pc_100005fc ], [ %v1_10000614.pre, %dec_label_pc_10000610 ]
  %v0_10000614 = phi i32 [ %v0_100006146, %dec_label_pc_100005fc ], [ %v0_10000614.pre, %dec_label_pc_10000610 ]
  %v4_10000614 = icmp eq i32 %v0_10000614, %v1_10000614
  br i1 %v4_10000614, label %dec_label_pc_1000061c, label %dec_label_pc_100005fc

dec_label_pc_1000061c:                            ; preds = %dec_label_pc_10000614, %dec_label_pc_100005f0
  %v0_1000061c = phi i32 [ %v0_100005e8, %dec_label_pc_100005f0 ], [ %v0_1000061c.pre, %dec_label_pc_10000614 ]
  store i32 %v0_1000061c, i32* @r3, align 4
  store i32 268437028, i32* @lr, align 4
  %v0_10000620 = call i32 @function_1000a1e8()
  store i32 %v0_10000620, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100003f4

; uselistorder directives
  uselistorder i32 %v0_10000614, { 1, 0 }
  uselistorder i32 %v1_10000614, { 1, 0 }
  uselistorder i32 %v0_100005fc, { 1, 0 }
  uselistorder i32 %v2_100005a4, { 1, 0 }
  uselistorder i32 %v0_100005a4, { 1, 0 }
  uselistorder i32 %v2_1000054c, { 1, 0, 2 }
  uselistorder i32 %v1_10000518, { 0, 2, 1 }
  uselistorder i32 %v3_100004e0, { 1, 0, 2 }
  uselistorder i32 %v1_100004c4, { 1, 0 }
  uselistorder i32 %v1_100004c0, { 1, 0 }
  uselistorder i32 %v0_100004ac, { 0, 2, 1 }
  uselistorder i32 %tmp29, { 1, 0 }
  uselistorder i32 %v4_10000448, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10000394, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 3, 17, 6, 2, 9, 10, 7, 8, 11, 12, 13, 14, 15, 16, 1, 0 }
  uselistorder i32* %r21.global-to-local, { 3, 1, 2, 0, 4 }
  uselistorder i32* %r20.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 %arg2, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_10000614, { 1, 0 }
  uselistorder label %dec_label_pc_100005e8, { 1, 0 }
  uselistorder label %dec_label_pc_100005d8, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_100003f4, { 6, 1, 2, 3, 4, 0, 5 }
}

define i32 @function_10000628(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10000628:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %tmp7 = icmp slt i32 %arg1, 1
  br i1 %tmp7, label %dec_label_pc_1000066c, label %dec_label_pc_10000640

dec_label_pc_10000640:                            ; preds = %dec_label_pc_10000628
  %v0_10000640 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000640 = add i32 %v0_10000640, 4
  %v2_10000640 = inttoptr i32 %v1_10000640 to i8*
  %v3_10000640 = load i8, i8* %v2_10000640, align 1
  %v4_10000640 = zext i8 %v3_10000640 to i32
  %v4_10000648 = icmp eq i32 %v4_10000640, %arg3
  br i1 %v4_10000648, label %dec_label_pc_10000680, label %dec_label_pc_10000664

dec_label_pc_10000654:                            ; preds = %dec_label_pc_10000664
  %v1_10000654 = add i32 %v0_10000654.in, 12
  %v2_10000654 = inttoptr i32 %v1_10000654 to i8*
  %v3_10000654 = load i8, i8* %v2_10000654, align 1
  %v4_10000654 = zext i8 %v3_10000654 to i32
  %v4_1000065c = icmp eq i32 %v4_10000654, %arg3
  br i1 %v4_1000065c, label %dec_label_pc_10000680, label %dec_label_pc_10000664

dec_label_pc_10000664:                            ; preds = %dec_label_pc_10000640, %dec_label_pc_10000654
  %v0_10000668 = phi i32 [ %v1_10000668, %dec_label_pc_10000654 ], [ %arg1, %dec_label_pc_10000640 ]
  %v0_10000654.in = phi i32 [ %v0_10000654, %dec_label_pc_10000654 ], [ %v0_10000640, %dec_label_pc_10000640 ]
  %v0_10000654 = add i32 %v0_10000654.in, 8
  store i32 %v0_10000654, i32* %r4.global-to-local, align 4
  %v1_10000668 = add i32 %v0_10000668, -1
  %v2_10000668 = icmp eq i32 %v1_10000668, 0
  br i1 %v2_10000668, label %dec_label_pc_1000066c, label %dec_label_pc_10000654

dec_label_pc_1000066c:                            ; preds = %dec_label_pc_10000664, %dec_label_pc_10000680, %dec_label_pc_10000628
  ret i32 %arg4

dec_label_pc_10000680:                            ; preds = %dec_label_pc_10000654, %dec_label_pc_10000640
  %v0_10000680 = phi i32 [ %v0_10000640, %dec_label_pc_10000640 ], [ %v0_10000654, %dec_label_pc_10000654 ]
  %v1_10000680 = inttoptr i32 %v0_10000680 to i32*
  %v2_10000680 = load i32, i32* %v1_10000680, align 4
  %v3_10000684 = icmp eq i32 %v2_10000680, 0
  br i1 %v3_10000684, label %dec_label_pc_1000066c, label %dec_label_pc_1000068c

dec_label_pc_1000068c:                            ; preds = %dec_label_pc_10000680
  store i32 268437136, i32* @lr, align 4
  %v1_1000068c = call i32 @function_10009b80(i32 %v2_10000680)
  ret i32 %v1_1000068c

; uselistorder directives
  uselistorder i32 %v1_10000668, { 1, 0 }
  uselistorder i32 %v0_10000654, { 1, 0, 2 }
  uselistorder i32 %v0_10000654.in, { 1, 0 }
  uselistorder i32 %v0_10000640, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000066c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000664, { 1, 0 }
}

define i32 @function_100006a8(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100006a8:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %tmp7 = icmp slt i32 %arg1, 1
  br i1 %tmp7, label %dec_label_pc_100006ec, label %dec_label_pc_100006c0

dec_label_pc_100006c0:                            ; preds = %dec_label_pc_100006a8
  %v0_100006c0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100006c0 = add i32 %v0_100006c0, 4
  %v2_100006c0 = inttoptr i32 %v1_100006c0 to i8*
  %v3_100006c0 = load i8, i8* %v2_100006c0, align 1
  %v4_100006c0 = zext i8 %v3_100006c0 to i32
  %v4_100006c8 = icmp eq i32 %v4_100006c0, %arg3
  br i1 %v4_100006c8, label %dec_label_pc_10000700, label %dec_label_pc_100006e4

dec_label_pc_100006d4:                            ; preds = %dec_label_pc_100006e4
  %v1_100006d4 = add i32 %v0_100006d4.in, 12
  %v2_100006d4 = inttoptr i32 %v1_100006d4 to i8*
  %v3_100006d4 = load i8, i8* %v2_100006d4, align 1
  %v4_100006d4 = zext i8 %v3_100006d4 to i32
  %v4_100006dc = icmp eq i32 %v4_100006d4, %arg3
  br i1 %v4_100006dc, label %dec_label_pc_10000700, label %dec_label_pc_100006e4

dec_label_pc_100006e4:                            ; preds = %dec_label_pc_100006c0, %dec_label_pc_100006d4
  %v0_100006e8 = phi i32 [ %v1_100006e8, %dec_label_pc_100006d4 ], [ %arg1, %dec_label_pc_100006c0 ]
  %v0_100006d4.in = phi i32 [ %v0_100006d4, %dec_label_pc_100006d4 ], [ %v0_100006c0, %dec_label_pc_100006c0 ]
  %v0_100006d4 = add i32 %v0_100006d4.in, 8
  store i32 %v0_100006d4, i32* %r4.global-to-local, align 4
  %v1_100006e8 = add i32 %v0_100006e8, -1
  %v2_100006e8 = icmp eq i32 %v1_100006e8, 0
  br i1 %v2_100006e8, label %dec_label_pc_100006ec, label %dec_label_pc_100006d4

dec_label_pc_100006ec:                            ; preds = %dec_label_pc_100006e4, %dec_label_pc_10000700, %dec_label_pc_100006a8
  ret i32 %arg4

dec_label_pc_10000700:                            ; preds = %dec_label_pc_100006d4, %dec_label_pc_100006c0
  %v0_10000700 = phi i32 [ %v0_100006c0, %dec_label_pc_100006c0 ], [ %v0_100006d4, %dec_label_pc_100006d4 ]
  %v1_10000700 = inttoptr i32 %v0_10000700 to i32*
  %v2_10000700 = load i32, i32* %v1_10000700, align 4
  store i32 %v2_10000700, i32* @r3, align 4
  %v3_10000704 = icmp eq i32 %v2_10000700, 0
  br i1 %v3_10000704, label %dec_label_pc_100006ec, label %dec_label_pc_1000070c

dec_label_pc_1000070c:                            ; preds = %dec_label_pc_10000700
  store i32 10, i32* %r4.global-to-local, align 4
  store i32 268437268, i32* @lr, align 4
  %v2_10000710 = call i32 @function_10008a34(i32 %v2_10000700, i32 10)
  ret i32 %v2_10000710

; uselistorder directives
  uselistorder i32 %v1_100006e8, { 1, 0 }
  uselistorder i32 %v0_100006d4, { 1, 0, 2 }
  uselistorder i32 %v0_100006d4.in, { 1, 0 }
  uselistorder i32 %v0_100006c0, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_100006ec, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100006e4, { 1, 0 }
}

define i32 @function_1000072c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000072c:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v0_10000730 = load i32, i32* @lr, align 4
  store i32 %v0_10000730, i32* %r0.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  %v0_1000074c = load i32, i32* @r28, align 4
  store i32 268437336, i32* @lr, align 4
  %v2_10000754 = call i32 @function_1000a178(i32 1, i32 8)
  %v3_10000758 = load i8, i8* @global_var_1001c250.9, align 1
  %v4_10000758 = zext i8 %v3_10000758 to i32
  store i32 %v4_10000758, i32* %r4.global-to-local, align 4
  store i32 %v2_10000754, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_1000076c = load i32, i32* @global_var_1001c254.10, align 4
  %v2_10000770 = inttoptr i32 %v2_10000754 to i32*
  store i32 268448928, i32* %v2_10000770, align 4
  %v0_10000774 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000774 = mul i32 %v0_10000774, 4
  store i32 %v1_10000774, i32* %r4.global-to-local, align 4
  %v0_10000778 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000778 = trunc i32 %v0_10000778 to i8
  %v2_10000778 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000778 = add i32 %v2_10000778, 4
  %v4_10000778 = inttoptr i32 %v3_10000778 to i8*
  store i8 %v1_10000778, i8* %v4_10000778, align 1
  %v0_1000077c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000077c = add i32 %v0_1000077c, 4
  store i32 %v1_1000077c, i32* %r4.global-to-local, align 4
  store i32 268437380, i32* @lr, align 4
  %v3_10000780 = call i32 @function_1000a2e8(i32 %v3_1000076c, i32 %v1_1000077c, i32 268448928)
  %v3_10000784 = load i8, i8* @global_var_1001c250.9, align 1
  %v4_10000784 = zext i8 %v3_10000784 to i32
  store i32 %v3_10000780, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c251.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000794 = mul nuw nsw i32 %v4_10000784, 4
  %v0_10000798 = load i32, i32* @r28, align 4
  %v3_10000798 = add i32 %v1_10000794, %v3_10000780
  %v4_10000798 = inttoptr i32 %v3_10000798 to i32*
  store i32 %v0_10000798, i32* %v4_10000798, align 4
  %v0_100007a0 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100007a0, i32* @global_var_1001c254.10, align 4
  %v0_100007a4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100007a4 = trunc i32 %v0_100007a4 to i8
  store i8 %v1_100007a4, i8* @global_var_1001c250.9, align 1
  store i32 268437420, i32* @lr, align 4
  %v2_100007a8 = call i32 @function_1000a178(i32 1, i32 8)
  %v3_100007ac = load i8, i8* @global_var_1001c250.9, align 1
  %v4_100007ac = zext i8 %v3_100007ac to i32
  store i32 %v4_100007ac, i32* %r4.global-to-local, align 4
  store i32 %v2_100007a8, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_100007c0 = load i32, i32* @global_var_1001c254.10, align 4
  %v2_100007c4 = inttoptr i32 %v2_100007a8 to i32*
  store i32 268450172, i32* %v2_100007c4, align 4
  %v0_100007c8 = load i32, i32* %r4.global-to-local, align 4
  %v1_100007c8 = mul i32 %v0_100007c8, 4
  store i32 %v1_100007c8, i32* %r4.global-to-local, align 4
  %v0_100007cc = load i32, i32* %r0.global-to-local, align 4
  %v1_100007cc = trunc i32 %v0_100007cc to i8
  %v2_100007cc = load i32, i32* %r28.global-to-local, align 4
  %v3_100007cc = add i32 %v2_100007cc, 4
  %v4_100007cc = inttoptr i32 %v3_100007cc to i8*
  store i8 %v1_100007cc, i8* %v4_100007cc, align 1
  %v0_100007d0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100007d0 = add i32 %v0_100007d0, 4
  store i32 %v1_100007d0, i32* %r4.global-to-local, align 4
  store i32 268437464, i32* @lr, align 4
  %v3_100007d4 = call i32 @function_1000a2e8(i32 %v3_100007c0, i32 %v1_100007d0, i32 268450172)
  %v3_100007d8 = load i8, i8* @global_var_1001c250.9, align 1
  %v4_100007d8 = zext i8 %v3_100007d8 to i32
  store i32 %v3_100007d4, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c251.13 to i32), i32* %r0.global-to-local, align 4
  %v1_100007e8 = mul nuw nsw i32 %v4_100007d8, 4
  %v0_100007ec = load i32, i32* @r28, align 4
  %v3_100007ec = add i32 %v1_100007e8, %v3_100007d4
  %v4_100007ec = inttoptr i32 %v3_100007ec to i32*
  store i32 %v0_100007ec, i32* %v4_100007ec, align 4
  %v0_100007f4 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100007f4, i32* @global_var_1001c254.10, align 4
  %v0_100007f8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100007f8 = trunc i32 %v0_100007f8 to i8
  store i8 %v1_100007f8, i8* @global_var_1001c250.9, align 1
  store i32 268437504, i32* @lr, align 4
  %v2_100007fc = call i32 @function_1000a178(i32 1, i32 8)
  %v3_10000800 = load i8, i8* @global_var_1001c250.9, align 1
  %v4_10000800 = zext i8 %v3_10000800 to i32
  store i32 %v4_10000800, i32* %r4.global-to-local, align 4
  store i32 %v2_100007fc, i32* %r28.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_10000814 = load i32, i32* @global_var_1001c254.10, align 4
  %v2_10000818 = inttoptr i32 %v2_100007fc to i32*
  store i32 268451164, i32* %v2_10000818, align 4
  %v0_1000081c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000081c = mul i32 %v0_1000081c, 4
  store i32 %v1_1000081c, i32* %r4.global-to-local, align 4
  %v0_10000820 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000820 = trunc i32 %v0_10000820 to i8
  %v2_10000820 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000820 = add i32 %v2_10000820, 4
  %v4_10000820 = inttoptr i32 %v3_10000820 to i8*
  store i8 %v1_10000820, i8* %v4_10000820, align 1
  %v0_10000824 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000824 = add i32 %v0_10000824, 4
  store i32 %v1_10000824, i32* %r4.global-to-local, align 4
  store i32 268437548, i32* @lr, align 4
  %v3_10000828 = call i32 @function_1000a2e8(i32 %v3_10000814, i32 %v1_10000824, i32 268451164)
  %v3_1000082c = load i8, i8* @global_var_1001c250.9, align 1
  %v4_1000082c = zext i8 %v3_1000082c to i32
  store i32 %v3_10000828, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c251.13 to i32), i32* %r0.global-to-local, align 4
  %v1_1000083c = mul nuw nsw i32 %v4_1000082c, 4
  %v0_10000840 = load i32, i32* @r28, align 4
  %v3_10000840 = add i32 %v1_1000083c, %v3_10000828
  %v4_10000840 = inttoptr i32 %v3_10000840 to i32*
  store i32 %v0_10000840, i32* %v4_10000840, align 4
  %v0_10000848 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000848, i32* @global_var_1001c254.10, align 4
  %v0_1000084c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000084c = trunc i32 %v0_1000084c to i8
  store i8 %v1_1000084c, i8* @global_var_1001c250.9, align 1
  store i32 268437588, i32* @lr, align 4
  %v2_10000850 = call i32 @function_1000a178(i32 1, i32 8)
  %v3_10000854 = load i8, i8* @global_var_1001c250.9, align 1
  %v4_10000854 = zext i8 %v3_10000854 to i32
  store i32 %v4_10000854, i32* %r4.global-to-local, align 4
  store i32 %v2_10000850, i32* %r28.global-to-local, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v3_10000868 = load i32, i32* @global_var_1001c254.10, align 4
  %v2_1000086c = inttoptr i32 %v2_10000850 to i32*
  store i32 268448104, i32* %v2_1000086c, align 4
  %v0_10000870 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000870 = mul i32 %v0_10000870, 4
  store i32 %v1_10000870, i32* %r4.global-to-local, align 4
  %v0_10000874 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000874 = trunc i32 %v0_10000874 to i8
  %v2_10000874 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000874 = add i32 %v2_10000874, 4
  %v4_10000874 = inttoptr i32 %v3_10000874 to i8*
  store i8 %v1_10000874, i8* %v4_10000874, align 1
  %v0_10000878 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000878 = add i32 %v0_10000878, 4
  store i32 %v1_10000878, i32* %r4.global-to-local, align 4
  store i32 268437632, i32* @lr, align 4
  %v3_1000087c = call i32 @function_1000a2e8(i32 %v3_10000868, i32 %v1_10000878, i32 268448104)
  %v3_10000880 = load i8, i8* @global_var_1001c250.9, align 1
  %v4_10000880 = zext i8 %v3_10000880 to i32
  store i32 %v3_1000087c, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c251.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000890 = mul nuw nsw i32 %v4_10000880, 4
  %v0_10000894 = load i32, i32* @r28, align 4
  %v3_10000894 = add i32 %v1_10000890, %v3_1000087c
  %v4_10000894 = inttoptr i32 %v3_10000894 to i32*
  store i32 %v0_10000894, i32* %v4_10000894, align 4
  %v0_1000089c = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000089c, i32* @global_var_1001c254.10, align 4
  %v0_100008a0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100008a0 = trunc i32 %v0_100008a0 to i8
  store i8 %v1_100008a0, i8* @global_var_1001c250.9, align 1
  store i32 268437672, i32* @lr, align 4
  %v2_100008a4 = call i32 @function_1000a178(i32 1, i32 8)
  %v3_100008a8 = load i8, i8* @global_var_1001c250.9, align 1
  %v4_100008a8 = zext i8 %v3_100008a8 to i32
  store i32 %v4_100008a8, i32* %r4.global-to-local, align 4
  store i32 %v2_100008a4, i32* %r28.global-to-local, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  %v3_100008bc = load i32, i32* @global_var_1001c254.10, align 4
  %v2_100008c0 = inttoptr i32 %v2_100008a4 to i32*
  store i32 268446660, i32* %v2_100008c0, align 4
  %v0_100008c4 = load i32, i32* %r4.global-to-local, align 4
  %v1_100008c4 = mul i32 %v0_100008c4, 4
  store i32 %v1_100008c4, i32* %r4.global-to-local, align 4
  %v0_100008c8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100008c8 = trunc i32 %v0_100008c8 to i8
  %v2_100008c8 = load i32, i32* %r28.global-to-local, align 4
  %v3_100008c8 = add i32 %v2_100008c8, 4
  %v4_100008c8 = inttoptr i32 %v3_100008c8 to i8*
  store i8 %v1_100008c8, i8* %v4_100008c8, align 1
  %v0_100008cc = load i32, i32* %r4.global-to-local, align 4
  %v1_100008cc = add i32 %v0_100008cc, 4
  store i32 %v1_100008cc, i32* %r4.global-to-local, align 4
  store i32 268437716, i32* @lr, align 4
  %v3_100008d0 = call i32 @function_1000a2e8(i32 %v3_100008bc, i32 %v1_100008cc, i32 268446660)
  %v3_100008d4 = load i8, i8* @global_var_1001c250.9, align 1
  %v4_100008d4 = zext i8 %v3_100008d4 to i32
  store i32 %v3_100008d0, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c251.13 to i32), i32* %r0.global-to-local, align 4
  %v1_100008e4 = mul nuw nsw i32 %v4_100008d4, 4
  %v0_100008e8 = load i32, i32* @r28, align 4
  %v3_100008e8 = add i32 %v1_100008e4, %v3_100008d0
  %v4_100008e8 = inttoptr i32 %v3_100008e8 to i32*
  store i32 %v0_100008e8, i32* %v4_100008e8, align 4
  %v0_100008f0 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100008f0, i32* @global_var_1001c254.10, align 4
  %v0_100008f4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100008f4 = trunc i32 %v0_100008f4 to i8
  store i8 %v1_100008f4, i8* @global_var_1001c250.9, align 1
  store i32 268437756, i32* @lr, align 4
  %v2_100008f8 = call i32 @function_1000a178(i32 1, i32 8)
  %v3_100008fc = load i8, i8* @global_var_1001c250.9, align 1
  %v4_100008fc = zext i8 %v3_100008fc to i32
  store i32 %v4_100008fc, i32* %r4.global-to-local, align 4
  store i32 %v2_100008f8, i32* %r28.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v3_10000910 = load i32, i32* @global_var_1001c254.10, align 4
  %v2_10000914 = inttoptr i32 %v2_100008f8 to i32*
  store i32 268445152, i32* %v2_10000914, align 4
  %v0_10000918 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000918 = mul i32 %v0_10000918, 4
  store i32 %v1_10000918, i32* %r4.global-to-local, align 4
  %v0_1000091c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000091c = trunc i32 %v0_1000091c to i8
  %v2_1000091c = load i32, i32* %r28.global-to-local, align 4
  %v3_1000091c = add i32 %v2_1000091c, 4
  %v4_1000091c = inttoptr i32 %v3_1000091c to i8*
  store i8 %v1_1000091c, i8* %v4_1000091c, align 1
  %v0_10000920 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000920 = add i32 %v0_10000920, 4
  store i32 %v1_10000920, i32* %r4.global-to-local, align 4
  store i32 268437800, i32* @lr, align 4
  %v3_10000924 = call i32 @function_1000a2e8(i32 %v3_10000910, i32 %v1_10000920, i32 268445152)
  %v3_10000928 = load i8, i8* @global_var_1001c250.9, align 1
  %v4_10000928 = zext i8 %v3_10000928 to i32
  store i32 %v3_10000924, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c251.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000938 = mul nuw nsw i32 %v4_10000928, 4
  %v0_1000093c = load i32, i32* @r28, align 4
  %v3_1000093c = add i32 %v1_10000938, %v3_10000924
  %v4_1000093c = inttoptr i32 %v3_1000093c to i32*
  store i32 %v0_1000093c, i32* %v4_1000093c, align 4
  %v0_10000944 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000944, i32* @global_var_1001c254.10, align 4
  %v0_10000948 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000948 = trunc i32 %v0_10000948 to i8
  store i8 %v1_10000948, i8* @global_var_1001c250.9, align 1
  store i32 268437840, i32* @lr, align 4
  %v2_1000094c = call i32 @function_1000a178(i32 1, i32 8)
  %v3_10000950 = load i8, i8* @global_var_1001c250.9, align 1
  %v4_10000950 = zext i8 %v3_10000950 to i32
  store i32 %v4_10000950, i32* %r4.global-to-local, align 4
  store i32 %v2_1000094c, i32* %r28.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v3_10000964 = load i32, i32* @global_var_1001c254.10, align 4
  %v2_10000968 = inttoptr i32 %v2_1000094c to i32*
  store i32 268443544, i32* %v2_10000968, align 4
  %v0_1000096c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000096c = mul i32 %v0_1000096c, 4
  store i32 %v1_1000096c, i32* %r4.global-to-local, align 4
  %v0_10000970 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000970 = trunc i32 %v0_10000970 to i8
  %v2_10000970 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000970 = add i32 %v2_10000970, 4
  %v4_10000970 = inttoptr i32 %v3_10000970 to i8*
  store i8 %v1_10000970, i8* %v4_10000970, align 1
  %v0_10000974 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000974 = add i32 %v0_10000974, 4
  store i32 %v1_10000974, i32* %r4.global-to-local, align 4
  store i32 268437884, i32* @lr, align 4
  %v3_10000978 = call i32 @function_1000a2e8(i32 %v3_10000964, i32 %v1_10000974, i32 268443544)
  %v3_1000097c = load i8, i8* @global_var_1001c250.9, align 1
  %v4_1000097c = zext i8 %v3_1000097c to i32
  store i32 %v3_10000978, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c251.13 to i32), i32* %r0.global-to-local, align 4
  %v1_1000098c = mul nuw nsw i32 %v4_1000097c, 4
  %v0_10000990 = load i32, i32* @r28, align 4
  %v3_10000990 = add i32 %v1_1000098c, %v3_10000978
  %v4_10000990 = inttoptr i32 %v3_10000990 to i32*
  store i32 %v0_10000990, i32* %v4_10000990, align 4
  %v0_10000998 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000998, i32* @global_var_1001c254.10, align 4
  %v0_1000099c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000099c = trunc i32 %v0_1000099c to i8
  store i8 %v1_1000099c, i8* @global_var_1001c250.9, align 1
  store i32 268437924, i32* @lr, align 4
  %v2_100009a0 = call i32 @function_1000a178(i32 1, i32 8)
  %v3_100009a4 = load i8, i8* @global_var_1001c250.9, align 1
  %v4_100009a4 = zext i8 %v3_100009a4 to i32
  store i32 %v4_100009a4, i32* %r4.global-to-local, align 4
  store i32 %v2_100009a0, i32* %r28.global-to-local, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v3_100009b8 = load i32, i32* @global_var_1001c254.10, align 4
  %v2_100009bc = inttoptr i32 %v2_100009a0 to i32*
  store i32 268441936, i32* %v2_100009bc, align 4
  %v0_100009c0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100009c0 = mul i32 %v0_100009c0, 4
  store i32 %v1_100009c0, i32* %r4.global-to-local, align 4
  %v0_100009c4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100009c4 = trunc i32 %v0_100009c4 to i8
  %v2_100009c4 = load i32, i32* %r28.global-to-local, align 4
  %v3_100009c4 = add i32 %v2_100009c4, 4
  %v4_100009c4 = inttoptr i32 %v3_100009c4 to i8*
  store i8 %v1_100009c4, i8* %v4_100009c4, align 1
  %v0_100009c8 = load i32, i32* %r4.global-to-local, align 4
  %v1_100009c8 = add i32 %v0_100009c8, 4
  store i32 %v1_100009c8, i32* %r4.global-to-local, align 4
  store i32 268437968, i32* @lr, align 4
  %v3_100009cc = call i32 @function_1000a2e8(i32 %v3_100009b8, i32 %v1_100009c8, i32 268441936)
  %v3_100009d0 = load i8, i8* @global_var_1001c250.9, align 1
  %v4_100009d0 = zext i8 %v3_100009d0 to i32
  store i32 %v3_100009cc, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c251.13 to i32), i32* %r0.global-to-local, align 4
  %v1_100009e0 = mul nuw nsw i32 %v4_100009d0, 4
  %v0_100009e4 = load i32, i32* @r28, align 4
  %v3_100009e4 = add i32 %v1_100009e0, %v3_100009cc
  %v4_100009e4 = inttoptr i32 %v3_100009e4 to i32*
  store i32 %v0_100009e4, i32* %v4_100009e4, align 4
  %v0_100009ec = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100009ec, i32* @global_var_1001c254.10, align 4
  %v0_100009f0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100009f0 = trunc i32 %v0_100009f0 to i8
  store i8 %v1_100009f0, i8* @global_var_1001c250.9, align 1
  store i32 268438008, i32* @lr, align 4
  %v2_100009f4 = call i32 @function_1000a178(i32 1, i32 8)
  %v3_100009f8 = load i8, i8* @global_var_1001c250.9, align 1
  %v4_100009f8 = zext i8 %v3_100009f8 to i32
  store i32 %v4_100009f8, i32* %r4.global-to-local, align 4
  store i32 %v2_100009f4, i32* %r28.global-to-local, align 4
  store i32 6, i32* %r0.global-to-local, align 4
  %v3_10000a0c = load i32, i32* @global_var_1001c254.10, align 4
  %v2_10000a10 = inttoptr i32 %v2_100009f4 to i32*
  store i32 268439748, i32* %v2_10000a10, align 4
  %v0_10000a14 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000a14 = mul i32 %v0_10000a14, 4
  store i32 %v1_10000a14, i32* %r4.global-to-local, align 4
  %v0_10000a18 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000a18 = trunc i32 %v0_10000a18 to i8
  %v2_10000a18 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000a18 = add i32 %v2_10000a18, 4
  %v4_10000a18 = inttoptr i32 %v3_10000a18 to i8*
  store i8 %v1_10000a18, i8* %v4_10000a18, align 1
  %v0_10000a1c = load i32, i32* %r4.global-to-local, align 4
  %v1_10000a1c = add i32 %v0_10000a1c, 4
  store i32 %v1_10000a1c, i32* %r4.global-to-local, align 4
  store i32 268438052, i32* @lr, align 4
  %v3_10000a20 = call i32 @function_1000a2e8(i32 %v3_10000a0c, i32 %v1_10000a1c, i32 268439748)
  %v3_10000a24 = load i8, i8* @global_var_1001c250.9, align 1
  %v4_10000a24 = zext i8 %v3_10000a24 to i32
  store i32 %v3_10000a20, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c251.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000a34 = mul nuw nsw i32 %v4_10000a24, 4
  %v0_10000a38 = load i32, i32* @r28, align 4
  %v3_10000a38 = add i32 %v1_10000a34, %v3_10000a20
  %v4_10000a38 = inttoptr i32 %v3_10000a38 to i32*
  store i32 %v0_10000a38, i32* %v4_10000a38, align 4
  %v0_10000a40 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000a40, i32* @global_var_1001c254.10, align 4
  %v0_10000a44 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000a44 = trunc i32 %v0_10000a44 to i8
  store i8 %v1_10000a44, i8* @global_var_1001c250.9, align 1
  store i32 268438092, i32* @lr, align 4
  %v2_10000a48 = call i32 @function_1000a178(i32 1, i32 8)
  %v3_10000a4c = load i8, i8* @global_var_1001c250.9, align 1
  %v4_10000a4c = zext i8 %v3_10000a4c to i32
  store i32 %v4_10000a4c, i32* %r4.global-to-local, align 4
  store i32 %v2_10000a48, i32* %r28.global-to-local, align 4
  store i32 7, i32* %r0.global-to-local, align 4
  %v3_10000a60 = load i32, i32* @global_var_1001c254.10, align 4
  %v2_10000a64 = inttoptr i32 %v2_10000a48 to i32*
  store i32 268438276, i32* %v2_10000a64, align 4
  %v0_10000a68 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000a68 = mul i32 %v0_10000a68, 4
  store i32 %v1_10000a68, i32* %r4.global-to-local, align 4
  %v0_10000a6c = load i32, i32* %r0.global-to-local, align 4
  %v1_10000a6c = trunc i32 %v0_10000a6c to i8
  %v2_10000a6c = load i32, i32* %r28.global-to-local, align 4
  %v3_10000a6c = add i32 %v2_10000a6c, 4
  %v4_10000a6c = inttoptr i32 %v3_10000a6c to i8*
  store i8 %v1_10000a6c, i8* %v4_10000a6c, align 1
  %v0_10000a70 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000a70 = add i32 %v0_10000a70, 4
  store i32 %v1_10000a70, i32* %r4.global-to-local, align 4
  store i32 268438136, i32* @lr, align 4
  %v3_10000a74 = call i32 @function_1000a2e8(i32 %v3_10000a60, i32 %v1_10000a70, i32 268438276)
  %v3_10000a78 = load i8, i8* @global_var_1001c250.9, align 1
  %v4_10000a78 = zext i8 %v3_10000a78 to i32
  store i32 %v3_10000a74, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c251.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000a88 = mul nuw nsw i32 %v4_10000a78, 4
  %v0_10000a8c = load i32, i32* @r28, align 4
  %v3_10000a8c = add i32 %v1_10000a88, %v3_10000a74
  %v4_10000a8c = inttoptr i32 %v3_10000a8c to i32*
  store i32 %v0_10000a8c, i32* %v4_10000a8c, align 4
  %v0_10000a94 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000a94 = trunc i32 %v0_10000a94 to i8
  store i8 %v1_10000a94, i8* @global_var_1001c250.9, align 1
  %v0_10000a98 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000a98, i32* @global_var_1001c254.10, align 4
  store i32 268438176, i32* @lr, align 4
  %v2_10000a9c = call i32 @function_1000a178(i32 1, i32 8)
  %v3_10000aa0 = load i8, i8* @global_var_1001c250.9, align 1
  %v4_10000aa0 = zext i8 %v3_10000aa0 to i32
  store i32 %v4_10000aa0, i32* %r4.global-to-local, align 4
  store i32 %v2_10000a9c, i32* %r28.global-to-local, align 4
  store i32 9, i32* %r0.global-to-local, align 4
  %v3_10000ab4 = load i32, i32* @global_var_1001c254.10, align 4
  %v2_10000ab8 = inttoptr i32 %v2_10000a9c to i32*
  store i32 268441112, i32* %v2_10000ab8, align 4
  %v0_10000abc = load i32, i32* %r4.global-to-local, align 4
  %v1_10000abc = mul i32 %v0_10000abc, 4
  store i32 %v1_10000abc, i32* %r4.global-to-local, align 4
  %v0_10000ac0 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000ac0 = trunc i32 %v0_10000ac0 to i8
  %v2_10000ac0 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000ac0 = add i32 %v2_10000ac0, 4
  %v4_10000ac0 = inttoptr i32 %v3_10000ac0 to i8*
  store i8 %v1_10000ac0, i8* %v4_10000ac0, align 1
  %v0_10000ac4 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000ac4 = add i32 %v0_10000ac4, 4
  store i32 %v1_10000ac4, i32* %r4.global-to-local, align 4
  store i32 268438220, i32* @lr, align 4
  %v3_10000ac8 = call i32 @function_1000a2e8(i32 %v3_10000ab4, i32 %v1_10000ac4, i32 268441112)
  %v3_10000acc = load i8, i8* @global_var_1001c250.9, align 1
  %v4_10000acc = zext i8 %v3_10000acc to i32
  store i32 %v3_10000ac8, i32* @global_var_1001c254.10, align 4
  store i32 ptrtoint (i8* @global_var_1001c251.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000ad8 = mul nuw nsw i32 %v4_10000acc, 4
  %v0_10000adc = load i32, i32* @r28, align 4
  %v3_10000adc = add i32 %v1_10000ad8, %v3_10000ac8
  %v4_10000adc = inttoptr i32 %v3_10000adc to i32*
  store i32 %v0_10000adc, i32* %v4_10000adc, align 4
  %v0_10000ae4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000ae4 = trunc i32 %v0_10000ae4 to i8
  store i8 %v1_10000ae4, i8* @global_var_1001c250.9, align 1
  store i32 %v0_10000730, i32* %r0.global-to-local, align 4
  store i32 %v0_1000074c, i32* @r28, align 4
  ret i32 1

; uselistorder directives
  uselistorder i32 ptrtoint (i8* @global_var_1001c251.13 to i32), { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_1001c250.9, { 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_10000b04(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10000b04:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-90 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_10000b08 = load i32, i32* @lr, align 4
  store i32 %v0_10000b08, i32* %r0.global-to-local, align 4
  %v0_10000b0c = call i32 @__asm_mfcr()
  store i32 %v0_10000b0c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r25.global-to-local, align 4
  %v0_10000b1c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10000b0c, i32* %r18.global-to-local, align 4
  %v0_10000b50 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10000b58 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_10000b60 = load i32, i32* @r30, align 4
  %v0_10000b64 = load i32, i32* @r31, align 4
  store i32 268438392, i32* @lr, align 4
  %v2_10000b74 = call i32 @function_1000a178(i32 4, i32 4)
  store i32 %v2_10000b74, i32* %r19.global-to-local, align 4
  %v0_10000b7c = load i32, i32* @r28, align 4
  %v0_10000b88 = load i32, i32* @r29, align 4
  store i32 %v0_10000b88, i32* %r3.global-to-local, align 4
  store i32 268438416, i32* @lr, align 4
  %v4_10000b8c = inttoptr i32 %v0_10000b7c to i32*
  %v5_10000b8c = call i32 @function_100006a8(i32 %v0_10000b88, i32* %v4_10000b8c, i32 2, i32 0)
  %v0_10000b9c = load i32, i32* @r28, align 4
  %v1_10000ba0 = urem i32 %v5_10000b8c, 256
  store i32 %v1_10000ba0, i32* %r14.global-to-local, align 4
  %v0_10000ba4 = load i32, i32* @r29, align 4
  store i32 %v0_10000ba4, i32* %r3.global-to-local, align 4
  store i32 268438444, i32* @lr, align 4
  %v4_10000ba8 = inttoptr i32 %v0_10000b9c to i32*
  %v5_10000ba8 = call i32 @function_100006a8(i32 %v0_10000ba4, i32* %v4_10000ba8, i32 3, i32 65535)
  %v0_10000bac = load i32, i32* @r28, align 4
  store i32 %v5_10000ba8, i32* %r24.global-to-local, align 4
  %v0_10000bbc = load i32, i32* @r29, align 4
  store i32 %v0_10000bbc, i32* %r3.global-to-local, align 4
  store i32 268438468, i32* @lr, align 4
  %v4_10000bc0 = inttoptr i32 %v0_10000bac to i32*
  %v5_10000bc0 = call i32 @function_100006a8(i32 %v0_10000bbc, i32* %v4_10000bc0, i32 4, i32 64)
  %v0_10000bc4 = load i32, i32* @r28, align 4
  %v1_10000bd0 = urem i32 %v5_10000bc0, 256
  store i32 %v1_10000bd0, i32* %r20.global-to-local, align 4
  %v0_10000bd4 = load i32, i32* @r29, align 4
  store i32 %v0_10000bd4, i32* %r3.global-to-local, align 4
  store i32 268438492, i32* @lr, align 4
  %v4_10000bd8 = inttoptr i32 %v0_10000bc4 to i32*
  %v5_10000bd8 = call i32 @function_100006a8(i32 %v0_10000bd4, i32* %v4_10000bd8, i32 5, i32 1)
  %v0_10000be8 = load i32, i32* @r28, align 4
  %v1_10000bec = urem i32 %v5_10000bd8, 256
  store i32 %v1_10000bec, i32* @r31, align 4
  %v0_10000bf0 = load i32, i32* @r29, align 4
  store i32 %v0_10000bf0, i32* %r3.global-to-local, align 4
  store i32 268438520, i32* @lr, align 4
  %v4_10000bf4 = inttoptr i32 %v0_10000be8 to i32*
  %v5_10000bf4 = call i32 @function_100006a8(i32 %v0_10000bf0, i32* %v4_10000bf4, i32 6, i32 65535)
  %v0_10000bfc = load i32, i32* @r28, align 4
  store i32 %v5_10000bf4, i32* %r26.global-to-local, align 4
  %v0_10000c0c = load i32, i32* @r29, align 4
  store i32 %v0_10000c0c, i32* %r3.global-to-local, align 4
  store i32 268438548, i32* @lr, align 4
  %v4_10000c10 = inttoptr i32 %v0_10000bfc to i32*
  %v5_10000c10 = call i32 @function_100006a8(i32 %v0_10000c0c, i32* %v4_10000c10, i32 7, i32 65535)
  %v0_10000c14 = load i32, i32* @r28, align 4
  store i32 %v5_10000c10, i32* %r27.global-to-local, align 4
  %v0_10000c24 = load i32, i32* @r29, align 4
  store i32 %v0_10000c24, i32* %r3.global-to-local, align 4
  store i32 268438572, i32* @lr, align 4
  %v4_10000c28 = inttoptr i32 %v0_10000c14 to i32*
  %v5_10000c28 = call i32 @function_100006a8(i32 %v0_10000c24, i32* %v4_10000c28, i32 0, i32 512)
  %v0_10000c2c = load i32, i32* @r28, align 4
  store i32 %v5_10000c28, i32* %r15.global-to-local, align 4
  %v0_10000c3c = load i32, i32* @r29, align 4
  store i32 %v0_10000c3c, i32* %r3.global-to-local, align 4
  store i32 268438596, i32* @lr, align 4
  %v4_10000c40 = inttoptr i32 %v0_10000c2c to i32*
  %v5_10000c40 = call i32 @function_100006a8(i32 %v0_10000c3c, i32* %v4_10000c40, i32 1, i32 1)
  %v0_10000c44 = load i32, i32* @r28, align 4
  %v1_10000c50 = urem i32 %v5_10000c40, 256
  store i32 %v1_10000c50, i32* %r21.global-to-local, align 4
  %v0_10000c54 = load i32, i32* @r29, align 4
  store i32 %v0_10000c54, i32* %r3.global-to-local, align 4
  store i32 268438620, i32* @lr, align 4
  %v4_10000c58 = inttoptr i32 %v0_10000c44 to i32*
  %v5_10000c58 = call i32 @function_100006a8(i32 %v0_10000c54, i32* %v4_10000c58, i32 19, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10000c60 = load i32, i32* @global_var_1001c258.14, align 4
  %v0_10000c64 = load i32, i32* @r28, align 4
  store i32 %v5_10000c58, i32* %r30.global-to-local, align 4
  %v0_10000c70 = load i32, i32* @r29, align 4
  store i32 %v0_10000c70, i32* %r3.global-to-local, align 4
  store i32 268438648, i32* @lr, align 4
  %v4_10000c74 = inttoptr i32 %v0_10000c64 to i32*
  %v5_10000c74 = call i32 @function_100006a8(i32 %v0_10000c70, i32* %v4_10000c74, i32 25, i32 %v3_10000c60)
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268438668, i32* @lr, align 4
  %v3_10000c88 = call i32 @function_10009e1c(i32 2, i32 3, i32 6)
  store i32 %v3_10000c88, i32* %r3.global-to-local, align 4
  %v3_10000c8c = icmp eq i32 %v3_10000c88, -1
  store i1 %v3_10000c8c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10000c88, i32* %r23.global-to-local, align 4
  br i1 %v3_10000c8c, label %dec_label_pc_10000e30, label %dec_label_pc_10000c98

dec_label_pc_10000c98:                            ; preds = %dec_label_pc_10000b04
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10000ca4 = ptrtoint i32* %stack_var_-104 to i32
  store i32 1, i32* %stack_var_-104, align 4
  store i32 268438708, i32* @lr, align 4
  %v4_10000cb0 = call i32 @function_10009de0(i32 0, i32 3, i32 %v2_10000ca4, i32 4)
  store i32 %v4_10000cb0, i32* %r3.global-to-local, align 4
  %v3_10000cb4 = icmp eq i32 %v4_10000cb0, -1
  store i1 %v3_10000cb4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000cb4, label %dec_label_pc_10000e28, label %dec_label_pc_10000cbc

dec_label_pc_10000cbc:                            ; preds = %dec_label_pc_10000c98
  %v0_10000cbc = load i32, i32* %r18.global-to-local, align 4
  %v1_10000cbc = icmp slt i32 %v0_10000cbc, 0
  %v3_10000cbc = icmp eq i32 %v0_10000cbc, 0
  store i1 %v1_10000cbc, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10000cbc, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %v0_10000cc8 = load i32, i32* %r24.global-to-local, align 4
  %v1_10000cc8 = urem i32 %v0_10000cc8, 65536
  store i32 %v1_10000cc8, i32* %r24.global-to-local, align 4
  %v0_10000ccc = load i32, i32* %r26.global-to-local, align 4
  %v1_10000ccc = urem i32 %v0_10000ccc, 65536
  store i32 %v1_10000ccc, i32* %r16.global-to-local, align 4
  %v0_10000cd0 = load i32, i32* %r27.global-to-local, align 4
  %v1_10000cd0 = urem i32 %v0_10000cd0, 65536
  store i32 %v1_10000cd0, i32* %r17.global-to-local, align 4
  %v0_10000cd4 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000cd4 = urem i32 %v0_10000cd4, 256
  store i32 %v1_10000cd4, i32* %r3.global-to-local, align 4
  %tmp37 = icmp slt i32 %v0_10000cbc, 1
  br i1 %tmp37, label %dec_label_pc_10000e90, label %dec_label_pc_10000cdc

dec_label_pc_10000cdc:                            ; preds = %dec_label_pc_10000cbc
  %v0_10000cdc = load i32, i32* @r31, align 4
  %v3_10000cdc = icmp eq i32 %v0_10000cdc, 0
  store i1 %v3_10000cdc, i1* %cr2_eq.global-to-local, align 1
  %v3_10000ce0 = icmp eq i32 %v1_10000cd4, 0
  store i1 %v3_10000ce0, i1* %cr3_eq.global-to-local, align 1
  %v0_10000ce4 = load i32, i32* %r15.global-to-local, align 4
  %v1_10000ce4 = urem i32 %v0_10000ce4, 65536
  %v0_10000cc8.not = or i32 %v0_10000cc8, -65536
  %v1_10000ce8 = xor i32 %v0_10000cc8.not, 65535
  store i32 %v1_10000ce8, i32* %r11.global-to-local, align 4
  %v1_10000cf0 = add nuw nsw i32 %v1_10000ce4, 66
  store i32 %v1_10000cf0, i32* %r0.global-to-local, align 4
  %v1_10000cf4 = add nuw nsw i32 %v1_10000ce4, 28
  store i32 %v1_10000cf4, i32* %r9.global-to-local, align 4
  %fold = add i32 %v0_10000ce4, 66
  %v1_10000cf8 = urem i32 %fold, 65536
  store i32 %v1_10000cf8, i32* %r22.global-to-local, align 4
  %fold8 = add i32 %v0_10000ce4, 28
  %v1_10000cfc = urem i32 %fold8, 65536
  store i32 %v1_10000cfc, i32* %r26.global-to-local, align 4
  %v1_10000d00 = urem i32 %v1_10000ce8, 65536
  store i32 %v1_10000d00, i32* %r27.global-to-local, align 4
  %fold9 = add i32 %v0_10000ce4, 8
  %v1_10000d04 = urem i32 %fold9, 65536
  store i32 %v1_10000d04, i32* @r28, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10000d38

dec_label_pc_10000d10:                            ; preds = %dec_label_pc_10000e04
  %v0_10000d10 = load i32, i32* %r31.global-to-local, align 4
  %v1_10000d10 = add i32 %v0_10000d10, 16
  %v2_10000d10 = inttoptr i32 %v1_10000d10 to i32*
  %v3_10000d10 = load i32, i32* %v2_10000d10, align 4
  store i32 %v3_10000d10, i32* %r0.global-to-local, align 4
  %v1_10000d14 = load i32, i32* %r30.global-to-local, align 4
  %v2_10000d14 = add i32 %v1_10000d14, 16
  %v3_10000d14 = inttoptr i32 %v2_10000d14 to i32*
  store i32 %v3_10000d10, i32* %v3_10000d14, align 4
  br label %dec_label_pc_10000d18

dec_label_pc_10000d18:                            ; preds = %dec_label_pc_10000e20, %dec_label_pc_10000d10
  %v3_10000d18 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10000d18, i32* %r9.global-to-local, align 4
  %v0_10000d1c = load i32, i32* @r28, align 4
  %v1_10000d1c = trunc i32 %v0_10000d1c to i16
  %v2_10000d1c = load i32, i32* %r29.global-to-local, align 4
  %v3_10000d1c = add i32 %v2_10000d1c, 4
  %v4_10000d1c = inttoptr i32 %v3_10000d1c to i16*
  store i16 %v1_10000d1c, i16* %v4_10000d1c, align 2
  %v0_10000d20 = load i32, i32* %r9.global-to-local, align 4
  %v1_10000d20 = add i32 %v0_10000d20, 1
  store i32 %v1_10000d20, i32* %r31.global-to-local, align 4
  %v0_10000d24 = load i32, i32* %r16.global-to-local, align 4
  %v1_10000d24 = trunc i32 %v0_10000d24 to i16
  %v2_10000d24 = load i32, i32* %r29.global-to-local, align 4
  %v3_10000d24 = inttoptr i32 %v2_10000d24 to i16*
  store i16 %v1_10000d24, i16* %v3_10000d24, align 2
  %v0_10000d28 = load i32, i32* %r31.global-to-local, align 4
  %v1_10000d28 = load i32, i32* %r18.global-to-local, align 4
  %v2_10000d28 = icmp slt i32 %v0_10000d28, %v1_10000d28
  %v4_10000d28 = icmp eq i32 %v0_10000d28, %v1_10000d28
  store i1 %v4_10000d28, i1* %cr7_eq.global-to-local, align 1
  %v0_10000d2c = load i32, i32* %r17.global-to-local, align 4
  %v1_10000d2c = trunc i32 %v0_10000d2c to i16
  %v2_10000d2c = load i32, i32* %r29.global-to-local, align 4
  %v3_10000d2c = add i32 %v2_10000d2c, 2
  %v4_10000d2c = inttoptr i32 %v3_10000d2c to i16*
  store i16 %v1_10000d2c, i16* %v4_10000d2c, align 2
  %v0_10000d30 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10000d30, i32* %stack_var_-104, align 4
  br i1 %v2_10000d28, label %dec_label_pc_10000d38, label %dec_label_pc_10000e94

dec_label_pc_10000d38:                            ; preds = %dec_label_pc_10000d18, %dec_label_pc_10000cdc
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268438852, i32* @lr, align 4
  %v2_10000d40 = call i32 @function_1000a178(i32 1510, i32 4)
  store i32 %v2_10000d40, i32* %r3.global-to-local, align 4
  %v3_10000d44 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10000d44, i32* %r9.global-to-local, align 4
  %v0_10000d48 = load i32, i32* @r31, align 4
  %v1_10000d48 = mul i32 %v0_10000d48, 4
  store i32 %v1_10000d48, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r11.global-to-local, align 4
  %v1_10000d50 = load i32, i32* %r19.global-to-local, align 4
  %v3_10000d50 = add i32 %v1_10000d50, %v1_10000d48
  %v4_10000d50 = inttoptr i32 %v3_10000d50 to i32*
  store i32 %v2_10000d40, i32* %v4_10000d50, align 4
  %v0_10000d54 = load i32, i32* %r9.global-to-local, align 4
  %v1_10000d54 = mul i32 %v0_10000d54, 4
  store i32 %v1_10000d54, i32* %r9.global-to-local, align 4
  %v1_10000d58 = load i32, i32* %r19.global-to-local, align 4
  %v2_10000d58 = add i32 %v1_10000d58, %v1_10000d54
  %v3_10000d58 = inttoptr i32 %v2_10000d58 to i32*
  %v4_10000d58 = load i32, i32* %v3_10000d58, align 4
  store i32 %v4_10000d58, i32* %r31.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10000d60 = inttoptr i32 %v4_10000d58 to i32*
  %v2_10000d60 = load i32, i32* %v1_10000d60, align 4
  store i32 %v2_10000d60, i32* %r0.global-to-local, align 4
  %v1_10000d64 = add i32 %v4_10000d58, 38
  store i32 %v1_10000d64, i32* %r30.global-to-local, align 4
  %v0_10000d68 = load i32, i32* %r20.global-to-local, align 4
  %v1_10000d68 = trunc i32 %v0_10000d68 to i8
  %v3_10000d68 = add i32 %v4_10000d58, 8
  %v4_10000d68 = inttoptr i32 %v3_10000d68 to i8*
  store i8 %v1_10000d68, i8* %v4_10000d68, align 1
  %v0_10000d6c = load i32, i32* %r31.global-to-local, align 4
  %v1_10000d6c = add i32 %v0_10000d6c, 58
  store i32 %v1_10000d6c, i32* %r29.global-to-local, align 4
  %v1_10000d70 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10000d70, i32* %r0.global-to-local, align 4
  %v0_10000d74 = load i32, i32* %r24.global-to-local, align 4
  %v1_10000d74 = trunc i32 %v0_10000d74 to i16
  %v2_10000d74 = load i32, i32* %r31.global-to-local, align 4
  %v3_10000d74 = add i32 %v2_10000d74, 4
  %v4_10000d74 = inttoptr i32 %v3_10000d74 to i16*
  store i16 %v1_10000d74, i16* %v4_10000d74, align 2
  %v1_10000d78 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10000d78, i32* %r0.global-to-local, align 4
  %v0_10000d7c = load i32, i32* %r31.global-to-local, align 4
  %v1_10000d7c = add i32 %v0_10000d7c, 20
  store i32 %v1_10000d7c, i32* %r9.global-to-local, align 4
  %v2_10000d80 = inttoptr i32 %v0_10000d7c to i32*
  store i32 %v1_10000d78, i32* %v2_10000d80, align 4
  %v0_10000d84 = load i32, i32* %r31.global-to-local, align 4
  %v1_10000d84 = add i32 %v0_10000d84, 24
  store i32 %v1_10000d84, i32* %r11.global-to-local, align 4
  %v0_10000d88 = load i32, i32* %r14.global-to-local, align 4
  %v1_10000d88 = trunc i32 %v0_10000d88 to i8
  %v3_10000d88 = add i32 %v0_10000d84, 1
  %v4_10000d88 = inttoptr i32 %v3_10000d88 to i8*
  store i8 %v1_10000d88, i8* %v4_10000d88, align 1
  %v0_10000d8c = load i32, i32* %r22.global-to-local, align 4
  %v1_10000d8c = trunc i32 %v0_10000d8c to i16
  %v2_10000d8c = load i32, i32* %r31.global-to-local, align 4
  %v3_10000d8c = add i32 %v2_10000d8c, 2
  %v4_10000d8c = inttoptr i32 %v3_10000d8c to i16*
  store i16 %v1_10000d8c, i16* %v4_10000d8c, align 2
  %v0_10000d90 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10000d90, label %dec_label_pc_10000d9c, label %dec_label_pc_10000d94

dec_label_pc_10000d94:                            ; preds = %dec_label_pc_10000d38
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10000d98 = load i32, i32* %r31.global-to-local, align 4
  %v3_10000d98 = add i32 %v2_10000d98, 6
  %v4_10000d98 = inttoptr i32 %v3_10000d98 to i16*
  store i16 16384, i16* %v4_10000d98, align 2
  br label %dec_label_pc_10000d9c

dec_label_pc_10000d9c:                            ; preds = %dec_label_pc_10000d38, %dec_label_pc_10000d94
  %v2_10000da0 = load i32, i32* %r31.global-to-local, align 4
  %v3_10000da0 = add i32 %v2_10000da0, 9
  %v4_10000da0 = inttoptr i32 %v3_10000da0 to i8*
  store i8 47, i8* %v4_10000da0, align 1
  store i32 25944, i32* %r0.global-to-local, align 4
  %v2_10000da8 = load i32, i32* %r9.global-to-local, align 4
  %v3_10000da8 = add i32 %v2_10000da8, 2
  %v4_10000da8 = inttoptr i32 %v3_10000da8 to i16*
  store i16 25944, i16* %v4_10000da8, align 2
  %v2_10000db0 = load i32, i32* %r11.global-to-local, align 4
  %v3_10000db0 = add i32 %v2_10000db0, 12
  %v4_10000db0 = inttoptr i32 %v3_10000db0 to i16*
  store i16 2048, i16* %v4_10000db0, align 2
  %v3_10000db4 = load i32, i32* %stack_var_-104, align 4
  store i32 %v5_10000c74, i32* %r11.global-to-local, align 4
  %v1_10000dbc = mul i32 %v3_10000db4, 24
  store i32 %v1_10000dbc, i32* %r9.global-to-local, align 4
  %v0_10000dc0 = load i32, i32* %r31.global-to-local, align 4
  %v1_10000dc0 = add i32 %v0_10000dc0, 38
  %v2_10000dc0 = inttoptr i32 %v1_10000dc0 to i32*
  %v3_10000dc0 = load i32, i32* %v2_10000dc0, align 4
  store i32 %v3_10000dc0, i32* %r0.global-to-local, align 4
  %v2_10000dc4 = add i32 %v0_10000dc0, 12
  %v3_10000dc4 = inttoptr i32 %v2_10000dc4 to i32*
  store i32 %v5_10000c74, i32* %v3_10000dc4, align 4
  store i32 4, i32* %r11.global-to-local, align 4
  %v0_10000dcc = load i32, i32* %r9.global-to-local, align 4
  %v1_10000dcc = load i32, i32* %r25.global-to-local, align 4
  %v2_10000dcc = add i32 %v1_10000dcc, %v0_10000dcc
  store i32 %v2_10000dcc, i32* %r9.global-to-local, align 4
  %v1_10000dd0 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10000dd0, i32* %r0.global-to-local, align 4
  %v0_10000dd4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10000dd4 = add i32 %v0_10000dd4, 16
  %v2_10000dd4 = inttoptr i32 %v1_10000dd4 to i32*
  %v3_10000dd4 = load i32, i32* %v2_10000dd4, align 4
  store i32 %v3_10000dd4, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10000ddc = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10000ddc, i32* %r0.global-to-local, align 4
  %v1_10000de0 = load i32, i32* %r31.global-to-local, align 4
  %v2_10000de0 = add i32 %v1_10000de0, 38
  %v3_10000de0 = inttoptr i32 %v2_10000de0 to i32*
  store i32 %v1_10000ddc, i32* %v3_10000de0, align 4
  %v0_10000de4 = load i32, i32* %r11.global-to-local, align 4
  %v1_10000de4 = load i32, i32* %r31.global-to-local, align 4
  %v2_10000de4 = add i32 %v1_10000de4, 16
  %v3_10000de4 = inttoptr i32 %v2_10000de4 to i32*
  store i32 %v0_10000de4, i32* %v3_10000de4, align 4
  %v0_10000de8 = load i32, i32* %r14.global-to-local, align 4
  %v1_10000de8 = trunc i32 %v0_10000de8 to i8
  %v2_10000de8 = load i32, i32* %r30.global-to-local, align 4
  %v3_10000de8 = add i32 %v2_10000de8, 1
  %v4_10000de8 = inttoptr i32 %v3_10000de8 to i8*
  store i8 %v1_10000de8, i8* %v4_10000de8, align 1
  %v0_10000dec = load i32, i32* %r26.global-to-local, align 4
  %v1_10000dec = trunc i32 %v0_10000dec to i16
  %v2_10000dec = load i32, i32* %r30.global-to-local, align 4
  %v3_10000dec = add i32 %v2_10000dec, 2
  %v4_10000dec = inttoptr i32 %v3_10000dec to i16*
  store i16 %v1_10000dec, i16* %v4_10000dec, align 2
  %v0_10000df0 = load i32, i32* %r27.global-to-local, align 4
  %v1_10000df0 = trunc i32 %v0_10000df0 to i16
  %v2_10000df0 = load i32, i32* %r30.global-to-local, align 4
  %v3_10000df0 = add i32 %v2_10000df0, 4
  %v4_10000df0 = inttoptr i32 %v3_10000df0 to i16*
  store i16 %v1_10000df0, i16* %v4_10000df0, align 2
  %v0_10000df4 = load i32, i32* %r20.global-to-local, align 4
  %v1_10000df4 = trunc i32 %v0_10000df4 to i8
  %v2_10000df4 = load i32, i32* %r30.global-to-local, align 4
  %v3_10000df4 = add i32 %v2_10000df4, 8
  %v4_10000df4 = inttoptr i32 %v3_10000df4 to i8*
  store i8 %v1_10000df4, i8* %v4_10000df4, align 1
  %v0_10000df8 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10000df8, label %dec_label_pc_10000e04, label %dec_label_pc_10000dfc

dec_label_pc_10000dfc:                            ; preds = %dec_label_pc_10000d9c
  store i32 16384, i32* %r11.global-to-local, align 4
  %v2_10000e00 = load i32, i32* %r30.global-to-local, align 4
  %v3_10000e00 = add i32 %v2_10000e00, 6
  %v4_10000e00 = inttoptr i32 %v3_10000e00 to i16*
  store i16 16384, i16* %v4_10000e00, align 2
  br label %dec_label_pc_10000e04

dec_label_pc_10000e04:                            ; preds = %dec_label_pc_10000d9c, %dec_label_pc_10000dfc
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_10000e08 = load i32, i32* %r30.global-to-local, align 4
  %v3_10000e08 = add i32 %v2_10000e08, 9
  %v4_10000e08 = inttoptr i32 %v3_10000e08 to i8*
  store i8 17, i8* %v4_10000e08, align 1
  %v0_10000e0c = call i32 @function_10005f3c()
  store i32 %v0_10000e0c, i32* %r3.global-to-local, align 4
  %v1_10000e10 = add i32 %v0_10000e0c, -1024
  store i32 %v1_10000e10, i32* %r0.global-to-local, align 4
  %v1_10000e14 = load i32, i32* %r30.global-to-local, align 4
  %v2_10000e14 = add i32 %v1_10000e14, 12
  %v3_10000e14 = inttoptr i32 %v2_10000e14 to i32*
  store i32 %v0_10000e0c, i32* %v3_10000e14, align 4
  %v0_10000e18 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000e18 = sub i32 -1, %v0_10000e18
  store i32 %v1_10000e18, i32* %r0.global-to-local, align 4
  %v0_10000e1c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10000e1c, label %dec_label_pc_10000e20, label %dec_label_pc_10000d10

dec_label_pc_10000e20:                            ; preds = %dec_label_pc_10000e04
  %v1_10000e20 = load i32, i32* %r30.global-to-local, align 4
  %v2_10000e20 = add i32 %v1_10000e20, 16
  %v3_10000e20 = inttoptr i32 %v2_10000e20 to i32*
  store i32 %v1_10000e18, i32* %v3_10000e20, align 4
  br label %dec_label_pc_10000d18

dec_label_pc_10000e28:                            ; preds = %dec_label_pc_10000c98
  %v0_10000e28 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10000e28, i32* %r3.global-to-local, align 4
  store i32 268439088, i32* @lr, align 4
  %v0_10000e2c = call i32 @function_100090cc()
  store i32 %v0_10000e2c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000e30

dec_label_pc_10000e30:                            ; preds = %dec_label_pc_10000b04, %dec_label_pc_10000e28
  store i32 %v0_10000b1c, i32* %r0.global-to-local, align 4
  %v1_10000e44 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10000b0c)
  store i32 %v0_10000b50, i32* %r28.global-to-local, align 4
  store i32 %v0_10000b58, i32* %r29.global-to-local, align 4
  store i32 %v0_10000b60, i32* %r30.global-to-local, align 4
  store i32 %v0_10000b64, i32* %r31.global-to-local, align 4
  %v0_10000e8c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10000e8c

dec_label_pc_10000e90:                            ; preds = %dec_label_pc_10000cbc
  %v3_10000e90 = icmp eq i32 %v1_10000cd4, 0
  store i1 %v3_10000e90, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_10000e94

dec_label_pc_10000e94:                            ; preds = %dec_label_pc_10000d18, %dec_label_pc_10000e90
  store i32 %v5_10000c74, i32* %r0.global-to-local, align 4
  %v0_10000e98 = load i32, i32* %r21.global-to-local, align 4
  %v3_10000e98 = icmp eq i32 %v0_10000e98, 0
  store i1 %v3_10000e98, i1* %cr2_eq.global-to-local, align 1
  %v2_10000e9c = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_10000e9c, i32* %r14.global-to-local, align 4
  %v0_10000ea0 = load i32, i32* %r15.global-to-local, align 4
  %v1_10000ea0 = add i32 %v0_10000ea0, 8
  store i32 %v1_10000ea0, i32* %r21.global-to-local, align 4
  %v3_10000ea4 = icmp eq i32 %v5_10000c74, -1
  store i1 %v3_10000ea4, i1* %cr7_eq.global-to-local, align 1
  %v1_10000ea8 = add i32 %v0_10000ea0, 66
  store i32 %v1_10000ea8, i32* %r22.global-to-local, align 4
  %v0_10000eac = call i32 @__asm_mfcr()
  store i32 %v0_10000eac, i32* %r3.global-to-local, align 4
  %v1_10000eb0 = mul i32 %v0_10000eac, 268435456
  store i32 %v1_10000eb0, i32* %r20.global-to-local, align 4
  %v2_10000f44 = ptrtoint i32* %stack_var_-100 to i32
  %v2_10000f68 = ptrtoint i32* %stack_var_-92 to i32
  %v2_10000f78 = ptrtoint i32* %stack_var_-90 to i32
  %v0_10000eb4.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10000eb4.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10000eb4.outer

dec_label_pc_10000eb4.outer:                      ; preds = %dec_label_pc_10001018, %dec_label_pc_10000e94
  %v1_10000eb4.ph = phi i1 [ %v1_10000eb4.pre, %dec_label_pc_10000e94 ], [ %v1_10001018, %dec_label_pc_10001018 ]
  %v0_10000eb4.ph = phi i1 [ %v0_10000eb4.pre, %dec_label_pc_10000e94 ], [ %v0_10001018, %dec_label_pc_10001018 ]
  %v2_10000eb4 = or i1 %v1_10000eb4.ph, %v0_10000eb4.ph
  br label %dec_label_pc_10000eb4

dec_label_pc_10000eb4:                            ; preds = %dec_label_pc_10000eb4.outer, %dec_label_pc_10000eb4
  br i1 %v2_10000eb4, label %dec_label_pc_10000eb4, label %dec_label_pc_10000eb8

dec_label_pc_10000eb8:                            ; preds = %dec_label_pc_10000eb4, %dec_label_pc_10001018
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10000ec8

dec_label_pc_10000ec8:                            ; preds = %dec_label_pc_10000f88, %dec_label_pc_10000eb8
  %v0_10000ec8 = phi i32 [ %v1_10001008, %dec_label_pc_10000f88 ], [ 0, %dec_label_pc_10000eb8 ]
  %v1_10000ec8 = mul i32 %v0_10000ec8, 24
  store i32 %v1_10000ec8, i32* %r0.global-to-local, align 4
  %v1_10000ecc = mul i32 %v0_10000ec8, 4
  store i32 %v1_10000ecc, i32* %r11.global-to-local, align 4
  %v1_10000ed0 = load i32, i32* %r19.global-to-local, align 4
  %v2_10000ed0 = add i32 %v1_10000ed0, %v1_10000ecc
  %v3_10000ed0 = inttoptr i32 %v2_10000ed0 to i32*
  %v4_10000ed0 = load i32, i32* %v3_10000ed0, align 4
  store i32 %v4_10000ed0, i32* %r28.global-to-local, align 4
  %v1_10000ed4 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000ed4 = add i32 %v1_10000ed4, %v1_10000ec8
  %v1_10000ed8 = add i32 %v2_10000ed4, 20
  %v2_10000ed8 = inttoptr i32 %v1_10000ed8 to i8*
  %v3_10000ed8 = load i8, i8* %v2_10000ed8, align 1
  %v4_10000ed8 = zext i8 %v3_10000ed8 to i32
  store i32 %v4_10000ed8, i32* %r9.global-to-local, align 4
  %v1_10000edc = add i32 %v4_10000ed0, 24
  store i32 %v1_10000edc, i32* @r30, align 4
  %v1_10000ee0 = add i32 %v4_10000ed0, 38
  store i32 %v1_10000ee0, i32* @r31, align 4
  %v1_10000ee4 = add i32 %v4_10000ed0, 58
  store i32 %v1_10000ee4, i32* %r27.global-to-local, align 4
  %v3_10000ee8 = icmp eq i8 %v3_10000ed8, 31
  store i1 %v3_10000ee8, i1* %cr7_eq.global-to-local, align 1
  %tmp39 = icmp ult i8 %v3_10000ed8, 32
  br i1 %tmp39, label %dec_label_pc_10001020, label %dec_label_pc_10000ef0

dec_label_pc_10000ef0:                            ; preds = %dec_label_pc_10000ec8
  %v0_10000ef0 = load i32, i32* %r20.global-to-local, align 4
  %v1_10000ef0 = mul i32 %v0_10000ef0, 16
  %v2_10000ef0 = udiv i32 %v0_10000ef0, 268435456
  %v3_10000ef0 = or i32 %v2_10000ef0, %v1_10000ef0
  store i32 %v3_10000ef0, i32* %r20.global-to-local, align 4
  %v1_10000ef4 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10000ef0)
  %v1_10000ef8 = mul nuw i32 %v2_10000ef0, 268435456
  %v2_10000ef8 = urem i32 %v0_10000ef0, 268435456
  %v3_10000ef8 = or i32 %v1_10000ef8, %v2_10000ef8
  store i32 %v3_10000ef8, i32* %r20.global-to-local, align 4
  %v0_10000efc = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10000efc, label %dec_label_pc_10001054, label %dec_label_pc_10000f00

dec_label_pc_10000f00:                            ; preds = %dec_label_pc_10001020, %dec_label_pc_10000ef0
  store i32 65535, i32* @r29, align 4
  %v0_10000f08 = load i32, i32* %r24.global-to-local, align 4
  %v4_10000f08 = icmp eq i32 %v0_10000f08, 65535
  store i1 %v4_10000f08, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10000f08, label %dec_label_pc_1000106c, label %dec_label_pc_10000f10

dec_label_pc_10000f10:                            ; preds = %dec_label_pc_10001054, %dec_label_pc_10000f00
  %v1_10000f10 = phi i32 [ %v1_10001064, %dec_label_pc_10001054 ], [ 65535, %dec_label_pc_10000f00 ]
  %v0_10000f10 = load i32, i32* %r16.global-to-local, align 4
  %v4_10000f10 = icmp eq i32 %v0_10000f10, %v1_10000f10
  store i1 %v4_10000f10, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10000f10, label %dec_label_pc_1000108c, label %dec_label_pc_10000f18

dec_label_pc_10000f18:                            ; preds = %dec_label_pc_1000106c.dec_label_pc_10000f18_crit_edge, %dec_label_pc_10000f10
  %v1_10000f18 = phi i32 [ %v1_10000f18.pre, %dec_label_pc_1000106c.dec_label_pc_10000f18_crit_edge ], [ %v1_10000f10, %dec_label_pc_10000f10 ]
  %v0_10000f18 = load i32, i32* %r17.global-to-local, align 4
  %v4_10000f18 = icmp eq i32 %v0_10000f18, %v1_10000f18
  store i1 %v4_10000f18, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10000f18, label %dec_label_pc_1000109c, label %dec_label_pc_10000f20

dec_label_pc_10000f20:                            ; preds = %dec_label_pc_1000108c, %dec_label_pc_10000f18
  %v0_10000f20 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10000f20, label %dec_label_pc_100010a8, label %dec_label_pc_10000f24

dec_label_pc_10000f24:                            ; preds = %dec_label_pc_1000109c, %dec_label_pc_10000f20
  %v0_10000f24 = load i32, i32* %r28.global-to-local, align 4
  %v1_10000f24 = add i32 %v0_10000f24, 16
  %v2_10000f24 = inttoptr i32 %v1_10000f24 to i32*
  %v3_10000f24 = load i32, i32* %v2_10000f24, align 4
  store i32 %v3_10000f24, i32* %r0.global-to-local, align 4
  %v1_10000f28 = load i32, i32* @r31, align 4
  %v2_10000f28 = add i32 %v1_10000f28, 16
  %v3_10000f28 = inttoptr i32 %v2_10000f28 to i32*
  store i32 %v3_10000f24, i32* %v3_10000f28, align 4
  br label %dec_label_pc_10000f2c

dec_label_pc_10000f2c:                            ; preds = %dec_label_pc_100010a8, %dec_label_pc_10000f24
  %v0_10000f2c = call i32 @function_10005f3c()
  store i32 %v0_10000f2c, i32* %r3.global-to-local, align 4
  store i32 %v0_10000f2c, i32* %stack_var_-100, align 4
  %v0_10000f34 = call i32 @function_10005f3c()
  store i32 %v0_10000f34, i32* %r3.global-to-local, align 4
  store i32 %v0_10000f34, i32* %stack_var_-96, align 4
  %v0_10000f3c = call i32 @function_10005f3c()
  store i32 %v0_10000f3c, i32* %stack_var_-92, align 4
  %v0_10000f48 = load i32, i32* @r30, align 4
  store i32 %v0_10000f48, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000f54.15 to i32), i32* @lr, align 4
  %v3_10000f50 = call i32 @function_10008990(i32 %v0_10000f48, i32 %v2_10000f44, i32 4)
  %v0_10000f54 = load i32, i32* @r30, align 4
  %v1_10000f54 = add i32 %v0_10000f54, 6
  store i32 %v1_10000f54, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000f64.16 to i32), i32* @lr, align 4
  %v3_10000f60 = call i32 @function_10008990(i32 %v1_10000f54, i32 %v2_10000e9c, i32 4)
  %v0_10000f64 = load i32, i32* @r30, align 4
  %v1_10000f64 = add i32 %v0_10000f64, 4
  store i32 %v1_10000f64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000f74.17 to i32), i32* @lr, align 4
  %v3_10000f70 = call i32 @function_10008990(i32 %v1_10000f64, i32 %v2_10000f68, i32 2)
  %v0_10000f74 = load i32, i32* @r30, align 4
  %v1_10000f74 = add i32 %v0_10000f74, 10
  store i32 %v1_10000f74, i32* %r3.global-to-local, align 4
  store i32 268439428, i32* @lr, align 4
  %v3_10000f80 = call i32 @function_10008990(i32 %v1_10000f74, i32 %v2_10000f78, i32 2)
  store i32 %v3_10000f80, i32* %r3.global-to-local, align 4
  %v0_10000f84 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10000f84, label %dec_label_pc_10000f88, label %dec_label_pc_100010b4

dec_label_pc_10000f88:                            ; preds = %dec_label_pc_10000f2c, %dec_label_pc_100010b4
  %v0_10000f88 = load i32, i32* %r26.global-to-local, align 4
  %v1_10000f88 = trunc i32 %v0_10000f88 to i16
  %v2_10000f88 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000f88 = add i32 %v2_10000f88, 10
  %v4_10000f88 = inttoptr i32 %v3_10000f88 to i16*
  store i16 %v1_10000f88, i16* %v4_10000f88, align 2
  %v0_10000f90 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10000f90, i32* @r3, align 4
  %v2_10000f94 = call i32 @function_100043cc(i32 %v0_10000f90, i32 20)
  %v3_10000f94 = trunc i32 %v2_10000f94 to i16
  %v4_10000f9c = add i32 %v0_10000f90, 10
  %v5_10000f9c = inttoptr i32 %v4_10000f9c to i16*
  store i16 %v3_10000f94, i16* %v5_10000f9c, align 2
  %v0_10000fa0 = load i32, i32* @r31, align 4
  store i32 %v0_10000fa0, i32* @r3, align 4
  %v0_10000fa4 = load i32, i32* %r26.global-to-local, align 4
  %v1_10000fa4 = trunc i32 %v0_10000fa4 to i16
  %v3_10000fa4 = add i32 %v0_10000fa0, 10
  %v4_10000fa4 = inttoptr i32 %v3_10000fa4 to i16*
  store i16 %v1_10000fa4, i16* %v4_10000fa4, align 2
  %v2_10000fa8 = call i32 @function_100043cc(i32 %v0_10000fa0, i32 20)
  %v3_10000fa8 = trunc i32 %v2_10000fa8 to i16
  %v0_10000fac = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10000fac, i32* @r4, align 4
  %v3_10000fb0 = load i32, i32* @r31, align 4
  %v4_10000fb0 = add i32 %v3_10000fb0, 10
  %v5_10000fb0 = inttoptr i32 %v4_10000fb0 to i16*
  store i16 %v3_10000fa8, i16* %v5_10000fb0, align 2
  %v0_10000fb4 = load i32, i32* %r21.global-to-local, align 4
  %v0_10000fb8 = load i32, i32* %r26.global-to-local, align 4
  %v1_10000fb8 = trunc i32 %v0_10000fb8 to i16
  %v2_10000fb8 = load i32, i32* %r27.global-to-local, align 4
  %v3_10000fb8 = add i32 %v2_10000fb8, 6
  %v4_10000fb8 = inttoptr i32 %v3_10000fb8 to i16*
  store i16 %v1_10000fb8, i16* %v4_10000fb8, align 2
  %v0_10000fbc = load i32, i32* @r31, align 4
  store i32 %v0_10000fbc, i32* %r3.global-to-local, align 4
  %v0_10000fc0 = load i32, i32* %r27.global-to-local, align 4
  %v1_10000fc0 = add i32 %v0_10000fc0, 4
  %v2_10000fc0 = inttoptr i32 %v1_10000fc0 to i16*
  %v3_10000fc0 = load i16, i16* %v2_10000fc0, align 2
  %v4_10000fc0 = zext i16 %v3_10000fc0 to i32
  %v4_10000fc4 = call i32 @function_10004430(i32 %v0_10000fbc, i32 %v0_10000fac, i32 %v4_10000fc0, i32 %v0_10000fb4)
  %v5_10000fc4 = trunc i32 %v4_10000fc4 to i16
  store i32 %v4_10000fc4, i32* %r3.global-to-local, align 4
  %v3_10000fc8 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10000fc8, i32* %r0.global-to-local, align 4
  %v0_10000fcc = load i32, i32* %r28.global-to-local, align 4
  %v1_10000fcc = add i32 %v0_10000fcc, 16
  %v2_10000fcc = inttoptr i32 %v1_10000fcc to i32*
  %v3_10000fcc = load i32, i32* %v2_10000fcc, align 4
  store i32 %v3_10000fcc, i32* %r11.global-to-local, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10000fd4 = mul i32 %v3_10000fc8, 24
  store i32 %v1_10000fd4, i32* %r0.global-to-local, align 4
  %v3_10000fd8 = load i32, i32* %r27.global-to-local, align 4
  %v4_10000fd8 = add i32 %v3_10000fd8, 6
  %v5_10000fd8 = inttoptr i32 %v4_10000fd8 to i16*
  store i16 %v5_10000fc4, i16* %v5_10000fd8, align 2
  %v0_10000fdc = load i32, i32* %r28.global-to-local, align 4
  %v0_10000fe0 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10000fe0, i32* %r3.global-to-local, align 4
  %v0_10000fe4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000fe4 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000fe4 = add i32 %v1_10000fe4, %v0_10000fe4
  %v0_10000fe8 = load i32, i32* %r9.global-to-local, align 4
  %v3_10000fe8 = trunc i32 %v0_10000fe8 to i16
  %v5_10000fe8 = inttoptr i32 %v2_10000fe4 to i16*
  store i16 %v3_10000fe8, i16* %v5_10000fe8, align 2
  %v0_10000fec = load i32, i32* %r11.global-to-local, align 4
  %v2_10000fec = add i32 %v2_10000fe4, 4
  %v3_10000fec = inttoptr i32 %v2_10000fec to i32*
  store i32 %v0_10000fec, i32* %v3_10000fec, align 4
  %v0_10000ff0 = load i32, i32* %r22.global-to-local, align 4
  %v0_10000ff4 = load i32, i32* %r26.global-to-local, align 4
  %v1_10000ff4 = trunc i32 %v0_10000ff4 to i16
  %v3_10000ff4 = add i32 %v2_10000fe4, 2
  %v4_10000ff4 = inttoptr i32 %v3_10000ff4 to i16*
  store i16 %v1_10000ff4, i16* %v4_10000ff4, align 2
  store i32 268439556, i32* @lr, align 4
  %v6_10001000 = call i32 @function_10009da0(i32 %v0_10000fe0, i32 %v0_10000fdc, i32 %v0_10000ff0, i32 16384, i32 %v2_10000fe4, i32 16)
  store i32 %v6_10001000, i32* %r3.global-to-local, align 4
  %v3_10001004 = load i32, i32* %stack_var_-104, align 4
  %v1_10001008 = add i32 %v3_10001004, 1
  store i32 %v1_10001008, i32* %r9.global-to-local, align 4
  %v1_1000100c = load i32, i32* %r18.global-to-local, align 4
  %v2_1000100c = icmp slt i32 %v1_10001008, %v1_1000100c
  %v4_1000100c = icmp eq i32 %v1_10001008, %v1_1000100c
  store i1 %v4_1000100c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10001008, i32* %stack_var_-104, align 4
  br i1 %v2_1000100c, label %dec_label_pc_10000ec8, label %dec_label_pc_10001018

dec_label_pc_10001018:                            ; preds = %dec_label_pc_10000f88
  %v0_10001018 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10001018 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10001018 = or i1 %v0_10001018, %v1_10001018
  br i1 %v2_10001018, label %dec_label_pc_10000eb4.outer, label %dec_label_pc_10000eb8

dec_label_pc_10001020:                            ; preds = %dec_label_pc_10000ec8
  %v1_10001020 = add i32 %v2_10000ed4, 16
  %v2_10001020 = inttoptr i32 %v1_10001020 to i32*
  %v3_10001020 = load i32, i32* %v2_10001020, align 4
  store i32 %v3_10001020, i32* %r29.global-to-local, align 4
  %v0_10001024 = call i32 @function_10005f3c()
  store i32 %v0_10001024, i32* %r3.global-to-local, align 4
  %v3_10001028 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10001028, i32* %r9.global-to-local, align 4
  %v0_1000102c = load i32, i32* %r20.global-to-local, align 4
  %v1_1000102c = mul i32 %v0_1000102c, 16
  %v2_1000102c = udiv i32 %v0_1000102c, 268435456
  %v3_1000102c = or i32 %v2_1000102c, %v1_1000102c
  store i32 %v3_1000102c, i32* %r20.global-to-local, align 4
  %v1_10001030 = call %0 @__asm_mtcrf(i32 1, i32 %v3_1000102c)
  %v1_10001034 = mul nuw i32 %v2_1000102c, 268435456
  %v2_10001034 = urem i32 %v0_1000102c, 268435456
  %v3_10001034 = or i32 %v1_10001034, %v2_10001034
  store i32 %v3_10001034, i32* %r20.global-to-local, align 4
  %v0_10001038 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001038 = mul i32 %v0_10001038, 24
  %v1_1000103c = load i32, i32* %r25.global-to-local, align 4
  %v2_1000103c = add i32 %v1_1000103c, %v1_10001038
  store i32 %v2_1000103c, i32* %r9.global-to-local, align 4
  %v1_10001040 = add i32 %v2_1000103c, 20
  %v2_10001040 = inttoptr i32 %v1_10001040 to i8*
  %v3_10001040 = load i8, i8* %v2_10001040, align 1
  %v4_10001040 = zext i8 %v3_10001040 to i32
  store i32 %v4_10001040, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10001040, 64
  %v2_10001044 = zext i8 %tmp to i32
  %v3_10001044 = lshr i32 %v0_10001024, %v2_10001044
  store i32 %v3_10001044, i32* %r3.global-to-local, align 4
  %v0_10001048 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001048 = add i32 %v3_10001044, %v0_10001048
  store i32 %v2_10001048, i32* %r29.global-to-local, align 4
  %v1_1000104c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000104c = add i32 %v1_1000104c, 16
  %v3_1000104c = inttoptr i32 %v2_1000104c to i32*
  store i32 %v2_10001048, i32* %v3_1000104c, align 4
  %v0_10001050 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10001050, label %dec_label_pc_10001054, label %dec_label_pc_10000f00

dec_label_pc_10001054:                            ; preds = %dec_label_pc_10001020, %dec_label_pc_10000ef0
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10001058 = call i32 @function_10005f3c()
  store i32 %v0_10001058, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_10001060 = load i32, i32* %r28.global-to-local, align 4
  %v2_10001060 = add i32 %v1_10001060, 12
  %v3_10001060 = inttoptr i32 %v2_10001060 to i32*
  store i32 %v0_10001058, i32* %v3_10001060, align 4
  %v0_10001064 = load i32, i32* %r24.global-to-local, align 4
  %v1_10001064 = load i32, i32* @r29, align 4
  %v4_10001064 = icmp eq i32 %v0_10001064, %v1_10001064
  store i1 %v4_10001064, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10001064, label %dec_label_pc_1000106c, label %dec_label_pc_10000f10

dec_label_pc_1000106c:                            ; preds = %dec_label_pc_10001054, %dec_label_pc_10000f00
  %v0_1000106c = call i32 @function_10005f3c()
  %v0_10001070 = load i32, i32* %r16.global-to-local, align 4
  %v1_10001070 = load i32, i32* @r29, align 4
  %v4_10001070 = icmp eq i32 %v0_10001070, %v1_10001070
  store i1 %v4_10001070, i1* %cr7_eq.global-to-local, align 1
  %v1_10001074 = urem i32 %v0_1000106c, 65536
  store i32 %v1_10001074, i32* %r3.global-to-local, align 4
  %v1_10001078 = add nsw i32 %v1_10001074, -1000
  store i32 %v1_10001078, i32* %r0.global-to-local, align 4
  %v1_1000107c = trunc i32 %v0_1000106c to i16
  %v2_1000107c = load i32, i32* %r28.global-to-local, align 4
  %v3_1000107c = add i32 %v2_1000107c, 4
  %v4_1000107c = inttoptr i32 %v3_1000107c to i16*
  store i16 %v1_1000107c, i16* %v4_1000107c, align 2
  %v0_10001080 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001080 = sub i32 -1, %v0_10001080
  store i32 %v1_10001080, i32* %r0.global-to-local, align 4
  %v1_10001084 = trunc i32 %v1_10001080 to i16
  %v2_10001084 = load i32, i32* @r31, align 4
  %v3_10001084 = add i32 %v2_10001084, 4
  %v4_10001084 = inttoptr i32 %v3_10001084 to i16*
  store i16 %v1_10001084, i16* %v4_10001084, align 2
  br i1 %v4_10001070, label %dec_label_pc_1000108c, label %dec_label_pc_1000106c.dec_label_pc_10000f18_crit_edge

dec_label_pc_1000106c.dec_label_pc_10000f18_crit_edge: ; preds = %dec_label_pc_1000106c
  %v1_10000f18.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10000f18

dec_label_pc_1000108c:                            ; preds = %dec_label_pc_1000106c, %dec_label_pc_10000f10
  %v0_1000108c = call i32 @function_10005f3c()
  %v1_1000108c = trunc i32 %v0_1000108c to i16
  store i32 %v0_1000108c, i32* %r3.global-to-local, align 4
  %v0_10001090 = load i32, i32* %r17.global-to-local, align 4
  %v1_10001090 = load i32, i32* @r29, align 4
  %v4_10001090 = icmp eq i32 %v0_10001090, %v1_10001090
  store i1 %v4_10001090, i1* %cr7_eq.global-to-local, align 1
  %v3_10001094 = load i32, i32* %r28.global-to-local, align 4
  %v4_10001094 = add i32 %v3_10001094, 58
  %v5_10001094 = inttoptr i32 %v4_10001094 to i16*
  store i16 %v1_1000108c, i16* %v5_10001094, align 2
  br i1 %v4_10001090, label %dec_label_pc_1000109c, label %dec_label_pc_10000f20

dec_label_pc_1000109c:                            ; preds = %dec_label_pc_1000108c, %dec_label_pc_10000f18
  %v0_1000109c = call i32 @function_10005f3c()
  %v1_1000109c = trunc i32 %v0_1000109c to i16
  store i32 %v0_1000109c, i32* %r3.global-to-local, align 4
  %v3_100010a0 = load i32, i32* %r27.global-to-local, align 4
  %v4_100010a0 = add i32 %v3_100010a0, 2
  %v5_100010a0 = inttoptr i32 %v4_100010a0 to i16*
  store i16 %v1_1000109c, i16* %v5_100010a0, align 2
  %v0_100010a4 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100010a4, label %dec_label_pc_100010a8, label %dec_label_pc_10000f24

dec_label_pc_100010a8:                            ; preds = %dec_label_pc_1000109c, %dec_label_pc_10000f20
  %v0_100010a8 = call i32 @function_10005f3c()
  store i32 %v0_100010a8, i32* %r3.global-to-local, align 4
  %v1_100010ac = load i32, i32* @r31, align 4
  %v2_100010ac = add i32 %v1_100010ac, 16
  %v3_100010ac = inttoptr i32 %v2_100010ac to i32*
  store i32 %v0_100010a8, i32* %v3_100010ac, align 4
  br label %dec_label_pc_10000f2c

dec_label_pc_100010b4:                            ; preds = %dec_label_pc_10000f2c
  %v0_100010b4 = load i32, i32* %r27.global-to-local, align 4
  %v1_100010b4 = add i32 %v0_100010b4, 8
  store i32 %v1_100010b4, i32* @r3, align 4
  %v0_100010b8 = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_100010b8, i32* @r4, align 4
  %v0_100010bc = call i32 @function_10006110()
  store i32 %v0_100010bc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000f88

; uselistorder directives
  uselistorder i32 %v0_1000109c, { 1, 0 }
  uselistorder i32 %v0_1000108c, { 1, 0 }
  uselistorder i32 %v1_10001080, { 1, 0 }
  uselistorder i32 %v1_10001074, { 1, 0 }
  uselistorder i32 %v0_1000106c, { 1, 0 }
  uselistorder i32 %v1_10001064, { 1, 0 }
  uselistorder i32 %v0_1000102c, { 2, 1, 0 }
  uselistorder i1 %v1_10001018, { 1, 0 }
  uselistorder i1 %v0_10001018, { 1, 0 }
  uselistorder i32 %v1_10001008, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v2_10000fe4, { 0, 2, 1, 3 }
  uselistorder i32 %v4_10000fc4, { 1, 0 }
  uselistorder i32 %v0_10000ef0, { 2, 1, 0 }
  uselistorder i32 %v4_10000ed0, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10000ecc, { 1, 0 }
  uselistorder i32 %v1_10000e18, { 1, 0 }
  uselistorder i32 %v1_10000d54, { 1, 0 }
  uselistorder i32 %v1_10000d48, { 1, 0 }
  uselistorder i32 %v1_10000ce4, { 1, 0 }
  uselistorder i32 %v0_10000ce4, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10000cd4, { 1, 2, 0 }
  uselistorder i32 %v0_10000cc8, { 1, 0 }
  uselistorder i32 %v5_10000c74, { 0, 3, 1, 2 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 8, 9, 21, 22 }
  uselistorder i32* %r31.global-to-local, { 0, 9, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 1, 2, 3, 4, 16 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 2, 11, 12 }
  uselistorder i32* %r3.global-to-local, { 6, 7, 8, 9, 10, 11, 12, 13, 3, 14, 4, 15, 16, 17, 18, 19, 20, 21, 22, 1, 29, 23, 24, 25, 26, 27, 28, 5, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 2 }
  uselistorder i32* %r29.global-to-local, { 1, 0, 2, 3, 4, 8, 5, 6, 7 }
  uselistorder i32* %r27.global-to-local, { 5, 0, 1, 2, 3, 4, 6, 7, 8, 9, 10 }
  uselistorder i32* %r20.global-to-local, { 0, 1, 4, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 12, 26, 27, 28, 29, 30 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 2, 7, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr3_eq.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32 66, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000f88, { 1, 0 }
  uselistorder label %dec_label_pc_10000eb8, { 1, 0 }
  uselistorder label %dec_label_pc_10000eb4, { 1, 0 }
  uselistorder label %dec_label_pc_10000e94, { 1, 0 }
  uselistorder label %dec_label_pc_10000e30, { 1, 0 }
  uselistorder label %dec_label_pc_10000e04, { 1, 0 }
  uselistorder label %dec_label_pc_10000d9c, { 1, 0 }
}

define i32 @function_100010c4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100010c4:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_100010c8 = load i32, i32* @lr, align 4
  store i32 %v0_100010c8, i32* %r0.global-to-local, align 4
  %v0_100010cc = call i32 @__asm_mfcr()
  store i32 %v0_100010cc, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r26.global-to-local, align 4
  %v0_100010dc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_100010cc, i32* %r19.global-to-local, align 4
  %v0_10001110 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10001118 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_10001120 = load i32, i32* @r30, align 4
  %v0_10001124 = load i32, i32* @r31, align 4
  store i32 268439864, i32* @lr, align 4
  %v2_10001134 = call i32 @function_1000a178(i32 4, i32 4)
  store i32 %v2_10001134, i32* %r20.global-to-local, align 4
  %v0_1000113c = load i32, i32* @r28, align 4
  %v0_10001148 = load i32, i32* @r29, align 4
  store i32 %v0_10001148, i32* %r3.global-to-local, align 4
  store i32 268439888, i32* @lr, align 4
  %v4_1000114c = inttoptr i32 %v0_1000113c to i32*
  %v5_1000114c = call i32 @function_100006a8(i32 %v0_10001148, i32* %v4_1000114c, i32 2, i32 0)
  %v0_1000115c = load i32, i32* @r28, align 4
  %v1_10001160 = urem i32 %v5_1000114c, 256
  store i32 %v1_10001160, i32* %r14.global-to-local, align 4
  %v0_10001164 = load i32, i32* @r29, align 4
  store i32 %v0_10001164, i32* %r3.global-to-local, align 4
  store i32 268439916, i32* @lr, align 4
  %v4_10001168 = inttoptr i32 %v0_1000115c to i32*
  %v5_10001168 = call i32 @function_100006a8(i32 %v0_10001164, i32* %v4_10001168, i32 3, i32 65535)
  %v0_1000116c = load i32, i32* @r28, align 4
  store i32 %v5_10001168, i32* %r25.global-to-local, align 4
  %v0_1000117c = load i32, i32* @r29, align 4
  store i32 %v0_1000117c, i32* %r3.global-to-local, align 4
  store i32 268439940, i32* @lr, align 4
  %v4_10001180 = inttoptr i32 %v0_1000116c to i32*
  %v5_10001180 = call i32 @function_100006a8(i32 %v0_1000117c, i32* %v4_10001180, i32 4, i32 64)
  %v0_10001184 = load i32, i32* @r28, align 4
  %v1_10001190 = urem i32 %v5_10001180, 256
  store i32 %v1_10001190, i32* %r21.global-to-local, align 4
  %v0_10001194 = load i32, i32* @r29, align 4
  store i32 %v0_10001194, i32* %r3.global-to-local, align 4
  store i32 268439964, i32* @lr, align 4
  %v4_10001198 = inttoptr i32 %v0_10001184 to i32*
  %v5_10001198 = call i32 @function_100006a8(i32 %v0_10001194, i32* %v4_10001198, i32 5, i32 1)
  %v0_100011a8 = load i32, i32* @r28, align 4
  %v1_100011ac = urem i32 %v5_10001198, 256
  store i32 %v1_100011ac, i32* @r31, align 4
  %v0_100011b0 = load i32, i32* @r29, align 4
  store i32 %v0_100011b0, i32* %r3.global-to-local, align 4
  store i32 268439992, i32* @lr, align 4
  %v4_100011b4 = inttoptr i32 %v0_100011a8 to i32*
  %v5_100011b4 = call i32 @function_100006a8(i32 %v0_100011b0, i32* %v4_100011b4, i32 6, i32 65535)
  %v0_100011bc = load i32, i32* @r28, align 4
  store i32 %v5_100011b4, i32* %r24.global-to-local, align 4
  %v0_100011cc = load i32, i32* @r29, align 4
  store i32 %v0_100011cc, i32* %r3.global-to-local, align 4
  store i32 268440020, i32* @lr, align 4
  %v4_100011d0 = inttoptr i32 %v0_100011bc to i32*
  %v5_100011d0 = call i32 @function_100006a8(i32 %v0_100011cc, i32* %v4_100011d0, i32 7, i32 65535)
  %v0_100011d4 = load i32, i32* @r28, align 4
  store i32 %v5_100011d0, i32* %r27.global-to-local, align 4
  %v0_100011e4 = load i32, i32* @r29, align 4
  store i32 %v0_100011e4, i32* %r3.global-to-local, align 4
  store i32 268440044, i32* @lr, align 4
  %v4_100011e8 = inttoptr i32 %v0_100011d4 to i32*
  %v5_100011e8 = call i32 @function_100006a8(i32 %v0_100011e4, i32* %v4_100011e8, i32 0, i32 512)
  %v0_100011ec = load i32, i32* @r28, align 4
  store i32 %v5_100011e8, i32* %r16.global-to-local, align 4
  %v0_100011fc = load i32, i32* @r29, align 4
  store i32 %v0_100011fc, i32* %r3.global-to-local, align 4
  store i32 268440068, i32* @lr, align 4
  %v4_10001200 = inttoptr i32 %v0_100011ec to i32*
  %v5_10001200 = call i32 @function_100006a8(i32 %v0_100011fc, i32* %v4_10001200, i32 1, i32 1)
  %v0_10001204 = load i32, i32* @r28, align 4
  %v1_10001210 = urem i32 %v5_10001200, 256
  store i32 %v1_10001210, i32* %r15.global-to-local, align 4
  %v0_10001214 = load i32, i32* @r29, align 4
  store i32 %v0_10001214, i32* %r3.global-to-local, align 4
  store i32 268440092, i32* @lr, align 4
  %v4_10001218 = inttoptr i32 %v0_10001204 to i32*
  %v5_10001218 = call i32 @function_100006a8(i32 %v0_10001214, i32* %v4_10001218, i32 19, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10001220 = load i32, i32* @global_var_1001c258.14, align 4
  %v0_10001224 = load i32, i32* @r28, align 4
  store i32 %v5_10001218, i32* %r30.global-to-local, align 4
  %v0_10001230 = load i32, i32* @r29, align 4
  store i32 %v0_10001230, i32* %r3.global-to-local, align 4
  store i32 268440120, i32* @lr, align 4
  %v4_10001234 = inttoptr i32 %v0_10001224 to i32*
  %v5_10001234 = call i32 @function_100006a8(i32 %v0_10001230, i32* %v4_10001234, i32 25, i32 %v3_10001220)
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268440140, i32* @lr, align 4
  %v3_10001248 = call i32 @function_10009e1c(i32 2, i32 3, i32 6)
  store i32 %v3_10001248, i32* %r3.global-to-local, align 4
  %v3_1000124c = icmp eq i32 %v3_10001248, -1
  store i1 %v3_1000124c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10001248, i32* %r23.global-to-local, align 4
  br i1 %v3_1000124c, label %dec_label_pc_100013e4, label %dec_label_pc_10001258

dec_label_pc_10001258:                            ; preds = %dec_label_pc_100010c4
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10001264 = ptrtoint i32* %stack_var_-104 to i32
  store i32 1, i32* %stack_var_-104, align 4
  store i32 268440180, i32* @lr, align 4
  %v4_10001270 = call i32 @function_10009de0(i32 0, i32 3, i32 %v2_10001264, i32 4)
  store i32 %v4_10001270, i32* %r3.global-to-local, align 4
  %v3_10001274 = icmp eq i32 %v4_10001270, -1
  store i1 %v3_10001274, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001274, label %dec_label_pc_100013dc, label %dec_label_pc_1000127c

dec_label_pc_1000127c:                            ; preds = %dec_label_pc_10001258
  %v0_1000127c = load i32, i32* %r19.global-to-local, align 4
  %v1_1000127c = icmp slt i32 %v0_1000127c, 0
  %v3_1000127c = icmp eq i32 %v0_1000127c, 0
  store i1 %v1_1000127c, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_1000127c, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %v0_10001288 = load i32, i32* %r25.global-to-local, align 4
  %v1_10001288 = urem i32 %v0_10001288, 65536
  store i32 %v1_10001288, i32* %r25.global-to-local, align 4
  %v0_1000128c = load i32, i32* %r24.global-to-local, align 4
  %v1_1000128c = urem i32 %v0_1000128c, 65536
  store i32 %v1_1000128c, i32* %r17.global-to-local, align 4
  %v0_10001290 = load i32, i32* %r27.global-to-local, align 4
  %v1_10001290 = urem i32 %v0_10001290, 65536
  store i32 %v1_10001290, i32* %r18.global-to-local, align 4
  %v0_10001294 = load i32, i32* %r30.global-to-local, align 4
  %v1_10001294 = urem i32 %v0_10001294, 256
  store i32 %v1_10001294, i32* %r3.global-to-local, align 4
  %tmp33 = icmp slt i32 %v0_1000127c, 1
  br i1 %tmp33, label %dec_label_pc_10001444, label %dec_label_pc_1000129c

dec_label_pc_1000129c:                            ; preds = %dec_label_pc_1000127c
  %v0_1000129c = load i32, i32* @r31, align 4
  %v3_1000129c = icmp eq i32 %v0_1000129c, 0
  store i1 %v3_1000129c, i1* %cr2_eq.global-to-local, align 1
  %v3_100012a0 = icmp eq i32 %v1_10001294, 0
  store i1 %v3_100012a0, i1* %cr3_eq.global-to-local, align 1
  %v0_100012a4 = load i32, i32* %r16.global-to-local, align 4
  %v1_100012a4 = urem i32 %v0_100012a4, 65536
  %v0_10001288.not = or i32 %v0_10001288, -65536
  %v1_100012a8 = xor i32 %v0_10001288.not, 65535
  store i32 %v1_100012a8, i32* %r11.global-to-local, align 4
  %v1_100012b0 = add nuw nsw i32 %v1_100012a4, 52
  store i32 %v1_100012b0, i32* %r0.global-to-local, align 4
  %v1_100012b4 = add nuw nsw i32 %v1_100012a4, 28
  store i32 %v1_100012b4, i32* %r9.global-to-local, align 4
  %fold = add i32 %v0_100012a4, 52
  %v1_100012b8 = urem i32 %fold, 65536
  store i32 %v1_100012b8, i32* %r22.global-to-local, align 4
  %fold8 = add i32 %v0_100012a4, 28
  %v1_100012bc = urem i32 %fold8, 65536
  store i32 %v1_100012bc, i32* %r24.global-to-local, align 4
  %v1_100012c0 = urem i32 %v1_100012a8, 65536
  store i32 %v1_100012c0, i32* %r27.global-to-local, align 4
  %fold9 = add i32 %v0_100012a4, 8
  %v1_100012c4 = urem i32 %fold9, 65536
  store i32 %v1_100012c4, i32* @r28, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100012f8

dec_label_pc_100012d0:                            ; preds = %dec_label_pc_100013b8
  %v0_100012d0 = load i32, i32* %r31.global-to-local, align 4
  %v1_100012d0 = add i32 %v0_100012d0, 16
  %v2_100012d0 = inttoptr i32 %v1_100012d0 to i32*
  %v3_100012d0 = load i32, i32* %v2_100012d0, align 4
  store i32 %v3_100012d0, i32* %r0.global-to-local, align 4
  %v1_100012d4 = load i32, i32* %r30.global-to-local, align 4
  %v2_100012d4 = add i32 %v1_100012d4, 16
  %v3_100012d4 = inttoptr i32 %v2_100012d4 to i32*
  store i32 %v3_100012d0, i32* %v3_100012d4, align 4
  br label %dec_label_pc_100012d8

dec_label_pc_100012d8:                            ; preds = %dec_label_pc_100013d4, %dec_label_pc_100012d0
  %v3_100012d8 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100012d8, i32* %r9.global-to-local, align 4
  %v0_100012dc = load i32, i32* @r28, align 4
  %v1_100012dc = trunc i32 %v0_100012dc to i16
  %v2_100012dc = load i32, i32* %r29.global-to-local, align 4
  %v3_100012dc = add i32 %v2_100012dc, 4
  %v4_100012dc = inttoptr i32 %v3_100012dc to i16*
  store i16 %v1_100012dc, i16* %v4_100012dc, align 2
  %v0_100012e0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100012e0 = add i32 %v0_100012e0, 1
  store i32 %v1_100012e0, i32* %r31.global-to-local, align 4
  %v0_100012e4 = load i32, i32* %r17.global-to-local, align 4
  %v1_100012e4 = trunc i32 %v0_100012e4 to i16
  %v2_100012e4 = load i32, i32* %r29.global-to-local, align 4
  %v3_100012e4 = inttoptr i32 %v2_100012e4 to i16*
  store i16 %v1_100012e4, i16* %v3_100012e4, align 2
  %v0_100012e8 = load i32, i32* %r31.global-to-local, align 4
  %v1_100012e8 = load i32, i32* %r19.global-to-local, align 4
  %v2_100012e8 = icmp slt i32 %v0_100012e8, %v1_100012e8
  %v4_100012e8 = icmp eq i32 %v0_100012e8, %v1_100012e8
  store i1 %v4_100012e8, i1* %cr7_eq.global-to-local, align 1
  %v0_100012ec = load i32, i32* %r18.global-to-local, align 4
  %v1_100012ec = trunc i32 %v0_100012ec to i16
  %v2_100012ec = load i32, i32* %r29.global-to-local, align 4
  %v3_100012ec = add i32 %v2_100012ec, 2
  %v4_100012ec = inttoptr i32 %v3_100012ec to i16*
  store i16 %v1_100012ec, i16* %v4_100012ec, align 2
  %v0_100012f0 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_100012f0, i32* %stack_var_-104, align 4
  br i1 %v2_100012e8, label %dec_label_pc_100012f8, label %dec_label_pc_10001448

dec_label_pc_100012f8:                            ; preds = %dec_label_pc_100012d8, %dec_label_pc_1000129c
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268440324, i32* @lr, align 4
  %v2_10001300 = call i32 @function_1000a178(i32 1510, i32 4)
  store i32 %v2_10001300, i32* %r3.global-to-local, align 4
  %v3_10001304 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10001304, i32* %r9.global-to-local, align 4
  %v0_10001308 = load i32, i32* @r31, align 4
  %v1_10001308 = mul i32 %v0_10001308, 4
  store i32 %v1_10001308, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r11.global-to-local, align 4
  %v1_10001310 = load i32, i32* %r20.global-to-local, align 4
  %v3_10001310 = add i32 %v1_10001310, %v1_10001308
  %v4_10001310 = inttoptr i32 %v3_10001310 to i32*
  store i32 %v2_10001300, i32* %v4_10001310, align 4
  %v0_10001314 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001314 = mul i32 %v0_10001314, 4
  store i32 %v1_10001314, i32* %r9.global-to-local, align 4
  %v1_10001318 = load i32, i32* %r20.global-to-local, align 4
  %v2_10001318 = add i32 %v1_10001318, %v1_10001314
  %v3_10001318 = inttoptr i32 %v2_10001318 to i32*
  %v4_10001318 = load i32, i32* %v3_10001318, align 4
  store i32 %v4_10001318, i32* %r31.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10001320 = inttoptr i32 %v4_10001318 to i32*
  %v2_10001320 = load i32, i32* %v1_10001320, align 4
  store i32 %v2_10001320, i32* %r0.global-to-local, align 4
  %v1_10001324 = add i32 %v4_10001318, 24
  store i32 %v1_10001324, i32* %r30.global-to-local, align 4
  %v0_10001328 = load i32, i32* %r21.global-to-local, align 4
  %v1_10001328 = trunc i32 %v0_10001328 to i8
  %v3_10001328 = add i32 %v4_10001318, 8
  %v4_10001328 = inttoptr i32 %v3_10001328 to i8*
  store i8 %v1_10001328, i8* %v4_10001328, align 1
  %v0_1000132c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000132c = add i32 %v0_1000132c, 44
  store i32 %v1_1000132c, i32* %r29.global-to-local, align 4
  %v1_10001330 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10001330, i32* %r0.global-to-local, align 4
  %v0_10001334 = load i32, i32* %r25.global-to-local, align 4
  %v1_10001334 = trunc i32 %v0_10001334 to i16
  %v2_10001334 = load i32, i32* %r31.global-to-local, align 4
  %v3_10001334 = add i32 %v2_10001334, 4
  %v4_10001334 = inttoptr i32 %v3_10001334 to i16*
  store i16 %v1_10001334, i16* %v4_10001334, align 2
  %v1_10001338 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10001338, i32* %r0.global-to-local, align 4
  %v0_1000133c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000133c = add i32 %v0_1000133c, 20
  store i32 %v1_1000133c, i32* %r9.global-to-local, align 4
  %v2_10001340 = inttoptr i32 %v0_1000133c to i32*
  store i32 %v1_10001338, i32* %v2_10001340, align 4
  %v0_10001344 = load i32, i32* %r14.global-to-local, align 4
  %v1_10001344 = trunc i32 %v0_10001344 to i8
  %v2_10001344 = load i32, i32* %r31.global-to-local, align 4
  %v3_10001344 = add i32 %v2_10001344, 1
  %v4_10001344 = inttoptr i32 %v3_10001344 to i8*
  store i8 %v1_10001344, i8* %v4_10001344, align 1
  %v0_10001348 = load i32, i32* %r22.global-to-local, align 4
  %v1_10001348 = trunc i32 %v0_10001348 to i16
  %v2_10001348 = load i32, i32* %r31.global-to-local, align 4
  %v3_10001348 = add i32 %v2_10001348, 2
  %v4_10001348 = inttoptr i32 %v3_10001348 to i16*
  store i16 %v1_10001348, i16* %v4_10001348, align 2
  %v0_1000134c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_1000134c, label %dec_label_pc_10001358, label %dec_label_pc_10001350

dec_label_pc_10001350:                            ; preds = %dec_label_pc_100012f8
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10001354 = load i32, i32* %r31.global-to-local, align 4
  %v3_10001354 = add i32 %v2_10001354, 6
  %v4_10001354 = inttoptr i32 %v3_10001354 to i16*
  store i16 16384, i16* %v4_10001354, align 2
  br label %dec_label_pc_10001358

dec_label_pc_10001358:                            ; preds = %dec_label_pc_100012f8, %dec_label_pc_10001350
  store i32 2048, i32* %r0.global-to-local, align 4
  %v2_10001360 = load i32, i32* %r31.global-to-local, align 4
  %v3_10001360 = add i32 %v2_10001360, 9
  %v4_10001360 = inttoptr i32 %v3_10001360 to i8*
  store i8 47, i8* %v4_10001360, align 1
  %v0_10001364 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001364 = trunc i32 %v0_10001364 to i16
  %v2_10001364 = load i32, i32* %r9.global-to-local, align 4
  %v3_10001364 = add i32 %v2_10001364, 2
  %v4_10001364 = inttoptr i32 %v3_10001364 to i16*
  store i16 %v1_10001364, i16* %v4_10001364, align 2
  %v3_10001368 = load i32, i32* %stack_var_-104, align 4
  store i32 %v5_10001234, i32* %r11.global-to-local, align 4
  %v1_10001370 = mul i32 %v3_10001368, 24
  store i32 %v1_10001370, i32* %r9.global-to-local, align 4
  %v0_10001374 = load i32, i32* %r31.global-to-local, align 4
  %v1_10001374 = add i32 %v0_10001374, 24
  %v2_10001374 = inttoptr i32 %v1_10001374 to i32*
  %v3_10001374 = load i32, i32* %v2_10001374, align 4
  store i32 %v3_10001374, i32* %r0.global-to-local, align 4
  %v2_10001378 = add i32 %v0_10001374, 12
  %v3_10001378 = inttoptr i32 %v2_10001378 to i32*
  store i32 %v5_10001234, i32* %v3_10001378, align 4
  store i32 4, i32* %r11.global-to-local, align 4
  %v0_10001380 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001380 = load i32, i32* %r26.global-to-local, align 4
  %v2_10001380 = add i32 %v1_10001380, %v0_10001380
  store i32 %v2_10001380, i32* %r9.global-to-local, align 4
  %v1_10001384 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10001384, i32* %r0.global-to-local, align 4
  %v0_10001388 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001388 = add i32 %v0_10001388, 16
  %v2_10001388 = inttoptr i32 %v1_10001388 to i32*
  %v3_10001388 = load i32, i32* %v2_10001388, align 4
  store i32 %v3_10001388, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10001390 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10001390, i32* %r0.global-to-local, align 4
  %v1_10001394 = load i32, i32* %r31.global-to-local, align 4
  %v2_10001394 = add i32 %v1_10001394, 24
  %v3_10001394 = inttoptr i32 %v2_10001394 to i32*
  store i32 %v1_10001390, i32* %v3_10001394, align 4
  %v0_10001398 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001398 = load i32, i32* %r31.global-to-local, align 4
  %v2_10001398 = add i32 %v1_10001398, 16
  %v3_10001398 = inttoptr i32 %v2_10001398 to i32*
  store i32 %v0_10001398, i32* %v3_10001398, align 4
  %v0_1000139c = load i32, i32* %r14.global-to-local, align 4
  %v1_1000139c = trunc i32 %v0_1000139c to i8
  %v2_1000139c = load i32, i32* %r30.global-to-local, align 4
  %v3_1000139c = add i32 %v2_1000139c, 1
  %v4_1000139c = inttoptr i32 %v3_1000139c to i8*
  store i8 %v1_1000139c, i8* %v4_1000139c, align 1
  %v0_100013a0 = load i32, i32* %r24.global-to-local, align 4
  %v1_100013a0 = trunc i32 %v0_100013a0 to i16
  %v2_100013a0 = load i32, i32* %r30.global-to-local, align 4
  %v3_100013a0 = add i32 %v2_100013a0, 2
  %v4_100013a0 = inttoptr i32 %v3_100013a0 to i16*
  store i16 %v1_100013a0, i16* %v4_100013a0, align 2
  %v0_100013a4 = load i32, i32* %r27.global-to-local, align 4
  %v1_100013a4 = trunc i32 %v0_100013a4 to i16
  %v2_100013a4 = load i32, i32* %r30.global-to-local, align 4
  %v3_100013a4 = add i32 %v2_100013a4, 4
  %v4_100013a4 = inttoptr i32 %v3_100013a4 to i16*
  store i16 %v1_100013a4, i16* %v4_100013a4, align 2
  %v0_100013a8 = load i32, i32* %r21.global-to-local, align 4
  %v1_100013a8 = trunc i32 %v0_100013a8 to i8
  %v2_100013a8 = load i32, i32* %r30.global-to-local, align 4
  %v3_100013a8 = add i32 %v2_100013a8, 8
  %v4_100013a8 = inttoptr i32 %v3_100013a8 to i8*
  store i8 %v1_100013a8, i8* %v4_100013a8, align 1
  %v0_100013ac = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100013ac, label %dec_label_pc_100013b8, label %dec_label_pc_100013b0

dec_label_pc_100013b0:                            ; preds = %dec_label_pc_10001358
  store i32 16384, i32* %r11.global-to-local, align 4
  %v2_100013b4 = load i32, i32* %r30.global-to-local, align 4
  %v3_100013b4 = add i32 %v2_100013b4, 6
  %v4_100013b4 = inttoptr i32 %v3_100013b4 to i16*
  store i16 16384, i16* %v4_100013b4, align 2
  br label %dec_label_pc_100013b8

dec_label_pc_100013b8:                            ; preds = %dec_label_pc_10001358, %dec_label_pc_100013b0
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_100013bc = load i32, i32* %r30.global-to-local, align 4
  %v3_100013bc = add i32 %v2_100013bc, 9
  %v4_100013bc = inttoptr i32 %v3_100013bc to i8*
  store i8 17, i8* %v4_100013bc, align 1
  %v0_100013c0 = call i32 @function_10005f3c()
  store i32 %v0_100013c0, i32* %r3.global-to-local, align 4
  %v1_100013c4 = add i32 %v0_100013c0, -1024
  store i32 %v1_100013c4, i32* %r0.global-to-local, align 4
  %v1_100013c8 = load i32, i32* %r30.global-to-local, align 4
  %v2_100013c8 = add i32 %v1_100013c8, 12
  %v3_100013c8 = inttoptr i32 %v2_100013c8 to i32*
  store i32 %v0_100013c0, i32* %v3_100013c8, align 4
  %v0_100013cc = load i32, i32* %r0.global-to-local, align 4
  %v1_100013cc = sub i32 -1, %v0_100013cc
  store i32 %v1_100013cc, i32* %r0.global-to-local, align 4
  %v0_100013d0 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100013d0, label %dec_label_pc_100013d4, label %dec_label_pc_100012d0

dec_label_pc_100013d4:                            ; preds = %dec_label_pc_100013b8
  %v1_100013d4 = load i32, i32* %r30.global-to-local, align 4
  %v2_100013d4 = add i32 %v1_100013d4, 16
  %v3_100013d4 = inttoptr i32 %v2_100013d4 to i32*
  store i32 %v1_100013cc, i32* %v3_100013d4, align 4
  br label %dec_label_pc_100012d8

dec_label_pc_100013dc:                            ; preds = %dec_label_pc_10001258
  %v0_100013dc = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_100013dc, i32* %r3.global-to-local, align 4
  store i32 268440548, i32* @lr, align 4
  %v0_100013e0 = call i32 @function_100090cc()
  store i32 %v0_100013e0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100013e4

dec_label_pc_100013e4:                            ; preds = %dec_label_pc_100010c4, %dec_label_pc_100013dc
  store i32 %v0_100010dc, i32* %r0.global-to-local, align 4
  %v1_100013f8 = call %0 @__asm_mtcrf(i32 56, i32 %v0_100010cc)
  store i32 %v0_10001110, i32* %r28.global-to-local, align 4
  store i32 %v0_10001118, i32* %r29.global-to-local, align 4
  store i32 %v0_10001120, i32* %r30.global-to-local, align 4
  store i32 %v0_10001124, i32* %r31.global-to-local, align 4
  %v0_10001440 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10001440

dec_label_pc_10001444:                            ; preds = %dec_label_pc_1000127c
  %v3_10001444 = icmp eq i32 %v1_10001294, 0
  store i1 %v3_10001444, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_10001448

dec_label_pc_10001448:                            ; preds = %dec_label_pc_100012d8, %dec_label_pc_10001444
  store i32 %v5_10001234, i32* %r0.global-to-local, align 4
  %v0_1000144c = load i32, i32* %r15.global-to-local, align 4
  %v3_1000144c = icmp eq i32 %v0_1000144c, 0
  store i1 %v3_1000144c, i1* %cr2_eq.global-to-local, align 1
  %v0_10001450 = load i32, i32* %r16.global-to-local, align 4
  %v1_10001450 = add i32 %v0_10001450, 8
  store i32 %v1_10001450, i32* %r22.global-to-local, align 4
  %v1_10001454 = add i32 %v0_10001450, 52
  store i32 %v1_10001454, i32* %r24.global-to-local, align 4
  %v3_10001458 = icmp eq i32 %v5_10001234, -1
  store i1 %v3_10001458, i1* %cr7_eq.global-to-local, align 1
  %v0_1000145c = call i32 @__asm_mfcr()
  store i32 %v0_1000145c, i32* %r3.global-to-local, align 4
  %v1_10001460 = mul i32 %v0_1000145c, 268435456
  store i32 %v1_10001460, i32* %r21.global-to-local, align 4
  %v0_10001464.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10001464.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10001464.outer

dec_label_pc_10001464.outer:                      ; preds = %dec_label_pc_1000156c, %dec_label_pc_10001448
  %v1_10001464.ph = phi i1 [ %v1_10001464.pre, %dec_label_pc_10001448 ], [ %v1_1000156c, %dec_label_pc_1000156c ]
  %v0_10001464.ph = phi i1 [ %v0_10001464.pre, %dec_label_pc_10001448 ], [ %v0_1000156c, %dec_label_pc_1000156c ]
  %v2_10001464 = or i1 %v1_10001464.ph, %v0_10001464.ph
  br label %dec_label_pc_10001464

dec_label_pc_10001464:                            ; preds = %dec_label_pc_10001464.outer, %dec_label_pc_10001464
  br i1 %v2_10001464, label %dec_label_pc_10001464, label %dec_label_pc_10001468

dec_label_pc_10001468:                            ; preds = %dec_label_pc_10001464, %dec_label_pc_1000156c
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10001478

dec_label_pc_10001478:                            ; preds = %dec_label_pc_100014dc, %dec_label_pc_10001468
  %v0_10001478 = phi i32 [ %v1_1000155c, %dec_label_pc_100014dc ], [ 0, %dec_label_pc_10001468 ]
  %v1_10001478 = mul i32 %v0_10001478, 24
  store i32 %v1_10001478, i32* %r0.global-to-local, align 4
  %v1_1000147c = mul i32 %v0_10001478, 4
  store i32 %v1_1000147c, i32* %r11.global-to-local, align 4
  %v1_10001480 = load i32, i32* %r20.global-to-local, align 4
  %v2_10001480 = add i32 %v1_10001480, %v1_1000147c
  %v3_10001480 = inttoptr i32 %v2_10001480 to i32*
  %v4_10001480 = load i32, i32* %v3_10001480, align 4
  store i32 %v4_10001480, i32* %r28.global-to-local, align 4
  %v1_10001484 = load i32, i32* %r26.global-to-local, align 4
  %v2_10001484 = add i32 %v1_10001484, %v1_10001478
  %v1_10001488 = add i32 %v2_10001484, 20
  %v2_10001488 = inttoptr i32 %v1_10001488 to i8*
  %v3_10001488 = load i8, i8* %v2_10001488, align 1
  %v4_10001488 = zext i8 %v3_10001488 to i32
  store i32 %v4_10001488, i32* %r9.global-to-local, align 4
  %v1_1000148c = add i32 %v4_10001480, 24
  store i32 %v1_1000148c, i32* @r31, align 4
  %v1_10001490 = add i32 %v4_10001480, 44
  store i32 %v1_10001490, i32* @r30, align 4
  %v3_10001494 = icmp eq i8 %v3_10001488, 31
  store i1 %v3_10001494, i1* %cr7_eq.global-to-local, align 1
  %tmp35 = icmp ult i8 %v3_10001488, 32
  br i1 %tmp35, label %dec_label_pc_10001574, label %dec_label_pc_1000149c

dec_label_pc_1000149c:                            ; preds = %dec_label_pc_10001478
  %v0_1000149c = load i32, i32* %r21.global-to-local, align 4
  %v1_1000149c = mul i32 %v0_1000149c, 16
  %v2_1000149c = udiv i32 %v0_1000149c, 268435456
  %v3_1000149c = or i32 %v2_1000149c, %v1_1000149c
  store i32 %v3_1000149c, i32* %r21.global-to-local, align 4
  %v1_100014a0 = call %0 @__asm_mtcrf(i32 1, i32 %v3_1000149c)
  %v1_100014a4 = mul nuw i32 %v2_1000149c, 268435456
  %v2_100014a4 = urem i32 %v0_1000149c, 268435456
  %v3_100014a4 = or i32 %v1_100014a4, %v2_100014a4
  store i32 %v3_100014a4, i32* %r21.global-to-local, align 4
  %v0_100014a8 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100014a8, label %dec_label_pc_100015a8, label %dec_label_pc_100014ac

dec_label_pc_100014ac:                            ; preds = %dec_label_pc_10001574, %dec_label_pc_1000149c
  store i32 65535, i32* @r29, align 4
  %v0_100014b4 = load i32, i32* %r25.global-to-local, align 4
  %v4_100014b4 = icmp eq i32 %v0_100014b4, 65535
  store i1 %v4_100014b4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100014b4, label %dec_label_pc_100015c0, label %dec_label_pc_100014bc

dec_label_pc_100014bc:                            ; preds = %dec_label_pc_100015a8, %dec_label_pc_100014ac
  %v1_100014bc = phi i32 [ %v1_100015b8, %dec_label_pc_100015a8 ], [ 65535, %dec_label_pc_100014ac ]
  %v0_100014bc = load i32, i32* %r17.global-to-local, align 4
  %v4_100014bc = icmp eq i32 %v0_100014bc, %v1_100014bc
  store i1 %v4_100014bc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100014bc, label %dec_label_pc_100015e0, label %dec_label_pc_100014c4

dec_label_pc_100014c4:                            ; preds = %dec_label_pc_100015c0.dec_label_pc_100014c4_crit_edge, %dec_label_pc_100014bc
  %v1_100014c4 = phi i32 [ %v1_100014c4.pre, %dec_label_pc_100015c0.dec_label_pc_100014c4_crit_edge ], [ %v1_100014bc, %dec_label_pc_100014bc ]
  %v0_100014c4 = load i32, i32* %r18.global-to-local, align 4
  %v4_100014c4 = icmp eq i32 %v0_100014c4, %v1_100014c4
  store i1 %v4_100014c4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100014c4, label %dec_label_pc_100015f0, label %dec_label_pc_100014cc

dec_label_pc_100014cc:                            ; preds = %dec_label_pc_100015e0, %dec_label_pc_100014c4
  %v0_100014cc = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100014cc, label %dec_label_pc_100015fc, label %dec_label_pc_100014d0

dec_label_pc_100014d0:                            ; preds = %dec_label_pc_100015f0, %dec_label_pc_100014cc
  %v0_100014d0 = load i32, i32* %r28.global-to-local, align 4
  %v1_100014d0 = add i32 %v0_100014d0, 16
  %v2_100014d0 = inttoptr i32 %v1_100014d0 to i32*
  %v3_100014d0 = load i32, i32* %v2_100014d0, align 4
  store i32 %v3_100014d0, i32* %r0.global-to-local, align 4
  %v1_100014d4 = load i32, i32* @r31, align 4
  %v2_100014d4 = add i32 %v1_100014d4, 16
  %v3_100014d4 = inttoptr i32 %v2_100014d4 to i32*
  store i32 %v3_100014d0, i32* %v3_100014d4, align 4
  %v0_100014d8 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100014d8, label %dec_label_pc_100014dc, label %dec_label_pc_10001608

dec_label_pc_100014dc:                            ; preds = %dec_label_pc_100014d0, %dec_label_pc_100015fc, %dec_label_pc_10001608
  %v0_100014dc = load i32, i32* %r27.global-to-local, align 4
  %v1_100014dc = trunc i32 %v0_100014dc to i16
  %v2_100014dc = load i32, i32* %r28.global-to-local, align 4
  %v3_100014dc = add i32 %v2_100014dc, 10
  %v4_100014dc = inttoptr i32 %v3_100014dc to i16*
  store i16 %v1_100014dc, i16* %v4_100014dc, align 2
  %v0_100014e4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100014e4, i32* @r3, align 4
  %v2_100014e8 = call i32 @function_100043cc(i32 %v0_100014e4, i32 20)
  %v3_100014e8 = trunc i32 %v2_100014e8 to i16
  %v4_100014f0 = add i32 %v0_100014e4, 10
  %v5_100014f0 = inttoptr i32 %v4_100014f0 to i16*
  store i16 %v3_100014e8, i16* %v5_100014f0, align 2
  %v0_100014f4 = load i32, i32* @r31, align 4
  store i32 %v0_100014f4, i32* @r3, align 4
  %v0_100014f8 = load i32, i32* %r27.global-to-local, align 4
  %v1_100014f8 = trunc i32 %v0_100014f8 to i16
  %v3_100014f8 = add i32 %v0_100014f4, 10
  %v4_100014f8 = inttoptr i32 %v3_100014f8 to i16*
  store i16 %v1_100014f8, i16* %v4_100014f8, align 2
  %v2_100014fc = call i32 @function_100043cc(i32 %v0_100014f4, i32 20)
  %v3_100014fc = trunc i32 %v2_100014fc to i16
  %v0_10001500 = load i32, i32* @r30, align 4
  store i32 %v0_10001500, i32* @r4, align 4
  %v3_10001504 = load i32, i32* @r31, align 4
  %v4_10001504 = add i32 %v3_10001504, 10
  %v5_10001504 = inttoptr i32 %v4_10001504 to i16*
  store i16 %v3_100014fc, i16* %v5_10001504, align 2
  %v0_10001508 = load i32, i32* %r22.global-to-local, align 4
  %v0_1000150c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000150c = trunc i32 %v0_1000150c to i16
  %v2_1000150c = load i32, i32* @r30, align 4
  %v3_1000150c = add i32 %v2_1000150c, 6
  %v4_1000150c = inttoptr i32 %v3_1000150c to i16*
  store i16 %v1_1000150c, i16* %v4_1000150c, align 2
  %v0_10001510 = load i32, i32* @r31, align 4
  store i32 %v0_10001510, i32* %r3.global-to-local, align 4
  %v0_10001514 = load i32, i32* @r30, align 4
  %v1_10001514 = add i32 %v0_10001514, 4
  %v2_10001514 = inttoptr i32 %v1_10001514 to i16*
  %v3_10001514 = load i16, i16* %v2_10001514, align 2
  %v4_10001514 = zext i16 %v3_10001514 to i32
  %v4_10001518 = call i32 @function_10004430(i32 %v0_10001510, i32 %v0_10001500, i32 %v4_10001514, i32 %v0_10001508)
  %v5_10001518 = trunc i32 %v4_10001518 to i16
  store i32 %v4_10001518, i32* %r3.global-to-local, align 4
  %v3_1000151c = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_1000151c, i32* %r0.global-to-local, align 4
  %v0_10001520 = load i32, i32* %r28.global-to-local, align 4
  %v1_10001520 = add i32 %v0_10001520, 16
  %v2_10001520 = inttoptr i32 %v1_10001520 to i32*
  %v3_10001520 = load i32, i32* %v2_10001520, align 4
  store i32 %v3_10001520, i32* %r11.global-to-local, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10001528 = mul i32 %v3_1000151c, 24
  store i32 %v1_10001528, i32* %r0.global-to-local, align 4
  %v3_1000152c = load i32, i32* @r30, align 4
  %v4_1000152c = add i32 %v3_1000152c, 6
  %v5_1000152c = inttoptr i32 %v4_1000152c to i16*
  store i16 %v5_10001518, i16* %v5_1000152c, align 2
  %v0_10001530 = load i32, i32* %r28.global-to-local, align 4
  %v0_10001534 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10001534, i32* %r3.global-to-local, align 4
  %v0_10001538 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001538 = load i32, i32* %r26.global-to-local, align 4
  %v2_10001538 = add i32 %v1_10001538, %v0_10001538
  %v0_1000153c = load i32, i32* %r9.global-to-local, align 4
  %v3_1000153c = trunc i32 %v0_1000153c to i16
  %v5_1000153c = inttoptr i32 %v2_10001538 to i16*
  store i16 %v3_1000153c, i16* %v5_1000153c, align 2
  %v0_10001540 = load i32, i32* %r11.global-to-local, align 4
  %v2_10001540 = add i32 %v2_10001538, 4
  %v3_10001540 = inttoptr i32 %v2_10001540 to i32*
  store i32 %v0_10001540, i32* %v3_10001540, align 4
  %v0_10001544 = load i32, i32* %r24.global-to-local, align 4
  %v0_10001548 = load i32, i32* %r27.global-to-local, align 4
  %v1_10001548 = trunc i32 %v0_10001548 to i16
  %v3_10001548 = add i32 %v2_10001538, 2
  %v4_10001548 = inttoptr i32 %v3_10001548 to i16*
  store i16 %v1_10001548, i16* %v4_10001548, align 2
  store i32 268440920, i32* @lr, align 4
  %v6_10001554 = call i32 @function_10009da0(i32 %v0_10001534, i32 %v0_10001530, i32 %v0_10001544, i32 16384, i32 %v2_10001538, i32 16)
  store i32 %v6_10001554, i32* %r3.global-to-local, align 4
  %v3_10001558 = load i32, i32* %stack_var_-104, align 4
  %v1_1000155c = add i32 %v3_10001558, 1
  store i32 %v1_1000155c, i32* %r9.global-to-local, align 4
  %v1_10001560 = load i32, i32* %r19.global-to-local, align 4
  %v2_10001560 = icmp slt i32 %v1_1000155c, %v1_10001560
  %v4_10001560 = icmp eq i32 %v1_1000155c, %v1_10001560
  store i1 %v4_10001560, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_1000155c, i32* %stack_var_-104, align 4
  br i1 %v2_10001560, label %dec_label_pc_10001478, label %dec_label_pc_1000156c

dec_label_pc_1000156c:                            ; preds = %dec_label_pc_100014dc
  %v0_1000156c = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_1000156c = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_1000156c = or i1 %v0_1000156c, %v1_1000156c
  br i1 %v2_1000156c, label %dec_label_pc_10001464.outer, label %dec_label_pc_10001468

dec_label_pc_10001574:                            ; preds = %dec_label_pc_10001478
  %v1_10001574 = add i32 %v2_10001484, 16
  %v2_10001574 = inttoptr i32 %v1_10001574 to i32*
  %v3_10001574 = load i32, i32* %v2_10001574, align 4
  store i32 %v3_10001574, i32* %r29.global-to-local, align 4
  %v0_10001578 = call i32 @function_10005f3c()
  store i32 %v0_10001578, i32* %r3.global-to-local, align 4
  %v3_1000157c = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_1000157c, i32* %r9.global-to-local, align 4
  %v0_10001580 = load i32, i32* %r21.global-to-local, align 4
  %v1_10001580 = mul i32 %v0_10001580, 16
  %v2_10001580 = udiv i32 %v0_10001580, 268435456
  %v3_10001580 = or i32 %v2_10001580, %v1_10001580
  store i32 %v3_10001580, i32* %r21.global-to-local, align 4
  %v1_10001584 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10001580)
  %v1_10001588 = mul nuw i32 %v2_10001580, 268435456
  %v2_10001588 = urem i32 %v0_10001580, 268435456
  %v3_10001588 = or i32 %v1_10001588, %v2_10001588
  store i32 %v3_10001588, i32* %r21.global-to-local, align 4
  %v0_1000158c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000158c = mul i32 %v0_1000158c, 24
  %v1_10001590 = load i32, i32* %r26.global-to-local, align 4
  %v2_10001590 = add i32 %v1_10001590, %v1_1000158c
  store i32 %v2_10001590, i32* %r9.global-to-local, align 4
  %v1_10001594 = add i32 %v2_10001590, 20
  %v2_10001594 = inttoptr i32 %v1_10001594 to i8*
  %v3_10001594 = load i8, i8* %v2_10001594, align 1
  %v4_10001594 = zext i8 %v3_10001594 to i32
  store i32 %v4_10001594, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10001594, 64
  %v2_10001598 = zext i8 %tmp to i32
  %v3_10001598 = lshr i32 %v0_10001578, %v2_10001598
  store i32 %v3_10001598, i32* %r3.global-to-local, align 4
  %v0_1000159c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000159c = add i32 %v3_10001598, %v0_1000159c
  store i32 %v2_1000159c, i32* %r29.global-to-local, align 4
  %v1_100015a0 = load i32, i32* %r28.global-to-local, align 4
  %v2_100015a0 = add i32 %v1_100015a0, 16
  %v3_100015a0 = inttoptr i32 %v2_100015a0 to i32*
  store i32 %v2_1000159c, i32* %v3_100015a0, align 4
  %v0_100015a4 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100015a4, label %dec_label_pc_100015a8, label %dec_label_pc_100014ac

dec_label_pc_100015a8:                            ; preds = %dec_label_pc_10001574, %dec_label_pc_1000149c
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_100015ac = call i32 @function_10005f3c()
  store i32 %v0_100015ac, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_100015b4 = load i32, i32* %r28.global-to-local, align 4
  %v2_100015b4 = add i32 %v1_100015b4, 12
  %v3_100015b4 = inttoptr i32 %v2_100015b4 to i32*
  store i32 %v0_100015ac, i32* %v3_100015b4, align 4
  %v0_100015b8 = load i32, i32* %r25.global-to-local, align 4
  %v1_100015b8 = load i32, i32* @r29, align 4
  %v4_100015b8 = icmp eq i32 %v0_100015b8, %v1_100015b8
  store i1 %v4_100015b8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100015b8, label %dec_label_pc_100015c0, label %dec_label_pc_100014bc

dec_label_pc_100015c0:                            ; preds = %dec_label_pc_100015a8, %dec_label_pc_100014ac
  %v0_100015c0 = call i32 @function_10005f3c()
  %v0_100015c4 = load i32, i32* %r17.global-to-local, align 4
  %v1_100015c4 = load i32, i32* @r29, align 4
  %v4_100015c4 = icmp eq i32 %v0_100015c4, %v1_100015c4
  store i1 %v4_100015c4, i1* %cr7_eq.global-to-local, align 1
  %v1_100015c8 = urem i32 %v0_100015c0, 65536
  store i32 %v1_100015c8, i32* %r3.global-to-local, align 4
  %v1_100015cc = add nsw i32 %v1_100015c8, -1000
  store i32 %v1_100015cc, i32* %r0.global-to-local, align 4
  %v1_100015d0 = trunc i32 %v0_100015c0 to i16
  %v2_100015d0 = load i32, i32* %r28.global-to-local, align 4
  %v3_100015d0 = add i32 %v2_100015d0, 4
  %v4_100015d0 = inttoptr i32 %v3_100015d0 to i16*
  store i16 %v1_100015d0, i16* %v4_100015d0, align 2
  %v0_100015d4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100015d4 = sub i32 -1, %v0_100015d4
  store i32 %v1_100015d4, i32* %r0.global-to-local, align 4
  %v1_100015d8 = trunc i32 %v1_100015d4 to i16
  %v2_100015d8 = load i32, i32* @r31, align 4
  %v3_100015d8 = add i32 %v2_100015d8, 4
  %v4_100015d8 = inttoptr i32 %v3_100015d8 to i16*
  store i16 %v1_100015d8, i16* %v4_100015d8, align 2
  br i1 %v4_100015c4, label %dec_label_pc_100015e0, label %dec_label_pc_100015c0.dec_label_pc_100014c4_crit_edge

dec_label_pc_100015c0.dec_label_pc_100014c4_crit_edge: ; preds = %dec_label_pc_100015c0
  %v1_100014c4.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100014c4

dec_label_pc_100015e0:                            ; preds = %dec_label_pc_100015c0, %dec_label_pc_100014bc
  %v0_100015e0 = call i32 @function_10005f3c()
  %v1_100015e0 = trunc i32 %v0_100015e0 to i16
  store i32 %v0_100015e0, i32* %r3.global-to-local, align 4
  %v0_100015e4 = load i32, i32* %r18.global-to-local, align 4
  %v1_100015e4 = load i32, i32* @r29, align 4
  %v4_100015e4 = icmp eq i32 %v0_100015e4, %v1_100015e4
  store i1 %v4_100015e4, i1* %cr7_eq.global-to-local, align 1
  %v3_100015e8 = load i32, i32* %r28.global-to-local, align 4
  %v4_100015e8 = add i32 %v3_100015e8, 44
  %v5_100015e8 = inttoptr i32 %v4_100015e8 to i16*
  store i16 %v1_100015e0, i16* %v5_100015e8, align 2
  br i1 %v4_100015e4, label %dec_label_pc_100015f0, label %dec_label_pc_100014cc

dec_label_pc_100015f0:                            ; preds = %dec_label_pc_100015e0, %dec_label_pc_100014c4
  %v0_100015f0 = call i32 @function_10005f3c()
  %v1_100015f0 = trunc i32 %v0_100015f0 to i16
  store i32 %v0_100015f0, i32* %r3.global-to-local, align 4
  %v3_100015f4 = load i32, i32* @r30, align 4
  %v4_100015f4 = add i32 %v3_100015f4, 2
  %v5_100015f4 = inttoptr i32 %v4_100015f4 to i16*
  store i16 %v1_100015f0, i16* %v5_100015f4, align 2
  %v0_100015f8 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100015f8, label %dec_label_pc_100015fc, label %dec_label_pc_100014d0

dec_label_pc_100015fc:                            ; preds = %dec_label_pc_100015f0, %dec_label_pc_100014cc
  %v0_100015fc = call i32 @function_10005f3c()
  store i32 %v0_100015fc, i32* %r3.global-to-local, align 4
  %v1_10001600 = load i32, i32* @r31, align 4
  %v2_10001600 = add i32 %v1_10001600, 16
  %v3_10001600 = inttoptr i32 %v2_10001600 to i32*
  store i32 %v0_100015fc, i32* %v3_10001600, align 4
  %v0_10001604 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10001604, label %dec_label_pc_100014dc, label %dec_label_pc_10001608

dec_label_pc_10001608:                            ; preds = %dec_label_pc_100014d0, %dec_label_pc_100015fc
  %v0_10001608 = load i32, i32* @r30, align 4
  %v1_10001608 = add i32 %v0_10001608, 8
  store i32 %v1_10001608, i32* @r3, align 4
  %v0_1000160c = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_1000160c, i32* @r4, align 4
  %v0_10001610 = call i32 @function_10006110()
  store i32 %v0_10001610, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100014dc

; uselistorder directives
  uselistorder i32 %v0_100015f0, { 1, 0 }
  uselistorder i32 %v0_100015e0, { 1, 0 }
  uselistorder i32 %v1_100015d4, { 1, 0 }
  uselistorder i32 %v1_100015c8, { 1, 0 }
  uselistorder i32 %v0_100015c0, { 1, 0 }
  uselistorder i32 %v1_100015b8, { 1, 0 }
  uselistorder i32 %v0_10001580, { 2, 1, 0 }
  uselistorder i1 %v1_1000156c, { 1, 0 }
  uselistorder i1 %v0_1000156c, { 1, 0 }
  uselistorder i32 %v1_1000155c, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v2_10001538, { 0, 2, 1, 3 }
  uselistorder i32 %v4_10001518, { 1, 0 }
  uselistorder i32 %v0_1000149c, { 2, 1, 0 }
  uselistorder i32 %v4_10001480, { 1, 0, 2 }
  uselistorder i32 %v1_1000147c, { 1, 0 }
  uselistorder i32 %v1_100013cc, { 1, 0 }
  uselistorder i32 %v1_10001314, { 1, 0 }
  uselistorder i32 %v1_10001308, { 1, 0 }
  uselistorder i32 %v1_100012a4, { 1, 0 }
  uselistorder i32 %v0_100012a4, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10001294, { 1, 2, 0 }
  uselistorder i32 %v0_10001288, { 1, 0 }
  uselistorder i32 %v5_10001234, { 0, 3, 1, 2 }
  uselistorder i32* %r9.global-to-local, { 19, 20, 21, 22, 0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 4, 5, 17, 18 }
  uselistorder i32* %r31.global-to-local, { 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1, 2, 3, 4, 16 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 3, 4, 5, 6, 7, 9, 8, 10, 2, 11, 12 }
  uselistorder i32* %r3.global-to-local, { 28, 29, 3, 30, 31, 32, 33, 34, 4, 5, 6, 7, 1, 15, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 2, 0 }
  uselistorder i32* %r29.global-to-local, { 6, 5, 7, 8, 0, 4, 1, 2, 3 }
  uselistorder i32* %r28.global-to-local, { 5, 6, 7, 8, 0, 1, 2, 3, 4, 9, 10 }
  uselistorder i32* %r26.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r25.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r21.global-to-local, { 8, 9, 7, 0, 1, 6, 2, 3, 4, 5 }
  uselistorder i32* %r19.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r16.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 28, 29, 30, 31, 0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 22, 18, 19, 20, 21, 8, 23, 24, 25, 26, 27 }
  uselistorder i1* %cr7_eq.global-to-local, { 10, 11, 12, 4, 13, 0, 1, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i1* %cr3_eq.global-to-local, { 3, 1, 0, 2, 4 }
  uselistorder i1* %cr2_eq.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_10001608, { 1, 0 }
  uselistorder label %dec_label_pc_100014dc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10001468, { 1, 0 }
  uselistorder label %dec_label_pc_10001464, { 1, 0 }
  uselistorder label %dec_label_pc_10001448, { 1, 0 }
  uselistorder label %dec_label_pc_100013e4, { 1, 0 }
  uselistorder label %dec_label_pc_100013b8, { 1, 0 }
  uselistorder label %dec_label_pc_10001358, { 1, 0 }
}

define i32 @function_10001618(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10001618:
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v0_10001620 = call i32 @__asm_mfcr()
  store i32 %v0_10001620, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r25.global-to-local, align 4
  %v0_1000164c = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10001654 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 268441208, i32* @lr, align 4
  %v2_10001674 = call i32 @function_1000a178(i32 4, i32 4)
  store i32 %v2_10001674, i32* %r27.global-to-local, align 4
  %v0_10001680 = load i32, i32* @r30, align 4
  store i32 %v0_10001680, i32* %r3.global-to-local, align 4
  store i32 268441224, i32* @lr, align 4
  %v2_10001684 = call i32 @function_1000a178(i32 %v0_10001680, i32 4)
  %v0_1000168c = load i32, i32* @r28, align 4
  store i32 %v2_10001684, i32* %r26.global-to-local, align 4
  %v0_1000169c = load i32, i32* @r29, align 4
  store i32 %v0_1000169c, i32* %r3.global-to-local, align 4
  store i32 268441252, i32* @lr, align 4
  %v4_100016a0 = inttoptr i32 %v0_1000168c to i32*
  %v5_100016a0 = call i32 @function_100006a8(i32 %v0_1000169c, i32* %v4_100016a0, i32 7, i32 65535)
  %v0_100016ac = load i32, i32* @r28, align 4
  %v1_100016b4 = urem i32 %v5_100016a0, 65536
  store i32 %v1_100016b4, i32* %r21.global-to-local, align 4
  %v0_100016b8 = load i32, i32* @r29, align 4
  store i32 %v0_100016b8, i32* %r3.global-to-local, align 4
  store i32 268441280, i32* @lr, align 4
  %v4_100016bc = inttoptr i32 %v0_100016ac to i32*
  %v5_100016bc = call i32 @function_100006a8(i32 %v0_100016b8, i32* %v4_100016bc, i32 6, i32 65535)
  %v0_100016c0 = load i32, i32* @r28, align 4
  %v1_100016c4 = urem i32 %v5_100016bc, 65536
  store i32 %v1_100016c4, i32* %r22.global-to-local, align 4
  %v0_100016d0 = load i32, i32* @r29, align 4
  store i32 %v0_100016d0, i32* %r3.global-to-local, align 4
  store i32 268441304, i32* @lr, align 4
  %v4_100016d4 = inttoptr i32 %v0_100016c0 to i32*
  %v5_100016d4 = call i32 @function_100006a8(i32 %v0_100016d0, i32* %v4_100016d4, i32 0, i32 1024)
  %v0_100016d8 = load i32, i32* @r28, align 4
  %v1_100016dc = urem i32 %v5_100016d4, 65536
  store i32 %v1_100016dc, i32* @r31, align 4
  %v0_100016e4 = load i32, i32* @r29, align 4
  store i32 %v0_100016e4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100016f0.18 to i32), i32* @lr, align 4
  %v4_100016ec = inttoptr i32 %v0_100016d8 to i32*
  %v5_100016ec = call i32 @function_100006a8(i32 %v0_100016e4, i32* %v4_100016ec, i32 1, i32 1)
  store i32 %v5_100016ec, i32* %r3.global-to-local, align 4
  %v0_100016fc = load i32, i32* %r22.global-to-local, align 4
  %v4_100016fc = icmp eq i32 %v0_100016fc, 65535
  %v1_10001704 = urem i32 %v5_100016ec, 256
  store i32 %v1_10001704, i32* %r23.global-to-local, align 4
  store i32 0, i32* %stack_var_-72, align 4
  br i1 %v4_100016fc, label %dec_label_pc_10001900, label %dec_label_pc_10001718

dec_label_pc_10001718:                            ; preds = %dec_label_pc_10001618, %dec_label_pc_10001900
  %v0_10001718 = load i32, i32* @r30, align 4
  %v1_10001718 = icmp slt i32 %v0_10001718, 0
  %v3_10001718 = icmp eq i32 %v0_10001718, 0
  store i1 %v1_10001718, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10001718, i1* %cr4_eq.global-to-local, align 1
  %tmp38 = icmp slt i32 %v0_10001718, 1
  br i1 %tmp38, label %dec_label_pc_100017d8, label %dec_label_pc_10001720

dec_label_pc_10001720:                            ; preds = %dec_label_pc_10001718
  %v0_10001724 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10001724, i32* @r28, align 4
  store i32 0, i32* %r24.global-to-local, align 4
  %v0_10001730 = load i32, i32* %r21.global-to-local, align 4
  %v4_10001730 = icmp eq i32 %v0_10001730, 65535
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 2, i32* %r20.global-to-local, align 4
  %v2_10001880 = ptrtoint i32* %stack_var_-72 to i32
  br i1 %v4_10001730, label %dec_label_pc_10001850, label %dec_label_pc_10001744

dec_label_pc_10001744:                            ; preds = %dec_label_pc_10001720, %dec_label_pc_100017b8
  %v0_10001750 = phi i32 [ %v0_100017cc, %dec_label_pc_100017b8 ], [ 0, %dec_label_pc_10001720 ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_10001750 = add i32 %v0_10001750, 1
  store i32 %v1_10001750, i32* %r24.global-to-local, align 4
  store i32 268441432, i32* @lr, align 4
  %v2_10001754 = call i32 @function_1000a178(i32 65535, i32 1)
  %v0_10001758 = load i32, i32* %r21.global-to-local, align 4
  %v1_10001758 = trunc i32 %v0_10001758 to i16
  %v2_10001758 = load i32, i32* @r28, align 4
  %v3_10001758 = add i32 %v2_10001758, 2
  %v4_10001758 = inttoptr i32 %v3_10001758 to i16*
  store i16 %v1_10001758, i16* %v4_10001758, align 2
  %v1_1000175c = load i32, i32* %r25.global-to-local, align 4
  %v2_1000175c = load i32, i32* %r27.global-to-local, align 4
  %v3_1000175c = add i32 %v2_1000175c, %v1_1000175c
  %v4_1000175c = inttoptr i32 %v3_1000175c to i32*
  store i32 %v2_10001754, i32* %v4_1000175c, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268441456, i32* @lr, align 4
  %v3_1000176c = call i32 @function_10009e1c(i32 2, i32 2, i32 0)
  store i32 %v3_1000176c, i32* %r3.global-to-local, align 4
  %v3_10001774 = icmp eq i32 %v3_1000176c, -1
  %v1_1000177c = load i32, i32* %r25.global-to-local, align 4
  %v2_1000177c = load i32, i32* %r26.global-to-local, align 4
  %v3_1000177c = add i32 %v2_1000177c, %v1_1000177c
  %v4_1000177c = inttoptr i32 %v3_1000177c to i32*
  store i32 %v3_1000176c, i32* %v4_1000177c, align 4
  br i1 %v3_10001774, label %dec_label_pc_100018b4, label %dec_label_pc_10001784

dec_label_pc_10001784:                            ; preds = %dec_label_pc_10001744
  %v0_10001784 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10001784, i32* %stack_var_-72, align 4
  store i32 268441492, i32* @lr, align 4
  %v0_10001790 = load i32, i32* %r3.global-to-local, align 4
  %v3_10001790 = call i32 @function_10009be8(i32 %v0_10001790, i32 %v2_10001880, i32 16)
  store i32 %v3_10001790, i32* %r3.global-to-local, align 4
  %v0_10001794 = load i32, i32* @r28, align 4
  %v1_10001794 = add i32 %v0_10001794, 20
  %v2_10001794 = inttoptr i32 %v1_10001794 to i8*
  %v3_10001794 = load i8, i8* %v2_10001794, align 1
  %v2_10001798 = icmp ugt i8 %v3_10001794, 31
  br i1 %v2_10001798, label %dec_label_pc_100017b8, label %dec_label_pc_100017a0

dec_label_pc_100017a0:                            ; preds = %dec_label_pc_10001784
  %v1_100017a0 = add i32 %v0_10001794, 16
  %v2_100017a0 = inttoptr i32 %v1_100017a0 to i32*
  %v3_100017a0 = load i32, i32* %v2_100017a0, align 4
  store i32 %v3_100017a0, i32* %r29.global-to-local, align 4
  %v0_100017a4 = call i32 @function_10005f3c()
  store i32 %v0_100017a4, i32* %r3.global-to-local, align 4
  %v0_100017a8 = load i32, i32* @r28, align 4
  %v1_100017a8 = add i32 %v0_100017a8, 20
  %v2_100017a8 = inttoptr i32 %v1_100017a8 to i8*
  %v3_100017a8 = load i8, i8* %v2_100017a8, align 1
  %tmp = urem i8 %v3_100017a8, 64
  %v2_100017ac = zext i8 %tmp to i32
  %v3_100017ac = lshr i32 %v0_100017a4, %v2_100017ac
  %v0_100017b0 = load i32, i32* %r29.global-to-local, align 4
  %v2_100017b0 = add i32 %v3_100017ac, %v0_100017b0
  store i32 %v2_100017b0, i32* %r3.global-to-local, align 4
  %v2_100017b4 = add i32 %v0_100017a8, 4
  %v3_100017b4 = inttoptr i32 %v2_100017b4 to i32*
  store i32 %v2_100017b0, i32* %v3_100017b4, align 4
  br label %dec_label_pc_100017b8

dec_label_pc_100017b8:                            ; preds = %dec_label_pc_10001784, %dec_label_pc_100017a0
  %v0_100017b8 = load i32, i32* %r25.global-to-local, align 4
  %v1_100017b8 = load i32, i32* %r26.global-to-local, align 4
  %v2_100017b8 = add i32 %v1_100017b8, %v0_100017b8
  %v3_100017b8 = inttoptr i32 %v2_100017b8 to i32*
  %v4_100017b8 = load i32, i32* %v3_100017b8, align 4
  store i32 %v4_100017b8, i32* @r3, align 4
  %v1_100017c4 = add i32 %v0_100017b8, 4
  store i32 %v1_100017c4, i32* %r25.global-to-local, align 4
  store i32 268441548, i32* @lr, align 4
  %v0_100017c8 = call i32 @function_10009c1c()
  store i32 %v0_100017c8, i32* %r3.global-to-local, align 4
  %v0_100017cc = load i32, i32* %r24.global-to-local, align 4
  %v1_100017cc = load i32, i32* @r30, align 4
  %v4_100017cc = icmp eq i32 %v0_100017cc, %v1_100017cc
  %v0_100017d0 = load i32, i32* @r28, align 4
  %v1_100017d0 = add i32 %v0_100017d0, 24
  store i32 %v1_100017d0, i32* @r28, align 4
  br i1 %v4_100017cc, label %dec_label_pc_100017d8, label %dec_label_pc_10001744

dec_label_pc_100017d8:                            ; preds = %dec_label_pc_100017b8, %dec_label_pc_10001830, %dec_label_pc_10001718
  %v0_100017d8 = load i32, i32* %r23.global-to-local, align 4
  %v3_100017d8 = icmp eq i32 %v0_100017d8, 0
  store i1 %v3_100017d8, i1* %cr3_eq.global-to-local, align 1
  %v0_100017dc.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100017dc.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_100017dc.outer

dec_label_pc_100017dc.outer:                      ; preds = %dec_label_pc_10001810, %dec_label_pc_10001948, %dec_label_pc_100017d8
  %v1_100017dc.ph39 = phi i1 [ %v1_100017dc.pre, %dec_label_pc_100017d8 ], [ %v1_10001948, %dec_label_pc_10001948 ], [ %v1_10001810, %dec_label_pc_10001810 ]
  %v0_100017dc.ph40 = phi i1 [ %v0_100017dc.pre, %dec_label_pc_100017d8 ], [ %v0_10001948, %dec_label_pc_10001948 ], [ %v0_10001810, %dec_label_pc_10001810 ]
  %v2_100017dc = or i1 %v1_100017dc.ph39, %v0_100017dc.ph40
  br label %dec_label_pc_100017dc

dec_label_pc_100017dc:                            ; preds = %dec_label_pc_100017dc.outer, %dec_label_pc_100017dc
  br i1 %v2_100017dc, label %dec_label_pc_100017dc, label %dec_label_pc_100017e0

dec_label_pc_100017e0:                            ; preds = %dec_label_pc_10001948, %dec_label_pc_10001810, %dec_label_pc_100017dc
  %v0_100017e0 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100017e0, label %dec_label_pc_100017e4, label %dec_label_pc_1000190c

dec_label_pc_100017e4:                            ; preds = %dec_label_pc_100017e0
  store i32 0, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100017ec

dec_label_pc_100017ec:                            ; preds = %dec_label_pc_100017ec.dec_label_pc_100017ec_crit_edge, %dec_label_pc_100017e4
  %v0_100017f0 = phi i32 [ %v0_10001808, %dec_label_pc_100017ec.dec_label_pc_100017ec_crit_edge ], [ 0, %dec_label_pc_100017e4 ]
  %v0_10001800 = phi i32 [ %v0_100017ec.pre, %dec_label_pc_100017ec.dec_label_pc_100017ec_crit_edge ], [ 0, %dec_label_pc_100017e4 ]
  %v1_100017ec = load i32, i32* %r26.global-to-local, align 4
  %v2_100017ec = add i32 %v1_100017ec, %v0_10001800
  %v3_100017ec = inttoptr i32 %v2_100017ec to i32*
  %v4_100017ec = load i32, i32* %v3_100017ec, align 4
  store i32 %v4_100017ec, i32* %r3.global-to-local, align 4
  %v1_100017f0 = add i32 %v0_100017f0, 1
  store i32 %v1_100017f0, i32* %r28.global-to-local, align 4
  %v1_100017f4 = load i32, i32* %r27.global-to-local, align 4
  %v2_100017f4 = add i32 %v1_100017f4, %v0_10001800
  %v3_100017f4 = inttoptr i32 %v2_100017f4 to i32*
  %v4_100017f4 = load i32, i32* %v3_100017f4, align 4
  %v0_100017f8 = load i32, i32* @r31, align 4
  %v1_10001800 = add i32 %v0_10001800, 4
  store i32 %v1_10001800, i32* %r29.global-to-local, align 4
  store i32 268441608, i32* @lr, align 4
  %v4_10001804 = call i32 @function_10009d68(i32 %v4_100017ec, i32 %v4_100017f4, i32 %v0_100017f8, i32 16384)
  store i32 %v4_10001804, i32* %r3.global-to-local, align 4
  %v0_10001808 = load i32, i32* %r28.global-to-local, align 4
  %v1_10001808 = load i32, i32* @r30, align 4
  %v4_10001808 = icmp eq i32 %v0_10001808, %v1_10001808
  br i1 %v4_10001808, label %dec_label_pc_10001810, label %dec_label_pc_100017ec.dec_label_pc_100017ec_crit_edge

dec_label_pc_100017ec.dec_label_pc_100017ec_crit_edge: ; preds = %dec_label_pc_100017ec
  %v0_100017ec.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100017ec

dec_label_pc_10001810:                            ; preds = %dec_label_pc_100017ec
  %v0_10001810 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10001810 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10001810 = or i1 %v0_10001810, %v1_10001810
  br i1 %v2_10001810, label %dec_label_pc_100017dc.outer, label %dec_label_pc_100017e0

dec_label_pc_10001830:                            ; preds = %dec_label_pc_10001894, %dec_label_pc_100018b0
  %v0_10001830 = load i32, i32* %r25.global-to-local, align 4
  %v1_10001830 = load i32, i32* %r26.global-to-local, align 4
  %v2_10001830 = add i32 %v1_10001830, %v0_10001830
  %v3_10001830 = inttoptr i32 %v2_10001830 to i32*
  %v4_10001830 = load i32, i32* %v3_10001830, align 4
  store i32 %v4_10001830, i32* @r3, align 4
  %v1_1000183c = add i32 %v0_10001830, 4
  store i32 %v1_1000183c, i32* %r25.global-to-local, align 4
  store i32 268441668, i32* @lr, align 4
  %v0_10001840 = call i32 @function_10009c1c()
  store i32 %v0_10001840, i32* %r3.global-to-local, align 4
  %v0_10001844 = load i32, i32* %r24.global-to-local, align 4
  %v1_10001844 = load i32, i32* @r30, align 4
  %v4_10001844 = icmp eq i32 %v0_10001844, %v1_10001844
  %v0_10001848 = load i32, i32* @r28, align 4
  %v1_10001848 = add i32 %v0_10001848, 24
  store i32 %v1_10001848, i32* @r28, align 4
  br i1 %v4_10001844, label %dec_label_pc_100017d8, label %dec_label_pc_10001850

dec_label_pc_10001850:                            ; preds = %dec_label_pc_10001720, %dec_label_pc_10001830
  %v0_1000185c = phi i32 [ %v0_10001844, %dec_label_pc_10001830 ], [ 0, %dec_label_pc_10001720 ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_1000185c = add i32 %v0_1000185c, 1
  store i32 %v1_1000185c, i32* %r24.global-to-local, align 4
  store i32 268441700, i32* @lr, align 4
  %v2_10001860 = call i32 @function_1000a178(i32 65535, i32 1)
  store i32 %v2_10001860, i32* %r3.global-to-local, align 4
  %v1_10001864 = load i32, i32* %r25.global-to-local, align 4
  %v2_10001864 = load i32, i32* %r27.global-to-local, align 4
  %v3_10001864 = add i32 %v2_10001864, %v1_10001864
  %v4_10001864 = inttoptr i32 %v3_10001864 to i32*
  store i32 %v2_10001860, i32* %v4_10001864, align 4
  %v0_10001868 = call i32 @function_10005f3c()
  %v1_10001868 = trunc i32 %v0_10001868 to i16
  %v3_1000186c = load i32, i32* @r28, align 4
  %v4_1000186c = add i32 %v3_1000186c, 2
  %v5_1000186c = inttoptr i32 %v4_1000186c to i16*
  store i16 %v1_10001868, i16* %v5_1000186c, align 2
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268441728, i32* @lr, align 4
  %v3_1000187c = call i32 @function_10009e1c(i32 2, i32 2, i32 0)
  store i32 %v3_1000187c, i32* %r3.global-to-local, align 4
  %v3_10001884 = icmp eq i32 %v3_1000187c, -1
  %v1_1000188c = load i32, i32* %r25.global-to-local, align 4
  %v2_1000188c = load i32, i32* %r26.global-to-local, align 4
  %v3_1000188c = add i32 %v2_1000188c, %v1_1000188c
  %v4_1000188c = inttoptr i32 %v3_1000188c to i32*
  store i32 %v3_1000187c, i32* %v4_1000188c, align 4
  br i1 %v3_10001884, label %dec_label_pc_100018b4, label %dec_label_pc_10001894

dec_label_pc_10001894:                            ; preds = %dec_label_pc_10001850
  %v0_10001894 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10001894, i32* %stack_var_-72, align 4
  store i32 268441764, i32* @lr, align 4
  %v0_100018a0 = load i32, i32* %r3.global-to-local, align 4
  %v3_100018a0 = call i32 @function_10009be8(i32 %v0_100018a0, i32 %v2_10001880, i32 16)
  store i32 %v3_100018a0, i32* %r3.global-to-local, align 4
  %v0_100018a4 = load i32, i32* @r28, align 4
  %v1_100018a4 = add i32 %v0_100018a4, 20
  %v2_100018a4 = inttoptr i32 %v1_100018a4 to i8*
  %v3_100018a4 = load i8, i8* %v2_100018a4, align 1
  %v2_100018a8 = icmp ugt i8 %v3_100018a4, 31
  br i1 %v2_100018a8, label %dec_label_pc_10001830, label %dec_label_pc_100018b0

dec_label_pc_100018b0:                            ; preds = %dec_label_pc_10001894
  %v1_10001818 = add i32 %v0_100018a4, 16
  %v2_10001818 = inttoptr i32 %v1_10001818 to i32*
  %v3_10001818 = load i32, i32* %v2_10001818, align 4
  store i32 %v3_10001818, i32* %r29.global-to-local, align 4
  %v0_1000181c = call i32 @function_10005f3c()
  store i32 %v0_1000181c, i32* %r3.global-to-local, align 4
  %v0_10001820 = load i32, i32* @r28, align 4
  %v1_10001820 = add i32 %v0_10001820, 20
  %v2_10001820 = inttoptr i32 %v1_10001820 to i8*
  %v3_10001820 = load i8, i8* %v2_10001820, align 1
  %tmp43 = urem i8 %v3_10001820, 64
  %v2_10001824 = zext i8 %tmp43 to i32
  %v3_10001824 = lshr i32 %v0_1000181c, %v2_10001824
  %v0_10001828 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001828 = add i32 %v3_10001824, %v0_10001828
  store i32 %v2_10001828, i32* %r3.global-to-local, align 4
  %v2_1000182c = add i32 %v0_10001820, 4
  %v3_1000182c = inttoptr i32 %v2_1000182c to i32*
  store i32 %v2_10001828, i32* %v3_1000182c, align 4
  br label %dec_label_pc_10001830

dec_label_pc_100018b4:                            ; preds = %dec_label_pc_10001744, %dec_label_pc_10001850
  %v1_100018c8 = call %0 @__asm_mtcrf(i32 24, i32 %v0_10001620)
  store i32 %v0_1000164c, i32* %r28.global-to-local, align 4
  store i32 %v0_10001654, i32* %r29.global-to-local, align 4
  %v0_100018fc = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100018fc

dec_label_pc_10001900:                            ; preds = %dec_label_pc_10001618
  %v0_10001900 = call i32 @function_10005f3c()
  store i32 %v0_10001900, i32* %r3.global-to-local, align 4
  %v1_10001904 = urem i32 %v0_10001900, 65536
  store i32 %v1_10001904, i32* %r22.global-to-local, align 4
  br label %dec_label_pc_10001718

dec_label_pc_1000190c:                            ; preds = %dec_label_pc_100017e0
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10001914

dec_label_pc_10001914:                            ; preds = %dec_label_pc_10001914.dec_label_pc_10001914_crit_edge, %dec_label_pc_1000190c
  %v0_1000191c = phi i32 [ %v0_10001940, %dec_label_pc_10001914.dec_label_pc_10001914_crit_edge ], [ 0, %dec_label_pc_1000190c ]
  %v0_10001914 = phi i32 [ %v0_10001914.pre, %dec_label_pc_10001914.dec_label_pc_10001914_crit_edge ], [ 0, %dec_label_pc_1000190c ]
  %v1_10001914 = load i32, i32* %r27.global-to-local, align 4
  %v2_10001914 = add i32 %v1_10001914, %v0_10001914
  %v3_10001914 = inttoptr i32 %v2_10001914 to i32*
  %v4_10001914 = load i32, i32* %v3_10001914, align 4
  store i32 %v4_10001914, i32* @r29, align 4
  %v0_10001918 = load i32, i32* @r31, align 4
  store i32 %v0_10001918, i32* @r4, align 4
  %v1_1000191c = add i32 %v0_1000191c, 1
  store i32 %v1_1000191c, i32* %r25.global-to-local, align 4
  store i32 %v4_10001914, i32* @r3, align 4
  %v0_10001924 = call i32 @function_10006110()
  store i32 %v0_10001924, i32* %r3.global-to-local, align 4
  %v0_10001928 = load i32, i32* %r28.global-to-local, align 4
  %v1_10001928 = load i32, i32* %r26.global-to-local, align 4
  %v2_10001928 = add i32 %v1_10001928, %v0_10001928
  %v3_10001928 = inttoptr i32 %v2_10001928 to i32*
  %v4_10001928 = load i32, i32* %v3_10001928, align 4
  store i32 %v4_10001928, i32* %r3.global-to-local, align 4
  %v0_1000192c = load i32, i32* @r29, align 4
  %v0_10001930 = load i32, i32* @r31, align 4
  %v1_10001938 = add i32 %v0_10001928, 4
  store i32 %v1_10001938, i32* %r28.global-to-local, align 4
  store i32 268441920, i32* @lr, align 4
  %v4_1000193c = call i32 @function_10009d68(i32 %v4_10001928, i32 %v0_1000192c, i32 %v0_10001930, i32 16384)
  store i32 %v4_1000193c, i32* %r3.global-to-local, align 4
  %v0_10001940 = load i32, i32* %r25.global-to-local, align 4
  %v1_10001940 = load i32, i32* @r30, align 4
  %v4_10001940 = icmp eq i32 %v0_10001940, %v1_10001940
  br i1 %v4_10001940, label %dec_label_pc_10001948, label %dec_label_pc_10001914.dec_label_pc_10001914_crit_edge

dec_label_pc_10001914.dec_label_pc_10001914_crit_edge: ; preds = %dec_label_pc_10001914
  %v0_10001914.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10001914

dec_label_pc_10001948:                            ; preds = %dec_label_pc_10001914
  %v0_10001948 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10001948 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10001948 = or i1 %v0_10001948, %v1_10001948
  br i1 %v2_10001948, label %dec_label_pc_100017dc.outer, label %dec_label_pc_100017e0

; uselistorder directives
  uselistorder i1 %v1_10001948, { 1, 0 }
  uselistorder i1 %v0_10001948, { 1, 0 }
  uselistorder i32 %v0_10001940, { 1, 0 }
  uselistorder i32 %v0_10001928, { 1, 0 }
  uselistorder i32 %v0_10001830, { 1, 0 }
  uselistorder i1 %v1_10001810, { 1, 0 }
  uselistorder i1 %v0_10001810, { 1, 0 }
  uselistorder i32 %v0_10001808, { 1, 0 }
  uselistorder i32 %v0_10001800, { 2, 0, 1 }
  uselistorder i32 %v0_100017cc, { 1, 0 }
  uselistorder i32 %v0_100017b8, { 1, 0 }
  uselistorder i32 %v2_10001880, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 0, 1, 3, 2 }
  uselistorder i32* %r3.global-to-local, { 9, 10, 11, 12, 27, 13, 14, 16, 17, 18, 19, 20, 21, 15, 22, 23, 2, 24, 25, 26, 28, 29, 30, 31, 3, 4, 5, 6, 7, 8, 1, 0 }
  uselistorder i32* %r26.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r25.global-to-local, { 3, 4, 5, 7, 8, 9, 6, 13, 10, 11, 12, 0, 1, 2 }
  uselistorder i32* %r24.global-to-local, { 2, 1, 3, 4, 0 }
  uselistorder i32* %r22.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r21.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 2, 0, 3 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_100018b4, { 1, 0 }
  uselistorder label %dec_label_pc_10001850, { 1, 0 }
  uselistorder label %dec_label_pc_10001830, { 1, 0 }
  uselistorder label %dec_label_pc_100017dc, { 1, 0 }
  uselistorder label %dec_label_pc_100017dc.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100017d8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100017b8, { 1, 0 }
  uselistorder label %dec_label_pc_10001744, { 1, 0 }
  uselistorder label %dec_label_pc_10001718, { 1, 0 }
}

define i32 @function_10001950(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10001950:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr3_lt.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp13 = call i16 @__decompiler_undefined_function_1()
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-404 = alloca i32, align 4
  %stack_var_-384 = alloca i32, align 4
  %stack_var_-368 = alloca i32, align 4
  %stack_var_-408 = alloca i32, align 4
  %v0_10001954 = load i32, i32* @lr, align 4
  store i32 %v0_10001954, i32* %r0.global-to-local, align 4
  %v0_10001958 = call i32 @__asm_mfcr()
  store i32 %v0_10001958, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r20.global-to-local, align 4
  %v0_10001968 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10001958, i32* %r21.global-to-local, align 4
  %v0_100019a0 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100019a8 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 268442052, i32* @lr, align 4
  %v2_100019c0 = call i32 @function_1000a178(i32 16, i32 16)
  store i32 %v2_100019c0, i32* %r22.global-to-local, align 4
  %v0_100019cc = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_100019cc, i32* %r3.global-to-local, align 4
  store i32 268442068, i32* @lr, align 4
  %v2_100019d0 = call i32 @function_1000a178(i32 %v0_100019cc, i32 4)
  %v0_100019d4 = load i32, i32* @r28, align 4
  store i32 %v2_100019d0, i32* %r23.global-to-local, align 4
  %v0_100019e4 = load i32, i32* @r29, align 4
  store i32 %v0_100019e4, i32* %r3.global-to-local, align 4
  store i32 268442092, i32* @lr, align 4
  %v4_100019e8 = inttoptr i32 %v0_100019d4 to i32*
  %v5_100019e8 = call i32 @function_100006a8(i32 %v0_100019e4, i32* %v4_100019e8, i32 2, i32 0)
  %v5_100019f8 = trunc i32 %v5_100019e8 to i8
  %v0_10001a00 = load i32, i32* @r28, align 4
  %v0_10001a04 = load i32, i32* @r29, align 4
  store i32 %v0_10001a04, i32* %r3.global-to-local, align 4
  store i32 268442124, i32* @lr, align 4
  %v4_10001a08 = inttoptr i32 %v0_10001a00 to i32*
  %v5_10001a08 = call i32 @function_100006a8(i32 %v0_10001a04, i32* %v4_10001a08, i32 3, i32 65535)
  %v0_10001a0c = load i32, i32* @r28, align 4
  store i32 %v5_10001a08, i32* @r31, align 4
  %v0_10001a1c = load i32, i32* @r29, align 4
  store i32 %v0_10001a1c, i32* %r3.global-to-local, align 4
  store i32 268442148, i32* @lr, align 4
  %v4_10001a20 = inttoptr i32 %v0_10001a0c to i32*
  %v5_10001a20 = call i32 @function_100006a8(i32 %v0_10001a1c, i32* %v4_10001a20, i32 4, i32 64)
  %v0_10001a24 = load i32, i32* @r28, align 4
  %v5_10001a30 = trunc i32 %v5_10001a20 to i8
  %v0_10001a38 = load i32, i32* @r29, align 4
  store i32 %v0_10001a38, i32* %r3.global-to-local, align 4
  store i32 268442176, i32* @lr, align 4
  %v4_10001a3c = inttoptr i32 %v0_10001a24 to i32*
  %v5_10001a3c = call i32 @function_100006a8(i32 %v0_10001a38, i32* %v4_10001a3c, i32 5, i32 1)
  %v1_10001a44 = urem i32 %v5_10001a3c, 256
  %v0_10001a50 = load i32, i32* @r28, align 4
  %v0_10001a58 = load i32, i32* @r29, align 4
  store i32 %v0_10001a58, i32* %r3.global-to-local, align 4
  store i32 268442208, i32* @lr, align 4
  %v4_10001a5c = inttoptr i32 %v0_10001a50 to i32*
  %v5_10001a5c = call i32 @function_100006a8(i32 %v0_10001a58, i32* %v4_10001a5c, i32 7, i32 65535)
  %v0_10001a60 = load i32, i32* @r28, align 4
  %v5_10001a6c = trunc i32 %v5_10001a5c to i16
  %v0_10001a74 = load i32, i32* @r29, align 4
  store i32 %v0_10001a74, i32* %r3.global-to-local, align 4
  store i32 268442236, i32* @lr, align 4
  %v4_10001a78 = inttoptr i32 %v0_10001a60 to i32*
  %v5_10001a78 = call i32 @function_100006a8(i32 %v0_10001a74, i32* %v4_10001a78, i32 11, i32 1)
  %v0_10001a7c = load i32, i32* @r28, align 4
  %v1_10001a80 = urem i32 %v5_10001a78, 256
  %v0_10001a90 = load i32, i32* @r29, align 4
  store i32 %v0_10001a90, i32* %r3.global-to-local, align 4
  store i32 268442264, i32* @lr, align 4
  %v4_10001a94 = inttoptr i32 %v0_10001a7c to i32*
  %v5_10001a94 = call i32 @function_100006a8(i32 %v0_10001a90, i32* %v4_10001a94, i32 12, i32 1)
  %v0_10001a98 = load i32, i32* @r28, align 4
  %v1_10001aa4 = urem i32 %v5_10001a94, 256
  %v0_10001aa8 = load i32, i32* @r29, align 4
  store i32 %v0_10001aa8, i32* %r3.global-to-local, align 4
  store i32 268442288, i32* @lr, align 4
  %v4_10001aac = inttoptr i32 %v0_10001a98 to i32*
  %v5_10001aac = call i32 @function_100006a8(i32 %v0_10001aa8, i32* %v4_10001aac, i32 13, i32 1)
  %v0_10001ab0 = load i32, i32* @r28, align 4
  %v1_10001abc = urem i32 %v5_10001aac, 256
  %v0_10001ac0 = load i32, i32* @r29, align 4
  store i32 %v0_10001ac0, i32* %r3.global-to-local, align 4
  store i32 268442312, i32* @lr, align 4
  %v4_10001ac4 = inttoptr i32 %v0_10001ab0 to i32*
  %v5_10001ac4 = call i32 @function_100006a8(i32 %v0_10001ac0, i32* %v4_10001ac4, i32 14, i32 1)
  %v0_10001ac8 = load i32, i32* @r28, align 4
  %v1_10001ad4 = urem i32 %v5_10001ac4, 256
  %v0_10001ad8 = load i32, i32* @r29, align 4
  store i32 %v0_10001ad8, i32* %r3.global-to-local, align 4
  store i32 268442336, i32* @lr, align 4
  %v4_10001adc = inttoptr i32 %v0_10001ac8 to i32*
  %v5_10001adc = call i32 @function_100006a8(i32 %v0_10001ad8, i32* %v4_10001adc, i32 15, i32 1)
  %v0_10001ae0 = load i32, i32* @r28, align 4
  %v1_10001aec = urem i32 %v5_10001adc, 256
  %v0_10001af0 = load i32, i32* @r29, align 4
  store i32 %v0_10001af0, i32* %r3.global-to-local, align 4
  store i32 268442360, i32* @lr, align 4
  %v4_10001af4 = inttoptr i32 %v0_10001ae0 to i32*
  %v5_10001af4 = call i32 @function_100006a8(i32 %v0_10001af0, i32* %v4_10001af4, i32 16, i32 1)
  %v0_10001b00 = load i32, i32* @r28, align 4
  %v1_10001b04 = urem i32 %v5_10001af4, 256
  %v0_10001b08 = load i32, i32* @r29, align 4
  store i32 %v0_10001b08, i32* %r3.global-to-local, align 4
  store i32 268442384, i32* @lr, align 4
  %v4_10001b0c = inttoptr i32 %v0_10001b00 to i32*
  %v5_10001b0c = call i32 @function_100006a8(i32 %v0_10001b08, i32* %v4_10001b0c, i32 0, i32 768)
  %v0_10001b10 = load i32, i32* @r28, align 4
  store i32 %v5_10001b0c, i32* %r25.global-to-local, align 4
  %v0_10001b20 = load i32, i32* @r29, align 4
  store i32 %v0_10001b20, i32* %r3.global-to-local, align 4
  store i32 268442408, i32* @lr, align 4
  %v4_10001b24 = inttoptr i32 %v0_10001b10 to i32*
  %v5_10001b24 = call i32 @function_100006a8(i32 %v0_10001b20, i32* %v4_10001b24, i32 1, i32 1)
  %v1_10001b2c = urem i32 %v5_10001b24, 256
  store i32 %v1_10001b2c, i32* %r27.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268442428, i32* @lr, align 4
  %v3_10001b38 = call i32 @function_10009e1c(i32 2, i32 3, i32 6)
  store i32 %v3_10001b38, i32* %r3.global-to-local, align 4
  %v3_10001b3c = icmp eq i32 %v3_10001b38, -1
  store i1 %v3_10001b3c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10001b38, i32* %r24.global-to-local, align 4
  br i1 %v3_10001b3c, label %dec_label_pc_10001cfc, label %dec_label_pc_10001b48

dec_label_pc_10001b48:                            ; preds = %dec_label_pc_10001950
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10001b54 = ptrtoint i32* %stack_var_-408 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-408, align 4
  store i32 268442468, i32* @lr, align 4
  %v4_10001b60 = call i32 @function_10009de0(i32 0, i32 3, i32 %v2_10001b54, i32 4)
  store i32 %v4_10001b60, i32* %r3.global-to-local, align 4
  %v3_10001b64 = icmp eq i32 %v4_10001b60, -1
  store i1 %v3_10001b64, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001b64, label %dec_label_pc_10001cf4, label %dec_label_pc_10001b6c

dec_label_pc_10001b6c:                            ; preds = %dec_label_pc_10001b48
  %v0_10001b6c = load i32, i32* %r21.global-to-local, align 4
  %v1_10001b6c = icmp slt i32 %v0_10001b6c, 0
  %v3_10001b6c = icmp eq i32 %v0_10001b6c, 0
  store i1 %v1_10001b6c, i1* %cr3_lt.global-to-local, align 1
  store i1 %v3_10001b6c, i1* %cr3_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-408, align 4
  %v0_10001b78 = load i32, i32* @r31, align 4
  %v1_10001b78 = urem i32 %v0_10001b78, 65536
  store i32 %v1_10001b78, i32* %r19.global-to-local, align 4
  %tmp49 = icmp slt i32 %v0_10001b6c, 1
  br i1 %tmp49, label %dec_label_pc_10001e94, label %dec_label_pc_10001b80

dec_label_pc_10001b80:                            ; preds = %dec_label_pc_10001b6c
  %v4_10001b80 = sext i16 %v5_10001a6c to i32
  store i32 %v4_10001b80, i32* %r9.global-to-local, align 4
  store i32 65535, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cr4_eq.global-to-local, align 1
  %v2_10001c24 = ptrtoint i32* %stack_var_-368 to i32
  %v2_10001c30 = ptrtoint i32* %stack_var_-384 to i32
  %v2_10001c34 = ptrtoint i32* %stack_var_-404 to i32
  %v4_10001c6c = zext i16 %tmp13 to i32
  %v1_10001c9c = and i32 %tmp, 1179648
  %v3_10001db0 = icmp eq i32 %v1_10001a44, 0
  %v4_10001dd0 = sext i8 %v5_100019f8 to i32
  %v4_10001dd8 = sext i8 %v5_10001a30 to i32
  %v1_10001ca0 = and i32 %tmp, 327680
  %v3_10001ca0 = icmp eq i32 %v1_10001ca0, 0
  %v4_10001ca8 = icmp eq i32 %v1_10001c9c, 1179648
  br label %dec_label_pc_10001b8c

dec_label_pc_10001b8c:                            ; preds = %dec_label_pc_10001e80, %dec_label_pc_10001cb4, %dec_label_pc_10001b80
  %v0_10001b8c = load i32, i32* %r25.global-to-local, align 4
  %v1_10001b8c = add i32 %v0_10001b8c, 40
  store i32 %v1_10001b8c, i32* %r26.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268442528, i32* @lr, align 4
  %v3_10001b9c53 = call i32 @function_10009e1c(i32 2, i32 1, i32 0)
  store i32 %v3_10001b9c53, i32* %r3.global-to-local, align 4
  %v3_10001ba055 = icmp eq i32 %v3_10001b9c53, -1
  store i1 %v3_10001ba055, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10001b9c53, i32* %r28.global-to-local, align 4
  br i1 %v3_10001ba055, label %dec_label_pc_10001e80, label %dec_label_pc_10001bac

dec_label_pc_10001bac:                            ; preds = %dec_label_pc_10001b8c, %dec_label_pc_10001c8c
  store i32 3, i32* @r4, align 4
  store i32 268442556, i32* @lr, align 4
  %v1_10001bb8 = call i32 @function_10008fe4(i32 3)
  store i32 4, i32* @r4, align 4
  %v0_10001bc4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10001bc4, i32* %r3.global-to-local, align 4
  store i32 268442576, i32* @lr, align 4
  %v2_10001bcc = call i32 @function_10008fe4(i32 %v0_10001bc4)
  store i32 %v2_10001bcc, i32* %r3.global-to-local, align 4
  %v3_10001bd0 = load i32, i32* %stack_var_-408, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10001bd8 = mul i32 %v3_10001bd0, 24
  store i32 %v1_10001bd8, i32* %r0.global-to-local, align 4
  %v0_10001be0 = load i32, i32* %r20.global-to-local, align 4
  %v2_10001be0 = add i32 %v0_10001be0, %v1_10001bd8
  store i32 %v2_10001be0, i32* %r11.global-to-local, align 4
  %v1_10001be4 = add i32 %v2_10001be0, 20
  %v2_10001be4 = inttoptr i32 %v1_10001be4 to i8*
  %v3_10001be4 = load i8, i8* %v2_10001be4, align 1
  %v4_10001be4 = zext i8 %v3_10001be4 to i32
  store i32 %v4_10001be4, i32* %r9.global-to-local, align 4
  %v3_10001be8 = icmp eq i8 %v3_10001be4, 31
  store i1 %v3_10001be8, i1* %cr7_eq.global-to-local, align 1
  %tmp50 = icmp ult i8 %v3_10001be4, 32
  %v1_10001cc0 = add i32 %v2_10001be0, 16
  %v2_10001cc0 = inttoptr i32 %v1_10001cc0 to i32*
  %v3_10001cc0 = load i32, i32* %v2_10001cc0, align 4
  br i1 %tmp50, label %dec_label_pc_10001cc0, label %dec_label_pc_10001bf0

dec_label_pc_10001bf0:                            ; preds = %dec_label_pc_10001bac
  store i32 %v3_10001cc0, i32* %r0.global-to-local, align 4
  %v0_10001bf8 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10001bf8, label %dec_label_pc_10001ce8, label %dec_label_pc_10001bfc

dec_label_pc_10001bfc:                            ; preds = %dec_label_pc_10001cc0, %dec_label_pc_10001bf0
  %stack_var_-396.0 = phi i32 [ %v2_10001cdc, %dec_label_pc_10001cc0 ], [ %v3_10001cc0, %dec_label_pc_10001bf0 ]
  store i32 %v4_10001b80, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10001c04

dec_label_pc_10001c04:                            ; preds = %dec_label_pc_10001ce8, %dec_label_pc_10001bfc
  %stack_var_-396.1 = phi i32 [ %stack_var_-396.2, %dec_label_pc_10001ce8 ], [ %stack_var_-396.0, %dec_label_pc_10001bfc ]
  %storemerge = phi i16 [ %v1_10001ce8, %dec_label_pc_10001ce8 ], [ %v5_10001a6c, %dec_label_pc_10001bfc ]
  %v0_10001c0c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10001c0c, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10001c14.19 to i32), i32* @lr, align 4
  %v0_10001c10 = call i32 @function_10009c1c()
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268442652, i32* @lr, align 4
  %v0_10001c18 = call i32 @function_1000949c()
  store i32 %v0_10001c18, i32* %r3.global-to-local, align 4
  store i32 %v0_10001c18, i32* @r31, align 4
  %v4_10001c60 = icmp eq i32 %tmp14, %stack_var_-396.1
  %v4_10001c70 = zext i16 %storemerge to i32
  %v4_10001c74 = icmp eq i16 %storemerge, %tmp13
  %v4_10001c60.not = xor i1 %v4_10001c60, true
  br label %dec_label_pc_10001c20

dec_label_pc_10001c20:                            ; preds = %dec_label_pc_10001c7c, %dec_label_pc_10001c04
  store i32 16, i32* %r0.global-to-local, align 4
  store i32 %v2_10001c30, i32* %r7.global-to-local, align 4
  store i32 %v2_10001c34, i32* %r8.global-to-local, align 4
  %v0_10001c38 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10001c38, i32* %r3.global-to-local, align 4
  store i32 16, i32* %stack_var_-404, align 4
  store i32 268442692, i32* @lr, align 4
  %v6_10001c40 = call i32 @function_10009d28(i32 %v0_10001c38, i32 %v2_10001c24, i32 256, i32 16384, i32 %v2_10001c30, i32 %v2_10001c34)
  store i32 %v6_10001c40, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_10001c4c = icmp eq i32 %v6_10001c40, -1
  store i1 %v3_10001c4c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001c4c, label %dec_label_pc_10001cfc, label %dec_label_pc_10001c58

dec_label_pc_10001c58:                            ; preds = %dec_label_pc_10001c20
  store i32 %tmp14, i32* %r10.global-to-local, align 4
  store i32 %stack_var_-396.1, i32* %r0.global-to-local, align 4
  store i1 %v4_10001c60, i1* %cr7_eq.global-to-local, align 1
  %tmp51 = icmp ult i32 %v6_10001c40, 41
  %or.cond = or i1 %tmp51, %v4_10001c60.not
  br i1 %or.cond, label %dec_label_pc_10001c7c, label %dec_label_pc_10001c6c

dec_label_pc_10001c6c:                            ; preds = %dec_label_pc_10001c58
  store i32 %v4_10001c6c, i32* %r0.global-to-local, align 4
  store i32 %v4_10001c70, i32* %r8.global-to-local, align 4
  store i1 %v4_10001c74, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10001c74, label %dec_label_pc_10001c98, label %dec_label_pc_10001c7c

dec_label_pc_10001c7c:                            ; preds = %dec_label_pc_10001c58, %dec_label_pc_10001cb0, %dec_label_pc_10001c6c
  store i32 268442752, i32* @lr, align 4
  %v0_10001c7c = call i32 @function_1000949c()
  %v0_10001c80 = load i32, i32* @r31, align 4
  %v2_10001c80 = sub i32 %v0_10001c7c, %v0_10001c80
  store i32 %v2_10001c80, i32* %r3.global-to-local, align 4
  %v3_10001c84 = icmp eq i32 %v2_10001c80, 10
  store i1 %v3_10001c84, i1* %cr7_eq.global-to-local, align 1
  %tmp52 = icmp slt i32 %v2_10001c80, 11
  br i1 %tmp52, label %dec_label_pc_10001c20, label %dec_label_pc_10001c8c

dec_label_pc_10001c8c:                            ; preds = %dec_label_pc_10001c7c
  %v0_10001c8c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10001c8c, i32* %r3.global-to-local, align 4
  store i32 268442772, i32* @lr, align 4
  %v0_10001c90 = call i32 @function_100090cc()
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268442528, i32* @lr, align 4
  %v3_10001b9c = call i32 @function_10009e1c(i32 2, i32 1, i32 0)
  store i32 %v3_10001b9c, i32* %r3.global-to-local, align 4
  %v3_10001ba0 = icmp eq i32 %v3_10001b9c, -1
  store i1 %v3_10001ba0, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10001b9c, i32* %r28.global-to-local, align 4
  br i1 %v3_10001ba0, label %dec_label_pc_10001e80, label %dec_label_pc_10001bac

dec_label_pc_10001c98:                            ; preds = %dec_label_pc_10001c6c
  store i32 %tmp, i32* %r9.global-to-local, align 4
  store i32 %v1_10001c9c, i32* %r11.global-to-local, align 4
  store i32 1179648, i32* %r0.global-to-local, align 4
  store i1 %v4_10001ca8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10001ca8, label %dec_label_pc_10001d5c, label %dec_label_pc_10001cb0

dec_label_pc_10001cb0:                            ; preds = %dec_label_pc_10001c98
  br i1 %v3_10001ca0, label %dec_label_pc_10001c7c, label %dec_label_pc_10001cb4

dec_label_pc_10001cb4:                            ; preds = %dec_label_pc_10001cb0
  %v0_10001cb4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10001cb4, i32* %r3.global-to-local, align 4
  store i32 268442812, i32* @lr, align 4
  %v0_10001cb8 = call i32 @function_100090cc()
  store i32 %v0_10001cb8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001b8c

dec_label_pc_10001cc0:                            ; preds = %dec_label_pc_10001bac
  store i32 %v3_10001cc0, i32* %r29.global-to-local, align 4
  %v0_10001cc4 = call i32 @function_10005f3c()
  store i32 %v0_10001cc4, i32* %r3.global-to-local, align 4
  %v3_10001cc8 = load i32, i32* %stack_var_-408, align 4
  %v1_10001ccc = mul i32 %v3_10001cc8, 24
  %v1_10001cd0 = load i32, i32* %r20.global-to-local, align 4
  %v2_10001cd0 = add i32 %v1_10001cd0, %v1_10001ccc
  store i32 %v2_10001cd0, i32* %r9.global-to-local, align 4
  %v1_10001cd4 = add i32 %v2_10001cd0, 20
  %v2_10001cd4 = inttoptr i32 %v1_10001cd4 to i8*
  %v3_10001cd4 = load i8, i8* %v2_10001cd4, align 1
  %v4_10001cd4 = zext i8 %v3_10001cd4 to i32
  store i32 %v4_10001cd4, i32* %r0.global-to-local, align 4
  %tmp56 = urem i8 %v3_10001cd4, 64
  %v2_10001cd8 = zext i8 %tmp56 to i32
  %v3_10001cd8 = lshr i32 %v0_10001cc4, %v2_10001cd8
  store i32 %v3_10001cd8, i32* %r3.global-to-local, align 4
  %v0_10001cdc = load i32, i32* %r29.global-to-local, align 4
  %v2_10001cdc = add i32 %v3_10001cd8, %v0_10001cdc
  store i32 %v2_10001cdc, i32* %r29.global-to-local, align 4
  %v0_10001ce4 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10001ce4, label %dec_label_pc_10001ce8, label %dec_label_pc_10001bfc

dec_label_pc_10001ce8:                            ; preds = %dec_label_pc_10001cc0, %dec_label_pc_10001bf0
  %stack_var_-396.2 = phi i32 [ %v2_10001cdc, %dec_label_pc_10001cc0 ], [ %v3_10001cc0, %dec_label_pc_10001bf0 ]
  %v0_10001ce8 = call i32 @function_10005f3c()
  %v1_10001ce8 = trunc i32 %v0_10001ce8 to i16
  store i32 %v0_10001ce8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001c04

dec_label_pc_10001cf4:                            ; preds = %dec_label_pc_10001b48
  %v0_10001cf4 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10001cf4, i32* %r3.global-to-local, align 4
  store i32 268442876, i32* @lr, align 4
  %v0_10001cf8 = call i32 @function_100090cc()
  store i32 %v0_10001cf8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001cfc

dec_label_pc_10001cfc:                            ; preds = %dec_label_pc_10001c20, %dec_label_pc_10001950, %dec_label_pc_10001cf4
  store i32 %v0_10001968, i32* %r0.global-to-local, align 4
  %v1_10001d10 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10001958)
  store i32 %v0_100019a0, i32* %r28.global-to-local, align 4
  store i32 %v0_100019a8, i32* %r29.global-to-local, align 4
  %v0_10001d58 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10001d58

dec_label_pc_10001d5c:                            ; preds = %dec_label_pc_10001c98
  %v3_10001d5c = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10001d5c, i32* %r29.global-to-local, align 4
  %v0_10001d60 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10001d60, i32* @r3, align 4
  %v0_10001d64 = load i32, i32* @r30, align 4
  %v1_10001d64 = add i32 %v0_10001d64, 2
  %v2_10001d64 = inttoptr i32 %v1_10001d64 to i16*
  %v3_10001d64 = load i16, i16* %v2_10001d64, align 2
  %v4_10001d64 = zext i16 %v3_10001d64 to i32
  store i32 %v4_10001d64, i32* %r11.global-to-local, align 4
  %v1_10001d68 = mul i32 %v3_10001d5c, 16
  store i32 %v1_10001d68, i32* %r9.global-to-local, align 4
  %v1_10001d6c = mul i32 %v3_10001d5c, 4
  store i32 %v1_10001d6c, i32* @r29, align 4
  %v1_10001d70 = load i32, i32* %r22.global-to-local, align 4
  %v3_10001d70 = add i32 %v1_10001d70, %v1_10001d68
  %v4_10001d70 = inttoptr i32 %v3_10001d70 to i32*
  store i32 %tmp14, i32* %v4_10001d70, align 4
  %v0_10001d74 = load i32, i32* %r22.global-to-local, align 4
  %v1_10001d74 = load i32, i32* %r9.global-to-local, align 4
  %v2_10001d74 = add i32 %v1_10001d74, %v0_10001d74
  store i32 %v2_10001d74, i32* %r9.global-to-local, align 4
  %v0_10001d78 = load i32, i32* %r8.global-to-local, align 4
  %v1_10001d78 = trunc i32 %v0_10001d78 to i16
  %v3_10001d78 = add i32 %v2_10001d74, 14
  %v4_10001d78 = inttoptr i32 %v3_10001d78 to i16*
  store i16 %v1_10001d78, i16* %v4_10001d78, align 2
  %v0_10001d7c = load i32, i32* @r30, align 4
  %v1_10001d7c = add i32 %v0_10001d7c, 4
  %v2_10001d7c = inttoptr i32 %v1_10001d7c to i32*
  %v3_10001d7c = load i32, i32* %v2_10001d7c, align 4
  store i32 %v3_10001d7c, i32* %r0.global-to-local, align 4
  %v0_10001d80 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001d80 = trunc i32 %v0_10001d80 to i16
  %v2_10001d80 = load i32, i32* %r9.global-to-local, align 4
  %v3_10001d80 = add i32 %v2_10001d80, 12
  %v4_10001d80 = inttoptr i32 %v3_10001d80 to i16*
  store i16 %v1_10001d80, i16* %v4_10001d80, align 2
  %v0_10001d84 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001d84 = load i32, i32* %r9.global-to-local, align 4
  %v2_10001d84 = add i32 %v1_10001d84, 4
  %v3_10001d84 = inttoptr i32 %v2_10001d84 to i32*
  store i32 %v0_10001d84, i32* %v3_10001d84, align 4
  %v0_10001d88 = load i32, i32* @r30, align 4
  %v1_10001d88 = add i32 %v0_10001d88, 8
  %v2_10001d88 = inttoptr i32 %v1_10001d88 to i32*
  %v3_10001d88 = load i32, i32* %v2_10001d88, align 4
  store i32 %v3_10001d88, i32* %r0.global-to-local, align 4
  %v1_10001d8c = load i32, i32* %r9.global-to-local, align 4
  %v2_10001d8c = add i32 %v1_10001d8c, 8
  %v3_10001d8c = inttoptr i32 %v2_10001d8c to i32*
  store i32 %v3_10001d88, i32* %v3_10001d8c, align 4
  store i32 268443028, i32* @lr, align 4
  %v0_10001d90 = call i32 @function_1000a020()
  store i32 %v0_10001d90, i32* %r3.global-to-local, align 4
  %v3_10001d94 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10001d94, i32* %r0.global-to-local, align 4
  %v1_10001d98 = load i32, i32* @r29, align 4
  %v2_10001d98 = load i32, i32* %r23.global-to-local, align 4
  %v3_10001d98 = add i32 %v2_10001d98, %v1_10001d98
  %v4_10001d98 = inttoptr i32 %v3_10001d98 to i32*
  store i32 %v0_10001d90, i32* %v4_10001d98, align 4
  %v0_10001d9c = load i32, i32* %r0.global-to-local, align 4
  %v1_10001d9c = mul i32 %v0_10001d9c, 4
  store i32 %v1_10001d9c, i32* %r0.global-to-local, align 4
  %v0_10001da0 = load i32, i32* %r23.global-to-local, align 4
  %v2_10001da0 = add i32 %v0_10001da0, %v1_10001d9c
  %v3_10001da0 = inttoptr i32 %v2_10001da0 to i32*
  %v4_10001da0 = load i32, i32* %v3_10001da0, align 4
  store i32 %v4_10001da0, i32* @r31, align 4
  store i32 %v1_10001a44, i32* %r0.global-to-local, align 4
  %v1_10001da8 = inttoptr i32 %v4_10001da0 to i32*
  %v2_10001da8 = load i32, i32* %v1_10001da8, align 4
  store i32 %v2_10001da8, i32* %r9.global-to-local, align 4
  %v1_10001dac = add i32 %v4_10001da0, 20
  store i32 %v1_10001dac, i32* @r30, align 4
  store i1 %v3_10001db0, i1* %cr7_eq.global-to-local, align 1
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_10001db8 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10001db8, i32* %r9.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_10001dc0 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_10001dc4 = load i32, i32* %r19.global-to-local, align 4
  %v1_10001dc4 = trunc i32 %v0_10001dc4 to i16
  %v2_10001dc4 = load i32, i32* @r31, align 4
  %v3_10001dc4 = add i32 %v2_10001dc4, 4
  %v4_10001dc4 = inttoptr i32 %v3_10001dc4 to i16*
  store i16 %v1_10001dc4, i16* %v4_10001dc4, align 2
  %v1_10001dc8 = load i32, i32* @r31, align 4
  %v2_10001dc8 = inttoptr i32 %v1_10001dc8 to i32*
  store i32 %v1_10001dc0, i32* %v2_10001dc8, align 4
  %v0_10001dcc = load i32, i32* %r26.global-to-local, align 4
  %v1_10001dcc = trunc i32 %v0_10001dcc to i16
  %v2_10001dcc = load i32, i32* @r31, align 4
  %v3_10001dcc = add i32 %v2_10001dcc, 2
  %v4_10001dcc = inttoptr i32 %v3_10001dcc to i16*
  store i16 %v1_10001dcc, i16* %v4_10001dcc, align 2
  store i32 %v4_10001dd0, i32* %r9.global-to-local, align 4
  %v2_10001dd4 = load i32, i32* @r31, align 4
  %v3_10001dd4 = add i32 %v2_10001dd4, 1
  %v4_10001dd4 = inttoptr i32 %v3_10001dd4 to i8*
  store i8 %v5_100019f8, i8* %v4_10001dd4, align 1
  store i32 %v4_10001dd8, i32* %r0.global-to-local, align 4
  %v2_10001ddc = load i32, i32* @r31, align 4
  %v3_10001ddc = add i32 %v2_10001ddc, 8
  %v4_10001ddc = inttoptr i32 %v3_10001ddc to i8*
  store i8 %v5_10001a30, i8* %v4_10001ddc, align 1
  %v0_10001de0 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10001de0, label %dec_label_pc_10001dec, label %dec_label_pc_10001de4

dec_label_pc_10001de4:                            ; preds = %dec_label_pc_10001d5c
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10001de8 = load i32, i32* @r31, align 4
  %v3_10001de8 = add i32 %v2_10001de8, 6
  %v4_10001de8 = inttoptr i32 %v3_10001de8 to i16*
  store i16 16384, i16* %v4_10001de8, align 2
  br label %dec_label_pc_10001dec

dec_label_pc_10001dec:                            ; preds = %dec_label_pc_10001d5c, %dec_label_pc_10001de4
  %v2_10001df4 = load i32, i32* @r31, align 4
  %v3_10001df4 = add i32 %v2_10001df4, 9
  %v4_10001df4 = inttoptr i32 %v3_10001df4 to i8*
  store i8 6, i8* %v4_10001df4, align 1
  %v3_10001df8 = load i32, i32* @global_var_1001c258.14, align 4
  store i32 %v3_10001df8, i32* %r0.global-to-local, align 4
  %v1_10001dfc = load i32, i32* @r31, align 4
  %v2_10001dfc = add i32 %v1_10001dfc, 12
  %v3_10001dfc = inttoptr i32 %v2_10001dfc to i32*
  store i32 %v3_10001df8, i32* %v3_10001dfc, align 4
  %v3_10001e00 = load i32, i32* %stack_var_-408, align 4
  %v1_10001e04 = mul i32 %v3_10001e00, 16
  store i32 %v1_10001e04, i32* %r9.global-to-local, align 4
  %v1_10001e08 = load i32, i32* %r22.global-to-local, align 4
  %v2_10001e08 = add i32 %v1_10001e08, %v1_10001e04
  %v3_10001e08 = inttoptr i32 %v2_10001e08 to i32*
  %v4_10001e08 = load i32, i32* %v3_10001e08, align 4
  store i32 %v4_10001e08, i32* %r0.global-to-local, align 4
  store i32 %v2_10001e08, i32* %r9.global-to-local, align 4
  %v1_10001e10 = add i32 %v2_10001e08, 12
  %v2_10001e10 = inttoptr i32 %v1_10001e10 to i16*
  %v3_10001e10 = load i16, i16* %v2_10001e10, align 2
  %v4_10001e10 = zext i16 %v3_10001e10 to i32
  store i32 %v4_10001e10, i32* %r11.global-to-local, align 4
  %v1_10001e14 = load i32, i32* @r31, align 4
  %v2_10001e14 = add i32 %v1_10001e14, 16
  %v3_10001e14 = inttoptr i32 %v2_10001e14 to i32*
  store i32 %v4_10001e08, i32* %v3_10001e14, align 4
  %v0_10001e18 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001e18 = trunc i32 %v0_10001e18 to i16
  %v2_10001e18 = load i32, i32* @r31, align 4
  %v3_10001e18 = add i32 %v2_10001e18, 20
  %v4_10001e18 = inttoptr i32 %v3_10001e18 to i16*
  store i16 %v1_10001e18, i16* %v4_10001e18, align 2
  %v0_10001e1c = load i32, i32* %r9.global-to-local, align 4
  %v1_10001e1c = add i32 %v0_10001e1c, 8
  %v2_10001e1c = inttoptr i32 %v1_10001e1c to i32*
  %v3_10001e1c = load i32, i32* %v2_10001e1c, align 4
  store i32 %v3_10001e1c, i32* %r0.global-to-local, align 4
  %v0_10001e20 = load i32, i32* @r30, align 4
  %v1_10001e20 = add i32 %v0_10001e20, 12
  %v2_10001e20 = inttoptr i32 %v1_10001e20 to i32*
  %v3_10001e20 = load i32, i32* %v2_10001e20, align 4
  store i32 %v3_10001e20, i32* %r11.global-to-local, align 4
  %v2_10001e24 = add i32 %v0_10001e20, 4
  %v3_10001e24 = inttoptr i32 %v2_10001e24 to i32*
  store i32 %v3_10001e1c, i32* %v3_10001e24, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_10001e2c = call i32 @__asm_rlwimi(i32 8, i32 28, i32 0, i32 3)
  store i32 %v1_10001e2c, i32* %r11.global-to-local, align 4
  %v0_10001e30 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001e30 = add i32 %v0_10001e30, 14
  %v2_10001e30 = inttoptr i32 %v1_10001e30 to i16*
  %v3_10001e30 = load i16, i16* %v2_10001e30, align 2
  %v4_10001e30 = zext i16 %v3_10001e30 to i32
  store i32 %v4_10001e30, i32* %r0.global-to-local, align 4
  %v1_10001e34 = add i32 %v0_10001e30, 4
  %v2_10001e34 = inttoptr i32 %v1_10001e34 to i32*
  %v3_10001e34 = load i32, i32* %v2_10001e34, align 4
  store i32 %v3_10001e34, i32* %r10.global-to-local, align 4
  %v1_10001e38 = or i32 %v1_10001e2c, 1114112
  store i32 %v1_10001e38, i32* %r11.global-to-local, align 4
  %v2_10001e3c = load i32, i32* @r30, align 4
  %v3_10001e3c = add i32 %v2_10001e3c, 2
  %v4_10001e3c = inttoptr i32 %v3_10001e3c to i16*
  store i16 %v3_10001e30, i16* %v4_10001e3c, align 2
  %v0_10001e40 = load i32, i32* %r10.global-to-local, align 4
  %v1_10001e40 = load i32, i32* @r30, align 4
  %v2_10001e40 = add i32 %v1_10001e40, 8
  %v3_10001e40 = inttoptr i32 %v2_10001e40 to i32*
  store i32 %v0_10001e40, i32* %v3_10001e40, align 4
  %v0_10001e44 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001e44 = load i32, i32* @r30, align 4
  %v2_10001e44 = add i32 %v1_10001e44, 12
  %v3_10001e44 = inttoptr i32 %v2_10001e44 to i32*
  store i32 %v0_10001e44, i32* %v3_10001e44, align 4
  %v0_10001e48 = call i32 @function_10005f3c()
  %v1_10001e48 = trunc i32 %v0_10001e48 to i16
  store i32 %v1_10001a80, i32* %r9.global-to-local, align 4
  %v3_10001e50 = load i32, i32* @r30, align 4
  %v4_10001e50 = add i32 %v3_10001e50, 14
  %v5_10001e50 = inttoptr i32 %v4_10001e50 to i16*
  store i16 %v1_10001e48, i16* %v5_10001e50, align 2
  %v0_10001e54 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10001e54, i32* @r4, align 4
  %v0_10001e58 = load i32, i32* @r31, align 4
  %v1_10001e58 = add i32 %v0_10001e58, 40
  store i32 %v1_10001e58, i32* @r3, align 4
  %v0_10001e5c = load i32, i32* @r30, align 4
  %v1_10001e5c = add i32 %v0_10001e5c, 12
  %v2_10001e5c = inttoptr i32 %v1_10001e5c to i32*
  %v3_10001e5c = load i32, i32* %v2_10001e5c, align 4
  store i32 %v3_10001e5c, i32* %r0.global-to-local, align 4
  %v1_10001e60 = call i32 @__asm_rlwimi(i32 %v1_10001a80, i32 21, i32 10, i32 10)
  store i32 %v1_10001e60, i32* %r0.global-to-local, align 4
  %v1_10001e64 = call i32 @__asm_rlwimi(i32 %v1_10001aa4, i32 20, i32 11, i32 11)
  store i32 %v1_10001e64, i32* %r0.global-to-local, align 4
  %v1_10001e68 = call i32 @__asm_rlwimi(i32 %v1_10001abc, i32 19, i32 12, i32 12)
  store i32 %v1_10001e68, i32* %r0.global-to-local, align 4
  %v1_10001e6c = call i32 @__asm_rlwimi(i32 %v1_10001ad4, i32 18, i32 13, i32 13)
  store i32 %v1_10001e6c, i32* %r0.global-to-local, align 4
  %v1_10001e70 = call i32 @__asm_rlwimi(i32 %v1_10001aec, i32 17, i32 14, i32 14)
  store i32 %v1_10001e70, i32* %r0.global-to-local, align 4
  %v1_10001e74 = call i32 @__asm_rlwimi(i32 %v1_10001b04, i32 16, i32 15, i32 15)
  store i32 %v1_10001e74, i32* %r0.global-to-local, align 4
  %v1_10001e78 = load i32, i32* @r30, align 4
  %v2_10001e78 = add i32 %v1_10001e78, 12
  %v3_10001e78 = inttoptr i32 %v2_10001e78 to i32*
  store i32 %v1_10001e74, i32* %v3_10001e78, align 4
  %v0_10001e7c = call i32 @function_10006110()
  store i32 %v0_10001e7c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001e80

dec_label_pc_10001e80:                            ; preds = %dec_label_pc_10001b8c, %dec_label_pc_10001c8c, %dec_label_pc_10001dec
  %v3_10001e80 = load i32, i32* %stack_var_-408, align 4
  %v1_10001e84 = add i32 %v3_10001e80, 1
  store i32 %v1_10001e84, i32* %r9.global-to-local, align 4
  %v1_10001e88 = load i32, i32* %r21.global-to-local, align 4
  %v2_10001e88 = icmp slt i32 %v1_10001e84, %v1_10001e88
  %v4_10001e88 = icmp eq i32 %v1_10001e84, %v1_10001e88
  store i1 %v4_10001e88, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10001e84, i32* %stack_var_-408, align 4
  br i1 %v2_10001e88, label %dec_label_pc_10001b8c, label %dec_label_pc_10001e94.loopexit

dec_label_pc_10001e94.loopexit:                   ; preds = %dec_label_pc_10001e80
  %v0_10001ea0.pre.pre = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_10001ea0.pre.pre = load i1, i1* %cr3_lt.global-to-local, align 1
  br label %dec_label_pc_10001e94

dec_label_pc_10001e94:                            ; preds = %dec_label_pc_10001e94.loopexit, %dec_label_pc_10001b6c
  %v1_10001ea0.pre = phi i1 [ %v1_10001ea0.pre.pre, %dec_label_pc_10001e94.loopexit ], [ %v1_10001b6c, %dec_label_pc_10001b6c ]
  %v0_10001ea0.pre = phi i1 [ %v0_10001ea0.pre.pre, %dec_label_pc_10001e94.loopexit ], [ %v3_10001b6c, %dec_label_pc_10001b6c ]
  %v0_10001e94 = load i32, i32* %r27.global-to-local, align 4
  %v3_10001e94 = icmp eq i32 %v0_10001e94, 0
  store i1 %v3_10001e94, i1* %cr2_eq.global-to-local, align 1
  %v0_10001e98 = load i32, i32* %r25.global-to-local, align 4
  %v1_10001e98 = add i32 %v0_10001e98, 40
  store i32 %v1_10001e98, i32* %r26.global-to-local, align 4
  %v1_10001e9c = add i32 %v0_10001e98, 20
  store i32 %v1_10001e9c, i32* @r31, align 4
  br label %dec_label_pc_10001ea0.outer

dec_label_pc_10001ea0.outer:                      ; preds = %dec_label_pc_10001f74, %dec_label_pc_10001e94
  %v1_10001ea0.ph = phi i1 [ %v1_10001ea0.pre, %dec_label_pc_10001e94 ], [ %v1_10001f74, %dec_label_pc_10001f74 ]
  %v0_10001ea0.ph = phi i1 [ %v0_10001ea0.pre, %dec_label_pc_10001e94 ], [ %v0_10001f74, %dec_label_pc_10001f74 ]
  %v2_10001ea0 = or i1 %v1_10001ea0.ph, %v0_10001ea0.ph
  br label %dec_label_pc_10001ea0

dec_label_pc_10001ea0:                            ; preds = %dec_label_pc_10001ea0.outer, %dec_label_pc_10001ea0
  br i1 %v2_10001ea0, label %dec_label_pc_10001ea0, label %dec_label_pc_10001ea4

dec_label_pc_10001ea4:                            ; preds = %dec_label_pc_10001ea0, %dec_label_pc_10001f74
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-408, align 4
  %v0_10001eb4 = load i32, i32* %r19.global-to-local, align 4
  %v4_10001eb4 = icmp eq i32 %v0_10001eb4, 65535
  store i1 %v4_10001eb4, i1* %cr4_eq.global-to-local, align 1
  %v0_10001eb8 = load i32, i32* @r31, align 4
  %v1_10001eb8 = urem i32 %v0_10001eb8, 65536
  store i32 %v1_10001eb8, i32* @r30, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10001ec4

dec_label_pc_10001ec4:                            ; preds = %dec_label_pc_10001ee0.dec_label_pc_10001ec4_crit_edge, %dec_label_pc_10001ea4
  %v0_10001ed0 = phi i1 [ %v0_10001ed0.pre, %dec_label_pc_10001ee0.dec_label_pc_10001ec4_crit_edge ], [ %v4_10001eb4, %dec_label_pc_10001ea4 ]
  %v0_10001ec4 = phi i32 [ %v1_10001f64, %dec_label_pc_10001ee0.dec_label_pc_10001ec4_crit_edge ], [ 0, %dec_label_pc_10001ea4 ]
  %v1_10001ec4 = mul i32 %v0_10001ec4, 4
  store i32 %v1_10001ec4, i32* %r0.global-to-local, align 4
  %v0_10001ec8 = load i32, i32* %r23.global-to-local, align 4
  %v2_10001ec8 = add i32 %v0_10001ec8, %v1_10001ec4
  %v3_10001ec8 = inttoptr i32 %v2_10001ec8 to i32*
  %v4_10001ec8 = load i32, i32* %v3_10001ec8, align 4
  store i32 %v4_10001ec8, i32* @r29, align 4
  %v1_10001ecc = add i32 %v4_10001ec8, 20
  store i32 %v1_10001ecc, i32* %r28.global-to-local, align 4
  br i1 %v0_10001ed0, label %dec_label_pc_10001f7c, label %dec_label_pc_10001ed4

dec_label_pc_10001ed4:                            ; preds = %dec_label_pc_10001ec4
  %v1_10001ed4 = add i32 %v4_10001ec8, 40
  store i32 %v1_10001ed4, i32* @r3, align 4
  %v0_10001ed8 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10001ed8, i32* @r4, align 4
  %v0_10001edc = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10001edc, label %dec_label_pc_10001ee0, label %dec_label_pc_10001f90

dec_label_pc_10001ee0:                            ; preds = %dec_label_pc_10001ed4, %dec_label_pc_10001f7c, %dec_label_pc_10001f90
  %v2_10001ee0 = phi i32 [ %v4_10001ec8, %dec_label_pc_10001ed4 ], [ %v0_10001f88, %dec_label_pc_10001f7c ], [ %v2_10001ee0.pre, %dec_label_pc_10001f90 ]
  %v0_10001ee0 = load i32, i32* %r27.global-to-local, align 4
  %v1_10001ee0 = trunc i32 %v0_10001ee0 to i16
  %v3_10001ee0 = add i32 %v2_10001ee0, 10
  %v4_10001ee0 = inttoptr i32 %v3_10001ee0 to i16*
  store i16 %v1_10001ee0, i16* %v4_10001ee0, align 2
  %v0_10001ee8 = load i32, i32* @r29, align 4
  store i32 %v0_10001ee8, i32* @r3, align 4
  %v2_10001eec = call i32 @function_100043cc(i32 %v0_10001ee8, i32 20)
  %v3_10001eec = trunc i32 %v2_10001eec to i16
  store i32 %v2_10001eec, i32* %r3.global-to-local, align 4
  %v3_10001ef0 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10001ef0, i32* %r9.global-to-local, align 4
  %v3_10001ef4 = load i32, i32* @r29, align 4
  %v4_10001ef4 = add i32 %v3_10001ef4, 10
  %v5_10001ef4 = inttoptr i32 %v4_10001ef4 to i16*
  store i16 %v3_10001eec, i16* %v5_10001ef4, align 2
  %v0_10001ef8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10001ef8, i32* @r4, align 4
  %v0_10001efc = load i32, i32* %r9.global-to-local, align 4
  %v1_10001efc = mul i32 %v0_10001efc, 16
  store i32 %v1_10001efc, i32* %r9.global-to-local, align 4
  %v0_10001f00 = load i32, i32* %r27.global-to-local, align 4
  %v1_10001f00 = trunc i32 %v0_10001f00 to i16
  %v3_10001f00 = add i32 %v0_10001ef8, 16
  %v4_10001f00 = inttoptr i32 %v3_10001f00 to i16*
  store i16 %v1_10001f00, i16* %v4_10001f00, align 2
  %v0_10001f04 = load i32, i32* %r22.global-to-local, align 4
  %v1_10001f04 = load i32, i32* %r9.global-to-local, align 4
  %v2_10001f04 = add i32 %v1_10001f04, %v0_10001f04
  store i32 %v2_10001f04, i32* %r9.global-to-local, align 4
  %v0_10001f08 = load i32, i32* @r30, align 4
  %v1_10001f0c = add i32 %v2_10001f04, 4
  %v2_10001f0c = inttoptr i32 %v1_10001f0c to i32*
  %v3_10001f0c = load i32, i32* %v2_10001f0c, align 4
  store i32 %v3_10001f0c, i32* %r11.global-to-local, align 4
  %v0_10001f10 = load i32, i32* @r31, align 4
  %v0_10001f14 = load i32, i32* @r29, align 4
  store i32 %v0_10001f14, i32* %r3.global-to-local, align 4
  %v1_10001f18 = load i32, i32* %r28.global-to-local, align 4
  %v2_10001f18 = add i32 %v1_10001f18, 4
  %v3_10001f18 = inttoptr i32 %v2_10001f18 to i32*
  store i32 %v3_10001f0c, i32* %v3_10001f18, align 4
  %v0_10001f1c = load i32, i32* %r11.global-to-local, align 4
  %v1_10001f1c = add i32 %v0_10001f1c, 1
  store i32 %v1_10001f1c, i32* %r11.global-to-local, align 4
  %v1_10001f20 = load i32, i32* %r9.global-to-local, align 4
  %v2_10001f20 = add i32 %v1_10001f20, 4
  %v3_10001f20 = inttoptr i32 %v2_10001f20 to i32*
  store i32 %v1_10001f1c, i32* %v3_10001f20, align 4
  %v0_10001f24 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001f24 = add i32 %v0_10001f24, 8
  %v2_10001f24 = inttoptr i32 %v1_10001f24 to i32*
  %v3_10001f24 = load i32, i32* %v2_10001f24, align 4
  store i32 %v3_10001f24, i32* %r0.global-to-local, align 4
  %v1_10001f28 = load i32, i32* %r28.global-to-local, align 4
  %v2_10001f28 = add i32 %v1_10001f28, 8
  %v3_10001f28 = inttoptr i32 %v2_10001f28 to i32*
  store i32 %v3_10001f24, i32* %v3_10001f28, align 4
  %v4_10001f2c = call i32 @function_10004430(i32 %v0_10001f14, i32 %v0_10001ef8, i32 %v0_10001f08, i32 %v0_10001f10)
  %v5_10001f2c = trunc i32 %v4_10001f2c to i16
  store i32 %v4_10001f2c, i32* %r3.global-to-local, align 4
  %v3_10001f30 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10001f30, i32* %r7.global-to-local, align 4
  %v0_10001f34 = load i32, i32* %r28.global-to-local, align 4
  %v1_10001f34 = add i32 %v0_10001f34, 2
  %v2_10001f34 = inttoptr i32 %v1_10001f34 to i16*
  %v3_10001f34 = load i16, i16* %v2_10001f34, align 2
  %v4_10001f34 = zext i16 %v3_10001f34 to i32
  store i32 %v4_10001f34, i32* %r0.global-to-local, align 4
  %v0_10001f38 = load i32, i32* @r29, align 4
  %v1_10001f3c = mul i32 %v3_10001f30, 24
  store i32 %v1_10001f3c, i32* %r7.global-to-local, align 4
  %v4_10001f40 = add i32 %v0_10001f34, 16
  %v5_10001f40 = inttoptr i32 %v4_10001f40 to i16*
  store i16 %v5_10001f2c, i16* %v5_10001f40, align 2
  %v0_10001f44 = load i32, i32* %r26.global-to-local, align 4
  %v0_10001f48 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10001f48, i32* %r3.global-to-local, align 4
  %v0_10001f4c = load i32, i32* %r7.global-to-local, align 4
  %v1_10001f4c = load i32, i32* %r20.global-to-local, align 4
  %v2_10001f4c = add i32 %v1_10001f4c, %v0_10001f4c
  store i32 %v2_10001f4c, i32* %r7.global-to-local, align 4
  %v0_10001f54 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001f54 = trunc i32 %v0_10001f54 to i16
  %v3_10001f54 = add i32 %v2_10001f4c, 2
  %v4_10001f54 = inttoptr i32 %v3_10001f54 to i16*
  store i16 %v1_10001f54, i16* %v4_10001f54, align 2
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 268443488, i32* @lr, align 4
  %v6_10001f5c = call i32 @function_10009da0(i32 %v0_10001f48, i32 %v0_10001f38, i32 %v0_10001f44, i32 16384, i32 %v2_10001f4c, i32 16)
  store i32 %v6_10001f5c, i32* %r3.global-to-local, align 4
  %v3_10001f60 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10001f60, i32* %r9.global-to-local, align 4
  %v1_10001f64 = add i32 %v3_10001f60, 1
  store i32 %v1_10001f64, i32* %r0.global-to-local, align 4
  %v1_10001f68 = load i32, i32* %r21.global-to-local, align 4
  %v2_10001f68 = icmp slt i32 %v1_10001f64, %v1_10001f68
  %v4_10001f68 = icmp eq i32 %v1_10001f64, %v1_10001f68
  store i1 %v4_10001f68, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10001f64, i32* %stack_var_-408, align 4
  br i1 %v2_10001f68, label %dec_label_pc_10001ee0.dec_label_pc_10001ec4_crit_edge, label %dec_label_pc_10001f74

dec_label_pc_10001ee0.dec_label_pc_10001ec4_crit_edge: ; preds = %dec_label_pc_10001ee0
  %v0_10001ed0.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  br label %dec_label_pc_10001ec4

dec_label_pc_10001f74:                            ; preds = %dec_label_pc_10001ee0
  %v0_10001f74 = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_10001f74 = load i1, i1* %cr3_lt.global-to-local, align 1
  %v2_10001f74 = or i1 %v0_10001f74, %v1_10001f74
  br i1 %v2_10001f74, label %dec_label_pc_10001ea0.outer, label %dec_label_pc_10001ea4

dec_label_pc_10001f7c:                            ; preds = %dec_label_pc_10001ec4
  %v0_10001f7c = call i32 @function_10005f3c()
  %v1_10001f7c = trunc i32 %v0_10001f7c to i16
  %v0_10001f80 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10001f80, i32* @r4, align 4
  %v3_10001f84 = load i32, i32* @r29, align 4
  %v4_10001f84 = add i32 %v3_10001f84, 4
  %v5_10001f84 = inttoptr i32 %v4_10001f84 to i16*
  store i16 %v1_10001f7c, i16* %v5_10001f84, align 2
  %v0_10001f88 = load i32, i32* @r29, align 4
  %v1_10001f88 = add i32 %v0_10001f88, 40
  store i32 %v1_10001f88, i32* @r3, align 4
  %v0_10001f8c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10001f8c, label %dec_label_pc_10001ee0, label %dec_label_pc_10001f90

dec_label_pc_10001f90:                            ; preds = %dec_label_pc_10001ed4, %dec_label_pc_10001f7c
  %v0_10001f90 = call i32 @function_10006110()
  store i32 %v0_10001f90, i32* %r3.global-to-local, align 4
  %v2_10001ee0.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10001ee0

; uselistorder directives
  uselistorder i32 %v0_10001f88, { 1, 0 }
  uselistorder i1 %v1_10001f74, { 1, 0 }
  uselistorder i1 %v0_10001f74, { 1, 0 }
  uselistorder i32 %v1_10001f64, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v4_10001f2c, { 1, 0 }
  uselistorder i32 %v0_10001ef8, { 1, 0, 2 }
  uselistorder i32 %v2_10001eec, { 1, 0 }
  uselistorder i32 %v1_10001ec4, { 1, 0 }
  uselistorder i32 %v1_10001e84, { 0, 2, 1, 3 }
  uselistorder i32 %v2_10001e08, { 1, 0, 2 }
  uselistorder i32 %v1_10001e04, { 1, 0 }
  uselistorder i32 %v1_10001d9c, { 1, 0 }
  uselistorder i32 %v1_10001d68, { 1, 0 }
  uselistorder i32 %v0_10001ce8, { 1, 0 }
  uselistorder i32 %v2_10001cdc, { 1, 2, 0 }
  uselistorder i1 %v4_10001c60, { 1, 0 }
  uselistorder i16 %storemerge, { 1, 0 }
  uselistorder i32 %v3_10001cc0, { 1, 3, 0, 2 }
  uselistorder i32 %v1_10001c9c, { 1, 0 }
  uselistorder i32 %v1_10001a44, { 1, 0 }
  uselistorder i8 %v5_10001a30, { 1, 0 }
  uselistorder i8 %v5_100019f8, { 1, 0 }
  uselistorder i16 %tmp13, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 30, 12, 13, 14, 15, 16, 17, 18, 27, 28, 20, 19, 21, 22, 23, 24, 25, 26, 3, 2, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 0, 1 }
  uselistorder i32* %r28.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 11, 8, 9, 10, 0 }
  uselistorder i32* %r25.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r24.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 25, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 34, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i1* %cr7_eq.global-to-local, { 1, 2, 3, 4, 5, 11, 6, 7, 8, 9, 10, 0, 12, 13 }
  uselistorder i1* %cr3_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr3_eq.global-to-local, { 1, 0, 2 }
  uselistorder i32 268442528, { 1, 0 }
  uselistorder label %dec_label_pc_10001f90, { 1, 0 }
  uselistorder label %dec_label_pc_10001ee0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10001ea4, { 1, 0 }
  uselistorder label %dec_label_pc_10001ea0, { 1, 0 }
  uselistorder label %dec_label_pc_10001e80, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10001dec, { 1, 0 }
  uselistorder label %dec_label_pc_10001cfc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10001c7c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10001bac, { 1, 0 }
}

define i32 @function_10001f98(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10001f98:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr3_lt.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp13 = call i16 @__decompiler_undefined_function_1()
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-404 = alloca i32, align 4
  %stack_var_-384 = alloca i32, align 4
  %stack_var_-368 = alloca i32, align 4
  %stack_var_-408 = alloca i32, align 4
  %v0_10001f9c = load i32, i32* @lr, align 4
  store i32 %v0_10001f9c, i32* %r0.global-to-local, align 4
  %v0_10001fa0 = call i32 @__asm_mfcr()
  store i32 %v0_10001fa0, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r20.global-to-local, align 4
  %v0_10001fb0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10001fa0, i32* %r21.global-to-local, align 4
  %v0_10001fe8 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10001ff0 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 268443660, i32* @lr, align 4
  %v2_10002008 = call i32 @function_1000a178(i32 16, i32 16)
  store i32 %v2_10002008, i32* %r22.global-to-local, align 4
  %v0_10002014 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10002014, i32* %r3.global-to-local, align 4
  store i32 268443676, i32* @lr, align 4
  %v2_10002018 = call i32 @function_1000a178(i32 %v0_10002014, i32 4)
  %v0_1000201c = load i32, i32* @r28, align 4
  store i32 %v2_10002018, i32* %r23.global-to-local, align 4
  %v0_1000202c = load i32, i32* @r29, align 4
  store i32 %v0_1000202c, i32* %r3.global-to-local, align 4
  store i32 268443700, i32* @lr, align 4
  %v4_10002030 = inttoptr i32 %v0_1000201c to i32*
  %v5_10002030 = call i32 @function_100006a8(i32 %v0_1000202c, i32* %v4_10002030, i32 2, i32 0)
  %v5_10002040 = trunc i32 %v5_10002030 to i8
  %v0_10002048 = load i32, i32* @r28, align 4
  %v0_1000204c = load i32, i32* @r29, align 4
  store i32 %v0_1000204c, i32* %r3.global-to-local, align 4
  store i32 268443732, i32* @lr, align 4
  %v4_10002050 = inttoptr i32 %v0_10002048 to i32*
  %v5_10002050 = call i32 @function_100006a8(i32 %v0_1000204c, i32* %v4_10002050, i32 3, i32 65535)
  %v0_10002054 = load i32, i32* @r28, align 4
  store i32 %v5_10002050, i32* @r31, align 4
  %v0_10002064 = load i32, i32* @r29, align 4
  store i32 %v0_10002064, i32* %r3.global-to-local, align 4
  store i32 268443756, i32* @lr, align 4
  %v4_10002068 = inttoptr i32 %v0_10002054 to i32*
  %v5_10002068 = call i32 @function_100006a8(i32 %v0_10002064, i32* %v4_10002068, i32 4, i32 64)
  %v0_1000206c = load i32, i32* @r28, align 4
  %v5_10002078 = trunc i32 %v5_10002068 to i8
  %v0_10002080 = load i32, i32* @r29, align 4
  store i32 %v0_10002080, i32* %r3.global-to-local, align 4
  store i32 268443784, i32* @lr, align 4
  %v4_10002084 = inttoptr i32 %v0_1000206c to i32*
  %v5_10002084 = call i32 @function_100006a8(i32 %v0_10002080, i32* %v4_10002084, i32 5, i32 1)
  %v1_1000208c = urem i32 %v5_10002084, 256
  %v0_10002098 = load i32, i32* @r28, align 4
  %v0_100020a0 = load i32, i32* @r29, align 4
  store i32 %v0_100020a0, i32* %r3.global-to-local, align 4
  store i32 268443816, i32* @lr, align 4
  %v4_100020a4 = inttoptr i32 %v0_10002098 to i32*
  %v5_100020a4 = call i32 @function_100006a8(i32 %v0_100020a0, i32* %v4_100020a4, i32 7, i32 65535)
  %v0_100020a8 = load i32, i32* @r28, align 4
  %v5_100020b4 = trunc i32 %v5_100020a4 to i16
  %v0_100020bc = load i32, i32* @r29, align 4
  store i32 %v0_100020bc, i32* %r3.global-to-local, align 4
  store i32 268443844, i32* @lr, align 4
  %v4_100020c0 = inttoptr i32 %v0_100020a8 to i32*
  %v5_100020c0 = call i32 @function_100006a8(i32 %v0_100020bc, i32* %v4_100020c0, i32 11, i32 0)
  %v0_100020c4 = load i32, i32* @r28, align 4
  %v1_100020c8 = urem i32 %v5_100020c0, 256
  %v0_100020d8 = load i32, i32* @r29, align 4
  store i32 %v0_100020d8, i32* %r3.global-to-local, align 4
  store i32 268443872, i32* @lr, align 4
  %v4_100020dc = inttoptr i32 %v0_100020c4 to i32*
  %v5_100020dc = call i32 @function_100006a8(i32 %v0_100020d8, i32* %v4_100020dc, i32 12, i32 1)
  %v0_100020e0 = load i32, i32* @r28, align 4
  %v1_100020ec = urem i32 %v5_100020dc, 256
  %v0_100020f0 = load i32, i32* @r29, align 4
  store i32 %v0_100020f0, i32* %r3.global-to-local, align 4
  store i32 268443896, i32* @lr, align 4
  %v4_100020f4 = inttoptr i32 %v0_100020e0 to i32*
  %v5_100020f4 = call i32 @function_100006a8(i32 %v0_100020f0, i32* %v4_100020f4, i32 13, i32 1)
  %v0_100020f8 = load i32, i32* @r28, align 4
  %v1_10002104 = urem i32 %v5_100020f4, 256
  %v0_10002108 = load i32, i32* @r29, align 4
  store i32 %v0_10002108, i32* %r3.global-to-local, align 4
  store i32 268443920, i32* @lr, align 4
  %v4_1000210c = inttoptr i32 %v0_100020f8 to i32*
  %v5_1000210c = call i32 @function_100006a8(i32 %v0_10002108, i32* %v4_1000210c, i32 14, i32 0)
  %v0_10002110 = load i32, i32* @r28, align 4
  %v1_1000211c = urem i32 %v5_1000210c, 256
  %v0_10002120 = load i32, i32* @r29, align 4
  store i32 %v0_10002120, i32* %r3.global-to-local, align 4
  store i32 268443944, i32* @lr, align 4
  %v4_10002124 = inttoptr i32 %v0_10002110 to i32*
  %v5_10002124 = call i32 @function_100006a8(i32 %v0_10002120, i32* %v4_10002124, i32 15, i32 0)
  %v0_10002128 = load i32, i32* @r28, align 4
  %v1_10002134 = urem i32 %v5_10002124, 256
  %v0_10002138 = load i32, i32* @r29, align 4
  store i32 %v0_10002138, i32* %r3.global-to-local, align 4
  store i32 268443968, i32* @lr, align 4
  %v4_1000213c = inttoptr i32 %v0_10002128 to i32*
  %v5_1000213c = call i32 @function_100006a8(i32 %v0_10002138, i32* %v4_1000213c, i32 16, i32 0)
  %v0_10002148 = load i32, i32* @r28, align 4
  %v1_1000214c = urem i32 %v5_1000213c, 256
  %v0_10002150 = load i32, i32* @r29, align 4
  store i32 %v0_10002150, i32* %r3.global-to-local, align 4
  store i32 268443992, i32* @lr, align 4
  %v4_10002154 = inttoptr i32 %v0_10002148 to i32*
  %v5_10002154 = call i32 @function_100006a8(i32 %v0_10002150, i32* %v4_10002154, i32 0, i32 768)
  %v0_10002158 = load i32, i32* @r28, align 4
  store i32 %v5_10002154, i32* %r25.global-to-local, align 4
  %v0_10002168 = load i32, i32* @r29, align 4
  store i32 %v0_10002168, i32* %r3.global-to-local, align 4
  store i32 268444016, i32* @lr, align 4
  %v4_1000216c = inttoptr i32 %v0_10002158 to i32*
  %v5_1000216c = call i32 @function_100006a8(i32 %v0_10002168, i32* %v4_1000216c, i32 1, i32 1)
  %v1_10002174 = urem i32 %v5_1000216c, 256
  store i32 %v1_10002174, i32* %r27.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268444036, i32* @lr, align 4
  %v3_10002180 = call i32 @function_10009e1c(i32 2, i32 3, i32 6)
  store i32 %v3_10002180, i32* %r3.global-to-local, align 4
  %v3_10002184 = icmp eq i32 %v3_10002180, -1
  store i1 %v3_10002184, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10002180, i32* %r24.global-to-local, align 4
  br i1 %v3_10002184, label %dec_label_pc_10002344, label %dec_label_pc_10002190

dec_label_pc_10002190:                            ; preds = %dec_label_pc_10001f98
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_1000219c = ptrtoint i32* %stack_var_-408 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-408, align 4
  store i32 268444076, i32* @lr, align 4
  %v4_100021a8 = call i32 @function_10009de0(i32 0, i32 3, i32 %v2_1000219c, i32 4)
  store i32 %v4_100021a8, i32* %r3.global-to-local, align 4
  %v3_100021ac = icmp eq i32 %v4_100021a8, -1
  store i1 %v3_100021ac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100021ac, label %dec_label_pc_1000233c, label %dec_label_pc_100021b4

dec_label_pc_100021b4:                            ; preds = %dec_label_pc_10002190
  %v0_100021b4 = load i32, i32* %r21.global-to-local, align 4
  %v1_100021b4 = icmp slt i32 %v0_100021b4, 0
  %v3_100021b4 = icmp eq i32 %v0_100021b4, 0
  store i1 %v1_100021b4, i1* %cr3_lt.global-to-local, align 1
  store i1 %v3_100021b4, i1* %cr3_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-408, align 4
  %v0_100021c0 = load i32, i32* @r31, align 4
  %v1_100021c0 = urem i32 %v0_100021c0, 65536
  store i32 %v1_100021c0, i32* %r19.global-to-local, align 4
  %tmp49 = icmp slt i32 %v0_100021b4, 1
  br i1 %tmp49, label %dec_label_pc_100024dc, label %dec_label_pc_100021c8

dec_label_pc_100021c8:                            ; preds = %dec_label_pc_100021b4
  %v4_100021c8 = sext i16 %v5_100020b4 to i32
  store i32 %v4_100021c8, i32* %r9.global-to-local, align 4
  store i32 65535, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cr4_eq.global-to-local, align 1
  %v2_1000226c = ptrtoint i32* %stack_var_-368 to i32
  %v2_10002278 = ptrtoint i32* %stack_var_-384 to i32
  %v2_1000227c = ptrtoint i32* %stack_var_-404 to i32
  %v4_100022b4 = zext i16 %tmp13 to i32
  %v1_100022e4 = and i32 %tmp, 1179648
  %v3_100023f8 = icmp eq i32 %v1_1000208c, 0
  %v4_10002418 = sext i8 %v5_10002040 to i32
  %v4_10002420 = sext i8 %v5_10002078 to i32
  %v1_100022e8 = and i32 %tmp, 327680
  %v3_100022e8 = icmp eq i32 %v1_100022e8, 0
  %v4_100022f0 = icmp eq i32 %v1_100022e4, 1179648
  br label %dec_label_pc_100021d4

dec_label_pc_100021d4:                            ; preds = %dec_label_pc_100024c8, %dec_label_pc_100022fc, %dec_label_pc_100021c8
  %v0_100021d4 = load i32, i32* %r25.global-to-local, align 4
  %v1_100021d4 = add i32 %v0_100021d4, 40
  store i32 %v1_100021d4, i32* %r26.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268444136, i32* @lr, align 4
  %v3_100021e453 = call i32 @function_10009e1c(i32 2, i32 1, i32 0)
  store i32 %v3_100021e453, i32* %r3.global-to-local, align 4
  %v3_100021e855 = icmp eq i32 %v3_100021e453, -1
  store i1 %v3_100021e855, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_100021e453, i32* %r28.global-to-local, align 4
  br i1 %v3_100021e855, label %dec_label_pc_100024c8, label %dec_label_pc_100021f4

dec_label_pc_100021f4:                            ; preds = %dec_label_pc_100021d4, %dec_label_pc_100022d4
  store i32 3, i32* @r4, align 4
  store i32 268444164, i32* @lr, align 4
  %v1_10002200 = call i32 @function_10008fe4(i32 3)
  store i32 4, i32* @r4, align 4
  %v0_1000220c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000220c, i32* %r3.global-to-local, align 4
  store i32 268444184, i32* @lr, align 4
  %v2_10002214 = call i32 @function_10008fe4(i32 %v0_1000220c)
  store i32 %v2_10002214, i32* %r3.global-to-local, align 4
  %v3_10002218 = load i32, i32* %stack_var_-408, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10002220 = mul i32 %v3_10002218, 24
  store i32 %v1_10002220, i32* %r0.global-to-local, align 4
  %v0_10002228 = load i32, i32* %r20.global-to-local, align 4
  %v2_10002228 = add i32 %v0_10002228, %v1_10002220
  store i32 %v2_10002228, i32* %r11.global-to-local, align 4
  %v1_1000222c = add i32 %v2_10002228, 20
  %v2_1000222c = inttoptr i32 %v1_1000222c to i8*
  %v3_1000222c = load i8, i8* %v2_1000222c, align 1
  %v4_1000222c = zext i8 %v3_1000222c to i32
  store i32 %v4_1000222c, i32* %r9.global-to-local, align 4
  %v3_10002230 = icmp eq i8 %v3_1000222c, 31
  store i1 %v3_10002230, i1* %cr7_eq.global-to-local, align 1
  %tmp50 = icmp ult i8 %v3_1000222c, 32
  %v1_10002308 = add i32 %v2_10002228, 16
  %v2_10002308 = inttoptr i32 %v1_10002308 to i32*
  %v3_10002308 = load i32, i32* %v2_10002308, align 4
  br i1 %tmp50, label %dec_label_pc_10002308, label %dec_label_pc_10002238

dec_label_pc_10002238:                            ; preds = %dec_label_pc_100021f4
  store i32 %v3_10002308, i32* %r0.global-to-local, align 4
  %v0_10002240 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10002240, label %dec_label_pc_10002330, label %dec_label_pc_10002244

dec_label_pc_10002244:                            ; preds = %dec_label_pc_10002308, %dec_label_pc_10002238
  %stack_var_-396.0 = phi i32 [ %v2_10002324, %dec_label_pc_10002308 ], [ %v3_10002308, %dec_label_pc_10002238 ]
  store i32 %v4_100021c8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000224c

dec_label_pc_1000224c:                            ; preds = %dec_label_pc_10002330, %dec_label_pc_10002244
  %stack_var_-396.1 = phi i32 [ %stack_var_-396.2, %dec_label_pc_10002330 ], [ %stack_var_-396.0, %dec_label_pc_10002244 ]
  %storemerge = phi i16 [ %v1_10002330, %dec_label_pc_10002330 ], [ %v5_100020b4, %dec_label_pc_10002244 ]
  %v0_10002254 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002254, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000225c.20 to i32), i32* @lr, align 4
  %v0_10002258 = call i32 @function_10009c1c()
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268444260, i32* @lr, align 4
  %v0_10002260 = call i32 @function_1000949c()
  store i32 %v0_10002260, i32* %r3.global-to-local, align 4
  store i32 %v0_10002260, i32* @r31, align 4
  %v4_100022a8 = icmp eq i32 %tmp14, %stack_var_-396.1
  %v4_100022b8 = zext i16 %storemerge to i32
  %v4_100022bc = icmp eq i16 %storemerge, %tmp13
  %v4_100022a8.not = xor i1 %v4_100022a8, true
  br label %dec_label_pc_10002268

dec_label_pc_10002268:                            ; preds = %dec_label_pc_100022c4, %dec_label_pc_1000224c
  store i32 16, i32* %r0.global-to-local, align 4
  store i32 %v2_10002278, i32* %r7.global-to-local, align 4
  store i32 %v2_1000227c, i32* %r8.global-to-local, align 4
  %v0_10002280 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10002280, i32* %r3.global-to-local, align 4
  store i32 16, i32* %stack_var_-404, align 4
  store i32 268444300, i32* @lr, align 4
  %v6_10002288 = call i32 @function_10009d28(i32 %v0_10002280, i32 %v2_1000226c, i32 256, i32 16384, i32 %v2_10002278, i32 %v2_1000227c)
  store i32 %v6_10002288, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_10002294 = icmp eq i32 %v6_10002288, -1
  store i1 %v3_10002294, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10002294, label %dec_label_pc_10002344, label %dec_label_pc_100022a0

dec_label_pc_100022a0:                            ; preds = %dec_label_pc_10002268
  store i32 %tmp14, i32* %r10.global-to-local, align 4
  store i32 %stack_var_-396.1, i32* %r0.global-to-local, align 4
  store i1 %v4_100022a8, i1* %cr7_eq.global-to-local, align 1
  %tmp51 = icmp ult i32 %v6_10002288, 41
  %or.cond = or i1 %tmp51, %v4_100022a8.not
  br i1 %or.cond, label %dec_label_pc_100022c4, label %dec_label_pc_100022b4

dec_label_pc_100022b4:                            ; preds = %dec_label_pc_100022a0
  store i32 %v4_100022b4, i32* %r0.global-to-local, align 4
  store i32 %v4_100022b8, i32* %r8.global-to-local, align 4
  store i1 %v4_100022bc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100022bc, label %dec_label_pc_100022e0, label %dec_label_pc_100022c4

dec_label_pc_100022c4:                            ; preds = %dec_label_pc_100022a0, %dec_label_pc_100022f8, %dec_label_pc_100022b4
  store i32 268444360, i32* @lr, align 4
  %v0_100022c4 = call i32 @function_1000949c()
  %v0_100022c8 = load i32, i32* @r31, align 4
  %v2_100022c8 = sub i32 %v0_100022c4, %v0_100022c8
  store i32 %v2_100022c8, i32* %r3.global-to-local, align 4
  %v3_100022cc = icmp eq i32 %v2_100022c8, 10
  store i1 %v3_100022cc, i1* %cr7_eq.global-to-local, align 1
  %tmp52 = icmp slt i32 %v2_100022c8, 11
  br i1 %tmp52, label %dec_label_pc_10002268, label %dec_label_pc_100022d4

dec_label_pc_100022d4:                            ; preds = %dec_label_pc_100022c4
  %v0_100022d4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100022d4, i32* %r3.global-to-local, align 4
  store i32 268444380, i32* @lr, align 4
  %v0_100022d8 = call i32 @function_100090cc()
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268444136, i32* @lr, align 4
  %v3_100021e4 = call i32 @function_10009e1c(i32 2, i32 1, i32 0)
  store i32 %v3_100021e4, i32* %r3.global-to-local, align 4
  %v3_100021e8 = icmp eq i32 %v3_100021e4, -1
  store i1 %v3_100021e8, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_100021e4, i32* %r28.global-to-local, align 4
  br i1 %v3_100021e8, label %dec_label_pc_100024c8, label %dec_label_pc_100021f4

dec_label_pc_100022e0:                            ; preds = %dec_label_pc_100022b4
  store i32 %tmp, i32* %r9.global-to-local, align 4
  store i32 %v1_100022e4, i32* %r11.global-to-local, align 4
  store i32 1179648, i32* %r0.global-to-local, align 4
  store i1 %v4_100022f0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100022f0, label %dec_label_pc_100023a4, label %dec_label_pc_100022f8

dec_label_pc_100022f8:                            ; preds = %dec_label_pc_100022e0
  br i1 %v3_100022e8, label %dec_label_pc_100022c4, label %dec_label_pc_100022fc

dec_label_pc_100022fc:                            ; preds = %dec_label_pc_100022f8
  %v0_100022fc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100022fc, i32* %r3.global-to-local, align 4
  store i32 268444420, i32* @lr, align 4
  %v0_10002300 = call i32 @function_100090cc()
  store i32 %v0_10002300, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100021d4

dec_label_pc_10002308:                            ; preds = %dec_label_pc_100021f4
  store i32 %v3_10002308, i32* %r29.global-to-local, align 4
  %v0_1000230c = call i32 @function_10005f3c()
  store i32 %v0_1000230c, i32* %r3.global-to-local, align 4
  %v3_10002310 = load i32, i32* %stack_var_-408, align 4
  %v1_10002314 = mul i32 %v3_10002310, 24
  %v1_10002318 = load i32, i32* %r20.global-to-local, align 4
  %v2_10002318 = add i32 %v1_10002318, %v1_10002314
  store i32 %v2_10002318, i32* %r9.global-to-local, align 4
  %v1_1000231c = add i32 %v2_10002318, 20
  %v2_1000231c = inttoptr i32 %v1_1000231c to i8*
  %v3_1000231c = load i8, i8* %v2_1000231c, align 1
  %v4_1000231c = zext i8 %v3_1000231c to i32
  store i32 %v4_1000231c, i32* %r0.global-to-local, align 4
  %tmp56 = urem i8 %v3_1000231c, 64
  %v2_10002320 = zext i8 %tmp56 to i32
  %v3_10002320 = lshr i32 %v0_1000230c, %v2_10002320
  store i32 %v3_10002320, i32* %r3.global-to-local, align 4
  %v0_10002324 = load i32, i32* %r29.global-to-local, align 4
  %v2_10002324 = add i32 %v3_10002320, %v0_10002324
  store i32 %v2_10002324, i32* %r29.global-to-local, align 4
  %v0_1000232c = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_1000232c, label %dec_label_pc_10002330, label %dec_label_pc_10002244

dec_label_pc_10002330:                            ; preds = %dec_label_pc_10002308, %dec_label_pc_10002238
  %stack_var_-396.2 = phi i32 [ %v2_10002324, %dec_label_pc_10002308 ], [ %v3_10002308, %dec_label_pc_10002238 ]
  %v0_10002330 = call i32 @function_10005f3c()
  %v1_10002330 = trunc i32 %v0_10002330 to i16
  store i32 %v0_10002330, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000224c

dec_label_pc_1000233c:                            ; preds = %dec_label_pc_10002190
  %v0_1000233c = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_1000233c, i32* %r3.global-to-local, align 4
  store i32 268444484, i32* @lr, align 4
  %v0_10002340 = call i32 @function_100090cc()
  store i32 %v0_10002340, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002344

dec_label_pc_10002344:                            ; preds = %dec_label_pc_10002268, %dec_label_pc_10001f98, %dec_label_pc_1000233c
  store i32 %v0_10001fb0, i32* %r0.global-to-local, align 4
  %v1_10002358 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10001fa0)
  store i32 %v0_10001fe8, i32* %r28.global-to-local, align 4
  store i32 %v0_10001ff0, i32* %r29.global-to-local, align 4
  %v0_100023a0 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100023a0

dec_label_pc_100023a4:                            ; preds = %dec_label_pc_100022e0
  %v3_100023a4 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_100023a4, i32* %r29.global-to-local, align 4
  %v0_100023a8 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_100023a8, i32* @r3, align 4
  %v0_100023ac = load i32, i32* @r30, align 4
  %v1_100023ac = add i32 %v0_100023ac, 2
  %v2_100023ac = inttoptr i32 %v1_100023ac to i16*
  %v3_100023ac = load i16, i16* %v2_100023ac, align 2
  %v4_100023ac = zext i16 %v3_100023ac to i32
  store i32 %v4_100023ac, i32* %r11.global-to-local, align 4
  %v1_100023b0 = mul i32 %v3_100023a4, 16
  store i32 %v1_100023b0, i32* %r9.global-to-local, align 4
  %v1_100023b4 = mul i32 %v3_100023a4, 4
  store i32 %v1_100023b4, i32* @r29, align 4
  %v1_100023b8 = load i32, i32* %r22.global-to-local, align 4
  %v3_100023b8 = add i32 %v1_100023b8, %v1_100023b0
  %v4_100023b8 = inttoptr i32 %v3_100023b8 to i32*
  store i32 %tmp14, i32* %v4_100023b8, align 4
  %v0_100023bc = load i32, i32* %r22.global-to-local, align 4
  %v1_100023bc = load i32, i32* %r9.global-to-local, align 4
  %v2_100023bc = add i32 %v1_100023bc, %v0_100023bc
  store i32 %v2_100023bc, i32* %r9.global-to-local, align 4
  %v0_100023c0 = load i32, i32* %r8.global-to-local, align 4
  %v1_100023c0 = trunc i32 %v0_100023c0 to i16
  %v3_100023c0 = add i32 %v2_100023bc, 14
  %v4_100023c0 = inttoptr i32 %v3_100023c0 to i16*
  store i16 %v1_100023c0, i16* %v4_100023c0, align 2
  %v0_100023c4 = load i32, i32* @r30, align 4
  %v1_100023c4 = add i32 %v0_100023c4, 4
  %v2_100023c4 = inttoptr i32 %v1_100023c4 to i32*
  %v3_100023c4 = load i32, i32* %v2_100023c4, align 4
  store i32 %v3_100023c4, i32* %r0.global-to-local, align 4
  %v0_100023c8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100023c8 = trunc i32 %v0_100023c8 to i16
  %v2_100023c8 = load i32, i32* %r9.global-to-local, align 4
  %v3_100023c8 = add i32 %v2_100023c8, 12
  %v4_100023c8 = inttoptr i32 %v3_100023c8 to i16*
  store i16 %v1_100023c8, i16* %v4_100023c8, align 2
  %v0_100023cc = load i32, i32* %r0.global-to-local, align 4
  %v1_100023cc = load i32, i32* %r9.global-to-local, align 4
  %v2_100023cc = add i32 %v1_100023cc, 4
  %v3_100023cc = inttoptr i32 %v2_100023cc to i32*
  store i32 %v0_100023cc, i32* %v3_100023cc, align 4
  %v0_100023d0 = load i32, i32* @r30, align 4
  %v1_100023d0 = add i32 %v0_100023d0, 8
  %v2_100023d0 = inttoptr i32 %v1_100023d0 to i32*
  %v3_100023d0 = load i32, i32* %v2_100023d0, align 4
  store i32 %v3_100023d0, i32* %r0.global-to-local, align 4
  %v1_100023d4 = load i32, i32* %r9.global-to-local, align 4
  %v2_100023d4 = add i32 %v1_100023d4, 8
  %v3_100023d4 = inttoptr i32 %v2_100023d4 to i32*
  store i32 %v3_100023d0, i32* %v3_100023d4, align 4
  store i32 268444636, i32* @lr, align 4
  %v0_100023d8 = call i32 @function_1000a020()
  store i32 %v0_100023d8, i32* %r3.global-to-local, align 4
  %v3_100023dc = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_100023dc, i32* %r0.global-to-local, align 4
  %v1_100023e0 = load i32, i32* @r29, align 4
  %v2_100023e0 = load i32, i32* %r23.global-to-local, align 4
  %v3_100023e0 = add i32 %v2_100023e0, %v1_100023e0
  %v4_100023e0 = inttoptr i32 %v3_100023e0 to i32*
  store i32 %v0_100023d8, i32* %v4_100023e0, align 4
  %v0_100023e4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100023e4 = mul i32 %v0_100023e4, 4
  store i32 %v1_100023e4, i32* %r0.global-to-local, align 4
  %v0_100023e8 = load i32, i32* %r23.global-to-local, align 4
  %v2_100023e8 = add i32 %v0_100023e8, %v1_100023e4
  %v3_100023e8 = inttoptr i32 %v2_100023e8 to i32*
  %v4_100023e8 = load i32, i32* %v3_100023e8, align 4
  store i32 %v4_100023e8, i32* @r31, align 4
  store i32 %v1_1000208c, i32* %r0.global-to-local, align 4
  %v1_100023f0 = inttoptr i32 %v4_100023e8 to i32*
  %v2_100023f0 = load i32, i32* %v1_100023f0, align 4
  store i32 %v2_100023f0, i32* %r9.global-to-local, align 4
  %v1_100023f4 = add i32 %v4_100023e8, 20
  store i32 %v1_100023f4, i32* @r30, align 4
  store i1 %v3_100023f8, i1* %cr7_eq.global-to-local, align 1
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_10002400 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10002400, i32* %r9.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_10002408 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_1000240c = load i32, i32* %r19.global-to-local, align 4
  %v1_1000240c = trunc i32 %v0_1000240c to i16
  %v2_1000240c = load i32, i32* @r31, align 4
  %v3_1000240c = add i32 %v2_1000240c, 4
  %v4_1000240c = inttoptr i32 %v3_1000240c to i16*
  store i16 %v1_1000240c, i16* %v4_1000240c, align 2
  %v1_10002410 = load i32, i32* @r31, align 4
  %v2_10002410 = inttoptr i32 %v1_10002410 to i32*
  store i32 %v1_10002408, i32* %v2_10002410, align 4
  %v0_10002414 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002414 = trunc i32 %v0_10002414 to i16
  %v2_10002414 = load i32, i32* @r31, align 4
  %v3_10002414 = add i32 %v2_10002414, 2
  %v4_10002414 = inttoptr i32 %v3_10002414 to i16*
  store i16 %v1_10002414, i16* %v4_10002414, align 2
  store i32 %v4_10002418, i32* %r9.global-to-local, align 4
  %v2_1000241c = load i32, i32* @r31, align 4
  %v3_1000241c = add i32 %v2_1000241c, 1
  %v4_1000241c = inttoptr i32 %v3_1000241c to i8*
  store i8 %v5_10002040, i8* %v4_1000241c, align 1
  store i32 %v4_10002420, i32* %r0.global-to-local, align 4
  %v2_10002424 = load i32, i32* @r31, align 4
  %v3_10002424 = add i32 %v2_10002424, 8
  %v4_10002424 = inttoptr i32 %v3_10002424 to i8*
  store i8 %v5_10002078, i8* %v4_10002424, align 1
  %v0_10002428 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10002428, label %dec_label_pc_10002434, label %dec_label_pc_1000242c

dec_label_pc_1000242c:                            ; preds = %dec_label_pc_100023a4
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10002430 = load i32, i32* @r31, align 4
  %v3_10002430 = add i32 %v2_10002430, 6
  %v4_10002430 = inttoptr i32 %v3_10002430 to i16*
  store i16 16384, i16* %v4_10002430, align 2
  br label %dec_label_pc_10002434

dec_label_pc_10002434:                            ; preds = %dec_label_pc_100023a4, %dec_label_pc_1000242c
  %v2_1000243c = load i32, i32* @r31, align 4
  %v3_1000243c = add i32 %v2_1000243c, 9
  %v4_1000243c = inttoptr i32 %v3_1000243c to i8*
  store i8 6, i8* %v4_1000243c, align 1
  %v3_10002440 = load i32, i32* @global_var_1001c258.14, align 4
  store i32 %v3_10002440, i32* %r0.global-to-local, align 4
  %v1_10002444 = load i32, i32* @r31, align 4
  %v2_10002444 = add i32 %v1_10002444, 12
  %v3_10002444 = inttoptr i32 %v2_10002444 to i32*
  store i32 %v3_10002440, i32* %v3_10002444, align 4
  %v3_10002448 = load i32, i32* %stack_var_-408, align 4
  %v1_1000244c = mul i32 %v3_10002448, 16
  store i32 %v1_1000244c, i32* %r9.global-to-local, align 4
  %v1_10002450 = load i32, i32* %r22.global-to-local, align 4
  %v2_10002450 = add i32 %v1_10002450, %v1_1000244c
  %v3_10002450 = inttoptr i32 %v2_10002450 to i32*
  %v4_10002450 = load i32, i32* %v3_10002450, align 4
  store i32 %v4_10002450, i32* %r0.global-to-local, align 4
  store i32 %v2_10002450, i32* %r9.global-to-local, align 4
  %v1_10002458 = add i32 %v2_10002450, 12
  %v2_10002458 = inttoptr i32 %v1_10002458 to i16*
  %v3_10002458 = load i16, i16* %v2_10002458, align 2
  %v4_10002458 = zext i16 %v3_10002458 to i32
  store i32 %v4_10002458, i32* %r11.global-to-local, align 4
  %v1_1000245c = load i32, i32* @r31, align 4
  %v2_1000245c = add i32 %v1_1000245c, 16
  %v3_1000245c = inttoptr i32 %v2_1000245c to i32*
  store i32 %v4_10002450, i32* %v3_1000245c, align 4
  %v0_10002460 = load i32, i32* %r11.global-to-local, align 4
  %v1_10002460 = trunc i32 %v0_10002460 to i16
  %v2_10002460 = load i32, i32* @r31, align 4
  %v3_10002460 = add i32 %v2_10002460, 20
  %v4_10002460 = inttoptr i32 %v3_10002460 to i16*
  store i16 %v1_10002460, i16* %v4_10002460, align 2
  %v0_10002464 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002464 = add i32 %v0_10002464, 8
  %v2_10002464 = inttoptr i32 %v1_10002464 to i32*
  %v3_10002464 = load i32, i32* %v2_10002464, align 4
  store i32 %v3_10002464, i32* %r0.global-to-local, align 4
  %v0_10002468 = load i32, i32* @r30, align 4
  %v1_10002468 = add i32 %v0_10002468, 12
  %v2_10002468 = inttoptr i32 %v1_10002468 to i32*
  %v3_10002468 = load i32, i32* %v2_10002468, align 4
  store i32 %v3_10002468, i32* %r11.global-to-local, align 4
  %v2_1000246c = add i32 %v0_10002468, 4
  %v3_1000246c = inttoptr i32 %v2_1000246c to i32*
  store i32 %v3_10002464, i32* %v3_1000246c, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_10002474 = call i32 @__asm_rlwimi(i32 8, i32 28, i32 0, i32 3)
  store i32 %v1_10002474, i32* %r11.global-to-local, align 4
  %v0_10002478 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002478 = add i32 %v0_10002478, 14
  %v2_10002478 = inttoptr i32 %v1_10002478 to i16*
  %v3_10002478 = load i16, i16* %v2_10002478, align 2
  %v4_10002478 = zext i16 %v3_10002478 to i32
  store i32 %v4_10002478, i32* %r0.global-to-local, align 4
  %v1_1000247c = add i32 %v0_10002478, 4
  %v2_1000247c = inttoptr i32 %v1_1000247c to i32*
  %v3_1000247c = load i32, i32* %v2_1000247c, align 4
  store i32 %v3_1000247c, i32* %r10.global-to-local, align 4
  %v1_10002480 = or i32 %v1_10002474, 1114112
  store i32 %v1_10002480, i32* %r11.global-to-local, align 4
  %v2_10002484 = load i32, i32* @r30, align 4
  %v3_10002484 = add i32 %v2_10002484, 2
  %v4_10002484 = inttoptr i32 %v3_10002484 to i16*
  store i16 %v3_10002478, i16* %v4_10002484, align 2
  %v0_10002488 = load i32, i32* %r10.global-to-local, align 4
  %v1_10002488 = load i32, i32* @r30, align 4
  %v2_10002488 = add i32 %v1_10002488, 8
  %v3_10002488 = inttoptr i32 %v2_10002488 to i32*
  store i32 %v0_10002488, i32* %v3_10002488, align 4
  %v0_1000248c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000248c = load i32, i32* @r30, align 4
  %v2_1000248c = add i32 %v1_1000248c, 12
  %v3_1000248c = inttoptr i32 %v2_1000248c to i32*
  store i32 %v0_1000248c, i32* %v3_1000248c, align 4
  %v0_10002490 = call i32 @function_10005f3c()
  %v1_10002490 = trunc i32 %v0_10002490 to i16
  store i32 %v1_100020c8, i32* %r9.global-to-local, align 4
  %v3_10002498 = load i32, i32* @r30, align 4
  %v4_10002498 = add i32 %v3_10002498, 14
  %v5_10002498 = inttoptr i32 %v4_10002498 to i16*
  store i16 %v1_10002490, i16* %v5_10002498, align 2
  %v0_1000249c = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_1000249c, i32* @r4, align 4
  %v0_100024a0 = load i32, i32* @r31, align 4
  %v1_100024a0 = add i32 %v0_100024a0, 40
  store i32 %v1_100024a0, i32* @r3, align 4
  %v0_100024a4 = load i32, i32* @r30, align 4
  %v1_100024a4 = add i32 %v0_100024a4, 12
  %v2_100024a4 = inttoptr i32 %v1_100024a4 to i32*
  %v3_100024a4 = load i32, i32* %v2_100024a4, align 4
  store i32 %v3_100024a4, i32* %r0.global-to-local, align 4
  %v1_100024a8 = call i32 @__asm_rlwimi(i32 %v1_100020c8, i32 21, i32 10, i32 10)
  store i32 %v1_100024a8, i32* %r0.global-to-local, align 4
  %v1_100024ac = call i32 @__asm_rlwimi(i32 %v1_100020ec, i32 20, i32 11, i32 11)
  store i32 %v1_100024ac, i32* %r0.global-to-local, align 4
  %v1_100024b0 = call i32 @__asm_rlwimi(i32 %v1_10002104, i32 19, i32 12, i32 12)
  store i32 %v1_100024b0, i32* %r0.global-to-local, align 4
  %v1_100024b4 = call i32 @__asm_rlwimi(i32 %v1_1000211c, i32 18, i32 13, i32 13)
  store i32 %v1_100024b4, i32* %r0.global-to-local, align 4
  %v1_100024b8 = call i32 @__asm_rlwimi(i32 %v1_10002134, i32 17, i32 14, i32 14)
  store i32 %v1_100024b8, i32* %r0.global-to-local, align 4
  %v1_100024bc = call i32 @__asm_rlwimi(i32 %v1_1000214c, i32 16, i32 15, i32 15)
  store i32 %v1_100024bc, i32* %r0.global-to-local, align 4
  %v1_100024c0 = load i32, i32* @r30, align 4
  %v2_100024c0 = add i32 %v1_100024c0, 12
  %v3_100024c0 = inttoptr i32 %v2_100024c0 to i32*
  store i32 %v1_100024bc, i32* %v3_100024c0, align 4
  %v0_100024c4 = call i32 @function_10006110()
  store i32 %v0_100024c4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100024c8

dec_label_pc_100024c8:                            ; preds = %dec_label_pc_100021d4, %dec_label_pc_100022d4, %dec_label_pc_10002434
  %v3_100024c8 = load i32, i32* %stack_var_-408, align 4
  %v1_100024cc = add i32 %v3_100024c8, 1
  store i32 %v1_100024cc, i32* %r9.global-to-local, align 4
  %v1_100024d0 = load i32, i32* %r21.global-to-local, align 4
  %v2_100024d0 = icmp slt i32 %v1_100024cc, %v1_100024d0
  %v4_100024d0 = icmp eq i32 %v1_100024cc, %v1_100024d0
  store i1 %v4_100024d0, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_100024cc, i32* %stack_var_-408, align 4
  br i1 %v2_100024d0, label %dec_label_pc_100021d4, label %dec_label_pc_100024dc.loopexit

dec_label_pc_100024dc.loopexit:                   ; preds = %dec_label_pc_100024c8
  %v0_100024e8.pre.pre = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_100024e8.pre.pre = load i1, i1* %cr3_lt.global-to-local, align 1
  br label %dec_label_pc_100024dc

dec_label_pc_100024dc:                            ; preds = %dec_label_pc_100024dc.loopexit, %dec_label_pc_100021b4
  %v1_100024e8.pre = phi i1 [ %v1_100024e8.pre.pre, %dec_label_pc_100024dc.loopexit ], [ %v1_100021b4, %dec_label_pc_100021b4 ]
  %v0_100024e8.pre = phi i1 [ %v0_100024e8.pre.pre, %dec_label_pc_100024dc.loopexit ], [ %v3_100021b4, %dec_label_pc_100021b4 ]
  %v0_100024dc = load i32, i32* %r27.global-to-local, align 4
  %v3_100024dc = icmp eq i32 %v0_100024dc, 0
  store i1 %v3_100024dc, i1* %cr2_eq.global-to-local, align 1
  %v0_100024e0 = load i32, i32* %r25.global-to-local, align 4
  %v1_100024e0 = add i32 %v0_100024e0, 40
  store i32 %v1_100024e0, i32* %r26.global-to-local, align 4
  %v1_100024e4 = add i32 %v0_100024e0, 20
  store i32 %v1_100024e4, i32* @r31, align 4
  br label %dec_label_pc_100024e8.outer

dec_label_pc_100024e8.outer:                      ; preds = %dec_label_pc_100025bc, %dec_label_pc_100024dc
  %v1_100024e8.ph = phi i1 [ %v1_100024e8.pre, %dec_label_pc_100024dc ], [ %v1_100025bc, %dec_label_pc_100025bc ]
  %v0_100024e8.ph = phi i1 [ %v0_100024e8.pre, %dec_label_pc_100024dc ], [ %v0_100025bc, %dec_label_pc_100025bc ]
  %v2_100024e8 = or i1 %v1_100024e8.ph, %v0_100024e8.ph
  br label %dec_label_pc_100024e8

dec_label_pc_100024e8:                            ; preds = %dec_label_pc_100024e8.outer, %dec_label_pc_100024e8
  br i1 %v2_100024e8, label %dec_label_pc_100024e8, label %dec_label_pc_100024ec

dec_label_pc_100024ec:                            ; preds = %dec_label_pc_100024e8, %dec_label_pc_100025bc
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-408, align 4
  %v0_100024fc = load i32, i32* %r19.global-to-local, align 4
  %v4_100024fc = icmp eq i32 %v0_100024fc, 65535
  store i1 %v4_100024fc, i1* %cr4_eq.global-to-local, align 1
  %v0_10002500 = load i32, i32* @r31, align 4
  %v1_10002500 = urem i32 %v0_10002500, 65536
  store i32 %v1_10002500, i32* @r30, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_1000250c

dec_label_pc_1000250c:                            ; preds = %dec_label_pc_10002528.dec_label_pc_1000250c_crit_edge, %dec_label_pc_100024ec
  %v0_10002518 = phi i1 [ %v0_10002518.pre, %dec_label_pc_10002528.dec_label_pc_1000250c_crit_edge ], [ %v4_100024fc, %dec_label_pc_100024ec ]
  %v0_1000250c = phi i32 [ %v1_100025ac, %dec_label_pc_10002528.dec_label_pc_1000250c_crit_edge ], [ 0, %dec_label_pc_100024ec ]
  %v1_1000250c = mul i32 %v0_1000250c, 4
  store i32 %v1_1000250c, i32* %r0.global-to-local, align 4
  %v0_10002510 = load i32, i32* %r23.global-to-local, align 4
  %v2_10002510 = add i32 %v0_10002510, %v1_1000250c
  %v3_10002510 = inttoptr i32 %v2_10002510 to i32*
  %v4_10002510 = load i32, i32* %v3_10002510, align 4
  store i32 %v4_10002510, i32* @r29, align 4
  %v1_10002514 = add i32 %v4_10002510, 20
  store i32 %v1_10002514, i32* %r28.global-to-local, align 4
  br i1 %v0_10002518, label %dec_label_pc_100025c4, label %dec_label_pc_1000251c

dec_label_pc_1000251c:                            ; preds = %dec_label_pc_1000250c
  %v1_1000251c = add i32 %v4_10002510, 40
  store i32 %v1_1000251c, i32* @r3, align 4
  %v0_10002520 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10002520, i32* @r4, align 4
  %v0_10002524 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002524, label %dec_label_pc_10002528, label %dec_label_pc_100025d8

dec_label_pc_10002528:                            ; preds = %dec_label_pc_1000251c, %dec_label_pc_100025c4, %dec_label_pc_100025d8
  %v2_10002528 = phi i32 [ %v4_10002510, %dec_label_pc_1000251c ], [ %v0_100025d0, %dec_label_pc_100025c4 ], [ %v2_10002528.pre, %dec_label_pc_100025d8 ]
  %v0_10002528 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002528 = trunc i32 %v0_10002528 to i16
  %v3_10002528 = add i32 %v2_10002528, 10
  %v4_10002528 = inttoptr i32 %v3_10002528 to i16*
  store i16 %v1_10002528, i16* %v4_10002528, align 2
  %v0_10002530 = load i32, i32* @r29, align 4
  store i32 %v0_10002530, i32* @r3, align 4
  %v2_10002534 = call i32 @function_100043cc(i32 %v0_10002530, i32 20)
  %v3_10002534 = trunc i32 %v2_10002534 to i16
  store i32 %v2_10002534, i32* %r3.global-to-local, align 4
  %v3_10002538 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10002538, i32* %r9.global-to-local, align 4
  %v3_1000253c = load i32, i32* @r29, align 4
  %v4_1000253c = add i32 %v3_1000253c, 10
  %v5_1000253c = inttoptr i32 %v4_1000253c to i16*
  store i16 %v3_10002534, i16* %v5_1000253c, align 2
  %v0_10002540 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002540, i32* @r4, align 4
  %v0_10002544 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002544 = mul i32 %v0_10002544, 16
  store i32 %v1_10002544, i32* %r9.global-to-local, align 4
  %v0_10002548 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002548 = trunc i32 %v0_10002548 to i16
  %v3_10002548 = add i32 %v0_10002540, 16
  %v4_10002548 = inttoptr i32 %v3_10002548 to i16*
  store i16 %v1_10002548, i16* %v4_10002548, align 2
  %v0_1000254c = load i32, i32* %r22.global-to-local, align 4
  %v1_1000254c = load i32, i32* %r9.global-to-local, align 4
  %v2_1000254c = add i32 %v1_1000254c, %v0_1000254c
  store i32 %v2_1000254c, i32* %r9.global-to-local, align 4
  %v0_10002550 = load i32, i32* @r30, align 4
  %v1_10002554 = add i32 %v2_1000254c, 4
  %v2_10002554 = inttoptr i32 %v1_10002554 to i32*
  %v3_10002554 = load i32, i32* %v2_10002554, align 4
  store i32 %v3_10002554, i32* %r11.global-to-local, align 4
  %v0_10002558 = load i32, i32* @r31, align 4
  %v0_1000255c = load i32, i32* @r29, align 4
  store i32 %v0_1000255c, i32* %r3.global-to-local, align 4
  %v1_10002560 = load i32, i32* %r28.global-to-local, align 4
  %v2_10002560 = add i32 %v1_10002560, 4
  %v3_10002560 = inttoptr i32 %v2_10002560 to i32*
  store i32 %v3_10002554, i32* %v3_10002560, align 4
  %v0_10002564 = load i32, i32* %r11.global-to-local, align 4
  %v1_10002564 = add i32 %v0_10002564, 1
  store i32 %v1_10002564, i32* %r11.global-to-local, align 4
  %v1_10002568 = load i32, i32* %r9.global-to-local, align 4
  %v2_10002568 = add i32 %v1_10002568, 4
  %v3_10002568 = inttoptr i32 %v2_10002568 to i32*
  store i32 %v1_10002564, i32* %v3_10002568, align 4
  %v0_1000256c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000256c = add i32 %v0_1000256c, 8
  %v2_1000256c = inttoptr i32 %v1_1000256c to i32*
  %v3_1000256c = load i32, i32* %v2_1000256c, align 4
  store i32 %v3_1000256c, i32* %r0.global-to-local, align 4
  %v1_10002570 = load i32, i32* %r28.global-to-local, align 4
  %v2_10002570 = add i32 %v1_10002570, 8
  %v3_10002570 = inttoptr i32 %v2_10002570 to i32*
  store i32 %v3_1000256c, i32* %v3_10002570, align 4
  %v4_10002574 = call i32 @function_10004430(i32 %v0_1000255c, i32 %v0_10002540, i32 %v0_10002550, i32 %v0_10002558)
  %v5_10002574 = trunc i32 %v4_10002574 to i16
  store i32 %v4_10002574, i32* %r3.global-to-local, align 4
  %v3_10002578 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10002578, i32* %r7.global-to-local, align 4
  %v0_1000257c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000257c = add i32 %v0_1000257c, 2
  %v2_1000257c = inttoptr i32 %v1_1000257c to i16*
  %v3_1000257c = load i16, i16* %v2_1000257c, align 2
  %v4_1000257c = zext i16 %v3_1000257c to i32
  store i32 %v4_1000257c, i32* %r0.global-to-local, align 4
  %v0_10002580 = load i32, i32* @r29, align 4
  %v1_10002584 = mul i32 %v3_10002578, 24
  store i32 %v1_10002584, i32* %r7.global-to-local, align 4
  %v4_10002588 = add i32 %v0_1000257c, 16
  %v5_10002588 = inttoptr i32 %v4_10002588 to i16*
  store i16 %v5_10002574, i16* %v5_10002588, align 2
  %v0_1000258c = load i32, i32* %r26.global-to-local, align 4
  %v0_10002590 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10002590, i32* %r3.global-to-local, align 4
  %v0_10002594 = load i32, i32* %r7.global-to-local, align 4
  %v1_10002594 = load i32, i32* %r20.global-to-local, align 4
  %v2_10002594 = add i32 %v1_10002594, %v0_10002594
  store i32 %v2_10002594, i32* %r7.global-to-local, align 4
  %v0_1000259c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000259c = trunc i32 %v0_1000259c to i16
  %v3_1000259c = add i32 %v2_10002594, 2
  %v4_1000259c = inttoptr i32 %v3_1000259c to i16*
  store i16 %v1_1000259c, i16* %v4_1000259c, align 2
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 268445096, i32* @lr, align 4
  %v6_100025a4 = call i32 @function_10009da0(i32 %v0_10002590, i32 %v0_10002580, i32 %v0_1000258c, i32 16384, i32 %v2_10002594, i32 16)
  store i32 %v6_100025a4, i32* %r3.global-to-local, align 4
  %v3_100025a8 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_100025a8, i32* %r9.global-to-local, align 4
  %v1_100025ac = add i32 %v3_100025a8, 1
  store i32 %v1_100025ac, i32* %r0.global-to-local, align 4
  %v1_100025b0 = load i32, i32* %r21.global-to-local, align 4
  %v2_100025b0 = icmp slt i32 %v1_100025ac, %v1_100025b0
  %v4_100025b0 = icmp eq i32 %v1_100025ac, %v1_100025b0
  store i1 %v4_100025b0, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_100025ac, i32* %stack_var_-408, align 4
  br i1 %v2_100025b0, label %dec_label_pc_10002528.dec_label_pc_1000250c_crit_edge, label %dec_label_pc_100025bc

dec_label_pc_10002528.dec_label_pc_1000250c_crit_edge: ; preds = %dec_label_pc_10002528
  %v0_10002518.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  br label %dec_label_pc_1000250c

dec_label_pc_100025bc:                            ; preds = %dec_label_pc_10002528
  %v0_100025bc = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_100025bc = load i1, i1* %cr3_lt.global-to-local, align 1
  %v2_100025bc = or i1 %v0_100025bc, %v1_100025bc
  br i1 %v2_100025bc, label %dec_label_pc_100024e8.outer, label %dec_label_pc_100024ec

dec_label_pc_100025c4:                            ; preds = %dec_label_pc_1000250c
  %v0_100025c4 = call i32 @function_10005f3c()
  %v1_100025c4 = trunc i32 %v0_100025c4 to i16
  %v0_100025c8 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100025c8, i32* @r4, align 4
  %v3_100025cc = load i32, i32* @r29, align 4
  %v4_100025cc = add i32 %v3_100025cc, 4
  %v5_100025cc = inttoptr i32 %v4_100025cc to i16*
  store i16 %v1_100025c4, i16* %v5_100025cc, align 2
  %v0_100025d0 = load i32, i32* @r29, align 4
  %v1_100025d0 = add i32 %v0_100025d0, 40
  store i32 %v1_100025d0, i32* @r3, align 4
  %v0_100025d4 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100025d4, label %dec_label_pc_10002528, label %dec_label_pc_100025d8

dec_label_pc_100025d8:                            ; preds = %dec_label_pc_1000251c, %dec_label_pc_100025c4
  %v0_100025d8 = call i32 @function_10006110()
  store i32 %v0_100025d8, i32* %r3.global-to-local, align 4
  %v2_10002528.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10002528

; uselistorder directives
  uselistorder i32 %v0_100025d0, { 1, 0 }
  uselistorder i1 %v1_100025bc, { 1, 0 }
  uselistorder i1 %v0_100025bc, { 1, 0 }
  uselistorder i32 %v1_100025ac, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v4_10002574, { 1, 0 }
  uselistorder i32 %v0_10002540, { 1, 0, 2 }
  uselistorder i32 %v2_10002534, { 1, 0 }
  uselistorder i32 %v1_1000250c, { 1, 0 }
  uselistorder i32 %v1_100024cc, { 0, 2, 1, 3 }
  uselistorder i32 %v2_10002450, { 1, 0, 2 }
  uselistorder i32 %v1_1000244c, { 1, 0 }
  uselistorder i32 %v1_100023e4, { 1, 0 }
  uselistorder i32 %v1_100023b0, { 1, 0 }
  uselistorder i32 %v0_10002330, { 1, 0 }
  uselistorder i32 %v2_10002324, { 1, 2, 0 }
  uselistorder i1 %v4_100022a8, { 1, 0 }
  uselistorder i16 %storemerge, { 1, 0 }
  uselistorder i32 %v3_10002308, { 1, 3, 0, 2 }
  uselistorder i32 %v1_100022e4, { 1, 0 }
  uselistorder i32 %v1_1000208c, { 1, 0 }
  uselistorder i8 %v5_10002078, { 1, 0 }
  uselistorder i8 %v5_10002040, { 1, 0 }
  uselistorder i16 %tmp13, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 30, 12, 13, 14, 15, 16, 17, 18, 27, 28, 20, 19, 21, 22, 23, 24, 25, 26, 3, 2, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 1, 0 }
  uselistorder i32* %r28.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 11, 8, 9, 10, 0 }
  uselistorder i32* %r25.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r24.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 25, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 34, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i1* %cr7_eq.global-to-local, { 1, 2, 3, 4, 5, 11, 6, 7, 8, 9, 10, 0, 12, 13 }
  uselistorder i1* %cr3_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr3_eq.global-to-local, { 1, 0, 2 }
  uselistorder i32 268444136, { 1, 0 }
  uselistorder i32 1179648, { 2, 0, 3, 4, 1, 5 }
  uselistorder label %dec_label_pc_100025d8, { 1, 0 }
  uselistorder label %dec_label_pc_10002528, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100024ec, { 1, 0 }
  uselistorder label %dec_label_pc_100024e8, { 1, 0 }
  uselistorder label %dec_label_pc_100024c8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10002434, { 1, 0 }
  uselistorder label %dec_label_pc_10002344, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100022c4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100021f4, { 1, 0 }
}

define i32 @function_100025e0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100025e0:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-136 = alloca i32, align 4
  %v0_100025e4 = load i32, i32* @lr, align 4
  store i32 %v0_100025e4, i32* %r0.global-to-local, align 4
  %v0_100025e8 = call i32 @__asm_mfcr()
  store i32 %v0_100025e8, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r25.global-to-local, align 4
  %v0_100025f8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_100025e8, i32* %r21.global-to-local, align 4
  %v0_10002638 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10002640 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_10002648 = load i32, i32* @r30, align 4
  store i32 268445268, i32* @lr, align 4
  %v2_10002650 = call i32 @function_1000a178(i32 4, i32 4)
  store i32 %v2_10002650, i32* %r22.global-to-local, align 4
  %v0_10002658 = load i32, i32* @r28, align 4
  %v0_10002664 = load i32, i32* @r29, align 4
  store i32 %v0_10002664, i32* %r3.global-to-local, align 4
  store i32 268445292, i32* @lr, align 4
  %v4_10002668 = inttoptr i32 %v0_10002658 to i32*
  %v5_10002668 = call i32 @function_100006a8(i32 %v0_10002664, i32* %v4_10002668, i32 2, i32 0)
  %v5_10002678 = trunc i32 %v5_10002668 to i8
  %v0_10002680 = load i32, i32* @r28, align 4
  %v0_10002684 = load i32, i32* @r29, align 4
  store i32 %v0_10002684, i32* %r3.global-to-local, align 4
  store i32 268445324, i32* @lr, align 4
  %v4_10002688 = inttoptr i32 %v0_10002680 to i32*
  %v5_10002688 = call i32 @function_100006a8(i32 %v0_10002684, i32* %v4_10002688, i32 3, i32 65535)
  %v0_1000268c = load i32, i32* @r28, align 4
  store i32 %v5_10002688, i32* %r18.global-to-local, align 4
  %v0_1000269c = load i32, i32* @r29, align 4
  store i32 %v0_1000269c, i32* %r3.global-to-local, align 4
  store i32 268445348, i32* @lr, align 4
  %v4_100026a0 = inttoptr i32 %v0_1000268c to i32*
  %v5_100026a0 = call i32 @function_100006a8(i32 %v0_1000269c, i32* %v4_100026a0, i32 4, i32 64)
  %v0_100026a4 = load i32, i32* @r28, align 4
  %v5_100026b0 = trunc i32 %v5_100026a0 to i8
  %v0_100026b8 = load i32, i32* @r29, align 4
  store i32 %v0_100026b8, i32* %r3.global-to-local, align 4
  store i32 268445376, i32* @lr, align 4
  %v4_100026bc = inttoptr i32 %v0_100026a4 to i32*
  %v5_100026bc = call i32 @function_100006a8(i32 %v0_100026b8, i32* %v4_100026bc, i32 5, i32 0)
  %v0_100026cc = load i32, i32* @r28, align 4
  %v1_100026d0 = urem i32 %v5_100026bc, 256
  store i32 %v1_100026d0, i32* @r31, align 4
  %v0_100026d4 = load i32, i32* @r29, align 4
  store i32 %v0_100026d4, i32* %r3.global-to-local, align 4
  store i32 268445404, i32* @lr, align 4
  %v4_100026d8 = inttoptr i32 %v0_100026cc to i32*
  %v5_100026d8 = call i32 @function_100006a8(i32 %v0_100026d4, i32* %v4_100026d8, i32 6, i32 65535)
  %v0_100026e0 = load i32, i32* @r28, align 4
  store i32 %v5_100026d8, i32* %r19.global-to-local, align 4
  %v0_100026f0 = load i32, i32* @r29, align 4
  store i32 %v0_100026f0, i32* %r3.global-to-local, align 4
  store i32 268445432, i32* @lr, align 4
  %v4_100026f4 = inttoptr i32 %v0_100026e0 to i32*
  %v5_100026f4 = call i32 @function_100006a8(i32 %v0_100026f0, i32* %v4_100026f4, i32 7, i32 65535)
  %v0_100026fc = load i32, i32* @r28, align 4
  store i32 %v5_100026f4, i32* %r20.global-to-local, align 4
  %v0_1000270c = load i32, i32* @r29, align 4
  store i32 %v0_1000270c, i32* %r3.global-to-local, align 4
  store i32 268445460, i32* @lr, align 4
  %v4_10002710 = inttoptr i32 %v0_100026fc to i32*
  %v5_10002710 = call i32 @function_100006a8(i32 %v0_1000270c, i32* %v4_10002710, i32 17, i32 65535)
  %v0_10002718 = load i32, i32* @r28, align 4
  store i32 %v5_10002710, i32* %r15.global-to-local, align 4
  %v0_10002728 = load i32, i32* @r29, align 4
  store i32 %v0_10002728, i32* %r3.global-to-local, align 4
  store i32 268445488, i32* @lr, align 4
  %v4_1000272c = inttoptr i32 %v0_10002718 to i32*
  %v5_1000272c = call i32 @function_100006a8(i32 %v0_10002728, i32* %v4_1000272c, i32 18, i32 65535)
  %v0_10002730 = load i32, i32* @r28, align 4
  store i32 %v5_1000272c, i32* %r17.global-to-local, align 4
  %v0_10002740 = load i32, i32* @r29, align 4
  store i32 %v0_10002740, i32* %r3.global-to-local, align 4
  store i32 268445512, i32* @lr, align 4
  %v4_10002744 = inttoptr i32 %v0_10002730 to i32*
  %v5_10002744 = call i32 @function_100006a8(i32 %v0_10002740, i32* %v4_10002744, i32 11, i32 0)
  %v0_10002748 = load i32, i32* @r28, align 4
  %v0_10002758 = load i32, i32* @r29, align 4
  store i32 %v0_10002758, i32* %r3.global-to-local, align 4
  store i32 268445536, i32* @lr, align 4
  %v4_1000275c = inttoptr i32 %v0_10002748 to i32*
  %v5_1000275c = call i32 @function_100006a8(i32 %v0_10002758, i32* %v4_1000275c, i32 12, i32 1)
  %v0_10002760 = load i32, i32* @r28, align 4
  store i32 %v5_1000275c, i32* %r14.global-to-local, align 4
  %v0_10002770 = load i32, i32* @r29, align 4
  store i32 %v0_10002770, i32* %r3.global-to-local, align 4
  store i32 268445560, i32* @lr, align 4
  %v4_10002774 = inttoptr i32 %v0_10002760 to i32*
  %v5_10002774 = call i32 @function_100006a8(i32 %v0_10002770, i32* %v4_10002774, i32 13, i32 0)
  %v0_10002778 = load i32, i32* @r28, align 4
  store i32 %v5_10002774, i32* %r24.global-to-local, align 4
  %v0_10002788 = load i32, i32* @r29, align 4
  store i32 %v0_10002788, i32* %r3.global-to-local, align 4
  store i32 268445584, i32* @lr, align 4
  %v4_1000278c = inttoptr i32 %v0_10002778 to i32*
  %v5_1000278c = call i32 @function_100006a8(i32 %v0_10002788, i32* %v4_1000278c, i32 14, i32 0)
  %v0_10002790 = load i32, i32* @r28, align 4
  store i32 %v5_1000278c, i32* %r27.global-to-local, align 4
  %v0_100027a0 = load i32, i32* @r29, align 4
  store i32 %v0_100027a0, i32* %r3.global-to-local, align 4
  store i32 268445608, i32* @lr, align 4
  %v4_100027a4 = inttoptr i32 %v0_10002790 to i32*
  %v5_100027a4 = call i32 @function_100006a8(i32 %v0_100027a0, i32* %v4_100027a4, i32 15, i32 0)
  %v0_100027a8 = load i32, i32* @r28, align 4
  store i32 %v5_100027a4, i32* %r26.global-to-local, align 4
  %v0_100027b8 = load i32, i32* @r29, align 4
  store i32 %v0_100027b8, i32* %r3.global-to-local, align 4
  store i32 268445632, i32* @lr, align 4
  %v4_100027bc = inttoptr i32 %v0_100027a8 to i32*
  %v5_100027bc = call i32 @function_100006a8(i32 %v0_100027b8, i32* %v4_100027bc, i32 16, i32 0)
  %v0_100027c0 = load i32, i32* @r28, align 4
  store i32 %v5_100027bc, i32* %r30.global-to-local, align 4
  %v0_100027d0 = load i32, i32* @r29, align 4
  store i32 %v0_100027d0, i32* %r3.global-to-local, align 4
  store i32 268445656, i32* @lr, align 4
  %v4_100027d4 = inttoptr i32 %v0_100027c0 to i32*
  %v5_100027d4 = call i32 @function_100006a8(i32 %v0_100027d0, i32* %v4_100027d4, i32 0, i32 512)
  %v0_100027d8 = load i32, i32* @r28, align 4
  store i32 %v5_100027d4, i32* %r16.global-to-local, align 4
  %v0_100027e8 = load i32, i32* @r29, align 4
  store i32 %v0_100027e8, i32* %r3.global-to-local, align 4
  store i32 268445680, i32* @lr, align 4
  %v4_100027ec = inttoptr i32 %v0_100027d8 to i32*
  %v5_100027ec = call i32 @function_100006a8(i32 %v0_100027e8, i32* %v4_100027ec, i32 1, i32 1)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_100027f4 = load i32, i32* @global_var_1001c258.14, align 4
  %v1_100027f8 = urem i32 %v5_100027ec, 256
  %v0_100027fc = load i32, i32* @r28, align 4
  %v0_10002808 = load i32, i32* @r29, align 4
  store i32 %v0_10002808, i32* %r3.global-to-local, align 4
  store i32 268445712, i32* @lr, align 4
  %v5_1000280c = inttoptr i32 %v0_100027fc to i32*
  %v6_1000280c = call i32 @function_10000628(i32 %v0_10002808, i32* %v5_1000280c, i32 25, i32 %v3_100027f4, i32 268566528)
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268445732, i32* @lr, align 4
  %v3_10002820 = call i32 @function_10009e1c(i32 2, i32 3, i32 6)
  store i32 %v3_10002820, i32* %r3.global-to-local, align 4
  %v3_10002824 = icmp eq i32 %v3_10002820, -1
  store i32 %v3_10002820, i32* %r23.global-to-local, align 4
  br i1 %v3_10002824, label %dec_label_pc_10002b64, label %dec_label_pc_10002830

dec_label_pc_10002830:                            ; preds = %dec_label_pc_100025e0
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_1000283c = ptrtoint i32* %stack_var_-136 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-136, align 4
  store i32 268445772, i32* @lr, align 4
  %v4_10002848 = call i32 @function_10009de0(i32 0, i32 3, i32 %v2_1000283c, i32 4)
  store i32 %v4_10002848, i32* %r3.global-to-local, align 4
  %v3_1000284c = icmp eq i32 %v4_10002848, -1
  br i1 %v3_1000284c, label %dec_label_pc_10002b5c, label %dec_label_pc_10002854

dec_label_pc_10002854:                            ; preds = %dec_label_pc_10002830
  %v0_10002854 = load i32, i32* %r21.global-to-local, align 4
  %v1_10002854 = icmp slt i32 %v0_10002854, 0
  %v3_10002854 = icmp eq i32 %v0_10002854, 0
  store i1 %v1_10002854, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10002854, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-136, align 4
  %v0_10002860 = load i32, i32* %r18.global-to-local, align 4
  %v1_10002860 = urem i32 %v0_10002860, 65536
  store i32 %v1_10002860, i32* %r18.global-to-local, align 4
  %v0_10002864 = load i32, i32* %r19.global-to-local, align 4
  %v1_10002864 = urem i32 %v0_10002864, 65536
  store i32 %v1_10002864, i32* %r19.global-to-local, align 4
  %v0_10002868 = load i32, i32* %r20.global-to-local, align 4
  %v1_10002868 = urem i32 %v0_10002868, 65536
  store i32 %v1_10002868, i32* %r20.global-to-local, align 4
  %tmp40 = icmp slt i32 %v0_10002854, 1
  br i1 %tmp40, label %dec_label_pc_10002b3c, label %dec_label_pc_10002870

dec_label_pc_10002870:                            ; preds = %dec_label_pc_10002854
  %v0_10002874 = load i32, i32* %r24.global-to-local, align 4
  %v1_10002874 = urem i32 %v0_10002874, 256
  %v0_10002878 = load i32, i32* %r16.global-to-local, align 4
  %v1_10002878 = add i32 %v0_10002878, 40
  store i32 %v1_10002878, i32* %r24.global-to-local, align 4
  %v3_1000287c = icmp eq i32 %v1_10002874, 0
  store i1 %v3_1000287c, i1* %cr3_eq.global-to-local, align 1
  %v1_10002880 = urem i32 %v5_10002744, 2
  store i32 %v1_10002880, i32* %r9.global-to-local, align 4
  %v0_10002884 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002884 = urem i32 %v0_10002884, 2
  store i32 %v1_10002884, i32* %r28.global-to-local, align 4
  %v1_10002888 = urem i32 %v0_10002874, 2
  store i32 %v1_10002888, i32* %r26.global-to-local, align 4
  %v1_1000288c = urem i32 %v1_10002878, 65536
  store i32 %v1_1000288c, i32* %r0.global-to-local, align 4
  %v0_10002894 = load i32, i32* @r31, align 4
  %v3_10002894 = icmp eq i32 %v0_10002894, 0
  store i1 %v3_10002894, i1* %cr2_eq.global-to-local, align 1
  %v5_10002898 = trunc i32 %v1_10002878 to i16
  %v0_1000289c = load i32, i32* %r14.global-to-local, align 4
  %v1_1000289c = urem i32 %v0_1000289c, 2
  store i32 %v1_1000289c, i32* %r14.global-to-local, align 4
  %v0_100028a0 = load i32, i32* %r27.global-to-local, align 4
  %v1_100028a0 = urem i32 %v0_100028a0, 2
  store i32 %v1_100028a0, i32* %r27.global-to-local, align 4
  %v0_100028a4 = load i32, i32* %r30.global-to-local, align 4
  %v1_100028a4 = urem i32 %v0_100028a4, 2
  %v4_100028f4 = sext i8 %v5_10002678 to i32
  br label %dec_label_pc_100028ac

dec_label_pc_100028ac:                            ; preds = %dec_label_pc_1000298c, %dec_label_pc_10002870
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268445880, i32* @lr, align 4
  %v2_100028b4 = call i32 @function_1000a178(i32 1510, i32 1)
  store i32 %v2_100028b4, i32* %r3.global-to-local, align 4
  %v3_100028b8 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_100028b8, i32* %r9.global-to-local, align 4
  %v0_100028bc = load i32, i32* @r31, align 4
  %v1_100028bc = mul i32 %v0_100028bc, 4
  store i32 %v1_100028bc, i32* %r0.global-to-local, align 4
  %v1_100028c0 = load i32, i32* %r22.global-to-local, align 4
  %v3_100028c0 = add i32 %v1_100028c0, %v1_100028bc
  %v4_100028c0 = inttoptr i32 %v3_100028c0 to i32*
  store i32 %v2_100028b4, i32* %v4_100028c0, align 4
  %v0_100028c4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100028c4 = mul i32 %v0_100028c4, 4
  store i32 %v1_100028c4, i32* %r9.global-to-local, align 4
  %v1_100028c8 = load i32, i32* %r22.global-to-local, align 4
  %v2_100028c8 = add i32 %v1_100028c8, %v1_100028c4
  %v3_100028c8 = inttoptr i32 %v2_100028c8 to i32*
  %v4_100028c8 = load i32, i32* %v3_100028c8, align 4
  store i32 %v4_100028c8, i32* @r31, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_100028d0 = inttoptr i32 %v4_100028c8 to i32*
  %v2_100028d0 = load i32, i32* %v1_100028d0, align 4
  store i32 %v2_100028d0, i32* %r0.global-to-local, align 4
  %v1_100028d4 = add i32 %v4_100028c8, 20
  store i32 %v1_100028d4, i32* @r30, align 4
  %v0_100028d8 = load i32, i32* %r18.global-to-local, align 4
  %v1_100028d8 = trunc i32 %v0_100028d8 to i16
  %v3_100028d8 = add i32 %v4_100028c8, 4
  %v4_100028d8 = inttoptr i32 %v3_100028d8 to i16*
  store i16 %v1_100028d8, i16* %v4_100028d8, align 2
  %v1_100028dc = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100028dc, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_100028e4 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v1_100028e8 = load i32, i32* @r31, align 4
  %v2_100028e8 = inttoptr i32 %v1_100028e8 to i32*
  store i32 %v1_100028e4, i32* %v2_100028e8, align 4
  %v2_100028f0 = load i32, i32* @r31, align 4
  %v3_100028f0 = add i32 %v2_100028f0, 8
  %v4_100028f0 = inttoptr i32 %v3_100028f0 to i8*
  store i8 %v5_100026b0, i8* %v4_100028f0, align 1
  store i32 %v4_100028f4, i32* %r9.global-to-local, align 4
  %v2_100028f8 = load i32, i32* @r31, align 4
  %v3_100028f8 = add i32 %v2_100028f8, 1
  %v4_100028f8 = inttoptr i32 %v3_100028f8 to i8*
  store i8 %v5_10002678, i8* %v4_100028f8, align 1
  store i32 %v1_10002878, i32* %r0.global-to-local, align 4
  %v2_10002900 = load i32, i32* @r31, align 4
  %v3_10002900 = add i32 %v2_10002900, 2
  %v4_10002900 = inttoptr i32 %v3_10002900 to i16*
  store i16 %v5_10002898, i16* %v4_10002900, align 2
  %v0_10002904 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002904, label %dec_label_pc_10002910, label %dec_label_pc_10002908

dec_label_pc_10002908:                            ; preds = %dec_label_pc_100028ac
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_1000290c = load i32, i32* @r31, align 4
  %v3_1000290c = add i32 %v2_1000290c, 6
  %v4_1000290c = inttoptr i32 %v3_1000290c to i16*
  store i16 16384, i16* %v4_1000290c, align 2
  br label %dec_label_pc_10002910

dec_label_pc_10002910:                            ; preds = %dec_label_pc_100028ac, %dec_label_pc_10002908
  store i32 6, i32* %r0.global-to-local, align 4
  %v0_10002914 = load i32, i32* %r19.global-to-local, align 4
  %v1_10002914 = trunc i32 %v0_10002914 to i16
  %v2_10002914 = load i32, i32* @r31, align 4
  %v3_10002914 = add i32 %v2_10002914, 20
  %v4_10002914 = inttoptr i32 %v3_10002914 to i16*
  store i16 %v1_10002914, i16* %v4_10002914, align 2
  %v0_10002918 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002918 = trunc i32 %v0_10002918 to i8
  %v2_10002918 = load i32, i32* @r31, align 4
  %v3_10002918 = add i32 %v2_10002918, 9
  %v4_10002918 = inttoptr i32 %v3_10002918 to i8*
  store i8 %v1_10002918, i8* %v4_10002918, align 1
  %v0_1000291c = load i32, i32* %r20.global-to-local, align 4
  %v1_1000291c = trunc i32 %v0_1000291c to i16
  %v2_1000291c = load i32, i32* @r30, align 4
  %v3_1000291c = add i32 %v2_1000291c, 2
  %v4_1000291c = inttoptr i32 %v3_1000291c to i16*
  store i16 %v1_1000291c, i16* %v4_1000291c, align 2
  %v1_10002924 = load i32, i32* @r31, align 4
  %v2_10002924 = add i32 %v1_10002924, 12
  %v3_10002924 = inttoptr i32 %v2_10002924 to i32*
  store i32 %v6_1000280c, i32* %v3_10002924, align 4
  %v3_10002928 = load i32, i32* %stack_var_-136, align 4
  %v1_1000292c = mul i32 %v3_10002928, 24
  %v1_10002930 = load i32, i32* %r25.global-to-local, align 4
  %v2_10002930 = add i32 %v1_10002930, %v1_1000292c
  store i32 %v2_10002930, i32* %r9.global-to-local, align 4
  %v1_10002934 = add i32 %v2_10002930, 16
  %v2_10002934 = inttoptr i32 %v1_10002934 to i32*
  %v3_10002934 = load i32, i32* %v2_10002934, align 4
  store i32 %v3_10002934, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_1000293c = load i32, i32* @r31, align 4
  %v2_1000293c = add i32 %v1_1000293c, 16
  %v3_1000293c = inttoptr i32 %v2_1000293c to i32*
  store i32 %v3_10002934, i32* %v3_1000293c, align 4
  %v0_10002940 = load i32, i32* %r15.global-to-local, align 4
  %v1_10002940 = load i32, i32* @r30, align 4
  %v2_10002940 = add i32 %v1_10002940, 4
  %v3_10002940 = inttoptr i32 %v2_10002940 to i32*
  store i32 %v0_10002940, i32* %v3_10002940, align 4
  %v0_10002944 = load i32, i32* @r30, align 4
  %v1_10002944 = add i32 %v0_10002944, 12
  %v2_10002944 = inttoptr i32 %v1_10002944 to i32*
  %v3_10002944 = load i32, i32* %v2_10002944, align 4
  store i32 %v3_10002944, i32* %r0.global-to-local, align 4
  %v1_10002948 = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  store i32 %v1_10002948, i32* %r0.global-to-local, align 4
  store i32 %v1_10002880, i32* %r9.global-to-local, align 4
  %v1_10002950 = call i32 @__asm_rlwimi(i32 %v1_10002880, i32 21, i32 10, i32 10)
  store i32 %v1_10002950, i32* %r0.global-to-local, align 4
  %v1_10002954 = call i32 @__asm_rlwimi(i32 %v1_1000289c, i32 20, i32 11, i32 11)
  store i32 %v1_10002954, i32* %r0.global-to-local, align 4
  %v1_10002958 = call i32 @__asm_rlwimi(i32 %v1_10002888, i32 19, i32 12, i32 12)
  store i32 %v1_10002958, i32* %r0.global-to-local, align 4
  %v1_1000295c = call i32 @__asm_rlwimi(i32 %v1_100028a0, i32 18, i32 13, i32 13)
  store i32 %v1_1000295c, i32* %r0.global-to-local, align 4
  %v1_10002960 = call i32 @__asm_rlwimi(i32 %v1_10002884, i32 17, i32 14, i32 14)
  store i32 %v1_10002960, i32* %r0.global-to-local, align 4
  %v1_10002964 = call i32 @__asm_rlwimi(i32 %v1_100028a4, i32 16, i32 15, i32 15)
  store i32 %v1_10002964, i32* %r0.global-to-local, align 4
  %v1_10002968 = load i32, i32* @r30, align 4
  %v2_10002968 = add i32 %v1_10002968, 12
  %v3_10002968 = inttoptr i32 %v2_10002968 to i32*
  store i32 %v1_10002964, i32* %v3_10002968, align 4
  %v0_1000296c = call i32 @function_10005f3c()
  %v1_1000296c = trunc i32 %v0_1000296c to i16
  %v0_10002970 = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_10002970, i32* @r4, align 4
  %v3_10002974 = load i32, i32* @r30, align 4
  %v4_10002974 = add i32 %v3_10002974, 14
  %v5_10002974 = inttoptr i32 %v4_10002974 to i16*
  store i16 %v1_1000296c, i16* %v5_10002974, align 2
  %v0_10002978 = load i32, i32* @r31, align 4
  %v1_10002978 = add i32 %v0_10002978, 40
  store i32 %v1_10002978, i32* @r3, align 4
  %v0_1000297c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_1000297c, label %dec_label_pc_1000298c, label %dec_label_pc_10002980

dec_label_pc_10002980:                            ; preds = %dec_label_pc_10002910
  %v0_10002980 = load i32, i32* @r30, align 4
  %v1_10002980 = add i32 %v0_10002980, 12
  %v2_10002980 = inttoptr i32 %v1_10002980 to i32*
  %v3_10002980 = load i32, i32* %v2_10002980, align 4
  %v1_10002984 = or i32 %v3_10002980, 524288
  store i32 %v1_10002984, i32* %r0.global-to-local, align 4
  store i32 %v1_10002984, i32* %v2_10002980, align 4
  br label %dec_label_pc_1000298c

dec_label_pc_1000298c:                            ; preds = %dec_label_pc_10002910, %dec_label_pc_10002980
  %v0_1000298c = call i32 @function_10006110()
  store i32 %v0_1000298c, i32* %r3.global-to-local, align 4
  %v3_10002990 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_10002990, i32* %r9.global-to-local, align 4
  %v1_10002994 = add i32 %v3_10002990, 1
  %v1_10002998 = load i32, i32* %r21.global-to-local, align 4
  %v2_10002998 = icmp slt i32 %v1_10002994, %v1_10002998
  store i32 %v1_10002994, i32* %stack_var_-136, align 4
  br i1 %v2_10002998, label %dec_label_pc_100028ac, label %dec_label_pc_100029a4

dec_label_pc_100029a4:                            ; preds = %dec_label_pc_1000298c
  store i32 %v6_1000280c, i32* %r0.global-to-local, align 4
  %v0_100029a8 = load i32, i32* %r16.global-to-local, align 4
  %v1_100029a8 = add i32 %v0_100029a8, 20
  store i32 %v1_100029a8, i32* @r30, align 4
  store i32 %v1_100027f8, i32* %r9.global-to-local, align 4
  %v3_100029b0 = icmp eq i32 %v6_1000280c, -1
  store i1 %v3_100029b0, i1* %cr2_eq.global-to-local, align 1
  %v3_100029b4 = icmp eq i32 %v1_100027f8, 0
  store i1 %v3_100029b4, i1* %cr3_eq.global-to-local, align 1
  %v0_100029b8.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100029b8.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_100029b8.preheader

dec_label_pc_100029b8.preheader:                  ; preds = %dec_label_pc_10002a98, %dec_label_pc_10002b3c, %dec_label_pc_100029a4
  %v1_100029b8 = phi i1 [ %v1_10002854, %dec_label_pc_10002b3c ], [ %v1_100029b8.pre, %dec_label_pc_100029a4 ], [ %v1_10002a98, %dec_label_pc_10002a98 ]
  %v0_100029b8 = phi i1 [ %v3_10002854, %dec_label_pc_10002b3c ], [ %v0_100029b8.pre, %dec_label_pc_100029a4 ], [ %v0_10002a98, %dec_label_pc_10002a98 ]
  %v2_100029b8 = or i1 %v1_100029b8, %v0_100029b8
  br label %dec_label_pc_100029b8

dec_label_pc_100029b8:                            ; preds = %dec_label_pc_100029b8.preheader, %dec_label_pc_100029b8
  br i1 %v2_100029b8, label %dec_label_pc_100029b8, label %dec_label_pc_100029bc

dec_label_pc_100029bc:                            ; preds = %dec_label_pc_100029b8, %dec_label_pc_10002a98
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_100029c0 = load i32, i32* @r30, align 4
  %v1_100029c0 = urem i32 %v0_100029c0, 65536
  store i32 %v1_100029c0, i32* %r27.global-to-local, align 4
  store i32 0, i32* %stack_var_-136, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_100029d0

dec_label_pc_100029d0:                            ; preds = %dec_label_pc_10002a28, %dec_label_pc_100029bc
  %v0_100029d0 = phi i32 [ %v1_10002a88, %dec_label_pc_10002a28 ], [ 0, %dec_label_pc_100029bc ]
  %v1_100029d0 = mul i32 %v0_100029d0, 24
  store i32 %v1_100029d0, i32* %r0.global-to-local, align 4
  %v1_100029d4 = mul i32 %v0_100029d0, 4
  %v1_100029d8 = load i32, i32* %r22.global-to-local, align 4
  %v2_100029d8 = add i32 %v1_100029d8, %v1_100029d4
  %v3_100029d8 = inttoptr i32 %v2_100029d8 to i32*
  %v4_100029d8 = load i32, i32* %v3_100029d8, align 4
  store i32 %v4_100029d8, i32* %r28.global-to-local, align 4
  %v1_100029dc = load i32, i32* %r25.global-to-local, align 4
  %v2_100029dc = add i32 %v1_100029dc, %v1_100029d0
  %v1_100029e0 = add i32 %v2_100029dc, 20
  %v2_100029e0 = inttoptr i32 %v1_100029e0 to i8*
  %v3_100029e0 = load i8, i8* %v2_100029e0, align 1
  %v4_100029e0 = zext i8 %v3_100029e0 to i32
  store i32 %v4_100029e0, i32* %r9.global-to-local, align 4
  %v1_100029e4 = add i32 %v4_100029d8, 20
  store i32 %v1_100029e4, i32* @r31, align 4
  %tmp41 = icmp ult i8 %v3_100029e0, 32
  br i1 %tmp41, label %dec_label_pc_10002aa0, label %dec_label_pc_100029f0

dec_label_pc_100029f0:                            ; preds = %dec_label_pc_100029d0
  %v0_100029f0 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100029f0, label %dec_label_pc_10002ac8, label %dec_label_pc_100029f4

dec_label_pc_100029f4:                            ; preds = %dec_label_pc_10002aa0, %dec_label_pc_100029f0
  store i32 65535, i32* @r29, align 4
  %v0_100029fc = load i32, i32* %r18.global-to-local, align 4
  %v4_100029fc = icmp eq i32 %v0_100029fc, 65535
  br i1 %v4_100029fc, label %dec_label_pc_10002ae0, label %dec_label_pc_10002a04

dec_label_pc_10002a04:                            ; preds = %dec_label_pc_10002ac8, %dec_label_pc_100029f4
  %v1_10002a04 = phi i32 [ %v1_10002ad8, %dec_label_pc_10002ac8 ], [ 65535, %dec_label_pc_100029f4 ]
  %v0_10002a04 = load i32, i32* %r19.global-to-local, align 4
  %v4_10002a04 = icmp eq i32 %v0_10002a04, %v1_10002a04
  br i1 %v4_10002a04, label %dec_label_pc_10002af0, label %dec_label_pc_10002a0c

dec_label_pc_10002a0c:                            ; preds = %dec_label_pc_10002ae0.dec_label_pc_10002a0c_crit_edge, %dec_label_pc_10002a04
  %v1_10002a0c = phi i32 [ %v1_10002a0c.pre, %dec_label_pc_10002ae0.dec_label_pc_10002a0c_crit_edge ], [ %v1_10002a04, %dec_label_pc_10002a04 ]
  %v0_10002a0c = load i32, i32* %r20.global-to-local, align 4
  %v4_10002a0c = icmp eq i32 %v0_10002a0c, %v1_10002a0c
  br i1 %v4_10002a0c, label %dec_label_pc_10002b00, label %dec_label_pc_10002a14

dec_label_pc_10002a14:                            ; preds = %dec_label_pc_10002af0.dec_label_pc_10002a14_crit_edge, %dec_label_pc_10002a0c
  %v1_10002a14 = phi i32 [ %v1_10002a14.pre, %dec_label_pc_10002af0.dec_label_pc_10002a14_crit_edge ], [ %v1_10002a0c, %dec_label_pc_10002a0c ]
  %v0_10002a14 = load i32, i32* %r15.global-to-local, align 4
  %v4_10002a14 = icmp eq i32 %v0_10002a14, %v1_10002a14
  br i1 %v4_10002a14, label %dec_label_pc_10002b10, label %dec_label_pc_10002a1c

dec_label_pc_10002a1c:                            ; preds = %dec_label_pc_10002b00.dec_label_pc_10002a1c_crit_edge, %dec_label_pc_10002a14
  %v1_10002a1c = phi i32 [ %v1_10002a1c.pre, %dec_label_pc_10002b00.dec_label_pc_10002a1c_crit_edge ], [ %v1_10002a14, %dec_label_pc_10002a14 ]
  %v0_10002a1c = load i32, i32* %r17.global-to-local, align 4
  %v4_10002a1c = icmp eq i32 %v0_10002a1c, %v1_10002a1c
  br i1 %v4_10002a1c, label %dec_label_pc_10002b20, label %dec_label_pc_10002a24

dec_label_pc_10002a24:                            ; preds = %dec_label_pc_10002b10, %dec_label_pc_10002a1c
  %v0_10002a24 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002a24, label %dec_label_pc_10002a28, label %dec_label_pc_10002b2c

dec_label_pc_10002a28:                            ; preds = %dec_label_pc_10002a24, %dec_label_pc_10002b20, %dec_label_pc_10002b2c
  %v0_10002a28 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002a28 = trunc i32 %v0_10002a28 to i16
  %v2_10002a28 = load i32, i32* %r28.global-to-local, align 4
  %v3_10002a28 = add i32 %v2_10002a28, 10
  %v4_10002a28 = inttoptr i32 %v3_10002a28 to i16*
  store i16 %v1_10002a28, i16* %v4_10002a28, align 2
  %v0_10002a30 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002a30, i32* @r3, align 4
  %v2_10002a34 = call i32 @function_100043cc(i32 %v0_10002a30, i32 20)
  %v3_10002a34 = trunc i32 %v2_10002a34 to i16
  %v0_10002a38 = load i32, i32* @r31, align 4
  store i32 %v0_10002a38, i32* @r4, align 4
  %v4_10002a3c = add i32 %v0_10002a30, 10
  %v5_10002a3c = inttoptr i32 %v4_10002a3c to i16*
  store i16 %v3_10002a34, i16* %v5_10002a3c, align 2
  %v0_10002a40 = load i32, i32* %r27.global-to-local, align 4
  %v0_10002a44 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002a44 = trunc i32 %v0_10002a44 to i16
  %v2_10002a44 = load i32, i32* @r31, align 4
  %v3_10002a44 = add i32 %v2_10002a44, 16
  %v4_10002a44 = inttoptr i32 %v3_10002a44 to i16*
  store i16 %v1_10002a44, i16* %v4_10002a44, align 2
  %v0_10002a48 = load i32, i32* @r30, align 4
  %v0_10002a4c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002a4c, i32* %r3.global-to-local, align 4
  %v4_10002a50 = call i32 @function_10004430(i32 %v0_10002a4c, i32 %v0_10002a38, i32 %v0_10002a40, i32 %v0_10002a48)
  %v5_10002a50 = trunc i32 %v4_10002a50 to i16
  store i32 %v4_10002a50, i32* %r3.global-to-local, align 4
  %v3_10002a54 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_10002a54, i32* %r7.global-to-local, align 4
  %v0_10002a58 = load i32, i32* @r31, align 4
  %v1_10002a58 = add i32 %v0_10002a58, 2
  %v2_10002a58 = inttoptr i32 %v1_10002a58 to i16*
  %v3_10002a58 = load i16, i16* %v2_10002a58, align 2
  %v4_10002a58 = zext i16 %v3_10002a58 to i32
  store i32 %v4_10002a58, i32* %r0.global-to-local, align 4
  %v0_10002a5c = load i32, i32* %r28.global-to-local, align 4
  %v1_10002a60 = mul i32 %v3_10002a54, 24
  store i32 %v1_10002a60, i32* %r7.global-to-local, align 4
  %v4_10002a64 = add i32 %v0_10002a58, 16
  %v5_10002a64 = inttoptr i32 %v4_10002a64 to i16*
  store i16 %v5_10002a50, i16* %v5_10002a64, align 2
  %v0_10002a68 = load i32, i32* %r24.global-to-local, align 4
  %v0_10002a6c = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10002a6c, i32* %r3.global-to-local, align 4
  %v0_10002a70 = load i32, i32* %r7.global-to-local, align 4
  %v1_10002a70 = load i32, i32* %r25.global-to-local, align 4
  %v2_10002a70 = add i32 %v1_10002a70, %v0_10002a70
  store i32 %v2_10002a70, i32* %r7.global-to-local, align 4
  %v0_10002a78 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002a78 = trunc i32 %v0_10002a78 to i16
  %v3_10002a78 = add i32 %v2_10002a70, 2
  %v4_10002a78 = inttoptr i32 %v3_10002a78 to i16*
  store i16 %v1_10002a78, i16* %v4_10002a78, align 2
  store i32 268446340, i32* @lr, align 4
  %v6_10002a80 = call i32 @function_10009da0(i32 %v0_10002a6c, i32 %v0_10002a5c, i32 %v0_10002a68, i32 16384, i32 %v2_10002a70, i32 16)
  store i32 %v6_10002a80, i32* %r3.global-to-local, align 4
  %v3_10002a84 = load i32, i32* %stack_var_-136, align 4
  %v1_10002a88 = add i32 %v3_10002a84, 1
  store i32 %v1_10002a88, i32* %r9.global-to-local, align 4
  %v1_10002a8c = load i32, i32* %r21.global-to-local, align 4
  %v2_10002a8c = icmp slt i32 %v1_10002a88, %v1_10002a8c
  store i32 %v1_10002a88, i32* %stack_var_-136, align 4
  br i1 %v2_10002a8c, label %dec_label_pc_100029d0, label %dec_label_pc_10002a98

dec_label_pc_10002a98:                            ; preds = %dec_label_pc_10002a28
  %v0_10002a98 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10002a98 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10002a98 = or i1 %v0_10002a98, %v1_10002a98
  br i1 %v2_10002a98, label %dec_label_pc_100029b8.preheader, label %dec_label_pc_100029bc

dec_label_pc_10002aa0:                            ; preds = %dec_label_pc_100029d0
  %v1_10002aa0 = add i32 %v2_100029dc, 16
  %v2_10002aa0 = inttoptr i32 %v1_10002aa0 to i32*
  %v3_10002aa0 = load i32, i32* %v2_10002aa0, align 4
  store i32 %v3_10002aa0, i32* %r29.global-to-local, align 4
  %v0_10002aa4 = call i32 @function_10005f3c()
  store i32 %v0_10002aa4, i32* %r3.global-to-local, align 4
  %v3_10002aa8 = load i32, i32* %stack_var_-136, align 4
  %v1_10002aac = mul i32 %v3_10002aa8, 24
  %v1_10002ab0 = load i32, i32* %r25.global-to-local, align 4
  %v2_10002ab0 = add i32 %v1_10002ab0, %v1_10002aac
  store i32 %v2_10002ab0, i32* %r9.global-to-local, align 4
  %v1_10002ab4 = add i32 %v2_10002ab0, 20
  %v2_10002ab4 = inttoptr i32 %v1_10002ab4 to i8*
  %v3_10002ab4 = load i8, i8* %v2_10002ab4, align 1
  %v4_10002ab4 = zext i8 %v3_10002ab4 to i32
  store i32 %v4_10002ab4, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10002ab4, 64
  %v2_10002ab8 = zext i8 %tmp to i32
  %v3_10002ab8 = lshr i32 %v0_10002aa4, %v2_10002ab8
  store i32 %v3_10002ab8, i32* %r3.global-to-local, align 4
  %v0_10002abc = load i32, i32* %r29.global-to-local, align 4
  %v2_10002abc = add i32 %v3_10002ab8, %v0_10002abc
  store i32 %v2_10002abc, i32* %r29.global-to-local, align 4
  %v1_10002ac0 = load i32, i32* %r28.global-to-local, align 4
  %v2_10002ac0 = add i32 %v1_10002ac0, 16
  %v3_10002ac0 = inttoptr i32 %v2_10002ac0 to i32*
  store i32 %v2_10002abc, i32* %v3_10002ac0, align 4
  %v0_10002ac4 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002ac4, label %dec_label_pc_10002ac8, label %dec_label_pc_100029f4

dec_label_pc_10002ac8:                            ; preds = %dec_label_pc_10002aa0, %dec_label_pc_100029f0
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10002acc = call i32 @function_10005f3c()
  store i32 %v0_10002acc, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_10002ad4 = load i32, i32* %r28.global-to-local, align 4
  %v2_10002ad4 = add i32 %v1_10002ad4, 12
  %v3_10002ad4 = inttoptr i32 %v2_10002ad4 to i32*
  store i32 %v0_10002acc, i32* %v3_10002ad4, align 4
  %v0_10002ad8 = load i32, i32* %r18.global-to-local, align 4
  %v1_10002ad8 = load i32, i32* @r29, align 4
  %v4_10002ad8 = icmp eq i32 %v0_10002ad8, %v1_10002ad8
  br i1 %v4_10002ad8, label %dec_label_pc_10002ae0, label %dec_label_pc_10002a04

dec_label_pc_10002ae0:                            ; preds = %dec_label_pc_10002ac8, %dec_label_pc_100029f4
  %v0_10002ae0 = call i32 @function_10005f3c()
  %v1_10002ae0 = trunc i32 %v0_10002ae0 to i16
  store i32 %v0_10002ae0, i32* %r3.global-to-local, align 4
  %v0_10002ae4 = load i32, i32* %r19.global-to-local, align 4
  %v1_10002ae4 = load i32, i32* @r29, align 4
  %v4_10002ae4 = icmp eq i32 %v0_10002ae4, %v1_10002ae4
  %v3_10002ae8 = load i32, i32* %r28.global-to-local, align 4
  %v4_10002ae8 = add i32 %v3_10002ae8, 4
  %v5_10002ae8 = inttoptr i32 %v4_10002ae8 to i16*
  store i16 %v1_10002ae0, i16* %v5_10002ae8, align 2
  br i1 %v4_10002ae4, label %dec_label_pc_10002af0, label %dec_label_pc_10002ae0.dec_label_pc_10002a0c_crit_edge

dec_label_pc_10002ae0.dec_label_pc_10002a0c_crit_edge: ; preds = %dec_label_pc_10002ae0
  %v1_10002a0c.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10002a0c

dec_label_pc_10002af0:                            ; preds = %dec_label_pc_10002ae0, %dec_label_pc_10002a04
  %v0_10002af0 = call i32 @function_10005f3c()
  %v1_10002af0 = trunc i32 %v0_10002af0 to i16
  store i32 %v0_10002af0, i32* %r3.global-to-local, align 4
  %v0_10002af4 = load i32, i32* %r20.global-to-local, align 4
  %v1_10002af4 = load i32, i32* @r29, align 4
  %v4_10002af4 = icmp eq i32 %v0_10002af4, %v1_10002af4
  %v3_10002af8 = load i32, i32* %r28.global-to-local, align 4
  %v4_10002af8 = add i32 %v3_10002af8, 20
  %v5_10002af8 = inttoptr i32 %v4_10002af8 to i16*
  store i16 %v1_10002af0, i16* %v5_10002af8, align 2
  br i1 %v4_10002af4, label %dec_label_pc_10002b00, label %dec_label_pc_10002af0.dec_label_pc_10002a14_crit_edge

dec_label_pc_10002af0.dec_label_pc_10002a14_crit_edge: ; preds = %dec_label_pc_10002af0
  %v1_10002a14.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10002a14

dec_label_pc_10002b00:                            ; preds = %dec_label_pc_10002af0, %dec_label_pc_10002a0c
  %v0_10002b00 = call i32 @function_10005f3c()
  %v1_10002b00 = trunc i32 %v0_10002b00 to i16
  store i32 %v0_10002b00, i32* %r3.global-to-local, align 4
  %v0_10002b04 = load i32, i32* %r15.global-to-local, align 4
  %v1_10002b04 = load i32, i32* @r29, align 4
  %v4_10002b04 = icmp eq i32 %v0_10002b04, %v1_10002b04
  %v3_10002b08 = load i32, i32* @r31, align 4
  %v4_10002b08 = add i32 %v3_10002b08, 2
  %v5_10002b08 = inttoptr i32 %v4_10002b08 to i16*
  store i16 %v1_10002b00, i16* %v5_10002b08, align 2
  br i1 %v4_10002b04, label %dec_label_pc_10002b10, label %dec_label_pc_10002b00.dec_label_pc_10002a1c_crit_edge

dec_label_pc_10002b00.dec_label_pc_10002a1c_crit_edge: ; preds = %dec_label_pc_10002b00
  %v1_10002a1c.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10002a1c

dec_label_pc_10002b10:                            ; preds = %dec_label_pc_10002b00, %dec_label_pc_10002a14
  %v0_10002b10 = call i32 @function_10005f3c()
  store i32 %v0_10002b10, i32* %r3.global-to-local, align 4
  %v0_10002b14 = load i32, i32* %r17.global-to-local, align 4
  %v1_10002b14 = load i32, i32* @r29, align 4
  %v4_10002b14 = icmp eq i32 %v0_10002b14, %v1_10002b14
  %v1_10002b18 = load i32, i32* @r31, align 4
  %v2_10002b18 = add i32 %v1_10002b18, 4
  %v3_10002b18 = inttoptr i32 %v2_10002b18 to i32*
  store i32 %v0_10002b10, i32* %v3_10002b18, align 4
  br i1 %v4_10002b14, label %dec_label_pc_10002b20, label %dec_label_pc_10002a24

dec_label_pc_10002b20:                            ; preds = %dec_label_pc_10002b10, %dec_label_pc_10002a1c
  %v0_10002b20 = call i32 @function_10005f3c()
  store i32 %v0_10002b20, i32* %r3.global-to-local, align 4
  %v1_10002b24 = load i32, i32* @r31, align 4
  %v2_10002b24 = add i32 %v1_10002b24, 8
  %v3_10002b24 = inttoptr i32 %v2_10002b24 to i32*
  store i32 %v0_10002b20, i32* %v3_10002b24, align 4
  %v0_10002b28 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002b28, label %dec_label_pc_10002a28, label %dec_label_pc_10002b2c

dec_label_pc_10002b2c:                            ; preds = %dec_label_pc_10002a24, %dec_label_pc_10002b20
  %v0_10002b2c = load i32, i32* %r28.global-to-local, align 4
  %v1_10002b2c = add i32 %v0_10002b2c, 40
  store i32 %v1_10002b2c, i32* @r3, align 4
  %v0_10002b30 = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_10002b30, i32* @r4, align 4
  %v0_10002b34 = call i32 @function_10006110()
  store i32 %v0_10002b34, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002a28

dec_label_pc_10002b3c:                            ; preds = %dec_label_pc_10002854
  store i32 %v6_1000280c, i32* %r0.global-to-local, align 4
  %v0_10002b40 = load i32, i32* %r16.global-to-local, align 4
  %v1_10002b40 = add i32 %v0_10002b40, 40
  store i32 %v1_10002b40, i32* %r24.global-to-local, align 4
  store i32 %v1_100027f8, i32* %r9.global-to-local, align 4
  %v1_10002b48 = add i32 %v0_10002b40, 20
  store i32 %v1_10002b48, i32* @r30, align 4
  %v3_10002b4c = icmp eq i32 %v6_1000280c, -1
  store i1 %v3_10002b4c, i1* %cr2_eq.global-to-local, align 1
  %v3_10002b50 = icmp eq i32 %v1_100027f8, 0
  store i1 %v3_10002b50, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_100029b8.preheader

dec_label_pc_10002b5c:                            ; preds = %dec_label_pc_10002830
  %v0_10002b5c = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10002b5c, i32* %r3.global-to-local, align 4
  store i32 268446564, i32* @lr, align 4
  %v0_10002b60 = call i32 @function_100090cc()
  store i32 %v0_10002b60, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002b64

dec_label_pc_10002b64:                            ; preds = %dec_label_pc_100025e0, %dec_label_pc_10002b5c
  store i32 %v0_100025f8, i32* %r0.global-to-local, align 4
  %v1_10002b78 = call %0 @__asm_mtcrf(i32 56, i32 %v0_100025e8)
  store i32 %v0_10002638, i32* %r28.global-to-local, align 4
  store i32 %v0_10002640, i32* %r29.global-to-local, align 4
  store i32 %v0_10002648, i32* %r30.global-to-local, align 4
  %v0_10002bc0 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10002bc0

; uselistorder directives
  uselistorder i32 %v0_10002b00, { 1, 0 }
  uselistorder i32 %v0_10002af0, { 1, 0 }
  uselistorder i32 %v0_10002ae0, { 1, 0 }
  uselistorder i32 %v1_10002ad8, { 1, 0 }
  uselistorder i1 %v1_10002a98, { 1, 0 }
  uselistorder i1 %v0_10002a98, { 1, 0 }
  uselistorder i32 %v1_10002a88, { 0, 2, 3, 1 }
  uselistorder i32 %v4_10002a50, { 1, 0 }
  uselistorder i32 %v1_100028c4, { 1, 0 }
  uselistorder i32 %v1_100028bc, { 1, 0 }
  uselistorder i32 %v1_100028a0, { 1, 0 }
  uselistorder i32 %v1_1000289c, { 1, 0 }
  uselistorder i32 %v1_10002888, { 1, 0 }
  uselistorder i32 %v1_10002884, { 1, 0 }
  uselistorder i32 %v1_10002880, { 2, 1, 0 }
  uselistorder i32 %v1_10002878, { 1, 2, 0, 3 }
  uselistorder i32 %v6_1000280c, { 0, 4, 2, 1, 3 }
  uselistorder i32 %v1_100027f8, { 3, 0, 2, 1 }
  uselistorder i8 %v5_10002678, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 21, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 1, 0 }
  uselistorder i32* %r29.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r28.global-to-local, { 0, 9, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 20, 21, 22, 23, 25, 26, 27, 28, 29 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10002b64, { 1, 0 }
  uselistorder label %dec_label_pc_10002b2c, { 1, 0 }
  uselistorder label %dec_label_pc_10002a28, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100029bc, { 1, 0 }
  uselistorder label %dec_label_pc_100029b8, { 1, 0 }
  uselistorder label %dec_label_pc_100029b8.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000298c, { 1, 0 }
  uselistorder label %dec_label_pc_10002910, { 1, 0 }
}

define i32 @function_10002bc4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10002bc4:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-120 = alloca i32, align 4
  %v0_10002bc8 = load i32, i32* @lr, align 4
  store i32 %v0_10002bc8, i32* %r0.global-to-local, align 4
  %v0_10002bcc = call i32 @__asm_mfcr()
  store i32 %v0_10002bcc, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r27.global-to-local, align 4
  %v0_10002bdc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10002bcc, i32* %r24.global-to-local, align 4
  %v0_10002c1c = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10002c24 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_10002c30 = load i32, i32* @r31, align 4
  store i32 268446776, i32* @lr, align 4
  %v2_10002c34 = call i32 @function_1000a178(i32 4, i32 4)
  store i32 %v2_10002c34, i32* %r25.global-to-local, align 4
  %v0_10002c3c = load i32, i32* @r28, align 4
  %v0_10002c48 = load i32, i32* @r29, align 4
  store i32 %v0_10002c48, i32* %r3.global-to-local, align 4
  store i32 268446800, i32* @lr, align 4
  %v4_10002c4c = inttoptr i32 %v0_10002c3c to i32*
  %v5_10002c4c = call i32 @function_100006a8(i32 %v0_10002c48, i32* %v4_10002c4c, i32 2, i32 0)
  %v5_10002c5c = trunc i32 %v5_10002c4c to i8
  %v0_10002c64 = load i32, i32* @r28, align 4
  %v0_10002c68 = load i32, i32* @r29, align 4
  store i32 %v0_10002c68, i32* %r3.global-to-local, align 4
  store i32 268446832, i32* @lr, align 4
  %v4_10002c6c = inttoptr i32 %v0_10002c64 to i32*
  %v5_10002c6c = call i32 @function_100006a8(i32 %v0_10002c68, i32* %v4_10002c6c, i32 3, i32 65535)
  %v0_10002c70 = load i32, i32* @r28, align 4
  store i32 %v5_10002c6c, i32* %r21.global-to-local, align 4
  %v0_10002c80 = load i32, i32* @r29, align 4
  store i32 %v0_10002c80, i32* %r3.global-to-local, align 4
  store i32 268446856, i32* @lr, align 4
  %v4_10002c84 = inttoptr i32 %v0_10002c70 to i32*
  %v5_10002c84 = call i32 @function_100006a8(i32 %v0_10002c80, i32* %v4_10002c84, i32 4, i32 64)
  %v0_10002c88 = load i32, i32* @r28, align 4
  %v5_10002c94 = trunc i32 %v5_10002c84 to i8
  %v0_10002c9c = load i32, i32* @r29, align 4
  store i32 %v0_10002c9c, i32* %r3.global-to-local, align 4
  store i32 268446884, i32* @lr, align 4
  %v4_10002ca0 = inttoptr i32 %v0_10002c88 to i32*
  %v5_10002ca0 = call i32 @function_100006a8(i32 %v0_10002c9c, i32* %v4_10002ca0, i32 5, i32 1)
  %v0_10002cb0 = load i32, i32* @r28, align 4
  %v1_10002cb4 = urem i32 %v5_10002ca0, 256
  store i32 %v1_10002cb4, i32* @r31, align 4
  %v0_10002cb8 = load i32, i32* @r29, align 4
  store i32 %v0_10002cb8, i32* %r3.global-to-local, align 4
  store i32 268446912, i32* @lr, align 4
  %v4_10002cbc = inttoptr i32 %v0_10002cb0 to i32*
  %v5_10002cbc = call i32 @function_100006a8(i32 %v0_10002cb8, i32* %v4_10002cbc, i32 6, i32 65535)
  %v0_10002cc4 = load i32, i32* @r28, align 4
  store i32 %v5_10002cbc, i32* %r22.global-to-local, align 4
  %v0_10002cd4 = load i32, i32* @r29, align 4
  store i32 %v0_10002cd4, i32* %r3.global-to-local, align 4
  store i32 268446940, i32* @lr, align 4
  %v4_10002cd8 = inttoptr i32 %v0_10002cc4 to i32*
  %v5_10002cd8 = call i32 @function_100006a8(i32 %v0_10002cd4, i32* %v4_10002cd8, i32 7, i32 65535)
  %v0_10002ce0 = load i32, i32* @r28, align 4
  store i32 %v5_10002cd8, i32* %r23.global-to-local, align 4
  %v0_10002cf0 = load i32, i32* @r29, align 4
  store i32 %v0_10002cf0, i32* %r3.global-to-local, align 4
  store i32 268446968, i32* @lr, align 4
  %v4_10002cf4 = inttoptr i32 %v0_10002ce0 to i32*
  %v5_10002cf4 = call i32 @function_100006a8(i32 %v0_10002cf0, i32* %v4_10002cf4, i32 17, i32 65535)
  %v0_10002cf8 = load i32, i32* @r28, align 4
  store i32 %v5_10002cf4, i32* %r19.global-to-local, align 4
  %v0_10002d08 = load i32, i32* @r29, align 4
  store i32 %v0_10002d08, i32* %r3.global-to-local, align 4
  store i32 268446992, i32* @lr, align 4
  %v4_10002d0c = inttoptr i32 %v0_10002cf8 to i32*
  %v5_10002d0c = call i32 @function_100006a8(i32 %v0_10002d08, i32* %v4_10002d0c, i32 18, i32 0)
  %v0_10002d10 = load i32, i32* @r28, align 4
  store i32 %v5_10002d0c, i32* %r20.global-to-local, align 4
  %v0_10002d20 = load i32, i32* @r29, align 4
  store i32 %v0_10002d20, i32* %r3.global-to-local, align 4
  store i32 268447016, i32* @lr, align 4
  %v4_10002d24 = inttoptr i32 %v0_10002d10 to i32*
  %v5_10002d24 = call i32 @function_100006a8(i32 %v0_10002d20, i32* %v4_10002d24, i32 11, i32 0)
  %v0_10002d28 = load i32, i32* @r28, align 4
  store i32 %v5_10002d24, i32* %r14.global-to-local, align 4
  %v0_10002d38 = load i32, i32* @r29, align 4
  store i32 %v0_10002d38, i32* %r3.global-to-local, align 4
  store i32 268447040, i32* @lr, align 4
  %v4_10002d3c = inttoptr i32 %v0_10002d28 to i32*
  %v5_10002d3c = call i32 @function_100006a8(i32 %v0_10002d38, i32* %v4_10002d3c, i32 12, i32 0)
  %v0_10002d40 = load i32, i32* @r28, align 4
  store i32 %v5_10002d3c, i32* %r17.global-to-local, align 4
  %v0_10002d50 = load i32, i32* @r29, align 4
  store i32 %v0_10002d50, i32* %r3.global-to-local, align 4
  store i32 268447064, i32* @lr, align 4
  %v4_10002d54 = inttoptr i32 %v0_10002d40 to i32*
  %v5_10002d54 = call i32 @function_100006a8(i32 %v0_10002d50, i32* %v4_10002d54, i32 13, i32 0)
  %v0_10002d58 = load i32, i32* @r28, align 4
  store i32 %v5_10002d54, i32* %r18.global-to-local, align 4
  %v0_10002d68 = load i32, i32* @r29, align 4
  store i32 %v0_10002d68, i32* %r3.global-to-local, align 4
  store i32 268447088, i32* @lr, align 4
  %v4_10002d6c = inttoptr i32 %v0_10002d58 to i32*
  %v5_10002d6c = call i32 @function_100006a8(i32 %v0_10002d68, i32* %v4_10002d6c, i32 14, i32 0)
  %v0_10002d70 = load i32, i32* @r28, align 4
  %v0_10002d80 = load i32, i32* @r29, align 4
  store i32 %v0_10002d80, i32* %r3.global-to-local, align 4
  store i32 268447112, i32* @lr, align 4
  %v4_10002d84 = inttoptr i32 %v0_10002d70 to i32*
  %v5_10002d84 = call i32 @function_100006a8(i32 %v0_10002d80, i32* %v4_10002d84, i32 15, i32 1)
  %v0_10002d88 = load i32, i32* @r28, align 4
  store i32 %v5_10002d84, i32* %r16.global-to-local, align 4
  %v0_10002d98 = load i32, i32* @r29, align 4
  store i32 %v0_10002d98, i32* %r3.global-to-local, align 4
  store i32 268447136, i32* @lr, align 4
  %v4_10002d9c = inttoptr i32 %v0_10002d88 to i32*
  %v5_10002d9c = call i32 @function_100006a8(i32 %v0_10002d98, i32* %v4_10002d9c, i32 16, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10002da4 = load i32, i32* @global_var_1001c258.14, align 4
  %v0_10002da8 = load i32, i32* @r28, align 4
  store i32 %v5_10002d9c, i32* %r30.global-to-local, align 4
  %v0_10002db4 = load i32, i32* @r29, align 4
  store i32 %v0_10002db4, i32* %r3.global-to-local, align 4
  store i32 268447164, i32* @lr, align 4
  %v5_10002db8 = inttoptr i32 %v0_10002da8 to i32*
  %v6_10002db8 = call i32 @function_10000628(i32 %v0_10002db4, i32* %v5_10002db8, i32 25, i32 %v3_10002da4, i32 268566528)
  store i32 %v6_10002db8, i32* %r15.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268447184, i32* @lr, align 4
  %v3_10002dcc = call i32 @function_10009e1c(i32 2, i32 3, i32 6)
  store i32 %v3_10002dcc, i32* %r3.global-to-local, align 4
  %v3_10002dd0 = icmp eq i32 %v3_10002dcc, -1
  store i32 %v3_10002dcc, i32* %r26.global-to-local, align 4
  br i1 %v3_10002dd0, label %dec_label_pc_10003108, label %dec_label_pc_10002ddc

dec_label_pc_10002ddc:                            ; preds = %dec_label_pc_10002bc4
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10002de8 = ptrtoint i32* %stack_var_-120 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-120, align 4
  store i32 268447224, i32* @lr, align 4
  %v4_10002df4 = call i32 @function_10009de0(i32 0, i32 3, i32 %v2_10002de8, i32 4)
  store i32 %v4_10002df4, i32* %r3.global-to-local, align 4
  %v3_10002df8 = icmp eq i32 %v4_10002df4, -1
  br i1 %v3_10002df8, label %dec_label_pc_10003100, label %dec_label_pc_10002e00

dec_label_pc_10002e00:                            ; preds = %dec_label_pc_10002ddc
  %v0_10002e00 = load i32, i32* %r24.global-to-local, align 4
  %v1_10002e00 = icmp slt i32 %v0_10002e00, 0
  %v3_10002e00 = icmp eq i32 %v0_10002e00, 0
  store i1 %v1_10002e00, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10002e00, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-120, align 4
  %v0_10002e0c = load i32, i32* %r21.global-to-local, align 4
  %v1_10002e0c = urem i32 %v0_10002e0c, 65536
  store i32 %v1_10002e0c, i32* %r21.global-to-local, align 4
  %v0_10002e10 = load i32, i32* %r22.global-to-local, align 4
  %v1_10002e10 = urem i32 %v0_10002e10, 65536
  store i32 %v1_10002e10, i32* %r22.global-to-local, align 4
  %v0_10002e14 = load i32, i32* %r23.global-to-local, align 4
  %v1_10002e14 = urem i32 %v0_10002e14, 65536
  store i32 %v1_10002e14, i32* %r23.global-to-local, align 4
  %v0_10002e18 = load i32, i32* %r14.global-to-local, align 4
  %v1_10002e18 = urem i32 %v0_10002e18, 256
  store i32 %v1_10002e18, i32* %r14.global-to-local, align 4
  %tmp40 = icmp slt i32 %v0_10002e00, 1
  br i1 %tmp40, label %dec_label_pc_10002f7c, label %dec_label_pc_10002e20

dec_label_pc_10002e20:                            ; preds = %dec_label_pc_10002e00
  store i32 %v5_10002d6c, i32* %r0.global-to-local, align 4
  %v0_10002e24 = load i32, i32* @r31, align 4
  %v3_10002e24 = icmp eq i32 %v0_10002e24, 0
  store i1 %v3_10002e24, i1* %cr3_eq.global-to-local, align 1
  %v0_10002e28 = load i32, i32* %r16.global-to-local, align 4
  %v1_10002e28 = urem i32 %v0_10002e28, 2
  store i32 %v1_10002e28, i32* %r29.global-to-local, align 4
  %v0_10002e2c = load i32, i32* %r17.global-to-local, align 4
  %v1_10002e2c = urem i32 %v0_10002e2c, 2
  store i32 %v1_10002e2c, i32* %r17.global-to-local, align 4
  %v0_10002e30 = load i32, i32* %r18.global-to-local, align 4
  %v1_10002e30 = urem i32 %v0_10002e30, 2
  store i32 %v1_10002e30, i32* %r18.global-to-local, align 4
  %v1_10002e34 = urem i32 %v5_10002d6c, 2
  store i32 %v1_10002e34, i32* %r28.global-to-local, align 4
  %v0_10002e38 = load i32, i32* %r30.global-to-local, align 4
  %v1_10002e38 = urem i32 %v0_10002e38, 2
  store i32 %v1_10002e38, i32* %r30.global-to-local, align 4
  %v1_10002e3c = urem i32 %v0_10002e18, 2
  store i32 %v1_10002e3c, i32* %r16.global-to-local, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v4_10002e8c = sext i8 %v5_10002c5c to i32
  %v4_10002e94 = sext i8 %v5_10002c94 to i32
  br label %dec_label_pc_10002e44

dec_label_pc_10002e44:                            ; preds = %dec_label_pc_10002ea8, %dec_label_pc_10002e20
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 268447312, i32* @lr, align 4
  %v2_10002e4c = call i32 @function_1000a178(i32 128, i32 1)
  store i32 %v2_10002e4c, i32* %r3.global-to-local, align 4
  %v3_10002e50 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10002e50, i32* %r9.global-to-local, align 4
  %v0_10002e54 = load i32, i32* @r31, align 4
  %v1_10002e54 = mul i32 %v0_10002e54, 4
  store i32 %v1_10002e54, i32* %r0.global-to-local, align 4
  %v1_10002e58 = load i32, i32* %r25.global-to-local, align 4
  %v3_10002e58 = add i32 %v1_10002e58, %v1_10002e54
  %v4_10002e58 = inttoptr i32 %v3_10002e58 to i32*
  store i32 %v2_10002e4c, i32* %v4_10002e58, align 4
  %v0_10002e5c = load i32, i32* %r9.global-to-local, align 4
  %v1_10002e5c = mul i32 %v0_10002e5c, 4
  store i32 %v1_10002e5c, i32* %r9.global-to-local, align 4
  %v1_10002e60 = load i32, i32* %r25.global-to-local, align 4
  %v2_10002e60 = add i32 %v1_10002e60, %v1_10002e5c
  %v3_10002e60 = inttoptr i32 %v2_10002e60 to i32*
  %v4_10002e60 = load i32, i32* %v3_10002e60, align 4
  store i32 %v4_10002e60, i32* %r31.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10002e68 = inttoptr i32 %v4_10002e60 to i32*
  %v2_10002e68 = load i32, i32* %v1_10002e68, align 4
  store i32 %v2_10002e68, i32* %r0.global-to-local, align 4
  %v1_10002e6c = add i32 %v4_10002e60, 20
  store i32 %v1_10002e6c, i32* %r11.global-to-local, align 4
  %v0_10002e70 = load i32, i32* %r21.global-to-local, align 4
  %v1_10002e70 = trunc i32 %v0_10002e70 to i16
  %v3_10002e70 = add i32 %v4_10002e60, 4
  %v4_10002e70 = inttoptr i32 %v3_10002e70 to i16*
  store i16 %v1_10002e70, i16* %v4_10002e70, align 2
  %v1_10002e74 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10002e74, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10002e7c = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 60, i32* %r9.global-to-local, align 4
  %v1_10002e84 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002e84 = inttoptr i32 %v1_10002e84 to i32*
  store i32 %v1_10002e7c, i32* %v2_10002e84, align 4
  %v0_10002e88 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002e88 = trunc i32 %v0_10002e88 to i16
  %v2_10002e88 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002e88 = add i32 %v2_10002e88, 2
  %v4_10002e88 = inttoptr i32 %v3_10002e88 to i16*
  store i16 %v1_10002e88, i16* %v4_10002e88, align 2
  store i32 %v4_10002e8c, i32* %r0.global-to-local, align 4
  %v2_10002e90 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002e90 = add i32 %v2_10002e90, 1
  %v4_10002e90 = inttoptr i32 %v3_10002e90 to i8*
  store i8 %v5_10002c5c, i8* %v4_10002e90, align 1
  store i32 %v4_10002e94, i32* %r9.global-to-local, align 4
  %v2_10002e98 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002e98 = add i32 %v2_10002e98, 8
  %v4_10002e98 = inttoptr i32 %v3_10002e98 to i8*
  store i8 %v5_10002c94, i8* %v4_10002e98, align 1
  %v0_10002e9c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002e9c, label %dec_label_pc_10002ea8, label %dec_label_pc_10002ea0

dec_label_pc_10002ea0:                            ; preds = %dec_label_pc_10002e44
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10002ea4 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002ea4 = add i32 %v2_10002ea4, 6
  %v4_10002ea4 = inttoptr i32 %v3_10002ea4 to i16*
  store i16 16384, i16* %v4_10002ea4, align 2
  br label %dec_label_pc_10002ea8

dec_label_pc_10002ea8:                            ; preds = %dec_label_pc_10002e44, %dec_label_pc_10002ea0
  store i32 6, i32* %r0.global-to-local, align 4
  %v0_10002eac = load i32, i32* %r15.global-to-local, align 4
  %v1_10002eac = load i32, i32* %r31.global-to-local, align 4
  %v2_10002eac = add i32 %v1_10002eac, 12
  %v3_10002eac = inttoptr i32 %v2_10002eac to i32*
  store i32 %v0_10002eac, i32* %v3_10002eac, align 4
  %v0_10002eb0 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002eb0 = trunc i32 %v0_10002eb0 to i8
  %v2_10002eb0 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002eb0 = add i32 %v2_10002eb0, 9
  %v4_10002eb0 = inttoptr i32 %v3_10002eb0 to i8*
  store i8 %v1_10002eb0, i8* %v4_10002eb0, align 1
  %v0_10002eb4 = load i32, i32* %r22.global-to-local, align 4
  %v1_10002eb4 = trunc i32 %v0_10002eb4 to i16
  %v2_10002eb4 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002eb4 = add i32 %v2_10002eb4, 20
  %v4_10002eb4 = inttoptr i32 %v3_10002eb4 to i16*
  store i16 %v1_10002eb4, i16* %v4_10002eb4, align 2
  %v3_10002eb8 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10002eb8, i32* %r9.global-to-local, align 4
  %v0_10002ebc = load i32, i32* %r23.global-to-local, align 4
  %v1_10002ebc = trunc i32 %v0_10002ebc to i16
  %v2_10002ebc = load i32, i32* %r11.global-to-local, align 4
  %v3_10002ebc = add i32 %v2_10002ebc, 2
  %v4_10002ebc = inttoptr i32 %v3_10002ebc to i16*
  store i16 %v1_10002ebc, i16* %v4_10002ebc, align 2
  %v0_10002ec0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002ec0 = mul i32 %v0_10002ec0, 24
  %v1_10002ec4 = load i32, i32* %r27.global-to-local, align 4
  %v2_10002ec4 = add i32 %v1_10002ec4, %v1_10002ec0
  store i32 %v2_10002ec4, i32* %r9.global-to-local, align 4
  %v1_10002ec8 = add i32 %v2_10002ec4, 16
  %v2_10002ec8 = inttoptr i32 %v1_10002ec8 to i32*
  %v3_10002ec8 = load i32, i32* %v2_10002ec8, align 4
  store i32 %v3_10002ec8, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r9.global-to-local, align 4
  %v1_10002ed0 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002ed0 = add i32 %v1_10002ed0, 16
  %v3_10002ed0 = inttoptr i32 %v2_10002ed0 to i32*
  store i32 %v3_10002ec8, i32* %v3_10002ed0, align 4
  %v0_10002ed4 = load i32, i32* %r19.global-to-local, align 4
  %v1_10002ed4 = load i32, i32* %r11.global-to-local, align 4
  %v2_10002ed4 = add i32 %v1_10002ed4, 4
  %v3_10002ed4 = inttoptr i32 %v2_10002ed4 to i32*
  store i32 %v0_10002ed4, i32* %v3_10002ed4, align 4
  %v0_10002ed8 = load i32, i32* %r11.global-to-local, align 4
  %v1_10002ed8 = add i32 %v0_10002ed8, 12
  %v2_10002ed8 = inttoptr i32 %v1_10002ed8 to i32*
  %v3_10002ed8 = load i32, i32* %v2_10002ed8, align 4
  store i32 %v3_10002ed8, i32* %r0.global-to-local, align 4
  %v1_10002edc = call i32 @__asm_rlwimi(i32 10, i32 28, i32 0, i32 3)
  store i32 %v1_10002edc, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10002ee4 = call i32 @__asm_rlwimi(i32 %v1_10002e3c, i32 21, i32 10, i32 10)
  store i32 %v1_10002ee4, i32* %r0.global-to-local, align 4
  %v1_10002ee8 = call i32 @__asm_rlwimi(i32 %v1_10002e2c, i32 20, i32 11, i32 11)
  store i32 %v1_10002ee8, i32* %r0.global-to-local, align 4
  %v1_10002eec = call i32 @__asm_rlwimi(i32 %v1_10002e30, i32 19, i32 12, i32 12)
  store i32 %v1_10002eec, i32* %r0.global-to-local, align 4
  %v1_10002ef0 = call i32 @__asm_rlwimi(i32 %v1_10002e34, i32 18, i32 13, i32 13)
  store i32 %v1_10002ef0, i32* %r0.global-to-local, align 4
  %v1_10002ef4 = call i32 @__asm_rlwimi(i32 %v1_10002e28, i32 17, i32 14, i32 14)
  store i32 %v1_10002ef4, i32* %r0.global-to-local, align 4
  %v1_10002ef8 = call i32 @__asm_rlwimi(i32 %v1_10002e38, i32 16, i32 15, i32 15)
  %v1_10002efc = load i32, i32* %r11.global-to-local, align 4
  %v2_10002efc = add i32 %v1_10002efc, 12
  %v3_10002efc = inttoptr i32 %v2_10002efc to i32*
  store i32 %v1_10002ef8, i32* %v3_10002efc, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_10002f04 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f04 = add i32 %v2_10002f04, 40
  %v4_10002f04 = inttoptr i32 %v3_10002f04 to i8*
  store i8 2, i8* %v4_10002f04, align 1
  %v0_10002f08 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002f08 = trunc i32 %v0_10002f08 to i8
  %v2_10002f08 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f08 = add i32 %v2_10002f08, 41
  %v4_10002f08 = inttoptr i32 %v3_10002f08 to i8*
  store i8 %v1_10002f08, i8* %v4_10002f08, align 1
  %v0_10002f0c = call i32 @function_10005f3c()
  %v2_10002f14 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f14 = add i32 %v2_10002f14, 46
  %v4_10002f14 = inttoptr i32 %v3_10002f14 to i8*
  store i8 8, i8* %v4_10002f14, align 1
  %v1_10002f18 = urem i32 %v0_10002f0c, 16
  store i32 %v1_10002f18, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v2_10002f24 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f24 = add i32 %v2_10002f24, 44
  %v4_10002f24 = inttoptr i32 %v3_10002f24 to i8*
  store i8 4, i8* %v4_10002f24, align 1
  %v0_10002f28 = load i32, i32* %r3.global-to-local, align 4
  %v1_10002f28 = add i32 %v0_10002f28, 1400
  store i32 %v1_10002f28, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_10002f30 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002f30 = trunc i32 %v0_10002f30 to i8
  %v2_10002f30 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f30 = add i32 %v2_10002f30, 45
  %v4_10002f30 = inttoptr i32 %v3_10002f30 to i8*
  store i8 %v1_10002f30, i8* %v4_10002f30, align 1
  %v0_10002f34 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002f34 = trunc i32 %v0_10002f34 to i8
  %v2_10002f34 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f34 = add i32 %v2_10002f34, 47
  %v4_10002f34 = inttoptr i32 %v3_10002f34 to i8*
  store i8 %v1_10002f34, i8* %v4_10002f34, align 1
  %v0_10002f38 = load i32, i32* %r3.global-to-local, align 4
  %v1_10002f38 = trunc i32 %v0_10002f38 to i16
  %v2_10002f38 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f38 = add i32 %v2_10002f38, 42
  %v4_10002f38 = inttoptr i32 %v3_10002f38 to i16*
  store i16 %v1_10002f38, i16* %v4_10002f38, align 2
  %v0_10002f3c = call i32 @function_10005f3c()
  store i32 %v0_10002f3c, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  %v1_10002f48 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002f48 = add i32 %v1_10002f48, 52
  %v3_10002f48 = inttoptr i32 %v2_10002f48 to i32*
  store i32 0, i32* %v3_10002f48, align 4
  %v0_10002f4c = load i32, i32* %r9.global-to-local, align 4
  %v1_10002f4c = trunc i32 %v0_10002f4c to i8
  %v2_10002f4c = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f4c = add i32 %v2_10002f4c, 56
  %v4_10002f4c = inttoptr i32 %v3_10002f4c to i8*
  store i8 %v1_10002f4c, i8* %v4_10002f4c, align 1
  store i32 6, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r9.global-to-local, align 4
  %v1_10002f58 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002f58 = add i32 %v1_10002f58, 48
  %v3_10002f58 = inttoptr i32 %v2_10002f58 to i32*
  store i32 %v0_10002f3c, i32* %v3_10002f58, align 4
  %v0_10002f5c = load i32, i32* %r0.global-to-local, align 4
  %v1_10002f5c = trunc i32 %v0_10002f5c to i8
  %v2_10002f5c = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f5c = add i32 %v2_10002f5c, 59
  %v4_10002f5c = inttoptr i32 %v3_10002f5c to i8*
  store i8 %v1_10002f5c, i8* %v4_10002f5c, align 1
  %v0_10002f60 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002f60 = trunc i32 %v0_10002f60 to i8
  %v2_10002f60 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f60 = add i32 %v2_10002f60, 57
  %v4_10002f60 = inttoptr i32 %v3_10002f60 to i8*
  store i8 %v1_10002f60, i8* %v4_10002f60, align 1
  %v0_10002f64 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002f64 = trunc i32 %v0_10002f64 to i8
  %v2_10002f64 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f64 = add i32 %v2_10002f64, 58
  %v4_10002f64 = inttoptr i32 %v3_10002f64 to i8*
  store i8 %v1_10002f64, i8* %v4_10002f64, align 1
  %v3_10002f68 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10002f68, i32* %r9.global-to-local, align 4
  %v1_10002f6c = add i32 %v3_10002f68, 1
  store i32 %v1_10002f6c, i32* %r31.global-to-local, align 4
  %v1_10002f70 = load i32, i32* %r24.global-to-local, align 4
  %v2_10002f70 = icmp slt i32 %v1_10002f6c, %v1_10002f70
  store i32 %v1_10002f6c, i32* %stack_var_-120, align 4
  br i1 %v2_10002f70, label %dec_label_pc_10002e44, label %dec_label_pc_10002f7c.loopexit

dec_label_pc_10002f7c.loopexit:                   ; preds = %dec_label_pc_10002ea8
  %v0_10002f80.pre = load i32, i32* %r14.global-to-local, align 4
  %v0_10002f84.pre.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10002f84.pre.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10002f7c

dec_label_pc_10002f7c:                            ; preds = %dec_label_pc_10002f7c.loopexit, %dec_label_pc_10002e00
  %v1_10002f84.pre = phi i1 [ %v1_10002f84.pre.pre, %dec_label_pc_10002f7c.loopexit ], [ %v1_10002e00, %dec_label_pc_10002e00 ]
  %v0_10002f84.pre = phi i1 [ %v0_10002f84.pre.pre, %dec_label_pc_10002f7c.loopexit ], [ %v3_10002e00, %dec_label_pc_10002e00 ]
  %v0_10002f80 = phi i32 [ %v0_10002f80.pre, %dec_label_pc_10002f7c.loopexit ], [ %v1_10002e18, %dec_label_pc_10002e00 ]
  %v0_10002f7c = load i32, i32* %r15.global-to-local, align 4
  %v3_10002f7c = icmp eq i32 %v0_10002f7c, -1
  store i1 %v3_10002f7c, i1* %cr2_eq.global-to-local, align 1
  %v3_10002f80 = icmp eq i32 %v0_10002f80, 0
  store i1 %v3_10002f80, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_10002f84.outer

dec_label_pc_10002f84.outer:                      ; preds = %dec_label_pc_10003060, %dec_label_pc_10002f7c
  %v1_10002f84.ph = phi i1 [ %v1_10002f84.pre, %dec_label_pc_10002f7c ], [ %v1_10003060, %dec_label_pc_10003060 ]
  %v0_10002f84.ph = phi i1 [ %v0_10002f84.pre, %dec_label_pc_10002f7c ], [ %v0_10003060, %dec_label_pc_10003060 ]
  %v2_10002f84 = or i1 %v1_10002f84.ph, %v0_10002f84.ph
  br label %dec_label_pc_10002f84

dec_label_pc_10002f84:                            ; preds = %dec_label_pc_10002f84.outer, %dec_label_pc_10002f84
  br i1 %v2_10002f84, label %dec_label_pc_10002f84, label %dec_label_pc_10002f88

dec_label_pc_10002f88:                            ; preds = %dec_label_pc_10002f84, %dec_label_pc_10003060
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-120, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10002f98

dec_label_pc_10002f98:                            ; preds = %dec_label_pc_10002ff0, %dec_label_pc_10002f88
  %v0_10002f98 = phi i32 [ %v1_10003050, %dec_label_pc_10002ff0 ], [ 0, %dec_label_pc_10002f88 ]
  %v1_10002f98 = mul i32 %v0_10002f98, 24
  store i32 %v1_10002f98, i32* %r0.global-to-local, align 4
  %v1_10002f9c = mul i32 %v0_10002f98, 4
  store i32 %v1_10002f9c, i32* %r11.global-to-local, align 4
  %v1_10002fa0 = load i32, i32* %r25.global-to-local, align 4
  %v2_10002fa0 = add i32 %v1_10002fa0, %v1_10002f9c
  %v3_10002fa0 = inttoptr i32 %v2_10002fa0 to i32*
  %v4_10002fa0 = load i32, i32* %v3_10002fa0, align 4
  store i32 %v4_10002fa0, i32* %r28.global-to-local, align 4
  %v1_10002fa4 = load i32, i32* %r27.global-to-local, align 4
  %v2_10002fa4 = add i32 %v1_10002fa4, %v1_10002f98
  %v1_10002fa8 = add i32 %v2_10002fa4, 20
  %v2_10002fa8 = inttoptr i32 %v1_10002fa8 to i8*
  %v3_10002fa8 = load i8, i8* %v2_10002fa8, align 1
  %v4_10002fa8 = zext i8 %v3_10002fa8 to i32
  store i32 %v4_10002fa8, i32* %r9.global-to-local, align 4
  %v1_10002fac = add i32 %v4_10002fa0, 20
  store i32 %v1_10002fac, i32* @r31, align 4
  %tmp41 = icmp ult i8 %v3_10002fa8, 32
  br i1 %tmp41, label %dec_label_pc_10003068, label %dec_label_pc_10002fb8

dec_label_pc_10002fb8:                            ; preds = %dec_label_pc_10002f98
  %v0_10002fb8 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002fb8, label %dec_label_pc_10003090, label %dec_label_pc_10002fbc

dec_label_pc_10002fbc:                            ; preds = %dec_label_pc_10003068, %dec_label_pc_10002fb8
  store i32 65535, i32* %r29.global-to-local, align 4
  %v0_10002fc4 = load i32, i32* %r21.global-to-local, align 4
  %v4_10002fc4 = icmp eq i32 %v0_10002fc4, 65535
  br i1 %v4_10002fc4, label %dec_label_pc_100030a8, label %dec_label_pc_10002fcc

dec_label_pc_10002fcc:                            ; preds = %dec_label_pc_10003090, %dec_label_pc_10002fbc
  %v1_10002fcc = phi i32 [ %v1_100030a0, %dec_label_pc_10003090 ], [ 65535, %dec_label_pc_10002fbc ]
  %v0_10002fcc = load i32, i32* %r22.global-to-local, align 4
  %v4_10002fcc = icmp eq i32 %v0_10002fcc, %v1_10002fcc
  br i1 %v4_10002fcc, label %dec_label_pc_100030b8, label %dec_label_pc_10002fd4

dec_label_pc_10002fd4:                            ; preds = %dec_label_pc_100030a8.dec_label_pc_10002fd4_crit_edge, %dec_label_pc_10002fcc
  %v1_10002fd4 = phi i32 [ %v1_10002fd4.pre, %dec_label_pc_100030a8.dec_label_pc_10002fd4_crit_edge ], [ %v1_10002fcc, %dec_label_pc_10002fcc ]
  %v0_10002fd4 = load i32, i32* %r23.global-to-local, align 4
  %v4_10002fd4 = icmp eq i32 %v0_10002fd4, %v1_10002fd4
  br i1 %v4_10002fd4, label %dec_label_pc_100030c8, label %dec_label_pc_10002fdc

dec_label_pc_10002fdc:                            ; preds = %dec_label_pc_100030b8.dec_label_pc_10002fdc_crit_edge, %dec_label_pc_10002fd4
  %v1_10002fdc = phi i32 [ %v1_10002fdc.pre, %dec_label_pc_100030b8.dec_label_pc_10002fdc_crit_edge ], [ %v1_10002fd4, %dec_label_pc_10002fd4 ]
  %v0_10002fdc = load i32, i32* %r19.global-to-local, align 4
  %v4_10002fdc = icmp eq i32 %v0_10002fdc, %v1_10002fdc
  br i1 %v4_10002fdc, label %dec_label_pc_100030d8, label %dec_label_pc_10002fe4

dec_label_pc_10002fe4:                            ; preds = %dec_label_pc_100030c8.dec_label_pc_10002fe4_crit_edge, %dec_label_pc_10002fdc
  %v1_10002fe4 = phi i32 [ %v1_10002fe4.pre, %dec_label_pc_100030c8.dec_label_pc_10002fe4_crit_edge ], [ %v1_10002fdc, %dec_label_pc_10002fdc ]
  %v0_10002fe4 = load i32, i32* %r20.global-to-local, align 4
  %v4_10002fe4 = icmp eq i32 %v0_10002fe4, %v1_10002fe4
  br i1 %v4_10002fe4, label %dec_label_pc_100030e8, label %dec_label_pc_10002fec

dec_label_pc_10002fec:                            ; preds = %dec_label_pc_100030d8, %dec_label_pc_10002fe4
  %v0_10002fec = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002fec, label %dec_label_pc_10002ff0, label %dec_label_pc_100030f4

dec_label_pc_10002ff0:                            ; preds = %dec_label_pc_10002fec, %dec_label_pc_100030e8, %dec_label_pc_100030f4
  %v0_10002ff0 = load i32, i32* %r30.global-to-local, align 4
  %v1_10002ff0 = trunc i32 %v0_10002ff0 to i16
  %v2_10002ff0 = load i32, i32* %r28.global-to-local, align 4
  %v3_10002ff0 = add i32 %v2_10002ff0, 10
  %v4_10002ff0 = inttoptr i32 %v3_10002ff0 to i16*
  store i16 %v1_10002ff0, i16* %v4_10002ff0, align 2
  %v0_10002ff8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002ff8, i32* @r3, align 4
  %v2_10002ffc = call i32 @function_100043cc(i32 %v0_10002ff8, i32 20)
  %v3_10002ffc = trunc i32 %v2_10002ffc to i16
  %v0_10003000 = load i32, i32* @r31, align 4
  store i32 %v0_10003000, i32* @r4, align 4
  %v4_10003004 = add i32 %v0_10002ff8, 10
  %v5_10003004 = inttoptr i32 %v4_10003004 to i16*
  store i16 %v3_10002ffc, i16* %v5_10003004, align 2
  %v0_1000300c = load i32, i32* %r30.global-to-local, align 4
  %v1_1000300c = trunc i32 %v0_1000300c to i16
  %v2_1000300c = load i32, i32* @r31, align 4
  %v3_1000300c = add i32 %v2_1000300c, 16
  %v4_1000300c = inttoptr i32 %v3_1000300c to i16*
  store i16 %v1_1000300c, i16* %v4_1000300c, align 2
  %v0_10003014 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003014, i32* %r3.global-to-local, align 4
  %v4_10003018 = call i32 @function_10004430(i32 %v0_10003014, i32 %v0_10003000, i32 40, i32 40)
  %v5_10003018 = trunc i32 %v4_10003018 to i16
  store i32 %v4_10003018, i32* %r3.global-to-local, align 4
  %v3_1000301c = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_1000301c, i32* %r7.global-to-local, align 4
  %v0_10003020 = load i32, i32* @r31, align 4
  %v1_10003020 = add i32 %v0_10003020, 2
  %v2_10003020 = inttoptr i32 %v1_10003020 to i16*
  %v3_10003020 = load i16, i16* %v2_10003020, align 2
  %v4_10003020 = zext i16 %v3_10003020 to i32
  store i32 %v4_10003020, i32* %r0.global-to-local, align 4
  %v0_10003024 = load i32, i32* %r28.global-to-local, align 4
  %v1_10003028 = mul i32 %v3_1000301c, 24
  store i32 %v1_10003028, i32* %r7.global-to-local, align 4
  %v4_1000302c = add i32 %v0_10003020, 16
  %v5_1000302c = inttoptr i32 %v4_1000302c to i16*
  store i16 %v5_10003018, i16* %v5_1000302c, align 2
  %v0_10003034 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10003034, i32* %r3.global-to-local, align 4
  %v0_10003038 = load i32, i32* %r7.global-to-local, align 4
  %v1_10003038 = load i32, i32* %r27.global-to-local, align 4
  %v2_10003038 = add i32 %v1_10003038, %v0_10003038
  store i32 %v2_10003038, i32* %r7.global-to-local, align 4
  %v0_10003040 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003040 = trunc i32 %v0_10003040 to i16
  %v3_10003040 = add i32 %v2_10003038, 2
  %v4_10003040 = inttoptr i32 %v3_10003040 to i16*
  store i16 %v1_10003040, i16* %v4_10003040, align 2
  store i32 268447820, i32* @lr, align 4
  %v6_10003048 = call i32 @function_10009da0(i32 %v0_10003034, i32 %v0_10003024, i32 60, i32 16384, i32 %v2_10003038, i32 16)
  store i32 %v6_10003048, i32* %r3.global-to-local, align 4
  %v3_1000304c = load i32, i32* %stack_var_-120, align 4
  %v1_10003050 = add i32 %v3_1000304c, 1
  store i32 %v1_10003050, i32* %r9.global-to-local, align 4
  %v1_10003054 = load i32, i32* %r24.global-to-local, align 4
  %v2_10003054 = icmp slt i32 %v1_10003050, %v1_10003054
  store i32 %v1_10003050, i32* %stack_var_-120, align 4
  br i1 %v2_10003054, label %dec_label_pc_10002f98, label %dec_label_pc_10003060

dec_label_pc_10003060:                            ; preds = %dec_label_pc_10002ff0
  %v0_10003060 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10003060 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10003060 = or i1 %v0_10003060, %v1_10003060
  br i1 %v2_10003060, label %dec_label_pc_10002f84.outer, label %dec_label_pc_10002f88

dec_label_pc_10003068:                            ; preds = %dec_label_pc_10002f98
  %v1_10003068 = add i32 %v2_10002fa4, 16
  %v2_10003068 = inttoptr i32 %v1_10003068 to i32*
  %v3_10003068 = load i32, i32* %v2_10003068, align 4
  store i32 %v3_10003068, i32* %r29.global-to-local, align 4
  %v0_1000306c = call i32 @function_10005f3c()
  store i32 %v0_1000306c, i32* %r3.global-to-local, align 4
  %v3_10003070 = load i32, i32* %stack_var_-120, align 4
  %v1_10003074 = mul i32 %v3_10003070, 24
  %v1_10003078 = load i32, i32* %r27.global-to-local, align 4
  %v2_10003078 = add i32 %v1_10003078, %v1_10003074
  store i32 %v2_10003078, i32* %r9.global-to-local, align 4
  %v1_1000307c = add i32 %v2_10003078, 20
  %v2_1000307c = inttoptr i32 %v1_1000307c to i8*
  %v3_1000307c = load i8, i8* %v2_1000307c, align 1
  %v4_1000307c = zext i8 %v3_1000307c to i32
  store i32 %v4_1000307c, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_1000307c, 64
  %v2_10003080 = zext i8 %tmp to i32
  %v3_10003080 = lshr i32 %v0_1000306c, %v2_10003080
  store i32 %v3_10003080, i32* %r3.global-to-local, align 4
  %v0_10003084 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003084 = add i32 %v3_10003080, %v0_10003084
  store i32 %v2_10003084, i32* %r29.global-to-local, align 4
  %v1_10003088 = load i32, i32* %r28.global-to-local, align 4
  %v2_10003088 = add i32 %v1_10003088, 16
  %v3_10003088 = inttoptr i32 %v2_10003088 to i32*
  store i32 %v2_10003084, i32* %v3_10003088, align 4
  %v0_1000308c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_1000308c, label %dec_label_pc_10003090, label %dec_label_pc_10002fbc

dec_label_pc_10003090:                            ; preds = %dec_label_pc_10003068, %dec_label_pc_10002fb8
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10003094 = call i32 @function_10005f3c()
  store i32 %v0_10003094, i32* %r3.global-to-local, align 4
  store i32 65535, i32* %r29.global-to-local, align 4
  %v1_1000309c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000309c = add i32 %v1_1000309c, 12
  %v3_1000309c = inttoptr i32 %v2_1000309c to i32*
  store i32 %v0_10003094, i32* %v3_1000309c, align 4
  %v0_100030a0 = load i32, i32* %r21.global-to-local, align 4
  %v1_100030a0 = load i32, i32* %r29.global-to-local, align 4
  %v4_100030a0 = icmp eq i32 %v0_100030a0, %v1_100030a0
  br i1 %v4_100030a0, label %dec_label_pc_100030a8, label %dec_label_pc_10002fcc

dec_label_pc_100030a8:                            ; preds = %dec_label_pc_10003090, %dec_label_pc_10002fbc
  %v0_100030a8 = call i32 @function_10005f3c()
  %v1_100030a8 = trunc i32 %v0_100030a8 to i16
  store i32 %v0_100030a8, i32* %r3.global-to-local, align 4
  %v0_100030ac = load i32, i32* %r22.global-to-local, align 4
  %v1_100030ac = load i32, i32* %r29.global-to-local, align 4
  %v4_100030ac = icmp eq i32 %v0_100030ac, %v1_100030ac
  %v3_100030b0 = load i32, i32* %r28.global-to-local, align 4
  %v4_100030b0 = add i32 %v3_100030b0, 4
  %v5_100030b0 = inttoptr i32 %v4_100030b0 to i16*
  store i16 %v1_100030a8, i16* %v5_100030b0, align 2
  br i1 %v4_100030ac, label %dec_label_pc_100030b8, label %dec_label_pc_100030a8.dec_label_pc_10002fd4_crit_edge

dec_label_pc_100030a8.dec_label_pc_10002fd4_crit_edge: ; preds = %dec_label_pc_100030a8
  %v1_10002fd4.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10002fd4

dec_label_pc_100030b8:                            ; preds = %dec_label_pc_100030a8, %dec_label_pc_10002fcc
  %v0_100030b8 = call i32 @function_10005f3c()
  %v1_100030b8 = trunc i32 %v0_100030b8 to i16
  store i32 %v0_100030b8, i32* %r3.global-to-local, align 4
  %v0_100030bc = load i32, i32* %r23.global-to-local, align 4
  %v1_100030bc = load i32, i32* %r29.global-to-local, align 4
  %v4_100030bc = icmp eq i32 %v0_100030bc, %v1_100030bc
  %v3_100030c0 = load i32, i32* %r28.global-to-local, align 4
  %v4_100030c0 = add i32 %v3_100030c0, 20
  %v5_100030c0 = inttoptr i32 %v4_100030c0 to i16*
  store i16 %v1_100030b8, i16* %v5_100030c0, align 2
  br i1 %v4_100030bc, label %dec_label_pc_100030c8, label %dec_label_pc_100030b8.dec_label_pc_10002fdc_crit_edge

dec_label_pc_100030b8.dec_label_pc_10002fdc_crit_edge: ; preds = %dec_label_pc_100030b8
  %v1_10002fdc.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10002fdc

dec_label_pc_100030c8:                            ; preds = %dec_label_pc_100030b8, %dec_label_pc_10002fd4
  %v0_100030c8 = call i32 @function_10005f3c()
  %v1_100030c8 = trunc i32 %v0_100030c8 to i16
  store i32 %v0_100030c8, i32* %r3.global-to-local, align 4
  %v0_100030cc = load i32, i32* %r19.global-to-local, align 4
  %v1_100030cc = load i32, i32* %r29.global-to-local, align 4
  %v4_100030cc = icmp eq i32 %v0_100030cc, %v1_100030cc
  %v3_100030d0 = load i32, i32* @r31, align 4
  %v4_100030d0 = add i32 %v3_100030d0, 2
  %v5_100030d0 = inttoptr i32 %v4_100030d0 to i16*
  store i16 %v1_100030c8, i16* %v5_100030d0, align 2
  br i1 %v4_100030cc, label %dec_label_pc_100030d8, label %dec_label_pc_100030c8.dec_label_pc_10002fe4_crit_edge

dec_label_pc_100030c8.dec_label_pc_10002fe4_crit_edge: ; preds = %dec_label_pc_100030c8
  %v1_10002fe4.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10002fe4

dec_label_pc_100030d8:                            ; preds = %dec_label_pc_100030c8, %dec_label_pc_10002fdc
  %v0_100030d8 = call i32 @function_10005f3c()
  store i32 %v0_100030d8, i32* %r3.global-to-local, align 4
  %v0_100030dc = load i32, i32* %r20.global-to-local, align 4
  %v1_100030dc = load i32, i32* %r29.global-to-local, align 4
  %v4_100030dc = icmp eq i32 %v0_100030dc, %v1_100030dc
  %v1_100030e0 = load i32, i32* @r31, align 4
  %v2_100030e0 = add i32 %v1_100030e0, 4
  %v3_100030e0 = inttoptr i32 %v2_100030e0 to i32*
  store i32 %v0_100030d8, i32* %v3_100030e0, align 4
  br i1 %v4_100030dc, label %dec_label_pc_100030e8, label %dec_label_pc_10002fec

dec_label_pc_100030e8:                            ; preds = %dec_label_pc_100030d8, %dec_label_pc_10002fe4
  %v0_100030e8 = call i32 @function_10005f3c()
  store i32 %v0_100030e8, i32* %r3.global-to-local, align 4
  %v1_100030ec = load i32, i32* @r31, align 4
  %v2_100030ec = add i32 %v1_100030ec, 8
  %v3_100030ec = inttoptr i32 %v2_100030ec to i32*
  store i32 %v0_100030e8, i32* %v3_100030ec, align 4
  %v0_100030f0 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100030f0, label %dec_label_pc_10002ff0, label %dec_label_pc_100030f4

dec_label_pc_100030f4:                            ; preds = %dec_label_pc_10002fec, %dec_label_pc_100030e8
  %v0_100030f4 = call i32 @function_10005f3c()
  %v1_100030f4 = trunc i32 %v0_100030f4 to i16
  store i32 %v0_100030f4, i32* %r3.global-to-local, align 4
  %v3_100030f8 = load i32, i32* @r31, align 4
  %v4_100030f8 = add i32 %v3_100030f8, 18
  %v5_100030f8 = inttoptr i32 %v4_100030f8 to i16*
  store i16 %v1_100030f4, i16* %v5_100030f8, align 2
  br label %dec_label_pc_10002ff0

dec_label_pc_10003100:                            ; preds = %dec_label_pc_10002ddc
  %v0_10003100 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10003100, i32* %r3.global-to-local, align 4
  store i32 268448008, i32* @lr, align 4
  %v0_10003104 = call i32 @function_100090cc()
  store i32 %v0_10003104, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003108

dec_label_pc_10003108:                            ; preds = %dec_label_pc_10002bc4, %dec_label_pc_10003100
  store i32 %v0_10002bdc, i32* %r0.global-to-local, align 4
  %v1_1000311c = call %0 @__asm_mtcrf(i32 56, i32 %v0_10002bcc)
  store i32 %v0_10002c1c, i32* %r28.global-to-local, align 4
  store i32 %v0_10002c24, i32* %r29.global-to-local, align 4
  store i32 %v0_10002c30, i32* %r31.global-to-local, align 4
  %v0_10003164 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10003164

; uselistorder directives
  uselistorder i32 %v0_100030f4, { 1, 0 }
  uselistorder i32 %v0_100030c8, { 1, 0 }
  uselistorder i32 %v0_100030b8, { 1, 0 }
  uselistorder i32 %v0_100030a8, { 1, 0 }
  uselistorder i32 %v1_100030a0, { 1, 0 }
  uselistorder i1 %v1_10003060, { 1, 0 }
  uselistorder i1 %v0_10003060, { 1, 0 }
  uselistorder i32 %v1_10003050, { 0, 2, 3, 1 }
  uselistorder i32 %v4_10003018, { 1, 0 }
  uselistorder i32 %v1_10002f9c, { 1, 0 }
  uselistorder i32 %v1_10002e5c, { 1, 0 }
  uselistorder i32 %v1_10002e54, { 1, 0 }
  uselistorder i32 %v1_10002e3c, { 1, 0 }
  uselistorder i32 %v1_10002e38, { 1, 0 }
  uselistorder i32 %v1_10002e34, { 1, 0 }
  uselistorder i32 %v1_10002e30, { 1, 0 }
  uselistorder i32 %v1_10002e2c, { 1, 0 }
  uselistorder i32 %v1_10002e28, { 1, 0 }
  uselistorder i32 %v1_10002e18, { 1, 0 }
  uselistorder i8 %v5_10002c94, { 1, 0 }
  uselistorder i8 %v5_10002c5c, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 25, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 1, 0 }
  uselistorder i32* %r29.global-to-local, { 0, 10, 8, 11, 9, 12, 7, 13, 1, 2, 4, 3, 5, 6, 14, 15 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 21, 22, 23, 24, 26, 27, 28, 29, 30 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10003108, { 1, 0 }
  uselistorder label %dec_label_pc_100030f4, { 1, 0 }
  uselistorder label %dec_label_pc_10002ff0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10002f88, { 1, 0 }
  uselistorder label %dec_label_pc_10002f84, { 1, 0 }
  uselistorder label %dec_label_pc_10002ea8, { 1, 0 }
}

define i32 @function_10003168(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10003168:
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v0_10003170 = call i32 @__asm_mfcr()
  store i32 %v0_10003170, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r25.global-to-local, align 4
  %v0_1000319c = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100031a4 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 268448200, i32* @lr, align 4
  %v2_100031c4 = call i32 @function_1000a178(i32 4, i32 4)
  store i32 %v2_100031c4, i32* %r27.global-to-local, align 4
  %v0_100031d0 = load i32, i32* @r30, align 4
  store i32 %v0_100031d0, i32* %r3.global-to-local, align 4
  store i32 268448216, i32* @lr, align 4
  %v2_100031d4 = call i32 @function_1000a178(i32 %v0_100031d0, i32 4)
  %v0_100031dc = load i32, i32* @r28, align 4
  store i32 %v2_100031d4, i32* %r26.global-to-local, align 4
  %v0_100031ec = load i32, i32* @r29, align 4
  store i32 %v0_100031ec, i32* %r3.global-to-local, align 4
  store i32 268448244, i32* @lr, align 4
  %v4_100031f0 = inttoptr i32 %v0_100031dc to i32*
  %v5_100031f0 = call i32 @function_100006a8(i32 %v0_100031ec, i32* %v4_100031f0, i32 7, i32 65535)
  %v0_100031fc = load i32, i32* @r28, align 4
  %v1_10003204 = urem i32 %v5_100031f0, 65536
  store i32 %v1_10003204, i32* %r21.global-to-local, align 4
  %v0_10003208 = load i32, i32* @r29, align 4
  store i32 %v0_10003208, i32* %r3.global-to-local, align 4
  store i32 268448272, i32* @lr, align 4
  %v4_1000320c = inttoptr i32 %v0_100031fc to i32*
  %v5_1000320c = call i32 @function_100006a8(i32 %v0_10003208, i32* %v4_1000320c, i32 6, i32 65535)
  %v0_10003210 = load i32, i32* @r28, align 4
  %v1_10003214 = urem i32 %v5_1000320c, 65536
  store i32 %v1_10003214, i32* %r22.global-to-local, align 4
  %v0_10003220 = load i32, i32* @r29, align 4
  store i32 %v0_10003220, i32* %r3.global-to-local, align 4
  store i32 268448296, i32* @lr, align 4
  %v4_10003224 = inttoptr i32 %v0_10003210 to i32*
  %v5_10003224 = call i32 @function_100006a8(i32 %v0_10003220, i32* %v4_10003224, i32 0, i32 512)
  %v0_10003228 = load i32, i32* @r28, align 4
  %v1_1000322c = urem i32 %v5_10003224, 65536
  store i32 %v1_1000322c, i32* @r31, align 4
  %v0_10003234 = load i32, i32* @r29, align 4
  store i32 %v0_10003234, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10003240.23 to i32), i32* @lr, align 4
  %v4_1000323c = inttoptr i32 %v0_10003228 to i32*
  %v5_1000323c = call i32 @function_100006a8(i32 %v0_10003234, i32* %v4_1000323c, i32 1, i32 1)
  store i32 %v5_1000323c, i32* %r3.global-to-local, align 4
  %v0_1000324c = load i32, i32* %r22.global-to-local, align 4
  %v4_1000324c = icmp eq i32 %v0_1000324c, 65535
  %v1_10003254 = urem i32 %v5_1000323c, 256
  store i32 %v1_10003254, i32* %r23.global-to-local, align 4
  store i32 0, i32* %stack_var_-72, align 4
  br i1 %v4_1000324c, label %dec_label_pc_10003450, label %dec_label_pc_10003268

dec_label_pc_10003268:                            ; preds = %dec_label_pc_10003168, %dec_label_pc_10003450
  %v0_10003268 = load i32, i32* @r30, align 4
  %v1_10003268 = icmp slt i32 %v0_10003268, 0
  %v3_10003268 = icmp eq i32 %v0_10003268, 0
  store i1 %v1_10003268, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10003268, i1* %cr4_eq.global-to-local, align 1
  %tmp38 = icmp slt i32 %v0_10003268, 1
  br i1 %tmp38, label %dec_label_pc_10003328, label %dec_label_pc_10003270

dec_label_pc_10003270:                            ; preds = %dec_label_pc_10003268
  %v0_10003274 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10003274, i32* @r28, align 4
  store i32 0, i32* %r24.global-to-local, align 4
  %v0_10003280 = load i32, i32* %r21.global-to-local, align 4
  %v4_10003280 = icmp eq i32 %v0_10003280, 65535
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 2, i32* %r20.global-to-local, align 4
  %v2_100033d0 = ptrtoint i32* %stack_var_-72 to i32
  br i1 %v4_10003280, label %dec_label_pc_100033a0, label %dec_label_pc_10003294

dec_label_pc_10003294:                            ; preds = %dec_label_pc_10003270, %dec_label_pc_10003308
  %v0_100032a0 = phi i32 [ %v0_1000331c, %dec_label_pc_10003308 ], [ 0, %dec_label_pc_10003270 ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_100032a0 = add i32 %v0_100032a0, 1
  store i32 %v1_100032a0, i32* %r24.global-to-local, align 4
  store i32 268448424, i32* @lr, align 4
  %v2_100032a4 = call i32 @function_1000a178(i32 65535, i32 1)
  %v0_100032a8 = load i32, i32* %r21.global-to-local, align 4
  %v1_100032a8 = trunc i32 %v0_100032a8 to i16
  %v2_100032a8 = load i32, i32* @r28, align 4
  %v3_100032a8 = add i32 %v2_100032a8, 2
  %v4_100032a8 = inttoptr i32 %v3_100032a8 to i16*
  store i16 %v1_100032a8, i16* %v4_100032a8, align 2
  %v1_100032ac = load i32, i32* %r25.global-to-local, align 4
  %v2_100032ac = load i32, i32* %r27.global-to-local, align 4
  %v3_100032ac = add i32 %v2_100032ac, %v1_100032ac
  %v4_100032ac = inttoptr i32 %v3_100032ac to i32*
  store i32 %v2_100032a4, i32* %v4_100032ac, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268448448, i32* @lr, align 4
  %v3_100032bc = call i32 @function_10009e1c(i32 2, i32 2, i32 17)
  store i32 %v3_100032bc, i32* %r3.global-to-local, align 4
  %v3_100032c4 = icmp eq i32 %v3_100032bc, -1
  %v1_100032cc = load i32, i32* %r25.global-to-local, align 4
  %v2_100032cc = load i32, i32* %r26.global-to-local, align 4
  %v3_100032cc = add i32 %v2_100032cc, %v1_100032cc
  %v4_100032cc = inttoptr i32 %v3_100032cc to i32*
  store i32 %v3_100032bc, i32* %v4_100032cc, align 4
  br i1 %v3_100032c4, label %dec_label_pc_10003404, label %dec_label_pc_100032d4

dec_label_pc_100032d4:                            ; preds = %dec_label_pc_10003294
  %v0_100032d4 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_100032d4, i32* %stack_var_-72, align 4
  store i32 268448484, i32* @lr, align 4
  %v0_100032e0 = load i32, i32* %r3.global-to-local, align 4
  %v3_100032e0 = call i32 @function_10009be8(i32 %v0_100032e0, i32 %v2_100033d0, i32 16)
  store i32 %v3_100032e0, i32* %r3.global-to-local, align 4
  %v0_100032e4 = load i32, i32* @r28, align 4
  %v1_100032e4 = add i32 %v0_100032e4, 20
  %v2_100032e4 = inttoptr i32 %v1_100032e4 to i8*
  %v3_100032e4 = load i8, i8* %v2_100032e4, align 1
  %v2_100032e8 = icmp ugt i8 %v3_100032e4, 31
  br i1 %v2_100032e8, label %dec_label_pc_10003308, label %dec_label_pc_100032f0

dec_label_pc_100032f0:                            ; preds = %dec_label_pc_100032d4
  %v1_100032f0 = add i32 %v0_100032e4, 16
  %v2_100032f0 = inttoptr i32 %v1_100032f0 to i32*
  %v3_100032f0 = load i32, i32* %v2_100032f0, align 4
  store i32 %v3_100032f0, i32* %r29.global-to-local, align 4
  %v0_100032f4 = call i32 @function_10005f3c()
  store i32 %v0_100032f4, i32* %r3.global-to-local, align 4
  %v0_100032f8 = load i32, i32* @r28, align 4
  %v1_100032f8 = add i32 %v0_100032f8, 20
  %v2_100032f8 = inttoptr i32 %v1_100032f8 to i8*
  %v3_100032f8 = load i8, i8* %v2_100032f8, align 1
  %tmp = urem i8 %v3_100032f8, 64
  %v2_100032fc = zext i8 %tmp to i32
  %v3_100032fc = lshr i32 %v0_100032f4, %v2_100032fc
  %v0_10003300 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003300 = add i32 %v3_100032fc, %v0_10003300
  store i32 %v2_10003300, i32* %r3.global-to-local, align 4
  %v2_10003304 = add i32 %v0_100032f8, 4
  %v3_10003304 = inttoptr i32 %v2_10003304 to i32*
  store i32 %v2_10003300, i32* %v3_10003304, align 4
  br label %dec_label_pc_10003308

dec_label_pc_10003308:                            ; preds = %dec_label_pc_100032d4, %dec_label_pc_100032f0
  %v0_10003308 = load i32, i32* %r25.global-to-local, align 4
  %v1_10003308 = load i32, i32* %r26.global-to-local, align 4
  %v2_10003308 = add i32 %v1_10003308, %v0_10003308
  %v3_10003308 = inttoptr i32 %v2_10003308 to i32*
  %v4_10003308 = load i32, i32* %v3_10003308, align 4
  store i32 %v4_10003308, i32* @r3, align 4
  %v1_10003314 = add i32 %v0_10003308, 4
  store i32 %v1_10003314, i32* %r25.global-to-local, align 4
  store i32 268448540, i32* @lr, align 4
  %v0_10003318 = call i32 @function_10009c1c()
  store i32 %v0_10003318, i32* %r3.global-to-local, align 4
  %v0_1000331c = load i32, i32* %r24.global-to-local, align 4
  %v1_1000331c = load i32, i32* @r30, align 4
  %v4_1000331c = icmp eq i32 %v0_1000331c, %v1_1000331c
  %v0_10003320 = load i32, i32* @r28, align 4
  %v1_10003320 = add i32 %v0_10003320, 24
  store i32 %v1_10003320, i32* @r28, align 4
  br i1 %v4_1000331c, label %dec_label_pc_10003328, label %dec_label_pc_10003294

dec_label_pc_10003328:                            ; preds = %dec_label_pc_10003308, %dec_label_pc_10003380, %dec_label_pc_10003268
  %v0_10003328 = load i32, i32* %r23.global-to-local, align 4
  %v3_10003328 = icmp eq i32 %v0_10003328, 0
  store i1 %v3_10003328, i1* %cr3_eq.global-to-local, align 1
  %v0_1000332c.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_1000332c.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_1000332c.outer

dec_label_pc_1000332c.outer:                      ; preds = %dec_label_pc_10003360, %dec_label_pc_10003498, %dec_label_pc_10003328
  %v1_1000332c.ph39 = phi i1 [ %v1_1000332c.pre, %dec_label_pc_10003328 ], [ %v1_10003498, %dec_label_pc_10003498 ], [ %v1_10003360, %dec_label_pc_10003360 ]
  %v0_1000332c.ph40 = phi i1 [ %v0_1000332c.pre, %dec_label_pc_10003328 ], [ %v0_10003498, %dec_label_pc_10003498 ], [ %v0_10003360, %dec_label_pc_10003360 ]
  %v2_1000332c = or i1 %v1_1000332c.ph39, %v0_1000332c.ph40
  br label %dec_label_pc_1000332c

dec_label_pc_1000332c:                            ; preds = %dec_label_pc_1000332c.outer, %dec_label_pc_1000332c
  br i1 %v2_1000332c, label %dec_label_pc_1000332c, label %dec_label_pc_10003330

dec_label_pc_10003330:                            ; preds = %dec_label_pc_10003498, %dec_label_pc_10003360, %dec_label_pc_1000332c
  %v0_10003330 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003330, label %dec_label_pc_10003334, label %dec_label_pc_1000345c

dec_label_pc_10003334:                            ; preds = %dec_label_pc_10003330
  store i32 0, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000333c

dec_label_pc_1000333c:                            ; preds = %dec_label_pc_1000333c.dec_label_pc_1000333c_crit_edge, %dec_label_pc_10003334
  %v0_10003340 = phi i32 [ %v0_10003358, %dec_label_pc_1000333c.dec_label_pc_1000333c_crit_edge ], [ 0, %dec_label_pc_10003334 ]
  %v0_10003350 = phi i32 [ %v0_1000333c.pre, %dec_label_pc_1000333c.dec_label_pc_1000333c_crit_edge ], [ 0, %dec_label_pc_10003334 ]
  %v1_1000333c = load i32, i32* %r26.global-to-local, align 4
  %v2_1000333c = add i32 %v1_1000333c, %v0_10003350
  %v3_1000333c = inttoptr i32 %v2_1000333c to i32*
  %v4_1000333c = load i32, i32* %v3_1000333c, align 4
  store i32 %v4_1000333c, i32* %r3.global-to-local, align 4
  %v1_10003340 = add i32 %v0_10003340, 1
  store i32 %v1_10003340, i32* %r28.global-to-local, align 4
  %v1_10003344 = load i32, i32* %r27.global-to-local, align 4
  %v2_10003344 = add i32 %v1_10003344, %v0_10003350
  %v3_10003344 = inttoptr i32 %v2_10003344 to i32*
  %v4_10003344 = load i32, i32* %v3_10003344, align 4
  %v0_10003348 = load i32, i32* @r31, align 4
  %v1_10003350 = add i32 %v0_10003350, 4
  store i32 %v1_10003350, i32* %r29.global-to-local, align 4
  store i32 268448600, i32* @lr, align 4
  %v4_10003354 = call i32 @function_10009d68(i32 %v4_1000333c, i32 %v4_10003344, i32 %v0_10003348, i32 16384)
  store i32 %v4_10003354, i32* %r3.global-to-local, align 4
  %v0_10003358 = load i32, i32* %r28.global-to-local, align 4
  %v1_10003358 = load i32, i32* @r30, align 4
  %v4_10003358 = icmp eq i32 %v0_10003358, %v1_10003358
  br i1 %v4_10003358, label %dec_label_pc_10003360, label %dec_label_pc_1000333c.dec_label_pc_1000333c_crit_edge

dec_label_pc_1000333c.dec_label_pc_1000333c_crit_edge: ; preds = %dec_label_pc_1000333c
  %v0_1000333c.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000333c

dec_label_pc_10003360:                            ; preds = %dec_label_pc_1000333c
  %v0_10003360 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10003360 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10003360 = or i1 %v0_10003360, %v1_10003360
  br i1 %v2_10003360, label %dec_label_pc_1000332c.outer, label %dec_label_pc_10003330

dec_label_pc_10003380:                            ; preds = %dec_label_pc_100033e4, %dec_label_pc_10003400
  %v0_10003380 = load i32, i32* %r25.global-to-local, align 4
  %v1_10003380 = load i32, i32* %r26.global-to-local, align 4
  %v2_10003380 = add i32 %v1_10003380, %v0_10003380
  %v3_10003380 = inttoptr i32 %v2_10003380 to i32*
  %v4_10003380 = load i32, i32* %v3_10003380, align 4
  store i32 %v4_10003380, i32* @r3, align 4
  %v1_1000338c = add i32 %v0_10003380, 4
  store i32 %v1_1000338c, i32* %r25.global-to-local, align 4
  store i32 268448660, i32* @lr, align 4
  %v0_10003390 = call i32 @function_10009c1c()
  store i32 %v0_10003390, i32* %r3.global-to-local, align 4
  %v0_10003394 = load i32, i32* %r24.global-to-local, align 4
  %v1_10003394 = load i32, i32* @r30, align 4
  %v4_10003394 = icmp eq i32 %v0_10003394, %v1_10003394
  %v0_10003398 = load i32, i32* @r28, align 4
  %v1_10003398 = add i32 %v0_10003398, 24
  store i32 %v1_10003398, i32* @r28, align 4
  br i1 %v4_10003394, label %dec_label_pc_10003328, label %dec_label_pc_100033a0

dec_label_pc_100033a0:                            ; preds = %dec_label_pc_10003270, %dec_label_pc_10003380
  %v0_100033ac = phi i32 [ %v0_10003394, %dec_label_pc_10003380 ], [ 0, %dec_label_pc_10003270 ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_100033ac = add i32 %v0_100033ac, 1
  store i32 %v1_100033ac, i32* %r24.global-to-local, align 4
  store i32 268448692, i32* @lr, align 4
  %v2_100033b0 = call i32 @function_1000a178(i32 65535, i32 1)
  store i32 %v2_100033b0, i32* %r3.global-to-local, align 4
  %v1_100033b4 = load i32, i32* %r25.global-to-local, align 4
  %v2_100033b4 = load i32, i32* %r27.global-to-local, align 4
  %v3_100033b4 = add i32 %v2_100033b4, %v1_100033b4
  %v4_100033b4 = inttoptr i32 %v3_100033b4 to i32*
  store i32 %v2_100033b0, i32* %v4_100033b4, align 4
  %v0_100033b8 = call i32 @function_10005f3c()
  %v1_100033b8 = trunc i32 %v0_100033b8 to i16
  %v3_100033bc = load i32, i32* @r28, align 4
  %v4_100033bc = add i32 %v3_100033bc, 2
  %v5_100033bc = inttoptr i32 %v4_100033bc to i16*
  store i16 %v1_100033b8, i16* %v5_100033bc, align 2
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268448720, i32* @lr, align 4
  %v3_100033cc = call i32 @function_10009e1c(i32 2, i32 2, i32 17)
  store i32 %v3_100033cc, i32* %r3.global-to-local, align 4
  %v3_100033d4 = icmp eq i32 %v3_100033cc, -1
  %v1_100033dc = load i32, i32* %r25.global-to-local, align 4
  %v2_100033dc = load i32, i32* %r26.global-to-local, align 4
  %v3_100033dc = add i32 %v2_100033dc, %v1_100033dc
  %v4_100033dc = inttoptr i32 %v3_100033dc to i32*
  store i32 %v3_100033cc, i32* %v4_100033dc, align 4
  br i1 %v3_100033d4, label %dec_label_pc_10003404, label %dec_label_pc_100033e4

dec_label_pc_100033e4:                            ; preds = %dec_label_pc_100033a0
  %v0_100033e4 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_100033e4, i32* %stack_var_-72, align 4
  store i32 268448756, i32* @lr, align 4
  %v0_100033f0 = load i32, i32* %r3.global-to-local, align 4
  %v3_100033f0 = call i32 @function_10009be8(i32 %v0_100033f0, i32 %v2_100033d0, i32 16)
  store i32 %v3_100033f0, i32* %r3.global-to-local, align 4
  %v0_100033f4 = load i32, i32* @r28, align 4
  %v1_100033f4 = add i32 %v0_100033f4, 20
  %v2_100033f4 = inttoptr i32 %v1_100033f4 to i8*
  %v3_100033f4 = load i8, i8* %v2_100033f4, align 1
  %v2_100033f8 = icmp ugt i8 %v3_100033f4, 31
  br i1 %v2_100033f8, label %dec_label_pc_10003380, label %dec_label_pc_10003400

dec_label_pc_10003400:                            ; preds = %dec_label_pc_100033e4
  %v1_10003368 = add i32 %v0_100033f4, 16
  %v2_10003368 = inttoptr i32 %v1_10003368 to i32*
  %v3_10003368 = load i32, i32* %v2_10003368, align 4
  store i32 %v3_10003368, i32* %r29.global-to-local, align 4
  %v0_1000336c = call i32 @function_10005f3c()
  store i32 %v0_1000336c, i32* %r3.global-to-local, align 4
  %v0_10003370 = load i32, i32* @r28, align 4
  %v1_10003370 = add i32 %v0_10003370, 20
  %v2_10003370 = inttoptr i32 %v1_10003370 to i8*
  %v3_10003370 = load i8, i8* %v2_10003370, align 1
  %tmp43 = urem i8 %v3_10003370, 64
  %v2_10003374 = zext i8 %tmp43 to i32
  %v3_10003374 = lshr i32 %v0_1000336c, %v2_10003374
  %v0_10003378 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003378 = add i32 %v3_10003374, %v0_10003378
  store i32 %v2_10003378, i32* %r3.global-to-local, align 4
  %v2_1000337c = add i32 %v0_10003370, 4
  %v3_1000337c = inttoptr i32 %v2_1000337c to i32*
  store i32 %v2_10003378, i32* %v3_1000337c, align 4
  br label %dec_label_pc_10003380

dec_label_pc_10003404:                            ; preds = %dec_label_pc_10003294, %dec_label_pc_100033a0
  %v1_10003418 = call %0 @__asm_mtcrf(i32 24, i32 %v0_10003170)
  store i32 %v0_1000319c, i32* %r28.global-to-local, align 4
  store i32 %v0_100031a4, i32* %r29.global-to-local, align 4
  %v0_1000344c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000344c

dec_label_pc_10003450:                            ; preds = %dec_label_pc_10003168
  %v0_10003450 = call i32 @function_10005f3c()
  store i32 %v0_10003450, i32* %r3.global-to-local, align 4
  %v1_10003454 = urem i32 %v0_10003450, 65536
  store i32 %v1_10003454, i32* %r22.global-to-local, align 4
  br label %dec_label_pc_10003268

dec_label_pc_1000345c:                            ; preds = %dec_label_pc_10003330
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10003464

dec_label_pc_10003464:                            ; preds = %dec_label_pc_10003464.dec_label_pc_10003464_crit_edge, %dec_label_pc_1000345c
  %v0_1000346c = phi i32 [ %v0_10003490, %dec_label_pc_10003464.dec_label_pc_10003464_crit_edge ], [ 0, %dec_label_pc_1000345c ]
  %v0_10003464 = phi i32 [ %v0_10003464.pre, %dec_label_pc_10003464.dec_label_pc_10003464_crit_edge ], [ 0, %dec_label_pc_1000345c ]
  %v1_10003464 = load i32, i32* %r27.global-to-local, align 4
  %v2_10003464 = add i32 %v1_10003464, %v0_10003464
  %v3_10003464 = inttoptr i32 %v2_10003464 to i32*
  %v4_10003464 = load i32, i32* %v3_10003464, align 4
  store i32 %v4_10003464, i32* @r29, align 4
  %v0_10003468 = load i32, i32* @r31, align 4
  store i32 %v0_10003468, i32* @r4, align 4
  %v1_1000346c = add i32 %v0_1000346c, 1
  store i32 %v1_1000346c, i32* %r25.global-to-local, align 4
  store i32 %v4_10003464, i32* @r3, align 4
  %v0_10003474 = call i32 @function_10006110()
  store i32 %v0_10003474, i32* %r3.global-to-local, align 4
  %v0_10003478 = load i32, i32* %r28.global-to-local, align 4
  %v1_10003478 = load i32, i32* %r26.global-to-local, align 4
  %v2_10003478 = add i32 %v1_10003478, %v0_10003478
  %v3_10003478 = inttoptr i32 %v2_10003478 to i32*
  %v4_10003478 = load i32, i32* %v3_10003478, align 4
  store i32 %v4_10003478, i32* %r3.global-to-local, align 4
  %v0_1000347c = load i32, i32* @r29, align 4
  %v0_10003480 = load i32, i32* @r31, align 4
  %v1_10003488 = add i32 %v0_10003478, 4
  store i32 %v1_10003488, i32* %r28.global-to-local, align 4
  store i32 268448912, i32* @lr, align 4
  %v4_1000348c = call i32 @function_10009d68(i32 %v4_10003478, i32 %v0_1000347c, i32 %v0_10003480, i32 16384)
  store i32 %v4_1000348c, i32* %r3.global-to-local, align 4
  %v0_10003490 = load i32, i32* %r25.global-to-local, align 4
  %v1_10003490 = load i32, i32* @r30, align 4
  %v4_10003490 = icmp eq i32 %v0_10003490, %v1_10003490
  br i1 %v4_10003490, label %dec_label_pc_10003498, label %dec_label_pc_10003464.dec_label_pc_10003464_crit_edge

dec_label_pc_10003464.dec_label_pc_10003464_crit_edge: ; preds = %dec_label_pc_10003464
  %v0_10003464.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10003464

dec_label_pc_10003498:                            ; preds = %dec_label_pc_10003464
  %v0_10003498 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10003498 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10003498 = or i1 %v0_10003498, %v1_10003498
  br i1 %v2_10003498, label %dec_label_pc_1000332c.outer, label %dec_label_pc_10003330

; uselistorder directives
  uselistorder i1 %v1_10003498, { 1, 0 }
  uselistorder i1 %v0_10003498, { 1, 0 }
  uselistorder i32 %v0_10003490, { 1, 0 }
  uselistorder i32 %v0_10003478, { 1, 0 }
  uselistorder i32 %v0_10003380, { 1, 0 }
  uselistorder i1 %v1_10003360, { 1, 0 }
  uselistorder i1 %v0_10003360, { 1, 0 }
  uselistorder i32 %v0_10003358, { 1, 0 }
  uselistorder i32 %v0_10003350, { 2, 0, 1 }
  uselistorder i32 %v0_1000331c, { 1, 0 }
  uselistorder i32 %v0_10003308, { 1, 0 }
  uselistorder i32 %v2_100033d0, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 0, 1, 3, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 21, 6, 7, 9, 10, 11, 12, 13, 14, 8, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 0, 1 }
  uselistorder i32* %r26.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r25.global-to-local, { 0, 1, 2, 6, 7, 3, 5, 4, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r24.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r21.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 2, 0, 3 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 2, 0, 3 }
  uselistorder i8 31, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder label %dec_label_pc_10003404, { 1, 0 }
  uselistorder label %dec_label_pc_100033a0, { 1, 0 }
  uselistorder label %dec_label_pc_10003380, { 1, 0 }
  uselistorder label %dec_label_pc_1000332c, { 1, 0 }
  uselistorder label %dec_label_pc_1000332c.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10003328, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10003308, { 1, 0 }
  uselistorder label %dec_label_pc_10003294, { 1, 0 }
  uselistorder label %dec_label_pc_10003268, { 1, 0 }
}

define i32 @function_100034a0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100034a0:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_100034a4 = load i32, i32* @lr, align 4
  store i32 %v0_100034a4, i32* %r0.global-to-local, align 4
  %v0_100034a8 = call i32 @__asm_mfcr()
  store i32 %v0_100034a8, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r27.global-to-local, align 4
  %v0_100034b8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_100034a8, i32* %r19.global-to-local, align 4
  %v0_100034ec = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100034f4 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_100034fc = load i32, i32* @r30, align 4
  %v0_10003500 = load i32, i32* @r31, align 4
  store i32 268449044, i32* @lr, align 4
  %v2_10003510 = call i32 @function_1000a178(i32 4, i32 4)
  store i32 %v2_10003510, i32* %r20.global-to-local, align 4
  %v0_10003518 = load i32, i32* @r28, align 4
  %v0_10003524 = load i32, i32* @r29, align 4
  store i32 %v0_10003524, i32* %r3.global-to-local, align 4
  store i32 268449068, i32* @lr, align 4
  %v4_10003528 = inttoptr i32 %v0_10003518 to i32*
  %v5_10003528 = call i32 @function_100006a8(i32 %v0_10003524, i32* %v4_10003528, i32 2, i32 0)
  %v0_10003538 = load i32, i32* @r28, align 4
  %v1_1000353c = urem i32 %v5_10003528, 256
  store i32 %v1_1000353c, i32* %r15.global-to-local, align 4
  %v0_10003540 = load i32, i32* @r29, align 4
  store i32 %v0_10003540, i32* %r3.global-to-local, align 4
  store i32 268449096, i32* @lr, align 4
  %v4_10003544 = inttoptr i32 %v0_10003538 to i32*
  %v5_10003544 = call i32 @function_100006a8(i32 %v0_10003540, i32* %v4_10003544, i32 3, i32 65535)
  %v0_10003548 = load i32, i32* @r28, align 4
  store i32 %v5_10003544, i32* %r23.global-to-local, align 4
  %v0_10003558 = load i32, i32* @r29, align 4
  store i32 %v0_10003558, i32* %r3.global-to-local, align 4
  store i32 268449120, i32* @lr, align 4
  %v4_1000355c = inttoptr i32 %v0_10003548 to i32*
  %v5_1000355c = call i32 @function_100006a8(i32 %v0_10003558, i32* %v4_1000355c, i32 4, i32 64)
  %v0_10003560 = load i32, i32* @r28, align 4
  %v1_1000356c = urem i32 %v5_1000355c, 256
  store i32 %v1_1000356c, i32* %r16.global-to-local, align 4
  %v0_10003570 = load i32, i32* @r29, align 4
  store i32 %v0_10003570, i32* %r3.global-to-local, align 4
  store i32 268449144, i32* @lr, align 4
  %v4_10003574 = inttoptr i32 %v0_10003560 to i32*
  %v5_10003574 = call i32 @function_100006a8(i32 %v0_10003570, i32* %v4_10003574, i32 5, i32 0)
  %v0_10003584 = load i32, i32* @r28, align 4
  %v1_10003588 = urem i32 %v5_10003574, 256
  store i32 %v1_10003588, i32* @r31, align 4
  %v0_1000358c = load i32, i32* @r29, align 4
  store i32 %v0_1000358c, i32* %r3.global-to-local, align 4
  store i32 268449172, i32* @lr, align 4
  %v4_10003590 = inttoptr i32 %v0_10003584 to i32*
  %v5_10003590 = call i32 @function_100006a8(i32 %v0_1000358c, i32* %v4_10003590, i32 6, i32 65535)
  %v0_10003598 = load i32, i32* @r28, align 4
  store i32 %v5_10003590, i32* %r24.global-to-local, align 4
  %v0_100035a8 = load i32, i32* @r29, align 4
  store i32 %v0_100035a8, i32* %r3.global-to-local, align 4
  store i32 268449200, i32* @lr, align 4
  %v4_100035ac = inttoptr i32 %v0_10003598 to i32*
  %v5_100035ac = call i32 @function_100006a8(i32 %v0_100035a8, i32* %v4_100035ac, i32 7, i32 65535)
  %v0_100035b0 = load i32, i32* @r28, align 4
  store i32 %v5_100035ac, i32* %r25.global-to-local, align 4
  %v0_100035c0 = load i32, i32* @r29, align 4
  store i32 %v0_100035c0, i32* %r3.global-to-local, align 4
  store i32 268449224, i32* @lr, align 4
  %v4_100035c4 = inttoptr i32 %v0_100035b0 to i32*
  %v5_100035c4 = call i32 @function_100006a8(i32 %v0_100035c0, i32* %v4_100035c4, i32 0, i32 512)
  %v0_100035c8 = load i32, i32* @r28, align 4
  store i32 %v5_100035c4, i32* %r26.global-to-local, align 4
  %v0_100035d8 = load i32, i32* @r29, align 4
  store i32 %v0_100035d8, i32* %r3.global-to-local, align 4
  store i32 268449248, i32* @lr, align 4
  %v4_100035dc = inttoptr i32 %v0_100035c8 to i32*
  %v5_100035dc = call i32 @function_100006a8(i32 %v0_100035d8, i32* %v4_100035dc, i32 1, i32 1)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_100035e4 = load i32, i32* @global_var_1001c258.14, align 4
  %v0_100035e8 = load i32, i32* @r28, align 4
  %v1_100035f0 = urem i32 %v5_100035dc, 256
  store i32 %v1_100035f0, i32* %r17.global-to-local, align 4
  %v0_100035f4 = load i32, i32* @r29, align 4
  store i32 %v0_100035f4, i32* %r3.global-to-local, align 4
  store i32 268449276, i32* @lr, align 4
  %v4_100035f8 = inttoptr i32 %v0_100035e8 to i32*
  %v5_100035f8 = call i32 @function_100006a8(i32 %v0_100035f4, i32* %v4_100035f8, i32 25, i32 %v3_100035e4)
  store i32 %v5_100035f8, i32* %r30.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268449296, i32* @lr, align 4
  %v3_1000360c = call i32 @function_10009e1c(i32 2, i32 3, i32 17)
  store i32 %v3_1000360c, i32* %r3.global-to-local, align 4
  %v3_10003610 = icmp eq i32 %v3_1000360c, -1
  store i32 %v3_1000360c, i32* %r21.global-to-local, align 4
  br i1 %v3_10003610, label %dec_label_pc_1000386c, label %dec_label_pc_1000361c

dec_label_pc_1000361c:                            ; preds = %dec_label_pc_100034a0
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10003628 = ptrtoint i32* %stack_var_-104 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-104, align 4
  store i32 268449336, i32* @lr, align 4
  %v4_10003634 = call i32 @function_10009de0(i32 0, i32 3, i32 %v2_10003628, i32 4)
  store i32 %v4_10003634, i32* %r3.global-to-local, align 4
  %v3_10003638 = icmp eq i32 %v4_10003634, -1
  br i1 %v3_10003638, label %dec_label_pc_10003864, label %dec_label_pc_10003640

dec_label_pc_10003640:                            ; preds = %dec_label_pc_1000361c
  %v0_10003640 = load i32, i32* %r26.global-to-local, align 4
  %v1_10003640 = urem i32 %v0_10003640, 65536
  store i32 %v1_10003640, i32* %r18.global-to-local, align 4
  %v0_10003644 = load i32, i32* %r23.global-to-local, align 4
  %v1_10003644 = urem i32 %v0_10003644, 65536
  store i32 %v1_10003644, i32* %r22.global-to-local, align 4
  %v0_1000364c = load i32, i32* %r24.global-to-local, align 4
  %v1_1000364c = urem i32 %v0_1000364c, 65536
  store i32 %v1_1000364c, i32* %r23.global-to-local, align 4
  %v0_10003650 = load i32, i32* %r25.global-to-local, align 4
  %v1_10003650 = urem i32 %v0_10003650, 65536
  store i32 %v1_10003650, i32* %r24.global-to-local, align 4
  %tmp30 = icmp ult i32 %v1_10003640, 1461
  br i1 %tmp30, label %dec_label_pc_1000365c, label %dec_label_pc_10003658

dec_label_pc_10003658:                            ; preds = %dec_label_pc_10003640
  store i32 1460, i32* %r18.global-to-local, align 4
  br label %dec_label_pc_1000365c

dec_label_pc_1000365c:                            ; preds = %dec_label_pc_10003640, %dec_label_pc_10003658
  %v0_1000396c = phi i32 [ %v1_10003640, %dec_label_pc_10003640 ], [ 1460, %dec_label_pc_10003658 ]
  %v0_1000365c = load i32, i32* %r19.global-to-local, align 4
  %v1_1000365c = icmp slt i32 %v0_1000365c, 0
  %v3_1000365c = icmp eq i32 %v0_1000365c, 0
  store i1 %v1_1000365c, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_1000365c, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %tmp31 = icmp slt i32 %v0_1000365c, 1
  br i1 %tmp31, label %dec_label_pc_10003964, label %dec_label_pc_1000366c

dec_label_pc_1000366c:                            ; preds = %dec_label_pc_1000365c
  %v0_1000366c = load i32, i32* @r31, align 4
  %v3_1000366c = icmp eq i32 %v0_1000366c, 0
  %v1_10003670 = add nuw nsw i32 %v0_1000396c, 28
  store i32 %v1_10003670, i32* %r25.global-to-local, align 4
  %v1_10003674 = add nuw nsw i32 %v0_1000396c, 8
  store i32 %v1_10003674, i32* %r26.global-to-local, align 4
  %v1_10003678 = urem i32 %v1_10003670, 65536
  store i32 %v1_10003678, i32* @r28, align 4
  %v1_1000367c = urem i32 %v1_10003674, 65536
  store i32 %v1_1000367c, i32* @r29, align 4
  br i1 %v3_1000366c, label %dec_label_pc_10003684, label %dec_label_pc_100038cc

dec_label_pc_10003684:                            ; preds = %dec_label_pc_1000366c
  br label %dec_label_pc_10003688

dec_label_pc_10003688:                            ; preds = %dec_label_pc_10003688, %dec_label_pc_10003684
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268449428, i32* @lr, align 4
  %v2_10003690 = call i32 @function_1000a178(i32 1510, i32 1)
  store i32 %v2_10003690, i32* %r3.global-to-local, align 4
  %v3_10003694 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10003694, i32* %r9.global-to-local, align 4
  %v0_10003698 = load i32, i32* @r31, align 4
  %v1_10003698 = mul i32 %v0_10003698, 4
  store i32 %v1_10003698, i32* %r0.global-to-local, align 4
  %v1_1000369c = load i32, i32* %r20.global-to-local, align 4
  %v3_1000369c = add i32 %v1_1000369c, %v1_10003698
  %v4_1000369c = inttoptr i32 %v3_1000369c to i32*
  store i32 %v2_10003690, i32* %v4_1000369c, align 4
  %v0_100036a0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100036a0 = mul i32 %v0_100036a0, 4
  store i32 %v1_100036a0, i32* %r9.global-to-local, align 4
  %v1_100036a4 = load i32, i32* %r20.global-to-local, align 4
  %v2_100036a4 = add i32 %v1_100036a4, %v1_100036a0
  %v3_100036a4 = inttoptr i32 %v2_100036a4 to i32*
  %v4_100036a4 = load i32, i32* %v3_100036a4, align 4
  store i32 %v4_100036a4, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_100036ac = inttoptr i32 %v4_100036a4 to i32*
  %v2_100036ac = load i32, i32* %v1_100036ac, align 4
  store i32 %v2_100036ac, i32* %r0.global-to-local, align 4
  %v1_100036b0 = add i32 %v4_100036a4, 20
  store i32 %v1_100036b0, i32* %r10.global-to-local, align 4
  %v0_100036b4 = load i32, i32* %r16.global-to-local, align 4
  %v1_100036b4 = trunc i32 %v0_100036b4 to i8
  %v3_100036b4 = add i32 %v4_100036a4, 8
  %v4_100036b4 = inttoptr i32 %v3_100036b4 to i8*
  store i8 %v1_100036b4, i8* %v4_100036b4, align 1
  %v1_100036b8 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100036b8, i32* %r0.global-to-local, align 4
  %v0_100036bc = load i32, i32* @r30, align 4
  %v1_100036bc = load i32, i32* %r11.global-to-local, align 4
  %v2_100036bc = add i32 %v1_100036bc, 12
  %v3_100036bc = inttoptr i32 %v2_100036bc to i32*
  store i32 %v0_100036bc, i32* %v3_100036bc, align 4
  %v1_100036c0 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_100036c4 = load i32, i32* %r22.global-to-local, align 4
  %v1_100036c4 = trunc i32 %v0_100036c4 to i16
  %v2_100036c4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100036c4 = add i32 %v2_100036c4, 4
  %v4_100036c4 = inttoptr i32 %v3_100036c4 to i16*
  store i16 %v1_100036c4, i16* %v4_100036c4, align 2
  %v1_100036c8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100036c8 = inttoptr i32 %v1_100036c8 to i32*
  store i32 %v1_100036c0, i32* %v2_100036c8, align 4
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_100036d0 = load i32, i32* %r11.global-to-local, align 4
  %v3_100036d0 = add i32 %v2_100036d0, 9
  %v4_100036d0 = inttoptr i32 %v3_100036d0 to i8*
  store i8 17, i8* %v4_100036d0, align 1
  %v0_100036d4 = load i32, i32* %r15.global-to-local, align 4
  %v1_100036d4 = trunc i32 %v0_100036d4 to i8
  %v2_100036d4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100036d4 = add i32 %v2_100036d4, 1
  %v4_100036d4 = inttoptr i32 %v3_100036d4 to i8*
  store i8 %v1_100036d4, i8* %v4_100036d4, align 1
  %v0_100036d8 = load i32, i32* @r28, align 4
  %v1_100036d8 = trunc i32 %v0_100036d8 to i16
  %v2_100036d8 = load i32, i32* %r11.global-to-local, align 4
  %v3_100036d8 = add i32 %v2_100036d8, 2
  %v4_100036d8 = inttoptr i32 %v3_100036d8 to i16*
  store i16 %v1_100036d8, i16* %v4_100036d8, align 2
  %v3_100036dc = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100036dc, i32* %r9.global-to-local, align 4
  %v0_100036e0 = load i32, i32* %r23.global-to-local, align 4
  %v1_100036e0 = trunc i32 %v0_100036e0 to i16
  %v2_100036e0 = load i32, i32* %r11.global-to-local, align 4
  %v3_100036e0 = add i32 %v2_100036e0, 20
  %v4_100036e0 = inttoptr i32 %v3_100036e0 to i16*
  store i16 %v1_100036e0, i16* %v4_100036e0, align 2
  %v0_100036e4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100036e4 = add i32 %v0_100036e4, 1
  store i32 %v1_100036e4, i32* %r31.global-to-local, align 4
  %v1_100036e8 = mul i32 %v0_100036e4, 24
  store i32 %v1_100036e8, i32* %r9.global-to-local, align 4
  %v1_100036ec = load i32, i32* %r19.global-to-local, align 4
  %v2_100036ec = icmp slt i32 %v1_100036e4, %v1_100036ec
  %v0_100036f0 = load i32, i32* @r29, align 4
  %v1_100036f0 = trunc i32 %v0_100036f0 to i16
  %v2_100036f0 = load i32, i32* %r10.global-to-local, align 4
  %v3_100036f0 = add i32 %v2_100036f0, 4
  %v4_100036f0 = inttoptr i32 %v3_100036f0 to i16*
  store i16 %v1_100036f0, i16* %v4_100036f0, align 2
  %v0_100036f4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100036f4 = load i32, i32* %r27.global-to-local, align 4
  %v2_100036f4 = add i32 %v1_100036f4, %v0_100036f4
  store i32 %v2_100036f4, i32* %r9.global-to-local, align 4
  %v0_100036f8 = load i32, i32* %r24.global-to-local, align 4
  %v1_100036f8 = trunc i32 %v0_100036f8 to i16
  %v2_100036f8 = load i32, i32* %r10.global-to-local, align 4
  %v3_100036f8 = add i32 %v2_100036f8, 2
  %v4_100036f8 = inttoptr i32 %v3_100036f8 to i16*
  store i16 %v1_100036f8, i16* %v4_100036f8, align 2
  %v0_100036fc = load i32, i32* %r9.global-to-local, align 4
  %v1_100036fc = add i32 %v0_100036fc, 16
  %v2_100036fc = inttoptr i32 %v1_100036fc to i32*
  %v3_100036fc = load i32, i32* %v2_100036fc, align 4
  store i32 %v3_100036fc, i32* %r0.global-to-local, align 4
  %v1_10003700 = load i32, i32* %r11.global-to-local, align 4
  %v2_10003700 = add i32 %v1_10003700, 16
  %v3_10003700 = inttoptr i32 %v2_10003700 to i32*
  store i32 %v3_100036fc, i32* %v3_10003700, align 4
  %v0_10003704 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10003704, i32* %stack_var_-104, align 4
  br i1 %v2_100036ec, label %dec_label_pc_10003688, label %dec_label_pc_1000370c

dec_label_pc_1000370c:                            ; preds = %dec_label_pc_100038d4, %dec_label_pc_10003688
  %v0_1000370c = load i32, i32* @r30, align 4
  %v3_1000370c = icmp eq i32 %v0_1000370c, -1
  store i1 %v3_1000370c, i1* %cr2_eq.global-to-local, align 1
  %v0_10003710 = load i32, i32* %r17.global-to-local, align 4
  %v3_10003710 = icmp eq i32 %v0_10003710, 0
  store i1 %v3_10003710, i1* %cr3_eq.global-to-local, align 1
  %v0_10003714.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10003714.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10003714.preheader

dec_label_pc_10003714.preheader:                  ; preds = %dec_label_pc_100037e0, %dec_label_pc_10003964, %dec_label_pc_1000370c
  %v1_10003714 = phi i1 [ %v1_1000365c, %dec_label_pc_10003964 ], [ %v1_10003714.pre, %dec_label_pc_1000370c ], [ %v1_100037e0, %dec_label_pc_100037e0 ]
  %v0_10003714 = phi i1 [ %v3_1000365c, %dec_label_pc_10003964 ], [ %v0_10003714.pre, %dec_label_pc_1000370c ], [ %v0_100037e0, %dec_label_pc_100037e0 ]
  %v2_10003714 = or i1 %v1_10003714, %v0_10003714
  br label %dec_label_pc_10003714

dec_label_pc_10003714:                            ; preds = %dec_label_pc_10003714.preheader, %dec_label_pc_10003714
  br i1 %v2_10003714, label %dec_label_pc_10003714, label %dec_label_pc_10003718

dec_label_pc_10003718:                            ; preds = %dec_label_pc_10003714, %dec_label_pc_100037e0
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  store i32 0, i32* @r30, align 4
  br label %dec_label_pc_10003728

dec_label_pc_10003728:                            ; preds = %dec_label_pc_10003770, %dec_label_pc_10003718
  %v0_10003728 = phi i32 [ %v1_100037d0, %dec_label_pc_10003770 ], [ 0, %dec_label_pc_10003718 ]
  %v1_10003728 = mul i32 %v0_10003728, 24
  store i32 %v1_10003728, i32* %r0.global-to-local, align 4
  %v1_1000372c = mul i32 %v0_10003728, 4
  store i32 %v1_1000372c, i32* %r11.global-to-local, align 4
  %v1_10003730 = load i32, i32* %r20.global-to-local, align 4
  %v2_10003730 = add i32 %v1_10003730, %v1_1000372c
  %v3_10003730 = inttoptr i32 %v2_10003730 to i32*
  %v4_10003730 = load i32, i32* %v3_10003730, align 4
  store i32 %v4_10003730, i32* %r28.global-to-local, align 4
  %v1_10003734 = load i32, i32* %r27.global-to-local, align 4
  %v2_10003734 = add i32 %v1_10003734, %v1_10003728
  store i32 %v2_10003734, i32* %r10.global-to-local, align 4
  %v1_10003738 = add i32 %v2_10003734, 20
  %v2_10003738 = inttoptr i32 %v1_10003738 to i8*
  %v3_10003738 = load i8, i8* %v2_10003738, align 1
  %v4_10003738 = zext i8 %v3_10003738 to i32
  store i32 %v4_10003738, i32* %r9.global-to-local, align 4
  %v1_1000373c = add i32 %v4_10003730, 20
  store i32 %v1_1000373c, i32* @r31, align 4
  %tmp32 = icmp ult i8 %v3_10003738, 32
  br i1 %tmp32, label %dec_label_pc_100037e8, label %dec_label_pc_10003748

dec_label_pc_10003748:                            ; preds = %dec_label_pc_10003728
  %v0_10003748 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003748, label %dec_label_pc_10003810, label %dec_label_pc_1000374c

dec_label_pc_1000374c:                            ; preds = %dec_label_pc_100037e8, %dec_label_pc_10003748
  store i32 65535, i32* @r29, align 4
  %v0_10003754 = load i32, i32* %r22.global-to-local, align 4
  %v4_10003754 = icmp eq i32 %v0_10003754, 65535
  br i1 %v4_10003754, label %dec_label_pc_10003828, label %dec_label_pc_1000375c

dec_label_pc_1000375c:                            ; preds = %dec_label_pc_10003810, %dec_label_pc_1000374c
  %v1_1000375c = phi i32 [ %v1_10003820, %dec_label_pc_10003810 ], [ 65535, %dec_label_pc_1000374c ]
  %v0_1000375c = load i32, i32* %r23.global-to-local, align 4
  %v4_1000375c = icmp eq i32 %v0_1000375c, %v1_1000375c
  br i1 %v4_1000375c, label %dec_label_pc_10003838, label %dec_label_pc_10003764

dec_label_pc_10003764:                            ; preds = %dec_label_pc_10003828.dec_label_pc_10003764_crit_edge, %dec_label_pc_1000375c
  %v1_10003764 = phi i32 [ %v1_10003764.pre, %dec_label_pc_10003828.dec_label_pc_10003764_crit_edge ], [ %v1_1000375c, %dec_label_pc_1000375c ]
  %v0_10003764 = load i32, i32* %r24.global-to-local, align 4
  %v4_10003764 = icmp eq i32 %v0_10003764, %v1_10003764
  br i1 %v4_10003764, label %dec_label_pc_10003848, label %dec_label_pc_1000376c

dec_label_pc_1000376c:                            ; preds = %dec_label_pc_10003838, %dec_label_pc_10003764
  %v0_1000376c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_1000376c, label %dec_label_pc_10003770, label %dec_label_pc_10003854

dec_label_pc_10003770:                            ; preds = %dec_label_pc_1000376c, %dec_label_pc_10003848, %dec_label_pc_10003854
  %v0_10003770 = load i32, i32* @r30, align 4
  %v1_10003770 = trunc i32 %v0_10003770 to i16
  %v2_10003770 = load i32, i32* %r28.global-to-local, align 4
  %v3_10003770 = add i32 %v2_10003770, 10
  %v4_10003770 = inttoptr i32 %v3_10003770 to i16*
  store i16 %v1_10003770, i16* %v4_10003770, align 2
  %v0_10003778 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003778, i32* @r3, align 4
  %v2_1000377c = call i32 @function_100043cc(i32 %v0_10003778, i32 20)
  %v3_1000377c = trunc i32 %v2_1000377c to i16
  %v0_10003780 = load i32, i32* @r31, align 4
  store i32 %v0_10003780, i32* @r4, align 4
  %v4_10003784 = add i32 %v0_10003778, 10
  %v5_10003784 = inttoptr i32 %v4_10003784 to i16*
  store i16 %v3_1000377c, i16* %v5_10003784, align 2
  %v0_10003788 = load i32, i32* %r26.global-to-local, align 4
  %v0_1000378c = load i32, i32* @r30, align 4
  %v1_1000378c = trunc i32 %v0_1000378c to i16
  %v2_1000378c = load i32, i32* @r31, align 4
  %v3_1000378c = add i32 %v2_1000378c, 6
  %v4_1000378c = inttoptr i32 %v3_1000378c to i16*
  store i16 %v1_1000378c, i16* %v4_1000378c, align 2
  %v0_10003790 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003790, i32* %r3.global-to-local, align 4
  %v0_10003794 = load i32, i32* @r31, align 4
  %v1_10003794 = add i32 %v0_10003794, 4
  %v2_10003794 = inttoptr i32 %v1_10003794 to i16*
  %v3_10003794 = load i16, i16* %v2_10003794, align 2
  %v4_10003794 = zext i16 %v3_10003794 to i32
  %v4_10003798 = call i32 @function_10004430(i32 %v0_10003790, i32 %v0_10003780, i32 %v4_10003794, i32 %v0_10003788)
  %v5_10003798 = trunc i32 %v4_10003798 to i16
  store i32 %v4_10003798, i32* %r3.global-to-local, align 4
  %v3_1000379c = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_1000379c, i32* %r7.global-to-local, align 4
  %v0_100037a0 = load i32, i32* @r31, align 4
  %v1_100037a0 = add i32 %v0_100037a0, 2
  %v2_100037a0 = inttoptr i32 %v1_100037a0 to i16*
  %v3_100037a0 = load i16, i16* %v2_100037a0, align 2
  %v4_100037a0 = zext i16 %v3_100037a0 to i32
  store i32 %v4_100037a0, i32* %r0.global-to-local, align 4
  %v0_100037a4 = load i32, i32* %r28.global-to-local, align 4
  %v1_100037a8 = mul i32 %v3_1000379c, 24
  store i32 %v1_100037a8, i32* %r7.global-to-local, align 4
  %v4_100037ac = add i32 %v0_100037a0, 6
  %v5_100037ac = inttoptr i32 %v4_100037ac to i16*
  store i16 %v5_10003798, i16* %v5_100037ac, align 2
  %v0_100037b0 = load i32, i32* %r25.global-to-local, align 4
  %v0_100037b4 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_100037b4, i32* %r3.global-to-local, align 4
  %v0_100037b8 = load i32, i32* %r7.global-to-local, align 4
  %v1_100037b8 = load i32, i32* %r27.global-to-local, align 4
  %v2_100037b8 = add i32 %v1_100037b8, %v0_100037b8
  store i32 %v2_100037b8, i32* %r7.global-to-local, align 4
  %v0_100037c0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100037c0 = trunc i32 %v0_100037c0 to i16
  %v3_100037c0 = add i32 %v2_100037b8, 2
  %v4_100037c0 = inttoptr i32 %v3_100037c0 to i16*
  store i16 %v1_100037c0, i16* %v4_100037c0, align 2
  store i32 268449740, i32* @lr, align 4
  %v6_100037c8 = call i32 @function_10009da0(i32 %v0_100037b4, i32 %v0_100037a4, i32 %v0_100037b0, i32 16384, i32 %v2_100037b8, i32 16)
  store i32 %v6_100037c8, i32* %r3.global-to-local, align 4
  %v3_100037cc = load i32, i32* %stack_var_-104, align 4
  %v1_100037d0 = add i32 %v3_100037cc, 1
  store i32 %v1_100037d0, i32* %r9.global-to-local, align 4
  %v1_100037d4 = load i32, i32* %r19.global-to-local, align 4
  %v2_100037d4 = icmp slt i32 %v1_100037d0, %v1_100037d4
  store i32 %v1_100037d0, i32* %stack_var_-104, align 4
  br i1 %v2_100037d4, label %dec_label_pc_10003728, label %dec_label_pc_100037e0

dec_label_pc_100037e0:                            ; preds = %dec_label_pc_10003770
  %v0_100037e0 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100037e0 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_100037e0 = or i1 %v0_100037e0, %v1_100037e0
  br i1 %v2_100037e0, label %dec_label_pc_10003714.preheader, label %dec_label_pc_10003718

dec_label_pc_100037e8:                            ; preds = %dec_label_pc_10003728
  %v1_100037e8 = add i32 %v2_10003734, 16
  %v2_100037e8 = inttoptr i32 %v1_100037e8 to i32*
  %v3_100037e8 = load i32, i32* %v2_100037e8, align 4
  store i32 %v3_100037e8, i32* %r29.global-to-local, align 4
  %v0_100037ec = call i32 @function_10005f3c()
  store i32 %v0_100037ec, i32* %r3.global-to-local, align 4
  %v3_100037f0 = load i32, i32* %stack_var_-104, align 4
  %v1_100037f4 = mul i32 %v3_100037f0, 24
  %v1_100037f8 = load i32, i32* %r27.global-to-local, align 4
  %v2_100037f8 = add i32 %v1_100037f8, %v1_100037f4
  store i32 %v2_100037f8, i32* %r9.global-to-local, align 4
  %v1_100037fc = add i32 %v2_100037f8, 20
  %v2_100037fc = inttoptr i32 %v1_100037fc to i8*
  %v3_100037fc = load i8, i8* %v2_100037fc, align 1
  %v4_100037fc = zext i8 %v3_100037fc to i32
  store i32 %v4_100037fc, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_100037fc, 64
  %v2_10003800 = zext i8 %tmp to i32
  %v3_10003800 = lshr i32 %v0_100037ec, %v2_10003800
  store i32 %v3_10003800, i32* %r3.global-to-local, align 4
  %v0_10003804 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003804 = add i32 %v3_10003800, %v0_10003804
  store i32 %v2_10003804, i32* %r29.global-to-local, align 4
  %v1_10003808 = load i32, i32* %r28.global-to-local, align 4
  %v2_10003808 = add i32 %v1_10003808, 16
  %v3_10003808 = inttoptr i32 %v2_10003808 to i32*
  store i32 %v2_10003804, i32* %v3_10003808, align 4
  %v0_1000380c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_1000380c, label %dec_label_pc_10003810, label %dec_label_pc_1000374c

dec_label_pc_10003810:                            ; preds = %dec_label_pc_100037e8, %dec_label_pc_10003748
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10003814 = call i32 @function_10005f3c()
  store i32 %v0_10003814, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_1000381c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000381c = add i32 %v1_1000381c, 12
  %v3_1000381c = inttoptr i32 %v2_1000381c to i32*
  store i32 %v0_10003814, i32* %v3_1000381c, align 4
  %v0_10003820 = load i32, i32* %r22.global-to-local, align 4
  %v1_10003820 = load i32, i32* @r29, align 4
  %v4_10003820 = icmp eq i32 %v0_10003820, %v1_10003820
  br i1 %v4_10003820, label %dec_label_pc_10003828, label %dec_label_pc_1000375c

dec_label_pc_10003828:                            ; preds = %dec_label_pc_10003810, %dec_label_pc_1000374c
  %v0_10003828 = call i32 @function_10005f3c()
  %v1_10003828 = trunc i32 %v0_10003828 to i16
  store i32 %v0_10003828, i32* %r3.global-to-local, align 4
  %v0_1000382c = load i32, i32* %r23.global-to-local, align 4
  %v1_1000382c = load i32, i32* @r29, align 4
  %v4_1000382c = icmp eq i32 %v0_1000382c, %v1_1000382c
  %v3_10003830 = load i32, i32* %r28.global-to-local, align 4
  %v4_10003830 = add i32 %v3_10003830, 4
  %v5_10003830 = inttoptr i32 %v4_10003830 to i16*
  store i16 %v1_10003828, i16* %v5_10003830, align 2
  br i1 %v4_1000382c, label %dec_label_pc_10003838, label %dec_label_pc_10003828.dec_label_pc_10003764_crit_edge

dec_label_pc_10003828.dec_label_pc_10003764_crit_edge: ; preds = %dec_label_pc_10003828
  %v1_10003764.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10003764

dec_label_pc_10003838:                            ; preds = %dec_label_pc_10003828, %dec_label_pc_1000375c
  %v0_10003838 = call i32 @function_10005f3c()
  %v1_10003838 = trunc i32 %v0_10003838 to i16
  store i32 %v0_10003838, i32* %r3.global-to-local, align 4
  %v0_1000383c = load i32, i32* %r24.global-to-local, align 4
  %v1_1000383c = load i32, i32* @r29, align 4
  %v4_1000383c = icmp eq i32 %v0_1000383c, %v1_1000383c
  %v3_10003840 = load i32, i32* %r28.global-to-local, align 4
  %v4_10003840 = add i32 %v3_10003840, 20
  %v5_10003840 = inttoptr i32 %v4_10003840 to i16*
  store i16 %v1_10003838, i16* %v5_10003840, align 2
  br i1 %v4_1000383c, label %dec_label_pc_10003848, label %dec_label_pc_1000376c

dec_label_pc_10003848:                            ; preds = %dec_label_pc_10003838, %dec_label_pc_10003764
  %v0_10003848 = call i32 @function_10005f3c()
  %v1_10003848 = trunc i32 %v0_10003848 to i16
  store i32 %v0_10003848, i32* %r3.global-to-local, align 4
  %v3_1000384c = load i32, i32* @r31, align 4
  %v4_1000384c = add i32 %v3_1000384c, 2
  %v5_1000384c = inttoptr i32 %v4_1000384c to i16*
  store i16 %v1_10003848, i16* %v5_1000384c, align 2
  %v0_10003850 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003850, label %dec_label_pc_10003770, label %dec_label_pc_10003854

dec_label_pc_10003854:                            ; preds = %dec_label_pc_1000376c, %dec_label_pc_10003848
  %v0_10003854 = load i32, i32* %r28.global-to-local, align 4
  %v1_10003854 = add i32 %v0_10003854, 28
  store i32 %v1_10003854, i32* @r3, align 4
  %v0_10003858 = load i32, i32* %r18.global-to-local, align 4
  store i32 %v0_10003858, i32* @r4, align 4
  %v0_1000385c = call i32 @function_10006110()
  store i32 %v0_1000385c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003770

dec_label_pc_10003864:                            ; preds = %dec_label_pc_1000361c
  %v0_10003864 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10003864, i32* %r3.global-to-local, align 4
  store i32 268449900, i32* @lr, align 4
  %v0_10003868 = call i32 @function_100090cc()
  store i32 %v0_10003868, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000386c

dec_label_pc_1000386c:                            ; preds = %dec_label_pc_100034a0, %dec_label_pc_10003864
  store i32 %v0_100034b8, i32* %r0.global-to-local, align 4
  %v1_10003880 = call %0 @__asm_mtcrf(i32 56, i32 %v0_100034a8)
  store i32 %v0_100034ec, i32* %r28.global-to-local, align 4
  store i32 %v0_100034f4, i32* %r29.global-to-local, align 4
  store i32 %v0_100034fc, i32* %r30.global-to-local, align 4
  store i32 %v0_10003500, i32* %r31.global-to-local, align 4
  %v0_100038c8 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100038c8

dec_label_pc_100038cc:                            ; preds = %dec_label_pc_1000366c
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100038d4

dec_label_pc_100038d4:                            ; preds = %dec_label_pc_100038d4, %dec_label_pc_100038cc
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268450016, i32* @lr, align 4
  %v2_100038dc = call i32 @function_1000a178(i32 1510, i32 1)
  store i32 %v2_100038dc, i32* %r3.global-to-local, align 4
  %v3_100038e0 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100038e0, i32* %r9.global-to-local, align 4
  %v0_100038e4 = load i32, i32* @r31, align 4
  %v1_100038e4 = mul i32 %v0_100038e4, 4
  store i32 %v1_100038e4, i32* %r0.global-to-local, align 4
  %v1_100038e8 = load i32, i32* %r20.global-to-local, align 4
  %v3_100038e8 = add i32 %v1_100038e8, %v1_100038e4
  %v4_100038e8 = inttoptr i32 %v3_100038e8 to i32*
  store i32 %v2_100038dc, i32* %v4_100038e8, align 4
  %v0_100038ec = load i32, i32* %r9.global-to-local, align 4
  %v1_100038ec = mul i32 %v0_100038ec, 4
  store i32 %v1_100038ec, i32* %r9.global-to-local, align 4
  %v1_100038f0 = load i32, i32* %r20.global-to-local, align 4
  %v2_100038f0 = add i32 %v1_100038f0, %v1_100038ec
  %v3_100038f0 = inttoptr i32 %v2_100038f0 to i32*
  %v4_100038f0 = load i32, i32* %v3_100038f0, align 4
  store i32 %v4_100038f0, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_100038f8 = inttoptr i32 %v4_100038f0 to i32*
  %v2_100038f8 = load i32, i32* %v1_100038f8, align 4
  store i32 %v2_100038f8, i32* %r0.global-to-local, align 4
  %v1_100038fc = add i32 %v4_100038f0, 20
  store i32 %v1_100038fc, i32* %r10.global-to-local, align 4
  %v0_10003900 = load i32, i32* %r16.global-to-local, align 4
  %v1_10003900 = trunc i32 %v0_10003900 to i8
  %v3_10003900 = add i32 %v4_100038f0, 8
  %v4_10003900 = inttoptr i32 %v3_10003900 to i8*
  store i8 %v1_10003900, i8* %v4_10003900, align 1
  %v1_10003904 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10003904, i32* %r0.global-to-local, align 4
  %v0_10003908 = load i32, i32* @r30, align 4
  %v1_10003908 = load i32, i32* %r11.global-to-local, align 4
  %v2_10003908 = add i32 %v1_10003908, 12
  %v3_10003908 = inttoptr i32 %v2_10003908 to i32*
  store i32 %v0_10003908, i32* %v3_10003908, align 4
  %v1_1000390c = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_10003910 = load i32, i32* %r22.global-to-local, align 4
  %v1_10003910 = trunc i32 %v0_10003910 to i16
  %v2_10003910 = load i32, i32* %r11.global-to-local, align 4
  %v3_10003910 = add i32 %v2_10003910, 4
  %v4_10003910 = inttoptr i32 %v3_10003910 to i16*
  store i16 %v1_10003910, i16* %v4_10003910, align 2
  %v1_10003914 = load i32, i32* %r11.global-to-local, align 4
  %v2_10003914 = inttoptr i32 %v1_10003914 to i32*
  store i32 %v1_1000390c, i32* %v2_10003914, align 4
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_1000391c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000391c = add i32 %v2_1000391c, 9
  %v4_1000391c = inttoptr i32 %v3_1000391c to i8*
  store i8 17, i8* %v4_1000391c, align 1
  %v0_10003920 = load i32, i32* %r15.global-to-local, align 4
  %v1_10003920 = trunc i32 %v0_10003920 to i8
  %v2_10003920 = load i32, i32* %r11.global-to-local, align 4
  %v3_10003920 = add i32 %v2_10003920, 1
  %v4_10003920 = inttoptr i32 %v3_10003920 to i8*
  store i8 %v1_10003920, i8* %v4_10003920, align 1
  %v0_10003924 = load i32, i32* @r28, align 4
  %v1_10003924 = trunc i32 %v0_10003924 to i16
  %v2_10003924 = load i32, i32* %r11.global-to-local, align 4
  %v3_10003924 = add i32 %v2_10003924, 2
  %v4_10003924 = inttoptr i32 %v3_10003924 to i16*
  store i16 %v1_10003924, i16* %v4_10003924, align 2
  %v3_10003928 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10003928, i32* %r9.global-to-local, align 4
  %v0_1000392c = load i32, i32* %r23.global-to-local, align 4
  %v1_1000392c = trunc i32 %v0_1000392c to i16
  %v2_1000392c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000392c = add i32 %v2_1000392c, 20
  %v4_1000392c = inttoptr i32 %v3_1000392c to i16*
  store i16 %v1_1000392c, i16* %v4_1000392c, align 2
  %v0_10003930 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003930 = add i32 %v0_10003930, 1
  store i32 %v1_10003930, i32* %r31.global-to-local, align 4
  %v1_10003934 = mul i32 %v0_10003930, 24
  %v1_10003938 = load i32, i32* %r19.global-to-local, align 4
  %v2_10003938 = icmp slt i32 %v1_10003930, %v1_10003938
  %v1_1000393c = load i32, i32* %r27.global-to-local, align 4
  %v2_1000393c = add i32 %v1_1000393c, %v1_10003934
  store i32 %v2_1000393c, i32* %r9.global-to-local, align 4
  %v1_10003940 = add i32 %v2_1000393c, 16
  %v2_10003940 = inttoptr i32 %v1_10003940 to i32*
  %v3_10003940 = load i32, i32* %v2_10003940, align 4
  store i32 %v3_10003940, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r9.global-to-local, align 4
  %v2_10003948 = load i32, i32* %r11.global-to-local, align 4
  %v3_10003948 = add i32 %v2_10003948, 6
  %v4_10003948 = inttoptr i32 %v3_10003948 to i16*
  store i16 16384, i16* %v4_10003948, align 2
  %v0_1000394c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000394c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000394c = add i32 %v1_1000394c, 16
  %v3_1000394c = inttoptr i32 %v2_1000394c to i32*
  store i32 %v0_1000394c, i32* %v3_1000394c, align 4
  %v0_10003950 = load i32, i32* @r29, align 4
  %v1_10003950 = trunc i32 %v0_10003950 to i16
  %v2_10003950 = load i32, i32* %r10.global-to-local, align 4
  %v3_10003950 = add i32 %v2_10003950, 4
  %v4_10003950 = inttoptr i32 %v3_10003950 to i16*
  store i16 %v1_10003950, i16* %v4_10003950, align 2
  %v0_10003954 = load i32, i32* %r24.global-to-local, align 4
  %v1_10003954 = trunc i32 %v0_10003954 to i16
  %v2_10003954 = load i32, i32* %r10.global-to-local, align 4
  %v3_10003954 = add i32 %v2_10003954, 2
  %v4_10003954 = inttoptr i32 %v3_10003954 to i16*
  store i16 %v1_10003954, i16* %v4_10003954, align 2
  %v0_10003958 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10003958, i32* %stack_var_-104, align 4
  br i1 %v2_10003938, label %dec_label_pc_100038d4, label %dec_label_pc_1000370c

dec_label_pc_10003964:                            ; preds = %dec_label_pc_1000365c
  %v0_10003964 = load i32, i32* %r30.global-to-local, align 4
  %v3_10003964 = icmp eq i32 %v0_10003964, -1
  store i1 %v3_10003964, i1* %cr2_eq.global-to-local, align 1
  %v0_10003968 = load i32, i32* %r17.global-to-local, align 4
  %v3_10003968 = icmp eq i32 %v0_10003968, 0
  store i1 %v3_10003968, i1* %cr3_eq.global-to-local, align 1
  %v1_1000396c = add nuw nsw i32 %v0_1000396c, 28
  store i32 %v1_1000396c, i32* %r25.global-to-local, align 4
  %v1_10003970 = add nuw nsw i32 %v0_1000396c, 8
  store i32 %v1_10003970, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10003714.preheader

; uselistorder directives
  uselistorder i32 %v1_100038ec, { 1, 0 }
  uselistorder i32 %v1_100038e4, { 1, 0 }
  uselistorder i32 %v0_10003848, { 1, 0 }
  uselistorder i32 %v0_10003838, { 1, 0 }
  uselistorder i32 %v0_10003828, { 1, 0 }
  uselistorder i32 %v1_10003820, { 1, 0 }
  uselistorder i1 %v1_100037e0, { 1, 0 }
  uselistorder i1 %v0_100037e0, { 1, 0 }
  uselistorder i32 %v1_100037d0, { 0, 2, 3, 1 }
  uselistorder i32 %v4_10003798, { 1, 0 }
  uselistorder i32 %v1_1000372c, { 1, 0 }
  uselistorder i32 %v1_100036a0, { 1, 0 }
  uselistorder i32 %v1_10003698, { 1, 0 }
  uselistorder i32 %v0_1000396c, { 1, 0, 3, 2 }
  uselistorder i32 %v1_10003640, { 1, 2, 0 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32* %r30.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 20, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 0, 1 }
  uselistorder i32* %r29.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r28.global-to-local, { 0, 9, 1, 2, 3, 4, 5, 6, 7, 8, 10 }
  uselistorder i32* %r18.global-to-local, { 1, 2, 0 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder i32 ()* @function_10006110, { 10, 9, 8, 7, 6, 5, 4, 3, 0, 1, 2 }
  uselistorder i32 1510, { 0, 5, 1, 6, 2, 7, 3, 8, 4, 9 }
  uselistorder label %dec_label_pc_1000386c, { 1, 0 }
  uselistorder label %dec_label_pc_10003854, { 1, 0 }
  uselistorder label %dec_label_pc_10003770, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10003718, { 1, 0 }
  uselistorder label %dec_label_pc_10003714, { 1, 0 }
  uselistorder label %dec_label_pc_10003714.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000365c, { 1, 0 }
}

define i32 @function_1000397c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000397c:
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %v0_10003980 = load i32, i32* @lr, align 4
  store i32 %v0_10003980, i32* %r0.global-to-local, align 4
  %v0_10003984 = call i32 @__asm_mfcr()
  store i32 %v0_10003984, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r27.global-to-local, align 4
  store i32 %v0_10003984, i32* %r23.global-to-local, align 4
  %v0_100039bc = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100039c4 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_100039cc = load i32, i32* @r30, align 4
  store i32 268450284, i32* @lr, align 4
  %v2_100039e8 = call i32 @function_1000a178(i32 4, i32 4)
  store i32 %v2_100039e8, i32* %r24.global-to-local, align 4
  %v0_100039f0 = load i32, i32* @r28, align 4
  %v0_100039f4 = load i32, i32* @r29, align 4
  store i32 %v0_100039f4, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 268450308, i32* @lr, align 4
  %v4_10003a00 = inttoptr i32 %v0_100039f0 to i32*
  %v5_10003a00 = call i32 @function_100006a8(i32 %v0_100039f4, i32* %v4_10003a00, i32 2, i32 0)
  store i32 65535, i32* %r6.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  %v0_10003a10 = load i32, i32* @r28, align 4
  %v1_10003a14 = urem i32 %v5_10003a00, 256
  store i32 %v1_10003a14, i32* %r19.global-to-local, align 4
  %v0_10003a18 = load i32, i32* @r29, align 4
  store i32 %v0_10003a18, i32* %r3.global-to-local, align 4
  store i32 268450336, i32* @lr, align 4
  %v4_10003a1c = inttoptr i32 %v0_10003a10 to i32*
  %v5_10003a1c = call i32 @function_100006a8(i32 %v0_10003a18, i32* %v4_10003a1c, i32 3, i32 65535)
  %v0_10003a20 = load i32, i32* @r28, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 64, i32* %r6.global-to-local, align 4
  store i32 %v5_10003a1c, i32* %r21.global-to-local, align 4
  %v0_10003a30 = load i32, i32* @r29, align 4
  store i32 %v0_10003a30, i32* %r3.global-to-local, align 4
  store i32 268450360, i32* @lr, align 4
  %v4_10003a34 = inttoptr i32 %v0_10003a20 to i32*
  %v5_10003a34 = call i32 @function_100006a8(i32 %v0_10003a30, i32* %v4_10003a34, i32 4, i32 64)
  %v0_10003a38 = load i32, i32* @r28, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v1_10003a44 = urem i32 %v5_10003a34, 256
  store i32 %v1_10003a44, i32* %r26.global-to-local, align 4
  %v0_10003a48 = load i32, i32* @r29, align 4
  store i32 %v0_10003a48, i32* %r3.global-to-local, align 4
  store i32 268450384, i32* @lr, align 4
  %v4_10003a4c = inttoptr i32 %v0_10003a38 to i32*
  %v5_10003a4c = call i32 @function_100006a8(i32 %v0_10003a48, i32* %v4_10003a4c, i32 5, i32 0)
  store i32 65535, i32* %r6.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  %v0_10003a5c = load i32, i32* @r28, align 4
  %v1_10003a60 = urem i32 %v5_10003a4c, 256
  store i32 %v1_10003a60, i32* @r31, align 4
  %v0_10003a64 = load i32, i32* @r29, align 4
  store i32 %v0_10003a64, i32* %r3.global-to-local, align 4
  store i32 268450412, i32* @lr, align 4
  %v4_10003a68 = inttoptr i32 %v0_10003a5c to i32*
  %v5_10003a68 = call i32 @function_100006a8(i32 %v0_10003a64, i32* %v4_10003a68, i32 6, i32 65535)
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 27015, i32* %r6.global-to-local, align 4
  %v0_10003a74 = load i32, i32* @r28, align 4
  store i32 %v5_10003a68, i32* %r22.global-to-local, align 4
  %v0_10003a7c = load i32, i32* @r29, align 4
  store i32 %v0_10003a7c, i32* %r3.global-to-local, align 4
  store i32 268450436, i32* @lr, align 4
  %v4_10003a80 = inttoptr i32 %v0_10003a74 to i32*
  %v5_10003a80 = call i32 @function_100006a8(i32 %v0_10003a7c, i32* %v4_10003a80, i32 7, i32 27015)
  store i32 %v5_10003a80, i32* %r29.global-to-local, align 4
  store i32 25, i32* %r3.global-to-local, align 4
  store i32 268450448, i32* @lr, align 4
  %v1_10003a8c = call i32 @function_100082a8(i32 25)
  store i32 25, i32* %r3.global-to-local, align 4
  %v3_10003a98 = call i32 @function_100081f4(i32 25, i32* nonnull %stack_var_-84)
  store i32 %v3_10003a98, i32* %r30.global-to-local, align 4
  store i32 17, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268450480, i32* @lr, align 4
  %v3_10003aac = call i32 @function_10009e1c(i32 2, i32 3, i32 17)
  store i32 %v3_10003aac, i32* %r3.global-to-local, align 4
  %v3_10003ab0 = icmp eq i32 %v3_10003aac, -1
  store i32 %v3_10003aac, i32* %r25.global-to-local, align 4
  br i1 %v3_10003ab0, label %dec_label_pc_10003d00, label %dec_label_pc_10003abc

dec_label_pc_10003abc:                            ; preds = %dec_label_pc_1000397c
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  %v2_10003ac8 = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v2_10003ac8, i32* %r6.global-to-local, align 4
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-88, align 4
  store i32 268450520, i32* @lr, align 4
  %v4_10003ad4 = call i32 @function_10009de0(i32 0, i32 3, i32 %v2_10003ac8, i32 4)
  store i32 %v4_10003ad4, i32* %r3.global-to-local, align 4
  %v3_10003ad8 = icmp eq i32 %v4_10003ad4, -1
  br i1 %v3_10003ad8, label %dec_label_pc_10003cf8, label %dec_label_pc_10003ae0

dec_label_pc_10003ae0:                            ; preds = %dec_label_pc_10003abc
  %v0_10003ae0 = load i32, i32* %r23.global-to-local, align 4
  %v1_10003ae0 = icmp slt i32 %v0_10003ae0, 0
  %v3_10003ae0 = icmp eq i32 %v0_10003ae0, 0
  store i1 %v1_10003ae0, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10003ae0, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10003ae8 = load i32, i32* %r21.global-to-local, align 4
  %v1_10003ae8 = urem i32 %v0_10003ae8, 65536
  store i32 %v1_10003ae8, i32* %r20.global-to-local, align 4
  store i32 0, i32* %stack_var_-88, align 4
  %v0_10003af0 = load i32, i32* %r22.global-to-local, align 4
  %v1_10003af0 = urem i32 %v0_10003af0, 65536
  store i32 %v1_10003af0, i32* %r21.global-to-local, align 4
  %v0_10003af4 = load i32, i32* %r29.global-to-local, align 4
  %v1_10003af4 = urem i32 %v0_10003af4, 65536
  store i32 %v1_10003af4, i32* %r22.global-to-local, align 4
  %tmp32 = icmp slt i32 %v0_10003ae0, 1
  br i1 %tmp32, label %dec_label_pc_10003bcc.outer, label %dec_label_pc_10003afc

dec_label_pc_10003afc:                            ; preds = %dec_label_pc_10003ae0
  %v0_10003afc = load i32, i32* @r31, align 4
  %v3_10003afc = icmp eq i32 %v0_10003afc, 0
  store i1 %v3_10003afc, i1* %cr3_eq.global-to-local, align 1
  store i32 4, i32* %r29.global-to-local, align 4
  store i32 5, i32* %r28.global-to-local, align 4
  store i32 16384, i32* %r18.global-to-local, align 4
  store i32 17, i32* %r17.global-to-local, align 4
  store i32 -1, i32* %r16.global-to-local, align 4
  br label %dec_label_pc_10003b1c

dec_label_pc_10003b1c:                            ; preds = %dec_label_pc_10003b78, %dec_label_pc_10003afc
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 268450600, i32* @lr, align 4
  %v2_10003b24 = call i32 @function_1000a178(i32 128, i32 1)
  store i32 %v2_10003b24, i32* %r3.global-to-local, align 4
  %v3_10003b28 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_10003b28, i32* %r0.global-to-local, align 4
  %v0_10003b2c = load i32, i32* @r31, align 4
  %v1_10003b2c = mul i32 %v0_10003b2c, 4
  store i32 %v1_10003b2c, i32* %r9.global-to-local, align 4
  %v0_10003b30 = load i32, i32* @r30, align 4
  %v2_10003b34 = load i32, i32* %r24.global-to-local, align 4
  %v3_10003b34 = add i32 %v2_10003b34, %v1_10003b2c
  %v4_10003b34 = inttoptr i32 %v3_10003b34 to i32*
  store i32 %v2_10003b24, i32* %v4_10003b34, align 4
  %v0_10003b38 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003b38 = mul i32 %v0_10003b38, 4
  store i32 %v1_10003b38, i32* %r0.global-to-local, align 4
  %v0_10003b3c = load i32, i32* %r24.global-to-local, align 4
  %v2_10003b3c = add i32 %v0_10003b3c, %v1_10003b38
  %v3_10003b3c = inttoptr i32 %v2_10003b3c to i32*
  %v4_10003b3c = load i32, i32* %v3_10003b3c, align 4
  store i32 %v4_10003b3c, i32* %r10.global-to-local, align 4
  %v1_10003b40 = inttoptr i32 %v4_10003b3c to i32*
  %v2_10003b40 = load i32, i32* %v1_10003b40, align 4
  store i32 %v2_10003b40, i32* %r0.global-to-local, align 4
  %v1_10003b44 = add i32 %v4_10003b3c, 32
  store i32 %v1_10003b44, i32* %r3.global-to-local, align 4
  %v0_10003b48 = load i32, i32* %r20.global-to-local, align 4
  %v1_10003b48 = trunc i32 %v0_10003b48 to i16
  %v3_10003b48 = add i32 %v4_10003b3c, 4
  %v4_10003b48 = inttoptr i32 %v3_10003b48 to i16*
  store i16 %v1_10003b48, i16* %v4_10003b48, align 2
  %v0_10003b4c = load i32, i32* %r10.global-to-local, align 4
  %v1_10003b4c = add i32 %v0_10003b4c, 20
  store i32 %v1_10003b4c, i32* %r8.global-to-local, align 4
  %v1_10003b50 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10003b50, i32* %r0.global-to-local, align 4
  %v1_10003b54 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10003b54, i32* %r0.global-to-local, align 4
  %v1_10003b58 = load i32, i32* %r10.global-to-local, align 4
  %v2_10003b58 = inttoptr i32 %v1_10003b58 to i32*
  store i32 %v1_10003b54, i32* %v2_10003b58, align 4
  %v0_10003b5c = load i32, i32* %r19.global-to-local, align 4
  %v1_10003b5c = trunc i32 %v0_10003b5c to i8
  %v2_10003b5c = load i32, i32* %r10.global-to-local, align 4
  %v3_10003b5c = add i32 %v2_10003b5c, 1
  %v4_10003b5c = inttoptr i32 %v3_10003b5c to i8*
  store i8 %v1_10003b5c, i8* %v4_10003b5c, align 1
  %v3_10003b60 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10003b60, i32* %r9.global-to-local, align 4
  %v0_10003b64 = load i32, i32* %r26.global-to-local, align 4
  %v1_10003b64 = trunc i32 %v0_10003b64 to i8
  %v2_10003b64 = load i32, i32* %r10.global-to-local, align 4
  %v3_10003b64 = add i32 %v2_10003b64, 8
  %v4_10003b64 = inttoptr i32 %v3_10003b64 to i8*
  store i8 %v1_10003b64, i8* %v4_10003b64, align 1
  %v0_10003b68 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003b68 = add i32 %v0_10003b68, 32
  store i32 %v1_10003b68, i32* %r9.global-to-local, align 4
  %v1_10003b6c = trunc i32 %v1_10003b68 to i16
  %v2_10003b6c = load i32, i32* %r10.global-to-local, align 4
  %v3_10003b6c = add i32 %v2_10003b6c, 2
  %v4_10003b6c = inttoptr i32 %v3_10003b6c to i16*
  store i16 %v1_10003b6c, i16* %v4_10003b6c, align 2
  %v0_10003b70 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003b70, label %dec_label_pc_10003b78, label %dec_label_pc_10003b74

dec_label_pc_10003b74:                            ; preds = %dec_label_pc_10003b1c
  %v0_10003b74 = load i32, i32* %r18.global-to-local, align 4
  %v1_10003b74 = trunc i32 %v0_10003b74 to i16
  %v2_10003b74 = load i32, i32* %r10.global-to-local, align 4
  %v3_10003b74 = add i32 %v2_10003b74, 6
  %v4_10003b74 = inttoptr i32 %v3_10003b74 to i16*
  store i16 %v1_10003b74, i16* %v4_10003b74, align 2
  br label %dec_label_pc_10003b78

dec_label_pc_10003b78:                            ; preds = %dec_label_pc_10003b1c, %dec_label_pc_10003b74
  %v0_10003b78 = load i32, i32* %r17.global-to-local, align 4
  %v1_10003b78 = trunc i32 %v0_10003b78 to i8
  %v2_10003b78 = load i32, i32* %r10.global-to-local, align 4
  %v3_10003b78 = add i32 %v2_10003b78, 9
  %v4_10003b78 = inttoptr i32 %v3_10003b78 to i8*
  store i8 %v1_10003b78, i8* %v4_10003b78, align 1
  %v0_10003b7c = load i32, i32* %r21.global-to-local, align 4
  %v1_10003b7c = trunc i32 %v0_10003b7c to i16
  %v2_10003b7c = load i32, i32* %r10.global-to-local, align 4
  %v3_10003b7c = add i32 %v2_10003b7c, 20
  %v4_10003b7c = inttoptr i32 %v3_10003b7c to i16*
  store i16 %v1_10003b7c, i16* %v4_10003b7c, align 2
  %v3_10003b80 = load i32, i32* %stack_var_-88, align 4
  %v3_10003b84 = load i32, i32* @global_var_1001c258.14, align 4
  store i32 %v3_10003b84, i32* %r0.global-to-local, align 4
  %v1_10003b88 = mul i32 %v3_10003b80, 24
  store i32 %v1_10003b88, i32* %r9.global-to-local, align 4
  %v0_10003b8c = load i32, i32* %r22.global-to-local, align 4
  %v1_10003b8c = trunc i32 %v0_10003b8c to i16
  %v2_10003b8c = load i32, i32* %r8.global-to-local, align 4
  %v3_10003b8c = add i32 %v2_10003b8c, 2
  %v4_10003b8c = inttoptr i32 %v3_10003b8c to i16*
  store i16 %v1_10003b8c, i16* %v4_10003b8c, align 2
  %v0_10003b90 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003b90 = load i32, i32* %r10.global-to-local, align 4
  %v2_10003b90 = add i32 %v1_10003b90, 12
  %v3_10003b90 = inttoptr i32 %v2_10003b90 to i32*
  store i32 %v0_10003b90, i32* %v3_10003b90, align 4
  %v0_10003b94 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003b94 = load i32, i32* %r27.global-to-local, align 4
  %v2_10003b94 = add i32 %v1_10003b94, %v0_10003b94
  store i32 %v2_10003b94, i32* %r9.global-to-local, align 4
  %v1_10003b98 = add i32 %v2_10003b94, 16
  %v2_10003b98 = inttoptr i32 %v1_10003b98 to i32*
  %v3_10003b98 = load i32, i32* %v2_10003b98, align 4
  store i32 %v3_10003b98, i32* %r0.global-to-local, align 4
  %v3_10003b9c = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10003b9c, i32* %r11.global-to-local, align 4
  %v0_10003ba0 = load i32, i32* %r16.global-to-local, align 4
  %v1_10003ba0 = load i32, i32* %r10.global-to-local, align 4
  %v2_10003ba0 = add i32 %v1_10003ba0, 28
  %v3_10003ba0 = inttoptr i32 %v2_10003ba0 to i32*
  store i32 %v0_10003ba0, i32* %v3_10003ba0, align 4
  %v0_10003ba4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003ba4 = load i32, i32* %r10.global-to-local, align 4
  %v2_10003ba4 = add i32 %v1_10003ba4, 16
  %v3_10003ba4 = inttoptr i32 %v2_10003ba4 to i32*
  store i32 %v0_10003ba4, i32* %v3_10003ba4, align 4
  %v0_10003ba8 = load i32, i32* %r11.global-to-local, align 4
  %v1_10003ba8 = add i32 %v0_10003ba8, 12
  store i32 %v1_10003ba8, i32* %r11.global-to-local, align 4
  %v1_10003bac = trunc i32 %v1_10003ba8 to i16
  %v2_10003bac = load i32, i32* %r8.global-to-local, align 4
  %v3_10003bac = add i32 %v2_10003bac, 4
  %v4_10003bac = inttoptr i32 %v3_10003bac to i16*
  store i16 %v1_10003bac, i16* %v4_10003bac, align 2
  %v3_10003bb0 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10003bb0, i32* %r5.global-to-local, align 4
  store i32 268450744, i32* @lr, align 4
  %v3_10003bb4 = call i32 @function_10008990(i32 %v3_10003bb0, i32 %v0_10003b30, i32 %v3_10003bb0)
  store i32 %v3_10003bb4, i32* %r3.global-to-local, align 4
  %v3_10003bb8 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_10003bb8, i32* %r9.global-to-local, align 4
  %v1_10003bbc = add i32 %v3_10003bb8, 1
  %v1_10003bc0 = load i32, i32* %r23.global-to-local, align 4
  %v2_10003bc0 = icmp slt i32 %v1_10003bbc, %v1_10003bc0
  store i32 %v1_10003bbc, i32* %stack_var_-88, align 4
  br i1 %v2_10003bc0, label %dec_label_pc_10003b1c, label %dec_label_pc_10003bcc.preheader.loopexit

dec_label_pc_10003bcc.preheader.loopexit:         ; preds = %dec_label_pc_10003b78
  %v0_10003bcc.pre.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10003bcc.pre.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10003bcc.outer

dec_label_pc_10003bcc.outer:                      ; preds = %dec_label_pc_10003c98, %dec_label_pc_10003ae0, %dec_label_pc_10003bcc.preheader.loopexit
  %v1_10003bcc.ph34 = phi i1 [ %v1_10003ae0, %dec_label_pc_10003ae0 ], [ %v1_10003bcc.pre.pre, %dec_label_pc_10003bcc.preheader.loopexit ], [ %v1_10003c98, %dec_label_pc_10003c98 ]
  %v0_10003bcc.ph35 = phi i1 [ %v3_10003ae0, %dec_label_pc_10003ae0 ], [ %v0_10003bcc.pre.pre, %dec_label_pc_10003bcc.preheader.loopexit ], [ %v0_10003c98, %dec_label_pc_10003c98 ]
  %v2_10003bcc = or i1 %v1_10003bcc.ph34, %v0_10003bcc.ph35
  br label %dec_label_pc_10003bcc

dec_label_pc_10003bcc:                            ; preds = %dec_label_pc_10003bcc.outer, %dec_label_pc_10003bcc
  br i1 %v2_10003bcc, label %dec_label_pc_10003bcc, label %dec_label_pc_10003bd0

dec_label_pc_10003bd0:                            ; preds = %dec_label_pc_10003bcc, %dec_label_pc_10003c98
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 0, i32* %stack_var_-88, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10003be0

dec_label_pc_10003be0:                            ; preds = %dec_label_pc_10003c20, %dec_label_pc_10003bd0
  %v0_10003bf0 = phi i32 [ %v1_10003c88, %dec_label_pc_10003c20 ], [ 0, %dec_label_pc_10003bd0 ]
  %v1_10003be0 = mul i32 %v0_10003bf0, 24
  store i32 65535, i32* %r30.global-to-local, align 4
  %v1_10003bec = load i32, i32* %r27.global-to-local, align 4
  %v2_10003bec = add i32 %v1_10003bec, %v1_10003be0
  store i32 %v2_10003bec, i32* %r10.global-to-local, align 4
  %v1_10003bf0 = mul i32 %v0_10003bf0, 4
  store i32 %v1_10003bf0, i32* %r0.global-to-local, align 4
  %v1_10003bf4 = add i32 %v2_10003bec, 20
  %v2_10003bf4 = inttoptr i32 %v1_10003bf4 to i8*
  %v3_10003bf4 = load i8, i8* %v2_10003bf4, align 1
  %v4_10003bf4 = zext i8 %v3_10003bf4 to i32
  store i32 %v4_10003bf4, i32* %r9.global-to-local, align 4
  %v0_10003bf8 = load i32, i32* %r24.global-to-local, align 4
  %v2_10003bf8 = add i32 %v0_10003bf8, %v1_10003bf0
  %v3_10003bf8 = inttoptr i32 %v2_10003bf8 to i32*
  %v4_10003bf8 = load i32, i32* %v3_10003bf8, align 4
  store i32 %v4_10003bf8, i32* %r28.global-to-local, align 4
  %v1_10003c00 = add i32 %v4_10003bf8, 20
  store i32 %v1_10003c00, i32* @r31, align 4
  %tmp33 = icmp ult i8 %v3_10003bf4, 32
  br i1 %tmp33, label %dec_label_pc_10003ca0, label %dec_label_pc_10003c08

dec_label_pc_10003c08:                            ; preds = %dec_label_pc_10003be0
  %v0_10003c08 = load i32, i32* %r20.global-to-local, align 4
  %v4_10003c08 = icmp eq i32 %v0_10003c08, 65535
  br i1 %v4_10003c08, label %dec_label_pc_10003ccc, label %dec_label_pc_10003c10

dec_label_pc_10003c10:                            ; preds = %dec_label_pc_10003ca0.dec_label_pc_10003c10_crit_edge, %dec_label_pc_10003c08
  %v1_10003c10 = phi i32 [ %v1_10003c10.pre, %dec_label_pc_10003ca0.dec_label_pc_10003c10_crit_edge ], [ 65535, %dec_label_pc_10003c08 ]
  %v0_10003c10 = load i32, i32* %r21.global-to-local, align 4
  %v4_10003c10 = icmp eq i32 %v0_10003c10, %v1_10003c10
  br i1 %v4_10003c10, label %dec_label_pc_10003cdc, label %dec_label_pc_10003c18

dec_label_pc_10003c18:                            ; preds = %dec_label_pc_10003ccc.dec_label_pc_10003c18_crit_edge, %dec_label_pc_10003c10
  %v1_10003c18 = phi i32 [ %v1_10003c18.pre, %dec_label_pc_10003ccc.dec_label_pc_10003c18_crit_edge ], [ %v1_10003c10, %dec_label_pc_10003c10 ]
  %v0_10003c18 = load i32, i32* %r22.global-to-local, align 4
  %v4_10003c18 = icmp eq i32 %v0_10003c18, %v1_10003c18
  br i1 %v4_10003c18, label %dec_label_pc_10003cec, label %dec_label_pc_10003c20

dec_label_pc_10003c20:                            ; preds = %dec_label_pc_10003cdc, %dec_label_pc_10003c18, %dec_label_pc_10003cec
  %v0_10003c20 = load i32, i32* %r26.global-to-local, align 4
  %v1_10003c20 = trunc i32 %v0_10003c20 to i16
  %v2_10003c20 = load i32, i32* %r28.global-to-local, align 4
  %v3_10003c20 = add i32 %v2_10003c20, 10
  %v4_10003c20 = inttoptr i32 %v3_10003c20 to i16*
  store i16 %v1_10003c20, i16* %v4_10003c20, align 2
  %v0_10003c28 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003c28, i32* @r3, align 4
  %v2_10003c2c = call i32 @function_100043cc(i32 %v0_10003c28, i32 20)
  %v3_10003c2c = trunc i32 %v2_10003c2c to i16
  store i32 %v2_10003c2c, i32* %r3.global-to-local, align 4
  %v3_10003c30 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10003c30, i32* %r6.global-to-local, align 4
  %v3_10003c34 = load i32, i32* %r28.global-to-local, align 4
  %v4_10003c34 = add i32 %v3_10003c34, 10
  %v5_10003c34 = inttoptr i32 %v4_10003c34 to i16*
  store i16 %v3_10003c2c, i16* %v5_10003c34, align 2
  %v0_10003c38 = load i32, i32* @r31, align 4
  store i32 %v0_10003c38, i32* @r4, align 4
  %v0_10003c3c = load i32, i32* %r26.global-to-local, align 4
  %v1_10003c3c = trunc i32 %v0_10003c3c to i16
  %v3_10003c3c = add i32 %v0_10003c38, 6
  %v4_10003c3c = inttoptr i32 %v3_10003c3c to i16*
  store i16 %v1_10003c3c, i16* %v4_10003c3c, align 2
  %v0_10003c40 = load i32, i32* %r6.global-to-local, align 4
  %v1_10003c40 = add i32 %v0_10003c40, 12
  store i32 %v1_10003c40, i32* %r6.global-to-local, align 4
  %v0_10003c44 = load i32, i32* @r31, align 4
  %v1_10003c44 = add i32 %v0_10003c44, 4
  %v2_10003c44 = inttoptr i32 %v1_10003c44 to i16*
  %v3_10003c44 = load i16, i16* %v2_10003c44, align 2
  %v4_10003c44 = zext i16 %v3_10003c44 to i32
  store i32 %v4_10003c44, i32* %r5.global-to-local, align 4
  %v0_10003c48 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003c48, i32* %r3.global-to-local, align 4
  %v4_10003c4c = call i32 @function_10004430(i32 %v0_10003c48, i32 %v0_10003c38, i32 %v4_10003c44, i32 %v1_10003c40)
  %v5_10003c4c = trunc i32 %v4_10003c4c to i16
  store i32 %v4_10003c4c, i32* %r3.global-to-local, align 4
  %v3_10003c50 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_10003c50, i32* %r7.global-to-local, align 4
  %v0_10003c54 = load i32, i32* @r31, align 4
  %v1_10003c54 = add i32 %v0_10003c54, 2
  %v2_10003c54 = inttoptr i32 %v1_10003c54 to i16*
  %v3_10003c54 = load i16, i16* %v2_10003c54, align 2
  %v4_10003c54 = zext i16 %v3_10003c54 to i32
  store i32 %v4_10003c54, i32* %r0.global-to-local, align 4
  %v0_10003c58 = load i32, i32* %r28.global-to-local, align 4
  %v1_10003c5c = mul i32 %v3_10003c50, 24
  store i32 %v1_10003c5c, i32* %r7.global-to-local, align 4
  %v3_10003c60 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10003c60, i32* %r5.global-to-local, align 4
  %v4_10003c64 = add i32 %v0_10003c54, 6
  %v5_10003c64 = inttoptr i32 %v4_10003c64 to i16*
  store i16 %v5_10003c4c, i16* %v5_10003c64, align 2
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_10003c6c = load i32, i32* %r7.global-to-local, align 4
  %v1_10003c6c = load i32, i32* %r27.global-to-local, align 4
  %v2_10003c6c = add i32 %v1_10003c6c, %v0_10003c6c
  store i32 %v2_10003c6c, i32* %r7.global-to-local, align 4
  %v0_10003c70 = load i32, i32* %r5.global-to-local, align 4
  %v1_10003c70 = add i32 %v0_10003c70, 32
  store i32 %v1_10003c70, i32* %r5.global-to-local, align 4
  %v0_10003c74 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003c74 = trunc i32 %v0_10003c74 to i16
  %v3_10003c74 = add i32 %v2_10003c6c, 2
  %v4_10003c74 = inttoptr i32 %v3_10003c74 to i16*
  store i16 %v1_10003c74, i16* %v4_10003c74, align 2
  %v0_10003c78 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10003c78, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 268450948, i32* @lr, align 4
  %v6_10003c80 = call i32 @function_10009da0(i32 %v0_10003c78, i32 %v0_10003c58, i32 %v1_10003c70, i32 16384, i32 %v2_10003c6c, i32 16)
  store i32 %v6_10003c80, i32* %r3.global-to-local, align 4
  %v3_10003c84 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_10003c84, i32* %r9.global-to-local, align 4
  %v1_10003c88 = add i32 %v3_10003c84, 1
  store i32 %v1_10003c88, i32* %r11.global-to-local, align 4
  %v1_10003c8c = load i32, i32* %r23.global-to-local, align 4
  %v2_10003c8c = icmp slt i32 %v1_10003c88, %v1_10003c8c
  store i32 %v1_10003c88, i32* %stack_var_-88, align 4
  br i1 %v2_10003c8c, label %dec_label_pc_10003be0, label %dec_label_pc_10003c98

dec_label_pc_10003c98:                            ; preds = %dec_label_pc_10003c20
  %v0_10003c98 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10003c98 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10003c98 = or i1 %v0_10003c98, %v1_10003c98
  br i1 %v2_10003c98, label %dec_label_pc_10003bcc.outer, label %dec_label_pc_10003bd0

dec_label_pc_10003ca0:                            ; preds = %dec_label_pc_10003be0
  %v1_10003ca0 = add i32 %v2_10003bec, 16
  %v2_10003ca0 = inttoptr i32 %v1_10003ca0 to i32*
  %v3_10003ca0 = load i32, i32* %v2_10003ca0, align 4
  store i32 %v3_10003ca0, i32* %r29.global-to-local, align 4
  %v0_10003ca4 = call i32 @function_10005f3c()
  store i32 %v0_10003ca4, i32* %r3.global-to-local, align 4
  %v3_10003ca8 = load i32, i32* %stack_var_-88, align 4
  %v0_10003cac = load i32, i32* %r20.global-to-local, align 4
  %v1_10003cac = load i32, i32* %r30.global-to-local, align 4
  %v4_10003cac = icmp eq i32 %v0_10003cac, %v1_10003cac
  %v1_10003cb0 = mul i32 %v3_10003ca8, 24
  %v1_10003cb4 = load i32, i32* %r27.global-to-local, align 4
  %v2_10003cb4 = add i32 %v1_10003cb4, %v1_10003cb0
  store i32 %v2_10003cb4, i32* %r9.global-to-local, align 4
  %v1_10003cb8 = add i32 %v2_10003cb4, 20
  %v2_10003cb8 = inttoptr i32 %v1_10003cb8 to i8*
  %v3_10003cb8 = load i8, i8* %v2_10003cb8, align 1
  %v4_10003cb8 = zext i8 %v3_10003cb8 to i32
  store i32 %v4_10003cb8, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10003cb8, 64
  %v2_10003cbc = zext i8 %tmp to i32
  %v3_10003cbc = lshr i32 %v0_10003ca4, %v2_10003cbc
  store i32 %v3_10003cbc, i32* %r3.global-to-local, align 4
  %v0_10003cc0 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003cc0 = add i32 %v3_10003cbc, %v0_10003cc0
  store i32 %v2_10003cc0, i32* %r29.global-to-local, align 4
  %v1_10003cc4 = load i32, i32* %r28.global-to-local, align 4
  %v2_10003cc4 = add i32 %v1_10003cc4, 16
  %v3_10003cc4 = inttoptr i32 %v2_10003cc4 to i32*
  store i32 %v2_10003cc0, i32* %v3_10003cc4, align 4
  br i1 %v4_10003cac, label %dec_label_pc_10003ccc, label %dec_label_pc_10003ca0.dec_label_pc_10003c10_crit_edge

dec_label_pc_10003ca0.dec_label_pc_10003c10_crit_edge: ; preds = %dec_label_pc_10003ca0
  %v1_10003c10.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10003c10

dec_label_pc_10003ccc:                            ; preds = %dec_label_pc_10003ca0, %dec_label_pc_10003c08
  %v0_10003ccc = call i32 @function_10005f3c()
  %v1_10003ccc = trunc i32 %v0_10003ccc to i16
  store i32 %v0_10003ccc, i32* %r3.global-to-local, align 4
  %v0_10003cd0 = load i32, i32* %r21.global-to-local, align 4
  %v1_10003cd0 = load i32, i32* %r30.global-to-local, align 4
  %v4_10003cd0 = icmp eq i32 %v0_10003cd0, %v1_10003cd0
  %v3_10003cd4 = load i32, i32* %r28.global-to-local, align 4
  %v4_10003cd4 = add i32 %v3_10003cd4, 4
  %v5_10003cd4 = inttoptr i32 %v4_10003cd4 to i16*
  store i16 %v1_10003ccc, i16* %v5_10003cd4, align 2
  br i1 %v4_10003cd0, label %dec_label_pc_10003cdc, label %dec_label_pc_10003ccc.dec_label_pc_10003c18_crit_edge

dec_label_pc_10003ccc.dec_label_pc_10003c18_crit_edge: ; preds = %dec_label_pc_10003ccc
  %v1_10003c18.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10003c18

dec_label_pc_10003cdc:                            ; preds = %dec_label_pc_10003ccc, %dec_label_pc_10003c10
  %v0_10003cdc = call i32 @function_10005f3c()
  %v1_10003cdc = trunc i32 %v0_10003cdc to i16
  store i32 %v0_10003cdc, i32* %r3.global-to-local, align 4
  %v0_10003ce0 = load i32, i32* %r22.global-to-local, align 4
  %v1_10003ce0 = load i32, i32* %r30.global-to-local, align 4
  %v4_10003ce0 = icmp eq i32 %v0_10003ce0, %v1_10003ce0
  %v3_10003ce4 = load i32, i32* %r28.global-to-local, align 4
  %v4_10003ce4 = add i32 %v3_10003ce4, 20
  %v5_10003ce4 = inttoptr i32 %v4_10003ce4 to i16*
  store i16 %v1_10003cdc, i16* %v5_10003ce4, align 2
  br i1 %v4_10003ce0, label %dec_label_pc_10003cec, label %dec_label_pc_10003c20

dec_label_pc_10003cec:                            ; preds = %dec_label_pc_10003cdc, %dec_label_pc_10003c18
  %v0_10003cec = call i32 @function_10005f3c()
  %v1_10003cec = trunc i32 %v0_10003cec to i16
  store i32 %v0_10003cec, i32* %r3.global-to-local, align 4
  %v3_10003cf0 = load i32, i32* @r31, align 4
  %v4_10003cf0 = add i32 %v3_10003cf0, 2
  %v5_10003cf0 = inttoptr i32 %v4_10003cf0 to i16*
  store i16 %v1_10003cec, i16* %v5_10003cf0, align 2
  br label %dec_label_pc_10003c20

dec_label_pc_10003cf8:                            ; preds = %dec_label_pc_10003abc
  %v0_10003cf8 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10003cf8, i32* %r3.global-to-local, align 4
  store i32 268451072, i32* @lr, align 4
  %v0_10003cfc = call i32 @function_100090cc()
  store i32 %v0_10003cfc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003d00

dec_label_pc_10003d00:                            ; preds = %dec_label_pc_1000397c, %dec_label_pc_10003cf8
  store i32 %v0_10003980, i32* %r0.global-to-local, align 4
  %v1_10003d14 = call %0 @__asm_mtcrf(i32 24, i32 %v0_10003984)
  store i32 %v0_100039bc, i32* %r28.global-to-local, align 4
  store i32 %v0_100039c4, i32* %r29.global-to-local, align 4
  store i32 %v0_100039cc, i32* %r30.global-to-local, align 4
  %v0_10003d58 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10003d58

; uselistorder directives
  uselistorder i32 %v0_10003cec, { 1, 0 }
  uselistorder i32 %v0_10003cdc, { 1, 0 }
  uselistorder i32 %v0_10003ccc, { 1, 0 }
  uselistorder i1 %v1_10003c98, { 1, 0 }
  uselistorder i1 %v0_10003c98, { 1, 0 }
  uselistorder i32 %v1_10003c88, { 0, 2, 3, 1 }
  uselistorder i32 %v4_10003c4c, { 1, 0 }
  uselistorder i32 %v2_10003c2c, { 1, 0 }
  uselistorder i32 %v1_10003bf0, { 1, 0 }
  uselistorder i32 %v1_10003b38, { 1, 0 }
  uselistorder i32 %v1_10003b2c, { 1, 0 }
  uselistorder i32* %stack_var_-84, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 0 }
  uselistorder i32* %r30.global-to-local, { 0, 3, 1, 4, 2, 5, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 19, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 0, 1 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10003d00, { 1, 0 }
  uselistorder label %dec_label_pc_10003c20, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10003bd0, { 1, 0 }
  uselistorder label %dec_label_pc_10003bcc, { 1, 0 }
  uselistorder label %dec_label_pc_10003bcc.outer, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10003b78, { 1, 0 }
}

define i32 @function_10003d5c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10003d5c:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr3_lt.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-2184 = alloca i32, align 4
  %stack_var_-2180 = alloca i32, align 4
  %stack_var_-2148 = alloca i32, align 4
  %v0_10003d60 = load i32, i32* @lr, align 4
  store i32 %v0_10003d60, i32* %r0.global-to-local, align 4
  %v0_10003d64 = call i32 @__asm_mfcr()
  store i32 %v0_10003d64, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r14.global-to-local, align 4
  %v0_10003d74 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10003d64, i32* %r15.global-to-local, align 4
  %v0_10003d94 = load i32, i32* @r24, align 4
  %v0_10003d98 = load i32, i32* @r25, align 4
  %v0_10003d9c = load i32, i32* @r26, align 4
  %v0_10003da0 = load i32, i32* @r27, align 4
  %v0_10003da4 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_10003db4 = load i32, i32* @r31, align 4
  %v0_10003dc8 = load i32, i32* @r30, align 4
  store i32 268451280, i32* @lr, align 4
  %v2_10003dcc = call i32 @function_1000a178(i32 4, i32 4)
  store i32 %v2_10003dcc, i32* %r16.global-to-local, align 4
  %v0_10003dd4 = load i32, i32* @r28, align 4
  %v0_10003de0 = load i32, i32* @r29, align 4
  store i32 %v0_10003de0, i32* %r3.global-to-local, align 4
  store i32 268451304, i32* @lr, align 4
  %v4_10003de4 = inttoptr i32 %v0_10003dd4 to i32*
  %v5_10003de4 = call i32 @function_100006a8(i32 %v0_10003de0, i32* %v4_10003de4, i32 2, i32 0)
  %v5_10003df4 = trunc i32 %v5_10003de4 to i8
  %v0_10003dfc = load i32, i32* @r28, align 4
  %v0_10003e00 = load i32, i32* @r29, align 4
  store i32 %v0_10003e00, i32* %r3.global-to-local, align 4
  store i32 268451336, i32* @lr, align 4
  %v4_10003e04 = inttoptr i32 %v0_10003dfc to i32*
  %v5_10003e04 = call i32 @function_100006a8(i32 %v0_10003e00, i32* %v4_10003e04, i32 3, i32 65535)
  %v0_10003e08 = load i32, i32* @r28, align 4
  store i32 %v5_10003e04, i32* %r19.global-to-local, align 4
  %v0_10003e18 = load i32, i32* @r29, align 4
  store i32 %v0_10003e18, i32* %r3.global-to-local, align 4
  store i32 268451360, i32* @lr, align 4
  %v4_10003e1c = inttoptr i32 %v0_10003e08 to i32*
  %v5_10003e1c = call i32 @function_100006a8(i32 %v0_10003e18, i32* %v4_10003e1c, i32 4, i32 64)
  %v0_10003e20 = load i32, i32* @r28, align 4
  %v5_10003e2c = trunc i32 %v5_10003e1c to i8
  %v0_10003e34 = load i32, i32* @r29, align 4
  store i32 %v0_10003e34, i32* %r3.global-to-local, align 4
  store i32 268451388, i32* @lr, align 4
  %v4_10003e38 = inttoptr i32 %v0_10003e20 to i32*
  %v5_10003e38 = call i32 @function_100006a8(i32 %v0_10003e34, i32* %v4_10003e38, i32 5, i32 0)
  %v0_10003e48 = load i32, i32* @r28, align 4
  %v1_10003e4c = urem i32 %v5_10003e38, 256
  store i32 %v1_10003e4c, i32* %r27.global-to-local, align 4
  %v0_10003e50 = load i32, i32* @r29, align 4
  store i32 %v0_10003e50, i32* %r3.global-to-local, align 4
  store i32 268451416, i32* @lr, align 4
  %v4_10003e54 = inttoptr i32 %v0_10003e48 to i32*
  %v5_10003e54 = call i32 @function_100006a8(i32 %v0_10003e50, i32* %v4_10003e54, i32 6, i32 65535)
  %v0_10003e58 = load i32, i32* @r28, align 4
  store i32 %v5_10003e54, i32* %r20.global-to-local, align 4
  %v0_10003e68 = load i32, i32* @r29, align 4
  store i32 %v0_10003e68, i32* %r3.global-to-local, align 4
  store i32 268451440, i32* @lr, align 4
  %v4_10003e6c = inttoptr i32 %v0_10003e58 to i32*
  %v5_10003e6c = call i32 @function_100006a8(i32 %v0_10003e68, i32* %v4_10003e6c, i32 7, i32 53)
  %v0_10003e74 = load i32, i32* @r28, align 4
  store i32 %v5_10003e6c, i32* %r23.global-to-local, align 4
  %v0_10003e84 = load i32, i32* @r29, align 4
  store i32 %v0_10003e84, i32* %r3.global-to-local, align 4
  store i32 268451468, i32* @lr, align 4
  %v4_10003e88 = inttoptr i32 %v0_10003e74 to i32*
  %v5_10003e88 = call i32 @function_100006a8(i32 %v0_10003e84, i32* %v4_10003e88, i32 9, i32 65535)
  %v0_10003e8c = load i32, i32* @r28, align 4
  store i32 %v5_10003e88, i32* %r24.global-to-local, align 4
  %v0_10003e9c = load i32, i32* @r29, align 4
  store i32 %v0_10003e9c, i32* %r3.global-to-local, align 4
  store i32 268451492, i32* @lr, align 4
  %v4_10003ea0 = inttoptr i32 %v0_10003e8c to i32*
  %v5_10003ea0 = call i32 @function_100006a8(i32 %v0_10003e9c, i32* %v4_10003ea0, i32 0, i32 12)
  %v0_10003eac = load i32, i32* @r28, align 4
  store i32 %v5_10003ea0, i32* %r26.global-to-local, align 4
  %v0_10003eb4 = load i32, i32* @r29, align 4
  store i32 %v0_10003eb4, i32* %r3.global-to-local, align 4
  store i32 268451516, i32* @lr, align 4
  %v4_10003eb8 = inttoptr i32 %v0_10003eac to i32*
  %v5_10003eb8 = call i32 @function_10000238(i32 %v0_10003eb4, i32* %v4_10003eb8, i32 8, i32 0)
  store i32 %v5_10003eb8, i32* %r25.global-to-local, align 4
  store i32 26, i32* %r3.global-to-local, align 4
  store i32 268451528, i32* @lr, align 4
  %v1_10003ec4 = call i32 @function_100082a8(i32 26)
  store i32 26, i32* %r3.global-to-local, align 4
  %v3_10003ed0 = call i32 @function_100081f4(i32 26, i32* null)
  store i32 %v3_10003ed0, i32* %r3.global-to-local, align 4
  store i32 268451552, i32* @lr, align 4
  %v2_10003edc = call i32 @function_10009234(i32 %v3_10003ed0, i32 0)
  store i32 %v2_10003edc, i32* @r31, align 4
  store i32 26, i32* %r3.global-to-local, align 4
  store i32 268451564, i32* @lr, align 4
  %v1_10003ee8 = call i32 @function_1000821c(i32 26)
  store i32 %v1_10003ee8, i32* %r3.global-to-local, align 4
  %v0_10003eec = load i32, i32* @r31, align 4
  %v1_10003eec = icmp slt i32 %v0_10003eec, 0
  %v3_10003eec = icmp eq i32 %v0_10003eec, 0
  store i1 %v3_10003eec, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_10003eec, label %dec_label_pc_10003fbc, label %dec_label_pc_10003ef4

dec_label_pc_10003ef4:                            ; preds = %dec_label_pc_10003d5c
  %v2_10003ef4 = ptrtoint i32* %stack_var_-2148 to i32
  store i32 %v2_10003ef4, i32* %r28.global-to-local, align 4
  store i32 %v0_10003eec, i32* %r3.global-to-local, align 4
  store i32 268451592, i32* @lr, align 4
  %v3_10003f04 = call i32 @function_10009304(i32 %v0_10003eec, i32 %v2_10003ef4, i32 2048)
  store i32 %v3_10003f04, i32* %r30.global-to-local, align 4
  %v0_10003f0c = load i32, i32* @r31, align 4
  store i32 %v0_10003f0c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10003f14.24 to i32), i32* @lr, align 4
  %v0_10003f10 = call i32 @function_100090cc()
  store i32 27, i32* %r3.global-to-local, align 4
  store i32 268451612, i32* @lr, align 4
  %v1_10003f18 = call i32 @function_100082a8(i32 27)
  store i32 27, i32* %r3.global-to-local, align 4
  %v3_10003f24 = call i32 @function_100081f4(i32 27, i32* null)
  %v0_10003f28 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v2_10003ef4, i32* %r3.global-to-local, align 4
  %v3_10003f34 = bitcast i32* %stack_var_-2148 to i8*
  %v4_10003f34 = call i32 @function_10008cbc(i8* %v3_10003f34, i32 %v0_10003f28, i32 %v3_10003f24)
  store i32 %v4_10003f34, i32* @r31, align 4
  store i32 27, i32* %r3.global-to-local, align 4
  store i32 268451652, i32* @lr, align 4
  %v1_10003f40 = call i32 @function_1000821c(i32 27)
  store i32 %v1_10003f40, i32* %r3.global-to-local, align 4
  %v0_10003f44 = load i32, i32* @r31, align 4
  %v3_10003f44 = icmp eq i32 %v0_10003f44, -1
  store i1 %v3_10003f44, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10003f44, label %dec_label_pc_10003fbc, label %dec_label_pc_10003f4c

dec_label_pc_10003f4c:                            ; preds = %dec_label_pc_10003ef4
  %v0_10003f4c = load i32, i32* %r30.global-to-local, align 4
  %v3_10003f4c = icmp sgt i32 %v0_10003f4c, %v0_10003f44
  %v4_10003f4c = icmp eq i32 %v0_10003f4c, %v0_10003f44
  store i1 %v4_10003f4c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10003f4c, label %dec_label_pc_10003f54, label %dec_label_pc_10003fbc

dec_label_pc_10003f54:                            ; preds = %dec_label_pc_10003f4c
  %v2_10003f54 = sub i32 %v0_10003f4c, %v0_10003f44
  store i32 %v2_10003f54, i32* %r0.global-to-local, align 4
  %v1_10003f58 = add i32 %v0_10003f4c, -1
  store i32 %v1_10003f58, i32* %r3.global-to-local, align 4
  store i32 %v2_10003f54, i32* %ctr.global-to-local, align 4
  %v0_10003f64 = load i32, i32* %r28.global-to-local, align 4
  %v2_10003f64 = add i32 %v0_10003f64, %v0_10003f44
  store i32 %v2_10003f64, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v2_10003f6c = ptrtoint i32* %stack_var_-2180 to i32
  store i32 %v2_10003f6c, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10003f70

dec_label_pc_10003f70:                            ; preds = %dec_label_pc_10003fb4, %dec_label_pc_10003f54
  %v0_10003fb8 = phi i32 [ %v1_10003fb8, %dec_label_pc_10003fb4 ], [ %v2_10003f54, %dec_label_pc_10003f54 ]
  %v0_10003fb4 = phi i32 [ %v1_10003fb4, %dec_label_pc_10003fb4 ], [ %v0_10003f44, %dec_label_pc_10003f54 ]
  %v0_10003f7c = phi i32 [ %v1_10003f7c, %dec_label_pc_10003fb4 ], [ %v2_10003f64, %dec_label_pc_10003f54 ]
  %v0_10003f70 = phi i32 [ %v0_10003f704, %dec_label_pc_10003fb4 ], [ 0, %dec_label_pc_10003f54 ]
  %v3_10003f70 = icmp eq i32 %v0_10003f70, 0
  store i1 %v3_10003f70, i1* %cr7_eq.global-to-local, align 1
  %v1_10003f74 = inttoptr i32 %v0_10003f7c to i8*
  %v2_10003f74 = load i8, i8* %v1_10003f74, align 1
  %v3_10003f74 = zext i8 %v2_10003f74 to i32
  store i32 %v3_10003f74, i32* %r9.global-to-local, align 4
  %v4_10003f78 = icmp eq i32 %v1_10003f58, %v0_10003fb4
  %v1_10003f7c = add i32 %v0_10003f7c, 1
  store i32 %v1_10003f7c, i32* %r11.global-to-local, align 4
  br i1 %v3_10003f70, label %dec_label_pc_10003f8c, label %dec_label_pc_10003f9c

dec_label_pc_10003f8c:                            ; preds = %dec_label_pc_10003f70
  %v3_10003f8c = icmp eq i8 %v2_10003f74, 9
  store i1 %v3_10003f8c, i1* %cr7_eq.global-to-local, align 1
  switch i8 %v2_10003f74, label %dec_label_pc_10003f98 [
    i8 32, label %dec_label_pc_10003fb4
    i8 9, label %dec_label_pc_10003fb4
  ]

dec_label_pc_10003f98:                            ; preds = %dec_label_pc_10003f8c
  store i32 1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10003f9c

dec_label_pc_10003f9c:                            ; preds = %dec_label_pc_10003f70, %dec_label_pc_10003f98
  %v0_10003f705 = phi i32 [ %v0_10003f70, %dec_label_pc_10003f70 ], [ 1, %dec_label_pc_10003f98 ]
  %v1_10003f9c = add nuw nsw i32 %v3_10003f74, 208
  %v1_10003fa0 = urem i32 %v1_10003f9c, 256
  store i32 %v1_10003fa0, i32* %r0.global-to-local, align 4
  %v2_10003fa4 = icmp ugt i32 %v1_10003fa0, 9
  %v3_10003fa4 = icmp eq i32 %v1_10003fa0, 9
  store i1 %v3_10003fa4, i1* %cr7_eq.global-to-local, align 1
  %v3_10003f80.not = icmp ne i8 %v2_10003f74, 46
  %brmerge.not = and i1 %v3_10003f80.not, %v2_10003fa4
  %brmerge26 = or i1 %v4_10003f78, %brmerge.not
  br i1 %brmerge26, label %dec_label_pc_10003ff0, label %dec_label_pc_10003fb4

dec_label_pc_10003fb4:                            ; preds = %dec_label_pc_10003f9c, %dec_label_pc_10003f8c, %dec_label_pc_10003f8c
  %v0_10003f704 = phi i32 [ 0, %dec_label_pc_10003f8c ], [ 0, %dec_label_pc_10003f8c ], [ %v0_10003f705, %dec_label_pc_10003f9c ]
  %v1_10003fb4 = add i32 %v0_10003fb4, 1
  %v1_10003fb8 = add i32 %v0_10003fb8, -1
  store i32 %v1_10003fb8, i32* %ctr.global-to-local, align 4
  %v2_10003fb8 = icmp eq i32 %v1_10003fb8, 0
  br i1 %v2_10003fb8, label %dec_label_pc_10003fbc, label %dec_label_pc_10003f70

dec_label_pc_10003fbc:                            ; preds = %dec_label_pc_10003fb4, %dec_label_pc_10003f4c, %dec_label_pc_10003ef4, %dec_label_pc_10003d5c
  %v0_10003fbc = call i32 @function_10005f3c()
  %v1_10003fc0 = urem i32 %v0_10003fbc, 4
  store i32 %v1_10003fc0, i32* %r3.global-to-local, align 4
  %v3_10003fc4 = icmp eq i32 %v1_10003fc0, 1
  store i1 %v3_10003fc4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10003fc4, label %dec_label_pc_100043a8, label %dec_label_pc_10003fcc

dec_label_pc_10003fcc:                            ; preds = %dec_label_pc_10003fbc
  %v1_10003fc4 = icmp eq i32 %v1_10003fc0, 0
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_10003fc4, label %dec_label_pc_100043c0, label %dec_label_pc_10003fd4

dec_label_pc_10003fd4:                            ; preds = %dec_label_pc_10003fcc
  %v2_10003fd4 = icmp eq i32 %v1_10003fc0, 3
  %v3_10003fd4 = icmp eq i32 %v1_10003fc0, 2
  store i1 %v3_10003fd4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10003fd4, label %dec_label_pc_100043b4, label %dec_label_pc_10003fdc

dec_label_pc_10003fdc:                            ; preds = %dec_label_pc_10003fd4
  store i1 %v2_10003fd4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10003fd4, label %dec_label_pc_10003fe4, label %dec_label_pc_10004020

dec_label_pc_10003fe4:                            ; preds = %dec_label_pc_10003fdc
  store i32 67240450, i32* @r21, align 4
  br label %dec_label_pc_10004020

dec_label_pc_10003ff0:                            ; preds = %dec_label_pc_10003f9c
  %v2_10003ff0 = sub i32 %v0_10003fb4, %v0_10003f44
  store i32 %v2_10003f6c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004004.25 to i32), i32* @lr, align 4
  %v3_10004000 = call i32 @function_10008990(i32 %v2_10003f6c, i32 %v2_10003f64, i32 %v2_10003ff0)
  %v2_10004004 = ptrtoint i32* %stack_var_-2184 to i32
  %v2_10004008 = add i32 %v2_10003ff0, %v2_10004004
  store i32 %v2_10004008, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10004010 = add i32 %v2_10004008, 4
  %v4_10004010 = inttoptr i32 %v3_10004010 to i8*
  store i8 0, i8* %v4_10004010, align 1
  store i32 %v2_10003f6c, i32* %r3.global-to-local, align 4
  store i32 268451868, i32* @lr, align 4
  %v1_10004018 = call i32 @function_10009b80(i32 %v2_10003f6c)
  store i32 %v1_10004018, i32* %r3.global-to-local, align 4
  store i32 %v1_10004018, i32* @r21, align 4
  br label %dec_label_pc_10004020

dec_label_pc_10004020:                            ; preds = %dec_label_pc_10003fdc, %dec_label_pc_10003fe4, %dec_label_pc_100043c0, %dec_label_pc_100043b4, %dec_label_pc_100043a8, %dec_label_pc_10003ff0
  %v0_10004020 = load i32, i32* %r25.global-to-local, align 4
  %v3_10004020 = icmp eq i32 %v0_10004020, 0
  store i1 %v3_10004020, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10004020, label %dec_label_pc_10004348, label %dec_label_pc_10004028

dec_label_pc_10004028:                            ; preds = %dec_label_pc_10004020
  store i32 %v0_10004020, i32* %r3.global-to-local, align 4
  store i32 268451888, i32* @lr, align 4
  %v1_1000402c = inttoptr i32 %v0_10004020 to i8*
  %v2_1000402c = call i32 @function_1000890c(i8* %v1_1000402c)
  store i32 %v2_1000402c, i32* @r29, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268451908, i32* @lr, align 4
  %v3_10004040 = call i32 @function_10009e1c(i32 2, i32 3, i32 17)
  store i32 %v3_10004040, i32* %r3.global-to-local, align 4
  %v3_10004044 = icmp eq i32 %v3_10004040, -1
  store i1 %v3_10004044, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10004040, i32* %r22.global-to-local, align 4
  br i1 %v3_10004044, label %dec_label_pc_10004348, label %dec_label_pc_10004050

dec_label_pc_10004050:                            ; preds = %dec_label_pc_10004028
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_1000405c = ptrtoint i32* %stack_var_-2184 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-2184, align 4
  store i32 268451948, i32* @lr, align 4
  %v4_10004068 = call i32 @function_10009de0(i32 0, i32 3, i32 %v2_1000405c, i32 4)
  store i32 %v4_10004068, i32* %r3.global-to-local, align 4
  %v3_1000406c = icmp eq i32 %v4_10004068, -1
  store i1 %v3_1000406c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000406c, label %dec_label_pc_10004340, label %dec_label_pc_10004074

dec_label_pc_10004074:                            ; preds = %dec_label_pc_10004050
  %v0_10004074 = load i32, i32* %r15.global-to-local, align 4
  %v1_10004074 = icmp slt i32 %v0_10004074, 0
  %v3_10004074 = icmp eq i32 %v0_10004074, 0
  store i1 %v1_10004074, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10004074, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1000407c = load i32, i32* %r19.global-to-local, align 4
  %v1_1000407c = urem i32 %v0_1000407c, 65536
  store i32 %v1_1000407c, i32* %r17.global-to-local, align 4
  %v0_10004080 = load i32, i32* %r20.global-to-local, align 4
  %v1_10004080 = urem i32 %v0_10004080, 65536
  store i32 %v1_10004080, i32* %r18.global-to-local, align 4
  %v0_10004084 = load i32, i32* %r23.global-to-local, align 4
  %v1_10004084 = urem i32 %v0_10004084, 65536
  store i32 %v1_10004084, i32* %r19.global-to-local, align 4
  store i32 0, i32* %stack_var_-2184, align 4
  %v0_1000408c = load i32, i32* %r24.global-to-local, align 4
  %v1_1000408c = urem i32 %v0_1000408c, 65536
  store i32 %v1_1000408c, i32* %r20.global-to-local, align 4
  %v0_10004090 = load i32, i32* %r26.global-to-local, align 4
  %v1_10004090 = urem i32 %v0_10004090, 256
  store i32 %v1_10004090, i32* %r23.global-to-local, align 4
  %tmp53 = icmp slt i32 %v0_10004074, 1
  %v1_10004334 = load i32, i32* @r29, align 4
  %v2_10004334 = add i32 %v1_10004334, %v1_10004090
  store i32 %v2_10004334, i32* @r24, align 4
  br i1 %tmp53, label %dec_label_pc_100041f8.preheader, label %dec_label_pc_10004098

dec_label_pc_10004098:                            ; preds = %dec_label_pc_10004074
  %v1_1000409c = icmp slt i32 %v1_10004334, 0
  %v3_1000409c = icmp eq i32 %v1_10004334, 0
  store i1 %v1_1000409c, i1* %cr3_lt.global-to-local, align 1
  store i1 %v3_1000409c, i1* %cr3_eq.global-to-local, align 1
  %v1_100040a0 = urem i32 %v2_10004334, 65536
  %v0_100040a4 = load i32, i32* %r27.global-to-local, align 4
  %v3_100040a4 = icmp eq i32 %v0_100040a4, 0
  store i1 %v3_100040a4, i1* %cr2_eq.global-to-local, align 1
  %v1_100040a8 = add nuw nsw i32 %v1_100040a0, 27
  store i32 %v1_100040a8, i32* %r0.global-to-local, align 4
  %v1_100040ac = add nuw nsw i32 %v1_100040a0, 47
  store i32 %v1_100040ac, i32* %r9.global-to-local, align 4
  %fold = add i32 %v2_10004334, 47
  %v1_100040b0 = urem i32 %fold, 65536
  store i32 %v1_100040b0, i32* %r26.global-to-local, align 4
  %fold3 = add i32 %v2_10004334, 27
  %v1_100040b4 = urem i32 %fold3, 65536
  store i32 %v1_100040b4, i32* %r27.global-to-local, align 4
  %v1_100040b8 = add i32 %v1_10004334, 1
  store i32 %v1_100040b8, i32* @r28, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v4_10004108 = sext i8 %v5_10003df4 to i32
  %v4_10004110 = sext i8 %v5_10003e2c to i32
  br label %dec_label_pc_100040c0

dec_label_pc_100040c0:                            ; preds = %dec_label_pc_100041d0, %dec_label_pc_10004098
  store i32 600, i32* %r3.global-to-local, align 4
  store i32 268452044, i32* @lr, align 4
  %v2_100040c8 = call i32 @function_1000a178(i32 600, i32 1)
  store i32 %v2_100040c8, i32* %r3.global-to-local, align 4
  %v3_100040cc = load i32, i32* %stack_var_-2184, align 4
  store i32 %v3_100040cc, i32* %r0.global-to-local, align 4
  %v0_100040d0 = load i32, i32* @r31, align 4
  %v1_100040d0 = mul i32 %v0_100040d0, 4
  store i32 %v1_100040d0, i32* %r9.global-to-local, align 4
  %v2_100040d4 = load i32, i32* %r16.global-to-local, align 4
  %v3_100040d4 = add i32 %v2_100040d4, %v1_100040d0
  %v4_100040d4 = inttoptr i32 %v3_100040d4 to i32*
  store i32 %v2_100040c8, i32* %v4_100040d4, align 4
  %v0_100040d8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100040d8 = mul i32 %v0_100040d8, 4
  store i32 %v1_100040d8, i32* %r0.global-to-local, align 4
  %v0_100040dc = load i32, i32* %r16.global-to-local, align 4
  %v2_100040dc = add i32 %v0_100040dc, %v1_100040d8
  %v3_100040dc = inttoptr i32 %v2_100040dc to i32*
  %v4_100040dc = load i32, i32* %v3_100040dc, align 4
  store i32 %v4_100040dc, i32* %r11.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_100040e4 = inttoptr i32 %v4_100040dc to i32*
  %v2_100040e4 = load i32, i32* %v1_100040e4, align 4
  store i32 %v2_100040e4, i32* %r9.global-to-local, align 4
  %v1_100040e8 = add i32 %v4_100040dc, 20
  store i32 %v1_100040e8, i32* %r10.global-to-local, align 4
  %v0_100040ec = load i32, i32* %r17.global-to-local, align 4
  %v1_100040ec = trunc i32 %v0_100040ec to i16
  %v3_100040ec = add i32 %v4_100040dc, 4
  %v4_100040ec = inttoptr i32 %v3_100040ec to i16*
  store i16 %v1_100040ec, i16* %v4_100040ec, align 2
  %v0_100040f0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100040f0 = add i32 %v0_100040f0, 28
  store i32 %v1_100040f0, i32* %r8.global-to-local, align 4
  %v1_100040f4 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100040f4, i32* %r9.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_100040fc = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_100040fc, i32* %r9.global-to-local, align 4
  %v1_10004100 = load i32, i32* %r11.global-to-local, align 4
  %v2_10004100 = inttoptr i32 %v1_10004100 to i32*
  store i32 %v1_100040fc, i32* %v2_10004100, align 4
  %v0_10004104 = load i32, i32* %r26.global-to-local, align 4
  %v1_10004104 = trunc i32 %v0_10004104 to i16
  %v2_10004104 = load i32, i32* %r11.global-to-local, align 4
  %v3_10004104 = add i32 %v2_10004104, 2
  %v4_10004104 = inttoptr i32 %v3_10004104 to i16*
  store i16 %v1_10004104, i16* %v4_10004104, align 2
  store i32 %v4_10004108, i32* %r0.global-to-local, align 4
  %v2_1000410c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000410c = add i32 %v2_1000410c, 1
  %v4_1000410c = inttoptr i32 %v3_1000410c to i8*
  store i8 %v5_10003df4, i8* %v4_1000410c, align 1
  store i32 %v4_10004110, i32* %r7.global-to-local, align 4
  %v2_10004114 = load i32, i32* %r11.global-to-local, align 4
  %v3_10004114 = add i32 %v2_10004114, 8
  %v4_10004114 = inttoptr i32 %v3_10004114 to i8*
  store i8 %v5_10003e2c, i8* %v4_10004114, align 1
  %v0_10004118 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10004118, label %dec_label_pc_10004124, label %dec_label_pc_1000411c

dec_label_pc_1000411c:                            ; preds = %dec_label_pc_100040c0
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10004120 = load i32, i32* %r11.global-to-local, align 4
  %v3_10004120 = add i32 %v2_10004120, 6
  %v4_10004120 = inttoptr i32 %v3_10004120 to i16*
  store i16 16384, i16* %v4_10004120, align 2
  br label %dec_label_pc_10004124

dec_label_pc_10004124:                            ; preds = %dec_label_pc_100040c0, %dec_label_pc_1000411c
  store i32 268566528, i32* %r7.global-to-local, align 4
  %v2_1000412c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000412c = add i32 %v2_1000412c, 9
  %v4_1000412c = inttoptr i32 %v3_1000412c to i8*
  store i8 17, i8* %v4_1000412c, align 1
  %v0_10004130 = load i32, i32* %r11.global-to-local, align 4
  %v1_10004130 = add i32 %v0_10004130, 41
  store i32 %v1_10004130, i32* %r9.global-to-local, align 4
  %v0_10004134 = load i32, i32* %r27.global-to-local, align 4
  %v1_10004134 = trunc i32 %v0_10004134 to i16
  %v2_10004134 = load i32, i32* %r10.global-to-local, align 4
  %v3_10004134 = add i32 %v2_10004134, 4
  %v4_10004134 = inttoptr i32 %v3_10004134 to i16*
  store i16 %v1_10004134, i16* %v4_10004134, align 2
  %v0_10004138 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004138 = load i32, i32* %r23.global-to-local, align 4
  %v2_10004138 = add i32 %v1_10004138, %v0_10004138
  store i32 %v2_10004138, i32* %r30.global-to-local, align 4
  %v3_1000413c = load i32, i32* @global_var_1001c258.14, align 4
  store i32 %v3_1000413c, i32* %r0.global-to-local, align 4
  %v1_10004140 = add i32 %v2_10004138, 1
  store i32 %v1_10004140, i32* %r31.global-to-local, align 4
  %v0_10004144 = load i32, i32* %r19.global-to-local, align 4
  %v1_10004144 = trunc i32 %v0_10004144 to i16
  %v2_10004144 = load i32, i32* %r10.global-to-local, align 4
  %v3_10004144 = add i32 %v2_10004144, 2
  %v4_10004144 = inttoptr i32 %v3_10004144 to i16*
  store i16 %v1_10004144, i16* %v4_10004144, align 2
  %v0_10004148 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10004148, i32* %r3.global-to-local, align 4
  %v0_1000414c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000414c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000414c = add i32 %v1_1000414c, 12
  %v3_1000414c = inttoptr i32 %v2_1000414c to i32*
  store i32 %v0_1000414c, i32* %v3_1000414c, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  %v0_10004154 = load i32, i32* %r18.global-to-local, align 4
  %v1_10004154 = trunc i32 %v0_10004154 to i16
  %v2_10004154 = load i32, i32* %r11.global-to-local, align 4
  %v3_10004154 = add i32 %v2_10004154, 20
  %v4_10004154 = inttoptr i32 %v3_10004154 to i16*
  store i16 %v1_10004154, i16* %v4_10004154, align 2
  %v0_10004158 = load i32, i32* %r25.global-to-local, align 4
  %v0_1000415c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000415c = trunc i32 %v0_1000415c to i16
  %v2_1000415c = load i32, i32* %r8.global-to-local, align 4
  %v3_1000415c = add i32 %v2_1000415c, 2
  %v4_1000415c = inttoptr i32 %v3_1000415c to i16*
  store i16 %v1_1000415c, i16* %v4_1000415c, align 2
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10004164 = load i32, i32* %r8.global-to-local, align 4
  %v3_10004164 = add i32 %v2_10004164, 4
  %v4_10004164 = inttoptr i32 %v3_10004164 to i16*
  store i16 1, i16* %v4_10004164, align 2
  %v0_10004168 = load i32, i32* @r28, align 4
  %v0_1000416c = load i32, i32* @r21, align 4
  %v1_1000416c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000416c = add i32 %v1_1000416c, 16
  %v3_1000416c = inttoptr i32 %v2_1000416c to i32*
  store i32 %v0_1000416c, i32* %v3_1000416c, align 4
  %v0_10004170 = load i32, i32* %r20.global-to-local, align 4
  %v1_10004170 = trunc i32 %v0_10004170 to i16
  %v2_10004170 = load i32, i32* %r11.global-to-local, align 4
  %v3_10004170 = add i32 %v2_10004170, 28
  %v4_10004170 = inttoptr i32 %v3_10004170 to i16*
  store i16 %v1_10004170, i16* %v4_10004170, align 2
  %v0_10004174 = load i32, i32* %r23.global-to-local, align 4
  %v1_10004174 = trunc i32 %v0_10004174 to i8
  %v2_10004174 = load i32, i32* %r11.global-to-local, align 4
  %v3_10004174 = add i32 %v2_10004174, 40
  %v4_10004174 = inttoptr i32 %v3_10004174 to i8*
  store i8 %v1_10004174, i8* %v4_10004174, align 1
  store i32 268452220, i32* @lr, align 4
  %v3_10004178 = call i32 @function_10008990(i32 %v0_10004148, i32 %v0_10004158, i32 %v0_10004168)
  store i32 %v3_10004178, i32* %r3.global-to-local, align 4
  %v0_1000417c = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_1000417c = load i1, i1* %cr3_lt.global-to-local, align 1
  %v2_1000417c = or i1 %v0_1000417c, %v1_1000417c
  br i1 %v2_1000417c, label %dec_label_pc_100041c8, label %dec_label_pc_10004180

dec_label_pc_10004180:                            ; preds = %dec_label_pc_10004124
  %v0_10004180 = load i32, i32* @r29, align 4
  store i32 %v0_10004180, i32* %ctr.global-to-local, align 4
  %v0_10004184 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10004184, i32* %r3.global-to-local, align 4
  %v0_10004188 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_10004188, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100041a8

dec_label_pc_10004198:                            ; preds = %dec_label_pc_100041a8
  %v1_10004198 = urem i32 %v1_100041ac, 256
  br label %dec_label_pc_1000419c

dec_label_pc_1000419c:                            ; preds = %dec_label_pc_100041b8, %dec_label_pc_10004198
  %v0_100041a4 = phi i32 [ %v0_100041a4.pre, %dec_label_pc_100041b8 ], [ %v0_100041a418, %dec_label_pc_10004198 ]
  %v0_100041a0 = phi i32 [ %v0_100041bc, %dec_label_pc_100041b8 ], [ %v0_100041a016, %dec_label_pc_10004198 ]
  %v2_100041b813 = phi i32 [ %v0_100041bc, %dec_label_pc_100041b8 ], [ %v2_100041b8, %dec_label_pc_10004198 ]
  %v0_1000419c = phi i32 [ %v0_1000419c.pre, %dec_label_pc_100041b8 ], [ %v0_100041a8, %dec_label_pc_10004198 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_100041b8 ], [ %v1_10004198, %dec_label_pc_10004198 ]
  store i32 %storemerge, i32* %r8.global-to-local, align 4
  %v1_1000419c = add i32 %v0_1000419c, 1
  store i32 %v1_1000419c, i32* %r10.global-to-local, align 4
  %v1_100041a0 = add i32 %v0_100041a0, 1
  store i32 %v1_100041a0, i32* %r3.global-to-local, align 4
  %v1_100041a4 = add i32 %v0_100041a4, -1
  store i32 %v1_100041a4, i32* %ctr.global-to-local, align 4
  %v2_100041a4 = icmp eq i32 %v1_100041a4, 0
  br i1 %v2_100041a4, label %dec_label_pc_100041d0.loopexit, label %dec_label_pc_100041a8

dec_label_pc_100041a8:                            ; preds = %dec_label_pc_1000419c, %dec_label_pc_10004180
  %v0_100041a418 = phi i32 [ %v1_100041a4, %dec_label_pc_1000419c ], [ %v0_10004180, %dec_label_pc_10004180 ]
  %v0_100041a016 = phi i32 [ %v1_100041a0, %dec_label_pc_1000419c ], [ %v0_10004184, %dec_label_pc_10004180 ]
  %v2_100041b8 = phi i32 [ %v2_100041b813, %dec_label_pc_1000419c ], [ %v0_10004188, %dec_label_pc_10004180 ]
  %v0_100041b8 = phi i32 [ %storemerge, %dec_label_pc_1000419c ], [ 0, %dec_label_pc_10004180 ]
  %v0_100041a8 = phi i32 [ %v1_1000419c, %dec_label_pc_1000419c ], [ 0, %dec_label_pc_10004180 ]
  %v1_100041a8 = load i32, i32* %r25.global-to-local, align 4
  %v2_100041a8 = add i32 %v1_100041a8, %v0_100041a8
  %v3_100041a8 = inttoptr i32 %v2_100041a8 to i8*
  %v4_100041a8 = load i8, i8* %v3_100041a8, align 1
  %v5_100041a8 = zext i8 %v4_100041a8 to i32
  store i32 %v5_100041a8, i32* %r0.global-to-local, align 4
  %v1_100041ac = add nsw i32 %v0_100041b8, 1
  store i32 %v1_100041ac, i32* %r11.global-to-local, align 4
  %v3_100041b0 = icmp eq i8 %v4_100041a8, 46
  store i1 %v3_100041b0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100041b0, label %dec_label_pc_100041b8, label %dec_label_pc_10004198

dec_label_pc_100041b8:                            ; preds = %dec_label_pc_100041a8
  %v1_100041b8 = trunc i32 %v0_100041b8 to i8
  %v3_100041b8 = inttoptr i32 %v2_100041b8 to i8*
  store i8 %v1_100041b8, i8* %v3_100041b8, align 1
  %v0_100041bc = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_100041bc, i32* %r9.global-to-local, align 4
  %v0_1000419c.pre = load i32, i32* %r10.global-to-local, align 4
  %v0_100041a4.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000419c

dec_label_pc_100041c8:                            ; preds = %dec_label_pc_10004124
  %v0_100041c8 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_100041c8, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100041d0

dec_label_pc_100041d0.loopexit:                   ; preds = %dec_label_pc_1000419c
  %extract.t = trunc i32 %storemerge to i8
  br label %dec_label_pc_100041d0

dec_label_pc_100041d0:                            ; preds = %dec_label_pc_100041d0.loopexit, %dec_label_pc_100041c8
  %v2_100041d0 = phi i32 [ %v2_100041b813, %dec_label_pc_100041d0.loopexit ], [ %v0_100041c8, %dec_label_pc_100041c8 ]
  %v0_100041d0.off0 = phi i8 [ %extract.t, %dec_label_pc_100041d0.loopexit ], [ 0, %dec_label_pc_100041c8 ]
  %v3_100041d0 = inttoptr i32 %v2_100041d0 to i8*
  store i8 %v0_100041d0.off0, i8* %v3_100041d0, align 1
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_100041d8 = load i32, i32* %r30.global-to-local, align 4
  %v1_100041d8 = load i32, i32* @r29, align 4
  %v2_100041d8 = add i32 %v1_100041d8, %v0_100041d8
  store i32 %v2_100041d8, i32* %r9.global-to-local, align 4
  %v3_100041dc = load i32, i32* %stack_var_-2184, align 4
  store i32 %v3_100041dc, i32* %r11.global-to-local, align 4
  %v3_100041e0 = add i32 %v2_100041d8, 4
  %v4_100041e0 = inttoptr i32 %v3_100041e0 to i16*
  store i16 1, i16* %v4_100041e0, align 2
  %v0_100041e4 = load i32, i32* %r11.global-to-local, align 4
  %v1_100041e4 = add i32 %v0_100041e4, 1
  store i32 %v1_100041e4, i32* %r31.global-to-local, align 4
  %v0_100041e8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100041e8 = trunc i32 %v0_100041e8 to i16
  %v2_100041e8 = load i32, i32* %r9.global-to-local, align 4
  %v3_100041e8 = add i32 %v2_100041e8, 2
  %v4_100041e8 = inttoptr i32 %v3_100041e8 to i16*
  store i16 %v1_100041e8, i16* %v4_100041e8, align 2
  %v0_100041ec = load i32, i32* %r31.global-to-local, align 4
  %v1_100041ec = load i32, i32* %r15.global-to-local, align 4
  %v2_100041ec = icmp slt i32 %v0_100041ec, %v1_100041ec
  %v4_100041ec = icmp eq i32 %v0_100041ec, %v1_100041ec
  store i1 %v4_100041ec, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_100041ec, i32* %stack_var_-2184, align 4
  br i1 %v2_100041ec, label %dec_label_pc_100040c0, label %dec_label_pc_100041f8.preheader.loopexit

dec_label_pc_100041f8.preheader.loopexit:         ; preds = %dec_label_pc_100041d0
  %v0_100041f8.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100041f8.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_100041f8.preheader

dec_label_pc_100041f8.preheader:                  ; preds = %dec_label_pc_100042f0, %dec_label_pc_10004074, %dec_label_pc_100041f8.preheader.loopexit
  %v1_100041f8 = phi i1 [ %v1_10004074, %dec_label_pc_10004074 ], [ %v1_100041f8.pre, %dec_label_pc_100041f8.preheader.loopexit ], [ %v1_100042f0, %dec_label_pc_100042f0 ]
  %v0_100041f8 = phi i1 [ %v3_10004074, %dec_label_pc_10004074 ], [ %v0_100041f8.pre, %dec_label_pc_100041f8.preheader.loopexit ], [ %v0_100042f0, %dec_label_pc_100042f0 ]
  %v2_100041f8 = or i1 %v1_100041f8, %v0_100041f8
  br label %dec_label_pc_100041f8

dec_label_pc_100041f8:                            ; preds = %dec_label_pc_100041f8.preheader, %dec_label_pc_100041f8
  br i1 %v2_100041f8, label %dec_label_pc_100041f8, label %dec_label_pc_100041fc

dec_label_pc_100041fc:                            ; preds = %dec_label_pc_100041f8, %dec_label_pc_100042f0
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 65535, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-2184, align 4
  %v0_1000420c = load i32, i32* %r19.global-to-local, align 4
  %v4_1000420c = icmp eq i32 %v0_1000420c, 65535
  store i1 %v4_1000420c, i1* %cr7_eq.global-to-local, align 1
  %v0_10004210 = load i32, i32* %r18.global-to-local, align 4
  %v2_10004210 = icmp slt i32 %v0_10004210, 65535
  %v4_10004210 = icmp eq i32 %v0_10004210, 65535
  store i1 %v2_10004210, i1* %cr3_lt.global-to-local, align 1
  store i1 %v4_10004210, i1* %cr3_eq.global-to-local, align 1
  %v0_10004214 = load i32, i32* %r20.global-to-local, align 4
  %v4_10004214 = icmp eq i32 %v0_10004214, 65535
  store i1 %v4_10004214, i1* %cr2_eq.global-to-local, align 1
  %v0_10004218 = load i32, i32* @r24, align 4
  %v1_10004218 = add i32 %v0_10004218, 27
  store i32 %v1_10004218, i32* @r30, align 4
  %v0_1000421c = call i32 @__asm_mfcr()
  store i32 %v0_1000421c, i32* %r3.global-to-local, align 4
  %v1_10004220 = mul i32 %v0_1000421c, 268435456
  store i32 %v1_10004220, i32* @r26, align 4
  %v0_10004224 = load i32, i32* %r17.global-to-local, align 4
  %v1_10004224 = load i32, i32* %r0.global-to-local, align 4
  %v4_10004224 = icmp eq i32 %v0_10004224, %v1_10004224
  store i1 %v4_10004224, i1* %cr7_eq.global-to-local, align 1
  %v0_10004228 = load i32, i32* @r24, align 4
  %v1_10004228 = add i32 %v0_10004228, 47
  store i32 %v1_10004228, i32* @r31, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10004230 = call i32 @__asm_mfcr()
  store i32 %v0_10004230, i32* %r3.global-to-local, align 4
  %v1_10004234 = mul i32 %v0_10004230, 268435456
  store i32 %v1_10004234, i32* %r27.global-to-local, align 4
  store i32 0, i32* @r25, align 4
  %v0_1000423c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000423c

dec_label_pc_1000423c:                            ; preds = %dec_label_pc_10004270.dec_label_pc_1000423c_crit_edge, %dec_label_pc_100041fc
  %v0_10004240 = phi i32 [ %v0_10004240.pre, %dec_label_pc_10004270.dec_label_pc_1000423c_crit_edge ], [ %v1_10004234, %dec_label_pc_100041fc ]
  %v0_1000423c = phi i32 [ %v1_100042e0, %dec_label_pc_10004270.dec_label_pc_1000423c_crit_edge ], [ %v0_1000423c.pre, %dec_label_pc_100041fc ]
  %v1_1000423c = mul i32 %v0_1000423c, 4
  store i32 %v1_1000423c, i32* %r0.global-to-local, align 4
  %v1_10004240 = mul i32 %v0_10004240, 16
  %v2_10004240 = udiv i32 %v0_10004240, 268435456
  %v3_10004240 = or i32 %v2_10004240, %v1_10004240
  store i32 %v3_10004240, i32* %r27.global-to-local, align 4
  %v1_10004244 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10004240)
  %v1_10004248 = mul nuw i32 %v2_10004240, 268435456
  %v2_10004248 = urem i32 %v0_10004240, 268435456
  %v3_10004248 = or i32 %v1_10004248, %v2_10004248
  store i32 %v3_10004248, i32* @r27, align 4
  %v0_1000424c = load i32, i32* %r16.global-to-local, align 4
  %v1_1000424c = load i32, i32* %r0.global-to-local, align 4
  %v2_1000424c = add i32 %v1_1000424c, %v0_1000424c
  %v3_1000424c = inttoptr i32 %v2_1000424c to i32*
  %v4_1000424c = load i32, i32* %v3_1000424c, align 4
  store i32 %v4_1000424c, i32* @r29, align 4
  %v1_10004250 = add i32 %v4_1000424c, 20
  store i32 %v1_10004250, i32* @r28, align 4
  %v0_10004254 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004254, label %dec_label_pc_100042f8, label %dec_label_pc_10004258

dec_label_pc_10004258:                            ; preds = %dec_label_pc_1000423c
  %v0_10004258 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10004258, label %dec_label_pc_10004304, label %dec_label_pc_1000425c

dec_label_pc_1000425c:                            ; preds = %dec_label_pc_100042f8, %dec_label_pc_10004258
  %v0_1000425c = load i32, i32* @r26, align 4
  %v1_1000425c = mul i32 %v0_1000425c, 16
  %v2_1000425c = udiv i32 %v0_1000425c, 268435456
  %v3_1000425c = or i32 %v2_1000425c, %v1_1000425c
  store i32 %v3_1000425c, i32* %r26.global-to-local, align 4
  %v1_10004260 = call %0 @__asm_mtcrf(i32 1, i32 %v3_1000425c)
  %v1_10004264 = mul nuw i32 %v2_1000425c, 268435456
  %v2_10004264 = urem i32 %v0_1000425c, 268435456
  %v3_10004264 = or i32 %v1_10004264, %v2_10004264
  store i32 %v3_10004264, i32* @r26, align 4
  %v0_10004268 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004268, label %dec_label_pc_1000431c, label %dec_label_pc_1000426c

dec_label_pc_1000426c:                            ; preds = %dec_label_pc_10004304, %dec_label_pc_1000425c
  %v0_1000426c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_1000426c, label %dec_label_pc_10004328, label %dec_label_pc_10004270

dec_label_pc_10004270:                            ; preds = %dec_label_pc_1000431c, %dec_label_pc_1000426c, %dec_label_pc_10004328
  %v0_10004270 = load i32, i32* @r29, align 4
  %v1_10004270 = add i32 %v0_10004270, 41
  store i32 %v1_10004270, i32* %r3.global-to-local, align 4
  %v0_10004274 = load i32, i32* %r23.global-to-local, align 4
  store i32 268452476, i32* @lr, align 4
  %v2_10004278 = inttoptr i32 %v1_10004270 to i8*
  %v3_10004278 = call i32 @function_10005ffc(i8* %v2_10004278, i32 %v0_10004274)
  %v0_1000427c = load i32, i32* @r25, align 4
  %v1_1000427c = trunc i32 %v0_1000427c to i16
  %v2_1000427c = load i32, i32* @r29, align 4
  %v3_1000427c = add i32 %v2_1000427c, 10
  %v4_1000427c = inttoptr i32 %v3_1000427c to i16*
  store i16 %v1_1000427c, i16* %v4_1000427c, align 2
  %v0_10004284 = load i32, i32* @r29, align 4
  store i32 %v0_10004284, i32* @r3, align 4
  %v2_10004288 = call i32 @function_100043cc(i32 %v0_10004284, i32 20)
  %v3_10004288 = trunc i32 %v2_10004288 to i16
  %v0_1000428c = load i32, i32* @r28, align 4
  store i32 %v0_1000428c, i32* @r4, align 4
  %v3_10004290 = load i32, i32* @r29, align 4
  %v4_10004290 = add i32 %v3_10004290, 10
  %v5_10004290 = inttoptr i32 %v4_10004290 to i16*
  store i16 %v3_10004288, i16* %v5_10004290, align 2
  %v0_10004294 = load i32, i32* @r30, align 4
  %v0_10004298 = load i32, i32* @r25, align 4
  %v1_10004298 = trunc i32 %v0_10004298 to i16
  %v2_10004298 = load i32, i32* @r28, align 4
  %v3_10004298 = add i32 %v2_10004298, 6
  %v4_10004298 = inttoptr i32 %v3_10004298 to i16*
  store i16 %v1_10004298, i16* %v4_10004298, align 2
  %v0_1000429c = load i32, i32* @r29, align 4
  store i32 %v0_1000429c, i32* %r3.global-to-local, align 4
  %v0_100042a0 = load i32, i32* @r28, align 4
  %v1_100042a0 = add i32 %v0_100042a0, 4
  %v2_100042a0 = inttoptr i32 %v1_100042a0 to i16*
  %v3_100042a0 = load i16, i16* %v2_100042a0, align 2
  %v4_100042a0 = zext i16 %v3_100042a0 to i32
  %v4_100042a4 = call i32 @function_10004430(i32 %v0_1000429c, i32 %v0_1000428c, i32 %v4_100042a0, i32 %v0_10004294)
  %v5_100042a4 = trunc i32 %v4_100042a4 to i16
  store i32 %v4_100042a4, i32* %r3.global-to-local, align 4
  %v3_100042a8 = load i32, i32* %stack_var_-2184, align 4
  store i32 %v3_100042a8, i32* %r7.global-to-local, align 4
  %v0_100042ac = load i32, i32* @r28, align 4
  %v1_100042ac = add i32 %v0_100042ac, 2
  %v2_100042ac = inttoptr i32 %v1_100042ac to i16*
  %v3_100042ac = load i16, i16* %v2_100042ac, align 2
  %v4_100042ac = zext i16 %v3_100042ac to i32
  store i32 %v4_100042ac, i32* %r0.global-to-local, align 4
  %v0_100042b0 = load i32, i32* @r29, align 4
  %v1_100042b4 = mul i32 %v3_100042a8, 24
  store i32 %v1_100042b4, i32* %r7.global-to-local, align 4
  %v4_100042b8 = add i32 %v0_100042ac, 6
  %v5_100042b8 = inttoptr i32 %v4_100042b8 to i16*
  store i16 %v5_100042a4, i16* %v5_100042b8, align 2
  %v0_100042bc = load i32, i32* @r31, align 4
  %v0_100042c0 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_100042c0, i32* %r3.global-to-local, align 4
  %v0_100042c4 = load i32, i32* %r7.global-to-local, align 4
  %v1_100042c4 = load i32, i32* %r14.global-to-local, align 4
  %v2_100042c4 = add i32 %v1_100042c4, %v0_100042c4
  store i32 %v2_100042c4, i32* %r7.global-to-local, align 4
  %v0_100042cc = load i32, i32* %r0.global-to-local, align 4
  %v1_100042cc = trunc i32 %v0_100042cc to i16
  %v3_100042cc = add i32 %v2_100042c4, 2
  %v4_100042cc = inttoptr i32 %v3_100042cc to i16*
  store i16 %v1_100042cc, i16* %v4_100042cc, align 2
  store i32 16, i32* %r8.global-to-local, align 4
  %v0_100042d4 = load i32, i32* @r21, align 4
  %v2_100042d4 = add i32 %v2_100042c4, 4
  %v3_100042d4 = inttoptr i32 %v2_100042d4 to i32*
  store i32 %v0_100042d4, i32* %v3_100042d4, align 4
  store i32 268452572, i32* @lr, align 4
  %v6_100042d8 = call i32 @function_10009da0(i32 %v0_100042c0, i32 %v0_100042b0, i32 %v0_100042bc, i32 16384, i32 %v2_100042c4, i32 16)
  store i32 %v6_100042d8, i32* %r3.global-to-local, align 4
  %v3_100042dc = load i32, i32* %stack_var_-2184, align 4
  store i32 %v3_100042dc, i32* %r9.global-to-local, align 4
  %v1_100042e0 = add i32 %v3_100042dc, 1
  store i32 %v1_100042e0, i32* %r0.global-to-local, align 4
  %v1_100042e4 = load i32, i32* %r15.global-to-local, align 4
  %v2_100042e4 = icmp slt i32 %v1_100042e0, %v1_100042e4
  %v4_100042e4 = icmp eq i32 %v1_100042e0, %v1_100042e4
  store i1 %v4_100042e4, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_100042e0, i32* %stack_var_-2184, align 4
  br i1 %v2_100042e4, label %dec_label_pc_10004270.dec_label_pc_1000423c_crit_edge, label %dec_label_pc_100042f0

dec_label_pc_10004270.dec_label_pc_1000423c_crit_edge: ; preds = %dec_label_pc_10004270
  %v0_10004240.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_1000423c

dec_label_pc_100042f0:                            ; preds = %dec_label_pc_10004270
  %v0_100042f0 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100042f0 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_100042f0 = or i1 %v0_100042f0, %v1_100042f0
  br i1 %v2_100042f0, label %dec_label_pc_100041f8.preheader, label %dec_label_pc_100041fc

dec_label_pc_100042f8:                            ; preds = %dec_label_pc_1000423c
  %v0_100042f8 = call i32 @function_10005f3c()
  %v1_100042f8 = trunc i32 %v0_100042f8 to i16
  store i32 %v0_100042f8, i32* %r3.global-to-local, align 4
  %v3_100042fc = load i32, i32* @r29, align 4
  %v4_100042fc = add i32 %v3_100042fc, 4
  %v5_100042fc = inttoptr i32 %v4_100042fc to i16*
  store i16 %v1_100042f8, i16* %v5_100042fc, align 2
  %v0_10004300 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10004300, label %dec_label_pc_10004304, label %dec_label_pc_1000425c

dec_label_pc_10004304:                            ; preds = %dec_label_pc_100042f8, %dec_label_pc_10004258
  %v0_10004304 = call i32 @function_10005f3c()
  %v1_10004304 = trunc i32 %v0_10004304 to i16
  store i32 %v0_10004304, i32* %r3.global-to-local, align 4
  %v0_10004308 = load i32, i32* @r26, align 4
  %v1_10004308 = mul i32 %v0_10004308, 16
  %v2_10004308 = udiv i32 %v0_10004308, 268435456
  %v3_10004308 = or i32 %v2_10004308, %v1_10004308
  store i32 %v3_10004308, i32* %r26.global-to-local, align 4
  %v1_1000430c = call %0 @__asm_mtcrf(i32 1, i32 %v3_10004308)
  %v1_10004310 = mul nuw i32 %v2_10004308, 268435456
  %v2_10004310 = urem i32 %v0_10004308, 268435456
  %v3_10004310 = or i32 %v1_10004310, %v2_10004310
  store i32 %v3_10004310, i32* @r26, align 4
  %v3_10004314 = load i32, i32* @r29, align 4
  %v4_10004314 = add i32 %v3_10004314, 20
  %v5_10004314 = inttoptr i32 %v4_10004314 to i16*
  store i16 %v1_10004304, i16* %v5_10004314, align 2
  %v0_10004318 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004318, label %dec_label_pc_1000431c, label %dec_label_pc_1000426c

dec_label_pc_1000431c:                            ; preds = %dec_label_pc_10004304, %dec_label_pc_1000425c
  %v0_1000431c = call i32 @function_10005f3c()
  %v1_1000431c = trunc i32 %v0_1000431c to i16
  store i32 %v0_1000431c, i32* %r3.global-to-local, align 4
  %v3_10004320 = load i32, i32* @r28, align 4
  %v4_10004320 = add i32 %v3_10004320, 2
  %v5_10004320 = inttoptr i32 %v4_10004320 to i16*
  store i16 %v1_1000431c, i16* %v5_10004320, align 2
  %v0_10004324 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10004324, label %dec_label_pc_10004328, label %dec_label_pc_10004270

dec_label_pc_10004328:                            ; preds = %dec_label_pc_1000431c, %dec_label_pc_1000426c
  %v0_10004328 = call i32 @function_10005f3c()
  %v1_10004328 = trunc i32 %v0_10004328 to i16
  store i32 %v0_10004328, i32* %r3.global-to-local, align 4
  %v3_1000432c = load i32, i32* @r29, align 4
  %v4_1000432c = add i32 %v3_1000432c, 28
  %v5_1000432c = inttoptr i32 %v4_1000432c to i16*
  store i16 %v1_10004328, i16* %v5_1000432c, align 2
  br label %dec_label_pc_10004270

dec_label_pc_10004340:                            ; preds = %dec_label_pc_10004050
  %v0_10004340 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10004340, i32* %r3.global-to-local, align 4
  store i32 268452680, i32* @lr, align 4
  %v0_10004344 = call i32 @function_100090cc()
  store i32 %v0_10004344, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10004348

dec_label_pc_10004348:                            ; preds = %dec_label_pc_10004028, %dec_label_pc_10004020, %dec_label_pc_10004340
  store i32 %v0_10003d74, i32* %r0.global-to-local, align 4
  %v1_1000435c = call %0 @__asm_mtcrf(i32 56, i32 %v0_10003d64)
  store i32 %v0_10003d94, i32* %r24.global-to-local, align 4
  store i32 %v0_10003d98, i32* %r25.global-to-local, align 4
  store i32 %v0_10003d9c, i32* %r26.global-to-local, align 4
  store i32 %v0_10003da0, i32* %r27.global-to-local, align 4
  store i32 %v0_10003da4, i32* %r28.global-to-local, align 4
  store i32 %v0_10003dc8, i32* %r30.global-to-local, align 4
  store i32 %v0_10003db4, i32* %r31.global-to-local, align 4
  %v0_100043a4 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100043a4

dec_label_pc_100043a8:                            ; preds = %dec_label_pc_10003fbc
  store i32 1246898730, i32* @r21, align 4
  br label %dec_label_pc_10004020

dec_label_pc_100043b4:                            ; preds = %dec_label_pc_10003fd4
  store i32 1074151430, i32* @r21, align 4
  br label %dec_label_pc_10004020

dec_label_pc_100043c0:                            ; preds = %dec_label_pc_10003fcc
  store i32 134744072, i32* @r21, align 4
  br label %dec_label_pc_10004020

; uselistorder directives
  uselistorder i32 %v0_10004328, { 1, 0 }
  uselistorder i32 %v0_1000431c, { 1, 0 }
  uselistorder i32 %v0_10004308, { 2, 1, 0 }
  uselistorder i32 %v0_10004304, { 1, 0 }
  uselistorder i32 %v0_100042f8, { 1, 0 }
  uselistorder i1 %v1_100042f0, { 1, 0 }
  uselistorder i1 %v0_100042f0, { 1, 0 }
  uselistorder i32 %v1_100042e0, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v4_100042a4, { 1, 0 }
  uselistorder i32 %v0_1000425c, { 2, 1, 0 }
  uselistorder i32 %v0_10004240, { 2, 1, 0 }
  uselistorder i32 %v1_10004234, { 1, 0 }
  uselistorder i32 %v0_100041bc, { 2, 0, 1 }
  uselistorder i32 %v1_100041ac, { 1, 0 }
  uselistorder i32 %v1_100041a4, { 0, 2, 1 }
  uselistorder i32 %v1_100040d8, { 1, 0 }
  uselistorder i32 %v1_100040d0, { 1, 0 }
  uselistorder i32 %v2_10004334, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10004334, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10004090, { 1, 0 }
  uselistorder i32 %v0_10004020, { 1, 0, 2 }
  uselistorder i1 %v2_10003fd4, { 1, 0 }
  uselistorder i32 %v1_10003fc0, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_10003fb8, { 2, 1, 0 }
  uselistorder i32 %v1_10003fa0, { 1, 2, 0 }
  uselistorder i32 %v1_10003f7c, { 1, 0 }
  uselistorder i32 %v0_10003f70, { 1, 0 }
  uselistorder i32 %v2_10003f6c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_10003f4c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10003f44, { 1, 2, 0, 3, 5, 4, 6 }
  uselistorder i32 %v0_10003eec, { 1, 0, 2, 3 }
  uselistorder i8 %v5_10003e2c, { 1, 0 }
  uselistorder i8 %v5_10003df4, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32* %r31.global-to-local, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder i32* %r30.global-to-local, { 8, 0, 2, 1, 3, 4, 5, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 29, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 2, 3, 16, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 1, 0 }
  uselistorder i32* %r28.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r27.global-to-local, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder i32* %r26.global-to-local, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder i32* %r25.global-to-local, { 4, 0, 1, 2, 3 }
  uselistorder i32* %r24.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 10, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 24, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32* %ctr.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i1* %cr7_eq.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i32 41, { 2, 3, 4, 0, 1 }
  uselistorder i32 47, { 1, 0, 2, 3 }
  uselistorder i32 (i32)* @function_10009b80, { 1, 0 }
  uselistorder i32 (i32, i32*, i32, i32)* @function_100006a8, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 103, 104, 105, 106, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102 }
  uselistorder label %dec_label_pc_10004348, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10004270, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100041fc, { 1, 0 }
  uselistorder label %dec_label_pc_100041f8, { 1, 0 }
  uselistorder label %dec_label_pc_100041f8.preheader, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10004124, { 1, 0 }
  uselistorder label %dec_label_pc_10004020, { 2, 3, 4, 5, 1, 0 }
  uselistorder label %dec_label_pc_10003f9c, { 1, 0 }
}

define i32 @function_100043cc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100043cc:
  %tmp = or i32 %arg1, 1
  %tmp8 = icmp eq i32 %tmp, 1
  br i1 %tmp8, label %dec_label_pc_10004400, label %dec_label_pc_100043d8

dec_label_pc_100043d8:                            ; preds = %dec_label_pc_100043cc
  %v1_100043d8 = add i32 %arg1, -2
  %v1_100043dc = udiv i32 %v1_100043d8, 2
  %v1_100043e0 = add nuw i32 %v1_100043dc, 1
  %v0_100043ec.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_100043ec

dec_label_pc_100043ec:                            ; preds = %dec_label_pc_100043ec, %dec_label_pc_100043d8
  %v0_100043fc = phi i32 [ %v1_100043fc, %dec_label_pc_100043ec ], [ %v1_100043e0, %dec_label_pc_100043d8 ]
  %v0_100043f8 = phi i32 [ %v2_100043f8, %dec_label_pc_100043ec ], [ 0, %dec_label_pc_100043d8 ]
  %v0_100043f4 = phi i32 [ %v1_100043f4, %dec_label_pc_100043ec ], [ %v0_100043ec.pre, %dec_label_pc_100043d8 ]
  %v1_100043ec = inttoptr i32 %v0_100043f4 to i16*
  %v2_100043ec = load i16, i16* %v1_100043ec, align 2
  %v3_100043ec = zext i16 %v2_100043ec to i32
  %v1_100043f4 = add i32 %v0_100043f4, 2
  store i32 %v1_100043f4, i32* @r3, align 4
  %v2_100043f8 = add i32 %v3_100043ec, %v0_100043f8
  %v1_100043fc = add i32 %v0_100043fc, -1
  %v2_100043fc = icmp eq i32 %v1_100043fc, 0
  br i1 %v2_100043fc, label %dec_label_pc_10004400.loopexit, label %dec_label_pc_100043ec

dec_label_pc_10004400.loopexit:                   ; preds = %dec_label_pc_100043ec
  %tmp11 = mul i32 %v1_100043dc, -2
  %tmp10 = add i32 %v1_100043d8, %tmp11
  br label %dec_label_pc_10004400

dec_label_pc_10004400:                            ; preds = %dec_label_pc_10004400.loopexit, %dec_label_pc_100043cc
  %v0_1000440c = phi i32 [ 0, %dec_label_pc_100043cc ], [ %v2_100043f8, %dec_label_pc_10004400.loopexit ]
  %v0_10004400 = phi i32 [ %arg1, %dec_label_pc_100043cc ], [ %tmp10, %dec_label_pc_10004400.loopexit ]
  %v3_10004400 = icmp eq i32 %v0_10004400, 1
  br i1 %v3_10004400, label %dec_label_pc_10004408, label %dec_label_pc_10004410

dec_label_pc_10004408:                            ; preds = %dec_label_pc_10004400
  %v0_10004408 = load i32, i32* @r3, align 4
  %v1_10004408 = add i32 %v0_10004408, 1
  %v2_10004408 = inttoptr i32 %v1_10004408 to i8*
  %v3_10004408 = load i8, i8* %v2_10004408, align 1
  %v4_10004408 = zext i8 %v3_10004408 to i32
  %v2_1000440c = add i32 %v4_10004408, %v0_1000440c
  br label %dec_label_pc_10004410

dec_label_pc_10004410:                            ; preds = %dec_label_pc_10004400, %dec_label_pc_10004408
  %v0_10004410 = phi i32 [ %v0_1000440c, %dec_label_pc_10004400 ], [ %v2_1000440c, %dec_label_pc_10004408 ]
  %v1_10004410 = urem i32 %v0_10004410, 65536
  %v1_10004414 = udiv i32 %v0_10004410, 65536
  %v2_10004418 = add nuw nsw i32 %v1_10004410, %v1_10004414
  %v1_1000441c = udiv i32 %v2_10004418, 65536
  %v2_10004420 = add nuw nsw i32 %v1_1000441c, %v2_10004418
  %v1_10004424 = urem i32 %v2_10004420, 65536
  %v1_10004428 = xor i32 %v1_10004424, 65535
  ret i32 %v1_10004428

; uselistorder directives
  uselistorder i32 %v2_10004418, { 1, 0 }
  uselistorder i32 %v0_1000440c, { 1, 0 }
  uselistorder i32 %v1_100043fc, { 1, 0 }
  uselistorder i32 %v1_100043f4, { 1, 0 }
  uselistorder label %dec_label_pc_10004410, { 1, 0 }
}

define i32 @function_10004430(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10004430:
  %r0.global-to-local = alloca i32, align 4
  %v1_10004434 = add i32 %arg1, 12
  %v2_10004434 = inttoptr i32 %v1_10004434 to i32*
  %v3_10004434 = load i32, i32* %v2_10004434, align 4
  %v1_10004438 = add i32 %arg1, 16
  %v2_10004438 = inttoptr i32 %v1_10004438 to i32*
  %v3_10004438 = load i32, i32* %v2_10004438, align 4
  %tmp = icmp slt i32 %arg3, 2
  br i1 %tmp, label %dec_label_pc_10004474, label %dec_label_pc_10004440

dec_label_pc_10004440:                            ; preds = %dec_label_pc_10004430
  %v1_10004440 = add i32 %arg3, -2
  %v1_10004448 = icmp slt i32 %v1_10004440, 0
  %v1_1000444c = udiv i32 %v1_10004440, 2
  %v1_10004450 = add nuw i32 %v1_1000444c, 1
  br i1 %v1_10004448, label %dec_label_pc_100044dc, label %dec_label_pc_1000445c.preheader

dec_label_pc_1000445c.preheader:                  ; preds = %dec_label_pc_100044dc, %dec_label_pc_10004440
  %v0_100044704 = phi i32 [ 1, %dec_label_pc_100044dc ], [ %v1_10004450, %dec_label_pc_10004440 ]
  %v0_1000445c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1000445c

dec_label_pc_1000445c:                            ; preds = %dec_label_pc_1000445c.preheader, %dec_label_pc_1000445c
  %v0_10004470 = phi i32 [ %v0_100044704, %dec_label_pc_1000445c.preheader ], [ %v1_10004470, %dec_label_pc_1000445c ]
  %v0_1000446c = phi i32 [ 0, %dec_label_pc_1000445c.preheader ], [ %v2_1000446c, %dec_label_pc_1000445c ]
  %v0_10004464 = phi i32 [ %v0_1000445c.pre, %dec_label_pc_1000445c.preheader ], [ %v1_10004464, %dec_label_pc_1000445c ]
  %v1_1000445c = inttoptr i32 %v0_10004464 to i16*
  %v2_1000445c = load i16, i16* %v1_1000445c, align 2
  %v3_1000445c = zext i16 %v2_1000445c to i32
  store i32 %v3_1000445c, i32* %r0.global-to-local, align 4
  %v1_10004464 = add i32 %v0_10004464, 2
  %v2_1000446c = add i32 %v3_1000445c, %v0_1000446c
  %v1_10004470 = add i32 %v0_10004470, -1
  %v2_10004470 = icmp eq i32 %v1_10004470, 0
  br i1 %v2_10004470, label %dec_label_pc_10004474.loopexit, label %dec_label_pc_1000445c

dec_label_pc_10004474.loopexit:                   ; preds = %dec_label_pc_1000445c
  %tmp14 = mul i32 %v0_100044704, -2
  %tmp13 = add i32 %tmp14, %arg3
  %v3_10004468 = icmp eq i32 %tmp13, 1
  br i1 %v3_10004468, label %dec_label_pc_100044c8, label %dec_label_pc_10004478

dec_label_pc_10004474:                            ; preds = %dec_label_pc_10004430
  %v3_10004430 = icmp eq i32 %arg3, 1
  br i1 %v3_10004430, label %dec_label_pc_10004474.dec_label_pc_100044c8_crit_edge, label %dec_label_pc_10004478

dec_label_pc_10004474.dec_label_pc_100044c8_crit_edge: ; preds = %dec_label_pc_10004474
  %v0_100044c8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_100044c8

dec_label_pc_10004478:                            ; preds = %dec_label_pc_10004474.loopexit, %dec_label_pc_10004474, %dec_label_pc_100044c8
  %v0_10004490 = phi i32 [ 0, %dec_label_pc_10004474 ], [ %v2_100044cc, %dec_label_pc_100044c8 ], [ %v2_1000446c, %dec_label_pc_10004474.loopexit ]
  %v1_10004478 = urem i32 %v3_10004434, 65536
  %v1_1000447c = udiv i32 %v3_10004434, 65536
  %v2_10004480 = add nuw nsw i32 %v1_10004478, %v1_1000447c
  store i32 %v2_10004480, i32* %r0.global-to-local, align 4
  %v1_10004484 = urem i32 %v3_10004438, 65536
  %v1_10004488 = add i32 %arg1, 9
  %v2_10004488 = inttoptr i32 %v1_10004488 to i8*
  %v3_10004488 = load i8, i8* %v2_10004488, align 1
  %v4_10004488 = zext i8 %v3_10004488 to i32
  %v1_1000448c = udiv i32 %v3_10004438, 65536
  %v2_10004490 = add i32 %v0_10004490, %v1_1000448c
  %v2_10004498 = add i32 %v2_10004490, %v4_10004488
  %v2_10004494 = add i32 %v2_10004480, %arg2
  %v2_1000449c = add i32 %v2_10004494, %v1_10004484
  %v2_100044a0 = add i32 %v2_1000449c, %v2_10004498
  store i32 %v2_100044a0, i32* %r0.global-to-local, align 4
  %v1_100044a4 = call i32 @__asm_rlwinm.(i32 %v2_100044a0, i32 16, i32 16, i32 31)
  %v4_100044a4 = icmp eq i32 %v1_100044a4, 0
  br i1 %v4_100044a4, label %dec_label_pc_100044bc, label %dec_label_pc_100044ac

dec_label_pc_100044ac:                            ; preds = %dec_label_pc_10004478, %dec_label_pc_100044ac
  %v1_100044b0 = phi i32 [ %v1_100044b4, %dec_label_pc_100044ac ], [ %v1_100044a4, %dec_label_pc_10004478 ]
  %v0_100044ac = load i32, i32* %r0.global-to-local, align 4
  %v1_100044ac = urem i32 %v0_100044ac, 65536
  %v2_100044b0 = add i32 %v1_100044ac, %v1_100044b0
  store i32 %v2_100044b0, i32* %r0.global-to-local, align 4
  %v1_100044b4 = call i32 @__asm_rlwinm.(i32 %v2_100044b0, i32 16, i32 16, i32 31)
  %v4_100044b4 = icmp eq i32 %v1_100044b4, 0
  br i1 %v4_100044b4, label %dec_label_pc_100044bc, label %dec_label_pc_100044ac

dec_label_pc_100044bc:                            ; preds = %dec_label_pc_100044ac, %dec_label_pc_10004478
  %v0_100044bc = load i32, i32* %r0.global-to-local, align 4
  %v1_100044bc = urem i32 %v0_100044bc, 65536
  %v1_100044c0 = xor i32 %v1_100044bc, 65535
  ret i32 %v1_100044c0

dec_label_pc_100044c8:                            ; preds = %dec_label_pc_10004474.dec_label_pc_100044c8_crit_edge, %dec_label_pc_10004474.loopexit
  %v0_100044c8 = phi i32 [ %v1_10004464, %dec_label_pc_10004474.loopexit ], [ %v0_100044c8.pre, %dec_label_pc_10004474.dec_label_pc_100044c8_crit_edge ]
  %v0_100044cc10 = phi i32 [ %v2_1000446c, %dec_label_pc_10004474.loopexit ], [ 0, %dec_label_pc_10004474.dec_label_pc_100044c8_crit_edge ]
  %v1_100044c8 = inttoptr i32 %v0_100044c8 to i8*
  %v2_100044c8 = load i8, i8* %v1_100044c8, align 1
  %v3_100044c8 = zext i8 %v2_100044c8 to i32
  store i32 %v3_100044c8, i32* %r0.global-to-local, align 4
  %v2_100044cc = add i32 %v3_100044c8, %v0_100044cc10
  br label %dec_label_pc_10004478

dec_label_pc_100044dc:                            ; preds = %dec_label_pc_10004440
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000445c.preheader

; uselistorder directives
  uselistorder i32 %v1_100044b4, { 1, 0 }
  uselistorder i32 %v1_10004470, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7 }
  uselistorder i32 %arg3, { 3, 0, 2, 1 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100044ac, { 1, 0 }
  uselistorder label %dec_label_pc_10004478, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000445c, { 1, 0 }
}

define i32 @function_100044e8(i32 %arg1) local_unnamed_addr {
dec_label_pc_100044e8:
  %v3_100044fc = load i32, i32* @global_var_1001c264.26, align 4
  store i32 268453124, i32* @lr, align 4
  %v2_10004500 = call i32 @function_100091ec(i32 %v3_100044fc, i32 9)
  ret i32 %v2_10004500
}

define i32 @function_10004514(i32 %arg1) local_unnamed_addr {
dec_label_pc_10004514:
  %r26.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-8792 = alloca i32, align 4
  %stack_var_-8760 = alloca i8, align 1
  %stack_var_-8776 = alloca i8, align 1
  %stack_var_-4151 = alloca i32, align 4
  %stack_var_-8247 = alloca i32, align 4
  %v0_10004524 = load i32, i32* @r27, align 4
  %v2_10004528 = ptrtoint i32* %stack_var_-8247 to i32
  store i32 %v2_10004528, i32* @r27, align 4
  %v2_10004530 = ptrtoint i32* %stack_var_-4151 to i32
  %v0_10004534 = load i32, i32* @r29, align 4
  store i32 %arg1, i32* @r29, align 4
  %v0_10004544 = load i32, i32* @r25, align 4
  %v2_10004548 = ptrtoint i8* %stack_var_-8776 to i32
  %v0_1000454c = load i32, i32* @r30, align 4
  %v2_10004550 = ptrtoint i8* %stack_var_-8760 to i32
  store i32 %v2_10004550, i32* @r30, align 4
  %v0_10004554 = load i32, i32* @r31, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v0_1000455c = load i32, i32* @r23, align 4
  %v0_10004564 = load i32, i32* @r28, align 4
  store i32 268453228, i32* @lr, align 4
  %v3_10004568 = call i32 @function_100098d0(i32 %v2_10004528, i32 0, i32 4096)
  store i32 268453244, i32* @lr, align 4
  %v3_10004578 = call i32 @function_100098d0(i32 %v2_10004530, i32 0, i32 4096)
  store i32 268453260, i32* @lr, align 4
  %v3_10004588 = call i32 @function_100098d0(i32 %v2_10004550, i32 0, i32 513)
  %v0_10004594 = load i32, i32* @r29, align 4
  %v0_10004598 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10004598, i32* %stack_var_-8792, align 4
  %v3_100045a8 = trunc i32 %v0_10004594 to i8
  %v4_100045a8 = call i32 @function_10008de8(i8 %v3_100045a8, i32 16, i32 %v2_10004548)
  store i32 268453300, i32* @lr, align 4
  %v2_100045b0 = call i32 @function_1000890c(i8* nonnull %stack_var_-8776)
  %v3_100045b4 = icmp eq i32 %v2_100045b0, 2
  br i1 %v3_100045b4, label %dec_label_pc_10004af4, label %dec_label_pc_100045bc

dec_label_pc_100045bc:                            ; preds = %dec_label_pc_10004514, %dec_label_pc_10004af4
  store i32 0, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100045c8.27 to i32), i32* @lr, align 4
  %v1_100045c4 = call i32 @function_100082a8(i32 15)
  store i32 ptrtoint ([3 x i8]* @global_var_100045d0.28 to i32), i32* @lr, align 4
  %v1_100045cc = call i32 @function_100082a8(i32 16)
  store i32 ptrtoint ([3 x i8]* @global_var_100045d8.29 to i32), i32* @lr, align 4
  %v1_100045d4 = call i32 @function_100082a8(i32 17)
  store i32 268453344, i32* @lr, align 4
  %v1_100045dc = call i32 @function_100082a8(i32 19)
  %v3_100045e8 = call i32 @function_100081f4(i32 19, i32* null)
  store i32 268453368, i32* @lr, align 4
  %v2_100045f4 = call i32 @function_10009234(i32 %v3_100045e8, i32 0)
  %v3_100045f8 = icmp eq i32 %v2_100045f4, -1
  store i32 %v2_100045f4, i32* @r28, align 4
  br i1 %v3_100045f8, label %dec_label_pc_10004a40, label %dec_label_pc_10004604

dec_label_pc_10004604:                            ; preds = %dec_label_pc_100045bc
  %v2_10004604 = ptrtoint i32* %stack_var_-8792 to i32
  store i32 %v2_10004604, i32* %r26.global-to-local, align 4
  store i32 268453400, i32* @lr, align 4
  %v4_1000461488 = call i32 @function_10008b6c(i8* nonnull %stack_var_-8760, i32 512, i32 %v2_100045f4)
  %v3_1000461890 = icmp eq i32 %v4_1000461488, 0
  br i1 %v3_1000461890, label %dec_label_pc_100047c0.loopexit, label %dec_label_pc_10004620

dec_label_pc_10004620:                            ; preds = %dec_label_pc_10004604, %dec_label_pc_10004608.backedge
  %v3_10004620 = load i8, i8* %stack_var_-8760, align 1
  %v3_10004624 = icmp eq i8 %v3_10004620, 0
  br i1 %v3_10004624, label %dec_label_pc_10004608.backedge, label %dec_label_pc_1000462c

dec_label_pc_10004608.backedge:                   ; preds = %dec_label_pc_10004640, %dec_label_pc_10004620, %dec_label_pc_100046b0, %dec_label_pc_10004748, %dec_label_pc_10004794
  %v0_10004610.pre = load i32, i32* @r28, align 4
  store i32 268453400, i32* @lr, align 4
  %v4_10004614 = call i32 @function_10008b6c(i8* nonnull %stack_var_-8760, i32 512, i32 %v0_10004610.pre)
  %v3_10004618 = icmp eq i32 %v4_10004614, 0
  br i1 %v3_10004618, label %dec_label_pc_100047c0.loopexit, label %dec_label_pc_10004620

dec_label_pc_1000462c:                            ; preds = %dec_label_pc_10004620
  %v3_1000462c = icmp eq i8 %v3_10004620, 58
  store i32 3, i32* @r31, align 4
  br i1 %v3_1000462c, label %dec_label_pc_10004660, label %dec_label_pc_1000463c

dec_label_pc_1000463c:                            ; preds = %dec_label_pc_1000462c
  %v1_10004644.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10004640

dec_label_pc_10004640:                            ; preds = %dec_label_pc_10004654, %dec_label_pc_1000463c
  %v0_10004640 = phi i32 [ %v1_10004640, %dec_label_pc_10004654 ], [ 0, %dec_label_pc_1000463c ]
  %v1_10004640 = add i32 %v0_10004640, 1
  %v2_10004644 = add i32 %v1_10004640, %v1_10004644.pre
  %v3_10004644 = inttoptr i32 %v2_10004644 to i8*
  %v4_10004644 = load i8, i8* %v3_10004644, align 1
  %v3_10004648 = icmp eq i8 %v4_10004644, 0
  br i1 %v3_10004648, label %dec_label_pc_10004608.backedge, label %dec_label_pc_10004654

dec_label_pc_10004654:                            ; preds = %dec_label_pc_10004640
  %v3_1000464c = icmp eq i8 %v4_10004644, 58
  br i1 %v3_1000464c, label %dec_label_pc_10004658, label %dec_label_pc_10004640

dec_label_pc_10004658:                            ; preds = %dec_label_pc_10004654
  %v1_10004658 = add i32 %v0_10004640, 4
  store i32 %v1_10004658, i32* @r31, align 4
  %v1_1000465c = add i32 %v0_10004640, 3
  br label %dec_label_pc_10004660

dec_label_pc_10004660:                            ; preds = %dec_label_pc_1000462c, %dec_label_pc_10004658
  %v1_100046b8 = phi i32 [ 2, %dec_label_pc_1000462c ], [ %v1_1000465c, %dec_label_pc_10004658 ]
  %v0_10004660 = load i32, i32* %r26.global-to-local, align 4
  %v2_10004660 = add i32 %v0_10004660, %v1_100046b8
  %v1_10004668 = add i32 %v2_10004660, 32
  %v2_10004668 = inttoptr i32 %v1_10004668 to i8*
  %v3_10004668 = load i8, i8* %v2_10004668, align 1
  %v3_1000466c = icmp eq i8 %v3_10004668, 0
  br i1 %v3_1000466c, label %dec_label_pc_100046b0, label %dec_label_pc_10004674

dec_label_pc_10004674:                            ; preds = %dec_label_pc_10004660
  %v3_10004674 = icmp eq i8 %v3_10004668, 32
  %v1_10004678 = add i32 %v1_100046b8, 1
  store i32 %v1_10004678, i32* @r31, align 4
  br i1 %v3_10004674, label %dec_label_pc_100046b0, label %dec_label_pc_10004680

dec_label_pc_10004680:                            ; preds = %dec_label_pc_10004674
  %v0_10004688 = load i32, i32* @r30, align 4
  %v2_10004688 = add i32 %v0_10004688, %v1_10004678
  br label %dec_label_pc_10004694

dec_label_pc_10004694:                            ; preds = %dec_label_pc_10004694, %dec_label_pc_10004680
  %v0_10004698 = phi i32 [ %v1_10004698, %dec_label_pc_10004694 ], [ %v1_100046b8, %dec_label_pc_10004680 ]
  %v0_1000469c = phi i32 [ %v1_1000469c, %dec_label_pc_10004694 ], [ %v2_10004688, %dec_label_pc_10004680 ]
  %v1_10004694 = inttoptr i32 %v0_1000469c to i8*
  %v2_10004694 = load i8, i8* %v1_10004694, align 1
  %v1_10004698 = add i32 %v0_10004698, 1
  %v1_1000469c = add i32 %v0_1000469c, 1
  %tmp60 = or i8 %v2_10004694, 32
  %tmp61 = icmp eq i8 %tmp60, 32
  br i1 %tmp61, label %dec_label_pc_100046ac, label %dec_label_pc_10004694

dec_label_pc_100046ac:                            ; preds = %dec_label_pc_10004694
  %v1_100046ac = add i32 %v0_10004698, 2
  store i32 %v1_100046ac, i32* @r31, align 4
  br label %dec_label_pc_100046b0

dec_label_pc_100046b0:                            ; preds = %dec_label_pc_10004674, %dec_label_pc_10004660, %dec_label_pc_100046ac
  %v1_100046b0 = phi i32 [ %v1_100046b8, %dec_label_pc_10004674 ], [ %v1_100046b8, %dec_label_pc_10004660 ], [ %v1_10004698, %dec_label_pc_100046ac ]
  %v2_100046b0 = add i32 %v1_100046b0, %v0_10004660
  %v0_100046b8 = load i32, i32* @r30, align 4
  %v2_100046b8 = add i32 %v0_100046b8, %v1_100046b8
  store i32 %v2_100046b8, i32* @r29, align 4
  %v3_100046bc = add i32 %v2_100046b0, 32
  %v4_100046bc = inttoptr i32 %v3_100046bc to i8*
  store i8 0, i8* %v4_100046bc, align 1
  %v0_100046c0 = load i32, i32* @r29, align 4
  store i32 268453576, i32* @lr, align 4
  %v1_100046c4 = inttoptr i32 %v0_100046c0 to i8*
  %v2_100046c4 = call i32 @function_1000890c(i8* %v1_100046c4)
  %v0_100046d0 = load i32, i32* @r29, align 4
  %v3_100046d4 = inttoptr i32 %v0_100046d0 to i8*
  %v4_100046d4 = call i32 @function_10008cbc(i8* %v3_100046d4, i32 %v2_100046c4, i32 %v2_10004548)
  %v3_100046dc = icmp eq i32 %v4_100046d4, -1
  br i1 %v3_100046dc, label %dec_label_pc_10004608.backedge, label %dec_label_pc_100046e8.preheader

dec_label_pc_100046e8.preheader:                  ; preds = %dec_label_pc_100046b0
  %v0_100046e8.pre = load i32, i32* @r31, align 4
  %v0_100046f0.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100046e8.outer

dec_label_pc_100046e8.outer:                      ; preds = %dec_label_pc_10004a90, %dec_label_pc_100046e8.preheader
  %v0_1000470428.ph = phi i32 [ %v1_10004a78, %dec_label_pc_10004a90 ], [ 0, %dec_label_pc_100046e8.preheader ]
  %v0_100046e8.ph = phi i32 [ %v1_1000479c76, %dec_label_pc_10004a90 ], [ %v0_100046e8.pre, %dec_label_pc_100046e8.preheader ]
  %v0_10004748.ph = phi i32 [ 1, %dec_label_pc_10004a90 ], [ 0, %dec_label_pc_100046e8.preheader ]
  br label %dec_label_pc_100046e8

dec_label_pc_100046e8:                            ; preds = %dec_label_pc_100046e8.outer, %dec_label_pc_10004a80
  %v0_1000470428 = phi i32 [ %v1_10004a78, %dec_label_pc_10004a80 ], [ %v0_1000470428.ph, %dec_label_pc_100046e8.outer ]
  %v0_100046e8 = phi i32 [ %v1_1000479c76, %dec_label_pc_10004a80 ], [ %v0_100046e8.ph, %dec_label_pc_100046e8.outer ]
  %v1_100046e8 = add i32 %v0_100046e8, 1
  %v2_100046f0 = add i32 %v1_100046e8, %v0_100046f0.pre
  %v1_1000471c68 = inttoptr i32 %v2_100046f0 to i8*
  %v2_1000471c69 = load i8, i8* %v1_1000471c68, align 1
  store i32 %v1_100046e8, i32* @r31, align 4
  %v3_1000472471 = icmp eq i8 %v2_1000471c69, 0
  br i1 %v3_1000472471, label %dec_label_pc_10004748, label %dec_label_pc_10004734

dec_label_pc_100046f8:                            ; preds = %dec_label_pc_10004734
  %v3_1000472879 = icmp eq i8 %v3_1000472879.in, 9
  br i1 %v3_1000472879, label %dec_label_pc_10004738, label %dec_label_pc_10004704

dec_label_pc_10004704:                            ; preds = %dec_label_pc_100046f8
  %v3_100046f8 = icmp eq i32 %v0_100046f875, 1
  br i1 %v3_100046f8, label %dec_label_pc_10004a78, label %dec_label_pc_1000470c

dec_label_pc_1000470c:                            ; preds = %dec_label_pc_10004704, %dec_label_pc_10004a78
  %v0_1000470c = phi i32 [ %v1_10004a78, %dec_label_pc_10004a78 ], [ %v0_1000473874, %dec_label_pc_10004704 ]
  %v2_1000470c = icmp sgt i32 %v0_1000470c, 6
  br i1 %v2_1000470c, label %dec_label_pc_10004748, label %dec_label_pc_10004718

dec_label_pc_10004718:                            ; preds = %dec_label_pc_10004738, %dec_label_pc_1000470c
  %v0_1000470427 = phi i32 [ %v0_1000473874, %dec_label_pc_10004738 ], [ %v0_1000470c, %dec_label_pc_1000470c ]
  %v0_100046f825 = phi i32 [ 1, %dec_label_pc_10004738 ], [ 0, %dec_label_pc_1000470c ]
  %v0_1000471c22 = add i32 %v0_1000474078, 1
  %v1_10004718 = add i32 %v1_1000479c76, 1
  %v1_1000471c = inttoptr i32 %v0_1000471c22 to i8*
  %v2_1000471c = load i8, i8* %v1_1000471c, align 1
  store i32 %v1_10004718, i32* @r31, align 4
  %v3_10004724 = icmp eq i8 %v2_1000471c, 0
  br i1 %v3_10004724, label %dec_label_pc_10004748, label %dec_label_pc_10004734

dec_label_pc_10004734:                            ; preds = %dec_label_pc_100046e8, %dec_label_pc_10004718
  %v3_1000472879.in = phi i8 [ %v2_1000471c, %dec_label_pc_10004718 ], [ %v2_1000471c69, %dec_label_pc_100046e8 ]
  %v3_1000472c80.in = phi i8 [ %v2_1000471c, %dec_label_pc_10004718 ], [ %v2_1000471c69, %dec_label_pc_100046e8 ]
  %v0_1000474078 = phi i32 [ %v0_1000471c22, %dec_label_pc_10004718 ], [ %v2_100046f0, %dec_label_pc_100046e8 ]
  %v1_1000479c76 = phi i32 [ %v1_10004718, %dec_label_pc_10004718 ], [ %v1_100046e8, %dec_label_pc_100046e8 ]
  %v0_100046f875 = phi i32 [ %v0_100046f825, %dec_label_pc_10004718 ], [ 0, %dec_label_pc_100046e8 ]
  %v0_1000473874 = phi i32 [ %v0_1000470427, %dec_label_pc_10004718 ], [ %v0_1000470428, %dec_label_pc_100046e8 ]
  %v3_1000472c80 = icmp eq i8 %v3_1000472c80.in, 32
  br i1 %v3_1000472c80, label %dec_label_pc_10004738, label %dec_label_pc_100046f8

dec_label_pc_10004738:                            ; preds = %dec_label_pc_10004734, %dec_label_pc_100046f8
  %tmp62 = icmp slt i32 %v0_1000473874, 7
  br i1 %tmp62, label %dec_label_pc_10004718, label %dec_label_pc_10004748

dec_label_pc_10004748:                            ; preds = %dec_label_pc_10004718, %dec_label_pc_1000470c, %dec_label_pc_10004738, %dec_label_pc_100046e8
  %v1_1000479c.lcssa = phi i32 [ %v1_100046e8, %dec_label_pc_100046e8 ], [ %v1_1000479c76, %dec_label_pc_10004738 ], [ %v1_1000479c76, %dec_label_pc_1000470c ], [ %v1_10004718, %dec_label_pc_10004718 ]
  %v3_10004748 = icmp eq i32 %v0_10004748.ph, 0
  br i1 %v3_10004748, label %dec_label_pc_10004608.backedge, label %dec_label_pc_10004754

dec_label_pc_10004754:                            ; preds = %dec_label_pc_10004748
  %v0_10004754 = load i32, i32* %r26.global-to-local, align 4
  %v2_10004754 = add i32 %v0_10004754, %v1_1000479c.lcssa
  %v1_10004758 = add i32 %v2_10004754, 32
  %v2_10004758 = inttoptr i32 %v1_10004758 to i8*
  %v3_10004758 = load i8, i8* %v2_10004758, align 1
  %v3_1000475c = icmp eq i8 %v3_10004758, 0
  br i1 %v3_1000475c, label %dec_label_pc_10004794, label %dec_label_pc_10004764

dec_label_pc_10004764:                            ; preds = %dec_label_pc_10004754
  %v3_10004764 = icmp eq i8 %v3_10004758, 32
  br i1 %v3_10004764, label %dec_label_pc_10004794, label %dec_label_pc_1000476c

dec_label_pc_1000476c:                            ; preds = %dec_label_pc_10004764
  %v1_1000476c = add i32 %v1_1000479c.lcssa, 1
  %v2_10004770 = add i32 %v1_1000476c, %v0_100046f0.pre
  br label %dec_label_pc_1000477c

dec_label_pc_1000477c:                            ; preds = %dec_label_pc_1000477c, %dec_label_pc_1000476c
  %v0_10004780 = phi i32 [ %v1_10004780, %dec_label_pc_1000477c ], [ %v1_1000479c.lcssa, %dec_label_pc_1000476c ]
  %v0_10004784 = phi i32 [ %v1_10004784, %dec_label_pc_1000477c ], [ %v2_10004770, %dec_label_pc_1000476c ]
  %v1_1000477c = inttoptr i32 %v0_10004784 to i8*
  %v2_1000477c = load i8, i8* %v1_1000477c, align 1
  %v1_10004780 = add i32 %v0_10004780, 1
  %v1_10004784 = add i32 %v0_10004784, 1
  %tmp63 = or i8 %v2_1000477c, 32
  %tmp64 = icmp eq i8 %tmp63, 32
  br i1 %tmp64, label %dec_label_pc_10004794, label %dec_label_pc_1000477c

dec_label_pc_10004794:                            ; preds = %dec_label_pc_1000477c, %dec_label_pc_10004764, %dec_label_pc_10004754
  %v1_10004794 = phi i32 [ %v1_1000479c.lcssa, %dec_label_pc_10004764 ], [ %v1_1000479c.lcssa, %dec_label_pc_10004754 ], [ %v1_10004780, %dec_label_pc_1000477c ]
  %v2_10004794 = add i32 %v1_10004794, %v0_10004754
  %v2_1000479c = add i32 %v1_1000479c.lcssa, %v0_100046f0.pre
  store i32 %v2_1000479c, i32* @r31, align 4
  %v3_100047a0 = add i32 %v2_10004794, 32
  %v4_100047a0 = inttoptr i32 %v3_100047a0 to i8*
  store i8 0, i8* %v4_100047a0, align 1
  %v0_100047a4 = load i32, i32* @r31, align 4
  store i32 268453804, i32* @lr, align 4
  %v1_100047a8 = inttoptr i32 %v0_100047a4 to i8*
  %v2_100047a8 = call i32 @function_1000890c(i8* %v1_100047a8)
  %v2_100047ac = icmp sgt i32 %v2_100047a8, 15
  br i1 %v2_100047ac, label %dec_label_pc_10004608.backedge, label %dec_label_pc_100047b4

dec_label_pc_100047b4:                            ; preds = %dec_label_pc_10004794
  %v0_100047b4 = load i32, i32* @r31, align 4
  store i32 %v2_10004604, i32* @r3, align 4
  %v2_100047bc = bitcast i32* %stack_var_-8792 to i8*
  %v3_100047bc = call i32 @function_10008934(i8* %v2_100047bc, i32 %v0_100047b4)
  br label %dec_label_pc_100047c0

dec_label_pc_100047c0.loopexit:                   ; preds = %dec_label_pc_10004608.backedge, %dec_label_pc_10004604
  %.pre = bitcast i32* %stack_var_-8792 to i8*
  br label %dec_label_pc_100047c0

dec_label_pc_100047c0:                            ; preds = %dec_label_pc_100047c0.loopexit, %dec_label_pc_100047b4
  %v1_100047cc.pre-phi = phi i8* [ %.pre, %dec_label_pc_100047c0.loopexit ], [ %v2_100047bc, %dec_label_pc_100047b4 ]
  store i32 268453832, i32* @lr, align 4
  %v0_100047c4 = call i32 @function_100090cc()
  store i32 268453840, i32* @lr, align 4
  %v2_100047cc = call i32 @function_1000890c(i8* %v1_100047cc.pre-phi)
  %v3_100047d0 = icmp eq i32 %v2_100047cc, 0
  br i1 %v3_100047d0, label %dec_label_pc_10004a98, label %dec_label_pc_100047d8

dec_label_pc_100047d8:                            ; preds = %dec_label_pc_100047c0
  %v3_100047e0 = call i32 @function_100081f4(i32 15, i32* null)
  store i32 0, i32* %r31.global-to-local, align 4
  store i32 268453868, i32* @lr, align 4
  %v1_100047e8 = call i32 @function_10009618(i32 %v3_100047e0)
  store i32 %v1_100047e8, i32* @r23, align 4
  %v3_100047ec = icmp eq i32 %v1_100047e8, 0
  br i1 %v3_100047ec, label %dec_label_pc_10004a20, label %dec_label_pc_100047f4

dec_label_pc_100047f4:                            ; preds = %dec_label_pc_100047d8
  store i32 0, i32* @r28, align 4
  store i32 268453888, i32* @lr, align 4
  %v1_100047fc7 = inttoptr i32 %v1_100047e8 to i32*
  %v2_100047fc8 = call i32 @function_10009728(i32* %v1_100047fc7)
  %v3_1000480011 = icmp eq i32 %v2_100047fc8, 0
  br i1 %v3_1000480011, label %dec_label_pc_10004a14, label %dec_label_pc_10004808.preheader.lr.ph

dec_label_pc_10004808.preheader.lr.ph:            ; preds = %dec_label_pc_100047f4
  %v2_1000483c = bitcast i32* %stack_var_-8247 to i8*
  %v1_100049ac = bitcast i32* %stack_var_-4151 to i8*
  br label %dec_label_pc_10004808.preheader

dec_label_pc_100047f8.loopexit:                   ; preds = %dec_label_pc_10004810, %dec_label_pc_10004828, %dec_label_pc_10004890
  %v0_100047f8 = load i32, i32* @r23, align 4
  store i32 268453888, i32* @lr, align 4
  %v1_100047fc = inttoptr i32 %v0_100047f8 to i32*
  %v2_100047fc = call i32 @function_10009728(i32* %v1_100047fc)
  %v3_10004800 = icmp eq i32 %v2_100047fc, 0
  br i1 %v3_10004800, label %dec_label_pc_10004a14, label %dec_label_pc_10004808.preheader

dec_label_pc_10004808.preheader:                  ; preds = %dec_label_pc_10004808.preheader.lr.ph, %dec_label_pc_100047f8.loopexit
  %v0_1000481035 = phi i32 [ %v2_100047fc8, %dec_label_pc_10004808.preheader.lr.ph ], [ %v2_100047fc, %dec_label_pc_100047f8.loopexit ]
  br label %dec_label_pc_10004808

dec_label_pc_10004808:                            ; preds = %dec_label_pc_10004808.preheader, %dec_label_pc_100049fc
  %v0_10004810 = phi i32 [ %v0_1000481035, %dec_label_pc_10004808.preheader ], [ %v2_10004a08, %dec_label_pc_100049fc ]
  %v0_10004808 = load i32, i32* @r28, align 4
  %v3_10004808 = icmp eq i32 %v0_10004808, 0
  br i1 %v3_10004808, label %dec_label_pc_10004810, label %dec_label_pc_10004a14

dec_label_pc_10004810:                            ; preds = %dec_label_pc_10004808
  %v1_10004810 = add i32 %v0_10004810, 11
  %v2_10004810 = inttoptr i32 %v1_10004810 to i8*
  %v3_10004810 = load i8, i8* %v2_10004810, align 1
  %v4_10004810 = zext i8 %v3_10004810 to i32
  store i32 %v1_10004810, i32* @r30, align 4
  %v1_10004818 = add nuw nsw i32 %v4_10004810, 208
  %v1_1000481c = urem i32 %v1_10004818, 256
  %v2_10004820 = icmp ugt i32 %v1_1000481c, 9
  br i1 %v2_10004820, label %dec_label_pc_100047f8.loopexit, label %dec_label_pc_10004828

dec_label_pc_10004828:                            ; preds = %dec_label_pc_10004810
  %v3_10004830 = call i32 @function_100081f4(i32 15, i32* null)
  store i32 %v2_10004528, i32* @r3, align 4
  %v3_1000483c = call i32 @function_10008934(i8* %v2_1000483c, i32 %v3_10004830)
  store i32 268453960, i32* @lr, align 4
  %v2_10004844 = call i32 @function_1000890c(i8* %v2_1000483c)
  %v0_10004848 = load i32, i32* @r30, align 4
  %v0_1000484c = load i32, i32* @r27, align 4
  %v2_1000484c = add i32 %v0_1000484c, %v2_10004844
  store i32 %v2_1000484c, i32* @r3, align 4
  %v2_10004850 = inttoptr i32 %v2_1000484c to i8*
  %v3_10004850 = call i32 @function_10008934(i8* %v2_10004850, i32 %v0_10004848)
  store i32 268453980, i32* @lr, align 4
  %v2_10004858 = call i32 @function_1000890c(i8* %v2_1000483c)
  %v3_10004868 = call i32 @function_100081f4(i32 16, i32* null)
  %v0_10004870 = load i32, i32* @r27, align 4
  %v2_10004870 = add i32 %v2_10004858, %v0_10004870
  store i32 %v2_10004870, i32* @r3, align 4
  %v2_10004874 = inttoptr i32 %v2_10004870 to i8*
  %v3_10004874 = call i32 @function_10008934(i8* %v2_10004874, i32 %v3_10004868)
  store i32 4096, i32* @r5, align 4
  store i32 268454024, i32* @lr, align 4
  %v3_10004884 = call i32 @function_1000934c(i32 %v2_10004528, i32 %v2_10004530, i32 4096)
  %v3_10004888 = icmp eq i32 %v3_10004884, -1
  br i1 %v3_10004888, label %dec_label_pc_100047f8.loopexit, label %dec_label_pc_10004890

dec_label_pc_10004890:                            ; preds = %dec_label_pc_10004828
  %v3_10004898 = call i32 @function_100081f4(i32 15, i32* null)
  store i32 %v2_10004528, i32* @r3, align 4
  %v3_100048a4 = call i32 @function_10008934(i8* %v2_1000483c, i32 %v3_10004898)
  store i32 268454064, i32* @lr, align 4
  %v2_100048ac = call i32 @function_1000890c(i8* %v2_1000483c)
  %v0_100048b0 = load i32, i32* @r30, align 4
  %v0_100048b4 = load i32, i32* @r27, align 4
  %v2_100048b4 = add i32 %v0_100048b4, %v2_100048ac
  store i32 %v2_100048b4, i32* @r3, align 4
  %v2_100048b8 = inttoptr i32 %v2_100048b4 to i8*
  %v3_100048b8 = call i32 @function_10008934(i8* %v2_100048b8, i32 %v0_100048b0)
  store i32 268454084, i32* @lr, align 4
  %v2_100048c0 = call i32 @function_1000890c(i8* %v2_1000483c)
  %v3_100048d0 = call i32 @function_100081f4(i32 17, i32* null)
  %v0_100048d8 = load i32, i32* @r27, align 4
  %v2_100048d8 = add i32 %v2_100048c0, %v0_100048d8
  store i32 %v2_100048d8, i32* @r3, align 4
  %v2_100048dc = inttoptr i32 %v2_100048d8 to i8*
  %v3_100048dc = call i32 @function_10008934(i8* %v2_100048dc, i32 %v3_100048d0)
  store i32 268454120, i32* @lr, align 4
  %v1_100048e4 = call i32 @function_10009618(i32 %v2_10004528)
  store i32 %v1_100048e4, i32* @r25, align 4
  %v3_100048e8 = icmp eq i32 %v1_100048e4, 0
  br i1 %v3_100048e8, label %dec_label_pc_100047f8.loopexit, label %dec_label_pc_100048f0

dec_label_pc_100048f0.loopexit:                   ; preds = %dec_label_pc_10004910, %dec_label_pc_100049ac
  %v0_100048f0.pre = load i32, i32* @r25, align 4
  br label %dec_label_pc_100048f0

dec_label_pc_100048f0:                            ; preds = %dec_label_pc_10004890, %dec_label_pc_100048f0.loopexit
  %v0_100048f0 = phi i32 [ %v0_100048f0.pre, %dec_label_pc_100048f0.loopexit ], [ %v1_100048e4, %dec_label_pc_10004890 ]
  store i32 268454136, i32* @lr, align 4
  %v1_100048f4 = inttoptr i32 %v0_100048f0 to i32*
  %v2_100048f4 = call i32 @function_10009728(i32* %v1_100048f4)
  store i32 4096, i32* @r4, align 4
  store i32 %v2_100048f4, i32* @r31, align 4
  %v3_100048fc = icmp eq i32 %v2_100048f4, 0
  %v0_10004900 = load i32, i32* @r28, align 4
  store i32 %v2_10004530, i32* @r3, align 4
  %v3_10004900.not = icmp ne i32 %v0_10004900, 0
  %brmerge = or i1 %v3_100048fc, %v3_10004900.not
  br i1 %brmerge, label %dec_label_pc_100049fc, label %dec_label_pc_10004910

dec_label_pc_10004910:                            ; preds = %dec_label_pc_100048f0
  store i32 268454164, i32* @lr, align 4
  %v0_10004910 = call i32 @function_100089b4()
  %v3_1000491c = call i32 @function_100081f4(i32 15, i32* null)
  store i32 %v2_10004528, i32* @r3, align 4
  %v3_10004928 = call i32 @function_10008934(i8* %v2_1000483c, i32 %v3_1000491c)
  store i32 268454196, i32* @lr, align 4
  %v2_10004930 = call i32 @function_1000890c(i8* %v2_1000483c)
  %v0_10004934 = load i32, i32* @r30, align 4
  %v0_10004938 = load i32, i32* @r27, align 4
  %v2_10004938 = add i32 %v0_10004938, %v2_10004930
  store i32 %v2_10004938, i32* @r3, align 4
  %v2_1000493c = inttoptr i32 %v2_10004938 to i8*
  %v3_1000493c = call i32 @function_10008934(i8* %v2_1000493c, i32 %v0_10004934)
  store i32 268454216, i32* @lr, align 4
  %v2_10004944 = call i32 @function_1000890c(i8* %v2_1000483c)
  %v3_10004954 = call i32 @function_100081f4(i32 17, i32* null)
  %v0_1000495c = load i32, i32* @r27, align 4
  %v2_1000495c = add i32 %v2_10004944, %v0_1000495c
  store i32 %v2_1000495c, i32* @r3, align 4
  %v2_10004960 = inttoptr i32 %v2_1000495c to i8*
  %v3_10004960 = call i32 @function_10008934(i8* %v2_10004960, i32 %v3_10004954)
  store i32 268454252, i32* @lr, align 4
  %v2_10004968 = call i32 @function_1000890c(i8* %v2_1000483c)
  %v0_10004974 = load i32, i32* @r27, align 4
  %v2_10004974 = add i32 %v0_10004974, %v2_10004968
  store i32 %v2_10004974, i32* @r3, align 4
  %v2_10004978 = inttoptr i32 %v2_10004974 to i8*
  %v3_10004978 = call i32 @function_10008934(i8* %v2_10004978, i32 ptrtoint (i32* @global_var_1000bafc.31 to i32))
  store i32 268454276, i32* @lr, align 4
  %v2_10004980 = call i32 @function_1000890c(i8* %v2_1000483c)
  %v0_10004984 = load i32, i32* @r31, align 4
  %v1_10004984 = add i32 %v0_10004984, 11
  %v0_10004988 = load i32, i32* @r27, align 4
  %v2_10004988 = add i32 %v0_10004988, %v2_10004980
  store i32 %v2_10004988, i32* @r3, align 4
  %v2_1000498c = inttoptr i32 %v2_10004988 to i8*
  %v3_1000498c = call i32 @function_10008934(i8* %v2_1000498c, i32 %v1_10004984)
  store i32 268454304, i32* @lr, align 4
  %v3_1000499c = call i32 @function_1000934c(i32 %v2_10004528, i32 %v2_10004530, i32 4096)
  %v3_100049a0 = icmp eq i32 %v3_1000499c, -1
  br i1 %v3_100049a0, label %dec_label_pc_100048f0.loopexit, label %dec_label_pc_100049ac

dec_label_pc_100049ac:                            ; preds = %dec_label_pc_10004910
  store i32 268454320, i32* @lr, align 4
  %v2_100049ac = call i32 @function_1000890c(i8* %v1_100049ac)
  %v4_100049bc = call i32 @function_10008cbc(i8* %v1_100049ac, i32 %v2_100049ac, i32 %v2_10004604)
  %v3_100049c4 = icmp eq i32 %v4_100049bc, -1
  %v0_100049c8 = load i32, i32* @r30, align 4
  store i32 %v0_100049c8, i32* @r3, align 4
  br i1 %v3_100049c4, label %dec_label_pc_100048f0.loopexit, label %dec_label_pc_100049d0

dec_label_pc_100049d0:                            ; preds = %dec_label_pc_100049ac
  store i32 268454356, i32* @lr, align 4
  %v2_100049d0 = call i32 @function_10008a34(i32 %v0_100049c8, i32 10)
  store i32 268454364, i32* @lr, align 4
  %v2_100049d8 = call i32 @function_100091ec(i32 %v2_100049d0, i32 9)
  %v0_100049dc = load i32, i32* @r25, align 4
  store i32 268454372, i32* @lr, align 4
  %v1_100049e0 = inttoptr i32 %v0_100049dc to i32*
  %v2_100049e0 = call i32 @function_10009728(i32* %v1_100049e0)
  store i32 1, i32* @r28, align 4
  store i32 %v2_100049e0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100049fc

dec_label_pc_100049fc:                            ; preds = %dec_label_pc_100048f0, %dec_label_pc_100049d0
  %v0_100049fc = load i32, i32* @r25, align 4
  store i32 268454404, i32* @lr, align 4
  %v1_10004a00 = inttoptr i32 %v0_100049fc to i32*
  %v2_10004a00 = call i32 @function_10009574(i32* %v1_10004a00)
  %v0_10004a04 = load i32, i32* @r23, align 4
  store i32 268454412, i32* @lr, align 4
  %v1_10004a08 = inttoptr i32 %v0_10004a04 to i32*
  %v2_10004a08 = call i32 @function_10009728(i32* %v1_10004a08)
  %v3_10004a0c = icmp eq i32 %v2_10004a08, 0
  br i1 %v3_10004a0c, label %dec_label_pc_10004a14, label %dec_label_pc_10004808

dec_label_pc_10004a14:                            ; preds = %dec_label_pc_100047f8.loopexit, %dec_label_pc_100049fc, %dec_label_pc_10004808, %dec_label_pc_100047f4
  %v0_10004a14 = load i32, i32* @r23, align 4
  %v0_10004a18 = load i32, i32* @r28, align 4
  %v1_10004a18 = urem i32 %v0_10004a18, 256
  store i32 %v1_10004a18, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004a20.32 to i32), i32* @lr, align 4
  %v1_10004a1c = inttoptr i32 %v0_10004a14 to i32*
  %v2_10004a1c = call i32 @function_10009574(i32* %v1_10004a1c)
  br label %dec_label_pc_10004a20

dec_label_pc_10004a20:                            ; preds = %dec_label_pc_100047d8, %dec_label_pc_10004a14
  store i32 ptrtoint ([3 x i8]* @global_var_10004a28.33 to i32), i32* @lr, align 4
  %v1_10004a24 = call i32 @function_1000a914(i32 1)
  store i32 ptrtoint ([3 x i8]* @global_var_10004a30.34 to i32), i32* @lr, align 4
  %v1_10004a2c = call i32 @function_1000821c(i32 15)
  store i32 ptrtoint ([3 x i8]* @global_var_10004a38.35 to i32), i32* @lr, align 4
  %v1_10004a34 = call i32 @function_1000821c(i32 16)
  store i32 268454464, i32* @lr, align 4
  %v1_10004a3c = call i32 @function_1000821c(i32 17)
  br label %dec_label_pc_10004a40

dec_label_pc_10004a40:                            ; preds = %dec_label_pc_100045bc, %dec_label_pc_10004a20
  %v0_10004a44 = load i32, i32* @r31, align 4
  store i32 %v0_1000455c, i32* @r23, align 4
  store i32 %v0_10004544, i32* @r25, align 4
  store i32 %v0_10004524, i32* @r27, align 4
  store i32 %v0_10004564, i32* @r28, align 4
  store i32 %v0_10004534, i32* @r29, align 4
  store i32 %v0_1000454c, i32* @r30, align 4
  store i32 %v0_10004554, i32* @r31, align 4
  ret i32 %v0_10004a44

dec_label_pc_10004a78:                            ; preds = %dec_label_pc_10004704
  %v3_10004704 = icmp eq i32 %v0_1000473874, 0
  %v1_10004a78 = add i32 %v0_1000473874, 1
  br i1 %v3_10004704, label %dec_label_pc_10004a80, label %dec_label_pc_1000470c

dec_label_pc_10004a80:                            ; preds = %dec_label_pc_10004a78
  %v0_10004a80 = load i32, i32* %r26.global-to-local, align 4
  %v2_10004a80 = add i32 %v0_10004a80, %v1_1000479c76
  %v1_10004a84 = add i32 %v2_10004a80, 33
  %v2_10004a84 = inttoptr i32 %v1_10004a84 to i8*
  %v3_10004a84 = load i8, i8* %v2_10004a84, align 1
  %v3_10004a88 = icmp eq i8 %v3_10004a84, 65
  br i1 %v3_10004a88, label %dec_label_pc_10004a90, label %dec_label_pc_100046e8

dec_label_pc_10004a90:                            ; preds = %dec_label_pc_10004a80
  br label %dec_label_pc_100046e8.outer

dec_label_pc_10004a98:                            ; preds = %dec_label_pc_100047c0
  store i32 0, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004aa4.36 to i32), i32* @lr, align 4
  %v1_10004aa0 = call i32 @function_1000821c(i32 15)
  store i32 ptrtoint ([3 x i8]* @global_var_10004aac.37 to i32), i32* @lr, align 4
  %v1_10004aa8 = call i32 @function_1000821c(i32 16)
  store i32 ptrtoint ([3 x i8]* @global_var_10004ab4.38 to i32), i32* @lr, align 4
  %v1_10004ab0 = call i32 @function_1000821c(i32 17)
  store i32 268454588, i32* @lr, align 4
  %v1_10004ab8 = call i32 @function_1000821c(i32 19)
  %v0_10004ac0 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_1000455c, i32* @r23, align 4
  store i32 %v0_10004544, i32* @r25, align 4
  store i32 %v0_10004524, i32* @r27, align 4
  store i32 %v0_10004564, i32* @r28, align 4
  store i32 %v0_10004534, i32* @r29, align 4
  store i32 %v0_1000454c, i32* @r30, align 4
  store i32 %v0_10004554, i32* @r31, align 4
  ret i32 %v0_10004ac0

dec_label_pc_10004af4:                            ; preds = %dec_label_pc_10004514
  store i8 48, i8* %stack_var_-8776, align 1
  br label %dec_label_pc_100045bc

; uselistorder directives
  uselistorder i32 %v2_10004a08, { 1, 0 }
  uselistorder i32 %v1_1000479c.lcssa, { 5, 3, 2, 1, 0, 4 }
  uselistorder i32 %v0_1000473874, { 2, 0, 4, 1, 3 }
  uselistorder i32 %v1_1000479c76, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_1000471c22, { 1, 0 }
  uselistorder i32 %v1_100046b8, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 %v2_10004604, { 1, 0, 2 }
  uselistorder i32 %v2_10004548, { 1, 0 }
  uselistorder i32 %v2_10004528, { 1, 2, 3, 4, 5, 6, 0, 7 }
  uselistorder i8* %stack_var_-8776, { 2, 0, 1 }
  uselistorder i8* %stack_var_-8760, { 1, 3, 0, 2 }
  uselistorder i32* %stack_var_-8792, { 0, 1, 3, 2 }
  uselistorder i32 (i32, i32)* @function_10008a34, { 1, 0 }
  uselistorder i32 268453888, { 1, 0 }
  uselistorder i8 58, { 1, 0 }
  uselistorder i32 (i8*, i32, i32)* @function_10008b6c, { 1, 0 }
  uselistorder i32 268453400, { 1, 0 }
  uselistorder label %dec_label_pc_10004a40, { 1, 0 }
  uselistorder label %dec_label_pc_10004a20, { 1, 0 }
  uselistorder label %dec_label_pc_10004a14, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_100049fc, { 1, 0 }
  uselistorder label %dec_label_pc_100048f0, { 1, 0 }
  uselistorder label %dec_label_pc_100048f0.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_10004808, { 1, 0 }
  uselistorder label %dec_label_pc_10004808.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_100047f8.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10004748, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10004734, { 1, 0 }
  uselistorder label %dec_label_pc_1000470c, { 1, 0 }
  uselistorder label %dec_label_pc_100046e8, { 1, 0 }
  uselistorder label %dec_label_pc_100046b0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10004660, { 1, 0 }
  uselistorder label %dec_label_pc_10004608.backedge, { 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10004620, { 1, 0 }
  uselistorder label %dec_label_pc_100045bc, { 1, 0 }
}

define i32 @function_10004b18(i32 %arg1) local_unnamed_addr {
dec_label_pc_10004b18:
  %r11.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %stack_var_-8436 = alloca i32, align 4
  %stack_var_-8440 = alloca i32, align 4
  %stack_var_-8456 = alloca i32, align 4
  %stack_var_-8444 = alloca i32, align 4
  %stack_var_-8448 = alloca i32, align 4
  %stack_var_-8452 = alloca i32, align 4
  %stack_var_-4176 = alloca i32, align 4
  %stack_var_-8400 = alloca i32, align 4
  %stack_var_-8336 = alloca i32, align 4
  %stack_var_-8416 = alloca i32, align 4
  %stack_var_-8272 = alloca i32, align 4
  %stack_var_-8432 = alloca i32, align 4
  %v0_10004b24 = load i32, i32* @r30, align 4
  %v0_10004b44 = load i32, i32* @r22, align 4
  %v0_10004b58 = load i32, i32* @r27, align 4
  %v0_10004b5c = load i32, i32* @r28, align 4
  %v0_10004b60 = load i32, i32* @r29, align 4
  %v0_10004b64 = load i32, i32* @r31, align 4
  store i32 268454764, i32* @lr, align 4
  %v0_10004b68 = call i32 @function_1000949c()
  store i32 %v0_10004b68, i32* @r30, align 4
  store i32 268454772, i32* @lr, align 4
  %v0_10004b70 = call i32 @function_10009114()
  store i32 %v0_10004b70, i32* @global_var_1001c264.26, align 4
  %tmp95 = icmp slt i32 %v0_10004b70, 1
  br i1 %tmp95, label %dec_label_pc_10004bd4, label %dec_label_pc_10004b84

dec_label_pc_10004b84:                            ; preds = %dec_label_pc_10004e3c, %dec_label_pc_10004d34, %dec_label_pc_10004bd4, %dec_label_pc_10004b18
  %v0_10004bd0 = phi i32 [ -1, %dec_label_pc_10004d34 ], [ -1, %dec_label_pc_10004bd4 ], [ %v0_10004b70, %dec_label_pc_10004b18 ], [ 0, %dec_label_pc_10004e3c ]
  store i32 %v0_10004b44, i32* @r22, align 4
  store i32 %v0_10004b58, i32* @r27, align 4
  store i32 %v0_10004b5c, i32* @r28, align 4
  store i32 %v0_10004b60, i32* @r29, align 4
  store i32 %v0_10004b24, i32* @r30, align 4
  store i32 %v0_10004b64, i32* @r31, align 4
  ret i32 %v0_10004bd0

dec_label_pc_10004bd4:                            ; preds = %dec_label_pc_10004b18
  %v3_10004bd4 = icmp eq i32 %v0_10004b70, -1
  br i1 %v3_10004bd4, label %dec_label_pc_10004b84, label %dec_label_pc_10004bdc

dec_label_pc_10004bdc:                            ; preds = %dec_label_pc_10004bd4
  store i32 0, i32* @r28, align 4
  store i32 2, i32* %stack_var_-8432, align 4
  store i32 ptrtoint (i32* @global_var_10004bf8.39 to i32), i32* @lr, align 4
  %v1_10004bf4 = call i32 @function_10004514(i32 48101)
  store i32 268454928, i32* @lr, align 4
  %v3_10004c0c = call i32 @function_10009e1c(i32 2, i32 1, i32 0)
  %v3_10004c10 = icmp eq i32 %v3_10004c0c, -1
  store i32 %v3_10004c0c, i32* @r31, align 4
  br i1 %v3_10004c10, label %dec_label_pc_10004c34, label %dec_label_pc_10004c1c

dec_label_pc_10004c1c:                            ; preds = %dec_label_pc_10004bdc
  %v2_10004c1c = ptrtoint i32* %stack_var_-8432 to i32
  store i32 268454952, i32* @lr, align 4
  %v3_10004c24 = call i32 @function_10009be8(i32 %v2_10004c1c, i32 16, i32 16)
  %v0_10004c28 = load i32, i32* @r31, align 4
  store i32 268454964, i32* @lr, align 4
  %v2_10004c30 = call i32 @function_10009cc0(i32 %v0_10004c28, i32 1)
  br label %dec_label_pc_10004c34

dec_label_pc_10004c34:                            ; preds = %dec_label_pc_10004bdc, %dec_label_pc_10004c1c
  store i32 ptrtoint (i32* @global_var_10004c3c.40 to i32), i32* @lr, align 4
  %v1_10004c38 = call i32 @function_10004514(i32 1991)
  store i32 268454996, i32* @lr, align 4
  %v3_10004c50 = call i32 @function_10009e1c(i32 2, i32 1, i32 0)
  %v3_10004c54 = icmp eq i32 %v3_10004c50, -1
  store i32 %v3_10004c50, i32* @r31, align 4
  br i1 %v3_10004c54, label %dec_label_pc_10004c78, label %dec_label_pc_10004c60

dec_label_pc_10004c60:                            ; preds = %dec_label_pc_10004c34
  %v2_10004c60 = ptrtoint i32* %stack_var_-8432 to i32
  store i32 268455020, i32* @lr, align 4
  %v3_10004c68 = call i32 @function_10009be8(i32 %v2_10004c60, i32 16, i32 16)
  %v0_10004c6c = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004c78.41 to i32), i32* @lr, align 4
  %v2_10004c74 = call i32 @function_10009cc0(i32 %v0_10004c6c, i32 1)
  br label %dec_label_pc_10004c78

dec_label_pc_10004c78:                            ; preds = %dec_label_pc_10004c34, %dec_label_pc_10004c60
  store i32 268455048, i32* @lr, align 4
  %v3_10004c84 = call i32 @function_10009e1c(i32 2, i32 1, i32 0)
  %v3_10004c88 = icmp eq i32 %v3_10004c84, -1
  store i32 %v3_10004c84, i32* @r31, align 4
  br i1 %v3_10004c88, label %dec_label_pc_10004cac, label %dec_label_pc_10004c94

dec_label_pc_10004c94:                            ; preds = %dec_label_pc_10004c78
  %v2_10004c94 = ptrtoint i32* %stack_var_-8432 to i32
  store i32 268455072, i32* @lr, align 4
  %v3_10004c9c = call i32 @function_10009be8(i32 %v2_10004c94, i32 16, i32 16)
  %v0_10004ca0 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004cac.42 to i32), i32* @lr, align 4
  %v2_10004ca8 = call i32 @function_10009cc0(i32 %v0_10004ca0, i32 1)
  br label %dec_label_pc_10004cac

dec_label_pc_10004cac:                            ; preds = %dec_label_pc_10004c78, %dec_label_pc_10004c94
  store i32 ptrtoint (i32* @global_var_10004cb4.43 to i32), i32* @lr, align 4
  %v1_10004cb0 = call i32 @function_10004514(i32 22)
  store i32 268455116, i32* @lr, align 4
  %v3_10004cc8 = call i32 @function_10009e1c(i32 2, i32 1, i32 0)
  %v3_10004ccc = icmp eq i32 %v3_10004cc8, -1
  store i32 %v3_10004cc8, i32* @r31, align 4
  br i1 %v3_10004ccc, label %dec_label_pc_10004cf0, label %dec_label_pc_10004cd8

dec_label_pc_10004cd8:                            ; preds = %dec_label_pc_10004cac
  %v2_10004cd8 = ptrtoint i32* %stack_var_-8432 to i32
  store i32 268455140, i32* @lr, align 4
  %v3_10004ce0 = call i32 @function_10009be8(i32 %v2_10004cd8, i32 16, i32 16)
  %v0_10004ce4 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004cf0.44 to i32), i32* @lr, align 4
  %v2_10004cec = call i32 @function_10009cc0(i32 %v0_10004ce4, i32 1)
  br label %dec_label_pc_10004cf0

dec_label_pc_10004cf0:                            ; preds = %dec_label_pc_10004cac, %dec_label_pc_10004cd8
  store i32 ptrtoint (i32* @global_var_10004cf8.45 to i32), i32* @lr, align 4
  %v1_10004cf4 = call i32 @function_10004514(i32 23)
  store i32 268455184, i32* @lr, align 4
  %v3_10004d0c = call i32 @function_10009e1c(i32 2, i32 1, i32 0)
  %v3_10004d10 = icmp eq i32 %v3_10004d0c, -1
  store i32 %v3_10004d0c, i32* @r31, align 4
  br i1 %v3_10004d10, label %dec_label_pc_10004d34, label %dec_label_pc_10004d1c

dec_label_pc_10004d1c:                            ; preds = %dec_label_pc_10004cf0
  %v2_10004d1c = ptrtoint i32* %stack_var_-8432 to i32
  store i32 268455208, i32* @lr, align 4
  %v3_10004d24 = call i32 @function_10009be8(i32 %v2_10004d1c, i32 16, i32 16)
  %v0_10004d28 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004d34.46 to i32), i32* @lr, align 4
  %v2_10004d30 = call i32 @function_10009cc0(i32 %v0_10004d28, i32 1)
  br label %dec_label_pc_10004d34

dec_label_pc_10004d34:                            ; preds = %dec_label_pc_10004cf0, %dec_label_pc_10004d1c
  store i32 268455232, i32* @lr, align 4
  %v1_10004d3c = call i32 @function_1000a914(i32 5)
  store i32 4096, i32* @r3, align 4
  store i32 268455240, i32* @lr, align 4
  %v0_10004d44 = call i32 @function_1000a020()
  store i32 %v0_10004d44, i32* %r11.global-to-local, align 4
  %v0_10004d54 = load i32, i32* @r28, align 4
  %v1_10004d54 = trunc i32 %v0_10004d54 to i8
  %v3_10004d54 = inttoptr i32 %v0_10004d44 to i8*
  store i8 %v1_10004d54, i8* %v3_10004d54, align 1
  %v2_10004d58 = ptrtoint i32* %stack_var_-8272 to i32
  store i32 %v2_10004d58, i32* %r21.global-to-local, align 4
  %v0_10004d5c = load i32, i32* @r28, align 4
  store i32 %v0_10004d5c, i32* @global_var_1001c25c.47, align 4
  %v0_10004d60 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10004d60, i32* @global_var_1001c260.48, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004d68.49 to i32), i32* @lr, align 4
  %v1_10004d64 = call i32 @function_100082a8(i32 15)
  store i32 268455280, i32* @lr, align 4
  %v1_10004d6c = call i32 @function_100082a8(i32 16)
  %v3_10004d78 = call i32 @function_100081f4(i32 15, i32* null)
  store i32 %v2_10004d58, i32* @r3, align 4
  %v2_10004d84 = bitcast i32* %stack_var_-8272 to i8*
  %v3_10004d84 = call i32 @function_10008934(i8* %v2_10004d84, i32 %v3_10004d78)
  %v0_10004d88 = load i32, i32* %r21.global-to-local, align 4
  %v2_10004d88 = add i32 %v0_10004d88, %v3_10004d84
  store i32 %v2_10004d88, i32* %r29.global-to-local, align 4
  store i32 268455312, i32* @lr, align 4
  %v0_10004d8c = call i32 @function_1000915c()
  %v2_10004d90 = ptrtoint i32* %stack_var_-8416 to i32
  %v3_10004d98 = trunc i32 %v0_10004d8c to i8
  %v4_10004d98 = call i32 @function_10008de8(i8 %v3_10004d98, i32 10, i32 %v2_10004d90)
  store i32 %v2_10004d88, i32* @r3, align 4
  %v2_10004da4 = inttoptr i32 %v2_10004d88 to i8*
  %v3_10004da4 = call i32 @function_10008934(i8* %v2_10004da4, i32 %v4_10004d98)
  %v0_10004dac = load i32, i32* %r29.global-to-local, align 4
  %v2_10004dac = add i32 %v0_10004dac, %v3_10004da4
  store i32 %v2_10004dac, i32* %r29.global-to-local, align 4
  %v3_10004db4 = call i32 @function_100081f4(i32 16, i32* null)
  store i32 %v2_10004dac, i32* @r3, align 4
  %v2_10004dc0 = inttoptr i32 %v2_10004dac to i8*
  %v3_10004dc0 = call i32 @function_10008934(i8* %v2_10004dc0, i32 %v3_10004db4)
  store i32 %v3_10004dc0, i32* @r31, align 4
  store i32 268455384, i32* @lr, align 4
  %v2_10004dd4 = call i32 @function_10009234(i32 %v2_10004d58, i32 0)
  %v3_10004dd8 = icmp eq i32 %v2_10004dd4, -1
  br i1 %v3_10004dd8, label %dec_label_pc_10004b84, label %dec_label_pc_10004de0

dec_label_pc_10004de0:                            ; preds = %dec_label_pc_10004d34
  store i32 ptrtoint ([3 x i8]* @global_var_10004de4.50 to i32), i32* @lr, align 4
  %v0_10004de0 = call i32 @function_100090cc()
  store i32 ptrtoint ([3 x i8]* @global_var_10004dec.51 to i32), i32* @lr, align 4
  %v1_10004de8 = call i32 @function_1000821c(i32 15)
  store i32 268455412, i32* @lr, align 4
  %v1_10004df0 = call i32 @function_1000821c(i32 16)
  %v3_10004df4 = load i32, i32* @global_var_1001c260.48, align 4
  store i32 268455428, i32* @lr, align 4
  %v3_10004e00 = call i32 @function_1000934c(i32 %v2_10004d58, i32 %v3_10004df4, i32 4095)
  %v3_10004e04 = icmp eq i32 %v3_10004e00, -1
  br i1 %v3_10004e04, label %dec_label_pc_10004e14, label %dec_label_pc_10004e0c

dec_label_pc_10004e0c:                            ; preds = %dec_label_pc_10004de0
  %v3_10004e0c = load i32, i32* @global_var_1001c260.48, align 4
  %v0_10004e10 = load i32, i32* @r28, align 4
  %v3_10004e10 = trunc i32 %v0_10004e10 to i8
  %v4_10004e10 = add i32 %v3_10004e0c, %v3_10004e00
  %v5_10004e10 = inttoptr i32 %v4_10004e10 to i8*
  store i8 %v3_10004e10, i8* %v5_10004e10, align 1
  br label %dec_label_pc_10004e14

dec_label_pc_10004e14:                            ; preds = %dec_label_pc_10004de0, %dec_label_pc_10004e0c
  %v0_10004e14 = load i32, i32* %r29.global-to-local, align 4
  %v1_10004e14 = load i32, i32* @r31, align 4
  %v2_10004e14 = add i32 %v1_10004e14, %v0_10004e14
  store i32 %v2_10004d58, i32* @r3, align 4
  %v0_10004e1c = load i32, i32* %r21.global-to-local, align 4
  %v2_10004e1c = sub i32 %v2_10004e14, %v0_10004e1c
  store i32 %v2_10004e1c, i32* @r4, align 4
  %v0_10004e20 = load i32, i32* @r30, align 4
  store i32 %v0_10004e20, i32* %r29.global-to-local, align 4
  store i32 268455464, i32* @lr, align 4
  %v0_10004e24 = call i32 @function_100089b4()
  store i32 400, i32* %r28.global-to-local, align 4
  store i32 0, i32* @r22, align 4
  %v2_10004e30 = ptrtoint i32* %stack_var_-8336 to i32
  store i32 %v2_10004e30, i32* %r20.global-to-local, align 4
  %v2_10004e34 = ptrtoint i32* %stack_var_-8400 to i32
  store i32 %v2_10004e34, i32* %r19.global-to-local, align 4
  %v2_10004e38 = ptrtoint i32* %stack_var_-4176 to i32
  %v2_10004f08 = bitcast i32* %stack_var_-8336 to i8*
  %v2_10004f4c = bitcast i32* %stack_var_-8400 to i8*
  br label %dec_label_pc_10004e3c

dec_label_pc_10004e3c:                            ; preds = %dec_label_pc_10004ecc, %dec_label_pc_10004e14
  store i32 268455492, i32* @lr, align 4
  %v1_10004e40 = call i32 @function_100082a8(i32 15)
  %v3_10004e4c = call i32 @function_100081f4(i32 15, i32* null)
  store i32 268455508, i32* @lr, align 4
  %v1_10004e50 = call i32 @function_10009618(i32 %v3_10004e4c)
  store i32 %v1_10004e50, i32* @r27, align 4
  %v3_10004e54 = icmp eq i32 %v1_10004e50, 0
  br i1 %v3_10004e54, label %dec_label_pc_10004b84, label %dec_label_pc_10004e5c

dec_label_pc_10004e5c:                            ; preds = %dec_label_pc_10004e3c
  store i32 268455524, i32* @lr, align 4
  %v1_10004e60 = call i32 @function_1000821c(i32 15)
  %v0_10004e6415 = load i32, i32* @r27, align 4
  store i32 268455532, i32* @lr, align 4
  %v1_10004e6816 = inttoptr i32 %v0_10004e6415 to i32*
  %v2_10004e6817 = call i32 @function_10009728(i32* %v1_10004e6816)
  %v3_10004e6c20 = icmp eq i32 %v2_10004e6817, 0
  br i1 %v3_10004e6c20, label %dec_label_pc_10004ecc, label %dec_label_pc_10004e74.preheader

dec_label_pc_10004e74.preheader:                  ; preds = %dec_label_pc_10004e5c, %dec_label_pc_10004e64.backedge
  %v0_10004e7423 = phi i32 [ %v2_10004e68, %dec_label_pc_10004e64.backedge ], [ %v2_10004e6817, %dec_label_pc_10004e5c ]
  br label %dec_label_pc_10004e74

dec_label_pc_10004e74:                            ; preds = %dec_label_pc_10004e74.preheader, %dec_label_pc_10004eb8
  %v0_10004e88 = phi i32 [ %v0_10004e7423, %dec_label_pc_10004e74.preheader ], [ %v2_10004ec0, %dec_label_pc_10004eb8 ]
  %v1_10004e74 = add i32 %v0_10004e88, 11
  %v2_10004e74 = inttoptr i32 %v1_10004e74 to i8*
  %v3_10004e74 = load i8, i8* %v2_10004e74, align 1
  %v4_10004e74 = zext i8 %v3_10004e74 to i32
  %v1_10004e78 = add nuw nsw i32 %v4_10004e74, 208
  %v1_10004e7c = urem i32 %v1_10004e78, 256
  %v2_10004e80 = icmp ugt i32 %v1_10004e7c, 9
  br i1 %v2_10004e80, label %dec_label_pc_10004e64.backedge, label %dec_label_pc_10004e88

dec_label_pc_10004e88:                            ; preds = %dec_label_pc_10004e74
  %v0_10004e8c = load i32, i32* @r22, align 4
  %v1_10004e8c = add i32 %v0_10004e8c, 1
  store i32 %v1_10004e8c, i32* @r22, align 4
  store i32 268455576, i32* @lr, align 4
  %v3_10004e94 = call i32 @function_1000a6c8(i8* %v2_10004e74, i32 %v1_10004e7c)
  %v0_10004e98 = load i32, i32* @r28, align 4
  %v2_10004e98 = icmp slt i32 %v0_10004e98, %v3_10004e94
  store i32 %v3_10004e94, i32* %r30.global-to-local, align 4
  br i1 %v2_10004e98, label %dec_label_pc_10004ed8, label %dec_label_pc_10004ea4

dec_label_pc_10004ea4:                            ; preds = %dec_label_pc_10004e88
  store i32 268455596, i32* @lr, align 4
  %v0_10004ea8 = call i32 @function_1000949c()
  %v0_10004eac = load i32, i32* @r29, align 4
  %v2_10004eac = sub i32 %v0_10004ea8, %v0_10004eac
  %tmp96 = icmp slt i32 %v2_10004eac, 601
  br i1 %tmp96, label %dec_label_pc_10005034, label %dec_label_pc_10004eb8

dec_label_pc_10004eb8:                            ; preds = %dec_label_pc_10004ea4
  %v0_10004eb8 = load i32, i32* @r27, align 4
  store i32 400, i32* %r28.global-to-local, align 4
  store i32 268455620, i32* @lr, align 4
  %v1_10004ec0 = inttoptr i32 %v0_10004eb8 to i32*
  %v2_10004ec0 = call i32 @function_10009728(i32* %v1_10004ec0)
  %v3_10004ec4 = icmp eq i32 %v2_10004ec0, 0
  br i1 %v3_10004ec4, label %dec_label_pc_10004ecc, label %dec_label_pc_10004e74

dec_label_pc_10004ecc:                            ; preds = %dec_label_pc_10004e64.backedge, %dec_label_pc_10004eb8, %dec_label_pc_10004e5c
  %v0_10004ecc = load i32, i32* @r27, align 4
  store i32 268455636, i32* @lr, align 4
  %v1_10004ed0 = inttoptr i32 %v0_10004ecc to i32*
  %v2_10004ed0 = call i32 @function_10009574(i32* %v1_10004ed0)
  br label %dec_label_pc_10004e3c

dec_label_pc_10004ed8:                            ; preds = %dec_label_pc_10004e88
  store i32 268455648, i32* @lr, align 4
  %v0_10004edc = call i32 @function_1000949c()
  store i32 %v0_10004edc, i32* %r18.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004eec.53 to i32), i32* @lr, align 4
  %v1_10004ee8 = call i32 @function_100082a8(i32 15)
  store i32 268455668, i32* @lr, align 4
  %v1_10004ef0 = call i32 @function_100082a8(i32 16)
  %v3_10004efc = call i32 @function_100081f4(i32 15, i32* null)
  store i32 %v2_10004e30, i32* @r3, align 4
  %v3_10004f08 = call i32 @function_10008934(i8* %v2_10004f08, i32 %v3_10004efc)
  %v0_10004f0c = load i32, i32* @r31, align 4
  %v0_10004f10 = load i32, i32* %r20.global-to-local, align 4
  %v2_10004f10 = add i32 %v0_10004f10, %v3_10004f08
  store i32 %v2_10004f10, i32* %r28.global-to-local, align 4
  store i32 %v2_10004f10, i32* @r3, align 4
  %v2_10004f18 = inttoptr i32 %v2_10004f10 to i8*
  %v3_10004f18 = call i32 @function_10008934(i8* %v2_10004f18, i32 %v0_10004f0c)
  store i32 %v3_10004f18, i32* %r29.global-to-local, align 4
  %v3_10004f28 = call i32 @function_100081f4(i32 16, i32* null)
  %v2_10004f30 = add i32 %v3_10004f18, %v2_10004f10
  store i32 %v2_10004f30, i32* @r3, align 4
  %v2_10004f34 = inttoptr i32 %v2_10004f30 to i8*
  %v3_10004f34 = call i32 @function_10008934(i8* %v2_10004f34, i32 %v3_10004f28)
  %v3_10004f40 = call i32 @function_100081f4(i32 15, i32* null)
  store i32 %v2_10004e34, i32* @r3, align 4
  %v3_10004f4c = call i32 @function_10008934(i8* %v2_10004f4c, i32 %v3_10004f40)
  %v0_10004f50 = load i32, i32* @r31, align 4
  %v0_10004f54 = load i32, i32* %r19.global-to-local, align 4
  %v2_10004f54 = add i32 %v0_10004f54, %v3_10004f4c
  store i32 %v2_10004f54, i32* %r28.global-to-local, align 4
  store i32 %v2_10004f54, i32* @r3, align 4
  %v2_10004f5c = inttoptr i32 %v2_10004f54 to i8*
  %v3_10004f5c = call i32 @function_10008934(i8* %v2_10004f5c, i32 %v0_10004f50)
  store i32 %v3_10004f5c, i32* %r29.global-to-local, align 4
  %v3_10004f6c = call i32 @function_100081f4(i32 34, i32* null)
  %v2_10004f74 = add i32 %v3_10004f5c, %v2_10004f54
  store i32 %v2_10004f74, i32* @r3, align 4
  %v2_10004f78 = inttoptr i32 %v2_10004f74 to i8*
  %v3_10004f78 = call i32 @function_10008934(i8* %v2_10004f78, i32 %v3_10004f6c)
  store i32 ptrtoint ([3 x i8]* @global_var_10004f84.55 to i32), i32* @lr, align 4
  %v1_10004f80 = call i32 @function_1000821c(i32 15)
  store i32 268455820, i32* @lr, align 4
  %v1_10004f88 = call i32 @function_1000821c(i32 16)
  store i32 4095, i32* @r5, align 4
  store i32 268455836, i32* @lr, align 4
  %v3_10004f98 = call i32 @function_1000934c(i32 %v2_10004e30, i32 %v2_10004d58, i32 4095)
  %v3_10004f9c = icmp eq i32 %v3_10004f98, -1
  store i32 %v3_10004f98, i32* %r29.global-to-local, align 4
  br i1 %v3_10004f9c, label %dec_label_pc_10005088, label %dec_label_pc_10004fa8

dec_label_pc_10004fa8:                            ; preds = %dec_label_pc_10004ed8
  %v0_10004fa8 = load i32, i32* @r1, align 4
  %v2_10004fa8 = add i32 %v0_10004fa8, %v3_10004f98
  %v3_10004fb0 = add i32 %v2_10004fa8, 192
  %v4_10004fb0 = inttoptr i32 %v3_10004fb0 to i8*
  store i8 0, i8* %v4_10004fb0, align 1
  store i32 268455868, i32* @lr, align 4
  %v1_10004fb8 = call i32 @function_100082a8(i32 35)
  %v3_10004fc4 = call i32 @function_100081f4(i32 35, i32* null)
  %v0_10004fc8 = load i32, i32* %r29.global-to-local, align 4
  %v1_10004fc8 = add i32 %v0_10004fc8, -1
  %v4_10004fd4 = call i32 @function_10008cbc(i8* %v2_10004d84, i32 %v1_10004fc8, i32 %v3_10004fc4)
  %v3_10004fd8 = icmp eq i32 %v4_10004fd4, -1
  br i1 %v3_10004fd8, label %dec_label_pc_10004ff4, label %dec_label_pc_10004fe0

dec_label_pc_10004fe0:                            ; preds = %dec_label_pc_10004fa8
  store i32 268455912, i32* @lr, align 4
  %v1_10004fe4 = call i32 @function_100094e4(i32 %v2_10004d58)
  %v0_10004fe8 = load i32, i32* %r30.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004ff4.56 to i32), i32* @lr, align 4
  %v2_10004ff0 = call i32 @function_100091ec(i32 %v0_10004fe8, i32 9)
  br label %dec_label_pc_10004ff4

dec_label_pc_10004ff4:                            ; preds = %dec_label_pc_10004fa8, %dec_label_pc_10004fe0
  store i32 ptrtoint (i32* @global_var_10004ffc.57 to i32), i32* @lr, align 4
  %v1_10004ff8 = call i32 @function_1000821c(i32 35)
  store i32 268455936, i32* @lr, align 4
  %v0_10004ffc = call i32 @function_1000915c()
  %v0_10005000 = load i32, i32* %r30.global-to-local, align 4
  %v4_10005000 = icmp eq i32 %v0_10005000, %v0_10004ffc
  br i1 %v4_10005000, label %dec_label_pc_10005028, label %dec_label_pc_10005008

dec_label_pc_10005008:                            ; preds = %dec_label_pc_10004ff4
  store i32 268455948, i32* @lr, align 4
  %v0_10005008 = call i32 @function_100091a4()
  %v0_1000500c = load i32, i32* %r30.global-to-local, align 4
  %v4_1000500c = icmp eq i32 %v0_1000500c, %v0_10005008
  br i1 %v4_1000500c, label %dec_label_pc_10005028, label %dec_label_pc_10005014

dec_label_pc_10005014:                            ; preds = %dec_label_pc_10005008
  %v3_10005014 = load i32, i32* @global_var_1001c260.48, align 4
  %v3_1000501c = call i32 @function_10008d68(i8* %v2_10004d84, i32 %v3_10005014)
  %v3_10005020 = icmp eq i32 %v3_1000501c, 0
  br i1 %v3_10005020, label %dec_label_pc_10005064, label %dec_label_pc_10005014.dec_label_pc_10005028_crit_edge

dec_label_pc_10005014.dec_label_pc_10005028_crit_edge: ; preds = %dec_label_pc_10005014
  %v0_10005028.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10005028

dec_label_pc_10005028:                            ; preds = %dec_label_pc_10005014.dec_label_pc_10005028_crit_edge, %dec_label_pc_10005008, %dec_label_pc_10004ff4
  %v0_10005028 = phi i32 [ %v0_10005028.pre, %dec_label_pc_10005014.dec_label_pc_10005028_crit_edge ], [ %v0_10005008, %dec_label_pc_10005008 ], [ %v0_10004ffc, %dec_label_pc_10004ff4 ]
  store i32 %v0_10005028, i32* %r28.global-to-local, align 4
  %v0_1000502c = load i32, i32* %r18.global-to-local, align 4
  store i32 %v0_1000502c, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10004e64.backedge

dec_label_pc_10004e64.backedge:                   ; preds = %dec_label_pc_10004e74, %dec_label_pc_10005028, %dec_label_pc_10005058, %dec_label_pc_1000532c, %dec_label_pc_10005034, %dec_label_pc_1000503c
  %v0_10004e64 = load i32, i32* @r27, align 4
  store i32 268455532, i32* @lr, align 4
  %v1_10004e68 = inttoptr i32 %v0_10004e64 to i32*
  %v2_10004e68 = call i32 @function_10009728(i32* %v1_10004e68)
  %v3_10004e6c = icmp eq i32 %v2_10004e68, 0
  br i1 %v3_10004e6c, label %dec_label_pc_10004ecc, label %dec_label_pc_10004e74.preheader

dec_label_pc_10005034:                            ; preds = %dec_label_pc_10004ea4
  %v0_10005034 = load i32, i32* %r30.global-to-local, align 4
  %tmp97 = icmp slt i32 %v0_10005034, 401
  br i1 %tmp97, label %dec_label_pc_10004e64.backedge, label %dec_label_pc_1000503c

dec_label_pc_1000503c:                            ; preds = %dec_label_pc_10005034
  %v0_10005044 = load i32, i32* @r22, align 4
  %v1_10005048 = urem i32 %v0_10005044, 10
  %v4_10005050 = icmp eq i32 %v1_10005048, 0
  br i1 %v4_10005050, label %dec_label_pc_10005058, label %dec_label_pc_10004e64.backedge

dec_label_pc_10005058:                            ; preds = %dec_label_pc_1000503c
  store i32 268456032, i32* @lr, align 4
  %v1_1000505c = call i32 @function_1000a914(i32 1)
  br label %dec_label_pc_10004e64.backedge

dec_label_pc_10005064:                            ; preds = %dec_label_pc_10005014
  store i32 268456052, i32* @lr, align 4
  %v2_10005070 = call i32 @function_10009234(i32 %v2_10004d58, i32 0)
  %v3_10005074 = icmp eq i32 %v2_10005070, -1
  store i32 %v2_10005070, i32* @r31, align 4
  br i1 %v3_10005074, label %dec_label_pc_10005394, label %dec_label_pc_10005080

dec_label_pc_10005080:                            ; preds = %dec_label_pc_10005064, %dec_label_pc_10005394
  store i32 268456072, i32* @lr, align 4
  %v0_10005084 = call i32 @function_100090cc()
  br label %dec_label_pc_10005088

dec_label_pc_10005088:                            ; preds = %dec_label_pc_10004ed8, %dec_label_pc_10005080
  store i32 268456088, i32* @lr, align 4
  %v2_10005094 = call i32 @function_10009234(i32 %v2_10004e30, i32 0)
  %v3_10005098 = icmp eq i32 %v2_10005094, -1
  store i32 %v2_10005094, i32* %r24.global-to-local, align 4
  br i1 %v3_10005098, label %dec_label_pc_1000532c, label %dec_label_pc_100050a4

dec_label_pc_100050a4:                            ; preds = %dec_label_pc_10005088
  store i32 ptrtoint ([3 x i8]* @global_var_100050ac.58 to i32), i32* @lr, align 4
  %v1_100050a8 = call i32 @function_100082a8(i32 20)
  store i32 ptrtoint ([3 x i8]* @global_var_100050b4.59 to i32), i32* @lr, align 4
  %v1_100050b0 = call i32 @function_100082a8(i32 21)
  store i32 ptrtoint ([3 x i8]* @global_var_100050bc.60 to i32), i32* @lr, align 4
  %v1_100050b8 = call i32 @function_100082a8(i32 22)
  store i32 ptrtoint ([3 x i8]* @global_var_100050c4.61 to i32), i32* @lr, align 4
  %v1_100050c0 = call i32 @function_100082a8(i32 23)
  store i32 ptrtoint ([3 x i8]* @global_var_100050cc.62 to i32), i32* @lr, align 4
  %v1_100050c8 = call i32 @function_100082a8(i32 24)
  store i32 268456148, i32* @lr, align 4
  %v1_100050d0 = call i32 @function_100082a8(i32 36)
  %v3_100050dc = call i32 @function_100081f4(i32 20, i32* nonnull %stack_var_-8452)
  store i32 %v3_100050dc, i32* @r31, align 4
  %v3_100050ec = call i32 @function_100081f4(i32 21, i32* nonnull %stack_var_-8448)
  store i32 %v3_100050ec, i32* %r29.global-to-local, align 4
  %v3_100050fc = call i32 @function_100081f4(i32 22, i32* nonnull %stack_var_-8444)
  store i32 %v3_100050fc, i32* %r28.global-to-local, align 4
  %v3_1000510c = call i32 @function_100081f4(i32 23, i32* nonnull %stack_var_-8456)
  store i32 %v3_1000510c, i32* %r26.global-to-local, align 4
  %v3_1000511c = call i32 @function_100081f4(i32 24, i32* nonnull %stack_var_-8440)
  store i32 %v3_1000511c, i32* %r25.global-to-local, align 4
  %v3_1000512c = call i32 @function_100081f4(i32 36, i32* nonnull %stack_var_-8436)
  store i32 %v3_1000512c, i32* %r23.global-to-local, align 4
  %v0_10005134105 = load i32, i32* %r24.global-to-local, align 4
  store i32 268456260, i32* @lr, align 4
  %v3_10005140106 = call i32 @function_10009304(i32 %v0_10005134105, i32 %v2_10004e38, i32 4096)
  %tmp98108 = icmp slt i32 %v3_10005140106, 1
  br i1 %tmp98108, label %dec_label_pc_100053a4, label %dec_label_pc_1000514c

dec_label_pc_1000514c:                            ; preds = %dec_label_pc_100050a4, %dec_label_pc_10005134.backedge
  %v3_10005140109 = phi i32 [ %v3_10005140, %dec_label_pc_10005134.backedge ], [ %v3_10005140106, %dec_label_pc_100050a4 ]
  %v3_10005144110.in = phi i32 [ %v3_10005140, %dec_label_pc_10005134.backedge ], [ %v3_10005140106, %dec_label_pc_100050a4 ]
  %v3_10005144110 = icmp eq i32 %v3_10005144110.in, 0
  %v3_1000514c = load i32, i32* %stack_var_-8452, align 4
  %v2_10005150 = icmp slt i32 %v3_10005140109, %v3_1000514c
  br i1 %v2_10005150, label %dec_label_pc_10005190, label %dec_label_pc_10005158

dec_label_pc_10005158:                            ; preds = %dec_label_pc_1000514c
  store i32 0, i32* %r11.global-to-local, align 4
  %v0_1000516c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000516c

dec_label_pc_1000516c:                            ; preds = %dec_label_pc_10005158, %dec_label_pc_10005188
  %v0_1000518c = phi i32 [ %v3_10005140109, %dec_label_pc_10005158 ], [ %v1_1000518c, %dec_label_pc_10005188 ]
  %v0_10005188 = phi i32 [ %v2_10004e38, %dec_label_pc_10005158 ], [ %v1_10005188, %dec_label_pc_10005188 ]
  %v1_1000516c = phi i32 [ 0, %dec_label_pc_10005158 ], [ %v1_1000516c27, %dec_label_pc_10005188 ]
  %v2_1000516c = add i32 %v1_1000516c, %v0_1000516c.pre
  %v3_1000516c = inttoptr i32 %v2_1000516c to i8*
  %v4_1000516c = load i8, i8* %v3_1000516c, align 1
  %v1_10005170 = add i32 %v1_1000516c, 1
  store i32 %v1_10005170, i32* %r11.global-to-local, align 4
  %v1_10005174 = inttoptr i32 %v0_10005188 to i8*
  %v2_10005174 = load i8, i8* %v1_10005174, align 1
  %v4_1000517c = icmp eq i8 %v2_10005174, %v4_1000516c
  br i1 %v4_1000517c, label %dec_label_pc_100052e4, label %dec_label_pc_10005184

dec_label_pc_10005184:                            ; preds = %dec_label_pc_1000516c
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10005188

dec_label_pc_10005188:                            ; preds = %dec_label_pc_100052e4, %dec_label_pc_10005184
  %v1_1000516c27 = phi i32 [ %v1_10005170, %dec_label_pc_100052e4 ], [ 0, %dec_label_pc_10005184 ]
  %v1_10005188 = add i32 %v0_10005188, 1
  %v1_1000518c = add i32 %v0_1000518c, -1
  %v2_1000518c = icmp eq i32 %v1_1000518c, 0
  br i1 %v2_1000518c, label %dec_label_pc_10005190, label %dec_label_pc_1000516c

dec_label_pc_10005190:                            ; preds = %dec_label_pc_10005188, %dec_label_pc_1000514c
  %v3_10005190 = load i32, i32* %stack_var_-8448, align 4
  %v2_10005194 = icmp slt i32 %v3_10005140109, %v3_10005190
  br i1 %v2_10005194, label %dec_label_pc_100051d4, label %dec_label_pc_1000519c

dec_label_pc_1000519c:                            ; preds = %dec_label_pc_10005190
  store i32 0, i32* %r11.global-to-local, align 4
  br i1 %v3_10005144110, label %dec_label_pc_100051d4, label %dec_label_pc_100051b0.preheader

dec_label_pc_100051b0.preheader:                  ; preds = %dec_label_pc_1000519c
  %v0_100051b0.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100051b0

dec_label_pc_100051b0:                            ; preds = %dec_label_pc_100051b0.preheader, %dec_label_pc_100051d0
  %v0_100051d0 = phi i32 [ %v3_10005140109, %dec_label_pc_100051b0.preheader ], [ %v1_100051d0, %dec_label_pc_100051d0 ]
  %storemerge.in = phi i32 [ %v2_10004e38, %dec_label_pc_100051b0.preheader ], [ %storemerge, %dec_label_pc_100051d0 ]
  %v1_100051b0 = phi i32 [ 0, %dec_label_pc_100051b0.preheader ], [ %v1_100051b033, %dec_label_pc_100051d0 ]
  %v2_100051b0 = add i32 %v1_100051b0, %v0_100051b0.pre
  %v3_100051b0 = inttoptr i32 %v2_100051b0 to i8*
  %v4_100051b0 = load i8, i8* %v3_100051b0, align 1
  %v1_100051b4 = add i32 %v1_100051b0, 1
  store i32 %v1_100051b4, i32* %r11.global-to-local, align 4
  %v1_100051b8 = inttoptr i32 %storemerge.in to i8*
  %v2_100051b8 = load i8, i8* %v1_100051b8, align 1
  %v4_100051c0 = icmp eq i8 %v2_100051b8, %v4_100051b0
  br i1 %v4_100051c0, label %dec_label_pc_10005358, label %dec_label_pc_100051c8

dec_label_pc_100051c8:                            ; preds = %dec_label_pc_100051b0
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100051d0

dec_label_pc_100051d0:                            ; preds = %dec_label_pc_10005358, %dec_label_pc_100051c8
  %v1_100051b033 = phi i32 [ %v1_100051b4, %dec_label_pc_10005358 ], [ 0, %dec_label_pc_100051c8 ]
  %storemerge = add i32 %storemerge.in, 1
  %v1_100051d0 = add i32 %v0_100051d0, -1
  %v2_100051d0 = icmp eq i32 %v1_100051d0, 0
  br i1 %v2_100051d0, label %dec_label_pc_100051d4, label %dec_label_pc_100051b0

dec_label_pc_100051d4:                            ; preds = %dec_label_pc_100051d0, %dec_label_pc_1000519c, %dec_label_pc_10005190
  %v3_100051d4 = load i32, i32* %stack_var_-8444, align 4
  %v2_100051d8 = icmp slt i32 %v3_10005140109, %v3_100051d4
  br i1 %v2_100051d8, label %dec_label_pc_10005218, label %dec_label_pc_100051e0

dec_label_pc_100051e0:                            ; preds = %dec_label_pc_100051d4
  store i32 0, i32* %r11.global-to-local, align 4
  br i1 %v3_10005144110, label %dec_label_pc_10005218, label %dec_label_pc_100051f4.preheader

dec_label_pc_100051f4.preheader:                  ; preds = %dec_label_pc_100051e0
  %v0_100051f4.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_100051f4

dec_label_pc_100051f4:                            ; preds = %dec_label_pc_100051f4.preheader, %dec_label_pc_10005214
  %v0_10005214 = phi i32 [ %v3_10005140109, %dec_label_pc_100051f4.preheader ], [ %v1_10005214, %dec_label_pc_10005214 ]
  %storemerge3.in = phi i32 [ %v2_10004e38, %dec_label_pc_100051f4.preheader ], [ %storemerge3, %dec_label_pc_10005214 ]
  %v1_100051f4 = phi i32 [ 0, %dec_label_pc_100051f4.preheader ], [ %v1_100051f439, %dec_label_pc_10005214 ]
  %v2_100051f4 = add i32 %v1_100051f4, %v0_100051f4.pre
  %v3_100051f4 = inttoptr i32 %v2_100051f4 to i8*
  %v4_100051f4 = load i8, i8* %v3_100051f4, align 1
  %v1_100051f8 = add i32 %v1_100051f4, 1
  store i32 %v1_100051f8, i32* %r11.global-to-local, align 4
  %v1_100051fc = inttoptr i32 %storemerge3.in to i8*
  %v2_100051fc = load i8, i8* %v1_100051fc, align 1
  %v4_10005204 = icmp eq i8 %v2_100051fc, %v4_100051f4
  br i1 %v4_10005204, label %dec_label_pc_10005364, label %dec_label_pc_1000520c

dec_label_pc_1000520c:                            ; preds = %dec_label_pc_100051f4
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10005214

dec_label_pc_10005214:                            ; preds = %dec_label_pc_10005364, %dec_label_pc_1000520c
  %v1_100051f439 = phi i32 [ %v1_100051f8, %dec_label_pc_10005364 ], [ 0, %dec_label_pc_1000520c ]
  %storemerge3 = add i32 %storemerge3.in, 1
  %v1_10005214 = add i32 %v0_10005214, -1
  %v2_10005214 = icmp eq i32 %v1_10005214, 0
  br i1 %v2_10005214, label %dec_label_pc_10005218, label %dec_label_pc_100051f4

dec_label_pc_10005218:                            ; preds = %dec_label_pc_10005214, %dec_label_pc_100051e0, %dec_label_pc_100051d4
  %v3_10005218 = load i32, i32* %stack_var_-8456, align 4
  %v2_1000521c = icmp slt i32 %v3_10005140109, %v3_10005218
  br i1 %v2_1000521c, label %dec_label_pc_1000525c, label %dec_label_pc_10005224

dec_label_pc_10005224:                            ; preds = %dec_label_pc_10005218
  store i32 0, i32* %r11.global-to-local, align 4
  br i1 %v3_10005144110, label %dec_label_pc_1000525c, label %dec_label_pc_10005238.preheader

dec_label_pc_10005238.preheader:                  ; preds = %dec_label_pc_10005224
  %v0_10005238.pre = load i32, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10005238

dec_label_pc_10005238:                            ; preds = %dec_label_pc_10005238.preheader, %dec_label_pc_10005258
  %v0_10005258 = phi i32 [ %v3_10005140109, %dec_label_pc_10005238.preheader ], [ %v1_10005258, %dec_label_pc_10005258 ]
  %storemerge4.in = phi i32 [ %v2_10004e38, %dec_label_pc_10005238.preheader ], [ %storemerge4, %dec_label_pc_10005258 ]
  %v1_10005238 = phi i32 [ 0, %dec_label_pc_10005238.preheader ], [ %v1_1000523845, %dec_label_pc_10005258 ]
  %v2_10005238 = add i32 %v1_10005238, %v0_10005238.pre
  %v3_10005238 = inttoptr i32 %v2_10005238 to i8*
  %v4_10005238 = load i8, i8* %v3_10005238, align 1
  %v1_1000523c = add i32 %v1_10005238, 1
  store i32 %v1_1000523c, i32* %r11.global-to-local, align 4
  %v1_10005240 = inttoptr i32 %storemerge4.in to i8*
  %v2_10005240 = load i8, i8* %v1_10005240, align 1
  %v4_10005248 = icmp eq i8 %v2_10005240, %v4_10005238
  br i1 %v4_10005248, label %dec_label_pc_10005370, label %dec_label_pc_10005250

dec_label_pc_10005250:                            ; preds = %dec_label_pc_10005238
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10005258

dec_label_pc_10005258:                            ; preds = %dec_label_pc_10005370, %dec_label_pc_10005250
  %v1_1000523845 = phi i32 [ %v1_1000523c, %dec_label_pc_10005370 ], [ 0, %dec_label_pc_10005250 ]
  %storemerge4 = add i32 %storemerge4.in, 1
  %v1_10005258 = add i32 %v0_10005258, -1
  %v2_10005258 = icmp eq i32 %v1_10005258, 0
  br i1 %v2_10005258, label %dec_label_pc_1000525c, label %dec_label_pc_10005238

dec_label_pc_1000525c:                            ; preds = %dec_label_pc_10005258, %dec_label_pc_10005224, %dec_label_pc_10005218
  %v3_1000525c = load i32, i32* %stack_var_-8440, align 4
  %v2_10005260 = icmp slt i32 %v3_10005140109, %v3_1000525c
  br i1 %v2_10005260, label %dec_label_pc_100052a0, label %dec_label_pc_10005268

dec_label_pc_10005268:                            ; preds = %dec_label_pc_1000525c
  store i32 0, i32* %r11.global-to-local, align 4
  br i1 %v3_10005144110, label %dec_label_pc_100052a0, label %dec_label_pc_1000527c.preheader

dec_label_pc_1000527c.preheader:                  ; preds = %dec_label_pc_10005268
  %v0_1000527c.pre = load i32, i32* %r25.global-to-local, align 4
  br label %dec_label_pc_1000527c

dec_label_pc_1000527c:                            ; preds = %dec_label_pc_1000527c.preheader, %dec_label_pc_1000529c
  %v0_1000529c = phi i32 [ %v3_10005140109, %dec_label_pc_1000527c.preheader ], [ %v1_1000529c, %dec_label_pc_1000529c ]
  %storemerge5.in = phi i32 [ %v2_10004e38, %dec_label_pc_1000527c.preheader ], [ %storemerge5, %dec_label_pc_1000529c ]
  %v1_1000527c = phi i32 [ 0, %dec_label_pc_1000527c.preheader ], [ %v1_1000527c51, %dec_label_pc_1000529c ]
  %v2_1000527c = add i32 %v1_1000527c, %v0_1000527c.pre
  %v3_1000527c = inttoptr i32 %v2_1000527c to i8*
  %v4_1000527c = load i8, i8* %v3_1000527c, align 1
  %v1_10005280 = add i32 %v1_1000527c, 1
  store i32 %v1_10005280, i32* %r11.global-to-local, align 4
  %v1_10005284 = inttoptr i32 %storemerge5.in to i8*
  %v2_10005284 = load i8, i8* %v1_10005284, align 1
  %v4_1000528c = icmp eq i8 %v2_10005284, %v4_1000527c
  br i1 %v4_1000528c, label %dec_label_pc_1000537c, label %dec_label_pc_10005294

dec_label_pc_10005294:                            ; preds = %dec_label_pc_1000527c
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000529c

dec_label_pc_1000529c:                            ; preds = %dec_label_pc_1000537c, %dec_label_pc_10005294
  %v1_1000527c51 = phi i32 [ %v1_10005280, %dec_label_pc_1000537c ], [ 0, %dec_label_pc_10005294 ]
  %storemerge5 = add i32 %storemerge5.in, 1
  %v1_1000529c = add i32 %v0_1000529c, -1
  %v2_1000529c = icmp eq i32 %v1_1000529c, 0
  br i1 %v2_1000529c, label %dec_label_pc_100052a0, label %dec_label_pc_1000527c

dec_label_pc_100052a0:                            ; preds = %dec_label_pc_1000529c, %dec_label_pc_10005268, %dec_label_pc_1000525c
  %v3_100052a0 = load i32, i32* %stack_var_-8436, align 4
  %v2_100052a4 = icmp slt i32 %v3_10005140109, %v3_100052a0
  br i1 %v2_100052a4, label %dec_label_pc_10005134.backedge, label %dec_label_pc_100052ac

dec_label_pc_100052ac:                            ; preds = %dec_label_pc_100052a0
  store i32 0, i32* %r11.global-to-local, align 4
  br i1 %v3_10005144110, label %dec_label_pc_10005134.backedge, label %dec_label_pc_100052c0.lr.ph

dec_label_pc_10005134.backedge:                   ; preds = %dec_label_pc_100052bc.backedge, %dec_label_pc_100052ac, %dec_label_pc_100052a0
  %v0_10005134 = load i32, i32* %r24.global-to-local, align 4
  store i32 268456260, i32* @lr, align 4
  %v3_10005140 = call i32 @function_10009304(i32 %v0_10005134, i32 %v2_10004e38, i32 4096)
  %tmp98 = icmp slt i32 %v3_10005140, 1
  br i1 %tmp98, label %dec_label_pc_100053a4, label %dec_label_pc_1000514c

dec_label_pc_100052c0.lr.ph:                      ; preds = %dec_label_pc_100052ac
  %v0_100052c0.pre = load i32, i32* %r23.global-to-local, align 4
  br label %dec_label_pc_100052c0

dec_label_pc_100052c0:                            ; preds = %dec_label_pc_100052c0.lr.ph, %dec_label_pc_100052bc.backedge
  %v0_100052bc = phi i32 [ %v3_10005140109, %dec_label_pc_100052c0.lr.ph ], [ %v1_100052bc, %dec_label_pc_100052bc.backedge ]
  %storemerge21.in = phi i32 [ %v2_10004e38, %dec_label_pc_100052c0.lr.ph ], [ %storemerge21, %dec_label_pc_100052bc.backedge ]
  %v1_100052c0 = phi i32 [ 0, %dec_label_pc_100052c0.lr.ph ], [ %v1_100052c057, %dec_label_pc_100052bc.backedge ]
  %v2_100052c0 = add i32 %v1_100052c0, %v0_100052c0.pre
  %v3_100052c0 = inttoptr i32 %v2_100052c0 to i8*
  %v4_100052c0 = load i8, i8* %v3_100052c0, align 1
  %v1_100052c4 = add i32 %v1_100052c0, 1
  store i32 %v1_100052c4, i32* %r11.global-to-local, align 4
  %v1_100052c8 = inttoptr i32 %storemerge21.in to i8*
  %v2_100052c8 = load i8, i8* %v1_100052c8, align 1
  %v4_100052d0 = icmp eq i8 %v2_100052c8, %v4_100052c0
  br i1 %v4_100052d0, label %dec_label_pc_10005388, label %dec_label_pc_100052d8

dec_label_pc_100052d8:                            ; preds = %dec_label_pc_100052c0
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100052bc.backedge

dec_label_pc_100052bc.backedge:                   ; preds = %dec_label_pc_10005388, %dec_label_pc_100052d8
  %v1_100052c057 = phi i32 [ 0, %dec_label_pc_100052d8 ], [ %v1_100052c4, %dec_label_pc_10005388 ]
  %storemerge21 = add i32 %storemerge21.in, 1
  %v1_100052bc = add i32 %v0_100052bc, -1
  %v2_100052bc = icmp eq i32 %v1_100052bc, 0
  br i1 %v2_100052bc, label %dec_label_pc_10005134.backedge, label %dec_label_pc_100052c0

dec_label_pc_100052e4:                            ; preds = %dec_label_pc_1000516c
  %v4_10005178 = icmp eq i32 %v3_1000514c, %v1_10005170
  br i1 %v4_10005178, label %dec_label_pc_100052e8, label %dec_label_pc_10005188

dec_label_pc_100052e8:                            ; preds = %dec_label_pc_100052e4, %dec_label_pc_10005358, %dec_label_pc_10005364, %dec_label_pc_10005370, %dec_label_pc_1000537c, %dec_label_pc_10005388
  store i32 ptrtoint ([3 x i8]* @global_var_100052f0.63 to i32), i32* @lr, align 4
  %v1_100052ec = call i32 @function_1000821c(i32 20)
  store i32 ptrtoint ([3 x i8]* @global_var_100052f8.64 to i32), i32* @lr, align 4
  %v1_100052f4 = call i32 @function_1000821c(i32 21)
  store i32 ptrtoint ([3 x i8]* @global_var_10005300.65 to i32), i32* @lr, align 4
  %v1_100052fc = call i32 @function_1000821c(i32 22)
  store i32 ptrtoint ([3 x i8]* @global_var_10005308.66 to i32), i32* @lr, align 4
  %v1_10005304 = call i32 @function_1000821c(i32 23)
  store i32 ptrtoint ([3 x i8]* @global_var_10005310.67 to i32), i32* @lr, align 4
  %v1_1000530c = call i32 @function_1000821c(i32 24)
  store i32 268456728, i32* @lr, align 4
  %v1_10005314 = call i32 @function_1000821c(i32 36)
  store i32 268456736, i32* @lr, align 4
  %v0_1000531c = call i32 @function_100090cc()
  %v0_10005320 = load i32, i32* %r30.global-to-local, align 4
  store i32 268456748, i32* @lr, align 4
  %v2_10005328 = call i32 @function_100091ec(i32 %v0_10005320, i32 9)
  br label %dec_label_pc_1000532c

dec_label_pc_1000532c:                            ; preds = %dec_label_pc_10005088, %dec_label_pc_100053a4, %dec_label_pc_100052e8
  store i32 64, i32* @r4, align 4
  store i32 %v2_10004e30, i32* @r3, align 4
  store i32 268456760, i32* @lr, align 4
  %v0_10005334 = call i32 @function_100089b4()
  store i32 %v2_10004e34, i32* @r3, align 4
  store i32 64, i32* @r4, align 4
  %v0_10005340 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_10005340, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005348.68 to i32), i32* @lr, align 4
  %v0_10005344 = call i32 @function_100089b4()
  store i32 268456784, i32* @lr, align 4
  %v1_1000534c = call i32 @function_1000a914(i32 1)
  %v0_10005350 = load i32, i32* %r18.global-to-local, align 4
  store i32 %v0_10005350, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10004e64.backedge

dec_label_pc_10005358:                            ; preds = %dec_label_pc_100051b0
  %v4_100051bc = icmp eq i32 %v3_10005190, %v1_100051b4
  br i1 %v4_100051bc, label %dec_label_pc_100052e8, label %dec_label_pc_100051d0

dec_label_pc_10005364:                            ; preds = %dec_label_pc_100051f4
  %v4_10005200 = icmp eq i32 %v3_100051d4, %v1_100051f8
  br i1 %v4_10005200, label %dec_label_pc_100052e8, label %dec_label_pc_10005214

dec_label_pc_10005370:                            ; preds = %dec_label_pc_10005238
  %v4_10005244 = icmp eq i32 %v3_10005218, %v1_1000523c
  br i1 %v4_10005244, label %dec_label_pc_100052e8, label %dec_label_pc_10005258

dec_label_pc_1000537c:                            ; preds = %dec_label_pc_1000527c
  %v4_10005288 = icmp eq i32 %v3_1000525c, %v1_10005280
  br i1 %v4_10005288, label %dec_label_pc_100052e8, label %dec_label_pc_1000529c

dec_label_pc_10005388:                            ; preds = %dec_label_pc_100052c0
  %v4_100052cc = icmp eq i32 %v3_100052a0, %v1_100052c4
  br i1 %v4_100052cc, label %dec_label_pc_100052e8, label %dec_label_pc_100052bc.backedge

dec_label_pc_10005394:                            ; preds = %dec_label_pc_10005064
  %v0_10005394 = load i32, i32* %r30.global-to-local, align 4
  store i32 268456864, i32* @lr, align 4
  %v2_1000539c = call i32 @function_100091ec(i32 %v0_10005394, i32 9)
  br label %dec_label_pc_10005080

dec_label_pc_100053a4:                            ; preds = %dec_label_pc_10005134.backedge, %dec_label_pc_100050a4
  store i32 ptrtoint ([3 x i8]* @global_var_100053ac.69 to i32), i32* @lr, align 4
  %v1_100053a8 = call i32 @function_1000821c(i32 20)
  store i32 ptrtoint ([3 x i8]* @global_var_100053b4.70 to i32), i32* @lr, align 4
  %v1_100053b0 = call i32 @function_1000821c(i32 21)
  store i32 ptrtoint ([3 x i8]* @global_var_100053bc.71 to i32), i32* @lr, align 4
  %v1_100053b8 = call i32 @function_1000821c(i32 22)
  store i32 ptrtoint ([3 x i8]* @global_var_100053c4.72 to i32), i32* @lr, align 4
  %v1_100053c0 = call i32 @function_1000821c(i32 23)
  store i32 ptrtoint ([3 x i8]* @global_var_100053cc.73 to i32), i32* @lr, align 4
  %v1_100053c8 = call i32 @function_1000821c(i32 24)
  store i32 268456916, i32* @lr, align 4
  %v1_100053d0 = call i32 @function_1000821c(i32 36)
  store i32 268456924, i32* @lr, align 4
  %v0_100053d8 = call i32 @function_100090cc()
  br label %dec_label_pc_1000532c

; uselistorder directives
  uselistorder i32 %v1_100052bc, { 1, 0 }
  uselistorder i32 %v1_100052c4, { 1, 0, 2 }
  uselistorder i32 %v1_100052c0, { 1, 0 }
  uselistorder i32 %v3_10005140, { 2, 1, 0 }
  uselistorder i32 %v1_1000529c, { 1, 0 }
  uselistorder i32 %v1_1000527c, { 1, 0 }
  uselistorder i32 %v1_10005258, { 1, 0 }
  uselistorder i32 %v1_10005238, { 1, 0 }
  uselistorder i32 %v1_10005214, { 1, 0 }
  uselistorder i32 %v1_100051f4, { 1, 0 }
  uselistorder i32 %v1_100051d0, { 1, 0 }
  uselistorder i32 %v1_100051b0, { 1, 0 }
  uselistorder i32 %v1_1000518c, { 1, 0 }
  uselistorder i32 %v1_1000516c, { 1, 0 }
  uselistorder i1 %v3_10005144110, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v3_10005140109, { 11, 5, 10, 4, 9, 1, 8, 0, 7, 2, 6, 3 }
  uselistorder i32 %v2_10004e68, { 1, 0 }
  uselistorder i32 %v2_10004ec0, { 1, 0 }
  uselistorder i32 %v1_10004e7c, { 1, 0 }
  uselistorder i32 %v2_10004e38, { 1, 7, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 %v2_10004dac, { 1, 0, 2 }
  uselistorder i32 %v2_10004d88, { 1, 0, 2 }
  uselistorder i32 %v2_10004d58, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 %v0_10004b70, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-8432, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %stack_var_-8452, { 1, 0 }
  uselistorder i32* %stack_var_-8448, { 1, 0 }
  uselistorder i32* %stack_var_-8444, { 1, 0 }
  uselistorder i32* %stack_var_-8456, { 1, 0 }
  uselistorder i32* %stack_var_-8440, { 1, 0 }
  uselistorder i32* %stack_var_-8436, { 1, 0 }
  uselistorder i32* %r30.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder i32* %r24.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2, 4, 3, 5, 7, 6, 8, 10, 9, 11, 13, 12, 14, 16, 15, 17, 18, 19 }
  uselistorder i32 268456260, { 1, 0 }
  uselistorder i32 (i32*)* @function_10009728, { 3, 2, 0, 4, 5, 6, 7, 1 }
  uselistorder i32 268455532, { 1, 0 }
  uselistorder i32 (i32)* @function_10009618, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_1000934c, { 3, 2, 1, 0 }
  uselistorder i32 4095, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000532c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100052e8, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_100052c0, { 1, 0 }
  uselistorder label %dec_label_pc_1000527c, { 1, 0 }
  uselistorder label %dec_label_pc_10005238, { 1, 0 }
  uselistorder label %dec_label_pc_100051f4, { 1, 0 }
  uselistorder label %dec_label_pc_100051b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000516c, { 1, 0 }
  uselistorder label %dec_label_pc_1000514c, { 1, 0 }
  uselistorder label %dec_label_pc_10005088, { 1, 0 }
  uselistorder label %dec_label_pc_10005080, { 1, 0 }
  uselistorder label %dec_label_pc_10004e64.backedge, { 3, 2, 5, 4, 1, 0 }
  uselistorder label %dec_label_pc_10004ff4, { 1, 0 }
  uselistorder label %dec_label_pc_10004e74, { 1, 0 }
  uselistorder label %dec_label_pc_10004e74.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10004e14, { 1, 0 }
  uselistorder label %dec_label_pc_10004d34, { 1, 0 }
  uselistorder label %dec_label_pc_10004cf0, { 1, 0 }
  uselistorder label %dec_label_pc_10004cac, { 1, 0 }
  uselistorder label %dec_label_pc_10004c78, { 1, 0 }
  uselistorder label %dec_label_pc_10004c34, { 1, 0 }
}

define i32 @function_100053e0() local_unnamed_addr {
dec_label_pc_100053e0:
  store i32 268457440, i32* @global_var_1001c238.74, align 4
  %v0_100053f0 = load i32, i32* @r3, align 4
  ret i32 %v0_100053f0
}

define i32 @function_100053f4(i32 %arg1) local_unnamed_addr {
dec_label_pc_100053f4:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v0_10005414 = load i32, i32* @r28, align 4
  store i32 0, i32* @r27, align 4
  store i32 268566528, i32* @r28, align 4
  %v0_10005424 = load i32, i32* @r31, align 4
  store i32 268566528, i32* @r31, align 4
  %v2_10005430 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_10005430, i32* @r30, align 4
  store i32 1, i32* %stack_var_-56, align 4
  store i32 268457020, i32* @lr, align 4
  %v3_10005438 = call i32 @function_10009e1c(i32 2, i32 1, i32 0)
  %v3_1000543c = icmp eq i32 %v3_10005438, -1
  store i32 %v3_10005438, i32* @global_var_1001c230.75, align 4
  br i1 %v3_1000543c, label %dec_label_pc_100054ec, label %dec_label_pc_10005458

dec_label_pc_10005458:                            ; preds = %dec_label_pc_100053f4
  %v2_10005440 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268457052, i32* @lr, align 4
  %v5_10005458 = call i32 @function_10009de0(i32 %v3_10005438, i32 1, i32 2, i32 %v2_10005440)
  %v3_1000545c = load i32, i32* @global_var_1001c230.75, align 4
  store i32 3, i32* @r4, align 4
  store i32 268457076, i32* @lr, align 4
  %v2_10005470 = call i32 @function_10008fe4(i32 %v3_1000545c)
  store i32 4, i32* @r4, align 4
  store i32 268457096, i32* @lr, align 4
  %v2_10005484 = call i32 @function_10008fe4(i32 %v3_1000545c)
  %v3_10005488 = load i8, i8* @global_var_1001c0f0.76, align 1
  %v3_10005490 = icmp eq i8 %v3_10005488, 0
  br i1 %v3_10005490, label %dec_label_pc_10005510, label %dec_label_pc_1000549c

dec_label_pc_1000549c:                            ; preds = %dec_label_pc_10005458
  store i32 2, i32* %stack_var_-52, align 4
  %v0_100054b0 = call i32 @function_100097e8()
  %v0_100054b4 = load i32, i32* @r27, align 4
  %v2_100054b4 = inttoptr i32 %v0_100054b0 to i32*
  store i32 %v0_100054b4, i32* %v2_100054b4, align 4
  store i32 %v0_100054b0, i32* @r29, align 4
  %v3_100054c4 = load i32, i32* @global_var_1001c230.75, align 4
  store i32 268457164, i32* @lr, align 4
  %v3_100054c8 = call i32 @function_10009be8(i32 %v3_100054c4, i32 %v2_10005430, i32 16)
  %v3_100054d0 = icmp eq i32 %v3_100054c8, -1
  br i1 %v3_100054d0, label %dec_label_pc_10005558, label %dec_label_pc_100054dc

dec_label_pc_100054dc:                            ; preds = %dec_label_pc_10005510, %dec_label_pc_1000549c
  %v3_100054e4 = load i32, i32* @global_var_1001c230.75, align 4
  store i32 268457196, i32* @lr, align 4
  %v2_100054e8 = call i32 @function_10009cc0(i32 %v3_100054e4, i32 1)
  br label %dec_label_pc_100054ec

dec_label_pc_100054ec:                            ; preds = %dec_label_pc_100053f4, %dec_label_pc_100054dc
  %v0_1000550c = phi i32 [ -1, %dec_label_pc_100053f4 ], [ %v2_100054e8, %dec_label_pc_100054dc ]
  store i32 %v0_10005414, i32* @r28, align 4
  store i32 %v0_10005424, i32* @r31, align 4
  ret i32 %v0_1000550c

dec_label_pc_10005510:                            ; preds = %dec_label_pc_10005458
  store i32 2, i32* %stack_var_-52, align 4
  %v0_1000552c = call i32 @function_100097e8()
  %v0_10005530 = load i32, i32* @r27, align 4
  %v2_10005530 = inttoptr i32 %v0_1000552c to i32*
  store i32 %v0_10005530, i32* %v2_10005530, align 4
  store i32 %v0_1000552c, i32* @r29, align 4
  %v3_10005540 = load i32, i32* @global_var_1001c230.75, align 4
  store i32 268457288, i32* @lr, align 4
  %v3_10005544 = call i32 @function_10009be8(i32 %v3_10005540, i32 %v2_10005430, i32 16)
  %v3_1000554c = icmp eq i32 %v3_10005544, -1
  br i1 %v3_1000554c, label %dec_label_pc_10005558, label %dec_label_pc_100054dc

dec_label_pc_10005558:                            ; preds = %dec_label_pc_10005510, %dec_label_pc_1000549c
  %v0_10005558 = load i32, i32* @r29, align 4
  %v1_10005558 = inttoptr i32 %v0_10005558 to i32*
  %v2_10005558 = load i32, i32* %v1_10005558, align 4
  %v3_1000555c = load i32, i32* @global_var_1001c230.75, align 4
  store i32 %v3_1000555c, i32* @r3, align 4
  %v3_10005560 = icmp eq i32 %v2_10005558, 99
  br i1 %v3_10005560, label %dec_label_pc_100055c8, label %dec_label_pc_10005568

dec_label_pc_10005568:                            ; preds = %dec_label_pc_100055c8, %dec_label_pc_10005558, %dec_label_pc_100055d4
  store i32 2, i32* %stack_var_-52, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005584.77 to i32), i32* @lr, align 4
  %v0_10005580 = call i32 @function_10009c1c()
  store i32 268457356, i32* @lr, align 4
  %v1_10005588 = call i32 @function_1000a914(i32 5)
  store i32 ptrtoint ([3 x i8]* @global_var_10005594.78 to i32), i32* @lr, align 4
  %v0_10005590 = call i32 @function_100090cc()
  store i32 268457376, i32* @lr, align 4
  %v1_1000559c = call i32 @function_10004514(i32 47675)
  store i32 268457380, i32* @lr, align 4
  %v1_100055a0 = call i32 @function_100053f4(i32 %v1_1000559c)
  store i32 %v0_10005414, i32* @r28, align 4
  store i32 %v0_10005424, i32* @r31, align 4
  ret i32 %v1_100055a0

dec_label_pc_100055c8:                            ; preds = %dec_label_pc_10005558
  %v3_100055c8 = load i8, i8* @global_var_1001c0f0.76, align 1
  %v3_100055cc = icmp eq i8 %v3_100055c8, 0
  br i1 %v3_100055cc, label %dec_label_pc_10005568, label %dec_label_pc_100055d4

dec_label_pc_100055d4:                            ; preds = %dec_label_pc_100055c8
  %v0_100055d8 = load i32, i32* @r27, align 4
  %v1_100055d8 = trunc i32 %v0_100055d8 to i8
  store i8 %v1_100055d8, i8* @global_var_1001c0f0.76, align 1
  br label %dec_label_pc_10005568

; uselistorder directives
  uselistorder i32 %v2_10005430, { 1, 0, 2 }
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i32 (i32)* @function_10004514, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_10009cc0, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10009be8, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_1001c0f0.76, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10005568, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100054ec, { 1, 0 }
}

define i32 @function_100055e0() local_unnamed_addr {
dec_label_pc_100055e0:
  %r28.global-to-local = alloca i32, align 4
  store i32 268457472, i32* @lr, align 4
  %v1_100055fc = call i32 @function_100082a8(i32 2)
  %v3_10005608 = call i32 @function_100081f4(i32 2, i32* null)
  store i32 268457488, i32* @lr, align 4
  %v1_1000560c = call i32 @function_10006260(i32 %v3_10005608)
  store i32 %v1_1000560c, i32* @r31, align 4
  store i32 268457500, i32* @lr, align 4
  %v1_10005618 = call i32 @function_1000821c(i32 2)
  %v0_1000561c = load i32, i32* @r31, align 4
  %v3_1000561c = icmp eq i32 %v0_1000561c, 0
  br i1 %v3_1000561c, label %dec_label_pc_10005680, label %dec_label_pc_10005624

dec_label_pc_10005624:                            ; preds = %dec_label_pc_100055e0
  %v1_10005624 = add i32 %v0_1000561c, 4
  %v2_10005624 = inttoptr i32 %v1_10005624 to i32*
  %v3_10005624 = load i32, i32* %v2_10005624, align 4
  store i32 %v3_10005624, i32* %r28.global-to-local, align 4
  %v0_10005628 = call i32 @function_10005f3c()
  %v0_1000562c = load i32, i32* @r31, align 4
  %v1_1000562c = inttoptr i32 %v0_1000562c to i8*
  %v2_1000562c = load i8, i8* %v1_1000562c, align 1
  %v3_1000562c = zext i8 %v2_1000562c to i32
  %v2_10005638 = urem i32 %v0_10005628, %v3_1000562c
  %v1_1000564c = mul nuw nsw i32 %v2_10005638, 4
  %v1_10005650 = load i32, i32* %r28.global-to-local, align 4
  %v2_10005650 = add i32 %v1_10005650, %v1_1000564c
  %v3_10005650 = inttoptr i32 %v2_10005650 to i32*
  %v4_10005650 = load i32, i32* %v3_10005650, align 4
  store i32 %v4_10005650, i32* @global_var_1001c334.81, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000565c.82 to i32), i32* @lr, align 4
  %v1_10005658 = call i32 @function_1000621c(i32 %v0_1000562c)
  store i32 ptrtoint ([3 x i8]* @global_var_10005664.83 to i32), i32* @lr, align 4
  %v1_10005660 = call i32 @function_100082a8(i32 1)
  %v3_1000566c = call i32 @function_100081f4(i32 1, i32* null)
  %v4_1000566c = inttoptr i32 %v3_1000566c to i16*
  %v3_10005670 = load i16, i16* %v4_1000566c, align 2
  store i16 %v3_10005670, i16* bitcast (i32* @global_var_1001c332.84 to i16*), align 4
  store i32 268457600, i32* @lr, align 4
  %v1_1000567c = call i32 @function_1000821c(i32 1)
  br label %dec_label_pc_10005680

dec_label_pc_10005680:                            ; preds = %dec_label_pc_100055e0, %dec_label_pc_10005624
  %v0_10005698 = phi i32 [ %v1_10005618, %dec_label_pc_100055e0 ], [ %v1_1000567c, %dec_label_pc_10005624 ]
  ret i32 %v0_10005698

; uselistorder directives
  uselistorder label %dec_label_pc_10005680, { 1, 0 }
}

define i32 @function_1000569c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000569c:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 0, i32* %r19.global-to-local, align 4
  store i32 0, i32* %r18.global-to-local, align 4
  store i32 0, i32* %r17.global-to-local, align 4
  store i32 0, i32* %r16.global-to-local, align 4
  %stack_var_-1136 = alloca i32, align 4
  %stack_var_-1600 = alloca i32, align 4
  %stack_var_-1612 = alloca i32, align 4
  %stack_var_-1616 = alloca i32, align 4
  %stack_var_-1608 = alloca i32, align 4
  %stack_var_-1264 = alloca i32, align 4
  %stack_var_-1392 = alloca i32, align 4
  %stack_var_-1620 = alloca i32, align 4
  %stack_var_-1624 = alloca i16, align 2
  %stack_var_-1584 = alloca i32, align 4
  %stack_var_-1552 = alloca i32, align 4
  %stack_var_-1520 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1000569c = load i32, i32* @lr, align 4
  store i32 %v0_1000569c, i32* %r0.global-to-local, align 4
  %v0_100056a4 = load i32, i32* @r31, align 4
  store i32 268457648, i32* @lr, align 4
  %v0_100056ac = call i32 @function_10009114()
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v0_100056ac, i32* @global_var_1001c268.85, align 4
  %tmp47 = icmp slt i32 %v0_100056ac, 1
  br i1 %tmp47, label %dec_label_pc_100056d4, label %dec_label_pc_100056c0

dec_label_pc_100056c0:                            ; preds = %dec_label_pc_100056d4, %dec_label_pc_1000569c
  store i32 %v0_1000569c, i32* %r0.global-to-local, align 4
  store i32 %v0_100056a4, i32* @r31, align 4
  ret i32 %v0_100056ac

dec_label_pc_100056d4:                            ; preds = %dec_label_pc_1000569c
  %v3_100056d4 = icmp eq i32 %v0_100056ac, -1
  br i1 %v3_100056d4, label %dec_label_pc_100056c0, label %dec_label_pc_100056dc

dec_label_pc_100056dc:                            ; preds = %dec_label_pc_100056d4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* %stack_var_-24, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100056ec.86 to i32), i32* @lr, align 4
  %v1_100056e8 = call i32 @function_100082a8(i32 28)
  store i32 268457716, i32* @lr, align 4
  %v1_100056f0 = call i32 @function_100082a8(i32 29)
  %v3_100056fc = call i32 @function_100081f4(i32 28, i32* null)
  store i32 268457740, i32* @lr, align 4
  %v2_10005708 = call i32 @function_10009234(i32 %v3_100056fc, i32 2)
  %v3_1000570c = icmp eq i32 %v2_10005708, -1
  store i32 %v2_10005708, i32* @r31, align 4
  br i1 %v3_1000570c, label %dec_label_pc_10005754, label %dec_label_pc_10005718

dec_label_pc_10005718:                            ; preds = %dec_label_pc_10005754, %dec_label_pc_100056dc
  %v0_1000571c = phi i32 [ %v2_10005768, %dec_label_pc_10005754 ], [ %v2_10005708, %dec_label_pc_100056dc ]
  %v2_10005724 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268457776, i32* @lr, align 4
  %v3_1000572c = call i32 @function_10008efc(i32 %v0_1000571c, i32 -2147199228, i32 %v2_10005724)
  br label %dec_label_pc_10005730

dec_label_pc_10005730:                            ; preds = %dec_label_pc_10005730, %dec_label_pc_10005718
  %v0_10005734 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005748.87 to i32), i32* @lr, align 4
  %v3_10005744 = call i32 @function_10008efc(i32 %v0_10005734, i32 -2147199227, i32 0)
  store i32 268457808, i32* @lr, align 4
  %v1_1000574c = call i32 @function_1000a914(i32 10)
  br label %dec_label_pc_10005730

dec_label_pc_10005754:                            ; preds = %dec_label_pc_100056dc
  %v3_1000575c = call i32 @function_100081f4(i32 29, i32* null)
  store i32 268457836, i32* @lr, align 4
  %v2_10005768 = call i32 @function_10009234(i32 %v3_1000575c, i32 2)
  %v3_1000576c = icmp eq i32 %v2_10005768, -1
  store i32 %v2_10005768, i32* @r31, align 4
  br i1 %v3_1000576c, label %dec_label_pc_10005778, label %dec_label_pc_10005718

dec_label_pc_10005778:                            ; preds = %dec_label_pc_10005754
  store i32 ptrtoint ([3 x i8]* @global_var_10005780.88 to i32), i32* @lr, align 4
  %v1_1000577c = call i32 @function_1000821c(i32 28)
  store i32 ptrtoint ([3 x i8]* @global_var_10005788.89 to i32), i32* @lr, align 4
  %v1_10005784 = call i32 @function_1000821c(i32 29)
  %v0_1000578c = call i32 @function_1000a890()
  %v0_10005794 = load i32, i32* @lr, align 4
  %v0_10005798 = load i32, i32* @r29, align 4
  %v2_1000579c = ptrtoint i32* %stack_var_-1520 to i32
  store i32 %v2_1000579c, i32* @r29, align 4
  %v0_100057a0 = load i32, i32* @r28, align 4
  store i32 %v0_1000578c, i32* @r28, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_100057b4 = load i32, i32* @r21, align 4
  store i32 0, i32* %stack_var_-1620, align 4
  store i32 268566528, i32* @r21, align 4
  %v0_100057c0 = load i32, i32* @r22, align 4
  store i32 268566528, i32* @r22, align 4
  %v0_100057c8 = load i32, i32* @r24, align 4
  %v2_100057cc = ptrtoint i32* %stack_var_-1552 to i32
  store i32 %v2_100057cc, i32* @r24, align 4
  %v0_100057d0 = load i32, i32* @r25, align 4
  store i32 268566528, i32* @r25, align 4
  %v0_100057d8 = load i32, i32* @r31, align 4
  store i32 2, i32* @r31, align 4
  %v0_100057e0 = load i32, i32* @r15, align 4
  %v0_100057e4 = load i32, i32* %r16.global-to-local, align 4
  %v0_100057e8 = load i32, i32* %r17.global-to-local, align 4
  %v0_100057ec = load i32, i32* %r18.global-to-local, align 4
  %v0_100057f0 = load i32, i32* %r19.global-to-local, align 4
  %v0_100057f4 = load i32, i32* @r20, align 4
  %v0_100057f8 = load i32, i32* @r23, align 4
  %v0_10005800 = load i32, i32* @r27, align 4
  %v0_10005804 = load i32, i32* @r30, align 4
  store i32 268457996, i32* @lr, align 4
  %v1_10005808 = call i32 @function_10009e9c(i32 %v2_1000579c)
  store i32 %v2_1000579c, i32* @r3, align 4
  store i32 268458008, i32* @lr, align 4
  %v2_10005814 = call i32 @function_10009e50(i32 %v2_1000579c, i32 2)
  store i32 268458024, i32* @lr, align 4
  %v3_10005824 = call i32 @function_10009424(i32 0, i32 %v2_1000579c, i32 0)
  store i32 268458036, i32* @lr, align 4
  %v2_10005830 = call i32 @function_10009ec8(i32 17, i32 1)
  store i32 ptrtoint (i32* @global_var_10005844.90 to i32), i32* @lr, align 4
  %v2_10005840 = call i32 @function_10009ec8(i32 5, i32 268456928)
  store i32 268458056, i32* @lr, align 4
  %v1_10005844 = call i32 @function_10008c10(i32 %v2_10005840)
  store i32 -1350886823, i32* %r9.global-to-local, align 4
  store i32 -1350886823, i32* @global_var_1001c334.81, align 4
  store i16 232, i16* bitcast (i32* @global_var_1001c332.84 to i16*), align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 %v1_10005844, i32* @global_var_1001c258.14, align 4
  store i16 2, i16* bitcast (i32* @global_var_1001c330.80 to i16*), align 4
  store i32 268458096, i32* @lr, align 4
  %v2_1000586c = call i32 @function_10008334(i32 %v1_10005844, i32 -1350886823)
  store i32 268457440, i32* %r9.global-to-local, align 4
  store i32 268457440, i32* @global_var_1001c238.74, align 4
  store i32 ptrtoint (i32* @global_var_10005880.91 to i32), i32* @lr, align 4
  %v1_1000587c = call i32 @function_100053f4(i32 %v2_1000586c)
  store i32 268458116, i32* @lr, align 4
  %v1_10005880 = call i32 @function_10005f8c(i32 %v1_1000587c)
  store i32 %v2_100057cc, i32* @r3, align 4
  store i32 32, i32* @r4, align 4
  store i32 268458128, i32* @lr, align 4
  %v0_1000588c = call i32 @function_100089b4()
  %v0_10005890 = load i32, i32* @r28, align 4
  %v3_10005890 = icmp eq i32 %v0_10005890, 2
  br i1 %v3_10005890, label %dec_label_pc_10005a04, label %dec_label_pc_10005898

dec_label_pc_10005898:                            ; preds = %dec_label_pc_10005a04, %dec_label_pc_10005778, %dec_label_pc_10005a14
  %v0_10005898 = call i32 @function_10005f3c()
  %v2_1000589c = ptrtoint i32* %stack_var_-1584 to i32
  store i32 %v2_1000589c, i32* @r27, align 4
  store i32 %v0_10005898, i32* %r29.global-to-local, align 4
  %v0_100058a4 = load i32, i32* @r31, align 4
  %v1_100058a4 = inttoptr i32 %v0_100058a4 to i32*
  %v2_100058a4 = load i32, i32* %v1_100058a4, align 4
  %v2_100058a8 = ptrtoint i16* %stack_var_-1624 to i32
  store i32 %v2_100058a8, i32* @r30, align 4
  store i32 0, i32* @r26, align 4
  store i32 268458164, i32* @lr, align 4
  %v1_100058b0 = inttoptr i32 %v2_100058a4 to i8*
  %v2_100058b0 = call i32 @function_1000890c(i8* %v1_100058b0)
  store i32 %v2_100058b0, i32* %r28.global-to-local, align 4
  %v0_100058b8 = load i32, i32* @r31, align 4
  %v1_100058b8 = inttoptr i32 %v0_100058b8 to i32*
  %v2_100058b8 = load i32, i32* %v1_100058b8, align 4
  %v1_100058bc = sub i32 20, %v2_100058b0
  store i32 %v1_100058bc, i32* @r28, align 4
  store i32 268458180, i32* @lr, align 4
  %v1_100058c0 = inttoptr i32 %v2_100058b8 to i8*
  %v2_100058c0 = call i32 @function_1000890c(i8* %v1_100058c0)
  %v0_100058c4 = load i32, i32* %r29.global-to-local, align 4
  %v1_100058c4 = load i32, i32* @r28, align 4
  %v2_100058c4 = urem i32 %v0_100058c4, %v1_100058c4
  %v2_100058c8 = sub i32 %v0_100058c4, %v2_100058c4
  store i32 %v2_100058c8, i32* %r0.global-to-local, align 4
  %v2_100058d0 = add i32 %v2_100058c4, %v2_100058c0
  %v0_100058dc = load i32, i32* @r30, align 4
  %v2_100058dc = add i32 %v0_100058dc, %v2_100058d0
  store i32 %v2_100058dc, i32* @r29, align 4
  store i32 268458212, i32* @lr, align 4
  %v2_100058e0 = bitcast i32* %stack_var_-1584 to i8*
  %v3_100058e0 = call i32 @function_10005ffc(i8* %v2_100058e0, i32 %v2_100058d0)
  %v0_100058e4 = load i32, i32* @r31, align 4
  %v1_100058e4 = inttoptr i32 %v0_100058e4 to i32*
  %v2_100058e4 = load i32, i32* %v1_100058e4, align 4
  store i32 %v2_100058e4, i32* @r3, align 4
  %v0_100058e8 = load i32, i32* @r26, align 4
  %v1_100058e8 = trunc i32 %v0_100058e8 to i8
  %v2_100058e8 = load i32, i32* @r29, align 4
  %v3_100058e8 = add i32 %v2_100058e8, 40
  %v4_100058e8 = inttoptr i32 %v3_100058e8 to i8*
  store i8 %v1_100058e8, i8* %v4_100058e8, align 1
  %v2_100058f0 = inttoptr i32 %v2_100058e4 to i8*
  %v3_100058f0 = call i32 @function_10008934(i8* %v2_100058f0, i32 %v2_1000589c)
  store i32 32, i32* @r4, align 4
  store i32 %v2_1000589c, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10005900.93 to i32), i32* @lr, align 4
  %v0_100058fc = call i32 @function_100089b4()
  %v0_10005900 = call i32 @function_10005f3c()
  store i32 %v0_10005900, i32* %r28.global-to-local, align 4
  %v0_10005908 = load i32, i32* @r31, align 4
  %v1_10005908 = inttoptr i32 %v0_10005908 to i32*
  %v2_10005908 = load i32, i32* %v1_10005908, align 4
  store i32 268458256, i32* @lr, align 4
  %v1_1000590c = inttoptr i32 %v2_10005908 to i8*
  %v2_1000590c = call i32 @function_1000890c(i8* %v1_1000590c)
  store i32 %v2_1000590c, i32* %r29.global-to-local, align 4
  %v0_10005914 = load i32, i32* @r31, align 4
  %v1_10005914 = inttoptr i32 %v0_10005914 to i32*
  %v2_10005914 = load i32, i32* %v1_10005914, align 4
  %v1_10005918 = sub i32 20, %v2_1000590c
  store i32 %v1_10005918, i32* @r29, align 4
  store i32 268458272, i32* @lr, align 4
  %v1_1000591c = inttoptr i32 %v2_10005914 to i8*
  %v2_1000591c = call i32 @function_1000890c(i8* %v1_1000591c)
  %v0_10005920 = load i32, i32* %r28.global-to-local, align 4
  %v1_10005920 = load i32, i32* @r29, align 4
  %v2_10005920 = urem i32 %v0_10005920, %v1_10005920
  %v2_10005924 = sub i32 %v0_10005920, %v2_10005920
  store i32 %v2_10005924, i32* %r0.global-to-local, align 4
  %v2_1000592c = add i32 %v2_10005920, %v2_1000591c
  %v0_10005938 = load i32, i32* @r30, align 4
  %v2_10005938 = add i32 %v0_10005938, %v2_1000592c
  store i32 %v2_10005938, i32* @r28, align 4
  store i32 268458304, i32* @lr, align 4
  %v3_1000593c = call i32 @function_10005ffc(i8* %v2_100058e0, i32 %v2_1000592c)
  %v0_10005940 = load i32, i32* @r26, align 4
  %v1_10005940 = trunc i32 %v0_10005940 to i8
  %v2_10005940 = load i32, i32* @r28, align 4
  %v3_10005940 = add i32 %v2_10005940, 40
  %v4_10005940 = inttoptr i32 %v3_10005940 to i8*
  store i8 %v1_10005940, i8* %v4_10005940, align 1
  store i32 ptrtoint ([3 x i8]* @global_var_10005954.94 to i32), i32* @lr, align 4
  %v2_10005950 = call i32 @function_100092bc(i32 15, i32 %v2_1000589c)
  store i32 268458332, i32* @lr, align 4
  %v1_10005958 = call i32 @function_100082a8(i32 5)
  %v3_10005964 = call i32 @function_100081f4(i32 5, i32* nonnull %stack_var_-1620)
  %v3_10005968 = load i32, i32* %stack_var_-1620, align 4
  store i32 268458360, i32* @lr, align 4
  %v3_10005974 = call i32 @function_1000952c(i32 1, i32 %v3_10005964, i32 %v3_10005968)
  store i32 ptrtoint ([3 x i8]* @global_var_1000598c.96 to i32), i32* @lr, align 4
  %v3_10005988 = call i32 @function_1000952c(i32 1, i32 ptrtoint (i32* @global_var_1000bb00.95 to i32), i32 1)
  store i32 268458388, i32* @lr, align 4
  %v1_10005990 = call i32 @function_1000821c(i32 5)
  store i32 268458392, i32* @lr, align 4
  %v1_10005994 = call i32 @function_1000072c(i32 %v1_10005990)
  store i32 268458396, i32* @lr, align 4
  %v1_10005998 = call i32 @function_10004b18(i32 %v1_10005994)
  store i32 ptrtoint (i32* @global_var_100059a0.97 to i32), i32* @lr, align 4
  %v1_1000599c = call i32 @function_1000569c(i32 %v1_10005998)
  store i32 268458404, i32* @lr, align 4
  %v0_100059a0 = call i32 @function_10009114()
  %tmp48 = icmp slt i32 %v0_100059a0, 1
  br i1 %tmp48, label %dec_label_pc_10005a3c, label %dec_label_pc_100059ac

dec_label_pc_100059ac:                            ; preds = %dec_label_pc_10005898
  store i32 %v0_10005794, i32* %r0.global-to-local, align 4
  store i32 %v0_100057e0, i32* @r15, align 4
  store i32 %v0_100057e4, i32* %r16.global-to-local, align 4
  store i32 %v0_100057e8, i32* %r17.global-to-local, align 4
  store i32 %v0_100057ec, i32* %r18.global-to-local, align 4
  store i32 %v0_100057f0, i32* %r19.global-to-local, align 4
  store i32 %v0_100057f4, i32* @r20, align 4
  store i32 %v0_100057b4, i32* @r21, align 4
  store i32 %v0_100057c0, i32* @r22, align 4
  store i32 %v0_100057f8, i32* @r23, align 4
  store i32 %v0_100057c8, i32* @r24, align 4
  store i32 %v0_100057d0, i32* @r25, align 4
  store i32 %v0_10005800, i32* @r27, align 4
  store i32 %v0_100057a0, i32* @r28, align 4
  store i32 %v0_10005798, i32* @r29, align 4
  store i32 %v0_10005804, i32* @r30, align 4
  store i32 %v0_100057d8, i32* @r31, align 4
  ret i32 0

dec_label_pc_10005a04:                            ; preds = %dec_label_pc_10005778
  %v0_10005a04 = load i32, i32* @r31, align 4
  %v1_10005a04 = add i32 %v0_10005a04, 4
  %v2_10005a04 = inttoptr i32 %v1_10005a04 to i32*
  %v3_10005a04 = load i32, i32* %v2_10005a04, align 4
  store i32 268458508, i32* @lr, align 4
  %v1_10005a08 = inttoptr i32 %v3_10005a04 to i8*
  %v2_10005a08 = call i32 @function_1000890c(i8* %v1_10005a08)
  %v2_10005a0c = icmp sgt i32 %v2_10005a08, 31
  br i1 %v2_10005a0c, label %dec_label_pc_10005898, label %dec_label_pc_10005a14

dec_label_pc_10005a14:                            ; preds = %dec_label_pc_10005a04
  %v0_10005a14 = load i32, i32* @r31, align 4
  %v1_10005a14 = add i32 %v0_10005a14, 4
  %v2_10005a14 = inttoptr i32 %v1_10005a14 to i32*
  %v3_10005a14 = load i32, i32* %v2_10005a14, align 4
  store i32 %v2_100057cc, i32* @r3, align 4
  %v2_10005a1c = bitcast i32* %stack_var_-1552 to i8*
  %v3_10005a1c = call i32 @function_10008934(i8* %v2_10005a1c, i32 %v3_10005a14)
  %v0_10005a20 = load i32, i32* @r31, align 4
  %v1_10005a20 = add i32 %v0_10005a20, 4
  %v2_10005a20 = inttoptr i32 %v1_10005a20 to i32*
  %v3_10005a20 = load i32, i32* %v2_10005a20, align 4
  store i32 %v3_10005a20, i32* %r29.global-to-local, align 4
  store i32 268458540, i32* @lr, align 4
  %v1_10005a28 = inttoptr i32 %v3_10005a20 to i8*
  %v2_10005a28 = call i32 @function_1000890c(i8* %v1_10005a28)
  store i32 %v2_10005a28, i32* @r4, align 4
  store i32 %v3_10005a20, i32* @r3, align 4
  store i32 268458552, i32* @lr, align 4
  %v0_10005a34 = call i32 @function_100089b4()
  br label %dec_label_pc_10005898

dec_label_pc_10005a3c:                            ; preds = %dec_label_pc_10005898
  store i32 ptrtoint ([3 x i8]* @global_var_10005a40.98 to i32), i32* @lr, align 4
  %v1_10005a3c = call i32 @function_100093dc(i32 %v0_100059a0)
  store i32 0, i32* %r19.global-to-local, align 4
  store i32 %v1_10005a3c, i32* %r17.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005a50.99 to i32), i32* @lr, align 4
  %v0_10005a4c = call i32 @function_100090cc()
  store i32 ptrtoint ([3 x i8]* @global_var_10005a58.100 to i32), i32* @lr, align 4
  %v0_10005a54 = call i32 @function_100090cc()
  store i32 268458592, i32* @lr, align 4
  %v0_10005a5c = call i32 @function_100090cc()
  %v2_10005a60 = ptrtoint i32* %stack_var_-1392 to i32
  store i32 %v2_10005a60, i32* @r28, align 4
  store i32 268458600, i32* @lr, align 4
  %v1_10005a64 = call i32 @function_1000072c(i32 %v0_10005a5c)
  %v2_10005a68 = ptrtoint i32* %stack_var_-1264 to i32
  store i32 %v2_10005a68, i32* @r29, align 4
  store i32 268458608, i32* @lr, align 4
  %v1_10005a6c = call i32 @function_10004b18(i32 %v1_10005a64)
  store i32 268566528, i32* @r20, align 4
  store i32 268458616, i32* @lr, align 4
  %v1_10005a74 = call i32 @function_1000569c(i32 %v1_10005a6c)
  store i32 268566528, i32* @r26, align 4
  store i32 268458624, i32* @lr, align 4
  %v1_10005a7c = call i32 @function_10006a40(i32 %v1_10005a74)
  store i32 268566528, i32* %r18.global-to-local, align 4
  %v2_10005a84 = ptrtoint i32* %stack_var_-1608 to i32
  %v2_10005a88 = ptrtoint i32* %stack_var_-1616 to i32
  store i32 %v2_10005a88, i32* %r16.global-to-local, align 4
  %v2_10005ec0 = ptrtoint i32* %stack_var_-1136 to i32
  %v2_10005d80 = ptrtoint i32* %stack_var_-1612 to i32
  %v1_10005e18 = bitcast i32* %stack_var_-1552 to i8*
  %v2_10005ddc = ptrtoint i32* %stack_var_-1600 to i32
  br label %dec_label_pc_10005a8c

dec_label_pc_10005a8c:                            ; preds = %dec_label_pc_10005ee4, %dec_label_pc_10005e80, %dec_label_pc_10005e74, %dec_label_pc_10005e14, %dec_label_pc_10005c64, %dec_label_pc_10005c54, %dec_label_pc_10005b44, %dec_label_pc_10005f24, %dec_label_pc_10005f18, %dec_label_pc_10005e98, %dec_label_pc_10005e60, %dec_label_pc_10005d9c, %dec_label_pc_10005cc8, %dec_label_pc_10005c18, %dec_label_pc_10005a3c
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10005a9c50 = load i32, i32* @r28, align 4
  %v4_10005a9c52 = inttoptr i32 %v2_10005a9c50 to i32*
  store i32 0, i32* %v4_10005a9c52, align 4
  %v0_10005aa053 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005aa054 = add i32 %v0_10005aa053, 4
  store i32 %v1_10005aa054, i32* %r9.global-to-local, align 4
  %v0_10005aa455 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10005aa456 = add i32 %v0_10005aa455, -1
  store i32 %v1_10005aa456, i32* %ctr.global-to-local, align 4
  %v2_10005aa457 = icmp eq i32 %v1_10005aa456, 0
  br i1 %v2_10005aa457, label %dec_label_pc_10005aa8, label %dec_label_pc_10005a9c.dec_label_pc_10005a9c_crit_edge

dec_label_pc_10005a9c.dec_label_pc_10005a9c_crit_edge: ; preds = %dec_label_pc_10005a8c, %dec_label_pc_10005a9c.dec_label_pc_10005a9c_crit_edge
  %v1_10005aa058 = phi i32 [ %v1_10005aa0, %dec_label_pc_10005a9c.dec_label_pc_10005a9c_crit_edge ], [ %v1_10005aa054, %dec_label_pc_10005a8c ]
  %v0_10005a9c.pre = load i32, i32* %r0.global-to-local, align 4
  %v2_10005a9c = load i32, i32* @r28, align 4
  %v3_10005a9c = add i32 %v2_10005a9c, %v1_10005aa058
  %v4_10005a9c = inttoptr i32 %v3_10005a9c to i32*
  store i32 %v0_10005a9c.pre, i32* %v4_10005a9c, align 4
  %v0_10005aa0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005aa0 = add i32 %v0_10005aa0, 4
  store i32 %v1_10005aa0, i32* %r9.global-to-local, align 4
  %v0_10005aa4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10005aa4 = add i32 %v0_10005aa4, -1
  store i32 %v1_10005aa4, i32* %ctr.global-to-local, align 4
  %v2_10005aa4 = icmp eq i32 %v1_10005aa4, 0
  br i1 %v2_10005aa4, label %dec_label_pc_10005aa8, label %dec_label_pc_10005a9c.dec_label_pc_10005a9c_crit_edge

dec_label_pc_10005aa8:                            ; preds = %dec_label_pc_10005a9c.dec_label_pc_10005a9c_crit_edge, %dec_label_pc_10005a8c
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10005ab859 = load i32, i32* @r29, align 4
  %v4_10005ab861 = inttoptr i32 %v2_10005ab859 to i32*
  store i32 0, i32* %v4_10005ab861, align 4
  %v0_10005abc62 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005abc63 = add i32 %v0_10005abc62, 4
  store i32 %v1_10005abc63, i32* %r9.global-to-local, align 4
  %v0_10005ac064 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10005ac065 = add i32 %v0_10005ac064, -1
  store i32 %v1_10005ac065, i32* %ctr.global-to-local, align 4
  %v2_10005ac066 = icmp eq i32 %v1_10005ac065, 0
  br i1 %v2_10005ac066, label %dec_label_pc_10005ac4, label %dec_label_pc_10005ab8.dec_label_pc_10005ab8_crit_edge

dec_label_pc_10005ab8.dec_label_pc_10005ab8_crit_edge: ; preds = %dec_label_pc_10005aa8, %dec_label_pc_10005ab8.dec_label_pc_10005ab8_crit_edge
  %v1_10005abc67 = phi i32 [ %v1_10005abc, %dec_label_pc_10005ab8.dec_label_pc_10005ab8_crit_edge ], [ %v1_10005abc63, %dec_label_pc_10005aa8 ]
  %v0_10005ab8.pre = load i32, i32* %r0.global-to-local, align 4
  %v2_10005ab8 = load i32, i32* @r29, align 4
  %v3_10005ab8 = add i32 %v2_10005ab8, %v1_10005abc67
  %v4_10005ab8 = inttoptr i32 %v3_10005ab8 to i32*
  store i32 %v0_10005ab8.pre, i32* %v4_10005ab8, align 4
  %v0_10005abc = load i32, i32* %r9.global-to-local, align 4
  %v1_10005abc = add i32 %v0_10005abc, 4
  store i32 %v1_10005abc, i32* %r9.global-to-local, align 4
  %v0_10005ac0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10005ac0 = add i32 %v0_10005ac0, -1
  store i32 %v1_10005ac0, i32* %ctr.global-to-local, align 4
  %v2_10005ac0 = icmp eq i32 %v1_10005ac0, 0
  br i1 %v2_10005ac0, label %dec_label_pc_10005ac4, label %dec_label_pc_10005ab8.dec_label_pc_10005ab8_crit_edge

dec_label_pc_10005ac4:                            ; preds = %dec_label_pc_10005ab8.dec_label_pc_10005ab8_crit_edge, %dec_label_pc_10005aa8
  %v3_10005ac4 = load i32, i32* @global_var_1001c230.75, align 4
  %v3_10005ac8 = icmp eq i32 %v3_10005ac4, -1
  br i1 %v3_10005ac8, label %dec_label_pc_10005af0, label %dec_label_pc_10005ad0

dec_label_pc_10005ad0:                            ; preds = %dec_label_pc_10005ac4
  %v1_10005ad0 = call i32 @__asm_rlwinm(i32 %v3_10005ac4, i32 29, i32 3, i32 29)
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10005ad8 = load i32, i32* @r30, align 4
  %v2_10005ad8 = add i32 %v1_10005ad8, %v1_10005ad0
  %v1_10005adc = urem i32 %v3_10005ac4, 32
  %v1_10005ae0 = add i32 %v2_10005ad8, 232
  %v2_10005ae0 = inttoptr i32 %v1_10005ae0 to i32*
  %v3_10005ae0 = load i32, i32* %v2_10005ae0, align 4
  %v3_10005ae4 = shl i32 1, %v1_10005adc
  store i32 %v3_10005ae4, i32* %r0.global-to-local, align 4
  %v2_10005ae8 = or i32 %v3_10005ae0, %v3_10005ae4
  store i32 %v2_10005ae8, i32* %r9.global-to-local, align 4
  store i32 %v2_10005ae8, i32* %v2_10005ae0, align 4
  br label %dec_label_pc_10005af0

dec_label_pc_10005af0:                            ; preds = %dec_label_pc_10005ac4, %dec_label_pc_10005ad0
  %v3_10005af0 = load i32, i32* @global_var_1001c234.101, align 4
  store i32 %v3_10005af0, i32* %r0.global-to-local, align 4
  %v3_10005af8 = icmp eq i32 %v3_10005af0, -1
  br i1 %v3_10005af8, label %dec_label_pc_10005cdc, label %dec_label_pc_10005b00

dec_label_pc_10005b00:                            ; preds = %dec_label_pc_10005cdc, %dec_label_pc_10005af0, %dec_label_pc_10005d34
  %v3_10005c2c = phi i32 [ -1, %dec_label_pc_10005cdc ], [ %v3_10005af0, %dec_label_pc_10005af0 ], [ %v3_10005c2c.pre, %dec_label_pc_10005d34 ]
  %v3_10005b00 = load i8, i8* bitcast (i16* @global_var_1001c26c.102 to i8*), align 2
  %v3_10005b04 = icmp eq i8 %v3_10005b00, 0
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10005c34 = call i32 @__asm_rlwinm(i32 %v3_10005c2c, i32 29, i32 3, i32 29)
  %v1_10005c38 = urem i32 %v3_10005c2c, 32
  %v1_10005c3c = load i32, i32* @r30, align 4
  %v2_10005c3c = add i32 %v1_10005c3c, %v1_10005c34
  %v0_10005c40 = load i32, i32* %r0.global-to-local, align 4
  %v3_10005c40 = shl i32 %v0_10005c40, %v1_10005c38
  store i32 %v3_10005c40, i32* %r0.global-to-local, align 4
  br i1 %v3_10005b04, label %dec_label_pc_10005c2c, label %dec_label_pc_10005b0c

dec_label_pc_10005b0c:                            ; preds = %dec_label_pc_10005b00
  %v1_10005b24 = add i32 %v2_10005c3c, 360
  %v2_10005b24 = inttoptr i32 %v1_10005b24 to i32*
  %v3_10005b24 = load i32, i32* %v2_10005b24, align 4
  %v2_10005b28 = or i32 %v3_10005b24, %v3_10005c40
  store i32 %v2_10005b28, i32* %r9.global-to-local, align 4
  store i32 %v2_10005b28, i32* %v2_10005b24, align 4
  br label %dec_label_pc_10005b30

dec_label_pc_10005b30:                            ; preds = %dec_label_pc_10005c2c, %dec_label_pc_10005b0c
  %v3_10005b30 = load i32, i32* @global_var_1001c234.101, align 4
  store i32 %v3_10005b30, i32* %r0.global-to-local, align 4
  %v3_10005b34 = load i32, i32* @global_var_1001c230.75, align 4
  %v2_10005b38 = icmp slt i32 %v3_10005b34, %v3_10005b30
  br i1 %v2_10005b38, label %dec_label_pc_10005b40, label %dec_label_pc_10005b44

dec_label_pc_10005b40:                            ; preds = %dec_label_pc_10005b30
  br label %dec_label_pc_10005b44

dec_label_pc_10005b44:                            ; preds = %dec_label_pc_10005b30, %dec_label_pc_10005b40
  %v0_10005b4c = phi i32 [ %v3_10005b34, %dec_label_pc_10005b30 ], [ %v3_10005b30, %dec_label_pc_10005b40 ]
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r9.global-to-local, align 4
  %v1_10005b4c = add i32 %v0_10005b4c, 1
  store i32 10, i32* %stack_var_-1608, align 4
  store i32 268458860, i32* @lr, align 4
  %v5_10005b68 = call i32 @function_10009394(i32 %v1_10005b4c, i32 %v2_10005a60, i32 %v2_10005a68, i32 0, i32 %v2_10005a84)
  %v6_10005b68 = trunc i32 %v5_10005b68 to i16
  %v4_10005b6c = icmp eq i16 %v6_10005b68, -1
  br i1 %v4_10005b6c, label %dec_label_pc_10005a8c, label %dec_label_pc_10005b74

dec_label_pc_10005b74:                            ; preds = %dec_label_pc_10005b44
  %v4_10005b74 = icmp eq i16 %v6_10005b68, 0
  br i1 %v4_10005b74, label %dec_label_pc_10005b7c, label %dec_label_pc_10005ba8

dec_label_pc_10005b7c:                            ; preds = %dec_label_pc_10005b74
  %v0_10005b80 = load i32, i32* %r19.global-to-local, align 4
  store i16 0, i16* %stack_var_-1624, align 2
  %v2_10005b90 = srem i32 %v0_10005b80, 6
  %v1_10005b94 = sub i32 %v0_10005b80, %v2_10005b90
  store i32 %v1_10005b94, i32* %r9.global-to-local, align 4
  store i32 %v2_10005b90, i32* %r0.global-to-local, align 4
  %v1_10005b9c = add i32 %v0_10005b80, 1
  store i32 %v1_10005b9c, i32* %r19.global-to-local, align 4
  %v3_10005ba0 = icmp eq i32 %v2_10005b90, 0
  br i1 %v3_10005ba0, label %dec_label_pc_10005d50, label %dec_label_pc_10005ba8

dec_label_pc_10005ba8:                            ; preds = %dec_label_pc_10005b74, %dec_label_pc_10005b7c, %dec_label_pc_10005d50
  %v3_10005ba8 = load i32, i32* @global_var_1001c230.75, align 4
  %v3_10005bac = icmp eq i32 %v3_10005ba8, -1
  br i1 %v3_10005bac, label %dec_label_pc_10005bd0, label %dec_label_pc_10005bb4

dec_label_pc_10005bb4:                            ; preds = %dec_label_pc_10005ba8
  %v1_10005bb4 = call i32 @__asm_rlwinm(i32 %v3_10005ba8, i32 29, i32 3, i32 29)
  %v1_10005bb8 = urem i32 %v3_10005ba8, 32
  %v1_10005bbc = load i32, i32* @r30, align 4
  %v2_10005bbc = add i32 %v1_10005bbc, %v1_10005bb4
  store i32 %v2_10005bbc, i32* %r9.global-to-local, align 4
  %v1_10005bc0 = add i32 %v2_10005bbc, 232
  %v2_10005bc0 = inttoptr i32 %v1_10005bc0 to i32*
  %v3_10005bc0 = load i32, i32* %v2_10005bc0, align 4
  %v3_10005bc4 = lshr i32 %v3_10005bc0, %v1_10005bb8
  store i32 %v3_10005bc4, i32* %r0.global-to-local, align 4
  %v1_10005bc8 = urem i32 %v3_10005bc4, 2
  store i32 %v1_10005bc8, i32* %r9.global-to-local, align 4
  %v3_10005bc8 = icmp eq i32 %v1_10005bc8, 0
  br i1 %v3_10005bc8, label %dec_label_pc_10005bd0, label %dec_label_pc_10005dd4

dec_label_pc_10005bd0:                            ; preds = %dec_label_pc_10005bb4, %dec_label_pc_10005ba8
  %v3_10005bd0 = load i8, i8* bitcast (i16* @global_var_1001c26c.102 to i8*), align 2
  %v4_10005bd0 = zext i8 %v3_10005bd0 to i32
  store i32 %v4_10005bd0, i32* @r31, align 4
  %v3_10005bd4 = icmp eq i8 %v3_10005bd0, 0
  %v3_10005c54 = load i32, i32* @global_var_1001c234.101, align 4
  br i1 %v3_10005bd4, label %dec_label_pc_10005c54, label %dec_label_pc_10005bdc

dec_label_pc_10005bdc:                            ; preds = %dec_label_pc_10005bd0
  store i32 268566528, i32* @r31, align 4
  %v1_10005be4 = call i32 @__asm_rlwinm(i32 %v3_10005c54, i32 29, i32 3, i32 29)
  %v1_10005be8 = urem i32 %v3_10005c54, 32
  %v1_10005bec = load i32, i32* @r30, align 4
  %v2_10005bec = add i32 %v1_10005bec, %v1_10005be4
  store i32 %v2_10005bec, i32* %r9.global-to-local, align 4
  %v1_10005bf0 = add i32 %v2_10005bec, 360
  %v2_10005bf0 = inttoptr i32 %v1_10005bf0 to i32*
  %v3_10005bf0 = load i32, i32* %v2_10005bf0, align 4
  %v3_10005bf4 = lshr i32 %v3_10005bf0, %v1_10005be8
  store i32 %v3_10005bf4, i32* %r0.global-to-local, align 4
  %v1_10005bfc = urem i32 %v3_10005bf4, 2
  %v3_10005bfc = icmp eq i32 %v1_10005bfc, 0
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i8 0, i8* bitcast (i16* @global_var_1001c26c.102 to i8*), align 2
  br i1 %v3_10005bfc, label %dec_label_pc_10005c0c, label %dec_label_pc_10005d6c

dec_label_pc_10005c0c:                            ; preds = %dec_label_pc_10005bdc
  %v3_10005c0c = icmp eq i32 %v3_10005c54, -1
  br i1 %v3_10005c0c, label %dec_label_pc_10005c18, label %dec_label_pc_10005c14

dec_label_pc_10005c14:                            ; preds = %dec_label_pc_10005c0c
  store i32 ptrtoint (i32* @global_var_10005c18.103 to i32), i32* @lr, align 4
  %v0_10005c14 = call i32 @function_100090cc()
  br label %dec_label_pc_10005c18

dec_label_pc_10005c18:                            ; preds = %dec_label_pc_10005c0c, %dec_label_pc_10005c14
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @global_var_1001c234.101, align 4
  store i32 268459048, i32* @lr, align 4
  %v1_10005c24 = call i32 @function_1000a914(i32 1)
  br label %dec_label_pc_10005a8c

dec_label_pc_10005c2c:                            ; preds = %dec_label_pc_10005b00
  %v1_10005c44 = add i32 %v2_10005c3c, 232
  %v2_10005c44 = inttoptr i32 %v1_10005c44 to i32*
  %v3_10005c44 = load i32, i32* %v2_10005c44, align 4
  %v2_10005c48 = or i32 %v3_10005c44, %v3_10005c40
  store i32 %v2_10005c48, i32* %r9.global-to-local, align 4
  store i32 %v2_10005c48, i32* %v2_10005c44, align 4
  br label %dec_label_pc_10005b30

dec_label_pc_10005c54:                            ; preds = %dec_label_pc_10005bd0
  store i32 268566528, i32* @r27, align 4
  %v3_10005c5c = icmp eq i32 %v3_10005c54, -1
  br i1 %v3_10005c5c, label %dec_label_pc_10005a8c, label %dec_label_pc_10005c64

dec_label_pc_10005c64:                            ; preds = %dec_label_pc_10005c54
  %v1_10005c64 = call i32 @__asm_rlwinm(i32 %v3_10005c54, i32 29, i32 3, i32 29)
  %v1_10005c68 = urem i32 %v3_10005c54, 32
  %v1_10005c6c = load i32, i32* @r30, align 4
  %v2_10005c6c = add i32 %v1_10005c6c, %v1_10005c64
  store i32 %v2_10005c6c, i32* %r9.global-to-local, align 4
  %v1_10005c70 = add i32 %v2_10005c6c, 232
  %v2_10005c70 = inttoptr i32 %v1_10005c70 to i32*
  %v3_10005c70 = load i32, i32* %v2_10005c70, align 4
  %v3_10005c74 = lshr i32 %v3_10005c70, %v1_10005c68
  store i32 %v3_10005c74, i32* %r0.global-to-local, align 4
  %v1_10005c78 = urem i32 %v3_10005c74, 2
  store i32 %v1_10005c78, i32* %r9.global-to-local, align 4
  %v3_10005c78 = icmp eq i32 %v1_10005c78, 0
  br i1 %v3_10005c78, label %dec_label_pc_10005a8c, label %dec_label_pc_10005c80

dec_label_pc_10005c80:                            ; preds = %dec_label_pc_10005c64
  %v0_10005c80 = load i32, i32* @r31, align 4
  %v6_10005c80 = trunc i32 %v0_10005c80 to i16
  store i16 %v6_10005c80, i16* %stack_var_-1624, align 2
  %v0_10005c84 = call i32 @function_100097e8()
  %v0_10005c88 = load i32, i32* @r31, align 4
  %v2_10005c88 = inttoptr i32 %v0_10005c84 to i32*
  store i32 %v0_10005c88, i32* %v2_10005c88, align 4
  store i32 %v0_10005c84, i32* @r23, align 4
  %v3_10005c98 = load i32, i32* @global_var_1001c234.101, align 4
  store i32 268459172, i32* @lr, align 4
  %v4_10005ca0 = call i32 @function_10009cf0(i32 %v3_10005c98, i32 %v2_100058a8, i32 2, i32 16386)
  %v3_10005ca4 = icmp eq i32 %v4_10005ca0, -1
  br i1 %v3_10005ca4, label %dec_label_pc_10005e74, label %dec_label_pc_10005cac

dec_label_pc_10005cac:                            ; preds = %dec_label_pc_10005c80
  %v3_10005cac = icmp eq i32 %v4_10005ca0, 0
  br i1 %v3_10005cac, label %dec_label_pc_10005e88, label %dec_label_pc_10005cb4

dec_label_pc_10005cb4:                            ; preds = %dec_label_pc_10005cac
  %v3_10005cb4 = load i16, i16* %stack_var_-1624, align 2
  %v4_10005cb4 = sext i16 %v3_10005cb4 to i32
  %v4_10005cb8 = icmp eq i16 %v3_10005cb4, 0
  br i1 %v4_10005cb8, label %dec_label_pc_10005f24, label %dec_label_pc_10005cc0

dec_label_pc_10005cc0:                            ; preds = %dec_label_pc_10005cb4
  %tmp49 = icmp ult i16 %v3_10005cb4, 1025
  br i1 %tmp49, label %dec_label_pc_10005ebc, label %dec_label_pc_10005cc8

dec_label_pc_10005cc8:                            ; preds = %dec_label_pc_10005cc0
  store i32 ptrtoint (i32* @global_var_10005cd0.104 to i32), i32* @lr, align 4
  %v0_10005ccc = call i32 @function_100090cc()
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @global_var_1001c234.101, align 4
  br label %dec_label_pc_10005a8c

dec_label_pc_10005cdc:                            ; preds = %dec_label_pc_10005af0
  store i32 268459244, i32* @lr, align 4
  %v3_10005ce8 = call i32 @function_10009e1c(i32 2, i32 1, i32 0)
  %v3_10005cec = icmp eq i32 %v3_10005ce8, -1
  store i32 %v3_10005ce8, i32* @r31, align 4
  store i32 %v3_10005ce8, i32* @global_var_1001c234.101, align 4
  br i1 %v3_10005cec, label %dec_label_pc_10005b00, label %dec_label_pc_10005cfc

dec_label_pc_10005cfc:                            ; preds = %dec_label_pc_10005cdc
  store i32 3, i32* @r4, align 4
  store i32 268459276, i32* @lr, align 4
  %v1_10005d08 = call i32 @function_10008fe4(i32 3)
  store i32 4, i32* @r4, align 4
  %v0_10005d14 = load i32, i32* @r31, align 4
  store i32 268459296, i32* @lr, align 4
  %v2_10005d1c = call i32 @function_10008fe4(i32 %v0_10005d14)
  %v3_10005d20 = load i32, i32* @global_var_1001c238.74, align 4
  store i32 %v3_10005d20, i32* %r0.global-to-local, align 4
  %v3_10005d24 = icmp eq i32 %v3_10005d20, 0
  br i1 %v3_10005d24, label %dec_label_pc_10005d34, label %dec_label_pc_10005d2c

dec_label_pc_10005d2c:                            ; preds = %dec_label_pc_10005cfc
  store i32 %v3_10005d20, i32* %ctr.global-to-local, align 4
  store i32 268459316, i32* @lr, align 4
  %v2_10005d30 = call i32 @function_10008c10(i32 %v2_10005d1c)
  br label %dec_label_pc_10005d34

dec_label_pc_10005d34:                            ; preds = %dec_label_pc_10005cfc, %dec_label_pc_10005d2c
  %v3_10005d34 = load i32, i32* @global_var_1001c234.101, align 4
  store i32 %v3_10005d34, i32* @r3, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i8 1, i8* bitcast (i16* @global_var_1001c26c.102 to i8*), align 2
  store i32 268459340, i32* @lr, align 4
  %v0_10005d48 = call i32 @function_10009c1c()
  %v3_10005c2c.pre = load i32, i32* @global_var_1001c234.101, align 4
  br label %dec_label_pc_10005b00

dec_label_pc_10005d50:                            ; preds = %dec_label_pc_10005b7c
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10005d58 = load i32, i32* @global_var_1001c234.101, align 4
  store i32 268459368, i32* @lr, align 4
  %v4_10005d64 = call i32 @function_10009d68(i32 %v3_10005d58, i32 %v2_100058a8, i32 2, i32 16384)
  br label %dec_label_pc_10005ba8

dec_label_pc_10005d6c:                            ; preds = %dec_label_pc_10005bdc
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-1616, align 4
  store i32 4, i32* %stack_var_-1612, align 4
  store i32 268459408, i32* @lr, align 4
  %v5_10005d8c = call i32 @function_10009c84(i32 1, i32 4, i32 %v2_10005a88, i32 %v2_10005d80, i32 4)
  %v3_10005d90 = load i32, i32* %stack_var_-1616, align 4
  store i32 %v3_10005d90, i32* %r0.global-to-local, align 4
  %v3_10005d94 = icmp eq i32 %v3_10005d90, 0
  br i1 %v3_10005d94, label %dec_label_pc_10005e14, label %dec_label_pc_10005d9c

dec_label_pc_10005d9c:                            ; preds = %dec_label_pc_10005d6c
  store i32 ptrtoint (i32* @global_var_10005da4.105 to i32), i32* @lr, align 4
  %v0_10005da0 = call i32 @function_100090cc()
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @global_var_1001c234.101, align 4
  %v0_10005dac = call i32 @function_10005f3c()
  %v1_10005dac = sext i32 %v0_10005dac to i64
  %v5_10005db8 = mul nuw nsw i64 %v1_10005dac, 3435973837
  %v1_10005dbc2 = udiv i64 %v5_10005db8, 34359738368
  %v1_10005dbc = trunc i64 %v1_10005dbc2 to i32
  %v1_10005dc0 = mul i32 %v1_10005dbc, 10
  store i32 %v1_10005dc0, i32* %r0.global-to-local, align 4
  %v3_10005dc4 = sub i32 %v0_10005dac, %v1_10005dc0
  %v1_10005dc8 = add i32 %v3_10005dc4, 1
  store i32 268459472, i32* @lr, align 4
  %v1_10005dcc = call i32 @function_1000a914(i32 %v1_10005dc8)
  br label %dec_label_pc_10005a8c

dec_label_pc_10005dd4:                            ; preds = %dec_label_pc_10005bb4
  store i32 16, i32* %r0.global-to-local, align 4
  store i32 16, i32* %stack_var_-1616, align 4
  store i32 ptrtoint (i32* @global_var_10005de8.107 to i32), i32* @lr, align 4
  %v3_10005de4 = call i32 @function_10009bb4(i32 %v2_10005ddc, i32 %v2_10005a88, i32 %v1_10005bc8)
  store i32 268459500, i32* @lr, align 4
  %v1_10005de8 = call i32 @function_1000677c(i32 %v3_10005de4)
  store i32 ptrtoint ([3 x i8]* @global_var_10005df0.108 to i32), i32* @lr, align 4
  %v1_10005dec = call i32 @function_100044e8(i32 %v1_10005de8)
  %v0_10005df0 = load i32, i32* %r17.global-to-local, align 4
  %v1_10005df0 = sub i32 0, %v0_10005df0
  store i32 268459516, i32* @lr, align 4
  %v2_10005df8 = call i32 @function_100091ec(i32 %v1_10005df0, i32 9)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10005e00 = load i32, i32* @global_var_1001c268.85, align 4
  %v3_10005e04 = icmp eq i32 %v3_10005e00, 0
  br i1 %v3_10005e04, label %dec_label_pc_10005e0c, label %dec_label_pc_10005eb0

dec_label_pc_10005e0c:                            ; preds = %dec_label_pc_10005dd4, %dec_label_pc_10005eb0
  %v0_10005e10 = call i32 @function_1000a890()
  br label %dec_label_pc_10005e14

dec_label_pc_10005e14:                            ; preds = %dec_label_pc_10005d6c, %dec_label_pc_10005e0c
  store i32 268459548, i32* @lr, align 4
  %v2_10005e18 = call i32 @function_1000890c(i8* %v1_10005e18)
  %v3_10005e18 = trunc i32 %v2_10005e18 to i8
  %v7_10005e1c = sext i8 %v3_10005e18 to i16
  store i16 %v7_10005e1c, i16* %stack_var_-1624, align 2
  store i32 268459556, i32* @lr, align 4
  %v2_10005e20 = call i32 @function_10008c10(i32 %v2_10005e18)
  store i32 %v2_10005e20, i32* @global_var_1001c258.14, align 4
  %v0_10005e2c = load i32, i32* @r31, align 4
  %v1_10005e2c = add i32 %v0_10005e2c, -15820
  %v2_10005e2c = inttoptr i32 %v1_10005e2c to i32*
  %v3_10005e2c = load i32, i32* %v2_10005e2c, align 4
  store i32 268459584, i32* @lr, align 4
  %v4_10005e3c = call i32 @function_10009d68(i32 %v3_10005e2c, i32 ptrtoint (i32* @global_var_1000bb04.109 to i32), i32 4, i32 16384)
  %v0_10005e40 = load i32, i32* @r31, align 4
  %v1_10005e40 = add i32 %v0_10005e40, -15820
  %v2_10005e40 = inttoptr i32 %v1_10005e40 to i32*
  %v3_10005e40 = load i32, i32* %v2_10005e40, align 4
  store i32 268459604, i32* @lr, align 4
  %v4_10005e50 = call i32 @function_10009d68(i32 %v3_10005e40, i32 %v2_100058a8, i32 1, i32 16384)
  %v3_10005e54 = load i16, i16* %stack_var_-1624, align 2
  %v4_10005e58 = icmp eq i16 %v3_10005e54, 0
  br i1 %v4_10005e58, label %dec_label_pc_10005a8c, label %dec_label_pc_10005e60

dec_label_pc_10005e60:                            ; preds = %dec_label_pc_10005e14
  %v4_10005e54 = sext i16 %v3_10005e54 to i32
  %v0_10005e60 = load i32, i32* @r31, align 4
  %v1_10005e60 = add i32 %v0_10005e60, -15820
  %v2_10005e60 = inttoptr i32 %v1_10005e60 to i32*
  %v3_10005e60 = load i32, i32* %v2_10005e60, align 4
  store i32 268459632, i32* @lr, align 4
  %v5_10005e6c = call i32 @function_10009d68(i32 %v3_10005e60, i32 %v2_100057cc, i32 %v4_10005e54, i32 16384)
  br label %dec_label_pc_10005a8c

dec_label_pc_10005e74:                            ; preds = %dec_label_pc_10005ebc, %dec_label_pc_10005c80
  %v0_10005e74 = load i32, i32* @r23, align 4
  %v1_10005e74 = inttoptr i32 %v0_10005e74 to i32*
  %v2_10005e74 = load i32, i32* %v1_10005e74, align 4
  %v3_10005e78 = icmp eq i32 %v2_10005e74, 11
  br i1 %v3_10005e78, label %dec_label_pc_10005a8c, label %dec_label_pc_10005e80

dec_label_pc_10005e80:                            ; preds = %dec_label_pc_10005e74
  %v3_10005e80 = icmp eq i32 %v2_10005e74, 4
  br i1 %v3_10005e80, label %dec_label_pc_10005a8c, label %dec_label_pc_10005e88

dec_label_pc_10005e88:                            ; preds = %dec_label_pc_10005edc, %dec_label_pc_10005e80, %dec_label_pc_10005cac
  %v3_10005e88 = load i32, i32* @global_var_1001c234.101, align 4
  %v3_10005e8c = icmp eq i32 %v3_10005e88, -1
  br i1 %v3_10005e8c, label %dec_label_pc_10005e98, label %dec_label_pc_10005e94

dec_label_pc_10005e94:                            ; preds = %dec_label_pc_10005e88
  store i32 ptrtoint (i32* @global_var_10005e98.110 to i32), i32* @lr, align 4
  %v0_10005e94 = call i32 @function_100090cc()
  br label %dec_label_pc_10005e98

dec_label_pc_10005e98:                            ; preds = %dec_label_pc_10005e88, %dec_label_pc_10005e94
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 -1, i32* @global_var_1001c234.101, align 4
  store i32 268459692, i32* @lr, align 4
  %v1_10005ea8 = call i32 @function_1000a914(i32 1)
  br label %dec_label_pc_10005a8c

dec_label_pc_10005eb0:                            ; preds = %dec_label_pc_10005dd4
  store i32 268459704, i32* @lr, align 4
  %v2_10005eb4 = call i32 @function_100091ec(i32 %v3_10005e00, i32 9)
  br label %dec_label_pc_10005e0c

dec_label_pc_10005ebc:                            ; preds = %dec_label_pc_10005cc0
  %v0_10005ebc = load i32, i32* @r31, align 4
  %v1_10005ebc = load i32, i32* @r23, align 4
  %v2_10005ebc = inttoptr i32 %v1_10005ebc to i32*
  store i32 %v0_10005ebc, i32* %v2_10005ebc, align 4
  store i32 %v2_10005ec0, i32* @r31, align 4
  %v3_10005ecc = load i32, i32* @global_var_1001c234.101, align 4
  store i32 268459732, i32* @lr, align 4
  %v5_10005ed0 = call i32 @function_10009cf0(i32 %v3_10005ecc, i32 %v2_10005ec0, i32 %v4_10005cb4, i32 16386)
  %v3_10005ed4 = icmp eq i32 %v5_10005ed0, -1
  br i1 %v3_10005ed4, label %dec_label_pc_10005e74, label %dec_label_pc_10005edc

dec_label_pc_10005edc:                            ; preds = %dec_label_pc_10005ebc
  %v3_10005edc = icmp eq i32 %v5_10005ed0, 0
  br i1 %v3_10005edc, label %dec_label_pc_10005e88, label %dec_label_pc_10005ee4

dec_label_pc_10005ee4:                            ; preds = %dec_label_pc_10005edc
  %v3_10005ee4 = load i32, i32* @global_var_1001c234.101, align 4
  store i32 268459768, i32* @lr, align 4
  %v4_10005ef4 = call i32 @function_10009cf0(i32 %v3_10005ee4, i32 %v2_100058a8, i32 2, i32 16384)
  %v3_10005ef8 = load i32, i32* @global_var_1001c234.101, align 4
  %v3_10005efc = load i16, i16* %stack_var_-1624, align 2
  %v4_10005efc = sext i16 %v3_10005efc to i32
  store i32 268459788, i32* @lr, align 4
  %v5_10005f08 = call i32 @function_10009cf0(i32 %v3_10005ef8, i32 %v2_10005ec0, i32 %v4_10005efc, i32 16384)
  %v3_10005f0c = load i16, i16* %stack_var_-1624, align 2
  %v4_10005f10 = icmp eq i16 %v3_10005f0c, 0
  br i1 %v4_10005f10, label %dec_label_pc_10005a8c, label %dec_label_pc_10005f18

dec_label_pc_10005f18:                            ; preds = %dec_label_pc_10005ee4
  %v4_10005f0c = sext i16 %v3_10005f0c to i32
  store i32 268459808, i32* @lr, align 4
  %v3_10005f1c = call i32 @function_10000394(i32 %v2_10005ec0, i32 %v4_10005f0c)
  br label %dec_label_pc_10005a8c

dec_label_pc_10005f24:                            ; preds = %dec_label_pc_10005cb4
  %v3_10005f24 = load i32, i32* @global_var_1001c234.101, align 4
  store i32 268459832, i32* @lr, align 4
  %v4_10005f34 = call i32 @function_10009cf0(i32 %v3_10005f24, i32 %v2_100058a8, i32 2, i32 16384)
  br label %dec_label_pc_10005a8c

; uselistorder directives
  uselistorder i16 %v3_10005f0c, { 1, 0 }
  uselistorder i16 %v3_10005e54, { 1, 0 }
  uselistorder i32 %v3_10005ce8, { 1, 0, 2 }
  uselistorder i32 %v1_10005c78, { 1, 0 }
  uselistorder i32 %v3_10005c54, { 0, 2, 5, 3, 1, 4 }
  uselistorder i32 %v1_10005bc8, { 2, 1, 0 }
  uselistorder i32 %v2_10005b90, { 1, 0, 2 }
  uselistorder i32 %v0_10005b80, { 2, 0, 1 }
  uselistorder i32 %v2_10005c3c, { 1, 0 }
  uselistorder i32 %v1_10005ac0, { 1, 0 }
  uselistorder i32 %v1_10005abc, { 1, 0 }
  uselistorder i32 %v1_10005aa4, { 1, 0 }
  uselistorder i32 %v1_10005aa0, { 1, 0 }
  uselistorder i32 %v2_10005ec0, { 1, 2, 0, 3 }
  uselistorder i32 %v2_10005a88, { 1, 0, 2 }
  uselistorder i32 %v2_1000592c, { 1, 0 }
  uselistorder i32 %v2_100058d0, { 1, 0 }
  uselistorder i32 %v2_100058a8, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %v1_10005844, { 1, 0 }
  uselistorder i32 %v2_1000579c, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v2_10005768, { 1, 2, 0 }
  uselistorder i32 %v0_100056ac, { 3, 1, 0, 2 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-1552, { 1, 0, 2 }
  uselistorder i16* %stack_var_-1624, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %stack_var_-1620, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 16, 17, 19, 18, 14, 20, 21, 23, 22, 13, 24, 25, 26, 27, 12 }
  uselistorder i32* %r18.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32* %r16.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 14, 15, 16, 20, 21, 10, 11, 12, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 17, 18, 19 }
  uselistorder i32* %ctr.global-to-local, { 0, 4, 3, 2, 5, 6, 8, 7, 1, 9, 10 }
  uselistorder i8* bitcast (i16* @global_var_1001c26c.102 to i8*), { 3, 2, 1, 0 }
  uselistorder i32* @global_var_1001c234.101, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11, 12, 14, 13, 15, 16 }
  uselistorder i32 (i32)* @function_1000569c, { 1, 0 }
  uselistorder i32 (i32)* @function_10004b18, { 1, 0 }
  uselistorder i32 (i32)* @function_1000072c, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_1000952c, { 1, 0 }
  uselistorder i32 (i8*, i32)* @function_10008934, { 21, 22, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i32 (i8*, i32)* @function_10005ffc, { 1, 2, 0 }
  uselistorder i32 (i32, i32)* @function_10009ec8, { 1, 0 }
  uselistorder i32* @r24, { 1, 2, 3, 5, 6, 4, 7, 0, 8, 9, 10, 11, 12, 13 }
  uselistorder label %dec_label_pc_10005e98, { 1, 0 }
  uselistorder label %dec_label_pc_10005e14, { 1, 0 }
  uselistorder label %dec_label_pc_10005e0c, { 1, 0 }
  uselistorder label %dec_label_pc_10005d34, { 1, 0 }
  uselistorder label %dec_label_pc_10005c18, { 1, 0 }
  uselistorder label %dec_label_pc_10005ba8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10005b44, { 1, 0 }
  uselistorder label %dec_label_pc_10005b00, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10005af0, { 1, 0 }
  uselistorder label %dec_label_pc_10005ab8.dec_label_pc_10005ab8_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10005a9c.dec_label_pc_10005a9c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10005a8c, { 7, 8, 0, 9, 1, 2, 10, 3, 11, 12, 4, 5, 13, 6, 14 }
  uselistorder label %dec_label_pc_10005898, { 2, 0, 1 }
}

define i32 @function_10005f3c() local_unnamed_addr {
dec_label_pc_10005f3c:
  %v3_10005f44 = load i32, i32* @global_var_1001c2ec.111, align 4
  %v3_10005f4c = load i32, i32* @global_var_1001c2e0.112, align 4
  %v1_10005f54 = udiv i32 %v3_10005f44, 524288
  %v3_10005f58 = load i32, i32* @global_var_1001c2e8.113, align 4
  %v1_10005f5c = mul i32 %v3_10005f4c, 2048
  %v2_10005f60 = xor i32 %v1_10005f54, %v3_10005f44
  %v2_10005f64 = xor i32 %v1_10005f5c, %v3_10005f4c
  %v3_10005f68 = load i32, i32* @global_var_1001c2e4.114, align 4
  %v2_10005f6c = xor i32 %v2_10005f60, %v2_10005f64
  %v1_10005f70 = udiv i32 %v2_10005f64, 256
  %v2_10005f74 = xor i32 %v2_10005f6c, %v1_10005f70
  store i32 %v3_10005f68, i32* @global_var_1001c2e0.112, align 4
  store i32 %v3_10005f58, i32* @global_var_1001c2e4.114, align 4
  store i32 %v3_10005f44, i32* @global_var_1001c2e8.113, align 4
  store i32 %v2_10005f74, i32* @global_var_1001c2ec.111, align 4
  ret i32 %v2_10005f74

; uselistorder directives
  uselistorder i32 %v2_10005f74, { 1, 0 }
  uselistorder i32 %v3_10005f4c, { 1, 0 }
  uselistorder i32 %v3_10005f44, { 2, 1, 0 }
}

define i32 @function_10005f8c(i32 %arg1) local_unnamed_addr {
dec_label_pc_10005f8c:
  store i32 268459948, i32* @lr, align 4
  %v0_10005fa8 = call i32 @function_1000949c()
  store i32 %v0_10005fa8, i32* @global_var_1001c2e0.112, align 4
  store i32 268459960, i32* @lr, align 4
  %v0_10005fb4 = call i32 @function_1000915c()
  store i32 268459968, i32* @lr, align 4
  %v0_10005fbc = call i32 @function_100091a4()
  %v2_10005fc0 = xor i32 %v0_10005fb4, %v0_10005fbc
  store i32 %v2_10005fc0, i32* @global_var_1001c2e4.114, align 4
  store i32 268459980, i32* @lr, align 4
  %v1_10005fc8 = call i32 @function_100097f4(i32 %v0_10005fbc)
  %v3_10005fcc = load i32, i32* @global_var_1001c2e4.114, align 4
  %v2_10005fdc = xor i32 %v3_10005fcc, %v1_10005fc8
  store i32 %v2_10005fdc, i32* @global_var_1001c2ec.111, align 4
  store i32 %v1_10005fc8, i32* @global_var_1001c2e8.113, align 4
  ret i32 %v1_10005fc8

; uselistorder directives
  uselistorder i32 %v1_10005fc8, { 2, 1, 0 }
  uselistorder i32 %v0_10005fbc, { 1, 0 }
  uselistorder i32 ()* @function_100091a4, { 2, 1, 0 }
}

define i32 @function_10005ffc(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10005ffc:
  %r26.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-72 = alloca i32, align 4
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v2_10006018 = ptrtoint i32* %stack_var_-72 to i32
  store i32 268460092, i32* @lr, align 4
  %v1_10006038 = call i32 @function_100082a8(i32 33)
  %v3_10006044 = call i32 @function_100081f4(i32 33, i32* null)
  %v2_10006050 = inttoptr i32 %v3_10006044 to i8*
  %v3_10006050 = call i32 @function_10009960(i32 %v2_10006018, i8* %v2_10006050)
  %v3_10006054 = icmp eq i32 %arg2, 0
  br i1 %v3_10006054, label %dec_label_pc_100060d8, label %dec_label_pc_1000605c

dec_label_pc_1000605c:                            ; preds = %dec_label_pc_10005ffc
  %v1_1000605c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000605c = add i32 %v1_1000605c, %arg2
  store i32 %v2_1000605c, i32* %r26.global-to-local, align 4
  %v1_100060b0 = bitcast i32* %stack_var_-72 to i8*
  br label %dec_label_pc_10006070

dec_label_pc_10006070:                            ; preds = %dec_label_pc_10006070, %dec_label_pc_1000605c
  %v3_10006070 = load i32, i32* @global_var_1001c2ec.111, align 4
  %v3_10006078 = load i32, i32* @global_var_1001c2e0.112, align 4
  %v1_1000607c = udiv i32 %v3_10006070, 524288
  %v3_10006080 = load i32, i32* @global_var_1001c2e8.113, align 4
  %v1_10006084 = mul i32 %v3_10006078, 2048
  %v2_10006088 = xor i32 %v1_1000607c, %v3_10006070
  %v2_1000608c = xor i32 %v1_10006084, %v3_10006078
  %v3_10006090 = load i32, i32* @global_var_1001c2e4.114, align 4
  %v2_10006094 = xor i32 %v2_10006088, %v2_1000608c
  %v1_10006098 = udiv i32 %v2_1000608c, 256
  %v2_1000609c = xor i32 %v2_10006094, %v1_10006098
  store i32 %v2_1000609c, i32* %r29.global-to-local, align 4
  store i32 %v3_10006090, i32* @global_var_1001c2e0.112, align 4
  store i32 %v2_1000609c, i32* @global_var_1001c2ec.111, align 4
  store i32 %v3_10006080, i32* @global_var_1001c2e4.114, align 4
  store i32 %v3_10006070, i32* @global_var_1001c2e8.113, align 4
  store i32 268460212, i32* @lr, align 4
  %v2_100060b0 = call i32 @function_1000890c(i8* %v1_100060b0)
  %v0_100060b4 = load i32, i32* %r29.global-to-local, align 4
  %v2_100060b4 = urem i32 %v0_100060b4, %v2_100060b0
  store i32 %v2_100060b4, i32* %r29.global-to-local, align 4
  %v0_100060c0 = load i32, i32* @r1, align 4
  %v2_100060c0 = add i32 %v0_100060c0, %v2_100060b4
  %v1_100060c4 = add i32 %v2_100060c0, 8
  %v2_100060c4 = inttoptr i32 %v1_100060c4 to i8*
  %v3_100060c4 = load i8, i8* %v2_100060c4, align 1
  %v2_100060c8 = load i32, i32* %r31.global-to-local, align 4
  %v3_100060c8 = inttoptr i32 %v2_100060c8 to i8*
  store i8 %v3_100060c4, i8* %v3_100060c8, align 1
  %v0_100060cc = load i32, i32* %r31.global-to-local, align 4
  %v1_100060cc = add i32 %v0_100060cc, 1
  store i32 %v1_100060cc, i32* %r31.global-to-local, align 4
  %v1_100060d0 = load i32, i32* %r26.global-to-local, align 4
  %v4_100060d0 = icmp eq i32 %v1_100060cc, %v1_100060d0
  br i1 %v4_100060d0, label %dec_label_pc_100060d8, label %dec_label_pc_10006070

dec_label_pc_100060d8:                            ; preds = %dec_label_pc_10006070, %dec_label_pc_10005ffc
  store i32 268460256, i32* @lr, align 4
  %v1_100060dc = call i32 @function_1000821c(i32 33)
  ret i32 %v1_100060dc

; uselistorder directives
  uselistorder i32 %v3_10006078, { 1, 0 }
  uselistorder i32 %v3_10006070, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_1000821c, { 0, 3, 2, 1, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4 }
  uselistorder i32 (i32, i32*)* @function_100081f4, { 30, 28, 29, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder i32 (i32)* @function_100082a8, { 0, 1, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_10006110() local_unnamed_addr {
dec_label_pc_10006110:
  %r0.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %v0_10006110 = load i32, i32* @r4, align 4
  %tmp19 = icmp slt i32 %v0_10006110, 1
  br i1 %tmp19, label %dec_label_pc_10006110.dec_label_pc_100061c4_crit_edge, label %dec_label_pc_10006128

dec_label_pc_10006110.dec_label_pc_100061c4_crit_edge: ; preds = %dec_label_pc_10006110
  %v0_100061d4.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_100061c4

dec_label_pc_10006128:                            ; preds = %dec_label_pc_10006110
  %v3_10006138 = load i32, i32* @global_var_1001c2ec.111, align 4
  store i32 %v3_10006138, i32* %r7.global-to-local, align 4
  %v3_1000613c = load i32, i32* @global_var_1001c2e8.113, align 4
  store i32 %v3_1000613c, i32* %r5.global-to-local, align 4
  %v3_10006140 = load i32, i32* @global_var_1001c2e4.114, align 4
  store i32 %v3_10006140, i32* %r6.global-to-local, align 4
  %v3_10006144 = load i32, i32* @global_var_1001c2e0.112, align 4
  br label %dec_label_pc_10006170

dec_label_pc_1000614c:                            ; preds = %dec_label_pc_10006170
  %v1_1000614c = load i32, i32* @r3, align 4
  %v2_1000614c = inttoptr i32 %v1_1000614c to i32*
  store i32 %v2_10006194, i32* %v2_1000614c, align 4
  %v0_10006150 = load i32, i32* @r4, align 4
  %v1_10006150 = add i32 %v0_10006150, -4
  store i32 %v1_10006150, i32* @r4, align 4
  %v0_10006154 = load i32, i32* @r3, align 4
  %v1_10006154 = add i32 %v0_10006154, 4
  br label %dec_label_pc_10006158

dec_label_pc_10006158:                            ; preds = %dec_label_pc_100061a8, %dec_label_pc_1000614c
  %v0_10006158 = phi i32 [ %v0_10006158.pr, %dec_label_pc_100061a8 ], [ %v1_10006150, %dec_label_pc_1000614c ]
  %storemerge = phi i32 [ %v1_100061ac, %dec_label_pc_100061a8 ], [ %v1_10006154, %dec_label_pc_1000614c ]
  store i32 %storemerge, i32* @r3, align 4
  %v0_1000615c = load i32, i32* %r6.global-to-local, align 4
  %tmp20 = icmp slt i32 %v0_10006158, 1
  br i1 %tmp20, label %dec_label_pc_100061b4, label %dec_label_pc_10006164

dec_label_pc_10006164:                            ; preds = %dec_label_pc_10006158
  %v0_10006164 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10006164, i32* %r6.global-to-local, align 4
  %v0_10006168 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_10006168, i32* %r5.global-to-local, align 4
  %v0_1000616c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1000616c, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10006170

dec_label_pc_10006170:                            ; preds = %dec_label_pc_10006128, %dec_label_pc_10006164
  %v0_10006210 = phi i32 [ %v3_10006140, %dec_label_pc_10006128 ], [ %v0_10006164, %dec_label_pc_10006164 ]
  %v0_100061f4 = phi i32 [ %v3_1000613c, %dec_label_pc_10006128 ], [ %v0_10006168, %dec_label_pc_10006164 ]
  %v0_100061f8 = phi i32 [ %v3_10006138, %dec_label_pc_10006128 ], [ %v0_1000616c, %dec_label_pc_10006164 ]
  %v0_100061d8 = phi i32 [ %v3_10006144, %dec_label_pc_10006128 ], [ %v0_1000615c, %dec_label_pc_10006164 ]
  %v0_100061a0 = phi i32 [ %v0_10006110, %dec_label_pc_10006128 ], [ %v0_10006158, %dec_label_pc_10006164 ]
  %v2_10006170 = icmp sgt i32 %v0_100061a0, 3
  %v1_10006174 = mul i32 %v0_100061d8, 2048
  %v1_10006178 = udiv i32 %v0_100061f8, 524288
  %v2_1000617c = xor i32 %v1_10006174, %v0_100061d8
  %v2_10006180 = xor i32 %v1_10006178, %v0_100061f8
  %v2_10006188 = xor i32 %v2_10006180, %v2_1000617c
  %v1_1000618c = udiv i32 %v2_1000617c, 256
  %v2_10006194 = xor i32 %v2_10006188, %v1_1000618c
  store i32 %v2_10006194, i32* %r0.global-to-local, align 4
  br i1 %v2_10006170, label %dec_label_pc_1000614c, label %dec_label_pc_1000619c

dec_label_pc_1000619c:                            ; preds = %dec_label_pc_10006170
  %v3_10006184 = icmp eq i32 %v0_100061a0, 1
  store i32 %v2_10006194, i32* %r0.global-to-local, align 4
  %v1_100061a0 = add i32 %v0_100061a0, -2
  store i32 %v1_100061a0, i32* @r4, align 4
  br i1 %v3_10006184, label %dec_label_pc_100061d8, label %dec_label_pc_100061a8

dec_label_pc_100061a8:                            ; preds = %dec_label_pc_1000619c
  %v1_100061a8 = trunc i32 %v2_10006194 to i16
  %v2_100061a8 = load i32, i32* @r3, align 4
  %v3_100061a8 = inttoptr i32 %v2_100061a8 to i16*
  store i16 %v1_100061a8, i16* %v3_100061a8, align 2
  %v0_100061ac = load i32, i32* @r3, align 4
  %v1_100061ac = add i32 %v0_100061ac, 2
  %v0_10006158.pr = load i32, i32* @r4, align 4
  br label %dec_label_pc_10006158

dec_label_pc_100061b4:                            ; preds = %dec_label_pc_10006158
  %v0_100061b4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_100061b4, i32* @global_var_1001c2ec.111, align 4
  %v0_100061b8 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_100061b8, i32* @global_var_1001c2e8.113, align 4
  %v0_100061bc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_100061bc, i32* @global_var_1001c2e4.114, align 4
  store i32 %v0_1000615c, i32* @global_var_1001c2e0.112, align 4
  br label %dec_label_pc_100061c4

dec_label_pc_100061c4:                            ; preds = %dec_label_pc_10006110.dec_label_pc_100061c4_crit_edge, %dec_label_pc_100061b4
  %v0_100061d4 = phi i32 [ %v0_100061d4.pre, %dec_label_pc_10006110.dec_label_pc_100061c4_crit_edge ], [ %storemerge, %dec_label_pc_100061b4 ]
  ret i32 %v0_100061d4

dec_label_pc_100061d8:                            ; preds = %dec_label_pc_1000619c
  store i32 %v2_10006194, i32* %r0.global-to-local, align 4
  store i32 %v0_100061f4, i32* @global_var_1001c2e4.114, align 4
  store i32 %v0_100061f8, i32* @global_var_1001c2e8.113, align 4
  store i32 %v2_10006194, i32* @global_var_1001c2ec.111, align 4
  store i32 %v0_10006210, i32* @global_var_1001c2e0.112, align 4
  %v1_10006214 = trunc i32 %v2_10006194 to i8
  %v2_10006214 = load i32, i32* @r3, align 4
  %v3_10006214 = inttoptr i32 %v2_10006214 to i8*
  store i8 %v1_10006214, i8* %v3_10006214, align 1
  %v0_10006218 = load i32, i32* @r3, align 4
  ret i32 %v0_10006218

; uselistorder directives
  uselistorder i32 %v2_10006194, { 2, 1, 0, 3, 4, 6, 5 }
  uselistorder i32 %v0_100061d8, { 1, 0 }
  uselistorder i32 %v0_100061f8, { 1, 2, 0 }
  uselistorder i32 %v0_10006110, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 4, 2 }
  uselistorder label %dec_label_pc_100061c4, { 1, 0 }
  uselistorder label %dec_label_pc_10006170, { 1, 0 }
}

define i32 @function_1000621c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000621c:
  store i32 %arg1, i32* @r31, align 4
  %v3_10006228 = icmp eq i32 %arg1, 0
  br i1 %v3_10006228, label %dec_label_pc_1000624c, label %dec_label_pc_10006234

dec_label_pc_10006234:                            ; preds = %dec_label_pc_1000621c
  %v1_10006234 = add i32 %arg1, 4
  %v2_10006234 = inttoptr i32 %v1_10006234 to i32*
  %v3_10006234 = load i32, i32* %v2_10006234, align 4
  store i32 %v3_10006234, i32* @r3, align 4
  %v3_10006238 = icmp eq i32 %v3_10006234, 0
  br i1 %v3_10006238, label %dec_label_pc_10006244, label %dec_label_pc_10006240

dec_label_pc_10006240:                            ; preds = %dec_label_pc_10006234
  store i32 268460612, i32* @lr, align 4
  %v0_10006240 = call i32 @function_1000a1e8()
  %v0_10006244.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10006244

dec_label_pc_10006244:                            ; preds = %dec_label_pc_10006234, %dec_label_pc_10006240
  %v0_10006244 = phi i32 [ %arg1, %dec_label_pc_10006234 ], [ %v0_10006244.pre, %dec_label_pc_10006240 ]
  store i32 %v0_10006244, i32* @r3, align 4
  store i32 268460620, i32* @lr, align 4
  %v0_10006248 = call i32 @function_1000a1e8()
  br label %dec_label_pc_1000624c

dec_label_pc_1000624c:                            ; preds = %dec_label_pc_1000621c, %dec_label_pc_10006244
  %v0_1000625c = phi i32 [ 0, %dec_label_pc_1000621c ], [ %v0_10006248, %dec_label_pc_10006244 ]
  ret i32 %v0_1000625c

; uselistorder directives
  uselistorder i32 %arg1, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_1000624c, { 1, 0 }
  uselistorder label %dec_label_pc_10006244, { 1, 0 }
}

define i32 @function_10006260(i32 %arg1) local_unnamed_addr {
dec_label_pc_10006260:
  %cr4_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp60 = call i16 @__decompiler_undefined_function_1()
  %stack_var_-4308 = alloca i32, align 4
  %stack_var_-4312 = alloca i32, align 4
  %stack_var_-2096 = alloca i32, align 4
  %stack_var_-2108 = alloca i16, align 2
  %stack_var_-4284 = alloca i32, align 4
  %stack_var_-4300 = alloca i32, align 4
  %stack_var_-4143 = alloca i32, align 4
  %stack_var_-4144 = alloca i32, align 4
  %stack_var_-4156 = alloca i32, align 4
  %v0_10006264 = load i32, i32* @lr, align 4
  store i32 %v0_10006264, i32* %r0.global-to-local, align 4
  %v0_10006268 = call i32 @__asm_mfcr()
  %v0_10006270 = load i32, i32* @r29, align 4
  store i32 %v0_10006268, i32* @r29, align 4
  %v2_10006284 = ptrtoint i32* %stack_var_-4156 to i32
  %v2_1000628c = ptrtoint i32* %stack_var_-4144 to i32
  store i32 %v2_1000628c, i32* %r26.global-to-local, align 4
  %v0_10006290 = load i32, i32* %r0.global-to-local, align 4
  %v0_100062b0 = load i32, i32* @r28, align 4
  store i32 268460736, i32* @lr, align 4
  %v2_100062bc = call i32 @function_1000a178(i32 1, i32 8)
  store i32 %v2_100062bc, i32* %r25.global-to-local, align 4
  %v0_100062c4 = load i32, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100062cc.115 to i32), i32* @lr, align 4
  %v1_100062c8 = inttoptr i32 %v0_100062c4 to i8*
  %v2_100062c8 = call i32 @function_1000890c(i8* %v1_100062c8)
  %v2_100062cc = ptrtoint i32* %stack_var_-4143 to i32
  store i32 %v2_100062cc, i32* %r10.global-to-local, align 4
  %v1_100062d0 = add i32 %v2_100062c8, 1
  store i32 %v2_1000628c, i32* %r7.global-to-local, align 4
  %v1_100062dc = add i32 %v2_100062c8, 2
  store i32 %v1_100062dc, i32* %ctr.global-to-local, align 4
  %tmp94 = icmp sgt i32 %v1_100062d0, -1
  br i1 %tmp94, label %dec_label_pc_10006304.preheader, label %dec_label_pc_10006304.preheader.thread

dec_label_pc_10006304.preheader:                  ; preds = %dec_label_pc_10006260
  %v3_100062d8 = icmp eq i32 %v1_100062d0, 0
  %v1_1000630413 = or i32 %v2_100062cc, 1
  store i32 %v1_1000630413, i32* %r11.global-to-local, align 4
  store i32 %v1_100062d0, i32* %ctr.global-to-local, align 4
  br i1 %v3_100062d8, label %dec_label_pc_10006334, label %dec_label_pc_1000630c.lr.ph

dec_label_pc_1000630c.lr.ph:                      ; preds = %dec_label_pc_10006304.preheader
  %v0_1000630c.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000630c

dec_label_pc_100062f0:                            ; preds = %dec_label_pc_1000631c
  %v3_100062f0 = inttoptr i32 %v2_100062f0 to i8*
  store i8 %v2_1000630c, i8* %v3_100062f0, align 1
  %v0_100062f4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100062f4 = urem i32 %v0_100062f4, 256
  %v0_100062f8 = load i32, i32* %r10.global-to-local, align 4
  %v1_100062f8 = add i32 %v0_100062f8, 1
  store i32 %v1_100062f8, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100062fc

dec_label_pc_100062fc:                            ; preds = %dec_label_pc_10006324, %dec_label_pc_100062f0
  %v0_10006300 = phi i32 [ %v0_10006300.pre, %dec_label_pc_10006324 ], [ %v1_100062f8, %dec_label_pc_100062f0 ]
  %v0_1000631c20 = phi i32 [ 0, %dec_label_pc_10006324 ], [ %v1_100062f4, %dec_label_pc_100062f0 ]
  %v0_100062fc = load i32, i32* @r29, align 4
  %v1_100062fc = add i32 %v0_100062fc, 1
  store i32 %v1_100062fc, i32* @r29, align 4
  store i32 %v0_10006300, i32* %r10.global-to-local, align 4
  %v1_10006304 = add i32 %v0_10006300, 1
  store i32 %v1_10006304, i32* %r11.global-to-local, align 4
  %v0_10006308 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006308 = add i32 %v0_10006308, -1
  store i32 %v1_10006308, i32* %ctr.global-to-local, align 4
  %v2_10006308 = icmp eq i32 %v1_10006308, 0
  br i1 %v2_10006308, label %dec_label_pc_10006334, label %dec_label_pc_1000630c

dec_label_pc_1000630c:                            ; preds = %dec_label_pc_1000630c.lr.ph, %dec_label_pc_100062fc
  %v2_100062f0 = phi i32 [ %v2_100062cc, %dec_label_pc_1000630c.lr.ph ], [ %v0_10006300, %dec_label_pc_100062fc ]
  %v0_10006324 = phi i32 [ 0, %dec_label_pc_1000630c.lr.ph ], [ %v0_1000631c20, %dec_label_pc_100062fc ]
  %v0_1000630c = phi i32 [ %v0_1000630c.pre, %dec_label_pc_1000630c.lr.ph ], [ %v1_100062fc, %dec_label_pc_100062fc ]
  %v1_1000630c = inttoptr i32 %v0_1000630c to i8*
  %v2_1000630c = load i8, i8* %v1_1000630c, align 1
  %v3_1000630c = zext i8 %v2_1000630c to i32
  store i32 %v3_1000630c, i32* %r0.global-to-local, align 4
  %v3_10006310 = icmp eq i8 %v2_1000630c, 46
  br i1 %v3_10006310, label %dec_label_pc_10006324, label %dec_label_pc_1000631c

dec_label_pc_1000631c:                            ; preds = %dec_label_pc_1000630c
  %v3_10006314 = icmp eq i8 %v2_1000630c, 0
  %v1_1000631c = add nsw i32 %v0_10006324, 1
  store i32 %v1_1000631c, i32* %r9.global-to-local, align 4
  br i1 %v3_10006314, label %dec_label_pc_10006324, label %dec_label_pc_100062f0

dec_label_pc_10006324:                            ; preds = %dec_label_pc_1000631c, %dec_label_pc_1000630c
  %v1_10006324 = trunc i32 %v0_10006324 to i8
  %v2_10006324 = load i32, i32* %r7.global-to-local, align 4
  %v3_10006324 = inttoptr i32 %v2_10006324 to i8*
  store i8 %v1_10006324, i8* %v3_10006324, align 1
  %v0_10006328 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10006328, i32* %r7.global-to-local, align 4
  %v0_10006300.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100062fc

dec_label_pc_10006334:                            ; preds = %dec_label_pc_100062fc, %dec_label_pc_10006304.preheader.thread, %dec_label_pc_10006304.preheader
  %v2_1000633c = phi i32 [ %v2_100062cc, %dec_label_pc_10006304.preheader ], [ %v2_100062cc, %dec_label_pc_10006304.preheader.thread ], [ %v0_10006300, %dec_label_pc_100062fc ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_1000633c = inttoptr i32 %v2_1000633c to i8*
  store i8 0, i8* %v3_1000633c, align 1
  %v2_10006340 = ptrtoint i32* %stack_var_-4300 to i32
  store i32 -1, i32* @r30, align 4
  store i32 1, i32* %r27.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10006350.116 to i32), i32* @lr, align 4
  %v1_1000634c = bitcast i32* %stack_var_-4144 to i8*
  %v2_1000634c = call i32 @function_1000890c(i8* %v1_1000634c)
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10006354 = load i32, i32* %r26.global-to-local, align 4
  %v2_10006354 = add i32 %v0_10006354, %v2_1000634c
  store i32 %v2_10006354, i32* %r29.global-to-local, align 4
  %v0_10006360 = load i32, i32* @r30, align 4
  %v3_10006360 = icmp eq i32 %v0_10006360, -1
  store i1 %v3_10006360, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %stack_var_-4300, align 4
  %v2_10006368 = ptrtoint i32* %stack_var_-4284 to i32
  store i32 %v2_10006368, i32* @r31, align 4
  %v2_10006370 = ptrtoint i16* %stack_var_-2108 to i32
  store i32 %v2_10006370, i32* %r19.global-to-local, align 4
  store i32 268460924, i32* @lr, align 4
  %v2_10006378 = call i32 @function_1000890c(i8* %v1_1000634c)
  %v1_1000637c = add i32 %v2_10006378, 17
  store i32 %v1_1000637c, i32* %r23.global-to-local, align 4
  %v0_10006380 = call i32 @function_10005f3c()
  %v1_10006380 = sext i32 %v0_10006380 to i64
  store i32 16, i32* @r4, align 4
  %v5_10006394 = mul nuw nsw i64 %v1_10006380, 2147516417
  store i32 %v2_10006340, i32* @r3, align 4
  %v2_1000639c = ptrtoint i32* %stack_var_-2096 to i32
  store i32 %v2_1000639c, i32* %r20.global-to-local, align 4
  %v1_100063a02 = udiv i64 %v5_10006394, 140737488355328
  %v1_100063a0 = trunc i64 %v1_100063a02 to i32
  store i32 %v1_100063a0, i32* %r0.global-to-local, align 4
  %v2_100063a4 = add i32 %v1_100063a0, %v0_10006380
  store i32 %v2_100063a4, i32* %r9.global-to-local, align 4
  %v1_100063a8 = urem i32 %v2_100063a4, 65536
  store i32 %v1_100063a8, i32* %r22.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100063b0.118 to i32), i32* @lr, align 4
  %v0_100063ac = call i32 @function_100089b4()
  store i32 2, i32* %stack_var_-4300, align 4
  store i32 1, i32* %r10.global-to-local, align 4
  store i32 134744072, i32* %r11.global-to-local, align 4
  %v0_100063c4 = load i32, i32* %r29.global-to-local, align 4
  store i32 53, i32* %r9.global-to-local, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  %v0_100063dc = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_100063dc, i32* %stack_var_-4156, align 4
  %v3_100063e4 = add i32 %v0_100063c4, 3
  %v4_100063e4 = inttoptr i32 %v3_100063e4 to i16*
  store i16 1, i16* %v4_100063e4, align 2
  %v0_100063e8 = load i32, i32* %r10.global-to-local, align 4
  %v1_100063e8 = trunc i32 %v0_100063e8 to i16
  %v2_100063e8 = load i32, i32* %r29.global-to-local, align 4
  %v3_100063e8 = add i32 %v2_100063e8, 1
  %v4_100063e8 = inttoptr i32 %v3_100063e8 to i16*
  store i16 %v1_100063e8, i16* %v4_100063e8, align 2
  %v2_1000648c = ptrtoint i32* %stack_var_-4312 to i32
  %v2_100064c0 = ptrtoint i32* %stack_var_-4308 to i32
  %v1_100065b0 = bitcast i32* %stack_var_-2096 to i8*
  %v4_100065c8 = zext i16 %tmp60 to i32
  %v3_100065cc = icmp eq i16 %tmp60, 0
  br label %dec_label_pc_100063ec

dec_label_pc_100063ec:                            ; preds = %dec_label_pc_1000652c, %dec_label_pc_10006334
  %v0_100063ec = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_100063ec, label %dec_label_pc_100063f8, label %dec_label_pc_100063f0

dec_label_pc_100063f0:                            ; preds = %dec_label_pc_100063ec
  store i32 ptrtoint ([3 x i8]* @global_var_100063f8.119 to i32), i32* @lr, align 4
  %v0_100063f4 = call i32 @function_100090cc()
  br label %dec_label_pc_100063f8

dec_label_pc_100063f8:                            ; preds = %dec_label_pc_100063ec, %dec_label_pc_100063f0
  store i32 268461064, i32* @lr, align 4
  %v3_10006404 = call i32 @function_10009e1c(i32 2, i32 2, i32 0)
  store i32 %v3_10006404, i32* @r3, align 4
  %v3_10006408 = icmp eq i32 %v3_10006404, -1
  store i1 %v3_10006408, i1* %cr4_eq.global-to-local, align 1
  store i32 %v3_10006404, i32* @r30, align 4
  br i1 %v3_10006408, label %dec_label_pc_10006534, label %dec_label_pc_10006414

dec_label_pc_10006414:                            ; preds = %dec_label_pc_100063f8
  store i32 268461088, i32* @lr, align 4
  %v0_1000641c = call i32 @function_10009c1c()
  %v3_10006420 = icmp eq i32 %v0_1000641c, -1
  br i1 %v3_10006420, label %dec_label_pc_10006534, label %dec_label_pc_10006428

dec_label_pc_10006428:                            ; preds = %dec_label_pc_10006414
  %v0_10006428 = load i32, i32* @r30, align 4
  %v0_10006430 = load i32, i32* %r23.global-to-local, align 4
  store i32 268461116, i32* @lr, align 4
  %v4_10006438 = call i32 @function_10009d68(i32 %v0_10006428, i32 %v2_10006284, i32 %v0_10006430, i32 16384)
  %v3_1000643c = icmp eq i32 %v4_10006438, -1
  br i1 %v3_1000643c, label %dec_label_pc_10006534, label %dec_label_pc_10006444

dec_label_pc_10006444:                            ; preds = %dec_label_pc_10006428
  %v0_10006444 = load i32, i32* @r30, align 4
  store i32 %v0_10006444, i32* @r4, align 4
  store i32 268461144, i32* @lr, align 4
  %v2_10006454 = call i32 @function_10008fe4(i32 3)
  %v0_10006458 = load i32, i32* @r30, align 4
  store i32 %v0_10006458, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_1000646c.120 to i32), i32* @lr, align 4
  %v2_10006468 = call i32 @function_10008fe4(i32 4)
  store i32 32, i32* %r0.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_1000647c139 = load i32, i32* @r31, align 4
  %v4_1000647c141 = inttoptr i32 %v2_1000647c139 to i32*
  store i32 0, i32* %v4_1000647c141, align 4
  %v0_10006480142 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006480143 = add i32 %v0_10006480142, 4
  store i32 %v1_10006480143, i32* %r9.global-to-local, align 4
  %v0_10006484144 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006484145 = add i32 %v0_10006484144, -1
  store i32 %v1_10006484145, i32* %ctr.global-to-local, align 4
  %v2_10006484146 = icmp eq i32 %v1_10006484145, 0
  br i1 %v2_10006484146, label %dec_label_pc_10006488, label %dec_label_pc_1000647c.dec_label_pc_1000647c_crit_edge

dec_label_pc_1000647c.dec_label_pc_1000647c_crit_edge: ; preds = %dec_label_pc_10006444, %dec_label_pc_1000647c.dec_label_pc_1000647c_crit_edge
  %v1_10006480147 = phi i32 [ %v1_10006480, %dec_label_pc_1000647c.dec_label_pc_1000647c_crit_edge ], [ %v1_10006480143, %dec_label_pc_10006444 ]
  %v0_1000647c.pre = load i32, i32* %r11.global-to-local, align 4
  %v2_1000647c = load i32, i32* @r31, align 4
  %v3_1000647c = add i32 %v2_1000647c, %v1_10006480147
  %v4_1000647c = inttoptr i32 %v3_1000647c to i32*
  store i32 %v0_1000647c.pre, i32* %v4_1000647c, align 4
  %v0_10006480 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006480 = add i32 %v0_10006480, 4
  store i32 %v1_10006480, i32* %r9.global-to-local, align 4
  %v0_10006484 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006484 = add i32 %v0_10006484, -1
  store i32 %v1_10006484, i32* %ctr.global-to-local, align 4
  %v2_10006484 = icmp eq i32 %v1_10006484, 0
  br i1 %v2_10006484, label %dec_label_pc_10006488, label %dec_label_pc_1000647c.dec_label_pc_1000647c_crit_edge

dec_label_pc_10006488:                            ; preds = %dec_label_pc_1000647c.dec_label_pc_1000647c_crit_edge, %dec_label_pc_10006444
  %v0_10006488 = load i32, i32* @r30, align 4
  %v1_10006488 = call i32 @__asm_rlwinm(i32 %v0_10006488, i32 29, i32 3, i32 29)
  store i32 %v1_10006488, i32* %r9.global-to-local, align 4
  store i32 %v2_1000648c, i32* %r0.global-to-local, align 4
  %v2_10006490 = add i32 %v1_10006488, %v2_1000648c
  store i32 %v2_10006490, i32* %r29.global-to-local, align 4
  %v0_10006494 = load i32, i32* @r30, align 4
  %v1_10006494 = urem i32 %v0_10006494, 32
  store i32 %v1_10006494, i32* %r28.global-to-local, align 4
  %v1_10006498 = add i32 %v2_10006490, 28
  %v2_10006498 = inttoptr i32 %v1_10006498 to i32*
  %v3_10006498 = load i32, i32* %v2_10006498, align 4
  %v3_100064a0 = shl i32 1, %v1_10006494
  %v1_100064a4 = add i32 %v0_10006494, 1
  %v2_100064a8 = or i32 %v3_100064a0, %v3_10006498
  store i32 %v2_100064a8, i32* %r9.global-to-local, align 4
  store i32 %v2_100064a8, i32* %v2_10006498, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  store i32 %v2_100064c0, i32* %r7.global-to-local, align 4
  store i32 5, i32* %stack_var_-4308, align 4
  store i32 268461264, i32* @lr, align 4
  %v5_100064cc = call i32 @function_10009394(i32 %v1_100064a4, i32 %v2_10006368, i32 0, i32 0, i32 %v2_100064c0)
  %v3_100064d0 = icmp eq i32 %v5_100064cc, -1
  br i1 %v3_100064d0, label %dec_label_pc_10006544, label %dec_label_pc_100064d8

dec_label_pc_100064d8:                            ; preds = %dec_label_pc_10006488
  %v3_100064d8 = icmp eq i32 %v5_100064cc, 0
  br i1 %v3_100064d8, label %dec_label_pc_10006524, label %dec_label_pc_100064e0

dec_label_pc_100064e0:                            ; preds = %dec_label_pc_100064d8
  %v0_100064e0 = load i32, i32* %r29.global-to-local, align 4
  %v1_100064e0 = add i32 %v0_100064e0, 28
  %v2_100064e0 = inttoptr i32 %v1_100064e0 to i32*
  %v3_100064e0 = load i32, i32* %v2_100064e0, align 4
  %v1_100064e4 = load i32, i32* %r28.global-to-local, align 4
  %v2_100064e4 = urem i32 %v1_100064e4, 32
  %v3_100064e4 = sub i32 0, %v1_100064e4
  %v4_100064e4 = urem i32 %v3_100064e4, 32
  %v5_100064e4 = shl i32 %v3_100064e0, %v4_100064e4
  %v6_100064e4 = xor i32 %v4_100064e4, 31
  %v7_100064e4 = lshr i32 %v3_100064e0, %v6_100064e4
  %v8_100064e4 = udiv i32 %v7_100064e4, 2
  %v9_100064e4 = or i32 %v8_100064e4, %v5_100064e4
  %v10_100064e4 = and i32 %v1_100064e4, 32
  %v11_100064e4 = icmp ne i32 %v10_100064e4, 0
  %v12_100064e4 = lshr i32 -1, %v2_100064e4
  %v13_100064e4 = select i1 %v11_100064e4, i32 0, i32 %v12_100064e4
  %v14_100064e4 = and i32 %v9_100064e4, %v13_100064e4
  %v15_100064e4 = ashr i32 %v3_100064e0, 31
  %v16_100064e4 = sub i32 -1, %v13_100064e4
  %v17_100064e4 = and i32 %v15_100064e4, %v16_100064e4
  %v18_100064e4 = or i32 %v14_100064e4, %v17_100064e4
  store i32 %v18_100064e4, i32* %r0.global-to-local, align 4
  %v1_100064e8 = urem i32 %v18_100064e4, 2
  store i32 %v1_100064e8, i32* %r9.global-to-local, align 4
  %v3_100064e8 = icmp eq i32 %v1_100064e8, 0
  br i1 %v3_100064e8, label %dec_label_pc_10006544, label %dec_label_pc_100064f0

dec_label_pc_100064f0:                            ; preds = %dec_label_pc_100064e0
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_10006504 = load i32, i32* @r30, align 4
  store i32 268461324, i32* @lr, align 4
  %v6_10006508 = call i32 @function_10009d28(i32 %v0_10006504, i32 %v2_10006370, i32 2048, i32 16384, i32 0, i32 0)
  store i32 %v6_10006508, i32* %r29.global-to-local, align 4
  %v0_10006510 = load i32, i32* %r26.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006518.121 to i32), i32* @lr, align 4
  %v1_10006514 = inttoptr i32 %v0_10006510 to i8*
  %v2_10006514 = call i32 @function_1000890c(i8* %v1_10006514)
  %v1_10006518 = add i32 %v2_10006514, 17
  %v2_1000651c = icmp ult i32 %v6_10006508, %v1_10006518
  br i1 %v2_1000651c, label %dec_label_pc_10006524, label %dec_label_pc_100065a8

dec_label_pc_10006524:                            ; preds = %dec_label_pc_100065a8, %dec_label_pc_100064f0, %dec_label_pc_100065c8, %dec_label_pc_100064d8
  %v0_10006524 = load i32, i32* %r27.global-to-local, align 4
  %v3_10006524 = icmp eq i32 %v0_10006524, 5
  br i1 %v3_10006524, label %dec_label_pc_10006544, label %dec_label_pc_1000652c

dec_label_pc_1000652c:                            ; preds = %dec_label_pc_10006534, %dec_label_pc_10006524
  %v0_1000652c = phi i32 [ %v0_1000653c, %dec_label_pc_10006534 ], [ %v0_10006524, %dec_label_pc_10006524 ]
  %v1_1000652c = add i32 %v0_1000652c, 1
  store i32 %v1_1000652c, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_100063ec

dec_label_pc_10006534:                            ; preds = %dec_label_pc_10006428, %dec_label_pc_10006414, %dec_label_pc_100063f8
  store i32 268461372, i32* @lr, align 4
  %v1_10006538 = call i32 @function_1000a914(i32 1)
  %v0_1000653c = load i32, i32* %r27.global-to-local, align 4
  %v3_1000653c = icmp eq i32 %v0_1000653c, 5
  br i1 %v3_1000653c, label %dec_label_pc_10006544, label %dec_label_pc_1000652c

dec_label_pc_10006544:                            ; preds = %dec_label_pc_10006534, %dec_label_pc_10006524, %dec_label_pc_100064e0, %dec_label_pc_10006488, %dec_label_pc_100065d4.backedge, %dec_label_pc_100065d4.preheader
  store i32 268461388, i32* @lr, align 4
  %v0_10006548 = call i32 @function_100090cc()
  %v0_1000654c = load i32, i32* %r25.global-to-local, align 4
  %v1_1000654c = inttoptr i32 %v0_1000654c to i8*
  %v2_1000654c = load i8, i8* %v1_1000654c, align 1
  %v3_1000654c = zext i8 %v2_1000654c to i32
  store i32 %v3_1000654c, i32* %r0.global-to-local, align 4
  %v3_10006550 = icmp eq i8 %v2_1000654c, 0
  br i1 %v3_10006550, label %dec_label_pc_100066c0, label %dec_label_pc_10006558

dec_label_pc_10006558:                            ; preds = %dec_label_pc_10006544, %dec_label_pc_100066d0
  %v0_1000655c = phi i32 [ %v0_1000654c, %dec_label_pc_10006544 ], [ 0, %dec_label_pc_100066d0 ]
  store i32 %v0_10006290, i32* %r0.global-to-local, align 4
  %v1_10006570 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10006268)
  store i32 %v0_100062b0, i32* %r28.global-to-local, align 4
  store i32 %v0_10006270, i32* %r29.global-to-local, align 4
  ret i32 %v0_1000655c

dec_label_pc_100065a8:                            ; preds = %dec_label_pc_100064f0
  store i32 %v2_1000639c, i32* %r26.global-to-local, align 4
  store i32 268461492, i32* @lr, align 4
  %v2_100065b0 = call i32 @function_1000890c(i8* %v1_100065b0)
  %v3_100065b4 = load i16, i16* %stack_var_-2108, align 2
  %v4_100065b4 = sext i16 %v3_100065b4 to i32
  store i32 %v4_100065b4, i32* %r0.global-to-local, align 4
  %v0_100065b8 = load i32, i32* %r20.global-to-local, align 4
  %v1_100065bc = load i32, i32* %r22.global-to-local, align 4
  %v4_100065bc = icmp eq i32 %v4_100065b4, %v1_100065bc
  %v2_100065b8 = add i32 %v2_100065b0, 5
  %v1_100065c0 = add i32 %v2_100065b8, %v0_100065b8
  br i1 %v4_100065bc, label %dec_label_pc_100065c8, label %dec_label_pc_10006524

dec_label_pc_100065c8:                            ; preds = %dec_label_pc_100065a8
  store i32 %v4_100065c8, i32* %r28.global-to-local, align 4
  br i1 %v3_100065cc, label %dec_label_pc_10006524, label %dec_label_pc_100065d4.preheader

dec_label_pc_100065d4.preheader:                  ; preds = %dec_label_pc_100065c8
  %v1_100065d48 = add nsw i32 %v4_100065c8, -1
  store i32 %v1_100065d48, i32* %r0.global-to-local, align 4
  %v1_100065dc9 = urem i32 %v1_100065d48, 65536
  store i32 %v1_100065dc9, i32* %r28.global-to-local, align 4
  store i32 65535, i32* %r9.global-to-local, align 4
  %v4_100065e411 = icmp eq i32 %v1_100065dc9, 65535
  br i1 %v4_100065e411, label %dec_label_pc_10006544, label %dec_label_pc_100065ec

dec_label_pc_100065ec:                            ; preds = %dec_label_pc_100065d4.preheader, %dec_label_pc_100065d4.backedge
  %v0_100065d449 = phi i32 [ %v1_100065dc, %dec_label_pc_100065d4.backedge ], [ %v1_100065dc9, %dec_label_pc_100065d4.preheader ]
  %v0_10006648 = phi i32 [ %storemerge, %dec_label_pc_100065d4.backedge ], [ %v1_100065c0, %dec_label_pc_100065d4.preheader ]
  store i32 %v0_10006648, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 1, i32* %r10.global-to-local, align 4
  %v1_100065f8110 = inttoptr i32 %v0_10006648 to i8*
  %v2_100065f8111 = load i8, i8* %v1_100065f8110, align 1
  %v3_100065f8112 = zext i8 %v2_100065f8111 to i32
  store i32 %v3_100065f8112, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  %v3_10006600113 = icmp eq i8 %v2_100065f8111, 0
  br i1 %v3_10006600113, label %dec_label_pc_10006644, label %dec_label_pc_10006610.preheader

dec_label_pc_10006610.preheader:                  ; preds = %dec_label_pc_100065ec, %dec_label_pc_100066e0
  %v2_100065f8119 = phi i8 [ %v2_100065f8, %dec_label_pc_100066e0 ], [ %v2_100065f8111, %dec_label_pc_100065ec ]
  %v3_10006608122.in = phi i8 [ %v2_100065f8, %dec_label_pc_100066e0 ], [ %v2_100065f8111, %dec_label_pc_100065ec ]
  %v1_10006604121.in = phi i32 [ %v3_100065f8, %dec_label_pc_100066e0 ], [ %v3_100065f8112, %dec_label_pc_100065ec ]
  %v1_100065fc120 = phi i32 [ %v1_100065fc, %dec_label_pc_100066e0 ], [ 1, %dec_label_pc_100065ec ]
  %v0_100065f8118 = phi i32 [ %v1_100066e4, %dec_label_pc_100066e0 ], [ %v0_10006648, %dec_label_pc_100065ec ]
  %v0_100065fc117 = phi i32 [ %v0_100065fc28, %dec_label_pc_100066e0 ], [ 0, %dec_label_pc_100065ec ]
  %v0_10006644116 = phi i32 [ %v2_100066e0, %dec_label_pc_100066e0 ], [ 1, %dec_label_pc_100065ec ]
  br label %dec_label_pc_10006610

dec_label_pc_10006610:                            ; preds = %dec_label_pc_10006610.preheader, %dec_label_pc_10006614
  %v1_100066e0 = phi i32 [ 0, %dec_label_pc_10006614 ], [ %v1_100065fc120, %dec_label_pc_10006610.preheader ]
  %v0_10006620.in = phi i32 [ %v3_10006630, %dec_label_pc_10006614 ], [ %v1_10006604121.in, %dec_label_pc_10006610.preheader ]
  %v0_100066e4 = phi i32 [ %v2_1000662c, %dec_label_pc_10006614 ], [ %v0_100065f8118, %dec_label_pc_10006610.preheader ]
  %v0_10006610.in = phi i8 [ %v2_10006630, %dec_label_pc_10006614 ], [ %v3_10006608122.in, %dec_label_pc_10006610.preheader ]
  %v1_10006610.in = phi i8 [ %v2_10006630, %dec_label_pc_10006614 ], [ %v2_100065f8119, %dec_label_pc_10006610.preheader ]
  %v0_100065fc28 = phi i32 [ 1, %dec_label_pc_10006614 ], [ %v0_100065fc117, %dec_label_pc_10006610.preheader ]
  %v0_10006610 = icmp eq i8 %v0_10006610.in, -65
  %v1_10006610 = icmp ult i8 %v1_10006610.in, -65
  %v2_10006610 = or i1 %v0_10006610, %v1_10006610
  br i1 %v2_10006610, label %dec_label_pc_100066e0, label %dec_label_pc_10006614

dec_label_pc_10006614:                            ; preds = %dec_label_pc_10006610
  %v0_10006620 = mul nuw nsw i32 %v0_10006620.in, 256
  %v1_10006614 = add i32 %v0_100066e4, 1
  %v2_10006614 = inttoptr i32 %v1_10006614 to i8*
  %v3_10006614 = load i8, i8* %v2_10006614, align 1
  %v4_10006614 = zext i8 %v3_10006614 to i32
  store i32 1, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_10006620 = or i32 %v4_10006614, -49152
  %v1_10006628 = add nsw i32 %v2_10006620, %v0_10006620
  %v0_1000662c = load i32, i32* %r19.global-to-local, align 4
  %v2_1000662c = add i32 %v1_10006628, %v0_1000662c
  store i32 %v2_1000662c, i32* %r9.global-to-local, align 4
  %v1_10006630 = inttoptr i32 %v2_1000662c to i8*
  %v2_10006630 = load i8, i8* %v1_10006630, align 1
  %v3_10006630 = zext i8 %v2_10006630 to i32
  store i32 %v3_10006630, i32* %r0.global-to-local, align 4
  %v3_10006634 = icmp eq i8 %v2_10006630, 0
  br i1 %v3_10006634, label %dec_label_pc_10006644, label %dec_label_pc_10006610

dec_label_pc_10006644:                            ; preds = %dec_label_pc_100065ec, %dec_label_pc_100066e0, %dec_label_pc_10006614
  %v0_10006644103 = phi i32 [ %v0_10006644116, %dec_label_pc_10006614 ], [ 1, %dec_label_pc_100065ec ], [ %v2_100066e0, %dec_label_pc_100066e0 ]
  %v1_10006644 = phi i32 [ 1, %dec_label_pc_10006614 ], [ 0, %dec_label_pc_100065ec ], [ %v0_100065fc28, %dec_label_pc_100066e0 ]
  %v2_10006644 = add i32 %v1_10006644, %v0_10006644103
  store i32 %v2_10006644, i32* %r10.global-to-local, align 4
  %v2_10006648 = add i32 %v2_10006644, %v0_10006648
  %v3_10006648 = inttoptr i32 %v2_10006648 to i16*
  %v4_10006648 = load i16, i16* %v3_10006648, align 2
  %v5_10006648 = zext i16 %v4_10006648 to i32
  store i32 %v5_10006648, i32* %r0.global-to-local, align 4
  %v1_10006650 = add i32 %v2_10006648, 10
  store i32 %v1_10006650, i32* @r29, align 4
  %v3_10006654 = icmp eq i16 %v4_10006648, 1
  br i1 %v3_10006654, label %dec_label_pc_100066f8, label %dec_label_pc_1000665c

dec_label_pc_1000665c:                            ; preds = %dec_label_pc_100066f8, %dec_label_pc_10006644
  store i32 %v1_10006650, i32* %r9.global-to-local, align 4
  %v1_10006668124 = inttoptr i32 %v1_10006650 to i8*
  %v2_10006668125 = load i8, i8* %v1_10006668124, align 1
  %v3_10006668126 = zext i8 %v2_10006668125 to i32
  store i32 %v3_10006668126, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  %v3_10006670127 = icmp eq i8 %v2_10006668125, 0
  %v1_10006674128 = mul nuw nsw i32 %v3_10006668126, 256
  store i32 %v1_10006674128, i32* %r10.global-to-local, align 4
  br i1 %v3_10006670127, label %dec_label_pc_100066b4, label %dec_label_pc_10006680.preheader

dec_label_pc_10006680.preheader:                  ; preds = %dec_label_pc_1000665c, %dec_label_pc_100066ec
  %v2_10006668133 = phi i8 [ %v2_10006668, %dec_label_pc_100066ec ], [ %v2_10006668125, %dec_label_pc_1000665c ]
  %v3_10006678136.in = phi i8 [ %v2_10006668, %dec_label_pc_100066ec ], [ %v2_10006668125, %dec_label_pc_1000665c ]
  %v1_10006674135 = phi i32 [ %v1_10006674, %dec_label_pc_100066ec ], [ %v1_10006674128, %dec_label_pc_1000665c ]
  %v1_1000666c134 = phi i32 [ %v1_1000666c, %dec_label_pc_100066ec ], [ 1, %dec_label_pc_1000665c ]
  %v0_10006668132 = phi i32 [ %v1_100066f0, %dec_label_pc_100066ec ], [ %v1_10006650, %dec_label_pc_1000665c ]
  %v0_1000666c131 = phi i32 [ %v0_1000666c38, %dec_label_pc_100066ec ], [ 0, %dec_label_pc_1000665c ]
  %v0_100066b4130 = phi i32 [ %v2_100066ec, %dec_label_pc_100066ec ], [ 1, %dec_label_pc_1000665c ]
  br label %dec_label_pc_10006680

dec_label_pc_10006680:                            ; preds = %dec_label_pc_10006680.preheader, %dec_label_pc_10006684
  %v1_100066ec = phi i32 [ 0, %dec_label_pc_10006684 ], [ %v1_1000666c134, %dec_label_pc_10006680.preheader ]
  %v0_10006690 = phi i32 [ %v1_100066a8, %dec_label_pc_10006684 ], [ %v1_10006674135, %dec_label_pc_10006680.preheader ]
  %v0_100066f0 = phi i32 [ %v2_1000669c, %dec_label_pc_10006684 ], [ %v0_10006668132, %dec_label_pc_10006680.preheader ]
  %v0_10006680.in = phi i8 [ %v2_100066a0, %dec_label_pc_10006684 ], [ %v3_10006678136.in, %dec_label_pc_10006680.preheader ]
  %v1_10006680.in = phi i8 [ %v2_100066a0, %dec_label_pc_10006684 ], [ %v2_10006668133, %dec_label_pc_10006680.preheader ]
  %v0_1000666c38 = phi i32 [ 1, %dec_label_pc_10006684 ], [ %v0_1000666c131, %dec_label_pc_10006680.preheader ]
  %v0_10006680 = icmp eq i8 %v0_10006680.in, -65
  %v1_10006680 = icmp ult i8 %v1_10006680.in, -65
  %v2_10006680 = or i1 %v0_10006680, %v1_10006680
  br i1 %v2_10006680, label %dec_label_pc_100066ec, label %dec_label_pc_10006684

dec_label_pc_10006684:                            ; preds = %dec_label_pc_10006680
  %v1_10006684 = add i32 %v0_100066f0, 1
  %v2_10006684 = inttoptr i32 %v1_10006684 to i8*
  %v3_10006684 = load i8, i8* %v2_10006684, align 1
  %v4_10006684 = zext i8 %v3_10006684 to i32
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_10006690 = or i32 %v4_10006684, -49152
  %v1_10006698 = add nsw i32 %v2_10006690, %v0_10006690
  %v0_1000669c = load i32, i32* %r19.global-to-local, align 4
  %v2_1000669c = add i32 %v1_10006698, %v0_1000669c
  store i32 %v2_1000669c, i32* %r9.global-to-local, align 4
  %v1_100066a0 = inttoptr i32 %v2_1000669c to i8*
  %v2_100066a0 = load i8, i8* %v1_100066a0, align 1
  %v3_100066a0 = zext i8 %v2_100066a0 to i32
  store i32 %v3_100066a0, i32* %r0.global-to-local, align 4
  %v3_100066a4 = icmp eq i8 %v2_100066a0, 0
  %v1_100066a8 = mul nuw nsw i32 %v3_100066a0, 256
  store i32 %v1_100066a8, i32* %r10.global-to-local, align 4
  br i1 %v3_100066a4, label %dec_label_pc_100066b4, label %dec_label_pc_10006680

dec_label_pc_100066b4:                            ; preds = %dec_label_pc_1000665c, %dec_label_pc_100066ec, %dec_label_pc_10006684
  %v0_100066b4109 = phi i32 [ %v0_100066b4130, %dec_label_pc_10006684 ], [ 1, %dec_label_pc_1000665c ], [ %v2_100066ec, %dec_label_pc_100066ec ]
  %v1_100066b4 = phi i32 [ 1, %dec_label_pc_10006684 ], [ 0, %dec_label_pc_1000665c ], [ %v0_1000666c38, %dec_label_pc_100066ec ]
  %v2_100066b4 = add i32 %v1_100066b4, %v0_100066b4109
  %v2_100066b8 = add i32 %v2_100066b4, %v1_10006650
  br label %dec_label_pc_100065d4.backedge

dec_label_pc_100065d4.backedge:                   ; preds = %dec_label_pc_100066b4, %dec_label_pc_10006764
  %v0_100065d4 = phi i32 [ %v0_100065d449, %dec_label_pc_100066b4 ], [ %v0_100065d4.pre, %dec_label_pc_10006764 ]
  %storemerge = phi i32 [ %v2_100066b8, %dec_label_pc_100066b4 ], [ %v2_10006768, %dec_label_pc_10006764 ]
  %v1_100065d4 = add i32 %v0_100065d4, -1
  store i32 %v1_100065d4, i32* %r0.global-to-local, align 4
  %v1_100065dc = urem i32 %v1_100065d4, 65536
  store i32 %v1_100065dc, i32* %r28.global-to-local, align 4
  store i32 65535, i32* %r9.global-to-local, align 4
  %v4_100065e4 = icmp eq i32 %v1_100065dc, 65535
  br i1 %v4_100065e4, label %dec_label_pc_10006544, label %dec_label_pc_100065ec

dec_label_pc_100066c0:                            ; preds = %dec_label_pc_10006544
  %v1_100066c0 = add i32 %v0_1000654c, 4
  %v2_100066c0 = inttoptr i32 %v1_100066c0 to i32*
  %v3_100066c0 = load i32, i32* %v2_100066c0, align 4
  store i32 %v3_100066c0, i32* @r3, align 4
  %v3_100066c4 = icmp eq i32 %v3_100066c0, 0
  br i1 %v3_100066c4, label %dec_label_pc_100066d0, label %dec_label_pc_100066cc

dec_label_pc_100066cc:                            ; preds = %dec_label_pc_100066c0
  store i32 268461776, i32* @lr, align 4
  %v0_100066cc = call i32 @function_1000a1e8()
  %v0_100066d0.pre = load i32, i32* %r25.global-to-local, align 4
  br label %dec_label_pc_100066d0

dec_label_pc_100066d0:                            ; preds = %dec_label_pc_100066c0, %dec_label_pc_100066cc
  %v0_100066d0 = phi i32 [ %v0_1000654c, %dec_label_pc_100066c0 ], [ %v0_100066d0.pre, %dec_label_pc_100066cc ]
  store i32 %v0_100066d0, i32* @r3, align 4
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 268461788, i32* @lr, align 4
  %v0_100066d8 = call i32 @function_1000a1e8()
  br label %dec_label_pc_10006558

dec_label_pc_100066e0:                            ; preds = %dec_label_pc_10006610
  %v2_100066e0 = add i32 %v1_100066e0, %v0_10006644116
  store i32 %v2_100066e0, i32* %r10.global-to-local, align 4
  %v1_100066e4 = add i32 %v0_100066e4, 1
  store i32 %v1_100066e4, i32* %r9.global-to-local, align 4
  %v1_100065f8 = inttoptr i32 %v1_100066e4 to i8*
  %v2_100065f8 = load i8, i8* %v1_100065f8, align 1
  %v3_100065f8 = zext i8 %v2_100065f8 to i32
  store i32 %v3_100065f8, i32* %r0.global-to-local, align 4
  %v1_100065fc = xor i32 %v0_100065fc28, 1
  store i32 %v1_100065fc, i32* %r11.global-to-local, align 4
  %v3_10006600 = icmp eq i8 %v2_100065f8, 0
  br i1 %v3_10006600, label %dec_label_pc_10006644, label %dec_label_pc_10006610.preheader

dec_label_pc_100066ec:                            ; preds = %dec_label_pc_10006680
  %v2_100066ec = add i32 %v1_100066ec, %v0_100066b4130
  %v1_100066f0 = add i32 %v0_100066f0, 1
  store i32 %v1_100066f0, i32* %r9.global-to-local, align 4
  %v1_10006668 = inttoptr i32 %v1_100066f0 to i8*
  %v2_10006668 = load i8, i8* %v1_10006668, align 1
  %v3_10006668 = zext i8 %v2_10006668 to i32
  store i32 %v3_10006668, i32* %r0.global-to-local, align 4
  %v1_1000666c = xor i32 %v0_1000666c38, 1
  store i32 %v1_1000666c, i32* %r11.global-to-local, align 4
  %v3_10006670 = icmp eq i8 %v2_10006668, 0
  %v1_10006674 = mul nuw nsw i32 %v3_10006668, 256
  store i32 %v1_10006674, i32* %r10.global-to-local, align 4
  br i1 %v3_10006670, label %dec_label_pc_100066b4, label %dec_label_pc_10006680.preheader

dec_label_pc_100066f8:                            ; preds = %dec_label_pc_10006644
  %v1_100066f8 = add i32 %v2_10006648, 2
  %v2_100066f8 = inttoptr i32 %v1_100066f8 to i16*
  %v3_100066f8 = load i16, i16* %v2_100066f8, align 2
  %v4_100066f8 = zext i16 %v3_100066f8 to i32
  store i32 %v4_100066f8, i32* %r0.global-to-local, align 4
  %v3_100066fc = icmp eq i16 %v3_100066f8, 1
  br i1 %v3_100066fc, label %dec_label_pc_10006704, label %dec_label_pc_1000665c

dec_label_pc_10006704:                            ; preds = %dec_label_pc_100066f8
  %v1_10006704 = add i32 %v2_10006648, 8
  %v2_10006704 = inttoptr i32 %v1_10006704 to i16*
  %v3_10006704 = load i16, i16* %v2_10006704, align 2
  %v4_10006704 = zext i16 %v3_10006704 to i32
  store i32 %v4_10006704, i32* %r0.global-to-local, align 4
  %v3_10006708 = icmp eq i16 %v3_10006704, 4
  br i1 %v3_10006708, label %dec_label_pc_10006710, label %dec_label_pc_10006764

dec_label_pc_10006710:                            ; preds = %dec_label_pc_10006704
  %v2_10006710 = inttoptr i32 %v1_10006650 to i8*
  %v3_10006710 = load i8, i8* %v2_10006710, align 1
  %v4_10006710 = zext i8 %v3_10006710 to i32
  store i32 %v4_10006710, i32* %r0.global-to-local, align 4
  store i32 %v4_10006710, i32* %stack_var_-4312, align 4
  %v1_10006718 = add i32 %v2_10006648, 11
  %v2_10006718 = inttoptr i32 %v1_10006718 to i8*
  %v3_10006718 = load i8, i8* %v2_10006718, align 1
  %v4_10006718 = zext i8 %v3_10006718 to i32
  store i32 %v4_10006718, i32* %r9.global-to-local, align 4
  %v1_10006720 = add i32 %v2_10006648, 12
  %v2_10006720 = inttoptr i32 %v1_10006720 to i8*
  %v3_10006720 = load i8, i8* %v2_10006720, align 1
  %v4_10006720 = zext i8 %v3_10006720 to i32
  store i32 %v4_10006720, i32* %r0.global-to-local, align 4
  %v1_10006728 = add i32 %v2_10006648, 13
  %v2_10006728 = inttoptr i32 %v1_10006728 to i8*
  %v3_10006728 = load i8, i8* %v2_10006728, align 1
  %v4_10006728 = zext i8 %v3_10006728 to i32
  store i32 %v4_10006728, i32* %r9.global-to-local, align 4
  %v0_10006730 = load i32, i32* %r25.global-to-local, align 4
  %v1_10006730 = inttoptr i32 %v0_10006730 to i8*
  %v2_10006730 = load i8, i8* %v1_10006730, align 1
  %v3_10006730 = zext i8 %v2_10006730 to i32
  %v1_10006734 = add i32 %v0_10006730, 4
  %v2_10006734 = inttoptr i32 %v1_10006734 to i32*
  %v3_10006734 = load i32, i32* %v2_10006734, align 4
  %v1_10006738 = mul nuw nsw i32 %v3_10006730, 4
  %v1_1000673c = add nuw nsw i32 %v1_10006738, 4
  store i32 268461892, i32* @lr, align 4
  %v3_10006740 = sext i8 %v3_10006728 to i32
  %v4_10006740 = call i32 @function_1000a2e8(i32 %v3_10006734, i32 %v1_1000673c, i32 %v3_10006740)
  %v0_10006744 = load i32, i32* %r25.global-to-local, align 4
  %v1_10006744 = inttoptr i32 %v0_10006744 to i8*
  %v2_10006744 = load i8, i8* %v1_10006744, align 1
  %v3_10006744 = zext i8 %v2_10006744 to i32
  %v3_10006748 = load i32, i32* %stack_var_-4312, align 4
  store i32 %v3_10006748, i32* %r0.global-to-local, align 4
  %v1_1000674c = add nuw nsw i32 %v3_10006744, 1
  store i32 %v1_1000674c, i32* %r11.global-to-local, align 4
  %v1_10006750 = mul nuw nsw i32 %v3_10006744, 4
  store i32 %v1_10006750, i32* %r9.global-to-local, align 4
  %v3_10006754 = add i32 %v1_10006750, %v4_10006740
  %v4_10006754 = inttoptr i32 %v3_10006754 to i32*
  store i32 %v3_10006748, i32* %v4_10006754, align 4
  %v0_10006758 = load i32, i32* %r11.global-to-local, align 4
  %v1_10006758 = trunc i32 %v0_10006758 to i8
  %v2_10006758 = load i32, i32* %r25.global-to-local, align 4
  %v3_10006758 = inttoptr i32 %v2_10006758 to i8*
  store i8 %v1_10006758, i8* %v3_10006758, align 1
  %v1_1000675c = load i32, i32* %r25.global-to-local, align 4
  %v2_1000675c = add i32 %v1_1000675c, 4
  %v3_1000675c = inttoptr i32 %v2_1000675c to i32*
  store i32 %v4_10006740, i32* %v3_1000675c, align 4
  %v0_10006760 = load i32, i32* @r31, align 4
  %v1_10006760 = add i32 %v0_10006760, 8
  %v2_10006760 = inttoptr i32 %v1_10006760 to i16*
  %v3_10006760 = load i16, i16* %v2_10006760, align 2
  %v4_10006760 = zext i16 %v3_10006760 to i32
  store i32 %v4_10006760, i32* %r0.global-to-local, align 4
  %v0_10006768.pre = load i32, i32* @r29, align 4
  %v0_100065d4.pre.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10006764

dec_label_pc_10006764:                            ; preds = %dec_label_pc_10006704, %dec_label_pc_10006710
  %v0_100065d4.pre = phi i32 [ %v0_100065d449, %dec_label_pc_10006704 ], [ %v0_100065d4.pre.pre, %dec_label_pc_10006710 ]
  %v0_10006768 = phi i32 [ %v1_10006650, %dec_label_pc_10006704 ], [ %v0_10006768.pre, %dec_label_pc_10006710 ]
  %v0_10006764 = phi i32 [ %v4_10006704, %dec_label_pc_10006704 ], [ %v4_10006760, %dec_label_pc_10006710 ]
  store i32 %v0_10006764, i32* %r0.global-to-local, align 4
  %v2_10006768 = add i32 %v0_10006764, %v0_10006768
  br label %dec_label_pc_100065d4.backedge

dec_label_pc_10006304.preheader.thread:           ; preds = %dec_label_pc_10006260
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_100063041355 = or i32 %v2_100062cc, 1
  store i32 %v1_100063041355, i32* %r11.global-to-local, align 4
  store i32 0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10006334

; uselistorder directives
  uselistorder i32 %v1_10006750, { 1, 0 }
  uselistorder i32 %v4_10006740, { 1, 0 }
  uselistorder i32 %v1_1000666c, { 1, 0 }
  uselistorder i8 %v2_10006668, { 2, 3, 1, 0 }
  uselistorder i32 %v1_100066f0, { 1, 2, 0 }
  uselistorder i32 %v2_100066ec, { 1, 0 }
  uselistorder i32 %v1_100065fc, { 1, 0 }
  uselistorder i32 %v3_100065f8, { 1, 0 }
  uselistorder i8 %v2_100065f8, { 2, 3, 1, 0 }
  uselistorder i32 %v1_100066e4, { 1, 2, 0 }
  uselistorder i32 %v2_100066e0, { 2, 1, 0 }
  uselistorder i32 %v1_100065dc, { 1, 0, 2 }
  uselistorder i8 %v2_100066a0, { 2, 3, 0, 1 }
  uselistorder i32 %v2_1000669c, { 1, 2, 0 }
  uselistorder i32 %v0_1000666c38, { 2, 0, 1 }
  uselistorder i32 %v0_100066b4130, { 1, 0 }
  uselistorder i32 %v1_10006674128, { 1, 0 }
  uselistorder i32 %v1_10006650, { 3, 4, 2, 0, 1, 5, 6 }
  uselistorder i32 %v3_10006630, { 1, 0 }
  uselistorder i8 %v2_10006630, { 2, 3, 0, 1 }
  uselistorder i32 %v2_1000662c, { 1, 2, 0 }
  uselistorder i32 %v0_100065fc28, { 2, 0, 1 }
  uselistorder i32 %v0_10006644116, { 1, 0 }
  uselistorder i32 %v0_10006648, { 2, 0, 1, 3 }
  uselistorder i32 %v1_100065dc9, { 2, 1, 0 }
  uselistorder i32 %v0_1000654c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1000653c, { 1, 0 }
  uselistorder i32 %v1_100064e8, { 1, 0 }
  uselistorder i32 %v4_100064e4, { 1, 0 }
  uselistorder i32 %v1_100064e4, { 1, 2, 0 }
  uselistorder i32 %v3_100064e0, { 2, 1, 0 }
  uselistorder i32 %v1_10006494, { 1, 0 }
  uselistorder i32 %v0_10006494, { 1, 0 }
  uselistorder i32 %v1_10006484, { 1, 0 }
  uselistorder i32 %v1_10006480, { 1, 0 }
  uselistorder i8 %v2_1000630c, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10006308, { 1, 0 }
  uselistorder i32 %v0_10006300, { 0, 3, 2, 1 }
  uselistorder i32 %v1_100062d0, { 0, 2, 1 }
  uselistorder i32 %v2_100062cc, { 2, 0, 1, 4, 3, 5 }
  uselistorder i32 %v0_10006268, { 1, 0 }
  uselistorder i16* %stack_var_-2108, { 1, 0 }
  uselistorder i16 %tmp60, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 9, 6, 7, 8, 10, 0, 11, 12, 16, 13, 21, 22, 14, 15, 17, 18, 20, 19 }
  uselistorder i32* %r28.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r25.global-to-local, { 2, 3, 5, 4, 0, 1, 6, 7 }
  uselistorder i32* %r11.global-to-local, { 1, 2, 3, 5, 7, 4, 15, 6, 14, 8, 9, 10, 12, 13, 11, 0 }
  uselistorder i32* %r10.global-to-local, { 2, 0, 1, 11, 3, 4, 5, 6, 8, 7, 9, 10 }
  uselistorder i32* %r0.global-to-local, { 4, 1, 2, 3, 5, 6, 7, 8, 10, 13, 14, 9, 30, 11, 12, 29, 0, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28 }
  uselistorder i32* %ctr.global-to-local, { 1, 2, 8, 9, 3, 4, 6, 5, 0, 7 }
  uselistorder i8 -65, { 2, 0, 3, 1 }
  uselistorder i32 65535, { 52, 53, 19, 20, 54, 55, 9, 8, 7, 56, 57, 21, 22, 23, 10, 11, 58, 24, 59, 25, 60, 0, 12, 61, 62, 26, 27, 28, 63, 64, 65, 66, 67, 68, 29, 30, 1, 13, 69, 70, 31, 32, 33, 34, 2, 14, 71, 72, 35, 36, 37, 38, 39, 73, 15, 40, 41, 74, 16, 42, 43, 75, 76, 77, 78, 79, 80, 44, 45, 3, 17, 81, 82, 5, 46, 47, 48, 4, 18, 83, 84, 6, 49, 50, 51 }
  uselistorder i32 (i32)* @function_1000a914, { 6, 10, 9, 8, 7, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10009d68, { 4, 8, 7, 6, 5, 3, 2, 1, 0 }
  uselistorder i16 1, { 2, 3, 0, 1, 4 }
  uselistorder i32 53, { 1, 0 }
  uselistorder label %dec_label_pc_10006764, { 1, 0 }
  uselistorder label %dec_label_pc_100066d0, { 1, 0 }
  uselistorder label %dec_label_pc_100065d4.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_100066b4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10006680, { 1, 0 }
  uselistorder label %dec_label_pc_10006680.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10006644, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10006610, { 1, 0 }
  uselistorder label %dec_label_pc_10006610.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_100065ec, { 1, 0 }
  uselistorder label %dec_label_pc_10006558, { 1, 0 }
  uselistorder label %dec_label_pc_10006544, { 4, 5, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_10006524, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1000647c.dec_label_pc_1000647c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_100063f8, { 1, 0 }
  uselistorder label %dec_label_pc_10006334, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000630c, { 1, 0 }
}

define i32 @function_1000677c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000677c:
  %v3_10006790 = load i32, i32* @global_var_1001c288.122, align 4
  store i32 268461976, i32* @lr, align 4
  %v2_10006794 = call i32 @function_100091ec(i32 %v3_10006790, i32 9)
  ret i32 %v2_10006794
}

define i32 @function_100067a8() local_unnamed_addr {
dec_label_pc_100067a8:
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_100067b0 = load i32, i32* @r31, align 4
  %v0_100067b4 = load i32, i32* @r3, align 4
  store i32 %v0_100067b4, i32* @r31, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  %v1_100067c4 = add i32 %v0_100067b4, 4
  %v2_100067c4 = inttoptr i32 %v1_100067c4 to i32*
  %v3_100067c4 = load i32, i32* %v2_100067c4, align 4
  %v3_100067cc = icmp eq i32 %v3_100067c4, -1
  br i1 %v3_100067cc, label %dec_label_pc_100067e4, label %dec_label_pc_100067e0

dec_label_pc_100067e0:                            ; preds = %dec_label_pc_100067a8
  store i32 268462052, i32* @lr, align 4
  %v0_100067e0 = call i32 @function_100090cc()
  br label %dec_label_pc_100067e4

dec_label_pc_100067e4:                            ; preds = %dec_label_pc_100067a8, %dec_label_pc_100067e0
  store i32 268462068, i32* @lr, align 4
  %v3_100067f0 = call i32 @function_10009e1c(i32 2, i32 1, i32 0)
  store i32 356, i32* @r4, align 4
  %v0_100067fc = load i32, i32* @r31, align 4
  %v1_100067fc = add i32 %v0_100067fc, 28
  store i32 %v1_100067fc, i32* @r3, align 4
  %v3_10006800 = icmp eq i32 %v3_100067f0, -1
  %v2_10006804 = add i32 %v0_100067fc, 4
  %v3_10006804 = inttoptr i32 %v2_10006804 to i32*
  store i32 %v3_100067f0, i32* %v3_10006804, align 4
  br i1 %v3_10006800, label %dec_label_pc_100067e4.dec_label_pc_1000687c_crit_edge, label %dec_label_pc_1000680c

dec_label_pc_100067e4.dec_label_pc_1000687c_crit_edge: ; preds = %dec_label_pc_100067e4
  %v0_10006890.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000687c

dec_label_pc_1000680c:                            ; preds = %dec_label_pc_100067e4
  %v0_1000680c = load i32, i32* %r29.global-to-local, align 4
  %v1_1000680c = load i32, i32* @r31, align 4
  %v2_1000680c = add i32 %v1_1000680c, 24
  %v3_1000680c = inttoptr i32 %v2_1000680c to i32*
  store i32 %v0_1000680c, i32* %v3_1000680c, align 4
  store i32 268462100, i32* @lr, align 4
  %v0_10006810 = call i32 @function_100089b4()
  %v0_10006814 = load i32, i32* @r31, align 4
  %v1_10006814 = add i32 %v0_10006814, 4
  %v2_10006814 = inttoptr i32 %v1_10006814 to i32*
  %v3_10006814 = load i32, i32* %v2_10006814, align 4
  store i32 %v3_10006814, i32* %r29.global-to-local, align 4
  store i32 3, i32* @r4, align 4
  store i32 268462124, i32* @lr, align 4
  %v2_10006828 = call i32 @function_10008fe4(i32 %v3_10006814)
  store i32 4, i32* @r4, align 4
  store i32 268462144, i32* @lr, align 4
  %v2_1000683c = call i32 @function_10008fe4(i32 %v3_10006814)
  %v3_10006844 = load i32, i32* @global_var_1001c27c.123, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  %v0_1000684c = load i32, i32* @r31, align 4
  %v2_10006854 = add i32 %v0_1000684c, 8
  %v3_10006854 = inttoptr i32 %v2_10006854 to i32*
  store i32 %v3_10006844, i32* %v3_10006854, align 4
  %v0_1000685c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000685c = load i32, i32* @r31, align 4
  %v2_1000685c = add i32 %v1_1000685c, 12
  %v3_1000685c = inttoptr i32 %v2_1000685c to i32*
  store i32 %v0_1000685c, i32* %v3_1000685c, align 4
  %v0_10006864 = load i32, i32* @r31, align 4
  %v1_10006864 = add i32 %v0_10006864, 4
  %v2_10006864 = inttoptr i32 %v1_10006864 to i32*
  %v3_10006864 = load i32, i32* %v2_10006864, align 4
  store i32 %v3_10006864, i32* @r3, align 4
  %v1_10006868 = add i32 %v0_10006864, 16
  %v2_10006868 = inttoptr i32 %v1_10006868 to i32*
  %v3_10006868 = load i32, i32* %v2_10006868, align 4
  store i32 %v3_10006868, i32* %r9.global-to-local, align 4
  store i32 268462204, i32* @lr, align 4
  %v0_10006878 = call i32 @function_10009c1c()
  br label %dec_label_pc_1000687c

dec_label_pc_1000687c:                            ; preds = %dec_label_pc_100067e4.dec_label_pc_1000687c_crit_edge, %dec_label_pc_1000680c
  %v0_10006890 = phi i32 [ %v0_10006890.pre, %dec_label_pc_100067e4.dec_label_pc_1000687c_crit_edge ], [ %v0_10006878, %dec_label_pc_1000680c ]
  store i32 %v0_100067b0, i32* @r31, align 4
  ret i32 %v0_10006890

; uselistorder directives
  uselistorder i32 ()* @function_100089b4, { 8, 7, 2, 1, 0, 6, 5, 4, 3 }
  uselistorder label %dec_label_pc_1000687c, { 1, 0 }
  uselistorder label %dec_label_pc_100067e4, { 1, 0 }
}

define i32 @function_10006894(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10006894:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10006898 = load i32, i32* @lr, align 4
  store i32 %v0_10006898, i32* %r0.global-to-local, align 4
  %v3_100068a4 = load i32, i32* @global_var_1001c270.124, align 4
  %v1_100068b0 = mul i32 %v3_100068a4, 16
  store i32 %v1_100068b0, i32* %r9.global-to-local, align 4
  %v0_100068b4 = load i32, i32* @r28, align 4
  %v3_100068bc = load i32, i32* @global_var_1001c274.125, align 4
  store i32 %arg2, i32* %r23.global-to-local, align 4
  %v1_100068c8 = add i32 %v1_100068b0, 16
  %v0_100068e0 = load i32, i32* @r29, align 4
  %v0_100068e4 = load i32, i32* @r30, align 4
  store i32 268462320, i32* @lr, align 4
  %v3_100068ec = call i32 @function_1000a2e8(i32 %v3_100068bc, i32 %v1_100068c8, i32 %v1_100068b0)
  store i32 %v3_100068ec, i32* %r25.global-to-local, align 4
  %v0_100068f4 = load i32, i32* @r28, align 4
  store i32 %v3_100068ec, i32* @global_var_1001c274.125, align 4
  %v3_100068fc = load i32, i32* @global_var_1001c270.124, align 4
  store i32 %v3_100068fc, i32* %r24.global-to-local, align 4
  store i32 268462340, i32* @lr, align 4
  %v1_10006900 = inttoptr i32 %v0_100068f4 to i8*
  %v2_10006900 = call i32 @function_1000890c(i8* %v1_10006900)
  %sext = mul i32 %v2_10006900, 16777216
  %v1_10006904 = sdiv i32 %sext, 16777216
  %v2_10006904 = add nsw i32 %v1_10006904, 1
  store i32 %v2_10006904, i32* @r29, align 4
  store i32 %v1_10006904, i32* @r30, align 4
  store i32 %v2_10006904, i32* @r3, align 4
  store i32 268462356, i32* @lr, align 4
  %v0_10006910 = call i32 @function_1000a020()
  %v0_10006914 = load i32, i32* @r28, align 4
  %v0_10006918 = load i32, i32* @r29, align 4
  store i32 %v0_10006910, i32* %r31.global-to-local, align 4
  store i32 268462372, i32* @lr, align 4
  %v3_10006920 = call i32 @function_10008990(i32 %v0_10006914, i32 %v0_10006918, i32 %v0_10006918)
  %v0_10006924 = load i32, i32* @r30, align 4
  %tmp21 = icmp slt i32 %v0_10006924, 1
  %extract.t6 = trunc i32 %v0_10006924 to i8
  br i1 %tmp21, label %dec_label_pc_10006948, label %dec_label_pc_1000692c

dec_label_pc_1000692c:                            ; preds = %dec_label_pc_10006894
  store i32 %v0_10006924, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10006934

dec_label_pc_10006934:                            ; preds = %dec_label_pc_10006934, %dec_label_pc_1000692c
  %v1_1000693c = phi i32 [ %v1_10006940, %dec_label_pc_10006934 ], [ 0, %dec_label_pc_1000692c ]
  %v1_10006934 = load i32, i32* %r31.global-to-local, align 4
  %v2_10006934 = add i32 %v1_10006934, %v1_1000693c
  %v3_10006934 = inttoptr i32 %v2_10006934 to i8*
  %v4_10006934 = load i8, i8* %v3_10006934, align 1
  %v5_10006934 = zext i8 %v4_10006934 to i32
  %v1_10006938 = xor i32 %v5_10006934, 84
  store i32 %v1_10006938, i32* %r0.global-to-local, align 4
  %v3_1000693c = trunc i32 %v1_10006938 to i8
  store i8 %v3_1000693c, i8* %v3_10006934, align 1
  %v0_10006940 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006940 = add i32 %v0_10006940, 1
  store i32 %v1_10006940, i32* %r9.global-to-local, align 4
  %v0_10006944 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006944 = add i32 %v0_10006944, -1
  store i32 %v1_10006944, i32* %ctr.global-to-local, align 4
  %v2_10006944 = icmp eq i32 %v1_10006944, 0
  br i1 %v2_10006944, label %dec_label_pc_10006948.loopexit, label %dec_label_pc_10006934

dec_label_pc_10006948.loopexit:                   ; preds = %dec_label_pc_10006934
  %v0_10006960.pre = load i32, i32* @r30, align 4
  %extract.t = trunc i32 %v0_10006960.pre to i8
  br label %dec_label_pc_10006948

dec_label_pc_10006948:                            ; preds = %dec_label_pc_10006948.loopexit, %dec_label_pc_10006894
  %v0_10006960.off0 = phi i8 [ %extract.t, %dec_label_pc_10006948.loopexit ], [ %extract.t6, %dec_label_pc_10006894 ]
  %v3_10006948 = load i32, i32* @global_var_1001c270.124, align 4
  %v0_1000694c = load i32, i32* %r23.global-to-local, align 4
  %v3_10006950 = load i32, i32* @global_var_1001c274.125, align 4
  %v1_10006954 = mul i32 %v3_10006948, 16
  %v2_10006958 = add i32 %v3_10006950, %v1_10006954
  store i32 %v2_10006958, i32* %r9.global-to-local, align 4
  %v0_1000695c = load i32, i32* %r24.global-to-local, align 4
  %v1_1000695c = mul i32 %v0_1000695c, 16
  store i32 %v1_1000695c, i32* %r0.global-to-local, align 4
  %v3_10006960 = add i32 %v2_10006958, 12
  %v4_10006960 = inttoptr i32 %v3_10006960 to i8*
  store i8 %v0_10006960.off0, i8* %v4_10006960, align 1
  %v0_10006964 = load i32, i32* %r31.global-to-local, align 4
  %v1_10006964 = load i32, i32* %r25.global-to-local, align 4
  %v2_10006964 = load i32, i32* %r0.global-to-local, align 4
  %v3_10006964 = add i32 %v2_10006964, %v1_10006964
  %v4_10006964 = inttoptr i32 %v3_10006964 to i32*
  store i32 %v0_10006964, i32* %v4_10006964, align 4
  %v3_10006968 = load i32, i32* @global_var_1001c270.124, align 4
  store i32 %v3_10006968, i32* @r30, align 4
  %v3_1000696c = load i32, i32* @global_var_1001c274.125, align 4
  store i32 %v3_1000696c, i32* %r25.global-to-local, align 4
  store i32 268462452, i32* @lr, align 4
  %v1_10006970 = inttoptr i32 %v0_1000694c to i8*
  %v2_10006970 = call i32 @function_1000890c(i8* %v1_10006970)
  %sext1 = mul i32 %v2_10006970, 16777216
  %v1_10006974 = sdiv i32 %sext1, 16777216
  %v2_10006974 = add nsw i32 %v1_10006974, 1
  store i32 %v2_10006974, i32* @r29, align 4
  store i32 %v1_10006974, i32* @r28, align 4
  store i32 %v2_10006974, i32* @r3, align 4
  store i32 268462468, i32* @lr, align 4
  %v0_10006980 = call i32 @function_1000a020()
  %v0_10006984 = load i32, i32* %r23.global-to-local, align 4
  %v0_10006988 = load i32, i32* @r29, align 4
  store i32 %v0_10006980, i32* %r31.global-to-local, align 4
  store i32 268462484, i32* @lr, align 4
  %v3_10006990 = call i32 @function_10008990(i32 %v0_10006984, i32 %v0_10006988, i32 %v0_10006988)
  %v0_10006994 = load i32, i32* @r28, align 4
  %tmp22 = icmp slt i32 %v0_10006994, 1
  %extract.t8 = trunc i32 %v0_10006994 to i8
  br i1 %tmp22, label %dec_label_pc_100069b8, label %dec_label_pc_1000699c

dec_label_pc_1000699c:                            ; preds = %dec_label_pc_10006948
  store i32 %v0_10006994, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100069a4

dec_label_pc_100069a4:                            ; preds = %dec_label_pc_100069a4, %dec_label_pc_1000699c
  %v1_100069ac = phi i32 [ %v1_100069b0, %dec_label_pc_100069a4 ], [ 0, %dec_label_pc_1000699c ]
  %v1_100069a4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100069a4 = add i32 %v1_100069a4, %v1_100069ac
  %v3_100069a4 = inttoptr i32 %v2_100069a4 to i8*
  %v4_100069a4 = load i8, i8* %v3_100069a4, align 1
  %v5_100069a4 = zext i8 %v4_100069a4 to i32
  %v1_100069a8 = xor i32 %v5_100069a4, 84
  store i32 %v1_100069a8, i32* %r0.global-to-local, align 4
  %v3_100069ac = trunc i32 %v1_100069a8 to i8
  store i8 %v3_100069ac, i8* %v3_100069a4, align 1
  %v0_100069b0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100069b0 = add i32 %v0_100069b0, 1
  store i32 %v1_100069b0, i32* %r9.global-to-local, align 4
  %v0_100069b4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100069b4 = add i32 %v0_100069b4, -1
  store i32 %v1_100069b4, i32* %ctr.global-to-local, align 4
  %v2_100069b4 = icmp eq i32 %v1_100069b4, 0
  br i1 %v2_100069b4, label %dec_label_pc_100069b8.loopexit, label %dec_label_pc_100069a4

dec_label_pc_100069b8.loopexit:                   ; preds = %dec_label_pc_100069a4
  %v0_100069cc.pre = load i32, i32* @r28, align 4
  %extract.t7 = trunc i32 %v0_100069cc.pre to i8
  br label %dec_label_pc_100069b8

dec_label_pc_100069b8:                            ; preds = %dec_label_pc_100069b8.loopexit, %dec_label_pc_10006948
  %v0_100069cc.off0 = phi i8 [ %extract.t7, %dec_label_pc_100069b8.loopexit ], [ %extract.t8, %dec_label_pc_10006948 ]
  %v3_100069b8 = load i32, i32* @global_var_1001c270.124, align 4
  %v3_100069c0 = load i32, i32* @global_var_1001c274.125, align 4
  %v1_100069c4 = mul i32 %v3_100069b8, 16
  %v2_100069c8 = or i32 %v1_100069c4, 13
  %v3_100069cc = add i32 %v2_100069c8, %v3_100069c0
  %v4_100069cc = inttoptr i32 %v3_100069cc to i8*
  store i8 %v0_100069cc.off0, i8* %v4_100069cc, align 1
  %v0_100069d0 = load i32, i32* @r30, align 4
  %v1_100069d0 = mul i32 %v0_100069d0, 16
  %v1_100069d4 = load i32, i32* %r25.global-to-local, align 4
  %v2_100069d4 = add i32 %v1_100069d4, %v1_100069d0
  store i32 %v2_100069d4, i32* %r9.global-to-local, align 4
  %v3_100069d8 = load i32, i32* @global_var_1001c270.124, align 4
  %v3_100069dc = load i32, i32* @global_var_1001c274.125, align 4
  %v1_100069e0 = mul i32 %v3_100069d8, 16
  %v3_100069e4 = load i16, i16* @global_var_1001c278.126, align 2
  %v4_100069e4 = zext i16 %v3_100069e4 to i32
  store i32 %v4_100069e4, i32* %r7.global-to-local, align 4
  %v2_100069e8 = add i32 %v3_100069dc, %v1_100069e0
  store i32 %v2_100069e8, i32* %r11.global-to-local, align 4
  store i32 %v0_10006898, i32* %r0.global-to-local, align 4
  %v1_100069f0 = add i32 %v3_100069d8, 1
  store i32 %v1_100069f0, i32* %r10.global-to-local, align 4
  store i32 ptrtoint (i16* @global_var_1001c278.126 to i32), i32* %r8.global-to-local, align 4
  %v0_100069f8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100069f8 = add i32 %v2_100069d4, 4
  %v3_100069f8 = inttoptr i32 %v2_100069f8 to i32*
  store i32 %v0_100069f8, i32* %v3_100069f8, align 4
  %v0_10006a00 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10006a00, i32* @global_var_1001c270.124, align 4
  store i32 %v0_100068b4, i32* @r28, align 4
  store i32 %v0_100068e0, i32* @r29, align 4
  store i32 %v0_100068e4, i32* @r30, align 4
  %v0_10006a30 = load i32, i32* %r8.global-to-local, align 4
  %v1_10006a30 = trunc i32 %v0_10006a30 to i16
  %v2_10006a30 = load i32, i32* %r11.global-to-local, align 4
  %v3_10006a30 = add i32 %v2_10006a30, 10
  %v4_10006a30 = inttoptr i32 %v3_10006a30 to i16*
  store i16 %v1_10006a30, i16* %v4_10006a30, align 2
  %v0_10006a34 = load i32, i32* %r7.global-to-local, align 4
  %v1_10006a34 = trunc i32 %v0_10006a34 to i16
  %v2_10006a34 = load i32, i32* %r11.global-to-local, align 4
  %v3_10006a34 = add i32 %v2_10006a34, 8
  %v4_10006a34 = inttoptr i32 %v3_10006a34 to i16*
  store i16 %v1_10006a34, i16* %v4_10006a34, align 2
  %v0_10006a38 = load i32, i32* %r8.global-to-local, align 4
  %v1_10006a38 = trunc i32 %v0_10006a38 to i16
  store i16 %v1_10006a38, i16* @global_var_1001c278.126, align 2
  ret i32 %v3_10006990

; uselistorder directives
  uselistorder i32 %v3_100069d8, { 1, 0 }
  uselistorder i32 %v1_100069b4, { 1, 0 }
  uselistorder i32 %v1_100069b0, { 1, 0 }
  uselistorder i32 %v0_10006994, { 1, 0, 2 }
  uselistorder i32 %v1_10006944, { 1, 0 }
  uselistorder i32 %v1_10006940, { 1, 0 }
  uselistorder i32 %v0_10006924, { 1, 0, 2 }
  uselistorder i32 %v1_100068b0, { 2, 1, 0 }
  uselistorder i32* %r23.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i8*)* @function_1000890c, { 0, 1, 3, 4, 5, 6, 7, 28, 2, 22, 23, 24, 25, 26, 27, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32 (i32, i32, i32)* @function_1000a2e8, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_10006a40(i32 %arg1) local_unnamed_addr {
dec_label_pc_10006a40:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp51 = call i32 @__decompiler_undefined_function_0()
  %tmp52 = call i32 @__decompiler_undefined_function_0()
  %tmp53 = call i32 @__decompiler_undefined_function_0()
  %tmp54 = call i16 @__decompiler_undefined_function_1()
  %tmp55 = call i16 @__decompiler_undefined_function_1()
  %tmp56 = call i8 @__decompiler_undefined_function_2()
  %tmp57 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-1920 = alloca i32, align 4
  %stack_var_-1908 = alloca i32, align 4
  %stack_var_-1744 = alloca i32, align 4
  %stack_var_-1872 = alloca i32, align 4
  %stack_var_-1616 = alloca i32, align 4
  %stack_var_-1888 = alloca i32, align 4
  %stack_var_-1912 = alloca i32, align 4
  %stack_var_-1928 = alloca i32, align 4
  %stack_var_-1916 = alloca i64, align 8
  %v0_10006a40 = load i32, i32* @lr, align 4
  store i32 %v0_10006a40, i32* %r0.global-to-local, align 4
  %v0_10006a48 = call i32 @__asm_mfcr()
  store i32 %v0_10006a48, i32* %r3.global-to-local, align 4
  %v0_10006a80 = load i32, i32* @r27, align 4
  %v0_10006a84 = load i32, i32* @r28, align 4
  %v0_10006a88 = load i32, i32* @r29, align 4
  %v0_10006a8c = load i32, i32* @r30, align 4
  %v0_10006a94 = load i32, i32* %r0.global-to-local, align 4
  store i32 268462752, i32* @lr, align 4
  %v0_10006a9c = call i32 @function_10009114()
  store i32 %v0_10006a9c, i32* %r3.global-to-local, align 4
  %v1_10006aa0 = icmp slt i32 %v0_10006a9c, 0
  %v3_10006aa0 = icmp eq i32 %v0_10006a9c, 0
  store i1 %v1_10006aa0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006aa0, i1* %cr7_eq.global-to-local, align 1
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v0_10006a9c, i32* @global_var_1001c288.122, align 4
  %tmp97 = icmp slt i32 %v0_10006a9c, 1
  br i1 %tmp97, label %dec_label_pc_10006b10, label %dec_label_pc_10006ab0

dec_label_pc_10006ab0:                            ; preds = %dec_label_pc_10006b10, %dec_label_pc_10006a40
  store i32 %v0_10006a94, i32* %r0.global-to-local, align 4
  %v1_10006ac4 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10006a48)
  store i32 %v0_10006a80, i32* %r27.global-to-local, align 4
  store i32 %v0_10006a84, i32* @r28, align 4
  store i32 %v0_10006a88, i32* @r29, align 4
  store i32 %v0_10006a8c, i32* @r30, align 4
  ret i32 %v0_10006a9c

dec_label_pc_10006b10:                            ; preds = %dec_label_pc_10006a40
  %v1_10006b10 = icmp slt i32 %v0_10006a9c, -1
  %v3_10006b10 = icmp eq i32 %v0_10006a9c, -1
  store i1 %v1_10006b10, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006b10, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006b10, label %dec_label_pc_10006ab0, label %dec_label_pc_10006b18

dec_label_pc_10006b18:                            ; preds = %dec_label_pc_10006b10
  store i32 268462876, i32* @lr, align 4
  %v1_10006b18 = call i32 @function_10008c10(i32 %v0_10006a9c)
  store i32 %v1_10006b18, i32* %r3.global-to-local, align 4
  store i32 %v1_10006b18, i32* @global_var_1001c258.14, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006b28.127 to i32), i32* @lr, align 4
  %v1_10006b24 = call i32 @function_10005f8c(i32 %v1_10006b18)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268462896, i32* @lr, align 4
  %v0_10006b2c = call i32 @function_1000949c()
  store i32 %v0_10006b2c, i32* @global_var_1001c27c.123, align 4
  store i32 356, i32* %r3.global-to-local, align 4
  store i32 268462916, i32* @lr, align 4
  %v2_10006b40 = call i32 @function_1000a178(i32 356, i32 388)
  store i32 %v2_10006b40, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v2_10006b40, i32* @global_var_1001c280.128, align 4
  store i64 0, i64* %stack_var_-1916, align 8
  store i32 356, i32* %ctr.global-to-local, align 4
  store i32 %v2_10006b40, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_10006b6c = add i32 %v2_10006b40, 4
  store i32 %v1_10006b6c, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006b70

dec_label_pc_10006b70:                            ; preds = %dec_label_pc_10006b70.dec_label_pc_10006b70_crit_edge, %dec_label_pc_10006b18
  %v1_10006b78 = phi i32 [ %v1_10006b78.pre, %dec_label_pc_10006b70.dec_label_pc_10006b70_crit_edge ], [ %v1_10006b6c, %dec_label_pc_10006b18 ]
  %v0_10006b78 = phi i32 [ %v0_10006b78.pre, %dec_label_pc_10006b70.dec_label_pc_10006b70_crit_edge ], [ -1, %dec_label_pc_10006b18 ]
  %v0_10006b74 = phi i32 [ %v0_10006b88, %dec_label_pc_10006b70.dec_label_pc_10006b70_crit_edge ], [ 0, %dec_label_pc_10006b18 ]
  %v1_10006b70 = mul i32 %v0_10006b74, 388
  store i32 %v1_10006b70, i32* %r9.global-to-local, align 4
  %v1_10006b74 = add i32 %v0_10006b74, 1
  store i32 %v1_10006b74, i32* %r10.global-to-local, align 4
  %v2_10006b78 = inttoptr i32 %v1_10006b78 to i32*
  store i32 %v0_10006b78, i32* %v2_10006b78, align 4
  %v0_10006b7c = load i32, i32* %r11.global-to-local, align 4
  %v1_10006b7c = add i32 %v0_10006b7c, 388
  store i32 %v1_10006b7c, i32* %r11.global-to-local, align 4
  %v0_10006b80 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006b80 = load i32, i32* %r8.global-to-local, align 4
  %v0_10006b84 = load i32, i32* %r0.global-to-local, align 4
  %v2_10006b80 = add i32 %v0_10006b80, 12
  %v2_10006b84 = add i32 %v2_10006b80, %v1_10006b80
  %v3_10006b84 = inttoptr i32 %v2_10006b84 to i32*
  store i32 %v0_10006b84, i32* %v3_10006b84, align 4
  %v0_10006b88 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10006b88, i32* %r9.global-to-local, align 4
  %v0_10006b8c = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006b8c = add i32 %v0_10006b8c, -1
  store i32 %v1_10006b8c, i32* %ctr.global-to-local, align 4
  %v2_10006b8c = icmp eq i32 %v1_10006b8c, 0
  br i1 %v2_10006b8c, label %dec_label_pc_10006b90, label %dec_label_pc_10006b70.dec_label_pc_10006b70_crit_edge

dec_label_pc_10006b70.dec_label_pc_10006b70_crit_edge: ; preds = %dec_label_pc_10006b70
  %v0_10006b78.pre = load i32, i32* %r7.global-to-local, align 4
  %v1_10006b78.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006b70

dec_label_pc_10006b90:                            ; preds = %dec_label_pc_10006b70
  store i32 356, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i64 356, i64* %stack_var_-1916, align 8
  store i32 268463016, i32* @lr, align 4
  %v3_10006ba4 = call i32 @function_10009e1c(i32 2, i32 3, i32 6)
  %v4_10006ba4 = trunc i32 %v3_10006ba4 to i16
  store i32 %v3_10006ba4, i32* %r3.global-to-local, align 4
  %v2_10006ba8 = icmp slt i16 %v4_10006ba4, -1
  %v4_10006ba8 = icmp eq i16 %v4_10006ba4, -1
  store i1 %v2_10006ba8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006ba8, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10006ba4, i32* %r29.global-to-local, align 4
  store i32 %v3_10006ba4, i32* @global_var_1001c284.129, align 4
  br i1 %v4_10006ba8, label %dec_label_pc_100071b4, label %dec_label_pc_10006bbc

dec_label_pc_10006bbc:                            ; preds = %dec_label_pc_10006b90
  store i32 3, i32* @r4, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 268463052, i32* @lr, align 4
  %v1_10006bc8 = call i32 @function_10008fe4(i32 3)
  store i32 4, i32* @r4, align 4
  %v1_10006bd0 = or i32 %v1_10006bc8, 2048
  store i32 %v1_10006bd0, i32* %r5.global-to-local, align 4
  %v0_10006bd4 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10006bd4, i32* %r3.global-to-local, align 4
  store i32 268463072, i32* @lr, align 4
  %v2_10006bdc = call i32 @function_10008fe4(i32 %v0_10006bd4)
  %v3_10006be4 = load i32, i32* @global_var_1001c284.129, align 4
  store i32 %v3_10006be4, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  %v2_10006bf4 = ptrtoint i64* %stack_var_-1916 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i64 1, i64* %stack_var_-1916, align 8
  store i32 268463108, i32* @lr, align 4
  %v5_10006c00 = call i32 @function_10009de0(i32 %v3_10006be4, i32 0, i32 3, i32 %v2_10006bf4)
  store i32 %v5_10006c00, i32* %r3.global-to-local, align 4
  %v1_10006c04 = icmp slt i32 %v5_10006c00, 0
  %v3_10006c04 = icmp eq i32 %v5_10006c00, 0
  store i1 %v1_10006c04, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006c04, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006c04, label %dec_label_pc_10006c0c, label %dec_label_pc_100081cc

dec_label_pc_10006c0c:                            ; preds = %dec_label_pc_10006bbc, %dec_label_pc_10006c0c
  %v0_10006c0c = call i32 @function_10005f3c()
  store i32 %v0_10006c0c, i32* %r3.global-to-local, align 4
  %v1_10006c10 = urem i32 %v0_10006c0c, 65536
  store i32 %v1_10006c10, i32* @r20, align 4
  %v1_10006c14 = icmp ult i32 %v1_10006c10, 1023
  %v3_10006c14 = icmp eq i32 %v1_10006c10, 1023
  store i1 %v1_10006c14, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006c14, i1* %cr7_eq.global-to-local, align 1
  %tmp98 = icmp ult i32 %v1_10006c10, 1024
  br i1 %tmp98, label %dec_label_pc_10006c0c, label %dec_label_pc_10006c1c

dec_label_pc_10006c1c:                            ; preds = %dec_label_pc_10006c0c
  store i32 268566528, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r29.global-to-local, align 4
  %v3_10006c24 = load i32, i32* @global_var_1001c2f0.130, align 4
  store i32 %v3_10006c24, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001c2f0.130 to i32), i32* @r21, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001c304.131 to i32), i32* @r22, align 4
  %v1_10006c34 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10006c34, i32* %r0.global-to-local, align 4
  store i32 268500992, i32* %r28.global-to-local, align 4
  %v1_10006c3c = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10006c3c, i32* %r0.global-to-local, align 4
  store i32 40, i32* %r9.global-to-local, align 4
  store i32 %v1_10006c3c, i32* @global_var_1001c2f0.130, align 4
  store i32 ptrtoint (i32* @global_var_1000bb94.132 to i32), i32* @r28, align 4
  store i16 40, i16* bitcast (i32* @global_var_1001c2f2.133 to i16*), align 4
  %v0_10006c50 = call i32 @function_10005f3c()
  %v1_10006c50 = trunc i32 %v0_10006c50 to i16
  store i32 %v0_10006c50, i32* %r3.global-to-local, align 4
  %v3_10006c54 = load i32, i32* @global_var_1001c310.134, align 4
  store i32 %v3_10006c54, i32* %r11.global-to-local, align 4
  store i32 64, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r9.global-to-local, align 4
  store i8 64, i8* bitcast (i32* @global_var_1001c2f8.135 to i8*), align 4
  %v1_10006c64 = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  store i32 %v1_10006c64, i32* %r11.global-to-local, align 4
  store i32 23, i32* %r0.global-to-local, align 4
  %v0_10006c6c = load i32, i32* %r9.global-to-local, align 4
  %v1_10006c6c = trunc i32 %v0_10006c6c to i8
  store i8 %v1_10006c6c, i8* bitcast (i32* @global_var_1001c2f9.136 to i8*), align 4
  store i16 %v1_10006c50, i16* bitcast (i32* @global_var_1001c2f4.137 to i16*), align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1000bb90.138 to i32), i32* @r29, align 4
  store i32 %v1_10006c64, i32* @global_var_1001c310.134, align 4
  store i16 23, i16* @global_var_1001c306.139, align 2
  store i32 ptrtoint ([8 x i8]* @global_var_1000bb20.140 to i32), i32* @r27, align 4
  %v0_10006c8c = load i32, i32* @r20, align 4
  %v1_10006c8c = trunc i32 %v0_10006c8c to i16
  store i16 %v1_10006c8c, i16* bitcast (i32* @global_var_1001c304.131 to i16*), align 4
  %v2_10006c90 = ptrtoint i32* %stack_var_-1928 to i32
  store i32 %v2_10006c90, i32* @r15, align 4
  %v0_10006c94 = call i32 @function_10005f3c()
  %v1_10006c94 = trunc i32 %v0_10006c94 to i16
  %v0_10006c98 = load i32, i32* @r28, align 4
  store i16 %v1_10006c94, i16* bitcast (i32* @global_var_1001c312.141 to i16*), align 4
  store i32 4, i32* %r5.global-to-local, align 4
  %v0_10006ca4 = load i32, i32* @r29, align 4
  store i32 %v0_10006ca4, i32* %r3.global-to-local, align 4
  %v3_10006cac = load i32, i32* @global_var_1001c310.134, align 4
  %v1_10006cb0 = or i32 %v3_10006cac, 131072
  store i32 %v1_10006cb0, i32* %r0.global-to-local, align 4
  store i32 %v1_10006cb0, i32* @global_var_1001c310.134, align 4
  store i32 268463292, i32* @lr, align 4
  %v4_10006cb8 = call i32 @function_10006894(i32 %v0_10006ca4, i32 %v0_10006c98, i32 4)
  %v0_10006cc4 = load i32, i32* @r29, align 4
  store i32 %v0_10006cc4, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268463312, i32* @lr, align 4
  %v5_10006ccc = call i32 @function_10006894(i32 %v0_10006cc4, i32 ptrtoint ([5 x i8]* @global_var_1000bb0c.142 to i32), i32 8)
  %v0_10006cd8 = load i32, i32* @r29, align 4
  store i32 %v0_10006cd8, i32* %r3.global-to-local, align 4
  store i32 12, i32* %r5.global-to-local, align 4
  store i32 268463332, i32* @lr, align 4
  %v5_10006ce0 = call i32 @function_10006894(i32 %v0_10006cd8, i32 ptrtoint ([9 x i8]* @global_var_1000bb14.143 to i32), i32 12)
  %v0_10006ce4 = load i32, i32* @r28, align 4
  %v0_10006ce8 = load i32, i32* @r27, align 4
  store i32 %v0_10006ce8, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 268463348, i32* @lr, align 4
  %v4_10006cf0 = call i32 @function_10006894(i32 %v0_10006ce8, i32 %v0_10006ce4, i32 7)
  store i32 ptrtoint ([6 x i8]* @global_var_1000bb34.144 to i32), i32* @r28, align 4
  %v0_10006d04 = load i32, i32* @r29, align 4
  store i32 %v0_10006d04, i32* %r3.global-to-local, align 4
  store i32 12, i32* %r5.global-to-local, align 4
  store i32 268463376, i32* @lr, align 4
  %v5_10006d0c = call i32 @function_10006894(i32 %v0_10006d04, i32 ptrtoint ([9 x i8]* @global_var_1000bb28.145 to i32), i32 12)
  %v0_10006d10 = load i32, i32* @r28, align 4
  store i32 %v0_10006d10, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 268463392, i32* @lr, align 4
  %v5_10006d1c = call i32 @function_10006894(i32 %v0_10006d10, i32 %v0_10006d10, i32 10)
  %v0_10006d28 = load i32, i32* @r29, align 4
  store i32 %v0_10006d28, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r5.global-to-local, align 4
  store i32 268463412, i32* @lr, align 4
  %v5_10006d30 = call i32 @function_10006894(i32 %v0_10006d28, i32 ptrtoint ([6 x i8]* @global_var_1000bb3c.146 to i32), i32 9)
  store i32 ptrtoint ([8 x i8]* @global_var_1000bb44.147 to i32), i32* %r3.global-to-local, align 4
  store i32 14, i32* %r5.global-to-local, align 4
  store i32 268463432, i32* @lr, align 4
  %v4_10006d44 = call i32 @function_10006894(i32 ptrtoint ([8 x i8]* @global_var_1000bb44.147 to i32), i32 14, i32 14)
  %v0_10006d48 = load i32, i32* @r29, align 4
  store i32 %v0_10006d48, i32* %r3.global-to-local, align 4
  %v0_10006d4c = load i32, i32* @r27, align 4
  store i32 11, i32* %r5.global-to-local, align 4
  store i32 268463448, i32* @lr, align 4
  %v5_10006d54 = call i32 @function_10006894(i32 %v0_10006d48, i32 %v0_10006d4c, i32 11)
  %v0_10006d60 = load i32, i32* @r29, align 4
  store i32 %v0_10006d60, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r5.global-to-local, align 4
  store i32 268463468, i32* @lr, align 4
  %v4_10006d68 = call i32 @function_10006894(i32 %v0_10006d60, i32 ptrtoint (i32* @global_var_1000bb4c.148 to i32), i32 17)
  %v0_10006d70 = load i32, i32* @r29, align 4
  store i32 %v0_10006d70, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r5.global-to-local, align 4
  store i32 268463488, i32* @lr, align 4
  %v5_10006d7c = call i32 @function_10006894(i32 %v0_10006d70, i32 ptrtoint ([6 x i8]* @global_var_1000bb5c.149 to i32), i32 9)
  store i32 ptrtoint ([5 x i8]* @global_var_1000bb64.150 to i32), i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268463508, i32* @lr, align 4
  %v4_10006d90 = call i32 @function_10006894(i32 ptrtoint ([5 x i8]* @global_var_1000bb64.150 to i32), i32 8, i32 8)
  %v0_10006d9c = load i32, i32* @r27, align 4
  store i32 %v0_10006d9c, i32* %r3.global-to-local, align 4
  store i32 15, i32* %r5.global-to-local, align 4
  store i32 268463528, i32* @lr, align 4
  %v4_10006da4 = call i32 @function_10006894(i32 %v0_10006d9c, i32 ptrtoint (i32* @global_var_1000bb6c.151 to i32), i32 15)
  %v0_10006dac = load i32, i32* @r27, align 4
  store i32 %v0_10006dac, i32* %r3.global-to-local, align 4
  store i32 15, i32* %r5.global-to-local, align 4
  store i32 268463548, i32* @lr, align 4
  %v4_10006db8 = call i32 @function_10006894(i32 %v0_10006dac, i32 ptrtoint (i32* @global_var_1000bb78.152 to i32), i32 15)
  %v0_10006dc0 = load i32, i32* @r28, align 4
  store i32 %v0_10006dc0, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r5.global-to-local, align 4
  store i32 268463568, i32* @lr, align 4
  %v5_10006dcc = call i32 @function_10006894(i32 %v0_10006dc0, i32 ptrtoint ([5 x i8]* @global_var_1000bb84.153 to i32), i32 9)
  store i32 %v5_10006dcc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006dd0

dec_label_pc_10006dd0:                            ; preds = %dec_label_pc_10007418, %dec_label_pc_10006c1c
  %v3_10006dd4 = load i32, i32* @global_var_1001c27c.123, align 4
  store i32 %v3_10006dd4, i32* @r31, align 4
  %v0_10006dd8 = load i32, i32* @r23, align 4
  %v2_10006dd8 = icmp slt i32 %v0_10006dd8, %v3_10006dd4
  %v4_10006dd8 = icmp eq i32 %v0_10006dd8, %v3_10006dd4
  store i1 %v2_10006dd8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006dd8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10006dd8, label %dec_label_pc_10006ff8, label %dec_label_pc_10006de0

dec_label_pc_10006de0:                            ; preds = %dec_label_pc_10006dd0
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10006de4 = ptrtoint i32* %stack_var_-1888 to i32
  store i32 %v2_10006de4, i32* %r28.global-to-local, align 4
  store i64 0, i64* %stack_var_-1916, align 8
  store i32 0, i32* @r30, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10006df4

dec_label_pc_10006df4:                            ; preds = %dec_label_pc_10006f24.dec_label_pc_10006df4_crit_edge, %dec_label_pc_10006de0
  %v0_10006df4 = phi i32 [ %v0_10006df4.pre, %dec_label_pc_10006f24.dec_label_pc_10006df4_crit_edge ], [ 0, %dec_label_pc_10006de0 ]
  store i32 %v0_10006df4, i32* %stack_var_-1888, align 4
  %v0_10006e04 = call i32 @function_10005f3c()
  %v1_10006e04 = trunc i32 %v0_10006e04 to i16
  store i32 %v0_10006e04, i32* %r3.global-to-local, align 4
  store i16 %v1_10006e04, i16* bitcast (i32* @global_var_1001c2f4.137 to i16*), align 4
  %v3_10006e10 = load i32, i32* @global_var_1001c258.14, align 4
  store i32 %v3_10006e10, i32* %r0.global-to-local, align 4
  store i32 %v3_10006e10, i32* @global_var_1001c2fc.154, align 4
  br label %dec_label_pc_10006e18.preheader

dec_label_pc_10006e18.preheader:                  ; preds = %dec_label_pc_10006df4, %dec_label_pc_100071bc
  br label %dec_label_pc_10006e18

dec_label_pc_10006e18:                            ; preds = %dec_label_pc_10007258, %dec_label_pc_1000724c, %dec_label_pc_10007240, %dec_label_pc_10007234, %dec_label_pc_10007228, %dec_label_pc_10007220, %dec_label_pc_10007218, %dec_label_pc_10007210, %dec_label_pc_10007204, %dec_label_pc_100071f0, %dec_label_pc_100071e4, %dec_label_pc_100071d0, %dec_label_pc_10006f1c, %dec_label_pc_10006f14, %dec_label_pc_10006f0c, %dec_label_pc_10006f04, %dec_label_pc_10006efc, %dec_label_pc_10006ef4, %dec_label_pc_10006eec, %dec_label_pc_10006ee4, %dec_label_pc_10006edc, %dec_label_pc_10006ed4, %dec_label_pc_10006ecc, %dec_label_pc_10006ebc, %dec_label_pc_10006e8c, %dec_label_pc_10006e5c, %dec_label_pc_10006e54, %dec_label_pc_10006e44, %dec_label_pc_10006e3c, %dec_label_pc_10006e34, %dec_label_pc_10006e18, %dec_label_pc_10006e18.preheader
  %v0_10006e18 = call i32 @function_10005f3c()
  store i32 %v0_10006e18, i32* %r3.global-to-local, align 4
  %v1_10006e1c = urem i32 %v0_10006e18, 256
  store i32 %v1_10006e1c, i32* %r11.global-to-local, align 4
  %v1_10006e20 = udiv i32 %v0_10006e18, 16777216
  store i32 %v1_10006e20, i32* %r10.global-to-local, align 4
  %v1_10006e24 = icmp ult i32 %v1_10006e1c, 127
  %v3_10006e24 = icmp eq i32 %v1_10006e1c, 127
  store i1 %v1_10006e24, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006e24, i1* %cr7_eq.global-to-local, align 1
  %v1_10006e28 = call i32 @__asm_rlwinm(i32 %v0_10006e18, i32 24, i32 24, i32 31)
  store i32 %v1_10006e28, i32* @r9, align 4
  %v1_10006e2c = call i32 @__asm_rlwinm(i32 %v0_10006e18, i32 16, i32 24, i32 31)
  store i32 %v1_10006e2c, i32* %r3.global-to-local, align 4
  %v0_10006e30 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10006e30, label %dec_label_pc_10006e18, label %dec_label_pc_10006e34

dec_label_pc_10006e34:                            ; preds = %dec_label_pc_10006e18
  %v0_10006e34 = load i32, i32* %r11.global-to-local, align 4
  %v1_10006e34 = icmp slt i32 %v0_10006e34, 0
  %v3_10006e34 = icmp eq i32 %v0_10006e34, 0
  store i1 %v1_10006e34, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006e34, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006e34, label %dec_label_pc_10006e18, label %dec_label_pc_10006e3c

dec_label_pc_10006e3c:                            ; preds = %dec_label_pc_10006e34
  %v1_10006e3c = icmp slt i32 %v0_10006e34, 3
  %v3_10006e3c = icmp eq i32 %v0_10006e34, 3
  store i1 %v1_10006e3c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006e3c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006e3c, label %dec_label_pc_10006e18, label %dec_label_pc_10006e44

dec_label_pc_10006e44:                            ; preds = %dec_label_pc_10006e3c
  %v1_10006e44 = add i32 %v0_10006e34, 241
  %v1_10006e48 = urem i32 %v1_10006e44, 256
  store i32 %v1_10006e48, i32* %r0.global-to-local, align 4
  %v1_10006e4c = icmp eq i32 %v1_10006e48, 0
  %v3_10006e4c = icmp eq i32 %v1_10006e48, 1
  store i1 %v1_10006e4c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006e4c, i1* %cr7_eq.global-to-local, align 1
  %tmp99 = or i32 %v1_10006e48, 1
  %tmp100 = icmp eq i32 %tmp99, 1
  br i1 %tmp100, label %dec_label_pc_10006e18, label %dec_label_pc_10006e54

dec_label_pc_10006e54:                            ; preds = %dec_label_pc_10006e44
  %v1_10006e54 = icmp slt i32 %v0_10006e34, 56
  %v3_10006e54 = icmp eq i32 %v0_10006e34, 56
  store i1 %v1_10006e54, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006e54, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006e54, label %dec_label_pc_10006e18, label %dec_label_pc_10006e5c

dec_label_pc_10006e5c:                            ; preds = %dec_label_pc_10006e54
  %v1_10006e5c = icmp slt i32 %v0_10006e34, 10
  %v3_10006e5c = icmp eq i32 %v0_10006e34, 10
  store i1 %v1_10006e5c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006e5c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006e5c, label %dec_label_pc_10006e18, label %dec_label_pc_10006e64

dec_label_pc_10006e64:                            ; preds = %dec_label_pc_10006e5c
  %v1_10006e64 = icmp slt i32 %v0_10006e34, 192
  %v3_10006e64 = icmp eq i32 %v0_10006e34, 192
  store i1 %v1_10006e64, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006e64, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006e64, label %dec_label_pc_100071bc, label %dec_label_pc_10006e6c

dec_label_pc_10006e6c:                            ; preds = %dec_label_pc_10006e64
  %v1_10006e6c = icmp slt i32 %v0_10006e34, 172
  %v3_10006e6c = icmp eq i32 %v0_10006e34, 172
  store i1 %v1_10006e6c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006e6c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006e6c, label %dec_label_pc_100071c8, label %dec_label_pc_10006e74

dec_label_pc_10006e74:                            ; preds = %dec_label_pc_10006e6c
  %v1_10006e74 = icmp slt i32 %v0_10006e34, 100
  %v3_10006e74 = icmp eq i32 %v0_10006e34, 100
  store i1 %v1_10006e74, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006e74, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006e74, label %dec_label_pc_100071dc, label %dec_label_pc_10006e7c

dec_label_pc_10006e7c:                            ; preds = %dec_label_pc_10006e74
  %v1_10006e7c = icmp slt i32 %v0_10006e34, 169
  %v3_10006e7c = icmp eq i32 %v0_10006e34, 169
  store i1 %v1_10006e7c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006e7c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006e7c, label %dec_label_pc_100071f0, label %dec_label_pc_10006e84

dec_label_pc_10006e84:                            ; preds = %dec_label_pc_10006e7c
  %v1_10006e84 = icmp slt i32 %v0_10006e34, 198
  %v3_10006e84 = icmp eq i32 %v0_10006e34, 198
  store i1 %v1_10006e84, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006e84, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006e84, label %dec_label_pc_100071fc, label %dec_label_pc_10006e8c

dec_label_pc_10006e8c:                            ; preds = %dec_label_pc_10006e84
  %v1_10006e8c = icmp ult i32 %v0_10006e34, 223
  %v2_10006e8c = icmp ugt i32 %v0_10006e34, 223
  %v3_10006e8c = icmp eq i32 %v0_10006e34, 223
  store i1 %v1_10006e8c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006e8c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10006e8c, label %dec_label_pc_10006e18, label %dec_label_pc_10006e94

dec_label_pc_10006e94:                            ; preds = %dec_label_pc_10006e8c
  %v1_10006e94 = icmp slt i32 %v0_10006e34, 106
  %v3_10006e94 = icmp eq i32 %v0_10006e34, 106
  store i1 %v1_10006e94, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006e94, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006e94, label %dec_label_pc_10007210, label %dec_label_pc_10006e9c

dec_label_pc_10006e9c:                            ; preds = %dec_label_pc_10006e94
  %v1_10006e9c = icmp slt i32 %v0_10006e34, 150
  %v3_10006e9c = icmp eq i32 %v0_10006e34, 150
  store i1 %v1_10006e9c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006e9c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006e9c, label %dec_label_pc_10007234, label %dec_label_pc_10006ea4

dec_label_pc_10006ea4:                            ; preds = %dec_label_pc_10006e9c
  %v1_10006ea4 = icmp slt i32 %v0_10006e34, 49
  %v3_10006ea4 = icmp eq i32 %v0_10006e34, 49
  store i1 %v1_10006ea4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006ea4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006ea4, label %dec_label_pc_10007240, label %dec_label_pc_10006eac

dec_label_pc_10006eac:                            ; preds = %dec_label_pc_10006ea4
  %v1_10006eac = icmp slt i32 %v0_10006e34, 178
  %v3_10006eac = icmp eq i32 %v0_10006e34, 178
  store i1 %v1_10006eac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006eac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006eac, label %dec_label_pc_1000724c, label %dec_label_pc_10006eb4

dec_label_pc_10006eb4:                            ; preds = %dec_label_pc_10006eac
  %v1_10006eb4 = icmp slt i32 %v0_10006e34, 160
  %v3_10006eb4 = icmp eq i32 %v0_10006e34, 160
  store i1 %v1_10006eb4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006eb4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006eb4, label %dec_label_pc_10007258, label %dec_label_pc_10006ebc

dec_label_pc_10006ebc:                            ; preds = %dec_label_pc_10006eb4
  %v1_10006ebc = add i32 %v0_10006e34, 250
  %v1_10006ec0 = urem i32 %v1_10006ebc, 256
  store i32 %v1_10006ec0, i32* %r0.global-to-local, align 4
  %v1_10006ec4 = icmp eq i32 %v1_10006ec0, 0
  %v3_10006ec4 = icmp eq i32 %v1_10006ec0, 1
  store i1 %v1_10006ec4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006ec4, i1* %cr7_eq.global-to-local, align 1
  %tmp101 = or i32 %v1_10006ec0, 1
  %tmp102 = icmp eq i32 %tmp101, 1
  br i1 %tmp102, label %dec_label_pc_10006e18, label %dec_label_pc_10006ecc

dec_label_pc_10006ecc:                            ; preds = %dec_label_pc_10006ebc
  %v1_10006ecc = icmp slt i32 %v0_10006e34, 11
  %v3_10006ecc = icmp eq i32 %v0_10006e34, 11
  store i1 %v1_10006ecc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006ecc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006ecc, label %dec_label_pc_10006e18, label %dec_label_pc_10006ed4

dec_label_pc_10006ed4:                            ; preds = %dec_label_pc_10006ecc
  %v1_10006ed4 = icmp slt i32 %v0_10006e34, 21
  %v3_10006ed4 = icmp eq i32 %v0_10006e34, 21
  store i1 %v1_10006ed4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006ed4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006ed4, label %dec_label_pc_10006e18, label %dec_label_pc_10006edc

dec_label_pc_10006edc:                            ; preds = %dec_label_pc_10006ed4
  %v1_10006edc = icmp slt i32 %v0_10006e34, 22
  %v3_10006edc = icmp eq i32 %v0_10006e34, 22
  store i1 %v1_10006edc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006edc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006edc, label %dec_label_pc_10006e18, label %dec_label_pc_10006ee4

dec_label_pc_10006ee4:                            ; preds = %dec_label_pc_10006edc
  %v1_10006ee4 = icmp slt i32 %v0_10006e34, 26
  %v3_10006ee4 = icmp eq i32 %v0_10006e34, 26
  store i1 %v1_10006ee4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006ee4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006ee4, label %dec_label_pc_10006e18, label %dec_label_pc_10006eec

dec_label_pc_10006eec:                            ; preds = %dec_label_pc_10006ee4
  %v1_10006eec = icmp slt i32 %v0_10006e34, 28
  %v3_10006eec = icmp eq i32 %v0_10006e34, 28
  store i1 %v1_10006eec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006eec, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006eec, label %dec_label_pc_10006e18, label %dec_label_pc_10006ef4

dec_label_pc_10006ef4:                            ; preds = %dec_label_pc_10006eec
  %v1_10006ef4 = icmp slt i32 %v0_10006e34, 29
  %v3_10006ef4 = icmp eq i32 %v0_10006e34, 29
  store i1 %v1_10006ef4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006ef4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006ef4, label %dec_label_pc_10006e18, label %dec_label_pc_10006efc

dec_label_pc_10006efc:                            ; preds = %dec_label_pc_10006ef4
  %v1_10006efc = icmp slt i32 %v0_10006e34, 30
  %v3_10006efc = icmp eq i32 %v0_10006e34, 30
  store i1 %v1_10006efc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006efc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006efc, label %dec_label_pc_10006e18, label %dec_label_pc_10006f04

dec_label_pc_10006f04:                            ; preds = %dec_label_pc_10006efc
  %v1_10006f04 = icmp slt i32 %v0_10006e34, 33
  %v3_10006f04 = icmp eq i32 %v0_10006e34, 33
  store i1 %v1_10006f04, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006f04, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006f04, label %dec_label_pc_10006e18, label %dec_label_pc_10006f0c

dec_label_pc_10006f0c:                            ; preds = %dec_label_pc_10006f04
  %v1_10006f0c = icmp slt i32 %v0_10006e34, 55
  %v3_10006f0c = icmp eq i32 %v0_10006e34, 55
  store i1 %v1_10006f0c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006f0c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006f0c, label %dec_label_pc_10006e18, label %dec_label_pc_10006f14

dec_label_pc_10006f14:                            ; preds = %dec_label_pc_10006f0c
  %v1_10006f14 = icmp slt i32 %v0_10006e34, 214
  %v3_10006f14 = icmp eq i32 %v0_10006e34, 214
  store i1 %v1_10006f14, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006f14, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006f14, label %dec_label_pc_10006e18, label %dec_label_pc_10006f1c

dec_label_pc_10006f1c:                            ; preds = %dec_label_pc_10006f14
  %v1_10006f1c = icmp slt i32 %v0_10006e34, 215
  %v3_10006f1c = icmp eq i32 %v0_10006e34, 215
  store i1 %v1_10006f1c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006f1c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006f1c, label %dec_label_pc_10006e18, label %dec_label_pc_10006f1c.dec_label_pc_10006f24.loopexit_crit_edge

dec_label_pc_10006f1c.dec_label_pc_10006f24.loopexit_crit_edge: ; preds = %dec_label_pc_10006f1c
  %v0_10006f28.pre.pre = load i32, i32* @r9, align 4
  br label %dec_label_pc_10006f24

dec_label_pc_10006f24:                            ; preds = %dec_label_pc_10007258, %dec_label_pc_1000724c, %dec_label_pc_10007240, %dec_label_pc_10007234, %dec_label_pc_10007228, %dec_label_pc_10007204, %dec_label_pc_100071f0, %dec_label_pc_100071e4, %dec_label_pc_100071d0, %dec_label_pc_100071fc, %dec_label_pc_100071dc, %dec_label_pc_100071c8, %dec_label_pc_10006f1c.dec_label_pc_10006f24.loopexit_crit_edge, %dec_label_pc_100071bc.dec_label_pc_10006f24_crit_edge
  %v0_10006f30 = phi i32 [ %v0_10006f3014, %dec_label_pc_100071bc.dec_label_pc_10006f24_crit_edge ], [ %v1_10006e2c, %dec_label_pc_10006f1c.dec_label_pc_10006f24.loopexit_crit_edge ], [ %v1_10006e2c, %dec_label_pc_100071c8 ], [ %v1_10006e2c, %dec_label_pc_100071dc ], [ %v1_10006e2c, %dec_label_pc_100071fc ], [ %v1_10006e2c, %dec_label_pc_100071d0 ], [ %v1_10006e2c, %dec_label_pc_100071e4 ], [ %v1_10006e2c, %dec_label_pc_100071f0 ], [ %v1_10006e2c, %dec_label_pc_10007204 ], [ %v1_10006e2c, %dec_label_pc_10007228 ], [ %v1_10006e2c, %dec_label_pc_10007234 ], [ %v1_10006e2c, %dec_label_pc_10007240 ], [ %v1_10006e2c, %dec_label_pc_1000724c ], [ %v1_10006e2c, %dec_label_pc_10007258 ]
  %v0_10006f28 = phi i32 [ %v0_100071bc, %dec_label_pc_100071bc.dec_label_pc_10006f24_crit_edge ], [ %v0_10006f28.pre.pre, %dec_label_pc_10006f1c.dec_label_pc_10006f24.loopexit_crit_edge ], [ %v0_100071c8, %dec_label_pc_100071c8 ], [ %v0_100071dc, %dec_label_pc_100071dc ], [ %v0_100071fc, %dec_label_pc_100071fc ], [ %v0_100071c8, %dec_label_pc_100071d0 ], [ %v0_100071dc, %dec_label_pc_100071e4 ], [ %v0_100071f0, %dec_label_pc_100071f0 ], [ %v0_100071fc, %dec_label_pc_10007204 ], [ %v0_10007210, %dec_label_pc_10007228 ], [ %v0_10007234, %dec_label_pc_10007234 ], [ %v0_10007240, %dec_label_pc_10007240 ], [ %v0_1000724c, %dec_label_pc_1000724c ], [ %v0_10007258, %dec_label_pc_10007258 ]
  %v0_10006f24 = phi i32 [ %v0_10006f24.pre, %dec_label_pc_100071bc.dec_label_pc_10006f24_crit_edge ], [ %v0_10006e34, %dec_label_pc_10006f1c.dec_label_pc_10006f24.loopexit_crit_edge ], [ 172, %dec_label_pc_100071c8 ], [ 100, %dec_label_pc_100071dc ], [ 198, %dec_label_pc_100071fc ], [ 172, %dec_label_pc_100071d0 ], [ 100, %dec_label_pc_100071e4 ], [ 169, %dec_label_pc_100071f0 ], [ 198, %dec_label_pc_10007204 ], [ 106, %dec_label_pc_10007228 ], [ 150, %dec_label_pc_10007234 ], [ 49, %dec_label_pc_10007240 ], [ 178, %dec_label_pc_1000724c ], [ 160, %dec_label_pc_10007258 ]
  %v1_10006f24 = mul i32 %v0_10006f24, 16777216
  %v1_10006f28 = mul i32 %v0_10006f28, 65536
  %v2_10006f2c = or i32 %v1_10006f24, %v1_10006f28
  %v1_10006f30 = mul i32 %v0_10006f30, 256
  %v1_10006f34 = load i32, i32* %r10.global-to-local, align 4
  %v2_10006f34 = or i32 %v2_10006f2c, %v1_10006f34
  store i32 %v2_10006f34, i32* %r0.global-to-local, align 4
  %v0_10006f38 = load i32, i32* @r21, align 4
  store i32 %v0_10006f38, i32* @r3, align 4
  %v2_10006f3c = or i32 %v2_10006f34, %v1_10006f30
  store i32 %v2_10006f3c, i32* %r9.global-to-local, align 4
  store i32 %v2_10006f3c, i32* @global_var_1001c300.155, align 4
  %v0_10006f48 = load i32, i32* %r29.global-to-local, align 4
  %v1_10006f48 = trunc i32 %v0_10006f48 to i16
  store i16 %v1_10006f48, i16* bitcast (i32* @global_var_1001c2fa.156 to i16*), align 4
  %v2_10006f4c = call i32 @function_100043cc(i32 %v0_10006f38, i32 20)
  %v3_10006f4c = trunc i32 %v2_10006f4c to i16
  %v3_10006f50 = load i64, i64* %stack_var_-1916, align 8
  %v4_10006f50 = trunc i64 %v3_10006f50 to i32
  store i32 %v4_10006f50, i32* %r9.global-to-local, align 4
  store i16 %v3_10006f4c, i16* bitcast (i32* @global_var_1001c2fa.156 to i16*), align 4
  %v4_10006f60 = mul nsw i64 %v3_10006f50, 1717986919
  %v5_10006f60 = udiv i64 %v4_10006f60, 4294967296
  %v6_10006f60 = trunc i64 %v5_10006f60 to i32
  %tmp = icmp slt i32 %v4_10006f50, 0
  %v1_10006f64 = zext i1 %tmp to i32
  %v2_10006f64 = ashr i32 %v4_10006f50, 31
  %v3_10006f64 = and i32 %v2_10006f64, -2
  %v4_10006f64 = or i32 %v3_10006f64, %v1_10006f64
  store i32 %v4_10006f64, i32* %r11.global-to-local, align 4
  %v1_10006f6842 = udiv i64 %v4_10006f60, 17179869184
  %v1_10006f68 = trunc i64 %v1_10006f6842 to i32
  %v2_10006f68 = ashr i32 %v6_10006f60, 31
  %v3_10006f68 = and i32 %v2_10006f68, -1073741824
  %v4_10006f68 = or i32 %v3_10006f68, %v1_10006f68
  %v2_10006f6c = sub nsw i32 %v4_10006f68, %v4_10006f64
  %v1_10006f70 = mul i32 %v2_10006f6c, 10
  %v2_10006f74 = icmp slt i32 %v4_10006f50, %v1_10006f70
  %v4_10006f74 = icmp eq i32 %v4_10006f50, %v1_10006f70
  store i1 %v2_10006f74, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006f74, i1* %cr7_eq.global-to-local, align 1
  %.3 = select i1 %v4_10006f74, i16 2323, i16 23
  store i16 %.3, i16* @global_var_1001c306.139, align 2
  %v3_10006f84 = load i32, i32* @global_var_1001c300.155, align 4
  store i32 %v3_10006f84, i32* %r0.global-to-local, align 4
  %v0_10006f88 = load i32, i32* @r22, align 4
  store i32 %v0_10006f88, i32* @r4, align 4
  %v0_10006f8c = load i32, i32* %r29.global-to-local, align 4
  %v1_10006f8c = trunc i32 %v0_10006f8c to i16
  store i16 %v1_10006f8c, i16* bitcast (i32* @global_var_1001c314.157 to i16*), align 4
  store i32 20, i32* %r5.global-to-local, align 4
  store i32 %v3_10006f84, i32* @global_var_1001c308.158, align 4
  %v0_10006f9c = load i32, i32* @r21, align 4
  store i32 %v0_10006f9c, i32* %r3.global-to-local, align 4
  %v4_10006fa0 = call i32 @function_10004430(i32 %v0_10006f9c, i32 %v0_10006f88, i32 20, i32 20)
  %v5_10006fa0 = trunc i32 %v4_10006fa0 to i16
  store i16 %v5_10006fa0, i16* bitcast (i32* @global_var_1001c314.157 to i16*), align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_10006fb0 = load i32, i32* @global_var_1001c300.155, align 4
  store i32 %v3_10006fb0, i32* %r9.global-to-local, align 4
  %v0_10006fb4 = load i32, i32* @r21, align 4
  %v3_10006fb8 = load i16, i16* @global_var_1001c306.139, align 2
  %v4_10006fb8 = zext i16 %v3_10006fb8 to i32
  store i32 %v4_10006fb8, i32* %r11.global-to-local, align 4
  store i32 40, i32* %r5.global-to-local, align 4
  %v3_10006fc0 = load i32, i32* @global_var_1001c284.129, align 4
  store i32 %v3_10006fc0, i32* %r3.global-to-local, align 4
  %v1_10006fc4 = ptrtoint i32* %stack_var_-1888 to i32
  store i32 %v1_10006fc4, i32* %r7.global-to-local, align 4
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 2, i32* %stack_var_-1888, align 4
  store i32 268464096, i32* @lr, align 4
  %v6_10006fdc = call i32 @function_10009da0(i32 %v3_10006fc0, i32 %v0_10006fb4, i32 40, i32 16384, i32 %v1_10006fc4, i32 16)
  store i32 %v6_10006fdc, i32* %r3.global-to-local, align 4
  %v3_10006fe0 = load i64, i64* %stack_var_-1916, align 8
  %v4_10006fe0 = trunc i64 %v3_10006fe0 to i32
  %v1_10006fe4 = add i32 %v4_10006fe0, 1
  store i32 %v1_10006fe4, i32* %r9.global-to-local, align 4
  %v1_10006fe8 = icmp slt i32 %v1_10006fe4, 483
  %v3_10006fe8 = icmp eq i32 %v1_10006fe4, 483
  store i1 %v1_10006fe8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006fe8, i1* %cr7_eq.global-to-local, align 1
  %v5_10006fec = sext i32 %v1_10006fe4 to i64
  store i64 %v5_10006fec, i64* %stack_var_-1916, align 8
  %tmp103 = icmp slt i32 %v1_10006fe4, 484
  br i1 %tmp103, label %dec_label_pc_10006f24.dec_label_pc_10006df4_crit_edge, label %dec_label_pc_10006ff4

dec_label_pc_10006f24.dec_label_pc_10006df4_crit_edge: ; preds = %dec_label_pc_10006f24
  %v0_10006df4.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10006df4

dec_label_pc_10006ff4:                            ; preds = %dec_label_pc_10006f24
  %v0_10006ff4 = load i32, i32* @r31, align 4
  store i32 %v0_10006ff4, i32* @r23, align 4
  br label %dec_label_pc_10006ff8

dec_label_pc_10006ff8:                            ; preds = %dec_label_pc_10006dd0, %dec_label_pc_10006ff4
  %v0_10006ff8 = call i32 @function_100097e8()
  store i32 %v0_10006ff8, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 %v0_10006ff8, i32* %r24.global-to-local, align 4
  %v2_10007010 = ptrtoint i32* %stack_var_-1616 to i32
  %v4_1000705c = zext i8 %tmp56 to i32
  %v1_10007060 = icmp ult i8 %tmp56, 6
  %v3_10007060 = icmp eq i8 %tmp56, 6
  %v4_10007068 = zext i16 %tmp55 to i32
  %v1_10007070 = icmp ult i16 %tmp55, 23
  %v3_10007070 = icmp eq i16 %tmp55, 23
  %v4_10007080 = zext i16 %tmp54 to i32
  %v1_10007090 = and i32 %tmp53, 131072
  %v3_10007090 = icmp eq i32 %v1_10007090, 0
  %v1_100070b8 = add i32 %tmp52, -1
  %v2_100070bc = icmp slt i32 %v1_100070b8, %tmp51
  %v4_100070bc = icmp eq i32 %v1_100070b8, %tmp51
  %v1_10007098 = and i32 %tmp53, 1048576
  %v3_10007098 = icmp eq i32 %v1_10007098, 0
  %v1_100070a0 = and i32 %tmp53, 262144
  %v3_100070a0 = icmp eq i32 %v1_100070a0, 0
  %v1_100070a8 = and i32 %tmp53, 65536
  %v3_100070a8 = icmp eq i32 %v1_100070a8, 0
  %v1_10007078 = icmp ult i16 %tmp55, 2323
  %v3_10007078 = icmp eq i16 %tmp55, 2323
  br label %dec_label_pc_10007004

dec_label_pc_10007004:                            ; preds = %dec_label_pc_100070b0, %dec_label_pc_100070a8, %dec_label_pc_100070a0, %dec_label_pc_10007080, %dec_label_pc_10007078, %dec_label_pc_1000705c, %dec_label_pc_10007048, %dec_label_pc_10007098, %dec_label_pc_1000708c, %dec_label_pc_10007040, %dec_label_pc_100081e0, %dec_label_pc_10006ff8
  %v1_1000700c = phi i32 [ %v0_10006ff8, %dec_label_pc_10006ff8 ], [ %v1_1000700c.pre.pre, %dec_label_pc_100081e0 ], [ %v0_10007034, %dec_label_pc_10007040 ], [ %v0_10007034, %dec_label_pc_1000708c ], [ %v0_10007034, %dec_label_pc_10007098 ], [ %v0_10007034, %dec_label_pc_10007048 ], [ %v0_10007034, %dec_label_pc_1000705c ], [ %v0_10007034, %dec_label_pc_10007078 ], [ %v0_10007034, %dec_label_pc_10007080 ], [ %v0_10007034, %dec_label_pc_100070a0 ], [ %v0_10007034, %dec_label_pc_100070a8 ], [ %v0_10007034, %dec_label_pc_100070b0 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000700c = inttoptr i32 %v1_1000700c to i32*
  store i32 0, i32* %v2_1000700c, align 4
  store i32 1514, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v3_1000701c = load i32, i32* @global_var_1001c284.129, align 4
  store i32 %v3_1000701c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 268464172, i32* @lr, align 4
  %v6_10007028 = call i32 @function_10009d28(i32 %v3_1000701c, i32 %v2_10007010, i32 1514, i32 16384, i32 0, i32 0)
  store i32 %v6_10007028, i32* %r3.global-to-local, align 4
  %tmp104 = icmp slt i32 %v6_10007028, 1
  br i1 %tmp104, label %dec_label_pc_10007270, label %dec_label_pc_10007034

dec_label_pc_10007034:                            ; preds = %dec_label_pc_10007004
  %v0_10007034 = load i32, i32* %r24.global-to-local, align 4
  %v1_10007034 = inttoptr i32 %v0_10007034 to i32*
  %v2_10007034 = load i32, i32* %v1_10007034, align 4
  store i32 %v2_10007034, i32* %r0.global-to-local, align 4
  %v1_10007038 = icmp slt i32 %v2_10007034, 11
  %v3_10007038 = icmp eq i32 %v2_10007034, 11
  store i1 %v1_10007038, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007038, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007038, label %dec_label_pc_10007270, label %dec_label_pc_10007040

dec_label_pc_10007040:                            ; preds = %dec_label_pc_10007034
  %v1_10007040 = icmp ult i32 %v6_10007028, 39
  %v3_10007040 = icmp eq i32 %v6_10007028, 39
  store i1 %v1_10007040, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007040, i1* %cr7_eq.global-to-local, align 1
  %tmp105 = icmp ult i32 %v6_10007028, 40
  br i1 %tmp105, label %dec_label_pc_10007004, label %dec_label_pc_10007048

dec_label_pc_10007048:                            ; preds = %dec_label_pc_10007040
  store i32 %tmp57, i32* %r9.global-to-local, align 4
  %v3_10007050 = load i32, i32* @global_var_1001c258.14, align 4
  store i32 %v3_10007050, i32* %r0.global-to-local, align 4
  %v2_10007054 = icmp slt i32 %tmp57, %v3_10007050
  %v4_10007054 = icmp eq i32 %tmp57, %v3_10007050
  store i1 %v2_10007054, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10007054, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10007054, label %dec_label_pc_1000705c, label %dec_label_pc_10007004

dec_label_pc_1000705c:                            ; preds = %dec_label_pc_10007048
  store i32 %v4_1000705c, i32* %r0.global-to-local, align 4
  store i1 %v1_10007060, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007060, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007060, label %dec_label_pc_10007068, label %dec_label_pc_10007004

dec_label_pc_10007068:                            ; preds = %dec_label_pc_1000705c
  store i32 %v4_10007068, i32* %r8.global-to-local, align 4
  store i32 %v4_10007068, i32* %r0.global-to-local, align 4
  store i1 %v1_10007070, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007070, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007070, label %dec_label_pc_10007080, label %dec_label_pc_10007078

dec_label_pc_10007078:                            ; preds = %dec_label_pc_10007068
  store i1 %v1_10007078, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007078, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007078, label %dec_label_pc_10007080, label %dec_label_pc_10007004

dec_label_pc_10007080:                            ; preds = %dec_label_pc_10007078, %dec_label_pc_10007068
  store i32 %v4_10007080, i32* %r0.global-to-local, align 4
  %v1_10007084 = load i32, i32* @r20, align 4
  %v2_10007084 = icmp slt i32 %v4_10007080, %v1_10007084
  %v4_10007084 = icmp eq i32 %v4_10007080, %v1_10007084
  store i1 %v2_10007084, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10007084, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10007084, label %dec_label_pc_1000708c, label %dec_label_pc_10007004

dec_label_pc_1000708c:                            ; preds = %dec_label_pc_10007080
  store i32 %tmp53, i32* %r0.global-to-local, align 4
  store i32 %v1_10007090, i32* %r9.global-to-local, align 4
  br i1 %v3_10007090, label %dec_label_pc_10007004, label %dec_label_pc_10007098

dec_label_pc_10007098:                            ; preds = %dec_label_pc_1000708c
  store i32 %v1_10007098, i32* %r10.global-to-local, align 4
  br i1 %v3_10007098, label %dec_label_pc_10007004, label %dec_label_pc_100070a0

dec_label_pc_100070a0:                            ; preds = %dec_label_pc_10007098
  store i32 %v1_100070a0, i32* %r11.global-to-local, align 4
  br i1 %v3_100070a0, label %dec_label_pc_100070a8, label %dec_label_pc_10007004

dec_label_pc_100070a8:                            ; preds = %dec_label_pc_100070a0
  br i1 %v3_100070a8, label %dec_label_pc_100070b0, label %dec_label_pc_10007004

dec_label_pc_100070b0:                            ; preds = %dec_label_pc_100070a8
  store i32 %tmp52, i32* %r9.global-to-local, align 4
  store i32 %tmp51, i32* %r0.global-to-local, align 4
  store i32 %v1_100070b8, i32* %r10.global-to-local, align 4
  store i1 %v2_100070bc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100070bc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100070bc, label %dec_label_pc_100070c4, label %dec_label_pc_10007004

dec_label_pc_100070c4:                            ; preds = %dec_label_pc_100070b0
  %v0_100070c4 = load i32, i32* @r31, align 4
  %v1_100070c4 = icmp slt i32 %v0_100070c4, 355
  %v2_100070c4 = icmp sgt i32 %v0_100070c4, 355
  %v3_100070c4 = icmp eq i32 %v0_100070c4, 355
  store i1 %v1_100070c4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100070c4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100070c4, label %dec_label_pc_10007270, label %dec_label_pc_100070cc

dec_label_pc_100070cc:                            ; preds = %dec_label_pc_100070c4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v1_100070d0 = mul i32 %v0_100070c4, 388
  store i32 %v1_100070d0, i32* %r11.global-to-local, align 4
  %v3_100070d4 = load i32, i32* @global_var_1001c280.128, align 4
  store i32 %v3_100070d4, i32* %r0.global-to-local, align 4
  %v2_100070d8 = add i32 %v3_100070d4, %v1_100070d0
  store i32 %v2_100070d8, i32* @r3, align 4
  %v1_100070dc = add i32 %v2_100070d8, 12
  %v2_100070dc = inttoptr i32 %v1_100070dc to i32*
  %v3_100070dc = load i32, i32* %v2_100070dc, align 4
  store i32 %v3_100070dc, i32* %r9.global-to-local, align 4
  %v1_100070e0 = icmp slt i32 %v3_100070dc, 0
  %v3_100070e0 = icmp eq i32 %v3_100070dc, 0
  store i1 %v1_100070e0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100070e0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100070e0, label %dec_label_pc_100081dc, label %dec_label_pc_100070e8

dec_label_pc_100070e8:                            ; preds = %dec_label_pc_100070cc
  %v1_100070e8 = sub i32 356, %v0_100070c4
  store i32 %v1_100070e8, i32* %r11.global-to-local, align 4
  store i32 %v0_100070c4, i32* %r29.global-to-local, align 4
  store i32 %v1_100070e8, i32* %ctr.global-to-local, align 4
  %v1_100070f4 = add i32 %v2_100070d8, 388
  store i32 %v1_100070f4, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100070f8

dec_label_pc_100070f8:                            ; preds = %dec_label_pc_10007100, %dec_label_pc_100070e8
  %v0_10007100 = phi i32 [ %v1_10007108, %dec_label_pc_10007100 ], [ %v1_100070f4, %dec_label_pc_100070e8 ]
  %v0_100070fc = phi i32 [ %v1_100070fc, %dec_label_pc_10007100 ], [ %v1_100070e8, %dec_label_pc_100070e8 ]
  %v0_100070f8 = phi i32 [ %v1_100070f8, %dec_label_pc_10007100 ], [ %v0_100070c4, %dec_label_pc_100070e8 ]
  %v1_100070f8 = add i32 %v0_100070f8, 1
  store i32 %v1_100070f8, i32* @r29, align 4
  %v1_100070fc = add i32 %v0_100070fc, -1
  store i32 %v1_100070fc, i32* %ctr.global-to-local, align 4
  %v2_100070fc = icmp eq i32 %v1_100070fc, 0
  br i1 %v2_100070fc, label %dec_label_pc_10007270, label %dec_label_pc_10007100

dec_label_pc_10007100:                            ; preds = %dec_label_pc_100070f8
  %v1_10007100 = add i32 %v0_10007100, 12
  %v2_10007100 = inttoptr i32 %v1_10007100 to i32*
  %v3_10007100 = load i32, i32* %v2_10007100, align 4
  store i32 %v3_10007100, i32* %r0.global-to-local, align 4
  store i32 %v0_10007100, i32* @r3, align 4
  %v1_10007108 = add i32 %v0_10007100, 388
  store i32 %v1_10007108, i32* %r9.global-to-local, align 4
  %v1_1000710c = icmp slt i32 %v3_10007100, 0
  %v3_1000710c = icmp eq i32 %v3_10007100, 0
  store i1 %v1_1000710c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000710c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000710c, label %dec_label_pc_100081e0, label %dec_label_pc_100070f8

dec_label_pc_100071b4:                            ; preds = %dec_label_pc_10006b90, %dec_label_pc_100081cc
  %v0_100071b8 = call i32 @function_1000a890()
  store i32 %v0_100071b8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100071bc

dec_label_pc_100071bc:                            ; preds = %dec_label_pc_10006e64, %dec_label_pc_100071b4
  %v0_10006f3014 = phi i32 [ %v0_100071b8, %dec_label_pc_100071b4 ], [ %v1_10006e2c, %dec_label_pc_10006e64 ]
  %v0_100071bc = load i32, i32* @r9, align 4
  %v1_100071bc = icmp slt i32 %v0_100071bc, 168
  %v3_100071bc = icmp eq i32 %v0_100071bc, 168
  store i1 %v1_100071bc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100071bc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100071bc, label %dec_label_pc_10006e18.preheader, label %dec_label_pc_100071bc.dec_label_pc_10006f24_crit_edge

dec_label_pc_100071bc.dec_label_pc_10006f24_crit_edge: ; preds = %dec_label_pc_100071bc
  %v0_10006f24.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006f24

dec_label_pc_100071c8:                            ; preds = %dec_label_pc_10006e6c
  %v0_100071c8 = load i32, i32* @r9, align 4
  %v1_100071c8 = icmp ult i32 %v0_100071c8, 15
  %v3_100071c8 = icmp eq i32 %v0_100071c8, 15
  store i1 %v1_100071c8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100071c8, i1* %cr7_eq.global-to-local, align 1
  %tmp106 = icmp ult i32 %v0_100071c8, 16
  br i1 %tmp106, label %dec_label_pc_10006f24, label %dec_label_pc_100071d0

dec_label_pc_100071d0:                            ; preds = %dec_label_pc_100071c8
  %v1_100071d0 = icmp ult i32 %v0_100071c8, 31
  %v3_100071d0 = icmp eq i32 %v0_100071c8, 31
  store i1 %v1_100071d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100071d0, i1* %cr7_eq.global-to-local, align 1
  %tmp107 = icmp ult i32 %v0_100071c8, 32
  br i1 %tmp107, label %dec_label_pc_10006e18, label %dec_label_pc_10006f24

dec_label_pc_100071dc:                            ; preds = %dec_label_pc_10006e74
  %v0_100071dc = load i32, i32* @r9, align 4
  %v1_100071dc = icmp ult i32 %v0_100071dc, 63
  %v3_100071dc = icmp eq i32 %v0_100071dc, 63
  store i1 %v1_100071dc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100071dc, i1* %cr7_eq.global-to-local, align 1
  %tmp108 = icmp ult i32 %v0_100071dc, 64
  br i1 %tmp108, label %dec_label_pc_10006f24, label %dec_label_pc_100071e4

dec_label_pc_100071e4:                            ; preds = %dec_label_pc_100071dc
  %v1_100071e4 = icmp ult i32 %v0_100071dc, 126
  %v3_100071e4 = icmp eq i32 %v0_100071dc, 126
  store i1 %v1_100071e4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100071e4, i1* %cr7_eq.global-to-local, align 1
  %tmp109 = icmp ult i32 %v0_100071dc, 127
  br i1 %tmp109, label %dec_label_pc_10006e18, label %dec_label_pc_10006f24

dec_label_pc_100071f0:                            ; preds = %dec_label_pc_10006e7c
  %v0_100071f0 = load i32, i32* @r9, align 4
  %v1_100071f0 = icmp slt i32 %v0_100071f0, 255
  %v3_100071f0 = icmp eq i32 %v0_100071f0, 255
  store i1 %v1_100071f0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100071f0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100071f0, label %dec_label_pc_10006e18, label %dec_label_pc_10006f24

dec_label_pc_100071fc:                            ; preds = %dec_label_pc_10006e84
  %v0_100071fc = load i32, i32* @r9, align 4
  %v1_100071fc = icmp ult i32 %v0_100071fc, 17
  %v3_100071fc = icmp eq i32 %v0_100071fc, 17
  store i1 %v1_100071fc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100071fc, i1* %cr7_eq.global-to-local, align 1
  %tmp110 = icmp ult i32 %v0_100071fc, 18
  br i1 %tmp110, label %dec_label_pc_10006f24, label %dec_label_pc_10007204

dec_label_pc_10007204:                            ; preds = %dec_label_pc_100071fc
  %v1_10007204 = icmp eq i32 %v0_100071fc, 18
  %v3_10007204 = icmp eq i32 %v0_100071fc, 19
  store i1 %v1_10007204, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007204, i1* %cr7_eq.global-to-local, align 1
  %tmp111 = icmp ult i32 %v0_100071fc, 20
  br i1 %tmp111, label %dec_label_pc_10006e18, label %dec_label_pc_10006f24

dec_label_pc_10007210:                            ; preds = %dec_label_pc_10006e94
  %v0_10007210 = load i32, i32* @r9, align 4
  %v1_10007210 = icmp slt i32 %v0_10007210, 186
  %v3_10007210 = icmp eq i32 %v0_10007210, 186
  store i1 %v1_10007210, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007210, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007210, label %dec_label_pc_10006e18, label %dec_label_pc_10007218

dec_label_pc_10007218:                            ; preds = %dec_label_pc_10007210
  %v1_10007218 = icmp slt i32 %v0_10007210, 187
  %v3_10007218 = icmp eq i32 %v0_10007210, 187
  store i1 %v1_10007218, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007218, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007218, label %dec_label_pc_10006e18, label %dec_label_pc_10007220

dec_label_pc_10007220:                            ; preds = %dec_label_pc_10007218
  %v1_10007220 = icmp slt i32 %v0_10007210, 185
  %v3_10007220 = icmp eq i32 %v0_10007210, 185
  store i1 %v1_10007220, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007220, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007220, label %dec_label_pc_10006e18, label %dec_label_pc_10007228

dec_label_pc_10007228:                            ; preds = %dec_label_pc_10007220
  %v1_10007228 = icmp slt i32 %v0_10007210, 184
  %v3_10007228 = icmp eq i32 %v0_10007210, 184
  store i1 %v1_10007228, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007228, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007228, label %dec_label_pc_10006e18, label %dec_label_pc_10006f24

dec_label_pc_10007234:                            ; preds = %dec_label_pc_10006e9c
  %v0_10007234 = load i32, i32* @r9, align 4
  %v1_10007234 = icmp slt i32 %v0_10007234, 31
  %v3_10007234 = icmp eq i32 %v0_10007234, 31
  store i1 %v1_10007234, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007234, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007234, label %dec_label_pc_10006e18, label %dec_label_pc_10006f24

dec_label_pc_10007240:                            ; preds = %dec_label_pc_10006ea4
  %v0_10007240 = load i32, i32* @r9, align 4
  %v1_10007240 = icmp slt i32 %v0_10007240, 51
  %v3_10007240 = icmp eq i32 %v0_10007240, 51
  store i1 %v1_10007240, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007240, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007240, label %dec_label_pc_10006e18, label %dec_label_pc_10006f24

dec_label_pc_1000724c:                            ; preds = %dec_label_pc_10006eac
  %v0_1000724c = load i32, i32* @r9, align 4
  %v1_1000724c = icmp slt i32 %v0_1000724c, 62
  %v3_1000724c = icmp eq i32 %v0_1000724c, 62
  store i1 %v1_1000724c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000724c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000724c, label %dec_label_pc_10006e18, label %dec_label_pc_10006f24

dec_label_pc_10007258:                            ; preds = %dec_label_pc_10006eb4
  %v0_10007258 = load i32, i32* @r9, align 4
  %v1_10007258 = icmp slt i32 %v0_10007258, 13
  %v3_10007258 = icmp eq i32 %v0_10007258, 13
  store i1 %v1_10007258, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007258, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007258, label %dec_label_pc_10006e18, label %dec_label_pc_10006f24

dec_label_pc_10007270:                            ; preds = %dec_label_pc_100070c4, %dec_label_pc_10007034, %dec_label_pc_10007004, %dec_label_pc_100070f8
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 64, i32* %r10.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v2_10007288133 = load i32, i32* @r1, align 4
  %v3_10007288134 = add i32 %v2_10007288133, 64
  %v4_10007288135 = inttoptr i32 %v3_10007288134 to i32*
  store i32 0, i32* %v4_10007288135, align 4
  %v0_1000728c136 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000728c137 = add i32 %v0_1000728c136, -1
  store i32 %v1_1000728c137, i32* %ctr.global-to-local, align 4
  %v2_1000728c138 = icmp eq i32 %v1_1000728c137, 0
  br i1 %v2_1000728c138, label %dec_label_pc_10007290, label %dec_label_pc_10007280.dec_label_pc_10007280_crit_edge

dec_label_pc_10007280.dec_label_pc_10007280_crit_edge: ; preds = %dec_label_pc_10007270, %dec_label_pc_10007280.dec_label_pc_10007280_crit_edge
  %v0_10007280.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10007288.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_10007280 = add i32 %v0_10007280.pre, 64
  store i32 %v1_10007280, i32* %r10.global-to-local, align 4
  %v1_10007284 = add i32 %v0_10007280.pre, 4
  store i32 %v1_10007284, i32* %r9.global-to-local, align 4
  %v2_10007288 = load i32, i32* @r1, align 4
  %v3_10007288 = add i32 %v2_10007288, %v1_10007280
  %v4_10007288 = inttoptr i32 %v3_10007288 to i32*
  store i32 %v0_10007288.pre, i32* %v4_10007288, align 4
  %v0_1000728c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000728c = add i32 %v0_1000728c, -1
  store i32 %v1_1000728c, i32* %ctr.global-to-local, align 4
  %v2_1000728c = icmp eq i32 %v1_1000728c, 0
  br i1 %v2_1000728c, label %dec_label_pc_10007290, label %dec_label_pc_10007280.dec_label_pc_10007280_crit_edge

dec_label_pc_10007290:                            ; preds = %dec_label_pc_10007280.dec_label_pc_10007280_crit_edge, %dec_label_pc_10007270
  store i32 32, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v2_100072a8127 = load i32, i32* @r1, align 4
  %v3_100072a8128 = add i32 %v2_100072a8127, 192
  %v4_100072a8129 = inttoptr i32 %v3_100072a8128 to i32*
  store i32 0, i32* %v4_100072a8129, align 4
  %v0_100072ac130 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100072ac131 = add i32 %v0_100072ac130, -1
  store i32 %v1_100072ac131, i32* %ctr.global-to-local, align 4
  %v2_100072ac132 = icmp eq i32 %v1_100072ac131, 0
  br i1 %v2_100072ac132, label %dec_label_pc_100072b0, label %dec_label_pc_100072a0.dec_label_pc_100072a0_crit_edge

dec_label_pc_100072a0.dec_label_pc_100072a0_crit_edge: ; preds = %dec_label_pc_10007290, %dec_label_pc_100072a0.dec_label_pc_100072a0_crit_edge
  %v0_100072a0.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_100072a8.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_100072a0 = add i32 %v0_100072a0.pre, 192
  %v1_100072a4 = add i32 %v0_100072a0.pre, 4
  store i32 %v1_100072a4, i32* %r9.global-to-local, align 4
  %v2_100072a8 = load i32, i32* @r1, align 4
  %v3_100072a8 = add i32 %v2_100072a8, %v1_100072a0
  %v4_100072a8 = inttoptr i32 %v3_100072a8 to i32*
  store i32 %v0_100072a8.pre, i32* %v4_100072a8, align 4
  %v0_100072ac = load i32, i32* %ctr.global-to-local, align 4
  %v1_100072ac = add i32 %v0_100072ac, -1
  store i32 %v1_100072ac, i32* %ctr.global-to-local, align 4
  %v2_100072ac = icmp eq i32 %v1_100072ac, 0
  br i1 %v2_100072ac, label %dec_label_pc_100072b0, label %dec_label_pc_100072a0.dec_label_pc_100072a0_crit_edge

dec_label_pc_100072b0:                            ; preds = %dec_label_pc_100072a0.dec_label_pc_100072a0_crit_edge, %dec_label_pc_10007290
  store i32 0, i32* %r30.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  %v0_100072c4 = load i32, i32* %r0.global-to-local, align 4
  %v5_100072c4 = sext i32 %v0_100072c4 to i64
  store i64 %v5_100072c4, i64* %stack_var_-1916, align 8
  %v2_100073e8 = ptrtoint i32* %stack_var_-1872 to i32
  %v2_100073ec = ptrtoint i32* %stack_var_-1744 to i32
  %v2_100073f0 = ptrtoint i32* %stack_var_-1908 to i32
  %v2_10007fd0 = ptrtoint i32* %stack_var_-1920 to i32
  %v1_10007fe0 = ptrtoint i32* %stack_var_-1912 to i32
  br label %dec_label_pc_10007330

dec_label_pc_100072cc:                            ; preds = %dec_label_pc_10007330
  %v1_100072d0 = add i32 %v2_10007340, 8
  %v2_100072d0 = inttoptr i32 %v1_100072d0 to i32*
  %v3_100072d0 = load i32, i32* %v2_100072d0, align 4
  store i32 %v3_100072d0, i32* %r9.global-to-local, align 4
  %v3_100072d4 = load i32, i32* @global_var_1001c27c.123, align 4
  %v2_100072d8 = sub i32 %v3_100072d4, %v3_100072d0
  store i32 %v2_100072d8, i32* %r0.global-to-local, align 4
  %v2_100072dc = icmp ult i32 %v2_100072d8, 30
  %v3_100072dc = icmp ugt i32 %v2_100072d8, 30
  %v4_100072dc = icmp eq i32 %v2_100072d8, 30
  store i1 %v2_100072dc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100072dc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100072dc, label %dec_label_pc_10007374, label %dec_label_pc_100072e4

dec_label_pc_100072e4:                            ; preds = %dec_label_pc_10007358, %dec_label_pc_100072cc
  %v1_100072e4 = icmp slt i32 %v3_10007344, 1
  store i1 %v1_100072e4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007348, i1* %cr7_eq.global-to-local, align 1
  %v1_10007538 = add i32 %v2_10007340, 4
  %v2_10007538 = inttoptr i32 %v1_10007538 to i32*
  %v3_10007538 = load i32, i32* %v2_10007538, align 4
  store i32 %v3_10007538, i32* %r3.global-to-local, align 4
  br i1 %v3_10007348, label %dec_label_pc_10007538, label %dec_label_pc_100072ec

dec_label_pc_100072ec:                            ; preds = %dec_label_pc_100072e4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_100072f4 = call i32 @__asm_rlwinm(i32 %v3_10007538, i32 29, i32 3, i32 29)
  %v0_100072f8 = load i32, i32* %r30.global-to-local, align 4
  %v2_100072f8 = icmp slt i32 %v0_100072f8, %v3_10007538
  %v4_100072f8 = icmp eq i32 %v0_100072f8, %v3_10007538
  store i1 %v2_100072f8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100072f8, i1* %cr7_eq.global-to-local, align 1
  %v1_100072fc = load i32, i32* @r15, align 4
  %v2_100072fc = add i32 %v1_100072fc, %v1_100072f4
  store i32 %v2_100072fc, i32* %r11.global-to-local, align 4
  %v1_10007300 = urem i32 %v3_10007538, 32
  store i32 %v1_10007300, i32* %r10.global-to-local, align 4
  %v1_10007304 = add i32 %v2_100072fc, 56
  %v2_10007304 = inttoptr i32 %v1_10007304 to i32*
  %v3_10007304 = load i32, i32* %v2_10007304, align 4
  %v0_10007308 = load i32, i32* %r0.global-to-local, align 4
  %v3_10007308 = shl i32 %v0_10007308, %v1_10007300
  store i32 %v3_10007308, i32* %r0.global-to-local, align 4
  %v2_1000730c = or i32 %v3_10007308, %v3_10007304
  store i32 %v2_1000730c, i32* %r9.global-to-local, align 4
  store i32 %v2_1000730c, i32* %v2_10007304, align 4
  br i1 %v2_100072f8, label %dec_label_pc_10007318, label %dec_label_pc_1000731c

dec_label_pc_10007318:                            ; preds = %dec_label_pc_100072ec
  store i32 %v3_10007538, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000731c

dec_label_pc_1000731c:                            ; preds = %dec_label_pc_10007538, %dec_label_pc_100072ec, %dec_label_pc_10007350, %dec_label_pc_10007560, %dec_label_pc_1000752c, %dec_label_pc_10007318
  %v3_1000731c = load i64, i64* %stack_var_-1916, align 8
  %v4_1000731c = trunc i64 %v3_1000731c to i32
  %v1_10007320 = add i32 %v4_1000731c, 1
  store i32 %v1_10007320, i32* %r9.global-to-local, align 4
  %v1_10007324 = icmp slt i32 %v1_10007320, 355
  %v2_10007324 = icmp sgt i32 %v1_10007320, 355
  %v3_10007324 = icmp eq i32 %v1_10007320, 355
  store i1 %v1_10007324, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007324, i1* %cr7_eq.global-to-local, align 1
  %v5_10007328 = sext i32 %v1_10007320 to i64
  store i64 %v5_10007328, i64* %stack_var_-1916, align 8
  br i1 %v2_10007324, label %dec_label_pc_100073c4, label %dec_label_pc_10007330

dec_label_pc_10007330:                            ; preds = %dec_label_pc_100073a8, %dec_label_pc_1000731c, %dec_label_pc_100072b0
  %v0_10007334 = phi i32 [ 0, %dec_label_pc_100072b0 ], [ %v1_10007320, %dec_label_pc_1000731c ], [ %v1_100073b4, %dec_label_pc_100073a8 ]
  store i32 268566528, i32* %r10.global-to-local, align 4
  %v1_10007334 = mul i32 %v0_10007334, 388
  store i32 %v1_10007334, i32* %r9.global-to-local, align 4
  %v3_10007338 = load i32, i32* @global_var_1001c280.128, align 4
  store i32 %v3_10007338, i32* %r0.global-to-local, align 4
  store i32 30, i32* %r11.global-to-local, align 4
  %v2_10007340 = add i32 %v3_10007338, %v1_10007334
  store i32 %v2_10007340, i32* @r29, align 4
  %v1_10007344 = add i32 %v2_10007340, 12
  %v2_10007344 = inttoptr i32 %v1_10007344 to i32*
  %v3_10007344 = load i32, i32* %v2_10007344, align 4
  store i32 %v3_10007344, i32* %r10.global-to-local, align 4
  %v1_10007348 = icmp eq i32 %v3_10007344, 0
  %v2_10007348 = icmp ugt i32 %v3_10007344, 1
  %v3_10007348 = icmp eq i32 %v3_10007344, 1
  store i1 %v1_10007348, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007348, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10007348, label %dec_label_pc_100072cc, label %dec_label_pc_10007350

dec_label_pc_10007350:                            ; preds = %dec_label_pc_10007330
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v1_10007348, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_10007348, label %dec_label_pc_1000731c, label %dec_label_pc_10007358

dec_label_pc_10007358:                            ; preds = %dec_label_pc_10007350
  %v1_1000735c = add i32 %v2_10007340, 8
  %v2_1000735c = inttoptr i32 %v1_1000735c to i32*
  %v3_1000735c = load i32, i32* %v2_1000735c, align 4
  store i32 %v3_1000735c, i32* %r9.global-to-local, align 4
  %v3_10007360 = load i32, i32* @global_var_1001c27c.123, align 4
  store i32 5, i32* %r11.global-to-local, align 4
  %v2_10007368 = sub i32 %v3_10007360, %v3_1000735c
  store i32 %v2_10007368, i32* %r0.global-to-local, align 4
  %v2_1000736c = icmp ult i32 %v2_10007368, 5
  %v4_1000736c = icmp eq i32 %v2_10007368, 5
  store i1 %v2_1000736c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000736c, i1* %cr7_eq.global-to-local, align 1
  %tmp113 = icmp ult i32 %v2_10007368, 6
  br i1 %tmp113, label %dec_label_pc_100072e4, label %dec_label_pc_10007374

dec_label_pc_10007374:                            ; preds = %dec_label_pc_10007358, %dec_label_pc_100072cc
  %v1_10007374 = add i32 %v2_10007340, 4
  %v2_10007374 = inttoptr i32 %v1_10007374 to i32*
  %v3_10007374 = load i32, i32* %v2_10007374, align 4
  store i32 %v3_10007374, i32* %r3.global-to-local, align 4
  store i32 268465020, i32* @lr, align 4
  %v0_10007378 = call i32 @function_100090cc()
  store i32 %v0_10007378, i32* %r3.global-to-local, align 4
  %v0_1000737c = load i32, i32* @r29, align 4
  %v1_1000737c = add i32 %v0_1000737c, 12
  %v2_1000737c = inttoptr i32 %v1_1000737c to i32*
  %v3_1000737c = load i32, i32* %v2_1000737c, align 4
  store i32 %v3_1000737c, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  %v1_10007384 = icmp ult i32 %v3_1000737c, 2
  %v3_10007384 = icmp eq i32 %v3_1000737c, 2
  store i1 %v1_10007384, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007384, i1* %cr7_eq.global-to-local, align 1
  %v2_10007388 = add i32 %v0_1000737c, 4
  %v3_10007388 = inttoptr i32 %v2_10007388 to i32*
  store i32 -1, i32* %v3_10007388, align 4
  %tmp114 = icmp ult i32 %v3_1000737c, 3
  br i1 %tmp114, label %dec_label_pc_1000752c, label %dec_label_pc_10007390

dec_label_pc_10007390:                            ; preds = %dec_label_pc_10007374
  %v0_10007390 = load i32, i32* @r29, align 4
  %v1_10007390 = add i32 %v0_10007390, 384
  %v2_10007390 = inttoptr i32 %v1_10007390 to i8*
  %v3_10007390 = load i8, i8* %v2_10007390, align 1
  %v4_10007390 = zext i8 %v3_10007390 to i32
  %v1_10007394 = add nuw nsw i32 %v4_10007390, 1
  %v1_10007398 = urem i32 %v1_10007394, 256
  store i32 %v1_10007398, i32* %r9.global-to-local, align 4
  %v1_1000739c = icmp ult i32 %v1_10007398, 10
  %v3_1000739c = icmp eq i32 %v1_10007398, 10
  store i1 %v1_1000739c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000739c, i1* %cr7_eq.global-to-local, align 1
  %v1_100073a0 = trunc i32 %v1_10007394 to i8
  store i8 %v1_100073a0, i8* %v2_10007390, align 1
  %v0_100073a4 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100073a4, label %dec_label_pc_1000752c, label %dec_label_pc_100073a8

dec_label_pc_100073a8:                            ; preds = %dec_label_pc_10007390
  %v0_100073a8 = load i32, i32* @r29, align 4
  store i32 %v0_100073a8, i32* @r3, align 4
  store i32 268465072, i32* @lr, align 4
  %v0_100073ac = call i32 @function_100067a8()
  store i32 %v0_100073ac, i32* %r3.global-to-local, align 4
  %v3_100073b0 = load i64, i64* %stack_var_-1916, align 8
  %v4_100073b0 = trunc i64 %v3_100073b0 to i32
  %v1_100073b4 = add i32 %v4_100073b0, 1
  store i32 %v1_100073b4, i32* %r9.global-to-local, align 4
  %v1_100073b8 = icmp slt i32 %v1_100073b4, 355
  %v3_100073b8 = icmp eq i32 %v1_100073b4, 355
  store i1 %v1_100073b8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100073b8, i1* %cr7_eq.global-to-local, align 1
  %v5_100073bc = sext i32 %v1_100073b4 to i64
  store i64 %v5_100073bc, i64* %stack_var_-1916, align 8
  %tmp115 = icmp slt i32 %v1_100073b4, 356
  br i1 %tmp115, label %dec_label_pc_10007330, label %dec_label_pc_100073c4

dec_label_pc_100073c4:                            ; preds = %dec_label_pc_100073a8, %dec_label_pc_1000731c
  %v0_100073c4 = load i32, i32* %r30.global-to-local, align 4
  %v1_100073c4 = load i32, i32* @r31, align 4
  %v2_100073c4 = icmp slt i32 %v0_100073c4, %v1_100073c4
  %v4_100073c4 = icmp eq i32 %v0_100073c4, %v1_100073c4
  store i1 %v2_100073c4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100073c4, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_100073c4, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  store i32 1, i32* %stack_var_-1908, align 4
  br i1 %v2_100073c4, label %dec_label_pc_100073e0, label %dec_label_pc_100073e4

dec_label_pc_100073e0:                            ; preds = %dec_label_pc_100073c4
  store i32 %v1_100073c4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100073e4

dec_label_pc_100073e4:                            ; preds = %dec_label_pc_100073c4, %dec_label_pc_100073e0
  %v0_100073f4 = phi i32 [ %v0_100073c4, %dec_label_pc_100073c4 ], [ %v1_100073c4, %dec_label_pc_100073e0 ]
  store i32 %v2_100073ec, i32* %r5.global-to-local, align 4
  store i32 %v2_100073f0, i32* %r7.global-to-local, align 4
  %v1_100073f4 = add i32 %v0_100073f4, 1
  store i32 %v1_100073f4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100073fc.160 to i32), i32* @lr, align 4
  %v5_100073f8 = call i32 @function_10009394(i32 %v1_100073f4, i32 %v2_100073e8, i32 %v2_100073ec, i32 0, i32 %v2_100073f0)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268465156, i32* @lr, align 4
  %v0_10007400 = call i32 @function_1000949c()
  store i32 %v0_10007400, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_10007400, i32* @global_var_1001c27c.123, align 4
  %v0_10007410 = load i32, i32* %r30.global-to-local, align 4
  %v5_10007410 = sext i32 %v0_10007410 to i64
  store i64 %v5_10007410, i64* %stack_var_-1916, align 8
  br label %dec_label_pc_1000742c

dec_label_pc_10007418:                            ; preds = %dec_label_pc_10007480, %dec_label_pc_10007ea4, %dec_label_pc_10007464, %dec_label_pc_1000742c, %dec_label_pc_10008188, %dec_label_pc_1000815c, %dec_label_pc_10007ed8
  %v3_10007418 = load i64, i64* %stack_var_-1916, align 8
  %v4_10007418 = trunc i64 %v3_10007418 to i32
  store i32 %v4_10007418, i32* %r9.global-to-local, align 4
  %v1_1000741c = add i32 %v4_10007418, 1
  store i32 %v1_1000741c, i32* %r0.global-to-local, align 4
  %v1_10007420 = icmp slt i32 %v1_1000741c, 355
  %v2_10007420 = icmp sgt i32 %v1_1000741c, 355
  %v3_10007420 = icmp eq i32 %v1_1000741c, 355
  store i1 %v1_10007420, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007420, i1* %cr7_eq.global-to-local, align 1
  %v5_10007424 = sext i32 %v1_1000741c to i64
  store i64 %v5_10007424, i64* %stack_var_-1916, align 8
  br i1 %v2_10007420, label %dec_label_pc_10006dd0, label %dec_label_pc_1000742c

dec_label_pc_1000742c:                            ; preds = %dec_label_pc_10007418, %dec_label_pc_100073e4
  %v0_1000742c = phi i32 [ %v1_1000741c, %dec_label_pc_10007418 ], [ 0, %dec_label_pc_100073e4 ]
  %v1_1000742c = mul i32 %v0_1000742c, 388
  store i32 %v1_1000742c, i32* %r0.global-to-local, align 4
  store i32 268566528, i32* %r10.global-to-local, align 4
  %v3_10007434 = load i32, i32* @global_var_1001c280.128, align 4
  store i32 %v3_10007434, i32* %r9.global-to-local, align 4
  %v2_10007438 = add i32 %v3_10007434, %v1_1000742c
  store i32 %v2_10007438, i32* %r28.global-to-local, align 4
  %v1_1000743c = add i32 %v2_10007438, 4
  %v2_1000743c = inttoptr i32 %v1_1000743c to i32*
  %v3_1000743c = load i32, i32* %v2_1000743c, align 4
  store i32 %v3_1000743c, i32* %r3.global-to-local, align 4
  %v1_10007440 = icmp slt i32 %v3_1000743c, -1
  %v3_10007440 = icmp eq i32 %v3_1000743c, -1
  store i1 %v1_10007440, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007440, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007440, label %dec_label_pc_10007418, label %dec_label_pc_10007448

dec_label_pc_10007448:                            ; preds = %dec_label_pc_1000742c
  %v1_10007448 = call i32 @__asm_rlwinm(i32 %v3_1000743c, i32 29, i32 3, i32 29)
  %v0_1000744c = load i32, i32* %r3.global-to-local, align 4
  %v1_1000744c = urem i32 %v0_1000744c, 32
  store i32 %v1_1000744c, i32* %r11.global-to-local, align 4
  %v1_10007450 = load i32, i32* @r15, align 4
  %v2_10007450 = add i32 %v1_10007450, %v1_10007448
  store i32 %v2_10007450, i32* %r9.global-to-local, align 4
  %v1_10007454 = add i32 %v2_10007450, 184
  %v2_10007454 = inttoptr i32 %v1_10007454 to i32*
  %v3_10007454 = load i32, i32* %v2_10007454, align 4
  %v3_10007458 = lshr i32 %v3_10007454, %v1_1000744c
  store i32 %v3_10007458, i32* %r0.global-to-local, align 4
  %v1_1000745c = urem i32 %v3_10007458, 2
  store i32 %v1_1000745c, i32* %r11.global-to-local, align 4
  %v3_1000745c = icmp eq i32 %v1_1000745c, 0
  br i1 %v3_1000745c, label %dec_label_pc_10007464, label %dec_label_pc_10007fcc

dec_label_pc_10007464:                            ; preds = %dec_label_pc_10007448, %dec_label_pc_10008064
  %v0_10007464 = phi i32 [ %v0_1000744c, %dec_label_pc_10007448 ], [ %v0_10007464.pre, %dec_label_pc_10008064 ]
  %v1_10007464 = call i32 @__asm_rlwinm(i32 %v0_10007464, i32 29, i32 3, i32 29)
  %v0_10007468 = load i32, i32* %r3.global-to-local, align 4
  %v1_10007468 = urem i32 %v0_10007468, 32
  store i32 %v1_10007468, i32* %r11.global-to-local, align 4
  %v1_1000746c = load i32, i32* @r15, align 4
  %v2_1000746c = add i32 %v1_1000746c, %v1_10007464
  store i32 %v2_1000746c, i32* %r9.global-to-local, align 4
  %v1_10007470 = add i32 %v2_1000746c, 56
  %v2_10007470 = inttoptr i32 %v1_10007470 to i32*
  %v3_10007470 = load i32, i32* %v2_10007470, align 4
  %v3_10007474 = lshr i32 %v3_10007470, %v1_10007468
  store i32 %v3_10007474, i32* %r0.global-to-local, align 4
  %v1_10007478 = urem i32 %v3_10007474, 2
  %v3_10007478 = icmp eq i32 %v1_10007478, 0
  br i1 %v3_10007478, label %dec_label_pc_10007418, label %dec_label_pc_10007480.preheader

dec_label_pc_10007480.preheader:                  ; preds = %dec_label_pc_10007464
  %v0_10007480.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10007480

dec_label_pc_10007480:                            ; preds = %dec_label_pc_10007480.preheader, %dec_label_pc_100074ec
  %v0_10007ef4 = phi i32 [ %v0_10007480.pre, %dec_label_pc_10007480.preheader ], [ %v0_10007504, %dec_label_pc_100074ec ]
  %v1_10007480 = add i32 %v0_10007ef4, 12
  %v2_10007480 = inttoptr i32 %v1_10007480 to i32*
  %v3_10007480 = load i32, i32* %v2_10007480, align 4
  store i32 %v3_10007480, i32* %r10.global-to-local, align 4
  %v1_10007484 = icmp slt i32 %v3_10007480, 0
  %v3_10007484 = icmp eq i32 %v3_10007480, 0
  store i1 %v1_10007484, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007484, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007484, label %dec_label_pc_10007418, label %dec_label_pc_1000748c

dec_label_pc_1000748c:                            ; preds = %dec_label_pc_10007480
  %v1_1000748c = add i32 %v0_10007ef4, 24
  %v2_1000748c = inttoptr i32 %v1_1000748c to i32*
  %v3_1000748c = load i32, i32* %v2_1000748c, align 4
  store i32 %v3_1000748c, i32* %r0.global-to-local, align 4
  %v1_10007490 = add i32 %v0_10007ef4, 28
  store i32 %v1_10007490, i32* %r26.global-to-local, align 4
  %v1_10007494 = icmp slt i32 %v3_1000748c, 356
  %v3_10007494 = icmp eq i32 %v3_1000748c, 356
  store i1 %v1_10007494, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007494, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007494, label %dec_label_pc_10007eec, label %dec_label_pc_1000749c

dec_label_pc_1000749c:                            ; preds = %dec_label_pc_1000748c, %dec_label_pc_10007eec
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_100074a4 = load i32, i32* %r24.global-to-local, align 4
  %v2_100074a4 = inttoptr i32 %v1_100074a4 to i32*
  store i32 0, i32* %v2_100074a4, align 4
  %v0_100074a8 = load i32, i32* %r28.global-to-local, align 4
  %v1_100074a8 = add i32 %v0_100074a8, 24
  %v2_100074a8 = inttoptr i32 %v1_100074a8 to i32*
  %v3_100074a8 = load i32, i32* %v2_100074a8, align 4
  store i32 %v3_100074a8, i32* %r5.global-to-local, align 4
  %v1_100074ac = add i32 %v0_100074a8, 4
  %v2_100074ac = inttoptr i32 %v1_100074ac to i32*
  %v3_100074ac = load i32, i32* %v2_100074ac, align 4
  store i32 %v3_100074ac, i32* %r3.global-to-local, align 4
  %v0_100074b0 = load i32, i32* %r26.global-to-local, align 4
  %v2_100074b0 = add i32 %v0_100074b0, %v3_100074a8
  store i32 %v2_100074b0, i32* @r29, align 4
  %v1_100074b4 = sub i32 356, %v3_100074a8
  store i32 %v1_100074b4, i32* %r5.global-to-local, align 4
  store i32 268465344, i32* @lr, align 4
  %v4_100074bc = call i32 @function_10009cf0(i32 %v3_100074ac, i32 %v2_100074b0, i32 %v1_100074b4, i32 16384)
  store i32 %v4_100074bc, i32* %r3.global-to-local, align 4
  %tmp117 = icmp slt i32 %v4_100074bc, 1
  br i1 %tmp117, label %dec_label_pc_10007e98, label %dec_label_pc_100074c8

dec_label_pc_100074c8:                            ; preds = %dec_label_pc_1000749c
  store i32 %v4_100074bc, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 65, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100074d4

dec_label_pc_100074d4:                            ; preds = %dec_label_pc_100074e4, %dec_label_pc_100074c8
  %v0_100074e838 = phi i32 [ %v1_100074e8, %dec_label_pc_100074e4 ], [ %v4_100074bc, %dec_label_pc_100074c8 ]
  %v1_100074e0 = phi i32 [ %v1_100074e4, %dec_label_pc_100074e4 ], [ 0, %dec_label_pc_100074c8 ]
  %v1_100074d4 = load i32, i32* @r29, align 4
  %v2_100074d4 = add i32 %v1_100074d4, %v1_100074e0
  %v3_100074d4 = inttoptr i32 %v2_100074d4 to i8*
  %v4_100074d4 = load i8, i8* %v3_100074d4, align 1
  %v5_100074d4 = zext i8 %v4_100074d4 to i32
  store i32 %v5_100074d4, i32* %r0.global-to-local, align 4
  %v3_100074d8 = icmp eq i8 %v4_100074d4, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100074d8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100074d8, label %dec_label_pc_100074e0, label %dec_label_pc_100074e4

dec_label_pc_100074e0:                            ; preds = %dec_label_pc_100074d4
  %v0_100074e0 = load i32, i32* %r11.global-to-local, align 4
  %v3_100074e0 = trunc i32 %v0_100074e0 to i8
  store i8 %v3_100074e0, i8* %v3_100074d4, align 1
  %v0_100074e4.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_100074e8.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100074e4

dec_label_pc_100074e4:                            ; preds = %dec_label_pc_100074d4, %dec_label_pc_100074e0
  %v0_100074e8 = phi i32 [ %v0_100074e838, %dec_label_pc_100074d4 ], [ %v0_100074e8.pre, %dec_label_pc_100074e0 ]
  %v0_100074e4 = phi i32 [ %v1_100074e0, %dec_label_pc_100074d4 ], [ %v0_100074e4.pre, %dec_label_pc_100074e0 ]
  %v1_100074e4 = add i32 %v0_100074e4, 1
  store i32 %v1_100074e4, i32* %r9.global-to-local, align 4
  %v1_100074e8 = add i32 %v0_100074e8, -1
  store i32 %v1_100074e8, i32* %ctr.global-to-local, align 4
  %v2_100074e8 = icmp eq i32 %v1_100074e8, 0
  br i1 %v2_100074e8, label %dec_label_pc_100074ec, label %dec_label_pc_100074d4

dec_label_pc_100074ec:                            ; preds = %dec_label_pc_100074e4, %dec_label_pc_10007e9c
  %v0_100074ec = load i32, i32* %r28.global-to-local, align 4
  %v1_100074ec = add i32 %v0_100074ec, 24
  %v2_100074ec = inttoptr i32 %v1_100074ec to i32*
  %v3_100074ec = load i32, i32* %v2_100074ec, align 4
  %v3_100074f4 = load i32, i32* @global_var_1001c27c.123, align 4
  store i32 %v3_100074f4, i32* %r0.global-to-local, align 4
  %v2_100074f8 = add i32 %v3_100074ec, %v4_100074bc
  store i32 %v2_100074f8, i32* %r5.global-to-local, align 4
  store i32 %v2_100074f8, i32* %v2_100074ec, align 4
  %v0_10007500 = load i32, i32* %r0.global-to-local, align 4
  %v1_10007500 = load i32, i32* %r28.global-to-local, align 4
  %v2_10007500 = add i32 %v1_10007500, 8
  %v3_10007500 = inttoptr i32 %v2_10007500 to i32*
  store i32 %v0_10007500, i32* %v3_10007500, align 4
  %v0_10007504 = load i32, i32* %r28.global-to-local, align 4
  %v1_10007504 = add i32 %v0_10007504, 12
  %v2_10007504 = inttoptr i32 %v1_10007504 to i32*
  %v3_10007504 = load i32, i32* %v2_10007504, align 4
  store i32 %v3_10007504, i32* %r10.global-to-local, align 4
  %v1_10007508 = icmp ult i32 %v3_10007504, 10
  %v2_10007508 = icmp ugt i32 %v3_10007504, 10
  %v3_10007508 = icmp eq i32 %v3_10007504, 10
  store i1 %v1_10007508, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007508, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10007508, label %dec_label_pc_10007480, label %dec_label_pc_10007510

dec_label_pc_10007510:                            ; preds = %dec_label_pc_100074ec
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v1_10007514 = mul i32 %v3_10007504, 4
  store i32 %v1_10007514, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000bb98.161 to i32), i32* %r11.global-to-local, align 4
  %v2_1000751c = add i32 %v1_10007514, ptrtoint (i32* @global_var_1000bb98.161 to i32)
  %v3_1000751c = inttoptr i32 %v2_1000751c to i32*
  %v4_1000751c = load i32, i32* %v3_1000751c, align 4
  %v2_10007520 = add i32 %v4_1000751c, ptrtoint (i32* @global_var_1000bb98.161 to i32)
  store i32 %v2_10007520, i32* %r9.global-to-local, align 4
  store i32 %v2_10007520, i32* %ctr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v2_10007520)
  br label %dec_label_pc_1000752c

dec_label_pc_1000752c:                            ; preds = %dec_label_pc_10007390, %dec_label_pc_10007374, %dec_label_pc_10007510
  %v0_1000752c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000752c = load i32, i32* @r29, align 4
  %v2_1000752c = add i32 %v1_1000752c, 12
  %v3_1000752c = inttoptr i32 %v2_1000752c to i32*
  store i32 %v0_1000752c, i32* %v3_1000752c, align 4
  %v0_10007530 = load i32, i32* %r28.global-to-local, align 4
  %v1_10007530 = trunc i32 %v0_10007530 to i8
  %v2_10007530 = load i32, i32* @r29, align 4
  %v3_10007530 = add i32 %v2_10007530, 384
  %v4_10007530 = inttoptr i32 %v3_10007530 to i8*
  store i8 %v1_10007530, i8* %v4_10007530, align 1
  br label %dec_label_pc_1000731c

dec_label_pc_10007538:                            ; preds = %dec_label_pc_100072e4
  %v1_1000753c = call i32 @__asm_rlwinm(i32 %v3_10007538, i32 29, i32 3, i32 29)
  %v0_10007540 = load i32, i32* @r31, align 4
  %v2_10007540 = icmp slt i32 %v0_10007540, %v3_10007538
  %v4_10007540 = icmp eq i32 %v0_10007540, %v3_10007538
  store i1 %v2_10007540, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10007540, i1* %cr7_eq.global-to-local, align 1
  %v1_10007544 = load i32, i32* @r15, align 4
  %v2_10007544 = add i32 %v1_10007544, %v1_1000753c
  store i32 %v2_10007544, i32* %r11.global-to-local, align 4
  %v1_10007548 = urem i32 %v3_10007538, 32
  store i32 %v1_10007548, i32* %r0.global-to-local, align 4
  %v1_1000754c = add i32 %v2_10007544, 184
  %v2_1000754c = inttoptr i32 %v1_1000754c to i32*
  %v3_1000754c = load i32, i32* %v2_1000754c, align 4
  %v0_10007550 = load i32, i32* %r10.global-to-local, align 4
  %v3_10007550 = shl i32 %v0_10007550, %v1_10007548
  store i32 %v3_10007550, i32* %r0.global-to-local, align 4
  %v2_10007554 = or i32 %v3_10007550, %v3_1000754c
  store i32 %v2_10007554, i32* %r9.global-to-local, align 4
  store i32 %v2_10007554, i32* %v2_1000754c, align 4
  br i1 %v2_10007540, label %dec_label_pc_10007560, label %dec_label_pc_1000731c

dec_label_pc_10007560:                            ; preds = %dec_label_pc_10007538
  store i32 %v3_10007538, i32* @r31, align 4
  br label %dec_label_pc_1000731c

dec_label_pc_10007e98:                            ; preds = %dec_label_pc_1000749c
  %v3_100074c0 = icmp eq i32 %v4_100074bc, 0
  br i1 %v3_100074c0, label %dec_label_pc_1000817c, label %dec_label_pc_10007e9c

dec_label_pc_10007e9c:                            ; preds = %dec_label_pc_10007e98
  %v1_10007e9c = icmp slt i32 %v4_100074bc, -1
  %v3_10007e9c = icmp eq i32 %v4_100074bc, -1
  store i1 %v1_10007e9c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e9c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007e9c, label %dec_label_pc_10007ea4, label %dec_label_pc_100074ec

dec_label_pc_10007ea4:                            ; preds = %dec_label_pc_10007e9c
  %v0_10007ea4 = load i32, i32* %r24.global-to-local, align 4
  %v1_10007ea4 = inttoptr i32 %v0_10007ea4 to i32*
  %v2_10007ea4 = load i32, i32* %v1_10007ea4, align 4
  store i32 %v2_10007ea4, i32* %r0.global-to-local, align 4
  %v1_10007ea8 = icmp slt i32 %v2_10007ea4, 11
  %v3_10007ea8 = icmp eq i32 %v2_10007ea4, 11
  store i1 %v1_10007ea8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007ea8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007ea8, label %dec_label_pc_10007418, label %dec_label_pc_10007eb0

dec_label_pc_10007eb0:                            ; preds = %dec_label_pc_10007ea4, %dec_label_pc_1000817c
  %v0_10007eb0 = load i32, i32* %r28.global-to-local, align 4
  %v1_10007eb0 = add i32 %v0_10007eb0, 4
  %v2_10007eb0 = inttoptr i32 %v1_10007eb0 to i32*
  %v3_10007eb0 = load i32, i32* %v2_10007eb0, align 4
  store i32 %v3_10007eb0, i32* %r3.global-to-local, align 4
  store i32 268467896, i32* @lr, align 4
  %v0_10007eb4 = call i32 @function_100090cc()
  store i32 %v0_10007eb4, i32* %r3.global-to-local, align 4
  %v0_10007eb8 = load i32, i32* %r28.global-to-local, align 4
  %v1_10007eb8 = add i32 %v0_10007eb8, 384
  %v2_10007eb8 = inttoptr i32 %v1_10007eb8 to i8*
  %v3_10007eb8 = load i8, i8* %v2_10007eb8, align 1
  %v4_10007eb8 = zext i8 %v3_10007eb8 to i32
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_10007ec0 = add nuw nsw i32 %v4_10007eb8, 1
  store i32 %v1_10007ec0, i32* %r9.global-to-local, align 4
  %v2_10007ec4 = add i32 %v0_10007eb8, 4
  %v3_10007ec4 = inttoptr i32 %v2_10007ec4 to i32*
  store i32 -1, i32* %v3_10007ec4, align 4
  %v0_10007ec8 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007ec8 = urem i32 %v0_10007ec8, 256
  store i32 %v1_10007ec8, i32* %r9.global-to-local, align 4
  %v1_10007ecc = icmp ult i32 %v1_10007ec8, 9
  %v3_10007ecc = icmp eq i32 %v1_10007ec8, 9
  store i1 %v1_10007ecc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007ecc, i1* %cr7_eq.global-to-local, align 1
  %v1_10007ed0 = trunc i32 %v0_10007ec8 to i8
  %v2_10007ed0 = load i32, i32* %r28.global-to-local, align 4
  %v3_10007ed0 = add i32 %v2_10007ed0, 384
  %v4_10007ed0 = inttoptr i32 %v3_10007ed0 to i8*
  store i8 %v1_10007ed0, i8* %v4_10007ed0, align 1
  %v0_10007ed4 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_10007ed4 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_10007ed4 = or i1 %v0_10007ed4, %v1_10007ed4
  br i1 %v2_10007ed4, label %dec_label_pc_10008188, label %dec_label_pc_10007ed8

dec_label_pc_10007ed8:                            ; preds = %dec_label_pc_10007eb0
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10007ee0 = load i32, i32* %r28.global-to-local, align 4
  %v2_10007ee0 = add i32 %v1_10007ee0, 12
  %v3_10007ee0 = inttoptr i32 %v2_10007ee0 to i32*
  store i32 0, i32* %v3_10007ee0, align 4
  %v0_10007ee4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10007ee4 = trunc i32 %v0_10007ee4 to i8
  %v2_10007ee4 = load i32, i32* %r28.global-to-local, align 4
  %v3_10007ee4 = add i32 %v2_10007ee4, 384
  %v4_10007ee4 = inttoptr i32 %v3_10007ee4 to i8*
  store i8 %v1_10007ee4, i8* %v4_10007ee4, align 1
  br label %dec_label_pc_10007418

dec_label_pc_10007eec:                            ; preds = %dec_label_pc_1000748c
  store i32 292, i32* %r5.global-to-local, align 4
  store i32 %v1_10007490, i32* %r3.global-to-local, align 4
  %v1_10007ef4 = add i32 %v0_10007ef4, 92
  store i32 268467964, i32* @lr, align 4
  %v3_10007ef8 = call i32 @function_1000982c(i32 %v1_10007490, i32 %v1_10007ef4, i32 292)
  store i32 %v3_10007ef8, i32* %r3.global-to-local, align 4
  %v0_10007efc = load i32, i32* %r28.global-to-local, align 4
  %v1_10007efc = add i32 %v0_10007efc, 24
  %v2_10007efc = inttoptr i32 %v1_10007efc to i32*
  %v3_10007efc = load i32, i32* %v2_10007efc, align 4
  store i32 %v3_10007efc, i32* %r9.global-to-local, align 4
  %v1_10007f00 = add i32 %v3_10007efc, -64
  store i32 %v1_10007f00, i32* %r5.global-to-local, align 4
  store i32 %v1_10007f00, i32* %v2_10007efc, align 4
  br label %dec_label_pc_1000749c

dec_label_pc_10007fcc:                            ; preds = %dec_label_pc_10007448
  store i32 4, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 %v1_10007fe0, i32* %r7.global-to-local, align 4
  store i32 4, i32* %stack_var_-1912, align 4
  store i32 0, i32* %stack_var_-1920, align 4
  store i32 268468208, i32* @lr, align 4
  %v5_10007fec = call i32 @function_10009c84(i32 1, i32 4, i32 %v2_10007fd0, i32 %v1_10007fe0, i32 %v2_10007450)
  store i32 %v5_10007fec, i32* %r3.global-to-local, align 4
  %v3_10007ff0 = load i32, i32* %stack_var_-1920, align 4
  store i32 %v3_10007ff0, i32* %r0.global-to-local, align 4
  %v2_10007ff4 = or i32 %v3_10007ff0, %v5_10007fec
  %v5_10007ff4 = icmp eq i32 %v2_10007ff4, 0
  br i1 %v5_10007ff4, label %dec_label_pc_10007ffc, label %dec_label_pc_1000815c

dec_label_pc_10007ffc:                            ; preds = %dec_label_pc_10007fcc
  store i32 2, i32* %r10.global-to-local, align 4
  %v1_10008000 = load i32, i32* %r28.global-to-local, align 4
  %v2_10008000 = add i32 %v1_10008000, 12
  %v3_10008000 = inttoptr i32 %v2_10008000 to i32*
  store i32 2, i32* %v3_10008000, align 4
  %v0_10008004 = call i32 @function_10005f3c()
  %v3_1000800c = load i16, i16* @global_var_1001c278.126, align 2
  %v4_1000800c = zext i16 %v3_1000800c to i32
  store i32 %v4_1000800c, i32* %r11.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10008014 = load i32, i32* @global_var_1001c270.124, align 4
  store i32 %v3_10008014, i32* %r10.global-to-local, align 4
  %v1_1000801c = icmp slt i32 %v3_10008014, 0
  %v3_1000801c = icmp eq i32 %v3_10008014, 0
  store i1 %v1_1000801c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000801c, i1* %cr7_eq.global-to-local, align 1
  %v2_10008018 = urem i32 %v0_10008004, %v4_1000800c
  %v2_10008020 = sub i32 %v0_10008004, %v2_10008018
  store i32 %v2_10008020, i32* %r0.global-to-local, align 4
  store i32 %v2_10008018, i32* %r3.global-to-local, align 4
  %tmp119 = icmp slt i32 %v3_10008014, 1
  br i1 %tmp119, label %dec_label_pc_10008060, label %dec_label_pc_10008030

dec_label_pc_10008030:                            ; preds = %dec_label_pc_10007ffc
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v3_10008014, i32* %ctr.global-to-local, align 4
  %v3_10008038 = load i32, i32* @global_var_1001c274.125, align 4
  store i32 %v3_10008038, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000803c

dec_label_pc_1000803c:                            ; preds = %dec_label_pc_10008058, %dec_label_pc_10008030
  %v0_1000805c = phi i32 [ %v1_1000805c, %dec_label_pc_10008058 ], [ %v3_10008014, %dec_label_pc_10008030 ]
  %v0_10008058 = phi i32 [ %v1_10008058, %dec_label_pc_10008058 ], [ %v3_10008038, %dec_label_pc_10008030 ]
  store i32 %v0_10008058, i32* %r9.global-to-local, align 4
  %v1_10008040 = add i32 %v0_10008058, 8
  %v2_10008040 = inttoptr i32 %v1_10008040 to i16*
  %v3_10008040 = load i16, i16* %v2_10008040, align 2
  %v4_10008040 = zext i16 %v3_10008040 to i32
  store i32 %v4_10008040, i32* %r0.global-to-local, align 4
  %v2_10008044 = icmp ult i32 %v4_10008040, %v2_10008018
  %v3_10008044 = icmp ugt i32 %v4_10008040, %v2_10008018
  %v4_10008044 = icmp eq i32 %v4_10008040, %v2_10008018
  br i1 %v3_10008044, label %dec_label_pc_10008058, label %dec_label_pc_1000804c

dec_label_pc_1000804c:                            ; preds = %dec_label_pc_1000803c
  %v1_1000804c = add i32 %v0_10008058, 10
  %v2_1000804c = inttoptr i32 %v1_1000804c to i16*
  %v3_1000804c = load i16, i16* %v2_1000804c, align 2
  %v4_1000804c = zext i16 %v3_1000804c to i32
  store i32 %v4_1000804c, i32* %r0.global-to-local, align 4
  %v2_10008050 = icmp ult i32 %v4_1000804c, %v2_10008018
  %v3_10008050 = icmp ugt i32 %v4_1000804c, %v2_10008018
  %v4_10008050 = icmp eq i32 %v4_1000804c, %v2_10008018
  br i1 %v3_10008050, label %dec_label_pc_10008064.loopexit, label %dec_label_pc_10008058

dec_label_pc_10008058:                            ; preds = %dec_label_pc_1000804c, %dec_label_pc_1000803c
  %v4_100080507 = phi i1 [ %v4_10008050, %dec_label_pc_1000804c ], [ %v4_10008044, %dec_label_pc_1000803c ]
  %v2_100080505 = phi i1 [ %v2_10008050, %dec_label_pc_1000804c ], [ %v2_10008044, %dec_label_pc_1000803c ]
  %v1_10008058 = add i32 %v0_10008058, 16
  store i32 %v1_10008058, i32* %r0.global-to-local, align 4
  %v1_1000805c = add i32 %v0_1000805c, -1
  store i32 %v1_1000805c, i32* %ctr.global-to-local, align 4
  %v2_1000805c = icmp eq i32 %v1_1000805c, 0
  br i1 %v2_1000805c, label %dec_label_pc_10008060.loopexit, label %dec_label_pc_1000803c

dec_label_pc_10008060.loopexit:                   ; preds = %dec_label_pc_10008058
  store i1 %v2_100080505, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100080507, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_10008060

dec_label_pc_10008060:                            ; preds = %dec_label_pc_10008060.loopexit, %dec_label_pc_10007ffc
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008064

dec_label_pc_10008064.loopexit:                   ; preds = %dec_label_pc_1000804c
  store i1 %v2_10008050, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10008050, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_10008064

dec_label_pc_10008064:                            ; preds = %dec_label_pc_10008064.loopexit, %dec_label_pc_10008060
  %v0_1000806c = phi i32 [ %v0_10008058, %dec_label_pc_10008064.loopexit ], [ 0, %dec_label_pc_10008060 ]
  %v0_10008064 = load i32, i32* %r28.global-to-local, align 4
  %v1_10008064 = add i32 %v0_10008064, 4
  %v2_10008064 = inttoptr i32 %v1_10008064 to i32*
  %v3_10008064 = load i32, i32* %v2_10008064, align 4
  store i32 %v3_10008064, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  %v2_1000806c = inttoptr i32 %v0_10008064 to i32*
  store i32 %v0_1000806c, i32* %v2_1000806c, align 4
  %v0_10008070 = load i32, i32* %r5.global-to-local, align 4
  %v1_10008070 = load i32, i32* %r28.global-to-local, align 4
  %v2_10008070 = add i32 %v1_10008070, 24
  %v3_10008070 = inttoptr i32 %v2_10008070 to i32*
  store i32 %v0_10008070, i32* %v3_10008070, align 4
  %v0_10007464.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10007464

dec_label_pc_1000815c:                            ; preds = %dec_label_pc_10007fcc
  %v0_1000815c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000815c = add i32 %v0_1000815c, 4
  %v2_1000815c = inttoptr i32 %v1_1000815c to i32*
  %v3_1000815c = load i32, i32* %v2_1000815c, align 4
  store i32 %v3_1000815c, i32* %r3.global-to-local, align 4
  store i32 268468580, i32* @lr, align 4
  %v0_10008160 = call i32 @function_100090cc()
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_1000816c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000816c = add i32 %v1_1000816c, 4
  %v3_1000816c = inttoptr i32 %v2_1000816c to i32*
  store i32 -1, i32* %v3_1000816c, align 4
  %v0_10008170 = load i32, i32* %r10.global-to-local, align 4
  %v1_10008170 = load i32, i32* %r28.global-to-local, align 4
  %v2_10008170 = add i32 %v1_10008170, 12
  %v3_10008170 = inttoptr i32 %v2_10008170 to i32*
  store i32 %v0_10008170, i32* %v3_10008170, align 4
  %v0_10008174 = load i32, i32* @r31, align 4
  %v1_10008174 = trunc i32 %v0_10008174 to i8
  %v2_10008174 = load i32, i32* %r28.global-to-local, align 4
  %v3_10008174 = add i32 %v2_10008174, 384
  %v4_10008174 = inttoptr i32 %v3_10008174 to i8*
  store i8 %v1_10008174, i8* %v4_10008174, align 1
  br label %dec_label_pc_10007418

dec_label_pc_1000817c:                            ; preds = %dec_label_pc_10007e98
  store i32 104, i32* %r0.global-to-local, align 4
  %v1_10008180 = load i32, i32* %r24.global-to-local, align 4
  %v2_10008180 = inttoptr i32 %v1_10008180 to i32*
  store i32 104, i32* %v2_10008180, align 4
  br label %dec_label_pc_10007eb0

dec_label_pc_10008188:                            ; preds = %dec_label_pc_10007eb0
  %v0_10008188 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008188, i32* @r3, align 4
  store i32 268468624, i32* @lr, align 4
  %v0_1000818c = call i32 @function_100067a8()
  store i32 %v0_1000818c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10007418

dec_label_pc_100081cc:                            ; preds = %dec_label_pc_10006bbc
  %v3_100081d0 = load i32, i32* @global_var_1001c284.129, align 4
  store i32 %v3_100081d0, i32* %r3.global-to-local, align 4
  store i32 268468696, i32* @lr, align 4
  %v0_100081d4 = call i32 @function_100090cc()
  store i32 %v0_100081d4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100071b4

dec_label_pc_100081dc:                            ; preds = %dec_label_pc_100070cc
  store i32 %v0_100070c4, i32* @r29, align 4
  br label %dec_label_pc_100081e0

dec_label_pc_100081e0:                            ; preds = %dec_label_pc_10007100, %dec_label_pc_100081dc
  %v1_100081e0 = phi i32 [ %v2_100070d8, %dec_label_pc_100081dc ], [ %v0_10007100, %dec_label_pc_10007100 ]
  %v2_100081e0 = add i32 %v1_100081e0, 16
  %v3_100081e0 = inttoptr i32 %v2_100081e0 to i32*
  store i32 %tmp51, i32* %v3_100081e0, align 4
  %v0_100081e4 = load i32, i32* @r29, align 4
  store i32 %v0_100081e4, i32* @r31, align 4
  %v0_100081e8 = load i32, i32* %r8.global-to-local, align 4
  %v1_100081e8 = trunc i32 %v0_100081e8 to i16
  %v2_100081e8 = load i32, i32* @r3, align 4
  %v3_100081e8 = add i32 %v2_100081e8, 20
  %v4_100081e8 = inttoptr i32 %v3_100081e8 to i16*
  store i16 %v1_100081e8, i16* %v4_100081e8, align 2
  store i32 268468720, i32* @lr, align 4
  %v0_100081ec = call i32 @function_100067a8()
  store i32 %v0_100081ec, i32* %r3.global-to-local, align 4
  %v1_1000700c.pre.pre = load i32, i32* %r24.global-to-local, align 4
  br label %dec_label_pc_10007004

; uselistorder directives
  uselistorder i32 %v1_1000805c, { 2, 1, 0 }
  uselistorder i32 %v1_10008058, { 1, 0 }
  uselistorder i32 %v4_1000804c, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10008040, { 2, 1, 0, 3 }
  uselistorder i32 %v0_10008058, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v2_10008018, { 3, 2, 1, 6, 5, 4, 0, 7 }
  uselistorder i32 %v3_10008014, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32 %v1_10007ec8, { 1, 2, 0 }
  uselistorder i32 %v0_10007ec8, { 1, 0 }
  uselistorder i32 %v2_10007ea4, { 1, 0, 2 }
  uselistorder i32 %v1_10007548, { 1, 0 }
  uselistorder i32 %v1_10007514, { 1, 0 }
  uselistorder i32 %v3_10007504, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v0_10007504, { 1, 0 }
  uselistorder i32 %v1_100074e8, { 2, 1, 0 }
  uselistorder i32 %v1_100074e4, { 1, 0 }
  uselistorder i32 %v1_100074e0, { 1, 0 }
  uselistorder i32 %v4_100074bc, { 3, 2, 6, 0, 1, 4, 5, 7 }
  uselistorder i32 %v3_100074a8, { 1, 0, 2 }
  uselistorder i32 %v1_10007490, { 1, 0, 2 }
  uselistorder i32 %v3_1000748c, { 1, 0, 2 }
  uselistorder i32 %v3_10007480, { 1, 0, 2 }
  uselistorder i32 %v0_10007ef4, { 0, 2, 1, 3 }
  uselistorder i32 %v1_10007468, { 1, 0 }
  uselistorder i32 %v1_1000745c, { 1, 0 }
  uselistorder i32 %v1_1000744c, { 1, 0 }
  uselistorder i32 %v0_1000744c, { 1, 0 }
  uselistorder i32 %v3_1000743c, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1000741c, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32 %v1_100073b4, { 2, 1, 4, 3, 5, 0 }
  uselistorder i32 %v1_10007398, { 1, 2, 0 }
  uselistorder i32 %v1_10007394, { 1, 0 }
  uselistorder i32 %v3_1000737c, { 0, 2, 1, 3 }
  uselistorder i32 %v2_10007368, { 0, 2, 1, 3 }
  uselistorder i1 %v3_10007348, { 2, 0, 1 }
  uselistorder i1 %v1_10007348, { 1, 0, 2 }
  uselistorder i32 %v3_10007344, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v2_10007340, { 0, 3, 4, 5, 2, 1 }
  uselistorder i32 %v1_10007320, { 0, 1, 4, 3, 2, 5 }
  uselistorder i32 %v1_10007300, { 1, 0 }
  uselistorder i32 %v3_10007538, { 5, 0, 8, 7, 9, 4, 1, 3, 2, 6, 10 }
  uselistorder i32 %v2_100072d8, { 2, 1, 0, 3 }
  uselistorder i32 %v1_100072ac, { 1, 0 }
  uselistorder i32 %v1_1000728c, { 1, 0 }
  uselistorder i32 %v0_10007258, { 1, 2, 0 }
  uselistorder i32 %v0_1000724c, { 1, 2, 0 }
  uselistorder i32 %v0_10007240, { 1, 2, 0 }
  uselistorder i32 %v0_10007234, { 1, 2, 0 }
  uselistorder i32 %v0_10007210, { 2, 1, 4, 3, 6, 5, 7, 8, 0 }
  uselistorder i32 %v0_100071fc, { 4, 3, 2, 5, 6, 7, 1, 0 }
  uselistorder i32 %v0_100071f0, { 1, 2, 0 }
  uselistorder i32 %v0_100071dc, { 4, 3, 2, 5, 6, 7, 1, 0 }
  uselistorder i32 %v0_100071c8, { 4, 3, 2, 5, 6, 7, 1, 0 }
  uselistorder i32 %v0_100071bc, { 1, 2, 0 }
  uselistorder i32 %v1_10007108, { 1, 0 }
  uselistorder i32 %v3_10007100, { 1, 0, 2 }
  uselistorder i32 %v1_100070fc, { 2, 1, 0 }
  uselistorder i32 %v1_100070f8, { 1, 0 }
  uselistorder i32 %v0_10007100, { 0, 3, 2, 1 }
  uselistorder i32 %v3_100070dc, { 1, 0, 2 }
  uselistorder i32 %v0_100070c4, { 2, 0, 1, 3, 4, 5, 6, 7 }
  uselistorder i32 %v3_10007050, { 1, 0, 2 }
  uselistorder i32 %v2_10007034, { 1, 0, 2 }
  uselistorder i32 %v0_10007034, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v6_10007028, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v3_10007078, { 1, 0 }
  uselistorder i32 %v1_100070a0, { 1, 0 }
  uselistorder i32 %v1_10007098, { 1, 0 }
  uselistorder i32 %v1_100070b8, { 2, 1, 0 }
  uselistorder i32 %v1_10007090, { 1, 0 }
  uselistorder i32 %v4_10007080, { 1, 0, 2 }
  uselistorder i32 %v1_10006fe4, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_10006f70, { 1, 0 }
  uselistorder i32 %v4_10006f50, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v1_10006ec0, { 3, 1, 2, 0 }
  uselistorder i32 %v1_10006e48, { 3, 1, 2, 0 }
  uselistorder i32 %v0_10006e34, { 0, 2, 1, 4, 3, 6, 5, 8, 7, 10, 9, 12, 11, 14, 13, 16, 15, 18, 17, 20, 19, 22, 21, 23, 25, 24, 27, 26, 29, 28, 31, 30, 33, 32, 36, 35, 34, 38, 37, 40, 39, 42, 41, 44, 43, 46, 45, 48, 47, 50, 49, 51, 53, 52, 54, 55 }
  uselistorder i32 %v1_10006e1c, { 1, 2, 0 }
  uselistorder i32 %v0_10006e18, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_10006e04, { 1, 0 }
  uselistorder i32 %v3_10006dd4, { 1, 0, 2 }
  uselistorder i32 %v0_10006c50, { 1, 0 }
  uselistorder i32 %v1_10006c10, { 3, 1, 2, 0 }
  uselistorder i32 %v5_10006c00, { 1, 0, 2 }
  uselistorder i32 %v3_10006ba4, { 1, 0, 3, 2 }
  uselistorder i32 %v1_10006b8c, { 1, 0 }
  uselistorder i32 %v0_10006b88, { 1, 0 }
  uselistorder i32 %v2_10006b40, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10006a9c, { 1, 4, 3, 2, 0, 5, 7, 6, 8 }
  uselistorder i64* %stack_var_-1916, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 0, 2, 1 }
  uselistorder i32* %stack_var_-1888, { 0, 2, 1, 3 }
  uselistorder i32 %tmp57, { 1, 2, 0 }
  uselistorder i8 %tmp56, { 2, 1, 0 }
  uselistorder i16 %tmp55, { 0, 1, 4, 3, 2 }
  uselistorder i32 %tmp53, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 17, 16, 18, 19, 20, 21, 25, 22, 23, 24, 26, 27, 49, 50, 28, 51, 52, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 8, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 26, 25, 28, 27, 29, 30, 31, 18, 32, 33, 34, 35, 36, 37, 38, 39, 40, 1, 41, 42, 43, 44, 45, 46, 47, 49, 48, 50, 52, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 0, 2 }
  uselistorder i32* %r29.global-to-local, { 0, 3, 4, 1, 2, 5, 6 }
  uselistorder i32* %r28.global-to-local, { 3, 0, 1, 2, 4, 5, 6, 7, 10, 8, 9, 11, 12, 13, 20, 14, 15, 16, 17, 18, 19, 21, 22, 23 }
  uselistorder i32* %r24.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 22, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 2, 3, 4, 9, 5, 6, 7, 10, 11, 8, 12, 20, 13, 14, 16, 15, 17, 18, 19 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 17, 19, 20, 23, 21, 22, 24, 25, 26, 31, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 61, 62, 64, 65, 66 }
  uselistorder i32* %ctr.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 17, 18, 7, 8, 9, 19, 20, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i1* %cr7_lt.global-to-local, { 22, 24, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 23, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88 }
  uselistorder i1* %cr7_eq.global-to-local, { 24, 25, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 18, 23, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90 }
  uselistorder i16* @global_var_1001c278.126, { 2, 1, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_10009c84, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10009cf0, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_10009394, { 2, 1, 0 }
  uselistorder i32 ()* @function_100067a8, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_10009d28, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_10009da0, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 16384, { 1, 18, 0, 2, 19, 21, 22, 23, 24, 25, 26, 20, 3, 27, 4, 28, 29, 30, 5, 7, 6, 8, 31, 9, 32, 11, 33, 10, 13, 34, 12, 15, 14, 16, 35, 36, 17, 37, 38 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10004430, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_100043cc, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 33, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 192, { 1, 0, 2, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @function_10006894, { 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i16* @global_var_1001c306.139, { 2, 0, 1 }
  uselistorder i16 23, { 2, 3, 1, 0 }
  uselistorder i8 64, { 12, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 1024, { 1, 0 }
  uselistorder i32 65536, { 69, 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 13, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68 }
  uselistorder i32 ()* @function_10005f3c, { 75, 74, 73, 72, 71, 70, 68, 69, 22, 21, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 3, 2, 1, 0, 9, 8, 7, 6, 5, 4, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10009de0, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 2048, { 5, 3, 0, 1, 2, 4, 6 }
  uselistorder i32 388, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 356, { 3, 4, 5, 0, 7, 8, 1, 2, 9, 6 }
  uselistorder i32 ()* @function_1000949c, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_10005f8c, { 1, 0 }
  uselistorder i32 (i32)* @function_10008c10, { 2, 1, 3, 0 }
  uselistorder i32 ()* @function_10009114, { 5, 2, 4, 3, 1, 0 }
  uselistorder label %dec_label_pc_100081e0, { 1, 0 }
  uselistorder label %dec_label_pc_10007eb0, { 1, 0 }
  uselistorder label %dec_label_pc_1000752c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100074ec, { 1, 0 }
  uselistorder label %dec_label_pc_100074e4, { 1, 0 }
  uselistorder label %dec_label_pc_1000749c, { 1, 0 }
  uselistorder label %dec_label_pc_10007480, { 1, 0 }
  uselistorder label %dec_label_pc_10007464, { 1, 0 }
  uselistorder label %dec_label_pc_10007418, { 4, 5, 6, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_100073e4, { 1, 0 }
  uselistorder label %dec_label_pc_1000731c, { 3, 0, 4, 2, 5, 1 }
  uselistorder label %dec_label_pc_100072a0.dec_label_pc_100072a0_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10007280.dec_label_pc_10007280_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10007270, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_100071bc, { 1, 0 }
  uselistorder label %dec_label_pc_100071b4, { 1, 0 }
  uselistorder label %dec_label_pc_10007004, { 10, 0, 1, 2, 7, 8, 3, 4, 5, 6, 9, 11 }
  uselistorder label %dec_label_pc_10006ff8, { 1, 0 }
  uselistorder label %dec_label_pc_10006f24, { 0, 1, 2, 3, 4, 5, 9, 6, 7, 10, 8, 11, 13, 12 }
  uselistorder label %dec_label_pc_10006e18.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10006c0c, { 1, 0 }
}

define i32 @function_100081f4(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_100081f4:
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_100081f4 = icmp eq i32* %arg2, null
  %v1_100081fc = mul i32 %arg1, 8
  store i32 %v1_100081fc, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001c340.183 to i32), i32* %r9.global-to-local, align 4
  br i1 %v3_100081f4, label %dec_label_pc_10008214, label %dec_label_pc_1000820c

dec_label_pc_1000820c:                            ; preds = %dec_label_pc_100081f4
  %v1_1000820c = add i32 %v1_100081fc, add (i32 ptrtoint (i32* @global_var_1001c340.183 to i32), i32 4)
  %v2_1000820c = inttoptr i32 %v1_1000820c to i16*
  %v3_1000820c = load i16, i16* %v2_1000820c, align 4
  %v4_1000820c = zext i16 %v3_1000820c to i32
  store i32 %v4_1000820c, i32* %arg2, align 4
  %v0_10008214.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_10008214.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008214

dec_label_pc_10008214:                            ; preds = %dec_label_pc_100081f4, %dec_label_pc_1000820c
  %v1_10008214 = phi i32 [ ptrtoint (i32* @global_var_1001c340.183 to i32), %dec_label_pc_100081f4 ], [ %v1_10008214.pre, %dec_label_pc_1000820c ]
  %v0_10008214 = phi i32 [ %v1_100081fc, %dec_label_pc_100081f4 ], [ %v0_10008214.pre, %dec_label_pc_1000820c ]
  %v2_10008214 = add i32 %v0_10008214, %v1_10008214
  %v3_10008214 = inttoptr i32 %v2_10008214 to i32*
  %v4_10008214 = load i32, i32* %v3_10008214, align 4
  store i32 %v4_10008214, i32* %r3.global-to-local, align 4
  ret i32 %v4_10008214

; uselistorder directives
  uselistorder i32 %v1_100081fc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10008214, { 1, 0 }
}

define i32 @function_1000821c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000821c:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %r10.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %v1_10008220 = mul i32 %arg1, 8
  %v2_10008228 = add i32 %v1_10008220, ptrtoint (i32* @global_var_1001c340.183 to i32)
  %v1_10008230 = add i32 %v1_10008220, add (i32 ptrtoint (i32* @global_var_1001c340.183 to i32), i32 4)
  %v2_10008230 = inttoptr i32 %v1_10008230 to i16*
  %v3_10008230 = load i16, i16* %v2_10008230, align 4
  %v3_10008234 = icmp eq i16 %v3_10008230, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008234, i1* %cr7_eq.global-to-local, align 1
  %v3_10008238 = load i32, i32* @global_var_1001c23c.184, align 4
  %v1_1000823c = udiv i32 %v3_10008238, 16777216
  store i32 %v1_1000823c, i32* @r5, align 4
  %v1_10008240 = urem i32 %v3_10008238, 256
  store i32 %v1_10008240, i32* %r6.global-to-local, align 4
  %v1_10008244 = call i32 @__asm_rlwinm(i32 %v3_10008238, i32 24, i32 24, i32 31)
  %v1_10008248 = call i32 @__asm_rlwinm(i32 %v3_10008238, i32 16, i32 24, i32 31)
  %v0_1000824c = load i32, i32* @lr, align 4
  %v1_1000824c = load i1, i1* %cr7_eq.global-to-local, align 1
  %v2_1000824c = load i1, i1* %cr7_lt.global-to-local, align 1
  %v3_1000824c = or i1 %v1_1000824c, %v2_1000824c
  call void @__pseudo_cond_branch(i1 %v3_1000824c, i32 %v0_1000824c)
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_10008254 = inttoptr i32 %v2_10008228 to i32*
  br label %dec_label_pc_10008254

dec_label_pc_10008254:                            ; preds = %dec_label_pc_10008254, %dec_label_pc_1000821c
  %v1_10008260 = phi i32 [ %v1_10008294, %dec_label_pc_10008254 ], [ 0, %dec_label_pc_1000821c ]
  %v2_10008254 = load i32, i32* %v1_10008254, align 4
  %v2_10008258 = add i32 %v2_10008254, %v1_10008260
  %v3_10008258 = inttoptr i32 %v2_10008258 to i8*
  %v4_10008258 = load i8, i8* %v3_10008258, align 1
  %v5_10008258 = zext i8 %v4_10008258 to i32
  %v0_1000825c = load i32, i32* %r6.global-to-local, align 4
  %v2_1000825c = xor i32 %v0_1000825c, %v5_10008258
  %v3_10008260 = trunc i32 %v2_1000825c to i8
  store i8 %v3_10008260, i8* %v3_10008258, align 1
  %v2_10008264 = load i32, i32* %v1_10008254, align 4
  %v0_10008268 = load i32, i32* %r10.global-to-local, align 4
  %v2_10008268 = add i32 %v0_10008268, %v2_10008264
  %v3_10008268 = inttoptr i32 %v2_10008268 to i8*
  %v4_10008268 = load i8, i8* %v3_10008268, align 1
  %v5_10008268 = zext i8 %v4_10008268 to i32
  %v2_1000826c = xor i32 %v5_10008268, %v1_10008244
  %v3_10008270 = trunc i32 %v2_1000826c to i8
  store i8 %v3_10008270, i8* %v3_10008268, align 1
  %v2_10008274 = load i32, i32* %v1_10008254, align 4
  %v0_10008278 = load i32, i32* %r10.global-to-local, align 4
  %v2_10008278 = add i32 %v0_10008278, %v2_10008274
  %v3_10008278 = inttoptr i32 %v2_10008278 to i8*
  %v4_10008278 = load i8, i8* %v3_10008278, align 1
  %v5_10008278 = zext i8 %v4_10008278 to i32
  %v2_1000827c = xor i32 %v5_10008278, %v1_10008248
  %v3_10008280 = trunc i32 %v2_1000827c to i8
  store i8 %v3_10008280, i8* %v3_10008278, align 1
  %v2_10008284 = load i32, i32* %v1_10008254, align 4
  %v0_10008288 = load i32, i32* %r10.global-to-local, align 4
  %v2_10008288 = add i32 %v0_10008288, %v2_10008284
  %v3_10008288 = inttoptr i32 %v2_10008288 to i8*
  %v4_10008288 = load i8, i8* %v3_10008288, align 1
  %v5_10008288 = zext i8 %v4_10008288 to i32
  %v0_1000828c = load i32, i32* @r5, align 4
  %v2_1000828c = xor i32 %v0_1000828c, %v5_10008288
  %v3_10008290 = trunc i32 %v2_1000828c to i8
  store i8 %v3_10008290, i8* %v3_10008288, align 1
  %v0_10008294 = load i32, i32* %r10.global-to-local, align 4
  %v1_10008294 = add i32 %v0_10008294, 1
  store i32 %v1_10008294, i32* %r10.global-to-local, align 4
  %v3_10008298 = load i16, i16* %v2_10008230, align 4
  %v4_10008298 = zext i16 %v3_10008298 to i32
  %v2_1000829c = icmp slt i32 %v4_10008298, %v1_10008294
  %v3_1000829c = icmp sgt i32 %v4_10008298, %v1_10008294
  %v4_1000829c = icmp eq i32 %v4_10008298, %v1_10008294
  store i1 %v2_1000829c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000829c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000829c, label %dec_label_pc_10008254, label %dec_label_pc_100082a4

dec_label_pc_100082a4:                            ; preds = %dec_label_pc_10008254
  ret i32 %v2_10008228

; uselistorder directives
  uselistorder i32 %v4_10008298, { 2, 1, 0 }
  uselistorder i32 %v1_10008294, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v3_10008238, { 2, 3, 1, 0 }
  uselistorder i32 %v1_10008220, { 1, 0 }
}

define i32 @function_100082a8(i32 %arg1) local_unnamed_addr {
dec_label_pc_100082a8:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %r10.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %v1_100082ac = mul i32 %arg1, 8
  %v2_100082b4 = add i32 %v1_100082ac, ptrtoint (i32* @global_var_1001c340.183 to i32)
  %v1_100082bc = add i32 %v1_100082ac, add (i32 ptrtoint (i32* @global_var_1001c340.183 to i32), i32 4)
  %v2_100082bc = inttoptr i32 %v1_100082bc to i16*
  %v3_100082bc = load i16, i16* %v2_100082bc, align 4
  %v3_100082c0 = icmp eq i16 %v3_100082bc, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100082c0, i1* %cr7_eq.global-to-local, align 1
  %v3_100082c4 = load i32, i32* @global_var_1001c23c.184, align 4
  %v1_100082c8 = udiv i32 %v3_100082c4, 16777216
  store i32 %v1_100082c8, i32* @r5, align 4
  %v1_100082cc = urem i32 %v3_100082c4, 256
  store i32 %v1_100082cc, i32* %r6.global-to-local, align 4
  %v1_100082d0 = call i32 @__asm_rlwinm(i32 %v3_100082c4, i32 24, i32 24, i32 31)
  %v1_100082d4 = call i32 @__asm_rlwinm(i32 %v3_100082c4, i32 16, i32 24, i32 31)
  %v0_100082d8 = load i32, i32* @lr, align 4
  %v1_100082d8 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v2_100082d8 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v3_100082d8 = or i1 %v1_100082d8, %v2_100082d8
  call void @__pseudo_cond_branch(i1 %v3_100082d8, i32 %v0_100082d8)
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_100082e0 = inttoptr i32 %v2_100082b4 to i32*
  br label %dec_label_pc_100082e0

dec_label_pc_100082e0:                            ; preds = %dec_label_pc_100082e0, %dec_label_pc_100082a8
  %v1_100082ec = phi i32 [ %v1_10008320, %dec_label_pc_100082e0 ], [ 0, %dec_label_pc_100082a8 ]
  %v2_100082e0 = load i32, i32* %v1_100082e0, align 4
  %v2_100082e4 = add i32 %v2_100082e0, %v1_100082ec
  %v3_100082e4 = inttoptr i32 %v2_100082e4 to i8*
  %v4_100082e4 = load i8, i8* %v3_100082e4, align 1
  %v5_100082e4 = zext i8 %v4_100082e4 to i32
  %v0_100082e8 = load i32, i32* %r6.global-to-local, align 4
  %v2_100082e8 = xor i32 %v0_100082e8, %v5_100082e4
  %v3_100082ec = trunc i32 %v2_100082e8 to i8
  store i8 %v3_100082ec, i8* %v3_100082e4, align 1
  %v2_100082f0 = load i32, i32* %v1_100082e0, align 4
  %v0_100082f4 = load i32, i32* %r10.global-to-local, align 4
  %v2_100082f4 = add i32 %v0_100082f4, %v2_100082f0
  %v3_100082f4 = inttoptr i32 %v2_100082f4 to i8*
  %v4_100082f4 = load i8, i8* %v3_100082f4, align 1
  %v5_100082f4 = zext i8 %v4_100082f4 to i32
  %v2_100082f8 = xor i32 %v5_100082f4, %v1_100082d0
  %v3_100082fc = trunc i32 %v2_100082f8 to i8
  store i8 %v3_100082fc, i8* %v3_100082f4, align 1
  %v2_10008300 = load i32, i32* %v1_100082e0, align 4
  %v0_10008304 = load i32, i32* %r10.global-to-local, align 4
  %v2_10008304 = add i32 %v0_10008304, %v2_10008300
  %v3_10008304 = inttoptr i32 %v2_10008304 to i8*
  %v4_10008304 = load i8, i8* %v3_10008304, align 1
  %v5_10008304 = zext i8 %v4_10008304 to i32
  %v2_10008308 = xor i32 %v5_10008304, %v1_100082d4
  %v3_1000830c = trunc i32 %v2_10008308 to i8
  store i8 %v3_1000830c, i8* %v3_10008304, align 1
  %v2_10008310 = load i32, i32* %v1_100082e0, align 4
  %v0_10008314 = load i32, i32* %r10.global-to-local, align 4
  %v2_10008314 = add i32 %v0_10008314, %v2_10008310
  %v3_10008314 = inttoptr i32 %v2_10008314 to i8*
  %v4_10008314 = load i8, i8* %v3_10008314, align 1
  %v5_10008314 = zext i8 %v4_10008314 to i32
  %v0_10008318 = load i32, i32* @r5, align 4
  %v2_10008318 = xor i32 %v0_10008318, %v5_10008314
  %v3_1000831c = trunc i32 %v2_10008318 to i8
  store i8 %v3_1000831c, i8* %v3_10008314, align 1
  %v0_10008320 = load i32, i32* %r10.global-to-local, align 4
  %v1_10008320 = add i32 %v0_10008320, 1
  store i32 %v1_10008320, i32* %r10.global-to-local, align 4
  %v3_10008324 = load i16, i16* %v2_100082bc, align 4
  %v4_10008324 = zext i16 %v3_10008324 to i32
  %v2_10008328 = icmp slt i32 %v4_10008324, %v1_10008320
  %v3_10008328 = icmp sgt i32 %v4_10008324, %v1_10008320
  %v4_10008328 = icmp eq i32 %v4_10008324, %v1_10008320
  store i1 %v2_10008328, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10008328, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008328, label %dec_label_pc_100082e0, label %dec_label_pc_10008330

dec_label_pc_10008330:                            ; preds = %dec_label_pc_100082e0
  ret i32 %v2_100082b4

; uselistorder directives
  uselistorder i32 %v4_10008324, { 2, 1, 0 }
  uselistorder i32 %v1_10008320, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v3_100082c4, { 2, 3, 1, 0 }
  uselistorder i32 %v1_100082ac, { 1, 0 }
  uselistorder i32 16777216, { 0, 1, 2, 3, 5, 4, 7, 6 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_1001c340.183 to i32), i32 4), { 1, 2, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1001c340.183 to i32), { 1, 3, 0, 2, 4 }
}

define i32 @function_10008334(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10008334:
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  store i32 2, i32* @r3, align 4
  store i32 5, i32* %r19.global-to-local, align 4
  store i32 23, i32* %r20.global-to-local, align 4
  store i32 6, i32* %r21.global-to-local, align 4
  store i32 12, i32* %r22.global-to-local, align 4
  store i32 19, i32* %r23.global-to-local, align 4
  store i32 8, i32* %r24.global-to-local, align 4
  store i32 14, i32* %r25.global-to-local, align 4
  store i32 16, i32* %r26.global-to-local, align 4
  store i32 2, i32* %r27.global-to-local, align 4
  store i32 268469144, i32* @lr, align 4
  %v0_10008394 = call i32 @function_1000a020()
  store i32 %v0_10008394, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100083b4.186 to i32), i32* @lr, align 4
  %v3_100083b0 = call i32 @function_10008990(i32 ptrtoint (i32* @global_var_1000bbd4.185 to i32), i32 2, i32 2)
  store i32 12, i32* @r3, align 4
  %v0_100083b8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100083b8, i32* @global_var_1001c348.187, align 4
  %v0_100083bc = load i32, i32* %r27.global-to-local, align 4
  %v1_100083bc = trunc i32 %v0_100083bc to i16
  store i16 %v1_100083bc, i16* bitcast (i32* @global_var_1001c34c.188 to i16*), align 4
  store i32 268469188, i32* @lr, align 4
  %v0_100083c0 = call i32 @function_1000a020()
  store i32 %v0_100083c0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100083d8.190 to i32), i32* @lr, align 4
  %v4_100083d4 = call i32 @function_10008990(i32 ptrtoint ([13 x i8]* @global_var_1000bbd8.189 to i32), i32 12, i32 12)
  store i32 12, i32* @r3, align 4
  %v0_100083dc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100083dc, i32* @global_var_1001c350.191, align 4
  %v0_100083e0 = load i32, i32* %r22.global-to-local, align 4
  %v1_100083e0 = trunc i32 %v0_100083e0 to i16
  store i16 %v1_100083e0, i16* bitcast (i32* @global_var_1001c354.192 to i16*), align 4
  store i32 268469224, i32* @lr, align 4
  %v0_100083e4 = call i32 @function_1000a020()
  store i32 %v0_100083e4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100083fc.194 to i32), i32* @lr, align 4
  %v4_100083f8 = call i32 @function_10008990(i32 ptrtoint ([13 x i8]* @global_var_1000bbe8.193 to i32), i32 12, i32 12)
  store i32 2, i32* @r3, align 4
  %v0_10008400 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008400, i32* @global_var_1001c358.195, align 4
  %v0_10008404 = load i32, i32* %r22.global-to-local, align 4
  %v1_10008404 = trunc i32 %v0_10008404 to i16
  store i16 %v1_10008404, i16* bitcast (i32* @global_var_1001c35c.196 to i16*), align 4
  store i32 268469260, i32* @lr, align 4
  %v0_10008408 = call i32 @function_1000a020()
  store i32 %v0_10008408, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008420.198 to i32), i32* @lr, align 4
  %v3_1000841c = call i32 @function_10008990(i32 ptrtoint (i32* @global_var_1000bbf8.197 to i32), i32 2, i32 2)
  store i32 36, i32* @r3, align 4
  %v0_10008424 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008424, i32* @global_var_1001c360.199, align 4
  %v0_10008428 = load i32, i32* %r27.global-to-local, align 4
  %v1_10008428 = trunc i32 %v0_10008428 to i16
  store i16 %v1_10008428, i16* bitcast (i32* @global_var_1001c364.200 to i16*), align 4
  store i32 268469296, i32* @lr, align 4
  %v0_1000842c = call i32 @function_1000a020()
  store i32 %v0_1000842c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008444.202 to i32), i32* @lr, align 4
  %v4_10008440 = call i32 @function_10008990(i32 ptrtoint ([37 x i8]* @global_var_1000bbfc.201 to i32), i32 36, i32 36)
  store i32 6, i32* @r3, align 4
  store i16 36, i16* bitcast (i32* @global_var_1001c36c.203 to i16*), align 4
  %v0_10008450 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008450, i32* @global_var_1001c368.204, align 4
  store i32 268469336, i32* @lr, align 4
  %v0_10008454 = call i32 @function_1000a020()
  store i32 %v0_10008454, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000846c.206 to i32), i32* @lr, align 4
  %v4_10008468 = call i32 @function_10008990(i32 ptrtoint ([7 x i8]* @global_var_1000bc24.205 to i32), i32 6, i32 6)
  store i32 7, i32* @r3, align 4
  %v0_10008470 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008470, i32* @global_var_1001c370.207, align 4
  store i32 7, i32* %r27.global-to-local, align 4
  %v0_10008478 = load i32, i32* %r21.global-to-local, align 4
  %v1_10008478 = trunc i32 %v0_10008478 to i16
  store i16 %v1_10008478, i16* bitcast (i32* @global_var_1001c374.208 to i16*), align 4
  store i32 268469376, i32* @lr, align 4
  %v0_1000847c = call i32 @function_1000a020()
  store i32 %v0_1000847c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008494.210 to i32), i32* @lr, align 4
  %v4_10008490 = call i32 @function_10008990(i32 ptrtoint ([8 x i8]* @global_var_1000bc2c.209 to i32), i32 7, i32 7)
  store i32 7, i32* @r3, align 4
  %v0_10008498 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008498, i32* @global_var_1001c378.211, align 4
  %v0_1000849c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000849c = trunc i32 %v0_1000849c to i16
  store i16 %v1_1000849c, i16* bitcast (i32* @global_var_1001c37c.212 to i16*), align 4
  store i32 268469412, i32* @lr, align 4
  %v0_100084a0 = call i32 @function_1000a020()
  store i32 %v0_100084a0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100084b8.214 to i32), i32* @lr, align 4
  %v4_100084b4 = call i32 @function_10008990(i32 ptrtoint ([8 x i8]* @global_var_1000bc34.213 to i32), i32 7, i32 7)
  store i32 3, i32* @r3, align 4
  %v0_100084bc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100084bc, i32* @global_var_1001c380.215, align 4
  %v0_100084c0 = load i32, i32* %r27.global-to-local, align 4
  %v1_100084c0 = trunc i32 %v0_100084c0 to i16
  store i16 %v1_100084c0, i16* bitcast (i32* @global_var_1001c384.216 to i16*), align 4
  store i32 268469448, i32* @lr, align 4
  %v0_100084c4 = call i32 @function_1000a020()
  store i32 %v0_100084c4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100084dc.218 to i32), i32* @lr, align 4
  %v4_100084d8 = call i32 @function_10008990(i32 ptrtoint ([4 x i8]* @global_var_1000bc3c.217 to i32), i32 3, i32 3)
  store i32 19, i32* @r3, align 4
  store i16 3, i16* bitcast (i32* @global_var_1001c38c.219 to i16*), align 4
  %v0_100084e8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100084e8, i32* @global_var_1001c388.220, align 4
  store i32 268469488, i32* @lr, align 4
  %v0_100084ec = call i32 @function_1000a020()
  store i32 %v0_100084ec, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008504.222 to i32), i32* @lr, align 4
  %v3_10008500 = call i32 @function_10008990(i32 ptrtoint (i32* @global_var_1000bc40.221 to i32), i32 19, i32 19)
  store i32 24, i32* @r3, align 4
  %v0_10008508 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008508, i32* @global_var_1001c390.223, align 4
  %v0_1000850c = load i32, i32* %r23.global-to-local, align 4
  %v1_1000850c = trunc i32 %v0_1000850c to i16
  store i16 %v1_1000850c, i16* bitcast (i32* @global_var_1001c394.224 to i16*), align 4
  store i32 268469524, i32* @lr, align 4
  %v0_10008510 = call i32 @function_1000a020()
  store i32 %v0_10008510, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008528.226 to i32), i32* @lr, align 4
  %v3_10008524 = call i32 @function_10008990(i32 ptrtoint (i32* @global_var_1000bc54.225 to i32), i32 24, i32 24)
  store i32 9, i32* @r3, align 4
  store i16 24, i16* bitcast (i32* @global_var_1001c39c.227 to i16*), align 4
  %v0_10008534 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008534, i32* @global_var_1001c398.228, align 4
  store i32 268469564, i32* @lr, align 4
  %v0_10008538 = call i32 @function_1000a020()
  store i32 %v0_10008538, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008550.230 to i32), i32* @lr, align 4
  %v4_1000854c = call i32 @function_10008990(i32 ptrtoint ([10 x i8]* @global_var_1000bc70.229 to i32), i32 9, i32 9)
  store i32 16, i32* @r3, align 4
  store i16 9, i16* bitcast (i32* @global_var_1001c3a4.231 to i16*), align 4
  %v0_1000855c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000855c, i32* @global_var_1001c3a0.232, align 4
  store i32 268469604, i32* @lr, align 4
  %v0_10008560 = call i32 @function_1000a020()
  store i32 %v0_10008560, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008578.234 to i32), i32* @lr, align 4
  %v4_10008574 = call i32 @function_10008990(i32 ptrtoint ([17 x i8]* @global_var_1000bc7c.233 to i32), i32 16, i32 16)
  store i32 22, i32* @r3, align 4
  %v0_1000857c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000857c, i32* @global_var_1001c3a8.235, align 4
  %v0_10008580 = load i32, i32* %r26.global-to-local, align 4
  %v1_10008580 = trunc i32 %v0_10008580 to i16
  store i16 %v1_10008580, i16* bitcast (i32* @global_var_1001c3ac.236 to i16*), align 4
  store i32 268469640, i32* @lr, align 4
  %v0_10008584 = call i32 @function_1000a020()
  store i32 %v0_10008584, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000859c.238 to i32), i32* @lr, align 4
  %v4_10008598 = call i32 @function_10008990(i32 ptrtoint ([23 x i8]* @global_var_1000bc90.237 to i32), i32 22, i32 22)
  store i32 7, i32* @r3, align 4
  store i16 22, i16* bitcast (i32* @global_var_1001c3b4.239 to i16*), align 4
  %v0_100085a8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100085a8, i32* @global_var_1001c3b0.240, align 4
  store i32 268469680, i32* @lr, align 4
  %v0_100085ac = call i32 @function_1000a020()
  store i32 %v0_100085ac, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100085c4.242 to i32), i32* @lr, align 4
  %v4_100085c0 = call i32 @function_10008990(i32 ptrtoint ([8 x i8]* @global_var_1000bca8.241 to i32), i32 7, i32 7)
  store i32 5, i32* @r3, align 4
  %v0_100085c8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100085c8, i32* @global_var_1001c3b8.243, align 4
  %v0_100085cc = load i32, i32* %r27.global-to-local, align 4
  %v1_100085cc = trunc i32 %v0_100085cc to i16
  store i16 %v1_100085cc, i16* bitcast (i32* @global_var_1001c3bc.244 to i16*), align 4
  store i32 268469716, i32* @lr, align 4
  %v0_100085d0 = call i32 @function_1000a020()
  store i32 %v0_100085d0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100085e8.246 to i32), i32* @lr, align 4
  %v4_100085e4 = call i32 @function_10008990(i32 ptrtoint ([6 x i8]* @global_var_1000bcb0.245 to i32), i32 5, i32 5)
  store i32 4, i32* @r3, align 4
  %v0_100085ec = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100085ec, i32* @global_var_1001c3c0.247, align 4
  %v0_100085f0 = load i32, i32* %r19.global-to-local, align 4
  %v1_100085f0 = trunc i32 %v0_100085f0 to i16
  store i16 %v1_100085f0, i16* bitcast (i32* @global_var_1001c3c4.248 to i16*), align 4
  store i32 268469752, i32* @lr, align 4
  %v0_100085f4 = call i32 @function_1000a020()
  store i32 %v0_100085f4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000860c.250 to i32), i32* @lr, align 4
  %v4_10008608 = call i32 @function_10008990(i32 ptrtoint ([5 x i8]* @global_var_1000bcb8.249 to i32), i32 4, i32 4)
  store i32 6, i32* @r3, align 4
  store i16 4, i16* bitcast (i32* @global_var_1001c3cc.251 to i16*), align 4
  %v0_10008618 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008618, i32* @global_var_1001c3c8.252, align 4
  store i32 268469792, i32* @lr, align 4
  %v0_1000861c = call i32 @function_1000a020()
  store i32 %v0_1000861c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008634.254 to i32), i32* @lr, align 4
  %v4_10008630 = call i32 @function_10008990(i32 ptrtoint ([7 x i8]* @global_var_1000bcc0.253 to i32), i32 6, i32 6)
  store i32 14, i32* @r3, align 4
  %v0_10008638 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008638, i32* @global_var_1001c3d0.255, align 4
  %v0_1000863c = load i32, i32* %r21.global-to-local, align 4
  %v1_1000863c = trunc i32 %v0_1000863c to i16
  store i16 %v1_1000863c, i16* bitcast (i32* @global_var_1001c3d4.256 to i16*), align 4
  store i32 268469828, i32* @lr, align 4
  %v0_10008640 = call i32 @function_1000a020()
  store i32 %v0_10008640, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008658.258 to i32), i32* @lr, align 4
  %v4_10008654 = call i32 @function_10008990(i32 ptrtoint ([15 x i8]* @global_var_1000bcc8.257 to i32), i32 14, i32 14)
  store i32 8, i32* @r3, align 4
  %v0_1000865c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000865c, i32* @global_var_1001c3d8.259, align 4
  %v0_10008660 = load i32, i32* %r25.global-to-local, align 4
  %v1_10008660 = trunc i32 %v0_10008660 to i16
  store i16 %v1_10008660, i16* bitcast (i32* @global_var_1001c3dc.260 to i16*), align 4
  store i32 268469864, i32* @lr, align 4
  %v0_10008664 = call i32 @function_1000a020()
  store i32 %v0_10008664, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000867c.262 to i32), i32* @lr, align 4
  %v4_10008678 = call i32 @function_10008990(i32 ptrtoint ([9 x i8]* @global_var_1000bcd8.261 to i32), i32 8, i32 8)
  store i32 7, i32* @r3, align 4
  %v0_10008680 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008680, i32* @global_var_1001c450.263, align 4
  %v0_10008684 = load i32, i32* %r24.global-to-local, align 4
  %v1_10008684 = trunc i32 %v0_10008684 to i16
  store i16 %v1_10008684, i16* bitcast (i32* @global_var_1001c454.264 to i16*), align 4
  store i32 268469900, i32* @lr, align 4
  %v0_10008688 = call i32 @function_1000a020()
  store i32 %v0_10008688, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100086a0.266 to i32), i32* @lr, align 4
  %v4_1000869c = call i32 @function_10008990(i32 ptrtoint ([8 x i8]* @global_var_1000bce4.265 to i32), i32 7, i32 7)
  store i32 16, i32* @r3, align 4
  %v0_100086a4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100086a4, i32* @global_var_1001c458.267, align 4
  %v0_100086a8 = load i32, i32* %r27.global-to-local, align 4
  %v1_100086a8 = trunc i32 %v0_100086a8 to i16
  store i16 %v1_100086a8, i16* bitcast (i32* @global_var_1001c45c.268 to i16*), align 4
  store i32 268469936, i32* @lr, align 4
  %v0_100086ac = call i32 @function_1000a020()
  store i32 %v0_100086ac, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100086c4.270 to i32), i32* @lr, align 4
  %v4_100086c0 = call i32 @function_10008990(i32 ptrtoint ([17 x i8]* @global_var_1000bcec.269 to i32), i32 16, i32 16)
  store i32 23, i32* @r3, align 4
  %v0_100086c8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100086c8, i32* @global_var_1001c3e0.271, align 4
  store i32 268500992, i32* %r27.global-to-local, align 4
  %v0_100086d0 = load i32, i32* %r26.global-to-local, align 4
  %v1_100086d0 = trunc i32 %v0_100086d0 to i16
  store i16 %v1_100086d0, i16* bitcast (i32* @global_var_1001c3e4.272 to i16*), align 4
  store i32 268469976, i32* @lr, align 4
  %v0_100086d4 = call i32 @function_1000a020()
  store i32 %v0_100086d4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100086ec.274 to i32), i32* @lr, align 4
  %v4_100086e8 = call i32 @function_10008990(i32 ptrtoint ([24 x i8]* @global_var_1000bd00.273 to i32), i32 23, i32 23)
  store i32 8, i32* @r3, align 4
  %v0_100086f0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100086f0, i32* @global_var_1001c3e8.275, align 4
  store i32 268500992, i32* %r26.global-to-local, align 4
  %v0_100086f8 = load i32, i32* %r20.global-to-local, align 4
  %v1_100086f8 = trunc i32 %v0_100086f8 to i16
  store i16 %v1_100086f8, i16* bitcast (i32* @global_var_1001c3ec.276 to i16*), align 4
  store i32 268470016, i32* @lr, align 4
  %v0_100086fc = call i32 @function_1000a020()
  store i32 %v0_100086fc, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([15 x i8]* @global_var_1000bd24.278 to i32), i32* %r26.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008718.279 to i32), i32* @lr, align 4
  %v4_10008714 = call i32 @function_10008990(i32 ptrtoint ([9 x i8]* @global_var_1000bd18.277 to i32), i32 8, i32 8)
  store i32 14, i32* @r3, align 4
  %v0_1000871c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000871c, i32* @global_var_1001c3f0.280, align 4
  %v0_10008720 = load i32, i32* %r24.global-to-local, align 4
  %v1_10008720 = trunc i32 %v0_10008720 to i16
  store i16 %v1_10008720, i16* bitcast (i32* @global_var_1001c3f4.281 to i16*), align 4
  store i32 268470056, i32* @lr, align 4
  %v0_10008724 = call i32 @function_1000a020()
  %v0_10008728 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10008724, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([20 x i8]* @global_var_1000bd34.282 to i32), i32* %r27.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000873c.283 to i32), i32* @lr, align 4
  %v4_10008738 = call i32 @function_10008990(i32 %v0_10008728, i32 14, i32 14)
  store i32 19, i32* @r3, align 4
  %v0_10008740 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008740, i32* @global_var_1001c3f8.284, align 4
  %v0_10008744 = load i32, i32* %r25.global-to-local, align 4
  %v1_10008744 = trunc i32 %v0_10008744 to i16
  store i16 %v1_10008744, i16* bitcast (i32* @global_var_1001c3fc.285 to i16*), align 4
  store i32 268470092, i32* @lr, align 4
  %v0_10008748 = call i32 @function_1000a020()
  %v0_1000874c = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10008748, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000875c.286 to i32), i32* @lr, align 4
  %v4_10008758 = call i32 @function_10008990(i32 %v0_1000874c, i32 19, i32 19)
  store i32 10, i32* @r3, align 4
  %v0_10008760 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008760, i32* @global_var_1001c400.287, align 4
  %v0_10008764 = load i32, i32* %r23.global-to-local, align 4
  %v1_10008764 = trunc i32 %v0_10008764 to i16
  store i16 %v1_10008764, i16* bitcast (i32* @global_var_1001c404.288 to i16*), align 4
  store i32 268470124, i32* @lr, align 4
  %v0_10008768 = call i32 @function_1000a020()
  store i32 %v0_10008768, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008780.290 to i32), i32* @lr, align 4
  %v4_1000877c = call i32 @function_10008990(i32 ptrtoint ([11 x i8]* @global_var_1000bd48.289 to i32), i32 10, i32 10)
  store i32 21, i32* @r3, align 4
  store i16 10, i16* bitcast (i32* @global_var_1001c464.291 to i16*), align 4
  %v0_1000878c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000878c, i32* @global_var_1001c460.292, align 4
  store i32 268470164, i32* @lr, align 4
  %v0_10008790 = call i32 @function_1000a020()
  store i32 %v0_10008790, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100087a8.294 to i32), i32* @lr, align 4
  %v3_100087a4 = call i32 @function_10008990(i32 ptrtoint (i32* @global_var_1000bdac.293 to i32), i32 21, i32 21)
  store i32 17, i32* @r3, align 4
  store i16 21, i16* bitcast (i32* @global_var_1001c40c.295 to i16*), align 4
  %v0_100087b4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100087b4, i32* @global_var_1001c408.296, align 4
  store i32 268470204, i32* @lr, align 4
  %v0_100087b8 = call i32 @function_1000a020()
  store i32 %v0_100087b8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100087d0.298 to i32), i32* @lr, align 4
  %v4_100087cc = call i32 @function_10008990(i32 ptrtoint ([18 x i8]* @global_var_1000bd54.297 to i32), i32 17, i32 17)
  store i32 12, i32* @r3, align 4
  store i16 17, i16* bitcast (i32* @global_var_1001c414.299 to i16*), align 4
  %v0_100087dc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100087dc, i32* @global_var_1001c410.300, align 4
  store i32 268470244, i32* @lr, align 4
  %v0_100087e0 = call i32 @function_1000a020()
  store i32 %v0_100087e0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100087f8.302 to i32), i32* @lr, align 4
  %v4_100087f4 = call i32 @function_10008990(i32 ptrtoint ([13 x i8]* @global_var_1000bd68.301 to i32), i32 12, i32 12)
  store i32 14, i32* @r3, align 4
  %v0_100087fc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100087fc, i32* @global_var_1001c418.303, align 4
  %v0_10008800 = load i32, i32* %r22.global-to-local, align 4
  %v1_10008800 = trunc i32 %v0_10008800 to i16
  store i16 %v1_10008800, i16* bitcast (i32* @global_var_1001c41c.304 to i16*), align 4
  store i32 268470280, i32* @lr, align 4
  %v0_10008804 = call i32 @function_1000a020()
  %v0_10008808 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10008804, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008818.305 to i32), i32* @lr, align 4
  %v4_10008814 = call i32 @function_10008990(i32 %v0_10008808, i32 14, i32 14)
  store i32 19, i32* @r3, align 4
  %v0_1000881c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000881c, i32* @global_var_1001c420.306, align 4
  %v0_10008820 = load i32, i32* %r25.global-to-local, align 4
  %v1_10008820 = trunc i32 %v0_10008820 to i16
  store i16 %v1_10008820, i16* bitcast (i32* @global_var_1001c424.307 to i16*), align 4
  store i32 268470312, i32* @lr, align 4
  %v0_10008824 = call i32 @function_1000a020()
  %v0_10008828 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10008824, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008838.308 to i32), i32* @lr, align 4
  %v4_10008834 = call i32 @function_10008990(i32 %v0_10008828, i32 19, i32 19)
  store i32 8, i32* @r3, align 4
  %v0_1000883c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000883c, i32* @global_var_1001c428.309, align 4
  %v0_10008840 = load i32, i32* %r23.global-to-local, align 4
  %v1_10008840 = trunc i32 %v0_10008840 to i16
  store i16 %v1_10008840, i16* bitcast (i32* @global_var_1001c42c.310 to i16*), align 4
  store i32 268470344, i32* @lr, align 4
  %v0_10008844 = call i32 @function_1000a020()
  store i32 %v0_10008844, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000885c.312 to i32), i32* @lr, align 4
  %v4_10008858 = call i32 @function_10008990(i32 ptrtoint ([9 x i8]* @global_var_1000bd78.311 to i32), i32 8, i32 8)
  store i32 5, i32* @r3, align 4
  %v0_10008860 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008860, i32* @global_var_1001c430.313, align 4
  %v0_10008864 = load i32, i32* %r24.global-to-local, align 4
  %v1_10008864 = trunc i32 %v0_10008864 to i16
  store i16 %v1_10008864, i16* bitcast (i32* @global_var_1001c434.314 to i16*), align 4
  store i32 268470380, i32* @lr, align 4
  %v0_10008868 = call i32 @function_1000a020()
  store i32 %v0_10008868, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008880.316 to i32), i32* @lr, align 4
  %v4_1000887c = call i32 @function_10008990(i32 ptrtoint ([6 x i8]* @global_var_1000bd84.315 to i32), i32 5, i32 5)
  store i32 6, i32* @r3, align 4
  %v0_10008884 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008884, i32* @global_var_1001c438.317, align 4
  %v0_10008888 = load i32, i32* %r19.global-to-local, align 4
  %v1_10008888 = trunc i32 %v0_10008888 to i16
  store i16 %v1_10008888, i16* bitcast (i32* @global_var_1001c43c.318 to i16*), align 4
  store i32 268470416, i32* @lr, align 4
  %v0_1000888c = call i32 @function_1000a020()
  store i32 %v0_1000888c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100088a4.320 to i32), i32* @lr, align 4
  %v4_100088a0 = call i32 @function_10008990(i32 ptrtoint ([7 x i8]* @global_var_1000bd8c.319 to i32), i32 6, i32 6)
  store i32 23, i32* @r3, align 4
  %v0_100088a8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100088a8, i32* @global_var_1001c440.321, align 4
  %v0_100088ac = load i32, i32* %r21.global-to-local, align 4
  %v1_100088ac = trunc i32 %v0_100088ac to i16
  store i16 %v1_100088ac, i16* bitcast (i32* @global_var_1001c444.322 to i16*), align 4
  store i32 268470452, i32* @lr, align 4
  %v0_100088b0 = call i32 @function_1000a020()
  store i32 %v0_100088b0, i32* %r28.global-to-local, align 4
  store i32 268470472, i32* @lr, align 4
  %v4_100088c4 = call i32 @function_10008990(i32 ptrtoint ([24 x i8]* @global_var_1000bd94.323 to i32), i32 23, i32 23)
  %v0_100088cc = load i32, i32* %r20.global-to-local, align 4
  %v1_100088cc = trunc i32 %v0_100088cc to i16
  store i16 %v1_100088cc, i16* bitcast (i32* @global_var_1001c44c.324 to i16*), align 4
  %v0_100088d0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100088d0, i32* @global_var_1001c448.325, align 4
  ret i32 %v4_100088c4

; uselistorder directives
  uselistorder i32 21, { 0, 1, 6, 7, 8, 2, 3, 4, 5, 9, 10, 11, 12 }
  uselistorder i32 (i32, i32, i32)* @function_10008990, { 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_1000890c(i8* %arg1) local_unnamed_addr {
dec_label_pc_1000890c:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_1000890c = load i8, i8* %arg1, align 1
  %v3_10008918 = icmp eq i8 %v3_1000890c, 0
  %v0_1000891c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10008918, i32 %v0_1000891c)
  br label %dec_label_pc_10008920

dec_label_pc_10008920:                            ; preds = %dec_label_pc_10008920, %dec_label_pc_1000890c
  %v0_10008920 = phi i32 [ %v1_10008920, %dec_label_pc_10008920 ], [ 0, %dec_label_pc_1000890c ]
  %v1_10008920 = add i32 %v0_10008920, 1
  %v2_10008924 = add i32 %v1_10008920, %tmp
  %v3_10008924 = inttoptr i32 %v2_10008924 to i8*
  %v4_10008924 = load i8, i8* %v3_10008924, align 1
  %v3_10008928 = icmp eq i8 %v4_10008924, 0
  br i1 %v3_10008928, label %dec_label_pc_10008930, label %dec_label_pc_10008920

dec_label_pc_10008930:                            ; preds = %dec_label_pc_10008920
  ret i32 %v1_10008920
}

define i32 @function_10008934(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10008934:
  %ctr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_10008934 = load i8, i8* %arg1, align 1
  %v3_10008938 = icmp eq i8 %v2_10008934, 0
  br i1 %v3_10008938, label %dec_label_pc_10008984, label %dec_label_pc_10008940

dec_label_pc_10008940:                            ; preds = %dec_label_pc_10008934
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008944

dec_label_pc_10008944:                            ; preds = %dec_label_pc_10008944, %dec_label_pc_10008940
  %v0_10008944 = phi i32 [ %v1_10008944, %dec_label_pc_10008944 ], [ 0, %dec_label_pc_10008940 ]
  %v1_10008944 = add i32 %v0_10008944, 1
  store i32 %v1_10008944, i32* %r9.global-to-local, align 4
  %v2_10008948 = add i32 %v1_10008944, %tmp
  %v3_10008948 = inttoptr i32 %v2_10008948 to i8*
  %v4_10008948 = load i8, i8* %v3_10008948, align 1
  %v3_1000894c = icmp eq i8 %v4_10008948, 0
  br i1 %v3_1000894c, label %dec_label_pc_10008954, label %dec_label_pc_10008944

dec_label_pc_10008954:                            ; preds = %dec_label_pc_10008944
  %v3_10008954 = icmp eq i32 %v1_10008944, -1
  br i1 %v3_10008954, label %dec_label_pc_1000897c, label %dec_label_pc_1000895c

dec_label_pc_1000895c:                            ; preds = %dec_label_pc_10008954
  %phitmp = add i32 %v0_10008944, 2
  br label %dec_label_pc_10008960

dec_label_pc_10008960:                            ; preds = %dec_label_pc_10008984, %dec_label_pc_1000895c
  %v0_10008960 = phi i32 [ 1, %dec_label_pc_10008984 ], [ %phitmp, %dec_label_pc_1000895c ]
  store i32 %v0_10008960, i32* %ctr.global-to-local, align 4
  %v2_10008970.pre = load i32, i32* @r3, align 4
  %v2_100089688 = load i8, i8* %arg1, align 1
  %v1_1000896c10 = add i32 %tmp, 1
  store i32 %v1_1000896c10, i32* %r4.global-to-local, align 4
  %v3_1000897011 = inttoptr i32 %v2_10008970.pre to i8*
  store i8 %v2_100089688, i8* %v3_1000897011, align 1
  %v0_1000897412 = load i32, i32* @r3, align 4
  %v1_1000897413 = add i32 %v0_1000897412, 1
  store i32 %v1_1000897413, i32* %r3.global-to-local, align 4
  %v0_1000897814 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000897815 = add i32 %v0_1000897814, -1
  store i32 %v1_1000897815, i32* %ctr.global-to-local, align 4
  %v2_1000897816 = icmp eq i32 %v1_1000897815, 0
  br i1 %v2_1000897816, label %dec_label_pc_1000897c.loopexit, label %dec_label_pc_10008968.dec_label_pc_10008968_crit_edge

dec_label_pc_10008968.dec_label_pc_10008968_crit_edge: ; preds = %dec_label_pc_10008960, %dec_label_pc_10008968.dec_label_pc_10008968_crit_edge
  %v1_1000897417 = phi i32 [ %v1_10008974, %dec_label_pc_10008968.dec_label_pc_10008968_crit_edge ], [ %v1_1000897413, %dec_label_pc_10008960 ]
  %v0_10008968.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_10008968 = inttoptr i32 %v0_10008968.pre to i8*
  %v2_10008968 = load i8, i8* %v1_10008968, align 1
  %v1_1000896c = add i32 %v0_10008968.pre, 1
  store i32 %v1_1000896c, i32* %r4.global-to-local, align 4
  %v3_10008970 = inttoptr i32 %v1_1000897417 to i8*
  store i8 %v2_10008968, i8* %v3_10008970, align 1
  %v0_10008974 = load i32, i32* %r3.global-to-local, align 4
  %v1_10008974 = add i32 %v0_10008974, 1
  store i32 %v1_10008974, i32* %r3.global-to-local, align 4
  %v0_10008978 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008978 = add i32 %v0_10008978, -1
  store i32 %v1_10008978, i32* %ctr.global-to-local, align 4
  %v2_10008978 = icmp eq i32 %v1_10008978, 0
  br i1 %v2_10008978, label %dec_label_pc_1000897c.loopexit, label %dec_label_pc_10008968.dec_label_pc_10008968_crit_edge

dec_label_pc_1000897c.loopexit:                   ; preds = %dec_label_pc_10008968.dec_label_pc_10008968_crit_edge, %dec_label_pc_10008960
  %v0_1000897c.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000897c

dec_label_pc_1000897c:                            ; preds = %dec_label_pc_1000897c.loopexit, %dec_label_pc_10008954
  %v0_1000897c = phi i32 [ %v0_1000897c.pre, %dec_label_pc_1000897c.loopexit ], [ -1, %dec_label_pc_10008954 ]
  store i32 %v0_1000897c, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000897c

dec_label_pc_10008984:                            ; preds = %dec_label_pc_10008934
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008960

; uselistorder directives
  uselistorder i32 %v0_1000897c, { 1, 0 }
  uselistorder i32 %v1_10008978, { 1, 0 }
  uselistorder i32 %v1_10008974, { 1, 0 }
  uselistorder i32 %v1_10008944, { 0, 1, 3, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder label %dec_label_pc_10008968.dec_label_pc_10008968_crit_edge, { 1, 0 }
}

define i32 @function_10008990(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008990:
  %ctr.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_10008990 = icmp eq i32 %arg3, 0
  store i32 %arg3, i32* %ctr.global-to-local, align 4
  %v0_10008998 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10008990, i32 %v0_10008998)
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100089a0

dec_label_pc_100089a0:                            ; preds = %dec_label_pc_100089a0, %dec_label_pc_10008990
  %v0_100089a0 = phi i32 [ %v1_100089a8, %dec_label_pc_100089a0 ], [ 0, %dec_label_pc_10008990 ]
  %v2_100089a0 = add i32 %v0_100089a0, %arg2
  %v3_100089a0 = inttoptr i32 %v2_100089a0 to i8*
  %v4_100089a0 = load i8, i8* %v3_100089a0, align 1
  %v4_100089a4 = add i32 %v0_100089a0, %arg1
  %v5_100089a4 = inttoptr i32 %v4_100089a4 to i8*
  store i8 %v4_100089a0, i8* %v5_100089a4, align 1
  %v0_100089a8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100089a8 = add i32 %v0_100089a8, 1
  store i32 %v1_100089a8, i32* %r9.global-to-local, align 4
  %v0_100089ac = load i32, i32* %ctr.global-to-local, align 4
  %v1_100089ac = add i32 %v0_100089ac, -1
  store i32 %v1_100089ac, i32* %ctr.global-to-local, align 4
  %v2_100089ac = icmp eq i32 %v1_100089ac, 0
  br i1 %v2_100089ac, label %dec_label_pc_100089b0, label %dec_label_pc_100089a0

dec_label_pc_100089b0:                            ; preds = %dec_label_pc_100089a0
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_100089ac, { 1, 0 }
  uselistorder i32 %v1_100089a8, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_100089b4() local_unnamed_addr {
dec_label_pc_100089b4:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_100089b4 = load i32, i32* @r4, align 4
  store i32 %v0_100089b4, i32* %r0.global-to-local, align 4
  %v3_100089b4 = icmp eq i32 %v0_100089b4, 0
  store i32 %v0_100089b4, i32* %ctr.global-to-local, align 4
  %v0_100089bc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_100089b4, i32 %v0_100089bc)
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_100089c83 = load i32, i32* @r3, align 4
  %v5_100089c84 = inttoptr i32 %v2_100089c83 to i8*
  store i8 0, i8* %v5_100089c84, align 1
  %v0_100089cc5 = load i32, i32* %r9.global-to-local, align 4
  %v1_100089cc6 = add i32 %v0_100089cc5, 1
  store i32 %v1_100089cc6, i32* %r9.global-to-local, align 4
  %v0_100089d07 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100089d08 = add i32 %v0_100089d07, -1
  store i32 %v1_100089d08, i32* %ctr.global-to-local, align 4
  %v2_100089d09 = icmp eq i32 %v1_100089d08, 0
  br i1 %v2_100089d09, label %dec_label_pc_100089d4, label %dec_label_pc_100089c8.dec_label_pc_100089c8_crit_edge

dec_label_pc_100089c8.dec_label_pc_100089c8_crit_edge: ; preds = %dec_label_pc_100089b4, %dec_label_pc_100089c8.dec_label_pc_100089c8_crit_edge
  %v1_100089cc10 = phi i32 [ %v1_100089cc, %dec_label_pc_100089c8.dec_label_pc_100089c8_crit_edge ], [ %v1_100089cc6, %dec_label_pc_100089b4 ]
  %v0_100089c8.pre = load i32, i32* %r0.global-to-local, align 4
  %extract.t = trunc i32 %v0_100089c8.pre to i8
  %v2_100089c8 = load i32, i32* @r3, align 4
  %v4_100089c8 = add i32 %v2_100089c8, %v1_100089cc10
  %v5_100089c8 = inttoptr i32 %v4_100089c8 to i8*
  store i8 %extract.t, i8* %v5_100089c8, align 1
  %v0_100089cc = load i32, i32* %r9.global-to-local, align 4
  %v1_100089cc = add i32 %v0_100089cc, 1
  store i32 %v1_100089cc, i32* %r9.global-to-local, align 4
  %v0_100089d0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100089d0 = add i32 %v0_100089d0, -1
  store i32 %v1_100089d0, i32* %ctr.global-to-local, align 4
  %v2_100089d0 = icmp eq i32 %v1_100089d0, 0
  br i1 %v2_100089d0, label %dec_label_pc_100089d4, label %dec_label_pc_100089c8.dec_label_pc_100089c8_crit_edge

dec_label_pc_100089d4:                            ; preds = %dec_label_pc_100089c8.dec_label_pc_100089c8_crit_edge, %dec_label_pc_100089b4
  %v0_100089d4 = load i32, i32* @r3, align 4
  ret i32 %v0_100089d4

; uselistorder directives
  uselistorder i32 %v1_100089d0, { 1, 0 }
  uselistorder i32 %v1_100089cc, { 1, 0 }
  uselistorder i32 %v0_100089b4, { 0, 2, 1 }
  uselistorder i32* %r9.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder label %dec_label_pc_100089c8.dec_label_pc_100089c8_crit_edge, { 1, 0 }
}

define i32 @function_100089d8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100089d8:
  %v3_100089d8 = icmp sgt i32 %arg4, %arg2
  br i1 %v3_100089d8, label %dec_label_pc_100089e4, label %dec_label_pc_100089ec

dec_label_pc_100089e4:                            ; preds = %dec_label_pc_10008a08, %dec_label_pc_100089d8, %dec_label_pc_100089ec
  ret i32 -1

dec_label_pc_100089ec:                            ; preds = %dec_label_pc_100089d8
  %tmp = icmp slt i32 %arg2, 1
  br i1 %tmp, label %dec_label_pc_100089e4, label %dec_label_pc_100089f4

dec_label_pc_100089f4:                            ; preds = %dec_label_pc_100089ec
  br label %dec_label_pc_10008a10

dec_label_pc_10008a04:                            ; preds = %dec_label_pc_10008a10
  br label %dec_label_pc_10008a08

dec_label_pc_10008a08:                            ; preds = %dec_label_pc_10008a28, %dec_label_pc_10008a04
  %v0_10008a101 = phi i32 [ %v1_10008a14, %dec_label_pc_10008a28 ], [ 0, %dec_label_pc_10008a04 ]
  %v1_10008a08 = add i32 %v0_10008a2c, 1
  %v1_10008a0c = add i32 %v0_10008a0c, -1
  %v2_10008a0c = icmp eq i32 %v1_10008a0c, 0
  br i1 %v2_10008a0c, label %dec_label_pc_100089e4, label %dec_label_pc_10008a10

dec_label_pc_10008a10:                            ; preds = %dec_label_pc_10008a08, %dec_label_pc_100089f4
  %v0_10008a0c = phi i32 [ %v1_10008a0c, %dec_label_pc_10008a08 ], [ %arg2, %dec_label_pc_100089f4 ]
  %v0_10008a2c = phi i32 [ %v1_10008a08, %dec_label_pc_10008a08 ], [ 0, %dec_label_pc_100089f4 ]
  %v0_10008a10 = phi i32 [ %v0_10008a101, %dec_label_pc_10008a08 ], [ 0, %dec_label_pc_100089f4 ]
  %v2_10008a10 = add i32 %v0_10008a10, %arg3
  %v3_10008a10 = inttoptr i32 %v2_10008a10 to i8*
  %v4_10008a10 = load i8, i8* %v3_10008a10, align 1
  %v1_10008a14 = add i32 %v0_10008a10, 1
  %v2_10008a18 = add i32 %v0_10008a2c, %arg1
  %v3_10008a18 = inttoptr i32 %v2_10008a18 to i8*
  %v4_10008a18 = load i8, i8* %v3_10008a18, align 1
  %v4_10008a20 = icmp eq i8 %v4_10008a18, %v4_10008a10
  br i1 %v4_10008a20, label %dec_label_pc_10008a28, label %dec_label_pc_10008a04

dec_label_pc_10008a28:                            ; preds = %dec_label_pc_10008a10
  %v4_10008a1c = icmp eq i32 %v1_10008a14, %arg4
  br i1 %v4_10008a1c, label %dec_label_pc_10008a2c, label %dec_label_pc_10008a08

dec_label_pc_10008a2c:                            ; preds = %dec_label_pc_10008a28
  %v1_10008a2c = add i32 %v0_10008a2c, 1
  ret i32 %v1_10008a2c

; uselistorder directives
  uselistorder i32 %v0_10008a10, { 1, 0 }
  uselistorder label %dec_label_pc_100089e4, { 0, 2, 1 }
}

define i32 @function_10008a34(i32 %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %r5.global-to-local = alloca i32, align 4
  %v0_10008a34.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10008a34

dec_label_pc_10008a34:                            ; preds = %dec_label_pc_10008a50, %dec_label_pc_10008a34, %bb
  %v0_10008a34 = phi i32 [ %v0_10008a34.pre, %bb ], [ %v1_10008a38, %dec_label_pc_10008a34 ], [ %v1_10008a38, %dec_label_pc_10008a50 ]
  %v1_10008a34 = inttoptr i32 %v0_10008a34 to i8*
  %v2_10008a34 = load i8, i8* %v1_10008a34, align 1
  %v1_10008a38 = add i32 %v0_10008a34, 1
  %v3_10008a44 = icmp eq i8 %v2_10008a34, 32
  br i1 %v3_10008a44, label %dec_label_pc_10008a34, label %dec_label_pc_10008a50

dec_label_pc_10008a50:                            ; preds = %dec_label_pc_10008a34
  %v2_10008a34.off = add i8 %v2_10008a34, -9
  %tmp = icmp ult i8 %v2_10008a34.off, 2
  br i1 %tmp, label %dec_label_pc_10008a34, label %dec_label_pc_10008a5c

dec_label_pc_10008a5c:                            ; preds = %dec_label_pc_10008a50
  %v3_10008a5c = icmp eq i8 %v2_10008a34, 45
  br i1 %v3_10008a5c, label %dec_label_pc_10008b08, label %dec_label_pc_10008a64

dec_label_pc_10008a64:                            ; preds = %dec_label_pc_10008a5c
  %v3_10008a64 = icmp eq i8 %v2_10008a34, 43
  br i1 %v3_10008a64, label %dec_label_pc_10008b60, label %dec_label_pc_10008a6c

dec_label_pc_10008a6c:                            ; preds = %dec_label_pc_10008a64, %dec_label_pc_10008b60
  %v0_10008afc26 = phi i32 [ %v1_10008a38, %dec_label_pc_10008a64 ], [ %v1_10008b64, %dec_label_pc_10008b60 ]
  %v0_10008a8c5.in = phi i8 [ %v2_10008a34, %dec_label_pc_10008a64 ], [ %v2_10008b60, %dec_label_pc_10008b60 ]
  br label %dec_label_pc_10008a78

dec_label_pc_10008a78:                            ; preds = %dec_label_pc_10008b08, %dec_label_pc_10008a6c
  %v0_10008afc25 = phi i32 [ %v1_10008b10, %dec_label_pc_10008b08 ], [ %v0_10008afc26, %dec_label_pc_10008a6c ]
  %v0_10008a8c4.in = phi i8 [ %v2_10008b08, %dec_label_pc_10008b08 ], [ %v0_10008a8c5.in, %dec_label_pc_10008a6c ]
  %v0_10008b50 = phi i32 [ 1, %dec_label_pc_10008b08 ], [ 0, %dec_label_pc_10008a6c ]
  %v1_10008a88 = phi i32 [ -2147483648, %dec_label_pc_10008b08 ], [ 2147483647, %dec_label_pc_10008a6c ]
  %v2_10008a78 = udiv i32 %v1_10008a88, %arg1
  store i32 0, i32* %r5.global-to-local, align 4
  %v2_10008a84 = mul i32 %v2_10008a78, %arg1
  %v2_10008a88 = sub i32 %v1_10008a88, %v2_10008a84
  br label %dec_label_pc_10008a8c

dec_label_pc_10008a8c:                            ; preds = %dec_label_pc_10008afc, %dec_label_pc_10008a78
  %v0_10008afc = phi i32 [ %v1_10008b00, %dec_label_pc_10008afc ], [ %v0_10008afc25, %dec_label_pc_10008a78 ]
  %v0_10008af0 = phi i32 [ %v0_10008ae817, %dec_label_pc_10008afc ], [ 0, %dec_label_pc_10008a78 ]
  %v0_10008ae0 = phi i32 [ %v0_10008b4011, %dec_label_pc_10008afc ], [ 0, %dec_label_pc_10008a78 ]
  %v0_10008ad8 = phi i32 [ %v0_10008b349, %dec_label_pc_10008afc ], [ 0, %dec_label_pc_10008a78 ]
  %v1_10008acc.in = phi i8 [ %v2_10008afc, %dec_label_pc_10008afc ], [ %v0_10008a8c4.in, %dec_label_pc_10008a78 ]
  %v1_10008acc = zext i8 %v1_10008acc.in to i32
  %v1_10008a90 = add nsw i32 %v1_10008acc, -48
  %fold = add nuw nsw i32 %v1_10008acc, 208
  %v1_10008a98 = urem i32 %fold, 256
  %tmp27 = icmp ult i32 %v1_10008a98, 10
  br i1 %tmp27, label %dec_label_pc_10008ad0, label %dec_label_pc_10008aa4

dec_label_pc_10008aa4:                            ; preds = %dec_label_pc_10008a8c
  %v1_10008aa4 = add nuw nsw i32 %v1_10008acc, 191
  %v1_10008aa8 = urem i32 %v1_10008aa4, 256
  %tmp28 = icmp ult i32 %v1_10008aa8, 26
  br i1 %tmp28, label %dec_label_pc_10008acc, label %dec_label_pc_10008ab8

dec_label_pc_10008ab8:                            ; preds = %dec_label_pc_10008aa4
  %v1_10008ab8 = add nuw nsw i32 %v1_10008acc, 159
  %v1_10008abc = urem i32 %v1_10008ab8, 256
  %v2_10008ac0 = icmp ugt i32 %v1_10008abc, 25
  br i1 %v2_10008ac0, label %dec_label_pc_10008b34, label %dec_label_pc_10008ac8

dec_label_pc_10008ac8:                            ; preds = %dec_label_pc_10008ab8
  br label %dec_label_pc_10008acc

dec_label_pc_10008acc:                            ; preds = %dec_label_pc_10008aa4, %dec_label_pc_10008ac8
  %v0_10008acc = phi i32 [ 55, %dec_label_pc_10008aa4 ], [ 87, %dec_label_pc_10008ac8 ]
  %v2_10008acc = sub nsw i32 %v1_10008acc, %v0_10008acc
  br label %dec_label_pc_10008ad0

dec_label_pc_10008ad0:                            ; preds = %dec_label_pc_10008a8c, %dec_label_pc_10008acc
  %v1_10008af8 = phi i32 [ %v1_10008a90, %dec_label_pc_10008a8c ], [ %v2_10008acc, %dec_label_pc_10008acc ]
  %v2_10008ad0 = icmp slt i32 %v1_10008af8, %arg1
  br i1 %v2_10008ad0, label %dec_label_pc_10008ad8, label %dec_label_pc_10008b34

dec_label_pc_10008ad8:                            ; preds = %dec_label_pc_10008ad0
  %v1_10008ad8 = icmp slt i32 %v0_10008ad8, 0
  br i1 %v1_10008ad8, label %dec_label_pc_10008b1c, label %dec_label_pc_10008ae0

dec_label_pc_10008ae0:                            ; preds = %dec_label_pc_10008ad8
  %v3_10008ae0 = icmp ugt i32 %v0_10008ae0, %v2_10008a78
  br i1 %v3_10008ae0, label %dec_label_pc_10008b1c, label %dec_label_pc_10008ae8

dec_label_pc_10008ae8:                            ; preds = %dec_label_pc_10008ae0
  %v4_10008ae8 = icmp eq i32 %v0_10008af0, %v2_10008a78
  br i1 %v4_10008ae8, label %dec_label_pc_10008b24, label %dec_label_pc_10008af0

dec_label_pc_10008af0:                            ; preds = %dec_label_pc_10008b24, %dec_label_pc_10008ae8
  %v2_10008af0 = mul i32 %v0_10008af0, %arg1
  %v2_10008af8 = add i32 %v1_10008af8, %v2_10008af0
  store i32 %v2_10008af8, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10008afc

dec_label_pc_10008afc:                            ; preds = %dec_label_pc_10008b24, %dec_label_pc_10008b1c, %dec_label_pc_10008af0
  %v0_10008ae817 = phi i32 [ %v2_10008a78, %dec_label_pc_10008b24 ], [ %v0_10008af0, %dec_label_pc_10008b1c ], [ %v2_10008af8, %dec_label_pc_10008af0 ]
  %v0_10008b4011 = phi i32 [ %v2_10008a78, %dec_label_pc_10008b24 ], [ %v0_10008ae0, %dec_label_pc_10008b1c ], [ %v2_10008af8, %dec_label_pc_10008af0 ]
  %v0_10008b349 = phi i32 [ -1, %dec_label_pc_10008b24 ], [ -1, %dec_label_pc_10008b1c ], [ 1, %dec_label_pc_10008af0 ]
  %v1_10008afc = inttoptr i32 %v0_10008afc to i8*
  %v2_10008afc = load i8, i8* %v1_10008afc, align 1
  %v1_10008b00 = add i32 %v0_10008afc, 1
  br label %dec_label_pc_10008a8c

dec_label_pc_10008b08:                            ; preds = %dec_label_pc_10008a5c
  %v1_10008b08 = inttoptr i32 %v1_10008a38 to i8*
  %v2_10008b08 = load i8, i8* %v1_10008b08, align 1
  %v1_10008b10 = add i32 %v0_10008a34, 2
  br label %dec_label_pc_10008a78

dec_label_pc_10008b1c:                            ; preds = %dec_label_pc_10008ae0, %dec_label_pc_10008ad8
  br label %dec_label_pc_10008afc

dec_label_pc_10008b24:                            ; preds = %dec_label_pc_10008ae8
  %v3_10008b24 = icmp sgt i32 %v1_10008af8, %v2_10008a88
  br i1 %v3_10008b24, label %dec_label_pc_10008afc, label %dec_label_pc_10008af0

dec_label_pc_10008b34:                            ; preds = %dec_label_pc_10008ad0, %dec_label_pc_10008ab8
  %v1_10008b34 = icmp slt i32 %v0_10008ad8, 0
  br i1 %v1_10008b34, label %dec_label_pc_10008b50, label %dec_label_pc_10008b3c

dec_label_pc_10008b3c:                            ; preds = %dec_label_pc_10008b34
  %v3_10008b3c = icmp eq i32 %v0_10008b50, 0
  %v0_10008b44 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10008b3c, i32 %v0_10008b44)
  %v0_10008b48 = load i32, i32* %r5.global-to-local, align 4
  %v1_10008b48 = sub i32 0, %v0_10008b48
  ret i32 %v1_10008b48

dec_label_pc_10008b50:                            ; preds = %dec_label_pc_10008b34
  %v1_10008b50 = xor i32 %v0_10008b50, 1
  %v2_10008b58 = sub nuw i32 -2147483648, %v1_10008b50
  ret i32 %v2_10008b58

dec_label_pc_10008b60:                            ; preds = %dec_label_pc_10008a64
  %v1_10008b60 = inttoptr i32 %v1_10008a38 to i8*
  %v2_10008b60 = load i8, i8* %v1_10008b60, align 1
  %v1_10008b64 = add i32 %v0_10008a34, 2
  br label %dec_label_pc_10008a6c

; uselistorder directives
  uselistorder i32 %v2_10008af8, { 1, 0, 2 }
  uselistorder i32 %v1_10008af8, { 1, 0, 2 }
  uselistorder i32 %v1_10008acc, { 2, 4, 3, 0, 1 }
  uselistorder i32 %v0_10008af0, { 2, 0, 1 }
  uselistorder i32 %v0_10008afc, { 1, 0 }
  uselistorder i32 %v2_10008a78, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_10008a38, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_10008a34, { 1, 0, 3, 2 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32 208, { 1, 0, 2, 3 }
  uselistorder i32 -2147483648, { 1, 0 }
  uselistorder i8 32, { 10, 2, 3, 4, 0, 5, 6, 7, 1, 8, 11, 12, 13, 14, 15, 16, 9 }
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_10008ad0, { 1, 0 }
  uselistorder label %dec_label_pc_10008acc, { 1, 0 }
  uselistorder label %dec_label_pc_10008a6c, { 1, 0 }
}

define i32 @function_10008b6c(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008b6c:
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r27.global-to-local, align 4
  store i32 %arg2, i32* %r28.global-to-local, align 4
  store i32 %arg3, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  %v0_10008b98 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  br label %dec_label_pc_10008ba0

dec_label_pc_10008ba0:                            ; preds = %dec_label_pc_10008bcc.dec_label_pc_10008ba0_crit_edge, %dec_label_pc_10008b6c
  %v0_10008ba4 = phi i32 [ %v0_10008ba4.pre, %dec_label_pc_10008bcc.dec_label_pc_10008ba0_crit_edge ], [ %arg3, %dec_label_pc_10008b6c ]
  %v0_10008ba0 = phi i32 [ %v1_10008bb8, %dec_label_pc_10008bcc.dec_label_pc_10008ba0_crit_edge ], [ %tmp, %dec_label_pc_10008b6c ]
  store i32 1, i32* @r5, align 4
  store i32 268471216, i32* @lr, align 4
  %v4_10008bac = call i32 @function_10009304(i32 %v0_10008ba4, i32 %v0_10008ba0, i32 1)
  %v0_10008bb0 = load i32, i32* @r31, align 4
  %v3_10008bb4 = icmp eq i32 %v4_10008bac, 1
  %v1_10008bb8 = add i32 %v0_10008bb0, 1
  store i32 %v1_10008bb8, i32* @r31, align 4
  %v0_10008bc0 = load i32, i32* %r30.global-to-local, align 4
  br i1 %v3_10008bb4, label %dec_label_pc_10008bc0, label %dec_label_pc_10008bd8

dec_label_pc_10008bc0:                            ; preds = %dec_label_pc_10008ba0
  %v1_10008bc0 = add i32 %v0_10008bc0, 1
  store i32 %v1_10008bc0, i32* %r30.global-to-local, align 4
  %v0_10008bc4 = load i32, i32* %r28.global-to-local, align 4
  %v3_10008bc4 = icmp sgt i32 %v0_10008bc4, %v1_10008bc0
  br i1 %v3_10008bc4, label %dec_label_pc_10008bcc, label %dec_label_pc_10008bd8

dec_label_pc_10008bcc:                            ; preds = %dec_label_pc_10008bc0
  %v1_10008bcc = inttoptr i32 %v0_10008bb0 to i8*
  %v2_10008bcc = load i8, i8* %v1_10008bcc, align 1
  %v3_10008bd0 = icmp eq i8 %v2_10008bcc, 10
  br i1 %v3_10008bd0, label %dec_label_pc_10008bd8, label %dec_label_pc_10008bcc.dec_label_pc_10008ba0_crit_edge

dec_label_pc_10008bcc.dec_label_pc_10008ba0_crit_edge: ; preds = %dec_label_pc_10008bcc
  %v0_10008ba4.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10008ba0

dec_label_pc_10008bd8:                            ; preds = %dec_label_pc_10008ba0, %dec_label_pc_10008bcc, %dec_label_pc_10008bc0
  %v1_10008be0 = phi i32 [ %v1_10008bc0, %dec_label_pc_10008bcc ], [ %v1_10008bc0, %dec_label_pc_10008bc0 ], [ %v0_10008bc0, %dec_label_pc_10008ba0 ]
  %tmp12 = icmp slt i32 %v1_10008be0, 0
  %v1_10008bd8 = zext i1 %tmp12 to i32
  %v2_10008bd8 = ashr i32 %v1_10008be0, 31
  %v3_10008bd8 = and i32 %v2_10008bd8, -2
  %v4_10008bd8 = or i32 %v3_10008bd8, %v1_10008bd8
  %v2_10008be0 = xor i32 %v4_10008bd8, %v1_10008be0
  %v2_10008be8 = sub i32 %v4_10008bd8, %v2_10008be0
  %tmp13 = icmp slt i32 %v2_10008be8, 0
  %v1_10008bf0 = zext i1 %tmp13 to i32
  %v2_10008bf0 = ashr i32 %v2_10008be8, 31
  %v3_10008bf0 = and i32 %v2_10008bf0, -2
  %v4_10008bf0 = or i32 %v3_10008bf0, %v1_10008bf0
  %v0_10008bf8 = load i32, i32* %r27.global-to-local, align 4
  %v2_10008bf8 = and i32 %v4_10008bf0, %v0_10008bf8
  store i32 %v0_10008b98, i32* @r31, align 4
  ret i32 %v2_10008bf8

; uselistorder directives
  uselistorder i32 %v2_10008be8, { 1, 0 }
  uselistorder i32 %v4_10008bd8, { 1, 0 }
  uselistorder i32 %v1_10008be0, { 1, 2, 0 }
  uselistorder i32 %v1_10008bb8, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10009304, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_10008bd8, { 1, 2, 0 }
}

define i32 @function_10008c10(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008c10:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v0_10008c28 = load i32, i32* @r31, align 4
  store i32 16, i32* %stack_var_-40, align 4
  %v0_10008c30 = call i32 @function_100097e8()
  %v2_10008c3c = inttoptr i32 %v0_10008c30 to i32*
  store i32 0, i32* %v2_10008c3c, align 4
  store i32 268471372, i32* @lr, align 4
  %v3_10008c48 = call i32 @function_10009e1c(i32 2, i32 2, i32 0)
  store i32 %v3_10008c48, i32* @r3, align 4
  %v3_10008c50 = icmp eq i32 %v3_10008c48, -1
  store i32 %v3_10008c48, i32* @r31, align 4
  br i1 %v3_10008c50, label %dec_label_pc_10008ca0, label %dec_label_pc_10008c6c

dec_label_pc_10008c6c:                            ; preds = %dec_label_pc_10008c10
  %v2_10008c1c = ptrtoint i32* %stack_var_-36 to i32
  store i32 2, i32* %stack_var_-36, align 4
  store i32 268471428, i32* @lr, align 4
  %v0_10008c80 = call i32 @function_10009c1c()
  %v2_10008c88 = ptrtoint i32* %stack_var_-40 to i32
  %v0_10008c8c = load i32, i32* @r31, align 4
  store i32 268471444, i32* @lr, align 4
  %v3_10008c90 = call i32 @function_10009c50(i32 %v0_10008c8c, i32 %v2_10008c1c, i32 %v2_10008c88)
  store i32 268471452, i32* @lr, align 4
  %v0_10008c98 = call i32 @function_100090cc()
  br label %dec_label_pc_10008ca0

dec_label_pc_10008ca0:                            ; preds = %dec_label_pc_10008c10, %dec_label_pc_10008c6c
  %v0_10008ca0 = phi i32 [ 0, %dec_label_pc_10008c10 ], [ 134744072, %dec_label_pc_10008c6c ]
  store i32 %v0_10008c28, i32* @r31, align 4
  ret i32 %v0_10008ca0

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32 ()* @function_10009c1c, { 10, 9, 7, 8, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10009e1c, { 27, 25, 26, 23, 24, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 0, 8, 7, 1, 6, 3, 2, 5, 4 }
  uselistorder label %dec_label_pc_10008ca0, { 1, 0 }
}

define i32 @function_10008cbc(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008cbc:
  %tmp = inttoptr i32 %arg3 to i8*
  store i32 %arg3, i32* @r5, align 4
  %tmp16 = ptrtoint i8* %arg1 to i32
  %v3_10008cbc = load i8, i8* %tmp, align 1
  %v3_10008cc8 = icmp eq i8 %v3_10008cbc, 0
  br i1 %v3_10008cc8, label %dec_label_pc_10008ce0, label %dec_label_pc_10008cd0

dec_label_pc_10008cd0:                            ; preds = %dec_label_pc_10008cbc, %dec_label_pc_10008cd0
  %v0_10008cd0 = phi i32 [ %v1_10008cd0, %dec_label_pc_10008cd0 ], [ 0, %dec_label_pc_10008cbc ]
  %v1_10008cd0 = add i32 %v0_10008cd0, 1
  %v3_10008cd4 = add i32 %v1_10008cd0, %arg3
  %v4_10008cd4 = inttoptr i32 %v3_10008cd4 to i8*
  %v5_10008cd4 = load i8, i8* %v4_10008cd4, align 1
  %v3_10008cd8 = icmp eq i8 %v5_10008cd4, 0
  br i1 %v3_10008cd8, label %dec_label_pc_10008ce0, label %dec_label_pc_10008cd0

dec_label_pc_10008ce0:                            ; preds = %dec_label_pc_10008cd0, %dec_label_pc_10008cbc
  %v0_10008d1011 = phi i32 [ 0, %dec_label_pc_10008cbc ], [ %v1_10008cd0, %dec_label_pc_10008cd0 ]
  %v1_10008ce0 = icmp slt i32 %arg2, 0
  %v1_10008ce4 = add i32 %arg2, 1
  br i1 %v1_10008ce0, label %dec_label_pc_10008d5c, label %dec_label_pc_10008cf8

dec_label_pc_10008cf8:                            ; preds = %dec_label_pc_10008ce0, %dec_label_pc_10008d5c, %dec_label_pc_10008d50
  %v2_10008d048 = phi i32 [ %v1_10008d08, %dec_label_pc_10008d50 ], [ 0, %dec_label_pc_10008d5c ], [ 0, %dec_label_pc_10008ce0 ]
  %v0_10008cfc6 = phi i32 [ %v1_10008d00, %dec_label_pc_10008d50 ], [ %tmp16, %dec_label_pc_10008d5c ], [ %tmp16, %dec_label_pc_10008ce0 ]
  %v0_10008cf8 = phi i32 [ %v0_10008d44, %dec_label_pc_10008d50 ], [ 1, %dec_label_pc_10008d5c ], [ %v1_10008ce4, %dec_label_pc_10008ce0 ]
  %v1_10008cf8 = add i32 %v0_10008cf8, -1
  %v2_10008cf8 = icmp eq i32 %v1_10008cf8, 0
  br i1 %v2_10008cf8, label %dec_label_pc_10008d48, label %dec_label_pc_10008cfc

dec_label_pc_10008cfc:                            ; preds = %dec_label_pc_10008cf8, %dec_label_pc_10008d40
  %v2_10008d04 = phi i32 [ 0, %dec_label_pc_10008d40 ], [ %v2_10008d048, %dec_label_pc_10008cf8 ]
  %v0_10008cfc = phi i32 [ %v1_10008d00, %dec_label_pc_10008d40 ], [ %v0_10008cfc6, %dec_label_pc_10008cf8 ]
  %v0_10008d44 = phi i32 [ %v1_10008d44, %dec_label_pc_10008d40 ], [ %v1_10008cf8, %dec_label_pc_10008cf8 ]
  %v1_10008cfc = inttoptr i32 %v0_10008cfc to i8*
  %v2_10008cfc = load i8, i8* %v1_10008cfc, align 1
  %v3_10008cfc = zext i8 %v2_10008cfc to i32
  %v1_10008d00 = add i32 %v0_10008cfc, 1
  %v3_10008d04 = add i32 %v2_10008d04, %arg3
  %v4_10008d04 = inttoptr i32 %v3_10008d04 to i8*
  %v5_10008d04 = load i8, i8* %v4_10008d04, align 1
  %v6_10008d04 = zext i8 %v5_10008d04 to i32
  %v1_10008d08 = add i32 %v2_10008d04, 1
  %v1_10008d0c = add nuw nsw i32 %v3_10008cfc, 191
  %v1_10008d14 = urem i32 %v1_10008d0c, 256
  %v2_10008d18 = icmp ugt i32 %v1_10008d14, 25
  %v1_10008d1c = add nuw nsw i32 %v6_10008d04, 191
  %v1_10008d20 = urem i32 %v1_10008d1c, 256
  %v2_10008d24 = icmp ugt i32 %v1_10008d20, 25
  br i1 %v2_10008d18, label %dec_label_pc_10008d30, label %dec_label_pc_10008d2c

dec_label_pc_10008d2c:                            ; preds = %dec_label_pc_10008cfc
  %v1_10008d2c = or i32 %v3_10008cfc, 96
  br i1 %v2_10008d24, label %dec_label_pc_10008d38, label %dec_label_pc_10008d34

dec_label_pc_10008d30:                            ; preds = %dec_label_pc_10008cfc
  br i1 %v2_10008d24, label %dec_label_pc_10008d38, label %dec_label_pc_10008d34

dec_label_pc_10008d34:                            ; preds = %dec_label_pc_10008d2c, %dec_label_pc_10008d30
  %v1_10008d3814 = phi i32 [ %v1_10008d2c, %dec_label_pc_10008d2c ], [ %v3_10008cfc, %dec_label_pc_10008d30 ]
  %v1_10008d34 = or i32 %v6_10008d04, 96
  br label %dec_label_pc_10008d38

dec_label_pc_10008d38:                            ; preds = %dec_label_pc_10008d2c, %dec_label_pc_10008d30, %dec_label_pc_10008d34
  %v1_10008d38 = phi i32 [ %v1_10008d2c, %dec_label_pc_10008d2c ], [ %v3_10008cfc, %dec_label_pc_10008d30 ], [ %v1_10008d3814, %dec_label_pc_10008d34 ]
  %v0_10008d38 = phi i32 [ %v6_10008d04, %dec_label_pc_10008d2c ], [ %v6_10008d04, %dec_label_pc_10008d30 ], [ %v1_10008d34, %dec_label_pc_10008d34 ]
  %v4_10008d38 = icmp eq i32 %v0_10008d38, %v1_10008d38
  br i1 %v4_10008d38, label %dec_label_pc_10008d50, label %dec_label_pc_10008d40

dec_label_pc_10008d40:                            ; preds = %dec_label_pc_10008d38
  %v1_10008d44 = add i32 %v0_10008d44, -1
  %v2_10008d44 = icmp eq i32 %v1_10008d44, 0
  br i1 %v2_10008d44, label %dec_label_pc_10008d48, label %dec_label_pc_10008cfc

dec_label_pc_10008d48:                            ; preds = %dec_label_pc_10008cf8, %dec_label_pc_10008d40
  ret i32 -1

dec_label_pc_10008d50:                            ; preds = %dec_label_pc_10008d38
  %v4_10008d10.le = icmp eq i32 %v0_10008d1011, %v1_10008d08
  br i1 %v4_10008d10.le, label %dec_label_pc_10008d54, label %dec_label_pc_10008cf8

dec_label_pc_10008d54:                            ; preds = %dec_label_pc_10008d50
  %v2_10008d54 = sub i32 %v1_10008d00, %tmp16
  ret i32 %v2_10008d54

dec_label_pc_10008d5c:                            ; preds = %dec_label_pc_10008ce0
  br label %dec_label_pc_10008cf8

; uselistorder directives
  uselistorder i32 %v1_10008d44, { 1, 0 }
  uselistorder i32 %v1_10008d2c, { 1, 0 }
  uselistorder i1 %v2_10008d24, { 1, 0 }
  uselistorder i32 %v1_10008d08, { 1, 0 }
  uselistorder i32 %v3_10008cfc, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10008d44, { 1, 0 }
  uselistorder i32 %v0_10008cfc, { 1, 0 }
  uselistorder i32 %v2_10008d04, { 1, 0 }
  uselistorder i32 %tmp16, { 2, 0, 1 }
  uselistorder i32 25, { 7, 8, 11, 4, 9, 5, 10, 0, 1, 6, 2, 3 }
  uselistorder i32 191, { 1, 0, 2 }
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_10008d48, { 1, 0 }
  uselistorder label %dec_label_pc_10008d38, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10008d34, { 1, 0 }
  uselistorder label %dec_label_pc_10008cfc, { 1, 0 }
  uselistorder label %dec_label_pc_10008cf8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10008cd0, { 1, 0 }
}

define i32 @function_10008d68(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10008d68:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_10008d68 = load i8, i8* %arg1, align 1
  %v3_10008d70 = icmp eq i8 %v2_10008d68, 0
  br i1 %v3_10008d70, label %dec_label_pc_10008d88, label %dec_label_pc_10008d78

dec_label_pc_10008d78:                            ; preds = %dec_label_pc_10008d68, %dec_label_pc_10008d78
  %v0_10008d78 = phi i32 [ %v1_10008d78, %dec_label_pc_10008d78 ], [ 0, %dec_label_pc_10008d68 ]
  %v1_10008d78 = add i32 %v0_10008d78, 1
  %v2_10008d7c = add i32 %v1_10008d78, %tmp
  %v3_10008d7c = inttoptr i32 %v2_10008d7c to i8*
  %v4_10008d7c = load i8, i8* %v3_10008d7c, align 1
  %v3_10008d80 = icmp eq i8 %v4_10008d7c, 0
  br i1 %v3_10008d80, label %dec_label_pc_10008d88, label %dec_label_pc_10008d78

dec_label_pc_10008d88:                            ; preds = %dec_label_pc_10008d78, %dec_label_pc_10008d68
  %v0_10008da8 = phi i32 [ 0, %dec_label_pc_10008d68 ], [ %v1_10008d78, %dec_label_pc_10008d78 ]
  %v1_10008d88 = inttoptr i32 %arg2 to i8*
  %v2_10008d88 = load i8, i8* %v1_10008d88, align 1
  %v3_10008d90 = icmp eq i8 %v2_10008d88, 0
  br i1 %v3_10008d90, label %dec_label_pc_10008da8, label %dec_label_pc_10008d98

dec_label_pc_10008d98:                            ; preds = %dec_label_pc_10008d88, %dec_label_pc_10008d98
  %v0_10008d98 = phi i32 [ %v1_10008d98, %dec_label_pc_10008d98 ], [ 0, %dec_label_pc_10008d88 ]
  %v1_10008d98 = add i32 %v0_10008d98, 1
  %v2_10008d9c = add i32 %v1_10008d98, %arg2
  %v3_10008d9c = inttoptr i32 %v2_10008d9c to i8*
  %v4_10008d9c = load i8, i8* %v3_10008d9c, align 1
  %v3_10008da0 = icmp eq i8 %v4_10008d9c, 0
  br i1 %v3_10008da0, label %dec_label_pc_10008da8, label %dec_label_pc_10008d98

dec_label_pc_10008da8:                            ; preds = %dec_label_pc_10008d98, %dec_label_pc_10008d88
  %v0_10008dac = phi i32 [ 0, %dec_label_pc_10008d88 ], [ %v1_10008d98, %dec_label_pc_10008d98 ]
  %v4_10008da8 = icmp eq i32 %v0_10008da8, %v0_10008dac
  br i1 %v4_10008da8, label %dec_label_pc_10008dc0, label %dec_label_pc_10008db8

dec_label_pc_10008db8:                            ; preds = %dec_label_pc_10008dc4, %dec_label_pc_10008da8
  ret i32 0

dec_label_pc_10008dc0:                            ; preds = %dec_label_pc_10008da8
  %v2_10008dc0 = icmp eq i32 %v0_10008da8, 0
  br i1 %v2_10008dc0, label %dec_label_pc_10008de0, label %dec_label_pc_10008dc4

dec_label_pc_10008dc4:                            ; preds = %dec_label_pc_10008dc0, %dec_label_pc_10008ddc
  %v0_10008ddc = phi i32 [ %v1_10008ddc, %dec_label_pc_10008ddc ], [ %v0_10008da8, %dec_label_pc_10008dc0 ]
  %v0_10008dcc = phi i32 [ %v1_10008dd0, %dec_label_pc_10008ddc ], [ %arg2, %dec_label_pc_10008dc0 ]
  %v0_10008dc4 = phi i32 [ %v1_10008dc8, %dec_label_pc_10008ddc ], [ %tmp, %dec_label_pc_10008dc0 ]
  %v1_10008dc4 = inttoptr i32 %v0_10008dc4 to i8*
  %v2_10008dc4 = load i8, i8* %v1_10008dc4, align 1
  %v1_10008dcc = inttoptr i32 %v0_10008dcc to i8*
  %v2_10008dcc = load i8, i8* %v1_10008dcc, align 1
  %v4_10008dd4 = icmp eq i8 %v2_10008dc4, %v2_10008dcc
  br i1 %v4_10008dd4, label %dec_label_pc_10008ddc, label %dec_label_pc_10008db8

dec_label_pc_10008ddc:                            ; preds = %dec_label_pc_10008dc4
  %v1_10008dd0 = add i32 %v0_10008dcc, 1
  %v1_10008dc8 = add i32 %v0_10008dc4, 1
  %v1_10008ddc = add i32 %v0_10008ddc, -1
  %v2_10008ddc = icmp eq i32 %v1_10008ddc, 0
  br i1 %v2_10008ddc, label %dec_label_pc_10008de0, label %dec_label_pc_10008dc4

dec_label_pc_10008de0:                            ; preds = %dec_label_pc_10008ddc, %dec_label_pc_10008dc0
  ret i32 1

; uselistorder directives
  uselistorder i32 %v1_10008ddc, { 1, 0 }
  uselistorder i32 %v0_10008dc4, { 1, 0 }
  uselistorder i32 %v0_10008dcc, { 1, 0 }
  uselistorder label %dec_label_pc_10008dc4, { 1, 0 }
  uselistorder label %dec_label_pc_10008d98, { 1, 0 }
  uselistorder label %dec_label_pc_10008d78, { 1, 0 }
}

define i32 @function_10008de8(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008de8:
  %cr6_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg3 to i8*
  store i32 %arg3, i32* @r5, align 4
  %tmp17 = sext i8 %arg1 to i32
  store i32 %tmp17, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10008de8 = icmp eq i32 %arg3, 0
  %v4_10008dec = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10008dec, i32* %stack_var_-64, align 4
  %v5_10008dec = ptrtoint i32* %stack_var_-64 to i32
  br i1 %v4_10008de8, label %dec_label_pc_10008e08, label %dec_label_pc_10008df4

dec_label_pc_10008df4:                            ; preds = %dec_label_pc_10008de8
  %v0_10008df4 = load i32, i32* %r3.global-to-local, align 4
  %v3_10008df4 = icmp eq i32 %v0_10008df4, 0
  store i1 %v3_10008df4, i1* %cr6_eq.global-to-local, align 1
  br i1 %v3_10008df4, label %dec_label_pc_10008dfc, label %dec_label_pc_10008e14

dec_label_pc_10008dfc:                            ; preds = %dec_label_pc_10008df4
  store i32 48, i32* %r0.global-to-local, align 4
  %v4_10008e00 = add i32 %arg3, 1
  %v5_10008e00 = inttoptr i32 %v4_10008e00 to i8*
  store i8 0, i8* %v5_10008e00, align 1
  %v0_10008e04 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008e04 = trunc i32 %v0_10008e04 to i8
  store i8 %v1_10008e04, i8* %tmp, align 1
  br label %dec_label_pc_10008e08

dec_label_pc_10008e08:                            ; preds = %dec_label_pc_10008e94, %dec_label_pc_10008de8, %dec_label_pc_10008dfc
  store i32 %arg3, i32* %r3.global-to-local, align 4
  ret i32 %arg3

dec_label_pc_10008e14:                            ; preds = %dec_label_pc_10008df4
  %v2_10008df4 = icmp sgt i32 %v0_10008df4, 0
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10008e14.not = icmp ne i32 %arg2, 10
  %brmerge = or i1 %v2_10008df4, %v3_10008e14.not
  br i1 %brmerge, label %dec_label_pc_10008e28, label %dec_label_pc_10008edc

dec_label_pc_10008e28:                            ; preds = %dec_label_pc_10008e14, %dec_label_pc_10008edc
  %v0_10008e2c2 = phi i32 [ %v0_10008df4, %dec_label_pc_10008e14 ], [ %v1_10008edc, %dec_label_pc_10008edc ]
  %storemerge = phi i32 [ 0, %dec_label_pc_10008e14 ], [ 1, %dec_label_pc_10008edc ]
  store i32 %storemerge, i32* %r8.global-to-local, align 4
  store i32 32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008e2c

dec_label_pc_10008e2c:                            ; preds = %dec_label_pc_10008e58.dec_label_pc_10008e2c_crit_edge, %dec_label_pc_10008e28
  %v1_10008e30 = phi i32 [ %v1_10008e30.pre, %dec_label_pc_10008e58.dec_label_pc_10008e2c_crit_edge ], [ 32, %dec_label_pc_10008e28 ]
  %v0_10008e30 = phi i32 [ %v0_10008e30.pre, %dec_label_pc_10008e58.dec_label_pc_10008e2c_crit_edge ], [ %v5_10008dec, %dec_label_pc_10008e28 ]
  %v1_10008e40 = phi i32 [ %v0_10008e2c.pre, %dec_label_pc_10008e58.dec_label_pc_10008e2c_crit_edge ], [ %v0_10008e2c2, %dec_label_pc_10008e28 ]
  %v2_10008e2c = udiv i32 %v1_10008e40, %arg2
  %v2_10008e30 = add i32 %v0_10008e30, %v1_10008e30
  store i32 %v2_10008e30, i32* %r11.global-to-local, align 4
  %v1_10008e34 = add i32 %v1_10008e30, -1
  store i32 %v1_10008e34, i32* %r10.global-to-local, align 4
  %v2_10008e38 = mul i32 %v2_10008e2c, %arg2
  %v3_10008e3c = icmp ult i32 %v1_10008e40, %arg2
  store i1 %v3_10008e3c, i1* %cr6_eq.global-to-local, align 1
  %v2_10008e40 = sub i32 %v1_10008e40, %v2_10008e38
  store i32 %v2_10008e40, i32* %r9.global-to-local, align 4
  store i32 %v2_10008e2c, i32* %r3.global-to-local, align 4
  %tmp22 = icmp slt i32 %v2_10008e40, 10
  %storemerge15.v = select i1 %tmp22, i32 48, i32 55
  %storemerge15 = add i32 %storemerge15.v, %v2_10008e40
  %v0_10008e58.off0 = trunc i32 %storemerge15 to i8
  store i32 %storemerge15, i32* %r0.global-to-local, align 4
  %v3_10008e58 = add i32 %v2_10008e30, 8
  %v4_10008e58 = inttoptr i32 %v3_10008e58 to i8*
  store i8 %v0_10008e58.off0, i8* %v4_10008e58, align 1
  %v0_10008e5c = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_10008e5c, label %dec_label_pc_10008e60, label %dec_label_pc_10008e58.dec_label_pc_10008e2c_crit_edge

dec_label_pc_10008e58.dec_label_pc_10008e2c_crit_edge: ; preds = %dec_label_pc_10008e2c
  %v0_10008e2c.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_10008e30.pre = load i32, i32* @r1, align 4
  %v1_10008e30.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008e2c

dec_label_pc_10008e60:                            ; preds = %dec_label_pc_10008e2c
  %v0_10008e60 = load i32, i32* %r8.global-to-local, align 4
  %v3_10008e60 = icmp eq i32 %v0_10008e60, 0
  br i1 %v3_10008e60, label %dec_label_pc_10008e68, label %dec_label_pc_10008ec8

dec_label_pc_10008e68:                            ; preds = %dec_label_pc_10008e60
  %v0_10008e68 = load i32, i32* %r10.global-to-local, align 4
  %v1_10008e68 = add i32 %v0_10008e68, 1
  store i32 %v1_10008e68, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008e6c

dec_label_pc_10008e6c:                            ; preds = %dec_label_pc_10008ec8, %dec_label_pc_10008e68
  %v1_10008e74 = phi i32 [ %v1_10008e70.pre, %dec_label_pc_10008ec8 ], [ %v1_10008e68, %dec_label_pc_10008e68 ]
  %v2_10008e6c = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10008e6c, i32* %r9.global-to-local, align 4
  %v2_10008e70 = add i32 %v1_10008e74, %v2_10008e6c
  %v3_10008e70 = inttoptr i32 %v2_10008e70 to i8*
  %v4_10008e70 = load i8, i8* %v3_10008e70, align 1
  %v5_10008e70 = zext i8 %v4_10008e70 to i32
  store i32 %v5_10008e70, i32* %r0.global-to-local, align 4
  store i32 %v2_10008e70, i32* %r9.global-to-local, align 4
  %v3_10008e78 = icmp eq i8 %v4_10008e70, 0
  br i1 %v3_10008e78, label %dec_label_pc_10008ef0, label %dec_label_pc_10008e80

dec_label_pc_10008e80:                            ; preds = %dec_label_pc_10008e6c
  store i32 0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008e84

dec_label_pc_10008e84:                            ; preds = %dec_label_pc_10008e84, %dec_label_pc_10008e80
  %v0_10008e84 = phi i32 [ %v1_10008e84, %dec_label_pc_10008e84 ], [ 0, %dec_label_pc_10008e80 ]
  %v1_10008e84 = add i32 %v0_10008e84, 1
  store i32 %v1_10008e84, i32* %r10.global-to-local, align 4
  %v2_10008e88 = add i32 %v1_10008e84, %v2_10008e70
  %v3_10008e88 = inttoptr i32 %v2_10008e88 to i8*
  %v4_10008e88 = load i8, i8* %v3_10008e88, align 1
  %v5_10008e88 = zext i8 %v4_10008e88 to i32
  store i32 %v5_10008e88, i32* %r0.global-to-local, align 4
  %v3_10008e8c = icmp eq i8 %v4_10008e88, 0
  br i1 %v3_10008e8c, label %dec_label_pc_10008e94, label %dec_label_pc_10008e84

dec_label_pc_10008e94:                            ; preds = %dec_label_pc_10008e84
  %v3_10008e94 = icmp eq i32 %v1_10008e84, -1
  br i1 %v3_10008e94, label %dec_label_pc_10008e08, label %dec_label_pc_10008e9c

dec_label_pc_10008e9c:                            ; preds = %dec_label_pc_10008e94
  store i32 %arg3, i32* %r11.global-to-local, align 4
  %phitmp = add i32 %v0_10008e84, 2
  br label %dec_label_pc_10008ea0

dec_label_pc_10008ea0:                            ; preds = %dec_label_pc_10008ef0, %dec_label_pc_10008e9c
  %v0_10008ea0 = phi i32 [ 1, %dec_label_pc_10008ef0 ], [ %phitmp, %dec_label_pc_10008e9c ]
  store i32 %v0_10008ea0, i32* %r10.global-to-local, align 4
  store i32 %v0_10008ea0, i32* %ctr.global-to-local, align 4
  %v2_10008ea824 = load i8, i8* %v3_10008e70, align 1
  %v3_10008ea825 = zext i8 %v2_10008ea824 to i32
  store i32 %v3_10008ea825, i32* %r0.global-to-local, align 4
  %v1_10008eac26 = add i32 %v2_10008e70, 1
  store i32 %v1_10008eac26, i32* %r9.global-to-local, align 4
  store i8 %v2_10008ea824, i8* %tmp, align 1
  %v0_10008eb428 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008eb429 = add i32 %v0_10008eb428, 1
  store i32 %v1_10008eb429, i32* %r11.global-to-local, align 4
  %v0_10008eb830 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008eb831 = add i32 %v0_10008eb830, -1
  store i32 %v1_10008eb831, i32* %ctr.global-to-local, align 4
  %v2_10008eb832 = icmp eq i32 %v1_10008eb831, 0
  br i1 %v2_10008eb832, label %dec_label_pc_10008ebc, label %dec_label_pc_10008ea8.dec_label_pc_10008ea8_crit_edge

dec_label_pc_10008ea8.dec_label_pc_10008ea8_crit_edge: ; preds = %dec_label_pc_10008ea0, %dec_label_pc_10008ea8.dec_label_pc_10008ea8_crit_edge
  %v1_10008eb433 = phi i32 [ %v1_10008eb4, %dec_label_pc_10008ea8.dec_label_pc_10008ea8_crit_edge ], [ %v1_10008eb429, %dec_label_pc_10008ea0 ]
  %v0_10008ea8.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_10008ea8 = inttoptr i32 %v0_10008ea8.pre to i8*
  %v2_10008ea8 = load i8, i8* %v1_10008ea8, align 1
  %v3_10008ea8 = zext i8 %v2_10008ea8 to i32
  store i32 %v3_10008ea8, i32* %r0.global-to-local, align 4
  %v1_10008eac = add i32 %v0_10008ea8.pre, 1
  store i32 %v1_10008eac, i32* %r9.global-to-local, align 4
  %v3_10008eb0 = inttoptr i32 %v1_10008eb433 to i8*
  store i8 %v2_10008ea8, i8* %v3_10008eb0, align 1
  %v0_10008eb4 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008eb4 = add i32 %v0_10008eb4, 1
  store i32 %v1_10008eb4, i32* %r11.global-to-local, align 4
  %v0_10008eb8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008eb8 = add i32 %v0_10008eb8, -1
  store i32 %v1_10008eb8, i32* %ctr.global-to-local, align 4
  %v2_10008eb8 = icmp eq i32 %v1_10008eb8, 0
  br i1 %v2_10008eb8, label %dec_label_pc_10008ebc, label %dec_label_pc_10008ea8.dec_label_pc_10008ea8_crit_edge

dec_label_pc_10008ebc:                            ; preds = %dec_label_pc_10008ea8.dec_label_pc_10008ea8_crit_edge, %dec_label_pc_10008ea0
  store i32 %arg3, i32* %r3.global-to-local, align 4
  ret i32 %arg3

dec_label_pc_10008ec8:                            ; preds = %dec_label_pc_10008e60
  %v0_10008ec8.pre = load i32, i32* @r1, align 4
  %v1_10008ec8.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_10008ec8 = add i32 %v1_10008ec8.pre, %v0_10008ec8.pre
  store i32 %v2_10008ec8, i32* %r9.global-to-local, align 4
  store i32 45, i32* %r0.global-to-local, align 4
  %v3_10008ed0 = add i32 %v2_10008ec8, 8
  %v4_10008ed0 = inttoptr i32 %v3_10008ed0 to i8*
  store i8 45, i8* %v4_10008ed0, align 1
  %v1_10008e70.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008e6c

dec_label_pc_10008edc:                            ; preds = %dec_label_pc_10008e14
  %v1_10008edc = sub i32 0, %v0_10008df4
  store i32 %v1_10008edc, i32* %r3.global-to-local, align 4
  store i32 32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008e28

dec_label_pc_10008ef0:                            ; preds = %dec_label_pc_10008e6c
  store i32 %arg3, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008ea0

; uselistorder directives
  uselistorder i32 %v1_10008edc, { 1, 0 }
  uselistorder i32 %v1_10008eb8, { 1, 0 }
  uselistorder i32 %v1_10008eb4, { 1, 0 }
  uselistorder i32 %v0_10008ea0, { 1, 0 }
  uselistorder i32 %v1_10008e84, { 0, 1, 3, 2 }
  uselistorder i32 %v2_10008e2c, { 1, 0 }
  uselistorder i32 %v1_10008e40, { 1, 0, 2 }
  uselistorder i32 %v1_10008e30, { 1, 0 }
  uselistorder i32 %v0_10008df4, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 5, 6, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 5, 6, 2, 3, 4 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 8, 9, 2, 3, 5, 4, 7, 6, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 8, 2, 3, 4, 5, 6, 7 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32 %arg3, { 1, 4, 5, 6, 2, 3, 0, 7, 9, 8 }
  uselistorder i32 %arg2, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_10008ea8.dec_label_pc_10008ea8_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10008e28, { 1, 0 }
  uselistorder label %dec_label_pc_10008e08, { 0, 2, 1 }
}

define i32 @function_10008efc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008efc:
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-32 = alloca i32, align 4
  %v4_10008f0c = icmp eq i32 %arg2, -2143521772
  %v2_10008f20 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10008f20, i32* %stack_var_-32, align 4
  br i1 %v4_10008f0c, label %dec_label_pc_10008f80, label %dec_label_pc_10008f40

dec_label_pc_10008f40:                            ; preds = %dec_label_pc_10008efc
  %v3_10008f40 = icmp ugt i32 %arg2, -2143521772
  br i1 %v3_10008f40, label %dec_label_pc_10008f58, label %dec_label_pc_10008f48

dec_label_pc_10008f48:                            ; preds = %dec_label_pc_10008f40
  %v3_10008f4c = icmp eq i32 %arg2, 1077703699
  br i1 %v3_10008f4c, label %dec_label_pc_10008f74, label %dec_label_pc_10008fa0

dec_label_pc_10008f58:                            ; preds = %dec_label_pc_10008f40
  %v1_10008f58 = xor i32 %arg2, -2143551488
  %v3_10008f5c = icmp eq i32 %v1_10008f58, 29717
  br i1 %v3_10008f5c, label %dec_label_pc_10008f90, label %dec_label_pc_10008f64

dec_label_pc_10008f64:                            ; preds = %dec_label_pc_10008f58
  %v3_10008f68 = icmp eq i32 %v1_10008f58, 29718
  br i1 %v3_10008f68, label %dec_label_pc_10008f98, label %dec_label_pc_10008fa0

dec_label_pc_10008f74:                            ; preds = %dec_label_pc_10008f48
  store i32 ptrtoint (i32* @global_var_10008f7c.327 to i32), i32* @lr, align 4
  %v2_10008f78 = inttoptr i32 %arg3 to i32*
  %v3_10008f78 = call i32 @function_10009980(i32* %v2_10008f78, i32 %arg1)
  br label %dec_label_pc_10008f88

dec_label_pc_10008f80:                            ; preds = %dec_label_pc_10008efc
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_10008f84

dec_label_pc_10008f84:                            ; preds = %dec_label_pc_10008f98, %dec_label_pc_10008f90, %dec_label_pc_10008f80
  store i32 268472200, i32* @lr, align 4
  %v0_10008f84 = call i32 @function_10009a1c()
  br label %dec_label_pc_10008f88

dec_label_pc_10008f88:                            ; preds = %dec_label_pc_10008f74, %dec_label_pc_10008f84
  %storemerge = phi i32 [ %v0_10008f84, %dec_label_pc_10008f84 ], [ %v3_10008f78, %dec_label_pc_10008f74 ]
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008fcc

dec_label_pc_10008f90:                            ; preds = %dec_label_pc_10008f58
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_10008f84

dec_label_pc_10008f98:                            ; preds = %dec_label_pc_10008f64
  store i32 2, i32* @r4, align 4
  br label %dec_label_pc_10008f84

dec_label_pc_10008fa0:                            ; preds = %dec_label_pc_10008f64, %dec_label_pc_10008f48
  %v0_10008fb0 = call i32 @__asm_mfcr()
  %v1_10008fb4 = and i32 %v0_10008fb0, 268435456
  %v3_10008fb4 = icmp eq i32 %v1_10008fb4, 0
  store i32 %v0_10008fb0, i32* %r31.global-to-local, align 4
  br i1 %v3_10008fb4, label %dec_label_pc_10008fcc, label %dec_label_pc_10008fc0

dec_label_pc_10008fc0:                            ; preds = %dec_label_pc_10008fa0
  %v0_10008fc0 = call i32 @function_100097e8()
  %v0_10008fc4 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008fc4 = inttoptr i32 %v0_10008fc0 to i32*
  store i32 %v0_10008fc4, i32* %v2_10008fc4, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008fcc

dec_label_pc_10008fcc:                            ; preds = %dec_label_pc_10008fa0, %dec_label_pc_10008f88, %dec_label_pc_10008fc0
  %v0_10008fd0 = phi i32 [ %v0_10008fb0, %dec_label_pc_10008fa0 ], [ %storemerge, %dec_label_pc_10008f88 ], [ -1, %dec_label_pc_10008fc0 ]
  ret i32 %v0_10008fd0

; uselistorder directives
  uselistorder i32 %arg2, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10008fcc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10008f88, { 1, 0 }
}

define i32 @function_10008fe4(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008fe4:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_10008ff8 = load i32, i32* @r4, align 4
  %v1_10008ff8 = add i32 %v0_10008ff8, -12
  %v2_10008ffc = icmp ugt i32 %v1_10008ff8, 2
  %v2_10009004 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10009004, i32* %stack_var_-32, align 4
  br i1 %v2_10008ffc, label %dec_label_pc_10009030, label %dec_label_pc_10009020

dec_label_pc_10009020:                            ; preds = %dec_label_pc_10008fe4
  store i32 268472360, i32* @lr, align 4
  %v2_10009024 = call i32 @function_10009068(i32 3)
  store i32 %v2_10009024, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009050

dec_label_pc_10009030:                            ; preds = %dec_label_pc_10008fe4
  %v0_10009034 = call i32 @__asm_mfcr()
  %v1_10009038 = and i32 %v0_10009034, 268435456
  %v3_10009038 = icmp eq i32 %v1_10009038, 0
  store i32 %v0_10009034, i32* %r31.global-to-local, align 4
  br i1 %v3_10009038, label %dec_label_pc_10009050, label %dec_label_pc_10009044

dec_label_pc_10009044:                            ; preds = %dec_label_pc_10009030
  %v0_10009044 = call i32 @function_100097e8()
  %v0_10009048 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009048 = inttoptr i32 %v0_10009044 to i32*
  store i32 %v0_10009048, i32* %v2_10009048, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009050

dec_label_pc_10009050:                            ; preds = %dec_label_pc_10009030, %dec_label_pc_10009020, %dec_label_pc_10009044
  %v0_10009054 = phi i32 [ %v0_10009034, %dec_label_pc_10009030 ], [ %v2_10009024, %dec_label_pc_10009020 ], [ -1, %dec_label_pc_10009044 ]
  ret i32 %v0_10009054

; uselistorder directives
  uselistorder label %dec_label_pc_10009050, { 2, 0, 1 }
}

define i32 @function_10009068(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009068:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_10009080 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10009080, i32* %stack_var_-32, align 4
  %v0_1000909c = call i32 @__asm_mfcr()
  %v1_100090a0 = and i32 %v0_1000909c, 268435456
  %v3_100090a0 = icmp eq i32 %v1_100090a0, 0
  store i32 %v0_1000909c, i32* %r31.global-to-local, align 4
  br i1 %v3_100090a0, label %dec_label_pc_100090b8, label %dec_label_pc_100090ac

dec_label_pc_100090ac:                            ; preds = %dec_label_pc_10009068
  %v0_100090ac = call i32 @function_100097e8()
  %v0_100090b0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100090b0 = inttoptr i32 %v0_100090ac to i32*
  store i32 %v0_100090b0, i32* %v2_100090b0, align 4
  br label %dec_label_pc_100090b8

dec_label_pc_100090b8:                            ; preds = %dec_label_pc_10009068, %dec_label_pc_100090ac
  %v0_100090c8 = phi i32 [ %v0_1000909c, %dec_label_pc_10009068 ], [ -1, %dec_label_pc_100090ac ]
  ret i32 %v0_100090c8

; uselistorder directives
  uselistorder label %dec_label_pc_100090b8, { 1, 0 }
}

define i32 @function_100090cc() local_unnamed_addr {
dec_label_pc_100090cc:
  %r31.global-to-local = alloca i32, align 4
  %v0_100090e4 = call i32 @__asm_mfcr()
  %v1_100090e8 = and i32 %v0_100090e4, 268435456
  %v3_100090e8 = icmp eq i32 %v1_100090e8, 0
  store i32 %v0_100090e4, i32* %r31.global-to-local, align 4
  br i1 %v3_100090e8, label %dec_label_pc_10009100, label %dec_label_pc_100090f4

dec_label_pc_100090f4:                            ; preds = %dec_label_pc_100090cc
  %v0_100090f4 = call i32 @function_100097e8()
  %v0_100090f8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100090f8 = inttoptr i32 %v0_100090f4 to i32*
  store i32 %v0_100090f8, i32* %v2_100090f8, align 4
  br label %dec_label_pc_10009100

dec_label_pc_10009100:                            ; preds = %dec_label_pc_100090cc, %dec_label_pc_100090f4
  %v0_10009110 = phi i32 [ %v0_100090e4, %dec_label_pc_100090cc ], [ -1, %dec_label_pc_100090f4 ]
  ret i32 %v0_10009110

; uselistorder directives
  uselistorder label %dec_label_pc_10009100, { 1, 0 }
}

define i32 @function_10009114() local_unnamed_addr {
dec_label_pc_10009114:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000912c = call i32 @__asm_mfcr()
  %v1_10009130 = and i32 %v0_1000912c, 268435456
  %v3_10009130 = icmp eq i32 %v1_10009130, 0
  store i32 %v0_1000912c, i32* %r31.global-to-local, align 4
  br i1 %v3_10009130, label %dec_label_pc_10009148, label %dec_label_pc_1000913c

dec_label_pc_1000913c:                            ; preds = %dec_label_pc_10009114
  %v0_1000913c = call i32 @function_100097e8()
  %v0_10009140 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009140 = inttoptr i32 %v0_1000913c to i32*
  store i32 %v0_10009140, i32* %v2_10009140, align 4
  br label %dec_label_pc_10009148

dec_label_pc_10009148:                            ; preds = %dec_label_pc_10009114, %dec_label_pc_1000913c
  %v0_10009158 = phi i32 [ %v0_1000912c, %dec_label_pc_10009114 ], [ -1, %dec_label_pc_1000913c ]
  ret i32 %v0_10009158

; uselistorder directives
  uselistorder label %dec_label_pc_10009148, { 1, 0 }
}

define i32 @function_1000915c() local_unnamed_addr {
dec_label_pc_1000915c:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009174 = call i32 @__asm_mfcr()
  %v1_10009178 = and i32 %v0_10009174, 268435456
  %v3_10009178 = icmp eq i32 %v1_10009178, 0
  store i32 %v0_10009174, i32* %r31.global-to-local, align 4
  br i1 %v3_10009178, label %dec_label_pc_10009190, label %dec_label_pc_10009184

dec_label_pc_10009184:                            ; preds = %dec_label_pc_1000915c
  %v0_10009184 = call i32 @function_100097e8()
  %v0_10009188 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009188 = inttoptr i32 %v0_10009184 to i32*
  store i32 %v0_10009188, i32* %v2_10009188, align 4
  br label %dec_label_pc_10009190

dec_label_pc_10009190:                            ; preds = %dec_label_pc_1000915c, %dec_label_pc_10009184
  %v0_100091a0 = phi i32 [ %v0_10009174, %dec_label_pc_1000915c ], [ -1, %dec_label_pc_10009184 ]
  ret i32 %v0_100091a0

; uselistorder directives
  uselistorder label %dec_label_pc_10009190, { 1, 0 }
}

define i32 @function_100091a4() local_unnamed_addr {
dec_label_pc_100091a4:
  %r31.global-to-local = alloca i32, align 4
  %v0_100091bc = call i32 @__asm_mfcr()
  %v1_100091c0 = and i32 %v0_100091bc, 268435456
  %v3_100091c0 = icmp eq i32 %v1_100091c0, 0
  store i32 %v0_100091bc, i32* %r31.global-to-local, align 4
  br i1 %v3_100091c0, label %dec_label_pc_100091d8, label %dec_label_pc_100091cc

dec_label_pc_100091cc:                            ; preds = %dec_label_pc_100091a4
  %v0_100091cc = call i32 @function_100097e8()
  %v0_100091d0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100091d0 = inttoptr i32 %v0_100091cc to i32*
  store i32 %v0_100091d0, i32* %v2_100091d0, align 4
  br label %dec_label_pc_100091d8

dec_label_pc_100091d8:                            ; preds = %dec_label_pc_100091a4, %dec_label_pc_100091cc
  %v0_100091e8 = phi i32 [ %v0_100091bc, %dec_label_pc_100091a4 ], [ -1, %dec_label_pc_100091cc ]
  ret i32 %v0_100091e8

; uselistorder directives
  uselistorder label %dec_label_pc_100091d8, { 1, 0 }
}

define i32 @function_100091ec(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100091ec:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009204 = call i32 @__asm_mfcr()
  %v1_10009208 = and i32 %v0_10009204, 268435456
  %v3_10009208 = icmp eq i32 %v1_10009208, 0
  store i32 %v0_10009204, i32* %r31.global-to-local, align 4
  br i1 %v3_10009208, label %dec_label_pc_10009220, label %dec_label_pc_10009214

dec_label_pc_10009214:                            ; preds = %dec_label_pc_100091ec
  %v0_10009214 = call i32 @function_100097e8()
  %v0_10009218 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009218 = inttoptr i32 %v0_10009214 to i32*
  store i32 %v0_10009218, i32* %v2_10009218, align 4
  br label %dec_label_pc_10009220

dec_label_pc_10009220:                            ; preds = %dec_label_pc_100091ec, %dec_label_pc_10009214
  %v0_10009230 = phi i32 [ %v0_10009204, %dec_label_pc_100091ec ], [ -1, %dec_label_pc_10009214 ]
  ret i32 %v0_10009230

; uselistorder directives
  uselistorder label %dec_label_pc_10009220, { 1, 0 }
}

define i32 @function_10009234(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009234:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v1_10009248 = and i32 %arg2, 64
  %v3_10009248 = icmp eq i32 %v1_10009248, 0
  br i1 %v3_10009248, label %dec_label_pc_10009274, label %dec_label_pc_10009258

dec_label_pc_10009258:                            ; preds = %dec_label_pc_10009234
  %v2_10009260 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10009260, i32* %stack_var_-32, align 4
  %v0_10009270 = load i32, i32* @r5, align 4
  br label %dec_label_pc_10009274

dec_label_pc_10009274:                            ; preds = %dec_label_pc_10009234, %dec_label_pc_10009258
  %v0_10009274 = phi i32 [ 0, %dec_label_pc_10009234 ], [ %v0_10009270, %dec_label_pc_10009258 ]
  store i32 %v0_10009274, i32* @r5, align 4
  %v0_1000927c = call i32 @__asm_mfcr()
  %v1_10009280 = and i32 %v0_1000927c, 268435456
  %v3_10009280 = icmp eq i32 %v1_10009280, 0
  store i32 %v0_1000927c, i32* %r31.global-to-local, align 4
  br i1 %v3_10009280, label %dec_label_pc_10009298, label %dec_label_pc_1000928c

dec_label_pc_1000928c:                            ; preds = %dec_label_pc_10009274
  %v0_1000928c = call i32 @function_100097e8()
  %v0_10009290 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009290 = inttoptr i32 %v0_1000928c to i32*
  store i32 %v0_10009290, i32* %v2_10009290, align 4
  br label %dec_label_pc_10009298

dec_label_pc_10009298:                            ; preds = %dec_label_pc_10009274, %dec_label_pc_1000928c
  %v0_100092a8 = phi i32 [ %v0_1000927c, %dec_label_pc_10009274 ], [ -1, %dec_label_pc_1000928c ]
  ret i32 %v0_100092a8

; uselistorder directives
  uselistorder label %dec_label_pc_10009298, { 1, 0 }
  uselistorder label %dec_label_pc_10009274, { 1, 0 }
}

define i32 @function_100092ac(i32 %arg1) local_unnamed_addr {
dec_label_pc_100092ac:
  store i32 %arg1, i32* @r5, align 4
  %v2_100092b8 = call i32 @function_10009234(i32 577, i32 577)
  ret i32 %v2_100092b8
}

define i32 @function_100092bc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100092bc:
  %r31.global-to-local = alloca i32, align 4
  %v0_100092d4 = call i32 @__asm_mfcr()
  %v1_100092d8 = and i32 %v0_100092d4, 268435456
  %v3_100092d8 = icmp eq i32 %v1_100092d8, 0
  store i32 %v0_100092d4, i32* %r31.global-to-local, align 4
  br i1 %v3_100092d8, label %dec_label_pc_100092f0, label %dec_label_pc_100092e4

dec_label_pc_100092e4:                            ; preds = %dec_label_pc_100092bc
  %v0_100092e4 = call i32 @function_100097e8()
  %v0_100092e8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100092e8 = inttoptr i32 %v0_100092e4 to i32*
  store i32 %v0_100092e8, i32* %v2_100092e8, align 4
  br label %dec_label_pc_100092f0

dec_label_pc_100092f0:                            ; preds = %dec_label_pc_100092bc, %dec_label_pc_100092e4
  %v0_10009300 = phi i32 [ %v0_100092d4, %dec_label_pc_100092bc ], [ -1, %dec_label_pc_100092e4 ]
  ret i32 %v0_10009300

; uselistorder directives
  uselistorder label %dec_label_pc_100092f0, { 1, 0 }
}

define i32 @function_10009304(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009304:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000931c = call i32 @__asm_mfcr()
  %v1_10009320 = and i32 %v0_1000931c, 268435456
  %v3_10009320 = icmp eq i32 %v1_10009320, 0
  store i32 %v0_1000931c, i32* %r31.global-to-local, align 4
  br i1 %v3_10009320, label %dec_label_pc_10009338, label %dec_label_pc_1000932c

dec_label_pc_1000932c:                            ; preds = %dec_label_pc_10009304
  %v0_1000932c = call i32 @function_100097e8()
  %v0_10009330 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009330 = inttoptr i32 %v0_1000932c to i32*
  store i32 %v0_10009330, i32* %v2_10009330, align 4
  br label %dec_label_pc_10009338

dec_label_pc_10009338:                            ; preds = %dec_label_pc_10009304, %dec_label_pc_1000932c
  %v0_10009348 = phi i32 [ %v0_1000931c, %dec_label_pc_10009304 ], [ -1, %dec_label_pc_1000932c ]
  ret i32 %v0_10009348

; uselistorder directives
  uselistorder label %dec_label_pc_10009338, { 1, 0 }
}

define i32 @function_1000934c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000934c:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009364 = call i32 @__asm_mfcr()
  %v1_10009368 = and i32 %v0_10009364, 268435456
  %v3_10009368 = icmp eq i32 %v1_10009368, 0
  store i32 %v0_10009364, i32* %r31.global-to-local, align 4
  br i1 %v3_10009368, label %dec_label_pc_10009380, label %dec_label_pc_10009374

dec_label_pc_10009374:                            ; preds = %dec_label_pc_1000934c
  %v0_10009374 = call i32 @function_100097e8()
  %v0_10009378 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009378 = inttoptr i32 %v0_10009374 to i32*
  store i32 %v0_10009378, i32* %v2_10009378, align 4
  br label %dec_label_pc_10009380

dec_label_pc_10009380:                            ; preds = %dec_label_pc_1000934c, %dec_label_pc_10009374
  %v0_10009390 = phi i32 [ %v0_10009364, %dec_label_pc_1000934c ], [ -1, %dec_label_pc_10009374 ]
  ret i32 %v0_10009390

; uselistorder directives
  uselistorder label %dec_label_pc_10009380, { 1, 0 }
}

define i32 @function_10009394(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10009394:
  %r31.global-to-local = alloca i32, align 4
  %v0_100093ac = call i32 @__asm_mfcr()
  %v1_100093b0 = and i32 %v0_100093ac, 268435456
  %v3_100093b0 = icmp eq i32 %v1_100093b0, 0
  store i32 %v0_100093ac, i32* %r31.global-to-local, align 4
  br i1 %v3_100093b0, label %dec_label_pc_100093c8, label %dec_label_pc_100093bc

dec_label_pc_100093bc:                            ; preds = %dec_label_pc_10009394
  %v0_100093bc = call i32 @function_100097e8()
  %v0_100093c0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100093c0 = inttoptr i32 %v0_100093bc to i32*
  store i32 %v0_100093c0, i32* %v2_100093c0, align 4
  br label %dec_label_pc_100093c8

dec_label_pc_100093c8:                            ; preds = %dec_label_pc_10009394, %dec_label_pc_100093bc
  %v0_100093d8 = phi i32 [ %v0_100093ac, %dec_label_pc_10009394 ], [ -1, %dec_label_pc_100093bc ]
  ret i32 %v0_100093d8

; uselistorder directives
  uselistorder label %dec_label_pc_100093c8, { 1, 0 }
}

define i32 @function_100093dc(i32 %arg1) local_unnamed_addr {
dec_label_pc_100093dc:
  %r31.global-to-local = alloca i32, align 4
  %v0_100093f4 = call i32 @__asm_mfcr()
  %v1_100093f8 = and i32 %v0_100093f4, 268435456
  %v3_100093f8 = icmp eq i32 %v1_100093f8, 0
  store i32 %v0_100093f4, i32* %r31.global-to-local, align 4
  br i1 %v3_100093f8, label %dec_label_pc_10009410, label %dec_label_pc_10009404

dec_label_pc_10009404:                            ; preds = %dec_label_pc_100093dc
  %v0_10009404 = call i32 @function_100097e8()
  %v0_10009408 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009408 = inttoptr i32 %v0_10009404 to i32*
  store i32 %v0_10009408, i32* %v2_10009408, align 4
  br label %dec_label_pc_10009410

dec_label_pc_10009410:                            ; preds = %dec_label_pc_100093dc, %dec_label_pc_10009404
  %v0_10009420 = phi i32 [ %v0_100093f4, %dec_label_pc_100093dc ], [ -1, %dec_label_pc_10009404 ]
  ret i32 %v0_10009420

; uselistorder directives
  uselistorder label %dec_label_pc_10009410, { 1, 0 }
}

define i32 @function_10009424(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009424:
  %r31.global-to-local = alloca i32, align 4
  %v3_10009424 = icmp eq i32 %arg2, 0
  br i1 %v3_10009424, label %dec_label_pc_10009464, label %dec_label_pc_1000944c

dec_label_pc_1000944c:                            ; preds = %dec_label_pc_10009424
  store i32 -1, i32* %r31.global-to-local, align 4
  %tmp5 = icmp ult i32 %arg1, 3
  br i1 %tmp5, label %dec_label_pc_10009464, label %dec_label_pc_10009454

dec_label_pc_10009454:                            ; preds = %dec_label_pc_1000944c
  %v0_10009454 = call i32 @function_100097e8()
  %v2_1000945c = inttoptr i32 %v0_10009454 to i32*
  store i32 22, i32* %v2_1000945c, align 4
  %v0_10009488.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009484

dec_label_pc_10009464:                            ; preds = %dec_label_pc_1000944c, %dec_label_pc_10009424
  %v0_10009468 = call i32 @__asm_mfcr()
  %v1_1000946c = and i32 %v0_10009468, 268435456
  %v3_1000946c = icmp eq i32 %v1_1000946c, 0
  store i32 %v0_10009468, i32* %r31.global-to-local, align 4
  br i1 %v3_1000946c, label %dec_label_pc_10009484, label %dec_label_pc_10009478

dec_label_pc_10009478:                            ; preds = %dec_label_pc_10009464
  %v0_10009478 = call i32 @function_100097e8()
  %v0_1000947c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000947c = inttoptr i32 %v0_10009478 to i32*
  store i32 %v0_1000947c, i32* %v2_1000947c, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009484

dec_label_pc_10009484:                            ; preds = %dec_label_pc_10009464, %dec_label_pc_10009454, %dec_label_pc_10009478
  %v0_10009488 = phi i32 [ %v0_10009468, %dec_label_pc_10009464 ], [ %v0_10009488.pre, %dec_label_pc_10009454 ], [ -1, %dec_label_pc_10009478 ]
  ret i32 %v0_10009488

; uselistorder directives
  uselistorder label %dec_label_pc_10009484, { 2, 0, 1 }
}

define i32 @function_1000949c() local_unnamed_addr {
dec_label_pc_1000949c:
  %r31.global-to-local = alloca i32, align 4
  %v0_100094b4 = call i32 @__asm_mfcr()
  %v1_100094b8 = and i32 %v0_100094b4, 268435456
  %v3_100094b8 = icmp eq i32 %v1_100094b8, 0
  store i32 %v0_100094b4, i32* %r31.global-to-local, align 4
  br i1 %v3_100094b8, label %dec_label_pc_100094d0, label %dec_label_pc_100094c4

dec_label_pc_100094c4:                            ; preds = %dec_label_pc_1000949c
  %v0_100094c4 = call i32 @function_100097e8()
  %v0_100094c8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100094c8 = inttoptr i32 %v0_100094c4 to i32*
  store i32 %v0_100094c8, i32* %v2_100094c8, align 4
  br label %dec_label_pc_100094d0

dec_label_pc_100094d0:                            ; preds = %dec_label_pc_1000949c, %dec_label_pc_100094c4
  %v0_100094e0 = phi i32 [ %v0_100094b4, %dec_label_pc_1000949c ], [ -1, %dec_label_pc_100094c4 ]
  ret i32 %v0_100094e0

; uselistorder directives
  uselistorder label %dec_label_pc_100094d0, { 1, 0 }
}

define i32 @function_100094e4(i32 %arg1) local_unnamed_addr {
dec_label_pc_100094e4:
  %r31.global-to-local = alloca i32, align 4
  %v0_100094fc = call i32 @__asm_mfcr()
  %v1_10009500 = and i32 %v0_100094fc, 268435456
  %v3_10009500 = icmp eq i32 %v1_10009500, 0
  store i32 %v0_100094fc, i32* %r31.global-to-local, align 4
  br i1 %v3_10009500, label %dec_label_pc_10009518, label %dec_label_pc_1000950c

dec_label_pc_1000950c:                            ; preds = %dec_label_pc_100094e4
  %v0_1000950c = call i32 @function_100097e8()
  %v0_10009510 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009510 = inttoptr i32 %v0_1000950c to i32*
  store i32 %v0_10009510, i32* %v2_10009510, align 4
  br label %dec_label_pc_10009518

dec_label_pc_10009518:                            ; preds = %dec_label_pc_100094e4, %dec_label_pc_1000950c
  %v0_10009528 = phi i32 [ %v0_100094fc, %dec_label_pc_100094e4 ], [ -1, %dec_label_pc_1000950c ]
  ret i32 %v0_10009528

; uselistorder directives
  uselistorder label %dec_label_pc_10009518, { 1, 0 }
}

define i32 @function_1000952c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000952c:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009544 = call i32 @__asm_mfcr()
  %v1_10009548 = and i32 %v0_10009544, 268435456
  %v3_10009548 = icmp eq i32 %v1_10009548, 0
  store i32 %v0_10009544, i32* %r31.global-to-local, align 4
  br i1 %v3_10009548, label %dec_label_pc_10009560, label %dec_label_pc_10009554

dec_label_pc_10009554:                            ; preds = %dec_label_pc_1000952c
  %v0_10009554 = call i32 @function_100097e8()
  %v0_10009558 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009558 = inttoptr i32 %v0_10009554 to i32*
  store i32 %v0_10009558, i32* %v2_10009558, align 4
  br label %dec_label_pc_10009560

dec_label_pc_10009560:                            ; preds = %dec_label_pc_1000952c, %dec_label_pc_10009554
  %v0_10009570 = phi i32 [ %v0_10009544, %dec_label_pc_1000952c ], [ -1, %dec_label_pc_10009554 ]
  ret i32 %v0_10009570

; uselistorder directives
  uselistorder label %dec_label_pc_10009560, { 1, 0 }
}

define i32 @function_10009574(i32* %arg1) local_unnamed_addr {
dec_label_pc_10009574:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_10009590 = ptrtoint i32* %stack_var_-40 to i32
  %v2_10009598 = load i32, i32* %arg1, align 4
  store i32 %v2_10009590, i32* @r3, align 4
  %v3_100095a4 = icmp eq i32 %v2_10009598, -1
  br i1 %v3_100095a4, label %dec_label_pc_100095ac, label %dec_label_pc_100095c0

dec_label_pc_100095ac:                            ; preds = %dec_label_pc_10009574
  %v0_100095ac = call i32 @function_100097e8()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_100095b8 = inttoptr i32 %v0_100095ac to i32*
  store i32 9, i32* %v2_100095b8, align 4
  %v0_10009604.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009600

dec_label_pc_100095c0:                            ; preds = %dec_label_pc_10009574
  %v3_100095c0 = call i32 @function_1000ab84(i32 %v2_10009590, i32 ptrtoint ([3 x i8]* @global_var_1000ab7c.329 to i32))
  %v0_100095c8 = call i32 @function_1000ab7c()
  %v0_100095d0 = load i32, i32* @r31, align 4
  %v1_100095d0 = inttoptr i32 %v0_100095d0 to i32*
  %v2_100095d0 = load i32, i32* %v1_100095d0, align 4
  store i32 %v2_100095d0, i32* @r29, align 4
  store i32 -1, i32* %v1_100095d0, align 4
  store i32 %v2_10009590, i32* @r3, align 4
  %v2_100095e0 = call i32 @function_1000ab84(i32 %v2_10009590, i32 1)
  %v0_100095e4 = load i32, i32* @r31, align 4
  %v1_100095e4 = add i32 %v0_100095e4, 12
  %v2_100095e4 = inttoptr i32 %v1_100095e4 to i32*
  %v3_100095e4 = load i32, i32* %v2_100095e4, align 4
  store i32 %v3_100095e4, i32* @r3, align 4
  store i32 268473836, i32* @lr, align 4
  %v0_100095e8 = call i32 @function_1000a1e8()
  %v0_100095ec = load i32, i32* @r31, align 4
  store i32 %v0_100095ec, i32* @r3, align 4
  store i32 268473844, i32* @lr, align 4
  %v0_100095f0 = call i32 @function_1000a1e8()
  store i32 268473852, i32* @lr, align 4
  %v0_100095f8 = call i32 @function_100090cc()
  store i32 %v0_100095f8, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009600

dec_label_pc_10009600:                            ; preds = %dec_label_pc_100095ac, %dec_label_pc_100095c0
  %v0_10009604 = phi i32 [ %v0_10009604.pre, %dec_label_pc_100095ac ], [ %v0_100095f8, %dec_label_pc_100095c0 ]
  ret i32 %v0_10009604

; uselistorder directives
  uselistorder i32 %v2_10009590, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10009600, { 1, 0 }
}

define i32 @function_10009618(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009618:
  %r0.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-120 = alloca i32, align 4
  %v0_10009618 = load i32, i32* @lr, align 4
  store i32 %v0_10009618, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 268473912, i32* @lr, align 4
  %v2_10009634 = call i32 @function_10009234(i32 18432, i32 18432)
  %v1_10009638 = icmp slt i32 %v2_10009634, 0
  br i1 %v1_10009638, label %dec_label_pc_10009710, label %dec_label_pc_10009640

dec_label_pc_10009640:                            ; preds = %dec_label_pc_10009618
  %v2_10009640 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_10009640, i32* @r4, align 4
  store i32 268473928, i32* @lr, align 4
  %v1_10009644 = call i32 @function_1000af58(i32 %v2_10009640)
  %v1_10009648 = icmp slt i32 %v1_10009644, 0
  br i1 %v1_10009648, label %dec_label_pc_1000966c, label %dec_label_pc_10009650

dec_label_pc_10009650:                            ; preds = %dec_label_pc_10009640
  %v0_10009650 = load i32, i32* @r29, align 4
  store i32 2, i32* @r4, align 4
  store i32 268473956, i32* @lr, align 4
  %v2_10009660 = call i32 @function_10008fe4(i32 %v0_10009650)
  %tmp5 = icmp sgt i32 %v2_10009660, -1
  br i1 %tmp5, label %dec_label_pc_1000968c, label %dec_label_pc_1000966c

dec_label_pc_1000966c:                            ; preds = %dec_label_pc_10009650, %dec_label_pc_10009640
  %v0_1000966c = call i32 @function_100097e8()
  store i32 0, i32* @r31, align 4
  store i32 %v0_1000966c, i32* @r28, align 4
  %v1_1000967c = inttoptr i32 %v0_1000966c to i32*
  %v2_1000967c = load i32, i32* %v1_1000967c, align 4
  store i32 268473988, i32* @lr, align 4
  %v0_10009680 = call i32 @function_100090cc()
  %v1_10009684 = load i32, i32* @r28, align 4
  %v2_10009684 = inttoptr i32 %v1_10009684 to i32*
  store i32 %v2_1000967c, i32* %v2_10009684, align 4
  br label %dec_label_pc_10009710

dec_label_pc_1000968c:                            ; preds = %dec_label_pc_10009650
  store i32 48, i32* @r3, align 4
  store i32 268474004, i32* @lr, align 4
  %v0_10009690 = call i32 @function_1000a020()
  store i32 %v0_10009690, i32* %r31.global-to-local, align 4
  %v3_10009694 = icmp eq i32 %v0_10009690, 0
  br i1 %v3_10009694, label %dec_label_pc_100096e8, label %dec_label_pc_1000969c

dec_label_pc_1000969c:                            ; preds = %dec_label_pc_1000968c
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_100096a0 = load i32, i32* @r29, align 4
  %v2_100096a0 = inttoptr i32 %v0_10009690 to i32*
  store i32 %v0_100096a0, i32* %v2_100096a0, align 4
  %v0_100096a4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100096a4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100096a4 = add i32 %v1_100096a4, 4
  %v3_100096a4 = inttoptr i32 %v2_100096a4 to i32*
  store i32 %v0_100096a4, i32* %v3_100096a4, align 4
  %v0_100096a8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100096a8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100096a8 = add i32 %v1_100096a8, 16
  %v3_100096a8 = inttoptr i32 %v2_100096a8 to i32*
  store i32 %v0_100096a8, i32* %v3_100096a8, align 4
  %v0_100096ac = load i32, i32* %r0.global-to-local, align 4
  %v1_100096ac = load i32, i32* %r31.global-to-local, align 4
  %v2_100096ac = add i32 %v1_100096ac, 8
  %v3_100096ac = inttoptr i32 %v2_100096ac to i32*
  store i32 %v0_100096ac, i32* %v3_100096ac, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_100096b4 = icmp ugt i32 %tmp, 511
  %v1_100096b8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100096b8 = add i32 %v1_100096b8, 20
  %v3_100096b8 = inttoptr i32 %v2_100096b8 to i32*
  store i32 %tmp, i32* %v3_100096b8, align 4
  br i1 %v2_100096b4, label %dec_label_pc_100096c8, label %dec_label_pc_100096c0

dec_label_pc_100096c0:                            ; preds = %dec_label_pc_1000969c
  store i32 512, i32* %r0.global-to-local, align 4
  %v1_100096c4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100096c4 = add i32 %v1_100096c4, 20
  %v3_100096c4 = inttoptr i32 %v2_100096c4 to i32*
  store i32 512, i32* %v3_100096c4, align 4
  br label %dec_label_pc_100096c8

dec_label_pc_100096c8:                            ; preds = %dec_label_pc_1000969c, %dec_label_pc_100096c0
  %v0_100096c8 = load i32, i32* %r31.global-to-local, align 4
  %v1_100096c8 = add i32 %v0_100096c8, 20
  %v2_100096c8 = inttoptr i32 %v1_100096c8 to i32*
  %v3_100096c8 = load i32, i32* %v2_100096c8, align 4
  store i32 268474068, i32* @lr, align 4
  %v2_100096d0 = call i32 @function_1000a178(i32 1, i32 %v3_100096c8)
  %v3_100096d4 = icmp eq i32 %v2_100096d0, 0
  %v1_100096d8 = load i32, i32* @r31, align 4
  %v2_100096d8 = add i32 %v1_100096d8, 12
  %v3_100096d8 = inttoptr i32 %v2_100096d8 to i32*
  store i32 %v2_100096d0, i32* %v3_100096d8, align 4
  br i1 %v3_100096d4, label %dec_label_pc_100096e0, label %dec_label_pc_10009704

dec_label_pc_100096e0:                            ; preds = %dec_label_pc_100096c8
  %v0_100096e0 = load i32, i32* @r31, align 4
  store i32 %v0_100096e0, i32* @r3, align 4
  store i32 268474088, i32* @lr, align 4
  %v0_100096e4 = call i32 @function_1000a1e8()
  br label %dec_label_pc_100096e8

dec_label_pc_100096e8:                            ; preds = %dec_label_pc_1000968c, %dec_label_pc_100096e0
  store i32 0, i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_100096f4.332 to i32), i32* @lr, align 4
  %v0_100096f0 = call i32 @function_100090cc()
  %v0_100096f4 = call i32 @function_100097e8()
  store i32 12, i32* %r0.global-to-local, align 4
  %v2_100096fc = inttoptr i32 %v0_100096f4 to i32*
  store i32 12, i32* %v2_100096fc, align 4
  br label %dec_label_pc_10009710

dec_label_pc_10009704:                            ; preds = %dec_label_pc_100096c8
  %v0_1000970c = call i32 @function_1000ab7c()
  br label %dec_label_pc_10009710

dec_label_pc_10009710:                            ; preds = %dec_label_pc_10009618, %dec_label_pc_100096e8, %dec_label_pc_1000966c, %dec_label_pc_10009704
  store i32 %v0_10009618, i32* %r0.global-to-local, align 4
  %v0_10009714 = load i32, i32* @r31, align 4
  ret i32 %v0_10009714

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8 }
  uselistorder i32 (i32, i32)* @function_1000a178, { 41, 43, 42, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 1, 0, 6, 5, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 4, 3, 2 }
  uselistorder i32 512, { 6, 8, 7, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 ()* @function_100090cc, { 20, 19, 18, 37, 36, 35, 34, 32, 33, 27, 26, 31, 30, 29, 28, 4, 3, 2, 25, 24, 23, 22, 21, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 1, 0 }
  uselistorder i32 18432, { 1, 0 }
  uselistorder label %dec_label_pc_10009710, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_100096e8, { 1, 0 }
  uselistorder label %dec_label_pc_100096c8, { 1, 0 }
}

define i32 @function_10009728(i32* %arg1) local_unnamed_addr {
dec_label_pc_10009728:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  %v0_1000972c = load i32, i32* @lr, align 4
  store i32 %v0_1000972c, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_10009744 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10009744, i32* @r3, align 4
  %v3_10009750 = call i32 @function_1000ab84(i32 %v2_10009744, i32 ptrtoint ([3 x i8]* @global_var_1000ab7c.329 to i32))
  %v0_10009758 = call i32 @function_1000ab7c()
  br label %dec_label_pc_1000975c

dec_label_pc_1000975c:                            ; preds = %dec_label_pc_10009798, %dec_label_pc_10009728
  %v0_1000975c = load i32, i32* @r31, align 4
  %v1_1000975c = add i32 %v0_1000975c, 4
  %v2_1000975c = inttoptr i32 %v1_1000975c to i32*
  %v3_1000975c = load i32, i32* %v2_1000975c, align 4
  store i32 %v3_1000975c, i32* %r0.global-to-local, align 4
  %v1_10009760 = add i32 %v0_1000975c, 8
  %v2_10009760 = inttoptr i32 %v1_10009760 to i32*
  %v3_10009760 = load i32, i32* %v2_10009760, align 4
  store i32 %v3_10009760, i32* %r9.global-to-local, align 4
  %v3_10009764 = icmp ugt i32 %v3_10009760, %v3_1000975c
  br i1 %v3_10009764, label %dec_label_pc_10009798, label %dec_label_pc_1000976c

dec_label_pc_1000976c:                            ; preds = %dec_label_pc_1000975c
  %v1_1000976c = inttoptr i32 %v0_1000975c to i32*
  %v2_1000976c = load i32, i32* %v1_1000976c, align 4
  store i32 %v2_1000976c, i32* @r3, align 4
  %v1_10009770 = add i32 %v0_1000975c, 12
  %v2_10009770 = inttoptr i32 %v1_10009770 to i32*
  %v3_10009770 = load i32, i32* %v2_10009770, align 4
  %v1_10009774 = add i32 %v0_1000975c, 20
  %v2_10009774 = inttoptr i32 %v1_10009774 to i32*
  %v3_10009774 = load i32, i32* %v2_10009774, align 4
  store i32 %v3_10009774, i32* @r5, align 4
  store i32 268474236, i32* @lr, align 4
  %v4_10009778 = inttoptr i32 %v2_1000976c to i32*
  %v5_10009778 = call i32 @function_1000afcc(i32* %v4_10009778, i32 %v3_10009770, i32 %v3_10009774, i32 %v3_10009760)
  %v2_1000977c = icmp sgt i32 %v5_10009778, 0
  br i1 %v2_1000977c, label %dec_label_pc_1000978c, label %dec_label_pc_10009784

dec_label_pc_10009784:                            ; preds = %dec_label_pc_1000976c
  store i32 0, i32* @r29, align 4
  br label %dec_label_pc_100097c4

dec_label_pc_1000978c:                            ; preds = %dec_label_pc_1000976c
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10009790 = load i32, i32* @r31, align 4
  %v2_10009790 = add i32 %v1_10009790, 8
  %v3_10009790 = inttoptr i32 %v2_10009790 to i32*
  store i32 %v5_10009778, i32* %v3_10009790, align 4
  %v0_10009794 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009794 = load i32, i32* @r31, align 4
  %v2_10009794 = add i32 %v1_10009794, 4
  %v3_10009794 = inttoptr i32 %v2_10009794 to i32*
  store i32 %v0_10009794, i32* %v3_10009794, align 4
  %v0_10009798.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10009798

dec_label_pc_10009798:                            ; preds = %dec_label_pc_1000975c, %dec_label_pc_1000978c
  %v1_100097ac = phi i32 [ %v0_1000975c, %dec_label_pc_1000975c ], [ %v0_10009798.pre, %dec_label_pc_1000978c ]
  %v1_10009798 = add i32 %v1_100097ac, 4
  %v2_10009798 = inttoptr i32 %v1_10009798 to i32*
  %v3_10009798 = load i32, i32* %v2_10009798, align 4
  store i32 %v3_10009798, i32* %r9.global-to-local, align 4
  %v1_1000979c = add i32 %v1_100097ac, 12
  %v2_1000979c = inttoptr i32 %v1_1000979c to i32*
  %v3_1000979c = load i32, i32* %v2_1000979c, align 4
  store i32 %v3_1000979c, i32* %r11.global-to-local, align 4
  %v2_100097a0 = add i32 %v3_1000979c, %v3_10009798
  store i32 %v2_100097a0, i32* @r29, align 4
  %v1_100097a4 = add i32 %v2_100097a0, 8
  %v2_100097a4 = inttoptr i32 %v1_100097a4 to i16*
  %v3_100097a4 = load i16, i16* %v2_100097a4, align 2
  %v4_100097a4 = zext i16 %v3_100097a4 to i32
  %v2_100097a8 = add i32 %v4_100097a4, %v3_10009798
  store i32 %v2_100097a8, i32* %r0.global-to-local, align 4
  store i32 %v2_100097a8, i32* %v2_10009798, align 4
  %v0_100097b0 = load i32, i32* @r29, align 4
  %v1_100097b0 = add i32 %v0_100097b0, 4
  %v2_100097b0 = inttoptr i32 %v1_100097b0 to i32*
  %v3_100097b0 = load i32, i32* %v2_100097b0, align 4
  store i32 %v3_100097b0, i32* %r0.global-to-local, align 4
  %v1_100097b4 = load i32, i32* @r31, align 4
  %v2_100097b4 = add i32 %v1_100097b4, 16
  %v3_100097b4 = inttoptr i32 %v2_100097b4 to i32*
  store i32 %v3_100097b0, i32* %v3_100097b4, align 4
  %v0_100097b8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100097b8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100097b8 = add i32 %v1_100097b8, %v0_100097b8
  %v3_100097b8 = inttoptr i32 %v2_100097b8 to i32*
  %v4_100097b8 = load i32, i32* %v3_100097b8, align 4
  store i32 %v4_100097b8, i32* %r0.global-to-local, align 4
  %v3_100097bc = icmp eq i32 %v4_100097b8, 0
  br i1 %v3_100097bc, label %dec_label_pc_1000975c, label %dec_label_pc_100097c4

dec_label_pc_100097c4:                            ; preds = %dec_label_pc_10009798, %dec_label_pc_10009784
  store i32 %v2_10009744, i32* @r3, align 4
  %v2_100097cc = call i32 @function_1000ab84(i32 %v2_10009744, i32 1)
  store i32 %v0_1000972c, i32* %r0.global-to-local, align 4
  %v0_100097d4 = load i32, i32* @r29, align 4
  ret i32 %v0_100097d4

; uselistorder directives
  uselistorder i32 %v1_100097ac, { 1, 0 }
  uselistorder i32 %v0_1000975c, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v2_10009744, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10009798, { 1, 0 }
}

define i32 @function_100097e8() local_unnamed_addr {
dec_label_pc_100097e8:
  ret i32 ptrtoint (i32* @global_var_1001c2ac.334 to i32)
}

define i32 @function_100097f4(i32 %arg1) local_unnamed_addr {
dec_label_pc_100097f4:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %v2_100097fc = ptrtoint i32* %stack_var_-24 to i32
  store i32 268474376, i32* @lr, align 4
  %v1_10009804 = call i32 @function_1000b40c(i32 %v2_100097fc)
  %v3_1000980c = load i32, i32* %stack_var_-24, align 4
  %v2_10009810 = add i32 %v3_1000980c, %tmp
  %v1_10009818 = mul i32 %v2_10009810, 10000
  %v1_10009824 = and i32 %v1_10009818, 2147483632
  ret i32 %v1_10009824
}

define i32 @function_1000982c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000982c:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  %v2_1000982c = icmp ult i32 %arg2, %arg1
  store i32 %arg1, i32* %r8.global-to-local, align 4
  store i32 %arg3, i32* @r11, align 4
  br i1 %v2_1000982c, label %dec_label_pc_10009840, label %dec_label_pc_1000983c

dec_label_pc_1000983c:                            ; preds = %dec_label_pc_1000982c
  %v0_1000983c = call i32 @function_1000b5d0()
  store i32 %v0_1000983c, i32* @r3, align 4
  br label %dec_label_pc_10009840

dec_label_pc_10009840:                            ; preds = %dec_label_pc_1000982c, %dec_label_pc_1000983c
  %v1_10009840 = call i32 @__asm_rlwinm.(i32 %arg3, i32 29, i32 3, i32 31)
  store i32 %v1_10009840, i32* %r9.global-to-local, align 4
  %v4_10009840 = icmp eq i32 %v1_10009840, 0
  %v2_10009844 = add i32 %arg3, %arg2
  store i32 %v2_10009844, i32* %r4.global-to-local, align 4
  %v0_10009848 = load i32, i32* @r3, align 4
  %v2_10009848 = add i32 %v0_10009848, %arg3
  store i32 %v2_10009848, i32* %r10.global-to-local, align 4
  br i1 %v4_10009840, label %dec_label_pc_10009870, label %dec_label_pc_10009850

dec_label_pc_10009850:                            ; preds = %dec_label_pc_10009840
  %v1_10009850 = urem i32 %v2_10009848, 4
  %v3_10009850 = icmp eq i32 %v1_10009850, 0
  br i1 %v3_10009850, label %dec_label_pc_10009858, label %dec_label_pc_100098a4

dec_label_pc_10009858:                            ; preds = %dec_label_pc_100098bc.dec_label_pc_10009858_crit_edge, %dec_label_pc_10009850
  %v1_10009864.pre = phi i32 [ %v1_10009864.pre.pre, %dec_label_pc_100098bc.dec_label_pc_10009858_crit_edge ], [ %v2_10009848, %dec_label_pc_10009850 ]
  %v0_10009858 = phi i32 [ %v1_100098bc, %dec_label_pc_100098bc.dec_label_pc_10009858_crit_edge ], [ %v1_10009840, %dec_label_pc_10009850 ]
  store i32 %v0_10009858, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000985c

dec_label_pc_1000985c:                            ; preds = %dec_label_pc_1000985c, %dec_label_pc_10009858
  %v1_10009864 = phi i32 [ %v2_10009868, %dec_label_pc_1000985c ], [ %v1_10009864.pre, %dec_label_pc_10009858 ]
  %v0_1000985c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000985c = add i32 %v0_1000985c, -4
  %v2_1000985c = inttoptr i32 %v1_1000985c to i32*
  %v3_1000985c = load i32, i32* %v2_1000985c, align 4
  %v1_10009860 = add i32 %v0_1000985c, -8
  %v2_10009860 = inttoptr i32 %v1_10009860 to i32*
  %v3_10009860 = load i32, i32* %v2_10009860, align 4
  store i32 %v3_10009860, i32* %r9.global-to-local, align 4
  store i32 %v1_10009860, i32* %r4.global-to-local, align 4
  %v2_10009864 = add i32 %v1_10009864, -4
  %v3_10009864 = inttoptr i32 %v2_10009864 to i32*
  store i32 %v3_1000985c, i32* %v3_10009864, align 4
  %v0_10009868 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009868 = load i32, i32* %r10.global-to-local, align 4
  %v2_10009868 = add i32 %v1_10009868, -8
  %v3_10009868 = inttoptr i32 %v2_10009868 to i32*
  store i32 %v0_10009868, i32* %v3_10009868, align 4
  store i32 %v2_10009868, i32* %r10.global-to-local, align 4
  %v0_1000986c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000986c = add i32 %v0_1000986c, -1
  store i32 %v1_1000986c, i32* %ctr.global-to-local, align 4
  %v2_1000986c = icmp eq i32 %v1_1000986c, 0
  br i1 %v2_1000986c, label %dec_label_pc_10009870, label %dec_label_pc_1000985c

dec_label_pc_10009870:                            ; preds = %dec_label_pc_1000985c, %dec_label_pc_100098bc, %dec_label_pc_10009840
  %v0_10009870 = load i32, i32* @r11, align 4
  %v1_10009870 = urem i32 %v0_10009870, 8
  store i32 %v1_10009870, i32* %r5.global-to-local, align 4
  %tmp = icmp ult i32 %v1_10009870, 4
  br i1 %tmp, label %dec_label_pc_10009888, label %dec_label_pc_1000987c

dec_label_pc_1000987c:                            ; preds = %dec_label_pc_10009870
  %v0_1000987c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000987c = add i32 %v0_1000987c, -4
  %v2_1000987c = inttoptr i32 %v1_1000987c to i32*
  %v3_1000987c = load i32, i32* %v2_1000987c, align 4
  store i32 %v1_1000987c, i32* %r4.global-to-local, align 4
  %v1_10009880 = add nsw i32 %v1_10009870, -4
  store i32 %v1_10009880, i32* %r5.global-to-local, align 4
  %v1_10009884 = load i32, i32* %r10.global-to-local, align 4
  %v2_10009884 = add i32 %v1_10009884, -4
  %v3_10009884 = inttoptr i32 %v2_10009884 to i32*
  store i32 %v3_1000987c, i32* %v3_10009884, align 4
  store i32 %v2_10009884, i32* %r10.global-to-local, align 4
  %v0_10009888.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10009888

dec_label_pc_10009888:                            ; preds = %dec_label_pc_10009870, %dec_label_pc_1000987c
  %v0_10009890 = phi i32 [ %v1_10009870, %dec_label_pc_10009870 ], [ %v0_10009888.pre, %dec_label_pc_1000987c ]
  %v3_10009888 = icmp eq i32 %v0_10009890, 0
  br i1 %v3_10009888, label %dec_label_pc_100098c8, label %dec_label_pc_10009890

dec_label_pc_10009890:                            ; preds = %dec_label_pc_10009888
  store i32 %v0_10009890, i32* %ctr.global-to-local, align 4
  %v2_10009898.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10009894

dec_label_pc_10009894:                            ; preds = %dec_label_pc_10009894, %dec_label_pc_10009890
  %v2_10009898 = phi i32 [ %v3_10009898, %dec_label_pc_10009894 ], [ %v2_10009898.pre, %dec_label_pc_10009890 ]
  %v0_10009894 = load i32, i32* %r4.global-to-local, align 4
  %v1_10009894 = add i32 %v0_10009894, -1
  %v2_10009894 = inttoptr i32 %v1_10009894 to i8*
  %v3_10009894 = load i8, i8* %v2_10009894, align 1
  store i32 %v1_10009894, i32* %r4.global-to-local, align 4
  %v3_10009898 = add i32 %v2_10009898, -1
  %v4_10009898 = inttoptr i32 %v3_10009898 to i8*
  store i8 %v3_10009894, i8* %v4_10009898, align 1
  store i32 %v3_10009898, i32* %r10.global-to-local, align 4
  %v0_1000989c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000989c = add i32 %v0_1000989c, -1
  store i32 %v1_1000989c, i32* %ctr.global-to-local, align 4
  %v2_1000989c = icmp eq i32 %v1_1000989c, 0
  br i1 %v2_1000989c, label %dec_label_pc_100098c8, label %dec_label_pc_10009894

dec_label_pc_100098a4:                            ; preds = %dec_label_pc_10009850
  %v1_100098a4 = sub nsw i32 4, %v1_10009850
  store i32 %v1_100098a4, i32* %ctr.global-to-local, align 4
  %v2_100098ac = sub i32 %arg3, %v1_100098a4
  store i32 %v2_100098ac, i32* @r11, align 4
  %v1_100098b08 = add i32 %v2_10009844, -1
  %v2_100098b09 = inttoptr i32 %v1_100098b08 to i8*
  %v3_100098b010 = load i8, i8* %v2_100098b09, align 1
  store i32 %v1_100098b08, i32* %r4.global-to-local, align 4
  %v3_100098b412 = add i32 %v2_10009848, -1
  %v4_100098b413 = inttoptr i32 %v3_100098b412 to i8*
  store i8 %v3_100098b010, i8* %v4_100098b413, align 1
  store i32 %v3_100098b412, i32* %r10.global-to-local, align 4
  %v0_100098b814 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100098b815 = add i32 %v0_100098b814, -1
  store i32 %v1_100098b815, i32* %ctr.global-to-local, align 4
  %v2_100098b816 = icmp eq i32 %v1_100098b815, 0
  br i1 %v2_100098b816, label %dec_label_pc_100098bc, label %dec_label_pc_100098b0.dec_label_pc_100098b0_crit_edge

dec_label_pc_100098b0.dec_label_pc_100098b0_crit_edge: ; preds = %dec_label_pc_100098a4, %dec_label_pc_100098b0.dec_label_pc_100098b0_crit_edge
  %v3_100098b417 = phi i32 [ %v3_100098b4, %dec_label_pc_100098b0.dec_label_pc_100098b0_crit_edge ], [ %v3_100098b412, %dec_label_pc_100098a4 ]
  %v0_100098b0.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_100098b0 = add i32 %v0_100098b0.pre, -1
  %v2_100098b0 = inttoptr i32 %v1_100098b0 to i8*
  %v3_100098b0 = load i8, i8* %v2_100098b0, align 1
  store i32 %v1_100098b0, i32* %r4.global-to-local, align 4
  %v3_100098b4 = add i32 %v3_100098b417, -1
  %v4_100098b4 = inttoptr i32 %v3_100098b4 to i8*
  store i8 %v3_100098b0, i8* %v4_100098b4, align 1
  store i32 %v3_100098b4, i32* %r10.global-to-local, align 4
  %v0_100098b8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100098b8 = add i32 %v0_100098b8, -1
  store i32 %v1_100098b8, i32* %ctr.global-to-local, align 4
  %v2_100098b8 = icmp eq i32 %v1_100098b8, 0
  br i1 %v2_100098b8, label %dec_label_pc_100098bc, label %dec_label_pc_100098b0.dec_label_pc_100098b0_crit_edge

dec_label_pc_100098bc:                            ; preds = %dec_label_pc_100098b0.dec_label_pc_100098b0_crit_edge, %dec_label_pc_100098a4
  %v0_100098bc = load i32, i32* @r11, align 4
  %v1_100098bc = call i32 @__asm_rlwinm.(i32 %v0_100098bc, i32 29, i32 3, i32 31)
  store i32 %v1_100098bc, i32* %r9.global-to-local, align 4
  %v4_100098bc = icmp eq i32 %v1_100098bc, 0
  br i1 %v4_100098bc, label %dec_label_pc_10009870, label %dec_label_pc_100098bc.dec_label_pc_10009858_crit_edge

dec_label_pc_100098bc.dec_label_pc_10009858_crit_edge: ; preds = %dec_label_pc_100098bc
  %v1_10009864.pre.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10009858

dec_label_pc_100098c8:                            ; preds = %dec_label_pc_10009894, %dec_label_pc_10009888
  %v0_100098c8 = load i32, i32* %r8.global-to-local, align 4
  ret i32 %v0_100098c8

; uselistorder directives
  uselistorder i32 %v1_100098bc, { 1, 2, 0 }
  uselistorder i32 %v1_100098b8, { 1, 0 }
  uselistorder i32 %v3_100098b4, { 1, 2, 0 }
  uselistorder i32 %v1_1000989c, { 1, 0 }
  uselistorder i32 %v3_10009898, { 1, 2, 0 }
  uselistorder i32 %v1_10009870, { 3, 2, 1, 0 }
  uselistorder i32 %v1_1000986c, { 1, 0 }
  uselistorder i32 %v2_10009868, { 1, 2, 0 }
  uselistorder i32 %v1_10009850, { 1, 0 }
  uselistorder i32 %v2_10009848, { 1, 2, 0, 3 }
  uselistorder i32* %r4.global-to-local, { 0, 5, 9, 1, 6, 2, 8, 3, 7, 4 }
  uselistorder i32* %r10.global-to-local, { 8, 0, 9, 1, 5, 2, 6, 3, 7, 4 }
  uselistorder i32* %ctr.global-to-local, { 0, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 %arg3, { 3, 0, 1, 4, 2, 5 }
  uselistorder label %dec_label_pc_100098b0.dec_label_pc_100098b0_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10009888, { 1, 0 }
  uselistorder label %dec_label_pc_10009870, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10009840, { 1, 0 }
}

define i32 @function_100098d0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100098d0:
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v1_100098d0 = call i32 @__asm_rlwinm.(i32 %arg3, i32 29, i32 3, i32 31)
  store i32 %v1_100098d0, i32* %r9.global-to-local, align 4
  %v4_100098d0 = icmp eq i32 %v1_100098d0, 0
  %v1_100098d8 = add i32 %arg1, -4
  store i32 %v1_100098d8, i32* %r11.global-to-local, align 4
  %v1_100098dc = call i32 @__asm_rlwimi(i32 %arg2, i32 8, i32 16, i32 23)
  %v1_100098e0 = call i32 @__asm_rlwimi(i32 %v1_100098dc, i32 16, i32 0, i32 15)
  %v2_100098e0 = trunc i32 %v1_100098e0 to i8
  br i1 %v4_100098d0, label %dec_label_pc_10009908, label %dec_label_pc_100098e8

dec_label_pc_100098e8:                            ; preds = %dec_label_pc_100098d0
  %v0_100098e8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100098e8 = urem i32 %v0_100098e8, 4
  %v3_100098e8 = icmp eq i32 %v1_100098e8, 0
  br i1 %v3_100098e8, label %dec_label_pc_100098e8.dec_label_pc_100098f0_crit_edge, label %dec_label_pc_10009938

dec_label_pc_100098e8.dec_label_pc_100098f0_crit_edge: ; preds = %dec_label_pc_100098e8
  %v0_100098f0.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100098f0

dec_label_pc_100098f0:                            ; preds = %dec_label_pc_10009950.dec_label_pc_100098f0_crit_edge, %dec_label_pc_100098e8.dec_label_pc_100098f0_crit_edge
  %v0_100098f4.pre = phi i32 [ %v0_100098e8, %dec_label_pc_100098e8.dec_label_pc_100098f0_crit_edge ], [ %v0_100098f4.pre.pre, %dec_label_pc_10009950.dec_label_pc_100098f0_crit_edge ]
  %v0_100098f0 = phi i32 [ %v0_100098f0.pre, %dec_label_pc_100098e8.dec_label_pc_100098f0_crit_edge ], [ %v1_10009950, %dec_label_pc_10009950.dec_label_pc_100098f0_crit_edge ]
  store i32 %v0_100098f0, i32* %ctr.global-to-local, align 4
  %v1_100098f8 = sext i8 %v2_100098e0 to i32
  br label %dec_label_pc_100098f4

dec_label_pc_100098f4:                            ; preds = %dec_label_pc_100098f4, %dec_label_pc_100098f0
  %v0_100098f4 = phi i32 [ %v1_10009900, %dec_label_pc_100098f4 ], [ %v0_100098f4.pre, %dec_label_pc_100098f0 ]
  %v1_100098f4 = add i32 %v0_100098f4, 4
  store i32 %v1_100098f4, i32* %r9.global-to-local, align 4
  %v4_100098f8 = inttoptr i32 %v1_100098f4 to i32*
  store i32 %v1_100098f8, i32* %v4_100098f8, align 4
  %v2_100098fc = load i32, i32* %r9.global-to-local, align 4
  %v3_100098fc = add i32 %v2_100098fc, 4
  %v4_100098fc = inttoptr i32 %v3_100098fc to i32*
  store i32 %v1_100098f8, i32* %v4_100098fc, align 4
  %v0_10009900 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009900 = add i32 %v0_10009900, 4
  store i32 %v1_10009900, i32* %r11.global-to-local, align 4
  %v0_10009904 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009904 = add i32 %v0_10009904, -1
  store i32 %v1_10009904, i32* %ctr.global-to-local, align 4
  %v2_10009904 = icmp eq i32 %v1_10009904, 0
  br i1 %v2_10009904, label %dec_label_pc_10009908, label %dec_label_pc_100098f4

dec_label_pc_10009908:                            ; preds = %dec_label_pc_100098f4, %dec_label_pc_10009950, %dec_label_pc_100098d0
  %v0_10009908 = load i32, i32* %r5.global-to-local, align 4
  %v1_10009908 = urem i32 %v0_10009908, 8
  store i32 %v1_10009908, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_10009908, 4
  br i1 %tmp, label %dec_label_pc_1000991c, label %dec_label_pc_10009914

dec_label_pc_10009914:                            ; preds = %dec_label_pc_10009908
  %v1_10009914 = sext i8 %v2_100098e0 to i32
  %v2_10009914 = load i32, i32* %r11.global-to-local, align 4
  %v3_10009914 = add i32 %v2_10009914, 4
  %v4_10009914 = inttoptr i32 %v3_10009914 to i32*
  store i32 %v1_10009914, i32* %v4_10009914, align 4
  store i32 %v3_10009914, i32* %r11.global-to-local, align 4
  %v0_10009918 = load i32, i32* @r5, align 4
  %v1_10009918 = add i32 %v0_10009918, -4
  store i32 %v1_10009918, i32* @r5, align 4
  br label %dec_label_pc_1000991c

dec_label_pc_1000991c:                            ; preds = %dec_label_pc_10009908, %dec_label_pc_10009914
  %v0_1000991c = phi i32 [ %v1_10009908, %dec_label_pc_10009908 ], [ %v1_10009918, %dec_label_pc_10009914 ]
  %v3_1000991c = icmp eq i32 %v0_1000991c, 0
  %v0_10009920 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000991c, i32 %v0_10009920)
  %v0_10009924 = load i32, i32* @r5, align 4
  store i32 %v0_10009924, i32* %ctr.global-to-local, align 4
  %v0_10009928 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009928 = add i32 %v0_10009928, 3
  store i32 %v1_10009928, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000992c

dec_label_pc_1000992c:                            ; preds = %dec_label_pc_1000992c, %dec_label_pc_1000991c
  %v3_1000992c = phi i32 [ %v4_1000992c, %dec_label_pc_1000992c ], [ %v1_10009928, %dec_label_pc_1000991c ]
  %v4_1000992c = add i32 %v3_1000992c, 1
  %v5_1000992c = inttoptr i32 %v4_1000992c to i8*
  store i8 %v2_100098e0, i8* %v5_1000992c, align 1
  store i32 %v4_1000992c, i32* %r9.global-to-local, align 4
  %v0_10009930 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009930 = add i32 %v0_10009930, -1
  store i32 %v1_10009930, i32* %ctr.global-to-local, align 4
  %v2_10009930 = icmp eq i32 %v1_10009930, 0
  br i1 %v2_10009930, label %dec_label_pc_1000995c, label %dec_label_pc_1000992c

dec_label_pc_10009938:                            ; preds = %dec_label_pc_100098e8
  %v1_10009938 = sub nsw i32 4, %v1_100098e8
  store i32 %v1_10009938, i32* %ctr.global-to-local, align 4
  %v1_10009940 = load i32, i32* %r5.global-to-local, align 4
  %v2_10009940 = sub i32 %v1_10009940, %v1_10009938
  store i32 %v2_10009940, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10009944

dec_label_pc_10009944:                            ; preds = %dec_label_pc_10009944, %dec_label_pc_10009938
  %v3_10009944 = phi i32 [ %v1_10009948, %dec_label_pc_10009944 ], [ %v0_100098e8, %dec_label_pc_10009938 ]
  %v4_10009944 = add i32 %v3_10009944, 4
  %v5_10009944 = inttoptr i32 %v4_10009944 to i8*
  store i8 %v2_100098e0, i8* %v5_10009944, align 1
  %v0_10009948 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009948 = add i32 %v0_10009948, 1
  store i32 %v1_10009948, i32* %r11.global-to-local, align 4
  %v0_1000994c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000994c = add i32 %v0_1000994c, -1
  store i32 %v1_1000994c, i32* %ctr.global-to-local, align 4
  %v2_1000994c = icmp eq i32 %v1_1000994c, 0
  br i1 %v2_1000994c, label %dec_label_pc_10009950, label %dec_label_pc_10009944

dec_label_pc_10009950:                            ; preds = %dec_label_pc_10009944
  %v0_10009950 = load i32, i32* %r5.global-to-local, align 4
  %v1_10009950 = call i32 @__asm_rlwinm.(i32 %v0_10009950, i32 29, i32 3, i32 31)
  store i32 %v1_10009950, i32* %r9.global-to-local, align 4
  %v4_10009950 = icmp eq i32 %v1_10009950, 0
  br i1 %v4_10009950, label %dec_label_pc_10009908, label %dec_label_pc_10009950.dec_label_pc_100098f0_crit_edge

dec_label_pc_10009950.dec_label_pc_100098f0_crit_edge: ; preds = %dec_label_pc_10009950
  %v0_100098f4.pre.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100098f0

dec_label_pc_1000995c:                            ; preds = %dec_label_pc_1000992c
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_10009950, { 1, 2, 0 }
  uselistorder i32 %v1_1000994c, { 1, 0 }
  uselistorder i32 %v1_10009948, { 1, 0 }
  uselistorder i32 %v1_10009930, { 1, 0 }
  uselistorder i32 %v4_1000992c, { 1, 2, 0 }
  uselistorder i32 %v1_10009908, { 2, 1, 0 }
  uselistorder i32 %v1_10009904, { 1, 0 }
  uselistorder i32 %v1_10009900, { 1, 0 }
  uselistorder i32 %v1_100098e8, { 1, 0 }
  uselistorder i32 %v0_100098e8, { 2, 1, 0 }
  uselistorder i8 %v2_100098e0, { 3, 2, 1, 0 }
  uselistorder i32* %r5.global-to-local, { 2, 4, 0, 3, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 4, 5, 2, 6, 3, 7, 8 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwimi, { 55, 56, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54 }
  uselistorder label %dec_label_pc_1000991c, { 1, 0 }
  uselistorder label %dec_label_pc_10009908, { 1, 0, 2 }
}

define i32 @function_10009960(i32 %arg1, i8* %arg2) local_unnamed_addr {
dec_label_pc_10009960:
  %cr7_eq.global-to-local = alloca i1, align 1
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_10009960 = add i32 %arg1, -1
  %v1_10009964 = sub i32 %v2_10009960, %tmp
  store i32 %v1_10009964, i32* %r9.global-to-local, align 4
  %v2_100099684 = load i8, i8* %arg2, align 1
  %v1_1000996c6 = add i32 %tmp, 1
  store i32 %v1_1000996c6, i32* %r4.global-to-local, align 4
  %v3_100099707 = icmp eq i8 %v2_100099684, 0
  store i1 %v3_100099707, i1* %cr7_eq.global-to-local, align 1
  %v5_100099748 = inttoptr i32 %arg1 to i8*
  store i8 %v2_100099684, i8* %v5_100099748, align 1
  %v0_100099789 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100099789, label %dec_label_pc_1000997c, label %dec_label_pc_10009968.dec_label_pc_10009968_crit_edge

dec_label_pc_10009968.dec_label_pc_10009968_crit_edge: ; preds = %dec_label_pc_10009960, %dec_label_pc_10009968.dec_label_pc_10009968_crit_edge
  %v0_10009968.pre = load i32, i32* %r4.global-to-local, align 4
  %v2_10009974.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_10009968 = inttoptr i32 %v0_10009968.pre to i8*
  %v2_10009968 = load i8, i8* %v1_10009968, align 1
  %v1_1000996c = add i32 %v0_10009968.pre, 1
  store i32 %v1_1000996c, i32* %r4.global-to-local, align 4
  %v3_10009970 = icmp eq i8 %v2_10009968, 0
  store i1 %v3_10009970, i1* %cr7_eq.global-to-local, align 1
  %v4_10009974 = add i32 %v1_1000996c, %v2_10009974.pre
  %v5_10009974 = inttoptr i32 %v4_10009974 to i8*
  store i8 %v2_10009968, i8* %v5_10009974, align 1
  %v0_10009978 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10009978, label %dec_label_pc_1000997c, label %dec_label_pc_10009968.dec_label_pc_10009968_crit_edge

dec_label_pc_1000997c:                            ; preds = %dec_label_pc_10009968.dec_label_pc_10009968_crit_edge, %dec_label_pc_10009960
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 3, 2, 1, 0 }
  uselistorder i1* %cr7_eq.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009968.dec_label_pc_10009968_crit_edge, { 1, 0 }
}

define i32 @function_10009980(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009980:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8 @__decompiler_undefined_function_2()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_10009984 = load i32, i32* @lr, align 4
  store i32 %v0_10009984, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_10009994 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268474792, i32* @lr, align 4
  %v3_100099a4 = call i32 @function_10008efc(i32 1076655123, i32 %v2_10009994, i32 %v2_10009994)
  %v2_100099a8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_100099a8, i32* @r4, align 4
  store i32 %v3_100099a4, i32* @r30, align 4
  %v3_100099ac = icmp eq i32 %v3_100099a4, 0
  %v0_100099b4 = load i32, i32* @r31, align 4
  br i1 %v3_100099ac, label %dec_label_pc_100099bc, label %dec_label_pc_10009a04

dec_label_pc_100099bc:                            ; preds = %dec_label_pc_10009980
  %v1_100099b4 = add i32 %v0_100099b4, 17
  %v3_100099d4 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_100099d4, i32* %r0.global-to-local, align 4
  %v2_100099d8 = add i32 %v0_100099b4, 4
  %v3_100099d8 = inttoptr i32 %v2_100099d8 to i32*
  store i32 %tmp7, i32* %v3_100099d8, align 4
  %v0_100099dc = load i32, i32* %r0.global-to-local, align 4
  %v1_100099dc = load i32, i32* @r31, align 4
  %v2_100099dc = inttoptr i32 %v1_100099dc to i32*
  store i32 %v0_100099dc, i32* %v2_100099dc, align 4
  %v0_100099e0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100099e0 = load i32, i32* @r31, align 4
  %v2_100099e0 = add i32 %v1_100099e0, 8
  %v3_100099e0 = inttoptr i32 %v2_100099e0 to i32*
  store i32 %v0_100099e0, i32* %v3_100099e0, align 4
  %v0_100099e4 = load i32, i32* %r10.global-to-local, align 4
  %v1_100099e4 = load i32, i32* @r31, align 4
  %v2_100099e4 = add i32 %v1_100099e4, 12
  %v3_100099e4 = inttoptr i32 %v2_100099e4 to i32*
  store i32 %v0_100099e4, i32* %v3_100099e4, align 4
  %v3_100099e8 = load i32, i32* @r31, align 4
  %v4_100099e8 = add i32 %v3_100099e8, 16
  %v5_100099e8 = inttoptr i32 %v4_100099e8 to i8*
  store i8 %tmp4, i8* %v5_100099e8, align 1
  %v1_100099ec = load i32, i32* @r31, align 4
  %v2_100099ec = add i32 %v1_100099ec, 52
  %v3_100099ec = inttoptr i32 %v2_100099ec to i32*
  store i32 %tmp3, i32* %v3_100099ec, align 4
  %v1_100099f0 = load i32, i32* @r31, align 4
  %v2_100099f0 = add i32 %v1_100099f0, 56
  %v3_100099f0 = inttoptr i32 %v2_100099f0 to i32*
  store i32 %tmp2, i32* %v3_100099f0, align 4
  store i32 268474872, i32* @lr, align 4
  %v6_100099f4 = sext i8 %tmp4 to i32
  %v8_100099f4 = call i32 @function_1000b66c(i32 %v1_100099b4, i32 %v2_100099a8, i32 19, i32 %tmp2, i32 %tmp3, i32 %v6_100099f4, i32 %tmp7)
  store i32 268474884, i32* @lr, align 4
  %v3_10009a00 = call i32 @function_100098d0(i32 %v8_100099f4, i32 0, i32 13)
  %v0_10009a08.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10009a04

dec_label_pc_10009a04:                            ; preds = %dec_label_pc_10009980, %dec_label_pc_100099bc
  %v0_10009a08 = phi i32 [ %v3_100099a4, %dec_label_pc_10009980 ], [ %v0_10009a08.pre, %dec_label_pc_100099bc ]
  store i32 %v0_10009984, i32* %r0.global-to-local, align 4
  ret i32 %v0_10009a08

; uselistorder directives
  uselistorder i32 %v2_10009994, { 1, 0 }
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder i32 13, { 6, 7, 8, 0, 1, 9, 10, 2, 11, 12, 3, 13, 14, 4, 15, 16, 5 }
  uselistorder label %dec_label_pc_10009a04, { 1, 0 }
}

define i32 @function_10009a1c() local_unnamed_addr {
dec_label_pc_10009a1c:
  %r27.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_10009a1c = load i32, i32* @r4, align 4
  %v3_10009a1c = icmp eq i32 %v0_10009a1c, 1
  %v0_10009a2c = load i32, i32* @r3, align 4
  store i32 %v0_10009a2c, i32* %r27.global-to-local, align 4
  %v0_10009a34 = load i32, i32* @r5, align 4
  store i32 %v0_10009a34, i32* @r31, align 4
  br i1 %v3_10009a1c, label %dec_label_pc_10009a58, label %dec_label_pc_10009a3c

dec_label_pc_10009a3c:                            ; preds = %dec_label_pc_10009a1c
  %v3_10009a3c = icmp eq i32 %v0_10009a1c, 2
  br i1 %v3_10009a3c, label %dec_label_pc_10009a78, label %dec_label_pc_10009a44

dec_label_pc_10009a44:                            ; preds = %dec_label_pc_10009a3c
  %v3_10009a44 = icmp eq i32 %v0_10009a1c, 0
  store i32 -2144570348, i32* @r30, align 4
  br i1 %v3_10009a44, label %dec_label_pc_10009a80, label %dec_label_pc_10009a64

dec_label_pc_10009a58:                            ; preds = %dec_label_pc_10009a1c
  store i32 -2144570347, i32* @r30, align 4
  br label %dec_label_pc_10009a80

dec_label_pc_10009a64:                            ; preds = %dec_label_pc_10009a44
  %v0_10009a64 = call i32 @function_100097e8()
  store i32 -1, i32* @r28, align 4
  %v2_10009a70 = inttoptr i32 %v0_10009a64 to i32*
  store i32 22, i32* %v2_10009a70, align 4
  br label %dec_label_pc_10009b68

dec_label_pc_10009a78:                            ; preds = %dec_label_pc_10009a3c
  store i32 -2144570346, i32* @r30, align 4
  br label %dec_label_pc_10009a80

dec_label_pc_10009a80:                            ; preds = %dec_label_pc_10009a44, %dec_label_pc_10009a58, %dec_label_pc_10009a78
  %v1_10009a80 = inttoptr i32 %v0_10009a34 to i32*
  %v2_10009a80 = load i32, i32* %v1_10009a80, align 4
  store i32 19, i32* @r5, align 4
  %v1_10009a88 = add i32 %v0_10009a34, 4
  %v2_10009a88 = inttoptr i32 %v1_10009a88 to i32*
  %v3_10009a88 = load i32, i32* %v2_10009a88, align 4
  store i32 %v3_10009a88, i32* %r9.global-to-local, align 4
  %v1_10009a8c = add i32 %v0_10009a34, 17
  store i32 %v1_10009a8c, i32* @r4, align 4
  %v1_10009a90 = add i32 %v0_10009a34, 8
  %v2_10009a90 = inttoptr i32 %v1_10009a90 to i32*
  %v3_10009a90 = load i32, i32* %v2_10009a90, align 4
  %v2_10009a94 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10009a94, i32* @r3, align 4
  %v2_10009a9c = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_10009a80, i32* %stack_var_-72, align 4
  store i32 268475084, i32* @lr, align 4
  %v0_10009ac8 = call i32 @function_1000b5d0()
  %v0_10009acc = load i32, i32* %r27.global-to-local, align 4
  %v0_10009ad0 = load i32, i32* @r30, align 4
  store i32 268475104, i32* @lr, align 4
  %v3_10009adc = call i32 @function_10008efc(i32 %v0_10009acc, i32 %v0_10009ad0, i32 %v2_10009a9c)
  store i32 %v3_10009adc, i32* @r28, align 4
  %v3_10009ae0 = icmp eq i32 %v3_10009adc, 0
  br i1 %v3_10009ae0, label %dec_label_pc_10009ae8, label %dec_label_pc_10009b68

dec_label_pc_10009ae8:                            ; preds = %dec_label_pc_10009a80
  %v0_10009ae8 = load i32, i32* @r30, align 4
  %v3_10009aec = icmp eq i32 %v0_10009ae8, -2144570348
  br i1 %v3_10009aec, label %dec_label_pc_10009af4, label %dec_label_pc_10009b64

dec_label_pc_10009af4:                            ; preds = %dec_label_pc_10009ae8
  %v0_10009af4 = call i32 @function_100097e8()
  store i32 %v0_10009af4, i32* @r29, align 4
  %v0_10009b04 = load i32, i32* %r27.global-to-local, align 4
  %v1_10009b0c = inttoptr i32 %v0_10009af4 to i32*
  %v2_10009b0c = load i32, i32* %v1_10009b0c, align 4
  store i32 %v2_10009b0c, i32* @r30, align 4
  store i32 268475160, i32* @lr, align 4
  %v3_10009b14 = call i32 @function_10008efc(i32 %v0_10009b04, i32 1076655123, i32 %v2_10009a9c)
  %v3_10009b18 = icmp eq i32 %v3_10009b14, 0
  br i1 %v3_10009b18, label %dec_label_pc_10009b28, label %dec_label_pc_10009b20

dec_label_pc_10009b20:                            ; preds = %dec_label_pc_10009af4
  %v0_10009b20 = load i32, i32* @r30, align 4
  %v1_10009b20 = load i32, i32* @r29, align 4
  %v2_10009b20 = inttoptr i32 %v1_10009b20 to i32*
  store i32 %v0_10009b20, i32* %v2_10009b20, align 4
  br label %dec_label_pc_10009b68

dec_label_pc_10009b28:                            ; preds = %dec_label_pc_10009af4
  %v0_10009b28 = load i32, i32* @r31, align 4
  %v1_10009b28 = add i32 %v0_10009b28, 8
  %v2_10009b28 = inttoptr i32 %v1_10009b28 to i32*
  %v3_10009b28 = load i32, i32* %v2_10009b28, align 4
  %v1_10009b30 = call i32 @__asm_rlwinm(i32 %v3_10009b28, i32 0, i32 19, i32 20)
  %v1_10009b34 = call i32 @__asm_rlwinm(i32 %v3_10009a90, i32 0, i32 19, i32 20)
  store i32 %v1_10009b34, i32* %r9.global-to-local, align 4
  %v4_10009b38 = icmp eq i32 %v1_10009b30, %v1_10009b34
  br i1 %v4_10009b38, label %dec_label_pc_10009b40, label %dec_label_pc_10009b54

dec_label_pc_10009b40:                            ; preds = %dec_label_pc_10009b28
  %v1_10009b40 = and i32 %v3_10009b28, 768
  store i32 %v1_10009b40, i32* %r9.global-to-local, align 4
  %v3_10009b40 = icmp eq i32 %v1_10009b40, 0
  br i1 %v3_10009b40, label %dec_label_pc_10009b64, label %dec_label_pc_10009b48

dec_label_pc_10009b48:                            ; preds = %dec_label_pc_10009b40
  %v1_10009b48 = call i32 @__asm_rlwinm(i32 %v3_10009a90, i32 0, i32 22, i32 23)
  %v0_10009b4c = load i32, i32* %r9.global-to-local, align 4
  %v4_10009b4c = icmp eq i32 %v0_10009b4c, %v1_10009b48
  br i1 %v4_10009b4c, label %dec_label_pc_10009b64, label %dec_label_pc_10009b54

dec_label_pc_10009b54:                            ; preds = %dec_label_pc_10009b28, %dec_label_pc_10009b48
  store i32 -1, i32* @r28, align 4
  %v1_10009b5c = load i32, i32* @r29, align 4
  %v2_10009b5c = inttoptr i32 %v1_10009b5c to i32*
  store i32 22, i32* %v2_10009b5c, align 4
  br label %dec_label_pc_10009b68

dec_label_pc_10009b64:                            ; preds = %dec_label_pc_10009ae8, %dec_label_pc_10009b48, %dec_label_pc_10009b40
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_10009b68

dec_label_pc_10009b68:                            ; preds = %dec_label_pc_10009a80, %dec_label_pc_10009b54, %dec_label_pc_10009b20, %dec_label_pc_10009a64, %dec_label_pc_10009b64
  %v0_10009b6c = load i32, i32* @r28, align 4
  ret i32 %v0_10009b6c

; uselistorder directives
  uselistorder i32 %v0_10009a34, { 1, 0, 3, 2, 4 }
  uselistorder i32 768, { 2, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @function_10008efc, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10009b68, { 4, 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_10009b64, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10009b54, { 1, 0 }
  uselistorder label %dec_label_pc_10009a80, { 2, 1, 0 }
}

define i32 @function_10009b80(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009b80:
  %stack_var_-24 = alloca i32, align 4
  %v2_10009b88 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_10009b88, i32* @r4, align 4
  store i32 268475284, i32* @lr, align 4
  %v1_10009b90 = bitcast i32* %stack_var_-24 to i8*
  %v2_10009b90 = call i32 @function_1000b6a0(i8* %v1_10009b90)
  %v3_10009b94 = icmp eq i32 %v2_10009b90, 0
  br i1 %v3_10009b94, label %dec_label_pc_10009ba4, label %dec_label_pc_10009ba0

dec_label_pc_10009ba0:                            ; preds = %dec_label_pc_10009b80
  %v3_10009ba0 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_10009ba4

dec_label_pc_10009ba4:                            ; preds = %dec_label_pc_10009b80, %dec_label_pc_10009ba0
  %v0_10009bb0 = phi i32 [ -1, %dec_label_pc_10009b80 ], [ %v3_10009ba0, %dec_label_pc_10009ba0 ]
  ret i32 %v0_10009bb0

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10009ba4, { 1, 0 }
}

define i32 @function_10009bb4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009bb4:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10009bc8 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268475352, i32* @lr, align 4
  %v2_10009bd4 = call i32 @function_1000aed4(i32 5, i32 %v2_10009bc8)
  ret i32 %v2_10009bd4

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10009be8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009be8:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10009bfc = ptrtoint i32* %stack_var_-24 to i32
  store i32 268475404, i32* @lr, align 4
  %v2_10009c08 = call i32 @function_1000aed4(i32 2, i32 %v2_10009bfc)
  ret i32 %v2_10009c08

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10009c1c() local_unnamed_addr {
dec_label_pc_10009c1c:
  %stack_var_-24 = alloca i32, align 4
  %v0_10009c24 = load i32, i32* @r3, align 4
  store i32 %v0_10009c24, i32* %stack_var_-24, align 4
  %v2_10009c30 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268475456, i32* @lr, align 4
  %v2_10009c3c = call i32 @function_1000aed4(i32 3, i32 %v2_10009c30)
  ret i32 %v2_10009c3c

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10009c50(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009c50:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10009c64 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268475508, i32* @lr, align 4
  %v2_10009c70 = call i32 @function_1000aed4(i32 6, i32 %v2_10009c64)
  ret i32 %v2_10009c70

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10009c84(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10009c84:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_10009c98 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268475568, i32* @lr, align 4
  %v2_10009cac = call i32 @function_1000aed4(i32 15, i32 %v2_10009c98)
  ret i32 %v2_10009cac

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32 15, { 0, 38, 25, 26, 6, 27, 7, 28, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1, 18, 19, 20, 21, 22, 23, 29, 24, 30, 31, 2, 32, 33, 3, 34, 35, 4, 36, 37, 5 }
}

define i32 @function_10009cc0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009cc0:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10009cd4 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268475616, i32* @lr, align 4
  %v2_10009cdc = call i32 @function_1000aed4(i32 4, i32 %v2_10009cd4)
  ret i32 %v2_10009cdc

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10009cf0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10009cf0:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10009d04 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268475672, i32* @lr, align 4
  %v2_10009d14 = call i32 @function_1000aed4(i32 10, i32 %v2_10009d04)
  ret i32 %v2_10009d14

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10009d28(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_10009d28:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_10009d3c = ptrtoint i32* %stack_var_-40 to i32
  store i32 268475736, i32* @lr, align 4
  %v2_10009d54 = call i32 @function_1000aed4(i32 12, i32 %v2_10009d3c)
  ret i32 %v2_10009d54

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_10009d68(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10009d68:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10009d7c = ptrtoint i32* %stack_var_-24 to i32
  store i32 268475792, i32* @lr, align 4
  %v2_10009d8c = call i32 @function_1000aed4(i32 9, i32 %v2_10009d7c)
  ret i32 %v2_10009d8c

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 9, { 0, 6, 7, 8, 17, 18, 19, 1, 20, 2, 21, 9, 22, 3, 10, 11, 12, 13, 14, 23, 15, 24, 4, 37, 25, 26, 27, 5, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 16 }
}

define i32 @function_10009da0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_10009da0:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_10009db4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268475856, i32* @lr, align 4
  %v2_10009dcc = call i32 @function_1000aed4(i32 11, i32 %v2_10009db4)
  ret i32 %v2_10009dcc

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_10009de0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10009de0:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_10009df4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268475916, i32* @lr, align 4
  %v2_10009e08 = call i32 @function_1000aed4(i32 14, i32 %v2_10009df4)
  ret i32 %v2_10009e08

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_10009e1c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009e1c:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10009e30 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268475968, i32* @lr, align 4
  %v2_10009e3c = call i32 @function_1000aed4(i32 1, i32 %v2_10009e30)
  ret i32 %v2_10009e3c

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_1000aed4, { 2, 1, 0, 5, 6, 11, 7, 10, 9, 4, 3, 8 }
}

define i32 @function_10009e50(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009e50:
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %arg1.off = add i32 %arg1, -1
  %tmp4 = icmp ult i32 %arg1.off, 64
  br i1 %tmp4, label %dec_label_pc_10009e80, label %dec_label_pc_10009e6c

dec_label_pc_10009e6c:                            ; preds = %dec_label_pc_10009e50
  %v0_10009e6c = call i32 @function_100097e8()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_10009e78 = inttoptr i32 %v0_10009e6c to i32*
  store i32 22, i32* %v2_10009e78, align 4
  %v0_10009e8c.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009e88

dec_label_pc_10009e80:                            ; preds = %dec_label_pc_10009e50
  %v0_10009e80 = call i32 @function_10009fd0()
  store i32 %v0_10009e80, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009e88

dec_label_pc_10009e88:                            ; preds = %dec_label_pc_10009e6c, %dec_label_pc_10009e80
  %v0_10009e8c = phi i32 [ %v0_10009e8c.pre, %dec_label_pc_10009e6c ], [ %v0_10009e80, %dec_label_pc_10009e80 ]
  ret i32 %v0_10009e8c

; uselistorder directives
  uselistorder label %dec_label_pc_10009e88, { 1, 0 }
}

define i32 @function_10009e9c(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009e9c:
  store i32 268476084, i32* @lr, align 4
  %v3_10009eb0 = call i32 @function_100098d0(i32 0, i32 128, i32 128)
  ret i32 0
}

define i32 @function_10009ec8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009ec8:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v3_10009ec8 = icmp eq i32 %arg2, -1
  store i32 %arg1, i32* %r31.global-to-local, align 4
  br i1 %v3_10009ec8, label %dec_label_pc_10009ef4, label %dec_label_pc_10009ee4

dec_label_pc_10009ee4:                            ; preds = %dec_label_pc_10009ec8
  %tmp20 = icmp slt i32 %arg1, 1
  br i1 %tmp20, label %dec_label_pc_10009ef4, label %dec_label_pc_10009eec

dec_label_pc_10009eec:                            ; preds = %dec_label_pc_10009ee4
  %tmp21 = icmp slt i32 %arg1, 65
  br i1 %tmp21, label %dec_label_pc_10009f24.lr.ph, label %dec_label_pc_10009ef4

dec_label_pc_10009ef4:                            ; preds = %dec_label_pc_10009eec, %dec_label_pc_10009ee4, %dec_label_pc_10009ec8
  %v0_10009ef4 = call i32 @function_100097e8()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_10009f00 = inttoptr i32 %v0_10009ef4 to i32*
  store i32 22, i32* %v2_10009f00, align 4
  %v0_10009f94.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009f90

dec_label_pc_10009f24.lr.ph:                      ; preds = %dec_label_pc_10009eec
  %v2_10009f14 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_10009f14, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-296, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_10009f2422 = add i32 %v2_10009f14, 128
  %v3_10009f2423 = inttoptr i32 %v2_10009f2422 to i32*
  store i32 0, i32* %v3_10009f2423, align 4
  %v0_10009f2824 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009f2825 = add i32 %v0_10009f2824, -1
  store i32 %v1_10009f2825, i32* %r11.global-to-local, align 4
  %v1_10009f2c26 = mul i32 %v1_10009f2825, 4
  %v1_10009f3027 = load i32, i32* %r8.global-to-local, align 4
  %v2_10009f3028 = add i32 %v1_10009f3027, %v1_10009f2c26
  store i32 %v2_10009f3028, i32* %r9.global-to-local, align 4
  %v0_10009f3429 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009f3430 = add i32 %v0_10009f3429, -1
  store i32 %v1_10009f3430, i32* %ctr.global-to-local, align 4
  %v2_10009f3431 = icmp eq i32 %v1_10009f3430, 0
  br i1 %v2_10009f3431, label %dec_label_pc_10009f38, label %dec_label_pc_10009f24.dec_label_pc_10009f24_crit_edge

dec_label_pc_10009f24.dec_label_pc_10009f24_crit_edge: ; preds = %dec_label_pc_10009f24.lr.ph, %dec_label_pc_10009f24.dec_label_pc_10009f24_crit_edge
  %v2_10009f3032 = phi i32 [ %v2_10009f30, %dec_label_pc_10009f24.dec_label_pc_10009f24_crit_edge ], [ %v2_10009f3028, %dec_label_pc_10009f24.lr.ph ]
  %v0_10009f24.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_10009f24 = add i32 %v2_10009f3032, 4
  %v3_10009f24 = inttoptr i32 %v2_10009f24 to i32*
  store i32 %v0_10009f24.pre, i32* %v3_10009f24, align 4
  %v0_10009f28 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009f28 = add i32 %v0_10009f28, -1
  store i32 %v1_10009f28, i32* %r11.global-to-local, align 4
  %v1_10009f2c = mul i32 %v1_10009f28, 4
  %v1_10009f30 = load i32, i32* %r8.global-to-local, align 4
  %v2_10009f30 = add i32 %v1_10009f30, %v1_10009f2c
  store i32 %v2_10009f30, i32* %r9.global-to-local, align 4
  %v0_10009f34 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009f34 = add i32 %v0_10009f34, -1
  store i32 %v1_10009f34, i32* %ctr.global-to-local, align 4
  %v2_10009f34 = icmp eq i32 %v1_10009f34, 0
  br i1 %v2_10009f34, label %dec_label_pc_10009f38, label %dec_label_pc_10009f24.dec_label_pc_10009f24_crit_edge

dec_label_pc_10009f38:                            ; preds = %dec_label_pc_10009f24.dec_label_pc_10009f24_crit_edge, %dec_label_pc_10009f24.lr.ph
  %v0_10009f3c.pre = load i32, i32* %r31.global-to-local, align 4
  %v2_10009f38 = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v2_10009f38, i32* @r3, align 4
  store i32 %v0_10009f3c.pre, i32* @r4, align 4
  %v0_10009f40 = call i32 @function_10009fd0()
  %v1_10009f44 = icmp slt i32 %v0_10009f40, 0
  br i1 %v1_10009f44, label %dec_label_pc_10009f8c, label %dec_label_pc_10009f4c

dec_label_pc_10009f4c:                            ; preds = %dec_label_pc_10009f38
  %v0_10009f50 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009f58 = call i32 @function_10009fa8(i32 ptrtoint (i32* @global_var_1001c468.337 to i32), i32 %v0_10009f50)
  %v2_10009f64 = ptrtoint i32* %stack_var_-156 to i32
  store i32 268476284, i32* @lr, align 4
  %v4_10009f78 = call i32 @function_1000b760(i32 %v0_10009f50, i32* nonnull %stack_var_-296, i32 %v2_10009f64)
  %v1_10009f7c = icmp slt i32 %v4_10009f78, 0
  br i1 %v1_10009f7c, label %dec_label_pc_10009f8c, label %dec_label_pc_10009f84

dec_label_pc_10009f84:                            ; preds = %dec_label_pc_10009f4c
  %v3_10009f84 = load i32, i32* %stack_var_-156, align 4
  store i32 %v3_10009f84, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009f90

dec_label_pc_10009f8c:                            ; preds = %dec_label_pc_10009f4c, %dec_label_pc_10009f38
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009f90

dec_label_pc_10009f90:                            ; preds = %dec_label_pc_10009f84, %dec_label_pc_10009ef4, %dec_label_pc_10009f8c
  %v0_10009f94 = phi i32 [ %v3_10009f84, %dec_label_pc_10009f84 ], [ %v0_10009f94.pre, %dec_label_pc_10009ef4 ], [ -1, %dec_label_pc_10009f8c ]
  ret i32 %v0_10009f94

; uselistorder directives
  uselistorder i32 %v1_10009f34, { 1, 0 }
  uselistorder i32 %v2_10009f30, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 5, 3, 4 }
  uselistorder i32* %r31.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10009f90, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009f24.dec_label_pc_10009f24_crit_edge, { 1, 0 }
}

define i32 @function_10009fa8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009fa8:
  %v1_10009fa8 = add i32 %arg2, -1
  %v1_10009fac = call i32 @__asm_rlwinm(i32 %v1_10009fa8, i32 29, i32 3, i32 29)
  %v1_10009fb0 = urem i32 %v1_10009fa8, 32
  %v2_10009fb4 = add i32 %v1_10009fac, %arg1
  %v3_10009fb4 = inttoptr i32 %v2_10009fb4 to i32*
  %v4_10009fb4 = load i32, i32* %v3_10009fb4, align 4
  %v3_10009fbc = shl i32 1, %v1_10009fb0
  %v2_10009fc0 = and i32 %v4_10009fb4, %v3_10009fbc
  %v2_10009fc4 = icmp ne i32 %v2_10009fc0, 0
  %v5_10009fc8 = zext i1 %v2_10009fc4 to i32
  ret i32 %v5_10009fc8
}

define i32 @function_10009fd0() local_unnamed_addr {
dec_label_pc_10009fd0:
  %r0.global-to-local = alloca i32, align 4
  %v0_10009fd0 = load i32, i32* @r4, align 4
  %v1_10009fd0 = add i32 %v0_10009fd0, -1
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10009fd8 = call i32 @__asm_rlwinm(i32 %v1_10009fd0, i32 29, i32 3, i32 29)
  %v1_10009fdc = urem i32 %v1_10009fd0, 32
  %v1_10009fe0 = load i32, i32* @r3, align 4
  %v2_10009fe0 = add i32 %v1_10009fe0, %v1_10009fd8
  %v3_10009fe0 = inttoptr i32 %v2_10009fe0 to i32*
  %v4_10009fe0 = load i32, i32* %v3_10009fe0, align 4
  %v0_10009fe4 = load i32, i32* %r0.global-to-local, align 4
  %v3_10009fe4 = shl i32 %v0_10009fe4, %v1_10009fdc
  store i32 %v3_10009fe4, i32* %r0.global-to-local, align 4
  %v2_10009fe8 = or i32 %v3_10009fe4, %v4_10009fe0
  store i32 %v2_10009fe8, i32* %v3_10009fe0, align 4
  ret i32 0
}

define i32 @function_10009ff8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009ff8:
  %v1_10009ff8 = add i32 %arg2, -1
  %v1_1000a000 = call i32 @__asm_rlwinm(i32 %v1_10009ff8, i32 29, i32 3, i32 29)
  %v1_1000a004 = urem i32 %v1_10009ff8, 32
  %v2_1000a008 = add i32 %v1_1000a000, %arg1
  %v3_1000a008 = inttoptr i32 %v2_1000a008 to i32*
  %v4_1000a008 = load i32, i32* %v3_1000a008, align 4
  %v3_1000a00c = shl i32 -2, %v1_1000a004
  %v4_1000a00c = sub nsw i32 32, %v1_1000a004
  %v5_1000a00c = lshr i32 -2, %v4_1000a00c
  %v6_1000a00c = or i32 %v5_1000a00c, %v3_1000a00c
  %v2_1000a010 = and i32 %v6_1000a00c, %v4_1000a008
  store i32 %v2_1000a010, i32* %v3_1000a008, align 4
  ret i32 0
}

define i32 @function_1000a020() local_unnamed_addr {
dec_label_pc_1000a020:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_1000a020 = load i32, i32* @r3, align 4
  %v3_1000a020 = icmp eq i32 %v0_1000a020, 0
  br i1 %v3_1000a020, label %dec_label_pc_1000a03c.thread, label %dec_label_pc_1000a03c

dec_label_pc_1000a03c.thread:                     ; preds = %dec_label_pc_1000a020
  br label %dec_label_pc_1000a048

dec_label_pc_1000a03c:                            ; preds = %dec_label_pc_1000a020
  %v3_1000a040 = icmp ugt i32 %v0_1000a020, -8
  br i1 %v3_1000a040, label %dec_label_pc_1000a150, label %dec_label_pc_1000a048

dec_label_pc_1000a048:                            ; preds = %dec_label_pc_1000a03c.thread, %dec_label_pc_1000a03c
  %v0_1000a04c16 = phi i32 [ 1, %dec_label_pc_1000a03c.thread ], [ %v0_1000a020, %dec_label_pc_1000a03c ]
  %v1_1000a04c = add i32 %v0_1000a04c16, 4
  store i32 ptrtoint (i32* @global_var_1001c318.338 to i32), i32* @r29, align 4
  store i32 %v1_1000a04c, i32* %stack_var_-40, align 4
  %v0_1000a05c = call i32 @function_1000ab7c()
  %v2_1000a064 = ptrtoint i32* %stack_var_-40 to i32
  %v3_1000a06c = call i32 @function_1000a418(i32* inttoptr (i32 268550720 to i32*), i32 %v2_1000a064)
  store i32 %v3_1000a06c, i32* %r31.global-to-local, align 4
  %v0_1000a078 = call i32 @function_1000ab7c()
  %v3_1000a07c = icmp eq i32 %v3_1000a06c, 0
  br i1 %v3_1000a07c, label %dec_label_pc_1000a084, label %dec_label_pc_1000a134.thread

dec_label_pc_1000a134.thread:                     ; preds = %dec_label_pc_1000a048
  br label %dec_label_pc_1000a148

dec_label_pc_1000a084:                            ; preds = %dec_label_pc_1000a048
  %v3_1000a088 = load i32, i32* @global_var_1001c29c.341, align 4
  store i32 %v3_1000a088, i32* %r31.global-to-local, align 4
  %v3_1000a08c = load i32, i32* %stack_var_-40, align 4
  %v2_1000a090 = icmp ult i32 %v3_1000a08c, %v3_1000a088
  br i1 %v2_1000a090, label %dec_label_pc_1000a0a8, label %dec_label_pc_1000a098

dec_label_pc_1000a098:                            ; preds = %dec_label_pc_1000a084
  %v1_1000a09c = sub i32 0, %v3_1000a088
  %v2_1000a098 = add i32 %v3_1000a088, -1
  %v1_1000a0a0 = add i32 %v2_1000a098, %v3_1000a08c
  %v2_1000a0a4 = and i32 %v1_1000a0a0, %v1_1000a09c
  store i32 %v2_1000a0a4, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000a0a8

dec_label_pc_1000a0a8:                            ; preds = %dec_label_pc_1000a084, %dec_label_pc_1000a098
  %v0_1000a0b4 = call i32 @function_1000ab7c()
  %v0_1000a0b8 = load i32, i32* %r31.global-to-local, align 4
  store i32 268476608, i32* @lr, align 4
  %v1_1000a0bc = call i32 @function_1000b39c(i32 %v0_1000a0b8)
  %v3_1000a0c0 = icmp eq i32 %v1_1000a0bc, -1
  br i1 %v3_1000a0c0, label %dec_label_pc_1000a0e0, label %dec_label_pc_1000a0c8

dec_label_pc_1000a0c8:                            ; preds = %dec_label_pc_1000a0a8
  %v1_1000a0c8 = add i32 %v1_1000a0bc, 3
  %v1_1000a0cc = call i32 @__asm_rlwinm(i32 %v1_1000a0c8, i32 0, i32 0, i32 29)
  store i32 %v1_1000a0cc, i32* @r30, align 4
  %v4_1000a0d0 = icmp eq i32 %v1_1000a0cc, %v1_1000a0bc
  br i1 %v4_1000a0d0, label %dec_label_pc_1000a0e0, label %dec_label_pc_1000a0d8

dec_label_pc_1000a0d8:                            ; preds = %dec_label_pc_1000a0c8
  %v2_1000a0d8 = sub i32 %v1_1000a0cc, %v1_1000a0bc
  store i32 268476640, i32* @lr, align 4
  %v1_1000a0dc = call i32 @function_1000b39c(i32 %v2_1000a0d8)
  br label %dec_label_pc_1000a0e0

dec_label_pc_1000a0e0:                            ; preds = %dec_label_pc_1000a0c8, %dec_label_pc_1000a0a8, %dec_label_pc_1000a0d8
  %v0_1000a0e8 = call i32 @function_1000ab7c()
  %v0_1000a0ec = load i32, i32* @r30, align 4
  %v3_1000a0ec = icmp eq i32 %v0_1000a0ec, -1
  br i1 %v3_1000a0ec, label %dec_label_pc_1000a150, label %dec_label_pc_1000a134

dec_label_pc_1000a134:                            ; preds = %dec_label_pc_1000a0e0
  store i32 ptrtoint (i32* @global_var_1001c318.338 to i32), i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_1001c240 to i32), i32* @r29, align 4
  %v0_1000a108 = call i32 @function_1000ab7c()
  %v0_1000a10c = load i32, i32* @r31, align 4
  %v0_1000a110 = load i32, i32* @r30, align 4
  %v0_1000a114 = load i32, i32* @r29, align 4
  store i32 268476700, i32* @lr, align 4
  %v3_1000a118 = inttoptr i32 %v0_1000a114 to i32*
  %v4_1000a118 = call i32 @function_1000a59c(i32* %v3_1000a118, i32 %v0_1000a110, i32 %v0_1000a10c)
  %v0_1000a11c = load i32, i32* @r29, align 4
  %v2_1000a124 = inttoptr i32 %v0_1000a11c to i32*
  %v3_1000a124 = call i32 @function_1000a418(i32* %v2_1000a124, i32 %v2_1000a064)
  store i32 %v3_1000a124, i32* %r31.global-to-local, align 4
  %v0_1000a130 = call i32 @function_1000ab7c()
  %v3_1000a134 = icmp eq i32 %v3_1000a124, 0
  br i1 %v3_1000a134, label %dec_label_pc_1000a148.thread, label %dec_label_pc_1000a148

dec_label_pc_1000a148.thread:                     ; preds = %dec_label_pc_1000a134
  br label %dec_label_pc_1000a150

dec_label_pc_1000a148:                            ; preds = %dec_label_pc_1000a134, %dec_label_pc_1000a134.thread
  %v0_1000a148.pr6 = phi i32 [ %v3_1000a06c, %dec_label_pc_1000a134.thread ], [ %v3_1000a124, %dec_label_pc_1000a134 ]
  %v3_1000a13c = load i32, i32* %stack_var_-40, align 4
  %v2_1000a140 = inttoptr i32 %v0_1000a148.pr6 to i32*
  store i32 %v3_1000a13c, i32* %v2_1000a140, align 4
  %v0_1000a144 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000a144 = add i32 %v0_1000a144, 4
  store i32 %v1_1000a144, i32* @r31, align 4
  %v3_1000a148 = icmp eq i32 %v1_1000a144, 0
  br i1 %v3_1000a148, label %dec_label_pc_1000a150, label %dec_label_pc_1000a160

dec_label_pc_1000a150:                            ; preds = %dec_label_pc_1000a148.thread, %dec_label_pc_1000a148, %dec_label_pc_1000a0e0, %dec_label_pc_1000a03c
  %v0_1000a150 = call i32 @function_100097e8()
  %v2_1000a158 = inttoptr i32 %v0_1000a150 to i32*
  store i32 12, i32* %v2_1000a158, align 4
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_1000a160

dec_label_pc_1000a160:                            ; preds = %dec_label_pc_1000a148, %dec_label_pc_1000a150
  %v0_1000a164 = phi i32 [ %v1_1000a144, %dec_label_pc_1000a148 ], [ 0, %dec_label_pc_1000a150 ]
  ret i32 %v0_1000a164

; uselistorder directives
  uselistorder i32 %v1_1000a144, { 1, 0, 2 }
  uselistorder i32 %v1_1000a0cc, { 1, 0, 2 }
  uselistorder i32 %v1_1000a0bc, { 1, 0, 2, 3 }
  uselistorder i32 %v3_1000a088, { 1, 0, 2, 3 }
  uselistorder i32 %v3_1000a06c, { 1, 0, 2 }
  uselistorder i32 %v0_1000a020, { 1, 0, 2 }
  uselistorder i32* %stack_var_-40, { 0, 1, 3, 2 }
  uselistorder i32* %r31.global-to-local, { 4, 0, 2, 1, 3, 5 }
  uselistorder label %dec_label_pc_1000a160, { 1, 0 }
  uselistorder label %dec_label_pc_1000a150, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1000a0e0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a0a8, { 1, 0 }
  uselistorder label %dec_label_pc_1000a048, { 1, 0 }
}

define i32 @function_1000a178(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a178:
  %v3_1000a178 = icmp eq i32 %arg1, 0
  %v2_1000a188 = mul i32 %arg2, %arg1
  store i32 %v2_1000a188, i32* @r31, align 4
  br i1 %v3_1000a178, label %dec_label_pc_1000a1b4, label %dec_label_pc_1000a194

dec_label_pc_1000a194:                            ; preds = %dec_label_pc_1000a178
  %v2_1000a194 = udiv i32 %v2_1000a188, %arg1
  store i32 0, i32* @r30, align 4
  %v4_1000a19c = icmp eq i32 %v2_1000a194, %arg2
  br i1 %v4_1000a19c, label %dec_label_pc_1000a1b4, label %dec_label_pc_1000a1a4

dec_label_pc_1000a1a4:                            ; preds = %dec_label_pc_1000a194
  %v0_1000a1a4 = call i32 @function_100097e8()
  %v2_1000a1ac = inttoptr i32 %v0_1000a1a4 to i32*
  store i32 12, i32* %v2_1000a1ac, align 4
  br label %dec_label_pc_1000a1d0

dec_label_pc_1000a1b4:                            ; preds = %dec_label_pc_1000a194, %dec_label_pc_1000a178
  store i32 %v2_1000a188, i32* @r3, align 4
  store i32 268476860, i32* @lr, align 4
  %v0_1000a1b8 = call i32 @function_1000a020()
  %v0_1000a1bc = load i32, i32* @r31, align 4
  store i32 %v0_1000a1b8, i32* @r30, align 4
  %v3_1000a1c0 = icmp eq i32 %v0_1000a1b8, 0
  br i1 %v3_1000a1c0, label %dec_label_pc_1000a1d0, label %dec_label_pc_1000a1cc

dec_label_pc_1000a1cc:                            ; preds = %dec_label_pc_1000a1b4
  store i32 268476880, i32* @lr, align 4
  %v3_1000a1cc = call i32 @function_100098d0(i32 0, i32 %v0_1000a1bc, i32 %v0_1000a1bc)
  br label %dec_label_pc_1000a1d0

dec_label_pc_1000a1d0:                            ; preds = %dec_label_pc_1000a1b4, %dec_label_pc_1000a1a4, %dec_label_pc_1000a1cc
  %v0_1000a1d4 = load i32, i32* @r30, align 4
  ret i32 %v0_1000a1d4

; uselistorder directives
  uselistorder i32 %v0_1000a1bc, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000a1d0, { 2, 0, 1 }
}

define i32 @function_1000a1e8() local_unnamed_addr {
dec_label_pc_1000a1e8:
  %v0_1000a1e8 = load i32, i32* @r3, align 4
  %v3_1000a1e8 = icmp eq i32 %v0_1000a1e8, 0
  br i1 %v3_1000a1e8, label %dec_label_pc_1000a2d4, label %dec_label_pc_1000a200

dec_label_pc_1000a200:                            ; preds = %dec_label_pc_1000a1e8
  %v1_1000a204 = add i32 %v0_1000a1e8, -4
  %v2_1000a204 = inttoptr i32 %v1_1000a204 to i32*
  %v3_1000a204 = load i32, i32* %v2_1000a204, align 4
  store i32 %v3_1000a204, i32* @r28, align 4
  %v0_1000a218 = call i32 @function_1000ab7c()
  %v0_1000a220 = load i32, i32* @r28, align 4
  store i32 268476972, i32* @lr, align 4
  %v4_1000a228 = call i32 @function_1000a59c(i32* nonnull @global_var_1001c240, i32 %v1_1000a204, i32 %v0_1000a220)
  %v3_1000a230 = load i32, i32* @global_var_1001c29c.341, align 4
  store i32 %v4_1000a228, i32* @r29, align 4
  %v1_1000a238 = inttoptr i32 %v4_1000a228 to i32*
  %v2_1000a238 = load i32, i32* %v1_1000a238, align 4
  store i32 %v2_1000a238, i32* @r27, align 4
  %v1_1000a23c = mul i32 %v3_1000a230, 8
  %v2_1000a240 = icmp ult i32 %v2_1000a238, %v1_1000a23c
  br i1 %v2_1000a240, label %dec_label_pc_1000a274, label %dec_label_pc_1000a248

dec_label_pc_1000a248:                            ; preds = %dec_label_pc_1000a200
  store i32 ptrtoint (i32* @global_var_1001c4e8.342 to i32), i32* @r28, align 4
  %v0_1000a258 = call i32 @function_1000ab7c()
  store i32 268477028, i32* @lr, align 4
  %v1_1000a260 = call i32 @function_1000b39c(i32 0)
  %v0_1000a264 = load i32, i32* @r31, align 4
  %v4_1000a264 = icmp eq i32 %v0_1000a264, %v1_1000a260
  br i1 %v4_1000a264, label %dec_label_pc_1000a27c, label %dec_label_pc_1000a26c

dec_label_pc_1000a26c:                            ; preds = %dec_label_pc_1000a248
  %v0_1000a270 = call i32 @function_1000ab7c()
  br label %dec_label_pc_1000a274

dec_label_pc_1000a274:                            ; preds = %dec_label_pc_1000a200, %dec_label_pc_1000a26c
  br label %dec_label_pc_1000a2d0

dec_label_pc_1000a27c:                            ; preds = %dec_label_pc_1000a248
  %v0_1000a27c = load i32, i32* @r29, align 4
  %v1_1000a27c = add i32 %v0_1000a27c, 4
  %v2_1000a27c = inttoptr i32 %v1_1000a27c to i32*
  %v3_1000a27c = load i32, i32* %v2_1000a27c, align 4
  %v3_1000a280 = icmp eq i32 %v3_1000a27c, 0
  br i1 %v3_1000a280, label %dec_label_pc_1000a290, label %dec_label_pc_1000a288

dec_label_pc_1000a288:                            ; preds = %dec_label_pc_1000a27c
  %v1_1000a288 = add i32 %v0_1000a27c, 8
  %v2_1000a288 = inttoptr i32 %v1_1000a288 to i32*
  %v3_1000a288 = load i32, i32* %v2_1000a288, align 4
  %v2_1000a28c = add i32 %v3_1000a27c, 8
  %v3_1000a28c = inttoptr i32 %v2_1000a28c to i32*
  store i32 %v3_1000a288, i32* %v3_1000a28c, align 4
  %v0_1000a290.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000a290

dec_label_pc_1000a290:                            ; preds = %dec_label_pc_1000a27c, %dec_label_pc_1000a288
  %v0_1000a290 = phi i32 [ %v0_1000a27c, %dec_label_pc_1000a27c ], [ %v0_1000a290.pre, %dec_label_pc_1000a288 ]
  %v1_1000a290 = add i32 %v0_1000a290, 8
  %v2_1000a290 = inttoptr i32 %v1_1000a290 to i32*
  %v3_1000a290 = load i32, i32* %v2_1000a290, align 4
  %v1_1000a294 = add i32 %v0_1000a290, 4
  %v2_1000a294 = inttoptr i32 %v1_1000a294 to i32*
  %v3_1000a294 = load i32, i32* %v2_1000a294, align 4
  %v3_1000a298 = icmp eq i32 %v3_1000a290, 0
  br i1 %v3_1000a298, label %dec_label_pc_1000a2a8, label %dec_label_pc_1000a2a0

dec_label_pc_1000a2a0:                            ; preds = %dec_label_pc_1000a290
  %v2_1000a2a0 = add i32 %v3_1000a290, 4
  %v3_1000a2a0 = inttoptr i32 %v2_1000a2a0 to i32*
  store i32 %v3_1000a294, i32* %v3_1000a2a0, align 4
  br label %dec_label_pc_1000a2ac

dec_label_pc_1000a2a8:                            ; preds = %dec_label_pc_1000a290
  store i32 %v3_1000a294, i32* @global_var_1001c240, align 4
  br label %dec_label_pc_1000a2ac

dec_label_pc_1000a2ac:                            ; preds = %dec_label_pc_1000a2a0, %dec_label_pc_1000a2a8
  %v0_1000a2b4 = call i32 @function_1000ab7c()
  %v0_1000a2b8 = load i32, i32* @r27, align 4
  %v1_1000a2b8 = load i32, i32* @r29, align 4
  %v0_1000a2c0 = load i32, i32* @r31, align 4
  %v2_1000a2b8 = sub i32 12, %v0_1000a2b8
  %v1_1000a2bc = add i32 %v2_1000a2b8, %v1_1000a2b8
  %v2_1000a2c0 = sub i32 %v1_1000a2bc, %v0_1000a2c0
  store i32 268477128, i32* @lr, align 4
  %v1_1000a2c4 = call i32 @function_1000b39c(i32 %v2_1000a2c0)
  br label %dec_label_pc_1000a2d0

dec_label_pc_1000a2d0:                            ; preds = %dec_label_pc_1000a274, %dec_label_pc_1000a2ac
  %v0_1000a2d0 = call i32 @function_1000ab7c()
  br label %dec_label_pc_1000a2d4

dec_label_pc_1000a2d4:                            ; preds = %dec_label_pc_1000a1e8, %dec_label_pc_1000a2d0
  %.0 = phi i32 [ undef, %dec_label_pc_1000a1e8 ], [ %v0_1000a2d0, %dec_label_pc_1000a2d0 ]
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v0_1000a290, { 1, 0 }
  uselistorder i32 (i32)* @function_1000b39c, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000a2d4, { 1, 0 }
  uselistorder label %dec_label_pc_1000a2d0, { 1, 0 }
  uselistorder label %dec_label_pc_1000a2ac, { 1, 0 }
  uselistorder label %dec_label_pc_1000a290, { 1, 0 }
  uselistorder label %dec_label_pc_1000a274, { 1, 0 }
}

define i32 @function_1000a2e8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a2e8:
  %r27.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v3_1000a2e8 = icmp eq i32 %arg2, 0
  store i32 %arg1, i32* @r28, align 4
  br i1 %v3_1000a2e8, label %dec_label_pc_1000a304, label %dec_label_pc_1000a310

dec_label_pc_1000a304:                            ; preds = %dec_label_pc_1000a2e8
  store i32 ptrtoint ([3 x i8]* @global_var_1000a308.346 to i32), i32* @lr, align 4
  %v0_1000a304 = call i32 @function_1000a1e8()
  br label %dec_label_pc_1000a31c

dec_label_pc_1000a310:                            ; preds = %dec_label_pc_1000a2e8
  %v3_1000a310 = icmp eq i32 %arg1, 0
  br i1 %v3_1000a310, label %dec_label_pc_1000a31c, label %dec_label_pc_1000a328

dec_label_pc_1000a31c:                            ; preds = %dec_label_pc_1000a310, %dec_label_pc_1000a304
  %storemerge = phi i32 [ 0, %dec_label_pc_1000a304 ], [ %arg2, %dec_label_pc_1000a310 ]
  store i32 %storemerge, i32* @r3, align 4
  store i32 268477216, i32* @lr, align 4
  %v0_1000a31c = call i32 @function_1000a020()
  store i32 %v0_1000a31c, i32* @r28, align 4
  br label %dec_label_pc_1000a400

dec_label_pc_1000a328:                            ; preds = %dec_label_pc_1000a310
  %v1_1000a328 = add i32 %arg2, 7
  %v1_1000a32c = add i32 %arg1, -4
  store i32 %v1_1000a32c, i32* %r27.global-to-local, align 4
  %v1_1000a330 = call i32 @__asm_rlwinm(i32 %v1_1000a328, i32 0, i32 0, i32 29)
  store i32 %v1_1000a330, i32* @r31, align 4
  %v2_1000a334 = inttoptr i32 %v1_1000a32c to i32*
  %v3_1000a334 = load i32, i32* %v2_1000a334, align 4
  store i32 %v3_1000a334, i32* @r30, align 4
  %v2_1000a338 = icmp ugt i32 %v1_1000a330, 11
  br i1 %v2_1000a338, label %dec_label_pc_1000a344, label %dec_label_pc_1000a340

dec_label_pc_1000a340:                            ; preds = %dec_label_pc_1000a328
  store i32 12, i32* @r31, align 4
  br label %dec_label_pc_1000a344

dec_label_pc_1000a344:                            ; preds = %dec_label_pc_1000a328, %dec_label_pc_1000a340
  %v0_1000a3c4 = phi i32 [ %v1_1000a330, %dec_label_pc_1000a328 ], [ 12, %dec_label_pc_1000a340 ]
  %v3_1000a344 = icmp ugt i32 %v0_1000a3c4, %v3_1000a334
  br i1 %v3_1000a344, label %dec_label_pc_1000a34c, label %dec_label_pc_1000a3c4

dec_label_pc_1000a34c:                            ; preds = %dec_label_pc_1000a344
  store i32 ptrtoint (i32* @global_var_1001c318.338 to i32), i32* @r29, align 4
  %v0_1000a358 = call i32 @function_1000ab7c()
  %v0_1000a360 = load i32, i32* %r27.global-to-local, align 4
  %v1_1000a360 = load i32, i32* @r30, align 4
  %v2_1000a360 = add i32 %v1_1000a360, %v0_1000a360
  %v1_1000a364 = load i32, i32* @r31, align 4
  %v2_1000a364 = sub i32 %v1_1000a364, %v1_1000a360
  %v4_1000a36c = call i32 @function_1000a4b8(i32* nonnull @global_var_1001c240, i32 %v2_1000a360, i32 %v2_1000a364)
  store i32 %v4_1000a36c, i32* %r27.global-to-local, align 4
  %v0_1000a378 = call i32 @function_1000ab7c()
  %v3_1000a37c = icmp eq i32 %v4_1000a36c, 0
  br i1 %v3_1000a37c, label %dec_label_pc_1000a390, label %dec_label_pc_1000a384

dec_label_pc_1000a384:                            ; preds = %dec_label_pc_1000a34c
  %v0_1000a384 = load i32, i32* @r30, align 4
  %v2_1000a384 = add i32 %v0_1000a384, %v4_1000a36c
  %v1_1000a388 = load i32, i32* @r28, align 4
  %v2_1000a388 = add i32 %v1_1000a388, -4
  %v3_1000a388 = inttoptr i32 %v2_1000a388 to i32*
  store i32 %v2_1000a384, i32* %v3_1000a388, align 4
  br label %dec_label_pc_1000a400

dec_label_pc_1000a390:                            ; preds = %dec_label_pc_1000a34c
  %v0_1000a390 = load i32, i32* @r31, align 4
  %v1_1000a390 = add i32 %v0_1000a390, -4
  store i32 %v1_1000a390, i32* @r3, align 4
  store i32 268477336, i32* @lr, align 4
  %v0_1000a394 = call i32 @function_1000a020()
  store i32 %v0_1000a394, i32* @r3, align 4
  store i32 %v0_1000a394, i32* @r31, align 4
  %v3_1000a398 = icmp eq i32 %v0_1000a394, 0
  br i1 %v3_1000a398, label %dec_label_pc_1000a3a0, label %dec_label_pc_1000a3a8

dec_label_pc_1000a3a0:                            ; preds = %dec_label_pc_1000a390
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1000a400

dec_label_pc_1000a3a8:                            ; preds = %dec_label_pc_1000a390
  %v0_1000a3a8 = load i32, i32* @r28, align 4
  store i32 %v0_1000a3a8, i32* @r4, align 4
  %v0_1000a3ac = load i32, i32* @r30, align 4
  %v1_1000a3ac = add i32 %v0_1000a3ac, -4
  store i32 %v1_1000a3ac, i32* @r5, align 4
  store i32 268477364, i32* @lr, align 4
  %v0_1000a3b0 = call i32 @function_1000b5d0()
  %v0_1000a3b4 = load i32, i32* @r28, align 4
  store i32 %v0_1000a3b4, i32* @r3, align 4
  store i32 268477372, i32* @lr, align 4
  %v0_1000a3b8 = call i32 @function_1000a1e8()
  %v0_1000a3bc = load i32, i32* @r31, align 4
  store i32 %v0_1000a3bc, i32* @r28, align 4
  br label %dec_label_pc_1000a400

dec_label_pc_1000a3c4:                            ; preds = %dec_label_pc_1000a344
  %v1_1000a3c4 = add i32 %v0_1000a3c4, 28
  %v3_1000a3c8 = icmp ugt i32 %v1_1000a3c4, %v3_1000a334
  br i1 %v3_1000a3c8, label %dec_label_pc_1000a400, label %dec_label_pc_1000a3d0

dec_label_pc_1000a3d0:                            ; preds = %dec_label_pc_1000a3c4
  store i32 ptrtoint (i32* @global_var_1001c318.338 to i32), i32* @r29, align 4
  %v0_1000a3dc = call i32 @function_1000ab7c()
  %v0_1000a3e4 = load i32, i32* %r27.global-to-local, align 4
  %v1_1000a3e4 = load i32, i32* @r31, align 4
  %v2_1000a3e4 = add i32 %v1_1000a3e4, %v0_1000a3e4
  %v1_1000a3e8 = load i32, i32* @r30, align 4
  %v2_1000a3e8 = sub i32 %v1_1000a3e8, %v1_1000a3e4
  store i32 268477428, i32* @lr, align 4
  %v4_1000a3f0 = call i32 @function_1000a59c(i32* nonnull @global_var_1001c240, i32 %v2_1000a3e4, i32 %v2_1000a3e8)
  %v0_1000a3f8 = call i32 @function_1000ab7c()
  %v0_1000a3fc = load i32, i32* @r31, align 4
  %v1_1000a3fc = load i32, i32* @r28, align 4
  %v2_1000a3fc = add i32 %v1_1000a3fc, -4
  %v3_1000a3fc = inttoptr i32 %v2_1000a3fc to i32*
  store i32 %v0_1000a3fc, i32* %v3_1000a3fc, align 4
  br label %dec_label_pc_1000a400

dec_label_pc_1000a400:                            ; preds = %dec_label_pc_1000a3c4, %dec_label_pc_1000a3a8, %dec_label_pc_1000a3a0, %dec_label_pc_1000a384, %dec_label_pc_1000a31c, %dec_label_pc_1000a3d0
  %v0_1000a404 = load i32, i32* @r28, align 4
  ret i32 %v0_1000a404

; uselistorder directives
  uselistorder i32 %v1_1000a3e4, { 1, 0 }
  uselistorder i32 %v4_1000a36c, { 1, 0, 2 }
  uselistorder i32 %v1_1000a360, { 1, 0 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* @global_var_1001c240, { 0, 1, 3, 2, 4 }
  uselistorder i32 ()* @function_1000a020, { 2, 1, 0, 5, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 4, 3 }
  uselistorder i32 ()* @function_1000a1e8, { 4, 3, 7, 6, 5, 11, 10, 9, 8, 2, 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1000a400, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_1000a344, { 1, 0 }
}

define i32 @function_1000a418(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a418:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v1_1000a418 = inttoptr i32 %arg2 to i32*
  %v2_1000a418 = load i32, i32* %v1_1000a418, align 4
  %v1_1000a41c = add i32 %v2_1000a418, 3
  store i32 %v1_1000a41c, i32* %r9.global-to-local, align 4
  %v1_1000a420 = call i32 @__asm_rlwinm(i32 %v1_1000a41c, i32 0, i32 0, i32 29)
  %v2_1000a424 = icmp ugt i32 %v1_1000a420, 11
  br i1 %v2_1000a424, label %dec_label_pc_1000a4a8.preheader, label %dec_label_pc_1000a42c

dec_label_pc_1000a42c:                            ; preds = %dec_label_pc_1000a418
  br label %dec_label_pc_1000a4a8.preheader

dec_label_pc_1000a4a8.preheader:                  ; preds = %dec_label_pc_1000a418, %dec_label_pc_1000a42c
  %storemerge20 = phi i32 [ 12, %dec_label_pc_1000a42c ], [ %v1_1000a420, %dec_label_pc_1000a418 ]
  %v0_1000a48c = phi i32 [ 12, %dec_label_pc_1000a42c ], [ %v1_1000a420, %dec_label_pc_1000a418 ]
  store i32 %storemerge20, i32* %r11.global-to-local, align 4
  %storemerge2 = load i32, i32* %arg1, align 4
  store i32 %storemerge2, i32* %r9.global-to-local, align 4
  %v3_1000a4a85 = icmp eq i32 %storemerge2, 0
  br i1 %v3_1000a4a85, label %dec_label_pc_1000a4b0, label %dec_label_pc_1000a438

dec_label_pc_1000a438:                            ; preds = %dec_label_pc_1000a4a8.preheader, %dec_label_pc_1000a4a4
  %v0_1000a4a4 = phi i32 [ %storemerge, %dec_label_pc_1000a4a4 ], [ %storemerge2, %dec_label_pc_1000a4a8.preheader ]
  %v1_1000a438 = inttoptr i32 %v0_1000a4a4 to i32*
  %v2_1000a438 = load i32, i32* %v1_1000a438, align 4
  store i32 %v2_1000a438, i32* %r10.global-to-local, align 4
  %v2_1000a43c = icmp ult i32 %v2_1000a438, %v0_1000a48c
  br i1 %v2_1000a43c, label %dec_label_pc_1000a4a4, label %dec_label_pc_1000a444

dec_label_pc_1000a444:                            ; preds = %dec_label_pc_1000a438
  %v1_1000a444 = add i32 %v0_1000a48c, 44
  %v2_1000a448 = icmp ult i32 %v2_1000a438, %v1_1000a444
  br i1 %v2_1000a448, label %dec_label_pc_1000a450, label %dec_label_pc_1000a48c

dec_label_pc_1000a450:                            ; preds = %dec_label_pc_1000a444
  %v1_1000a450 = add i32 %v0_1000a4a4, 4
  %v2_1000a450 = inttoptr i32 %v1_1000a450 to i32*
  %v3_1000a450 = load i32, i32* %v2_1000a450, align 4
  store i32 %v3_1000a450, i32* %r11.global-to-local, align 4
  %v3_1000a454 = icmp eq i32 %v3_1000a450, 0
  br i1 %v3_1000a454, label %dec_label_pc_1000a464, label %dec_label_pc_1000a45c

dec_label_pc_1000a45c:                            ; preds = %dec_label_pc_1000a450
  %v1_1000a45c = add i32 %v0_1000a4a4, 8
  %v2_1000a45c = inttoptr i32 %v1_1000a45c to i32*
  %v3_1000a45c = load i32, i32* %v2_1000a45c, align 4
  %v2_1000a460 = add i32 %v3_1000a450, 8
  %v3_1000a460 = inttoptr i32 %v2_1000a460 to i32*
  store i32 %v3_1000a45c, i32* %v3_1000a460, align 4
  %v0_1000a464.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_1000a480.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000a464

dec_label_pc_1000a464:                            ; preds = %dec_label_pc_1000a450, %dec_label_pc_1000a45c
  %v0_1000a480 = phi i32 [ %v2_1000a438, %dec_label_pc_1000a450 ], [ %v0_1000a480.pre, %dec_label_pc_1000a45c ]
  %v0_1000a464 = phi i32 [ %v0_1000a4a4, %dec_label_pc_1000a450 ], [ %v0_1000a464.pre, %dec_label_pc_1000a45c ]
  %v1_1000a464 = add i32 %v0_1000a464, 8
  %v2_1000a464 = inttoptr i32 %v1_1000a464 to i32*
  %v3_1000a464 = load i32, i32* %v2_1000a464, align 4
  %v1_1000a468 = add i32 %v0_1000a464, 4
  %v2_1000a468 = inttoptr i32 %v1_1000a468 to i32*
  %v3_1000a468 = load i32, i32* %v2_1000a468, align 4
  %v3_1000a46c = icmp eq i32 %v3_1000a464, 0
  store i32 %v0_1000a480, i32* %r11.global-to-local, align 4
  br i1 %v3_1000a46c, label %dec_label_pc_1000a480, label %dec_label_pc_1000a474

dec_label_pc_1000a474:                            ; preds = %dec_label_pc_1000a464
  %v2_1000a478 = add i32 %v3_1000a464, 4
  %v3_1000a478 = inttoptr i32 %v2_1000a478 to i32*
  store i32 %v3_1000a468, i32* %v3_1000a478, align 4
  br label %dec_label_pc_1000a494

dec_label_pc_1000a480:                            ; preds = %dec_label_pc_1000a464
  store i32 %v3_1000a468, i32* %arg1, align 4
  br label %dec_label_pc_1000a494

dec_label_pc_1000a48c:                            ; preds = %dec_label_pc_1000a444
  %v2_1000a48c = sub i32 %v2_1000a438, %v0_1000a48c
  store i32 %v2_1000a48c, i32* %v1_1000a438, align 4
  br label %dec_label_pc_1000a494

dec_label_pc_1000a494:                            ; preds = %dec_label_pc_1000a480, %dec_label_pc_1000a474, %dec_label_pc_1000a48c
  %v0_1000a494 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a494 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000a494 = sub i32 %v1_1000a494, %v0_1000a494
  store i32 %v2_1000a494, i32* %r9.global-to-local, align 4
  %v0_1000a498 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000a498, i32* %v1_1000a418, align 4
  %v0_1000a49c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a49c = add i32 %v0_1000a49c, 12
  ret i32 %v1_1000a49c

dec_label_pc_1000a4a4:                            ; preds = %dec_label_pc_1000a438
  %v1_1000a4a4 = add i32 %v0_1000a4a4, 4
  %storemerge.in = inttoptr i32 %v1_1000a4a4 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v3_1000a4a8 = icmp eq i32 %storemerge, 0
  br i1 %v3_1000a4a8, label %dec_label_pc_1000a4a8.dec_label_pc_1000a4b0_crit_edge, label %dec_label_pc_1000a438

dec_label_pc_1000a4a8.dec_label_pc_1000a4b0_crit_edge: ; preds = %dec_label_pc_1000a4a4
  br label %dec_label_pc_1000a4b0

dec_label_pc_1000a4b0:                            ; preds = %dec_label_pc_1000a4a8.dec_label_pc_1000a4b0_crit_edge, %dec_label_pc_1000a4a8.preheader
  ret i32 0

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_1000a464, { 1, 0 }
  uselistorder i32 %v2_1000a438, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_1000a4a4, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_1000a48c, { 1, 2, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 4, 5, 1, 2, 3, 6 }
  uselistorder i32* %r11.global-to-local, { 3, 1, 2, 0 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2 }
  uselistorder i32* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000a494, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a464, { 1, 0 }
  uselistorder label %dec_label_pc_1000a438, { 1, 0 }
  uselistorder label %dec_label_pc_1000a4a8.preheader, { 1, 0 }
}

define i32 @function_1000a4b8(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a4b8:
  %r11.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_1000a4b8 = load i32, i32* %arg1, align 4
  store i32 %v2_1000a4b8, i32* %r11.global-to-local, align 4
  store i32 %tmp, i32* %r8.global-to-local, align 4
  %v1_1000a4c0 = add i32 %arg3, 3
  %v3_1000a5443 = icmp eq i32 %v2_1000a4b8, 0
  br i1 %v3_1000a5443, label %dec_label_pc_1000a54c, label %dec_label_pc_1000a4c8

dec_label_pc_1000a4c8:                            ; preds = %dec_label_pc_1000a4b8, %dec_label_pc_1000a540
  %v0_1000a540 = phi i32 [ %v3_1000a540, %dec_label_pc_1000a540 ], [ %v2_1000a4b8, %dec_label_pc_1000a4b8 ]
  %v1_1000a4c8 = inttoptr i32 %v0_1000a540 to i32*
  %v2_1000a4c8 = load i32, i32* %v1_1000a4c8, align 4
  %v2_1000a4cc = sub i32 %v0_1000a540, %v2_1000a4c8
  %v1_1000a4d0 = add i32 %v2_1000a4cc, 12
  %v3_1000a4d4 = icmp ugt i32 %v1_1000a4d0, %arg2
  br i1 %v3_1000a4d4, label %dec_label_pc_1000a540, label %dec_label_pc_1000a4dc

dec_label_pc_1000a4dc:                            ; preds = %dec_label_pc_1000a4c8
  %v4_1000a4d4 = icmp eq i32 %v1_1000a4d0, %arg2
  br i1 %v4_1000a4d4, label %dec_label_pc_1000a4e4, label %dec_label_pc_1000a54c

dec_label_pc_1000a4e4:                            ; preds = %dec_label_pc_1000a4dc
  %v1_1000a4e4 = call i32 @__asm_rlwinm(i32 %v1_1000a4c0, i32 0, i32 0, i32 29)
  %v2_1000a4e8 = icmp ult i32 %v2_1000a4c8, %v1_1000a4e4
  br i1 %v2_1000a4e8, label %dec_label_pc_1000a54c, label %dec_label_pc_1000a4f0

dec_label_pc_1000a4f0:                            ; preds = %dec_label_pc_1000a4e4
  %v1_1000a4f0 = add i32 %v1_1000a4e4, 44
  %v2_1000a4f4 = icmp ult i32 %v2_1000a4c8, %v1_1000a4f0
  br i1 %v2_1000a4f4, label %dec_label_pc_1000a4fc, label %dec_label_pc_1000a530

dec_label_pc_1000a4fc:                            ; preds = %dec_label_pc_1000a4f0
  %v0_1000a4fc = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a4fc = add i32 %v0_1000a4fc, 4
  %v2_1000a4fc = inttoptr i32 %v1_1000a4fc to i32*
  %v3_1000a4fc = load i32, i32* %v2_1000a4fc, align 4
  %v3_1000a500 = icmp eq i32 %v3_1000a4fc, 0
  br i1 %v3_1000a500, label %dec_label_pc_1000a510, label %dec_label_pc_1000a508

dec_label_pc_1000a508:                            ; preds = %dec_label_pc_1000a4fc
  %v1_1000a508 = add i32 %v0_1000a4fc, 8
  %v2_1000a508 = inttoptr i32 %v1_1000a508 to i32*
  %v3_1000a508 = load i32, i32* %v2_1000a508, align 4
  %v2_1000a50c = add i32 %v3_1000a4fc, 8
  %v3_1000a50c = inttoptr i32 %v2_1000a50c to i32*
  store i32 %v3_1000a508, i32* %v3_1000a50c, align 4
  %v0_1000a510.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000a510

dec_label_pc_1000a510:                            ; preds = %dec_label_pc_1000a4fc, %dec_label_pc_1000a508
  %v0_1000a510 = phi i32 [ %v0_1000a4fc, %dec_label_pc_1000a4fc ], [ %v0_1000a510.pre, %dec_label_pc_1000a508 ]
  %v1_1000a510 = add i32 %v0_1000a510, 8
  %v2_1000a510 = inttoptr i32 %v1_1000a510 to i32*
  %v3_1000a510 = load i32, i32* %v2_1000a510, align 4
  %v1_1000a514 = add i32 %v0_1000a510, 4
  %v2_1000a514 = inttoptr i32 %v1_1000a514 to i32*
  %v3_1000a514 = load i32, i32* %v2_1000a514, align 4
  %v3_1000a518 = icmp eq i32 %v3_1000a510, 0
  br i1 %v3_1000a518, label %dec_label_pc_1000a528, label %dec_label_pc_1000a520

dec_label_pc_1000a520:                            ; preds = %dec_label_pc_1000a510
  %v2_1000a520 = add i32 %v3_1000a510, 4
  %v3_1000a520 = inttoptr i32 %v2_1000a520 to i32*
  store i32 %v3_1000a514, i32* %v3_1000a520, align 4
  ret i32 %v2_1000a4c8

dec_label_pc_1000a528:                            ; preds = %dec_label_pc_1000a510
  %v1_1000a528 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a528 = inttoptr i32 %v1_1000a528 to i32*
  store i32 %v3_1000a514, i32* %v2_1000a528, align 4
  ret i32 %v2_1000a4c8

dec_label_pc_1000a530:                            ; preds = %dec_label_pc_1000a4f0
  %v2_1000a530 = sub i32 %v2_1000a4c8, %v1_1000a4e4
  %v1_1000a538 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000a538 = inttoptr i32 %v1_1000a538 to i32*
  store i32 %v2_1000a530, i32* %v2_1000a538, align 4
  ret i32 %v1_1000a4e4

dec_label_pc_1000a540:                            ; preds = %dec_label_pc_1000a4c8
  %v1_1000a540 = add i32 %v0_1000a540, 4
  %v2_1000a540 = inttoptr i32 %v1_1000a540 to i32*
  %v3_1000a540 = load i32, i32* %v2_1000a540, align 4
  store i32 %v3_1000a540, i32* %r11.global-to-local, align 4
  %v3_1000a544 = icmp eq i32 %v3_1000a540, 0
  br i1 %v3_1000a544, label %dec_label_pc_1000a544.dec_label_pc_1000a54c.loopexit_crit_edge, label %dec_label_pc_1000a4c8

dec_label_pc_1000a544.dec_label_pc_1000a54c.loopexit_crit_edge: ; preds = %dec_label_pc_1000a540
  br label %dec_label_pc_1000a54c

dec_label_pc_1000a54c:                            ; preds = %dec_label_pc_1000a4b8, %dec_label_pc_1000a544.dec_label_pc_1000a54c.loopexit_crit_edge, %dec_label_pc_1000a4dc, %dec_label_pc_1000a4e4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_1000a540, { 1, 2, 0 }
  uselistorder i32 %v0_1000a510, { 1, 0 }
  uselistorder i32 %v1_1000a4e4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1000a4c8, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_1000a540, { 0, 2, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1000a54c, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_1000a510, { 1, 0 }
  uselistorder label %dec_label_pc_1000a4c8, { 1, 0 }
}

define i32 @function_1000a554(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000a554:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1000a554 = icmp eq i32 %arg3, 0
  %v2_1000a558 = add i32 %arg2, 4
  %v3_1000a558 = inttoptr i32 %v2_1000a558 to i32*
  store i32 %arg4, i32* %v3_1000a558, align 4
  %v2_1000a55c = add i32 %arg2, 8
  %v3_1000a55c = inttoptr i32 %v2_1000a55c to i32*
  store i32 %arg3, i32* %v3_1000a55c, align 4
  br i1 %v3_1000a554, label %dec_label_pc_1000a56c, label %dec_label_pc_1000a564

dec_label_pc_1000a564:                            ; preds = %dec_label_pc_1000a554
  %v2_1000a564 = add i32 %arg3, 4
  %v3_1000a564 = inttoptr i32 %v2_1000a564 to i32*
  store i32 %arg2, i32* %v3_1000a564, align 4
  br label %dec_label_pc_1000a570

dec_label_pc_1000a56c:                            ; preds = %dec_label_pc_1000a554
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_1000a570

dec_label_pc_1000a570:                            ; preds = %dec_label_pc_1000a564, %dec_label_pc_1000a56c
  %v3_1000a570 = icmp eq i32 %arg4, 0
  %v0_1000a574 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000a570, i32 %v0_1000a574)
  %v2_1000a578 = add i32 %arg4, 8
  %v3_1000a578 = inttoptr i32 %v2_1000a578 to i32*
  store i32 %arg2, i32* %v3_1000a578, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg2, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_1000a570, { 1, 0 }
}

define i32 @function_1000a580(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000a580:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1000a580 = icmp eq i32 %arg3, 0
  br i1 %v3_1000a580, label %dec_label_pc_1000a590, label %dec_label_pc_1000a588

dec_label_pc_1000a588:                            ; preds = %dec_label_pc_1000a580
  %v2_1000a588 = add i32 %arg3, 4
  %v3_1000a588 = inttoptr i32 %v2_1000a588 to i32*
  store i32 %arg2, i32* %v3_1000a588, align 4
  br label %dec_label_pc_1000a594

dec_label_pc_1000a590:                            ; preds = %dec_label_pc_1000a580
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_1000a594

dec_label_pc_1000a594:                            ; preds = %dec_label_pc_1000a588, %dec_label_pc_1000a590
  %v2_1000a594 = add i32 %arg2, 8
  %v3_1000a594 = inttoptr i32 %v2_1000a594 to i32*
  store i32 %arg3, i32* %v3_1000a594, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a594, { 1, 0 }
}

define i32 @function_1000a59c(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a59c:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_1000a5b4 = load i32, i32* %arg1, align 4
  store i32 %v2_1000a5b4, i32* @r31, align 4
  %v2_1000a5b8 = add i32 %arg3, %arg2
  store i32 %v2_1000a5b8, i32* %r3.global-to-local, align 4
  %v3_1000a5cc7 = icmp eq i32 %v2_1000a5b4, 0
  %v1_1000a5d08 = add i32 %v2_1000a5b4, 12
  %tmp69 = icmp uge i32 %v1_1000a5d08, %arg2
  %or.cond10 = or i1 %v3_1000a5cc7, %tmp69
  br i1 %or.cond10, label %dec_label_pc_1000a5dc, label %dec_label_pc_1000a5c4

dec_label_pc_1000a5c4:                            ; preds = %dec_label_pc_1000a59c, %dec_label_pc_1000a5c4
  %v0_1000a62411 = phi i32 [ %v3_1000a5c8, %dec_label_pc_1000a5c4 ], [ %v2_1000a5b4, %dec_label_pc_1000a59c ]
  store i32 %v0_1000a62411, i32* %r11.global-to-local, align 4
  %v1_1000a5c8 = add i32 %v0_1000a62411, 4
  %v2_1000a5c8 = inttoptr i32 %v1_1000a5c8 to i32*
  %v3_1000a5c8 = load i32, i32* %v2_1000a5c8, align 4
  store i32 %v3_1000a5c8, i32* @r31, align 4
  %v3_1000a5cc = icmp eq i32 %v3_1000a5c8, 0
  %v1_1000a5d0 = add i32 %v3_1000a5c8, 12
  %tmp6 = icmp uge i32 %v1_1000a5d0, %arg2
  %or.cond = or i1 %v3_1000a5cc, %tmp6
  br i1 %or.cond, label %dec_label_pc_1000a5dc, label %dec_label_pc_1000a5c4

dec_label_pc_1000a5dc:                            ; preds = %dec_label_pc_1000a5c4, %dec_label_pc_1000a59c
  %v0_1000a618.lcssa = phi i32 [ 0, %dec_label_pc_1000a59c ], [ %v0_1000a62411, %dec_label_pc_1000a5c4 ]
  %v0_1000a624.lcssa = phi i32 [ %v2_1000a5b4, %dec_label_pc_1000a59c ], [ %v3_1000a5c8, %dec_label_pc_1000a5c4 ]
  %v3_1000a5cc.lcssa = phi i1 [ %v3_1000a5cc7, %dec_label_pc_1000a59c ], [ %v3_1000a5cc, %dec_label_pc_1000a5c4 ]
  br i1 %v3_1000a5cc.lcssa, label %dec_label_pc_1000a694, label %dec_label_pc_1000a5e4

dec_label_pc_1000a5e4:                            ; preds = %dec_label_pc_1000a5dc
  %v1_1000a5e4 = inttoptr i32 %v0_1000a624.lcssa to i32*
  %v2_1000a5e4 = load i32, i32* %v1_1000a5e4, align 4
  %v2_1000a5e8 = sub i32 %v0_1000a624.lcssa, %v2_1000a5e4
  %v1_1000a5ec = add i32 %v2_1000a5e8, 12
  %v3_1000a5f0 = icmp ugt i32 %v1_1000a5ec, %v2_1000a5b8
  br i1 %v3_1000a5f0, label %dec_label_pc_1000a694, label %dec_label_pc_1000a5f8

dec_label_pc_1000a5f8:                            ; preds = %dec_label_pc_1000a5e4
  %v4_1000a5f0 = icmp eq i32 %v1_1000a5ec, %v2_1000a5b8
  %v2_1000a5fc = add i32 %v2_1000a5e4, %arg3
  store i32 %v2_1000a5fc, i32* @r29, align 4
  br i1 %v4_1000a5f0, label %dec_label_pc_1000a604, label %dec_label_pc_1000a634

dec_label_pc_1000a604:                            ; preds = %dec_label_pc_1000a5f8
  %v3_1000a604 = icmp eq i32 %v0_1000a618.lcssa, 0
  br i1 %v3_1000a604, label %dec_label_pc_1000a688, label %dec_label_pc_1000a60c

dec_label_pc_1000a60c:                            ; preds = %dec_label_pc_1000a604
  %v1_1000a60c = add i32 %v0_1000a618.lcssa, 12
  %v4_1000a610 = icmp eq i32 %v1_1000a60c, %arg2
  br i1 %v4_1000a610, label %dec_label_pc_1000a618, label %dec_label_pc_1000a688

dec_label_pc_1000a618:                            ; preds = %dec_label_pc_1000a60c
  %v1_1000a618 = inttoptr i32 %v0_1000a618.lcssa to i32*
  %v2_1000a618 = load i32, i32* %v1_1000a618, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v1_1000a620 = add i32 %v0_1000a618.lcssa, 8
  %v2_1000a620 = inttoptr i32 %v1_1000a620 to i32*
  %v3_1000a620 = load i32, i32* %v2_1000a620, align 4
  %v2_1000a628 = add i32 %v2_1000a618, %v2_1000a5fc
  store i32 %v2_1000a628, i32* @r29, align 4
  %v5_1000a62c = call i32 @function_1000a580(i32* %arg1, i32 %v0_1000a624.lcssa, i32 %v3_1000a620, i32 %v2_1000a5b8)
  store i32 %v5_1000a62c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a688

dec_label_pc_1000a634:                            ; preds = %dec_label_pc_1000a5f8
  %v1_1000a634 = add i32 %v0_1000a624.lcssa, 4
  %v2_1000a634 = inttoptr i32 %v1_1000a634 to i32*
  %v3_1000a634 = load i32, i32* %v2_1000a634, align 4
  %v3_1000a638 = icmp eq i32 %v3_1000a634, 0
  br i1 %v3_1000a638, label %dec_label_pc_1000a670, label %dec_label_pc_1000a640

dec_label_pc_1000a640:                            ; preds = %dec_label_pc_1000a634
  %v1_1000a640 = inttoptr i32 %v3_1000a634 to i32*
  %v2_1000a640 = load i32, i32* %v1_1000a640, align 4
  %v2_1000a644 = sub i32 %v3_1000a634, %v2_1000a640
  %v1_1000a648 = add i32 %v2_1000a644, 12
  %v4_1000a64c = icmp eq i32 %v2_1000a5b8, %v1_1000a648
  br i1 %v4_1000a64c, label %dec_label_pc_1000a654, label %dec_label_pc_1000a670

dec_label_pc_1000a654:                            ; preds = %dec_label_pc_1000a640
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_1000a660 = add i32 %v2_1000a640, %v2_1000a5fc
  store i32 %v2_1000a660, i32* @r29, align 4
  store i32 %v3_1000a634, i32* @r31, align 4
  %v5_1000a668 = call i32 @function_1000a580(i32* %arg1, i32 %v3_1000a634, i32 %v0_1000a618.lcssa, i32 %v2_1000a5b8)
  store i32 %v5_1000a668, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a688

dec_label_pc_1000a670:                            ; preds = %dec_label_pc_1000a640, %dec_label_pc_1000a634
  %v2_1000a670 = add i32 %v0_1000a624.lcssa, %arg3
  store i32 %v2_1000a670, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268478088, i32* @lr, align 4
  %v5_1000a684 = call i32 @function_1000a554(i32* %arg1, i32 %v2_1000a670, i32 %v0_1000a618.lcssa, i32 %v3_1000a634)
  store i32 %v5_1000a684, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a688

dec_label_pc_1000a688:                            ; preds = %dec_label_pc_1000a60c, %dec_label_pc_1000a604, %dec_label_pc_1000a654, %dec_label_pc_1000a618, %dec_label_pc_1000a670
  %v0_1000a688 = load i32, i32* @r31, align 4
  store i32 %v0_1000a688, i32* @r30, align 4
  %v0_1000a68c = load i32, i32* @r29, align 4
  %v2_1000a68c = inttoptr i32 %v0_1000a688 to i32*
  store i32 %v0_1000a68c, i32* %v2_1000a68c, align 4
  br label %dec_label_pc_1000a6b0

dec_label_pc_1000a694:                            ; preds = %dec_label_pc_1000a5e4, %dec_label_pc_1000a5dc
  %v2_1000a694 = add i32 %v2_1000a5b8, -12
  %v3_1000a694 = inttoptr i32 %v2_1000a694 to i32*
  store i32 %arg3, i32* %v3_1000a694, align 4
  %v0_1000a698 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000a698 = add i32 %v0_1000a698, -12
  store i32 %v1_1000a698, i32* @r30, align 4
  %v0_1000a69c = load i32, i32* %r11.global-to-local, align 4
  %v0_1000a6a0 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_1000a6a0, i32* %r3.global-to-local, align 4
  %v0_1000a6a4 = load i32, i32* @r31, align 4
  store i32 268478128, i32* @lr, align 4
  %v4_1000a6ac = inttoptr i32 %v0_1000a6a0 to i32*
  %v5_1000a6ac = call i32 @function_1000a554(i32* %v4_1000a6ac, i32 %v1_1000a698, i32 %v0_1000a69c, i32 %v0_1000a6a4)
  store i32 %v5_1000a6ac, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a6b0

dec_label_pc_1000a6b0:                            ; preds = %dec_label_pc_1000a688, %dec_label_pc_1000a694
  %v0_1000a6b4 = load i32, i32* @r30, align 4
  store i32 %v0_1000a6b4, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000a6b4

; uselistorder directives
  uselistorder i32 %v3_1000a634, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_1000a5ec, { 1, 0 }
  uselistorder i32 %v0_1000a624.lcssa, { 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_1000a618.lcssa, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %v3_1000a5c8, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v2_1000a5b8, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %tmp, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 7, 8, 9, 5, 1, 10, 11, 2, 3, 4, 6, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i32*, i32, i32, i32)* @function_1000a580, { 1, 0 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 3, 2, 0, 1 }
  uselistorder i32* %arg1, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_1000a6b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000a688, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_1000a5c4, { 1, 0 }
}

define i32 @function_1000a6c8(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a6c8:
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 10, i32* %r30.global-to-local, align 4
  store i32 1, i32* %r26.global-to-local, align 4
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v3_1000a700 = load i32, i32* bitcast (i32** @global_var_1001c24c.349 to i32*), align 4
  %v2_1000a70c27 = load i8, i8* %arg1, align 1
  %v3_1000a70c28 = zext i8 %v2_1000a70c27 to i32
  %v1_1000a71029 = mul nuw nsw i32 %v3_1000a70c28, 2
  %v2_1000a71430 = add i32 %v1_1000a71029, %v3_1000a700
  %v3_1000a71431 = inttoptr i32 %v2_1000a71430 to i16*
  %v4_1000a71432 = load i16, i16* %v3_1000a71431, align 2
  %v1_1000a71834 = and i16 %v4_1000a71432, 32
  %v3_1000a71835 = icmp eq i16 %v1_1000a71834, 0
  br i1 %v3_1000a71835, label %dec_label_pc_1000a720, label %dec_label_pc_1000a708

dec_label_pc_1000a708:                            ; preds = %dec_label_pc_1000a6c8, %dec_label_pc_1000a708
  %v0_1000a74036 = phi i32 [ %v1_1000a708, %dec_label_pc_1000a708 ], [ %tmp, %dec_label_pc_1000a6c8 ]
  %v1_1000a708 = add i32 %v0_1000a74036, 1
  store i32 %v1_1000a708, i32* %r31.global-to-local, align 4
  %v1_1000a70c = inttoptr i32 %v1_1000a708 to i8*
  %v2_1000a70c = load i8, i8* %v1_1000a70c, align 1
  %v3_1000a70c = zext i8 %v2_1000a70c to i32
  %v1_1000a710 = mul nuw nsw i32 %v3_1000a70c, 2
  %v2_1000a714 = add i32 %v1_1000a710, %v3_1000a700
  %v3_1000a714 = inttoptr i32 %v2_1000a714 to i16*
  %v4_1000a714 = load i16, i16* %v3_1000a714, align 2
  %v1_1000a718 = and i16 %v4_1000a714, 32
  %v3_1000a718 = icmp eq i16 %v1_1000a718, 0
  br i1 %v3_1000a718, label %dec_label_pc_1000a720, label %dec_label_pc_1000a708

dec_label_pc_1000a720:                            ; preds = %dec_label_pc_1000a708, %dec_label_pc_1000a6c8
  %v0_1000a740.lcssa = phi i32 [ %tmp, %dec_label_pc_1000a6c8 ], [ %v1_1000a708, %dec_label_pc_1000a708 ]
  %v2_1000a70c.lcssa = phi i8 [ %v2_1000a70c27, %dec_label_pc_1000a6c8 ], [ %v2_1000a70c, %dec_label_pc_1000a708 ]
  %v3_1000a720 = icmp eq i8 %v2_1000a70c.lcssa, 43
  br i1 %v3_1000a720, label %dec_label_pc_1000a740, label %dec_label_pc_1000a728

dec_label_pc_1000a728:                            ; preds = %dec_label_pc_1000a720
  %v3_1000a728 = icmp eq i8 %v2_1000a70c.lcssa, 45
  store i32 0, i32* @r28, align 4
  br i1 %v3_1000a728, label %dec_label_pc_1000a740, label %dec_label_pc_1000a744

dec_label_pc_1000a740:                            ; preds = %dec_label_pc_1000a720, %dec_label_pc_1000a728
  %storemerge = phi i32 [ 1, %dec_label_pc_1000a728 ], [ 0, %dec_label_pc_1000a720 ]
  store i32 %storemerge, i32* @r28, align 4
  %v1_1000a740 = add i32 %v0_1000a740.lcssa, 1
  store i32 %v1_1000a740, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000a744

dec_label_pc_1000a744:                            ; preds = %dec_label_pc_1000a728, %dec_label_pc_1000a740
  %v1_1000a744 = call i32 @__asm_rlwinm.(i32 10, i32 0, i32 28, i32 26)
  %v4_1000a744 = icmp eq i32 %v1_1000a744, 0
  br i1 %v4_1000a744, label %dec_label_pc_1000a750, label %dec_label_pc_1000a744.dec_label_pc_1000a78c_crit_edge

dec_label_pc_1000a744.dec_label_pc_1000a78c_crit_edge: ; preds = %dec_label_pc_1000a744
  %v0_1000a78c.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000a78c

dec_label_pc_1000a750:                            ; preds = %dec_label_pc_1000a744
  %v0_1000a750 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000a750 = inttoptr i32 %v0_1000a750 to i8*
  %v2_1000a750 = load i8, i8* %v1_1000a750, align 1
  %v0_1000a754 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000a754 = add i32 %v0_1000a754, 10
  store i32 %v1_1000a754, i32* %r30.global-to-local, align 4
  %v3_1000a758 = icmp eq i8 %v2_1000a750, 48
  br i1 %v3_1000a758, label %dec_label_pc_1000a760, label %dec_label_pc_1000a780

dec_label_pc_1000a760:                            ; preds = %dec_label_pc_1000a750
  %v1_1000a760 = add i32 %v0_1000a750, 1
  %v2_1000a760 = inttoptr i32 %v1_1000a760 to i8*
  %v3_1000a760 = load i8, i8* %v2_1000a760, align 1
  %v4_1000a760 = zext i8 %v3_1000a760 to i32
  store i32 %v1_1000a760, i32* %r31.global-to-local, align 4
  %v1_1000a764 = add i32 %v0_1000a754, 8
  store i32 %v1_1000a764, i32* %r30.global-to-local, align 4
  %v1_1000a768 = or i32 %v4_1000a760, 32
  %v3_1000a770 = icmp eq i32 %v1_1000a768, 120
  br i1 %v3_1000a770, label %dec_label_pc_1000a778, label %dec_label_pc_1000a780

dec_label_pc_1000a778:                            ; preds = %dec_label_pc_1000a760
  %v1_1000a778 = mul i32 %v1_1000a764, 2
  store i32 %v1_1000a778, i32* %r30.global-to-local, align 4
  %v1_1000a77c = add i32 %v0_1000a750, 2
  store i32 %v1_1000a77c, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000a780

dec_label_pc_1000a780:                            ; preds = %dec_label_pc_1000a760, %dec_label_pc_1000a750, %dec_label_pc_1000a778
  %v0_1000a83415 = phi i32 [ %v1_1000a760, %dec_label_pc_1000a778 ], [ %tmp, %dec_label_pc_1000a750 ], [ %v1_1000a760, %dec_label_pc_1000a760 ]
  %v0_1000a780 = phi i32 [ %v1_1000a778, %dec_label_pc_1000a778 ], [ %v1_1000a754, %dec_label_pc_1000a750 ], [ %v1_1000a764, %dec_label_pc_1000a760 ]
  %tmp22 = icmp slt i32 %v0_1000a780, 17
  br i1 %tmp22, label %dec_label_pc_1000a78c, label %dec_label_pc_1000a788

dec_label_pc_1000a788:                            ; preds = %dec_label_pc_1000a780
  store i32 16, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000a78c

dec_label_pc_1000a78c:                            ; preds = %dec_label_pc_1000a744.dec_label_pc_1000a78c_crit_edge, %dec_label_pc_1000a780, %dec_label_pc_1000a788
  %v0_1000a83414 = phi i32 [ %tmp, %dec_label_pc_1000a744.dec_label_pc_1000a78c_crit_edge ], [ %v0_1000a83415, %dec_label_pc_1000a780 ], [ %v0_1000a83415, %dec_label_pc_1000a788 ]
  %v1_1000a7a0 = phi i32 [ %v0_1000a78c.pre, %dec_label_pc_1000a744.dec_label_pc_1000a78c_crit_edge ], [ %v0_1000a780, %dec_label_pc_1000a780 ], [ 16, %dec_label_pc_1000a788 ]
  %v1_1000a78c = add i32 %v1_1000a7a0, -2
  store i32 0, i32* %r8.global-to-local, align 4
  %v2_1000a794 = icmp ugt i32 %v1_1000a78c, 34
  br i1 %v2_1000a794, label %dec_label_pc_1000a82c, label %dec_label_pc_1000a79c

dec_label_pc_1000a79c:                            ; preds = %dec_label_pc_1000a78c
  %v2_1000a7a0 = udiv i32 -1, %v1_1000a7a0
  store i32 %v2_1000a7a0, i32* @r29, align 4
  %v2_1000a7a4 = mul i32 %v2_1000a7a0, %v1_1000a7a0
  %v1_1000a7a8 = sub i32 -1, %v2_1000a7a4
  %v1_1000a7ac = urem i32 %v1_1000a7a8, 256
  store i32 %v1_1000a7ac, i32* @r27, align 4
  %v0_1000a7b8.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000a7b8

dec_label_pc_1000a7b4:                            ; preds = %dec_label_pc_1000a820, %dec_label_pc_1000a808
  %v1_1000a7bc.pre = phi i32 [ %v1_1000a7c0, %dec_label_pc_1000a820 ], [ %v1_1000a7bc.pre.pre, %dec_label_pc_1000a808 ]
  %v0_1000a7bc.pre = phi i32 [ %v2_1000a824, %dec_label_pc_1000a820 ], [ %v0_1000a7bc.pre.pre, %dec_label_pc_1000a808 ]
  %v0_1000a7b4 = phi i32 [ %v1_1000a7c4, %dec_label_pc_1000a820 ], [ %v0_1000a7b4.pre, %dec_label_pc_1000a808 ]
  br label %dec_label_pc_1000a7b8

dec_label_pc_1000a7b8:                            ; preds = %dec_label_pc_1000a79c, %dec_label_pc_1000a7b4
  %v0_1000a83412 = phi i32 [ %v0_1000a83414, %dec_label_pc_1000a79c ], [ %v0_1000a7b4, %dec_label_pc_1000a7b4 ]
  %v0_1000a7c4 = phi i32 [ %v0_1000a7b8.pre, %dec_label_pc_1000a79c ], [ %v0_1000a7b4, %dec_label_pc_1000a7b4 ]
  %v1_1000a7c0 = phi i32 [ %v2_1000a7a0, %dec_label_pc_1000a79c ], [ %v1_1000a7bc.pre, %dec_label_pc_1000a7b4 ]
  %v0_1000a820 = phi i32 [ 0, %dec_label_pc_1000a79c ], [ %v0_1000a7bc.pre, %dec_label_pc_1000a7b4 ]
  %v1_1000a7b8 = inttoptr i32 %v0_1000a7c4 to i8*
  %v2_1000a7b8 = load i8, i8* %v1_1000a7b8, align 1
  %v3_1000a7b8 = zext i8 %v2_1000a7b8 to i32
  %v3_1000a7bc = icmp ugt i32 %v0_1000a820, %v1_1000a7c0
  %v1_1000a7c4 = add i32 %v0_1000a7c4, 1
  store i32 %v1_1000a7c4, i32* %r31.global-to-local, align 4
  %v1_1000a7c8 = add nsw i32 %v3_1000a7b8, -48
  %v1_1000a7cc = or i32 %v3_1000a7b8, 32
  %v1_1000a7d0 = urem i32 %v1_1000a7c8, 256
  %tmp23 = icmp ult i32 %v1_1000a7d0, 10
  br i1 %tmp23, label %dec_label_pc_1000a7f0, label %dec_label_pc_1000a7e0

dec_label_pc_1000a7e0:                            ; preds = %dec_label_pc_1000a7b8
  %tmp24 = icmp ult i32 %v1_1000a7cc, 97
  br i1 %tmp24, label %dec_label_pc_1000a7f0, label %dec_label_pc_1000a7ec

dec_label_pc_1000a7ec:                            ; preds = %dec_label_pc_1000a7e0
  %v1_1000a7e0 = add nsw i32 %v1_1000a7cc, -87
  %v1_1000a7ec = urem i32 %v1_1000a7e0, 256
  br label %dec_label_pc_1000a7f0

dec_label_pc_1000a7f0:                            ; preds = %dec_label_pc_1000a7e0, %dec_label_pc_1000a7b8, %dec_label_pc_1000a7ec
  %v1_1000a824 = phi i32 [ 40, %dec_label_pc_1000a7e0 ], [ %v1_1000a7d0, %dec_label_pc_1000a7b8 ], [ %v1_1000a7ec, %dec_label_pc_1000a7ec ]
  %v1_1000a7f0 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000a7f0 = icmp slt i32 %v1_1000a824, %v1_1000a7f0
  br i1 %v2_1000a7f0, label %dec_label_pc_1000a7f8, label %dec_label_pc_1000a82c

dec_label_pc_1000a7f8:                            ; preds = %dec_label_pc_1000a7f0
  br i1 %v3_1000a7bc, label %dec_label_pc_1000a808, label %dec_label_pc_1000a7fc

dec_label_pc_1000a7fc:                            ; preds = %dec_label_pc_1000a7f8
  %v1_1000a7fc = load i32, i32* @r27, align 4
  %v0_1000a800.not = icmp ne i32 %v0_1000a820, %v1_1000a7c0
  %tmp25 = icmp ule i32 %v1_1000a824, %v1_1000a7fc
  %or.cond = or i1 %tmp25, %v0_1000a800.not
  br i1 %or.cond, label %dec_label_pc_1000a820, label %dec_label_pc_1000a808

dec_label_pc_1000a808:                            ; preds = %dec_label_pc_1000a7fc, %dec_label_pc_1000a7f8
  %v0_1000a808 = call i32 @function_100097e8()
  %v0_1000a80c = load i32, i32* @r28, align 4
  %v1_1000a80c = load i32, i32* %r26.global-to-local, align 4
  %v2_1000a80c = and i32 %v1_1000a80c, %v0_1000a80c
  store i32 %v2_1000a80c, i32* @r28, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  %v2_1000a818 = inttoptr i32 %v0_1000a808 to i32*
  store i32 34, i32* %v2_1000a818, align 4
  %v0_1000a7b4.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_1000a7bc.pre.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_1000a7bc.pre.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000a7b4

dec_label_pc_1000a820:                            ; preds = %dec_label_pc_1000a7fc
  %v2_1000a820 = mul i32 %v1_1000a7f0, %v0_1000a820
  %v2_1000a824 = add i32 %v2_1000a820, %v1_1000a824
  store i32 %v2_1000a824, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000a7b4

dec_label_pc_1000a82c:                            ; preds = %dec_label_pc_1000a7f0, %dec_label_pc_1000a78c
  %v0_1000a834 = phi i32 [ %v0_1000a83414, %dec_label_pc_1000a78c ], [ %v0_1000a83412, %dec_label_pc_1000a7f0 ]
  %v0_1000a82c = load i32, i32* %r25.global-to-local, align 4
  %v3_1000a82c = icmp eq i32 %v0_1000a82c, 0
  br i1 %v3_1000a82c, label %dec_label_pc_1000a838, label %dec_label_pc_1000a834

dec_label_pc_1000a834:                            ; preds = %dec_label_pc_1000a82c
  %v2_1000a834 = inttoptr i32 %v0_1000a82c to i32*
  store i32 %v0_1000a834, i32* %v2_1000a834, align 4
  br label %dec_label_pc_1000a838

dec_label_pc_1000a838:                            ; preds = %dec_label_pc_1000a82c, %dec_label_pc_1000a834
  %v0_1000a838 = load i32, i32* %r26.global-to-local, align 4
  %v3_1000a838 = icmp eq i32 %v0_1000a838, 0
  %v0_1000a83c = load i32, i32* @r28, align 4
  %v1_1000a83c = sub i32 0, %v0_1000a83c
  %tmp40 = lshr i32 %v1_1000a83c, 31
  %tmp41 = add nuw i32 %tmp40, 2147483647
  store i32 %tmp41, i32* @r31, align 4
  %v0_1000a87c.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v3_1000a838, label %dec_label_pc_1000a86c, label %dec_label_pc_1000a854

dec_label_pc_1000a854:                            ; preds = %dec_label_pc_1000a838
  %v3_1000a854 = icmp ugt i32 %v0_1000a87c.pre.pre, %tmp41
  br i1 %v3_1000a854, label %dec_label_pc_1000a85c, label %dec_label_pc_1000a86c

dec_label_pc_1000a85c:                            ; preds = %dec_label_pc_1000a854
  %v0_1000a85c = call i32 @function_100097e8()
  %v2_1000a864 = inttoptr i32 %v0_1000a85c to i32*
  store i32 34, i32* %v2_1000a864, align 4
  %v0_1000a868 = load i32, i32* @r31, align 4
  store i32 %v0_1000a868, i32* %r8.global-to-local, align 4
  %v0_1000a86c.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000a86c

dec_label_pc_1000a86c:                            ; preds = %dec_label_pc_1000a838, %dec_label_pc_1000a854, %dec_label_pc_1000a85c
  %v0_1000a87c.pre = phi i32 [ %v0_1000a87c.pre.pre, %dec_label_pc_1000a854 ], [ %v0_1000a868, %dec_label_pc_1000a85c ], [ %v0_1000a87c.pre.pre, %dec_label_pc_1000a838 ]
  %v0_1000a86c = phi i32 [ %v0_1000a83c, %dec_label_pc_1000a854 ], [ %v0_1000a86c.pre, %dec_label_pc_1000a85c ], [ %v0_1000a83c, %dec_label_pc_1000a838 ]
  %v3_1000a86c = icmp eq i32 %v0_1000a86c, 0
  br i1 %v3_1000a86c, label %dec_label_pc_1000a878, label %dec_label_pc_1000a874

dec_label_pc_1000a874:                            ; preds = %dec_label_pc_1000a86c
  %v1_1000a874 = sub i32 0, %v0_1000a87c.pre
  store i32 %v1_1000a874, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000a878

dec_label_pc_1000a878:                            ; preds = %dec_label_pc_1000a86c, %dec_label_pc_1000a874
  %v0_1000a87c = phi i32 [ %v1_1000a874, %dec_label_pc_1000a874 ], [ %v0_1000a87c.pre, %dec_label_pc_1000a86c ]
  ret i32 %v0_1000a87c

; uselistorder directives
  uselistorder i32 %v0_1000a87c.pre, { 1, 0 }
  uselistorder i32 %v0_1000a87c.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v2_1000a824, { 1, 0 }
  uselistorder i32 %v1_1000a7d0, { 1, 0 }
  uselistorder i32 %v1_1000a7cc, { 1, 0 }
  uselistorder i32 %v1_1000a7c4, { 1, 0 }
  uselistorder i32 %v3_1000a7b8, { 1, 0 }
  uselistorder i32 %v0_1000a820, { 1, 0, 2 }
  uselistorder i32 %v1_1000a7c0, { 0, 2, 1 }
  uselistorder i32 %v0_1000a7b4, { 1, 0 }
  uselistorder i32 %v2_1000a7a0, { 1, 0, 2 }
  uselistorder i32 %v1_1000a778, { 1, 0 }
  uselistorder i32 %v1_1000a764, { 1, 0, 2 }
  uselistorder i8 %v2_1000a70c.lcssa, { 1, 0 }
  uselistorder i32 %v1_1000a708, { 0, 2, 3, 1 }
  uselistorder i32 %v3_1000a700, { 1, 0 }
  uselistorder i32 %tmp, { 3, 2, 0, 1, 4 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 5, 2, 3, 4, 6 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 6, 2, 3, 7, 4, 5, 8 }
  uselistorder i32* %r30.global-to-local, { 4, 1, 0, 2, 3, 5, 6, 7 }
  uselistorder i32 34, { 0, 1, 3, 2 }
  uselistorder i32 26, { 6, 0, 4, 5, 1, 7, 2, 8, 3, 9 }
  uselistorder i8 45, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000a878, { 1, 0 }
  uselistorder label %dec_label_pc_1000a86c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000a838, { 1, 0 }
  uselistorder label %dec_label_pc_1000a7f0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a7b8, { 1, 0 }
  uselistorder label %dec_label_pc_1000a78c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000a780, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a744, { 1, 0 }
  uselistorder label %dec_label_pc_1000a740, { 1, 0 }
  uselistorder label %dec_label_pc_1000a708, { 1, 0 }
}

define i32 @function_1000a890() local_unnamed_addr {
dec_label_pc_1000a890:
  %stack_var_-40 = alloca i32, align 4
  %v2_1000a8a8 = ptrtoint i32* %stack_var_-40 to i32
  %v0_1000a8b4 = load i32, i32* @r3, align 4
  store i32 %v0_1000a8b4, i32* @r31, align 4
  store i32 %v2_1000a8a8, i32* @r3, align 4
  %v3_1000a8c0 = call i32 @function_1000ab84(i32 %v2_1000a8a8, i32 ptrtoint ([3 x i8]* @global_var_1000ab7c.329 to i32))
  %v0_1000a8c8 = call i32 @function_1000ab7c()
  %v3_1000a8d0 = load i32, i32* @global_var_1001c290.352, align 4
  %v3_1000a8d4 = icmp eq i32 %v3_1000a8d0, 0
  br i1 %v3_1000a8d4, label %dec_label_pc_1000a8e8, label %dec_label_pc_1000a8dc

dec_label_pc_1000a8dc:                            ; preds = %dec_label_pc_1000a890
  %v0_1000a8dc = load i32, i32* @r31, align 4
  %v3_1000a8e4 = call i32 @unknown_0(i32 %v0_1000a8dc, i32 268566528)
  br label %dec_label_pc_1000a8e8

dec_label_pc_1000a8e8:                            ; preds = %dec_label_pc_1000a890, %dec_label_pc_1000a8dc
  store i32 %v2_1000a8a8, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v2_1000a8f0 = call i32 @function_1000ab84(i32 %v2_1000a8a8, i32 1)
  store i32 %v2_1000a8f0, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000a8f8.354 to i32), i32* @lr, align 4
  %v1_1000a8f4 = call i32 @function_1000aae8(i32 %v2_1000a8f0)
  %v0_1000a90c = load i32, i32* @r31, align 4
  %v1_1000a910 = call i32 @function_1000af1c(i32 %v0_1000a90c)
  ret i32 %v1_1000a910

; uselistorder directives
  uselistorder i32 %v2_1000a8a8, { 1, 0, 3, 2 }
  uselistorder i32 (i32, i32)* @function_1000ab84, { 1, 0, 5, 4, 3, 2 }
  uselistorder label %dec_label_pc_1000a8e8, { 1, 0 }
}

define i32 @function_1000a914(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a914:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-432 = alloca i32, align 4
  %stack_var_-440 = alloca i32, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  %v3_1000a914 = icmp eq i32 %arg1, 0
  br i1 %v3_1000a914, label %dec_label_pc_1000aac8, label %dec_label_pc_1000a944.lr.ph

dec_label_pc_1000a944.lr.ph:                      ; preds = %dec_label_pc_1000a914
  %v2_1000a938 = ptrtoint i32* %stack_var_-440 to i32
  store i32 %v2_1000a938, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_1000a94442 = add i32 %v2_1000a938, 132
  %v3_1000a94443 = inttoptr i32 %v2_1000a94442 to i32*
  store i32 0, i32* %v3_1000a94443, align 4
  %v0_1000a94844 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a94845 = add i32 %v0_1000a94844, -1
  store i32 %v1_1000a94845, i32* %r11.global-to-local, align 4
  %v1_1000a94c46 = mul i32 %v1_1000a94845, 4
  %v1_1000a95047 = load i32, i32* %r7.global-to-local, align 4
  %v2_1000a95048 = add i32 %v1_1000a95047, %v1_1000a94c46
  %v0_1000a95449 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a95450 = add i32 %v0_1000a95449, -1
  store i32 %v1_1000a95450, i32* %ctr.global-to-local, align 4
  %v2_1000a95451 = icmp eq i32 %v1_1000a95450, 0
  br i1 %v2_1000a95451, label %dec_label_pc_1000a958, label %dec_label_pc_1000a944.dec_label_pc_1000a944_crit_edge

dec_label_pc_1000a944.dec_label_pc_1000a944_crit_edge: ; preds = %dec_label_pc_1000a944.lr.ph, %dec_label_pc_1000a944.dec_label_pc_1000a944_crit_edge
  %v2_1000a95052 = phi i32 [ %v2_1000a950, %dec_label_pc_1000a944.dec_label_pc_1000a944_crit_edge ], [ %v2_1000a95048, %dec_label_pc_1000a944.lr.ph ]
  %v0_1000a944.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000a944 = add i32 %v2_1000a95052, 8
  %v3_1000a944 = inttoptr i32 %v2_1000a944 to i32*
  store i32 %v0_1000a944.pre, i32* %v3_1000a944, align 4
  %v0_1000a948 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a948 = add i32 %v0_1000a948, -1
  store i32 %v1_1000a948, i32* %r11.global-to-local, align 4
  %v1_1000a94c = mul i32 %v1_1000a948, 4
  %v1_1000a950 = load i32, i32* %r7.global-to-local, align 4
  %v2_1000a950 = add i32 %v1_1000a950, %v1_1000a94c
  %v0_1000a954 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a954 = add i32 %v0_1000a954, -1
  store i32 %v1_1000a954, i32* %ctr.global-to-local, align 4
  %v2_1000a954 = icmp eq i32 %v1_1000a954, 0
  br i1 %v2_1000a954, label %dec_label_pc_1000a958, label %dec_label_pc_1000a944.dec_label_pc_1000a944_crit_edge

dec_label_pc_1000a958:                            ; preds = %dec_label_pc_1000a944.dec_label_pc_1000a944_crit_edge, %dec_label_pc_1000a944.lr.ph
  %v0_1000a96c.pre = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a958 = ptrtoint i32* %stack_var_-432 to i32
  store i32 %v2_1000a958, i32* @r29, align 4
  store i32 %v2_1000a958, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  store i32 %v0_1000a96c.pre, i32* %stack_var_-440, align 4
  %v0_1000a970 = call i32 @function_10009fd0()
  store i32 %v0_1000a970, i32* %r3.global-to-local, align 4
  %v1_1000a974 = icmp slt i32 %v0_1000a970, 0
  br i1 %v1_1000a974, label %dec_label_pc_1000aad0, label %dec_label_pc_1000a97c

dec_label_pc_1000a97c:                            ; preds = %dec_label_pc_1000a958
  %v2_1000a97c = ptrtoint i32* %stack_var_-304 to i32
  store i32 %v2_1000a97c, i32* @r31, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268478864, i32* @lr, align 4
  %v3_1000a98c = call i32 @function_10009424(i32 0, i32 %v2_1000a958, i32 %v2_1000a97c)
  store i32 %v3_1000a98c, i32* %r3.global-to-local, align 4
  %v3_1000a990 = icmp eq i32 %v3_1000a98c, 0
  br i1 %v3_1000a990, label %dec_label_pc_1000a998, label %dec_label_pc_1000aad0

dec_label_pc_1000a998:                            ; preds = %dec_label_pc_1000a97c
  store i32 %v2_1000a97c, i32* %r3.global-to-local, align 4
  %v2_1000a9a0 = call i32 @function_10009fa8(i32 %v2_1000a97c, i32 17)
  store i32 %v2_1000a9a0, i32* %r3.global-to-local, align 4
  %v3_1000a9a4 = icmp eq i32 %v2_1000a9a0, 0
  br i1 %v3_1000a9a4, label %dec_label_pc_1000a9c4.lr.ph, label %dec_label_pc_1000aa90

dec_label_pc_1000a9c4.lr.ph:                      ; preds = %dec_label_pc_1000a998
  store i32 %v2_1000a938, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %v3_1000a94443, align 4
  %v0_1000a9c833 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a9c834 = add i32 %v0_1000a9c833, -1
  store i32 %v1_1000a9c834, i32* %r11.global-to-local, align 4
  %v1_1000a9cc35 = mul i32 %v1_1000a9c834, 4
  %v1_1000a9d036 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a9d037 = add i32 %v1_1000a9d036, %v1_1000a9cc35
  %v0_1000a9d438 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a9d439 = add i32 %v0_1000a9d438, -1
  store i32 %v1_1000a9d439, i32* %ctr.global-to-local, align 4
  %v2_1000a9d440 = icmp eq i32 %v1_1000a9d439, 0
  br i1 %v2_1000a9d440, label %dec_label_pc_1000a9d8, label %dec_label_pc_1000a9c4.dec_label_pc_1000a9c4_crit_edge

dec_label_pc_1000a9c4.dec_label_pc_1000a9c4_crit_edge: ; preds = %dec_label_pc_1000a9c4.lr.ph, %dec_label_pc_1000a9c4.dec_label_pc_1000a9c4_crit_edge
  %v2_1000a9d041 = phi i32 [ %v2_1000a9d0, %dec_label_pc_1000a9c4.dec_label_pc_1000a9c4_crit_edge ], [ %v2_1000a9d037, %dec_label_pc_1000a9c4.lr.ph ]
  %v0_1000a9c4.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000a9c4 = add i32 %v2_1000a9d041, 8
  %v3_1000a9c4 = inttoptr i32 %v2_1000a9c4 to i32*
  store i32 %v0_1000a9c4.pre, i32* %v3_1000a9c4, align 4
  %v0_1000a9c8 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a9c8 = add i32 %v0_1000a9c8, -1
  store i32 %v1_1000a9c8, i32* %r11.global-to-local, align 4
  %v1_1000a9cc = mul i32 %v1_1000a9c8, 4
  %v1_1000a9d0 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a9d0 = add i32 %v1_1000a9d0, %v1_1000a9cc
  %v0_1000a9d4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a9d4 = add i32 %v0_1000a9d4, -1
  store i32 %v1_1000a9d4, i32* %ctr.global-to-local, align 4
  %v2_1000a9d4 = icmp eq i32 %v1_1000a9d4, 0
  br i1 %v2_1000a9d4, label %dec_label_pc_1000a9d8, label %dec_label_pc_1000a9c4.dec_label_pc_1000a9c4_crit_edge

dec_label_pc_1000a9d8:                            ; preds = %dec_label_pc_1000a9c4.dec_label_pc_1000a9c4_crit_edge, %dec_label_pc_1000a9c4.lr.ph
  store i32 %v2_1000a958, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  %v0_1000a9e0 = call i32 @function_10009fd0()
  store i32 %v0_1000a9e0, i32* %r3.global-to-local, align 4
  %v1_1000a9e4 = icmp slt i32 %v0_1000a9e0, 0
  br i1 %v1_1000a9e4, label %dec_label_pc_1000aad0, label %dec_label_pc_1000a9ec

dec_label_pc_1000a9ec:                            ; preds = %dec_label_pc_1000a9d8
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_1000a9f4 = ptrtoint i32* %stack_var_-176 to i32
  store i32 268478972, i32* @lr, align 4
  %v4_1000a9f8 = call i32 @function_1000b760(i32 17, i32* null, i32 %v2_1000a9f4)
  store i32 %v4_1000a9f8, i32* %r3.global-to-local, align 4
  %tmp30 = icmp sgt i32 %v4_1000a9f8, -1
  br i1 %tmp30, label %dec_label_pc_1000aa2c, label %dec_label_pc_1000aa04

dec_label_pc_1000aa04:                            ; preds = %dec_label_pc_1000a9ec
  %v0_1000aa04 = call i32 @function_100097e8()
  store i32 %v0_1000aa04, i32* %r3.global-to-local, align 4
  %v1_1000aa0c = inttoptr i32 %v0_1000aa04 to i32*
  %v2_1000aa0c = load i32, i32* %v1_1000aa0c, align 4
  store i32 %v2_1000aa0c, i32* @r28, align 4
  store i32 %v0_1000aa04, i32* @r29, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268479008, i32* @lr, align 4
  %v3_1000aa1c = call i32 @function_10009424(i32 2, i32 %v2_1000a97c, i32 0)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_1000aa24 = load i32, i32* @r28, align 4
  %v1_1000aa24 = load i32, i32* @r29, align 4
  %v2_1000aa24 = inttoptr i32 %v1_1000aa24 to i32*
  store i32 %v0_1000aa24, i32* %v2_1000aa24, align 4
  %v0_1000aae4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000aad4

dec_label_pc_1000aa2c:                            ; preds = %dec_label_pc_1000a9ec
  %v3_1000aa2c = load i32, i32* %stack_var_-176, align 4
  store i32 %v2_1000a97c, i32* @r28, align 4
  %v3_1000aa38 = icmp eq i32 %v3_1000aa2c, 1
  br i1 %v3_1000aa38, label %dec_label_pc_1000aa40, label %dec_label_pc_1000aa74

dec_label_pc_1000aa40:                            ; preds = %dec_label_pc_1000aa2c
  store i32 %v2_1000a938, i32* %r3.global-to-local, align 4
  store i32 268479052, i32* @lr, align 4
  %v2_1000aa48 = call i32 @function_1000b354(i32 %v2_1000a938, i32 %v2_1000a938)
  store i32 %v2_1000aa48, i32* %r3.global-to-local, align 4
  store i32 %v2_1000aa48, i32* @r31, align 4
  %v0_1000aa50 = call i32 @function_100097e8()
  store i32 %v0_1000aa50, i32* %r3.global-to-local, align 4
  store i32 %v0_1000aa50, i32* @r29, align 4
  %v1_1000aa60 = inttoptr i32 %v0_1000aa50 to i32*
  %v2_1000aa60 = load i32, i32* %v1_1000aa60, align 4
  store i32 %v2_1000aa60, i32* @r28, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268479084, i32* @lr, align 4
  %v3_1000aa68 = call i32 @function_10009424(i32 2, i32 %v2_1000a97c, i32 0)
  store i32 %v3_1000aa68, i32* %r3.global-to-local, align 4
  %v0_1000aa6c = load i32, i32* @r28, align 4
  %v1_1000aa6c = load i32, i32* @r29, align 4
  %v2_1000aa6c = inttoptr i32 %v1_1000aa6c to i32*
  store i32 %v0_1000aa6c, i32* %v2_1000aa6c, align 4
  %v0_1000aa9c.pr = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000aa9c

dec_label_pc_1000aa74:                            ; preds = %dec_label_pc_1000aa2c
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268479108, i32* @lr, align 4
  %v3_1000aa80 = call i32 @function_10009424(i32 2, i32 %v2_1000a97c, i32 0)
  br label %dec_label_pc_1000aa90

dec_label_pc_1000aa90:                            ; preds = %dec_label_pc_1000a998, %dec_label_pc_1000aa74
  store i32 %v2_1000a938, i32* %r3.global-to-local, align 4
  store i32 268479128, i32* @lr, align 4
  %v2_1000aa94 = call i32 @function_1000b354(i32 %v2_1000a938, i32 %v2_1000a938)
  store i32 %v2_1000aa94, i32* %r3.global-to-local, align 4
  store i32 %v2_1000aa94, i32* @r31, align 4
  br label %dec_label_pc_1000aa9c

dec_label_pc_1000aa9c:                            ; preds = %dec_label_pc_1000aa40, %dec_label_pc_1000aa90
  %v0_1000aa9c = phi i32 [ %v0_1000aa9c.pr, %dec_label_pc_1000aa40 ], [ %v2_1000aa94, %dec_label_pc_1000aa90 ]
  %v3_1000aa9c = icmp eq i32 %v0_1000aa9c, 0
  br i1 %v3_1000aa9c, label %dec_label_pc_1000aac8, label %dec_label_pc_1000aaa4

dec_label_pc_1000aaa4:                            ; preds = %dec_label_pc_1000aa9c
  %v3_1000aab4 = load i32, i32* %stack_var_-440, align 4
  %v0_1000aab8 = call i32 @__asm_mfcr()
  store i32 %v0_1000aab8, i32* %r3.global-to-local, align 4
  %v1_1000aabc = call i32 @__asm_rlwinm(i32 %v0_1000aab8, i32 30, i32 31, i32 31)
  %v2_1000aac0 = add i32 %v3_1000aab4, %v1_1000aabc
  store i32 %v2_1000aac0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000aad4

dec_label_pc_1000aac8:                            ; preds = %dec_label_pc_1000aa9c, %dec_label_pc_1000a914
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000aad4

dec_label_pc_1000aad0:                            ; preds = %dec_label_pc_1000a97c, %dec_label_pc_1000a9d8, %dec_label_pc_1000a958
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000aad4

dec_label_pc_1000aad4:                            ; preds = %dec_label_pc_1000aac8, %dec_label_pc_1000aaa4, %dec_label_pc_1000aa04, %dec_label_pc_1000aad0
  %v0_1000aae4 = phi i32 [ 0, %dec_label_pc_1000aac8 ], [ %v2_1000aac0, %dec_label_pc_1000aaa4 ], [ %v0_1000aae4.pre, %dec_label_pc_1000aa04 ], [ -1, %dec_label_pc_1000aad0 ]
  ret i32 %v0_1000aae4

; uselistorder directives
  uselistorder i32 %v1_1000a9d4, { 1, 0 }
  uselistorder i32 %v2_1000a97c, { 2, 1, 3, 0, 5, 4, 6, 7 }
  uselistorder i32 %v1_1000a954, { 1, 0 }
  uselistorder i32 %v2_1000a938, { 2, 1, 3, 6, 5, 4, 7, 0, 8 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 5, 7, 6, 0, 8, 2, 9, 10, 11, 12, 13, 14, 16, 17, 15, 18, 19, 20, 3, 21, 22, 4, 23, 24, 1 }
  uselistorder i32* %r11.global-to-local, { 7, 6, 4, 0, 1, 9, 8, 5, 2, 3 }
  uselistorder i32* %ctr.global-to-local, { 7, 6, 4, 0, 1, 9, 8, 5, 2, 3 }
  uselistorder i32 (i32, i32)* @function_1000b354, { 1, 0 }
  uselistorder i32 17, { 2, 37, 38, 3, 39, 4, 19, 20, 5, 6, 21, 22, 23, 7, 24, 25, 26, 8, 9, 10, 11, 12, 13, 14, 27, 15, 28, 29, 30, 16, 17, 18, 31, 0, 32, 1, 33, 34, 35, 36 }
  uselistorder label %dec_label_pc_1000aad4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000aad0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000aa9c, { 1, 0 }
  uselistorder label %dec_label_pc_1000aa90, { 1, 0 }
  uselistorder label %dec_label_pc_1000a9c4.dec_label_pc_1000a9c4_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000a944.dec_label_pc_1000a944_crit_edge, { 1, 0 }
}

define i32 @function_1000aae8(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000ab38:
  %v3_1000ab3c = load i32, i32* @global_var_1001c2a0.356, align 4
  %v3_1000ab40 = icmp eq i32 %v3_1000ab3c, 0
  br i1 %v3_1000ab40, label %dec_label_pc_1000ab50, label %dec_label_pc_1000ab48

dec_label_pc_1000ab48:                            ; preds = %dec_label_pc_1000ab38
  %v2_1000ab4c = load i32, i32* @r4, align 4
  %v3_1000ab4c = call i32 @unknown_0(i32 268566528, i32 %v2_1000ab4c)
  store i32 %v3_1000ab4c, i32* @r3, align 4
  br label %dec_label_pc_1000ab50

dec_label_pc_1000ab50:                            ; preds = %dec_label_pc_1000ab38, %dec_label_pc_1000ab48
  %v3_1000ab54 = load i32, i32* @global_var_1001c2a4.357, align 4
  %v3_1000ab58 = icmp eq i32 %v3_1000ab54, 0
  br i1 %v3_1000ab58, label %dec_label_pc_1000ab50.dec_label_pc_1000ab68_crit_edge, label %dec_label_pc_1000ab60

dec_label_pc_1000ab50.dec_label_pc_1000ab68_crit_edge: ; preds = %dec_label_pc_1000ab50
  %v0_1000ab78.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000ab68

dec_label_pc_1000ab60:                            ; preds = %dec_label_pc_1000ab50
  %v2_1000ab64 = load i32, i32* @r4, align 4
  %v3_1000ab64 = call i32 @unknown_0(i32 268566528, i32 %v2_1000ab64)
  br label %dec_label_pc_1000ab68

dec_label_pc_1000ab68:                            ; preds = %dec_label_pc_1000ab50.dec_label_pc_1000ab68_crit_edge, %dec_label_pc_1000ab60
  %v0_1000ab78 = phi i32 [ %v0_1000ab78.pre, %dec_label_pc_1000ab50.dec_label_pc_1000ab68_crit_edge ], [ %v3_1000ab64, %dec_label_pc_1000ab60 ]
  ret i32 %v0_1000ab78

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000ab68, { 1, 0 }
  uselistorder label %dec_label_pc_1000ab50, { 1, 0 }
}

define i32 @function_1000ab7c() local_unnamed_addr {
dec_label_pc_1000ab7c:
  ret i32 0
}

define i32 @function_1000ab84(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000ab84:
  %v0_1000ab84 = load i32, i32* @r3, align 4
  ret i32 %v0_1000ab84
}

define i32 @function_1000ab88(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000ab88:
  store i32 %arg2, i32* @r30, align 4
  store i32 1, i32* @r4, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268479404, i32* @lr, align 4
  %v1_1000aba8 = call i32 @function_10008fe4(i32 1)
  %v3_1000abac = icmp eq i32 %v1_1000aba8, -1
  br i1 %v3_1000abac, label %dec_label_pc_1000abb4, label %dec_label_pc_1000abd4

dec_label_pc_1000abb4:                            ; preds = %dec_label_pc_1000ab88
  %v0_1000abb8 = load i32, i32* @r30, align 4
  store i32 268479432, i32* @lr, align 4
  %v3_1000abc4 = call i32 @function_10009234(i32 ptrtoint ([10 x i8]* @global_var_1000bdc4.358 to i32), i32 %v0_1000abb8)
  %v1_1000abc8 = load i32, i32* @r31, align 4
  %v4_1000abc8 = icmp eq i32 %v3_1000abc4, %v1_1000abc8
  br i1 %v4_1000abc8, label %dec_label_pc_1000abd4, label %dec_label_pc_1000abd0

dec_label_pc_1000abd0:                            ; preds = %dec_label_pc_1000abb4
  %v1_1000abd0 = call i32 @function_1000b824(i32 %v3_1000abc4)
  br label %dec_label_pc_1000abd4

dec_label_pc_1000abd4:                            ; preds = %dec_label_pc_1000ab88, %dec_label_pc_1000abb4, %dec_label_pc_1000abd0
  %v0_1000abe4 = phi i32 [ %v1_1000aba8, %dec_label_pc_1000ab88 ], [ %v3_1000abc4, %dec_label_pc_1000abb4 ], [ %v1_1000abd0, %dec_label_pc_1000abd0 ]
  ret i32 %v0_1000abe4

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_10009234, { 0, 4, 9, 1, 8, 7, 6, 5, 3, 2 }
  uselistorder i32 (i32)* @function_10008fe4, { 0, 5, 13, 12, 15, 14, 9, 8, 11, 10, 7, 6, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_1000abd4, { 2, 1, 0 }
}

define i32 @function_1000abe8(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000abe8:
  %v3_1000ac08 = load i32, i32* @global_var_1001c2a8.359, align 4
  %v3_1000ac0c = icmp eq i32 %v3_1000ac08, 0
  br i1 %v3_1000ac0c, label %dec_label_pc_1000ac30, label %dec_label_pc_1000ac54

dec_label_pc_1000ac30:                            ; preds = %dec_label_pc_1000abe8
  store i32 1, i32* @global_var_1001c2a8.359, align 4
  store i32 4096, i32* @global_var_1001c29c.341, align 4
  br label %dec_label_pc_1000ac54

dec_label_pc_1000ac54:                            ; preds = %dec_label_pc_1000ac30, %dec_label_pc_1000abe8
  %v0_1000ac64 = load i32, i32* @r3, align 4
  ret i32 %v0_1000ac64
}

define i32 @function_1000ac68(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1000ac68:
  %r25.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  store i32 %tmp, i32* @r30, align 4
  %v1_1000ac80 = mul i32 %arg2, 4
  %v2_1000ac84 = add i32 %tmp, %v1_1000ac80
  %v0_1000ac88 = load i32, i32* @r9, align 4
  store i32 %v0_1000ac88, i32* @global_var_1001c294.361, align 4
  %v1_1000ac8c = add i32 %v2_1000ac84, 4
  store i32 268566528, i32* %r29.global-to-local, align 4
  store i32 %v1_1000ac8c, i32* @global_var_1001c298.362, align 4
  store i32 %arg6, i32* @global_var_1001c2a4.357, align 4
  store i32 %arg1, i32* %r25.global-to-local, align 4
  store i32 %arg4, i32* %r28.global-to-local, align 4
  %v2_1000acac = load i32, i32* %arg3, align 4
  store i32 %arg5, i32* %r27.global-to-local, align 4
  %v4_1000acb4 = icmp eq i32 %v1_1000ac8c, %v2_1000acac
  br i1 %v4_1000acb4, label %dec_label_pc_1000acbc, label %dec_label_pc_1000acc0

dec_label_pc_1000acbc:                            ; preds = %dec_label_pc_1000ac68
  store i32 %v2_1000ac84, i32* @global_var_1001c298.362, align 4
  br label %dec_label_pc_1000acc0

dec_label_pc_1000acc0:                            ; preds = %dec_label_pc_1000ac68, %dec_label_pc_1000acbc
  %v2_1000acc0 = ptrtoint i32* %stack_var_-168 to i32
  store i32 268479696, i32* @lr, align 4
  %v3_1000accc = call i32 @function_100098d0(i32 %v2_1000acc0, i32 0, i32 120)
  %storemerge.pre = load i32, i32* @global_var_1001c298.362, align 4
  br label %dec_label_pc_1000acdc

dec_label_pc_1000acdc:                            ; preds = %dec_label_pc_1000acdc, %dec_label_pc_1000acc0
  %storemerge = phi i32 [ %storemerge.pre, %dec_label_pc_1000acc0 ], [ %v1_1000ace0, %dec_label_pc_1000acdc ]
  %v1_1000acdc = inttoptr i32 %storemerge to i32*
  %v2_1000acdc = load i32, i32* %v1_1000acdc, align 4
  %v1_1000ace0 = add i32 %storemerge, 4
  %v3_1000ace4 = icmp eq i32 %v2_1000acdc, 0
  br i1 %v3_1000ace4, label %dec_label_pc_1000acec, label %dec_label_pc_1000acdc

dec_label_pc_1000acec:                            ; preds = %dec_label_pc_1000acdc
  store i32 %v1_1000ace0, i32* %r29.global-to-local, align 4
  %v1_1000ad1812 = inttoptr i32 %v1_1000ace0 to i32*
  %v2_1000ad1813 = load i32, i32* %v1_1000ad1812, align 4
  %v3_1000ad1c16 = icmp eq i32 %v2_1000ad1813, 0
  br i1 %v3_1000ad1c16, label %dec_label_pc_1000ad24, label %dec_label_pc_1000acf4

dec_label_pc_1000acf4:                            ; preds = %dec_label_pc_1000acec, %dec_label_pc_1000ad14
  %v0_1000ad08 = phi i32 [ %v1_1000ad14, %dec_label_pc_1000ad14 ], [ %v1_1000ace0, %dec_label_pc_1000acec ]
  %v0_1000acfc = phi i32 [ %v2_1000ad18, %dec_label_pc_1000ad14 ], [ %v2_1000ad1813, %dec_label_pc_1000acec ]
  %v2_1000acf4 = icmp ugt i32 %v0_1000acfc, 14
  br i1 %v2_1000acf4, label %dec_label_pc_1000ad14, label %dec_label_pc_1000acfc

dec_label_pc_1000acfc:                            ; preds = %dec_label_pc_1000acf4
  %v1_1000acfc = mul i32 %v0_1000acfc, 8
  %v2_1000ad04 = add i32 %v1_1000acfc, %v2_1000acc0
  store i32 %v2_1000ad04, i32* @r3, align 4
  store i32 %v0_1000ad08, i32* @r4, align 4
  store i32 8, i32* @r5, align 4
  store i32 268479764, i32* @lr, align 4
  %v0_1000ad10 = call i32 @function_1000b5d0()
  %v0_1000ad14.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000ad14

dec_label_pc_1000ad14:                            ; preds = %dec_label_pc_1000acf4, %dec_label_pc_1000acfc
  %v0_1000ad14 = phi i32 [ %v0_1000ad08, %dec_label_pc_1000acf4 ], [ %v0_1000ad14.pre, %dec_label_pc_1000acfc ]
  %v1_1000ad14 = add i32 %v0_1000ad14, 8
  store i32 %v1_1000ad14, i32* %r29.global-to-local, align 4
  %v1_1000ad18 = inttoptr i32 %v1_1000ad14 to i32*
  %v2_1000ad18 = load i32, i32* %v1_1000ad18, align 4
  %v3_1000ad1c = icmp eq i32 %v2_1000ad18, 0
  br i1 %v3_1000ad1c, label %dec_label_pc_1000ad24, label %dec_label_pc_1000acf4

dec_label_pc_1000ad24:                            ; preds = %dec_label_pc_1000ad14, %dec_label_pc_1000acec
  %v1_1000ad28 = call i32 @function_1000b974(i32 %v2_1000acc0)
  store i32 %v1_1000ad28, i32* @r3, align 4
  store i32 268479792, i32* @lr, align 4
  %v1_1000ad2c = call i32 @function_1000abe8(i32 %v1_1000ad28)
  %v3_1000ad34 = icmp eq i32 %tmp27, 0
  br i1 %v3_1000ad34, label %dec_label_pc_1000ad3c, label %dec_label_pc_1000ad40

dec_label_pc_1000ad3c:                            ; preds = %dec_label_pc_1000ad24
  br label %dec_label_pc_1000ad40

dec_label_pc_1000ad40:                            ; preds = %dec_label_pc_1000ad24, %dec_label_pc_1000ad3c
  %v0_1000ad48 = phi i32 [ %tmp27, %dec_label_pc_1000ad24 ], [ 4096, %dec_label_pc_1000ad3c ]
  store i32 %v0_1000ad48, i32* @global_var_1001c29c.341, align 4
  %v3_1000ad4c = icmp eq i32 %tmp26, -1
  br i1 %v3_1000ad4c, label %dec_label_pc_1000ad54, label %dec_label_pc_1000ad88

dec_label_pc_1000ad54:                            ; preds = %dec_label_pc_1000ad40
  store i32 268479832, i32* @lr, align 4
  %v1_1000ad54 = call i32 @function_1000b28c(i32 268566528)
  store i32 %v1_1000ad54, i32* %r29.global-to-local, align 4
  store i32 268479840, i32* @lr, align 4
  %v0_1000ad5c = call i32 @function_1000b1fc()
  %v4_1000ad60 = icmp eq i32 %v1_1000ad54, %v0_1000ad5c
  br i1 %v4_1000ad60, label %dec_label_pc_1000ad68, label %dec_label_pc_1000ada4

dec_label_pc_1000ad68:                            ; preds = %dec_label_pc_1000ad54
  store i32 268479852, i32* @lr, align 4
  %v1_1000ad68 = call i32 @function_1000b244(i32 %v0_1000ad5c)
  store i32 %v1_1000ad68, i32* %r29.global-to-local, align 4
  store i32 268479860, i32* @lr, align 4
  %v0_1000ad70 = call i32 @function_1000b1b4()
  %v4_1000ad74 = icmp eq i32 %v1_1000ad68, %v0_1000ad70
  br i1 %v4_1000ad74, label %dec_label_pc_1000ad7c.thread, label %dec_label_pc_1000ada4

dec_label_pc_1000ad7c.thread:                     ; preds = %dec_label_pc_1000ad68
  br label %dec_label_pc_1000add4

dec_label_pc_1000ad88:                            ; preds = %dec_label_pc_1000ad40
  %v4_1000ad8c = icmp eq i32 %tmp26, %tmp25
  br i1 %v4_1000ad8c, label %dec_label_pc_1000ad94, label %dec_label_pc_1000ada4

dec_label_pc_1000ad94:                            ; preds = %dec_label_pc_1000ad88
  br label %dec_label_pc_1000ada4

dec_label_pc_1000ada4:                            ; preds = %dec_label_pc_1000ad94, %dec_label_pc_1000ad88, %dec_label_pc_1000ad68, %dec_label_pc_1000ad54
  store i32 268479924, i32* @lr, align 4
  %v2_1000adb0 = call i32 @function_1000ab88(i32 0, i32 32768)
  store i32 268479940, i32* @lr, align 4
  %v2_1000adc0 = call i32 @function_1000ab88(i32 1, i32 32770)
  store i32 268479956, i32* @lr, align 4
  %v2_1000add0 = call i32 @function_1000ab88(i32 2, i32 32770)
  br label %dec_label_pc_1000add4

dec_label_pc_1000add4:                            ; preds = %dec_label_pc_1000ad7c.thread, %dec_label_pc_1000ada4
  %v0_1000ade0 = load i32, i32* @r30, align 4
  %v1_1000ade0 = inttoptr i32 %v0_1000ade0 to i32*
  %v2_1000ade0 = load i32, i32* %v1_1000ade0, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v2_1000ade0, i32* inttoptr (i32 268550724 to i32*), align 4
  %v0_1000ae00 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_1000ae00, i32* @global_var_1001c2a0.356, align 4
  br i1 false, label %dec_label_pc_1000ae08, label %dec_label_pc_1000ae80

dec_label_pc_1000ae08:                            ; preds = %dec_label_pc_1000add4, %dec_label_pc_1000ae08
  br i1 undef, label %dec_label_pc_1000ae08, label %dec_label_pc_1000ae80

dec_label_pc_1000ae80:                            ; preds = %dec_label_pc_1000ae08, %dec_label_pc_1000add4
  %v0_1000ae2c = load i32, i32* %r28.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_1000ae2c)
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_1000ae90 = call i32 @function_100097e8()
  %v2_1000ae98 = inttoptr i32 %v0_1000ae90 to i32*
  store i32 0, i32* %v2_1000ae98, align 4
  %v0_1000aec4 = load i32, i32* %r25.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_1000aec4)
  %v0_1000aed0 = call i32 @function_1000a890()
  ret i32 %v0_1000aed0

; uselistorder directives
  uselistorder i32 %v2_1000ad18, { 1, 0 }
  uselistorder i32 %v1_1000ad14, { 2, 1, 0 }
  uselistorder i32 %v1_1000ace0, { 0, 2, 1, 3 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v2_1000acc0, { 1, 0, 2 }
  uselistorder i32* %r29.global-to-local, { 6, 7, 1, 2, 4, 3, 0, 5 }
  uselistorder i32 ()* @function_1000a890, { 0, 4, 3, 2, 1 }
  uselistorder i1 false, { 0, 5, 6, 7, 1, 2, 3, 4, 8, 9 }
  uselistorder i32 (i32, i32)* @function_1000ab88, { 0, 2, 1 }
  uselistorder i32 4096, { 1, 3, 4, 0, 8, 5, 9, 6, 10, 7, 2 }
  uselistorder i32 14, { 33, 0, 2, 1, 13, 4, 3, 14, 9, 10, 15, 16, 11, 12, 17, 18, 19, 5, 20, 21, 22, 6, 23, 24, 25, 26, 27, 7, 28, 29, 30, 31, 32, 8 }
  uselistorder i32* @r9, { 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 11 }
  uselistorder label %dec_label_pc_1000ae08, { 1, 0 }
  uselistorder label %dec_label_pc_1000add4, { 1, 0 }
  uselistorder label %dec_label_pc_1000ad40, { 1, 0 }
  uselistorder label %dec_label_pc_1000ad14, { 1, 0 }
  uselistorder label %dec_label_pc_1000acf4, { 1, 0 }
  uselistorder label %dec_label_pc_1000acc0, { 1, 0 }
}

define i32 @function_1000aed4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000aed4:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000aeec = call i32 @__asm_mfcr()
  %v1_1000aef0 = and i32 %v0_1000aeec, 268435456
  %v3_1000aef0 = icmp eq i32 %v1_1000aef0, 0
  store i32 %v0_1000aeec, i32* %r31.global-to-local, align 4
  br i1 %v3_1000aef0, label %dec_label_pc_1000af08, label %dec_label_pc_1000aefc

dec_label_pc_1000aefc:                            ; preds = %dec_label_pc_1000aed4
  %v0_1000aefc = call i32 @function_100097e8()
  %v0_1000af00 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000af00 = inttoptr i32 %v0_1000aefc to i32*
  store i32 %v0_1000af00, i32* %v2_1000af00, align 4
  br label %dec_label_pc_1000af08

dec_label_pc_1000af08:                            ; preds = %dec_label_pc_1000aed4, %dec_label_pc_1000aefc
  %v0_1000af18 = phi i32 [ %v0_1000aeec, %dec_label_pc_1000aed4 ], [ -1, %dec_label_pc_1000aefc ]
  ret i32 %v0_1000af18

; uselistorder directives
  uselistorder label %dec_label_pc_1000af08, { 1, 0 }
}

define i32 @function_1000af1c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000af1c:
  %r31.global-to-local = alloca i32, align 4
  br label %dec_label_pc_1000af30

dec_label_pc_1000af30:                            ; preds = %dec_label_pc_1000af30.backedge, %dec_label_pc_1000af1c
  %v0_1000af3c = call i32 @__asm_mfcr()
  %v1_1000af40 = and i32 %v0_1000af3c, 268435456
  %v3_1000af40 = icmp eq i32 %v1_1000af40, 0
  store i32 %v0_1000af3c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000af40, label %dec_label_pc_1000af30.backedge, label %dec_label_pc_1000af4c

dec_label_pc_1000af4c:                            ; preds = %dec_label_pc_1000af30
  %v0_1000af4c = call i32 @function_100097e8()
  %v0_1000af50 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000af50 = inttoptr i32 %v0_1000af4c to i32*
  store i32 %v0_1000af50, i32* %v2_1000af50, align 4
  br label %dec_label_pc_1000af30.backedge

dec_label_pc_1000af30.backedge:                   ; preds = %dec_label_pc_1000af4c, %dec_label_pc_1000af30
  br label %dec_label_pc_1000af30
}

define i32 @function_1000af58(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000af58:
  %stack_var_-104 = alloca i32, align 4
  %v2_1000af64 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1000af64, i32* @r29, align 4
  %v0_1000af6c = load i32, i32* @r4, align 4
  store i32 %v0_1000af6c, i32* @r30, align 4
  %v0_1000af7c = call i32 @__asm_mfcr()
  %v1_1000af80 = and i32 %v0_1000af7c, 268435456
  %v3_1000af80 = icmp eq i32 %v1_1000af80, 0
  store i32 -1, i32* @r28, align 4
  store i32 %v0_1000af7c, i32* @r31, align 4
  br i1 %v3_1000af80, label %dec_label_pc_1000af9c, label %dec_label_pc_1000af90

dec_label_pc_1000af90:                            ; preds = %dec_label_pc_1000af58
  %v0_1000af90 = call i32 @function_100097e8()
  %v0_1000af94 = load i32, i32* @r31, align 4
  %v2_1000af94 = inttoptr i32 %v0_1000af90 to i32*
  store i32 %v0_1000af94, i32* %v2_1000af94, align 4
  br label %dec_label_pc_1000afb4

dec_label_pc_1000af9c:                            ; preds = %dec_label_pc_1000af58
  %v3_1000af9c = icmp eq i32 %v0_1000af7c, 0
  store i32 %v0_1000af7c, i32* @r28, align 4
  br i1 %v3_1000af9c, label %dec_label_pc_1000afb0, label %dec_label_pc_1000afb4

dec_label_pc_1000afb0:                            ; preds = %dec_label_pc_1000af9c
  %v0_1000afa4 = load i32, i32* @r30, align 4
  store i32 268480436, i32* @lr, align 4
  %v4_1000afb0 = call i32 @function_1000b520(i32* nonnull %stack_var_-104, i32 %v0_1000afa4, i32 0)
  br label %dec_label_pc_1000afb4

dec_label_pc_1000afb4:                            ; preds = %dec_label_pc_1000af9c, %dec_label_pc_1000af90, %dec_label_pc_1000afb0
  %v0_1000afb8 = load i32, i32* @r28, align 4
  ret i32 %v0_1000afb8

; uselistorder directives
  uselistorder i32 %v0_1000af7c, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1000afb4, { 2, 0, 1 }
}

define i32 @function_1000afcc(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000afcc:
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v0_1000afe0 = call i32 @function_1000b05c()
  store i32 %v0_1000afe0, i32* @r30, align 4
  %tmp18 = icmp slt i32 %v0_1000afe0, 1
  br i1 %tmp18, label %dec_label_pc_1000b044, label %dec_label_pc_1000afec

dec_label_pc_1000afec:                            ; preds = %dec_label_pc_1000afcc
  %v0_1000afec = load i32, i32* @r31, align 4
  %v2_1000afec = add i32 %v0_1000afec, %v0_1000afe0
  store i32 %v2_1000afec, i32* %r29.global-to-local, align 4
  %v2_1000b0343 = icmp ult i32 %v0_1000afec, %v2_1000afec
  br i1 %v2_1000b0343, label %dec_label_pc_1000aff4, label %dec_label_pc_1000b044

dec_label_pc_1000aff4:                            ; preds = %dec_label_pc_1000afec, %dec_label_pc_1000aff4
  %v1_1000b004 = phi i32 [ %v2_1000b030, %dec_label_pc_1000aff4 ], [ %v0_1000afec, %dec_label_pc_1000afec ]
  %v1_1000b03810.in = phi i32 [ %v2_1000b030, %dec_label_pc_1000aff4 ], [ %v0_1000afec, %dec_label_pc_1000afec ]
  %v1_1000b03c11.in = phi i32 [ %v2_1000b030, %dec_label_pc_1000aff4 ], [ %v0_1000afec, %dec_label_pc_1000afec ]
  %v1_1000b03810 = add i32 %v1_1000b03810.in, 11
  %v1_1000b03c11 = add i32 %v1_1000b03c11.in, 19
  %v1_1000aff4 = add i32 %v1_1000b004, 4
  %v2_1000aff4 = inttoptr i32 %v1_1000aff4 to i32*
  %v3_1000aff4 = load i32, i32* %v2_1000aff4, align 4
  store i32 %v3_1000aff4, i32* %r11.global-to-local, align 4
  %v1_1000aff8 = add i32 %v1_1000b004, 12
  %v2_1000aff8 = inttoptr i32 %v1_1000aff8 to i32*
  %v3_1000aff8 = load i32, i32* %v2_1000aff8, align 4
  %v1_1000affc = add i32 %v1_1000b004, 16
  %v2_1000affc = inttoptr i32 %v1_1000affc to i16*
  %v3_1000affc = load i16, i16* %v2_1000affc, align 2
  %v4_1000affc = zext i16 %v3_1000affc to i32
  store i32 %v4_1000affc, i32* %r5.global-to-local, align 4
  %v1_1000b000 = add i32 %v1_1000b004, 18
  %v2_1000b000 = inttoptr i32 %v1_1000b000 to i8*
  %v3_1000b000 = load i8, i8* %v2_1000b000, align 1
  %v4_1000b000 = zext i8 %v3_1000b000 to i32
  store i32 %v4_1000b000, i32* %r9.global-to-local, align 4
  store i32 %v3_1000aff8, i32* %v2_1000aff4, align 4
  %v0_1000b008 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b008 = load i32, i32* @r31, align 4
  %v2_1000b008 = inttoptr i32 %v1_1000b008 to i32*
  store i32 %v0_1000b008, i32* %v2_1000b008, align 4
  %v0_1000b00c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b00c = trunc i32 %v0_1000b00c to i8
  %v2_1000b00c = load i32, i32* @r31, align 4
  %v3_1000b00c = add i32 %v2_1000b00c, 10
  %v4_1000b00c = inttoptr i32 %v3_1000b00c to i8*
  store i8 %v1_1000b00c, i8* %v4_1000b00c, align 1
  %v0_1000b010 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000b010 = trunc i32 %v0_1000b010 to i16
  %v2_1000b010 = load i32, i32* @r31, align 4
  %v3_1000b010 = add i32 %v2_1000b010, 8
  %v4_1000b010 = inttoptr i32 %v3_1000b010 to i16*
  store i16 %v1_1000b010, i16* %v4_1000b010, align 2
  %v0_1000b014 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000b014 = add i32 %v0_1000b014, -19
  store i32 %v1_1000b014, i32* %r5.global-to-local, align 4
  store i32 268480540, i32* @lr, align 4
  %v3_1000b018 = call i32 @function_1000982c(i32 %v1_1000b03810, i32 %v1_1000b03c11, i32 %v1_1000b014)
  %v0_1000b01c = load i32, i32* @r31, align 4
  %v1_1000b01c = add i32 %v0_1000b01c, 8
  %v2_1000b01c = inttoptr i32 %v1_1000b01c to i16*
  %v3_1000b01c = load i16, i16* %v2_1000b01c, align 2
  %v4_1000b01c = zext i16 %v3_1000b01c to i32
  store i32 %v4_1000b01c, i32* %r5.global-to-local, align 4
  store i32 268480556, i32* @lr, align 4
  %v3_1000b028 = call i32 @function_1000982c(i32 %v0_1000b01c, i32 %v0_1000b01c, i32 %v4_1000b01c)
  %v0_1000b02c = load i32, i32* @r31, align 4
  %v1_1000b02c = add i32 %v0_1000b02c, 8
  %v2_1000b02c = inttoptr i32 %v1_1000b02c to i16*
  %v3_1000b02c = load i16, i16* %v2_1000b02c, align 2
  %v4_1000b02c = zext i16 %v3_1000b02c to i32
  %v2_1000b030 = add i32 %v4_1000b02c, %v0_1000b02c
  store i32 %v2_1000b030, i32* @r31, align 4
  %v1_1000b034 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b034 = icmp ult i32 %v2_1000b030, %v1_1000b034
  br i1 %v2_1000b034, label %dec_label_pc_1000aff4, label %dec_label_pc_1000b034.dec_label_pc_1000b044.loopexit_crit_edge

dec_label_pc_1000b034.dec_label_pc_1000b044.loopexit_crit_edge: ; preds = %dec_label_pc_1000aff4
  %v0_1000b048.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000b044

dec_label_pc_1000b044:                            ; preds = %dec_label_pc_1000afec, %dec_label_pc_1000b034.dec_label_pc_1000b044.loopexit_crit_edge, %dec_label_pc_1000afcc
  %v0_1000b048 = phi i32 [ %v0_1000afe0, %dec_label_pc_1000afcc ], [ %v0_1000b048.pre.pre, %dec_label_pc_1000b034.dec_label_pc_1000b044.loopexit_crit_edge ], [ %v0_1000afe0, %dec_label_pc_1000afec ]
  ret i32 %v0_1000b048

; uselistorder directives
  uselistorder i32 %v2_1000b030, { 3, 4, 2, 0, 1 }
  uselistorder i32 %v0_1000b01c, { 1, 0, 2 }
  uselistorder i32 %v1_1000b004, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1000afec, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v0_1000afe0, { 1, 2, 0, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @function_1000982c, { 1, 0, 2 }
  uselistorder i32 11, { 0, 30, 29, 2, 10, 11, 12, 13, 14, 15, 3, 16, 1, 17, 18, 19, 20, 21, 22, 4, 23, 24, 5, 25, 26, 8, 6, 27, 28, 9, 7 }
  uselistorder label %dec_label_pc_1000b044, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000aff4, { 1, 0 }
}

define i32 @function_1000b05c() local_unnamed_addr {
dec_label_pc_1000b05c:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000b060 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1000b060, i32* %stack_var_-48, align 4
  %v5_1000b060 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v4_1000b060, i32* %r9.global-to-local, align 4
  %v0_1000b06c = load i32, i32* @r5, align 4
  %v1_1000b06c = add i32 %v0_1000b06c, 30
  %v1_1000b070 = call i32 @__asm_rlwinm(i32 %v1_1000b06c, i32 0, i32 0, i32 27)
  store i32 %v5_1000b060, i32* @r31, align 4
  %v1_1000b080 = load i32, i32* @r1, align 4
  %v3_1000b080 = sub i32 %v1_1000b080, %v1_1000b070
  %v4_1000b080 = inttoptr i32 %v3_1000b080 to i32*
  store i32 %v4_1000b060, i32* %v4_1000b080, align 4
  %v0_1000b084 = load i32, i32* @r4, align 4
  store i32 %v0_1000b084, i32* @r28, align 4
  %v0_1000b088 = load i32, i32* @r5, align 4
  store i32 %v0_1000b088, i32* @r23, align 4
  %v0_1000b08c = load i32, i32* @r3, align 4
  store i32 %v0_1000b08c, i32* @r22, align 4
  %v1_1000b090 = add i32 %v3_1000b080, 23
  %v1_1000b094 = call i32 @__asm_rlwinm(i32 %v1_1000b090, i32 0, i32 0, i32 27)
  store i32 %v1_1000b094, i32* @r27, align 4
  store i32 %v1_1000b094, i32* %r4.global-to-local, align 4
  %v0_1000b0a4 = call i32 @__asm_mfcr()
  %v1_1000b0a8 = and i32 %v0_1000b0a4, 268435456
  store i32 %v1_1000b0a8, i32* %r9.global-to-local, align 4
  %v3_1000b0a8 = icmp eq i32 %v1_1000b0a8, 0
  store i32 %v0_1000b0a4, i32* %r30.global-to-local, align 4
  br i1 %v3_1000b0a8, label %dec_label_pc_1000b0c0, label %dec_label_pc_1000b0b4

dec_label_pc_1000b0b4:                            ; preds = %dec_label_pc_1000b05c
  %v0_1000b0b4 = call i32 @function_100097e8()
  %v0_1000b0b8 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000b0b8 = inttoptr i32 %v0_1000b0b4 to i32*
  store i32 %v0_1000b0b8, i32* %v2_1000b0b8, align 4
  br label %dec_label_pc_1000b0cc

dec_label_pc_1000b0c0:                            ; preds = %dec_label_pc_1000b05c
  %v3_1000b0c0 = icmp eq i32 %v0_1000b0a4, -1
  store i32 %v0_1000b0a4, i32* %r24.global-to-local, align 4
  br i1 %v3_1000b0c0, label %dec_label_pc_1000b0cc, label %dec_label_pc_1000b0d4

dec_label_pc_1000b0cc:                            ; preds = %dec_label_pc_1000b0c0, %dec_label_pc_1000b0b4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000b198

dec_label_pc_1000b0d4:                            ; preds = %dec_label_pc_1000b0c0
  %v0_1000b0d4 = load i32, i32* @r28, align 4
  store i32 %v0_1000b0d4, i32* %r29.global-to-local, align 4
  store i32 %v1_1000b094, i32* %r30.global-to-local, align 4
  store i32 -1, i32* @r25, align 4
  store i32 -1, i32* %r26.global-to-local, align 4
  %v2_1000b17c12 = add i32 %v0_1000b0a4, %v1_1000b094
  %v1_1000b18013 = load i32, i32* @r23, align 4
  %v2_1000b18014 = add i32 %v1_1000b18013, %v0_1000b0d4
  store i32 %v2_1000b18014, i32* %r10.global-to-local, align 4
  %v2_1000b18415 = icmp ult i32 %v1_1000b094, %v2_1000b17c12
  %v1_1000b18817 = add i32 %v0_1000b0d4, 19
  store i32 %v1_1000b18817, i32* @r3, align 4
  %v1_1000b18c18 = add i32 %v1_1000b094, 19
  store i32 %v1_1000b18c18, i32* @r4, align 4
  br i1 %v2_1000b18415, label %dec_label_pc_1000b0e8, label %dec_label_pc_1000b194

dec_label_pc_1000b0e8:                            ; preds = %dec_label_pc_1000b0d4, %dec_label_pc_1000b130
  %v0_1000b0e819 = phi i32 [ %v2_1000b178, %dec_label_pc_1000b130 ], [ %v1_1000b094, %dec_label_pc_1000b0d4 ]
  %v1_1000b0e8 = add i32 %v0_1000b0e819, 16
  %v2_1000b0e8 = inttoptr i32 %v1_1000b0e8 to i16*
  %v3_1000b0e8 = load i16, i16* %v2_1000b0e8, align 2
  %v4_1000b0e8 = zext i16 %v3_1000b0e8 to i32
  %v1_1000b0ec = add nuw nsw i32 %v4_1000b0e8, 7
  store i32 %v1_1000b0ec, i32* %r9.global-to-local, align 4
  %v1_1000b0f0 = call i32 @__asm_rlwinm(i32 %v1_1000b0ec, i32 0, i32 0, i32 28)
  %v0_1000b0f4 = load i32, i32* %r29.global-to-local, align 4
  %v3_1000b0f4 = add i32 %v1_1000b0f0, %v0_1000b0f4
  store i32 %v3_1000b0f4, i32* %r11.global-to-local, align 4
  %v1_1000b0f8 = load i32, i32* %r10.global-to-local, align 4
  %v3_1000b0f8 = icmp ugt i32 %v3_1000b0f4, %v1_1000b0f8
  br i1 %v3_1000b0f8, label %dec_label_pc_1000b100, label %dec_label_pc_1000b130

dec_label_pc_1000b100:                            ; preds = %dec_label_pc_1000b0e8
  %v0_1000b100 = load i32, i32* @r22, align 4
  %v0_1000b104 = load i32, i32* @r25, align 4
  %v0_1000b108 = load i32, i32* %r26.global-to-local, align 4
  store i32 268480788, i32* @lr, align 4
  %v4_1000b110 = call i32 @function_1000b2d4(i32 %v0_1000b100, i32 %v0_1000b104, i32 %v0_1000b108, i32 0)
  %v0_1000b114 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000b114 = load i32, i32* @r28, align 4
  %v4_1000b114 = icmp eq i32 %v0_1000b114, %v1_1000b114
  br i1 %v4_1000b114, label %dec_label_pc_1000b11c, label %dec_label_pc_1000b194

dec_label_pc_1000b11c:                            ; preds = %dec_label_pc_1000b100
  %v0_1000b11c = call i32 @function_100097e8()
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1000b128 = inttoptr i32 %v0_1000b11c to i32*
  store i32 22, i32* %v2_1000b128, align 4
  %v0_1000b19c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000b198

dec_label_pc_1000b130:                            ; preds = %dec_label_pc_1000b0e8
  %v2_1000b0f0 = trunc i32 %v1_1000b0f0 to i16
  %v0_1000b130 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000b130 = inttoptr i32 %v0_1000b130 to i32*
  %v2_1000b130 = load i32, i32* %v1_1000b130, align 4
  store i32 %v2_1000b130, i32* %r9.global-to-local, align 4
  %v1_1000b134 = add i32 %v0_1000b130, 4
  %v2_1000b134 = inttoptr i32 %v1_1000b134 to i32*
  %v3_1000b134 = load i32, i32* %v2_1000b134, align 4
  store i32 %v3_1000b134, i32* %r10.global-to-local, align 4
  %v1_1000b138 = add i32 %v0_1000b130, 8
  %v2_1000b138 = inttoptr i32 %v1_1000b138 to i32*
  %v3_1000b138 = load i32, i32* %v2_1000b138, align 4
  store i32 %v3_1000b138, i32* @r25, align 4
  %v1_1000b13c = add i32 %v0_1000b130, 12
  %v2_1000b13c = inttoptr i32 %v1_1000b13c to i32*
  %v3_1000b13c = load i32, i32* %v2_1000b13c, align 4
  store i32 %v3_1000b13c, i32* %r26.global-to-local, align 4
  %v2_1000b140 = inttoptr i32 %v0_1000b0f4 to i32*
  store i32 %v2_1000b130, i32* %v2_1000b140, align 4
  %v0_1000b144 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b144 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b144 = add i32 %v1_1000b144, 4
  %v3_1000b144 = inttoptr i32 %v2_1000b144 to i32*
  store i32 %v0_1000b144, i32* %v3_1000b144, align 4
  %v0_1000b148 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000b148 = add i32 %v0_1000b148, 8
  %v2_1000b148 = inttoptr i32 %v1_1000b148 to i32*
  %v3_1000b148 = load i32, i32* %v2_1000b148, align 4
  store i32 %v3_1000b148, i32* %r9.global-to-local, align 4
  %v1_1000b14c = add i32 %v0_1000b148, 12
  %v2_1000b14c = inttoptr i32 %v1_1000b14c to i32*
  %v3_1000b14c = load i32, i32* %v2_1000b14c, align 4
  store i32 %v3_1000b14c, i32* %r10.global-to-local, align 4
  %v3_1000b150 = load i32, i32* %r29.global-to-local, align 4
  %v4_1000b150 = add i32 %v3_1000b150, 16
  %v5_1000b150 = inttoptr i32 %v4_1000b150 to i16*
  store i16 %v2_1000b0f0, i16* %v5_1000b150, align 2
  %v0_1000b154 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b154 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b154 = add i32 %v1_1000b154, 8
  %v3_1000b154 = inttoptr i32 %v2_1000b154 to i32*
  store i32 %v0_1000b154, i32* %v3_1000b154, align 4
  %v0_1000b158 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b158 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b158 = add i32 %v1_1000b158, 12
  %v3_1000b158 = inttoptr i32 %v2_1000b158 to i32*
  store i32 %v0_1000b158, i32* %v3_1000b158, align 4
  %v0_1000b15c = load i32, i32* %r30.global-to-local, align 4
  %v1_1000b15c = add i32 %v0_1000b15c, 18
  %v2_1000b15c = inttoptr i32 %v1_1000b15c to i8*
  %v3_1000b15c = load i8, i8* %v2_1000b15c, align 1
  %v2_1000b160 = load i32, i32* %r29.global-to-local, align 4
  %v3_1000b160 = add i32 %v2_1000b160, 18
  %v4_1000b160 = inttoptr i32 %v3_1000b160 to i8*
  store i8 %v3_1000b15c, i8* %v4_1000b160, align 1
  %v0_1000b164 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000b164, i32* %r29.global-to-local, align 4
  %v0_1000b168 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000b168 = add i32 %v0_1000b168, 16
  %v2_1000b168 = inttoptr i32 %v1_1000b168 to i16*
  %v3_1000b168 = load i16, i16* %v2_1000b168, align 2
  %v4_1000b168 = zext i16 %v3_1000b168 to i32
  %v1_1000b16c = add nsw i32 %v4_1000b168, -19
  store i32 %v1_1000b16c, i32* @r5, align 4
  store i32 268480884, i32* @lr, align 4
  %v0_1000b170 = call i32 @function_1000b5d0()
  %v0_1000b174 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000b174 = add i32 %v0_1000b174, 16
  %v2_1000b174 = inttoptr i32 %v1_1000b174 to i16*
  %v3_1000b174 = load i16, i16* %v2_1000b174, align 2
  %v4_1000b174 = zext i16 %v3_1000b174 to i32
  %v2_1000b178 = add i32 %v4_1000b174, %v0_1000b174
  store i32 %v2_1000b178, i32* %r30.global-to-local, align 4
  %v1_1000b17c.pre = load i32, i32* %r24.global-to-local, align 4
  %v0_1000b180.pre = load i32, i32* @r28, align 4
  %v0_1000b188.pre = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b17c = add i32 %v1_1000b17c.pre, %v1_1000b094
  %v1_1000b180 = load i32, i32* @r23, align 4
  %v2_1000b180 = add i32 %v1_1000b180, %v0_1000b180.pre
  store i32 %v2_1000b180, i32* %r10.global-to-local, align 4
  %v2_1000b184 = icmp ult i32 %v2_1000b178, %v2_1000b17c
  %v1_1000b188 = add i32 %v0_1000b188.pre, 19
  store i32 %v1_1000b188, i32* @r3, align 4
  %v1_1000b18c = add i32 %v2_1000b178, 19
  store i32 %v1_1000b18c, i32* @r4, align 4
  br i1 %v2_1000b184, label %dec_label_pc_1000b0e8, label %dec_label_pc_1000b194

dec_label_pc_1000b194:                            ; preds = %dec_label_pc_1000b0d4, %dec_label_pc_1000b130, %dec_label_pc_1000b100
  %v1_1000b194 = phi i32 [ %v0_1000b114, %dec_label_pc_1000b100 ], [ %v0_1000b0d4, %dec_label_pc_1000b0d4 ], [ %v0_1000b188.pre, %dec_label_pc_1000b130 ]
  %v0_1000b194 = phi i32 [ %v1_1000b114, %dec_label_pc_1000b100 ], [ %v0_1000b0d4, %dec_label_pc_1000b0d4 ], [ %v0_1000b180.pre, %dec_label_pc_1000b130 ]
  %v2_1000b194 = sub i32 %v1_1000b194, %v0_1000b194
  store i32 %v2_1000b194, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000b198

dec_label_pc_1000b198:                            ; preds = %dec_label_pc_1000b11c, %dec_label_pc_1000b0cc, %dec_label_pc_1000b194
  %v0_1000b19c = phi i32 [ %v0_1000b19c.pre, %dec_label_pc_1000b11c ], [ -1, %dec_label_pc_1000b0cc ], [ %v2_1000b194, %dec_label_pc_1000b194 ]
  %v0_1000b198 = load i32, i32* @r1, align 4
  %v1_1000b198 = inttoptr i32 %v0_1000b198 to i32*
  %v2_1000b198 = load i32, i32* %v1_1000b198, align 4
  store i32 %v2_1000b198, i32* %r11.global-to-local, align 4
  ret i32 %v0_1000b19c

; uselistorder directives
  uselistorder i32 %v2_1000b178, { 2, 1, 3, 0 }
  uselistorder i32 %v0_1000b130, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1000b0f0, { 1, 0 }
  uselistorder i32 %v0_1000b0a4, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v1_1000b094, { 4, 0, 1, 2, 3, 5, 6, 7 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32* %r30.global-to-local, { 0, 4, 1, 2, 3, 5, 6, 7, 8 }
  uselistorder i32* %r29.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32* %r10.global-to-local, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32 18, { 4, 5, 6, 0, 3, 7, 8, 1, 9, 2, 10, 11 }
  uselistorder i32 22, { 0, 1, 2, 3, 13, 4, 5, 6, 7, 14, 15, 16, 8, 9, 10, 11, 12 }
  uselistorder i32 7, { 28, 42, 10, 11, 21, 12, 13, 22, 14, 15, 23, 16, 17, 24, 25, 18, 26, 27, 0, 29, 1, 30, 2, 31, 32, 33, 3, 4, 34, 5, 35, 6, 36, 19, 37, 20, 7, 38, 39, 8, 40, 41, 9, 43 }
  uselistorder i32 19, { 23, 24, 1, 2, 0, 15, 16, 17, 3, 5, 4, 18, 7, 6, 19, 10, 11, 20, 21, 22, 12, 13, 14, 25, 26, 27, 28, 8, 9 }
  uselistorder i32* @r25, { 4, 5, 6, 1, 2, 3, 7, 8, 9, 10, 0, 11, 12, 13, 14, 15, 16 }
  uselistorder i32* @r27, { 24, 16, 17, 39, 40, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20, 18, 19, 1, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 0, 37, 38, 41, 42, 43, 44, 45, 46 }
  uselistorder i32 23, { 14, 9, 15, 0, 1, 10, 2, 3, 11, 12, 13, 4, 5, 6, 7, 8 }
  uselistorder i32* @r22, { 11, 12, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32* @r23, { 8, 0, 9, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32* @r1, { 7, 8, 2, 3, 4, 1, 5, 0, 9, 6, 10 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm, { 16, 17, 18, 27, 23, 25, 24, 26, 0, 29, 28, 1, 2, 3, 21, 22, 19, 20, 4, 5, 6, 7, 8, 9, 15, 10, 12, 13, 11, 14, 30 }
  uselistorder i32 27, { 4, 5, 6, 0, 7, 1, 8, 2, 9, 3, 10, 11 }
  uselistorder i32 30, { 6, 7, 3, 2, 1, 0, 4, 5 }
  uselistorder label %dec_label_pc_1000b198, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000b194, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000b0e8, { 1, 0 }
}

define i32 @function_1000b1b4() local_unnamed_addr {
dec_label_pc_1000b1b4:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b1cc = call i32 @__asm_mfcr()
  %v1_1000b1d0 = and i32 %v0_1000b1cc, 268435456
  %v3_1000b1d0 = icmp eq i32 %v1_1000b1d0, 0
  store i32 %v0_1000b1cc, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b1d0, label %dec_label_pc_1000b1e8, label %dec_label_pc_1000b1dc

dec_label_pc_1000b1dc:                            ; preds = %dec_label_pc_1000b1b4
  %v0_1000b1dc = call i32 @function_100097e8()
  %v0_1000b1e0 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b1e0 = inttoptr i32 %v0_1000b1dc to i32*
  store i32 %v0_1000b1e0, i32* %v2_1000b1e0, align 4
  br label %dec_label_pc_1000b1e8

dec_label_pc_1000b1e8:                            ; preds = %dec_label_pc_1000b1b4, %dec_label_pc_1000b1dc
  %v0_1000b1f8 = phi i32 [ %v0_1000b1cc, %dec_label_pc_1000b1b4 ], [ -1, %dec_label_pc_1000b1dc ]
  ret i32 %v0_1000b1f8

; uselistorder directives
  uselistorder label %dec_label_pc_1000b1e8, { 1, 0 }
}

define i32 @function_1000b1fc() local_unnamed_addr {
dec_label_pc_1000b1fc:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b214 = call i32 @__asm_mfcr()
  %v1_1000b218 = and i32 %v0_1000b214, 268435456
  %v3_1000b218 = icmp eq i32 %v1_1000b218, 0
  store i32 %v0_1000b214, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b218, label %dec_label_pc_1000b230, label %dec_label_pc_1000b224

dec_label_pc_1000b224:                            ; preds = %dec_label_pc_1000b1fc
  %v0_1000b224 = call i32 @function_100097e8()
  %v0_1000b228 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b228 = inttoptr i32 %v0_1000b224 to i32*
  store i32 %v0_1000b228, i32* %v2_1000b228, align 4
  br label %dec_label_pc_1000b230

dec_label_pc_1000b230:                            ; preds = %dec_label_pc_1000b1fc, %dec_label_pc_1000b224
  %v0_1000b240 = phi i32 [ %v0_1000b214, %dec_label_pc_1000b1fc ], [ -1, %dec_label_pc_1000b224 ]
  ret i32 %v0_1000b240

; uselistorder directives
  uselistorder label %dec_label_pc_1000b230, { 1, 0 }
}

define i32 @function_1000b244(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b244:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b25c = call i32 @__asm_mfcr()
  %v1_1000b260 = and i32 %v0_1000b25c, 268435456
  %v3_1000b260 = icmp eq i32 %v1_1000b260, 0
  store i32 %v0_1000b25c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b260, label %dec_label_pc_1000b278, label %dec_label_pc_1000b26c

dec_label_pc_1000b26c:                            ; preds = %dec_label_pc_1000b244
  %v0_1000b26c = call i32 @function_100097e8()
  %v0_1000b270 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b270 = inttoptr i32 %v0_1000b26c to i32*
  store i32 %v0_1000b270, i32* %v2_1000b270, align 4
  br label %dec_label_pc_1000b278

dec_label_pc_1000b278:                            ; preds = %dec_label_pc_1000b244, %dec_label_pc_1000b26c
  %v0_1000b288 = phi i32 [ %v0_1000b25c, %dec_label_pc_1000b244 ], [ -1, %dec_label_pc_1000b26c ]
  ret i32 %v0_1000b288

; uselistorder directives
  uselistorder label %dec_label_pc_1000b278, { 1, 0 }
}

define i32 @function_1000b28c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b28c:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b2a4 = call i32 @__asm_mfcr()
  %v1_1000b2a8 = and i32 %v0_1000b2a4, 268435456
  %v3_1000b2a8 = icmp eq i32 %v1_1000b2a8, 0
  store i32 %v0_1000b2a4, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b2a8, label %dec_label_pc_1000b2c0, label %dec_label_pc_1000b2b4

dec_label_pc_1000b2b4:                            ; preds = %dec_label_pc_1000b28c
  %v0_1000b2b4 = call i32 @function_100097e8()
  %v0_1000b2b8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b2b8 = inttoptr i32 %v0_1000b2b4 to i32*
  store i32 %v0_1000b2b8, i32* %v2_1000b2b8, align 4
  br label %dec_label_pc_1000b2c0

dec_label_pc_1000b2c0:                            ; preds = %dec_label_pc_1000b28c, %dec_label_pc_1000b2b4
  %v0_1000b2d0 = phi i32 [ %v0_1000b2a4, %dec_label_pc_1000b28c ], [ -1, %dec_label_pc_1000b2b4 ]
  ret i32 %v0_1000b2d0

; uselistorder directives
  uselistorder label %dec_label_pc_1000b2c0, { 1, 0 }
}

define i32 @function_1000b2d4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000b2d4:
  %r0.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1000b2d4 = load i32, i32* @lr, align 4
  store i32 140, i32* %r0.global-to-local, align 4
  %v0_1000b300 = call i32 @__asm_mfcr()
  %v1_1000b304 = and i32 %v0_1000b300, 268435456
  %v3_1000b304 = icmp eq i32 %v1_1000b304, 0
  store i32 %v0_1000b300, i32* %r31.global-to-local, align 4
  store i32 %v0_1000b300, i32* %r0.global-to-local, align 4
  br i1 %v3_1000b304, label %dec_label_pc_1000b328, label %dec_label_pc_1000b318

dec_label_pc_1000b318:                            ; preds = %dec_label_pc_1000b2d4
  %v0_1000b318 = call i32 @function_100097e8()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_1000b320 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b320 = inttoptr i32 %v0_1000b318 to i32*
  store i32 %v0_1000b320, i32* %v2_1000b320, align 4
  %v0_1000b32c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000b32c

dec_label_pc_1000b328:                            ; preds = %dec_label_pc_1000b2d4
  %v3_1000b310 = icmp eq i32 %v0_1000b300, 0
  br i1 %v3_1000b310, label %dec_label_pc_1000b338, label %dec_label_pc_1000b32c

dec_label_pc_1000b32c:                            ; preds = %dec_label_pc_1000b328, %dec_label_pc_1000b318
  %v0_1000b32c = phi i32 [ %v0_1000b300, %dec_label_pc_1000b328 ], [ %v0_1000b32c.pre, %dec_label_pc_1000b318 ]
  %tmp = icmp slt i32 %v0_1000b32c, 0
  %v1_1000b330 = zext i1 %tmp to i32
  %v2_1000b330 = ashr i32 %v0_1000b32c, 31
  %v3_1000b330 = and i32 %v2_1000b330, -2
  %v4_1000b330 = or i32 %v3_1000b330, %v1_1000b330
  br label %dec_label_pc_1000b340

dec_label_pc_1000b338:                            ; preds = %dec_label_pc_1000b328
  %v3_1000b338 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000b340

dec_label_pc_1000b340:                            ; preds = %dec_label_pc_1000b32c, %dec_label_pc_1000b338
  %v0_1000b350 = phi i32 [ %v4_1000b330, %dec_label_pc_1000b32c ], [ %v3_1000b338, %dec_label_pc_1000b338 ]
  store i32 %v0_1000b2d4, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000b350

; uselistorder directives
  uselistorder i32 %v0_1000b32c, { 1, 0 }
  uselistorder i32 %v0_1000b300, { 0, 3, 2, 1, 4 }
  uselistorder i32 -2, { 8, 7, 1, 0, 9, 10, 6, 11, 2, 12, 3, 13, 4, 5 }
  uselistorder label %dec_label_pc_1000b340, { 1, 0 }
}

define i32 @function_1000b354(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000b354:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b36c = call i32 @__asm_mfcr()
  %v1_1000b370 = and i32 %v0_1000b36c, 268435456
  %v3_1000b370 = icmp eq i32 %v1_1000b370, 0
  store i32 %v0_1000b36c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b370, label %dec_label_pc_1000b388, label %dec_label_pc_1000b37c

dec_label_pc_1000b37c:                            ; preds = %dec_label_pc_1000b354
  %v0_1000b37c = call i32 @function_100097e8()
  %v0_1000b380 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b380 = inttoptr i32 %v0_1000b37c to i32*
  store i32 %v0_1000b380, i32* %v2_1000b380, align 4
  br label %dec_label_pc_1000b388

dec_label_pc_1000b388:                            ; preds = %dec_label_pc_1000b354, %dec_label_pc_1000b37c
  %v0_1000b398 = phi i32 [ %v0_1000b36c, %dec_label_pc_1000b354 ], [ -1, %dec_label_pc_1000b37c ]
  ret i32 %v0_1000b398

; uselistorder directives
  uselistorder label %dec_label_pc_1000b388, { 1, 0 }
}

define i32 @function_1000b39c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b39c:
  store i32 %arg1, i32* @r30, align 4
  %v3_1000b3b8 = load i32, i32* @global_var_1001c2c0.367, align 4
  %v3_1000b3bc = icmp eq i32 %v3_1000b3b8, 0
  br i1 %v3_1000b3bc, label %dec_label_pc_1000b3c4, label %dec_label_pc_1000b3d0

dec_label_pc_1000b3c4:                            ; preds = %dec_label_pc_1000b39c
  store i32 268481480, i32* @lr, align 4
  %v1_1000b3c4 = call i32 @function_1000b990(i32 0)
  %v1_1000b3c8 = icmp slt i32 %v1_1000b3c4, 0
  br i1 %v1_1000b3c8, label %dec_label_pc_1000b3f0, label %dec_label_pc_1000b3c4.dec_label_pc_1000b3d0_crit_edge

dec_label_pc_1000b3c4.dec_label_pc_1000b3d0_crit_edge: ; preds = %dec_label_pc_1000b3c4
  %v0_1000b3d0.pre = load i32, i32* @r30, align 4
  %v3_1000b3d4.pre = load i32, i32* @global_var_1001c2c0.367, align 4
  br label %dec_label_pc_1000b3d0

dec_label_pc_1000b3d0:                            ; preds = %dec_label_pc_1000b3c4.dec_label_pc_1000b3d0_crit_edge, %dec_label_pc_1000b39c
  %v3_1000b3d4 = phi i32 [ %v3_1000b3d4.pre, %dec_label_pc_1000b3c4.dec_label_pc_1000b3d0_crit_edge ], [ %v3_1000b3b8, %dec_label_pc_1000b39c ]
  %v1_1000b3dc = phi i32 [ %v0_1000b3d0.pre, %dec_label_pc_1000b3c4.dec_label_pc_1000b3d0_crit_edge ], [ %arg1, %dec_label_pc_1000b39c ]
  %v3_1000b3d0 = icmp eq i32 %v1_1000b3dc, 0
  store i32 %v3_1000b3d4, i32* @r31, align 4
  br i1 %v3_1000b3d0, label %dec_label_pc_1000b3f4, label %dec_label_pc_1000b3e4

dec_label_pc_1000b3e4:                            ; preds = %dec_label_pc_1000b3d0
  %v2_1000b3dc = add i32 %v1_1000b3dc, %v3_1000b3d4
  store i32 268481512, i32* @lr, align 4
  %v1_1000b3e4 = call i32 @function_1000b990(i32 %v2_1000b3dc)
  %tmp6 = icmp sgt i32 %v1_1000b3e4, -1
  br i1 %tmp6, label %dec_label_pc_1000b3e4.dec_label_pc_1000b3f4_crit_edge, label %dec_label_pc_1000b3f0

dec_label_pc_1000b3e4.dec_label_pc_1000b3f4_crit_edge: ; preds = %dec_label_pc_1000b3e4
  %v0_1000b3f8.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000b3f4

dec_label_pc_1000b3f0:                            ; preds = %dec_label_pc_1000b3e4, %dec_label_pc_1000b3c4
  store i32 -1, i32* @r31, align 4
  br label %dec_label_pc_1000b3f4

dec_label_pc_1000b3f4:                            ; preds = %dec_label_pc_1000b3e4.dec_label_pc_1000b3f4_crit_edge, %dec_label_pc_1000b3d0, %dec_label_pc_1000b3f0
  %v0_1000b3f8 = phi i32 [ %v0_1000b3f8.pre, %dec_label_pc_1000b3e4.dec_label_pc_1000b3f4_crit_edge ], [ %v3_1000b3d4, %dec_label_pc_1000b3d0 ], [ -1, %dec_label_pc_1000b3f0 ]
  ret i32 %v0_1000b3f8

; uselistorder directives
  uselistorder i32 %v3_1000b3d4, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_1000b990, { 1, 0 }
  uselistorder label %dec_label_pc_1000b3f4, { 2, 0, 1 }
}

define i32 @function_1000b40c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b40c:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b424 = call i32 @__asm_mfcr()
  %v1_1000b428 = and i32 %v0_1000b424, 268435456
  %v3_1000b428 = icmp eq i32 %v1_1000b428, 0
  store i32 %v0_1000b424, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b428, label %dec_label_pc_1000b440, label %dec_label_pc_1000b434

dec_label_pc_1000b434:                            ; preds = %dec_label_pc_1000b40c
  %v0_1000b434 = call i32 @function_100097e8()
  %v0_1000b438 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b438 = inttoptr i32 %v0_1000b434 to i32*
  store i32 %v0_1000b438, i32* %v2_1000b438, align 4
  br label %dec_label_pc_1000b440

dec_label_pc_1000b440:                            ; preds = %dec_label_pc_1000b40c, %dec_label_pc_1000b434
  %v0_1000b450 = phi i32 [ %v0_1000b424, %dec_label_pc_1000b40c ], [ -1, %dec_label_pc_1000b434 ]
  ret i32 %v0_1000b450

; uselistorder directives
  uselistorder label %dec_label_pc_1000b440, { 1, 0 }
}

define i32 @function_1000b454(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000b454:
  %r10.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* %r28.global-to-local, align 4
  store i32 268481660, i32* @lr, align 4
  %v3_1000b478 = call i32 @function_100098d0(i32 %arg2, i32 0, i32 104)
  %v2_1000b47c = load i32, i32* %arg1, align 4
  %v1_1000b480 = add i32 %tmp, 4
  %v2_1000b480 = inttoptr i32 %v1_1000b480 to i32*
  %v3_1000b480 = load i32, i32* %v2_1000b480, align 4
  store i32 %v3_1000b480, i32* %r10.global-to-local, align 4
  %v1_1000b484 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b484 = inttoptr i32 %v1_1000b484 to i32*
  store i32 %v2_1000b47c, i32* %v2_1000b484, align 4
  %v0_1000b488 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b488 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b488 = add i32 %v1_1000b488, 4
  %v3_1000b488 = inttoptr i32 %v2_1000b488 to i32*
  store i32 %v0_1000b488, i32* %v3_1000b488, align 4
  %v0_1000b48c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b48c = add i32 %v0_1000b48c, 8
  %v2_1000b48c = inttoptr i32 %v1_1000b48c to i32*
  %v3_1000b48c = load i32, i32* %v2_1000b48c, align 4
  %v1_1000b490 = add i32 %v0_1000b48c, 12
  %v2_1000b490 = inttoptr i32 %v1_1000b490 to i32*
  %v3_1000b490 = load i32, i32* %v2_1000b490, align 4
  store i32 %v3_1000b490, i32* %r10.global-to-local, align 4
  %v1_1000b494 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b494 = add i32 %v1_1000b494, 8
  %v3_1000b494 = inttoptr i32 %v2_1000b494 to i32*
  store i32 %v3_1000b48c, i32* %v3_1000b494, align 4
  %v0_1000b498 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b498 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b498 = add i32 %v1_1000b498, 12
  %v3_1000b498 = inttoptr i32 %v2_1000b498 to i32*
  store i32 %v0_1000b498, i32* %v3_1000b498, align 4
  %v0_1000b49c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b49c = add i32 %v0_1000b49c, 16
  %v2_1000b49c = inttoptr i32 %v1_1000b49c to i32*
  %v3_1000b49c = load i32, i32* %v2_1000b49c, align 4
  %v1_1000b4a0 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b4a0 = add i32 %v1_1000b4a0, 16
  %v3_1000b4a0 = inttoptr i32 %v2_1000b4a0 to i32*
  store i32 %v3_1000b49c, i32* %v3_1000b4a0, align 4
  %v0_1000b4a4 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b4a4 = add i32 %v0_1000b4a4, 20
  %v2_1000b4a4 = inttoptr i32 %v1_1000b4a4 to i32*
  %v3_1000b4a4 = load i32, i32* %v2_1000b4a4, align 4
  %v1_1000b4a8 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b4a8 = add i32 %v1_1000b4a8, 20
  %v3_1000b4a8 = inttoptr i32 %v2_1000b4a8 to i32*
  store i32 %v3_1000b4a4, i32* %v3_1000b4a8, align 4
  %v0_1000b4ac = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b4ac = add i32 %v0_1000b4ac, 24
  %v2_1000b4ac = inttoptr i32 %v1_1000b4ac to i32*
  %v3_1000b4ac = load i32, i32* %v2_1000b4ac, align 4
  %v1_1000b4b0 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b4b0 = add i32 %v1_1000b4b0, 24
  %v3_1000b4b0 = inttoptr i32 %v2_1000b4b0 to i32*
  store i32 %v3_1000b4ac, i32* %v3_1000b4b0, align 4
  %v0_1000b4b4 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b4b4 = add i32 %v0_1000b4b4, 28
  %v2_1000b4b4 = inttoptr i32 %v1_1000b4b4 to i32*
  %v3_1000b4b4 = load i32, i32* %v2_1000b4b4, align 4
  %v1_1000b4b8 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b4b8 = add i32 %v1_1000b4b8, 28
  %v3_1000b4b8 = inttoptr i32 %v2_1000b4b8 to i32*
  store i32 %v3_1000b4b4, i32* %v3_1000b4b8, align 4
  %v0_1000b4bc = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b4bc = add i32 %v0_1000b4bc, 32
  %v2_1000b4bc = inttoptr i32 %v1_1000b4bc to i32*
  %v3_1000b4bc = load i32, i32* %v2_1000b4bc, align 4
  %v1_1000b4c0 = add i32 %v0_1000b4bc, 36
  %v2_1000b4c0 = inttoptr i32 %v1_1000b4c0 to i32*
  %v3_1000b4c0 = load i32, i32* %v2_1000b4c0, align 4
  store i32 %v3_1000b4c0, i32* %r10.global-to-local, align 4
  %v1_1000b4c4 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b4c4 = add i32 %v1_1000b4c4, 32
  %v3_1000b4c4 = inttoptr i32 %v2_1000b4c4 to i32*
  store i32 %v3_1000b4bc, i32* %v3_1000b4c4, align 4
  %v0_1000b4c8 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b4c8 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b4c8 = add i32 %v1_1000b4c8, 36
  %v3_1000b4c8 = inttoptr i32 %v2_1000b4c8 to i32*
  store i32 %v0_1000b4c8, i32* %v3_1000b4c8, align 4
  %v0_1000b4cc = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b4cc = add i32 %v0_1000b4cc, 48
  %v2_1000b4cc = inttoptr i32 %v1_1000b4cc to i32*
  %v3_1000b4cc = load i32, i32* %v2_1000b4cc, align 4
  %v1_1000b4d0 = add i32 %v0_1000b4cc, 52
  %v2_1000b4d0 = inttoptr i32 %v1_1000b4d0 to i32*
  %v3_1000b4d0 = load i32, i32* %v2_1000b4d0, align 4
  store i32 %v3_1000b4d0, i32* %r10.global-to-local, align 4
  %v1_1000b4d4 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b4d4 = add i32 %v1_1000b4d4, 48
  %v3_1000b4d4 = inttoptr i32 %v2_1000b4d4 to i32*
  store i32 %v3_1000b4cc, i32* %v3_1000b4d4, align 4
  %v0_1000b4d8 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b4d8 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b4d8 = add i32 %v1_1000b4d8, 52
  %v3_1000b4d8 = inttoptr i32 %v2_1000b4d8 to i32*
  store i32 %v0_1000b4d8, i32* %v3_1000b4d8, align 4
  %v0_1000b4dc = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b4dc = add i32 %v0_1000b4dc, 56
  %v2_1000b4dc = inttoptr i32 %v1_1000b4dc to i32*
  %v3_1000b4dc = load i32, i32* %v2_1000b4dc, align 4
  %v1_1000b4e0 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b4e0 = add i32 %v1_1000b4e0, 56
  %v3_1000b4e0 = inttoptr i32 %v2_1000b4e0 to i32*
  store i32 %v3_1000b4dc, i32* %v3_1000b4e0, align 4
  %v0_1000b4e4 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b4e4 = add i32 %v0_1000b4e4, 64
  %v2_1000b4e4 = inttoptr i32 %v1_1000b4e4 to i32*
  %v3_1000b4e4 = load i32, i32* %v2_1000b4e4, align 4
  %v1_1000b4e8 = add i32 %v0_1000b4e4, 68
  %v2_1000b4e8 = inttoptr i32 %v1_1000b4e8 to i32*
  %v3_1000b4e8 = load i32, i32* %v2_1000b4e8, align 4
  store i32 %v3_1000b4e8, i32* %r10.global-to-local, align 4
  %v1_1000b4ec = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b4ec = add i32 %v1_1000b4ec, 64
  %v3_1000b4ec = inttoptr i32 %v2_1000b4ec to i32*
  store i32 %v3_1000b4e4, i32* %v3_1000b4ec, align 4
  %v0_1000b4f0 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b4f0 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b4f0 = add i32 %v1_1000b4f0, 68
  %v3_1000b4f0 = inttoptr i32 %v2_1000b4f0 to i32*
  store i32 %v0_1000b4f0, i32* %v3_1000b4f0, align 4
  %v0_1000b4f4 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b4f4 = add i32 %v0_1000b4f4, 72
  %v2_1000b4f4 = inttoptr i32 %v1_1000b4f4 to i32*
  %v3_1000b4f4 = load i32, i32* %v2_1000b4f4, align 4
  %v1_1000b4f8 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b4f8 = add i32 %v1_1000b4f8, 72
  %v3_1000b4f8 = inttoptr i32 %v2_1000b4f8 to i32*
  store i32 %v3_1000b4f4, i32* %v3_1000b4f8, align 4
  %v0_1000b4fc = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b4fc = add i32 %v0_1000b4fc, 80
  %v2_1000b4fc = inttoptr i32 %v1_1000b4fc to i32*
  %v3_1000b4fc = load i32, i32* %v2_1000b4fc, align 4
  %v1_1000b500 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b500 = add i32 %v1_1000b500, 80
  %v3_1000b500 = inttoptr i32 %v2_1000b500 to i32*
  store i32 %v3_1000b4fc, i32* %v3_1000b500, align 4
  %v0_1000b504 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b504 = add i32 %v0_1000b504, 88
  %v2_1000b504 = inttoptr i32 %v1_1000b504 to i32*
  %v3_1000b504 = load i32, i32* %v2_1000b504, align 4
  %v1_1000b508 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b508 = add i32 %v1_1000b508, 88
  %v3_1000b508 = inttoptr i32 %v2_1000b508 to i32*
  store i32 %v3_1000b504, i32* %v3_1000b508, align 4
  ret i32 %v3_1000b478

; uselistorder directives
  uselistorder i32* %r29.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 15, 16, 18 }
  uselistorder i32* %r28.global-to-local, { 0, 1, 2, 3, 4, 10, 5, 6, 7, 8, 9, 11, 12 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1000b520(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000b520:
  %r0.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_1000b524 = load i32, i32* @lr, align 4
  store i32 %v0_1000b524, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %tmp, i32* @r28, align 4
  store i32 268481864, i32* @lr, align 4
  %v3_1000b544 = call i32 @function_100098d0(i32 %arg2, i32 0, i32 88)
  %v0_1000b548 = load i32, i32* @r28, align 4
  %v1_1000b548 = inttoptr i32 %v0_1000b548 to i32*
  %v2_1000b548 = load i32, i32* %v1_1000b548, align 4
  store i32 %v2_1000b548, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v1_1000b550 = load i32, i32* @r29, align 4
  %v2_1000b550 = add i32 %v1_1000b550, 4
  %v3_1000b550 = inttoptr i32 %v2_1000b550 to i32*
  store i32 %v2_1000b548, i32* %v3_1000b550, align 4
  %v0_1000b554 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b554 = load i32, i32* @r29, align 4
  %v2_1000b554 = inttoptr i32 %v1_1000b554 to i32*
  store i32 %v0_1000b554, i32* %v2_1000b554, align 4
  %v0_1000b558 = load i32, i32* @r28, align 4
  %v1_1000b558 = add i32 %v0_1000b558, 4
  %v2_1000b558 = inttoptr i32 %v1_1000b558 to i32*
  %v3_1000b558 = load i32, i32* %v2_1000b558, align 4
  store i32 %v3_1000b558, i32* %r0.global-to-local, align 4
  %v1_1000b55c = load i32, i32* @r29, align 4
  %v2_1000b55c = add i32 %v1_1000b55c, 12
  %v3_1000b55c = inttoptr i32 %v2_1000b55c to i32*
  store i32 %v3_1000b558, i32* %v3_1000b55c, align 4
  %v0_1000b560 = load i32, i32* @r28, align 4
  %v1_1000b560 = add i32 %v0_1000b560, 8
  %v2_1000b560 = inttoptr i32 %v1_1000b560 to i32*
  %v3_1000b560 = load i32, i32* %v2_1000b560, align 4
  store i32 %v3_1000b560, i32* %r0.global-to-local, align 4
  %v1_1000b564 = load i32, i32* @r29, align 4
  %v2_1000b564 = add i32 %v1_1000b564, 16
  %v3_1000b564 = inttoptr i32 %v2_1000b564 to i32*
  store i32 %v3_1000b560, i32* %v3_1000b564, align 4
  %v0_1000b568 = load i32, i32* @r28, align 4
  %v1_1000b568 = add i32 %v0_1000b568, 12
  %v2_1000b568 = inttoptr i32 %v1_1000b568 to i16*
  %v3_1000b568 = load i16, i16* %v2_1000b568, align 2
  %v4_1000b568 = zext i16 %v3_1000b568 to i32
  store i32 %v4_1000b568, i32* %r0.global-to-local, align 4
  %v1_1000b56c = load i32, i32* @r29, align 4
  %v2_1000b56c = add i32 %v1_1000b56c, 20
  %v3_1000b56c = inttoptr i32 %v2_1000b56c to i32*
  store i32 %v4_1000b568, i32* %v3_1000b56c, align 4
  %v0_1000b570 = load i32, i32* @r28, align 4
  %v1_1000b570 = add i32 %v0_1000b570, 16
  %v2_1000b570 = inttoptr i32 %v1_1000b570 to i32*
  %v3_1000b570 = load i32, i32* %v2_1000b570, align 4
  store i32 %v3_1000b570, i32* %r0.global-to-local, align 4
  %v1_1000b574 = load i32, i32* @r29, align 4
  %v2_1000b574 = add i32 %v1_1000b574, 24
  %v3_1000b574 = inttoptr i32 %v2_1000b574 to i32*
  store i32 %v3_1000b570, i32* %v3_1000b574, align 4
  %v0_1000b578 = load i32, i32* @r28, align 4
  %v1_1000b578 = add i32 %v0_1000b578, 20
  %v2_1000b578 = inttoptr i32 %v1_1000b578 to i32*
  %v3_1000b578 = load i32, i32* %v2_1000b578, align 4
  store i32 %v3_1000b578, i32* %r0.global-to-local, align 4
  %v1_1000b57c = load i32, i32* @r29, align 4
  %v2_1000b57c = add i32 %v1_1000b57c, 28
  %v3_1000b57c = inttoptr i32 %v2_1000b57c to i32*
  store i32 %v3_1000b578, i32* %v3_1000b57c, align 4
  %v0_1000b580 = load i32, i32* @r28, align 4
  %v1_1000b580 = add i32 %v0_1000b580, 24
  %v2_1000b580 = inttoptr i32 %v1_1000b580 to i32*
  %v3_1000b580 = load i32, i32* %v2_1000b580, align 4
  store i32 %v3_1000b580, i32* %r0.global-to-local, align 4
  %v0_1000b584 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b584 = load i32, i32* @r29, align 4
  %v2_1000b584 = add i32 %v1_1000b584, 32
  %v3_1000b584 = inttoptr i32 %v2_1000b584 to i32*
  store i32 %v0_1000b584, i32* %v3_1000b584, align 4
  %v0_1000b588 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000b588 = load i32, i32* @r29, align 4
  %v2_1000b588 = add i32 %v1_1000b588, 36
  %v3_1000b588 = inttoptr i32 %v2_1000b588 to i32*
  store i32 %v0_1000b588, i32* %v3_1000b588, align 4
  %v0_1000b58c = load i32, i32* @r28, align 4
  %v1_1000b58c = add i32 %v0_1000b58c, 28
  %v2_1000b58c = inttoptr i32 %v1_1000b58c to i32*
  %v3_1000b58c = load i32, i32* %v2_1000b58c, align 4
  store i32 %v3_1000b58c, i32* %r0.global-to-local, align 4
  %v1_1000b590 = load i32, i32* @r29, align 4
  %v2_1000b590 = add i32 %v1_1000b590, 44
  %v3_1000b590 = inttoptr i32 %v2_1000b590 to i32*
  store i32 %v3_1000b58c, i32* %v3_1000b590, align 4
  %v0_1000b594 = load i32, i32* @r28, align 4
  %v1_1000b594 = add i32 %v0_1000b594, 32
  %v2_1000b594 = inttoptr i32 %v1_1000b594 to i32*
  %v3_1000b594 = load i32, i32* %v2_1000b594, align 4
  store i32 %v3_1000b594, i32* %r0.global-to-local, align 4
  %v1_1000b598 = load i32, i32* @r29, align 4
  %v2_1000b598 = add i32 %v1_1000b598, 48
  %v3_1000b598 = inttoptr i32 %v2_1000b598 to i32*
  store i32 %v3_1000b594, i32* %v3_1000b598, align 4
  %v0_1000b59c = load i32, i32* @r28, align 4
  %v1_1000b59c = add i32 %v0_1000b59c, 36
  %v2_1000b59c = inttoptr i32 %v1_1000b59c to i32*
  %v3_1000b59c = load i32, i32* %v2_1000b59c, align 4
  store i32 %v3_1000b59c, i32* %r0.global-to-local, align 4
  %v1_1000b5a0 = load i32, i32* @r29, align 4
  %v2_1000b5a0 = add i32 %v1_1000b5a0, 52
  %v3_1000b5a0 = inttoptr i32 %v2_1000b5a0 to i32*
  store i32 %v3_1000b59c, i32* %v3_1000b5a0, align 4
  %v0_1000b5a4 = load i32, i32* @r28, align 4
  %v1_1000b5a4 = add i32 %v0_1000b5a4, 40
  %v2_1000b5a4 = inttoptr i32 %v1_1000b5a4 to i32*
  %v3_1000b5a4 = load i32, i32* %v2_1000b5a4, align 4
  store i32 %v3_1000b5a4, i32* %r0.global-to-local, align 4
  %v1_1000b5a8 = load i32, i32* @r29, align 4
  %v2_1000b5a8 = add i32 %v1_1000b5a8, 56
  %v3_1000b5a8 = inttoptr i32 %v2_1000b5a8 to i32*
  store i32 %v3_1000b5a4, i32* %v3_1000b5a8, align 4
  %v0_1000b5ac = load i32, i32* @r28, align 4
  %v1_1000b5ac = add i32 %v0_1000b5ac, 48
  %v2_1000b5ac = inttoptr i32 %v1_1000b5ac to i32*
  %v3_1000b5ac = load i32, i32* %v2_1000b5ac, align 4
  store i32 %v3_1000b5ac, i32* %r0.global-to-local, align 4
  %v1_1000b5b0 = load i32, i32* @r29, align 4
  %v2_1000b5b0 = add i32 %v1_1000b5b0, 64
  %v3_1000b5b0 = inttoptr i32 %v2_1000b5b0 to i32*
  store i32 %v3_1000b5ac, i32* %v3_1000b5b0, align 4
  %v0_1000b5b4 = load i32, i32* @r28, align 4
  %v1_1000b5b4 = add i32 %v0_1000b5b4, 56
  %v2_1000b5b4 = inttoptr i32 %v1_1000b5b4 to i32*
  %v3_1000b5b4 = load i32, i32* %v2_1000b5b4, align 4
  %v1_1000b5b8 = load i32, i32* @r29, align 4
  %v2_1000b5b8 = add i32 %v1_1000b5b8, 72
  %v3_1000b5b8 = inttoptr i32 %v2_1000b5b8 to i32*
  store i32 %v3_1000b5b4, i32* %v3_1000b5b8, align 4
  store i32 %v0_1000b524, i32* %r0.global-to-local, align 4
  ret i32 %v3_1000b544

; uselistorder directives
  uselistorder i32 72, { 2, 0, 1 }
  uselistorder i32 64, { 19, 13, 14, 2, 21, 15, 0, 1, 12, 16, 17, 18, 3, 4, 20, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 56, { 7, 8, 0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32 40, { 9, 0, 4, 1, 5, 6, 7, 8, 10, 3, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32 52, { 4, 1, 2, 3, 5, 6, 0, 7 }
  uselistorder i32 48, { 3, 4, 1, 2, 5, 0, 6, 7 }
  uselistorder i32 36, { 9, 10, 6, 7, 0, 1, 8, 2, 3, 4, 5 }
  uselistorder i32 24, { 20, 21, 7, 8, 0, 1, 9, 27, 28, 29, 22, 23, 24, 10, 11, 12, 13, 14, 16, 17, 18, 19, 15, 2, 3, 4, 5, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 6 }
  uselistorder i32 20, { 27, 28, 19, 20, 21, 22, 29, 30, 31, 32, 23, 5, 0, 1, 24, 2, 25, 26, 6, 7, 8, 9, 33, 10, 34, 35, 36, 37, 38, 11, 39, 40, 41, 42, 43, 44, 45, 46, 12, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 13, 57, 58, 59, 60, 61, 62, 63, 64, 14, 65, 66, 67, 68, 69, 70, 15, 71, 72, 73, 74, 75, 76, 77, 16, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 3, 17, 90, 91, 92, 4, 18, 93, 94, 95 }
  uselistorder i32 16, { 90, 91, 75, 76, 92, 93, 94, 95, 96, 20, 89, 77, 174, 175, 97, 98, 46, 47, 48, 78, 49, 50, 79, 80, 102, 99, 81, 82, 51, 23, 84, 85, 18, 0, 19, 1, 2, 86, 3, 83, 88, 52, 87, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 24, 157, 158, 159, 160, 161, 4, 25, 100, 5, 6, 101, 103, 104, 26, 105, 106, 107, 108, 109, 110, 111, 27, 112, 113, 114, 29, 115, 28, 116, 117, 31, 118, 119, 7, 120, 121, 122, 30, 123, 124, 33, 125, 126, 127, 128, 129, 32, 37, 130, 131, 132, 8, 133, 134, 9, 10, 21, 136, 135, 34, 36, 35, 41, 137, 138, 139, 11, 140, 141, 12, 13, 22, 143, 142, 38, 40, 39, 144, 43, 145, 42, 146, 147, 14, 148, 44, 149, 150, 151, 15, 152, 155, 156, 153, 154, 162, 163, 16, 164, 45, 165, 166, 167, 17, 168, 171, 172, 169, 170, 173 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1000b5d0() local_unnamed_addr {
dec_label_pc_1000b5d0:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_1000b5d0 = load i32, i32* @r5, align 4
  %v1_1000b5d0 = call i32 @__asm_rlwinm.(i32 %v0_1000b5d0, i32 29, i32 3, i32 31)
  store i32 %v1_1000b5d0, i32* %r9.global-to-local, align 4
  %v4_1000b5d0 = icmp eq i32 %v1_1000b5d0, 0
  %v0_1000b5d4 = load i32, i32* @r4, align 4
  %v1_1000b5d4 = add i32 %v0_1000b5d4, -4
  store i32 %v1_1000b5d4, i32* %r4.global-to-local, align 4
  %v0_1000b5d8 = load i32, i32* @r3, align 4
  %v1_1000b5d8 = add i32 %v0_1000b5d8, -4
  store i32 %v1_1000b5d8, i32* @r11, align 4
  br i1 %v4_1000b5d0, label %dec_label_pc_1000b600, label %dec_label_pc_1000b5e0

dec_label_pc_1000b5e0:                            ; preds = %dec_label_pc_1000b5d0
  %v1_1000b5e0 = urem i32 %v1_1000b5d8, 4
  %v3_1000b5e0 = icmp eq i32 %v1_1000b5e0, 0
  br i1 %v3_1000b5e0, label %dec_label_pc_1000b5e8, label %dec_label_pc_1000b63c

dec_label_pc_1000b5e8:                            ; preds = %dec_label_pc_1000b65c.dec_label_pc_1000b5e8_crit_edge, %dec_label_pc_1000b5e0
  %v1_1000b5f4.pre = phi i32 [ %v1_1000b5d8, %dec_label_pc_1000b5e0 ], [ %v1_1000b5f4.pre.pre, %dec_label_pc_1000b65c.dec_label_pc_1000b5e8_crit_edge ]
  %v0_1000b5e8 = phi i32 [ %v1_1000b5d0, %dec_label_pc_1000b5e0 ], [ %v1_1000b65c, %dec_label_pc_1000b65c.dec_label_pc_1000b5e8_crit_edge ]
  %.0 = phi i32 [ undef, %dec_label_pc_1000b5e0 ], [ %v2_1000b644, %dec_label_pc_1000b65c.dec_label_pc_1000b5e8_crit_edge ]
  store i32 %v0_1000b5e8, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000b5ec

dec_label_pc_1000b5ec:                            ; preds = %dec_label_pc_1000b5ec, %dec_label_pc_1000b5e8
  %v1_1000b5f4 = phi i32 [ %v2_1000b5f8, %dec_label_pc_1000b5ec ], [ %v1_1000b5f4.pre, %dec_label_pc_1000b5e8 ]
  %v0_1000b5ec = load i32, i32* %r4.global-to-local, align 4
  %v1_1000b5ec = add i32 %v0_1000b5ec, 4
  %v2_1000b5ec = inttoptr i32 %v1_1000b5ec to i32*
  %v3_1000b5ec = load i32, i32* %v2_1000b5ec, align 4
  %v1_1000b5f0 = add i32 %v0_1000b5ec, 8
  %v2_1000b5f0 = inttoptr i32 %v1_1000b5f0 to i32*
  %v3_1000b5f0 = load i32, i32* %v2_1000b5f0, align 4
  store i32 %v3_1000b5f0, i32* %r9.global-to-local, align 4
  store i32 %v1_1000b5f0, i32* %r4.global-to-local, align 4
  %v2_1000b5f4 = add i32 %v1_1000b5f4, 4
  %v3_1000b5f4 = inttoptr i32 %v2_1000b5f4 to i32*
  store i32 %v3_1000b5ec, i32* %v3_1000b5f4, align 4
  %v0_1000b5f8 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b5f8 = load i32, i32* @r11, align 4
  %v2_1000b5f8 = add i32 %v1_1000b5f8, 8
  %v3_1000b5f8 = inttoptr i32 %v2_1000b5f8 to i32*
  store i32 %v0_1000b5f8, i32* %v3_1000b5f8, align 4
  store i32 %v2_1000b5f8, i32* @r11, align 4
  %v0_1000b5fc = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b5fc = add i32 %v0_1000b5fc, -1
  store i32 %v1_1000b5fc, i32* %ctr.global-to-local, align 4
  %v2_1000b5fc = icmp eq i32 %v1_1000b5fc, 0
  br i1 %v2_1000b5fc, label %dec_label_pc_1000b600, label %dec_label_pc_1000b5ec

dec_label_pc_1000b600:                            ; preds = %dec_label_pc_1000b5ec, %dec_label_pc_1000b65c, %dec_label_pc_1000b5d0
  %.1 = phi i32 [ undef, %dec_label_pc_1000b5d0 ], [ %v2_1000b644, %dec_label_pc_1000b65c ], [ %.0, %dec_label_pc_1000b5ec ]
  %v1_1000b600 = urem i32 %.1, 8
  store i32 %v1_1000b600, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_1000b600, 4
  br i1 %tmp, label %dec_label_pc_1000b618, label %dec_label_pc_1000b60c

dec_label_pc_1000b60c:                            ; preds = %dec_label_pc_1000b600
  %v0_1000b60c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000b60c = add i32 %v0_1000b60c, 4
  %v2_1000b60c = inttoptr i32 %v1_1000b60c to i32*
  %v3_1000b60c = load i32, i32* %v2_1000b60c, align 4
  store i32 %v1_1000b60c, i32* %r4.global-to-local, align 4
  %v1_1000b610 = add nsw i32 %v1_1000b600, -4
  store i32 %v1_1000b610, i32* @r5, align 4
  %v1_1000b614 = load i32, i32* @r11, align 4
  %v2_1000b614 = add i32 %v1_1000b614, 4
  %v3_1000b614 = inttoptr i32 %v2_1000b614 to i32*
  store i32 %v3_1000b60c, i32* %v3_1000b614, align 4
  store i32 %v2_1000b614, i32* @r11, align 4
  %v0_1000b618.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1000b618

dec_label_pc_1000b618:                            ; preds = %dec_label_pc_1000b600, %dec_label_pc_1000b60c
  %v0_1000b618 = phi i32 [ %v1_1000b600, %dec_label_pc_1000b600 ], [ %v0_1000b618.pre, %dec_label_pc_1000b60c ]
  %v3_1000b618 = icmp eq i32 %v0_1000b618, 0
  %v0_1000b61c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000b618, i32 %v0_1000b61c)
  %v0_1000b620 = load i32, i32* @r5, align 4
  store i32 %v0_1000b620, i32* %ctr.global-to-local, align 4
  %v0_1000b624 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000b624 = add i32 %v0_1000b624, 3
  store i32 %v1_1000b624, i32* %r4.global-to-local, align 4
  %v0_1000b628 = load i32, i32* @r11, align 4
  %v1_1000b628 = add i32 %v0_1000b628, 3
  store i32 %v1_1000b628, i32* %r9.global-to-local, align 4
  %v1_1000b62c9 = add i32 %v0_1000b624, 4
  %v2_1000b62c10 = inttoptr i32 %v1_1000b62c9 to i8*
  %v3_1000b62c11 = load i8, i8* %v2_1000b62c10, align 1
  store i32 %v1_1000b62c9, i32* %r4.global-to-local, align 4
  %v3_1000b63013 = add i32 %v0_1000b628, 4
  %v4_1000b63014 = inttoptr i32 %v3_1000b63013 to i8*
  store i8 %v3_1000b62c11, i8* %v4_1000b63014, align 1
  store i32 %v3_1000b63013, i32* %r9.global-to-local, align 4
  %v0_1000b63415 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b63416 = add i32 %v0_1000b63415, -1
  store i32 %v1_1000b63416, i32* %ctr.global-to-local, align 4
  %v2_1000b63417 = icmp eq i32 %v1_1000b63416, 0
  br i1 %v2_1000b63417, label %dec_label_pc_1000b668, label %dec_label_pc_1000b62c.dec_label_pc_1000b62c_crit_edge

dec_label_pc_1000b62c.dec_label_pc_1000b62c_crit_edge: ; preds = %dec_label_pc_1000b618, %dec_label_pc_1000b62c.dec_label_pc_1000b62c_crit_edge
  %v3_1000b63018 = phi i32 [ %v3_1000b630, %dec_label_pc_1000b62c.dec_label_pc_1000b62c_crit_edge ], [ %v3_1000b63013, %dec_label_pc_1000b618 ]
  %v0_1000b62c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1000b62c = add i32 %v0_1000b62c.pre, 1
  %v2_1000b62c = inttoptr i32 %v1_1000b62c to i8*
  %v3_1000b62c = load i8, i8* %v2_1000b62c, align 1
  store i32 %v1_1000b62c, i32* %r4.global-to-local, align 4
  %v3_1000b630 = add i32 %v3_1000b63018, 1
  %v4_1000b630 = inttoptr i32 %v3_1000b630 to i8*
  store i8 %v3_1000b62c, i8* %v4_1000b630, align 1
  store i32 %v3_1000b630, i32* %r9.global-to-local, align 4
  %v0_1000b634 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b634 = add i32 %v0_1000b634, -1
  store i32 %v1_1000b634, i32* %ctr.global-to-local, align 4
  %v2_1000b634 = icmp eq i32 %v1_1000b634, 0
  br i1 %v2_1000b634, label %dec_label_pc_1000b668, label %dec_label_pc_1000b62c.dec_label_pc_1000b62c_crit_edge

dec_label_pc_1000b63c:                            ; preds = %dec_label_pc_1000b5e0
  %v1_1000b63c = sub nsw i32 4, %v1_1000b5e0
  store i32 %v1_1000b63c, i32* %ctr.global-to-local, align 4
  %v1_1000b644 = load i32, i32* @r5, align 4
  %v2_1000b644 = sub i32 %v1_1000b644, %v1_1000b63c
  br label %dec_label_pc_1000b648

dec_label_pc_1000b648:                            ; preds = %dec_label_pc_1000b648.dec_label_pc_1000b648_crit_edge, %dec_label_pc_1000b63c
  %v2_1000b650 = phi i32 [ %v1_1000b654, %dec_label_pc_1000b648.dec_label_pc_1000b648_crit_edge ], [ %v1_1000b5d8, %dec_label_pc_1000b63c ]
  %v0_1000b648 = phi i32 [ %v0_1000b648.pre, %dec_label_pc_1000b648.dec_label_pc_1000b648_crit_edge ], [ %v1_1000b5d4, %dec_label_pc_1000b63c ]
  %v1_1000b648 = add i32 %v0_1000b648, 4
  %v2_1000b648 = inttoptr i32 %v1_1000b648 to i8*
  %v3_1000b648 = load i8, i8* %v2_1000b648, align 1
  %v1_1000b64c = add i32 %v0_1000b648, 1
  store i32 %v1_1000b64c, i32* %r4.global-to-local, align 4
  %v3_1000b650 = add i32 %v2_1000b650, 4
  %v4_1000b650 = inttoptr i32 %v3_1000b650 to i8*
  store i8 %v3_1000b648, i8* %v4_1000b650, align 1
  %v0_1000b654 = load i32, i32* @r11, align 4
  %v1_1000b654 = add i32 %v0_1000b654, 1
  store i32 %v1_1000b654, i32* @r11, align 4
  %v0_1000b658 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b658 = add i32 %v0_1000b658, -1
  store i32 %v1_1000b658, i32* %ctr.global-to-local, align 4
  %v2_1000b658 = icmp eq i32 %v1_1000b658, 0
  br i1 %v2_1000b658, label %dec_label_pc_1000b65c, label %dec_label_pc_1000b648.dec_label_pc_1000b648_crit_edge

dec_label_pc_1000b648.dec_label_pc_1000b648_crit_edge: ; preds = %dec_label_pc_1000b648
  %v0_1000b648.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000b648

dec_label_pc_1000b65c:                            ; preds = %dec_label_pc_1000b648
  %v1_1000b65c = call i32 @__asm_rlwinm.(i32 %v2_1000b644, i32 29, i32 3, i32 31)
  store i32 %v1_1000b65c, i32* %r9.global-to-local, align 4
  %v4_1000b65c = icmp eq i32 %v1_1000b65c, 0
  br i1 %v4_1000b65c, label %dec_label_pc_1000b600, label %dec_label_pc_1000b65c.dec_label_pc_1000b5e8_crit_edge

dec_label_pc_1000b65c.dec_label_pc_1000b5e8_crit_edge: ; preds = %dec_label_pc_1000b65c
  %v1_1000b5f4.pre.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_1000b5e8

dec_label_pc_1000b668:                            ; preds = %dec_label_pc_1000b62c.dec_label_pc_1000b62c_crit_edge, %dec_label_pc_1000b618
  %v0_1000b668 = load i32, i32* @r3, align 4
  ret i32 %v0_1000b668

; uselistorder directives
  uselistorder i32 %v1_1000b65c, { 1, 2, 0 }
  uselistorder i32 %v1_1000b658, { 1, 0 }
  uselistorder i32 %v1_1000b654, { 1, 0 }
  uselistorder i32 %v0_1000b648, { 1, 0 }
  uselistorder i32 %v2_1000b644, { 2, 1, 0 }
  uselistorder i32 %v1_1000b634, { 1, 0 }
  uselistorder i32 %v3_1000b630, { 1, 2, 0 }
  uselistorder i32 %v1_1000b600, { 3, 2, 1, 0 }
  uselistorder i32 %v1_1000b5fc, { 1, 0 }
  uselistorder i32 %v2_1000b5f8, { 1, 2, 0 }
  uselistorder i32 %v1_1000b5e0, { 1, 0 }
  uselistorder i32 %v1_1000b5d8, { 2, 1, 0, 3 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 4, 3, 0, 5, 8, 6, 10, 7, 9, 11 }
  uselistorder i32* %ctr.global-to-local, { 1, 2, 3, 5, 4, 0, 6, 7, 8, 9, 10 }
  uselistorder i32 undef, { 1, 0, 2, 3 }
  uselistorder i32* @r11, { 0, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm., { 5, 6, 0, 7, 8, 1, 2, 3, 4 }
  uselistorder i32 29, { 33, 34, 29, 31, 30, 32, 3, 4, 37, 38, 35, 36, 39, 40, 27, 28, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 25, 26, 15, 16, 19, 20, 21, 22, 17, 18, 23, 24, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000b62c.dec_label_pc_1000b62c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000b618, { 1, 0 }
  uselistorder label %dec_label_pc_1000b600, { 1, 0, 2 }
}

define i32 @function_1000b66c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_1000b66c:
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 268482184, i32* @lr, align 4
  %v0_1000b684 = call i32 @function_1000b5d0()
  %v0_1000b68c = load i32, i32* @r28, align 4
  %v1_1000b68c = load i32, i32* @r29, align 4
  %v2_1000b68c = add i32 %v1_1000b68c, %v0_1000b68c
  ret i32 %v2_1000b68c

; uselistorder directives
  uselistorder i32* @r28, { 8, 9, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 1, 69, 70, 71, 72, 73, 74, 291, 292, 293, 294, 295, 2, 44, 45, 46, 7, 47, 255, 256, 257, 258, 259, 260, 261, 262, 263, 277, 278, 279, 280, 10, 11, 12, 13, 14, 75, 76, 15, 16, 17, 18, 25, 26, 27, 28, 19, 3, 20, 21, 22, 23, 24, 4, 39, 29, 0, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 77, 78, 79, 80, 81, 82, 83, 5, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 211, 212, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 283, 281, 282, 284, 285, 6, 286, 287, 288, 289, 290 }
}

define i32 @function_1000b6a0(i8* %arg1) local_unnamed_addr {
dec_label_pc_1000b6a0:
  %r5.global-to-local = alloca i32, align 4
  %v3_1000b6a0 = icmp eq i8* %arg1, null
  br i1 %v3_1000b6a0, label %dec_label_pc_1000b758, label %dec_label_pc_1000b6a8

dec_label_pc_1000b6a8:                            ; preds = %dec_label_pc_1000b6a0
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_1000b6bc.pre = load i32, i32* bitcast (i32** @global_var_1001c24c.349 to i32*), align 4
  br label %dec_label_pc_1000b6b8

dec_label_pc_1000b6b8:                            ; preds = %dec_label_pc_1000b6a8, %dec_label_pc_1000b730
  %v0_1000b730 = phi i32 [ 0, %dec_label_pc_1000b6a8 ], [ %v2_1000b738, %dec_label_pc_1000b730 ]
  %v0_1000b734 = phi i32 [ 1, %dec_label_pc_1000b6a8 ], [ %v1_1000b734, %dec_label_pc_1000b730 ]
  %v0_1000b6b8 = phi i32 [ %tmp, %dec_label_pc_1000b6a8 ], [ %v0_1000b6b83, %dec_label_pc_1000b730 ]
  %v1_1000b6b8 = inttoptr i32 %v0_1000b6b8 to i8*
  %v2_1000b6b8 = load i8, i8* %v1_1000b6b8, align 1
  %v3_1000b6b8 = zext i8 %v2_1000b6b8 to i32
  %v1_1000b6c0 = mul nuw nsw i32 %v3_1000b6b8, 2
  %v2_1000b6c4 = add i32 %v1_1000b6c0, %v3_1000b6bc.pre
  %v3_1000b6c4 = inttoptr i32 %v2_1000b6c4 to i16*
  %v4_1000b6c4 = load i16, i16* %v3_1000b6c4, align 2
  %v1_1000b6c8 = and i16 %v4_1000b6c4, 8
  %v3_1000b6c8 = icmp eq i16 %v1_1000b6c8, 0
  br i1 %v3_1000b6c8, label %dec_label_pc_1000b758, label %dec_label_pc_1000b6d0

dec_label_pc_1000b6d0:                            ; preds = %dec_label_pc_1000b6b8
  br label %dec_label_pc_1000b6e8

dec_label_pc_1000b6d8:                            ; preds = %dec_label_pc_1000b6e8
  %v1_1000b6ec = mul i32 %v1_1000b738, 10
  %v2_1000b6f4 = add i32 %v3_1000b6e8, %v1_1000b6ec
  %v1_1000b6d8 = add i32 %v2_1000b6f4, -48
  %v1_1000b6dc = add i32 %v0_1000b720, 1
  %v2_1000b6e0 = icmp sgt i32 %v1_1000b6d8, 255
  br i1 %v2_1000b6e0, label %dec_label_pc_1000b758, label %dec_label_pc_1000b6e8

dec_label_pc_1000b6e8:                            ; preds = %dec_label_pc_1000b6d8, %dec_label_pc_1000b6d0
  %v1_1000b738 = phi i32 [ %v1_1000b6d8, %dec_label_pc_1000b6d8 ], [ 0, %dec_label_pc_1000b6d0 ]
  %v0_1000b720 = phi i32 [ %v1_1000b6dc, %dec_label_pc_1000b6d8 ], [ %v0_1000b6b8, %dec_label_pc_1000b6d0 ]
  %v1_1000b6e8 = inttoptr i32 %v0_1000b720 to i8*
  %v2_1000b6e8 = load i8, i8* %v1_1000b6e8, align 1
  %v3_1000b6e8 = zext i8 %v2_1000b6e8 to i32
  %v1_1000b6f0 = mul nuw nsw i32 %v3_1000b6e8, 2
  %v2_1000b6f8 = add i32 %v1_1000b6f0, %v3_1000b6bc.pre
  %v3_1000b6f8 = inttoptr i32 %v2_1000b6f8 to i16*
  %v4_1000b6f8 = load i16, i16* %v3_1000b6f8, align 2
  %v5_1000b6f8 = zext i16 %v4_1000b6f8 to i32
  %v1_1000b6fc = and i32 %v5_1000b6f8, 8
  %v3_1000b6fc = icmp eq i32 %v1_1000b6fc, 0
  br i1 %v3_1000b6fc, label %dec_label_pc_1000b704, label %dec_label_pc_1000b6d8

dec_label_pc_1000b704:                            ; preds = %dec_label_pc_1000b6e8
  %v2_1000b704 = icmp sgt i32 %v0_1000b734, 3
  br i1 %v2_1000b704, label %dec_label_pc_1000b71c, label %dec_label_pc_1000b70c

dec_label_pc_1000b70c:                            ; preds = %dec_label_pc_1000b704
  %v3_1000b70c = icmp eq i8 %v2_1000b6e8, 46
  br i1 %v3_1000b70c, label %dec_label_pc_1000b714, label %dec_label_pc_1000b758

dec_label_pc_1000b714:                            ; preds = %dec_label_pc_1000b70c
  %v1_1000b714 = add i32 %v0_1000b720, 1
  br label %dec_label_pc_1000b730

dec_label_pc_1000b71c:                            ; preds = %dec_label_pc_1000b704
  %v3_1000b71c = icmp eq i8 %v2_1000b6e8, 0
  %v1_1000b720 = add i32 %v0_1000b720, 1
  br i1 %v3_1000b71c, label %dec_label_pc_1000b730, label %dec_label_pc_1000b728

dec_label_pc_1000b728:                            ; preds = %dec_label_pc_1000b71c
  %v1_1000b728 = and i32 %v5_1000b6f8, 32
  %v3_1000b728 = icmp eq i32 %v1_1000b728, 0
  br i1 %v3_1000b728, label %dec_label_pc_1000b758, label %dec_label_pc_1000b730

dec_label_pc_1000b730:                            ; preds = %dec_label_pc_1000b728, %dec_label_pc_1000b71c, %dec_label_pc_1000b714
  %v0_1000b6b83 = phi i32 [ %v1_1000b720, %dec_label_pc_1000b728 ], [ %v1_1000b720, %dec_label_pc_1000b71c ], [ %v1_1000b714, %dec_label_pc_1000b714 ]
  %v1_1000b730 = mul i32 %v0_1000b730, 256
  %v1_1000b734 = add nuw nsw i32 %v0_1000b734, 1
  %v2_1000b738 = or i32 %v1_1000b738, %v1_1000b730
  store i32 %v2_1000b738, i32* %r5.global-to-local, align 4
  %tmp10 = icmp slt i32 %v1_1000b734, 5
  br i1 %tmp10, label %dec_label_pc_1000b6b8, label %dec_label_pc_1000b744

dec_label_pc_1000b744:                            ; preds = %dec_label_pc_1000b730
  %v0_1000b744 = load i32, i32* @r4, align 4
  %v3_1000b744 = icmp eq i32 %v0_1000b744, 0
  %v0_1000b74c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000b744, i32 %v0_1000b74c)
  %v0_1000b750 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000b750 = load i32, i32* @r4, align 4
  %v2_1000b750 = inttoptr i32 %v1_1000b750 to i32*
  store i32 %v0_1000b750, i32* %v2_1000b750, align 4
  ret i32 1

dec_label_pc_1000b758:                            ; preds = %dec_label_pc_1000b70c, %dec_label_pc_1000b728, %dec_label_pc_1000b6b8, %dec_label_pc_1000b6d8, %dec_label_pc_1000b6a0
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_1000b738, { 1, 0 }
  uselistorder i32 %v1_1000b734, { 1, 0 }
  uselistorder i32 %v0_1000b720, { 0, 1, 3, 2 }
  uselistorder i32 5, { 20, 2, 21, 22, 40, 23, 24, 41, 42, 26, 25, 43, 3, 4, 44, 0, 45, 46, 1, 47, 27, 28, 29, 30, 31, 32, 33, 48, 5, 7, 49, 6, 50, 10, 51, 9, 52, 8, 34, 53, 11, 13, 54, 35, 55, 12, 36, 56, 14, 37, 57, 15, 38, 58, 17, 59, 16, 39, 60, 19, 61, 18, 62, 63, 64, 65, 66 }
  uselistorder i8 0, { 5, 10, 0, 11, 12, 8, 13, 14, 15, 16, 17, 18, 1, 19, 20, 21, 22, 23, 25, 27, 24, 2, 26, 3, 28, 29, 6, 9, 30, 31, 32, 33, 34, 35, 36, 37, 4, 38, 39, 40, 41, 7, 42, 43, 44, 45, 46, 47, 48, 49 }
  uselistorder i8 46, { 1, 2, 3, 0 }
  uselistorder i32 8, { 124, 3, 138, 139, 61, 40, 41, 62, 63, 64, 65, 66, 67, 142, 143, 11, 140, 141, 12, 128, 127, 125, 126, 109, 110, 111, 129, 130, 131, 132, 133, 134, 4, 42, 43, 44, 5, 144, 6, 68, 69, 70, 71, 72, 73, 30, 31, 45, 29, 28, 46, 32, 33, 47, 48, 7, 8, 9, 49, 50, 52, 53, 34, 35, 54, 36, 55, 57, 56, 51, 58, 59, 60, 15, 74, 75, 16, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 37, 88, 89, 90, 91, 92, 93, 94, 95, 38, 96, 97, 98, 99, 100, 101, 102, 103, 104, 13, 105, 106, 107, 108, 14, 17, 112, 18, 113, 19, 114, 20, 115, 21, 116, 22, 117, 23, 118, 119, 24, 120, 25, 121, 26, 122, 27, 123, 0, 1, 10, 135, 136, 39, 137, 2 }
  uselistorder i32 255, { 2, 0, 1 }
  uselistorder i32 -48, { 2, 0, 1 }
  uselistorder i32 10, { 71, 33, 10, 32, 2, 3, 6, 5, 0, 11, 12, 13, 18, 19, 20, 21, 22, 23, 14, 24, 25, 26, 7, 27, 28, 31, 29, 4, 30, 15, 1, 16, 8, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 9, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 17, 70 }
  uselistorder i16 0, { 0, 1, 2, 4, 5, 6, 7, 9, 8, 3, 10, 11, 12, 13 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000b758, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_1000b6b8, { 1, 0 }
}

define i32 @function_1000b760(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000b760:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-172 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_1000b764 = load i32, i32* @lr, align 4
  store i32 %v0_1000b764, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_1000b770 = icmp eq i32* %arg2, null
  store i32 %arg3, i32* @r30, align 4
  store i32 %arg1, i32* @r29, align 4
  %v1_1000b780 = add i32 %tmp, 4
  store i32 %v1_1000b780, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  %v2_1000b788 = ptrtoint i32* %stack_var_-300 to i32
  store i32 %v2_1000b788, i32* @r3, align 4
  br i1 %v3_1000b770, label %dec_label_pc_1000b7b0, label %dec_label_pc_1000b790

dec_label_pc_1000b790:                            ; preds = %dec_label_pc_1000b760
  %v2_1000b790 = load i32, i32* %arg2, align 4
  store i32 %v2_1000b790, i32* %r0.global-to-local, align 4
  store i32 268482460, i32* @lr, align 4
  %v0_1000b798 = call i32 @function_1000b5d0()
  %v0_1000b79c = load i32, i32* @r31, align 4
  %v1_1000b79c = add i32 %v0_1000b79c, 132
  %v2_1000b79c = inttoptr i32 %v1_1000b79c to i32*
  %v3_1000b79c = load i32, i32* %v2_1000b79c, align 4
  store i32 %v3_1000b79c, i32* %r0.global-to-local, align 4
  %v1_1000b7a8 = add i32 %v0_1000b79c, 136
  %v2_1000b7a8 = inttoptr i32 %v1_1000b7a8 to i32*
  %v3_1000b7a8 = load i32, i32* %v2_1000b7a8, align 4
  store i32 %v3_1000b7a8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000b7b0

dec_label_pc_1000b7b0:                            ; preds = %dec_label_pc_1000b760, %dec_label_pc_1000b790
  store i32 268482512, i32* @lr, align 4
  %v0_1000b7cc = call i32 @function_1000b9c4()
  %v0_1000b7d0 = load i32, i32* @r30, align 4
  %v3_1000b7d0 = icmp eq i32 %v0_1000b7d0, 0
  store i32 %v0_1000b7cc, i32* @r31, align 4
  br i1 %v3_1000b7d0, label %dec_label_pc_1000b80c, label %dec_label_pc_1000b7e0

dec_label_pc_1000b7e0:                            ; preds = %dec_label_pc_1000b7b0
  %v1_1000b7d8 = icmp slt i32 %v0_1000b7cc, 0
  %v1_1000b7e0 = add i32 %v0_1000b7d0, 4
  store i32 %v1_1000b7e0, i32* @r3, align 4
  %v2_1000b7e4 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_1000b7e4, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  br i1 %v1_1000b7d8, label %dec_label_pc_1000b80c, label %dec_label_pc_1000b7f0

dec_label_pc_1000b7f0:                            ; preds = %dec_label_pc_1000b7e0
  %v3_1000b7f0 = load i32, i32* %stack_var_-172, align 4
  store i32 %v3_1000b7f0, i32* %r0.global-to-local, align 4
  %v2_1000b7f4 = inttoptr i32 %v0_1000b7d0 to i32*
  store i32 %v3_1000b7f0, i32* %v2_1000b7f4, align 4
  store i32 268482556, i32* @lr, align 4
  %v0_1000b7f8 = call i32 @function_1000b5d0()
  %v1_1000b804 = load i32, i32* @r30, align 4
  %v2_1000b804 = add i32 %v1_1000b804, 136
  %v3_1000b804 = inttoptr i32 %v2_1000b804 to i32*
  %v0_1000b808 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000b808 = load i32, i32* @r30, align 4
  %v2_1000b808 = add i32 %v1_1000b808, 132
  %v3_1000b808 = inttoptr i32 %v2_1000b808 to i32*
  store i32 %v0_1000b808, i32* %v3_1000b808, align 4
  %v0_1000b810.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000b80c

dec_label_pc_1000b80c:                            ; preds = %dec_label_pc_1000b7e0, %dec_label_pc_1000b7b0, %dec_label_pc_1000b7f0
  %v0_1000b810 = phi i32 [ %v0_1000b7cc, %dec_label_pc_1000b7e0 ], [ %v0_1000b7cc, %dec_label_pc_1000b7b0 ], [ %v0_1000b810.pre, %dec_label_pc_1000b7f0 ]
  store i32 %v0_1000b764, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000b810

; uselistorder directives
  uselistorder i32 %v0_1000b7cc, { 0, 1, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 4, 5, 6, 2 }
  uselistorder i32 ()* @function_1000b5d0, { 2, 1, 6, 4, 0, 3, 5, 7 }
  uselistorder i32* @r5, { 21, 22, 1, 23, 24, 0, 25, 26, 27, 10, 11, 12, 30, 20, 7, 8, 31, 32, 33, 34, 3, 13, 6, 28, 29, 2, 4, 5, 14, 18, 19, 16, 17, 9, 15 }
  uselistorder i32 128, { 7, 8, 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32* @r30, { 161, 162, 163, 164, 0, 143, 1, 48, 49, 50, 165, 168, 166, 167, 144, 145, 146, 138, 139, 140, 141, 142, 147, 148, 152, 149, 150, 151, 7, 8, 9, 10, 11, 12, 13, 2, 14, 3, 15, 22, 23, 16, 17, 18, 4, 19, 20, 21, 34, 35, 36, 37, 38, 39, 40, 41, 42, 24, 26, 27, 25, 28, 29, 30, 31, 32, 33, 43, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 57, 5, 58, 59, 6, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 154, 155, 153, 156, 157, 158, 159, 160 }
  uselistorder i32* null, { 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 1, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32* @r31, { 2, 305, 306, 307, 284, 3, 285, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 314, 315, 308, 9, 309, 310, 311, 312, 313, 82, 83, 286, 287, 288, 289, 290, 291, 276, 277, 278, 279, 280, 281, 282, 283, 292, 293, 294, 298, 295, 296, 297, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 112, 4, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 20, 21, 22, 23, 127, 128, 129, 130, 131, 24, 25, 26, 27, 28, 29, 39, 40, 41, 42, 43, 30, 31, 32, 33, 34, 35, 36, 37, 38, 71, 72, 0, 73, 5, 74, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 75, 76, 77, 78, 79, 80, 81, 6, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 132, 133, 134, 135, 136, 137, 138, 139, 140, 1, 7, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 8, 299, 300, 301, 302, 303, 304 }
  uselistorder label %dec_label_pc_1000b80c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000b7b0, { 1, 0 }
}

define i32 @function_1000b824(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b858.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v0_1000b83c = call i32 @function_1000ab7c()
  %v2_1000b844 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_1000b844, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 31, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v3_1000b85c33 = add i32 %v2_1000b844, 124
  %v4_1000b85c34 = inttoptr i32 %v3_1000b85c33 to i32*
  store i32 0, i32* %v4_1000b85c34, align 4
  %v0_1000b86035 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b86036 = add i32 %v0_1000b86035, -1
  store i32 %v1_1000b86036, i32* %r9.global-to-local, align 4
  %v0_1000b86437 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b86438 = add i32 %v0_1000b86437, -1
  store i32 %v1_1000b86438, i32* %ctr.global-to-local, align 4
  %v2_1000b86439 = icmp eq i32 %v1_1000b86438, 0
  br i1 %v2_1000b86439, label %dec_label_pc_1000b868, label %dec_label_pc_1000b858.dec_label_pc_1000b858_crit_edge

dec_label_pc_1000b858.dec_label_pc_1000b858_crit_edge: ; preds = %dec_label_pc_1000b858.lr.ph, %dec_label_pc_1000b858.dec_label_pc_1000b858_crit_edge
  %v1_1000b86040 = phi i32 [ %v1_1000b860, %dec_label_pc_1000b858.dec_label_pc_1000b858_crit_edge ], [ %v1_1000b86036, %dec_label_pc_1000b858.lr.ph ]
  %v0_1000b85c.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b85c.pre = load i32, i32* %r29.global-to-local, align 4
  %v1_1000b858 = mul i32 %v1_1000b86040, 4
  %v3_1000b85c = add i32 %v1_1000b858, %v1_1000b85c.pre
  %v4_1000b85c = inttoptr i32 %v3_1000b85c to i32*
  store i32 %v0_1000b85c.pre, i32* %v4_1000b85c, align 4
  %v0_1000b860 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b860 = add i32 %v0_1000b860, -1
  store i32 %v1_1000b860, i32* %r9.global-to-local, align 4
  %v0_1000b864 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b864 = add i32 %v0_1000b864, -1
  store i32 %v1_1000b864, i32* %ctr.global-to-local, align 4
  %v2_1000b864 = icmp eq i32 %v1_1000b864, 0
  br i1 %v2_1000b864, label %dec_label_pc_1000b868, label %dec_label_pc_1000b858.dec_label_pc_1000b858_crit_edge

dec_label_pc_1000b868:                            ; preds = %dec_label_pc_1000b858.dec_label_pc_1000b858_crit_edge, %dec_label_pc_1000b858.lr.ph
  store i32 %v2_1000b844, i32* @r3, align 4
  store i32 6, i32* @r4, align 4
  %v0_1000b870 = call i32 @function_10009fd0()
  %v3_1000b874 = icmp eq i32 %v0_1000b870, 0
  br i1 %v3_1000b874, label %dec_label_pc_1000b87c, label %dec_label_pc_1000b88c

dec_label_pc_1000b87c:                            ; preds = %dec_label_pc_1000b868
  store i32 268482700, i32* @lr, align 4
  %v3_1000b888 = call i32 @function_10009424(i32 1, i32 %v2_1000b844, i32 0)
  br label %dec_label_pc_1000b88c

dec_label_pc_1000b88c:                            ; preds = %dec_label_pc_1000b868, %dec_label_pc_1000b87c
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000b890 = load i32, i32* @global_var_1001c2b4.370, align 4
  %v3_1000b894 = icmp eq i32 %v3_1000b890, 0
  br i1 %v3_1000b894, label %dec_label_pc_1000b89c, label %dec_label_pc_1000b8c4

dec_label_pc_1000b89c:                            ; preds = %dec_label_pc_1000b88c
  store i32 1, i32* @global_var_1001c2b4.370, align 4
  br label %dec_label_pc_1000b8a4

dec_label_pc_1000b8a4:                            ; preds = %dec_label_pc_1000b920, %dec_label_pc_1000b89c
  store i32 ptrtoint (i32* @global_var_1001c218.368 to i32), i32* %r29.global-to-local, align 4
  %v0_1000b8b0 = call i32 @function_1000ab7c()
  store i32 268482748, i32* @lr, align 4
  %v1_1000b8b8 = call i32 @function_1000ba0c(i32 6)
  %v0_1000b8c0 = call i32 @function_1000ab7c()
  %v3_1000b8c8.pre = load i32, i32* @global_var_1001c2b4.370, align 4
  br label %dec_label_pc_1000b8c4

dec_label_pc_1000b8c4:                            ; preds = %dec_label_pc_1000b88c, %dec_label_pc_1000b8a4
  %v0_1000b93c = phi i32 [ %v3_1000b890, %dec_label_pc_1000b88c ], [ %v3_1000b8c8.pre, %dec_label_pc_1000b8a4 ]
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000b8cc = icmp eq i32 %v0_1000b93c, 1
  br i1 %v3_1000b8cc, label %dec_label_pc_1000b90c.lr.ph, label %dec_label_pc_1000b93c

dec_label_pc_1000b90c.lr.ph:                      ; preds = %dec_label_pc_1000b8c4
  %v2_1000b8d8 = ptrtoint i32* %stack_var_-168 to i32
  store i32 2, i32* @global_var_1001c2b4.370, align 4
  store i32 ptrtoint (i32* @global_var_1000b8ec.372 to i32), i32* @lr, align 4
  %v3_1000b8e8 = call i32 @function_100098d0(i32 %v2_1000b8d8, i32 0, i32 140)
  store i32 %v2_1000b844, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  store i32 0, i32* %stack_var_-168, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 %v3_1000b85c33, i32* %r9.global-to-local, align 4
  %v2_1000b91425 = add i32 %v2_1000b844, 256
  %v3_1000b91426 = inttoptr i32 %v2_1000b91425 to i32*
  store i32 -1, i32* %v3_1000b91426, align 4
  %v0_1000b91827 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b91828 = add i32 %v0_1000b91827, -1
  store i32 %v1_1000b91828, i32* %r11.global-to-local, align 4
  %v0_1000b91c29 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b91c30 = add i32 %v0_1000b91c29, -1
  store i32 %v1_1000b91c30, i32* %ctr.global-to-local, align 4
  %v2_1000b91c31 = icmp eq i32 %v1_1000b91c30, 0
  br i1 %v2_1000b91c31, label %dec_label_pc_1000b920, label %dec_label_pc_1000b90c.dec_label_pc_1000b90c_crit_edge

dec_label_pc_1000b90c.dec_label_pc_1000b90c_crit_edge: ; preds = %dec_label_pc_1000b90c.lr.ph, %dec_label_pc_1000b90c.dec_label_pc_1000b90c_crit_edge
  %v1_1000b91832 = phi i32 [ %v1_1000b918, %dec_label_pc_1000b90c.dec_label_pc_1000b90c_crit_edge ], [ %v1_1000b91828, %dec_label_pc_1000b90c.lr.ph ]
  %v1_1000b910.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_1000b914.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b90c = mul i32 %v1_1000b91832, 4
  %v2_1000b910 = add i32 %v1_1000b90c, %v1_1000b910.pre
  store i32 %v2_1000b910, i32* %r9.global-to-local, align 4
  %v2_1000b914 = add i32 %v2_1000b910, 132
  %v3_1000b914 = inttoptr i32 %v2_1000b914 to i32*
  store i32 %v0_1000b914.pre, i32* %v3_1000b914, align 4
  %v0_1000b918 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b918 = add i32 %v0_1000b918, -1
  store i32 %v1_1000b918, i32* %r11.global-to-local, align 4
  %v0_1000b91c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b91c = add i32 %v0_1000b91c, -1
  store i32 %v1_1000b91c, i32* %ctr.global-to-local, align 4
  %v2_1000b91c = icmp eq i32 %v1_1000b91c, 0
  br i1 %v2_1000b91c, label %dec_label_pc_1000b920, label %dec_label_pc_1000b90c.dec_label_pc_1000b90c_crit_edge

dec_label_pc_1000b920:                            ; preds = %dec_label_pc_1000b90c.dec_label_pc_1000b90c_crit_edge, %dec_label_pc_1000b90c.lr.ph
  store i32 268482872, i32* @lr, align 4
  %v4_1000b934 = call i32 @function_1000b760(i32 6, i32* nonnull %stack_var_-168, i32 0)
  br label %dec_label_pc_1000b8a4

dec_label_pc_1000b93c:                            ; preds = %dec_label_pc_1000b8c4
  %v3_1000b93c = icmp eq i32 %v0_1000b93c, 2
  br i1 %v3_1000b93c, label %dec_label_pc_1000b944, label %dec_label_pc_1000b950

dec_label_pc_1000b944:                            ; preds = %dec_label_pc_1000b93c
  store i32 3, i32* @global_var_1001c2b4.370, align 4
  br label %dec_label_pc_1000b950

dec_label_pc_1000b950:                            ; preds = %dec_label_pc_1000b93c, %dec_label_pc_1000b944
  %v3_1000b950 = phi i32 [ %v0_1000b93c, %dec_label_pc_1000b93c ], [ 3, %dec_label_pc_1000b944 ]
  %v1_1000b958 = icmp ne i32 %v3_1000b950, 3
  call void @__pseudo_cond_branch(i1 %v1_1000b958, i32 268482924)
  store i32 4, i32* @global_var_1001c2b4.370, align 4
  %v1_1000b968 = call i32 @function_1000af1c(i32 127)
  ret i32 %v1_1000b968

; uselistorder directives
  uselistorder i32 %v1_1000b91c, { 1, 0 }
  uselistorder i32 %v1_1000b918, { 1, 0 }
  uselistorder i32 %v1_1000b864, { 1, 0 }
  uselistorder i32 %v1_1000b860, { 1, 0 }
  uselistorder i32 %v2_1000b844, { 0, 2, 3, 4, 1, 5 }
  uselistorder i32* %r9.global-to-local, { 4, 2, 5, 6, 8, 7, 3, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 4, 3, 2, 0, 1, 5, 6 }
  uselistorder i32* %ctr.global-to-local, { 7, 6, 4, 0, 1, 9, 8, 5, 2, 3 }
  uselistorder i32 (i32)* @function_1000af1c, { 1, 0 }
  uselistorder i32 127, { 0, 1, 3, 2 }
  uselistorder i32 3, { 0, 6, 31, 94, 97, 98, 99, 100, 92, 95, 96, 46, 102, 101, 8, 103, 104, 105, 67, 68, 1, 7, 32, 33, 47, 48, 49, 50, 2, 52, 53, 54, 55, 56, 9, 57, 34, 58, 10, 51, 65, 35, 3, 89, 36, 59, 60, 62, 63, 61, 64, 66, 4, 69, 70, 12, 37, 5, 11, 71, 14, 72, 38, 13, 73, 74, 75, 15, 39, 16, 76, 77, 78, 17, 40, 18, 79, 80, 20, 41, 19, 81, 82, 42, 83, 21, 22, 23, 84, 85, 43, 86, 24, 25, 26, 87, 88, 27, 44, 28, 90, 91, 29, 45, 30, 93 }
  uselistorder i32 (i32, i32*, i32)* @function_1000b760, { 1, 2, 0 }
  uselistorder i32 132, { 1, 2, 3, 0 }
  uselistorder i32 256, { 72, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 0, 75, 21, 22, 23, 24, 25, 26, 27, 28, 76, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 73, 45, 46, 47, 48, 49, 50, 51, 52, 74, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71 }
  uselistorder i32 (i32, i32, i32)* @function_100098d0, { 1, 6, 9, 0, 2, 8, 7, 5, 4, 3 }
  uselistorder i32 2, { 213, 41, 0, 1, 60, 61, 214, 62, 215, 63, 216, 30, 2, 3, 4, 42, 113, 126, 217, 114, 31, 64, 43, 65, 33, 32, 34, 66, 67, 115, 45, 44, 116, 117, 68, 118, 5, 6, 119, 120, 39, 121, 46, 122, 69, 125, 8, 7, 71, 70, 72, 35, 200, 75, 76, 74, 73, 47, 9, 10, 11, 123, 124, 77, 48, 78, 79, 80, 81, 49, 83, 82, 84, 51, 50, 85, 86, 87, 88, 89, 90, 36, 40, 127, 201, 12, 37, 202, 13, 128, 129, 130, 131, 132, 133, 134, 91, 135, 136, 52, 137, 138, 139, 140, 141, 93, 142, 92, 143, 144, 145, 146, 147, 148, 149, 150, 94, 151, 53, 95, 96, 152, 153, 97, 98, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 14, 15, 16, 17, 18, 19, 99, 164, 54, 165, 166, 167, 168, 169, 20, 21, 22, 23, 24, 25, 100, 170, 55, 171, 172, 173, 174, 175, 101, 177, 176, 26, 27, 102, 178, 56, 179, 180, 181, 182, 183, 103, 185, 184, 28, 29, 104, 186, 57, 105, 106, 187, 188, 107, 108, 189, 190, 191, 192, 193, 194, 196, 197, 198, 195, 109, 199, 58, 203, 204, 205, 110, 111, 207, 208, 209, 206, 112, 210, 59, 211, 38, 212 }
  uselistorder i32* @global_var_1001c2b4.370, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 268566528, { 34, 35, 0, 36, 2, 1, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 4, 30, 5, 31, 32, 33 }
  uselistorder i32 (i32, i32, i32)* @function_10009424, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 ()* @function_10009fd0, { 2, 1, 0, 4, 3 }
  uselistorder i32* @r4, { 76, 77, 78, 73, 74, 79, 35, 1, 36, 7, 37, 86, 85, 5, 4, 80, 82, 83, 72, 81, 9, 8, 75, 10, 11, 12, 6, 38, 39, 84, 13, 14, 15, 40, 19, 20, 21, 16, 17, 18, 27, 28, 29, 3, 66, 67, 68, 69, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 41, 0, 2, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 70, 71 }
  uselistorder i32 6, { 12, 13, 62, 1, 14, 15, 27, 16, 17, 28, 18, 19, 29, 30, 20, 31, 2, 32, 0, 33, 34, 35, 36, 3, 37, 38, 39, 4, 40, 41, 42, 43, 5, 6, 44, 45, 46, 21, 7, 47, 48, 22, 8, 49, 23, 50, 24, 9, 51, 52, 53, 54, 25, 10, 55, 56, 57, 58, 59, 26, 11, 60, 61 }
  uselistorder i32 4, { 130, 0, 1, 368, 369, 370, 371, 372, 69, 70, 373, 374, 131, 375, 376, 2, 200, 201, 152, 153, 202, 203, 205, 377, 384, 3, 4, 5, 6, 7, 347, 349, 348, 345, 346, 316, 317, 318, 319, 350, 351, 352, 353, 354, 355, 356, 357, 358, 8, 154, 9, 79, 155, 156, 378, 379, 380, 132, 381, 382, 383, 10, 204, 133, 11, 206, 207, 208, 209, 210, 134, 135, 157, 136, 158, 159, 160, 82, 78, 161, 162, 163, 164, 12, 166, 167, 173, 174, 165, 175, 72, 176, 71, 80, 178, 81, 179, 180, 181, 182, 183, 177, 168, 169, 170, 171, 172, 192, 13, 193, 14, 194, 195, 196, 73, 137, 197, 303, 184, 138, 84, 83, 85, 185, 186, 187, 74, 188, 75, 189, 190, 191, 15, 198, 199, 76, 211, 212, 213, 16, 214, 215, 216, 217, 90, 218, 219, 17, 18, 89, 220, 221, 19, 86, 88, 87, 222, 223, 20, 224, 225, 95, 226, 21, 22, 227, 94, 228, 91, 229, 93, 92, 230, 231, 232, 101, 23, 24, 233, 234, 25, 235, 236, 237, 100, 26, 27, 96, 238, 97, 99, 98, 239, 240, 241, 242, 243, 244, 139, 103, 102, 245, 246, 28, 247, 248, 249, 104, 250, 251, 29, 30, 105, 252, 106, 108, 107, 253, 254, 31, 255, 256, 113, 257, 258, 32, 33, 112, 259, 109, 111, 110, 260, 261, 262, 263, 34, 264, 265, 266, 267, 140, 268, 35, 269, 270, 36, 271, 115, 272, 114, 141, 273, 274, 275, 276, 37, 277, 278, 279, 280, 142, 281, 38, 282, 283, 39, 284, 117, 285, 116, 143, 286, 287, 288, 289, 290, 291, 144, 119, 118, 292, 293, 294, 295, 40, 297, 298, 145, 299, 300, 301, 124, 302, 41, 42, 146, 296, 123, 120, 122, 121, 304, 305, 306, 307, 308, 147, 148, 43, 310, 311, 149, 312, 313, 314, 129, 315, 44, 45, 150, 309, 128, 125, 127, 126, 46, 320, 321, 47, 48, 322, 323, 49, 50, 324, 325, 51, 52, 326, 327, 53, 54, 328, 329, 55, 56, 330, 331, 57, 332, 58, 333, 334, 59, 60, 335, 336, 61, 62, 337, 338, 63, 64, 339, 340, 65, 66, 341, 342, 67, 343, 344, 359, 360, 361, 362, 363, 364, 77, 365, 68, 366, 367, 151 }
  uselistorder i32 32, { 19, 20, 48, 37, 38, 27, 28, 15, 16, 35, 36, 29, 0, 1, 2, 17, 39, 18, 40, 3, 4, 5, 6, 22, 30, 23, 21, 33, 7, 8, 9, 24, 34, 10, 11, 12, 13, 14, 25, 26, 31, 32, 41, 42, 43, 44, 45, 46, 47 }
  uselistorder i32 31, { 1, 2, 28, 29, 17, 30, 31, 3, 4, 0, 5, 32, 33, 18, 19, 20, 21, 24, 25, 22, 23, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 14, 26, 27 }
  uselistorder i32 ()* @function_1000ab7c, { 3, 2, 1, 0, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 21, 20, 19 }
  uselistorder label %dec_label_pc_1000b950, { 1, 0 }
  uselistorder label %dec_label_pc_1000b90c.dec_label_pc_1000b90c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000b8c4, { 1, 0 }
  uselistorder label %dec_label_pc_1000b88c, { 1, 0 }
  uselistorder label %dec_label_pc_1000b858.dec_label_pc_1000b858_crit_edge, { 1, 0 }
}

define i32 @function_1000b974(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b974:
  %v1_1000b974 = add i32 %arg1, 28
  %v2_1000b974 = inttoptr i32 %v1_1000b974 to i32*
  %v3_1000b974 = load i32, i32* %v2_1000b974, align 4
  store i32 %v3_1000b974, i32* @global_var_1001c2b8.373, align 4
  %v1_1000b984 = add i32 %arg1, 44
  %v2_1000b984 = inttoptr i32 %v1_1000b984 to i32*
  %v3_1000b984 = load i32, i32* %v2_1000b984, align 4
  store i32 %v3_1000b984, i32* @global_var_1001c2bc.374, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 44, { 7, 0, 5, 6, 1, 2, 3, 4 }
  uselistorder i32 28, { 45, 16, 17, 5, 6, 18, 15, 44, 7, 9, 10, 11, 12, 8, 13, 14, 2, 3, 4, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 0, 40, 41, 42, 1, 43 }
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @function_1000b990(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b990:
  store i32 %arg1, i32* @global_var_1001c2c0.367, align 4
  %v0_1000b9b8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 true, i32 %v0_1000b9b8)
  %v1_1000b9c0 = call i32 @function_1000ba3c(i32 12)
  ret i32 %v1_1000b9c0

; uselistorder directives
  uselistorder i32 12, { 16, 49, 50, 28, 29, 51, 52, 53, 54, 108, 109, 110, 111, 6, 106, 112, 0, 1, 9, 107, 5, 17, 18, 10, 30, 55, 56, 19, 57, 58, 59, 20, 21, 31, 22, 23, 32, 24, 25, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 26, 46, 27, 47, 7, 48, 41, 8, 101, 60, 11, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 12, 73, 74, 75, 76, 77, 78, 79, 13, 80, 81, 82, 83, 84, 85, 86, 87, 88, 14, 89, 90, 91, 92, 93, 94, 95, 96, 97, 15, 98, 99, 100, 102, 103, 104, 105, 2, 3, 4 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 6, 10, 5, 11, 7, 12, 4, 0, 8, 1, 3, 2, 9 }
  uselistorder i1 true, { 2, 0, 1 }
  uselistorder i32* @global_var_1001c2c0.367, { 1, 0, 2 }
}

define i32 @function_1000b9c4() local_unnamed_addr {
dec_label_pc_1000b9c4:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b9dc = call i32 @__asm_mfcr()
  %v1_1000b9e0 = and i32 %v0_1000b9dc, 268435456
  %v3_1000b9e0 = icmp eq i32 %v1_1000b9e0, 0
  store i32 %v0_1000b9dc, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b9e0, label %dec_label_pc_1000b9f8, label %dec_label_pc_1000b9ec

dec_label_pc_1000b9ec:                            ; preds = %dec_label_pc_1000b9c4
  %v0_1000b9ec = call i32 @function_100097e8()
  %v0_1000b9f0 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b9f0 = inttoptr i32 %v0_1000b9ec to i32*
  store i32 %v0_1000b9f0, i32* %v2_1000b9f0, align 4
  br label %dec_label_pc_1000b9f8

dec_label_pc_1000b9f8:                            ; preds = %dec_label_pc_1000b9c4, %dec_label_pc_1000b9ec
  %v0_1000ba08 = phi i32 [ %v0_1000b9dc, %dec_label_pc_1000b9c4 ], [ -1, %dec_label_pc_1000b9ec ]
  ret i32 %v0_1000ba08

; uselistorder directives
  uselistorder i32 268435456, { 43, 25, 44, 32, 45, 46, 47, 48, 33, 34, 49, 50, 26, 31, 37, 51, 27, 30, 35, 36, 28, 52, 41, 39, 42, 40, 38, 53, 54, 29, 2, 0, 1, 5, 3, 4, 8, 6, 7, 9, 10, 13, 11, 12, 16, 14, 15, 17, 20, 18, 19, 23, 21, 22, 24 }
  uselistorder i32 ()* @__asm_mfcr, { 12, 48, 11, 39, 10, 9, 8, 7, 38, 37, 6, 5, 4, 47, 40, 25, 3, 46, 42, 36, 35, 45, 2, 14, 16, 13, 15, 20, 1, 0, 44, 43, 41, 34, 33, 32, 31, 30, 29, 28, 27, 26, 24, 23, 22, 21, 19, 18, 17 }
  uselistorder label %dec_label_pc_1000b9f8, { 1, 0 }
}

define i32 @function_1000ba0c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000ba0c:
  %v0_1000ba0c = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 268483108, i32* @lr, align 4
  %v0_1000ba20 = call i32 @function_1000915c()
  %v0_1000ba28 = load i32, i32* @r29, align 4
  store i32 %v0_1000ba0c, i32* @lr, align 4
  %v2_1000ba38 = call i32 @function_100091ec(i32 %v0_1000ba20, i32 %v0_1000ba28)
  ret i32 %v2_1000ba38

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_100091ec, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @function_1000915c, { 0, 3, 2, 1 }
}

define i32 @function_1000ba3c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000ba3c:
  store i32 %arg1, i32* @r29, align 4
  %v0_1000ba50 = call i32 @function_100097e8()
  %v0_1000ba54 = load i32, i32* @r29, align 4
  %v2_1000ba54 = inttoptr i32 %v0_1000ba50 to i32*
  store i32 %v0_1000ba54, i32* %v2_1000ba54, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 ()* @function_100097e8, { 23, 15, 52, 14, 34, 13, 12, 11, 10, 33, 32, 31, 9, 8, 0, 7, 6, 37, 36, 21, 22, 51, 50, 49, 48, 30, 29, 28, 47, 35, 26, 5, 4, 46, 40, 27, 25, 45, 3, 17, 19, 16, 18, 24, 2, 1, 44, 43, 42, 41, 39, 38, 20 }
  uselistorder i32* @r29, { 295, 296, 318, 319, 320, 14, 15, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 321, 322, 323, 324, 325, 1, 65, 297, 298, 299, 300, 293, 294, 301, 2, 302, 303, 304, 305, 306, 307, 16, 17, 18, 86, 87, 88, 89, 90, 91, 92, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 43, 44, 45, 46, 37, 38, 39, 40, 41, 42, 3, 56, 57, 58, 4, 59, 60, 61, 47, 0, 48, 49, 50, 51, 52, 53, 54, 55, 62, 63, 64, 66, 67, 68, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 101, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 5, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 6, 178, 7, 179, 8, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 9, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 10, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 11, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 12, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 309, 308, 310, 311, 312, 13, 313, 314, 315, 316, 317 }
}

define i32 @function_1000ba70(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000ba70:
  %r31.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1001c0d4.355 to i32), i32* %r31.global-to-local, align 4
  %v3_1000ba8c = load i32, i32* @global_var_1001c0d4.355, align 4
  %v3_1000ba90 = icmp eq i32 %v3_1000ba8c, -1
  br i1 %v3_1000ba90, label %dec_label_pc_1000baac, label %dec_label_pc_1000ba98

dec_label_pc_1000ba98:                            ; preds = %dec_label_pc_1000ba70, %dec_label_pc_1000ba98
  %v0_1000ba98 = phi i32 [ %v3_1000baa0, %dec_label_pc_1000ba98 ], [ %v3_1000ba8c, %dec_label_pc_1000ba70 ]
  call void @__pseudo_call(i32 %v0_1000ba98)
  %v0_1000baa0 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000baa0 = add i32 %v0_1000baa0, -4
  %v2_1000baa0 = inttoptr i32 %v1_1000baa0 to i32*
  %v3_1000baa0 = load i32, i32* %v2_1000baa0, align 4
  store i32 %v1_1000baa0, i32* %r31.global-to-local, align 4
  %v3_1000baa4 = icmp eq i32 %v3_1000baa0, -1
  br i1 %v3_1000baa4, label %dec_label_pc_1000baac, label %dec_label_pc_1000ba98

dec_label_pc_1000baac:                            ; preds = %dec_label_pc_1000ba98, %dec_label_pc_1000ba70
  %v0_1000babc = load i32, i32* @r3, align 4
  ret i32 %v0_1000babc

; uselistorder directives
  uselistorder i32 %v3_1000baa0, { 1, 0 }
  uselistorder i32 -4, { 0, 13, 14, 15, 7, 8, 9, 10, 11, 12, 16, 17, 1, 2, 3, 4, 5, 6 }
  uselistorder void (i32)* @__pseudo_call, { 1, 3, 4, 2, 0 }
  uselistorder i32 -1, { 143, 144, 0, 39, 93, 273, 11, 12, 13, 274, 94, 275, 9, 10, 95, 96, 14, 97, 40, 41, 266, 80, 42, 209, 43, 44, 45, 46, 47, 210, 211, 212, 213, 214, 219, 48, 286, 284, 49, 276, 277, 81, 98, 278, 17, 18, 99, 283, 15, 16, 195, 3, 82, 267, 268, 34, 145, 282, 279, 50, 146, 100, 147, 19, 20, 148, 149, 150, 37, 51, 151, 152, 78, 101, 102, 103, 104, 215, 216, 21, 22, 23, 105, 217, 218, 106, 83, 79, 220, 221, 52, 53, 54, 55, 280, 281, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 285, 69, 153, 107, 24, 222, 223, 108, 1, 109, 110, 154, 70, 71, 111, 2, 112, 25, 113, 72, 114, 26, 224, 84, 155, 115, 85, 156, 157, 158, 116, 159, 160, 73, 163, 117, 28, 118, 27, 119, 164, 120, 74, 165, 166, 167, 121, 122, 161, 162, 184, 77, 4, 185, 186, 123, 29, 187, 188, 189, 190, 191, 124, 38, 168, 86, 169, 170, 88, 171, 172, 87, 173, 174, 175, 89, 176, 177, 178, 75, 179, 180, 125, 30, 126, 31, 181, 182, 183, 192, 76, 193, 194, 127, 128, 129, 130, 131, 132, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 35, 36, 225, 226, 227, 228, 229, 133, 134, 135, 230, 231, 136, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 250, 32, 252, 253, 255, 254, 33, 256, 257, 258, 259, 5, 260, 6, 261, 262, 7, 263, 8, 264, 265, 137, 138, 269, 139, 270, 140, 141, 271, 272, 142, 90, 91, 92 }
  uselistorder i32 1, { 200, 512, 1043, 641, 642, 722, 721, 385, 381, 384, 383, 380, 382, 725, 724, 723, 523, 0, 1029, 1030, 1031, 1032, 565, 52, 1044, 1045, 1046, 1047, 521, 520, 519, 53, 54, 56, 57, 55, 257, 213, 726, 392, 393, 386, 379, 518, 517, 728, 727, 419, 418, 420, 416, 415, 417, 414, 421, 643, 344, 345, 347, 346, 729, 486, 90, 644, 730, 26, 24, 23, 25, 645, 587, 1051, 1048, 734, 733, 732, 731, 76, 74, 71, 75, 73, 72, 646, 1050, 735, 898, 899, 900, 640, 901, 566, 27, 28, 30, 29, 31, 229, 227, 228, 44, 45, 47, 48, 46, 351, 544, 736, 522, 1049, 511, 647, 648, 739, 738, 737, 69, 66, 67, 68, 65, 70, 412, 588, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 845, 754, 753, 398, 399, 756, 755, 50, 49, 51, 939, 533, 9, 8, 7, 1052, 1053, 396, 394, 397, 395, 60, 61, 59, 62, 63, 64, 757, 649, 758, 11, 10, 12, 650, 759, 348, 349, 589, 760, 13, 413, 256, 485, 93, 58, 214, 430, 260, 422, 761, 119, 387, 508, 510, 509, 507, 762, 232, 763, 313, 846, 764, 89, 914, 915, 534, 535, 549, 916, 917, 545, 918, 767, 766, 765, 37, 33, 34, 38, 32, 36, 39, 35, 1, 903, 902, 904, 905, 940, 941, 524, 942, 943, 769, 768, 919, 920, 921, 651, 922, 19, 20, 21, 22, 1026, 1027, 568, 567, 1028, 183, 842, 844, 843, 652, 923, 536, 488, 487, 489, 1033, 92, 91, 924, 925, 537, 538, 550, 926, 40, 41, 42, 43, 944, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 965, 179, 182, 181, 180, 945, 388, 391, 390, 389, 288, 289, 551, 590, 847, 848, 653, 849, 850, 654, 851, 852, 854, 858, 859, 855, 856, 857, 860, 655, 861, 656, 657, 862, 658, 659, 863, 869, 870, 575, 715, 777, 776, 775, 774, 773, 772, 771, 770, 505, 498, 497, 495, 491, 502, 494, 493, 499, 490, 492, 496, 504, 503, 506, 501, 500, 864, 865, 660, 866, 867, 661, 868, 211, 202, 205, 207, 209, 208, 210, 204, 203, 212, 206, 853, 662, 400, 401, 548, 878, 879, 883, 880, 886, 881, 525, 526, 882, 546, 527, 528, 539, 529, 530, 884, 885, 547, 531, 532, 540, 887, 663, 888, 889, 664, 890, 891, 892, 895, 896, 893, 894, 552, 897, 591, 785, 784, 783, 782, 781, 716, 780, 779, 778, 198, 192, 190, 184, 191, 194, 193, 187, 185, 186, 188, 196, 197, 195, 199, 189, 1010, 665, 553, 516, 514, 515, 513, 946, 786, 16, 14, 15, 667, 593, 871, 592, 872, 666, 668, 874, 875, 873, 569, 876, 669, 670, 671, 672, 673, 674, 877, 576, 798, 797, 796, 795, 719, 794, 793, 792, 791, 790, 789, 788, 787, 428, 426, 427, 5, 425, 6, 424, 429, 423, 675, 676, 677, 350, 678, 595, 594, 570, 800, 799, 679, 574, 906, 684, 680, 907, 681, 908, 682, 909, 683, 910, 911, 912, 541, 685, 913, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 577, 812, 811, 810, 809, 808, 807, 806, 805, 804, 803, 802, 801, 220, 224, 223, 217, 215, 218, 216, 225, 222, 221, 219, 226, 927, 696, 928, 929, 930, 931, 932, 3, 571, 933, 934, 2, 935, 936, 937, 938, 815, 814, 717, 718, 813, 259, 258, 1011, 1014, 1012, 572, 1013, 230, 1015, 1016, 1017, 697, 698, 947, 948, 949, 950, 951, 952, 955, 953, 954, 956, 957, 958, 699, 959, 554, 578, 960, 961, 962, 573, 963, 964, 818, 817, 816, 324, 314, 322, 337, 338, 332, 339, 340, 341, 342, 343, 329, 323, 330, 331, 318, 319, 333, 334, 335, 326, 325, 336, 327, 328, 321, 320, 317, 316, 315, 966, 967, 968, 700, 555, 579, 969, 820, 819, 461, 459, 470, 478, 479, 472, 480, 474, 465, 483, 475, 471, 481, 482, 473, 476, 467, 477, 464, 463, 462, 458, 460, 484, 469, 468, 466, 970, 971, 701, 972, 973, 974, 702, 703, 580, 975, 596, 597, 821, 447, 442, 435, 444, 453, 431, 432, 456, 446, 448, 449, 451, 440, 443, 454, 455, 441, 445, 450, 452, 437, 436, 457, 439, 438, 433, 434, 976, 600, 977, 978, 598, 979, 704, 705, 599, 822, 176, 167, 165, 177, 175, 178, 169, 172, 173, 174, 168, 171, 170, 166, 980, 981, 982, 983, 706, 556, 581, 984, 601, 602, 823, 274, 269, 263, 272, 283, 265, 264, 286, 270, 284, 285, 280, 281, 282, 278, 279, 275, 276, 273, 271, 277, 262, 287, 268, 267, 266, 261, 985, 986, 987, 707, 557, 582, 988, 603, 604, 605, 824, 103, 100, 104, 114, 94, 96, 106, 105, 117, 107, 101, 115, 116, 111, 112, 113, 109, 102, 110, 108, 118, 99, 98, 97, 95, 989, 990, 991, 992, 708, 542, 558, 583, 993, 606, 607, 608, 609, 610, 828, 827, 826, 825, 298, 293, 302, 308, 291, 295, 305, 296, 306, 303, 307, 309, 310, 311, 299, 294, 292, 312, 304, 297, 301, 300, 290, 994, 995, 996, 997, 709, 543, 559, 584, 998, 611, 612, 613, 614, 615, 616, 617, 618, 619, 832, 831, 830, 829, 241, 236, 245, 251, 234, 238, 248, 239, 249, 246, 250, 252, 253, 254, 242, 237, 235, 255, 247, 240, 244, 243, 233, 999, 622, 1000, 1001, 620, 1002, 710, 711, 621, 833, 164, 162, 159, 157, 156, 161, 163, 154, 158, 155, 151, 153, 152, 160, 1003, 1004, 1005, 1007, 1008, 1006, 560, 585, 1009, 623, 624, 625, 834, 146, 121, 131, 143, 144, 120, 134, 140, 136, 135, 130, 122, 142, 138, 139, 126, 127, 133, 132, 137, 123, 141, 145, 129, 128, 124, 125, 1018, 1019, 1020, 1022, 1023, 1021, 561, 586, 1024, 626, 627, 628, 839, 838, 837, 836, 835, 367, 354, 365, 374, 353, 352, 369, 370, 377, 372, 363, 355, 366, 371, 375, 376, 359, 360, 368, 373, 356, 378, 364, 362, 361, 357, 358, 4, 629, 630, 631, 632, 633, 634, 635, 636, 637, 1025, 638, 639, 149, 148, 147, 150, 562, 201, 563, 17, 1034, 712, 1038, 713, 1039, 1035, 1036, 1037, 1040, 1041, 80, 88, 87, 77, 86, 78, 83, 82, 81, 79, 85, 84, 1042, 714, 564, 18, 841, 840, 231, 720 }
  uselistorder label %dec_label_pc_1000ba98, { 1, 0 }
}

define i32 @function_1000bac0() local_unnamed_addr {
dec_label_pc_1000bac0:
  %v0_1000bad8 = load i32, i32* @r3, align 4
  ret i32 %v0_1000bad8

; uselistorder directives
  uselistorder i32* @r3, { 11, 13, 185, 186, 187, 14, 22, 188, 109, 0, 110, 32, 195, 21, 19, 3, 25, 189, 191, 31, 192, 193, 194, 176, 30, 177, 9, 18, 179, 181, 180, 190, 33, 159, 34, 35, 111, 26, 16, 112, 113, 114, 115, 116, 117, 118, 119, 120, 15, 28, 4, 17, 121, 1, 2, 5, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 77, 78, 79, 80, 81, 82, 74, 6, 75, 76, 90, 91, 29, 92, 93, 94, 20, 166, 167, 168, 10, 169, 170, 7, 83, 84, 85, 86, 87, 88, 89, 95, 12, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 171, 172, 8, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 173, 174, 175, 178, 182, 183, 184, 24, 23, 27 }
}

define i32 @function_1000badc() local_unnamed_addr {
entry:
  store i32 268483308, i32* @lr, align 4
  %v0_1000bae8 = call i32 @function_100000b8()
  ret i32 %v0_1000bae8

; uselistorder directives
  uselistorder i32 0, { 886, 227, 887, 41, 228, 162, 888, 229, 889, 890, 39, 40, 891, 892, 893, 0, 829, 830, 831, 85, 84, 832, 894, 895, 896, 42, 897, 898, 899, 900, 590, 230, 231, 428, 836, 837, 163, 838, 901, 18, 591, 592, 902, 903, 904, 905, 232, 593, 594, 595, 596, 597, 598, 599, 86, 607, 608, 906, 907, 233, 925, 926, 234, 931, 933, 156, 934, 235, 932, 1, 908, 909, 87, 910, 911, 236, 164, 237, 912, 913, 45, 46, 914, 915, 916, 238, 919, 920, 921, 43, 44, 922, 923, 924, 554, 555, 556, 557, 558, 88, 559, 560, 561, 226, 562, 89, 841, 843, 22, 844, 47, 845, 842, 839, 840, 2, 813, 809, 810, 811, 812, 157, 3, 848, 846, 847, 158, 849, 850, 814, 815, 816, 817, 818, 239, 819, 820, 851, 852, 240, 853, 165, 854, 863, 864, 90, 855, 856, 857, 858, 859, 860, 861, 862, 4, 5, 420, 429, 430, 431, 48, 49, 432, 6, 241, 833, 433, 434, 435, 436, 437, 438, 439, 440, 242, 441, 935, 936, 937, 938, 939, 940, 941, 942, 600, 601, 50, 602, 603, 604, 605, 606, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 442, 563, 752, 917, 918, 443, 533, 621, 653, 444, 927, 91, 928, 884, 879, 885, 880, 789, 929, 930, 445, 446, 622, 623, 624, 51, 92, 625, 626, 69, 627, 629, 628, 161, 564, 565, 7, 73, 23, 74, 24, 654, 75, 655, 25, 26, 656, 76, 27, 93, 243, 244, 19, 20, 630, 822, 823, 824, 825, 97, 95, 94, 826, 96, 99, 98, 427, 100, 631, 52, 632, 633, 634, 865, 101, 866, 867, 635, 636, 53, 102, 637, 8, 103, 681, 104, 657, 447, 448, 107, 449, 450, 451, 452, 453, 154, 454, 245, 455, 456, 459, 457, 106, 458, 246, 460, 461, 462, 463, 464, 108, 465, 466, 169, 467, 421, 77, 469, 470, 471, 472, 473, 474, 56, 57, 475, 476, 54, 55, 477, 478, 479, 480, 481, 482, 168, 166, 487, 488, 247, 489, 483, 484, 485, 486, 490, 21, 422, 423, 491, 492, 105, 493, 494, 495, 500, 501, 502, 503, 167, 504, 505, 109, 506, 507, 508, 509, 510, 511, 496, 110, 497, 498, 111, 499, 248, 468, 80, 534, 535, 28, 249, 78, 29, 30, 250, 79, 31, 536, 9, 173, 172, 537, 538, 539, 540, 541, 542, 171, 170, 543, 58, 59, 544, 545, 251, 112, 546, 547, 113, 548, 114, 549, 115, 550, 551, 658, 512, 513, 514, 515, 155, 516, 517, 252, 518, 519, 520, 521, 522, 174, 523, 524, 60, 61, 525, 526, 527, 62, 63, 528, 529, 530, 10, 531, 253, 254, 255, 532, 256, 16, 15, 14, 13, 552, 175, 553, 567, 117, 566, 116, 568, 569, 119, 570, 118, 571, 572, 121, 573, 120, 574, 575, 123, 576, 122, 577, 578, 125, 579, 124, 580, 581, 127, 582, 126, 583, 11, 257, 258, 17, 586, 584, 585, 159, 587, 588, 176, 259, 260, 261, 262, 263, 589, 32, 638, 649, 639, 12, 640, 641, 642, 643, 160, 644, 645, 646, 647, 648, 33, 128, 68, 67, 129, 650, 64, 266, 651, 264, 265, 177, 652, 82, 790, 791, 81, 792, 130, 793, 83, 794, 131, 659, 660, 267, 661, 662, 133, 132, 663, 268, 664, 665, 666, 667, 668, 669, 670, 134, 671, 672, 673, 178, 674, 675, 269, 676, 70, 71, 677, 135, 678, 679, 680, 270, 179, 180, 181, 182, 136, 682, 271, 683, 684, 685, 686, 272, 687, 688, 689, 184, 183, 690, 273, 691, 692, 693, 694, 695, 137, 696, 274, 697, 698, 699, 700, 701, 275, 702, 703, 704, 185, 186, 187, 188, 141, 140, 705, 706, 34, 139, 138, 707, 708, 709, 35, 710, 711, 712, 713, 142, 189, 714, 143, 715, 276, 716, 717, 718, 277, 719, 720, 721, 722, 278, 723, 724, 725, 190, 191, 192, 193, 194, 195, 196, 197, 726, 727, 144, 728, 729, 279, 730, 731, 732, 733, 734, 735, 280, 736, 737, 738, 206, 198, 199, 200, 201, 202, 203, 204, 205, 145, 739, 740, 281, 741, 742, 743, 744, 282, 747, 748, 65, 746, 745, 283, 749, 750, 751, 207, 208, 209, 210, 211, 212, 213, 146, 753, 754, 284, 755, 756, 757, 758, 285, 761, 762, 66, 760, 759, 286, 763, 764, 765, 214, 215, 216, 150, 149, 766, 767, 287, 36, 148, 147, 768, 769, 770, 288, 37, 771, 772, 773, 774, 151, 217, 775, 152, 776, 289, 777, 778, 779, 780, 781, 782, 783, 784, 785, 290, 786, 787, 788, 218, 219, 220, 221, 795, 153, 796, 291, 797, 798, 799, 800, 801, 802, 803, 804, 805, 292, 806, 807, 808, 222, 223, 224, 225, 821, 827, 828, 834, 835, 868, 72, 869, 870, 293, 871, 872, 873, 874, 875, 876, 877, 878, 881, 38, 882, 883, 943, 944, 945, 424, 425, 426, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965 }
  uselistorder i32* @lr, { 8, 746, 747, 748, 717, 749, 750, 751, 752, 753, 754, 755, 756, 714, 10, 757, 365, 366, 9, 718, 719, 367, 368, 369, 370, 371, 372, 766, 767, 771, 772, 773, 774, 775, 776, 777, 779, 768, 770, 758, 759, 760, 761, 762, 763, 764, 765, 720, 722, 721, 683, 684, 685, 686, 687, 688, 723, 724, 725, 726, 730, 727, 728, 729, 11, 12, 659, 660, 661, 623, 592, 13, 282, 14, 15, 624, 625, 16, 715, 17, 18, 19, 20, 21, 22, 23, 778, 24, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 769, 25, 26, 27, 28, 29, 30, 387, 712, 388, 731, 434, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 467, 435, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 137, 138, 139, 140, 141, 142, 143, 144, 113, 114, 115, 116, 117, 118, 156, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 436, 437, 438, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 0, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 329, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 4, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 5, 418, 419, 420, 421, 422, 423, 1, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 501, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 573, 566, 567, 568, 569, 570, 571, 572, 2, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 593, 594, 595, 596, 604, 597, 598, 599, 600, 601, 602, 603, 3, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 626, 628, 629, 630, 627, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 713, 716, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 6, 7 }
}

declare i32 @__asm_rlwinm(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwinm.(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwimi(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_mfcr() local_unnamed_addr

declare %0 @__asm_mtcrf(i32, i32) local_unnamed_addr

declare i32 @unknown_0(i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i16 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8 @__decompiler_undefined_function_2() local_unnamed_addr

declare i64 @__decompiler_undefined_function_3() local_unnamed_addr
