source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

%sockaddr = type { i32, [14 x i8] }
%_TYPEDEF_sigset_t = type { [1 x i32] }
%_TYPEDEF_fd_set = type { [1 x i32] }
%timeval = type { i32, i32 }
%dirent = type { i32, i32, i16, i8, [256 x i8] }
%__dirstream = type { i32 }

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_z = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_1bb24.2 = global i32 1
@global_var_1bbbc.3 = global i32* @global_var_1bb24.2
@global_var_1bbc4.4 = global i32 0
@global_var_1bb5c.5 = global i32 11
@global_var_1bbc8.6 = global i32 35648
@global_var_1bb68.7 = global i32 0
@global_var_1bbcc.8 = global i32 35648
@global_var_1bb74.9 = global i32 2
@global_var_1bbd0.10 = global i32 35648
@global_var_1bb80.11 = global i32 17
@global_var_1bbd4.12 = global i32 35648
@global_var_1bb8c.13 = global i32 0
@global_var_1bbd8.14 = global i32 35648
@global_var_1bb98.15 = global i32 0
@global_var_1bbdc.16 = global i32 35648
@global_var_1bba4.17 = global i32 0
@global_var_1bbe0.18 = global i32 35648
@global_var_1bbb0.19 = global i32 0
@global_var_1bbe4.20 = global i32 35648
@global_var_1bbe8.21 = global i32 35648
@global_var_1bbec.22 = global i32 35648
@global_var_1bbf0.23 = global i32 35648
@global_var_1bbf4.24 = global i32 35648
@global_var_1bbf8.25 = global i32 35648
@global_var_1bbfc.26 = global i32 35648
@global_var_1bc00.27 = global i32 35648
@global_var_1bc04.28 = global i32 35648
@global_var_1bc08.29 = global i32 35648
@global_var_1bc0c.30 = global i32 35648
@global_var_1bc14.32 = global i32 35648
@global_var_1bc18.33 = global i32 35648
@global_var_1bc1c.34 = global i32 35648
@global_var_1bc20.35 = global i32 35648
@global_var_1bc24.36 = global i32 35648
@global_var_1bc28.37 = global i32 35648
@global_var_1bc2c.38 = global i32 35648
@global_var_1bc30.39 = global i32 35648
@global_var_1bc34.40 = global i32 35648
@global_var_1bc38.41 = global i32 35648
@global_var_1bc3c.42 = global i32 35648
@global_var_1bc40.43 = global i32 35648
@global_var_1bc44.44 = global i32 35648
@global_var_1bc48.45 = global i32 35648
@global_var_1bc4c.46 = global i32 35648
@global_var_1bc50.47 = global i32 35648
@global_var_1bc54.48 = global i32 35648
@global_var_1bc58.49 = global i32 35648
@global_var_1bc5c.50 = global i32 35648
@global_var_1bc60.51 = global i32 35648
@global_var_1bc68.53 = global i32 35648
@global_var_1bc6c.54 = global i32 35648
@global_var_1bc70.55 = global i32 35648
@global_var_1bc74.56 = global i32 35648
@global_var_1bc78.57 = global i32 35648
@global_var_1bc7c.58 = global i32 35648
@global_var_1bc80.59 = global i32 35648
@global_var_1bc84.60 = global i32 35648
@global_var_1bc88.61 = global i32 35648
@global_var_1bc8c.62 = global i32 35648
@global_var_1bb1c.66 = global i32 0
@global_var_1bc98.67 = global i32* @global_var_1bb1c.66
@global_var_1bcb4.73 = global i32 0
@global_var_eddc.79 = constant i32 -382906384
@global_var_1bcd0.84 = global i32 0
@global_var_9010.85 = constant i32 -352321546
@global_var_8d88.86 = constant i32 -493894144
@global_var_b1c8.92 = constant i32 -382906384
@global_var_b68c.94 = constant i32 -382906384
@global_var_96d4.96 = constant i32 -382906384
@global_var_d6a8.98 = constant i32 -382906384
@global_var_cf34.100 = constant i32 -382906384
@global_var_c6b8.102 = constant i32 -382906384
@global_var_aaac.105 = constant i32 -382906384
@global_var_a330.107 = constant i32 -382906384
@global_var_1bd28.110 = global i32 0
@global_var_1387c.122 = constant i32 47
@global_var_1bd30.124 = global i32 0
@global_var_1bcd4.126 = global i32 0
@global_var_8500.129 = global i32 35956
@global_var_ec9c.131 = constant i32 -382910448
@global_var_1bca8.133 = global i32 78500
@global_var_13880.135 = constant [15 x i8] c"209.141.53.227\00"
@global_var_1bd38.138 = local_unnamed_addr global i32 0
@global_var_1bd37.139 = local_unnamed_addr global i32 0
@global_var_1bd36.140 = local_unnamed_addr global i32 0
@global_var_1bcd8.142 = global i32 0
@global_var_1bd35.148 = local_unnamed_addr global i32 0
@global_var_13890.152 = constant i32 10
@global_var_1bca0.154 = global i32 -1
@global_var_1bca4.156 = global i32 -1
@global_var_8d7c.159 = constant i32 -493894144
@global_var_132a4.160 = constant i32 -382910224
@global_var_13894.162 = constant i32 16777216
@global_var_1bce0.164 = global i32 0
@global_var_1bcec.166 = global i32 0
@global_var_1bce4.168 = global i32 0
@global_var_1bce8.170 = global i32 0
@global_var_1bd24.184 = global i32 0
@global_var_1bcf0.186 = global i32 0
@global_var_1bd1c.188 = global i32 0
@global_var_1bd4c.193 = global i32 0
@global_var_1bd44.197 = global i32 0
@global_var_1bd48.199 = global i32 0
@global_var_1bcf4.201 = global i32 0
@global_var_1bcf7.202 = local_unnamed_addr global i32 0
@global_var_1bcf6.203 = local_unnamed_addr global i32 0
@global_var_1bd08.205 = global i32 0
@global_var_1bcf9.207 = local_unnamed_addr global i32 0
@global_var_1bcfc.208 = local_unnamed_addr global i32 0
@global_var_1bcfd.209 = local_unnamed_addr global i32 0
@global_var_1bd09.210 = local_unnamed_addr global i32 0
@global_var_1bd0b.211 = local_unnamed_addr global i32 0
@global_var_1bcf8.212 = local_unnamed_addr global i32 0
@global_var_1bd0a.213 = local_unnamed_addr global i32 0
@global_var_1bd17.215 = local_unnamed_addr global i32 0
@global_var_1393c.217 = constant [6 x i8] c"3!1' \00"
@global_var_13944.219 = constant [5 x i8] c"eeee\00"
@global_var_1bd16.220 = local_unnamed_addr global i32 0
@global_var_1394c.222 = constant [6 x i8] c"efg`a\00"
@global_var_13954.224 = constant [7 x i8] c"efg`ab\00"
@global_var_138d0.226 = constant i32 0
@global_var_1389c.228 = constant [5 x i8] c"!'1&\00"
@global_var_138a4.230 = constant [8 x i8] c"0125!8 \00"
@global_var_138ac.232 = constant i32 943467547
@global_var_138b8.234 = constant i32 322070023
@global_var_138c4.236 = constant [7 x i8] c"5: '8%\00"
@global_var_138cc.238 = constant [5 x i8] c"&;; \00"
@global_var_138d4.240 = constant [6 x i8] c"\22=.,\22\00"
@global_var_138dc.242 = constant [6 x i8] c".8,,z\00"
@global_var_138e4.244 = constant [9 x i8] c"<!: acam\00"
@global_var_138f0.246 = constant [5 x i8] c"5:?;\00"
@global_var_138f8.248 = constant [4 x i8] c"a!$\00"
@global_var_138fc.250 = constant [7 x i8] c",7gaee\00"
@global_var_13904.252 = constant [8 x i8] c"'!$$;& \00"
@global_var_1390c.254 = constant [7 x i8] c"93gadd\00"
@global_var_13914.256 = constant [7 x i8] c"91&8=:\00"
@global_var_1391c.258 = constant [6 x i8] c"509=:\00"
@global_var_13924.260 = constant [7 x i8] c"x65fg`\00"
@global_var_1392c.262 = constant [8 x i8] c"5%!5&=;\00"
@global_var_13934.264 = constant [4 x i8] c"6=:\00"
@global_var_1bd00.265 = local_unnamed_addr global i32 0
@global_var_1bd04.267 = local_unnamed_addr global i32 0
@global_var_1bcfe.268 = local_unnamed_addr global i32 0
@global_var_1bcff.269 = local_unnamed_addr global i32 0
@global_var_1bd0c.271 = local_unnamed_addr global i32 0
@global_var_1bd18.272 = local_unnamed_addr global i32 0
@global_var_1bd19.273 = local_unnamed_addr global i32 0
@global_var_13938.283 = constant [3 x i8] c"\0D\0A\00"
@global_var_13964.285 = constant i32 2096127
@global_var_1395b.287 = constant i32 2095871
@global_var_1bd54.290 = global i32 0
@global_var_1bcac.293 = global i32 -555811921
@global_var_13968.298 = constant [3 x i8] c"Qm\00"
@global_var_1bd5c.299 = local_unnamed_addr global i32 0
@global_var_1bd60.300 = local_unnamed_addr global i32 0
@global_var_1bd61.301 = local_unnamed_addr global i32 0
@global_var_1396c.303 = constant i32 59987
@global_var_1bd64.304 = local_unnamed_addr global i32 0
@global_var_1bd68.305 = local_unnamed_addr global i32 0
@global_var_1bd69.306 = local_unnamed_addr global i32 0
@global_var_13ad4.308 = constant i32 808465680
@global_var_1bd70.309 = local_unnamed_addr global i32 0
@global_var_1bd6c.310 = local_unnamed_addr global i32 0
@global_var_1bd71.311 = local_unnamed_addr global i32 0
@global_var_13970.313 = constant [7 x i8] c"'<188T\00"
@global_var_1bd74.314 = local_unnamed_addr global i32 0
@global_var_1bd78.315 = local_unnamed_addr global i32 0
@global_var_1bd79.316 = local_unnamed_addr global i32 0
@global_var_13978.318 = constant [8 x i8] c"1:5681T\00"
@global_var_1bd7c.319 = local_unnamed_addr global i32 0
@global_var_1bd80.320 = local_unnamed_addr global i32 0
@global_var_1bd81.321 = local_unnamed_addr global i32 0
@global_var_13980.323 = constant [8 x i8] c"'-' 19T\00"
@global_var_1bd84.324 = local_unnamed_addr global i32 0
@global_var_1bd88.325 = local_unnamed_addr global i32 0
@global_var_1bd89.326 = local_unnamed_addr global i32 0
@global_var_13988.328 = constant [4 x i8] c"'<T\00"
@global_var_1bd90.329 = local_unnamed_addr global i32 0
@global_var_1bd8c.330 = local_unnamed_addr global i32 0
@global_var_1bd91.331 = local_unnamed_addr global i32 0
@global_var_1398c.333 = constant i32 977090171
@global_var_1bd98.334 = local_unnamed_addr global i32 0
@global_var_1bd94.335 = local_unnamed_addr global i32 0
@global_var_1bd99.336 = local_unnamed_addr global i32 0
@global_var_139a0.338 = constant i32 470227742
@global_var_1bda0.339 = local_unnamed_addr global i32 0
@global_var_1bd9c.340 = local_unnamed_addr global i32 0
@global_var_1bda1.341 = local_unnamed_addr global i32 0
@global_var_139bc.343 = constant [10 x i8] c":7;&&17 T\00"
@global_var_1bda8.344 = local_unnamed_addr global i32 0
@global_var_1bda4.345 = local_unnamed_addr global i32 0
@global_var_1bda9.346 = local_unnamed_addr global i32 0
@global_var_139c8.348 = constant [17 x i8] c"{6=:{6!'-6;,t$'T\00"
@global_var_1bdac.349 = local_unnamed_addr global i32 0
@global_var_1bdb0.350 = local_unnamed_addr global i32 0
@global_var_1bdb1.351 = local_unnamed_addr global i32 0
@global_var_139dc.353 = constant [23 x i8] c"{6=:{6!'-6;,t?=88tymtT\00"
@global_var_1bdb8.354 = local_unnamed_addr global i32 0
@global_var_1bdb4.355 = local_unnamed_addr global i32 0
@global_var_1bdb9.356 = local_unnamed_addr global i32 0
@global_var_139f4.358 = constant [8 x i8] c"{$&;7{T\00"
@global_var_1bdbc.359 = local_unnamed_addr global i32 0
@global_var_1bdc0.360 = local_unnamed_addr global i32 0
@global_var_1bdc1.361 = local_unnamed_addr global i32 0
@global_var_139fc.363 = constant [6 x i8] c"{1,1T\00"
@global_var_1bdc8.364 = local_unnamed_addr global i32 0
@global_var_1bdc4.365 = local_unnamed_addr global i32 0
@global_var_1bdc9.366 = local_unnamed_addr global i32 0
@global_var_13a04.368 = constant [5 x i8] c"{20T\00"
@global_var_1bdd0.369 = local_unnamed_addr global i32 0
@global_var_1bdcc.370 = local_unnamed_addr global i32 0
@global_var_1bdd1.371 = local_unnamed_addr global i32 0
@global_var_13a0c.373 = constant [7 x i8] c"{95$'T\00"
@global_var_1bdd4.374 = local_unnamed_addr global i32 0
@global_var_1bdd8.375 = local_unnamed_addr global i32 0
@global_var_1bdd9.376 = local_unnamed_addr global i32 0
@global_var_13a14.378 = constant [15 x i8] c"{$&;7{:1 { 7$T\00"
@global_var_1bddc.379 = local_unnamed_addr global i32 0
@global_var_1bde0.380 = local_unnamed_addr global i32 0
@global_var_1bde1.381 = local_unnamed_addr global i32 0
@global_var_13a24.383 = constant [9 x i8] c"{' 5 !'T\00"
@global_var_1be3c.384 = local_unnamed_addr global i32 0
@global_var_1be40.385 = local_unnamed_addr global i32 0
@global_var_1be41.386 = local_unnamed_addr global i32 0
@global_var_13a30.388 = constant [8 x i8] c"z5:=91T\00"
@global_var_1be44.389 = local_unnamed_addr global i32 0
@global_var_1be48.390 = local_unnamed_addr global i32 0
@global_var_13a38.392 = constant [17 x i8] c"{$&;7{:1 {&;! 1T\00"
@global_var_1bde4.393 = local_unnamed_addr global i32 0
@global_var_1bde8.394 = local_unnamed_addr global i32 0
@global_var_1bde9.395 = local_unnamed_addr global i32 0
@global_var_13a4c.397 = constant [9 x i8] c"5''#;&0T\00"
@global_var_1bdec.398 = local_unnamed_addr global i32 0
@global_var_1bdf0.399 = local_unnamed_addr global i32 0
@global_var_1bdf1.400 = local_unnamed_addr global i32 0
@global_var_13af4.402 = constant i32 557516544
@global_var_1bdf8.403 = local_unnamed_addr global i32 0
@global_var_1bdf4.404 = local_unnamed_addr global i32 0
@global_var_1bdf9.405 = local_unnamed_addr global i32 0
@global_var_13a58.407 = constant [18 x i8] c"{1 7{&1';8\22z7;:2T\00"
@global_var_1be00.408 = local_unnamed_addr global i32 0
@global_var_1bdfc.409 = local_unnamed_addr global i32 0
@global_var_1be01.410 = local_unnamed_addr global i32 0
@global_var_13a6c.412 = constant [13 x i8] c":591'1&\221&tT\00"
@global_var_1be08.413 = local_unnamed_addr global i32 0
@global_var_1be04.414 = local_unnamed_addr global i32 0
@global_var_1be09.415 = local_unnamed_addr global i32 0
@global_var_13a7c.417 = constant [15 x i8] c"{01\22{#5 7<0;3T\00"
@global_var_1be0c.418 = local_unnamed_addr global i32 0
@global_var_1be10.419 = local_unnamed_addr global i32 0
@global_var_1be11.420 = local_unnamed_addr global i32 0
@global_var_13a8c.422 = constant [20 x i8] c"{01\22{9='7{#5 7<0;3T\00"
@global_var_1be18.423 = local_unnamed_addr global i32 0
@global_var_1be14.424 = local_unnamed_addr global i32 0
@global_var_1be19.425 = local_unnamed_addr global i32 0
@global_var_13aa0.427 = constant [9 x i8] c"$662*7!E\00"
@global_var_1be1c.428 = local_unnamed_addr global i32 0
@global_var_1be20.429 = local_unnamed_addr global i32 0
@global_var_1be21.430 = local_unnamed_addr global i32 0
@global_var_13aac.432 = constant [6 x i8] c";3=:T\00"
@global_var_1be28.433 = local_unnamed_addr global i32 0
@global_var_1be24.434 = local_unnamed_addr global i32 0
@global_var_1be29.435 = local_unnamed_addr global i32 0
@global_var_13ab4.437 = constant [7 x i8] c"1: 1&T\00"
@global_var_1be2c.438 = local_unnamed_addr global i32 0
@global_var_1be30.439 = local_unnamed_addr global i32 0
@global_var_1be31.440 = local_unnamed_addr global i32 0
@global_var_13abc.442 = constant [24 x i8] c"e365`70;9ag:<$ef1=d?2>T\00"
@global_var_1be39.443 = local_unnamed_addr global i32 0
@global_var_1be34.444 = local_unnamed_addr global i32 0
@global_var_1be38.445 = local_unnamed_addr global i32 0
@global_var_1bb14.447 = global i32 0
@global_var_1bb10.448 = global i32 -1
@global_var_1bcb0.64 = external global i8*
@global_var_1bccc.82 = external global i8*
@global_var_1bccd.90 = global i8 0
@global_var_1bd2c.128 = external global i8*
@global_var_1bd34.137 = global %sockaddr* null
@global_var_ec84.144 = constant void (i32)* inttoptr (i32 -442556408 to void (i32)*)
@global_var_1bcdc.158 = external global i8*
@global_var_1bd20.190 = external global i8*
@global_var_1bd21.191 = local_unnamed_addr global i8 0
@global_var_1bd14.206 = local_unnamed_addr global i8 0
@global_var_1bd15.214 = local_unnamed_addr global i8 0

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_8b28() local_unnamed_addr {
entry:
  %v3_8b2c = load i32, i32* @r4, align 4
  %v0_8b34 = call i32 @function_8e2c()
  store i32 %v0_8b34, i32* @r0, align 4
  %v1_8b38 = call i32 @function_1382c(i32 %v0_8b34)
  call void @__pseudo_branch(i32 %v3_8b2c)
  ret i32 %v1_8b38
}

define i32 @function_8b40(i32 %arg1) local_unnamed_addr {
entry:
  %v3_8b4c = load i32, i32* @global_var_1bbc4.4, align 4
  call void @__pseudo_branch(i32 %v3_8b4c)
  %v0_8b50 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_8b50, label %bb, label %bb1

bb:                                               ; preds = %entry
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  %v5_8b50 = load i32, i32* @r0, align 4
  ret i32 %v5_8b50

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i8* @_strcpy(i8* %dest, i8* %src) local_unnamed_addr {
entry:
  %v8_8b5c = call i8* @strcpy(i8* %dest, i8* %src)
  ret i8* %v8_8b5c
}

define i32 @_ioctl(i32 %fd, i32 %request, ...) local_unnamed_addr {
entry:
  %v6_8b68 = call i32 (i32, i32, ...) @ioctl(i32 %fd, i32 %request)
  ret i32 %v6_8b68
}

define i32 @_recv(i32 %fd, i32* %buf, i32 %n, i32 %flags) local_unnamed_addr {
entry:
  %v9_8b74 = call i32 @recv(i32 %fd, i32* %buf, i32 %n, i32 %flags)
  ret i32 %v9_8b74
}

define i32 @_connect(i32 %fd, %sockaddr* %addr, i32 %len) local_unnamed_addr {
entry:
  %v8_8b80 = call i32 @connect(i32 %fd, %sockaddr* %addr, i32 %len)
  ret i32 %v8_8b80
}

define i32 @_sigemptyset(%_TYPEDEF_sigset_t* %set) local_unnamed_addr {
entry:
  %v6_8b8c = call i32 @sigemptyset(%_TYPEDEF_sigset_t* %set)
  ret i32 %v6_8b8c
}

define i32* @_memmove(i32* %dest, i32* %src, i32 %n) local_unnamed_addr {
entry:
  %v9_8b98 = call i32* @memmove(i32* %dest, i32* %src, i32 %n)
  ret i32* %v9_8b98
}

define i32 @_getpid() local_unnamed_addr {
entry:
  %v4_8ba4 = call i32 @getpid()
  ret i32 %v4_8ba4
}

define i32 @_prctl(i32 %option, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %v9_8bb0 = call i32 @prctl(i32 %option, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5)
  ret i32 %v9_8bb0
}

define i32* @_memcpy(i32* %dest, i32* %src, i32 %n) local_unnamed_addr {
entry:
  %v9_8bbc = call i32* @memcpy(i32* %dest, i32* %src, i32 %n)
  ret i32* %v9_8bbc
}

define i32 @_readlink(i8* %path, i8* %buf, i32 %len) local_unnamed_addr {
entry:
  %v9_8bc8 = call i32 @readlink(i8* %path, i8* %buf, i32 %len)
  ret i32 %v9_8bc8
}

define i32* @_malloc(i32 %size) local_unnamed_addr {
entry:
  %v5_8bd4 = call i32* @malloc(i32 %size)
  ret i32* %v5_8bd4
}

define i32 @_sleep(i32 %seconds) local_unnamed_addr {
entry:
  %v5_8be0 = call i32 @sleep(i32 %seconds)
  ret i32 %v5_8be0
}

define i32 @_recvfrom(i32 %fd, i32* %buf, i32 %n, i32 %flags, %sockaddr* %addr, i32* %addr_len) local_unnamed_addr {
entry:
  %v10_8bec = call i32 @recvfrom(i32 %fd, i32* %buf, i32 %n, i32 %flags, %sockaddr* %addr, i32* %addr_len)
  ret i32 %v10_8bec
}

define i32 @_socket(i32 %domain, i32 %type, i32 %protocol) local_unnamed_addr {
entry:
  %v7_8bf8 = call i32 @socket(i32 %domain, i32 %type, i32 %protocol)
  ret i32 %v7_8bf8
}

define i32 @_select(i32 %nfds, %_TYPEDEF_fd_set* %readfds, %_TYPEDEF_fd_set* %writefds, %_TYPEDEF_fd_set* %exceptfds, %timeval* %timeout) local_unnamed_addr {
entry:
  %v12_8c04 = call i32 @select(i32 %nfds, %_TYPEDEF_fd_set* %readfds, %_TYPEDEF_fd_set* %writefds, %_TYPEDEF_fd_set* %exceptfds, %timeval* %timeout)
  ret i32 %v12_8c04
}

define %dirent* @_readdir(%__dirstream* %dirp) local_unnamed_addr {
entry:
  %v6_8c10 = call %dirent* @readdir(%__dirstream* %dirp)
  ret %dirent* %v6_8c10
}

define i32 @_sigaddset(%_TYPEDEF_sigset_t* %set, i32 %signo) local_unnamed_addr {
entry:
  %v7_8c1c = call i32 @sigaddset(%_TYPEDEF_sigset_t* %set, i32 %signo)
  ret i32 %v7_8c1c
}

define i32 @_send(i32 %fd, i32* %buf, i32 %n, i32 %flags) local_unnamed_addr {
entry:
  %v9_8c28 = call i32 @send(i32 %fd, i32* %buf, i32 %n, i32 %flags)
  ret i32 %v9_8c28
}

; Function Attrs: noreturn
define void @_abort() local_unnamed_addr #0 {
entry:
  call void @abort()
  unreachable
}

define i32* @_calloc(i32 %nmemb, i32 %size) local_unnamed_addr {
entry:
  %v6_8c40 = call i32* @calloc(i32 %nmemb, i32 %size)
  ret i32* %v6_8c40
}

define i32 @_write(i32 %fd, i32* %buf, i32 %n) local_unnamed_addr {
entry:
  %v8_8c4c = call i32 @write(i32 %fd, i32* %buf, i32 %n)
  ret i32 %v8_8c4c
}

define i32 @_kill(i32 %pid, i32 %sig) local_unnamed_addr {
entry:
  %v6_8c58 = call i32 @kill(i32 %pid, i32 %sig)
  ret i32 %v6_8c58
}

define i32 @_bind(i32 %fd, %sockaddr* %addr, i32 %len) local_unnamed_addr {
entry:
  %v8_8c64 = call i32 @bind(i32 %fd, %sockaddr* %addr, i32 %len)
  ret i32 %v8_8c64
}

define i32 @_inet_addr(i8* %cp) local_unnamed_addr {
entry:
  %v6_8c70 = call i32 @inet_addr(i8* %cp)
  ret i32 %v6_8c70
}

define i32 @_setsockopt(i32 %fd, i32 %level, i32 %optname, i32* %optval, i32 %optlen) local_unnamed_addr {
entry:
  %v10_8c7c = call i32 @setsockopt(i32 %fd, i32 %level, i32 %optname, i32* %optval, i32 %optlen)
  ret i32 %v10_8c7c
}

define void (i32)* @_signal(i32 %sig, void (i32)* %handler) local_unnamed_addr {
entry:
  %v7_8c88 = call void (i32)* @signal(i32 %sig, void (i32)* %handler)
  ret void (i32)* %v7_8c88
}

define i32 @_read(i32 %fd, i32* %buf, i32 %nbytes) local_unnamed_addr {
entry:
  %v8_8c94 = call i32 @read(i32 %fd, i32* %buf, i32 %nbytes)
  ret i32 %v8_8c94
}

define i32 @_unlink(i8* %name) local_unnamed_addr {
entry:
  %v6_8ca0 = call i32 @unlink(i8* %name)
  ret i32 %v6_8ca0
}

define i32 @_sendto(i32 %fd, i32* %buf, i32 %n, i32 %flags, %sockaddr* %addr, i32 %addr_len) local_unnamed_addr {
entry:
  %v11_8cac = call i32 @sendto(i32 %fd, i32* %buf, i32 %n, i32 %flags, %sockaddr* %addr, i32 %addr_len)
  ret i32 %v11_8cac
}

define i32* @_realloc(i32* %ptr, i32 %size) local_unnamed_addr {
entry:
  %v7_8cb8 = call i32* @realloc(i32* %ptr, i32 %size)
  ret i32* %v7_8cb8
}

define i32 @_listen(i32 %fd, i32 %n) local_unnamed_addr {
entry:
  %v6_8cc4 = call i32 @listen(i32 %fd, i32 %n)
  ret i32 %v6_8cc4
}

define i32 @_fork() local_unnamed_addr {
entry:
  %v4_8cd0 = call i32 @fork()
  ret i32 %v4_8cd0
}

define i32 @___uClibc_main(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %v4_8cdc = call i32 @__uClibc_main()
  ret i32 %v4_8cdc
}

define i32* @_memset(i32* %s, i32 %c, i32 %n) local_unnamed_addr {
entry:
  %v8_8ce8 = call i32* @memset(i32* %s, i32 %c, i32 %n)
  ret i32* %v8_8ce8
}

define i32 @_getppid() local_unnamed_addr {
entry:
  %v4_8cf4 = call i32 @getppid()
  ret i32 %v4_8cf4
}

define i32 @_time(i32* %timer) local_unnamed_addr {
entry:
  %v6_8d00 = call i32 @time(i32* %timer)
  ret i32 %v6_8d00
}

define %__dirstream* @_opendir(i8* %name) local_unnamed_addr {
entry:
  %v6_8d0c = call %__dirstream* @opendir(i8* %name)
  ret %__dirstream* %v6_8d0c
}

define i32 @_getsockopt(i32 %fd, i32 %level, i32 %optname, i32* %optval, i32* %optlen) local_unnamed_addr {
entry:
  %v9_8d18 = call i32 @getsockopt(i32 %fd, i32 %level, i32 %optname, i32* %optval, i32* %optlen)
  ret i32 %v9_8d18
}

define i32* @___errno_location() local_unnamed_addr {
entry:
  %v4_8d24 = call i32* @__errno_location()
  ret i32* %v4_8d24
}

; Function Attrs: noreturn
define void @_exit(i32 %status) local_unnamed_addr #0 {
entry:
  call void @exit(i32 %status)
  unreachable
}

define i32 @_atoi(i8* %nptr) local_unnamed_addr {
entry:
  %v6_8d3c = call i32 @atoi(i8* %nptr)
  ret i32 %v6_8d3c
}

define i32 @_open(i8* %file, i32 %oflag, ...) local_unnamed_addr {
entry:
  %v7_8d48 = call i32 (i8*, i32, ...) @open(i8* %file, i32 %oflag)
  ret i32 %v7_8d48
}

define i32 @_clock() local_unnamed_addr {
entry:
  %v4_8d54 = call i32 @clock()
  ret i32 %v4_8d54
}

define i32 @_setsid() local_unnamed_addr {
entry:
  %v4_8d60 = call i32 @setsid()
  ret i32 %v4_8d60
}

define i32 @_closedir(%__dirstream* %dirp) local_unnamed_addr {
entry:
  %v6_8d6c = call i32 @closedir(%__dirstream* %dirp)
  ret i32 %v6_8d6c
}

define i32 @_fcntl(i32 %fd, i32 %cmd, ...) local_unnamed_addr {
entry:
  %v6_8d78 = call i32 (i32, i32, ...) @fcntl(i32 %fd, i32 %cmd)
  ret i32 %v6_8d78
}

define i32 @_close(i32 %fd) local_unnamed_addr {
entry:
  %v5_8d84 = call i32 @close(i32 %fd)
  ret i32 %v5_8d84
}

define void @_free(i32* %ptr) local_unnamed_addr {
entry:
  call void @free(i32* %ptr)
  ret void
}

define i32 @_sigprocmask(i32 %how, %_TYPEDEF_sigset_t* %set, %_TYPEDEF_sigset_t* %oset) local_unnamed_addr {
entry:
  %v9_8d9c = call i32 @sigprocmask(i32 %how, %_TYPEDEF_sigset_t* %set, %_TYPEDEF_sigset_t* %oset)
  ret i32 %v9_8d9c
}

define i32 @_getsockname(i32 %fd, %sockaddr* %addr, i32* %len) local_unnamed_addr {
entry:
  %v9_8da8 = call i32 @getsockname(i32 %fd, %sockaddr* %addr, i32* %len)
  ret i32 %v9_8da8
}

define i32 @function_8dac() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_8dac = load i32, i32* @r4, align 4
  store i32 %v3_8dac, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i8** @global_var_1bcb0.64 to i32), i32* %r5.global-to-local, align 4
  %v2_8db4 = load i8, i8* bitcast (i8** @global_var_1bcb0.64 to i8*), align 4
  %v2_8db8 = icmp eq i8 %v2_8db4, 0
  br i1 %v2_8db8, label %bb7, label %bb

bb:                                               ; preds = %entry
  %v12_8dbc = load i32, i32* @r0, align 4
  ret i32 %v12_8dbc

bb7:                                              ; preds = %entry
  store i32 ptrtoint (i32** @global_var_1bc98.67 to i32), i32* %r4.global-to-local, align 4
  %v2_8dc4 = load i32, i32* bitcast (i32** @global_var_1bc98.67 to i32*), align 4
  store i32 %v2_8dc4, i32* %r2.global-to-local, align 4
  %v2_8dcc = icmp eq i32 %v2_8dc4, 0
  br i1 %v2_8dcc, label %bb8, label %dec_label_pc_8dd4.preheader

dec_label_pc_8dd4.preheader:                      ; preds = %bb7
  %v1_8dd49 = add i32 %v2_8dc4, 4
  store i32 %v1_8dd49, i32* bitcast (i32** @global_var_1bc98.67 to i32*), align 4
  call void @__pseudo_branch(i32 %v2_8dc4)
  %v2_8de411 = load i32, i32* bitcast (i32** @global_var_1bc98.67 to i32*), align 4
  store i32 %v2_8de411, i32* %r2.global-to-local, align 4
  %v2_8dec12 = icmp eq i32 %v2_8de411, 0
  br i1 %v2_8dec12, label %.loopexit, label %dec_label_pc_8dd4.dec_label_pc_8dd4_crit_edge

dec_label_pc_8dd4.dec_label_pc_8dd4_crit_edge:    ; preds = %dec_label_pc_8dd4.preheader, %dec_label_pc_8dd4.dec_label_pc_8dd4_crit_edge
  %v2_8de413 = phi i32 [ %v2_8de4, %dec_label_pc_8dd4.dec_label_pc_8dd4_crit_edge ], [ %v2_8de411, %dec_label_pc_8dd4.preheader ]
  %v1_8dd8.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_8dd4 = add i32 %v2_8de413, 4
  %v2_8dd8 = inttoptr i32 %v1_8dd8.pre to i32*
  store i32 %v1_8dd4, i32* %v2_8dd8, align 4
  %v0_8de0 = load i32, i32* %r2.global-to-local, align 4
  call void @__pseudo_branch(i32 %v0_8de0)
  %v2_8de4 = load i32, i32* bitcast (i32** @global_var_1bc98.67 to i32*), align 4
  store i32 %v2_8de4, i32* %r2.global-to-local, align 4
  %v2_8dec = icmp eq i32 %v2_8de4, 0
  br i1 %v2_8dec, label %.loopexit, label %dec_label_pc_8dd4.dec_label_pc_8dd4_crit_edge

.loopexit:                                        ; preds = %dec_label_pc_8dd4.dec_label_pc_8dd4_crit_edge, %dec_label_pc_8dd4.preheader
  %v2_8e0c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %bb8

bb8:                                              ; preds = %.loopexit, %bb7
  %v2_8e0c = phi i32 [ %v2_8e0c.pre, %.loopexit ], [ ptrtoint (i8** @global_var_1bcb0.64 to i32), %bb7 ]
  %v3_8e0c = inttoptr i32 %v2_8e0c to i8*
  store i8 1, i8* %v3_8e0c, align 1
  %v2_8e10 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8e10, i32* %r4.global-to-local, align 4
  %v11_8e10 = load i32, i32* @r0, align 4
  ret i32 %v11_8e10

; uselistorder directives
  uselistorder i32 %v2_8de4, { 1, 2, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32* bitcast (i32** @global_var_1bc98.67 to i32*), { 2, 0, 1, 3 }
  uselistorder i32** @global_var_1bc98.67, { 1, 0 }
  uselistorder i8** @global_var_1bcb0.64, { 1, 0 }
  uselistorder label %dec_label_pc_8dd4.dec_label_pc_8dd4_crit_edge, { 1, 0 }
}

define i32 @function_8e20(i32 %arg1) local_unnamed_addr {
dec_label_pc_8e20:
  %v0_8e20 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_8e20, label %bb, label %bb2

bb:                                               ; preds = %dec_label_pc_8e20
  br label %bb2

bb2:                                              ; preds = %dec_label_pc_8e20, %bb
  %v5_8e28 = load i32, i32* @r0, align 4
  ret i32 %v5_8e28

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @function_8e2c() local_unnamed_addr {
.thread:
  %v2_8e4c = load i32, i32* inttoptr (i32 113440 to i32*), align 32
  %v2_8e50 = icmp eq i32 %v2_8e4c, 0
  br i1 %v2_8e50, label %bb, label %bb2

bb:                                               ; preds = %.thread
  ret i32 113440

bb2:                                              ; preds = %.thread
  ret i32 113440

; uselistorder directives
  uselistorder i32 113440, { 1, 0, 2 }
}

define i32 @function_8e84() local_unnamed_addr {
dec_label_pc_8e84:
  %v5_8e88 = load i32, i32* @r0, align 4
  ret i32 %v5_8e88
}

; Function Attrs: noreturn
define i32 @__start(i32 %arg1, i32 %arg2) local_unnamed_addr #0 {
entry:
  %stack_var_4 = alloca i32, align 4
  %v4_8e94 = ptrtoint i32* %stack_var_4 to i32
  %v7_8eb4 = call i32 @___uClibc_main(i32 ptrtoint (i32* @global_var_eddc.79 to i32), i32 %arg2, i32 %v4_8e94, i32 35624, i32 79976, i32 %arg1, i32 %v4_8e94)
  call void @abort()
  unreachable
}

define i32 @function_8ec8(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8ec8:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v1_8ec8 = urem i32 %arg1, 256
  %v2_8ecc = icmp eq i32 %v1_8ec8, 0
  %v1_8ed4 = urem i32 %arg3, 256
  br i1 %v2_8ecc, label %dec_label_pc_8f18, label %dec_label_pc_8ee0

dec_label_pc_8ee0:                                ; preds = %dec_label_pc_8ec8
  %v0_8ee0 = load i32, i32* %r1.global-to-local, align 4
  %v1_8ee0 = add i32 %v0_8ee0, 4
  %v2_8ee0 = inttoptr i32 %v1_8ee0 to i8*
  %v3_8ee0 = load i8, i8* %v2_8ee0, align 1
  %v4_8ee0 = zext i8 %v3_8ee0 to i32
  %v9_8ee4 = icmp eq i32 %v4_8ee0, %v1_8ed4
  br i1 %v9_8ee4, label %dec_label_pc_8f20, label %dec_label_pc_8f08.preheader

dec_label_pc_8f08.preheader:                      ; preds = %dec_label_pc_8ee0
  br label %dec_label_pc_8f08

dec_label_pc_8ef8:                                ; preds = %dec_label_pc_8f08
  %v1_8ef8 = add i32 %v0_8f00.in, 12
  %v2_8ef8 = inttoptr i32 %v1_8ef8 to i8*
  %v3_8ef8 = load i8, i8* %v2_8ef8, align 1
  %v4_8ef8 = zext i8 %v3_8ef8 to i32
  %v9_8efc = icmp eq i32 %v4_8ef8, %v1_8ed4
  br i1 %v9_8efc, label %dec_label_pc_8f20, label %dec_label_pc_8f08

dec_label_pc_8f08:                                ; preds = %dec_label_pc_8f08.preheader, %dec_label_pc_8ef8
  %v0_8f00.in = phi i32 [ %v0_8ee0, %dec_label_pc_8f08.preheader ], [ %v0_8f00, %dec_label_pc_8ef8 ]
  %v0_8f08 = phi i32 [ 0, %dec_label_pc_8f08.preheader ], [ %v1_8f08, %dec_label_pc_8ef8 ]
  %v0_8f00 = add i32 %v0_8f00.in, 8
  %v1_8f08 = add i32 %v0_8f08, 1
  %v9_8f0c = icmp eq i32 %v1_8f08, %v1_8ec8
  store i32 %v0_8f00, i32* %r1.global-to-local, align 4
  br i1 %v9_8f0c, label %dec_label_pc_8f18, label %dec_label_pc_8ef8

dec_label_pc_8f18:                                ; preds = %dec_label_pc_8f08, %dec_label_pc_8ec8
  ret i32 %arg4

dec_label_pc_8f20:                                ; preds = %dec_label_pc_8ef8, %dec_label_pc_8ee0
  %v0_8f20 = phi i32 [ %v0_8ee0, %dec_label_pc_8ee0 ], [ %v0_8f00, %dec_label_pc_8ef8 ]
  %v1_8f20 = inttoptr i32 %v0_8f20 to i32*
  %v2_8f20 = load i32, i32* %v1_8f20, align 4
  ret i32 %v2_8f20

; uselistorder directives
  uselistorder i32 %v1_8f08, { 1, 0 }
  uselistorder i32 %v0_8f00, { 1, 0, 2 }
  uselistorder i32 %v0_8f00.in, { 1, 0 }
  uselistorder i32 %v0_8ee0, { 1, 0, 2 }
  uselistorder i32 %v1_8ed4, { 1, 0 }
  uselistorder i32 %v1_8ec8, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8f08, { 1, 0 }
}

define i32 @function_8f2c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_8f2c:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_8f2c = load i32, i32* @r4, align 4
  store i32 %v3_8f2c, i32* %stack_var_-32, align 4
  %v6_8f2c = load i32, i32* @r5, align 4
  %v9_8f2c = load i32, i32* @r6, align 4
  %v12_8f2c = load i32, i32* @r7, align 4
  %v18_8f2c = load i32, i32* @sb, align 4
  %v0_8f30 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_8f30, i32* @sb, align 4
  store i32 %arg1, i32* %r6.global-to-local, align 4
  %v1_8f38 = urem i32 %arg2, 256
  store i32 %v1_8f38, i32* %r7.global-to-local, align 4
  %v0_8f44 = call i32 @fork()
  %v2_8f48 = icmp eq i32 %v0_8f44, -1
  %. = zext i1 %v2_8f48 to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %tmp23 = icmp slt i32 %v0_8f44, 1
  br i1 %tmp23, label %bb24, label %.thread2

.thread2:                                         ; preds = %dec_label_pc_8f2c
  store i32 1, i32* %r5.global-to-local, align 4
  br label %bb25

bb24:                                             ; preds = %dec_label_pc_8f2c
  store i32 %., i32* %r5.global-to-local, align 4
  %v2_8f60 = icmp eq i1 %v2_8f48, false
  br i1 %v2_8f60, label %bb26, label %bb25

bb25:                                             ; preds = %.thread2, %bb24
  %v3_8f64 = load i32, i32* %stack_var_-32, align 4
  store i32 %v3_8f64, i32* %r4.global-to-local, align 4
  store i32 %v6_8f2c, i32* %r5.global-to-local, align 4
  store i32 %v9_8f2c, i32* %r6.global-to-local, align 4
  store i32 %v12_8f2c, i32* %r7.global-to-local, align 4
  store i32 %v18_8f2c, i32* @sb, align 4
  ret i32 %v0_8f44

bb26:                                             ; preds = %bb24
  %v0_8f68 = call i32 @fork()
  %v2_8f6c = icmp eq i32 %v0_8f68, -1
  store i32 %v0_8f68, i32* %r4.global-to-local, align 4
  br i1 %v2_8f6c, label %dec_label_pc_8f9c, label %dec_label_pc_8f78

dec_label_pc_8f78:                                ; preds = %bb26
  %v2_8f78 = icmp eq i32 %v0_8f68, 0
  br i1 %v2_8f78, label %dec_label_pc_8f80, label %dec_label_pc_8fa4

dec_label_pc_8f80:                                ; preds = %dec_label_pc_8f78
  %v0_8f80 = load i32, i32* %r6.global-to-local, align 4
  %v1_8f84 = call i32 @sleep(i32 %v0_8f80)
  %v0_8f88 = call i32 @getppid()
  %v2_8f90 = call i32 @kill(i32 %v0_8f88, i32 9)
  %v0_8f94 = load i32, i32* %r4.global-to-local, align 4
  call void @exit(i32 %v0_8f94)
  unreachable

dec_label_pc_8f9c:                                ; preds = %bb26
  %v0_8f9c = load i32, i32* %r5.global-to-local, align 4
  call void @exit(i32 %v0_8f9c)
  unreachable

dec_label_pc_8fa4:                                ; preds = %dec_label_pc_8f78
  store i32 ptrtoint (i8** @global_var_1bccc.82 to i32), i32* %r3.global-to-local, align 4
  %v2_8fa8 = load i8, i8* bitcast (i8** @global_var_1bccc.82 to i8*), align 4
  %v3_8fa8 = zext i8 %v2_8fa8 to i32
  %v2_8fac = icmp eq i8 %v2_8fa8, 0
  br i1 %v2_8fac, label %dec_label_pc_8ff0, label %dec_label_pc_8fb4

dec_label_pc_8fb4:                                ; preds = %dec_label_pc_8fa4
  store i32 ptrtoint (i32* @global_var_1bcd0.84 to i32), i32* %r3.global-to-local, align 4
  %v2_8fb8 = load i32, i32* @global_var_1bcd0.84, align 4
  %v1_8fbc = inttoptr i32 %v2_8fb8 to i32*
  %v2_8fbc = load i32, i32* %v1_8fbc, align 4
  %v1_8fc0 = add i32 %v2_8fbc, 4
  %v2_8fc0 = inttoptr i32 %v1_8fc0 to i8*
  %v3_8fc0 = load i8, i8* %v2_8fc0, align 1
  %v4_8fc0 = zext i8 %v3_8fc0 to i32
  store i32 %v4_8fc0, i32* %r3.global-to-local, align 4
  %v1_8fc4 = load i32, i32* %r7.global-to-local, align 4
  %v9_8fc4 = icmp eq i32 %v4_8fc0, %v1_8fc4
  br i1 %v9_8fc4, label %dec_label_pc_8ff8, label %dec_label_pc_8fe4.preheader

dec_label_pc_8fe4.preheader:                      ; preds = %dec_label_pc_8fb4
  %v1_8fc8 = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_8fe4

dec_label_pc_8fd4:                                ; preds = %dec_label_pc_8fe4
  %v4_8fd4 = mul i32 %v1_8fe4, 4
  %v5_8fd4 = add i32 %v4_8fd4, %v2_8fb8
  %v6_8fd4 = inttoptr i32 %v5_8fd4 to i32*
  %v7_8fd4 = load i32, i32* %v6_8fd4, align 4
  %v1_8fd8 = add i32 %v7_8fd4, 4
  %v2_8fd8 = inttoptr i32 %v1_8fd8 to i8*
  %v3_8fd8 = load i8, i8* %v2_8fd8, align 1
  %v4_8fd8 = zext i8 %v3_8fd8 to i32
  store i32 %v4_8fd8, i32* %r3.global-to-local, align 4
  %v9_8fdc = icmp eq i32 %v4_8fd8, %v1_8fc4
  br i1 %v9_8fdc, label %dec_label_pc_8ff8, label %dec_label_pc_8fe4

dec_label_pc_8fe4:                                ; preds = %dec_label_pc_8fe4.preheader, %dec_label_pc_8fd4
  %v0_8fe4 = phi i32 [ %v1_8fc8, %dec_label_pc_8fe4.preheader ], [ %v1_8fe4, %dec_label_pc_8fd4 ]
  %v1_8fe4 = add i32 %v0_8fe4, 1
  %v9_8fe8 = icmp eq i32 %v1_8fe4, %v3_8fa8
  br i1 %v9_8fe8, label %dec_label_pc_8ff0, label %dec_label_pc_8fd4

dec_label_pc_8ff0:                                ; preds = %dec_label_pc_8fe4, %dec_label_pc_8fa4, %dec_label_pc_8ff8
  call void @exit(i32 0)
  unreachable

dec_label_pc_8ff8:                                ; preds = %dec_label_pc_8fd4, %dec_label_pc_8fb4
  %v0_900c = phi i32 [ %v2_8fbc, %dec_label_pc_8fb4 ], [ %v7_8fd4, %dec_label_pc_8fd4 ]
  store i32 %arg6, i32* %r3.global-to-local, align 4
  %v1_900c = inttoptr i32 %v0_900c to i32*
  %v2_900c = load i32, i32* %v1_900c, align 4
  call void @__pseudo_branch(i32 %v2_900c)
  br label %dec_label_pc_8ff0

; uselistorder directives
  uselistorder i32 %v1_8fe4, { 2, 0, 1 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i1 %v2_8f48, { 1, 0 }
  uselistorder i32 %v0_8f44, { 1, 0, 2 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 2, 3, 0, 4, 1 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 0, 1 }
  uselistorder label %dec_label_pc_8ff0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8fe4, { 1, 0 }
  uselistorder label %bb25, { 1, 0 }
}

define i32 @function_901c(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_901c:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v9_901c = load i32, i32* @r6, align 4
  %v12_901c = load i32, i32* @r7, align 4
  %v18_901c = load i32, i32* @sb, align 4
  %v21_901c = load i32, i32* @sl, align 4
  %v27_901c = load i32, i32* @lr, align 4
  %v7_9020 = icmp eq i32 %arg2, 3
  store i1 %v7_9020, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* @r5, align 4
  %v0_902c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_902c, i32* @r4, align 4
  %tmp33 = icmp ult i32 %arg2, 4
  br i1 %tmp33, label %dec_label_pc_9040, label %dec_label_pc_9034

dec_label_pc_9034:                                ; preds = %dec_label_pc_901c
  %v7_9034 = icmp eq i32 %arg2, 4
  store i1 %v7_9034, i1* %cpsr_z.global-to-local, align 1
  %v1_9038 = inttoptr i32 %v0_902c to i32*
  %v2_9038 = load i32, i32* %v1_9038, align 4
  store i32 %v2_9038, i32* @sl, align 4
  br i1 %v7_9034, label %dec_label_pc_9040, label %dec_label_pc_9048

dec_label_pc_9040:                                ; preds = %dec_label_pc_9064, %.dec_label_pc_9040_crit_edge, %dec_label_pc_9034, %dec_label_pc_9058, %dec_label_pc_9048, %dec_label_pc_901c
  %v29_9044 = phi i32 [ %v29_9044.pre, %.dec_label_pc_9040_crit_edge ], [ %v0_902c, %dec_label_pc_9064 ], [ %v0_902c, %dec_label_pc_9034 ], [ %v0_902c, %dec_label_pc_9058 ], [ %v0_902c, %dec_label_pc_9048 ], [ %v0_902c, %dec_label_pc_901c ]
  store i32 %v9_901c, i32* @r6, align 4
  store i32 %v12_901c, i32* @r7, align 4
  store i32 %v18_901c, i32* @sb, align 4
  store i32 %v21_901c, i32* @sl, align 4
  ret i32 %v29_9044

dec_label_pc_9048:                                ; preds = %dec_label_pc_9034
  %v7_9048 = icmp eq i32 %arg2, 5
  store i1 %v7_9048, i1* %cpsr_z.global-to-local, align 1
  %v1_904c = add i32 %v0_902c, 4
  %v2_904c = inttoptr i32 %v1_904c to i8*
  %v3_904c = load i8, i8* %v2_904c, align 1
  %v4_904c = zext i8 %v3_904c to i32
  store i32 %v4_904c, i32* %r1.global-to-local, align 4
  br i1 %v7_9048, label %dec_label_pc_9040, label %dec_label_pc_9058

dec_label_pc_9058:                                ; preds = %dec_label_pc_9048
  %v1_9058 = add i32 %v0_902c, 5
  %v2_9058 = inttoptr i32 %v1_9058 to i8*
  %v3_9058 = load i8, i8* %v2_9058, align 1
  %v4_9058 = zext i8 %v3_9058 to i32
  store i32 %v4_9058, i32* @r7, align 4
  %v2_905c = icmp eq i8 %v3_9058, 0
  store i1 %v2_905c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_905c, label %dec_label_pc_9040, label %dec_label_pc_9064

dec_label_pc_9064:                                ; preds = %dec_label_pc_9058
  %v3_9064 = mul nuw nsw i32 %v4_9058, 4
  store i32 %v3_9064, i32* @sb, align 4
  %v1_9068 = add i32 %arg2, -6
  store i32 %v1_9068, i32* @r6, align 4
  %v2_906c = mul nuw nsw i32 %v4_9058, 5
  store i32 %v2_906c, i32* @r8, align 4
  %v3_9070 = icmp ult i32 %v1_9068, %v2_906c
  %v9_9070 = icmp eq i32 %v1_9068, %v2_906c
  store i1 %v9_9070, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_9070, label %dec_label_pc_9040, label %dec_label_pc_9078

dec_label_pc_9078:                                ; preds = %dec_label_pc_9064
  store i32 %v4_9058, i32* %r0.global-to-local, align 4
  store i32 24, i32* %r1.global-to-local, align 4
  %v2_9080 = call i32* @calloc(i32 %v4_9058, i32 24)
  %v4_9080 = ptrtoint i32* %v2_9080 to i32
  store i32 %v4_9080, i32* %r0.global-to-local, align 4
  %v0_9084 = load i32, i32* @r7, align 4
  %v2_9084 = icmp eq i32 %v0_9084, 0
  store i1 %v2_9084, i1* %cpsr_z.global-to-local, align 1
  %v0_908c = load i32, i32* @r4, align 4
  %v1_908c = add i32 %v0_908c, 6
  store i32 %v1_908c, i32* %fp.global-to-local, align 4
  %tmp27 = icmp slt i32 %v0_9084, 1
  br i1 %tmp27, label %dec_label_pc_90e4thread-pre-split, label %dec_label_pc_9094

dec_label_pc_9094:                                ; preds = %dec_label_pc_9078
  store i32 %v4_9080, i32* %r1.global-to-local, align 4
  %v1_9098 = load i32, i32* @r8, align 4
  %v2_9098 = add i32 %v1_9098, %v0_908c
  store i32 %v2_9098, i32* %ip.global-to-local, align 4
  store i32 %v0_908c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  store i32 2, i32* @r4, align 4
  br label %dec_label_pc_90a8

dec_label_pc_90a8:                                ; preds = %dec_label_pc_90a8.dec_label_pc_90a8_crit_edge, %dec_label_pc_9094
  %v2_90b8 = phi i32 [ %v1_90cc, %dec_label_pc_90a8.dec_label_pc_90a8_crit_edge ], [ %v4_9080, %dec_label_pc_9094 ]
  %v1_90b4 = phi i32 [ %v1_90b4.pre, %dec_label_pc_90a8.dec_label_pc_90a8_crit_edge ], [ %v2_9098, %dec_label_pc_9094 ]
  %v0_90b0 = phi i32 [ %v0_90a8.pre, %dec_label_pc_90a8.dec_label_pc_90a8_crit_edge ], [ %v0_908c, %dec_label_pc_9094 ]
  %v1_90a8 = add i32 %v0_90b0, 10
  %v2_90a8 = inttoptr i32 %v1_90a8 to i8*
  %v3_90a8 = load i8, i8* %v2_90a8, align 1
  %v1_90ac = add i32 %v0_90b0, 6
  %v2_90ac = inttoptr i32 %v1_90ac to i32*
  %v3_90ac = load i32, i32* %v2_90ac, align 4
  store i32 %v3_90ac, i32* %r2.global-to-local, align 4
  %v1_90b0 = add i32 %v0_90b0, 5
  store i32 %v1_90b0, i32* %r0.global-to-local, align 4
  %v9_90b4 = icmp eq i32 %v1_90b0, %v1_90b4
  store i1 %v9_90b4, i1* %cpsr_z.global-to-local, align 1
  %v3_90b8 = add i32 %v2_90b8, 20
  %v4_90b8 = inttoptr i32 %v3_90b8 to i8*
  store i8 %v3_90a8, i8* %v4_90b8, align 1
  %v0_90bc = load i32, i32* %r2.global-to-local, align 4
  %v1_90bc = load i32, i32* %r1.global-to-local, align 4
  %v2_90bc = add i32 %v1_90bc, 4
  %v3_90bc = inttoptr i32 %v2_90bc to i32*
  store i32 %v0_90bc, i32* %v3_90bc, align 4
  %v0_90c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_90c0 = load i32, i32* %r1.global-to-local, align 4
  %v2_90c0 = add i32 %v1_90c0, 16
  %v3_90c0 = inttoptr i32 %v2_90c0 to i32*
  store i32 %v0_90c0, i32* %v3_90c0, align 4
  %v0_90c4 = load i32, i32* @r4, align 4
  %v1_90c4 = trunc i32 %v0_90c4 to i8
  %v2_90c4 = load i32, i32* %r1.global-to-local, align 4
  %v3_90c4 = inttoptr i32 %v2_90c4 to i8*
  store i8 %v1_90c4, i8* %v3_90c4, align 1
  %v0_90c8 = load i32, i32* %lr.global-to-local, align 4
  %v1_90c8 = trunc i32 %v0_90c8 to i8
  %v2_90c8 = load i32, i32* %r1.global-to-local, align 4
  %v3_90c8 = add i32 %v2_90c8, 1
  %v4_90c8 = inttoptr i32 %v3_90c8 to i8*
  store i8 %v1_90c8, i8* %v4_90c8, align 1
  %v0_90cc = load i32, i32* %r1.global-to-local, align 4
  %v1_90cc = add i32 %v0_90cc, 24
  store i32 %v1_90cc, i32* %r1.global-to-local, align 4
  %v0_90d0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_90d0, label %dec_label_pc_90d4, label %dec_label_pc_90a8.dec_label_pc_90a8_crit_edge

dec_label_pc_90a8.dec_label_pc_90a8_crit_edge:    ; preds = %dec_label_pc_90a8
  %v0_90a8.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_90b4.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_90a8

dec_label_pc_90d4:                                ; preds = %dec_label_pc_90a8
  %v0_90d4 = load i32, i32* @sb, align 4
  %v1_90d4 = load i32, i32* @r7, align 4
  %v1_90d8 = load i32, i32* @r5, align 4
  %sum = add i32 %v1_90d4, %v0_90d4
  %v2_90d8 = sub i32 %v1_90d8, %sum
  %v0_90dc = load i32, i32* %r0.global-to-local, align 4
  %v1_90dc = add i32 %v0_90dc, 6
  store i32 %v1_90dc, i32* %fp.global-to-local, align 4
  %v1_90e0 = add i32 %v2_90d8, -6
  store i32 %v1_90e0, i32* @r6, align 4
  br label %dec_label_pc_90e4

dec_label_pc_90e4thread-pre-split:                ; preds = %dec_label_pc_9078
  %v0_90e4.pr = load i32, i32* @r6, align 4
  br label %dec_label_pc_90e4

dec_label_pc_90e4:                                ; preds = %dec_label_pc_90e4thread-pre-split, %dec_label_pc_90d4
  %v0_90f0 = phi i32 [ %v1_908c, %dec_label_pc_90e4thread-pre-split ], [ %v1_90dc, %dec_label_pc_90d4 ]
  %v1_90e8 = phi i32 [ %v0_90e4.pr, %dec_label_pc_90e4thread-pre-split ], [ %v1_90e0, %dec_label_pc_90d4 ]
  %v2_90e4 = icmp eq i32 %v1_90e8, 0
  store i1 %v2_90e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_90e4, label %dec_label_pc_921c, label %dec_label_pc_90f0

dec_label_pc_90f0:                                ; preds = %dec_label_pc_90e4
  %v1_90f0 = inttoptr i32 %v0_90f0 to i8*
  %v2_90f0 = load i8, i8* %v1_90f0, align 1
  %v3_90f0 = zext i8 %v2_90f0 to i32
  store i32 %v3_90f0, i32* @sb, align 4
  %v2_90f4 = icmp eq i8 %v2_90f0, 0
  store i1 %v2_90f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_90f4, label %dec_label_pc_91d4, label %dec_label_pc_9104

dec_label_pc_9104:                                ; preds = %dec_label_pc_90f0
  store i32 %v3_90f0, i32* %r0.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v2_910c = call i32* @calloc(i32 %v3_90f0, i32 8)
  %v4_910c = ptrtoint i32* %v2_910c to i32
  store i32 %v4_910c, i32* %r0.global-to-local, align 4
  %v0_9110 = load i32, i32* @sb, align 4
  %v2_9110 = icmp eq i32 %v0_9110, 0
  store i1 %v2_9110, i1* %cpsr_z.global-to-local, align 1
  %tmp28 = icmp slt i32 %v0_9110, 1
  br i1 %tmp28, label %dec_label_pc_91d4, label %dec_label_pc_9120

dec_label_pc_9120:                                ; preds = %dec_label_pc_9104
  %v0_9120 = load i32, i32* @r6, align 4
  %v1_9120 = add i32 %v0_9120, -1
  store i32 %v1_9120, i32* %r2.global-to-local, align 4
  %v7_9120 = icmp eq i32 %v0_9120, 1
  store i1 %v7_9120, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9120, label %dec_label_pc_921c, label %dec_label_pc_9128

dec_label_pc_9128:                                ; preds = %dec_label_pc_9120
  %v0_9128 = load i32, i32* %fp.global-to-local, align 4
  %v1_9128 = add i32 %v0_9128, 1
  %v2_9128 = inttoptr i32 %v1_9128 to i8*
  %v3_9128 = load i8, i8* %v2_9128, align 1
  %v1_912c = add i32 %v0_9120, -2
  store i32 %v1_912c, i32* %r2.global-to-local, align 4
  %v7_912c = icmp eq i32 %v1_9120, 1
  store i1 %v7_912c, i1* %cpsr_z.global-to-local, align 1
  %v3_9130 = add i32 %v4_910c, 4
  %v4_9130 = inttoptr i32 %v3_9130 to i8*
  store i8 %v3_9128, i8* %v4_9130, align 1
  %v0_9134 = load i32, i32* %fp.global-to-local, align 4
  %v1_9134 = add i32 %v0_9134, 1
  store i32 %v1_9134, i32* %r0.global-to-local, align 4
  %v0_9138 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9138, label %dec_label_pc_921c, label %dec_label_pc_913c

dec_label_pc_913c:                                ; preds = %dec_label_pc_9128
  %v1_913c = add i32 %v0_9134, 2
  %v2_913c = inttoptr i32 %v1_913c to i8*
  %v3_913c = load i8, i8* %v2_913c, align 1
  %v4_913c = zext i8 %v3_913c to i32
  store i32 %v4_913c, i32* @r4, align 4
  %v0_9140 = load i32, i32* %r2.global-to-local, align 4
  %v1_9140 = add i32 %v0_9140, -1
  store i32 %v1_9140, i32* @r8, align 4
  %v9_9144 = icmp eq i32 %v1_9140, %v4_913c
  store i1 %v9_9144, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_913c, i32* %r0.global-to-local, align 4
  %v5_914c = icmp slt i32 %v1_9140, %v4_913c
  br i1 %v5_914c, label %dec_label_pc_921c, label %dec_label_pc_9150

dec_label_pc_9150:                                ; preds = %dec_label_pc_913c
  store i32 %v4_910c, i32* @r5, align 4
  %v1_9158 = add i32 %v4_910c, 8
  %v1_915c = add i32 %v0_9134, 3
  store i32 %v1_915c, i32* @r6, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_91a0

dec_label_pc_916c:                                ; preds = %dec_label_pc_91a0
  %v0_916c = load i32, i32* @r8, align 4
  %v1_916c = load i32, i32* @r4, align 4
  %v2_916c = sub i32 %v0_916c, %v1_916c
  store i32 %v2_916c, i32* %r2.global-to-local, align 4
  %v9_916c = icmp eq i32 %v0_916c, %v1_916c
  store i1 %v9_916c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_916c, label %dec_label_pc_921c, label %dec_label_pc_9174

dec_label_pc_9174:                                ; preds = %dec_label_pc_916c
  %v1_9174 = load i32, i32* @r6, align 4
  %v2_9174 = add i32 %v1_9174, %v1_916c
  %v3_9174 = inttoptr i32 %v2_9174 to i8*
  %v4_9174 = load i8, i8* %v3_9174, align 1
  store i32 %v2_9174, i32* %r0.global-to-local, align 4
  %v1_917c = add i32 %v2_916c, -1
  store i32 %v1_917c, i32* %r2.global-to-local, align 4
  %v7_917c = icmp eq i32 %v2_916c, 1
  store i1 %v7_917c, i1* %cpsr_z.global-to-local, align 1
  %v3_9180 = add i32 %v2_9180, 4
  %v4_9180 = inttoptr i32 %v3_9180 to i8*
  store i8 %v4_9174, i8* %v4_9180, align 1
  %v0_9184 = load i32, i32* %r0.global-to-local, align 4
  %v0_9188 = load i32, i32* %r2.global-to-local, align 4
  %v1_9188 = add i32 %v0_9188, -1
  store i32 %v1_9188, i32* @r8, align 4
  %v1_918c = add i32 %v0_9184, 2
  store i32 %v1_918c, i32* @r6, align 4
  %v0_9190 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9190, label %dec_label_pc_921c, label %dec_label_pc_9194

dec_label_pc_9194:                                ; preds = %dec_label_pc_9174
  %v1_9184 = add i32 %v0_9184, 1
  %v2_9194 = inttoptr i32 %v1_9184 to i8*
  %v3_9194 = load i8, i8* %v2_9194, align 1
  %v4_9194 = zext i8 %v3_9194 to i32
  store i32 %v4_9194, i32* @r4, align 4
  %v2_9198 = sub i32 %v1_9188, %v4_9194
  %tmp30 = sub i32 0, %v2_9198
  %v6_9198 = and i32 %v1_9188, %tmp30
  %v7_9198 = icmp slt i32 %v6_9198, 0
  %v8_9198 = icmp slt i32 %v2_9198, 0
  %v9_9198 = icmp eq i32 %v1_9188, %v4_9194
  store i1 %v9_9198, i1* %cpsr_z.global-to-local, align 1
  %v2_919c = xor i1 %v8_9198, %v7_9198
  br i1 %v2_919c, label %dec_label_pc_921c, label %dec_label_pc_91a0

dec_label_pc_91a0:                                ; preds = %dec_label_pc_9194, %dec_label_pc_9150
  %v0_91a4 = phi i32 [ %v4_913c, %dec_label_pc_9150 ], [ %v4_9194, %dec_label_pc_9194 ]
  %v2_9180 = phi i32 [ %v1_9158, %dec_label_pc_9150 ], [ %v1_91c4, %dec_label_pc_9194 ]
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_91a4 = add nuw nsw i32 %v0_91a4, 1
  store i32 %v1_91a4, i32* %r0.global-to-local, align 4
  %v2_91a8 = call i32* @calloc(i32 %v1_91a4, i32 1)
  %v3_91a8 = ptrtoint i32* %v2_91a8 to i32
  store i32 %v3_91a8, i32* %r0.global-to-local, align 4
  %v0_91ac = load i32, i32* @r6, align 4
  store i32 %v0_91ac, i32* %r1.global-to-local, align 4
  %v1_91b0 = load i32, i32* @r5, align 4
  %v2_91b0 = inttoptr i32 %v1_91b0 to i32*
  store i32 %v3_91a8, i32* %v2_91b0, align 4
  %v0_91b4 = load i32, i32* @r4, align 4
  store i32 %v0_91b4, i32* %r2.global-to-local, align 4
  %v3_91b8 = call i32 @function_13068(i32 %v3_91a8, i32 %v0_91ac, i32 %v0_91b4)
  store i32 %v3_91b8, i32* %r0.global-to-local, align 4
  store i32 %v2_9180, i32* @r5, align 4
  %v0_91c0 = load i32, i32* %fp.global-to-local, align 4
  %v1_91c0 = add i32 %v0_91c0, 1
  store i32 %v1_91c0, i32* %fp.global-to-local, align 4
  %v1_91c4 = add i32 %v2_9180, 8
  store i32 %v1_91c4, i32* %ip.global-to-local, align 4
  %v1_91c8 = load i32, i32* @sb, align 4
  %v9_91c8 = icmp eq i32 %v1_91c0, %v1_91c8
  store i1 %v9_91c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_91c8, label %dec_label_pc_91d4, label %dec_label_pc_916c

dec_label_pc_91d4:                                ; preds = %dec_label_pc_91a0, %dec_label_pc_9104, %dec_label_pc_90f0
  %stack_var_-48.1 = phi i32 [ %v3_90f0, %dec_label_pc_90f0 ], [ %v0_9110, %dec_label_pc_9104 ], [ %v0_9110, %dec_label_pc_91a0 ]
  %stack_var_-52.2 = phi i32 [ %v3_90f0, %dec_label_pc_90f0 ], [ %v4_910c, %dec_label_pc_9104 ], [ %v4_910c, %dec_label_pc_91a0 ]
  %v0_91d4 = call i32* @__errno_location()
  %v0_91d8 = load i32, i32* @sl, align 4
  store i32 %stack_var_-48.1, i32* %ip.global-to-local, align 4
  %v3_91e4 = mul i32 %v0_91d8, 16777216
  %v1_91d8 = mul i32 %v0_91d8, 256
  %v4_91e8 = and i32 %v1_91d8, 16711680
  %v5_91e8 = or i32 %v4_91e8, %v3_91e4
  store i32 %v5_91e8, i32* %r1.global-to-local, align 4
  %v1_91e0 = udiv i32 %v0_91d8, 256
  %v3_91ec = and i32 %v1_91e0, 65280
  store i32 %v3_91ec, i32* %r2.global-to-local, align 4
  store i32 0, i32* %v0_91d4, align 4
  %v1_91f8 = load i32, i32* @sl, align 4
  %v4_91f8 = udiv i32 %v1_91f8, 16777216
  %v5_91f8 = or i32 %v4_91f8, %v3_91ec
  %v0_91fc = load i32, i32* %ip.global-to-local, align 4
  store i32 %stack_var_-52.2, i32* %ip.global-to-local, align 4
  %v1_9204 = load i32, i32* %r1.global-to-local, align 4
  %v2_9204 = or i32 %v5_91f8, %v1_9204
  store i32 %v2_9204, i32* %r0.global-to-local, align 4
  store i32 %v4_904c, i32* %r1.global-to-local, align 4
  %v0_9210 = load i32, i32* @r7, align 4
  store i32 %v0_9210, i32* %r2.global-to-local, align 4
  %v6_9218 = trunc i32 %v0_91fc to i8
  %v7_9218 = call i32 @function_8f2c(i32 %v2_9204, i32 %v4_904c, i32 %v0_9210, i32 %v4_9080, i8 %v6_9218, i32 %stack_var_-52.2)
  store i32 %v7_9218, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_921c

dec_label_pc_921c:                                ; preds = %dec_label_pc_9194, %dec_label_pc_9174, %dec_label_pc_916c, %dec_label_pc_913c, %dec_label_pc_9128, %dec_label_pc_9120, %dec_label_pc_90e4, %dec_label_pc_91d4
  %stack_var_-52.3 = phi i32 [ 0, %dec_label_pc_90e4 ], [ %stack_var_-52.2, %dec_label_pc_91d4 ], [ %v4_910c, %dec_label_pc_9120 ], [ %v4_910c, %dec_label_pc_9128 ], [ %v4_910c, %dec_label_pc_913c ], [ %v4_910c, %dec_label_pc_916c ], [ %v4_910c, %dec_label_pc_9174 ], [ %v4_910c, %dec_label_pc_9194 ]
  store i32 %v4_9080, i32* %r1.global-to-local, align 4
  %v2_9220 = icmp eq i32* %v2_9080, null
  store i1 %v2_9220, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9220, label %bb31, label %bb

bb:                                               ; preds = %dec_label_pc_921c
  store i32 %v4_9080, i32* %r0.global-to-local, align 4
  br label %bb31

bb31:                                             ; preds = %dec_label_pc_921c, %bb
  store i32 37420, i32* %lr.global-to-local, align 4
  %v1_9228 = xor i1 %v2_9220, true
  call void @__pseudo_cond_branch(i1 %v1_9228, i32 ptrtoint (i32* @global_var_8d88.86 to i32))
  %v2_9230 = icmp eq i32 %stack_var_-52.3, 0
  store i1 %v2_9230, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9230, label %.dec_label_pc_9040_crit_edge, label %dec_label_pc_9238

.dec_label_pc_9040_crit_edge:                     ; preds = %bb31
  %v29_9044.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9040

dec_label_pc_9238:                                ; preds = %bb31
  %v0_9238 = load i32, i32* @sb, align 4
  %v2_9238 = icmp eq i32 %v0_9238, 0
  store i1 %v2_9238, i1* %cpsr_z.global-to-local, align 1
  %tmp32 = icmp slt i32 %v0_9238, 1
  br i1 %tmp32, label %dec_label_pc_9260, label %dec_label_pc_9240

dec_label_pc_9240:                                ; preds = %dec_label_pc_9238
  br label %dec_label_pc_9244

dec_label_pc_9244:                                ; preds = %dec_label_pc_9244, %dec_label_pc_9240
  %v0_9250 = phi i32 [ %v1_9250, %dec_label_pc_9244 ], [ 0, %dec_label_pc_9240 ]
  store i32 %stack_var_-52.3, i32* %ip.global-to-local, align 4
  %v4_9248 = mul i32 %v0_9250, 8
  %v5_9248 = add i32 %v4_9248, %stack_var_-52.3
  %v6_9248 = inttoptr i32 %v5_9248 to i32*
  %v7_9248 = load i32, i32* %v6_9248, align 4
  store i32 %v7_9248, i32* %r0.global-to-local, align 4
  %v2_924c = icmp eq i32 %v7_9248, 0
  store i1 %v2_924c, i1* %cpsr_z.global-to-local, align 1
  %v1_9250 = add i32 %v0_9250, 1
  store i32 37464, i32* %lr.global-to-local, align 4
  %v1_9254 = xor i1 %v2_924c, true
  call void @__pseudo_cond_branch(i1 %v1_9254, i32 ptrtoint (i32* @global_var_8d88.86 to i32))
  %v0_9258 = load i32, i32* @sb, align 4
  %v9_9258 = icmp eq i32 %v0_9258, %v1_9250
  store i1 %v9_9258, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9258, label %dec_label_pc_9260, label %dec_label_pc_9244

dec_label_pc_9260:                                ; preds = %dec_label_pc_9244, %dec_label_pc_9238
  store i32 %stack_var_-52.3, i32* %r0.global-to-local, align 4
  store i32 %v9_901c, i32* @r6, align 4
  store i32 %v12_901c, i32* @r7, align 4
  store i32 %v18_901c, i32* @sb, align 4
  store i32 %v21_901c, i32* @sl, align 4
  store i32 %v27_901c, i32* %lr.global-to-local, align 4
  %v1_926c = inttoptr i32 %stack_var_-52.3 to i32*
  call void @free(i32* %v1_926c)
  store i32 ptrtoint (i32* @0 to i32), i32* %r0.global-to-local, align 4
  ret i32 ptrtoint (i32* @0 to i32)

; uselistorder directives
  uselistorder i1 %v2_9220, { 0, 2, 1 }
  uselistorder i32 %stack_var_-52.3, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_91d8, { 2, 0, 1 }
  uselistorder i32 %stack_var_-52.2, { 1, 0, 2 }
  uselistorder i32 %v1_91c4, { 1, 0 }
  uselistorder i32 %v3_91a8, { 0, 2, 1 }
  uselistorder i32 %v2_9180, { 2, 1, 0 }
  uselistorder i32 %v2_9198, { 1, 0 }
  uselistorder i32 %v4_9194, { 0, 2, 1, 3 }
  uselistorder i32 %v1_9188, { 2, 0, 1, 3 }
  uselistorder i32 %v0_9184, { 1, 0 }
  uselistorder i32 %v0_9120, { 0, 2, 1 }
  uselistorder i32 %v0_9110, { 0, 2, 1, 3 }
  uselistorder i32 %v4_910c, { 0, 1, 2, 8, 7, 6, 3, 5, 9, 10, 4, 11 }
  uselistorder i32 %v3_90f0, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v1_90cc, { 1, 0 }
  uselistorder i32 %v0_90b0, { 0, 2, 1 }
  uselistorder i32 %v0_908c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_9080, { 0, 3, 4, 1, 2, 5 }
  uselistorder i32 %v2_906c, { 2, 1, 0 }
  uselistorder i32 %v4_9058, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v4_904c, { 1, 0, 2 }
  uselistorder i32 %v0_902c, { 5, 6, 0, 1, 2, 3, 4, 7, 8 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 5, 2, 3, 4, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 5, 22, 6, 3, 7, 10, 14, 11, 8, 9, 12, 13, 20, 15, 17, 16, 18, 19, 23, 21, 0, 1 }
  uselistorder i32* %fp.global-to-local, { 0, 1, 2, 4, 5, 3, 6 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 9, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32 %arg2, { 1, 2, 4, 0, 3, 5, 6 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %dec_label_pc_921c, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_9040, { 1, 0, 3, 4, 2, 5 }
}

define i32 @function_9270(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_9270:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v1_9270 = urem i32 %arg1, 256
  %v2_9274 = icmp eq i32 %v1_9270, 0
  br i1 %v2_9274, label %dec_label_pc_92c0, label %dec_label_pc_9284

dec_label_pc_9284:                                ; preds = %dec_label_pc_9270
  %v0_9284 = load i32, i32* %r1.global-to-local, align 4
  %v1_9284 = add i32 %v0_9284, 4
  %v2_9284 = inttoptr i32 %v1_9284 to i8*
  %v3_9284 = load i8, i8* %v2_9284, align 1
  %v4_9284 = zext i8 %v3_9284 to i32
  %v1_9288 = urem i32 %arg3, 256
  %v9_928c = icmp eq i32 %v4_9284, %v1_9288
  br i1 %v9_928c, label %dec_label_pc_92c8, label %dec_label_pc_92b0.preheader

dec_label_pc_92b0.preheader:                      ; preds = %dec_label_pc_9284
  br label %dec_label_pc_92b0

dec_label_pc_92a0:                                ; preds = %dec_label_pc_92b0
  %v1_92a0 = add i32 %v0_92a8.in, 12
  %v2_92a0 = inttoptr i32 %v1_92a0 to i8*
  %v3_92a0 = load i8, i8* %v2_92a0, align 1
  %v4_92a0 = zext i8 %v3_92a0 to i32
  %v9_92a4 = icmp eq i32 %v1_9288, %v4_92a0
  br i1 %v9_92a4, label %dec_label_pc_92c8, label %dec_label_pc_92b0

dec_label_pc_92b0:                                ; preds = %dec_label_pc_92b0.preheader, %dec_label_pc_92a0
  %v0_92a8.in = phi i32 [ %v0_9284, %dec_label_pc_92b0.preheader ], [ %v0_92a8, %dec_label_pc_92a0 ]
  %v0_92b0 = phi i32 [ 0, %dec_label_pc_92b0.preheader ], [ %v1_92b0, %dec_label_pc_92a0 ]
  %v0_92a8 = add i32 %v0_92a8.in, 8
  %v1_92b0 = add i32 %v0_92b0, 1
  %v9_92b4 = icmp eq i32 %v1_9270, %v1_92b0
  store i32 %v0_92a8, i32* %r1.global-to-local, align 4
  br i1 %v9_92b4, label %dec_label_pc_92c0, label %dec_label_pc_92a0

dec_label_pc_92c0:                                ; preds = %dec_label_pc_92b0, %dec_label_pc_92c8, %dec_label_pc_9270
  ret i32 %arg4

dec_label_pc_92c8:                                ; preds = %dec_label_pc_92a0, %dec_label_pc_9284
  %v0_92c8 = phi i32 [ %v0_9284, %dec_label_pc_9284 ], [ %v0_92a8, %dec_label_pc_92a0 ]
  %v1_92c8 = inttoptr i32 %v0_92c8 to i32*
  %v2_92c8 = load i32, i32* %v1_92c8, align 4
  %v3_92cc = icmp eq i32 %v2_92c8, 0
  br i1 %v3_92cc, label %dec_label_pc_92c0, label %dec_label_pc_92d4

dec_label_pc_92d4:                                ; preds = %dec_label_pc_92c8
  %v3_92c8 = inttoptr i32 %v2_92c8 to i8*
  %v3_92d8 = call i32 @inet_addr(i8* %v3_92c8)
  ret i32 %v3_92d8

; uselistorder directives
  uselistorder i32 %v2_92c8, { 1, 0 }
  uselistorder i32 %v1_92b0, { 1, 0 }
  uselistorder i32 %v0_92a8, { 1, 0, 2 }
  uselistorder i32 %v0_92a8.in, { 1, 0 }
  uselistorder i32 %v1_9288, { 1, 0 }
  uselistorder i32 %v0_9284, { 1, 0, 2 }
  uselistorder i32 %v1_9270, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_92c0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_92b0, { 1, 0 }
}

define i32 @function_92dc(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_92dc:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v1_92dc = urem i32 %arg1, 256
  %v2_92e0 = icmp eq i32 %v1_92dc, 0
  %v3_92e4 = load i32, i32* @r4, align 4
  br i1 %v2_92e0, label %dec_label_pc_932c, label %dec_label_pc_92f0

dec_label_pc_92f0:                                ; preds = %dec_label_pc_92dc
  %v0_92f0 = load i32, i32* %r1.global-to-local, align 4
  %v1_92f0 = add i32 %v0_92f0, 4
  %v2_92f0 = inttoptr i32 %v1_92f0 to i8*
  %v3_92f0 = load i8, i8* %v2_92f0, align 1
  %v4_92f0 = zext i8 %v3_92f0 to i32
  %v1_92f4 = urem i32 %arg3, 256
  %v9_92f8 = icmp eq i32 %v4_92f0, %v1_92f4
  br i1 %v9_92f8, label %dec_label_pc_9334, label %dec_label_pc_931c.preheader

dec_label_pc_931c.preheader:                      ; preds = %dec_label_pc_92f0
  br label %dec_label_pc_931c

dec_label_pc_930c:                                ; preds = %dec_label_pc_931c
  %v1_930c = add i32 %v0_9314.in, 12
  %v2_930c = inttoptr i32 %v1_930c to i8*
  %v3_930c = load i8, i8* %v2_930c, align 1
  %v4_930c = zext i8 %v3_930c to i32
  %v9_9310 = icmp eq i32 %v1_92f4, %v4_930c
  br i1 %v9_9310, label %dec_label_pc_9334, label %dec_label_pc_931c

dec_label_pc_931c:                                ; preds = %dec_label_pc_931c.preheader, %dec_label_pc_930c
  %v0_9314.in = phi i32 [ %v0_92f0, %dec_label_pc_931c.preheader ], [ %v0_9314, %dec_label_pc_930c ]
  %v0_931c = phi i32 [ 0, %dec_label_pc_931c.preheader ], [ %v1_931c, %dec_label_pc_930c ]
  %v0_9314 = add i32 %v0_9314.in, 8
  %v1_931c = add i32 %v0_931c, 1
  store i32 %v1_931c, i32* @lr, align 4
  %v9_9320 = icmp eq i32 %v1_92dc, %v1_931c
  store i32 %v0_9314, i32* %r1.global-to-local, align 4
  br i1 %v9_9320, label %dec_label_pc_932c, label %dec_label_pc_930c

dec_label_pc_932c:                                ; preds = %dec_label_pc_931c, %dec_label_pc_9334, %dec_label_pc_92dc
  store i32 %v3_92e4, i32* @r4, align 4
  ret i32 %arg4

dec_label_pc_9334:                                ; preds = %dec_label_pc_930c, %dec_label_pc_92f0
  %v0_9334 = phi i32 [ %v0_92f0, %dec_label_pc_92f0 ], [ %v0_9314, %dec_label_pc_930c ]
  %v1_9334 = inttoptr i32 %v0_9334 to i32*
  %v2_9334 = load i32, i32* %v1_9334, align 4
  %v2_9338 = icmp eq i32 %v2_9334, 0
  br i1 %v2_9338, label %dec_label_pc_932c, label %dec_label_pc_9340

dec_label_pc_9340:                                ; preds = %dec_label_pc_9334
  store i32 10, i32* %r1.global-to-local, align 4
  store i32 %v3_92e4, i32* @r4, align 4
  %v2_9348 = inttoptr i32 %v2_9334 to i8*
  %v3_9348 = call i32 @function_13118(i8* %v2_9348, i32 10)
  ret i32 %v3_9348

; uselistorder directives
  uselistorder i32 %v1_931c, { 1, 2, 0 }
  uselistorder i32 %v0_9314, { 1, 0, 2 }
  uselistorder i32 %v0_9314.in, { 1, 0 }
  uselistorder i32 %v1_92f4, { 1, 0 }
  uselistorder i32 %v0_92f0, { 1, 0, 2 }
  uselistorder i32 %v3_92e4, { 1, 0 }
  uselistorder i32 %v1_92dc, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_932c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_931c, { 1, 0 }
}

define i32 @function_934c(i32 %arg1) local_unnamed_addr {
dec_label_pc_934c:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_934c = load i32, i32* @r4, align 4
  store i32 %v3_934c, i32* %stack_var_-24, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v2_9358 = call i32* @calloc(i32 1, i32 8)
  %v3_9358 = ptrtoint i32* %v2_9358 to i32
  store i32 ptrtoint (i8** @global_var_1bccc.82 to i32), i32* %r4.global-to-local, align 4
  %v2_9360 = load i8, i8* bitcast (i8** @global_var_1bccc.82 to i8*), align 4
  %v3_9360 = zext i8 %v2_9360 to i32
  store i32 ptrtoint (i32* @global_var_1bcd0.84 to i32), i32* %r6.global-to-local, align 4
  store i32 40100, i32* %r2.global-to-local, align 4
  store i32 %v3_9358, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_9374 = mul nuw nsw i32 %v3_9360, 4
  store i32 %v3_9374, i32* %r1.global-to-local, align 4
  %v2_9378 = load i32, i32* @global_var_1bcd0.84, align 4
  store i32 40100, i32* %v2_9358, align 4
  %v0_9380 = load i32, i32* %r3.global-to-local, align 4
  %v1_9380 = trunc i32 %v0_9380 to i8
  %v2_9380 = load i32, i32* %r5.global-to-local, align 4
  %v3_9380 = add i32 %v2_9380, 4
  %v4_9380 = inttoptr i32 %v3_9380 to i8*
  store i8 %v1_9380, i8* %v4_9380, align 1
  %v0_9384 = load i32, i32* %r1.global-to-local, align 4
  %v1_9384 = add i32 %v0_9384, 4
  store i32 %v1_9384, i32* %r1.global-to-local, align 4
  %v4_9388 = inttoptr i32 %v2_9378 to i32*
  %v5_9388 = call i32* @realloc(i32* %v4_9388, i32 %v1_9384)
  %v7_9388 = ptrtoint i32* %v5_9388 to i32
  %v2_938c = load i8, i8* bitcast (i8** @global_var_1bccc.82 to i8*), align 4
  %v3_938c = zext i8 %v2_938c to i32
  store i32 %v3_938c, i32* %r3.global-to-local, align 4
  store i32 %v7_9388, i32* %ip.global-to-local, align 4
  %v0_9394 = load i32, i32* %r5.global-to-local, align 4
  %v5_9394 = mul nuw nsw i32 %v3_938c, 4
  %v6_9394 = add i32 %v5_9394, %v7_9388
  %v7_9394 = inttoptr i32 %v6_9394 to i32*
  store i32 %v0_9394, i32* %v7_9394, align 4
  store i32 ptrtoint (i8* @global_var_1bccd.90 to i32), i32* %r2.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v2_93a4 = load i32, i32* %r4.global-to-local, align 4
  %v3_93a4 = inttoptr i32 %v2_93a4 to i8*
  store i8 ptrtoint (i8* @global_var_1bccd.90 to i8), i8* %v3_93a4, align 1
  %v0_93a8 = load i32, i32* %ip.global-to-local, align 4
  %v1_93a8 = load i32, i32* %r6.global-to-local, align 4
  %v2_93a8 = inttoptr i32 %v1_93a8 to i32*
  store i32 %v0_93a8, i32* %v2_93a8, align 4
  %v2_93ac = call i32* @calloc(i32 1, i32 8)
  %v3_93ac = ptrtoint i32* %v2_93ac to i32
  %v2_93b0 = load i8, i8* bitcast (i8** @global_var_1bccc.82 to i8*), align 4
  %v3_93b0 = zext i8 %v2_93b0 to i32
  store i32 ptrtoint (i32* @global_var_b1c8.92 to i32), i32* %r3.global-to-local, align 4
  store i32 1, i32* %r8.global-to-local, align 4
  store i32 %v3_93ac, i32* %r5.global-to-local, align 4
  %v3_93c0 = mul nuw nsw i32 %v3_93b0, 4
  store i32 %v3_93c0, i32* %r1.global-to-local, align 4
  %v2_93c4 = load i32, i32* @global_var_1bcd0.84, align 4
  store i32 ptrtoint (i32* @global_var_b1c8.92 to i32), i32* %v2_93ac, align 4
  %v2_93cc = load i32, i32* %r5.global-to-local, align 4
  %v3_93cc = add i32 %v2_93cc, 4
  %v4_93cc = inttoptr i32 %v3_93cc to i8*
  store i8 1, i8* %v4_93cc, align 1
  %v0_93d0 = load i32, i32* %r1.global-to-local, align 4
  %v1_93d0 = add i32 %v0_93d0, 4
  store i32 %v1_93d0, i32* %r1.global-to-local, align 4
  %v3_93d4 = inttoptr i32 %v2_93c4 to i32*
  %v4_93d4 = call i32* @realloc(i32* %v3_93d4, i32 %v1_93d0)
  %v6_93d4 = ptrtoint i32* %v4_93d4 to i32
  %v2_93d8 = load i8, i8* bitcast (i8** @global_var_1bccc.82 to i8*), align 4
  %v3_93d8 = zext i8 %v2_93d8 to i32
  store i32 %v3_93d8, i32* %r3.global-to-local, align 4
  store i32 %v6_93d4, i32* %ip.global-to-local, align 4
  %v0_93e0 = load i32, i32* %r5.global-to-local, align 4
  %v5_93e0 = mul nuw nsw i32 %v3_93d8, 4
  %v6_93e0 = add i32 %v5_93e0, %v6_93d4
  %v7_93e0 = inttoptr i32 %v6_93e0 to i32*
  store i32 %v0_93e0, i32* %v7_93e0, align 4
  %v0_93e4 = load i32, i32* %r3.global-to-local, align 4
  %v1_93e4 = load i32, i32* %r8.global-to-local, align 4
  %v2_93e4 = add i32 %v1_93e4, %v0_93e4
  store i32 %v2_93e4, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_93f0 = load i32, i32* %ip.global-to-local, align 4
  %v1_93f0 = load i32, i32* %r6.global-to-local, align 4
  %v2_93f0 = inttoptr i32 %v1_93f0 to i32*
  store i32 %v0_93f0, i32* %v2_93f0, align 4
  %v0_93f4 = load i32, i32* %r2.global-to-local, align 4
  %v1_93f4 = trunc i32 %v0_93f4 to i8
  %v2_93f4 = load i32, i32* %r4.global-to-local, align 4
  %v3_93f4 = inttoptr i32 %v2_93f4 to i8*
  store i8 %v1_93f4, i8* %v3_93f4, align 1
  %v2_93f8 = call i32* @calloc(i32 %v1_93e4, i32 8)
  %v4_93f8 = ptrtoint i32* %v2_93f8 to i32
  %v2_93fc = load i8, i8* bitcast (i8** @global_var_1bccc.82 to i8*), align 4
  %v3_93fc = zext i8 %v2_93fc to i32
  store i32 ptrtoint (i32* @global_var_b68c.94 to i32), i32* %r2.global-to-local, align 4
  store i32 %v4_93f8, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v3_940c = mul nuw nsw i32 %v3_93fc, 4
  store i32 %v3_940c, i32* %r1.global-to-local, align 4
  %v2_9410 = load i32, i32* @global_var_1bcd0.84, align 4
  store i32 ptrtoint (i32* @global_var_b68c.94 to i32), i32* %v2_93f8, align 4
  %v0_9418 = load i32, i32* %r3.global-to-local, align 4
  %v1_9418 = trunc i32 %v0_9418 to i8
  %v2_9418 = load i32, i32* %r5.global-to-local, align 4
  %v3_9418 = add i32 %v2_9418, 4
  %v4_9418 = inttoptr i32 %v3_9418 to i8*
  store i8 %v1_9418, i8* %v4_9418, align 1
  %v0_941c = load i32, i32* %r1.global-to-local, align 4
  %v1_941c = add i32 %v0_941c, 4
  store i32 %v1_941c, i32* %r1.global-to-local, align 4
  %v4_9420 = inttoptr i32 %v2_9410 to i32*
  %v5_9420 = call i32* @realloc(i32* %v4_9420, i32 %v1_941c)
  %v7_9420 = ptrtoint i32* %v5_9420 to i32
  %v2_9424 = load i8, i8* bitcast (i8** @global_var_1bccc.82 to i8*), align 4
  %v3_9424 = zext i8 %v2_9424 to i32
  store i32 %v3_9424, i32* %r3.global-to-local, align 4
  store i32 %v7_9420, i32* %ip.global-to-local, align 4
  %v1_942c = load i32, i32* %r8.global-to-local, align 4
  %v2_942c = add i32 %v1_942c, %v3_9424
  store i32 %v2_942c, i32* %r2.global-to-local, align 4
  %v0_9430 = load i32, i32* %r5.global-to-local, align 4
  %v5_9430 = mul nuw nsw i32 %v3_9424, 4
  %v6_9430 = add i32 %v5_9430, %v7_9420
  %v7_9430 = inttoptr i32 %v6_9430 to i32*
  store i32 %v0_9430, i32* %v7_9430, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_9438 = load i32, i32* %r8.global-to-local, align 4
  %v0_943c = load i32, i32* %r2.global-to-local, align 4
  %v1_943c = trunc i32 %v0_943c to i8
  %v2_943c = load i32, i32* %r4.global-to-local, align 4
  %v3_943c = inttoptr i32 %v2_943c to i8*
  store i8 %v1_943c, i8* %v3_943c, align 1
  %v0_9440 = load i32, i32* %ip.global-to-local, align 4
  %v1_9440 = load i32, i32* %r6.global-to-local, align 4
  %v2_9440 = inttoptr i32 %v1_9440 to i32*
  store i32 %v0_9440, i32* %v2_9440, align 4
  %v2_9444 = call i32* @calloc(i32 %v0_9438, i32 8)
  %v3_9444 = ptrtoint i32* %v2_9444 to i32
  %v2_9448 = load i8, i8* bitcast (i8** @global_var_1bccc.82 to i8*), align 4
  %v3_9448 = zext i8 %v2_9448 to i32
  store i32 ptrtoint (i32* @global_var_96d4.96 to i32), i32* %r3.global-to-local, align 4
  store i32 8, i32* %r7.global-to-local, align 4
  store i32 %v3_9444, i32* %r5.global-to-local, align 4
  %v3_9458 = mul nuw nsw i32 %v3_9448, 4
  store i32 %v3_9458, i32* %r1.global-to-local, align 4
  %v2_945c = load i32, i32* @global_var_1bcd0.84, align 4
  store i32 ptrtoint (i32* @global_var_96d4.96 to i32), i32* %v2_9444, align 4
  %v2_9464 = load i32, i32* %r5.global-to-local, align 4
  %v3_9464 = add i32 %v2_9464, 4
  %v4_9464 = inttoptr i32 %v3_9464 to i8*
  store i8 8, i8* %v4_9464, align 1
  %v0_9468 = load i32, i32* %r1.global-to-local, align 4
  %v1_9468 = add i32 %v0_9468, 4
  store i32 %v1_9468, i32* %r1.global-to-local, align 4
  %v3_946c = inttoptr i32 %v2_945c to i32*
  %v4_946c = call i32* @realloc(i32* %v3_946c, i32 %v1_9468)
  %v6_946c = ptrtoint i32* %v4_946c to i32
  %v2_9470 = load i8, i8* bitcast (i8** @global_var_1bccc.82 to i8*), align 4
  %v3_9470 = zext i8 %v2_9470 to i32
  store i32 %v3_9470, i32* %r3.global-to-local, align 4
  store i32 %v6_946c, i32* %ip.global-to-local, align 4
  %v0_9478 = load i32, i32* %r5.global-to-local, align 4
  %v5_9478 = mul nuw nsw i32 %v3_9470, 4
  %v6_9478 = add i32 %v5_9478, %v6_946c
  %v7_9478 = inttoptr i32 %v6_9478 to i32*
  store i32 %v0_9478, i32* %v7_9478, align 4
  %v0_947c = load i32, i32* %r3.global-to-local, align 4
  %v1_947c = load i32, i32* %r8.global-to-local, align 4
  %v2_947c = add i32 %v1_947c, %v0_947c
  store i32 %v2_947c, i32* %r2.global-to-local, align 4
  %v0_9480 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_9480, i32* %r1.global-to-local, align 4
  %v0_9488 = load i32, i32* %ip.global-to-local, align 4
  %v1_9488 = load i32, i32* %r6.global-to-local, align 4
  %v2_9488 = inttoptr i32 %v1_9488 to i32*
  store i32 %v0_9488, i32* %v2_9488, align 4
  %v0_948c = load i32, i32* %r2.global-to-local, align 4
  %v1_948c = trunc i32 %v0_948c to i8
  %v2_948c = load i32, i32* %r4.global-to-local, align 4
  %v3_948c = inttoptr i32 %v2_948c to i8*
  store i8 %v1_948c, i8* %v3_948c, align 1
  %v2_9490 = call i32* @calloc(i32 %v1_947c, i32 %v0_9480)
  %v4_9490 = ptrtoint i32* %v2_9490 to i32
  %v2_9494 = load i8, i8* bitcast (i8** @global_var_1bccc.82 to i8*), align 4
  %v3_9494 = zext i8 %v2_9494 to i32
  store i32 ptrtoint (i32* @global_var_d6a8.98 to i32), i32* %r2.global-to-local, align 4
  store i32 %v4_9490, i32* %r5.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v3_94a4 = mul nuw nsw i32 %v3_9494, 4
  store i32 %v3_94a4, i32* %r1.global-to-local, align 4
  %v2_94a8 = load i32, i32* @global_var_1bcd0.84, align 4
  store i32 ptrtoint (i32* @global_var_d6a8.98 to i32), i32* %v2_9490, align 4
  %v0_94b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_94b0 = trunc i32 %v0_94b0 to i8
  %v2_94b0 = load i32, i32* %r5.global-to-local, align 4
  %v3_94b0 = add i32 %v2_94b0, 4
  %v4_94b0 = inttoptr i32 %v3_94b0 to i8*
  store i8 %v1_94b0, i8* %v4_94b0, align 1
  %v0_94b4 = load i32, i32* %r1.global-to-local, align 4
  %v1_94b4 = add i32 %v0_94b4, 4
  store i32 %v1_94b4, i32* %r1.global-to-local, align 4
  %v4_94b8 = inttoptr i32 %v2_94a8 to i32*
  %v5_94b8 = call i32* @realloc(i32* %v4_94b8, i32 %v1_94b4)
  %v7_94b8 = ptrtoint i32* %v5_94b8 to i32
  %v2_94bc = load i8, i8* bitcast (i8** @global_var_1bccc.82 to i8*), align 4
  %v3_94bc = zext i8 %v2_94bc to i32
  store i32 %v3_94bc, i32* %r3.global-to-local, align 4
  store i32 %v7_94b8, i32* %ip.global-to-local, align 4
  %v0_94c4 = load i32, i32* %r5.global-to-local, align 4
  %v5_94c4 = mul nuw nsw i32 %v3_94bc, 4
  %v6_94c4 = add i32 %v5_94c4, %v7_94b8
  %v7_94c4 = inttoptr i32 %v6_94c4 to i32*
  store i32 %v0_94c4, i32* %v7_94c4, align 4
  %v0_94c8 = load i32, i32* %r3.global-to-local, align 4
  %v1_94c8 = load i32, i32* %r8.global-to-local, align 4
  %v2_94c8 = add i32 %v1_94c8, %v0_94c8
  store i32 %v2_94c8, i32* %r2.global-to-local, align 4
  %v0_94cc = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_94cc, i32* %r1.global-to-local, align 4
  %v0_94d4 = load i32, i32* %ip.global-to-local, align 4
  %v1_94d4 = load i32, i32* %r6.global-to-local, align 4
  %v2_94d4 = inttoptr i32 %v1_94d4 to i32*
  store i32 %v0_94d4, i32* %v2_94d4, align 4
  %v0_94d8 = load i32, i32* %r2.global-to-local, align 4
  %v1_94d8 = trunc i32 %v0_94d8 to i8
  %v2_94d8 = load i32, i32* %r4.global-to-local, align 4
  %v3_94d8 = inttoptr i32 %v2_94d8 to i8*
  store i8 %v1_94d8, i8* %v3_94d8, align 1
  %v2_94dc = call i32* @calloc(i32 %v1_94c8, i32 %v0_94cc)
  %v4_94dc = ptrtoint i32* %v2_94dc to i32
  %v2_94e0 = load i8, i8* bitcast (i8** @global_var_1bccc.82 to i8*), align 4
  %v3_94e0 = zext i8 %v2_94e0 to i32
  store i32 ptrtoint (i32* @global_var_cf34.100 to i32), i32* %r2.global-to-local, align 4
  store i32 %v4_94dc, i32* %r5.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v3_94f0 = mul nuw nsw i32 %v3_94e0, 4
  store i32 %v3_94f0, i32* %r1.global-to-local, align 4
  %v2_94f4 = load i32, i32* @global_var_1bcd0.84, align 4
  store i32 ptrtoint (i32* @global_var_cf34.100 to i32), i32* %v2_94dc, align 4
  %v0_94fc = load i32, i32* %r3.global-to-local, align 4
  %v1_94fc = trunc i32 %v0_94fc to i8
  %v2_94fc = load i32, i32* %r5.global-to-local, align 4
  %v3_94fc = add i32 %v2_94fc, 4
  %v4_94fc = inttoptr i32 %v3_94fc to i8*
  store i8 %v1_94fc, i8* %v4_94fc, align 1
  %v0_9500 = load i32, i32* %r1.global-to-local, align 4
  %v1_9500 = add i32 %v0_9500, 4
  store i32 %v1_9500, i32* %r1.global-to-local, align 4
  %v4_9504 = inttoptr i32 %v2_94f4 to i32*
  %v5_9504 = call i32* @realloc(i32* %v4_9504, i32 %v1_9500)
  %v7_9504 = ptrtoint i32* %v5_9504 to i32
  %v2_9508 = load i8, i8* bitcast (i8** @global_var_1bccc.82 to i8*), align 4
  %v3_9508 = zext i8 %v2_9508 to i32
  store i32 %v3_9508, i32* %r3.global-to-local, align 4
  store i32 %v7_9504, i32* %ip.global-to-local, align 4
  %v0_9510 = load i32, i32* %r5.global-to-local, align 4
  %v5_9510 = mul nuw nsw i32 %v3_9508, 4
  %v6_9510 = add i32 %v5_9510, %v7_9504
  %v7_9510 = inttoptr i32 %v6_9510 to i32*
  store i32 %v0_9510, i32* %v7_9510, align 4
  %v0_9514 = load i32, i32* %r3.global-to-local, align 4
  %v1_9514 = load i32, i32* %r8.global-to-local, align 4
  %v2_9514 = add i32 %v1_9514, %v0_9514
  store i32 %v2_9514, i32* %r2.global-to-local, align 4
  %v0_9518 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_9518, i32* %r1.global-to-local, align 4
  %v0_9520 = load i32, i32* %ip.global-to-local, align 4
  %v1_9520 = load i32, i32* %r6.global-to-local, align 4
  %v2_9520 = inttoptr i32 %v1_9520 to i32*
  store i32 %v0_9520, i32* %v2_9520, align 4
  %v0_9524 = load i32, i32* %r2.global-to-local, align 4
  %v1_9524 = trunc i32 %v0_9524 to i8
  %v2_9524 = load i32, i32* %r4.global-to-local, align 4
  %v3_9524 = inttoptr i32 %v2_9524 to i8*
  store i8 %v1_9524, i8* %v3_9524, align 1
  %v2_9528 = call i32* @calloc(i32 %v1_9514, i32 %v0_9518)
  %v4_9528 = ptrtoint i32* %v2_9528 to i32
  %v2_952c = load i8, i8* bitcast (i8** @global_var_1bccc.82 to i8*), align 4
  %v3_952c = zext i8 %v2_952c to i32
  store i32 ptrtoint (i32* @global_var_c6b8.102 to i32), i32* %r2.global-to-local, align 4
  store i32 %v4_9528, i32* %r5.global-to-local, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v3_953c = mul nuw nsw i32 %v3_952c, 4
  store i32 %v3_953c, i32* %r1.global-to-local, align 4
  %v2_9540 = load i32, i32* @global_var_1bcd0.84, align 4
  store i32 ptrtoint (i32* @global_var_c6b8.102 to i32), i32* %v2_9528, align 4
  %v0_9548 = load i32, i32* %r3.global-to-local, align 4
  %v1_9548 = trunc i32 %v0_9548 to i8
  %v2_9548 = load i32, i32* %r5.global-to-local, align 4
  %v3_9548 = add i32 %v2_9548, 4
  %v4_9548 = inttoptr i32 %v3_9548 to i8*
  store i8 %v1_9548, i8* %v4_9548, align 1
  %v0_954c = load i32, i32* %r1.global-to-local, align 4
  %v1_954c = add i32 %v0_954c, 4
  store i32 %v1_954c, i32* %r1.global-to-local, align 4
  %v4_9550 = inttoptr i32 %v2_9540 to i32*
  %v5_9550 = call i32* @realloc(i32* %v4_9550, i32 %v1_954c)
  %v7_9550 = ptrtoint i32* %v5_9550 to i32
  %v2_9554 = load i8, i8* bitcast (i8** @global_var_1bccc.82 to i8*), align 4
  %v3_9554 = zext i8 %v2_9554 to i32
  store i32 %v3_9554, i32* %r3.global-to-local, align 4
  store i32 %v7_9550, i32* %ip.global-to-local, align 4
  %v0_955c = load i32, i32* %r5.global-to-local, align 4
  %v5_955c = mul nuw nsw i32 %v3_9554, 4
  %v6_955c = add i32 %v5_955c, %v7_9550
  %v7_955c = inttoptr i32 %v6_955c to i32*
  store i32 %v0_955c, i32* %v7_955c, align 4
  %v0_9560 = load i32, i32* %r3.global-to-local, align 4
  %v1_9560 = load i32, i32* %r8.global-to-local, align 4
  %v2_9560 = add i32 %v1_9560, %v0_9560
  store i32 %v2_9560, i32* %r2.global-to-local, align 4
  %v0_9564 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_9564, i32* %r1.global-to-local, align 4
  %v0_956c = load i32, i32* %ip.global-to-local, align 4
  %v1_956c = load i32, i32* %r6.global-to-local, align 4
  %v2_956c = inttoptr i32 %v1_956c to i32*
  store i32 %v0_956c, i32* %v2_956c, align 4
  %v0_9570 = load i32, i32* %r2.global-to-local, align 4
  %v1_9570 = trunc i32 %v0_9570 to i8
  %v2_9570 = load i32, i32* %r4.global-to-local, align 4
  %v3_9570 = inttoptr i32 %v2_9570 to i8*
  store i8 %v1_9570, i8* %v3_9570, align 1
  %v2_9574 = call i32* @calloc(i32 %v1_9560, i32 %v0_9564)
  %v4_9574 = ptrtoint i32* %v2_9574 to i32
  %v2_9578 = load i8, i8* bitcast (i8** @global_var_1bccc.82 to i8*), align 4
  %v3_9578 = zext i8 %v2_9578 to i32
  store i32 48700, i32* %r2.global-to-local, align 4
  store i32 %v4_9574, i32* %r5.global-to-local, align 4
  store i32 10, i32* %r3.global-to-local, align 4
  %v3_9588 = mul nuw nsw i32 %v3_9578, 4
  store i32 %v3_9588, i32* %r1.global-to-local, align 4
  %v2_958c = load i32, i32* @global_var_1bcd0.84, align 4
  store i32 48700, i32* %v2_9574, align 4
  %v0_9594 = load i32, i32* %r3.global-to-local, align 4
  %v1_9594 = trunc i32 %v0_9594 to i8
  %v2_9594 = load i32, i32* %r5.global-to-local, align 4
  %v3_9594 = add i32 %v2_9594, 4
  %v4_9594 = inttoptr i32 %v3_9594 to i8*
  store i8 %v1_9594, i8* %v4_9594, align 1
  %v0_9598 = load i32, i32* %r1.global-to-local, align 4
  %v1_9598 = add i32 %v0_9598, 4
  store i32 %v1_9598, i32* %r1.global-to-local, align 4
  %v4_959c = inttoptr i32 %v2_958c to i32*
  %v5_959c = call i32* @realloc(i32* %v4_959c, i32 %v1_9598)
  %v7_959c = ptrtoint i32* %v5_959c to i32
  %v2_95a0 = load i8, i8* bitcast (i8** @global_var_1bccc.82 to i8*), align 4
  %v3_95a0 = zext i8 %v2_95a0 to i32
  store i32 %v3_95a0, i32* %r3.global-to-local, align 4
  store i32 %v7_959c, i32* %ip.global-to-local, align 4
  %v0_95a8 = load i32, i32* %r5.global-to-local, align 4
  %v5_95a8 = mul nuw nsw i32 %v3_95a0, 4
  %v6_95a8 = add i32 %v5_95a8, %v7_959c
  %v7_95a8 = inttoptr i32 %v6_95a8 to i32*
  store i32 %v0_95a8, i32* %v7_95a8, align 4
  %v0_95ac = load i32, i32* %r3.global-to-local, align 4
  %v1_95ac = load i32, i32* %r8.global-to-local, align 4
  %v2_95ac = add i32 %v1_95ac, %v0_95ac
  store i32 %v2_95ac, i32* %r2.global-to-local, align 4
  %v0_95b0 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_95b0, i32* %r1.global-to-local, align 4
  %v0_95b8 = load i32, i32* %ip.global-to-local, align 4
  %v1_95b8 = load i32, i32* %r6.global-to-local, align 4
  %v2_95b8 = inttoptr i32 %v1_95b8 to i32*
  store i32 %v0_95b8, i32* %v2_95b8, align 4
  %v0_95bc = load i32, i32* %r2.global-to-local, align 4
  %v1_95bc = trunc i32 %v0_95bc to i8
  %v2_95bc = load i32, i32* %r4.global-to-local, align 4
  %v3_95bc = inttoptr i32 %v2_95bc to i8*
  store i8 %v1_95bc, i8* %v3_95bc, align 1
  %v2_95c0 = call i32* @calloc(i32 %v1_95ac, i32 %v0_95b0)
  %v4_95c0 = ptrtoint i32* %v2_95c0 to i32
  %v2_95c4 = load i8, i8* bitcast (i8** @global_var_1bccc.82 to i8*), align 4
  %v3_95c4 = zext i8 %v2_95c4 to i32
  store i32 ptrtoint (i32* @global_var_aaac.105 to i32), i32* %r2.global-to-local, align 4
  store i32 %v4_95c0, i32* %r5.global-to-local, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  %v3_95d4 = mul nuw nsw i32 %v3_95c4, 4
  store i32 %v3_95d4, i32* %r1.global-to-local, align 4
  %v2_95d8 = load i32, i32* @global_var_1bcd0.84, align 4
  store i32 ptrtoint (i32* @global_var_aaac.105 to i32), i32* %v2_95c0, align 4
  %v0_95e0 = load i32, i32* %r3.global-to-local, align 4
  %v1_95e0 = trunc i32 %v0_95e0 to i8
  %v2_95e0 = load i32, i32* %r5.global-to-local, align 4
  %v3_95e0 = add i32 %v2_95e0, 4
  %v4_95e0 = inttoptr i32 %v3_95e0 to i8*
  store i8 %v1_95e0, i8* %v4_95e0, align 1
  %v0_95e4 = load i32, i32* %r1.global-to-local, align 4
  %v1_95e4 = add i32 %v0_95e4, 4
  store i32 %v1_95e4, i32* %r1.global-to-local, align 4
  %v4_95e8 = inttoptr i32 %v2_95d8 to i32*
  %v5_95e8 = call i32* @realloc(i32* %v4_95e8, i32 %v1_95e4)
  %v7_95e8 = ptrtoint i32* %v5_95e8 to i32
  %v2_95ec = load i8, i8* bitcast (i8** @global_var_1bccc.82 to i8*), align 4
  %v3_95ec = zext i8 %v2_95ec to i32
  store i32 %v3_95ec, i32* %r3.global-to-local, align 4
  store i32 %v7_95e8, i32* %ip.global-to-local, align 4
  %v0_95f4 = load i32, i32* %r5.global-to-local, align 4
  %v5_95f4 = mul nuw nsw i32 %v3_95ec, 4
  %v6_95f4 = add i32 %v5_95f4, %v7_95e8
  %v7_95f4 = inttoptr i32 %v6_95f4 to i32*
  store i32 %v0_95f4, i32* %v7_95f4, align 4
  %v0_95f8 = load i32, i32* %r3.global-to-local, align 4
  %v1_95f8 = load i32, i32* %r8.global-to-local, align 4
  %v2_95f8 = add i32 %v1_95f8, %v0_95f8
  store i32 %v2_95f8, i32* %r2.global-to-local, align 4
  %v0_95fc = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_95fc, i32* %r1.global-to-local, align 4
  %v0_9604 = load i32, i32* %ip.global-to-local, align 4
  %v1_9604 = load i32, i32* %r6.global-to-local, align 4
  %v2_9604 = inttoptr i32 %v1_9604 to i32*
  store i32 %v0_9604, i32* %v2_9604, align 4
  %v0_9608 = load i32, i32* %r2.global-to-local, align 4
  %v1_9608 = trunc i32 %v0_9608 to i8
  %v2_9608 = load i32, i32* %r4.global-to-local, align 4
  %v3_9608 = inttoptr i32 %v2_9608 to i8*
  store i8 %v1_9608, i8* %v3_9608, align 1
  %v2_960c = call i32* @calloc(i32 %v1_95f8, i32 %v0_95fc)
  %v4_960c = ptrtoint i32* %v2_960c to i32
  %v2_9610 = load i8, i8* bitcast (i8** @global_var_1bccc.82 to i8*), align 4
  %v3_9610 = zext i8 %v2_9610 to i32
  store i32 ptrtoint (i32* @global_var_a330.107 to i32), i32* %r2.global-to-local, align 4
  store i32 %v4_960c, i32* %r5.global-to-local, align 4
  store i32 7, i32* %r3.global-to-local, align 4
  %v3_9620 = mul nuw nsw i32 %v3_9610, 4
  store i32 %v3_9620, i32* %r1.global-to-local, align 4
  %v2_9624 = load i32, i32* @global_var_1bcd0.84, align 4
  store i32 ptrtoint (i32* @global_var_a330.107 to i32), i32* %v2_960c, align 4
  %v0_962c = load i32, i32* %r3.global-to-local, align 4
  %v1_962c = trunc i32 %v0_962c to i8
  %v2_962c = load i32, i32* %r5.global-to-local, align 4
  %v3_962c = add i32 %v2_962c, 4
  %v4_962c = inttoptr i32 %v3_962c to i8*
  store i8 %v1_962c, i8* %v4_962c, align 1
  %v0_9630 = load i32, i32* %r1.global-to-local, align 4
  %v1_9630 = add i32 %v0_9630, 4
  store i32 %v1_9630, i32* %r1.global-to-local, align 4
  %v4_9634 = inttoptr i32 %v2_9624 to i32*
  %v5_9634 = call i32* @realloc(i32* %v4_9634, i32 %v1_9630)
  %v7_9634 = ptrtoint i32* %v5_9634 to i32
  %v2_9638 = load i8, i8* bitcast (i8** @global_var_1bccc.82 to i8*), align 4
  %v3_9638 = zext i8 %v2_9638 to i32
  store i32 %v3_9638, i32* %r3.global-to-local, align 4
  store i32 %v7_9634, i32* %ip.global-to-local, align 4
  %v0_9640 = load i32, i32* %r5.global-to-local, align 4
  %v5_9640 = mul nuw nsw i32 %v3_9638, 4
  %v6_9640 = add i32 %v5_9640, %v7_9634
  %v7_9640 = inttoptr i32 %v6_9640 to i32*
  store i32 %v0_9640, i32* %v7_9640, align 4
  %v0_9644 = load i32, i32* %r3.global-to-local, align 4
  %v1_9644 = load i32, i32* %r8.global-to-local, align 4
  %v2_9644 = add i32 %v1_9644, %v0_9644
  store i32 %v2_9644, i32* %r2.global-to-local, align 4
  %v0_9648 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_9648, i32* %r1.global-to-local, align 4
  %v1_9650 = trunc i32 %v2_9644 to i8
  %v2_9650 = load i32, i32* %r4.global-to-local, align 4
  %v3_9650 = inttoptr i32 %v2_9650 to i8*
  store i8 %v1_9650, i8* %v3_9650, align 1
  %v0_9654 = load i32, i32* %ip.global-to-local, align 4
  %v1_9654 = load i32, i32* %r6.global-to-local, align 4
  %v2_9654 = inttoptr i32 %v1_9654 to i32*
  store i32 %v0_9654, i32* %v2_9654, align 4
  %v2_9658 = call i32* @calloc(i32 %v1_9644, i32 %v0_9648)
  %v4_9658 = ptrtoint i32* %v2_9658 to i32
  %v2_965c = load i8, i8* bitcast (i8** @global_var_1bccc.82 to i8*), align 4
  %v3_965c = zext i8 %v2_965c to i32
  store i32 39356, i32* %r2.global-to-local, align 4
  store i32 %v4_9658, i32* %r5.global-to-local, align 4
  store i32 9, i32* %r3.global-to-local, align 4
  %v3_966c = mul nuw nsw i32 %v3_965c, 4
  store i32 %v3_966c, i32* %r1.global-to-local, align 4
  %v2_9670 = load i32, i32* @global_var_1bcd0.84, align 4
  store i32 39356, i32* %v2_9658, align 4
  %v0_9678 = load i32, i32* %r3.global-to-local, align 4
  %v1_9678 = trunc i32 %v0_9678 to i8
  %v2_9678 = load i32, i32* %r5.global-to-local, align 4
  %v3_9678 = add i32 %v2_9678, 4
  %v4_9678 = inttoptr i32 %v3_9678 to i8*
  store i8 %v1_9678, i8* %v4_9678, align 1
  %v0_967c = load i32, i32* %r1.global-to-local, align 4
  %v1_967c = add i32 %v0_967c, 4
  store i32 %v1_967c, i32* %r1.global-to-local, align 4
  %v4_9680 = inttoptr i32 %v2_9670 to i32*
  %v5_9680 = call i32* @realloc(i32* %v4_9680, i32 %v1_967c)
  %v6_9680 = ptrtoint i32* %v5_9680 to i32
  %v2_9684 = load i8, i8* bitcast (i8** @global_var_1bccc.82 to i8*), align 4
  %v3_9684 = zext i8 %v2_9684 to i32
  store i32 %v3_9684, i32* %r3.global-to-local, align 4
  %v1_9688 = load i32, i32* %r6.global-to-local, align 4
  %v2_9688 = inttoptr i32 %v1_9688 to i32*
  store i32 %v6_9680, i32* %v2_9688, align 4
  %v0_968c = load i32, i32* %r5.global-to-local, align 4
  %v2_968c = load i32, i32* %r3.global-to-local, align 4
  %v5_968c = mul i32 %v2_968c, 4
  %v6_968c = add i32 %v5_968c, %v6_9680
  %v7_968c = inttoptr i32 %v6_968c to i32*
  store i32 %v0_968c, i32* %v7_968c, align 4
  %v0_9690 = load i32, i32* %r3.global-to-local, align 4
  %v1_9690 = load i32, i32* %r8.global-to-local, align 4
  %v2_9690 = add i32 %v1_9690, %v0_9690
  store i32 %v2_9690, i32* %r2.global-to-local, align 4
  %v1_9698 = trunc i32 %v2_9690 to i8
  %v2_9698 = load i32, i32* %r4.global-to-local, align 4
  %v3_9698 = inttoptr i32 %v2_9698 to i8*
  store i8 %v1_9698, i8* %v3_9698, align 1
  %v2_969c = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_969c, i32* @r4, align 4
  ret i32 %v1_9690

; uselistorder directives
  uselistorder i32 %v1_9690, { 1, 0 }
  uselistorder i32 %v1_9644, { 1, 0 }
  uselistorder i32 %v1_95f8, { 1, 0 }
  uselistorder i32 %v1_95ac, { 1, 0 }
  uselistorder i32 %v1_9560, { 1, 0 }
  uselistorder i32 %v1_9514, { 1, 0 }
  uselistorder i32 %v1_94c8, { 1, 0 }
  uselistorder i32 %v1_947c, { 1, 0 }
  uselistorder i32 %v3_9424, { 1, 0, 2 }
  uselistorder i32 %v1_93e4, { 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_1bccc.82 to i8*), { 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8** @global_var_1bccc.82, { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_1bccc.82 to i32), { 1, 0 }
}

define i32 @function_96d4(i32 %arg1, %sockaddr* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_96d4:
  %fp.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint %sockaddr* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-80 = alloca i8, align 1
  %v3_96d4 = load i32, i32* @r4, align 4
  %v6_96d4 = load i32, i32* @r5, align 4
  %v24_96d4 = load i32, i32* @fp, align 4
  %v1_96d8 = urem i32 %arg1, 256
  store i32 %v1_96d8, i32* @r7, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r6, align 4
  %v1_96f0 = urem i32 %arg3, 256
  store i32 %v1_96f0, i32* @r4, align 4
  %v2_96f4 = call i32* @calloc(i32 %v1_96d8, i32 4)
  %v4_96f4 = ptrtoint i32* %v2_96f4 to i32
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %v4_96f4, i32* @sl, align 4
  %v0_9700 = load i32, i32* @r7, align 4
  %v2_9704 = call i32* @calloc(i32 %v0_9700, i32 4)
  %v3_9704 = ptrtoint i32* %v2_9704 to i32
  store i32 65535, i32* @r5, align 4
  %v0_9710 = load i32, i32* @r6, align 4
  store i32 %v0_9710, i32* %r1.global-to-local, align 4
  store i32 %v3_9704, i32* @sb, align 4
  %v0_9720 = load i32, i32* @r4, align 4
  %v4_9724 = inttoptr i32 %v0_9710 to i32*
  %v5_9724 = call i32 @function_92dc(i32 %v0_9720, i32* %v4_9724, i32 7, i32 65535)
  %v3_972c = urem i32 %v5_9724, 65536
  %v0_9730 = load i32, i32* @r6, align 4
  store i32 %v0_9730, i32* %r1.global-to-local, align 4
  %v0_9738 = load i32, i32* @r5, align 4
  %v0_973c = load i32, i32* @r4, align 4
  %v5_9744 = inttoptr i32 %v0_9730 to i32*
  %v6_9744 = call i32 @function_92dc(i32 %v0_973c, i32* %v5_9744, i32 6, i32 %v0_9738)
  %v0_9748 = load i32, i32* @r6, align 4
  store i32 %v0_9748, i32* %r1.global-to-local, align 4
  %v3_974c = mul i32 %v6_9744, 65536
  store i32 %v3_974c, i32* %fp.global-to-local, align 4
  %v0_9758 = load i32, i32* @r4, align 4
  %v4_975c = inttoptr i32 %v0_9748 to i32*
  %v5_975c = call i32 @function_92dc(i32 %v0_9758, i32* %v4_975c, i32 0, i32 512)
  %v0_9768 = load i32, i32* @r6, align 4
  store i32 %v0_9768, i32* %r1.global-to-local, align 4
  %v0_976c = load i32, i32* @r4, align 4
  %v3_9774 = urem i32 %v5_975c, 65536
  store i32 %v3_9774, i32* @r6, align 4
  %v4_9778 = inttoptr i32 %v0_9768 to i32*
  %v5_9778 = call i32 @function_92dc(i32 %v0_976c, i32* %v4_9778, i32 1, i32 1)
  %v0_977c = load i32, i32* %fp.global-to-local, align 4
  %v3_977c = udiv i32 %v0_977c, 65536
  store i32 %v3_977c, i32* %r4.global-to-local, align 4
  %v1_9784 = load i32, i32* @r5, align 4
  %v9_9784 = icmp eq i32 %v3_977c, %v1_9784
  store i32 0, i32* %stack_var_-52, align 4
  br i1 %v9_9784, label %dec_label_pc_97ac, label %bb

bb:                                               ; preds = %dec_label_pc_96d4
  %v2_9798 = mul nuw nsw i32 %v3_977c, 256
  %v4_979c = and i32 %v2_9798, 65280
  %v1_97a0 = urem i32 %v5_9778, 256
  store i32 %v1_97a0, i32* @r8, align 4
  %v5_97a4 = udiv i32 %v0_977c, 16777216
  %v6_97a4 = or i32 %v4_979c, %v5_97a4
  br label %dec_label_pc_97b8

dec_label_pc_97ac:                                ; preds = %dec_label_pc_96d4
  %v1_97a08 = urem i32 %v5_9778, 256
  store i32 %v1_97a08, i32* @r8, align 4
  %v0_97ac = call i32 @function_f508()
  %v3_97b4 = urem i32 %v0_97ac, 65536
  br label %dec_label_pc_97b8

dec_label_pc_97b8:                                ; preds = %bb, %dec_label_pc_97ac
  %storemerge18 = phi i32 [ %v6_97a4, %bb ], [ %v3_97b4, %dec_label_pc_97ac ]
  store i32 %storemerge18, i32* %fp.global-to-local, align 4
  %v0_97b8 = load i32, i32* @r7, align 4
  %tmp43 = icmp slt i32 %v0_97b8, 1
  br i1 %tmp43, label %dec_label_pc_9964.preheader.thread, label %dec_label_pc_97c0

dec_label_pc_9964.preheader.thread:               ; preds = %dec_label_pc_97b8
  br label %dec_label_pc_992c

dec_label_pc_9964.preheader:                      ; preds = %dec_label_pc_98c0
  %tmp454850 = icmp slt i32 %v1_9814, 1
  br i1 %tmp454850, label %dec_label_pc_992c, label %dec_label_pc_9930.lr.ph

dec_label_pc_97c0:                                ; preds = %dec_label_pc_97b8
  store i32 %v3_972c, i32* %r1.global-to-local, align 4
  %v3_97c4 = udiv i32 %v5_9724, 256
  %v5_97d0 = trunc i32 %v3_97c4 to i8
  store i32 %tmp, i32* %r5.global-to-local, align 4
  %v3_97e8 = udiv i32 %v5_9724, 65536
  %v4_97f8 = trunc i32 %v3_97e8 to i8
  store i8 %v4_97f8, i8* %stack_var_-80, align 1
  %v3_990c = icmp eq i32 %v3_972c, 65535
  %v2_9830 = ptrtoint i32* %stack_var_-52 to i32
  %tmp44 = bitcast i32* %stack_var_-52 to %sockaddr*
  br label %dec_label_pc_98f0

dec_label_pc_9800:                                ; preds = %dec_label_pc_98f0
  %v2_9800 = load i8, i8* %stack_var_-80, align 1
  %v3_9800 = sext i8 %v2_9800 to i32
  store i32 %v3_9800, i32* %r1.global-to-local, align 4
  %v2_9804 = load i32, i32* %r5.global-to-local, align 4
  %v3_9804 = add i32 %v2_9804, 2
  %v4_9804 = inttoptr i32 %v3_9804 to i8*
  store i8 %v5_97d0, i8* %v4_9804, align 1
  %v0_9808 = load i32, i32* %r1.global-to-local, align 4
  %v1_9808 = trunc i32 %v0_9808 to i8
  %v2_9808 = load i32, i32* %r5.global-to-local, align 4
  %v3_9808 = add i32 %v2_9808, 3
  %v4_9808 = inttoptr i32 %v3_9808 to i8*
  store i8 %v1_9808, i8* %v4_9808, align 1
  br label %dec_label_pc_980c

dec_label_pc_980c:                                ; preds = %dec_label_pc_9918, %dec_label_pc_9800
  %v1_9814 = add i32 %stack_var_-56.0, 1
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_9824 = call i32 @socket(i32 2, i32 17, i32 17)
  %v7_982c = icmp eq i32 %v3_9824, -1
  store i32 %v2_9830, i32* %r1.global-to-local, align 4
  %v2_983c = load i32, i32* @sb, align 4
  %v3_983c = add i32 %v2_983c, %stack_var_-60.0
  %v4_983c = inttoptr i32 %v3_983c to i32*
  store i32 %v3_9824, i32* %v4_983c, align 4
  br i1 %v7_982c, label %dec_label_pc_9970, label %dec_label_pc_9844

dec_label_pc_9844:                                ; preds = %dec_label_pc_980c
  store i32 2, i32* %stack_var_-52, align 4
  %v5_9864 = call i32 @bind(i32 %v3_9824, %sockaddr* %tmp44, i32 16)
  %v0_9868 = load i32, i32* %r5.global-to-local, align 4
  %v1_9868 = add i32 %v0_9868, 20
  %v2_9868 = inttoptr i32 %v1_9868 to i8*
  %v3_9868 = load i8, i8* %v2_9868, align 1
  %tmp54 = icmp ugt i8 %v3_9868, 31
  br i1 %tmp54, label %dec_label_pc_98c0, label %dec_label_pc_9874

dec_label_pc_9874:                                ; preds = %dec_label_pc_9844
  %v1_9874 = add i32 %v0_9868, 16
  %v2_9874 = inttoptr i32 %v1_9874 to i32*
  %v3_9874 = load i32, i32* %v2_9874, align 4
  store i32 %v3_9874, i32* %r4.global-to-local, align 4
  %v0_9878 = call i32 @function_f508()
  %v1_9880 = and i32 %v3_9874, 65280
  %v3_9888 = mul i32 %v3_9874, 16777216
  %v4_988c = mul nuw nsw i32 %v1_9880, 256
  %v5_988c = or i32 %v4_988c, %v3_9888
  store i32 %v5_988c, i32* %r1.global-to-local, align 4
  %v0_9894 = load i32, i32* %r5.global-to-local, align 4
  %v1_9894 = add i32 %v0_9894, 20
  %v2_9894 = inttoptr i32 %v1_9894 to i8*
  %v3_9894 = load i8, i8* %v2_9894, align 1
  %v4_9894 = zext i8 %v3_9894 to i32
  %v2_9898 = call i32 @llvm.bswap.i32(i32 %v3_9874)
  %v7_989c = lshr i32 %v0_9878, %v4_9894
  %v8_989c = add i32 %v7_989c, %v2_9898
  %v3_98a8 = mul i32 %v8_989c, 16777216
  %v1_98ac = and i32 %v8_989c, 65280
  %v4_98b0 = mul nuw nsw i32 %v1_98ac, 256
  %v5_98b0 = or i32 %v4_98b0, %v3_98a8
  store i32 %v5_98b0, i32* %r1.global-to-local, align 4
  %v2_98b8 = call i32 @llvm.bswap.i32(i32 %v8_989c)
  %v2_98bc = add i32 %v0_9894, 4
  %v3_98bc = inttoptr i32 %v2_98bc to i32*
  store i32 %v2_98b8, i32* %v3_98bc, align 4
  %v0_98cc.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_98c0

dec_label_pc_98c0:                                ; preds = %dec_label_pc_9844, %dec_label_pc_9874
  %v0_98cc = phi i32 [ %v0_9868, %dec_label_pc_9844 ], [ %v0_98cc.pre, %dec_label_pc_9874 ]
  store i32 %stack_var_-60.0, i32* %r1.global-to-local, align 4
  %v1_98c8 = load i32, i32* @sb, align 4
  %v2_98c8 = add i32 %v1_98c8, %stack_var_-60.0
  %v3_98c8 = inttoptr i32 %v2_98c8 to i32*
  %v4_98c8 = load i32, i32* %v3_98c8, align 4
  %v1_98cc = inttoptr i32 %v0_98cc to %sockaddr*
  store i32 %v0_98cc, i32* %r1.global-to-local, align 4
  %v5_98d0 = call i32 @connect(i32 %v4_98c8, %sockaddr* %v1_98cc, i32 16)
  %v1_98dc = add i32 %stack_var_-60.0, 4
  %v1_98e0 = load i32, i32* @r7, align 4
  %v9_98e0 = icmp eq i32 %v1_9814, %v1_98e0
  %v0_98e8 = load i32, i32* %r5.global-to-local, align 4
  %v1_98e8 = add i32 %v0_98e8, 24
  store i32 %v1_98e8, i32* %r5.global-to-local, align 4
  br i1 %v9_98e0, label %dec_label_pc_9964.preheader, label %dec_label_pc_98f0

dec_label_pc_98f0:                                ; preds = %dec_label_pc_98c0, %dec_label_pc_97c0
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_97c0 ], [ %v1_98dc, %dec_label_pc_98c0 ]
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_97c0 ], [ %v1_9814, %dec_label_pc_98c0 ]
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_98fc = call i32* @calloc(i32 65535, i32 1)
  %v3_98fc = ptrtoint i32* %v2_98fc to i32
  store i32 %v3_972c, i32* %r1.global-to-local, align 4
  %v2_9910 = load i32, i32* @sl, align 4
  %v3_9910 = add i32 %v2_9910, %stack_var_-60.0
  %v4_9910 = inttoptr i32 %v3_9910 to i32*
  store i32 %v3_98fc, i32* %v4_9910, align 4
  br i1 %v3_990c, label %dec_label_pc_9918, label %dec_label_pc_9800

dec_label_pc_9918:                                ; preds = %dec_label_pc_98f0
  %v0_9918 = call i32 @function_f508()
  %v1_9918 = trunc i32 %v0_9918 to i8
  %v4_991c = sdiv i32 %v0_9918, 256
  %v1_9920 = trunc i32 %v4_991c to i8
  %v2_9920 = load i32, i32* %r5.global-to-local, align 4
  %v3_9920 = add i32 %v2_9920, 3
  %v4_9920 = inttoptr i32 %v3_9920 to i8*
  store i8 %v1_9920, i8* %v4_9920, align 1
  %v3_9924 = load i32, i32* %r5.global-to-local, align 4
  %v4_9924 = add i32 %v3_9924, 2
  %v5_9924 = inttoptr i32 %v4_9924 to i8*
  store i8 %v1_9918, i8* %v5_9924, align 1
  br label %dec_label_pc_980c

dec_label_pc_992c:                                ; preds = %dec_label_pc_9964.loopexit, %dec_label_pc_9964.preheader.thread, %dec_label_pc_9964.preheader, %dec_label_pc_9968.loopexit, %dec_label_pc_992c
  br label %dec_label_pc_992c

dec_label_pc_9930:                                ; preds = %dec_label_pc_9930.lr.ph, %dec_label_pc_9968.loopexit
  %v0_9930 = load i32, i32* @r8, align 4
  %v2_9930 = icmp eq i32 %v0_9930, 0
  store i32 0, i32* @r5, align 4
  br i1 %v2_9930, label %dec_label_pc_9938, label %dec_label_pc_9978

dec_label_pc_9938:                                ; preds = %dec_label_pc_9930
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_9940

dec_label_pc_9940:                                ; preds = %dec_label_pc_9940, %dec_label_pc_9938
  %v0_9948 = phi i32 [ %v1_9948, %dec_label_pc_9940 ], [ 0, %dec_label_pc_9938 ]
  %v0_9940 = phi i32 [ %v1_995c, %dec_label_pc_9940 ], [ 0, %dec_label_pc_9938 ]
  %v1_9940 = load i32, i32* @sb, align 4
  %v2_9940 = add i32 %v1_9940, %v0_9940
  %v3_9940 = inttoptr i32 %v2_9940 to i32*
  %v4_9940 = load i32, i32* %v3_9940, align 4
  %v1_9944 = load i32, i32* @sl, align 4
  %v2_9944 = add i32 %v1_9944, %v0_9940
  %v3_9944 = inttoptr i32 %v2_9944 to i32*
  %v4_9944 = load i32, i32* %v3_9944, align 4
  store i32 %v4_9944, i32* %r1.global-to-local, align 4
  %v1_9948 = add i32 %v0_9948, 1
  store i32 %v1_9948, i32* %r5.global-to-local, align 4
  %v0_994c = load i32, i32* @r6, align 4
  %v4_9954 = inttoptr i32 %v4_9944 to i32*
  %v5_9954 = call i32 @send(i32 %v4_9940, i32* %v4_9954, i32 %v0_994c, i32 16384)
  %v1_9958 = load i32, i32* @r7, align 4
  %v9_9958 = icmp eq i32 %v1_9948, %v1_9958
  %v0_995c = load i32, i32* %r4.global-to-local, align 4
  %v1_995c = add i32 %v0_995c, 4
  store i32 %v1_995c, i32* %r4.global-to-local, align 4
  br i1 %v9_9958, label %dec_label_pc_9964.loopexit, label %dec_label_pc_9940

dec_label_pc_9964.loopexit:                       ; preds = %dec_label_pc_9940
  %tmp4548 = icmp slt i32 %v1_9948, 1
  br i1 %tmp4548, label %dec_label_pc_992c, label %dec_label_pc_9930.lr.ph

dec_label_pc_9930.lr.ph:                          ; preds = %dec_label_pc_9964.preheader, %dec_label_pc_9964.loopexit
  br label %dec_label_pc_9930

dec_label_pc_9968.loopexit:                       ; preds = %dec_label_pc_9980
  %tmp45 = icmp slt i32 %v0_99a8, 1
  br i1 %tmp45, label %dec_label_pc_992c, label %dec_label_pc_9930

dec_label_pc_9970:                                ; preds = %dec_label_pc_980c
  store i32 %v3_96d4, i32* %r4.global-to-local, align 4
  store i32 %v6_96d4, i32* %r5.global-to-local, align 4
  store i32 %v24_96d4, i32* %fp.global-to-local, align 4
  ret i32 -1

dec_label_pc_9978:                                ; preds = %dec_label_pc_9930
  store i32 0, i32* @fp, align 4
  br label %dec_label_pc_9980

dec_label_pc_9980:                                ; preds = %dec_label_pc_9980, %dec_label_pc_9978
  %v0_9980 = phi i32 [ %v1_99ac, %dec_label_pc_9980 ], [ 0, %dec_label_pc_9978 ]
  %v1_9980 = load i32, i32* @sl, align 4
  %v2_9980 = add i32 %v1_9980, %v0_9980
  %v3_9980 = inttoptr i32 %v2_9980 to i32*
  %v4_9980 = load i32, i32* %v3_9980, align 4
  store i32 %v4_9980, i32* @r4, align 4
  %v0_9984 = load i32, i32* @r6, align 4
  store i32 %v0_9984, i32* @r1, align 4
  %v1_998c = inttoptr i32 %v4_9980 to i8*
  %v2_998c = call i32 @function_f688(i8* %v1_998c)
  %v0_9990 = load i32, i32* @r5, align 4
  %v1_9990 = add i32 %v0_9990, 1
  store i32 %v1_9990, i32* @r5, align 4
  %v0_9994 = load i32, i32* @fp, align 4
  %v1_9994 = load i32, i32* @sb, align 4
  %v2_9994 = add i32 %v1_9994, %v0_9994
  %v3_9994 = inttoptr i32 %v2_9994 to i32*
  %v4_9994 = load i32, i32* %v3_9994, align 4
  %v0_9998 = load i32, i32* @r4, align 4
  store i32 %v0_9998, i32* %r1.global-to-local, align 4
  %v0_999c = load i32, i32* @r6, align 4
  %v4_99a4 = inttoptr i32 %v0_9998 to i32*
  %v5_99a4 = call i32 @send(i32 %v4_9994, i32* %v4_99a4, i32 %v0_999c, i32 16384)
  %v0_99a8 = load i32, i32* @r5, align 4
  %v1_99a8 = load i32, i32* @r7, align 4
  %v9_99a8 = icmp eq i32 %v0_99a8, %v1_99a8
  %v0_99ac = load i32, i32* @fp, align 4
  %v1_99ac = add i32 %v0_99ac, 4
  store i32 %v1_99ac, i32* @fp, align 4
  br i1 %v9_99a8, label %dec_label_pc_9968.loopexit, label %dec_label_pc_9980

; uselistorder directives
  uselistorder i32 %v1_99ac, { 1, 0 }
  uselistorder i32 %v0_99a8, { 1, 0 }
  uselistorder i32 %v1_995c, { 1, 0 }
  uselistorder i32 %v1_9948, { 2, 0, 3, 1 }
  uselistorder i32 %stack_var_-60.0, { 0, 2, 4, 1, 3 }
  uselistorder i32 %v8_989c, { 1, 2, 0 }
  uselistorder i32 %v3_9874, { 1, 2, 0, 3 }
  uselistorder i32 %v3_9824, { 1, 2, 0 }
  uselistorder i32 %v1_9814, { 1, 2, 0 }
  uselistorder i32 %v3_977c, { 0, 2, 1 }
  uselistorder i32 %v3_972c, { 0, 2, 1 }
  uselistorder i32 %v1_96d8, { 1, 0 }
  uselistorder i8* %stack_var_-80, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 1, 0, 3, 2 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 4, 5, 2, 6, 3, 7, 8, 9, 10, 11 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 11, 12, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 16, 15, 17, 19, 18, 0 }
  uselistorder label %dec_label_pc_9930.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_9930, { 1, 0 }
  uselistorder label %dec_label_pc_992c, { 3, 0, 4, 2, 1 }
  uselistorder label %dec_label_pc_98c0, { 1, 0 }
  uselistorder label %dec_label_pc_97b8, { 1, 0 }
}

define i32 @function_99bc(i32 %arg1, %sockaddr* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_99bc:
  %fp.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint %sockaddr* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-80 = alloca i8, align 1
  %v3_99bc = load i32, i32* @r4, align 4
  %v6_99bc = load i32, i32* @r5, align 4
  %v24_99bc = load i32, i32* @fp, align 4
  %v1_99c0 = urem i32 %arg1, 256
  store i32 %v1_99c0, i32* @r7, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r6, align 4
  %v1_99d8 = urem i32 %arg3, 256
  store i32 %v1_99d8, i32* @r4, align 4
  %v2_99dc = call i32* @calloc(i32 %v1_99c0, i32 4)
  %v4_99dc = ptrtoint i32* %v2_99dc to i32
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %v4_99dc, i32* @sl, align 4
  %v0_99e8 = load i32, i32* @r7, align 4
  %v2_99ec = call i32* @calloc(i32 %v0_99e8, i32 4)
  %v3_99ec = ptrtoint i32* %v2_99ec to i32
  store i32 65535, i32* @r5, align 4
  %v0_99f8 = load i32, i32* @r6, align 4
  store i32 %v0_99f8, i32* %r1.global-to-local, align 4
  store i32 %v3_99ec, i32* @sb, align 4
  %v0_9a08 = load i32, i32* @r4, align 4
  %v4_9a0c = inttoptr i32 %v0_99f8 to i32*
  %v5_9a0c = call i32 @function_92dc(i32 %v0_9a08, i32* %v4_9a0c, i32 7, i32 65535)
  %v3_9a14 = urem i32 %v5_9a0c, 65536
  %v0_9a18 = load i32, i32* @r6, align 4
  store i32 %v0_9a18, i32* %r1.global-to-local, align 4
  %v0_9a20 = load i32, i32* @r5, align 4
  %v0_9a24 = load i32, i32* @r4, align 4
  %v5_9a2c = inttoptr i32 %v0_9a18 to i32*
  %v6_9a2c = call i32 @function_92dc(i32 %v0_9a24, i32* %v5_9a2c, i32 6, i32 %v0_9a20)
  %v0_9a30 = load i32, i32* @r6, align 4
  store i32 %v0_9a30, i32* %r1.global-to-local, align 4
  %v3_9a34 = mul i32 %v6_9a2c, 65536
  store i32 %v3_9a34, i32* %fp.global-to-local, align 4
  %v0_9a40 = load i32, i32* @r4, align 4
  %v4_9a44 = inttoptr i32 %v0_9a30 to i32*
  %v5_9a44 = call i32 @function_92dc(i32 %v0_9a40, i32* %v4_9a44, i32 0, i32 1024)
  %v0_9a50 = load i32, i32* @r6, align 4
  store i32 %v0_9a50, i32* %r1.global-to-local, align 4
  %v0_9a54 = load i32, i32* @r4, align 4
  %v3_9a5c = urem i32 %v5_9a44, 65536
  store i32 %v3_9a5c, i32* @r6, align 4
  %v4_9a60 = inttoptr i32 %v0_9a50 to i32*
  %v5_9a60 = call i32 @function_92dc(i32 %v0_9a54, i32* %v4_9a60, i32 1, i32 1)
  %v0_9a64 = load i32, i32* %fp.global-to-local, align 4
  %v3_9a64 = udiv i32 %v0_9a64, 65536
  store i32 %v3_9a64, i32* %r4.global-to-local, align 4
  %v1_9a6c = load i32, i32* @r5, align 4
  %v9_9a6c = icmp eq i32 %v3_9a64, %v1_9a6c
  store i32 0, i32* %stack_var_-52, align 4
  br i1 %v9_9a6c, label %dec_label_pc_9a94, label %bb

bb:                                               ; preds = %dec_label_pc_99bc
  %v2_9a80 = mul nuw nsw i32 %v3_9a64, 256
  %v4_9a84 = and i32 %v2_9a80, 65280
  %v1_9a88 = urem i32 %v5_9a60, 256
  store i32 %v1_9a88, i32* @r8, align 4
  %v5_9a8c = udiv i32 %v0_9a64, 16777216
  %v6_9a8c = or i32 %v4_9a84, %v5_9a8c
  br label %dec_label_pc_9aa0

dec_label_pc_9a94:                                ; preds = %dec_label_pc_99bc
  %v1_9a887 = urem i32 %v5_9a60, 256
  store i32 %v1_9a887, i32* @r8, align 4
  %v0_9a94 = call i32 @function_f508()
  %v3_9a9c = urem i32 %v0_9a94, 65536
  br label %dec_label_pc_9aa0

dec_label_pc_9aa0:                                ; preds = %bb, %dec_label_pc_9a94
  %storemerge17 = phi i32 [ %v6_9a8c, %bb ], [ %v3_9a9c, %dec_label_pc_9a94 ]
  store i32 %storemerge17, i32* %fp.global-to-local, align 4
  %v0_9aa0 = load i32, i32* @r7, align 4
  %tmp42 = icmp slt i32 %v0_9aa0, 1
  br i1 %tmp42, label %dec_label_pc_9c4c.preheader.thread, label %dec_label_pc_9aa8

dec_label_pc_9c4c.preheader.thread:               ; preds = %dec_label_pc_9aa0
  br label %dec_label_pc_9c14

dec_label_pc_9c4c.preheader:                      ; preds = %dec_label_pc_9ba8
  %tmp444749 = icmp slt i32 %v1_9afc, 1
  br i1 %tmp444749, label %dec_label_pc_9c14, label %dec_label_pc_9c18.lr.ph

dec_label_pc_9aa8:                                ; preds = %dec_label_pc_9aa0
  store i32 %v3_9a14, i32* %r1.global-to-local, align 4
  %v3_9aac = udiv i32 %v5_9a0c, 256
  %v5_9ab8 = trunc i32 %v3_9aac to i8
  store i32 %tmp, i32* %r5.global-to-local, align 4
  %v3_9ad0 = udiv i32 %v5_9a0c, 65536
  %v4_9ae0 = trunc i32 %v3_9ad0 to i8
  store i8 %v4_9ae0, i8* %stack_var_-80, align 1
  %v3_9bf4 = icmp eq i32 %v3_9a14, 65535
  %v2_9b18 = ptrtoint i32* %stack_var_-52 to i32
  %tmp43 = bitcast i32* %stack_var_-52 to %sockaddr*
  br label %dec_label_pc_9bd8

dec_label_pc_9ae8:                                ; preds = %dec_label_pc_9bd8
  %v2_9ae8 = load i8, i8* %stack_var_-80, align 1
  %v3_9ae8 = sext i8 %v2_9ae8 to i32
  store i32 %v3_9ae8, i32* %r1.global-to-local, align 4
  %v2_9aec = load i32, i32* %r5.global-to-local, align 4
  %v3_9aec = add i32 %v2_9aec, 2
  %v4_9aec = inttoptr i32 %v3_9aec to i8*
  store i8 %v5_9ab8, i8* %v4_9aec, align 1
  %v0_9af0 = load i32, i32* %r1.global-to-local, align 4
  %v1_9af0 = trunc i32 %v0_9af0 to i8
  %v2_9af0 = load i32, i32* %r5.global-to-local, align 4
  %v3_9af0 = add i32 %v2_9af0, 3
  %v4_9af0 = inttoptr i32 %v3_9af0 to i8*
  store i8 %v1_9af0, i8* %v4_9af0, align 1
  br label %dec_label_pc_9af4

dec_label_pc_9af4:                                ; preds = %dec_label_pc_9c00, %dec_label_pc_9ae8
  %v1_9afc = add i32 %stack_var_-56.0, 1
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_9b0c = call i32 @socket(i32 2, i32 0, i32 0)
  %v7_9b14 = icmp eq i32 %v3_9b0c, -1
  store i32 %v2_9b18, i32* %r1.global-to-local, align 4
  %v2_9b24 = load i32, i32* @sb, align 4
  %v3_9b24 = add i32 %v2_9b24, %stack_var_-60.0
  %v4_9b24 = inttoptr i32 %v3_9b24 to i32*
  store i32 %v3_9b0c, i32* %v4_9b24, align 4
  br i1 %v7_9b14, label %dec_label_pc_9c58, label %dec_label_pc_9b2c

dec_label_pc_9b2c:                                ; preds = %dec_label_pc_9af4
  store i32 2, i32* %stack_var_-52, align 4
  %v5_9b4c = call i32 @bind(i32 %v3_9b0c, %sockaddr* %tmp43, i32 16)
  %v0_9b50 = load i32, i32* %r5.global-to-local, align 4
  %v1_9b50 = add i32 %v0_9b50, 20
  %v2_9b50 = inttoptr i32 %v1_9b50 to i8*
  %v3_9b50 = load i8, i8* %v2_9b50, align 1
  %tmp53 = icmp ugt i8 %v3_9b50, 31
  br i1 %tmp53, label %dec_label_pc_9ba8, label %dec_label_pc_9b5c

dec_label_pc_9b5c:                                ; preds = %dec_label_pc_9b2c
  %v1_9b5c = add i32 %v0_9b50, 16
  %v2_9b5c = inttoptr i32 %v1_9b5c to i32*
  %v3_9b5c = load i32, i32* %v2_9b5c, align 4
  store i32 %v3_9b5c, i32* %r4.global-to-local, align 4
  %v0_9b60 = call i32 @function_f508()
  %v1_9b68 = and i32 %v3_9b5c, 65280
  %v3_9b70 = mul i32 %v3_9b5c, 16777216
  %v4_9b74 = mul nuw nsw i32 %v1_9b68, 256
  %v5_9b74 = or i32 %v4_9b74, %v3_9b70
  store i32 %v5_9b74, i32* %r1.global-to-local, align 4
  %v0_9b7c = load i32, i32* %r5.global-to-local, align 4
  %v1_9b7c = add i32 %v0_9b7c, 20
  %v2_9b7c = inttoptr i32 %v1_9b7c to i8*
  %v3_9b7c = load i8, i8* %v2_9b7c, align 1
  %v4_9b7c = zext i8 %v3_9b7c to i32
  %v2_9b80 = call i32 @llvm.bswap.i32(i32 %v3_9b5c)
  %v7_9b84 = lshr i32 %v0_9b60, %v4_9b7c
  %v8_9b84 = add i32 %v7_9b84, %v2_9b80
  %v3_9b90 = mul i32 %v8_9b84, 16777216
  %v1_9b94 = and i32 %v8_9b84, 65280
  %v4_9b98 = mul nuw nsw i32 %v1_9b94, 256
  %v5_9b98 = or i32 %v4_9b98, %v3_9b90
  store i32 %v5_9b98, i32* %r1.global-to-local, align 4
  %v2_9ba0 = call i32 @llvm.bswap.i32(i32 %v8_9b84)
  %v2_9ba4 = add i32 %v0_9b7c, 4
  %v3_9ba4 = inttoptr i32 %v2_9ba4 to i32*
  store i32 %v2_9ba0, i32* %v3_9ba4, align 4
  %v0_9bb4.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_9ba8

dec_label_pc_9ba8:                                ; preds = %dec_label_pc_9b2c, %dec_label_pc_9b5c
  %v0_9bb4 = phi i32 [ %v0_9b50, %dec_label_pc_9b2c ], [ %v0_9bb4.pre, %dec_label_pc_9b5c ]
  store i32 %stack_var_-60.0, i32* %r1.global-to-local, align 4
  %v1_9bb0 = load i32, i32* @sb, align 4
  %v2_9bb0 = add i32 %v1_9bb0, %stack_var_-60.0
  %v3_9bb0 = inttoptr i32 %v2_9bb0 to i32*
  %v4_9bb0 = load i32, i32* %v3_9bb0, align 4
  %v1_9bb4 = inttoptr i32 %v0_9bb4 to %sockaddr*
  store i32 %v0_9bb4, i32* %r1.global-to-local, align 4
  %v5_9bb8 = call i32 @connect(i32 %v4_9bb0, %sockaddr* %v1_9bb4, i32 16)
  %v1_9bc4 = add i32 %stack_var_-60.0, 4
  %v1_9bc8 = load i32, i32* @r7, align 4
  %v9_9bc8 = icmp eq i32 %v1_9afc, %v1_9bc8
  %v0_9bd0 = load i32, i32* %r5.global-to-local, align 4
  %v1_9bd0 = add i32 %v0_9bd0, 24
  store i32 %v1_9bd0, i32* %r5.global-to-local, align 4
  br i1 %v9_9bc8, label %dec_label_pc_9c4c.preheader, label %dec_label_pc_9bd8

dec_label_pc_9bd8:                                ; preds = %dec_label_pc_9ba8, %dec_label_pc_9aa8
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_9aa8 ], [ %v1_9bc4, %dec_label_pc_9ba8 ]
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_9aa8 ], [ %v1_9afc, %dec_label_pc_9ba8 ]
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_9be4 = call i32* @calloc(i32 65535, i32 1)
  %v3_9be4 = ptrtoint i32* %v2_9be4 to i32
  store i32 %v3_9a14, i32* %r1.global-to-local, align 4
  %v2_9bf8 = load i32, i32* @sl, align 4
  %v3_9bf8 = add i32 %v2_9bf8, %stack_var_-60.0
  %v4_9bf8 = inttoptr i32 %v3_9bf8 to i32*
  store i32 %v3_9be4, i32* %v4_9bf8, align 4
  br i1 %v3_9bf4, label %dec_label_pc_9c00, label %dec_label_pc_9ae8

dec_label_pc_9c00:                                ; preds = %dec_label_pc_9bd8
  %v0_9c00 = call i32 @function_f508()
  %v1_9c00 = trunc i32 %v0_9c00 to i8
  %v4_9c04 = sdiv i32 %v0_9c00, 256
  %v1_9c08 = trunc i32 %v4_9c04 to i8
  %v2_9c08 = load i32, i32* %r5.global-to-local, align 4
  %v3_9c08 = add i32 %v2_9c08, 3
  %v4_9c08 = inttoptr i32 %v3_9c08 to i8*
  store i8 %v1_9c08, i8* %v4_9c08, align 1
  %v3_9c0c = load i32, i32* %r5.global-to-local, align 4
  %v4_9c0c = add i32 %v3_9c0c, 2
  %v5_9c0c = inttoptr i32 %v4_9c0c to i8*
  store i8 %v1_9c00, i8* %v5_9c0c, align 1
  br label %dec_label_pc_9af4

dec_label_pc_9c14:                                ; preds = %dec_label_pc_9c4c.loopexit, %dec_label_pc_9c4c.preheader.thread, %dec_label_pc_9c4c.preheader, %dec_label_pc_9c50.loopexit, %dec_label_pc_9c14
  br label %dec_label_pc_9c14

dec_label_pc_9c18:                                ; preds = %dec_label_pc_9c18.lr.ph, %dec_label_pc_9c50.loopexit
  %v0_9c18 = load i32, i32* @r8, align 4
  %v2_9c18 = icmp eq i32 %v0_9c18, 0
  store i32 0, i32* @r5, align 4
  br i1 %v2_9c18, label %dec_label_pc_9c20, label %dec_label_pc_9c60

dec_label_pc_9c20:                                ; preds = %dec_label_pc_9c18
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_9c28

dec_label_pc_9c28:                                ; preds = %dec_label_pc_9c28, %dec_label_pc_9c20
  %v0_9c30 = phi i32 [ %v1_9c30, %dec_label_pc_9c28 ], [ 0, %dec_label_pc_9c20 ]
  %v0_9c28 = phi i32 [ %v1_9c44, %dec_label_pc_9c28 ], [ 0, %dec_label_pc_9c20 ]
  %v1_9c28 = load i32, i32* @sb, align 4
  %v2_9c28 = add i32 %v1_9c28, %v0_9c28
  %v3_9c28 = inttoptr i32 %v2_9c28 to i32*
  %v4_9c28 = load i32, i32* %v3_9c28, align 4
  %v1_9c2c = load i32, i32* @sl, align 4
  %v2_9c2c = add i32 %v1_9c2c, %v0_9c28
  %v3_9c2c = inttoptr i32 %v2_9c2c to i32*
  %v4_9c2c = load i32, i32* %v3_9c2c, align 4
  store i32 %v4_9c2c, i32* %r1.global-to-local, align 4
  %v1_9c30 = add i32 %v0_9c30, 1
  store i32 %v1_9c30, i32* %r5.global-to-local, align 4
  %v0_9c34 = load i32, i32* @r6, align 4
  %v4_9c3c = inttoptr i32 %v4_9c2c to i32*
  %v5_9c3c = call i32 @send(i32 %v4_9c28, i32* %v4_9c3c, i32 %v0_9c34, i32 16384)
  %v1_9c40 = load i32, i32* @r7, align 4
  %v9_9c40 = icmp eq i32 %v1_9c30, %v1_9c40
  %v0_9c44 = load i32, i32* %r4.global-to-local, align 4
  %v1_9c44 = add i32 %v0_9c44, 4
  store i32 %v1_9c44, i32* %r4.global-to-local, align 4
  br i1 %v9_9c40, label %dec_label_pc_9c4c.loopexit, label %dec_label_pc_9c28

dec_label_pc_9c4c.loopexit:                       ; preds = %dec_label_pc_9c28
  %tmp4447 = icmp slt i32 %v1_9c30, 1
  br i1 %tmp4447, label %dec_label_pc_9c14, label %dec_label_pc_9c18.lr.ph

dec_label_pc_9c18.lr.ph:                          ; preds = %dec_label_pc_9c4c.preheader, %dec_label_pc_9c4c.loopexit
  br label %dec_label_pc_9c18

dec_label_pc_9c50.loopexit:                       ; preds = %dec_label_pc_9c68
  %tmp44 = icmp slt i32 %v0_9c90, 1
  br i1 %tmp44, label %dec_label_pc_9c14, label %dec_label_pc_9c18

dec_label_pc_9c58:                                ; preds = %dec_label_pc_9af4
  store i32 %v3_99bc, i32* %r4.global-to-local, align 4
  store i32 %v6_99bc, i32* %r5.global-to-local, align 4
  store i32 %v24_99bc, i32* %fp.global-to-local, align 4
  ret i32 -1

dec_label_pc_9c60:                                ; preds = %dec_label_pc_9c18
  store i32 0, i32* @fp, align 4
  br label %dec_label_pc_9c68

dec_label_pc_9c68:                                ; preds = %dec_label_pc_9c68, %dec_label_pc_9c60
  %v0_9c68 = phi i32 [ %v1_9c94, %dec_label_pc_9c68 ], [ 0, %dec_label_pc_9c60 ]
  %v1_9c68 = load i32, i32* @sl, align 4
  %v2_9c68 = add i32 %v1_9c68, %v0_9c68
  %v3_9c68 = inttoptr i32 %v2_9c68 to i32*
  %v4_9c68 = load i32, i32* %v3_9c68, align 4
  store i32 %v4_9c68, i32* @r4, align 4
  %v0_9c6c = load i32, i32* @r6, align 4
  store i32 %v0_9c6c, i32* @r1, align 4
  %v1_9c74 = inttoptr i32 %v4_9c68 to i8*
  %v2_9c74 = call i32 @function_f688(i8* %v1_9c74)
  %v0_9c78 = load i32, i32* @r5, align 4
  %v1_9c78 = add i32 %v0_9c78, 1
  store i32 %v1_9c78, i32* @r5, align 4
  %v0_9c7c = load i32, i32* @fp, align 4
  %v1_9c7c = load i32, i32* @sb, align 4
  %v2_9c7c = add i32 %v1_9c7c, %v0_9c7c
  %v3_9c7c = inttoptr i32 %v2_9c7c to i32*
  %v4_9c7c = load i32, i32* %v3_9c7c, align 4
  %v0_9c80 = load i32, i32* @r4, align 4
  store i32 %v0_9c80, i32* %r1.global-to-local, align 4
  %v0_9c84 = load i32, i32* @r6, align 4
  %v4_9c8c = inttoptr i32 %v0_9c80 to i32*
  %v5_9c8c = call i32 @send(i32 %v4_9c7c, i32* %v4_9c8c, i32 %v0_9c84, i32 16384)
  %v0_9c90 = load i32, i32* @r5, align 4
  %v1_9c90 = load i32, i32* @r7, align 4
  %v9_9c90 = icmp eq i32 %v0_9c90, %v1_9c90
  %v0_9c94 = load i32, i32* @fp, align 4
  %v1_9c94 = add i32 %v0_9c94, 4
  store i32 %v1_9c94, i32* @fp, align 4
  br i1 %v9_9c90, label %dec_label_pc_9c50.loopexit, label %dec_label_pc_9c68

; uselistorder directives
  uselistorder i32 %v1_9c94, { 1, 0 }
  uselistorder i32 %v0_9c90, { 1, 0 }
  uselistorder i32 %v1_9c44, { 1, 0 }
  uselistorder i32 %v1_9c30, { 2, 0, 3, 1 }
  uselistorder i32 %stack_var_-60.0, { 0, 2, 4, 1, 3 }
  uselistorder i32 %v8_9b84, { 1, 2, 0 }
  uselistorder i32 %v3_9b5c, { 1, 2, 0, 3 }
  uselistorder i32 %v3_9b0c, { 2, 1, 0 }
  uselistorder i32 %v1_9afc, { 1, 2, 0 }
  uselistorder i32 %v3_9a64, { 0, 2, 1 }
  uselistorder i32 %v3_9a14, { 0, 2, 1 }
  uselistorder i32 %v1_99c0, { 1, 0 }
  uselistorder i8* %stack_var_-80, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 1, 0, 3, 2 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 3, 4, 2, 5, 10, 6, 7, 8, 9, 11 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 11, 12, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 16, 15, 17, 19, 18, 0 }
  uselistorder label %dec_label_pc_9c18.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_9c18, { 1, 0 }
  uselistorder label %dec_label_pc_9c14, { 3, 0, 4, 2, 1 }
  uselistorder label %dec_label_pc_9ba8, { 1, 0 }
  uselistorder label %dec_label_pc_9aa0, { 1, 0 }
}

define i32 @function_9ca4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9ca4:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_9ca4 = load i32, i32* @r4, align 4
  %v6_9ca4 = load i32, i32* @r5, align 4
  %v9_9ca4 = load i32, i32* @r6, align 4
  %v12_9ca4 = load i32, i32* @r7, align 4
  %v18_9ca4 = load i32, i32* @sb, align 4
  %v24_9ca4 = load i32, i32* @fp, align 4
  %v1_9ca8 = urem i32 %arg1, 256
  store i32 %v1_9ca8, i32* @sl, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 %v1_9ca8, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  %v1_9cc0 = urem i32 %arg3, 256
  store i32 %v1_9cc0, i32* @r4, align 4
  %v2_9cc4 = call i32* @calloc(i32 %v1_9ca8, i32 4)
  %v4_9cc4 = ptrtoint i32* %v2_9cc4 to i32
  %v0_9cc8 = load i32, i32* @r5, align 4
  store i32 %v0_9cc8, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_9cd8 = load i32, i32* @r4, align 4
  store i32 %v0_9cd8, i32* %r0.global-to-local, align 4
  %v5_9cdc = inttoptr i32 %v0_9cc8 to i32*
  %v6_9cdc = call i32 @function_92dc(i32 %v0_9cd8, i32* %v5_9cdc, i32 2, i32 0)
  %v1_9ce8 = urem i32 %v6_9cdc, 256
  store i32 %v1_9ce8, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_9cf4 = load i32, i32* @r5, align 4
  store i32 %v0_9cf4, i32* %r1.global-to-local, align 4
  %v0_9cf8 = load i32, i32* @r4, align 4
  store i32 %v0_9cf8, i32* %r0.global-to-local, align 4
  %v5_9cfc = trunc i32 %v6_9cdc to i8
  %v6_9d00 = inttoptr i32 %v0_9cf4 to i32*
  %v7_9d00 = call i32 @function_92dc(i32 %v0_9cf8, i32* %v6_9d00, i32 3, i32 65535)
  %v0_9d04 = load i32, i32* @r5, align 4
  store i32 %v0_9d04, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_9d00, i32* %fp.global-to-local, align 4
  %v0_9d14 = load i32, i32* @r4, align 4
  store i32 %v0_9d14, i32* %r0.global-to-local, align 4
  %v4_9d18 = inttoptr i32 %v0_9d04 to i32*
  %v5_9d18 = call i32 @function_92dc(i32 %v0_9d14, i32* %v4_9d18, i32 4, i32 64)
  %v1_9d20 = urem i32 %v5_9d18, 256
  store i32 %v1_9d20, i32* %ip.global-to-local, align 4
  %v0_9d24 = load i32, i32* @r5, align 4
  store i32 %v0_9d24, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_9d30 = load i32, i32* @r4, align 4
  store i32 %v0_9d30, i32* %r0.global-to-local, align 4
  %v5_9d34 = trunc i32 %v5_9d18 to i8
  %v6_9d38 = inttoptr i32 %v0_9d24 to i32*
  %v7_9d38 = call i32 @function_92dc(i32 %v0_9d30, i32* %v6_9d38, i32 5, i32 0)
  %v1_9d44 = urem i32 %v7_9d38, 256
  store i32 %v1_9d44, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_9d50 = load i32, i32* @r5, align 4
  store i32 %v0_9d50, i32* %r1.global-to-local, align 4
  %v0_9d54 = load i32, i32* @r4, align 4
  store i32 %v0_9d54, i32* %r0.global-to-local, align 4
  %v5_9d5c = inttoptr i32 %v0_9d50 to i32*
  %v6_9d5c = call i32 @function_92dc(i32 %v0_9d54, i32* %v5_9d5c, i32 6, i32 65535)
  %v0_9d64 = load i32, i32* @r5, align 4
  store i32 %v0_9d64, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_9d5c, i32* @r7, align 4
  %v0_9d74 = load i32, i32* @r4, align 4
  store i32 %v0_9d74, i32* %r0.global-to-local, align 4
  %v4_9d78 = inttoptr i32 %v0_9d64 to i32*
  %v5_9d78 = call i32 @function_92dc(i32 %v0_9d74, i32* %v4_9d78, i32 7, i32 65535)
  %v0_9d7c = load i32, i32* @r5, align 4
  store i32 %v0_9d7c, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v5_9d78, i32* %sb.global-to-local, align 4
  %v0_9d8c = load i32, i32* @r4, align 4
  store i32 %v0_9d8c, i32* %r0.global-to-local, align 4
  %v4_9d90 = inttoptr i32 %v0_9d7c to i32*
  %v5_9d90 = call i32 @function_92dc(i32 %v0_9d8c, i32* %v4_9d90, i32 0, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_9d9c = load i32, i32* @r5, align 4
  store i32 %v0_9d9c, i32* %r1.global-to-local, align 4
  store i32 %v5_9d90, i32* @r6, align 4
  %v0_9da4 = load i32, i32* @r4, align 4
  store i32 %v0_9da4, i32* %r0.global-to-local, align 4
  %v4_9da8 = inttoptr i32 %v0_9d9c to i32*
  %v5_9da8 = call i32 @function_92dc(i32 %v0_9da4, i32* %v4_9da8, i32 1, i32 1)
  %v2_9db4 = load i32, i32* @global_var_1bd28.110, align 4
  store i32 %v2_9db4, i32* %r3.global-to-local, align 4
  %v1_9db8 = urem i32 %v5_9da8, 256
  store i32 %v1_9db8, i32* %ip.global-to-local, align 4
  %v0_9dbc = load i32, i32* @r5, align 4
  store i32 %v0_9dbc, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_9dc4 = load i32, i32* @r4, align 4
  store i32 %v0_9dc4, i32* %r0.global-to-local, align 4
  %v5_9dcc = inttoptr i32 %v0_9dbc to i32*
  %v6_9dcc = call i32 @function_92dc(i32 %v0_9dc4, i32* %v5_9dcc, i32 25, i32 %v2_9db4)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_9de0 = call i32 @socket(i32 2, i32 3, i32 17)
  store i32 %v3_9de0, i32* %r0.global-to-local, align 4
  %v2_9de4 = icmp eq i32 %v3_9de0, -1
  store i1 %v2_9de4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9de4, label %dec_label_pc_a20c, label %dec_label_pc_9df0

dec_label_pc_9df0:                                ; preds = %dec_label_pc_9ca4
  store i32 1, i32* %stack_var_-40, align 4
  %v6_9df8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_9df8, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v7_9e0c = call i32 @setsockopt(i32 %v3_9de0, i32 0, i32 3, i32* nonnull %stack_var_-40, i32 4)
  store i32 %v7_9e0c, i32* %r0.global-to-local, align 4
  %v2_9e10 = icmp eq i32 %v7_9e0c, -1
  store i1 %v2_9e10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9e10, label %dec_label_pc_a204, label %dec_label_pc_9e18

dec_label_pc_9e18:                                ; preds = %dec_label_pc_9df0
  %v0_9e18 = load i32, i32* @r6, align 4
  store i32 1460, i32* %r3.global-to-local, align 4
  %v3_9e24 = urem i32 %v0_9e18, 65536
  store i32 %v3_9e24, i32* %r2.global-to-local, align 4
  %v3_9e28 = icmp ugt i32 %v3_9e24, 1459
  %v9_9e28 = icmp eq i32 %v3_9e24, 1460
  store i1 %v9_9e28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_9e28, label %bb, label %bb71

bb:                                               ; preds = %dec_label_pc_9e18
  store i32 1460, i32* %r2.global-to-local, align 4
  br label %bb71

bb71:                                             ; preds = %dec_label_pc_9e18, %bb
  %v0_9e30 = phi i32 [ %v3_9e24, %dec_label_pc_9e18 ], [ 1460, %bb ]
  %v0_9e34 = load i32, i32* @r7, align 4
  %v3_9e34 = mul i32 %v0_9e34, 65536
  store i32 %v3_9e34, i32* %r7.global-to-local, align 4
  %v3_9e38 = urem i32 %v0_9e34, 65536
  store i32 %v3_9e38, i32* %r3.global-to-local, align 4
  %v0_9e3c = load i32, i32* @sl, align 4
  %v2_9e3c = icmp eq i32 %v0_9e3c, 0
  store i1 %v2_9e3c, i1* %cpsr_z.global-to-local, align 1
  %v0_9e40 = load i32, i32* %fp.global-to-local, align 4
  %v3_9e40 = mul i32 %v0_9e40, 65536
  store i32 %v3_9e40, i32* %r0.global-to-local, align 4
  %v0_9e44 = load i32, i32* %sb.global-to-local, align 4
  %v3_9e44 = mul i32 %v0_9e44, 65536
  store i32 %v3_9e44, i32* %r5.global-to-local, align 4
  %tmp72 = icmp slt i32 %v0_9e3c, 1
  br i1 %tmp72, label %bb73, label %bb74

bb73:                                             ; preds = %bb71
  store i32 %v0_9e30, i32* %r3.global-to-local, align 4
  br label %bb74

bb74:                                             ; preds = %bb71, %bb73
  %v5_9e6c = phi i32 [ %v3_9e38, %bb71 ], [ %v0_9e30, %bb73 ]
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_9e54 = urem i32 %v0_9e40, 65536
  store i32 %v3_9e54, i32* %r2.global-to-local, align 4
  %v3_9e58 = urem i32 %v0_9e44, 65536
  store i32 %v3_9e58, i32* %ip.global-to-local, align 4
  store i32 0, i32* %stack_var_-40, align 4
  br i1 %tmp72, label %.thread, label %dec_label_pc_9e74

.thread:                                          ; preds = %bb74
  %v6_9e68 = add nsw i32 %v5_9e6c, 28
  store i32 %v6_9e68, i32* @fp, align 4
  %v6_9e6c = add nsw i32 %v5_9e6c, 8
  store i32 %v6_9e6c, i32* @sb, align 4
  br label %dec_label_pc_9fe8

dec_label_pc_9e74:                                ; preds = %bb74
  %v1_9e78 = add nuw nsw i32 %v0_9e30, 28
  store i32 %v1_9e78, i32* @fp, align 4
  %tmp75 = mul nuw nsw i32 %v1_9e78, 256
  %v1_9e84 = and i32 %tmp75, 65280
  %tmp76 = udiv i32 %v0_9e40, 256
  %v3_9e88 = urem i32 %tmp76, 256
  %v2_9e9c = icmp eq i32 %v1_9d44, 0
  store i1 %v2_9e9c, i1* %cpsr_z.global-to-local, align 1
  %v1_9ea0 = urem i32 %v0_9e40, 256
  %v1_9ea8 = add nuw nsw i32 %v0_9e30, 8
  store i32 %v1_9ea8, i32* @sb, align 4
  %v3_9eac = mul i32 %v1_9ea8, 65536
  store i32 %v3_9eac, i32* %r6.global-to-local, align 4
  %v1_9eb0 = urem i32 %v0_9e34, 256
  %v1_9eb4 = urem i32 %v0_9e44, 256
  store i32 %v1_9eb4, i32* %ip.global-to-local, align 4
  store i32 %v1_9e84, i32* %r3.global-to-local, align 4
  %tmp77 = mul nuw nsw i32 %v1_9ea8, 256
  %v4_9ec0 = mul nuw nsw i32 %v1_9ea0, 256
  %v5_9ec0 = or i32 %v4_9ec0, %v3_9e88
  store i32 %v5_9ec0, i32* %r0.global-to-local, align 4
  %v3_9ec4 = mul nuw nsw i32 %v1_9eb0, 256
  store i32 %v3_9ec4, i32* %r2.global-to-local, align 4
  %tmp78 = udiv i32 %v0_9e44, 256
  %v3_9ec8 = urem i32 %tmp78, 256
  %v1_9ecc = and i32 %tmp77, 65280
  store i32 %v1_9ecc, i32* %r1.global-to-local, align 4
  %tmp79 = udiv i32 %v1_9e78, 256
  %tmp80 = udiv i32 %v0_9e34, 256
  %v4_9ed4 = urem i32 %tmp80, 256
  %v5_9ed4 = or i32 %v4_9ed4, %v3_9ec4
  store i32 %v5_9ed4, i32* %r4.global-to-local, align 4
  %v5_9ed8 = trunc i32 %tmp79 to i8
  %v5_9edc = trunc i32 %tmp76 to i8
  %v4_9ee0 = mul nuw nsw i32 %v1_9eb4, 256
  %v5_9ee0 = or i32 %v4_9ee0, %v3_9ec8
  store i32 %v5_9ee0, i32* %r5.global-to-local, align 4
  %tmp81 = udiv i32 %v1_9ea8, 256
  %v4_9ee4 = urem i32 %tmp81, 256
  %v5_9ee4 = or i32 %v4_9ee4, %v1_9ecc
  store i32 %v5_9ee4, i32* %r7.global-to-local, align 4
  br i1 %v2_9e9c, label %dec_label_pc_9eec, label %dec_label_pc_a214

dec_label_pc_9eec:                                ; preds = %dec_label_pc_9e74
  %v3_9eec36 = udiv i32 %v1_9e84, 256
  store i32 %v3_9eec36, i32* %ip.global-to-local, align 4
  store i32 %v1_9ea0, i32* %r0.global-to-local, align 4
  store i32 %v1_9eb0, i32* %r1.global-to-local, align 4
  store i32 %v1_9eb4, i32* %r2.global-to-local, align 4
  %v3_9efc37 = udiv i32 %v1_9ecc, 256
  store i32 %v3_9efc37, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v4_9f60 = sext i8 %v5_9cfc to i32
  %v4_9fa0 = sext i8 %v5_9edc to i32
  %sext15 = mul i32 %v0_9e40, 16777216
  %v4_9fa4 = sdiv i32 %sext15, 16777216
  %sext16 = mul i32 %v0_9e34, 16777216
  %v4_9fbc = sdiv i32 %sext16, 16777216
  %sext17 = mul i32 %v1_9ea8, 16777216
  %v4_9fc0 = sdiv i32 %sext17, 16777216
  %sext18 = mul i32 %v0_9e44, 16777216
  %v4_9fc4 = sdiv i32 %sext18, 16777216
  %v1_9fac = trunc i32 %v1_9e78 to i8
  %v1_9fcc = trunc i32 %v4_9fc0 to i8
  br label %dec_label_pc_9f18

dec_label_pc_9f18:                                ; preds = %dec_label_pc_9f18, %dec_label_pc_9eec
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_9f24 = call i32* @calloc(i32 1510, i32 1)
  %v4_9f24 = ptrtoint i32* %v2_9f24 to i32
  store i32 %v4_9f24, i32* %r0.global-to-local, align 4
  store i32 %v4_9cc4, i32* %ip.global-to-local, align 4
  %v3_9f2c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_9f2c, i32* %r2.global-to-local, align 4
  %v2_9f30 = load i32, i32* %r6.global-to-local, align 4
  %v5_9f30 = mul i32 %v2_9f30, 4
  %v6_9f30 = add i32 %v5_9f30, %v4_9cc4
  %v7_9f30 = inttoptr i32 %v6_9f30 to i32*
  store i32 %v4_9f24, i32* %v7_9f30, align 4
  %v0_9f34 = load i32, i32* %ip.global-to-local, align 4
  %v1_9f34 = load i32, i32* %r2.global-to-local, align 4
  %v4_9f34 = mul i32 %v1_9f34, 4
  %v5_9f34 = add i32 %v4_9f34, %v0_9f34
  %v6_9f34 = inttoptr i32 %v5_9f34 to i32*
  %v7_9f34 = load i32, i32* %v6_9f34, align 4
  store i32 %v7_9f34, i32* %r1.global-to-local, align 4
  %v1_9f38 = inttoptr i32 %v7_9f34 to i8*
  %v2_9f38 = load i8, i8* %v1_9f38, align 1
  %tmp = urem i8 %v2_9f38, 16
  %v1_9f3c = zext i8 %tmp to i32
  %v1_9f40 = or i32 %v1_9f3c, 64
  store i32 %v1_9f40, i32* %r3.global-to-local, align 4
  %v1_9f44 = trunc i32 %v1_9f40 to i8
  store i8 %v1_9f44, i8* %v1_9f38, align 1
  %v0_9f48 = load i32, i32* %r1.global-to-local, align 4
  %v1_9f48 = inttoptr i32 %v0_9f48 to i8*
  %v2_9f48 = load i8, i8* %v1_9f48, align 1
  %v3_9f48 = zext i8 %v2_9f48 to i32
  %v1_9f4c = and i32 %v3_9f48, 240
  %v1_9f50 = or i32 %v1_9f4c, 5
  store i32 %v1_9f50, i32* %r2.global-to-local, align 4
  %v3_9f58 = add i32 %v0_9f48, 9
  %v4_9f58 = inttoptr i32 %v3_9f58 to i8*
  store i8 17, i8* %v4_9f58, align 1
  %v0_9f5c = load i32, i32* %r2.global-to-local, align 4
  %v1_9f5c = trunc i32 %v0_9f5c to i8
  %v2_9f5c = load i32, i32* %r1.global-to-local, align 4
  %v3_9f5c = inttoptr i32 %v2_9f5c to i8*
  store i8 %v1_9f5c, i8* %v3_9f5c, align 1
  store i32 %v4_9f60, i32* %r0.global-to-local, align 4
  %v2_9f64 = load i32, i32* %r1.global-to-local, align 4
  %v3_9f64 = add i32 %v2_9f64, 1
  %v4_9f64 = inttoptr i32 %v3_9f64 to i8*
  store i8 %v5_9cfc, i8* %v4_9f64, align 1
  %v2_9f6c = load i32, i32* %r1.global-to-local, align 4
  %v3_9f6c = add i32 %v2_9f6c, 8
  %v4_9f6c = inttoptr i32 %v3_9f6c to i8*
  store i8 %v5_9d34, i8* %v4_9f6c, align 1
  %v3_9f70 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_9f70, i32* %r2.global-to-local, align 4
  store i32 %v6_9dcc, i32* %ip.global-to-local, align 4
  %v3_9f78 = mul i32 %v3_9f70, 32
  store i32 %v3_9f78, i32* %r3.global-to-local, align 4
  %v1_9f7c = load i32, i32* %r1.global-to-local, align 4
  %v2_9f7c = add i32 %v1_9f7c, 12
  %v3_9f7c = inttoptr i32 %v2_9f7c to i32*
  store i32 %v6_9dcc, i32* %v3_9f7c, align 4
  %v0_9f80 = load i32, i32* %r3.global-to-local, align 4
  %v1_9f80 = load i32, i32* %r2.global-to-local, align 4
  %tmp83 = mul i32 %v1_9f80, -8
  %v5_9f80 = add i32 %v0_9f80, %tmp83
  %v1_9f84 = load i32, i32* @r8, align 4
  %v2_9f84 = add i32 %v5_9f80, %v1_9f84
  store i32 %v2_9f84, i32* %r3.global-to-local, align 4
  %v1_9f88 = add i32 %v2_9f84, 16
  %v2_9f88 = inttoptr i32 %v1_9f88 to i32*
  %v3_9f88 = load i32, i32* %v2_9f88, align 4
  %v1_9f8c = load i32, i32* %r1.global-to-local, align 4
  %v2_9f8c = add i32 %v1_9f8c, 16
  %v3_9f8c = inttoptr i32 %v2_9f8c to i32*
  store i32 %v3_9f88, i32* %v3_9f8c, align 4
  %v0_9f94 = load i32, i32* %r2.global-to-local, align 4
  %v1_9f94 = add i32 %v0_9f94, 1
  store i32 %v1_9f94, i32* %r6.global-to-local, align 4
  %v2_9f98 = load i32, i32* %r1.global-to-local, align 4
  %v3_9f98 = add i32 %v2_9f98, 2
  %v4_9f98 = inttoptr i32 %v3_9f98 to i8*
  store i8 %v5_9ed8, i8* %v4_9f98, align 1
  store i32 %v4_9fa0, i32* %ip.global-to-local, align 4
  store i32 %v4_9fa4, i32* %r0.global-to-local, align 4
  %v0_9fa8 = load i32, i32* %r1.global-to-local, align 4
  %v1_9fa8 = add i32 %v0_9fa8, 20
  store i32 %v1_9fa8, i32* %r3.global-to-local, align 4
  %v3_9fac = add i32 %v0_9fa8, 3
  %v4_9fac = inttoptr i32 %v3_9fac to i8*
  store i8 %v1_9fac, i8* %v4_9fac, align 1
  %v0_9fb0 = load i32, i32* %ip.global-to-local, align 4
  %v1_9fb0 = trunc i32 %v0_9fb0 to i8
  %v2_9fb0 = load i32, i32* %r1.global-to-local, align 4
  %v3_9fb0 = add i32 %v2_9fb0, 4
  %v4_9fb0 = inttoptr i32 %v3_9fb0 to i8*
  store i8 %v1_9fb0, i8* %v4_9fb0, align 1
  %v0_9fb4 = load i32, i32* %r0.global-to-local, align 4
  %v1_9fb4 = trunc i32 %v0_9fb4 to i8
  %v2_9fb4 = load i32, i32* %r1.global-to-local, align 4
  %v3_9fb4 = add i32 %v2_9fb4, 5
  %v4_9fb4 = inttoptr i32 %v3_9fb4 to i8*
  store i8 %v1_9fb4, i8* %v4_9fb4, align 1
  %v0_9fb8 = load i32, i32* %r4.global-to-local, align 4
  %v1_9fb8 = trunc i32 %v0_9fb8 to i8
  %v2_9fb8 = load i32, i32* %r1.global-to-local, align 4
  %v3_9fb8 = add i32 %v2_9fb8, 20
  %v4_9fb8 = inttoptr i32 %v3_9fb8 to i8*
  store i8 %v1_9fb8, i8* %v4_9fb8, align 1
  store i32 %v4_9fbc, i32* %r2.global-to-local, align 4
  store i32 %v4_9fc0, i32* %r1.global-to-local, align 4
  store i32 %v4_9fc4, i32* %ip.global-to-local, align 4
  %v0_9fc8 = load i32, i32* %r6.global-to-local, align 4
  %v1_9fc8 = load i32, i32* @sl, align 4
  %v9_9fc8 = icmp eq i32 %v0_9fc8, %v1_9fc8
  store i1 %v9_9fc8, i1* %cpsr_z.global-to-local, align 1
  %v2_9fcc = load i32, i32* %r3.global-to-local, align 4
  %v3_9fcc = add i32 %v2_9fcc, 5
  %v4_9fcc = inttoptr i32 %v3_9fcc to i8*
  store i8 %v1_9fcc, i8* %v4_9fcc, align 1
  %v0_9fd0 = load i32, i32* %r2.global-to-local, align 4
  %v1_9fd0 = trunc i32 %v0_9fd0 to i8
  %v2_9fd0 = load i32, i32* %r3.global-to-local, align 4
  %v3_9fd0 = add i32 %v2_9fd0, 1
  %v4_9fd0 = inttoptr i32 %v3_9fd0 to i8*
  store i8 %v1_9fd0, i8* %v4_9fd0, align 1
  %v0_9fd4 = load i32, i32* %r5.global-to-local, align 4
  %v1_9fd4 = trunc i32 %v0_9fd4 to i8
  %v2_9fd4 = load i32, i32* %r3.global-to-local, align 4
  %v3_9fd4 = add i32 %v2_9fd4, 2
  %v4_9fd4 = inttoptr i32 %v3_9fd4 to i8*
  store i8 %v1_9fd4, i8* %v4_9fd4, align 1
  %v0_9fd8 = load i32, i32* %ip.global-to-local, align 4
  %v1_9fd8 = trunc i32 %v0_9fd8 to i8
  %v2_9fd8 = load i32, i32* %r3.global-to-local, align 4
  %v3_9fd8 = add i32 %v2_9fd8, 3
  %v4_9fd8 = inttoptr i32 %v3_9fd8 to i8*
  store i8 %v1_9fd8, i8* %v4_9fd8, align 1
  %v0_9fdc = load i32, i32* %r7.global-to-local, align 4
  %v1_9fdc = trunc i32 %v0_9fdc to i8
  %v2_9fdc = load i32, i32* %r3.global-to-local, align 4
  %v3_9fdc = add i32 %v2_9fdc, 4
  %v4_9fdc = inttoptr i32 %v3_9fdc to i8*
  store i8 %v1_9fdc, i8* %v4_9fdc, align 1
  %v0_9fe0 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_9fe0, i32* %stack_var_-40, align 4
  %v5_9fe4 = icmp slt i32 %v0_9fc8, %v1_9fc8
  br i1 %v5_9fe4, label %dec_label_pc_9f18, label %dec_label_pc_9fe8

dec_label_pc_9fe8:                                ; preds = %dec_label_pc_a248, %dec_label_pc_9f18, %.thread
  %v0_9fe8 = load i32, i32* @sl, align 4
  %v2_9fe8 = icmp eq i32 %v0_9fe8, 0
  store i1 %v2_9fe8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_a194 = icmp eq i32 %v3_9e54, 65535
  %v2_a060 = icmp eq i32 %v1_9db8, 0
  %v2_a028 = icmp eq i32 %v6_9dcc, -1
  br label %dec_label_pc_9ff0.outer

dec_label_pc_9ff0.outer:                          ; preds = %dec_label_pc_a110, %dec_label_pc_9fe8
  %v1_9ff0.ph.in = phi i32 [ %v1_a104, %dec_label_pc_a110 ], [ %v0_9fe8, %dec_label_pc_9fe8 ]
  %v0_9ff0.ph = phi i1 [ %v2_a110, %dec_label_pc_a110 ], [ %v2_9fe8, %dec_label_pc_9fe8 ]
  %v1_9ff0.ph = icmp slt i32 %v1_9ff0.ph.in, 0
  %v4_9ff0 = or i1 %v1_9ff0.ph, %v0_9ff0.ph
  br label %dec_label_pc_9ff0

dec_label_pc_9ff0:                                ; preds = %dec_label_pc_9ff0.outer, %dec_label_pc_9ff0
  br i1 %v4_9ff0, label %dec_label_pc_9ff0, label %dec_label_pc_9ff4

dec_label_pc_9ff4:                                ; preds = %dec_label_pc_9ff0
  store i32 0, i32* %stack_var_-40, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_a000

dec_label_pc_a000:                                ; preds = %dec_label_pc_a068, %dec_label_pc_9ff4
  %v1_a014 = phi i32 [ %v1_a100, %dec_label_pc_a068 ], [ 0, %dec_label_pc_9ff4 ]
  %v5_a004 = mul i32 %v1_a014, 24
  %v1_a008 = load i32, i32* @r8, align 4
  %v2_a008 = add i32 %v1_a008, %v5_a004
  store i32 %v2_a008, i32* %r3.global-to-local, align 4
  store i32 %v4_9cc4, i32* %ip.global-to-local, align 4
  %v1_a010 = add i32 %v2_a008, 20
  %v2_a010 = inttoptr i32 %v1_a010 to i8*
  %v3_a010 = load i8, i8* %v2_a010, align 1
  %v4_a010 = zext i8 %v3_a010 to i32
  store i32 %v4_a010, i32* %r2.global-to-local, align 4
  %v4_a014 = mul i32 %v1_a014, 4
  %v5_a014 = add i32 %v4_a014, %v4_9cc4
  %v6_a014 = inttoptr i32 %v5_a014 to i32*
  %v7_a014 = load i32, i32* %v6_a014, align 4
  store i32 %v7_a014, i32* @r5, align 4
  %v7_a018 = icmp eq i8 %v3_a010, 31
  store i1 %v7_a018, i1* %cpsr_z.global-to-local, align 1
  %v1_a01c = add i32 %v7_a014, 20
  store i32 %v1_a01c, i32* @r6, align 4
  %tmp84 = icmp ult i8 %v3_a010, 32
  br i1 %tmp84, label %dec_label_pc_a11c, label %dec_label_pc_a024

dec_label_pc_a024:                                ; preds = %dec_label_pc_a000
  store i32 %v6_9dcc, i32* %r0.global-to-local, align 4
  store i1 %v2_a028, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a028, label %dec_label_pc_a184, label %dec_label_pc_a030

dec_label_pc_a030:                                ; preds = %dec_label_pc_a11c, %dec_label_pc_a024
  store i32 %v3_9e54, i32* %r1.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_a194, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_a194, label %dec_label_pc_a1a0, label %dec_label_pc_a044

dec_label_pc_a044:                                ; preds = %dec_label_pc_a184.dec_label_pc_a044_crit_edge, %dec_label_pc_a030
  %v1_a048 = phi i32 [ %v1_a048.pre, %dec_label_pc_a184.dec_label_pc_a044_crit_edge ], [ 65535, %dec_label_pc_a030 ]
  store i32 %v3_9e38, i32* %r2.global-to-local, align 4
  %v9_a048 = icmp eq i32 %v3_9e38, %v1_a048
  store i1 %v9_a048, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a048, label %dec_label_pc_a1bc, label %dec_label_pc_a050

dec_label_pc_a050:                                ; preds = %dec_label_pc_a1a0.dec_label_pc_a050_crit_edge, %dec_label_pc_a044
  %v1_a054 = phi i32 [ %v1_a054.pre, %dec_label_pc_a1a0.dec_label_pc_a050_crit_edge ], [ %v1_a048, %dec_label_pc_a044 ]
  store i32 %v3_9e58, i32* %r3.global-to-local, align 4
  %v9_a054 = icmp eq i32 %v3_9e58, %v1_a054
  store i1 %v9_a054, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a054, label %dec_label_pc_a1d8, label %dec_label_pc_a05c

dec_label_pc_a05c:                                ; preds = %dec_label_pc_a1bc, %dec_label_pc_a050
  store i32 %v1_9db8, i32* %ip.global-to-local, align 4
  store i1 %v2_a060, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a060, label %dec_label_pc_a068, label %dec_label_pc_a1f4

dec_label_pc_a068:                                ; preds = %dec_label_pc_a05c, %dec_label_pc_a1d8, %dec_label_pc_a1f4
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_a06c = load i32, i32* @r7, align 4
  %v1_a06c = trunc i32 %v0_a06c to i8
  %v2_a06c = load i32, i32* @r5, align 4
  %v3_a06c = add i32 %v2_a06c, 10
  %v4_a06c = inttoptr i32 %v3_a06c to i8*
  store i8 %v1_a06c, i8* %v4_a06c, align 1
  %v0_a070 = load i32, i32* @r7, align 4
  %v1_a070 = trunc i32 %v0_a070 to i8
  %v2_a070 = load i32, i32* @r5, align 4
  %v3_a070 = add i32 %v2_a070, 11
  %v4_a070 = inttoptr i32 %v3_a070 to i8*
  store i8 %v1_a070, i8* %v4_a070, align 1
  %v0_a074 = load i32, i32* @r5, align 4
  store i32 %v0_a074, i32* @r0, align 4
  %v2_a078 = call i32 @function_ddf4(i32 %v0_a074, i32 20)
  %v3_a078 = trunc i32 %v2_a078 to i8
  store i32 %v2_a078, i32* %r0.global-to-local, align 4
  %v4_a07c = sdiv i32 %v2_a078, 256
  store i32 %v4_a07c, i32* %r3.global-to-local, align 4
  %v1_a080 = trunc i32 %v4_a07c to i8
  %v2_a080 = load i32, i32* @r5, align 4
  %v3_a080 = add i32 %v2_a080, 11
  %v4_a080 = inttoptr i32 %v3_a080 to i8*
  store i8 %v1_a080, i8* %v4_a080, align 1
  %v3_a084 = load i32, i32* @r5, align 4
  %v4_a084 = add i32 %v3_a084, 10
  %v5_a084 = inttoptr i32 %v4_a084 to i8*
  store i8 %v3_a078, i8* %v5_a084, align 1
  %v0_a088 = load i32, i32* @r7, align 4
  %v1_a088 = trunc i32 %v0_a088 to i8
  %v2_a088 = load i32, i32* @r6, align 4
  %v3_a088 = add i32 %v2_a088, 6
  %v4_a088 = inttoptr i32 %v3_a088 to i8*
  store i8 %v1_a088, i8* %v4_a088, align 1
  %v0_a08c = load i32, i32* @r7, align 4
  %v1_a08c = trunc i32 %v0_a08c to i8
  %v2_a08c = load i32, i32* @r6, align 4
  %v3_a08c = add i32 %v2_a08c, 7
  %v4_a08c = inttoptr i32 %v3_a08c to i8*
  store i8 %v1_a08c, i8* %v4_a08c, align 1
  %v0_a090 = load i32, i32* @r5, align 4
  %v1_a090 = add i32 %v0_a090, 24
  %v2_a090 = inttoptr i32 %v1_a090 to i8*
  %v3_a090 = load i8, i8* %v2_a090, align 1
  %v4_a090 = zext i8 %v3_a090 to i32
  store i32 %v4_a090, i32* %r3.global-to-local, align 4
  %v1_a094 = add i32 %v0_a090, 25
  %v2_a094 = inttoptr i32 %v1_a094 to i8*
  %v3_a094 = load i8, i8* %v2_a094, align 1
  %v4_a094 = zext i8 %v3_a094 to i32
  %v0_a098 = load i32, i32* @r6, align 4
  store i32 %v0_a098, i32* @r1, align 4
  %v4_a09c = mul nuw nsw i32 %v4_a094, 256
  %v5_a09c = or i32 %v4_a09c, %v4_a090
  store i32 %v5_a09c, i32* %r2.global-to-local, align 4
  store i32 %v0_a090, i32* %r0.global-to-local, align 4
  %v0_a0a4 = load i32, i32* @sb, align 4
  store i32 %v0_a0a4, i32* %r3.global-to-local, align 4
  %v4_a0a8 = call i32 @function_de50(i32 %v0_a090, i32 %v0_a098, i32 %v5_a09c, i32 %v0_a0a4)
  %v5_a0a8 = trunc i32 %v4_a0a8 to i8
  store i32 %v4_a0a8, i32* %r0.global-to-local, align 4
  %v4_a0ac38 = udiv i32 %v4_a0a8, 256
  %v1_a0b0 = trunc i32 %v4_a0ac38 to i8
  %v2_a0b0 = load i32, i32* @r6, align 4
  %v3_a0b0 = add i32 %v2_a0b0, 7
  %v4_a0b0 = inttoptr i32 %v3_a0b0 to i8*
  store i8 %v1_a0b0, i8* %v4_a0b0, align 1
  %v3_a0b4 = load i32, i32* @r6, align 4
  %v4_a0b4 = add i32 %v3_a0b4, 6
  %v5_a0b4 = inttoptr i32 %v4_a0b4 to i8*
  store i8 %v5_a0a8, i8* %v5_a0b4, align 1
  %v3_a0b8 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_a0b8, i32* %r3.global-to-local, align 4
  %v0_a0bc = load i32, i32* @r5, align 4
  %v1_a0bc = add i32 %v0_a0bc, 20
  %v2_a0bc = inttoptr i32 %v1_a0bc to i32*
  %v3_a0bc = load i32, i32* %v2_a0bc, align 4
  %v3_a0c4 = udiv i32 %v3_a0bc, 65536
  store i32 %v3_a0c4, i32* %r2.global-to-local, align 4
  %v5_a0c8 = mul i32 %v3_a0b8, 24
  %v1_a0cc = load i32, i32* @r8, align 4
  %v2_a0cc = add i32 %v1_a0cc, %v5_a0c8
  store i32 %v2_a0cc, i32* %ip.global-to-local, align 4
  %v3_a0d035 = udiv i32 %v3_a0bc, 16777216
  %v1_a0d4 = trunc i32 %v3_a0d035 to i8
  %v3_a0d4 = add i32 %v2_a0cc, 3
  %v4_a0d4 = inttoptr i32 %v3_a0d4 to i8*
  store i8 %v1_a0d4, i8* %v4_a0d4, align 1
  %v0_a0d8 = load i32, i32* %r2.global-to-local, align 4
  %v1_a0d8 = trunc i32 %v0_a0d8 to i8
  %v2_a0d8 = load i32, i32* %ip.global-to-local, align 4
  %v3_a0d8 = add i32 %v2_a0d8, 2
  %v4_a0d8 = inttoptr i32 %v3_a0d8 to i8*
  store i8 %v1_a0d8, i8* %v4_a0d8, align 1
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_a0e0 = load i32, i32* @r5, align 4
  store i32 %v0_a0e0, i32* %r1.global-to-local, align 4
  store i32 %v3_9de0, i32* %r0.global-to-local, align 4
  %v0_a0e8 = load i32, i32* @fp, align 4
  store i32 %v0_a0e8, i32* %r2.global-to-local, align 4
  store i32 16, i32* %r4.global-to-local, align 4
  %v0_a0f0 = load i32, i32* %ip.global-to-local, align 4
  %v4_a0f0 = inttoptr i32 %v0_a0f0 to %sockaddr*
  %v7_a0f8 = inttoptr i32 %v0_a0e0 to i32*
  %v9_a0f8 = call i32 @sendto(i32 %v3_9de0, i32* %v7_a0f8, i32 %v0_a0e8, i32 16384, %sockaddr* %v4_a0f0, i32 16)
  %v3_a0fc = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_a0fc, i32* %r3.global-to-local, align 4
  %v1_a100 = add i32 %v3_a0fc, 1
  store i32 %v1_a100, i32* %r0.global-to-local, align 4
  %v1_a104 = load i32, i32* @sl, align 4
  %v9_a104 = icmp eq i32 %v1_a100, %v1_a104
  store i1 %v9_a104, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a100, i32* %stack_var_-40, align 4
  %v5_a10c = icmp slt i32 %v1_a100, %v1_a104
  br i1 %v5_a10c, label %dec_label_pc_a000, label %dec_label_pc_a110

dec_label_pc_a110:                                ; preds = %dec_label_pc_a068
  %v2_a110 = icmp eq i32 %v1_a104, 0
  store i1 %v2_a110, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_9ff0.outer

dec_label_pc_a11c:                                ; preds = %dec_label_pc_a000
  %v1_a11c = add i32 %v2_a008, 16
  %v2_a11c = inttoptr i32 %v1_a11c to i32*
  %v3_a11c = load i32, i32* %v2_a11c, align 4
  store i32 %v3_a11c, i32* %r4.global-to-local, align 4
  %v0_a120 = call i32 @function_f508()
  store i32 %v0_a120, i32* %r0.global-to-local, align 4
  %v3_a124 = load i32, i32* %stack_var_-40, align 4
  %v5_a12c = mul i32 %v3_a124, 24
  %v1_a134 = load i32, i32* @r8, align 4
  %v2_a134 = add i32 %v1_a134, %v5_a12c
  store i32 %v2_a134, i32* %r1.global-to-local, align 4
  %v1_a138 = and i32 %v3_a11c, 65280
  store i32 %v1_a138, i32* %r3.global-to-local, align 4
  %v1_a130 = udiv i32 %v3_a11c, 256
  %v3_a13c = and i32 %v1_a130, 65280
  store i32 %v3_a13c, i32* %r2.global-to-local, align 4
  %v3_a140 = mul i32 %v3_a11c, 16777216
  store i32 %v3_a140, i32* %ip.global-to-local, align 4
  %v1_a144 = add i32 %v2_a134, 20
  %v2_a144 = inttoptr i32 %v1_a144 to i8*
  %v3_a144 = load i8, i8* %v2_a144, align 1
  %v4_a144 = zext i8 %v3_a144 to i32
  %v4_a148 = mul nuw nsw i32 %v1_a138, 256
  %v5_a148 = or i32 %v4_a148, %v3_a140
  store i32 %v5_a148, i32* %ip.global-to-local, align 4
  %v2_a150 = call i32 @llvm.bswap.i32(i32 %v3_a11c)
  %v7_a154 = lshr i32 %v0_a120, %v4_a144
  %v8_a154 = add i32 %v7_a154, %v2_a150
  store i32 %v8_a154, i32* %r2.global-to-local, align 4
  %v3_a160 = mul i32 %v8_a154, 16777216
  %v1_a158 = mul i32 %v8_a154, 256
  %v4_a164 = and i32 %v1_a158, 16711680
  %v5_a164 = or i32 %v4_a164, %v3_a160
  store i32 %v5_a164, i32* %r1.global-to-local, align 4
  store i32 %v6_9dcc, i32* %r0.global-to-local, align 4
  %v2_a174 = call i32 @llvm.bswap.i32(i32 %v8_a154)
  store i32 %v2_a174, i32* %r3.global-to-local, align 4
  store i1 %v2_a028, i1* %cpsr_z.global-to-local, align 1
  %v1_a17c = load i32, i32* @r5, align 4
  %v2_a17c = add i32 %v1_a17c, 16
  %v3_a17c = inttoptr i32 %v2_a17c to i32*
  store i32 %v2_a174, i32* %v3_a17c, align 4
  br i1 %v2_a028, label %dec_label_pc_a184, label %dec_label_pc_a030

dec_label_pc_a184:                                ; preds = %dec_label_pc_a11c, %dec_label_pc_a024
  %v0_a184 = call i32 @function_f508()
  store i32 %v0_a184, i32* %r0.global-to-local, align 4
  store i32 %v3_9e54, i32* %r1.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_a194, i1* %cpsr_z.global-to-local, align 1
  %v1_a198 = load i32, i32* @r5, align 4
  %v2_a198 = add i32 %v1_a198, 12
  %v3_a198 = inttoptr i32 %v2_a198 to i32*
  store i32 %v0_a184, i32* %v3_a198, align 4
  br i1 %v3_a194, label %dec_label_pc_a1a0, label %dec_label_pc_a184.dec_label_pc_a044_crit_edge

dec_label_pc_a184.dec_label_pc_a044_crit_edge:    ; preds = %dec_label_pc_a184
  %v1_a048.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_a044

dec_label_pc_a1a0:                                ; preds = %dec_label_pc_a184, %dec_label_pc_a030
  %v0_a1a0 = call i32 @function_f508()
  %v1_a1a0 = trunc i32 %v0_a1a0 to i8
  store i32 %v0_a1a0, i32* %r0.global-to-local, align 4
  store i32 %v3_9e38, i32* %r2.global-to-local, align 4
  %v4_a1a8 = sdiv i32 %v0_a1a0, 256
  store i32 %v4_a1a8, i32* %r3.global-to-local, align 4
  %v1_a1ac = load i32, i32* @r4, align 4
  %v9_a1ac = icmp eq i32 %v3_9e38, %v1_a1ac
  store i1 %v9_a1ac, i1* %cpsr_z.global-to-local, align 1
  %v1_a1b0 = trunc i32 %v4_a1a8 to i8
  %v2_a1b0 = load i32, i32* @r5, align 4
  %v3_a1b0 = add i32 %v2_a1b0, 5
  %v4_a1b0 = inttoptr i32 %v3_a1b0 to i8*
  store i8 %v1_a1b0, i8* %v4_a1b0, align 1
  %v3_a1b4 = load i32, i32* @r5, align 4
  %v4_a1b4 = add i32 %v3_a1b4, 4
  %v5_a1b4 = inttoptr i32 %v4_a1b4 to i8*
  store i8 %v1_a1a0, i8* %v5_a1b4, align 1
  %v0_a1b8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a1b8, label %dec_label_pc_a1bc, label %dec_label_pc_a1a0.dec_label_pc_a050_crit_edge

dec_label_pc_a1a0.dec_label_pc_a050_crit_edge:    ; preds = %dec_label_pc_a1a0
  %v1_a054.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_a050

dec_label_pc_a1bc:                                ; preds = %dec_label_pc_a1a0, %dec_label_pc_a044
  %v0_a1bc = call i32 @function_f508()
  %v1_a1bc = trunc i32 %v0_a1bc to i8
  store i32 %v0_a1bc, i32* %r0.global-to-local, align 4
  %v4_a1c0 = sdiv i32 %v0_a1bc, 256
  store i32 %v4_a1c0, i32* %r3.global-to-local, align 4
  %v3_a1c4 = load i32, i32* @r5, align 4
  %v4_a1c4 = add i32 %v3_a1c4, 20
  %v5_a1c4 = inttoptr i32 %v4_a1c4 to i8*
  store i8 %v1_a1bc, i8* %v5_a1c4, align 1
  %v0_a1c8 = load i32, i32* %r3.global-to-local, align 4
  %v1_a1c8 = trunc i32 %v0_a1c8 to i8
  %v2_a1c8 = load i32, i32* @r6, align 4
  %v3_a1c8 = add i32 %v2_a1c8, 1
  %v4_a1c8 = inttoptr i32 %v3_a1c8 to i8*
  store i8 %v1_a1c8, i8* %v4_a1c8, align 1
  store i32 %v3_9e58, i32* %r3.global-to-local, align 4
  %v1_a1d0 = load i32, i32* @r4, align 4
  %v9_a1d0 = icmp eq i32 %v3_9e58, %v1_a1d0
  store i1 %v9_a1d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a1d0, label %dec_label_pc_a1d8, label %dec_label_pc_a05c

dec_label_pc_a1d8:                                ; preds = %dec_label_pc_a1bc, %dec_label_pc_a050
  %v0_a1d8 = call i32 @function_f508()
  %v1_a1d8 = trunc i32 %v0_a1d8 to i8
  store i32 %v0_a1d8, i32* %r0.global-to-local, align 4
  store i32 %v1_9db8, i32* %ip.global-to-local, align 4
  %v4_a1e0 = sdiv i32 %v0_a1d8, 256
  store i32 %v4_a1e0, i32* %r3.global-to-local, align 4
  store i1 %v2_a060, i1* %cpsr_z.global-to-local, align 1
  %v1_a1e8 = trunc i32 %v4_a1e0 to i8
  %v2_a1e8 = load i32, i32* @r6, align 4
  %v3_a1e8 = add i32 %v2_a1e8, 3
  %v4_a1e8 = inttoptr i32 %v3_a1e8 to i8*
  store i8 %v1_a1e8, i8* %v4_a1e8, align 1
  %v3_a1ec = load i32, i32* @r6, align 4
  %v4_a1ec = add i32 %v3_a1ec, 2
  %v5_a1ec = inttoptr i32 %v4_a1ec to i8*
  store i8 %v1_a1d8, i8* %v5_a1ec, align 1
  %v0_a1f0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a1f0, label %dec_label_pc_a068, label %dec_label_pc_a1f4

dec_label_pc_a1f4:                                ; preds = %dec_label_pc_a05c, %dec_label_pc_a1d8
  %v0_a1f4 = load i32, i32* @r5, align 4
  %v1_a1f4 = add i32 %v0_a1f4, 28
  store i32 %v1_a1f4, i32* %r0.global-to-local, align 4
  store i32 %v0_9e30, i32* @r1, align 4
  %v1_a1fc = inttoptr i32 %v1_a1f4 to i8*
  %v2_a1fc = call i32 @function_f688(i8* %v1_a1fc)
  store i32 %v2_a1fc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a068

dec_label_pc_a204:                                ; preds = %dec_label_pc_9df0
  store i32 %v3_9de0, i32* %r0.global-to-local, align 4
  %v1_a208 = call i32 @close(i32 %v3_9de0)
  store i32 %v1_a208, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a20c

dec_label_pc_a20c:                                ; preds = %dec_label_pc_9ca4, %dec_label_pc_a204
  %v29_a210 = phi i32 [ -1, %dec_label_pc_9ca4 ], [ %v1_a208, %dec_label_pc_a204 ]
  store i32 %v3_9ca4, i32* %r4.global-to-local, align 4
  store i32 %v6_9ca4, i32* %r5.global-to-local, align 4
  store i32 %v9_9ca4, i32* %r6.global-to-local, align 4
  store i32 %v12_9ca4, i32* %r7.global-to-local, align 4
  store i32 %v18_9ca4, i32* %sb.global-to-local, align 4
  store i32 %v24_9ca4, i32* %fp.global-to-local, align 4
  ret i32 %v29_a210

dec_label_pc_a214:                                ; preds = %dec_label_pc_9e74
  %v3_a218 = sext i8 %v5_9ed8 to i32
  %v7_a218 = sext i8 %v5_9edc to i32
  %v3_a21c = sdiv i32 %v3_a218, 256
  store i32 %v3_a21c, i32* %r0.global-to-local, align 4
  %v3_a220 = sdiv i32 %v7_a218, 256
  store i32 %v3_a220, i32* %r1.global-to-local, align 4
  store i32 %v1_9eb0, i32* %r2.global-to-local, align 4
  store i32 %v1_9eb4, i32* %r3.global-to-local, align 4
  %v3_a22c34 = udiv i32 %v1_9ecc, 256
  store i32 %v3_a22c34, i32* %ip.global-to-local, align 4
  %v5_a240 = trunc i32 %v3_a22c34 to i8
  store i32 0, i32* %r6.global-to-local, align 4
  %v4_a298 = sext i8 %v5_9d34 to i32
  %sext12 = mul i32 %v0_9e34, 16777216
  %v4_a300 = sdiv i32 %sext12, 16777216
  %sext13 = mul i32 %v0_9e44, 16777216
  %v4_a310 = sdiv i32 %sext13, 16777216
  %v1_a318 = trunc i32 %v4_a310 to i8
  br label %dec_label_pc_a248

dec_label_pc_a248:                                ; preds = %dec_label_pc_a248, %dec_label_pc_a214
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_a254 = call i32* @calloc(i32 1510, i32 1)
  %v4_a254 = ptrtoint i32* %v2_a254 to i32
  store i32 %v4_a254, i32* %r0.global-to-local, align 4
  store i32 %v4_9cc4, i32* %r1.global-to-local, align 4
  %v3_a25c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_a25c, i32* %r2.global-to-local, align 4
  %v2_a260 = load i32, i32* %r6.global-to-local, align 4
  %v5_a260 = mul i32 %v2_a260, 4
  %v6_a260 = add i32 %v5_a260, %v4_9cc4
  %v7_a260 = inttoptr i32 %v6_a260 to i32*
  store i32 %v4_a254, i32* %v7_a260, align 4
  %v0_a264 = load i32, i32* %r1.global-to-local, align 4
  %v1_a264 = load i32, i32* %r2.global-to-local, align 4
  %v4_a264 = mul i32 %v1_a264, 4
  %v5_a264 = add i32 %v4_a264, %v0_a264
  %v6_a264 = inttoptr i32 %v5_a264 to i32*
  %v7_a264 = load i32, i32* %v6_a264, align 4
  store i32 %v7_a264, i32* %r1.global-to-local, align 4
  %v1_a268 = inttoptr i32 %v7_a264 to i8*
  %v2_a268 = load i8, i8* %v1_a268, align 1
  %tmp85 = urem i8 %v2_a268, 16
  %v1_a26c = zext i8 %tmp85 to i32
  %v1_a270 = or i32 %v1_a26c, 64
  store i32 %v1_a270, i32* %r3.global-to-local, align 4
  %v1_a274 = trunc i32 %v1_a270 to i8
  store i8 %v1_a274, i8* %v1_a268, align 1
  %v0_a278 = load i32, i32* %r1.global-to-local, align 4
  %v1_a278 = inttoptr i32 %v0_a278 to i8*
  %v2_a278 = load i8, i8* %v1_a278, align 1
  %v3_a278 = zext i8 %v2_a278 to i32
  %v1_a27c = and i32 %v3_a278, 240
  %v1_a280 = or i32 %v1_a27c, 5
  store i32 %v1_a280, i32* %r2.global-to-local, align 4
  %v3_a288 = add i32 %v0_a278, 9
  %v4_a288 = inttoptr i32 %v3_a288 to i8*
  store i8 17, i8* %v4_a288, align 1
  %v0_a28c = load i32, i32* %r2.global-to-local, align 4
  %v1_a28c = trunc i32 %v0_a28c to i8
  %v2_a28c = load i32, i32* %r1.global-to-local, align 4
  %v3_a28c = inttoptr i32 %v2_a28c to i8*
  store i8 %v1_a28c, i8* %v3_a28c, align 1
  %v2_a294 = load i32, i32* %r1.global-to-local, align 4
  %v3_a294 = add i32 %v2_a294, 1
  %v4_a294 = inttoptr i32 %v3_a294 to i8*
  store i8 %v5_9cfc, i8* %v4_a294, align 1
  store i32 %v4_a298, i32* %r0.global-to-local, align 4
  %v2_a29c = load i32, i32* %r1.global-to-local, align 4
  %v3_a29c = add i32 %v2_a29c, 8
  %v4_a29c = inttoptr i32 %v3_a29c to i8*
  store i8 %v5_9d34, i8* %v4_a29c, align 1
  %v3_a2a0 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_a2a0, i32* %r2.global-to-local, align 4
  store i32 %v6_9dcc, i32* %ip.global-to-local, align 4
  %v3_a2a8 = mul i32 %v3_a2a0, 32
  store i32 %v3_a2a8, i32* %r3.global-to-local, align 4
  %v1_a2ac = load i32, i32* %r1.global-to-local, align 4
  %v2_a2ac = add i32 %v1_a2ac, 12
  %v3_a2ac = inttoptr i32 %v2_a2ac to i32*
  store i32 %v6_9dcc, i32* %v3_a2ac, align 4
  %v0_a2b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_a2b0 = load i32, i32* %r2.global-to-local, align 4
  %tmp86 = mul i32 %v1_a2b0, -8
  %v5_a2b0 = add i32 %v0_a2b0, %tmp86
  %v1_a2b4 = load i32, i32* @r8, align 4
  %v2_a2b4 = add i32 %v5_a2b0, %v1_a2b4
  store i32 %v2_a2b4, i32* %r3.global-to-local, align 4
  %v1_a2b8 = add i32 %v2_a2b4, 16
  %v2_a2b8 = inttoptr i32 %v1_a2b8 to i32*
  %v3_a2b8 = load i32, i32* %v2_a2b8, align 4
  %v1_a2bc = load i32, i32* %r1.global-to-local, align 4
  %v2_a2bc = add i32 %v1_a2bc, 16
  %v3_a2bc = inttoptr i32 %v2_a2bc to i32*
  store i32 %v3_a2b8, i32* %v3_a2bc, align 4
  %v0_a2c4 = load i32, i32* %r2.global-to-local, align 4
  %v1_a2c4 = add i32 %v0_a2c4, 1
  store i32 %v1_a2c4, i32* %r6.global-to-local, align 4
  store i32 %v7_a218, i32* %ip.global-to-local, align 4
  store i32 %v3_a21c, i32* %r2.global-to-local, align 4
  %v2_a2d0 = load i32, i32* %r1.global-to-local, align 4
  %v3_a2d0 = add i32 %v2_a2d0, 2
  %v4_a2d0 = inttoptr i32 %v3_a2d0 to i8*
  store i8 %v5_9ed8, i8* %v4_a2d0, align 1
  store i32 %v3_a220, i32* %r0.global-to-local, align 4
  %v0_a2d8 = load i32, i32* %r2.global-to-local, align 4
  %v1_a2d8 = trunc i32 %v0_a2d8 to i8
  %v2_a2d8 = load i32, i32* %r1.global-to-local, align 4
  %v3_a2d8 = add i32 %v2_a2d8, 3
  %v4_a2d8 = inttoptr i32 %v3_a2d8 to i8*
  store i8 %v1_a2d8, i8* %v4_a2d8, align 1
  %v0_a2dc = load i32, i32* %ip.global-to-local, align 4
  %v1_a2dc = trunc i32 %v0_a2dc to i8
  %v2_a2dc = load i32, i32* %r1.global-to-local, align 4
  %v3_a2dc = add i32 %v2_a2dc, 4
  %v4_a2dc = inttoptr i32 %v3_a2dc to i8*
  store i8 %v1_a2dc, i8* %v4_a2dc, align 1
  store i32 64, i32* %r2.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v0_a2e8 = load i32, i32* %r1.global-to-local, align 4
  %v1_a2e8 = add i32 %v0_a2e8, 20
  store i32 %v1_a2e8, i32* %r3.global-to-local, align 4
  %v0_a2ec = load i32, i32* %r0.global-to-local, align 4
  %v1_a2ec = trunc i32 %v0_a2ec to i8
  %v3_a2ec = add i32 %v0_a2e8, 5
  %v4_a2ec = inttoptr i32 %v3_a2ec to i8*
  store i8 %v1_a2ec, i8* %v4_a2ec, align 1
  %v0_a2f0 = load i32, i32* %r2.global-to-local, align 4
  %v1_a2f0 = trunc i32 %v0_a2f0 to i8
  %v2_a2f0 = load i32, i32* %r1.global-to-local, align 4
  %v3_a2f0 = add i32 %v2_a2f0, 6
  %v4_a2f0 = inttoptr i32 %v3_a2f0 to i8*
  store i8 %v1_a2f0, i8* %v4_a2f0, align 1
  %v0_a2f4 = load i32, i32* %ip.global-to-local, align 4
  %v1_a2f4 = trunc i32 %v0_a2f4 to i8
  %v2_a2f4 = load i32, i32* %r1.global-to-local, align 4
  %v3_a2f4 = add i32 %v2_a2f4, 7
  %v4_a2f4 = inttoptr i32 %v3_a2f4 to i8*
  store i8 %v1_a2f4, i8* %v4_a2f4, align 1
  %v0_a2f8 = load i32, i32* %r4.global-to-local, align 4
  %v1_a2f8 = trunc i32 %v0_a2f8 to i8
  %v2_a2f8 = load i32, i32* %r1.global-to-local, align 4
  %v3_a2f8 = add i32 %v2_a2f8, 20
  %v4_a2f8 = inttoptr i32 %v3_a2f8 to i8*
  store i8 %v1_a2f8, i8* %v4_a2f8, align 1
  store i32 %v3_a22c34, i32* %r0.global-to-local, align 4
  store i32 %v4_a300, i32* %r1.global-to-local, align 4
  %v2_a304 = load i32, i32* %r3.global-to-local, align 4
  %v3_a304 = add i32 %v2_a304, 5
  %v4_a304 = inttoptr i32 %v3_a304 to i8*
  store i8 %v5_a240, i8* %v4_a304, align 1
  %v0_a308 = load i32, i32* %r1.global-to-local, align 4
  %v1_a308 = trunc i32 %v0_a308 to i8
  %v2_a308 = load i32, i32* %r3.global-to-local, align 4
  %v3_a308 = add i32 %v2_a308, 1
  %v4_a308 = inttoptr i32 %v3_a308 to i8*
  store i8 %v1_a308, i8* %v4_a308, align 1
  %v0_a30c = load i32, i32* %r5.global-to-local, align 4
  %v1_a30c = trunc i32 %v0_a30c to i8
  %v2_a30c = load i32, i32* %r3.global-to-local, align 4
  %v3_a30c = add i32 %v2_a30c, 2
  %v4_a30c = inttoptr i32 %v3_a30c to i8*
  store i8 %v1_a30c, i8* %v4_a30c, align 1
  store i32 %v4_a310, i32* %r2.global-to-local, align 4
  %v0_a314 = load i32, i32* %r6.global-to-local, align 4
  %v1_a314 = load i32, i32* @sl, align 4
  %v9_a314 = icmp eq i32 %v0_a314, %v1_a314
  store i1 %v9_a314, i1* %cpsr_z.global-to-local, align 1
  %v2_a318 = load i32, i32* %r3.global-to-local, align 4
  %v3_a318 = add i32 %v2_a318, 3
  %v4_a318 = inttoptr i32 %v3_a318 to i8*
  store i8 %v1_a318, i8* %v4_a318, align 1
  %v0_a31c = load i32, i32* %r7.global-to-local, align 4
  %v1_a31c = trunc i32 %v0_a31c to i8
  %v2_a31c = load i32, i32* %r3.global-to-local, align 4
  %v3_a31c = add i32 %v2_a31c, 4
  %v4_a31c = inttoptr i32 %v3_a31c to i8*
  store i8 %v1_a31c, i8* %v4_a31c, align 1
  %v0_a320 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_a320, i32* %stack_var_-40, align 4
  %v5_a324 = icmp slt i32 %v0_a314, %v1_a314
  br i1 %v5_a324, label %dec_label_pc_a248, label %dec_label_pc_9fe8

; uselistorder directives
  uselistorder i32 %v3_a22c34, { 2, 0, 1 }
  uselistorder i32 %v3_a220, { 1, 0 }
  uselistorder i32 %v3_a21c, { 1, 0 }
  uselistorder i32 %v7_a218, { 1, 0 }
  uselistorder i32 %v4_a1e0, { 1, 0 }
  uselistorder i32 %v0_a1d8, { 0, 2, 1 }
  uselistorder i32 %v0_a1bc, { 0, 2, 1 }
  uselistorder i32 %v4_a1a8, { 1, 0 }
  uselistorder i32 %v0_a1a0, { 0, 2, 1 }
  uselistorder i32 %v2_a174, { 1, 0 }
  uselistorder i32 %v8_a154, { 2, 0, 1, 3 }
  uselistorder i32 %v3_a140, { 1, 0 }
  uselistorder i32 %v3_a11c, { 1, 3, 2, 0, 4 }
  uselistorder i1 %v2_a110, { 1, 0 }
  uselistorder i32 %v1_a104, { 0, 2, 3, 1 }
  uselistorder i32 %v1_a100, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v4_a0a8, { 0, 2, 1 }
  uselistorder i32 %v0_a090, { 1, 0, 2, 3 }
  uselistorder i32 %v4_a07c, { 1, 0 }
  uselistorder i32 %v2_a078, { 0, 2, 1 }
  uselistorder i1 %v2_a028, { 3, 0, 1, 2 }
  uselistorder i1 %v3_a194, { 1, 0, 2, 3 }
  uselistorder i8 %v5_9ed8, { 0, 2, 1 }
  uselistorder i32 %v3_9ec4, { 1, 0 }
  uselistorder i32 %v1_9eb4, { 2, 3, 0, 1 }
  uselistorder i32 %v1_9eb0, { 1, 2, 0 }
  uselistorder i32 %v1_9ea8, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_9ea0, { 1, 0 }
  uselistorder i32 %v1_9e78, { 2, 1, 0, 3 }
  uselistorder i32 %v3_9e58, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v3_9e54, { 0, 1, 3, 2 }
  uselistorder i32 %v0_9e40, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v3_9e38, { 5, 3, 2, 1, 4, 0 }
  uselistorder i32 %v0_9e34, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_9e30, { 3, 0, 4, 1, 2 }
  uselistorder i32 %v3_9e24, { 3, 1, 2, 0 }
  uselistorder i32 %v3_9de0, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder i32 %v6_9dcc, { 1, 0, 6, 4, 5, 3, 2 }
  uselistorder i32 %v1_9db8, { 3, 1, 2, 0 }
  uselistorder i32 %v1_9d44, { 1, 0 }
  uselistorder i8 %v5_9d34, { 1, 0, 2 }
  uselistorder i32 %v5_9d18, { 1, 0 }
  uselistorder i8 %v5_9cfc, { 0, 2, 1 }
  uselistorder i32 %v6_9cdc, { 1, 0 }
  uselistorder i32 %v4_9cc4, { 0, 3, 1, 5, 2, 4 }
  uselistorder i32 %v1_9ca8, { 2, 1, 0 }
  uselistorder i32* %stack_var_-40, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 0, 14, 13 }
  uselistorder i32* %r7.global-to-local, { 2, 0, 1, 3, 4 }
  uselistorder i32* %r6.global-to-local, { 7, 8, 9, 10, 11, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %r3.global-to-local, { 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 0 }
  uselistorder i32* %r2.global-to-local, { 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 28, 30, 31, 32, 33, 34, 35, 0 }
  uselistorder i32* %r1.global-to-local, { 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 26, 28, 30, 29, 31, 32, 34, 33, 36, 35, 0 }
  uselistorder i32* %r0.global-to-local, { 40, 41, 42, 43, 45, 44, 3, 5, 4, 7, 6, 8, 9, 10, 12, 11, 14, 13, 15, 2, 16, 1, 17, 18, 19, 20, 21, 26, 22, 23, 24, 25, 27, 29, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 0 }
  uselistorder i32* %ip.global-to-local, { 24, 25, 26, 27, 28, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i1* %cpsr_z.global-to-local, { 22, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder label %dec_label_pc_a20c, { 1, 0 }
  uselistorder label %dec_label_pc_a1f4, { 1, 0 }
  uselistorder label %dec_label_pc_a068, { 2, 1, 0 }
  uselistorder label %dec_label_pc_9ff0, { 1, 0 }
  uselistorder label %bb74, { 1, 0 }
  uselistorder label %bb71, { 1, 0 }
}

define i32 @function_a330(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_a330:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-50 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_a330 = load i32, i32* @r4, align 4
  %v6_a330 = load i32, i32* @r5, align 4
  %v9_a330 = load i32, i32* @r6, align 4
  %v12_a330 = load i32, i32* @r7, align 4
  %v15_a330 = load i32, i32* @r8, align 4
  %v21_a330 = load i32, i32* @sl, align 4
  %v1_a334 = urem i32 %arg1, 256
  store i32 %v1_a334, i32* @fp, align 4
  store i32 %arg2, i32* @sb, align 4
  store i32 %v1_a334, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  %v1_a34c = urem i32 %arg3, 256
  store i32 %v1_a34c, i32* @r4, align 4
  %v2_a350 = call i32* @calloc(i32 %v1_a334, i32 4)
  %v4_a350 = ptrtoint i32* %v2_a350 to i32
  %v0_a354 = load i32, i32* @r5, align 4
  store i32 %v0_a354, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a364 = load i32, i32* @r4, align 4
  store i32 %v0_a364, i32* %r0.global-to-local, align 4
  %v5_a368 = inttoptr i32 %v0_a354 to i32*
  %v6_a368 = call i32 @function_92dc(i32 %v0_a364, i32* %v5_a368, i32 2, i32 0)
  %v1_a374 = urem i32 %v6_a368, 256
  store i32 %v1_a374, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_a380 = load i32, i32* @r5, align 4
  store i32 %v0_a380, i32* %r1.global-to-local, align 4
  %v0_a384 = load i32, i32* @r4, align 4
  store i32 %v0_a384, i32* %r0.global-to-local, align 4
  %v5_a388 = trunc i32 %v6_a368 to i8
  %v6_a38c = inttoptr i32 %v0_a380 to i32*
  %v7_a38c = call i32 @function_92dc(i32 %v0_a384, i32* %v6_a38c, i32 3, i32 65535)
  %v0_a390 = load i32, i32* @r5, align 4
  store i32 %v0_a390, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_a38c, i32* @r7, align 4
  %v0_a3a0 = load i32, i32* @r4, align 4
  store i32 %v0_a3a0, i32* %r0.global-to-local, align 4
  %v4_a3a4 = inttoptr i32 %v0_a390 to i32*
  %v5_a3a4 = call i32 @function_92dc(i32 %v0_a3a0, i32* %v4_a3a4, i32 4, i32 64)
  %v1_a3ac = urem i32 %v5_a3a4, 256
  store i32 %v1_a3ac, i32* %ip.global-to-local, align 4
  %v0_a3b0 = load i32, i32* @r5, align 4
  store i32 %v0_a3b0, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_a3bc = load i32, i32* @r4, align 4
  store i32 %v0_a3bc, i32* %r0.global-to-local, align 4
  %v5_a3c0 = trunc i32 %v5_a3a4 to i8
  %v6_a3c4 = inttoptr i32 %v0_a3b0 to i32*
  %v7_a3c4 = call i32 @function_92dc(i32 %v0_a3bc, i32* %v6_a3c4, i32 5, i32 1)
  %v1_a3d0 = urem i32 %v7_a3c4, 256
  store i32 %v1_a3d0, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_a3dc = load i32, i32* @r5, align 4
  store i32 %v0_a3dc, i32* %r1.global-to-local, align 4
  %v0_a3e0 = load i32, i32* @r4, align 4
  store i32 %v0_a3e0, i32* %r0.global-to-local, align 4
  %v5_a3e8 = inttoptr i32 %v0_a3dc to i32*
  %v6_a3e8 = call i32 @function_92dc(i32 %v0_a3e0, i32* %v5_a3e8, i32 6, i32 65535)
  %v0_a3f0 = load i32, i32* @r5, align 4
  store i32 %v0_a3f0, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_a3e8, i32* @sl, align 4
  %v0_a400 = load i32, i32* @r4, align 4
  store i32 %v0_a400, i32* %r0.global-to-local, align 4
  %v4_a404 = inttoptr i32 %v0_a3f0 to i32*
  %v5_a404 = call i32 @function_92dc(i32 %v0_a400, i32* %v4_a404, i32 7, i32 65535)
  %v0_a408 = load i32, i32* @r5, align 4
  store i32 %v0_a408, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v5_a404, i32* @r8, align 4
  %v0_a418 = load i32, i32* @r4, align 4
  store i32 %v0_a418, i32* %r0.global-to-local, align 4
  %v4_a41c = inttoptr i32 %v0_a408 to i32*
  %v5_a41c = call i32 @function_92dc(i32 %v0_a418, i32* %v4_a41c, i32 0, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_a42c = load i32, i32* @r5, align 4
  store i32 %v0_a42c, i32* %r1.global-to-local, align 4
  %v0_a430 = load i32, i32* @r4, align 4
  store i32 %v0_a430, i32* %r0.global-to-local, align 4
  %v4_a434 = inttoptr i32 %v0_a42c to i32*
  %v5_a434 = call i32 @function_92dc(i32 %v0_a430, i32* %v4_a434, i32 1, i32 1)
  %v1_a43c = urem i32 %v5_a434, 256
  store i32 %v1_a43c, i32* %ip.global-to-local, align 4
  %v0_a440 = load i32, i32* @r5, align 4
  store i32 %v0_a440, i32* %r1.global-to-local, align 4
  store i32 19, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a44c = load i32, i32* @r4, align 4
  store i32 %v0_a44c, i32* %r0.global-to-local, align 4
  %v5_a454 = inttoptr i32 %v0_a440 to i32*
  %v6_a454 = call i32 @function_92dc(i32 %v0_a44c, i32* %v5_a454, i32 19, i32 0)
  %v0_a45c = load i32, i32* @r5, align 4
  store i32 %v0_a45c, i32* %r1.global-to-local, align 4
  %v2_a460 = load i32, i32* @global_var_1bd28.110, align 4
  store i32 %v2_a460, i32* %r3.global-to-local, align 4
  store i32 %v6_a454, i32* @r6, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_a46c = load i32, i32* @r4, align 4
  store i32 %v0_a46c, i32* %r0.global-to-local, align 4
  %v4_a470 = inttoptr i32 %v0_a45c to i32*
  %v5_a470 = call i32 @function_92dc(i32 %v0_a46c, i32* %v4_a470, i32 25, i32 %v2_a460)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_a484 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_a484, i32* %r0.global-to-local, align 4
  %v2_a488 = icmp eq i32 %v3_a484, -1
  store i1 %v2_a488, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a488, label %dec_label_pc_a96c, label %dec_label_pc_a494

dec_label_pc_a494:                                ; preds = %dec_label_pc_a330
  store i32 1, i32* %stack_var_-40, align 4
  %v6_a49c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_a49c, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v7_a4b0 = call i32 @setsockopt(i32 %v3_a484, i32 0, i32 3, i32* nonnull %stack_var_-40, i32 4)
  store i32 %v7_a4b0, i32* %r0.global-to-local, align 4
  %v2_a4b4 = icmp eq i32 %v7_a4b0, -1
  store i1 %v2_a4b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a4b4, label %dec_label_pc_a964, label %dec_label_pc_a4bc

dec_label_pc_a4bc:                                ; preds = %dec_label_pc_a494
  %v0_a4bc = load i32, i32* @sl, align 4
  %v3_a4bc = mul i32 %v0_a4bc, 65536
  store i32 %v3_a4bc, i32* %sl.global-to-local, align 4
  %v0_a4c0 = load i32, i32* @r8, align 4
  %v3_a4c0 = mul i32 %v0_a4c0, 65536
  store i32 %v3_a4c0, i32* %r8.global-to-local, align 4
  %v0_a4c8 = load i32, i32* @r7, align 4
  %v3_a4c8 = mul i32 %v0_a4c8, 65536
  store i32 %v3_a4c8, i32* %r7.global-to-local, align 4
  %v0_a4cc = load i32, i32* @r6, align 4
  %v1_a4cc = urem i32 %v0_a4cc, 256
  store i32 %v1_a4cc, i32* %r6.global-to-local, align 4
  store i32 0, i32* %stack_var_-40, align 4
  %v3_a4d4 = urem i32 %v0_a4c8, 65536
  store i32 %v3_a4d4, i32* %r2.global-to-local, align 4
  %v3_a4d8 = urem i32 %v0_a4bc, 65536
  store i32 %v3_a4d8, i32* %r3.global-to-local, align 4
  %v3_a4dc = urem i32 %v0_a4c0, 65536
  store i32 %v3_a4dc, i32* %r1.global-to-local, align 4
  %v0_a4e0 = load i32, i32* @fp, align 4
  %v2_a4e0 = icmp eq i32 %v0_a4e0, 0
  store i1 %v2_a4e0, i1* %cpsr_z.global-to-local, align 1
  %tmp86 = icmp slt i32 %v0_a4e0, 1
  br i1 %tmp86, label %dec_label_pc_aa8c, label %dec_label_pc_a500

dec_label_pc_a500:                                ; preds = %dec_label_pc_a4bc
  %v3_a504 = mul i32 %v5_a41c, 65536
  %v0_a4c8.not = or i32 %v0_a4c8, -65536
  %v1_a50c = xor i32 %v0_a4c8.not, 65535
  %v1_a514 = add i32 %v3_a504, 4325376
  %v1_a518 = urem i32 %v0_a4bc, 256
  %v3_a520 = udiv i32 %v1_a514, 256
  %v1_a524 = add i32 %v3_a504, 524288
  %v1_a52c = add i32 %v3_a504, 1835008
  %v1_a530 = urem i32 %v0_a4c0, 256
  %v1_a534 = and i32 %v3_a520, 65280
  store i32 %v1_a534, i32* %r0.global-to-local, align 4
  %v3_a53c = udiv i32 %v1_a52c, 256
  %tmp87 = mul nsw i32 %v1_a50c, 256
  %v1_a554 = and i32 %v3_a53c, 65280
  store i32 %v1_a554, i32* %ip.global-to-local, align 4
  %v1_a558 = and i32 %tmp87, 65280
  store i32 %v1_a558, i32* %lr.global-to-local, align 4
  %tmp89 = udiv i32 %v1_a50c, 256
  %v4_a544 = sdiv i32 %v1_a514, 16777216
  %v5_a574 = trunc i32 %tmp89 to i8
  %v3_a580 = mul nuw nsw i32 %v1_a518, 256
  %v3_a588 = ashr i32 %v1_a514, 31
  %v3_a58c = mul nuw nsw i32 %v1_a530, 256
  store i32 %v3_a58c, i32* %r5.global-to-local, align 4
  %tmp90 = udiv i32 %v0_a4bc, 256
  %v4_a590 = urem i32 %tmp90, 256
  %v5_a590 = or i32 %v4_a590, %v3_a580
  store i32 %v5_a590, i32* %r7.global-to-local, align 4
  %v3_a594 = udiv i32 %v1_a524, 256
  %tmp91 = udiv i32 %v0_a4c0, 256
  %v4_a598 = urem i32 %tmp91, 256
  %v5_a598 = or i32 %v4_a598, %v3_a58c
  store i32 %v5_a598, i32* %sl.global-to-local, align 4
  %v3_a5a4 = sdiv i32 %v3_a4c8, 16777216
  %v7_a5a4 = sdiv i32 %v1_a52c, 16777216
  %v1_a5a8 = and i32 %v3_a594, 65280
  store i32 %v1_a5a8, i32* %r6.global-to-local, align 4
  %v3_a5ac = ashr i32 %v3_a4c8, 31
  %v3_a5b0 = ashr i32 %v1_a52c, 31
  %v3_a5b4 = udiv i32 %v1_a50c, 65536
  %v4_a5b8 = udiv i32 %v1_a524, 16777216
  %v5_a5b8 = or i32 %v4_a5b8, %v1_a5a8
  store i32 %v5_a5b8, i32* %r8.global-to-local, align 4
  store i32 %v1_a518, i32* %r1.global-to-local, align 4
  store i32 %v1_a530, i32* %r2.global-to-local, align 4
  %v3_a5d038 = udiv i32 %v1_a5a8, 256
  store i32 %v3_a5d038, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v4_a630 = sext i8 %v5_a3c0 to i32
  %v2_a730 = icmp eq i32 %v1_a4cc, 0
  %sext18 = mul i32 %v0_a4bc, 16777216
  %v4_a744 = sdiv i32 %sext18, 16777216
  %sext19 = mul i32 %v1_a524, 256
  %v4_a758 = sdiv i32 %sext19, 16777216
  %sext20 = mul i32 %v0_a4c0, 16777216
  %v4_a760 = sdiv i32 %sext20, 16777216
  %v1_a644 = trunc i32 %v3_a588 to i8
  %v1_a768 = trunc i32 %v4_a758 to i8
  br label %dec_label_pc_a5e4

dec_label_pc_a5e4:                                ; preds = %bb98, %dec_label_pc_a500
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_a5f0 = call i32* @calloc(i32 1510, i32 4)
  %v4_a5f0 = ptrtoint i32* %v2_a5f0 to i32
  store i32 %v4_a5f0, i32* %r0.global-to-local, align 4
  store i32 %v4_a350, i32* %r1.global-to-local, align 4
  %v3_a5f8 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_a5f8, i32* %r3.global-to-local, align 4
  %v2_a5fc = load i32, i32* %r4.global-to-local, align 4
  %v5_a5fc = mul i32 %v2_a5fc, 4
  %v6_a5fc = add i32 %v5_a5fc, %v4_a350
  %v7_a5fc = inttoptr i32 %v6_a5fc to i32*
  store i32 %v4_a5f0, i32* %v7_a5fc, align 4
  %v0_a600 = load i32, i32* %r1.global-to-local, align 4
  %v1_a600 = load i32, i32* %r3.global-to-local, align 4
  %v4_a600 = mul i32 %v1_a600, 4
  %v5_a600 = add i32 %v4_a600, %v0_a600
  %v6_a600 = inttoptr i32 %v5_a600 to i32*
  %v7_a600 = load i32, i32* %v6_a600, align 4
  store i32 %v7_a600, i32* %r4.global-to-local, align 4
  %v1_a604 = inttoptr i32 %v7_a600 to i8*
  %v2_a604 = load i8, i8* %v1_a604, align 1
  %tmp = urem i8 %v2_a604, 16
  %v1_a608 = zext i8 %tmp to i32
  %v1_a60c = or i32 %v1_a608, 64
  store i32 %v1_a60c, i32* %r2.global-to-local, align 4
  %v1_a610 = trunc i32 %v1_a60c to i8
  store i8 %v1_a610, i8* %v1_a604, align 1
  %v0_a614 = load i32, i32* %r4.global-to-local, align 4
  %v1_a614 = inttoptr i32 %v0_a614 to i8*
  %v2_a614 = load i8, i8* %v1_a614, align 1
  %v1_a618 = and i8 %v2_a614, -16
  %v1_a61c = or i8 %v1_a618, 5
  store i32 %v1_a3d0, i32* %r2.global-to-local, align 4
  store i8 %v1_a61c, i8* %v1_a614, align 1
  %v2_a62c = load i32, i32* %r4.global-to-local, align 4
  %v3_a62c = add i32 %v2_a62c, 1
  %v4_a62c = inttoptr i32 %v3_a62c to i8*
  store i8 %v5_a388, i8* %v4_a62c, align 1
  store i32 %v4_a630, i32* %r1.global-to-local, align 4
  %v2_a634 = load i32, i32* %r4.global-to-local, align 4
  %v3_a634 = add i32 %v2_a634, 8
  %v4_a634 = inttoptr i32 %v3_a634 to i8*
  store i8 %v5_a3c0, i8* %v4_a634, align 1
  store i32 %v3_a588, i32* %r3.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v0_a640 = load i32, i32* %r2.global-to-local, align 4
  %v9_a640 = icmp eq i32 %v0_a640, 0
  store i1 %v9_a640, i1* %cpsr_z.global-to-local, align 1
  %v2_a644 = load i32, i32* %r4.global-to-local, align 4
  %v3_a644 = add i32 %v2_a644, 3
  %v4_a644 = inttoptr i32 %v3_a644 to i8*
  store i8 %v1_a644, i8* %v4_a644, align 1
  store i32 %v4_a544, i32* %r2.global-to-local, align 4
  %v0_a64c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a64c, label %.thread22, label %.thread

.thread:                                          ; preds = %dec_label_pc_a5e4
  %v1_a64c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v1_a64c, i32* %r3.global-to-local, align 4
  %v2_a650 = trunc i32 %v1_a64c to i8
  %v3_a650 = load i32, i32* %r4.global-to-local, align 4
  %v4_a650 = add i32 %v3_a650, 7
  %v5_a650 = inttoptr i32 %v4_a650 to i8*
  store i8 %v2_a650, i8* %v5_a650, align 1
  %v0_a654.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a654.pr.pr, label %.thread22, label %bb

bb:                                               ; preds = %.thread
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_a658 = load i32, i32* %r4.global-to-local, align 4
  %v4_a658 = add i32 %v3_a658, 6
  %v5_a658 = inttoptr i32 %v4_a658 to i8*
  store i8 64, i8* %v5_a658, align 1
  br label %.thread22

.thread22:                                        ; preds = %dec_label_pc_a5e4, %.thread, %bb
  %v0_a65c = load i32, i32* %r2.global-to-local, align 4
  %v1_a65c = trunc i32 %v0_a65c to i8
  %v2_a65c = load i32, i32* %r4.global-to-local, align 4
  %v3_a65c = add i32 %v2_a65c, 2
  %v4_a65c = inttoptr i32 %v3_a65c to i8*
  store i8 %v1_a65c, i8* %v4_a65c, align 1
  store i32 %v3_a5ac, i32* %r2.global-to-local, align 4
  store i32 %v3_a5a4, i32* %r1.global-to-local, align 4
  %v2_a66c = load i32, i32* %r4.global-to-local, align 4
  %v3_a66c = add i32 %v2_a66c, 9
  %v4_a66c = inttoptr i32 %v3_a66c to i8*
  store i8 47, i8* %v4_a66c, align 1
  %v0_a670 = load i32, i32* %r2.global-to-local, align 4
  %v1_a670 = trunc i32 %v0_a670 to i8
  %v2_a670 = load i32, i32* %r4.global-to-local, align 4
  %v3_a670 = add i32 %v2_a670, 5
  %v4_a670 = inttoptr i32 %v3_a670 to i8*
  store i8 %v1_a670, i8* %v4_a670, align 1
  %v3_a674 = load i32, i32* %stack_var_-40, align 4
  %v5_a67c = mul i32 %v3_a674, 24
  store i32 %v5_a67c, i32* %r3.global-to-local, align 4
  store i32 %v5_a470, i32* %r2.global-to-local, align 4
  %v1_a684 = load i32, i32* %r4.global-to-local, align 4
  %v2_a684 = add i32 %v1_a684, 12
  %v3_a684 = inttoptr i32 %v2_a684 to i32*
  store i32 %v5_a470, i32* %v3_a684, align 4
  %v0_a688 = load i32, i32* %r3.global-to-local, align 4
  %v1_a688 = load i32, i32* @sb, align 4
  %v2_a688 = add i32 %v1_a688, %v0_a688
  store i32 %v2_a688, i32* %r3.global-to-local, align 4
  %v1_a68c = add i32 %v2_a688, 16
  %v2_a68c = inttoptr i32 %v1_a68c to i32*
  %v3_a68c = load i32, i32* %v2_a68c, align 4
  store i32 %v3_a68c, i32* %r2.global-to-local, align 4
  %v0_a690 = load i32, i32* %r1.global-to-local, align 4
  %v1_a690 = trunc i32 %v0_a690 to i8
  %v2_a690 = load i32, i32* %r4.global-to-local, align 4
  %v3_a690 = add i32 %v2_a690, 4
  %v4_a690 = inttoptr i32 %v3_a690 to i8*
  store i8 %v1_a690, i8* %v4_a690, align 1
  store i32 101, i32* %r3.global-to-local, align 4
  %v0_a698 = load i32, i32* %r4.global-to-local, align 4
  %v1_a698 = add i32 %v0_a698, 20
  store i32 %v1_a698, i32* %r1.global-to-local, align 4
  %v3_a69c = add i32 %v0_a698, 22
  %v4_a69c = inttoptr i32 %v3_a69c to i8*
  store i8 101, i8* %v4_a69c, align 1
  %v0_a6a0 = load i32, i32* %r2.global-to-local, align 4
  %v1_a6a0 = load i32, i32* %r4.global-to-local, align 4
  %v2_a6a0 = add i32 %v1_a6a0, 16
  %v3_a6a0 = inttoptr i32 %v2_a6a0 to i32*
  store i32 %v0_a6a0, i32* %v3_a6a0, align 4
  %v0_a6a4 = load i32, i32* %r4.global-to-local, align 4
  %v1_a6a4 = add i32 %v0_a6a4, 24
  store i32 %v1_a6a4, i32* %r0.global-to-local, align 4
  store i32 88, i32* %r2.global-to-local, align 4
  %v0_a6ac = load i32, i32* %r3.global-to-local, align 4
  %v1_a6ac = add i32 %v0_a6ac, -93
  store i32 %v1_a6ac, i32* %r3.global-to-local, align 4
  %v2_a6b0 = load i32, i32* %r1.global-to-local, align 4
  %v3_a6b0 = add i32 %v2_a6b0, 3
  %v4_a6b0 = inttoptr i32 %v3_a6b0 to i8*
  store i8 88, i8* %v4_a6b0, align 1
  %v0_a6b4 = load i32, i32* %r3.global-to-local, align 4
  %v1_a6b4 = trunc i32 %v0_a6b4 to i8
  %v2_a6b4 = load i32, i32* %r0.global-to-local, align 4
  %v3_a6b4 = add i32 %v2_a6b4, 12
  %v4_a6b4 = inttoptr i32 %v3_a6b4 to i8*
  store i8 %v1_a6b4, i8* %v4_a6b4, align 1
  %v0_a6b8 = load i32, i32* %ip.global-to-local, align 4
  %v1_a6b8 = trunc i32 %v0_a6b8 to i8
  %v2_a6b8 = load i32, i32* %r0.global-to-local, align 4
  %v3_a6b8 = add i32 %v2_a6b8, 13
  %v4_a6b8 = inttoptr i32 %v3_a6b8 to i8*
  store i8 %v1_a6b8, i8* %v4_a6b8, align 1
  %v0_a6bc = load i32, i32* %r4.global-to-local, align 4
  %v1_a6bc = add i32 %v0_a6bc, 38
  %v2_a6bc = inttoptr i32 %v1_a6bc to i8*
  %v3_a6bc = load i8, i8* %v2_a6bc, align 1
  %tmp103 = urem i8 %v3_a6bc, 16
  %v1_a6c0 = zext i8 %tmp103 to i32
  %v1_a6c4 = or i32 %v1_a6c0, 64
  store i32 %v1_a6c4, i32* %r3.global-to-local, align 4
  %v1_a6c8 = trunc i32 %v1_a6c4 to i8
  store i8 %v1_a6c8, i8* %v2_a6bc, align 1
  %v0_a6cc = load i32, i32* %r4.global-to-local, align 4
  %v1_a6cc = add i32 %v0_a6cc, 38
  %v2_a6cc = inttoptr i32 %v1_a6cc to i8*
  %v3_a6cc = load i8, i8* %v2_a6cc, align 1
  %v1_a6d0 = and i8 %v3_a6cc, -16
  %v1_a6d4 = or i8 %v1_a6d0, 5
  store i8 %v1_a6d4, i8* %v2_a6cc, align 1
  %v0_a6e0 = load i32, i32* %r4.global-to-local, align 4
  %v1_a6e0 = add i32 %v0_a6e0, 38
  store i32 %v1_a6e0, i32* %r5.global-to-local, align 4
  %v3_a6e4 = add i32 %v0_a6e0, 39
  %v4_a6e4 = inttoptr i32 %v3_a6e4 to i8*
  store i8 %v5_a388, i8* %v4_a6e4, align 1
  store i32 %v7_a5a4, i32* %r1.global-to-local, align 4
  store i32 %tmp89, i32* %r3.global-to-local, align 4
  store i32 %v3_a5b0, i32* %r2.global-to-local, align 4
  %v2_a6f4 = load i32, i32* %r5.global-to-local, align 4
  %v3_a6f4 = add i32 %v2_a6f4, 4
  %v4_a6f4 = inttoptr i32 %v3_a6f4 to i8*
  store i8 %v5_a574, i8* %v4_a6f4, align 1
  %v0_a6f8 = load i32, i32* %r1.global-to-local, align 4
  %v1_a6f8 = trunc i32 %v0_a6f8 to i8
  %v2_a6f8 = load i32, i32* %r5.global-to-local, align 4
  %v3_a6f8 = add i32 %v2_a6f8, 2
  %v4_a6f8 = inttoptr i32 %v3_a6f8 to i8*
  store i8 %v1_a6f8, i8* %v4_a6f8, align 1
  %v0_a6fc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a6fc, label %bb93, label %bb92

bb92:                                             ; preds = %.thread22
  store i32 64, i32* %r3.global-to-local, align 4
  br label %bb93

bb93:                                             ; preds = %.thread22, %bb92
  store i32 %v3_a5b4, i32* %r1.global-to-local, align 4
  %v0_a704 = load i32, i32* %r2.global-to-local, align 4
  %v1_a704 = trunc i32 %v0_a704 to i8
  %v2_a704 = load i32, i32* %r5.global-to-local, align 4
  %v3_a704 = add i32 %v2_a704, 3
  %v4_a704 = inttoptr i32 %v3_a704 to i8*
  store i8 %v1_a704, i8* %v4_a704, align 1
  store i32 %v4_a630, i32* %r2.global-to-local, align 4
  %v0_a70c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a70c, label %bb95, label %bb94

bb94:                                             ; preds = %bb93
  %v1_a70c = load i32, i32* %r3.global-to-local, align 4
  %v2_a70c = trunc i32 %v1_a70c to i8
  %v3_a70c = load i32, i32* %r5.global-to-local, align 4
  %v4_a70c = add i32 %v3_a70c, 6
  %v5_a70c = inttoptr i32 %v4_a70c to i8*
  store i8 %v2_a70c, i8* %v5_a70c, align 1
  br label %bb95

bb95:                                             ; preds = %bb93, %bb94
  store i32 17, i32* %r3.global-to-local, align 4
  %v0_a714 = load i32, i32* %r1.global-to-local, align 4
  %v1_a714 = trunc i32 %v0_a714 to i8
  %v2_a714 = load i32, i32* %r5.global-to-local, align 4
  %v3_a714 = add i32 %v2_a714, 5
  %v4_a714 = inttoptr i32 %v3_a714 to i8*
  store i8 %v1_a714, i8* %v4_a714, align 1
  %v0_a718 = load i32, i32* %r2.global-to-local, align 4
  %v1_a718 = trunc i32 %v0_a718 to i8
  %v2_a718 = load i32, i32* %r5.global-to-local, align 4
  %v3_a718 = add i32 %v2_a718, 8
  %v4_a718 = inttoptr i32 %v3_a718 to i8*
  store i8 %v1_a718, i8* %v4_a718, align 1
  %v0_a71c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a71c, label %bb97, label %bb96

bb96:                                             ; preds = %bb95
  %v1_a71c = load i32, i32* %ip.global-to-local, align 4
  %v2_a71c = trunc i32 %v1_a71c to i8
  %v3_a71c = load i32, i32* %r5.global-to-local, align 4
  %v4_a71c = add i32 %v3_a71c, 7
  %v5_a71c = inttoptr i32 %v4_a71c to i8*
  store i8 %v2_a71c, i8* %v5_a71c, align 1
  br label %bb97

bb97:                                             ; preds = %bb95, %bb96
  %v0_a720 = load i32, i32* %r3.global-to-local, align 4
  %v1_a720 = trunc i32 %v0_a720 to i8
  %v2_a720 = load i32, i32* %r5.global-to-local, align 4
  %v3_a720 = add i32 %v2_a720, 9
  %v4_a720 = inttoptr i32 %v3_a720 to i8*
  store i8 %v1_a720, i8* %v4_a720, align 1
  %v0_a724 = call i32 @function_f508()
  store i32 %v0_a724, i32* %r0.global-to-local, align 4
  store i32 %v1_a4cc, i32* %r1.global-to-local, align 4
  store i1 %v2_a730, i1* %cpsr_z.global-to-local, align 1
  %v1_a734 = sub i32 1023, %v0_a724
  store i32 %v1_a734, i32* %r3.global-to-local, align 4
  br i1 %v2_a730, label %.thread23, label %.thread24

.thread23:                                        ; preds = %bb97
  %v2_a73c = load i32, i32* %r5.global-to-local, align 4
  %v3_a73c = add i32 %v2_a73c, 16
  %v4_a73c = inttoptr i32 %v3_a73c to i32*
  store i32 %v1_a734, i32* %v4_a73c, align 4
  br label %bb98

.thread24:                                        ; preds = %bb97
  %v1_a738 = load i32, i32* %r4.global-to-local, align 4
  %v2_a738 = add i32 %v1_a738, 16
  %v3_a738 = inttoptr i32 %v2_a738 to i32*
  %v4_a738 = load i32, i32* %v3_a738, align 4
  store i32 %v4_a738, i32* %r3.global-to-local, align 4
  %v2_a740 = load i32, i32* %r5.global-to-local, align 4
  %v3_a740 = add i32 %v2_a740, 16
  %v4_a740 = inttoptr i32 %v3_a740 to i32*
  store i32 %v4_a738, i32* %v4_a740, align 4
  br label %bb98

bb98:                                             ; preds = %.thread23, %.thread24
  store i32 %v4_a744, i32* %r3.global-to-local, align 4
  %v0_a748 = load i32, i32* %r4.global-to-local, align 4
  %v1_a748 = add i32 %v0_a748, 58
  store i32 %v1_a748, i32* %r6.global-to-local, align 4
  %v1_a74c = load i32, i32* %r5.global-to-local, align 4
  %v2_a74c = add i32 %v1_a74c, 12
  %v3_a74c = inttoptr i32 %v2_a74c to i32*
  store i32 %v0_a724, i32* %v3_a74c, align 4
  %v0_a750 = load i32, i32* %r3.global-to-local, align 4
  %v1_a750 = trunc i32 %v0_a750 to i8
  %v2_a750 = load i32, i32* %r6.global-to-local, align 4
  %v3_a750 = add i32 %v2_a750, 1
  %v4_a750 = inttoptr i32 %v3_a750 to i8*
  store i8 %v1_a750, i8* %v4_a750, align 1
  %v3_a754 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_a754, i32* %r3.global-to-local, align 4
  store i32 %v4_a758, i32* %r2.global-to-local, align 4
  %v1_a75c = add i32 %v3_a754, 1
  store i32 %v1_a75c, i32* %r4.global-to-local, align 4
  store i32 %v4_a760, i32* %r1.global-to-local, align 4
  %v1_a764 = load i32, i32* @fp, align 4
  %v9_a764 = icmp eq i32 %v1_a75c, %v1_a764
  store i1 %v9_a764, i1* %cpsr_z.global-to-local, align 1
  %v2_a768 = load i32, i32* %r6.global-to-local, align 4
  %v3_a768 = add i32 %v2_a768, 5
  %v4_a768 = inttoptr i32 %v3_a768 to i8*
  store i8 %v1_a768, i8* %v4_a768, align 1
  %v0_a76c = load i32, i32* %r7.global-to-local, align 4
  %v1_a76c = trunc i32 %v0_a76c to i8
  %v2_a76c = load i32, i32* %r6.global-to-local, align 4
  %v3_a76c = inttoptr i32 %v2_a76c to i8*
  store i8 %v1_a76c, i8* %v3_a76c, align 1
  %v0_a770 = load i32, i32* %sl.global-to-local, align 4
  %v1_a770 = trunc i32 %v0_a770 to i8
  %v2_a770 = load i32, i32* %r6.global-to-local, align 4
  %v3_a770 = add i32 %v2_a770, 2
  %v4_a770 = inttoptr i32 %v3_a770 to i8*
  store i8 %v1_a770, i8* %v4_a770, align 1
  %v0_a774 = load i32, i32* %r1.global-to-local, align 4
  %v1_a774 = trunc i32 %v0_a774 to i8
  %v2_a774 = load i32, i32* %r6.global-to-local, align 4
  %v3_a774 = add i32 %v2_a774, 3
  %v4_a774 = inttoptr i32 %v3_a774 to i8*
  store i8 %v1_a774, i8* %v4_a774, align 1
  %v0_a778 = load i32, i32* %r8.global-to-local, align 4
  %v1_a778 = trunc i32 %v0_a778 to i8
  %v2_a778 = load i32, i32* %r6.global-to-local, align 4
  %v3_a778 = add i32 %v2_a778, 4
  %v4_a778 = inttoptr i32 %v3_a778 to i8*
  store i8 %v1_a778, i8* %v4_a778, align 1
  %v0_a77c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_a77c, i32* %stack_var_-40, align 4
  %v5_a780 = icmp slt i32 %v1_a75c, %v1_a764
  br i1 %v5_a780, label %dec_label_pc_a5e4, label %dec_label_pc_a784

dec_label_pc_a784:                                ; preds = %bb98
  %v1_a78c = add i32 %v5_a41c, 8
  store i32 %v1_a78c, i32* %r2.global-to-local, align 4
  %v1_a790 = add i32 %v5_a41c, 66
  store i32 %v1_a790, i32* %r3.global-to-local, align 4
  %v0_a79c.pre.pre = load i32, i32* @fp, align 4
  br label %dec_label_pc_a79c.preheader

dec_label_pc_a79c.preheader:                      ; preds = %dec_label_pc_a784, %dec_label_pc_aa8c
  %v0_a79c.pre = phi i32 [ %v0_a79c.pre.pre, %dec_label_pc_a784 ], [ %v0_a4e0, %dec_label_pc_aa8c ]
  %stack_var_-160.0.ph = phi i32 [ %v1_a790, %dec_label_pc_a784 ], [ %v1_aa98, %dec_label_pc_aa8c ]
  %stack_var_-156.0.ph = phi i32 [ %v1_a78c, %dec_label_pc_a784 ], [ %v1_aa94, %dec_label_pc_aa8c ]
  %v3_a9ec = icmp eq i32 %v3_a4d4, 65535
  %v2_aa5c = icmp eq i32 %v1_a4cc, 0
  %v2_a840 = ptrtoint i32* %stack_var_-44 to i32
  %v2_a858 = ptrtoint i32* %stack_var_-48 to i32
  %v2_a868 = ptrtoint i32* %stack_var_-52 to i32
  %v2_a874 = ptrtoint i32* %stack_var_-50 to i32
  %v2_a888 = icmp eq i32 %v1_a43c, 0
  %v2_a7e4 = icmp eq i32 %v5_a470, -1
  br label %dec_label_pc_a79c

dec_label_pc_a79c:                                ; preds = %dec_label_pc_a890, %dec_label_pc_a79c.preheader
  %v0_a79c = phi i32 [ %v0_a79c.pre, %dec_label_pc_a79c.preheader ], [ %v1_a954, %dec_label_pc_a890 ]
  %v2_a79c = icmp eq i32 %v0_a79c, 0
  store i1 %v2_a79c, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  %tmp99 = icmp slt i32 %v0_a79c, 1
  br label %dec_label_pc_a7a4

dec_label_pc_a7a4:                                ; preds = %dec_label_pc_a7a4, %dec_label_pc_a79c
  br i1 %tmp99, label %dec_label_pc_a7a4, label %dec_label_pc_a7a8

dec_label_pc_a7a8:                                ; preds = %dec_label_pc_a7a4
  store i32 0, i32* %stack_var_-40, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @sl, align 4
  br label %dec_label_pc_a7b4

dec_label_pc_a7b4:                                ; preds = %dec_label_pc_a890, %dec_label_pc_a7a8
  %v1_a7c8 = phi i32 [ %v1_a950, %dec_label_pc_a890 ], [ 0, %dec_label_pc_a7a8 ]
  %v5_a7b8 = mul i32 %v1_a7c8, 24
  %v1_a7bc = load i32, i32* @sb, align 4
  %v2_a7bc = add i32 %v1_a7bc, %v5_a7b8
  store i32 %v2_a7bc, i32* %r3.global-to-local, align 4
  store i32 %v4_a350, i32* %r1.global-to-local, align 4
  %v1_a7c4 = add i32 %v2_a7bc, 20
  %v2_a7c4 = inttoptr i32 %v1_a7c4 to i8*
  %v3_a7c4 = load i8, i8* %v2_a7c4, align 1
  %v4_a7c4 = zext i8 %v3_a7c4 to i32
  store i32 %v4_a7c4, i32* %r2.global-to-local, align 4
  %v4_a7c8 = mul i32 %v1_a7c8, 4
  %v5_a7c8 = add i32 %v4_a7c8, %v4_a350
  %v6_a7c8 = inttoptr i32 %v5_a7c8 to i32*
  %v7_a7c8 = load i32, i32* %v6_a7c8, align 4
  store i32 %v7_a7c8, i32* @r5, align 4
  %v7_a7cc = icmp eq i8 %v3_a7c4, 31
  store i1 %v7_a7cc, i1* %cpsr_z.global-to-local, align 1
  %v1_a7d0 = add i32 %v7_a7c8, 24
  store i32 %v1_a7d0, i32* @r8, align 4
  %v1_a7d4 = add i32 %v7_a7c8, 38
  store i32 %v1_a7d4, i32* @r6, align 4
  %v1_a7d8 = add i32 %v7_a7c8, 58
  store i32 %v1_a7d8, i32* @r7, align 4
  %tmp104 = icmp ult i8 %v3_a7c4, 32
  br i1 %tmp104, label %dec_label_pc_a974, label %dec_label_pc_a7e0

dec_label_pc_a7e0:                                ; preds = %dec_label_pc_a7b4
  store i32 %v5_a470, i32* %r2.global-to-local, align 4
  store i1 %v2_a7e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a7e4, label %dec_label_pc_a9dc, label %dec_label_pc_a7ec

dec_label_pc_a7ec:                                ; preds = %dec_label_pc_a974, %dec_label_pc_a7e0
  store i32 %v3_a4d4, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_a9ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_a9ec, label %dec_label_pc_a9f8, label %dec_label_pc_a800

dec_label_pc_a800:                                ; preds = %dec_label_pc_a9dc.dec_label_pc_a800_crit_edge, %dec_label_pc_a7ec
  %v1_a804 = phi i32 [ %v1_a804.pre, %dec_label_pc_a9dc.dec_label_pc_a800_crit_edge ], [ 65535, %dec_label_pc_a7ec ]
  store i32 %v3_a4d8, i32* %r1.global-to-local, align 4
  %v9_a804 = icmp eq i32 %v3_a4d8, %v1_a804
  store i1 %v9_a804, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a804, label %dec_label_pc_aa30, label %dec_label_pc_a80c

dec_label_pc_a80c:                                ; preds = %dec_label_pc_a9f8.dec_label_pc_a80c_crit_edge, %dec_label_pc_a800
  %v1_a810 = phi i32 [ %v1_a810.pre, %dec_label_pc_a9f8.dec_label_pc_a80c_crit_edge ], [ %v1_a804, %dec_label_pc_a800 ]
  store i32 %v3_a4dc, i32* %r2.global-to-local, align 4
  %v9_a810 = icmp eq i32 %v3_a4dc, %v1_a810
  store i1 %v9_a810, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a810, label %dec_label_pc_aa4c, label %dec_label_pc_a818

dec_label_pc_a818:                                ; preds = %dec_label_pc_aa30, %dec_label_pc_a80c
  store i32 %v1_a4cc, i32* %r3.global-to-local, align 4
  store i1 %v2_aa5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_aa5c, label %dec_label_pc_aa70, label %.thread25

.thread25:                                        ; preds = %dec_label_pc_a818
  %v1_a820 = load i32, i32* @r5, align 4
  %v2_a820 = add i32 %v1_a820, 16
  %v3_a820 = inttoptr i32 %v2_a820 to i32*
  %v4_a820 = load i32, i32* %v3_a820, align 4
  store i32 %v4_a820, i32* %r3.global-to-local, align 4
  %v2_a824 = load i32, i32* @r6, align 4
  %v3_a824 = add i32 %v2_a824, 16
  %v4_a824 = inttoptr i32 %v3_a824 to i32*
  store i32 %v4_a820, i32* %v4_a824, align 4
  br label %dec_label_pc_a82c

dec_label_pc_a82c:                                ; preds = %bb102, %.thread25, %dec_label_pc_aa70
  %v0_a82c = call i32 @function_f508()
  store i32 %v0_a82c, i32* %r0.global-to-local, align 4
  store i32 %v0_a82c, i32* %stack_var_-44, align 4
  %v0_a834 = call i32 @function_f508()
  store i32 %v0_a834, i32* %r0.global-to-local, align 4
  store i32 %v0_a834, i32* %stack_var_-48, align 4
  %v0_a83c = call i32 @function_f508()
  store i32 %v2_a840, i32* %r1.global-to-local, align 4
  store i32 %v0_a83c, i32* %stack_var_-52, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_a84c = load i32, i32* @r8, align 4
  store i32 %v0_a84c, i32* %r0.global-to-local, align 4
  %v3_a850 = call i32 @function_13068(i32 %v0_a84c, i32 %v2_a840, i32 4)
  %v0_a854 = load i32, i32* @r8, align 4
  %v1_a854 = add i32 %v0_a854, 6
  store i32 %v1_a854, i32* %r0.global-to-local, align 4
  store i32 %v2_a858, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v3_a860 = call i32 @function_13068(i32 %v1_a854, i32 %v2_a858, i32 4)
  %v0_a864 = load i32, i32* @r8, align 4
  %v1_a864 = add i32 %v0_a864, 4
  store i32 %v1_a864, i32* %r0.global-to-local, align 4
  store i32 %v2_a868, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v3_a870 = call i32 @function_13068(i32 %v1_a864, i32 %v2_a868, i32 2)
  store i32 %v2_a874, i32* %r1.global-to-local, align 4
  %v0_a878 = load i32, i32* @r8, align 4
  %v1_a878 = add i32 %v0_a878, 10
  store i32 %v1_a878, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v3_a880 = call i32 @function_13068(i32 %v1_a878, i32 %v2_a874, i32 2)
  store i32 %v3_a880, i32* %r0.global-to-local, align 4
  store i32 %v1_a43c, i32* %r1.global-to-local, align 4
  store i1 %v2_a888, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a888, label %dec_label_pc_a890, label %dec_label_pc_aa7c

dec_label_pc_a890:                                ; preds = %dec_label_pc_a82c, %dec_label_pc_aa7c
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_a894 = load i32, i32* @sl, align 4
  %v1_a894 = trunc i32 %v0_a894 to i8
  %v2_a894 = load i32, i32* @r5, align 4
  %v3_a894 = add i32 %v2_a894, 10
  %v4_a894 = inttoptr i32 %v3_a894 to i8*
  store i8 %v1_a894, i8* %v4_a894, align 1
  %v0_a898 = load i32, i32* @sl, align 4
  %v1_a898 = trunc i32 %v0_a898 to i8
  %v2_a898 = load i32, i32* @r5, align 4
  %v3_a898 = add i32 %v2_a898, 11
  %v4_a898 = inttoptr i32 %v3_a898 to i8*
  store i8 %v1_a898, i8* %v4_a898, align 1
  %v0_a89c = load i32, i32* @r5, align 4
  store i32 %v0_a89c, i32* @r0, align 4
  %v2_a8a0 = call i32 @function_ddf4(i32 %v0_a89c, i32 20)
  %v3_a8a0 = trunc i32 %v2_a8a0 to i8
  %v4_a8a4 = sdiv i32 %v2_a8a0, 256
  store i32 %v4_a8a4, i32* %r3.global-to-local, align 4
  %v1_a8a8 = trunc i32 %v4_a8a4 to i8
  %v2_a8a8 = load i32, i32* @r5, align 4
  %v3_a8a8 = add i32 %v2_a8a8, 11
  %v4_a8a8 = inttoptr i32 %v3_a8a8 to i8*
  store i8 %v1_a8a8, i8* %v4_a8a8, align 1
  %v3_a8ac = load i32, i32* @r5, align 4
  %v4_a8ac = add i32 %v3_a8ac, 10
  %v5_a8ac = inttoptr i32 %v4_a8ac to i8*
  store i8 %v3_a8a0, i8* %v5_a8ac, align 1
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_a8b4 = load i32, i32* @sl, align 4
  %v1_a8b4 = trunc i32 %v0_a8b4 to i8
  %v2_a8b4 = load i32, i32* @r6, align 4
  %v3_a8b4 = add i32 %v2_a8b4, 10
  %v4_a8b4 = inttoptr i32 %v3_a8b4 to i8*
  store i8 %v1_a8b4, i8* %v4_a8b4, align 1
  %v0_a8b8 = load i32, i32* @sl, align 4
  %v1_a8b8 = trunc i32 %v0_a8b8 to i8
  %v2_a8b8 = load i32, i32* @r6, align 4
  %v3_a8b8 = add i32 %v2_a8b8, 11
  %v4_a8b8 = inttoptr i32 %v3_a8b8 to i8*
  store i8 %v1_a8b8, i8* %v4_a8b8, align 1
  %v0_a8bc = load i32, i32* @r6, align 4
  store i32 %v0_a8bc, i32* @r0, align 4
  %v2_a8c0 = call i32 @function_ddf4(i32 %v0_a8bc, i32 20)
  %v3_a8c0 = trunc i32 %v2_a8c0 to i8
  store i32 %v2_a8c0, i32* %r0.global-to-local, align 4
  %v4_a8c4 = sdiv i32 %v2_a8c0, 256
  store i32 %v4_a8c4, i32* %r3.global-to-local, align 4
  %v3_a8c8 = load i32, i32* @r6, align 4
  %v4_a8c8 = add i32 %v3_a8c8, 10
  %v5_a8c8 = inttoptr i32 %v4_a8c8 to i8*
  store i8 %v3_a8c0, i8* %v5_a8c8, align 1
  %v0_a8cc = load i32, i32* %r3.global-to-local, align 4
  %v1_a8cc = trunc i32 %v0_a8cc to i8
  %v2_a8cc = load i32, i32* @r6, align 4
  %v3_a8cc = add i32 %v2_a8cc, 11
  %v4_a8cc = inttoptr i32 %v3_a8cc to i8*
  store i8 %v1_a8cc, i8* %v4_a8cc, align 1
  %v0_a8d0 = load i32, i32* @r7, align 4
  %v1_a8d0 = add i32 %v0_a8d0, 4
  %v2_a8d0 = inttoptr i32 %v1_a8d0 to i8*
  %v3_a8d0 = load i8, i8* %v2_a8d0, align 1
  %v4_a8d0 = zext i8 %v3_a8d0 to i32
  store i32 %v4_a8d0, i32* %r3.global-to-local, align 4
  %v1_a8d4 = add i32 %v0_a8d0, 5
  %v2_a8d4 = inttoptr i32 %v1_a8d4 to i8*
  %v3_a8d4 = load i8, i8* %v2_a8d4, align 1
  %v4_a8d4 = zext i8 %v3_a8d4 to i32
  store i32 %v0_a8d0, i32* @r1, align 4
  %v4_a8dc = mul nuw nsw i32 %v4_a8d4, 256
  %v5_a8dc = or i32 %v4_a8dc, %v4_a8d0
  store i32 %v5_a8dc, i32* %r2.global-to-local, align 4
  %v0_a8e0 = load i32, i32* @sl, align 4
  %v1_a8e0 = trunc i32 %v0_a8e0 to i8
  %v3_a8e0 = add i32 %v0_a8d0, 6
  %v4_a8e0 = inttoptr i32 %v3_a8e0 to i8*
  store i8 %v1_a8e0, i8* %v4_a8e0, align 1
  store i32 %stack_var_-156.0.ph, i32* %r3.global-to-local, align 4
  %v0_a8e8 = load i32, i32* @sl, align 4
  %v1_a8e8 = trunc i32 %v0_a8e8 to i8
  %v2_a8e8 = load i32, i32* @r7, align 4
  %v3_a8e8 = add i32 %v2_a8e8, 7
  %v4_a8e8 = inttoptr i32 %v3_a8e8 to i8*
  store i8 %v1_a8e8, i8* %v4_a8e8, align 1
  %v0_a8ec = load i32, i32* @r6, align 4
  store i32 %v0_a8ec, i32* %r0.global-to-local, align 4
  %v4_a8f0 = call i32 @function_de50(i32 %v0_a8ec, i32 %v0_a8d0, i32 %v5_a8dc, i32 %stack_var_-156.0.ph)
  %v5_a8f0 = trunc i32 %v4_a8f0 to i8
  store i32 %v4_a8f0, i32* %r0.global-to-local, align 4
  %v3_a8f4 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_a8f4, i32* %r3.global-to-local, align 4
  %v3_a8f8 = mul i32 %v3_a8f4, 32
  store i32 %v3_a8f8, i32* %r2.global-to-local, align 4
  %v0_a8fc = load i32, i32* @r5, align 4
  %v1_a8fc = add i32 %v0_a8fc, 16
  %v2_a8fc = inttoptr i32 %v1_a8fc to i32*
  %v3_a8fc = load i32, i32* %v2_a8fc, align 4
  store i32 %v3_a8fc, i32* %r1.global-to-local, align 4
  %v5_a900 = mul i32 %v3_a8f4, 24
  store i32 %v5_a900, i32* %r2.global-to-local, align 4
  %v4_a90440 = udiv i32 %v4_a8f0, 256
  %v1_a908 = trunc i32 %v4_a90440 to i8
  %v2_a908 = load i32, i32* @r7, align 4
  %v3_a908 = add i32 %v2_a908, 7
  %v4_a908 = inttoptr i32 %v3_a908 to i8*
  store i8 %v1_a908, i8* %v4_a908, align 1
  %v0_a90c = load i32, i32* %r2.global-to-local, align 4
  %v1_a90c = load i32, i32* @sb, align 4
  %v2_a90c = add i32 %v1_a90c, %v0_a90c
  store i32 %v2_a90c, i32* %lr.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v3_a914 = load i32, i32* @r7, align 4
  %v4_a914 = add i32 %v3_a914, 6
  %v5_a914 = inttoptr i32 %v4_a914 to i8*
  store i8 %v5_a8f0, i8* %v5_a914, align 1
  %v0_a918 = load i32, i32* %r1.global-to-local, align 4
  %v1_a918 = load i32, i32* %lr.global-to-local, align 4
  %v2_a918 = add i32 %v1_a918, 4
  %v3_a918 = inttoptr i32 %v2_a918 to i32*
  store i32 %v0_a918, i32* %v3_a918, align 4
  %v0_a91c = load i32, i32* %r3.global-to-local, align 4
  %v1_a91c = trunc i32 %v0_a91c to i8
  %v2_a91c = load i32, i32* %r2.global-to-local, align 4
  %v3_a91c = load i32, i32* @sb, align 4
  %v4_a91c = add i32 %v3_a91c, %v2_a91c
  %v5_a91c = inttoptr i32 %v4_a91c to i8*
  store i8 %v1_a91c, i8* %v5_a91c, align 1
  %v0_a920 = load i32, i32* @sl, align 4
  %v1_a920 = trunc i32 %v0_a920 to i8
  %v2_a920 = load i32, i32* %lr.global-to-local, align 4
  %v3_a920 = add i32 %v2_a920, 2
  %v4_a920 = inttoptr i32 %v3_a920 to i8*
  store i8 %v1_a920, i8* %v4_a920, align 1
  %v0_a924 = load i32, i32* @sl, align 4
  %v1_a924 = trunc i32 %v0_a924 to i8
  %v2_a924 = load i32, i32* %lr.global-to-local, align 4
  %v3_a924 = add i32 %v2_a924, 1
  %v4_a924 = inttoptr i32 %v3_a924 to i8*
  store i8 %v1_a924, i8* %v4_a924, align 1
  %v0_a928 = load i32, i32* @sl, align 4
  %v1_a928 = trunc i32 %v0_a928 to i8
  %v2_a928 = load i32, i32* %lr.global-to-local, align 4
  %v3_a928 = add i32 %v2_a928, 3
  %v4_a928 = inttoptr i32 %v3_a928 to i8*
  store i8 %v1_a928, i8* %v4_a928, align 1
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_a934 = load i32, i32* @r5, align 4
  store i32 %v0_a934, i32* %r1.global-to-local, align 4
  store i32 %v3_a484, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-160.0.ph, i32* %r2.global-to-local, align 4
  %v0_a940 = load i32, i32* %lr.global-to-local, align 4
  %v4_a940 = inttoptr i32 %v0_a940 to %sockaddr*
  %v7_a948 = inttoptr i32 %v0_a934 to i32*
  %v9_a948 = call i32 @sendto(i32 %v3_a484, i32* %v7_a948, i32 %stack_var_-160.0.ph, i32 16384, %sockaddr* %v4_a940, i32 16)
  %v3_a94c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_a94c, i32* %r3.global-to-local, align 4
  %v1_a950 = add i32 %v3_a94c, 1
  store i32 %v1_a950, i32* %r0.global-to-local, align 4
  %v1_a954 = load i32, i32* @fp, align 4
  %v9_a954 = icmp eq i32 %v1_a950, %v1_a954
  store i1 %v9_a954, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a950, i32* %stack_var_-40, align 4
  %v6_a95c = icmp slt i32 %v1_a950, %v1_a954
  br i1 %v6_a95c, label %dec_label_pc_a7b4, label %dec_label_pc_a79c

dec_label_pc_a964:                                ; preds = %dec_label_pc_a494
  store i32 %v3_a484, i32* %r0.global-to-local, align 4
  %v1_a968 = call i32 @close(i32 %v3_a484)
  store i32 %v1_a968, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a96c

dec_label_pc_a96c:                                ; preds = %dec_label_pc_a330, %dec_label_pc_a964
  %v29_a970 = phi i32 [ -1, %dec_label_pc_a330 ], [ %v1_a968, %dec_label_pc_a964 ]
  store i32 %v3_a330, i32* %r4.global-to-local, align 4
  store i32 %v6_a330, i32* %r5.global-to-local, align 4
  store i32 %v9_a330, i32* %r6.global-to-local, align 4
  store i32 %v12_a330, i32* %r7.global-to-local, align 4
  store i32 %v15_a330, i32* %r8.global-to-local, align 4
  store i32 %v21_a330, i32* %sl.global-to-local, align 4
  ret i32 %v29_a970

dec_label_pc_a974:                                ; preds = %dec_label_pc_a7b4
  %v1_a974 = add i32 %v2_a7bc, 16
  %v2_a974 = inttoptr i32 %v1_a974 to i32*
  %v3_a974 = load i32, i32* %v2_a974, align 4
  store i32 %v3_a974, i32* %r4.global-to-local, align 4
  %v0_a978 = call i32 @function_f508()
  store i32 %v0_a978, i32* %r0.global-to-local, align 4
  %v3_a97c = load i32, i32* %stack_var_-40, align 4
  %v5_a984 = mul i32 %v3_a97c, 24
  %v0_a988 = load i32, i32* %r4.global-to-local, align 4
  %v1_a98c = load i32, i32* @sb, align 4
  %v2_a98c = add i32 %v1_a98c, %v5_a984
  store i32 %v2_a98c, i32* %r1.global-to-local, align 4
  %v1_a990 = and i32 %v0_a988, 65280
  store i32 %v1_a990, i32* %r3.global-to-local, align 4
  %v1_a988 = udiv i32 %v0_a988, 256
  %v3_a994 = and i32 %v1_a988, 65280
  store i32 %v3_a994, i32* %r2.global-to-local, align 4
  %v3_a998 = mul i32 %v0_a988, 16777216
  store i32 %v3_a998, i32* %ip.global-to-local, align 4
  %v1_a99c = add i32 %v2_a98c, 20
  %v2_a99c = inttoptr i32 %v1_a99c to i8*
  %v3_a99c = load i8, i8* %v2_a99c, align 1
  %v4_a99c = zext i8 %v3_a99c to i32
  store i32 %v4_a99c, i32* %lr.global-to-local, align 4
  %v4_a9a0 = mul nuw nsw i32 %v1_a990, 256
  %v5_a9a0 = or i32 %v4_a9a0, %v3_a998
  store i32 %v5_a9a0, i32* %ip.global-to-local, align 4
  %v2_a9a8 = call i32 @llvm.bswap.i32(i32 %v0_a988)
  %v7_a9ac = lshr i32 %v0_a978, %v4_a99c
  %v8_a9ac = add i32 %v7_a9ac, %v2_a9a8
  %v3_a9b8 = mul i32 %v8_a9ac, 16777216
  %v1_a9bc = and i32 %v8_a9ac, 65280
  store i32 %v1_a9bc, i32* %r0.global-to-local, align 4
  store i32 %v5_a470, i32* %r2.global-to-local, align 4
  %v4_a9c8 = mul nuw nsw i32 %v1_a9bc, 256
  %v5_a9c8 = or i32 %v4_a9c8, %v3_a9b8
  store i32 %v5_a9c8, i32* %r1.global-to-local, align 4
  %v2_a9cc = call i32 @llvm.bswap.i32(i32 %v8_a9ac)
  store i32 %v2_a9cc, i32* %r3.global-to-local, align 4
  store i1 %v2_a7e4, i1* %cpsr_z.global-to-local, align 1
  %v1_a9d4 = load i32, i32* @r5, align 4
  %v2_a9d4 = add i32 %v1_a9d4, 16
  %v3_a9d4 = inttoptr i32 %v2_a9d4 to i32*
  store i32 %v2_a9cc, i32* %v3_a9d4, align 4
  br i1 %v2_a7e4, label %dec_label_pc_a9dc, label %dec_label_pc_a7ec

dec_label_pc_a9dc:                                ; preds = %dec_label_pc_a974, %dec_label_pc_a7e0
  %v0_a9dc = call i32 @function_f508()
  store i32 %v0_a9dc, i32* %r0.global-to-local, align 4
  store i32 %v3_a4d4, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_a9ec, i1* %cpsr_z.global-to-local, align 1
  %v1_a9f0 = load i32, i32* @r5, align 4
  %v2_a9f0 = add i32 %v1_a9f0, 12
  %v3_a9f0 = inttoptr i32 %v2_a9f0 to i32*
  store i32 %v0_a9dc, i32* %v3_a9f0, align 4
  br i1 %v3_a9ec, label %dec_label_pc_a9f8, label %dec_label_pc_a9dc.dec_label_pc_a800_crit_edge

dec_label_pc_a9dc.dec_label_pc_a800_crit_edge:    ; preds = %dec_label_pc_a9dc
  %v1_a804.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_a800

dec_label_pc_a9f8:                                ; preds = %dec_label_pc_a9dc, %dec_label_pc_a7ec
  %v0_a9f8 = call i32 @function_f508()
  %v3_aa00 = urem i32 %v0_a9f8, 65536
  store i32 %v3_aa00, i32* %r0.global-to-local, align 4
  %v1_aa08 = sub nsw i32 999, %v3_aa00
  store i32 %v1_aa08, i32* %r2.global-to-local, align 4
  %v3_aa0c = sdiv i32 %v1_aa08, 256
  store i32 %v3_aa0c, i32* %r1.global-to-local, align 4
  %v3_aa1039 = udiv i32 %v3_aa00, 256
  store i32 %v3_aa1039, i32* %r3.global-to-local, align 4
  %v1_aa14 = trunc i32 %v3_aa1039 to i8
  %v2_aa14 = load i32, i32* @r5, align 4
  %v3_aa14 = add i32 %v2_aa14, 5
  %v4_aa14 = inttoptr i32 %v3_aa14 to i8*
  store i8 %v1_aa14, i8* %v4_aa14, align 1
  %v0_aa18 = load i32, i32* %r0.global-to-local, align 4
  %v1_aa18 = trunc i32 %v0_aa18 to i8
  %v2_aa18 = load i32, i32* @r5, align 4
  %v3_aa18 = add i32 %v2_aa18, 4
  %v4_aa18 = inttoptr i32 %v3_aa18 to i8*
  store i8 %v1_aa18, i8* %v4_aa18, align 1
  %v0_aa1c = load i32, i32* %r1.global-to-local, align 4
  %v1_aa1c = trunc i32 %v0_aa1c to i8
  %v2_aa1c = load i32, i32* @r6, align 4
  %v3_aa1c = add i32 %v2_aa1c, 5
  %v4_aa1c = inttoptr i32 %v3_aa1c to i8*
  store i8 %v1_aa1c, i8* %v4_aa1c, align 1
  store i32 %v3_a4d8, i32* %r1.global-to-local, align 4
  %v1_aa24 = load i32, i32* @r4, align 4
  %v9_aa24 = icmp eq i32 %v3_a4d8, %v1_aa24
  store i1 %v9_aa24, i1* %cpsr_z.global-to-local, align 1
  %v0_aa28 = load i32, i32* %r2.global-to-local, align 4
  %v1_aa28 = trunc i32 %v0_aa28 to i8
  %v2_aa28 = load i32, i32* @r6, align 4
  %v3_aa28 = add i32 %v2_aa28, 4
  %v4_aa28 = inttoptr i32 %v3_aa28 to i8*
  store i8 %v1_aa28, i8* %v4_aa28, align 1
  %v0_aa2c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_aa2c, label %dec_label_pc_aa30, label %dec_label_pc_a9f8.dec_label_pc_a80c_crit_edge

dec_label_pc_a9f8.dec_label_pc_a80c_crit_edge:    ; preds = %dec_label_pc_a9f8
  %v1_a810.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_a80c

dec_label_pc_aa30:                                ; preds = %dec_label_pc_a9f8, %dec_label_pc_a800
  %v0_aa30 = call i32 @function_f508()
  %v1_aa30 = trunc i32 %v0_aa30 to i8
  store i32 %v0_aa30, i32* %r0.global-to-local, align 4
  store i32 %v3_a4dc, i32* %r2.global-to-local, align 4
  %v4_aa38 = sdiv i32 %v0_aa30, 256
  store i32 %v4_aa38, i32* %r3.global-to-local, align 4
  %v1_aa3c = load i32, i32* @r4, align 4
  %v9_aa3c = icmp eq i32 %v3_a4dc, %v1_aa3c
  store i1 %v9_aa3c, i1* %cpsr_z.global-to-local, align 1
  %v3_aa40 = load i32, i32* @r5, align 4
  %v4_aa40 = add i32 %v3_aa40, 58
  %v5_aa40 = inttoptr i32 %v4_aa40 to i8*
  store i8 %v1_aa30, i8* %v5_aa40, align 1
  %v0_aa44 = load i32, i32* %r3.global-to-local, align 4
  %v1_aa44 = trunc i32 %v0_aa44 to i8
  %v2_aa44 = load i32, i32* @r7, align 4
  %v3_aa44 = add i32 %v2_aa44, 1
  %v4_aa44 = inttoptr i32 %v3_aa44 to i8*
  store i8 %v1_aa44, i8* %v4_aa44, align 1
  %v0_aa48 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_aa48, label %dec_label_pc_aa4c, label %dec_label_pc_a818

dec_label_pc_aa4c:                                ; preds = %dec_label_pc_aa30, %dec_label_pc_a80c
  %v0_aa4c = call i32 @function_f508()
  %v1_aa4c = trunc i32 %v0_aa4c to i8
  store i32 %v0_aa4c, i32* %r0.global-to-local, align 4
  %v4_aa5041 = udiv i32 %v0_aa4c, 256
  %v1_aa54 = trunc i32 %v4_aa5041 to i8
  %v2_aa54 = load i32, i32* @r7, align 4
  %v3_aa54 = add i32 %v2_aa54, 3
  %v4_aa54 = inttoptr i32 %v3_aa54 to i8*
  store i8 %v1_aa54, i8* %v4_aa54, align 1
  store i32 %v1_a4cc, i32* %r3.global-to-local, align 4
  store i1 %v2_aa5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_aa5c, label %bb101, label %bb100

bb100:                                            ; preds = %dec_label_pc_aa4c
  %v1_aa60 = load i32, i32* @r5, align 4
  %v2_aa60 = add i32 %v1_aa60, 16
  %v3_aa60 = inttoptr i32 %v2_aa60 to i32*
  %v4_aa60 = load i32, i32* %v3_aa60, align 4
  store i32 %v4_aa60, i32* %r3.global-to-local, align 4
  br label %bb101

bb101:                                            ; preds = %dec_label_pc_aa4c, %bb100
  %v3_aa64 = load i32, i32* @r7, align 4
  %v4_aa64 = add i32 %v3_aa64, 2
  %v5_aa64 = inttoptr i32 %v4_aa64 to i8*
  store i8 %v1_aa4c, i8* %v5_aa64, align 1
  %v0_aa68 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_aa68, label %dec_label_pc_aa70, label %bb102

bb102:                                            ; preds = %bb101
  %v1_aa68 = load i32, i32* %r3.global-to-local, align 4
  %v2_aa68 = load i32, i32* @r6, align 4
  %v3_aa68 = add i32 %v2_aa68, 16
  %v4_aa68 = inttoptr i32 %v3_aa68 to i32*
  store i32 %v1_aa68, i32* %v4_aa68, align 4
  br label %dec_label_pc_a82c

dec_label_pc_aa70:                                ; preds = %dec_label_pc_a818, %bb101
  %v0_aa70 = call i32 @function_f508()
  store i32 %v0_aa70, i32* %r0.global-to-local, align 4
  %v1_aa74 = load i32, i32* @r6, align 4
  %v2_aa74 = add i32 %v1_aa74, 16
  %v3_aa74 = inttoptr i32 %v2_aa74 to i32*
  store i32 %v0_aa70, i32* %v3_aa74, align 4
  br label %dec_label_pc_a82c

dec_label_pc_aa7c:                                ; preds = %dec_label_pc_a82c
  %v0_aa7c = load i32, i32* @r7, align 4
  %v1_aa7c = add i32 %v0_aa7c, 8
  store i32 %v1_aa7c, i32* %r0.global-to-local, align 4
  store i32 %v5_a41c, i32* @r1, align 4
  %v1_aa84 = inttoptr i32 %v1_aa7c to i8*
  %v2_aa84 = call i32 @function_f688(i8* %v1_aa84)
  store i32 %v2_aa84, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a890

dec_label_pc_aa8c:                                ; preds = %dec_label_pc_a4bc
  %v1_aa94 = add i32 %v5_a41c, 8
  store i32 %v1_aa94, i32* %r1.global-to-local, align 4
  %v1_aa98 = add i32 %v5_a41c, 66
  store i32 %v1_aa98, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_a79c.preheader

; uselistorder directives
  uselistorder i32 %v1_aa98, { 1, 0 }
  uselistorder i32 %v1_aa94, { 1, 0 }
  uselistorder i32 %v0_aa4c, { 0, 2, 1 }
  uselistorder i32 %v0_aa30, { 0, 2, 1 }
  uselistorder i32 %v3_aa00, { 0, 2, 1 }
  uselistorder i32 %v2_a9cc, { 1, 0 }
  uselistorder i32 %v8_a9ac, { 1, 2, 0 }
  uselistorder i32 %v3_a998, { 1, 0 }
  uselistorder i32 %v0_a988, { 2, 0, 1, 3 }
  uselistorder i32 %v1_a954, { 1, 2, 0 }
  uselistorder i32 %v1_a950, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v3_a8f4, { 1, 0, 2 }
  uselistorder i32 %v4_a8f0, { 0, 2, 1 }
  uselistorder i32 %v0_a8d0, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_a8c0, { 0, 2, 1 }
  uselistorder i32 %v4_a8a4, { 1, 0 }
  uselistorder i32 %v7_a7c8, { 2, 1, 0, 3 }
  uselistorder i32 %v0_a79c, { 1, 0 }
  uselistorder i1 %v2_a7e4, { 3, 0, 1, 2 }
  uselistorder i1 %v2_aa5c, { 2, 3, 1, 0 }
  uselistorder i1 %v3_a9ec, { 1, 0, 2, 3 }
  uselistorder i32 %v0_a724, { 1, 0, 2 }
  uselistorder i32 %v3_a58c, { 1, 0 }
  uselistorder i32 %tmp89, { 1, 0 }
  uselistorder i32 %v1_a530, { 1, 0 }
  uselistorder i32 %v1_a52c, { 2, 1, 0 }
  uselistorder i32 %v1_a518, { 1, 0 }
  uselistorder i32 %v1_a514, { 2, 1, 0 }
  uselistorder i32 %v1_a50c, { 0, 2, 1 }
  uselistorder i32 %v3_a504, { 2, 1, 0 }
  uselistorder i32 %v0_a4e0, { 1, 0, 2 }
  uselistorder i32 %v3_a4d4, { 2, 1, 3, 0 }
  uselistorder i32 %v1_a4cc, { 4, 3, 5, 1, 2, 0 }
  uselistorder i32 %v3_a4c8, { 2, 0, 1 }
  uselistorder i32 %v0_a4c8, { 2, 1, 0 }
  uselistorder i32 %v0_a4c0, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_a4bc, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v3_a484, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder i32 %v5_a470, { 4, 2, 3, 1, 0 }
  uselistorder i32 %v1_a43c, { 1, 2, 0 }
  uselistorder i32 %v5_a41c, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_a3d0, { 1, 0 }
  uselistorder i8 %v5_a3c0, { 1, 0 }
  uselistorder i32 %v5_a3a4, { 1, 0 }
  uselistorder i32 %v6_a368, { 1, 0 }
  uselistorder i32 %v4_a350, { 0, 3, 1, 2 }
  uselistorder i32 %v1_a334, { 2, 1, 0 }
  uselistorder i32* %stack_var_-40, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 12, 11 }
  uselistorder i32* %r3.global-to-local, { 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 43, 45, 46, 47, 48, 49, 50, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 37, 39, 40, 42, 41, 43, 44, 46, 45, 48, 47, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 3, 6, 7, 4, 5, 9, 8, 10, 13, 11, 12, 14, 16, 15, 17, 19, 18, 20, 21, 22, 23, 25, 24, 29, 26, 27, 28, 32, 30, 31, 33, 35, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 19, 23, 24, 25, 26, 27 }
  uselistorder label %dec_label_pc_aa70, { 1, 0 }
  uselistorder label %bb101, { 1, 0 }
  uselistorder label %dec_label_pc_a96c, { 1, 0 }
  uselistorder label %dec_label_pc_a890, { 1, 0 }
  uselistorder label %dec_label_pc_a82c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a79c.preheader, { 1, 0 }
  uselistorder label %bb98, { 1, 0 }
  uselistorder label %bb97, { 1, 0 }
  uselistorder label %bb95, { 1, 0 }
  uselistorder label %bb93, { 1, 0 }
  uselistorder label %.thread22, { 2, 1, 0 }
}

define i32 @function_aaac(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_aaac:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_aaac = load i32, i32* @r4, align 4
  %v6_aaac = load i32, i32* @r5, align 4
  %v9_aaac = load i32, i32* @r6, align 4
  %v12_aaac = load i32, i32* @r7, align 4
  %v15_aaac = load i32, i32* @r8, align 4
  %v1_aab0 = urem i32 %arg1, 256
  store i32 %v1_aab0, i32* @fp, align 4
  store i32 %arg2, i32* @sb, align 4
  store i32 %v1_aab0, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  %v1_aac8 = urem i32 %arg3, 256
  store i32 %v1_aac8, i32* @r4, align 4
  %v2_aacc = call i32* @calloc(i32 %v1_aab0, i32 4)
  %v4_aacc = ptrtoint i32* %v2_aacc to i32
  %v0_aad0 = load i32, i32* @r5, align 4
  store i32 %v0_aad0, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_aae0 = load i32, i32* @r4, align 4
  store i32 %v0_aae0, i32* %r0.global-to-local, align 4
  %v5_aae4 = inttoptr i32 %v0_aad0 to i32*
  %v6_aae4 = call i32 @function_92dc(i32 %v0_aae0, i32* %v5_aae4, i32 2, i32 0)
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_aafc = load i32, i32* @r5, align 4
  store i32 %v0_aafc, i32* %r1.global-to-local, align 4
  %v0_ab00 = load i32, i32* @r4, align 4
  store i32 %v0_ab00, i32* %r0.global-to-local, align 4
  %v5_ab04 = trunc i32 %v6_aae4 to i8
  %v6_ab08 = inttoptr i32 %v0_aafc to i32*
  %v7_ab08 = call i32 @function_92dc(i32 %v0_ab00, i32* %v6_ab08, i32 3, i32 65535)
  %v0_ab0c = load i32, i32* @r5, align 4
  store i32 %v0_ab0c, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_ab08, i32* @r7, align 4
  %v0_ab1c = load i32, i32* @r4, align 4
  store i32 %v0_ab1c, i32* %r0.global-to-local, align 4
  %v4_ab20 = inttoptr i32 %v0_ab0c to i32*
  %v5_ab20 = call i32 @function_92dc(i32 %v0_ab1c, i32* %v4_ab20, i32 4, i32 64)
  %v0_ab2c = load i32, i32* @r5, align 4
  store i32 %v0_ab2c, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_ab38 = load i32, i32* @r4, align 4
  store i32 %v0_ab38, i32* %r0.global-to-local, align 4
  %v5_ab3c = trunc i32 %v5_ab20 to i8
  %v6_ab40 = inttoptr i32 %v0_ab2c to i32*
  %v7_ab40 = call i32 @function_92dc(i32 %v0_ab38, i32* %v6_ab40, i32 5, i32 1)
  %v1_ab4c = urem i32 %v7_ab40, 256
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_ab58 = load i32, i32* @r5, align 4
  store i32 %v0_ab58, i32* %r1.global-to-local, align 4
  %v0_ab5c = load i32, i32* @r4, align 4
  store i32 %v0_ab5c, i32* %r0.global-to-local, align 4
  %v5_ab64 = inttoptr i32 %v0_ab58 to i32*
  %v6_ab64 = call i32 @function_92dc(i32 %v0_ab5c, i32* %v5_ab64, i32 6, i32 65535)
  %v0_ab6c = load i32, i32* @r5, align 4
  store i32 %v0_ab6c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_ab64, i32* @sl, align 4
  %v0_ab7c = load i32, i32* @r4, align 4
  store i32 %v0_ab7c, i32* %r0.global-to-local, align 4
  %v4_ab80 = inttoptr i32 %v0_ab6c to i32*
  %v5_ab80 = call i32 @function_92dc(i32 %v0_ab7c, i32* %v4_ab80, i32 7, i32 65535)
  %v0_ab84 = load i32, i32* @r5, align 4
  store i32 %v0_ab84, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v5_ab80, i32* @r8, align 4
  %v0_ab94 = load i32, i32* @r4, align 4
  store i32 %v0_ab94, i32* %r0.global-to-local, align 4
  %v4_ab98 = inttoptr i32 %v0_ab84 to i32*
  %v5_ab98 = call i32 @function_92dc(i32 %v0_ab94, i32* %v4_ab98, i32 0, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_aba8 = load i32, i32* @r5, align 4
  store i32 %v0_aba8, i32* %r1.global-to-local, align 4
  %v0_abac = load i32, i32* @r4, align 4
  store i32 %v0_abac, i32* %r0.global-to-local, align 4
  %v4_abb0 = inttoptr i32 %v0_aba8 to i32*
  %v5_abb0 = call i32 @function_92dc(i32 %v0_abac, i32* %v4_abb0, i32 1, i32 1)
  %v1_abb8 = urem i32 %v5_abb0, 256
  %v0_abbc = load i32, i32* @r5, align 4
  store i32 %v0_abbc, i32* %r1.global-to-local, align 4
  store i32 19, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_abc8 = load i32, i32* @r4, align 4
  store i32 %v0_abc8, i32* %r0.global-to-local, align 4
  %v5_abd0 = inttoptr i32 %v0_abbc to i32*
  %v6_abd0 = call i32 @function_92dc(i32 %v0_abc8, i32* %v5_abd0, i32 19, i32 0)
  %v0_abd8 = load i32, i32* @r5, align 4
  store i32 %v0_abd8, i32* %r1.global-to-local, align 4
  %v2_abdc = load i32, i32* @global_var_1bd28.110, align 4
  store i32 %v2_abdc, i32* %r3.global-to-local, align 4
  store i32 %v6_abd0, i32* @r6, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_abe8 = load i32, i32* @r4, align 4
  store i32 %v0_abe8, i32* %r0.global-to-local, align 4
  %v4_abec = inttoptr i32 %v0_abd8 to i32*
  %v5_abec = call i32 @function_92dc(i32 %v0_abe8, i32* %v4_abec, i32 25, i32 %v2_abdc)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_ac00 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_ac00, i32* %r0.global-to-local, align 4
  %v2_ac04 = icmp eq i32 %v3_ac00, -1
  store i1 %v2_ac04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ac04, label %dec_label_pc_b084, label %dec_label_pc_ac10

dec_label_pc_ac10:                                ; preds = %dec_label_pc_aaac
  store i32 1, i32* %stack_var_-40, align 4
  %v6_ac18 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_ac18, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v7_ac2c = call i32 @setsockopt(i32 %v3_ac00, i32 0, i32 3, i32* nonnull %stack_var_-40, i32 4)
  store i32 %v7_ac2c, i32* %r0.global-to-local, align 4
  %v2_ac30 = icmp eq i32 %v7_ac2c, -1
  store i1 %v2_ac30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ac30, label %dec_label_pc_b07c, label %dec_label_pc_ac38

dec_label_pc_ac38:                                ; preds = %dec_label_pc_ac10
  %v0_ac38 = load i32, i32* @sl, align 4
  %v0_ac44 = load i32, i32* @r8, align 4
  %v3_ac44 = mul i32 %v0_ac44, 65536
  store i32 %v3_ac44, i32* %r8.global-to-local, align 4
  %v0_ac48 = load i32, i32* @r7, align 4
  %v3_ac48 = mul i32 %v0_ac48, 65536
  store i32 %v3_ac48, i32* %r7.global-to-local, align 4
  %v0_ac4c = load i32, i32* @r6, align 4
  %v1_ac4c = urem i32 %v0_ac4c, 256
  store i32 %v1_ac4c, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_ac54 = urem i32 %v0_ac38, 65536
  store i32 %v3_ac54, i32* %r2.global-to-local, align 4
  %v3_ac58 = urem i32 %v0_ac44, 65536
  store i32 %v3_ac58, i32* %r3.global-to-local, align 4
  %v0_ac5c = load i32, i32* @fp, align 4
  %v2_ac5c = icmp eq i32 %v0_ac5c, 0
  store i1 %v2_ac5c, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-40, align 4
  %v3_ac6c = urem i32 %v0_ac48, 65536
  store i32 %v3_ac6c, i32* @sl, align 4
  %tmp85 = icmp slt i32 %v0_ac5c, 1
  br i1 %tmp85, label %dec_label_pc_b1a8, label %dec_label_pc_ac7c

dec_label_pc_ac7c:                                ; preds = %dec_label_pc_ac38
  %v3_ac80 = mul i32 %v5_ab98, 65536
  %v1_ac84 = add i32 %v3_ac80, 3407872
  %v3_ac8c = udiv i32 %v1_ac84, 256
  %v0_ac48.not = or i32 %v0_ac48, -65536
  %v1_ac9c = xor i32 %v0_ac48.not, 65535
  %v1_aca0 = urem i32 %v0_ac44, 256
  %tmp86 = mul nsw i32 %v1_ac9c, 256
  %v1_acb8 = and i32 %v3_ac8c, 65280
  %v1_acbc = add i32 %v3_ac80, 524288
  %v4_acc0 = udiv i32 %v1_ac84, 16777216
  %v5_acc0 = or i32 %v1_acb8, %v4_acc0
  store i32 %v5_acc0, i32* %r0.global-to-local, align 4
  %v1_acc4 = add i32 %v3_ac80, 1835008
  %v1_accc = and i32 %tmp86, 65280
  store i32 %v1_accc, i32* %lr.global-to-local, align 4
  %tmp87 = udiv i32 %v1_ac9c, 256
  %tmp88 = udiv i32 %v0_ac48, 256
  %v5_ace0 = trunc i32 %tmp87 to i8
  %tmp89 = udiv i32 %v0_ac38, 256
  %sext30 = mul i32 %tmp88, 16777216
  %v4_ad00 = sdiv i32 %sext30, 16777216
  %v3_ad0c = mul nuw nsw i32 %v1_aca0, 256
  store i32 %v3_ad0c, i32* %r5.global-to-local, align 4
  %v3_ad10 = udiv i32 %v1_acbc, 256
  %tmp90 = udiv i32 %v0_ac44, 256
  %v4_ad18 = urem i32 %tmp90, 256
  %v5_ad18 = or i32 %v4_ad18, %v3_ad0c
  store i32 %v5_ad18, i32* %r7.global-to-local, align 4
  %v3_ad1c = ashr i32 %sext30, 31
  %v3_ad28 = sdiv i32 %v1_acc4, 16777216
  %v1_ad2c = and i32 %v3_ad10, 65280
  store i32 %v1_ad2c, i32* %r6.global-to-local, align 4
  %sext31 = mul i32 %tmp89, 16777216
  %v4_ad34 = sdiv i32 %sext31, 16777216
  %v3_ad38 = ashr i32 %v1_acc4, 31
  %v3_ad3c = udiv i32 %v1_ac9c, 65536
  %v4_ad40 = udiv i32 %v1_acbc, 16777216
  %v5_ad40 = or i32 %v1_ad2c, %v4_ad40
  store i32 %v5_ad40, i32* %r8.global-to-local, align 4
  %v3_ad4c = ashr i32 %sext31, 31
  store i32 %v3_ad4c, i32* %r1.global-to-local, align 4
  store i32 %v1_aca0, i32* %r2.global-to-local, align 4
  %v3_ad5442 = udiv i32 %v1_ad2c, 256
  store i32 %v3_ad5442, i32* %r3.global-to-local, align 4
  %v5_ad5c = trunc i32 %v3_ad4c to i8
  store i32 0, i32* %r4.global-to-local, align 4
  %v4_adb8 = sext i8 %v5_ab3c to i32
  %sext = mul i32 %v1_ac84, 256
  %v4_adc0 = sdiv i32 %sext, 16777216
  %sext17 = mul nuw i32 %v4_acc0, 16777216
  %v4_add0 = sdiv i32 %sext17, 16777216
  %v2_aea4 = icmp eq i32 %v1_ac4c, 0
  %sext21 = mul i32 %v1_acbc, 256
  %v4_aec4 = sdiv i32 %sext21, 16777216
  %sext22 = mul i32 %v0_ac44, 16777216
  %v7_aedc = sdiv i32 %sext22, 16777216
  %v1_adcc = trunc i32 %v4_adc0 to i8
  br label %dec_label_pc_ad6c

dec_label_pc_ad6c:                                ; preds = %bb97, %dec_label_pc_ac7c
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_ad78 = call i32* @calloc(i32 1510, i32 4)
  %v4_ad78 = ptrtoint i32* %v2_ad78 to i32
  store i32 %v4_ad78, i32* %r0.global-to-local, align 4
  store i32 %v4_aacc, i32* %r1.global-to-local, align 4
  %v3_ad80 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_ad80, i32* %r3.global-to-local, align 4
  %v2_ad84 = load i32, i32* %r4.global-to-local, align 4
  %v5_ad84 = mul i32 %v2_ad84, 4
  %v6_ad84 = add i32 %v5_ad84, %v4_aacc
  %v7_ad84 = inttoptr i32 %v6_ad84 to i32*
  store i32 %v4_ad78, i32* %v7_ad84, align 4
  %v0_ad88 = load i32, i32* %r1.global-to-local, align 4
  %v1_ad88 = load i32, i32* %r3.global-to-local, align 4
  %v4_ad88 = mul i32 %v1_ad88, 4
  %v5_ad88 = add i32 %v4_ad88, %v0_ad88
  %v6_ad88 = inttoptr i32 %v5_ad88 to i32*
  %v7_ad88 = load i32, i32* %v6_ad88, align 4
  store i32 %v7_ad88, i32* %r4.global-to-local, align 4
  %v1_ad8c = inttoptr i32 %v7_ad88 to i8*
  %v2_ad8c = load i8, i8* %v1_ad8c, align 1
  %tmp = urem i8 %v2_ad8c, 16
  %v1_ad90 = zext i8 %tmp to i32
  %v1_ad94 = or i32 %v1_ad90, 64
  store i32 %v1_ad94, i32* %r2.global-to-local, align 4
  %v1_ad98 = trunc i32 %v1_ad94 to i8
  store i8 %v1_ad98, i8* %v1_ad8c, align 1
  %v0_ad9c = load i32, i32* %r4.global-to-local, align 4
  %v1_ad9c = inttoptr i32 %v0_ad9c to i8*
  %v2_ad9c = load i8, i8* %v1_ad9c, align 1
  %v1_ada0 = and i8 %v2_ad9c, -16
  %v1_ada4 = or i8 %v1_ada0, 5
  store i32 %v1_ab4c, i32* %r2.global-to-local, align 4
  store i8 %v1_ada4, i8* %v1_ad9c, align 1
  %v2_adb4 = load i32, i32* %r4.global-to-local, align 4
  %v3_adb4 = add i32 %v2_adb4, 1
  %v4_adb4 = inttoptr i32 %v3_adb4 to i8*
  store i8 %v5_ab04, i8* %v4_adb4, align 1
  store i32 %v4_adb8, i32* %r1.global-to-local, align 4
  %v2_adbc = load i32, i32* %r4.global-to-local, align 4
  %v3_adbc = add i32 %v2_adbc, 8
  %v4_adbc = inttoptr i32 %v3_adbc to i8*
  store i8 %v5_ab3c, i8* %v4_adbc, align 1
  store i32 %v4_adc0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_adc8 = load i32, i32* %r2.global-to-local, align 4
  %v9_adc8 = icmp eq i32 %v0_adc8, 0
  store i1 %v9_adc8, i1* %cpsr_z.global-to-local, align 1
  %v2_adcc = load i32, i32* %r4.global-to-local, align 4
  %v3_adcc = add i32 %v2_adcc, 3
  %v4_adcc = inttoptr i32 %v3_adcc to i8*
  store i8 %v1_adcc, i8* %v4_adcc, align 1
  store i32 %v4_add0, i32* %r2.global-to-local, align 4
  %v0_add4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_add4, label %.thread24, label %.thread

.thread:                                          ; preds = %dec_label_pc_ad6c
  %v1_add4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v1_add4, i32* %r3.global-to-local, align 4
  %v2_add8 = trunc i32 %v1_add4 to i8
  %v3_add8 = load i32, i32* %r4.global-to-local, align 4
  %v4_add8 = add i32 %v3_add8, 7
  %v5_add8 = inttoptr i32 %v4_add8 to i8*
  store i8 %v2_add8, i8* %v5_add8, align 1
  %v0_addc.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_addc.pr.pr, label %.thread24, label %bb

bb:                                               ; preds = %.thread
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_ade0 = load i32, i32* %r4.global-to-local, align 4
  %v4_ade0 = add i32 %v3_ade0, 6
  %v5_ade0 = inttoptr i32 %v4_ade0 to i8*
  store i8 64, i8* %v5_ade0, align 1
  br label %.thread24

.thread24:                                        ; preds = %dec_label_pc_ad6c, %.thread, %bb
  %v0_ade4 = load i32, i32* %r2.global-to-local, align 4
  %v1_ade4 = trunc i32 %v0_ade4 to i8
  %v2_ade4 = load i32, i32* %r4.global-to-local, align 4
  %v3_ade4 = add i32 %v2_ade4, 2
  %v4_ade4 = inttoptr i32 %v3_ade4 to i8*
  store i8 %v1_ade4, i8* %v4_ade4, align 1
  store i32 %v3_ad1c, i32* %r2.global-to-local, align 4
  store i32 %v4_ad00, i32* %r1.global-to-local, align 4
  %v2_adf4 = load i32, i32* %r4.global-to-local, align 4
  %v3_adf4 = add i32 %v2_adf4, 9
  %v4_adf4 = inttoptr i32 %v3_adf4 to i8*
  store i8 47, i8* %v4_adf4, align 1
  %v0_adf8 = load i32, i32* %r2.global-to-local, align 4
  %v1_adf8 = trunc i32 %v0_adf8 to i8
  %v2_adf8 = load i32, i32* %r4.global-to-local, align 4
  %v3_adf8 = add i32 %v2_adf8, 5
  %v4_adf8 = inttoptr i32 %v3_adf8 to i8*
  store i8 %v1_adf8, i8* %v4_adf8, align 1
  %v3_adfc = load i32, i32* %stack_var_-40, align 4
  %v5_ae04 = mul i32 %v3_adfc, 24
  store i32 %v5_ae04, i32* %r3.global-to-local, align 4
  store i32 %v5_abec, i32* %r2.global-to-local, align 4
  %v1_ae0c = load i32, i32* %r4.global-to-local, align 4
  %v2_ae0c = add i32 %v1_ae0c, 12
  %v3_ae0c = inttoptr i32 %v2_ae0c to i32*
  store i32 %v5_abec, i32* %v3_ae0c, align 4
  %v0_ae10 = load i32, i32* %r3.global-to-local, align 4
  %v1_ae10 = load i32, i32* @sb, align 4
  %v2_ae10 = add i32 %v1_ae10, %v0_ae10
  store i32 %v2_ae10, i32* %r3.global-to-local, align 4
  %v0_ae14 = load i32, i32* %r1.global-to-local, align 4
  %v1_ae14 = trunc i32 %v0_ae14 to i8
  %v2_ae14 = load i32, i32* %r4.global-to-local, align 4
  %v3_ae14 = add i32 %v2_ae14, 4
  %v4_ae14 = inttoptr i32 %v3_ae14 to i8*
  store i8 %v1_ae14, i8* %v4_ae14, align 1
  %v0_ae18 = load i32, i32* %r3.global-to-local, align 4
  %v1_ae18 = add i32 %v0_ae18, 16
  %v2_ae18 = inttoptr i32 %v1_ae18 to i32*
  %v3_ae18 = load i32, i32* %v2_ae18, align 4
  store i32 %v3_ae18, i32* %r2.global-to-local, align 4
  %v0_ae1c = load i32, i32* %r4.global-to-local, align 4
  %v1_ae1c = add i32 %v0_ae1c, 20
  store i32 %v1_ae1c, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  %v0_ae24 = load i32, i32* %r0.global-to-local, align 4
  %v1_ae24 = trunc i32 %v0_ae24 to i8
  %v3_ae24 = add i32 %v0_ae1c, 23
  %v4_ae24 = inttoptr i32 %v3_ae24 to i8*
  store i8 %v1_ae24, i8* %v4_ae24, align 1
  %v0_ae28 = load i32, i32* %r3.global-to-local, align 4
  %v1_ae28 = trunc i32 %v0_ae28 to i8
  %v2_ae28 = load i32, i32* %r1.global-to-local, align 4
  %v3_ae28 = add i32 %v2_ae28, 2
  %v4_ae28 = inttoptr i32 %v3_ae28 to i8*
  store i8 %v1_ae28, i8* %v4_ae28, align 1
  %v0_ae2c = load i32, i32* %r4.global-to-local, align 4
  %v1_ae2c = add i32 %v0_ae2c, 24
  %v2_ae2c = inttoptr i32 %v1_ae2c to i8*
  %v3_ae2c = load i8, i8* %v2_ae2c, align 1
  %tmp105 = urem i8 %v3_ae2c, 16
  %v1_ae30 = zext i8 %tmp105 to i32
  %v1_ae34 = or i32 %v1_ae30, 64
  store i32 %v1_ae34, i32* %r3.global-to-local, align 4
  %v1_ae38 = trunc i32 %v1_ae34 to i8
  store i8 %v1_ae38, i8* %v2_ae2c, align 1
  %v0_ae3c = load i32, i32* %r2.global-to-local, align 4
  %v1_ae3c = load i32, i32* %r4.global-to-local, align 4
  %v2_ae3c = add i32 %v1_ae3c, 16
  %v3_ae3c = inttoptr i32 %v2_ae3c to i32*
  store i32 %v0_ae3c, i32* %v3_ae3c, align 4
  %v0_ae40 = load i32, i32* %r4.global-to-local, align 4
  %v1_ae40 = add i32 %v0_ae40, 24
  %v2_ae40 = inttoptr i32 %v1_ae40 to i8*
  %v3_ae40 = load i8, i8* %v2_ae40, align 1
  %v1_ae44 = and i8 %v3_ae40, -16
  %v1_ae48 = or i8 %v1_ae44, 5
  store i8 %v1_ae48, i8* %v2_ae40, align 1
  %v0_ae54 = load i32, i32* %r4.global-to-local, align 4
  %v1_ae54 = add i32 %v0_ae54, 24
  store i32 %v1_ae54, i32* %r5.global-to-local, align 4
  %v3_ae58 = add i32 %v0_ae54, 25
  %v4_ae58 = inttoptr i32 %v3_ae58 to i8*
  store i8 %v5_ab04, i8* %v4_ae58, align 1
  store i32 %v3_ad28, i32* %r1.global-to-local, align 4
  store i32 %tmp87, i32* %r3.global-to-local, align 4
  store i32 %v3_ad38, i32* %r2.global-to-local, align 4
  %v2_ae68 = load i32, i32* %r5.global-to-local, align 4
  %v3_ae68 = add i32 %v2_ae68, 4
  %v4_ae68 = inttoptr i32 %v3_ae68 to i8*
  store i8 %v5_ace0, i8* %v4_ae68, align 1
  %v0_ae6c = load i32, i32* %r1.global-to-local, align 4
  %v1_ae6c = trunc i32 %v0_ae6c to i8
  %v2_ae6c = load i32, i32* %r5.global-to-local, align 4
  %v3_ae6c = add i32 %v2_ae6c, 2
  %v4_ae6c = inttoptr i32 %v3_ae6c to i8*
  store i8 %v1_ae6c, i8* %v4_ae6c, align 1
  %v0_ae70 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ae70, label %bb92, label %bb91

bb91:                                             ; preds = %.thread24
  store i32 64, i32* %r3.global-to-local, align 4
  br label %bb92

bb92:                                             ; preds = %.thread24, %bb91
  store i32 %v3_ad3c, i32* %r1.global-to-local, align 4
  %v0_ae78 = load i32, i32* %r2.global-to-local, align 4
  %v1_ae78 = trunc i32 %v0_ae78 to i8
  %v2_ae78 = load i32, i32* %r5.global-to-local, align 4
  %v3_ae78 = add i32 %v2_ae78, 3
  %v4_ae78 = inttoptr i32 %v3_ae78 to i8*
  store i8 %v1_ae78, i8* %v4_ae78, align 1
  store i32 %v4_adb8, i32* %r2.global-to-local, align 4
  %v0_ae80 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ae80, label %bb94, label %bb93

bb93:                                             ; preds = %bb92
  %v1_ae80 = load i32, i32* %r3.global-to-local, align 4
  %v2_ae80 = trunc i32 %v1_ae80 to i8
  %v3_ae80 = load i32, i32* %r5.global-to-local, align 4
  %v4_ae80 = add i32 %v3_ae80, 6
  %v5_ae80 = inttoptr i32 %v4_ae80 to i8*
  store i8 %v2_ae80, i8* %v5_ae80, align 1
  br label %bb94

bb94:                                             ; preds = %bb92, %bb93
  store i32 17, i32* %r3.global-to-local, align 4
  %v0_ae88 = load i32, i32* %r1.global-to-local, align 4
  %v1_ae88 = trunc i32 %v0_ae88 to i8
  %v2_ae88 = load i32, i32* %r5.global-to-local, align 4
  %v3_ae88 = add i32 %v2_ae88, 5
  %v4_ae88 = inttoptr i32 %v3_ae88 to i8*
  store i8 %v1_ae88, i8* %v4_ae88, align 1
  %v0_ae8c = load i32, i32* %r2.global-to-local, align 4
  %v1_ae8c = trunc i32 %v0_ae8c to i8
  %v2_ae8c = load i32, i32* %r5.global-to-local, align 4
  %v3_ae8c = add i32 %v2_ae8c, 8
  %v4_ae8c = inttoptr i32 %v3_ae8c to i8*
  store i8 %v1_ae8c, i8* %v4_ae8c, align 1
  %v0_ae90 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ae90, label %bb96, label %bb95

bb95:                                             ; preds = %bb94
  %v1_ae90 = load i32, i32* %r0.global-to-local, align 4
  %v2_ae90 = trunc i32 %v1_ae90 to i8
  %v3_ae90 = load i32, i32* %r5.global-to-local, align 4
  %v4_ae90 = add i32 %v3_ae90, 7
  %v5_ae90 = inttoptr i32 %v4_ae90 to i8*
  store i8 %v2_ae90, i8* %v5_ae90, align 1
  br label %bb96

bb96:                                             ; preds = %bb94, %bb95
  %v0_ae94 = load i32, i32* %r3.global-to-local, align 4
  %v1_ae94 = trunc i32 %v0_ae94 to i8
  %v2_ae94 = load i32, i32* %r5.global-to-local, align 4
  %v3_ae94 = add i32 %v2_ae94, 9
  %v4_ae94 = inttoptr i32 %v3_ae94 to i8*
  store i8 %v1_ae94, i8* %v4_ae94, align 1
  %v0_ae98 = call i32 @function_f508()
  store i32 %v0_ae98, i32* %r0.global-to-local, align 4
  store i32 %v1_ac4c, i32* %r1.global-to-local, align 4
  store i1 %v2_aea4, i1* %cpsr_z.global-to-local, align 1
  %v1_aea8 = sub i32 1023, %v0_ae98
  store i32 %v1_aea8, i32* %r3.global-to-local, align 4
  br i1 %v2_aea4, label %.thread25, label %.thread26

.thread25:                                        ; preds = %bb96
  %v2_aeb0 = load i32, i32* %r5.global-to-local, align 4
  %v3_aeb0 = add i32 %v2_aeb0, 16
  %v4_aeb0 = inttoptr i32 %v3_aeb0 to i32*
  store i32 %v1_aea8, i32* %v4_aeb0, align 4
  br label %bb97

.thread26:                                        ; preds = %bb96
  %v1_aeac = load i32, i32* %r4.global-to-local, align 4
  %v2_aeac = add i32 %v1_aeac, 16
  %v3_aeac = inttoptr i32 %v2_aeac to i32*
  %v4_aeac = load i32, i32* %v3_aeac, align 4
  store i32 %v4_aeac, i32* %r3.global-to-local, align 4
  %v2_aeb4 = load i32, i32* %r5.global-to-local, align 4
  %v3_aeb4 = add i32 %v2_aeb4, 16
  %v4_aeb4 = inttoptr i32 %v3_aeb4 to i32*
  store i32 %v4_aeac, i32* %v4_aeb4, align 4
  br label %bb97

bb97:                                             ; preds = %.thread25, %.thread26
  store i32 %v4_ad34, i32* %r3.global-to-local, align 4
  %v0_aebc = load i32, i32* %r4.global-to-local, align 4
  %v1_aebc = add i32 %v0_aebc, 44
  store i32 %v1_aebc, i32* %r6.global-to-local, align 4
  %v1_aec0 = load i32, i32* %r5.global-to-local, align 4
  %v2_aec0 = add i32 %v1_aec0, 12
  %v3_aec0 = inttoptr i32 %v2_aec0 to i32*
  store i32 %v0_ae98, i32* %v3_aec0, align 4
  store i32 %v4_aec4, i32* %r2.global-to-local, align 4
  %v0_aec8 = load i32, i32* %r3.global-to-local, align 4
  %v1_aec8 = trunc i32 %v0_aec8 to i8
  %v2_aec8 = load i32, i32* %r6.global-to-local, align 4
  %v3_aec8 = inttoptr i32 %v2_aec8 to i8*
  store i8 %v1_aec8, i8* %v3_aec8, align 1
  %v3_aecc = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_aecc, i32* %r3.global-to-local, align 4
  %v0_aed0 = load i32, i32* %r2.global-to-local, align 4
  %v1_aed0 = trunc i32 %v0_aed0 to i8
  %v2_aed0 = load i32, i32* %r6.global-to-local, align 4
  %v3_aed0 = add i32 %v2_aed0, 5
  %v4_aed0 = inttoptr i32 %v3_aed0 to i8*
  store i8 %v1_aed0, i8* %v4_aed0, align 1
  %v0_aed4 = load i32, i32* %r3.global-to-local, align 4
  %v1_aed4 = add i32 %v0_aed4, 1
  store i32 %v1_aed4, i32* %r4.global-to-local, align 4
  store i32 %v3_ad4c, i32* %r1.global-to-local, align 4
  store i32 %v7_aedc, i32* %r2.global-to-local, align 4
  %v1_aee0 = load i32, i32* @fp, align 4
  %v9_aee0 = icmp eq i32 %v1_aed4, %v1_aee0
  store i1 %v9_aee0, i1* %cpsr_z.global-to-local, align 1
  %v2_aee4 = load i32, i32* %r6.global-to-local, align 4
  %v3_aee4 = add i32 %v2_aee4, 1
  %v4_aee4 = inttoptr i32 %v3_aee4 to i8*
  store i8 %v5_ad5c, i8* %v4_aee4, align 1
  %v0_aee8 = load i32, i32* %r7.global-to-local, align 4
  %v1_aee8 = trunc i32 %v0_aee8 to i8
  %v2_aee8 = load i32, i32* %r6.global-to-local, align 4
  %v3_aee8 = add i32 %v2_aee8, 2
  %v4_aee8 = inttoptr i32 %v3_aee8 to i8*
  store i8 %v1_aee8, i8* %v4_aee8, align 1
  %v0_aeec = load i32, i32* %r2.global-to-local, align 4
  %v1_aeec = trunc i32 %v0_aeec to i8
  %v2_aeec = load i32, i32* %r6.global-to-local, align 4
  %v3_aeec = add i32 %v2_aeec, 3
  %v4_aeec = inttoptr i32 %v3_aeec to i8*
  store i8 %v1_aeec, i8* %v4_aeec, align 1
  %v0_aef0 = load i32, i32* %r8.global-to-local, align 4
  %v1_aef0 = trunc i32 %v0_aef0 to i8
  %v2_aef0 = load i32, i32* %r6.global-to-local, align 4
  %v3_aef0 = add i32 %v2_aef0, 4
  %v4_aef0 = inttoptr i32 %v3_aef0 to i8*
  store i8 %v1_aef0, i8* %v4_aef0, align 1
  %v0_aef4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_aef4, i32* %stack_var_-40, align 4
  %v5_aef8 = icmp slt i32 %v1_aed4, %v1_aee0
  br i1 %v5_aef8, label %dec_label_pc_ad6c, label %dec_label_pc_aefc

dec_label_pc_aefc:                                ; preds = %bb97
  %v1_af04 = add i32 %v5_ab98, 8
  store i32 %v1_af04, i32* %r3.global-to-local, align 4
  %v1_af08 = add i32 %v5_ab98, 52
  store i32 %v1_af08, i32* %r1.global-to-local, align 4
  %v0_af14.pre.pre = load i32, i32* @fp, align 4
  br label %dec_label_pc_af14.preheader

dec_label_pc_af14.preheader:                      ; preds = %dec_label_pc_aefc, %dec_label_pc_b1a8
  %v0_af14.pre = phi i32 [ %v0_af14.pre.pre, %dec_label_pc_aefc ], [ %v0_ac5c, %dec_label_pc_b1a8 ]
  %stack_var_-120.0.ph = phi i32 [ %v1_af08, %dec_label_pc_aefc ], [ %v1_b1b4, %dec_label_pc_b1a8 ]
  %stack_var_-152.0.ph = phi i32 [ %v1_af04, %dec_label_pc_aefc ], [ %v1_b1b0, %dec_label_pc_b1a8 ]
  %v2_b18c = icmp eq i32 %v1_abb8, 0
  %v2_af8c = icmp eq i32 %v1_ac4c, 0
  %v2_af58 = icmp eq i32 %v5_abec, -1
  br label %dec_label_pc_af14

dec_label_pc_af14:                                ; preds = %dec_label_pc_afa8, %dec_label_pc_af14.preheader
  %v0_af14 = phi i32 [ %v0_af14.pre, %dec_label_pc_af14.preheader ], [ %v1_b06c, %dec_label_pc_afa8 ]
  %v2_af14 = icmp eq i32 %v0_af14, 0
  store i1 %v2_af14, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  %tmp98 = icmp slt i32 %v0_af14, 1
  br label %dec_label_pc_af1c

dec_label_pc_af1c:                                ; preds = %dec_label_pc_af1c, %dec_label_pc_af14
  br i1 %tmp98, label %dec_label_pc_af1c, label %dec_label_pc_af20

dec_label_pc_af20:                                ; preds = %dec_label_pc_af1c
  store i32 0, i32* %stack_var_-40, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_af2c

dec_label_pc_af2c:                                ; preds = %dec_label_pc_afa8, %dec_label_pc_af20
  %v1_af40 = phi i32 [ %v1_b068, %dec_label_pc_afa8 ], [ 0, %dec_label_pc_af20 ]
  %v5_af30 = mul i32 %v1_af40, 24
  %v1_af34 = load i32, i32* @sb, align 4
  %v2_af34 = add i32 %v1_af34, %v5_af30
  store i32 %v2_af34, i32* %r3.global-to-local, align 4
  store i32 %v4_aacc, i32* %r1.global-to-local, align 4
  %v1_af3c = add i32 %v2_af34, 20
  %v2_af3c = inttoptr i32 %v1_af3c to i8*
  %v3_af3c = load i8, i8* %v2_af3c, align 1
  %v4_af3c = zext i8 %v3_af3c to i32
  store i32 %v4_af3c, i32* %r2.global-to-local, align 4
  %v4_af40 = mul i32 %v1_af40, 4
  %v5_af40 = add i32 %v4_af40, %v4_aacc
  %v6_af40 = inttoptr i32 %v5_af40 to i32*
  %v7_af40 = load i32, i32* %v6_af40, align 4
  store i32 %v7_af40, i32* @r5, align 4
  %v7_af44 = icmp eq i8 %v3_af3c, 31
  store i1 %v7_af44, i1* %cpsr_z.global-to-local, align 1
  %v1_af48 = add i32 %v7_af40, 24
  store i32 %v1_af48, i32* @r6, align 4
  %v1_af4c = add i32 %v7_af40, 44
  store i32 %v1_af4c, i32* @r7, align 4
  %tmp106 = icmp ult i8 %v3_af3c, 32
  br i1 %tmp106, label %dec_label_pc_b08c, label %dec_label_pc_af54

dec_label_pc_af54:                                ; preds = %dec_label_pc_af2c
  store i32 %v5_abec, i32* %r2.global-to-local, align 4
  store i1 %v2_af58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_af58, label %dec_label_pc_b0f4, label %dec_label_pc_af60

dec_label_pc_af60:                                ; preds = %dec_label_pc_b08c, %dec_label_pc_af54
  store i32 65535, i32* @r4, align 4
  %v0_af68 = load i32, i32* @sl, align 4
  %v9_af68 = icmp eq i32 %v0_af68, 65535
  store i1 %v9_af68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_af68, label %dec_label_pc_b10c, label %dec_label_pc_af70

dec_label_pc_af70:                                ; preds = %dec_label_pc_b0f4.dec_label_pc_af70_crit_edge, %dec_label_pc_af60
  %v1_af74 = phi i32 [ %v1_af74.pre, %dec_label_pc_b0f4.dec_label_pc_af70_crit_edge ], [ 65535, %dec_label_pc_af60 ]
  store i32 %v3_ac54, i32* %r3.global-to-local, align 4
  %v9_af74 = icmp eq i32 %v3_ac54, %v1_af74
  store i1 %v9_af74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_af74, label %dec_label_pc_b144, label %dec_label_pc_af7c

dec_label_pc_af7c:                                ; preds = %dec_label_pc_b10c.dec_label_pc_af7c_crit_edge, %dec_label_pc_af70
  %v1_af80 = phi i32 [ %v1_af80.pre, %dec_label_pc_b10c.dec_label_pc_af7c_crit_edge ], [ %v1_af74, %dec_label_pc_af70 ]
  store i32 %v3_ac58, i32* %r1.global-to-local, align 4
  %v9_af80 = icmp eq i32 %v3_ac58, %v1_af80
  store i1 %v9_af80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_af80, label %dec_label_pc_b160, label %dec_label_pc_af88

dec_label_pc_af88:                                ; preds = %dec_label_pc_b144, %dec_label_pc_af7c
  store i32 %v1_ac4c, i32* %r2.global-to-local, align 4
  store i1 %v2_af8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_af8c, label %dec_label_pc_b184, label %.thread27

.thread27:                                        ; preds = %dec_label_pc_af88
  %v1_af90 = load i32, i32* @r5, align 4
  %v2_af90 = add i32 %v1_af90, 16
  %v3_af90 = inttoptr i32 %v2_af90 to i32*
  %v4_af90 = load i32, i32* %v3_af90, align 4
  store i32 %v4_af90, i32* %r3.global-to-local, align 4
  %v2_af94 = load i32, i32* @r6, align 4
  %v3_af94 = add i32 %v2_af94, 16
  %v4_af94 = inttoptr i32 %v3_af94 to i32*
  store i32 %v4_af90, i32* %v4_af94, align 4
  br label %dec_label_pc_af9c

dec_label_pc_af9c:                                ; preds = %bb103, %.thread27
  store i32 %v1_abb8, i32* %r3.global-to-local, align 4
  store i1 %v2_b18c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b18c, label %dec_label_pc_afa8, label %dec_label_pc_b198

dec_label_pc_afa8:                                ; preds = %dec_label_pc_af9c, %dec_label_pc_b184, %dec_label_pc_b198
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_afac = load i32, i32* @r8, align 4
  %v1_afac = trunc i32 %v0_afac to i8
  %v2_afac = load i32, i32* @r5, align 4
  %v3_afac = add i32 %v2_afac, 10
  %v4_afac = inttoptr i32 %v3_afac to i8*
  store i8 %v1_afac, i8* %v4_afac, align 1
  %v0_afb0 = load i32, i32* @r8, align 4
  %v1_afb0 = trunc i32 %v0_afb0 to i8
  %v2_afb0 = load i32, i32* @r5, align 4
  %v3_afb0 = add i32 %v2_afb0, 11
  %v4_afb0 = inttoptr i32 %v3_afb0 to i8*
  store i8 %v1_afb0, i8* %v4_afb0, align 1
  %v0_afb4 = load i32, i32* @r5, align 4
  store i32 %v0_afb4, i32* @r0, align 4
  %v2_afb8 = call i32 @function_ddf4(i32 %v0_afb4, i32 20)
  %v3_afb8 = trunc i32 %v2_afb8 to i8
  %v4_afbc = sdiv i32 %v2_afb8, 256
  store i32 %v4_afbc, i32* %r3.global-to-local, align 4
  %v1_afc0 = trunc i32 %v4_afbc to i8
  %v2_afc0 = load i32, i32* @r5, align 4
  %v3_afc0 = add i32 %v2_afc0, 11
  %v4_afc0 = inttoptr i32 %v3_afc0 to i8*
  store i8 %v1_afc0, i8* %v4_afc0, align 1
  %v3_afc4 = load i32, i32* @r5, align 4
  %v4_afc4 = add i32 %v3_afc4, 10
  %v5_afc4 = inttoptr i32 %v4_afc4 to i8*
  store i8 %v3_afb8, i8* %v5_afc4, align 1
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_afcc = load i32, i32* @r8, align 4
  %v1_afcc = trunc i32 %v0_afcc to i8
  %v2_afcc = load i32, i32* @r6, align 4
  %v3_afcc = add i32 %v2_afcc, 10
  %v4_afcc = inttoptr i32 %v3_afcc to i8*
  store i8 %v1_afcc, i8* %v4_afcc, align 1
  %v0_afd0 = load i32, i32* @r8, align 4
  %v1_afd0 = trunc i32 %v0_afd0 to i8
  %v2_afd0 = load i32, i32* @r6, align 4
  %v3_afd0 = add i32 %v2_afd0, 11
  %v4_afd0 = inttoptr i32 %v3_afd0 to i8*
  store i8 %v1_afd0, i8* %v4_afd0, align 1
  %v0_afd4 = load i32, i32* @r6, align 4
  store i32 %v0_afd4, i32* @r0, align 4
  %v2_afd8 = call i32 @function_ddf4(i32 %v0_afd4, i32 20)
  %v3_afd8 = trunc i32 %v2_afd8 to i8
  store i32 %v2_afd8, i32* %r0.global-to-local, align 4
  %v4_afdc = sdiv i32 %v2_afd8, 256
  store i32 %v4_afdc, i32* %r3.global-to-local, align 4
  %v3_afe0 = load i32, i32* @r6, align 4
  %v4_afe0 = add i32 %v3_afe0, 10
  %v5_afe0 = inttoptr i32 %v4_afe0 to i8*
  store i8 %v3_afd8, i8* %v5_afe0, align 1
  %v0_afe4 = load i32, i32* %r3.global-to-local, align 4
  %v1_afe4 = trunc i32 %v0_afe4 to i8
  %v2_afe4 = load i32, i32* @r6, align 4
  %v3_afe4 = add i32 %v2_afe4, 11
  %v4_afe4 = inttoptr i32 %v3_afe4 to i8*
  store i8 %v1_afe4, i8* %v4_afe4, align 1
  %v0_afe8 = load i32, i32* @r7, align 4
  %v1_afe8 = add i32 %v0_afe8, 4
  %v2_afe8 = inttoptr i32 %v1_afe8 to i8*
  %v3_afe8 = load i8, i8* %v2_afe8, align 1
  %v4_afe8 = zext i8 %v3_afe8 to i32
  store i32 %v4_afe8, i32* %r3.global-to-local, align 4
  %v1_afec = add i32 %v0_afe8, 5
  %v2_afec = inttoptr i32 %v1_afec to i8*
  %v3_afec = load i8, i8* %v2_afec, align 1
  %v4_afec = zext i8 %v3_afec to i32
  store i32 %v0_afe8, i32* @r1, align 4
  %v4_aff4 = mul nuw nsw i32 %v4_afec, 256
  %v5_aff4 = or i32 %v4_aff4, %v4_afe8
  store i32 %v5_aff4, i32* %r2.global-to-local, align 4
  %v0_aff8 = load i32, i32* @r8, align 4
  %v1_aff8 = trunc i32 %v0_aff8 to i8
  %v3_aff8 = add i32 %v0_afe8, 6
  %v4_aff8 = inttoptr i32 %v3_aff8 to i8*
  store i8 %v1_aff8, i8* %v4_aff8, align 1
  store i32 %stack_var_-152.0.ph, i32* %r3.global-to-local, align 4
  %v0_b000 = load i32, i32* @r8, align 4
  %v1_b000 = trunc i32 %v0_b000 to i8
  %v2_b000 = load i32, i32* @r7, align 4
  %v3_b000 = add i32 %v2_b000, 7
  %v4_b000 = inttoptr i32 %v3_b000 to i8*
  store i8 %v1_b000, i8* %v4_b000, align 1
  %v0_b004 = load i32, i32* @r6, align 4
  store i32 %v0_b004, i32* %r0.global-to-local, align 4
  %v4_b008 = call i32 @function_de50(i32 %v0_b004, i32 %v0_afe8, i32 %v5_aff4, i32 %stack_var_-152.0.ph)
  %v5_b008 = trunc i32 %v4_b008 to i8
  store i32 %v4_b008, i32* %r0.global-to-local, align 4
  %v3_b00c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_b00c, i32* %r3.global-to-local, align 4
  %v3_b010 = mul i32 %v3_b00c, 32
  store i32 %v3_b010, i32* %r2.global-to-local, align 4
  %v0_b014 = load i32, i32* @r5, align 4
  %v1_b014 = add i32 %v0_b014, 16
  %v2_b014 = inttoptr i32 %v1_b014 to i32*
  %v3_b014 = load i32, i32* %v2_b014, align 4
  store i32 %v3_b014, i32* %r1.global-to-local, align 4
  %v5_b018 = mul i32 %v3_b00c, 24
  store i32 %v5_b018, i32* %r2.global-to-local, align 4
  %v4_b01c43 = udiv i32 %v4_b008, 256
  %v1_b020 = trunc i32 %v4_b01c43 to i8
  %v2_b020 = load i32, i32* @r7, align 4
  %v3_b020 = add i32 %v2_b020, 7
  %v4_b020 = inttoptr i32 %v3_b020 to i8*
  store i8 %v1_b020, i8* %v4_b020, align 1
  %v0_b024 = load i32, i32* %r2.global-to-local, align 4
  %v1_b024 = load i32, i32* @sb, align 4
  %v2_b024 = add i32 %v1_b024, %v0_b024
  store i32 %v2_b024, i32* %lr.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v3_b02c = load i32, i32* @r7, align 4
  %v4_b02c = add i32 %v3_b02c, 6
  %v5_b02c = inttoptr i32 %v4_b02c to i8*
  store i8 %v5_b008, i8* %v5_b02c, align 1
  %v0_b030 = load i32, i32* %r1.global-to-local, align 4
  %v1_b030 = load i32, i32* %lr.global-to-local, align 4
  %v2_b030 = add i32 %v1_b030, 4
  %v3_b030 = inttoptr i32 %v2_b030 to i32*
  store i32 %v0_b030, i32* %v3_b030, align 4
  %v0_b034 = load i32, i32* %r3.global-to-local, align 4
  %v1_b034 = trunc i32 %v0_b034 to i8
  %v2_b034 = load i32, i32* %r2.global-to-local, align 4
  %v3_b034 = load i32, i32* @sb, align 4
  %v4_b034 = add i32 %v3_b034, %v2_b034
  %v5_b034 = inttoptr i32 %v4_b034 to i8*
  store i8 %v1_b034, i8* %v5_b034, align 1
  %v0_b038 = load i32, i32* @r8, align 4
  %v1_b038 = trunc i32 %v0_b038 to i8
  %v2_b038 = load i32, i32* %lr.global-to-local, align 4
  %v3_b038 = add i32 %v2_b038, 2
  %v4_b038 = inttoptr i32 %v3_b038 to i8*
  store i8 %v1_b038, i8* %v4_b038, align 1
  %v0_b03c = load i32, i32* @r8, align 4
  %v1_b03c = trunc i32 %v0_b03c to i8
  %v2_b03c = load i32, i32* %lr.global-to-local, align 4
  %v3_b03c = add i32 %v2_b03c, 1
  %v4_b03c = inttoptr i32 %v3_b03c to i8*
  store i8 %v1_b03c, i8* %v4_b03c, align 1
  %v0_b040 = load i32, i32* @r8, align 4
  %v1_b040 = trunc i32 %v0_b040 to i8
  %v2_b040 = load i32, i32* %lr.global-to-local, align 4
  %v3_b040 = add i32 %v2_b040, 3
  %v4_b040 = inttoptr i32 %v3_b040 to i8*
  store i8 %v1_b040, i8* %v4_b040, align 1
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_b04c = load i32, i32* @r5, align 4
  store i32 %v0_b04c, i32* %r1.global-to-local, align 4
  store i32 %v3_ac00, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-120.0.ph, i32* %r2.global-to-local, align 4
  %v0_b058 = load i32, i32* %lr.global-to-local, align 4
  %v4_b058 = inttoptr i32 %v0_b058 to %sockaddr*
  %v7_b060 = inttoptr i32 %v0_b04c to i32*
  %v9_b060 = call i32 @sendto(i32 %v3_ac00, i32* %v7_b060, i32 %stack_var_-120.0.ph, i32 16384, %sockaddr* %v4_b058, i32 16)
  %v3_b064 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_b064, i32* %r3.global-to-local, align 4
  %v1_b068 = add i32 %v3_b064, 1
  store i32 %v1_b068, i32* %r0.global-to-local, align 4
  %v1_b06c = load i32, i32* @fp, align 4
  %v9_b06c = icmp eq i32 %v1_b068, %v1_b06c
  store i1 %v9_b06c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_b068, i32* %stack_var_-40, align 4
  %v6_b074 = icmp slt i32 %v1_b068, %v1_b06c
  br i1 %v6_b074, label %dec_label_pc_af2c, label %dec_label_pc_af14

dec_label_pc_b07c:                                ; preds = %dec_label_pc_ac10
  store i32 %v3_ac00, i32* %r0.global-to-local, align 4
  %v1_b080 = call i32 @close(i32 %v3_ac00)
  store i32 %v1_b080, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b084

dec_label_pc_b084:                                ; preds = %dec_label_pc_aaac, %dec_label_pc_b07c
  %v29_b088 = phi i32 [ -1, %dec_label_pc_aaac ], [ %v1_b080, %dec_label_pc_b07c ]
  store i32 %v3_aaac, i32* %r4.global-to-local, align 4
  store i32 %v6_aaac, i32* %r5.global-to-local, align 4
  store i32 %v9_aaac, i32* %r6.global-to-local, align 4
  store i32 %v12_aaac, i32* %r7.global-to-local, align 4
  store i32 %v15_aaac, i32* %r8.global-to-local, align 4
  ret i32 %v29_b088

dec_label_pc_b08c:                                ; preds = %dec_label_pc_af2c
  %v1_b08c = add i32 %v2_af34, 16
  %v2_b08c = inttoptr i32 %v1_b08c to i32*
  %v3_b08c = load i32, i32* %v2_b08c, align 4
  store i32 %v3_b08c, i32* %r4.global-to-local, align 4
  %v0_b090 = call i32 @function_f508()
  store i32 %v0_b090, i32* %r0.global-to-local, align 4
  %v3_b094 = load i32, i32* %stack_var_-40, align 4
  %v5_b09c = mul i32 %v3_b094, 24
  %v0_b0a0 = load i32, i32* %r4.global-to-local, align 4
  %v1_b0a4 = load i32, i32* @sb, align 4
  %v2_b0a4 = add i32 %v1_b0a4, %v5_b09c
  store i32 %v2_b0a4, i32* %r1.global-to-local, align 4
  %v1_b0a8 = and i32 %v0_b0a0, 65280
  store i32 %v1_b0a8, i32* %r3.global-to-local, align 4
  %v1_b0a0 = udiv i32 %v0_b0a0, 256
  %v3_b0ac = and i32 %v1_b0a0, 65280
  store i32 %v3_b0ac, i32* %r2.global-to-local, align 4
  %v1_b0b4 = add i32 %v2_b0a4, 20
  %v2_b0b4 = inttoptr i32 %v1_b0b4 to i8*
  %v3_b0b4 = load i8, i8* %v2_b0b4, align 1
  %v4_b0b4 = zext i8 %v3_b0b4 to i32
  store i32 %v4_b0b4, i32* %lr.global-to-local, align 4
  %v2_b0c0 = call i32 @llvm.bswap.i32(i32 %v0_b0a0)
  %v7_b0c4 = lshr i32 %v0_b090, %v4_b0b4
  %v8_b0c4 = add i32 %v7_b0c4, %v2_b0c0
  %v3_b0d0 = mul i32 %v8_b0c4, 16777216
  %v1_b0d4 = and i32 %v8_b0c4, 65280
  store i32 %v1_b0d4, i32* %r0.global-to-local, align 4
  store i32 %v5_abec, i32* %r2.global-to-local, align 4
  %v4_b0e0 = mul nuw nsw i32 %v1_b0d4, 256
  %v5_b0e0 = or i32 %v4_b0e0, %v3_b0d0
  store i32 %v5_b0e0, i32* %r1.global-to-local, align 4
  %v2_b0e4 = call i32 @llvm.bswap.i32(i32 %v8_b0c4)
  store i32 %v2_b0e4, i32* %r3.global-to-local, align 4
  store i1 %v2_af58, i1* %cpsr_z.global-to-local, align 1
  %v1_b0ec = load i32, i32* @r5, align 4
  %v2_b0ec = add i32 %v1_b0ec, 16
  %v3_b0ec = inttoptr i32 %v2_b0ec to i32*
  store i32 %v2_b0e4, i32* %v3_b0ec, align 4
  br i1 %v2_af58, label %dec_label_pc_b0f4, label %dec_label_pc_af60

dec_label_pc_b0f4:                                ; preds = %dec_label_pc_b08c, %dec_label_pc_af54
  %v0_b0f4 = call i32 @function_f508()
  store i32 %v0_b0f4, i32* %r0.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  %v0_b100 = load i32, i32* @sl, align 4
  %v9_b100 = icmp eq i32 %v0_b100, 65535
  store i1 %v9_b100, i1* %cpsr_z.global-to-local, align 1
  %v1_b104 = load i32, i32* @r5, align 4
  %v2_b104 = add i32 %v1_b104, 12
  %v3_b104 = inttoptr i32 %v2_b104 to i32*
  store i32 %v0_b0f4, i32* %v3_b104, align 4
  br i1 %v9_b100, label %dec_label_pc_b10c, label %dec_label_pc_b0f4.dec_label_pc_af70_crit_edge

dec_label_pc_b0f4.dec_label_pc_af70_crit_edge:    ; preds = %dec_label_pc_b0f4
  %v1_af74.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_af70

dec_label_pc_b10c:                                ; preds = %dec_label_pc_b0f4, %dec_label_pc_af60
  %v0_b10c = call i32 @function_f508()
  %v3_b114 = urem i32 %v0_b10c, 65536
  store i32 %v3_b114, i32* %r0.global-to-local, align 4
  %v3_b11816 = udiv i32 %v0_b10c, 256
  %v1_b11c = trunc i32 %v3_b11816 to i8
  %v2_b11c = load i32, i32* @r5, align 4
  %v3_b11c = add i32 %v2_b11c, 5
  %v4_b11c = inttoptr i32 %v3_b11c to i8*
  store i8 %v1_b11c, i8* %v4_b11c, align 1
  %v0_b120 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v3_ac54, i32* %r3.global-to-local, align 4
  %v1_b128 = sub i32 999, %v0_b120
  store i32 %v1_b128, i32* %r2.global-to-local, align 4
  %v3_b12c = sdiv i32 %v1_b128, 256
  store i32 %v3_b12c, i32* %r1.global-to-local, align 4
  %v1_b130 = load i32, i32* @r4, align 4
  %v9_b130 = icmp eq i32 %v3_ac54, %v1_b130
  store i1 %v9_b130, i1* %cpsr_z.global-to-local, align 1
  %v1_b134 = trunc i32 %v0_b120 to i8
  %v2_b134 = load i32, i32* @r5, align 4
  %v3_b134 = add i32 %v2_b134, 4
  %v4_b134 = inttoptr i32 %v3_b134 to i8*
  store i8 %v1_b134, i8* %v4_b134, align 1
  %v0_b138 = load i32, i32* %r1.global-to-local, align 4
  %v1_b138 = trunc i32 %v0_b138 to i8
  %v2_b138 = load i32, i32* @r6, align 4
  %v3_b138 = add i32 %v2_b138, 5
  %v4_b138 = inttoptr i32 %v3_b138 to i8*
  store i8 %v1_b138, i8* %v4_b138, align 1
  %v0_b13c = load i32, i32* %r2.global-to-local, align 4
  %v1_b13c = trunc i32 %v0_b13c to i8
  %v2_b13c = load i32, i32* @r6, align 4
  %v3_b13c = add i32 %v2_b13c, 4
  %v4_b13c = inttoptr i32 %v3_b13c to i8*
  store i8 %v1_b13c, i8* %v4_b13c, align 1
  %v0_b140 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b140, label %dec_label_pc_b144, label %dec_label_pc_b10c.dec_label_pc_af7c_crit_edge

dec_label_pc_b10c.dec_label_pc_af7c_crit_edge:    ; preds = %dec_label_pc_b10c
  %v1_af80.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_af7c

dec_label_pc_b144:                                ; preds = %dec_label_pc_b10c, %dec_label_pc_af70
  %v0_b144 = call i32 @function_f508()
  %v1_b144 = trunc i32 %v0_b144 to i8
  store i32 %v0_b144, i32* %r0.global-to-local, align 4
  store i32 %v3_ac58, i32* %r1.global-to-local, align 4
  %v4_b14c = sdiv i32 %v0_b144, 256
  store i32 %v4_b14c, i32* %r3.global-to-local, align 4
  %v1_b150 = load i32, i32* @r4, align 4
  %v9_b150 = icmp eq i32 %v3_ac58, %v1_b150
  store i1 %v9_b150, i1* %cpsr_z.global-to-local, align 1
  %v3_b154 = load i32, i32* @r5, align 4
  %v4_b154 = add i32 %v3_b154, 44
  %v5_b154 = inttoptr i32 %v4_b154 to i8*
  store i8 %v1_b144, i8* %v5_b154, align 1
  %v0_b158 = load i32, i32* %r3.global-to-local, align 4
  %v1_b158 = trunc i32 %v0_b158 to i8
  %v2_b158 = load i32, i32* @r7, align 4
  %v3_b158 = add i32 %v2_b158, 1
  %v4_b158 = inttoptr i32 %v3_b158 to i8*
  store i8 %v1_b158, i8* %v4_b158, align 1
  %v0_b15c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b15c, label %dec_label_pc_b160, label %dec_label_pc_af88

dec_label_pc_b160:                                ; preds = %dec_label_pc_b144, %dec_label_pc_af7c
  %v0_b160 = call i32 @function_f508()
  %v1_b160 = trunc i32 %v0_b160 to i8
  store i32 %v0_b160, i32* %r0.global-to-local, align 4
  store i32 %v1_ac4c, i32* %r2.global-to-local, align 4
  %v4_b168 = sdiv i32 %v0_b160, 256
  store i32 %v4_b168, i32* %r3.global-to-local, align 4
  store i1 %v2_af8c, i1* %cpsr_z.global-to-local, align 1
  %v1_b170 = trunc i32 %v4_b168 to i8
  %v2_b170 = load i32, i32* @r7, align 4
  %v3_b170 = add i32 %v2_b170, 3
  %v4_b170 = inttoptr i32 %v3_b170 to i8*
  store i8 %v1_b170, i8* %v4_b170, align 1
  %v0_b174 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b174, label %bb102, label %bb101

bb101:                                            ; preds = %dec_label_pc_b160
  %v1_b174 = load i32, i32* @r5, align 4
  %v2_b174 = add i32 %v1_b174, 16
  %v3_b174 = inttoptr i32 %v2_b174 to i32*
  %v4_b174 = load i32, i32* %v3_b174, align 4
  store i32 %v4_b174, i32* %r3.global-to-local, align 4
  br label %bb102

bb102:                                            ; preds = %dec_label_pc_b160, %bb101
  %v3_b178 = load i32, i32* @r7, align 4
  %v4_b178 = add i32 %v3_b178, 2
  %v5_b178 = inttoptr i32 %v4_b178 to i8*
  store i8 %v1_b160, i8* %v5_b178, align 1
  %v0_b17c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b17c, label %dec_label_pc_b184, label %bb103

bb103:                                            ; preds = %bb102
  %v1_b17c = load i32, i32* %r3.global-to-local, align 4
  %v2_b17c = load i32, i32* @r6, align 4
  %v3_b17c = add i32 %v2_b17c, 16
  %v4_b17c = inttoptr i32 %v3_b17c to i32*
  store i32 %v1_b17c, i32* %v4_b17c, align 4
  br label %dec_label_pc_af9c

dec_label_pc_b184:                                ; preds = %dec_label_pc_af88, %bb102
  %v0_b184 = call i32 @function_f508()
  store i32 %v0_b184, i32* %r0.global-to-local, align 4
  store i32 %v1_abb8, i32* %r3.global-to-local, align 4
  store i1 %v2_b18c, i1* %cpsr_z.global-to-local, align 1
  %v1_b190 = load i32, i32* @r6, align 4
  %v2_b190 = add i32 %v1_b190, 16
  %v3_b190 = inttoptr i32 %v2_b190 to i32*
  store i32 %v0_b184, i32* %v3_b190, align 4
  br i1 %v2_b18c, label %dec_label_pc_afa8, label %dec_label_pc_b198

dec_label_pc_b198:                                ; preds = %dec_label_pc_af9c, %dec_label_pc_b184
  %v0_b198 = load i32, i32* @r7, align 4
  %v1_b198 = add i32 %v0_b198, 8
  store i32 %v1_b198, i32* %r0.global-to-local, align 4
  store i32 %v5_ab98, i32* @r1, align 4
  %v1_b1a0 = inttoptr i32 %v1_b198 to i8*
  %v2_b1a0 = call i32 @function_f688(i8* %v1_b1a0)
  store i32 %v2_b1a0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_afa8

dec_label_pc_b1a8:                                ; preds = %dec_label_pc_ac38
  %v1_b1b0 = add i32 %v5_ab98, 8
  store i32 %v1_b1b0, i32* %r2.global-to-local, align 4
  %v1_b1b4 = add i32 %v5_ab98, 52
  store i32 %v1_b1b4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_af14.preheader

; uselistorder directives
  uselistorder i32 %v1_b1b4, { 1, 0 }
  uselistorder i32 %v1_b1b0, { 1, 0 }
  uselistorder i32 %v4_b168, { 1, 0 }
  uselistorder i32 %v0_b160, { 0, 2, 1 }
  uselistorder i32 %v0_b144, { 0, 2, 1 }
  uselistorder i32 %v2_b0e4, { 1, 0 }
  uselistorder i32 %v8_b0c4, { 1, 2, 0 }
  uselistorder i32 %v0_b0a0, { 1, 0, 2 }
  uselistorder i32 %v1_b06c, { 1, 2, 0 }
  uselistorder i32 %v1_b068, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v3_b00c, { 1, 0, 2 }
  uselistorder i32 %v4_b008, { 0, 2, 1 }
  uselistorder i32 %v0_afe8, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_afd8, { 0, 2, 1 }
  uselistorder i32 %v4_afbc, { 1, 0 }
  uselistorder i32 %v7_af40, { 1, 0, 2 }
  uselistorder i32 %v0_af14, { 1, 0 }
  uselistorder i1 %v2_af58, { 3, 0, 1, 2 }
  uselistorder i1 %v2_b18c, { 2, 3, 1, 0 }
  uselistorder i32 %v1_aed4, { 1, 0, 2 }
  uselistorder i32 %v0_ae98, { 1, 0, 2 }
  uselistorder i32 %v3_ad4c, { 0, 2, 1 }
  uselistorder i32 %v3_ad0c, { 1, 0 }
  uselistorder i32 %tmp87, { 1, 0 }
  uselistorder i32 %v1_acc4, { 1, 0 }
  uselistorder i32 %v1_aca0, { 1, 0 }
  uselistorder i32 %v1_ac9c, { 0, 2, 1 }
  uselistorder i32 %v3_ac80, { 2, 1, 0 }
  uselistorder i32 %v0_ac5c, { 1, 0, 2 }
  uselistorder i32 %v1_ac4c, { 5, 3, 4, 1, 2, 0 }
  uselistorder i32 %v0_ac48, { 0, 3, 2, 1 }
  uselistorder i32 %v0_ac44, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v3_ac00, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder i32 %v5_abec, { 4, 2, 3, 1, 0 }
  uselistorder i32 %v1_abb8, { 1, 0, 2 }
  uselistorder i32 %v5_ab98, { 5, 4, 3, 2, 1, 0 }
  uselistorder i8 %v5_ab3c, { 1, 0 }
  uselistorder i32 %v4_aacc, { 0, 3, 1, 2 }
  uselistorder i32 %v1_aab0, { 2, 1, 0 }
  uselistorder i32* %stack_var_-40, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 12, 11 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 22, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 40, 42, 43, 44, 45, 46, 47, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 31, 33, 34, 36, 35, 37, 38, 40, 39, 42, 41, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 3, 6, 7, 4, 5, 9, 8, 10, 13, 11, 12, 14, 16, 15, 17, 18, 23, 19, 20, 21, 22, 26, 24, 25, 27, 29, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 21, 25, 26, 27, 28, 29 }
  uselistorder i8 47, { 1, 0 }
  uselistorder label %dec_label_pc_b198, { 1, 0 }
  uselistorder label %dec_label_pc_b184, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %dec_label_pc_b084, { 1, 0 }
  uselistorder label %dec_label_pc_afa8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_af14.preheader, { 1, 0 }
  uselistorder label %bb97, { 1, 0 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %bb94, { 1, 0 }
  uselistorder label %bb92, { 1, 0 }
  uselistorder label %.thread24, { 2, 1, 0 }
}

define i32 @function_b1c8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_b1c8:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_b1c8 = load i32, i32* @r4, align 4
  %v6_b1c8 = load i32, i32* @r5, align 4
  %v9_b1c8 = load i32, i32* @r6, align 4
  %v12_b1c8 = load i32, i32* @r7, align 4
  %v1_b1cc = urem i32 %arg1, 256
  store i32 %v1_b1cc, i32* %sb.global-to-local, align 4
  store i32 %arg2, i32* @sl, align 4
  %v1_b1e0 = urem i32 %arg3, 256
  store i32 %v1_b1e0, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  %v2_b1e8 = call i32* @calloc(i32 %v1_b1cc, i32 4)
  %v4_b1e8 = ptrtoint i32* %v2_b1e8 to i32
  %v0_b1ec = load i32, i32* @r5, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_b1f8 = load i32, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v5_b200 = inttoptr i32 %v0_b1ec to i32*
  %v6_b200 = call i32 @function_92dc(i32 %v0_b1f8, i32* %v5_b200, i32 2, i32 0)
  %v1_b20c = urem i32 %v6_b200, 256
  store i32 %v1_b20c, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_b218 = load i32, i32* @r4, align 4
  %v0_b21c = load i32, i32* @r5, align 4
  %v5_b220 = trunc i32 %v6_b200 to i8
  %v6_b224 = inttoptr i32 %v0_b21c to i32*
  %v7_b224 = call i32 @function_92dc(i32 %v0_b218, i32* %v6_b224, i32 3, i32 65535)
  %v0_b228 = load i32, i32* @r5, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_b224, i32* @r7, align 4
  %v0_b238 = load i32, i32* @r4, align 4
  %v4_b23c = inttoptr i32 %v0_b228 to i32*
  %v5_b23c = call i32 @function_92dc(i32 %v0_b238, i32* %v4_b23c, i32 4, i32 64)
  %v1_b244 = urem i32 %v5_b23c, 256
  store i32 %v1_b244, i32* %ip.global-to-local, align 4
  %v0_b248 = load i32, i32* @r5, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b254 = load i32, i32* @r4, align 4
  %v5_b258 = trunc i32 %v5_b23c to i8
  %v6_b25c = inttoptr i32 %v0_b248 to i32*
  %v7_b25c = call i32 @function_92dc(i32 %v0_b254, i32* %v6_b25c, i32 5, i32 0)
  %v1_b268 = urem i32 %v7_b25c, 256
  store i32 %v1_b268, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_b274 = load i32, i32* @r4, align 4
  %v0_b278 = load i32, i32* @r5, align 4
  %v5_b280 = inttoptr i32 %v0_b278 to i32*
  %v6_b280 = call i32 @function_92dc(i32 %v0_b274, i32* %v5_b280, i32 6, i32 65535)
  store i32 27015, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_b290 = load i32, i32* @r5, align 4
  store i32 %v6_b280, i32* @r6, align 4
  %v0_b298 = load i32, i32* @r4, align 4
  %v4_b29c = inttoptr i32 %v0_b290 to i32*
  %v5_b29c = call i32 @function_92dc(i32 %v0_b298, i32* %v4_b29c, i32 7, i32 27015)
  store i32 %v5_b29c, i32* @r4, align 4
  %v1_b2a8 = call i32 @function_12a20(i32 20)
  %v3_b2b4 = call i32 @function_1293c(i32 20, i32* nonnull %stack_var_-44)
  store i32 %v3_b2b4, i32* %r8.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_b2c8 = call i32 @socket(i32 2, i32 3, i32 17)
  %v2_b2cc = icmp eq i32 %v3_b2c8, -1
  store i1 %v2_b2cc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_b2c8, i32* %fp.global-to-local, align 4
  br i1 %v2_b2cc, label %dec_label_pc_b680, label %dec_label_pc_b2d8

dec_label_pc_b2d8:                                ; preds = %dec_label_pc_b1c8
  store i32 1, i32* %stack_var_-40, align 4
  %v6_b2e0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_b2e0, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v6_b2f4 = call i32 @setsockopt(i32 0, i32 3, i32 %v6_b2e0, i32* nonnull %stack_var_-40, i32 ptrtoint (i32* @0 to i32))
  %v2_b2f8 = icmp eq i32 %v6_b2f4, -1
  store i1 %v2_b2f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b2f8, label %dec_label_pc_b678, label %dec_label_pc_b300

dec_label_pc_b300:                                ; preds = %dec_label_pc_b2d8
  %v0_b300 = load i32, i32* @r4, align 4
  %v3_b300 = mul i32 %v0_b300, 65536
  store i32 %v3_b300, i32* %lr.global-to-local, align 4
  %v0_b304 = load i32, i32* @r7, align 4
  %v0_b308 = load i32, i32* @r6, align 4
  %v3_b308 = mul i32 %v0_b308, 65536
  store i32 %v3_b308, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v3_b310 = urem i32 %v0_b304, 65536
  %v3_b314 = urem i32 %v0_b308, 65536
  store i32 %v3_b314, i32* %r2.global-to-local, align 4
  %v3_b318 = urem i32 %v0_b300, 65536
  store i32 %v3_b318, i32* %r3.global-to-local, align 4
  %v0_b31c = load i32, i32* %sb.global-to-local, align 4
  %v2_b31c = icmp eq i32 %v0_b31c, 0
  store i1 %v2_b31c, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-40, align 4
  %tmp51 = icmp slt i32 %v0_b31c, 1
  br i1 %tmp51, label %dec_label_pc_b4a0, label %dec_label_pc_b334

dec_label_pc_b334:                                ; preds = %dec_label_pc_b300
  %v1_b338 = urem i32 %v0_b300, 256
  %v1_b33c = urem i32 %v0_b308, 256
  %v1_b340 = urem i32 %v0_b304, 256
  %v3_b344 = mul nuw nsw i32 %v1_b33c, 256
  %v3_b348 = mul nuw nsw i32 %v1_b338, 256
  %tmp52 = udiv i32 %v0_b304, 256
  %v3_b34c = urem i32 %tmp52, 256
  %v4_b350 = mul nuw nsw i32 %v1_b340, 256
  %v5_b350 = or i32 %v4_b350, %v3_b34c
  store i32 %v5_b350, i32* %r7.global-to-local, align 4
  %tmp53 = udiv i32 %v0_b300, 256
  %v4_b354 = urem i32 %tmp53, 256
  %v5_b354 = or i32 %v4_b354, %v3_b348
  store i32 %v5_b354, i32* %r5.global-to-local, align 4
  %tmp54 = udiv i32 %v0_b308, 256
  %v4_b358 = urem i32 %tmp54, 256
  %v5_b358 = or i32 %v4_b358, %v3_b344
  store i32 %v5_b358, i32* %r6.global-to-local, align 4
  store i32 %v1_b33c, i32* %r2.global-to-local, align 4
  store i32 %v1_b338, i32* %r3.global-to-local, align 4
  %v2_b3d4 = icmp eq i32 %v1_b268, 0
  %v4_b3d8 = sext i8 %v5_b258 to i32
  %sext = mul i32 %v0_b304, 16777216
  %v4_b3f4 = sdiv i32 %sext, 16777216
  %sext7 = mul i32 %v0_b308, 16777216
  %v4_b450 = sdiv i32 %sext7, 16777216
  %sext8 = mul i32 %v0_b300, 16777216
  %v4_b470 = sdiv i32 %sext8, 16777216
  br label %dec_label_pc_b374

dec_label_pc_b374:                                ; preds = %bb58, %dec_label_pc_b334
  %v2_b37c = call i32* @calloc(i32 128, i32 1)
  %v4_b37c = ptrtoint i32* %v2_b37c to i32
  store i32 %v4_b1e8, i32* %r2.global-to-local, align 4
  %v3_b384 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_b384, i32* %r3.global-to-local, align 4
  %v2_b388 = load i32, i32* @r4, align 4
  %v5_b388 = mul i32 %v2_b388, 4
  %v6_b388 = add i32 %v5_b388, %v4_b1e8
  %v7_b388 = inttoptr i32 %v6_b388 to i32*
  store i32 %v4_b37c, i32* %v7_b388, align 4
  %v0_b38c = load i32, i32* %r2.global-to-local, align 4
  %v1_b38c = load i32, i32* %r3.global-to-local, align 4
  %v4_b38c = mul i32 %v1_b38c, 4
  %v5_b38c = add i32 %v4_b38c, %v0_b38c
  %v6_b38c = inttoptr i32 %v5_b38c to i32*
  %v7_b38c = load i32, i32* %v6_b38c, align 4
  store i32 %v7_b38c, i32* %lr.global-to-local, align 4
  %v1_b390 = inttoptr i32 %v7_b38c to i8*
  %v2_b390 = load i8, i8* %v1_b390, align 1
  %tmp = urem i8 %v2_b390, 16
  %v1_b394 = zext i8 %tmp to i32
  %v1_b398 = or i32 %v1_b394, 64
  store i32 %v1_b398, i32* %r3.global-to-local, align 4
  %v1_b39c = trunc i32 %v1_b398 to i8
  store i8 %v1_b39c, i8* %v1_b390, align 1
  %v0_b3a0 = load i32, i32* %lr.global-to-local, align 4
  %v1_b3a0 = inttoptr i32 %v0_b3a0 to i8*
  %v2_b3a0 = load i8, i8* %v1_b3a0, align 1
  %v1_b3a4 = and i8 %v2_b3a0, -16
  %v1_b3a8 = or i8 %v1_b3a4, 5
  store i8 %v1_b3a8, i8* %v1_b3a0, align 1
  %v2_b3b4 = load i32, i32* %lr.global-to-local, align 4
  %v3_b3b4 = add i32 %v2_b3b4, 1
  %v4_b3b4 = inttoptr i32 %v3_b3b4 to i8*
  store i8 %v5_b220, i8* %v4_b3b4, align 1
  %v3_b3b8 = load i32, i32* %stack_var_-44, align 4
  %v1_b3bc = add i32 %v3_b3b8, 32
  %tmp55 = mul i32 %v1_b3bc, 256
  %v1_b3c8 = and i32 %tmp55, 65280
  %tmp56 = udiv i32 %v1_b3bc, 256
  %v4_b3cc = urem i32 %tmp56, 256
  %v5_b3cc = or i32 %v4_b3cc, %v1_b3c8
  store i32 %v5_b3cc, i32* %r2.global-to-local, align 4
  store i1 %v2_b3d4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v4_b3d8, i32* %r3.global-to-local, align 4
  %v2_b3dc = load i32, i32* %lr.global-to-local, align 4
  %v3_b3dc = add i32 %v2_b3dc, 8
  %v4_b3dc = inttoptr i32 %v3_b3dc to i8*
  store i8 %v5_b258, i8* %v4_b3dc, align 1
  %v0_b3e0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b3e0, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_b374
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_b3e4 = load i32, i32* %lr.global-to-local, align 4
  %v4_b3e4 = add i32 %v3_b3e4, 6
  %v5_b3e4 = inttoptr i32 %v4_b3e4 to i8*
  store i8 64, i8* %v5_b3e4, align 1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_b374, %bb
  %v0_b3e8 = load i32, i32* %r2.global-to-local, align 4
  %v1_b3e8 = trunc i32 %v0_b3e8 to i8
  %v2_b3e8 = load i32, i32* %lr.global-to-local, align 4
  %v3_b3e8 = add i32 %v2_b3e8, 2
  %v4_b3e8 = inttoptr i32 %v3_b3e8 to i8*
  store i8 %v1_b3e8, i8* %v4_b3e8, align 1
  %v0_b3ec = load i32, i32* %r2.global-to-local, align 4
  %v3_b3ec = sdiv i32 %v0_b3ec, 256
  store i32 %v3_b3ec, i32* %ip.global-to-local, align 4
  store i32 %v4_b3f4, i32* %r2.global-to-local, align 4
  %v2_b3f8 = load i32, i32* %lr.global-to-local, align 4
  %v3_b3f8 = add i32 %v2_b3f8, 9
  %v4_b3f8 = inttoptr i32 %v3_b3f8 to i8*
  store i8 17, i8* %v4_b3f8, align 1
  store i32 ptrtoint (i32* @global_var_1bd28.110 to i32), i32* %r3.global-to-local, align 4
  %v0_b400 = load i32, i32* %r2.global-to-local, align 4
  %v1_b400 = trunc i32 %v0_b400 to i8
  %v2_b400 = load i32, i32* %lr.global-to-local, align 4
  %v3_b400 = add i32 %v2_b400, 5
  %v4_b400 = inttoptr i32 %v3_b400 to i8*
  store i8 %v1_b400, i8* %v4_b400, align 1
  %v0_b404 = load i32, i32* %ip.global-to-local, align 4
  %v1_b404 = trunc i32 %v0_b404 to i8
  %v2_b404 = load i32, i32* %lr.global-to-local, align 4
  %v3_b404 = add i32 %v2_b404, 3
  %v4_b404 = inttoptr i32 %v3_b404 to i8*
  store i8 %v1_b404, i8* %v4_b404, align 1
  %v0_b408 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b408, label %.thread9, label %bb57

.thread9:                                         ; preds = %.thread
  %v3_b40c10 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_b40c10, i32* %ip.global-to-local, align 4
  br label %bb58

bb57:                                             ; preds = %.thread
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_b40c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_b40c, i32* %ip.global-to-local, align 4
  %v3_b410 = load i32, i32* %lr.global-to-local, align 4
  %v4_b410 = add i32 %v3_b410, 7
  %v5_b410 = inttoptr i32 %v4_b410 to i8*
  store i8 0, i8* %v5_b410, align 1
  %v0_b418.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb58

bb58:                                             ; preds = %.thread9, %bb57
  %v0_b418 = phi i32 [ %v3_b40c10, %.thread9 ], [ %v0_b418.pre, %bb57 ]
  %v2_b414 = load i32, i32* @global_var_1bd28.110, align 4
  store i32 %v2_b414, i32* %r2.global-to-local, align 4
  %v3_b418 = mul i32 %v0_b418, 32
  store i32 %v3_b418, i32* %r3.global-to-local, align 4
  %v1_b41c = load i32, i32* %lr.global-to-local, align 4
  %v2_b41c = add i32 %v1_b41c, 12
  %v3_b41c = inttoptr i32 %v2_b41c to i32*
  store i32 %v2_b414, i32* %v3_b41c, align 4
  %v0_b420 = load i32, i32* %r3.global-to-local, align 4
  %v1_b420 = load i32, i32* %ip.global-to-local, align 4
  %tmp61 = mul i32 %v1_b420, -8
  %v5_b420 = add i32 %v0_b420, %tmp61
  %v1_b424 = load i32, i32* @sl, align 4
  %v2_b424 = add i32 %v5_b420, %v1_b424
  store i32 %v2_b424, i32* %r3.global-to-local, align 4
  %v1_b428 = add i32 %v2_b424, 16
  %v2_b428 = inttoptr i32 %v1_b428 to i32*
  %v3_b428 = load i32, i32* %v2_b428, align 4
  %v1_b42c = load i32, i32* %lr.global-to-local, align 4
  %v2_b42c = add i32 %v1_b42c, 16
  %v3_b42c = inttoptr i32 %v2_b42c to i32*
  store i32 %v3_b428, i32* %v3_b42c, align 4
  %v3_b430 = load i32, i32* %stack_var_-44, align 4
  %v1_b434 = add i32 %v3_b430, 12
  %tmp59 = mul i32 %v1_b434, 256
  %v1_b444 = and i32 %tmp59, 65280
  %tmp60 = udiv i32 %v1_b434, 256
  %v4_b448 = urem i32 %tmp60, 256
  %v5_b448 = or i32 %v4_b448, %v1_b444
  store i32 %v5_b448, i32* %ip.global-to-local, align 4
  %v1_b44c = load i32, i32* %lr.global-to-local, align 4
  %v2_b44c = add i32 %v1_b44c, 28
  %v3_b44c = inttoptr i32 %v2_b44c to i32*
  store i32 -1, i32* %v3_b44c, align 4
  store i32 %v4_b450, i32* %r2.global-to-local, align 4
  %v0_b454 = load i32, i32* %lr.global-to-local, align 4
  %v1_b454 = add i32 %v0_b454, 20
  store i32 %v1_b454, i32* %r4.global-to-local, align 4
  %v0_b458 = load i32, i32* %ip.global-to-local, align 4
  %v3_b458 = sdiv i32 %v0_b458, 256
  store i32 %v3_b458, i32* %r3.global-to-local, align 4
  %v0_b45c = load i32, i32* %r7.global-to-local, align 4
  %v1_b45c = trunc i32 %v0_b45c to i8
  %v3_b45c = add i32 %v0_b454, 4
  %v4_b45c = inttoptr i32 %v3_b45c to i8*
  store i8 %v1_b45c, i8* %v4_b45c, align 1
  %v0_b460 = load i32, i32* %r6.global-to-local, align 4
  %v1_b460 = trunc i32 %v0_b460 to i8
  %v2_b460 = load i32, i32* %lr.global-to-local, align 4
  %v3_b460 = add i32 %v2_b460, 20
  %v4_b460 = inttoptr i32 %v3_b460 to i8*
  store i8 %v1_b460, i8* %v4_b460, align 1
  %v0_b464 = load i32, i32* %r3.global-to-local, align 4
  %v1_b464 = trunc i32 %v0_b464 to i8
  %v2_b464 = load i32, i32* %r4.global-to-local, align 4
  %v3_b464 = add i32 %v2_b464, 5
  %v4_b464 = inttoptr i32 %v3_b464 to i8*
  store i8 %v1_b464, i8* %v4_b464, align 1
  %v0_b468 = load i32, i32* %r5.global-to-local, align 4
  %v1_b468 = trunc i32 %v0_b468 to i8
  %v2_b468 = load i32, i32* %r4.global-to-local, align 4
  %v3_b468 = add i32 %v2_b468, 2
  %v4_b468 = inttoptr i32 %v3_b468 to i8*
  store i8 %v1_b468, i8* %v4_b468, align 1
  %v0_b46c = load i32, i32* %r2.global-to-local, align 4
  %v1_b46c = trunc i32 %v0_b46c to i8
  %v2_b46c = load i32, i32* %r4.global-to-local, align 4
  %v3_b46c = add i32 %v2_b46c, 1
  %v4_b46c = inttoptr i32 %v3_b46c to i8*
  store i8 %v1_b46c, i8* %v4_b46c, align 1
  store i32 %v4_b470, i32* %r3.global-to-local, align 4
  %v0_b474 = load i32, i32* %ip.global-to-local, align 4
  %v1_b474 = trunc i32 %v0_b474 to i8
  %v2_b474 = load i32, i32* %r4.global-to-local, align 4
  %v3_b474 = add i32 %v2_b474, 4
  %v4_b474 = inttoptr i32 %v3_b474 to i8*
  store i8 %v1_b474, i8* %v4_b474, align 1
  %v0_b478 = load i32, i32* %r3.global-to-local, align 4
  %v1_b478 = trunc i32 %v0_b478 to i8
  %v2_b478 = load i32, i32* %r4.global-to-local, align 4
  %v3_b478 = add i32 %v2_b478, 3
  %v4_b478 = inttoptr i32 %v3_b478 to i8*
  store i8 %v1_b478, i8* %v4_b478, align 1
  %v0_b47c = load i32, i32* %r8.global-to-local, align 4
  %v0_b480 = load i32, i32* %lr.global-to-local, align 4
  %v1_b480 = add i32 %v0_b480, 32
  %v3_b484 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b484, i32* %r2.global-to-local, align 4
  %v3_b488 = call i32 @function_13068(i32 %v1_b480, i32 %v0_b47c, i32 %v3_b484)
  %v3_b48c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_b48c, i32* %r3.global-to-local, align 4
  %v1_b490 = add i32 %v3_b48c, 1
  store i32 %v1_b490, i32* @r4, align 4
  %v1_b494 = load i32, i32* %sb.global-to-local, align 4
  %v9_b494 = icmp eq i32 %v1_b490, %v1_b494
  store i1 %v9_b494, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_b490, i32* %stack_var_-40, align 4
  %v5_b49c = icmp slt i32 %v1_b490, %v1_b494
  br i1 %v5_b49c, label %dec_label_pc_b374, label %dec_label_pc_b4a0

dec_label_pc_b4a0:                                ; preds = %bb58, %dec_label_pc_b300
  %v0_b4a0 = phi i32 [ %v0_b31c, %dec_label_pc_b300 ], [ %v1_b494, %bb58 ]
  %v2_b4a0 = icmp eq i32 %v0_b4a0, 0
  store i1 %v2_b4a0, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_b4e8 = icmp eq i32 %v3_b310, 65535
  br label %dec_label_pc_b4a8.outer

dec_label_pc_b4a8.outer:                          ; preds = %dec_label_pc_b5b8, %dec_label_pc_b4a0
  %v1_b4a8.ph.in = phi i32 [ %v1_b5ac, %dec_label_pc_b5b8 ], [ %v0_b4a0, %dec_label_pc_b4a0 ]
  %v0_b4a8.ph = phi i1 [ %v2_b5b8, %dec_label_pc_b5b8 ], [ %v2_b4a0, %dec_label_pc_b4a0 ]
  %v1_b4a8.ph = icmp slt i32 %v1_b4a8.ph.in, 0
  %v4_b4a8 = or i1 %v1_b4a8.ph, %v0_b4a8.ph
  br label %dec_label_pc_b4a8

dec_label_pc_b4a8:                                ; preds = %dec_label_pc_b4a8.outer, %dec_label_pc_b4a8
  br i1 %v4_b4a8, label %dec_label_pc_b4a8, label %dec_label_pc_b4ac

dec_label_pc_b4ac:                                ; preds = %dec_label_pc_b4a8
  store i32 0, i32* %stack_var_-40, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_b4b8

dec_label_pc_b4b8:                                ; preds = %dec_label_pc_b508, %dec_label_pc_b4ac
  %v1_b4cc = phi i32 [ %v1_b5a8, %dec_label_pc_b508 ], [ 0, %dec_label_pc_b4ac ]
  %v5_b4bc = mul i32 %v1_b4cc, 24
  %v1_b4c0 = load i32, i32* @sl, align 4
  %v2_b4c0 = add i32 %v1_b4c0, %v5_b4bc
  store i32 %v2_b4c0, i32* %r3.global-to-local, align 4
  %v1_b4c8 = add i32 %v2_b4c0, 20
  %v2_b4c8 = inttoptr i32 %v1_b4c8 to i8*
  %v3_b4c8 = load i8, i8* %v2_b4c8, align 1
  %v4_b4c8 = zext i8 %v3_b4c8 to i32
  store i32 %v4_b4c8, i32* %r2.global-to-local, align 4
  %v4_b4cc = mul i32 %v1_b4cc, 4
  %v5_b4cc = add i32 %v4_b4cc, %v4_b1e8
  %v6_b4cc = inttoptr i32 %v5_b4cc to i32*
  %v7_b4cc = load i32, i32* %v6_b4cc, align 4
  store i32 %v7_b4cc, i32* @r5, align 4
  %v7_b4d4 = icmp eq i8 %v3_b4c8, 31
  store i1 %v7_b4d4, i1* %cpsr_z.global-to-local, align 1
  store i32 65535, i32* %r7.global-to-local, align 4
  %v1_b4dc = add i32 %v7_b4cc, 20
  store i32 %v1_b4dc, i32* @r6, align 4
  %tmp62 = icmp ult i8 %v3_b4c8, 32
  br i1 %tmp62, label %dec_label_pc_b5c4, label %dec_label_pc_b4e4

dec_label_pc_b4e4:                                ; preds = %dec_label_pc_b4b8
  store i32 %v3_b310, i32* %r2.global-to-local, align 4
  store i1 %v3_b4e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_b4e8, label %dec_label_pc_b62c, label %dec_label_pc_b4f0

dec_label_pc_b4f0:                                ; preds = %dec_label_pc_b5c4.dec_label_pc_b4f0_crit_edge, %dec_label_pc_b4e4
  %v1_b4f4 = phi i32 [ %v1_b4f4.pre, %dec_label_pc_b5c4.dec_label_pc_b4f0_crit_edge ], [ 65535, %dec_label_pc_b4e4 ]
  store i32 %v3_b314, i32* %r3.global-to-local, align 4
  %v9_b4f4 = icmp eq i32 %v3_b314, %v1_b4f4
  store i1 %v9_b4f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b4f4, label %dec_label_pc_b648, label %dec_label_pc_b4fc

dec_label_pc_b4fc:                                ; preds = %dec_label_pc_b62c.dec_label_pc_b4fc_crit_edge, %dec_label_pc_b4f0
  %v1_b500 = phi i32 [ %v1_b500.pre, %dec_label_pc_b62c.dec_label_pc_b4fc_crit_edge ], [ %v1_b4f4, %dec_label_pc_b4f0 ]
  %v9_b500 = icmp eq i32 %v3_b318, %v1_b500
  store i1 %v9_b500, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b500, label %dec_label_pc_b664, label %dec_label_pc_b508

dec_label_pc_b508:                                ; preds = %dec_label_pc_b648, %dec_label_pc_b4fc, %dec_label_pc_b664
  %v0_b50c = load i32, i32* %r8.global-to-local, align 4
  %v1_b50c = trunc i32 %v0_b50c to i8
  %v2_b50c = load i32, i32* @r5, align 4
  %v3_b50c = add i32 %v2_b50c, 10
  %v4_b50c = inttoptr i32 %v3_b50c to i8*
  store i8 %v1_b50c, i8* %v4_b50c, align 1
  %v0_b510 = load i32, i32* %r8.global-to-local, align 4
  %v1_b510 = trunc i32 %v0_b510 to i8
  %v2_b510 = load i32, i32* @r5, align 4
  %v3_b510 = add i32 %v2_b510, 11
  %v4_b510 = inttoptr i32 %v3_b510 to i8*
  store i8 %v1_b510, i8* %v4_b510, align 1
  %v0_b514 = load i32, i32* @r5, align 4
  store i32 %v0_b514, i32* @r0, align 4
  %v2_b518 = call i32 @function_ddf4(i32 %v0_b514, i32 20)
  %v3_b518 = trunc i32 %v2_b518 to i8
  %v4_b51c = sdiv i32 %v2_b518, 256
  store i32 %v4_b51c, i32* %r3.global-to-local, align 4
  %v1_b520 = trunc i32 %v4_b51c to i8
  %v2_b520 = load i32, i32* @r5, align 4
  %v3_b520 = add i32 %v2_b520, 11
  %v4_b520 = inttoptr i32 %v3_b520 to i8*
  store i8 %v1_b520, i8* %v4_b520, align 1
  %v3_b524 = load i32, i32* @r5, align 4
  %v4_b524 = add i32 %v3_b524, 10
  %v5_b524 = inttoptr i32 %v4_b524 to i8*
  store i8 %v3_b518, i8* %v5_b524, align 1
  %v0_b528 = load i32, i32* %r8.global-to-local, align 4
  %v1_b528 = trunc i32 %v0_b528 to i8
  %v2_b528 = load i32, i32* @r6, align 4
  %v3_b528 = add i32 %v2_b528, 6
  %v4_b528 = inttoptr i32 %v3_b528 to i8*
  store i8 %v1_b528, i8* %v4_b528, align 1
  %v0_b52c = load i32, i32* %r8.global-to-local, align 4
  %v1_b52c = trunc i32 %v0_b52c to i8
  %v2_b52c = load i32, i32* @r6, align 4
  %v3_b52c = add i32 %v2_b52c, 7
  %v4_b52c = inttoptr i32 %v3_b52c to i8*
  store i8 %v1_b52c, i8* %v4_b52c, align 1
  %v0_b530 = load i32, i32* @r5, align 4
  %v1_b530 = add i32 %v0_b530, 24
  %v2_b530 = inttoptr i32 %v1_b530 to i8*
  %v3_b530 = load i8, i8* %v2_b530, align 1
  %v4_b530 = zext i8 %v3_b530 to i32
  store i32 %v4_b530, i32* %r3.global-to-local, align 4
  %v1_b534 = add i32 %v0_b530, 25
  %v2_b534 = inttoptr i32 %v1_b534 to i8*
  %v3_b534 = load i8, i8* %v2_b534, align 1
  %v4_b534 = zext i8 %v3_b534 to i32
  %v4_b538 = mul nuw nsw i32 %v4_b534, 256
  %v5_b538 = or i32 %v4_b538, %v4_b530
  store i32 %v5_b538, i32* %r2.global-to-local, align 4
  %v3_b53c = load i32, i32* %stack_var_-44, align 4
  %v0_b540 = load i32, i32* @r6, align 4
  store i32 %v0_b540, i32* @r1, align 4
  %v1_b544 = add i32 %v3_b53c, 12
  store i32 %v1_b544, i32* %r3.global-to-local, align 4
  %v4_b54c = call i32 @function_de50(i32 %v0_b530, i32 %v0_b540, i32 %v5_b538, i32 %v1_b544)
  %v5_b54c = trunc i32 %v4_b54c to i8
  %v4_b55025 = udiv i32 %v4_b54c, 256
  %v1_b554 = trunc i32 %v4_b55025 to i8
  %v2_b554 = load i32, i32* @r6, align 4
  %v3_b554 = add i32 %v2_b554, 7
  %v4_b554 = inttoptr i32 %v3_b554 to i8*
  store i8 %v1_b554, i8* %v4_b554, align 1
  %v3_b558 = load i32, i32* @r6, align 4
  %v4_b558 = add i32 %v3_b558, 6
  %v5_b558 = inttoptr i32 %v4_b558 to i8*
  store i8 %v5_b54c, i8* %v5_b558, align 1
  %v3_b55c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_b55c, i32* %r3.global-to-local, align 4
  %v0_b560 = load i32, i32* @r5, align 4
  %v1_b560 = add i32 %v0_b560, 20
  %v2_b560 = inttoptr i32 %v1_b560 to i32*
  %v3_b560 = load i32, i32* %v2_b560, align 4
  %v5_b568 = mul i32 %v3_b55c, 24
  %v1_b56c = load i32, i32* @sl, align 4
  %v2_b56c = add i32 %v1_b56c, %v5_b568
  store i32 %v2_b56c, i32* %ip.global-to-local, align 4
  %v3_b570 = udiv i32 %v3_b560, 65536
  store i32 %v3_b570, i32* %r2.global-to-local, align 4
  %v1_b574 = trunc i32 %v3_b570 to i8
  %v3_b574 = add i32 %v2_b56c, 2
  %v4_b574 = inttoptr i32 %v3_b574 to i8*
  store i8 %v1_b574, i8* %v4_b574, align 1
  %v0_b578 = load i32, i32* %r2.global-to-local, align 4
  %v3_b57826 = udiv i32 %v0_b578, 256
  %v3_b57c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b57c, i32* %r2.global-to-local, align 4
  %v1_b580 = trunc i32 %v3_b57826 to i8
  %v2_b580 = load i32, i32* %ip.global-to-local, align 4
  %v3_b580 = add i32 %v2_b580, 3
  %v4_b580 = inttoptr i32 %v3_b580 to i8*
  store i8 %v1_b580, i8* %v4_b580, align 1
  %v0_b584 = load i32, i32* @r5, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_b58c = load i32, i32* %r2.global-to-local, align 4
  %v1_b58c = add i32 %v0_b58c, 32
  store i32 %v1_b58c, i32* %r2.global-to-local, align 4
  %v0_b590 = load i32, i32* %fp.global-to-local, align 4
  %v0_b598 = load i32, i32* %ip.global-to-local, align 4
  %v4_b598 = inttoptr i32 %v0_b598 to %sockaddr*
  %v7_b5a0 = inttoptr i32 %v0_b584 to i32*
  %v9_b5a0 = call i32 @sendto(i32 %v0_b590, i32* %v7_b5a0, i32 %v1_b58c, i32 16384, %sockaddr* %v4_b598, i32 16)
  %v3_b5a4 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_b5a4, i32* %r3.global-to-local, align 4
  %v1_b5a8 = add i32 %v3_b5a4, 1
  %v1_b5ac = load i32, i32* %sb.global-to-local, align 4
  %v9_b5ac = icmp eq i32 %v1_b5a8, %v1_b5ac
  store i1 %v9_b5ac, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_b5a8, i32* %stack_var_-40, align 4
  %v5_b5b4 = icmp slt i32 %v1_b5a8, %v1_b5ac
  br i1 %v5_b5b4, label %dec_label_pc_b4b8, label %dec_label_pc_b5b8

dec_label_pc_b5b8:                                ; preds = %dec_label_pc_b508
  %v2_b5b8 = icmp eq i32 %v1_b5ac, 0
  store i1 %v2_b5b8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_b4a8.outer

dec_label_pc_b5c4:                                ; preds = %dec_label_pc_b4b8
  %v1_b5c4 = add i32 %v2_b4c0, 16
  %v2_b5c4 = inttoptr i32 %v1_b5c4 to i32*
  %v3_b5c4 = load i32, i32* %v2_b5c4, align 4
  store i32 %v3_b5c4, i32* @r4, align 4
  %v0_b5c8 = call i32 @function_f508()
  %v3_b5cc = load i32, i32* %stack_var_-40, align 4
  %v5_b5d4 = mul i32 %v3_b5cc, 24
  %v0_b5d8 = load i32, i32* @r4, align 4
  %v1_b5dc = and i32 %v0_b5d8, 65280
  store i32 %v1_b5dc, i32* %r3.global-to-local, align 4
  %v1_b5d8 = udiv i32 %v0_b5d8, 256
  %v3_b5e0 = and i32 %v1_b5d8, 65280
  store i32 %v3_b5e0, i32* %r2.global-to-local, align 4
  %v1_b5e4 = load i32, i32* @sl, align 4
  %v2_b5e4 = add i32 %v1_b5e4, %v5_b5d4
  store i32 %v2_b5e4, i32* %ip.global-to-local, align 4
  %v1_b5f0 = add i32 %v2_b5e4, 20
  %v2_b5f0 = inttoptr i32 %v1_b5f0 to i8*
  %v3_b5f0 = load i8, i8* %v2_b5f0, align 1
  %v4_b5f0 = zext i8 %v3_b5f0 to i32
  store i32 %v4_b5f0, i32* %lr.global-to-local, align 4
  %v2_b5f8 = call i32 @llvm.bswap.i32(i32 %v0_b5d8)
  %v7_b5fc = lshr i32 %v0_b5c8, %v4_b5f0
  %v8_b5fc = add i32 %v7_b5fc, %v2_b5f8
  store i32 %v3_b310, i32* %r2.global-to-local, align 4
  %v2_b61c = call i32 @llvm.bswap.i32(i32 %v8_b5fc)
  store i32 %v2_b61c, i32* %r3.global-to-local, align 4
  %v1_b620 = load i32, i32* %r7.global-to-local, align 4
  %v9_b620 = icmp eq i32 %v3_b310, %v1_b620
  store i1 %v9_b620, i1* %cpsr_z.global-to-local, align 1
  %v1_b624 = load i32, i32* @r5, align 4
  %v2_b624 = add i32 %v1_b624, 16
  %v3_b624 = inttoptr i32 %v2_b624 to i32*
  store i32 %v2_b61c, i32* %v3_b624, align 4
  br i1 %v9_b620, label %dec_label_pc_b62c, label %dec_label_pc_b5c4.dec_label_pc_b4f0_crit_edge

dec_label_pc_b5c4.dec_label_pc_b4f0_crit_edge:    ; preds = %dec_label_pc_b5c4
  %v1_b4f4.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_b4f0

dec_label_pc_b62c:                                ; preds = %dec_label_pc_b5c4, %dec_label_pc_b4e4
  %v0_b62c = call i32 @function_f508()
  %v1_b62c = trunc i32 %v0_b62c to i8
  %v4_b63027 = udiv i32 %v0_b62c, 256
  %v1_b634 = trunc i32 %v4_b63027 to i8
  %v2_b634 = load i32, i32* @r5, align 4
  %v3_b634 = add i32 %v2_b634, 5
  %v4_b634 = inttoptr i32 %v3_b634 to i8*
  store i8 %v1_b634, i8* %v4_b634, align 1
  store i32 %v3_b314, i32* %r3.global-to-local, align 4
  %v1_b63c = load i32, i32* %r7.global-to-local, align 4
  %v9_b63c = icmp eq i32 %v3_b314, %v1_b63c
  store i1 %v9_b63c, i1* %cpsr_z.global-to-local, align 1
  %v3_b640 = load i32, i32* @r5, align 4
  %v4_b640 = add i32 %v3_b640, 4
  %v5_b640 = inttoptr i32 %v4_b640 to i8*
  store i8 %v1_b62c, i8* %v5_b640, align 1
  %v0_b644 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b644, label %dec_label_pc_b648, label %dec_label_pc_b62c.dec_label_pc_b4fc_crit_edge

dec_label_pc_b62c.dec_label_pc_b4fc_crit_edge:    ; preds = %dec_label_pc_b62c
  %v1_b500.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_b4fc

dec_label_pc_b648:                                ; preds = %dec_label_pc_b62c, %dec_label_pc_b4f0
  %v0_b648 = call i32 @function_f508()
  %v1_b648 = trunc i32 %v0_b648 to i8
  %v4_b650 = sdiv i32 %v0_b648, 256
  store i32 %v4_b650, i32* %r3.global-to-local, align 4
  %v1_b654 = load i32, i32* %r7.global-to-local, align 4
  %v9_b654 = icmp eq i32 %v3_b318, %v1_b654
  store i1 %v9_b654, i1* %cpsr_z.global-to-local, align 1
  %v3_b658 = load i32, i32* @r5, align 4
  %v4_b658 = add i32 %v3_b658, 20
  %v5_b658 = inttoptr i32 %v4_b658 to i8*
  store i8 %v1_b648, i8* %v5_b658, align 1
  %v0_b65c = load i32, i32* %r3.global-to-local, align 4
  %v1_b65c = trunc i32 %v0_b65c to i8
  %v2_b65c = load i32, i32* @r6, align 4
  %v3_b65c = add i32 %v2_b65c, 1
  %v4_b65c = inttoptr i32 %v3_b65c to i8*
  store i8 %v1_b65c, i8* %v4_b65c, align 1
  %v0_b660 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b660, label %dec_label_pc_b664, label %dec_label_pc_b508

dec_label_pc_b664:                                ; preds = %dec_label_pc_b648, %dec_label_pc_b4fc
  %v0_b664 = call i32 @function_f508()
  %v1_b664 = trunc i32 %v0_b664 to i8
  %v4_b668 = sdiv i32 %v0_b664, 256
  store i32 %v4_b668, i32* %r3.global-to-local, align 4
  %v1_b66c = trunc i32 %v4_b668 to i8
  %v2_b66c = load i32, i32* @r6, align 4
  %v3_b66c = add i32 %v2_b66c, 3
  %v4_b66c = inttoptr i32 %v3_b66c to i8*
  store i8 %v1_b66c, i8* %v4_b66c, align 1
  %v3_b670 = load i32, i32* @r6, align 4
  %v4_b670 = add i32 %v3_b670, 2
  %v5_b670 = inttoptr i32 %v4_b670 to i8*
  store i8 %v1_b664, i8* %v5_b670, align 1
  br label %dec_label_pc_b508

dec_label_pc_b678:                                ; preds = %dec_label_pc_b2d8
  %v0_b678 = load i32, i32* %fp.global-to-local, align 4
  %v1_b67c = call i32 @close(i32 %v0_b678)
  br label %dec_label_pc_b680

dec_label_pc_b680:                                ; preds = %dec_label_pc_b1c8, %dec_label_pc_b678
  %v29_b684 = phi i32 [ -1, %dec_label_pc_b1c8 ], [ %v1_b67c, %dec_label_pc_b678 ]
  store i32 %v3_b1c8, i32* %r4.global-to-local, align 4
  store i32 %v6_b1c8, i32* %r5.global-to-local, align 4
  store i32 %v9_b1c8, i32* %r6.global-to-local, align 4
  store i32 %v12_b1c8, i32* %r7.global-to-local, align 4
  ret i32 %v29_b684

; uselistorder directives
  uselistorder i32 %v4_b668, { 1, 0 }
  uselistorder i32 %v2_b61c, { 1, 0 }
  uselistorder i32 %v0_b5d8, { 1, 0, 2 }
  uselistorder i1 %v2_b5b8, { 1, 0 }
  uselistorder i32 %v1_b5ac, { 0, 2, 3, 1 }
  uselistorder i32 %v1_b5a8, { 2, 0, 3, 1 }
  uselistorder i32 %v3_b570, { 1, 0 }
  uselistorder i32 %v4_b51c, { 1, 0 }
  uselistorder i1 %v3_b4e8, { 1, 0 }
  uselistorder i32 %v1_b490, { 1, 0, 2, 3 }
  uselistorder i32 %v1_b434, { 1, 0 }
  uselistorder i32 %v1_b3bc, { 1, 0 }
  uselistorder i32 %v1_b33c, { 1, 0 }
  uselistorder i32 %v1_b338, { 1, 0 }
  uselistorder i32 %v0_b308, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_b300, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v1_b268, { 1, 0 }
  uselistorder i8 %v5_b258, { 1, 0 }
  uselistorder i32 %v5_b23c, { 1, 0 }
  uselistorder i32 %v6_b200, { 1, 0 }
  uselistorder i32 %v1_b1cc, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %stack_var_-40, { 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 1, 13, 12 }
  uselistorder i32* %r7.global-to-local, { 0, 3, 2, 4, 1, 5, 6, 7, 8 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 0, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder label %dec_label_pc_b680, { 1, 0 }
  uselistorder label %dec_label_pc_b508, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b4a8, { 1, 0 }
  uselistorder label %bb58, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_b68c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_b68c:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-2120 = alloca i32, align 4
  %v3_b68c = load i32, i32* @r4, align 4
  %v6_b68c = load i32, i32* @r5, align 4
  %v9_b68c = load i32, i32* @r6, align 4
  %v12_b68c = load i32, i32* @r7, align 4
  %v15_b68c = load i32, i32* @r8, align 4
  %v18_b68c = load i32, i32* @sb, align 4
  %v21_b68c = load i32, i32* @sl, align 4
  %v24_b68c = load i32, i32* @fp, align 4
  %v1_b698 = urem i32 %arg1, 256
  store i32 %v1_b698, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_b6a4 = urem i32 %arg3, 256
  store i32 %v1_b6a4, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  %v2_b6b0 = call i32* @calloc(i32 %v1_b698, i32 4)
  %v4_b6b0 = ptrtoint i32* %v2_b6b0 to i32
  %v0_b6b4 = load i32, i32* @r5, align 4
  store i32 %v0_b6b4, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_b6c0 = load i32, i32* @r4, align 4
  store i32 %v0_b6c0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v5_b6c8 = inttoptr i32 %v0_b6b4 to i32*
  %v6_b6c8 = call i32 @function_92dc(i32 %v0_b6c0, i32* %v5_b6c8, i32 2, i32 0)
  %v1_b6d4 = urem i32 %v6_b6c8, 256
  store i32 %v1_b6d4, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_b6e0 = load i32, i32* @r4, align 4
  store i32 %v0_b6e0, i32* %r0.global-to-local, align 4
  %v0_b6e4 = load i32, i32* @r5, align 4
  store i32 %v0_b6e4, i32* %r1.global-to-local, align 4
  %v5_b6e8 = trunc i32 %v6_b6c8 to i8
  %v6_b6ec = inttoptr i32 %v0_b6e4 to i32*
  %v7_b6ec = call i32 @function_92dc(i32 %v0_b6e0, i32* %v6_b6ec, i32 3, i32 65535)
  %v0_b6f0 = load i32, i32* @r5, align 4
  store i32 %v0_b6f0, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_b6fc = load i32, i32* @r4, align 4
  store i32 %v0_b6fc, i32* %r0.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v5_b704 = inttoptr i32 %v0_b6f0 to i32*
  %v6_b704 = call i32 @function_92dc(i32 %v0_b6fc, i32* %v5_b704, i32 4, i32 64)
  %v1_b70c = urem i32 %v6_b704, 256
  store i32 %v1_b70c, i32* %ip.global-to-local, align 4
  %v0_b710 = load i32, i32* @r5, align 4
  store i32 %v0_b710, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b71c = load i32, i32* @r4, align 4
  store i32 %v0_b71c, i32* %r0.global-to-local, align 4
  %v6_b724 = inttoptr i32 %v0_b710 to i32*
  %v7_b724 = call i32 @function_92dc(i32 %v0_b71c, i32* %v6_b724, i32 5, i32 0)
  %v1_b730 = urem i32 %v7_b724, 256
  store i32 %v1_b730, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_b73c = load i32, i32* @r4, align 4
  store i32 %v0_b73c, i32* %r0.global-to-local, align 4
  %v0_b740 = load i32, i32* @r5, align 4
  store i32 %v0_b740, i32* %r1.global-to-local, align 4
  %v5_b748 = inttoptr i32 %v0_b740 to i32*
  %v6_b748 = call i32 @function_92dc(i32 %v0_b73c, i32* %v5_b748, i32 6, i32 65535)
  %v0_b74c = load i32, i32* @r5, align 4
  store i32 %v0_b74c, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 53, i32* %r3.global-to-local, align 4
  store i32 %v6_b748, i32* %fp.global-to-local, align 4
  %v0_b75c = load i32, i32* @r4, align 4
  store i32 %v0_b75c, i32* %r0.global-to-local, align 4
  %v4_b760 = inttoptr i32 %v0_b74c to i32*
  %v5_b760 = call i32 @function_92dc(i32 %v0_b75c, i32* %v4_b760, i32 7, i32 53)
  %v0_b768 = load i32, i32* @r5, align 4
  store i32 %v0_b768, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  store i32 %v5_b760, i32* %sb.global-to-local, align 4
  %v0_b778 = load i32, i32* @r4, align 4
  store i32 %v0_b778, i32* %r0.global-to-local, align 4
  %v4_b77c = inttoptr i32 %v0_b768 to i32*
  %v5_b77c = call i32 @function_92dc(i32 %v0_b778, i32* %v4_b77c, i32 9, i32 65535)
  %v0_b780 = load i32, i32* @r5, align 4
  store i32 %v0_b780, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  store i32 %v5_b77c, i32* @sl, align 4
  %v0_b790 = load i32, i32* @r4, align 4
  store i32 %v0_b790, i32* %r0.global-to-local, align 4
  %v4_b794 = inttoptr i32 %v0_b780 to i32*
  %v5_b794 = call i32 @function_92dc(i32 %v0_b790, i32* %v4_b794, i32 0, i32 12)
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b7a0 = load i32, i32* @r5, align 4
  store i32 %v0_b7a0, i32* %r1.global-to-local, align 4
  store i32 %v5_b794, i32* %r8.global-to-local, align 4
  %v0_b7a8 = load i32, i32* @r4, align 4
  store i32 %v0_b7a8, i32* %r0.global-to-local, align 4
  %v4_b7ac = inttoptr i32 %v0_b7a0 to i32*
  %v5_b7ac = call i32 @function_8ec8(i32 %v0_b7a8, i32* %v4_b7ac, i32 8, i32 0)
  store i32 21, i32* %r0.global-to-local, align 4
  %v1_b7b8 = call i32 @function_12a20(i32 21)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 21, i32* %r0.global-to-local, align 4
  %v3_b7c4 = call i32 @function_1293c(i32 21, i32* null)
  %v4_b7c4 = inttoptr i32 %v3_b7c4 to i8*
  store i32 %v3_b7c4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v4_b7cc = call i32 (i8*, i32, ...) @open(i8* %v4_b7c4, i32 0)
  store i32 %v4_b7cc, i32* @r4, align 4
  store i32 21, i32* %r0.global-to-local, align 4
  %v1_b7d8 = call i32 @function_12968(i32 21)
  store i32 %v1_b7d8, i32* %r0.global-to-local, align 4
  %v0_b7dc = load i32, i32* @r4, align 4
  %v1_b7dc = icmp slt i32 %v0_b7dc, 0
  %v2_b7dc = icmp eq i32 %v0_b7dc, 0
  store i1 %v2_b7dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_b7dc, label %dec_label_pc_bda8, label %dec_label_pc_b7e4

dec_label_pc_b7e4:                                ; preds = %dec_label_pc_b68c
  %v2_b7e8 = ptrtoint i32* %stack_var_-2120 to i32
  store i32 %v2_b7e8, i32* @r6, align 4
  store i32 2048, i32* %r2.global-to-local, align 4
  store i32 %v2_b7e8, i32* %r1.global-to-local, align 4
  store i32 %v0_b7dc, i32* %r0.global-to-local, align 4
  %v4_b7f8 = call i32 @read(i32 %v0_b7dc, i32* nonnull %stack_var_-2120, i32 2048)
  store i32 %v4_b7f8, i32* @r5, align 4
  %v0_b800 = load i32, i32* @r4, align 4
  store i32 %v0_b800, i32* %r0.global-to-local, align 4
  %v1_b804 = call i32 @close(i32 %v0_b800)
  store i32 22, i32* %r0.global-to-local, align 4
  %v1_b80c = call i32 @function_12a20(i32 22)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v3_b818 = call i32 @function_1293c(i32 22, i32* null)
  %v0_b81c = load i32, i32* @r5, align 4
  store i32 %v0_b81c, i32* @r1, align 4
  store i32 %v3_b818, i32* %r2.global-to-local, align 4
  store i32 %v2_b7e8, i32* %r0.global-to-local, align 4
  %v3_b828 = bitcast i32* %stack_var_-2120 to i8*
  %v4_b828 = call i32 @function_13340(i8* %v3_b828, i32 %v0_b81c, i32 %v3_b818)
  store i32 %v4_b828, i32* @r4, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v1_b834 = call i32 @function_12968(i32 22)
  store i32 %v1_b834, i32* %r0.global-to-local, align 4
  %v0_b838 = load i32, i32* @r4, align 4
  %v2_b838 = icmp eq i32 %v0_b838, -1
  store i1 %v2_b838, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b838, label %dec_label_pc_bda8, label %dec_label_pc_b840

dec_label_pc_b840:                                ; preds = %dec_label_pc_b7e4
  %v0_b840 = load i32, i32* @r5, align 4
  %v9_b840 = icmp eq i32 %v0_b840, %v0_b838
  store i1 %v9_b840, i1* %cpsr_z.global-to-local, align 1
  %v7_b844 = icmp sgt i32 %v0_b840, %v0_b838
  br i1 %v7_b844, label %dec_label_pc_b848, label %dec_label_pc_bda8

dec_label_pc_b848:                                ; preds = %dec_label_pc_b840
  store i32 %v0_b840, i32* %r3.global-to-local, align 4
  store i32 %v0_b838, i32* %r2.global-to-local, align 4
  %v0_b858 = load i32, i32* @r6, align 4
  %v2_b858 = add i32 %v0_b858, %v0_b838
  store i32 %v2_b858, i32* %r1.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v2_b860 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_b860, i32* %r7.global-to-local, align 4
  %v1_b890 = add i32 %v0_b840, -1
  br label %dec_label_pc_b888

dec_label_pc_b86c:                                ; preds = %dec_label_pc_b8b0, %bb139
  %v9_b86c = icmp eq i32 %v0_b878, %v1_b890
  store i1 %v9_b86c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b86c, label %dec_label_pc_b8bc, label %dec_label_pc_b874

dec_label_pc_b874:                                ; preds = %dec_label_pc_b8a0, %dec_label_pc_b86c, %bb
  %v0_b8ac43 = phi i32 [ %v0_b8ac, %dec_label_pc_b8a0 ], [ %v0_b8ac44, %dec_label_pc_b86c ], [ %v0_b8ac, %bb ]
  %v0_b88c39 = phi i32 [ 0, %dec_label_pc_b8a0 ], [ %v0_b88c40, %dec_label_pc_b86c ], [ 0, %bb ]
  store i32 %v0_b840, i32* %r0.global-to-local, align 4
  %v1_b878 = add i32 %v0_b878, 1
  store i32 %v1_b878, i32* %r2.global-to-local, align 4
  %v9_b87c = icmp eq i32 %v0_b840, %v1_b878
  store i1 %v9_b87c, i1* %cpsr_z.global-to-local, align 1
  %v1_b880 = add i32 %v0_b880, 1
  store i32 %v1_b880, i32* %r7.global-to-local, align 4
  br i1 %v9_b87c, label %dec_label_pc_bda8, label %dec_label_pc_b888

dec_label_pc_b888:                                ; preds = %dec_label_pc_b874, %dec_label_pc_b848
  %v0_b880 = phi i32 [ %v1_b880, %dec_label_pc_b874 ], [ %v2_b860, %dec_label_pc_b848 ]
  %v0_b878 = phi i32 [ %v1_b878, %dec_label_pc_b874 ], [ %v0_b838, %dec_label_pc_b848 ]
  %v0_b8ac = phi i32 [ %v0_b8ac43, %dec_label_pc_b874 ], [ 0, %dec_label_pc_b848 ]
  %v0_b88c = phi i32 [ %v0_b88c39, %dec_label_pc_b874 ], [ 0, %dec_label_pc_b848 ]
  %v0_b894 = phi i32 [ %v1_b894, %dec_label_pc_b874 ], [ %v2_b858, %dec_label_pc_b848 ]
  %v1_b888 = inttoptr i32 %v0_b894 to i8*
  %v2_b888 = load i8, i8* %v1_b888, align 1
  %v3_b888 = zext i8 %v2_b888 to i32
  store i32 %v3_b888, i32* %r3.global-to-local, align 4
  %v2_b88c = icmp eq i32 %v0_b88c, 0
  store i1 %v2_b88c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_b890, i32* %ip.global-to-local, align 4
  %v1_b894 = add i32 %v0_b894, 1
  store i32 %v1_b894, i32* %r1.global-to-local, align 4
  %v1_b898 = add nsw i32 %v3_b888, -48
  store i32 %v1_b898, i32* %r0.global-to-local, align 4
  br i1 %v2_b88c, label %dec_label_pc_b8a0, label %dec_label_pc_b8b0

dec_label_pc_b8a0:                                ; preds = %dec_label_pc_b888
  %v7_b8a0 = icmp eq i8 %v2_b888, 9
  store i1 %v7_b8a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_b8a0, label %dec_label_pc_b874, label %bb

bb:                                               ; preds = %dec_label_pc_b8a0
  %v8_b8a4 = icmp eq i8 %v2_b888, 32
  store i1 %v8_b8a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_b8a4, label %dec_label_pc_b874, label %dec_label_pc_b8ac

dec_label_pc_b8ac:                                ; preds = %bb
  %v1_b8ac = add i32 %v0_b8ac, 1
  store i32 %v1_b8ac, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_b8b0

dec_label_pc_b8b0:                                ; preds = %dec_label_pc_b888, %dec_label_pc_b8ac
  %v0_b8ac44 = phi i32 [ %v0_b8ac, %dec_label_pc_b888 ], [ %v1_b8ac, %dec_label_pc_b8ac ]
  %v0_b88c40 = phi i32 [ %v0_b88c, %dec_label_pc_b888 ], [ %v1_b8ac, %dec_label_pc_b8ac ]
  %v7_b8b0 = icmp eq i8 %v2_b888, 46
  store i1 %v7_b8b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_b8b0, label %dec_label_pc_b86c, label %bb139

bb139:                                            ; preds = %dec_label_pc_b8b0
  %v8_b8b4 = icmp eq i32 %v1_b898, 9
  store i1 %v8_b8b4, i1* %cpsr_z.global-to-local, align 1
  %tmp = icmp ult i32 %v1_b898, 10
  br i1 %tmp, label %dec_label_pc_b86c, label %dec_label_pc_b8bc

dec_label_pc_b8bc:                                ; preds = %dec_label_pc_b86c, %bb139
  %v0_b878.lcssa = phi i32 [ %v1_b890, %dec_label_pc_b86c ], [ %v0_b878, %bb139 ]
  %v2_b8c0 = sub i32 %v0_b878.lcssa, %v0_b838
  store i32 %v2_b8c0, i32* %r2.global-to-local, align 4
  store i32 %v2_b858, i32* %r1.global-to-local, align 4
  store i32 %v2_b860, i32* %r0.global-to-local, align 4
  %v3_b8cc = call i32 @function_13068(i32 %v2_b860, i32 %v2_b858, i32 %v2_b8c0)
  store i32 0, i32* %r3.global-to-local, align 4
  %tmp140 = bitcast i32* %stack_var_-72 to i8*
  store i32 %v2_b860, i32* %r0.global-to-local, align 4
  %v2_b8dc = load i32, i32* %r7.global-to-local, align 4
  %v3_b8dc = inttoptr i32 %v2_b8dc to i8*
  store i8 0, i8* %v3_b8dc, align 1
  %v3_b8e0 = call i32 @inet_addr(i8* %tmp140)
  store i32 %v3_b8e0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b8e8

dec_label_pc_b8e821:                              ; preds = %dec_label_pc_bda8
  unreachable

dec_label_pc_b8e8:                                ; preds = %dec_label_pc_be20, %dec_label_pc_be10, %dec_label_pc_be04, %dec_label_pc_bdf0, %dec_label_pc_b8bc
  %v29_bdec75 = phi i32 [ %v1_bdac, %dec_label_pc_be20 ], [ %v1_bdac, %dec_label_pc_be10 ], [ %v1_bdac, %dec_label_pc_be04 ], [ %v1_bdac, %dec_label_pc_bdf0 ], [ %v3_b8e0, %dec_label_pc_b8bc ]
  %stack_var_-2176.0 = phi i32 [ 33686020, %dec_label_pc_be20 ], [ 104859200, %dec_label_pc_be10 ], [ 707416650, %dec_label_pc_be04 ], [ 134744072, %dec_label_pc_bdf0 ], [ %v3_b8e0, %dec_label_pc_b8bc ]
  store i32 %v5_b7ac, i32* %ip.global-to-local, align 4
  %v2_b8ec = icmp eq i32 %v5_b7ac, 0
  store i1 %v2_b8ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b8ec, label %dec_label_pc_bde4, label %dec_label_pc_b8f4

dec_label_pc_b8f4:                                ; preds = %dec_label_pc_b8e8
  store i32 %v5_b7ac, i32* %r0.global-to-local, align 4
  %v1_b8f8 = inttoptr i32 %v5_b7ac to i8*
  %v2_b8f8 = call i32 @function_12fec(i8* %v1_b8f8)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_b90c = call i32 @socket(i32 2, i32 3, i32 17)
  store i32 %v3_b90c, i32* %r0.global-to-local, align 4
  %v2_b910 = icmp eq i32 %v3_b90c, -1
  store i1 %v2_b910, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b910, label %dec_label_pc_bde4, label %dec_label_pc_b91c

dec_label_pc_b91c:                                ; preds = %dec_label_pc_b8f4
  store i32 1, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-40, align 4
  %v6_b928 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_b928, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v7_b93c = call i32 @setsockopt(i32 %v3_b90c, i32 0, i32 3, i32* nonnull %stack_var_-40, i32 4)
  store i32 %v7_b93c, i32* %r0.global-to-local, align 4
  %v2_b940 = icmp eq i32 %v7_b93c, -1
  store i1 %v2_b940, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b940, label %dec_label_pc_bddc, label %dec_label_pc_b948

dec_label_pc_b948:                                ; preds = %dec_label_pc_b91c
  store i32 %v1_b698, i32* %r0.global-to-local, align 4
  %v3_b950 = mul i32 %v7_b6ec, 65536
  store i32 %v3_b950, i32* %lr.global-to-local, align 4
  %v0_b954 = load i32, i32* @sl, align 4
  %v3_b954 = mul i32 %v0_b954, 65536
  store i32 %v3_b954, i32* %sl.global-to-local, align 4
  %v0_b958 = load i32, i32* %r8.global-to-local, align 4
  %v0_b95c = load i32, i32* %fp.global-to-local, align 4
  %v3_b95c = mul i32 %v0_b95c, 65536
  store i32 %v3_b95c, i32* %r5.global-to-local, align 4
  %v0_b960 = load i32, i32* %sb.global-to-local, align 4
  %v3_b960 = mul i32 %v0_b960, 65536
  store i32 %v3_b960, i32* %sb.global-to-local, align 4
  %v5_b964 = trunc i32 %v0_b958 to i8
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_b96c = urem i32 %v7_b6ec, 65536
  store i32 %v3_b96c, i32* %r2.global-to-local, align 4
  %v3_b970 = urem i32 %v0_b95c, 65536
  store i32 %v3_b970, i32* %r3.global-to-local, align 4
  %v3_b974 = urem i32 %v0_b960, 65536
  store i32 %v3_b974, i32* %r4.global-to-local, align 4
  %v3_b978 = urem i32 %v0_b954, 65536
  store i32 %v3_b978, i32* %r8.global-to-local, align 4
  %v2_b97c = icmp eq i32 %v1_b698, 0
  store i1 %v2_b97c, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-40, align 4
  br i1 %v2_b97c, label %dec_label_pc_bdcc, label %dec_label_pc_b9a0

dec_label_pc_b9a0:                                ; preds = %dec_label_pc_b948
  %v4_b9a4 = sext i8 %v5_b964 to i32
  %v2_b9a8 = add i32 %v4_b9a4, %v2_b8f8
  store i32 %v2_b9a8, i32* @fp, align 4
  %v3_b9ac = mul i32 %v2_b9a8, 65536
  %v1_b9b0 = add i32 %v3_b9ac, 1769472
  store i32 %v1_b9b0, i32* %r6.global-to-local, align 4
  %v1_b9b4 = add i32 %v3_b9ac, 3080192
  %v1_b9c8 = urem i32 %v0_b954, 256
  %v3_b9d8 = udiv i32 %v1_b9b0, 256
  %v1_b9dc = urem i32 %v7_b6ec, 256
  %v1_b9e0 = and i32 %v3_b9d8, 65280
  %v1_b9e4 = urem i32 %v0_b960, 256
  %v3_b9e8 = mul nuw nsw i32 %v1_b9c8, 256
  %v1_b9f0 = urem i32 %v0_b95c, 256
  %v3_b9f4 = mul nuw nsw i32 %v1_b9e4, 256
  %tmp141 = udiv i32 %v0_b954, 256
  %v4_b9f8 = urem i32 %tmp141, 256
  %v5_b9f8 = or i32 %v4_b9f8, %v3_b9e8
  store i32 %v5_b9f8, i32* %r8.global-to-local, align 4
  %v4_b9fc = udiv i32 %v1_b9b0, 16777216
  %v5_b9fc = or i32 %v1_b9e0, %v4_b9fc
  store i32 %v5_b9fc, i32* %sl.global-to-local, align 4
  %tmp142 = udiv i32 %v0_b95c, 256
  %v3_ba08 = urem i32 %tmp142, 256
  %v4_ba0c = sdiv i32 %v1_b9b4, 16777216
  %tmp143 = udiv i32 %v7_b6ec, 256
  %v4_ba14 = mul nuw nsw i32 %v1_b9f0, 256
  %v5_ba14 = or i32 %v4_ba14, %v3_ba08
  store i32 %v5_ba14, i32* %r5.global-to-local, align 4
  %tmp144 = udiv i32 %v0_b960, 256
  %v4_ba18 = urem i32 %tmp144, 256
  %v5_ba18 = or i32 %v4_ba18, %v3_b9f4
  store i32 %v5_ba18, i32* %sb.global-to-local, align 4
  store i32 %v1_b9dc, i32* %r0.global-to-local, align 4
  %v1_ba24 = add i32 %v2_b8f8, 1
  store i32 %v1_ba24, i32* %r7.global-to-local, align 4
  %v3_ba28 = ashr i32 %v1_b9b4, 31
  store i32 %v3_ba28, i32* %lr.global-to-local, align 4
  store i32 %v1_b9f0, i32* %r1.global-to-local, align 4
  store i32 %v1_b9e4, i32* %r2.global-to-local, align 4
  %v3_ba3476 = udiv i32 %v1_b9e0, 256
  store i32 %v3_ba3476, i32* %r3.global-to-local, align 4
  store i32 %v1_b9c8, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v4_ba98 = sext i8 %v5_b6e8 to i32
  %sext14 = mul i32 %v6_b704, 16777216
  %v4_bab0 = sdiv i32 %sext14, 16777216
  %sext15 = mul i32 %tmp143, 16777216
  %v4_bac4 = sdiv i32 %sext15, 16777216
  %sext16 = mul i32 %v7_b6ec, 16777216
  %v4_bac8 = sdiv i32 %sext16, 16777216
  %sext17 = mul i32 %v1_b9b0, 256
  %v4_baf8 = sdiv i32 %sext17, 16777216
  %sext18 = mul i32 %v0_b960, 16777216
  %v4_bafc = sdiv i32 %sext18, 16777216
  %sext19 = mul i32 %v0_b95c, 16777216
  %v4_bb20 = sdiv i32 %sext19, 16777216
  %sext20 = mul i32 %v0_b954, 16777216
  %v4_bb2c = sdiv i32 %sext20, 16777216
  %v1_baa8 = trunc i32 %v4_ba0c to i8
  %extract.t = trunc i32 %v3_ba28 to i8
  br label %dec_label_pc_ba58

dec_label_pc_ba58:                                ; preds = %dec_label_pc_bbc0, %dec_label_pc_b9a0
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 600, i32* %r0.global-to-local, align 4
  %v2_ba60 = call i32* @calloc(i32 600, i32 1)
  %v4_ba60 = ptrtoint i32* %v2_ba60 to i32
  store i32 %v4_ba60, i32* %r0.global-to-local, align 4
  store i32 %v4_b6b0, i32* %lr.global-to-local, align 4
  %v3_ba68 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_ba68, i32* %r3.global-to-local, align 4
  %v2_ba6c = load i32, i32* %r4.global-to-local, align 4
  %v5_ba6c = mul i32 %v2_ba6c, 4
  %v6_ba6c = add i32 %v5_ba6c, %v4_b6b0
  %v7_ba6c = inttoptr i32 %v6_ba6c to i32*
  store i32 %v4_ba60, i32* %v7_ba6c, align 4
  %v0_ba70 = load i32, i32* %lr.global-to-local, align 4
  %v1_ba70 = load i32, i32* %r3.global-to-local, align 4
  %v4_ba70 = mul i32 %v1_ba70, 4
  %v5_ba70 = add i32 %v4_ba70, %v0_ba70
  %v6_ba70 = inttoptr i32 %v5_ba70 to i32*
  %v7_ba70 = load i32, i32* %v6_ba70, align 4
  store i32 %v7_ba70, i32* %r1.global-to-local, align 4
  %v1_ba74 = inttoptr i32 %v7_ba70 to i8*
  %v2_ba74 = load i8, i8* %v1_ba74, align 1
  %tmp156 = urem i8 %v2_ba74, 16
  %v1_ba78 = zext i8 %tmp156 to i32
  %v1_ba7c = or i32 %v1_ba78, 64
  store i32 %v1_ba7c, i32* %r2.global-to-local, align 4
  %v1_ba80 = trunc i32 %v1_ba7c to i8
  store i8 %v1_ba80, i8* %v1_ba74, align 1
  %v0_ba84 = load i32, i32* %r1.global-to-local, align 4
  %v1_ba84 = inttoptr i32 %v0_ba84 to i8*
  %v2_ba84 = load i8, i8* %v1_ba84, align 1
  %v1_ba88 = and i8 %v2_ba84, -16
  %v1_ba8c = or i8 %v1_ba88, 5
  store i32 %v1_b730, i32* %r0.global-to-local, align 4
  store i8 %v1_ba8c, i8* %v1_ba84, align 1
  store i32 %v4_ba98, i32* %r2.global-to-local, align 4
  %v2_ba9c = load i32, i32* %r1.global-to-local, align 4
  %v3_ba9c = add i32 %v2_ba9c, 1
  %v4_ba9c = inttoptr i32 %v3_ba9c to i8*
  store i8 %v5_b6e8, i8* %v4_ba9c, align 1
  store i32 %v4_ba0c, i32* %r3.global-to-local, align 4
  %v0_baa4 = load i32, i32* %r0.global-to-local, align 4
  %v2_baa4 = icmp eq i32 %v0_baa4, 0
  store i1 %v2_baa4, i1* %cpsr_z.global-to-local, align 1
  %v2_baa8 = load i32, i32* %r1.global-to-local, align 4
  %v3_baa8 = add i32 %v2_baa8, 2
  %v4_baa8 = inttoptr i32 %v3_baa8 to i8*
  store i8 %v1_baa8, i8* %v4_baa8, align 1
  store i32 %v3_ba28, i32* %r4.global-to-local, align 4
  store i32 %v4_bab0, i32* %r0.global-to-local, align 4
  %v0_bab4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_bab4, label %.thread22, label %bb145

bb145:                                            ; preds = %dec_label_pc_ba58
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_bab8 = load i32, i32* %r1.global-to-local, align 4
  %v4_bab8 = add i32 %v3_bab8, 6
  %v5_bab8 = inttoptr i32 %v4_bab8 to i8*
  store i8 64, i8* %v5_bab8, align 1
  %v0_bac0.pre = load i32, i32* %r4.global-to-local, align 4
  %extract.t77 = trunc i32 %v0_bac0.pre to i8
  br label %.thread22

.thread22:                                        ; preds = %dec_label_pc_ba58, %bb145
  %v0_bac0.off0 = phi i8 [ %extract.t, %dec_label_pc_ba58 ], [ %extract.t77, %bb145 ]
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_bac0 = load i32, i32* %r1.global-to-local, align 4
  %v3_bac0 = add i32 %v2_bac0, 3
  %v4_bac0 = inttoptr i32 %v3_bac0 to i8*
  store i8 %v0_bac0.off0, i8* %v4_bac0, align 1
  store i32 %v4_bac4, i32* %ip.global-to-local, align 4
  store i32 %v4_bac8, i32* %lr.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1bd28.110 to i32), i32* %r4.global-to-local, align 4
  %v0_bad0 = load i32, i32* %r0.global-to-local, align 4
  %v1_bad0 = trunc i32 %v0_bad0 to i8
  %v2_bad0 = load i32, i32* %r1.global-to-local, align 4
  %v3_bad0 = add i32 %v2_bad0, 8
  %v4_bad0 = inttoptr i32 %v3_bad0 to i8*
  store i8 %v1_bad0, i8* %v4_bad0, align 1
  %v0_bad4 = load i32, i32* %r3.global-to-local, align 4
  %v1_bad4 = trunc i32 %v0_bad4 to i8
  %v2_bad4 = load i32, i32* %r1.global-to-local, align 4
  %v3_bad4 = add i32 %v2_bad4, 9
  %v4_bad4 = inttoptr i32 %v3_bad4 to i8*
  store i8 %v1_bad4, i8* %v4_bad4, align 1
  %v0_bad8 = load i32, i32* %lr.global-to-local, align 4
  %v1_bad8 = trunc i32 %v0_bad8 to i8
  %v2_bad8 = load i32, i32* %r1.global-to-local, align 4
  %v3_bad8 = add i32 %v2_bad8, 5
  %v4_bad8 = inttoptr i32 %v3_bad8 to i8*
  store i8 %v1_bad8, i8* %v4_bad8, align 1
  %v0_badc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_badc, label %.thread23, label %bb146

.thread23:                                        ; preds = %.thread22
  %v2_bae024 = load i32, i32* @global_var_1bd28.110, align 4
  store i32 %v2_bae024, i32* %r3.global-to-local, align 4
  store i32 %v4_b9a4, i32* %lr.global-to-local, align 4
  br label %bb147

bb146:                                            ; preds = %.thread22
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_bae0 = load i32, i32* @global_var_1bd28.110, align 4
  store i32 %v2_bae0, i32* %r3.global-to-local, align 4
  store i32 %v4_b9a4, i32* %lr.global-to-local, align 4
  %v3_bae8 = load i32, i32* %r1.global-to-local, align 4
  %v4_bae8 = add i32 %v3_bae8, 7
  %v5_bae8 = inttoptr i32 %v4_bae8 to i8*
  store i8 0, i8* %v5_bae8, align 1
  %v0_baf0.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_baf4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb147

bb147:                                            ; preds = %.thread23, %bb146
  %v0_baf4 = phi i32 [ %v2_bae024, %.thread23 ], [ %v0_baf4.pre, %bb146 ]
  %v0_baf0 = phi i32 [ %v4_b9a4, %.thread23 ], [ %v0_baf0.pre, %bb146 ]
  %v0_baec = load i32, i32* %r1.global-to-local, align 4
  %v1_baec = add i32 %v0_baf0, 41
  %v2_baf0 = add i32 %v1_baec, %v0_baec
  store i32 %v2_baf0, i32* %r4.global-to-local, align 4
  %v2_baf4 = add i32 %v0_baec, 12
  %v3_baf4 = inttoptr i32 %v2_baf4 to i32*
  store i32 %v0_baf4, i32* %v3_baf4, align 4
  store i32 %v4_baf8, i32* %r2.global-to-local, align 4
  store i32 %v4_bafc, i32* %r3.global-to-local, align 4
  %v0_bb00 = load i32, i32* %r1.global-to-local, align 4
  %v1_bb00 = add i32 %v0_bb00, 20
  store i32 %v1_bb00, i32* %r0.global-to-local, align 4
  %v0_bb04 = load i32, i32* %ip.global-to-local, align 4
  %v1_bb04 = trunc i32 %v0_bb04 to i8
  %v3_bb04 = add i32 %v0_bb00, 4
  %v4_bb04 = inttoptr i32 %v3_bb04 to i8*
  store i8 %v1_bb04, i8* %v4_bb04, align 1
  %v0_bb08 = load i32, i32* %r2.global-to-local, align 4
  %v1_bb08 = trunc i32 %v0_bb08 to i8
  %v2_bb08 = load i32, i32* %r0.global-to-local, align 4
  %v3_bb08 = add i32 %v2_bb08, 5
  %v4_bb08 = inttoptr i32 %v3_bb08 to i8*
  store i8 %v1_bb08, i8* %v4_bb08, align 1
  %v0_bb0c = load i32, i32* %r3.global-to-local, align 4
  %v1_bb0c = trunc i32 %v0_bb0c to i8
  %v2_bb0c = load i32, i32* %r0.global-to-local, align 4
  %v3_bb0c = add i32 %v2_bb0c, 3
  %v4_bb0c = inttoptr i32 %v3_bb0c to i8*
  store i8 %v1_bb0c, i8* %v4_bb0c, align 1
  %v0_bb10 = load i32, i32* %sb.global-to-local, align 4
  %v1_bb10 = trunc i32 %v0_bb10 to i8
  %v2_bb10 = load i32, i32* %r0.global-to-local, align 4
  %v3_bb10 = add i32 %v2_bb10, 2
  %v4_bb10 = inttoptr i32 %v3_bb10 to i8*
  store i8 %v1_bb10, i8* %v4_bb10, align 1
  %v0_bb14 = load i32, i32* %sl.global-to-local, align 4
  %v1_bb14 = trunc i32 %v0_bb14 to i8
  %v2_bb14 = load i32, i32* %r0.global-to-local, align 4
  %v3_bb14 = add i32 %v2_bb14, 4
  %v4_bb14 = inttoptr i32 %v3_bb14 to i8*
  store i8 %v1_bb14, i8* %v4_bb14, align 1
  %v0_bb18 = load i32, i32* %r5.global-to-local, align 4
  %v1_bb18 = trunc i32 %v0_bb18 to i8
  %v2_bb18 = load i32, i32* %r1.global-to-local, align 4
  %v3_bb18 = add i32 %v2_bb18, 20
  %v4_bb18 = inttoptr i32 %v3_bb18 to i8*
  store i8 %v1_bb18, i8* %v4_bb18, align 1
  store i32 %v4_bb20, i32* %r2.global-to-local, align 4
  %v1_bb24 = load i32, i32* %r1.global-to-local, align 4
  %v2_bb24 = add i32 %v1_bb24, 16
  %v3_bb24 = inttoptr i32 %v2_bb24 to i32*
  store i32 %stack_var_-2176.0, i32* %v3_bb24, align 4
  %v0_bb28 = load i32, i32* %r2.global-to-local, align 4
  %v1_bb28 = trunc i32 %v0_bb28 to i8
  %v2_bb28 = load i32, i32* %r0.global-to-local, align 4
  %v3_bb28 = add i32 %v2_bb28, 1
  %v4_bb28 = inttoptr i32 %v3_bb28 to i8*
  store i8 %v1_bb28, i8* %v4_bb28, align 1
  store i32 %v4_bb2c, i32* %lr.global-to-local, align 4
  store i32 %v4_b9a4, i32* %r0.global-to-local, align 4
  %v0_bb34 = load i32, i32* %r1.global-to-local, align 4
  %v1_bb34 = add i32 %v0_bb34, 28
  store i32 %v1_bb34, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_bb40 = load i32, i32* %r8.global-to-local, align 4
  %v1_bb40 = trunc i32 %v0_bb40 to i8
  %v4_bb40 = inttoptr i32 %v1_bb34 to i8*
  store i8 %v1_bb40, i8* %v4_bb40, align 1
  %v0_bb44 = load i32, i32* %r3.global-to-local, align 4
  %v1_bb44 = trunc i32 %v0_bb44 to i8
  %v2_bb44 = load i32, i32* %ip.global-to-local, align 4
  %v3_bb44 = add i32 %v2_bb44, 5
  %v4_bb44 = inttoptr i32 %v3_bb44 to i8*
  store i8 %v1_bb44, i8* %v4_bb44, align 1
  %v0_bb48 = load i32, i32* %lr.global-to-local, align 4
  %v1_bb48 = trunc i32 %v0_bb48 to i8
  %v2_bb48 = load i32, i32* %ip.global-to-local, align 4
  %v3_bb48 = add i32 %v2_bb48, 1
  %v4_bb48 = inttoptr i32 %v3_bb48 to i8*
  store i8 %v1_bb48, i8* %v4_bb48, align 1
  %v0_bb4c = load i32, i32* %r3.global-to-local, align 4
  %v1_bb4c = trunc i32 %v0_bb4c to i8
  %v2_bb4c = load i32, i32* %ip.global-to-local, align 4
  %v3_bb4c = add i32 %v2_bb4c, 2
  %v4_bb4c = inttoptr i32 %v3_bb4c to i8*
  store i8 %v1_bb4c, i8* %v4_bb4c, align 1
  %v0_bb50 = load i32, i32* %r6.global-to-local, align 4
  %v1_bb50 = trunc i32 %v0_bb50 to i8
  %v2_bb50 = load i32, i32* %ip.global-to-local, align 4
  %v3_bb50 = add i32 %v2_bb50, 3
  %v4_bb50 = inttoptr i32 %v3_bb50 to i8*
  store i8 %v1_bb50, i8* %v4_bb50, align 1
  %v0_bb54 = load i32, i32* %r6.global-to-local, align 4
  %v1_bb54 = trunc i32 %v0_bb54 to i8
  %v2_bb54 = load i32, i32* %ip.global-to-local, align 4
  %v3_bb54 = add i32 %v2_bb54, 4
  %v4_bb54 = inttoptr i32 %v3_bb54 to i8*
  store i8 %v1_bb54, i8* %v4_bb54, align 1
  %v0_bb58 = load i32, i32* %r0.global-to-local, align 4
  %v1_bb58 = trunc i32 %v0_bb58 to i8
  %v2_bb58 = load i32, i32* %r1.global-to-local, align 4
  %v3_bb58 = add i32 %v2_bb58, 40
  %v4_bb58 = inttoptr i32 %v3_bb58 to i8*
  store i8 %v1_bb58, i8* %v4_bb58, align 1
  store i32 %v5_b7ac, i32* %r1.global-to-local, align 4
  %v0_bb60 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_bb60, i32* %r2.global-to-local, align 4
  %v0_bb64 = load i32, i32* %r4.global-to-local, align 4
  %v1_bb64 = add i32 %v0_bb64, 1
  store i32 %v1_bb64, i32* %r0.global-to-local, align 4
  %v3_bb68 = call i32 @function_13068(i32 %v1_bb64, i32 %v5_b7ac, i32 %v0_bb60)
  store i32 %v3_bb68, i32* %r0.global-to-local, align 4
  store i32 %v2_b8f8, i32* %r1.global-to-local, align 4
  %v1_bb70 = load i32, i32* %r6.global-to-local, align 4
  %v9_bb70 = icmp eq i32 %v2_b8f8, %v1_bb70
  store i1 %v9_bb70, i1* %cpsr_z.global-to-local, align 1
  %v7_bb74 = icmp sgt i32 %v2_b8f8, %v1_bb70
  store i32 %v1_bb70, i32* %lr.global-to-local, align 4
  %v0_bb84 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_bb84, i32* %r2.global-to-local, align 4
  %extract.t79 = trunc i32 %v1_bb70 to i8
  br i1 %v7_bb74, label %dec_label_pc_bb80, label %dec_label_pc_bbc0

dec_label_pc_bb80:                                ; preds = %bb147
  store i32 %v1_bb70, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_bb8c

dec_label_pc_bb8c:                                ; preds = %bb150, %dec_label_pc_bb80
  %v0_bba886153 = phi i32 [ %v0_bba886154, %bb150 ], [ %v1_bb70, %dec_label_pc_bb80 ]
  %v1_bb9c34 = phi i32 [ %v1_bbac92, %bb150 ], [ %v1_bb70, %dec_label_pc_bb80 ]
  %v1_bb98.off0 = phi i8 [ %v1_bb9857.off0, %bb150 ], [ %extract.t79, %dec_label_pc_bb80 ]
  %v0_bb9c33 = phi i32 [ %v0_bb9c335589, %bb150 ], [ %v0_bb84, %dec_label_pc_bb80 ]
  store i32 %v5_b7ac, i32* %ip.global-to-local, align 4
  %v2_bb90 = add i32 %v1_bb9c34, %v5_b7ac
  %v3_bb90 = inttoptr i32 %v2_bb90 to i8*
  %v4_bb90 = load i8, i8* %v3_bb90, align 1
  %v6_bb90 = zext i8 %v4_bb90 to i32
  store i32 %v6_bb90, i32* %r3.global-to-local, align 4
  %v7_bb94 = icmp eq i8 %v4_bb90, 46
  store i1 %v7_bb94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_bb94, label %bb148, label %.thread32

.thread32:                                        ; preds = %dec_label_pc_bb8c
  %v2_bb9c35 = add i32 %v1_bb9c34, %v0_bb9c33
  store i32 %v2_bb9c35, i32* %r0.global-to-local, align 4
  br label %.thread36

bb148:                                            ; preds = %dec_label_pc_bb8c
  %v3_bb98 = load i32, i32* %r2.global-to-local, align 4
  %v4_bb98 = inttoptr i32 %v3_bb98 to i8*
  store i8 %v1_bb98.off0, i8* %v4_bb98, align 1
  %v0_bba0.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_bb9c = load i32, i32* %r4.global-to-local, align 4
  %v1_bb9c = load i32, i32* %r1.global-to-local, align 4
  %v2_bb9c = add i32 %v1_bb9c, %v0_bb9c
  store i32 %v2_bb9c, i32* %r0.global-to-local, align 4
  br i1 %v0_bba0.pr, label %bb149, label %bb148..thread36_crit_edge

bb148..thread36_crit_edge:                        ; preds = %bb148
  %v0_bba886.pre = load i32, i32* %lr.global-to-local, align 4
  br label %.thread36

bb149:                                            ; preds = %bb148
  %v2_bba0 = add i32 %v2_bb9c, 1
  store i32 %v2_bba0, i32* %r2.global-to-local, align 4
  store i32 %v2_b8f8, i32* %r0.global-to-local, align 4
  %v0_bba8 = load i32, i32* %lr.global-to-local, align 4
  %v1_bba8 = add i32 %v0_bba8, 1
  store i32 %v1_bba8, i32* %ip.global-to-local, align 4
  %v1_bbac = add i32 %v1_bb9c, 1
  store i32 %v1_bbac, i32* %r1.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  br label %bb150

.thread36:                                        ; preds = %bb148..thread36_crit_edge, %.thread32
  %v0_bba886 = phi i32 [ %v0_bba886.pre, %bb148..thread36_crit_edge ], [ %v0_bba886153, %.thread32 ]
  %v0_bbac.ph = phi i32 [ %v1_bb9c, %bb148..thread36_crit_edge ], [ %v1_bb9c34, %.thread32 ]
  %v0_bb9c3355.ph = phi i32 [ %v0_bb9c, %bb148..thread36_crit_edge ], [ %v0_bb9c33, %.thread32 ]
  store i32 %v2_b8f8, i32* %r0.global-to-local, align 4
  %v1_bba887 = add i32 %v0_bba886, 1
  store i32 %v1_bba887, i32* %ip.global-to-local, align 4
  %v1_bbac88 = add i32 %v0_bbac.ph, 1
  store i32 %v1_bbac88, i32* %r1.global-to-local, align 4
  %v2_bbb4 = urem i32 %v1_bba887, 256
  store i32 %v2_bbb4, i32* %lr.global-to-local, align 4
  %extract.t82 = trunc i32 %v1_bba887 to i8
  br label %bb150

bb150:                                            ; preds = %bb149, %.thread36
  %v0_bba886154 = phi i32 [ 0, %bb149 ], [ %v2_bbb4, %.thread36 ]
  %v1_bbac92 = phi i32 [ %v1_bbac, %bb149 ], [ %v1_bbac88, %.thread36 ]
  %v0_bb9c335589 = phi i32 [ %v0_bb9c, %bb149 ], [ %v0_bb9c3355.ph, %.thread36 ]
  %v1_bb9857.off0 = phi i8 [ 0, %bb149 ], [ %extract.t82, %.thread36 ]
  %v9_bbb8 = icmp eq i32 %v2_b8f8, %v1_bbac92
  store i1 %v9_bbb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_bbb8, label %dec_label_pc_bbc0.loopexit, label %dec_label_pc_bb8c

dec_label_pc_bbc0.loopexit:                       ; preds = %bb150
  %v2_bbc0.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_bbc0

dec_label_pc_bbc0:                                ; preds = %dec_label_pc_bbc0.loopexit, %bb147
  %v2_bbc0 = phi i32 [ %v2_bbc0.pre, %dec_label_pc_bbc0.loopexit ], [ %v0_bb84, %bb147 ]
  %v0_bbc0.off0 = phi i8 [ %v1_bb9857.off0, %dec_label_pc_bbc0.loopexit ], [ %extract.t79, %bb147 ]
  %v3_bbc0 = inttoptr i32 %v2_bbc0 to i8*
  store i8 %v0_bbc0.off0, i8* %v3_bbc0, align 1
  %v3_bbc4 = load i32, i32* %stack_var_-40, align 4
  store i32 %v2_b8f8, i32* %r1.global-to-local, align 4
  %v0_bbcc = load i32, i32* %r4.global-to-local, align 4
  %v2_bbcc = add i32 %v0_bbcc, %v2_b8f8
  store i32 %v2_bbcc, i32* %r3.global-to-local, align 4
  %v1_bbd0 = add i32 %v3_bbc4, 1
  store i32 %v1_bbd0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 1, i32* %lr.global-to-local, align 4
  %v9_bbe0 = icmp eq i32 %v1_b698, %v1_bbd0
  store i1 %v9_bbe0, i1* %cpsr_z.global-to-local, align 1
  %v1_bbe4 = add i32 %v2_bbcc, 2
  store i32 %v1_bbe4, i32* %r2.global-to-local, align 4
  %v4_bbe8 = inttoptr i32 %v1_bbe4 to i8*
  store i8 0, i8* %v4_bbe8, align 1
  %v0_bbec = load i32, i32* %lr.global-to-local, align 4
  %v1_bbec = trunc i32 %v0_bbec to i8
  %v2_bbec = load i32, i32* %r2.global-to-local, align 4
  %v3_bbec = add i32 %v2_bbec, 3
  %v4_bbec = inttoptr i32 %v3_bbec to i8*
  store i8 %v1_bbec, i8* %v4_bbec, align 1
  %v0_bbf0 = load i32, i32* %lr.global-to-local, align 4
  %v1_bbf0 = trunc i32 %v0_bbf0 to i8
  %v2_bbf0 = load i32, i32* %r2.global-to-local, align 4
  %v3_bbf0 = add i32 %v2_bbf0, 1
  %v4_bbf0 = inttoptr i32 %v3_bbf0 to i8*
  store i8 %v1_bbf0, i8* %v4_bbf0, align 1
  %v0_bbf4 = load i32, i32* %ip.global-to-local, align 4
  %v1_bbf4 = trunc i32 %v0_bbf4 to i8
  %v2_bbf4 = load i32, i32* %r2.global-to-local, align 4
  %v3_bbf4 = add i32 %v2_bbf4, 2
  %v4_bbf4 = inttoptr i32 %v3_bbf4 to i8*
  store i8 %v1_bbf4, i8* %v4_bbf4, align 1
  %v0_bbf8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_bbf8, i32* %stack_var_-40, align 4
  %v8_bbfc = icmp sgt i32 %v1_b698, %v1_bbd0
  br i1 %v8_bbfc, label %dec_label_pc_ba58, label %dec_label_pc_bc00

dec_label_pc_bc00:                                ; preds = %dec_label_pc_bbc0, %dec_label_pc_bdcc
  %v4_bc70.pre-phi = phi i32 [ %v4_bdd0, %dec_label_pc_bdcc ], [ %v4_b9a4, %dec_label_pc_bbc0 ]
  store i32 %v1_b698, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 %v2_b97c, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_bc0c

dec_label_pc_bc0c:                                ; preds = %dec_label_pc_bc0c, %dec_label_pc_bd30, %dec_label_pc_bc00
  br i1 %v2_b97c, label %dec_label_pc_bc0c, label %dec_label_pc_bc10

dec_label_pc_bc10:                                ; preds = %dec_label_pc_bc0c
  store i32 0, i32* %stack_var_-40, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 65535, i32* @r6, align 4
  %v0_bc20 = load i32, i32* @fp, align 4
  %v1_bc20 = add i32 %v0_bc20, 27
  store i32 %v1_bc20, i32* @sb, align 4
  %v1_bc24 = add i32 %v0_bc20, 47
  store i32 %v1_bc24, i32* @sl, align 4
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_bc2c

dec_label_pc_bc2c:                                ; preds = %dec_label_pc_bc6c.dec_label_pc_bc2c_crit_edge, %dec_label_pc_bc10
  %v1_bc4c = phi i32 [ %v1_bc38.pre, %dec_label_pc_bc6c.dec_label_pc_bc2c_crit_edge ], [ 65535, %dec_label_pc_bc10 ]
  %v1_bc34 = phi i32 [ %v1_bd1c, %dec_label_pc_bc6c.dec_label_pc_bc2c_crit_edge ], [ 0, %dec_label_pc_bc10 ]
  store i32 %v4_b6b0, i32* %r3.global-to-local, align 4
  store i32 %v3_b96c, i32* %r8.global-to-local, align 4
  %v4_bc34 = mul i32 %v1_bc34, 4
  %v5_bc34 = add i32 %v4_bc34, %v4_b6b0
  %v6_bc34 = inttoptr i32 %v5_bc34 to i32*
  %v7_bc34 = load i32, i32* %v6_bc34, align 4
  store i32 %v7_bc34, i32* @r4, align 4
  %v9_bc38 = icmp eq i32 %v3_b96c, %v1_bc4c
  store i1 %v9_bc38, i1* %cpsr_z.global-to-local, align 1
  %v1_bc3c = add i32 %v7_bc34, 20
  store i32 %v1_bc3c, i32* @r5, align 4
  %v1_bc40 = add i32 %v7_bc34, 28
  store i32 %v1_bc40, i32* @r8, align 4
  br i1 %v9_bc38, label %dec_label_pc_bd40, label %dec_label_pc_bc48

dec_label_pc_bc48:                                ; preds = %dec_label_pc_bc2c
  store i32 %v3_b970, i32* %ip.global-to-local, align 4
  %v9_bc4c = icmp eq i32 %v3_b970, %v1_bc4c
  store i1 %v9_bc4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_bc4c, label %dec_label_pc_bd5c, label %dec_label_pc_bc54

dec_label_pc_bc54:                                ; preds = %dec_label_pc_bd40.dec_label_pc_bc54_crit_edge, %dec_label_pc_bc48
  %v1_bc58 = phi i32 [ %v1_bc58.pre, %dec_label_pc_bd40.dec_label_pc_bc54_crit_edge ], [ %v1_bc4c, %dec_label_pc_bc48 ]
  store i32 %v3_b974, i32* %lr.global-to-local, align 4
  %v9_bc58 = icmp eq i32 %v3_b974, %v1_bc58
  store i1 %v9_bc58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_bc58, label %dec_label_pc_bd78, label %dec_label_pc_bc60

dec_label_pc_bc60:                                ; preds = %dec_label_pc_bd5c.dec_label_pc_bc60_crit_edge, %dec_label_pc_bc54
  %v1_bc64 = phi i32 [ %v1_bc64.pre, %dec_label_pc_bd5c.dec_label_pc_bc60_crit_edge ], [ %v1_bc58, %dec_label_pc_bc54 ]
  store i32 %v3_b978, i32* %r0.global-to-local, align 4
  %v9_bc64 = icmp eq i32 %v3_b978, %v1_bc64
  store i1 %v9_bc64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_bc64, label %dec_label_pc_bd94, label %dec_label_pc_bc6c

dec_label_pc_bc6c:                                ; preds = %dec_label_pc_bd78, %dec_label_pc_bc60, %dec_label_pc_bd94
  %v0_bc6c = load i32, i32* @r4, align 4
  %v1_bc6c = add i32 %v0_bc6c, 41
  store i32 %v1_bc6c, i32* %r0.global-to-local, align 4
  store i32 %v4_bc70.pre-phi, i32* %r1.global-to-local, align 4
  %v2_bc74 = call i32 @function_f5bc(i32 %v1_bc6c, i32 %v4_bc70.pre-phi)
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_bc7c = load i32, i32* @r7, align 4
  %v1_bc7c = trunc i32 %v0_bc7c to i8
  %v2_bc7c = load i32, i32* @r4, align 4
  %v3_bc7c = add i32 %v2_bc7c, 10
  %v4_bc7c = inttoptr i32 %v3_bc7c to i8*
  store i8 %v1_bc7c, i8* %v4_bc7c, align 1
  %v0_bc80 = load i32, i32* @r7, align 4
  %v1_bc80 = trunc i32 %v0_bc80 to i8
  %v2_bc80 = load i32, i32* @r4, align 4
  %v3_bc80 = add i32 %v2_bc80, 11
  %v4_bc80 = inttoptr i32 %v3_bc80 to i8*
  store i8 %v1_bc80, i8* %v4_bc80, align 1
  %v0_bc84 = load i32, i32* @r4, align 4
  store i32 %v0_bc84, i32* @r0, align 4
  %v2_bc88 = call i32 @function_ddf4(i32 %v0_bc84, i32 20)
  %v3_bc88 = trunc i32 %v2_bc88 to i8
  store i32 %v2_bc88, i32* %r0.global-to-local, align 4
  %v4_bc8c = sdiv i32 %v2_bc88, 256
  store i32 %v4_bc8c, i32* %r3.global-to-local, align 4
  %v1_bc90 = trunc i32 %v4_bc8c to i8
  %v2_bc90 = load i32, i32* @r4, align 4
  %v3_bc90 = add i32 %v2_bc90, 11
  %v4_bc90 = inttoptr i32 %v3_bc90 to i8*
  store i8 %v1_bc90, i8* %v4_bc90, align 1
  %v3_bc94 = load i32, i32* @r4, align 4
  %v4_bc94 = add i32 %v3_bc94, 10
  %v5_bc94 = inttoptr i32 %v4_bc94 to i8*
  store i8 %v3_bc88, i8* %v5_bc94, align 1
  %v0_bc98 = load i32, i32* @r7, align 4
  %v1_bc98 = trunc i32 %v0_bc98 to i8
  %v2_bc98 = load i32, i32* @r5, align 4
  %v3_bc98 = add i32 %v2_bc98, 6
  %v4_bc98 = inttoptr i32 %v3_bc98 to i8*
  store i8 %v1_bc98, i8* %v4_bc98, align 1
  %v0_bc9c = load i32, i32* @r7, align 4
  %v1_bc9c = trunc i32 %v0_bc9c to i8
  %v2_bc9c = load i32, i32* @r5, align 4
  %v3_bc9c = add i32 %v2_bc9c, 7
  %v4_bc9c = inttoptr i32 %v3_bc9c to i8*
  store i8 %v1_bc9c, i8* %v4_bc9c, align 1
  %v0_bca0 = load i32, i32* @r4, align 4
  %v1_bca0 = add i32 %v0_bca0, 24
  %v2_bca0 = inttoptr i32 %v1_bca0 to i8*
  %v3_bca0 = load i8, i8* %v2_bca0, align 1
  %v4_bca0 = zext i8 %v3_bca0 to i32
  store i32 %v4_bca0, i32* %r3.global-to-local, align 4
  %v1_bca4 = add i32 %v0_bca0, 25
  %v2_bca4 = inttoptr i32 %v1_bca4 to i8*
  %v3_bca4 = load i8, i8* %v2_bca4, align 1
  %v4_bca4 = zext i8 %v3_bca4 to i32
  %v0_bca8 = load i32, i32* @r5, align 4
  store i32 %v0_bca8, i32* @r1, align 4
  %v4_bcac = mul nuw nsw i32 %v4_bca4, 256
  %v5_bcac = or i32 %v4_bcac, %v4_bca0
  store i32 %v5_bcac, i32* %r2.global-to-local, align 4
  store i32 %v0_bca0, i32* %r0.global-to-local, align 4
  %v0_bcb4 = load i32, i32* @sb, align 4
  store i32 %v0_bcb4, i32* %r3.global-to-local, align 4
  %v4_bcb8 = call i32 @function_de50(i32 %v0_bca0, i32 %v0_bca8, i32 %v5_bcac, i32 %v0_bcb4)
  %v5_bcb8 = trunc i32 %v4_bcb8 to i8
  store i32 %v4_bcb8, i32* %r0.global-to-local, align 4
  %v3_bcbc = load i32, i32* %stack_var_-40, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %stack_var_-2176.0, i32* %r2.global-to-local, align 4
  %v5_bccc = mul i32 %v3_bcbc, 24
  %v2_bcd0 = add i32 %v5_bccc, %arg2
  store i32 %v2_bcd0, i32* %lr.global-to-local, align 4
  %v4_bcd4 = sdiv i32 %v4_bcb8, 256
  store i32 %v4_bcd4, i32* %r3.global-to-local, align 4
  %v3_bcd8 = load i32, i32* @r5, align 4
  %v4_bcd8 = add i32 %v3_bcd8, 6
  %v5_bcd8 = inttoptr i32 %v4_bcd8 to i8*
  store i8 %v5_bcb8, i8* %v5_bcd8, align 1
  %v0_bcdc = load i32, i32* %r3.global-to-local, align 4
  %v1_bcdc = trunc i32 %v0_bcdc to i8
  %v2_bcdc = load i32, i32* @r5, align 4
  %v3_bcdc = add i32 %v2_bcdc, 7
  %v4_bcdc = inttoptr i32 %v3_bcdc to i8*
  store i8 %v1_bcdc, i8* %v4_bcdc, align 1
  %v0_bce0 = load i32, i32* %r2.global-to-local, align 4
  %v1_bce0 = load i32, i32* %lr.global-to-local, align 4
  %v2_bce0 = add i32 %v1_bce0, 4
  %v3_bce0 = inttoptr i32 %v2_bce0 to i32*
  store i32 %v0_bce0, i32* %v3_bce0, align 4
  %v0_bce4 = load i32, i32* @r4, align 4
  %v1_bce4 = add i32 %v0_bce4, 20
  %v2_bce4 = inttoptr i32 %v1_bce4 to i32*
  %v3_bce4 = load i32, i32* %v2_bce4, align 4
  %v3_bce8 = udiv i32 %v3_bce4, 65536
  store i32 %v3_bce8, i32* %r3.global-to-local, align 4
  %v3_bcec13 = udiv i32 %v3_bce4, 16777216
  %v1_bcf0 = trunc i32 %v3_bcec13 to i8
  %v2_bcf0 = load i32, i32* %lr.global-to-local, align 4
  %v3_bcf0 = add i32 %v2_bcf0, 3
  %v4_bcf0 = inttoptr i32 %v3_bcf0 to i8*
  store i8 %v1_bcf0, i8* %v4_bcf0, align 1
  %v0_bcf4 = load i32, i32* %r3.global-to-local, align 4
  %v1_bcf4 = trunc i32 %v0_bcf4 to i8
  %v2_bcf4 = load i32, i32* %lr.global-to-local, align 4
  %v3_bcf4 = add i32 %v2_bcf4, 2
  %v4_bcf4 = inttoptr i32 %v3_bcf4 to i8*
  store i8 %v1_bcf4, i8* %v4_bcf4, align 1
  store i32 16, i32* %ip.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_bd00 = load i32, i32* @r4, align 4
  store i32 %v0_bd00, i32* %r1.global-to-local, align 4
  store i32 %v3_b90c, i32* %r0.global-to-local, align 4
  %v0_bd08 = load i32, i32* @sl, align 4
  store i32 %v0_bd08, i32* %r2.global-to-local, align 4
  %v0_bd0c = load i32, i32* %lr.global-to-local, align 4
  %v4_bd0c = inttoptr i32 %v0_bd0c to %sockaddr*
  %v7_bd14 = inttoptr i32 %v0_bd00 to i32*
  %v9_bd14 = call i32 @sendto(i32 %v3_b90c, i32* %v7_bd14, i32 %v0_bd08, i32 16384, %sockaddr* %v4_bd0c, i32 16)
  %v3_bd18 = load i32, i32* %stack_var_-40, align 4
  %v1_bd1c = add i32 %v3_bd18, 1
  store i32 %v1_bd1c, i32* %r0.global-to-local, align 4
  store i32 %v1_b698, i32* %r3.global-to-local, align 4
  %v9_bd24 = icmp eq i32 %v1_b698, %v1_bd1c
  store i1 %v9_bd24, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_bd1c, i32* %stack_var_-40, align 4
  %v8_bd2c = icmp sgt i32 %v1_b698, %v1_bd1c
  br i1 %v8_bd2c, label %dec_label_pc_bc6c.dec_label_pc_bc2c_crit_edge, label %dec_label_pc_bd30

dec_label_pc_bc6c.dec_label_pc_bc2c_crit_edge:    ; preds = %dec_label_pc_bc6c
  %v1_bc38.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_bc2c

dec_label_pc_bd30:                                ; preds = %dec_label_pc_bc6c
  store i32 %v1_b698, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_bc0c

dec_label_pc_bd40:                                ; preds = %dec_label_pc_bc2c
  %v0_bd40 = call i32 @function_f508()
  %v1_bd40 = trunc i32 %v0_bd40 to i8
  store i32 %v0_bd40, i32* %r0.global-to-local, align 4
  store i32 %v3_b970, i32* %ip.global-to-local, align 4
  %v4_bd48 = sdiv i32 %v0_bd40, 256
  store i32 %v4_bd48, i32* %r3.global-to-local, align 4
  %v1_bd4c = load i32, i32* @r6, align 4
  %v9_bd4c = icmp eq i32 %v3_b970, %v1_bd4c
  store i1 %v9_bd4c, i1* %cpsr_z.global-to-local, align 1
  %v1_bd50 = trunc i32 %v4_bd48 to i8
  %v2_bd50 = load i32, i32* @r4, align 4
  %v3_bd50 = add i32 %v2_bd50, 5
  %v4_bd50 = inttoptr i32 %v3_bd50 to i8*
  store i8 %v1_bd50, i8* %v4_bd50, align 1
  %v3_bd54 = load i32, i32* @r4, align 4
  %v4_bd54 = add i32 %v3_bd54, 4
  %v5_bd54 = inttoptr i32 %v4_bd54 to i8*
  store i8 %v1_bd40, i8* %v5_bd54, align 1
  %v0_bd58 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_bd58, label %dec_label_pc_bd5c, label %dec_label_pc_bd40.dec_label_pc_bc54_crit_edge

dec_label_pc_bd40.dec_label_pc_bc54_crit_edge:    ; preds = %dec_label_pc_bd40
  %v1_bc58.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_bc54

dec_label_pc_bd5c:                                ; preds = %dec_label_pc_bd40, %dec_label_pc_bc48
  %v0_bd5c = call i32 @function_f508()
  %v1_bd5c = trunc i32 %v0_bd5c to i8
  store i32 %v0_bd5c, i32* %r0.global-to-local, align 4
  store i32 %v3_b974, i32* %lr.global-to-local, align 4
  %v4_bd64 = sdiv i32 %v0_bd5c, 256
  store i32 %v4_bd64, i32* %r3.global-to-local, align 4
  %v1_bd68 = load i32, i32* @r6, align 4
  %v9_bd68 = icmp eq i32 %v3_b974, %v1_bd68
  store i1 %v9_bd68, i1* %cpsr_z.global-to-local, align 1
  %v3_bd6c = load i32, i32* @r4, align 4
  %v4_bd6c = add i32 %v3_bd6c, 20
  %v5_bd6c = inttoptr i32 %v4_bd6c to i8*
  store i8 %v1_bd5c, i8* %v5_bd6c, align 1
  %v0_bd70 = load i32, i32* %r3.global-to-local, align 4
  %v1_bd70 = trunc i32 %v0_bd70 to i8
  %v2_bd70 = load i32, i32* @r5, align 4
  %v3_bd70 = add i32 %v2_bd70, 1
  %v4_bd70 = inttoptr i32 %v3_bd70 to i8*
  store i8 %v1_bd70, i8* %v4_bd70, align 1
  %v0_bd74 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_bd74, label %dec_label_pc_bd78, label %dec_label_pc_bd5c.dec_label_pc_bc60_crit_edge

dec_label_pc_bd5c.dec_label_pc_bc60_crit_edge:    ; preds = %dec_label_pc_bd5c
  %v1_bc64.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_bc60

dec_label_pc_bd78:                                ; preds = %dec_label_pc_bd5c, %dec_label_pc_bc54
  %v0_bd78 = call i32 @function_f508()
  %v1_bd78 = trunc i32 %v0_bd78 to i8
  %v4_bd7c = sdiv i32 %v0_bd78, 256
  store i32 %v4_bd7c, i32* %r3.global-to-local, align 4
  %v3_bd80 = load i32, i32* @r5, align 4
  %v4_bd80 = add i32 %v3_bd80, 2
  %v5_bd80 = inttoptr i32 %v4_bd80 to i8*
  store i8 %v1_bd78, i8* %v5_bd80, align 1
  store i32 %v3_b978, i32* %r0.global-to-local, align 4
  %v1_bd88 = load i32, i32* @r6, align 4
  %v9_bd88 = icmp eq i32 %v3_b978, %v1_bd88
  store i1 %v9_bd88, i1* %cpsr_z.global-to-local, align 1
  %v0_bd8c = load i32, i32* %r3.global-to-local, align 4
  %v1_bd8c = trunc i32 %v0_bd8c to i8
  %v2_bd8c = load i32, i32* @r5, align 4
  %v3_bd8c = add i32 %v2_bd8c, 3
  %v4_bd8c = inttoptr i32 %v3_bd8c to i8*
  store i8 %v1_bd8c, i8* %v4_bd8c, align 1
  %v0_bd90 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_bd90, label %dec_label_pc_bd94, label %dec_label_pc_bc6c

dec_label_pc_bd94:                                ; preds = %dec_label_pc_bd78, %dec_label_pc_bc60
  %v0_bd94 = call i32 @function_f508()
  %v1_bd94 = trunc i32 %v0_bd94 to i8
  store i32 %v0_bd94, i32* %r0.global-to-local, align 4
  %v4_bd98 = sdiv i32 %v0_bd94, 256
  store i32 %v4_bd98, i32* %r3.global-to-local, align 4
  %v3_bd9c = load i32, i32* @r4, align 4
  %v4_bd9c = add i32 %v3_bd9c, 28
  %v5_bd9c = inttoptr i32 %v4_bd9c to i8*
  store i8 %v1_bd94, i8* %v5_bd9c, align 1
  %v0_bda0 = load i32, i32* %r3.global-to-local, align 4
  %v1_bda0 = trunc i32 %v0_bda0 to i8
  %v2_bda0 = load i32, i32* @r8, align 4
  %v3_bda0 = add i32 %v2_bda0, 1
  %v4_bda0 = inttoptr i32 %v3_bda0 to i8*
  store i8 %v1_bda0, i8* %v4_bda0, align 1
  br label %dec_label_pc_bc6c

dec_label_pc_bda8:                                ; preds = %dec_label_pc_b874, %dec_label_pc_b840, %dec_label_pc_b7e4, %dec_label_pc_b68c
  %v0_bda8 = call i32 @function_f508()
  %v1_bdac = urem i32 %v0_bda8, 4
  store i32 %v1_bdac, i32* %r0.global-to-local, align 4
  %v2_bdb0 = icmp eq i32 %v1_bdac, 3
  store i1 %v2_bdb0, i1* %cpsr_z.global-to-local, align 1
  %trunc = trunc i32 %v0_bda8 to i2
  switch i2 %trunc, label %dec_label_pc_b8e821 [
    i2 0, label %dec_label_pc_bdf0
    i2 1, label %dec_label_pc_be04
    i2 -2, label %dec_label_pc_be10
    i2 -1, label %dec_label_pc_be20
  ]

dec_label_pc_bdcc:                                ; preds = %dec_label_pc_b948
  store i32 %v2_b8f8, i32* %r0.global-to-local, align 4
  %v4_bdd0 = sext i8 %v5_b964 to i32
  store i32 %v4_bdd0, i32* %r1.global-to-local, align 4
  %v2_bdd4 = add i32 %v4_bdd0, %v2_b8f8
  store i32 %v2_bdd4, i32* @fp, align 4
  br label %dec_label_pc_bc00

dec_label_pc_bddc:                                ; preds = %dec_label_pc_b91c
  store i32 %v3_b90c, i32* %r0.global-to-local, align 4
  %v1_bde0 = call i32 @close(i32 %v3_b90c)
  store i32 %v1_bde0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_bde4

dec_label_pc_bde4:                                ; preds = %dec_label_pc_b8f4, %dec_label_pc_b8e8, %dec_label_pc_bddc
  %v29_bdec = phi i32 [ -1, %dec_label_pc_b8f4 ], [ %v29_bdec75, %dec_label_pc_b8e8 ], [ %v1_bde0, %dec_label_pc_bddc ]
  store i32 %v3_b68c, i32* %r4.global-to-local, align 4
  store i32 %v6_b68c, i32* %r5.global-to-local, align 4
  store i32 %v9_b68c, i32* %r6.global-to-local, align 4
  store i32 %v12_b68c, i32* %r7.global-to-local, align 4
  store i32 %v15_b68c, i32* %r8.global-to-local, align 4
  store i32 %v18_b68c, i32* %sb.global-to-local, align 4
  store i32 %v21_b68c, i32* %sl.global-to-local, align 4
  store i32 %v24_b68c, i32* %fp.global-to-local, align 4
  ret i32 %v29_bdec

dec_label_pc_bdf0:                                ; preds = %dec_label_pc_bda8
  store i32 134744072, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_b8e8

dec_label_pc_be04:                                ; preds = %dec_label_pc_bda8
  store i32 707416650, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_b8e8

dec_label_pc_be10:                                ; preds = %dec_label_pc_bda8
  store i32 104859200, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_b8e8

dec_label_pc_be20:                                ; preds = %dec_label_pc_bda8
  store i32 33686020, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_b8e8

; uselistorder directives
  uselistorder i32 %v4_bdd0, { 0, 2, 1 }
  uselistorder i32 %v1_bdac, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v0_bda8, { 1, 0 }
  uselistorder i32 %v0_bd94, { 0, 2, 1 }
  uselistorder i32 %v0_bd5c, { 0, 2, 1 }
  uselistorder i32 %v4_bd48, { 1, 0 }
  uselistorder i32 %v0_bd40, { 0, 2, 1 }
  uselistorder i32 %v1_bd1c, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v4_bcb8, { 0, 2, 1 }
  uselistorder i32 %v0_bca0, { 1, 0, 2, 3 }
  uselistorder i32 %v4_bc8c, { 1, 0 }
  uselistorder i32 %v2_bc88, { 0, 2, 1 }
  uselistorder i32 %v7_bc34, { 1, 0, 2 }
  uselistorder i32 %v4_bc70.pre-phi, { 1, 0 }
  uselistorder i32 %v2_bbb4, { 1, 0 }
  uselistorder i32 %v1_bba887, { 1, 0, 2 }
  uselistorder i32 %v1_bb9c, { 2, 1, 0 }
  uselistorder i32 %v0_bb9c, { 1, 2, 0 }
  uselistorder i32 %v0_bb9c33, { 1, 0 }
  uselistorder i32 %v1_bb9c34, { 2, 0, 1 }
  uselistorder i8 %extract.t79, { 1, 0 }
  uselistorder i32 %v1_bb70, { 2, 0, 4, 1, 3, 5, 6 }
  uselistorder i32 %v0_baec, { 1, 0 }
  uselistorder i32 %v3_ba28, { 1, 0, 2 }
  uselistorder i32 %v1_b9f0, { 1, 0 }
  uselistorder i32 %v1_b9e4, { 1, 0 }
  uselistorder i32 %v1_b9c8, { 1, 0 }
  uselistorder i32 %v1_b9b4, { 1, 0 }
  uselistorder i32 %v3_b9ac, { 1, 0 }
  uselistorder i32 %v4_b9a4, { 0, 4, 2, 5, 3, 1 }
  uselistorder i8 %v5_b964, { 1, 0 }
  uselistorder i32 %v0_b960, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_b95c, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_b954, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v3_b90c, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder i32 %v2_b8f8, { 0, 11, 1, 6, 4, 3, 7, 10, 9, 8, 5, 2 }
  uselistorder i32 %stack_var_-2176.0, { 1, 0 }
  uselistorder i32 %v3_b8e0, { 1, 0, 2 }
  uselistorder i1 %v7_b8b0, { 1, 0 }
  uselistorder i32 %v1_b8ac, { 1, 0, 2 }
  uselistorder i1 %v8_b8a4, { 1, 0 }
  uselistorder i1 %v7_b8a0, { 1, 0 }
  uselistorder i32 %v1_b894, { 1, 0 }
  uselistorder i8 %v2_b888, { 2, 0, 1, 3 }
  uselistorder i32 %v0_b88c, { 1, 0 }
  uselistorder i32 %v0_b8ac, { 3, 0, 2, 1 }
  uselistorder i32 %v0_b878, { 0, 2, 1 }
  uselistorder i32 %v1_b890, { 0, 2, 1 }
  uselistorder i32 %v2_b860, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v2_b858, { 1, 0, 2, 3 }
  uselistorder i32 %v0_b840, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 %v0_b838, { 1, 2, 0, 3, 5, 4, 6 }
  uselistorder i32 %v0_b7dc, { 1, 0, 3, 2 }
  uselistorder i32 %v5_b7ac, { 0, 3, 5, 4, 2, 1, 7, 6 }
  uselistorder i32 %v1_b730, { 1, 0 }
  uselistorder i32 %v7_b6ec, { 0, 1, 2, 4, 3 }
  uselistorder i8 %v5_b6e8, { 1, 0 }
  uselistorder i32 %v6_b6c8, { 1, 0 }
  uselistorder i32 %v4_b6b0, { 0, 3, 1, 2 }
  uselistorder i32 %v1_b698, { 7, 4, 5, 6, 3, 8, 9, 10, 2, 1, 0 }
  uselistorder i32* %stack_var_-40, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 10, 9 }
  uselistorder i32* %sb.global-to-local, { 0, 1, 2, 5, 3, 4 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 1, 31, 32, 33, 34, 35, 36, 37, 45, 46, 47, 48, 49, 50, 51, 38, 39, 40, 41, 42, 43, 44, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 32, 33, 34, 35, 36, 37, 38, 39, 41, 40, 25, 26, 27, 28, 29, 30, 31, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 6, 5, 7, 40, 8, 39, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 31, 30, 33, 32, 34, 36, 35, 38, 37, 0 }
  uselistorder i32* %r0.global-to-local, { 6, 3, 4, 5, 8, 7, 9, 11, 10, 12, 14, 13, 15, 16, 17, 18, 46, 19, 20, 2, 34, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 35, 36, 47, 48, 50, 49, 51, 53, 52, 54, 56, 55, 58, 57, 59, 62, 64, 63, 65, 61, 60, 1, 66, 67, 68, 69, 38, 39, 40, 41, 42, 43, 44, 45, 0 }
  uselistorder i32* %lr.global-to-local, { 1, 5, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15, 16, 17, 18, 19, 0, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 19, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20, 21, 22, 16, 17, 18 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 29, 26, 33, 34, 35 }
  uselistorder i32 134744072, { 1, 0 }
  uselistorder i32 707416650, { 1, 0 }
  uselistorder i32 104859200, { 1, 0 }
  uselistorder i32 33686020, { 1, 0 }
  uselistorder i8 46, { 1, 0 }
  uselistorder label %dec_label_pc_bde4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_bc6c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_bc0c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_bc00, { 1, 0 }
  uselistorder label %bb150, { 1, 0 }
  uselistorder label %bb147, { 1, 0 }
  uselistorder label %.thread22, { 1, 0 }
  uselistorder label %dec_label_pc_b8bc, { 1, 0 }
  uselistorder label %dec_label_pc_b8b0, { 1, 0 }
  uselistorder label %dec_label_pc_b874, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b86c, { 1, 0 }
}

define i32 @function_be3c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_be3c:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp = call i8 @__decompiler_undefined_function_1()
  %tmp40 = call i8 @__decompiler_undefined_function_1()
  %tmp41 = call i8 @__decompiler_undefined_function_1()
  %tmp42 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_be3c = load i32, i32* @r4, align 4
  %v1_be40 = urem i32 %arg1, 256
  store i32 %v1_be40, i32* @fp, align 4
  store i32 %v1_be40, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  %v1_be58 = urem i32 %arg3, 256
  store i32 %v1_be58, i32* @r4, align 4
  %v2_be5c = call i32* @calloc(i32 %v1_be40, i32 16)
  %v4_be5c = ptrtoint i32* %v2_be5c to i32
  store i32 4, i32* %r1.global-to-local, align 4
  %v0_be68 = load i32, i32* @fp, align 4
  store i32 %v0_be68, i32* %r0.global-to-local, align 4
  %v2_be6c = call i32* @calloc(i32 %v0_be68, i32 4)
  %v4_be6c = ptrtoint i32* %v2_be6c to i32
  %v0_be70 = load i32, i32* @r5, align 4
  store i32 %v0_be70, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_be80 = load i32, i32* @r4, align 4
  store i32 %v0_be80, i32* %r0.global-to-local, align 4
  %v5_be84 = inttoptr i32 %v0_be70 to i32*
  %v6_be84 = call i32 @function_92dc(i32 %v0_be80, i32* %v5_be84, i32 2, i32 0)
  %v1_be90 = urem i32 %v6_be84, 256
  store i32 %v1_be90, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_be9c = load i32, i32* @r5, align 4
  store i32 %v0_be9c, i32* %r1.global-to-local, align 4
  %v0_bea0 = load i32, i32* @r4, align 4
  store i32 %v0_bea0, i32* %r0.global-to-local, align 4
  %v6_bea8 = inttoptr i32 %v0_be9c to i32*
  %v7_bea8 = call i32 @function_92dc(i32 %v0_bea0, i32* %v6_bea8, i32 3, i32 65535)
  %v0_beac = load i32, i32* @r5, align 4
  store i32 %v0_beac, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_bea8, i32* @r6, align 4
  %v0_bebc = load i32, i32* @r4, align 4
  store i32 %v0_bebc, i32* %r0.global-to-local, align 4
  %v4_bec0 = inttoptr i32 %v0_beac to i32*
  %v5_bec0 = call i32 @function_92dc(i32 %v0_bebc, i32* %v4_bec0, i32 4, i32 64)
  %v1_bec8 = urem i32 %v5_bec0, 256
  store i32 %v1_bec8, i32* %ip.global-to-local, align 4
  %v0_becc = load i32, i32* @r5, align 4
  store i32 %v0_becc, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_bed8 = load i32, i32* @r4, align 4
  store i32 %v0_bed8, i32* %r0.global-to-local, align 4
  %v6_bee0 = inttoptr i32 %v0_becc to i32*
  %v7_bee0 = call i32 @function_92dc(i32 %v0_bed8, i32* %v6_bee0, i32 5, i32 1)
  %v1_beec = urem i32 %v7_bee0, 256
  store i32 %v1_beec, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  %v0_bef4 = load i32, i32* @r5, align 4
  store i32 %v0_bef4, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_befc = load i32, i32* @r4, align 4
  store i32 %v0_befc, i32* %r0.global-to-local, align 4
  %v5_bf04 = inttoptr i32 %v0_bef4 to i32*
  %v6_bf04 = call i32 @function_92dc(i32 %v0_befc, i32* %v5_bf04, i32 7, i32 65535)
  %v0_bf08 = load i32, i32* @r5, align 4
  store i32 %v0_bf08, i32* %r1.global-to-local, align 4
  %v3_bf0c = mul i32 %v6_bf04, 65536
  store i32 %v3_bf0c, i32* @r7, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_bf18 = load i32, i32* @r4, align 4
  store i32 %v0_bf18, i32* %r0.global-to-local, align 4
  %v4_bf1c = inttoptr i32 %v0_bf08 to i32*
  %v5_bf1c = call i32 @function_92dc(i32 %v0_bf18, i32* %v4_bf1c, i32 11, i32 1)
  %v1_bf24 = urem i32 %v5_bf1c, 256
  store i32 %v1_bf24, i32* %ip.global-to-local, align 4
  %v0_bf28 = load i32, i32* @r5, align 4
  store i32 %v0_bf28, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_bf34 = load i32, i32* @r4, align 4
  store i32 %v0_bf34, i32* %r0.global-to-local, align 4
  %v5_bf3c = inttoptr i32 %v0_bf28 to i32*
  %v6_bf3c = call i32 @function_92dc(i32 %v0_bf34, i32* %v5_bf3c, i32 12, i32 1)
  %v1_bf44 = urem i32 %v6_bf3c, 256
  store i32 %v1_bf44, i32* %ip.global-to-local, align 4
  %v0_bf48 = load i32, i32* @r5, align 4
  store i32 %v0_bf48, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_bf54 = load i32, i32* @r4, align 4
  store i32 %v0_bf54, i32* %r0.global-to-local, align 4
  %v5_bf5c = inttoptr i32 %v0_bf48 to i32*
  %v6_bf5c = call i32 @function_92dc(i32 %v0_bf54, i32* %v5_bf5c, i32 13, i32 1)
  %v1_bf64 = urem i32 %v6_bf5c, 256
  store i32 %v1_bf64, i32* %ip.global-to-local, align 4
  %v0_bf68 = load i32, i32* @r5, align 4
  store i32 %v0_bf68, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_bf74 = load i32, i32* @r4, align 4
  store i32 %v0_bf74, i32* %r0.global-to-local, align 4
  %v5_bf7c = inttoptr i32 %v0_bf68 to i32*
  %v6_bf7c = call i32 @function_92dc(i32 %v0_bf74, i32* %v5_bf7c, i32 14, i32 1)
  %v1_bf84 = urem i32 %v6_bf7c, 256
  store i32 %v1_bf84, i32* %ip.global-to-local, align 4
  %v0_bf88 = load i32, i32* @r5, align 4
  store i32 %v0_bf88, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_bf94 = load i32, i32* @r4, align 4
  store i32 %v0_bf94, i32* %r0.global-to-local, align 4
  %v5_bf9c = inttoptr i32 %v0_bf88 to i32*
  %v6_bf9c = call i32 @function_92dc(i32 %v0_bf94, i32* %v5_bf9c, i32 15, i32 1)
  %v1_bfa4 = urem i32 %v6_bf9c, 256
  store i32 %v1_bfa4, i32* %ip.global-to-local, align 4
  %v0_bfa8 = load i32, i32* @r5, align 4
  store i32 %v0_bfa8, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_bfb4 = load i32, i32* @r4, align 4
  store i32 %v0_bfb4, i32* %r0.global-to-local, align 4
  %v5_bfbc = inttoptr i32 %v0_bfa8 to i32*
  %v6_bfbc = call i32 @function_92dc(i32 %v0_bfb4, i32* %v5_bfbc, i32 16, i32 1)
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %v6_bfbc, i32* %ip.global-to-local, align 4
  store i32 768, i32* %r3.global-to-local, align 4
  %v0_bfcc = load i32, i32* @r5, align 4
  store i32 %v0_bfcc, i32* %r1.global-to-local, align 4
  %v0_bfd0 = load i32, i32* @r4, align 4
  store i32 %v0_bfd0, i32* %r0.global-to-local, align 4
  %v1_bfd4 = urem i32 %v6_bfbc, 256
  store i32 %v1_bfd4, i32* @r8, align 4
  %v4_bfd8 = inttoptr i32 %v0_bfcc to i32*
  %v5_bfd8 = call i32 @function_92dc(i32 %v0_bfd0, i32* %v4_bfd8, i32 0, i32 768)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_bfe4 = load i32, i32* @r5, align 4
  store i32 %v0_bfe4, i32* %r1.global-to-local, align 4
  store i32 %v5_bfd8, i32* @sb, align 4
  %v0_bfec = load i32, i32* @r4, align 4
  store i32 %v0_bfec, i32* %r0.global-to-local, align 4
  %v4_bff0 = inttoptr i32 %v0_bfe4 to i32*
  %v5_bff0 = call i32 @function_92dc(i32 %v0_bfec, i32* %v4_bff0, i32 1, i32 1)
  store i32 3, i32* %r1.global-to-local, align 4
  %v1_bffc = urem i32 %v5_bff0, 256
  store i32 %v1_bffc, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_c00c = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_c00c, i32* %r0.global-to-local, align 4
  %v0_c010 = load i32, i32* @r7, align 4
  %v3_c010 = udiv i32 %v0_c010, 65536
  store i32 %v3_c010, i32* %r1.global-to-local, align 4
  %v2_c014 = icmp eq i32 %v3_c00c, -1
  store i1 %v2_c014, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c014, label %dec_label_pc_c298, label %dec_label_pc_c024

dec_label_pc_c024:                                ; preds = %dec_label_pc_be3c
  store i32 1, i32* %stack_var_-40, align 4
  %v6_c02c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_c02c, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v7_c040 = call i32 @setsockopt(i32 %v3_c00c, i32 0, i32 3, i32* nonnull %stack_var_-40, i32 4)
  store i32 %v7_c040, i32* %r0.global-to-local, align 4
  %v2_c044 = icmp eq i32 %v7_c040, -1
  store i1 %v2_c044, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c044, label %dec_label_pc_c290, label %dec_label_pc_c04c

dec_label_pc_c04c:                                ; preds = %dec_label_pc_c024
  %v0_c04c = load i32, i32* @fp, align 4
  %v2_c04c = icmp eq i32 %v0_c04c, 0
  store i1 %v2_c04c, i1* %cpsr_z.global-to-local, align 1
  %v0_c050 = load i32, i32* @r6, align 4
  %v3_c050 = mul i32 %v0_c050, 65536
  store i32 %v3_c050, i32* %r0.global-to-local, align 4
  %v3_c054 = urem i32 %v0_c050, 65536
  store i32 %v3_c054, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %tmp85 = icmp slt i32 %v0_c04c, 1
  br i1 %tmp85, label %.thread27, label %dec_label_pc_c078.preheader

.thread27:                                        ; preds = %dec_label_pc_c04c
  store i32 0, i32* %stack_var_-40, align 4
  br label %dec_label_pc_c518

dec_label_pc_c078.preheader:                      ; preds = %dec_label_pc_c04c
  %v5_c05c = load i32, i32* @r7, align 4
  %v8_c05c = udiv i32 %v5_c05c, 16777216
  %tmp86 = udiv i32 %v0_c050, 256
  %v8_c060 = urem i32 %tmp86, 256
  store i32 %v8_c060, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-40, align 4
  %v1_c084 = urem i32 %v0_c050, 256
  %v3_c170 = icmp ugt i32 %v0_c010, -65537
  %v2_c194 = ptrtoint i32* %stack_var_-60 to i32
  %tmp87 = bitcast i32* %stack_var_-60 to %sockaddr*
  %v4_c1b0 = mul nuw nsw i32 %v1_c084, 256
  %v5_c1b0 = or i32 %v8_c060, %v4_c1b0
  %sext11 = mul i32 %tmp86, 16777216
  %v4_c1bc = sdiv i32 %sext11, 16777216
  %v3_c1c4 = ashr i32 %sext11, 31
  %tmp88 = bitcast i32* %stack_var_-76 to %sockaddr*
  %v2_c1f4 = ptrtoint i32* %stack_var_-332 to i32
  %v2_c1f8 = ptrtoint i32* %stack_var_-44 to i32
  %v4_c240 = zext i8 %tmp41 to i32
  %v4_c244 = zext i8 %tmp40 to i32
  %v4_c250 = mul nuw nsw i32 %v4_c244, 256
  %v4_c260 = zext i8 %tmp to i32
  %v1_c264 = and i32 %v4_c260, 18
  %v2_c268 = icmp eq i32 %v1_c264, 18
  %v1_c180 = mul nuw nsw i32 %v3_c010, 256
  %v4_c184 = and i32 %v1_c180, 65280
  %v5_c184 = or i32 %v8_c05c, %v4_c184
  %v3_c188113 = udiv i32 %v4_c184, 256
  %v1_c18c = trunc i32 %v3_c188113 to i8
  %sext = mul i32 %v6_be84, 16777216
  %v4_c38c = sdiv i32 %sext, 16777216
  %sext9 = mul i32 %v5_bec0, 16777216
  %v4_c3a0 = sdiv i32 %sext9, 16777216
  %v5_c250 = or i32 %v4_c240, %v4_c250
  %v1_c270 = and i32 %v4_c260, 5
  %v2_c270 = icmp eq i32 %v1_c270, 0
  %v1_c190 = trunc i32 %v8_c05c to i8
  %v1_c39c = trunc i32 %v4_c38c to i8
  %v1_c468 = urem i32 %v5_bf1c, 2
  %tmp114 = sub nsw i32 0, %v1_c468
  %v4_c470 = and i32 %tmp114, 32
  %v1_c480 = urem i32 %v6_bf3c, 2
  %tmp115 = sub nsw i32 0, %v1_c480
  %v4_c488 = and i32 %tmp115, 16
  %v1_c498 = urem i32 %v6_bf5c, 2
  %tmp116 = sub nsw i32 0, %v1_c498
  %v4_c4a0 = and i32 %tmp116, 8
  %v1_c4b0 = urem i32 %v6_bf7c, 2
  %tmp117 = sub nsw i32 0, %v1_c4b0
  %v4_c4b8 = and i32 %tmp117, 4
  %v1_c4c8 = urem i32 %v6_bf9c, 2
  %tmp118 = sub nsw i32 0, %v1_c4c8
  %v3_c4d0 = and i32 %tmp118, 2
  br label %dec_label_pc_c078

dec_label_pc_c078:                                ; preds = %dec_label_pc_c504, %dec_label_pc_c278, %dec_label_pc_c078.preheader
  store i32 %v8_c060, i32* %r3.global-to-local, align 4
  store i32 %v1_c084, i32* %ip.global-to-local, align 4
  %v0_c090 = load i32, i32* @sb, align 4
  %v1_c090 = add i32 %v0_c090, 40
  store i32 %v1_c090, i32* @sl, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_c0a0107 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_c0a0107, i32* %r0.global-to-local, align 4
  %v2_c0a4108 = icmp eq i32 %v3_c0a0107, -1
  store i1 %v2_c0a4108, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_c0a0107, i32* @r7, align 4
  br i1 %v2_c0a4108, label %dec_label_pc_c504, label %dec_label_pc_c0b0

dec_label_pc_c0b0:                                ; preds = %dec_label_pc_c078, %dec_label_pc_c284
  %v3_c0a0109 = phi i32 [ %v3_c0a0, %dec_label_pc_c284 ], [ %v3_c0a0107, %dec_label_pc_c078 ]
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_c0b8 = call i32 (i32, i32, ...) @fcntl(i32 %v3_c0a0109, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_c0c0 = or i32 %v2_c0b8, 2048
  store i32 %v1_c0c0, i32* %r2.global-to-local, align 4
  %v0_c0c4 = load i32, i32* @r7, align 4
  store i32 %v0_c0c4, i32* %r0.global-to-local, align 4
  %v2_c0c8 = call i32 (i32, i32, ...) @fcntl(i32 %v0_c0c4, i32 4)
  %v3_c0cc = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_c0cc, i32* %ip.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 2, i32* %stack_var_-60, align 4
  %v5_c0e8 = mul i32 %v3_c0cc, 24
  store i32 %v5_c0e8, i32* %r1.global-to-local, align 4
  %v2_c0ec = add i32 %v5_c0e8, %arg2
  store i32 %v2_c0ec, i32* %r2.global-to-local, align 4
  %v1_c0f0 = add i32 %v2_c0ec, 20
  %v2_c0f0 = inttoptr i32 %v1_c0f0 to i8*
  %v3_c0f0 = load i8, i8* %v2_c0f0, align 1
  %v4_c0f0 = zext i8 %v3_c0f0 to i32
  store i32 %v4_c0f0, i32* %r3.global-to-local, align 4
  %v2_c0f4 = icmp ugt i8 %v3_c0f0, 30
  %v7_c0f4 = icmp eq i8 %v3_c0f0, 31
  store i1 %v7_c0f4, i1* %cpsr_z.global-to-local, align 1
  %v2_c0f8 = xor i1 %v7_c0f4, true
  %v3_c0f8 = and i1 %v2_c0f4, %v2_c0f8
  %v5_c0f8 = add i32 %v2_c0ec, 16
  %v6_c0f8 = inttoptr i32 %v5_c0f8 to i32*
  %v7_c0f8 = load i32, i32* %v6_c0f8, align 4
  br i1 %v3_c0f8, label %dec_label_pc_c164, label %dec_label_pc_c104

dec_label_pc_c104:                                ; preds = %dec_label_pc_c0b0
  store i32 %v7_c0f8, i32* %r4.global-to-local, align 4
  %v0_c108 = call i32 @function_f508()
  store i32 %v0_c108, i32* %r0.global-to-local, align 4
  %v3_c10c = load i32, i32* %stack_var_-40, align 4
  %v5_c114 = mul i32 %v3_c10c, 24
  %v2_c120 = add i32 %v5_c114, %arg2
  store i32 %v2_c120, i32* %r1.global-to-local, align 4
  %v1_c11c = udiv i32 %v7_c0f8, 256
  %v3_c124 = and i32 %v1_c11c, 65280
  store i32 %v3_c124, i32* %r2.global-to-local, align 4
  %v1_c128 = and i32 %v7_c0f8, 65280
  store i32 %v1_c128, i32* %r3.global-to-local, align 4
  %v3_c12c = mul i32 %v7_c0f8, 16777216
  store i32 %v3_c12c, i32* %ip.global-to-local, align 4
  %v1_c130 = add i32 %v2_c120, 20
  %v2_c130 = inttoptr i32 %v1_c130 to i8*
  %v3_c130 = load i8, i8* %v2_c130, align 1
  %v4_c130 = zext i8 %v3_c130 to i32
  store i32 %v4_c130, i32* %lr.global-to-local, align 4
  %v4_c134 = mul nuw nsw i32 %v1_c128, 256
  %v5_c134 = or i32 %v4_c134, %v3_c12c
  store i32 %v5_c134, i32* %ip.global-to-local, align 4
  %v2_c13c = call i32 @llvm.bswap.i32(i32 %v7_c0f8)
  %v7_c140 = lshr i32 %v0_c108, %v4_c130
  %v8_c140 = add i32 %v7_c140, %v2_c13c
  store i32 %v8_c140, i32* %r2.global-to-local, align 4
  %v3_c14c = mul i32 %v8_c140, 16777216
  %v1_c150 = and i32 %v8_c140, 65280
  store i32 %v1_c150, i32* %r0.global-to-local, align 4
  %v4_c154 = mul nuw nsw i32 %v1_c150, 256
  %v5_c154 = or i32 %v4_c154, %v3_c14c
  store i32 %v5_c154, i32* %r1.global-to-local, align 4
  %v2_c15c = call i32 @llvm.bswap.i32(i32 %v8_c140)
  br label %dec_label_pc_c164

dec_label_pc_c164:                                ; preds = %dec_label_pc_c0b0, %dec_label_pc_c104
  %storemerge35 = phi i32 [ %v2_c15c, %dec_label_pc_c104 ], [ %v7_c0f8, %dec_label_pc_c0b0 ]
  store i32 %v3_c010, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i1 %v3_c170, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_c170, label %dec_label_pc_c2a0, label %dec_label_pc_c178

dec_label_pc_c178:                                ; preds = %dec_label_pc_c164
  store i32 %v3_c010, i32* %r0.global-to-local, align 4
  store i32 %v8_c05c, i32* %r1.global-to-local, align 4
  store i32 %v5_c184, i32* %r3.global-to-local, align 4
  store i32 %v3_c188113, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_c194

dec_label_pc_c194:                                ; preds = %dec_label_pc_c2a0, %dec_label_pc_c178
  %stack_var_-57.0 = phi i8 [ %v1_c2a8, %dec_label_pc_c2a0 ], [ %v1_c18c, %dec_label_pc_c178 ]
  %storemerge = phi i8 [ %v1_c2a0, %dec_label_pc_c2a0 ], [ %v1_c190, %dec_label_pc_c178 ]
  store i32 %v2_c194, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v0_c19c = load i32, i32* @r7, align 4
  store i32 %v0_c19c, i32* %r0.global-to-local, align 4
  %v5_c1a0 = call i32 @connect(i32 %v0_c19c, %sockaddr* nonnull %tmp87, i32 16)
  store i32 %v1_c084, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v5_c1b0, i32* %r2.global-to-local, align 4
  %v2_c1b8 = call i32 @time(i32* null)
  store i32 %v2_c1b8, i32* %r0.global-to-local, align 4
  store i32 %v2_c1b8, i32* %r4.global-to-local, align 4
  store i32 %v3_c1c4, i32* %ip.global-to-local, align 4
  %v9_c224 = icmp eq i32 %tmp42, %storemerge35
  %v4_c248 = zext i8 %storemerge to i32
  %v4_c24c = zext i8 %stack_var_-57.0 to i32
  %. = zext i1 %v9_c224 to i32
  %v9_c238 = icmp eq i1 %v9_c224, false
  %v4_c254 = mul nuw nsw i32 %v4_c24c, 256
  %v5_c254 = or i32 %v4_c254, %v4_c248
  %v9_c258 = icmp eq i32 %v5_c254, %v5_c250
  br label %dec_label_pc_c1e0

dec_label_pc_c1d0:                                ; preds = %.thread33, %dec_label_pc_c240, %dec_label_pc_c270, %bb90
  %v2_c1d0 = call i32 @time(i32* null)
  %v0_c1d4 = load i32, i32* %r4.global-to-local, align 4
  %v2_c1d4 = sub i32 %v2_c1d0, %v0_c1d4
  store i32 %v2_c1d4, i32* %r0.global-to-local, align 4
  %v7_c1d8 = icmp eq i32 %v2_c1d4, 10
  store i1 %v7_c1d8, i1* %cpsr_z.global-to-local, align 1
  %v8_c1dc = icmp sgt i32 %v2_c1d4, 10
  br i1 %v8_c1dc, label %dec_label_pc_c284, label %dec_label_pc_c1e0

dec_label_pc_c1e0:                                ; preds = %dec_label_pc_c1d0, %dec_label_pc_c194
  store i32 16, i32* %stack_var_-44, align 4
  store i32 256, i32* %r2.global-to-local, align 4
  store i32 %v2_c1f4, i32* %r1.global-to-local, align 4
  store i32 %v2_c1f8, i32* %ip.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 %v3_c00c, i32* %r0.global-to-local, align 4
  %v10_c208 = call i32 @recvfrom(i32 %v3_c00c, i32* nonnull %stack_var_-332, i32 256, i32 16384, %sockaddr* %tmp88, i32* nonnull %stack_var_-44)
  store i32 %v10_c208, i32* %r2.global-to-local, align 4
  %v2_c210 = icmp eq i32 %v10_c208, -1
  store i1 %v2_c210, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v2_c210, label %dec_label_pc_c298, label %dec_label_pc_c21c

dec_label_pc_c21c:                                ; preds = %dec_label_pc_c1e0
  store i32 %storemerge35, i32* %lr.global-to-local, align 4
  store i32 %tmp42, i32* %r3.global-to-local, align 4
  store i32 %., i32* %r1.global-to-local, align 4
  %v7_c230 = icmp eq i32 %v10_c208, 40
  store i1 %v7_c230, i1* %cpsr_z.global-to-local, align 1
  %tmp119 = icmp ult i32 %v10_c208, 41
  br i1 %tmp119, label %.thread33, label %bb90

.thread33:                                        ; preds = %dec_label_pc_c21c
  store i32 0, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_c1d0

bb90:                                             ; preds = %dec_label_pc_c21c
  store i1 %v9_c238, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c238, label %dec_label_pc_c1d0, label %dec_label_pc_c240

dec_label_pc_c240:                                ; preds = %bb90
  store i32 %v4_c244, i32* %r1.global-to-local, align 4
  store i32 %v4_c248, i32* %ip.global-to-local, align 4
  store i32 %v4_c24c, i32* %r2.global-to-local, align 4
  store i32 %v5_c250, i32* %r3.global-to-local, align 4
  store i32 %v5_c254, i32* @r5, align 4
  store i1 %v9_c258, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c258, label %dec_label_pc_c260, label %dec_label_pc_c1d0

dec_label_pc_c260:                                ; preds = %dec_label_pc_c240
  store i32 %v4_c260, i32* %r2.global-to-local, align 4
  store i32 %v1_c264, i32* %r3.global-to-local, align 4
  store i1 %v2_c268, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c268, label %dec_label_pc_c2b4, label %dec_label_pc_c270

dec_label_pc_c270:                                ; preds = %dec_label_pc_c260
  store i1 %v2_c270, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c270, label %dec_label_pc_c1d0, label %dec_label_pc_c278

dec_label_pc_c278:                                ; preds = %dec_label_pc_c270
  %v0_c278 = load i32, i32* @r7, align 4
  store i32 %v0_c278, i32* %r0.global-to-local, align 4
  %v1_c27c = call i32 @close(i32 %v0_c278)
  store i32 %v1_c27c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c078

dec_label_pc_c284:                                ; preds = %dec_label_pc_c1d0
  %v0_c284 = load i32, i32* @r7, align 4
  store i32 %v0_c284, i32* %r0.global-to-local, align 4
  %v1_c288 = call i32 @close(i32 %v0_c284)
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_c0a0 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_c0a0, i32* %r0.global-to-local, align 4
  %v2_c0a4 = icmp eq i32 %v3_c0a0, -1
  store i1 %v2_c0a4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_c0a0, i32* @r7, align 4
  br i1 %v2_c0a4, label %dec_label_pc_c504, label %dec_label_pc_c0b0

dec_label_pc_c290:                                ; preds = %dec_label_pc_c024
  store i32 %v3_c00c, i32* %r0.global-to-local, align 4
  %v1_c294 = call i32 @close(i32 %v3_c00c)
  store i32 %v1_c294, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c298

dec_label_pc_c298:                                ; preds = %dec_label_pc_c1e0, %dec_label_pc_be3c, %dec_label_pc_c290
  %v29_c29c = phi i32 [ -1, %dec_label_pc_be3c ], [ %v1_c294, %dec_label_pc_c290 ], [ 0, %dec_label_pc_c1e0 ]
  store i32 %v3_be3c, i32* %r4.global-to-local, align 4
  ret i32 %v29_c29c

dec_label_pc_c2a0:                                ; preds = %dec_label_pc_c164
  %v0_c2a0 = call i32 @function_f508()
  %v1_c2a0 = trunc i32 %v0_c2a0 to i8
  store i32 %v0_c2a0, i32* %r0.global-to-local, align 4
  %v4_c2a4 = sdiv i32 %v0_c2a0, 256
  store i32 %v4_c2a4, i32* %r3.global-to-local, align 4
  %v1_c2a8 = trunc i32 %v4_c2a4 to i8
  br label %dec_label_pc_c194

dec_label_pc_c2b4:                                ; preds = %dec_label_pc_c260
  %v3_c2b4 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_c2b4, i32* %r4.global-to-local, align 4
  store i32 %v4_be5c, i32* %r2.global-to-local, align 4
  %v3_c2bc = mul i32 %v3_c2b4, 16
  store i32 %v3_c2bc, i32* %ip.global-to-local, align 4
  %v3_c2c0 = add i32 %v3_c2bc, %v4_be5c
  %v4_c2c0 = inttoptr i32 %v3_c2c0 to i32*
  store i32 %storemerge35, i32* %v4_c2c0, align 4
  %v0_c2c4 = load i32, i32* @r6, align 4
  %v1_c2c4 = add i32 %v0_c2c4, 4
  %v2_c2c4 = inttoptr i32 %v1_c2c4 to i32*
  %v3_c2c4 = load i32, i32* %v2_c2c4, align 4
  %v1_c2d0 = and i32 %v3_c2c4, 65280
  store i32 %v1_c2d0, i32* %r1.global-to-local, align 4
  %v3_c2d4 = mul i32 %v3_c2c4, 16777216
  store i32 %v4_be5c, i32* %r0.global-to-local, align 4
  %v4_c2e0 = mul nuw nsw i32 %v1_c2d0, 256
  %v5_c2e0 = or i32 %v4_c2e0, %v3_c2d4
  store i32 %v5_c2e0, i32* %r2.global-to-local, align 4
  %v1_c2e4 = load i32, i32* %ip.global-to-local, align 4
  %v2_c2e4 = add i32 %v1_c2e4, %v4_be5c
  store i32 %v2_c2e4, i32* %ip.global-to-local, align 4
  %v2_c2e8 = call i32 @llvm.bswap.i32(i32 %v3_c2c4)
  store i32 %v2_c2e8, i32* %r3.global-to-local, align 4
  %v2_c2ec = add i32 %v2_c2e4, 4
  %v3_c2ec = inttoptr i32 %v2_c2ec to i32*
  store i32 %v2_c2e8, i32* %v3_c2ec, align 4
  %v0_c2f0 = load i32, i32* @r6, align 4
  %v1_c2f0 = add i32 %v0_c2f0, 8
  %v2_c2f0 = inttoptr i32 %v1_c2f0 to i32*
  %v3_c2f0 = load i32, i32* %v2_c2f0, align 4
  store i32 %v3_c2f0, i32* %r0.global-to-local, align 4
  %v1_c2f8 = and i32 %v3_c2f0, 65280
  store i32 %v1_c2f8, i32* %r1.global-to-local, align 4
  %v3_c2fc = mul i32 %v3_c2f0, 16777216
  %v4_c304 = mul nuw nsw i32 %v1_c2f8, 256
  %v5_c304 = or i32 %v4_c304, %v3_c2fc
  store i32 %v5_c304, i32* %r2.global-to-local, align 4
  %v2_c30c = call i32 @llvm.bswap.i32(i32 %v3_c2f0)
  store i32 %v2_c30c, i32* %r3.global-to-local, align 4
  %v1_c310 = load i32, i32* %ip.global-to-local, align 4
  %v2_c310 = add i32 %v1_c310, 8
  %v3_c310 = inttoptr i32 %v2_c310 to i32*
  store i32 %v2_c30c, i32* %v3_c310, align 4
  %v0_c314 = load i32, i32* @r6, align 4
  %v1_c314 = inttoptr i32 %v0_c314 to i32*
  %v2_c314 = load i32, i32* %v1_c314, align 4
  %v3_c318 = udiv i32 %v2_c314, 65536
  store i32 %v3_c318, i32* %r2.global-to-local, align 4
  %v3_c31c6 = udiv i32 %v2_c314, 16777216
  store i32 %v3_c31c6, i32* %r1.global-to-local, align 4
  %v0_c320 = load i32, i32* @r5, align 4
  %v3_c320 = sdiv i32 %v0_c320, 256
  store i32 %v3_c320, i32* %r3.global-to-local, align 4
  %v1_c324 = trunc i32 %v3_c320 to i8
  %v2_c324 = load i32, i32* %ip.global-to-local, align 4
  %v3_c324 = add i32 %v2_c324, 15
  %v4_c324 = inttoptr i32 %v3_c324 to i8*
  store i8 %v1_c324, i8* %v4_c324, align 1
  %v0_c328 = load i32, i32* %r1.global-to-local, align 4
  %v1_c328 = trunc i32 %v0_c328 to i8
  %v2_c328 = load i32, i32* %ip.global-to-local, align 4
  %v3_c328 = add i32 %v2_c328, 13
  %v4_c328 = inttoptr i32 %v3_c328 to i8*
  store i8 %v1_c328, i8* %v4_c328, align 1
  %v0_c32c = load i32, i32* %r2.global-to-local, align 4
  %v1_c32c = trunc i32 %v0_c32c to i8
  %v2_c32c = load i32, i32* %ip.global-to-local, align 4
  %v3_c32c = add i32 %v2_c32c, 12
  %v4_c32c = inttoptr i32 %v3_c32c to i8*
  store i8 %v1_c32c, i8* %v4_c32c, align 1
  %v0_c330 = load i32, i32* @r5, align 4
  %v1_c330 = trunc i32 %v0_c330 to i8
  %v2_c330 = load i32, i32* %ip.global-to-local, align 4
  %v3_c330 = add i32 %v2_c330, 14
  %v4_c330 = inttoptr i32 %v3_c330 to i8*
  store i8 %v1_c330, i8* %v4_c330, align 1
  %v0_c334 = load i32, i32* @sl, align 4
  store i32 %v0_c334, i32* %r0.global-to-local, align 4
  %v1_c338 = call i32* @malloc(i32 %v0_c334)
  %v3_c338 = ptrtoint i32* %v1_c338 to i32
  store i32 %v3_c338, i32* %r0.global-to-local, align 4
  store i32 %v4_be6c, i32* %r1.global-to-local, align 4
  %v3_c340 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_c340, i32* %r2.global-to-local, align 4
  %v2_c344 = load i32, i32* %r4.global-to-local, align 4
  %v5_c344 = mul i32 %v2_c344, 4
  %v6_c344 = add i32 %v5_c344, %v4_be6c
  %v7_c344 = inttoptr i32 %v6_c344 to i32*
  store i32 %v3_c338, i32* %v7_c344, align 4
  %v0_c348 = load i32, i32* %r1.global-to-local, align 4
  %v1_c348 = load i32, i32* %r2.global-to-local, align 4
  %v4_c348 = mul i32 %v1_c348, 4
  %v5_c348 = add i32 %v4_c348, %v0_c348
  %v6_c348 = inttoptr i32 %v5_c348 to i32*
  %v7_c348 = load i32, i32* %v6_c348, align 4
  store i32 %v7_c348, i32* @r4, align 4
  %v1_c34c = inttoptr i32 %v7_c348 to i8*
  %v2_c34c = load i8, i8* %v1_c34c, align 1
  %tmp120 = urem i8 %v2_c34c, 16
  %v1_c350 = zext i8 %tmp120 to i32
  %v1_c354 = or i32 %v1_c350, 64
  store i32 %v1_c354, i32* %r3.global-to-local, align 4
  %v1_c358 = trunc i32 %v1_c354 to i8
  store i8 %v1_c358, i8* %v1_c34c, align 1
  %v0_c35c = load i32, i32* @sl, align 4
  %v3_c35c = mul i32 %v0_c35c, 65536
  store i32 %v3_c35c, i32* %r2.global-to-local, align 4
  %v0_c360 = load i32, i32* @r4, align 4
  %v1_c360 = inttoptr i32 %v0_c360 to i8*
  %v2_c360 = load i8, i8* %v1_c360, align 1
  %v1_c368 = urem i32 %v0_c35c, 256
  %tmp91 = udiv i32 %v0_c35c, 256
  %v3_c36c = urem i32 %tmp91, 256
  %v1_c370 = and i8 %v2_c360, -16
  %v4_c374 = mul nuw nsw i32 %v1_c368, 256
  %v5_c374 = or i32 %v4_c374, %v3_c36c
  store i32 %v5_c374, i32* %r2.global-to-local, align 4
  %v1_c378 = or i8 %v1_c370, 5
  store i32 %v1_beec, i32* %ip.global-to-local, align 4
  store i32 %v1_c368, i32* %r3.global-to-local, align 4
  store i8 %v1_c378, i8* %v1_c360, align 1
  %v0_c388 = load i32, i32* %r3.global-to-local, align 4
  %v1_c388 = trunc i32 %v0_c388 to i8
  %v2_c388 = load i32, i32* @r4, align 4
  %v3_c388 = add i32 %v2_c388, 3
  %v4_c388 = inttoptr i32 %v3_c388 to i8*
  store i8 %v1_c388, i8* %v4_c388, align 1
  store i32 %v4_c38c, i32* %r3.global-to-local, align 4
  %v0_c390 = load i32, i32* %ip.global-to-local, align 4
  %v2_c390 = icmp eq i32 %v0_c390, 0
  store i1 %v2_c390, i1* %cpsr_z.global-to-local, align 1
  store i32 %v4_c1bc, i32* %r0.global-to-local, align 4
  store i32 %v3_c1c4, i32* %r1.global-to-local, align 4
  %v2_c39c = load i32, i32* @r4, align 4
  %v3_c39c = add i32 %v2_c39c, 1
  %v4_c39c = inttoptr i32 %v3_c39c to i8*
  store i8 %v1_c39c, i8* %v4_c39c, align 1
  store i32 %v4_c3a0, i32* %ip.global-to-local, align 4
  %v0_c3a4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c3a4, label %bb93, label %bb92

bb92:                                             ; preds = %dec_label_pc_c2b4
  store i32 64, i32* %r3.global-to-local, align 4
  br label %bb93

bb93:                                             ; preds = %dec_label_pc_c2b4, %bb92
  %v0_c3a8 = load i32, i32* %r2.global-to-local, align 4
  %v1_c3a8 = trunc i32 %v0_c3a8 to i8
  %v2_c3a8 = load i32, i32* @r4, align 4
  %v3_c3a8 = add i32 %v2_c3a8, 2
  %v4_c3a8 = inttoptr i32 %v3_c3a8 to i8*
  store i8 %v1_c3a8, i8* %v4_c3a8, align 1
  %v0_c3ac = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c3ac, label %.thread10, label %bb94

bb94:                                             ; preds = %bb93
  %v1_c3ac = load i32, i32* %r3.global-to-local, align 4
  %v2_c3ac = trunc i32 %v1_c3ac to i8
  %v3_c3ac = load i32, i32* @r4, align 4
  %v4_c3ac = add i32 %v3_c3ac, 6
  %v5_c3ac = inttoptr i32 %v4_c3ac to i8*
  store i8 %v2_c3ac, i8* %v5_c3ac, align 1
  %v0_c3b0.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c3b0.pr, label %.thread10, label %bb95

bb95:                                             ; preds = %bb94
  store i32 0, i32* %r2.global-to-local, align 4
  br label %.thread10

.thread10:                                        ; preds = %bb93, %bb94, %bb95
  store i32 6, i32* %r3.global-to-local, align 4
  %v0_c3b8 = load i32, i32* %ip.global-to-local, align 4
  %v1_c3b8 = trunc i32 %v0_c3b8 to i8
  %v2_c3b8 = load i32, i32* @r4, align 4
  %v3_c3b8 = add i32 %v2_c3b8, 8
  %v4_c3b8 = inttoptr i32 %v3_c3b8 to i8*
  store i8 %v1_c3b8, i8* %v4_c3b8, align 1
  %v0_c3bc = load i32, i32* %r3.global-to-local, align 4
  %v1_c3bc = trunc i32 %v0_c3bc to i8
  %v2_c3bc = load i32, i32* @r4, align 4
  %v3_c3bc = add i32 %v2_c3bc, 9
  %v4_c3bc = inttoptr i32 %v3_c3bc to i8*
  store i8 %v1_c3bc, i8* %v4_c3bc, align 1
  %v0_c3c0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c3c0, label %bb97, label %bb96

bb96:                                             ; preds = %.thread10
  %v1_c3c0 = load i32, i32* %r2.global-to-local, align 4
  %v2_c3c0 = trunc i32 %v1_c3c0 to i8
  %v3_c3c0 = load i32, i32* @r4, align 4
  %v4_c3c0 = add i32 %v3_c3c0, 7
  %v5_c3c0 = inttoptr i32 %v4_c3c0 to i8*
  store i8 %v2_c3c0, i8* %v5_c3c0, align 1
  br label %bb97

bb97:                                             ; preds = %.thread10, %bb96
  %v2_c3c8 = load i32, i32* @global_var_1bd28.110, align 4
  store i32 %v2_c3c8, i32* %r3.global-to-local, align 4
  %v1_c3cc = load i32, i32* @r4, align 4
  %v2_c3cc = add i32 %v1_c3cc, 12
  %v3_c3cc = inttoptr i32 %v2_c3cc to i32*
  store i32 %v2_c3c8, i32* %v3_c3cc, align 4
  %v0_c3d0 = load i32, i32* %r0.global-to-local, align 4
  %v1_c3d0 = trunc i32 %v0_c3d0 to i8
  %v2_c3d0 = load i32, i32* @r4, align 4
  %v3_c3d0 = add i32 %v2_c3d0, 4
  %v4_c3d0 = inttoptr i32 %v3_c3d0 to i8*
  store i8 %v1_c3d0, i8* %v4_c3d0, align 1
  %v3_c3d4 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_c3d4, i32* %r2.global-to-local, align 4
  store i32 %v4_be5c, i32* %r0.global-to-local, align 4
  %v4_c3dc = mul i32 %v3_c3d4, 16
  %v5_c3dc = add i32 %v4_c3dc, %v4_be5c
  %v6_c3dc = inttoptr i32 %v5_c3dc to i32*
  %v7_c3dc = load i32, i32* %v6_c3dc, align 4
  store i32 %v7_c3dc, i32* %r3.global-to-local, align 4
  %v0_c3e0 = load i32, i32* %r1.global-to-local, align 4
  %v1_c3e0 = trunc i32 %v0_c3e0 to i8
  %v2_c3e0 = load i32, i32* @r4, align 4
  %v3_c3e0 = add i32 %v2_c3e0, 5
  %v4_c3e0 = inttoptr i32 %v3_c3e0 to i8*
  store i8 %v1_c3e0, i8* %v4_c3e0, align 1
  %v0_c3e4 = load i32, i32* %r3.global-to-local, align 4
  %v1_c3e4 = load i32, i32* @r4, align 4
  %v2_c3e4 = add i32 %v1_c3e4, 16
  %v3_c3e4 = inttoptr i32 %v2_c3e4 to i32*
  store i32 %v0_c3e4, i32* %v3_c3e4, align 4
  %v0_c3e8 = load i32, i32* %r2.global-to-local, align 4
  %v3_c3e8 = mul i32 %v0_c3e8, 16
  %v1_c3ec = load i32, i32* %r0.global-to-local, align 4
  %v2_c3ec = add i32 %v1_c3ec, %v3_c3e8
  store i32 %v2_c3ec, i32* %r2.global-to-local, align 4
  %v1_c3f0 = add i32 %v2_c3ec, 13
  %v2_c3f0 = inttoptr i32 %v1_c3f0 to i8*
  %v3_c3f0 = load i8, i8* %v2_c3f0, align 1
  %v4_c3f0 = zext i8 %v3_c3f0 to i32
  store i32 %v4_c3f0, i32* %r1.global-to-local, align 4
  %v1_c3f4 = add i32 %v2_c3ec, 12
  %v2_c3f4 = inttoptr i32 %v1_c3f4 to i8*
  %v3_c3f4 = load i8, i8* %v2_c3f4, align 1
  %v4_c3f4 = zext i8 %v3_c3f4 to i32
  %v4_c3f8 = mul nuw nsw i32 %v4_c3f0, 256
  %v5_c3f8 = or i32 %v4_c3f4, %v4_c3f8
  store i32 %v5_c3f8, i32* %r3.global-to-local, align 4
  %v2_c3fc = load i32, i32* @r4, align 4
  %v3_c3fc = add i32 %v2_c3fc, 20
  %v4_c3fc = inttoptr i32 %v3_c3fc to i8*
  store i8 %v3_c3f4, i8* %v4_c3fc, align 1
  %v0_c400 = load i32, i32* @r4, align 4
  %v1_c400 = add i32 %v0_c400, 20
  store i32 %v1_c400, i32* @r6, align 4
  %v0_c404 = load i32, i32* %r3.global-to-local, align 4
  %v3_c404 = sdiv i32 %v0_c404, 256
  store i32 %v3_c404, i32* %r3.global-to-local, align 4
  %v1_c408 = trunc i32 %v3_c404 to i8
  %v3_c408 = add i32 %v0_c400, 21
  %v4_c408 = inttoptr i32 %v3_c408 to i8*
  store i8 %v1_c408, i8* %v4_c408, align 1
  %v0_c40c = load i32, i32* @r6, align 4
  %v1_c40c = add i32 %v0_c40c, 13
  %v2_c40c = inttoptr i32 %v1_c40c to i8*
  %v3_c40c = load i8, i8* %v2_c40c, align 1
  %v4_c40c = zext i8 %v3_c40c to i32
  store i32 %v4_c40c, i32* %r3.global-to-local, align 4
  %v0_c410 = load i32, i32* %r2.global-to-local, align 4
  %v1_c410 = add i32 %v0_c410, 8
  %v2_c410 = inttoptr i32 %v1_c410 to i32*
  %v3_c410 = load i32, i32* %v2_c410, align 4
  store i32 %v3_c410, i32* %r1.global-to-local, align 4
  %v1_c414 = or i32 %v4_c40c, 1
  store i32 %v1_c414, i32* %r3.global-to-local, align 4
  %v1_c418 = add i32 %v0_c410, 15
  %v2_c418 = inttoptr i32 %v1_c418 to i8*
  %v3_c418 = load i8, i8* %v2_c418, align 1
  %v4_c418 = zext i8 %v3_c418 to i32
  store i32 %v4_c418, i32* %ip.global-to-local, align 4
  %v1_c41c = add i32 %v0_c410, 14
  %v2_c41c = inttoptr i32 %v1_c41c to i8*
  %v3_c41c = load i8, i8* %v2_c41c, align 1
  %v4_c41c = zext i8 %v3_c41c to i32
  store i32 %v4_c41c, i32* %r0.global-to-local, align 4
  %v2_c420 = add i32 %v0_c40c, 4
  %v3_c420 = inttoptr i32 %v2_c420 to i32*
  store i32 %v3_c410, i32* %v3_c420, align 4
  %v0_c424 = load i32, i32* %r2.global-to-local, align 4
  %v1_c424 = add i32 %v0_c424, 4
  %v2_c424 = inttoptr i32 %v1_c424 to i32*
  %v3_c424 = load i32, i32* %v2_c424, align 4
  store i32 %v3_c424, i32* %lr.global-to-local, align 4
  %v0_c428 = load i32, i32* %r3.global-to-local, align 4
  %v1_c428 = trunc i32 %v0_c428 to i8
  %v2_c428 = load i32, i32* @r6, align 4
  %v3_c428 = add i32 %v2_c428, 13
  %v4_c428 = inttoptr i32 %v3_c428 to i8*
  store i8 %v1_c428, i8* %v4_c428, align 1
  %v0_c42c = load i32, i32* @r6, align 4
  %v1_c42c = add i32 %v0_c42c, 12
  %v2_c42c = inttoptr i32 %v1_c42c to i8*
  %v3_c42c = load i8, i8* %v2_c42c, align 1
  %v4_c42c = zext i8 %v3_c42c to i32
  store i32 %v4_c42c, i32* %r2.global-to-local, align 4
  %v1_c430 = add i32 %v0_c42c, 13
  %v2_c430 = inttoptr i32 %v1_c430 to i8*
  %v3_c430 = load i8, i8* %v2_c430, align 1
  %v4_c430 = zext i8 %v3_c430 to i32
  %v0_c434 = load i32, i32* %r0.global-to-local, align 4
  %v1_c434 = load i32, i32* %ip.global-to-local, align 4
  %v4_c434 = mul i32 %v1_c434, 256
  %v5_c434 = or i32 %v4_c434, %v0_c434
  store i32 %v5_c434, i32* %r0.global-to-local, align 4
  %tmp121 = urem i8 %v3_c42c, 16
  %v1_c438 = zext i8 %tmp121 to i32
  %v3_c43c = sdiv i32 %v5_c434, 256
  store i32 %v3_c43c, i32* %r1.global-to-local, align 4
  %v1_c440 = or i32 %v1_c438, 128
  store i32 %v1_c440, i32* %r2.global-to-local, align 4
  %v1_c444 = or i32 %v4_c430, 16
  store i32 %v1_c444, i32* %r3.global-to-local, align 4
  %v1_c448 = trunc i32 %v3_c43c to i8
  %v3_c448 = add i32 %v0_c42c, 3
  %v4_c448 = inttoptr i32 %v3_c448 to i8*
  store i8 %v1_c448, i8* %v4_c448, align 1
  %v0_c44c = load i32, i32* %r2.global-to-local, align 4
  %v1_c44c = trunc i32 %v0_c44c to i8
  %v2_c44c = load i32, i32* @r6, align 4
  %v3_c44c = add i32 %v2_c44c, 12
  %v4_c44c = inttoptr i32 %v3_c44c to i8*
  store i8 %v1_c44c, i8* %v4_c44c, align 1
  %v0_c450 = load i32, i32* %r3.global-to-local, align 4
  %v1_c450 = trunc i32 %v0_c450 to i8
  %v2_c450 = load i32, i32* @r6, align 4
  %v3_c450 = add i32 %v2_c450, 13
  %v4_c450 = inttoptr i32 %v3_c450 to i8*
  store i8 %v1_c450, i8* %v4_c450, align 1
  %v0_c454 = load i32, i32* %lr.global-to-local, align 4
  %v1_c454 = load i32, i32* @r6, align 4
  %v2_c454 = add i32 %v1_c454, 8
  %v3_c454 = inttoptr i32 %v2_c454 to i32*
  store i32 %v0_c454, i32* %v3_c454, align 4
  %v0_c458 = load i32, i32* %r0.global-to-local, align 4
  %v1_c458 = trunc i32 %v0_c458 to i8
  %v2_c458 = load i32, i32* @r6, align 4
  %v3_c458 = add i32 %v2_c458, 2
  %v4_c458 = inttoptr i32 %v3_c458 to i8*
  store i8 %v1_c458, i8* %v4_c458, align 1
  %v0_c45c = call i32 @function_f508()
  %v1_c45c = trunc i32 %v0_c45c to i8
  store i32 %v0_c45c, i32* %r0.global-to-local, align 4
  store i32 %v1_bf24, i32* %r1.global-to-local, align 4
  %v0_c464 = load i32, i32* @r6, align 4
  %v1_c464 = add i32 %v0_c464, 13
  %v2_c464 = inttoptr i32 %v1_c464 to i8*
  %v3_c464 = load i8, i8* %v2_c464, align 1
  %v4_c464 = zext i8 %v3_c464 to i32
  store i32 %v1_c468, i32* %r2.global-to-local, align 4
  %v1_c46c = and i32 %v4_c464, 223
  %v5_c470 = or i32 %v1_c46c, %v4_c470
  store i32 %v5_c470, i32* %r3.global-to-local, align 4
  %v1_c474 = trunc i32 %v5_c470 to i8
  store i8 %v1_c474, i8* %v2_c464, align 1
  store i32 %v1_bf44, i32* %ip.global-to-local, align 4
  %v0_c47c = load i32, i32* @r6, align 4
  %v1_c47c = add i32 %v0_c47c, 13
  %v2_c47c = inttoptr i32 %v1_c47c to i8*
  %v3_c47c = load i8, i8* %v2_c47c, align 1
  %v4_c47c = zext i8 %v3_c47c to i32
  store i32 %v1_c480, i32* %r3.global-to-local, align 4
  %v1_c484 = and i32 %v4_c47c, 239
  %v5_c488 = or i32 %v1_c484, %v4_c488
  store i32 %v5_c488, i32* %r2.global-to-local, align 4
  %v1_c48c = trunc i32 %v5_c488 to i8
  store i8 %v1_c48c, i8* %v2_c47c, align 1
  store i32 %v1_bf64, i32* %r1.global-to-local, align 4
  %v0_c494 = load i32, i32* @r6, align 4
  %v1_c494 = add i32 %v0_c494, 13
  %v2_c494 = inttoptr i32 %v1_c494 to i8*
  %v3_c494 = load i8, i8* %v2_c494, align 1
  %v4_c494 = zext i8 %v3_c494 to i32
  store i32 %v1_c498, i32* %r2.global-to-local, align 4
  %v1_c49c = and i32 %v4_c494, 247
  %v5_c4a0 = or i32 %v1_c49c, %v4_c4a0
  store i32 %v5_c4a0, i32* %r3.global-to-local, align 4
  %v1_c4a4 = trunc i32 %v5_c4a0 to i8
  store i8 %v1_c4a4, i8* %v2_c494, align 1
  store i32 %v1_bf84, i32* %ip.global-to-local, align 4
  %v0_c4ac = load i32, i32* @r6, align 4
  %v1_c4ac = add i32 %v0_c4ac, 13
  %v2_c4ac = inttoptr i32 %v1_c4ac to i8*
  %v3_c4ac = load i8, i8* %v2_c4ac, align 1
  %v4_c4ac = zext i8 %v3_c4ac to i32
  store i32 %v1_c4b0, i32* %r3.global-to-local, align 4
  %v1_c4b4 = and i32 %v4_c4ac, 251
  %v5_c4b8 = or i32 %v1_c4b4, %v4_c4b8
  store i32 %v5_c4b8, i32* %r2.global-to-local, align 4
  %v1_c4bc = trunc i32 %v5_c4b8 to i8
  store i8 %v1_c4bc, i8* %v2_c4ac, align 1
  store i32 %v1_bfa4, i32* %r1.global-to-local, align 4
  %v0_c4c4 = load i32, i32* @r6, align 4
  %v1_c4c4 = add i32 %v0_c4c4, 13
  %v2_c4c4 = inttoptr i32 %v1_c4c4 to i8*
  %v3_c4c4 = load i8, i8* %v2_c4c4, align 1
  %v4_c4c4 = zext i8 %v3_c4c4 to i32
  store i32 %v1_c4c8, i32* %r2.global-to-local, align 4
  %v1_c4cc = and i32 %v4_c4c4, 253
  %v4_c4d0 = or i32 %v1_c4cc, %v3_c4d0
  store i32 %v4_c4d0, i32* %r3.global-to-local, align 4
  %v1_c4d4 = trunc i32 %v4_c4d0 to i8
  store i8 %v1_c4d4, i8* %v2_c4c4, align 1
  %v0_c4d8 = load i32, i32* @r6, align 4
  %v1_c4d8 = add i32 %v0_c4d8, 13
  %v2_c4d8 = inttoptr i32 %v1_c4d8 to i8*
  %v3_c4d8 = load i8, i8* %v2_c4d8, align 1
  %v4_c4d8 = zext i8 %v3_c4d8 to i32
  %v0_c4dc = load i32, i32* @r8, align 4
  %v1_c4dc = urem i32 %v0_c4dc, 2
  %v1_c4e0 = and i32 %v4_c4d8, 254
  store i32 %v1_c4e0, i32* %r2.global-to-local, align 4
  %v4_c4e437 = udiv i32 %v0_c45c, 256
  %v2_c4e8 = or i32 %v1_c4e0, %v1_c4dc
  store i32 %v2_c4e8, i32* %r3.global-to-local, align 4
  %v1_c4ec = trunc i32 %v4_c4e437 to i8
  %v3_c4ec = add i32 %v0_c4d8, 15
  %v4_c4ec = inttoptr i32 %v3_c4ec to i8*
  store i8 %v1_c4ec, i8* %v4_c4ec, align 1
  %v3_c4f0 = load i32, i32* @r6, align 4
  %v4_c4f0 = add i32 %v3_c4f0, 14
  %v5_c4f0 = inttoptr i32 %v4_c4f0 to i8*
  store i8 %v1_c45c, i8* %v5_c4f0, align 1
  %v0_c4f4 = load i32, i32* %r3.global-to-local, align 4
  %v1_c4f4 = trunc i32 %v0_c4f4 to i8
  %v2_c4f4 = load i32, i32* @r6, align 4
  %v3_c4f4 = add i32 %v2_c4f4, 13
  %v4_c4f4 = inttoptr i32 %v3_c4f4 to i8*
  store i8 %v1_c4f4, i8* %v4_c4f4, align 1
  %v0_c4f8 = load i32, i32* @r4, align 4
  %v1_c4f8 = add i32 %v0_c4f8, 40
  store i32 %v1_c4f8, i32* %r0.global-to-local, align 4
  %v0_c4fc = load i32, i32* @sb, align 4
  store i32 %v0_c4fc, i32* @r1, align 4
  %v1_c500 = inttoptr i32 %v1_c4f8 to i8*
  %v2_c500 = call i32 @function_f688(i8* %v1_c500)
  store i32 %v2_c500, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c504

dec_label_pc_c504:                                ; preds = %dec_label_pc_c078, %dec_label_pc_c284, %bb97
  %v3_c504 = load i32, i32* %stack_var_-40, align 4
  %v1_c508 = add i32 %v3_c504, 1
  store i32 %v1_c508, i32* %r3.global-to-local, align 4
  %v1_c50c = load i32, i32* @fp, align 4
  %v9_c50c = icmp eq i32 %v1_c508, %v1_c50c
  store i1 %v9_c50c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c508, i32* %stack_var_-40, align 4
  %v5_c514 = icmp slt i32 %v1_c508, %v1_c50c
  br i1 %v5_c514, label %dec_label_pc_c078, label %dec_label_pc_c518

dec_label_pc_c518:                                ; preds = %dec_label_pc_c504, %.thread27
  %v0_c52021 = phi i32 [ %v0_c04c, %.thread27 ], [ %v1_c50c, %dec_label_pc_c504 ]
  %v0_c518 = load i32, i32* @sb, align 4
  %v1_c518 = add i32 %v0_c518, 40
  store i32 %v1_c518, i32* @sl, align 4
  %v1_c51c = add i32 %v0_c518, 20
  store i32 %v1_c51c, i32* @r7, align 4
  %v2_c698 = icmp eq i32 %v1_bffc, 0
  %v3_c554 = icmp eq i32 %v3_c054, 65535
  br label %dec_label_pc_c520

dec_label_pc_c520:                                ; preds = %dec_label_pc_c57c, %dec_label_pc_c518
  %v0_c520 = phi i32 [ %v1_c65c, %dec_label_pc_c57c ], [ %v0_c52021, %dec_label_pc_c518 ]
  %v2_c520 = icmp eq i32 %v0_c520, 0
  store i1 %v2_c520, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r1.global-to-local, align 4
  %tmp98 = icmp slt i32 %v0_c520, 1
  br label %dec_label_pc_c528

dec_label_pc_c528:                                ; preds = %dec_label_pc_c528, %dec_label_pc_c520
  br i1 %tmp98, label %dec_label_pc_c528, label %dec_label_pc_c52c

dec_label_pc_c52c:                                ; preds = %dec_label_pc_c528
  %v0_c52c = load i32, i32* @r7, align 4
  %tmp99 = mul i32 %v0_c52c, 256
  %v1_c534 = and i32 %tmp99, 65280
  %tmp100 = udiv i32 %v0_c52c, 256
  %v4_c538 = urem i32 %tmp100, 256
  %v5_c538 = or i32 %v4_c538, %v1_c534
  store i32 %v5_c538, i32* @r8, align 4
  store i32 %v4_be6c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 65536, i32* %r3.global-to-local, align 4
  store i32 %v3_c054, i32* %ip.global-to-local, align 4
  %v7_c54c = load i32, i32* %v2_be6c, align 4
  store i32 %v7_c54c, i32* @r4, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i1 %v3_c554, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-40, align 4
  store i32 0, i32* @r6, align 4
  %v1_c560 = add i32 %v7_c54c, 20
  store i32 %v1_c560, i32* @r5, align 4
  br i1 %v3_c554, label %dec_label_pc_c688, label %dec_label_pc_c568

dec_label_pc_c568:                                ; preds = %dec_label_pc_c668, %dec_label_pc_c52c
  %v0_c574 = phi i32 [ %v7_c674, %dec_label_pc_c668 ], [ %v7_c54c, %dec_label_pc_c52c ]
  store i1 %v2_c698, i1* %cpsr_z.global-to-local, align 1
  %v0_c570 = load i32, i32* @sb, align 4
  store i32 %v0_c570, i32* @r1, align 4
  %v1_c574 = add i32 %v0_c574, 40
  store i32 %v1_c574, i32* %r0.global-to-local, align 4
  br i1 %v2_c698, label %dec_label_pc_c57c, label %dec_label_pc_c6ac

dec_label_pc_c57c:                                ; preds = %dec_label_pc_c568, %dec_label_pc_c688, %dec_label_pc_c6ac
  %v2_c57c = phi i32 [ %v0_c574, %dec_label_pc_c568 ], [ %v0_c6a0, %dec_label_pc_c688 ], [ %v2_c57c.pre, %dec_label_pc_c6ac ]
  %v0_c57c = load i32, i32* @r6, align 4
  %v1_c57c = trunc i32 %v0_c57c to i8
  %v3_c57c = add i32 %v2_c57c, 10
  %v4_c57c = inttoptr i32 %v3_c57c to i8*
  store i8 %v1_c57c, i8* %v4_c57c, align 1
  %v0_c580 = load i32, i32* @r6, align 4
  %v1_c580 = trunc i32 %v0_c580 to i8
  %v2_c580 = load i32, i32* @r4, align 4
  %v3_c580 = add i32 %v2_c580, 11
  %v4_c580 = inttoptr i32 %v3_c580 to i8*
  store i8 %v1_c580, i8* %v4_c580, align 1
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_c588 = load i32, i32* @r4, align 4
  store i32 %v0_c588, i32* @r0, align 4
  %v2_c58c = call i32 @function_ddf4(i32 %v0_c588, i32 20)
  %v3_c58c = trunc i32 %v2_c58c to i8
  store i32 %v2_c58c, i32* %r0.global-to-local, align 4
  %v3_c590 = load i32, i32* %stack_var_-40, align 4
  store i32 %v4_be5c, i32* %r2.global-to-local, align 4
  %v3_c598 = mul i32 %v3_c590, 16
  %v2_c59c = add i32 %v3_c598, %v4_be5c
  store i32 %v2_c59c, i32* %r1.global-to-local, align 4
  %v1_c5a0 = add i32 %v2_c59c, 4
  %v2_c5a0 = inttoptr i32 %v1_c5a0 to i32*
  %v3_c5a0 = load i32, i32* %v2_c5a0, align 4
  %v3_c5a4 = mul i32 %v3_c5a0, 65536
  store i32 %v3_c5a4, i32* %ip.global-to-local, align 4
  %tmp101 = mul i32 %v3_c5a0, 256
  %v1_c5ac = and i32 %tmp101, 65280
  %tmp102 = udiv i32 %v3_c5a0, 256
  %v4_c5b0 = urem i32 %tmp102, 256
  %v5_c5b0 = or i32 %v4_c5b0, %v1_c5ac
  store i32 %v5_c5b0, i32* %r2.global-to-local, align 4
  %v1_c5b4 = add i32 %v3_c5a0, 1
  store i32 %v1_c5b4, i32* %r3.global-to-local, align 4
  store i32 %v1_c5b4, i32* %v2_c5a0, align 4
  %v0_c5bc = load i32, i32* %r2.global-to-local, align 4
  %v1_c5bc = load i32, i32* @r5, align 4
  %v2_c5bc = add i32 %v1_c5bc, 4
  %v3_c5bc = inttoptr i32 %v2_c5bc to i32*
  store i32 %v0_c5bc, i32* %v3_c5bc, align 4
  %v0_c5c0 = load i32, i32* %r1.global-to-local, align 4
  %v1_c5c0 = add i32 %v0_c5c0, 8
  %v2_c5c0 = inttoptr i32 %v1_c5c0 to i32*
  %v3_c5c0 = load i32, i32* %v2_c5c0, align 4
  %tmp103 = mul i32 %v3_c5c0, 256
  %v1_c5cc = and i32 %tmp103, 65280
  %tmp104 = udiv i32 %v3_c5c0, 256
  %v4_c5d0 = urem i32 %tmp104, 256
  %v5_c5d0 = or i32 %v4_c5d0, %v1_c5cc
  store i32 %v5_c5d0, i32* %r2.global-to-local, align 4
  %v4_c5d438 = udiv i32 %v2_c58c, 256
  %v1_c5d8 = trunc i32 %v4_c5d438 to i8
  %v2_c5d8 = load i32, i32* @r4, align 4
  %v3_c5d8 = add i32 %v2_c5d8, 11
  %v4_c5d8 = inttoptr i32 %v3_c5d8 to i8*
  store i8 %v1_c5d8, i8* %v4_c5d8, align 1
  %v3_c5dc = load i32, i32* @r4, align 4
  %v4_c5dc = add i32 %v3_c5dc, 10
  %v5_c5dc = inttoptr i32 %v4_c5dc to i8*
  store i8 %v3_c58c, i8* %v5_c5dc, align 1
  %v0_c5e0 = load i32, i32* %r2.global-to-local, align 4
  %v1_c5e0 = load i32, i32* @r5, align 4
  %v2_c5e0 = add i32 %v1_c5e0, 8
  %v3_c5e0 = inttoptr i32 %v2_c5e0 to i32*
  store i32 %v0_c5e0, i32* %v3_c5e0, align 4
  %v0_c5e4 = load i32, i32* @r5, align 4
  store i32 %v0_c5e4, i32* @r1, align 4
  %v0_c5e8 = load i32, i32* @r8, align 4
  store i32 %v0_c5e8, i32* %r2.global-to-local, align 4
  %v0_c5ec = load i32, i32* @r7, align 4
  store i32 %v0_c5ec, i32* %r3.global-to-local, align 4
  %v0_c5f0 = load i32, i32* @r4, align 4
  store i32 %v0_c5f0, i32* %r0.global-to-local, align 4
  %v0_c5f4 = load i32, i32* @r6, align 4
  %v1_c5f4 = trunc i32 %v0_c5f4 to i8
  %v3_c5f4 = add i32 %v0_c5e4, 16
  %v4_c5f4 = inttoptr i32 %v3_c5f4 to i8*
  store i8 %v1_c5f4, i8* %v4_c5f4, align 1
  %v0_c5f8 = load i32, i32* @r6, align 4
  %v1_c5f8 = trunc i32 %v0_c5f8 to i8
  %v2_c5f8 = load i32, i32* @r5, align 4
  %v3_c5f8 = add i32 %v2_c5f8, 17
  %v4_c5f8 = inttoptr i32 %v3_c5f8 to i8*
  store i8 %v1_c5f8, i8* %v4_c5f8, align 1
  %v4_c5fc = call i32 @function_de50(i32 %v0_c5f0, i32 %v0_c5e4, i32 %v0_c5e8, i32 %v0_c5ec)
  %v5_c5fc = trunc i32 %v4_c5fc to i8
  store i32 %v4_c5fc, i32* %r0.global-to-local, align 4
  %v4_c60039 = udiv i32 %v4_c5fc, 256
  %v1_c604 = trunc i32 %v4_c60039 to i8
  %v2_c604 = load i32, i32* @r5, align 4
  %v3_c604 = add i32 %v2_c604, 17
  %v4_c604 = inttoptr i32 %v3_c604 to i8*
  store i8 %v1_c604, i8* %v4_c604, align 1
  %v3_c608 = load i32, i32* @r5, align 4
  %v4_c608 = add i32 %v3_c608, 16
  %v5_c608 = inttoptr i32 %v4_c608 to i8*
  store i8 %v5_c5fc, i8* %v5_c608, align 1
  %v3_c60c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_c60c, i32* %r3.global-to-local, align 4
  %v0_c610 = load i32, i32* @r4, align 4
  %v1_c610 = add i32 %v0_c610, 20
  %v2_c610 = inttoptr i32 %v1_c610 to i32*
  %v3_c610 = load i32, i32* %v2_c610, align 4
  %v5_c618 = mul i32 %v3_c60c, 24
  %v3_c620 = udiv i32 %v3_c610, 65536
  store i32 %v3_c620, i32* %r2.global-to-local, align 4
  %v2_c624 = add i32 %v5_c618, %arg2
  store i32 %v2_c624, i32* %ip.global-to-local, align 4
  %v3_c6287 = udiv i32 %v3_c610, 16777216
  %v1_c62c = trunc i32 %v3_c6287 to i8
  %v3_c62c = add i32 %v2_c624, 3
  %v4_c62c = inttoptr i32 %v3_c62c to i8*
  store i8 %v1_c62c, i8* %v4_c62c, align 1
  %v0_c630 = load i32, i32* %r2.global-to-local, align 4
  %v1_c630 = trunc i32 %v0_c630 to i8
  %v2_c630 = load i32, i32* %ip.global-to-local, align 4
  %v3_c630 = add i32 %v2_c630, 2
  %v4_c630 = inttoptr i32 %v3_c630 to i8*
  store i8 %v1_c630, i8* %v4_c630, align 1
  %v0_c634 = load i32, i32* @r4, align 4
  store i32 %v0_c634, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 %v3_c00c, i32* %r0.global-to-local, align 4
  %v0_c640 = load i32, i32* @sl, align 4
  store i32 %v0_c640, i32* %r2.global-to-local, align 4
  store i32 16, i32* %r4.global-to-local, align 4
  %v0_c648 = load i32, i32* %ip.global-to-local, align 4
  %v4_c648 = inttoptr i32 %v0_c648 to %sockaddr*
  %v7_c650 = inttoptr i32 %v0_c634 to i32*
  %v9_c650 = call i32 @sendto(i32 %v3_c00c, i32* %v7_c650, i32 %v0_c640, i32 16384, %sockaddr* %v4_c648, i32 16)
  %v3_c654 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_c654, i32* %r3.global-to-local, align 4
  %v1_c658 = add i32 %v3_c654, 1
  store i32 %v1_c658, i32* %r0.global-to-local, align 4
  %v1_c65c = load i32, i32* @fp, align 4
  %v9_c65c = icmp eq i32 %v1_c658, %v1_c65c
  store i1 %v9_c65c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c658, i32* %stack_var_-40, align 4
  %v6_c664 = icmp slt i32 %v1_c658, %v1_c65c
  br i1 %v6_c664, label %dec_label_pc_c668, label %dec_label_pc_c520

dec_label_pc_c668:                                ; preds = %dec_label_pc_c57c
  store i32 %v4_be6c, i32* %r2.global-to-local, align 4
  store i32 65536, i32* %r3.global-to-local, align 4
  store i32 %v3_c054, i32* %ip.global-to-local, align 4
  %v4_c674 = mul i32 %v1_c658, 4
  %v5_c674 = add i32 %v4_c674, %v4_be6c
  %v6_c674 = inttoptr i32 %v5_c674 to i32*
  %v7_c674 = load i32, i32* %v6_c674, align 4
  store i32 %v7_c674, i32* @r4, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i1 %v3_c554, i1* %cpsr_z.global-to-local, align 1
  %v1_c680 = add i32 %v7_c674, 20
  store i32 %v1_c680, i32* @r5, align 4
  br i1 %v3_c554, label %dec_label_pc_c688, label %dec_label_pc_c568

dec_label_pc_c688:                                ; preds = %dec_label_pc_c668, %dec_label_pc_c52c
  %v0_c688 = call i32 @function_f508()
  %v1_c688 = trunc i32 %v0_c688 to i8
  %v4_c68c = sdiv i32 %v0_c688, 256
  store i32 %v4_c68c, i32* %r3.global-to-local, align 4
  %v3_c690 = load i32, i32* @r4, align 4
  %v4_c690 = add i32 %v3_c690, 4
  %v5_c690 = inttoptr i32 %v4_c690 to i8*
  store i8 %v1_c688, i8* %v5_c690, align 1
  store i1 %v2_c698, i1* %cpsr_z.global-to-local, align 1
  %v0_c69c = load i32, i32* %r3.global-to-local, align 4
  %v1_c69c = trunc i32 %v0_c69c to i8
  %v2_c69c = load i32, i32* @r4, align 4
  %v3_c69c = add i32 %v2_c69c, 5
  %v4_c69c = inttoptr i32 %v3_c69c to i8*
  store i8 %v1_c69c, i8* %v4_c69c, align 1
  %v0_c6a0 = load i32, i32* @r4, align 4
  %v1_c6a0 = add i32 %v0_c6a0, 40
  store i32 %v1_c6a0, i32* %r0.global-to-local, align 4
  %v0_c6a4 = load i32, i32* @sb, align 4
  store i32 %v0_c6a4, i32* @r1, align 4
  %v0_c6a8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c6a8, label %dec_label_pc_c57c, label %dec_label_pc_c6ac

dec_label_pc_c6ac:                                ; preds = %dec_label_pc_c568, %dec_label_pc_c688
  %v0_c6ac = phi i32 [ %v1_c574, %dec_label_pc_c568 ], [ %v1_c6a0, %dec_label_pc_c688 ]
  %v1_c6ac = inttoptr i32 %v0_c6ac to i8*
  %v2_c6ac = call i32 @function_f688(i8* %v1_c6ac)
  store i32 %v2_c6ac, i32* %r0.global-to-local, align 4
  %v2_c57c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c57c

; uselistorder directives
  uselistorder i32 %v0_c6a0, { 1, 0 }
  uselistorder i32 %v7_c674, { 1, 2, 0 }
  uselistorder i32 %v1_c65c, { 1, 2, 0 }
  uselistorder i32 %v1_c658, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v4_c5fc, { 0, 2, 1 }
  uselistorder i32 %v0_c5e4, { 1, 0, 2 }
  uselistorder i32 %v3_c5c0, { 1, 0 }
  uselistorder i32 %v3_c5a0, { 3, 2, 0, 1 }
  uselistorder i32 %v2_c58c, { 0, 2, 1 }
  uselistorder i32 %v0_c574, { 1, 0 }
  uselistorder i32 %v0_c52c, { 1, 0 }
  uselistorder i32 %v0_c520, { 1, 0 }
  uselistorder i1 %v3_c554, { 2, 3, 1, 0 }
  uselistorder i1 %v2_c698, { 2, 1, 0 }
  uselistorder i32 %v1_c508, { 1, 0, 2, 3 }
  uselistorder i32 %v0_c45c, { 0, 2, 1 }
  uselistorder i32 %v3_c43c, { 1, 0 }
  uselistorder i32 %v0_c410, { 1, 0, 2 }
  uselistorder i32 %v3_c404, { 1, 0 }
  uselistorder i32 %v1_c368, { 1, 0 }
  uselistorder i32 %v0_c35c, { 1, 2, 0 }
  uselistorder i32 %v3_c320, { 1, 0 }
  uselistorder i32 %v2_c30c, { 1, 0 }
  uselistorder i32 %v3_c2f0, { 1, 0, 2, 3 }
  uselistorder i32 %v2_c2e8, { 1, 0 }
  uselistorder i32 %v3_c2c4, { 1, 0, 2 }
  uselistorder i32 %v3_c2bc, { 1, 0 }
  uselistorder i32 %v4_c2a4, { 1, 0 }
  uselistorder i32 %v0_c2a0, { 0, 2, 1 }
  uselistorder i32 %v3_c0a0, { 1, 2, 3, 0 }
  uselistorder i32 %v5_c254, { 1, 0 }
  uselistorder i1 %v9_c238, { 1, 0 }
  uselistorder i32 %v4_c24c, { 1, 0 }
  uselistorder i32 %v4_c248, { 1, 0 }
  uselistorder i32 %storemerge35, { 0, 2, 1 }
  uselistorder i32 %v8_c140, { 1, 2, 0, 3 }
  uselistorder i32 %v3_c12c, { 1, 0 }
  uselistorder i32 %v7_c0f8, { 4, 1, 3, 0, 2, 5 }
  uselistorder i32 %v1_c4c8, { 1, 0 }
  uselistorder i32 %v1_c4b0, { 1, 0 }
  uselistorder i32 %v1_c498, { 1, 0 }
  uselistorder i32 %v1_c480, { 1, 0 }
  uselistorder i32 %v1_c468, { 1, 0 }
  uselistorder i32 %v5_c250, { 1, 0 }
  uselistorder i32 %v3_c188113, { 1, 0 }
  uselistorder i1 %v2_c268, { 1, 0 }
  uselistorder i32 %v1_c264, { 1, 0 }
  uselistorder i32 %v4_c260, { 2, 0, 1 }
  uselistorder i32 %v4_c244, { 1, 0 }
  uselistorder i1 %v3_c170, { 1, 0 }
  uselistorder i32 %v1_c084, { 2, 1, 0 }
  uselistorder i32 %v8_c060, { 2, 1, 0 }
  uselistorder i32 %v8_c05c, { 1, 2, 0 }
  uselistorder i32 %v3_c054, { 1, 2, 3, 0 }
  uselistorder i32 %v0_c050, { 1, 0, 3, 2 }
  uselistorder i32 %v3_c010, { 2, 3, 0, 1 }
  uselistorder i32 %v3_c00c, { 3, 4, 1, 2, 5, 6, 0, 7, 8 }
  uselistorder i32 %v1_bffc, { 1, 0 }
  uselistorder i32 %v1_bfa4, { 1, 0 }
  uselistorder i32 %v1_bf84, { 1, 0 }
  uselistorder i32 %v1_bf64, { 1, 0 }
  uselistorder i32 %v1_bf44, { 1, 0 }
  uselistorder i32 %v1_bf24, { 1, 0 }
  uselistorder i32 %v1_beec, { 1, 0 }
  uselistorder i32 %v4_be6c, { 0, 3, 4, 1, 2 }
  uselistorder i32 %v4_be5c, { 0, 7, 1, 4, 2, 5, 3, 6 }
  uselistorder i32 %v1_be40, { 2, 1, 0 }
  uselistorder i32* %stack_var_-40, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 1, 16, 15 }
  uselistorder i32* %stack_var_-60, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 51, 39, 40, 42, 41, 43, 44, 45, 46, 47, 48, 49, 50, 1, 52, 53, 54, 55, 57, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 32, 21, 22, 28, 23, 24, 25, 26, 27, 29, 30, 31, 1, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 43, 45, 47, 46, 48, 50, 49, 0 }
  uselistorder i32* %r0.global-to-local, { 4, 3, 5, 6, 8, 7, 12, 9, 10, 13, 11, 22, 14, 15, 16, 17, 18, 19, 20, 21, 26, 23, 24, 25, 27, 29, 28, 47, 44, 30, 33, 31, 34, 35, 32, 37, 36, 38, 39, 40, 42, 41, 43, 2, 1, 45, 46, 48, 50, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10, 12, 22, 13, 14, 15, 17, 27, 18, 19, 16, 20, 21, 26, 23, 24, 25 }
  uselistorder label %dec_label_pc_c6ac, { 1, 0 }
  uselistorder label %dec_label_pc_c57c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_c504, { 2, 1, 0 }
  uselistorder label %bb97, { 1, 0 }
  uselistorder label %.thread10, { 2, 1, 0 }
  uselistorder label %bb93, { 1, 0 }
  uselistorder label %dec_label_pc_c298, { 2, 0, 1 }
  uselistorder label %dec_label_pc_c1d0, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_c164, { 1, 0 }
  uselistorder label %dec_label_pc_c0b0, { 1, 0 }
}

define i32 @function_c6b8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_c6b8:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp = call i8 @__decompiler_undefined_function_1()
  %tmp40 = call i8 @__decompiler_undefined_function_1()
  %tmp41 = call i8 @__decompiler_undefined_function_1()
  %tmp42 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_c6b8 = load i32, i32* @r4, align 4
  %v1_c6bc = urem i32 %arg1, 256
  store i32 %v1_c6bc, i32* @fp, align 4
  store i32 %v1_c6bc, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  %v1_c6d4 = urem i32 %arg3, 256
  store i32 %v1_c6d4, i32* @r4, align 4
  %v2_c6d8 = call i32* @calloc(i32 %v1_c6bc, i32 16)
  %v4_c6d8 = ptrtoint i32* %v2_c6d8 to i32
  store i32 4, i32* %r1.global-to-local, align 4
  %v0_c6e4 = load i32, i32* @fp, align 4
  store i32 %v0_c6e4, i32* %r0.global-to-local, align 4
  %v2_c6e8 = call i32* @calloc(i32 %v0_c6e4, i32 4)
  %v4_c6e8 = ptrtoint i32* %v2_c6e8 to i32
  %v0_c6ec = load i32, i32* @r5, align 4
  store i32 %v0_c6ec, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c6fc = load i32, i32* @r4, align 4
  store i32 %v0_c6fc, i32* %r0.global-to-local, align 4
  %v5_c700 = inttoptr i32 %v0_c6ec to i32*
  %v6_c700 = call i32 @function_92dc(i32 %v0_c6fc, i32* %v5_c700, i32 2, i32 0)
  %v1_c70c = urem i32 %v6_c700, 256
  store i32 %v1_c70c, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_c718 = load i32, i32* @r5, align 4
  store i32 %v0_c718, i32* %r1.global-to-local, align 4
  %v0_c71c = load i32, i32* @r4, align 4
  store i32 %v0_c71c, i32* %r0.global-to-local, align 4
  %v6_c724 = inttoptr i32 %v0_c718 to i32*
  %v7_c724 = call i32 @function_92dc(i32 %v0_c71c, i32* %v6_c724, i32 3, i32 65535)
  %v0_c728 = load i32, i32* @r5, align 4
  store i32 %v0_c728, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_c724, i32* @r6, align 4
  %v0_c738 = load i32, i32* @r4, align 4
  store i32 %v0_c738, i32* %r0.global-to-local, align 4
  %v4_c73c = inttoptr i32 %v0_c728 to i32*
  %v5_c73c = call i32 @function_92dc(i32 %v0_c738, i32* %v4_c73c, i32 4, i32 64)
  %v1_c744 = urem i32 %v5_c73c, 256
  store i32 %v1_c744, i32* %ip.global-to-local, align 4
  %v0_c748 = load i32, i32* @r5, align 4
  store i32 %v0_c748, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_c754 = load i32, i32* @r4, align 4
  store i32 %v0_c754, i32* %r0.global-to-local, align 4
  %v6_c75c = inttoptr i32 %v0_c748 to i32*
  %v7_c75c = call i32 @function_92dc(i32 %v0_c754, i32* %v6_c75c, i32 5, i32 1)
  %v1_c768 = urem i32 %v7_c75c, 256
  store i32 %v1_c768, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  %v0_c770 = load i32, i32* @r5, align 4
  store i32 %v0_c770, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_c778 = load i32, i32* @r4, align 4
  store i32 %v0_c778, i32* %r0.global-to-local, align 4
  %v5_c780 = inttoptr i32 %v0_c770 to i32*
  %v6_c780 = call i32 @function_92dc(i32 %v0_c778, i32* %v5_c780, i32 7, i32 65535)
  %v0_c784 = load i32, i32* @r5, align 4
  store i32 %v0_c784, i32* %r1.global-to-local, align 4
  %v3_c788 = mul i32 %v6_c780, 65536
  store i32 %v3_c788, i32* @r7, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c794 = load i32, i32* @r4, align 4
  store i32 %v0_c794, i32* %r0.global-to-local, align 4
  %v4_c798 = inttoptr i32 %v0_c784 to i32*
  %v5_c798 = call i32 @function_92dc(i32 %v0_c794, i32* %v4_c798, i32 11, i32 0)
  %v1_c7a0 = urem i32 %v5_c798, 256
  store i32 %v1_c7a0, i32* %ip.global-to-local, align 4
  %v0_c7a4 = load i32, i32* @r5, align 4
  store i32 %v0_c7a4, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_c7b0 = load i32, i32* @r4, align 4
  store i32 %v0_c7b0, i32* %r0.global-to-local, align 4
  %v5_c7b8 = inttoptr i32 %v0_c7a4 to i32*
  %v6_c7b8 = call i32 @function_92dc(i32 %v0_c7b0, i32* %v5_c7b8, i32 12, i32 1)
  %v1_c7c0 = urem i32 %v6_c7b8, 256
  store i32 %v1_c7c0, i32* %ip.global-to-local, align 4
  %v0_c7c4 = load i32, i32* @r5, align 4
  store i32 %v0_c7c4, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_c7d0 = load i32, i32* @r4, align 4
  store i32 %v0_c7d0, i32* %r0.global-to-local, align 4
  %v5_c7d8 = inttoptr i32 %v0_c7c4 to i32*
  %v6_c7d8 = call i32 @function_92dc(i32 %v0_c7d0, i32* %v5_c7d8, i32 13, i32 1)
  %v1_c7e0 = urem i32 %v6_c7d8, 256
  store i32 %v1_c7e0, i32* %ip.global-to-local, align 4
  %v0_c7e4 = load i32, i32* @r5, align 4
  store i32 %v0_c7e4, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c7f0 = load i32, i32* @r4, align 4
  store i32 %v0_c7f0, i32* %r0.global-to-local, align 4
  %v5_c7f8 = inttoptr i32 %v0_c7e4 to i32*
  %v6_c7f8 = call i32 @function_92dc(i32 %v0_c7f0, i32* %v5_c7f8, i32 14, i32 0)
  %v1_c800 = urem i32 %v6_c7f8, 256
  store i32 %v1_c800, i32* %ip.global-to-local, align 4
  %v0_c804 = load i32, i32* @r5, align 4
  store i32 %v0_c804, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c810 = load i32, i32* @r4, align 4
  store i32 %v0_c810, i32* %r0.global-to-local, align 4
  %v5_c818 = inttoptr i32 %v0_c804 to i32*
  %v6_c818 = call i32 @function_92dc(i32 %v0_c810, i32* %v5_c818, i32 15, i32 0)
  %v1_c820 = urem i32 %v6_c818, 256
  store i32 %v1_c820, i32* %ip.global-to-local, align 4
  %v0_c824 = load i32, i32* @r5, align 4
  store i32 %v0_c824, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c830 = load i32, i32* @r4, align 4
  store i32 %v0_c830, i32* %r0.global-to-local, align 4
  %v5_c838 = inttoptr i32 %v0_c824 to i32*
  %v6_c838 = call i32 @function_92dc(i32 %v0_c830, i32* %v5_c838, i32 16, i32 0)
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %v6_c838, i32* %ip.global-to-local, align 4
  store i32 768, i32* %r3.global-to-local, align 4
  %v0_c848 = load i32, i32* @r5, align 4
  store i32 %v0_c848, i32* %r1.global-to-local, align 4
  %v0_c84c = load i32, i32* @r4, align 4
  store i32 %v0_c84c, i32* %r0.global-to-local, align 4
  %v1_c850 = urem i32 %v6_c838, 256
  store i32 %v1_c850, i32* @r8, align 4
  %v4_c854 = inttoptr i32 %v0_c848 to i32*
  %v5_c854 = call i32 @function_92dc(i32 %v0_c84c, i32* %v4_c854, i32 0, i32 768)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_c860 = load i32, i32* @r5, align 4
  store i32 %v0_c860, i32* %r1.global-to-local, align 4
  store i32 %v5_c854, i32* @sb, align 4
  %v0_c868 = load i32, i32* @r4, align 4
  store i32 %v0_c868, i32* %r0.global-to-local, align 4
  %v4_c86c = inttoptr i32 %v0_c860 to i32*
  %v5_c86c = call i32 @function_92dc(i32 %v0_c868, i32* %v4_c86c, i32 1, i32 1)
  store i32 3, i32* %r1.global-to-local, align 4
  %v1_c878 = urem i32 %v5_c86c, 256
  store i32 %v1_c878, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_c888 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_c888, i32* %r0.global-to-local, align 4
  %v0_c88c = load i32, i32* @r7, align 4
  %v3_c88c = udiv i32 %v0_c88c, 65536
  store i32 %v3_c88c, i32* %r1.global-to-local, align 4
  %v2_c890 = icmp eq i32 %v3_c888, -1
  store i1 %v2_c890, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c890, label %dec_label_pc_cb14, label %dec_label_pc_c8a0

dec_label_pc_c8a0:                                ; preds = %dec_label_pc_c6b8
  store i32 1, i32* %stack_var_-40, align 4
  %v6_c8a8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_c8a8, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v7_c8bc = call i32 @setsockopt(i32 %v3_c888, i32 0, i32 3, i32* nonnull %stack_var_-40, i32 4)
  store i32 %v7_c8bc, i32* %r0.global-to-local, align 4
  %v2_c8c0 = icmp eq i32 %v7_c8bc, -1
  store i1 %v2_c8c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c8c0, label %dec_label_pc_cb0c, label %dec_label_pc_c8c8

dec_label_pc_c8c8:                                ; preds = %dec_label_pc_c8a0
  %v0_c8c8 = load i32, i32* @fp, align 4
  %v2_c8c8 = icmp eq i32 %v0_c8c8, 0
  store i1 %v2_c8c8, i1* %cpsr_z.global-to-local, align 1
  %v0_c8cc = load i32, i32* @r6, align 4
  %v3_c8cc = mul i32 %v0_c8cc, 65536
  store i32 %v3_c8cc, i32* %r0.global-to-local, align 4
  %v3_c8d0 = urem i32 %v0_c8cc, 65536
  store i32 %v3_c8d0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %tmp85 = icmp slt i32 %v0_c8c8, 1
  br i1 %tmp85, label %.thread27, label %dec_label_pc_c8f4.preheader

.thread27:                                        ; preds = %dec_label_pc_c8c8
  store i32 0, i32* %stack_var_-40, align 4
  br label %dec_label_pc_cd94

dec_label_pc_c8f4.preheader:                      ; preds = %dec_label_pc_c8c8
  %v5_c8d8 = load i32, i32* @r7, align 4
  %v8_c8d8 = udiv i32 %v5_c8d8, 16777216
  %tmp86 = udiv i32 %v0_c8cc, 256
  %v8_c8dc = urem i32 %tmp86, 256
  store i32 %v8_c8dc, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-40, align 4
  %v1_c900 = urem i32 %v0_c8cc, 256
  %v3_c9ec = icmp ugt i32 %v0_c88c, -65537
  %v2_ca10 = ptrtoint i32* %stack_var_-60 to i32
  %tmp87 = bitcast i32* %stack_var_-60 to %sockaddr*
  %v4_ca2c = mul nuw nsw i32 %v1_c900, 256
  %v5_ca2c = or i32 %v8_c8dc, %v4_ca2c
  %sext11 = mul i32 %tmp86, 16777216
  %v4_ca38 = sdiv i32 %sext11, 16777216
  %v3_ca40 = ashr i32 %sext11, 31
  %tmp88 = bitcast i32* %stack_var_-76 to %sockaddr*
  %v2_ca70 = ptrtoint i32* %stack_var_-332 to i32
  %v2_ca74 = ptrtoint i32* %stack_var_-44 to i32
  %v4_cabc = zext i8 %tmp41 to i32
  %v4_cac0 = zext i8 %tmp40 to i32
  %v4_cacc = mul nuw nsw i32 %v4_cac0, 256
  %v4_cadc = zext i8 %tmp to i32
  %v1_cae0 = and i32 %v4_cadc, 18
  %v2_cae4 = icmp eq i32 %v1_cae0, 18
  %v1_c9fc = mul nuw nsw i32 %v3_c88c, 256
  %v4_ca00 = and i32 %v1_c9fc, 65280
  %v5_ca00 = or i32 %v8_c8d8, %v4_ca00
  %v3_ca04113 = udiv i32 %v4_ca00, 256
  %v1_ca08 = trunc i32 %v3_ca04113 to i8
  %sext = mul i32 %v6_c700, 16777216
  %v4_cc08 = sdiv i32 %sext, 16777216
  %sext9 = mul i32 %v5_c73c, 16777216
  %v4_cc1c = sdiv i32 %sext9, 16777216
  %v5_cacc = or i32 %v4_cabc, %v4_cacc
  %v1_caec = and i32 %v4_cadc, 5
  %v2_caec = icmp eq i32 %v1_caec, 0
  %v1_ca0c = trunc i32 %v8_c8d8 to i8
  %v1_cc18 = trunc i32 %v4_cc08 to i8
  %v1_cce4 = urem i32 %v5_c798, 2
  %tmp114 = sub nsw i32 0, %v1_cce4
  %v4_ccec = and i32 %tmp114, 32
  %v1_ccfc = urem i32 %v6_c7b8, 2
  %tmp115 = sub nsw i32 0, %v1_ccfc
  %v4_cd04 = and i32 %tmp115, 16
  %v1_cd14 = urem i32 %v6_c7d8, 2
  %tmp116 = sub nsw i32 0, %v1_cd14
  %v4_cd1c = and i32 %tmp116, 8
  %v1_cd2c = urem i32 %v6_c7f8, 2
  %tmp117 = sub nsw i32 0, %v1_cd2c
  %v4_cd34 = and i32 %tmp117, 4
  %v1_cd44 = urem i32 %v6_c818, 2
  %tmp118 = sub nsw i32 0, %v1_cd44
  %v3_cd4c = and i32 %tmp118, 2
  br label %dec_label_pc_c8f4

dec_label_pc_c8f4:                                ; preds = %dec_label_pc_cd80, %dec_label_pc_caf4, %dec_label_pc_c8f4.preheader
  store i32 %v8_c8dc, i32* %r3.global-to-local, align 4
  store i32 %v1_c900, i32* %ip.global-to-local, align 4
  %v0_c90c = load i32, i32* @sb, align 4
  %v1_c90c = add i32 %v0_c90c, 40
  store i32 %v1_c90c, i32* @sl, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_c91c107 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_c91c107, i32* %r0.global-to-local, align 4
  %v2_c920108 = icmp eq i32 %v3_c91c107, -1
  store i1 %v2_c920108, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_c91c107, i32* @r7, align 4
  br i1 %v2_c920108, label %dec_label_pc_cd80, label %dec_label_pc_c92c

dec_label_pc_c92c:                                ; preds = %dec_label_pc_c8f4, %dec_label_pc_cb00
  %v3_c91c109 = phi i32 [ %v3_c91c, %dec_label_pc_cb00 ], [ %v3_c91c107, %dec_label_pc_c8f4 ]
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_c934 = call i32 (i32, i32, ...) @fcntl(i32 %v3_c91c109, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_c93c = or i32 %v2_c934, 2048
  store i32 %v1_c93c, i32* %r2.global-to-local, align 4
  %v0_c940 = load i32, i32* @r7, align 4
  store i32 %v0_c940, i32* %r0.global-to-local, align 4
  %v2_c944 = call i32 (i32, i32, ...) @fcntl(i32 %v0_c940, i32 4)
  %v3_c948 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_c948, i32* %ip.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 2, i32* %stack_var_-60, align 4
  %v5_c964 = mul i32 %v3_c948, 24
  store i32 %v5_c964, i32* %r1.global-to-local, align 4
  %v2_c968 = add i32 %v5_c964, %arg2
  store i32 %v2_c968, i32* %r2.global-to-local, align 4
  %v1_c96c = add i32 %v2_c968, 20
  %v2_c96c = inttoptr i32 %v1_c96c to i8*
  %v3_c96c = load i8, i8* %v2_c96c, align 1
  %v4_c96c = zext i8 %v3_c96c to i32
  store i32 %v4_c96c, i32* %r3.global-to-local, align 4
  %v2_c970 = icmp ugt i8 %v3_c96c, 30
  %v7_c970 = icmp eq i8 %v3_c96c, 31
  store i1 %v7_c970, i1* %cpsr_z.global-to-local, align 1
  %v2_c974 = xor i1 %v7_c970, true
  %v3_c974 = and i1 %v2_c970, %v2_c974
  %v5_c974 = add i32 %v2_c968, 16
  %v6_c974 = inttoptr i32 %v5_c974 to i32*
  %v7_c974 = load i32, i32* %v6_c974, align 4
  br i1 %v3_c974, label %dec_label_pc_c9e0, label %dec_label_pc_c980

dec_label_pc_c980:                                ; preds = %dec_label_pc_c92c
  store i32 %v7_c974, i32* %r4.global-to-local, align 4
  %v0_c984 = call i32 @function_f508()
  store i32 %v0_c984, i32* %r0.global-to-local, align 4
  %v3_c988 = load i32, i32* %stack_var_-40, align 4
  %v5_c990 = mul i32 %v3_c988, 24
  %v2_c99c = add i32 %v5_c990, %arg2
  store i32 %v2_c99c, i32* %r1.global-to-local, align 4
  %v1_c998 = udiv i32 %v7_c974, 256
  %v3_c9a0 = and i32 %v1_c998, 65280
  store i32 %v3_c9a0, i32* %r2.global-to-local, align 4
  %v1_c9a4 = and i32 %v7_c974, 65280
  store i32 %v1_c9a4, i32* %r3.global-to-local, align 4
  %v3_c9a8 = mul i32 %v7_c974, 16777216
  store i32 %v3_c9a8, i32* %ip.global-to-local, align 4
  %v1_c9ac = add i32 %v2_c99c, 20
  %v2_c9ac = inttoptr i32 %v1_c9ac to i8*
  %v3_c9ac = load i8, i8* %v2_c9ac, align 1
  %v4_c9ac = zext i8 %v3_c9ac to i32
  store i32 %v4_c9ac, i32* %lr.global-to-local, align 4
  %v4_c9b0 = mul nuw nsw i32 %v1_c9a4, 256
  %v5_c9b0 = or i32 %v4_c9b0, %v3_c9a8
  store i32 %v5_c9b0, i32* %ip.global-to-local, align 4
  %v2_c9b8 = call i32 @llvm.bswap.i32(i32 %v7_c974)
  %v7_c9bc = lshr i32 %v0_c984, %v4_c9ac
  %v8_c9bc = add i32 %v7_c9bc, %v2_c9b8
  store i32 %v8_c9bc, i32* %r2.global-to-local, align 4
  %v3_c9c8 = mul i32 %v8_c9bc, 16777216
  %v1_c9cc = and i32 %v8_c9bc, 65280
  store i32 %v1_c9cc, i32* %r0.global-to-local, align 4
  %v4_c9d0 = mul nuw nsw i32 %v1_c9cc, 256
  %v5_c9d0 = or i32 %v4_c9d0, %v3_c9c8
  store i32 %v5_c9d0, i32* %r1.global-to-local, align 4
  %v2_c9d8 = call i32 @llvm.bswap.i32(i32 %v8_c9bc)
  br label %dec_label_pc_c9e0

dec_label_pc_c9e0:                                ; preds = %dec_label_pc_c92c, %dec_label_pc_c980
  %storemerge35 = phi i32 [ %v2_c9d8, %dec_label_pc_c980 ], [ %v7_c974, %dec_label_pc_c92c ]
  store i32 %v3_c88c, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i1 %v3_c9ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_c9ec, label %dec_label_pc_cb1c, label %dec_label_pc_c9f4

dec_label_pc_c9f4:                                ; preds = %dec_label_pc_c9e0
  store i32 %v3_c88c, i32* %r0.global-to-local, align 4
  store i32 %v8_c8d8, i32* %r1.global-to-local, align 4
  store i32 %v5_ca00, i32* %r3.global-to-local, align 4
  store i32 %v3_ca04113, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_ca10

dec_label_pc_ca10:                                ; preds = %dec_label_pc_cb1c, %dec_label_pc_c9f4
  %stack_var_-57.0 = phi i8 [ %v1_cb24, %dec_label_pc_cb1c ], [ %v1_ca08, %dec_label_pc_c9f4 ]
  %storemerge = phi i8 [ %v1_cb1c, %dec_label_pc_cb1c ], [ %v1_ca0c, %dec_label_pc_c9f4 ]
  store i32 %v2_ca10, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v0_ca18 = load i32, i32* @r7, align 4
  store i32 %v0_ca18, i32* %r0.global-to-local, align 4
  %v5_ca1c = call i32 @connect(i32 %v0_ca18, %sockaddr* nonnull %tmp87, i32 16)
  store i32 %v1_c900, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v5_ca2c, i32* %r2.global-to-local, align 4
  %v2_ca34 = call i32 @time(i32* null)
  store i32 %v2_ca34, i32* %r0.global-to-local, align 4
  store i32 %v2_ca34, i32* %r4.global-to-local, align 4
  store i32 %v3_ca40, i32* %ip.global-to-local, align 4
  %v9_caa0 = icmp eq i32 %tmp42, %storemerge35
  %v4_cac4 = zext i8 %storemerge to i32
  %v4_cac8 = zext i8 %stack_var_-57.0 to i32
  %. = zext i1 %v9_caa0 to i32
  %v9_cab4 = icmp eq i1 %v9_caa0, false
  %v4_cad0 = mul nuw nsw i32 %v4_cac8, 256
  %v5_cad0 = or i32 %v4_cad0, %v4_cac4
  %v9_cad4 = icmp eq i32 %v5_cad0, %v5_cacc
  br label %dec_label_pc_ca5c

dec_label_pc_ca4c:                                ; preds = %.thread33, %dec_label_pc_cabc, %dec_label_pc_caec, %bb90
  %v2_ca4c = call i32 @time(i32* null)
  %v0_ca50 = load i32, i32* %r4.global-to-local, align 4
  %v2_ca50 = sub i32 %v2_ca4c, %v0_ca50
  store i32 %v2_ca50, i32* %r0.global-to-local, align 4
  %v7_ca54 = icmp eq i32 %v2_ca50, 10
  store i1 %v7_ca54, i1* %cpsr_z.global-to-local, align 1
  %v8_ca58 = icmp sgt i32 %v2_ca50, 10
  br i1 %v8_ca58, label %dec_label_pc_cb00, label %dec_label_pc_ca5c

dec_label_pc_ca5c:                                ; preds = %dec_label_pc_ca4c, %dec_label_pc_ca10
  store i32 16, i32* %stack_var_-44, align 4
  store i32 256, i32* %r2.global-to-local, align 4
  store i32 %v2_ca70, i32* %r1.global-to-local, align 4
  store i32 %v2_ca74, i32* %ip.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 %v3_c888, i32* %r0.global-to-local, align 4
  %v10_ca84 = call i32 @recvfrom(i32 %v3_c888, i32* nonnull %stack_var_-332, i32 256, i32 16384, %sockaddr* %tmp88, i32* nonnull %stack_var_-44)
  store i32 %v10_ca84, i32* %r2.global-to-local, align 4
  %v2_ca8c = icmp eq i32 %v10_ca84, -1
  store i1 %v2_ca8c, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v2_ca8c, label %dec_label_pc_cb14, label %dec_label_pc_ca98

dec_label_pc_ca98:                                ; preds = %dec_label_pc_ca5c
  store i32 %storemerge35, i32* %lr.global-to-local, align 4
  store i32 %tmp42, i32* %r3.global-to-local, align 4
  store i32 %., i32* %r1.global-to-local, align 4
  %v7_caac = icmp eq i32 %v10_ca84, 40
  store i1 %v7_caac, i1* %cpsr_z.global-to-local, align 1
  %tmp119 = icmp ult i32 %v10_ca84, 41
  br i1 %tmp119, label %.thread33, label %bb90

.thread33:                                        ; preds = %dec_label_pc_ca98
  store i32 0, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ca4c

bb90:                                             ; preds = %dec_label_pc_ca98
  store i1 %v9_cab4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_cab4, label %dec_label_pc_ca4c, label %dec_label_pc_cabc

dec_label_pc_cabc:                                ; preds = %bb90
  store i32 %v4_cac0, i32* %r1.global-to-local, align 4
  store i32 %v4_cac4, i32* %ip.global-to-local, align 4
  store i32 %v4_cac8, i32* %r2.global-to-local, align 4
  store i32 %v5_cacc, i32* %r3.global-to-local, align 4
  store i32 %v5_cad0, i32* @r5, align 4
  store i1 %v9_cad4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_cad4, label %dec_label_pc_cadc, label %dec_label_pc_ca4c

dec_label_pc_cadc:                                ; preds = %dec_label_pc_cabc
  store i32 %v4_cadc, i32* %r2.global-to-local, align 4
  store i32 %v1_cae0, i32* %r3.global-to-local, align 4
  store i1 %v2_cae4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_cae4, label %dec_label_pc_cb30, label %dec_label_pc_caec

dec_label_pc_caec:                                ; preds = %dec_label_pc_cadc
  store i1 %v2_caec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_caec, label %dec_label_pc_ca4c, label %dec_label_pc_caf4

dec_label_pc_caf4:                                ; preds = %dec_label_pc_caec
  %v0_caf4 = load i32, i32* @r7, align 4
  store i32 %v0_caf4, i32* %r0.global-to-local, align 4
  %v1_caf8 = call i32 @close(i32 %v0_caf4)
  store i32 %v1_caf8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c8f4

dec_label_pc_cb00:                                ; preds = %dec_label_pc_ca4c
  %v0_cb00 = load i32, i32* @r7, align 4
  store i32 %v0_cb00, i32* %r0.global-to-local, align 4
  %v1_cb04 = call i32 @close(i32 %v0_cb00)
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_c91c = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_c91c, i32* %r0.global-to-local, align 4
  %v2_c920 = icmp eq i32 %v3_c91c, -1
  store i1 %v2_c920, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_c91c, i32* @r7, align 4
  br i1 %v2_c920, label %dec_label_pc_cd80, label %dec_label_pc_c92c

dec_label_pc_cb0c:                                ; preds = %dec_label_pc_c8a0
  store i32 %v3_c888, i32* %r0.global-to-local, align 4
  %v1_cb10 = call i32 @close(i32 %v3_c888)
  store i32 %v1_cb10, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_cb14

dec_label_pc_cb14:                                ; preds = %dec_label_pc_ca5c, %dec_label_pc_c6b8, %dec_label_pc_cb0c
  %v29_cb18 = phi i32 [ -1, %dec_label_pc_c6b8 ], [ %v1_cb10, %dec_label_pc_cb0c ], [ 0, %dec_label_pc_ca5c ]
  store i32 %v3_c6b8, i32* %r4.global-to-local, align 4
  ret i32 %v29_cb18

dec_label_pc_cb1c:                                ; preds = %dec_label_pc_c9e0
  %v0_cb1c = call i32 @function_f508()
  %v1_cb1c = trunc i32 %v0_cb1c to i8
  store i32 %v0_cb1c, i32* %r0.global-to-local, align 4
  %v4_cb20 = sdiv i32 %v0_cb1c, 256
  store i32 %v4_cb20, i32* %r3.global-to-local, align 4
  %v1_cb24 = trunc i32 %v4_cb20 to i8
  br label %dec_label_pc_ca10

dec_label_pc_cb30:                                ; preds = %dec_label_pc_cadc
  %v3_cb30 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_cb30, i32* %r4.global-to-local, align 4
  store i32 %v4_c6d8, i32* %r2.global-to-local, align 4
  %v3_cb38 = mul i32 %v3_cb30, 16
  store i32 %v3_cb38, i32* %ip.global-to-local, align 4
  %v3_cb3c = add i32 %v3_cb38, %v4_c6d8
  %v4_cb3c = inttoptr i32 %v3_cb3c to i32*
  store i32 %storemerge35, i32* %v4_cb3c, align 4
  %v0_cb40 = load i32, i32* @r6, align 4
  %v1_cb40 = add i32 %v0_cb40, 4
  %v2_cb40 = inttoptr i32 %v1_cb40 to i32*
  %v3_cb40 = load i32, i32* %v2_cb40, align 4
  %v1_cb4c = and i32 %v3_cb40, 65280
  store i32 %v1_cb4c, i32* %r1.global-to-local, align 4
  %v3_cb50 = mul i32 %v3_cb40, 16777216
  store i32 %v4_c6d8, i32* %r0.global-to-local, align 4
  %v4_cb5c = mul nuw nsw i32 %v1_cb4c, 256
  %v5_cb5c = or i32 %v4_cb5c, %v3_cb50
  store i32 %v5_cb5c, i32* %r2.global-to-local, align 4
  %v1_cb60 = load i32, i32* %ip.global-to-local, align 4
  %v2_cb60 = add i32 %v1_cb60, %v4_c6d8
  store i32 %v2_cb60, i32* %ip.global-to-local, align 4
  %v2_cb64 = call i32 @llvm.bswap.i32(i32 %v3_cb40)
  store i32 %v2_cb64, i32* %r3.global-to-local, align 4
  %v2_cb68 = add i32 %v2_cb60, 4
  %v3_cb68 = inttoptr i32 %v2_cb68 to i32*
  store i32 %v2_cb64, i32* %v3_cb68, align 4
  %v0_cb6c = load i32, i32* @r6, align 4
  %v1_cb6c = add i32 %v0_cb6c, 8
  %v2_cb6c = inttoptr i32 %v1_cb6c to i32*
  %v3_cb6c = load i32, i32* %v2_cb6c, align 4
  store i32 %v3_cb6c, i32* %r0.global-to-local, align 4
  %v1_cb74 = and i32 %v3_cb6c, 65280
  store i32 %v1_cb74, i32* %r1.global-to-local, align 4
  %v3_cb78 = mul i32 %v3_cb6c, 16777216
  %v4_cb80 = mul nuw nsw i32 %v1_cb74, 256
  %v5_cb80 = or i32 %v4_cb80, %v3_cb78
  store i32 %v5_cb80, i32* %r2.global-to-local, align 4
  %v2_cb88 = call i32 @llvm.bswap.i32(i32 %v3_cb6c)
  store i32 %v2_cb88, i32* %r3.global-to-local, align 4
  %v1_cb8c = load i32, i32* %ip.global-to-local, align 4
  %v2_cb8c = add i32 %v1_cb8c, 8
  %v3_cb8c = inttoptr i32 %v2_cb8c to i32*
  store i32 %v2_cb88, i32* %v3_cb8c, align 4
  %v0_cb90 = load i32, i32* @r6, align 4
  %v1_cb90 = inttoptr i32 %v0_cb90 to i32*
  %v2_cb90 = load i32, i32* %v1_cb90, align 4
  %v3_cb94 = udiv i32 %v2_cb90, 65536
  store i32 %v3_cb94, i32* %r2.global-to-local, align 4
  %v3_cb986 = udiv i32 %v2_cb90, 16777216
  store i32 %v3_cb986, i32* %r1.global-to-local, align 4
  %v0_cb9c = load i32, i32* @r5, align 4
  %v3_cb9c = sdiv i32 %v0_cb9c, 256
  store i32 %v3_cb9c, i32* %r3.global-to-local, align 4
  %v1_cba0 = trunc i32 %v3_cb9c to i8
  %v2_cba0 = load i32, i32* %ip.global-to-local, align 4
  %v3_cba0 = add i32 %v2_cba0, 15
  %v4_cba0 = inttoptr i32 %v3_cba0 to i8*
  store i8 %v1_cba0, i8* %v4_cba0, align 1
  %v0_cba4 = load i32, i32* %r1.global-to-local, align 4
  %v1_cba4 = trunc i32 %v0_cba4 to i8
  %v2_cba4 = load i32, i32* %ip.global-to-local, align 4
  %v3_cba4 = add i32 %v2_cba4, 13
  %v4_cba4 = inttoptr i32 %v3_cba4 to i8*
  store i8 %v1_cba4, i8* %v4_cba4, align 1
  %v0_cba8 = load i32, i32* %r2.global-to-local, align 4
  %v1_cba8 = trunc i32 %v0_cba8 to i8
  %v2_cba8 = load i32, i32* %ip.global-to-local, align 4
  %v3_cba8 = add i32 %v2_cba8, 12
  %v4_cba8 = inttoptr i32 %v3_cba8 to i8*
  store i8 %v1_cba8, i8* %v4_cba8, align 1
  %v0_cbac = load i32, i32* @r5, align 4
  %v1_cbac = trunc i32 %v0_cbac to i8
  %v2_cbac = load i32, i32* %ip.global-to-local, align 4
  %v3_cbac = add i32 %v2_cbac, 14
  %v4_cbac = inttoptr i32 %v3_cbac to i8*
  store i8 %v1_cbac, i8* %v4_cbac, align 1
  %v0_cbb0 = load i32, i32* @sl, align 4
  store i32 %v0_cbb0, i32* %r0.global-to-local, align 4
  %v1_cbb4 = call i32* @malloc(i32 %v0_cbb0)
  %v3_cbb4 = ptrtoint i32* %v1_cbb4 to i32
  store i32 %v3_cbb4, i32* %r0.global-to-local, align 4
  store i32 %v4_c6e8, i32* %r1.global-to-local, align 4
  %v3_cbbc = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_cbbc, i32* %r2.global-to-local, align 4
  %v2_cbc0 = load i32, i32* %r4.global-to-local, align 4
  %v5_cbc0 = mul i32 %v2_cbc0, 4
  %v6_cbc0 = add i32 %v5_cbc0, %v4_c6e8
  %v7_cbc0 = inttoptr i32 %v6_cbc0 to i32*
  store i32 %v3_cbb4, i32* %v7_cbc0, align 4
  %v0_cbc4 = load i32, i32* %r1.global-to-local, align 4
  %v1_cbc4 = load i32, i32* %r2.global-to-local, align 4
  %v4_cbc4 = mul i32 %v1_cbc4, 4
  %v5_cbc4 = add i32 %v4_cbc4, %v0_cbc4
  %v6_cbc4 = inttoptr i32 %v5_cbc4 to i32*
  %v7_cbc4 = load i32, i32* %v6_cbc4, align 4
  store i32 %v7_cbc4, i32* @r4, align 4
  %v1_cbc8 = inttoptr i32 %v7_cbc4 to i8*
  %v2_cbc8 = load i8, i8* %v1_cbc8, align 1
  %tmp120 = urem i8 %v2_cbc8, 16
  %v1_cbcc = zext i8 %tmp120 to i32
  %v1_cbd0 = or i32 %v1_cbcc, 64
  store i32 %v1_cbd0, i32* %r3.global-to-local, align 4
  %v1_cbd4 = trunc i32 %v1_cbd0 to i8
  store i8 %v1_cbd4, i8* %v1_cbc8, align 1
  %v0_cbd8 = load i32, i32* @sl, align 4
  %v3_cbd8 = mul i32 %v0_cbd8, 65536
  store i32 %v3_cbd8, i32* %r2.global-to-local, align 4
  %v0_cbdc = load i32, i32* @r4, align 4
  %v1_cbdc = inttoptr i32 %v0_cbdc to i8*
  %v2_cbdc = load i8, i8* %v1_cbdc, align 1
  %v1_cbe4 = urem i32 %v0_cbd8, 256
  %tmp91 = udiv i32 %v0_cbd8, 256
  %v3_cbe8 = urem i32 %tmp91, 256
  %v1_cbec = and i8 %v2_cbdc, -16
  %v4_cbf0 = mul nuw nsw i32 %v1_cbe4, 256
  %v5_cbf0 = or i32 %v4_cbf0, %v3_cbe8
  store i32 %v5_cbf0, i32* %r2.global-to-local, align 4
  %v1_cbf4 = or i8 %v1_cbec, 5
  store i32 %v1_c768, i32* %ip.global-to-local, align 4
  store i32 %v1_cbe4, i32* %r3.global-to-local, align 4
  store i8 %v1_cbf4, i8* %v1_cbdc, align 1
  %v0_cc04 = load i32, i32* %r3.global-to-local, align 4
  %v1_cc04 = trunc i32 %v0_cc04 to i8
  %v2_cc04 = load i32, i32* @r4, align 4
  %v3_cc04 = add i32 %v2_cc04, 3
  %v4_cc04 = inttoptr i32 %v3_cc04 to i8*
  store i8 %v1_cc04, i8* %v4_cc04, align 1
  store i32 %v4_cc08, i32* %r3.global-to-local, align 4
  %v0_cc0c = load i32, i32* %ip.global-to-local, align 4
  %v2_cc0c = icmp eq i32 %v0_cc0c, 0
  store i1 %v2_cc0c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v4_ca38, i32* %r0.global-to-local, align 4
  store i32 %v3_ca40, i32* %r1.global-to-local, align 4
  %v2_cc18 = load i32, i32* @r4, align 4
  %v3_cc18 = add i32 %v2_cc18, 1
  %v4_cc18 = inttoptr i32 %v3_cc18 to i8*
  store i8 %v1_cc18, i8* %v4_cc18, align 1
  store i32 %v4_cc1c, i32* %ip.global-to-local, align 4
  %v0_cc20 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_cc20, label %bb93, label %bb92

bb92:                                             ; preds = %dec_label_pc_cb30
  store i32 64, i32* %r3.global-to-local, align 4
  br label %bb93

bb93:                                             ; preds = %dec_label_pc_cb30, %bb92
  %v0_cc24 = load i32, i32* %r2.global-to-local, align 4
  %v1_cc24 = trunc i32 %v0_cc24 to i8
  %v2_cc24 = load i32, i32* @r4, align 4
  %v3_cc24 = add i32 %v2_cc24, 2
  %v4_cc24 = inttoptr i32 %v3_cc24 to i8*
  store i8 %v1_cc24, i8* %v4_cc24, align 1
  %v0_cc28 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_cc28, label %.thread10, label %bb94

bb94:                                             ; preds = %bb93
  %v1_cc28 = load i32, i32* %r3.global-to-local, align 4
  %v2_cc28 = trunc i32 %v1_cc28 to i8
  %v3_cc28 = load i32, i32* @r4, align 4
  %v4_cc28 = add i32 %v3_cc28, 6
  %v5_cc28 = inttoptr i32 %v4_cc28 to i8*
  store i8 %v2_cc28, i8* %v5_cc28, align 1
  %v0_cc2c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_cc2c.pr, label %.thread10, label %bb95

bb95:                                             ; preds = %bb94
  store i32 0, i32* %r2.global-to-local, align 4
  br label %.thread10

.thread10:                                        ; preds = %bb93, %bb94, %bb95
  store i32 6, i32* %r3.global-to-local, align 4
  %v0_cc34 = load i32, i32* %ip.global-to-local, align 4
  %v1_cc34 = trunc i32 %v0_cc34 to i8
  %v2_cc34 = load i32, i32* @r4, align 4
  %v3_cc34 = add i32 %v2_cc34, 8
  %v4_cc34 = inttoptr i32 %v3_cc34 to i8*
  store i8 %v1_cc34, i8* %v4_cc34, align 1
  %v0_cc38 = load i32, i32* %r3.global-to-local, align 4
  %v1_cc38 = trunc i32 %v0_cc38 to i8
  %v2_cc38 = load i32, i32* @r4, align 4
  %v3_cc38 = add i32 %v2_cc38, 9
  %v4_cc38 = inttoptr i32 %v3_cc38 to i8*
  store i8 %v1_cc38, i8* %v4_cc38, align 1
  %v0_cc3c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_cc3c, label %bb97, label %bb96

bb96:                                             ; preds = %.thread10
  %v1_cc3c = load i32, i32* %r2.global-to-local, align 4
  %v2_cc3c = trunc i32 %v1_cc3c to i8
  %v3_cc3c = load i32, i32* @r4, align 4
  %v4_cc3c = add i32 %v3_cc3c, 7
  %v5_cc3c = inttoptr i32 %v4_cc3c to i8*
  store i8 %v2_cc3c, i8* %v5_cc3c, align 1
  br label %bb97

bb97:                                             ; preds = %.thread10, %bb96
  %v2_cc44 = load i32, i32* @global_var_1bd28.110, align 4
  store i32 %v2_cc44, i32* %r3.global-to-local, align 4
  %v1_cc48 = load i32, i32* @r4, align 4
  %v2_cc48 = add i32 %v1_cc48, 12
  %v3_cc48 = inttoptr i32 %v2_cc48 to i32*
  store i32 %v2_cc44, i32* %v3_cc48, align 4
  %v0_cc4c = load i32, i32* %r0.global-to-local, align 4
  %v1_cc4c = trunc i32 %v0_cc4c to i8
  %v2_cc4c = load i32, i32* @r4, align 4
  %v3_cc4c = add i32 %v2_cc4c, 4
  %v4_cc4c = inttoptr i32 %v3_cc4c to i8*
  store i8 %v1_cc4c, i8* %v4_cc4c, align 1
  %v3_cc50 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_cc50, i32* %r2.global-to-local, align 4
  store i32 %v4_c6d8, i32* %r0.global-to-local, align 4
  %v4_cc58 = mul i32 %v3_cc50, 16
  %v5_cc58 = add i32 %v4_cc58, %v4_c6d8
  %v6_cc58 = inttoptr i32 %v5_cc58 to i32*
  %v7_cc58 = load i32, i32* %v6_cc58, align 4
  store i32 %v7_cc58, i32* %r3.global-to-local, align 4
  %v0_cc5c = load i32, i32* %r1.global-to-local, align 4
  %v1_cc5c = trunc i32 %v0_cc5c to i8
  %v2_cc5c = load i32, i32* @r4, align 4
  %v3_cc5c = add i32 %v2_cc5c, 5
  %v4_cc5c = inttoptr i32 %v3_cc5c to i8*
  store i8 %v1_cc5c, i8* %v4_cc5c, align 1
  %v0_cc60 = load i32, i32* %r3.global-to-local, align 4
  %v1_cc60 = load i32, i32* @r4, align 4
  %v2_cc60 = add i32 %v1_cc60, 16
  %v3_cc60 = inttoptr i32 %v2_cc60 to i32*
  store i32 %v0_cc60, i32* %v3_cc60, align 4
  %v0_cc64 = load i32, i32* %r2.global-to-local, align 4
  %v3_cc64 = mul i32 %v0_cc64, 16
  %v1_cc68 = load i32, i32* %r0.global-to-local, align 4
  %v2_cc68 = add i32 %v1_cc68, %v3_cc64
  store i32 %v2_cc68, i32* %r2.global-to-local, align 4
  %v1_cc6c = add i32 %v2_cc68, 13
  %v2_cc6c = inttoptr i32 %v1_cc6c to i8*
  %v3_cc6c = load i8, i8* %v2_cc6c, align 1
  %v4_cc6c = zext i8 %v3_cc6c to i32
  store i32 %v4_cc6c, i32* %r1.global-to-local, align 4
  %v1_cc70 = add i32 %v2_cc68, 12
  %v2_cc70 = inttoptr i32 %v1_cc70 to i8*
  %v3_cc70 = load i8, i8* %v2_cc70, align 1
  %v4_cc70 = zext i8 %v3_cc70 to i32
  %v4_cc74 = mul nuw nsw i32 %v4_cc6c, 256
  %v5_cc74 = or i32 %v4_cc70, %v4_cc74
  store i32 %v5_cc74, i32* %r3.global-to-local, align 4
  %v2_cc78 = load i32, i32* @r4, align 4
  %v3_cc78 = add i32 %v2_cc78, 20
  %v4_cc78 = inttoptr i32 %v3_cc78 to i8*
  store i8 %v3_cc70, i8* %v4_cc78, align 1
  %v0_cc7c = load i32, i32* @r4, align 4
  %v1_cc7c = add i32 %v0_cc7c, 20
  store i32 %v1_cc7c, i32* @r6, align 4
  %v0_cc80 = load i32, i32* %r3.global-to-local, align 4
  %v3_cc80 = sdiv i32 %v0_cc80, 256
  store i32 %v3_cc80, i32* %r3.global-to-local, align 4
  %v1_cc84 = trunc i32 %v3_cc80 to i8
  %v3_cc84 = add i32 %v0_cc7c, 21
  %v4_cc84 = inttoptr i32 %v3_cc84 to i8*
  store i8 %v1_cc84, i8* %v4_cc84, align 1
  %v0_cc88 = load i32, i32* @r6, align 4
  %v1_cc88 = add i32 %v0_cc88, 13
  %v2_cc88 = inttoptr i32 %v1_cc88 to i8*
  %v3_cc88 = load i8, i8* %v2_cc88, align 1
  %v4_cc88 = zext i8 %v3_cc88 to i32
  store i32 %v4_cc88, i32* %r3.global-to-local, align 4
  %v0_cc8c = load i32, i32* %r2.global-to-local, align 4
  %v1_cc8c = add i32 %v0_cc8c, 8
  %v2_cc8c = inttoptr i32 %v1_cc8c to i32*
  %v3_cc8c = load i32, i32* %v2_cc8c, align 4
  store i32 %v3_cc8c, i32* %r1.global-to-local, align 4
  %v1_cc90 = or i32 %v4_cc88, 1
  store i32 %v1_cc90, i32* %r3.global-to-local, align 4
  %v1_cc94 = add i32 %v0_cc8c, 15
  %v2_cc94 = inttoptr i32 %v1_cc94 to i8*
  %v3_cc94 = load i8, i8* %v2_cc94, align 1
  %v4_cc94 = zext i8 %v3_cc94 to i32
  store i32 %v4_cc94, i32* %ip.global-to-local, align 4
  %v1_cc98 = add i32 %v0_cc8c, 14
  %v2_cc98 = inttoptr i32 %v1_cc98 to i8*
  %v3_cc98 = load i8, i8* %v2_cc98, align 1
  %v4_cc98 = zext i8 %v3_cc98 to i32
  store i32 %v4_cc98, i32* %r0.global-to-local, align 4
  %v2_cc9c = add i32 %v0_cc88, 4
  %v3_cc9c = inttoptr i32 %v2_cc9c to i32*
  store i32 %v3_cc8c, i32* %v3_cc9c, align 4
  %v0_cca0 = load i32, i32* %r2.global-to-local, align 4
  %v1_cca0 = add i32 %v0_cca0, 4
  %v2_cca0 = inttoptr i32 %v1_cca0 to i32*
  %v3_cca0 = load i32, i32* %v2_cca0, align 4
  store i32 %v3_cca0, i32* %lr.global-to-local, align 4
  %v0_cca4 = load i32, i32* %r3.global-to-local, align 4
  %v1_cca4 = trunc i32 %v0_cca4 to i8
  %v2_cca4 = load i32, i32* @r6, align 4
  %v3_cca4 = add i32 %v2_cca4, 13
  %v4_cca4 = inttoptr i32 %v3_cca4 to i8*
  store i8 %v1_cca4, i8* %v4_cca4, align 1
  %v0_cca8 = load i32, i32* @r6, align 4
  %v1_cca8 = add i32 %v0_cca8, 12
  %v2_cca8 = inttoptr i32 %v1_cca8 to i8*
  %v3_cca8 = load i8, i8* %v2_cca8, align 1
  %v4_cca8 = zext i8 %v3_cca8 to i32
  store i32 %v4_cca8, i32* %r2.global-to-local, align 4
  %v1_ccac = add i32 %v0_cca8, 13
  %v2_ccac = inttoptr i32 %v1_ccac to i8*
  %v3_ccac = load i8, i8* %v2_ccac, align 1
  %v4_ccac = zext i8 %v3_ccac to i32
  %v0_ccb0 = load i32, i32* %r0.global-to-local, align 4
  %v1_ccb0 = load i32, i32* %ip.global-to-local, align 4
  %v4_ccb0 = mul i32 %v1_ccb0, 256
  %v5_ccb0 = or i32 %v4_ccb0, %v0_ccb0
  store i32 %v5_ccb0, i32* %r0.global-to-local, align 4
  %tmp121 = urem i8 %v3_cca8, 16
  %v1_ccb4 = zext i8 %tmp121 to i32
  %v3_ccb8 = sdiv i32 %v5_ccb0, 256
  store i32 %v3_ccb8, i32* %r1.global-to-local, align 4
  %v1_ccbc = or i32 %v1_ccb4, 128
  store i32 %v1_ccbc, i32* %r2.global-to-local, align 4
  %v1_ccc0 = or i32 %v4_ccac, 16
  store i32 %v1_ccc0, i32* %r3.global-to-local, align 4
  %v1_ccc4 = trunc i32 %v3_ccb8 to i8
  %v3_ccc4 = add i32 %v0_cca8, 3
  %v4_ccc4 = inttoptr i32 %v3_ccc4 to i8*
  store i8 %v1_ccc4, i8* %v4_ccc4, align 1
  %v0_ccc8 = load i32, i32* %r2.global-to-local, align 4
  %v1_ccc8 = trunc i32 %v0_ccc8 to i8
  %v2_ccc8 = load i32, i32* @r6, align 4
  %v3_ccc8 = add i32 %v2_ccc8, 12
  %v4_ccc8 = inttoptr i32 %v3_ccc8 to i8*
  store i8 %v1_ccc8, i8* %v4_ccc8, align 1
  %v0_cccc = load i32, i32* %r3.global-to-local, align 4
  %v1_cccc = trunc i32 %v0_cccc to i8
  %v2_cccc = load i32, i32* @r6, align 4
  %v3_cccc = add i32 %v2_cccc, 13
  %v4_cccc = inttoptr i32 %v3_cccc to i8*
  store i8 %v1_cccc, i8* %v4_cccc, align 1
  %v0_ccd0 = load i32, i32* %lr.global-to-local, align 4
  %v1_ccd0 = load i32, i32* @r6, align 4
  %v2_ccd0 = add i32 %v1_ccd0, 8
  %v3_ccd0 = inttoptr i32 %v2_ccd0 to i32*
  store i32 %v0_ccd0, i32* %v3_ccd0, align 4
  %v0_ccd4 = load i32, i32* %r0.global-to-local, align 4
  %v1_ccd4 = trunc i32 %v0_ccd4 to i8
  %v2_ccd4 = load i32, i32* @r6, align 4
  %v3_ccd4 = add i32 %v2_ccd4, 2
  %v4_ccd4 = inttoptr i32 %v3_ccd4 to i8*
  store i8 %v1_ccd4, i8* %v4_ccd4, align 1
  %v0_ccd8 = call i32 @function_f508()
  %v1_ccd8 = trunc i32 %v0_ccd8 to i8
  store i32 %v0_ccd8, i32* %r0.global-to-local, align 4
  store i32 %v1_c7a0, i32* %r1.global-to-local, align 4
  %v0_cce0 = load i32, i32* @r6, align 4
  %v1_cce0 = add i32 %v0_cce0, 13
  %v2_cce0 = inttoptr i32 %v1_cce0 to i8*
  %v3_cce0 = load i8, i8* %v2_cce0, align 1
  %v4_cce0 = zext i8 %v3_cce0 to i32
  store i32 %v1_cce4, i32* %r2.global-to-local, align 4
  %v1_cce8 = and i32 %v4_cce0, 223
  %v5_ccec = or i32 %v1_cce8, %v4_ccec
  store i32 %v5_ccec, i32* %r3.global-to-local, align 4
  %v1_ccf0 = trunc i32 %v5_ccec to i8
  store i8 %v1_ccf0, i8* %v2_cce0, align 1
  store i32 %v1_c7c0, i32* %ip.global-to-local, align 4
  %v0_ccf8 = load i32, i32* @r6, align 4
  %v1_ccf8 = add i32 %v0_ccf8, 13
  %v2_ccf8 = inttoptr i32 %v1_ccf8 to i8*
  %v3_ccf8 = load i8, i8* %v2_ccf8, align 1
  %v4_ccf8 = zext i8 %v3_ccf8 to i32
  store i32 %v1_ccfc, i32* %r3.global-to-local, align 4
  %v1_cd00 = and i32 %v4_ccf8, 239
  %v5_cd04 = or i32 %v1_cd00, %v4_cd04
  store i32 %v5_cd04, i32* %r2.global-to-local, align 4
  %v1_cd08 = trunc i32 %v5_cd04 to i8
  store i8 %v1_cd08, i8* %v2_ccf8, align 1
  store i32 %v1_c7e0, i32* %r1.global-to-local, align 4
  %v0_cd10 = load i32, i32* @r6, align 4
  %v1_cd10 = add i32 %v0_cd10, 13
  %v2_cd10 = inttoptr i32 %v1_cd10 to i8*
  %v3_cd10 = load i8, i8* %v2_cd10, align 1
  %v4_cd10 = zext i8 %v3_cd10 to i32
  store i32 %v1_cd14, i32* %r2.global-to-local, align 4
  %v1_cd18 = and i32 %v4_cd10, 247
  %v5_cd1c = or i32 %v1_cd18, %v4_cd1c
  store i32 %v5_cd1c, i32* %r3.global-to-local, align 4
  %v1_cd20 = trunc i32 %v5_cd1c to i8
  store i8 %v1_cd20, i8* %v2_cd10, align 1
  store i32 %v1_c800, i32* %ip.global-to-local, align 4
  %v0_cd28 = load i32, i32* @r6, align 4
  %v1_cd28 = add i32 %v0_cd28, 13
  %v2_cd28 = inttoptr i32 %v1_cd28 to i8*
  %v3_cd28 = load i8, i8* %v2_cd28, align 1
  %v4_cd28 = zext i8 %v3_cd28 to i32
  store i32 %v1_cd2c, i32* %r3.global-to-local, align 4
  %v1_cd30 = and i32 %v4_cd28, 251
  %v5_cd34 = or i32 %v1_cd30, %v4_cd34
  store i32 %v5_cd34, i32* %r2.global-to-local, align 4
  %v1_cd38 = trunc i32 %v5_cd34 to i8
  store i8 %v1_cd38, i8* %v2_cd28, align 1
  store i32 %v1_c820, i32* %r1.global-to-local, align 4
  %v0_cd40 = load i32, i32* @r6, align 4
  %v1_cd40 = add i32 %v0_cd40, 13
  %v2_cd40 = inttoptr i32 %v1_cd40 to i8*
  %v3_cd40 = load i8, i8* %v2_cd40, align 1
  %v4_cd40 = zext i8 %v3_cd40 to i32
  store i32 %v1_cd44, i32* %r2.global-to-local, align 4
  %v1_cd48 = and i32 %v4_cd40, 253
  %v4_cd4c = or i32 %v1_cd48, %v3_cd4c
  store i32 %v4_cd4c, i32* %r3.global-to-local, align 4
  %v1_cd50 = trunc i32 %v4_cd4c to i8
  store i8 %v1_cd50, i8* %v2_cd40, align 1
  %v0_cd54 = load i32, i32* @r6, align 4
  %v1_cd54 = add i32 %v0_cd54, 13
  %v2_cd54 = inttoptr i32 %v1_cd54 to i8*
  %v3_cd54 = load i8, i8* %v2_cd54, align 1
  %v4_cd54 = zext i8 %v3_cd54 to i32
  %v0_cd58 = load i32, i32* @r8, align 4
  %v1_cd58 = urem i32 %v0_cd58, 2
  %v1_cd5c = and i32 %v4_cd54, 254
  store i32 %v1_cd5c, i32* %r2.global-to-local, align 4
  %v4_cd6037 = udiv i32 %v0_ccd8, 256
  %v2_cd64 = or i32 %v1_cd5c, %v1_cd58
  store i32 %v2_cd64, i32* %r3.global-to-local, align 4
  %v1_cd68 = trunc i32 %v4_cd6037 to i8
  %v3_cd68 = add i32 %v0_cd54, 15
  %v4_cd68 = inttoptr i32 %v3_cd68 to i8*
  store i8 %v1_cd68, i8* %v4_cd68, align 1
  %v3_cd6c = load i32, i32* @r6, align 4
  %v4_cd6c = add i32 %v3_cd6c, 14
  %v5_cd6c = inttoptr i32 %v4_cd6c to i8*
  store i8 %v1_ccd8, i8* %v5_cd6c, align 1
  %v0_cd70 = load i32, i32* %r3.global-to-local, align 4
  %v1_cd70 = trunc i32 %v0_cd70 to i8
  %v2_cd70 = load i32, i32* @r6, align 4
  %v3_cd70 = add i32 %v2_cd70, 13
  %v4_cd70 = inttoptr i32 %v3_cd70 to i8*
  store i8 %v1_cd70, i8* %v4_cd70, align 1
  %v0_cd74 = load i32, i32* @r4, align 4
  %v1_cd74 = add i32 %v0_cd74, 40
  store i32 %v1_cd74, i32* %r0.global-to-local, align 4
  %v0_cd78 = load i32, i32* @sb, align 4
  store i32 %v0_cd78, i32* @r1, align 4
  %v1_cd7c = inttoptr i32 %v1_cd74 to i8*
  %v2_cd7c = call i32 @function_f688(i8* %v1_cd7c)
  store i32 %v2_cd7c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_cd80

dec_label_pc_cd80:                                ; preds = %dec_label_pc_c8f4, %dec_label_pc_cb00, %bb97
  %v3_cd80 = load i32, i32* %stack_var_-40, align 4
  %v1_cd84 = add i32 %v3_cd80, 1
  store i32 %v1_cd84, i32* %r3.global-to-local, align 4
  %v1_cd88 = load i32, i32* @fp, align 4
  %v9_cd88 = icmp eq i32 %v1_cd84, %v1_cd88
  store i1 %v9_cd88, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_cd84, i32* %stack_var_-40, align 4
  %v5_cd90 = icmp slt i32 %v1_cd84, %v1_cd88
  br i1 %v5_cd90, label %dec_label_pc_c8f4, label %dec_label_pc_cd94

dec_label_pc_cd94:                                ; preds = %dec_label_pc_cd80, %.thread27
  %v0_cd9c21 = phi i32 [ %v0_c8c8, %.thread27 ], [ %v1_cd88, %dec_label_pc_cd80 ]
  %v0_cd94 = load i32, i32* @sb, align 4
  %v1_cd94 = add i32 %v0_cd94, 40
  store i32 %v1_cd94, i32* @sl, align 4
  %v1_cd98 = add i32 %v0_cd94, 20
  store i32 %v1_cd98, i32* @r7, align 4
  %v2_cf14 = icmp eq i32 %v1_c878, 0
  %v3_cdd0 = icmp eq i32 %v3_c8d0, 65535
  br label %dec_label_pc_cd9c

dec_label_pc_cd9c:                                ; preds = %dec_label_pc_cdf8, %dec_label_pc_cd94
  %v0_cd9c = phi i32 [ %v1_ced8, %dec_label_pc_cdf8 ], [ %v0_cd9c21, %dec_label_pc_cd94 ]
  %v2_cd9c = icmp eq i32 %v0_cd9c, 0
  store i1 %v2_cd9c, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r1.global-to-local, align 4
  %tmp98 = icmp slt i32 %v0_cd9c, 1
  br label %dec_label_pc_cda4

dec_label_pc_cda4:                                ; preds = %dec_label_pc_cda4, %dec_label_pc_cd9c
  br i1 %tmp98, label %dec_label_pc_cda4, label %dec_label_pc_cda8

dec_label_pc_cda8:                                ; preds = %dec_label_pc_cda4
  %v0_cda8 = load i32, i32* @r7, align 4
  %tmp99 = mul i32 %v0_cda8, 256
  %v1_cdb0 = and i32 %tmp99, 65280
  %tmp100 = udiv i32 %v0_cda8, 256
  %v4_cdb4 = urem i32 %tmp100, 256
  %v5_cdb4 = or i32 %v4_cdb4, %v1_cdb0
  store i32 %v5_cdb4, i32* @r8, align 4
  store i32 %v4_c6e8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 65536, i32* %r3.global-to-local, align 4
  store i32 %v3_c8d0, i32* %ip.global-to-local, align 4
  %v7_cdc8 = load i32, i32* %v2_c6e8, align 4
  store i32 %v7_cdc8, i32* @r4, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i1 %v3_cdd0, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-40, align 4
  store i32 0, i32* @r6, align 4
  %v1_cddc = add i32 %v7_cdc8, 20
  store i32 %v1_cddc, i32* @r5, align 4
  br i1 %v3_cdd0, label %dec_label_pc_cf04, label %dec_label_pc_cde4

dec_label_pc_cde4:                                ; preds = %dec_label_pc_cee4, %dec_label_pc_cda8
  %v0_cdf0 = phi i32 [ %v7_cef0, %dec_label_pc_cee4 ], [ %v7_cdc8, %dec_label_pc_cda8 ]
  store i1 %v2_cf14, i1* %cpsr_z.global-to-local, align 1
  %v0_cdec = load i32, i32* @sb, align 4
  store i32 %v0_cdec, i32* @r1, align 4
  %v1_cdf0 = add i32 %v0_cdf0, 40
  store i32 %v1_cdf0, i32* %r0.global-to-local, align 4
  br i1 %v2_cf14, label %dec_label_pc_cdf8, label %dec_label_pc_cf28

dec_label_pc_cdf8:                                ; preds = %dec_label_pc_cde4, %dec_label_pc_cf04, %dec_label_pc_cf28
  %v2_cdf8 = phi i32 [ %v0_cdf0, %dec_label_pc_cde4 ], [ %v0_cf1c, %dec_label_pc_cf04 ], [ %v2_cdf8.pre, %dec_label_pc_cf28 ]
  %v0_cdf8 = load i32, i32* @r6, align 4
  %v1_cdf8 = trunc i32 %v0_cdf8 to i8
  %v3_cdf8 = add i32 %v2_cdf8, 10
  %v4_cdf8 = inttoptr i32 %v3_cdf8 to i8*
  store i8 %v1_cdf8, i8* %v4_cdf8, align 1
  %v0_cdfc = load i32, i32* @r6, align 4
  %v1_cdfc = trunc i32 %v0_cdfc to i8
  %v2_cdfc = load i32, i32* @r4, align 4
  %v3_cdfc = add i32 %v2_cdfc, 11
  %v4_cdfc = inttoptr i32 %v3_cdfc to i8*
  store i8 %v1_cdfc, i8* %v4_cdfc, align 1
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_ce04 = load i32, i32* @r4, align 4
  store i32 %v0_ce04, i32* @r0, align 4
  %v2_ce08 = call i32 @function_ddf4(i32 %v0_ce04, i32 20)
  %v3_ce08 = trunc i32 %v2_ce08 to i8
  store i32 %v2_ce08, i32* %r0.global-to-local, align 4
  %v3_ce0c = load i32, i32* %stack_var_-40, align 4
  store i32 %v4_c6d8, i32* %r2.global-to-local, align 4
  %v3_ce14 = mul i32 %v3_ce0c, 16
  %v2_ce18 = add i32 %v3_ce14, %v4_c6d8
  store i32 %v2_ce18, i32* %r1.global-to-local, align 4
  %v1_ce1c = add i32 %v2_ce18, 4
  %v2_ce1c = inttoptr i32 %v1_ce1c to i32*
  %v3_ce1c = load i32, i32* %v2_ce1c, align 4
  %v3_ce20 = mul i32 %v3_ce1c, 65536
  store i32 %v3_ce20, i32* %ip.global-to-local, align 4
  %tmp101 = mul i32 %v3_ce1c, 256
  %v1_ce28 = and i32 %tmp101, 65280
  %tmp102 = udiv i32 %v3_ce1c, 256
  %v4_ce2c = urem i32 %tmp102, 256
  %v5_ce2c = or i32 %v4_ce2c, %v1_ce28
  store i32 %v5_ce2c, i32* %r2.global-to-local, align 4
  %v1_ce30 = add i32 %v3_ce1c, 1
  store i32 %v1_ce30, i32* %r3.global-to-local, align 4
  store i32 %v1_ce30, i32* %v2_ce1c, align 4
  %v0_ce38 = load i32, i32* %r2.global-to-local, align 4
  %v1_ce38 = load i32, i32* @r5, align 4
  %v2_ce38 = add i32 %v1_ce38, 4
  %v3_ce38 = inttoptr i32 %v2_ce38 to i32*
  store i32 %v0_ce38, i32* %v3_ce38, align 4
  %v0_ce3c = load i32, i32* %r1.global-to-local, align 4
  %v1_ce3c = add i32 %v0_ce3c, 8
  %v2_ce3c = inttoptr i32 %v1_ce3c to i32*
  %v3_ce3c = load i32, i32* %v2_ce3c, align 4
  %tmp103 = mul i32 %v3_ce3c, 256
  %v1_ce48 = and i32 %tmp103, 65280
  %tmp104 = udiv i32 %v3_ce3c, 256
  %v4_ce4c = urem i32 %tmp104, 256
  %v5_ce4c = or i32 %v4_ce4c, %v1_ce48
  store i32 %v5_ce4c, i32* %r2.global-to-local, align 4
  %v4_ce5038 = udiv i32 %v2_ce08, 256
  %v1_ce54 = trunc i32 %v4_ce5038 to i8
  %v2_ce54 = load i32, i32* @r4, align 4
  %v3_ce54 = add i32 %v2_ce54, 11
  %v4_ce54 = inttoptr i32 %v3_ce54 to i8*
  store i8 %v1_ce54, i8* %v4_ce54, align 1
  %v3_ce58 = load i32, i32* @r4, align 4
  %v4_ce58 = add i32 %v3_ce58, 10
  %v5_ce58 = inttoptr i32 %v4_ce58 to i8*
  store i8 %v3_ce08, i8* %v5_ce58, align 1
  %v0_ce5c = load i32, i32* %r2.global-to-local, align 4
  %v1_ce5c = load i32, i32* @r5, align 4
  %v2_ce5c = add i32 %v1_ce5c, 8
  %v3_ce5c = inttoptr i32 %v2_ce5c to i32*
  store i32 %v0_ce5c, i32* %v3_ce5c, align 4
  %v0_ce60 = load i32, i32* @r5, align 4
  store i32 %v0_ce60, i32* @r1, align 4
  %v0_ce64 = load i32, i32* @r8, align 4
  store i32 %v0_ce64, i32* %r2.global-to-local, align 4
  %v0_ce68 = load i32, i32* @r7, align 4
  store i32 %v0_ce68, i32* %r3.global-to-local, align 4
  %v0_ce6c = load i32, i32* @r4, align 4
  store i32 %v0_ce6c, i32* %r0.global-to-local, align 4
  %v0_ce70 = load i32, i32* @r6, align 4
  %v1_ce70 = trunc i32 %v0_ce70 to i8
  %v3_ce70 = add i32 %v0_ce60, 16
  %v4_ce70 = inttoptr i32 %v3_ce70 to i8*
  store i8 %v1_ce70, i8* %v4_ce70, align 1
  %v0_ce74 = load i32, i32* @r6, align 4
  %v1_ce74 = trunc i32 %v0_ce74 to i8
  %v2_ce74 = load i32, i32* @r5, align 4
  %v3_ce74 = add i32 %v2_ce74, 17
  %v4_ce74 = inttoptr i32 %v3_ce74 to i8*
  store i8 %v1_ce74, i8* %v4_ce74, align 1
  %v4_ce78 = call i32 @function_de50(i32 %v0_ce6c, i32 %v0_ce60, i32 %v0_ce64, i32 %v0_ce68)
  %v5_ce78 = trunc i32 %v4_ce78 to i8
  store i32 %v4_ce78, i32* %r0.global-to-local, align 4
  %v4_ce7c39 = udiv i32 %v4_ce78, 256
  %v1_ce80 = trunc i32 %v4_ce7c39 to i8
  %v2_ce80 = load i32, i32* @r5, align 4
  %v3_ce80 = add i32 %v2_ce80, 17
  %v4_ce80 = inttoptr i32 %v3_ce80 to i8*
  store i8 %v1_ce80, i8* %v4_ce80, align 1
  %v3_ce84 = load i32, i32* @r5, align 4
  %v4_ce84 = add i32 %v3_ce84, 16
  %v5_ce84 = inttoptr i32 %v4_ce84 to i8*
  store i8 %v5_ce78, i8* %v5_ce84, align 1
  %v3_ce88 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_ce88, i32* %r3.global-to-local, align 4
  %v0_ce8c = load i32, i32* @r4, align 4
  %v1_ce8c = add i32 %v0_ce8c, 20
  %v2_ce8c = inttoptr i32 %v1_ce8c to i32*
  %v3_ce8c = load i32, i32* %v2_ce8c, align 4
  %v5_ce94 = mul i32 %v3_ce88, 24
  %v3_ce9c = udiv i32 %v3_ce8c, 65536
  store i32 %v3_ce9c, i32* %r2.global-to-local, align 4
  %v2_cea0 = add i32 %v5_ce94, %arg2
  store i32 %v2_cea0, i32* %ip.global-to-local, align 4
  %v3_cea47 = udiv i32 %v3_ce8c, 16777216
  %v1_cea8 = trunc i32 %v3_cea47 to i8
  %v3_cea8 = add i32 %v2_cea0, 3
  %v4_cea8 = inttoptr i32 %v3_cea8 to i8*
  store i8 %v1_cea8, i8* %v4_cea8, align 1
  %v0_ceac = load i32, i32* %r2.global-to-local, align 4
  %v1_ceac = trunc i32 %v0_ceac to i8
  %v2_ceac = load i32, i32* %ip.global-to-local, align 4
  %v3_ceac = add i32 %v2_ceac, 2
  %v4_ceac = inttoptr i32 %v3_ceac to i8*
  store i8 %v1_ceac, i8* %v4_ceac, align 1
  %v0_ceb0 = load i32, i32* @r4, align 4
  store i32 %v0_ceb0, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 %v3_c888, i32* %r0.global-to-local, align 4
  %v0_cebc = load i32, i32* @sl, align 4
  store i32 %v0_cebc, i32* %r2.global-to-local, align 4
  store i32 16, i32* %r4.global-to-local, align 4
  %v0_cec4 = load i32, i32* %ip.global-to-local, align 4
  %v4_cec4 = inttoptr i32 %v0_cec4 to %sockaddr*
  %v7_cecc = inttoptr i32 %v0_ceb0 to i32*
  %v9_cecc = call i32 @sendto(i32 %v3_c888, i32* %v7_cecc, i32 %v0_cebc, i32 16384, %sockaddr* %v4_cec4, i32 16)
  %v3_ced0 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_ced0, i32* %r3.global-to-local, align 4
  %v1_ced4 = add i32 %v3_ced0, 1
  store i32 %v1_ced4, i32* %r0.global-to-local, align 4
  %v1_ced8 = load i32, i32* @fp, align 4
  %v9_ced8 = icmp eq i32 %v1_ced4, %v1_ced8
  store i1 %v9_ced8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_ced4, i32* %stack_var_-40, align 4
  %v6_cee0 = icmp slt i32 %v1_ced4, %v1_ced8
  br i1 %v6_cee0, label %dec_label_pc_cee4, label %dec_label_pc_cd9c

dec_label_pc_cee4:                                ; preds = %dec_label_pc_cdf8
  store i32 %v4_c6e8, i32* %r2.global-to-local, align 4
  store i32 65536, i32* %r3.global-to-local, align 4
  store i32 %v3_c8d0, i32* %ip.global-to-local, align 4
  %v4_cef0 = mul i32 %v1_ced4, 4
  %v5_cef0 = add i32 %v4_cef0, %v4_c6e8
  %v6_cef0 = inttoptr i32 %v5_cef0 to i32*
  %v7_cef0 = load i32, i32* %v6_cef0, align 4
  store i32 %v7_cef0, i32* @r4, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i1 %v3_cdd0, i1* %cpsr_z.global-to-local, align 1
  %v1_cefc = add i32 %v7_cef0, 20
  store i32 %v1_cefc, i32* @r5, align 4
  br i1 %v3_cdd0, label %dec_label_pc_cf04, label %dec_label_pc_cde4

dec_label_pc_cf04:                                ; preds = %dec_label_pc_cee4, %dec_label_pc_cda8
  %v0_cf04 = call i32 @function_f508()
  %v1_cf04 = trunc i32 %v0_cf04 to i8
  %v4_cf08 = sdiv i32 %v0_cf04, 256
  store i32 %v4_cf08, i32* %r3.global-to-local, align 4
  %v3_cf0c = load i32, i32* @r4, align 4
  %v4_cf0c = add i32 %v3_cf0c, 4
  %v5_cf0c = inttoptr i32 %v4_cf0c to i8*
  store i8 %v1_cf04, i8* %v5_cf0c, align 1
  store i1 %v2_cf14, i1* %cpsr_z.global-to-local, align 1
  %v0_cf18 = load i32, i32* %r3.global-to-local, align 4
  %v1_cf18 = trunc i32 %v0_cf18 to i8
  %v2_cf18 = load i32, i32* @r4, align 4
  %v3_cf18 = add i32 %v2_cf18, 5
  %v4_cf18 = inttoptr i32 %v3_cf18 to i8*
  store i8 %v1_cf18, i8* %v4_cf18, align 1
  %v0_cf1c = load i32, i32* @r4, align 4
  %v1_cf1c = add i32 %v0_cf1c, 40
  store i32 %v1_cf1c, i32* %r0.global-to-local, align 4
  %v0_cf20 = load i32, i32* @sb, align 4
  store i32 %v0_cf20, i32* @r1, align 4
  %v0_cf24 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_cf24, label %dec_label_pc_cdf8, label %dec_label_pc_cf28

dec_label_pc_cf28:                                ; preds = %dec_label_pc_cde4, %dec_label_pc_cf04
  %v0_cf28 = phi i32 [ %v1_cdf0, %dec_label_pc_cde4 ], [ %v1_cf1c, %dec_label_pc_cf04 ]
  %v1_cf28 = inttoptr i32 %v0_cf28 to i8*
  %v2_cf28 = call i32 @function_f688(i8* %v1_cf28)
  store i32 %v2_cf28, i32* %r0.global-to-local, align 4
  %v2_cdf8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_cdf8

; uselistorder directives
  uselistorder i32 %v0_cf1c, { 1, 0 }
  uselistorder i32 %v7_cef0, { 1, 2, 0 }
  uselistorder i32 %v1_ced8, { 1, 2, 0 }
  uselistorder i32 %v1_ced4, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v4_ce78, { 0, 2, 1 }
  uselistorder i32 %v0_ce60, { 1, 0, 2 }
  uselistorder i32 %v3_ce3c, { 1, 0 }
  uselistorder i32 %v3_ce1c, { 3, 2, 0, 1 }
  uselistorder i32 %v2_ce08, { 0, 2, 1 }
  uselistorder i32 %v0_cdf0, { 1, 0 }
  uselistorder i32 %v0_cda8, { 1, 0 }
  uselistorder i32 %v0_cd9c, { 1, 0 }
  uselistorder i1 %v3_cdd0, { 2, 3, 1, 0 }
  uselistorder i1 %v2_cf14, { 2, 1, 0 }
  uselistorder i32 %v1_cd84, { 1, 0, 2, 3 }
  uselistorder i32 %v0_ccd8, { 0, 2, 1 }
  uselistorder i32 %v3_ccb8, { 1, 0 }
  uselistorder i32 %v0_cc8c, { 1, 0, 2 }
  uselistorder i32 %v3_cc80, { 1, 0 }
  uselistorder i32 %v1_cbe4, { 1, 0 }
  uselistorder i32 %v0_cbd8, { 1, 2, 0 }
  uselistorder i32 %v3_cb9c, { 1, 0 }
  uselistorder i32 %v2_cb88, { 1, 0 }
  uselistorder i32 %v3_cb6c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_cb64, { 1, 0 }
  uselistorder i32 %v3_cb40, { 1, 0, 2 }
  uselistorder i32 %v3_cb38, { 1, 0 }
  uselistorder i32 %v4_cb20, { 1, 0 }
  uselistorder i32 %v0_cb1c, { 0, 2, 1 }
  uselistorder i32 %v3_c91c, { 1, 2, 3, 0 }
  uselistorder i32 %v5_cad0, { 1, 0 }
  uselistorder i1 %v9_cab4, { 1, 0 }
  uselistorder i32 %v4_cac8, { 1, 0 }
  uselistorder i32 %v4_cac4, { 1, 0 }
  uselistorder i32 %storemerge35, { 0, 2, 1 }
  uselistorder i32 %v8_c9bc, { 1, 2, 0, 3 }
  uselistorder i32 %v3_c9a8, { 1, 0 }
  uselistorder i32 %v7_c974, { 4, 1, 3, 0, 2, 5 }
  uselistorder i32 %v1_cd44, { 1, 0 }
  uselistorder i32 %v1_cd2c, { 1, 0 }
  uselistorder i32 %v1_cd14, { 1, 0 }
  uselistorder i32 %v1_ccfc, { 1, 0 }
  uselistorder i32 %v1_cce4, { 1, 0 }
  uselistorder i32 %v5_cacc, { 1, 0 }
  uselistorder i32 %v3_ca04113, { 1, 0 }
  uselistorder i1 %v2_cae4, { 1, 0 }
  uselistorder i32 %v1_cae0, { 1, 0 }
  uselistorder i32 %v4_cadc, { 2, 0, 1 }
  uselistorder i32 %v4_cac0, { 1, 0 }
  uselistorder i1 %v3_c9ec, { 1, 0 }
  uselistorder i32 %v1_c900, { 2, 1, 0 }
  uselistorder i32 %v8_c8dc, { 2, 1, 0 }
  uselistorder i32 %v8_c8d8, { 1, 2, 0 }
  uselistorder i32 %v3_c8d0, { 1, 2, 3, 0 }
  uselistorder i32 %v0_c8cc, { 1, 0, 3, 2 }
  uselistorder i32 %v3_c88c, { 2, 3, 0, 1 }
  uselistorder i32 %v3_c888, { 3, 4, 1, 2, 5, 6, 0, 7, 8 }
  uselistorder i32 %v1_c878, { 1, 0 }
  uselistorder i32 %v1_c820, { 1, 0 }
  uselistorder i32 %v1_c800, { 1, 0 }
  uselistorder i32 %v1_c7e0, { 1, 0 }
  uselistorder i32 %v1_c7c0, { 1, 0 }
  uselistorder i32 %v1_c7a0, { 1, 0 }
  uselistorder i32 %v1_c768, { 1, 0 }
  uselistorder i32 %v4_c6e8, { 0, 3, 4, 1, 2 }
  uselistorder i32 %v4_c6d8, { 0, 7, 1, 4, 2, 5, 3, 6 }
  uselistorder i32 %v1_c6bc, { 2, 1, 0 }
  uselistorder i32* %stack_var_-40, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 1, 16, 15 }
  uselistorder i32* %stack_var_-60, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 51, 39, 40, 42, 41, 43, 44, 45, 46, 47, 48, 49, 50, 1, 52, 53, 54, 55, 57, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 32, 21, 22, 28, 23, 24, 25, 26, 27, 29, 30, 31, 1, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 43, 45, 47, 46, 48, 50, 49, 0 }
  uselistorder i32* %r0.global-to-local, { 4, 3, 5, 6, 8, 7, 12, 9, 10, 13, 11, 22, 14, 15, 16, 17, 18, 19, 20, 21, 26, 23, 24, 25, 27, 29, 28, 47, 44, 30, 33, 31, 34, 35, 32, 37, 36, 38, 39, 40, 42, 41, 43, 2, 1, 45, 46, 48, 50, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 10, 11, 13, 23, 14, 15, 16, 18, 27, 19, 20, 17, 21, 22, 0, 24, 25, 26 }
  uselistorder i32 768, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_cf28, { 1, 0 }
  uselistorder label %dec_label_pc_cdf8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_cd80, { 2, 1, 0 }
  uselistorder label %bb97, { 1, 0 }
  uselistorder label %.thread10, { 2, 1, 0 }
  uselistorder label %bb93, { 1, 0 }
  uselistorder label %dec_label_pc_cb14, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ca4c, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_c9e0, { 1, 0 }
  uselistorder label %dec_label_pc_c92c, { 1, 0 }
}

define i32 @function_cf34(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_cf34:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_cf34 = load i32, i32* @r4, align 4
  %v1_cf38 = urem i32 %arg1, 256
  store i32 %v1_cf38, i32* @fp, align 4
  store i32 %arg2, i32* @sb, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  %v1_cf50 = urem i32 %arg3, 256
  store i32 %v1_cf50, i32* @r4, align 4
  %v2_cf54 = call i32* @calloc(i32 %v1_cf38, i32 4)
  %v4_cf54 = ptrtoint i32* %v2_cf54 to i32
  %v0_cf58 = load i32, i32* @r5, align 4
  store i32 %v0_cf58, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_cf68 = load i32, i32* @r4, align 4
  %v5_cf6c = inttoptr i32 %v0_cf58 to i32*
  %v6_cf6c = call i32 @function_92dc(i32 %v0_cf68, i32* %v5_cf6c, i32 2, i32 0)
  %v1_cf78 = urem i32 %v6_cf6c, 256
  store i32 %v1_cf78, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_cf84 = load i32, i32* @r5, align 4
  store i32 %v0_cf84, i32* %r1.global-to-local, align 4
  %v0_cf88 = load i32, i32* @r4, align 4
  %v5_cf8c = trunc i32 %v6_cf6c to i8
  %v6_cf90 = inttoptr i32 %v0_cf84 to i32*
  %v7_cf90 = call i32 @function_92dc(i32 %v0_cf88, i32* %v6_cf90, i32 3, i32 65535)
  %v0_cf94 = load i32, i32* @r5, align 4
  store i32 %v0_cf94, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_cf90, i32* @r8, align 4
  %v0_cfa4 = load i32, i32* @r4, align 4
  %v4_cfa8 = inttoptr i32 %v0_cf94 to i32*
  %v5_cfa8 = call i32 @function_92dc(i32 %v0_cfa4, i32* %v4_cfa8, i32 4, i32 64)
  %v1_cfb0 = urem i32 %v5_cfa8, 256
  store i32 %v1_cfb0, i32* %ip.global-to-local, align 4
  %v0_cfb4 = load i32, i32* @r5, align 4
  store i32 %v0_cfb4, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_cfc0 = load i32, i32* @r4, align 4
  %v6_cfc8 = inttoptr i32 %v0_cfb4 to i32*
  %v7_cfc8 = call i32 @function_92dc(i32 %v0_cfc0, i32* %v6_cfc8, i32 5, i32 0)
  %v1_cfd4 = urem i32 %v7_cfc8, 256
  store i32 %v1_cfd4, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_cfe0 = load i32, i32* @r5, align 4
  store i32 %v0_cfe0, i32* %r1.global-to-local, align 4
  %v0_cfe4 = load i32, i32* @r4, align 4
  %v5_cfec = inttoptr i32 %v0_cfe0 to i32*
  %v6_cfec = call i32 @function_92dc(i32 %v0_cfe4, i32* %v5_cfec, i32 6, i32 65535)
  %v0_cff4 = load i32, i32* @r5, align 4
  store i32 %v0_cff4, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_cfec, i32* @r7, align 4
  %v0_d004 = load i32, i32* @r4, align 4
  %v4_d008 = inttoptr i32 %v0_cff4 to i32*
  %v5_d008 = call i32 @function_92dc(i32 %v0_d004, i32* %v4_d008, i32 7, i32 65535)
  %v0_d010 = load i32, i32* @r5, align 4
  store i32 %v0_d010, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 %v5_d008, i32* @r6, align 4
  %v0_d020 = load i32, i32* @r4, align 4
  %v4_d024 = inttoptr i32 %v0_d010 to i32*
  %v5_d024 = call i32 @function_92dc(i32 %v0_d020, i32* %v4_d024, i32 17, i32 65535)
  %v0_d030 = load i32, i32* @r5, align 4
  store i32 %v0_d030, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 18, i32* %r2.global-to-local, align 4
  %v0_d03c = load i32, i32* @r4, align 4
  %v5_d040 = inttoptr i32 %v0_d030 to i32*
  %v6_d040 = call i32 @function_92dc(i32 %v0_d03c, i32* %v5_d040, i32 18, i32 65535)
  %v0_d044 = load i32, i32* @r5, align 4
  store i32 %v0_d044, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_d054 = load i32, i32* @r4, align 4
  %v5_d058 = inttoptr i32 %v0_d044 to i32*
  %v6_d058 = call i32 @function_92dc(i32 %v0_d054, i32* %v5_d058, i32 11, i32 0)
  %v0_d05c = load i32, i32* @r5, align 4
  store i32 %v0_d05c, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_d06c = load i32, i32* @r4, align 4
  %v5_d070 = inttoptr i32 %v0_d05c to i32*
  %v6_d070 = call i32 @function_92dc(i32 %v0_d06c, i32* %v5_d070, i32 12, i32 1)
  %v0_d074 = load i32, i32* @r5, align 4
  store i32 %v0_d074, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_d084 = load i32, i32* @r4, align 4
  %v5_d088 = inttoptr i32 %v0_d074 to i32*
  %v6_d088 = call i32 @function_92dc(i32 %v0_d084, i32* %v5_d088, i32 13, i32 0)
  %v0_d08c = load i32, i32* @r5, align 4
  store i32 %v0_d08c, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_d09c = load i32, i32* @r4, align 4
  %v5_d0a0 = inttoptr i32 %v0_d08c to i32*
  %v6_d0a0 = call i32 @function_92dc(i32 %v0_d09c, i32* %v5_d0a0, i32 14, i32 0)
  %v0_d0a4 = load i32, i32* @r5, align 4
  store i32 %v0_d0a4, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_d0b4 = load i32, i32* @r4, align 4
  %v5_d0b8 = inttoptr i32 %v0_d0a4 to i32*
  %v6_d0b8 = call i32 @function_92dc(i32 %v0_d0b4, i32* %v5_d0b8, i32 15, i32 0)
  %v0_d0bc = load i32, i32* @r5, align 4
  store i32 %v0_d0bc, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_d0cc = load i32, i32* @r4, align 4
  %v5_d0d0 = inttoptr i32 %v0_d0bc to i32*
  %v6_d0d0 = call i32 @function_92dc(i32 %v0_d0cc, i32* %v5_d0d0, i32 16, i32 0)
  %v0_d0d4 = load i32, i32* @r5, align 4
  store i32 %v0_d0d4, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v0_d0e4 = load i32, i32* @r4, align 4
  %v5_d0e8 = inttoptr i32 %v0_d0d4 to i32*
  %v6_d0e8 = call i32 @function_92dc(i32 %v0_d0e4, i32* %v5_d0e8, i32 0, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_d0f8 = load i32, i32* @r5, align 4
  store i32 %v0_d0f8, i32* %r1.global-to-local, align 4
  %v0_d0fc = load i32, i32* @r4, align 4
  %v4_d100 = inttoptr i32 %v0_d0f8 to i32*
  %v5_d100 = call i32 @function_92dc(i32 %v0_d0fc, i32* %v4_d100, i32 1, i32 1)
  %v2_d10c = load i32, i32* @global_var_1bd28.110, align 4
  store i32 %v2_d10c, i32* %r3.global-to-local, align 4
  %v1_d110 = urem i32 %v5_d100, 256
  store i32 %v1_d110, i32* %ip.global-to-local, align 4
  %v0_d114 = load i32, i32* @r5, align 4
  store i32 %v0_d114, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_d11c = load i32, i32* @r4, align 4
  %v5_d124 = inttoptr i32 %v0_d114 to i32*
  %v6_d124 = call i32 @function_9270(i32 %v0_d11c, i32* %v5_d124, i32 25, i32 %v2_d10c, i32 %v1_d110)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_d138 = call i32 @socket(i32 2, i32 3, i32 6)
  %v2_d13c = icmp eq i32 %v3_d138, -1
  store i1 %v2_d13c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_d13c, label %dec_label_pc_d574, label %dec_label_pc_d148

dec_label_pc_d148:                                ; preds = %dec_label_pc_cf34
  store i32 1, i32* %stack_var_-40, align 4
  %v6_d150 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_d150, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v7_d164 = call i32 @setsockopt(i32 %v3_d138, i32 0, i32 3, i32* nonnull %stack_var_-40, i32 4)
  %v2_d168 = icmp eq i32 %v7_d164, -1
  store i1 %v2_d168, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_d168, label %dec_label_pc_d56c, label %dec_label_pc_d170

dec_label_pc_d170:                                ; preds = %dec_label_pc_d148
  %v0_d170 = load i32, i32* @r8, align 4
  %v0_d174 = load i32, i32* @r7, align 4
  %v0_d178 = load i32, i32* @r6, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_d180 = urem i32 %v0_d170, 65536
  store i32 %v3_d180, i32* %r2.global-to-local, align 4
  %v3_d184 = urem i32 %v0_d174, 65536
  store i32 %v3_d184, i32* %r3.global-to-local, align 4
  %v3_d188 = urem i32 %v0_d178, 65536
  store i32 %v3_d188, i32* %ip.global-to-local, align 4
  %v0_d18c = load i32, i32* @fp, align 4
  %v2_d18c = icmp eq i32 %v0_d18c, 0
  store i1 %v2_d18c, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-40, align 4
  %tmp76 = icmp slt i32 %v0_d18c, 1
  br i1 %tmp76, label %dec_label_pc_d68c, label %dec_label_pc_d1a4

dec_label_pc_d1a4:                                ; preds = %dec_label_pc_d170
  %v1_d1ac = add i32 %v6_d0e8, 40
  %tmp77 = mul i32 %v1_d1ac, 256
  %v1_d1c0 = urem i32 %v0_d174, 256
  %v1_d1c4 = and i32 %tmp77, 65280
  %v3_d1c8 = mul nuw nsw i32 %v1_d1c0, 256
  %v1_d1d0 = urem i32 %v0_d178, 256
  %tmp78 = udiv i32 %v0_d178, 256
  %v3_d1d4 = urem i32 %tmp78, 256
  %tmp79 = udiv i32 %v1_d1ac, 256
  %tmp80 = udiv i32 %v0_d174, 256
  %v4_d1dc = urem i32 %tmp80, 256
  %v5_d1dc = or i32 %v4_d1dc, %v3_d1c8
  store i32 %v5_d1dc, i32* @sl, align 4
  %v4_d1e0 = mul nuw nsw i32 %v1_d1d0, 256
  %v5_d1e0 = or i32 %v4_d1e0, %v3_d1d4
  store i32 %v5_d1e0, i32* @r6, align 4
  %tmp81 = udiv i32 %v0_d170, 256
  %v3_d1f0 = urem i32 %tmp81, 256
  %v1_d1f4 = urem i32 %v0_d170, 256
  %tmp82 = mul i32 %v5_d024, 256
  %v1_d1fc = and i32 %tmp82, 65280
  %v1_d200 = urem i32 %v6_d058, 2
  %v1_d204 = urem i32 %v6_d070, 2
  %v1_d208 = urem i32 %v6_d088, 2
  %tmp83 = udiv i32 %v5_d024, 256
  %v4_d20c = urem i32 %tmp83, 256
  %v5_d20c = or i32 %v4_d20c, %v1_d1fc
  store i32 %v5_d20c, i32* @r8, align 4
  %v1_d22c = urem i32 %v6_d0a0, 2
  %v1_d230 = urem i32 %v6_d0b8, 2
  %v1_d234 = urem i32 %v6_d0d0, 2
  %v1_d238 = urem i32 %v6_d088, 256
  %v4_d23c = mul nuw nsw i32 %v1_d1f4, 256
  %v5_d23c = or i32 %v4_d23c, %v3_d1f0
  store i32 %v5_d23c, i32* @r5, align 4
  %v3_d25026 = udiv i32 %v1_d1c4, 256
  store i32 %v3_d25026, i32* %r3.global-to-local, align 4
  store i32 %v1_d1f4, i32* %ip.global-to-local, align 4
  store i32 %v1_d1c0, i32* %r1.global-to-local, align 4
  store i32 %v1_d1d0, i32* %r2.global-to-local, align 4
  %v5_d26c = trunc i32 %v0_d174 to i8
  store i32 0, i32* %r4.global-to-local, align 4
  %sext9 = mul i32 %v5_cfa8, 16777216
  %v4_d2c8 = sdiv i32 %sext9, 16777216
  %sext10 = mul i32 %v0_d170, 16777216
  %v4_d2d4 = sdiv i32 %sext10, 16777216
  %sext11 = mul i32 %tmp79, 16777216
  %v4_d2e8 = sdiv i32 %sext11, 16777216
  %sext12 = mul i32 %v1_d1ac, 16777216
  %v4_d2ec = sdiv i32 %sext12, 16777216
  %tmp = sub nsw i32 0, %v1_d200
  %v4_d33c = and i32 %tmp, 32
  %tmp94 = sub nsw i32 0, %v1_d204
  %v4_d350 = and i32 %tmp94, 16
  %tmp95 = sub nsw i32 0, %v1_d208
  %v4_d364 = and i32 %tmp95, 8
  %tmp96 = sub nsw i32 0, %v1_d22c
  %v4_d378 = and i32 %tmp96, 4
  %tmp97 = sub nsw i32 0, %v1_d230
  %v3_d38c = and i32 %tmp97, 2
  %sext13 = mul i32 %v0_d178, 16777216
  %v7_d3bc = sdiv i32 %sext13, 16777216
  %v1_d2d0 = trunc i32 %v4_d2c8 to i8
  %extract.t = trunc i32 %v4_d2d4 to i8
  %v3_d3bc = sext i8 %v5_d26c to i32
  %v2_d3e0 = icmp eq i32 %v1_d238, 0
  br label %dec_label_pc_d278

dec_label_pc_d278:                                ; preds = %bb90, %dec_label_pc_d1a4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_d284 = call i32* @calloc(i32 1510, i32 1)
  %v4_d284 = ptrtoint i32* %v2_d284 to i32
  store i32 %v4_cf54, i32* %ip.global-to-local, align 4
  %v2_d290 = load i32, i32* %r4.global-to-local, align 4
  %v5_d290 = mul i32 %v2_d290, 4
  %v6_d290 = add i32 %v5_d290, %v4_cf54
  %v7_d290 = inttoptr i32 %v6_d290 to i32*
  store i32 %v4_d284, i32* %v7_d290, align 4
  %v3_d294 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_d294, i32* %r3.global-to-local, align 4
  %v0_d298 = load i32, i32* %ip.global-to-local, align 4
  %v4_d298 = mul i32 %v3_d294, 4
  %v5_d298 = add i32 %v0_d298, %v4_d298
  %v6_d298 = inttoptr i32 %v5_d298 to i32*
  %v7_d298 = load i32, i32* %v6_d298, align 4
  store i32 %v7_d298, i32* @r7, align 4
  %v1_d29c = inttoptr i32 %v7_d298 to i8*
  %v2_d29c = load i8, i8* %v1_d29c, align 1
  %tmp98 = urem i8 %v2_d29c, 16
  %v1_d2a0 = zext i8 %tmp98 to i32
  %v1_d2a4 = or i32 %v1_d2a0, 64
  store i32 %v1_d2a4, i32* %r2.global-to-local, align 4
  %v1_d2a8 = trunc i32 %v1_d2a4 to i8
  store i8 %v1_d2a8, i8* %v1_d29c, align 1
  %v0_d2ac = load i32, i32* @r7, align 4
  %v1_d2ac = inttoptr i32 %v0_d2ac to i8*
  %v2_d2ac = load i8, i8* %v1_d2ac, align 1
  %v1_d2b0 = and i8 %v2_d2ac, -16
  %v1_d2b4 = or i8 %v1_d2b0, 5
  store i32 %v1_cfd4, i32* %r1.global-to-local, align 4
  store i8 %v1_d2b4, i8* %v1_d2ac, align 1
  %v2_d2c4 = load i32, i32* @r7, align 4
  %v3_d2c4 = add i32 %v2_d2c4, 1
  %v4_d2c4 = inttoptr i32 %v3_d2c4 to i8*
  store i8 %v5_cf8c, i8* %v4_d2c4, align 1
  store i32 %v4_d2c8, i32* %r3.global-to-local, align 4
  %v0_d2cc = load i32, i32* %r1.global-to-local, align 4
  %v2_d2cc = icmp eq i32 %v0_d2cc, 0
  store i1 %v2_d2cc, i1* %cpsr_z.global-to-local, align 1
  %v2_d2d0 = load i32, i32* @r7, align 4
  %v3_d2d0 = add i32 %v2_d2d0, 8
  %v4_d2d0 = inttoptr i32 %v3_d2d0 to i8*
  store i8 %v1_d2d0, i8* %v4_d2d0, align 1
  store i32 %v4_d2d4, i32* %r2.global-to-local, align 4
  %v0_d2d8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d2d8, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_d278
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_d2dc = load i32, i32* @r7, align 4
  %v4_d2dc = add i32 %v3_d2dc, 6
  %v5_d2dc = inttoptr i32 %v4_d2dc to i8*
  store i8 64, i8* %v5_d2dc, align 1
  %v0_d2e4.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t27 = trunc i32 %v0_d2e4.pre to i8
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_d278, %bb
  %v0_d2e4.off0 = phi i8 [ %extract.t, %dec_label_pc_d278 ], [ %extract.t27, %bb ]
  store i32 6, i32* %r3.global-to-local, align 4
  %v2_d2e4 = load i32, i32* @r7, align 4
  %v3_d2e4 = add i32 %v2_d2e4, 5
  %v4_d2e4 = inttoptr i32 %v3_d2e4 to i8*
  store i8 %v0_d2e4.off0, i8* %v4_d2e4, align 1
  store i32 %v4_d2e8, i32* %ip.global-to-local, align 4
  store i32 %v4_d2ec, i32* %r1.global-to-local, align 4
  %v0_d2f0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d2f0, label %bb85, label %bb84

bb84:                                             ; preds = %.thread
  store i32 0, i32* %r2.global-to-local, align 4
  br label %bb85

bb85:                                             ; preds = %.thread, %bb84
  %v0_d2f4 = load i32, i32* %r3.global-to-local, align 4
  %v1_d2f4 = trunc i32 %v0_d2f4 to i8
  %v2_d2f4 = load i32, i32* @r7, align 4
  %v3_d2f4 = add i32 %v2_d2f4, 9
  %v4_d2f4 = inttoptr i32 %v3_d2f4 to i8*
  store i8 %v1_d2f4, i8* %v4_d2f4, align 1
  %v0_d2f8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d2f8, label %bb87, label %bb86

bb86:                                             ; preds = %bb85
  %v1_d2f8 = load i32, i32* %r2.global-to-local, align 4
  %v2_d2f8 = trunc i32 %v1_d2f8 to i8
  %v3_d2f8 = load i32, i32* @r7, align 4
  %v4_d2f8 = add i32 %v3_d2f8, 7
  %v5_d2f8 = inttoptr i32 %v4_d2f8 to i8*
  store i8 %v2_d2f8, i8* %v5_d2f8, align 1
  br label %bb87

bb87:                                             ; preds = %bb85, %bb86
  %v3_d2fc = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_d2fc, i32* %r2.global-to-local, align 4
  %v0_d300 = load i32, i32* %ip.global-to-local, align 4
  %v1_d300 = trunc i32 %v0_d300 to i8
  %v2_d300 = load i32, i32* @r7, align 4
  %v3_d300 = add i32 %v2_d300, 2
  %v4_d300 = inttoptr i32 %v3_d300 to i8*
  store i8 %v1_d300, i8* %v4_d300, align 1
  store i32 %v6_d124, i32* %ip.global-to-local, align 4
  %v0_d308 = load i32, i32* %r2.global-to-local, align 4
  %v3_d308 = mul i32 %v0_d308, 32
  store i32 %v3_d308, i32* %r3.global-to-local, align 4
  %v1_d30c = load i32, i32* @r7, align 4
  %v2_d30c = add i32 %v1_d30c, 12
  %v3_d30c = inttoptr i32 %v2_d30c to i32*
  store i32 %v6_d124, i32* %v3_d30c, align 4
  %v0_d310 = load i32, i32* %r3.global-to-local, align 4
  %v1_d310 = load i32, i32* %r2.global-to-local, align 4
  %tmp99 = mul i32 %v1_d310, -8
  %v5_d310 = add i32 %v0_d310, %tmp99
  %v1_d314 = load i32, i32* @sb, align 4
  %v2_d314 = add i32 %v1_d314, %v5_d310
  store i32 %v2_d314, i32* %r3.global-to-local, align 4
  %v1_d318 = add i32 %v2_d314, 16
  %v2_d318 = inttoptr i32 %v1_d318 to i32*
  %v3_d318 = load i32, i32* %v2_d318, align 4
  store i32 %v3_d318, i32* %r2.global-to-local, align 4
  %v0_d31c = load i32, i32* %r1.global-to-local, align 4
  %v1_d31c = trunc i32 %v0_d31c to i8
  %v2_d31c = load i32, i32* @r7, align 4
  %v3_d31c = add i32 %v2_d31c, 3
  %v4_d31c = inttoptr i32 %v3_d31c to i8*
  store i8 %v1_d31c, i8* %v4_d31c, align 1
  %v0_d320 = load i32, i32* @r5, align 4
  %v1_d320 = trunc i32 %v0_d320 to i8
  %v2_d320 = load i32, i32* @r7, align 4
  %v3_d320 = add i32 %v2_d320, 4
  %v4_d320 = inttoptr i32 %v3_d320 to i8*
  store i8 %v1_d320, i8* %v4_d320, align 1
  %v0_d324 = load i32, i32* %r2.global-to-local, align 4
  %v1_d324 = load i32, i32* @r7, align 4
  %v2_d324 = add i32 %v1_d324, 16
  %v3_d324 = inttoptr i32 %v2_d324 to i32*
  store i32 %v0_d324, i32* %v3_d324, align 4
  %v0_d328 = load i32, i32* @sl, align 4
  %v1_d328 = trunc i32 %v0_d328 to i8
  %v2_d328 = load i32, i32* @r7, align 4
  %v3_d328 = add i32 %v2_d328, 20
  %v4_d328 = inttoptr i32 %v3_d328 to i8*
  store i8 %v1_d328, i8* %v4_d328, align 1
  %v0_d32c = load i32, i32* @r7, align 4
  %v1_d32c = add i32 %v0_d32c, 20
  store i32 %v1_d32c, i32* @r4, align 4
  %v1_d330 = add i32 %v0_d32c, 33
  %v2_d330 = inttoptr i32 %v1_d330 to i8*
  %v3_d330 = load i8, i8* %v2_d330, align 1
  %v4_d330 = zext i8 %v3_d330 to i32
  store i32 %v1_d200, i32* %r1.global-to-local, align 4
  %v1_d338 = and i32 %v4_d330, 223
  %v5_d33c = or i32 %v1_d338, %v4_d33c
  store i32 %v5_d33c, i32* %r3.global-to-local, align 4
  %v1_d340 = trunc i32 %v5_d33c to i8
  store i8 %v1_d340, i8* %v2_d330, align 1
  %v0_d344 = load i32, i32* @r4, align 4
  %v1_d344 = add i32 %v0_d344, 13
  %v2_d344 = inttoptr i32 %v1_d344 to i8*
  %v3_d344 = load i8, i8* %v2_d344, align 1
  %v4_d344 = zext i8 %v3_d344 to i32
  store i32 %v1_d204, i32* %r3.global-to-local, align 4
  %v1_d34c = and i32 %v4_d344, 239
  %v5_d350 = or i32 %v1_d34c, %v4_d350
  store i32 %v5_d350, i32* %r2.global-to-local, align 4
  %v1_d354 = trunc i32 %v5_d350 to i8
  store i8 %v1_d354, i8* %v2_d344, align 1
  %v0_d358 = load i32, i32* @r4, align 4
  %v1_d358 = add i32 %v0_d358, 13
  %v2_d358 = inttoptr i32 %v1_d358 to i8*
  %v3_d358 = load i8, i8* %v2_d358, align 1
  %v4_d358 = zext i8 %v3_d358 to i32
  store i32 %v1_d208, i32* %ip.global-to-local, align 4
  %v1_d360 = and i32 %v4_d358, 247
  %v5_d364 = or i32 %v1_d360, %v4_d364
  store i32 %v5_d364, i32* %r3.global-to-local, align 4
  %v1_d368 = trunc i32 %v5_d364 to i8
  store i8 %v1_d368, i8* %v2_d358, align 1
  %v0_d36c = load i32, i32* @r4, align 4
  %v1_d36c = add i32 %v0_d36c, 13
  %v2_d36c = inttoptr i32 %v1_d36c to i8*
  %v3_d36c = load i8, i8* %v2_d36c, align 1
  %v4_d36c = zext i8 %v3_d36c to i32
  store i32 %v1_d22c, i32* %r1.global-to-local, align 4
  %v1_d374 = and i32 %v4_d36c, 251
  %v5_d378 = or i32 %v1_d374, %v4_d378
  store i32 %v5_d378, i32* %r2.global-to-local, align 4
  %v1_d37c = trunc i32 %v5_d378 to i8
  store i8 %v1_d37c, i8* %v2_d36c, align 1
  %v0_d380 = load i32, i32* @r4, align 4
  %v1_d380 = add i32 %v0_d380, 13
  %v2_d380 = inttoptr i32 %v1_d380 to i8*
  %v3_d380 = load i8, i8* %v2_d380, align 1
  %v4_d380 = zext i8 %v3_d380 to i32
  store i32 %v1_d230, i32* %r2.global-to-local, align 4
  %v1_d388 = and i32 %v4_d380, 253
  %v4_d38c = or i32 %v1_d388, %v3_d38c
  store i32 %v4_d38c, i32* %r3.global-to-local, align 4
  %v1_d390 = trunc i32 %v4_d38c to i8
  store i8 %v1_d390, i8* %v2_d380, align 1
  %v0_d394 = load i32, i32* @r4, align 4
  %v1_d394 = add i32 %v0_d394, 12
  %v2_d394 = inttoptr i32 %v1_d394 to i8*
  %v3_d394 = load i8, i8* %v2_d394, align 1
  %v4_d394 = zext i8 %v3_d394 to i32
  store i32 %v4_d394, i32* %r2.global-to-local, align 4
  %v1_d398 = add i32 %v0_d394, 13
  %v2_d398 = inttoptr i32 %v1_d398 to i8*
  %v3_d398 = load i8, i8* %v2_d398, align 1
  %v4_d398 = zext i8 %v3_d398 to i32
  store i32 %v1_d234, i32* %ip.global-to-local, align 4
  %tmp100 = urem i8 %v3_d394, 16
  %v1_d3a0 = zext i8 %tmp100 to i32
  %v1_d3a4 = and i32 %v4_d398, 254
  %v2_d3a8 = or i32 %v1_d3a4, %v1_d234
  store i32 %v2_d3a8, i32* %r3.global-to-local, align 4
  %v1_d3ac = or i32 %v1_d3a0, 80
  store i32 %v1_d3ac, i32* %r2.global-to-local, align 4
  %v1_d3b0 = trunc i32 %v2_d3a8 to i8
  store i8 %v1_d3b0, i8* %v2_d398, align 1
  %v0_d3b4 = load i32, i32* %r2.global-to-local, align 4
  %v1_d3b4 = trunc i32 %v0_d3b4 to i8
  %v2_d3b4 = load i32, i32* @r4, align 4
  %v3_d3b4 = add i32 %v2_d3b4, 12
  %v4_d3b4 = inttoptr i32 %v3_d3b4 to i8*
  store i8 %v1_d3b4, i8* %v4_d3b4, align 1
  store i32 %v3_d3bc, i32* %r1.global-to-local, align 4
  store i32 %v7_d3bc, i32* %r2.global-to-local, align 4
  %v2_d3c0 = load i32, i32* @r4, align 4
  %v3_d3c0 = add i32 %v2_d3c0, 1
  %v4_d3c0 = inttoptr i32 %v3_d3c0 to i8*
  store i8 %v5_d26c, i8* %v4_d3c0, align 1
  %v0_d3c4 = load i32, i32* %r2.global-to-local, align 4
  %v1_d3c4 = trunc i32 %v0_d3c4 to i8
  %v2_d3c4 = load i32, i32* @r4, align 4
  %v3_d3c4 = add i32 %v2_d3c4, 3
  %v4_d3c4 = inttoptr i32 %v3_d3c4 to i8*
  store i8 %v1_d3c4, i8* %v4_d3c4, align 1
  %v0_d3c8 = load i32, i32* @r6, align 4
  %v1_d3c8 = trunc i32 %v0_d3c8 to i8
  %v2_d3c8 = load i32, i32* @r4, align 4
  %v3_d3c8 = add i32 %v2_d3c8, 2
  %v4_d3c8 = inttoptr i32 %v3_d3c8 to i8*
  store i8 %v1_d3c8, i8* %v4_d3c8, align 1
  %v0_d3cc = load i32, i32* @r8, align 4
  %v1_d3cc = load i32, i32* @r4, align 4
  %v2_d3cc = add i32 %v1_d3cc, 4
  %v3_d3cc = inttoptr i32 %v2_d3cc to i32*
  store i32 %v0_d3cc, i32* %v3_d3cc, align 4
  %v0_d3d0 = call i32 @function_f508()
  store i32 %v1_d238, i32* %ip.global-to-local, align 4
  %sext = mul i32 %v0_d3d0, 16777216
  %v1_d3d8 = sdiv i32 %sext, 16777216
  store i32 %v1_d3d8, i32* %r2.global-to-local, align 4
  %v3_d3dc = ashr i32 %sext, 31
  store i32 %v3_d3dc, i32* %r3.global-to-local, align 4
  store i1 %v2_d3e0, i1* %cpsr_z.global-to-local, align 1
  %v1_d3e4 = trunc i32 %v3_d3dc to i8
  %v2_d3e4 = load i32, i32* @r4, align 4
  %v3_d3e4 = add i32 %v2_d3e4, 15
  %v4_d3e4 = inttoptr i32 %v3_d3e4 to i8*
  store i8 %v1_d3e4, i8* %v4_d3e4, align 1
  %v0_d3e8 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v2_d3f4.pre = load i32, i32* @r4, align 4
  br i1 %v0_d3e8, label %.thread14, label %bb88

bb88:                                             ; preds = %bb87
  %v2_d3e8 = add i32 %v2_d3f4.pre, 13
  %v3_d3e8 = inttoptr i32 %v2_d3e8 to i8*
  %v4_d3e8 = load i8, i8* %v3_d3e8, align 1
  %v5_d3e8 = zext i8 %v4_d3e8 to i32
  %v2_d3ec = or i32 %v5_d3e8, 8
  store i32 %v2_d3ec, i32* %r3.global-to-local, align 4
  br label %.thread14

.thread14:                                        ; preds = %bb87, %bb88
  store i32 %v6_d0e8, i32* @r1, align 4
  %v0_d3f4 = load i32, i32* %r2.global-to-local, align 4
  %v1_d3f4 = trunc i32 %v0_d3f4 to i8
  %v3_d3f4 = add i32 %v2_d3f4.pre, 14
  %v4_d3f4 = inttoptr i32 %v3_d3f4 to i8*
  store i8 %v1_d3f4, i8* %v4_d3f4, align 1
  %v0_d3f8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d3f8, label %bb90, label %bb89

bb89:                                             ; preds = %.thread14
  %v1_d3f8 = load i32, i32* %r3.global-to-local, align 4
  %v2_d3f8 = trunc i32 %v1_d3f8 to i8
  %v3_d3f8 = load i32, i32* @r4, align 4
  %v4_d3f8 = add i32 %v3_d3f8, 13
  %v5_d3f8 = inttoptr i32 %v4_d3f8 to i8*
  store i8 %v2_d3f8, i8* %v5_d3f8, align 1
  br label %bb90

bb90:                                             ; preds = %.thread14, %bb89
  %v0_d3fc = load i32, i32* @r7, align 4
  %v1_d3fc = add i32 %v0_d3fc, 40
  %v1_d400 = inttoptr i32 %v1_d3fc to i8*
  %v2_d400 = call i32 @function_f688(i8* %v1_d400)
  %v3_d404 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_d404, i32* %r3.global-to-local, align 4
  %v1_d408 = add i32 %v3_d404, 1
  store i32 %v1_d408, i32* %r4.global-to-local, align 4
  %v0_d40c = load i32, i32* @fp, align 4
  %v9_d40c = icmp eq i32 %v0_d40c, %v1_d408
  store i1 %v9_d40c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_d408, i32* %stack_var_-40, align 4
  %v8_d414 = icmp sgt i32 %v0_d40c, %v1_d408
  br i1 %v8_d414, label %dec_label_pc_d278, label %dec_label_pc_d418

dec_label_pc_d418:                                ; preds = %bb90
  store i32 %v6_d0e8, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_d420.preheader

dec_label_pc_d420.preheader:                      ; preds = %dec_label_pc_d418, %dec_label_pc_d68c
  %v0_d42018 = phi i32 [ %v0_d40c, %dec_label_pc_d418 ], [ %v0_d18c, %dec_label_pc_d68c ]
  %stack_var_-168.0.ph = phi i32 [ %v1_d1ac, %dec_label_pc_d418 ], [ %v1_d694, %dec_label_pc_d68c ]
  %storemerge = add i32 %v6_d0e8, 20
  store i32 %storemerge, i32* @r8, align 4
  %v3_d5d8 = icmp eq i32 %v6_d124, -1
  %v3_d5f4 = icmp eq i32 %v3_d180, 65535
  %v2_d670 = icmp eq i32 %v1_d110, 0
  br label %dec_label_pc_d420

dec_label_pc_d420:                                ; preds = %dec_label_pc_d4c8, %dec_label_pc_d420.preheader
  %v0_d420 = phi i32 [ %v0_d42018, %dec_label_pc_d420.preheader ], [ %v0_d55c, %dec_label_pc_d4c8 ]
  %v2_d420 = icmp eq i32 %v0_d420, 0
  store i1 %v2_d420, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r1.global-to-local, align 4
  %tmp91 = icmp slt i32 %v0_d420, 1
  br label %dec_label_pc_d428

dec_label_pc_d428:                                ; preds = %dec_label_pc_d428, %dec_label_pc_d420
  br i1 %tmp91, label %dec_label_pc_d428, label %dec_label_pc_d42c

dec_label_pc_d42c:                                ; preds = %dec_label_pc_d428
  %v0_d42c = load i32, i32* @r8, align 4
  %v3_d42c = mul i32 %v0_d42c, 65536
  store i32 %v3_d42c, i32* %r2.global-to-local, align 4
  %tmp92 = mul i32 %v0_d42c, 256
  %v1_d434 = and i32 %tmp92, 65280
  store i32 %v1_d434, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-40, align 4
  %tmp93 = udiv i32 %v0_d42c, 256
  %v4_d440 = urem i32 %tmp93, 256
  %v5_d440 = or i32 %v4_d440, %v1_d434
  store i32 %v5_d440, i32* @sl, align 4
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_d448

dec_label_pc_d448:                                ; preds = %dec_label_pc_d4c8, %dec_label_pc_d42c
  %v1_d45c = phi i32 [ %v1_d558, %dec_label_pc_d4c8 ], [ 0, %dec_label_pc_d42c ]
  %v5_d44c = mul i32 %v1_d45c, 24
  %v1_d450 = load i32, i32* @sb, align 4
  %v2_d450 = add i32 %v1_d450, %v5_d44c
  store i32 %v2_d450, i32* %r3.global-to-local, align 4
  store i32 %v4_cf54, i32* %ip.global-to-local, align 4
  %v1_d458 = add i32 %v2_d450, 20
  %v2_d458 = inttoptr i32 %v1_d458 to i8*
  %v3_d458 = load i8, i8* %v2_d458, align 1
  %v4_d458 = zext i8 %v3_d458 to i32
  store i32 %v4_d458, i32* %r2.global-to-local, align 4
  %v4_d45c = mul i32 %v1_d45c, 4
  %v5_d45c = add i32 %v4_d45c, %v4_cf54
  %v6_d45c = inttoptr i32 %v5_d45c to i32*
  %v7_d45c = load i32, i32* %v6_d45c, align 4
  store i32 %v7_d45c, i32* @r5, align 4
  %v7_d460 = icmp eq i8 %v3_d458, 31
  store i1 %v7_d460, i1* %cpsr_z.global-to-local, align 1
  %v1_d464 = add i32 %v7_d45c, 20
  store i32 %v1_d464, i32* @r6, align 4
  %tmp101 = icmp ult i8 %v3_d458, 32
  br i1 %tmp101, label %dec_label_pc_d57c, label %dec_label_pc_d46c

dec_label_pc_d46c:                                ; preds = %dec_label_pc_d448
  store i32 %v6_d124, i32* %r1.global-to-local, align 4
  store i1 %v3_d5d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_d5d8, label %dec_label_pc_d5e4, label %dec_label_pc_d478

dec_label_pc_d478:                                ; preds = %dec_label_pc_d57c, %dec_label_pc_d46c
  store i32 %v3_d180, i32* %r2.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_d5f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_d5f4, label %dec_label_pc_d600, label %dec_label_pc_d48c

dec_label_pc_d48c:                                ; preds = %dec_label_pc_d5e4.dec_label_pc_d48c_crit_edge, %dec_label_pc_d478
  %v1_d490 = phi i32 [ %v1_d490.pre, %dec_label_pc_d5e4.dec_label_pc_d48c_crit_edge ], [ 65535, %dec_label_pc_d478 ]
  store i32 %v3_d184, i32* %r3.global-to-local, align 4
  %v9_d490 = icmp eq i32 %v3_d184, %v1_d490
  store i1 %v9_d490, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d490, label %dec_label_pc_d61c, label %dec_label_pc_d498

dec_label_pc_d498:                                ; preds = %dec_label_pc_d600.dec_label_pc_d498_crit_edge, %dec_label_pc_d48c
  %v1_d49c = phi i32 [ %v1_d49c.pre, %dec_label_pc_d600.dec_label_pc_d498_crit_edge ], [ %v1_d490, %dec_label_pc_d48c ]
  store i32 %v3_d188, i32* %ip.global-to-local, align 4
  %v9_d49c = icmp eq i32 %v3_d188, %v1_d49c
  store i1 %v9_d49c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d49c, label %dec_label_pc_d638, label %dec_label_pc_d4a4

dec_label_pc_d4a4:                                ; preds = %dec_label_pc_d61c.dec_label_pc_d4a4_crit_edge, %dec_label_pc_d498
  %v1_d4a8 = phi i32 [ %v1_d4a8.pre, %dec_label_pc_d61c.dec_label_pc_d4a4_crit_edge ], [ %v1_d49c, %dec_label_pc_d498 ]
  store i32 %v5_d024, i32* %r1.global-to-local, align 4
  %v9_d4a8 = icmp eq i32 %v5_d024, %v1_d4a8
  store i1 %v9_d4a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d4a8, label %dec_label_pc_d654, label %dec_label_pc_d4b0

dec_label_pc_d4b0:                                ; preds = %dec_label_pc_d638.dec_label_pc_d4b0_crit_edge, %dec_label_pc_d4a4
  %v1_d4b4 = phi i32 [ %v1_d4b4.pre, %dec_label_pc_d638.dec_label_pc_d4b0_crit_edge ], [ %v1_d4a8, %dec_label_pc_d4a4 ]
  store i32 %v6_d040, i32* %r2.global-to-local, align 4
  %v9_d4b4 = icmp eq i32 %v6_d040, %v1_d4b4
  store i1 %v9_d4b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d4b4, label %dec_label_pc_d668, label %dec_label_pc_d4bc

dec_label_pc_d4bc:                                ; preds = %dec_label_pc_d654, %dec_label_pc_d4b0
  store i32 %v1_d110, i32* %r3.global-to-local, align 4
  store i1 %v2_d670, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_d670, label %dec_label_pc_d4c8, label %dec_label_pc_d67c

dec_label_pc_d4c8:                                ; preds = %dec_label_pc_d4bc, %dec_label_pc_d668, %dec_label_pc_d67c
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_d4cc = load i32, i32* @r7, align 4
  %v1_d4cc = trunc i32 %v0_d4cc to i8
  %v2_d4cc = load i32, i32* @r5, align 4
  %v3_d4cc = add i32 %v2_d4cc, 10
  %v4_d4cc = inttoptr i32 %v3_d4cc to i8*
  store i8 %v1_d4cc, i8* %v4_d4cc, align 1
  %v0_d4d0 = load i32, i32* @r7, align 4
  %v1_d4d0 = trunc i32 %v0_d4d0 to i8
  %v2_d4d0 = load i32, i32* @r5, align 4
  %v3_d4d0 = add i32 %v2_d4d0, 11
  %v4_d4d0 = inttoptr i32 %v3_d4d0 to i8*
  store i8 %v1_d4d0, i8* %v4_d4d0, align 1
  %v0_d4d4 = load i32, i32* @r5, align 4
  store i32 %v0_d4d4, i32* @r0, align 4
  %v2_d4d8 = call i32 @function_ddf4(i32 %v0_d4d4, i32 20)
  %v3_d4d8 = trunc i32 %v2_d4d8 to i8
  %v4_d4dc29 = udiv i32 %v2_d4d8, 256
  %v1_d4e0 = trunc i32 %v4_d4dc29 to i8
  %v2_d4e0 = load i32, i32* @r5, align 4
  %v3_d4e0 = add i32 %v2_d4e0, 11
  %v4_d4e0 = inttoptr i32 %v3_d4e0 to i8*
  store i8 %v1_d4e0, i8* %v4_d4e0, align 1
  %v3_d4e4 = load i32, i32* @r5, align 4
  %v4_d4e4 = add i32 %v3_d4e4, 10
  %v5_d4e4 = inttoptr i32 %v4_d4e4 to i8*
  store i8 %v3_d4d8, i8* %v5_d4e4, align 1
  %v0_d4e8 = load i32, i32* @r6, align 4
  store i32 %v0_d4e8, i32* @r1, align 4
  %v0_d4ec = load i32, i32* @sl, align 4
  store i32 %v0_d4ec, i32* %r2.global-to-local, align 4
  %v0_d4f0 = load i32, i32* @r8, align 4
  store i32 %v0_d4f0, i32* %r3.global-to-local, align 4
  %v0_d4f4 = load i32, i32* @r7, align 4
  %v1_d4f4 = trunc i32 %v0_d4f4 to i8
  %v3_d4f4 = add i32 %v0_d4e8, 16
  %v4_d4f4 = inttoptr i32 %v3_d4f4 to i8*
  store i8 %v1_d4f4, i8* %v4_d4f4, align 1
  %v0_d4f8 = load i32, i32* @r7, align 4
  %v1_d4f8 = trunc i32 %v0_d4f8 to i8
  %v2_d4f8 = load i32, i32* @r6, align 4
  %v3_d4f8 = add i32 %v2_d4f8, 17
  %v4_d4f8 = inttoptr i32 %v3_d4f8 to i8*
  store i8 %v1_d4f8, i8* %v4_d4f8, align 1
  %v0_d4fc = load i32, i32* @r5, align 4
  %v4_d500 = call i32 @function_de50(i32 %v0_d4fc, i32 %v0_d4e8, i32 %v0_d4ec, i32 %v0_d4f0)
  %v5_d500 = trunc i32 %v4_d500 to i8
  %v4_d50430 = udiv i32 %v4_d500, 256
  %v1_d508 = trunc i32 %v4_d50430 to i8
  %v2_d508 = load i32, i32* @r6, align 4
  %v3_d508 = add i32 %v2_d508, 17
  %v4_d508 = inttoptr i32 %v3_d508 to i8*
  store i8 %v1_d508, i8* %v4_d508, align 1
  %v3_d50c = load i32, i32* @r6, align 4
  %v4_d50c = add i32 %v3_d50c, 16
  %v5_d50c = inttoptr i32 %v4_d50c to i8*
  store i8 %v5_d500, i8* %v5_d50c, align 1
  %v3_d510 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_d510, i32* %r3.global-to-local, align 4
  %v0_d514 = load i32, i32* @r5, align 4
  %v1_d514 = add i32 %v0_d514, 20
  %v2_d514 = inttoptr i32 %v1_d514 to i32*
  %v3_d514 = load i32, i32* %v2_d514, align 4
  %v3_d51c = udiv i32 %v3_d514, 65536
  store i32 %v3_d51c, i32* %r2.global-to-local, align 4
  %v5_d520 = mul i32 %v3_d510, 24
  %v1_d524 = load i32, i32* @sb, align 4
  %v2_d524 = add i32 %v1_d524, %v5_d520
  store i32 %v2_d524, i32* %ip.global-to-local, align 4
  %v3_d52828 = udiv i32 %v3_d514, 16777216
  %v1_d52c = trunc i32 %v3_d52828 to i8
  %v3_d52c = add i32 %v2_d524, 3
  %v4_d52c = inttoptr i32 %v3_d52c to i8*
  store i8 %v1_d52c, i8* %v4_d52c, align 1
  %v0_d530 = load i32, i32* %r2.global-to-local, align 4
  %v1_d530 = trunc i32 %v0_d530 to i8
  %v2_d530 = load i32, i32* %ip.global-to-local, align 4
  %v3_d530 = add i32 %v2_d530, 2
  %v4_d530 = inttoptr i32 %v3_d530 to i8*
  store i8 %v1_d530, i8* %v4_d530, align 1
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_d538 = load i32, i32* @r5, align 4
  store i32 %v0_d538, i32* %r1.global-to-local, align 4
  store i32 %stack_var_-168.0.ph, i32* %r2.global-to-local, align 4
  store i32 16, i32* %r4.global-to-local, align 4
  %v0_d548 = load i32, i32* %ip.global-to-local, align 4
  %v4_d548 = inttoptr i32 %v0_d548 to %sockaddr*
  %v7_d550 = inttoptr i32 %v0_d538 to i32*
  %v9_d550 = call i32 @sendto(i32 %v3_d138, i32* %v7_d550, i32 %stack_var_-168.0.ph, i32 16384, %sockaddr* %v4_d548, i32 16)
  %v3_d554 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_d554, i32* %r3.global-to-local, align 4
  %v1_d558 = add i32 %v3_d554, 1
  %v0_d55c = load i32, i32* @fp, align 4
  %v9_d55c = icmp eq i32 %v0_d55c, %v1_d558
  store i1 %v9_d55c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_d558, i32* %stack_var_-40, align 4
  %v7_d564 = icmp sgt i32 %v0_d55c, %v1_d558
  br i1 %v7_d564, label %dec_label_pc_d448, label %dec_label_pc_d420

dec_label_pc_d56c:                                ; preds = %dec_label_pc_d148
  %v1_d570 = call i32 @close(i32 %v3_d138)
  br label %dec_label_pc_d574

dec_label_pc_d574:                                ; preds = %dec_label_pc_cf34, %dec_label_pc_d56c
  %v29_d578 = phi i32 [ -1, %dec_label_pc_cf34 ], [ %v1_d570, %dec_label_pc_d56c ]
  store i32 %v3_cf34, i32* %r4.global-to-local, align 4
  ret i32 %v29_d578

dec_label_pc_d57c:                                ; preds = %dec_label_pc_d448
  %v1_d57c = add i32 %v2_d450, 16
  %v2_d57c = inttoptr i32 %v1_d57c to i32*
  %v3_d57c = load i32, i32* %v2_d57c, align 4
  store i32 %v3_d57c, i32* %r4.global-to-local, align 4
  %v0_d580 = call i32 @function_f508()
  %v3_d584 = load i32, i32* %stack_var_-40, align 4
  %v5_d58c = mul i32 %v3_d584, 24
  %v1_d594 = load i32, i32* @sb, align 4
  %v2_d594 = add i32 %v1_d594, %v5_d58c
  store i32 %v2_d594, i32* %r1.global-to-local, align 4
  %v1_d598 = and i32 %v3_d57c, 65280
  store i32 %v1_d598, i32* %r3.global-to-local, align 4
  %v1_d590 = udiv i32 %v3_d57c, 256
  %v3_d59c = and i32 %v1_d590, 65280
  store i32 %v3_d59c, i32* %r2.global-to-local, align 4
  %v3_d5a0 = mul i32 %v3_d57c, 16777216
  store i32 %v3_d5a0, i32* %ip.global-to-local, align 4
  %v1_d5a4 = add i32 %v2_d594, 20
  %v2_d5a4 = inttoptr i32 %v1_d5a4 to i8*
  %v3_d5a4 = load i8, i8* %v2_d5a4, align 1
  %v4_d5a4 = zext i8 %v3_d5a4 to i32
  %v4_d5a8 = mul nuw nsw i32 %v1_d598, 256
  %v5_d5a8 = or i32 %v4_d5a8, %v3_d5a0
  store i32 %v5_d5a8, i32* %ip.global-to-local, align 4
  %v2_d5b0 = call i32 @llvm.bswap.i32(i32 %v3_d57c)
  %v7_d5b4 = lshr i32 %v0_d580, %v4_d5a4
  %v8_d5b4 = add i32 %v7_d5b4, %v2_d5b0
  store i32 %v8_d5b4, i32* %r2.global-to-local, align 4
  %v2_d5d0 = call i32 @llvm.bswap.i32(i32 %v8_d5b4)
  store i32 %v2_d5d0, i32* %r3.global-to-local, align 4
  store i32 %v6_d124, i32* %r1.global-to-local, align 4
  store i1 %v3_d5d8, i1* %cpsr_z.global-to-local, align 1
  %v1_d5dc = load i32, i32* @r5, align 4
  %v2_d5dc = add i32 %v1_d5dc, 16
  %v3_d5dc = inttoptr i32 %v2_d5dc to i32*
  store i32 %v2_d5d0, i32* %v3_d5dc, align 4
  br i1 %v3_d5d8, label %dec_label_pc_d5e4, label %dec_label_pc_d478

dec_label_pc_d5e4:                                ; preds = %dec_label_pc_d57c, %dec_label_pc_d46c
  %v0_d5e4 = call i32 @function_f508()
  store i32 %v3_d180, i32* %r2.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_d5f4, i1* %cpsr_z.global-to-local, align 1
  %v1_d5f8 = load i32, i32* @r5, align 4
  %v2_d5f8 = add i32 %v1_d5f8, 12
  %v3_d5f8 = inttoptr i32 %v2_d5f8 to i32*
  store i32 %v0_d5e4, i32* %v3_d5f8, align 4
  br i1 %v3_d5f4, label %dec_label_pc_d600, label %dec_label_pc_d5e4.dec_label_pc_d48c_crit_edge

dec_label_pc_d5e4.dec_label_pc_d48c_crit_edge:    ; preds = %dec_label_pc_d5e4
  %v1_d490.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_d48c

dec_label_pc_d600:                                ; preds = %dec_label_pc_d5e4, %dec_label_pc_d478
  %v0_d600 = call i32 @function_f508()
  %v1_d600 = trunc i32 %v0_d600 to i8
  %v4_d60431 = udiv i32 %v0_d600, 256
  %v1_d608 = trunc i32 %v4_d60431 to i8
  %v2_d608 = load i32, i32* @r5, align 4
  %v3_d608 = add i32 %v2_d608, 5
  %v4_d608 = inttoptr i32 %v3_d608 to i8*
  store i8 %v1_d608, i8* %v4_d608, align 1
  store i32 %v3_d184, i32* %r3.global-to-local, align 4
  %v1_d610 = load i32, i32* @r4, align 4
  %v9_d610 = icmp eq i32 %v3_d184, %v1_d610
  store i1 %v9_d610, i1* %cpsr_z.global-to-local, align 1
  %v3_d614 = load i32, i32* @r5, align 4
  %v4_d614 = add i32 %v3_d614, 4
  %v5_d614 = inttoptr i32 %v4_d614 to i8*
  store i8 %v1_d600, i8* %v5_d614, align 1
  %v0_d618 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d618, label %dec_label_pc_d61c, label %dec_label_pc_d600.dec_label_pc_d498_crit_edge

dec_label_pc_d600.dec_label_pc_d498_crit_edge:    ; preds = %dec_label_pc_d600
  %v1_d49c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_d498

dec_label_pc_d61c:                                ; preds = %dec_label_pc_d600, %dec_label_pc_d48c
  %v0_d61c = call i32 @function_f508()
  %v1_d61c = trunc i32 %v0_d61c to i8
  store i32 %v3_d188, i32* %ip.global-to-local, align 4
  %v4_d624 = sdiv i32 %v0_d61c, 256
  store i32 %v4_d624, i32* %r3.global-to-local, align 4
  %v1_d628 = load i32, i32* @r4, align 4
  %v9_d628 = icmp eq i32 %v3_d188, %v1_d628
  store i1 %v9_d628, i1* %cpsr_z.global-to-local, align 1
  %v3_d62c = load i32, i32* @r5, align 4
  %v4_d62c = add i32 %v3_d62c, 20
  %v5_d62c = inttoptr i32 %v4_d62c to i8*
  store i8 %v1_d61c, i8* %v5_d62c, align 1
  %v0_d630 = load i32, i32* %r3.global-to-local, align 4
  %v1_d630 = trunc i32 %v0_d630 to i8
  %v2_d630 = load i32, i32* @r6, align 4
  %v3_d630 = add i32 %v2_d630, 1
  %v4_d630 = inttoptr i32 %v3_d630 to i8*
  store i8 %v1_d630, i8* %v4_d630, align 1
  %v0_d634 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d634, label %dec_label_pc_d638, label %dec_label_pc_d61c.dec_label_pc_d4a4_crit_edge

dec_label_pc_d61c.dec_label_pc_d4a4_crit_edge:    ; preds = %dec_label_pc_d61c
  %v1_d4a8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_d4a4

dec_label_pc_d638:                                ; preds = %dec_label_pc_d61c, %dec_label_pc_d498
  %v0_d638 = call i32 @function_f508()
  %v1_d638 = trunc i32 %v0_d638 to i8
  store i32 %v5_d024, i32* %r1.global-to-local, align 4
  %v4_d640 = sdiv i32 %v0_d638, 256
  store i32 %v4_d640, i32* %r3.global-to-local, align 4
  %v1_d644 = load i32, i32* @r4, align 4
  %v9_d644 = icmp eq i32 %v5_d024, %v1_d644
  store i1 %v9_d644, i1* %cpsr_z.global-to-local, align 1
  %v1_d648 = trunc i32 %v4_d640 to i8
  %v2_d648 = load i32, i32* @r6, align 4
  %v3_d648 = add i32 %v2_d648, 3
  %v4_d648 = inttoptr i32 %v3_d648 to i8*
  store i8 %v1_d648, i8* %v4_d648, align 1
  %v3_d64c = load i32, i32* @r6, align 4
  %v4_d64c = add i32 %v3_d64c, 2
  %v5_d64c = inttoptr i32 %v4_d64c to i8*
  store i8 %v1_d638, i8* %v5_d64c, align 1
  %v0_d650 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d650, label %dec_label_pc_d654, label %dec_label_pc_d638.dec_label_pc_d4b0_crit_edge

dec_label_pc_d638.dec_label_pc_d4b0_crit_edge:    ; preds = %dec_label_pc_d638
  %v1_d4b4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_d4b0

dec_label_pc_d654:                                ; preds = %dec_label_pc_d638, %dec_label_pc_d4a4
  %v0_d654 = call i32 @function_f508()
  store i32 %v6_d040, i32* %r2.global-to-local, align 4
  %v1_d65c = load i32, i32* @r4, align 4
  %v9_d65c = icmp eq i32 %v6_d040, %v1_d65c
  store i1 %v9_d65c, i1* %cpsr_z.global-to-local, align 1
  %v1_d660 = load i32, i32* @r6, align 4
  %v2_d660 = add i32 %v1_d660, 4
  %v3_d660 = inttoptr i32 %v2_d660 to i32*
  store i32 %v0_d654, i32* %v3_d660, align 4
  br i1 %v9_d65c, label %dec_label_pc_d668, label %dec_label_pc_d4bc

dec_label_pc_d668:                                ; preds = %dec_label_pc_d654, %dec_label_pc_d4b0
  %v0_d668 = call i32 @function_f508()
  store i32 %v1_d110, i32* %r3.global-to-local, align 4
  store i1 %v2_d670, i1* %cpsr_z.global-to-local, align 1
  %v1_d674 = load i32, i32* @r6, align 4
  %v2_d674 = add i32 %v1_d674, 8
  %v3_d674 = inttoptr i32 %v2_d674 to i32*
  store i32 %v0_d668, i32* %v3_d674, align 4
  br i1 %v2_d670, label %dec_label_pc_d4c8, label %dec_label_pc_d67c

dec_label_pc_d67c:                                ; preds = %dec_label_pc_d4bc, %dec_label_pc_d668
  %v0_d67c = load i32, i32* @r5, align 4
  %v1_d67c = add i32 %v0_d67c, 40
  store i32 %v6_d0e8, i32* @r1, align 4
  %v1_d684 = inttoptr i32 %v1_d67c to i8*
  %v2_d684 = call i32 @function_f688(i8* %v1_d684)
  br label %dec_label_pc_d4c8

dec_label_pc_d68c:                                ; preds = %dec_label_pc_d170
  store i32 %v6_d0e8, i32* %r3.global-to-local, align 4
  %v1_d694 = add i32 %v6_d0e8, 40
  store i32 %v1_d694, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_d420.preheader

; uselistorder directives
  uselistorder i32 %v1_d694, { 1, 0 }
  uselistorder i32 %v4_d640, { 1, 0 }
  uselistorder i32 %v2_d5d0, { 1, 0 }
  uselistorder i32 %v3_d5a0, { 1, 0 }
  uselistorder i32 %v3_d57c, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_d55c, { 1, 2, 0 }
  uselistorder i32 %v1_d558, { 2, 0, 3, 1 }
  uselistorder i32 %v0_d4e8, { 1, 0, 2 }
  uselistorder i32 %v0_d42c, { 2, 0, 1 }
  uselistorder i32 %v0_d420, { 1, 0 }
  uselistorder i1 %v2_d670, { 2, 3, 1, 0 }
  uselistorder i1 %v3_d5f4, { 1, 0, 2, 3 }
  uselistorder i1 %v3_d5d8, { 3, 2, 1, 0 }
  uselistorder i32 %v1_d408, { 1, 0, 2, 3 }
  uselistorder i8 %v5_d26c, { 1, 0 }
  uselistorder i32 %v1_d234, { 1, 0 }
  uselistorder i32 %v1_d230, { 1, 0 }
  uselistorder i32 %v1_d22c, { 1, 0 }
  uselistorder i32 %v1_d208, { 1, 0 }
  uselistorder i32 %v1_d204, { 1, 0 }
  uselistorder i32 %v1_d200, { 1, 0 }
  uselistorder i32 %v1_d1f4, { 1, 0 }
  uselistorder i32 %v1_d1d0, { 1, 0 }
  uselistorder i32 %v1_d1c0, { 1, 0 }
  uselistorder i32 %v1_d1ac, { 3, 0, 2, 1 }
  uselistorder i32 %v0_d18c, { 1, 0, 2 }
  uselistorder i32 %v3_d180, { 0, 1, 3, 2 }
  uselistorder i32 %v0_d174, { 3, 0, 1, 2 }
  uselistorder i32 %v0_d170, { 0, 2, 1, 3 }
  uselistorder i32 %v3_d138, { 1, 2, 0, 3 }
  uselistorder i32 %v6_d124, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v1_d110, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v6_d0e8, { 5, 4, 3, 0, 1, 2, 6 }
  uselistorder i32 %v6_d040, { 3, 2, 1, 0 }
  uselistorder i32 %v5_d024, { 2, 5, 4, 3, 1, 0 }
  uselistorder i32 %v1_cfd4, { 1, 0 }
  uselistorder i32 %v6_cf6c, { 1, 0 }
  uselistorder i32 %v4_cf54, { 0, 3, 1, 2 }
  uselistorder i32 %v1_cf38, { 1, 0 }
  uselistorder i32* %stack_var_-40, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 12, 11 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 29, 30, 32, 33, 34, 35, 36, 37, 38, 40, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 37, 36, 39, 38, 0 }
  uselistorder label %dec_label_pc_d67c, { 1, 0 }
  uselistorder label %dec_label_pc_d574, { 1, 0 }
  uselistorder label %dec_label_pc_d4c8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d420.preheader, { 1, 0 }
  uselistorder label %bb90, { 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %bb87, { 1, 0 }
  uselistorder label %bb85, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_d6a8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_d6a8:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_d6a8 = load i32, i32* @r4, align 4
  %v6_d6a8 = load i32, i32* @r5, align 4
  %v9_d6a8 = load i32, i32* @r6, align 4
  %v12_d6a8 = load i32, i32* @r7, align 4
  %v1_d6ac = urem i32 %arg1, 256
  store i32 %v1_d6ac, i32* @sl, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 %v1_d6ac, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  %v1_d6c4 = urem i32 %arg3, 256
  store i32 %v1_d6c4, i32* @r4, align 4
  %v2_d6c8 = call i32* @calloc(i32 %v1_d6ac, i32 4)
  %v3_d6c8 = ptrtoint i32* %v2_d6c8 to i32
  %v0_d6cc = load i32, i32* @r5, align 4
  store i32 %v0_d6cc, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v3_d6c8, i32* %fp.global-to-local, align 4
  %v0_d6dc = load i32, i32* @r4, align 4
  store i32 %v0_d6dc, i32* %r0.global-to-local, align 4
  %v4_d6e0 = inttoptr i32 %v0_d6cc to i32*
  %v5_d6e0 = call i32 @function_92dc(i32 %v0_d6dc, i32* %v4_d6e0, i32 2, i32 0)
  %v1_d6ec = urem i32 %v5_d6e0, 256
  store i32 %v1_d6ec, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_d6f8 = load i32, i32* @r5, align 4
  store i32 %v0_d6f8, i32* %r1.global-to-local, align 4
  %v0_d6fc = load i32, i32* @r4, align 4
  store i32 %v0_d6fc, i32* %r0.global-to-local, align 4
  %v5_d700 = trunc i32 %v5_d6e0 to i8
  %v6_d704 = inttoptr i32 %v0_d6f8 to i32*
  %v7_d704 = call i32 @function_92dc(i32 %v0_d6fc, i32* %v6_d704, i32 3, i32 65535)
  %v0_d708 = load i32, i32* @r5, align 4
  store i32 %v0_d708, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_d718 = load i32, i32* @r4, align 4
  store i32 %v0_d718, i32* %r0.global-to-local, align 4
  %v5_d71c = inttoptr i32 %v0_d708 to i32*
  %v6_d71c = call i32 @function_92dc(i32 %v0_d718, i32* %v5_d71c, i32 4, i32 64)
  %v1_d724 = urem i32 %v6_d71c, 256
  store i32 %v1_d724, i32* %ip.global-to-local, align 4
  %v0_d728 = load i32, i32* @r5, align 4
  store i32 %v0_d728, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_d734 = load i32, i32* @r4, align 4
  store i32 %v0_d734, i32* %r0.global-to-local, align 4
  %v6_d73c = inttoptr i32 %v0_d728 to i32*
  %v7_d73c = call i32 @function_92dc(i32 %v0_d734, i32* %v6_d73c, i32 5, i32 1)
  %v1_d748 = urem i32 %v7_d73c, 256
  store i32 %v1_d748, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_d754 = load i32, i32* @r5, align 4
  store i32 %v0_d754, i32* %r1.global-to-local, align 4
  %v0_d758 = load i32, i32* @r4, align 4
  store i32 %v0_d758, i32* %r0.global-to-local, align 4
  %v5_d760 = inttoptr i32 %v0_d754 to i32*
  %v6_d760 = call i32 @function_92dc(i32 %v0_d758, i32* %v5_d760, i32 6, i32 65535)
  %v0_d768 = load i32, i32* @r5, align 4
  store i32 %v0_d768, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_d760, i32* @r7, align 4
  %v0_d778 = load i32, i32* @r4, align 4
  store i32 %v0_d778, i32* %r0.global-to-local, align 4
  %v4_d77c = inttoptr i32 %v0_d768 to i32*
  %v5_d77c = call i32 @function_92dc(i32 %v0_d778, i32* %v4_d77c, i32 7, i32 65535)
  %v0_d784 = load i32, i32* @r5, align 4
  store i32 %v0_d784, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 %v5_d77c, i32* @r6, align 4
  %v0_d794 = load i32, i32* @r4, align 4
  store i32 %v0_d794, i32* %r0.global-to-local, align 4
  %v4_d798 = inttoptr i32 %v0_d784 to i32*
  %v5_d798 = call i32 @function_92dc(i32 %v0_d794, i32* %v4_d798, i32 17, i32 65535)
  %v0_d79c = load i32, i32* @r5, align 4
  store i32 %v0_d79c, i32* %r1.global-to-local, align 4
  store i32 18, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_d7ac = load i32, i32* @r4, align 4
  store i32 %v0_d7ac, i32* %r0.global-to-local, align 4
  %v5_d7b0 = inttoptr i32 %v0_d79c to i32*
  %v6_d7b0 = call i32 @function_92dc(i32 %v0_d7ac, i32* %v5_d7b0, i32 18, i32 0)
  %v0_d7b4 = load i32, i32* @r5, align 4
  store i32 %v0_d7b4, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_d7c4 = load i32, i32* @r4, align 4
  store i32 %v0_d7c4, i32* %r0.global-to-local, align 4
  %v5_d7c8 = inttoptr i32 %v0_d7b4 to i32*
  %v6_d7c8 = call i32 @function_92dc(i32 %v0_d7c4, i32* %v5_d7c8, i32 11, i32 0)
  %v0_d7cc = load i32, i32* @r5, align 4
  store i32 %v0_d7cc, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_d7dc = load i32, i32* @r4, align 4
  store i32 %v0_d7dc, i32* %r0.global-to-local, align 4
  %v5_d7e0 = inttoptr i32 %v0_d7cc to i32*
  %v6_d7e0 = call i32 @function_92dc(i32 %v0_d7dc, i32* %v5_d7e0, i32 12, i32 0)
  %v0_d7e4 = load i32, i32* @r5, align 4
  store i32 %v0_d7e4, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_d7f4 = load i32, i32* @r4, align 4
  store i32 %v0_d7f4, i32* %r0.global-to-local, align 4
  %v5_d7f8 = inttoptr i32 %v0_d7e4 to i32*
  %v6_d7f8 = call i32 @function_92dc(i32 %v0_d7f4, i32* %v5_d7f8, i32 13, i32 0)
  %v0_d7fc = load i32, i32* @r5, align 4
  store i32 %v0_d7fc, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_d80c = load i32, i32* @r4, align 4
  store i32 %v0_d80c, i32* %r0.global-to-local, align 4
  %v5_d810 = inttoptr i32 %v0_d7fc to i32*
  %v6_d810 = call i32 @function_92dc(i32 %v0_d80c, i32* %v5_d810, i32 14, i32 0)
  %v0_d814 = load i32, i32* @r5, align 4
  store i32 %v0_d814, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_d824 = load i32, i32* @r4, align 4
  store i32 %v0_d824, i32* %r0.global-to-local, align 4
  %v5_d828 = inttoptr i32 %v0_d814 to i32*
  %v6_d828 = call i32 @function_92dc(i32 %v0_d824, i32* %v5_d828, i32 15, i32 1)
  %v0_d82c = load i32, i32* @r5, align 4
  store i32 %v0_d82c, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_d83c = load i32, i32* @r4, align 4
  store i32 %v0_d83c, i32* %r0.global-to-local, align 4
  %v5_d840 = inttoptr i32 %v0_d82c to i32*
  %v6_d840 = call i32 @function_92dc(i32 %v0_d83c, i32* %v5_d840, i32 16, i32 0)
  %v2_d84c = load i32, i32* @global_var_1bd28.110, align 4
  store i32 %v2_d84c, i32* %r3.global-to-local, align 4
  %v0_d850 = load i32, i32* @r5, align 4
  store i32 %v0_d850, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_d858 = load i32, i32* @r4, align 4
  store i32 %v0_d858, i32* %r0.global-to-local, align 4
  %v5_d85c = inttoptr i32 %v0_d850 to i32*
  %v6_d85c = call i32 @function_9270(i32 %v0_d858, i32* %v5_d85c, i32 25, i32 %v2_d84c, i32 %v6_d840)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_d870 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_d870, i32* %r0.global-to-local, align 4
  %v2_d874 = icmp eq i32 %v3_d870, -1
  store i1 %v2_d874, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_d870, i32* %sb.global-to-local, align 4
  br i1 %v2_d874, label %dec_label_pc_dde8, label %dec_label_pc_d880

dec_label_pc_d880:                                ; preds = %dec_label_pc_d6a8
  store i32 1, i32* %stack_var_-40, align 4
  %v6_d888 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_d888, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v6_d89c = call i32 @setsockopt(i32 0, i32 3, i32 %v6_d888, i32* nonnull %stack_var_-40, i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_d89c, i32* %r0.global-to-local, align 4
  %v2_d8a0 = icmp eq i32 %v6_d89c, -1
  store i1 %v2_d8a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_d8a0, label %dec_label_pc_dde0, label %dec_label_pc_d8a8

dec_label_pc_d8a8:                                ; preds = %dec_label_pc_d880
  %v3_d8ac = mul i32 %v7_d704, 65536
  store i32 %v3_d8ac, i32* %r4.global-to-local, align 4
  %v3_d8b0 = urem i32 %v7_d704, 65536
  %v0_d8c0 = load i32, i32* @r7, align 4
  %v3_d8c0 = mul i32 %v0_d8c0, 65536
  store i32 %v3_d8c0, i32* %r0.global-to-local, align 4
  %v0_d8c4 = load i32, i32* @r6, align 4
  %v3_d8c4 = mul i32 %v0_d8c4, 65536
  store i32 %v3_d8c4, i32* %r5.global-to-local, align 4
  store i32 0, i32* %stack_var_-40, align 4
  %v3_d8cc = urem i32 %v0_d8c0, 65536
  store i32 %v3_d8cc, i32* %ip.global-to-local, align 4
  %v3_d8d0 = urem i32 %v0_d8c4, 65536
  store i32 %v3_d8d0, i32* %r2.global-to-local, align 4
  %v1_d8d4 = urem i32 %v6_d7c8, 256
  store i32 %v1_d8d4, i32* %r3.global-to-local, align 4
  %v0_d8d8 = load i32, i32* @sl, align 4
  %v2_d8d8 = icmp eq i32 %v0_d8d8, 0
  store i1 %v2_d8d8, i1* %cpsr_z.global-to-local, align 1
  %tmp70 = icmp slt i32 %v0_d8d8, 1
  br i1 %tmp70, label %dec_label_pc_db8c, label %dec_label_pc_d8ec

dec_label_pc_d8ec:                                ; preds = %dec_label_pc_d8a8
  %v1_d904 = urem i32 %v0_d8c4, 256
  %tmp71 = udiv i32 %v0_d8c0, 256
  %v3_d908 = urem i32 %tmp71, 256
  %v1_d90c = urem i32 %v0_d8c0, 256
  %v4_d910 = mul nuw nsw i32 %v1_d90c, 256
  %v5_d910 = or i32 %v4_d910, %v3_d908
  store i32 %v5_d910, i32* %r7.global-to-local, align 4
  %tmp72 = udiv i32 %v7_d704, 256
  %tmp73 = mul i32 %v5_d798, 256
  %v1_d92c = and i32 %tmp73, 65280
  %v1_d930 = urem i32 %v6_d7c8, 2
  %v3_d934 = mul nuw nsw i32 %v1_d904, 256
  store i32 %v3_d934, i32* %r1.global-to-local, align 4
  %v5_d938 = trunc i32 %tmp72 to i8
  %tmp74 = udiv i32 %v0_d8c4, 256
  %v4_d93c = urem i32 %tmp74, 256
  %v5_d93c = or i32 %v4_d93c, %v3_d934
  store i32 %v5_d93c, i32* %r6.global-to-local, align 4
  %v1_d940 = urem i32 %v6_d7e0, 2
  %v1_d944 = urem i32 %v6_d7f8, 2
  %tmp75 = udiv i32 %v5_d798, 256
  %v4_d948 = urem i32 %tmp75, 256
  %v5_d948 = or i32 %v4_d948, %v1_d92c
  store i32 %v5_d948, i32* %r5.global-to-local, align 4
  %v1_d968 = urem i32 %v6_d810, 2
  %v1_d96c = urem i32 %v6_d828, 2
  %v1_d978 = urem i32 %v6_d840, 2
  store i32 %v1_d978, i32* %r0.global-to-local, align 4
  %v3_d97c = udiv i32 %v7_d704, 65536
  store i32 %v3_d97c, i32* %r2.global-to-local, align 4
  store i32 %v1_d90c, i32* %r3.global-to-local, align 4
  store i32 %v1_d904, i32* %ip.global-to-local, align 4
  %v5_d994 = trunc i32 %v0_d8c4 to i8
  store i32 0, i32* %r4.global-to-local, align 4
  %sext = mul i32 %v6_d71c, 16777216
  %v4_d9e4 = sdiv i32 %sext, 16777216
  %tmp = sub nsw i32 0, %v1_d930
  %v4_da58 = and i32 %tmp, 32
  %tmp79 = sub nsw i32 0, %v1_d940
  %v4_da6c = and i32 %tmp79, 16
  %tmp80 = sub nsw i32 0, %v1_d944
  %v4_da80 = and i32 %tmp80, 8
  %tmp81 = sub nsw i32 0, %v1_d968
  %v4_da94 = and i32 %tmp81, 4
  %tmp82 = sub nsw i32 0, %v1_d96c
  %v3_daa8 = and i32 %tmp82, 2
  %v7_dad8 = sext i8 %v5_d994 to i32
  %sext78 = mul i32 %v0_d8c0, 16777216
  %v3_dad8 = sdiv i32 %sext78, 16777216
  br label %dec_label_pc_d99c

dec_label_pc_d99c:                                ; preds = %bb77, %dec_label_pc_d8ec
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 128, i32* %r0.global-to-local, align 4
  %v2_d9a4 = call i32* @calloc(i32 128, i32 1)
  %v4_d9a4 = ptrtoint i32* %v2_d9a4 to i32
  store i32 %v4_d9a4, i32* %r0.global-to-local, align 4
  %v3_d9a8 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_d9a8, i32* %r2.global-to-local, align 4
  %v1_d9ac = load i32, i32* %fp.global-to-local, align 4
  %v2_d9ac = load i32, i32* %r4.global-to-local, align 4
  %v5_d9ac = mul i32 %v2_d9ac, 4
  %v6_d9ac = add i32 %v5_d9ac, %v1_d9ac
  %v7_d9ac = inttoptr i32 %v6_d9ac to i32*
  store i32 %v4_d9a4, i32* %v7_d9ac, align 4
  %v0_d9b0 = load i32, i32* %fp.global-to-local, align 4
  %v1_d9b0 = load i32, i32* %r2.global-to-local, align 4
  %v4_d9b0 = mul i32 %v1_d9b0, 4
  %v5_d9b0 = add i32 %v4_d9b0, %v0_d9b0
  %v6_d9b0 = inttoptr i32 %v5_d9b0 to i32*
  %v7_d9b0 = load i32, i32* %v6_d9b0, align 4
  store i32 %v7_d9b0, i32* %r4.global-to-local, align 4
  %v1_d9b4 = inttoptr i32 %v7_d9b0 to i8*
  %v2_d9b4 = load i8, i8* %v1_d9b4, align 1
  %tmp83 = urem i8 %v2_d9b4, 16
  %v1_d9b8 = zext i8 %tmp83 to i32
  %v1_d9bc = or i32 %v1_d9b8, 64
  store i32 %v1_d9bc, i32* %r3.global-to-local, align 4
  %v1_d9c0 = trunc i32 %v1_d9bc to i8
  store i8 %v1_d9c0, i8* %v1_d9b4, align 1
  %v0_d9c4 = load i32, i32* %r4.global-to-local, align 4
  %v1_d9c4 = inttoptr i32 %v0_d9c4 to i8*
  %v2_d9c4 = load i8, i8* %v1_d9c4, align 1
  %v1_d9c8 = and i8 %v2_d9c4, -16
  %v1_d9cc = or i8 %v1_d9c8, 5
  store i32 %v1_d748, i32* %r0.global-to-local, align 4
  store i8 %v1_d9cc, i8* %v1_d9c4, align 1
  %v2_d9dc = load i32, i32* %r4.global-to-local, align 4
  %v3_d9dc = add i32 %v2_d9dc, 1
  %v4_d9dc = inttoptr i32 %v3_d9dc to i8*
  store i8 %v5_d700, i8* %v4_d9dc, align 1
  store i32 %v4_d9e4, i32* %r2.global-to-local, align 4
  %v2_d9e8 = load i32, i32* %r4.global-to-local, align 4
  %v3_d9e8 = add i32 %v2_d9e8, 4
  %v4_d9e8 = inttoptr i32 %v3_d9e8 to i8*
  store i8 %v5_d938, i8* %v4_d9e8, align 1
  store i32 6, i32* %ip.global-to-local, align 4
  %v0_d9f4 = load i32, i32* %r0.global-to-local, align 4
  %v2_d9f4 = icmp eq i32 %v0_d9f4, 0
  store i1 %v2_d9f4, i1* %cpsr_z.global-to-local, align 1
  %v2_d9f8 = load i32, i32* %r4.global-to-local, align 4
  %v3_d9f8 = add i32 %v2_d9f8, 3
  %v4_d9f8 = inttoptr i32 %v3_d9f8 to i8*
  store i8 60, i8* %v4_d9f8, align 1
  store i32 %v3_d97c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_da04 = load i32, i32* %r2.global-to-local, align 4
  %v1_da04 = trunc i32 %v0_da04 to i8
  %v2_da04 = load i32, i32* %r4.global-to-local, align 4
  %v3_da04 = add i32 %v2_da04, 8
  %v4_da04 = inttoptr i32 %v3_da04 to i8*
  store i8 %v1_da04, i8* %v4_da04, align 1
  %v0_da08 = load i32, i32* %ip.global-to-local, align 4
  %v1_da08 = trunc i32 %v0_da08 to i8
  %v2_da08 = load i32, i32* %r4.global-to-local, align 4
  %v3_da08 = add i32 %v2_da08, 9
  %v4_da08 = inttoptr i32 %v3_da08 to i8*
  store i8 %v1_da08, i8* %v4_da08, align 1
  %v0_da0c = load i32, i32* %r3.global-to-local, align 4
  %v1_da0c = trunc i32 %v0_da0c to i8
  %v2_da0c = load i32, i32* %r4.global-to-local, align 4
  %v3_da0c = add i32 %v2_da0c, 2
  %v4_da0c = inttoptr i32 %v3_da0c to i8*
  store i8 %v1_da0c, i8* %v4_da0c, align 1
  %v3_da10 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_da10, i32* %r2.global-to-local, align 4
  %v0_da14 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_da14, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_d99c
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_da18 = load i32, i32* %r4.global-to-local, align 4
  %v4_da18 = add i32 %v3_da18, 6
  %v5_da18 = inttoptr i32 %v4_da18 to i8*
  store i8 64, i8* %v5_da18, align 1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_d99c, %bb
  %v0_da1c = load i32, i32* %r0.global-to-local, align 4
  %v1_da1c = trunc i32 %v0_da1c to i8
  %v2_da1c = load i32, i32* %r4.global-to-local, align 4
  %v3_da1c = add i32 %v2_da1c, 5
  %v4_da1c = inttoptr i32 %v3_da1c to i8*
  store i8 %v1_da1c, i8* %v4_da1c, align 1
  %v0_da20 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_da20, label %.thread10, label %bb76

.thread10:                                        ; preds = %.thread
  store i32 %v6_d85c, i32* %r0.global-to-local, align 4
  br label %bb77

bb76:                                             ; preds = %.thread
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v6_d85c, i32* %r0.global-to-local, align 4
  %v3_da28 = load i32, i32* %r4.global-to-local, align 4
  %v4_da28 = add i32 %v3_da28, 7
  %v5_da28 = inttoptr i32 %v4_da28 to i8*
  store i8 0, i8* %v5_da28, align 1
  %v0_da30.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb77

bb77:                                             ; preds = %.thread10, %bb76
  %v0_da30 = phi i32 [ %v6_d85c, %.thread10 ], [ %v0_da30.pre, %bb76 ]
  %v0_da2c = load i32, i32* %r2.global-to-local, align 4
  %v3_da2c = mul i32 %v0_da2c, 32
  store i32 %v3_da2c, i32* %r3.global-to-local, align 4
  %v1_da30 = load i32, i32* %r4.global-to-local, align 4
  %v2_da30 = add i32 %v1_da30, 12
  %v3_da30 = inttoptr i32 %v2_da30 to i32*
  store i32 %v0_da30, i32* %v3_da30, align 4
  %v0_da34 = load i32, i32* %r3.global-to-local, align 4
  %v1_da34 = load i32, i32* %r2.global-to-local, align 4
  %tmp84 = mul i32 %v1_da34, -8
  %v5_da34 = add i32 %v0_da34, %tmp84
  %v1_da38 = load i32, i32* @r8, align 4
  %v2_da38 = add i32 %v1_da38, %v5_da34
  store i32 %v2_da38, i32* %r3.global-to-local, align 4
  %v1_da3c = add i32 %v2_da38, 16
  %v2_da3c = inttoptr i32 %v1_da3c to i32*
  %v3_da3c = load i32, i32* %v2_da3c, align 4
  store i32 %v3_da3c, i32* %r2.global-to-local, align 4
  %v0_da40 = load i32, i32* %r7.global-to-local, align 4
  %v1_da40 = trunc i32 %v0_da40 to i8
  %v2_da40 = load i32, i32* %r4.global-to-local, align 4
  %v3_da40 = add i32 %v2_da40, 20
  %v4_da40 = inttoptr i32 %v3_da40 to i8*
  store i8 %v1_da40, i8* %v4_da40, align 1
  %v0_da44 = load i32, i32* %r2.global-to-local, align 4
  %v1_da44 = load i32, i32* %r4.global-to-local, align 4
  %v2_da44 = add i32 %v1_da44, 16
  %v3_da44 = inttoptr i32 %v2_da44 to i32*
  store i32 %v0_da44, i32* %v3_da44, align 4
  %v0_da48 = load i32, i32* %r4.global-to-local, align 4
  %v1_da48 = add i32 %v0_da48, 20
  store i32 %v1_da48, i32* %r1.global-to-local, align 4
  %v1_da4c = add i32 %v0_da48, 33
  %v2_da4c = inttoptr i32 %v1_da4c to i8*
  %v3_da4c = load i8, i8* %v2_da4c, align 1
  %v4_da4c = zext i8 %v3_da4c to i32
  store i32 %v1_d930, i32* %r2.global-to-local, align 4
  %v1_da54 = and i32 %v4_da4c, 223
  %v5_da58 = or i32 %v1_da54, %v4_da58
  store i32 %v5_da58, i32* %r3.global-to-local, align 4
  %v1_da5c = trunc i32 %v5_da58 to i8
  store i8 %v1_da5c, i8* %v2_da4c, align 1
  %v0_da60 = load i32, i32* %r1.global-to-local, align 4
  %v1_da60 = add i32 %v0_da60, 13
  %v2_da60 = inttoptr i32 %v1_da60 to i8*
  %v3_da60 = load i8, i8* %v2_da60, align 1
  %v4_da60 = zext i8 %v3_da60 to i32
  store i32 %v1_d940, i32* %r3.global-to-local, align 4
  %v1_da68 = and i32 %v4_da60, 239
  %v5_da6c = or i32 %v1_da68, %v4_da6c
  store i32 %v5_da6c, i32* %r2.global-to-local, align 4
  %v1_da70 = trunc i32 %v5_da6c to i8
  store i8 %v1_da70, i8* %v2_da60, align 1
  %v0_da74 = load i32, i32* %r1.global-to-local, align 4
  %v1_da74 = add i32 %v0_da74, 13
  %v2_da74 = inttoptr i32 %v1_da74 to i8*
  %v3_da74 = load i8, i8* %v2_da74, align 1
  %v4_da74 = zext i8 %v3_da74 to i32
  store i32 %v1_d944, i32* %ip.global-to-local, align 4
  %v1_da7c = and i32 %v4_da74, 247
  %v5_da80 = or i32 %v1_da7c, %v4_da80
  store i32 %v5_da80, i32* %r3.global-to-local, align 4
  %v1_da84 = trunc i32 %v5_da80 to i8
  store i8 %v1_da84, i8* %v2_da74, align 1
  %v0_da88 = load i32, i32* %r1.global-to-local, align 4
  %v1_da88 = add i32 %v0_da88, 13
  %v2_da88 = inttoptr i32 %v1_da88 to i8*
  %v3_da88 = load i8, i8* %v2_da88, align 1
  %v4_da88 = zext i8 %v3_da88 to i32
  store i32 %v1_d968, i32* %r0.global-to-local, align 4
  %v1_da90 = and i32 %v4_da88, 251
  %v5_da94 = or i32 %v1_da90, %v4_da94
  store i32 %v5_da94, i32* %r2.global-to-local, align 4
  %v1_da98 = trunc i32 %v5_da94 to i8
  store i8 %v1_da98, i8* %v2_da88, align 1
  %v0_da9c = load i32, i32* %r1.global-to-local, align 4
  %v1_da9c = add i32 %v0_da9c, 13
  %v2_da9c = inttoptr i32 %v1_da9c to i8*
  %v3_da9c = load i8, i8* %v2_da9c, align 1
  %v4_da9c = zext i8 %v3_da9c to i32
  store i32 %v1_d96c, i32* %r2.global-to-local, align 4
  %v1_daa4 = and i32 %v4_da9c, 253
  %v4_daa8 = or i32 %v1_daa4, %v3_daa8
  store i32 %v4_daa8, i32* %r3.global-to-local, align 4
  %v1_daac = trunc i32 %v4_daa8 to i8
  store i8 %v1_daac, i8* %v2_da9c, align 1
  %v0_dab0 = load i32, i32* %r1.global-to-local, align 4
  %v1_dab0 = add i32 %v0_dab0, 12
  %v2_dab0 = inttoptr i32 %v1_dab0 to i8*
  %v3_dab0 = load i8, i8* %v2_dab0, align 1
  %v4_dab0 = zext i8 %v3_dab0 to i32
  store i32 %v4_dab0, i32* %r2.global-to-local, align 4
  %v1_dab4 = add i32 %v0_dab0, 13
  %v2_dab4 = inttoptr i32 %v1_dab4 to i8*
  %v3_dab4 = load i8, i8* %v2_dab4, align 1
  %v4_dab4 = zext i8 %v3_dab4 to i32
  %tmp85 = urem i8 %v3_dab0, 16
  %v1_dabc = zext i8 %tmp85 to i32
  %v1_dac0 = and i32 %v4_dab4, 254
  %v2_dac4 = or i32 %v1_dac0, %v1_d978
  %v1_dac8 = or i32 %v1_dabc, 160
  store i32 %v1_dac8, i32* %r2.global-to-local, align 4
  %v1_dacc = trunc i32 %v2_dac4 to i8
  store i8 %v1_dacc, i8* %v2_dab4, align 1
  %v0_dad0 = load i32, i32* %r2.global-to-local, align 4
  %v1_dad0 = trunc i32 %v0_dad0 to i8
  %v2_dad0 = load i32, i32* %r1.global-to-local, align 4
  %v3_dad0 = add i32 %v2_dad0, 12
  %v4_dad0 = inttoptr i32 %v3_dad0 to i8*
  store i8 %v1_dad0, i8* %v4_dad0, align 1
  store i32 %v3_dad8, i32* %r0.global-to-local, align 4
  store i32 %v7_dad8, i32* %r2.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v2_dae4 = load i32, i32* %r1.global-to-local, align 4
  %v3_dae4 = add i32 %v2_dae4, 3
  %v4_dae4 = inttoptr i32 %v3_dae4 to i8*
  store i8 %v5_d994, i8* %v4_dae4, align 1
  %v0_dae8 = load i32, i32* %r0.global-to-local, align 4
  %v1_dae8 = trunc i32 %v0_dae8 to i8
  %v2_dae8 = load i32, i32* %r1.global-to-local, align 4
  %v3_dae8 = add i32 %v2_dae8, 1
  %v4_dae8 = inttoptr i32 %v3_dae8 to i8*
  store i8 %v1_dae8, i8* %v4_dae8, align 1
  %v0_daec = load i32, i32* %r6.global-to-local, align 4
  %v1_daec = trunc i32 %v0_daec to i8
  %v2_daec = load i32, i32* %r1.global-to-local, align 4
  %v3_daec = add i32 %v2_daec, 2
  %v4_daec = inttoptr i32 %v3_daec to i8*
  store i8 %v1_daec, i8* %v4_daec, align 1
  %v0_daf0 = load i32, i32* %r5.global-to-local, align 4
  %v1_daf0 = load i32, i32* %r1.global-to-local, align 4
  %v2_daf0 = add i32 %v1_daf0, 4
  %v3_daf0 = inttoptr i32 %v2_daf0 to i32*
  store i32 %v0_daf0, i32* %v3_daf0, align 4
  %v0_daf4 = load i32, i32* %ip.global-to-local, align 4
  %v1_daf4 = trunc i32 %v0_daf4 to i8
  %v2_daf4 = load i32, i32* %r4.global-to-local, align 4
  %v3_daf4 = add i32 %v2_daf4, 41
  %v4_daf4 = inttoptr i32 %v3_daf4 to i8*
  store i8 %v1_daf4, i8* %v4_daf4, align 1
  %v0_daf8 = load i32, i32* %r3.global-to-local, align 4
  %v1_daf8 = trunc i32 %v0_daf8 to i8
  %v2_daf8 = load i32, i32* %r4.global-to-local, align 4
  %v3_daf8 = add i32 %v2_daf8, 40
  %v4_daf8 = inttoptr i32 %v3_daf8 to i8*
  store i8 %v1_daf8, i8* %v4_daf8, align 1
  %v0_dafc = call i32 @function_f508()
  %v1_db00 = mul i32 %v0_dafc, 256
  %v1_db04 = and i32 %v1_db00, 3840
  %v1_db08 = or i32 %v1_db04, 28672
  %v3_db10 = add nuw nsw i32 %v1_db08, 2048
  %v3_db1c8 = udiv i32 %v3_db10, 256
  store i32 %v3_db1c8, i32* %r1.global-to-local, align 4
  %v0_db20 = load i32, i32* %r4.global-to-local, align 4
  %v1_db20 = add i32 %v0_db20, 42
  store i32 %v1_db20, i32* %r2.global-to-local, align 4
  %v4_db24 = inttoptr i32 %v1_db20 to i8*
  store i8 5, i8* %v4_db24, align 1
  %v0_db28 = load i32, i32* %r1.global-to-local, align 4
  %v1_db28 = trunc i32 %v0_db28 to i8
  %v2_db28 = load i32, i32* %r2.global-to-local, align 4
  %v3_db28 = add i32 %v2_db28, 1
  %v4_db28 = inttoptr i32 %v3_db28 to i8*
  store i8 %v1_db28, i8* %v4_db28, align 1
  store i32 8, i32* %r3.global-to-local, align 4
  %v2_db34 = load i32, i32* %r4.global-to-local, align 4
  %v3_db34 = add i32 %v2_db34, 47
  %v4_db34 = inttoptr i32 %v3_db34 to i8*
  store i8 10, i8* %v4_db34, align 1
  store i32 4, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_db40 = load i32, i32* %r3.global-to-local, align 4
  %v1_db40 = trunc i32 %v0_db40 to i8
  %v2_db40 = load i32, i32* %r4.global-to-local, align 4
  %v3_db40 = add i32 %v2_db40, 46
  %v4_db40 = inttoptr i32 %v3_db40 to i8*
  store i8 %v1_db40, i8* %v4_db40, align 1
  %v0_db44 = load i32, i32* %r2.global-to-local, align 4
  %v1_db44 = trunc i32 %v0_db44 to i8
  %v2_db44 = load i32, i32* %r4.global-to-local, align 4
  %v3_db44 = add i32 %v2_db44, 45
  %v4_db44 = inttoptr i32 %v3_db44 to i8*
  store i8 %v1_db44, i8* %v4_db44, align 1
  %v0_db48 = load i32, i32* %r0.global-to-local, align 4
  %v1_db48 = trunc i32 %v0_db48 to i8
  %v2_db48 = load i32, i32* %r4.global-to-local, align 4
  %v3_db48 = add i32 %v2_db48, 44
  %v4_db48 = inttoptr i32 %v3_db48 to i8*
  store i8 %v1_db48, i8* %v4_db48, align 1
  %v0_db4c = call i32 @function_f508()
  store i32 %v0_db4c, i32* %r0.global-to-local, align 4
  %v2_db54 = load i32, i32* %r4.global-to-local, align 4
  %v3_db54 = add i32 %v2_db54, 56
  %v4_db54 = inttoptr i32 %v3_db54 to i8*
  store i8 1, i8* %v4_db54, align 1
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v1_db64 = load i32, i32* %r4.global-to-local, align 4
  %v2_db64 = add i32 %v1_db64, 48
  %v3_db64 = inttoptr i32 %v2_db64 to i32*
  store i32 %v0_db4c, i32* %v3_db64, align 4
  %v0_db68 = load i32, i32* %r2.global-to-local, align 4
  %v1_db68 = trunc i32 %v0_db68 to i8
  %v2_db68 = load i32, i32* %r4.global-to-local, align 4
  %v3_db68 = add i32 %v2_db68, 58
  %v4_db68 = inttoptr i32 %v3_db68 to i8*
  store i8 %v1_db68, i8* %v4_db68, align 1
  %v0_db6c = load i32, i32* %r3.global-to-local, align 4
  %v1_db6c = trunc i32 %v0_db6c to i8
  %v2_db6c = load i32, i32* %r4.global-to-local, align 4
  %v3_db6c = add i32 %v2_db6c, 59
  %v4_db6c = inttoptr i32 %v3_db6c to i8*
  store i8 %v1_db6c, i8* %v4_db6c, align 1
  %v0_db70 = load i32, i32* %ip.global-to-local, align 4
  %v1_db70 = load i32, i32* %r4.global-to-local, align 4
  %v2_db70 = add i32 %v1_db70, 52
  %v3_db70 = inttoptr i32 %v2_db70 to i32*
  store i32 %v0_db70, i32* %v3_db70, align 4
  %v0_db74 = load i32, i32* %r2.global-to-local, align 4
  %v1_db74 = trunc i32 %v0_db74 to i8
  %v2_db74 = load i32, i32* %r4.global-to-local, align 4
  %v3_db74 = add i32 %v2_db74, 57
  %v4_db74 = inttoptr i32 %v3_db74 to i8*
  store i8 %v1_db74, i8* %v4_db74, align 1
  %v3_db78 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_db78, i32* %r3.global-to-local, align 4
  %v1_db7c = add i32 %v3_db78, 1
  store i32 %v1_db7c, i32* %r4.global-to-local, align 4
  %v0_db80 = load i32, i32* @sl, align 4
  %v9_db80 = icmp eq i32 %v0_db80, %v1_db7c
  store i1 %v9_db80, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_db7c, i32* %stack_var_-40, align 4
  %v8_db88 = icmp sgt i32 %v0_db80, %v1_db7c
  br i1 %v8_db88, label %dec_label_pc_d99c, label %dec_label_pc_db8c

dec_label_pc_db8c:                                ; preds = %bb77, %dec_label_pc_d8a8
  %v0_db8c = phi i32 [ %v0_d8d8, %dec_label_pc_d8a8 ], [ %v0_db80, %bb77 ]
  %v2_db8c = icmp eq i32 %v0_db8c, 0
  store i1 %v2_db8c, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_dd44 = icmp eq i32 %v3_d8b0, 65535
  %v2_ddc0 = icmp eq i32 %v1_d8d4, 0
  %v2_dbc8 = icmp eq i32 %v6_d85c, -1
  br label %dec_label_pc_db94.outer

dec_label_pc_db94.outer:                          ; preds = %dec_label_pc_dcc0, %dec_label_pc_db8c
  %v1_db94.ph.in = phi i32 [ %v1_dcb4, %dec_label_pc_dcc0 ], [ %v0_db8c, %dec_label_pc_db8c ]
  %v0_db94.ph = phi i1 [ %v2_dcc0, %dec_label_pc_dcc0 ], [ %v2_db8c, %dec_label_pc_db8c ]
  %v1_db94.ph = icmp slt i32 %v1_db94.ph.in, 0
  %v4_db94 = or i1 %v1_db94.ph, %v0_db94.ph
  br label %dec_label_pc_db94

dec_label_pc_db94:                                ; preds = %dec_label_pc_db94.outer, %dec_label_pc_db94
  br i1 %v4_db94, label %dec_label_pc_db94, label %dec_label_pc_db98

dec_label_pc_db98:                                ; preds = %dec_label_pc_db94
  store i32 0, i32* %stack_var_-40, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_dba4

dec_label_pc_dba4:                                ; preds = %dec_label_pc_dc20, %dec_label_pc_db98
  %v1_dbb4 = phi i32 [ %v1_dcb0, %dec_label_pc_dc20 ], [ 0, %dec_label_pc_db98 ]
  %v5_dba8 = mul i32 %v1_dbb4, 24
  %v1_dbac = load i32, i32* @r8, align 4
  %v2_dbac = add i32 %v1_dbac, %v5_dba8
  store i32 %v2_dbac, i32* %r3.global-to-local, align 4
  %v1_dbb0 = add i32 %v2_dbac, 20
  %v2_dbb0 = inttoptr i32 %v1_dbb0 to i8*
  %v3_dbb0 = load i8, i8* %v2_dbb0, align 1
  %v4_dbb0 = zext i8 %v3_dbb0 to i32
  store i32 %v4_dbb0, i32* %r2.global-to-local, align 4
  %v0_dbb4 = load i32, i32* %fp.global-to-local, align 4
  %v4_dbb4 = mul i32 %v1_dbb4, 4
  %v5_dbb4 = add i32 %v0_dbb4, %v4_dbb4
  %v6_dbb4 = inttoptr i32 %v5_dbb4 to i32*
  %v7_dbb4 = load i32, i32* %v6_dbb4, align 4
  store i32 %v7_dbb4, i32* @r5, align 4
  %v7_dbb8 = icmp eq i8 %v3_dbb0, 31
  store i1 %v7_dbb8, i1* %cpsr_z.global-to-local, align 1
  %v1_dbbc = add i32 %v7_dbb4, 20
  store i32 %v1_dbbc, i32* @r6, align 4
  %tmp86 = icmp ult i8 %v3_dbb0, 32
  br i1 %tmp86, label %dec_label_pc_dccc, label %dec_label_pc_dbc4

dec_label_pc_dbc4:                                ; preds = %dec_label_pc_dba4
  store i32 %v6_d85c, i32* %r0.global-to-local, align 4
  store i1 %v2_dbc8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_dbc8, label %dec_label_pc_dd34, label %dec_label_pc_dbd0

dec_label_pc_dbd0:                                ; preds = %dec_label_pc_dccc, %dec_label_pc_dbc4
  store i32 %v3_d8b0, i32* %r2.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_dd44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_dd44, label %dec_label_pc_dd50, label %dec_label_pc_dbe4

dec_label_pc_dbe4:                                ; preds = %dec_label_pc_dd34.dec_label_pc_dbe4_crit_edge, %dec_label_pc_dbd0
  %v1_dbe8 = phi i32 [ %v1_dbe8.pre, %dec_label_pc_dd34.dec_label_pc_dbe4_crit_edge ], [ 65535, %dec_label_pc_dbd0 ]
  store i32 %v3_d8cc, i32* %r3.global-to-local, align 4
  %v9_dbe8 = icmp eq i32 %v3_d8cc, %v1_dbe8
  store i1 %v9_dbe8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_dbe8, label %dec_label_pc_dd6c, label %dec_label_pc_dbf0

dec_label_pc_dbf0:                                ; preds = %dec_label_pc_dd50.dec_label_pc_dbf0_crit_edge, %dec_label_pc_dbe4
  %v1_dbf4 = phi i32 [ %v1_dbf4.pre, %dec_label_pc_dd50.dec_label_pc_dbf0_crit_edge ], [ %v1_dbe8, %dec_label_pc_dbe4 ]
  store i32 %v3_d8d0, i32* %ip.global-to-local, align 4
  %v9_dbf4 = icmp eq i32 %v3_d8d0, %v1_dbf4
  store i1 %v9_dbf4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_dbf4, label %dec_label_pc_dd88, label %dec_label_pc_dbfc

dec_label_pc_dbfc:                                ; preds = %dec_label_pc_dd6c.dec_label_pc_dbfc_crit_edge, %dec_label_pc_dbf0
  %v1_dc00 = phi i32 [ %v1_dc00.pre, %dec_label_pc_dd6c.dec_label_pc_dbfc_crit_edge ], [ %v1_dbf4, %dec_label_pc_dbf0 ]
  store i32 %v5_d798, i32* %r0.global-to-local, align 4
  %v9_dc00 = icmp eq i32 %v5_d798, %v1_dc00
  store i1 %v9_dc00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_dc00, label %dec_label_pc_dda4, label %dec_label_pc_dc08

dec_label_pc_dc08:                                ; preds = %dec_label_pc_dd88.dec_label_pc_dc08_crit_edge, %dec_label_pc_dbfc
  %v1_dc0c = phi i32 [ %v1_dc0c.pre, %dec_label_pc_dd88.dec_label_pc_dc08_crit_edge ], [ %v1_dc00, %dec_label_pc_dbfc ]
  store i32 %v6_d7b0, i32* %r2.global-to-local, align 4
  %v9_dc0c = icmp eq i32 %v6_d7b0, %v1_dc0c
  store i1 %v9_dc0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_dc0c, label %dec_label_pc_ddb8, label %dec_label_pc_dc14

dec_label_pc_dc14:                                ; preds = %dec_label_pc_dda4, %dec_label_pc_dc08
  store i32 %v1_d8d4, i32* %r3.global-to-local, align 4
  store i1 %v2_ddc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ddc0, label %dec_label_pc_dc20, label %dec_label_pc_ddcc

dec_label_pc_dc20:                                ; preds = %dec_label_pc_dc14, %dec_label_pc_ddb8, %dec_label_pc_ddcc
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_dc24 = load i32, i32* %r7.global-to-local, align 4
  %v1_dc24 = trunc i32 %v0_dc24 to i8
  %v2_dc24 = load i32, i32* @r5, align 4
  %v3_dc24 = add i32 %v2_dc24, 10
  %v4_dc24 = inttoptr i32 %v3_dc24 to i8*
  store i8 %v1_dc24, i8* %v4_dc24, align 1
  %v0_dc28 = load i32, i32* %r7.global-to-local, align 4
  %v1_dc28 = trunc i32 %v0_dc28 to i8
  %v2_dc28 = load i32, i32* @r5, align 4
  %v3_dc28 = add i32 %v2_dc28, 11
  %v4_dc28 = inttoptr i32 %v3_dc28 to i8*
  store i8 %v1_dc28, i8* %v4_dc28, align 1
  %v0_dc2c = load i32, i32* @r5, align 4
  store i32 %v0_dc2c, i32* @r0, align 4
  %v2_dc30 = call i32 @function_ddf4(i32 %v0_dc2c, i32 20)
  %v3_dc30 = trunc i32 %v2_dc30 to i8
  %v4_dc3428 = udiv i32 %v2_dc30, 256
  %v1_dc38 = trunc i32 %v4_dc3428 to i8
  %v2_dc38 = load i32, i32* @r5, align 4
  %v3_dc38 = add i32 %v2_dc38, 11
  %v4_dc38 = inttoptr i32 %v3_dc38 to i8*
  store i8 %v1_dc38, i8* %v4_dc38, align 1
  %v3_dc3c = load i32, i32* @r5, align 4
  %v4_dc3c = add i32 %v3_dc3c, 10
  %v5_dc3c = inttoptr i32 %v4_dc3c to i8*
  store i8 %v3_dc30, i8* %v5_dc3c, align 1
  %v0_dc40 = load i32, i32* @r6, align 4
  store i32 %v0_dc40, i32* @r1, align 4
  store i32 10240, i32* %r2.global-to-local, align 4
  store i32 40, i32* %r3.global-to-local, align 4
  %v0_dc4c = load i32, i32* %r7.global-to-local, align 4
  %v1_dc4c = trunc i32 %v0_dc4c to i8
  %v3_dc4c = add i32 %v0_dc40, 16
  %v4_dc4c = inttoptr i32 %v3_dc4c to i8*
  store i8 %v1_dc4c, i8* %v4_dc4c, align 1
  %v0_dc50 = load i32, i32* %r7.global-to-local, align 4
  %v1_dc50 = trunc i32 %v0_dc50 to i8
  %v2_dc50 = load i32, i32* @r6, align 4
  %v3_dc50 = add i32 %v2_dc50, 17
  %v4_dc50 = inttoptr i32 %v3_dc50 to i8*
  store i8 %v1_dc50, i8* %v4_dc50, align 1
  %v0_dc54 = load i32, i32* @r5, align 4
  store i32 %v0_dc54, i32* %r0.global-to-local, align 4
  %v4_dc58 = call i32 @function_de50(i32 %v0_dc54, i32 %v0_dc40, i32 10240, i32 40)
  %v5_dc58 = trunc i32 %v4_dc58 to i8
  store i32 %v4_dc58, i32* %r0.global-to-local, align 4
  %v4_dc5c29 = udiv i32 %v4_dc58, 256
  %v1_dc60 = trunc i32 %v4_dc5c29 to i8
  %v2_dc60 = load i32, i32* @r6, align 4
  %v3_dc60 = add i32 %v2_dc60, 17
  %v4_dc60 = inttoptr i32 %v3_dc60 to i8*
  store i8 %v1_dc60, i8* %v4_dc60, align 1
  %v3_dc64 = load i32, i32* @r6, align 4
  %v4_dc64 = add i32 %v3_dc64, 16
  %v5_dc64 = inttoptr i32 %v4_dc64 to i8*
  store i8 %v5_dc58, i8* %v5_dc64, align 1
  %v3_dc68 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_dc68, i32* %r3.global-to-local, align 4
  %v0_dc6c = load i32, i32* @r5, align 4
  %v1_dc6c = add i32 %v0_dc6c, 20
  %v2_dc6c = inttoptr i32 %v1_dc6c to i32*
  %v3_dc6c = load i32, i32* %v2_dc6c, align 4
  %v3_dc74 = udiv i32 %v3_dc6c, 65536
  store i32 %v3_dc74, i32* %r2.global-to-local, align 4
  %v5_dc78 = mul i32 %v3_dc68, 24
  %v1_dc7c = load i32, i32* @r8, align 4
  %v2_dc7c = add i32 %v1_dc7c, %v5_dc78
  store i32 %v2_dc7c, i32* %ip.global-to-local, align 4
  %v3_dc8027 = udiv i32 %v3_dc6c, 16777216
  %v1_dc84 = trunc i32 %v3_dc8027 to i8
  %v3_dc84 = add i32 %v2_dc7c, 3
  %v4_dc84 = inttoptr i32 %v3_dc84 to i8*
  store i8 %v1_dc84, i8* %v4_dc84, align 1
  %v0_dc88 = load i32, i32* %r2.global-to-local, align 4
  %v1_dc88 = trunc i32 %v0_dc88 to i8
  %v2_dc88 = load i32, i32* %ip.global-to-local, align 4
  %v3_dc88 = add i32 %v2_dc88, 2
  %v4_dc88 = inttoptr i32 %v3_dc88 to i8*
  store i8 %v1_dc88, i8* %v4_dc88, align 1
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_dc90 = load i32, i32* @r5, align 4
  store i32 %v0_dc90, i32* %r1.global-to-local, align 4
  %v0_dc94 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_dc94, i32* %r0.global-to-local, align 4
  store i32 60, i32* %r2.global-to-local, align 4
  store i32 16, i32* %r4.global-to-local, align 4
  %v0_dca0 = load i32, i32* %ip.global-to-local, align 4
  %v4_dca0 = inttoptr i32 %v0_dca0 to %sockaddr*
  %v7_dca8 = inttoptr i32 %v0_dc90 to i32*
  %v9_dca8 = call i32 @sendto(i32 %v0_dc94, i32* %v7_dca8, i32 60, i32 16384, %sockaddr* %v4_dca0, i32 16)
  %v3_dcac = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_dcac, i32* %r3.global-to-local, align 4
  %v1_dcb0 = add i32 %v3_dcac, 1
  store i32 %v1_dcb0, i32* %r0.global-to-local, align 4
  %v1_dcb4 = load i32, i32* @sl, align 4
  %v9_dcb4 = icmp eq i32 %v1_dcb0, %v1_dcb4
  store i1 %v9_dcb4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_dcb0, i32* %stack_var_-40, align 4
  %v5_dcbc = icmp slt i32 %v1_dcb0, %v1_dcb4
  br i1 %v5_dcbc, label %dec_label_pc_dba4, label %dec_label_pc_dcc0

dec_label_pc_dcc0:                                ; preds = %dec_label_pc_dc20
  %v2_dcc0 = icmp eq i32 %v1_dcb4, 0
  store i1 %v2_dcc0, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_db94.outer

dec_label_pc_dccc:                                ; preds = %dec_label_pc_dba4
  %v1_dccc = add i32 %v2_dbac, 16
  %v2_dccc = inttoptr i32 %v1_dccc to i32*
  %v3_dccc = load i32, i32* %v2_dccc, align 4
  store i32 %v3_dccc, i32* %r4.global-to-local, align 4
  %v0_dcd0 = call i32 @function_f508()
  store i32 %v0_dcd0, i32* %r0.global-to-local, align 4
  %v3_dcd4 = load i32, i32* %stack_var_-40, align 4
  %v5_dcdc = mul i32 %v3_dcd4, 24
  %v0_dce0 = load i32, i32* %r4.global-to-local, align 4
  %v1_dce4 = load i32, i32* @r8, align 4
  %v2_dce4 = add i32 %v1_dce4, %v5_dcdc
  store i32 %v2_dce4, i32* %r1.global-to-local, align 4
  %v1_dce8 = and i32 %v0_dce0, 65280
  store i32 %v1_dce8, i32* %r3.global-to-local, align 4
  %v1_dce0 = udiv i32 %v0_dce0, 256
  %v3_dcec = and i32 %v1_dce0, 65280
  store i32 %v3_dcec, i32* %r2.global-to-local, align 4
  %v3_dcf0 = mul i32 %v0_dce0, 16777216
  store i32 %v3_dcf0, i32* %ip.global-to-local, align 4
  %v1_dcf4 = add i32 %v2_dce4, 20
  %v2_dcf4 = inttoptr i32 %v1_dcf4 to i8*
  %v3_dcf4 = load i8, i8* %v2_dcf4, align 1
  %v4_dcf4 = zext i8 %v3_dcf4 to i32
  %v4_dcf8 = mul nuw nsw i32 %v1_dce8, 256
  %v5_dcf8 = or i32 %v4_dcf8, %v3_dcf0
  store i32 %v5_dcf8, i32* %ip.global-to-local, align 4
  %v2_dd00 = call i32 @llvm.bswap.i32(i32 %v0_dce0)
  %v7_dd04 = lshr i32 %v0_dcd0, %v4_dcf4
  %v8_dd04 = add i32 %v7_dd04, %v2_dd00
  store i32 %v8_dd04, i32* %r2.global-to-local, align 4
  %v3_dd10 = mul i32 %v8_dd04, 16777216
  %v1_dd08 = mul i32 %v8_dd04, 256
  %v4_dd14 = and i32 %v1_dd08, 16711680
  %v5_dd14 = or i32 %v4_dd14, %v3_dd10
  store i32 %v5_dd14, i32* %r1.global-to-local, align 4
  store i32 %v6_d85c, i32* %r0.global-to-local, align 4
  %v2_dd24 = call i32 @llvm.bswap.i32(i32 %v8_dd04)
  store i32 %v2_dd24, i32* %r3.global-to-local, align 4
  store i1 %v2_dbc8, i1* %cpsr_z.global-to-local, align 1
  %v1_dd2c = load i32, i32* @r5, align 4
  %v2_dd2c = add i32 %v1_dd2c, 16
  %v3_dd2c = inttoptr i32 %v2_dd2c to i32*
  store i32 %v2_dd24, i32* %v3_dd2c, align 4
  br i1 %v2_dbc8, label %dec_label_pc_dd34, label %dec_label_pc_dbd0

dec_label_pc_dd34:                                ; preds = %dec_label_pc_dccc, %dec_label_pc_dbc4
  %v0_dd34 = call i32 @function_f508()
  store i32 %v0_dd34, i32* %r0.global-to-local, align 4
  store i32 %v3_d8b0, i32* %r2.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_dd44, i1* %cpsr_z.global-to-local, align 1
  %v1_dd48 = load i32, i32* @r5, align 4
  %v2_dd48 = add i32 %v1_dd48, 12
  %v3_dd48 = inttoptr i32 %v2_dd48 to i32*
  store i32 %v0_dd34, i32* %v3_dd48, align 4
  br i1 %v3_dd44, label %dec_label_pc_dd50, label %dec_label_pc_dd34.dec_label_pc_dbe4_crit_edge

dec_label_pc_dd34.dec_label_pc_dbe4_crit_edge:    ; preds = %dec_label_pc_dd34
  %v1_dbe8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_dbe4

dec_label_pc_dd50:                                ; preds = %dec_label_pc_dd34, %dec_label_pc_dbd0
  %v0_dd50 = call i32 @function_f508()
  %v1_dd50 = trunc i32 %v0_dd50 to i8
  store i32 %v0_dd50, i32* %r0.global-to-local, align 4
  %v4_dd5430 = udiv i32 %v0_dd50, 256
  %v1_dd58 = trunc i32 %v4_dd5430 to i8
  %v2_dd58 = load i32, i32* @r5, align 4
  %v3_dd58 = add i32 %v2_dd58, 5
  %v4_dd58 = inttoptr i32 %v3_dd58 to i8*
  store i8 %v1_dd58, i8* %v4_dd58, align 1
  store i32 %v3_d8cc, i32* %r3.global-to-local, align 4
  %v1_dd60 = load i32, i32* @r4, align 4
  %v9_dd60 = icmp eq i32 %v3_d8cc, %v1_dd60
  store i1 %v9_dd60, i1* %cpsr_z.global-to-local, align 1
  %v3_dd64 = load i32, i32* @r5, align 4
  %v4_dd64 = add i32 %v3_dd64, 4
  %v5_dd64 = inttoptr i32 %v4_dd64 to i8*
  store i8 %v1_dd50, i8* %v5_dd64, align 1
  %v0_dd68 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_dd68, label %dec_label_pc_dd6c, label %dec_label_pc_dd50.dec_label_pc_dbf0_crit_edge

dec_label_pc_dd50.dec_label_pc_dbf0_crit_edge:    ; preds = %dec_label_pc_dd50
  %v1_dbf4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_dbf0

dec_label_pc_dd6c:                                ; preds = %dec_label_pc_dd50, %dec_label_pc_dbe4
  %v0_dd6c = call i32 @function_f508()
  %v1_dd6c = trunc i32 %v0_dd6c to i8
  store i32 %v0_dd6c, i32* %r0.global-to-local, align 4
  store i32 %v3_d8d0, i32* %ip.global-to-local, align 4
  %v4_dd74 = sdiv i32 %v0_dd6c, 256
  store i32 %v4_dd74, i32* %r3.global-to-local, align 4
  %v1_dd78 = load i32, i32* @r4, align 4
  %v9_dd78 = icmp eq i32 %v3_d8d0, %v1_dd78
  store i1 %v9_dd78, i1* %cpsr_z.global-to-local, align 1
  %v3_dd7c = load i32, i32* @r5, align 4
  %v4_dd7c = add i32 %v3_dd7c, 20
  %v5_dd7c = inttoptr i32 %v4_dd7c to i8*
  store i8 %v1_dd6c, i8* %v5_dd7c, align 1
  %v0_dd80 = load i32, i32* %r3.global-to-local, align 4
  %v1_dd80 = trunc i32 %v0_dd80 to i8
  %v2_dd80 = load i32, i32* @r6, align 4
  %v3_dd80 = add i32 %v2_dd80, 1
  %v4_dd80 = inttoptr i32 %v3_dd80 to i8*
  store i8 %v1_dd80, i8* %v4_dd80, align 1
  %v0_dd84 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_dd84, label %dec_label_pc_dd88, label %dec_label_pc_dd6c.dec_label_pc_dbfc_crit_edge

dec_label_pc_dd6c.dec_label_pc_dbfc_crit_edge:    ; preds = %dec_label_pc_dd6c
  %v1_dc00.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_dbfc

dec_label_pc_dd88:                                ; preds = %dec_label_pc_dd6c, %dec_label_pc_dbf0
  %v0_dd88 = call i32 @function_f508()
  %v1_dd88 = trunc i32 %v0_dd88 to i8
  %v4_dd8c = sdiv i32 %v0_dd88, 256
  store i32 %v4_dd8c, i32* %r3.global-to-local, align 4
  %v3_dd90 = load i32, i32* @r6, align 4
  %v4_dd90 = add i32 %v3_dd90, 2
  %v5_dd90 = inttoptr i32 %v4_dd90 to i8*
  store i8 %v1_dd88, i8* %v5_dd90, align 1
  store i32 %v5_d798, i32* %r0.global-to-local, align 4
  %v1_dd98 = load i32, i32* @r4, align 4
  %v9_dd98 = icmp eq i32 %v5_d798, %v1_dd98
  store i1 %v9_dd98, i1* %cpsr_z.global-to-local, align 1
  %v0_dd9c = load i32, i32* %r3.global-to-local, align 4
  %v1_dd9c = trunc i32 %v0_dd9c to i8
  %v2_dd9c = load i32, i32* @r6, align 4
  %v3_dd9c = add i32 %v2_dd9c, 3
  %v4_dd9c = inttoptr i32 %v3_dd9c to i8*
  store i8 %v1_dd9c, i8* %v4_dd9c, align 1
  %v0_dda0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_dda0, label %dec_label_pc_dda4, label %dec_label_pc_dd88.dec_label_pc_dc08_crit_edge

dec_label_pc_dd88.dec_label_pc_dc08_crit_edge:    ; preds = %dec_label_pc_dd88
  %v1_dc0c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_dc08

dec_label_pc_dda4:                                ; preds = %dec_label_pc_dd88, %dec_label_pc_dbfc
  %v0_dda4 = call i32 @function_f508()
  store i32 %v0_dda4, i32* %r0.global-to-local, align 4
  store i32 %v6_d7b0, i32* %r2.global-to-local, align 4
  %v1_ddac = load i32, i32* @r4, align 4
  %v9_ddac = icmp eq i32 %v6_d7b0, %v1_ddac
  store i1 %v9_ddac, i1* %cpsr_z.global-to-local, align 1
  %v1_ddb0 = load i32, i32* @r6, align 4
  %v2_ddb0 = add i32 %v1_ddb0, 4
  %v3_ddb0 = inttoptr i32 %v2_ddb0 to i32*
  store i32 %v0_dda4, i32* %v3_ddb0, align 4
  br i1 %v9_ddac, label %dec_label_pc_ddb8, label %dec_label_pc_dc14

dec_label_pc_ddb8:                                ; preds = %dec_label_pc_dda4, %dec_label_pc_dc08
  %v0_ddb8 = call i32 @function_f508()
  store i32 %v0_ddb8, i32* %r0.global-to-local, align 4
  store i32 %v1_d8d4, i32* %r3.global-to-local, align 4
  store i1 %v2_ddc0, i1* %cpsr_z.global-to-local, align 1
  %v1_ddc4 = load i32, i32* @r6, align 4
  %v2_ddc4 = add i32 %v1_ddc4, 8
  %v3_ddc4 = inttoptr i32 %v2_ddc4 to i32*
  store i32 %v0_ddb8, i32* %v3_ddc4, align 4
  br i1 %v2_ddc0, label %dec_label_pc_dc20, label %dec_label_pc_ddcc

dec_label_pc_ddcc:                                ; preds = %dec_label_pc_dc14, %dec_label_pc_ddb8
  %v0_ddcc = call i32 @function_f508()
  %v1_ddcc = trunc i32 %v0_ddcc to i8
  store i32 %v0_ddcc, i32* %r0.global-to-local, align 4
  %v4_ddd0 = sdiv i32 %v0_ddcc, 256
  store i32 %v4_ddd0, i32* %r3.global-to-local, align 4
  %v1_ddd4 = trunc i32 %v4_ddd0 to i8
  %v2_ddd4 = load i32, i32* @r6, align 4
  %v3_ddd4 = add i32 %v2_ddd4, 19
  %v4_ddd4 = inttoptr i32 %v3_ddd4 to i8*
  store i8 %v1_ddd4, i8* %v4_ddd4, align 1
  %v3_ddd8 = load i32, i32* @r6, align 4
  %v4_ddd8 = add i32 %v3_ddd8, 18
  %v5_ddd8 = inttoptr i32 %v4_ddd8 to i8*
  store i8 %v1_ddcc, i8* %v5_ddd8, align 1
  br label %dec_label_pc_dc20

dec_label_pc_dde0:                                ; preds = %dec_label_pc_d880
  %v0_dde0 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_dde0, i32* %r0.global-to-local, align 4
  %v1_dde4 = call i32 @close(i32 %v0_dde0)
  store i32 %v1_dde4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_dde8

dec_label_pc_dde8:                                ; preds = %dec_label_pc_d6a8, %dec_label_pc_dde0
  %v29_ddec = phi i32 [ -1, %dec_label_pc_d6a8 ], [ %v1_dde4, %dec_label_pc_dde0 ]
  store i32 %v3_d6a8, i32* %r4.global-to-local, align 4
  store i32 %v6_d6a8, i32* %r5.global-to-local, align 4
  store i32 %v9_d6a8, i32* %r6.global-to-local, align 4
  store i32 %v12_d6a8, i32* %r7.global-to-local, align 4
  ret i32 %v29_ddec

; uselistorder directives
  uselistorder i32 %v4_ddd0, { 1, 0 }
  uselistorder i32 %v0_ddcc, { 0, 2, 1 }
  uselistorder i32 %v0_dd6c, { 0, 2, 1 }
  uselistorder i32 %v0_dd50, { 0, 2, 1 }
  uselistorder i32 %v2_dd24, { 1, 0 }
  uselistorder i32 %v8_dd04, { 2, 0, 1, 3 }
  uselistorder i32 %v3_dcf0, { 1, 0 }
  uselistorder i32 %v0_dce0, { 2, 0, 1, 3 }
  uselistorder i1 %v2_dcc0, { 1, 0 }
  uselistorder i32 %v1_dcb4, { 0, 2, 3, 1 }
  uselistorder i32 %v1_dcb0, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v4_dc58, { 0, 2, 1 }
  uselistorder i32 %v0_dc40, { 1, 0, 2 }
  uselistorder i1 %v2_dbc8, { 3, 0, 1, 2 }
  uselistorder i1 %v2_ddc0, { 2, 3, 1, 0 }
  uselistorder i1 %v3_dd44, { 3, 2, 0, 1 }
  uselistorder i32 %v1_db7c, { 1, 0, 2, 3 }
  uselistorder i8 %v5_d994, { 1, 0 }
  uselistorder i32 %v3_d97c, { 1, 0 }
  uselistorder i32 %v1_d978, { 1, 0 }
  uselistorder i32 %v1_d96c, { 1, 0 }
  uselistorder i32 %v1_d968, { 1, 0 }
  uselistorder i32 %v1_d944, { 1, 0 }
  uselistorder i32 %v1_d940, { 1, 0 }
  uselistorder i32 %v3_d934, { 1, 0 }
  uselistorder i32 %v1_d930, { 1, 0 }
  uselistorder i32 %v1_d90c, { 1, 0 }
  uselistorder i32 %v1_d904, { 1, 0 }
  uselistorder i32 %v1_d8d4, { 2, 1, 3, 0 }
  uselistorder i32 %v3_d8cc, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_d8c4, { 4, 0, 1, 3, 2 }
  uselistorder i32 %v0_d8c0, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v6_d85c, { 5, 3, 4, 0, 2, 1 }
  uselistorder i32 %v6_d7b0, { 3, 2, 1, 0 }
  uselistorder i32 %v5_d798, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_d748, { 1, 0 }
  uselistorder i32 %v7_d704, { 0, 1, 3, 2 }
  uselistorder i32 %v5_d6e0, { 1, 0 }
  uselistorder i32 %v1_d6ac, { 2, 1, 0 }
  uselistorder i32* %stack_var_-40, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 12, 11 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 31, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28, 30, 29, 31, 32, 33, 35, 34, 37, 36, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 3, 5, 6, 4, 7, 8, 10, 9, 12, 11, 13, 15, 14, 16, 17, 18, 21, 19, 20, 22, 23, 24, 25, 26, 54, 27, 28, 29, 30, 34, 31, 32, 33, 35, 37, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 0 }
  uselistorder i32 -8, { 0, 1, 2, 4, 3 }
  uselistorder i32 (i32, i32*, i32, i32)* @function_92dc, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 105, 106, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104 }
  uselistorder label %dec_label_pc_dde8, { 1, 0 }
  uselistorder label %dec_label_pc_ddcc, { 1, 0 }
  uselistorder label %dec_label_pc_dc20, { 2, 1, 0 }
  uselistorder label %dec_label_pc_db94, { 1, 0 }
  uselistorder label %bb77, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_ddf4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ddf4:
  %tmp = or i32 %arg1, 1
  %tmp9 = icmp eq i32 %tmp, 1
  br i1 %tmp9, label %dec_label_pc_de24, label %dec_label_pc_de00

dec_label_pc_de00:                                ; preds = %dec_label_pc_ddf4
  %v0_de04.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_de04

dec_label_pc_de04:                                ; preds = %dec_label_pc_de04, %dec_label_pc_de00
  %v0_de18 = phi i32 [ %v2_de18, %dec_label_pc_de04 ], [ 0, %dec_label_pc_de00 ]
  %v0_de0c = phi i32 [ %v1_de0c, %dec_label_pc_de04 ], [ %arg1, %dec_label_pc_de00 ]
  %v0_de1c = phi i32 [ %v1_de1c, %dec_label_pc_de04 ], [ %v0_de04.pre, %dec_label_pc_de00 ]
  %v1_de04 = inttoptr i32 %v0_de1c to i8*
  %v2_de04 = load i8, i8* %v1_de04, align 1
  %v3_de04 = zext i8 %v2_de04 to i32
  %v1_de08 = add i32 %v0_de1c, 1
  %v2_de08 = inttoptr i32 %v1_de08 to i8*
  %v3_de08 = load i8, i8* %v2_de08, align 1
  %v4_de08 = zext i8 %v3_de08 to i32
  %v1_de0c = add i32 %v0_de0c, -2
  %v4_de10 = mul nuw nsw i32 %v4_de08, 256
  %v5_de10 = or i32 %v4_de10, %v3_de04
  %v2_de18 = add i32 %v5_de10, %v0_de18
  %v1_de1c = add i32 %v0_de1c, 2
  store i32 %v1_de1c, i32* @r0, align 4
  %v1_de0c.cmp = icmp ugt i32 %v1_de0c, 1
  br i1 %v1_de0c.cmp, label %dec_label_pc_de04, label %dec_label_pc_de24

dec_label_pc_de24:                                ; preds = %dec_label_pc_de04, %dec_label_pc_ddf4
  %v1_de2c = phi i32 [ 0, %dec_label_pc_ddf4 ], [ %v2_de18, %dec_label_pc_de04 ]
  %v0_de24 = phi i32 [ %arg1, %dec_label_pc_ddf4 ], [ %v1_de0c, %dec_label_pc_de04 ]
  %v7_de24 = icmp eq i32 %v0_de24, 1
  br i1 %v7_de24, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_de24
  %v1_de28 = load i32, i32* @r0, align 4
  %v2_de28 = inttoptr i32 %v1_de28 to i8*
  %v3_de28 = load i8, i8* %v2_de28, align 1
  %v4_de28 = zext i8 %v3_de28 to i32
  %v3_de2c = add i32 %v1_de2c, %v4_de28
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_de24, %bb
  %v0_de30 = phi i32 [ %v1_de2c, %dec_label_pc_de24 ], [ %v3_de2c, %bb ]
  %v3_de34 = urem i32 %v0_de30, 65536
  %v4_de38 = udiv i32 %v0_de30, 65536
  %v5_de38 = add nuw nsw i32 %v4_de38, %v3_de34
  %v4_de3c = udiv i32 %v5_de38, 65536
  %v5_de3c = add nuw nsw i32 %v4_de3c, %v5_de38
  %v1_de40 = urem i32 %v5_de3c, 65536
  %v3_de48 = xor i32 %v1_de40, 65535
  ret i32 %v3_de48

; uselistorder directives
  uselistorder i32 %v5_de38, { 1, 0 }
  uselistorder i32 %v1_de1c, { 1, 0 }
  uselistorder i32 %v1_de0c, { 1, 0, 2 }
  uselistorder i32 %v0_de1c, { 0, 2, 1 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_de50(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_de50:
  %v3_de60 = urem i32 %arg2, 65536
  %v1_de64 = add i32 %arg1, 12
  %v1_de68 = inttoptr i32 %v1_de64 to i32*
  %v2_de68 = load i32, i32* %v1_de68, align 4
  %v3_de68 = add i32 %arg1, 16
  %v4_de68 = inttoptr i32 %v3_de68 to i32*
  %v5_de68 = load i32, i32* %v4_de68, align 4
  %v7_de6c = icmp sgt i32 %arg3, 1
  br i1 %v7_de6c, label %dec_label_pc_de78.preheader, label %dec_label_pc_de98

dec_label_pc_de78.preheader:                      ; preds = %dec_label_pc_de50
  %v0_de78.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_de78

dec_label_pc_de78:                                ; preds = %dec_label_pc_de78.preheader, %dec_label_pc_de78
  %v0_de8c = phi i32 [ 0, %dec_label_pc_de78.preheader ], [ %v2_de8c, %dec_label_pc_de78 ]
  %v0_de80 = phi i32 [ %arg3, %dec_label_pc_de78.preheader ], [ %v1_de80, %dec_label_pc_de78 ]
  %v0_de90 = phi i32 [ %v0_de78.pre, %dec_label_pc_de78.preheader ], [ %v1_de90, %dec_label_pc_de78 ]
  %v1_de78 = inttoptr i32 %v0_de90 to i8*
  %v2_de78 = load i8, i8* %v1_de78, align 1
  %v3_de78 = zext i8 %v2_de78 to i32
  %v1_de7c = add i32 %v0_de90, 1
  %v2_de7c = inttoptr i32 %v1_de7c to i8*
  %v3_de7c = load i8, i8* %v2_de7c, align 1
  %v4_de7c = zext i8 %v3_de7c to i32
  %v1_de80 = add nsw i32 %v0_de80, -2
  %v4_de84 = mul nuw nsw i32 %v4_de7c, 256
  %v5_de84 = or i32 %v4_de84, %v3_de78
  %v2_de8c = add i32 %v5_de84, %v0_de8c
  %v1_de90 = add i32 %v0_de90, 2
  store i32 %v1_de90, i32* @r1, align 4
  %v8_de94 = icmp sgt i32 %v1_de80, 1
  br i1 %v8_de94, label %dec_label_pc_de78, label %dec_label_pc_de98

dec_label_pc_de98:                                ; preds = %dec_label_pc_de78, %dec_label_pc_de50
  %v1_dea0 = phi i32 [ 0, %dec_label_pc_de50 ], [ %v2_de8c, %dec_label_pc_de78 ]
  %v0_de98 = phi i32 [ %arg3, %dec_label_pc_de50 ], [ %v1_de80, %dec_label_pc_de78 ]
  %v7_de98 = icmp eq i32 %v0_de98, 1
  br i1 %v7_de98, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_de98
  %v1_de9c = load i32, i32* @r1, align 4
  %v2_de9c = inttoptr i32 %v1_de9c to i8*
  %v3_de9c = load i8, i8* %v2_de9c, align 1
  %v4_de9c = zext i8 %v3_de9c to i32
  %v3_dea0 = add i32 %v4_de9c, %v1_dea0
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_de98, %bb
  %v0_dec4 = phi i32 [ %v1_dea0, %dec_label_pc_de98 ], [ %v3_dea0, %bb ]
  %v3_dea8 = urem i32 %v2_de68, 65536
  %v1_deb0 = add i32 %arg1, 9
  %v2_deb0 = inttoptr i32 %v1_deb0 to i8*
  %v3_deb0 = load i8, i8* %v2_deb0, align 1
  %v4_deb0 = zext i8 %v3_deb0 to i32
  %v3_deb4 = urem i32 %v5_de68, 65536
  %v4_deb8 = udiv i32 %v2_de68, 65536
  %v3_dec0 = mul nuw nsw i32 %v4_deb0, 256
  %v4_dec4 = udiv i32 %v5_de68, 65536
  %v5_dec4 = add i32 %v0_dec4, %v4_dec4
  %v2_dec8 = add i32 %v5_dec4, %v3_dec0
  %v5_deb8 = add nuw nsw i32 %v3_dea8, %v3_de60
  %v2_debc = add nuw nsw i32 %v5_deb8, %v4_deb8
  %v2_decc = add nuw nsw i32 %v2_debc, %v3_deb4
  %v2_ded0 = add i32 %v2_dec8, %v2_decc
  %tmp = icmp ult i32 %v2_ded0, 65536
  br i1 %tmp, label %dec_label_pc_def0, label %dec_label_pc_dedc

dec_label_pc_dedc:                                ; preds = %.thread, %dec_label_pc_dedc
  %v2_dee41 = phi i32 [ %v2_dee4, %dec_label_pc_dedc ], [ %v2_ded0, %.thread ]
  %v3_dee82.in = phi i32 [ %v2_dee4, %dec_label_pc_dedc ], [ %v2_ded0, %.thread ]
  %v3_dee82 = udiv i32 %v3_dee82.in, 65536
  %v3_dee0 = urem i32 %v2_dee41, 65536
  %v2_dee4 = add nuw nsw i32 %v3_dee0, %v3_dee82
  %tmp14 = icmp ult i32 %v2_dee4, 65536
  br i1 %tmp14, label %dec_label_pc_def0.loopexit, label %dec_label_pc_dedc

dec_label_pc_def0.loopexit:                       ; preds = %dec_label_pc_dedc
  br label %dec_label_pc_def0

dec_label_pc_def0:                                ; preds = %dec_label_pc_def0.loopexit, %.thread
  %v0_def0 = phi i32 [ %v2_dee4, %dec_label_pc_def0.loopexit ], [ %v2_ded0, %.thread ]
  %v1_def0 = urem i32 %v0_def0, 65536
  %v3_def8 = xor i32 %v1_def0, 65535
  ret i32 %v3_def8

; uselistorder directives
  uselistorder i32 %v2_dee4, { 2, 1, 3, 0 }
  uselistorder i32 %v2_ded0, { 3, 0, 2, 1 }
  uselistorder i32 %v1_dea0, { 1, 0 }
  uselistorder i32 %v1_de90, { 1, 0 }
  uselistorder i32 %v1_de80, { 0, 2, 1 }
  uselistorder i32 %v0_de90, { 0, 2, 1 }
  uselistorder i32 %arg3, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_dedc, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_de78, { 1, 0 }
}

define i32 @function_df00(i32 %arg1) local_unnamed_addr {
dec_label_pc_df00:
  %r4.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-68 = alloca i8, align 1
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-581 = alloca i8, align 1
  %stack_var_-8773 = alloca i32, align 4
  %stack_var_-4677 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_df00 = load i32, i32* @r4, align 4
  store i32 %v3_df00, i32* %stack_var_-36, align 4
  %v6_df00 = load i32, i32* @r5, align 4
  %v9_df00 = load i32, i32* @r6, align 4
  %v12_df00 = load i32, i32* @r7, align 4
  %v15_df00 = load i32, i32* @r8, align 4
  %v21_df00 = load i32, i32* @sl, align 4
  %v2_df14 = ptrtoint i32* %stack_var_-4677 to i32
  store i32 %v2_df14, i32* @sl, align 4
  %v3_df1c = mul i32 %arg1, 65536
  store i32 %v3_df1c, i32* @r5, align 4
  %v2_df28 = ptrtoint i32* %stack_var_-8773 to i32
  %v4_df34 = call i32* @memset(i32* nonnull %stack_var_-4677, i32 0, i32 4096)
  %v0_df48 = load i32, i32* @r5, align 4
  %v3_df48 = udiv i32 %v0_df48, 65536
  store i32 %v3_df48, i32* %r4.global-to-local, align 4
  %v4_df4c = call i32* @memset(i32* nonnull %stack_var_-8773, i32 0, i32 4096)
  %v2_df50 = ptrtoint i8* %stack_var_-581 to i32
  store i32 %v2_df50, i32* @r6, align 4
  %v1_df58 = mul nuw nsw i32 %v3_df48, 256
  %v3_df64 = and i32 %v1_df58, 65280
  store i32 %v3_df64, i32* %r4.global-to-local, align 4
  %v2_df6c = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_df6c, i32* %sb.global-to-local, align 4
  %v3_df70 = bitcast i8* %stack_var_-581 to i32*
  %v4_df70 = call i32* @memset(i32* %v3_df70, i32 0, i32 513)
  %v2_df74 = ptrtoint i8* %stack_var_-68 to i32
  store i32 %v2_df74, i32* %sb.global-to-local, align 4
  %v0_df7c = load i32, i32* %r4.global-to-local, align 4
  %v1_df7c = load i32, i32* @r5, align 4
  %v4_df7c = udiv i32 %v1_df7c, 16777216
  %v5_df7c = or i32 %v4_df7c, %v0_df7c
  store i32 0, i32* @r4, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v3_df9c = trunc i32 %v5_df7c to i8
  %v4_df9c = call i32 @function_13450(i8 %v3_df9c, i32 16, i32 %v2_df74)
  %v2_dfa4 = call i32 @function_12fec(i8* nonnull %stack_var_-68)
  %v7_dfa8 = icmp eq i32 %v2_dfa4, 2
  br i1 %v7_dfa8, label %dec_label_pc_e470, label %dec_label_pc_dfb0

dec_label_pc_dfb0:                                ; preds = %dec_label_pc_df00, %dec_label_pc_e470
  %v1_dfb4 = call i32 @function_12a20(i32 13)
  %v1_dfbc = call i32 @function_12a20(i32 14)
  %v1_dfc4 = call i32 @function_12a20(i32 15)
  %v1_dfcc = call i32 @function_12a20(i32 17)
  %v0_dfd0 = load i32, i32* @r4, align 4
  %v2_dfd8 = inttoptr i32 %v0_dfd0 to i32*
  %v3_dfd8 = call i32 @function_1293c(i32 17, i32* %v2_dfd8)
  %v4_dfd8 = inttoptr i32 %v3_dfd8 to i8*
  %v0_dfdc = load i32, i32* @r4, align 4
  %v4_dfe0 = call i32 (i8*, i32, ...) @open(i8* %v4_dfd8, i32 %v0_dfdc)
  %v2_dfe4 = icmp eq i32 %v4_dfe0, -1
  store i32 %v4_dfe0, i32* @r8, align 4
  br i1 %v2_dfe4, label %dec_label_pc_e40c, label %dec_label_pc_dff0.preheader

dec_label_pc_dff0.preheader:                      ; preds = %dec_label_pc_dfb0
  %v4_dffc54 = call i32 @function_13244(i32* %v3_df70, i32 512, i32 %v4_dfe0)
  %v2_e00056 = icmp eq i32 %v4_dffc54, 0
  br i1 %v2_e00056, label %dec_label_pc_e190.loopexit, label %dec_label_pc_e008.lr.ph

dec_label_pc_e008.lr.ph:                          ; preds = %dec_label_pc_dff0.preheader
  %v2_e050 = ptrtoint i32* %stack_var_-36 to i32
  br label %dec_label_pc_e008

dec_label_pc_e008:                                ; preds = %dec_label_pc_e008.lr.ph, %dec_label_pc_dff0.backedge
  %v3_e00c = load i8, i8* %stack_var_-581, align 1
  %v4_e00c = sext i8 %v3_e00c to i32
  %v2_e010 = icmp eq i8 %v3_e00c, 0
  br i1 %v2_e010, label %bb123, label %bb

bb:                                               ; preds = %dec_label_pc_e008
  %v8_e014 = icmp eq i8 %v3_e00c, 58
  br i1 %v8_e014, label %.thread6, label %dec_label_pc_e028

.thread6:                                         ; preds = %bb
  br label %dec_label_pc_e040

bb123:                                            ; preds = %dec_label_pc_e008
  br label %dec_label_pc_e040

dec_label_pc_e028:                                ; preds = %bb
  %v1_e030.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_e02c

dec_label_pc_e02c:                                ; preds = %bb124, %dec_label_pc_e028
  %v0_e02c = phi i32 [ %v1_e02c, %bb124 ], [ 0, %dec_label_pc_e028 ]
  %v1_e02c = add i32 %v0_e02c, 1
  %v2_e030 = add i32 %v1_e02c, %v1_e030.pre
  %v3_e030 = inttoptr i32 %v2_e030 to i8*
  %v4_e030 = load i8, i8* %v3_e030, align 1
  %v6_e030 = zext i8 %v4_e030 to i32
  %v2_e034 = icmp eq i8 %v4_e030, 0
  br i1 %v2_e034, label %dec_label_pc_e040, label %bb124

bb124:                                            ; preds = %dec_label_pc_e02c
  %v8_e038 = icmp eq i8 %v4_e030, 58
  br i1 %v8_e038, label %dec_label_pc_e040, label %dec_label_pc_e02c

dec_label_pc_e040:                                ; preds = %dec_label_pc_e02c, %bb124, %bb123, %.thread6
  %v1_e06c = phi i32 [ 0, %.thread6 ], [ 0, %bb123 ], [ %v1_e02c, %bb124 ], [ %v1_e02c, %dec_label_pc_e02c ]
  %v0_e040 = phi i32 [ %v4_e00c, %.thread6 ], [ %v4_e00c, %bb123 ], [ %v6_e030, %bb124 ], [ %v6_e030, %dec_label_pc_e02c ]
  %v2_e040 = icmp eq i32 %v0_e040, 0
  br i1 %v2_e040, label %dec_label_pc_dff0.backedge, label %dec_label_pc_e048

dec_label_pc_dff0.backedge:                       ; preds = %dec_label_pc_e040, %dec_label_pc_e118, %dec_label_pc_e164, %dec_label_pc_e08c
  %v0_dff8 = load i32, i32* @r8, align 4
  %v4_dffc = call i32 @function_13244(i32* %v3_df70, i32 512, i32 %v0_dff8)
  %v2_e000 = icmp eq i32 %v4_dffc, 0
  br i1 %v2_e000, label %dec_label_pc_e190.loopexit, label %dec_label_pc_e008

dec_label_pc_e048:                                ; preds = %dec_label_pc_e040
  %v1_e04c = add i32 %v1_e06c, 2
  %v2_e054 = add i32 %v1_e04c, %v2_e050
  %v1_e058 = add i32 %v2_e054, -545
  %v2_e058 = inttoptr i32 %v1_e058 to i8*
  %v3_e058 = load i8, i8* %v2_e058, align 1
  %v2_e05c = icmp eq i8 %v3_e058, 0
  br i1 %v2_e05c, label %bb126, label %bb125

bb125:                                            ; preds = %dec_label_pc_e048
  %v8_e060 = icmp eq i8 %v3_e058, 32
  br i1 %v8_e060, label %.thread10, label %dec_label_pc_e06c

.thread10:                                        ; preds = %bb125
  store i32 %v1_e04c, i32* @r5, align 4
  br label %dec_label_pc_e08c

bb126:                                            ; preds = %dec_label_pc_e048
  store i32 %v1_e04c, i32* @r5, align 4
  br label %dec_label_pc_e08c

dec_label_pc_e06c:                                ; preds = %bb125
  %v0_e06c = load i32, i32* @r6, align 4
  %v2_e06c = add i32 %v0_e06c, %v1_e06c
  br label %dec_label_pc_e070

dec_label_pc_e070:                                ; preds = %bb127, %dec_label_pc_e06c
  %v0_e07c13 = phi i32 [ %v1_e07c, %bb127 ], [ %v2_e06c, %dec_label_pc_e06c ]
  %v1_e070 = add i32 %v0_e07c13, 3
  %v2_e070 = inttoptr i32 %v1_e070 to i8*
  %v3_e070 = load i8, i8* %v2_e070, align 1
  %v2_e074 = icmp eq i8 %v3_e070, 0
  br i1 %v2_e074, label %.thread12, label %bb127

.thread12:                                        ; preds = %dec_label_pc_e070
  %v1_e07c14 = add i32 %v0_e07c13, 1
  br label %dec_label_pc_e084

bb127:                                            ; preds = %dec_label_pc_e070
  %v8_e078 = icmp eq i8 %v3_e070, 32
  %v1_e07c = add i32 %v0_e07c13, 1
  br i1 %v8_e078, label %dec_label_pc_e084, label %dec_label_pc_e070

dec_label_pc_e084:                                ; preds = %bb127, %.thread12
  %v1_e07c15 = phi i32 [ %v1_e07c14, %.thread12 ], [ %v1_e07c, %bb127 ]
  %v2_e084 = sub i32 %v1_e07c15, %v0_e06c
  %v1_e088 = add i32 %v2_e084, 2
  store i32 %v1_e088, i32* @r5, align 4
  br label %dec_label_pc_e08c

dec_label_pc_e08c:                                ; preds = %bb126, %.thread10, %dec_label_pc_e084
  %v1_e098 = phi i32 [ %v1_e04c, %.thread10 ], [ %v1_e04c, %bb126 ], [ %v1_e088, %dec_label_pc_e084 ]
  %v0_e08c = load i32, i32* @r6, align 4
  %v2_e08c = add i32 %v0_e08c, %v1_e04c
  store i32 %v2_e08c, i32* @r4, align 4
  %v2_e098 = add i32 %v1_e098, %v2_e050
  store i32 0, i32* @r7, align 4
  %v3_e0a4 = add i32 %v2_e098, -545
  %v4_e0a4 = inttoptr i32 %v3_e0a4 to i8*
  store i8 0, i8* %v4_e0a4, align 1
  %v1_e0a8 = inttoptr i32 %v2_e08c to i8*
  %v2_e0a8 = call i32 @function_12fec(i8* %v1_e0a8)
  store i32 %v2_e0a8, i32* @r1, align 4
  %v0_e0b4 = load i32, i32* @r4, align 4
  %v3_e0b8 = inttoptr i32 %v0_e0b4 to i8*
  %v4_e0b8 = call i32 @function_13340(i8* %v3_e0b8, i32 %v2_e0a8, i32 %v2_df74)
  %v2_e0bc = icmp eq i32 %v4_e0b8, -1
  br i1 %v2_e0bc, label %dec_label_pc_dff0.backedge, label %dec_label_pc_e0d8.preheader

dec_label_pc_e0d8.preheader:                      ; preds = %dec_label_pc_e08c
  %v1_e0c0 = load i32, i32* @r7, align 4
  %v1_e0c4 = load i32, i32* @r6, align 4
  %v2_e0c4 = load i32, i32* @r5, align 4
  %v3_e0c4 = add i32 %v2_e0c4, %v1_e0c4
  store i32 %v1_e0c0, i32* @r4, align 4
  %v1_e0d846 = add i32 %v3_e0c4, 2
  %v2_e0d847 = inttoptr i32 %v1_e0d846 to i8*
  %v3_e0d848 = load i8, i8* %v2_e0d847, align 1
  %v2_e0dc50 = icmp eq i8 %v3_e0d848, 0
  %v1_e0e052 = add i32 %v2_e0c4, 2
  br i1 %v2_e0dc50, label %dec_label_pc_e118, label %dec_label_pc_e0e8

dec_label_pc_e0e8:                                ; preds = %dec_label_pc_e0d8.preheader, %dec_label_pc_e0d8.backedge
  %v0_e11882 = phi i32 [ %v0_e11881, %dec_label_pc_e0d8.backedge ], [ %v1_e0c0, %dec_label_pc_e0d8.preheader ]
  %v0_e100.pr = phi i32 [ %v0_e100.pr67, %dec_label_pc_e0d8.backedge ], [ %v1_e0c0, %dec_label_pc_e0d8.preheader ]
  %v0_e41c = phi i32 [ %v0_e41c70, %dec_label_pc_e0d8.backedge ], [ %v1_e0c0, %dec_label_pc_e0d8.preheader ]
  %v0_e0e078 = phi i32 [ %v1_e0e0, %dec_label_pc_e0d8.backedge ], [ %v1_e0e052, %dec_label_pc_e0d8.preheader ]
  %v0_e110 = phi i32 [ %v0_e0d8, %dec_label_pc_e0d8.backedge ], [ %v3_e0c4, %dec_label_pc_e0d8.preheader ]
  %v1_e0ec.in = phi i8 [ %v3_e0d8, %dec_label_pc_e0d8.backedge ], [ %v3_e0d848, %dec_label_pc_e0d8.preheader ]
  %v7_e0e8 = icmp eq i8 %v1_e0ec.in, 9
  br i1 %v7_e0e8, label %.thread23, label %bb128

bb128:                                            ; preds = %dec_label_pc_e0e8
  %v8_e0ec = icmp eq i8 %v1_e0ec.in, 32
  br i1 %v8_e0ec, label %.thread23.thread35, label %dec_label_pc_e100

.thread23.thread35:                               ; preds = %bb128
  br label %dec_label_pc_e10c

.thread23:                                        ; preds = %dec_label_pc_e0e8
  br label %dec_label_pc_e10c

dec_label_pc_e100:                                ; preds = %bb128
  %v7_e100 = icmp eq i32 %v0_e100.pr, 1
  br i1 %v7_e100, label %dec_label_pc_e41c, label %dec_label_pc_e108

dec_label_pc_e108:                                ; preds = %dec_label_pc_e41c, %dec_label_pc_e100
  %v0_e10c75 = phi i32 [ %v1_e41c, %dec_label_pc_e41c ], [ %v0_e41c, %dec_label_pc_e100 ]
  br label %dec_label_pc_e10c

dec_label_pc_e10c:                                ; preds = %.thread23, %.thread23.thread35, %dec_label_pc_e108
  %v0_e10c = phi i32 [ %v0_e41c, %.thread23.thread35 ], [ %v0_e41c, %.thread23 ], [ %v0_e10c75, %dec_label_pc_e108 ]
  %v0_e100.pr68 = phi i32 [ 1, %.thread23.thread35 ], [ 1, %.thread23 ], [ 0, %dec_label_pc_e108 ]
  %v7_e114 = icmp sgt i32 %v0_e10c, 6
  br i1 %v7_e114, label %dec_label_pc_e118, label %dec_label_pc_e0d8.backedge

dec_label_pc_e118:                                ; preds = %dec_label_pc_e0d8.backedge, %dec_label_pc_e10c, %dec_label_pc_e0d8.preheader
  %v1_e168 = phi i32 [ %v1_e0e052, %dec_label_pc_e0d8.preheader ], [ %v1_e0e0, %dec_label_pc_e0d8.backedge ], [ %v0_e0e078, %dec_label_pc_e10c ]
  %v0_e118 = phi i32 [ %v1_e0c0, %dec_label_pc_e0d8.preheader ], [ %v0_e11881, %dec_label_pc_e0d8.backedge ], [ %v0_e11882, %dec_label_pc_e10c ]
  %v2_e118 = icmp eq i32 %v0_e118, 0
  br i1 %v2_e118, label %dec_label_pc_dff0.backedge, label %dec_label_pc_e124

dec_label_pc_e124:                                ; preds = %dec_label_pc_e118
  %v2_e12c = add i32 %v1_e168, %v2_e050
  %v1_e130 = add i32 %v2_e12c, -545
  %v2_e130 = inttoptr i32 %v1_e130 to i8*
  %v3_e130 = load i8, i8* %v2_e130, align 1
  %v2_e134 = icmp eq i8 %v3_e130, 0
  br i1 %v2_e134, label %dec_label_pc_e164, label %bb129

bb129:                                            ; preds = %dec_label_pc_e124
  %v8_e138 = icmp eq i8 %v3_e130, 32
  br i1 %v8_e138, label %dec_label_pc_e164, label %dec_label_pc_e140

dec_label_pc_e140:                                ; preds = %bb129
  %v2_e140 = add i32 %v1_e168, %v1_e0c4
  br label %dec_label_pc_e144

dec_label_pc_e144:                                ; preds = %bb130, %dec_label_pc_e140
  %v0_e15028 = phi i32 [ %v1_e150, %bb130 ], [ %v1_e168, %dec_label_pc_e140 ]
  %v0_e144 = phi i32 [ %v1_e144, %bb130 ], [ %v2_e140, %dec_label_pc_e140 ]
  %v1_e144 = add i32 %v0_e144, 1
  %v2_e144 = inttoptr i32 %v1_e144 to i8*
  %v3_e144 = load i8, i8* %v2_e144, align 1
  %v2_e148 = icmp eq i8 %v3_e144, 0
  br i1 %v2_e148, label %.thread27, label %bb130

.thread27:                                        ; preds = %dec_label_pc_e144
  %v1_e15029 = add i32 %v0_e15028, 1
  br label %dec_label_pc_e158

bb130:                                            ; preds = %dec_label_pc_e144
  %v8_e14c = icmp eq i8 %v3_e144, 32
  %v1_e150 = add i32 %v0_e15028, 1
  br i1 %v8_e14c, label %dec_label_pc_e158, label %dec_label_pc_e144

dec_label_pc_e158:                                ; preds = %bb130, %.thread27
  %v1_e160 = phi i32 [ %v1_e15029, %.thread27 ], [ %v1_e150, %bb130 ]
  %v2_e160 = add i32 %v1_e160, %v2_e050
  br label %dec_label_pc_e164

dec_label_pc_e164:                                ; preds = %dec_label_pc_e124, %bb129, %dec_label_pc_e158
  %v2_e170 = phi i32 [ %v2_e12c, %dec_label_pc_e124 ], [ %v2_e12c, %bb129 ], [ %v2_e160, %dec_label_pc_e158 ]
  %v2_e168 = add i32 %v1_e168, %v1_e0c4
  store i32 %v2_e168, i32* @r4, align 4
  %v3_e170 = add i32 %v2_e170, -545
  %v4_e170 = inttoptr i32 %v3_e170 to i8*
  store i8 0, i8* %v4_e170, align 1
  %v1_e174 = inttoptr i32 %v2_e168 to i8*
  %v2_e174 = call i32 @function_12fec(i8* %v1_e174)
  %v8_e17c = icmp sgt i32 %v2_e174, 15
  br i1 %v8_e17c, label %dec_label_pc_dff0.backedge, label %dec_label_pc_e180

dec_label_pc_e180:                                ; preds = %dec_label_pc_e164
  %v0_e184 = load i32, i32* @r4, align 4
  %v2_e188 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_e188, i32* @r0, align 4
  %v2_e18c = bitcast i32* %stack_var_-52 to i8*
  %v3_e18c = call i32 @function_13014(i8* %v2_e18c, i32 %v0_e184)
  br label %dec_label_pc_e190

dec_label_pc_e190.loopexit:                       ; preds = %dec_label_pc_dff0.backedge, %dec_label_pc_dff0.preheader
  %.pre = ptrtoint i32* %stack_var_-52 to i32
  %.pre92 = bitcast i32* %stack_var_-52 to i8*
  br label %dec_label_pc_e190

dec_label_pc_e190:                                ; preds = %dec_label_pc_e190.loopexit, %dec_label_pc_e180
  %v1_e1a0.pre-phi = phi i8* [ %.pre92, %dec_label_pc_e190.loopexit ], [ %v2_e18c, %dec_label_pc_e180 ]
  %v2_e19c.pre-phi = phi i32 [ %.pre, %dec_label_pc_e190.loopexit ], [ %v2_e188, %dec_label_pc_e180 ]
  %v0_e190 = load i32, i32* @r8, align 4
  %v1_e194 = call i32 @close(i32 %v0_e190)
  %v2_e1a0 = call i32 @function_12fec(i8* %v1_e1a0.pre-phi)
  store i32 %v2_e1a0, i32* @r4, align 4
  %v2_e1a4 = icmp eq i32 %v2_e1a0, 0
  br i1 %v2_e1a4, label %dec_label_pc_e44c, label %dec_label_pc_e1ac

dec_label_pc_e1ac:                                ; preds = %dec_label_pc_e190
  %v3_e1b4 = call i32 @function_1293c(i32 13, i32* null)
  %v4_e1b4 = inttoptr i32 %v3_e1b4 to i8*
  %v3_e1b8 = call %__dirstream* @opendir(i8* %v4_e1b4)
  %v5_e1b8 = ptrtoint %__dirstream* %v3_e1b8 to i32
  store i32 %v5_e1b8, i32* @r8, align 4
  %v2_e1bc = icmp eq %__dirstream* %v3_e1b8, null
  br i1 %v2_e1bc, label %dec_label_pc_e3ec, label %dec_label_pc_e1cc.preheader

dec_label_pc_e1cc.preheader:                      ; preds = %dec_label_pc_e1ac
  store i32 0, i32* @r5, align 4
  %v3_e1d041 = call %dirent* @readdir(%__dirstream* nonnull %v3_e1b8)
  %v2_e1d444 = icmp eq %dirent* %v3_e1d041, null
  br i1 %v2_e1d444, label %dec_label_pc_e3e0, label %dec_label_pc_e1dc.preheader.lr.ph

dec_label_pc_e1dc.preheader.lr.ph:                ; preds = %dec_label_pc_e1cc.preheader
  %v2_e20c = bitcast i32* %stack_var_-4677 to i8*
  %tmp132 = bitcast i32* %stack_var_-8773 to i8*
  br label %dec_label_pc_e1dc.preheader

dec_label_pc_e1cc.loopexit:                       ; preds = %dec_label_pc_e1e4, %dec_label_pc_e1f8, %dec_label_pc_e260
  %v0_e1cc = load i32, i32* @r8, align 4
  %v1_e1cc = inttoptr i32 %v0_e1cc to %__dirstream*
  %v3_e1d0 = call %dirent* @readdir(%__dirstream* %v1_e1cc)
  %v2_e1d4 = icmp eq %dirent* %v3_e1d0, null
  br i1 %v2_e1d4, label %dec_label_pc_e3e0, label %dec_label_pc_e1dc.preheader

dec_label_pc_e1dc.preheader:                      ; preds = %dec_label_pc_e1dc.preheader.lr.ph, %dec_label_pc_e1cc.loopexit
  %v0_e1e490.in = phi %dirent* [ %v3_e1d041, %dec_label_pc_e1dc.preheader.lr.ph ], [ %v3_e1d0, %dec_label_pc_e1cc.loopexit ]
  br label %dec_label_pc_e1dc

dec_label_pc_e1dc:                                ; preds = %dec_label_pc_e1dc.preheader, %dec_label_pc_e3c8
  %v0_e1f0.in = phi %dirent* [ %v0_e1e490.in, %dec_label_pc_e1dc.preheader ], [ %v3_e3d4, %dec_label_pc_e3c8 ]
  %v0_e1dc = load i32, i32* @r5, align 4
  %v2_e1dc = icmp eq i32 %v0_e1dc, 0
  br i1 %v2_e1dc, label %dec_label_pc_e1e4, label %dec_label_pc_e3e0

dec_label_pc_e1e4:                                ; preds = %dec_label_pc_e1dc
  %v0_e1f0 = ptrtoint %dirent* %v0_e1f0.in to i32
  %v1_e1e4 = add i32 %v0_e1f0, 11
  %v2_e1e4 = inttoptr i32 %v1_e1e4 to i8*
  %v3_e1e4 = load i8, i8* %v2_e1e4, align 1
  %v4_e1e4 = zext i8 %v3_e1e4 to i32
  %v1_e1e8 = add nsw i32 %v4_e1e4, -48
  store i32 %v1_e1e4, i32* @r7, align 4
  %tmp = icmp ugt i32 %v1_e1e8, 9
  br i1 %tmp, label %dec_label_pc_e1cc.loopexit, label %dec_label_pc_e1f8

dec_label_pc_e1f8:                                ; preds = %dec_label_pc_e1e4
  %v3_e200 = call i32 @function_1293c(i32 13, i32* null)
  store i32 %v2_df14, i32* @r0, align 4
  %v3_e20c = call i32 @function_13014(i8* %v2_e20c, i32 %v3_e200)
  %v2_e214 = call i32 @function_12fec(i8* %v2_e20c)
  %v0_e218 = load i32, i32* @r7, align 4
  %v0_e21c = load i32, i32* @sl, align 4
  %v2_e21c = add i32 %v0_e21c, %v2_e214
  store i32 %v2_e21c, i32* @r0, align 4
  %v2_e220 = inttoptr i32 %v2_e21c to i8*
  %v3_e220 = call i32 @function_13014(i8* %v2_e220, i32 %v0_e218)
  %v2_e228 = call i32 @function_12fec(i8* %v2_e20c)
  %v0_e22c = load i32, i32* @r5, align 4
  store i32 %v2_e228, i32* %r4.global-to-local, align 4
  %v2_e238 = inttoptr i32 %v0_e22c to i32*
  %v3_e238 = call i32 @function_1293c(i32 14, i32* %v2_e238)
  %v0_e240 = load i32, i32* @sl, align 4
  %v2_e240 = add i32 %v2_e228, %v0_e240
  store i32 %v2_e240, i32* @r0, align 4
  %v2_e244 = inttoptr i32 %v2_e240 to i8*
  %v3_e244 = call i32 @function_13014(i8* %v2_e244, i32 %v3_e238)
  %v7_e254 = call i32 @readlink(i8* %v2_e20c, i8* %tmp132, i32 4096)
  %v2_e258 = icmp eq i32 %v7_e254, -1
  br i1 %v2_e258, label %dec_label_pc_e1cc.loopexit, label %dec_label_pc_e260

dec_label_pc_e260:                                ; preds = %dec_label_pc_e1f8
  %v0_e260 = load i32, i32* @r5, align 4
  %v2_e268 = inttoptr i32 %v0_e260 to i32*
  %v3_e268 = call i32 @function_1293c(i32 13, i32* %v2_e268)
  store i32 %v2_df14, i32* @r0, align 4
  %v3_e274 = call i32 @function_13014(i8* %v2_e20c, i32 %v3_e268)
  %v2_e27c = call i32 @function_12fec(i8* %v2_e20c)
  %v0_e280 = load i32, i32* @r7, align 4
  %v0_e284 = load i32, i32* @sl, align 4
  %v2_e284 = add i32 %v0_e284, %v2_e27c
  store i32 %v2_e284, i32* @r0, align 4
  %v2_e288 = inttoptr i32 %v2_e284 to i8*
  %v3_e288 = call i32 @function_13014(i8* %v2_e288, i32 %v0_e280)
  %v2_e290 = call i32 @function_12fec(i8* %v2_e20c)
  %v0_e294 = load i32, i32* @r5, align 4
  store i32 %v2_e290, i32* %r4.global-to-local, align 4
  %v2_e2a0 = inttoptr i32 %v0_e294 to i32*
  %v3_e2a0 = call i32 @function_1293c(i32 15, i32* %v2_e2a0)
  %v0_e2a8 = load i32, i32* @sl, align 4
  %v2_e2a8 = add i32 %v2_e290, %v0_e2a8
  store i32 %v2_e2a8, i32* @r0, align 4
  %v2_e2ac = inttoptr i32 %v2_e2a8 to i8*
  %v3_e2ac = call i32 @function_13014(i8* %v2_e2ac, i32 %v3_e2a0)
  %v3_e2b4 = call %__dirstream* @opendir(i8* %v2_e20c)
  %v5_e2b4 = ptrtoint %__dirstream* %v3_e2b4 to i32
  store i32 %v5_e2b4, i32* %sb.global-to-local, align 4
  %v2_e2b8 = icmp eq %__dirstream* %v3_e2b4, null
  br i1 %v2_e2b8, label %dec_label_pc_e1cc.loopexit, label %dec_label_pc_e2c0.preheader

dec_label_pc_e2c0.preheader:                      ; preds = %dec_label_pc_e260
  %v3_e2c4138 = call %dirent* @readdir(%__dirstream* nonnull %v3_e2b4)
  %v5_e2c4139 = ptrtoint %dirent* %v3_e2c4138 to i32
  store i32 %v5_e2c4139, i32* @r6, align 4
  %v2_e2c8140 = icmp eq %dirent* %v3_e2c4138, null
  store i32 4096, i32* @r1, align 4
  store i32 %v2_df28, i32* @r0, align 4
  br i1 %v2_e2c8140, label %dec_label_pc_e3c8, label %dec_label_pc_e2d8thread-pre-split

dec_label_pc_e2c0.loopexit:                       ; preds = %dec_label_pc_e2e0, %dec_label_pc_e378
  %v0_e2c0.pre = load i32, i32* %sb.global-to-local, align 4
  %v1_e2c0 = inttoptr i32 %v0_e2c0.pre to %__dirstream*
  %v3_e2c4 = call %dirent* @readdir(%__dirstream* %v1_e2c0)
  %v5_e2c4 = ptrtoint %dirent* %v3_e2c4 to i32
  store i32 %v5_e2c4, i32* @r6, align 4
  %v2_e2c8 = icmp eq %dirent* %v3_e2c4, null
  store i32 4096, i32* @r1, align 4
  store i32 %v2_df28, i32* @r0, align 4
  br i1 %v2_e2c8, label %dec_label_pc_e3c8, label %dec_label_pc_e2d8thread-pre-split

dec_label_pc_e2d8thread-pre-split:                ; preds = %dec_label_pc_e2c0.preheader, %dec_label_pc_e2c0.loopexit
  %v0_e2d8.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_e2d8

dec_label_pc_e2d8:                                ; preds = %dec_label_pc_e2d8thread-pre-split, %dec_label_pc_e3a0
  %v0_e2d8 = phi i32 [ %v0_e2d8.pr, %dec_label_pc_e2d8thread-pre-split ], [ 1, %dec_label_pc_e3a0 ]
  %v2_e2d8 = icmp eq i32 %v0_e2d8, 0
  br i1 %v2_e2d8, label %dec_label_pc_e2e0, label %dec_label_pc_e3c8

dec_label_pc_e2e0:                                ; preds = %dec_label_pc_e2d8
  %v0_e2e0 = call i32 @function_1308c()
  %v0_e2e4 = load i32, i32* @r5, align 4
  %v2_e2ec = inttoptr i32 %v0_e2e4 to i32*
  %v3_e2ec = call i32 @function_1293c(i32 13, i32* %v2_e2ec)
  store i32 %v2_df14, i32* @r0, align 4
  %v3_e2f8 = call i32 @function_13014(i8* %v2_e20c, i32 %v3_e2ec)
  %v2_e300 = call i32 @function_12fec(i8* %v2_e20c)
  %v0_e304 = load i32, i32* @r7, align 4
  %v0_e308 = load i32, i32* @sl, align 4
  %v2_e308 = add i32 %v0_e308, %v2_e300
  store i32 %v2_e308, i32* @r0, align 4
  %v2_e30c = inttoptr i32 %v2_e308 to i8*
  %v3_e30c = call i32 @function_13014(i8* %v2_e30c, i32 %v0_e304)
  %v2_e314 = call i32 @function_12fec(i8* %v2_e20c)
  %v0_e318 = load i32, i32* @r5, align 4
  store i32 %v2_e314, i32* @r4, align 4
  %v2_e324 = inttoptr i32 %v0_e318 to i32*
  %v3_e324 = call i32 @function_1293c(i32 15, i32* %v2_e324)
  %v0_e32c = load i32, i32* @sl, align 4
  %v1_e32c = load i32, i32* @r4, align 4
  %v2_e32c = add i32 %v1_e32c, %v0_e32c
  store i32 %v2_e32c, i32* @r0, align 4
  %v2_e330 = inttoptr i32 %v2_e32c to i8*
  %v3_e330 = call i32 @function_13014(i8* %v2_e330, i32 %v3_e324)
  %v2_e338 = call i32 @function_12fec(i8* %v2_e20c)
  %v0_e340 = load i32, i32* @sl, align 4
  %v2_e340 = add i32 %v0_e340, %v2_e338
  store i32 %v2_e340, i32* @r0, align 4
  %v2_e344 = inttoptr i32 %v2_e340 to i8*
  %v3_e344 = call i32 @function_13014(i8* %v2_e344, i32 ptrtoint (i32* @global_var_1387c.122 to i32))
  %v2_e34c = call i32 @function_12fec(i8* %v2_e20c)
  %v0_e350 = load i32, i32* @r6, align 4
  %v1_e350 = add i32 %v0_e350, 11
  %v0_e354 = load i32, i32* @sl, align 4
  %v2_e354 = add i32 %v0_e354, %v2_e34c
  store i32 %v2_e354, i32* @r0, align 4
  %v2_e358 = inttoptr i32 %v2_e354 to i8*
  %v3_e358 = call i32 @function_13014(i8* %v2_e358, i32 %v1_e350)
  %v7_e368 = call i32 @readlink(i8* %v2_e20c, i8* %tmp132, i32 4096)
  %v2_e36c = icmp eq i32 %v7_e368, -1
  br i1 %v2_e36c, label %dec_label_pc_e2c0.loopexit, label %dec_label_pc_e378

dec_label_pc_e378:                                ; preds = %dec_label_pc_e2e0
  %v2_e378 = call i32 @function_12fec(i8* %tmp132)
  store i32 %v2_e378, i32* @r1, align 4
  %v4_e38c = call i32 @function_13340(i8* %tmp132, i32 %v2_e378, i32 %v2_e19c.pre-phi)
  %v2_e390 = icmp eq i32 %v4_e38c, -1
  br i1 %v2_e390, label %dec_label_pc_e2c0.loopexit, label %dec_label_pc_e3a0

dec_label_pc_e3a0:                                ; preds = %dec_label_pc_e378
  %v0_e398 = load i32, i32* @r7, align 4
  %v2_e3a0 = inttoptr i32 %v0_e398 to i8*
  %v3_e3a0 = call i32 @function_13118(i8* %v2_e3a0, i32 10)
  %v2_e3a8 = call i32 @kill(i32 %v3_e3a0, i32 9)
  %v0_e3ac = load i32, i32* %sb.global-to-local, align 4
  %v1_e3ac = inttoptr i32 %v0_e3ac to %__dirstream*
  %v3_e3b0 = call %dirent* @readdir(%__dirstream* %v1_e3ac)
  %v5_e3b0 = ptrtoint %dirent* %v3_e3b0 to i32
  store i32 %v5_e3b0, i32* @r6, align 4
  %v2_e3b4 = icmp eq %dirent* %v3_e3b0, null
  store i32 1, i32* @r5, align 4
  store i32 4096, i32* @r1, align 4
  store i32 %v2_df28, i32* @r0, align 4
  br i1 %v2_e3b4, label %dec_label_pc_e3c8, label %dec_label_pc_e2d8

dec_label_pc_e3c8:                                ; preds = %dec_label_pc_e2c0.preheader, %dec_label_pc_e2c0.loopexit, %dec_label_pc_e3a0, %dec_label_pc_e2d8
  %v0_e3c8 = load i32, i32* %sb.global-to-local, align 4
  %v1_e3c8 = inttoptr i32 %v0_e3c8 to %__dirstream*
  %v3_e3cc = call i32 @closedir(%__dirstream* %v1_e3c8)
  %v0_e3d0 = load i32, i32* @r8, align 4
  %v1_e3d0 = inttoptr i32 %v0_e3d0 to %__dirstream*
  %v3_e3d4 = call %dirent* @readdir(%__dirstream* %v1_e3d0)
  %v2_e3d8 = icmp eq %dirent* %v3_e3d4, null
  br i1 %v2_e3d8, label %dec_label_pc_e3e0, label %dec_label_pc_e1dc

dec_label_pc_e3e0:                                ; preds = %dec_label_pc_e1cc.loopexit, %dec_label_pc_e3c8, %dec_label_pc_e1dc, %dec_label_pc_e1cc.preheader
  %v0_e3e0 = load i32, i32* @r8, align 4
  %v1_e3e0 = inttoptr i32 %v0_e3e0 to %__dirstream*
  %v3_e3e4 = call i32 @closedir(%__dirstream* %v1_e3e0)
  %v0_e3e8 = load i32, i32* @r5, align 4
  %v1_e3e8 = urem i32 %v0_e3e8, 256
  br label %dec_label_pc_e3ec

dec_label_pc_e3ec:                                ; preds = %dec_label_pc_e1ac, %dec_label_pc_e3e0
  %storemerge = phi i32 [ %v1_e3e8, %dec_label_pc_e3e0 ], [ %v5_e1b8, %dec_label_pc_e1ac ]
  store i32 %storemerge, i32* @r4, align 4
  %v1_e3f0 = call i32 @sleep(i32 1)
  %v1_e3f8 = call i32 @function_12968(i32 13)
  %v1_e400 = call i32 @function_12968(i32 14)
  %v1_e408 = call i32 @function_12968(i32 15)
  br label %dec_label_pc_e40c

dec_label_pc_e40c:                                ; preds = %dec_label_pc_dfb0, %dec_label_pc_e44c, %dec_label_pc_e3ec
  %v0_e40c = load i32, i32* @r4, align 4
  %v2_e418 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_e418, i32* @r4, align 4
  store i32 %v6_df00, i32* @r5, align 4
  store i32 %v9_df00, i32* @r6, align 4
  store i32 %v12_df00, i32* @r7, align 4
  store i32 %v15_df00, i32* @r8, align 4
  store i32 %v21_df00, i32* @sl, align 4
  ret i32 %v0_e40c

dec_label_pc_e41c:                                ; preds = %dec_label_pc_e100
  %v1_e41c = add i32 %v0_e41c, 1
  %v7_e420 = icmp eq i32 %v0_e41c, 0
  br i1 %v7_e420, label %dec_label_pc_e428, label %dec_label_pc_e108

dec_label_pc_e428:                                ; preds = %dec_label_pc_e41c
  %v1_e428 = add i32 %v0_e110, 3
  %v2_e428 = inttoptr i32 %v1_e428 to i8*
  %v3_e428 = load i8, i8* %v2_e428, align 1
  %v7_e42c = icmp eq i8 %v3_e428, 65
  br i1 %v7_e42c, label %dec_label_pc_e43c, label %.thread33

.thread33:                                        ; preds = %dec_label_pc_e428
  br label %dec_label_pc_e0d8.backedge

dec_label_pc_e43c:                                ; preds = %dec_label_pc_e428
  store i32 %v1_e41c, i32* @r4, align 4
  br label %dec_label_pc_e0d8.backedge

dec_label_pc_e0d8.backedge:                       ; preds = %.thread33, %dec_label_pc_e43c, %dec_label_pc_e10c
  %v0_e11881 = phi i32 [ %v1_e41c, %dec_label_pc_e43c ], [ %v0_e11882, %dec_label_pc_e10c ], [ %v0_e11882, %.thread33 ]
  %v0_e41c70 = phi i32 [ %v1_e41c, %dec_label_pc_e43c ], [ %v0_e10c, %dec_label_pc_e10c ], [ %v1_e41c, %.thread33 ]
  %v0_e100.pr67 = phi i32 [ 0, %dec_label_pc_e43c ], [ %v0_e100.pr68, %dec_label_pc_e10c ], [ 0, %.thread33 ]
  %v0_e0d8 = add i32 %v0_e110, 1
  %v1_e0d8 = add i32 %v0_e110, 3
  %v2_e0d8 = inttoptr i32 %v1_e0d8 to i8*
  %v3_e0d8 = load i8, i8* %v2_e0d8, align 1
  %v2_e0dc = icmp eq i8 %v3_e0d8, 0
  %v1_e0e0 = add i32 %v0_e0e078, 1
  br i1 %v2_e0dc, label %dec_label_pc_e118, label %dec_label_pc_e0e8

dec_label_pc_e44c:                                ; preds = %dec_label_pc_e190
  %v1_e450 = call i32 @function_12968(i32 13)
  %v1_e458 = call i32 @function_12968(i32 14)
  %v1_e460 = call i32 @function_12968(i32 15)
  %v1_e468 = call i32 @function_12968(i32 17)
  br label %dec_label_pc_e40c

dec_label_pc_e470:                                ; preds = %dec_label_pc_df00
  store i8 48, i8* %stack_var_-68, align 1
  br label %dec_label_pc_dfb0

; uselistorder directives
  uselistorder i32 %v1_e0e0, { 1, 0 }
  uselistorder i8 %v3_e0d8, { 1, 0 }
  uselistorder i32 %v0_e11881, { 1, 0 }
  uselistorder i32 %v1_e41c, { 4, 3, 0, 2, 1 }
  uselistorder %dirent* %v3_e3d4, { 1, 0 }
  uselistorder i8* %tmp132, { 1, 0, 2, 3 }
  uselistorder i32 %v1_e144, { 1, 0 }
  uselistorder i32 %v0_e15028, { 1, 0 }
  uselistorder i32 %v1_e168, { 0, 3, 1, 2 }
  uselistorder i32 %v0_e10c, { 1, 0 }
  uselistorder i32 %v0_e0e078, { 1, 0 }
  uselistorder i32 %v0_e41c, { 4, 3, 0, 1, 2 }
  uselistorder i32 %v0_e11882, { 1, 2, 0 }
  uselistorder i32 %v1_e0e052, { 1, 0 }
  uselistorder i32 %v2_e0c4, { 1, 0 }
  uselistorder i32 %v1_e0c0, { 3, 1, 0, 2, 4 }
  uselistorder i32 %v0_e07c13, { 1, 0, 2 }
  uselistorder i32 %v0_e06c, { 1, 0 }
  uselistorder i32 %v1_e04c, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32* %v3_df70, { 1, 0, 2 }
  uselistorder i32 %v2_df28, { 1, 2, 0 }
  uselistorder i32* %stack_var_-36, { 0, 2, 1 }
  uselistorder i32* %stack_var_-8773, { 1, 0, 2 }
  uselistorder i8* %stack_var_-581, { 2, 0, 1 }
  uselistorder i8* %stack_var_-68, { 2, 0, 1 }
  uselistorder i32* %stack_var_-52, { 0, 1, 2, 4, 3 }
  uselistorder i32* %sb.global-to-local, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 (i8*, i32)* @function_13118, { 1, 0 }
  uselistorder i32 (i32*, i32, i32)* @function_13244, { 1, 0 }
  uselistorder i32 512, { 4, 0, 5, 7, 1, 8, 2, 9, 3, 10, 6 }
  uselistorder label %dec_label_pc_e0d8.backedge, { 1, 0, 2 }
  uselistorder label %dec_label_pc_e40c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_e3ec, { 1, 0 }
  uselistorder label %dec_label_pc_e3e0, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_e3c8, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_e2d8, { 1, 0 }
  uselistorder label %dec_label_pc_e2d8thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_e2c0.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_e1dc, { 1, 0 }
  uselistorder label %dec_label_pc_e1dc.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_e1cc.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_e164, { 2, 1, 0 }
  uselistorder label %dec_label_pc_e10c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e0e8, { 1, 0 }
  uselistorder label %dec_label_pc_e08c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_dff0.backedge, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_e040, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_e008, { 1, 0 }
  uselistorder label %dec_label_pc_dfb0, { 1, 0 }
}

define i32 @function_e49c(i32 %arg1) local_unnamed_addr {
dec_label_pc_e49c:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-220 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-124 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %stack_var_-8476 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-4380 = alloca i32, align 4
  %stack_var_-8484 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_e49c = load i32, i32* @r4, align 4
  store i32 %v3_e49c, i32* %stack_var_-36, align 4
  %v6_e49c = load i32, i32* @r5, align 4
  %v9_e49c = load i32, i32* @r6, align 4
  %v12_e49c = load i32, i32* @r7, align 4
  %v15_e49c = load i32, i32* @r8, align 4
  %v18_e49c = load i32, i32* @sb, align 4
  %v21_e49c = load i32, i32* @sl, align 4
  %v24_e49c = load i32, i32* @fp, align 4
  %v28_e49c = ptrtoint i32* %stack_var_-36 to i32
  %v2_e4a8 = call i32 @time(i32* null)
  store i32 %v2_e4a8, i32* @r7, align 4
  %v0_e4b0 = call i32 @fork()
  %v2_e4b4 = icmp eq i32 %v0_e4b0, -1
  %. = zext i1 %v2_e4b4 to i32
  %tmp131 = icmp slt i32 %v0_e4b0, 1
  %storemerge87 = select i1 %tmp131, i32 %., i32 1
  store i32 %storemerge87, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_1bd30.124 to i32), i32* %r3.global-to-local, align 4
  %v2_e4d0 = icmp eq i32 %storemerge87, 0
  store i32 %v0_e4b0, i32* @global_var_1bd30.124, align 4
  br i1 %v2_e4d0, label %dec_label_pc_e4e4, label %dec_label_pc_e4dc

dec_label_pc_e4dc:                                ; preds = %dec_label_pc_e5f8, %dec_label_pc_e4e4, %dec_label_pc_e49c
  %v29_e4e0 = phi i32 [ -1, %dec_label_pc_e4e4 ], [ %v0_e4b0, %dec_label_pc_e49c ], [ %v5_e60c, %dec_label_pc_e5f8 ]
  %v2_e4e0 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_e4e0, i32* @r4, align 4
  store i32 %v6_e49c, i32* @r5, align 4
  store i32 %v9_e49c, i32* @r6, align 4
  store i32 %v12_e49c, i32* @r7, align 4
  store i32 %v15_e49c, i32* @r8, align 4
  store i32 %v18_e49c, i32* @sb, align 4
  store i32 %v21_e49c, i32* @sl, align 4
  store i32 %v24_e49c, i32* @fp, align 4
  ret i32 %v29_e4e0

dec_label_pc_e4e4:                                ; preds = %dec_label_pc_e49c
  %v1_e4e8 = call i32 @sleep(i32 5)
  %v1_e4f0 = call i32* @malloc(i32 4096)
  %v3_e4f0 = ptrtoint i32* %v1_e4f0 to i32
  store i32 ptrtoint (i32* @global_var_1bcd4.126 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_1bd2c.128 to i32), i32* %r1.global-to-local, align 4
  store i32 %v3_e4f0, i32* %r2.global-to-local, align 4
  %v0_e500 = load i32, i32* @r5, align 4
  %v1_e500 = trunc i32 %v0_e500 to i8
  %v3_e500 = bitcast i32* %v1_e4f0 to i8*
  store i8 %v1_e500, i8* %v3_e500, align 1
  %v0_e508 = load i32, i32* @r5, align 4
  %v1_e508 = load i32, i32* %r3.global-to-local, align 4
  %v2_e508 = inttoptr i32 %v1_e508 to i32*
  store i32 %v0_e508, i32* %v2_e508, align 4
  %v0_e50c = load i32, i32* %r2.global-to-local, align 4
  %v1_e50c = load i32, i32* %r1.global-to-local, align 4
  %v2_e50c = inttoptr i32 %v1_e50c to i32*
  store i32 %v0_e50c, i32* %v2_e50c, align 4
  %v1_e510 = call i32 @function_12a20(i32 13)
  %v1_e518 = call i32 @function_12a20(i32 14)
  %v0_e51c = load i32, i32* @r5, align 4
  store i32 %v0_e51c, i32* %r1.global-to-local, align 4
  %v2_e524 = inttoptr i32 %v0_e51c to i32*
  %v3_e524 = call i32 @function_1293c(i32 13, i32* %v2_e524)
  %v2_e52c = ptrtoint i32* %stack_var_-4380 to i32
  store i32 %v2_e52c, i32* @fp, align 4
  store i32 %v3_e524, i32* %r1.global-to-local, align 4
  store i32 %v2_e52c, i32* @r0, align 4
  %v2_e538 = bitcast i32* %stack_var_-4380 to i8*
  %v3_e538 = call i32 @function_13014(i8* %v2_e538, i32 %v3_e524)
  %v0_e53c = load i32, i32* @fp, align 4
  %v2_e53c = add i32 %v0_e53c, %v3_e538
  store i32 %v2_e53c, i32* @r4, align 4
  %v1_e540 = call i32 @getpid()
  %v2_e548 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v2_e548, i32* %r2.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v3_e550 = trunc i32 %v1_e540 to i8
  %v4_e550 = call i32 @function_13450(i8 %v3_e550, i32 10, i32 %v2_e548)
  store i32 %v4_e550, i32* %r1.global-to-local, align 4
  %v0_e558 = load i32, i32* @r4, align 4
  store i32 %v0_e558, i32* @r0, align 4
  %v2_e55c = inttoptr i32 %v0_e558 to i8*
  %v3_e55c = call i32 @function_13014(i8* %v2_e55c, i32 %v4_e550)
  %v0_e560 = load i32, i32* @r5, align 4
  store i32 %v0_e560, i32* %r1.global-to-local, align 4
  %v0_e564 = load i32, i32* @r4, align 4
  %v2_e564 = add i32 %v0_e564, %v3_e55c
  store i32 %v2_e564, i32* @r4, align 4
  %v2_e56c = inttoptr i32 %v0_e560 to i32*
  %v3_e56c = call i32 @function_1293c(i32 14, i32* %v2_e56c)
  store i32 %v3_e56c, i32* %r1.global-to-local, align 4
  %v0_e574 = load i32, i32* @r4, align 4
  store i32 %v0_e574, i32* @r0, align 4
  %v2_e578 = inttoptr i32 %v0_e574 to i8*
  %v3_e578 = call i32 @function_13014(i8* %v2_e578, i32 %v3_e56c)
  %v0_e57c = load i32, i32* @r5, align 4
  store i32 %v0_e57c, i32* %r1.global-to-local, align 4
  store i32 %v3_e578, i32* @r6, align 4
  %v4_e588 = call i32 (i8*, i32, ...) @open(i8* %v2_e538, i32 %v0_e57c)
  %v2_e58c = icmp eq i32 %v4_e588, -1
  br i1 %v2_e58c, label %dec_label_pc_e4dc, label %dec_label_pc_e594

dec_label_pc_e594:                                ; preds = %dec_label_pc_e4e4
  %v1_e594 = call i32 @close(i32 %v4_e588)
  %v1_e59c = call i32 @function_12968(i32 13)
  %v1_e5a4 = call i32 @function_12968(i32 14)
  store i32 ptrtoint (i8** @global_var_1bd2c.128 to i32), i32* %r3.global-to-local, align 4
  %v2_e5b0 = load i8*, i8** @global_var_1bd2c.128, align 4
  %v3_e5b0 = ptrtoint i8* %v2_e5b0 to i32
  store i32 %v3_e5b0, i32* %r1.global-to-local, align 4
  store i32 4095, i32* %r2.global-to-local, align 4
  %v7_e5bc = call i32 @readlink(i8* %v2_e538, i8* %v2_e5b0, i32 4095)
  %v2_e5c0 = icmp eq i32 %v7_e5bc, -1
  br i1 %v2_e5c0, label %.thread2.thread, label %bb134

.thread2.thread:                                  ; preds = %dec_label_pc_e594
  %v0_e5cc24 = load i32, i32* @r4, align 4
  %v1_e5cc25 = load i32, i32* @r6, align 4
  %v2_e5cc26 = add i32 %v1_e5cc25, %v0_e5cc24
  store i32 %v2_e5cc26, i32* %r1.global-to-local, align 4
  br label %bb135

bb134:                                            ; preds = %dec_label_pc_e594
  %v3_e5c8 = load i8*, i8** @global_var_1bd2c.128, align 4
  %v4_e5c8 = ptrtoint i8* %v3_e5c8 to i32
  store i32 %v4_e5c8, i32* %r3.global-to-local, align 4
  %v0_e5cc = load i32, i32* @r4, align 4
  %v1_e5cc = load i32, i32* @r6, align 4
  %v2_e5cc = add i32 %v1_e5cc, %v0_e5cc
  store i32 %v2_e5cc, i32* %r1.global-to-local, align 4
  %v1_e5d0 = load i32, i32* @r5, align 4
  %v2_e5d0 = trunc i32 %v1_e5d0 to i8
  %v5_e5d0 = add i32 %v4_e5c8, %v7_e5bc
  %v6_e5d0 = inttoptr i32 %v5_e5d0 to i8*
  store i8 %v2_e5d0, i8* %v6_e5d0, align 1
  %v1_e5d4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb135

bb135:                                            ; preds = %.thread2.thread, %bb134
  %v1_e5d4 = phi i32 [ %v2_e5cc26, %.thread2.thread ], [ %v1_e5d4.pre, %bb134 ]
  %v0_e5d4 = load i32, i32* @fp, align 4
  %v2_e5d4 = sub i32 %v1_e5d4, %v0_e5d4
  store i32 %v2_e5d4, i32* @r1, align 4
  store i32 %v2_e52c, i32* @r0, align 4
  %v0_e5dc = call i32 @function_1308c()
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_e5ec = load i32, i32* @r7, align 4
  store i32 %v0_e5ec, i32* @r5, align 4
  %v2_e5f0 = ptrtoint i32* %stack_var_-8476 to i32
  store i32 %v2_e5f0, i32* @sl, align 4
  store i32 400, i32* @r8, align 4
  %v2_e6dc = ptrtoint i32* %stack_var_-292 to i32
  %v2_e92c = ptrtoint i32* %stack_var_-284 to i32
  %v2_e930 = bitcast i32* %stack_var_-284 to i8*
  %v2_e97c = ptrtoint i32* %stack_var_-220 to i32
  %v2_e980 = bitcast i32* %stack_var_-220 to i8*
  %v2_ead8 = ptrtoint i32* %stack_var_-40 to i32
  %v2_eaec = ptrtoint i32* %stack_var_-44 to i32
  %v2_e848 = ptrtoint i32* %stack_var_-108 to i32
  %v2_e810 = ptrtoint i32* %stack_var_-92 to i32
  %v2_e7d8 = ptrtoint i32* %stack_var_-140 to i32
  %v2_e7a0 = ptrtoint i32* %stack_var_-124 to i32
  %v2_e768 = ptrtoint i32* %stack_var_-76 to i32
  %v2_e720 = ptrtoint i32* %stack_var_-60 to i32
  br label %dec_label_pc_e5f8

dec_label_pc_e5f8:                                ; preds = %dec_label_pc_e8f0, %bb135
  %stack_var_-8480.0 = phi i32 [ 0, %bb135 ], [ %stack_var_-8480.3, %dec_label_pc_e8f0 ]
  %v1_e5fc = call i32 @function_12a20(i32 13)
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_e608 = call i32 @function_1293c(i32 13, i32* null)
  %v4_e608 = inttoptr i32 %v3_e608 to i8*
  %v3_e60c = call %__dirstream* @opendir(i8* %v4_e608)
  %v5_e60c = ptrtoint %__dirstream* %v3_e60c to i32
  store i32 %v5_e60c, i32* @sb, align 4
  %v2_e610 = icmp eq %__dirstream* %v3_e60c, null
  br i1 %v2_e610, label %dec_label_pc_e4dc, label %dec_label_pc_e618

dec_label_pc_e618:                                ; preds = %dec_label_pc_e5f8
  %v1_e61c = call i32 @function_12968(i32 13)
  %v1_e628 = call i32 @function_df00(i32 58811)
  %v1_e634 = call i32 @function_df00(i32 50951)
  %v1_e640 = call i32 @function_df00(i32 14853)
  %v1_e648 = call i32 @function_df00(i32 20480)
  %v1_e654 = call i32 @function_df00(i32 47873)
  %v1_e660 = call i32 @function_df00(i32 57616)
  %v1_e66c = call i32 @function_df00(i32 2842)
  %v1_e678 = call i32 @function_df00(i32 10522)
  %v1_e680 = call i32 @function_df00(i32 5632)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_e70c = call i32 @socket(i32 2, i32 1, i32 0)
  %v2_e710 = icmp eq i32 %v3_e70c, -1
  store i32 %v3_e70c, i32* @r4, align 4
  br i1 %v2_e710, label %dec_label_pc_e738, label %dec_label_pc_e71c

dec_label_pc_e71c:                                ; preds = %dec_label_pc_e618
  store i32 %v2_e720, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v6_e728 = call i32 @bind(i32 %v2_e720, %sockaddr* inttoptr (i32 16 to %sockaddr*), i32 16)
  %v0_e72c = load i32, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_e734 = call i32 @listen(i32 %v0_e72c, i32 1)
  br label %dec_label_pc_e738

dec_label_pc_e738:                                ; preds = %dec_label_pc_e618, %dec_label_pc_e71c
  %v1_e73c = call i32 @function_df00(i32 5888)
  %v2_e740 = icmp eq i32 %v1_e73c, 0
  br i1 %v2_e740, label %dec_label_pc_ec04, label %dec_label_pc_e748

dec_label_pc_e748:                                ; preds = %dec_label_pc_ec28, %dec_label_pc_ec18, %dec_label_pc_ec04, %dec_label_pc_e738, %dec_label_pc_ec3c
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_e754 = call i32 @socket(i32 2, i32 1, i32 0)
  %v2_e758 = icmp eq i32 %v3_e754, -1
  store i32 %v3_e754, i32* %r4.global-to-local, align 4
  br i1 %v2_e758, label %dec_label_pc_e780, label %dec_label_pc_e764

dec_label_pc_e764:                                ; preds = %dec_label_pc_e748
  store i32 %v2_e768, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v6_e770 = call i32 @bind(i32 %v2_e768, %sockaddr* inttoptr (i32 16 to %sockaddr*), i32 16)
  %v0_e774 = load i32, i32* %r4.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_e77c = call i32 @listen(i32 %v0_e774, i32 1)
  br label %dec_label_pc_e780

dec_label_pc_e780:                                ; preds = %dec_label_pc_e748, %dec_label_pc_e764
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_e78c = call i32 @socket(i32 2, i32 1, i32 0)
  %v2_e790 = icmp eq i32 %v3_e78c, -1
  store i32 %v3_e78c, i32* %r4.global-to-local, align 4
  br i1 %v2_e790, label %dec_label_pc_e7b8, label %dec_label_pc_e79c

dec_label_pc_e79c:                                ; preds = %dec_label_pc_e780
  store i32 %v2_e7a0, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v6_e7a8 = call i32 @bind(i32 %v2_e7a0, %sockaddr* inttoptr (i32 16 to %sockaddr*), i32 16)
  %v0_e7ac = load i32, i32* %r4.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_e7b4 = call i32 @listen(i32 %v0_e7ac, i32 1)
  br label %dec_label_pc_e7b8

dec_label_pc_e7b8:                                ; preds = %dec_label_pc_e780, %dec_label_pc_e79c
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_e7c4 = call i32 @socket(i32 2, i32 1, i32 0)
  %v2_e7c8 = icmp eq i32 %v3_e7c4, -1
  store i32 %v3_e7c4, i32* %r4.global-to-local, align 4
  br i1 %v2_e7c8, label %dec_label_pc_e7f0, label %dec_label_pc_e7d4

dec_label_pc_e7d4:                                ; preds = %dec_label_pc_e7b8
  store i32 %v2_e7d8, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v6_e7e0 = call i32 @bind(i32 %v2_e7d8, %sockaddr* inttoptr (i32 16 to %sockaddr*), i32 16)
  %v0_e7e4 = load i32, i32* %r4.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_e7ec = call i32 @listen(i32 %v0_e7e4, i32 1)
  br label %dec_label_pc_e7f0

dec_label_pc_e7f0:                                ; preds = %dec_label_pc_e7b8, %dec_label_pc_e7d4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_e7fc = call i32 @socket(i32 2, i32 1, i32 0)
  %v2_e800 = icmp eq i32 %v3_e7fc, -1
  store i32 %v3_e7fc, i32* %r4.global-to-local, align 4
  br i1 %v2_e800, label %dec_label_pc_e828, label %dec_label_pc_e80c

dec_label_pc_e80c:                                ; preds = %dec_label_pc_e7f0
  store i32 %v2_e810, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v6_e818 = call i32 @bind(i32 %v2_e810, %sockaddr* inttoptr (i32 16 to %sockaddr*), i32 16)
  %v0_e81c = load i32, i32* %r4.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_e824 = call i32 @listen(i32 %v0_e81c, i32 1)
  br label %dec_label_pc_e828

dec_label_pc_e828:                                ; preds = %dec_label_pc_e7f0, %dec_label_pc_e80c
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_e834 = call i32 @socket(i32 2, i32 1, i32 0)
  %v2_e838 = icmp eq i32 %v3_e834, -1
  store i32 %v3_e834, i32* @r4, align 4
  br i1 %v2_e838, label %dec_label_pc_e860.preheader, label %dec_label_pc_e844

dec_label_pc_e844:                                ; preds = %dec_label_pc_e828
  store i32 %v2_e848, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v6_e850 = call i32 @bind(i32 %v2_e848, %sockaddr* inttoptr (i32 16 to %sockaddr*), i32 16)
  %v0_e854 = load i32, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_e85c = call i32 @listen(i32 %v0_e854, i32 1)
  br label %dec_label_pc_e860.preheader

dec_label_pc_e860.preheader:                      ; preds = %dec_label_pc_e844, %dec_label_pc_e828
  %v0_e86053 = load i32, i32* @sb, align 4
  %v1_e86054 = inttoptr i32 %v0_e86053 to %__dirstream*
  %v3_e86455 = call %dirent* @readdir(%__dirstream* %v1_e86054)
  %v2_e86858 = icmp eq %dirent* %v3_e86455, null
  br i1 %v2_e86858, label %dec_label_pc_e8f0, label %dec_label_pc_e870.preheader

dec_label_pc_e870.preheader:                      ; preds = %dec_label_pc_e860.preheader, %dec_label_pc_e860.backedge
  %v0_e87067.in = phi %dirent* [ %v3_e864, %dec_label_pc_e860.backedge ], [ %v3_e86455, %dec_label_pc_e860.preheader ]
  %stack_var_-8480.159 = phi i32 [ %stack_var_-8480.1.be, %dec_label_pc_e860.backedge ], [ %stack_var_-8480.0, %dec_label_pc_e860.preheader ]
  br label %dec_label_pc_e870

dec_label_pc_e870:                                ; preds = %dec_label_pc_e870.preheader, %dec_label_pc_e8d8
  %v0_e880.in = phi %dirent* [ %v3_e8e4, %dec_label_pc_e8d8 ], [ %v0_e87067.in, %dec_label_pc_e870.preheader ]
  %stack_var_-8480.2 = phi i32 [ %v1_e894, %dec_label_pc_e8d8 ], [ %stack_var_-8480.159, %dec_label_pc_e870.preheader ]
  %v0_e880 = ptrtoint %dirent* %v0_e880.in to i32
  %v1_e870 = add i32 %v0_e880, 11
  %v2_e870 = inttoptr i32 %v1_e870 to i8*
  %v3_e870 = load i8, i8* %v2_e870, align 1
  %v4_e870 = zext i8 %v3_e870 to i32
  %v1_e874 = add nsw i32 %v4_e870, -48
  store i32 %v1_e874, i32* %r3.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_e874, 9
  br i1 %tmp, label %dec_label_pc_e860.backedge, label %dec_label_pc_e880

dec_label_pc_e880:                                ; preds = %dec_label_pc_e870
  store i32 %v1_e870, i32* @r6, align 4
  %v4_e888 = call i32 @atoi(i8* %v2_e870)
  %v0_e890 = load i32, i32* @r8, align 4
  %v1_e894 = add i32 %stack_var_-8480.2, 1
  store i32 %v4_e888, i32* @r7, align 4
  %v5_e8a0 = icmp slt i32 %v0_e890, %v4_e888
  %v2_e900 = call i32 @time(i32* null)
  br i1 %v5_e8a0, label %dec_label_pc_e8fc, label %dec_label_pc_e8a4

dec_label_pc_e8a4:                                ; preds = %dec_label_pc_e880
  %v0_e8ac = load i32, i32* @r5, align 4
  %v2_e8ac = sub i32 %v2_e900, %v0_e8ac
  %v7_e8b4 = icmp slt i32 %v2_e8ac, 601
  br i1 %v7_e8b4, label %dec_label_pc_e8bc, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_e8a4
  store i32 400, i32* @r8, align 4
  br label %dec_label_pc_e860.backedge

dec_label_pc_e8bc:                                ; preds = %dec_label_pc_e8a4
  %v0_e8bc = load i32, i32* @r7, align 4
  %v7_e8c0 = icmp slt i32 %v0_e8bc, 401
  br i1 %v7_e8c0, label %dec_label_pc_e860.backedge, label %dec_label_pc_e8c4

dec_label_pc_e8c4:                                ; preds = %dec_label_pc_e8bc
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_e8cc = urem i32 %v1_e894, 10
  %v2_e8d0 = icmp eq i32 %v2_e8cc, 0
  br i1 %v2_e8d0, label %dec_label_pc_e8d8, label %dec_label_pc_e860.backedge

dec_label_pc_e8d8:                                ; preds = %dec_label_pc_e8c4
  %v1_e8dc = call i32 @sleep(i32 1)
  %v0_e8e0 = load i32, i32* @sb, align 4
  %v1_e8e0 = inttoptr i32 %v0_e8e0 to %__dirstream*
  %v3_e8e4 = call %dirent* @readdir(%__dirstream* %v1_e8e0)
  %v2_e8e8 = icmp eq %dirent* %v3_e8e4, null
  br i1 %v2_e8e8, label %dec_label_pc_e8f0, label %dec_label_pc_e870

dec_label_pc_e8f0:                                ; preds = %dec_label_pc_e860.backedge, %dec_label_pc_e8d8, %dec_label_pc_e860.preheader
  %stack_var_-8480.3 = phi i32 [ %stack_var_-8480.0, %dec_label_pc_e860.preheader ], [ %v1_e894, %dec_label_pc_e8d8 ], [ %stack_var_-8480.1.be, %dec_label_pc_e860.backedge ]
  %v0_e8f0 = load i32, i32* @sb, align 4
  %v1_e8f0 = inttoptr i32 %v0_e8f0 to %__dirstream*
  %v3_e8f4 = call i32 @closedir(%__dirstream* %v1_e8f0)
  br label %dec_label_pc_e5f8

dec_label_pc_e8fc:                                ; preds = %dec_label_pc_e880
  store i32 %v2_e900, i32* %stack_var_-8484, align 4
  %v1_e90c = call i32 @function_12a20(i32 13)
  %v1_e914 = call i32 @function_12a20(i32 14)
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_e920 = call i32 @function_1293c(i32 13, i32* null)
  store i32 %v3_e920, i32* %r1.global-to-local, align 4
  store i32 %v2_e92c, i32* @r0, align 4
  %v3_e930 = call i32 @function_13014(i8* %v2_e930, i32 %v3_e920)
  %v2_e93c = add i32 %v3_e930, %v2_e92c
  store i32 %v2_e93c, i32* %r5.global-to-local, align 4
  store i32 %v2_e93c, i32* @r0, align 4
  %v0_e944 = load i32, i32* @r6, align 4
  store i32 %v0_e944, i32* %r1.global-to-local, align 4
  %v2_e948 = inttoptr i32 %v2_e93c to i8*
  %v3_e948 = call i32 @function_13014(i8* %v2_e948, i32 %v0_e944)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v3_e948, i32* %r4.global-to-local, align 4
  %v3_e958 = call i32 @function_1293c(i32 14, i32* null)
  store i32 %v3_e958, i32* %r1.global-to-local, align 4
  %v0_e960 = load i32, i32* %r5.global-to-local, align 4
  %v2_e960 = add i32 %v3_e948, %v0_e960
  store i32 %v2_e960, i32* @r0, align 4
  %v2_e964 = inttoptr i32 %v2_e960 to i8*
  %v3_e964 = call i32 @function_13014(i8* %v2_e964, i32 %v3_e958)
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_e970 = call i32 @function_1293c(i32 13, i32* null)
  store i32 %v3_e970, i32* %r1.global-to-local, align 4
  store i32 %v2_e97c, i32* @r0, align 4
  %v3_e980 = call i32 @function_13014(i8* %v2_e980, i32 %v3_e970)
  store i32 %v2_e97c, i32* %r2.global-to-local, align 4
  %v2_e98c = add i32 %v3_e980, %v2_e97c
  store i32 %v2_e98c, i32* @r5, align 4
  %v0_e990 = load i32, i32* @r6, align 4
  store i32 %v0_e990, i32* %r1.global-to-local, align 4
  store i32 %v2_e98c, i32* @r0, align 4
  %v2_e998 = inttoptr i32 %v2_e98c to i8*
  %v3_e998 = call i32 @function_13014(i8* %v2_e998, i32 %v0_e990)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v3_e998, i32* @r4, align 4
  %v3_e9a8 = call i32 @function_1293c(i32 29, i32* null)
  store i32 %v3_e9a8, i32* %r1.global-to-local, align 4
  %v0_e9b0 = load i32, i32* @r5, align 4
  %v1_e9b0 = load i32, i32* @r4, align 4
  %v2_e9b0 = add i32 %v1_e9b0, %v0_e9b0
  store i32 %v2_e9b0, i32* @r0, align 4
  %v2_e9b4 = inttoptr i32 %v2_e9b0 to i8*
  %v3_e9b4 = call i32 @function_13014(i8* %v2_e9b4, i32 %v3_e9a8)
  %v1_e9bc = call i32 @function_12968(i32 13)
  %v1_e9c4 = call i32 @function_12968(i32 14)
  store i32 4095, i32* %r2.global-to-local, align 4
  store i32 %v2_e52c, i32* %r1.global-to-local, align 4
  %v7_e9dc = call i32 @readlink(i8* %v2_e930, i8* %v2_e538, i32 4095)
  %v2_e9e4 = icmp eq i32 %v7_e9dc, -1
  store i32 %v7_e9dc, i32* @r4, align 4
  store i32 -4344, i32* %r2.global-to-local, align 4
  br i1 %v2_e9e4, label %dec_label_pc_eaa8, label %dec_label_pc_e9f4

dec_label_pc_e9f4:                                ; preds = %dec_label_pc_e8fc
  %v2_e9f8 = add i32 %v7_e9dc, %v28_e49c
  store i32 %v2_e9f8, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v4_ea00 = add i32 %v2_e9f8, -4344
  %v5_ea00 = inttoptr i32 %v4_ea00 to i8*
  store i8 0, i8* %v5_ea00, align 1
  %v1_ea08 = call i32 @function_12a20(i32 30)
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_ea14 = call i32 @function_1293c(i32 30, i32* null)
  %v0_ea18 = load i32, i32* @r4, align 4
  %v1_ea18 = add i32 %v0_ea18, -1
  store i32 %v1_ea18, i32* @r1, align 4
  store i32 %v3_ea14, i32* %r2.global-to-local, align 4
  %v4_ea24 = call i32 @function_13340(i8* %v2_e538, i32 %v1_ea18, i32 %v3_ea14)
  %v2_ea28 = icmp eq i32 %v4_ea24, -1
  br i1 %v2_ea28, label %dec_label_pc_ea44, label %dec_label_pc_ea30

dec_label_pc_ea30:                                ; preds = %dec_label_pc_e9f4
  %v3_ea34 = call i32 @unlink(i8* %v2_e538)
  %v0_ea38 = load i32, i32* @r7, align 4
  store i32 9, i32* %r1.global-to-local, align 4
  %v2_ea40 = call i32 @kill(i32 %v0_ea38, i32 9)
  br label %dec_label_pc_ea44

dec_label_pc_ea44:                                ; preds = %dec_label_pc_e9f4, %dec_label_pc_ea30
  %v1_ea48 = call i32 @function_12968(i32 30)
  %v1_ea4c = call i32 @getpid()
  %v0_ea50 = load i32, i32* @r7, align 4
  %v9_ea50 = icmp eq i32 %v0_ea50, %v1_ea4c
  br i1 %v9_ea50, label %dec_label_pc_ea7c, label %dec_label_pc_ea58

dec_label_pc_ea58:                                ; preds = %dec_label_pc_ea44
  %v0_ea58 = call i32 @getppid()
  %v0_ea5c = load i32, i32* @r7, align 4
  %v9_ea5c = icmp eq i32 %v0_ea5c, %v0_ea58
  br i1 %v9_ea5c, label %dec_label_pc_ea7c, label %dec_label_pc_ea64

dec_label_pc_ea64:                                ; preds = %dec_label_pc_ea58
  store i32 ptrtoint (i8** @global_var_1bd2c.128 to i32), i32* %r2.global-to-local, align 4
  %v3_ea6c = load i8*, i8** @global_var_1bd2c.128, align 4
  %v4_ea6c = ptrtoint i8* %v3_ea6c to i32
  store i32 %v4_ea6c, i32* %r1.global-to-local, align 4
  %v6_ea70 = call i32 @function_133cc(i8* %v2_e538, i32 %v4_ea6c, i32 ptrtoint (i8** @global_var_1bd2c.128 to i32))
  %v2_ea74 = icmp eq i32 %v6_ea70, 0
  br i1 %v2_ea74, label %dec_label_pc_ea88, label %dec_label_pc_ea64.dec_label_pc_ea7c_crit_edge

dec_label_pc_ea64.dec_label_pc_ea7c_crit_edge:    ; preds = %dec_label_pc_ea64
  %v0_ea80.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_ea7c

dec_label_pc_ea7c:                                ; preds = %dec_label_pc_ea64.dec_label_pc_ea7c_crit_edge, %dec_label_pc_ea58, %dec_label_pc_ea44
  %v0_ea80 = phi i32 [ %v0_ea80.pre, %dec_label_pc_ea64.dec_label_pc_ea7c_crit_edge ], [ %v0_ea58, %dec_label_pc_ea58 ], [ %v1_ea4c, %dec_label_pc_ea44 ]
  %v2_ea7c = load i32, i32* %stack_var_-8484, align 4
  store i32 %v2_ea7c, i32* @r5, align 4
  store i32 %v0_ea80, i32* @r8, align 4
  br label %dec_label_pc_e860.backedge

dec_label_pc_e860.backedge:                       ; preds = %dec_label_pc_e8c4, %dec_label_pc_e8bc, %dec_label_pc_e870, %dec_label_pc_ea7c, %dec_label_pc_ebd0, %.thread8
  %stack_var_-8480.1.be = phi i32 [ %v1_e894, %dec_label_pc_ebd0 ], [ %v1_e894, %dec_label_pc_ea7c ], [ %v1_e894, %.thread8 ], [ %stack_var_-8480.2, %dec_label_pc_e870 ], [ %v1_e894, %dec_label_pc_e8bc ], [ %v1_e894, %dec_label_pc_e8c4 ]
  %v0_e860 = load i32, i32* @sb, align 4
  %v1_e860 = inttoptr i32 %v0_e860 to %__dirstream*
  %v3_e864 = call %dirent* @readdir(%__dirstream* %v1_e860)
  %v2_e868 = icmp eq %dirent* %v3_e864, null
  br i1 %v2_e868, label %dec_label_pc_e8f0, label %dec_label_pc_e870.preheader

dec_label_pc_ea88:                                ; preds = %dec_label_pc_ea64
  store i32 0, i32* %r1.global-to-local, align 4
  %v4_ea90 = call i32 (i8*, i32, ...) @open(i8* %v2_e538, i32 0)
  %v2_ea94 = icmp eq i32 %v4_ea90, -1
  store i32 %v4_ea90, i32* @r4, align 4
  br i1 %v2_ea94, label %dec_label_pc_ec68, label %dec_label_pc_eaa0

dec_label_pc_eaa0:                                ; preds = %dec_label_pc_ea88, %dec_label_pc_ec68
  %v0_eaa0 = phi i32 [ %v4_ea90, %dec_label_pc_ea88 ], [ %v0_eaa0.pre, %dec_label_pc_ec68 ]
  %v1_eaa4 = call i32 @close(i32 %v0_eaa0)
  br label %dec_label_pc_eaa8

dec_label_pc_eaa8:                                ; preds = %dec_label_pc_e8fc, %dec_label_pc_eaa0
  store i32 0, i32* %r1.global-to-local, align 4
  %v4_eab4 = call i32 (i8*, i32, ...) @open(i8* %v2_e930, i32 0)
  %v2_eab8 = icmp eq i32 %v4_eab4, -1
  store i32 %v4_eab4, i32* %r8.global-to-local, align 4
  br i1 %v2_eab8, label %dec_label_pc_ebd0, label %dec_label_pc_eac4

dec_label_pc_eac4:                                ; preds = %dec_label_pc_eaa8
  %v1_eac8 = call i32 @function_12a20(i32 18)
  %v1_ead0 = call i32 @function_12a20(i32 19)
  store i32 %v2_ead8, i32* %r1.global-to-local, align 4
  %v3_eae0 = call i32 @function_1293c(i32 18, i32* nonnull %stack_var_-40)
  store i32 %v3_eae0, i32* @r5, align 4
  store i32 %v2_eaec, i32* %r1.global-to-local, align 4
  %v3_eaf4 = call i32 @function_1293c(i32 19, i32* nonnull %stack_var_-44)
  store i32 %v3_eaf4, i32* @r6, align 4
  %v0_eafc144 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v2_e5f0, i32* %r1.global-to-local, align 4
  store i32 4096, i32* %r2.global-to-local, align 4
  %v4_eb08145 = call i32 @read(i32 %v0_eafc144, i32* nonnull %stack_var_-8476, i32 4096)
  %tmp136147 = icmp slt i32 %v4_eb08145, 1
  br i1 %tmp136147, label %dec_label_pc_ec4c, label %dec_label_pc_eb14

dec_label_pc_eb14:                                ; preds = %dec_label_pc_eac4, %dec_label_pc_eafc.backedge
  %v4_eb08148 = phi i32 [ %v4_eb08, %dec_label_pc_eafc.backedge ], [ %v4_eb08145, %dec_label_pc_eac4 ]
  store i32 %v2_e6dc, i32* %r3.global-to-local, align 4
  %v3_eb18 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_eb18, i32* @r4, align 4
  %v5_eb20 = icmp slt i32 %v4_eb08148, %v3_eb18
  br i1 %v5_eb20, label %dec_label_pc_eb30, label %dec_label_pc_eb84.lr.ph

dec_label_pc_eb84.lr.ph:                          ; preds = %dec_label_pc_eb14
  %v1_eb7c36 = add i32 %v4_eb08148, -1
  store i32 %v1_eb7c36, i32* %r1.global-to-local, align 4
  %v0_eb84.pre = load i32, i32* @r5, align 4
  %v1_eb88.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_eb84

dec_label_pc_eb30:                                ; preds = %dec_label_pc_eb7c.backedge, %dec_label_pc_eb14
  %v3_eb34 = load i32, i32* %stack_var_-44, align 4
  %v5_eb3c = icmp slt i32 %v4_eb08148, %v3_eb34
  br i1 %v5_eb3c, label %dec_label_pc_eafc.backedge, label %.thread22

.thread22:                                        ; preds = %dec_label_pc_eb30
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_eb4846 = icmp eq i32 %v4_eb08148, 0
  br i1 %v2_eb4846, label %dec_label_pc_eafc.backedge, label %dec_label_pc_eb50.lr.ph

dec_label_pc_eafc.backedge:                       ; preds = %dec_label_pc_eb68, %.thread22, %dec_label_pc_eb30
  %v0_eafc = load i32, i32* %r8.global-to-local, align 4
  store i32 %v2_e5f0, i32* %r1.global-to-local, align 4
  store i32 4096, i32* %r2.global-to-local, align 4
  %v4_eb08 = call i32 @read(i32 %v0_eafc, i32* nonnull %stack_var_-8476, i32 4096)
  %tmp136 = icmp slt i32 %v4_eb08, 1
  br i1 %tmp136, label %dec_label_pc_ec4c, label %dec_label_pc_eb14

dec_label_pc_eb50.lr.ph:                          ; preds = %.thread22
  %v0_eb50.pre = load i32, i32* @r6, align 4
  %v1_eb54.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_eb50

dec_label_pc_eb50:                                ; preds = %dec_label_pc_eb68, %dec_label_pc_eb50.lr.ph
  %v0_eb48.in = phi i32 [ %v4_eb08148, %dec_label_pc_eb50.lr.ph ], [ %v0_eb48, %dec_label_pc_eb68 ]
  %v0_eb68 = phi i32 [ 0, %dec_label_pc_eb50.lr.ph ], [ %v1_eb68, %dec_label_pc_eb68 ]
  %v0_eb5c = phi i32 [ 0, %dec_label_pc_eb50.lr.ph ], [ %v1_eb5c., %dec_label_pc_eb68 ]
  %v0_eb48 = add i32 %v0_eb48.in, -1
  %v2_eb50 = add i32 %v0_eb5c, %v0_eb50.pre
  %v3_eb50 = inttoptr i32 %v2_eb50 to i8*
  %v4_eb50 = load i8, i8* %v3_eb50, align 1
  %v6_eb50 = zext i8 %v4_eb50 to i32
  store i32 %v6_eb50, i32* %r2.global-to-local, align 4
  %v2_eb54 = add i32 %v0_eb68, %v1_eb54.pre
  %v3_eb54 = inttoptr i32 %v2_eb54 to i8*
  %v4_eb54 = load i8, i8* %v3_eb54, align 1
  %v6_eb54 = zext i8 %v4_eb54 to i32
  store i32 %v6_eb54, i32* %r3.global-to-local, align 4
  %v9_eb58 = icmp eq i8 %v4_eb54, %v4_eb50
  %v1_eb5c = add i32 %v0_eb5c, 1
  %v1_eb5c. = select i1 %v9_eb58, i32 %v1_eb5c, i32 0
  store i32 %v1_eb5c., i32* %r1.global-to-local, align 4
  br i1 %v9_eb58, label %dec_label_pc_eba4, label %dec_label_pc_eb68

dec_label_pc_eb68:                                ; preds = %dec_label_pc_eba4, %dec_label_pc_eb50
  %v1_eb68 = add i32 %v0_eb68, 1
  %v2_eb48 = icmp eq i32 %v0_eb48, 0
  br i1 %v2_eb48, label %dec_label_pc_eafc.backedge, label %dec_label_pc_eb50

dec_label_pc_eb70:                                ; preds = %dec_label_pc_eb84
  %v9_eb70 = icmp eq i32 %v3_eb18, %v1_eb90.
  br i1 %v9_eb70, label %dec_label_pc_ebac, label %dec_label_pc_eb7c.backedge

dec_label_pc_eb7c.backedge:                       ; preds = %dec_label_pc_eb84, %dec_label_pc_eb70
  %storemerge = add i32 %storemerge.in, 1
  %v1_eb7c = add i32 %v0_eb7c, -1
  store i32 %v1_eb7c, i32* %r1.global-to-local, align 4
  %v2_eb7c = icmp eq i32 %v0_eb7c, 0
  br i1 %v2_eb7c, label %dec_label_pc_eb30, label %dec_label_pc_eb84

dec_label_pc_eb84:                                ; preds = %dec_label_pc_eb7c.backedge, %dec_label_pc_eb84.lr.ph
  %v0_eb7c = phi i32 [ %v1_eb7c36, %dec_label_pc_eb84.lr.ph ], [ %v1_eb7c, %dec_label_pc_eb7c.backedge ]
  %storemerge.in = phi i32 [ 0, %dec_label_pc_eb84.lr.ph ], [ %storemerge, %dec_label_pc_eb7c.backedge ]
  %v0_eb90 = phi i32 [ 0, %dec_label_pc_eb84.lr.ph ], [ %v1_eb90., %dec_label_pc_eb7c.backedge ]
  %v2_eb84 = add i32 %v0_eb90, %v0_eb84.pre
  %v3_eb84 = inttoptr i32 %v2_eb84 to i8*
  %v4_eb84 = load i8, i8* %v3_eb84, align 1
  %v6_eb84 = zext i8 %v4_eb84 to i32
  store i32 %v6_eb84, i32* %r2.global-to-local, align 4
  %v2_eb88 = add i32 %storemerge.in, %v1_eb88.pre
  %v3_eb88 = inttoptr i32 %v2_eb88 to i8*
  %v4_eb88 = load i8, i8* %v3_eb88, align 1
  %v6_eb88 = zext i8 %v4_eb88 to i32
  store i32 %v6_eb88, i32* %r3.global-to-local, align 4
  %v9_eb8c = icmp eq i8 %v4_eb88, %v4_eb84
  %v1_eb90 = add i32 %v0_eb90, 1
  %v1_eb90. = select i1 %v9_eb8c, i32 %v1_eb90, i32 0
  br i1 %v9_eb8c, label %dec_label_pc_eb70, label %dec_label_pc_eb7c.backedge

dec_label_pc_eba4:                                ; preds = %dec_label_pc_eb50
  %v9_eba4 = icmp eq i32 %v3_eb34, %v1_eb5c.
  br i1 %v9_eba4, label %dec_label_pc_ebac, label %dec_label_pc_eb68

dec_label_pc_ebac:                                ; preds = %dec_label_pc_eb70, %dec_label_pc_eba4
  %v1_ebb0 = call i32 @function_12968(i32 18)
  %v1_ebb8 = call i32 @function_12968(i32 19)
  %v0_ebbc = load i32, i32* %r8.global-to-local, align 4
  %v1_ebc0 = call i32 @close(i32 %v0_ebbc)
  %v0_ebc4 = load i32, i32* @r7, align 4
  store i32 9, i32* %r1.global-to-local, align 4
  %v2_ebcc = call i32 @kill(i32 %v0_ebc4, i32 9)
  br label %dec_label_pc_ebd0

dec_label_pc_ebd0:                                ; preds = %dec_label_pc_eaa8, %dec_label_pc_ec4c, %dec_label_pc_ebac
  store i32 64, i32* @r1, align 4
  store i32 %v2_e92c, i32* @r0, align 4
  %v0_ebdc = call i32 @function_1308c()
  store i32 %v2_e97c, i32* @r0, align 4
  store i32 64, i32* @r1, align 4
  %v0_ebec = call i32 @function_1308c()
  %v1_ebf4 = call i32 @sleep(i32 1)
  %v2_ebf8 = load i32, i32* %stack_var_-8484, align 4
  store i32 %v2_ebf8, i32* @r5, align 4
  %v0_ebfc = load i32, i32* @r7, align 4
  store i32 %v0_ebfc, i32* @r8, align 4
  br label %dec_label_pc_e860.backedge

dec_label_pc_ec04:                                ; preds = %dec_label_pc_e738
  %v1_ec0c = call i32 @function_df00(i32 42448)
  %v2_ec10 = icmp eq i32 %v1_ec0c, 0
  br i1 %v2_ec10, label %dec_label_pc_ec18, label %dec_label_pc_e748

dec_label_pc_ec18:                                ; preds = %dec_label_pc_ec04
  %v1_ec1c = call i32 @function_df00(i32 20480)
  %v2_ec20 = icmp eq i32 %v1_ec1c, 0
  br i1 %v2_ec20, label %dec_label_pc_ec28, label %dec_label_pc_e748

dec_label_pc_ec28:                                ; preds = %dec_label_pc_ec18
  %v1_ec30 = call i32 @function_df00(i32 add (i32 ptrtoint (i32* @global_var_8500.129 to i32), i32 206))
  %v2_ec34 = icmp eq i32 %v1_ec30, 0
  br i1 %v2_ec34, label %dec_label_pc_ec3c, label %dec_label_pc_e748

dec_label_pc_ec3c:                                ; preds = %dec_label_pc_ec28
  %v1_ec44 = call i32 @function_df00(i32 24465)
  br label %dec_label_pc_e748

dec_label_pc_ec4c:                                ; preds = %dec_label_pc_eafc.backedge, %dec_label_pc_eac4
  %v1_ec50 = call i32 @function_12968(i32 18)
  %v1_ec58 = call i32 @function_12968(i32 19)
  %v0_ec5c = load i32, i32* %r8.global-to-local, align 4
  %v1_ec60 = call i32 @close(i32 %v0_ec5c)
  br label %dec_label_pc_ebd0

dec_label_pc_ec68:                                ; preds = %dec_label_pc_ea88
  %v0_ec68 = load i32, i32* @r7, align 4
  store i32 9, i32* %r1.global-to-local, align 4
  %v2_ec70 = call i32 @kill(i32 %v0_ec68, i32 9)
  %v0_eaa0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_eaa0

; uselistorder directives
  uselistorder i32 %v1_eb90., { 1, 0 }
  uselistorder i1 %v9_eb8c, { 1, 0 }
  uselistorder i32 %v0_eb90, { 1, 0 }
  uselistorder i32 %v1_eb5c., { 1, 2, 0 }
  uselistorder i1 %v9_eb58, { 1, 0 }
  uselistorder i32 %v0_eb5c, { 1, 0 }
  uselistorder i32 %v0_eb68, { 1, 0 }
  uselistorder i32 %v4_eb08, { 1, 0 }
  uselistorder i32 %v4_eb08148, { 0, 4, 3, 2, 1 }
  uselistorder %dirent* %v3_e864, { 1, 0 }
  uselistorder i32 %stack_var_-8480.1.be, { 1, 0 }
  uselistorder %dirent* %v3_e8e4, { 1, 0 }
  uselistorder i32 %v1_e894, { 0, 1, 5, 4, 3, 2, 7, 6 }
  uselistorder i32 %v4_e888, { 1, 0 }
  uselistorder i32 %v5_e60c, { 1, 0 }
  uselistorder i32 %stack_var_-8480.0, { 1, 0 }
  uselistorder i32 %v2_e97c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_e92c, { 1, 0, 2 }
  uselistorder i32 %v2_e5f0, { 1, 0, 2 }
  uselistorder i8* %v2_e538, { 1, 2, 0, 3, 4, 5, 6, 7 }
  uselistorder i32 %storemerge87, { 1, 0 }
  uselistorder i32* %stack_var_-36, { 0, 2, 1 }
  uselistorder i32* %stack_var_-8476, { 1, 0, 2 }
  uselistorder i32* %stack_var_-40, { 1, 0, 2 }
  uselistorder i32* %stack_var_-44, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 58, 60, 0, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 17, 16, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 45, 46, 59, 48, 49, 50, 51, 53, 52, 54, 55, 56, 57 }
  uselistorder i32 (i8*, i32, i32)* @function_13340, { 0, 3, 1, 2 }
  uselistorder i32 (%__dirstream*)* @closedir, { 1, 0, 2, 3 }
  uselistorder %dirent* null, { 4, 3, 1, 5, 6, 7, 0, 8, 2 }
  uselistorder %dirent* (%__dirstream*)* @readdir, { 7, 6, 1, 8, 3, 4, 0, 5, 2, 9 }
  uselistorder i32 (i32, i32)* @listen, { 5, 0, 1, 4, 2, 3, 6 }
  uselistorder i32 (i32, %sockaddr*, i32)* @bind, { 4, 0, 3, 1, 5, 2, 6, 7, 8 }
  uselistorder i32 (i32)* @function_df00, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i8*, i8*, i32)* @readlink, { 3, 2, 1, 0, 4 }
  uselistorder i8** @global_var_1bd2c.128, { 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_1bd2c.128 to i32), { 0, 3, 2, 1 }
  uselistorder i32 4096, { 5, 9, 0, 1, 6, 10, 7, 11, 2, 8, 3, 4 }
  uselistorder label %dec_label_pc_ebd0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_ebac, { 1, 0 }
  uselistorder label %dec_label_pc_eb14, { 1, 0 }
  uselistorder label %dec_label_pc_eaa8, { 1, 0 }
  uselistorder label %dec_label_pc_eaa0, { 1, 0 }
  uselistorder label %dec_label_pc_e860.backedge, { 4, 3, 0, 1, 5, 2 }
  uselistorder label %dec_label_pc_ea44, { 1, 0 }
  uselistorder label %dec_label_pc_e870, { 1, 0 }
  uselistorder label %dec_label_pc_e870.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_e828, { 1, 0 }
  uselistorder label %dec_label_pc_e7f0, { 1, 0 }
  uselistorder label %dec_label_pc_e7b8, { 1, 0 }
  uselistorder label %dec_label_pc_e780, { 1, 0 }
  uselistorder label %dec_label_pc_e748, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_e738, { 1, 0 }
  uselistorder label %bb135, { 1, 0 }
}

define i32 @function_ec84(i32 %arg1) local_unnamed_addr {
dec_label_pc_ec84:
  store i32 ptrtoint (i32* @global_var_ec9c.131 to i32), i32* @global_var_1bca8.133, align 4
  %v1_ec90 = load i32, i32* @r0, align 4
  ret i32 %v1_ec90
}

define i32 @function_ec9c() local_unnamed_addr {
dec_label_pc_ec9c:
  %stack_var_-8 = alloca i32, align 4
  %v3_ec9c = load i32, i32* @r4, align 4
  store i32 %v3_ec9c, i32* %stack_var_-8, align 4
  %v1_eca4 = call i32 @function_12a20(i32 1)
  %v3_ecac = call i32 @inet_addr(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_13880.135, i32 0, i32 0))
  store i32 %v3_ecac, i32* @global_var_1bd38.138, align 4
  %v3_ecc0 = call i32 @function_1293c(i32 1, i32* null)
  %v4_ecc0 = inttoptr i32 %v3_ecc0 to i8*
  %v2_ecc4 = add i32 %v3_ecc0, 1
  %v3_ecc4 = inttoptr i32 %v2_ecc4 to i8*
  %v4_ecc4 = load i8, i8* %v3_ecc4, align 1
  %v3_ecc8 = load i8, i8* %v4_ecc0, align 1
  store i8 %v4_ecc4, i8* bitcast (i32* @global_var_1bd37.139 to i8*), align 4
  store i8 %v3_ecc8, i8* bitcast (i32* @global_var_1bd36.140 to i8*), align 4
  %v2_ece0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_ece0, i32* @r4, align 4
  %v1_ece4 = call i32 @function_12968(i32 1)
  %v0_ece8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_ece8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_ec9c
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_ec9c, %bb
  ret i32 %v1_ece4

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_ecf0(i32 %arg1) local_unnamed_addr {
dec_label_pc_ecf0:
  %v3_ecf0 = load i32, i32* @r4, align 4
  %v6_ecf0 = load i32, i32* @r5, align 4
  %v0_ecf8 = call i32 @fork()
  %v2_ecfc = icmp eq i32 %v0_ecf8, -1
  %. = zext i1 %v2_ecfc to i32
  %tmp10 = icmp slt i32 %v0_ecf8, 1
  %storemerge4 = select i1 %tmp10, i32 %., i32 1
  store i32 %storemerge4, i32* @r5, align 4
  %v2_ed18 = icmp eq i32 %storemerge4, 0
  store i32 %v0_ecf8, i32* @global_var_1bcd8.142, align 4
  br i1 %v2_ed18, label %dec_label_pc_ed2c, label %dec_label_pc_ed24

dec_label_pc_ed24:                                ; preds = %dec_label_pc_ecf0
  store i32 %v3_ecf0, i32* @r4, align 4
  store i32 %v6_ecf0, i32* @r5, align 4
  ret i32 %v0_ecf8

dec_label_pc_ed2c:                                ; preds = %dec_label_pc_ecf0
  %v1_ed38 = call i32 @function_12a20(i32 23)
  %v1_ed40 = call i32 @function_12a20(i32 24)
  %v0_ed44 = load i32, i32* @r5, align 4
  %v2_ed4c = inttoptr i32 %v0_ed44 to i32*
  %v3_ed4c = call i32 @function_1293c(i32 23, i32* %v2_ed4c)
  %v4_ed4c = inttoptr i32 %v3_ed4c to i8*
  %v4_ed54 = call i32 (i8*, i32, ...) @open(i8* %v4_ed4c, i32 2)
  %v2_ed58 = icmp eq i32 %v4_ed54, -1
  store i32 %v4_ed54, i32* @r4, align 4
  br i1 %v2_ed58, label %dec_label_pc_eda0, label %dec_label_pc_ed64

dec_label_pc_ed64:                                ; preds = %dec_label_pc_eda0, %dec_label_pc_ed2c
  %v0_ed70 = phi i32 [ %v5_edb0, %dec_label_pc_eda0 ], [ %v4_ed54, %dec_label_pc_ed2c ]
  %v2_ed78 = call i32 (i32, i32, ...) @ioctl(i32 %v0_ed70, i32 -2147199228)
  br label %dec_label_pc_ed7c

dec_label_pc_ed7c:                                ; preds = %dec_label_pc_ed7c, %dec_label_pc_ed64
  %v0_ed88 = load i32, i32* @r4, align 4
  %v2_ed90 = call i32 (i32, i32, ...) @ioctl(i32 %v0_ed88, i32 -2147199227)
  %v1_ed98 = call i32 @sleep(i32 10)
  br label %dec_label_pc_ed7c

dec_label_pc_eda0:                                ; preds = %dec_label_pc_ed2c
  %v0_eda0 = load i32, i32* @r5, align 4
  %v2_eda8 = inttoptr i32 %v0_eda0 to i32*
  %v3_eda8 = call i32 @function_1293c(i32 24, i32* %v2_eda8)
  %v4_eda8 = inttoptr i32 %v3_eda8 to i8*
  %v5_edb0 = call i32 (i8*, i32, ...) @open(i8* %v4_eda8, i32 2)
  %v3_edb4 = icmp eq i32 %v5_edb0, -1
  store i32 %v5_edb0, i32* @r4, align 4
  br i1 %v3_edb4, label %dec_label_pc_edc0, label %dec_label_pc_ed64

dec_label_pc_edc0:                                ; preds = %dec_label_pc_eda0
  %v1_edc4 = call i32 @function_12968(i32 23)
  %v1_edcc = call i32 @function_12968(i32 24)
  %v0_edd0 = load i32, i32* @r5, align 4
  call void @exit(i32 %v0_edd0)
  unreachable

; uselistorder directives
  uselistorder i32 %v5_edb0, { 1, 2, 0 }
  uselistorder i32 %storemerge4, { 1, 0 }
  uselistorder i32 %v0_ecf8, { 2, 0, 1, 3 }
  uselistorder void (i32)* @exit, { 3, 2, 1, 0, 4 }
  uselistorder i32 (i8*, i32, ...)* @open, { 2, 0, 6, 1, 4, 5, 3, 7 }
}

define i32 @function_eddc(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_eddc:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-38 = alloca i8*, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-380 = alloca i32, align 4
  %stack_var_-252 = alloca i32, align 4
  %stack_var_-1532 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-124 = alloca i32, align 4
  %stack_var_-508 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_eddc = load i32, i32* @r4, align 4
  store i32 %v3_eddc, i32* %stack_var_-36, align 4
  %v6_eddc = load i32, i32* @r5, align 4
  %v9_eddc = load i32, i32* @r6, align 4
  %v15_eddc = load i32, i32* @r8, align 4
  %v2_ede8 = ptrtoint i32* %stack_var_-508 to i32
  store i32 %v2_ede8, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  %tmp41 = bitcast i32* %stack_var_-508 to %_TYPEDEF_sigset_t*
  store i32 %tmp, i32* @r8, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v3_ee00 = call i32 @sigemptyset(%_TYPEDEF_sigset_t* %tmp41)
  %v4_ee0c = call i32 @sigaddset(%_TYPEDEF_sigset_t* %tmp41, i32 2)
  %v0_ee10 = load i32, i32* @r5, align 4
  %v1_ee10 = inttoptr i32 %v0_ee10 to %_TYPEDEF_sigset_t*
  store i32 %v0_ee10, i32* %r2.global-to-local, align 4
  %v7_ee1c = call i32 @sigprocmask(i32 %v0_ee10, %_TYPEDEF_sigset_t* %tmp41, %_TYPEDEF_sigset_t* %v1_ee10)
  %v4_ee28 = call void (i32)* @signal(i32 17, void (i32)* inttoptr (i32 1 to void (i32)*))
  %v4_ee34 = call void (i32)* @signal(i32 5, void (i32)* bitcast (void (i32)** @global_var_ec84.144 to void (i32)*))
  %v0_ee38 = call i32 @function_132a4()
  store i32 %v0_ee38, i32* @global_var_1bd28.110, align 4
  store i32 1494907824, i32* %r2.global-to-local, align 4
  store i8 23, i8* bitcast (i32* @global_var_1bd37.139 to i8*), align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i8 2, i8* bitcast (%sockaddr** @global_var_1bd34.137 to i8*), align 4
  store i32 1494907824, i32* @global_var_1bd38.138, align 4
  %v0_ee60 = load i32, i32* @r5, align 4
  %v1_ee60 = trunc i32 %v0_ee60 to i8
  store i8 %v1_ee60, i8* bitcast (i32* @global_var_1bd36.140 to i8*), align 4
  store i8 %v1_ee60, i8* bitcast (i32* @global_var_1bd35.148 to i8*), align 4
  %v6_ee68 = call i32 @function_12ad8(i32 %v0_ee38, i32 ptrtoint (%sockaddr** @global_var_1bd34.137 to i32), i32 1494907824, i32 2)
  store i32 ptrtoint (i32* @global_var_ec9c.131 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_ec9c.131 to i32), i32* @global_var_1bca8.133, align 4
  %v1_ee78 = call i32 @function_f560(i32 %v6_ee68)
  %v2_ee80 = ptrtoint i32* %stack_var_-124 to i32
  store i32 %v2_ee80, i32* @r0, align 4
  store i32 32, i32* @r1, align 4
  %v0_ee88 = call i32 @function_1308c()
  %v0_ee8c = load i32, i32* @r6, align 4
  %v7_ee8c = icmp eq i32 %v0_ee8c, 2
  br i1 %v7_ee8c, label %dec_label_pc_efb4, label %dec_label_pc_ee94

dec_label_pc_ee94:                                ; preds = %dec_label_pc_efb4, %dec_label_pc_eddc, %dec_label_pc_efc4
  %v0_ee94 = call i32 @function_f508()
  store i32 %v0_ee94, i32* %r6.global-to-local, align 4
  %v0_ee9c = load i32, i32* @r8, align 4
  %v1_ee9c = inttoptr i32 %v0_ee9c to i32*
  %v2_ee9c = load i32, i32* %v1_ee9c, align 4
  %v1_eea0 = inttoptr i32 %v2_ee9c to i8*
  %v2_eea0 = call i32 @function_12fec(i8* %v1_eea0)
  store i32 %v2_eea0, i32* %r4.global-to-local, align 4
  %v0_eea8 = load i32, i32* @r8, align 4
  %v1_eea8 = inttoptr i32 %v0_eea8 to i32*
  %v2_eea8 = load i32, i32* %v1_eea8, align 4
  %v1_eeac = inttoptr i32 %v2_eea8 to i8*
  %v2_eeac = call i32 @function_12fec(i8* %v1_eeac)
  %v1_eeb0 = sub i32 20, %v2_eea0
  store i32 %v2_eeac, i32* @r5, align 4
  %v0_eeb8 = load i32, i32* %r6.global-to-local, align 4
  %v2_eebc = urem i32 %v0_eeb8, %v1_eeb0
  %v2_eec4 = add i32 %v2_eebc, %v2_eeac
  store i32 %v2_eec4, i32* @r4, align 4
  %v2_eec8 = ptrtoint i32* %stack_var_-92 to i32
  store i32 %v2_eec8, i32* @r6, align 4
  %v2_eed4 = call i32 @function_f5bc(i32 %v2_eec8, i32 %v2_eec4)
  %v2_eed8 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_eed8, i32* %r2.global-to-local, align 4
  %v1_eedc = load i32, i32* @r4, align 4
  %v2_eedc = add i32 %v1_eedc, %v2_eed8
  store i32 %v2_eedc, i32* %r3.global-to-local, align 4
  store i32 0, i32* @sb, align 4
  %v0_eee8 = load i32, i32* @r8, align 4
  %v1_eee8 = inttoptr i32 %v0_eee8 to i32*
  %v2_eee8 = load i32, i32* %v1_eee8, align 4
  store i32 %v2_eee8, i32* @r0, align 4
  %v3_eeec = add i32 %v2_eedc, -56
  %v4_eeec = inttoptr i32 %v3_eeec to i8*
  store i8 0, i8* %v4_eeec, align 1
  %v2_eef0 = inttoptr i32 %v2_eee8 to i8*
  %v3_eef0 = call i32 @function_13014(i8* %v2_eef0, i32 %v2_eec8)
  store i32 32, i32* @r1, align 4
  store i32 %v2_eec8, i32* @r0, align 4
  %v0_eefc = call i32 @function_1308c()
  %v0_ef00 = call i32 @function_f508()
  store i32 %v0_ef00, i32* @r7, align 4
  %v0_ef08 = load i32, i32* @r8, align 4
  %v1_ef08 = inttoptr i32 %v0_ef08 to i32*
  %v2_ef08 = load i32, i32* %v1_ef08, align 4
  %v1_ef0c = inttoptr i32 %v2_ef08 to i8*
  %v2_ef0c = call i32 @function_12fec(i8* %v1_ef0c)
  store i32 %v2_ef0c, i32* %r4.global-to-local, align 4
  %v0_ef14 = load i32, i32* @r8, align 4
  %v1_ef14 = inttoptr i32 %v0_ef14 to i32*
  %v2_ef14 = load i32, i32* %v1_ef14, align 4
  %v1_ef18 = inttoptr i32 %v2_ef14 to i8*
  %v2_ef18 = call i32 @function_12fec(i8* %v1_ef18)
  %v1_ef1c = sub i32 20, %v2_ef0c
  store i32 %v2_ef18, i32* @r5, align 4
  %v0_ef24 = load i32, i32* @r7, align 4
  %v2_ef28 = urem i32 %v0_ef24, %v1_ef1c
  %v2_ef2c = add i32 %v2_ef28, %v2_ef18
  store i32 %v2_ef2c, i32* @r4, align 4
  %v2_ef38 = call i32 @function_f5bc(i32 %v2_eec8, i32 %v2_ef2c)
  %v1_ef40 = load i32, i32* @r4, align 4
  %v2_ef40 = add i32 %v1_ef40, %v2_eed8
  store i32 %v2_ef40, i32* %r3.global-to-local, align 4
  %v0_ef44 = load i32, i32* @sb, align 4
  %v1_ef44 = trunc i32 %v0_ef44 to i8
  %v3_ef44 = add i32 %v2_ef40, -56
  %v4_ef44 = inttoptr i32 %v3_ef44 to i8*
  store i8 %v1_ef44, i8* %v4_ef44, align 1
  %v5_ef50 = call i32 @prctl(i32 15, i32 %v2_eec8, i32 %v2_ef40, i32 %v2_ef40, i32 ptrtoint (i32* @0 to i32))
  %v1_ef58 = call i32 @function_12a20(i32 3)
  %v3_ef64 = call i32 @function_1293c(i32 3, i32* nonnull %stack_var_-52)
  %v3_ef68 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_ef68, i32* %r2.global-to-local, align 4
  %v3_ef74 = inttoptr i32 %v3_ef64 to i32*
  %v4_ef74 = call i32 @write(i32 1, i32* %v3_ef74, i32 %v3_ef68)
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_ef84 = call i32 @write(i32 ptrtoint (i32* @global_var_13890.152 to i32), i32* inttoptr (i32 1 to i32*), i32 1)
  %v1_ef8c = call i32 @function_12968(i32 3)
  %v1_ef90 = call i32 @function_934c(i32 %v1_ef8c)
  %v1_ef94 = call i32 @function_e49c(i32 %v1_ef90)
  %v1_ef98 = call i32 @function_ecf0(i32 %v1_ef94)
  %v0_ef9c = call i32 @fork()
  %v1_efa0 = load i32, i32* @sb, align 4
  %v7_efa4 = icmp sgt i32 %v0_ef9c, %v1_efa0
  br i1 %v7_efa4, label %dec_label_pc_efa8, label %dec_label_pc_eff0

dec_label_pc_efa8:                                ; preds = %dec_label_pc_ee94
  %v2_efb0 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_efb0, i32* %r4.global-to-local, align 4
  store i32 %v6_eddc, i32* %r5.global-to-local, align 4
  store i32 %v9_eddc, i32* %r6.global-to-local, align 4
  store i32 %v15_eddc, i32* %r8.global-to-local, align 4
  ret i32 0

dec_label_pc_efb4:                                ; preds = %dec_label_pc_eddc
  %v0_efb4 = load i32, i32* @r8, align 4
  %v1_efb4 = add i32 %v0_efb4, 4
  %v2_efb4 = inttoptr i32 %v1_efb4 to i32*
  %v3_efb4 = load i32, i32* %v2_efb4, align 4
  %v1_efb8 = inttoptr i32 %v3_efb4 to i8*
  %v2_efb8 = call i32 @function_12fec(i8* %v1_efb8)
  %v8_efc0 = icmp sgt i32 %v2_efb8, 31
  br i1 %v8_efc0, label %dec_label_pc_ee94, label %dec_label_pc_efc4

dec_label_pc_efc4:                                ; preds = %dec_label_pc_efb4
  %v0_efc8 = load i32, i32* @r8, align 4
  %v1_efc8 = add i32 %v0_efc8, 4
  %v2_efc8 = inttoptr i32 %v1_efc8 to i32*
  %v3_efc8 = load i32, i32* %v2_efc8, align 4
  store i32 %v2_ee80, i32* @r0, align 4
  %v2_efd0 = bitcast i32* %stack_var_-124 to i8*
  %v3_efd0 = call i32 @function_13014(i8* %v2_efd0, i32 %v3_efc8)
  %v0_efd4 = load i32, i32* @r8, align 4
  %v1_efd4 = add i32 %v0_efd4, 4
  %v2_efd4 = inttoptr i32 %v1_efd4 to i32*
  %v3_efd4 = load i32, i32* %v2_efd4, align 4
  store i32 %v3_efd4, i32* %r4.global-to-local, align 4
  %v1_efdc = inttoptr i32 %v3_efd4 to i8*
  %v2_efdc = call i32 @function_12fec(i8* %v1_efdc)
  store i32 %v2_efdc, i32* @r1, align 4
  store i32 %v3_efd4, i32* @r0, align 4
  %v0_efe8 = call i32 @function_1308c()
  br label %dec_label_pc_ee94

dec_label_pc_eff0:                                ; preds = %dec_label_pc_ee94
  %v1_eff0 = call i32 @setsid()
  %v0_eff4 = load i32, i32* @sb, align 4
  %v1_eff8 = call i32 @close(i32 %v0_eff4)
  %v1_f000 = call i32 @close(i32 1)
  %v1_f008 = call i32 @close(i32 2)
  %v1_f00c = call i32 @function_934c(i32 %v1_f008)
  %v1_f010 = call i32 @function_e49c(i32 %v1_f00c)
  %v1_f014 = call i32 @function_ecf0(i32 %v1_f010)
  %v1_f018 = call i32 @function_f9e4(i32 %v1_f014)
  %v2_f020 = ptrtoint i32* %stack_var_-1532 to i32
  store i32 %v2_f020, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1bca4.156 to i32), i32* @sl, align 4
  %v2_f038 = ptrtoint i32* %stack_var_-252 to i32
  store i32 %v2_f038, i32* @r6, align 4
  %v2_f03c = ptrtoint i32* %stack_var_-380 to i32
  store i32 %v2_f03c, i32* @r7, align 4
  %tmp42 = bitcast i32* %stack_var_-252 to %_TYPEDEF_fd_set*
  %tmp43 = bitcast i32* %stack_var_-380 to %_TYPEDEF_fd_set*
  %tmp44 = bitcast i32* %stack_var_-60 to %timeval*
  %v7_f3c4 = bitcast i8** %stack_var_-38 to i32*
  %v2_f35c = ptrtoint i32* %stack_var_-44 to i32
  %v1_f3d4 = bitcast i32* %stack_var_-124 to i8*
  br label %dec_label_pc_f040

dec_label_pc_f040:                                ; preds = %dec_label_pc_f040.backedge, %dec_label_pc_eff0
  %v2_f04849 = phi i32 [ %v2_f04849.pre, %dec_label_pc_f040.backedge ], [ %v2_f038, %dec_label_pc_eff0 ]
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v4_f04851 = inttoptr i32 %v2_f04849 to i32*
  store i32 0, i32* %v4_f04851, align 4
  %v0_f04c52 = load i32, i32* %r3.global-to-local, align 4
  %v1_f04c53 = add i32 %v0_f04c52, 4
  store i32 %v1_f04c53, i32* %r3.global-to-local, align 4
  %v7_f05054 = icmp eq i32 %v1_f04c53, 128
  br i1 %v7_f05054, label %dec_label_pc_f058, label %dec_label_pc_f048.dec_label_pc_f048_crit_edge

dec_label_pc_f048.dec_label_pc_f048_crit_edge:    ; preds = %dec_label_pc_f040, %dec_label_pc_f048.dec_label_pc_f048_crit_edge
  %v1_f04c55 = phi i32 [ %v1_f04c, %dec_label_pc_f048.dec_label_pc_f048_crit_edge ], [ %v1_f04c53, %dec_label_pc_f040 ]
  %v0_f048.pre = load i32, i32* %r2.global-to-local, align 4
  %v2_f048 = load i32, i32* @r6, align 4
  %v3_f048 = add i32 %v2_f048, %v1_f04c55
  %v4_f048 = inttoptr i32 %v3_f048 to i32*
  store i32 %v0_f048.pre, i32* %v4_f048, align 4
  %v0_f04c = load i32, i32* %r3.global-to-local, align 4
  %v1_f04c = add i32 %v0_f04c, 4
  store i32 %v1_f04c, i32* %r3.global-to-local, align 4
  %v7_f050 = icmp eq i32 %v1_f04c, 128
  br i1 %v7_f050, label %dec_label_pc_f058, label %dec_label_pc_f048.dec_label_pc_f048_crit_edge

dec_label_pc_f058:                                ; preds = %dec_label_pc_f048.dec_label_pc_f048_crit_edge, %dec_label_pc_f040
  %v0_f058 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_f058, i32* %r3.global-to-local, align 4
  store i32 %v0_f058, i32* %r4.global-to-local, align 4
  %v2_f06056 = load i32, i32* @r7, align 4
  %v3_f06057 = add i32 %v2_f06056, %v0_f058
  %v4_f06058 = inttoptr i32 %v3_f06057 to i32*
  store i32 %v0_f058, i32* %v4_f06058, align 4
  %v0_f06459 = load i32, i32* %r3.global-to-local, align 4
  %v1_f06460 = add i32 %v0_f06459, 4
  store i32 %v1_f06460, i32* %r3.global-to-local, align 4
  %v7_f06861 = icmp eq i32 %v1_f06460, 128
  br i1 %v7_f06861, label %dec_label_pc_f070, label %dec_label_pc_f060.dec_label_pc_f060_crit_edge

dec_label_pc_f060.dec_label_pc_f060_crit_edge:    ; preds = %dec_label_pc_f058, %dec_label_pc_f060.dec_label_pc_f060_crit_edge
  %v1_f06462 = phi i32 [ %v1_f064, %dec_label_pc_f060.dec_label_pc_f060_crit_edge ], [ %v1_f06460, %dec_label_pc_f058 ]
  %v0_f060.pre = load i32, i32* %r4.global-to-local, align 4
  %v2_f060 = load i32, i32* @r7, align 4
  %v3_f060 = add i32 %v2_f060, %v1_f06462
  %v4_f060 = inttoptr i32 %v3_f060 to i32*
  store i32 %v0_f060.pre, i32* %v4_f060, align 4
  %v0_f064 = load i32, i32* %r3.global-to-local, align 4
  %v1_f064 = add i32 %v0_f064, 4
  store i32 %v1_f064, i32* %r3.global-to-local, align 4
  %v7_f068 = icmp eq i32 %v1_f064, 128
  br i1 %v7_f068, label %dec_label_pc_f070, label %dec_label_pc_f060.dec_label_pc_f060_crit_edge

dec_label_pc_f070:                                ; preds = %dec_label_pc_f060.dec_label_pc_f060_crit_edge, %dec_label_pc_f058
  %v2_f070 = load i32, i32* @global_var_1bca0.154, align 4
  %v2_f074 = icmp eq i32 %v2_f070, -1
  br i1 %v2_f074, label %dec_label_pc_f0a0, label %dec_label_pc_f07c

dec_label_pc_f07c:                                ; preds = %dec_label_pc_f070
  %v3_f07c = udiv i32 %v2_f070, 32
  %v3_f080 = mul nuw nsw i32 %v3_f07c, 4
  %v2_f088 = add i32 %v3_f080, %v2_eed8
  store i32 %v2_f088, i32* %r3.global-to-local, align 4
  %v1_f08c = add i32 %v2_f088, -216
  %v2_f08c = inttoptr i32 %v1_f08c to i32*
  %v3_f08c = load i32, i32* %v2_f08c, align 4
  %v1_f090 = urem i32 %v2_f070, 32
  %v7_f098 = shl i32 1, %v1_f090
  %v8_f098 = or i32 %v3_f08c, %v7_f098
  store i32 %v8_f098, i32* %r2.global-to-local, align 4
  store i32 %v8_f098, i32* %v2_f08c, align 4
  br label %dec_label_pc_f0a0

dec_label_pc_f0a0:                                ; preds = %dec_label_pc_f070, %dec_label_pc_f07c
  %v2_f0a0 = load i32, i32* @global_var_1bca4.156, align 4
  store i32 %v2_f0a0, i32* %r3.global-to-local, align 4
  %v2_f0a4 = icmp eq i32 %v2_f0a0, -1
  store i32 ptrtoint (i32* @global_var_1bca4.156 to i32), i32* %r8.global-to-local, align 4
  br i1 %v2_f0a4, label %dec_label_pc_f2dc, label %dec_label_pc_f0b0

dec_label_pc_f0b0:                                ; preds = %dec_label_pc_f2dc, %dec_label_pc_f0a0, %.thread
  store i32 ptrtoint (i8** @global_var_1bcdc.158 to i32), i32* %r2.global-to-local, align 4
  %v2_f0b4 = load i8, i8* bitcast (i8** @global_var_1bcdc.158 to i8*), align 4
  %v2_f0b8 = icmp eq i8 %v2_f0b4, 0
  %v2_f1c0 = load i32, i32* @global_var_1bca4.156, align 4
  %v3_f1c4 = udiv i32 %v2_f1c0, 32
  store i32 %v3_f1c4, i32* %r3.global-to-local, align 4
  br i1 %v2_f0b8, label %dec_label_pc_f1c0, label %dec_label_pc_f0c0

dec_label_pc_f0c0:                                ; preds = %dec_label_pc_f0b0
  %v3_f0c8 = mul nuw nsw i32 %v3_f1c4, 4
  %v2_f0d0 = add i32 %v3_f0c8, %v2_eed8
  store i32 %v2_f0d0, i32* %r3.global-to-local, align 4
  %v1_f0d4 = add i32 %v2_f0d0, -344
  %v2_f0d4 = inttoptr i32 %v1_f0d4 to i32*
  %v3_f0d4 = load i32, i32* %v2_f0d4, align 4
  %v1_f0d8 = urem i32 %v2_f1c0, 32
  %v7_f0e0 = shl i32 1, %v1_f0d8
  %v8_f0e0 = or i32 %v3_f0d4, %v7_f0e0
  store i32 %v8_f0e0, i32* %r2.global-to-local, align 4
  store i32 %v8_f0e0, i32* %v2_f0d4, align 4
  br label %dec_label_pc_f0e8

dec_label_pc_f0e8:                                ; preds = %dec_label_pc_f1c0, %dec_label_pc_f0c0
  %v2_f0e8 = load i32, i32* @global_var_1bca0.154, align 4
  %v2_f0ec = load i32, i32* @global_var_1bca4.156, align 4
  store i32 %v2_f0ec, i32* %r3.global-to-local, align 4
  %v5_f0f8 = icmp slt i32 %v2_f0e8, %v2_f0ec
  br i1 %v5_f0f8, label %bb, label %bb46

bb:                                               ; preds = %dec_label_pc_f0e8
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_f0e8, %bb
  %v0_f110 = phi i32 [ %v2_f0e8, %dec_label_pc_f0e8 ], [ %v2_f0ec, %bb ]
  store i32 10, i32* %stack_var_-60, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_f110 = add i32 %v0_f110, 1
  store i32 %v2_f03c, i32* %r2.global-to-local, align 4
  %v13_f124 = call i32 @select(i32 %v1_f110, %_TYPEDEF_fd_set* %tmp42, %_TYPEDEF_fd_set* %tmp43, %_TYPEDEF_fd_set* null, %timeval* %tmp44)
  %v14_f124 = trunc i32 %v13_f124 to i8
  %v3_f128 = icmp eq i8 %v14_f124, -1
  store i32 %v13_f124, i32* %r3.global-to-local, align 4
  br i1 %v3_f128, label %dec_label_pc_f040.backedge, label %dec_label_pc_f134

dec_label_pc_f134:                                ; preds = %bb46
  %v3_f134 = icmp eq i8 %v14_f124, 0
  br i1 %v3_f134, label %dec_label_pc_f13c, label %dec_label_pc_f15c

dec_label_pc_f13c:                                ; preds = %dec_label_pc_f134
  %v0_f13c = load i32, i32* @sb, align 4
  %v6_f148 = inttoptr i32 %v13_f124 to i8*
  store i8* %v6_f148, i8** %stack_var_-38, align 4
  %v2_f14c = srem i32 %v0_f13c, 6
  %v2_f150 = icmp eq i32 %v2_f14c, 0
  %v1_f154 = add i32 %v0_f13c, 1
  store i32 %v1_f154, i32* @sb, align 4
  br i1 %v2_f150, label %dec_label_pc_f3ac, label %dec_label_pc_f15c

dec_label_pc_f15c:                                ; preds = %dec_label_pc_f134, %dec_label_pc_f13c, %dec_label_pc_f3ac
  store i32 ptrtoint (i8** @global_var_1bcdc.158 to i32), i32* %r2.global-to-local, align 4
  %v2_f160 = load i8, i8* bitcast (i8** @global_var_1bcdc.158 to i8*), align 4
  %v3_f160 = zext i8 %v2_f160 to i32
  store i32 %v3_f160, i32* @r4, align 4
  %v2_f164 = icmp eq i8 %v2_f160, 0
  %v2_f1ec = load i32, i32* @global_var_1bca4.156, align 4
  br i1 %v2_f164, label %dec_label_pc_f1ec, label %dec_label_pc_f16c

dec_label_pc_f16c:                                ; preds = %dec_label_pc_f15c
  %v3_f170 = udiv i32 %v2_f1ec, 32
  %v3_f178 = mul nuw nsw i32 %v3_f170, 4
  %v2_f17c = add i32 %v3_f178, %v2_eed8
  store i32 %v2_f17c, i32* %r3.global-to-local, align 4
  %v1_f180 = add i32 %v2_f17c, -344
  %v2_f180 = inttoptr i32 %v1_f180 to i32*
  %v3_f180 = load i32, i32* %v2_f180, align 4
  %v1_f184 = urem i32 %v2_f1ec, 32
  %v6_f188 = lshr i32 %v3_f180, %v1_f184
  store i32 %v6_f188, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_1bcdc.158 to i32), i32* %r3.global-to-local, align 4
  %v1_f194 = urem i32 %v6_f188, 2
  %v2_f194 = icmp eq i32 %v1_f194, 0
  store i8 0, i8* bitcast (i8** @global_var_1bcdc.158 to i8*), align 4
  store i32 ptrtoint (i32* @global_var_1bca4.156 to i32), i32* @r4, align 4
  br i1 %v2_f194, label %dec_label_pc_f1a4, label %dec_label_pc_f34c

dec_label_pc_f1a4:                                ; preds = %dec_label_pc_f16c
  %v1_f1a8 = icmp ne i32 %v2_f1ec, -1
  call void @__pseudo_cond_branch(i1 %v1_f1a8, i32 ptrtoint (i32* @global_var_8d7c.159 to i32))
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_f1b0 = load i32, i32* @r4, align 4
  %v2_f1b0 = inttoptr i32 %v1_f1b0 to i32*
  store i32 -1, i32* %v2_f1b0, align 4
  %v1_f1b8 = call i32 @sleep(i32 1)
  br label %dec_label_pc_f040.backedge

dec_label_pc_f040.backedge:                       ; preds = %dec_label_pc_f1a4, %dec_label_pc_f2b8, %dec_label_pc_f384, %dec_label_pc_f420, %dec_label_pc_f44c, %dec_label_pc_f468, %dec_label_pc_f4d0, %bb46, %dec_label_pc_f1ec, %dec_label_pc_f1fc, %dec_label_pc_f3cc, %bb48, %dec_label_pc_f47c, %dec_label_pc_f438
  %v2_f04849.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_f040

dec_label_pc_f1c0:                                ; preds = %dec_label_pc_f0b0
  store i32 %v2_eed8, i32* %r2.global-to-local, align 4
  %v3_f1cc = mul nuw nsw i32 %v3_f1c4, 4
  %v2_f1d0 = add i32 %v3_f1cc, %v2_eed8
  store i32 %v2_f1d0, i32* %r3.global-to-local, align 4
  %v1_f1d4 = add i32 %v2_f1d0, -216
  %v2_f1d4 = inttoptr i32 %v1_f1d4 to i32*
  %v3_f1d4 = load i32, i32* %v2_f1d4, align 4
  %v1_f1d8 = urem i32 %v2_f1c0, 32
  %v7_f1e0 = shl i32 1, %v1_f1d8
  %v8_f1e0 = or i32 %v3_f1d4, %v7_f1e0
  store i32 %v8_f1e0, i32* %r2.global-to-local, align 4
  store i32 %v8_f1e0, i32* %v2_f1d4, align 4
  br label %dec_label_pc_f0e8

dec_label_pc_f1ec:                                ; preds = %dec_label_pc_f15c
  %v2_f1f0 = icmp eq i32 %v2_f1ec, -1
  store i32 ptrtoint (i32* @global_var_1bca4.156 to i32), i32* @r8, align 4
  br i1 %v2_f1f0, label %dec_label_pc_f040.backedge, label %dec_label_pc_f1fc

dec_label_pc_f1fc:                                ; preds = %dec_label_pc_f1ec
  %v3_f1fc = udiv i32 %v2_f1ec, 32
  %v3_f200 = mul nuw nsw i32 %v3_f1fc, 4
  %v2_f208 = add i32 %v3_f200, %v2_eed8
  store i32 %v2_f208, i32* %r3.global-to-local, align 4
  %v1_f20c = add i32 %v2_f208, -216
  %v2_f20c = inttoptr i32 %v1_f20c to i32*
  %v3_f20c = load i32, i32* %v2_f20c, align 4
  %v1_f210 = urem i32 %v2_f1ec, 32
  %v6_f214 = lshr i32 %v3_f20c, %v1_f210
  store i32 %v6_f214, i32* %r2.global-to-local, align 4
  %v1_f218 = urem i32 %v6_f214, 2
  %v2_f218 = icmp eq i32 %v1_f218, 0
  br i1 %v2_f218, label %dec_label_pc_f040.backedge, label %dec_label_pc_f220

dec_label_pc_f220:                                ; preds = %dec_label_pc_f1fc
  %v6_f220 = inttoptr i32 %v3_f160 to i8*
  store i8* %v6_f220, i8** %stack_var_-38, align 4
  %v0_f228 = call i32* @__errno_location()
  %v1_f228 = ptrtoint i32* %v0_f228 to i32
  %v0_f22c = load i32, i32* @r4, align 4
  store i32 %v0_f22c, i32* %v0_f228, align 4
  store i32 %v1_f228, i32* @r5, align 4
  store i32 16386, i32* %r3.global-to-local, align 4
  %v2_f240 = load i32, i32* @global_var_1bca4.156, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v5_f24c = call i32 @recv(i32 %v2_f240, i32* %v7_f3c4, i32 2, i32 16386)
  %v2_f250 = icmp eq i32 %v5_f24c, -1
  br i1 %v2_f250, label %dec_label_pc_f438, label %dec_label_pc_f258

dec_label_pc_f258:                                ; preds = %dec_label_pc_f220
  %v2_f258 = icmp eq i32 %v5_f24c, 0
  br i1 %v2_f258, label %dec_label_pc_f2b8, label %dec_label_pc_f260

dec_label_pc_f260:                                ; preds = %dec_label_pc_f258
  %v3_f260 = load i8*, i8** %stack_var_-38, align 4
  %v4_f260 = ptrtoint i8* %v3_f260 to i32
  store i32 %v3_f160, i32* %r3.global-to-local, align 4
  %v4_f268 = mul nuw nsw i32 %v3_f160, 256
  %v5_f268 = or i32 %v4_f260, %v4_f268
  store i32 %v5_f268, i32* %r2.global-to-local, align 4
  %v7_f268 = icmp eq i32 %v5_f268, 0
  br i1 %v7_f268, label %dec_label_pc_f44c, label %dec_label_pc_f270

dec_label_pc_f270:                                ; preds = %dec_label_pc_f260
  %v1_f270 = mul i32 %v4_f260, 256
  %v3_f274 = and i32 %v1_f270, 65280
  %v4_f278 = udiv i32 %v5_f268, 256
  %v5_f278 = or i32 %v3_f274, %v4_f278
  %v6_f278 = trunc i32 %v4_f278 to i8
  store i32 %v5_f278, i32* %r2.global-to-local, align 4
  %v4_f27c = udiv i32 %v5_f268, 65536
  store i32 %v4_f27c, i32* %r3.global-to-local, align 4
  %v3_f280 = icmp slt i8 %v6_f278, 0
  %v7_f288 = inttoptr i32 %v4_f278 to i8*
  store i8* %v7_f288, i8** %stack_var_-38, align 4
  br i1 %v3_f280, label %dec_label_pc_f468, label %dec_label_pc_f290

dec_label_pc_f290:                                ; preds = %dec_label_pc_f270
  %v0_f290 = load i32, i32* @r4, align 4
  %v1_f290 = load i32, i32* @r5, align 4
  %v2_f290 = inttoptr i32 %v1_f290 to i32*
  store i32 %v0_f290, i32* %v2_f290, align 4
  store i32 16386, i32* %r3.global-to-local, align 4
  %v2_f29c = load i32, i32* @global_var_1bca4.156, align 4
  %v9_f2a4 = call i32 @recv(i32 %v2_f29c, i32* nonnull %stack_var_-1532, i32 %v4_f278, i32 16386)
  %v2_f2a8 = icmp eq i32 %v9_f2a4, -1
  br i1 %v2_f2a8, label %dec_label_pc_f438, label %dec_label_pc_f2b0

dec_label_pc_f2b0:                                ; preds = %dec_label_pc_f290
  %v2_f2b0 = icmp eq i32 %v9_f2a4, 0
  br i1 %v2_f2b0, label %dec_label_pc_f2b8, label %dec_label_pc_f47c

dec_label_pc_f2b8:                                ; preds = %bb48, %dec_label_pc_f2b0, %dec_label_pc_f258
  %v2_f2b8 = load i32, i32* @global_var_1bca4.156, align 4
  %v1_f2c0 = icmp ne i32 %v2_f2b8, -1
  call void @__pseudo_cond_branch(i1 %v1_f2c0, i32 ptrtoint (i32* @global_var_8d7c.159 to i32))
  store i32 ptrtoint (i32* @global_var_1bca4.156 to i32), i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 -1, i32* @global_var_1bca4.156, align 4
  %v1_f2d4 = call i32 @sleep(i32 1)
  br label %dec_label_pc_f040.backedge

dec_label_pc_f2dc:                                ; preds = %dec_label_pc_f0a0
  %v0_f2e4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_f2e4, i32* %r2.global-to-local, align 4
  %v3_f2e8 = call i32 @socket(i32 2, i32 1, i32 %v0_f2e4)
  %v2_f2ec = icmp eq i32 %v3_f2e8, -1
  store i32 %v3_f2e8, i32* %r5.global-to-local, align 4
  %v1_f2f4 = load i32, i32* %r8.global-to-local, align 4
  %v2_f2f4 = inttoptr i32 %v1_f2f4 to i32*
  store i32 %v3_f2e8, i32* %v2_f2f4, align 4
  br i1 %v2_f2ec, label %dec_label_pc_f0b0, label %dec_label_pc_f2fc

dec_label_pc_f2fc:                                ; preds = %dec_label_pc_f2dc
  %v0_f2fc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_f2fc, i32* %r2.global-to-local, align 4
  %v2_f304 = call i32 (i32, i32, ...) @fcntl(i32 %v3_f2e8, i32 3)
  %v1_f30c = or i32 %v2_f304, 2048
  store i32 %v1_f30c, i32* %r2.global-to-local, align 4
  %v0_f310 = load i32, i32* %r5.global-to-local, align 4
  %v2_f314 = call i32 (i32, i32, ...) @fcntl(i32 %v0_f310, i32 4)
  store i32 ptrtoint (i32* @global_var_1bca8.133 to i32), i32* %r2.global-to-local, align 4
  %v2_f31c = load i32, i32* @global_var_1bca8.133, align 4
  store i32 %v2_f31c, i32* %r3.global-to-local, align 4
  %v2_f320 = icmp eq i32 %v2_f31c, 0
  br i1 %v2_f320, label %.thread, label %bb47

bb47:                                             ; preds = %dec_label_pc_f2fc
  call void @__pseudo_branch(i32 ptrtoint (i32* @global_var_132a4.160 to i32))
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_f2fc, %bb47
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_f334 = load i32, i32* @global_var_1bca4.156, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i8 1, i8* bitcast (i8** @global_var_1bcdc.158 to i8*), align 4
  %v5_f344 = call i32 @connect(i32 %v2_f334, %sockaddr* bitcast (%sockaddr** @global_var_1bd34.137 to %sockaddr*), i32 16)
  br label %dec_label_pc_f0b0

dec_label_pc_f34c:                                ; preds = %dec_label_pc_f16c
  store i32 4, i32* @r5, align 4
  store i32 0, i32* %stack_var_-44, align 4
  store i32 %v2_f35c, i32* %r3.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 4, i32* %stack_var_-48, align 4
  %v8_f374 = call i32 @getsockopt(i32 %v2_f1ec, i32 1, i32 4, i32* nonnull %stack_var_-44, i32* nonnull %stack_var_-48)
  %v3_f378 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_f378, i32* %r3.global-to-local, align 4
  %v2_f37c = icmp eq i32 %v3_f378, 0
  br i1 %v2_f37c, label %dec_label_pc_f3cc, label %dec_label_pc_f384

dec_label_pc_f384:                                ; preds = %dec_label_pc_f34c
  %v2_f384 = load i32, i32* @global_var_1bca4.156, align 4
  %v1_f388 = call i32 @close(i32 %v2_f384)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_f390 = load i32, i32* @r4, align 4
  %v2_f390 = inttoptr i32 %v1_f390 to i32*
  store i32 -1, i32* %v2_f390, align 4
  %v0_f394 = call i32 @function_f508()
  %v2_f39c = urem i32 %v0_f394, 10
  %v1_f3a0 = add nuw nsw i32 %v2_f39c, 1
  %v1_f3a4 = call i32 @sleep(i32 %v1_f3a0)
  br label %dec_label_pc_f040.backedge

dec_label_pc_f3ac:                                ; preds = %dec_label_pc_f13c
  %v2_f3b4 = load i32, i32* @global_var_1bca4.156, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v8_f3c4 = call i32 @send(i32 %v2_f3b4, i32* nonnull %v7_f3c4, i32 2, i32 16384)
  br label %dec_label_pc_f15c

dec_label_pc_f3cc:                                ; preds = %dec_label_pc_f34c
  %v2_f3d4 = call i32 @function_12fec(i8* %v1_f3d4)
  %sext = mul i32 %v2_f3d4, 16777216
  %v1_f3d8 = sdiv i32 %sext, 16777216
  %v7_f3d8 = inttoptr i32 %v1_f3d8 to i8*
  store i8* %v7_f3d8, i8** %stack_var_-38, align 4
  %v0_f3dc = call i32 @function_132a4()
  store i32 %v0_f3dc, i32* @global_var_1bd28.110, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_f3f0 = load i32, i32* @r5, align 4
  store i32 %v0_f3f0, i32* %r2.global-to-local, align 4
  %v2_f3f4 = load i32, i32* @global_var_1bca4.156, align 4
  %v5_f3f8 = call i32 @send(i32 %v2_f3f4, i32* nonnull @global_var_13894.162, i32 %v0_f3f0, i32 16384)
  store i32 1, i32* %r2.global-to-local, align 4
  %v2_f404 = load i32, i32* @global_var_1bca4.156, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_f410 = call i32 @send(i32 %v2_f404, i32* %v7_f3c4, i32 1, i32 16384)
  %v3_f414 = load i8*, i8** %stack_var_-38, align 4
  %v4_f414 = ptrtoint i8* %v3_f414 to i32
  store i32 %v4_f414, i32* %r2.global-to-local, align 4
  %v3_f418 = icmp eq i8* %v3_f414, null
  br i1 %v3_f418, label %dec_label_pc_f040.backedge, label %dec_label_pc_f420

dec_label_pc_f420:                                ; preds = %dec_label_pc_f3cc
  %v2_f424 = load i32, i32* @global_var_1bca4.156, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_f430 = call i32 @send(i32 %v2_f424, i32* nonnull %stack_var_-124, i32 %v4_f414, i32 16384)
  br label %dec_label_pc_f040.backedge

dec_label_pc_f438:                                ; preds = %dec_label_pc_f290, %dec_label_pc_f220
  %v0_f438 = load i32, i32* @r5, align 4
  %v1_f438 = inttoptr i32 %v0_f438 to i32*
  %v2_f438 = load i32, i32* %v1_f438, align 4
  store i32 %v2_f438, i32* %r3.global-to-local, align 4
  %v7_f43c = icmp eq i32 %v2_f438, 4
  br i1 %v7_f43c, label %dec_label_pc_f040.backedge, label %bb48

bb48:                                             ; preds = %dec_label_pc_f438
  %v8_f440 = icmp eq i32 %v2_f438, 11
  br i1 %v8_f440, label %dec_label_pc_f040.backedge, label %dec_label_pc_f2b8

dec_label_pc_f44c:                                ; preds = %dec_label_pc_f260
  %v2_f450 = load i32, i32* @global_var_1bca4.156, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_f460 = call i32 @recv(i32 %v2_f450, i32* nonnull %v7_f3c4, i32 2, i32 16384)
  br label %dec_label_pc_f040.backedge

dec_label_pc_f468:                                ; preds = %dec_label_pc_f270
  %v2_f468 = load i32, i32* @global_var_1bca4.156, align 4
  %v1_f46c = call i32 @close(i32 %v2_f468)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_f474 = load i32, i32* @r8, align 4
  %v2_f474 = inttoptr i32 %v1_f474 to i32*
  store i32 -1, i32* %v2_f474, align 4
  br label %dec_label_pc_f040.backedge

dec_label_pc_f47c:                                ; preds = %dec_label_pc_f2b0
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v2_f48c = load i32, i32* @global_var_1bca4.156, align 4
  %v5_f490 = call i32 @recv(i32 %v2_f48c, i32* nonnull %v7_f3c4, i32 2, i32 16384)
  %v3_f494 = load i8*, i8** %stack_var_-38, align 4
  %v4_f494 = ptrtoint i8* %v3_f494 to i32
  %v4_f498 = urem i32 %v4_f27c, 256
  %v4_f49c = mul i32 %v4_f494, 256
  %v5_f49c = or i32 %v4_f49c, %v4_f498
  store i32 %v5_f49c, i32* %r2.global-to-local, align 4
  %v3_f4a4 = sdiv i32 %v4_f49c, 256
  store i32 %v3_f4a4, i32* @lr, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v2_f4b0 = load i32, i32* @global_var_1bca4.156, align 4
  %v6_f4b8 = inttoptr i32 %v5_f49c to i8*
  store i8* %v6_f4b8, i8** %stack_var_-38, align 4
  %v8_f4bc = call i32 @recv(i32 %v2_f4b0, i32* nonnull %stack_var_-1532, i32 %v5_f49c, i32 16384)
  %v3_f4c0 = load i8*, i8** %stack_var_-38, align 4
  %v4_f4c0 = ptrtoint i8* %v3_f4c0 to i32
  store i32 %v4_f4c0, i32* %r2.global-to-local, align 4
  %v4_f4c4 = urem i32 %v3_f4a4, 256
  store i32 %v4_f4c4, i32* %r3.global-to-local, align 4
  %v6_f4c8 = mul nuw nsw i32 %v4_f4c4, 256
  %v7_f4c8 = or i32 %v4_f4c0, %v6_f4c8
  %v9_f4c8 = icmp eq i32 %v7_f4c8, 0
  br i1 %v9_f4c8, label %dec_label_pc_f040.backedge, label %dec_label_pc_f4d0

dec_label_pc_f4d0:                                ; preds = %dec_label_pc_f47c
  %v7_f4d4 = call i32 @function_901c(i32* nonnull %stack_var_-1532, i32 %v7_f4c8, i32 %v4_f4c0, i32 %v4_f4c4)
  br label %dec_label_pc_f040.backedge

; uselistorder directives
  uselistorder i32 %v4_f4c4, { 2, 0, 1 }
  uselistorder i32 %v4_f4c0, { 1, 0, 2 }
  uselistorder i32 %v3_f4a4, { 1, 0 }
  uselistorder i32 %v5_f49c, { 1, 0, 2 }
  uselistorder i32 %v4_f49c, { 1, 0 }
  uselistorder i32 %v3_f2e8, { 2, 1, 0, 3 }
  uselistorder i32 %v4_f278, { 2, 3, 0, 1 }
  uselistorder i32 %v2_f1ec, { 5, 2, 1, 6, 0, 4, 3 }
  uselistorder i32 %v13_f124, { 1, 0, 2 }
  uselistorder i32 %v2_f070, { 1, 0, 2 }
  uselistorder i32 %v1_f064, { 1, 2, 0 }
  uselistorder i32 %v1_f04c, { 1, 2, 0 }
  uselistorder i32* %v7_f3c4, { 3, 2, 0, 4, 1 }
  uselistorder i32 %v2_ef40, { 1, 0, 2, 3 }
  uselistorder i32 %v2_eed8, { 0, 1, 7, 2, 3, 4, 5, 6, 8 }
  uselistorder i32 %v2_eec8, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v0_ee10, { 0, 2, 1 }
  uselistorder i32* %stack_var_-36, { 0, 2, 1 }
  uselistorder i32* %stack_var_-124, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-52, { 1, 0, 2 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder i8** %stack_var_-38, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %stack_var_-44, { 1, 0, 2, 3 }
  uselistorder i32* %r4.global-to-local, { 2, 1, 0, 3, 4, 5, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 24, 32, 33, 35, 34, 1, 40, 41, 37, 36, 0, 38, 39, 42, 43, 44, 45 }
  uselistorder i8 1, { 1, 2, 0, 3 }
  uselistorder i32 16386, { 0, 2, 1, 3 }
  uselistorder i32 (i32)* @sleep, { 5, 4, 8, 7, 6, 3, 2, 1, 0, 9 }
  uselistorder i8* bitcast (i8** @global_var_1bcdc.158 to i8*), { 0, 1, 3, 2 }
  uselistorder i8** @global_var_1bcdc.158, { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_1bcdc.158 to i32), { 2, 1, 0 }
  uselistorder i32* @global_var_1bca4.156, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 11, 12, 13, 14, 16, 15, 17, 18 }
  uselistorder i32 (i32)* @function_ecf0, { 1, 0 }
  uselistorder i32 (i32)* @function_e49c, { 1, 0 }
  uselistorder i32 (i32)* @function_934c, { 1, 0 }
  uselistorder i32 (i32, i32*, i32)* @write, { 1, 0, 2 }
  uselistorder i32 (i8*, i32)* @function_13014, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 20, 21, 22, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i32 (i32, i32)* @function_f5bc, { 2, 1, 0 }
  uselistorder i32* @global_var_1bca8.133, { 2, 3, 0, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_ec9c.131 to i32), { 0, 2, 1 }
  uselistorder %sockaddr** @global_var_1bd34.137, { 1, 2, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_f040.backedge, { 6, 12, 5, 4, 11, 13, 3, 10, 2, 1, 9, 8, 0, 7 }
  uselistorder label %dec_label_pc_f15c, { 2, 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %dec_label_pc_f0b0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_f0a0, { 1, 0 }
  uselistorder label %dec_label_pc_f060.dec_label_pc_f060_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_f048.dec_label_pc_f048_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_ee94, { 2, 0, 1 }
}

define i32 @function_f508() local_unnamed_addr {
dec_label_pc_f508:
  %v2_f514 = load i32, i32* @global_var_1bce0.164, align 4
  %v2_f518 = load i32, i32* @global_var_1bcec.166, align 4
  %v4_f524 = mul i32 %v2_f514, 2048
  %v5_f524 = xor i32 %v4_f524, %v2_f514
  %v4_f528 = udiv i32 %v2_f518, 524288
  %v5_f528 = xor i32 %v4_f528, %v2_f518
  %v2_f52c = load i32, i32* @global_var_1bce4.168, align 4
  %v2_f530 = load i32, i32* @global_var_1bce8.170, align 4
  %v2_f534 = xor i32 %v5_f528, %v5_f524
  %v4_f538 = udiv i32 %v5_f524, 256
  %v5_f538 = xor i32 %v2_f534, %v4_f538
  store i32 %v2_f52c, i32* @global_var_1bce0.164, align 4
  store i32 %v2_f530, i32* @global_var_1bce4.168, align 4
  store i32 %v2_f518, i32* @global_var_1bce8.170, align 4
  store i32 %v5_f538, i32* @global_var_1bcec.166, align 4
  ret i32 %v5_f538

; uselistorder directives
  uselistorder i32 %v2_f518, { 2, 1, 0 }
  uselistorder i32 %v2_f514, { 1, 0 }
}

define i32 @function_f560(i32 %arg1) local_unnamed_addr {
dec_label_pc_f560:
  %stack_var_-12 = alloca i32, align 4
  %v3_f560 = load i32, i32* @r4, align 4
  store i32 %v3_f560, i32* %stack_var_-12, align 4
  %v2_f568 = call i32 @time(i32* null)
  store i32 %v2_f568, i32* @global_var_1bce0.164, align 4
  %v1_f574 = call i32 @getpid()
  %v0_f57c = call i32 @getppid()
  %v2_f584 = xor i32 %v1_f574, %v0_f57c
  store i32 %v2_f584, i32* @global_var_1bce4.168, align 4
  %v1_f58c = call i32 @clock()
  %v2_f590 = load i32, i32* @global_var_1bce4.168, align 4
  %v2_f59c = xor i32 %v2_f590, %v1_f58c
  store i32 %v2_f59c, i32* @global_var_1bcec.166, align 4
  store i32 %v1_f58c, i32* @global_var_1bce8.170, align 4
  %v2_f5a8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_f5a8, i32* @r4, align 4
  ret i32 %v1_f58c

; uselistorder directives
  uselistorder i32 %v1_f58c, { 1, 2, 0 }
  uselistorder i32 ()* @getppid, { 1, 0, 2, 3 }
  uselistorder i32 ()* @getpid, { 0, 2, 1, 3 }
}

define i32 @function_f5bc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f5bc:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_f5bc = load i32, i32* @r4, align 4
  store i32 %v3_f5bc, i32* %stack_var_-36, align 4
  %v6_f5bc = load i32, i32* @r5, align 4
  %v9_f5bc = load i32, i32* @r6, align 4
  %v12_f5bc = load i32, i32* @r7, align 4
  %v28_f5bc = ptrtoint i32* %stack_var_-36 to i32
  store i32 %arg1, i32* %fp.global-to-local, align 4
  store i32 %arg2, i32* %sb.global-to-local, align 4
  %v1_f5d0 = call i32 @function_12a20(i32 28)
  %v3_f5dc = call i32 @function_1293c(i32 28, i32* null)
  %v1_f5e0 = inttoptr i32 %v3_f5dc to i8*
  %tmp12 = bitcast i32* %stack_var_-68 to i8*
  %v6_f5e8 = call i8* @strcpy(i8* %tmp12, i8* %v1_f5e0)
  %v2_f5ec = icmp eq i32 %arg2, 0
  br i1 %v2_f5ec, label %dec_label_pc_f668, label %dec_label_pc_f5f4

dec_label_pc_f5f4:                                ; preds = %dec_label_pc_f5bc
  store i32 ptrtoint (i32* @global_var_1bce0.164 to i32), i32* %sl.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1bce4.168 to i32), i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1bce8.170 to i32), i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_1bcec.166 to i32), i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_f608

dec_label_pc_f608:                                ; preds = %dec_label_pc_f608.dec_label_pc_f608_crit_edge, %dec_label_pc_f5f4
  %v1_f62c = phi i32 [ %v1_f62c.pre, %dec_label_pc_f608.dec_label_pc_f608_crit_edge ], [ ptrtoint (i32* @global_var_1bce0.164 to i32), %dec_label_pc_f5f4 ]
  %v2_f608 = load i32, i32* @global_var_1bcec.166, align 4
  store i32 %v2_f608, i32* %r2.global-to-local, align 4
  %v2_f60c = load i32, i32* @global_var_1bce0.164, align 4
  %v4_f610 = udiv i32 %v2_f608, 524288
  %v5_f610 = xor i32 %v4_f610, %v2_f608
  %v4_f614 = mul i32 %v2_f60c, 2048
  %v5_f614 = xor i32 %v4_f614, %v2_f60c
  %v2_f618 = xor i32 %v5_f610, %v5_f614
  %v2_f61c = load i32, i32* @global_var_1bce4.168, align 4
  %v2_f620 = load i32, i32* @global_var_1bce8.170, align 4
  store i32 %v2_f620, i32* %ip.global-to-local, align 4
  %v4_f624 = udiv i32 %v5_f614, 256
  %v5_f624 = xor i32 %v2_f618, %v4_f624
  store i32 %v5_f624, i32* @r4, align 4
  %v2_f62c = inttoptr i32 %v1_f62c to i32*
  store i32 %v2_f61c, i32* %v2_f62c, align 4
  %v0_f630 = load i32, i32* %ip.global-to-local, align 4
  %v1_f630 = load i32, i32* %r8.global-to-local, align 4
  %v2_f630 = inttoptr i32 %v1_f630 to i32*
  store i32 %v0_f630, i32* %v2_f630, align 4
  %v0_f634 = load i32, i32* %r2.global-to-local, align 4
  %v1_f634 = load i32, i32* @r7, align 4
  %v2_f634 = inttoptr i32 %v1_f634 to i32*
  store i32 %v0_f634, i32* %v2_f634, align 4
  %v0_f638 = load i32, i32* @r4, align 4
  %v1_f638 = load i32, i32* @r6, align 4
  %v2_f638 = inttoptr i32 %v1_f638 to i32*
  store i32 %v0_f638, i32* %v2_f638, align 4
  %v2_f63c = call i32 @function_12fec(i8* %tmp12)
  %v0_f644 = load i32, i32* @r4, align 4
  %v2_f648 = urem i32 %v0_f644, %v2_f63c
  %v2_f650 = add i32 %v2_f648, %v28_f5bc
  %v1_f654 = add i32 %v2_f650, -32
  %v2_f654 = inttoptr i32 %v1_f654 to i8*
  %v3_f654 = load i8, i8* %v2_f654, align 1
  %v2_f658 = load i32, i32* @r5, align 4
  %v3_f658 = load i32, i32* %fp.global-to-local, align 4
  %v4_f658 = add i32 %v3_f658, %v2_f658
  %v5_f658 = inttoptr i32 %v4_f658 to i8*
  store i8 %v3_f654, i8* %v5_f658, align 1
  %v0_f65c = load i32, i32* @r5, align 4
  %v1_f65c = add i32 %v0_f65c, 1
  store i32 %v1_f65c, i32* @r5, align 4
  %v1_f660 = load i32, i32* %sb.global-to-local, align 4
  %v9_f660 = icmp eq i32 %v1_f65c, %v1_f660
  br i1 %v9_f660, label %dec_label_pc_f668, label %dec_label_pc_f608.dec_label_pc_f608_crit_edge

dec_label_pc_f608.dec_label_pc_f608_crit_edge:    ; preds = %dec_label_pc_f608
  %v1_f62c.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_f608

dec_label_pc_f668:                                ; preds = %dec_label_pc_f608, %dec_label_pc_f5bc
  %v1_f66c = call i32 @function_12968(i32 28)
  %v2_f674 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_f674, i32* @r4, align 4
  store i32 %v6_f5bc, i32* @r5, align 4
  store i32 %v9_f5bc, i32* @r6, align 4
  store i32 %v12_f5bc, i32* @r7, align 4
  ret i32 %v1_f66c

; uselistorder directives
  uselistorder i32 %v2_f60c, { 1, 0 }
  uselistorder i32 %v2_f608, { 1, 0, 2 }
  uselistorder i32* %stack_var_-36, { 0, 2, 1 }
}

define i32 @function_f688(i8* %arg1) local_unnamed_addr {
dec_label_pc_f688:
  %fp.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-36 = alloca i32, align 4
  %v3_f688 = load i32, i32* @r4, align 4
  store i32 %v3_f688, i32* %stack_var_-36, align 4
  %v9_f688 = load i32, i32* @r6, align 4
  %v12_f688 = load i32, i32* @r7, align 4
  %v15_f688 = load i32, i32* @r8, align 4
  %v18_f688 = load i32, i32* @sb, align 4
  %v21_f688 = load i32, i32* @sl, align 4
  %v24_f688 = load i32, i32* @fp, align 4
  %v0_f68c = load i32, i32* @r1, align 4
  store i32 %v0_f68c, i32* %r4.global-to-local, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  %tmp20 = icmp slt i32 %v0_f68c, 1
  br i1 %tmp20, label %bb, label %bb21

bb:                                               ; preds = %dec_label_pc_f688
  store i32 %v3_f688, i32* @r4, align 4
  ret i32 %tmp

bb21:                                             ; preds = %dec_label_pc_f688
  store i32 ptrtoint (i32* @global_var_1bcec.166 to i32), i32* %fp.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1bce8.170 to i32), i32* %sb.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1bce4.168 to i32), i32* %sl.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1bce0.164 to i32), i32* %r8.global-to-local, align 4
  %v2_f6a8 = load i32, i32* @global_var_1bcec.166, align 4
  store i32 %v2_f6a8, i32* %lr.global-to-local, align 4
  %v2_f6ac = load i32, i32* @global_var_1bce8.170, align 4
  store i32 %v2_f6ac, i32* %r7.global-to-local, align 4
  %v2_f6b0 = load i32, i32* @global_var_1bce4.168, align 4
  store i32 %v2_f6b0, i32* %r6.global-to-local, align 4
  %v2_f6b4 = load i32, i32* @global_var_1bce0.164, align 4
  br label %dec_label_pc_f6e0

dec_label_pc_f6bc:                                ; preds = %dec_label_pc_f70c
  %v3_f714 = sdiv i32 %v5_f6f8, 256
  %v1_f6bc = trunc i32 %v3_f714 to i8
  %v3_f6bc = add i32 %v9_f700, 1
  %v4_f6bc = inttoptr i32 %v3_f6bc to i8*
  store i8 %v1_f6bc, i8* %v4_f6bc, align 1
  %v0_f6c0 = load i32, i32* %r3.global-to-local, align 4
  %v1_f6c0 = trunc i32 %v0_f6c0 to i8
  %v2_f6c0 = load i32, i32* %r5.global-to-local, align 4
  %v3_f6c0 = inttoptr i32 %v2_f6c0 to i8*
  store i8 %v1_f6c0, i8* %v3_f6c0, align 1
  %v0_f6c4 = load i32, i32* %r5.global-to-local, align 4
  %v1_f6c4 = add i32 %v0_f6c4, 2
  store i32 %v1_f6c4, i32* %r5.global-to-local, align 4
  %v0_f6c8.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f6c8

dec_label_pc_f6c8:                                ; preds = %.thread, %dec_label_pc_f6bc
  %v0_f6c8 = phi i32 [ %v9_f704, %.thread ], [ %v0_f6c8.pre, %dec_label_pc_f6bc ]
  %v2_f6bc7 = phi i32 [ %v12_f700, %.thread ], [ %v1_f6c4, %dec_label_pc_f6bc ]
  %tmp22 = icmp slt i32 %v0_f6c8, 1
  br i1 %tmp22, label %dec_label_pc_f748, label %dec_label_pc_f6d4

dec_label_pc_f6d4:                                ; preds = %dec_label_pc_f6c8
  %v0_f6cc = load i32, i32* %r6.global-to-local, align 4
  %v0_f6d4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_f6d4, i32* %r6.global-to-local, align 4
  %v0_f6d8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v0_f6d8, i32* %r7.global-to-local, align 4
  %v0_f6dc = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_f6dc, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_f6e0

dec_label_pc_f6e0:                                ; preds = %bb21, %dec_label_pc_f6d4
  %v0_f730 = phi i32 [ %v2_f6b0, %bb21 ], [ %v0_f6d4, %dec_label_pc_f6d4 ]
  %v9_f700 = phi i32 [ %tmp, %bb21 ], [ %v2_f6bc7, %dec_label_pc_f6d4 ]
  %v0_f718 = phi i32 [ %v0_f68c, %bb21 ], [ %v0_f6c8, %dec_label_pc_f6d4 ]
  %v0_f724 = phi i32 [ %v2_f6a8, %bb21 ], [ %v0_f6dc, %dec_label_pc_f6d4 ]
  %v0_f720 = phi i32 [ %v2_f6b4, %bb21 ], [ %v0_f6cc, %dec_label_pc_f6d4 ]
  %v4_f6e0 = mul i32 %v0_f720, 2048
  %v5_f6e0 = xor i32 %v4_f6e0, %v0_f720
  %v4_f6e4 = udiv i32 %v0_f724, 524288
  %v5_f6e4 = xor i32 %v4_f6e4, %v0_f724
  %v2_f6e8 = xor i32 %v5_f6e4, %v5_f6e0
  %v4_f6f8 = udiv i32 %v5_f6e0, 256
  %v5_f6f8 = xor i32 %v4_f6f8, %v2_f6e8
  store i32 %v5_f6f8, i32* %r3.global-to-local, align 4
  %v7_f700 = icmp sgt i32 %v0_f718, 3
  br i1 %v7_f700, label %.thread, label %dec_label_pc_f70c

.thread:                                          ; preds = %dec_label_pc_f6e0
  %v10_f700 = inttoptr i32 %v9_f700 to i32*
  store i32 %v5_f6f8, i32* %v10_f700, align 4
  %v11_f700 = load i32, i32* %r5.global-to-local, align 4
  %v12_f700 = add i32 %v11_f700, 4
  store i32 %v12_f700, i32* %r5.global-to-local, align 4
  %v8_f704 = load i32, i32* %r4.global-to-local, align 4
  %v9_f704 = add i32 %v8_f704, -4
  store i32 %v9_f704, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f6c8

dec_label_pc_f70c:                                ; preds = %dec_label_pc_f6e0
  store i32 %v5_f6f8, i32* %r3.global-to-local, align 4
  %v7_f710 = icmp eq i32 %v0_f718, 1
  %v1_f718 = add i32 %v0_f718, -2
  store i32 %v1_f718, i32* %r4.global-to-local, align 4
  br i1 %v7_f710, label %dec_label_pc_f720, label %dec_label_pc_f6bc

dec_label_pc_f720:                                ; preds = %dec_label_pc_f70c
  store i32 %v5_f6f8, i32* %r3.global-to-local, align 4
  %v1_f730 = load i32, i32* %r8.global-to-local, align 4
  %v2_f730 = inttoptr i32 %v1_f730 to i32*
  store i32 %v0_f730, i32* %v2_f730, align 4
  %v0_f734 = load i32, i32* %r7.global-to-local, align 4
  %v1_f734 = load i32, i32* %sl.global-to-local, align 4
  %v2_f734 = inttoptr i32 %v1_f734 to i32*
  store i32 %v0_f734, i32* %v2_f734, align 4
  %v0_f738 = load i32, i32* %lr.global-to-local, align 4
  %v1_f738 = load i32, i32* %sb.global-to-local, align 4
  %v2_f738 = inttoptr i32 %v1_f738 to i32*
  store i32 %v0_f738, i32* %v2_f738, align 4
  %v0_f73c = load i32, i32* %r3.global-to-local, align 4
  %v1_f73c = load i32, i32* %fp.global-to-local, align 4
  %v2_f73c = inttoptr i32 %v1_f73c to i32*
  store i32 %v0_f73c, i32* %v2_f73c, align 4
  %v0_f740 = load i32, i32* %r3.global-to-local, align 4
  %v1_f740 = trunc i32 %v0_f740 to i8
  %v2_f740 = load i32, i32* %r5.global-to-local, align 4
  %v3_f740 = inttoptr i32 %v2_f740 to i8*
  store i8 %v1_f740, i8* %v3_f740, align 1
  %v2_f744 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_f744, i32* @r4, align 4
  store i32 %v9_f688, i32* @r6, align 4
  store i32 %v12_f688, i32* @r7, align 4
  store i32 %v15_f688, i32* @r8, align 4
  store i32 %v18_f688, i32* @sb, align 4
  store i32 %v21_f688, i32* @sl, align 4
  store i32 %v24_f688, i32* @fp, align 4
  ret i32 %v5_f6e0

dec_label_pc_f748:                                ; preds = %dec_label_pc_f6c8
  %v0_f748 = load i32, i32* %r3.global-to-local, align 4
  %v1_f748 = load i32, i32* %fp.global-to-local, align 4
  %v2_f748 = inttoptr i32 %v1_f748 to i32*
  store i32 %v0_f748, i32* %v2_f748, align 4
  %v0_f74c = load i32, i32* %lr.global-to-local, align 4
  %v1_f74c = load i32, i32* %sb.global-to-local, align 4
  %v2_f74c = inttoptr i32 %v1_f74c to i32*
  store i32 %v0_f74c, i32* %v2_f74c, align 4
  %v0_f750 = load i32, i32* %r7.global-to-local, align 4
  %v1_f750 = load i32, i32* %sl.global-to-local, align 4
  %v2_f750 = inttoptr i32 %v1_f750 to i32*
  store i32 %v0_f750, i32* %v2_f750, align 4
  %v0_f754 = load i32, i32* %r6.global-to-local, align 4
  %v1_f754 = load i32, i32* %r8.global-to-local, align 4
  %v2_f754 = inttoptr i32 %v1_f754 to i32*
  store i32 %v0_f754, i32* %v2_f754, align 4
  %v2_f758 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_f758, i32* @r4, align 4
  store i32 %v9_f688, i32* @r6, align 4
  store i32 %v12_f688, i32* @r7, align 4
  store i32 %v15_f688, i32* @r8, align 4
  store i32 %v18_f688, i32* @sb, align 4
  store i32 %v21_f688, i32* @sl, align 4
  store i32 %v24_f688, i32* @fp, align 4
  ret i32 %v5_f6e0

; uselistorder directives
  uselistorder i32 %v9_f704, { 1, 0 }
  uselistorder i32 %v12_f700, { 1, 0 }
  uselistorder i32 %v5_f6f8, { 1, 3, 2, 4, 0 }
  uselistorder i32 %v5_f6e0, { 1, 2, 0, 3 }
  uselistorder i32 %v0_f720, { 1, 0 }
  uselistorder i32 %v0_f724, { 1, 0 }
  uselistorder i32 %v0_f6c8, { 1, 0 }
  uselistorder i32 %v24_f688, { 1, 0 }
  uselistorder i32 %v21_f688, { 1, 0 }
  uselistorder i32 %v18_f688, { 1, 0 }
  uselistorder i32 %v15_f688, { 1, 0 }
  uselistorder i32 %v12_f688, { 1, 0 }
  uselistorder i32 %v9_f688, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 5, 0, 3, 4, 6 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder i32* %r3.global-to-local, { 5, 0, 1, 2, 4, 7, 6, 3 }
  uselistorder i32* %lr.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* @global_var_1bce0.164, { 2, 3, 5, 1, 0, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_1bce0.164 to i32), { 1, 0, 2 }
  uselistorder i32* @global_var_1bce4.168, { 2, 3, 6, 4, 1, 0, 5 }
  uselistorder i32* @global_var_1bce8.170, { 2, 3, 5, 1, 0, 4 }
  uselistorder i32* @global_var_1bcec.166, { 2, 3, 5, 1, 0, 4 }
  uselistorder i32* @sl, { 79, 80, 81, 2, 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 82, 83, 84, 85, 35, 36, 37, 38, 39, 40 }
  uselistorder i32* @sb, { 67, 68, 69, 1, 2, 3, 4, 5, 6, 9, 7, 8, 0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42 }
  uselistorder i32* @r8, { 87, 88, 89, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 0, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 1, 86, 90, 2, 91, 50, 51, 52, 53, 54 }
  uselistorder label %dec_label_pc_f6e0, { 1, 0 }
}

define i32 @function_f76c() local_unnamed_addr {
dec_label_pc_f76c:
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_f76c = load i32, i32* @r4, align 4
  store i32 %v3_f76c, i32* %stack_var_-16, align 4
  %v0_f770 = load i32, i32* @r0, align 4
  store i32 %v0_f770, i32* %r5.global-to-local, align 4
  %v1_f774 = add i32 %v0_f770, 4
  %v2_f774 = inttoptr i32 %v1_f774 to i32*
  %v3_f774 = load i32, i32* %v2_f774, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 0, i32* %stack_var_-32, align 4
  store i32 63384, i32* @lr, align 4
  %v1_f794 = icmp ne i32 %v3_f774, -1
  call void @__pseudo_cond_branch(i1 %v1_f794, i32 ptrtoint (i32* @global_var_8d7c.159 to i32))
  %v3_f7a4 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_f7a4, i32* %r3.global-to-local, align 4
  %v2_f7ac = icmp eq i32 %v3_f7a4, -1
  store i32 256, i32* @r1, align 4
  %v0_f7b4 = load i32, i32* %r5.global-to-local, align 4
  %v1_f7b4 = add i32 %v0_f7b4, 28
  store i32 %v1_f7b4, i32* @r0, align 4
  %v2_f7b8 = add i32 %v0_f7b4, 4
  %v3_f7b8 = inttoptr i32 %v2_f7b8 to i32*
  store i32 %v3_f7a4, i32* %v3_f7b8, align 4
  br i1 %v2_f7ac, label %dec_label_pc_f76c.dec_label_pc_f834_crit_edge, label %dec_label_pc_f7c0

dec_label_pc_f76c.dec_label_pc_f834_crit_edge:    ; preds = %dec_label_pc_f76c
  %v14_f838.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_f834

dec_label_pc_f7c0:                                ; preds = %dec_label_pc_f76c
  %v0_f7c0 = load i32, i32* %r6.global-to-local, align 4
  %v1_f7c0 = load i32, i32* %r5.global-to-local, align 4
  %v2_f7c0 = add i32 %v1_f7c0, 24
  %v3_f7c0 = inttoptr i32 %v2_f7c0 to i32*
  store i32 %v0_f7c0, i32* %v3_f7c0, align 4
  %v0_f7c4 = call i32 @function_1308c()
  %v0_f7c8 = load i32, i32* %r5.global-to-local, align 4
  %v1_f7c8 = add i32 %v0_f7c8, 4
  %v2_f7c8 = inttoptr i32 %v1_f7c8 to i32*
  %v3_f7c8 = load i32, i32* %v2_f7c8, align 4
  %v2_f7d8 = call i32 (i32, i32, ...) @fcntl(i32 %v3_f7c8, i32 3)
  %v2_f7e8 = call i32 (i32, i32, ...) @fcntl(i32 %v3_f7c8, i32 4)
  store i32 ptrtoint (i32* @global_var_1bd24.184 to i32), i32* %r3.global-to-local, align 4
  %v0_f7f0 = load i32, i32* %r5.global-to-local, align 4
  %v2_f7f4 = load i32, i32* @global_var_1bd24.184, align 4
  %v1_f7f8 = add i32 %v0_f7f0, 16
  %v2_f7f8 = inttoptr i32 %v1_f7f8 to i32*
  %v3_f7f8 = load i32, i32* %v2_f7f8, align 4
  store i32 %v3_f7f8, i32* @lr, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_f800 = add i32 %v0_f7f0, 8
  %v3_f800 = inttoptr i32 %v2_f800 to i32*
  store i32 %v2_f7f4, i32* %v3_f800, align 4
  %v0_f804 = load i32, i32* %r3.global-to-local, align 4
  %v1_f804 = load i32, i32* %r5.global-to-local, align 4
  %v2_f804 = add i32 %v1_f804, 12
  %v3_f804 = inttoptr i32 %v2_f804 to i32*
  store i32 %v0_f804, i32* %v3_f804, align 4
  %v0_f80c = load i32, i32* %r5.global-to-local, align 4
  %v1_f80c = add i32 %v0_f80c, 4
  %v2_f80c = inttoptr i32 %v1_f80c to i32*
  %v3_f80c = load i32, i32* %v2_f80c, align 4
  %v0_f810 = load i32, i32* %r3.global-to-local, align 4
  %v2_f810 = mul i32 %v0_f810, 2
  store i32 %v2_f810, i32* %r3.global-to-local, align 4
  %tmp13 = bitcast i32* %stack_var_-32 to %sockaddr*
  store i32 %v2_f810, i32* %stack_var_-32, align 4
  %v5_f830 = call i32 @connect(i32 %v3_f80c, %sockaddr* %tmp13, i32 16)
  br label %dec_label_pc_f834

dec_label_pc_f834:                                ; preds = %dec_label_pc_f76c.dec_label_pc_f834_crit_edge, %dec_label_pc_f7c0
  %v14_f838 = phi i32 [ %v14_f838.pre, %dec_label_pc_f76c.dec_label_pc_f834_crit_edge ], [ %v5_f830, %dec_label_pc_f7c0 ]
  %v2_f838 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_f838, i32* @r4, align 4
  ret i32 %v14_f838

; uselistorder directives
  uselistorder i32 %v2_f810, { 1, 0 }
  uselistorder i32* %stack_var_-32, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 5, 4, 3, 6 }
  uselistorder i32 ()* @function_1308c, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_f834, { 1, 0 }
}

define i32 @function_f840(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f840:
  %fp.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1bcf0.186 to i32), i32* %r8.global-to-local, align 4
  %v2_f848 = load i32, i32* @global_var_1bcf0.186, align 4
  store i32 ptrtoint (i32* @global_var_1bd1c.188 to i32), i32* %sb.global-to-local, align 4
  %v3_f854 = mul i32 %v2_f848, 16
  store i32 %v3_f854, i32* %r3.global-to-local, align 4
  %v3_f85c = urem i32 %arg3, 65536
  store i32 %v3_f85c, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r5.global-to-local, align 4
  %v2_f868 = load i32, i32* @global_var_1bd1c.188, align 4
  %v1_f86c = add i32 %v3_f854, 16
  store i32 %v1_f86c, i32* %r1.global-to-local, align 4
  store i32 %v3_f85c, i32* %stack_var_-44, align 4
  %v15_f874 = inttoptr i32 %v2_f868 to i32*
  %v16_f874 = call i32* @realloc(i32* %v15_f874, i32 %v1_f86c)
  %v18_f874 = ptrtoint i32* %v16_f874 to i32
  store i32 %v18_f874, i32* %sl.global-to-local, align 4
  %v0_f87c = load i32, i32* %r5.global-to-local, align 4
  %v1_f880 = load i32, i32* %sb.global-to-local, align 4
  %v2_f880 = inttoptr i32 %v1_f880 to i32*
  store i32 %v18_f874, i32* %v2_f880, align 4
  %v2_f884 = load i32, i32* @global_var_1bcf0.186, align 4
  store i32 %v2_f884, i32* %fp.global-to-local, align 4
  %v1_f888 = inttoptr i32 %v0_f87c to i8*
  %v2_f888 = call i32 @function_12fec(i8* %v1_f888)
  %sext = mul i32 %v2_f888, 16777216
  %v1_f88c = sdiv i32 %sext, 16777216
  %v2_f88c = add nsw i32 %v1_f88c, 1
  store i32 %v1_f88c, i32* %r7.global-to-local, align 4
  %v1_f898 = call i32* @malloc(i32 %v2_f88c)
  %v3_f898 = ptrtoint i32* %v1_f898 to i32
  %v0_f89c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_f89c, i32* %r1.global-to-local, align 4
  store i32 %v2_f88c, i32* %r2.global-to-local, align 4
  store i32 %v3_f898, i32* %r6.global-to-local, align 4
  %v3_f8a8 = call i32 @function_13068(i32 %v3_f898, i32 %v0_f89c, i32 %v2_f88c)
  %v0_f8ac = load i32, i32* %r7.global-to-local, align 4
  %tmp21 = icmp slt i32 %v0_f8ac, 1
  %extract.t6 = trunc i32 %v0_f8ac to i8
  br i1 %tmp21, label %dec_label_pc_f8d0, label %dec_label_pc_f8b4

dec_label_pc_f8b4:                                ; preds = %dec_label_pc_f840
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_f8b8

dec_label_pc_f8b8:                                ; preds = %dec_label_pc_f8b8, %dec_label_pc_f8b4
  %v2_f8c0 = phi i32 [ %v1_f8c4, %dec_label_pc_f8b8 ], [ 0, %dec_label_pc_f8b4 ]
  %v1_f8b8 = load i32, i32* %r6.global-to-local, align 4
  %v2_f8b8 = add i32 %v1_f8b8, %v2_f8c0
  %v3_f8b8 = inttoptr i32 %v2_f8b8 to i8*
  %v4_f8b8 = load i8, i8* %v3_f8b8, align 1
  %v6_f8b8 = zext i8 %v4_f8b8 to i32
  %v1_f8bc = xor i32 %v6_f8b8, 84
  store i32 %v1_f8bc, i32* %r3.global-to-local, align 4
  %v1_f8c0 = trunc i32 %v1_f8bc to i8
  store i8 %v1_f8c0, i8* %v3_f8b8, align 1
  %v0_f8c4 = load i32, i32* %r2.global-to-local, align 4
  %v1_f8c4 = add i32 %v0_f8c4, 1
  store i32 %v1_f8c4, i32* %r2.global-to-local, align 4
  %v0_f8c8 = load i32, i32* %r7.global-to-local, align 4
  %v9_f8c8 = icmp eq i32 %v0_f8c8, %v1_f8c4
  br i1 %v9_f8c8, label %dec_label_pc_f8d0.loopexit, label %dec_label_pc_f8b8

dec_label_pc_f8d0.loopexit:                       ; preds = %dec_label_pc_f8b8
  %extract.t = trunc i32 %v1_f8c4 to i8
  br label %dec_label_pc_f8d0

dec_label_pc_f8d0:                                ; preds = %dec_label_pc_f8d0.loopexit, %dec_label_pc_f840
  %v0_f8e0.off0 = phi i8 [ %extract.t, %dec_label_pc_f8d0.loopexit ], [ %extract.t6, %dec_label_pc_f840 ]
  %v2_f8d0 = load i32, i32* @global_var_1bcf0.186, align 4
  %v2_f8d4 = load i32, i32* @global_var_1bd1c.188, align 4
  store i32 %v2_f8d4, i32* %r2.global-to-local, align 4
  %v3_f8d8 = mul i32 %v2_f8d0, 16
  %v2_f8dc = add i32 %v2_f8d4, %v3_f8d8
  store i32 %v2_f8dc, i32* %r3.global-to-local, align 4
  %v3_f8e0 = add i32 %v2_f8dc, 12
  %v4_f8e0 = inttoptr i32 %v3_f8e0 to i8*
  store i8 %v0_f8e0.off0, i8* %v4_f8e0, align 1
  %v0_f8e4 = load i32, i32* %r6.global-to-local, align 4
  %v1_f8e4 = load i32, i32* %sl.global-to-local, align 4
  %v2_f8e4 = load i32, i32* %fp.global-to-local, align 4
  %v5_f8e4 = mul i32 %v2_f8e4, 16
  %v6_f8e4 = add i32 %v5_f8e4, %v1_f8e4
  %v7_f8e4 = inttoptr i32 %v6_f8e4 to i32*
  store i32 %v0_f8e4, i32* %v7_f8e4, align 4
  %v2_f8ec = load i32, i32* @global_var_1bcf0.186, align 4
  store i32 %v2_f8ec, i32* %r7.global-to-local, align 4
  %v2_f8f0 = load i32, i32* @global_var_1bd1c.188, align 4
  store i32 %v2_f8f0, i32* %sl.global-to-local, align 4
  %v1_f8f4 = inttoptr i32 %arg2 to i8*
  %v2_f8f4 = call i32 @function_12fec(i8* %v1_f8f4)
  %sext1 = mul i32 %v2_f8f4, 16777216
  %v1_f8f8 = sdiv i32 %sext1, 16777216
  %v2_f8f8 = add nsw i32 %v1_f8f8, 1
  store i32 %v1_f8f8, i32* %r5.global-to-local, align 4
  %v1_f904 = call i32* @malloc(i32 %v2_f8f8)
  %v3_f904 = ptrtoint i32* %v1_f904 to i32
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %v2_f8f8, i32* %r2.global-to-local, align 4
  store i32 %v3_f904, i32* %r6.global-to-local, align 4
  %v3_f914 = call i32 @function_13068(i32 %v3_f904, i32 %arg2, i32 %v2_f8f8)
  %v0_f918 = load i32, i32* %r5.global-to-local, align 4
  %tmp22 = icmp slt i32 %v0_f918, 1
  %extract.t8 = trunc i32 %v0_f918 to i8
  br i1 %tmp22, label %dec_label_pc_f93c, label %dec_label_pc_f920

dec_label_pc_f920:                                ; preds = %dec_label_pc_f8d0
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_f924

dec_label_pc_f924:                                ; preds = %dec_label_pc_f924, %dec_label_pc_f920
  %v2_f92c = phi i32 [ %v1_f930, %dec_label_pc_f924 ], [ 0, %dec_label_pc_f920 ]
  %v1_f924 = load i32, i32* %r6.global-to-local, align 4
  %v2_f924 = add i32 %v1_f924, %v2_f92c
  %v3_f924 = inttoptr i32 %v2_f924 to i8*
  %v4_f924 = load i8, i8* %v3_f924, align 1
  %v6_f924 = zext i8 %v4_f924 to i32
  %v1_f928 = xor i32 %v6_f924, 84
  store i32 %v1_f928, i32* %r3.global-to-local, align 4
  %v1_f92c = trunc i32 %v1_f928 to i8
  store i8 %v1_f92c, i8* %v3_f924, align 1
  %v0_f930 = load i32, i32* %r2.global-to-local, align 4
  %v1_f930 = add i32 %v0_f930, 1
  store i32 %v1_f930, i32* %r2.global-to-local, align 4
  %v0_f934 = load i32, i32* %r5.global-to-local, align 4
  %v9_f934 = icmp eq i32 %v0_f934, %v1_f930
  br i1 %v9_f934, label %dec_label_pc_f93c.loopexit, label %dec_label_pc_f924

dec_label_pc_f93c.loopexit:                       ; preds = %dec_label_pc_f924
  %extract.t7 = trunc i32 %v1_f930 to i8
  br label %dec_label_pc_f93c

dec_label_pc_f93c:                                ; preds = %dec_label_pc_f93c.loopexit, %dec_label_pc_f8d0
  %v0_f94c.off0 = phi i8 [ %extract.t7, %dec_label_pc_f93c.loopexit ], [ %extract.t8, %dec_label_pc_f8d0 ]
  %v2_f93c = load i32, i32* @global_var_1bcf0.186, align 4
  %v2_f940 = load i32, i32* @global_var_1bd1c.188, align 4
  %v3_f944 = mul i32 %v2_f93c, 16
  %v2_f948 = or i32 %v3_f944, 13
  %v3_f94c = add i32 %v2_f948, %v2_f940
  %v4_f94c = inttoptr i32 %v3_f94c to i8*
  store i8 %v0_f94c.off0, i8* %v4_f94c, align 1
  %v2_f954 = load i32, i32* @global_var_1bcf0.186, align 4
  store i32 %v2_f954, i32* %lr.global-to-local, align 4
  %v4_f958 = load i8, i8* @global_var_1bd21.191, align 1
  %v5_f958 = zext i8 %v4_f958 to i32
  %v3_f95c = load i8, i8* bitcast (i8** @global_var_1bd20.190 to i8*), align 4
  %v4_f95c = zext i8 %v3_f95c to i32
  %v2_f960 = load i32, i32* @global_var_1bd1c.188, align 4
  %v4_f964 = mul nuw nsw i32 %v5_f958, 256
  %v5_f964 = or i32 %v4_f95c, %v4_f964
  store i32 %v5_f964, i32* %r2.global-to-local, align 4
  %v3_f968 = mul i32 %v2_f954, 16
  %v2_f96c = add i32 %v2_f960, %v3_f968
  store i32 %v2_f96c, i32* %r1.global-to-local, align 4
  %v3_f974 = add i32 %v2_f96c, 9
  %v4_f974 = inttoptr i32 %v3_f974 to i8*
  store i8 %v4_f958, i8* %v4_f974, align 1
  %v0_f978 = load i32, i32* %r2.global-to-local, align 4
  %v1_f978 = trunc i32 %v0_f978 to i8
  %v2_f978 = load i32, i32* %r1.global-to-local, align 4
  %v3_f978 = add i32 %v2_f978, 8
  %v4_f978 = inttoptr i32 %v3_f978 to i8*
  store i8 %v1_f978, i8* %v4_f978, align 1
  %v4_f97c = load i8, i8* @global_var_1bd21.191, align 1
  %v5_f97c = zext i8 %v4_f97c to i32
  %v3_f980 = load i8, i8* bitcast (i8** @global_var_1bd20.190 to i8*), align 4
  %v4_f980 = zext i8 %v3_f980 to i32
  %v4_f984 = mul nuw nsw i32 %v5_f97c, 256
  %v5_f984 = or i32 %v4_f980, %v4_f984
  %v2_f988 = load i32, i32* %stack_var_-44, align 4
  %v2_f98c = add i32 %v5_f984, %v2_f988
  store i32 %v2_f98c, i32* %r3.global-to-local, align 4
  %v3_f9909 = udiv i32 %v2_f98c, 256
  %v1_f994 = trunc i32 %v3_f9909 to i8
  %v2_f994 = load i32, i32* %r1.global-to-local, align 4
  %v3_f994 = add i32 %v2_f994, 11
  %v4_f994 = inttoptr i32 %v3_f994 to i8*
  store i8 %v1_f994, i8* %v4_f994, align 1
  %v0_f998 = load i32, i32* %r3.global-to-local, align 4
  %v1_f998 = trunc i32 %v0_f998 to i8
  %v2_f998 = load i32, i32* %r1.global-to-local, align 4
  %v3_f998 = add i32 %v2_f998, 10
  %v4_f998 = inttoptr i32 %v3_f998 to i8*
  store i8 %v1_f998, i8* %v4_f998, align 1
  %v4_f99c = load i8, i8* @global_var_1bd21.191, align 1
  %v5_f99c = zext i8 %v4_f99c to i32
  %v3_f9a0 = load i8, i8* bitcast (i8** @global_var_1bd20.190 to i8*), align 4
  %v4_f9a0 = zext i8 %v3_f9a0 to i32
  %v4_f9a4 = mul nuw nsw i32 %v5_f99c, 256
  %v5_f9a4 = or i32 %v4_f9a0, %v4_f9a4
  %v2_f9a8 = load i32, i32* %stack_var_-44, align 4
  %v2_f9ac = add i32 %v5_f9a4, %v2_f9a8
  store i32 %v2_f9ac, i32* %r2.global-to-local, align 4
  %v0_f9b0 = load i32, i32* %r7.global-to-local, align 4
  %v3_f9b0 = mul i32 %v0_f9b0, 16
  %v1_f9b4 = load i32, i32* %sl.global-to-local, align 4
  %v2_f9b4 = add i32 %v1_f9b4, %v3_f9b0
  store i32 %v2_f9b4, i32* %r3.global-to-local, align 4
  %v0_f9b8 = load i32, i32* %lr.global-to-local, align 4
  %v1_f9b8 = add i32 %v0_f9b8, 1
  store i32 %v1_f9b8, i32* %lr.global-to-local, align 4
  %v3_f9bc = sdiv i32 %v2_f9ac, 256
  store i32 %v3_f9bc, i32* %r1.global-to-local, align 4
  %v0_f9c0 = load i32, i32* %r6.global-to-local, align 4
  %v2_f9c0 = add i32 %v2_f9b4, 4
  %v3_f9c0 = inttoptr i32 %v2_f9c0 to i32*
  store i32 %v0_f9c0, i32* %v3_f9c0, align 4
  %v0_f9c4 = load i32, i32* %lr.global-to-local, align 4
  %v1_f9c4 = load i32, i32* %r8.global-to-local, align 4
  %v2_f9c4 = inttoptr i32 %v1_f9c4 to i32*
  store i32 %v0_f9c4, i32* %v2_f9c4, align 4
  %v0_f9c8 = load i32, i32* %r1.global-to-local, align 4
  %v1_f9c8 = trunc i32 %v0_f9c8 to i8
  store i8 %v1_f9c8, i8* @global_var_1bd21.191, align 1
  %v0_f9cc = load i32, i32* %r2.global-to-local, align 4
  %v1_f9cc = trunc i32 %v0_f9cc to i8
  store i8 %v1_f9cc, i8* bitcast (i8** @global_var_1bd20.190 to i8*), align 4
  ret i32 ptrtoint (i8** @global_var_1bd20.190 to i32)

; uselistorder directives
  uselistorder i32 %v1_f930, { 0, 2, 3, 1 }
  uselistorder i32 %v3_f904, { 1, 0 }
  uselistorder i32 %v2_f8f8, { 1, 0, 2 }
  uselistorder i32 %v1_f8c4, { 0, 2, 3, 1 }
  uselistorder i32 %v3_f898, { 1, 0 }
  uselistorder i32 %v2_f88c, { 1, 0, 2 }
  uselistorder i32 %v3_f85c, { 1, 0 }
  uselistorder i32 %v3_f854, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32 (i8*)* @function_12fec, { 0, 1, 19, 2, 3, 4, 5, 6, 7, 8, 21, 22, 23, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20 }
  uselistorder i32* (i32*, i32)* @realloc, { 0, 1, 2, 8, 7, 3, 11, 4, 6, 10, 5, 9, 12 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
}

define i32 @function_f9e4(i32 %arg1) local_unnamed_addr {
dec_label_pc_f9e4:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp1290 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-38 = alloca i32, align 4
  %stack_var_-73 = alloca i32, align 4
  %stack_var_-41 = alloca i32, align 4
  %stack_var_-56 = alloca i8, align 1
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-220 = alloca i32, align 4
  %stack_var_-348 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-1862 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_f9e4 = load i32, i32* @r4, align 4
  store i32 %v3_f9e4, i32* %stack_var_-36, align 4
  %v6_f9e4 = load i32, i32* @r5, align 4
  %v24_f9e4 = load i32, i32* @fp, align 4
  %v0_f9f0 = call i32 @fork()
  store i32 %v0_f9f0, i32* %r0.global-to-local, align 4
  %v2_f9f4 = icmp eq i32 %v0_f9f0, -1
  %. = zext i1 %v2_f9f4 to i32
  %tmp1322 = icmp slt i32 %v0_f9f0, 1
  %storemerge1238 = select i1 %tmp1322, i32 %., i32 1
  store i32 %storemerge1238, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_1bd4c.193 to i32), i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fa10 = icmp eq i32 %storemerge1238, 0
  store i1 %v2_fa10, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_f9f0, i32* @global_var_1bd4c.193, align 4
  br i1 %v2_fa10, label %dec_label_pc_faa4, label %dec_label_pc_fa1c

dec_label_pc_fa1c:                                ; preds = %dec_label_pc_f9e4
  store i32 %v3_f9e4, i32* %r4.global-to-local, align 4
  store i32 %v6_f9e4, i32* %r5.global-to-local, align 4
  store i32 %v24_f9e4, i32* %fp.global-to-local, align 4
  ret i32 %v0_f9f0

dec_label_pc_faa4:                                ; preds = %dec_label_pc_f9e4
  %v0_faa4 = call i32 @function_132a4()
  store i32 %v0_faa4, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1bd28.110 to i32), i32* %r1.global-to-local, align 4
  store i32 %v0_faa4, i32* @global_var_1bd28.110, align 4
  %v1_fab0 = call i32 @function_f560(i32 %v0_faa4)
  %v0_fab4 = load i32, i32* @r4, align 4
  store i32 %v0_fab4, i32* %r0.global-to-local, align 4
  %v1_fab8 = inttoptr i32 %v0_fab4 to i32*
  %v2_fab8 = call i32 @time(i32* %v1_fab8)
  store i32 ptrtoint (i32* @global_var_1bd24.184 to i32), i32* %r2.global-to-local, align 4
  store i32 288, i32* %r1.global-to-local, align 4
  store i32 %v2_fab8, i32* @global_var_1bd24.184, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  %v2_facc = call i32* @calloc(i32 256, i32 288)
  %v4_facc = ptrtoint i32* %v2_facc to i32
  store i32 ptrtoint (i32* @global_var_1bd44.197 to i32), i32* %fp.global-to-local, align 4
  store i32 %v4_facc, i32* %lr.global-to-local, align 4
  %v0_fad8 = load i32, i32* @r4, align 4
  store i32 %v0_fad8, i32* %stack_var_-52, align 4
  store i32 %v4_facc, i32* @global_var_1bd44.197, align 4
  store i32 %v0_fad8, i32* %r3.global-to-local, align 4
  store i32 %v0_fad8, i32* %r5.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 %v0_fad8, i32* %ip.global-to-local, align 4
  %v1_faf0 = add i32 %v4_facc, 4
  store i32 %v1_faf0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_faf4

dec_label_pc_faf4:                                ; preds = %dec_label_pc_faf4.dec_label_pc_faf4_crit_edge, %dec_label_pc_faa4
  %v0_fb0c = phi i32 [ %v0_fb0c.pre, %dec_label_pc_faf4.dec_label_pc_faf4_crit_edge ], [ %v0_fad8, %dec_label_pc_faa4 ]
  %v0_fafc = phi i32 [ %v0_fb14, %dec_label_pc_faf4.dec_label_pc_faf4_crit_edge ], [ %v0_fad8, %dec_label_pc_faa4 ]
  %v1_fb04 = phi i32 [ %v1_fb04.pre, %dec_label_pc_faf4.dec_label_pc_faf4_crit_edge ], [ %v4_facc, %dec_label_pc_faa4 ]
  %v3_faf4 = mul i32 %v0_fafc, 256
  store i32 %v3_faf4, i32* %r2.global-to-local, align 4
  %v1_fafc = add i32 %v0_fafc, 1
  store i32 %v1_fafc, i32* %ip.global-to-local, align 4
  %v2_fb00 = mul i32 %v0_fafc, 288
  %v2_fb04 = add i32 %v1_fb04, 12
  %v2_fb0c = add i32 %v2_fb04, %v2_fb00
  %v3_fb0c = inttoptr i32 %v2_fb0c to i32*
  store i32 %v0_fb0c, i32* %v3_fb0c, align 4
  %v0_fb10 = load i32, i32* %r0.global-to-local, align 4
  %v1_fb10 = load i32, i32* %r1.global-to-local, align 4
  %v2_fb10 = inttoptr i32 %v1_fb10 to i32*
  store i32 %v0_fb10, i32* %v2_fb10, align 4
  %v3_fb10 = load i32, i32* %r1.global-to-local, align 4
  %v4_fb10 = add i32 %v3_fb10, 288
  store i32 %v4_fb10, i32* %r1.global-to-local, align 4
  %v0_fb14 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_fb14, i32* %r3.global-to-local, align 4
  %v7_fb18 = icmp sgt i32 %v1_fafc, 255
  br i1 %v7_fb18, label %dec_label_pc_fb1c, label %dec_label_pc_faf4.dec_label_pc_faf4_crit_edge

dec_label_pc_faf4.dec_label_pc_faf4_crit_edge:    ; preds = %dec_label_pc_faf4
  %v1_fb04.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_fb0c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_faf4

dec_label_pc_fb1c:                                ; preds = %dec_label_pc_faf4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 %v0_fb14, i32* %stack_var_-52, align 4
  %v3_fb2c = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_fb2c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1bd48.199 to i32), i32* %ip.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 %v3_fb2c, i32* @global_var_1bd48.199, align 4
  %v0_fb3c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_fb3c, i32* %r2.global-to-local, align 4
  store i32 %v3_fb2c, i32* %r4.global-to-local, align 4
  %v2_fb44 = call i32 (i32, i32, ...) @fcntl(i32 %v3_fb2c, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_fb4c = or i32 %v2_fb44, 2048
  store i32 %v1_fb4c, i32* %r2.global-to-local, align 4
  %v0_fb50 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_fb50, i32* %r0.global-to-local, align 4
  %v2_fb54 = call i32 (i32, i32, ...) @fcntl(i32 %v0_fb50, i32 4)
  store i32 ptrtoint (i32* @global_var_1bd48.199 to i32), i32* %lr.global-to-local, align 4
  %v2_fb60 = load i32, i32* @global_var_1bd48.199, align 4
  store i32 %v2_fb60, i32* %r0.global-to-local, align 4
  store i32 1, i32* %ip.global-to-local, align 4
  %v0_fb68 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_fb68, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v2_fb70 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_fb70, i32* %r3.global-to-local, align 4
  store i32 4, i32* %r4.global-to-local, align 4
  store i32 1, i32* %stack_var_-52, align 4
  %v7_fb80 = call i32 @setsockopt(i32 %v2_fb60, i32 %v0_fb68, i32 3, i32* nonnull %stack_var_-52, i32 4)
  store i32 %v7_fb80, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fb84 = icmp eq i32 %v7_fb80, 0
  store i1 %v2_fb84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fb84, label %dec_label_pc_fb8c, label %dec_label_pc_119d8

dec_label_pc_fb8c:                                ; preds = %dec_label_pc_fb1c, %dec_label_pc_119d8, %dec_label_pc_fb8c
  %v0_fb8c = call i32 @function_f508()
  %v3_fb90 = mul i32 %v0_fb8c, 65536
  store i32 %v3_fb90, i32* %r0.global-to-local, align 4
  %v3_fb94 = urem i32 %v0_fb8c, 65536
  store i32 %v3_fb94, i32* %r2.global-to-local, align 4
  %v1_fb98 = mul i32 %v0_fb8c, 256
  %v3_fb9c = and i32 %v1_fb98, 65280
  %tmp1325 = udiv i32 %v0_fb8c, 256
  %v4_fba0 = urem i32 %tmp1325, 256
  %v5_fba0 = or i32 %v4_fba0, %v3_fb9c
  store i32 %v5_fba0, i32* %r3.global-to-local, align 4
  %v2_fba4 = icmp ugt i32 %v5_fba0, 1023
  store i1 %v2_fba4, i1* %cpsr_c.global-to-local, align 1
  %v7_fba4 = icmp eq i32 %v5_fba0, 1024
  store i1 %v7_fba4, i1* %cpsr_z.global-to-local, align 1
  %v3_fbac = icmp ult i32 %v5_fba0, 1022
  br i1 %v3_fbac, label %dec_label_pc_fb8c, label %dec_label_pc_fbb0

dec_label_pc_fbb0:                                ; preds = %dec_label_pc_fb8c
  store i32 ptrtoint (i32* @global_var_1bcf4.201 to i32), i32* %r4.global-to-local, align 4
  store i32 69, i32* %r2.global-to-local, align 4
  store i32 40, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i8 69, i8* bitcast (i32* @global_var_1bcf4.201 to i8*), align 4
  store i8 40, i8* bitcast (i32* @global_var_1bcf7.202 to i8*), align 4
  store i8 0, i8* bitcast (i32* @global_var_1bcf6.203 to i8*), align 4
  %v0_fbe4 = call i32 @function_f508()
  %v1_fbe4 = trunc i32 %v0_fbe4 to i8
  store i32 %v0_fbe4, i32* %r0.global-to-local, align 4
  %v3_fbec = load i8, i8* @global_var_1bd14.206, align 1
  %sext696 = mul i32 %v0_fb8c, 16777216
  %v4_fbf0 = sdiv i32 %sext696, 16777216
  store i32 %v4_fbf0, i32* %lr.global-to-local, align 4
  %v4_fbf41159 = udiv i32 %v0_fbe4, 256
  %tmp = urem i8 %v3_fbec, 16
  %v1_fbfc = zext i8 %tmp to i32
  %v1_fc00 = and i32 %v4_fbf0, 128
  %v2_fc00 = icmp ne i32 %v1_fc00, 0
  store i1 %v2_fc00, i1* %cpsr_c.global-to-local, align 1
  %v3_fc00 = ashr i32 %sext696, 31
  store i32 %v3_fc00, i32* %ip.global-to-local, align 4
  %v1_fc04 = trunc i32 %v4_fbf41159 to i8
  store i8 %v1_fc04, i8* bitcast (i32* @global_var_1bcf9.207 to i8*), align 4
  store i8 64, i8* bitcast (i32* @global_var_1bcfc.208 to i8*), align 4
  %v1_fc0c = or i32 %v1_fbfc, 80
  store i32 %v1_fc0c, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 23, i32* %r3.global-to-local, align 4
  store i8 6, i8* bitcast (i32* @global_var_1bcfd.209 to i8*), align 4
  %v1_fc1c = trunc i32 %v3_fc00 to i8
  store i8 %v1_fc1c, i8* bitcast (i32* @global_var_1bd09.210 to i8*), align 4
  %v1_fc20 = trunc i32 %v1_fc0c to i8
  store i8 %v1_fc20, i8* @global_var_1bd14.206, align 1
  store i8 23, i8* bitcast (i32* @global_var_1bd0b.211 to i8*), align 4
  %v1_fc28 = trunc i32 %v4_fbf0 to i8
  store i8 %v1_fc28, i8* bitcast (i32* @global_var_1bd08.205 to i8*), align 4
  store i8 %v1_fbe4, i8* bitcast (i32* @global_var_1bcf8.212 to i8*), align 4
  %v0_fc30 = load i32, i32* @r5, align 4
  %v1_fc30 = trunc i32 %v0_fc30 to i8
  store i8 %v1_fc30, i8* bitcast (i32* @global_var_1bd0a.213 to i8*), align 4
  %v0_fc34 = call i32 @function_f508()
  %v3_fc38 = load i8, i8* @global_var_1bd15.214, align 1
  %v4_fc38 = zext i8 %v3_fc38 to i32
  %sext697 = mul i32 %v0_fc34, 16777216
  %v1_fc3c = sdiv i32 %sext697, 16777216
  %v2_fc3c = and i32 %v1_fc3c, 128
  %v3_fc3c = icmp ne i32 %v2_fc3c, 0
  store i1 %v3_fc3c, i1* %cpsr_c.global-to-local, align 1
  %v4_fc3c = ashr i32 %sext697, 31
  store i32 %v4_fc3c, i32* %ip.global-to-local, align 4
  %v1_fc40 = or i32 %v4_fc38, 2
  store i32 %v1_fc40, i32* %r3.global-to-local, align 4
  %v1_fc48 = trunc i32 %v4_fc3c to i8
  store i8 %v1_fc48, i8* bitcast (i32* @global_var_1bd17.215 to i8*), align 4
  %v1_fc4c = trunc i32 %v1_fc40 to i8
  store i8 %v1_fc4c, i8* @global_var_1bd15.214, align 1
  store i32 ptrtoint ([6 x i8]* @global_var_1393c.217 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_13944.219 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v1_fc5c = trunc i32 %v1_fc3c to i8
  store i8 %v1_fc5c, i8* bitcast (i32* @global_var_1bd16.220 to i8*), align 4
  %v5_fc60 = call i32 @function_f840(i32 ptrtoint ([6 x i8]* @global_var_1393c.217 to i32), i32 ptrtoint ([5 x i8]* @global_var_13944.219 to i32), i32 9)
  store i32 ptrtoint ([6 x i8]* @global_var_1393c.217 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1394c.222 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v5_fc70 = call i32 @function_f840(i32 ptrtoint ([6 x i8]* @global_var_1393c.217 to i32), i32 ptrtoint ([6 x i8]* @global_var_1394c.222 to i32), i32 10)
  store i32 ptrtoint ([6 x i8]* @global_var_1393c.217 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_13954.224 to i32), i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  %v5_fc80 = call i32 @function_f840(i32 ptrtoint ([6 x i8]* @global_var_1393c.217 to i32), i32 ptrtoint ([7 x i8]* @global_var_13954.224 to i32), i32 11)
  store i32 ptrtoint ([6 x i8]* @global_var_1393c.217 to i32), i32* %r0.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1393c.217 to i32), i32* %r1.global-to-local, align 4
  %v5_fc90 = call i32 @function_f840(i32 ptrtoint ([6 x i8]* @global_var_1393c.217 to i32), i32 ptrtoint ([6 x i8]* @global_var_1393c.217 to i32), i32 10)
  store i32 ptrtoint ([6 x i8]* @global_var_1393c.217 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_138d0.226 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_fca0 = call i32 @function_f840(i32 ptrtoint ([6 x i8]* @global_var_1393c.217 to i32), i32 ptrtoint (i32* @global_var_138d0.226 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_1389c.228 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1389c.228 to i32), i32* %r1.global-to-local, align 4
  %v5_fcb0 = call i32 @function_f840(i32 ptrtoint ([5 x i8]* @global_var_1389c.228 to i32), i32 ptrtoint ([5 x i8]* @global_var_1389c.228 to i32), i32 8)
  store i32 ptrtoint ([5 x i8]* @global_var_1389c.228 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_13954.224 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v5_fcc0 = call i32 @function_f840(i32 ptrtoint ([5 x i8]* @global_var_1389c.228 to i32), i32 ptrtoint ([7 x i8]* @global_var_13954.224 to i32), i32 10)
  store i32 ptrtoint ([8 x i8]* @global_var_138a4.230 to i32), i32* %r0.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_138a4.230 to i32), i32* %r1.global-to-local, align 4
  %v5_fcd0 = call i32 @function_f840(i32 ptrtoint ([8 x i8]* @global_var_138a4.230 to i32), i32 ptrtoint ([8 x i8]* @global_var_138a4.230 to i32), i32 14)
  store i32 ptrtoint ([8 x i8]* @global_var_138a4.230 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_138ac.232 to i32), i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v4_fce0 = call i32 @function_f840(i32 ptrtoint ([8 x i8]* @global_var_138a4.230 to i32), i32 ptrtoint (i32* @global_var_138ac.232 to i32), i32 15)
  store i32 ptrtoint ([8 x i8]* @global_var_138a4.230 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_138b8.234 to i32), i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v4_fcf0 = call i32 @function_f840(i32 ptrtoint ([8 x i8]* @global_var_138a4.230 to i32), i32 ptrtoint (i32* @global_var_138b8.234 to i32), i32 15)
  store i32 ptrtoint ([8 x i8]* @global_var_138a4.230 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_138c4.236 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v5_fd00 = call i32 @function_f840(i32 ptrtoint ([8 x i8]* @global_var_138a4.230 to i32), i32 ptrtoint ([7 x i8]* @global_var_138c4.236 to i32), i32 13)
  store i32 ptrtoint ([8 x i8]* @global_var_138a4.230 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_138d0.226 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_fd10 = call i32 @function_f840(i32 ptrtoint ([8 x i8]* @global_var_138a4.230 to i32), i32 ptrtoint (i32* @global_var_138d0.226 to i32), i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_138cc.238 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_138d4.240 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_fd20 = call i32 @function_f840(i32 ptrtoint ([5 x i8]* @global_var_138cc.238 to i32), i32 ptrtoint ([6 x i8]* @global_var_138d4.240 to i32), i32 9)
  store i32 ptrtoint ([5 x i8]* @global_var_138cc.238 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_138dc.242 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_fd30 = call i32 @function_f840(i32 ptrtoint ([5 x i8]* @global_var_138cc.238 to i32), i32 ptrtoint ([6 x i8]* @global_var_138dc.242 to i32), i32 9)
  store i32 ptrtoint ([5 x i8]* @global_var_138cc.238 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_138e4.244 to i32), i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v5_fd40 = call i32 @function_f840(i32 ptrtoint ([5 x i8]* @global_var_138cc.238 to i32), i32 ptrtoint ([9 x i8]* @global_var_138e4.244 to i32), i32 12)
  store i32 ptrtoint ([5 x i8]* @global_var_138cc.238 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_138f0.246 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_fd50 = call i32 @function_f840(i32 ptrtoint ([5 x i8]* @global_var_138cc.238 to i32), i32 ptrtoint ([5 x i8]* @global_var_138f0.246 to i32), i32 8)
  store i32 ptrtoint ([5 x i8]* @global_var_138cc.238 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_138f8.248 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_fd60 = call i32 @function_f840(i32 ptrtoint ([5 x i8]* @global_var_138cc.238 to i32), i32 ptrtoint ([4 x i8]* @global_var_138f8.248 to i32), i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_138cc.238 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_138cc.238 to i32), i32* %r1.global-to-local, align 4
  %v5_fd70 = call i32 @function_f840(i32 ptrtoint ([5 x i8]* @global_var_138cc.238 to i32), i32 ptrtoint ([5 x i8]* @global_var_138cc.238 to i32), i32 8)
  store i32 ptrtoint ([5 x i8]* @global_var_138cc.238 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_138fc.250 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v5_fd80 = call i32 @function_f840(i32 ptrtoint ([5 x i8]* @global_var_138cc.238 to i32), i32 ptrtoint ([7 x i8]* @global_var_138fc.250 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_138cc.238 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_138d0.226 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_fd90 = call i32 @function_f840(i32 ptrtoint ([5 x i8]* @global_var_138cc.238 to i32), i32 ptrtoint (i32* @global_var_138d0.226 to i32), i32 4)
  store i32 ptrtoint ([8 x i8]* @global_var_13904.252 to i32), i32* %r0.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_13904.252 to i32), i32* %r1.global-to-local, align 4
  %v5_fda0 = call i32 @function_f840(i32 ptrtoint ([8 x i8]* @global_var_13904.252 to i32), i32 ptrtoint ([8 x i8]* @global_var_13904.252 to i32), i32 14)
  store i32 ptrtoint ([7 x i8]* @global_var_1390c.254 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_13914.256 to i32), i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v5_fdb0 = call i32 @function_f840(i32 ptrtoint ([7 x i8]* @global_var_1390c.254 to i32), i32 ptrtoint ([7 x i8]* @global_var_13914.256 to i32), i32 12)
  store i32 ptrtoint ([6 x i8]* @global_var_1391c.258 to i32), i32* %r0.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1391c.258 to i32), i32* %r1.global-to-local, align 4
  %v5_fdc0 = call i32 @function_f840(i32 ptrtoint ([6 x i8]* @global_var_1391c.258 to i32), i32 ptrtoint ([6 x i8]* @global_var_1391c.258 to i32), i32 10)
  store i32 ptrtoint ([6 x i8]* @global_var_1391c.258 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_13924.260 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_fdd0 = call i32 @function_f840(i32 ptrtoint ([6 x i8]* @global_var_1391c.258 to i32), i32 ptrtoint ([7 x i8]* @global_var_13924.260 to i32), i32 9)
  store i32 ptrtoint ([6 x i8]* @global_var_1391c.258 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1392c.262 to i32), i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v5_fde0 = call i32 @function_f840(i32 ptrtoint ([6 x i8]* @global_var_1391c.258 to i32), i32 ptrtoint ([8 x i8]* @global_var_1392c.262 to i32), i32 12)
  store i32 ptrtoint ([4 x i8]* @global_var_13934.264 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_138d0.226 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v4_fdf0 = call i32 @function_f840(i32 ptrtoint ([4 x i8]* @global_var_13934.264 to i32), i32 ptrtoint (i32* @global_var_138d0.226 to i32), i32 3)
  %v2_fdf8 = ptrtoint i32* %stack_var_-1862 to i32
  store i32 %v2_fdf8, i32* %r0.global-to-local, align 4
  %v1_11858 = add i32 %v2_fdf8, 20
  %v1_118b0 = add i32 %v2_fdf8, 16
  %v2_118b0 = inttoptr i32 %v1_118b0 to i32*
  %v1_118c4 = add i32 %v2_fdf8, 9
  %v2_118c4 = inttoptr i32 %v1_118c4 to i8*
  %v2_11afc = ptrtoint i32* %stack_var_-36 to i32
  %v2_11b70 = ptrtoint i32* %stack_var_-76 to i32
  %v2_11b78 = ptrtoint i32* %stack_var_-348 to i32
  %tmp1326 = bitcast i32* %stack_var_-348 to %_TYPEDEF_fd_set*
  %v2_11b80 = ptrtoint i32* %stack_var_-220 to i32
  %tmp1327 = bitcast i32* %stack_var_-220 to %_TYPEDEF_fd_set*
  %v2_11b88 = ptrtoint i32* %stack_var_-64 to i32
  %tmp1329 = bitcast i32* %stack_var_-64 to %timeval*
  %v2_12544 = ptrtoint i32* %stack_var_-41 to i32
  %v2_12554 = ptrtoint i32* %stack_var_-73 to i32
  %v2_11d20 = ptrtoint i8* %stack_var_-56 to i32
  %v2_11d28 = bitcast i8* %stack_var_-56 to i32*
  %v2_121f0 = ptrtoint i32* %stack_var_-48 to i32
  %v2_12800 = ptrtoint i32* %stack_var_-92 to i32
  %tmp1330 = bitcast i32* %stack_var_-92 to %sockaddr*
  %v2_12854 = ptrtoint i32* %stack_var_-38 to i32
  %v1_1195c = add i32 %v2_fdf8, 12
  %v2_1195c = inttoptr i32 %v1_1195c to i32*
  br label %dec_label_pc_fe00

dec_label_pc_fe00:                                ; preds = %dec_label_pc_11be4, %dec_label_pc_fbb0
  %stack_var_-2036.0 = phi i32 [ %tmp1290, %dec_label_pc_fbb0 ], [ %stack_var_-2036.1, %dec_label_pc_11be4 ]
  store i32 %stack_var_-2036.0, i32* %r2.global-to-local, align 4
  %v2_fe08 = load i32, i32* @global_var_1bd24.184, align 4
  store i32 %v2_fe08, i32* %r1.global-to-local, align 4
  %v3_fe0c = icmp uge i32 %stack_var_-2036.0, %v2_fe08
  store i1 %v3_fe0c, i1* %cpsr_c.global-to-local, align 1
  %v9_fe0c = icmp eq i32 %stack_var_-2036.0, %v2_fe08
  store i1 %v9_fe0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_fe0c, label %dec_label_pc_1184c, label %dec_label_pc_fe18

dec_label_pc_fe18:                                ; preds = %dec_label_pc_fe00
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  br label %dec_label_pc_fe20

dec_label_pc_fe20:                                ; preds = %dec_label_pc_11748, %dec_label_pc_fe18
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %stack_var_-92, align 4
  %v0_fe34 = call i32 @function_f508()
  %v1_fe34 = trunc i32 %v0_fe34 to i8
  store i32 %v0_fe34, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1bd28.110 to i32), i32* %fp.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1bcf4.201 to i32), i32* %ip.global-to-local, align 4
  %v2_fe40 = load i32, i32* @global_var_1bd28.110, align 4
  store i32 %v2_fe40, i32* %r2.global-to-local, align 4
  %v2_fe44 = and i32 %v0_fe34, 128
  %v3_fe44 = icmp ne i32 %v2_fe44, 0
  store i1 %v3_fe44, i1* %cpsr_c.global-to-local, align 1
  %v4_fe44 = sdiv i32 %v0_fe34, 256
  store i32 %v4_fe44, i32* %r3.global-to-local, align 4
  %v1_fe48 = trunc i32 %v4_fe44 to i8
  store i8 %v1_fe48, i8* bitcast (i32* @global_var_1bcf9.207 to i8*), align 4
  store i32 %v2_fe40, i32* @global_var_1bd00.265, align 4
  store i8 %v1_fe34, i8* bitcast (i32* @global_var_1bcf8.212 to i8*), align 4
  br label %dec_label_pc_fe54

dec_label_pc_fe54:                                ; preds = %bb1667, %bb1650, %bb1623, %bb1604, %bb1585, %.thread651.thread, %dec_label_pc_fee8, %dec_label_pc_fedc, %dec_label_pc_fed0, %dec_label_pc_fec4, %dec_label_pc_feb8, %dec_label_pc_feac, %dec_label_pc_fea0, %dec_label_pc_fe94, %dec_label_pc_fe88, %dec_label_pc_fe7c, %bb1883, %dec_label_pc_1171c, %dec_label_pc_116e8, %dec_label_pc_116a4, %bb1855, %dec_label_pc_115a0, %.thread599, %dec_label_pc_1152c, %dec_label_pc_114f0, %bb1823, %bb1816, %bb1811, %bb1806, %bb1800, %bb1795, %bb1789, %bb1784, %bb1779, %bb1774, %bb1769, %bb1764, %bb1759, %bb1754, %bb1749, %.thread471, %dec_label_pc_1111c, %.thread465, %dec_label_pc_110d8, %.thread459, %dec_label_pc_110ac, %.thread455, %dec_label_pc_11084, %dec_label_pc_11074, %.thread450, %.thread446, %.thread442, %.thread438, %bb1737, %bb1730, %bb1725, %bb1717, %bb1711, %bb1704, %bb1699, %bb1694, %bb1689, %bb1684, %bb1679, %.thread365, %bb1671, %bb1664, %bb1658, %bb1647, %bb1643, %bb1635, %bb1628, %bb1620, %bb1616, %bb1612, %bb1597, %bb1592, %bb1587, %bb1581, %bb1574, %dec_label_pc_109f4, %dec_label_pc_109e4, %.thread245, %dec_label_pc_109a4, %.thread239, %.thread235, %dec_label_pc_1094c, %dec_label_pc_10930, %.thread228, %.thread224, %.thread220, %dec_label_pc_10620, %dec_label_pc_103f0, %dec_label_pc_10330, %.thread116, %dec_label_pc_1024c, %dec_label_pc_10228, %.thread93, %dec_label_pc_101a8, %dec_label_pc_10184, %.thread77, %.thread73, %dec_label_pc_10108, %dec_label_pc_100c4, %.thread62, %dec_label_pc_10078, %dec_label_pc_10060, %dec_label_pc_1002c, %.thread50, %.thread46, %.thread42, %dec_label_pc_ffdc, %.thread37, %.thread33, %dec_label_pc_ff54, %dec_label_pc_ff40, %dec_label_pc_ff2c, %dec_label_pc_11740, %dec_label_pc_11714, %bb1877, %bb1876, %dec_label_pc_116c8, %dec_label_pc_11680, %dec_label_pc_1165c, %dec_label_pc_1163c, %dec_label_pc_11618, %bb1850, %dec_label_pc_11570, %dec_label_pc_11554, %dec_label_pc_11510, %dec_label_pc_114d4, %dec_label_pc_114b4, %dec_label_pc_11490, %bb1817, %bb1790, %bb1765, %bb1745, %bb1744, %bb1739, %bb1738, %bb1705, %bb1674, %bb1560, %dec_label_pc_108c8, %dec_label_pc_108a4, %dec_label_pc_10884, %dec_label_pc_10864, %dec_label_pc_10834, %dec_label_pc_10814, %dec_label_pc_107f4, %dec_label_pc_107dc, %dec_label_pc_107b4, %dec_label_pc_1079c, %dec_label_pc_1077c, %dec_label_pc_10758, %dec_label_pc_10730, %dec_label_pc_10714, %dec_label_pc_106f4, %dec_label_pc_106d4, %dec_label_pc_106b4, %dec_label_pc_10694, %dec_label_pc_10680, %dec_label_pc_1065c, %dec_label_pc_1063c, %dec_label_pc_10604, %dec_label_pc_105e8, %dec_label_pc_105cc, %dec_label_pc_105ac, %dec_label_pc_10598, %dec_label_pc_1057c, %dec_label_pc_10558, %dec_label_pc_1052c, %dec_label_pc_10500, %dec_label_pc_104d4, %dec_label_pc_104a4, %dec_label_pc_10480, %dec_label_pc_10458, %dec_label_pc_1043c, %dec_label_pc_10414, %dec_label_pc_103cc, %dec_label_pc_103a0, %dec_label_pc_10380, %dec_label_pc_10328, %dec_label_pc_102f8, %bb1422, %bb1419, %bb1416, %bb1407, %bb1404, %bb1401, %bb1392, %bb1389, %bb1388, %bb1385, %bb1378, %bb1371, %bb1364, %bb1361, %bb1358, %bb1349, %bb1346, %dec_label_pc_fef4, %bb1343, %bb1342, %bb1341, %bb1340, %bb1339, %bb1338, %bb1337, %bb1336, %bb1335, %bb1334, %bb1333, %bb1598, %dec_label_pc_fe20
  %v0_fe54 = call i32 @function_f508()
  store i32 %v0_fe54, i32* %r0.global-to-local, align 4
  %v1_fe58 = urem i32 %v0_fe54, 256
  store i32 %v1_fe58, i32* %r1.global-to-local, align 4
  %v3_fe5c = udiv i32 %v0_fe54, 256
  store i32 %v3_fe5c, i32* %r3.global-to-local, align 4
  %v3_fe60 = udiv i32 %v0_fe54, 65536
  store i32 %v3_fe60, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fe64 = icmp eq i32 %v1_fe58, 0
  store i1 %v2_fe64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fe64, label %bb1333, label %bb1332

bb1332:                                           ; preds = %dec_label_pc_fe54
  %v3_fe68 = icmp ugt i32 %v1_fe58, 126
  store i1 %v3_fe68, i1* %cpsr_c.global-to-local, align 1
  %v8_fe68 = icmp eq i32 %v1_fe58, 127
  store i1 %v8_fe68, i1* %cpsr_z.global-to-local, align 1
  br label %bb1333

bb1333:                                           ; preds = %dec_label_pc_fe54, %bb1332
  %v0_fe78 = phi i1 [ true, %dec_label_pc_fe54 ], [ %v8_fe68, %bb1332 ]
  %v1_fe6c = urem i32 %v3_fe5c, 256
  store i32 %v1_fe6c, i32* %ip.global-to-local, align 4
  %v1_fe70 = urem i32 %v3_fe60, 256
  store i32 %v1_fe70, i32* %r2.global-to-local, align 4
  %v1_fe74 = and i32 %v0_fe54, 8388608
  %v2_fe74 = icmp ne i32 %v1_fe74, 0
  store i1 %v2_fe74, i1* %cpsr_c.global-to-local, align 1
  %v3_fe74 = udiv i32 %v0_fe54, 16777216
  store i32 %v3_fe74, i32* %r0.global-to-local, align 4
  br i1 %v0_fe78, label %dec_label_pc_fe54, label %dec_label_pc_fe7c

dec_label_pc_fe7c:                                ; preds = %bb1333
  %v2_fe7c = icmp ugt i32 %v1_fe58, 14
  store i1 %v2_fe7c, i1* %cpsr_c.global-to-local, align 1
  %v7_fe7c = icmp eq i32 %v1_fe58, 15
  store i1 %v7_fe7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fe7c, label %dec_label_pc_fe54, label %bb1334

bb1334:                                           ; preds = %dec_label_pc_fe7c
  %v3_fe80 = icmp ugt i32 %v1_fe58, 2
  store i1 %v3_fe80, i1* %cpsr_c.global-to-local, align 1
  %v8_fe80 = icmp eq i32 %v1_fe58, 3
  store i1 %v8_fe80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fe80, label %dec_label_pc_fe54, label %dec_label_pc_fe88

dec_label_pc_fe88:                                ; preds = %bb1334
  %v2_fe88 = icmp ugt i32 %v1_fe58, 9
  store i1 %v2_fe88, i1* %cpsr_c.global-to-local, align 1
  %v7_fe88 = icmp eq i32 %v1_fe58, 10
  store i1 %v7_fe88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fe88, label %dec_label_pc_fe54, label %bb1335

bb1335:                                           ; preds = %dec_label_pc_fe88
  %v3_fe8c = icmp ugt i32 %v1_fe58, 55
  store i1 %v3_fe8c, i1* %cpsr_c.global-to-local, align 1
  %v8_fe8c = icmp eq i32 %v1_fe58, 56
  store i1 %v8_fe8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fe8c, label %dec_label_pc_fe54, label %dec_label_pc_fe94

dec_label_pc_fe94:                                ; preds = %bb1335
  %v2_fe94 = icmp ugt i32 %v1_fe58, 48
  store i1 %v2_fe94, i1* %cpsr_c.global-to-local, align 1
  %v7_fe94 = icmp eq i32 %v1_fe58, 49
  store i1 %v7_fe94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fe94, label %dec_label_pc_fe54, label %bb1336

bb1336:                                           ; preds = %dec_label_pc_fe94
  %v3_fe98 = icmp ugt i32 %v1_fe58, 24
  store i1 %v3_fe98, i1* %cpsr_c.global-to-local, align 1
  %v8_fe98 = icmp eq i32 %v1_fe58, 25
  store i1 %v8_fe98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fe98, label %dec_label_pc_fe54, label %dec_label_pc_fea0

dec_label_pc_fea0:                                ; preds = %bb1336
  %v2_fea0 = icmp ugt i32 %v1_fe58, 136
  store i1 %v2_fea0, i1* %cpsr_c.global-to-local, align 1
  %v7_fea0 = icmp eq i32 %v1_fe58, 137
  store i1 %v7_fea0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fea0, label %dec_label_pc_fe54, label %bb1337

bb1337:                                           ; preds = %dec_label_pc_fea0
  %v3_fea4 = icmp ugt i32 %v1_fe58, 49
  store i1 %v3_fea4, i1* %cpsr_c.global-to-local, align 1
  %v8_fea4 = icmp eq i32 %v1_fe58, 50
  store i1 %v8_fea4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fea4, label %dec_label_pc_fe54, label %dec_label_pc_feac

dec_label_pc_feac:                                ; preds = %bb1337
  %v2_feac = icmp ugt i32 %v1_fe58, 6
  store i1 %v2_feac, i1* %cpsr_c.global-to-local, align 1
  %v7_feac = icmp eq i32 %v1_fe58, 7
  store i1 %v7_feac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_feac, label %dec_label_pc_fe54, label %bb1338

bb1338:                                           ; preds = %dec_label_pc_feac
  %v3_feb0 = icmp ugt i32 %v1_fe58, 5
  store i1 %v3_feb0, i1* %cpsr_c.global-to-local, align 1
  %v8_feb0 = icmp eq i32 %v1_fe58, 6
  store i1 %v8_feb0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_feb0, label %dec_label_pc_fe54, label %dec_label_pc_feb8

dec_label_pc_feb8:                                ; preds = %bb1338
  %v2_feb8 = icmp ugt i32 %v1_fe58, 20
  store i1 %v2_feb8, i1* %cpsr_c.global-to-local, align 1
  %v7_feb8 = icmp eq i32 %v1_fe58, 21
  store i1 %v7_feb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_feb8, label %dec_label_pc_fe54, label %bb1339

bb1339:                                           ; preds = %dec_label_pc_feb8
  %v3_febc = icmp ugt i32 %v1_fe58, 10
  store i1 %v3_febc, i1* %cpsr_c.global-to-local, align 1
  %v8_febc = icmp eq i32 %v1_fe58, 11
  store i1 %v8_febc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_febc, label %dec_label_pc_fe54, label %dec_label_pc_fec4

dec_label_pc_fec4:                                ; preds = %bb1339
  %v2_fec4 = icmp ugt i32 %v1_fe58, 25
  store i1 %v2_fec4, i1* %cpsr_c.global-to-local, align 1
  %v7_fec4 = icmp eq i32 %v1_fe58, 26
  store i1 %v7_fec4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fec4, label %dec_label_pc_fe54, label %bb1340

bb1340:                                           ; preds = %dec_label_pc_fec4
  %v3_fec8 = icmp ugt i32 %v1_fe58, 21
  store i1 %v3_fec8, i1* %cpsr_c.global-to-local, align 1
  %v8_fec8 = icmp eq i32 %v1_fe58, 22
  store i1 %v8_fec8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fec8, label %dec_label_pc_fe54, label %dec_label_pc_fed0

dec_label_pc_fed0:                                ; preds = %bb1340
  %v2_fed0 = icmp ugt i32 %v1_fe58, 28
  store i1 %v2_fed0, i1* %cpsr_c.global-to-local, align 1
  %v7_fed0 = icmp eq i32 %v1_fe58, 29
  store i1 %v7_fed0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fed0, label %dec_label_pc_fe54, label %bb1341

bb1341:                                           ; preds = %dec_label_pc_fed0
  %v3_fed4 = icmp ugt i32 %v1_fe58, 27
  store i1 %v3_fed4, i1* %cpsr_c.global-to-local, align 1
  %v8_fed4 = icmp eq i32 %v1_fe58, 28
  store i1 %v8_fed4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fed4, label %dec_label_pc_fe54, label %dec_label_pc_fedc

dec_label_pc_fedc:                                ; preds = %bb1341
  %v2_fedc = icmp ugt i32 %v1_fe58, 32
  store i1 %v2_fedc, i1* %cpsr_c.global-to-local, align 1
  %v7_fedc = icmp eq i32 %v1_fe58, 33
  store i1 %v7_fedc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fedc, label %dec_label_pc_fe54, label %bb1342

bb1342:                                           ; preds = %dec_label_pc_fedc
  %v3_fee0 = icmp ugt i32 %v1_fe58, 29
  store i1 %v3_fee0, i1* %cpsr_c.global-to-local, align 1
  %v8_fee0 = icmp eq i32 %v1_fe58, 30
  store i1 %v8_fee0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fee0, label %dec_label_pc_fe54, label %dec_label_pc_fee8

dec_label_pc_fee8:                                ; preds = %bb1342
  %v2_fee8 = icmp ugt i32 %v1_fe58, 213
  store i1 %v2_fee8, i1* %cpsr_c.global-to-local, align 1
  %v7_fee8 = icmp eq i32 %v1_fe58, 214
  store i1 %v7_fee8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fee8, label %dec_label_pc_fe54, label %bb1343

bb1343:                                           ; preds = %dec_label_pc_fee8
  %v3_feec = icmp ugt i32 %v1_fe58, 54
  store i1 %v3_feec, i1* %cpsr_c.global-to-local, align 1
  %v8_feec = icmp eq i32 %v1_fe58, 55
  store i1 %v8_feec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_feec, label %dec_label_pc_fe54, label %dec_label_pc_fef4

dec_label_pc_fef4:                                ; preds = %bb1343
  %v2_fef4 = icmp ugt i32 %v1_fe58, 214
  store i1 %v2_fef4, i1* %cpsr_c.global-to-local, align 1
  %v7_fef4 = icmp eq i32 %v1_fe58, 215
  store i1 %v7_fef4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fef4, label %dec_label_pc_fe54, label %dec_label_pc_fefc

dec_label_pc_fefc:                                ; preds = %dec_label_pc_fef4
  %v7_fefc = icmp eq i32 %v1_fe58, 192
  %.1940 = zext i1 %v7_fefc to i32
  store i32 %.1940, i32* %r5.global-to-local, align 4
  %v2_ff08 = icmp ugt i32 %v1_fe6c, 167
  store i1 %v2_ff08, i1* %cpsr_c.global-to-local, align 1
  %v7_ff08 = icmp eq i32 %v1_fe6c, 168
  store i1 %v7_ff08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ff08, label %bb1346, label %dec_label_pc_ff14

bb1346:                                           ; preds = %dec_label_pc_fefc
  %v2_fefc = icmp ugt i32 %v1_fe58, 191
  store i1 %v2_fefc, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_fefc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fefc, label %dec_label_pc_fe54, label %dec_label_pc_ff14

dec_label_pc_ff14:                                ; preds = %dec_label_pc_fefc, %bb1346
  %v7_ff14 = icmp eq i32 %v1_fe58, 146
  %.1941 = zext i1 %v7_ff14 to i32
  %v2_ff20 = icmp ugt i32 %v1_fe6c, 16
  store i1 %v2_ff20, i1* %cpsr_c.global-to-local, align 1
  %v7_ff20 = icmp eq i32 %v1_fe6c, 17
  store i1 %v7_ff20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ff20, label %bb1349, label %dec_label_pc_ff2c

bb1349:                                           ; preds = %dec_label_pc_ff14
  %v2_ff14 = icmp ugt i32 %v1_fe58, 145
  store i1 %v2_ff14, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ff14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ff14, label %dec_label_pc_fe54, label %dec_label_pc_ff2c

dec_label_pc_ff2c:                                ; preds = %dec_label_pc_ff14, %bb1349
  %v2_ff2c = icmp ugt i32 %v1_fe6c, 79
  store i1 %v2_ff2c, i1* %cpsr_c.global-to-local, align 1
  %v7_ff2c = icmp eq i32 %v1_fe6c, 80
  %.1942 = zext i1 %v7_ff2c to i32
  %v2_ff38 = and i32 %.1942, %.1941
  %v4_ff38 = icmp eq i32 %v2_ff38, 0
  store i1 %v4_ff38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_ff38, label %dec_label_pc_ff40, label %dec_label_pc_fe54

dec_label_pc_ff40:                                ; preds = %dec_label_pc_ff2c
  %v2_ff40 = icmp ugt i32 %v1_fe6c, 97
  store i1 %v2_ff40, i1* %cpsr_c.global-to-local, align 1
  %v7_ff40 = icmp eq i32 %v1_fe6c, 98
  %.1943 = zext i1 %v7_ff40 to i32
  store i32 %.1943, i32* %r8.global-to-local, align 4
  %v2_ff4c = and i32 %.1943, %.1941
  %v4_ff4c = icmp eq i32 %v2_ff4c, 0
  store i1 %v4_ff4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_ff4c, label %dec_label_pc_ff54, label %dec_label_pc_fe54

dec_label_pc_ff54:                                ; preds = %dec_label_pc_ff40
  %v2_ff54 = icmp ugt i32 %v1_fe6c, 153
  store i1 %v2_ff54, i1* %cpsr_c.global-to-local, align 1
  %v7_ff54 = icmp eq i32 %v1_fe6c, 154
  %.1944 = zext i1 %v7_ff54 to i32
  store i32 %.1944, i32* %sl.global-to-local, align 4
  %v2_ff60 = and i32 %.1944, %.1941
  %v4_ff60 = icmp eq i32 %v2_ff60, 0
  store i1 %v4_ff60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_ff60, label %dec_label_pc_ff68, label %dec_label_pc_fe54

dec_label_pc_ff68:                                ; preds = %dec_label_pc_ff54
  %v7_ff68 = icmp eq i32 %v1_fe58, 147
  %.1945 = zext i1 %v7_ff68 to i32
  store i32 %.1945, i32* %sb.global-to-local, align 4
  %v2_ff74 = icmp ugt i32 %v1_fe6c, 158
  store i1 %v2_ff74, i1* %cpsr_c.global-to-local, align 1
  %v7_ff74 = icmp eq i32 %v1_fe6c, 159
  store i1 %v7_ff74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ff74, label %bb1358, label %dec_label_pc_ff80

bb1358:                                           ; preds = %dec_label_pc_ff68
  %v2_ff68 = icmp ugt i32 %v1_fe58, 146
  store i1 %v2_ff68, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ff68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ff68, label %dec_label_pc_fe54, label %dec_label_pc_ff80

dec_label_pc_ff80:                                ; preds = %dec_label_pc_ff68, %bb1358
  %v2_ff80 = icmp ugt i32 %v1_fe6c, 113
  %v7_ff80 = icmp eq i32 %v1_fe6c, 114
  %.1946 = zext i1 %v7_ff80 to i32
  store i32 %.1946, i32* %lr.global-to-local, align 4
  %v2_ff8c = icmp ugt i32 %v1_fe58, 147
  store i1 %v2_ff8c, i1* %cpsr_c.global-to-local, align 1
  %v7_ff8c = icmp eq i32 %v1_fe58, 148
  store i1 %v7_ff8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ff8c, label %bb1361, label %dec_label_pc_ff9c

bb1361:                                           ; preds = %dec_label_pc_ff80
  store i1 %v2_ff80, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ff80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ff80, label %dec_label_pc_fe54, label %dec_label_pc_ff9c

dec_label_pc_ff9c:                                ; preds = %dec_label_pc_ff80, %bb1361
  %v7_ff9c = icmp eq i32 %v1_fe58, 150
  %.1947 = zext i1 %v7_ff9c to i32
  store i32 %.1947, i32* %r4.global-to-local, align 4
  %v2_ffa8 = icmp ugt i32 %v1_fe6c, 124
  store i1 %v2_ffa8, i1* %cpsr_c.global-to-local, align 1
  %v7_ffa8 = icmp eq i32 %v1_fe6c, 125
  store i1 %v7_ffa8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ffa8, label %bb1364, label %dec_label_pc_ffb4

bb1364:                                           ; preds = %dec_label_pc_ff9c
  %v2_ff9c = icmp ugt i32 %v1_fe58, 149
  store i1 %v2_ff9c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ff9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ff9c, label %dec_label_pc_fe54, label %dec_label_pc_ffb4.thread

dec_label_pc_ffb4.thread:                         ; preds = %bb1364
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ffc8

dec_label_pc_ffb4:                                ; preds = %dec_label_pc_ff9c
  %v2_ffb4 = icmp ugt i32 %v1_fe6c, 132
  store i1 %v2_ffb4, i1* %cpsr_c.global-to-local, align 1
  %v7_ffb4 = icmp eq i32 %v1_fe6c, 133
  store i1 %v7_ffb4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ffb4, label %.thread33, label %dec_label_pc_ffc8

.thread33:                                        ; preds = %dec_label_pc_ffb4
  store i32 %.1947, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ffc0 = icmp eq i1 %v7_ff9c, false
  store i1 %v2_ffc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ffc0, label %dec_label_pc_ffc8.thread, label %dec_label_pc_fe54

dec_label_pc_ffc8.thread:                         ; preds = %.thread33
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %.thread38

dec_label_pc_ffc8:                                ; preds = %dec_label_pc_ffb4, %dec_label_pc_ffb4.thread
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_ffc8 = icmp ugt i32 %v1_fe6c, 143
  store i1 %v2_ffc8, i1* %cpsr_c.global-to-local, align 1
  %v7_ffc8 = icmp eq i32 %v1_fe6c, 144
  store i1 %v7_ffc8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ffc8, label %.thread37, label %.thread38

.thread38:                                        ; preds = %dec_label_pc_ffc8.thread, %dec_label_pc_ffc8
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ffdc

.thread37:                                        ; preds = %dec_label_pc_ffc8
  store i32 %.1947, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ffd4 = icmp eq i1 %v7_ff9c, false
  store i1 %v2_ffd4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ffd4, label %dec_label_pc_ffdc, label %dec_label_pc_fe54

dec_label_pc_ffdc:                                ; preds = %.thread38, %.thread37
  %v2_ffdc = icmp ugt i32 %v1_fe6c, 148
  store i1 %v2_ffdc, i1* %cpsr_c.global-to-local, align 1
  %v7_ffdc = icmp eq i32 %v1_fe6c, 149
  %.1948 = zext i1 %v7_ffdc to i32
  store i32 %.1948, i32* %lr.global-to-local, align 4
  %v2_ffe8 = and i32 %.1948, %.1947
  %v4_ffe8 = icmp eq i32 %v2_ffe8, 0
  store i1 %v4_ffe8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_ffe8, label %dec_label_pc_fff0, label %dec_label_pc_fe54

dec_label_pc_fff0:                                ; preds = %dec_label_pc_ffdc
  %v2_fff0 = icmp ugt i32 %v1_fe6c, 156
  store i1 %v2_fff0, i1* %cpsr_c.global-to-local, align 1
  %v7_fff0 = icmp eq i32 %v1_fe6c, 157
  store i1 %v7_fff0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fff0, label %.thread42, label %dec_label_pc_10004

.thread42:                                        ; preds = %dec_label_pc_fff0
  store i32 %.1947, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fffc = icmp eq i1 %v7_ff9c, false
  store i1 %v2_fffc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fffc, label %dec_label_pc_10004.thread, label %dec_label_pc_fe54

dec_label_pc_10004.thread:                        ; preds = %.thread42
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10018

dec_label_pc_10004:                               ; preds = %dec_label_pc_fff0
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_10004 = icmp ugt i32 %v1_fe6c, 183
  store i1 %v2_10004, i1* %cpsr_c.global-to-local, align 1
  %v7_10004 = icmp eq i32 %v1_fe6c, 184
  store i1 %v7_10004, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10004, label %.thread46, label %dec_label_pc_10018

.thread46:                                        ; preds = %dec_label_pc_10004
  store i32 %.1947, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10010 = icmp eq i1 %v7_ff9c, false
  store i1 %v2_10010, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10010, label %dec_label_pc_10018.thread, label %dec_label_pc_fe54

dec_label_pc_10018.thread:                        ; preds = %.thread46
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %.thread51

dec_label_pc_10018:                               ; preds = %dec_label_pc_10004, %dec_label_pc_10004.thread
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_10018 = icmp ugt i32 %v1_fe6c, 189
  store i1 %v2_10018, i1* %cpsr_c.global-to-local, align 1
  %v7_10018 = icmp eq i32 %v1_fe6c, 190
  store i1 %v7_10018, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10018, label %.thread50, label %.thread51

.thread51:                                        ; preds = %dec_label_pc_10018.thread, %dec_label_pc_10018
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1002c

.thread50:                                        ; preds = %dec_label_pc_10018
  store i32 %.1947, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10024 = icmp eq i1 %v7_ff9c, false
  store i1 %v2_10024, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10024, label %dec_label_pc_1002c, label %dec_label_pc_fe54

dec_label_pc_1002c:                               ; preds = %.thread51, %.thread50
  %v2_1002c = icmp ugt i32 %v1_fe6c, 195
  store i1 %v2_1002c, i1* %cpsr_c.global-to-local, align 1
  %v7_1002c = icmp eq i32 %v1_fe6c, 196
  %.1949 = zext i1 %v7_1002c to i32
  store i32 %.1949, i32* %r3.global-to-local, align 4
  %v2_10038 = and i32 %.1949, %.1947
  %v4_10038 = icmp eq i32 %v2_10038, 0
  store i1 %v4_10038, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_10038, label %dec_label_pc_10044, label %dec_label_pc_fe54

dec_label_pc_10044:                               ; preds = %dec_label_pc_1002c
  %v7_10044 = icmp eq i32 %v1_fe58, 152
  %.1950 = zext i1 %v7_10044 to i32
  store i32 %.1950, i32* %fp.global-to-local, align 4
  %v2_10050 = icmp ugt i32 %v1_fe6c, 81
  store i1 %v2_10050, i1* %cpsr_c.global-to-local, align 1
  %v7_10050 = icmp eq i32 %v1_fe6c, 82
  store i1 %v7_10050, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10050, label %bb1371, label %dec_label_pc_10060

bb1371:                                           ; preds = %dec_label_pc_10044
  %v2_10044 = icmp ugt i32 %v1_fe58, 151
  store i1 %v2_10044, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10044, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10044, label %dec_label_pc_fe54, label %dec_label_pc_10060

dec_label_pc_10060:                               ; preds = %dec_label_pc_10044, %bb1371
  %v2_10060 = icmp ugt i32 %v1_fe6c, 228
  store i1 %v2_10060, i1* %cpsr_c.global-to-local, align 1
  %v7_10060 = icmp eq i32 %v1_fe6c, 229
  %.1951 = zext i1 %v7_10060 to i32
  store i32 %.1951, i32* %r3.global-to-local, align 4
  %v2_1006c = and i32 %.1951, %.1950
  %v4_1006c = icmp eq i32 %v2_1006c, 0
  store i1 %v4_1006c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_1006c, label %dec_label_pc_10078, label %dec_label_pc_fe54

dec_label_pc_10078:                               ; preds = %dec_label_pc_10060
  %v7_10078 = icmp eq i32 %v1_fe58, 157
  %.1952 = zext i1 %v7_10078 to i32
  store i32 %.1952, i32* %fp.global-to-local, align 4
  %v2_10084 = icmp ugt i32 %v1_fe6c, 201
  store i1 %v2_10084, i1* %cpsr_c.global-to-local, align 1
  %v7_10084 = icmp eq i32 %v1_fe6c, 202
  %storemerge1173 = zext i1 %v7_10084 to i32
  store i32 %storemerge1173, i32* %r3.global-to-local, align 4
  %v2_10090 = and i32 %storemerge1173, %.1952
  %v4_10090 = icmp eq i32 %v2_10090, 0
  store i1 %v4_10090, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_10090, label %dec_label_pc_100a0, label %dec_label_pc_fe54

dec_label_pc_100a0:                               ; preds = %dec_label_pc_10078
  store i32 %.1952, i32* %r3.global-to-local, align 4
  %v2_100a4 = icmp ugt i32 %v1_fe6c, 216
  store i1 %v2_100a4, i1* %cpsr_c.global-to-local, align 1
  %v7_100a4 = icmp eq i32 %v1_fe6c, 217
  store i1 %v7_100a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_100a4, label %.thread62, label %.thread63

.thread63:                                        ; preds = %dec_label_pc_100a0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_100b8

.thread62:                                        ; preds = %dec_label_pc_100a0
  store i32 %.1952, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_100b0 = icmp eq i1 %v7_10078, false
  store i1 %v2_100b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_100b0, label %dec_label_pc_100b8, label %dec_label_pc_fe54

dec_label_pc_100b8:                               ; preds = %.thread63, %.thread62
  %v2_100b8 = icmp ugt i32 %v1_fe58, 160
  store i1 %v2_100b8, i1* %cpsr_c.global-to-local, align 1
  %v7_100b8 = icmp eq i32 %v1_fe58, 161
  store i1 %v7_100b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_100b8, label %bb1378, label %dec_label_pc_100c4

bb1378:                                           ; preds = %dec_label_pc_100b8
  %v3_100bc = icmp ugt i32 %v1_fe6c, 123
  store i1 %v3_100bc, i1* %cpsr_c.global-to-local, align 1
  %v8_100bc = icmp eq i32 %v1_fe6c, 124
  store i1 %v8_100bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_100bc, label %dec_label_pc_fe54, label %dec_label_pc_100c4

dec_label_pc_100c4:                               ; preds = %dec_label_pc_100b8, %bb1378
  %v7_100c4 = icmp eq i32 %v1_fe58, 162
  %.1953 = zext i1 %v7_100c4 to i32
  store i32 %.1953, i32* %fp.global-to-local, align 4
  %v2_100d0 = icmp ugt i32 %v1_fe6c, 31
  store i1 %v2_100d0, i1* %cpsr_c.global-to-local, align 1
  %v7_100d0 = icmp eq i32 %v1_fe6c, 32
  %storemerge1175 = zext i1 %v7_100d0 to i32
  store i32 %storemerge1175, i32* %r3.global-to-local, align 4
  %v2_100dc = and i32 %storemerge1175, %.1953
  %v4_100dc = icmp eq i32 %v2_100dc, 0
  store i1 %v4_100dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_100dc, label %dec_label_pc_100ec, label %dec_label_pc_fe54

dec_label_pc_100ec:                               ; preds = %dec_label_pc_100c4
  %v7_100ec = icmp eq i32 %v1_fe58, 155
  %.1954 = zext i1 %v7_100ec to i32
  store i32 %.1954, i32* %fp.global-to-local, align 4
  %v2_100f8 = icmp ugt i32 %v1_fe6c, 95
  store i1 %v2_100f8, i1* %cpsr_c.global-to-local, align 1
  %v7_100f8 = icmp eq i32 %v1_fe6c, 96
  store i1 %v7_100f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_100f8, label %bb1385, label %dec_label_pc_10108

bb1385:                                           ; preds = %dec_label_pc_100ec
  %v2_100ec = icmp ugt i32 %v1_fe58, 154
  store i1 %v2_100ec, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_100ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_100ec, label %dec_label_pc_fe54, label %dec_label_pc_10108

dec_label_pc_10108:                               ; preds = %dec_label_pc_100ec, %bb1385
  %v2_10108 = and i32 %.1948, %.1954
  %v4_10108 = icmp eq i32 %v2_10108, 0
  store i1 %v4_10108, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_10108, label %dec_label_pc_10110, label %dec_label_pc_fe54

dec_label_pc_10110:                               ; preds = %dec_label_pc_10108
  store i32 %.1954, i32* %r3.global-to-local, align 4
  %v2_10114 = icmp ugt i32 %v1_fe6c, 154
  store i1 %v2_10114, i1* %cpsr_c.global-to-local, align 1
  %v7_10114 = icmp eq i32 %v1_fe6c, 155
  store i1 %v7_10114, i1* %cpsr_z.global-to-local, align 1
  store i32 %.1954, i32* %r3.global-to-local, align 4
  br i1 %v7_10114, label %.thread73, label %dec_label_pc_10128

.thread73:                                        ; preds = %dec_label_pc_10110
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10120 = icmp eq i1 %v7_100ec, false
  store i1 %v2_10120, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10120, label %dec_label_pc_10128.thread, label %dec_label_pc_fe54

dec_label_pc_10128.thread:                        ; preds = %.thread73
  store i32 %.1954, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %.thread78

dec_label_pc_10128:                               ; preds = %dec_label_pc_10110
  %v2_1012c = icmp ugt i32 %v1_fe6c, 177
  store i1 %v2_1012c, i1* %cpsr_c.global-to-local, align 1
  %v7_1012c = icmp eq i32 %v1_fe6c, 178
  store i1 %v7_1012c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1012c, label %.thread77, label %.thread78

.thread78:                                        ; preds = %dec_label_pc_10128.thread, %dec_label_pc_10128
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10140

.thread77:                                        ; preds = %dec_label_pc_10128
  store i32 %.1954, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10138 = icmp eq i1 %v7_100ec, false
  store i1 %v2_10138, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10138, label %dec_label_pc_10140, label %dec_label_pc_fe54

dec_label_pc_10140:                               ; preds = %.thread78, %.thread77
  %v7_10140 = icmp eq i32 %v1_fe58, 164
  %.1955 = zext i1 %v7_10140 to i32
  store i32 %.1955, i32* %lr.global-to-local, align 4
  %v2_1014c = icmp ugt i32 %v1_fe6c, 157
  store i1 %v2_1014c, i1* %cpsr_c.global-to-local, align 1
  %v7_1014c = icmp eq i32 %v1_fe6c, 158
  store i1 %v7_1014c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1014c, label %bb1388, label %dec_label_pc_1015c

bb1388:                                           ; preds = %dec_label_pc_10140
  %v2_10140 = icmp ugt i32 %v1_fe58, 163
  store i1 %v2_10140, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10140, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10140, label %dec_label_pc_fe54, label %dec_label_pc_1015c

dec_label_pc_1015c:                               ; preds = %dec_label_pc_10140, %bb1388
  %v2_1015c = icmp ugt i32 %v1_fe58, 155
  store i1 %v2_1015c, i1* %cpsr_c.global-to-local, align 1
  %v7_1015c = icmp eq i32 %v1_fe58, 156
  store i1 %v7_1015c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1015c, label %bb1389, label %dec_label_pc_10168

bb1389:                                           ; preds = %dec_label_pc_1015c
  %v3_10160 = icmp ugt i32 %v1_fe6c, 8
  store i1 %v3_10160, i1* %cpsr_c.global-to-local, align 1
  %v8_10160 = icmp eq i32 %v1_fe6c, 9
  store i1 %v8_10160, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10160, label %dec_label_pc_fe54, label %dec_label_pc_10168

dec_label_pc_10168:                               ; preds = %dec_label_pc_1015c, %bb1389
  %v7_10168 = icmp eq i32 %v1_fe58, 167
  %.1956 = zext i1 %v7_10168 to i32
  store i32 %.1956, i32* %r3.global-to-local, align 4
  %v2_10174 = icmp ugt i32 %v1_fe6c, 43
  store i1 %v2_10174, i1* %cpsr_c.global-to-local, align 1
  %v7_10174 = icmp eq i32 %v1_fe6c, 44
  store i1 %v7_10174, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10174, label %bb1392, label %dec_label_pc_10184

bb1392:                                           ; preds = %dec_label_pc_10168
  %v2_10168 = icmp ugt i32 %v1_fe58, 166
  store i1 %v2_10168, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10168, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10168, label %dec_label_pc_fe54, label %dec_label_pc_10184

dec_label_pc_10184:                               ; preds = %dec_label_pc_10168, %bb1392
  %v2_10184 = icmp ugt i32 %v1_fe6c, 67
  %v7_10184 = icmp eq i32 %v1_fe6c, 68
  %.1957 = zext i1 %v7_10184 to i32
  store i32 %.1957, i32* %fp.global-to-local, align 4
  %v2_10190 = icmp ugt i32 %v1_fe58, 167
  store i1 %v2_10190, i1* %cpsr_c.global-to-local, align 1
  %v7_10190 = icmp eq i32 %v1_fe58, 168
  %storemerge1180 = zext i1 %v7_10190 to i32
  store i32 %storemerge1180, i32* %r3.global-to-local, align 4
  %v2_1019c = and i32 %.1957, %storemerge1180
  %v4_1019c = icmp eq i32 %v2_1019c, 0
  store i1 %v4_1019c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_1019c, label %dec_label_pc_101a8, label %dec_label_pc_fe54

dec_label_pc_101a8:                               ; preds = %dec_label_pc_10184
  %v2_101a8 = icmp ugt i32 %v1_fe6c, 84
  store i1 %v2_101a8, i1* %cpsr_c.global-to-local, align 1
  %v7_101a8 = icmp eq i32 %v1_fe6c, 85
  %.1958 = zext i1 %v7_101a8 to i32
  store i32 %.1958, i32* %lr.global-to-local, align 4
  %v2_101b4 = and i32 %.1958, %storemerge1180
  %v4_101b4 = icmp eq i32 %v2_101b4, 0
  store i1 %v4_101b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_101b4, label %dec_label_pc_101c0, label %dec_label_pc_fe54

dec_label_pc_101c0:                               ; preds = %dec_label_pc_101a8
  %v2_101c0 = icmp ugt i32 %v1_fe6c, 101
  store i1 %v2_101c0, i1* %cpsr_c.global-to-local, align 1
  %v7_101c0 = icmp eq i32 %v1_fe6c, 102
  store i1 %v7_101c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_101c0, label %.thread93, label %.thread94

.thread94:                                        ; preds = %dec_label_pc_101c0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_101d4

.thread93:                                        ; preds = %dec_label_pc_101c0
  store i32 %storemerge1180, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_101cc = icmp eq i1 %v7_10190, false
  store i1 %v2_101cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_101cc, label %dec_label_pc_101d4, label %dec_label_pc_fe54

dec_label_pc_101d4:                               ; preds = %.thread94, %.thread93
  %v2_101d4 = icmp ugt i32 %v1_fe6c, 58
  %v7_101d4 = icmp eq i32 %v1_fe6c, 59
  %.1959 = zext i1 %v7_101d4 to i32
  store i32 %.1959, i32* %r3.global-to-local, align 4
  %v2_101e0 = icmp ugt i32 %v1_fe58, 202
  store i1 %v2_101e0, i1* %cpsr_c.global-to-local, align 1
  %v7_101e0 = icmp eq i32 %v1_fe58, 203
  store i1 %v7_101e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_101e0, label %bb1401, label %dec_label_pc_101f0

bb1401:                                           ; preds = %dec_label_pc_101d4
  store i1 %v2_101d4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_101d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_101d4, label %dec_label_pc_fe54, label %dec_label_pc_101f0

dec_label_pc_101f0:                               ; preds = %dec_label_pc_101d4, %bb1401
  %v2_101f0 = icmp ugt i32 %v1_fe6c, 33
  %v7_101f0 = icmp eq i32 %v1_fe6c, 34
  %.1960 = zext i1 %v7_101f0 to i32
  store i32 %.1960, i32* %fp.global-to-local, align 4
  %v2_101fc = icmp ugt i32 %v1_fe58, 203
  store i1 %v2_101fc, i1* %cpsr_c.global-to-local, align 1
  %v7_101fc = icmp eq i32 %v1_fe58, 204
  store i1 %v7_101fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_101fc, label %bb1404, label %dec_label_pc_1020c

bb1404:                                           ; preds = %dec_label_pc_101f0
  store i1 %v2_101f0, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_101f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_101f0, label %dec_label_pc_fe54, label %dec_label_pc_1020c

dec_label_pc_1020c:                               ; preds = %dec_label_pc_101f0, %bb1404
  %v7_1020c = icmp eq i32 %v1_fe58, 207
  %.1961 = zext i1 %v7_1020c to i32
  store i32 %.1961, i32* %lr.global-to-local, align 4
  %v2_10218 = icmp ugt i32 %v1_fe6c, 29
  store i1 %v2_10218, i1* %cpsr_c.global-to-local, align 1
  %v7_10218 = icmp eq i32 %v1_fe6c, 30
  store i1 %v7_10218, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10218, label %bb1407, label %dec_label_pc_10228

bb1407:                                           ; preds = %dec_label_pc_1020c
  %v2_1020c = icmp ugt i32 %v1_fe58, 206
  store i1 %v2_1020c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_1020c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1020c, label %dec_label_pc_fe54, label %dec_label_pc_10228

dec_label_pc_10228:                               ; preds = %dec_label_pc_1020c, %bb1407
  %v7_10228 = icmp eq i32 %v1_fe6c, 55
  %.1962 = zext i1 %v7_10228 to i32
  store i32 %.1962, i32* %fp.global-to-local, align 4
  %v2_10234 = icmp ugt i32 %v1_fe58, 116
  store i1 %v2_10234, i1* %cpsr_c.global-to-local, align 1
  %v7_10234 = icmp eq i32 %v1_fe58, 117
  %storemerge1186 = zext i1 %v7_10234 to i32
  store i32 %storemerge1186, i32* %r3.global-to-local, align 4
  %v2_10240 = and i32 %.1962, %storemerge1186
  %v4_10240 = icmp eq i32 %v2_10240, 0
  store i1 %v4_10240, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_10240, label %dec_label_pc_1024c, label %dec_label_pc_fe54

dec_label_pc_1024c:                               ; preds = %dec_label_pc_10228
  %v2_1024c = icmp ugt i32 %v1_fe6c, 55
  store i1 %v2_1024c, i1* %cpsr_c.global-to-local, align 1
  %v7_1024c = icmp eq i32 %v1_fe6c, 56
  %.1963 = zext i1 %v7_1024c to i32
  store i32 %.1963, i32* %lr.global-to-local, align 4
  %v2_10258 = and i32 %.1963, %storemerge1186
  %v4_10258 = icmp eq i32 %v2_10258, 0
  store i1 %v4_10258, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_10258, label %dec_label_pc_10264, label %dec_label_pc_fe54

dec_label_pc_10264:                               ; preds = %dec_label_pc_1024c
  %v7_10264 = icmp eq i32 %v1_fe58, 80
  %.1964 = zext i1 %v7_10264 to i32
  store i32 %.1964, i32* %r3.global-to-local, align 4
  %v2_10270 = icmp ugt i32 %v1_fe6c, 234
  store i1 %v2_10270, i1* %cpsr_c.global-to-local, align 1
  %v7_10270 = icmp eq i32 %v1_fe6c, 235
  store i1 %v7_10270, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10270, label %bb1416, label %dec_label_pc_10280

bb1416:                                           ; preds = %dec_label_pc_10264
  %v2_10264 = icmp ugt i32 %v1_fe58, 79
  store i1 %v2_10264, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10264, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10264, label %dec_label_pc_fe54, label %dec_label_pc_10280.thread

dec_label_pc_10280.thread:                        ; preds = %bb1416
  store i32 %.1961, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %.thread117

dec_label_pc_10280:                               ; preds = %dec_label_pc_10264
  store i32 %.1961, i32* %r3.global-to-local, align 4
  %v2_10284 = icmp ugt i32 %v1_fe6c, 119
  store i1 %v2_10284, i1* %cpsr_c.global-to-local, align 1
  %v7_10284 = icmp eq i32 %v1_fe6c, 120
  store i1 %v7_10284, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10284, label %.thread116, label %.thread117

.thread117:                                       ; preds = %dec_label_pc_10280.thread, %dec_label_pc_10280
  %v2_102842023 = phi i1 [ true, %dec_label_pc_10280.thread ], [ %v2_10284, %dec_label_pc_10280 ]
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10298

.thread116:                                       ; preds = %dec_label_pc_10280
  store i32 %.1961, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10290 = icmp eq i1 %v7_1020c, false
  store i1 %v2_10290, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10290, label %dec_label_pc_10298, label %dec_label_pc_fe54

dec_label_pc_10298:                               ; preds = %.thread117, %.thread116
  %v2_102842022 = phi i1 [ %v2_102842023, %.thread117 ], [ %v2_10284, %.thread116 ]
  %v7_102842024 = phi i1 [ false, %.thread117 ], [ true, %.thread116 ]
  %v7_10298 = icmp eq i32 %v1_fe58, 209
  %.1965 = zext i1 %v7_10298 to i32
  store i32 %.1965, i32* %fp.global-to-local, align 4
  %v2_102a4 = icmp ugt i32 %v1_fe6c, 34
  store i1 %v2_102a4, i1* %cpsr_c.global-to-local, align 1
  %v7_102a4 = icmp eq i32 %v1_fe6c, 35
  store i1 %v7_102a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_102a4, label %bb1419, label %dec_label_pc_102b4

bb1419:                                           ; preds = %dec_label_pc_10298
  %v2_10298 = icmp ugt i32 %v1_fe58, 208
  store i1 %v2_10298, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10298, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10298, label %dec_label_pc_fe54, label %dec_label_pc_102b4

dec_label_pc_102b4:                               ; preds = %dec_label_pc_10298, %bb1419
  %v7_102b4 = icmp eq i32 %v1_fe58, 64
  %.1966 = zext i1 %v7_102b4 to i32
  store i32 %.1966, i32* %lr.global-to-local, align 4
  %v2_102c0 = icmp ugt i32 %v1_fe6c, 69
  store i1 %v2_102c0, i1* %cpsr_c.global-to-local, align 1
  %v7_102c0 = icmp eq i32 %v1_fe6c, 70
  store i1 %v7_102c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_102c0, label %bb1422, label %dec_label_pc_102d0

bb1422:                                           ; preds = %dec_label_pc_102b4
  %v2_102b4 = icmp ugt i32 %v1_fe58, 63
  store i1 %v2_102b4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_102b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_102b4, label %dec_label_pc_fe54, label %dec_label_pc_102d0

dec_label_pc_102d0:                               ; preds = %dec_label_pc_102b4, %bb1422
  %v7_102d0 = icmp eq i32 %v1_fe58, 172
  %.1967 = zext i1 %v7_102d0 to i32
  store i32 %.1967, i32* %r3.global-to-local, align 4
  %v2_102dc = icmp ugt i32 %v1_fe6c, 14
  store i1 %v2_102dc, i1* %cpsr_c.global-to-local, align 1
  %v7_102dc = icmp eq i32 %v1_fe6c, 15
  store i1 %v7_102dc, i1* %cpsr_z.global-to-local, align 1
  %v2_102e0 = xor i1 %v2_102dc, true
  %v3_102e0 = or i1 %v7_102dc, %v2_102e0
  br i1 %v3_102e0, label %bb1425, label %bb1426

bb1425:                                           ; preds = %dec_label_pc_102d0
  store i32 0, i32* %fp.global-to-local, align 4
  br label %bb1426

bb1426:                                           ; preds = %dec_label_pc_102d0, %bb1425
  %v1_102e8770 = phi i32 [ %.1965, %dec_label_pc_102d0 ], [ 0, %bb1425 ]
  %v2_102e4 = xor i1 %v7_102dc, true
  %v3_102e4 = and i1 %v2_102dc, %v2_102e4
  br i1 %v3_102e4, label %bb1427, label %bb1428

bb1427:                                           ; preds = %bb1426
  store i32 1, i32* %fp.global-to-local, align 4
  br label %bb1428

bb1428:                                           ; preds = %bb1426, %bb1427
  %v0_108bc = phi i32 [ %v1_102e8770, %bb1426 ], [ 1, %bb1427 ]
  %v2_102e8 = and i32 %v0_108bc, %.1967
  %v4_102e8 = icmp eq i32 %v2_102e8, 0
  store i1 %v4_102e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_102e8, label %dec_label_pc_10300, label %dec_label_pc_102f8

dec_label_pc_102f8:                               ; preds = %bb1428
  %v2_102f8 = icmp ugt i32 %v1_fe6c, 30
  store i1 %v2_102f8, i1* %cpsr_c.global-to-local, align 1
  %v7_102f8 = icmp eq i32 %v1_fe6c, 31
  store i1 %v7_102f8, i1* %cpsr_z.global-to-local, align 1
  %v2_102fc = xor i1 %v2_102f8, true
  %v3_102fc = or i1 %v7_102f8, %v2_102fc
  br i1 %v3_102fc, label %dec_label_pc_fe54, label %dec_label_pc_10300

dec_label_pc_10300:                               ; preds = %dec_label_pc_102f8, %bb1428
  %v2_10300 = icmp ugt i32 %v1_fe6c, 62
  store i1 %v2_10300, i1* %cpsr_c.global-to-local, align 1
  %v7_10300 = icmp eq i32 %v1_fe6c, 63
  store i1 %v7_10300, i1* %cpsr_z.global-to-local, align 1
  %v2_10304 = xor i1 %v2_10300, true
  %v3_10304 = or i1 %v7_10300, %v2_10304
  br i1 %v3_10304, label %bb1429, label %bb1430

bb1429:                                           ; preds = %dec_label_pc_10300
  store i32 0, i32* %lr.global-to-local, align 4
  br label %bb1430

bb1430:                                           ; preds = %dec_label_pc_10300, %bb1429
  %v0_1030c772 = phi i32 [ %.1966, %dec_label_pc_10300 ], [ 0, %bb1429 ]
  %v2_10308 = xor i1 %v7_10300, true
  %v3_10308 = and i1 %v2_10300, %v2_10308
  br i1 %v3_10308, label %bb1431, label %bb1432

bb1431:                                           ; preds = %bb1430
  store i32 1, i32* %lr.global-to-local, align 4
  br label %bb1432

bb1432:                                           ; preds = %bb1430, %bb1431
  %v0_11508 = phi i32 [ %v0_1030c772, %bb1430 ], [ 1, %bb1431 ]
  store i32 %v0_11508, i32* %r3.global-to-local, align 4
  %v2_10310 = icmp ugt i32 %v1_fe58, 99
  store i1 %v2_10310, i1* %cpsr_c.global-to-local, align 1
  %v7_10310 = icmp eq i32 %v1_fe58, 100
  store i1 %v7_10310, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10310, label %bb1433, label %.thread1122

.thread1122:                                      ; preds = %bb1432
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10330

bb1433:                                           ; preds = %bb1432
  %v2_10318 = urem i32 %v0_11508, 2
  store i32 %v2_10318, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1031c = icmp eq i32 %v2_10318, 0
  store i1 %v2_1031c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1031c, label %dec_label_pc_10330, label %dec_label_pc_10328

dec_label_pc_10328:                               ; preds = %bb1433
  %v2_10328 = icmp ugt i32 %v1_fe6c, 125
  store i1 %v2_10328, i1* %cpsr_c.global-to-local, align 1
  %v7_10328 = icmp eq i32 %v1_fe6c, 126
  store i1 %v7_10328, i1* %cpsr_z.global-to-local, align 1
  %v2_1032c = xor i1 %v2_10328, true
  %v3_1032c = or i1 %v7_10328, %v2_1032c
  br i1 %v3_1032c, label %dec_label_pc_fe54, label %dec_label_pc_10330

dec_label_pc_10330:                               ; preds = %.thread1122, %dec_label_pc_10328, %bb1433
  %v7_10330 = icmp eq i32 %v1_fe58, 169
  %.1968 = zext i1 %v7_10330 to i32
  store i32 %.1968, i32* %r3.global-to-local, align 4
  %v2_1033c = icmp ugt i32 %v1_fe6c, 253
  store i1 %v2_1033c, i1* %cpsr_c.global-to-local, align 1
  %v7_1033c = icmp eq i32 %v1_fe6c, 254
  %storemerge1193 = zext i1 %v7_1033c to i32
  store i32 %storemerge1193, i32* %fp.global-to-local, align 4
  %v2_10348 = and i32 %storemerge1193, %.1968
  %v4_10348 = icmp eq i32 %v2_10348, 0
  store i1 %v4_10348, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_10348, label %dec_label_pc_10358, label %dec_label_pc_fe54

dec_label_pc_10358:                               ; preds = %dec_label_pc_10330
  %v7_10358 = icmp eq i32 %v1_fe58, 198
  %.1969 = zext i1 %v7_10358 to i32
  store i32 %.1969, i32* %lr.global-to-local, align 4
  store i32 %.1969, i32* %r3.global-to-local, align 4
  store i1 %v2_ff20, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ff20, i1* %cpsr_z.global-to-local, align 1
  %v2_1036c = xor i1 %v2_ff20, true
  %v3_1036c = or i1 %v7_ff20, %v2_1036c
  br i1 %v3_1036c, label %bb1440, label %bb1441

bb1440:                                           ; preds = %dec_label_pc_10358
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1441

bb1441:                                           ; preds = %dec_label_pc_10358, %bb1440
  %v4_10370 = phi i32 [ %.1969, %dec_label_pc_10358 ], [ 0, %bb1440 ]
  %v2_10370 = xor i1 %v7_ff20, true
  %v3_10370 = and i1 %v2_ff20, %v2_10370
  br i1 %v3_10370, label %bb1442, label %thread-pre-split133

bb1442:                                           ; preds = %bb1441
  store i32 %v4_10370, i32* %r3.global-to-local, align 4
  br label %thread-pre-split133

thread-pre-split133:                              ; preds = %bb1441, %bb1442
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10374 = icmp eq i32 %v4_10370, 0
  store i1 %v2_10374, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10374, label %dec_label_pc_10388, label %dec_label_pc_10380

dec_label_pc_10380:                               ; preds = %thread-pre-split133
  %v2_10380 = icmp ugt i32 %v1_fe6c, 18
  store i1 %v2_10380, i1* %cpsr_c.global-to-local, align 1
  %v7_10380 = icmp eq i32 %v1_fe6c, 19
  store i1 %v7_10380, i1* %cpsr_z.global-to-local, align 1
  %v2_10384 = xor i1 %v2_10380, true
  %v3_10384 = or i1 %v7_10380, %v2_10384
  br i1 %v3_10384, label %dec_label_pc_fe54, label %dec_label_pc_10388

dec_label_pc_10388:                               ; preds = %dec_label_pc_10380, %thread-pre-split133
  store i32 %.1966, i32* %r3.global-to-local, align 4
  store i1 %v2_10184, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10184, i1* %cpsr_z.global-to-local, align 1
  %v2_10390 = xor i1 %v2_10184, true
  %v3_10390 = or i1 %v7_10184, %v2_10390
  br i1 %v3_10390, label %bb1443, label %bb1444

bb1443:                                           ; preds = %dec_label_pc_10388
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1444

bb1444:                                           ; preds = %dec_label_pc_10388, %bb1443
  %v4_10394 = phi i32 [ %.1966, %dec_label_pc_10388 ], [ 0, %bb1443 ]
  %v2_10394 = xor i1 %v7_10184, true
  %v3_10394 = and i1 %v2_10184, %v2_10394
  br i1 %v3_10394, label %bb1445, label %thread-pre-split134

bb1445:                                           ; preds = %bb1444
  store i32 %v4_10394, i32* %r3.global-to-local, align 4
  br label %thread-pre-split134

thread-pre-split134:                              ; preds = %bb1444, %bb1445
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10398 = icmp eq i32 %v4_10394, 0
  store i1 %v2_10398, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10398, label %dec_label_pc_103a8, label %dec_label_pc_103a0

dec_label_pc_103a0:                               ; preds = %thread-pre-split134
  %v2_103a0 = icmp ugt i32 %v1_fe6c, 225
  store i1 %v2_103a0, i1* %cpsr_c.global-to-local, align 1
  %v7_103a0 = icmp eq i32 %v1_fe6c, 226
  store i1 %v7_103a0, i1* %cpsr_z.global-to-local, align 1
  %v2_103a4 = xor i1 %v2_103a0, true
  %v3_103a4 = or i1 %v7_103a0, %v2_103a4
  br i1 %v3_103a4, label %dec_label_pc_fe54, label %dec_label_pc_103a8

dec_label_pc_103a8:                               ; preds = %dec_label_pc_103a0, %thread-pre-split134
  store i1 %v2_101f0, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_101f0, i1* %cpsr_z.global-to-local, align 1
  %v2_103ac = xor i1 %v2_101f0, true
  %v3_103ac = or i1 %v7_101f0, %v2_103ac
  br i1 %v3_103ac, label %bb1446, label %bb1447

bb1446:                                           ; preds = %dec_label_pc_103a8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1447

bb1447:                                           ; preds = %dec_label_pc_103a8, %bb1446
  %v0_103b4780 = phi i32 [ %v4_10394, %dec_label_pc_103a8 ], [ 0, %bb1446 ]
  %v2_103b0 = xor i1 %v7_101f0, true
  %v3_103b0 = and i1 %v2_101f0, %v2_103b0
  br i1 %v3_103b0, label %bb1448, label %bb1449

bb1448:                                           ; preds = %bb1447
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1449

bb1449:                                           ; preds = %bb1447, %bb1448
  %v0_103b4 = phi i32 [ %v0_103b4780, %bb1447 ], [ 1, %bb1448 ]
  %v2_103b8 = icmp ugt i32 %v1_fe58, 127
  store i1 %v2_103b8, i1* %cpsr_c.global-to-local, align 1
  %v7_103b8 = icmp eq i32 %v1_fe58, 128
  store i1 %v7_103b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_103b8, label %.thread135, label %.thread136

.thread136:                                       ; preds = %bb1449
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_103d4

.thread135:                                       ; preds = %bb1449
  %v2_103c0 = urem i32 %v0_103b4, 2
  store i32 %v2_103c0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_103c4 = icmp eq i32 %v2_103c0, 0
  store i1 %v2_103c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_103c4, label %dec_label_pc_103d4, label %dec_label_pc_103cc

dec_label_pc_103cc:                               ; preds = %.thread135
  %v2_103cc = icmp ugt i32 %v1_fe6c, 235
  store i1 %v2_103cc, i1* %cpsr_c.global-to-local, align 1
  %v7_103cc = icmp eq i32 %v1_fe6c, 236
  store i1 %v7_103cc, i1* %cpsr_z.global-to-local, align 1
  %v2_103d0 = xor i1 %v2_103cc, true
  %v3_103d0 = or i1 %v7_103cc, %v2_103d0
  br i1 %v3_103d0, label %dec_label_pc_fe54, label %dec_label_pc_103d4

dec_label_pc_103d4:                               ; preds = %.thread136, %dec_label_pc_103cc, %.thread135
  %v7_103d4 = icmp eq i32 %v1_fe58, 129
  %.1970 = zext i1 %v7_103d4 to i32
  store i32 %.1970, i32* %r3.global-to-local, align 4
  %v2_103e0 = icmp ugt i32 %v1_fe6c, 20
  store i1 %v2_103e0, i1* %cpsr_c.global-to-local, align 1
  %v7_103e0 = icmp eq i32 %v1_fe6c, 21
  store i1 %v7_103e0, i1* %cpsr_z.global-to-local, align 1
  %v2_103e4 = xor i1 %v2_103e0, true
  %v3_103e4 = or i1 %v7_103e0, %v2_103e4
  br i1 %v3_103e4, label %.thread141, label %bb1452

.thread141:                                       ; preds = %dec_label_pc_103d4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_103f8

bb1452:                                           ; preds = %dec_label_pc_103d4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_103e8 = icmp eq i1 %v7_103d4, false
  store i1 %v2_103e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_103e8, label %dec_label_pc_103f8, label %dec_label_pc_103f0

dec_label_pc_103f0:                               ; preds = %bb1452
  %v2_103f0 = icmp eq i32 %v1_fe6c, 255
  store i1 %v2_103f0, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_103f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_103f0, label %dec_label_pc_103f8, label %dec_label_pc_fe54

dec_label_pc_103f8:                               ; preds = %.thread141, %dec_label_pc_103f0, %bb1452
  %v7_103f8 = icmp eq i32 %v1_fe58, 130
  %.1971 = zext i1 %v7_103f8 to i32
  store i32 %.1971, i32* %r3.global-to-local, align 4
  %v2_10404 = icmp ugt i32 %v1_fe6c, 38
  store i1 %v2_10404, i1* %cpsr_c.global-to-local, align 1
  %v7_10404 = icmp eq i32 %v1_fe6c, 39
  store i1 %v7_10404, i1* %cpsr_z.global-to-local, align 1
  %v2_10408 = xor i1 %v2_10404, true
  %v3_10408 = or i1 %v7_10404, %v2_10408
  br i1 %v3_10408, label %.thread146, label %bb1455

.thread146:                                       ; preds = %dec_label_pc_103f8
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1041c

bb1455:                                           ; preds = %dec_label_pc_103f8
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1040c = icmp eq i1 %v7_103f8, false
  store i1 %v2_1040c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1040c, label %dec_label_pc_1041c, label %dec_label_pc_10414

dec_label_pc_10414:                               ; preds = %bb1455
  %v2_10414 = icmp ugt i32 %v1_fe6c, 166
  store i1 %v2_10414, i1* %cpsr_c.global-to-local, align 1
  %v7_10414 = icmp eq i32 %v1_fe6c, 167
  store i1 %v7_10414, i1* %cpsr_z.global-to-local, align 1
  %v2_10418 = xor i1 %v2_10414, true
  %v3_10418 = or i1 %v7_10414, %v2_10418
  br i1 %v3_10418, label %dec_label_pc_fe54, label %dec_label_pc_1041c

dec_label_pc_1041c:                               ; preds = %.thread146, %dec_label_pc_10414, %bb1455
  %v2_1041c = icmp ugt i32 %v1_fe6c, 1
  store i1 %v2_1041c, i1* %cpsr_c.global-to-local, align 1
  %v7_1041c = icmp eq i32 %v1_fe6c, 2
  store i1 %v7_1041c, i1* %cpsr_z.global-to-local, align 1
  %v2_10420 = xor i1 %v2_1041c, true
  %v3_10420 = or i1 %v7_1041c, %v2_10420
  br i1 %v3_10420, label %bb1456, label %bb1457

bb1456:                                           ; preds = %dec_label_pc_1041c
  store i32 0, i32* %lr.global-to-local, align 4
  br label %bb1457

bb1457:                                           ; preds = %dec_label_pc_1041c, %bb1456
  %v1_10430785 = phi i32 [ %.1969, %dec_label_pc_1041c ], [ 0, %bb1456 ]
  %v2_10424 = xor i1 %v7_1041c, true
  %v3_10424 = and i1 %v2_1041c, %v2_10424
  br i1 %v3_10424, label %bb1458, label %bb1459

bb1458:                                           ; preds = %bb1457
  store i32 1, i32* %lr.global-to-local, align 4
  br label %bb1459

bb1459:                                           ; preds = %bb1457, %bb1458
  %v1_1044c = phi i32 [ %v1_10430785, %bb1457 ], [ 1, %bb1458 ]
  %v2_10428 = icmp ugt i32 %v1_fe58, 130
  store i1 %v2_10428, i1* %cpsr_c.global-to-local, align 1
  %v7_10428 = icmp eq i32 %v1_fe58, 131
  store i1 %v7_10428, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10428, label %.thread149, label %dec_label_pc_10444

.thread149:                                       ; preds = %bb1459
  %v2_10430 = urem i32 %v1_1044c, 2
  store i32 %v2_10430, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10434 = icmp eq i32 %v2_10430, 0
  store i1 %v2_10434, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10434, label %dec_label_pc_10444.thread, label %dec_label_pc_1043c

dec_label_pc_1043c:                               ; preds = %.thread149
  %v2_1043c = icmp ugt i32 %v1_fe6c, 249
  store i1 %v2_1043c, i1* %cpsr_c.global-to-local, align 1
  %v7_1043c = icmp eq i32 %v1_fe6c, 250
  store i1 %v7_1043c, i1* %cpsr_z.global-to-local, align 1
  %v2_10440 = xor i1 %v2_1043c, true
  %v3_10440 = or i1 %v7_1043c, %v2_10440
  br i1 %v3_10440, label %dec_label_pc_fe54, label %dec_label_pc_10444.thread

dec_label_pc_10444.thread:                        ; preds = %dec_label_pc_1043c, %.thread149
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %.thread154

dec_label_pc_10444:                               ; preds = %bb1459
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_10444 = icmp ugt i32 %v1_fe58, 131
  store i1 %v2_10444, i1* %cpsr_c.global-to-local, align 1
  %v7_10444 = icmp eq i32 %v1_fe58, 132
  store i1 %v7_10444, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10444, label %.thread153, label %.thread154

.thread154:                                       ; preds = %dec_label_pc_10444.thread, %dec_label_pc_10444
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10460

.thread153:                                       ; preds = %dec_label_pc_10444
  %v2_1044c = urem i32 %v1_1044c, 2
  store i32 %v2_1044c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10450 = icmp eq i32 %v2_1044c, 0
  store i1 %v2_10450, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10450, label %dec_label_pc_10460, label %dec_label_pc_10458

dec_label_pc_10458:                               ; preds = %.thread153
  %v2_10458 = icmp ugt i32 %v1_fe6c, 249
  store i1 %v2_10458, i1* %cpsr_c.global-to-local, align 1
  %v7_10458 = icmp eq i32 %v1_fe6c, 250
  store i1 %v7_10458, i1* %cpsr_z.global-to-local, align 1
  %v2_1045c = xor i1 %v2_10458, true
  %v3_1045c = or i1 %v7_10458, %v2_1045c
  br i1 %v3_1045c, label %dec_label_pc_fe54, label %dec_label_pc_10460

dec_label_pc_10460:                               ; preds = %.thread154, %dec_label_pc_10458, %.thread153
  %v2_10460 = icmp ugt i32 %v1_fe6c, 3
  store i1 %v2_10460, i1* %cpsr_c.global-to-local, align 1
  %v7_10460 = icmp eq i32 %v1_fe6c, 4
  store i1 %v7_10460, i1* %cpsr_z.global-to-local, align 1
  %v2_10464 = xor i1 %v2_10460, true
  %v3_10464 = or i1 %v7_10460, %v2_10464
  br i1 %v3_10464, label %bb1460, label %bb1461

bb1460:                                           ; preds = %dec_label_pc_10460
  store i32 0, i32* %lr.global-to-local, align 4
  br label %bb1461

bb1461:                                           ; preds = %dec_label_pc_10460, %bb1460
  %v1_10474787 = phi i32 [ %v1_1044c, %dec_label_pc_10460 ], [ 0, %bb1460 ]
  %v2_10468 = xor i1 %v7_10460, true
  %v3_10468 = and i1 %v2_10460, %v2_10468
  br i1 %v3_10468, label %bb1462, label %bb1463

bb1462:                                           ; preds = %bb1461
  store i32 1, i32* %lr.global-to-local, align 4
  br label %bb1463

bb1463:                                           ; preds = %bb1461, %bb1462
  %v1_1068c = phi i32 [ %v1_10474787, %bb1461 ], [ 1, %bb1462 ]
  %v2_1046c = icmp ugt i32 %v1_fe58, 133
  store i1 %v2_1046c, i1* %cpsr_c.global-to-local, align 1
  %v7_1046c = icmp eq i32 %v1_fe58, 134
  store i1 %v7_1046c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1046c, label %.thread157, label %.thread158

.thread158:                                       ; preds = %bb1463
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10488

.thread157:                                       ; preds = %bb1463
  %v2_10474 = urem i32 %v1_1068c, 2
  store i32 %v2_10474, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10478 = icmp eq i32 %v2_10474, 0
  store i1 %v2_10478, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10478, label %dec_label_pc_10488, label %dec_label_pc_10480

dec_label_pc_10480:                               ; preds = %.thread157
  %v2_10480 = icmp ugt i32 %v1_fe6c, 233
  store i1 %v2_10480, i1* %cpsr_c.global-to-local, align 1
  %v7_10480 = icmp eq i32 %v1_fe6c, 234
  store i1 %v7_10480, i1* %cpsr_z.global-to-local, align 1
  %v2_10484 = xor i1 %v2_10480, true
  %v3_10484 = or i1 %v7_10480, %v2_10484
  br i1 %v3_10484, label %dec_label_pc_fe54, label %dec_label_pc_10488

dec_label_pc_10488:                               ; preds = %.thread158, %dec_label_pc_10480, %.thread157
  %v7_10488 = icmp eq i32 %v1_fe58, 136
  %.1972 = zext i1 %v7_10488 to i32
  store i32 %.1972, i32* %r3.global-to-local, align 4
  %v2_10494 = icmp ugt i32 %v1_fe6c, 175
  store i1 %v2_10494, i1* %cpsr_c.global-to-local, align 1
  %v7_10494 = icmp eq i32 %v1_fe6c, 176
  store i1 %v7_10494, i1* %cpsr_z.global-to-local, align 1
  %v2_10498 = xor i1 %v2_10494, true
  %v3_10498 = or i1 %v7_10494, %v2_10498
  br i1 %v3_10498, label %.thread163, label %bb1466

.thread163:                                       ; preds = %dec_label_pc_10488
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_104ac

bb1466:                                           ; preds = %dec_label_pc_10488
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1049c = icmp eq i1 %v7_10488, false
  store i1 %v2_1049c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1049c, label %dec_label_pc_104ac, label %dec_label_pc_104a4

dec_label_pc_104a4:                               ; preds = %bb1466
  %v2_104a4 = icmp ugt i32 %v1_fe6c, 221
  store i1 %v2_104a4, i1* %cpsr_c.global-to-local, align 1
  %v7_104a4 = icmp eq i32 %v1_fe6c, 222
  store i1 %v7_104a4, i1* %cpsr_z.global-to-local, align 1
  %v2_104a8 = xor i1 %v2_104a4, true
  %v3_104a8 = or i1 %v7_104a4, %v2_104a8
  br i1 %v3_104a8, label %dec_label_pc_fe54, label %dec_label_pc_104ac

dec_label_pc_104ac:                               ; preds = %.thread163, %dec_label_pc_104a4, %bb1466
  %v7_104ac = icmp eq i32 %v1_fe58, 138
  %.1973 = zext i1 %v7_104ac to i32
  store i32 %.1973, i32* %fp.global-to-local, align 4
  store i32 %.1973, i32* %r3.global-to-local, align 4
  %v2_104bc = icmp ugt i32 %v1_fe6c, 11
  store i1 %v2_104bc, i1* %cpsr_c.global-to-local, align 1
  %v7_104bc = icmp eq i32 %v1_fe6c, 12
  store i1 %v7_104bc, i1* %cpsr_z.global-to-local, align 1
  %v2_104c0 = xor i1 %v2_104bc, true
  %v3_104c0 = or i1 %v7_104bc, %v2_104c0
  br i1 %v3_104c0, label %bb1469, label %bb1470

bb1469:                                           ; preds = %dec_label_pc_104ac
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1470

bb1470:                                           ; preds = %dec_label_pc_104ac, %bb1469
  %v4_104c4 = phi i32 [ %.1973, %dec_label_pc_104ac ], [ 0, %bb1469 ]
  %v2_104c4 = xor i1 %v7_104bc, true
  %v3_104c4 = and i1 %v2_104bc, %v2_104c4
  br i1 %v3_104c4, label %bb1471, label %thread-pre-split167

bb1471:                                           ; preds = %bb1470
  store i32 %v4_104c4, i32* %r3.global-to-local, align 4
  br label %thread-pre-split167

thread-pre-split167:                              ; preds = %bb1470, %bb1471
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_104c8 = icmp eq i32 %v4_104c4, 0
  store i1 %v2_104c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_104c8, label %dec_label_pc_104dc, label %dec_label_pc_104d4

dec_label_pc_104d4:                               ; preds = %thread-pre-split167
  %v2_104d4 = icmp ugt i32 %v1_fe6c, 192
  store i1 %v2_104d4, i1* %cpsr_c.global-to-local, align 1
  %v7_104d4 = icmp eq i32 %v1_fe6c, 193
  store i1 %v7_104d4, i1* %cpsr_z.global-to-local, align 1
  %v2_104d8 = xor i1 %v2_104d4, true
  %v3_104d8 = or i1 %v7_104d4, %v2_104d8
  br i1 %v3_104d8, label %dec_label_pc_fe54, label %dec_label_pc_104dc

dec_label_pc_104dc:                               ; preds = %dec_label_pc_104d4, %thread-pre-split167
  %v7_104dc = icmp eq i32 %v1_fe58, 139
  %.1974 = zext i1 %v7_104dc to i32
  store i32 %.1974, i32* %r3.global-to-local, align 4
  store i1 %v2_10218, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10218, i1* %cpsr_z.global-to-local, align 1
  %v2_104f0 = xor i1 %v2_10218, true
  %v3_104f0 = or i1 %v7_10218, %v2_104f0
  br i1 %v3_104f0, label %bb1474, label %bb1475

bb1474:                                           ; preds = %dec_label_pc_104dc
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1475

bb1475:                                           ; preds = %dec_label_pc_104dc, %bb1474
  %v4_104f4 = phi i32 [ %.1974, %dec_label_pc_104dc ], [ 0, %bb1474 ]
  %v2_104f4 = xor i1 %v7_10218, true
  %v3_104f4 = and i1 %v2_10218, %v2_104f4
  br i1 %v3_104f4, label %bb1476, label %thread-pre-split169

bb1476:                                           ; preds = %bb1475
  store i32 %v4_104f4, i32* %r3.global-to-local, align 4
  br label %thread-pre-split169

thread-pre-split169:                              ; preds = %bb1475, %bb1476
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_104f8 = icmp eq i32 %v4_104f4, 0
  store i1 %v2_104f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_104f8, label %dec_label_pc_10508, label %dec_label_pc_10500

dec_label_pc_10500:                               ; preds = %thread-pre-split169
  %v2_10500 = icmp ugt i32 %v1_fe6c, 141
  store i1 %v2_10500, i1* %cpsr_c.global-to-local, align 1
  %v7_10500 = icmp eq i32 %v1_fe6c, 142
  store i1 %v7_10500, i1* %cpsr_z.global-to-local, align 1
  %v2_10504 = xor i1 %v2_10500, true
  %v3_10504 = or i1 %v7_10500, %v2_10504
  br i1 %v3_10504, label %dec_label_pc_fe54, label %dec_label_pc_10508

dec_label_pc_10508:                               ; preds = %dec_label_pc_10500, %thread-pre-split169
  store i32 %v1_fe6c, i32* %fp.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10508 = icmp eq i32 %v1_fe6c, 0
  store i1 %v2_10508, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10508, label %bb1478, label %bb1477

bb1477:                                           ; preds = %dec_label_pc_10508
  store i32 1, i32* %fp.global-to-local, align 4
  br label %bb1478

bb1478:                                           ; preds = %dec_label_pc_10508, %bb1477
  %v0_114cc = phi i32 [ 0, %dec_label_pc_10508 ], [ 1, %bb1477 ]
  store i32 %v0_114cc, i32* %r3.global-to-local, align 4
  %v2_10514 = icmp ugt i32 %v1_fe58, 139
  store i1 %v2_10514, i1* %cpsr_c.global-to-local, align 1
  %v7_10514 = icmp eq i32 %v1_fe58, 140
  store i1 %v7_10514, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10514, label %bb1479, label %.thread1124

.thread1124:                                      ; preds = %bb1478
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10534

bb1479:                                           ; preds = %bb1478
  store i32 %v0_114cc, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10520 = icmp eq i32 %v0_114cc, 0
  store i1 %v2_10520, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10520, label %dec_label_pc_10534, label %dec_label_pc_1052c

dec_label_pc_1052c:                               ; preds = %bb1479
  store i1 %v2_10084, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10084, i1* %cpsr_z.global-to-local, align 1
  %v2_10530 = xor i1 %v2_10084, true
  %v3_10530 = or i1 %v7_10084, %v2_10530
  br i1 %v3_10530, label %dec_label_pc_fe54, label %dec_label_pc_10534

dec_label_pc_10534:                               ; preds = %.thread1124, %dec_label_pc_1052c, %bb1479
  %v0_105201126 = phi i32 [ 0, %.thread1124 ], [ 1, %dec_label_pc_1052c ], [ 0, %bb1479 ]
  store i1 %v2_10174, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10174, i1* %cpsr_z.global-to-local, align 1
  %v2_10538 = xor i1 %v2_10174, true
  %v3_10538 = or i1 %v7_10174, %v2_10538
  br i1 %v3_10538, label %bb1480, label %bb1481

bb1480:                                           ; preds = %dec_label_pc_10534
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1481

bb1481:                                           ; preds = %dec_label_pc_10534, %bb1480
  %v0_10540796 = phi i32 [ %v0_105201126, %dec_label_pc_10534 ], [ 0, %bb1480 ]
  %v2_1053c = xor i1 %v7_10174, true
  %v3_1053c = and i1 %v2_10174, %v2_1053c
  br i1 %v3_1053c, label %bb1482, label %bb1483

bb1482:                                           ; preds = %bb1481
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1483

bb1483:                                           ; preds = %bb1481, %bb1482
  %v0_10540 = phi i32 [ %v0_10540796, %bb1481 ], [ 1, %bb1482 ]
  %v2_10544 = icmp ugt i32 %v1_fe58, 142
  store i1 %v2_10544, i1* %cpsr_c.global-to-local, align 1
  %v7_10544 = icmp eq i32 %v1_fe58, 143
  store i1 %v7_10544, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10544, label %.thread171, label %.thread172

.thread172:                                       ; preds = %bb1483
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10560

.thread171:                                       ; preds = %bb1483
  %v2_1054c = urem i32 %v0_10540, 2
  store i32 %v2_1054c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10550 = icmp eq i32 %v2_1054c, 0
  store i1 %v2_10550, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10550, label %dec_label_pc_10560, label %dec_label_pc_10558

dec_label_pc_10558:                               ; preds = %.thread171
  %v2_10558 = icmp ugt i32 %v1_fe6c, 231
  store i1 %v2_10558, i1* %cpsr_c.global-to-local, align 1
  %v7_10558 = icmp eq i32 %v1_fe6c, 232
  store i1 %v7_10558, i1* %cpsr_z.global-to-local, align 1
  %v2_1055c = xor i1 %v2_10558, true
  %v3_1055c = or i1 %v7_10558, %v2_1055c
  br i1 %v3_1055c, label %dec_label_pc_fe54, label %dec_label_pc_10560

dec_label_pc_10560:                               ; preds = %.thread172, %dec_label_pc_10558, %.thread171
  %v7_10560 = icmp eq i32 %v1_fe58, 144
  %.1975 = zext i1 %v7_10560 to i32
  store i32 %.1975, i32* %r3.global-to-local, align 4
  store i1 %v2_ff40, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ff40, i1* %cpsr_z.global-to-local, align 1
  %v2_10570 = xor i1 %v2_ff40, true
  %v3_10570 = or i1 %v7_ff40, %v2_10570
  br i1 %v3_10570, label %.thread177, label %bb1486

.thread177:                                       ; preds = %dec_label_pc_10560
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10584

bb1486:                                           ; preds = %dec_label_pc_10560
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10574 = icmp eq i1 %v7_10560, false
  store i1 %v2_10574, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10574, label %dec_label_pc_10584, label %dec_label_pc_1057c

dec_label_pc_1057c:                               ; preds = %bb1486
  %v2_1057c = icmp ugt i32 %v1_fe6c, 251
  store i1 %v2_1057c, i1* %cpsr_c.global-to-local, align 1
  %v7_1057c = icmp eq i32 %v1_fe6c, 252
  store i1 %v7_1057c, i1* %cpsr_z.global-to-local, align 1
  %v2_10580 = xor i1 %v2_1057c, true
  %v3_10580 = or i1 %v7_1057c, %v2_10580
  br i1 %v3_10580, label %dec_label_pc_fe54, label %dec_label_pc_10584

dec_label_pc_10584:                               ; preds = %.thread177, %dec_label_pc_1057c, %bb1486
  %v0_10590.pr800 = phi i32 [ 0, %.thread177 ], [ 1, %dec_label_pc_1057c ], [ 0, %bb1486 ]
  %v2_10584 = icmp ugt i32 %v1_fe6c, 163
  store i1 %v2_10584, i1* %cpsr_c.global-to-local, align 1
  %v7_10584 = icmp eq i32 %v1_fe6c, 164
  store i1 %v7_10584, i1* %cpsr_z.global-to-local, align 1
  %v2_10588 = xor i1 %v2_10584, true
  %v3_10588 = or i1 %v7_10584, %v2_10588
  br i1 %v3_10588, label %bb1487, label %bb1488

bb1487:                                           ; preds = %dec_label_pc_10584
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1488

bb1488:                                           ; preds = %dec_label_pc_10584, %bb1487
  %v0_10590.pr = phi i32 [ %v0_10590.pr800, %dec_label_pc_10584 ], [ 0, %bb1487 ]
  %v2_1058c = xor i1 %v7_10584, true
  %v3_1058c = and i1 %v2_10584, %v2_1058c
  br i1 %v3_1058c, label %bb1489, label %thread-pre-split180

bb1489:                                           ; preds = %bb1488
  store i32 %.1941, i32* %r3.global-to-local, align 4
  br label %thread-pre-split180

thread-pre-split180:                              ; preds = %bb1488, %bb1489
  %v0_10590 = phi i32 [ %.1941, %bb1489 ], [ %v0_10590.pr, %bb1488 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10590 = icmp eq i32 %v0_10590, 0
  store i1 %v2_10590, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10590, label %dec_label_pc_105a0, label %dec_label_pc_10598

dec_label_pc_10598:                               ; preds = %thread-pre-split180
  %v2_10598 = icmp ugt i32 %v1_fe6c, 164
  store i1 %v2_10598, i1* %cpsr_c.global-to-local, align 1
  %v7_10598 = icmp eq i32 %v1_fe6c, 165
  store i1 %v7_10598, i1* %cpsr_z.global-to-local, align 1
  %v2_1059c = xor i1 %v2_10598, true
  %v3_1059c = or i1 %v7_10598, %v2_1059c
  br i1 %v3_1059c, label %dec_label_pc_fe54, label %dec_label_pc_105a0

dec_label_pc_105a0:                               ; preds = %dec_label_pc_10598, %thread-pre-split180
  store i32 %v0_103b4, i32* %fp.global-to-local, align 4
  %v2_105a4 = and i32 %v0_103b4, %.1945
  %v4_105a4 = icmp eq i32 %v2_105a4, 0
  store i1 %v4_105a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_105a4, label %dec_label_pc_105b4, label %dec_label_pc_105ac

dec_label_pc_105ac:                               ; preds = %dec_label_pc_105a0
  %v2_105ac = icmp ugt i32 %v1_fe6c, 41
  store i1 %v2_105ac, i1* %cpsr_c.global-to-local, align 1
  %v7_105ac = icmp eq i32 %v1_fe6c, 42
  store i1 %v7_105ac, i1* %cpsr_z.global-to-local, align 1
  %v2_105b0 = xor i1 %v2_105ac, true
  %v3_105b0 = or i1 %v7_105ac, %v2_105b0
  br i1 %v3_105b0, label %dec_label_pc_fe54, label %dec_label_pc_105b4

dec_label_pc_105b4:                               ; preds = %dec_label_pc_105ac, %dec_label_pc_105a0
  store i1 %v2_101c0, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_101c0, i1* %cpsr_z.global-to-local, align 1
  %v2_105b8 = xor i1 %v2_101c0, true
  %v3_105b8 = or i1 %v7_101c0, %v2_105b8
  br i1 %v3_105b8, label %bb1490, label %bb1491

bb1490:                                           ; preds = %dec_label_pc_105b4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1491

bb1491:                                           ; preds = %dec_label_pc_105b4, %bb1490
  %v1_105c0803 = phi i32 [ %v0_10590, %dec_label_pc_105b4 ], [ 0, %bb1490 ]
  %v2_105bc = xor i1 %v7_101c0, true
  %v3_105bc = and i1 %v2_101c0, %v2_105bc
  br i1 %v3_105bc, label %bb1492, label %bb1493

bb1492:                                           ; preds = %bb1491
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1493

bb1493:                                           ; preds = %bb1491, %bb1492
  %v1_105c0 = phi i32 [ %v1_105c0803, %bb1491 ], [ 1, %bb1492 ]
  %v2_105c0 = and i32 %v1_105c0, %.1945
  %v4_105c0 = icmp eq i32 %v2_105c0, 0
  store i1 %v4_105c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_105c0, label %dec_label_pc_105d4, label %dec_label_pc_105cc

dec_label_pc_105cc:                               ; preds = %bb1493
  %v2_105cc = icmp ugt i32 %v1_fe6c, 103
  store i1 %v2_105cc, i1* %cpsr_c.global-to-local, align 1
  %v7_105cc = icmp eq i32 %v1_fe6c, 104
  store i1 %v7_105cc, i1* %cpsr_z.global-to-local, align 1
  %v2_105d0 = xor i1 %v2_105cc, true
  %v3_105d0 = or i1 %v7_105cc, %v2_105d0
  br i1 %v3_105d0, label %dec_label_pc_fe54, label %dec_label_pc_105d4

dec_label_pc_105d4:                               ; preds = %dec_label_pc_105cc, %bb1493
  %v2_105d4 = icmp ugt i32 %v1_fe6c, 166
  store i1 %v2_105d4, i1* %cpsr_c.global-to-local, align 1
  %v7_105d4 = icmp eq i32 %v1_fe6c, 167
  store i1 %v7_105d4, i1* %cpsr_z.global-to-local, align 1
  %v2_105d8 = xor i1 %v2_105d4, true
  %v3_105d8 = or i1 %v7_105d4, %v2_105d8
  br i1 %v3_105d8, label %bb1494, label %bb1495

bb1494:                                           ; preds = %dec_label_pc_105d4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1495

bb1495:                                           ; preds = %dec_label_pc_105d4, %bb1494
  %v0_105e0.pr = phi i32 [ %v1_105c0, %dec_label_pc_105d4 ], [ 0, %bb1494 ]
  %v2_105dc = xor i1 %v7_105d4, true
  %v3_105dc = and i1 %v2_105d4, %v2_105dc
  br i1 %v3_105dc, label %bb1496, label %thread-pre-split181

bb1496:                                           ; preds = %bb1495
  store i32 %.1945, i32* %r3.global-to-local, align 4
  br label %thread-pre-split181

thread-pre-split181:                              ; preds = %bb1495, %bb1496
  %v0_105e0 = phi i32 [ %.1945, %bb1496 ], [ %v0_105e0.pr, %bb1495 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_105e0 = icmp eq i32 %v0_105e0, 0
  store i1 %v2_105e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_105e0, label %dec_label_pc_105f0, label %dec_label_pc_105e8

dec_label_pc_105e8:                               ; preds = %thread-pre-split181
  %v2_105e8 = icmp ugt i32 %v1_fe6c, 168
  store i1 %v2_105e8, i1* %cpsr_c.global-to-local, align 1
  %v7_105e8 = icmp eq i32 %v1_fe6c, 169
  store i1 %v7_105e8, i1* %cpsr_z.global-to-local, align 1
  %v2_105ec = xor i1 %v2_105e8, true
  %v3_105ec = or i1 %v7_105e8, %v2_105ec
  br i1 %v3_105ec, label %dec_label_pc_fe54, label %dec_label_pc_105f0

dec_label_pc_105f0:                               ; preds = %dec_label_pc_105e8, %thread-pre-split181
  %v2_105f0 = icmp ugt i32 %v1_fe6c, 196
  store i1 %v2_105f0, i1* %cpsr_c.global-to-local, align 1
  %v7_105f0 = icmp eq i32 %v1_fe6c, 197
  store i1 %v7_105f0, i1* %cpsr_z.global-to-local, align 1
  %v2_105f4 = xor i1 %v2_105f0, true
  %v3_105f4 = or i1 %v7_105f0, %v2_105f4
  br i1 %v3_105f4, label %bb1497, label %bb1498

bb1497:                                           ; preds = %dec_label_pc_105f0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1498

bb1498:                                           ; preds = %dec_label_pc_105f0, %bb1497
  %v0_105fc.pr = phi i32 [ %v0_105e0, %dec_label_pc_105f0 ], [ 0, %bb1497 ]
  %v2_105f8 = xor i1 %v7_105f0, true
  %v3_105f8 = and i1 %v2_105f0, %v2_105f8
  br i1 %v3_105f8, label %bb1499, label %thread-pre-split182

bb1499:                                           ; preds = %bb1498
  store i32 %.1945, i32* %r3.global-to-local, align 4
  br label %thread-pre-split182

thread-pre-split182:                              ; preds = %bb1498, %bb1499
  %v0_105fc = phi i32 [ %.1945, %bb1499 ], [ %v0_105fc.pr, %bb1498 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_105fc = icmp eq i32 %v0_105fc, 0
  store i1 %v2_105fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_105fc, label %dec_label_pc_1060c, label %dec_label_pc_10604

dec_label_pc_10604:                               ; preds = %thread-pre-split182
  %v2_10604 = icmp ugt i32 %v1_fe6c, 198
  store i1 %v2_10604, i1* %cpsr_c.global-to-local, align 1
  %v7_10604 = icmp eq i32 %v1_fe6c, 199
  store i1 %v7_10604, i1* %cpsr_z.global-to-local, align 1
  %v2_10608 = xor i1 %v2_10604, true
  %v3_10608 = or i1 %v7_10604, %v2_10608
  br i1 %v3_10608, label %dec_label_pc_fe54, label %dec_label_pc_1060c

dec_label_pc_1060c:                               ; preds = %dec_label_pc_10604, %thread-pre-split182
  %v2_1060c = icmp ugt i32 %v1_fe6c, 236
  store i1 %v2_1060c, i1* %cpsr_c.global-to-local, align 1
  %v7_1060c = icmp eq i32 %v1_fe6c, 237
  store i1 %v7_1060c, i1* %cpsr_z.global-to-local, align 1
  %v2_10610 = xor i1 %v2_1060c, true
  %v3_10610 = or i1 %v7_1060c, %v2_10610
  br i1 %v3_10610, label %bb1500, label %bb1501

bb1500:                                           ; preds = %dec_label_pc_1060c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1501

bb1501:                                           ; preds = %dec_label_pc_1060c, %bb1500
  %v0_10618.pr = phi i32 [ %v0_105fc, %dec_label_pc_1060c ], [ 0, %bb1500 ]
  %v2_10614 = xor i1 %v7_1060c, true
  %v3_10614 = and i1 %v2_1060c, %v2_10614
  br i1 %v3_10614, label %bb1502, label %thread-pre-split183

bb1502:                                           ; preds = %bb1501
  store i32 %.1945, i32* %r3.global-to-local, align 4
  br label %thread-pre-split183

thread-pre-split183:                              ; preds = %bb1501, %bb1502
  %v0_10618 = phi i32 [ %.1945, %bb1502 ], [ %v0_10618.pr, %bb1501 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10618 = icmp eq i32 %v0_10618, 0
  store i1 %v2_10618, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10618, label %dec_label_pc_10628, label %dec_label_pc_10620

dec_label_pc_10620:                               ; preds = %thread-pre-split183
  %v2_10620 = icmp eq i32 %v1_fe6c, 255
  store i1 %v2_10620, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_10620, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10620, label %dec_label_pc_10628, label %dec_label_pc_fe54

dec_label_pc_10628:                               ; preds = %dec_label_pc_10620, %thread-pre-split183
  %v2_10628 = icmp ugt i32 %v1_fe6c, 111
  store i1 %v2_10628, i1* %cpsr_c.global-to-local, align 1
  %v7_10628 = icmp eq i32 %v1_fe6c, 112
  store i1 %v7_10628, i1* %cpsr_z.global-to-local, align 1
  %v2_1062c = xor i1 %v2_10628, true
  %v3_1062c = or i1 %v7_10628, %v2_1062c
  br i1 %v3_1062c, label %bb1503, label %bb1504

bb1503:                                           ; preds = %dec_label_pc_10628
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1504

bb1504:                                           ; preds = %dec_label_pc_10628, %bb1503
  %v0_10634.pr = phi i32 [ %v0_10618, %dec_label_pc_10628 ], [ 0, %bb1503 ]
  %v2_10630 = xor i1 %v7_10628, true
  %v3_10630 = and i1 %v2_10628, %v2_10630
  br i1 %v3_10630, label %bb1505, label %thread-pre-split184

bb1505:                                           ; preds = %bb1504
  store i32 %.1947, i32* %r3.global-to-local, align 4
  br label %thread-pre-split184

thread-pre-split184:                              ; preds = %bb1504, %bb1505
  %v0_10634 = phi i32 [ %.1947, %bb1505 ], [ %v0_10634.pr, %bb1504 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10634 = icmp eq i32 %v0_10634, 0
  store i1 %v2_10634, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10634, label %dec_label_pc_10644, label %dec_label_pc_1063c

dec_label_pc_1063c:                               ; preds = %thread-pre-split184
  store i1 %v2_ff80, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ff80, i1* %cpsr_z.global-to-local, align 1
  %v2_10640 = xor i1 %v2_ff80, true
  %v3_10640 = or i1 %v7_ff80, %v2_10640
  br i1 %v3_10640, label %dec_label_pc_fe54, label %dec_label_pc_10644

dec_label_pc_10644:                               ; preds = %dec_label_pc_1063c, %thread-pre-split184
  store i32 %.1950, i32* %r3.global-to-local, align 4
  %v2_10648 = icmp ugt i32 %v1_fe6c, 149
  store i1 %v2_10648, i1* %cpsr_c.global-to-local, align 1
  %v7_10648 = icmp eq i32 %v1_fe6c, 150
  store i1 %v7_10648, i1* %cpsr_z.global-to-local, align 1
  %v2_1064c = xor i1 %v2_10648, true
  %v3_1064c = or i1 %v7_10648, %v2_1064c
  br i1 %v3_1064c, label %bb1506, label %bb1507

bb1506:                                           ; preds = %dec_label_pc_10644
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1507

bb1507:                                           ; preds = %dec_label_pc_10644, %bb1506
  %v4_10650 = phi i32 [ %.1950, %dec_label_pc_10644 ], [ 0, %bb1506 ]
  %v2_10650 = xor i1 %v7_10648, true
  %v3_10650 = and i1 %v2_10648, %v2_10650
  br i1 %v3_10650, label %bb1508, label %thread-pre-split185

bb1508:                                           ; preds = %bb1507
  store i32 %v4_10650, i32* %r3.global-to-local, align 4
  br label %thread-pre-split185

thread-pre-split185:                              ; preds = %bb1507, %bb1508
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10654 = icmp eq i32 %v4_10650, 0
  store i1 %v2_10654, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10654, label %dec_label_pc_10664, label %dec_label_pc_1065c

dec_label_pc_1065c:                               ; preds = %thread-pre-split185
  store i1 %v2_ff54, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ff54, i1* %cpsr_z.global-to-local, align 1
  %v2_10660 = xor i1 %v2_ff54, true
  %v3_10660 = or i1 %v7_ff54, %v2_10660
  br i1 %v3_10660, label %dec_label_pc_fe54, label %dec_label_pc_10664

dec_label_pc_10664:                               ; preds = %dec_label_pc_1065c, %thread-pre-split185
  %v7_10664 = icmp eq i32 %v1_fe58, 153
  %.1976 = zext i1 %v7_10664 to i32
  store i32 %.1976, i32* %r3.global-to-local, align 4
  %v2_10670 = icmp ugt i32 %v1_fe6c, 19
  store i1 %v2_10670, i1* %cpsr_c.global-to-local, align 1
  %v7_10670 = icmp eq i32 %v1_fe6c, 20
  store i1 %v7_10670, i1* %cpsr_z.global-to-local, align 1
  %v2_10674 = xor i1 %v2_10670, true
  %v3_10674 = or i1 %v7_10670, %v2_10674
  br i1 %v3_10674, label %.thread188, label %bb1511

.thread188:                                       ; preds = %dec_label_pc_10664
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10688

bb1511:                                           ; preds = %dec_label_pc_10664
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10678 = icmp eq i1 %v7_10664, false
  store i1 %v2_10678, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10678, label %dec_label_pc_10688, label %dec_label_pc_10680

dec_label_pc_10680:                               ; preds = %bb1511
  %v2_10680 = icmp ugt i32 %v1_fe6c, 30
  store i1 %v2_10680, i1* %cpsr_c.global-to-local, align 1
  %v7_10680 = icmp eq i32 %v1_fe6c, 31
  store i1 %v7_10680, i1* %cpsr_z.global-to-local, align 1
  %v2_10684 = xor i1 %v2_10680, true
  %v3_10684 = or i1 %v7_10680, %v2_10684
  br i1 %v3_10684, label %dec_label_pc_fe54, label %dec_label_pc_10688

dec_label_pc_10688:                               ; preds = %.thread188, %dec_label_pc_10680, %bb1511
  store i32 %.1954, i32* %r4.global-to-local, align 4
  %v2_1068c = and i32 %v1_1068c, %.1954
  %v4_1068c = icmp eq i32 %v2_1068c, 0
  store i1 %v4_1068c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_1068c, label %dec_label_pc_1069c, label %dec_label_pc_10694

dec_label_pc_10694:                               ; preds = %dec_label_pc_10688
  %v2_10694 = icmp ugt i32 %v1_fe6c, 8
  store i1 %v2_10694, i1* %cpsr_c.global-to-local, align 1
  %v7_10694 = icmp eq i32 %v1_fe6c, 9
  store i1 %v7_10694, i1* %cpsr_z.global-to-local, align 1
  %v2_10698 = xor i1 %v2_10694, true
  %v3_10698 = or i1 %v7_10694, %v2_10698
  br i1 %v3_10698, label %dec_label_pc_fe54, label %dec_label_pc_1069c

dec_label_pc_1069c:                               ; preds = %dec_label_pc_10694, %dec_label_pc_10688
  store i32 %.1954, i32* %r3.global-to-local, align 4
  %v2_106a0 = icmp ugt i32 %v1_fe6c, 72
  store i1 %v2_106a0, i1* %cpsr_c.global-to-local, align 1
  %v7_106a0 = icmp eq i32 %v1_fe6c, 73
  store i1 %v7_106a0, i1* %cpsr_z.global-to-local, align 1
  %v2_106a4 = xor i1 %v2_106a0, true
  %v3_106a4 = or i1 %v7_106a0, %v2_106a4
  br i1 %v3_106a4, label %bb1512, label %bb1513

bb1512:                                           ; preds = %dec_label_pc_1069c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1513

bb1513:                                           ; preds = %dec_label_pc_1069c, %bb1512
  %v4_106a8 = phi i32 [ %.1954, %dec_label_pc_1069c ], [ 0, %bb1512 ]
  %v2_106a8 = xor i1 %v7_106a0, true
  %v3_106a8 = and i1 %v2_106a0, %v2_106a8
  br i1 %v3_106a8, label %bb1514, label %thread-pre-split191

bb1514:                                           ; preds = %bb1513
  store i32 %v4_106a8, i32* %r3.global-to-local, align 4
  br label %thread-pre-split191

thread-pre-split191:                              ; preds = %bb1513, %bb1514
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_106ac = icmp eq i32 %v4_106a8, 0
  store i1 %v2_106ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_106ac, label %dec_label_pc_106bc, label %dec_label_pc_106b4

dec_label_pc_106b4:                               ; preds = %thread-pre-split191
  %v2_106b4 = icmp ugt i32 %v1_fe6c, 87
  store i1 %v2_106b4, i1* %cpsr_c.global-to-local, align 1
  %v7_106b4 = icmp eq i32 %v1_fe6c, 88
  store i1 %v7_106b4, i1* %cpsr_z.global-to-local, align 1
  %v2_106b8 = xor i1 %v2_106b4, true
  %v3_106b8 = or i1 %v7_106b4, %v2_106b8
  br i1 %v3_106b8, label %dec_label_pc_fe54, label %dec_label_pc_106bc

dec_label_pc_106bc:                               ; preds = %dec_label_pc_106b4, %thread-pre-split191
  store i32 %.1954, i32* %r3.global-to-local, align 4
  %v2_106c0 = icmp ugt i32 %v1_fe6c, 211
  store i1 %v2_106c0, i1* %cpsr_c.global-to-local, align 1
  %v7_106c0 = icmp eq i32 %v1_fe6c, 212
  store i1 %v7_106c0, i1* %cpsr_z.global-to-local, align 1
  %v2_106c4 = xor i1 %v2_106c0, true
  %v3_106c4 = or i1 %v7_106c0, %v2_106c4
  br i1 %v3_106c4, label %bb1515, label %bb1516

bb1515:                                           ; preds = %dec_label_pc_106bc
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1516

bb1516:                                           ; preds = %dec_label_pc_106bc, %bb1515
  %v4_106c8 = phi i32 [ %.1954, %dec_label_pc_106bc ], [ 0, %bb1515 ]
  %v2_106c8 = xor i1 %v7_106c0, true
  %v3_106c8 = and i1 %v2_106c0, %v2_106c8
  br i1 %v3_106c8, label %bb1517, label %thread-pre-split192

bb1517:                                           ; preds = %bb1516
  store i32 %v4_106c8, i32* %r3.global-to-local, align 4
  br label %thread-pre-split192

thread-pre-split192:                              ; preds = %bb1516, %bb1517
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_106cc = icmp eq i32 %v4_106c8, 0
  store i1 %v2_106cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_106cc, label %dec_label_pc_106dc, label %dec_label_pc_106d4

dec_label_pc_106d4:                               ; preds = %thread-pre-split192
  %v2_106d4 = icmp ugt i32 %v1_fe6c, 220
  store i1 %v2_106d4, i1* %cpsr_c.global-to-local, align 1
  %v7_106d4 = icmp eq i32 %v1_fe6c, 221
  store i1 %v7_106d4, i1* %cpsr_z.global-to-local, align 1
  %v2_106d8 = xor i1 %v2_106d4, true
  %v3_106d8 = or i1 %v7_106d4, %v2_106d8
  br i1 %v3_106d8, label %dec_label_pc_fe54, label %dec_label_pc_106dc

dec_label_pc_106dc:                               ; preds = %dec_label_pc_106d4, %thread-pre-split192
  store i32 %.1952, i32* %r3.global-to-local, align 4
  store i1 %v2_ffdc, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ffdc, i1* %cpsr_z.global-to-local, align 1
  %v2_106e4 = xor i1 %v2_ffdc, true
  %v3_106e4 = or i1 %v7_ffdc, %v2_106e4
  br i1 %v3_106e4, label %bb1518, label %bb1519

bb1518:                                           ; preds = %dec_label_pc_106dc
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1519

bb1519:                                           ; preds = %dec_label_pc_106dc, %bb1518
  %v4_106e8 = phi i32 [ %.1952, %dec_label_pc_106dc ], [ 0, %bb1518 ]
  %v2_106e8 = xor i1 %v7_ffdc, true
  %v3_106e8 = and i1 %v2_ffdc, %v2_106e8
  br i1 %v3_106e8, label %bb1520, label %thread-pre-split193

bb1520:                                           ; preds = %bb1519
  store i32 %v4_106e8, i32* %r3.global-to-local, align 4
  br label %thread-pre-split193

thread-pre-split193:                              ; preds = %bb1519, %bb1520
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_106ec = icmp eq i32 %v4_106e8, 0
  store i1 %v2_106ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_106ec, label %dec_label_pc_106fc, label %dec_label_pc_106f4

dec_label_pc_106f4:                               ; preds = %thread-pre-split193
  %v2_106f4 = icmp ugt i32 %v1_fe6c, 152
  store i1 %v2_106f4, i1* %cpsr_c.global-to-local, align 1
  %v7_106f4 = icmp eq i32 %v1_fe6c, 153
  store i1 %v7_106f4, i1* %cpsr_z.global-to-local, align 1
  %v2_106f8 = xor i1 %v2_106f4, true
  %v3_106f8 = or i1 %v7_106f4, %v2_106f8
  br i1 %v3_106f8, label %dec_label_pc_fe54, label %dec_label_pc_106fc

dec_label_pc_106fc:                               ; preds = %dec_label_pc_106f4, %thread-pre-split193
  store i32 %v0_114cc, i32* %fp.global-to-local, align 4
  %v2_10700 = icmp ugt i32 %v1_fe58, 157
  store i1 %v2_10700, i1* %cpsr_c.global-to-local, align 1
  %v7_10700 = icmp eq i32 %v1_fe58, 158
  %.1977 = zext i1 %v7_10700 to i32
  store i32 %.1977, i32* %r3.global-to-local, align 4
  %v2_1070c = and i32 %v0_114cc, %.1977
  %v4_1070c = icmp eq i32 %v2_1070c, 0
  store i1 %v4_1070c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_1070c, label %dec_label_pc_1071c, label %dec_label_pc_10714

dec_label_pc_10714:                               ; preds = %dec_label_pc_106fc
  store i1 %v2_10670, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10670, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_10674, label %dec_label_pc_fe54, label %dec_label_pc_1071c

dec_label_pc_1071c:                               ; preds = %dec_label_pc_10714, %dec_label_pc_106fc
  %v2_1071c = icmp ugt i32 %v1_fe6c, 233
  store i1 %v2_1071c, i1* %cpsr_c.global-to-local, align 1
  %v7_1071c = icmp eq i32 %v1_fe6c, 234
  store i1 %v7_1071c, i1* %cpsr_z.global-to-local, align 1
  %v2_10720 = xor i1 %v2_1071c, true
  %v3_10720 = or i1 %v7_1071c, %v2_10720
  br i1 %v3_10720, label %bb1523, label %bb1524

bb1523:                                           ; preds = %dec_label_pc_1071c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1524

bb1524:                                           ; preds = %dec_label_pc_1071c, %bb1523
  %v4_10724 = phi i32 [ %.1977, %dec_label_pc_1071c ], [ 0, %bb1523 ]
  %v2_10724 = xor i1 %v7_1071c, true
  %v3_10724 = and i1 %v2_1071c, %v2_10724
  br i1 %v3_10724, label %bb1525, label %thread-pre-split195

bb1525:                                           ; preds = %bb1524
  store i32 %v4_10724, i32* %r3.global-to-local, align 4
  br label %thread-pre-split195

thread-pre-split195:                              ; preds = %bb1524, %bb1525
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10728 = icmp eq i32 %v4_10724, 0
  store i1 %v2_10728, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10728, label %dec_label_pc_10738, label %dec_label_pc_10730

dec_label_pc_10730:                               ; preds = %thread-pre-split195
  %v2_10730 = icmp ugt i32 %v1_fe6c, 245
  store i1 %v2_10730, i1* %cpsr_c.global-to-local, align 1
  %v7_10730 = icmp eq i32 %v1_fe6c, 246
  store i1 %v7_10730, i1* %cpsr_z.global-to-local, align 1
  %v2_10734 = xor i1 %v2_10730, true
  %v3_10734 = or i1 %v7_10730, %v2_10734
  br i1 %v3_10734, label %dec_label_pc_fe54, label %dec_label_pc_10738

dec_label_pc_10738:                               ; preds = %dec_label_pc_10730, %thread-pre-split195
  %v7_10738 = icmp eq i32 %v1_fe58, 159
  %.1978 = zext i1 %v7_10738 to i32
  store i32 %.1978, i32* %lr.global-to-local, align 4
  %v2_10744 = icmp ugt i32 %v1_fe6c, 118
  store i1 %v2_10744, i1* %cpsr_c.global-to-local, align 1
  %v7_10744 = icmp eq i32 %v1_fe6c, 119
  store i1 %v7_10744, i1* %cpsr_z.global-to-local, align 1
  %v2_10748 = xor i1 %v2_10744, true
  %v3_10748 = or i1 %v7_10744, %v2_10748
  br i1 %v3_10748, label %bb1528, label %bb1529

bb1528:                                           ; preds = %dec_label_pc_10738
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1529

bb1529:                                           ; preds = %dec_label_pc_10738, %bb1528
  %v0_10750.pr = phi i32 [ %v4_10724, %dec_label_pc_10738 ], [ 0, %bb1528 ]
  %v2_1074c = xor i1 %v7_10744, true
  %v3_1074c = and i1 %v2_10744, %v2_1074c
  br i1 %v3_1074c, label %bb1530, label %thread-pre-split197

bb1530:                                           ; preds = %bb1529
  store i32 %.1978, i32* %r3.global-to-local, align 4
  br label %thread-pre-split197

thread-pre-split197:                              ; preds = %bb1529, %bb1530
  %v0_10750 = phi i32 [ %.1978, %bb1530 ], [ %v0_10750.pr, %bb1529 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10750 = icmp eq i32 %v0_10750, 0
  store i1 %v2_10750, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10750, label %dec_label_pc_10760, label %dec_label_pc_10758

dec_label_pc_10758:                               ; preds = %thread-pre-split197
  store i1 %v2_102842022, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_102842024, i1* %cpsr_z.global-to-local, align 1
  %v2_1075c = xor i1 %v2_102842022, true
  %v3_1075c = or i1 %v7_102842024, %v2_1075c
  br i1 %v3_1075c, label %dec_label_pc_fe54, label %dec_label_pc_10760

dec_label_pc_10760:                               ; preds = %dec_label_pc_10758, %thread-pre-split197
  %v7_10760 = icmp eq i32 %v1_fe58, 160
  %.1979 = zext i1 %v7_10760 to i32
  store i32 %.1979, i32* %r3.global-to-local, align 4
  %v2_1076c = icmp ugt i32 %v1_fe6c, 130
  store i1 %v2_1076c, i1* %cpsr_c.global-to-local, align 1
  %v7_1076c = icmp eq i32 %v1_fe6c, 131
  store i1 %v7_1076c, i1* %cpsr_z.global-to-local, align 1
  %v2_10770 = xor i1 %v2_1076c, true
  %v3_10770 = or i1 %v7_1076c, %v2_10770
  br i1 %v3_10770, label %.thread200, label %bb1533

.thread200:                                       ; preds = %dec_label_pc_10760
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10784

bb1533:                                           ; preds = %dec_label_pc_10760
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10774 = icmp eq i1 %v7_10760, false
  store i1 %v2_10774, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10774, label %dec_label_pc_10784, label %dec_label_pc_1077c

dec_label_pc_1077c:                               ; preds = %bb1533
  store i1 %v2_10648, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10648, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1064c, label %dec_label_pc_fe54, label %dec_label_pc_10784

dec_label_pc_10784:                               ; preds = %.thread200, %dec_label_pc_1077c, %bb1533
  store i32 %.1966, i32* %r3.global-to-local, align 4
  %v2_10788 = icmp ugt i32 %v1_fe6c, 222
  store i1 %v2_10788, i1* %cpsr_c.global-to-local, align 1
  %v7_10788 = icmp eq i32 %v1_fe6c, 223
  store i1 %v7_10788, i1* %cpsr_z.global-to-local, align 1
  %v2_1078c = xor i1 %v2_10788, true
  %v3_1078c = or i1 %v7_10788, %v2_1078c
  br i1 %v3_1078c, label %bb1534, label %bb1535

bb1534:                                           ; preds = %dec_label_pc_10784
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1535

bb1535:                                           ; preds = %dec_label_pc_10784, %bb1534
  %v4_10790 = phi i32 [ %.1966, %dec_label_pc_10784 ], [ 0, %bb1534 ]
  %v2_10790 = xor i1 %v7_10788, true
  %v3_10790 = and i1 %v2_10788, %v2_10790
  br i1 %v3_10790, label %bb1536, label %thread-pre-split203

bb1536:                                           ; preds = %bb1535
  store i32 %v4_10790, i32* %r3.global-to-local, align 4
  br label %thread-pre-split203

thread-pre-split203:                              ; preds = %bb1535, %bb1536
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10794 = icmp eq i32 %v4_10790, 0
  store i1 %v2_10794, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10794, label %dec_label_pc_107a4, label %dec_label_pc_1079c

dec_label_pc_1079c:                               ; preds = %thread-pre-split203
  %v2_1079c = icmp ugt i32 %v1_fe6c, 225
  store i1 %v2_1079c, i1* %cpsr_c.global-to-local, align 1
  %v7_1079c = icmp eq i32 %v1_fe6c, 226
  store i1 %v7_1079c, i1* %cpsr_z.global-to-local, align 1
  %v2_107a0 = xor i1 %v2_1079c, true
  %v3_107a0 = or i1 %v7_1079c, %v2_107a0
  br i1 %v3_107a0, label %dec_label_pc_fe54, label %dec_label_pc_107a4

dec_label_pc_107a4:                               ; preds = %dec_label_pc_1079c, %thread-pre-split203
  store i32 %.1953, i32* %r3.global-to-local, align 4
  store i32 %v0_10540, i32* %r4.global-to-local, align 4
  %v2_107ac = and i32 %v0_10540, %.1953
  %v4_107ac = icmp eq i32 %v2_107ac, 0
  store i1 %v4_107ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_107ac, label %dec_label_pc_107bc, label %dec_label_pc_107b4

dec_label_pc_107b4:                               ; preds = %dec_label_pc_107a4
  %v2_107b4 = icmp ugt i32 %v1_fe6c, 45
  store i1 %v2_107b4, i1* %cpsr_c.global-to-local, align 1
  %v7_107b4 = icmp eq i32 %v1_fe6c, 46
  store i1 %v7_107b4, i1* %cpsr_z.global-to-local, align 1
  %v2_107b8 = xor i1 %v2_107b4, true
  %v3_107b8 = or i1 %v7_107b4, %v2_107b8
  br i1 %v3_107b8, label %dec_label_pc_fe54, label %dec_label_pc_107bc

dec_label_pc_107bc:                               ; preds = %dec_label_pc_107b4, %dec_label_pc_107a4
  %v7_107bc = icmp eq i32 %v1_fe58, 163
  %.1980 = zext i1 %v7_107bc to i32
  store i32 %.1980, i32* %sb.global-to-local, align 4
  %v2_107c8 = icmp ugt i32 %v1_fe6c, 203
  store i1 %v2_107c8, i1* %cpsr_c.global-to-local, align 1
  %v7_107c8 = icmp eq i32 %v1_fe6c, 204
  store i1 %v7_107c8, i1* %cpsr_z.global-to-local, align 1
  %v2_107cc = xor i1 %v2_107c8, true
  %v3_107cc = or i1 %v7_107c8, %v2_107cc
  br i1 %v3_107cc, label %bb1539, label %bb1540

bb1539:                                           ; preds = %dec_label_pc_107bc
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1540

bb1540:                                           ; preds = %dec_label_pc_107bc, %bb1539
  %v0_107d4.pr = phi i32 [ %.1953, %dec_label_pc_107bc ], [ 0, %bb1539 ]
  %v2_107d0 = xor i1 %v7_107c8, true
  %v3_107d0 = and i1 %v2_107c8, %v2_107d0
  br i1 %v3_107d0, label %bb1541, label %thread-pre-split205

bb1541:                                           ; preds = %bb1540
  store i32 %.1980, i32* %r3.global-to-local, align 4
  br label %thread-pre-split205

thread-pre-split205:                              ; preds = %bb1540, %bb1541
  %v0_107d4 = phi i32 [ %.1980, %bb1541 ], [ %v0_107d4.pr, %bb1540 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_107d4 = icmp eq i32 %v0_107d4, 0
  store i1 %v2_107d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_107d4, label %dec_label_pc_107e4, label %dec_label_pc_107dc

dec_label_pc_107dc:                               ; preds = %thread-pre-split205
  %v2_107dc = icmp ugt i32 %v1_fe6c, 205
  store i1 %v2_107dc, i1* %cpsr_c.global-to-local, align 1
  %v7_107dc = icmp eq i32 %v1_fe6c, 206
  store i1 %v7_107dc, i1* %cpsr_z.global-to-local, align 1
  %v2_107e0 = xor i1 %v2_107dc, true
  %v3_107e0 = or i1 %v7_107dc, %v2_107e0
  br i1 %v3_107e0, label %dec_label_pc_fe54, label %dec_label_pc_107e4

dec_label_pc_107e4:                               ; preds = %dec_label_pc_107dc, %thread-pre-split205
  store i32 %.1955, i32* %fp.global-to-local, align 4
  store i32 %v0_10540, i32* %r3.global-to-local, align 4
  %v2_107ec = and i32 %v0_10540, %.1955
  %v4_107ec = icmp eq i32 %v2_107ec, 0
  store i1 %v4_107ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_107ec, label %dec_label_pc_107fc, label %dec_label_pc_107f4

dec_label_pc_107f4:                               ; preds = %dec_label_pc_107e4
  %v2_107f4 = icmp ugt i32 %v1_fe6c, 48
  store i1 %v2_107f4, i1* %cpsr_c.global-to-local, align 1
  %v7_107f4 = icmp eq i32 %v1_fe6c, 49
  store i1 %v7_107f4, i1* %cpsr_z.global-to-local, align 1
  %v2_107f8 = xor i1 %v2_107f4, true
  %v3_107f8 = or i1 %v7_107f4, %v2_107f8
  br i1 %v3_107f8, label %dec_label_pc_fe54, label %dec_label_pc_107fc

dec_label_pc_107fc:                               ; preds = %dec_label_pc_107f4, %dec_label_pc_107e4
  store i32 %.1955, i32* %r3.global-to-local, align 4
  %v2_10800 = icmp ugt i32 %v1_fe6c, 215
  store i1 %v2_10800, i1* %cpsr_c.global-to-local, align 1
  %v7_10800 = icmp eq i32 %v1_fe6c, 216
  store i1 %v7_10800, i1* %cpsr_z.global-to-local, align 1
  %v2_10804 = xor i1 %v2_10800, true
  %v3_10804 = or i1 %v7_10800, %v2_10804
  br i1 %v3_10804, label %bb1542, label %bb1543

bb1542:                                           ; preds = %dec_label_pc_107fc
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1543

bb1543:                                           ; preds = %dec_label_pc_107fc, %bb1542
  %v4_10808 = phi i32 [ %.1955, %dec_label_pc_107fc ], [ 0, %bb1542 ]
  %v2_10808 = xor i1 %v7_10800, true
  %v3_10808 = and i1 %v2_10800, %v2_10808
  br i1 %v3_10808, label %bb1544, label %thread-pre-split206

bb1544:                                           ; preds = %bb1543
  store i32 %v4_10808, i32* %r3.global-to-local, align 4
  br label %thread-pre-split206

thread-pre-split206:                              ; preds = %bb1543, %bb1544
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1080c = icmp eq i32 %v4_10808, 0
  store i1 %v2_1080c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1080c, label %dec_label_pc_1081c, label %dec_label_pc_10814

dec_label_pc_10814:                               ; preds = %thread-pre-split206
  %v2_10814 = icmp ugt i32 %v1_fe6c, 231
  store i1 %v2_10814, i1* %cpsr_c.global-to-local, align 1
  %v7_10814 = icmp eq i32 %v1_fe6c, 232
  store i1 %v7_10814, i1* %cpsr_z.global-to-local, align 1
  %v2_10818 = xor i1 %v2_10814, true
  %v3_10818 = or i1 %v7_10814, %v2_10818
  br i1 %v3_10818, label %dec_label_pc_fe54, label %dec_label_pc_1081c

dec_label_pc_1081c:                               ; preds = %dec_label_pc_10814, %thread-pre-split206
  store i32 %.1968, i32* %r3.global-to-local, align 4
  %v2_10820 = icmp ugt i32 %v1_fe6c, 250
  store i1 %v2_10820, i1* %cpsr_c.global-to-local, align 1
  %v7_10820 = icmp eq i32 %v1_fe6c, 251
  store i1 %v7_10820, i1* %cpsr_z.global-to-local, align 1
  %v2_10824 = xor i1 %v2_10820, true
  %v3_10824 = or i1 %v7_10820, %v2_10824
  br i1 %v3_10824, label %bb1545, label %bb1546

bb1545:                                           ; preds = %dec_label_pc_1081c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1546

bb1546:                                           ; preds = %dec_label_pc_1081c, %bb1545
  %v4_10828 = phi i32 [ %.1968, %dec_label_pc_1081c ], [ 0, %bb1545 ]
  %v2_10828 = xor i1 %v7_10820, true
  %v3_10828 = and i1 %v2_10820, %v2_10828
  br i1 %v3_10828, label %bb1547, label %thread-pre-split207

bb1547:                                           ; preds = %bb1546
  store i32 %v4_10828, i32* %r3.global-to-local, align 4
  br label %thread-pre-split207

thread-pre-split207:                              ; preds = %bb1546, %bb1547
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1082c = icmp eq i32 %v4_10828, 0
  store i1 %v2_1082c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1082c, label %dec_label_pc_1083c, label %dec_label_pc_10834

dec_label_pc_10834:                               ; preds = %thread-pre-split207
  %v2_10834 = icmp ugt i32 %v1_fe6c, 252
  store i1 %v2_10834, i1* %cpsr_c.global-to-local, align 1
  %v7_10834 = icmp eq i32 %v1_fe6c, 253
  store i1 %v7_10834, i1* %cpsr_z.global-to-local, align 1
  %v2_10838 = xor i1 %v2_10834, true
  %v3_10838 = or i1 %v7_10834, %v2_10838
  br i1 %v3_10838, label %dec_label_pc_fe54, label %dec_label_pc_1083c

dec_label_pc_1083c:                               ; preds = %dec_label_pc_10834, %thread-pre-split207
  %v7_1083c = icmp eq i32 %v1_fe58, 199
  %.1981 = zext i1 %v7_1083c to i32
  store i32 %.1981, i32* %r4.global-to-local, align 4
  store i32 %.1981, i32* %r3.global-to-local, align 4
  store i1 %v2_102842022, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_102842024, i1* %cpsr_z.global-to-local, align 1
  %v2_10850 = xor i1 %v2_102842022, true
  %v3_10850 = or i1 %v7_102842024, %v2_10850
  br i1 %v3_10850, label %bb1550, label %bb1551

bb1550:                                           ; preds = %dec_label_pc_1083c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1551

bb1551:                                           ; preds = %dec_label_pc_1083c, %bb1550
  %v4_10854 = phi i32 [ %.1981, %dec_label_pc_1083c ], [ 0, %bb1550 ]
  %v2_10854 = xor i1 %v7_102842024, true
  %v3_10854 = and i1 %v2_102842022, %v2_10854
  br i1 %v3_10854, label %bb1552, label %thread-pre-split209

bb1552:                                           ; preds = %bb1551
  store i32 %v4_10854, i32* %r3.global-to-local, align 4
  br label %thread-pre-split209

thread-pre-split209:                              ; preds = %bb1551, %bb1552
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10858 = icmp eq i32 %v4_10854, 0
  store i1 %v2_10858, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10858, label %dec_label_pc_1086c, label %dec_label_pc_10864

dec_label_pc_10864:                               ; preds = %thread-pre-split209
  %v2_10864 = icmp ugt i32 %v1_fe6c, 252
  store i1 %v2_10864, i1* %cpsr_c.global-to-local, align 1
  %v7_10864 = icmp eq i32 %v1_fe6c, 253
  store i1 %v7_10864, i1* %cpsr_z.global-to-local, align 1
  %v2_10868 = xor i1 %v2_10864, true
  %v3_10868 = or i1 %v7_10864, %v2_10868
  br i1 %v3_10868, label %dec_label_pc_fe54, label %dec_label_pc_1086c

dec_label_pc_1086c:                               ; preds = %dec_label_pc_10864, %thread-pre-split209
  store i32 %v0_114cc, i32* %r3.global-to-local, align 4
  %v2_10870 = icmp ugt i32 %v1_fe58, 204
  store i1 %v2_10870, i1* %cpsr_c.global-to-local, align 1
  %v7_10870 = icmp eq i32 %v1_fe58, 205
  store i1 %v7_10870, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10870, label %.thread210, label %.thread211

.thread211:                                       ; preds = %dec_label_pc_1086c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1088c

.thread210:                                       ; preds = %dec_label_pc_1086c
  store i32 %v0_114cc, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1087c = icmp eq i32 %v0_114cc, 0
  store i1 %v2_1087c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1087c, label %dec_label_pc_1088c, label %dec_label_pc_10884

dec_label_pc_10884:                               ; preds = %.thread210
  %v2_10884 = icmp ugt i32 %v1_fe6c, 116
  store i1 %v2_10884, i1* %cpsr_c.global-to-local, align 1
  %v7_10884 = icmp eq i32 %v1_fe6c, 117
  store i1 %v7_10884, i1* %cpsr_z.global-to-local, align 1
  %v2_10888 = xor i1 %v2_10884, true
  %v3_10888 = or i1 %v7_10884, %v2_10888
  br i1 %v3_10888, label %dec_label_pc_fe54, label %dec_label_pc_1088c

dec_label_pc_1088c:                               ; preds = %.thread211, %dec_label_pc_10884, %.thread210
  store i32 %.1961, i32* %r3.global-to-local, align 4
  store i1 %v2_101d4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_101d4, i1* %cpsr_z.global-to-local, align 1
  %v2_10894 = xor i1 %v2_101d4, true
  %v3_10894 = or i1 %v7_101d4, %v2_10894
  br i1 %v3_10894, label %bb1553, label %bb1554

bb1553:                                           ; preds = %dec_label_pc_1088c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1554

bb1554:                                           ; preds = %dec_label_pc_1088c, %bb1553
  %v4_10898 = phi i32 [ %.1961, %dec_label_pc_1088c ], [ 0, %bb1553 ]
  %v2_10898 = xor i1 %v7_101d4, true
  %v3_10898 = and i1 %v2_101d4, %v2_10898
  br i1 %v3_10898, label %bb1555, label %thread-pre-split214

bb1555:                                           ; preds = %bb1554
  store i32 %v4_10898, i32* %r3.global-to-local, align 4
  br label %thread-pre-split214

thread-pre-split214:                              ; preds = %bb1554, %bb1555
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1089c = icmp eq i32 %v4_10898, 0
  store i1 %v2_1089c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1089c, label %dec_label_pc_108ac, label %dec_label_pc_108a4

dec_label_pc_108a4:                               ; preds = %thread-pre-split214
  %v2_108a4 = icmp ugt i32 %v1_fe6c, 60
  store i1 %v2_108a4, i1* %cpsr_c.global-to-local, align 1
  %v7_108a4 = icmp eq i32 %v1_fe6c, 61
  store i1 %v7_108a4, i1* %cpsr_z.global-to-local, align 1
  %v2_108a8 = xor i1 %v2_108a4, true
  %v3_108a8 = or i1 %v7_108a4, %v2_108a8
  br i1 %v3_108a8, label %dec_label_pc_fe54, label %dec_label_pc_108ac

dec_label_pc_108ac:                               ; preds = %dec_label_pc_108a4, %thread-pre-split214
  store i32 %v0_108bc, i32* %r3.global-to-local, align 4
  %v2_108b0 = icmp ugt i32 %v1_fe58, 103
  store i1 %v2_108b0, i1* %cpsr_c.global-to-local, align 1
  %v7_108b0 = icmp eq i32 %v1_fe58, 104
  %.1982 = zext i1 %v7_108b0 to i32
  store i32 %.1982, i32* %fp.global-to-local, align 4
  %v2_108bc = and i32 %v0_108bc, %.1982
  %v4_108bc = icmp eq i32 %v2_108bc, 0
  store i1 %v4_108bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_108bc, label %dec_label_pc_108d0, label %dec_label_pc_108c8

dec_label_pc_108c8:                               ; preds = %dec_label_pc_108ac
  store i1 %v2_10218, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10218, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_104f0, label %dec_label_pc_fe54, label %dec_label_pc_108d0

dec_label_pc_108d0:                               ; preds = %dec_label_pc_108c8, %dec_label_pc_108ac
  %v7_108d0 = icmp eq i32 %v1_fe58, 188
  %.1983 = zext i1 %v7_108d0 to i32
  store i32 %.1983, i32* %r4.global-to-local, align 4
  %v2_108dc = icmp ugt i32 %v1_fe6c, 165
  store i1 %v2_108dc, i1* %cpsr_c.global-to-local, align 1
  %v7_108dc = icmp eq i32 %v1_fe6c, 166
  store i1 %v7_108dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_108dc, label %bb1560, label %dec_label_pc_108ec

bb1560:                                           ; preds = %dec_label_pc_108d0
  %v2_108d0 = icmp ugt i32 %v1_fe58, 187
  store i1 %v2_108d0, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_108d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_108d0, label %dec_label_pc_fe54, label %dec_label_pc_108ec.thread

dec_label_pc_108ec.thread:                        ; preds = %bb1560
  store i32 %.1983, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10904

dec_label_pc_108ec:                               ; preds = %dec_label_pc_108d0
  store i32 %.1983, i32* %r3.global-to-local, align 4
  %v2_108f0 = icmp ugt i32 %v1_fe6c, 225
  store i1 %v2_108f0, i1* %cpsr_c.global-to-local, align 1
  %v7_108f0 = icmp eq i32 %v1_fe6c, 226
  store i1 %v7_108f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_108f0, label %.thread220, label %dec_label_pc_10904

.thread220:                                       ; preds = %dec_label_pc_108ec
  store i32 %.1983, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_108fc = icmp eq i1 %v7_108d0, false
  store i1 %v2_108fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_108fc, label %dec_label_pc_10904.thread, label %dec_label_pc_fe54

dec_label_pc_10904.thread:                        ; preds = %.thread220
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10918

dec_label_pc_10904:                               ; preds = %dec_label_pc_108ec, %dec_label_pc_108ec.thread
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_10904 = icmp ugt i32 %v1_fe6c, 202
  store i1 %v2_10904, i1* %cpsr_c.global-to-local, align 1
  %v7_10904 = icmp eq i32 %v1_fe6c, 203
  store i1 %v7_10904, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10904, label %.thread224, label %dec_label_pc_10918

.thread224:                                       ; preds = %dec_label_pc_10904
  store i32 %.1978, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10910 = icmp eq i1 %v7_10738, false
  store i1 %v2_10910, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10910, label %dec_label_pc_10918.thread, label %dec_label_pc_fe54

dec_label_pc_10918.thread:                        ; preds = %.thread224
  store i32 %.1953, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %.thread229

dec_label_pc_10918:                               ; preds = %dec_label_pc_10904, %dec_label_pc_10904.thread
  store i32 %.1953, i32* %r3.global-to-local, align 4
  %v2_1091c = icmp ugt i32 %v1_fe6c, 242
  store i1 %v2_1091c, i1* %cpsr_c.global-to-local, align 1
  %v7_1091c = icmp eq i32 %v1_fe6c, 243
  store i1 %v7_1091c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1091c, label %.thread228, label %.thread229

.thread229:                                       ; preds = %dec_label_pc_10918.thread, %dec_label_pc_10918
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10930

.thread228:                                       ; preds = %dec_label_pc_10918
  store i32 %.1953, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10928 = icmp eq i1 %v7_100c4, false
  store i1 %v2_10928, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10928, label %dec_label_pc_10930, label %dec_label_pc_fe54

dec_label_pc_10930:                               ; preds = %.thread229, %.thread228
  store i32 %.1962, i32* %lr.global-to-local, align 4
  %v2_10934 = icmp ugt i32 %v1_fe58, 44
  store i1 %v2_10934, i1* %cpsr_c.global-to-local, align 1
  %v7_10934 = icmp eq i32 %v1_fe58, 45
  %.1984 = zext i1 %v7_10934 to i32
  store i32 %.1984, i32* %fp.global-to-local, align 4
  %v2_10940 = and i32 %.1962, %.1984
  %v4_10940 = icmp eq i32 %v2_10940, 0
  store i1 %v4_10940, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_10940, label %dec_label_pc_1094c, label %dec_label_pc_fe54

dec_label_pc_1094c:                               ; preds = %dec_label_pc_10930
  %v7_1094c = icmp eq i32 %v1_fe58, 178
  %.1985 = zext i1 %v7_1094c to i32
  store i32 %.1985, i32* %r3.global-to-local, align 4
  %v2_10958 = icmp ugt i32 %v1_fe6c, 61
  store i1 %v2_10958, i1* %cpsr_c.global-to-local, align 1
  %v7_10958 = icmp eq i32 %v1_fe6c, 62
  %storemerge1211 = zext i1 %v7_10958 to i32
  store i32 %storemerge1211, i32* %r4.global-to-local, align 4
  %v2_10964 = and i32 %storemerge1211, %.1985
  %v4_10964 = icmp eq i32 %v2_10964, 0
  store i1 %v4_10964, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_10964, label %dec_label_pc_10974, label %dec_label_pc_fe54

dec_label_pc_10974:                               ; preds = %dec_label_pc_1094c
  store i32 %.1982, i32* %r3.global-to-local, align 4
  store i1 %v2_1076c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_1076c, i1* %cpsr_z.global-to-local, align 1
  store i32 %.1982, i32* %r3.global-to-local, align 4
  br i1 %v7_1076c, label %.thread235, label %dec_label_pc_1098c

.thread235:                                       ; preds = %dec_label_pc_10974
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10984 = icmp eq i1 %v7_108b0, false
  store i1 %v2_10984, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10984, label %dec_label_pc_1098c.thread, label %dec_label_pc_fe54

dec_label_pc_1098c.thread:                        ; preds = %.thread235
  store i32 %.1982, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %.thread240

dec_label_pc_1098c:                               ; preds = %dec_label_pc_10974
  %v2_10990 = icmp ugt i32 %v1_fe6c, 235
  store i1 %v2_10990, i1* %cpsr_c.global-to-local, align 1
  %v7_10990 = icmp eq i32 %v1_fe6c, 236
  store i1 %v7_10990, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10990, label %.thread239, label %.thread240

.thread240:                                       ; preds = %dec_label_pc_1098c.thread, %dec_label_pc_1098c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_109a4

.thread239:                                       ; preds = %dec_label_pc_1098c
  store i32 %.1982, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1099c = icmp eq i1 %v7_108b0, false
  store i1 %v2_1099c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1099c, label %dec_label_pc_109a4, label %dec_label_pc_fe54

dec_label_pc_109a4:                               ; preds = %.thread240, %.thread239
  %v7_109a4 = icmp eq i32 %v1_fe58, 107
  %.1986 = zext i1 %v7_109a4 to i32
  store i32 %.1986, i32* %fp.global-to-local, align 4
  %v2_109b0 = icmp ugt i32 %v1_fe6c, 169
  store i1 %v2_109b0, i1* %cpsr_c.global-to-local, align 1
  %v7_109b0 = icmp eq i32 %v1_fe6c, 170
  %storemerge1213 = zext i1 %v7_109b0 to i32
  store i32 %storemerge1213, i32* %lr.global-to-local, align 4
  %v2_109bc = and i32 %storemerge1213, %.1986
  %v4_109bc = icmp eq i32 %v2_109bc, 0
  store i1 %v4_109bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_109bc, label %dec_label_pc_109cc, label %dec_label_pc_fe54

dec_label_pc_109cc:                               ; preds = %dec_label_pc_109a4
  store i32 %.1973, i32* %r3.global-to-local, align 4
  store i1 %v2_105f0, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_105f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_105f0, label %.thread245, label %.thread246

.thread246:                                       ; preds = %dec_label_pc_109cc
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_109e4

.thread245:                                       ; preds = %dec_label_pc_109cc
  store i32 %.1973, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_109dc = icmp eq i1 %v7_104ac, false
  store i1 %v2_109dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_109dc, label %dec_label_pc_109e4, label %dec_label_pc_fe54

dec_label_pc_109e4:                               ; preds = %.thread246, %.thread245
  store i32 %.1957, i32* %r3.global-to-local, align 4
  store i32 %.1973, i32* %r4.global-to-local, align 4
  %v2_109ec = and i32 %.1957, %.1973
  %v4_109ec = icmp eq i32 %v2_109ec, 0
  store i1 %v4_109ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_109ec, label %dec_label_pc_109f4, label %dec_label_pc_fe54

dec_label_pc_109f4:                               ; preds = %dec_label_pc_109e4
  store i32 %.1959, i32* %fp.global-to-local, align 4
  store i32 %.1974, i32* %lr.global-to-local, align 4
  %v2_109fc = and i32 %.1959, %.1974
  %v4_109fc = icmp eq i32 %v2_109fc, 0
  store i1 %v4_109fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_109fc, label %dec_label_pc_10a04, label %dec_label_pc_fe54

dec_label_pc_10a04:                               ; preds = %dec_label_pc_109f4
  %v2_10a04 = icmp ugt i32 %v1_fe6c, 184
  store i1 %v2_10a04, i1* %cpsr_c.global-to-local, align 1
  %v7_10a04 = icmp eq i32 %v1_fe6c, 185
  store i1 %v7_10a04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10a04, label %.thread249, label %.thread250

.thread250:                                       ; preds = %dec_label_pc_10a04
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10a2c

.thread249:                                       ; preds = %dec_label_pc_10a04
  store i32 %.1941, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10a10 = icmp eq i1 %v7_ff14, false
  store i1 %v2_10a10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10a10, label %dec_label_pc_10a2c, label %dec_label_pc_10a18

dec_label_pc_10a18:                               ; preds = %.thread249
  %v2_10a18 = icmp ugt i32 %v1_fe70, 189
  store i1 %v2_10a18, i1* %cpsr_c.global-to-local, align 1
  %v7_10a18 = icmp eq i32 %v1_fe70, 190
  store i1 %v7_10a18, i1* %cpsr_z.global-to-local, align 1
  %v2_10a1c = xor i1 %v7_10a18, true
  %v3_10a1c = and i1 %v2_10a18, %v2_10a1c
  br i1 %v3_10a1c, label %bb1571, label %bb1572

bb1571:                                           ; preds = %dec_label_pc_10a18
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1572

bb1572:                                           ; preds = %dec_label_pc_10a18, %bb1571
  %v0_10a24840 = phi i32 [ %.1941, %dec_label_pc_10a18 ], [ 0, %bb1571 ]
  %v2_10a20 = xor i1 %v2_10a18, true
  %v3_10a20 = or i1 %v7_10a18, %v2_10a20
  br i1 %v3_10a20, label %bb1573, label %bb1574

bb1573:                                           ; preds = %bb1572
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1574

bb1574:                                           ; preds = %bb1572, %bb1573
  %v0_10a24 = phi i32 [ %v0_10a24840, %bb1572 ], [ 1, %bb1573 ]
  %v2_10a24 = and i32 %v3_fe60, 64
  %v3_10a24 = icmp ne i32 %v2_10a24, 0
  store i1 %v3_10a24, i1* %cpsr_c.global-to-local, align 1
  %v4_10a24 = udiv i32 %v1_fe70, 128
  %v5_10a24 = and i32 %v0_10a24, %v4_10a24
  store i32 %v5_10a24, i32* %r3.global-to-local, align 4
  %v6_10a24 = icmp eq i32 %v5_10a24, 0
  store i1 %v6_10a24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_10a24, label %dec_label_pc_10a2c, label %dec_label_pc_fe54

dec_label_pc_10a2c:                               ; preds = %.thread250, %bb1574, %.thread249
  %v2_10a2c = icmp ugt i32 %v1_fe6c, 46
  store i1 %v2_10a2c, i1* %cpsr_c.global-to-local, align 1
  %v7_10a2c = icmp eq i32 %v1_fe6c, 47
  %.1987 = zext i1 %v7_10a2c to i32
  %v2_10a38 = and i32 %.1987, %.1980
  %v4_10a38 = icmp eq i32 %v2_10a38, 0
  store i1 %v4_10a38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_10a38, label %dec_label_pc_10a5c, label %dec_label_pc_10a40

dec_label_pc_10a40:                               ; preds = %dec_label_pc_10a2c
  %v2_10a40 = icmp ugt i32 %v1_fe70, 8
  store i1 %v2_10a40, i1* %cpsr_c.global-to-local, align 1
  %v7_10a40 = icmp eq i32 %v1_fe70, 9
  store i1 %v7_10a40, i1* %cpsr_z.global-to-local, align 1
  %v2_10a44 = xor i1 %v2_10a40, true
  %v3_10a44 = or i1 %v7_10a40, %v2_10a44
  br i1 %v3_10a44, label %bb1577, label %bb1578

bb1577:                                           ; preds = %dec_label_pc_10a40
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1578

bb1578:                                           ; preds = %dec_label_pc_10a40, %bb1577
  %v2_10a48 = xor i1 %v7_10a40, true
  %v3_10a48 = and i1 %v2_10a40, %v2_10a48
  br i1 %v3_10a48, label %bb1579, label %bb1580

bb1579:                                           ; preds = %bb1578
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1580

bb1580:                                           ; preds = %bb1578, %bb1579
  %v0_10a54.pr = phi i32 [ 0, %bb1578 ], [ 1, %bb1579 ]
  %v2_10a4c = icmp ugt i32 %v1_fe70, 9
  store i1 %v2_10a4c, i1* %cpsr_c.global-to-local, align 1
  %v7_10a4c = icmp eq i32 %v1_fe70, 10
  store i1 %v7_10a4c, i1* %cpsr_z.global-to-local, align 1
  %v2_10a50 = xor i1 %v7_10a4c, true
  %v3_10a50 = and i1 %v2_10a4c, %v2_10a50
  br i1 %v3_10a50, label %.thread255, label %bb1581

.thread255:                                       ; preds = %bb1580
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10a5c

bb1581:                                           ; preds = %bb1580
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10a54 = icmp eq i32 %v0_10a54.pr, 0
  store i1 %v2_10a54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10a54, label %dec_label_pc_10a5c, label %dec_label_pc_fe54

dec_label_pc_10a5c:                               ; preds = %.thread255, %bb1581, %dec_label_pc_10a2c
  %v2_10a5c = icmp ugt i32 %v1_fe58, 173
  store i1 %v2_10a5c, i1* %cpsr_c.global-to-local, align 1
  %v7_10a5c = icmp eq i32 %v1_fe58, 174
  store i1 %v7_10a5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10a5c, label %bb1582, label %dec_label_pc_10a80

bb1582:                                           ; preds = %dec_label_pc_10a5c
  %v3_10a60 = icmp ugt i32 %v1_fe6c, 137
  store i1 %v3_10a60, i1* %cpsr_c.global-to-local, align 1
  %v8_10a60 = icmp eq i32 %v1_fe6c, 138
  store i1 %v8_10a60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10a60, label %dec_label_pc_10a68, label %dec_label_pc_10a80

dec_label_pc_10a68:                               ; preds = %bb1582
  store i32 %v1_fe70, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10a68 = icmp eq i32 %v1_fe70, 0
  store i1 %v2_10a68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10a68, label %bb1585.thread, label %bb1584

bb1585.thread:                                    ; preds = %dec_label_pc_10a68
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10a80.thread

bb1584:                                           ; preds = %dec_label_pc_10a68
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_10a70 = icmp ugt i32 %v1_fe70, 125
  store i1 %v2_10a70, i1* %cpsr_c.global-to-local, align 1
  %v7_10a70 = icmp eq i32 %v1_fe70, 126
  store i1 %v7_10a70, i1* %cpsr_z.global-to-local, align 1
  %v2_10a74 = xor i1 %v7_10a70, true
  %v3_10a74 = and i1 %v2_10a70, %v2_10a74
  br i1 %v3_10a74, label %.thread260, label %bb1585

.thread260:                                       ; preds = %bb1584
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10a80.thread

bb1585:                                           ; preds = %bb1584
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fe54

dec_label_pc_10a80.thread:                        ; preds = %bb1585.thread, %.thread260
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %.thread264

dec_label_pc_10a80:                               ; preds = %dec_label_pc_10a5c, %bb1582
  %v2_10a80 = icmp ugt i32 %v1_fe6c, 240
  store i1 %v2_10a80, i1* %cpsr_c.global-to-local, align 1
  %v7_10a80 = icmp eq i32 %v1_fe6c, 241
  store i1 %v7_10a80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10a80, label %.thread263, label %.thread264

.thread264:                                       ; preds = %dec_label_pc_10a80.thread, %dec_label_pc_10a80
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10aa4

.thread263:                                       ; preds = %dec_label_pc_10a80
  store i32 %.1940, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10a8c = icmp eq i1 %v7_fefc, false
  store i1 %v2_10a8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10a8c, label %dec_label_pc_10aa4.thread, label %dec_label_pc_10a94

dec_label_pc_10aa4.thread:                        ; preds = %.thread263
  store i32 %.1969, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %.thread268

dec_label_pc_10a94:                               ; preds = %.thread263
  %v1_10a94 = add nsw i32 %v1_fe70, -255
  store i32 %v1_10a94, i32* %r3.global-to-local, align 4
  %v2_10a94 = icmp eq i32 %v1_fe70, 255
  store i1 %v2_10a94, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_10a94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10a94, label %bb1587, label %bb1586

bb1586:                                           ; preds = %dec_label_pc_10a94
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1587

bb1587:                                           ; preds = %dec_label_pc_10a94, %bb1586
  %v0_10a9c = phi i32 [ %v1_10a94, %dec_label_pc_10a94 ], [ 1, %bb1586 ]
  %v2_10a9c = and i32 %v3_fe60, 64
  %v3_10a9c = icmp ne i32 %v2_10a9c, 0
  store i1 %v3_10a9c, i1* %cpsr_c.global-to-local, align 1
  %v4_10a9c = udiv i32 %v1_fe70, 128
  %v5_10a9c = and i32 %v0_10a9c, %v4_10a9c
  store i32 %v5_10a9c, i32* %r3.global-to-local, align 4
  %v6_10a9c = icmp eq i32 %v5_10a9c, 0
  store i1 %v6_10a9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_10a9c, label %dec_label_pc_10aa4, label %dec_label_pc_fe54

dec_label_pc_10aa4:                               ; preds = %.thread264, %bb1587
  store i32 %.1969, i32* %r3.global-to-local, align 4
  %v2_10aa8 = icmp ugt i32 %v1_fe6c, 198
  store i1 %v2_10aa8, i1* %cpsr_c.global-to-local, align 1
  %v7_10aa8 = icmp eq i32 %v1_fe6c, 199
  store i1 %v7_10aa8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10aa8, label %.thread267, label %.thread268

.thread268:                                       ; preds = %dec_label_pc_10aa4.thread, %dec_label_pc_10aa4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10ad8

.thread267:                                       ; preds = %dec_label_pc_10aa4
  store i32 %.1969, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10ab4 = icmp eq i1 %v7_10358, false
  store i1 %v2_10ab4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10ab4, label %dec_label_pc_10ad8.thread, label %dec_label_pc_10abc

dec_label_pc_10ad8.thread:                        ; preds = %.thread267
  store i32 %.1969, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %.thread276

dec_label_pc_10abc:                               ; preds = %.thread267
  %v2_10abc = icmp ugt i32 %v1_fe70, 62
  store i1 %v2_10abc, i1* %cpsr_c.global-to-local, align 1
  %v7_10abc = icmp eq i32 %v1_fe70, 63
  store i1 %v7_10abc, i1* %cpsr_z.global-to-local, align 1
  %v2_10ac0 = xor i1 %v2_10abc, true
  %v3_10ac0 = or i1 %v7_10abc, %v2_10ac0
  br i1 %v3_10ac0, label %bb1588, label %bb1589

bb1588:                                           ; preds = %dec_label_pc_10abc
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1589

bb1589:                                           ; preds = %dec_label_pc_10abc, %bb1588
  %v0_10ad0.pr850 = phi i32 [ %.1969, %dec_label_pc_10abc ], [ 0, %bb1588 ]
  %v2_10ac4 = xor i1 %v7_10abc, true
  %v3_10ac4 = and i1 %v2_10abc, %v2_10ac4
  br i1 %v3_10ac4, label %bb1590, label %bb1591

bb1590:                                           ; preds = %bb1589
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1591

bb1591:                                           ; preds = %bb1589, %bb1590
  %v0_10ad0.pr = phi i32 [ %v0_10ad0.pr850, %bb1589 ], [ 1, %bb1590 ]
  %v2_10ac8 = icmp ugt i32 %v1_fe70, 125
  store i1 %v2_10ac8, i1* %cpsr_c.global-to-local, align 1
  %v7_10ac8 = icmp eq i32 %v1_fe70, 126
  store i1 %v7_10ac8, i1* %cpsr_z.global-to-local, align 1
  %v2_10acc = xor i1 %v7_10ac8, true
  %v3_10acc = and i1 %v2_10ac8, %v2_10acc
  br i1 %v3_10acc, label %.thread272, label %bb1592

.thread272:                                       ; preds = %bb1591
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10ad8

bb1592:                                           ; preds = %bb1591
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10ad0 = icmp eq i32 %v0_10ad0.pr, 0
  store i1 %v2_10ad0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10ad0, label %dec_label_pc_10ad8, label %dec_label_pc_fe54

dec_label_pc_10ad8:                               ; preds = %.thread272, %.thread268, %bb1592
  store i32 %.1969, i32* %r3.global-to-local, align 4
  %v2_10adc = icmp ugt i32 %v1_fe6c, 210
  store i1 %v2_10adc, i1* %cpsr_c.global-to-local, align 1
  %v7_10adc = icmp eq i32 %v1_fe6c, 211
  store i1 %v7_10adc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10adc, label %.thread275, label %.thread276

.thread276:                                       ; preds = %dec_label_pc_10ad8.thread, %dec_label_pc_10ad8
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10b0c

.thread275:                                       ; preds = %dec_label_pc_10ad8
  store i32 %.1969, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10ae8 = icmp eq i1 %v7_10358, false
  store i1 %v2_10ae8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10ae8, label %dec_label_pc_10b0c, label %dec_label_pc_10af0

dec_label_pc_10af0:                               ; preds = %.thread275
  %v2_10af0 = icmp ugt i32 %v1_fe70, 94
  store i1 %v2_10af0, i1* %cpsr_c.global-to-local, align 1
  %v7_10af0 = icmp eq i32 %v1_fe70, 95
  store i1 %v7_10af0, i1* %cpsr_z.global-to-local, align 1
  %v2_10af4 = xor i1 %v2_10af0, true
  %v3_10af4 = or i1 %v7_10af0, %v2_10af4
  br i1 %v3_10af4, label %bb1593, label %bb1594

bb1593:                                           ; preds = %dec_label_pc_10af0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1594

bb1594:                                           ; preds = %dec_label_pc_10af0, %bb1593
  %v0_10b04.pr853 = phi i32 [ %.1969, %dec_label_pc_10af0 ], [ 0, %bb1593 ]
  %v2_10af8 = xor i1 %v7_10af0, true
  %v3_10af8 = and i1 %v2_10af0, %v2_10af8
  br i1 %v3_10af8, label %bb1595, label %bb1596

bb1595:                                           ; preds = %bb1594
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1596

bb1596:                                           ; preds = %bb1594, %bb1595
  %v0_10b04.pr = phi i32 [ %v0_10b04.pr853, %bb1594 ], [ 1, %bb1595 ]
  %v2_10afc = icmp ugt i32 %v1_fe70, 125
  store i1 %v2_10afc, i1* %cpsr_c.global-to-local, align 1
  %v7_10afc = icmp eq i32 %v1_fe70, 126
  store i1 %v7_10afc, i1* %cpsr_z.global-to-local, align 1
  %v2_10b00 = xor i1 %v7_10afc, true
  %v3_10b00 = and i1 %v2_10afc, %v2_10b00
  br i1 %v3_10b00, label %.thread280, label %bb1597

.thread280:                                       ; preds = %bb1596
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10b0c

bb1597:                                           ; preds = %bb1596
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10b04 = icmp eq i32 %v0_10b04.pr, 0
  store i1 %v2_10b04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10b04, label %dec_label_pc_10b0c, label %dec_label_pc_fe54

dec_label_pc_10b0c:                               ; preds = %.thread280, %.thread276, %bb1597, %.thread275
  store i32 %.1961, i32* %r3.global-to-local, align 4
  %v2_10b10 = and i32 %.1944, %.1961
  %v4_10b10 = icmp eq i32 %v2_10b10, 0
  store i1 %v4_10b10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_10b10, label %dec_label_pc_10b24, label %dec_label_pc_10b18

dec_label_pc_10b18:                               ; preds = %dec_label_pc_10b0c
  %v2_10b18 = icmp eq i32 %v1_fe70, 255
  store i1 %v2_10b18, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_10b18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10b18, label %dec_label_pc_10b24, label %bb1598

bb1598:                                           ; preds = %dec_label_pc_10b18
  %v3_10b1c = icmp ugt i32 %v1_fe70, 190
  store i1 %v3_10b1c, i1* %cpsr_c.global-to-local, align 1
  %v8_10b1c = icmp eq i32 %v1_fe70, 191
  store i1 %v8_10b1c, i1* %cpsr_z.global-to-local, align 1
  %v2_10b20 = xor i1 %v8_10b1c, true
  %v3_10b20 = and i1 %v3_10b1c, %v2_10b20
  br i1 %v3_10b20, label %dec_label_pc_fe54, label %dec_label_pc_10b24

dec_label_pc_10b24:                               ; preds = %dec_label_pc_10b18, %bb1598, %dec_label_pc_10b0c
  %v7_10b24 = icmp eq i32 %v1_fe58, 37
  %.1988 = zext i1 %v7_10b24 to i32
  store i32 %.1988, i32* %sl.global-to-local, align 4
  %v2_10b30 = icmp ugt i32 %v1_fe6c, 138
  store i1 %v2_10b30, i1* %cpsr_c.global-to-local, align 1
  %v7_10b30 = icmp eq i32 %v1_fe6c, 139
  store i1 %v7_10b30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10b30, label %bb1601, label %dec_label_pc_10b54

bb1601:                                           ; preds = %dec_label_pc_10b24
  %v2_10b24 = icmp ugt i32 %v1_fe58, 36
  store i1 %v2_10b24, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10b24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10b24, label %dec_label_pc_10b3c, label %dec_label_pc_10b54

dec_label_pc_10b3c:                               ; preds = %bb1601
  store i32 %v1_fe70, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10b3c = icmp eq i32 %v1_fe70, 0
  store i1 %v2_10b3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10b3c, label %bb1604.thread, label %bb1603

bb1604.thread:                                    ; preds = %dec_label_pc_10b3c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10b54

bb1603:                                           ; preds = %dec_label_pc_10b3c
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_10b44 = icmp ugt i32 %v1_fe70, 29
  store i1 %v2_10b44, i1* %cpsr_c.global-to-local, align 1
  %v7_10b44 = icmp eq i32 %v1_fe70, 30
  store i1 %v7_10b44, i1* %cpsr_z.global-to-local, align 1
  %v2_10b48 = xor i1 %v7_10b44, true
  %v3_10b48 = and i1 %v2_10b44, %v2_10b48
  br i1 %v3_10b48, label %.thread286, label %bb1604

.thread286:                                       ; preds = %bb1603
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10b54

bb1604:                                           ; preds = %bb1603
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fe54

dec_label_pc_10b54:                               ; preds = %bb1604.thread, %dec_label_pc_10b24, %.thread286, %bb1601
  %v0_10b80.pr859 = phi i32 [ %.1961, %dec_label_pc_10b24 ], [ 0, %.thread286 ], [ %.1961, %bb1601 ], [ 0, %bb1604.thread ]
  %v7_10b54 = icmp eq i32 %v1_fe58, 67
  %.1989 = zext i1 %v7_10b54 to i32
  store i32 %.1989, i32* %lr.global-to-local, align 4
  %v2_10b60 = icmp ugt i32 %v1_fe6c, 206
  store i1 %v2_10b60, i1* %cpsr_c.global-to-local, align 1
  %v7_10b60 = icmp eq i32 %v1_fe6c, 207
  store i1 %v7_10b60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10b60, label %bb1607, label %dec_label_pc_10b88

bb1607:                                           ; preds = %dec_label_pc_10b54
  %v2_10b54 = icmp ugt i32 %v1_fe58, 66
  store i1 %v2_10b54, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10b54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10b54, label %dec_label_pc_10b6c, label %dec_label_pc_10b88.thread

dec_label_pc_10b88.thread:                        ; preds = %bb1607
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %.thread296

dec_label_pc_10b6c:                               ; preds = %bb1607
  %v2_10b6c = icmp ugt i32 %v1_fe70, 62
  store i1 %v2_10b6c, i1* %cpsr_c.global-to-local, align 1
  %v7_10b6c = icmp eq i32 %v1_fe70, 63
  store i1 %v7_10b6c, i1* %cpsr_z.global-to-local, align 1
  %v2_10b70 = xor i1 %v2_10b6c, true
  %v3_10b70 = or i1 %v7_10b6c, %v2_10b70
  br i1 %v3_10b70, label %bb1608, label %bb1609

bb1608:                                           ; preds = %dec_label_pc_10b6c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1609

bb1609:                                           ; preds = %dec_label_pc_10b6c, %bb1608
  %v0_10b80.pr858 = phi i32 [ %v0_10b80.pr859, %dec_label_pc_10b6c ], [ 0, %bb1608 ]
  %v2_10b74 = xor i1 %v7_10b6c, true
  %v3_10b74 = and i1 %v2_10b6c, %v2_10b74
  br i1 %v3_10b74, label %bb1610, label %bb1611

bb1610:                                           ; preds = %bb1609
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1611

bb1611:                                           ; preds = %bb1609, %bb1610
  %v0_10b80.pr = phi i32 [ %v0_10b80.pr858, %bb1609 ], [ 1, %bb1610 ]
  %v2_10b78 = icmp ugt i32 %v1_fe70, 93
  store i1 %v2_10b78, i1* %cpsr_c.global-to-local, align 1
  %v7_10b78 = icmp eq i32 %v1_fe70, 94
  store i1 %v7_10b78, i1* %cpsr_z.global-to-local, align 1
  %v2_10b7c = xor i1 %v7_10b78, true
  %v3_10b7c = and i1 %v2_10b78, %v2_10b7c
  br i1 %v3_10b7c, label %.thread292, label %bb1612

.thread292:                                       ; preds = %bb1611
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10b88

bb1612:                                           ; preds = %bb1611
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10b80 = icmp eq i32 %v0_10b80.pr, 0
  store i1 %v2_10b80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10b80, label %dec_label_pc_10b88, label %dec_label_pc_fe54

dec_label_pc_10b88:                               ; preds = %dec_label_pc_10b54, %.thread292, %bb1612
  %v2_10b88 = icmp ugt i32 %v1_fe6c, 204
  store i1 %v2_10b88, i1* %cpsr_c.global-to-local, align 1
  %v7_10b88 = icmp eq i32 %v1_fe6c, 205
  store i1 %v7_10b88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10b88, label %.thread295, label %.thread296

.thread296:                                       ; preds = %dec_label_pc_10b88.thread, %dec_label_pc_10b88
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10bb0

.thread295:                                       ; preds = %dec_label_pc_10b88
  store i32 %.1989, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10b94 = icmp eq i1 %v7_10b54, false
  store i1 %v2_10b94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10b94, label %dec_label_pc_10bb0.thread, label %dec_label_pc_10b9c

dec_label_pc_10bb0.thread:                        ; preds = %.thread295
  store i32 %.1964, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %.thread300

dec_label_pc_10b9c:                               ; preds = %.thread295
  %v2_10b9c = icmp ugt i32 %v1_fe70, 189
  store i1 %v2_10b9c, i1* %cpsr_c.global-to-local, align 1
  %v7_10b9c = icmp eq i32 %v1_fe70, 190
  store i1 %v7_10b9c, i1* %cpsr_z.global-to-local, align 1
  %v2_10ba0 = xor i1 %v7_10b9c, true
  %v3_10ba0 = and i1 %v2_10b9c, %v2_10ba0
  br i1 %v3_10ba0, label %bb1613, label %bb1614

bb1613:                                           ; preds = %dec_label_pc_10b9c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1614

bb1614:                                           ; preds = %dec_label_pc_10b9c, %bb1613
  %v0_10ba8862 = phi i32 [ %.1989, %dec_label_pc_10b9c ], [ 0, %bb1613 ]
  %v2_10ba4 = xor i1 %v2_10b9c, true
  %v3_10ba4 = or i1 %v7_10b9c, %v2_10ba4
  br i1 %v3_10ba4, label %bb1615, label %bb1616

bb1615:                                           ; preds = %bb1614
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1616

bb1616:                                           ; preds = %bb1614, %bb1615
  %v0_10ba8 = phi i32 [ %v0_10ba8862, %bb1614 ], [ 1, %bb1615 ]
  %v2_10ba8 = and i32 %v3_fe60, 64
  %v3_10ba8 = icmp ne i32 %v2_10ba8, 0
  store i1 %v3_10ba8, i1* %cpsr_c.global-to-local, align 1
  %v4_10ba8 = udiv i32 %v1_fe70, 128
  %v5_10ba8 = and i32 %v0_10ba8, %v4_10ba8
  store i32 %v5_10ba8, i32* %r3.global-to-local, align 4
  %v6_10ba8 = icmp eq i32 %v5_10ba8, 0
  store i1 %v6_10ba8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_10ba8, label %dec_label_pc_10bb0, label %dec_label_pc_fe54

dec_label_pc_10bb0:                               ; preds = %.thread296, %bb1616
  store i32 %.1964, i32* %r3.global-to-local, align 4
  %v2_10bb4 = icmp ugt i32 %v1_fe6c, 239
  store i1 %v2_10bb4, i1* %cpsr_c.global-to-local, align 1
  %v7_10bb4 = icmp eq i32 %v1_fe6c, 240
  store i1 %v7_10bb4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10bb4, label %.thread299, label %.thread300

.thread300:                                       ; preds = %dec_label_pc_10bb0.thread, %dec_label_pc_10bb0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10bdc

.thread299:                                       ; preds = %dec_label_pc_10bb0
  store i32 %.1964, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10bc0 = icmp eq i1 %v7_10264, false
  store i1 %v2_10bc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10bc0, label %dec_label_pc_10bdc, label %dec_label_pc_10bc8

dec_label_pc_10bc8:                               ; preds = %.thread299
  %v2_10bc8 = icmp ugt i32 %v1_fe70, 141
  store i1 %v2_10bc8, i1* %cpsr_c.global-to-local, align 1
  %v7_10bc8 = icmp eq i32 %v1_fe70, 142
  store i1 %v7_10bc8, i1* %cpsr_z.global-to-local, align 1
  %v2_10bcc = xor i1 %v7_10bc8, true
  %v3_10bcc = and i1 %v2_10bc8, %v2_10bcc
  br i1 %v3_10bcc, label %bb1617, label %bb1618

bb1617:                                           ; preds = %dec_label_pc_10bc8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1618

bb1618:                                           ; preds = %dec_label_pc_10bc8, %bb1617
  %v0_10bd4865 = phi i32 [ %.1964, %dec_label_pc_10bc8 ], [ 0, %bb1617 ]
  %v2_10bd0 = xor i1 %v2_10bc8, true
  %v3_10bd0 = or i1 %v7_10bc8, %v2_10bd0
  br i1 %v3_10bd0, label %bb1619, label %bb1620

bb1619:                                           ; preds = %bb1618
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1620

bb1620:                                           ; preds = %bb1618, %bb1619
  %v0_10bd4 = phi i32 [ %v0_10bd4865, %bb1618 ], [ 1, %bb1619 ]
  %v2_10bd4 = and i32 %v3_fe60, 64
  %v3_10bd4 = icmp ne i32 %v2_10bd4, 0
  store i1 %v3_10bd4, i1* %cpsr_c.global-to-local, align 1
  %v4_10bd4 = udiv i32 %v1_fe70, 128
  %v5_10bd4 = and i32 %v0_10bd4, %v4_10bd4
  store i32 %v5_10bd4, i32* %r3.global-to-local, align 4
  %v6_10bd4 = icmp eq i32 %v5_10bd4, 0
  store i1 %v6_10bd4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_10bd4, label %dec_label_pc_10bdc, label %dec_label_pc_fe54

dec_label_pc_10bdc:                               ; preds = %.thread300, %bb1620, %.thread299
  store i32 %.1949, i32* %r3.global-to-local, align 4
  %v2_10be0 = icmp ugt i32 %v1_fe58, 81
  store i1 %v2_10be0, i1* %cpsr_c.global-to-local, align 1
  %v7_10be0 = icmp eq i32 %v1_fe58, 82
  store i1 %v7_10be0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10be0, label %.thread303, label %dec_label_pc_10c0c

.thread303:                                       ; preds = %dec_label_pc_10bdc
  store i32 %.1949, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10bec = icmp eq i1 %v7_1002c, false
  store i1 %v2_10bec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10bec, label %dec_label_pc_10c0c.thread, label %dec_label_pc_10bf4

dec_label_pc_10bf4:                               ; preds = %.thread303
  store i32 %v1_fe70, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10bf4 = icmp eq i32 %v1_fe70, 0
  store i1 %v2_10bf4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10bf4, label %bb1623.thread, label %bb1622

bb1623.thread:                                    ; preds = %dec_label_pc_10bf4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10c0c.thread

bb1622:                                           ; preds = %dec_label_pc_10bf4
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_10bfc = icmp ugt i32 %v1_fe70, 13
  store i1 %v2_10bfc, i1* %cpsr_c.global-to-local, align 1
  %v7_10bfc = icmp eq i32 %v1_fe70, 14
  store i1 %v7_10bfc, i1* %cpsr_z.global-to-local, align 1
  %v2_10c00 = xor i1 %v7_10bfc, true
  %v3_10c00 = and i1 %v2_10bfc, %v2_10c00
  br i1 %v3_10c00, label %.thread308, label %bb1623

.thread308:                                       ; preds = %bb1622
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10c0c.thread

bb1623:                                           ; preds = %bb1622
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fe54

dec_label_pc_10c0c.thread:                        ; preds = %bb1623.thread, %.thread308, %.thread303
  store i32 %.1958, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %.thread312

dec_label_pc_10c0c:                               ; preds = %dec_label_pc_10bdc
  store i32 %.1958, i32* %r3.global-to-local, align 4
  %v2_10c10 = icmp ugt i32 %v1_fe58, 94
  store i1 %v2_10c10, i1* %cpsr_c.global-to-local, align 1
  %v7_10c10 = icmp eq i32 %v1_fe58, 95
  store i1 %v7_10c10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10c10, label %.thread311, label %.thread312

.thread312:                                       ; preds = %dec_label_pc_10c0c.thread, %dec_label_pc_10c0c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10c40

.thread311:                                       ; preds = %dec_label_pc_10c0c
  store i32 %.1958, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10c1c = icmp eq i1 %v7_101a8, false
  store i1 %v2_10c1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10c1c, label %dec_label_pc_10c40, label %dec_label_pc_10c24

dec_label_pc_10c24:                               ; preds = %.thread311
  %v2_10c24 = icmp ugt i32 %v1_fe70, 6
  store i1 %v2_10c24, i1* %cpsr_c.global-to-local, align 1
  %v7_10c24 = icmp eq i32 %v1_fe70, 7
  store i1 %v7_10c24, i1* %cpsr_z.global-to-local, align 1
  %v2_10c28 = xor i1 %v2_10c24, true
  %v3_10c28 = or i1 %v7_10c24, %v2_10c28
  br i1 %v3_10c28, label %bb1624, label %bb1625

bb1624:                                           ; preds = %dec_label_pc_10c24
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1625

bb1625:                                           ; preds = %dec_label_pc_10c24, %bb1624
  %v0_10c38.pr870 = phi i32 [ %.1958, %dec_label_pc_10c24 ], [ 0, %bb1624 ]
  %v2_10c2c = xor i1 %v7_10c24, true
  %v3_10c2c = and i1 %v2_10c24, %v2_10c2c
  br i1 %v3_10c2c, label %bb1626, label %bb1627

bb1626:                                           ; preds = %bb1625
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1627

bb1627:                                           ; preds = %bb1625, %bb1626
  %v0_10c38.pr = phi i32 [ %v0_10c38.pr870, %bb1625 ], [ 1, %bb1626 ]
  %v2_10c30 = icmp ugt i32 %v1_fe70, 61
  store i1 %v2_10c30, i1* %cpsr_c.global-to-local, align 1
  %v7_10c30 = icmp eq i32 %v1_fe70, 62
  store i1 %v7_10c30, i1* %cpsr_z.global-to-local, align 1
  %v2_10c34 = xor i1 %v7_10c30, true
  %v3_10c34 = and i1 %v2_10c30, %v2_10c34
  br i1 %v3_10c34, label %.thread316, label %bb1628

.thread316:                                       ; preds = %bb1627
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10c40

bb1628:                                           ; preds = %bb1627
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10c38 = icmp eq i32 %v0_10c38.pr, 0
  store i1 %v2_10c38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10c38, label %dec_label_pc_10c40, label %dec_label_pc_fe54

dec_label_pc_10c40:                               ; preds = %.thread316, %.thread312, %bb1628, %.thread311
  store i32 %.1966, i32* %fp.global-to-local, align 4
  store i1 %v2_1060c, i1* %cpsr_c.global-to-local, align 1
  %.1990 = zext i1 %v7_1060c to i32
  store i32 %.1990, i32* %r4.global-to-local, align 4
  %v2_10c50 = and i32 %.1990, %.1966
  %v4_10c50 = icmp eq i32 %v2_10c50, 0
  store i1 %v4_10c50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_10c50, label %dec_label_pc_10c74, label %dec_label_pc_10c58

dec_label_pc_10c58:                               ; preds = %dec_label_pc_10c40
  %v2_10c58 = icmp ugt i32 %v1_fe70, 30
  store i1 %v2_10c58, i1* %cpsr_c.global-to-local, align 1
  %v7_10c58 = icmp eq i32 %v1_fe70, 31
  store i1 %v7_10c58, i1* %cpsr_z.global-to-local, align 1
  %v2_10c5c = xor i1 %v2_10c58, true
  %v3_10c5c = or i1 %v7_10c58, %v2_10c5c
  br i1 %v3_10c5c, label %bb1631, label %bb1632

bb1631:                                           ; preds = %dec_label_pc_10c58
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1632

bb1632:                                           ; preds = %dec_label_pc_10c58, %bb1631
  %v2_10c60 = xor i1 %v7_10c58, true
  %v3_10c60 = and i1 %v2_10c58, %v2_10c60
  br i1 %v3_10c60, label %bb1633, label %bb1634

bb1633:                                           ; preds = %bb1632
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1634

bb1634:                                           ; preds = %bb1632, %bb1633
  %v0_10c6c.pr = phi i32 [ 0, %bb1632 ], [ 1, %bb1633 ]
  %v2_10c64 = icmp ugt i32 %v1_fe70, 41
  store i1 %v2_10c64, i1* %cpsr_c.global-to-local, align 1
  %v7_10c64 = icmp eq i32 %v1_fe70, 42
  store i1 %v7_10c64, i1* %cpsr_z.global-to-local, align 1
  %v2_10c68 = xor i1 %v7_10c64, true
  %v3_10c68 = and i1 %v2_10c64, %v2_10c68
  br i1 %v3_10c68, label %.thread321, label %bb1635

.thread321:                                       ; preds = %bb1634
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10c74

bb1635:                                           ; preds = %bb1634
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10c6c = icmp eq i32 %v0_10c6c.pr, 0
  store i1 %v2_10c6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10c6c, label %dec_label_pc_10c74, label %dec_label_pc_fe54

dec_label_pc_10c74:                               ; preds = %.thread321, %bb1635, %dec_label_pc_10c40
  %v7_10c74 = icmp eq i32 %v1_fe58, 185
  %.1991 = zext i1 %v7_10c74 to i32
  store i32 %.1991, i32* %lr.global-to-local, align 4
  %v2_10c80 = icmp ugt i32 %v1_fe6c, 91
  store i1 %v2_10c80, i1* %cpsr_c.global-to-local, align 1
  %v7_10c80 = icmp eq i32 %v1_fe6c, 92
  store i1 %v7_10c80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10c80, label %bb1638, label %dec_label_pc_10ca8

bb1638:                                           ; preds = %dec_label_pc_10c74
  %v2_10c74 = icmp ugt i32 %v1_fe58, 184
  store i1 %v2_10c74, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10c74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10c74, label %dec_label_pc_10c8c, label %dec_label_pc_10ca8.thread

dec_label_pc_10ca8.thread:                        ; preds = %bb1638
  store i32 %.1982, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %.thread331

dec_label_pc_10c8c:                               ; preds = %bb1638
  %v2_10c8c = icmp ugt i32 %v1_fe70, 218
  store i1 %v2_10c8c, i1* %cpsr_c.global-to-local, align 1
  %v7_10c8c = icmp eq i32 %v1_fe70, 219
  store i1 %v7_10c8c, i1* %cpsr_z.global-to-local, align 1
  %v2_10c90 = xor i1 %v2_10c8c, true
  %v3_10c90 = or i1 %v7_10c8c, %v2_10c90
  br i1 %v3_10c90, label %bb1639, label %bb1640

bb1639:                                           ; preds = %dec_label_pc_10c8c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1640

bb1640:                                           ; preds = %dec_label_pc_10c8c, %bb1639
  %v2_10c94 = xor i1 %v7_10c8c, true
  %v3_10c94 = and i1 %v2_10c8c, %v2_10c94
  br i1 %v3_10c94, label %bb1641, label %bb1642

bb1641:                                           ; preds = %bb1640
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1642

bb1642:                                           ; preds = %bb1640, %bb1641
  %v0_10ca0.pr = phi i32 [ 0, %bb1640 ], [ 1, %bb1641 ]
  %v2_10c98 = icmp ugt i32 %v1_fe70, 221
  store i1 %v2_10c98, i1* %cpsr_c.global-to-local, align 1
  %v7_10c98 = icmp eq i32 %v1_fe70, 222
  store i1 %v7_10c98, i1* %cpsr_z.global-to-local, align 1
  %v2_10c9c = xor i1 %v7_10c98, true
  %v3_10c9c = and i1 %v2_10c98, %v2_10c9c
  br i1 %v3_10c9c, label %.thread327, label %bb1643

.thread327:                                       ; preds = %bb1642
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10ca8

bb1643:                                           ; preds = %bb1642
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10ca0 = icmp eq i32 %v0_10ca0.pr, 0
  store i1 %v2_10ca0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10ca0, label %dec_label_pc_10ca8, label %dec_label_pc_fe54

dec_label_pc_10ca8:                               ; preds = %dec_label_pc_10c74, %.thread327, %bb1643
  store i32 %.1982, i32* %r3.global-to-local, align 4
  %v2_10cac = icmp ugt i32 %v1_fe6c, 237
  store i1 %v2_10cac, i1* %cpsr_c.global-to-local, align 1
  %v7_10cac = icmp eq i32 %v1_fe6c, 238
  store i1 %v7_10cac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10cac, label %.thread330, label %.thread331

.thread331:                                       ; preds = %dec_label_pc_10ca8.thread, %dec_label_pc_10ca8
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10cd4

.thread330:                                       ; preds = %dec_label_pc_10ca8
  store i32 %.1982, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10cb8 = icmp eq i1 %v7_108b0, false
  store i1 %v2_10cb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10cb8, label %dec_label_pc_10cd4.thread, label %dec_label_pc_10cc0

dec_label_pc_10cd4.thread:                        ; preds = %.thread330
  store i32 %.1965, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %.thread335

dec_label_pc_10cc0:                               ; preds = %.thread330
  %v2_10cc0 = icmp ugt i32 %v1_fe70, 189
  store i1 %v2_10cc0, i1* %cpsr_c.global-to-local, align 1
  %v7_10cc0 = icmp eq i32 %v1_fe70, 190
  store i1 %v7_10cc0, i1* %cpsr_z.global-to-local, align 1
  %v2_10cc4 = xor i1 %v7_10cc0, true
  %v3_10cc4 = and i1 %v2_10cc0, %v2_10cc4
  br i1 %v3_10cc4, label %bb1644, label %bb1645

bb1644:                                           ; preds = %dec_label_pc_10cc0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1645

bb1645:                                           ; preds = %dec_label_pc_10cc0, %bb1644
  %v0_10ccc880 = phi i32 [ %.1982, %dec_label_pc_10cc0 ], [ 0, %bb1644 ]
  %v2_10cc8 = xor i1 %v2_10cc0, true
  %v3_10cc8 = or i1 %v7_10cc0, %v2_10cc8
  br i1 %v3_10cc8, label %bb1646, label %bb1647

bb1646:                                           ; preds = %bb1645
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1647

bb1647:                                           ; preds = %bb1645, %bb1646
  %v0_10ccc = phi i32 [ %v0_10ccc880, %bb1645 ], [ 1, %bb1646 ]
  %v2_10ccc = and i32 %v3_fe60, 64
  %v3_10ccc = icmp ne i32 %v2_10ccc, 0
  store i1 %v3_10ccc, i1* %cpsr_c.global-to-local, align 1
  %v4_10ccc = udiv i32 %v1_fe70, 128
  %v5_10ccc = and i32 %v0_10ccc, %v4_10ccc
  store i32 %v5_10ccc, i32* %r3.global-to-local, align 4
  %v6_10ccc = icmp eq i32 %v5_10ccc, 0
  store i1 %v6_10ccc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_10ccc, label %dec_label_pc_10cd4, label %dec_label_pc_fe54

dec_label_pc_10cd4:                               ; preds = %.thread331, %bb1647
  store i32 %.1965, i32* %r3.global-to-local, align 4
  %v2_10cd8 = icmp ugt i32 %v1_fe6c, 221
  store i1 %v2_10cd8, i1* %cpsr_c.global-to-local, align 1
  %v7_10cd8 = icmp eq i32 %v1_fe6c, 222
  store i1 %v7_10cd8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10cd8, label %.thread334, label %.thread335

.thread335:                                       ; preds = %dec_label_pc_10cd4.thread, %dec_label_pc_10cd4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10d04

.thread334:                                       ; preds = %dec_label_pc_10cd4
  store i32 %.1965, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10ce4 = icmp eq i1 %v7_10298, false
  store i1 %v2_10ce4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10ce4, label %dec_label_pc_10d04, label %dec_label_pc_10cec

dec_label_pc_10cec:                               ; preds = %.thread334
  store i32 %v1_fe70, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10cec = icmp eq i32 %v1_fe70, 0
  store i1 %v2_10cec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10cec, label %bb1650.thread, label %bb1649

bb1650.thread:                                    ; preds = %dec_label_pc_10cec
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10d04

bb1649:                                           ; preds = %dec_label_pc_10cec
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_10cf4 = icmp ugt i32 %v1_fe70, 29
  store i1 %v2_10cf4, i1* %cpsr_c.global-to-local, align 1
  %v7_10cf4 = icmp eq i32 %v1_fe70, 30
  store i1 %v7_10cf4, i1* %cpsr_z.global-to-local, align 1
  %v2_10cf8 = xor i1 %v7_10cf4, true
  %v3_10cf8 = and i1 %v2_10cf4, %v2_10cf8
  br i1 %v3_10cf8, label %.thread339, label %bb1650

.thread339:                                       ; preds = %bb1649
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10d04

bb1650:                                           ; preds = %bb1649
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fe54

dec_label_pc_10d04:                               ; preds = %bb1650.thread, %.thread339, %.thread335, %.thread334
  %v7_10d04 = icmp eq i32 %v1_fe58, 208
  %.1992 = zext i1 %v7_10d04 to i32
  store i32 %.1992, i32* %r3.global-to-local, align 4
  store i1 %v2_105d4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_105d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_105d4, label %bb1653, label %dec_label_pc_10d3c

bb1653:                                           ; preds = %dec_label_pc_10d04
  %v2_10d04 = icmp ugt i32 %v1_fe58, 207
  store i1 %v2_10d04, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10d04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10d04, label %dec_label_pc_10d20, label %dec_label_pc_10d3c

dec_label_pc_10d20:                               ; preds = %bb1653
  %v2_10d20 = icmp ugt i32 %v1_fe70, 230
  store i1 %v2_10d20, i1* %cpsr_c.global-to-local, align 1
  %v7_10d20 = icmp eq i32 %v1_fe70, 231
  store i1 %v7_10d20, i1* %cpsr_z.global-to-local, align 1
  %v2_10d24 = xor i1 %v2_10d20, true
  %v3_10d24 = or i1 %v7_10d20, %v2_10d24
  br i1 %v3_10d24, label %bb1654, label %bb1655

bb1654:                                           ; preds = %dec_label_pc_10d20
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1655

bb1655:                                           ; preds = %dec_label_pc_10d20, %bb1654
  %v0_10d34.pr885 = phi i32 [ %.1992, %dec_label_pc_10d20 ], [ 0, %bb1654 ]
  %v2_10d28 = xor i1 %v7_10d20, true
  %v3_10d28 = and i1 %v2_10d20, %v2_10d28
  br i1 %v3_10d28, label %bb1656, label %bb1657

bb1656:                                           ; preds = %bb1655
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1657

bb1657:                                           ; preds = %bb1655, %bb1656
  %v0_10d34.pr = phi i32 [ %v0_10d34.pr885, %bb1655 ], [ 1, %bb1656 ]
  %v2_10d2c = icmp ugt i32 %v1_fe70, 250
  store i1 %v2_10d2c, i1* %cpsr_c.global-to-local, align 1
  %v7_10d2c = icmp eq i32 %v1_fe70, 251
  store i1 %v7_10d2c, i1* %cpsr_z.global-to-local, align 1
  %v2_10d30 = xor i1 %v7_10d2c, true
  %v3_10d30 = and i1 %v2_10d2c, %v2_10d30
  br i1 %v3_10d30, label %.thread347, label %bb1658

.thread347:                                       ; preds = %bb1657
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10d3c

bb1658:                                           ; preds = %bb1657
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10d34 = icmp eq i32 %v0_10d34.pr, 0
  store i1 %v2_10d34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10d34, label %dec_label_pc_10d3c, label %dec_label_pc_fe54

dec_label_pc_10d3c:                               ; preds = %dec_label_pc_10d04, %.thread347, %bb1658, %bb1653
  store i32 %.1962, i32* %r3.global-to-local, align 4
  %v2_10d40 = icmp ugt i32 %v1_fe58, 65
  store i1 %v2_10d40, i1* %cpsr_c.global-to-local, align 1
  %v7_10d40 = icmp eq i32 %v1_fe58, 66
  %.1993 = zext i1 %v7_10d40 to i32
  store i32 %.1993, i32* %fp.global-to-local, align 4
  %v2_10d4c = and i32 %.1962, %.1993
  %v4_10d4c = icmp eq i32 %v2_10d4c, 0
  store i1 %v4_10d4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_10d4c, label %dec_label_pc_10d6c, label %dec_label_pc_10d58

dec_label_pc_10d58:                               ; preds = %dec_label_pc_10d3c
  %v2_10d58 = icmp ugt i32 %v1_fe70, 157
  store i1 %v2_10d58, i1* %cpsr_c.global-to-local, align 1
  %v7_10d58 = icmp eq i32 %v1_fe70, 158
  store i1 %v7_10d58, i1* %cpsr_z.global-to-local, align 1
  %v2_10d5c = xor i1 %v7_10d58, true
  %v3_10d5c = and i1 %v2_10d58, %v2_10d5c
  br i1 %v3_10d5c, label %bb1661, label %bb1662

bb1661:                                           ; preds = %dec_label_pc_10d58
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1662

bb1662:                                           ; preds = %dec_label_pc_10d58, %bb1661
  %v0_10d64888 = phi i32 [ %.1962, %dec_label_pc_10d58 ], [ 0, %bb1661 ]
  %v2_10d60 = xor i1 %v2_10d58, true
  %v3_10d60 = or i1 %v7_10d58, %v2_10d60
  br i1 %v3_10d60, label %bb1663, label %bb1664

bb1663:                                           ; preds = %bb1662
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1664

bb1664:                                           ; preds = %bb1662, %bb1663
  %v0_10d64 = phi i32 [ %v0_10d64888, %bb1662 ], [ 1, %bb1663 ]
  %v2_10d64 = and i32 %v3_fe60, 64
  %v3_10d64 = icmp ne i32 %v2_10d64, 0
  store i1 %v3_10d64, i1* %cpsr_c.global-to-local, align 1
  %v4_10d64 = udiv i32 %v1_fe70, 128
  %v5_10d64 = and i32 %v0_10d64, %v4_10d64
  store i32 %v5_10d64, i32* %r3.global-to-local, align 4
  %v6_10d64 = icmp eq i32 %v5_10d64, 0
  store i1 %v6_10d64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_10d64, label %dec_label_pc_10d6c, label %dec_label_pc_fe54

dec_label_pc_10d6c:                               ; preds = %bb1664, %dec_label_pc_10d3c
  store i32 %.1984, i32* %r3.global-to-local, align 4
  store i1 %v2_10300, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10300, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10300, label %.thread351, label %.thread352

.thread352:                                       ; preds = %dec_label_pc_10d6c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10d9c

.thread351:                                       ; preds = %dec_label_pc_10d6c
  store i32 %.1984, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10d7c = icmp eq i1 %v7_10934, false
  store i1 %v2_10d7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10d7c, label %dec_label_pc_10d9c, label %dec_label_pc_10d84

dec_label_pc_10d84:                               ; preds = %.thread351
  store i32 %v1_fe70, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10d84 = icmp eq i32 %v1_fe70, 0
  store i1 %v2_10d84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10d84, label %bb1667.thread, label %bb1666

bb1667.thread:                                    ; preds = %dec_label_pc_10d84
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10d9c

bb1666:                                           ; preds = %dec_label_pc_10d84
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_10d8c = icmp ugt i32 %v1_fe70, 125
  store i1 %v2_10d8c, i1* %cpsr_c.global-to-local, align 1
  %v7_10d8c = icmp eq i32 %v1_fe70, 126
  store i1 %v7_10d8c, i1* %cpsr_z.global-to-local, align 1
  %v2_10d90 = xor i1 %v7_10d8c, true
  %v3_10d90 = and i1 %v2_10d8c, %v2_10d90
  br i1 %v3_10d90, label %.thread356, label %bb1667

.thread356:                                       ; preds = %bb1666
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10d9c

bb1667:                                           ; preds = %bb1666
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fe54

dec_label_pc_10d9c:                               ; preds = %bb1667.thread, %.thread356, %.thread352, %.thread351
  %v2_10d9c = icmp ugt i32 %v1_fe58, 215
  store i1 %v2_10d9c, i1* %cpsr_c.global-to-local, align 1
  %v7_10d9c = icmp eq i32 %v1_fe58, 216
  store i1 %v7_10d9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10d9c, label %.thread359, label %.thread360

.thread360:                                       ; preds = %dec_label_pc_10d9c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10dc4

.thread359:                                       ; preds = %dec_label_pc_10d9c
  store i32 %.1990, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10da8 = icmp eq i1 %v7_1060c, false
  store i1 %v2_10da8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10da8, label %dec_label_pc_10dc4, label %dec_label_pc_10db0

dec_label_pc_10db0:                               ; preds = %.thread359
  %v2_10db0 = icmp ugt i32 %v1_fe70, 157
  store i1 %v2_10db0, i1* %cpsr_c.global-to-local, align 1
  %v7_10db0 = icmp eq i32 %v1_fe70, 158
  store i1 %v7_10db0, i1* %cpsr_z.global-to-local, align 1
  %v2_10db4 = xor i1 %v7_10db0, true
  %v3_10db4 = and i1 %v2_10db0, %v2_10db4
  br i1 %v3_10db4, label %bb1668, label %bb1669

bb1668:                                           ; preds = %dec_label_pc_10db0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1669

bb1669:                                           ; preds = %dec_label_pc_10db0, %bb1668
  %v0_10dbc892 = phi i32 [ %.1990, %dec_label_pc_10db0 ], [ 0, %bb1668 ]
  %v2_10db8 = xor i1 %v2_10db0, true
  %v3_10db8 = or i1 %v7_10db0, %v2_10db8
  br i1 %v3_10db8, label %bb1670, label %bb1671

bb1670:                                           ; preds = %bb1669
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1671

bb1671:                                           ; preds = %bb1669, %bb1670
  %v0_10dbc = phi i32 [ %v0_10dbc892, %bb1669 ], [ 1, %bb1670 ]
  %v2_10dbc = and i32 %v3_fe60, 64
  %v3_10dbc = icmp ne i32 %v2_10dbc, 0
  store i1 %v3_10dbc, i1* %cpsr_c.global-to-local, align 1
  %v4_10dbc = udiv i32 %v1_fe70, 128
  %v5_10dbc = and i32 %v0_10dbc, %v4_10dbc
  store i32 %v5_10dbc, i32* %r3.global-to-local, align 4
  %v6_10dbc = icmp eq i32 %v5_10dbc, 0
  store i1 %v6_10dbc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_10dbc, label %dec_label_pc_10dc4, label %dec_label_pc_fe54

dec_label_pc_10dc4:                               ; preds = %.thread360, %bb1671, %.thread359
  %v2_10dc4 = icmp ugt i32 %v1_fe6c, 60
  %v7_10dc4 = icmp eq i32 %v1_fe6c, 61
  %.1994 = zext i1 %v7_10dc4 to i32
  store i32 %.1994, i32* %r4.global-to-local, align 4
  %v2_10dd0 = icmp ugt i32 %v1_fe58, 107
  store i1 %v2_10dd0, i1* %cpsr_c.global-to-local, align 1
  %v7_10dd0 = icmp eq i32 %v1_fe58, 108
  store i1 %v7_10dd0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10dd0, label %bb1674, label %dec_label_pc_10ddc

bb1674:                                           ; preds = %dec_label_pc_10dc4
  store i1 %v2_10dc4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10dc4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10dc4, label %dec_label_pc_fe54, label %dec_label_pc_10ddc

dec_label_pc_10ddc:                               ; preds = %dec_label_pc_10dc4, %bb1674
  store i32 %.1984, i32* %r3.global-to-local, align 4
  %v2_10de0 = icmp ugt i32 %v1_fe6c, 75
  store i1 %v2_10de0, i1* %cpsr_c.global-to-local, align 1
  %v7_10de0 = icmp eq i32 %v1_fe6c, 76
  store i1 %v7_10de0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10de0, label %.thread365, label %dec_label_pc_10df4

.thread365:                                       ; preds = %dec_label_pc_10ddc
  store i32 %.1984, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10dec = icmp eq i1 %v7_10934, false
  store i1 %v2_10dec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10dec, label %dec_label_pc_10df4.thread, label %dec_label_pc_fe54

dec_label_pc_10df4.thread:                        ; preds = %.thread365
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %.thread370

dec_label_pc_10df4:                               ; preds = %dec_label_pc_10ddc
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_10df4 = icmp ugt i32 %v1_fe6c, 10
  store i1 %v2_10df4, i1* %cpsr_c.global-to-local, align 1
  %v7_10df4 = icmp eq i32 %v1_fe6c, 11
  store i1 %v7_10df4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10df4, label %.thread369, label %.thread370

.thread370:                                       ; preds = %dec_label_pc_10df4.thread, %dec_label_pc_10df4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10e24

.thread369:                                       ; preds = %dec_label_pc_10df4
  store i32 %.1991, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10e00 = icmp eq i1 %v7_10c74, false
  store i1 %v2_10e00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10e00, label %dec_label_pc_10e24, label %dec_label_pc_10e08

dec_label_pc_10e08:                               ; preds = %.thread369
  %v2_10e08 = icmp ugt i32 %v1_fe70, 142
  store i1 %v2_10e08, i1* %cpsr_c.global-to-local, align 1
  %v7_10e08 = icmp eq i32 %v1_fe70, 143
  store i1 %v7_10e08, i1* %cpsr_z.global-to-local, align 1
  %v2_10e0c = xor i1 %v2_10e08, true
  %v3_10e0c = or i1 %v7_10e08, %v2_10e0c
  br i1 %v3_10e0c, label %bb1675, label %bb1676

bb1675:                                           ; preds = %dec_label_pc_10e08
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1676

bb1676:                                           ; preds = %dec_label_pc_10e08, %bb1675
  %v0_10e1c.pr896 = phi i32 [ %.1991, %dec_label_pc_10e08 ], [ 0, %bb1675 ]
  %v2_10e10 = xor i1 %v7_10e08, true
  %v3_10e10 = and i1 %v2_10e08, %v2_10e10
  br i1 %v3_10e10, label %bb1677, label %bb1678

bb1677:                                           ; preds = %bb1676
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1678

bb1678:                                           ; preds = %bb1676, %bb1677
  %v0_10e1c.pr = phi i32 [ %v0_10e1c.pr896, %bb1676 ], [ 1, %bb1677 ]
  %v2_10e14 = icmp ugt i32 %v1_fe70, 146
  store i1 %v2_10e14, i1* %cpsr_c.global-to-local, align 1
  %v7_10e14 = icmp eq i32 %v1_fe70, 147
  store i1 %v7_10e14, i1* %cpsr_z.global-to-local, align 1
  %v2_10e18 = xor i1 %v7_10e14, true
  %v3_10e18 = and i1 %v2_10e14, %v2_10e18
  br i1 %v3_10e18, label %.thread374, label %bb1679

.thread374:                                       ; preds = %bb1678
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10e24

bb1679:                                           ; preds = %bb1678
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10e1c = icmp eq i32 %v0_10e1c.pr, 0
  store i1 %v2_10e1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10e1c, label %dec_label_pc_10e24, label %dec_label_pc_fe54

dec_label_pc_10e24:                               ; preds = %.thread374, %.thread370, %bb1679, %.thread369
  store i32 %.1963, i32* %fp.global-to-local, align 4
  %v2_10e28 = and i32 %.1963, %.1991
  %v4_10e28 = icmp eq i32 %v2_10e28, 0
  store i1 %v4_10e28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_10e28, label %dec_label_pc_10e4c, label %dec_label_pc_10e30

dec_label_pc_10e30:                               ; preds = %dec_label_pc_10e24
  %v2_10e30 = icmp ugt i32 %v1_fe70, 19
  store i1 %v2_10e30, i1* %cpsr_c.global-to-local, align 1
  %v7_10e30 = icmp eq i32 %v1_fe70, 20
  store i1 %v7_10e30, i1* %cpsr_z.global-to-local, align 1
  %v2_10e34 = xor i1 %v2_10e30, true
  %v3_10e34 = or i1 %v7_10e30, %v2_10e34
  br i1 %v3_10e34, label %bb1680, label %bb1681

bb1680:                                           ; preds = %dec_label_pc_10e30
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1681

bb1681:                                           ; preds = %dec_label_pc_10e30, %bb1680
  %v2_10e38 = xor i1 %v7_10e30, true
  %v3_10e38 = and i1 %v2_10e30, %v2_10e38
  br i1 %v3_10e38, label %bb1682, label %bb1683

bb1682:                                           ; preds = %bb1681
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1683

bb1683:                                           ; preds = %bb1681, %bb1682
  %v0_10e44.pr = phi i32 [ 0, %bb1681 ], [ 1, %bb1682 ]
  %v2_10e3c = icmp ugt i32 %v1_fe70, 21
  store i1 %v2_10e3c, i1* %cpsr_c.global-to-local, align 1
  %v7_10e3c = icmp eq i32 %v1_fe70, 22
  store i1 %v7_10e3c, i1* %cpsr_z.global-to-local, align 1
  %v2_10e40 = xor i1 %v7_10e3c, true
  %v3_10e40 = and i1 %v2_10e3c, %v2_10e40
  br i1 %v3_10e40, label %.thread378, label %bb1684

.thread378:                                       ; preds = %bb1683
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10e4c

bb1684:                                           ; preds = %bb1683
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10e44 = icmp eq i32 %v0_10e44.pr, 0
  store i1 %v2_10e44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10e44, label %dec_label_pc_10e4c, label %dec_label_pc_fe54

dec_label_pc_10e4c:                               ; preds = %.thread378, %bb1684, %dec_label_pc_10e24
  %v2_10e4c = and i32 %.1994, %.1991
  %v4_10e4c = icmp eq i32 %v2_10e4c, 0
  store i1 %v4_10e4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_10e4c, label %dec_label_pc_10e70, label %dec_label_pc_10e54

dec_label_pc_10e54:                               ; preds = %dec_label_pc_10e4c
  %v2_10e54 = icmp ugt i32 %v1_fe70, 134
  store i1 %v2_10e54, i1* %cpsr_c.global-to-local, align 1
  %v7_10e54 = icmp eq i32 %v1_fe70, 135
  store i1 %v7_10e54, i1* %cpsr_z.global-to-local, align 1
  %v2_10e58 = xor i1 %v2_10e54, true
  %v3_10e58 = or i1 %v7_10e54, %v2_10e58
  br i1 %v3_10e58, label %bb1685, label %bb1686

bb1685:                                           ; preds = %dec_label_pc_10e54
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1686

bb1686:                                           ; preds = %dec_label_pc_10e54, %bb1685
  %v2_10e5c = xor i1 %v7_10e54, true
  %v3_10e5c = and i1 %v2_10e54, %v2_10e5c
  br i1 %v3_10e5c, label %bb1687, label %bb1688

bb1687:                                           ; preds = %bb1686
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1688

bb1688:                                           ; preds = %bb1686, %bb1687
  %v0_10e68.pr = phi i32 [ 0, %bb1686 ], [ 1, %bb1687 ]
  %v2_10e60 = icmp ugt i32 %v1_fe70, 137
  store i1 %v2_10e60, i1* %cpsr_c.global-to-local, align 1
  %v7_10e60 = icmp eq i32 %v1_fe70, 138
  store i1 %v7_10e60, i1* %cpsr_z.global-to-local, align 1
  %v2_10e64 = xor i1 %v7_10e60, true
  %v3_10e64 = and i1 %v2_10e60, %v2_10e64
  br i1 %v3_10e64, label %.thread382, label %bb1689

.thread382:                                       ; preds = %bb1688
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10e70

bb1689:                                           ; preds = %bb1688
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10e68 = icmp eq i32 %v0_10e68.pr, 0
  store i1 %v2_10e68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10e68, label %dec_label_pc_10e70, label %dec_label_pc_fe54

dec_label_pc_10e70:                               ; preds = %.thread382, %bb1689, %dec_label_pc_10e4c
  store i32 %storemerge1211, i32* %r3.global-to-local, align 4
  %v2_10e74 = and i32 %storemerge1211, %.1991
  %v4_10e74 = icmp eq i32 %v2_10e74, 0
  store i1 %v4_10e74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_10e74, label %dec_label_pc_10e98, label %dec_label_pc_10e7c

dec_label_pc_10e7c:                               ; preds = %dec_label_pc_10e70
  %v2_10e7c = icmp ugt i32 %v1_fe70, 185
  store i1 %v2_10e7c, i1* %cpsr_c.global-to-local, align 1
  %v7_10e7c = icmp eq i32 %v1_fe70, 186
  store i1 %v7_10e7c, i1* %cpsr_z.global-to-local, align 1
  %v2_10e80 = xor i1 %v2_10e7c, true
  %v3_10e80 = or i1 %v7_10e7c, %v2_10e80
  br i1 %v3_10e80, label %bb1690, label %bb1691

bb1690:                                           ; preds = %dec_label_pc_10e7c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1691

bb1691:                                           ; preds = %dec_label_pc_10e7c, %bb1690
  %v0_10e90.pr905 = phi i32 [ %storemerge1211, %dec_label_pc_10e7c ], [ 0, %bb1690 ]
  %v2_10e84 = xor i1 %v7_10e7c, true
  %v3_10e84 = and i1 %v2_10e7c, %v2_10e84
  br i1 %v3_10e84, label %bb1692, label %bb1693

bb1692:                                           ; preds = %bb1691
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1693

bb1693:                                           ; preds = %bb1691, %bb1692
  %v0_10e90.pr = phi i32 [ %v0_10e90.pr905, %bb1691 ], [ 1, %bb1692 ]
  %v2_10e88 = icmp ugt i32 %v1_fe70, 189
  store i1 %v2_10e88, i1* %cpsr_c.global-to-local, align 1
  %v7_10e88 = icmp eq i32 %v1_fe70, 190
  store i1 %v7_10e88, i1* %cpsr_z.global-to-local, align 1
  %v2_10e8c = xor i1 %v7_10e88, true
  %v3_10e8c = and i1 %v2_10e88, %v2_10e8c
  br i1 %v3_10e8c, label %.thread386, label %bb1694

.thread386:                                       ; preds = %bb1693
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10e98

bb1694:                                           ; preds = %bb1693
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10e90 = icmp eq i32 %v0_10e90.pr, 0
  store i1 %v2_10e90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10e90, label %dec_label_pc_10e98, label %dec_label_pc_fe54

dec_label_pc_10e98:                               ; preds = %.thread386, %bb1694, %dec_label_pc_10e70
  store i32 %.1993, i32* %r3.global-to-local, align 4
  store i1 %v2_10648, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10648, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10648, label %.thread389, label %.thread390

.thread390:                                       ; preds = %dec_label_pc_10e98
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10ecc

.thread389:                                       ; preds = %dec_label_pc_10e98
  store i32 %.1993, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10ea8 = icmp eq i1 %v7_10d40, false
  store i1 %v2_10ea8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10ea8, label %dec_label_pc_10ecc.thread, label %dec_label_pc_10eb0

dec_label_pc_10ecc.thread:                        ; preds = %.thread389
  store i32 %.1993, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %.thread398

dec_label_pc_10eb0:                               ; preds = %.thread389
  %v2_10eb0 = icmp ugt i32 %v1_fe70, 118
  store i1 %v2_10eb0, i1* %cpsr_c.global-to-local, align 1
  %v7_10eb0 = icmp eq i32 %v1_fe70, 119
  store i1 %v7_10eb0, i1* %cpsr_z.global-to-local, align 1
  %v2_10eb4 = xor i1 %v2_10eb0, true
  %v3_10eb4 = or i1 %v7_10eb0, %v2_10eb4
  br i1 %v3_10eb4, label %bb1695, label %bb1696

bb1695:                                           ; preds = %dec_label_pc_10eb0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1696

bb1696:                                           ; preds = %dec_label_pc_10eb0, %bb1695
  %v0_10ec4.pr908 = phi i32 [ %.1993, %dec_label_pc_10eb0 ], [ 0, %bb1695 ]
  %v2_10eb8 = xor i1 %v7_10eb0, true
  %v3_10eb8 = and i1 %v2_10eb0, %v2_10eb8
  br i1 %v3_10eb8, label %bb1697, label %bb1698

bb1697:                                           ; preds = %bb1696
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1698

bb1698:                                           ; preds = %bb1696, %bb1697
  %v0_10ec4.pr = phi i32 [ %v0_10ec4.pr908, %bb1696 ], [ 1, %bb1697 ]
  %v2_10ebc = icmp ugt i32 %v1_fe70, 213
  store i1 %v2_10ebc, i1* %cpsr_c.global-to-local, align 1
  %v7_10ebc = icmp eq i32 %v1_fe70, 214
  store i1 %v7_10ebc, i1* %cpsr_z.global-to-local, align 1
  %v2_10ec0 = xor i1 %v7_10ebc, true
  %v3_10ec0 = and i1 %v2_10ebc, %v2_10ec0
  br i1 %v3_10ec0, label %.thread394, label %bb1699

.thread394:                                       ; preds = %bb1698
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10ecc

bb1699:                                           ; preds = %bb1698
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10ec4 = icmp eq i32 %v0_10ec4.pr, 0
  store i1 %v2_10ec4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10ec4, label %dec_label_pc_10ecc, label %dec_label_pc_fe54

dec_label_pc_10ecc:                               ; preds = %.thread394, %.thread390, %bb1699
  store i32 %.1993, i32* %r3.global-to-local, align 4
  %v2_10ed0 = icmp ugt i32 %v1_fe6c, 150
  store i1 %v2_10ed0, i1* %cpsr_c.global-to-local, align 1
  %v7_10ed0 = icmp eq i32 %v1_fe6c, 151
  store i1 %v7_10ed0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10ed0, label %.thread397, label %.thread398

.thread398:                                       ; preds = %dec_label_pc_10ecc.thread, %dec_label_pc_10ecc
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10f00

.thread397:                                       ; preds = %dec_label_pc_10ecc
  store i32 %.1993, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10edc = icmp eq i1 %v7_10d40, false
  store i1 %v2_10edc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10edc, label %dec_label_pc_10f00.thread, label %dec_label_pc_10ee4

dec_label_pc_10f00.thread:                        ; preds = %.thread397
  store i32 %.1966, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %.thread406

dec_label_pc_10ee4:                               ; preds = %.thread397
  %v2_10ee4 = icmp ugt i32 %v1_fe70, 135
  store i1 %v2_10ee4, i1* %cpsr_c.global-to-local, align 1
  %v7_10ee4 = icmp eq i32 %v1_fe70, 136
  store i1 %v7_10ee4, i1* %cpsr_z.global-to-local, align 1
  %v2_10ee8 = xor i1 %v2_10ee4, true
  %v3_10ee8 = or i1 %v7_10ee4, %v2_10ee8
  br i1 %v3_10ee8, label %bb1700, label %bb1701

bb1700:                                           ; preds = %dec_label_pc_10ee4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1701

bb1701:                                           ; preds = %dec_label_pc_10ee4, %bb1700
  %v0_10ef8.pr911 = phi i32 [ %.1993, %dec_label_pc_10ee4 ], [ 0, %bb1700 ]
  %v2_10eec = xor i1 %v7_10ee4, true
  %v3_10eec = and i1 %v2_10ee4, %v2_10eec
  br i1 %v3_10eec, label %bb1702, label %bb1703

bb1702:                                           ; preds = %bb1701
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1703

bb1703:                                           ; preds = %bb1701, %bb1702
  %v0_10ef8.pr = phi i32 [ %v0_10ef8.pr911, %bb1701 ], [ 1, %bb1702 ]
  %v2_10ef0 = icmp ugt i32 %v1_fe70, 137
  store i1 %v2_10ef0, i1* %cpsr_c.global-to-local, align 1
  %v7_10ef0 = icmp eq i32 %v1_fe70, 138
  store i1 %v7_10ef0, i1* %cpsr_z.global-to-local, align 1
  %v2_10ef4 = xor i1 %v7_10ef0, true
  %v3_10ef4 = and i1 %v2_10ef0, %v2_10ef4
  br i1 %v3_10ef4, label %.thread402, label %bb1704

.thread402:                                       ; preds = %bb1703
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10f00

bb1704:                                           ; preds = %bb1703
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10ef8 = icmp eq i32 %v0_10ef8.pr, 0
  store i1 %v2_10ef8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10ef8, label %dec_label_pc_10f00, label %dec_label_pc_fe54

dec_label_pc_10f00:                               ; preds = %.thread402, %.thread398, %bb1704
  store i32 %.1966, i32* %r3.global-to-local, align 4
  %v2_10f04 = icmp ugt i32 %v1_fe6c, 93
  store i1 %v2_10f04, i1* %cpsr_c.global-to-local, align 1
  %v7_10f04 = icmp eq i32 %v1_fe6c, 94
  store i1 %v7_10f04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10f04, label %.thread405, label %.thread406

.thread406:                                       ; preds = %dec_label_pc_10f00.thread, %dec_label_pc_10f00
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10f24

.thread405:                                       ; preds = %dec_label_pc_10f00
  store i32 %.1966, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10f10 = icmp eq i1 %v7_102b4, false
  store i1 %v2_10f10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10f10, label %dec_label_pc_10f24, label %dec_label_pc_10f18

dec_label_pc_10f18:                               ; preds = %.thread405
  %v2_10f18 = icmp eq i32 %v1_fe70, 255
  store i1 %v2_10f18, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_10f18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10f18, label %dec_label_pc_10f24, label %bb1705

bb1705:                                           ; preds = %dec_label_pc_10f18
  %v3_10f1c = icmp ugt i32 %v1_fe70, 235
  store i1 %v3_10f1c, i1* %cpsr_c.global-to-local, align 1
  %v8_10f1c = icmp eq i32 %v1_fe70, 236
  store i1 %v8_10f1c, i1* %cpsr_z.global-to-local, align 1
  %v2_10f20 = xor i1 %v8_10f1c, true
  %v3_10f20 = and i1 %v3_10f1c, %v2_10f20
  br i1 %v3_10f20, label %dec_label_pc_fe54, label %dec_label_pc_10f24

dec_label_pc_10f24:                               ; preds = %dec_label_pc_10f18, %.thread406, %bb1705, %.thread405
  %v0_10f44.pr917 = phi i32 [ 0, %.thread406 ], [ %.1966, %bb1705 ], [ 0, %.thread405 ], [ %.1966, %dec_label_pc_10f18 ]
  %v2_10f24 = icmp ugt i32 %v1_fe58, 62
  store i1 %v2_10f24, i1* %cpsr_c.global-to-local, align 1
  %v7_10f24 = icmp eq i32 %v1_fe58, 63
  store i1 %v7_10f24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10f24, label %bb1706, label %dec_label_pc_10f4c

bb1706:                                           ; preds = %dec_label_pc_10f24
  store i1 %v2_10820, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10820, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10820, label %dec_label_pc_10f30, label %dec_label_pc_10f4c.thread

dec_label_pc_10f4c.thread:                        ; preds = %bb1706
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10f74

dec_label_pc_10f30:                               ; preds = %bb1706
  %v2_10f30 = icmp ugt i32 %v1_fe70, 17
  store i1 %v2_10f30, i1* %cpsr_c.global-to-local, align 1
  %v7_10f30 = icmp eq i32 %v1_fe70, 18
  store i1 %v7_10f30, i1* %cpsr_z.global-to-local, align 1
  %v2_10f34 = xor i1 %v2_10f30, true
  %v3_10f34 = or i1 %v7_10f30, %v2_10f34
  br i1 %v3_10f34, label %bb1707, label %bb1708

bb1707:                                           ; preds = %dec_label_pc_10f30
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1708

bb1708:                                           ; preds = %dec_label_pc_10f30, %bb1707
  %v0_10f44.pr916 = phi i32 [ %v0_10f44.pr917, %dec_label_pc_10f30 ], [ 0, %bb1707 ]
  %v2_10f38 = xor i1 %v7_10f30, true
  %v3_10f38 = and i1 %v2_10f30, %v2_10f38
  br i1 %v3_10f38, label %bb1709, label %bb1710

bb1709:                                           ; preds = %bb1708
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1710

bb1710:                                           ; preds = %bb1708, %bb1709
  %v0_10f44.pr = phi i32 [ %v0_10f44.pr916, %bb1708 ], [ 1, %bb1709 ]
  %v2_10f3c = icmp ugt i32 %v1_fe70, 19
  store i1 %v2_10f3c, i1* %cpsr_c.global-to-local, align 1
  %v7_10f3c = icmp eq i32 %v1_fe70, 20
  store i1 %v7_10f3c, i1* %cpsr_z.global-to-local, align 1
  %v2_10f40 = xor i1 %v7_10f3c, true
  %v3_10f40 = and i1 %v2_10f3c, %v2_10f40
  br i1 %v3_10f40, label %.thread411, label %bb1711

.thread411:                                       ; preds = %bb1710
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10f4c

bb1711:                                           ; preds = %bb1710
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10f44 = icmp eq i32 %v0_10f44.pr, 0
  store i1 %v2_10f44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10f44, label %dec_label_pc_10f4c, label %dec_label_pc_fe54

dec_label_pc_10f4c:                               ; preds = %dec_label_pc_10f24, %.thread411, %bb1711
  %v0_10f6c.pr920 = phi i32 [ %v0_10f44.pr917, %dec_label_pc_10f24 ], [ 0, %.thread411 ], [ 0, %bb1711 ]
  %v2_10f4c = icmp ugt i32 %v1_fe58, 69
  store i1 %v2_10f4c, i1* %cpsr_c.global-to-local, align 1
  %v7_10f4c = icmp eq i32 %v1_fe58, 70
  store i1 %v7_10f4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10f4c, label %bb1712, label %dec_label_pc_10f74

bb1712:                                           ; preds = %dec_label_pc_10f4c
  %v3_10f50 = icmp ugt i32 %v1_fe6c, 41
  store i1 %v3_10f50, i1* %cpsr_c.global-to-local, align 1
  %v8_10f50 = icmp eq i32 %v1_fe6c, 42
  store i1 %v8_10f50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10f50, label %dec_label_pc_10f58, label %dec_label_pc_10f74

dec_label_pc_10f58:                               ; preds = %bb1712
  %v2_10f58 = icmp ugt i32 %v1_fe70, 71
  store i1 %v2_10f58, i1* %cpsr_c.global-to-local, align 1
  %v7_10f58 = icmp eq i32 %v1_fe70, 72
  store i1 %v7_10f58, i1* %cpsr_z.global-to-local, align 1
  %v2_10f5c = xor i1 %v2_10f58, true
  %v3_10f5c = or i1 %v7_10f58, %v2_10f5c
  br i1 %v3_10f5c, label %bb1713, label %bb1714

bb1713:                                           ; preds = %dec_label_pc_10f58
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1714

bb1714:                                           ; preds = %dec_label_pc_10f58, %bb1713
  %v0_10f6c.pr919 = phi i32 [ %v0_10f6c.pr920, %dec_label_pc_10f58 ], [ 0, %bb1713 ]
  %v2_10f60 = xor i1 %v7_10f58, true
  %v3_10f60 = and i1 %v2_10f58, %v2_10f60
  br i1 %v3_10f60, label %bb1715, label %bb1716

bb1715:                                           ; preds = %bb1714
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1716

bb1716:                                           ; preds = %bb1714, %bb1715
  %v0_10f6c.pr = phi i32 [ %v0_10f6c.pr919, %bb1714 ], [ 1, %bb1715 ]
  %v2_10f64 = icmp ugt i32 %v1_fe70, 73
  store i1 %v2_10f64, i1* %cpsr_c.global-to-local, align 1
  %v7_10f64 = icmp eq i32 %v1_fe70, 74
  store i1 %v7_10f64, i1* %cpsr_z.global-to-local, align 1
  %v2_10f68 = xor i1 %v7_10f64, true
  %v3_10f68 = and i1 %v2_10f64, %v2_10f68
  br i1 %v3_10f68, label %.thread416, label %bb1717

.thread416:                                       ; preds = %bb1716
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10f74

bb1717:                                           ; preds = %bb1716
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10f6c = icmp eq i32 %v0_10f6c.pr, 0
  store i1 %v2_10f6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10f6c, label %dec_label_pc_10f74, label %dec_label_pc_fe54

dec_label_pc_10f74:                               ; preds = %dec_label_pc_10f4c.thread, %dec_label_pc_10f4c, %.thread416, %bb1717, %bb1712
  %v0_10fa0.pr923 = phi i32 [ %v0_10f6c.pr920, %dec_label_pc_10f4c ], [ 0, %.thread416 ], [ 0, %bb1717 ], [ %v0_10f6c.pr920, %bb1712 ], [ %v0_10f44.pr917, %dec_label_pc_10f4c.thread ]
  %v7_10f74 = icmp eq i32 %v1_fe58, 74
  %.1995 = zext i1 %v7_10f74 to i32
  store i32 %.1995, i32* %lr.global-to-local, align 4
  %v2_10f80 = icmp ugt i32 %v1_fe6c, 90
  store i1 %v2_10f80, i1* %cpsr_c.global-to-local, align 1
  %v7_10f80 = icmp eq i32 %v1_fe6c, 91
  store i1 %v7_10f80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10f80, label %bb1720, label %dec_label_pc_10fa8

bb1720:                                           ; preds = %dec_label_pc_10f74
  %v2_10f74 = icmp ugt i32 %v1_fe58, 73
  store i1 %v2_10f74, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10f74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10f74, label %dec_label_pc_10f8c, label %dec_label_pc_10fa8.thread

dec_label_pc_10fa8.thread:                        ; preds = %bb1720
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %.thread426

dec_label_pc_10f8c:                               ; preds = %bb1720
  %v2_10f8c = icmp ugt i32 %v1_fe70, 111
  store i1 %v2_10f8c, i1* %cpsr_c.global-to-local, align 1
  %v7_10f8c = icmp eq i32 %v1_fe70, 112
  store i1 %v7_10f8c, i1* %cpsr_z.global-to-local, align 1
  %v2_10f90 = xor i1 %v2_10f8c, true
  %v3_10f90 = or i1 %v7_10f8c, %v2_10f90
  br i1 %v3_10f90, label %bb1721, label %bb1722

bb1721:                                           ; preds = %dec_label_pc_10f8c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1722

bb1722:                                           ; preds = %dec_label_pc_10f8c, %bb1721
  %v0_10fa0.pr922 = phi i32 [ %v0_10fa0.pr923, %dec_label_pc_10f8c ], [ 0, %bb1721 ]
  %v2_10f94 = xor i1 %v7_10f8c, true
  %v3_10f94 = and i1 %v2_10f8c, %v2_10f94
  br i1 %v3_10f94, label %bb1723, label %bb1724

bb1723:                                           ; preds = %bb1722
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1724

bb1724:                                           ; preds = %bb1722, %bb1723
  %v0_10fa0.pr = phi i32 [ %v0_10fa0.pr922, %bb1722 ], [ 1, %bb1723 ]
  %v2_10f98 = icmp ugt i32 %v1_fe70, 113
  store i1 %v2_10f98, i1* %cpsr_c.global-to-local, align 1
  %v7_10f98 = icmp eq i32 %v1_fe70, 114
  store i1 %v7_10f98, i1* %cpsr_z.global-to-local, align 1
  %v2_10f9c = xor i1 %v7_10f98, true
  %v3_10f9c = and i1 %v2_10f98, %v2_10f9c
  br i1 %v3_10f9c, label %.thread422, label %bb1725

.thread422:                                       ; preds = %bb1724
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10fa8

bb1725:                                           ; preds = %bb1724
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10fa0 = icmp eq i32 %v0_10fa0.pr, 0
  store i1 %v2_10fa0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10fa0, label %dec_label_pc_10fa8, label %dec_label_pc_fe54

dec_label_pc_10fa8:                               ; preds = %dec_label_pc_10f74, %.thread422, %bb1725
  %v2_10fa8 = icmp ugt i32 %v1_fe6c, 200
  store i1 %v2_10fa8, i1* %cpsr_c.global-to-local, align 1
  %v7_10fa8 = icmp eq i32 %v1_fe6c, 201
  store i1 %v7_10fa8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10fa8, label %.thread425, label %.thread426

.thread426:                                       ; preds = %dec_label_pc_10fa8.thread, %dec_label_pc_10fa8
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10fd8

.thread425:                                       ; preds = %dec_label_pc_10fa8
  store i32 %.1995, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10fb4 = icmp eq i1 %v7_10f74, false
  store i1 %v2_10fb4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10fb4, label %dec_label_pc_10fd8, label %dec_label_pc_10fbc

dec_label_pc_10fbc:                               ; preds = %.thread425
  %v2_10fbc = icmp ugt i32 %v1_fe70, 54
  store i1 %v2_10fbc, i1* %cpsr_c.global-to-local, align 1
  %v7_10fbc = icmp eq i32 %v1_fe70, 55
  store i1 %v7_10fbc, i1* %cpsr_z.global-to-local, align 1
  %v2_10fc0 = xor i1 %v2_10fbc, true
  %v3_10fc0 = or i1 %v7_10fbc, %v2_10fc0
  br i1 %v3_10fc0, label %bb1726, label %bb1727

bb1726:                                           ; preds = %dec_label_pc_10fbc
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1727

bb1727:                                           ; preds = %dec_label_pc_10fbc, %bb1726
  %v0_10fd0.pr926 = phi i32 [ %.1995, %dec_label_pc_10fbc ], [ 0, %bb1726 ]
  %v2_10fc4 = xor i1 %v7_10fbc, true
  %v3_10fc4 = and i1 %v2_10fbc, %v2_10fc4
  br i1 %v3_10fc4, label %bb1728, label %bb1729

bb1728:                                           ; preds = %bb1727
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1729

bb1729:                                           ; preds = %bb1727, %bb1728
  %v0_10fd0.pr = phi i32 [ %v0_10fd0.pr926, %bb1727 ], [ 1, %bb1728 ]
  %v2_10fc8 = icmp ugt i32 %v1_fe70, 56
  store i1 %v2_10fc8, i1* %cpsr_c.global-to-local, align 1
  %v7_10fc8 = icmp eq i32 %v1_fe70, 57
  store i1 %v7_10fc8, i1* %cpsr_z.global-to-local, align 1
  %v2_10fcc = xor i1 %v7_10fc8, true
  %v3_10fcc = and i1 %v2_10fc8, %v2_10fcc
  br i1 %v3_10fcc, label %.thread430, label %bb1730

.thread430:                                       ; preds = %bb1729
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10fd8

bb1730:                                           ; preds = %bb1729
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10fd0 = icmp eq i32 %v0_10fd0.pr, 0
  store i1 %v2_10fd0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10fd0, label %dec_label_pc_10fd8, label %dec_label_pc_fe54

dec_label_pc_10fd8:                               ; preds = %.thread430, %.thread426, %bb1730, %.thread425
  store i32 %.1983, i32* %fp.global-to-local, align 4
  %v2_10fdc = icmp ugt i32 %v1_fe6c, 208
  store i1 %v2_10fdc, i1* %cpsr_c.global-to-local, align 1
  %v7_10fdc = icmp eq i32 %v1_fe6c, 209
  %.1996 = zext i1 %v7_10fdc to i32
  store i32 %.1996, i32* %r4.global-to-local, align 4
  %v2_10fe8 = and i32 %.1996, %.1983
  %v4_10fe8 = icmp eq i32 %v2_10fe8, 0
  store i1 %v4_10fe8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_10fe8, label %dec_label_pc_1100c, label %dec_label_pc_10ff0

dec_label_pc_10ff0:                               ; preds = %dec_label_pc_10fd8
  %v2_10ff0 = icmp ugt i32 %v1_fe70, 46
  store i1 %v2_10ff0, i1* %cpsr_c.global-to-local, align 1
  %v7_10ff0 = icmp eq i32 %v1_fe70, 47
  store i1 %v7_10ff0, i1* %cpsr_z.global-to-local, align 1
  %v2_10ff4 = xor i1 %v2_10ff0, true
  %v3_10ff4 = or i1 %v7_10ff0, %v2_10ff4
  br i1 %v3_10ff4, label %bb1733, label %bb1734

bb1733:                                           ; preds = %dec_label_pc_10ff0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1734

bb1734:                                           ; preds = %dec_label_pc_10ff0, %bb1733
  %v2_10ff8 = xor i1 %v7_10ff0, true
  %v3_10ff8 = and i1 %v2_10ff0, %v2_10ff8
  br i1 %v3_10ff8, label %bb1735, label %bb1736

bb1735:                                           ; preds = %bb1734
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1736

bb1736:                                           ; preds = %bb1734, %bb1735
  %v0_11004.pr = phi i32 [ 0, %bb1734 ], [ 1, %bb1735 ]
  %v2_10ffc = icmp ugt i32 %v1_fe70, 51
  store i1 %v2_10ffc, i1* %cpsr_c.global-to-local, align 1
  %v7_10ffc = icmp eq i32 %v1_fe70, 52
  store i1 %v7_10ffc, i1* %cpsr_z.global-to-local, align 1
  %v2_11000 = xor i1 %v7_10ffc, true
  %v3_11000 = and i1 %v2_10ffc, %v2_11000
  br i1 %v3_11000, label %.thread435, label %bb1737

.thread435:                                       ; preds = %bb1736
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1100c

bb1737:                                           ; preds = %bb1736
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11004 = icmp eq i32 %v0_11004.pr, 0
  store i1 %v2_11004, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11004, label %dec_label_pc_1100c, label %dec_label_pc_fe54

dec_label_pc_1100c:                               ; preds = %.thread435, %bb1737, %dec_label_pc_10fd8
  store i32 %.1983, i32* %r3.global-to-local, align 4
  %v2_11010 = icmp ugt i32 %v1_fe6c, 164
  store i1 %v2_11010, i1* %cpsr_c.global-to-local, align 1
  %v7_11010 = icmp eq i32 %v1_fe6c, 165
  store i1 %v7_11010, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11010, label %.thread438, label %.thread439

.thread439:                                       ; preds = %dec_label_pc_1100c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11024

.thread438:                                       ; preds = %dec_label_pc_1100c
  store i32 %.1983, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1101c = icmp eq i1 %v7_108d0, false
  store i1 %v2_1101c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1101c, label %dec_label_pc_11024, label %dec_label_pc_fe54

dec_label_pc_11024:                               ; preds = %.thread439, %.thread438
  store i32 %storemerge1173, i32* %r3.global-to-local, align 4
  %v2_11028 = icmp ugt i32 %v1_fe58, 148
  store i1 %v2_11028, i1* %cpsr_c.global-to-local, align 1
  %v7_11028 = icmp eq i32 %v1_fe58, 149
  store i1 %v7_11028, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11028, label %.thread442, label %dec_label_pc_1103c

.thread442:                                       ; preds = %dec_label_pc_11024
  store i32 %storemerge1173, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11034 = icmp eq i1 %v7_10084, false
  store i1 %v2_11034, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11034, label %dec_label_pc_1103c.thread, label %dec_label_pc_fe54

dec_label_pc_1103c.thread:                        ; preds = %.thread442
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %.thread447

dec_label_pc_1103c:                               ; preds = %dec_label_pc_11024
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_1103c = icmp ugt i32 %v1_fe58, 150
  store i1 %v2_1103c, i1* %cpsr_c.global-to-local, align 1
  %v7_1103c = icmp eq i32 %v1_fe58, 151
  store i1 %v7_1103c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1103c, label %.thread446, label %.thread447

.thread447:                                       ; preds = %dec_label_pc_1103c.thread, %dec_label_pc_1103c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11050

.thread446:                                       ; preds = %dec_label_pc_1103c
  store i32 %.1942, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11048 = icmp eq i1 %v7_ff2c, false
  store i1 %v2_11048, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11048, label %dec_label_pc_11050, label %dec_label_pc_fe54

dec_label_pc_11050:                               ; preds = %.thread447, %.thread446
  store i32 %.1955, i32* %r3.global-to-local, align 4
  %v2_11054 = icmp ugt i32 %v1_fe6c, 131
  store i1 %v2_11054, i1* %cpsr_c.global-to-local, align 1
  %v7_11054 = icmp eq i32 %v1_fe6c, 132
  store i1 %v7_11054, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11054, label %.thread450, label %.thread451

.thread451:                                       ; preds = %dec_label_pc_11050
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11068

.thread450:                                       ; preds = %dec_label_pc_11050
  store i32 %.1955, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11060 = icmp eq i1 %v7_10140, false
  store i1 %v2_11060, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11060, label %dec_label_pc_11068, label %dec_label_pc_fe54

dec_label_pc_11068:                               ; preds = %.thread451, %.thread450
  %v2_11068 = icmp ugt i32 %v1_fe58, 175
  store i1 %v2_11068, i1* %cpsr_c.global-to-local, align 1
  %v7_11068 = icmp eq i32 %v1_fe58, 176
  store i1 %v7_11068, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11068, label %bb1738, label %dec_label_pc_11074

bb1738:                                           ; preds = %dec_label_pc_11068
  %v3_1106c = icmp ugt i32 %v1_fe6c, 30
  store i1 %v3_1106c, i1* %cpsr_c.global-to-local, align 1
  %v8_1106c = icmp eq i32 %v1_fe6c, 31
  store i1 %v8_1106c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1106c, label %dec_label_pc_fe54, label %dec_label_pc_11074

dec_label_pc_11074:                               ; preds = %dec_label_pc_11068, %bb1738
  store i32 %.1946, i32* %lr.global-to-local, align 4
  store i32 %.1956, i32* %r3.global-to-local, align 4
  %v2_1107c = and i32 %.1946, %.1956
  %v4_1107c = icmp eq i32 %v2_1107c, 0
  store i1 %v4_1107c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_1107c, label %dec_label_pc_11084, label %dec_label_pc_fe54

dec_label_pc_11084:                               ; preds = %dec_label_pc_11074
  store i32 %storemerge1175, i32* %fp.global-to-local, align 4
  store i32 %.1985, i32* %lr.global-to-local, align 4
  %v2_1108c = and i32 %storemerge1175, %.1985
  %v4_1108c = icmp eq i32 %v2_1108c, 0
  store i1 %v4_1108c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_1108c, label %dec_label_pc_11094, label %dec_label_pc_fe54

dec_label_pc_11094:                               ; preds = %dec_label_pc_11084
  store i32 %.1985, i32* %r3.global-to-local, align 4
  %v2_11098 = icmp ugt i32 %v1_fe6c, 32
  store i1 %v2_11098, i1* %cpsr_c.global-to-local, align 1
  %v7_11098 = icmp eq i32 %v1_fe6c, 33
  store i1 %v7_11098, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11098, label %.thread455, label %.thread456

.thread456:                                       ; preds = %dec_label_pc_11094
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_110ac

.thread455:                                       ; preds = %dec_label_pc_11094
  store i32 %.1985, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_110a4 = icmp eq i1 %v7_1094c, false
  store i1 %v2_110a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_110a4, label %dec_label_pc_110ac, label %dec_label_pc_fe54

dec_label_pc_110ac:                               ; preds = %.thread456, %.thread455
  store i32 %.1959, i32* %r3.global-to-local, align 4
  %v2_110b0 = and i32 %.1959, %.1988
  %v4_110b0 = icmp eq i32 %v2_110b0, 0
  store i1 %v4_110b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_110b0, label %dec_label_pc_110b8, label %dec_label_pc_fe54

dec_label_pc_110b8:                               ; preds = %dec_label_pc_110ac
  %v2_110b8 = icmp ugt i32 %v1_fe6c, 186
  store i1 %v2_110b8, i1* %cpsr_c.global-to-local, align 1
  %v7_110b8 = icmp eq i32 %v1_fe6c, 187
  store i1 %v7_110b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_110b8, label %.thread459, label %.thread460

.thread460:                                       ; preds = %dec_label_pc_110b8
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_110cc

.thread459:                                       ; preds = %dec_label_pc_110b8
  store i32 %.1988, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_110c4 = icmp eq i1 %v7_10b24, false
  store i1 %v2_110c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_110c4, label %dec_label_pc_110cc, label %dec_label_pc_fe54

dec_label_pc_110cc:                               ; preds = %.thread460, %.thread459
  %v2_110cc = icmp ugt i32 %v1_fe58, 45
  store i1 %v2_110cc, i1* %cpsr_c.global-to-local, align 1
  %v7_110cc = icmp eq i32 %v1_fe58, 46
  store i1 %v7_110cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_110cc, label %bb1739, label %dec_label_pc_110d8

bb1739:                                           ; preds = %dec_label_pc_110cc
  %v3_110d0 = icmp ugt i32 %v1_fe6c, 104
  store i1 %v3_110d0, i1* %cpsr_c.global-to-local, align 1
  %v8_110d0 = icmp eq i32 %v1_fe6c, 105
  store i1 %v8_110d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_110d0, label %dec_label_pc_fe54, label %dec_label_pc_110d8

dec_label_pc_110d8:                               ; preds = %dec_label_pc_110cc, %bb1739
  store i32 %storemerge1193, i32* %fp.global-to-local, align 4
  %v2_110dc = icmp ugt i32 %v1_fe58, 50
  store i1 %v2_110dc, i1* %cpsr_c.global-to-local, align 1
  %v7_110dc = icmp eq i32 %v1_fe58, 51
  %.1997 = zext i1 %v7_110dc to i32
  %v2_110e8 = and i32 %storemerge1193, %.1997
  %v4_110e8 = icmp eq i32 %v2_110e8, 0
  store i1 %v4_110e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_110e8, label %dec_label_pc_110f0, label %dec_label_pc_fe54

dec_label_pc_110f0:                               ; preds = %dec_label_pc_110d8
  %v2_110f0 = icmp eq i32 %v1_fe6c, 255
  store i1 %v2_110f0, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_110f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_110f0, label %.thread465, label %.thread466

.thread466:                                       ; preds = %dec_label_pc_110f0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11104

.thread465:                                       ; preds = %dec_label_pc_110f0
  store i32 %.1997, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_110fc = icmp eq i1 %v7_110dc, false
  store i1 %v2_110fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_110fc, label %dec_label_pc_11104, label %dec_label_pc_fe54

dec_label_pc_11104:                               ; preds = %.thread466, %.thread465
  %v7_11104 = icmp eq i32 %v1_fe58, 5
  %.1998 = zext i1 %v7_11104 to i32
  store i32 %.1998, i32* %r3.global-to-local, align 4
  %v2_11110 = icmp ugt i32 %v1_fe6c, 134
  store i1 %v2_11110, i1* %cpsr_c.global-to-local, align 1
  %v7_11110 = icmp eq i32 %v1_fe6c, 135
  store i1 %v7_11110, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11110, label %bb1744, label %dec_label_pc_1111c

bb1744:                                           ; preds = %dec_label_pc_11104
  %v2_11104 = icmp ugt i32 %v1_fe58, 4
  store i1 %v2_11104, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_11104, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11104, label %dec_label_pc_fe54, label %dec_label_pc_1111c

dec_label_pc_1111c:                               ; preds = %dec_label_pc_11104, %bb1744
  store i32 %.1949, i32* %lr.global-to-local, align 4
  %v2_11120 = and i32 %.1949, %.1998
  %v4_11120 = icmp eq i32 %v2_11120, 0
  store i1 %v4_11120, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_11120, label %dec_label_pc_11128, label %dec_label_pc_fe54

dec_label_pc_11128:                               ; preds = %dec_label_pc_1111c
  store i1 %v2_10404, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10404, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10404, label %.thread471, label %.thread472

.thread472:                                       ; preds = %dec_label_pc_11128
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1113c

.thread471:                                       ; preds = %dec_label_pc_11128
  store i32 %.1998, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11134 = icmp eq i1 %v7_11104, false
  store i1 %v2_11134, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11134, label %dec_label_pc_1113c, label %dec_label_pc_fe54

dec_label_pc_1113c:                               ; preds = %.thread472, %.thread471
  %v2_1113c = icmp ugt i32 %v1_fe58, 90
  store i1 %v2_1113c, i1* %cpsr_c.global-to-local, align 1
  %v7_1113c = icmp eq i32 %v1_fe58, 91
  store i1 %v7_1113c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1113c, label %bb1745, label %dec_label_pc_11148

bb1745:                                           ; preds = %dec_label_pc_1113c
  %v3_11140 = icmp ugt i32 %v1_fe6c, 133
  store i1 %v3_11140, i1* %cpsr_c.global-to-local, align 1
  %v8_11140 = icmp eq i32 %v1_fe6c, 134
  store i1 %v8_11140, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11140, label %dec_label_pc_fe54, label %dec_label_pc_11148

dec_label_pc_11148:                               ; preds = %dec_label_pc_1113c, %bb1745
  store i32 %.1982, i32* %r3.global-to-local, align 4
  %v2_1114c = icmp ugt i32 %v1_fe6c, 199
  store i1 %v2_1114c, i1* %cpsr_c.global-to-local, align 1
  %v7_1114c = icmp eq i32 %v1_fe6c, 200
  store i1 %v7_1114c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1114c, label %.thread476, label %.thread477

.thread477:                                       ; preds = %dec_label_pc_11148
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11174

.thread476:                                       ; preds = %dec_label_pc_11148
  store i32 %.1982, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11158 = icmp eq i1 %v7_108b0, false
  store i1 %v2_11158, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11158, label %dec_label_pc_11174.thread, label %dec_label_pc_11160

dec_label_pc_11174.thread:                        ; preds = %.thread476
  store i32 %.1986, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %.thread481

dec_label_pc_11160:                               ; preds = %.thread476
  %v2_11160 = icmp ugt i32 %v1_fe70, 157
  store i1 %v2_11160, i1* %cpsr_c.global-to-local, align 1
  %v7_11160 = icmp eq i32 %v1_fe70, 158
  store i1 %v7_11160, i1* %cpsr_z.global-to-local, align 1
  %v2_11164 = xor i1 %v7_11160, true
  %v3_11164 = and i1 %v2_11160, %v2_11164
  br i1 %v3_11164, label %bb1746, label %bb1747

bb1746:                                           ; preds = %dec_label_pc_11160
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1747

bb1747:                                           ; preds = %dec_label_pc_11160, %bb1746
  %v0_1116c941 = phi i32 [ %.1982, %dec_label_pc_11160 ], [ 0, %bb1746 ]
  %v2_11168 = xor i1 %v2_11160, true
  %v3_11168 = or i1 %v7_11160, %v2_11168
  br i1 %v3_11168, label %bb1748, label %bb1749

bb1748:                                           ; preds = %bb1747
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1749

bb1749:                                           ; preds = %bb1747, %bb1748
  %v0_1116c = phi i32 [ %v0_1116c941, %bb1747 ], [ 1, %bb1748 ]
  %v2_1116c = and i32 %v3_fe60, 64
  %v3_1116c = icmp ne i32 %v2_1116c, 0
  store i1 %v3_1116c, i1* %cpsr_c.global-to-local, align 1
  %v4_1116c = udiv i32 %v1_fe70, 128
  %v5_1116c = and i32 %v0_1116c, %v4_1116c
  store i32 %v5_1116c, i32* %r3.global-to-local, align 4
  %v6_1116c = icmp eq i32 %v5_1116c, 0
  store i1 %v6_1116c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_1116c, label %dec_label_pc_11174, label %dec_label_pc_fe54

dec_label_pc_11174:                               ; preds = %.thread477, %bb1749
  store i32 %.1986, i32* %r3.global-to-local, align 4
  %v2_11178 = icmp ugt i32 %v1_fe6c, 151
  store i1 %v2_11178, i1* %cpsr_c.global-to-local, align 1
  %v7_11178 = icmp eq i32 %v1_fe6c, 152
  store i1 %v7_11178, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11178, label %.thread480, label %.thread481

.thread481:                                       ; preds = %dec_label_pc_11174.thread, %dec_label_pc_11174
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_111a8

.thread480:                                       ; preds = %dec_label_pc_11174
  store i32 %.1986, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11184 = icmp eq i1 %v7_109a4, false
  store i1 %v2_11184, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11184, label %dec_label_pc_111a8.thread, label %dec_label_pc_1118c

dec_label_pc_111a8.thread:                        ; preds = %.thread480
  store i32 %.1986, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %.thread489

dec_label_pc_1118c:                               ; preds = %.thread480
  %v2_1118c = icmp ugt i32 %v1_fe70, 94
  store i1 %v2_1118c, i1* %cpsr_c.global-to-local, align 1
  %v7_1118c = icmp eq i32 %v1_fe70, 95
  store i1 %v7_1118c, i1* %cpsr_z.global-to-local, align 1
  %v2_11190 = xor i1 %v2_1118c, true
  %v3_11190 = or i1 %v7_1118c, %v2_11190
  br i1 %v3_11190, label %bb1750, label %bb1751

bb1750:                                           ; preds = %dec_label_pc_1118c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1751

bb1751:                                           ; preds = %dec_label_pc_1118c, %bb1750
  %v0_111a0.pr944 = phi i32 [ %.1986, %dec_label_pc_1118c ], [ 0, %bb1750 ]
  %v2_11194 = xor i1 %v7_1118c, true
  %v3_11194 = and i1 %v2_1118c, %v2_11194
  br i1 %v3_11194, label %bb1752, label %bb1753

bb1752:                                           ; preds = %bb1751
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1753

bb1753:                                           ; preds = %bb1751, %bb1752
  %v0_111a0.pr = phi i32 [ %v0_111a0.pr944, %bb1751 ], [ 1, %bb1752 ]
  %v2_11198 = icmp ugt i32 %v1_fe70, 109
  store i1 %v2_11198, i1* %cpsr_c.global-to-local, align 1
  %v7_11198 = icmp eq i32 %v1_fe70, 110
  store i1 %v7_11198, i1* %cpsr_z.global-to-local, align 1
  %v2_1119c = xor i1 %v7_11198, true
  %v3_1119c = and i1 %v2_11198, %v2_1119c
  br i1 %v3_1119c, label %.thread485, label %bb1754

.thread485:                                       ; preds = %bb1753
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_111a8

bb1754:                                           ; preds = %bb1753
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_111a0 = icmp eq i32 %v0_111a0.pr, 0
  store i1 %v2_111a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_111a0, label %dec_label_pc_111a8, label %dec_label_pc_fe54

dec_label_pc_111a8:                               ; preds = %.thread485, %.thread481, %bb1754
  store i32 %.1986, i32* %r3.global-to-local, align 4
  %v2_111ac = icmp ugt i32 %v1_fe6c, 180
  store i1 %v2_111ac, i1* %cpsr_c.global-to-local, align 1
  %v7_111ac = icmp eq i32 %v1_fe6c, 181
  store i1 %v7_111ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_111ac, label %.thread488, label %.thread489

.thread489:                                       ; preds = %dec_label_pc_111a8.thread, %dec_label_pc_111a8
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_111dc

.thread488:                                       ; preds = %dec_label_pc_111a8
  store i32 %.1986, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_111b8 = icmp eq i1 %v7_109a4, false
  store i1 %v2_111b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_111b8, label %dec_label_pc_111dc, label %dec_label_pc_111c0

dec_label_pc_111c0:                               ; preds = %.thread488
  %v2_111c0 = icmp ugt i32 %v1_fe70, 158
  store i1 %v2_111c0, i1* %cpsr_c.global-to-local, align 1
  %v7_111c0 = icmp eq i32 %v1_fe70, 159
  store i1 %v7_111c0, i1* %cpsr_z.global-to-local, align 1
  %v2_111c4 = xor i1 %v2_111c0, true
  %v3_111c4 = or i1 %v7_111c0, %v2_111c4
  br i1 %v3_111c4, label %bb1755, label %bb1756

bb1755:                                           ; preds = %dec_label_pc_111c0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1756

bb1756:                                           ; preds = %dec_label_pc_111c0, %bb1755
  %v0_111d4.pr947 = phi i32 [ %.1986, %dec_label_pc_111c0 ], [ 0, %bb1755 ]
  %v2_111c8 = xor i1 %v7_111c0, true
  %v3_111c8 = and i1 %v2_111c0, %v2_111c8
  br i1 %v3_111c8, label %bb1757, label %bb1758

bb1757:                                           ; preds = %bb1756
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1758

bb1758:                                           ; preds = %bb1756, %bb1757
  %v0_111d4.pr = phi i32 [ %v0_111d4.pr947, %bb1756 ], [ 1, %bb1757 ]
  %v2_111cc = icmp ugt i32 %v1_fe70, 187
  store i1 %v2_111cc, i1* %cpsr_c.global-to-local, align 1
  %v7_111cc = icmp eq i32 %v1_fe70, 188
  store i1 %v7_111cc, i1* %cpsr_z.global-to-local, align 1
  %v2_111d0 = xor i1 %v7_111cc, true
  %v3_111d0 = and i1 %v2_111cc, %v2_111d0
  br i1 %v3_111d0, label %.thread493, label %bb1759

.thread493:                                       ; preds = %bb1758
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_111dc

bb1759:                                           ; preds = %bb1758
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_111d4 = icmp eq i32 %v0_111d4.pr, 0
  store i1 %v2_111d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_111d4, label %dec_label_pc_111dc, label %dec_label_pc_fe54

dec_label_pc_111dc:                               ; preds = %.thread493, %.thread489, %bb1759, %.thread488
  store i32 %.1967, i32* %r3.global-to-local, align 4
  %v2_111e0 = and i32 %.1943, %.1967
  %v4_111e0 = icmp eq i32 %v2_111e0, 0
  store i1 %v4_111e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_111e0, label %dec_label_pc_11204, label %dec_label_pc_111e8

dec_label_pc_111e8:                               ; preds = %dec_label_pc_111dc
  %v2_111e8 = icmp ugt i32 %v1_fe70, 62
  store i1 %v2_111e8, i1* %cpsr_c.global-to-local, align 1
  %v7_111e8 = icmp eq i32 %v1_fe70, 63
  store i1 %v7_111e8, i1* %cpsr_z.global-to-local, align 1
  %v2_111ec = xor i1 %v2_111e8, true
  %v3_111ec = or i1 %v7_111e8, %v2_111ec
  br i1 %v3_111ec, label %bb1760, label %bb1761

bb1760:                                           ; preds = %dec_label_pc_111e8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1761

bb1761:                                           ; preds = %dec_label_pc_111e8, %bb1760
  %v0_111fc.pr949 = phi i32 [ %.1967, %dec_label_pc_111e8 ], [ 0, %bb1760 ]
  %v2_111f0 = xor i1 %v7_111e8, true
  %v3_111f0 = and i1 %v2_111e8, %v2_111f0
  br i1 %v3_111f0, label %bb1762, label %bb1763

bb1762:                                           ; preds = %bb1761
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1763

bb1763:                                           ; preds = %bb1761, %bb1762
  %v0_111fc.pr = phi i32 [ %v0_111fc.pr949, %bb1761 ], [ 1, %bb1762 ]
  %v2_111f4 = icmp ugt i32 %v1_fe70, 93
  store i1 %v2_111f4, i1* %cpsr_c.global-to-local, align 1
  %v7_111f4 = icmp eq i32 %v1_fe70, 94
  store i1 %v7_111f4, i1* %cpsr_z.global-to-local, align 1
  %v2_111f8 = xor i1 %v7_111f4, true
  %v3_111f8 = and i1 %v2_111f4, %v2_111f8
  br i1 %v3_111f8, label %.thread497, label %bb1764

.thread497:                                       ; preds = %bb1763
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11204

bb1764:                                           ; preds = %bb1763
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_111fc = icmp eq i32 %v0_111fc.pr, 0
  store i1 %v2_111fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_111fc, label %dec_label_pc_11204, label %dec_label_pc_fe54

dec_label_pc_11204:                               ; preds = %.thread497, %bb1764, %dec_label_pc_111dc
  store i32 %storemerge1213, i32* %r3.global-to-local, align 4
  %v2_11208 = icmp ugt i32 %v1_fe58, 183
  store i1 %v2_11208, i1* %cpsr_c.global-to-local, align 1
  %v7_11208 = icmp eq i32 %v1_fe58, 184
  store i1 %v7_11208, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11208, label %.thread500, label %.thread501

.thread501:                                       ; preds = %dec_label_pc_11204
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11228

.thread500:                                       ; preds = %dec_label_pc_11204
  store i32 %storemerge1213, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11214 = icmp eq i1 %v7_109b0, false
  store i1 %v2_11214, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11214, label %dec_label_pc_11228, label %dec_label_pc_1121c

dec_label_pc_1121c:                               ; preds = %.thread500
  %v2_1121c = icmp eq i32 %v1_fe70, 255
  store i1 %v2_1121c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_1121c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1121c, label %dec_label_pc_11228, label %bb1765

bb1765:                                           ; preds = %dec_label_pc_1121c
  %v3_11220 = icmp ugt i32 %v1_fe70, 238
  store i1 %v3_11220, i1* %cpsr_c.global-to-local, align 1
  %v8_11220 = icmp eq i32 %v1_fe70, 239
  store i1 %v8_11220, i1* %cpsr_z.global-to-local, align 1
  %v2_11224 = xor i1 %v8_11220, true
  %v3_11224 = and i1 %v3_11220, %v2_11224
  br i1 %v3_11224, label %dec_label_pc_fe54, label %dec_label_pc_11228

dec_label_pc_11228:                               ; preds = %dec_label_pc_1121c, %.thread501, %bb1765, %.thread500
  %v2_11228 = icmp ugt i32 %v1_fe6c, 110
  store i1 %v2_11228, i1* %cpsr_c.global-to-local, align 1
  %v7_11228 = icmp eq i32 %v1_fe6c, 111
  store i1 %v7_11228, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11228, label %.thread504, label %.thread505

.thread505:                                       ; preds = %dec_label_pc_11228
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11250

.thread504:                                       ; preds = %dec_label_pc_11228
  store i32 %.1940, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11234 = icmp eq i1 %v7_fefc, false
  store i1 %v2_11234, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11234, label %dec_label_pc_11250.thread, label %dec_label_pc_1123c

dec_label_pc_11250.thread:                        ; preds = %.thread504
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %.thread509

dec_label_pc_1123c:                               ; preds = %.thread504
  %v2_1123c = icmp ugt i32 %v1_fe70, 141
  store i1 %v2_1123c, i1* %cpsr_c.global-to-local, align 1
  %v7_1123c = icmp eq i32 %v1_fe70, 142
  store i1 %v7_1123c, i1* %cpsr_z.global-to-local, align 1
  %v2_11240 = xor i1 %v7_1123c, true
  %v3_11240 = and i1 %v2_1123c, %v2_11240
  br i1 %v3_11240, label %bb1766, label %bb1767

bb1766:                                           ; preds = %dec_label_pc_1123c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1767

bb1767:                                           ; preds = %dec_label_pc_1123c, %bb1766
  %v0_11248954 = phi i32 [ %.1940, %dec_label_pc_1123c ], [ 0, %bb1766 ]
  %v2_11244 = xor i1 %v2_1123c, true
  %v3_11244 = or i1 %v7_1123c, %v2_11244
  br i1 %v3_11244, label %bb1768, label %bb1769

bb1768:                                           ; preds = %bb1767
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1769

bb1769:                                           ; preds = %bb1767, %bb1768
  %v0_11248 = phi i32 [ %v0_11248954, %bb1767 ], [ 1, %bb1768 ]
  %v2_11248 = and i32 %v3_fe60, 64
  %v3_11248 = icmp ne i32 %v2_11248, 0
  store i1 %v3_11248, i1* %cpsr_c.global-to-local, align 1
  %v4_11248 = udiv i32 %v1_fe70, 128
  %v5_11248 = and i32 %v0_11248, %v4_11248
  store i32 %v5_11248, i32* %r3.global-to-local, align 4
  %v6_11248 = icmp eq i32 %v5_11248, 0
  store i1 %v6_11248, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_11248, label %dec_label_pc_11250, label %dec_label_pc_fe54

dec_label_pc_11250:                               ; preds = %.thread505, %bb1769
  %v2_11250 = icmp ugt i32 %v1_fe6c, 251
  store i1 %v2_11250, i1* %cpsr_c.global-to-local, align 1
  %v7_11250 = icmp eq i32 %v1_fe6c, 252
  store i1 %v7_11250, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11250, label %.thread508, label %.thread509

.thread509:                                       ; preds = %dec_label_pc_11250.thread, %dec_label_pc_11250
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11280

.thread508:                                       ; preds = %dec_label_pc_11250
  store i32 %.1940, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1125c = icmp eq i1 %v7_fefc, false
  store i1 %v2_1125c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1125c, label %dec_label_pc_11280.thread, label %dec_label_pc_11264

dec_label_pc_11280.thread:                        ; preds = %.thread508
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %.thread517

dec_label_pc_11264:                               ; preds = %.thread508
  %v2_11264 = icmp ugt i32 %v1_fe70, 206
  store i1 %v2_11264, i1* %cpsr_c.global-to-local, align 1
  %v7_11264 = icmp eq i32 %v1_fe70, 207
  store i1 %v7_11264, i1* %cpsr_z.global-to-local, align 1
  %v2_11268 = xor i1 %v2_11264, true
  %v3_11268 = or i1 %v7_11264, %v2_11268
  br i1 %v3_11268, label %bb1770, label %bb1771

bb1770:                                           ; preds = %dec_label_pc_11264
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1771

bb1771:                                           ; preds = %dec_label_pc_11264, %bb1770
  %v0_11278.pr956 = phi i32 [ %.1940, %dec_label_pc_11264 ], [ 0, %bb1770 ]
  %v2_1126c = xor i1 %v7_11264, true
  %v3_1126c = and i1 %v2_11264, %v2_1126c
  br i1 %v3_1126c, label %bb1772, label %bb1773

bb1772:                                           ; preds = %bb1771
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1773

bb1773:                                           ; preds = %bb1771, %bb1772
  %v0_11278.pr = phi i32 [ %v0_11278.pr956, %bb1771 ], [ 1, %bb1772 ]
  %v2_11270 = icmp ugt i32 %v1_fe70, 221
  store i1 %v2_11270, i1* %cpsr_c.global-to-local, align 1
  %v7_11270 = icmp eq i32 %v1_fe70, 222
  store i1 %v7_11270, i1* %cpsr_z.global-to-local, align 1
  %v2_11274 = xor i1 %v7_11270, true
  %v3_11274 = and i1 %v2_11270, %v2_11274
  br i1 %v3_11274, label %.thread513, label %bb1774

.thread513:                                       ; preds = %bb1773
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11280

bb1774:                                           ; preds = %bb1773
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11278 = icmp eq i32 %v0_11278.pr, 0
  store i1 %v2_11278, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11278, label %dec_label_pc_11280, label %dec_label_pc_fe54

dec_label_pc_11280:                               ; preds = %.thread513, %.thread509, %bb1774
  %v2_11280 = icmp ugt i32 %v1_fe6c, 39
  store i1 %v2_11280, i1* %cpsr_c.global-to-local, align 1
  %v7_11280 = icmp eq i32 %v1_fe6c, 40
  store i1 %v7_11280, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11280, label %.thread516, label %.thread517

.thread517:                                       ; preds = %dec_label_pc_11280.thread, %dec_label_pc_11280
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_112b0

.thread516:                                       ; preds = %dec_label_pc_11280
  store i32 %.1940, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1128c = icmp eq i1 %v7_fefc, false
  store i1 %v2_1128c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1128c, label %dec_label_pc_112b0.thread, label %dec_label_pc_11294

dec_label_pc_112b0.thread:                        ; preds = %.thread516
  store i32 %.1969, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %.thread525

dec_label_pc_11294:                               ; preds = %.thread516
  %v2_11294 = icmp ugt i32 %v1_fe70, 54
  store i1 %v2_11294, i1* %cpsr_c.global-to-local, align 1
  %v7_11294 = icmp eq i32 %v1_fe70, 55
  store i1 %v7_11294, i1* %cpsr_z.global-to-local, align 1
  %v2_11298 = xor i1 %v2_11294, true
  %v3_11298 = or i1 %v7_11294, %v2_11298
  br i1 %v3_11298, label %bb1775, label %bb1776

bb1775:                                           ; preds = %dec_label_pc_11294
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1776

bb1776:                                           ; preds = %dec_label_pc_11294, %bb1775
  %v0_112a8.pr958 = phi i32 [ %.1940, %dec_label_pc_11294 ], [ 0, %bb1775 ]
  %v2_1129c = xor i1 %v7_11294, true
  %v3_1129c = and i1 %v2_11294, %v2_1129c
  br i1 %v3_1129c, label %bb1777, label %bb1778

bb1777:                                           ; preds = %bb1776
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1778

bb1778:                                           ; preds = %bb1776, %bb1777
  %v0_112a8.pr = phi i32 [ %v0_112a8.pr958, %bb1776 ], [ 1, %bb1777 ]
  %v2_112a0 = icmp ugt i32 %v1_fe70, 57
  store i1 %v2_112a0, i1* %cpsr_c.global-to-local, align 1
  %v7_112a0 = icmp eq i32 %v1_fe70, 58
  store i1 %v7_112a0, i1* %cpsr_z.global-to-local, align 1
  %v2_112a4 = xor i1 %v7_112a0, true
  %v3_112a4 = and i1 %v2_112a0, %v2_112a4
  br i1 %v3_112a4, label %.thread521, label %bb1779

.thread521:                                       ; preds = %bb1778
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_112b0

bb1779:                                           ; preds = %bb1778
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_112a8 = icmp eq i32 %v0_112a8.pr, 0
  store i1 %v2_112a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_112a8, label %dec_label_pc_112b0, label %dec_label_pc_fe54

dec_label_pc_112b0:                               ; preds = %.thread521, %.thread517, %bb1779
  store i32 %.1969, i32* %r3.global-to-local, align 4
  %v2_112b4 = icmp ugt i32 %v1_fe6c, 7
  store i1 %v2_112b4, i1* %cpsr_c.global-to-local, align 1
  %v7_112b4 = icmp eq i32 %v1_fe6c, 8
  store i1 %v7_112b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_112b4, label %.thread524, label %.thread525

.thread525:                                       ; preds = %dec_label_pc_112b0.thread, %dec_label_pc_112b0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_112e4

.thread524:                                       ; preds = %dec_label_pc_112b0
  store i32 %.1969, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_112c0 = icmp eq i1 %v7_10358, false
  store i1 %v2_112c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_112c0, label %dec_label_pc_112e4.thread, label %dec_label_pc_112c8

dec_label_pc_112e4.thread:                        ; preds = %.thread524
  store i32 %.1981, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %.thread533

dec_label_pc_112c8:                               ; preds = %.thread524
  %v2_112c8 = icmp ugt i32 %v1_fe70, 79
  store i1 %v2_112c8, i1* %cpsr_c.global-to-local, align 1
  %v7_112c8 = icmp eq i32 %v1_fe70, 80
  store i1 %v7_112c8, i1* %cpsr_z.global-to-local, align 1
  %v2_112cc = xor i1 %v2_112c8, true
  %v3_112cc = or i1 %v7_112c8, %v2_112cc
  br i1 %v3_112cc, label %bb1780, label %bb1781

bb1780:                                           ; preds = %dec_label_pc_112c8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1781

bb1781:                                           ; preds = %dec_label_pc_112c8, %bb1780
  %v0_112dc.pr961 = phi i32 [ %.1969, %dec_label_pc_112c8 ], [ 0, %bb1780 ]
  %v2_112d0 = xor i1 %v7_112c8, true
  %v3_112d0 = and i1 %v2_112c8, %v2_112d0
  br i1 %v3_112d0, label %bb1782, label %bb1783

bb1782:                                           ; preds = %bb1781
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1783

bb1783:                                           ; preds = %bb1781, %bb1782
  %v0_112dc.pr = phi i32 [ %v0_112dc.pr961, %bb1781 ], [ 1, %bb1782 ]
  %v2_112d4 = icmp ugt i32 %v1_fe70, 93
  store i1 %v2_112d4, i1* %cpsr_c.global-to-local, align 1
  %v7_112d4 = icmp eq i32 %v1_fe70, 94
  store i1 %v7_112d4, i1* %cpsr_z.global-to-local, align 1
  %v2_112d8 = xor i1 %v7_112d4, true
  %v3_112d8 = and i1 %v2_112d4, %v2_112d8
  br i1 %v3_112d8, label %.thread529, label %bb1784

.thread529:                                       ; preds = %bb1783
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_112e4

bb1784:                                           ; preds = %bb1783
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_112dc = icmp eq i32 %v0_112dc.pr, 0
  store i1 %v2_112dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_112dc, label %dec_label_pc_112e4, label %dec_label_pc_fe54

dec_label_pc_112e4:                               ; preds = %.thread529, %.thread525, %bb1784
  store i32 %.1981, i32* %r3.global-to-local, align 4
  %v2_112e8 = icmp ugt i32 %v1_fe6c, 115
  store i1 %v2_112e8, i1* %cpsr_c.global-to-local, align 1
  %v7_112e8 = icmp eq i32 %v1_fe6c, 116
  store i1 %v7_112e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_112e8, label %.thread532, label %.thread533

.thread533:                                       ; preds = %dec_label_pc_112e4.thread, %dec_label_pc_112e4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11318

.thread532:                                       ; preds = %dec_label_pc_112e4
  store i32 %.1981, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_112f4 = icmp eq i1 %v7_1083c, false
  store i1 %v2_112f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_112f4, label %dec_label_pc_11318, label %dec_label_pc_112fc

dec_label_pc_112fc:                               ; preds = %.thread532
  %v2_112fc = icmp ugt i32 %v1_fe70, 110
  store i1 %v2_112fc, i1* %cpsr_c.global-to-local, align 1
  %v7_112fc = icmp eq i32 %v1_fe70, 111
  store i1 %v7_112fc, i1* %cpsr_z.global-to-local, align 1
  %v2_11300 = xor i1 %v2_112fc, true
  %v3_11300 = or i1 %v7_112fc, %v2_11300
  br i1 %v3_11300, label %bb1785, label %bb1786

bb1785:                                           ; preds = %dec_label_pc_112fc
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1786

bb1786:                                           ; preds = %dec_label_pc_112fc, %bb1785
  %v0_11310.pr964 = phi i32 [ %.1981, %dec_label_pc_112fc ], [ 0, %bb1785 ]
  %v2_11304 = xor i1 %v7_112fc, true
  %v3_11304 = and i1 %v2_112fc, %v2_11304
  br i1 %v3_11304, label %bb1787, label %bb1788

bb1787:                                           ; preds = %bb1786
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1788

bb1788:                                           ; preds = %bb1786, %bb1787
  %v0_11310.pr = phi i32 [ %v0_11310.pr964, %bb1786 ], [ 1, %bb1787 ]
  %v2_11308 = icmp ugt i32 %v1_fe70, 117
  store i1 %v2_11308, i1* %cpsr_c.global-to-local, align 1
  %v7_11308 = icmp eq i32 %v1_fe70, 118
  store i1 %v7_11308, i1* %cpsr_z.global-to-local, align 1
  %v2_1130c = xor i1 %v7_11308, true
  %v3_1130c = and i1 %v2_11308, %v2_1130c
  br i1 %v3_1130c, label %.thread537, label %bb1789

.thread537:                                       ; preds = %bb1788
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11318

bb1789:                                           ; preds = %bb1788
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11310 = icmp eq i32 %v0_11310.pr, 0
  store i1 %v2_11310, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11310, label %dec_label_pc_11318, label %dec_label_pc_fe54

dec_label_pc_11318:                               ; preds = %.thread537, %.thread533, %bb1789, %.thread532
  store i32 %.1951, i32* %fp.global-to-local, align 4
  store i32 %.1981, i32* %lr.global-to-local, align 4
  %v2_11320 = and i32 %.1951, %.1981
  %v4_11320 = icmp eq i32 %v2_11320, 0
  store i1 %v4_11320, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_11320, label %dec_label_pc_11334, label %dec_label_pc_11328

dec_label_pc_11328:                               ; preds = %dec_label_pc_11318
  %v2_11328 = icmp eq i32 %v1_fe70, 255
  store i1 %v2_11328, i1* %cpsr_c.global-to-local, align 1
  %v7_11328 = icmp eq i32 %v1_fe70, 255
  store i1 %v7_11328, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11328, label %dec_label_pc_11334, label %bb1790

bb1790:                                           ; preds = %dec_label_pc_11328
  %v3_1132c = icmp ugt i32 %v1_fe70, 246
  store i1 %v3_1132c, i1* %cpsr_c.global-to-local, align 1
  %v8_1132c = icmp eq i32 %v1_fe70, 247
  store i1 %v8_1132c, i1* %cpsr_z.global-to-local, align 1
  %v2_11330 = xor i1 %v8_1132c, true
  %v3_11330 = and i1 %v3_1132c, %v2_11330
  br i1 %v3_11330, label %dec_label_pc_fe54, label %dec_label_pc_11334

dec_label_pc_11334:                               ; preds = %dec_label_pc_11328, %bb1790, %dec_label_pc_11318
  store i32 %.1981, i32* %r3.global-to-local, align 4
  %v2_11338 = icmp ugt i32 %v1_fe6c, 35
  store i1 %v2_11338, i1* %cpsr_c.global-to-local, align 1
  %v7_11338 = icmp eq i32 %v1_fe6c, 36
  store i1 %v7_11338, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11338, label %.thread540, label %.thread541

.thread541:                                       ; preds = %dec_label_pc_11334
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11368

.thread540:                                       ; preds = %dec_label_pc_11334
  store i32 %.1981, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11344 = icmp eq i1 %v7_1083c, false
  store i1 %v2_11344, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11344, label %dec_label_pc_11368.thread, label %dec_label_pc_1134c

dec_label_pc_11368.thread:                        ; preds = %.thread540
  store i32 %.1981, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %.thread549

dec_label_pc_1134c:                               ; preds = %.thread540
  %v2_1134c = icmp ugt i32 %v1_fe70, 218
  store i1 %v2_1134c, i1* %cpsr_c.global-to-local, align 1
  %v7_1134c = icmp eq i32 %v1_fe70, 219
  store i1 %v7_1134c, i1* %cpsr_z.global-to-local, align 1
  %v2_11350 = xor i1 %v2_1134c, true
  %v3_11350 = or i1 %v7_1134c, %v2_11350
  br i1 %v3_11350, label %bb1791, label %bb1792

bb1791:                                           ; preds = %dec_label_pc_1134c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1792

bb1792:                                           ; preds = %dec_label_pc_1134c, %bb1791
  %v0_11360.pr969 = phi i32 [ %.1981, %dec_label_pc_1134c ], [ 0, %bb1791 ]
  %v2_11354 = xor i1 %v7_1134c, true
  %v3_11354 = and i1 %v2_1134c, %v2_11354
  br i1 %v3_11354, label %bb1793, label %bb1794

bb1793:                                           ; preds = %bb1792
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1794

bb1794:                                           ; preds = %bb1792, %bb1793
  %v0_11360.pr = phi i32 [ %v0_11360.pr969, %bb1792 ], [ 1, %bb1793 ]
  %v2_11358 = icmp ugt i32 %v1_fe70, 221
  store i1 %v2_11358, i1* %cpsr_c.global-to-local, align 1
  %v7_11358 = icmp eq i32 %v1_fe70, 222
  store i1 %v7_11358, i1* %cpsr_z.global-to-local, align 1
  %v2_1135c = xor i1 %v7_11358, true
  %v3_1135c = and i1 %v2_11358, %v2_1135c
  br i1 %v3_1135c, label %.thread545, label %bb1795

.thread545:                                       ; preds = %bb1794
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11368

bb1795:                                           ; preds = %bb1794
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11360 = icmp eq i32 %v0_11360.pr, 0
  store i1 %v2_11360, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11360, label %dec_label_pc_11368, label %dec_label_pc_fe54

dec_label_pc_11368:                               ; preds = %.thread545, %.thread541, %bb1795
  store i32 %.1981, i32* %r3.global-to-local, align 4
  %v2_1136c = icmp ugt i32 %v1_fe6c, 57
  store i1 %v2_1136c, i1* %cpsr_c.global-to-local, align 1
  %v7_1136c = icmp eq i32 %v1_fe6c, 58
  store i1 %v7_1136c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1136c, label %.thread548, label %.thread549

.thread549:                                       ; preds = %dec_label_pc_11368.thread, %dec_label_pc_11368
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1139c

.thread548:                                       ; preds = %dec_label_pc_11368
  store i32 %.1981, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11378 = icmp eq i1 %v7_1083c, false
  store i1 %v2_11378, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11378, label %dec_label_pc_1139c, label %dec_label_pc_11380

dec_label_pc_11380:                               ; preds = %.thread548
  %v2_11380 = icmp ugt i32 %v1_fe70, 182
  store i1 %v2_11380, i1* %cpsr_c.global-to-local, align 1
  %v7_11380 = icmp eq i32 %v1_fe70, 183
  store i1 %v7_11380, i1* %cpsr_z.global-to-local, align 1
  %v2_11384 = xor i1 %v2_11380, true
  %v3_11384 = or i1 %v7_11380, %v2_11384
  br i1 %v3_11384, label %bb1796, label %bb1797

bb1796:                                           ; preds = %dec_label_pc_11380
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1797

bb1797:                                           ; preds = %dec_label_pc_11380, %bb1796
  %v0_11394.pr972 = phi i32 [ %.1981, %dec_label_pc_11380 ], [ 0, %bb1796 ]
  %v2_11388 = xor i1 %v7_11380, true
  %v3_11388 = and i1 %v2_11380, %v2_11388
  br i1 %v3_11388, label %bb1798, label %bb1799

bb1798:                                           ; preds = %bb1797
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1799

bb1799:                                           ; preds = %bb1797, %bb1798
  %v0_11394.pr = phi i32 [ %v0_11394.pr972, %bb1797 ], [ 1, %bb1798 ]
  %v2_1138c = icmp ugt i32 %v1_fe70, 185
  store i1 %v2_1138c, i1* %cpsr_c.global-to-local, align 1
  %v7_1138c = icmp eq i32 %v1_fe70, 186
  store i1 %v7_1138c, i1* %cpsr_z.global-to-local, align 1
  %v2_11390 = xor i1 %v7_1138c, true
  %v3_11390 = and i1 %v2_1138c, %v2_11390
  br i1 %v3_11390, label %.thread553, label %bb1800

.thread553:                                       ; preds = %bb1799
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1139c

bb1800:                                           ; preds = %bb1799
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11394 = icmp eq i32 %v0_11394.pr, 0
  store i1 %v2_11394, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11394, label %dec_label_pc_1139c, label %dec_label_pc_fe54

dec_label_pc_1139c:                               ; preds = %.thread553, %.thread549, %bb1800, %.thread548
  %v2_1139c = icmp ugt i32 %v1_fe58, 205
  store i1 %v2_1139c, i1* %cpsr_c.global-to-local, align 1
  %v7_1139c = icmp eq i32 %v1_fe58, 206
  store i1 %v7_1139c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1139c, label %bb1801, label %dec_label_pc_113c4

bb1801:                                           ; preds = %dec_label_pc_1139c
  %v3_113a0 = icmp ugt i32 %v1_fe6c, 219
  store i1 %v3_113a0, i1* %cpsr_c.global-to-local, align 1
  %v8_113a0 = icmp eq i32 %v1_fe6c, 220
  store i1 %v8_113a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_113a0, label %dec_label_pc_113a8, label %dec_label_pc_113c4

dec_label_pc_113a8:                               ; preds = %bb1801
  %v2_113a8 = icmp ugt i32 %v1_fe70, 170
  store i1 %v2_113a8, i1* %cpsr_c.global-to-local, align 1
  %v7_113a8 = icmp eq i32 %v1_fe70, 171
  store i1 %v7_113a8, i1* %cpsr_z.global-to-local, align 1
  %v2_113ac = xor i1 %v2_113a8, true
  %v3_113ac = or i1 %v7_113a8, %v2_113ac
  br i1 %v3_113ac, label %bb1802, label %bb1803

bb1802:                                           ; preds = %dec_label_pc_113a8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1803

bb1803:                                           ; preds = %dec_label_pc_113a8, %bb1802
  %v2_113b0 = xor i1 %v7_113a8, true
  %v3_113b0 = and i1 %v2_113a8, %v2_113b0
  br i1 %v3_113b0, label %bb1804, label %bb1805

bb1804:                                           ; preds = %bb1803
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1805

bb1805:                                           ; preds = %bb1803, %bb1804
  %v0_113bc.pr = phi i32 [ 0, %bb1803 ], [ 1, %bb1804 ]
  %v2_113b4 = icmp ugt i32 %v1_fe70, 173
  store i1 %v2_113b4, i1* %cpsr_c.global-to-local, align 1
  %v7_113b4 = icmp eq i32 %v1_fe70, 174
  store i1 %v7_113b4, i1* %cpsr_z.global-to-local, align 1
  %v2_113b8 = xor i1 %v7_113b4, true
  %v3_113b8 = and i1 %v2_113b4, %v2_113b8
  br i1 %v3_113b8, label %.thread558, label %bb1806

.thread558:                                       ; preds = %bb1805
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_113c4

bb1806:                                           ; preds = %bb1805
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_113bc = icmp eq i32 %v0_113bc.pr, 0
  store i1 %v2_113bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_113bc, label %dec_label_pc_113c4, label %dec_label_pc_fe54

dec_label_pc_113c4:                               ; preds = %dec_label_pc_1139c, %.thread558, %bb1806, %bb1801
  store i32 %.1992, i32* %r3.global-to-local, align 4
  %v2_113c8 = icmp ugt i32 %v1_fe6c, 77
  store i1 %v2_113c8, i1* %cpsr_c.global-to-local, align 1
  %v7_113c8 = icmp eq i32 %v1_fe6c, 78
  store i1 %v7_113c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_113c8, label %.thread561, label %.thread562

.thread562:                                       ; preds = %dec_label_pc_113c4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_113f8

.thread561:                                       ; preds = %dec_label_pc_113c4
  store i32 %.1992, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_113d4 = icmp eq i1 %v7_10d04, false
  store i1 %v2_113d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_113d4, label %dec_label_pc_113f8.thread, label %dec_label_pc_113dc

dec_label_pc_113f8.thread:                        ; preds = %.thread561
  store i32 %.1992, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %.thread570

dec_label_pc_113dc:                               ; preds = %.thread561
  %v2_113dc = icmp ugt i32 %v1_fe70, 38
  store i1 %v2_113dc, i1* %cpsr_c.global-to-local, align 1
  %v7_113dc = icmp eq i32 %v1_fe70, 39
  store i1 %v7_113dc, i1* %cpsr_z.global-to-local, align 1
  %v2_113e0 = xor i1 %v2_113dc, true
  %v3_113e0 = or i1 %v7_113dc, %v2_113e0
  br i1 %v3_113e0, label %bb1807, label %bb1808

bb1807:                                           ; preds = %dec_label_pc_113dc
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1808

bb1808:                                           ; preds = %dec_label_pc_113dc, %bb1807
  %v0_113f0.pr978 = phi i32 [ %.1992, %dec_label_pc_113dc ], [ 0, %bb1807 ]
  %v2_113e4 = xor i1 %v7_113dc, true
  %v3_113e4 = and i1 %v2_113dc, %v2_113e4
  br i1 %v3_113e4, label %bb1809, label %bb1810

bb1809:                                           ; preds = %bb1808
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1810

bb1810:                                           ; preds = %bb1808, %bb1809
  %v0_113f0.pr = phi i32 [ %v0_113f0.pr978, %bb1808 ], [ 1, %bb1809 ]
  %v2_113e8 = icmp ugt i32 %v1_fe70, 41
  store i1 %v2_113e8, i1* %cpsr_c.global-to-local, align 1
  %v7_113e8 = icmp eq i32 %v1_fe70, 42
  store i1 %v7_113e8, i1* %cpsr_z.global-to-local, align 1
  %v2_113ec = xor i1 %v7_113e8, true
  %v3_113ec = and i1 %v2_113e8, %v2_113ec
  br i1 %v3_113ec, label %.thread566, label %bb1811

.thread566:                                       ; preds = %bb1810
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_113f8

bb1811:                                           ; preds = %bb1810
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_113f0 = icmp eq i32 %v0_113f0.pr, 0
  store i1 %v2_113f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_113f0, label %dec_label_pc_113f8, label %dec_label_pc_fe54

dec_label_pc_113f8:                               ; preds = %.thread566, %.thread562, %bb1811
  store i32 %.1992, i32* %r3.global-to-local, align 4
  %v2_113fc = icmp ugt i32 %v1_fe6c, 92
  store i1 %v2_113fc, i1* %cpsr_c.global-to-local, align 1
  %v7_113fc = icmp eq i32 %v1_fe6c, 93
  store i1 %v7_113fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_113fc, label %.thread569, label %.thread570

.thread570:                                       ; preds = %dec_label_pc_113f8.thread, %dec_label_pc_113f8
  %v2_113fc2109 = phi i1 [ false, %dec_label_pc_113f8.thread ], [ %v2_113fc, %dec_label_pc_113f8 ]
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1142c

.thread569:                                       ; preds = %dec_label_pc_113f8
  store i32 %.1992, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11408 = icmp eq i1 %v7_10d04, false
  store i1 %v2_11408, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11408, label %dec_label_pc_1142c.thread, label %dec_label_pc_11410

dec_label_pc_1142c.thread:                        ; preds = %.thread569
  store i32 %.1993, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %.thread578

dec_label_pc_11410:                               ; preds = %.thread569
  %v2_11410 = icmp ugt i32 %v1_fe70, 190
  store i1 %v2_11410, i1* %cpsr_c.global-to-local, align 1
  %v7_11410 = icmp eq i32 %v1_fe70, 191
  store i1 %v7_11410, i1* %cpsr_z.global-to-local, align 1
  %v2_11414 = xor i1 %v2_11410, true
  %v3_11414 = or i1 %v7_11410, %v2_11414
  br i1 %v3_11414, label %bb1812, label %bb1813

bb1812:                                           ; preds = %dec_label_pc_11410
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1813

bb1813:                                           ; preds = %dec_label_pc_11410, %bb1812
  %v0_11424.pr981 = phi i32 [ %.1992, %dec_label_pc_11410 ], [ 0, %bb1812 ]
  %v2_11418 = xor i1 %v7_11410, true
  %v3_11418 = and i1 %v2_11410, %v2_11418
  br i1 %v3_11418, label %bb1814, label %bb1815

bb1814:                                           ; preds = %bb1813
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1815

bb1815:                                           ; preds = %bb1813, %bb1814
  %v0_11424.pr = phi i32 [ %v0_11424.pr981, %bb1813 ], [ 1, %bb1814 ]
  %v2_1141c = icmp ugt i32 %v1_fe70, 191
  store i1 %v2_1141c, i1* %cpsr_c.global-to-local, align 1
  %v7_1141c = icmp eq i32 %v1_fe70, 192
  store i1 %v7_1141c, i1* %cpsr_z.global-to-local, align 1
  %v2_11420 = xor i1 %v7_1141c, true
  %v3_11420 = and i1 %v2_1141c, %v2_11420
  br i1 %v3_11420, label %.thread574, label %bb1816

.thread574:                                       ; preds = %bb1815
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1142c

bb1816:                                           ; preds = %bb1815
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11424 = icmp eq i32 %v0_11424.pr, 0
  store i1 %v2_11424, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11424, label %dec_label_pc_1142c, label %dec_label_pc_fe54

dec_label_pc_1142c:                               ; preds = %.thread574, %.thread570, %bb1816
  %v2_113fc2108 = phi i1 [ %v2_113fc, %.thread574 ], [ %v2_113fc2109, %.thread570 ], [ %v2_113fc, %bb1816 ]
  %v7_113fc2110 = phi i1 [ true, %.thread574 ], [ false, %.thread570 ], [ true, %bb1816 ]
  store i32 %.1993, i32* %r3.global-to-local, align 4
  %v2_11430 = icmp ugt i32 %v1_fe6c, 70
  store i1 %v2_11430, i1* %cpsr_c.global-to-local, align 1
  %v7_11430 = icmp eq i32 %v1_fe6c, 71
  store i1 %v7_11430, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11430, label %.thread577, label %.thread578

.thread578:                                       ; preds = %dec_label_pc_1142c.thread, %dec_label_pc_1142c
  %v2_113fc21082117 = phi i1 [ %v2_113fc, %dec_label_pc_1142c.thread ], [ %v2_113fc2108, %dec_label_pc_1142c ]
  %v7_113fc21102115 = phi i1 [ true, %dec_label_pc_1142c.thread ], [ %v7_113fc2110, %dec_label_pc_1142c ]
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11450

.thread577:                                       ; preds = %dec_label_pc_1142c
  store i32 %.1993, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1143c = icmp eq i1 %v7_10d40, false
  store i1 %v2_1143c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1143c, label %dec_label_pc_11450, label %dec_label_pc_11444

dec_label_pc_11444:                               ; preds = %.thread577
  %v2_11444 = icmp eq i32 %v1_fe70, 255
  store i1 %v2_11444, i1* %cpsr_c.global-to-local, align 1
  %v7_11444 = icmp eq i32 %v1_fe70, 255
  store i1 %v7_11444, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11444, label %dec_label_pc_11450, label %bb1817

bb1817:                                           ; preds = %dec_label_pc_11444
  %v3_11448 = icmp ugt i32 %v1_fe70, 238
  store i1 %v3_11448, i1* %cpsr_c.global-to-local, align 1
  %v8_11448 = icmp eq i32 %v1_fe70, 239
  store i1 %v8_11448, i1* %cpsr_z.global-to-local, align 1
  %v2_1144c = xor i1 %v8_11448, true
  %v3_1144c = and i1 %v3_11448, %v2_1144c
  br i1 %v3_1144c, label %dec_label_pc_fe54, label %dec_label_pc_11450

dec_label_pc_11450:                               ; preds = %dec_label_pc_11444, %.thread578, %bb1817, %.thread577
  %v2_113fc21082116 = phi i1 [ %v2_113fc21082117, %.thread578 ], [ %v2_113fc2108, %bb1817 ], [ %v2_113fc2108, %.thread577 ], [ %v2_113fc2108, %dec_label_pc_11444 ]
  %v7_113fc21102114 = phi i1 [ %v7_113fc21102115, %.thread578 ], [ %v7_113fc2110, %bb1817 ], [ %v7_113fc2110, %.thread577 ], [ %v7_113fc2110, %dec_label_pc_11444 ]
  %v0_11470.pr987 = phi i32 [ 0, %.thread578 ], [ %.1993, %bb1817 ], [ 0, %.thread577 ], [ %.1993, %dec_label_pc_11444 ]
  %v2_11450 = icmp ugt i32 %v1_fe58, 97
  store i1 %v2_11450, i1* %cpsr_c.global-to-local, align 1
  %v7_11450 = icmp eq i32 %v1_fe58, 98
  store i1 %v7_11450, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11450, label %bb1818, label %dec_label_pc_11478

bb1818:                                           ; preds = %dec_label_pc_11450
  %v3_11454 = icmp ugt i32 %v1_fe6c, 141
  store i1 %v3_11454, i1* %cpsr_c.global-to-local, align 1
  %v8_11454 = icmp eq i32 %v1_fe6c, 142
  store i1 %v8_11454, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11454, label %dec_label_pc_1145c, label %dec_label_pc_11478

dec_label_pc_1145c:                               ; preds = %bb1818
  %v2_1145c = icmp ugt i32 %v1_fe70, 206
  store i1 %v2_1145c, i1* %cpsr_c.global-to-local, align 1
  %v7_1145c = icmp eq i32 %v1_fe70, 207
  store i1 %v7_1145c, i1* %cpsr_z.global-to-local, align 1
  %v2_11460 = xor i1 %v2_1145c, true
  %v3_11460 = or i1 %v7_1145c, %v2_11460
  br i1 %v3_11460, label %bb1819, label %bb1820

bb1819:                                           ; preds = %dec_label_pc_1145c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1820

bb1820:                                           ; preds = %dec_label_pc_1145c, %bb1819
  %v0_11470.pr986 = phi i32 [ %v0_11470.pr987, %dec_label_pc_1145c ], [ 0, %bb1819 ]
  %v2_11464 = xor i1 %v7_1145c, true
  %v3_11464 = and i1 %v2_1145c, %v2_11464
  br i1 %v3_11464, label %bb1821, label %bb1822

bb1821:                                           ; preds = %bb1820
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1822

bb1822:                                           ; preds = %bb1820, %bb1821
  %v0_11470.pr = phi i32 [ %v0_11470.pr986, %bb1820 ], [ 1, %bb1821 ]
  %v2_11468 = icmp ugt i32 %v1_fe70, 221
  store i1 %v2_11468, i1* %cpsr_c.global-to-local, align 1
  %v7_11468 = icmp eq i32 %v1_fe70, 222
  store i1 %v7_11468, i1* %cpsr_z.global-to-local, align 1
  %v2_1146c = xor i1 %v7_11468, true
  %v3_1146c = and i1 %v2_11468, %v2_1146c
  br i1 %v3_1146c, label %.thread583, label %bb1823

.thread583:                                       ; preds = %bb1822
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11478

bb1823:                                           ; preds = %bb1822
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11470 = icmp eq i32 %v0_11470.pr, 0
  store i1 %v2_11470, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11470, label %dec_label_pc_11478, label %dec_label_pc_fe54

dec_label_pc_11478:                               ; preds = %dec_label_pc_11450, %.thread583, %bb1823, %bb1818
  store i32 %.1986, i32* %r3.global-to-local, align 4
  %v2_1147c = icmp ugt i32 %v1_fe6c, 18
  store i1 %v2_1147c, i1* %cpsr_c.global-to-local, align 1
  %v7_1147c = icmp eq i32 %v1_fe6c, 19
  store i1 %v7_1147c, i1* %cpsr_z.global-to-local, align 1
  %v2_11480 = xor i1 %v2_1147c, true
  %v3_11480 = or i1 %v7_1147c, %v2_11480
  br i1 %v3_11480, label %bb1824, label %bb1825

bb1824:                                           ; preds = %dec_label_pc_11478
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1825

bb1825:                                           ; preds = %dec_label_pc_11478, %bb1824
  %v4_11484 = phi i32 [ %.1986, %dec_label_pc_11478 ], [ 0, %bb1824 ]
  %v2_11484 = xor i1 %v7_1147c, true
  %v3_11484 = and i1 %v2_1147c, %v2_11484
  br i1 %v3_11484, label %bb1826, label %thread-pre-split586

bb1826:                                           ; preds = %bb1825
  store i32 %v4_11484, i32* %r3.global-to-local, align 4
  br label %thread-pre-split586

thread-pre-split586:                              ; preds = %bb1825, %bb1826
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11488 = icmp eq i32 %v4_11484, 0
  store i1 %v2_11488, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11488, label %dec_label_pc_11498, label %dec_label_pc_11490

dec_label_pc_11490:                               ; preds = %thread-pre-split586
  %v2_11490 = icmp ugt i32 %v1_fe6c, 22
  store i1 %v2_11490, i1* %cpsr_c.global-to-local, align 1
  %v7_11490 = icmp eq i32 %v1_fe6c, 23
  store i1 %v7_11490, i1* %cpsr_z.global-to-local, align 1
  %v2_11494 = xor i1 %v2_11490, true
  %v3_11494 = or i1 %v7_11490, %v2_11494
  br i1 %v3_11494, label %dec_label_pc_fe54, label %dec_label_pc_11498

dec_label_pc_11498:                               ; preds = %dec_label_pc_11490, %thread-pre-split586
  %v7_11498 = icmp eq i32 %v1_fe58, 35
  %.1999 = zext i1 %v7_11498 to i32
  store i32 %.1999, i32* %r3.global-to-local, align 4
  store i1 %v2_1014c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_1014c, i1* %cpsr_z.global-to-local, align 1
  %v2_114a8 = xor i1 %v2_1014c, true
  %v3_114a8 = or i1 %v7_1014c, %v2_114a8
  br i1 %v3_114a8, label %.thread589, label %bb1829

.thread589:                                       ; preds = %dec_label_pc_11498
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_114bc

bb1829:                                           ; preds = %dec_label_pc_11498
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_114ac = icmp eq i1 %v7_11498, false
  store i1 %v2_114ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_114ac, label %dec_label_pc_114bc, label %dec_label_pc_114b4

dec_label_pc_114b4:                               ; preds = %bb1829
  %v2_114b4 = icmp ugt i32 %v1_fe6c, 181
  store i1 %v2_114b4, i1* %cpsr_c.global-to-local, align 1
  %v7_114b4 = icmp eq i32 %v1_fe6c, 182
  store i1 %v7_114b4, i1* %cpsr_z.global-to-local, align 1
  %v2_114b8 = xor i1 %v2_114b4, true
  %v3_114b8 = or i1 %v7_114b4, %v2_114b8
  br i1 %v3_114b8, label %dec_label_pc_fe54, label %dec_label_pc_114bc

dec_label_pc_114bc:                               ; preds = %.thread589, %dec_label_pc_114b4, %bb1829
  store i32 %v0_114cc, i32* %fp.global-to-local, align 4
  %v2_114c0 = icmp ugt i32 %v1_fe58, 51
  store i1 %v2_114c0, i1* %cpsr_c.global-to-local, align 1
  %v7_114c0 = icmp eq i32 %v1_fe58, 52
  %.2000 = zext i1 %v7_114c0 to i32
  store i32 %.2000, i32* %r3.global-to-local, align 4
  %v2_114cc = and i32 %.2000, %v0_114cc
  %v4_114cc = icmp eq i32 %v2_114cc, 0
  store i1 %v4_114cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_114cc, label %dec_label_pc_114dc, label %dec_label_pc_114d4

dec_label_pc_114d4:                               ; preds = %dec_label_pc_114bc
  %v2_114d4 = icmp ugt i32 %v1_fe6c, 93
  store i1 %v2_114d4, i1* %cpsr_c.global-to-local, align 1
  %v7_114d4 = icmp eq i32 %v1_fe6c, 94
  store i1 %v7_114d4, i1* %cpsr_z.global-to-local, align 1
  %v2_114d8 = xor i1 %v2_114d4, true
  %v3_114d8 = or i1 %v7_114d4, %v2_114d8
  br i1 %v3_114d8, label %dec_label_pc_fe54, label %dec_label_pc_114dc

dec_label_pc_114dc:                               ; preds = %dec_label_pc_114bc, %dec_label_pc_114d4
  %v2_114dc = icmp ugt i32 %v1_fe6c, 93
  store i1 %v2_114dc, i1* %cpsr_c.global-to-local, align 1
  %v7_114dc = icmp eq i32 %v1_fe6c, 94
  store i1 %v7_114dc, i1* %cpsr_z.global-to-local, align 1
  %v2_114e0 = xor i1 %v2_114dc, true
  %v3_114e0 = or i1 %v7_114dc, %v2_114e0
  br i1 %v3_114e0, label %bb1832, label %bb1833

bb1832:                                           ; preds = %dec_label_pc_114dc
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1833

bb1833:                                           ; preds = %dec_label_pc_114dc, %bb1832
  %v4_114e4 = phi i32 [ %.2000, %dec_label_pc_114dc ], [ 0, %bb1832 ]
  %v2_114e4 = xor i1 %v7_114dc, true
  %v3_114e4 = and i1 %v2_114dc, %v2_114e4
  br i1 %v3_114e4, label %bb1834, label %thread-pre-split593

bb1834:                                           ; preds = %bb1833
  store i32 %v4_114e4, i32* %r3.global-to-local, align 4
  br label %thread-pre-split593

thread-pre-split593:                              ; preds = %bb1833, %bb1834
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_114e8 = icmp eq i32 %v4_114e4, 0
  store i1 %v2_114e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_114e8, label %dec_label_pc_114f8, label %dec_label_pc_114f0

dec_label_pc_114f0:                               ; preds = %thread-pre-split593
  %v2_114f0 = icmp eq i32 %v1_fe6c, 255
  store i1 %v2_114f0, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_110f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_110f0, label %dec_label_pc_114f8, label %dec_label_pc_fe54

dec_label_pc_114f8:                               ; preds = %dec_label_pc_114f0, %thread-pre-split593
  store i32 %v0_11508, i32* %lr.global-to-local, align 4
  %v2_114fc = icmp ugt i32 %v1_fe58, 53
  store i1 %v2_114fc, i1* %cpsr_c.global-to-local, align 1
  %v7_114fc = icmp eq i32 %v1_fe58, 54
  %.2001 = zext i1 %v7_114fc to i32
  store i32 %.2001, i32* %r3.global-to-local, align 4
  %v2_11508 = and i32 %.2001, %v0_11508
  %v4_11508 = icmp eq i32 %v2_11508, 0
  store i1 %v4_11508, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_11508, label %dec_label_pc_11518, label %dec_label_pc_11510

dec_label_pc_11510:                               ; preds = %dec_label_pc_114f8
  store i1 %v2_114dc, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_114dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_114e0, label %dec_label_pc_fe54, label %dec_label_pc_11518

dec_label_pc_11518:                               ; preds = %dec_label_pc_11510, %dec_label_pc_114f8
  %v2_11518 = icmp ugt i32 %v1_fe6c, 142
  store i1 %v2_11518, i1* %cpsr_c.global-to-local, align 1
  %v7_11518 = icmp eq i32 %v1_fe6c, 143
  store i1 %v7_11518, i1* %cpsr_z.global-to-local, align 1
  %v2_1151c = xor i1 %v2_11518, true
  %v3_1151c = or i1 %v7_11518, %v2_1151c
  br i1 %v3_1151c, label %bb1837, label %bb1838

bb1837:                                           ; preds = %dec_label_pc_11518
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1838

bb1838:                                           ; preds = %dec_label_pc_11518, %bb1837
  %v4_11520 = phi i32 [ %.2001, %dec_label_pc_11518 ], [ 0, %bb1837 ]
  %v2_11520 = xor i1 %v7_11518, true
  %v3_11520 = and i1 %v2_11518, %v2_11520
  br i1 %v3_11520, label %bb1839, label %thread-pre-split595

bb1839:                                           ; preds = %bb1838
  store i32 %v4_11520, i32* %r3.global-to-local, align 4
  br label %thread-pre-split595

thread-pre-split595:                              ; preds = %bb1838, %bb1839
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11524 = icmp eq i32 %v4_11520, 0
  store i1 %v2_11524, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11524, label %dec_label_pc_11534, label %dec_label_pc_1152c

dec_label_pc_1152c:                               ; preds = %thread-pre-split595
  %v2_1152c = icmp eq i32 %v1_fe6c, 255
  store i1 %v2_1152c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_110f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_110f0, label %dec_label_pc_11534, label %dec_label_pc_fe54

dec_label_pc_11534:                               ; preds = %dec_label_pc_1152c, %thread-pre-split595
  %v7_11534 = icmp eq i32 %v1_fe58, 13
  %.2002 = zext i1 %v7_11534 to i32
  store i32 %.2002, i32* %lr.global-to-local, align 4
  %v2_11540 = icmp ugt i32 %v1_fe6c, 50
  store i1 %v2_11540, i1* %cpsr_c.global-to-local, align 1
  %v7_11540 = icmp eq i32 %v1_fe6c, 51
  store i1 %v7_11540, i1* %cpsr_z.global-to-local, align 1
  %v2_11544 = xor i1 %v2_11540, true
  %v3_11544 = or i1 %v7_11540, %v2_11544
  br i1 %v3_11544, label %bb1842, label %bb1843

bb1842:                                           ; preds = %dec_label_pc_11534
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1843

bb1843:                                           ; preds = %dec_label_pc_11534, %bb1842
  %v0_1154c.pr = phi i32 [ %v4_11520, %dec_label_pc_11534 ], [ 0, %bb1842 ]
  %v2_11548 = xor i1 %v7_11540, true
  %v3_11548 = and i1 %v2_11540, %v2_11548
  br i1 %v3_11548, label %bb1844, label %thread-pre-split597

bb1844:                                           ; preds = %bb1843
  store i32 %.2002, i32* %r3.global-to-local, align 4
  br label %thread-pre-split597

thread-pre-split597:                              ; preds = %bb1843, %bb1844
  %v0_1154c = phi i32 [ %.2002, %bb1844 ], [ %v0_1154c.pr, %bb1843 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1154c = icmp eq i32 %v0_1154c, 0
  store i1 %v2_1154c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1154c, label %dec_label_pc_1155c, label %dec_label_pc_11554

dec_label_pc_11554:                               ; preds = %thread-pre-split597
  store i1 %v2_101d4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_101d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_10894, label %dec_label_pc_fe54, label %dec_label_pc_1155c

dec_label_pc_1155c:                               ; preds = %dec_label_pc_11554, %thread-pre-split597
  store i1 %v2_11228, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_11228, i1* %cpsr_z.global-to-local, align 1
  %v2_11560 = xor i1 %v2_11228, true
  %v3_11560 = or i1 %v7_11228, %v2_11560
  br i1 %v3_11560, label %bb1845, label %bb1846

bb1845:                                           ; preds = %dec_label_pc_1155c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1846

bb1846:                                           ; preds = %dec_label_pc_1155c, %bb1845
  %v0_11568.pr = phi i32 [ %v0_1154c, %dec_label_pc_1155c ], [ 0, %bb1845 ]
  %v2_11564 = xor i1 %v7_11228, true
  %v3_11564 = and i1 %v2_11228, %v2_11564
  br i1 %v3_11564, label %bb1847, label %thread-pre-split598

bb1847:                                           ; preds = %bb1846
  store i32 %.2002, i32* %r3.global-to-local, align 4
  br label %thread-pre-split598

thread-pre-split598:                              ; preds = %bb1846, %bb1847
  %v0_11568 = phi i32 [ %.2002, %bb1847 ], [ %v0_11568.pr, %bb1846 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11568 = icmp eq i32 %v0_11568, 0
  store i1 %v2_11568, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11568, label %dec_label_pc_11578, label %dec_label_pc_11570

dec_label_pc_11570:                               ; preds = %thread-pre-split598
  store i1 %v2_ff80, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ff80, i1* %cpsr_z.global-to-local, align 1
  %v2_11574 = xor i1 %v2_ff80, true
  %v3_11574 = or i1 %v7_ff80, %v2_11574
  br i1 %v3_11574, label %dec_label_pc_fe54, label %dec_label_pc_11578

dec_label_pc_11578:                               ; preds = %dec_label_pc_11570, %thread-pre-split598
  %v2_11578 = icmp ugt i32 %v1_fe6c, 171
  store i1 %v2_11578, i1* %cpsr_c.global-to-local, align 1
  %v7_11578 = icmp eq i32 %v1_fe6c, 172
  store i1 %v7_11578, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11578, label %.thread599, label %.thread600

.thread600:                                       ; preds = %dec_label_pc_11578
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1158c

.thread599:                                       ; preds = %dec_label_pc_11578
  store i32 %.1980, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11584 = icmp eq i1 %v7_107bc, false
  store i1 %v2_11584, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11584, label %dec_label_pc_1158c, label %dec_label_pc_fe54

dec_label_pc_1158c:                               ; preds = %.thread600, %.thread599
  %v2_1158c = icmp ugt i32 %v1_fe6c, 13
  store i1 %v2_1158c, i1* %cpsr_c.global-to-local, align 1
  %v7_1158c = icmp eq i32 %v1_fe6c, 14
  store i1 %v7_1158c, i1* %cpsr_z.global-to-local, align 1
  %v2_11590 = xor i1 %v2_1158c, true
  %v3_11590 = or i1 %v7_1158c, %v2_11590
  br i1 %v3_11590, label %bb1848, label %bb1849

bb1848:                                           ; preds = %dec_label_pc_1158c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1849

bb1849:                                           ; preds = %dec_label_pc_1158c, %bb1848
  %v2_11594 = xor i1 %v7_1158c, true
  %v3_11594 = and i1 %v2_1158c, %v2_11594
  br i1 %v3_11594, label %thread-pre-split603, label %thread-pre-split603.thread

thread-pre-split603.thread:                       ; preds = %bb1849
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_119e8

thread-pre-split603:                              ; preds = %bb1849
  store i32 %.1997, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11598 = icmp eq i1 %v7_110dc, false
  store i1 %v2_11598, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11598, label %dec_label_pc_119e8, label %dec_label_pc_115a0

dec_label_pc_115a0:                               ; preds = %thread-pre-split603
  %v2_115a0 = icmp eq i32 %v1_fe6c, 255
  store i1 %v2_115a0, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_110f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_110f0, label %dec_label_pc_115a8, label %dec_label_pc_fe54

dec_label_pc_115a8:                               ; preds = %dec_label_pc_119e8, %bb1883, %dec_label_pc_115a0
  %v2_115a8 = icmp ugt i32 %v1_fe58, 211
  store i1 %v2_115a8, i1* %cpsr_c.global-to-local, align 1
  %v7_115a8 = icmp eq i32 %v1_fe58, 212
  store i1 %v7_115a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_115a8, label %.thread604, label %dec_label_pc_115c8

.thread604:                                       ; preds = %dec_label_pc_115a8
  store i32 %.1987, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_115b4 = icmp eq i1 %v7_10a2c, false
  store i1 %v2_115b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_115b4, label %dec_label_pc_115c8.thread, label %dec_label_pc_115bc

dec_label_pc_115bc:                               ; preds = %.thread604
  %v2_115bc = icmp eq i32 %v1_fe70, 255
  store i1 %v2_115bc, i1* %cpsr_c.global-to-local, align 1
  %v7_115bc = icmp eq i32 %v1_fe70, 255
  store i1 %v7_115bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_115bc, label %dec_label_pc_115c8.thread, label %bb1850

bb1850:                                           ; preds = %dec_label_pc_115bc
  %v3_115c0 = icmp ugt i32 %v1_fe70, 222
  store i1 %v3_115c0, i1* %cpsr_c.global-to-local, align 1
  %v8_115c0 = icmp eq i32 %v1_fe70, 223
  store i1 %v8_115c0, i1* %cpsr_z.global-to-local, align 1
  %v2_115c4 = xor i1 %v8_115c0, true
  %v3_115c4 = and i1 %v3_115c0, %v2_115c4
  br i1 %v3_115c4, label %dec_label_pc_fe54, label %dec_label_pc_115c8.thread

dec_label_pc_115c8.thread:                        ; preds = %dec_label_pc_115bc, %bb1850, %.thread604
  store i32 %.1960, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %.thread609

dec_label_pc_115c8:                               ; preds = %dec_label_pc_115a8, %dec_label_pc_115a8.thread
  store i32 %.1960, i32* %r3.global-to-local, align 4
  %v2_115cc = icmp ugt i32 %v1_fe58, 88
  store i1 %v2_115cc, i1* %cpsr_c.global-to-local, align 1
  %v7_115cc = icmp eq i32 %v1_fe58, 89
  store i1 %v7_115cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_115cc, label %.thread608, label %.thread609

.thread609:                                       ; preds = %dec_label_pc_115c8.thread, %dec_label_pc_115c8
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_115fc

.thread608:                                       ; preds = %dec_label_pc_115c8
  store i32 %.1960, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_115d8 = icmp eq i1 %v7_101f0, false
  store i1 %v2_115d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_115d8, label %dec_label_pc_115fc, label %dec_label_pc_115e0

dec_label_pc_115e0:                               ; preds = %.thread608
  %v2_115e0 = icmp ugt i32 %v1_fe70, 94
  store i1 %v2_115e0, i1* %cpsr_c.global-to-local, align 1
  %v7_115e0 = icmp eq i32 %v1_fe70, 95
  store i1 %v7_115e0, i1* %cpsr_z.global-to-local, align 1
  %v2_115e4 = xor i1 %v2_115e0, true
  %v3_115e4 = or i1 %v7_115e0, %v2_115e4
  br i1 %v3_115e4, label %bb1851, label %bb1852

bb1851:                                           ; preds = %dec_label_pc_115e0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1852

bb1852:                                           ; preds = %dec_label_pc_115e0, %bb1851
  %v0_115f4.pr1004 = phi i32 [ %.1960, %dec_label_pc_115e0 ], [ 0, %bb1851 ]
  %v2_115e8 = xor i1 %v7_115e0, true
  %v3_115e8 = and i1 %v2_115e0, %v2_115e8
  br i1 %v3_115e8, label %bb1853, label %bb1854

bb1853:                                           ; preds = %bb1852
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1854

bb1854:                                           ; preds = %bb1852, %bb1853
  %v0_115f4.pr = phi i32 [ %v0_115f4.pr1004, %bb1852 ], [ 1, %bb1853 ]
  %v2_115ec = icmp ugt i32 %v1_fe70, 95
  store i1 %v2_115ec, i1* %cpsr_c.global-to-local, align 1
  %v7_115ec = icmp eq i32 %v1_fe70, 96
  store i1 %v7_115ec, i1* %cpsr_z.global-to-local, align 1
  %v2_115f0 = xor i1 %v7_115ec, true
  %v3_115f0 = and i1 %v2_115ec, %v2_115f0
  br i1 %v3_115f0, label %.thread613, label %bb1855

.thread613:                                       ; preds = %bb1854
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_115fc

bb1855:                                           ; preds = %bb1854
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_115f4 = icmp eq i32 %v0_115f4.pr, 0
  store i1 %v2_115f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_115f4, label %dec_label_pc_115fc, label %dec_label_pc_fe54

dec_label_pc_115fc:                               ; preds = %.thread613, %.thread609, %bb1855, %.thread608
  %v7_115fc = icmp eq i32 %v1_fe58, 219
  %.2003 = zext i1 %v7_115fc to i32
  store i32 %.2003, i32* %r3.global-to-local, align 4
  %v2_11608 = icmp ugt i32 %v1_fe6c, 214
  store i1 %v2_11608, i1* %cpsr_c.global-to-local, align 1
  %v7_11608 = icmp eq i32 %v1_fe6c, 215
  store i1 %v7_11608, i1* %cpsr_z.global-to-local, align 1
  %v2_1160c = xor i1 %v2_11608, true
  %v3_1160c = or i1 %v7_11608, %v2_1160c
  br i1 %v3_1160c, label %.thread618, label %bb1858

.thread618:                                       ; preds = %dec_label_pc_115fc
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11620

bb1858:                                           ; preds = %dec_label_pc_115fc
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11610 = icmp eq i1 %v7_115fc, false
  store i1 %v2_11610, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11610, label %dec_label_pc_11620, label %dec_label_pc_11618

dec_label_pc_11618:                               ; preds = %bb1858
  %v2_11618 = icmp ugt i32 %v1_fe6c, 229
  store i1 %v2_11618, i1* %cpsr_c.global-to-local, align 1
  %v7_11618 = icmp eq i32 %v1_fe6c, 230
  store i1 %v7_11618, i1* %cpsr_z.global-to-local, align 1
  %v2_1161c = xor i1 %v2_11618, true
  %v3_1161c = or i1 %v7_11618, %v2_1161c
  br i1 %v3_1161c, label %dec_label_pc_fe54, label %dec_label_pc_11620

dec_label_pc_11620:                               ; preds = %.thread618, %dec_label_pc_11618, %bb1858
  %v7_11620 = icmp eq i32 %v1_fe58, 23
  %.2004 = zext i1 %v7_11620 to i32
  store i32 %.2004, i32* %r3.global-to-local, align 4
  store i1 %v2_113fc21082116, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_113fc21102114, i1* %cpsr_z.global-to-local, align 1
  %v2_11630 = xor i1 %v2_113fc21082116, true
  %v3_11630 = or i1 %v7_113fc21102114, %v2_11630
  br i1 %v3_11630, label %.thread623, label %bb1861

.thread623:                                       ; preds = %dec_label_pc_11620
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11644

bb1861:                                           ; preds = %dec_label_pc_11620
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11634 = icmp eq i1 %v7_11620, false
  store i1 %v2_11634, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11634, label %dec_label_pc_11644, label %dec_label_pc_1163c

dec_label_pc_1163c:                               ; preds = %bb1861
  %v2_1163c = icmp ugt i32 %v1_fe6c, 107
  store i1 %v2_1163c, i1* %cpsr_c.global-to-local, align 1
  %v7_1163c = icmp eq i32 %v1_fe6c, 108
  store i1 %v7_1163c, i1* %cpsr_z.global-to-local, align 1
  %v2_11640 = xor i1 %v2_1163c, true
  %v3_11640 = or i1 %v7_1163c, %v2_11640
  br i1 %v3_11640, label %dec_label_pc_fe54, label %dec_label_pc_11644

dec_label_pc_11644:                               ; preds = %.thread623, %dec_label_pc_1163c, %bb1861
  store i32 %.1985, i32* %r3.global-to-local, align 4
  store i1 %v2_10dc4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10dc4, i1* %cpsr_z.global-to-local, align 1
  %v2_1164c = xor i1 %v2_10dc4, true
  %v3_1164c = or i1 %v7_10dc4, %v2_1164c
  br i1 %v3_1164c, label %bb1862, label %bb1863

bb1862:                                           ; preds = %dec_label_pc_11644
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1863

bb1863:                                           ; preds = %dec_label_pc_11644, %bb1862
  %v4_11650 = phi i32 [ %.1985, %dec_label_pc_11644 ], [ 0, %bb1862 ]
  %v2_11650 = xor i1 %v7_10dc4, true
  %v3_11650 = and i1 %v2_10dc4, %v2_11650
  br i1 %v3_11650, label %bb1864, label %thread-pre-split626

bb1864:                                           ; preds = %bb1863
  store i32 %v4_11650, i32* %r3.global-to-local, align 4
  br label %thread-pre-split626

thread-pre-split626:                              ; preds = %bb1863, %bb1864
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11654 = icmp eq i32 %v4_11650, 0
  store i1 %v2_11654, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11654, label %dec_label_pc_11664, label %dec_label_pc_1165c

dec_label_pc_1165c:                               ; preds = %thread-pre-split626
  store i1 %v2_10958, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10958, i1* %cpsr_z.global-to-local, align 1
  %v2_11660 = xor i1 %v2_10958, true
  %v3_11660 = or i1 %v7_10958, %v2_11660
  br i1 %v3_11660, label %dec_label_pc_fe54, label %dec_label_pc_11664

dec_label_pc_11664:                               ; preds = %dec_label_pc_1165c, %thread-pre-split626
  %v7_11664 = icmp eq i32 %v1_fe58, 106
  %.2005 = zext i1 %v7_11664 to i32
  store i32 %.2005, i32* %r3.global-to-local, align 4
  %v2_11670 = icmp ugt i32 %v1_fe6c, 180
  store i1 %v2_11670, i1* %cpsr_c.global-to-local, align 1
  %v7_11670 = icmp eq i32 %v1_fe6c, 181
  store i1 %v7_11670, i1* %cpsr_z.global-to-local, align 1
  %v2_11674 = xor i1 %v2_11670, true
  %v3_11674 = or i1 %v7_11670, %v2_11674
  br i1 %v3_11674, label %.thread629, label %bb1867

.thread629:                                       ; preds = %dec_label_pc_11664
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11688

bb1867:                                           ; preds = %dec_label_pc_11664
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11678 = icmp eq i1 %v7_11664, false
  store i1 %v2_11678, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11678, label %dec_label_pc_11688, label %dec_label_pc_11680

dec_label_pc_11680:                               ; preds = %bb1867
  %v2_11680 = icmp ugt i32 %v1_fe6c, 187
  store i1 %v2_11680, i1* %cpsr_c.global-to-local, align 1
  %v7_11680 = icmp eq i32 %v1_fe6c, 188
  store i1 %v7_11680, i1* %cpsr_z.global-to-local, align 1
  %v2_11684 = xor i1 %v2_11680, true
  %v3_11684 = or i1 %v7_11680, %v2_11684
  br i1 %v3_11684, label %dec_label_pc_fe54, label %dec_label_pc_11688

dec_label_pc_11688:                               ; preds = %.thread629, %dec_label_pc_11680, %bb1867
  %v7_11688 = icmp eq i32 %v1_fe58, 34
  %.2006 = zext i1 %v7_11688 to i32
  store i32 %.2006, i32* %r3.global-to-local, align 4
  %v2_11694 = icmp ugt i32 %v1_fe6c, 243
  store i1 %v2_11694, i1* %cpsr_c.global-to-local, align 1
  %v7_11694 = icmp eq i32 %v1_fe6c, 244
  store i1 %v7_11694, i1* %cpsr_z.global-to-local, align 1
  %v2_11698 = xor i1 %v2_11694, true
  %v3_11698 = or i1 %v7_11694, %v2_11698
  br i1 %v3_11698, label %.thread634, label %bb1870

.thread634:                                       ; preds = %dec_label_pc_11688
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_116ac

bb1870:                                           ; preds = %dec_label_pc_11688
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1169c = icmp eq i1 %v7_11688, false
  store i1 %v2_1169c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1169c, label %dec_label_pc_116ac, label %dec_label_pc_116a4

dec_label_pc_116a4:                               ; preds = %bb1870
  %v2_116a4 = icmp eq i32 %v1_fe6c, 255
  store i1 %v2_116a4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_110f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_110f0, label %dec_label_pc_116ac, label %dec_label_pc_fe54

dec_label_pc_116ac:                               ; preds = %.thread634, %dec_label_pc_116a4, %bb1870
  %v7_116ac = icmp eq i32 %v1_fe58, 87
  %.2007 = zext i1 %v7_116ac to i32
  store i32 %.2007, i32* %r3.global-to-local, align 4
  store i1 %v2_100f8, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_100f8, i1* %cpsr_z.global-to-local, align 1
  %v2_116bc = xor i1 %v2_100f8, true
  %v3_116bc = or i1 %v7_100f8, %v2_116bc
  br i1 %v3_116bc, label %.thread639, label %bb1873

.thread639:                                       ; preds = %dec_label_pc_116ac
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_116d0

bb1873:                                           ; preds = %dec_label_pc_116ac
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_116c0 = icmp eq i1 %v7_116ac, false
  store i1 %v2_116c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_116c0, label %dec_label_pc_116d0, label %dec_label_pc_116c8

dec_label_pc_116c8:                               ; preds = %bb1873
  store i1 %v2_ff40, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ff40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_10570, label %dec_label_pc_fe54, label %dec_label_pc_116d0

dec_label_pc_116d0:                               ; preds = %.thread639, %dec_label_pc_116c8, %bb1873
  %v7_116d0 = icmp eq i32 %v1_fe58, 86
  %.2008 = zext i1 %v7_116d0 to i32
  store i32 %.2008, i32* %r3.global-to-local, align 4
  %v2_116dc = icmp ugt i32 %v1_fe6c, 207
  store i1 %v2_116dc, i1* %cpsr_c.global-to-local, align 1
  %v7_116dc = icmp eq i32 %v1_fe6c, 208
  store i1 %v7_116dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_116dc, label %bb1876, label %dec_label_pc_116e8

bb1876:                                           ; preds = %dec_label_pc_116d0
  %v2_116d0 = icmp ugt i32 %v1_fe58, 85
  store i1 %v2_116d0, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_116d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_116d0, label %dec_label_pc_fe54, label %dec_label_pc_116e8

dec_label_pc_116e8:                               ; preds = %dec_label_pc_116d0, %bb1876
  %v2_116e8 = and i32 %.2008, %.1996
  %v4_116e8 = icmp eq i32 %v2_116e8, 0
  store i1 %v4_116e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_116e8, label %dec_label_pc_116f0, label %dec_label_pc_fe54

dec_label_pc_116f0:                               ; preds = %dec_label_pc_116e8
  %v2_116f0 = icmp ugt i32 %v1_fe58, 192
  store i1 %v2_116f0, i1* %cpsr_c.global-to-local, align 1
  %v7_116f0 = icmp eq i32 %v1_fe58, 193
  store i1 %v7_116f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_116f0, label %bb1877, label %dec_label_pc_116fc

bb1877:                                           ; preds = %dec_label_pc_116f0
  store i1 %v2_10584, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10584, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10584, label %dec_label_pc_fe54, label %dec_label_pc_116fc.thread

dec_label_pc_116fc.thread:                        ; preds = %bb1877
  store i32 %v1_105c0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %.thread646

dec_label_pc_116fc:                               ; preds = %dec_label_pc_116f0
  store i32 %v1_105c0, i32* %r3.global-to-local, align 4
  %v2_11700 = icmp ugt i32 %v1_fe58, 119
  store i1 %v2_11700, i1* %cpsr_c.global-to-local, align 1
  %v7_11700 = icmp eq i32 %v1_fe58, 120
  store i1 %v7_11700, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11700, label %.thread645, label %.thread646

.thread646:                                       ; preds = %dec_label_pc_116fc.thread, %dec_label_pc_116fc
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1171c

.thread645:                                       ; preds = %dec_label_pc_116fc
  %v2_11708 = urem i32 %v1_105c0, 2
  store i32 %v2_11708, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1170c = icmp eq i32 %v2_11708, 0
  store i1 %v2_1170c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1170c, label %dec_label_pc_1171c, label %dec_label_pc_11714

dec_label_pc_11714:                               ; preds = %.thread645
  %v2_11714 = icmp ugt i32 %v1_fe6c, 106
  store i1 %v2_11714, i1* %cpsr_c.global-to-local, align 1
  %v7_11714 = icmp eq i32 %v1_fe6c, 107
  store i1 %v7_11714, i1* %cpsr_z.global-to-local, align 1
  %v2_11718 = xor i1 %v2_11714, true
  %v3_11718 = or i1 %v7_11714, %v2_11718
  br i1 %v3_11718, label %dec_label_pc_fe54, label %dec_label_pc_1171c

dec_label_pc_1171c:                               ; preds = %.thread646, %dec_label_pc_11714, %.thread645
  store i32 %.1957, i32* %r3.global-to-local, align 4
  store i32 %.1983, i32* %r4.global-to-local, align 4
  %v2_11724 = and i32 %.1957, %.1983
  %v4_11724 = icmp eq i32 %v2_11724, 0
  store i1 %v4_11724, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_11724, label %dec_label_pc_1172c, label %dec_label_pc_fe54

dec_label_pc_1172c:                               ; preds = %dec_label_pc_1171c
  %v2_1172c = icmp ugt i32 %v1_fe58, 77
  store i1 %v2_1172c, i1* %cpsr_c.global-to-local, align 1
  %v7_1172c = icmp eq i32 %v1_fe58, 78
  store i1 %v7_1172c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1172c, label %bb1878, label %dec_label_pc_11740

bb1878:                                           ; preds = %dec_label_pc_1172c
  %v3_11730 = icmp ugt i32 %v1_fe6c, 45
  store i1 %v3_11730, i1* %cpsr_c.global-to-local, align 1
  %v8_11730 = icmp eq i32 %v1_fe6c, 46
  store i1 %v8_11730, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11730, label %.thread651.thread, label %dec_label_pc_11740.thread

dec_label_pc_11740.thread:                        ; preds = %bb1878
  store i32 0, i32* %r8.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11748

.thread651.thread:                                ; preds = %bb1878
  store i32 1, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_fe54

dec_label_pc_11740:                               ; preds = %dec_label_pc_1172c
  store i32 0, i32* %r8.global-to-local, align 4
  %v2_11740 = icmp ugt i32 %v1_fe58, 223
  store i1 %v2_11740, i1* %cpsr_c.global-to-local, align 1
  %v7_11740 = icmp eq i32 %v1_fe58, 224
  store i1 %v7_11740, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11740, label %dec_label_pc_fe54, label %dec_label_pc_11748

dec_label_pc_11748:                               ; preds = %dec_label_pc_11740, %dec_label_pc_11740.thread
  %v0_1139c2206 = phi i32 [ 78, %dec_label_pc_11740.thread ], [ %v1_fe58, %dec_label_pc_11740 ]
  %v3_11748 = mul nuw nsw i32 %v1_fe6c, 65536
  %v4_1174c = mul nuw i32 %v0_1139c2206, 16777216
  %v5_1174c = or i32 %v4_1174c, %v3_11748
  %v2_11750 = or i32 %v5_1174c, %v3_fe74
  %v4_11754 = mul nuw nsw i32 %v1_fe70, 256
  %v5_11754 = or i32 %v2_11750, %v4_11754
  store i32 %v5_11754, i32* %r3.global-to-local, align 4
  %v3_11760 = mul nuw i32 %v3_fe74, 16777216
  %v1_11758 = mul nuw nsw i32 %v1_fe6c, 256
  %v1_1175c = mul nuw nsw i32 %v1_fe70, 65536
  %v2_1176c = and i32 %v3_11748, 8388608
  %v3_1176c = icmp ne i32 %v2_1176c, 0
  store i1 %v3_1176c, i1* %cpsr_c.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_1bcf4.201 to i32), i32* @r0, align 4
  %v5_1176c = or i32 %v0_1139c2206, %v3_11760
  %v5_11768 = or i32 %v5_1176c, %v1_1175c
  %v2_11774 = or i32 %v5_11768, %v1_11758
  store i32 %v2_11774, i32* %r2.global-to-local, align 4
  store i32 %v2_11774, i32* @global_var_1bd04.267, align 4
  store i32 20, i32* %r1.global-to-local, align 4
  store i8 0, i8* bitcast (i32* @global_var_1bcfe.268 to i8*), align 4
  store i8 0, i8* bitcast (i32* @global_var_1bcff.269 to i8*), align 4
  %v2_11788 = call i32 @function_ddf4(i32 ptrtoint (i32* @global_var_1bcf4.201 to i32), i32 20)
  %sext = mul i32 %v2_11788, 16777216
  %v1_1178c = sdiv i32 %sext, 16777216
  store i32 ptrtoint (i32* @global_var_1bcf4.201 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1bd08.205 to i32), i32* %fp.global-to-local, align 4
  %v3_11798 = load i32, i32* @global_var_1bd04.267, align 4
  %v1_1179c = and i32 %v1_1178c, 128
  %v2_1179c = icmp ne i32 %v1_1179c, 0
  store i1 %v2_1179c, i1* %cpsr_c.global-to-local, align 1
  %v3_1179c = ashr i32 %sext, 31
  store i32 %v3_1179c, i32* %lr.global-to-local, align 4
  store i32 23, i32* %ip.global-to-local, align 4
  %v1_117a4 = trunc i32 %v3_1179c to i8
  store i8 %v1_117a4, i8* bitcast (i32* @global_var_1bcff.269 to i8*), align 4
  store i32 ptrtoint (i32* @global_var_1bd08.205 to i32), i32* @r1, align 4
  store i8 23, i8* bitcast (i32* @global_var_1bd0b.211 to i8*), align 4
  store i32 5120, i32* %r2.global-to-local, align 4
  %v1_117b4 = trunc i32 %v1_1178c to i8
  store i8 %v1_117b4, i8* bitcast (i32* @global_var_1bcfe.268 to i8*), align 4
  store i32 20, i32* %r3.global-to-local, align 4
  store i32 %v3_11798, i32* @global_var_1bd0c.271, align 4
  %v0_117c0 = load i32, i32* %r8.global-to-local, align 4
  %v1_117c0 = trunc i32 %v0_117c0 to i8
  store i8 %v1_117c0, i8* bitcast (i32* @global_var_1bd0a.213 to i8*), align 4
  store i8 %v1_117c0, i8* bitcast (i32* @global_var_1bd18.272 to i8*), align 4
  store i8 %v1_117c0, i8* bitcast (i32* @global_var_1bd19.273 to i8*), align 4
  %v4_117cc = call i32 @function_de50(i32 ptrtoint (i32* @global_var_1bcf4.201 to i32), i32 ptrtoint (i32* @global_var_1bd08.205 to i32), i32 5120, i32 20)
  %v2_117d0 = load i32, i32* @global_var_1bd08.205, align 4
  %sext5 = mul i32 %v4_117cc, 16777216
  %v1_117d8 = sdiv i32 %sext5, 16777216
  store i32 ptrtoint (i32* @global_var_1bcf4.201 to i32), i32* %r1.global-to-local, align 4
  %v2_117e0 = load i32, i32* @global_var_1bd48.199, align 4
  store i32 %v2_117e0, i32* %r0.global-to-local, align 4
  %v3_117e4 = udiv i32 %v2_117d0, 65536
  store i32 %v3_117e4, i32* %lr.global-to-local, align 4
  %v3_117e8 = ashr i32 %sext5, 31
  %v1_117f0 = trunc i32 %v3_117e8 to i8
  store i8 %v1_117f0, i8* bitcast (i32* @global_var_1bd19.273 to i8*), align 4
  store i32 2, i32* %stack_var_-92, align 4
  %v1_117fc = and i32 %v3_117e4, 128
  %v2_117fc = icmp ne i32 %v1_117fc, 0
  store i1 %v2_117fc, i1* %cpsr_c.global-to-local, align 1
  %v3_117fc1120 = udiv i32 %v2_117d0, 16777216
  store i32 %v3_117fc1120, i32* %r5.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 40, i32* %r2.global-to-local, align 4
  %v1_11818 = trunc i32 %v1_117d8 to i8
  store i8 %v1_11818, i8* bitcast (i32* @global_var_1bd18.272 to i8*), align 4
  store i32 %v2_12800, i32* %r4.global-to-local, align 4
  %v9_1182c = call i32 @sendto(i32 %v2_117e0, i32* nonnull @global_var_1bcf4.201, i32 40, i32 16384, %sockaddr* %tmp1330, i32 16)
  store i32 %v9_1182c, i32* %r0.global-to-local, align 4
  %v3_11830 = load i32, i32* %stack_var_-52, align 4
  %v1_11834 = add i32 %v3_11830, 1
  store i32 %v1_11834, i32* %r3.global-to-local, align 4
  %v3_11838 = icmp ugt i32 %v1_11834, 383
  store i1 %v3_11838, i1* %cpsr_c.global-to-local, align 1
  %v8_11838 = icmp eq i32 %v1_11834, 384
  store i1 %v8_11838, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_11834, i32* %stack_var_-52, align 4
  %v5_11840 = icmp slt i32 %v1_11834, 384
  br i1 %v5_11840, label %dec_label_pc_fe20, label %dec_label_pc_11844

dec_label_pc_11844:                               ; preds = %dec_label_pc_11748
  store i32 %v2_fe08, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_1184c

dec_label_pc_1184c:                               ; preds = %dec_label_pc_fe00, %dec_label_pc_11844
  %stack_var_-2036.1 = phi i32 [ %stack_var_-2036.0, %dec_label_pc_fe00 ], [ %v2_fe08, %dec_label_pc_11844 ]
  %v0_1184c = call i32* @__errno_location()
  %v2_1184c = ptrtoint i32* %v0_1184c to i32
  store i32 %v2_1184c, i32* %r0.global-to-local, align 4
  store i32 %v2_fdf8, i32* %ip.global-to-local, align 4
  store i32 %v2_1184c, i32* %fp.global-to-local, align 4
  store i32 %v1_11858, i32* @r5, align 4
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_11860

dec_label_pc_11860:                               ; preds = %dec_label_pc_11920, %dec_label_pc_11918, %dec_label_pc_11910, %dec_label_pc_118e4, %dec_label_pc_118d0, %dec_label_pc_118c0, %dec_label_pc_118a8, %dec_label_pc_11908, %dec_label_pc_118fc, %dec_label_pc_118a0, %dec_label_pc_119bc, %dec_label_pc_1184c
  %v1_11864 = phi i32 [ %v2_1184c, %dec_label_pc_1184c ], [ %v1_11864.pre.pre, %dec_label_pc_119bc ], [ %v0_11894, %dec_label_pc_118a0 ], [ %v0_11894, %dec_label_pc_118fc ], [ %v0_11894, %dec_label_pc_11908 ], [ %v0_11894, %dec_label_pc_118a8 ], [ %v0_11894, %dec_label_pc_118c0 ], [ %v0_11894, %dec_label_pc_118d0 ], [ %v0_11894, %dec_label_pc_118e4 ], [ %v0_11894, %dec_label_pc_11910 ], [ %v0_11894, %dec_label_pc_11918 ], [ %v0_11894, %dec_label_pc_11920 ]
  store i32 0, i32* %lr.global-to-local, align 4
  %v2_11864 = inttoptr i32 %v1_11864 to i32*
  store i32 0, i32* %v2_11864, align 4
  %v2_11870 = load i32, i32* @global_var_1bd48.199, align 4
  store i32 %v2_11870, i32* %r0.global-to-local, align 4
  store i32 1514, i32* %r2.global-to-local, align 4
  store i32 %v2_fdf8, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11880 = load i32, i32* %lr.global-to-local, align 4
  %v4_11880 = inttoptr i32 %v0_11880 to %sockaddr*
  %v9_11888 = inttoptr i32 %v0_11880 to i32*
  %v10_11888 = call i32 @recvfrom(i32 %v2_11870, i32* nonnull %stack_var_-1862, i32 1514, i32 16384, %sockaddr* %v4_11880, i32* %v9_11888)
  store i32 %v10_11888, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1188c = icmp eq i32 %v10_11888, 0
  store i1 %v2_1188c, i1* %cpsr_z.global-to-local, align 1
  %tmp1880 = icmp slt i32 %v10_11888, 1
  br i1 %tmp1880, label %dec_label_pc_11a08, label %dec_label_pc_11894

dec_label_pc_11894:                               ; preds = %dec_label_pc_11860
  %v0_11894 = load i32, i32* %fp.global-to-local, align 4
  %v1_11894 = inttoptr i32 %v0_11894 to i32*
  %v2_11894 = load i32, i32* %v1_11894, align 4
  store i32 %v2_11894, i32* %r3.global-to-local, align 4
  %v2_11898 = icmp ugt i32 %v2_11894, 10
  store i1 %v2_11898, i1* %cpsr_c.global-to-local, align 1
  %v7_11898 = icmp eq i32 %v2_11894, 11
  store i1 %v7_11898, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11898, label %dec_label_pc_11a08, label %dec_label_pc_118a0

dec_label_pc_118a0:                               ; preds = %dec_label_pc_11894
  %v2_118a0 = icmp ugt i32 %v10_11888, 38
  store i1 %v2_118a0, i1* %cpsr_c.global-to-local, align 1
  %v7_118a0 = icmp eq i32 %v10_11888, 39
  store i1 %v7_118a0, i1* %cpsr_z.global-to-local, align 1
  %v2_118a4 = xor i1 %v2_118a0, true
  %v3_118a4 = or i1 %v7_118a0, %v2_118a4
  br i1 %v3_118a4, label %dec_label_pc_11860, label %dec_label_pc_118a8

dec_label_pc_118a8:                               ; preds = %dec_label_pc_118a0
  store i32 %v2_fdf8, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1bd28.110 to i32), i32* %ip.global-to-local, align 4
  %v3_118b0 = load i32, i32* %v2_118b0, align 4
  store i32 %v3_118b0, i32* %r2.global-to-local, align 4
  %v2_118b4 = load i32, i32* @global_var_1bd28.110, align 4
  store i32 %v2_118b4, i32* %r3.global-to-local, align 4
  %v3_118b8 = icmp uge i32 %v3_118b0, %v2_118b4
  store i1 %v3_118b8, i1* %cpsr_c.global-to-local, align 1
  %v9_118b8 = icmp eq i32 %v3_118b0, %v2_118b4
  store i1 %v9_118b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_118b8, label %dec_label_pc_118c0, label %dec_label_pc_11860

dec_label_pc_118c0:                               ; preds = %dec_label_pc_118a8
  store i32 %v2_fdf8, i32* %lr.global-to-local, align 4
  %v3_118c4 = load i8, i8* %v2_118c4, align 1
  %v4_118c4 = zext i8 %v3_118c4 to i32
  store i32 %v4_118c4, i32* %r3.global-to-local, align 4
  %v2_118c8 = icmp ugt i8 %v3_118c4, 5
  store i1 %v2_118c8, i1* %cpsr_c.global-to-local, align 1
  %v7_118c8 = icmp eq i8 %v3_118c4, 6
  store i1 %v7_118c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_118c8, label %dec_label_pc_118d0, label %dec_label_pc_11860

dec_label_pc_118d0:                               ; preds = %dec_label_pc_118c0
  %v0_118d0 = load i32, i32* @r5, align 4
  %v1_118d0 = inttoptr i32 %v0_118d0 to i8*
  %v2_118d0 = load i8, i8* %v1_118d0, align 1
  %v3_118d0 = zext i8 %v2_118d0 to i32
  store i32 %v3_118d0, i32* %r3.global-to-local, align 4
  %v1_118d4 = add i32 %v0_118d0, 1
  %v2_118d4 = inttoptr i32 %v1_118d4 to i8*
  %v3_118d4 = load i8, i8* %v2_118d4, align 1
  %v4_118d4 = zext i8 %v3_118d4 to i32
  store i32 %v4_118d4, i32* %r2.global-to-local, align 4
  %v4_118d8 = mul nuw nsw i32 %v4_118d4, 256
  %v5_118d8 = or i32 %v4_118d8, %v3_118d0
  store i32 %v5_118d8, i32* %r3.global-to-local, align 4
  %v2_118dc = icmp ugt i32 %v5_118d8, 5887
  store i1 %v2_118dc, i1* %cpsr_c.global-to-local, align 1
  %v7_118dc = icmp eq i32 %v5_118d8, 5888
  store i1 %v7_118dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_118dc, label %dec_label_pc_118e4, label %dec_label_pc_11860

dec_label_pc_118e4:                               ; preds = %dec_label_pc_118d0
  %v1_118e4 = add i32 %v0_118d0, 2
  %v2_118e4 = inttoptr i32 %v1_118e4 to i8*
  %v3_118e4 = load i8, i8* %v2_118e4, align 1
  %v4_118e4 = zext i8 %v3_118e4 to i32
  store i32 %v4_118e4, i32* %r3.global-to-local, align 4
  %v1_118e8 = add i32 %v0_118d0, 3
  %v2_118e8 = inttoptr i32 %v1_118e8 to i8*
  %v3_118e8 = load i8, i8* %v2_118e8, align 1
  %v4_118e8 = zext i8 %v3_118e8 to i32
  store i32 %v4_118e8, i32* %r2.global-to-local, align 4
  store i32 %v4_fbf0, i32* %r0.global-to-local, align 4
  %v4_118f0 = mul nuw nsw i32 %v4_118e8, 256
  %v5_118f0 = or i32 %v4_118f0, %v4_118e4
  store i32 %v5_118f0, i32* %r3.global-to-local, align 4
  %v3_118f4 = icmp uge i32 %v5_118f0, %v4_fbf0
  store i1 %v3_118f4, i1* %cpsr_c.global-to-local, align 1
  %v9_118f4 = icmp eq i32 %v5_118f0, %v4_fbf0
  store i1 %v9_118f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_118f4, label %dec_label_pc_118fc, label %dec_label_pc_11860

dec_label_pc_118fc:                               ; preds = %dec_label_pc_118e4
  %v1_118fc = add i32 %v0_118d0, 13
  %v2_118fc = inttoptr i32 %v1_118fc to i8*
  %v3_118fc = load i8, i8* %v2_118fc, align 1
  %v4_118fc = zext i8 %v3_118fc to i32
  store i32 %v4_118fc, i32* %r3.global-to-local, align 4
  %v1_11900 = and i32 %v4_118fc, 2
  %v2_11900 = icmp eq i32 %v1_11900, 0
  store i1 %v2_11900, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11900, label %dec_label_pc_11860, label %dec_label_pc_11908

dec_label_pc_11908:                               ; preds = %dec_label_pc_118fc
  %v1_11908 = and i32 %v4_118fc, 16
  %v2_11908 = icmp eq i32 %v1_11908, 0
  store i1 %v2_11908, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11908, label %dec_label_pc_11860, label %dec_label_pc_11910

dec_label_pc_11910:                               ; preds = %dec_label_pc_11908
  %v1_11910 = and i32 %v4_118fc, 4
  %v2_11910 = icmp eq i32 %v1_11910, 0
  store i1 %v2_11910, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11910, label %dec_label_pc_11918, label %dec_label_pc_11860

dec_label_pc_11918:                               ; preds = %dec_label_pc_11910
  %tmp2266 = urem i8 %v3_118fc, 2
  %v2_11918 = icmp eq i8 %tmp2266, 0
  store i1 %v2_11918, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11918, label %dec_label_pc_11920, label %dec_label_pc_11860

dec_label_pc_11920:                               ; preds = %dec_label_pc_11918
  %v1_11920 = add i32 %v0_118d0, 8
  %v2_11920 = inttoptr i32 %v1_11920 to i32*
  %v3_11920 = load i32, i32* %v2_11920, align 4
  %v2_1193c = call i32 @llvm.bswap.i32(i32 %v3_11920)
  %v1_11940 = add i32 %v2_1193c, -1
  store i32 %v1_11940, i32* %r3.global-to-local, align 4
  %v1_11948 = and i32 %v1_11940, 65280
  store i32 %v1_11948, i32* %r2.global-to-local, align 4
  %v1_11944 = udiv i32 %v1_11940, 256
  %v3_1194c = and i32 %v1_11944, 65280
  %v3_11950 = mul i32 %v1_11940, 16777216
  %v4_11954 = mul nuw nsw i32 %v1_11948, 256
  %v5_11954 = or i32 %v4_11954, %v3_11950
  store i32 %v5_11954, i32* %r0.global-to-local, align 4
  %v4_11958 = udiv i32 %v1_11940, 16777216
  %v5_11958 = or i32 %v3_1194c, %v4_11958
  store i32 %v5_11958, i32* %r1.global-to-local, align 4
  %v3_1195c = load i32, i32* %v2_1195c, align 4
  store i32 %v3_1195c, i32* %r2.global-to-local, align 4
  %v2_11960 = call i32 @llvm.bswap.i32(i32 %v1_11940)
  store i32 %v2_11960, i32* %ip.global-to-local, align 4
  %v3_11964 = icmp uge i32 %v2_11960, %v3_1195c
  store i1 %v3_11964, i1* %cpsr_c.global-to-local, align 1
  %v9_11964 = icmp eq i32 %v2_11960, %v3_1195c
  store i1 %v9_11964, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_11964, label %dec_label_pc_1196c, label %dec_label_pc_11860

dec_label_pc_1196c:                               ; preds = %dec_label_pc_11920
  %v0_1196c = load i32, i32* @r4, align 4
  %v2_1196c = icmp ugt i32 %v0_1196c, 254
  store i1 %v2_1196c, i1* %cpsr_c.global-to-local, align 1
  %v7_1196c = icmp eq i32 %v0_1196c, 255
  store i1 %v7_1196c, i1* %cpsr_z.global-to-local, align 1
  %v8_11970 = icmp sgt i32 %v0_1196c, 255
  br i1 %v8_11970, label %dec_label_pc_11a08, label %dec_label_pc_11974

dec_label_pc_11974:                               ; preds = %dec_label_pc_1196c
  %v2_1197c = load i32, i32* @global_var_1bd44.197, align 4
  store i32 %v2_1197c, i32* %r1.global-to-local, align 4
  %v3_11980 = mul i32 %v0_1196c, 256
  store i32 %v3_11980, i32* %r2.global-to-local, align 4
  %v2_11984 = mul i32 %v0_1196c, 288
  store i32 %v2_11984, i32* %r3.global-to-local, align 4
  %v2_11988 = add i32 %v2_1197c, %v2_11984
  store i32 %v2_11988, i32* @r0, align 4
  %v1_1198c = add i32 %v2_11988, 12
  %v2_1198c = inttoptr i32 %v1_1198c to i32*
  %v3_1198c = load i32, i32* %v2_1198c, align 4
  store i32 %v3_1198c, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11990 = icmp eq i32 %v3_1198c, 0
  store i1 %v2_11990, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11990, label %dec_label_pc_119bc, label %dec_label_pc_1199c.preheader

dec_label_pc_1199c.preheader:                     ; preds = %dec_label_pc_11974
  %v2_11994 = add i32 %v2_11988, 288
  store i32 %v2_11994, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1199c

dec_label_pc_1199c:                               ; preds = %dec_label_pc_1199c.preheader, %dec_label_pc_119b0
  %v0_119b0 = phi i32 [ %v2_11994, %dec_label_pc_1199c.preheader ], [ %v1_119a8, %dec_label_pc_119b0 ]
  %v0_1199c = phi i32 [ %v0_1196c, %dec_label_pc_1199c.preheader ], [ %v1_1199c, %dec_label_pc_119b0 ]
  %v1_1199c = add i32 %v0_1199c, 1
  store i32 %v1_1199c, i32* @r4, align 4
  %v7_119a0 = icmp eq i32 %v1_1199c, 256
  store i32 %v0_119b0, i32* @r0, align 4
  %v1_119a8 = add i32 %v0_119b0, 288
  store i32 %v1_119a8, i32* %r2.global-to-local, align 4
  br i1 %v7_119a0, label %dec_label_pc_11a08.loopexit, label %dec_label_pc_119b0

dec_label_pc_119b0:                               ; preds = %dec_label_pc_1199c
  %v1_119b0 = add i32 %v0_119b0, 12
  %v2_119b0 = inttoptr i32 %v1_119b0 to i32*
  %v3_119b0 = load i32, i32* %v2_119b0, align 4
  store i32 %v3_119b0, i32* %r3.global-to-local, align 4
  %v2_119b4 = icmp eq i32 %v3_119b0, 0
  br i1 %v2_119b4, label %dec_label_pc_119bc.loopexit, label %dec_label_pc_1199c

dec_label_pc_119bc.loopexit:                      ; preds = %dec_label_pc_119b0
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_119bc

dec_label_pc_119bc:                               ; preds = %dec_label_pc_119bc.loopexit, %dec_label_pc_11974
  %v1_119bc = phi i32 [ %v0_119b0, %dec_label_pc_119bc.loopexit ], [ %v2_11988, %dec_label_pc_11974 ]
  %v2_119bc = add i32 %v1_119bc, 16
  %v3_119bc = inttoptr i32 %v2_119bc to i32*
  store i32 %v3_1195c, i32* %v3_119bc, align 4
  %v0_119c0 = load i32, i32* @r5, align 4
  %v1_119c0 = inttoptr i32 %v0_119c0 to i32*
  %v2_119c0 = load i32, i32* %v1_119c0, align 4
  store i32 %v2_119c0, i32* %r2.global-to-local, align 4
  %v1_119c4 = and i32 %v2_119c0, 128
  %v2_119c4 = icmp ne i32 %v1_119c4, 0
  store i1 %v2_119c4, i1* %cpsr_c.global-to-local, align 1
  %v3_119c4 = sdiv i32 %v2_119c0, 256
  store i32 %v3_119c4, i32* %r3.global-to-local, align 4
  %v1_119c8 = trunc i32 %v3_119c4 to i8
  %v2_119c8 = load i32, i32* @r0, align 4
  %v3_119c8 = add i32 %v2_119c8, 21
  %v4_119c8 = inttoptr i32 %v3_119c8 to i8*
  store i8 %v1_119c8, i8* %v4_119c8, align 1
  %v0_119cc = load i32, i32* %r2.global-to-local, align 4
  %v1_119cc = trunc i32 %v0_119cc to i8
  %v2_119cc = load i32, i32* @r0, align 4
  %v3_119cc = add i32 %v2_119cc, 20
  %v4_119cc = inttoptr i32 %v3_119cc to i8*
  store i8 %v1_119cc, i8* %v4_119cc, align 1
  %v0_119d0 = call i32 @function_f76c()
  store i32 %v0_119d0, i32* %r0.global-to-local, align 4
  %v1_11864.pre.pre = load i32, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_11860

dec_label_pc_119d8:                               ; preds = %dec_label_pc_fb1c
  store i32 ptrtoint (i32* @global_var_1bd48.199 to i32), i32* %r1.global-to-local, align 4
  %v2_119dc = load i32, i32* @global_var_1bd48.199, align 4
  store i32 %v2_119dc, i32* %r0.global-to-local, align 4
  %v1_119e0 = call i32 @close(i32 %v2_119dc)
  store i32 %v1_119e0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_fb8c

dec_label_pc_119e8:                               ; preds = %thread-pre-split603.thread, %thread-pre-split603
  %v2_119e8 = icmp ugt i32 %v1_fe58, 78
  store i1 %v2_119e8, i1* %cpsr_c.global-to-local, align 1
  %v7_119e8 = icmp eq i32 %v1_fe58, 79
  store i1 %v7_119e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_119e8, label %bb1881, label %dec_label_pc_115a8

bb1881:                                           ; preds = %dec_label_pc_119e8
  %v3_119ec = icmp ugt i32 %v1_fe6c, 120
  store i1 %v3_119ec, i1* %cpsr_c.global-to-local, align 1
  %v8_119ec = icmp eq i32 %v1_fe6c, 121
  store i1 %v8_119ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_119ec, label %dec_label_pc_119f4, label %dec_label_pc_115a8.thread

dec_label_pc_115a8.thread:                        ; preds = %bb1881
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_115c8

dec_label_pc_119f4:                               ; preds = %bb1881
  %v1_119f4 = add nsw i32 %v1_fe70, -255
  store i32 %v1_119f4, i32* %r3.global-to-local, align 4
  %v2_119f4 = icmp eq i32 %v1_fe70, 255
  store i1 %v2_119f4, i1* %cpsr_c.global-to-local, align 1
  %v7_119f4 = icmp eq i32 %v1_fe70, 255
  store i1 %v7_119f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_119f4, label %bb1883, label %bb1882

bb1882:                                           ; preds = %dec_label_pc_119f4
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1883

bb1883:                                           ; preds = %dec_label_pc_119f4, %bb1882
  %v0_119fc = phi i32 [ %v1_119f4, %dec_label_pc_119f4 ], [ 1, %bb1882 ]
  %v2_119fc = and i32 %v3_fe60, 64
  %v3_119fc = icmp ne i32 %v2_119fc, 0
  store i1 %v3_119fc, i1* %cpsr_c.global-to-local, align 1
  %v4_119fc = udiv i32 %v1_fe70, 128
  %v5_119fc = and i32 %v0_119fc, %v4_119fc
  store i32 %v5_119fc, i32* %r3.global-to-local, align 4
  %v6_119fc = icmp eq i32 %v5_119fc, 0
  store i1 %v6_119fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_119fc, label %dec_label_pc_115a8, label %dec_label_pc_fe54

dec_label_pc_11a08.loopexit:                      ; preds = %dec_label_pc_1199c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11a08

dec_label_pc_11a08:                               ; preds = %dec_label_pc_1196c, %dec_label_pc_11894, %dec_label_pc_11860, %dec_label_pc_11a08.loopexit
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 1840, i32* %r4.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v2_11a1c2196 = load i32, i32* @sp, align 4
  %v3_11a1c2197 = add i32 %v2_11a1c2196, 1840
  %v4_11a1c2198 = inttoptr i32 %v3_11a1c2197 to i32*
  store i32 0, i32* %v4_11a1c2198, align 4
  br label %dec_label_pc_11a10.dec_label_pc_11a10_crit_edge

dec_label_pc_11a10.dec_label_pc_11a10_crit_edge:  ; preds = %dec_label_pc_11a08, %dec_label_pc_11a10.dec_label_pc_11a10_crit_edge
  %v0_11a10.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_11a1c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_11a10 = add i32 %v0_11a10.pre, 1840
  store i32 %v1_11a10, i32* %r4.global-to-local, align 4
  %v1_11a14 = add i32 %v0_11a10.pre, 4
  store i32 %v1_11a14, i32* %r3.global-to-local, align 4
  %v7_11a18 = icmp eq i32 %v1_11a14, 128
  %v2_11a1c = load i32, i32* @sp, align 4
  %v3_11a1c = add i32 %v2_11a1c, %v1_11a10
  %v4_11a1c = inttoptr i32 %v3_11a1c to i32*
  store i32 %v0_11a1c.pre, i32* %v4_11a1c, align 4
  br i1 %v7_11a18, label %dec_label_pc_11a24, label %dec_label_pc_11a10.dec_label_pc_11a10_crit_edge

dec_label_pc_11a24:                               ; preds = %dec_label_pc_11a10.dec_label_pc_11a10_crit_edge
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_11a24 = load i32, i32* %r2.global-to-local, align 4
  %v1_11a282199 = add i32 %v0_11a24, 1712
  store i32 %v1_11a282199, i32* %ip.global-to-local, align 4
  %v1_11a2c2200 = add i32 %v0_11a24, 4
  store i32 %v1_11a2c2200, i32* %r3.global-to-local, align 4
  %v7_11a302201 = icmp eq i32 %v1_11a2c2200, 128
  %v2_11a342202 = load i32, i32* @sp, align 4
  %v3_11a342203 = add i32 %v2_11a342202, %v1_11a282199
  %v4_11a342204 = inttoptr i32 %v3_11a342203 to i32*
  store i32 %v0_11a24, i32* %v4_11a342204, align 4
  br i1 %v7_11a302201, label %dec_label_pc_11a3c, label %dec_label_pc_11a28.dec_label_pc_11a28_crit_edge

dec_label_pc_11a28.dec_label_pc_11a28_crit_edge:  ; preds = %dec_label_pc_11a24, %dec_label_pc_11a28.dec_label_pc_11a28_crit_edge
  %v0_11a28.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_11a34.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_11a28 = add i32 %v0_11a28.pre, 1712
  store i32 %v1_11a28, i32* %ip.global-to-local, align 4
  %v1_11a2c = add i32 %v0_11a28.pre, 4
  store i32 %v1_11a2c, i32* %r3.global-to-local, align 4
  %v7_11a30 = icmp eq i32 %v1_11a2c, 128
  %v2_11a34 = load i32, i32* @sp, align 4
  %v3_11a34 = add i32 %v2_11a34, %v1_11a28
  %v4_11a34 = inttoptr i32 %v3_11a34 to i32*
  store i32 %v0_11a34.pre, i32* %v4_11a34, align 4
  br i1 %v7_11a30, label %dec_label_pc_11a3c, label %dec_label_pc_11a28.dec_label_pc_11a28_crit_edge

dec_label_pc_11a3c:                               ; preds = %dec_label_pc_11a28.dec_label_pc_11a28_crit_edge, %dec_label_pc_11a24
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_11a3c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_11a3c, i32* @r6, align 4
  store i32 %v0_11a3c, i32* @r5, align 4
  store i32 %v0_11a3c, i32* @r7, align 4
  store i32 %v0_11a3c, i32* %stack_var_-52, align 4
  br label %dec_label_pc_11ab8

dec_label_pc_11a50:                               ; preds = %dec_label_pc_11ae0, %dec_label_pc_11ab8
  %storemerge1236 = phi i32 [ 30, %dec_label_pc_11ab8 ], [ 5, %dec_label_pc_11ae0 ]
  store i32 %storemerge1236, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1bd24.184 to i32), i32* %r0.global-to-local, align 4
  %v1_11a54 = add i32 %v2_11acc, 8
  %v2_11a54 = inttoptr i32 %v1_11a54 to i32*
  %v3_11a54 = load i32, i32* %v2_11a54, align 4
  store i32 %v3_11a54, i32* %r2.global-to-local, align 4
  %v2_11a58 = load i32, i32* @global_var_1bd24.184, align 4
  %v2_11a5c = sub i32 %v2_11a58, %v3_11a54
  store i32 %v2_11a5c, i32* %r3.global-to-local, align 4
  %v3_11a60 = icmp uge i32 %v2_11a5c, %storemerge1236
  store i1 %v3_11a60, i1* %cpsr_c.global-to-local, align 1
  %v9_11a60 = icmp eq i32 %v2_11a5c, %storemerge1236
  store i1 %v9_11a60, i1* %cpsr_z.global-to-local, align 1
  %v2_11a64 = xor i1 %v9_11a60, true
  %v3_11a64 = and i1 %v3_11a60, %v2_11a64
  br i1 %v3_11a64, label %dec_label_pc_11b24, label %dec_label_pc_11a68

dec_label_pc_11a68:                               ; preds = %dec_label_pc_11a50
  store i1 %v2_11ad4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_11ad4, i1* %cpsr_z.global-to-local, align 1
  %v1_11af0 = add i32 %v2_11acc, 4
  %v2_11af0 = inttoptr i32 %v1_11af0 to i32*
  %v3_11af0 = load i32, i32* %v2_11af0, align 4
  br i1 %v7_11ad4, label %dec_label_pc_11af0, label %dec_label_pc_11a70

dec_label_pc_11a70:                               ; preds = %dec_label_pc_11a68
  store i32 %v3_11af0, i32* %ip.global-to-local, align 4
  %v3_11a78 = udiv i32 %v3_11af0, 32
  store i32 %v2_11afc, i32* %r2.global-to-local, align 4
  %v3_11a80 = mul nuw nsw i32 %v3_11a78, 4
  %v2_11a84 = add i32 %v3_11a80, %v2_11afc
  store i32 %v2_11a84, i32* %r3.global-to-local, align 4
  %v1_11a88 = add i32 %v2_11a84, -184
  %v2_11a88 = inttoptr i32 %v1_11a88 to i32*
  %v3_11a88 = load i32, i32* %v2_11a88, align 4
  %v1_11a8c = urem i32 %v3_11af0, 32
  store i32 %v1_11a8c, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v7_11a94 = shl i32 1, %v1_11a8c
  %v8_11a94 = or i32 %v3_11a88, %v7_11a94
  store i32 %v8_11a94, i32* %r2.global-to-local, align 4
  store i32 %v8_11a94, i32* %v2_11a88, align 4
  %v0_11a9c = load i32, i32* @r6, align 4
  %v1_11a9c = load i32, i32* %ip.global-to-local, align 4
  %v3_11a9c = icmp uge i32 %v0_11a9c, %v1_11a9c
  store i1 %v3_11a9c, i1* %cpsr_c.global-to-local, align 1
  %v9_11a9c = icmp eq i32 %v0_11a9c, %v1_11a9c
  store i1 %v9_11a9c, i1* %cpsr_z.global-to-local, align 1
  %v5_11aa0 = icmp slt i32 %v0_11a9c, %v1_11a9c
  br i1 %v5_11aa0, label %bb1885, label %bb1886

bb1885:                                           ; preds = %dec_label_pc_11a70
  store i32 %v1_11a9c, i32* @r6, align 4
  br label %bb1886

bb1886:                                           ; preds = %dec_label_pc_11ae0, %dec_label_pc_12924, %dec_label_pc_11b58, %bb1888, %dec_label_pc_11a70, %bb1885
  %v3_11aa4 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_11aa4, i32* %r3.global-to-local, align 4
  %v1_11aa8 = add i32 %v3_11aa4, 1
  store i32 %v1_11aa8, i32* %r2.global-to-local, align 4
  %v2_11aac = icmp ugt i32 %v1_11aa8, 254
  store i1 %v2_11aac, i1* %cpsr_c.global-to-local, align 1
  %v7_11aac = icmp eq i32 %v1_11aa8, 255
  store i1 %v7_11aac, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_11aa8, i32* %stack_var_-52, align 4
  %v8_11ab4 = icmp sgt i32 %v1_11aa8, 255
  br i1 %v8_11ab4, label %dec_label_pc_11b64, label %dec_label_pc_11ab8

dec_label_pc_11ab8:                               ; preds = %bb1886, %dec_label_pc_11a3c
  %v0_11ac4 = phi i32 [ %v1_11aa8, %bb1886 ], [ %v0_11a3c, %dec_label_pc_11a3c ]
  store i32 ptrtoint (i32* @global_var_1bd44.197 to i32), i32* %lr.global-to-local, align 4
  %v3_11abc = mul i32 %v0_11ac4, 256
  store i32 %v3_11abc, i32* %r3.global-to-local, align 4
  %v2_11ac0 = load i32, i32* @global_var_1bd44.197, align 4
  store i32 %v2_11ac0, i32* %r1.global-to-local, align 4
  %v2_11ac8 = mul i32 %v0_11ac4, 288
  store i32 %v2_11ac8, i32* %r2.global-to-local, align 4
  %v2_11acc = add i32 %v2_11ac0, %v2_11ac8
  store i32 %v2_11acc, i32* @r4, align 4
  %v1_11ad0 = add i32 %v2_11acc, 12
  %v2_11ad0 = inttoptr i32 %v1_11ad0 to i32*
  %v3_11ad0 = load i32, i32* %v2_11ad0, align 4
  store i32 %v3_11ad0, i32* %ip.global-to-local, align 4
  %v2_11ad4 = icmp ne i32 %v3_11ad0, 0
  store i1 %v2_11ad4, i1* %cpsr_c.global-to-local, align 1
  %v7_11ad4 = icmp eq i32 %v3_11ad0, 1
  store i1 %v7_11ad4, i1* %cpsr_z.global-to-local, align 1
  %v2_11ad8 = xor i1 %v7_11ad4, true
  %v3_11ad8 = and i1 %v2_11ad4, %v2_11ad8
  br i1 %v3_11ad8, label %dec_label_pc_11a50, label %dec_label_pc_11ae0

dec_label_pc_11ae0:                               ; preds = %dec_label_pc_11ab8
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11ae0 = icmp eq i32 %v3_11ad0, 0
  store i1 %v2_11ae0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11ae0, label %bb1886, label %dec_label_pc_11a50

dec_label_pc_11af0:                               ; preds = %dec_label_pc_11a68
  store i32 %v3_11af0, i32* %r0.global-to-local, align 4
  %v3_11af8 = udiv i32 %v3_11af0, 32
  store i32 %v2_11afc, i32* %r1.global-to-local, align 4
  %v3_11b00 = mul nuw nsw i32 %v3_11af8, 4
  %v2_11b04 = add i32 %v3_11b00, %v2_11afc
  store i32 %v2_11b04, i32* %r3.global-to-local, align 4
  %v1_11b08 = add i32 %v2_11b04, -312
  %v2_11b08 = inttoptr i32 %v1_11b08 to i32*
  %v3_11b08 = load i32, i32* %v2_11b08, align 4
  %v1_11b0c = urem i32 %v3_11af0, 32
  store i32 %v1_11b0c, i32* %r1.global-to-local, align 4
  %v7_11b10 = shl i32 1, %v1_11b0c
  %v8_11b10 = or i32 %v3_11b08, %v7_11b10
  store i32 %v8_11b10, i32* %r2.global-to-local, align 4
  %v0_11b14 = load i32, i32* @r5, align 4
  %v3_11b14 = icmp uge i32 %v0_11b14, %v3_11af0
  store i1 %v3_11b14, i1* %cpsr_c.global-to-local, align 1
  %v9_11b14 = icmp eq i32 %v0_11b14, %v3_11af0
  store i1 %v9_11b14, i1* %cpsr_z.global-to-local, align 1
  %v5_11b18 = icmp slt i32 %v0_11b14, %v3_11af0
  br i1 %v5_11b18, label %bb1887, label %bb1888

bb1887:                                           ; preds = %dec_label_pc_11af0
  store i32 %v3_11af0, i32* @r5, align 4
  br label %bb1888

bb1888:                                           ; preds = %dec_label_pc_11af0, %bb1887
  store i32 %v8_11b10, i32* %v2_11b08, align 4
  br label %bb1886

dec_label_pc_11b24:                               ; preds = %dec_label_pc_11a50
  %v1_11b24 = add i32 %v2_11acc, 4
  %v2_11b24 = inttoptr i32 %v1_11b24 to i32*
  %v3_11b24 = load i32, i32* %v2_11b24, align 4
  store i32 %v3_11b24, i32* %r0.global-to-local, align 4
  %v1_11b28 = call i32 @close(i32 %v3_11b24)
  store i32 %v1_11b28, i32* %r0.global-to-local, align 4
  %v0_11b2c = load i32, i32* @r4, align 4
  %v1_11b2c = add i32 %v0_11b2c, 12
  %v2_11b2c = inttoptr i32 %v1_11b2c to i32*
  %v3_11b2c = load i32, i32* %v2_11b2c, align 4
  store i32 %v3_11b2c, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_11b34 = icmp ugt i32 %v3_11b2c, 1
  store i1 %v2_11b34, i1* %cpsr_c.global-to-local, align 1
  %v7_11b34 = icmp eq i32 %v3_11b2c, 2
  store i1 %v7_11b34, i1* %cpsr_z.global-to-local, align 1
  %v2_11b38 = add i32 %v0_11b2c, 4
  %v3_11b38 = inttoptr i32 %v2_11b38 to i32*
  store i32 -1, i32* %v3_11b38, align 4
  %v2_11b3c = xor i1 %v2_11b34, true
  %v3_11b3c = or i1 %v7_11b34, %v2_11b3c
  br i1 %v3_11b3c, label %dec_label_pc_12924, label %dec_label_pc_11b40

dec_label_pc_11b40:                               ; preds = %dec_label_pc_11b24
  %v0_11b40 = load i32, i32* @r4, align 4
  %v1_11b40 = add i32 %v0_11b40, 284
  %v2_11b40 = inttoptr i32 %v1_11b40 to i8*
  %v3_11b40 = load i8, i8* %v2_11b40, align 1
  %v4_11b40 = zext i8 %v3_11b40 to i32
  %v1_11b44 = add nuw nsw i32 %v4_11b40, 1
  %v1_11b48 = urem i32 %v1_11b44, 256
  store i32 %v1_11b48, i32* %r3.global-to-local, align 4
  %v2_11b4c = icmp ugt i32 %v1_11b48, 9
  store i1 %v2_11b4c, i1* %cpsr_c.global-to-local, align 1
  %v7_11b4c = icmp eq i32 %v1_11b48, 10
  store i1 %v7_11b4c, i1* %cpsr_z.global-to-local, align 1
  %v1_11b50 = trunc i32 %v1_11b44 to i8
  store i8 %v1_11b50, i8* %v2_11b40, align 1
  %v0_11b54 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11b54, label %dec_label_pc_12924, label %dec_label_pc_11b58

dec_label_pc_11b58:                               ; preds = %dec_label_pc_11b40
  %v0_11b58 = load i32, i32* @r4, align 4
  store i32 %v0_11b58, i32* @r0, align 4
  %v0_11b5c = call i32 @function_f76c()
  store i32 %v0_11b5c, i32* %r0.global-to-local, align 4
  br label %bb1886

dec_label_pc_11b64:                               ; preds = %bb1886
  %v0_11b64 = load i32, i32* @r6, align 4
  %v1_11b64 = load i32, i32* @r5, align 4
  %v3_11b64 = icmp uge i32 %v0_11b64, %v1_11b64
  store i1 %v3_11b64, i1* %cpsr_c.global-to-local, align 1
  %v9_11b64 = icmp eq i32 %v0_11b64, %v1_11b64
  store i1 %v9_11b64, i1* %cpsr_z.global-to-local, align 1
  %v5_11b68 = icmp slt i32 %v0_11b64, %v1_11b64
  %storemerge698 = select i1 %v5_11b68, i32 %v1_11b64, i32 %v0_11b64
  store i32 1, i32* %ip.global-to-local, align 4
  store i32 %v2_11b78, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_11b80, i32* %r1.global-to-local, align 4
  %v1_11b84 = add i32 %storemerge698, 1
  store i32 %v1_11b84, i32* %r0.global-to-local, align 4
  store i32 %v2_11b88, i32* %r4.global-to-local, align 4
  store i32 1, i32* %stack_var_-64, align 4
  %v13_11b98 = call i32 @select(i32 %v1_11b84, %_TYPEDEF_fd_set* %tmp1327, %_TYPEDEF_fd_set* %tmp1326, %_TYPEDEF_fd_set* null, %timeval* %tmp1329)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_11ba0 = call i32 @time(i32* null)
  store i32 %v2_11ba0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_1bd24.184 to i32), i32* %ip.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %v2_11ba0, i32* @global_var_1bd24.184, align 4
  store i32 0, i32* %stack_var_-52, align 4
  br label %dec_label_pc_11bf8

dec_label_pc_11bbc:                               ; preds = %dec_label_pc_11c1c, %dec_label_pc_128c0
  %v0_11bd4 = phi i32 [ %v3_11c10, %dec_label_pc_11c1c ], [ %v0_11bbc.pre, %dec_label_pc_128c0 ]
  %v3_11bbc = udiv i32 %v0_11bd4, 32
  %v3_11bc4 = mul nuw nsw i32 %v3_11bbc, 4
  store i32 %v2_11afc, i32* %ip.global-to-local, align 4
  %v2_11bcc = add i32 %v3_11bc4, %v2_11afc
  store i32 %v2_11bcc, i32* %r3.global-to-local, align 4
  %v1_11bd0 = add i32 %v2_11bcc, -184
  %v2_11bd0 = inttoptr i32 %v1_11bd0 to i32*
  %v3_11bd0 = load i32, i32* %v2_11bd0, align 4
  %v1_11bd4 = urem i32 %v0_11bd4, 32
  store i32 %v1_11bd4, i32* %r1.global-to-local, align 4
  %v2_11bd8 = add nsw i32 %v1_11bd4, -1
  %v3_11bd8 = shl i32 1, %v2_11bd8
  %v4_11bd8 = and i32 %v3_11bd8, %v3_11bd0
  %v5_11bd8 = icmp ne i32 %v4_11bd8, 0
  store i1 %v5_11bd8, i1* %cpsr_c.global-to-local, align 1
  %v6_11bd8 = lshr i32 %v3_11bd0, %v1_11bd4
  store i32 %v6_11bd8, i32* %r2.global-to-local, align 4
  %v1_11bdc = urem i32 %v6_11bd8, 2
  %v2_11bdc = icmp eq i32 %v1_11bdc, 0
  store i1 %v2_11bdc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11bdc, label %dec_label_pc_11be4, label %dec_label_pc_11dac.preheader

dec_label_pc_11dac.preheader:                     ; preds = %dec_label_pc_11bbc
  %v0_11dac720 = load i32, i32* @r6, align 4
  %v1_11dac721 = add i32 %v0_11dac720, 12
  %v2_11dac722 = inttoptr i32 %v1_11dac721 to i32*
  %v3_11dac723 = load i32, i32* %v2_11dac722, align 4
  store i32 %v3_11dac723, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11db0719725 = icmp eq i32 %v3_11dac723, 0
  store i1 %v2_11db0719725, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11db0719725, label %dec_label_pc_11be4, label %dec_label_pc_11db8.lr.ph

dec_label_pc_11be4:                               ; preds = %dec_label_pc_11dac.loopexit, %dec_label_pc_11db0.backedge, %dec_label_pc_11dac.preheader, %dec_label_pc_11bbc, %.thread1154, %dec_label_pc_125fc, %dec_label_pc_11bf8, %dec_label_pc_128d4, %dec_label_pc_1263c
  %v3_11be4 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_11be4, i32* %r3.global-to-local, align 4
  %v1_11be8 = add i32 %v3_11be4, 1
  store i32 %v1_11be8, i32* %r2.global-to-local, align 4
  %v2_11bec = icmp ugt i32 %v1_11be8, 254
  store i1 %v2_11bec, i1* %cpsr_c.global-to-local, align 1
  %v7_11bec = icmp eq i32 %v1_11be8, 255
  store i1 %v7_11bec, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_11be8, i32* %stack_var_-52, align 4
  %v8_11bf4 = icmp sgt i32 %v1_11be8, 255
  br i1 %v8_11bf4, label %dec_label_pc_fe00, label %dec_label_pc_11bf8

dec_label_pc_11bf8:                               ; preds = %dec_label_pc_11be4, %dec_label_pc_11b64
  %v0_11c04 = phi i32 [ %v1_11be8, %dec_label_pc_11be4 ], [ 0, %dec_label_pc_11b64 ]
  store i32 ptrtoint (i32* @global_var_1bd44.197 to i32), i32* %r0.global-to-local, align 4
  %v3_11bfc = mul i32 %v0_11c04, 256
  store i32 %v3_11bfc, i32* %r3.global-to-local, align 4
  %v2_11c00 = load i32, i32* @global_var_1bd44.197, align 4
  store i32 %v2_11c00, i32* %r1.global-to-local, align 4
  %v2_11c08 = mul i32 %v0_11c04, 288
  store i32 %v2_11c08, i32* %r2.global-to-local, align 4
  %v2_11c0c = add i32 %v2_11c00, %v2_11c08
  store i32 %v2_11c0c, i32* @r6, align 4
  %v1_11c10 = add i32 %v2_11c0c, 4
  %v2_11c10 = inttoptr i32 %v1_11c10 to i32*
  %v3_11c10 = load i32, i32* %v2_11c10, align 4
  store i32 %v3_11c10, i32* %r4.global-to-local, align 4
  %v2_11c14 = icmp eq i32 %v3_11c10, -1
  store i1 %v2_11c14, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_11c14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11c14, label %dec_label_pc_11be4, label %dec_label_pc_11c1c

dec_label_pc_11c1c:                               ; preds = %dec_label_pc_11bf8
  %v3_11c1c = udiv i32 %v3_11c10, 32
  store i32 %v2_11afc, i32* %r1.global-to-local, align 4
  %v3_11c28 = mul nuw nsw i32 %v3_11c1c, 4
  %v2_11c2c = add i32 %v3_11c28, %v2_11afc
  store i32 %v2_11c2c, i32* %r3.global-to-local, align 4
  %v1_11c30 = add i32 %v2_11c2c, -312
  %v2_11c30 = inttoptr i32 %v1_11c30 to i32*
  %v3_11c30 = load i32, i32* %v2_11c30, align 4
  %v1_11c34 = urem i32 %v3_11c10, 32
  store i32 %v1_11c34, i32* %r1.global-to-local, align 4
  %v2_11c38 = add nsw i32 %v1_11c34, -1
  %v3_11c38 = shl i32 1, %v2_11c38
  %v4_11c38 = and i32 %v3_11c30, %v3_11c38
  %v5_11c38 = icmp ne i32 %v4_11c38, 0
  store i1 %v5_11c38, i1* %cpsr_c.global-to-local, align 1
  %v6_11c38 = lshr i32 %v3_11c30, %v1_11c34
  store i32 %v6_11c38, i32* %r2.global-to-local, align 4
  %v1_11c3c = urem i32 %v6_11c38, 2
  %v2_11c3c = icmp eq i32 %v1_11c3c, 0
  store i1 %v2_11c3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11c3c, label %dec_label_pc_11bbc, label %dec_label_pc_11c44

dec_label_pc_11c44:                               ; preds = %dec_label_pc_11c1c
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 %v3_11c10, i32* %r0.global-to-local, align 4
  store i32 %v2_121f0, i32* %r3.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v2_11d20, i32* %r4.global-to-local, align 4
  store i32 0, i32* %stack_var_-48, align 4
  store i8 4, i8* %stack_var_-56, align 1
  %v8_11c74 = call i32 @getsockopt(i32 %v3_11c10, i32 1, i32 4, i32* nonnull %stack_var_-48, i32* %v2_11d28)
  %v3_11c78 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_11c78, i32* %r3.global-to-local, align 4
  %v2_11c7c = or i32 %v3_11c78, %v8_11c74
  store i32 %v2_11c7c, i32* %r0.global-to-local, align 4
  %v4_11c7c = icmp eq i32 %v2_11c7c, 0
  store i1 %v4_11c7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_11c7c, label %dec_label_pc_11c84, label %dec_label_pc_128d4

dec_label_pc_11c84:                               ; preds = %dec_label_pc_11c44
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_11c88 = load i32, i32* @r6, align 4
  %v2_11c88 = add i32 %v1_11c88, 12
  %v3_11c88 = inttoptr i32 %v2_11c88 to i32*
  store i32 2, i32* %v3_11c88, align 4
  %v0_11c8c = call i32 @function_f508()
  store i32 ptrtoint (i8** @global_var_1bd20.190 to i32), i32* %ip.global-to-local, align 4
  %v2_11c94 = load i8, i8* bitcast (i8** @global_var_1bd20.190 to i8*), align 4
  %v3_11c94 = zext i8 %v2_11c94 to i32
  %v3_11c98 = load i8, i8* @global_var_1bd21.191, align 1
  %v4_11c98 = zext i8 %v3_11c98 to i32
  store i32 %v4_11c98, i32* %r3.global-to-local, align 4
  %v4_11c9c = mul nuw nsw i32 %v4_11c98, 256
  %v5_11c9c = or i32 %v4_11c9c, %v3_11c94
  %v2_11ca0 = urem i32 %v0_11c8c, %v5_11c9c
  store i32 ptrtoint (i32* @global_var_1bcf0.186 to i32), i32* %r1.global-to-local, align 4
  %v2_11ca8 = load i32, i32* @global_var_1bcf0.186, align 4
  store i32 %v2_11ca8, i32* @lr, align 4
  %v1_11cb0 = load i32, i32* %r5.global-to-local, align 4
  %v9_11cb0 = icmp eq i32 %v2_11ca8, %v1_11cb0
  store i1 %v9_11cb0, i1* %cpsr_z.global-to-local, align 1
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i32 %v2_11ca0, i32* %r0.global-to-local, align 4
  %v7_11cb8 = icmp sgt i32 %v2_11ca8, %v1_11cb0
  br i1 %v7_11cb8, label %dec_label_pc_11cbc, label %dec_label_pc_128bc

dec_label_pc_11cbc:                               ; preds = %dec_label_pc_11c84
  store i32 ptrtoint (i32* @global_var_1bd1c.188 to i32), i32* %r2.global-to-local, align 4
  %v2_11cc0 = load i32, i32* @global_var_1bd1c.188, align 4
  store i32 %v2_11cc0, i32* %r4.global-to-local, align 4
  store i32 %v1_11cb0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_11cd4

dec_label_pc_11ccc:                               ; preds = %dec_label_pc_11cf4, %dec_label_pc_11cd4
  %v3_11ccc = icmp uge i32 %v2_11ca8, %v1_11ce8
  store i1 %v3_11ccc, i1* %cpsr_c.global-to-local, align 1
  %v9_11ccc = icmp eq i32 %v2_11ca8, %v1_11ce8
  store i1 %v9_11ccc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_11ccc, label %dec_label_pc_128bc, label %dec_label_pc_11cd4

dec_label_pc_11cd4:                               ; preds = %dec_label_pc_11ccc, %dec_label_pc_11cbc
  %v0_11ce8 = phi i32 [ %v1_11ce8, %dec_label_pc_11ccc ], [ %v1_11cb0, %dec_label_pc_11cbc ]
  %v0_11cf4 = phi i32 [ %v1_11cec, %dec_label_pc_11ccc ], [ %v2_11cc0, %dec_label_pc_11cbc ]
  store i32 %v0_11cf4, i32* %r1.global-to-local, align 4
  %v1_11cd8 = add i32 %v0_11cf4, 8
  %v2_11cd8 = inttoptr i32 %v1_11cd8 to i8*
  %v3_11cd8 = load i8, i8* %v2_11cd8, align 1
  %v4_11cd8 = zext i8 %v3_11cd8 to i32
  store i32 %v4_11cd8, i32* %r3.global-to-local, align 4
  %v1_11cdc = add i32 %v0_11cf4, 9
  %v2_11cdc = inttoptr i32 %v1_11cdc to i8*
  %v3_11cdc = load i8, i8* %v2_11cdc, align 1
  %v4_11cdc = zext i8 %v3_11cdc to i32
  store i32 %v4_11cdc, i32* %r2.global-to-local, align 4
  %v4_11ce0 = mul nuw nsw i32 %v4_11cdc, 256
  %v5_11ce0 = or i32 %v4_11ce0, %v4_11cd8
  store i32 %v5_11ce0, i32* %r3.global-to-local, align 4
  %v3_11ce4 = icmp uge i32 %v5_11ce0, %v2_11ca0
  store i1 %v3_11ce4, i1* %cpsr_c.global-to-local, align 1
  %v9_11ce4 = icmp eq i32 %v5_11ce0, %v2_11ca0
  store i1 %v9_11ce4, i1* %cpsr_z.global-to-local, align 1
  %v1_11ce8 = add i32 %v0_11ce8, 1
  store i32 %v1_11ce8, i32* %ip.global-to-local, align 4
  %v1_11cec = add i32 %v0_11cf4, 16
  store i32 %v1_11cec, i32* %r4.global-to-local, align 4
  %v2_11cf0 = xor i1 %v9_11ce4, true
  %v3_11cf0 = and i1 %v3_11ce4, %v2_11cf0
  br i1 %v3_11cf0, label %dec_label_pc_11ccc, label %dec_label_pc_11cf4

dec_label_pc_11cf4:                               ; preds = %dec_label_pc_11cd4
  %v1_11cf4 = add i32 %v0_11cf4, 10
  %v2_11cf4 = inttoptr i32 %v1_11cf4 to i8*
  %v3_11cf4 = load i8, i8* %v2_11cf4, align 1
  %v4_11cf4 = zext i8 %v3_11cf4 to i32
  store i32 %v4_11cf4, i32* %r3.global-to-local, align 4
  %v1_11cf8 = add i32 %v0_11cf4, 11
  %v2_11cf8 = inttoptr i32 %v1_11cf8 to i8*
  %v3_11cf8 = load i8, i8* %v2_11cf8, align 1
  %v4_11cf8 = zext i8 %v3_11cf8 to i32
  store i32 %v4_11cf8, i32* %r2.global-to-local, align 4
  %v4_11cfc = mul nuw nsw i32 %v4_11cf8, 256
  %v5_11cfc = or i32 %v4_11cfc, %v4_11cf4
  store i32 %v5_11cfc, i32* %r3.global-to-local, align 4
  %v3_11d00 = icmp uge i32 %v5_11cfc, %v2_11ca0
  store i1 %v3_11d00, i1* %cpsr_c.global-to-local, align 1
  %v9_11d00 = icmp eq i32 %v5_11cfc, %v2_11ca0
  store i1 %v9_11d00, i1* %cpsr_z.global-to-local, align 1
  %v2_11d04 = xor i1 %v3_11d00, true
  %v3_11d04 = or i1 %v9_11d00, %v2_11d04
  br i1 %v3_11d04, label %dec_label_pc_11ccc, label %dec_label_pc_128c0

dec_label_pc_11d0c:                               ; preds = %dec_label_pc_11f7c, %dec_label_pc_11fa0, %dec_label_pc_11f44
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_11d10 = call i32 @function_12a20(i32 26)
  store i32 27, i32* %r0.global-to-local, align 4
  %v1_11d18 = call i32 @function_12a20(i32 27)
  store i32 %v2_11d20, i32* %r1.global-to-local, align 4
  store i32 26, i32* %r0.global-to-local, align 4
  %v3_11d28 = call i32 @function_1293c(i32 26, i32* %v2_11d28)
  store i32 %v3_11d28, i32* @r4, align 4
  store i32 %v2_11d20, i32* %r1.global-to-local, align 4
  store i32 27, i32* %r0.global-to-local, align 4
  %v3_11d3c = call i32 @function_1293c(i32 27, i32* %v2_11d28)
  %v3_11d40 = load i8, i8* %stack_var_-56, align 1
  %v4_11d40 = sext i8 %v3_11d40 to i32
  %sext6 = mul i32 %v3_11d3c, 16777216
  %v1_11d44 = sdiv i32 %sext6, 16777216
  store i32 %v1_11d44, i32* @r5, align 4
  %v0_11d48 = load i32, i32* @r4, align 4
  store i32 %v0_11d48, i32* %r2.global-to-local, align 4
  %v1_11d4c = add nsw i32 %v4_11d40, -1
  store i32 %v1_11d4c, i32* %r3.global-to-local, align 4
  %v0_11d50 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_11d50, i32* %r0.global-to-local, align 4
  %v0_11d54 = load i32, i32* @r6, align 4
  %v1_11d54 = add i32 %v0_11d54, 24
  %v2_11d54 = inttoptr i32 %v1_11d54 to i32*
  %v3_11d54 = load i32, i32* %v2_11d54, align 4
  store i32 %v3_11d54, i32* %r1.global-to-local, align 4
  %v4_11d58 = call i32 @function_130b0(i32 %v0_11d50, i32 %v3_11d54, i32 %v0_11d48, i32 %v1_11d4c)
  store i32 %v4_11d58, i32* %r0.global-to-local, align 4
  %v2_11d5c = icmp eq i32 %v4_11d58, -1
  store i1 %v2_11d5c, i1* %cpsr_c.global-to-local, align 1
  %v7_11d5c = icmp eq i32 %v4_11d58, -1
  store i1 %v7_11d5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11d5c, label %dec_label_pc_11d6c, label %dec_label_pc_11d94

dec_label_pc_11d6c:                               ; preds = %dec_label_pc_11d0c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v3_11d6c = load i8, i8* %stack_var_-56, align 1
  %v4_11d6c = sext i8 %v3_11d6c to i32
  %v0_11d70 = load i32, i32* @r5, align 4
  store i32 %v0_11d70, i32* %r2.global-to-local, align 4
  %v1_11d74 = add nsw i32 %v4_11d6c, -1
  store i32 %v1_11d74, i32* %r3.global-to-local, align 4
  %v0_11d78 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_11d78, i32* %r0.global-to-local, align 4
  %v0_11d7c = load i32, i32* @r6, align 4
  %v1_11d7c = add i32 %v0_11d7c, 24
  %v2_11d7c = inttoptr i32 %v1_11d7c to i32*
  %v3_11d7c = load i32, i32* %v2_11d7c, align 4
  store i32 %v3_11d7c, i32* %r1.global-to-local, align 4
  %v4_11d80 = call i32 @function_130b0(i32 %v0_11d78, i32 %v3_11d7c, i32 %v0_11d70, i32 %v1_11d74)
  store i32 %v4_11d80, i32* %r0.global-to-local, align 4
  %v2_11d84 = icmp eq i32 %v4_11d80, -1
  store i1 %v2_11d84, i1* %cpsr_c.global-to-local, align 1
  %v7_11d84 = icmp eq i32 %v4_11d80, -1
  store i1 %v7_11d84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11d84, label %dec_label_pc_128fc, label %dec_label_pc_11d94

dec_label_pc_11d94:                               ; preds = %dec_label_pc_11d6c, %dec_label_pc_11d0c
  store i32 1, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_11d98 = call i32 @function_12968(i32 26)
  store i32 27, i32* %r0.global-to-local, align 4
  %v1_11da0 = call i32 @function_12968(i32 27)
  store i32 %v1_11da0, i32* %r0.global-to-local, align 4
  %v0_11da4 = load i32, i32* @r7, align 4
  %v3_11da4 = icmp eq i32 %v0_11da4, -1
  store i1 %v3_11da4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v3_11da4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_11da4, label %dec_label_pc_11dac.loopexit, label %dec_label_pc_11fbc

dec_label_pc_11dac.loopexit:                      ; preds = %dec_label_pc_11f34.thread, %dec_label_pc_11f34, %dec_label_pc_126e0, %dec_label_pc_11e2c, %dec_label_pc_11d94, %dec_label_pc_125dc
  %v0_11dac = load i32, i32* @r6, align 4
  %v1_11dac = add i32 %v0_11dac, 12
  %v2_11dac = inttoptr i32 %v1_11dac to i32*
  %v3_11dac = load i32, i32* %v2_11dac, align 4
  store i32 %v3_11dac, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11db0719 = icmp eq i32 %v3_11dac, 0
  store i1 %v2_11db0719, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11db0719, label %dec_label_pc_11be4, label %dec_label_pc_11db8.lr.ph

dec_label_pc_11db8.lr.ph:                         ; preds = %dec_label_pc_11dac.preheader, %dec_label_pc_11dac.loopexit
  %v0_11db81055 = phi i32 [ %v0_11dac, %dec_label_pc_11dac.loopexit ], [ %v0_11dac720, %dec_label_pc_11dac.preheader ]
  br label %dec_label_pc_11db8

dec_label_pc_11db8:                               ; preds = %dec_label_pc_11db0.backedge.thread, %dec_label_pc_11db0.backedge, %dec_label_pc_11db0.backedge.thread2263, %dec_label_pc_11db8.lr.ph
  %v0_12688 = phi i32 [ %v0_11db81055, %dec_label_pc_11db8.lr.ph ], [ %v0_11db81037, %dec_label_pc_11db0.backedge ], [ %v0_11e2c, %dec_label_pc_11db0.backedge.thread ], [ %v0_11e2c, %dec_label_pc_11db0.backedge.thread2263 ]
  %v1_11db8 = add i32 %v0_12688, 24
  %v2_11db8 = inttoptr i32 %v1_11db8 to i32*
  %v3_11db8 = load i32, i32* %v2_11db8, align 4
  store i32 %v3_11db8, i32* %r3.global-to-local, align 4
  %v2_11dbc = icmp ugt i32 %v3_11db8, 255
  store i1 %v2_11dbc, i1* %cpsr_c.global-to-local, align 1
  %v7_11dbc = icmp eq i32 %v3_11db8, 256
  store i1 %v7_11dbc, i1* %cpsr_z.global-to-local, align 1
  %.pre = add i32 %v0_12688, 28
  store i32 %.pre, i32* %r8.global-to-local, align 4
  br i1 %v7_11dbc, label %dec_label_pc_12688, label %dec_label_pc_11dc8

dec_label_pc_11dc8:                               ; preds = %dec_label_pc_11db8, %dec_label_pc_12688
  store i32 0, i32* @r5, align 4
  %v1_11dcc = load i32, i32* %fp.global-to-local, align 4
  %v2_11dcc = inttoptr i32 %v1_11dcc to i32*
  store i32 0, i32* %v2_11dcc, align 4
  %v0_11dd0 = load i32, i32* @r6, align 4
  %v1_11dd0 = add i32 %v0_11dd0, 24
  %v2_11dd0 = inttoptr i32 %v1_11dd0 to i32*
  %v3_11dd0 = load i32, i32* %v2_11dd0, align 4
  store i32 %v3_11dd0, i32* %r2.global-to-local, align 4
  %v0_11dd4 = load i32, i32* %r8.global-to-local, align 4
  %v2_11dd4 = add i32 %v0_11dd4, %v3_11dd0
  store i32 %v2_11dd4, i32* @r4, align 4
  %v1_11dd8 = add i32 %v0_11dd0, 4
  %v2_11dd8 = inttoptr i32 %v1_11dd8 to i32*
  %v3_11dd8 = load i32, i32* %v2_11dd8, align 4
  store i32 %v3_11dd8, i32* %r0.global-to-local, align 4
  %v1_11ddc = sub i32 256, %v3_11dd0
  store i32 %v1_11ddc, i32* %r2.global-to-local, align 4
  store i32 %v2_11dd4, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_11de8 = inttoptr i32 %v2_11dd4 to i32*
  %v5_11de8 = call i32 @recv(i32 %v3_11dd8, i32* %v4_11de8, i32 %v1_11ddc, i32 16384)
  store i32 %v5_11de8, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11dec = icmp eq i32 %v5_11de8, 0
  store i1 %v2_11dec, i1* %cpsr_z.global-to-local, align 1
  %tmp1889 = icmp slt i32 %v5_11de8, 1
  br i1 %tmp1889, label %dec_label_pc_125f0, label %dec_label_pc_11df4

dec_label_pc_11df4:                               ; preds = %dec_label_pc_11dc8
  %v0_11df4 = load i32, i32* @r5, align 4
  store i32 %v0_11df4, i32* %r2.global-to-local, align 4
  store i32 65, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11dfc

dec_label_pc_11dfc:                               ; preds = %bb1891, %dec_label_pc_11df4
  %v3_11e04 = phi i32 [ %v1_11e08, %bb1891 ], [ %v0_11df4, %dec_label_pc_11df4 ]
  %v1_11dfc = load i32, i32* @r4, align 4
  %v2_11dfc = add i32 %v1_11dfc, %v3_11e04
  %v3_11dfc = inttoptr i32 %v2_11dfc to i8*
  %v4_11dfc = load i8, i8* %v3_11dfc, align 1
  %v6_11dfc = zext i8 %v4_11dfc to i32
  store i32 %v6_11dfc, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11e00 = icmp eq i8 %v4_11dfc, 0
  store i1 %v2_11e00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11e00, label %bb1890, label %bb1891

bb1890:                                           ; preds = %dec_label_pc_11dfc
  %v1_11e04 = load i32, i32* %r1.global-to-local, align 4
  %v2_11e04 = trunc i32 %v1_11e04 to i8
  store i8 %v2_11e04, i8* %v3_11dfc, align 1
  %v0_11e08.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb1891

bb1891:                                           ; preds = %dec_label_pc_11dfc, %bb1890
  %v0_11e08 = phi i32 [ %v3_11e04, %dec_label_pc_11dfc ], [ %v0_11e08.pre, %bb1890 ]
  %v1_11e08 = add i32 %v0_11e08, 1
  store i32 %v1_11e08, i32* %r2.global-to-local, align 4
  %v3_11e0c = icmp uge i32 %v5_11de8, %v1_11e08
  store i1 %v3_11e0c, i1* %cpsr_c.global-to-local, align 1
  %v9_11e0c = icmp eq i32 %v5_11de8, %v1_11e08
  store i1 %v9_11e0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_11e0c, label %dec_label_pc_11e14, label %dec_label_pc_11dfc

dec_label_pc_11e14:                               ; preds = %bb1891, %dec_label_pc_125f4
  store i32 ptrtoint (i32* @global_var_1bd24.184 to i32), i32* %r1.global-to-local, align 4
  %v0_11e18 = load i32, i32* @r6, align 4
  %v1_11e18 = add i32 %v0_11e18, 24
  %v2_11e18 = inttoptr i32 %v1_11e18 to i32*
  %v3_11e18 = load i32, i32* %v2_11e18, align 4
  %v2_11e1c = load i32, i32* @global_var_1bd24.184, align 4
  store i32 %v2_11e1c, i32* %r3.global-to-local, align 4
  %v2_11e20 = add i32 %v3_11e18, %v5_11de8
  store i32 %v2_11e20, i32* %ip.global-to-local, align 4
  store i32 %v2_11e20, i32* %v2_11e18, align 4
  %v0_11e28 = load i32, i32* %r3.global-to-local, align 4
  %v1_11e28 = load i32, i32* @r6, align 4
  %v2_11e28 = add i32 %v1_11e28, 8
  %v3_11e28 = inttoptr i32 %v2_11e28 to i32*
  store i32 %v0_11e28, i32* %v3_11e28, align 4
  br label %dec_label_pc_11e2c

dec_label_pc_11e2c:                               ; preds = %dec_label_pc_1244c, %dec_label_pc_11e14
  %v0_11e2c = load i32, i32* @r6, align 4
  %v1_11e2c = add i32 %v0_11e2c, 12
  %v2_11e2c = inttoptr i32 %v1_11e2c to i32*
  %v3_11e2c = load i32, i32* %v2_11e2c, align 4
  store i32 %v3_11e2c, i32* %r2.global-to-local, align 4
  %v1_11e30 = add i32 %v3_11e2c, -2
  store i32 %v1_11e30, i32* %r3.global-to-local, align 4
  %v7_11e34 = icmp eq i32 %v1_11e30, 8
  store i1 %v7_11e34, i1* %cpsr_z.global-to-local, align 1
  %v5_11e38 = and i32 %v1_11e30, 1073741824
  %v6_11e38 = icmp ne i32 %v5_11e38, 0
  store i1 %v6_11e38, i1* %cpsr_c.global-to-local, align 1
  switch i32 %v3_11e2c, label %dec_label_pc_11dac.loopexit [
    i32 2, label %dec_label_pc_11e64
    i32 3, label %dec_label_pc_11f44
    i32 4, label %dec_label_pc_12000
    i32 5, label %dec_label_pc_120ac
    i32 6, label %dec_label_pc_12174
    i32 7, label %dec_label_pc_12304
    i32 8, label %dec_label_pc_1223c
    i32 9, label %dec_label_pc_12470
    i32 10, label %dec_label_pc_123cc
  ]

dec_label_pc_11e64:                               ; preds = %dec_label_pc_11e2c
  %v1_11e64 = add i32 %v0_11e2c, 24
  %v2_11e64 = inttoptr i32 %v1_11e64 to i32*
  %v3_11e64 = load i32, i32* %v2_11e64, align 4
  store i32 %v3_11e64, i32* %ip.global-to-local, align 4
  %v0_11e68 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_11e68, i32* @r5, align 4
  store i32 0, i32* @r7, align 4
  store i32 -3, i32* %sb.global-to-local, align 4
  store i32 -4, i32* %sl.global-to-local, align 4
  %v1_11e78 = add i32 %v0_11e2c, 29
  store i32 %v1_11e78, i32* @r4, align 4
  %v3_11e7c710 = icmp eq i32 %v3_11e64, 0
  store i1 %v3_11e7c710, i1* %cpsr_c.global-to-local, align 1
  store i1 %v3_11e7c710, i1* %cpsr_z.global-to-local, align 1
  %v6_11e80717 = icmp sgt i32 %v3_11e64, 0
  br i1 %v6_11e80717, label %dec_label_pc_11e84.preheader, label %dec_label_pc_11f34.thread

dec_label_pc_11f34.thread:                        ; preds = %dec_label_pc_11e64
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11dac.loopexit

dec_label_pc_11e7c.loopexit:                      ; preds = %dec_label_pc_11e9c
  %v2_11ea4 = add i32 %v1_11ea4, 2
  store i32 %v2_11ea4, i32* @r5, align 4
  %v2_11ea8 = add i32 %v1_11ea8, 2
  store i32 %v2_11ea8, i32* @r4, align 4
  %v2_11eac = add i32 %v1_11eac, 2
  store i32 %v2_11eac, i32* @r7, align 4
  %v3_11e7c = icmp uge i32 %v2_11eac, %v1_11e7c
  store i1 %v3_11e7c, i1* %cpsr_c.global-to-local, align 1
  %v9_11e7c = icmp eq i32 %v2_11eac, %v1_11e7c
  store i1 %v9_11e7c, i1* %cpsr_z.global-to-local, align 1
  %v6_11e80 = icmp slt i32 %v2_11eac, %v1_11e7c
  br i1 %v6_11e80, label %dec_label_pc_11e84.preheader, label %dec_label_pc_11f24

dec_label_pc_11e84.preheader:                     ; preds = %dec_label_pc_11e64, %dec_label_pc_11e7c.loopexit
  %v6_11f2c1109 = phi i32 [ %v6_11f2c1110, %dec_label_pc_11e7c.loopexit ], [ %v0_11e2c, %dec_label_pc_11e64 ]
  %v1_11eac1099 = phi i32 [ %v2_11eac, %dec_label_pc_11e7c.loopexit ], [ 0, %dec_label_pc_11e64 ]
  %v1_11ea41097 = phi i32 [ %v2_11ea4, %dec_label_pc_11e7c.loopexit ], [ %v0_11e68, %dec_label_pc_11e64 ]
  %v1_11e901095 = phi i32 [ %v1_11e7c, %dec_label_pc_11e7c.loopexit ], [ %v3_11e64, %dec_label_pc_11e64 ]
  %v0_11e841093 = phi i32 [ %v2_11ea8, %dec_label_pc_11e7c.loopexit ], [ %v1_11e78, %dec_label_pc_11e64 ]
  br label %dec_label_pc_11e84

dec_label_pc_11e84:                               ; preds = %dec_label_pc_11e84.preheader, %dec_label_pc_11f04
  %v6_11f2c1110 = phi i32 [ %v6_11f2c1109, %dec_label_pc_11e84.preheader ], [ %v0_11f0c, %dec_label_pc_11f04 ]
  %v1_11eac = phi i32 [ %v1_11eac1099, %dec_label_pc_11e84.preheader ], [ %v1_11f10, %dec_label_pc_11f04 ]
  %v1_11ea4 = phi i32 [ %v1_11ea41097, %dec_label_pc_11e84.preheader ], [ %v1_11f18, %dec_label_pc_11f04 ]
  %v1_11e7c = phi i32 [ %v1_11e901095, %dec_label_pc_11e84.preheader ], [ %v3_11f0c, %dec_label_pc_11f04 ]
  %v1_11ea8 = phi i32 [ %v0_11e841093, %dec_label_pc_11e84.preheader ], [ %v1_11f1c, %dec_label_pc_11f04 ]
  %v1_11e84 = add i32 %v1_11ea8, -1
  %v2_11e84 = inttoptr i32 %v1_11e84 to i8*
  %v3_11e84 = load i8, i8* %v2_11e84, align 1
  %v4_11e84 = zext i8 %v3_11e84 to i32
  store i32 %v4_11e84, i32* %r3.global-to-local, align 4
  %v2_11e88 = icmp eq i8 %v3_11e84, -1
  store i1 %v2_11e88, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_11e88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11e88, label %dec_label_pc_11e90, label %dec_label_pc_11f24

dec_label_pc_11e90:                               ; preds = %dec_label_pc_11e84
  %v0_11e90 = load i32, i32* %r8.global-to-local, align 4
  %v2_11e90 = add i32 %v0_11e90, %v1_11e7c
  store i32 %v2_11e90, i32* %r2.global-to-local, align 4
  %v3_11e94 = icmp uge i32 %v2_11e90, %v1_11ea8
  store i1 %v3_11e94, i1* %cpsr_c.global-to-local, align 1
  %v9_11e94 = icmp eq i32 %v2_11e90, %v1_11ea8
  store i1 %v9_11e94, i1* %cpsr_z.global-to-local, align 1
  %v2_11e98 = xor i1 %v3_11e94, true
  %v3_11e98 = or i1 %v9_11e94, %v2_11e98
  br i1 %v3_11e98, label %dec_label_pc_11f24, label %dec_label_pc_11e9c

dec_label_pc_11e9c:                               ; preds = %dec_label_pc_11e90
  %v1_11e9c = inttoptr i32 %v1_11ea8 to i8*
  %v2_11e9c = load i8, i8* %v1_11e9c, align 1
  %v3_11e9c = zext i8 %v2_11e9c to i32
  store i32 %v3_11e9c, i32* %r3.global-to-local, align 4
  %v2_11ea0 = icmp eq i8 %v2_11e9c, -1
  store i1 %v2_11ea0, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_11ea0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11ea0, label %dec_label_pc_11e7c.loopexit, label %dec_label_pc_11eb4

dec_label_pc_11eb4:                               ; preds = %dec_label_pc_11e9c
  %v2_11eb4 = icmp ugt i8 %v2_11e9c, -4
  store i1 %v2_11eb4, i1* %cpsr_c.global-to-local, align 1
  %v7_11eb4 = icmp eq i8 %v2_11e9c, -3
  store i1 %v7_11eb4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11eb4, label %dec_label_pc_12538, label %dec_label_pc_11ebc

dec_label_pc_11ebc:                               ; preds = %dec_label_pc_11eb4
  %v1_11ebc = add i32 %v1_11ea4, 2
  store i32 %v1_11ebc, i32* %r3.global-to-local, align 4
  %v3_11ec0 = icmp uge i32 %v2_11e90, %v1_11ebc
  store i1 %v3_11ec0, i1* %cpsr_c.global-to-local, align 1
  %v9_11ec0 = icmp eq i32 %v2_11e90, %v1_11ebc
  store i1 %v9_11ec0, i1* %cpsr_z.global-to-local, align 1
  %v2_11ec4 = xor i1 %v3_11ec0, true
  %v3_11ec4 = or i1 %v9_11ec0, %v2_11ec4
  br i1 %v3_11ec4, label %dec_label_pc_11f24, label %dec_label_pc_11ec8

dec_label_pc_11ec8:                               ; preds = %bb1930, %dec_label_pc_12590, %bb1929, %dec_label_pc_11ebc
  %v0_11ec8 = load i32, i32* @r4, align 4
  %v1_11ec8 = inttoptr i32 %v0_11ec8 to i8*
  %v2_11ec8 = load i8, i8* %v1_11ec8, align 1
  %v3_11ec8 = zext i8 %v2_11ec8 to i32
  store i32 %v3_11ec8, i32* %r3.global-to-local, align 4
  %v2_11ecc = icmp ugt i8 %v2_11ec8, -4
  store i1 %v2_11ecc, i1* %cpsr_c.global-to-local, align 1
  %v7_11ecc = icmp eq i8 %v2_11ec8, -3
  store i1 %v7_11ecc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11ecc, label %bb1892, label %dec_label_pc_11ed8

bb1892:                                           ; preds = %dec_label_pc_11ec8
  %v1_11ed0 = load i32, i32* %sl.global-to-local, align 4
  %v2_11ed0 = trunc i32 %v1_11ed0 to i8
  store i8 %v2_11ed0, i8* %v1_11ec8, align 1
  %v0_11ed4.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11ed4.pr, label %bb1894, label %.dec_label_pc_11ed8_crit_edge

.dec_label_pc_11ed8_crit_edge:                    ; preds = %bb1892
  %v0_11ed8.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11ed8

dec_label_pc_11ed8:                               ; preds = %.dec_label_pc_11ed8_crit_edge, %dec_label_pc_11ec8
  %v0_11ed8 = phi i32 [ %v0_11ed8.pre, %.dec_label_pc_11ed8_crit_edge ], [ %v3_11ec8, %dec_label_pc_11ec8 ]
  %v2_11ed8 = icmp ugt i32 %v0_11ed8, 250
  store i1 %v2_11ed8, i1* %cpsr_c.global-to-local, align 1
  %v7_11ed8 = icmp eq i32 %v0_11ed8, 251
  store i1 %v7_11ed8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11ed8, label %bb1893, label %bb1894

bb1893:                                           ; preds = %dec_label_pc_11ed8
  %v1_11edc = load i32, i32* %sb.global-to-local, align 4
  %v2_11edc = trunc i32 %v1_11edc to i8
  %v3_11edc = load i32, i32* @r4, align 4
  %v4_11edc = inttoptr i32 %v3_11edc to i8*
  store i8 %v2_11edc, i8* %v4_11edc, align 1
  br label %bb1894

bb1894:                                           ; preds = %bb1892, %dec_label_pc_11ed8, %bb1893
  %v0_11ee0 = load i32, i32* @r4, align 4
  %v1_11ee0 = add i32 %v0_11ee0, 1
  %v2_11ee0 = inttoptr i32 %v1_11ee0 to i8*
  %v3_11ee0 = load i8, i8* %v2_11ee0, align 1
  %v4_11ee0 = zext i8 %v3_11ee0 to i32
  store i32 %v4_11ee0, i32* %r3.global-to-local, align 4
  %v2_11ee4 = icmp ugt i8 %v3_11ee0, -4
  store i1 %v2_11ee4, i1* %cpsr_c.global-to-local, align 1
  %v7_11ee4 = icmp eq i8 %v3_11ee0, -3
  store i1 %v7_11ee4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11ee4, label %bb1895, label %dec_label_pc_11ef0

bb1895:                                           ; preds = %bb1894
  %v1_11ee8 = load i32, i32* %sl.global-to-local, align 4
  %v2_11ee8 = trunc i32 %v1_11ee8 to i8
  store i8 %v2_11ee8, i8* %v2_11ee0, align 1
  %v0_11eec.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11eec.pr, label %bb1897, label %.dec_label_pc_11ef0_crit_edge

.dec_label_pc_11ef0_crit_edge:                    ; preds = %bb1895
  %v0_11ef0.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11ef0

dec_label_pc_11ef0:                               ; preds = %.dec_label_pc_11ef0_crit_edge, %bb1894
  %v0_11ef0 = phi i32 [ %v0_11ef0.pre, %.dec_label_pc_11ef0_crit_edge ], [ %v4_11ee0, %bb1894 ]
  %v2_11ef0 = icmp ugt i32 %v0_11ef0, 250
  store i1 %v2_11ef0, i1* %cpsr_c.global-to-local, align 1
  %v7_11ef0 = icmp eq i32 %v0_11ef0, 251
  store i1 %v7_11ef0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11ef0, label %bb1896, label %bb1897

bb1896:                                           ; preds = %dec_label_pc_11ef0
  %v1_11ef4 = load i32, i32* %sb.global-to-local, align 4
  %v2_11ef4 = trunc i32 %v1_11ef4 to i8
  %v3_11ef4 = load i32, i32* @r4, align 4
  %v4_11ef4 = add i32 %v3_11ef4, 1
  %v5_11ef4 = inttoptr i32 %v4_11ef4 to i8*
  store i8 %v2_11ef4, i8* %v5_11ef4, align 1
  br label %bb1897

bb1897:                                           ; preds = %bb1895, %dec_label_pc_11ef0, %bb1896
  %v0_11ef8 = load i32, i32* @r6, align 4
  %v1_11ef8 = add i32 %v0_11ef8, 4
  %v2_11ef8 = inttoptr i32 %v1_11ef8 to i32*
  %v3_11ef8 = load i32, i32* %v2_11ef8, align 4
  store i32 %v3_11ef8, i32* %r0.global-to-local, align 4
  %v0_11efc = load i32, i32* @r5, align 4
  br label %dec_label_pc_11f04

dec_label_pc_11f04:                               ; preds = %dec_label_pc_12648, %bb1897
  %storemerge7 = phi i32 [ %v2_12554, %dec_label_pc_12648 ], [ %v0_11efc, %bb1897 ]
  %storemerge = phi i32 [ 9, %dec_label_pc_12648 ], [ 3, %bb1897 ]
  store i32 %storemerge7, i32* %r1.global-to-local, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_11f08 = inttoptr i32 %storemerge7 to i32*
  %v5_11f08 = call i32 @send(i32 16384, i32* %v4_11f08, i32 %storemerge, i32 16384)
  store i32 %v5_11f08, i32* %r0.global-to-local, align 4
  %v0_11f0c = load i32, i32* @r6, align 4
  %v1_11f0c = add i32 %v0_11f0c, 24
  %v2_11f0c = inttoptr i32 %v1_11f0c to i32*
  %v3_11f0c = load i32, i32* %v2_11f0c, align 4
  store i32 %v3_11f0c, i32* %ip.global-to-local, align 4
  %v0_11f10 = load i32, i32* @r7, align 4
  %v1_11f10 = add i32 %v0_11f10, 3
  store i32 %v1_11f10, i32* @r7, align 4
  %v3_11f14 = icmp uge i32 %v1_11f10, %v3_11f0c
  store i1 %v3_11f14, i1* %cpsr_c.global-to-local, align 1
  %v9_11f14 = icmp eq i32 %v1_11f10, %v3_11f0c
  store i1 %v9_11f14, i1* %cpsr_z.global-to-local, align 1
  %v0_11f18 = load i32, i32* @r5, align 4
  %v1_11f18 = add i32 %v0_11f18, 3
  store i32 %v1_11f18, i32* @r5, align 4
  %v0_11f1c = load i32, i32* @r4, align 4
  %v1_11f1c = add i32 %v0_11f1c, 3
  store i32 %v1_11f1c, i32* @r4, align 4
  %v5_11f20 = icmp slt i32 %v1_11f10, %v3_11f0c
  br i1 %v5_11f20, label %dec_label_pc_11e84, label %dec_label_pc_11f24

dec_label_pc_11f24:                               ; preds = %dec_label_pc_11e7c.loopexit, %dec_label_pc_11e84, %dec_label_pc_11f04, %dec_label_pc_11ebc, %dec_label_pc_11e90, %dec_label_pc_12538.dec_label_pc_11f24.loopexit_crit_edge
  %v6_11f2c = phi i32 [ %v0_12560, %dec_label_pc_12538.dec_label_pc_11f24.loopexit_crit_edge ], [ %v6_11f2c1110, %dec_label_pc_11e84 ], [ %v0_11f0c, %dec_label_pc_11f04 ], [ %v6_11f2c1110, %dec_label_pc_11ebc ], [ %v6_11f2c1110, %dec_label_pc_11e90 ], [ %v6_11f2c1110, %dec_label_pc_11e7c.loopexit ]
  %v0_11f24 = phi i32 [ %v0_11f24.pre.pre, %dec_label_pc_12538.dec_label_pc_11f24.loopexit_crit_edge ], [ %v1_11eac, %dec_label_pc_11e84 ], [ %v1_11f10, %dec_label_pc_11f04 ], [ %v1_11eac, %dec_label_pc_11ebc ], [ %v1_11eac, %dec_label_pc_11e90 ], [ %v2_11eac, %dec_label_pc_11e7c.loopexit ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11f24 = icmp eq i32 %v0_11f24, 0
  store i1 %v2_11f24, i1* %cpsr_z.global-to-local, align 1
  %tmp1898 = icmp slt i32 %v0_11f24, 1
  br i1 %tmp1898, label %dec_label_pc_11f34, label %.thread1150

.thread1150:                                      ; preds = %dec_label_pc_11f24
  store i32 3, i32* %r2.global-to-local, align 4
  %v7_11f2c = add i32 %v6_11f2c, 12
  %v8_11f2c = inttoptr i32 %v7_11f2c to i32*
  store i32 3, i32* %v8_11f2c, align 4
  br label %dec_label_pc_1244c

dec_label_pc_11f34:                               ; preds = %dec_label_pc_11f24, %dec_label_pc_124d8, %dec_label_pc_1272c, %dec_label_pc_1236c, %dec_label_pc_122a4, %dec_label_pc_121dc, %dec_label_pc_12114, %dec_label_pc_12068, %dec_label_pc_11fbc
  %v0_11f34 = phi i32 [ %v1_124cc2153, %dec_label_pc_124d8 ], [ %v0_12724, %dec_label_pc_1272c ], [ %v1_123602149, %dec_label_pc_1236c ], [ %v1_122982145, %dec_label_pc_122a4 ], [ %v1_121d02141, %dec_label_pc_121dc ], [ %v1_121082137, %dec_label_pc_12114 ], [ %v0_12068, %dec_label_pc_12068 ], [ %v0_11fbc, %dec_label_pc_11fbc ], [ %v0_11f24, %dec_label_pc_11f24 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11f34 = icmp eq i32 %v0_11f34, 0
  store i1 %v2_11f34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11f34, label %dec_label_pc_11dac.loopexit, label %dec_label_pc_11f3c

dec_label_pc_11f3c:                               ; preds = %dec_label_pc_11f34
  %v0_11f3c = load i32, i32* @r6, align 4
  %v1_11f3c = add i32 %v0_11f3c, 24
  %v2_11f3c = inttoptr i32 %v1_11f3c to i32*
  %v3_11f3c = load i32, i32* %v2_11f3c, align 4
  store i32 %v3_11f3c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1244c

dec_label_pc_11f44:                               ; preds = %dec_label_pc_11e2c
  %v1_11f44 = add i32 %v0_11e2c, 24
  %v2_11f44 = inttoptr i32 %v1_11f44 to i32*
  %v3_11f44 = load i32, i32* %v2_11f44, align 4
  store i32 %v3_11f44, i32* %r3.global-to-local, align 4
  %v1_11f48 = add i32 %v3_11f44, -1
  store i32 %v1_11f48, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11f4c = icmp eq i32 %v1_11f48, 0
  store i1 %v2_11f4c, i1* %cpsr_z.global-to-local, align 1
  %tmp1899 = icmp slt i32 %v1_11f48, 1
  br i1 %tmp1899, label %dec_label_pc_11d0c, label %dec_label_pc_11f54

dec_label_pc_11f54:                               ; preds = %dec_label_pc_11f44
  %v2_11f54 = add i32 %v1_11f48, %v0_11e2c
  store i32 %v2_11f54, i32* %r3.global-to-local, align 4
  %v1_11f58 = add i32 %v2_11f54, 28
  %v2_11f58 = inttoptr i32 %v1_11f58 to i8*
  %v3_11f58 = load i8, i8* %v2_11f58, align 1
  %v4_11f58 = zext i8 %v3_11f58 to i32
  store i32 %v4_11f58, i32* %r3.global-to-local, align 4
  %v2_11f5c = icmp ugt i8 %v3_11f58, 61
  store i1 %v2_11f5c, i1* %cpsr_c.global-to-local, align 1
  %v7_11f5c = icmp eq i8 %v3_11f58, 62
  store i1 %v7_11f5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11f5c, label %dec_label_pc_11fa0.thread, label %bb1900

bb1900:                                           ; preds = %dec_label_pc_11f54
  %v3_11f60 = icmp ugt i8 %v3_11f58, 57
  store i1 %v3_11f60, i1* %cpsr_c.global-to-local, align 1
  %v8_11f60 = icmp eq i8 %v3_11f58, 58
  store i1 %v8_11f60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11f60, label %dec_label_pc_11fa0.thread, label %dec_label_pc_11f98

dec_label_pc_11f6c:                               ; preds = %dec_label_pc_11f98
  %v2_11f6c = icmp ugt i32 %v0_11f74, 34
  store i1 %v2_11f6c, i1* %cpsr_c.global-to-local, align 1
  %v7_11f6c = icmp eq i32 %v0_11f74, 35
  store i1 %v7_11f6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11f6c, label %dec_label_pc_11fa0, label %dec_label_pc_11f74

dec_label_pc_11f74:                               ; preds = %dec_label_pc_11f6c
  %v2_11f74 = icmp ugt i32 %v0_11f74, 36
  store i1 %v2_11f74, i1* %cpsr_c.global-to-local, align 1
  %v7_11f74 = icmp eq i32 %v0_11f74, 37
  store i1 %v7_11f74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11f74, label %dec_label_pc_11fa0, label %dec_label_pc_11f7c

dec_label_pc_11f7c:                               ; preds = %dec_label_pc_11f74
  %v1_11f7c = add i32 %v0_11f7c, -1
  store i32 %v1_11f7c, i32* %r0.global-to-local, align 4
  %v2_11f7c = icmp ne i32 %v0_11f7c, 0
  store i1 %v2_11f7c, i1* %cpsr_c.global-to-local, align 1
  %v7_11f7c = icmp eq i32 %v0_11f7c, 1
  store i1 %v7_11f7c, i1* %cpsr_z.global-to-local, align 1
  %v2_11f80 = add i32 %v1_11f7c, %v0_11e2c
  store i32 %v2_11f80, i32* %r3.global-to-local, align 4
  br i1 %v7_11f7c, label %dec_label_pc_11d0c, label %dec_label_pc_11f88

dec_label_pc_11f88:                               ; preds = %dec_label_pc_11f7c
  %v1_11f88 = add i32 %v2_11f80, 28
  %v2_11f88 = inttoptr i32 %v1_11f88 to i8*
  %v3_11f88 = load i8, i8* %v2_11f88, align 1
  %v4_11f88 = zext i8 %v3_11f88 to i32
  store i32 %v4_11f88, i32* %r3.global-to-local, align 4
  %v2_11f8c = icmp ugt i8 %v3_11f88, 61
  store i1 %v2_11f8c, i1* %cpsr_c.global-to-local, align 1
  %v7_11f8c = icmp eq i8 %v3_11f88, 62
  store i1 %v7_11f8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11f8c, label %dec_label_pc_11fa0, label %bb1901

bb1901:                                           ; preds = %dec_label_pc_11f88
  %v3_11f90 = icmp ugt i8 %v3_11f88, 57
  store i1 %v3_11f90, i1* %cpsr_c.global-to-local, align 1
  %v8_11f90 = icmp eq i8 %v3_11f88, 58
  store i1 %v8_11f90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11f90, label %dec_label_pc_11fa0, label %dec_label_pc_11f98

dec_label_pc_11f98:                               ; preds = %bb1900, %bb1901
  %v0_11f7c = phi i32 [ %v1_11f7c, %bb1901 ], [ %v1_11f48, %bb1900 ]
  %v0_11f74 = phi i32 [ %v4_11f88, %bb1901 ], [ %v4_11f58, %bb1900 ]
  %v2_11f98 = icmp ugt i32 %v0_11f74, 35
  store i1 %v2_11f98, i1* %cpsr_c.global-to-local, align 1
  %v7_11f98 = icmp eq i32 %v0_11f74, 36
  store i1 %v7_11f98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11f98, label %dec_label_pc_11fa0, label %dec_label_pc_11f6c

dec_label_pc_11fa0.thread:                        ; preds = %dec_label_pc_11f54, %bb1900
  store i32 %v3_11f44, i32* @r7, align 4
  %v2_11fa42129 = icmp eq i32 %v3_11f44, -1
  store i1 %v2_11fa42129, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11fac

dec_label_pc_11fa0:                               ; preds = %dec_label_pc_11f88, %dec_label_pc_11f98, %bb1901, %dec_label_pc_11f74, %dec_label_pc_11f6c
  %v0_11fa0 = phi i32 [ %v0_11f7c, %dec_label_pc_11f6c ], [ %v0_11f7c, %dec_label_pc_11f74 ], [ %v1_11f7c, %bb1901 ], [ %v0_11f7c, %dec_label_pc_11f98 ], [ %v1_11f7c, %dec_label_pc_11f88 ]
  %v1_11fa0 = add i32 %v0_11fa0, 1
  store i32 %v1_11fa0, i32* @r7, align 4
  %v2_11fa4 = icmp eq i32 %v1_11fa0, -1
  store i1 %v2_11fa4, i1* %cpsr_c.global-to-local, align 1
  %v7_11fa4 = icmp eq i32 %v0_11fa0, -2
  store i1 %v7_11fa4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11fa4, label %dec_label_pc_11d0c, label %dec_label_pc_11fac

dec_label_pc_11fac:                               ; preds = %dec_label_pc_11fa0.thread, %dec_label_pc_11fa0
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_11fb0 = call i32 @function_12968(i32 26)
  store i32 27, i32* %r0.global-to-local, align 4
  %v1_11fb8 = call i32 @function_12968(i32 27)
  store i32 %v1_11fb8, i32* %r0.global-to-local, align 4
  %v0_11fbc.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_11fbc

dec_label_pc_11fbc:                               ; preds = %dec_label_pc_11d94, %dec_label_pc_11fac
  %v0_11fbc = phi i32 [ %v0_11da4, %dec_label_pc_11d94 ], [ %v0_11fbc.pre, %dec_label_pc_11fac ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11fbc = icmp eq i32 %v0_11fbc, 0
  store i1 %v2_11fbc, i1* %cpsr_z.global-to-local, align 1
  %tmp1902 = icmp slt i32 %v0_11fbc, 1
  br i1 %tmp1902, label %dec_label_pc_11f34, label %dec_label_pc_11fc4

dec_label_pc_11fc4:                               ; preds = %dec_label_pc_11fbc
  %v0_11fc4 = load i32, i32* @r6, align 4
  %v1_11fc4 = inttoptr i32 %v0_11fc4 to i32*
  %v2_11fc4 = load i32, i32* %v1_11fc4, align 4
  store i32 %v2_11fc4, i32* %r3.global-to-local, align 4
  %v1_11fc8 = add i32 %v0_11fc4, 4
  %v2_11fc8 = inttoptr i32 %v1_11fc8 to i32*
  %v3_11fc8 = load i32, i32* %v2_11fc8, align 4
  store i32 %v3_11fc8, i32* %r0.global-to-local, align 4
  %v1_11fcc = add i32 %v2_11fc4, 12
  %v2_11fcc = inttoptr i32 %v1_11fcc to i8*
  %v3_11fcc = load i8, i8* %v2_11fcc, align 1
  %v4_11fcc = zext i8 %v3_11fcc to i32
  store i32 %v4_11fcc, i32* %r2.global-to-local, align 4
  %v1_11fd0 = inttoptr i32 %v2_11fc4 to i32*
  %v2_11fd0 = load i32, i32* %v1_11fd0, align 4
  store i32 %v2_11fd0, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_11fd8 = inttoptr i32 %v2_11fd0 to i32*
  %v5_11fd8 = call i32 @send(i32 %v3_11fc8, i32* %v4_11fd8, i32 %v4_11fcc, i32 16384)
  store i32 %v5_11fd8, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_11fe0 = load i32, i32* @r6, align 4
  %v1_11fe0 = add i32 %v0_11fe0, 4
  %v2_11fe0 = inttoptr i32 %v1_11fe0 to i32*
  %v3_11fe0 = load i32, i32* %v2_11fe0, align 4
  store i32 %v3_11fe0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_13938.283 to i32), i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_11fec = call i32 @send(i32 %v3_11fe0, i32* bitcast ([3 x i8]* @global_var_13938.283 to i32*), i32 2, i32 16384)
  store i32 %v5_11fec, i32* %r0.global-to-local, align 4
  %v0_11ff0 = load i32, i32* @r6, align 4
  %v1_11ff0 = add i32 %v0_11ff0, 24
  %v2_11ff0 = inttoptr i32 %v1_11ff0 to i32*
  %v3_11ff0 = load i32, i32* %v2_11ff0, align 4
  store i32 %v3_11ff0, i32* %ip.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v2_11ff8 = add i32 %v0_11ff0, 12
  %v3_11ff8 = inttoptr i32 %v2_11ff8 to i32*
  store i32 4, i32* %v3_11ff8, align 4
  br label %dec_label_pc_1244c

dec_label_pc_12000:                               ; preds = %dec_label_pc_11e2c
  %v1_12000 = add i32 %v0_11e2c, 24
  %v2_12000 = inttoptr i32 %v1_12000 to i32*
  %v3_12000 = load i32, i32* %v2_12000, align 4
  store i32 %v3_12000, i32* %r3.global-to-local, align 4
  %v1_12004 = add i32 %v3_12000, -1
  store i32 %v1_12004, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_12008 = icmp eq i32 %v1_12004, 0
  store i1 %v2_12008, i1* %cpsr_z.global-to-local, align 1
  %tmp1903 = icmp slt i32 %v1_12004, 1
  br i1 %tmp1903, label %dec_label_pc_1259c, label %dec_label_pc_12010

dec_label_pc_12010:                               ; preds = %dec_label_pc_12000
  %v2_12010 = add i32 %v1_12004, %v0_11e2c
  store i32 %v2_12010, i32* %r3.global-to-local, align 4
  %v1_12014 = add i32 %v2_12010, 28
  %v2_12014 = inttoptr i32 %v1_12014 to i8*
  %v3_12014 = load i8, i8* %v2_12014, align 1
  %v4_12014 = zext i8 %v3_12014 to i32
  store i32 %v4_12014, i32* %r3.global-to-local, align 4
  %v2_12018 = icmp ugt i8 %v3_12014, 61
  store i1 %v2_12018, i1* %cpsr_c.global-to-local, align 1
  %v7_12018 = icmp eq i8 %v3_12014, 62
  store i1 %v7_12018, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12018, label %dec_label_pc_12054.thread, label %bb1904

bb1904:                                           ; preds = %dec_label_pc_12010
  %v3_1201c = icmp ugt i8 %v3_12014, 57
  store i1 %v3_1201c, i1* %cpsr_c.global-to-local, align 1
  %v8_1201c = icmp eq i8 %v3_12014, 58
  store i1 %v8_1201c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1201c, label %dec_label_pc_12054.thread, label %dec_label_pc_1204c

dec_label_pc_12028:                               ; preds = %dec_label_pc_1204c
  %v2_12028 = icmp ugt i32 %v0_12028, 34
  store i1 %v2_12028, i1* %cpsr_c.global-to-local, align 1
  %v7_12028 = icmp eq i32 %v0_12028, 35
  store i1 %v7_12028, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12028, label %dec_label_pc_12054, label %dec_label_pc_12030

dec_label_pc_12030:                               ; preds = %dec_label_pc_12028
  %v1_12030 = add i32 %v0_12030, -1
  store i32 %v1_12030, i32* %r0.global-to-local, align 4
  %v2_12030 = icmp ne i32 %v0_12030, 0
  store i1 %v2_12030, i1* %cpsr_c.global-to-local, align 1
  %v7_12030 = icmp eq i32 %v0_12030, 1
  store i1 %v7_12030, i1* %cpsr_z.global-to-local, align 1
  %v2_12034 = add i32 %v1_12030, %v0_11e2c
  store i32 %v2_12034, i32* %r3.global-to-local, align 4
  br i1 %v7_12030, label %dec_label_pc_1259c, label %dec_label_pc_1203c

dec_label_pc_1203c:                               ; preds = %dec_label_pc_12030
  %v1_1203c = add i32 %v2_12034, 28
  %v2_1203c = inttoptr i32 %v1_1203c to i8*
  %v3_1203c = load i8, i8* %v2_1203c, align 1
  %v4_1203c = zext i8 %v3_1203c to i32
  store i32 %v4_1203c, i32* %r3.global-to-local, align 4
  %v2_12040 = icmp ugt i8 %v3_1203c, 61
  store i1 %v2_12040, i1* %cpsr_c.global-to-local, align 1
  %v7_12040 = icmp eq i8 %v3_1203c, 62
  store i1 %v7_12040, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12040, label %dec_label_pc_12054, label %bb1905

bb1905:                                           ; preds = %dec_label_pc_1203c
  %v3_12044 = icmp ugt i8 %v3_1203c, 57
  store i1 %v3_12044, i1* %cpsr_c.global-to-local, align 1
  %v8_12044 = icmp eq i8 %v3_1203c, 58
  store i1 %v8_12044, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_12044, label %dec_label_pc_12054, label %dec_label_pc_1204c

dec_label_pc_1204c:                               ; preds = %bb1904, %bb1905
  %v0_12030 = phi i32 [ %v1_12030, %bb1905 ], [ %v1_12004, %bb1904 ]
  %v0_12028 = phi i32 [ %v4_1203c, %bb1905 ], [ %v4_12014, %bb1904 ]
  %v2_1204c = icmp ugt i32 %v0_12028, 35
  store i1 %v2_1204c, i1* %cpsr_c.global-to-local, align 1
  %v7_1204c = icmp eq i32 %v0_12028, 36
  store i1 %v7_1204c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1204c, label %dec_label_pc_12054, label %dec_label_pc_12028

dec_label_pc_12054.thread:                        ; preds = %dec_label_pc_12010, %bb1904
  store i32 %v3_12000, i32* @r7, align 4
  %v2_120582132 = icmp eq i32 %v3_12000, -1
  store i1 %v2_120582132, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_12060

dec_label_pc_12054:                               ; preds = %dec_label_pc_1203c, %dec_label_pc_1204c, %bb1905, %dec_label_pc_12028
  %v0_12054 = phi i32 [ %v0_12030, %dec_label_pc_12028 ], [ %v1_12030, %bb1905 ], [ %v0_12030, %dec_label_pc_1204c ], [ %v1_12030, %dec_label_pc_1203c ]
  %v1_12054 = add i32 %v0_12054, 1
  store i32 %v1_12054, i32* @r7, align 4
  %v2_12058 = icmp eq i32 %v1_12054, -1
  store i1 %v2_12058, i1* %cpsr_c.global-to-local, align 1
  %v7_12058 = icmp eq i32 %v0_12054, -2
  store i1 %v7_12058, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12058, label %dec_label_pc_1259c, label %dec_label_pc_12060

dec_label_pc_12060:                               ; preds = %dec_label_pc_12054.thread, %dec_label_pc_12054
  store i32 25, i32* %r0.global-to-local, align 4
  %v1_12064 = call i32 @function_12968(i32 25)
  store i32 %v1_12064, i32* %r0.global-to-local, align 4
  %v0_12068.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_12068

dec_label_pc_12068:                               ; preds = %dec_label_pc_125dc, %dec_label_pc_12060
  %v0_12068 = phi i32 [ %v0_125e4, %dec_label_pc_125dc ], [ %v0_12068.pre, %dec_label_pc_12060 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_12068 = icmp eq i32 %v0_12068, 0
  store i1 %v2_12068, i1* %cpsr_z.global-to-local, align 1
  %tmp1906 = icmp slt i32 %v0_12068, 1
  br i1 %tmp1906, label %dec_label_pc_11f34, label %dec_label_pc_12070

dec_label_pc_12070:                               ; preds = %dec_label_pc_12068
  %v0_12070 = load i32, i32* @r6, align 4
  %v1_12070 = inttoptr i32 %v0_12070 to i32*
  %v2_12070 = load i32, i32* %v1_12070, align 4
  store i32 %v2_12070, i32* %r3.global-to-local, align 4
  %v1_12074 = add i32 %v0_12070, 4
  %v2_12074 = inttoptr i32 %v1_12074 to i32*
  %v3_12074 = load i32, i32* %v2_12074, align 4
  store i32 %v3_12074, i32* %r0.global-to-local, align 4
  %v1_12078 = add i32 %v2_12070, 13
  %v2_12078 = inttoptr i32 %v1_12078 to i8*
  %v3_12078 = load i8, i8* %v2_12078, align 1
  %v4_12078 = zext i8 %v3_12078 to i32
  store i32 %v4_12078, i32* %r2.global-to-local, align 4
  %v1_1207c = add i32 %v2_12070, 4
  %v2_1207c = inttoptr i32 %v1_1207c to i32*
  %v3_1207c = load i32, i32* %v2_1207c, align 4
  store i32 %v3_1207c, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_12084 = inttoptr i32 %v3_1207c to i32*
  %v5_12084 = call i32 @send(i32 %v3_12074, i32* %v4_12084, i32 %v4_12078, i32 16384)
  store i32 %v5_12084, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_1208c = load i32, i32* @r6, align 4
  %v1_1208c = add i32 %v0_1208c, 4
  %v2_1208c = inttoptr i32 %v1_1208c to i32*
  %v3_1208c = load i32, i32* %v2_1208c, align 4
  store i32 %v3_1208c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_13938.283 to i32), i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_12098 = call i32 @send(i32 %v3_1208c, i32* bitcast ([3 x i8]* @global_var_13938.283 to i32*), i32 2, i32 16384)
  store i32 %v5_12098, i32* %r0.global-to-local, align 4
  %v0_1209c = load i32, i32* @r6, align 4
  %v1_1209c = add i32 %v0_1209c, 24
  %v2_1209c = inttoptr i32 %v1_1209c to i32*
  %v3_1209c = load i32, i32* %v2_1209c, align 4
  store i32 %v3_1209c, i32* %ip.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v2_120a4 = add i32 %v0_1209c, 12
  %v3_120a4 = inttoptr i32 %v2_120a4 to i32*
  store i32 5, i32* %v3_120a4, align 4
  br label %dec_label_pc_1244c

dec_label_pc_120ac:                               ; preds = %dec_label_pc_11e2c
  %v1_120ac = add i32 %v0_11e2c, 24
  %v2_120ac = inttoptr i32 %v1_120ac to i32*
  %v3_120ac = load i32, i32* %v2_120ac, align 4
  store i32 %v3_120ac, i32* %ip.global-to-local, align 4
  %v1_120b0 = add i32 %v3_120ac, -1
  store i32 %v1_120b0, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_120b4 = icmp eq i32 %v1_120b0, 0
  store i1 %v2_120b4, i1* %cpsr_z.global-to-local, align 1
  %tmp1907 = icmp slt i32 %v1_120b0, 1
  br i1 %tmp1907, label %dec_label_pc_11db0.backedge.thread, label %dec_label_pc_120bc

dec_label_pc_120bc:                               ; preds = %dec_label_pc_120ac
  %v2_120bc = add i32 %v1_120b0, %v0_11e2c
  store i32 %v2_120bc, i32* %r3.global-to-local, align 4
  %v1_120c0 = add i32 %v2_120bc, 28
  %v2_120c0 = inttoptr i32 %v1_120c0 to i8*
  %v3_120c0 = load i8, i8* %v2_120c0, align 1
  %v4_120c0 = zext i8 %v3_120c0 to i32
  store i32 %v4_120c0, i32* %r3.global-to-local, align 4
  %v2_120c4 = icmp ugt i8 %v3_120c0, 57
  store i1 %v2_120c4, i1* %cpsr_c.global-to-local, align 1
  %v7_120c4 = icmp eq i8 %v3_120c0, 58
  store i1 %v7_120c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_120c4, label %dec_label_pc_12108.thread, label %bb1908

dec_label_pc_12108.thread:                        ; preds = %dec_label_pc_120bc
  store i32 %v3_120ac, i32* @r7, align 4
  %v2_1210c2135 = icmp eq i32 %v3_120ac, -1
  store i1 %v2_1210c2135, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_12114

bb1908:                                           ; preds = %dec_label_pc_120bc
  %v3_120c8 = icmp ugt i8 %v3_120c0, 61
  store i1 %v3_120c8, i1* %cpsr_c.global-to-local, align 1
  %v8_120c8 = icmp eq i8 %v3_120c0, 62
  store i1 %v8_120c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_120c8, label %dec_label_pc_12108.thread2243, label %dec_label_pc_12100

dec_label_pc_12108.thread2243:                    ; preds = %bb1908
  store i32 %v3_120ac, i32* @r7, align 4
  %v2_1210c2245 = icmp eq i32 %v3_120ac, -1
  store i1 %v2_1210c2245, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_12114

dec_label_pc_120d4:                               ; preds = %dec_label_pc_12100
  %v2_120d4 = icmp ugt i32 %v0_120dc, 34
  store i1 %v2_120d4, i1* %cpsr_c.global-to-local, align 1
  %v7_120d4 = icmp eq i32 %v0_120dc, 35
  store i1 %v7_120d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_120d4, label %dec_label_pc_12108, label %dec_label_pc_120dc

dec_label_pc_120dc:                               ; preds = %dec_label_pc_120d4
  %v2_120dc = icmp ugt i32 %v0_120dc, 36
  store i1 %v2_120dc, i1* %cpsr_c.global-to-local, align 1
  %v7_120dc = icmp eq i32 %v0_120dc, 37
  store i1 %v7_120dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_120dc, label %dec_label_pc_12108, label %dec_label_pc_120e4

dec_label_pc_120e4:                               ; preds = %dec_label_pc_120dc
  %v1_120e4 = add i32 %v0_120e4, -1
  store i32 %v1_120e4, i32* %r0.global-to-local, align 4
  %v2_120e4 = icmp ne i32 %v0_120e4, 0
  store i1 %v2_120e4, i1* %cpsr_c.global-to-local, align 1
  %v7_120e4 = icmp eq i32 %v0_120e4, 1
  store i1 %v7_120e4, i1* %cpsr_z.global-to-local, align 1
  %v2_120e8 = add i32 %v1_120e4, %v0_11e2c
  store i32 %v2_120e8, i32* %r3.global-to-local, align 4
  br i1 %v7_120e4, label %dec_label_pc_11db0.backedge.thread2263, label %dec_label_pc_120f0

dec_label_pc_120f0:                               ; preds = %dec_label_pc_120e4
  %v1_120f0 = add i32 %v2_120e8, 28
  %v2_120f0 = inttoptr i32 %v1_120f0 to i8*
  %v3_120f0 = load i8, i8* %v2_120f0, align 1
  %v4_120f0 = zext i8 %v3_120f0 to i32
  store i32 %v4_120f0, i32* %r3.global-to-local, align 4
  %v2_120f4 = icmp ugt i8 %v3_120f0, 61
  store i1 %v2_120f4, i1* %cpsr_c.global-to-local, align 1
  %v7_120f4 = icmp eq i8 %v3_120f0, 62
  store i1 %v7_120f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_120f4, label %dec_label_pc_12108, label %bb1909

bb1909:                                           ; preds = %dec_label_pc_120f0
  %v3_120f8 = icmp ugt i8 %v3_120f0, 57
  store i1 %v3_120f8, i1* %cpsr_c.global-to-local, align 1
  %v8_120f8 = icmp eq i8 %v3_120f0, 58
  store i1 %v8_120f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_120f8, label %dec_label_pc_12108, label %dec_label_pc_12100

dec_label_pc_12100:                               ; preds = %bb1908, %bb1909
  %v0_120e4 = phi i32 [ %v1_120e4, %bb1909 ], [ %v1_120b0, %bb1908 ]
  %v0_120dc = phi i32 [ %v4_120f0, %bb1909 ], [ %v4_120c0, %bb1908 ]
  %v2_12100 = icmp ugt i32 %v0_120dc, 35
  store i1 %v2_12100, i1* %cpsr_c.global-to-local, align 1
  %v7_12100 = icmp eq i32 %v0_120dc, 36
  store i1 %v7_12100, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12100, label %dec_label_pc_12108, label %dec_label_pc_120d4

dec_label_pc_12108:                               ; preds = %dec_label_pc_120f0, %dec_label_pc_12100, %bb1909, %dec_label_pc_120dc, %dec_label_pc_120d4
  %v0_12108 = phi i32 [ %v1_120e4, %dec_label_pc_120f0 ], [ %v0_120e4, %dec_label_pc_12100 ], [ %v1_120e4, %bb1909 ], [ %v0_120e4, %dec_label_pc_120dc ], [ %v0_120e4, %dec_label_pc_120d4 ]
  %v1_12108 = add i32 %v0_12108, 1
  store i32 %v1_12108, i32* @r7, align 4
  %v2_1210c = icmp eq i32 %v1_12108, -1
  store i1 %v2_1210c, i1* %cpsr_c.global-to-local, align 1
  %v7_1210c = icmp eq i32 %v0_12108, -2
  store i1 %v7_1210c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1210c, label %dec_label_pc_11db0.backedge.thread2263, label %dec_label_pc_12114

dec_label_pc_12114:                               ; preds = %dec_label_pc_12108.thread2243, %dec_label_pc_12108.thread, %dec_label_pc_12108
  %v1_121082137 = phi i32 [ %v3_120ac, %dec_label_pc_12108.thread ], [ %v1_12108, %dec_label_pc_12108 ], [ %v3_120ac, %dec_label_pc_12108.thread2243 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_12114 = icmp eq i32 %v1_121082137, 0
  store i1 %v2_12114, i1* %cpsr_z.global-to-local, align 1
  %tmp1910 = icmp slt i32 %v1_121082137, 1
  br i1 %tmp1910, label %dec_label_pc_11f34, label %dec_label_pc_1211c

dec_label_pc_1211c:                               ; preds = %dec_label_pc_12114
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_12120 = call i32 @function_12a20(i32 5)
  store i32 %v2_11d20, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v3_12130 = call i32 @function_1293c(i32 5, i32* %v2_11d28)
  store i32 %v3_12130, i32* %r0.global-to-local, align 4
  %v3_12134 = load i8, i8* %stack_var_-56, align 1
  %v4_12134 = sext i8 %v3_12134 to i32
  store i32 %v4_12134, i32* %r2.global-to-local, align 4
  store i32 %v3_12130, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_12140 = load i32, i32* @r6, align 4
  %v1_12140 = add i32 %v0_12140, 4
  %v2_12140 = inttoptr i32 %v1_12140 to i32*
  %v3_12140 = load i32, i32* %v2_12140, align 4
  store i32 %v3_12140, i32* %r0.global-to-local, align 4
  %v4_12144 = inttoptr i32 %v3_12130 to i32*
  %v5_12144 = call i32 @send(i32 %v3_12140, i32* %v4_12144, i32 %v4_12134, i32 16384)
  store i32 %v5_12144, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_13938.283 to i32), i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_12154 = load i32, i32* @r6, align 4
  %v1_12154 = add i32 %v0_12154, 4
  %v2_12154 = inttoptr i32 %v1_12154 to i32*
  %v3_12154 = load i32, i32* %v2_12154, align 4
  store i32 %v3_12154, i32* %r0.global-to-local, align 4
  %v5_12158 = call i32 @send(i32 %v3_12154, i32* bitcast ([3 x i8]* @global_var_13938.283 to i32*), i32 2, i32 16384)
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_12160 = call i32 @function_12968(i32 5)
  store i32 %v1_12160, i32* %r0.global-to-local, align 4
  %v0_12164 = load i32, i32* @r6, align 4
  %v1_12164 = add i32 %v0_12164, 24
  %v2_12164 = inttoptr i32 %v1_12164 to i32*
  %v3_12164 = load i32, i32* %v2_12164, align 4
  store i32 %v3_12164, i32* %ip.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v2_1216c = add i32 %v0_12164, 12
  %v3_1216c = inttoptr i32 %v2_1216c to i32*
  store i32 6, i32* %v3_1216c, align 4
  br label %dec_label_pc_1244c

dec_label_pc_12174:                               ; preds = %dec_label_pc_11e2c
  %v1_12174 = add i32 %v0_11e2c, 24
  %v2_12174 = inttoptr i32 %v1_12174 to i32*
  %v3_12174 = load i32, i32* %v2_12174, align 4
  store i32 %v3_12174, i32* %ip.global-to-local, align 4
  %v1_12178 = add i32 %v3_12174, -1
  store i32 %v1_12178, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1217c = icmp eq i32 %v1_12178, 0
  store i1 %v2_1217c, i1* %cpsr_z.global-to-local, align 1
  %tmp1911 = icmp slt i32 %v1_12178, 1
  br i1 %tmp1911, label %dec_label_pc_11db0.backedge.thread, label %dec_label_pc_12184

dec_label_pc_12184:                               ; preds = %dec_label_pc_12174
  %v2_12184 = add i32 %v1_12178, %v0_11e2c
  store i32 %v2_12184, i32* %r3.global-to-local, align 4
  %v1_12188 = add i32 %v2_12184, 28
  %v2_12188 = inttoptr i32 %v1_12188 to i8*
  %v3_12188 = load i8, i8* %v2_12188, align 1
  %v4_12188 = zext i8 %v3_12188 to i32
  store i32 %v4_12188, i32* %r3.global-to-local, align 4
  %v2_1218c = icmp ugt i8 %v3_12188, 57
  store i1 %v2_1218c, i1* %cpsr_c.global-to-local, align 1
  %v7_1218c = icmp eq i8 %v3_12188, 58
  store i1 %v7_1218c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1218c, label %dec_label_pc_121d0.thread, label %bb1912

dec_label_pc_121d0.thread:                        ; preds = %dec_label_pc_12184
  store i32 %v3_12174, i32* @r7, align 4
  %v2_121d42139 = icmp eq i32 %v3_12174, -1
  store i1 %v2_121d42139, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_121dc

bb1912:                                           ; preds = %dec_label_pc_12184
  %v3_12190 = icmp ugt i8 %v3_12188, 61
  store i1 %v3_12190, i1* %cpsr_c.global-to-local, align 1
  %v8_12190 = icmp eq i8 %v3_12188, 62
  store i1 %v8_12190, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_12190, label %dec_label_pc_121d0.thread2247, label %dec_label_pc_121c8

dec_label_pc_121d0.thread2247:                    ; preds = %bb1912
  store i32 %v3_12174, i32* @r7, align 4
  %v2_121d42249 = icmp eq i32 %v3_12174, -1
  store i1 %v2_121d42249, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_121dc

dec_label_pc_1219c:                               ; preds = %dec_label_pc_121c8
  %v2_1219c = icmp ugt i32 %v0_121a4, 34
  store i1 %v2_1219c, i1* %cpsr_c.global-to-local, align 1
  %v7_1219c = icmp eq i32 %v0_121a4, 35
  store i1 %v7_1219c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1219c, label %dec_label_pc_121d0, label %dec_label_pc_121a4

dec_label_pc_121a4:                               ; preds = %dec_label_pc_1219c
  %v2_121a4 = icmp ugt i32 %v0_121a4, 36
  store i1 %v2_121a4, i1* %cpsr_c.global-to-local, align 1
  %v7_121a4 = icmp eq i32 %v0_121a4, 37
  store i1 %v7_121a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_121a4, label %dec_label_pc_121d0, label %dec_label_pc_121ac

dec_label_pc_121ac:                               ; preds = %dec_label_pc_121a4
  %v1_121ac = add i32 %v0_121ac, -1
  store i32 %v1_121ac, i32* %r0.global-to-local, align 4
  %v2_121ac = icmp ne i32 %v0_121ac, 0
  store i1 %v2_121ac, i1* %cpsr_c.global-to-local, align 1
  %v7_121ac = icmp eq i32 %v0_121ac, 1
  store i1 %v7_121ac, i1* %cpsr_z.global-to-local, align 1
  %v2_121b0 = add i32 %v1_121ac, %v0_11e2c
  store i32 %v2_121b0, i32* %r3.global-to-local, align 4
  br i1 %v7_121ac, label %dec_label_pc_11db0.backedge.thread2263, label %dec_label_pc_121b8

dec_label_pc_121b8:                               ; preds = %dec_label_pc_121ac
  %v1_121b8 = add i32 %v2_121b0, 28
  %v2_121b8 = inttoptr i32 %v1_121b8 to i8*
  %v3_121b8 = load i8, i8* %v2_121b8, align 1
  %v4_121b8 = zext i8 %v3_121b8 to i32
  store i32 %v4_121b8, i32* %r3.global-to-local, align 4
  %v2_121bc = icmp ugt i8 %v3_121b8, 61
  store i1 %v2_121bc, i1* %cpsr_c.global-to-local, align 1
  %v7_121bc = icmp eq i8 %v3_121b8, 62
  store i1 %v7_121bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_121bc, label %dec_label_pc_121d0, label %bb1913

bb1913:                                           ; preds = %dec_label_pc_121b8
  %v3_121c0 = icmp ugt i8 %v3_121b8, 57
  store i1 %v3_121c0, i1* %cpsr_c.global-to-local, align 1
  %v8_121c0 = icmp eq i8 %v3_121b8, 58
  store i1 %v8_121c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_121c0, label %dec_label_pc_121d0, label %dec_label_pc_121c8

dec_label_pc_121c8:                               ; preds = %bb1912, %bb1913
  %v0_121ac = phi i32 [ %v1_121ac, %bb1913 ], [ %v1_12178, %bb1912 ]
  %v0_121a4 = phi i32 [ %v4_121b8, %bb1913 ], [ %v4_12188, %bb1912 ]
  %v2_121c8 = icmp ugt i32 %v0_121a4, 35
  store i1 %v2_121c8, i1* %cpsr_c.global-to-local, align 1
  %v7_121c8 = icmp eq i32 %v0_121a4, 36
  store i1 %v7_121c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_121c8, label %dec_label_pc_121d0, label %dec_label_pc_1219c

dec_label_pc_121d0:                               ; preds = %dec_label_pc_121b8, %dec_label_pc_121c8, %bb1913, %dec_label_pc_121a4, %dec_label_pc_1219c
  %v0_121d0 = phi i32 [ %v1_121ac, %dec_label_pc_121b8 ], [ %v0_121ac, %dec_label_pc_121c8 ], [ %v1_121ac, %bb1913 ], [ %v0_121ac, %dec_label_pc_121a4 ], [ %v0_121ac, %dec_label_pc_1219c ]
  %v1_121d0 = add i32 %v0_121d0, 1
  store i32 %v1_121d0, i32* @r7, align 4
  %v2_121d4 = icmp eq i32 %v1_121d0, -1
  store i1 %v2_121d4, i1* %cpsr_c.global-to-local, align 1
  %v7_121d4 = icmp eq i32 %v0_121d0, -2
  store i1 %v7_121d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_121d4, label %dec_label_pc_11db0.backedge.thread2263, label %dec_label_pc_121dc

dec_label_pc_121dc:                               ; preds = %dec_label_pc_121d0.thread2247, %dec_label_pc_121d0.thread, %dec_label_pc_121d0
  %v1_121d02141 = phi i32 [ %v3_12174, %dec_label_pc_121d0.thread ], [ %v1_121d0, %dec_label_pc_121d0 ], [ %v3_12174, %dec_label_pc_121d0.thread2247 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_121dc = icmp eq i32 %v1_121d02141, 0
  store i1 %v2_121dc, i1* %cpsr_z.global-to-local, align 1
  %tmp1914 = icmp slt i32 %v1_121d02141, 1
  br i1 %tmp1914, label %dec_label_pc_11f34, label %dec_label_pc_121e4

dec_label_pc_121e4:                               ; preds = %dec_label_pc_121dc
  store i32 6, i32* %r0.global-to-local, align 4
  %v1_121e8 = call i32 @function_12a20(i32 6)
  store i32 %v2_121f0, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r0.global-to-local, align 4
  %v3_121f8 = call i32 @function_1293c(i32 6, i32* nonnull %stack_var_-48)
  store i32 %v3_121f8, i32* %r0.global-to-local, align 4
  %v3_121fc = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_121fc, i32* %r2.global-to-local, align 4
  store i32 %v3_121f8, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_12208 = load i32, i32* @r6, align 4
  %v1_12208 = add i32 %v0_12208, 4
  %v2_12208 = inttoptr i32 %v1_12208 to i32*
  %v3_12208 = load i32, i32* %v2_12208, align 4
  store i32 %v3_12208, i32* %r0.global-to-local, align 4
  %v4_1220c = inttoptr i32 %v3_121f8 to i32*
  %v5_1220c = call i32 @send(i32 %v3_12208, i32* %v4_1220c, i32 %v3_121fc, i32 16384)
  store i32 %v5_1220c, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_13938.283 to i32), i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_1221c = load i32, i32* @r6, align 4
  %v1_1221c = add i32 %v0_1221c, 4
  %v2_1221c = inttoptr i32 %v1_1221c to i32*
  %v3_1221c = load i32, i32* %v2_1221c, align 4
  store i32 %v3_1221c, i32* %r0.global-to-local, align 4
  %v5_12220 = call i32 @send(i32 %v3_1221c, i32* bitcast ([3 x i8]* @global_var_13938.283 to i32*), i32 2, i32 16384)
  store i32 6, i32* %r0.global-to-local, align 4
  %v1_12228 = call i32 @function_12968(i32 6)
  store i32 %v1_12228, i32* %r0.global-to-local, align 4
  %v0_1222c = load i32, i32* @r6, align 4
  %v1_1222c = add i32 %v0_1222c, 24
  %v2_1222c = inttoptr i32 %v1_1222c to i32*
  %v3_1222c = load i32, i32* %v2_1222c, align 4
  store i32 %v3_1222c, i32* %ip.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v2_12234 = add i32 %v0_1222c, 12
  %v3_12234 = inttoptr i32 %v2_12234 to i32*
  store i32 7, i32* %v3_12234, align 4
  br label %dec_label_pc_1244c

dec_label_pc_1223c:                               ; preds = %dec_label_pc_11e2c
  %v1_1223c = add i32 %v0_11e2c, 24
  %v2_1223c = inttoptr i32 %v1_1223c to i32*
  %v3_1223c = load i32, i32* %v2_1223c, align 4
  store i32 %v3_1223c, i32* %ip.global-to-local, align 4
  %v1_12240 = add i32 %v3_1223c, -1
  store i32 %v1_12240, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_12244 = icmp eq i32 %v1_12240, 0
  store i1 %v2_12244, i1* %cpsr_z.global-to-local, align 1
  %tmp1915 = icmp slt i32 %v1_12240, 1
  br i1 %tmp1915, label %dec_label_pc_11db0.backedge.thread, label %dec_label_pc_1224c

dec_label_pc_1224c:                               ; preds = %dec_label_pc_1223c
  %v2_1224c = add i32 %v1_12240, %v0_11e2c
  store i32 %v2_1224c, i32* %r3.global-to-local, align 4
  %v1_12250 = add i32 %v2_1224c, 28
  %v2_12250 = inttoptr i32 %v1_12250 to i8*
  %v3_12250 = load i8, i8* %v2_12250, align 1
  %v4_12250 = zext i8 %v3_12250 to i32
  store i32 %v4_12250, i32* %r3.global-to-local, align 4
  %v2_12254 = icmp ugt i8 %v3_12250, 61
  store i1 %v2_12254, i1* %cpsr_c.global-to-local, align 1
  %v7_12254 = icmp eq i8 %v3_12250, 62
  store i1 %v7_12254, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12254, label %dec_label_pc_12298.thread, label %bb1916

dec_label_pc_12298.thread:                        ; preds = %dec_label_pc_1224c
  store i32 %v3_1223c, i32* @r7, align 4
  %v2_1229c2143 = icmp eq i32 %v3_1223c, -1
  store i1 %v2_1229c2143, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_122a4

bb1916:                                           ; preds = %dec_label_pc_1224c
  %v3_12258 = icmp ugt i8 %v3_12250, 57
  store i1 %v3_12258, i1* %cpsr_c.global-to-local, align 1
  %v8_12258 = icmp eq i8 %v3_12250, 58
  store i1 %v8_12258, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_12258, label %dec_label_pc_12298.thread2251, label %dec_label_pc_12290

dec_label_pc_12298.thread2251:                    ; preds = %bb1916
  store i32 %v3_1223c, i32* @r7, align 4
  %v2_1229c2253 = icmp eq i32 %v3_1223c, -1
  store i1 %v2_1229c2253, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_122a4

dec_label_pc_12264:                               ; preds = %dec_label_pc_12290
  %v2_12264 = icmp ugt i32 %v0_1226c, 34
  store i1 %v2_12264, i1* %cpsr_c.global-to-local, align 1
  %v7_12264 = icmp eq i32 %v0_1226c, 35
  store i1 %v7_12264, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12264, label %dec_label_pc_12298, label %dec_label_pc_1226c

dec_label_pc_1226c:                               ; preds = %dec_label_pc_12264
  %v2_1226c = icmp ugt i32 %v0_1226c, 36
  store i1 %v2_1226c, i1* %cpsr_c.global-to-local, align 1
  %v7_1226c = icmp eq i32 %v0_1226c, 37
  store i1 %v7_1226c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1226c, label %dec_label_pc_12298, label %dec_label_pc_12274

dec_label_pc_12274:                               ; preds = %dec_label_pc_1226c
  %v1_12274 = add i32 %v0_12274, -1
  store i32 %v1_12274, i32* %r0.global-to-local, align 4
  %v2_12274 = icmp ne i32 %v0_12274, 0
  store i1 %v2_12274, i1* %cpsr_c.global-to-local, align 1
  %v7_12274 = icmp eq i32 %v0_12274, 1
  store i1 %v7_12274, i1* %cpsr_z.global-to-local, align 1
  %v2_12278 = add i32 %v1_12274, %v0_11e2c
  store i32 %v2_12278, i32* %r3.global-to-local, align 4
  br i1 %v7_12274, label %dec_label_pc_11db0.backedge.thread2263, label %dec_label_pc_12280

dec_label_pc_12280:                               ; preds = %dec_label_pc_12274
  %v1_12280 = add i32 %v2_12278, 28
  %v2_12280 = inttoptr i32 %v1_12280 to i8*
  %v3_12280 = load i8, i8* %v2_12280, align 1
  %v4_12280 = zext i8 %v3_12280 to i32
  store i32 %v4_12280, i32* %r3.global-to-local, align 4
  %v2_12284 = icmp ugt i8 %v3_12280, 61
  store i1 %v2_12284, i1* %cpsr_c.global-to-local, align 1
  %v7_12284 = icmp eq i8 %v3_12280, 62
  store i1 %v7_12284, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12284, label %dec_label_pc_12298, label %bb1917

bb1917:                                           ; preds = %dec_label_pc_12280
  %v3_12288 = icmp ugt i8 %v3_12280, 57
  store i1 %v3_12288, i1* %cpsr_c.global-to-local, align 1
  %v8_12288 = icmp eq i8 %v3_12280, 58
  store i1 %v8_12288, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_12288, label %dec_label_pc_12298, label %dec_label_pc_12290

dec_label_pc_12290:                               ; preds = %bb1916, %bb1917
  %v0_12274 = phi i32 [ %v1_12274, %bb1917 ], [ %v1_12240, %bb1916 ]
  %v0_1226c = phi i32 [ %v4_12280, %bb1917 ], [ %v4_12250, %bb1916 ]
  %v2_12290 = icmp ugt i32 %v0_1226c, 35
  store i1 %v2_12290, i1* %cpsr_c.global-to-local, align 1
  %v7_12290 = icmp eq i32 %v0_1226c, 36
  store i1 %v7_12290, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12290, label %dec_label_pc_12298, label %dec_label_pc_12264

dec_label_pc_12298:                               ; preds = %dec_label_pc_12280, %dec_label_pc_12290, %bb1917, %dec_label_pc_1226c, %dec_label_pc_12264
  %v0_12298 = phi i32 [ %v1_12274, %dec_label_pc_12280 ], [ %v0_12274, %dec_label_pc_12290 ], [ %v1_12274, %bb1917 ], [ %v0_12274, %dec_label_pc_1226c ], [ %v0_12274, %dec_label_pc_12264 ]
  %v1_12298 = add i32 %v0_12298, 1
  store i32 %v1_12298, i32* @r7, align 4
  %v2_1229c = icmp eq i32 %v1_12298, -1
  store i1 %v2_1229c, i1* %cpsr_c.global-to-local, align 1
  %v7_1229c = icmp eq i32 %v0_12298, -2
  store i1 %v7_1229c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1229c, label %dec_label_pc_11db0.backedge.thread2263, label %dec_label_pc_122a4

dec_label_pc_122a4:                               ; preds = %dec_label_pc_12298.thread2251, %dec_label_pc_12298.thread, %dec_label_pc_12298
  %v1_122982145 = phi i32 [ %v3_1223c, %dec_label_pc_12298.thread ], [ %v1_12298, %dec_label_pc_12298 ], [ %v3_1223c, %dec_label_pc_12298.thread2251 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_122a4 = icmp eq i32 %v1_122982145, 0
  store i1 %v2_122a4, i1* %cpsr_z.global-to-local, align 1
  %tmp1918 = icmp slt i32 %v1_122982145, 1
  br i1 %tmp1918, label %dec_label_pc_11f34, label %dec_label_pc_122ac

dec_label_pc_122ac:                               ; preds = %dec_label_pc_122a4
  store i32 7, i32* %r0.global-to-local, align 4
  %v1_122b0 = call i32 @function_12a20(i32 7)
  store i32 %v2_11d20, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r0.global-to-local, align 4
  %v3_122c0 = call i32 @function_1293c(i32 7, i32* %v2_11d28)
  store i32 %v3_122c0, i32* %r0.global-to-local, align 4
  %v3_122c4 = load i8, i8* %stack_var_-56, align 1
  %v4_122c4 = sext i8 %v3_122c4 to i32
  store i32 %v4_122c4, i32* %r2.global-to-local, align 4
  store i32 %v3_122c0, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_122d0 = load i32, i32* @r6, align 4
  %v1_122d0 = add i32 %v0_122d0, 4
  %v2_122d0 = inttoptr i32 %v1_122d0 to i32*
  %v3_122d0 = load i32, i32* %v2_122d0, align 4
  store i32 %v3_122d0, i32* %r0.global-to-local, align 4
  %v4_122d4 = inttoptr i32 %v3_122c0 to i32*
  %v5_122d4 = call i32 @send(i32 %v3_122d0, i32* %v4_122d4, i32 %v4_122c4, i32 16384)
  store i32 %v5_122d4, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_13938.283 to i32), i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_122e4 = load i32, i32* @r6, align 4
  %v1_122e4 = add i32 %v0_122e4, 4
  %v2_122e4 = inttoptr i32 %v1_122e4 to i32*
  %v3_122e4 = load i32, i32* %v2_122e4, align 4
  store i32 %v3_122e4, i32* %r0.global-to-local, align 4
  %v5_122e8 = call i32 @send(i32 %v3_122e4, i32* bitcast ([3 x i8]* @global_var_13938.283 to i32*), i32 2, i32 16384)
  store i32 7, i32* %r0.global-to-local, align 4
  %v1_122f0 = call i32 @function_12968(i32 7)
  store i32 %v1_122f0, i32* %r0.global-to-local, align 4
  %v0_122f4 = load i32, i32* @r6, align 4
  %v1_122f4 = add i32 %v0_122f4, 24
  %v2_122f4 = inttoptr i32 %v1_122f4 to i32*
  %v3_122f4 = load i32, i32* %v2_122f4, align 4
  store i32 %v3_122f4, i32* %ip.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v2_122fc = add i32 %v0_122f4, 12
  %v3_122fc = inttoptr i32 %v2_122fc to i32*
  store i32 9, i32* %v3_122fc, align 4
  br label %dec_label_pc_1244c

dec_label_pc_12304:                               ; preds = %dec_label_pc_11e2c
  %v1_12304 = add i32 %v0_11e2c, 24
  %v2_12304 = inttoptr i32 %v1_12304 to i32*
  %v3_12304 = load i32, i32* %v2_12304, align 4
  store i32 %v3_12304, i32* %ip.global-to-local, align 4
  %v1_12308 = add i32 %v3_12304, -1
  store i32 %v1_12308, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1230c = icmp eq i32 %v1_12308, 0
  store i1 %v2_1230c, i1* %cpsr_z.global-to-local, align 1
  %tmp1919 = icmp slt i32 %v1_12308, 1
  br i1 %tmp1919, label %dec_label_pc_11db0.backedge.thread, label %dec_label_pc_12314

dec_label_pc_12314:                               ; preds = %dec_label_pc_12304
  %v2_12314 = add i32 %v1_12308, %v0_11e2c
  store i32 %v2_12314, i32* %r3.global-to-local, align 4
  %v1_12318 = add i32 %v2_12314, 28
  %v2_12318 = inttoptr i32 %v1_12318 to i8*
  %v3_12318 = load i8, i8* %v2_12318, align 1
  %v4_12318 = zext i8 %v3_12318 to i32
  store i32 %v4_12318, i32* %r3.global-to-local, align 4
  %v2_1231c = icmp ugt i8 %v3_12318, 57
  store i1 %v2_1231c, i1* %cpsr_c.global-to-local, align 1
  %v7_1231c = icmp eq i8 %v3_12318, 58
  store i1 %v7_1231c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1231c, label %dec_label_pc_12360.thread, label %bb1920

dec_label_pc_12360.thread:                        ; preds = %dec_label_pc_12314
  store i32 %v3_12304, i32* @r7, align 4
  %v2_123642147 = icmp eq i32 %v3_12304, -1
  store i1 %v2_123642147, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1236c

bb1920:                                           ; preds = %dec_label_pc_12314
  %v3_12320 = icmp ugt i8 %v3_12318, 61
  store i1 %v3_12320, i1* %cpsr_c.global-to-local, align 1
  %v8_12320 = icmp eq i8 %v3_12318, 62
  store i1 %v8_12320, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_12320, label %dec_label_pc_12360.thread2255, label %dec_label_pc_12358

dec_label_pc_12360.thread2255:                    ; preds = %bb1920
  store i32 %v3_12304, i32* @r7, align 4
  %v2_123642257 = icmp eq i32 %v3_12304, -1
  store i1 %v2_123642257, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1236c

dec_label_pc_1232c:                               ; preds = %dec_label_pc_12358
  %v2_1232c = icmp ugt i32 %v0_12334, 34
  store i1 %v2_1232c, i1* %cpsr_c.global-to-local, align 1
  %v7_1232c = icmp eq i32 %v0_12334, 35
  store i1 %v7_1232c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1232c, label %dec_label_pc_12360, label %dec_label_pc_12334

dec_label_pc_12334:                               ; preds = %dec_label_pc_1232c
  %v2_12334 = icmp ugt i32 %v0_12334, 36
  store i1 %v2_12334, i1* %cpsr_c.global-to-local, align 1
  %v7_12334 = icmp eq i32 %v0_12334, 37
  store i1 %v7_12334, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12334, label %dec_label_pc_12360, label %dec_label_pc_1233c

dec_label_pc_1233c:                               ; preds = %dec_label_pc_12334
  %v1_1233c = add i32 %v0_1233c, -1
  store i32 %v1_1233c, i32* %r0.global-to-local, align 4
  %v2_1233c = icmp ne i32 %v0_1233c, 0
  store i1 %v2_1233c, i1* %cpsr_c.global-to-local, align 1
  %v7_1233c = icmp eq i32 %v0_1233c, 1
  store i1 %v7_1233c, i1* %cpsr_z.global-to-local, align 1
  %v2_12340 = add i32 %v1_1233c, %v0_11e2c
  store i32 %v2_12340, i32* %r3.global-to-local, align 4
  br i1 %v7_1233c, label %dec_label_pc_11db0.backedge.thread2263, label %dec_label_pc_12348

dec_label_pc_12348:                               ; preds = %dec_label_pc_1233c
  %v1_12348 = add i32 %v2_12340, 28
  %v2_12348 = inttoptr i32 %v1_12348 to i8*
  %v3_12348 = load i8, i8* %v2_12348, align 1
  %v4_12348 = zext i8 %v3_12348 to i32
  store i32 %v4_12348, i32* %r3.global-to-local, align 4
  %v2_1234c = icmp ugt i8 %v3_12348, 61
  store i1 %v2_1234c, i1* %cpsr_c.global-to-local, align 1
  %v7_1234c = icmp eq i8 %v3_12348, 62
  store i1 %v7_1234c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1234c, label %dec_label_pc_12360, label %bb1921

bb1921:                                           ; preds = %dec_label_pc_12348
  %v3_12350 = icmp ugt i8 %v3_12348, 57
  store i1 %v3_12350, i1* %cpsr_c.global-to-local, align 1
  %v8_12350 = icmp eq i8 %v3_12348, 58
  store i1 %v8_12350, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_12350, label %dec_label_pc_12360, label %dec_label_pc_12358

dec_label_pc_12358:                               ; preds = %bb1920, %bb1921
  %v0_1233c = phi i32 [ %v1_1233c, %bb1921 ], [ %v1_12308, %bb1920 ]
  %v0_12334 = phi i32 [ %v4_12348, %bb1921 ], [ %v4_12318, %bb1920 ]
  %v2_12358 = icmp ugt i32 %v0_12334, 35
  store i1 %v2_12358, i1* %cpsr_c.global-to-local, align 1
  %v7_12358 = icmp eq i32 %v0_12334, 36
  store i1 %v7_12358, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12358, label %dec_label_pc_12360, label %dec_label_pc_1232c

dec_label_pc_12360:                               ; preds = %dec_label_pc_12348, %dec_label_pc_12358, %bb1921, %dec_label_pc_12334, %dec_label_pc_1232c
  %v0_12360 = phi i32 [ %v1_1233c, %dec_label_pc_12348 ], [ %v0_1233c, %dec_label_pc_12358 ], [ %v1_1233c, %bb1921 ], [ %v0_1233c, %dec_label_pc_12334 ], [ %v0_1233c, %dec_label_pc_1232c ]
  %v1_12360 = add i32 %v0_12360, 1
  store i32 %v1_12360, i32* @r7, align 4
  %v2_12364 = icmp eq i32 %v1_12360, -1
  store i1 %v2_12364, i1* %cpsr_c.global-to-local, align 1
  %v7_12364 = icmp eq i32 %v0_12360, -2
  store i1 %v7_12364, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12364, label %dec_label_pc_11db0.backedge.thread2263, label %dec_label_pc_1236c

dec_label_pc_1236c:                               ; preds = %dec_label_pc_12360.thread2255, %dec_label_pc_12360.thread, %dec_label_pc_12360
  %v1_123602149 = phi i32 [ %v3_12304, %dec_label_pc_12360.thread ], [ %v1_12360, %dec_label_pc_12360 ], [ %v3_12304, %dec_label_pc_12360.thread2255 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1236c = icmp eq i32 %v1_123602149, 0
  store i1 %v2_1236c, i1* %cpsr_z.global-to-local, align 1
  %tmp1922 = icmp slt i32 %v1_123602149, 1
  br i1 %tmp1922, label %dec_label_pc_11f34, label %dec_label_pc_12374

dec_label_pc_12374:                               ; preds = %dec_label_pc_1236c
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_12378 = call i32 @function_12a20(i32 4)
  store i32 %v2_121f0, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v3_12388 = call i32 @function_1293c(i32 4, i32* nonnull %stack_var_-48)
  store i32 %v3_12388, i32* %r0.global-to-local, align 4
  %v3_1238c = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_1238c, i32* %r2.global-to-local, align 4
  store i32 %v3_12388, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_12398 = load i32, i32* @r6, align 4
  %v1_12398 = add i32 %v0_12398, 4
  %v2_12398 = inttoptr i32 %v1_12398 to i32*
  %v3_12398 = load i32, i32* %v2_12398, align 4
  store i32 %v3_12398, i32* %r0.global-to-local, align 4
  %v4_1239c = inttoptr i32 %v3_12388 to i32*
  %v5_1239c = call i32 @send(i32 %v3_12398, i32* %v4_1239c, i32 %v3_1238c, i32 16384)
  store i32 %v5_1239c, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_13938.283 to i32), i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_123ac = load i32, i32* @r6, align 4
  %v1_123ac = add i32 %v0_123ac, 4
  %v2_123ac = inttoptr i32 %v1_123ac to i32*
  %v3_123ac = load i32, i32* %v2_123ac, align 4
  store i32 %v3_123ac, i32* %r0.global-to-local, align 4
  %v5_123b0 = call i32 @send(i32 %v3_123ac, i32* bitcast ([3 x i8]* @global_var_13938.283 to i32*), i32 2, i32 16384)
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_123b8 = call i32 @function_12968(i32 4)
  store i32 %v1_123b8, i32* %r0.global-to-local, align 4
  %v0_123bc = load i32, i32* @r6, align 4
  %v1_123bc = add i32 %v0_123bc, 24
  %v2_123bc = inttoptr i32 %v1_123bc to i32*
  %v3_123bc = load i32, i32* %v2_123bc, align 4
  store i32 %v3_123bc, i32* %ip.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v2_123c4 = add i32 %v0_123bc, 12
  %v3_123c4 = inttoptr i32 %v2_123c4 to i32*
  store i32 8, i32* %v3_123c4, align 4
  br label %dec_label_pc_1244c

dec_label_pc_123cc:                               ; preds = %dec_label_pc_11e2c
  store i32 10, i32* %r0.global-to-local, align 4
  %v1_123d0 = call i32 @function_12a20(i32 10)
  store i32 %v2_11d20, i32* %r1.global-to-local, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v3_123e0 = call i32 @function_1293c(i32 10, i32* %v2_11d28)
  %v3_123e4 = load i8, i8* %stack_var_-56, align 1
  %v4_123e4 = sext i8 %v3_123e4 to i32
  store i32 %v3_123e0, i32* %r2.global-to-local, align 4
  %v1_123ec = add nsw i32 %v4_123e4, -1
  store i32 %v1_123ec, i32* %r3.global-to-local, align 4
  %v0_123f0 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_123f0, i32* %r0.global-to-local, align 4
  %v0_123f4 = load i32, i32* @r6, align 4
  %v1_123f4 = add i32 %v0_123f4, 24
  %v2_123f4 = inttoptr i32 %v1_123f4 to i32*
  %v3_123f4 = load i32, i32* %v2_123f4, align 4
  store i32 %v3_123f4, i32* %r1.global-to-local, align 4
  %v4_123f8 = call i32 @function_130b0(i32 %v0_123f0, i32 %v3_123f4, i32 %v3_123e0, i32 %v1_123ec)
  %v2_123fc = icmp eq i32 %v4_123f8, -1
  store i1 %v2_123fc, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_123fc, i1* %cpsr_z.global-to-local, align 1
  store i32 10, i32* %r0.global-to-local, align 4
  %v1_126e4 = call i32 @function_12968(i32 10)
  br i1 %v2_123fc, label %dec_label_pc_126e0, label %dec_label_pc_12404

dec_label_pc_12404:                               ; preds = %dec_label_pc_123cc
  store i32 %v1_126e4, i32* %r0.global-to-local, align 4
  %v0_1240c = load i32, i32* @r6, align 4
  %v1_1240c = add i32 %v0_1240c, 4
  %v2_1240c = inttoptr i32 %v1_1240c to i32*
  %v3_1240c = load i32, i32* %v2_1240c, align 4
  store i32 %v3_1240c, i32* %r0.global-to-local, align 4
  %v1_12410 = call i32 @close(i32 %v3_1240c)
  store i32 %v1_12410, i32* %r0.global-to-local, align 4
  %v0_12414 = load i32, i32* @r6, align 4
  %v1_12414 = add i32 %v0_12414, 284
  %v2_12414 = inttoptr i32 %v1_12414 to i8*
  %v3_12414 = load i8, i8* %v2_12414, align 1
  %v4_12414 = zext i8 %v3_12414 to i32
  %v1_12418 = add nuw nsw i32 %v4_12414, 1
  %v1_1241c = urem i32 %v1_12418, 256
  store i32 %v1_1241c, i32* %r3.global-to-local, align 4
  store i32 -1, i32* @r4, align 4
  %v2_12424 = icmp ugt i32 %v1_1241c, 9
  store i1 %v2_12424, i1* %cpsr_c.global-to-local, align 1
  %v7_12424 = icmp eq i32 %v1_1241c, 10
  store i1 %v7_12424, i1* %cpsr_z.global-to-local, align 1
  %v2_12428 = add i32 %v0_12414, 4
  %v3_12428 = inttoptr i32 %v2_12428 to i32*
  store i32 -1, i32* %v3_12428, align 4
  %v0_1242c = load i32, i32* %r3.global-to-local, align 4
  %v1_1242c = trunc i32 %v0_1242c to i8
  %v2_1242c = load i32, i32* @r6, align 4
  %v3_1242c = add i32 %v2_1242c, 284
  %v4_1242c = inttoptr i32 %v3_1242c to i8*
  store i8 %v1_1242c, i8* %v4_1242c, align 1
  %v0_12430 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12430, label %dec_label_pc_12434, label %dec_label_pc_12674

dec_label_pc_12434:                               ; preds = %dec_label_pc_12404
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1243c = load i32, i32* @r6, align 4
  %v1_1243c = add i32 %v0_1243c, 24
  %v2_1243c = inttoptr i32 %v1_1243c to i32*
  %v3_1243c = load i32, i32* %v2_1243c, align 4
  store i32 %v3_1243c, i32* %ip.global-to-local, align 4
  %v3_12440 = add i32 %v0_1243c, 284
  %v4_12440 = inttoptr i32 %v3_12440 to i8*
  store i8 0, i8* %v4_12440, align 1
  %v0_12444 = load i32, i32* %r3.global-to-local, align 4
  %v1_12444 = load i32, i32* @r6, align 4
  %v2_12444 = add i32 %v1_12444, 12
  %v3_12444 = inttoptr i32 %v2_12444 to i32*
  store i32 %v0_12444, i32* %v3_12444, align 4
  store i32 -1, i32* @r7, align 4
  br label %dec_label_pc_1244c

dec_label_pc_1244c:                               ; preds = %.thread1150, %dec_label_pc_124e0, %dec_label_pc_1277c, %dec_label_pc_12674, %dec_label_pc_12374, %dec_label_pc_122ac, %dec_label_pc_121e4, %dec_label_pc_1211c, %dec_label_pc_12070, %dec_label_pc_11fc4, %dec_label_pc_11f3c, %dec_label_pc_12434
  %v0_1244c = load i32, i32* %ip.global-to-local, align 4
  %v1_1244c = load i32, i32* @r7, align 4
  %v2_1244c = sub i32 %v0_1244c, %v1_1244c
  %v3_1244c = icmp uge i32 %v0_1244c, %v1_1244c
  store i1 %v3_1244c, i1* %cpsr_c.global-to-local, align 1
  %v4_1244c = xor i32 %v1_1244c, %v0_1244c
  %v5_1244c = xor i32 %v2_1244c, %v0_1244c
  %v6_1244c = and i32 %v5_1244c, %v4_1244c
  %v7_1244c = icmp slt i32 %v6_1244c, 0
  %v8_1244c = icmp slt i32 %v2_1244c, 0
  %v9_1244c = icmp eq i32 %v0_1244c, %v1_1244c
  store i1 %v9_1244c, i1* %cpsr_z.global-to-local, align 1
  %v2_12450 = xor i1 %v8_1244c, %v7_1244c
  %v0_1244c.v1_1244c = select i1 %v2_12450, i32 %v0_1244c, i32 %v1_1244c
  store i32 %v0_1244c.v1_1244c, i32* %r1.global-to-local, align 4
  %v2_12458 = sub i32 %v0_1244c, %v0_1244c.v1_1244c
  store i32 %v2_12458, i32* %r2.global-to-local, align 4
  %v1_1245c = load i32, i32* @r6, align 4
  %v2_1245c = add i32 %v1_1245c, 24
  %v3_1245c = inttoptr i32 %v2_1245c to i32*
  store i32 %v2_12458, i32* %v3_1245c, align 4
  %v0_12460 = load i32, i32* %r8.global-to-local, align 4
  %v1_12460 = load i32, i32* %r1.global-to-local, align 4
  %v2_12460 = add i32 %v1_12460, %v0_12460
  store i32 %v2_12460, i32* %r1.global-to-local, align 4
  store i32 %v0_12460, i32* %r0.global-to-local, align 4
  %v3_12468 = inttoptr i32 %v0_12460 to i32*
  %v4_12468 = inttoptr i32 %v2_12460 to i32*
  %v5_12468 = call i32* @memmove(i32* %v3_12468, i32* %v4_12468, i32 %v2_12458)
  %v7_12468 = ptrtoint i32* %v5_12468 to i32
  store i32 %v7_12468, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11e2c

dec_label_pc_12470:                               ; preds = %dec_label_pc_11e2c
  %v1_12470 = add i32 %v0_11e2c, 24
  %v2_12470 = inttoptr i32 %v1_12470 to i32*
  %v3_12470 = load i32, i32* %v2_12470, align 4
  store i32 %v3_12470, i32* %ip.global-to-local, align 4
  %v1_12474 = add i32 %v3_12470, -1
  store i32 %v1_12474, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_12478 = icmp eq i32 %v1_12474, 0
  store i1 %v2_12478, i1* %cpsr_z.global-to-local, align 1
  %tmp1925 = icmp slt i32 %v1_12474, 1
  br i1 %tmp1925, label %dec_label_pc_11db0.backedge.thread, label %dec_label_pc_12480

dec_label_pc_12480:                               ; preds = %dec_label_pc_12470
  %v2_12480 = add i32 %v1_12474, %v0_11e2c
  store i32 %v2_12480, i32* %r3.global-to-local, align 4
  %v1_12484 = add i32 %v2_12480, 28
  %v2_12484 = inttoptr i32 %v1_12484 to i8*
  %v3_12484 = load i8, i8* %v2_12484, align 1
  %v4_12484 = zext i8 %v3_12484 to i32
  store i32 %v4_12484, i32* %r3.global-to-local, align 4
  %v2_12488 = icmp ugt i8 %v3_12484, 61
  store i1 %v2_12488, i1* %cpsr_c.global-to-local, align 1
  %v7_12488 = icmp eq i8 %v3_12484, 62
  store i1 %v7_12488, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12488, label %dec_label_pc_124cc.thread, label %bb1926

dec_label_pc_124cc.thread:                        ; preds = %dec_label_pc_12480
  store i32 %v3_12470, i32* @r7, align 4
  %v2_124d02151 = icmp eq i32 %v3_12470, -1
  store i1 %v2_124d02151, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_124d8

bb1926:                                           ; preds = %dec_label_pc_12480
  %v3_1248c = icmp ugt i8 %v3_12484, 57
  store i1 %v3_1248c, i1* %cpsr_c.global-to-local, align 1
  %v8_1248c = icmp eq i8 %v3_12484, 58
  store i1 %v8_1248c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1248c, label %dec_label_pc_124cc.thread2259, label %dec_label_pc_124c4

dec_label_pc_124cc.thread2259:                    ; preds = %bb1926
  store i32 %v3_12470, i32* @r7, align 4
  %v2_124d02261 = icmp eq i32 %v3_12470, -1
  store i1 %v2_124d02261, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_124d8

dec_label_pc_12498:                               ; preds = %dec_label_pc_124c4
  %v2_12498 = icmp ugt i32 %v0_124a0, 34
  store i1 %v2_12498, i1* %cpsr_c.global-to-local, align 1
  %v7_12498 = icmp eq i32 %v0_124a0, 35
  store i1 %v7_12498, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12498, label %dec_label_pc_124cc, label %dec_label_pc_124a0

dec_label_pc_124a0:                               ; preds = %dec_label_pc_12498
  %v2_124a0 = icmp ugt i32 %v0_124a0, 36
  store i1 %v2_124a0, i1* %cpsr_c.global-to-local, align 1
  %v7_124a0 = icmp eq i32 %v0_124a0, 37
  store i1 %v7_124a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_124a0, label %dec_label_pc_124cc, label %dec_label_pc_124a8

dec_label_pc_124a8:                               ; preds = %dec_label_pc_124a0
  %v1_124a8 = add i32 %v0_124a8, -1
  store i32 %v1_124a8, i32* %r0.global-to-local, align 4
  %v2_124a8 = icmp ne i32 %v0_124a8, 0
  store i1 %v2_124a8, i1* %cpsr_c.global-to-local, align 1
  %v7_124a8 = icmp eq i32 %v0_124a8, 1
  store i1 %v7_124a8, i1* %cpsr_z.global-to-local, align 1
  %v2_124ac = add i32 %v1_124a8, %v0_11e2c
  store i32 %v2_124ac, i32* %r3.global-to-local, align 4
  br i1 %v7_124a8, label %dec_label_pc_11db0.backedge.thread2263, label %dec_label_pc_124b4

dec_label_pc_124b4:                               ; preds = %dec_label_pc_124a8
  %v1_124b4 = add i32 %v2_124ac, 28
  %v2_124b4 = inttoptr i32 %v1_124b4 to i8*
  %v3_124b4 = load i8, i8* %v2_124b4, align 1
  %v4_124b4 = zext i8 %v3_124b4 to i32
  store i32 %v4_124b4, i32* %r3.global-to-local, align 4
  %v2_124b8 = icmp ugt i8 %v3_124b4, 61
  store i1 %v2_124b8, i1* %cpsr_c.global-to-local, align 1
  %v7_124b8 = icmp eq i8 %v3_124b4, 62
  store i1 %v7_124b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_124b8, label %dec_label_pc_124cc, label %bb1927

bb1927:                                           ; preds = %dec_label_pc_124b4
  %v3_124bc = icmp ugt i8 %v3_124b4, 57
  store i1 %v3_124bc, i1* %cpsr_c.global-to-local, align 1
  %v8_124bc = icmp eq i8 %v3_124b4, 58
  store i1 %v8_124bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_124bc, label %dec_label_pc_124cc, label %dec_label_pc_124c4

dec_label_pc_124c4:                               ; preds = %bb1926, %bb1927
  %v0_124a8 = phi i32 [ %v1_124a8, %bb1927 ], [ %v1_12474, %bb1926 ]
  %v0_124a0 = phi i32 [ %v4_124b4, %bb1927 ], [ %v4_12484, %bb1926 ]
  %v2_124c4 = icmp ugt i32 %v0_124a0, 35
  store i1 %v2_124c4, i1* %cpsr_c.global-to-local, align 1
  %v7_124c4 = icmp eq i32 %v0_124a0, 36
  store i1 %v7_124c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_124c4, label %dec_label_pc_124cc, label %dec_label_pc_12498

dec_label_pc_124cc:                               ; preds = %dec_label_pc_124b4, %dec_label_pc_124c4, %bb1927, %dec_label_pc_124a0, %dec_label_pc_12498
  %v0_124cc = phi i32 [ %v1_124a8, %dec_label_pc_124b4 ], [ %v0_124a8, %dec_label_pc_124c4 ], [ %v1_124a8, %bb1927 ], [ %v0_124a8, %dec_label_pc_124a0 ], [ %v0_124a8, %dec_label_pc_12498 ]
  %v1_124cc = add i32 %v0_124cc, 1
  store i32 %v1_124cc, i32* @r7, align 4
  %v2_124d0 = icmp eq i32 %v1_124cc, -1
  store i1 %v2_124d0, i1* %cpsr_c.global-to-local, align 1
  %v7_124d0 = icmp eq i32 %v0_124cc, -2
  store i1 %v7_124d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_124d0, label %dec_label_pc_11db0.backedge.thread2263, label %dec_label_pc_124d8

dec_label_pc_124d8:                               ; preds = %dec_label_pc_124cc.thread2259, %dec_label_pc_124cc.thread, %dec_label_pc_124cc
  %v1_124cc2153 = phi i32 [ %v3_12470, %dec_label_pc_124cc.thread ], [ %v1_124cc, %dec_label_pc_124cc ], [ %v3_12470, %dec_label_pc_124cc.thread2259 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_124d8 = icmp eq i32 %v1_124cc2153, 0
  store i1 %v2_124d8, i1* %cpsr_z.global-to-local, align 1
  %tmp1928 = icmp slt i32 %v1_124cc2153, 1
  br i1 %tmp1928, label %dec_label_pc_11f34, label %dec_label_pc_124e0

dec_label_pc_124e0:                               ; preds = %dec_label_pc_124d8
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_124e4 = call i32 @function_12a20(i32 8)
  store i32 %v2_11d20, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v3_124f4 = call i32 @function_1293c(i32 8, i32* %v2_11d28)
  store i32 %v3_124f4, i32* %r0.global-to-local, align 4
  %v3_124f8 = load i8, i8* %stack_var_-56, align 1
  %v4_124f8 = sext i8 %v3_124f8 to i32
  store i32 %v4_124f8, i32* %r2.global-to-local, align 4
  store i32 %v3_124f4, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_12504 = load i32, i32* @r6, align 4
  %v1_12504 = add i32 %v0_12504, 4
  %v2_12504 = inttoptr i32 %v1_12504 to i32*
  %v3_12504 = load i32, i32* %v2_12504, align 4
  store i32 %v3_12504, i32* %r0.global-to-local, align 4
  %v4_12508 = inttoptr i32 %v3_124f4 to i32*
  %v5_12508 = call i32 @send(i32 %v3_12504, i32* %v4_12508, i32 %v4_124f8, i32 16384)
  store i32 %v5_12508, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_13938.283 to i32), i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_12518 = load i32, i32* @r6, align 4
  %v1_12518 = add i32 %v0_12518, 4
  %v2_12518 = inttoptr i32 %v1_12518 to i32*
  %v3_12518 = load i32, i32* %v2_12518, align 4
  store i32 %v3_12518, i32* %r0.global-to-local, align 4
  %v5_1251c = call i32 @send(i32 %v3_12518, i32* bitcast ([3 x i8]* @global_var_13938.283 to i32*), i32 2, i32 16384)
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_12524 = call i32 @function_12968(i32 8)
  store i32 %v1_12524, i32* %r0.global-to-local, align 4
  %v0_12528 = load i32, i32* @r6, align 4
  %v1_12528 = add i32 %v0_12528, 24
  %v2_12528 = inttoptr i32 %v1_12528 to i32*
  %v3_12528 = load i32, i32* %v2_12528, align 4
  store i32 %v3_12528, i32* %ip.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v2_12530 = add i32 %v0_12528, 12
  %v3_12530 = inttoptr i32 %v2_12530 to i32*
  store i32 10, i32* %v3_12530, align 4
  br label %dec_label_pc_1244c

dec_label_pc_12538:                               ; preds = %dec_label_pc_11eb4
  store i32 ptrtoint (i32* @global_var_13964.285 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 %v2_12544, i32* %r0.global-to-local, align 4
  %v5_12548 = call i32* @memcpy(i32* nonnull %stack_var_-41, i32* nonnull @global_var_13964.285, i32 3)
  store i32 9, i32* %r2.global-to-local, align 4
  store i32 %v2_12554, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1395b.287 to i32), i32* %r1.global-to-local, align 4
  %v5_1255c = call i32* @memcpy(i32* nonnull %stack_var_-73, i32* nonnull @global_var_1395b.287, i32 9)
  %v7_1255c = ptrtoint i32* %v5_1255c to i32
  store i32 %v7_1255c, i32* %r0.global-to-local, align 4
  %v0_12560 = load i32, i32* @r6, align 4
  %v1_12560 = add i32 %v0_12560, 24
  %v2_12560 = inttoptr i32 %v1_12560 to i32*
  %v3_12560 = load i32, i32* %v2_12560, align 4
  store i32 %v3_12560, i32* %ip.global-to-local, align 4
  %v0_12564 = load i32, i32* @r5, align 4
  %v1_12564 = add i32 %v0_12564, 2
  store i32 %v1_12564, i32* %r2.global-to-local, align 4
  %v0_12568 = load i32, i32* %r8.global-to-local, align 4
  %v2_12568 = add i32 %v0_12568, %v3_12560
  store i32 %v2_12568, i32* %r3.global-to-local, align 4
  %v3_1256c = icmp uge i32 %v2_12568, %v1_12564
  store i1 %v3_1256c, i1* %cpsr_c.global-to-local, align 1
  %v9_1256c = icmp eq i32 %v2_12568, %v1_12564
  store i1 %v9_1256c, i1* %cpsr_z.global-to-local, align 1
  %v2_12570 = xor i1 %v3_1256c, true
  %v3_12570 = or i1 %v9_1256c, %v2_12570
  br i1 %v3_12570, label %dec_label_pc_12538.dec_label_pc_11f24.loopexit_crit_edge, label %dec_label_pc_12574

dec_label_pc_12538.dec_label_pc_11f24.loopexit_crit_edge: ; preds = %dec_label_pc_12538
  %v0_11f24.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_11f24

dec_label_pc_12574:                               ; preds = %dec_label_pc_12538
  %v0_12574 = load i32, i32* @r4, align 4
  %v1_12574 = add i32 %v0_12574, 1
  %v2_12574 = inttoptr i32 %v1_12574 to i8*
  %v3_12574 = load i8, i8* %v2_12574, align 1
  %v4_12574 = zext i8 %v3_12574 to i32
  store i32 %v4_12574, i32* %r3.global-to-local, align 4
  %v2_12578 = icmp ugt i8 %v3_12574, 30
  store i1 %v2_12578, i1* %cpsr_c.global-to-local, align 1
  %v7_12578 = icmp eq i8 %v3_12574, 31
  store i1 %v7_12578, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12578, label %dec_label_pc_12648, label %dec_label_pc_12580

dec_label_pc_12580:                               ; preds = %dec_label_pc_12574
  %v1_12580 = add i32 %v0_12574, -1
  %v2_12580 = inttoptr i32 %v1_12580 to i8*
  %v3_12580 = load i8, i8* %v2_12580, align 1
  %v4_12580 = zext i8 %v3_12580 to i32
  store i32 %v4_12580, i32* %r3.global-to-local, align 4
  %v2_12584 = icmp ugt i8 %v3_12580, -4
  store i1 %v2_12584, i1* %cpsr_c.global-to-local, align 1
  %v7_12584 = icmp eq i8 %v3_12580, -3
  store i1 %v7_12584, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12584, label %bb1929, label %dec_label_pc_12590

bb1929:                                           ; preds = %dec_label_pc_12580
  %v1_12588 = load i32, i32* %sl.global-to-local, align 4
  %v2_12588 = trunc i32 %v1_12588 to i8
  store i8 %v2_12588, i8* %v2_12580, align 1
  %v0_1258c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1258c.pr, label %dec_label_pc_11ec8, label %.dec_label_pc_12590_crit_edge

.dec_label_pc_12590_crit_edge:                    ; preds = %bb1929
  %v0_12590.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_12590

dec_label_pc_12590:                               ; preds = %.dec_label_pc_12590_crit_edge, %dec_label_pc_12580
  %v0_12590 = phi i32 [ %v0_12590.pre, %.dec_label_pc_12590_crit_edge ], [ %v4_12580, %dec_label_pc_12580 ]
  %v2_12590 = icmp ugt i32 %v0_12590, 250
  store i1 %v2_12590, i1* %cpsr_c.global-to-local, align 1
  %v7_12590 = icmp eq i32 %v0_12590, 251
  store i1 %v7_12590, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12590, label %bb1930, label %dec_label_pc_11ec8

bb1930:                                           ; preds = %dec_label_pc_12590
  %v1_12594 = load i32, i32* %sb.global-to-local, align 4
  %v2_12594 = trunc i32 %v1_12594 to i8
  %v3_12594 = load i32, i32* @r4, align 4
  %v4_12594 = add i32 %v3_12594, -1
  %v5_12594 = inttoptr i32 %v4_12594 to i8*
  store i8 %v2_12594, i8* %v5_12594, align 1
  br label %dec_label_pc_11ec8

dec_label_pc_1259c:                               ; preds = %dec_label_pc_12030, %dec_label_pc_12054, %dec_label_pc_12000
  store i32 25, i32* %r0.global-to-local, align 4
  %v1_125a0 = call i32 @function_12a20(i32 25)
  store i32 %v2_11d20, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r0.global-to-local, align 4
  %v3_125b0 = call i32 @function_1293c(i32 25, i32* %v2_11d28)
  %v3_125b4 = load i8, i8* %stack_var_-56, align 1
  %v4_125b4 = sext i8 %v3_125b4 to i32
  store i32 %v3_125b0, i32* %r2.global-to-local, align 4
  %v1_125bc = add nsw i32 %v4_125b4, -1
  store i32 %v1_125bc, i32* %r3.global-to-local, align 4
  %v0_125c0 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_125c0, i32* %r0.global-to-local, align 4
  %v0_125c4 = load i32, i32* @r6, align 4
  %v1_125c4 = add i32 %v0_125c4, 24
  %v2_125c4 = inttoptr i32 %v1_125c4 to i32*
  %v3_125c4 = load i32, i32* %v2_125c4, align 4
  store i32 %v3_125c4, i32* %r1.global-to-local, align 4
  %v4_125c8 = call i32 @function_130b0(i32 %v0_125c0, i32 %v3_125c4, i32 %v3_125b0, i32 %v1_125bc)
  store i32 %v4_125c8, i32* %r0.global-to-local, align 4
  %v1_125cc = add i32 %v4_125c8, 1
  store i32 %v1_125cc, i32* @r7, align 4
  %v2_125cc = icmp eq i32 %v4_125c8, -1
  store i1 %v2_125cc, i1* %cpsr_c.global-to-local, align 1
  %v7_125cc = icmp eq i32 %v1_125cc, 0
  store i1 %v7_125cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_125cc, label %thread-pre-split690, label %bb1931

bb1931:                                           ; preds = %dec_label_pc_1259c
  store i32 1, i32* @r7, align 4
  br label %thread-pre-split690

thread-pre-split690:                              ; preds = %dec_label_pc_1259c, %bb1931
  %v0_125d4 = phi i1 [ false, %bb1931 ], [ true, %dec_label_pc_1259c ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 %v0_125d4, i1* %cpsr_z.global-to-local, align 1
  store i32 25, i32* %r0.global-to-local, align 4
  %v1_12918 = call i32 @function_12968(i32 25)
  store i32 %v1_12918, i32* %r0.global-to-local, align 4
  br i1 %v0_125d4, label %dec_label_pc_12914, label %dec_label_pc_125dc

dec_label_pc_125dc:                               ; preds = %thread-pre-split690
  %v0_125e4 = load i32, i32* @r7, align 4
  %v3_125e4 = icmp eq i32 %v0_125e4, -1
  store i1 %v3_125e4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v3_125e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_125e4, label %dec_label_pc_11dac.loopexit, label %dec_label_pc_12068

dec_label_pc_125f0:                               ; preds = %dec_label_pc_11dc8
  br i1 %v2_11dec, label %dec_label_pc_12930, label %dec_label_pc_125f4

dec_label_pc_125f4:                               ; preds = %dec_label_pc_125f0
  %v3_125f4 = icmp eq i32 %v5_11de8, -1
  store i1 %v3_125f4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v3_125f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_125f4, label %dec_label_pc_125fc, label %dec_label_pc_11e14

dec_label_pc_125fc:                               ; preds = %dec_label_pc_125f4
  %v0_125fc = load i32, i32* %fp.global-to-local, align 4
  %v1_125fc = inttoptr i32 %v0_125fc to i32*
  %v2_125fc = load i32, i32* %v1_125fc, align 4
  store i32 %v2_125fc, i32* %r3.global-to-local, align 4
  %v2_12600 = icmp ugt i32 %v2_125fc, 10
  store i1 %v2_12600, i1* %cpsr_c.global-to-local, align 1
  %v7_12600 = icmp eq i32 %v2_125fc, 11
  store i1 %v7_12600, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12600, label %dec_label_pc_11be4, label %dec_label_pc_12608

dec_label_pc_12608:                               ; preds = %dec_label_pc_125fc, %dec_label_pc_12930
  %v0_12608 = load i32, i32* @r6, align 4
  %v1_12608 = add i32 %v0_12608, 4
  %v2_12608 = inttoptr i32 %v1_12608 to i32*
  %v3_12608 = load i32, i32* %v2_12608, align 4
  store i32 %v3_12608, i32* %r0.global-to-local, align 4
  %v1_1260c = call i32 @close(i32 %v3_12608)
  store i32 %v1_1260c, i32* %r0.global-to-local, align 4
  %v0_12610 = load i32, i32* @r6, align 4
  %v1_12610 = add i32 %v0_12610, 284
  %v2_12610 = inttoptr i32 %v1_12610 to i8*
  %v3_12610 = load i8, i8* %v2_12610, align 1
  %v4_12610 = zext i8 %v3_12610 to i32
  %v1_12614 = add nuw nsw i32 %v4_12610, 1
  %v1_12618 = urem i32 %v1_12614, 256
  store i32 %v1_12618, i32* %r3.global-to-local, align 4
  %v2_1261c = icmp ugt i32 %v1_12618, 8
  store i1 %v2_1261c, i1* %cpsr_c.global-to-local, align 1
  %v7_1261c = icmp eq i32 %v1_12618, 9
  store i1 %v7_1261c, i1* %cpsr_z.global-to-local, align 1
  %v2_12620 = xor i1 %v7_1261c, true
  %v3_12620 = and i1 %v2_1261c, %v2_12620
  br i1 %v3_12620, label %bb1932, label %bb1933

bb1932:                                           ; preds = %dec_label_pc_12608
  store i32 0, i32* @lr, align 4
  br label %bb1933

bb1933:                                           ; preds = %dec_label_pc_12608, %bb1932
  store i32 -1, i32* @r4, align 4
  %v1_12628 = trunc i32 %v1_12614 to i8
  store i8 %v1_12628, i8* %v2_12610, align 1
  %v0_1262c = load i32, i32* @r4, align 4
  %v1_1262c = load i32, i32* @r6, align 4
  %v2_1262c = add i32 %v1_1262c, 4
  %v3_1262c = inttoptr i32 %v2_1262c to i32*
  store i32 %v0_1262c, i32* %v3_1262c, align 4
  %v0_12630 = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_12630 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v2_12630 = xor i1 %v1_12630, true
  %v3_12630 = and i1 %v0_12630, %v2_12630
  br i1 %v3_12630, label %bb1934, label %.thread1154

bb1934:                                           ; preds = %bb1933
  %v4_12630 = load i32, i32* @lr, align 4
  %v5_12630 = load i32, i32* @r6, align 4
  %v6_12630 = add i32 %v5_12630, 12
  %v7_12630 = inttoptr i32 %v6_12630 to i32*
  store i32 %v4_12630, i32* %v7_12630, align 4
  %v4_12634 = load i32, i32* @lr, align 4
  %v5_12634 = trunc i32 %v4_12634 to i8
  %v6_12634 = load i32, i32* @r6, align 4
  %v7_12634 = add i32 %v6_12634, 284
  %v8_12634 = inttoptr i32 %v7_12634 to i8*
  store i8 %v5_12634, i8* %v8_12634, align 1
  %v0_12638.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_12638.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %.thread1154

.thread1154:                                      ; preds = %bb1933, %bb1934
  %v1_12638 = phi i1 [ %v1_12638.pre, %bb1934 ], [ %v1_12630, %bb1933 ]
  %v0_12638 = phi i1 [ %v0_12638.pre, %bb1934 ], [ %v0_12630, %bb1933 ]
  %v2_12638 = xor i1 %v1_12638, true
  %v3_12638 = and i1 %v0_12638, %v2_12638
  br i1 %v3_12638, label %dec_label_pc_11be4, label %dec_label_pc_1263c

dec_label_pc_1263c:                               ; preds = %.thread1154
  %v0_1263c = load i32, i32* @r6, align 4
  store i32 %v0_1263c, i32* @r0, align 4
  %v0_12640 = call i32 @function_f76c()
  store i32 %v0_12640, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11be4

dec_label_pc_12648:                               ; preds = %dec_label_pc_12574
  store i32 %v2_12544, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v1_12658 = add i32 %v0_12560, 4
  %v2_12658 = inttoptr i32 %v1_12658 to i32*
  %v3_12658 = load i32, i32* %v2_12658, align 4
  store i32 %v3_12658, i32* %r0.global-to-local, align 4
  %v5_1265c = call i32 @send(i32 %v3_12658, i32* nonnull %stack_var_-41, i32 3, i32 16384)
  store i32 %v5_1265c, i32* %r0.global-to-local, align 4
  store i32 %v2_11b70, i32* %r1.global-to-local, align 4
  %v0_12664 = load i32, i32* @r6, align 4
  %v1_12664 = add i32 %v0_12664, 4
  %v2_12664 = inttoptr i32 %v1_12664 to i32*
  %v3_12664 = load i32, i32* %v2_12664, align 4
  store i32 %v3_12664, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11f04

dec_label_pc_12674:                               ; preds = %dec_label_pc_12404
  %v0_12674 = load i32, i32* @r6, align 4
  store i32 %v0_12674, i32* @r0, align 4
  %v0_12678 = call i32 @function_f76c()
  store i32 %v0_12678, i32* %r0.global-to-local, align 4
  %v0_1267c = load i32, i32* @r6, align 4
  %v1_1267c = add i32 %v0_1267c, 24
  %v2_1267c = inttoptr i32 %v1_1267c to i32*
  %v3_1267c = load i32, i32* %v2_1267c, align 4
  store i32 %v3_1267c, i32* %ip.global-to-local, align 4
  %v0_12680 = load i32, i32* @r4, align 4
  store i32 %v0_12680, i32* @r7, align 4
  br label %dec_label_pc_1244c

dec_label_pc_12688:                               ; preds = %dec_label_pc_11db8
  store i32 %.pre, i32* %r0.global-to-local, align 4
  %v1_12690 = add i32 %v0_12688, 92
  store i32 %v1_12690, i32* %r1.global-to-local, align 4
  store i32 192, i32* %r2.global-to-local, align 4
  %v3_12698 = inttoptr i32 %.pre to i32*
  %v4_12698 = inttoptr i32 %v1_12690 to i32*
  %v5_12698 = call i32* @memmove(i32* %v3_12698, i32* %v4_12698, i32 192)
  %v7_12698 = ptrtoint i32* %v5_12698 to i32
  store i32 %v7_12698, i32* %r0.global-to-local, align 4
  %v0_1269c = load i32, i32* @r6, align 4
  %v1_1269c = add i32 %v0_1269c, 24
  %v2_1269c = inttoptr i32 %v1_1269c to i32*
  %v3_1269c = load i32, i32* %v2_1269c, align 4
  store i32 %v3_1269c, i32* %r3.global-to-local, align 4
  %v1_126a0 = add i32 %v3_1269c, -64
  store i32 %v1_126a0, i32* %ip.global-to-local, align 4
  store i32 %v1_126a0, i32* %v2_1269c, align 4
  br label %dec_label_pc_11dc8

dec_label_pc_126e0:                               ; preds = %dec_label_pc_123cc
  store i32 9, i32* %r0.global-to-local, align 4
  %v1_126ec = call i32 @function_12a20(i32 9)
  store i32 %v2_11d20, i32* %r1.global-to-local, align 4
  store i32 9, i32* %r0.global-to-local, align 4
  %v3_126fc = call i32 @function_1293c(i32 9, i32* nonnull %v2_11d28)
  store i32 %v3_126fc, i32* %r0.global-to-local, align 4
  %v3_12700 = load i8, i8* %stack_var_-56, align 1
  %v4_12700 = sext i8 %v3_12700 to i32
  store i32 %v3_126fc, i32* %r2.global-to-local, align 4
  %v1_12708 = add nsw i32 %v4_12700, -1
  store i32 %v1_12708, i32* %r3.global-to-local, align 4
  %v0_1270c = load i32, i32* @r6, align 4
  %v1_1270c = add i32 %v0_1270c, 24
  %v2_1270c = inttoptr i32 %v1_1270c to i32*
  %v3_1270c = load i32, i32* %v2_1270c, align 4
  store i32 %v3_1270c, i32* %r1.global-to-local, align 4
  %v0_12710 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_12710, i32* %r0.global-to-local, align 4
  %v4_12714 = call i32 @function_130b0(i32 %v0_12710, i32 %v3_1270c, i32 %v3_126fc, i32 %v1_12708)
  store i32 %v4_12714, i32* @r7, align 4
  store i32 9, i32* %r0.global-to-local, align 4
  %v1_12720 = call i32 @function_12968(i32 9)
  store i32 %v1_12720, i32* %r0.global-to-local, align 4
  %v0_12724 = load i32, i32* @r7, align 4
  %v2_12724 = icmp eq i32 %v0_12724, -1
  store i1 %v2_12724, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_12724, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12724, label %dec_label_pc_11dac.loopexit, label %dec_label_pc_1272c

dec_label_pc_1272c:                               ; preds = %dec_label_pc_126e0
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1272c = icmp eq i32 %v0_12724, 0
  store i1 %v2_1272c, i1* %cpsr_z.global-to-local, align 1
  %tmp1935 = icmp slt i32 %v0_12724, 1
  br i1 %tmp1935, label %dec_label_pc_11f34, label %dec_label_pc_12734

dec_label_pc_12734:                               ; preds = %dec_label_pc_1272c
  %v0_12734 = load i32, i32* @r6, align 4
  %v1_12734 = add i32 %v0_12734, 21
  %v2_12734 = inttoptr i32 %v1_12734 to i8*
  %v3_12734 = load i8, i8* %v2_12734, align 1
  %v4_12734 = zext i8 %v3_12734 to i32
  store i32 %v4_12734, i32* %r3.global-to-local, align 4
  %v1_12738 = add i32 %v0_12734, 20
  %v2_12738 = inttoptr i32 %v1_12738 to i8*
  %v3_12738 = load i8, i8* %v2_12738, align 1
  %v4_12738 = zext i8 %v3_12738 to i32
  store i32 %v4_12738, i32* %r2.global-to-local, align 4
  %v1_1273c = add i32 %v0_12734, 16
  %v2_1273c = inttoptr i32 %v1_1273c to i32*
  %v3_1273c = load i32, i32* %v2_1273c, align 4
  store i32 %v3_1273c, i32* %r1.global-to-local, align 4
  %v4_12740 = mul nuw nsw i32 %v4_12734, 256
  %v5_12740 = or i32 %v4_12738, %v4_12740
  store i32 %v5_12740, i32* %r2.global-to-local, align 4
  %v1_12744 = and i32 %v4_12738, 128
  %v2_12744 = icmp ne i32 %v1_12744, 0
  store i1 %v2_12744, i1* %cpsr_c.global-to-local, align 1
  store i32 %v4_12734, i32* %r3.global-to-local, align 4
  store i32 %v3_1273c, i32* %stack_var_-48, align 4
  store i32 %v5_12740, i32* %stack_var_-38, align 4
  %v1_12754 = inttoptr i32 %v0_12734 to i32*
  %v2_12754 = load i32, i32* %v1_12754, align 4
  store i32 %v2_12754, i32* %sl.global-to-local, align 4
  %v0_12758 = call i32 @fork()
  store i32 %v0_12758, i32* %r0.global-to-local, align 4
  %v2_1275c = icmp eq i32 %v0_12758, -1
  %.2009 = zext i1 %v2_1275c to i32
  store i32 %.2009, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_12768 = icmp eq i32 %v0_12758, 0
  store i1 %v2_12768, i1* %cpsr_z.global-to-local, align 1
  %tmp1938 = icmp slt i32 %v0_12758, 1
  br i1 %tmp1938, label %bb1939, label %.thread693

.thread693:                                       ; preds = %dec_label_pc_12734
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1277c

bb1939:                                           ; preds = %dec_label_pc_12734
  store i32 %.2009, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_12774 = icmp eq i1 %v2_1275c, false
  store i1 %v2_12774, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12774, label %dec_label_pc_1279c, label %dec_label_pc_1277c

dec_label_pc_1277c:                               ; preds = %.thread693, %bb1939, %dec_label_pc_12814
  %v0_1277c = load i32, i32* @r6, align 4
  %v1_1277c = add i32 %v0_1277c, 4
  %v2_1277c = inttoptr i32 %v1_1277c to i32*
  %v3_1277c = load i32, i32* %v2_1277c, align 4
  store i32 %v3_1277c, i32* %r0.global-to-local, align 4
  %v1_12780 = call i32 @close(i32 %v3_1277c)
  store i32 %v1_12780, i32* %r0.global-to-local, align 4
  %v0_12784 = load i32, i32* @r6, align 4
  %v1_12784 = add i32 %v0_12784, 24
  %v2_12784 = inttoptr i32 %v1_12784 to i32*
  %v3_12784 = load i32, i32* %v2_12784, align 4
  store i32 %v3_12784, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v2_12790 = add i32 %v0_12784, 4
  %v3_12790 = inttoptr i32 %v2_12790 to i32*
  store i32 -1, i32* %v3_12790, align 4
  %v0_12794 = load i32, i32* %r2.global-to-local, align 4
  %v1_12794 = load i32, i32* @r6, align 4
  %v2_12794 = add i32 %v1_12794, 12
  %v3_12794 = inttoptr i32 %v2_12794 to i32*
  store i32 %v0_12794, i32* %v3_12794, align 4
  br label %dec_label_pc_1244c

dec_label_pc_1279c:                               ; preds = %bb1939
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_127a8 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_127a8, i32* @r4, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_127b4 = call i32 @function_12a20(i32 2)
  store i32 2, i32* %sb.global-to-local, align 4
  store i32 ptrtoint ([15 x i8]* @global_var_13880.135 to i32), i32* %r0.global-to-local, align 4
  store i32 2, i32* %stack_var_-92, align 4
  %v3_127c8 = call i32 @inet_addr(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_13880.135, i32 0, i32 0))
  %v0_127cc = load i32, i32* @r5, align 4
  store i32 %v0_127cc, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_127d8 = inttoptr i32 %v0_127cc to i32*
  %v3_127d8 = call i32 @function_1293c(i32 2, i32* %v2_127d8)
  %v4_127d8 = inttoptr i32 %v3_127d8 to i8*
  store i32 %v3_127d8, i32* %r0.global-to-local, align 4
  %v2_127dc = add i32 %v3_127d8, 1
  %v3_127dc = inttoptr i32 %v2_127dc to i8*
  %v4_127dc = load i8, i8* %v3_127dc, align 1
  %v5_127dc = zext i8 %v4_127dc to i32
  store i32 %v5_127dc, i32* %r2.global-to-local, align 4
  %v3_127e0 = load i8, i8* %v4_127d8, align 1
  %v4_127e0 = zext i8 %v3_127e0 to i32
  %v4_127e4 = mul nuw nsw i32 %v5_127dc, 256
  %v5_127e4 = or i32 %v4_127e0, %v4_127e4
  store i32 %v5_127e4, i32* %r3.global-to-local, align 4
  %v1_127e8 = and i32 %v4_127e0, 128
  %v2_127e8 = icmp ne i32 %v1_127e8, 0
  store i1 %v2_127e8, i1* %cpsr_c.global-to-local, align 1
  store i32 %v5_127dc, i32* %r1.global-to-local, align 4
  %v0_127ec = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_127ec, i32* %r0.global-to-local, align 4
  %v1_127f8 = call i32 @function_12968(i32 %v0_127ec)
  %v0_127fc = load i32, i32* @r4, align 4
  store i32 %v0_127fc, i32* %r0.global-to-local, align 4
  store i32 %v2_12800, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v5_12808 = call i32 @connect(i32 %v0_127fc, %sockaddr* %tmp1330, i32 16)
  store i32 %v5_12808, i32* %r0.global-to-local, align 4
  %v2_1280c = icmp eq i32 %v5_12808, -1
  store i1 %v2_1280c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_1280c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1280c, label %dec_label_pc_128f0, label %dec_label_pc_12814

dec_label_pc_12814:                               ; preds = %dec_label_pc_1279c, %dec_label_pc_128f0
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_12820 = load i32, i32* @r4, align 4
  store i32 %v0_12820, i32* %r0.global-to-local, align 4
  store i32 %v2_11d20, i32* %r1.global-to-local, align 4
  %v0_12828 = load i32, i32* @r5, align 4
  %v6_12828 = trunc i32 %v0_12828 to i8
  store i8 %v6_12828, i8* %stack_var_-56, align 1
  %v7_1282c = call i32 @send(i32 %v0_12820, i32* %v2_11d28, i32 1, i32 16384)
  %v0_12834 = load i32, i32* @r4, align 4
  store i32 %v0_12834, i32* %r0.global-to-local, align 4
  store i32 %v2_121f0, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v5_12844 = call i32 @send(i32 %v0_12834, i32* nonnull %stack_var_-48, i32 4, i32 16384)
  %v0_1284c = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_1284c, i32* %r2.global-to-local, align 4
  %v0_12850 = load i32, i32* @r4, align 4
  store i32 %v0_12850, i32* %r0.global-to-local, align 4
  store i32 %v2_12854, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_1285c = call i32 @send(i32 %v0_12850, i32* nonnull %stack_var_-38, i32 %v0_1284c, i32 16384)
  %v0_12860 = load i32, i32* %sl.global-to-local, align 4
  %v1_12860 = add i32 %v0_12860, 12
  store i32 %v1_12860, i32* %r1.global-to-local, align 4
  %v0_12864 = load i32, i32* @r4, align 4
  store i32 %v0_12864, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_12870 = inttoptr i32 %v1_12860 to i32*
  %v5_12870 = call i32 @send(i32 %v0_12864, i32* %v4_12870, i32 1, i32 16384)
  store i32 %v5_12870, i32* %r0.global-to-local, align 4
  %v0_12874 = load i32, i32* %sl.global-to-local, align 4
  %v1_12874 = inttoptr i32 %v0_12874 to i32*
  %v2_12874 = load i32, i32* %v1_12874, align 4
  store i32 %v2_12874, i32* %r1.global-to-local, align 4
  %v1_12878 = add i32 %v0_12874, 12
  %v2_12878 = inttoptr i32 %v1_12878 to i8*
  %v3_12878 = load i8, i8* %v2_12878, align 1
  %v4_12878 = zext i8 %v3_12878 to i32
  store i32 %v4_12878, i32* %r2.global-to-local, align 4
  %v0_1287c = load i32, i32* @r4, align 4
  store i32 %v0_1287c, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_12884 = inttoptr i32 %v2_12874 to i32*
  %v5_12884 = call i32 @send(i32 %v0_1287c, i32* %v4_12884, i32 %v4_12878, i32 16384)
  %v0_12888 = load i32, i32* %sl.global-to-local, align 4
  %v1_12888 = add i32 %v0_12888, 13
  store i32 %v1_12888, i32* %r1.global-to-local, align 4
  %v0_1288c = load i32, i32* @r4, align 4
  store i32 %v0_1288c, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_12898 = inttoptr i32 %v1_12888 to i32*
  %v5_12898 = call i32 @send(i32 %v0_1288c, i32* %v4_12898, i32 1, i32 16384)
  %v0_1289c = load i32, i32* @r4, align 4
  store i32 %v0_1289c, i32* %r0.global-to-local, align 4
  %v0_128a0 = load i32, i32* %sl.global-to-local, align 4
  %v1_128a0 = add i32 %v0_128a0, 13
  %v2_128a0 = inttoptr i32 %v1_128a0 to i8*
  %v3_128a0 = load i8, i8* %v2_128a0, align 1
  %v4_128a0 = zext i8 %v3_128a0 to i32
  store i32 %v4_128a0, i32* %r2.global-to-local, align 4
  %v1_128a4 = add i32 %v0_128a0, 4
  %v2_128a4 = inttoptr i32 %v1_128a4 to i32*
  %v3_128a4 = load i32, i32* %v2_128a4, align 4
  store i32 %v3_128a4, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_128ac = inttoptr i32 %v3_128a4 to i32*
  %v5_128ac = call i32 @send(i32 %v0_1289c, i32* %v4_128ac, i32 %v4_128a0, i32 16384)
  %v0_128b0 = load i32, i32* @r4, align 4
  store i32 %v0_128b0, i32* %r0.global-to-local, align 4
  %v1_128b4 = call i32 @close(i32 %v0_128b0)
  store i32 %v1_128b4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1277c

dec_label_pc_128bc:                               ; preds = %dec_label_pc_11ccc, %dec_label_pc_11c84
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_128c0

dec_label_pc_128c0:                               ; preds = %dec_label_pc_11cf4, %dec_label_pc_128bc
  %v0_128c8 = phi i32 [ 0, %dec_label_pc_128bc ], [ %v0_11cf4, %dec_label_pc_11cf4 ]
  %v0_128c0 = load i32, i32* @r6, align 4
  %v1_128c0 = add i32 %v0_128c0, 4
  %v2_128c0 = inttoptr i32 %v1_128c0 to i32*
  %v3_128c0 = load i32, i32* %v2_128c0, align 4
  store i32 %v3_128c0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v2_128c8 = inttoptr i32 %v0_128c0 to i32*
  store i32 %v0_128c8, i32* %v2_128c8, align 4
  %v0_128cc = load i32, i32* %ip.global-to-local, align 4
  %v1_128cc = load i32, i32* @r6, align 4
  %v2_128cc = add i32 %v1_128cc, 24
  %v3_128cc = inttoptr i32 %v2_128cc to i32*
  store i32 %v0_128cc, i32* %v3_128cc, align 4
  %v0_11bbc.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11bbc

dec_label_pc_128d4:                               ; preds = %dec_label_pc_11c44
  %v0_128d4 = load i32, i32* @r6, align 4
  %v1_128d4 = add i32 %v0_128d4, 4
  %v2_128d4 = inttoptr i32 %v1_128d4 to i32*
  %v3_128d4 = load i32, i32* %v2_128d4, align 4
  store i32 %v3_128d4, i32* %r0.global-to-local, align 4
  %v1_128d8 = call i32 @close(i32 %v3_128d4)
  store i32 %v1_128d8, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v0_128e0 = load i32, i32* %r5.global-to-local, align 4
  %v1_128e0 = load i32, i32* @r6, align 4
  %v2_128e0 = add i32 %v1_128e0, 12
  %v3_128e0 = inttoptr i32 %v2_128e0 to i32*
  store i32 %v0_128e0, i32* %v3_128e0, align 4
  %v0_128e4 = load i32, i32* %r4.global-to-local, align 4
  %v1_128e4 = load i32, i32* @r6, align 4
  %v2_128e4 = add i32 %v1_128e4, 4
  %v3_128e4 = inttoptr i32 %v2_128e4 to i32*
  store i32 %v0_128e4, i32* %v3_128e4, align 4
  %v0_128e8 = load i32, i32* %r5.global-to-local, align 4
  %v1_128e8 = trunc i32 %v0_128e8 to i8
  %v2_128e8 = load i32, i32* @r6, align 4
  %v3_128e8 = add i32 %v2_128e8, 284
  %v4_128e8 = inttoptr i32 %v3_128e8 to i8*
  store i8 %v1_128e8, i8* %v4_128e8, align 1
  br label %dec_label_pc_11be4

dec_label_pc_128f0:                               ; preds = %dec_label_pc_1279c
  %v0_128f0 = load i32, i32* @r4, align 4
  store i32 %v0_128f0, i32* %r0.global-to-local, align 4
  %v1_128f4 = call i32 @close(i32 %v0_128f0)
  store i32 %v1_128f4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12814

dec_label_pc_128fc:                               ; preds = %dec_label_pc_11d6c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_12900 = call i32 @function_12968(i32 26)
  store i32 27, i32* %r0.global-to-local, align 4
  %v1_12908 = call i32 @function_12968(i32 27)
  store i32 %v1_12908, i32* %r0.global-to-local, align 4
  %v0_1290c = load i32, i32* @r6, align 4
  %v1_1290c = add i32 %v0_1290c, 12
  %v2_1290c = inttoptr i32 %v1_1290c to i32*
  %v3_1290c = load i32, i32* %v2_1290c, align 4
  br label %dec_label_pc_11db0.backedge

dec_label_pc_11db0.backedge.thread:               ; preds = %dec_label_pc_120ac, %dec_label_pc_12174, %dec_label_pc_1223c, %dec_label_pc_12304, %dec_label_pc_12470
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11db8

dec_label_pc_11db0.backedge.thread2263:           ; preds = %dec_label_pc_120e4, %dec_label_pc_121ac, %dec_label_pc_1233c, %dec_label_pc_12274, %dec_label_pc_124a8, %dec_label_pc_12108, %dec_label_pc_121d0, %dec_label_pc_12298, %dec_label_pc_12360, %dec_label_pc_124cc
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11db8

dec_label_pc_11db0.backedge:                      ; preds = %dec_label_pc_128fc, %dec_label_pc_12914
  %storemerge2265 = phi i32 [ %v3_1291c, %dec_label_pc_12914 ], [ %v3_1290c, %dec_label_pc_128fc ]
  %v0_11db0.be = phi i32 [ %v3_1291c, %dec_label_pc_12914 ], [ %v3_1290c, %dec_label_pc_128fc ]
  %v0_11db81037 = phi i32 [ %v0_1291c, %dec_label_pc_12914 ], [ %v0_1290c, %dec_label_pc_128fc ]
  store i32 %storemerge2265, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11db0 = icmp eq i32 %v0_11db0.be, 0
  store i1 %v2_11db0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11db0, label %dec_label_pc_11be4, label %dec_label_pc_11db8

dec_label_pc_12914:                               ; preds = %thread-pre-split690
  %v0_1291c = load i32, i32* @r6, align 4
  %v1_1291c = add i32 %v0_1291c, 12
  %v2_1291c = inttoptr i32 %v1_1291c to i32*
  %v3_1291c = load i32, i32* %v2_1291c, align 4
  br label %dec_label_pc_11db0.backedge

dec_label_pc_12924:                               ; preds = %dec_label_pc_11b40, %dec_label_pc_11b24
  %v0_12924 = load i32, i32* @r7, align 4
  %v1_12924 = load i32, i32* @r4, align 4
  %v2_12924 = add i32 %v1_12924, 12
  %v3_12924 = inttoptr i32 %v2_12924 to i32*
  store i32 %v0_12924, i32* %v3_12924, align 4
  %v0_12928 = load i32, i32* @r7, align 4
  %v1_12928 = trunc i32 %v0_12928 to i8
  %v2_12928 = load i32, i32* @r4, align 4
  %v3_12928 = add i32 %v2_12928, 284
  %v4_12928 = inttoptr i32 %v3_12928 to i8*
  store i8 %v1_12928, i8* %v4_12928, align 1
  br label %bb1886

dec_label_pc_12930:                               ; preds = %dec_label_pc_125f0
  store i32 104, i32* %r3.global-to-local, align 4
  %v1_12934 = load i32, i32* %fp.global-to-local, align 4
  %v2_12934 = inttoptr i32 %v1_12934 to i32*
  store i32 104, i32* %v2_12934, align 4
  br label %dec_label_pc_12608

; uselistorder directives
  uselistorder i32 %v0_1291c, { 1, 0 }
  uselistorder i32 %v3_1290c, { 1, 0 }
  uselistorder i32 %v4_127e0, { 1, 0 }
  uselistorder i32 %v5_127dc, { 1, 0, 2 }
  uselistorder i1 %v2_12774, { 1, 0 }
  uselistorder i32 %.2009, { 1, 0 }
  uselistorder i1 %v2_1275c, { 1, 0 }
  uselistorder i32 %v0_12758, { 1, 0, 2, 3 }
  uselistorder i32 %v4_12738, { 1, 0, 2 }
  uselistorder i32 %v4_12734, { 1, 0, 2 }
  uselistorder i32 %v0_12724, { 2, 1, 3, 0 }
  uselistorder i1 %v1_12630, { 1, 0 }
  uselistorder i32 %v1_12618, { 2, 1, 0 }
  uselistorder i32 %v1_12614, { 1, 0 }
  uselistorder i1 %v3_125f4, { 1, 0, 2 }
  uselistorder i1 %v3_125e4, { 1, 0, 2 }
  uselistorder i32 %v0_125e4, { 1, 0 }
  uselistorder i1 %v0_125d4, { 1, 0 }
  uselistorder i32 %v4_125c8, { 1, 0, 2 }
  uselistorder i32 %v0_12560, { 1, 2, 0 }
  uselistorder i32 %v1_124cc2153, { 2, 1, 0 }
  uselistorder i1 %v7_124d0, { 1, 0 }
  uselistorder i32 %v0_124a0, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 %v0_124a8, { 0, 1, 2, 4, 5, 3 }
  uselistorder i1 %v8_124bc, { 1, 0 }
  uselistorder i32 %v1_124a8, { 0, 1, 3, 2, 4 }
  uselistorder i1 %v8_1248c, { 1, 0 }
  uselistorder i32 %v3_12470, { 2, 3, 1, 0, 5, 4, 6, 7 }
  uselistorder i32 %v0_12460, { 1, 2, 0 }
  uselistorder i32 %v2_1244c, { 1, 0 }
  uselistorder i32 %v1_1244c, { 1, 3, 0, 2, 4 }
  uselistorder i32 %v0_1244c, { 3, 2, 5, 0, 1, 4, 6 }
  uselistorder i32 %v1_1241c, { 2, 1, 0 }
  uselistorder i32 %v1_123602149, { 2, 1, 0 }
  uselistorder i1 %v7_12364, { 1, 0 }
  uselistorder i32 %v0_12334, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 %v0_1233c, { 0, 1, 2, 4, 5, 3 }
  uselistorder i1 %v8_12350, { 1, 0 }
  uselistorder i32 %v1_1233c, { 0, 1, 3, 2, 4 }
  uselistorder i1 %v8_12320, { 1, 0 }
  uselistorder i32 %v3_12304, { 2, 3, 1, 0, 5, 4, 6, 7 }
  uselistorder i32 %v1_122982145, { 2, 1, 0 }
  uselistorder i1 %v7_1229c, { 1, 0 }
  uselistorder i32 %v0_1226c, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 %v0_12274, { 0, 1, 2, 4, 5, 3 }
  uselistorder i1 %v8_12288, { 1, 0 }
  uselistorder i32 %v1_12274, { 0, 1, 3, 2, 4 }
  uselistorder i1 %v8_12258, { 1, 0 }
  uselistorder i32 %v3_1223c, { 2, 3, 1, 0, 5, 4, 6, 7 }
  uselistorder i32 %v1_121d02141, { 2, 1, 0 }
  uselistorder i1 %v7_121d4, { 1, 0 }
  uselistorder i32 %v0_121a4, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 %v0_121ac, { 0, 1, 2, 4, 5, 3 }
  uselistorder i1 %v8_121c0, { 1, 0 }
  uselistorder i32 %v1_121ac, { 0, 1, 3, 2, 4 }
  uselistorder i1 %v8_12190, { 1, 0 }
  uselistorder i32 %v3_12174, { 2, 3, 1, 0, 5, 4, 6, 7 }
  uselistorder i32 %v1_121082137, { 2, 1, 0 }
  uselistorder i1 %v7_1210c, { 1, 0 }
  uselistorder i32 %v0_120dc, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 %v0_120e4, { 0, 1, 2, 4, 5, 3 }
  uselistorder i1 %v8_120f8, { 1, 0 }
  uselistorder i32 %v1_120e4, { 0, 1, 3, 2, 4 }
  uselistorder i1 %v8_120c8, { 1, 0 }
  uselistorder i32 %v3_120ac, { 2, 3, 1, 0, 5, 4, 6, 7 }
  uselistorder i32 %v0_12068, { 2, 1, 0 }
  uselistorder i1 %v7_12058, { 1, 0 }
  uselistorder i32 %v0_12028, { 2, 3, 1, 0 }
  uselistorder i32 %v0_12030, { 0, 1, 3, 4, 2 }
  uselistorder i1 %v8_12044, { 1, 0 }
  uselistorder i32 %v1_12030, { 1, 2, 3, 0, 4 }
  uselistorder i1 %v8_1201c, { 1, 0 }
  uselistorder i32 %v3_12000, { 1, 0, 2, 3 }
  uselistorder i32 %v0_11fbc, { 2, 1, 0 }
  uselistorder i1 %v7_11fa4, { 1, 0 }
  uselistorder i32 %v0_11f74, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 %v0_11f7c, { 0, 1, 2, 4, 5, 3 }
  uselistorder i1 %v8_11f90, { 1, 0 }
  uselistorder i32 %v1_11f7c, { 1, 2, 3, 0, 4 }
  uselistorder i1 %v8_11f60, { 1, 0 }
  uselistorder i32 %v3_11f44, { 1, 0, 2, 3 }
  uselistorder i32 %v0_11f24, { 0, 2, 1 }
  uselistorder i32 %v1_11f1c, { 1, 0 }
  uselistorder i32 %v1_11f18, { 1, 0 }
  uselistorder i32 %v1_11f10, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 %v3_11f0c, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_11f0c, { 0, 2, 1 }
  uselistorder i1 %v7_11eb4, { 1, 0 }
  uselistorder i1 %v2_11ea0, { 1, 0, 2 }
  uselistorder i1 %v2_11e88, { 1, 0, 2 }
  uselistorder i32 %v1_11ea8, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v1_11e7c, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v1_11ea4, { 1, 0 }
  uselistorder i32 %v2_11eac, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 %v3_11e64, { 0, 2, 1, 3 }
  uselistorder i32 %v0_11e2c, { 3, 4, 25, 5, 6, 23, 7, 8, 24, 9, 10, 22, 11, 12, 21, 13, 14, 20, 15, 16, 19, 2, 17, 18, 26, 1, 0 }
  uselistorder i32 %v1_11e08, { 1, 2, 3, 0 }
  uselistorder i32 %v3_11e04, { 1, 0 }
  uselistorder i32 %v5_11de8, { 3, 0, 1, 2, 4, 5, 6 }
  uselistorder i32 %v2_11dd4, { 1, 0, 2 }
  uselistorder i32 %v3_11dd0, { 1, 0, 2 }
  uselistorder i32 %v0_12688, { 1, 0, 2 }
  uselistorder i1 %v3_11da4, { 1, 0, 2 }
  uselistorder i1 %v7_11d84, { 1, 0 }
  uselistorder i1 %v7_11d5c, { 1, 0 }
  uselistorder i32 %v1_11cec, { 1, 0 }
  uselistorder i32 %v1_11ce8, { 3, 1, 0, 2 }
  uselistorder i32 %v0_11cf4, { 0, 2, 1, 3, 6, 5, 4 }
  uselistorder i32 %v2_11ca8, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_11ca0, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_11c34, { 2, 1, 0 }
  uselistorder i32 %v3_11c30, { 1, 0 }
  uselistorder i32 %v3_11c10, { 4, 3, 1, 0, 5, 6, 2 }
  uselistorder i32 %v0_11c04, { 1, 0 }
  uselistorder i32 %v1_11be8, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 %v1_11bd4, { 2, 1, 0 }
  uselistorder i32 %v3_11bd0, { 1, 0 }
  uselistorder i32 %v0_11bd4, { 1, 0 }
  uselistorder i32 %v1_11b64, { 0, 1, 3, 2 }
  uselistorder i32 %v0_11b64, { 0, 1, 3, 2 }
  uselistorder i32 %v1_11b48, { 2, 1, 0 }
  uselistorder i32 %v1_11b44, { 1, 0 }
  uselistorder i32 %v0_11b14, { 0, 2, 1 }
  uselistorder i32 %v1_11b0c, { 1, 0 }
  uselistorder i1 %v7_11ad4, { 0, 3, 1, 2 }
  uselistorder i1 %v2_11ad4, { 1, 2, 0 }
  uselistorder i32 %v2_11acc, { 0, 3, 4, 2, 1 }
  uselistorder i32 %v0_11ac4, { 1, 0 }
  uselistorder i32 %v1_11aa8, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 %v1_11a9c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_11a9c, { 0, 2, 1 }
  uselistorder i32 %v1_11a8c, { 1, 0 }
  uselistorder i32 %v3_11af0, { 4, 7, 5, 6, 1, 0, 9, 3, 2, 8 }
  uselistorder i32 %storemerge1236, { 1, 0, 2 }
  uselistorder i32 %v3_119c4, { 1, 0 }
  uselistorder i32 %v1_119a8, { 1, 0 }
  uselistorder i32 %v1_1199c, { 1, 2, 0 }
  uselistorder i32 %v0_119b0, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1196c, { 2, 1, 0, 3, 5, 4 }
  uselistorder i32 %v2_11960, { 2, 1, 0 }
  uselistorder i32 %v1_11940, { 3, 1, 0, 2, 4, 5 }
  uselistorder i1 %v2_11918, { 1, 0 }
  uselistorder i32 %v0_118d0, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v0_11894, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_11834, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v3_117e4, { 1, 0 }
  uselistorder i32 %v1_1178c, { 1, 0 }
  uselistorder i32 %v3_11748, { 1, 0 }
  uselistorder i32 %v0_1139c2206, { 1, 0 }
  uselistorder i32 %v2_11708, { 1, 0 }
  uselistorder i1 %v7_116d0, { 2, 1, 0 }
  uselistorder i1 %v2_116c0, { 1, 0 }
  uselistorder i1 %v2_1169c, { 1, 0 }
  uselistorder i1 %v2_11678, { 1, 0 }
  uselistorder i1 %v2_11634, { 1, 0 }
  uselistorder i1 %v2_11610, { 1, 0 }
  uselistorder i1 %v2_115e0, { 1, 0, 2 }
  uselistorder i1 %v2_115d8, { 1, 0 }
  uselistorder i1 %v2_115b4, { 1, 0 }
  uselistorder i1 %v2_11598, { 1, 0 }
  uselistorder i1 %v2_1158c, { 1, 0, 2 }
  uselistorder i1 %v2_11584, { 1, 0 }
  uselistorder i1 %v2_11540, { 1, 0, 2 }
  uselistorder i32 %.2002, { 1, 4, 2, 3, 0 }
  uselistorder i32 %v4_11520, { 1, 0, 2 }
  uselistorder i1 %v2_11518, { 1, 0, 2 }
  uselistorder i32 %.2001, { 2, 0, 1 }
  uselistorder i1 %v7_114dc, { 1, 0, 2, 3 }
  uselistorder i1 %v2_114dc, { 1, 2, 0, 3 }
  uselistorder i32 %.2000, { 2, 0, 1 }
  uselistorder i1 %v2_114ac, { 1, 0 }
  uselistorder i1 %v2_1147c, { 1, 0, 2 }
  uselistorder i1 %v2_1145c, { 1, 0, 2 }
  uselistorder i1 %v2_1143c, { 1, 0 }
  uselistorder i1 %v2_11410, { 1, 0, 2 }
  uselistorder i1 %v2_11408, { 1, 0 }
  uselistorder i1 %v2_113dc, { 1, 0, 2 }
  uselistorder i1 %v2_113d4, { 1, 0 }
  uselistorder i1 %v2_113a8, { 1, 0, 2 }
  uselistorder i1 %v2_11380, { 1, 0, 2 }
  uselistorder i1 %v2_11378, { 1, 0 }
  uselistorder i1 %v2_1134c, { 1, 0, 2 }
  uselistorder i1 %v2_11344, { 1, 0 }
  uselistorder i1 %v2_112fc, { 1, 0, 2 }
  uselistorder i1 %v2_112f4, { 1, 0 }
  uselistorder i1 %v2_112c8, { 1, 0, 2 }
  uselistorder i1 %v2_112c0, { 1, 0 }
  uselistorder i1 %v2_11294, { 1, 0, 2 }
  uselistorder i1 %v2_1128c, { 1, 0 }
  uselistorder i1 %v2_11264, { 1, 0, 2 }
  uselistorder i1 %v2_1125c, { 1, 0 }
  uselistorder i1 %v7_1123c, { 1, 0, 2 }
  uselistorder i1 %v2_11234, { 1, 0 }
  uselistorder i1 %v7_11228, { 0, 2, 1, 3, 4 }
  uselistorder i1 %v2_11228, { 2, 0, 1, 3 }
  uselistorder i1 %v2_1121c, { 1, 0, 2 }
  uselistorder i1 %v2_11214, { 1, 0 }
  uselistorder i1 %v2_111e8, { 1, 0, 2 }
  uselistorder i1 %v2_111c0, { 1, 0, 2 }
  uselistorder i1 %v2_111b8, { 1, 0 }
  uselistorder i1 %v2_1118c, { 1, 0, 2 }
  uselistorder i1 %v2_11184, { 1, 0 }
  uselistorder i1 %v7_11160, { 1, 0, 2 }
  uselistorder i1 %v2_11158, { 1, 0 }
  uselistorder i1 %v2_11134, { 1, 0 }
  uselistorder i32 %.1998, { 2, 0, 1 }
  uselistorder i1 %v7_11104, { 0, 3, 2, 1 }
  uselistorder i1 %v2_110fc, { 1, 0 }
  uselistorder i1 %v2_110f0, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 10 }
  uselistorder i32 %.1997, { 2, 1, 0 }
  uselistorder i1 %v7_110dc, { 1, 0, 2 }
  uselistorder i1 %v2_110c4, { 1, 0 }
  uselistorder i1 %v2_110a4, { 1, 0 }
  uselistorder i1 %v2_11060, { 1, 0 }
  uselistorder i1 %v2_11048, { 1, 0 }
  uselistorder i1 %v2_11034, { 1, 0 }
  uselistorder i1 %v2_1101c, { 1, 0 }
  uselistorder i1 %v2_10ff0, { 1, 0, 2 }
  uselistorder i1 %v2_10fbc, { 1, 0, 2 }
  uselistorder i1 %v2_10fb4, { 1, 0 }
  uselistorder i1 %v2_10f8c, { 1, 0, 2 }
  uselistorder i32 %.1995, { 2, 1, 0 }
  uselistorder i1 %v7_10f74, { 0, 3, 2, 1 }
  uselistorder i1 %v2_10f58, { 1, 0, 2 }
  uselistorder i32 %v0_10f6c.pr920, { 0, 2, 1 }
  uselistorder i1 %v2_10f30, { 1, 0, 2 }
  uselistorder i1 %v2_10f18, { 1, 0, 2 }
  uselistorder i1 %v2_10f10, { 1, 0 }
  uselistorder i1 %v2_10ee4, { 1, 0, 2 }
  uselistorder i1 %v2_10edc, { 1, 0 }
  uselistorder i1 %v2_10eb0, { 1, 0, 2 }
  uselistorder i1 %v2_10ea8, { 1, 0 }
  uselistorder i1 %v2_10e7c, { 1, 0, 2 }
  uselistorder i1 %v2_10e54, { 1, 0, 2 }
  uselistorder i1 %v2_10e30, { 1, 0, 2 }
  uselistorder i1 %v2_10e08, { 1, 0, 2 }
  uselistorder i1 %v2_10e00, { 1, 0 }
  uselistorder i1 %v2_10dec, { 1, 0 }
  uselistorder i1 %v7_10dc4, { 0, 2, 1, 5, 4, 3 }
  uselistorder i1 %v2_10dc4, { 2, 0, 1, 3 }
  uselistorder i1 %v7_10db0, { 1, 0, 2 }
  uselistorder i1 %v2_10da8, { 1, 0 }
  uselistorder i1 %v2_10d7c, { 1, 0 }
  uselistorder i1 %v7_10d58, { 1, 0, 2 }
  uselistorder i32 %.1993, { 4, 5, 10, 13, 1, 9, 8, 12, 7, 2, 6, 11, 0, 3 }
  uselistorder i1 %v7_10d40, { 2, 1, 0, 3 }
  uselistorder i1 %v2_10d20, { 1, 0, 2 }
  uselistorder i32 %.1992, { 5, 4, 7, 3, 0, 2, 6, 8, 1 }
  uselistorder i1 %v7_10d04, { 1, 0, 4, 3, 2 }
  uselistorder i1 %v2_10ce4, { 1, 0 }
  uselistorder i1 %v7_10cc0, { 1, 0, 2 }
  uselistorder i1 %v2_10cb8, { 1, 0 }
  uselistorder i1 %v2_10c8c, { 1, 0, 2 }
  uselistorder i32 %.1991, { 0, 1, 2, 5, 4, 3 }
  uselistorder i1 %v7_10c74, { 0, 3, 2, 1 }
  uselistorder i1 %v2_10c58, { 1, 0, 2 }
  uselistorder i32 %.1990, { 3, 2, 0, 1 }
  uselistorder i1 %v2_10c24, { 1, 0, 2 }
  uselistorder i1 %v2_10c1c, { 1, 0 }
  uselistorder i1 %v2_10bec, { 1, 0 }
  uselistorder i1 %v7_10bc8, { 1, 0, 2 }
  uselistorder i1 %v2_10bc0, { 1, 0 }
  uselistorder i1 %v7_10b9c, { 1, 0, 2 }
  uselistorder i1 %v2_10b94, { 1, 0 }
  uselistorder i1 %v2_10b6c, { 1, 0, 2 }
  uselistorder i32 %.1989, { 2, 1, 0 }
  uselistorder i1 %v7_10b54, { 0, 3, 2, 1 }
  uselistorder i32 %.1988, { 2, 0, 1 }
  uselistorder i1 %v7_10b24, { 0, 3, 2, 1 }
  uselistorder i1 %v2_10b18, { 1, 0, 2 }
  uselistorder i1 %v2_10af0, { 1, 0, 2 }
  uselistorder i1 %v2_10ae8, { 1, 0 }
  uselistorder i1 %v2_10abc, { 1, 0, 2 }
  uselistorder i1 %v2_10ab4, { 1, 0 }
  uselistorder i1 %v2_10a94, { 1, 0, 2 }
  uselistorder i1 %v2_10a8c, { 1, 0 }
  uselistorder i1 %v2_10a40, { 1, 0, 2 }
  uselistorder i32 %.1987, { 1, 0 }
  uselistorder i1 %v7_10a18, { 1, 0, 2 }
  uselistorder i1 %v2_10a10, { 1, 0 }
  uselistorder i1 %v2_109dc, { 1, 0 }
  uselistorder i32 %storemerge1213, { 2, 1, 0, 3 }
  uselistorder i32 %.1986, { 8, 11, 7, 6, 10, 5, 1, 4, 9, 2, 0, 3 }
  uselistorder i1 %v7_109a4, { 1, 0, 2 }
  uselistorder i1 %v2_1099c, { 1, 0 }
  uselistorder i1 %v2_10984, { 1, 0 }
  uselistorder i32 %storemerge1211, { 3, 0, 2, 1, 4 }
  uselistorder i1 %v7_10958, { 1, 0, 2 }
  uselistorder i32 %.1985, { 4, 7, 3, 5, 0, 6, 1, 2 }
  uselistorder i32 %.1984, { 3, 5, 2, 4, 0, 1 }
  uselistorder i1 %v7_10934, { 1, 0, 2 }
  uselistorder i1 %v2_10928, { 1, 0 }
  uselistorder i1 %v2_10910, { 1, 0 }
  uselistorder i1 %v2_108fc, { 1, 0 }
  uselistorder i32 %.1983, { 0, 7, 5, 8, 1, 9, 4, 6, 2, 3 }
  uselistorder i1 %v7_108d0, { 1, 0, 4, 3, 2 }
  uselistorder i32 %.1982, { 9, 8, 12, 7, 6, 11, 1, 5, 2, 4, 10, 0, 3 }
  uselistorder i1 %v7_108b0, { 3, 2, 1, 0, 4 }
  uselistorder i32 %.1981, { 9, 8, 13, 7, 2, 6, 12, 1, 11, 5, 4, 10, 0, 14, 15, 3 }
  uselistorder i1 %v7_1083c, { 2, 1, 0, 3 }
  uselistorder i1 %v7_10820, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v2_10820, { 1, 2, 0, 3 }
  uselistorder i1 %v2_10800, { 1, 0, 2 }
  uselistorder i1 %v2_107c8, { 1, 0, 2 }
  uselistorder i32 %.1980, { 4, 0, 2, 3, 1 }
  uselistorder i1 %v2_10788, { 1, 0, 2 }
  uselistorder i1 %v2_10774, { 1, 0 }
  uselistorder i1 %v7_1076c, { 1, 0, 2, 3 }
  uselistorder i1 %v2_1076c, { 1, 0, 2 }
  uselistorder i1 %v2_10744, { 1, 0, 2 }
  uselistorder i32 %.1978, { 3, 1, 2, 0 }
  uselistorder i32 %v4_10724, { 1, 0, 2 }
  uselistorder i1 %v2_1071c, { 1, 0, 2 }
  uselistorder i32 %.1977, { 2, 0, 1 }
  uselistorder i1 %v2_106c0, { 1, 0, 2 }
  uselistorder i1 %v2_106a0, { 1, 0, 2 }
  uselistorder i1 %v2_10678, { 1, 0 }
  uselistorder i1 %v2_10670, { 1, 0, 2 }
  uselistorder i1 %v7_10648, { 2, 1, 3, 0, 4, 5 }
  uselistorder i1 %v2_10648, { 1, 2, 3, 0, 4 }
  uselistorder i1 %v2_10628, { 1, 0, 2 }
  uselistorder i1 %v2_10620, { 1, 0, 2 }
  uselistorder i1 %v7_1060c, { 1, 2, 0, 3, 4 }
  uselistorder i1 %v2_1060c, { 1, 2, 0, 3 }
  uselistorder i1 %v7_105f0, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v2_105f0, { 1, 2, 0, 3 }
  uselistorder i1 %v7_105d4, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v2_105d4, { 1, 2, 0, 3 }
  uselistorder i32 %v1_105c0, { 0, 4, 2, 3, 1 }
  uselistorder i1 %v7_10584, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v2_10584, { 1, 2, 0, 3 }
  uselistorder i1 %v2_10574, { 1, 0 }
  uselistorder i32 %v2_1054c, { 1, 0 }
  uselistorder i32 %v0_10540, { 1, 4, 2, 3, 0 }
  uselistorder i32 %v0_114cc, { 0, 8, 5, 4, 7, 1, 6, 2, 3, 9 }
  uselistorder i32 %.1974, { 0, 3, 2, 1 }
  uselistorder i1 %v2_104bc, { 1, 0, 2 }
  uselistorder i32 %.1973, { 0, 4, 2, 3, 5, 6, 1 }
  uselistorder i1 %v2_1049c, { 1, 0 }
  uselistorder i32 %v2_10474, { 1, 0 }
  uselistorder i32 %v1_1068c, { 1, 0 }
  uselistorder i1 %v2_10460, { 1, 0, 2 }
  uselistorder i32 %v2_1044c, { 1, 0 }
  uselistorder i32 %v2_10430, { 1, 0 }
  uselistorder i32 %v1_1044c, { 2, 0, 1 }
  uselistorder i1 %v2_1041c, { 1, 0, 2 }
  uselistorder i1 %v2_1040c, { 1, 0 }
  uselistorder i1 %v7_10404, { 1, 0, 2, 3 }
  uselistorder i1 %v2_10404, { 1, 0, 2 }
  uselistorder i1 %v2_103f0, { 1, 0, 2 }
  uselistorder i1 %v2_103e8, { 1, 0 }
  uselistorder i32 %v2_103c0, { 1, 0 }
  uselistorder i32 %v0_103b4, { 1, 2, 0 }
  uselistorder i32 %v4_10394, { 1, 0, 2 }
  uselistorder i32 %.1969, { 9, 8, 13, 0, 7, 6, 12, 5, 1, 4, 11, 2, 10, 14, 15, 3 }
  uselistorder i1 %v7_10358, { 2, 1, 0, 3 }
  uselistorder i32 %storemerge1193, { 0, 2, 1, 3 }
  uselistorder i32 %.1968, { 2, 3, 0, 1 }
  uselistorder i32 %v2_10318, { 1, 0 }
  uselistorder i32 %v0_11508, { 1, 2, 0, 3 }
  uselistorder i1 %v7_10300, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v2_10300, { 1, 2, 0, 3 }
  uselistorder i32 %v0_108bc, { 0, 2, 1 }
  uselistorder i1 %v2_102dc, { 1, 0, 2 }
  uselistorder i32 %.1967, { 3, 0, 4, 1, 2 }
  uselistorder i32 %.1966, { 3, 4, 5, 9, 1, 0, 10, 6, 11, 7, 12, 8, 2 }
  uselistorder i1 %v7_102b4, { 0, 3, 2, 1 }
  uselistorder i32 %.1965, { 2, 4, 0, 3, 1 }
  uselistorder i1 %v7_10298, { 0, 3, 2, 1 }
  uselistorder i1 %v7_102842024, { 0, 2, 1, 4, 3 }
  uselistorder i1 %v2_102842022, { 2, 0, 3, 1, 4 }
  uselistorder i1 %v2_10290, { 1, 0 }
  uselistorder i32 %.1964, { 3, 2, 4, 0, 1 }
  uselistorder i1 %v7_10264, { 0, 3, 2, 1 }
  uselistorder i32 %.1963, { 0, 3, 1, 2 }
  uselistorder i32 %.1962, { 4, 0, 6, 1, 5, 2, 3 }
  uselistorder i1 %v7_10218, { 1, 0, 3, 2, 4, 5 }
  uselistorder i1 %v2_10218, { 1, 2, 0, 3, 4 }
  uselistorder i32 %.1961, { 1, 2, 0, 7, 6, 8, 5, 9, 3, 4 }
  uselistorder i1 %v7_1020c, { 0, 3, 2, 1 }
  uselistorder i32 %.1960, { 3, 2, 4, 0, 1 }
  uselistorder i1 %v7_101f0, { 1, 0, 4, 3, 6, 5, 2 }
  uselistorder i1 %v2_101f0, { 1, 0, 2, 3 }
  uselistorder i32 %.1959, { 0, 3, 1, 4, 2 }
  uselistorder i1 %v7_101d4, { 1, 0, 4, 3, 6, 5, 2 }
  uselistorder i1 %v2_101d4, { 1, 2, 0, 3, 4 }
  uselistorder i1 %v2_101cc, { 1, 0 }
  uselistorder i1 %v7_101c0, { 0, 2, 1, 3, 4 }
  uselistorder i1 %v2_101c0, { 1, 0, 2, 3 }
  uselistorder i32 %.1958, { 4, 3, 5, 1, 0, 2 }
  uselistorder i32 %storemerge1180, { 2, 0, 1, 3 }
  uselistorder i32 %.1957, { 0, 5, 1, 4, 2, 3 }
  uselistorder i1 %v7_10184, { 0, 3, 2, 1 }
  uselistorder i1 %v2_10184, { 1, 0, 2 }
  uselistorder i1 %v7_10174, { 0, 2, 1, 3, 4 }
  uselistorder i1 %v2_10174, { 1, 0, 2, 3 }
  uselistorder i32 %.1956, { 0, 2, 1 }
  uselistorder i1 %v7_10168, { 2, 1, 0 }
  uselistorder i1 %v7_1014c, { 1, 0, 2, 3 }
  uselistorder i32 %.1955, { 2, 4, 3, 5, 0, 6, 1 }
  uselistorder i1 %v7_10140, { 0, 3, 2, 1 }
  uselistorder i1 %v2_10138, { 1, 0 }
  uselistorder i1 %v2_10120, { 1, 0 }
  uselistorder i1 %v7_100f8, { 1, 0, 2, 3 }
  uselistorder i32 %.1954, { 6, 9, 7, 10, 0, 11, 5, 2, 4, 8, 1, 3 }
  uselistorder i1 %v7_100ec, { 1, 0, 4, 3, 2 }
  uselistorder i32 %storemerge1175, { 0, 2, 1, 3 }
  uselistorder i32 %.1953, { 4, 7, 2, 5, 0, 6, 1, 3 }
  uselistorder i1 %v2_100b0, { 1, 0 }
  uselistorder i32 %storemerge1173, { 2, 1, 0, 3 }
  uselistorder i1 %v7_10084, { 0, 3, 2, 1 }
  uselistorder i32 %.1952, { 3, 4, 2, 5, 0, 1 }
  uselistorder i32 %.1951, { 0, 3, 1, 2 }
  uselistorder i32 %.1950, { 2, 3, 0, 1 }
  uselistorder i1 %v7_10044, { 2, 1, 0 }
  uselistorder i32 %.1949, { 0, 5, 3, 4, 1, 2 }
  uselistorder i1 %v2_10024, { 1, 0 }
  uselistorder i1 %v2_10010, { 1, 0 }
  uselistorder i1 %v2_fffc, { 1, 0 }
  uselistorder i1 %v7_ffdc, { 0, 3, 2, 1 }
  uselistorder i1 %v2_ffdc, { 1, 0, 2, 3 }
  uselistorder i1 %v2_ffd4, { 1, 0 }
  uselistorder i1 %v2_ffc0, { 1, 0 }
  uselistorder i32 %.1947, { 3, 9, 0, 8, 7, 6, 1, 5, 4, 2 }
  uselistorder i1 %v7_ff9c, { 4, 3, 2, 1, 0, 7, 6, 5 }
  uselistorder i32 %.1946, { 0, 2, 1 }
  uselistorder i1 %v7_ff80, { 1, 0, 4, 3, 6, 5, 2 }
  uselistorder i1 %v2_ff80, { 0, 2, 1, 3, 4 }
  uselistorder i32 %.1945, { 3, 8, 4, 7, 5, 6, 0, 1, 2 }
  uselistorder i1 %v7_ff68, { 2, 1, 0 }
  uselistorder i1 %v7_ff54, { 2, 1, 0 }
  uselistorder i1 %v7_ff40, { 0, 3, 2, 1 }
  uselistorder i1 %v2_ff40, { 1, 0, 2, 3 }
  uselistorder i32 %.1942, { 1, 0 }
  uselistorder i1 %v7_ff20, { 0, 2, 1, 3, 4 }
  uselistorder i1 %v2_ff20, { 1, 0, 2, 3 }
  uselistorder i32 %.1941, { 6, 5, 3, 4, 0, 1, 2 }
  uselistorder i1 %v7_ff14, { 0, 3, 2, 1 }
  uselistorder i32 %.1940, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i1 %v7_fefc, { 3, 2, 1, 0, 6, 5, 4 }
  uselistorder i32 %v3_fe74, { 0, 2, 1 }
  uselistorder i32 %v1_fe70, { 0, 195, 205, 194, 1, 2, 196, 197, 199, 198, 200, 201, 202, 204, 190, 191, 193, 192, 187, 188, 189, 206, 183, 184, 186, 185, 179, 180, 182, 181, 175, 176, 178, 177, 171, 172, 174, 173, 167, 168, 170, 169, 164, 165, 166, 203, 160, 161, 163, 162, 156, 157, 159, 158, 151, 150, 149, 148, 147, 146, 145, 144, 3, 143, 142, 141, 140, 153, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 4, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 154, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 5, 79, 78, 77, 76, 75, 74, 6, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 7, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 8, 45, 44, 9, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 152, 31, 30, 29, 28, 27, 26, 25, 24, 10, 155, 23, 22, 21, 20, 19, 18, 17, 16, 15, 11, 14, 13, 12 }
  uselistorder i32 %v1_fe6c, { 309, 310, 0, 1, 291, 292, 293, 294, 295, 296, 347, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 348, 311, 312, 313, 314, 315, 316, 346, 317, 318, 345, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 343, 287, 286, 285, 284, 283, 282, 281, 280, 279, 278, 277, 276, 275, 274, 273, 272, 271, 270, 290, 269, 268, 267, 266, 265, 264, 263, 262, 261, 260, 259, 258, 257, 256, 255, 254, 253, 252, 251, 250, 249, 248, 247, 246, 245, 244, 243, 242, 241, 240, 239, 238, 237, 236, 235, 234, 233, 232, 231, 230, 229, 228, 227, 226, 225, 224, 223, 222, 221, 220, 219, 218, 217, 216, 215, 214, 213, 212, 211, 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 289, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 288, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v3_fe60, { 11, 3, 4, 5, 2, 6, 7, 8, 9, 10, 0, 1 }
  uselistorder i32 %v1_fe58, { 187, 188, 199, 168, 169, 170, 171, 172, 173, 174, 175, 177, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 198, 197, 167, 166, 165, 164, 162, 163, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 150, 151, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 138, 139, 136, 137, 135, 134, 133, 132, 130, 131, 128, 129, 127, 126, 125, 124, 123, 122, 120, 121, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 84, 85, 82, 83, 80, 81, 79, 78, 76, 77, 75, 74, 73, 72, 71, 70, 68, 69, 67, 66, 64, 65, 62, 63, 61, 60, 59, 58, 56, 57, 54, 55, 53, 52, 50, 51, 48, 49, 46, 47, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_fe54, { 0, 4, 1, 2, 3, 5 }
  uselistorder i32 %v4_fe44, { 1, 0 }
  uselistorder i32 %v0_fe34, { 0, 1, 3, 2 }
  uselistorder i32 %v2_fe08, { 1, 0, 2, 3, 4 }
  uselistorder i32 %stack_var_-2036.0, { 0, 3, 2, 1 }
  uselistorder %sockaddr* %tmp1330, { 1, 0 }
  uselistorder i32 %v2_12800, { 1, 0 }
  uselistorder i32 %v2_121f0, { 1, 2, 3, 0 }
  uselistorder i32* %v2_11d28, { 3, 2, 7, 4, 1, 5, 6, 8, 9, 0 }
  uselistorder i32 %v2_11d20, { 3, 2, 7, 4, 1, 5, 6, 8, 9, 0 }
  uselistorder i32 %v2_12554, { 1, 0 }
  uselistorder i32 %v2_11afc, { 0, 4, 1, 5, 2, 7, 3, 6 }
  uselistorder i32 %v2_fdf8, { 1, 3, 5, 6, 0, 2, 4, 7, 8 }
  uselistorder i32 %v4_fc3c, { 1, 0 }
  uselistorder i32 %v1_fc3c, { 1, 0 }
  uselistorder i32 %v3_fc00, { 1, 0 }
  uselistorder i32 %v4_fbf0, { 2, 1, 0, 5, 4, 3 }
  uselistorder i32 %v0_fbe4, { 0, 2, 1 }
  uselistorder i32 %v0_fb8c, { 0, 3, 1, 4, 2 }
  uselistorder i32 %v3_fb2c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_fb14, { 0, 2, 1 }
  uselistorder i32 %v0_fafc, { 2, 1, 0 }
  uselistorder i32 %v0_fad8, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %storemerge1238, { 1, 0 }
  uselistorder i32 %v0_f9f0, { 2, 0, 1, 3, 4 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 13, 11, 12 }
  uselistorder i32* %stack_var_-92, { 1, 2, 3, 0, 4 }
  uselistorder i32* %stack_var_-64, { 1, 0, 2 }
  uselistorder i32* %stack_var_-48, { 1, 4, 5, 3, 6, 2, 7, 0, 8, 9 }
  uselistorder i8* %stack_var_-56, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32* %sl.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 3, 6, 1, 5, 4, 9, 10, 7, 8, 14, 11, 13, 15, 12 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 10, 6, 7, 5, 8, 9 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 6, 11, 12, 13, 27, 28, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
  uselistorder i32* %r3.global-to-local, { 82, 8, 9, 10, 11, 12, 13, 14, 15, 16, 110, 17, 18, 19, 83, 64, 84, 85, 50, 65, 66, 67, 68, 1, 3, 4, 5, 6, 7, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 77, 78, 79, 59, 60, 61, 62, 63, 69, 70, 71, 72, 73, 74, 75, 76, 86, 87, 88, 89, 90, 91, 80, 81, 92, 93, 94, 95, 96, 97, 98, 100, 102, 101, 99, 103, 104, 105, 106, 111, 107, 108, 109, 113, 112, 2, 115, 114, 49, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 608, 142, 141, 144, 143, 146, 145, 151, 147, 148, 149, 150, 153, 152, 169, 154, 155, 156, 157, 158, 159, 604, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 174, 172, 173, 176, 175, 267, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 603, 189, 190, 191, 192, 193, 194, 609, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 602, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 0, 222, 223, 224, 225, 226, 227, 601, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 600, 256, 257, 258, 259, 260, 261, 599, 262, 263, 264, 265, 266, 270, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 605, 312, 313, 314, 315, 316, 317, 598, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 518, 519, 520, 521, 537, 522, 523, 524, 525, 526, 527, 528, 529, 530, 607, 531, 532, 533, 534, 535, 536, 606, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 517, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 516, 580, 581, 582, 583, 584, 585, 515, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 353, 354, 355, 356, 357, 358, 359, 514, 360, 361, 362, 363, 364, 365, 513, 366, 368, 367, 369, 512, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 396, 394, 395, 397, 398, 409, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 426, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 436, 427, 428, 429, 430, 431, 432, 433, 434, 435, 440, 437, 438, 439, 441, 449, 442, 443, 444, 445, 447, 446, 448, 451, 450, 462, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 466, 463, 464, 465, 467, 468, 469, 470, 511, 471, 472, 475, 473, 474, 476, 477, 478, 479, 510, 480, 481, 482, 483, 484, 486, 485, 487, 494, 488, 489, 491, 490, 493, 492, 495, 496, 498, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509 }
  uselistorder i32* %r2.global-to-local, { 75, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 12, 13, 15, 16, 17, 49, 36, 32, 37, 38, 39, 0, 1, 2, 43, 18, 19, 20, 22, 21, 23, 25, 24, 26, 28, 27, 29, 31, 30, 33, 35, 34, 44, 46, 45, 40, 41, 42, 50, 51, 52, 53, 54, 55, 56, 47, 48, 57, 58, 59, 60, 61, 63, 65, 64, 134, 62, 66, 67, 68, 69, 74, 70, 71, 72, 73, 76, 78, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 135, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133 }
  uselistorder i32* %r1.global-to-local, { 46, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 47, 35, 36, 31, 32, 37, 38, 0, 1, 2, 39, 63, 64, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 40, 41, 72, 48, 49, 50, 51, 42, 43, 44, 45, 52, 53, 54, 56, 57, 58, 55, 59, 60, 61, 65, 62, 112, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 103, 109, 105, 106, 107, 108, 110, 111 }
  uselistorder i32* %r0.global-to-local, { 115, 114, 116, 11, 10, 132, 131, 13, 12, 14, 15, 16, 18, 17, 19, 20, 21, 22, 24, 23, 26, 25, 27, 28, 29, 31, 30, 32, 34, 33, 35, 37, 36, 38, 134, 133, 40, 106, 108, 107, 135, 137, 136, 88, 87, 90, 89, 91, 92, 110, 109, 111, 1, 0, 2, 4, 3, 6, 5, 7, 8, 9, 118, 117, 42, 41, 43, 39, 44, 45, 46, 47, 49, 48, 51, 50, 53, 52, 54, 55, 56, 57, 59, 58, 61, 60, 63, 62, 64, 65, 66, 67, 69, 68, 71, 70, 73, 72, 74, 75, 76, 77, 79, 78, 81, 80, 83, 82, 84, 85, 86, 94, 93, 96, 95, 100, 97, 98, 99, 120, 119, 122, 121, 102, 101, 103, 104, 105, 113, 112, 140, 138, 124, 123, 125, 127, 126, 209, 128, 129, 130, 147, 207, 139, 141, 142, 143, 144, 146, 145, 148, 153, 149, 150, 151, 152, 155, 154, 164, 156, 157, 159, 158, 160, 162, 161, 163, 165, 166, 168, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 208, 189, 190, 191, 192, 193, 195, 194, 197, 196, 198, 202, 199, 200, 201, 203, 204, 205, 206 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 35, 36, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34 }
  uselistorder i32* %ip.global-to-local, { 21, 22, 2, 23, 3, 15, 0, 1, 19, 4, 5, 7, 6, 10, 9, 12, 11, 13, 14, 18, 20, 16, 17, 24, 25, 26, 27, 29, 28, 30, 31, 34, 32, 33, 35, 8, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }
  uselistorder i32* %fp.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 38, 39, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37 }
  uselistorder i1* %cpsr_z.global-to-local, { 132, 2, 879, 117, 16, 17, 769, 19, 20, 21, 122, 121, 123, 124, 125, 69, 70, 71, 93, 94, 95, 96, 97, 4, 5, 11, 6, 7, 8, 9, 10, 1, 12, 92, 13, 14, 113, 22, 23, 24, 25, 26, 32, 27, 28, 29, 30, 31, 151, 33, 129, 34, 35, 36, 37, 43, 38, 39, 40, 41, 42, 150, 44, 112, 45, 46, 47, 48, 54, 49, 50, 51, 52, 53, 3, 55, 15, 56, 57, 58, 59, 65, 60, 61, 62, 63, 64, 903, 66, 882, 67, 68, 72, 73, 904, 78, 74, 75, 76, 77, 79, 80, 81, 115, 82, 898, 88, 83, 84, 85, 86, 87, 89, 90, 91, 114, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 902, 771, 126, 127, 128, 130, 131, 772, 116, 18, 118, 119, 120, 133, 135, 134, 136, 137, 139, 141, 140, 770, 138, 142, 143, 144, 145, 146, 147, 154, 148, 149, 152, 153, 776, 775, 773, 155, 156, 894, 157, 158, 774, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 909, 175, 176, 177, 178, 179, 768, 180, 908, 181, 182, 183, 184, 185, 186, 187, 767, 188, 189, 190, 766, 191, 192, 193, 765, 194, 195, 196, 197, 198, 199, 764, 200, 201, 202, 763, 203, 204, 762, 205, 206, 207, 761, 208, 907, 209, 210, 211, 212, 213, 214, 878, 215, 216, 760, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 759, 236, 237, 238, 239, 240, 758, 241, 242, 243, 244, 245, 246, 247, 757, 248, 249, 756, 250, 251, 893, 252, 755, 253, 254, 754, 255, 256, 892, 257, 753, 258, 259, 752, 260, 261, 262, 263, 264, 751, 265, 266, 267, 750, 268, 269, 749, 270, 271, 891, 272, 748, 273, 274, 275, 276, 277, 747, 278, 279, 280, 746, 281, 282, 745, 283, 284, 0, 285, 744, 286, 287, 743, 288, 289, 890, 290, 742, 291, 292, 741, 293, 294, 889, 295, 740, 296, 297, 298, 888, 299, 739, 300, 301, 302, 303, 738, 304, 305, 737, 306, 307, 308, 309, 736, 310, 311, 312, 735, 313, 314, 734, 315, 316, 887, 317, 733, 318, 319, 320, 886, 321, 732, 322, 323, 324, 325, 731, 326, 327, 328, 329, 330, 730, 331, 332, 333, 334, 335, 729, 336, 337, 338, 728, 339, 340, 341, 342, 343, 344, 727, 345, 346, 726, 347, 885, 348, 349, 350, 725, 351, 352, 724, 353, 354, 355, 356, 723, 357, 358, 359, 722, 360, 361, 721, 362, 363, 884, 364, 365, 366, 720, 367, 368, 369, 370, 371, 719, 372, 373, 883, 374, 375, 376, 377, 378, 718, 379, 380, 717, 381, 382, 901, 383, 716, 384, 385, 715, 386, 387, 900, 388, 714, 389, 390, 713, 391, 392, 393, 394, 712, 395, 396, 397, 398, 711, 399, 400, 401, 402, 710, 403, 404, 405, 709, 406, 880, 407, 408, 409, 410, 411, 412, 413, 708, 414, 415, 707, 416, 899, 417, 418, 706, 419, 420, 421, 795, 796, 705, 797, 798, 799, 800, 801, 704, 802, 881, 803, 804, 703, 805, 806, 807, 906, 808, 702, 809, 810, 701, 811, 812, 905, 813, 814, 815, 700, 816, 817, 818, 819, 699, 820, 821, 822, 698, 823, 897, 824, 697, 825, 896, 826, 827, 828, 829, 830, 831, 696, 832, 833, 834, 895, 835, 695, 836, 837, 694, 838, 839, 794, 840, 841, 842, 693, 843, 793, 844, 845, 846, 847, 848, 849, 850, 692, 851, 852, 853, 691, 854, 855, 690, 856, 857, 792, 858, 689, 859, 860, 861, 791, 862, 688, 863, 790, 864, 865, 789, 866, 867, 868, 869, 687, 870, 871, 872, 873, 874, 875, 686, 422, 423, 424, 425, 685, 426, 427, 428, 684, 429, 788, 430, 431, 432, 433, 434, 683, 435, 787, 436, 437, 786, 438, 439, 785, 440, 441, 442, 443, 444, 445, 446, 447, 448, 682, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 681, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 680, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 679, 519, 520, 521, 678, 522, 523, 524, 525, 877, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 677, 536, 537, 538, 676, 539, 540, 541, 542, 675, 543, 784, 544, 545, 546, 547, 548, 549, 674, 550, 551, 552, 673, 553, 554, 555, 672, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 876, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 671, 577, 783, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 670, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 669, 599, 782, 600, 601, 602, 603, 604, 605, 606, 607, 608, 668, 609, 610, 611, 612, 613, 614, 615, 667, 616, 781, 617, 618, 780, 619, 620, 621, 622, 666, 623, 779, 624, 625, 778, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 777, 665 }
  uselistorder i1* %cpsr_c.global-to-local, { 125, 0, 859, 111, 13, 14, 15, 744, 16, 17, 18, 19, 116, 115, 117, 118, 119, 67, 68, 69, 91, 92, 93, 94, 2, 3, 9, 4, 5, 6, 7, 8, 753, 10, 20, 11, 12, 107, 21, 22, 23, 24, 30, 25, 26, 27, 28, 29, 141, 31, 70, 32, 33, 34, 35, 41, 36, 37, 38, 39, 40, 755, 42, 855, 43, 44, 45, 46, 52, 47, 48, 49, 50, 51, 639, 53, 773, 54, 55, 56, 57, 63, 58, 59, 60, 61, 62, 754, 64, 862, 65, 66, 71, 72, 876, 77, 73, 74, 75, 76, 78, 79, 80, 109, 81, 886, 87, 82, 83, 84, 85, 86, 88, 89, 90, 108, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 880, 745, 120, 121, 122, 123, 124, 746, 110, 743, 112, 113, 114, 126, 128, 127, 129, 131, 133, 132, 747, 130, 134, 135, 136, 137, 138, 144, 139, 140, 142, 143, 751, 750, 748, 145, 146, 872, 147, 148, 149, 749, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 885, 165, 166, 167, 168, 742, 169, 884, 170, 171, 172, 173, 174, 175, 741, 176, 177, 178, 740, 179, 180, 181, 739, 182, 183, 184, 185, 186, 187, 738, 188, 189, 190, 737, 191, 192, 736, 193, 194, 195, 735, 196, 883, 197, 198, 199, 200, 201, 202, 858, 203, 204, 734, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 733, 224, 225, 226, 227, 228, 732, 229, 230, 231, 232, 233, 234, 235, 731, 236, 237, 730, 238, 239, 871, 240, 729, 241, 242, 728, 243, 244, 870, 245, 727, 246, 247, 726, 248, 249, 250, 251, 252, 725, 253, 254, 255, 724, 256, 257, 723, 258, 259, 888, 260, 722, 261, 262, 263, 264, 721, 265, 266, 267, 720, 268, 269, 719, 270, 271, 1, 272, 718, 273, 274, 717, 275, 276, 869, 277, 716, 278, 279, 715, 280, 281, 868, 282, 714, 283, 284, 285, 887, 286, 713, 287, 288, 289, 290, 712, 291, 292, 711, 293, 294, 295, 710, 296, 297, 298, 709, 299, 300, 708, 301, 302, 867, 303, 707, 304, 305, 306, 866, 307, 706, 308, 309, 310, 311, 705, 312, 313, 314, 315, 704, 316, 317, 318, 319, 320, 703, 321, 322, 702, 323, 324, 325, 326, 701, 327, 328, 700, 329, 865, 330, 331, 332, 699, 333, 334, 698, 335, 336, 337, 338, 697, 339, 340, 341, 696, 342, 343, 695, 344, 345, 864, 346, 347, 348, 694, 349, 350, 351, 352, 353, 693, 354, 355, 879, 356, 357, 358, 359, 360, 692, 361, 362, 691, 363, 364, 878, 365, 690, 366, 367, 689, 368, 369, 877, 370, 688, 371, 372, 687, 373, 374, 375, 686, 376, 377, 378, 685, 379, 380, 381, 684, 382, 383, 384, 683, 385, 861, 386, 387, 388, 389, 390, 391, 392, 682, 393, 394, 681, 395, 860, 396, 397, 680, 398, 399, 774, 775, 776, 679, 777, 778, 779, 780, 781, 678, 782, 863, 783, 784, 677, 785, 786, 787, 882, 788, 676, 789, 790, 675, 791, 792, 881, 793, 794, 795, 674, 796, 797, 798, 799, 673, 800, 801, 802, 672, 803, 875, 804, 671, 805, 874, 806, 807, 808, 809, 810, 811, 670, 812, 813, 814, 873, 815, 669, 816, 817, 668, 818, 819, 772, 820, 821, 822, 667, 823, 771, 824, 825, 826, 827, 828, 829, 666, 830, 831, 832, 665, 833, 834, 664, 835, 836, 770, 837, 663, 838, 839, 840, 769, 841, 662, 842, 768, 843, 844, 767, 845, 846, 847, 848, 661, 849, 850, 851, 852, 853, 854, 660, 400, 401, 659, 402, 403, 404, 658, 405, 766, 406, 407, 408, 409, 410, 657, 411, 765, 412, 413, 764, 414, 415, 763, 416, 417, 418, 419, 420, 421, 422, 423, 424, 656, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 655, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 654, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 653, 490, 491, 492, 652, 493, 494, 495, 496, 857, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 651, 507, 508, 509, 650, 510, 511, 512, 513, 649, 514, 762, 515, 516, 517, 518, 519, 520, 648, 521, 522, 523, 647, 524, 525, 526, 646, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 856, 538, 539, 540, 541, 542, 543, 544, 545, 546, 645, 547, 761, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 644, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 643, 569, 760, 570, 571, 572, 573, 574, 575, 576, 577, 642, 578, 579, 580, 581, 582, 583, 584, 641, 585, 759, 586, 587, 758, 588, 589, 590, 591, 640, 592, 757, 593, 594, 756, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 752, 638 }
  uselistorder i32 (i8*)* @inet_addr, { 0, 2, 1, 3, 4 }
  uselistorder [15 x i8]* @global_var_13880.135, { 1, 0 }
  uselistorder i8 31, { 8, 2, 3, 9, 10, 4, 5, 6, 7, 0, 1 }
  uselistorder i32* (i32*, i32*, i32)* @memcpy, { 1, 0, 2 }
  uselistorder i32* (i32*, i32*, i32)* @memmove, { 1, 0, 2 }
  uselistorder i32* bitcast ([3 x i8]* @global_var_13938.283 to i32*), { 4, 2, 3, 1, 0, 6, 5 }
  uselistorder [3 x i8]* @global_var_13938.283, { 1, 0 }
  uselistorder i8 58, { 9, 10, 6, 15, 7, 8, 5, 14, 4, 13, 2, 3, 0, 1, 11, 12 }
  uselistorder i8 57, { 9, 10, 6, 13, 7, 8, 5, 12, 4, 11, 2, 3, 0, 1 }
  uselistorder i8 62, { 12, 13, 9, 2, 10, 11, 8, 1, 7, 0, 5, 6, 3, 4 }
  uselistorder i8 61, { 12, 13, 9, 2, 10, 11, 8, 1, 7, 0, 5, 6, 3, 4 }
  uselistorder i32 (i32, i32*, i32, i32)* @send, { 19, 10, 9, 11, 2, 18, 16, 5, 20, 28, 21, 26, 27, 29, 17, 30, 15, 22, 8, 7, 6, 4, 3, 12, 23, 14, 24, 13, 25, 0, 1, 31 }
  uselistorder i8 -3, { 1, 2, 3, 0 }
  uselistorder i8 -4, { 1, 2, 3, 0 }
  uselistorder i32 (i32, i32*, i32, i32)* @recv, { 2, 0, 5, 1, 4, 3, 6 }
  uselistorder i32 (i32)* @function_12968, { 26, 25, 37, 36, 30, 38, 35, 34, 33, 32, 31, 29, 28, 27, 24, 23, 9, 22, 21, 20, 39, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 8, 7, 6, 5, 2, 1, 0, 4, 3 }
  uselistorder i32 (i32, i32, i32, i32)* @function_130b0, { 4, 2, 3, 1, 0 }
  uselistorder i32 (i32, i32*)* @function_1293c, { 1, 2, 8, 0, 3, 4, 5, 6, 7, 9, 10, 32, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 35, 25, 26, 27, 28, 29, 30, 31, 34, 36, 33 }
  uselistorder i32 (i32)* @function_12a20, { 29, 28, 22, 30, 27, 26, 25, 24, 23, 21, 20, 3, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 1, 0, 2 }
  uselistorder i8* @global_var_1bd21.191, { 4, 3, 2, 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_1bd20.190 to i8*), { 4, 0, 3, 2, 1 }
  uselistorder i32 ptrtoint (i8** @global_var_1bd20.190 to i32), { 1, 0 }
  uselistorder i32 284, { 3, 4, 5, 6, 0, 1, 2, 7 }
  uselistorder i32* @r7, { 40, 41, 21, 22, 23, 29, 30, 31, 16, 20, 0, 8, 38, 24, 25, 1, 9, 26, 2, 10, 27, 3, 11, 28, 4, 12, 18, 32, 13, 17, 33, 14, 34, 35, 36, 37, 39, 15, 42, 175, 176, 177, 124, 125, 126, 127, 43, 5, 44, 45, 46, 47, 48, 49, 19, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 101, 97, 98, 99, 100, 6, 102, 103, 104, 105, 106, 107, 112, 108, 109, 110, 111, 7, 113, 114, 115, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 178, 179, 180, 181, 182, 183, 116, 117, 118, 119, 120, 121, 122, 123 }
  uselistorder i32* @r6, { 38, 47, 55, 56, 57, 58, 59, 60, 13, 14, 15, 16, 17, 61, 18, 19, 43, 62, 63, 64, 65, 66, 67, 39, 44, 10, 11, 12, 48, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 49, 50, 51, 52, 45, 46, 68, 69, 70, 71, 72, 53, 54, 73, 74, 7, 75, 76, 77, 78, 268, 269, 270, 194, 195, 196, 197, 0, 79, 80, 81, 82, 83, 84, 2, 85, 86, 87, 88, 89, 8, 90, 91, 92, 93, 94, 95, 96, 1, 97, 98, 99, 3, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 198, 4, 199, 5, 200, 6, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 271, 272, 273, 274, 275, 276, 277, 278, 279, 183, 186, 184, 185, 187, 188, 9, 189, 190, 191, 192, 193 }
  uselistorder i32 1712, { 1, 0 }
  uselistorder i32* @sp, { 2, 0, 3, 1 }
  uselistorder i32 1840, { 2, 0, 1 }
  uselistorder i32 ()* @function_f76c, { 3, 2, 1, 0 }
  uselistorder i32 5888, { 1, 0 }
  uselistorder i32 (i32, i32*, i32, i32, %sockaddr*, i32*)* @recvfrom, { 2, 0, 1, 3 }
  uselistorder i32 (i32, i32*, i32, i32, %sockaddr*, i32)* @sendto, { 0, 1, 9, 2, 3, 4, 5, 6, 7, 8, 10 }
  uselistorder i32 16384, { 31, 51, 32, 52, 33, 53, 34, 54, 35, 55, 36, 56, 13, 57, 12, 68, 11, 49, 10, 50, 9, 58, 8, 59, 7, 60, 6, 61, 5, 62, 4, 63, 3, 64, 2, 65, 29, 66, 30, 67, 27, 70, 28, 71, 25, 26, 69, 37, 72, 0, 73, 1, 74, 15, 75, 40, 76, 39, 77, 41, 78, 42, 79, 14, 80, 38, 81, 16, 82, 17, 83, 18, 84, 43, 85, 19, 86, 44, 87, 20, 88, 21, 89, 22, 90, 23, 91, 24, 92, 45, 46, 47, 48 }
  uselistorder i32 (i32, i32, i32, i32)* @function_de50, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_ddf4, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 53, { 1, 0, 2 }
  uselistorder i32 78, { 1, 0, 2, 3 }
  uselistorder i32 182, { 1, 0 }
  uselistorder i32 247, { 4, 0, 1, 2, 3 }
  uselistorder i32 181, { 1, 0, 2 }
  uselistorder i32 51, { 2, 0, 3, 1 }
  uselistorder i32 200, { 1, 0 }
  uselistorder i32 71, { 1, 0 }
  uselistorder i32 186, { 1, 0, 2 }
  uselistorder i32 135, { 1, 0, 2 }
  uselistorder i32 65, { 1, 0 }
  uselistorder i32 230, { 1, 0 }
  uselistorder i32 238, { 1, 0, 2 }
  uselistorder i32 219, { 1, 0, 2, 3 }
  uselistorder i32 92, { 1, 0, 2 }
  uselistorder i32 91, { 1, 2, 0 }
  uselistorder i32 239, { 5, 6, 4, 0, 1, 2, 3 }
  uselistorder i32 93, { 0, 1, 6, 2, 3, 4, 5 }
  uselistorder i32 66, { 1, 0, 2, 3 }
  uselistorder i32 36, { 7, 0, 8, 1, 9, 2, 10, 3, 11, 4, 12, 13, 5, 14, 6 }
  uselistorder i32 94, { 0, 4, 5, 6, 7, 1, 8, 2, 9, 3 }
  uselistorder i32 240, { 3, 2, 1, 0 }
  uselistorder i32 47, { 1, 2, 3, 4, 0 }
  uselistorder i32 107, { 2, 0, 1, 3 }
  uselistorder i32 187, { 0, 1, 3, 2 }
  uselistorder i32 61, { 2, 0, 1, 3 }
  uselistorder i32 60, { 1, 2, 0, 3 }
  uselistorder i32 205, { 0, 2, 3, 1 }
  uselistorder i32 46, { 2, 3, 0, 1, 4, 5 }
  uselistorder i32 45, { 0, 1, 3, 2, 4 }
  uselistorder i32 223, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i32 118, { 2, 0, 1 }
  uselistorder i32 220, { 1, 0 }
  uselistorder i32 211, { 0, 2, 1 }
  uselistorder i32 72, { 1, 0 }
  uselistorder i32 111, { 2, 3, 0, 1 }
  uselistorder i32 104, { 0, 2, 1, 3, 4 }
  uselistorder i32 41, { 3, 2, 4, 5, 6, 0, 1, 7, 8 }
  uselistorder i32 165, { 1, 0, 2 }
  uselistorder i32 252, { 2, 0, 1, 3 }
  uselistorder i32 251, { 6, 7, 8, 4, 9, 10, 5, 0, 1, 2, 3 }
  uselistorder i32 231, { 2, 0, 1 }
  uselistorder i32 142, { 0, 3, 4, 1, 5, 2, 6 }
  uselistorder i32 139, { 1, 0, 2 }
  uselistorder i32 138, { 1, 2, 0, 3, 4 }
  uselistorder i32 222, { 0, 2, 3, 4, 5, 6, 1, 7 }
  uselistorder i32 221, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 134, { 2, 0, 1, 3 }
  uselistorder i32 131, { 0, 2, 1, 3 }
  uselistorder i32 39, { 2, 3, 1, 4, 0 }
  uselistorder i32 236, { 1, 2, 0, 3 }
  uselistorder i32 18, { 8, 10, 9, 0, 1, 2, 3, 11, 4, 12, 5, 13, 6, 14, 7, 15 }
  uselistorder i32 254, { 4, 5, 6, 7, 0, 1, 2, 3 }
  uselistorder i32 253, { 5, 6, 4, 0, 1, 2, 3 }
  uselistorder i32 62, { 0, 1, 5, 2, 3, 6, 4 }
  uselistorder i32 63, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 64, { 0, 8, 7, 6, 9, 5, 4, 3, 2, 1, 19, 20, 21, 22, 23, 17, 24, 25, 26, 10, 27, 28, 29, 11, 30, 31, 32, 12, 33, 34, 35, 18, 36, 37, 38, 13, 39, 40, 41, 42, 43, 14, 44, 45, 46, 47, 48, 15, 49, 50, 51, 52, 16, 53 }
  uselistorder i32 208, { 2, 0, 3, 1 }
  uselistorder i32 35, { 0, 8, 1, 9, 2, 10, 3, 11, 4, 12, 5, 13, 6, 14, 15, 7, 16 }
  uselistorder i32 119, { 0, 2, 3, 1 }
  uselistorder i32 234, { 1, 2, 0 }
  uselistorder i32 116, { 2, 0, 1 }
  uselistorder i32 206, { 1, 5, 2, 3, 6, 4, 0 }
  uselistorder i32 207, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32 34, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32 203, { 2, 0, 1, 3 }
  uselistorder i32 58, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32 67, { 1, 0 }
  uselistorder i32 166, { 3, 0, 1, 2 }
  uselistorder i32 163, { 2, 0, 1 }
  uselistorder i32 95, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 160, { 1, 0, 2 }
  uselistorder i32 216, { 1, 2, 0 }
  uselistorder i32 201, { 1, 0 }
  uselistorder i32 151, { 0, 2, 3, 1 }
  uselistorder i32 152, { 1, 0, 2 }
  uselistorder i32 190, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder i32 184, { 2, 0, 1, 3 }
  uselistorder i32 183, { 2, 0, 1 }
  uselistorder i32 156, { 1, 0 }
  uselistorder i32 143, { 1, 2, 3, 0 }
  uselistorder i32 132, { 1, 2, 0 }
  uselistorder i32 149, { 2, 0, 3, 1 }
  uselistorder i32 124, { 1, 0 }
  uselistorder i32 158, { 0, 2, 3, 4, 5, 6, 1 }
  uselistorder i32 147, { 1, 0, 2 }
  uselistorder i32 153, { 1, 2, 0 }
  uselistorder i32 79, { 3, 0, 1, 2 }
  uselistorder i32 191, { 0, 2, 3, 1 }
  uselistorder i32 167, { 2, 3, 0, 4, 1 }
  uselistorder i32 192, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 215, { 2, 0, 1, 3 }
  uselistorder i32 54, { 3, 1, 2, 0 }
  uselistorder i32 214, { 0, 2, 1, 3 }
  uselistorder i32 30, { 0, 4, 8, 5, 9, 6, 7, 10, 11, 1, 2, 3 }
  uselistorder i32 33, { 3, 2, 4, 0, 1 }
  uselistorder i32 27, { 0, 7, 4, 6, 1, 8, 2, 9, 3, 10, 5, 11 }
  uselistorder i32 28, { 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 0, 20, 4, 19, 1, 2, 3, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder i32 137, { 1, 2, 0, 3 }
  uselistorder i32 136, { 1, 2, 0 }
  uselistorder i32 49, { 1, 0, 2 }
  uselistorder i32 126, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 20, { 18, 19, 1, 21, 2, 22, 23, 24, 25, 16, 17, 20, 26, 27, 28, 29, 30, 3, 31, 32, 33, 34, 35, 36, 37, 38, 4, 39, 40, 41, 0, 42, 43, 44, 45, 12, 46, 47, 48, 49, 50, 51, 52, 53, 54, 13, 55, 56, 57, 58, 59, 60, 61, 63, 64, 5, 65, 66, 67, 68, 69, 70, 71, 6, 72, 73, 74, 75, 14, 15, 76, 8, 77, 7, 78, 79, 80, 81, 10, 82, 9, 83, 84, 85, 86, 87, 88, 89, 90, 11, 91, 92, 93, 94, 95, 96, 97, 98, 99, 62 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_1391c.258 to i32), { 0, 5, 1, 6, 2, 3, 4, 7 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_138cc.238 to i32), { 0, 10, 1, 11, 2, 3, 4, 12, 5, 13, 6, 14, 7, 15, 8, 16, 9, 17 }
  uselistorder i32 13, { 25, 26, 27, 28, 23, 29, 24, 4, 30, 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 1, 14, 15, 16, 17, 18, 19, 20, 31, 32, 33, 34, 35, 21, 36, 37, 38, 39, 40, 41, 42, 43, 22, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 2, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 3, 72, 73 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_138a4.230 to i32), { 0, 7, 1, 8, 2, 9, 3, 10, 4, 5, 6, 11 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1389c.228 to i32), { 0, 4, 1, 2, 3, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_138d0.226 to i32), { 0, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 11, { 7, 8, 9, 10, 6, 11, 0, 12, 13, 14, 15, 16, 17, 18, 19, 1, 20, 21, 22, 2, 23, 24, 25, 3, 26, 27, 28, 4, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 5 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_13954.224 to i32), { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32)* @function_f840, { 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_1393c.217 to i32), { 1, 7, 2, 3, 4, 8, 5, 9, 6, 10, 0, 11 }
  uselistorder i8* @global_var_1bd15.214, { 1, 0 }
  uselistorder i32* @global_var_1bd08.205, { 0, 2, 1 }
  uselistorder i32 31, { 3, 12, 16, 17, 18, 19, 15, 9, 4, 13, 14, 10, 11, 5, 6, 0, 7, 1, 2, 8 }
  uselistorder i8* @global_var_1bd14.206, { 1, 0 }
  uselistorder i32 40, { 0, 2, 3, 4, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i32 69, { 1, 2, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1bcf4.201 to i32), { 2, 0, 3, 1, 4, 5, 6 }
  uselistorder i32 1024, { 1, 0 }
  uselistorder i32 1023, { 2, 0, 1 }
  uselistorder i32 65280, { 0, 33, 1, 2, 3, 4, 34, 17, 5, 35, 23, 18, 19, 24, 25, 26, 36, 37, 38, 39, 6, 7, 27, 28, 29, 40, 41, 42, 43, 8, 9, 44, 10, 45, 30, 31, 46, 11, 47, 48, 20, 49, 50, 12, 51, 52, 21, 53, 54, 13, 55, 22, 32, 56, 57, 14, 58, 59, 15, 16 }
  uselistorder i32 ()* @function_f508, { 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32*, i32)* @setsockopt, { 8, 1, 0, 5, 9, 7, 2, 4, 3, 6, 10 }
  uselistorder i32 2048, { 5, 0, 1, 2, 6, 3, 7, 8, 4, 9 }
  uselistorder i32 (i32, i32, ...)* @fcntl, { 3, 2, 6, 0, 5, 7, 9, 8, 4, 1, 10 }
  uselistorder i32* @global_var_1bd48.199, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* @global_var_1bd44.197, { 1, 2, 3, 0, 4 }
  uselistorder i32* (i32, i32)* @calloc, { 0, 1, 2, 3, 4, 5, 12, 34, 33, 30, 22, 31, 39, 32, 16, 23, 17, 14, 18, 37, 21, 29, 26, 8, 7, 13, 35, 19, 24, 25, 36, 20, 15, 6, 11, 10, 9, 38, 27, 28, 40 }
  uselistorder i32 288, { 0, 1, 5, 6, 2, 7, 3, 4, 8 }
  uselistorder i32* @global_var_1bd24.184, { 2, 0, 3, 4, 1, 5, 6 }
  uselistorder i32 (i32*)* @time, { 0, 1, 2, 3, 8, 4, 5, 6, 7, 9 }
  uselistorder i32 (i32)* @function_f560, { 1, 0 }
  uselistorder i32* @global_var_1bd28.110, { 4, 5, 1, 2, 3, 6, 7, 8, 9, 10, 0, 11, 15, 12, 13, 14 }
  uselistorder i32 ()* @function_132a4, { 2, 1, 0 }
  uselistorder i32 ()* @fork, { 0, 6, 5, 4, 3, 2, 1, 7 }
  uselistorder i32* @fp, { 2, 43, 44, 45, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 0, 27, 28, 29, 30, 1, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46, 47, 48, 49, 50 }
  uselistorder i32* @r5, { 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 198, 199, 200, 201, 202, 203, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 0, 43, 44, 2, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 1, 58, 59, 60, 61, 62, 63, 3, 64, 65, 66, 67, 68, 69, 70, 71, 4, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 192, 193, 194, 195, 196, 197 }
  uselistorder label %dec_label_pc_11db0.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_11db0.backedge.thread2263, { 9, 4, 8, 2, 7, 3, 6, 1, 5, 0 }
  uselistorder label %dec_label_pc_11db0.backedge.thread, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_128c0, { 1, 0 }
  uselistorder label %dec_label_pc_12814, { 1, 0 }
  uselistorder label %dec_label_pc_1277c, { 2, 1, 0 }
  uselistorder label %.thread1154, { 1, 0 }
  uselistorder label %bb1933, { 1, 0 }
  uselistorder label %dec_label_pc_12608, { 1, 0 }
  uselistorder label %thread-pre-split690, { 1, 0 }
  uselistorder label %dec_label_pc_1259c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_124d8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_124cc, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_124c4, { 1, 0 }
  uselistorder label %dec_label_pc_1244c, { 2, 3, 1, 11, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder label %dec_label_pc_1236c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12360, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_12358, { 1, 0 }
  uselistorder label %dec_label_pc_122a4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12298, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_12290, { 1, 0 }
  uselistorder label %dec_label_pc_121dc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_121d0, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_121c8, { 1, 0 }
  uselistorder label %dec_label_pc_12114, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12108, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_12100, { 1, 0 }
  uselistorder label %dec_label_pc_12060, { 1, 0 }
  uselistorder label %dec_label_pc_12054, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_12054.thread, { 1, 0 }
  uselistorder label %dec_label_pc_1204c, { 1, 0 }
  uselistorder label %dec_label_pc_11fbc, { 1, 0 }
  uselistorder label %dec_label_pc_11fac, { 1, 0 }
  uselistorder label %dec_label_pc_11fa0, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_11fa0.thread, { 1, 0 }
  uselistorder label %dec_label_pc_11f98, { 1, 0 }
  uselistorder label %dec_label_pc_11f34, { 2, 1, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_11f24, { 5, 2, 3, 4, 1, 0 }
  uselistorder label %bb1897, { 2, 1, 0 }
  uselistorder label %bb1894, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11e84, { 1, 0 }
  uselistorder label %dec_label_pc_11e84.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_11e14, { 1, 0 }
  uselistorder label %bb1891, { 1, 0 }
  uselistorder label %dec_label_pc_11dc8, { 1, 0 }
  uselistorder label %dec_label_pc_11db8, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_11db8.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_11dac.loopexit, { 2, 5, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_11d0c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11be4, { 1, 7, 8, 4, 5, 0, 6, 2, 3 }
  uselistorder label %dec_label_pc_11bbc, { 1, 0 }
  uselistorder label %bb1888, { 1, 0 }
  uselistorder label %bb1886, { 1, 2, 3, 0, 5, 4 }
  uselistorder label %dec_label_pc_11a28.dec_label_pc_11a28_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_11a10.dec_label_pc_11a10_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_11a08, { 3, 0, 1, 2 }
  uselistorder label %bb1883, { 1, 0 }
  uselistorder label %dec_label_pc_119e8, { 1, 0 }
  uselistorder label %dec_label_pc_1199c, { 1, 0 }
  uselistorder label %dec_label_pc_11860, { 10, 0, 1, 2, 7, 8, 3, 4, 5, 6, 9, 11 }
  uselistorder label %dec_label_pc_1184c, { 1, 0 }
  uselistorder label %dec_label_pc_1171c, { 1, 2, 0 }
  uselistorder label %.thread646, { 1, 0 }
  uselistorder label %dec_label_pc_116e8, { 1, 0 }
  uselistorder label %dec_label_pc_116d0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_116ac, { 1, 2, 0 }
  uselistorder label %dec_label_pc_11688, { 1, 2, 0 }
  uselistorder label %thread-pre-split626, { 1, 0 }
  uselistorder label %bb1863, { 1, 0 }
  uselistorder label %dec_label_pc_11644, { 1, 2, 0 }
  uselistorder label %dec_label_pc_11620, { 1, 2, 0 }
  uselistorder label %dec_label_pc_115fc, { 2, 0, 3, 1 }
  uselistorder label %bb1854, { 1, 0 }
  uselistorder label %bb1852, { 1, 0 }
  uselistorder label %.thread609, { 1, 0 }
  uselistorder label %dec_label_pc_115c8, { 1, 0 }
  uselistorder label %dec_label_pc_115c8.thread, { 1, 0, 2 }
  uselistorder label %dec_label_pc_115a8, { 1, 0, 2 }
  uselistorder label %bb1849, { 1, 0 }
  uselistorder label %dec_label_pc_1158c, { 1, 0 }
  uselistorder label %thread-pre-split598, { 1, 0 }
  uselistorder label %bb1846, { 1, 0 }
  uselistorder label %thread-pre-split597, { 1, 0 }
  uselistorder label %bb1843, { 1, 0 }
  uselistorder label %thread-pre-split595, { 1, 0 }
  uselistorder label %bb1838, { 1, 0 }
  uselistorder label %thread-pre-split593, { 1, 0 }
  uselistorder label %bb1833, { 1, 0 }
  uselistorder label %dec_label_pc_114dc, { 1, 0 }
  uselistorder label %dec_label_pc_114bc, { 1, 2, 0 }
  uselistorder label %thread-pre-split586, { 1, 0 }
  uselistorder label %bb1825, { 1, 0 }
  uselistorder label %dec_label_pc_11478, { 2, 1, 3, 0 }
  uselistorder label %bb1822, { 1, 0 }
  uselistorder label %bb1820, { 1, 0 }
  uselistorder label %dec_label_pc_11450, { 2, 0, 3, 1 }
  uselistorder label %.thread578, { 1, 0 }
  uselistorder label %dec_label_pc_1142c, { 2, 0, 1 }
  uselistorder label %bb1815, { 1, 0 }
  uselistorder label %bb1813, { 1, 0 }
  uselistorder label %.thread570, { 1, 0 }
  uselistorder label %dec_label_pc_113f8, { 2, 0, 1 }
  uselistorder label %bb1810, { 1, 0 }
  uselistorder label %bb1808, { 1, 0 }
  uselistorder label %dec_label_pc_113c4, { 2, 1, 3, 0 }
  uselistorder label %bb1805, { 1, 0 }
  uselistorder label %bb1803, { 1, 0 }
  uselistorder label %dec_label_pc_1139c, { 2, 0, 3, 1 }
  uselistorder label %bb1799, { 1, 0 }
  uselistorder label %bb1797, { 1, 0 }
  uselistorder label %.thread549, { 1, 0 }
  uselistorder label %dec_label_pc_11368, { 2, 0, 1 }
  uselistorder label %bb1794, { 1, 0 }
  uselistorder label %bb1792, { 1, 0 }
  uselistorder label %dec_label_pc_11334, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11318, { 2, 0, 3, 1 }
  uselistorder label %bb1788, { 1, 0 }
  uselistorder label %bb1786, { 1, 0 }
  uselistorder label %.thread533, { 1, 0 }
  uselistorder label %dec_label_pc_112e4, { 2, 0, 1 }
  uselistorder label %bb1783, { 1, 0 }
  uselistorder label %bb1781, { 1, 0 }
  uselistorder label %.thread525, { 1, 0 }
  uselistorder label %dec_label_pc_112b0, { 2, 0, 1 }
  uselistorder label %bb1778, { 1, 0 }
  uselistorder label %bb1776, { 1, 0 }
  uselistorder label %.thread517, { 1, 0 }
  uselistorder label %dec_label_pc_11280, { 2, 0, 1 }
  uselistorder label %bb1773, { 1, 0 }
  uselistorder label %bb1771, { 1, 0 }
  uselistorder label %.thread509, { 1, 0 }
  uselistorder label %dec_label_pc_11250, { 1, 0 }
  uselistorder label %bb1769, { 1, 0 }
  uselistorder label %bb1767, { 1, 0 }
  uselistorder label %dec_label_pc_11228, { 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_11204, { 1, 0, 2 }
  uselistorder label %bb1763, { 1, 0 }
  uselistorder label %bb1761, { 1, 0 }
  uselistorder label %dec_label_pc_111dc, { 2, 0, 3, 1 }
  uselistorder label %bb1758, { 1, 0 }
  uselistorder label %bb1756, { 1, 0 }
  uselistorder label %.thread489, { 1, 0 }
  uselistorder label %dec_label_pc_111a8, { 2, 0, 1 }
  uselistorder label %bb1753, { 1, 0 }
  uselistorder label %bb1751, { 1, 0 }
  uselistorder label %.thread481, { 1, 0 }
  uselistorder label %dec_label_pc_11174, { 1, 0 }
  uselistorder label %bb1749, { 1, 0 }
  uselistorder label %bb1747, { 1, 0 }
  uselistorder label %dec_label_pc_11148, { 1, 0 }
  uselistorder label %dec_label_pc_1113c, { 1, 0 }
  uselistorder label %dec_label_pc_1111c, { 1, 0 }
  uselistorder label %dec_label_pc_11104, { 1, 0 }
  uselistorder label %dec_label_pc_110d8, { 1, 0 }
  uselistorder label %dec_label_pc_110cc, { 1, 0 }
  uselistorder label %dec_label_pc_110ac, { 1, 0 }
  uselistorder label %dec_label_pc_11074, { 1, 0 }
  uselistorder label %dec_label_pc_11068, { 1, 0 }
  uselistorder label %dec_label_pc_11050, { 1, 0 }
  uselistorder label %.thread447, { 1, 0 }
  uselistorder label %dec_label_pc_11024, { 1, 0 }
  uselistorder label %dec_label_pc_1100c, { 1, 0, 2 }
  uselistorder label %bb1736, { 1, 0 }
  uselistorder label %bb1734, { 1, 0 }
  uselistorder label %dec_label_pc_10fd8, { 2, 0, 3, 1 }
  uselistorder label %bb1729, { 1, 0 }
  uselistorder label %bb1727, { 1, 0 }
  uselistorder label %.thread426, { 1, 0 }
  uselistorder label %dec_label_pc_10fa8, { 2, 1, 0 }
  uselistorder label %bb1724, { 1, 0 }
  uselistorder label %bb1722, { 1, 0 }
  uselistorder label %dec_label_pc_10f74, { 3, 2, 4, 1, 0 }
  uselistorder label %bb1716, { 1, 0 }
  uselistorder label %bb1714, { 1, 0 }
  uselistorder label %dec_label_pc_10f4c, { 2, 1, 0 }
  uselistorder label %bb1710, { 1, 0 }
  uselistorder label %bb1708, { 1, 0 }
  uselistorder label %dec_label_pc_10f24, { 2, 0, 3, 1 }
  uselistorder label %.thread406, { 1, 0 }
  uselistorder label %dec_label_pc_10f00, { 2, 0, 1 }
  uselistorder label %bb1703, { 1, 0 }
  uselistorder label %bb1701, { 1, 0 }
  uselistorder label %.thread398, { 1, 0 }
  uselistorder label %dec_label_pc_10ecc, { 2, 0, 1 }
  uselistorder label %bb1698, { 1, 0 }
  uselistorder label %bb1696, { 1, 0 }
  uselistorder label %dec_label_pc_10e98, { 1, 0, 2 }
  uselistorder label %bb1693, { 1, 0 }
  uselistorder label %bb1691, { 1, 0 }
  uselistorder label %dec_label_pc_10e70, { 1, 0, 2 }
  uselistorder label %bb1688, { 1, 0 }
  uselistorder label %bb1686, { 1, 0 }
  uselistorder label %dec_label_pc_10e4c, { 1, 0, 2 }
  uselistorder label %bb1683, { 1, 0 }
  uselistorder label %bb1681, { 1, 0 }
  uselistorder label %dec_label_pc_10e24, { 2, 0, 3, 1 }
  uselistorder label %bb1678, { 1, 0 }
  uselistorder label %bb1676, { 1, 0 }
  uselistorder label %.thread370, { 1, 0 }
  uselistorder label %dec_label_pc_10ddc, { 1, 0 }
  uselistorder label %dec_label_pc_10dc4, { 1, 2, 0 }
  uselistorder label %bb1671, { 1, 0 }
  uselistorder label %bb1669, { 1, 0 }
  uselistorder label %dec_label_pc_10d9c, { 1, 0, 3, 2 }
  uselistorder label %bb1664, { 1, 0 }
  uselistorder label %bb1662, { 1, 0 }
  uselistorder label %dec_label_pc_10d3c, { 2, 1, 3, 0 }
  uselistorder label %bb1657, { 1, 0 }
  uselistorder label %bb1655, { 1, 0 }
  uselistorder label %dec_label_pc_10d04, { 1, 0, 3, 2 }
  uselistorder label %.thread335, { 1, 0 }
  uselistorder label %dec_label_pc_10cd4, { 1, 0 }
  uselistorder label %bb1647, { 1, 0 }
  uselistorder label %bb1645, { 1, 0 }
  uselistorder label %.thread331, { 1, 0 }
  uselistorder label %dec_label_pc_10ca8, { 2, 1, 0 }
  uselistorder label %bb1642, { 1, 0 }
  uselistorder label %bb1640, { 1, 0 }
  uselistorder label %dec_label_pc_10c74, { 1, 0, 2 }
  uselistorder label %bb1634, { 1, 0 }
  uselistorder label %bb1632, { 1, 0 }
  uselistorder label %dec_label_pc_10c40, { 2, 0, 3, 1 }
  uselistorder label %bb1627, { 1, 0 }
  uselistorder label %bb1625, { 1, 0 }
  uselistorder label %.thread312, { 1, 0 }
  uselistorder label %dec_label_pc_10c0c.thread, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10bdc, { 1, 2, 0 }
  uselistorder label %bb1620, { 1, 0 }
  uselistorder label %bb1618, { 1, 0 }
  uselistorder label %.thread300, { 1, 0 }
  uselistorder label %dec_label_pc_10bb0, { 1, 0 }
  uselistorder label %bb1616, { 1, 0 }
  uselistorder label %bb1614, { 1, 0 }
  uselistorder label %.thread296, { 1, 0 }
  uselistorder label %dec_label_pc_10b88, { 2, 1, 0 }
  uselistorder label %bb1611, { 1, 0 }
  uselistorder label %bb1609, { 1, 0 }
  uselistorder label %dec_label_pc_10b54, { 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_10b24, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10b0c, { 2, 0, 3, 1 }
  uselistorder label %bb1596, { 1, 0 }
  uselistorder label %bb1594, { 1, 0 }
  uselistorder label %.thread276, { 1, 0 }
  uselistorder label %dec_label_pc_10ad8, { 2, 0, 1 }
  uselistorder label %bb1591, { 1, 0 }
  uselistorder label %bb1589, { 1, 0 }
  uselistorder label %.thread268, { 1, 0 }
  uselistorder label %dec_label_pc_10aa4, { 1, 0 }
  uselistorder label %bb1587, { 1, 0 }
  uselistorder label %.thread264, { 1, 0 }
  uselistorder label %dec_label_pc_10a80, { 1, 0 }
  uselistorder label %dec_label_pc_10a80.thread, { 1, 0 }
  uselistorder label %dec_label_pc_10a5c, { 1, 0, 2 }
  uselistorder label %bb1580, { 1, 0 }
  uselistorder label %bb1578, { 1, 0 }
  uselistorder label %dec_label_pc_10a2c, { 1, 2, 0 }
  uselistorder label %bb1574, { 1, 0 }
  uselistorder label %bb1572, { 1, 0 }
  uselistorder label %dec_label_pc_109e4, { 1, 0 }
  uselistorder label %dec_label_pc_109a4, { 1, 0 }
  uselistorder label %.thread240, { 1, 0 }
  uselistorder label %dec_label_pc_10930, { 1, 0 }
  uselistorder label %.thread229, { 1, 0 }
  uselistorder label %thread-pre-split214, { 1, 0 }
  uselistorder label %bb1554, { 1, 0 }
  uselistorder label %dec_label_pc_1088c, { 1, 2, 0 }
  uselistorder label %thread-pre-split209, { 1, 0 }
  uselistorder label %bb1551, { 1, 0 }
  uselistorder label %thread-pre-split207, { 1, 0 }
  uselistorder label %bb1546, { 1, 0 }
  uselistorder label %thread-pre-split206, { 1, 0 }
  uselistorder label %bb1543, { 1, 0 }
  uselistorder label %thread-pre-split205, { 1, 0 }
  uselistorder label %bb1540, { 1, 0 }
  uselistorder label %thread-pre-split203, { 1, 0 }
  uselistorder label %bb1535, { 1, 0 }
  uselistorder label %dec_label_pc_10784, { 1, 2, 0 }
  uselistorder label %thread-pre-split197, { 1, 0 }
  uselistorder label %bb1529, { 1, 0 }
  uselistorder label %thread-pre-split195, { 1, 0 }
  uselistorder label %bb1524, { 1, 0 }
  uselistorder label %thread-pre-split193, { 1, 0 }
  uselistorder label %bb1519, { 1, 0 }
  uselistorder label %thread-pre-split192, { 1, 0 }
  uselistorder label %bb1516, { 1, 0 }
  uselistorder label %thread-pre-split191, { 1, 0 }
  uselistorder label %bb1513, { 1, 0 }
  uselistorder label %dec_label_pc_10688, { 1, 2, 0 }
  uselistorder label %thread-pre-split185, { 1, 0 }
  uselistorder label %bb1507, { 1, 0 }
  uselistorder label %thread-pre-split184, { 1, 0 }
  uselistorder label %bb1504, { 1, 0 }
  uselistorder label %thread-pre-split183, { 1, 0 }
  uselistorder label %bb1501, { 1, 0 }
  uselistorder label %thread-pre-split182, { 1, 0 }
  uselistorder label %bb1498, { 1, 0 }
  uselistorder label %thread-pre-split181, { 1, 0 }
  uselistorder label %bb1495, { 1, 0 }
  uselistorder label %bb1493, { 1, 0 }
  uselistorder label %bb1491, { 1, 0 }
  uselistorder label %thread-pre-split180, { 1, 0 }
  uselistorder label %bb1488, { 1, 0 }
  uselistorder label %dec_label_pc_10584, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10560, { 1, 2, 0 }
  uselistorder label %bb1483, { 1, 0 }
  uselistorder label %bb1481, { 1, 0 }
  uselistorder label %dec_label_pc_10534, { 1, 2, 0 }
  uselistorder label %bb1478, { 1, 0 }
  uselistorder label %thread-pre-split169, { 1, 0 }
  uselistorder label %bb1475, { 1, 0 }
  uselistorder label %thread-pre-split167, { 1, 0 }
  uselistorder label %bb1470, { 1, 0 }
  uselistorder label %dec_label_pc_104ac, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10488, { 1, 2, 0 }
  uselistorder label %bb1463, { 1, 0 }
  uselistorder label %bb1461, { 1, 0 }
  uselistorder label %dec_label_pc_10460, { 1, 2, 0 }
  uselistorder label %.thread154, { 1, 0 }
  uselistorder label %bb1459, { 1, 0 }
  uselistorder label %bb1457, { 1, 0 }
  uselistorder label %dec_label_pc_1041c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_103f8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_103d4, { 1, 2, 0 }
  uselistorder label %bb1449, { 1, 0 }
  uselistorder label %bb1447, { 1, 0 }
  uselistorder label %thread-pre-split134, { 1, 0 }
  uselistorder label %bb1444, { 1, 0 }
  uselistorder label %thread-pre-split133, { 1, 0 }
  uselistorder label %bb1441, { 1, 0 }
  uselistorder label %dec_label_pc_10330, { 1, 2, 0 }
  uselistorder label %bb1432, { 1, 0 }
  uselistorder label %bb1430, { 1, 0 }
  uselistorder label %bb1428, { 1, 0 }
  uselistorder label %bb1426, { 1, 0 }
  uselistorder label %dec_label_pc_102d0, { 1, 0 }
  uselistorder label %dec_label_pc_102b4, { 1, 0 }
  uselistorder label %dec_label_pc_10298, { 1, 0 }
  uselistorder label %.thread117, { 1, 0 }
  uselistorder label %dec_label_pc_10228, { 1, 0 }
  uselistorder label %dec_label_pc_1020c, { 1, 0 }
  uselistorder label %dec_label_pc_101f0, { 1, 0 }
  uselistorder label %dec_label_pc_101d4, { 1, 0 }
  uselistorder label %dec_label_pc_10184, { 1, 0 }
  uselistorder label %dec_label_pc_10168, { 1, 0 }
  uselistorder label %dec_label_pc_1015c, { 1, 0 }
  uselistorder label %dec_label_pc_10140, { 1, 0 }
  uselistorder label %.thread78, { 1, 0 }
  uselistorder label %dec_label_pc_10108, { 1, 0 }
  uselistorder label %dec_label_pc_100c4, { 1, 0 }
  uselistorder label %dec_label_pc_100b8, { 1, 0 }
  uselistorder label %dec_label_pc_10060, { 1, 0 }
  uselistorder label %dec_label_pc_1002c, { 1, 0 }
  uselistorder label %.thread51, { 1, 0 }
  uselistorder label %dec_label_pc_ffdc, { 1, 0 }
  uselistorder label %.thread38, { 1, 0 }
  uselistorder label %dec_label_pc_ff9c, { 1, 0 }
  uselistorder label %dec_label_pc_ff80, { 1, 0 }
  uselistorder label %dec_label_pc_ff2c, { 1, 0 }
  uselistorder label %dec_label_pc_ff14, { 1, 0 }
  uselistorder label %bb1333, { 1, 0 }
  uselistorder label %dec_label_pc_fe54, { 16, 117, 5, 17, 118, 119, 18, 120, 121, 19, 122, 123, 124, 125, 20, 126, 21, 22, 127, 128, 23, 129, 24, 130, 131, 132, 25, 133, 26, 27, 28, 29, 30, 134, 31, 32, 33, 34, 35, 135, 36, 37, 38, 39, 136, 40, 41, 137, 42, 43, 138, 44, 45, 46, 47, 48, 139, 49, 50, 51, 52, 53, 54, 55, 56, 57, 140, 58, 59, 60, 61, 62, 63, 64, 141, 65, 0, 66, 67, 1, 68, 69, 70, 71, 2, 72, 73, 74, 3, 213, 75, 76, 77, 4, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 91, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 92, 179, 180, 181, 93, 182, 183, 184, 185, 94, 186, 95, 96, 187, 188, 189, 97, 98, 99, 190, 191, 192, 100, 101, 102, 193, 103, 194, 104, 105, 106, 195, 107, 108, 109, 110, 111, 112, 113, 196, 197, 198, 114, 115, 116, 199, 200, 201, 202, 6, 203, 7, 204, 8, 205, 9, 206, 10, 207, 11, 208, 12, 209, 13, 210, 14, 211, 15, 212, 214 }
  uselistorder label %dec_label_pc_fb8c, { 1, 2, 0 }
}

define i32 @function_1293c(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_1293c:
  %v3_12940 = mul i32 %arg1, 8
  %v2_12944 = add i32 %v3_12940, ptrtoint (i32* @global_var_1bd54.290 to i32)
  %v2_12948 = icmp eq i32* %arg2, null
  br i1 %v2_12948, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_1293c
  %v3_1295411 = inttoptr i32 %v2_12944 to i32*
  %v4_1295412 = load i32, i32* %v3_1295411, align 4
  br label %bb15

bb:                                               ; preds = %dec_label_pc_1293c
  %v2_1294c = add i32 %v3_12940, add (i32 ptrtoint (i32* @global_var_1bd54.290 to i32), i32 5)
  %v3_1294c = inttoptr i32 %v2_1294c to i8*
  %v4_1294c = load i8, i8* %v3_1294c, align 1
  %v5_1294c = zext i8 %v4_1294c to i32
  %v2_12950 = add i32 %v3_12940, add (i32 ptrtoint (i32* @global_var_1bd54.290 to i32), i32 4)
  %v3_12950 = inttoptr i32 %v2_12950 to i8*
  %v4_12950 = load i8, i8* %v3_12950, align 4
  %v5_12950 = zext i8 %v4_12950 to i32
  %v3_12954 = inttoptr i32 %v2_12944 to i32*
  %v4_12954 = load i32, i32* %v3_12954, align 4
  %v5_12958 = mul nuw nsw i32 %v5_1294c, 256
  %v6_12958 = or i32 %v5_12950, %v5_12958
  store i32 %v6_12958, i32* %arg2, align 4
  br label %bb15

bb15:                                             ; preds = %.thread, %bb
  %v4_12954714 = phi i32 [ %v4_1295412, %.thread ], [ %v4_12954, %bb ]
  ret i32 %v4_12954714

; uselistorder directives
  uselistorder i32 %v2_12944, { 1, 0 }
  uselistorder i32 %v3_12940, { 2, 1, 0 }
  uselistorder i32* null, { 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 1, 19, 2, 5, 3, 6, 20, 21, 0 }
  uselistorder label %bb15, { 1, 0 }
}

define i32 @function_12968(i32 %arg1) local_unnamed_addr {
dec_label_pc_12968:
  %ip.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_12968 = mul i32 %arg1, 8
  %v3_1296c = load i32, i32* @r4, align 4
  store i32 %v3_1296c, i32* %stack_var_-20, align 4
  %v3_1297c = and i32 %v3_12968, 2040
  %v2_12980 = add i32 %v3_1297c, ptrtoint (i32* @global_var_1bd54.290 to i32)
  store i32 %v2_12980, i32* @lr, align 4
  %v1_12988 = add i32 %v3_1297c, add (i32 ptrtoint (i32* @global_var_1bd54.290 to i32), i32 4)
  store i32 %v1_12988, i32* %r7.global-to-local, align 4
  %v2_1298c = load i32, i32* @global_var_1bcac.293, align 4
  %v2_12990 = inttoptr i32 %v1_12988 to i8*
  %v3_12990 = load i8, i8* %v2_12990, align 4
  %v4_12990 = zext i8 %v3_12990 to i32
  store i32 %v4_12990, i32* @r1, align 4
  %v1_12994 = add i32 %v3_1297c, add (i32 ptrtoint (i32* @global_var_1bd54.290 to i32), i32 5)
  %v2_12994 = inttoptr i32 %v1_12994 to i8*
  %v3_12994 = load i8, i8* %v2_12994, align 1
  %v4_12994 = zext i8 %v3_12994 to i32
  %v3_12998 = udiv i32 %v2_1298c, 256
  %v4_1299c = mul nuw nsw i32 %v4_12994, 256
  %v5_1299c = or i32 %v4_1299c, %v4_12990
  %v7_1299c = icmp eq i32 %v5_1299c, 0
  store i1 %v7_1299c, i1* @cpsr_z, align 1
  %v3_129a0 = udiv i32 %v2_1298c, 65536
  %v1_129a4 = urem i32 %v3_12998, 256
  store i32 %v1_129a4, i32* %r6.global-to-local, align 4
  %v1_129a8 = urem i32 %v3_129a0, 256
  store i32 %v1_129a8, i32* %r5.global-to-local, align 4
  %v3_129ac = udiv i32 %v2_1298c, 16777216
  store i32 %v3_129ac, i32* %r4.global-to-local, align 4
  %v1_129b0 = urem i32 %v2_1298c, 256
  br i1 %v7_1299c, label %bb, label %bb8

bb:                                               ; preds = %dec_label_pc_12968
  store i32 %v3_1296c, i32* @r4, align 4
  ret i32 %v1_129b0

bb8:                                              ; preds = %dec_label_pc_12968
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_129bc

dec_label_pc_129bc:                               ; preds = %dec_label_pc_129bc, %bb8
  %v2_129c8 = phi i32 [ %v1_12a04, %dec_label_pc_129bc ], [ 0, %bb8 ]
  %v0_129bc = phi i32 [ %v0_129fc, %dec_label_pc_129bc ], [ %v2_12980, %bb8 ]
  %v1_129bc = inttoptr i32 %v0_129bc to i32*
  %v2_129bc = load i32, i32* %v1_129bc, align 4
  %v2_129c0 = add i32 %v2_129bc, %v2_129c8
  %v3_129c0 = inttoptr i32 %v2_129c0 to i8*
  %v4_129c0 = load i8, i8* %v3_129c0, align 1
  %v6_129c0 = zext i8 %v4_129c0 to i32
  %v2_129c4 = xor i32 %v6_129c0, %v1_129b0
  %v1_129c8 = trunc i32 %v2_129c4 to i8
  store i8 %v1_129c8, i8* %v3_129c0, align 1
  %v0_129cc = load i32, i32* @lr, align 4
  %v1_129cc = inttoptr i32 %v0_129cc to i32*
  %v2_129cc = load i32, i32* %v1_129cc, align 4
  %v0_129d0 = load i32, i32* %ip.global-to-local, align 4
  %v2_129d0 = add i32 %v0_129d0, %v2_129cc
  %v3_129d0 = inttoptr i32 %v2_129d0 to i8*
  %v4_129d0 = load i8, i8* %v3_129d0, align 1
  %v6_129d0 = zext i8 %v4_129d0 to i32
  %v0_129d4 = load i32, i32* %r6.global-to-local, align 4
  %v2_129d4 = xor i32 %v0_129d4, %v6_129d0
  %v1_129d8 = trunc i32 %v2_129d4 to i8
  store i8 %v1_129d8, i8* %v3_129d0, align 1
  %v0_129dc = load i32, i32* @lr, align 4
  %v1_129dc = inttoptr i32 %v0_129dc to i32*
  %v2_129dc = load i32, i32* %v1_129dc, align 4
  %v0_129e0 = load i32, i32* %ip.global-to-local, align 4
  %v2_129e0 = add i32 %v0_129e0, %v2_129dc
  %v3_129e0 = inttoptr i32 %v2_129e0 to i8*
  %v4_129e0 = load i8, i8* %v3_129e0, align 1
  %v6_129e0 = zext i8 %v4_129e0 to i32
  %v0_129e4 = load i32, i32* %r5.global-to-local, align 4
  %v2_129e4 = xor i32 %v0_129e4, %v6_129e0
  %v1_129e8 = trunc i32 %v2_129e4 to i8
  store i8 %v1_129e8, i8* %v3_129e0, align 1
  %v0_129ec = load i32, i32* @lr, align 4
  %v1_129ec = inttoptr i32 %v0_129ec to i32*
  %v2_129ec = load i32, i32* %v1_129ec, align 4
  store i32 %v2_129ec, i32* @r1, align 4
  %v0_129f0 = load i32, i32* %ip.global-to-local, align 4
  %v2_129f0 = add i32 %v0_129f0, %v2_129ec
  %v3_129f0 = inttoptr i32 %v2_129f0 to i8*
  %v4_129f0 = load i8, i8* %v3_129f0, align 1
  %v6_129f0 = zext i8 %v4_129f0 to i32
  %v0_129f4 = load i32, i32* %r4.global-to-local, align 4
  %v2_129f4 = xor i32 %v0_129f4, %v6_129f0
  %v1_129f8 = trunc i32 %v2_129f4 to i8
  store i8 %v1_129f8, i8* %v3_129f0, align 1
  %v0_129fc = load i32, i32* @lr, align 4
  %v1_129fc = add i32 %v0_129fc, 4
  %v2_129fc = inttoptr i32 %v1_129fc to i8*
  %v3_129fc = load i8, i8* %v2_129fc, align 1
  %v4_129fc = zext i8 %v3_129fc to i32
  %v0_12a00 = load i32, i32* %r7.global-to-local, align 4
  %v1_12a00 = add i32 %v0_12a00, 1
  %v2_12a00 = inttoptr i32 %v1_12a00 to i8*
  %v3_12a00 = load i8, i8* %v2_12a00, align 1
  %v4_12a00 = zext i8 %v3_12a00 to i32
  %v0_12a04 = load i32, i32* %ip.global-to-local, align 4
  %v1_12a04 = add i32 %v0_12a04, 1
  store i32 %v1_12a04, i32* %ip.global-to-local, align 4
  %v4_12a08 = mul nuw nsw i32 %v4_12a00, 256
  %v5_12a08 = or i32 %v4_12a08, %v4_129fc
  %v9_12a0c = icmp eq i32 %v5_12a08, %v1_12a04
  store i1 %v9_12a0c, i1* @cpsr_z, align 1
  %v8_12a10 = icmp sgt i32 %v5_12a08, %v1_12a04
  br i1 %v8_12a10, label %dec_label_pc_129bc, label %dec_label_pc_12a14

dec_label_pc_12a14:                               ; preds = %dec_label_pc_129bc
  %v2_12a14 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_12a14, i32* @r4, align 4
  ret i32 %v1_129b0

; uselistorder directives
  uselistorder i32 %v1_12a04, { 1, 2, 3, 0 }
  uselistorder i32 %v0_129fc, { 1, 0 }
  uselistorder i32 %v1_129b0, { 0, 2, 1 }
  uselistorder i32 %v2_1298c, { 3, 0, 1, 2 }
}

define i32 @function_12a20(i32 %arg1) local_unnamed_addr {
dec_label_pc_12a20:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_12a20 = mul i32 %arg1, 8
  %v3_12a24 = load i32, i32* @r4, align 4
  store i32 %v3_12a24, i32* %stack_var_-20, align 4
  %v3_12a34 = and i32 %v3_12a20, 2040
  %v2_12a38 = add i32 %v3_12a34, ptrtoint (i32* @global_var_1bd54.290 to i32)
  store i32 %v2_12a38, i32* %lr.global-to-local, align 4
  %v1_12a40 = add i32 %v3_12a34, add (i32 ptrtoint (i32* @global_var_1bd54.290 to i32), i32 4)
  store i32 %v1_12a40, i32* %r7.global-to-local, align 4
  %v2_12a44 = load i32, i32* @global_var_1bcac.293, align 4
  %v2_12a48 = inttoptr i32 %v1_12a40 to i8*
  %v3_12a48 = load i8, i8* %v2_12a48, align 4
  %v4_12a48 = zext i8 %v3_12a48 to i32
  %v1_12a4c = add i32 %v3_12a34, add (i32 ptrtoint (i32* @global_var_1bd54.290 to i32), i32 5)
  %v2_12a4c = inttoptr i32 %v1_12a4c to i8*
  %v3_12a4c = load i8, i8* %v2_12a4c, align 1
  %v4_12a4c = zext i8 %v3_12a4c to i32
  %v3_12a50 = udiv i32 %v2_12a44, 256
  %v4_12a54 = mul nuw nsw i32 %v4_12a4c, 256
  %v5_12a54 = or i32 %v4_12a54, %v4_12a48
  %v7_12a54 = icmp eq i32 %v5_12a54, 0
  %v3_12a58 = udiv i32 %v2_12a44, 65536
  %v1_12a5c = urem i32 %v3_12a50, 256
  store i32 %v1_12a5c, i32* %r6.global-to-local, align 4
  %v1_12a60 = urem i32 %v3_12a58, 256
  store i32 %v1_12a60, i32* %r5.global-to-local, align 4
  %v3_12a64 = udiv i32 %v2_12a44, 16777216
  store i32 %v3_12a64, i32* %r4.global-to-local, align 4
  %v1_12a68 = urem i32 %v2_12a44, 256
  br i1 %v7_12a54, label %bb, label %bb8

bb:                                               ; preds = %dec_label_pc_12a20
  store i32 %v3_12a24, i32* @r4, align 4
  ret i32 %v1_12a68

bb8:                                              ; preds = %dec_label_pc_12a20
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_12a74

dec_label_pc_12a74:                               ; preds = %dec_label_pc_12a74, %bb8
  %v2_12a80 = phi i32 [ %v1_12abc, %dec_label_pc_12a74 ], [ 0, %bb8 ]
  %v0_12a74 = phi i32 [ %v0_12ab4, %dec_label_pc_12a74 ], [ %v2_12a38, %bb8 ]
  %v1_12a74 = inttoptr i32 %v0_12a74 to i32*
  %v2_12a74 = load i32, i32* %v1_12a74, align 4
  %v2_12a78 = add i32 %v2_12a74, %v2_12a80
  %v3_12a78 = inttoptr i32 %v2_12a78 to i8*
  %v4_12a78 = load i8, i8* %v3_12a78, align 1
  %v6_12a78 = zext i8 %v4_12a78 to i32
  %v2_12a7c = xor i32 %v6_12a78, %v1_12a68
  %v1_12a80 = trunc i32 %v2_12a7c to i8
  store i8 %v1_12a80, i8* %v3_12a78, align 1
  %v0_12a84 = load i32, i32* %lr.global-to-local, align 4
  %v1_12a84 = inttoptr i32 %v0_12a84 to i32*
  %v2_12a84 = load i32, i32* %v1_12a84, align 4
  %v0_12a88 = load i32, i32* %ip.global-to-local, align 4
  %v2_12a88 = add i32 %v0_12a88, %v2_12a84
  %v3_12a88 = inttoptr i32 %v2_12a88 to i8*
  %v4_12a88 = load i8, i8* %v3_12a88, align 1
  %v6_12a88 = zext i8 %v4_12a88 to i32
  %v0_12a8c = load i32, i32* %r6.global-to-local, align 4
  %v2_12a8c = xor i32 %v0_12a8c, %v6_12a88
  %v1_12a90 = trunc i32 %v2_12a8c to i8
  store i8 %v1_12a90, i8* %v3_12a88, align 1
  %v0_12a94 = load i32, i32* %lr.global-to-local, align 4
  %v1_12a94 = inttoptr i32 %v0_12a94 to i32*
  %v2_12a94 = load i32, i32* %v1_12a94, align 4
  %v0_12a98 = load i32, i32* %ip.global-to-local, align 4
  %v2_12a98 = add i32 %v0_12a98, %v2_12a94
  %v3_12a98 = inttoptr i32 %v2_12a98 to i8*
  %v4_12a98 = load i8, i8* %v3_12a98, align 1
  %v6_12a98 = zext i8 %v4_12a98 to i32
  %v0_12a9c = load i32, i32* %r5.global-to-local, align 4
  %v2_12a9c = xor i32 %v0_12a9c, %v6_12a98
  %v1_12aa0 = trunc i32 %v2_12a9c to i8
  store i8 %v1_12aa0, i8* %v3_12a98, align 1
  %v0_12aa4 = load i32, i32* %lr.global-to-local, align 4
  %v1_12aa4 = inttoptr i32 %v0_12aa4 to i32*
  %v2_12aa4 = load i32, i32* %v1_12aa4, align 4
  %v0_12aa8 = load i32, i32* %ip.global-to-local, align 4
  %v2_12aa8 = add i32 %v0_12aa8, %v2_12aa4
  %v3_12aa8 = inttoptr i32 %v2_12aa8 to i8*
  %v4_12aa8 = load i8, i8* %v3_12aa8, align 1
  %v6_12aa8 = zext i8 %v4_12aa8 to i32
  %v0_12aac = load i32, i32* %r4.global-to-local, align 4
  %v2_12aac = xor i32 %v0_12aac, %v6_12aa8
  %v1_12ab0 = trunc i32 %v2_12aac to i8
  store i8 %v1_12ab0, i8* %v3_12aa8, align 1
  %v0_12ab4 = load i32, i32* %lr.global-to-local, align 4
  %v1_12ab4 = add i32 %v0_12ab4, 4
  %v2_12ab4 = inttoptr i32 %v1_12ab4 to i8*
  %v3_12ab4 = load i8, i8* %v2_12ab4, align 1
  %v4_12ab4 = zext i8 %v3_12ab4 to i32
  %v0_12ab8 = load i32, i32* %r7.global-to-local, align 4
  %v1_12ab8 = add i32 %v0_12ab8, 1
  %v2_12ab8 = inttoptr i32 %v1_12ab8 to i8*
  %v3_12ab8 = load i8, i8* %v2_12ab8, align 1
  %v4_12ab8 = zext i8 %v3_12ab8 to i32
  %v0_12abc = load i32, i32* %ip.global-to-local, align 4
  %v1_12abc = add i32 %v0_12abc, 1
  store i32 %v1_12abc, i32* %ip.global-to-local, align 4
  %v4_12ac0 = mul nuw nsw i32 %v4_12ab8, 256
  %v5_12ac0 = or i32 %v4_12ac0, %v4_12ab4
  %v8_12ac8 = icmp sgt i32 %v5_12ac0, %v1_12abc
  br i1 %v8_12ac8, label %dec_label_pc_12a74, label %dec_label_pc_12acc

dec_label_pc_12acc:                               ; preds = %dec_label_pc_12a74
  %v2_12acc = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_12acc, i32* @r4, align 4
  ret i32 %v1_12a68

; uselistorder directives
  uselistorder i32 %v1_12abc, { 1, 2, 0 }
  uselistorder i32 %v0_12ab4, { 1, 0 }
  uselistorder i32 %v1_12a68, { 0, 2, 1 }
  uselistorder i32 %v2_12a44, { 3, 0, 1, 2 }
  uselistorder i32 16777216, { 0, 1, 3, 2, 5, 4, 10, 11, 6, 12, 7, 8, 9, 13, 16, 14, 17, 15, 19, 18, 21, 20, 23, 22, 24, 25, 26, 27, 30, 28, 31, 29, 32, 33, 35, 34, 41, 36, 42, 37, 43, 38, 44, 39, 45, 40, 46, 49, 47, 48, 50, 51, 56, 52, 57, 53, 58, 54, 55, 59, 62, 60, 61, 63, 64, 69, 65, 70, 66, 71, 67, 68, 72, 80, 73, 81, 74, 82, 75, 83, 84, 76, 85, 77, 86, 78, 87, 79, 91, 88, 92, 89, 93, 90, 94, 101, 95, 102, 103, 96, 104, 99, 105, 97, 106, 107, 98, 100, 108, 109, 113, 110, 114, 115, 111, 112, 116, 117, 118, 121, 119, 122, 120, 123, 124, 125, 130, 126, 131, 127, 132, 128, 133, 129, 134, 135, 136, 137, 138, 139, 141, 140, 142 }
}

define i32 @function_12ad8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_12ad8:
  %fp.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_12ad8 = load i32, i32* @r4, align 4
  store i32 %v3_12ad8, i32* %stack_var_-36, align 4
  %v1_12ae0 = call i32* @malloc(i32 2)
  %v2_12ae0 = ptrtoint i32* %v1_12ae0 to i32
  store i32 2, i32* %r5.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1bd54.290 to i32), i32* %r4.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %v2_12ae0, i32* %r7.global-to-local, align 4
  %v4_12afc = call i32 @function_13068(i32 %v2_12ae0, i32 ptrtoint ([3 x i8]* @global_var_13968.298 to i32), i32 2)
  %v0_12b00 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v2_12ae0, i32* @global_var_1bd5c.299, align 4
  %v1_12b08 = trunc i32 %v0_12b00 to i8
  store i8 %v1_12b08, i8* bitcast (i32* @global_var_1bd60.300 to i8*), align 4
  %v0_12b0c = load i32, i32* %r6.global-to-local, align 4
  %v1_12b0c = trunc i32 %v0_12b0c to i8
  store i8 %v1_12b0c, i8* bitcast (i32* @global_var_1bd61.301 to i8*), align 4
  %v1_12b10 = call i32* @malloc(i32 %v0_12b00)
  %v3_12b10 = ptrtoint i32* %v1_12b10 to i32
  %v0_12b14 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v3_12b10, i32* %r7.global-to-local, align 4
  %v3_12b20 = call i32 @function_13068(i32 %v3_12b10, i32 ptrtoint (i32* @global_var_1396c.303 to i32), i32 %v0_12b14)
  store i32 %v3_12b10, i32* @global_var_1bd64.304, align 4
  %v0_12b2c = load i32, i32* %r5.global-to-local, align 4
  %v1_12b2c = trunc i32 %v0_12b2c to i8
  store i8 %v1_12b2c, i8* bitcast (i32* @global_var_1bd68.305 to i8*), align 4
  %v0_12b30 = load i32, i32* %r6.global-to-local, align 4
  %v1_12b30 = trunc i32 %v0_12b30 to i8
  store i8 %v1_12b30, i8* bitcast (i32* @global_var_1bd69.306 to i8*), align 4
  %v1_12b34 = call i32* @malloc(i32 29)
  %v3_12b34 = ptrtoint i32* %v1_12b34 to i32
  store i32 %v3_12b34, i32* %r5.global-to-local, align 4
  %v3_12b44 = call i32 @function_13068(i32 %v3_12b34, i32 ptrtoint (i32* @global_var_13ad4.308 to i32), i32 29)
  store i8 29, i8* bitcast (i32* @global_var_1bd70.309 to i8*), align 4
  %v0_12b54 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_12b54, i32* @global_var_1bd6c.310, align 4
  %v0_12b58 = load i32, i32* %r6.global-to-local, align 4
  %v1_12b58 = trunc i32 %v0_12b58 to i8
  store i8 %v1_12b58, i8* bitcast (i32* @global_var_1bd71.311 to i8*), align 4
  %v1_12b5c = call i32* @malloc(i32 6)
  %v2_12b5c = ptrtoint i32* %v1_12b5c to i32
  store i32 6, i32* %fp.global-to-local, align 4
  store i32 %v2_12b5c, i32* %r5.global-to-local, align 4
  %v4_12b70 = call i32 @function_13068(i32 %v2_12b5c, i32 ptrtoint ([7 x i8]* @global_var_13970.313 to i32), i32 6)
  %v0_12b78 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_12b78, i32* @global_var_1bd74.314, align 4
  store i8 6, i8* bitcast (i32* @global_var_1bd78.315 to i8*), align 4
  %v0_12b80 = load i32, i32* %r6.global-to-local, align 4
  %v1_12b80 = trunc i32 %v0_12b80 to i8
  store i8 %v1_12b80, i8* bitcast (i32* @global_var_1bd79.316 to i8*), align 4
  %v1_12b84 = call i32* @malloc(i32 7)
  %v3_12b84 = ptrtoint i32* %v1_12b84 to i32
  store i32 7, i32* %r8.global-to-local, align 4
  store i32 %v3_12b84, i32* %r5.global-to-local, align 4
  %v4_12b98 = call i32 @function_13068(i32 %v3_12b84, i32 ptrtoint ([8 x i8]* @global_var_13978.318 to i32), i32 7)
  %v0_12ba0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_12ba0, i32* @global_var_1bd7c.319, align 4
  store i8 7, i8* bitcast (i32* @global_var_1bd80.320 to i8*), align 4
  %v0_12ba8 = load i32, i32* %r6.global-to-local, align 4
  %v1_12ba8 = trunc i32 %v0_12ba8 to i8
  store i8 %v1_12ba8, i8* bitcast (i32* @global_var_1bd81.321 to i8*), align 4
  %v1_12bac = call i32* @malloc(i32 7)
  %v3_12bac = ptrtoint i32* %v1_12bac to i32
  %v0_12bb4 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v3_12bac, i32* %r5.global-to-local, align 4
  %v4_12bbc = call i32 @function_13068(i32 %v3_12bac, i32 ptrtoint ([8 x i8]* @global_var_13980.323 to i32), i32 %v0_12bb4)
  %v0_12bc4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_12bc4, i32* @global_var_1bd84.324, align 4
  %v1_12bc8 = trunc i32 %v0_12bb4 to i8
  store i8 %v1_12bc8, i8* bitcast (i32* @global_var_1bd88.325 to i8*), align 4
  %v0_12bcc = load i32, i32* %r6.global-to-local, align 4
  %v1_12bcc = trunc i32 %v0_12bcc to i8
  store i8 %v1_12bcc, i8* bitcast (i32* @global_var_1bd89.326 to i8*), align 4
  %v1_12bd0 = call i32* @malloc(i32 3)
  %v3_12bd0 = ptrtoint i32* %v1_12bd0 to i32
  store i32 %v3_12bd0, i32* %r5.global-to-local, align 4
  %v4_12be0 = call i32 @function_13068(i32 %v3_12bd0, i32 ptrtoint ([4 x i8]* @global_var_13988.328 to i32), i32 3)
  store i8 3, i8* bitcast (i32* @global_var_1bd90.329 to i8*), align 4
  %v0_12bf0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_12bf0, i32* @global_var_1bd8c.330, align 4
  %v0_12bf4 = load i32, i32* %r6.global-to-local, align 4
  %v1_12bf4 = trunc i32 %v0_12bf4 to i8
  store i8 %v1_12bf4, i8* bitcast (i32* @global_var_1bd91.331 to i8*), align 4
  %v1_12bf8 = call i32* @malloc(i32 19)
  %v3_12bf8 = ptrtoint i32* %v1_12bf8 to i32
  store i32 %v3_12bf8, i32* %r5.global-to-local, align 4
  %v3_12c08 = call i32 @function_13068(i32 %v3_12bf8, i32 ptrtoint (i32* @global_var_1398c.333 to i32), i32 19)
  store i8 19, i8* bitcast (i32* @global_var_1bd98.334 to i8*), align 4
  %v0_12c18 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_12c18, i32* @global_var_1bd94.335, align 4
  %v0_12c1c = load i32, i32* %r6.global-to-local, align 4
  %v1_12c1c = trunc i32 %v0_12c1c to i8
  store i8 %v1_12c1c, i8* bitcast (i32* @global_var_1bd99.336 to i8*), align 4
  %v1_12c20 = call i32* @malloc(i32 24)
  %v3_12c20 = ptrtoint i32* %v1_12c20 to i32
  store i32 %v3_12c20, i32* %r5.global-to-local, align 4
  %v3_12c30 = call i32 @function_13068(i32 %v3_12c20, i32 ptrtoint (i32* @global_var_139a0.338 to i32), i32 24)
  store i8 24, i8* bitcast (i32* @global_var_1bda0.339 to i8*), align 4
  %v0_12c40 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_12c40, i32* @global_var_1bd9c.340, align 4
  %v0_12c44 = load i32, i32* %r6.global-to-local, align 4
  %v1_12c44 = trunc i32 %v0_12c44 to i8
  store i8 %v1_12c44, i8* bitcast (i32* @global_var_1bda1.341 to i8*), align 4
  %v1_12c48 = call i32* @malloc(i32 9)
  %v3_12c48 = ptrtoint i32* %v1_12c48 to i32
  store i32 %v3_12c48, i32* %r5.global-to-local, align 4
  %v4_12c58 = call i32 @function_13068(i32 %v3_12c48, i32 ptrtoint ([10 x i8]* @global_var_139bc.343 to i32), i32 9)
  store i8 9, i8* bitcast (i32* @global_var_1bda8.344 to i8*), align 4
  %v0_12c68 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_12c68, i32* @global_var_1bda4.345, align 4
  %v0_12c6c = load i32, i32* %r6.global-to-local, align 4
  %v1_12c6c = trunc i32 %v0_12c6c to i8
  store i8 %v1_12c6c, i8* bitcast (i32* @global_var_1bda9.346 to i8*), align 4
  %v1_12c70 = call i32* @malloc(i32 16)
  %v2_12c70 = ptrtoint i32* %v1_12c70 to i32
  store i32 %v2_12c70, i32* %r5.global-to-local, align 4
  store i32 16, i32* %sb.global-to-local, align 4
  %v4_12c84 = call i32 @function_13068(i32 %v2_12c70, i32 ptrtoint ([17 x i8]* @global_var_139c8.348 to i32), i32 16)
  %v0_12c8c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_12c8c, i32* @global_var_1bdac.349, align 4
  store i8 16, i8* bitcast (i32* @global_var_1bdb0.350 to i8*), align 4
  %v0_12c94 = load i32, i32* %r6.global-to-local, align 4
  %v1_12c94 = trunc i32 %v0_12c94 to i8
  store i8 %v1_12c94, i8* bitcast (i32* @global_var_1bdb1.351 to i8*), align 4
  %v1_12c98 = call i32* @malloc(i32 22)
  %v3_12c98 = ptrtoint i32* %v1_12c98 to i32
  store i32 %v3_12c98, i32* %r5.global-to-local, align 4
  %v4_12ca8 = call i32 @function_13068(i32 %v3_12c98, i32 ptrtoint ([23 x i8]* @global_var_139dc.353 to i32), i32 22)
  %v0_12cb0 = load i32, i32* %r8.global-to-local, align 4
  store i8 22, i8* bitcast (i32* @global_var_1bdb8.354 to i8*), align 4
  %v0_12cb8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_12cb8, i32* @global_var_1bdb4.355, align 4
  %v0_12cbc = load i32, i32* %r6.global-to-local, align 4
  %v1_12cbc = trunc i32 %v0_12cbc to i8
  store i8 %v1_12cbc, i8* bitcast (i32* @global_var_1bdb9.356 to i8*), align 4
  %v1_12cc0 = call i32* @malloc(i32 %v0_12cb0)
  %v3_12cc0 = ptrtoint i32* %v1_12cc0 to i32
  %v0_12cc8 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v3_12cc0, i32* %r5.global-to-local, align 4
  %v4_12cd0 = call i32 @function_13068(i32 %v3_12cc0, i32 ptrtoint ([8 x i8]* @global_var_139f4.358 to i32), i32 %v0_12cc8)
  %v0_12cd8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_12cd8, i32* @global_var_1bdbc.359, align 4
  %v1_12cdc = trunc i32 %v0_12cc8 to i8
  store i8 %v1_12cdc, i8* bitcast (i32* @global_var_1bdc0.360 to i8*), align 4
  %v0_12ce0 = load i32, i32* %r6.global-to-local, align 4
  %v1_12ce0 = trunc i32 %v0_12ce0 to i8
  store i8 %v1_12ce0, i8* bitcast (i32* @global_var_1bdc1.361 to i8*), align 4
  %v1_12ce4 = call i32* @malloc(i32 5)
  %v3_12ce4 = ptrtoint i32* %v1_12ce4 to i32
  store i32 %v3_12ce4, i32* %r5.global-to-local, align 4
  %v4_12cf4 = call i32 @function_13068(i32 %v3_12ce4, i32 ptrtoint ([6 x i8]* @global_var_139fc.363 to i32), i32 5)
  store i8 5, i8* bitcast (i32* @global_var_1bdc8.364 to i8*), align 4
  %v0_12d04 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_12d04, i32* @global_var_1bdc4.365, align 4
  %v0_12d08 = load i32, i32* %r6.global-to-local, align 4
  %v1_12d08 = trunc i32 %v0_12d08 to i8
  store i8 %v1_12d08, i8* bitcast (i32* @global_var_1bdc9.366 to i8*), align 4
  %v1_12d0c = call i32* @malloc(i32 4)
  %v3_12d0c = ptrtoint i32* %v1_12d0c to i32
  store i32 %v3_12d0c, i32* %r5.global-to-local, align 4
  %v4_12d1c = call i32 @function_13068(i32 %v3_12d0c, i32 ptrtoint ([5 x i8]* @global_var_13a04.368 to i32), i32 4)
  %v0_12d24 = load i32, i32* %fp.global-to-local, align 4
  store i8 4, i8* bitcast (i32* @global_var_1bdd0.369 to i8*), align 4
  %v0_12d2c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_12d2c, i32* @global_var_1bdcc.370, align 4
  %v0_12d30 = load i32, i32* %r6.global-to-local, align 4
  %v1_12d30 = trunc i32 %v0_12d30 to i8
  store i8 %v1_12d30, i8* bitcast (i32* @global_var_1bdd1.371 to i8*), align 4
  %v1_12d34 = call i32* @malloc(i32 %v0_12d24)
  %v3_12d34 = ptrtoint i32* %v1_12d34 to i32
  %v0_12d3c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v3_12d34, i32* %r5.global-to-local, align 4
  %v4_12d44 = call i32 @function_13068(i32 %v3_12d34, i32 ptrtoint ([7 x i8]* @global_var_13a0c.373 to i32), i32 %v0_12d3c)
  %v0_12d4c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_12d4c, i32* @global_var_1bdd4.374, align 4
  %v1_12d50 = trunc i32 %v0_12d3c to i8
  store i8 %v1_12d50, i8* bitcast (i32* @global_var_1bdd8.375 to i8*), align 4
  %v0_12d54 = load i32, i32* %r6.global-to-local, align 4
  %v1_12d54 = trunc i32 %v0_12d54 to i8
  store i8 %v1_12d54, i8* bitcast (i32* @global_var_1bdd9.376 to i8*), align 4
  %v1_12d58 = call i32* @malloc(i32 14)
  %v2_12d58 = ptrtoint i32* %v1_12d58 to i32
  store i32 %v2_12d58, i32* %r5.global-to-local, align 4
  store i32 14, i32* %sl.global-to-local, align 4
  %v4_12d6c = call i32 @function_13068(i32 %v2_12d58, i32 ptrtoint ([15 x i8]* @global_var_13a14.378 to i32), i32 14)
  %v0_12d74 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_12d74, i32* @global_var_1bddc.379, align 4
  store i8 14, i8* bitcast (i32* @global_var_1bde0.380 to i8*), align 4
  %v0_12d7c = load i32, i32* %r6.global-to-local, align 4
  %v1_12d7c = trunc i32 %v0_12d7c to i8
  store i8 %v1_12d7c, i8* bitcast (i32* @global_var_1bde1.381 to i8*), align 4
  %v1_12d80 = call i32* @malloc(i32 8)
  %v2_12d80 = ptrtoint i32* %v1_12d80 to i32
  store i32 8, i32* %r7.global-to-local, align 4
  store i32 %v2_12d80, i32* %r5.global-to-local, align 4
  %v4_12d94 = call i32 @function_13068(i32 %v2_12d80, i32 ptrtoint ([9 x i8]* @global_var_13a24.383 to i32), i32 8)
  %v0_12d98 = load i32, i32* %r8.global-to-local, align 4
  %v0_12d9c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_12d9c, i32* @global_var_1be3c.384, align 4
  store i8 8, i8* bitcast (i32* @global_var_1be40.385 to i8*), align 4
  %v0_12da4 = load i32, i32* %r6.global-to-local, align 4
  %v1_12da4 = trunc i32 %v0_12da4 to i8
  store i8 %v1_12da4, i8* bitcast (i32* @global_var_1be41.386 to i8*), align 4
  %v1_12da8 = call i32* @malloc(i32 %v0_12d98)
  %v3_12da8 = ptrtoint i32* %v1_12da8 to i32
  %v0_12db0 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v3_12da8, i32* %r5.global-to-local, align 4
  %v4_12db8 = call i32 @function_13068(i32 %v3_12da8, i32 ptrtoint ([8 x i8]* @global_var_13a30.388 to i32), i32 %v0_12db0)
  %v0_12dbc = load i32, i32* %sb.global-to-local, align 4
  %v0_12dc0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_12dc0, i32* @global_var_1be44.389, align 4
  %v1_12dc4 = trunc i32 %v0_12db0 to i8
  store i8 %v1_12dc4, i8* bitcast (i32* @global_var_1be48.390 to i8*), align 4
  %v0_12dc8 = load i32, i32* %r6.global-to-local, align 4
  %v1_12dc8 = trunc i32 %v0_12dc8 to i8
  %v2_12dc8 = load i32, i32* %r4.global-to-local, align 4
  %v3_12dc8 = add i32 %v2_12dc8, 245
  %v4_12dc8 = inttoptr i32 %v3_12dc8 to i8*
  store i8 %v1_12dc8, i8* %v4_12dc8, align 1
  %v1_12dcc = call i32* @malloc(i32 %v0_12dbc)
  %v3_12dcc = ptrtoint i32* %v1_12dcc to i32
  %v0_12dd4 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v3_12dcc, i32* %r5.global-to-local, align 4
  %v4_12ddc = call i32 @function_13068(i32 %v3_12dcc, i32 ptrtoint ([17 x i8]* @global_var_13a38.392 to i32), i32 %v0_12dd4)
  %v0_12de0 = load i32, i32* %r7.global-to-local, align 4
  %v0_12de4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_12de4, i32* @global_var_1bde4.393, align 4
  %v1_12de8 = trunc i32 %v0_12dd4 to i8
  store i8 %v1_12de8, i8* bitcast (i32* @global_var_1bde8.394 to i8*), align 4
  %v0_12dec = load i32, i32* %r6.global-to-local, align 4
  %v1_12dec = trunc i32 %v0_12dec to i8
  store i8 %v1_12dec, i8* bitcast (i32* @global_var_1bde9.395 to i8*), align 4
  %v1_12df0 = call i32* @malloc(i32 %v0_12de0)
  %v3_12df0 = ptrtoint i32* %v1_12df0 to i32
  %v0_12df8 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v3_12df0, i32* %r5.global-to-local, align 4
  %v4_12e00 = call i32 @function_13068(i32 %v3_12df0, i32 ptrtoint ([9 x i8]* @global_var_13a4c.397 to i32), i32 %v0_12df8)
  %v0_12e08 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_12e08, i32* @global_var_1bdec.398, align 4
  %v1_12e0c = trunc i32 %v0_12df8 to i8
  store i8 %v1_12e0c, i8* bitcast (i32* @global_var_1bdf0.399 to i8*), align 4
  %v0_12e10 = load i32, i32* %r6.global-to-local, align 4
  %v1_12e10 = trunc i32 %v0_12e10 to i8
  store i8 %v1_12e10, i8* bitcast (i32* @global_var_1bdf1.400 to i8*), align 4
  %v1_12e14 = call i32* @malloc(i32 21)
  %v3_12e14 = ptrtoint i32* %v1_12e14 to i32
  store i32 %v3_12e14, i32* %r5.global-to-local, align 4
  %v3_12e24 = call i32 @function_13068(i32 %v3_12e14, i32 ptrtoint (i32* @global_var_13af4.402 to i32), i32 21)
  store i8 21, i8* bitcast (i32* @global_var_1bdf8.403 to i8*), align 4
  %v0_12e34 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_12e34, i32* @global_var_1bdf4.404, align 4
  %v0_12e38 = load i32, i32* %r6.global-to-local, align 4
  %v1_12e38 = trunc i32 %v0_12e38 to i8
  store i8 %v1_12e38, i8* bitcast (i32* @global_var_1bdf9.405 to i8*), align 4
  %v1_12e3c = call i32* @malloc(i32 17)
  %v3_12e3c = ptrtoint i32* %v1_12e3c to i32
  store i32 %v3_12e3c, i32* %r5.global-to-local, align 4
  %v4_12e4c = call i32 @function_13068(i32 %v3_12e3c, i32 ptrtoint ([18 x i8]* @global_var_13a58.407 to i32), i32 17)
  store i8 17, i8* bitcast (i32* @global_var_1be00.408 to i8*), align 4
  %v0_12e5c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_12e5c, i32* @global_var_1bdfc.409, align 4
  %v0_12e60 = load i32, i32* %r6.global-to-local, align 4
  %v1_12e60 = trunc i32 %v0_12e60 to i8
  store i8 %v1_12e60, i8* bitcast (i32* @global_var_1be01.410 to i8*), align 4
  %v1_12e64 = call i32* @malloc(i32 12)
  %v3_12e64 = ptrtoint i32* %v1_12e64 to i32
  store i32 %v3_12e64, i32* %r5.global-to-local, align 4
  %v4_12e74 = call i32 @function_13068(i32 %v3_12e64, i32 ptrtoint ([13 x i8]* @global_var_13a6c.412 to i32), i32 12)
  %v0_12e7c = load i32, i32* %sl.global-to-local, align 4
  store i8 12, i8* bitcast (i32* @global_var_1be08.413 to i8*), align 4
  %v0_12e84 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_12e84, i32* @global_var_1be04.414, align 4
  %v0_12e88 = load i32, i32* %r6.global-to-local, align 4
  %v1_12e88 = trunc i32 %v0_12e88 to i8
  store i8 %v1_12e88, i8* bitcast (i32* @global_var_1be09.415 to i8*), align 4
  %v1_12e8c = call i32* @malloc(i32 %v0_12e7c)
  %v3_12e8c = ptrtoint i32* %v1_12e8c to i32
  %v0_12e94 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v3_12e8c, i32* %r5.global-to-local, align 4
  %v4_12e9c = call i32 @function_13068(i32 %v3_12e8c, i32 ptrtoint ([15 x i8]* @global_var_13a7c.417 to i32), i32 %v0_12e94)
  %v0_12ea4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_12ea4, i32* @global_var_1be0c.418, align 4
  %v1_12ea8 = trunc i32 %v0_12e94 to i8
  store i8 %v1_12ea8, i8* bitcast (i32* @global_var_1be10.419 to i8*), align 4
  %v0_12eac = load i32, i32* %r6.global-to-local, align 4
  %v1_12eac = trunc i32 %v0_12eac to i8
  store i8 %v1_12eac, i8* bitcast (i32* @global_var_1be11.420 to i8*), align 4
  %v1_12eb0 = call i32* @malloc(i32 19)
  %v3_12eb0 = ptrtoint i32* %v1_12eb0 to i32
  store i32 %v3_12eb0, i32* %r5.global-to-local, align 4
  %v4_12ec0 = call i32 @function_13068(i32 %v3_12eb0, i32 ptrtoint ([20 x i8]* @global_var_13a8c.422 to i32), i32 19)
  %v0_12ec8 = load i32, i32* %r7.global-to-local, align 4
  store i8 19, i8* bitcast (i32* @global_var_1be18.423 to i8*), align 4
  %v0_12ed0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_12ed0, i32* @global_var_1be14.424, align 4
  %v0_12ed4 = load i32, i32* %r6.global-to-local, align 4
  %v1_12ed4 = trunc i32 %v0_12ed4 to i8
  store i8 %v1_12ed4, i8* bitcast (i32* @global_var_1be19.425 to i8*), align 4
  %v1_12ed8 = call i32* @malloc(i32 %v0_12ec8)
  %v3_12ed8 = ptrtoint i32* %v1_12ed8 to i32
  %v0_12ee0 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v3_12ed8, i32* %r5.global-to-local, align 4
  %v4_12ee8 = call i32 @function_13068(i32 %v3_12ed8, i32 ptrtoint ([9 x i8]* @global_var_13aa0.427 to i32), i32 %v0_12ee0)
  %v0_12ef0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_12ef0, i32* @global_var_1be1c.428, align 4
  %v1_12ef4 = trunc i32 %v0_12ee0 to i8
  store i8 %v1_12ef4, i8* bitcast (i32* @global_var_1be20.429 to i8*), align 4
  %v0_12ef8 = load i32, i32* %r6.global-to-local, align 4
  %v1_12ef8 = trunc i32 %v0_12ef8 to i8
  store i8 %v1_12ef8, i8* bitcast (i32* @global_var_1be21.430 to i8*), align 4
  %v1_12efc = call i32* @malloc(i32 5)
  %v3_12efc = ptrtoint i32* %v1_12efc to i32
  store i32 %v3_12efc, i32* %r5.global-to-local, align 4
  %v4_12f0c = call i32 @function_13068(i32 %v3_12efc, i32 ptrtoint ([6 x i8]* @global_var_13aac.432 to i32), i32 5)
  %v0_12f14 = load i32, i32* %fp.global-to-local, align 4
  store i8 5, i8* bitcast (i32* @global_var_1be28.433 to i8*), align 4
  %v0_12f1c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_12f1c, i32* @global_var_1be24.434, align 4
  %v0_12f20 = load i32, i32* %r6.global-to-local, align 4
  %v1_12f20 = trunc i32 %v0_12f20 to i8
  store i8 %v1_12f20, i8* bitcast (i32* @global_var_1be29.435 to i8*), align 4
  %v1_12f24 = call i32* @malloc(i32 %v0_12f14)
  %v3_12f24 = ptrtoint i32* %v1_12f24 to i32
  %v0_12f2c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v3_12f24, i32* %r5.global-to-local, align 4
  %v4_12f34 = call i32 @function_13068(i32 %v3_12f24, i32 ptrtoint ([7 x i8]* @global_var_13ab4.437 to i32), i32 %v0_12f2c)
  %v0_12f3c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_12f3c, i32* @global_var_1be2c.438, align 4
  %v1_12f40 = trunc i32 %v0_12f2c to i8
  store i8 %v1_12f40, i8* bitcast (i32* @global_var_1be30.439 to i8*), align 4
  %v0_12f44 = load i32, i32* %r6.global-to-local, align 4
  %v1_12f44 = trunc i32 %v0_12f44 to i8
  store i8 %v1_12f44, i8* bitcast (i32* @global_var_1be31.440 to i8*), align 4
  %v1_12f48 = call i32* @malloc(i32 23)
  %v3_12f48 = ptrtoint i32* %v1_12f48 to i32
  store i32 %v3_12f48, i32* %r5.global-to-local, align 4
  %v4_12f58 = call i32 @function_13068(i32 %v3_12f48, i32 ptrtoint ([24 x i8]* @global_var_13abc.442 to i32), i32 23)
  %v0_12f60 = load i32, i32* %r6.global-to-local, align 4
  %v1_12f60 = trunc i32 %v0_12f60 to i8
  store i8 %v1_12f60, i8* bitcast (i32* @global_var_1be39.443 to i8*), align 4
  %v0_12f64 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_12f64, i32* @global_var_1be34.444, align 4
  store i8 23, i8* bitcast (i32* @global_var_1be38.445 to i8*), align 4
  %v2_12f6c = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_12f6c, i32* @r4, align 4
  ret i32 %v4_12f58

; uselistorder directives
  uselistorder i32 %v3_12f24, { 1, 0 }
  uselistorder i32 %v3_12ed8, { 1, 0 }
  uselistorder i32 %v3_12e8c, { 1, 0 }
  uselistorder i32 %v3_12df0, { 1, 0 }
  uselistorder i32 %v3_12dcc, { 1, 0 }
  uselistorder i32 %v3_12da8, { 1, 0 }
  uselistorder i32 %v2_12d80, { 1, 0 }
  uselistorder i32 %v3_12d34, { 1, 0 }
  uselistorder i32 %v3_12cc0, { 1, 0 }
  uselistorder i32 %v3_12bac, { 1, 0 }
  uselistorder i32 %v3_12b84, { 1, 0 }
  uselistorder i32 %v2_12b5c, { 1, 0 }
  uselistorder i32 %v3_12b10, { 0, 2, 1 }
  uselistorder i32 %v2_12ae0, { 0, 2, 1 }
  uselistorder i8 23, { 1, 2, 0, 3 }
  uselistorder i32 23, { 2, 1, 7, 8, 9, 0, 3, 4, 5, 6 }
  uselistorder i32 12, { 9, 5, 30, 24, 27, 31, 16, 17, 18, 32, 15, 19, 20, 21, 22, 23, 25, 28, 29, 26, 33, 34, 35, 4, 36, 37, 39, 40, 42, 41, 10, 43, 11, 44, 12, 45, 3, 46, 38, 81, 47, 48, 49, 50, 13, 51, 52, 53, 54, 55, 14, 56, 57, 58, 59, 60, 61, 6, 62, 63, 64, 65, 66, 67, 7, 68, 69, 8, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 0, 1, 2 }
  uselistorder i32 17, { 3, 0, 14, 15, 4, 5, 6, 7, 16, 17, 1, 18, 19, 20, 2, 21, 22, 23, 24, 25, 26, 8, 27, 9, 28, 29, 30, 10, 31, 11, 12, 13 }
  uselistorder i32 21, { 3, 2, 9, 10, 8, 11, 7, 12, 0, 1, 4, 13, 5, 14, 6, 15 }
  uselistorder i32 245, { 1, 0 }
  uselistorder i32 14, { 0, 20, 1, 21, 22, 18, 19, 4, 23, 5, 24, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 25, 26, 17, 27, 28, 29, 30, 2, 31, 32, 33, 34, 3, 35 }
  uselistorder i8 4, { 1, 0 }
  uselistorder i8 5, { 11, 12, 13, 10, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 5, { 15, 4, 16, 5, 2, 18, 25, 19, 26, 20, 27, 17, 28, 3, 0, 29, 24, 21, 30, 22, 23, 31, 32, 6, 33, 34, 35, 7, 36, 37, 38, 39, 8, 40, 41, 42, 43, 9, 44, 48, 49, 50, 51, 10, 52, 53, 54, 55, 11, 56, 57, 58, 59, 60, 61, 62, 12, 63, 64, 65, 66, 67, 68, 69, 13, 70, 71, 72, 73, 74, 75, 76, 77, 14, 78, 79, 45, 1, 46, 47 }
  uselistorder i32 22, { 1, 0, 6, 7, 8, 2, 9, 3, 10, 4, 11, 5 }
  uselistorder i8 16, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 16 }
  uselistorder i32 19, { 4, 0, 5, 1, 13, 10, 11, 12, 14, 6, 7, 8, 9, 15, 2, 16, 3, 17 }
  uselistorder i32 7, { 0, 14, 26, 2, 16, 22, 17, 23, 18, 24, 15, 25, 1, 21, 27, 28, 19, 29, 20, 30, 31, 3, 32, 33, 4, 34, 35, 5, 36, 37, 6, 38, 39, 40, 41, 7, 42, 43, 44, 45, 8, 46, 47, 48, 49, 50, 9, 51, 52, 53, 54, 55, 10, 56, 57, 58, 59, 11, 60, 12, 13, 61 }
  uselistorder i32 6, { 2, 31, 3, 15, 27, 16, 28, 17, 29, 14, 30, 0, 25, 32, 26, 33, 18, 34, 1, 4, 35, 36, 37, 19, 38, 5, 39, 40, 41, 20, 42, 6, 43, 44, 45, 21, 46, 47, 48, 22, 49, 53, 54, 55, 7, 56, 57, 58, 59, 8, 60, 61, 62, 63, 64, 23, 65, 9, 66, 67, 68, 69, 70, 71, 24, 72, 10, 73, 74, 75, 76, 11, 77, 12, 13, 78, 50, 51, 52 }
  uselistorder i32 29, { 1, 0, 7, 4, 5, 6, 3, 8, 2 }
  uselistorder i32 (i32, i32, i32)* @function_13068, { 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 6, 0, 5, 4, 3, 2, 1, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_1bd54.290 to i32), { 5, 0, 1, 2, 3, 4 }
  uselistorder i32* (i32)* @malloc, { 31, 34, 14, 16, 33, 13, 9, 11, 30, 2, 12, 1, 7, 10, 6, 15, 18, 22, 17, 8, 23, 4, 24, 5, 32, 27, 28, 25, 3, 29, 26, 21, 20, 0, 19, 35 }
}

define i32 @function_12fec(i8* %arg1) local_unnamed_addr {
dec_label_pc_12fec:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_12ff0 = load i8, i8* %arg1, align 1
  %v4_12ff0 = zext i8 %v3_12ff0 to i32
  %v2_12ff4 = icmp eq i8 %v3_12ff0, 0
  br i1 %v2_12ff4, label %dec_label_pc_13010, label %bb

dec_label_pc_13010:                               ; preds = %dec_label_pc_13000, %dec_label_pc_12fec
  %merge = phi i32 [ %v4_12ff0, %dec_label_pc_12fec ], [ %v1_13000, %dec_label_pc_13000 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_12fec
  br label %dec_label_pc_13000

dec_label_pc_13000:                               ; preds = %dec_label_pc_13000, %bb
  %v0_13000 = phi i32 [ %v1_13000, %dec_label_pc_13000 ], [ 0, %bb ]
  %v1_13000 = add i32 %v0_13000, 1
  %v2_13004 = add i32 %v1_13000, %tmp
  %v3_13004 = inttoptr i32 %v2_13004 to i8*
  %v4_13004 = load i8, i8* %v3_13004, align 1
  %v2_13008 = icmp eq i8 %v4_13004, 0
  br i1 %v2_13008, label %dec_label_pc_13010, label %dec_label_pc_13000

; uselistorder directives
  uselistorder i32 %v1_13000, { 1, 0, 2 }
}

define i32 @function_13014(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13014:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_13014 = load i8, i8* %arg1, align 1
  %v3_13014 = zext i8 %v2_13014 to i32
  %v2_13018 = icmp eq i8 %v2_13014, 0
  br i1 %v2_13018, label %dec_label_pc_1305c, label %dec_label_pc_13020

dec_label_pc_13020:                               ; preds = %dec_label_pc_13014
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13024

dec_label_pc_13024:                               ; preds = %dec_label_pc_13024, %dec_label_pc_13020
  %v0_13024 = phi i32 [ %v1_13024, %dec_label_pc_13024 ], [ 0, %dec_label_pc_13020 ]
  %v1_13024 = add i32 %v0_13024, 1
  store i32 %v1_13024, i32* %ip.global-to-local, align 4
  %v2_13028 = add i32 %v1_13024, %tmp
  %v3_13028 = inttoptr i32 %v2_13028 to i8*
  %v4_13028 = load i8, i8* %v3_13028, align 1
  %v2_1302c = icmp eq i8 %v4_13028, 0
  br i1 %v2_1302c, label %dec_label_pc_13034, label %dec_label_pc_13024

dec_label_pc_13034:                               ; preds = %dec_label_pc_13024
  %v7_13034 = icmp eq i32 %v0_13024, -2
  br i1 %v7_13034, label %dec_label_pc_13054, label %dec_label_pc_13040.preheader

dec_label_pc_13040.preheader:                     ; preds = %dec_label_pc_13034, %dec_label_pc_1305c
  %storemerge = phi i32 [ %v3_13014, %dec_label_pc_1305c ], [ %v1_13024, %dec_label_pc_13034 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_1304c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_13040

dec_label_pc_13040:                               ; preds = %dec_label_pc_13040.dec_label_pc_13040_crit_edge, %dec_label_pc_13040.preheader
  %v2_1304c = phi i32 [ %v5_1304c, %dec_label_pc_13040.dec_label_pc_13040_crit_edge ], [ %v2_1304c.pre, %dec_label_pc_13040.preheader ]
  %v0_13044 = phi i32 [ %v0_13044.pre, %dec_label_pc_13040.dec_label_pc_13040_crit_edge ], [ %tmp, %dec_label_pc_13040.preheader ]
  %v0_13040 = phi i32 [ %v0_13040.pre, %dec_label_pc_13040.dec_label_pc_13040_crit_edge ], [ %storemerge, %dec_label_pc_13040.preheader ]
  %v1_13040 = add i32 %v0_13040, -1
  store i32 %v1_13040, i32* %r2.global-to-local, align 4
  %v1_13044 = inttoptr i32 %v0_13044 to i8*
  %v2_13044 = load i8, i8* %v1_13044, align 1
  %v5_13044 = add i32 %v0_13044, 1
  store i32 %v5_13044, i32* %r1.global-to-local, align 4
  %v3_13048 = icmp eq i32 %v0_13040, 0
  %v3_1304c = inttoptr i32 %v2_1304c to i8*
  store i8 %v2_13044, i8* %v3_1304c, align 1
  %v4_1304c = load i32, i32* @r0, align 4
  %v5_1304c = add i32 %v4_1304c, 1
  store i32 %v5_1304c, i32* @r0, align 4
  br i1 %v3_13048, label %dec_label_pc_13054.loopexit, label %dec_label_pc_13040.dec_label_pc_13040_crit_edge

dec_label_pc_13040.dec_label_pc_13040_crit_edge:  ; preds = %dec_label_pc_13040
  %v0_13040.pre = load i32, i32* %r2.global-to-local, align 4
  %v0_13044.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13040

dec_label_pc_13054.loopexit:                      ; preds = %dec_label_pc_13040
  %v0_13054.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13054

dec_label_pc_13054:                               ; preds = %dec_label_pc_13054.loopexit, %dec_label_pc_13034
  %v0_13054 = phi i32 [ %v0_13054.pre, %dec_label_pc_13054.loopexit ], [ %v1_13024, %dec_label_pc_13034 ]
  ret i32 %v0_13054

dec_label_pc_1305c:                               ; preds = %dec_label_pc_13014
  store i32 %v3_13014, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13040.preheader

; uselistorder directives
  uselistorder i32 %v5_1304c, { 1, 0 }
  uselistorder i32 %v0_13044, { 1, 0 }
  uselistorder i32 %v1_13024, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v3_13014, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder label %dec_label_pc_13040.preheader, { 1, 0 }
}

define i32 @function_13068(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13068:
  %ip.global-to-local = alloca i32, align 4
  %v2_13068 = icmp eq i32 %arg3, 0
  br i1 %v2_13068, label %.loopexit, label %bb

.loopexit:                                        ; preds = %dec_label_pc_13074, %dec_label_pc_13068
  ret i32 %arg1

bb:                                               ; preds = %dec_label_pc_13068
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13074

dec_label_pc_13074:                               ; preds = %dec_label_pc_13074, %bb
  %v0_13074 = phi i32 [ %v1_1307c, %dec_label_pc_13074 ], [ 0, %bb ]
  %v2_13074 = add i32 %v0_13074, %arg2
  %v3_13074 = inttoptr i32 %v2_13074 to i8*
  %v4_13074 = load i8, i8* %v3_13074, align 1
  %v4_13078 = add i32 %v0_13074, %arg1
  %v5_13078 = inttoptr i32 %v4_13078 to i8*
  store i8 %v4_13074, i8* %v5_13078, align 1
  %v0_1307c = load i32, i32* %ip.global-to-local, align 4
  %v1_1307c = add i32 %v0_1307c, 1
  store i32 %v1_1307c, i32* %ip.global-to-local, align 4
  %v9_13080 = icmp eq i32 %v1_1307c, %arg3
  br i1 %v9_13080, label %.loopexit, label %dec_label_pc_13074

; uselistorder directives
  uselistorder i32 %v1_1307c, { 1, 2, 0 }
}

define i32 @function_1308c() local_unnamed_addr {
dec_label_pc_1308c:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %v0_1308c = load i32, i32* @r1, align 4
  %v2_1308c = icmp eq i32 %v0_1308c, 0
  br i1 %v2_1308c, label %bb, label %bb3

bb:                                               ; preds = %dec_label_pc_1308c
  %v2_13090 = load i32, i32* @r0, align 4
  ret i32 %v2_13090

bb3:                                              ; preds = %dec_label_pc_1308c
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_1309c4 = load i32, i32* @r0, align 4
  %v5_1309c5 = inttoptr i32 %v3_1309c4 to i8*
  store i8 0, i8* %v5_1309c5, align 1
  %v0_130a06 = load i32, i32* %r3.global-to-local, align 4
  %v1_130a07 = add i32 %v0_130a06, 1
  store i32 %v1_130a07, i32* %r3.global-to-local, align 4
  %v1_130a48 = load i32, i32* @r1, align 4
  %v9_130a410 = icmp eq i32 %v1_130a07, %v1_130a48
  br i1 %v9_130a410, label %dec_label_pc_130ac, label %dec_label_pc_1309c.dec_label_pc_1309c_crit_edge

dec_label_pc_1309c.dec_label_pc_1309c_crit_edge:  ; preds = %bb3, %dec_label_pc_1309c.dec_label_pc_1309c_crit_edge
  %v1_130a011 = phi i32 [ %v1_130a0, %dec_label_pc_1309c.dec_label_pc_1309c_crit_edge ], [ %v1_130a07, %bb3 ]
  %v0_1309c.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t = trunc i32 %v0_1309c.pre to i8
  %v3_1309c = load i32, i32* @r0, align 4
  %v4_1309c = add i32 %v3_1309c, %v1_130a011
  %v5_1309c = inttoptr i32 %v4_1309c to i8*
  store i8 %extract.t, i8* %v5_1309c, align 1
  %v0_130a0 = load i32, i32* %r3.global-to-local, align 4
  %v1_130a0 = add i32 %v0_130a0, 1
  store i32 %v1_130a0, i32* %r3.global-to-local, align 4
  %v1_130a4 = load i32, i32* @r1, align 4
  %v9_130a4 = icmp eq i32 %v1_130a0, %v1_130a4
  br i1 %v9_130a4, label %dec_label_pc_130ac, label %dec_label_pc_1309c.dec_label_pc_1309c_crit_edge

dec_label_pc_130ac:                               ; preds = %dec_label_pc_1309c.dec_label_pc_1309c_crit_edge, %bb3
  %v1_130ac = load i32, i32* @r0, align 4
  ret i32 %v1_130ac

; uselistorder directives
  uselistorder i32 %v1_130a0, { 1, 2, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_1309c.dec_label_pc_1309c_crit_edge, { 1, 0 }
}

define i32 @function_130b0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_130b0:
  %v7_130c4 = icmp sgt i32 %arg4, %arg2
  br i1 %v7_130c4, label %dec_label_pc_130c8, label %dec_label_pc_130d0

dec_label_pc_130c8:                               ; preds = %dec_label_pc_130e4, %dec_label_pc_130b0, %dec_label_pc_130d0
  ret i32 -1

dec_label_pc_130d0:                               ; preds = %dec_label_pc_130b0
  %tmp10 = icmp slt i32 %arg2, 1
  br i1 %tmp10, label %dec_label_pc_130c8, label %dec_label_pc_130d8

dec_label_pc_130d8:                               ; preds = %dec_label_pc_130d0
  br label %dec_label_pc_130f0

dec_label_pc_130e4:                               ; preds = %dec_label_pc_13108, %dec_label_pc_130f0
  %v1_130e4 = add i32 %v0_13110, 1
  %v9_130e8 = icmp eq i32 %v1_130e4, %arg2
  br i1 %v9_130e8, label %dec_label_pc_130c8, label %dec_label_pc_130f0

dec_label_pc_130f0:                               ; preds = %dec_label_pc_130e4, %dec_label_pc_130d8
  %v0_13110 = phi i32 [ %v1_130e4, %dec_label_pc_130e4 ], [ 0, %dec_label_pc_130d8 ]
  %v0_130fc = phi i32 [ %v1_130fc., %dec_label_pc_130e4 ], [ 0, %dec_label_pc_130d8 ]
  %v2_130f0 = add i32 %v0_130fc, %arg3
  %v3_130f0 = inttoptr i32 %v2_130f0 to i8*
  %v4_130f0 = load i8, i8* %v3_130f0, align 1
  %v2_130f4 = add i32 %v0_13110, %arg1
  %v3_130f4 = inttoptr i32 %v2_130f4 to i8*
  %v4_130f4 = load i8, i8* %v3_130f4, align 1
  %v9_130f8 = icmp eq i8 %v4_130f4, %v4_130f0
  %v1_130fc = add i32 %v0_130fc, 1
  %v1_130fc. = select i1 %v9_130f8, i32 %v1_130fc, i32 0
  br i1 %v9_130f8, label %dec_label_pc_13108, label %dec_label_pc_130e4

dec_label_pc_13108:                               ; preds = %dec_label_pc_130f0
  %v9_13108 = icmp eq i32 %v1_130fc., %arg4
  br i1 %v9_13108, label %dec_label_pc_13110, label %dec_label_pc_130e4

dec_label_pc_13110:                               ; preds = %dec_label_pc_13108
  %v1_13110 = add i32 %v0_13110, 1
  ret i32 %v1_13110

; uselistorder directives
  uselistorder i1 %v9_130f8, { 1, 0 }
  uselistorder i32 %v0_130fc, { 1, 0 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_130c8, { 0, 2, 1 }
}

define i32 @function_13118(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13118:
  %tmp = ptrtoint i8* %arg1 to i32
  br label %dec_label_pc_13124

dec_label_pc_13124:                               ; preds = %.thread, %dec_label_pc_1313c, %bb, %dec_label_pc_13118
  %v0_13124 = phi i32 [ %tmp, %dec_label_pc_13118 ], [ %v5_13124, %bb ], [ %v5_13124, %dec_label_pc_1313c ], [ %v5_13124, %.thread ]
  %v1_13124 = inttoptr i32 %v0_13124 to i8*
  %v2_13124 = load i8, i8* %v1_13124, align 1
  %v5_13124 = add i32 %v0_13124, 1
  %v7_1312c = icmp eq i8 %v2_13124, 9
  br i1 %v7_1312c, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_13124
  br label %dec_label_pc_13124

bb:                                               ; preds = %dec_label_pc_13124
  %v8_13130 = icmp eq i8 %v2_13124, 32
  br i1 %v8_13130, label %dec_label_pc_13124, label %dec_label_pc_1313c

dec_label_pc_1313c:                               ; preds = %bb
  %v7_1313c = icmp eq i8 %v2_13124, 10
  br i1 %v7_1313c, label %dec_label_pc_13124, label %dec_label_pc_13144

dec_label_pc_13144:                               ; preds = %dec_label_pc_1313c
  %v7_13144 = icmp eq i8 %v2_13124, 45
  br i1 %v7_13144, label %dec_label_pc_13224, label %dec_label_pc_1314c

dec_label_pc_1314c:                               ; preds = %dec_label_pc_13144
  %v7_1314c = icmp eq i8 %v2_13124, 43
  br i1 %v7_1314c, label %bb54, label %dec_label_pc_1315c

bb54:                                             ; preds = %dec_label_pc_1314c
  %v2_13150 = inttoptr i32 %v5_13124 to i8*
  %v3_13150 = load i8, i8* %v2_13150, align 1
  %v6_13150 = add i32 %v0_13124, 2
  br label %dec_label_pc_1315c

dec_label_pc_1315c:                               ; preds = %bb54, %dec_label_pc_1314c, %dec_label_pc_13224
  %v0_1320842 = phi i32 [ %v5_13224, %dec_label_pc_13224 ], [ %v5_13124, %dec_label_pc_1314c ], [ %v6_13150, %bb54 ]
  %v0_1318417.in = phi i8 [ %v2_13224, %dec_label_pc_13224 ], [ %v2_13124, %dec_label_pc_1314c ], [ %v3_13150, %bb54 ]
  %storemerge1 = phi i32 [ -2147483648, %dec_label_pc_13224 ], [ 2147483647, %dec_label_pc_1314c ], [ 2147483647, %bb54 ]
  %v0_13234 = phi i32 [ 1, %dec_label_pc_13224 ], [ 0, %dec_label_pc_1314c ], [ 0, %bb54 ]
  %v2_13164 = urem i32 %storemerge1, %arg2
  %v2_13174 = udiv i32 %storemerge1, %arg2
  store i32 %v2_13174, i32* @lr, align 4
  br label %dec_label_pc_13184

dec_label_pc_13184:                               ; preds = %.thread8, %dec_label_pc_1315c
  %v0_13208 = phi i32 [ %v5_13208, %.thread8 ], [ %v0_1320842, %dec_label_pc_1315c ]
  %v2_1320011 = phi i32 [ %v1_1321c29, %.thread8 ], [ 0, %dec_label_pc_1315c ]
  %v1_131dc = phi i32 [ %v0_1321027, %.thread8 ], [ 0, %dec_label_pc_1315c ]
  %v1_131c4.in = phi i8 [ %v2_13208, %.thread8 ], [ %v0_1318417.in, %dec_label_pc_1315c ]
  %v1_131c4 = zext i8 %v1_131c4.in to i32
  %v1_13184 = urem i32 %v1_131c4, 256
  %v1_13188 = add nsw i32 %v1_13184, -48
  %v1_13190 = add nsw i32 %v1_13184, -97
  %v1_13194 = add nsw i32 %v1_131c4, -48
  %v1_13198 = add nsw i32 %v1_13184, -65
  %tmp77 = icmp ult i32 %v1_13188, 10
  br i1 %tmp77, label %dec_label_pc_131c8, label %dec_label_pc_131a0

dec_label_pc_131a0:                               ; preds = %dec_label_pc_13184
  %v2_131a0 = icmp ugt i32 %v1_13198, 24
  %v7_131a0 = icmp eq i32 %v1_13198, 25
  %v2_131a4 = xor i1 %v7_131a0, true
  %v3_131a4 = and i1 %v2_131a0, %v2_131a4
  br i1 %v3_131a4, label %bb55, label %bb56

bb55:                                             ; preds = %dec_label_pc_131a0
  br label %bb56

bb56:                                             ; preds = %dec_label_pc_131a0, %bb55
  %v0_131b821 = phi i32 [ %v1_13194, %dec_label_pc_131a0 ], [ 0, %bb55 ]
  %v2_131a8 = xor i1 %v2_131a0, true
  %v3_131a8 = or i1 %v7_131a0, %v2_131a8
  br i1 %v3_131a8, label %bb57, label %bb58

bb57:                                             ; preds = %bb56
  br label %bb58

bb58:                                             ; preds = %bb56, %bb57
  %v0_131b8 = phi i32 [ %v0_131b821, %bb56 ], [ 1, %bb57 ]
  br i1 %v3_131a4, label %bb59, label %bb60

bb59:                                             ; preds = %bb58
  %v6_131b0 = icmp ugt i32 %v1_13190, 24
  %v11_131b0 = icmp eq i32 %v1_13190, 25
  br label %bb60

bb60:                                             ; preds = %bb58, %bb59
  %v1_131b4 = phi i1 [ %v7_131a0, %bb58 ], [ %v11_131b0, %bb59 ]
  %v0_131b4 = phi i1 [ %v2_131a0, %bb58 ], [ %v6_131b0, %bb59 ]
  %v2_131b4 = xor i1 %v1_131b4, true
  %v3_131b4 = and i1 %v0_131b4, %v2_131b4
  br i1 %v3_131b4, label %dec_label_pc_13210, label %dec_label_pc_131b8

dec_label_pc_131b8:                               ; preds = %bb60
  %v2_131b8 = icmp eq i32 %v0_131b8, 0
  %. = select i1 %v2_131b8, i32 87, i32 55
  %v2_131c4 = sub nsw i32 %v1_131c4, %.
  br label %dec_label_pc_131c8

dec_label_pc_131c8:                               ; preds = %dec_label_pc_13184, %dec_label_pc_131b8
  %v0_131dc37 = phi i32 [ %v1_13198, %dec_label_pc_13184 ], [ %., %dec_label_pc_131b8 ]
  %v3_1320012 = phi i32 [ %v1_13194, %dec_label_pc_13184 ], [ %v2_131c4, %dec_label_pc_131b8 ]
  %v6_131cc = icmp slt i32 %v3_1320012, %arg2
  br i1 %v6_131cc, label %dec_label_pc_131d0, label %dec_label_pc_13210

dec_label_pc_131d0:                               ; preds = %dec_label_pc_131c8
  %v3_131d0 = icmp uge i32 %v2_1320011, %v2_13174
  %v9_131d0 = icmp eq i32 %v2_1320011, %v2_13174
  %v2_131d4 = xor i1 %v3_131d0, true
  %v3_131d4 = or i1 %v9_131d0, %v2_131d4
  br i1 %v3_131d4, label %bb63, label %bb64

bb63:                                             ; preds = %dec_label_pc_131d0
  br label %bb64

bb64:                                             ; preds = %dec_label_pc_131d0, %bb63
  %v0_131dc36 = phi i32 [ %v0_131dc37, %dec_label_pc_131d0 ], [ 0, %bb63 ]
  %v2_131d8 = xor i1 %v9_131d0, true
  %v3_131d8 = and i1 %v3_131d0, %v2_131d8
  br i1 %v3_131d8, label %bb65, label %bb66

bb65:                                             ; preds = %bb64
  br label %bb66

bb66:                                             ; preds = %bb64, %bb65
  %v0_131dc = phi i32 [ %v0_131dc36, %bb64 ], [ 1, %bb65 ]
  %tmp78 = icmp slt i32 %v1_131dc, 0
  %v4_131dc = zext i1 %tmp78 to i32
  %v5_131dc = or i32 %v0_131dc, %v4_131dc
  %v7_131dc = icmp eq i32 %v5_131dc, 0
  br i1 %v7_131dc, label %dec_label_pc_131e8, label %.thread8

dec_label_pc_131e8:                               ; preds = %bb66
  %v7_131f8 = icmp sgt i32 %v3_1320012, %v2_13164
  br i1 %v7_131f8, label %bb69, label %.thread5

.thread5:                                         ; preds = %dec_label_pc_131e8
  br label %bb70

bb69:                                             ; preds = %dec_label_pc_131e8
  %v2_131fc = icmp eq i1 %v9_131d0, false
  br i1 %v2_131fc, label %bb70, label %.thread8

bb70:                                             ; preds = %bb69, %.thread5
  %v4_1320013 = mul i32 %v2_1320011, %arg2
  %v5_1320014 = add i32 %v3_1320012, %v4_1320013
  br label %.thread8

.thread8:                                         ; preds = %bb69, %bb66, %bb70
  %v1_1321c29 = phi i32 [ %v2_1320011, %bb69 ], [ %v2_1320011, %bb66 ], [ %v5_1320014, %bb70 ]
  %v0_1321027 = phi i32 [ -1, %bb69 ], [ -1, %bb66 ], [ 1, %bb70 ]
  %v1_13208 = inttoptr i32 %v0_13208 to i8*
  %v2_13208 = load i8, i8* %v1_13208, align 1
  %v5_13208 = add i32 %v0_13208, 1
  br label %dec_label_pc_13184

dec_label_pc_13210:                               ; preds = %dec_label_pc_131c8, %bb60
  %v1_13210 = icmp slt i32 %v1_131dc, 0
  %v2_13234 = icmp eq i32 %v0_13234, 0
  br i1 %v1_13210, label %dec_label_pc_13234, label %dec_label_pc_13218

dec_label_pc_13218:                               ; preds = %dec_label_pc_13210
  br i1 %v2_13234, label %bb72, label %bb71

bb71:                                             ; preds = %dec_label_pc_13218
  %v2_1321c = sub i32 0, %v2_1320011
  br label %bb72

bb72:                                             ; preds = %dec_label_pc_13218, %bb71
  %v23_13220 = phi i32 [ %v2_1320011, %dec_label_pc_13218 ], [ %v2_1321c, %bb71 ]
  ret i32 %v23_13220

dec_label_pc_13224:                               ; preds = %dec_label_pc_13144
  %v1_13224 = inttoptr i32 %v5_13124 to i8*
  %v2_13224 = load i8, i8* %v1_13224, align 1
  %v5_13224 = add i32 %v0_13124, 2
  br label %dec_label_pc_1315c

dec_label_pc_13234:                               ; preds = %dec_label_pc_13210
  %.76 = select i1 %v2_13234, i32 2147483647, i32 -2147483648
  ret i32 %.76

; uselistorder directives
  uselistorder i1 %v9_131d0, { 1, 0, 2 }
  uselistorder i1 %v3_131d0, { 1, 0 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i1 %v7_131a0, { 1, 2, 0 }
  uselistorder i1 %v2_131a0, { 1, 0, 2 }
  uselistorder i32 %v1_13184, { 1, 2, 0 }
  uselistorder i32 %v1_131c4, { 1, 0, 2 }
  uselistorder i32 %v1_131dc, { 1, 0 }
  uselistorder i32 %v2_1320011, { 0, 1, 6, 3, 2, 4, 5 }
  uselistorder i32 %v0_13208, { 1, 0 }
  uselistorder i32 %v2_13174, { 1, 0, 2 }
  uselistorder i32 %storemerge1, { 1, 0 }
  uselistorder i32 %v5_13124, { 4, 3, 5, 2, 1, 0 }
  uselistorder i32 %v0_13124, { 0, 1, 3, 2 }
  uselistorder i32 87, { 0, 2, 1 }
  uselistorder i32 25, { 24, 25, 2, 11, 3, 12, 4, 13, 5, 14, 10, 15, 6, 16, 0, 17, 18, 19, 7, 8, 20, 9, 21, 22, 1, 23 }
  uselistorder i32 24, { 34, 35, 12, 11, 63, 38, 39, 64, 40, 51, 55, 36, 37, 58, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 59, 54, 60, 56, 57, 65, 66, 67, 61, 62, 33, 68, 13, 14, 15, 16, 0, 17, 18, 1, 19, 2, 20, 3, 4, 21, 5, 6, 71, 22, 7, 72, 23, 24, 8, 73, 25, 74, 75, 76, 26, 27, 9, 77, 28, 78, 29, 30, 10, 79, 31, 80, 81, 69, 32, 70 }
  uselistorder i8 32, { 7, 8, 9, 0, 10, 11, 1, 2, 12, 3, 4, 5, 6 }
  uselistorder i8 9, { 2, 3, 0, 1 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %bb72, { 1, 0 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %bb66, { 1, 0 }
  uselistorder label %bb64, { 1, 0 }
  uselistorder label %dec_label_pc_131c8, { 1, 0 }
  uselistorder label %bb60, { 1, 0 }
  uselistorder label %bb58, { 1, 0 }
  uselistorder label %bb56, { 1, 0 }
  uselistorder label %dec_label_pc_1315c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13124, { 1, 2, 0, 3 }
}

define i32 @function_13244(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13244:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_13244 = load i32, i32* @r4, align 4
  store i32 %v3_13244, i32* %stack_var_-24, align 4
  store i32 %tmp, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* %r7.global-to-local, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1325c

dec_label_pc_1325c:                               ; preds = %dec_label_pc_13288.dec_label_pc_1325c_crit_edge, %dec_label_pc_13244
  %v0_13260 = phi i32 [ %v0_13260.pre, %dec_label_pc_13288.dec_label_pc_1325c_crit_edge ], [ %arg3, %dec_label_pc_13244 ]
  %v0_1325c = phi i32 [ %v1_13274, %dec_label_pc_13288.dec_label_pc_1325c_crit_edge ], [ %tmp, %dec_label_pc_13244 ]
  %v3_13268 = inttoptr i32 %v0_1325c to i32*
  %v4_13268 = call i32 @read(i32 %v0_13260, i32* %v3_13268, i32 1)
  %v7_1326c = icmp eq i32 %v4_13268, 1
  %v0_13270 = load i32, i32* %r4.global-to-local, align 4
  %v1_13274 = add i32 %v0_13270, 1
  store i32 %v1_13274, i32* %r4.global-to-local, align 4
  %v0_1327c = load i32, i32* %r5.global-to-local, align 4
  br i1 %v7_1326c, label %dec_label_pc_1327c, label %dec_label_pc_13294

dec_label_pc_1327c:                               ; preds = %dec_label_pc_1325c
  %v1_1327c = add i32 %v0_1327c, 1
  store i32 %v1_1327c, i32* %r5.global-to-local, align 4
  %v0_13280 = load i32, i32* %r7.global-to-local, align 4
  %v7_13284 = icmp sgt i32 %v0_13280, %v1_1327c
  br i1 %v7_13284, label %dec_label_pc_13288, label %dec_label_pc_13294

dec_label_pc_13288:                               ; preds = %dec_label_pc_1327c
  %v1_13288 = inttoptr i32 %v0_13270 to i8*
  %v2_13288 = load i8, i8* %v1_13288, align 1
  %v7_1328c = icmp eq i8 %v2_13288, 10
  br i1 %v7_1328c, label %dec_label_pc_13294, label %dec_label_pc_13288.dec_label_pc_1325c_crit_edge

dec_label_pc_13288.dec_label_pc_1325c_crit_edge:  ; preds = %dec_label_pc_13288
  %v0_13260.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1325c

dec_label_pc_13294:                               ; preds = %dec_label_pc_1325c, %dec_label_pc_13288, %dec_label_pc_1327c
  %v0_13294 = phi i32 [ %v1_1327c, %dec_label_pc_13288 ], [ %v1_1327c, %dec_label_pc_1327c ], [ %v0_1327c, %dec_label_pc_1325c ]
  %v2_13294 = icmp eq i32 %v0_13294, 0
  %v1_13298 = load i32, i32* %r8.global-to-local, align 4
  %storemerge = select i1 %v2_13294, i32 0, i32 %v1_13298
  %v2_132a0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_132a0, i32* @r4, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_13274, { 1, 0 }
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder i8 10, { 1, 0, 2 }
  uselistorder i32 (i32, i32*, i32)* @read, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_13294, { 1, 2, 0 }
}

define i32 @function_132a4() local_unnamed_addr {
dec_label_pc_132a4:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 16, i32* %r4.global-to-local, align 4
  store i32 16, i32* %stack_var_-24, align 4
  %v0_132b4 = call i32* @__errno_location()
  store i32 0, i32* %v0_132b4, align 4
  %v3_132cc = call i32 @socket(i32 2, i32 0, i32 0)
  %v7_132d8 = icmp eq i32 %v3_132cc, -1
  store i32 %v3_132cc, i32* %r5.global-to-local, align 4
  %v2_132e4 = load i32, i32* %r4.global-to-local, align 4
  br i1 %v7_132d8, label %dec_label_pc_13334, label %dec_label_pc_132f8

dec_label_pc_132f8:                               ; preds = %dec_label_pc_132a4
  %v7_132e4 = shl i32 2056, %v2_132e4
  %v8_132e4 = or i32 %v7_132e4, 2056
  %v2_132ac = ptrtoint i32* %stack_var_-40 to i32
  %v1_132e8 = inttoptr i32 %v2_132e4 to %sockaddr*
  store i32 2, i32* %stack_var_-40, align 4
  %v6_13314 = call i32 @connect(i32 %v2_132ac, %sockaddr* %v1_132e8, i32 %v2_132e4)
  %tmp13 = bitcast i32* %stack_var_-40 to %sockaddr*
  %v0_13320 = load i32, i32* %r5.global-to-local, align 4
  %v6_13324 = call i32 @getsockname(i32 %v0_13320, %sockaddr* %tmp13, i32* nonnull %stack_var_-24)
  %v1_1332c = call i32 @close(i32 %v0_13320)
  br label %dec_label_pc_13334

dec_label_pc_13334:                               ; preds = %dec_label_pc_132a4, %dec_label_pc_132f8
  %v0_13334 = phi i32 [ 0, %dec_label_pc_132a4 ], [ %v8_132e4, %dec_label_pc_132f8 ]
  ret i32 %v0_13334

; uselistorder directives
  uselistorder i32 %v2_132e4, { 1, 0, 2 }
  uselistorder i32 %v3_132cc, { 1, 0 }
  uselistorder i32 (i32)* @close, { 16, 20, 11, 15, 14, 10, 17, 13, 12, 9, 8, 7, 6, 19, 18, 3, 2, 5, 4, 1, 0, 30, 29, 28, 27, 26, 25, 24, 31, 23, 22, 21, 32, 33 }
  uselistorder i32 (i32, %sockaddr*, i32)* @connect, { 4, 5, 0, 3, 2, 1, 7, 6, 8 }
  uselistorder i32 2056, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @socket, { 19, 20, 16, 12, 14, 17, 18, 25, 23, 24, 22, 21, 15, 13, 0, 8, 9, 1, 5, 2, 6, 4, 3, 10, 7, 11, 26 }
  uselistorder i32* ()* @__errno_location, { 3, 1, 2, 0, 4 }
  uselistorder label %dec_label_pc_13334, { 1, 0 }
}

define i32 @function_13340(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13340:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp20 = ptrtoint i8* %arg1 to i32
  %v3_13344 = load i8, i8* %tmp, align 1
  %v2_13348 = icmp eq i8 %v3_13344, 0
  br i1 %v2_13348, label %bb, label %dec_label_pc_1335c

bb:                                               ; preds = %dec_label_pc_13340
  %v4_13344 = zext i8 %v3_13344 to i32
  br label %dec_label_pc_13370

dec_label_pc_1335c:                               ; preds = %dec_label_pc_13340
  br label %dec_label_pc_13360

dec_label_pc_13360:                               ; preds = %dec_label_pc_13360, %dec_label_pc_1335c
  %v0_13360 = phi i32 [ %v1_13360, %dec_label_pc_13360 ], [ 0, %dec_label_pc_1335c ]
  %v1_13360 = add i32 %v0_13360, 1
  %v2_13364 = add i32 %v1_13360, %arg2
  %v3_13364 = inttoptr i32 %v2_13364 to i8*
  %v4_13364 = load i8, i8* %v3_13364, align 1
  %v2_13368 = icmp eq i8 %v4_13364, 0
  br i1 %v2_13368, label %dec_label_pc_13370, label %dec_label_pc_13360

dec_label_pc_13370:                               ; preds = %dec_label_pc_13360, %bb
  %v0_133b418 = phi i32 [ %v4_13344, %bb ], [ %v1_13360, %dec_label_pc_13360 ]
  %v0_133781 = load i32, i32* @r1, align 4
  %tmp27 = icmp slt i32 %v0_133781, 1
  br i1 %tmp27, label %dec_label_pc_133c4, label %dec_label_pc_13384

dec_label_pc_13384:                               ; preds = %dec_label_pc_13370, %dec_label_pc_13378.backedge
  %v0_1337c.in = phi i32 [ %v0_1337c, %dec_label_pc_13378.backedge ], [ %v0_133781, %dec_label_pc_13370 ]
  %v0_133a8 = phi i32 [ %v1_133a8., %dec_label_pc_13378.backedge ], [ 0, %dec_label_pc_13370 ]
  %v0_13384 = phi i32 [ %v5_13384, %dec_label_pc_13378.backedge ], [ %tmp20, %dec_label_pc_13370 ]
  %v0_1337c = add i32 %v0_1337c.in, -1
  %v1_13384 = inttoptr i32 %v0_13384 to i8*
  %v2_13384 = load i8, i8* %v1_13384, align 1
  %v3_13384 = zext i8 %v2_13384 to i32
  %v5_13384 = add i32 %v0_13384, 1
  %v2_13388 = add i32 %v0_133a8, %arg2
  %v3_13388 = inttoptr i32 %v2_13388 to i8*
  %v4_13388 = load i8, i8* %v3_13388, align 1
  %v6_13388 = zext i8 %v4_13388 to i32
  %v1_1338c = add nsw i32 %v3_13384, -65
  %v1_13390 = add nsw i32 %v6_13388, -65
  %tmp35 = icmp ult i32 %v1_1338c, 26
  br i1 %tmp35, label %bb28, label %bb29

bb28:                                             ; preds = %dec_label_pc_13384
  %v5_13398 = or i32 %v3_13384, 96
  br label %bb29

bb29:                                             ; preds = %dec_label_pc_13384, %bb28
  %v0_133a4 = phi i32 [ %v3_13384, %dec_label_pc_13384 ], [ %v5_13398, %bb28 ]
  %tmp36 = icmp ult i32 %v1_13390, 26
  br i1 %tmp36, label %bb30, label %bb31

bb30:                                             ; preds = %bb29
  %v5_133a0 = or i32 %v6_13388, 96
  br label %bb31

bb31:                                             ; preds = %bb29, %bb30
  %v1_133a4 = phi i32 [ %v6_13388, %bb29 ], [ %v5_133a0, %bb30 ]
  %v9_133a4 = icmp eq i32 %v0_133a4, %v1_133a4
  %v1_133a8 = add i32 %v0_133a8, 1
  %v1_133a8. = select i1 %v9_133a4, i32 %v1_133a8, i32 0
  br i1 %v9_133a4, label %dec_label_pc_133b4, label %dec_label_pc_13378.backedge

dec_label_pc_13378.backedge:                      ; preds = %bb31, %dec_label_pc_133b4
  %tmp32 = icmp slt i32 %v0_1337c, 1
  br i1 %tmp32, label %dec_label_pc_133c4, label %dec_label_pc_13384

dec_label_pc_133b4:                               ; preds = %bb31
  %v9_133b4 = icmp eq i32 %v0_133b418, %v1_133a8.
  br i1 %v9_133b4, label %dec_label_pc_133bc, label %dec_label_pc_13378.backedge

dec_label_pc_133bc:                               ; preds = %dec_label_pc_133b4
  %v2_133bc = sub i32 %v5_13384, %tmp20
  ret i32 %v2_133bc

dec_label_pc_133c4:                               ; preds = %dec_label_pc_13378.backedge, %dec_label_pc_13370
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v1_133a8., { 1, 0 }
  uselistorder i32 %v0_13384, { 1, 0 }
  uselistorder i32 %v0_133a8, { 1, 0 }
  uselistorder i8 %v3_13344, { 1, 0 }
  uselistorder i32 %tmp20, { 1, 0 }
  uselistorder i32 96, { 2, 3, 0, 1 }
  uselistorder i32 26, { 0, 1, 2, 8, 6, 7, 3, 9, 4, 10, 5, 11, 12 }
  uselistorder i32* @r1, { 3, 13, 0, 14, 31, 32, 5, 4, 45, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 1, 18, 40, 41, 2, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 46 }
  uselistorder label %dec_label_pc_13378.backedge, { 1, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %bb29, { 1, 0 }
  uselistorder label %dec_label_pc_13384, { 1, 0 }
}

define i32 @function_133cc(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_133cc:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_133cc = load i8, i8* %arg1, align 1
  %v2_133d0 = icmp eq i8 %v2_133cc, 0
  br i1 %v2_133d0, label %bb, label %dec_label_pc_133dc

bb:                                               ; preds = %dec_label_pc_133cc
  %v3_133cc = zext i8 %v2_133cc to i32
  br label %dec_label_pc_133f0

dec_label_pc_133dc:                               ; preds = %dec_label_pc_133cc
  br label %dec_label_pc_133e0

dec_label_pc_133e0:                               ; preds = %dec_label_pc_133e0, %dec_label_pc_133dc
  %v0_133e0 = phi i32 [ %v1_133e0, %dec_label_pc_133e0 ], [ 0, %dec_label_pc_133dc ]
  %v1_133e0 = add i32 %v0_133e0, 1
  %v2_133e4 = add i32 %v1_133e0, %tmp
  %v3_133e4 = inttoptr i32 %v2_133e4 to i8*
  %v4_133e4 = load i8, i8* %v3_133e4, align 1
  %v2_133e8 = icmp eq i8 %v4_133e4, 0
  br i1 %v2_133e8, label %dec_label_pc_133f0, label %dec_label_pc_133e0

dec_label_pc_133f0:                               ; preds = %dec_label_pc_133e0, %bb
  %v0_13414 = phi i32 [ %v3_133cc, %bb ], [ %v1_133e0, %dec_label_pc_133e0 ]
  %v1_133f0 = inttoptr i32 %arg2 to i8*
  %v2_133f0 = load i8, i8* %v1_133f0, align 1
  %v2_133f4 = icmp eq i8 %v2_133f0, 0
  br i1 %v2_133f4, label %bb22, label %dec_label_pc_13400

bb22:                                             ; preds = %dec_label_pc_133f0
  %v3_133f0 = zext i8 %v2_133f0 to i32
  br label %dec_label_pc_13414

dec_label_pc_13400:                               ; preds = %dec_label_pc_133f0
  br label %dec_label_pc_13404

dec_label_pc_13404:                               ; preds = %dec_label_pc_13404, %dec_label_pc_13400
  %v0_13404 = phi i32 [ %v1_13404, %dec_label_pc_13404 ], [ 0, %dec_label_pc_13400 ]
  %v1_13404 = add i32 %v0_13404, 1
  %v2_13408 = add i32 %v1_13404, %arg2
  %v3_13408 = inttoptr i32 %v2_13408 to i8*
  %v4_13408 = load i8, i8* %v3_13408, align 1
  %v2_1340c = icmp eq i8 %v4_13408, 0
  br i1 %v2_1340c, label %dec_label_pc_13414, label %dec_label_pc_13404

dec_label_pc_13414:                               ; preds = %dec_label_pc_13404, %bb22
  %v0_134404 = phi i32 [ %v3_133f0, %bb22 ], [ %v1_13404, %dec_label_pc_13404 ]
  %v9_13414 = icmp eq i32 %v0_13414, %v0_134404
  br i1 %v9_13414, label %dec_label_pc_13440.preheader, label %dec_label_pc_13420

dec_label_pc_13440.preheader:                     ; preds = %dec_label_pc_13414
  %v2_134406 = icmp eq i32 %v0_13414, 0
  br i1 %v2_134406, label %dec_label_pc_13448, label %dec_label_pc_13428

dec_label_pc_13420:                               ; preds = %dec_label_pc_13428, %dec_label_pc_13414
  ret i32 0

dec_label_pc_13428:                               ; preds = %dec_label_pc_13438, %dec_label_pc_13440.preheader
  %v0_13440.in = phi i32 [ %v0_13440, %dec_label_pc_13438 ], [ %v0_13414, %dec_label_pc_13440.preheader ]
  %v0_1343c = phi i32 [ %v1_1343c, %dec_label_pc_13438 ], [ %arg2, %dec_label_pc_13440.preheader ]
  %v0_13438 = phi i32 [ %v1_13438, %dec_label_pc_13438 ], [ %tmp, %dec_label_pc_13440.preheader ]
  %v0_13440 = add i32 %v0_13440.in, -1
  %v1_13428 = inttoptr i32 %v0_13438 to i8*
  %v2_13428 = load i8, i8* %v1_13428, align 1
  %v1_1342c = inttoptr i32 %v0_1343c to i8*
  %v2_1342c = load i8, i8* %v1_1342c, align 1
  %v9_13430 = icmp eq i8 %v2_13428, %v2_1342c
  br i1 %v9_13430, label %dec_label_pc_13438, label %dec_label_pc_13420

dec_label_pc_13438:                               ; preds = %dec_label_pc_13428
  %v1_13438 = add i32 %v0_13438, 1
  %v1_1343c = add i32 %v0_1343c, 1
  %v2_13440 = icmp eq i32 %v0_13440, 0
  br i1 %v2_13440, label %dec_label_pc_13448, label %dec_label_pc_13428

dec_label_pc_13448:                               ; preds = %dec_label_pc_13438, %dec_label_pc_13440.preheader
  ret i32 1

; uselistorder directives
  uselistorder i8 %v2_133f0, { 1, 0 }
  uselistorder i8 %v2_133cc, { 1, 0 }
}

define i32 @function_13450(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13450:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = sext i8 %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-62 = alloca i32, align 4
  %stack_var_-30 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_13450 = load i32, i32* @r4, align 4
  store i32 %v3_13450, i32* %stack_var_-28, align 4
  %v22_13450 = ptrtoint i32* %stack_var_-28 to i32
  %v0_13454 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_13454, i32* %r8.global-to-local, align 4
  %v2_13454 = icmp eq i32 %v0_13454, 0
  store i1 %v2_13454, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* %r5.global-to-local, align 4
  br i1 %v2_13454, label %dec_label_pc_13544, label %dec_label_pc_13464

dec_label_pc_13464:                               ; preds = %dec_label_pc_13450
  %v3_13464 = icmp eq i8 %arg1, 0
  store i1 %v3_13464, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_13464, label %.thread, label %dec_label_pc_13478

.thread:                                          ; preds = %dec_label_pc_13464
  %v4_1346c = inttoptr i32 %v0_13454 to i8*
  store i8 48, i8* %v4_1346c, align 1
  %v0_13470.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13470.pr.pr, label %.thread1, label %dec_label_pc_13478

.thread1:                                         ; preds = %.thread
  %v4_13470 = load i32, i32* %r8.global-to-local, align 4
  %v5_13470 = add i32 %v4_13470, 1
  %v6_13470 = inttoptr i32 %v5_13470 to i8*
  store i8 0, i8* %v6_13470, align 1
  %v0_13474.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13474.pr.pr, label %dec_label_pc_13544, label %dec_label_pc_13478

dec_label_pc_13478:                               ; preds = %dec_label_pc_13464, %.thread, %.thread1
  %tmp40 = icmp slt i8 %arg1, 0
  %v7_1347c = icmp eq i32 %arg2, 10
  store i1 %v7_1347c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1347c, label %bb, label %.thread22

.thread22:                                        ; preds = %dec_label_pc_13478
  store i32 0, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %.thread4

bb:                                               ; preds = %dec_label_pc_13478
  %v4_13478 = zext i1 %tmp40 to i32
  store i32 %v4_13478, i32* %r2.global-to-local, align 4
  %phitmp = icmp eq i1 %tmp40, false
  store i1 %phitmp, i1* %cpsr_z.global-to-local, align 1
  br i1 %phitmp, label %.thread4, label %dec_label_pc_134a0

.thread4:                                         ; preds = %bb, %.thread22
  br label %dec_label_pc_134b0

dec_label_pc_134a0:                               ; preds = %bb
  %v2_134a0 = sub nsw i32 0, %tmp
  store i1 %v3_13464, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_13464, label %dec_label_pc_13550, label %dec_label_pc_134b0

dec_label_pc_134b0:                               ; preds = %dec_label_pc_134a0, %.thread4
  %v0_134b810 = phi i32 [ %tmp, %.thread4 ], [ %v2_134a0, %dec_label_pc_134a0 ]
  %storemerge = phi i32 [ 0, %.thread4 ], [ 1, %dec_label_pc_134a0 ]
  store i32 %storemerge, i32* %sl.global-to-local, align 4
  store i32 32, i32* %r6.global-to-local, align 4
  %v2_134b4 = ptrtoint i32* %stack_var_-30 to i32
  store i32 %v2_134b4, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_134b8

dec_label_pc_134b8:                               ; preds = %bb38, %dec_label_pc_134b0
  %v2_134d8 = phi i32 [ %v5_134d8, %bb38 ], [ %v2_134b4, %dec_label_pc_134b0 ]
  %v0_134d4 = phi i32 [ %v2_134dc, %bb38 ], [ %v0_134b810, %dec_label_pc_134b0 ]
  %v0_134bc = load i32, i32* %r5.global-to-local, align 4
  %v2_134c0 = urem i32 %v0_134d4, %v0_134bc
  store i32 %v2_134c0, i32* %r0.global-to-local, align 4
  %v7_134c4 = icmp eq i32 %v2_134c0, 9
  store i1 %v7_134c4, i1* %cpsr_z.global-to-local, align 1
  %v1_134c8 = add i32 %v2_134c0, 48
  store i32 %v0_134bc, i32* %r1.global-to-local, align 4
  %v7_134d0 = icmp sgt i32 %v2_134c0, 9
  %extract.t = trunc i32 %v1_134c8 to i8
  br i1 %v7_134d0, label %bb37, label %bb38

bb37:                                             ; preds = %dec_label_pc_134b8
  %v9_134d0 = add i32 %v2_134c0, 55
  %extract.t21 = trunc i32 %v9_134d0 to i8
  br label %bb38

bb38:                                             ; preds = %dec_label_pc_134b8, %bb37
  %v0_134d8.off0 = phi i8 [ %extract.t, %dec_label_pc_134b8 ], [ %extract.t21, %bb37 ]
  store i32 %v0_134d4, i32* %r0.global-to-local, align 4
  %v3_134d8 = inttoptr i32 %v2_134d8 to i8*
  store i8 %v0_134d8.off0, i8* %v3_134d8, align 1
  %v4_134d8 = load i32, i32* %r7.global-to-local, align 4
  %v5_134d8 = add i32 %v4_134d8, -1
  store i32 %v5_134d8, i32* %r7.global-to-local, align 4
  %v0_134dc = load i32, i32* %r0.global-to-local, align 4
  %v1_134dc = load i32, i32* %r1.global-to-local, align 4
  %v2_134dc = udiv i32 %v0_134dc, %v1_134dc
  store i32 %v2_134dc, i32* %r0.global-to-local, align 4
  %v2_134e0 = icmp ugt i32 %v1_134dc, %v0_134dc
  store i1 %v2_134e0, i1* %cpsr_z.global-to-local, align 1
  %v0_134e4 = load i32, i32* %r6.global-to-local, align 4
  %v1_134e4 = add i32 %v0_134e4, -1
  store i32 %v1_134e4, i32* %r6.global-to-local, align 4
  br i1 %v2_134e0, label %dec_label_pc_134ec, label %dec_label_pc_134b8

dec_label_pc_134ec:                               ; preds = %bb38
  %v0_134ec = load i32, i32* %sl.global-to-local, align 4
  %v2_134ec = icmp eq i32 %v0_134ec, 0
  store i1 %v2_134ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_134ec, label %bb39, label %dec_label_pc_13554

bb39:                                             ; preds = %dec_label_pc_134ec
  store i32 %v0_134e4, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_134f8

dec_label_pc_134f8:                               ; preds = %bb39, %dec_label_pc_13554
  %v1_13504 = phi i32 [ %v0_134e4, %bb39 ], [ %v1_134fc.pre, %dec_label_pc_13554 ]
  %v2_134f8 = ptrtoint i32* %stack_var_-62 to i32
  %v2_134fc = add i32 %v1_13504, %v2_134f8
  %v3_134fc = inttoptr i32 %v2_134fc to i8*
  %v4_134fc = load i8, i8* %v3_134fc, align 1
  %v6_134fc = zext i8 %v4_134fc to i32
  store i32 %v6_134fc, i32* %r2.global-to-local, align 4
  %v2_13500 = icmp eq i8 %v4_134fc, 0
  store i1 %v2_13500, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_134fc, i32* %r1.global-to-local, align 4
  br i1 %v2_13500, label %dec_label_pc_13528, label %dec_label_pc_1350c

dec_label_pc_1350c:                               ; preds = %dec_label_pc_134f8
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13510

dec_label_pc_13510:                               ; preds = %dec_label_pc_13510, %dec_label_pc_1350c
  %v0_13510 = phi i32 [ %v1_13510, %dec_label_pc_13510 ], [ 0, %dec_label_pc_1350c ]
  %v1_13510 = add i32 %v0_13510, 1
  store i32 %v1_13510, i32* %r2.global-to-local, align 4
  %v2_13514 = add i32 %v1_13510, %v2_134fc
  %v3_13514 = inttoptr i32 %v2_13514 to i8*
  %v4_13514 = load i8, i8* %v3_13514, align 1
  %v2_13518 = icmp eq i8 %v4_13514, 0
  store i1 %v2_13518, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13518, label %dec_label_pc_13520, label %dec_label_pc_13510

dec_label_pc_13520:                               ; preds = %dec_label_pc_13510
  %v7_13520 = icmp eq i32 %v0_13510, -2
  store i1 %v7_13520, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13520, label %dec_label_pc_13544, label %dec_label_pc_13528

dec_label_pc_13528:                               ; preds = %dec_label_pc_13520, %dec_label_pc_134f8
  %v0_1353018 = phi i32 [ %v1_13510, %dec_label_pc_13520 ], [ %v6_134fc, %dec_label_pc_134f8 ]
  store i32 %v2_134fc, i32* %r0.global-to-local, align 4
  %v0_1352c = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_1352c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13530

dec_label_pc_13530:                               ; preds = %dec_label_pc_13530.dec_label_pc_13530_crit_edge, %dec_label_pc_13528
  %v2_1353c = phi i32 [ %v5_1353c, %dec_label_pc_13530.dec_label_pc_13530_crit_edge ], [ %v0_1352c, %dec_label_pc_13528 ]
  %v0_13534 = phi i32 [ %v0_13534.pre, %dec_label_pc_13530.dec_label_pc_13530_crit_edge ], [ %v2_134fc, %dec_label_pc_13528 ]
  %v0_13530 = phi i32 [ %v0_13530.pre, %dec_label_pc_13530.dec_label_pc_13530_crit_edge ], [ %v0_1353018, %dec_label_pc_13528 ]
  %v1_13530 = add i32 %v0_13530, -1
  store i32 %v1_13530, i32* %r2.global-to-local, align 4
  %v1_13534 = inttoptr i32 %v0_13534 to i8*
  %v2_13534 = load i8, i8* %v1_13534, align 1
  %v5_13534 = add i32 %v0_13534, 1
  store i32 %v5_13534, i32* %r0.global-to-local, align 4
  %v3_13538 = icmp eq i32 %v0_13530, 0
  store i1 %v3_13538, i1* %cpsr_z.global-to-local, align 1
  %v3_1353c = inttoptr i32 %v2_1353c to i8*
  store i8 %v2_13534, i8* %v3_1353c, align 1
  %v4_1353c = load i32, i32* %r1.global-to-local, align 4
  %v5_1353c = add i32 %v4_1353c, 1
  store i32 %v5_1353c, i32* %r1.global-to-local, align 4
  br i1 %v3_13538, label %dec_label_pc_13544, label %dec_label_pc_13530.dec_label_pc_13530_crit_edge

dec_label_pc_13530.dec_label_pc_13530_crit_edge:  ; preds = %dec_label_pc_13530
  %v0_13530.pre = load i32, i32* %r2.global-to-local, align 4
  %v0_13534.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13530

dec_label_pc_13544:                               ; preds = %dec_label_pc_13530, %dec_label_pc_13520, %.thread1, %dec_label_pc_13450
  %v0_13544 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_13544, i32* %r0.global-to-local, align 4
  %v2_1354c = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_1354c, i32* @r4, align 4
  ret i32 %v0_13544

dec_label_pc_13550:                               ; preds = %dec_label_pc_134a0
  store i32 32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13554

dec_label_pc_13554:                               ; preds = %dec_label_pc_134ec, %dec_label_pc_13550
  %v1_13558 = phi i32 [ %v1_134e4, %dec_label_pc_134ec ], [ 32, %dec_label_pc_13550 ]
  %v2_13558 = add i32 %v1_13558, %v22_13450
  store i32 %v2_13558, i32* %r2.global-to-local, align 4
  %v3_13560 = add i32 %v2_13558, -34
  %v4_13560 = inttoptr i32 %v3_13560 to i8*
  store i8 45, i8* %v4_13560, align 1
  %v1_134fc.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_134f8

; uselistorder directives
  uselistorder i32 %v5_1353c, { 1, 0 }
  uselistorder i1 %v3_13538, { 1, 0 }
  uselistorder i32 %v0_13534, { 1, 0 }
  uselistorder i1 %v7_13520, { 1, 0 }
  uselistorder i32 %v1_13510, { 0, 1, 3, 2 }
  uselistorder i32 %v2_134fc, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_134dc, { 1, 0 }
  uselistorder i32 %v5_134d8, { 1, 0 }
  uselistorder i32 %v2_134c0, { 0, 2, 1, 3, 4 }
  uselistorder i1 %phitmp, { 1, 0 }
  uselistorder i1 %v3_13464, { 1, 0, 2, 3 }
  uselistorder i32 %v0_13454, { 0, 2, 1 }
  uselistorder i32* %stack_var_-28, { 0, 2, 1 }
  uselistorder i32* %r6.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 7, 6, 8, 9, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 5, 6, 1, 7, 8, 2, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 14, 9, 10, 11, 12, 13 }
  uselistorder i8 45, { 1, 0 }
  uselistorder i32 55, { 7, 0, 3, 4, 2, 5, 6, 1 }
  uselistorder i32 48, { 2, 0, 1, 3 }
  uselistorder i32 9, { 3, 45, 7, 4, 11, 26, 12, 27, 13, 28, 31, 9, 30, 22, 10, 29, 8, 2, 32, 23, 24, 34, 35, 36, 25, 33, 14, 37, 15, 38, 16, 39, 5, 41, 40, 17, 42, 18, 43, 19, 44, 0, 20, 1, 58, 46, 47, 48, 49, 50, 51, 6, 52, 53, 54, 55, 56, 57, 59, 60, 61, 21 }
  uselistorder i32 32, { 28, 34, 35, 5, 4, 7, 6, 9, 8, 11, 10, 29, 31, 30, 13, 12, 14, 16, 15, 17, 18, 20, 19, 32, 33, 21, 0, 22, 1, 2, 3, 36, 37, 23, 38, 24, 25, 26, 27 }
  uselistorder i32 10, { 43, 0, 23, 6, 26, 28, 7, 27, 8, 29, 9, 30, 3, 31, 32, 24, 25, 33, 22, 34, 10, 35, 11, 36, 12, 37, 13, 38, 14, 39, 40, 15, 2, 16, 17, 41, 18, 42, 4, 44, 45, 46, 47, 48, 49, 19, 50, 51, 52, 20, 53, 55, 56, 1, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 5, 71, 54, 21 }
  uselistorder i8 0, { 17, 18, 0, 6, 19, 20, 21, 22, 23, 24, 25, 2, 26, 27, 28, 29, 7, 30, 1, 3, 4, 8, 31, 32, 33, 34, 35, 14, 36, 39, 15, 37, 38, 13, 40, 41, 42, 43, 44, 9, 10, 5, 11, 16, 12, 45, 46, 47, 48, 49, 50, 51, 52 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13554, { 1, 0 }
  uselistorder label %dec_label_pc_134f8, { 1, 0 }
  uselistorder label %bb38, { 1, 0 }
  uselistorder label %dec_label_pc_13478, { 2, 1, 0 }
}

define i32 @__udivsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_13568 = add i32 %arg2, -1
  %v7_13568 = icmp eq i32 %arg2, 1
  br i1 %v7_13568, label %bb, label %bb80

bb:                                               ; preds = %entry
  %v2_1356c = load i32, i32* @r0, align 4
  ret i32 %v2_1356c

bb80:                                             ; preds = %entry
  %v2_13568 = icmp eq i32 %arg2, 0
  br i1 %v2_13568, label %dec_label_pc_13650, label %dec_label_pc_13574

dec_label_pc_13574:                               ; preds = %bb80
  %v0_13574 = load i32, i32* @r0, align 4
  %tmp = icmp ugt i32 %v0_13574, %arg2
  br i1 %tmp, label %dec_label_pc_1357c, label %dec_label_pc_13608

dec_label_pc_1357c:                               ; preds = %dec_label_pc_13574
  %v2_1357c = and i32 %v1_13568, %arg2
  %v4_1357c = icmp eq i32 %v2_1357c, 0
  br i1 %v4_1357c, label %dec_label_pc_13614, label %dec_label_pc_13584

dec_label_pc_13584:                               ; preds = %dec_label_pc_1357c
  %v3_13584 = icmp ult i32 %arg2, 536870912
  br i1 %v3_13584, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_13584
  %v4_13588 = mul i32 %arg2, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_13584, %.thread
  %v0_135a8.pr36.ph = phi i32 [ %v4_13588, %.thread ], [ %arg2, %dec_label_pc_13584 ]
  %storemerge115 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_13584 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb83
  %v0_135a8.pr36 = phi i32 [ %v4_1359c, %bb83 ], [ %v0_135a8.pr36.ph, %.preheader.preheader ]
  %v1_135a0 = phi i32 [ %v4_135a0, %bb83 ], [ %storemerge115, %.preheader.preheader ]
  %v2_13594 = icmp ugt i32 %v0_135a8.pr36, 268435455
  br i1 %v2_13594, label %.thread2, label %bb81

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_135a8thread-pre-split.loopexit

bb81:                                             ; preds = %.preheader
  %v4_13598 = icmp ult i32 %v0_135a8.pr36, %v0_13574
  br i1 %v4_13598, label %bb82, label %dec_label_pc_135a8thread-pre-split.loopexit.loopexit

bb82:                                             ; preds = %bb81
  %v2_1359c = and i32 %v0_135a8.pr36, 268435456
  %v3_1359c = icmp eq i32 %v2_1359c, 0
  %v4_1359c = mul i32 %v0_135a8.pr36, 16
  br i1 %v3_1359c, label %bb83, label %dec_label_pc_135a8.loopexit

bb83:                                             ; preds = %bb82
  %v2_135a0 = and i32 %v1_135a0, 268435456
  %v3_135a0 = icmp eq i32 %v2_135a0, 0
  %v4_135a0 = mul i32 %v1_135a0, 16
  br i1 %v3_135a0, label %.preheader, label %dec_label_pc_135a8thread-pre-split.loopexit.loopexit

dec_label_pc_135a8thread-pre-split.loopexit.loopexit: ; preds = %bb83, %bb81
  %v1_135b448.ph = phi i32 [ %v1_135a0, %bb81 ], [ %v4_135a0, %bb83 ]
  %v0_135a8.pr38.ph = phi i32 [ %v0_135a8.pr36, %bb81 ], [ %v4_1359c, %bb83 ]
  br label %dec_label_pc_135a8thread-pre-split.loopexit

dec_label_pc_135a8thread-pre-split.loopexit:      ; preds = %dec_label_pc_135a8thread-pre-split.loopexit.loopexit, %.thread2
  %v1_135b448 = phi i32 [ %v1_135a0, %.thread2 ], [ %v1_135b448.ph, %dec_label_pc_135a8thread-pre-split.loopexit.loopexit ]
  %v0_135a8.pr38 = phi i32 [ %v0_135a8.pr36, %.thread2 ], [ %v0_135a8.pr38.ph, %dec_label_pc_135a8thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_135a8thread-pre-split

dec_label_pc_135a8thread-pre-split:               ; preds = %dec_label_pc_135a8thread-pre-split.loopexit, %bb85
  %v1_135b446 = phi i32 [ %v1_135b448, %dec_label_pc_135a8thread-pre-split.loopexit ], [ %v3_135b4, %bb85 ]
  %v0_135a8.pr = phi i32 [ %v0_135a8.pr38, %dec_label_pc_135a8thread-pre-split.loopexit ], [ %v3_135b0, %bb85 ]
  br label %dec_label_pc_135a8

dec_label_pc_135a8.loopexit:                      ; preds = %bb82
  br label %dec_label_pc_135a8

dec_label_pc_135a8:                               ; preds = %dec_label_pc_135a8.loopexit, %dec_label_pc_135a8thread-pre-split
  %v1_135b4 = phi i32 [ %v1_135b446, %dec_label_pc_135a8thread-pre-split ], [ %v1_135a0, %dec_label_pc_135a8.loopexit ]
  %v1_135b0 = phi i32 [ %v0_135a8.pr, %dec_label_pc_135a8thread-pre-split ], [ %v4_1359c, %dec_label_pc_135a8.loopexit ]
  %v2_135a8 = icmp slt i32 %v1_135b0, 0
  br i1 %v2_135a8, label %dec_label_pc_135bc, label %bb84

bb84:                                             ; preds = %dec_label_pc_135a8
  %v4_135ac = icmp ult i32 %v1_135b0, %v0_13574
  br i1 %v4_135ac, label %bb85, label %dec_label_pc_135bc

bb85:                                             ; preds = %bb84
  %v3_135b0 = mul i32 %v1_135b0, 2
  %v2_135b4 = icmp slt i32 %v1_135b4, 0
  %v3_135b4 = mul i32 %v1_135b4, 2
  br i1 %v2_135b4, label %dec_label_pc_135bc, label %dec_label_pc_135a8thread-pre-split

dec_label_pc_135bc:                               ; preds = %bb84, %dec_label_pc_135a8, %bb85
  %v2_135c859 = phi i32 [ %v3_135b4, %bb85 ], [ %v1_135b4, %bb84 ], [ %v1_135b4, %dec_label_pc_135a8 ]
  %v1_135c051 = phi i32 [ %v3_135b0, %bb85 ], [ %v1_135b0, %bb84 ], [ %v1_135b0, %dec_label_pc_135a8 ]
  br label %dec_label_pc_135c0

dec_label_pc_135c0:                               ; preds = %.thread11, %dec_label_pc_135bc
  %v1_135f4 = phi i32 [ %v4_135f4, %.thread11 ], [ %v2_135c859, %dec_label_pc_135bc ]
  %v1_135c8 = phi i32 [ %v0_13600, %.thread11 ], [ 0, %dec_label_pc_135bc ]
  %v1_135f8 = phi i32 [ %v4_135f8, %.thread11 ], [ %v1_135c051, %dec_label_pc_135bc ]
  %v1_135c4 = phi i32 [ %v0_135f0, %.thread11 ], [ %v0_13574, %dec_label_pc_135bc ]
  %v3_135c0 = icmp ult i32 %v1_135c4, %v1_135f8
  br i1 %v3_135c0, label %.thread7, label %bb86

bb86:                                             ; preds = %dec_label_pc_135c0
  %v3_135c4 = sub i32 %v1_135c4, %v1_135f8
  %v3_135c8 = or i32 %v1_135c8, %v1_135f4
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_135c0, %bb86
  %v1_135d0 = phi i32 [ %v1_135c4, %dec_label_pc_135c0 ], [ %v3_135c4, %bb86 ]
  %v1_135d4 = phi i32 [ %v1_135c8, %dec_label_pc_135c0 ], [ %v3_135c8, %bb86 ]
  %v4_135cc = udiv i32 %v1_135f8, 2
  %v6_135cc = icmp ult i32 %v1_135d0, %v4_135cc
  br i1 %v6_135cc, label %.thread8, label %bb87

bb87:                                             ; preds = %.thread7
  %v3_135d0 = urem i32 %v1_135f8, 2
  %v4_135d0 = icmp eq i32 %v3_135d0, 0
  %v6_135d0 = sub i32 %v1_135d0, %v4_135cc
  br i1 %v4_135d0, label %.thread8, label %bb88

bb88:                                             ; preds = %bb87
  %v5_135d4 = udiv i32 %v1_135f4, 2
  %v6_135d4 = or i32 %v1_135d4, %v5_135d4
  br label %.thread8

.thread8:                                         ; preds = %bb87, %.thread7, %bb88
  %v1_135dc = phi i32 [ %v6_135d0, %bb87 ], [ %v1_135d0, %.thread7 ], [ %v6_135d0, %bb88 ]
  %v1_135e0 = phi i32 [ %v1_135d4, %bb87 ], [ %v1_135d4, %.thread7 ], [ %v6_135d4, %bb88 ]
  %v4_135d8 = udiv i32 %v1_135f8, 4
  %v6_135d8 = icmp ult i32 %v1_135dc, %v4_135d8
  br i1 %v6_135d8, label %.thread9, label %bb89

bb89:                                             ; preds = %.thread8
  %v3_135dc = and i32 %v1_135f8, 2
  %v4_135dc = icmp eq i32 %v3_135dc, 0
  %v6_135dc = sub i32 %v1_135dc, %v4_135d8
  br i1 %v4_135dc, label %.thread9, label %bb90

bb90:                                             ; preds = %bb89
  %v5_135e0 = udiv i32 %v1_135f4, 4
  %v6_135e0 = or i32 %v1_135e0, %v5_135e0
  br label %.thread9

.thread9:                                         ; preds = %bb89, %.thread8, %bb90
  %v1_135e8 = phi i32 [ %v6_135dc, %bb89 ], [ %v1_135dc, %.thread8 ], [ %v6_135dc, %bb90 ]
  %v1_135ec = phi i32 [ %v1_135e0, %bb89 ], [ %v1_135e0, %.thread8 ], [ %v6_135e0, %bb90 ]
  %v4_135e4 = udiv i32 %v1_135f8, 8
  %v6_135e4 = icmp ult i32 %v1_135e8, %v4_135e4
  br i1 %v6_135e4, label %thread-pre-split, label %bb91

bb91:                                             ; preds = %.thread9
  %v3_135e8 = and i32 %v1_135f8, 4
  %v4_135e8 = icmp eq i32 %v3_135e8, 0
  %v6_135e8 = sub i32 %v1_135e8, %v4_135e4
  br i1 %v4_135e8, label %thread-pre-split, label %bb92

bb92:                                             ; preds = %bb91
  %v5_135ec = udiv i32 %v1_135f4, 8
  %v6_135ec = or i32 %v1_135ec, %v5_135ec
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb92, %.thread9, %bb91
  %v0_13600 = phi i32 [ %v1_135ec, %bb91 ], [ %v1_135ec, %.thread9 ], [ %v6_135ec, %bb92 ]
  %v0_135f0 = phi i32 [ %v6_135e8, %bb91 ], [ %v1_135e8, %.thread9 ], [ %v6_135e8, %bb92 ]
  %v2_135f0 = icmp eq i32 %v0_135f0, 0
  br i1 %v2_135f0, label %dec_label_pc_13600, label %bb93

bb93:                                             ; preds = %thread-pre-split
  %tmp120 = icmp ult i32 %v1_135f4, 16
  br i1 %tmp120, label %dec_label_pc_13600, label %.thread11

.thread11:                                        ; preds = %bb93
  %v4_135f4 = udiv i32 %v1_135f4, 16
  %v4_135f8 = udiv i32 %v1_135f8, 16
  br label %dec_label_pc_135c0

dec_label_pc_13600:                               ; preds = %thread-pre-split, %bb93
  ret i32 %v0_13600

dec_label_pc_13608:                               ; preds = %dec_label_pc_13574
  %v9_13574 = icmp eq i32 %v0_13574, %arg2
  %. = zext i1 %v9_13574 to i32
  ret i32 %.

dec_label_pc_13614:                               ; preds = %dec_label_pc_1357c
  %v2_13614 = icmp ugt i32 %arg2, 65535
  br i1 %v2_13614, label %bb97, label %.thread16

bb97:                                             ; preds = %dec_label_pc_13614
  %v2_13618 = and i32 %arg2, 32768
  %v3_13618 = icmp eq i32 %v2_13618, 0
  %v4_13618 = udiv i32 %arg2, 65536
  br i1 %v3_13618, label %.thread16, label %bb98

.thread16:                                        ; preds = %bb97, %dec_label_pc_13614
  %v0_1362465 = phi i32 [ %arg2, %dec_label_pc_13614 ], [ %v4_13618, %bb97 ]
  br label %bb98

bb98:                                             ; preds = %bb97, %.thread16
  %v1_13628 = phi i32 [ %v0_1362465, %.thread16 ], [ %v4_13618, %bb97 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb97 ]
  %v2_13624 = icmp ugt i32 %v1_13628, 255
  br i1 %v2_13624, label %bb99, label %.thread17

bb99:                                             ; preds = %bb98
  %v2_13628 = and i32 %v1_13628, 128
  %v3_13628 = icmp eq i32 %v2_13628, 0
  %v4_13628 = udiv i32 %v1_13628, 256
  br i1 %v3_13628, label %.thread17, label %bb100

bb100:                                            ; preds = %bb99
  %v2_1362c = or i32 %storemerge, 8
  br label %.thread17

.thread17:                                        ; preds = %bb99, %bb98, %bb100
  %v1_13638 = phi i32 [ %storemerge, %bb98 ], [ %storemerge, %bb99 ], [ %v2_1362c, %bb100 ]
  %v1_13634 = phi i32 [ %v1_13628, %bb98 ], [ %v4_13628, %bb99 ], [ %v4_13628, %bb100 ]
  %v2_13630 = icmp ugt i32 %v1_13634, 15
  br i1 %v2_13630, label %bb101, label %.thread18

bb101:                                            ; preds = %.thread17
  %v2_13634 = and i32 %v1_13634, 8
  %v3_13634 = icmp eq i32 %v2_13634, 0
  %v4_13634 = udiv i32 %v1_13634, 16
  br i1 %v3_13634, label %.thread18, label %bb102

bb102:                                            ; preds = %bb101
  %v2_13638 = add nsw i32 %v1_13638, 4
  br label %.thread18

.thread18:                                        ; preds = %bb101, %.thread17, %bb102
  %v4_13640 = phi i32 [ %v1_13638, %.thread17 ], [ %v1_13638, %bb101 ], [ %v2_13638, %bb102 ]
  %v5_13644 = phi i32 [ %v1_13634, %.thread17 ], [ %v4_13634, %bb101 ], [ %v4_13634, %bb102 ]
  %v2_1363c = icmp ugt i32 %v5_13644, 3
  %v7_1363c = icmp eq i32 %v5_13644, 4
  %v2_13640 = xor i1 %v7_1363c, true
  %v3_13640 = and i1 %v2_1363c, %v2_13640
  br i1 %v3_13640, label %bb103, label %bb104

bb103:                                            ; preds = %.thread18
  %v5_13640 = add nsw i32 %v4_13640, 3
  br label %bb104

bb104:                                            ; preds = %.thread18, %bb103
  %v4_13644 = phi i32 [ %v4_13640, %.thread18 ], [ %v5_13640, %bb103 ]
  %v2_13644 = xor i1 %v2_1363c, true
  %v3_13644 = or i1 %v7_1363c, %v2_13644
  br i1 %v3_13644, label %bb105, label %bb106

bb105:                                            ; preds = %bb104
  %v8_13644 = udiv i32 %v5_13644, 2
  %v9_13644 = add i32 %v4_13644, %v8_13644
  br label %bb106

bb106:                                            ; preds = %bb104, %bb105
  %v1_13648 = phi i32 [ %v4_13644, %bb104 ], [ %v9_13644, %bb105 ]
  %v6_13648 = lshr i32 %v0_13574, %v1_13648
  ret i32 %v6_13648

dec_label_pc_13650:                               ; preds = %bb80
  %v0_13650 = load i32, i32* @lr, align 4
  %v0_13654 = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_13650)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_13644, { 1, 0 }
  uselistorder i1 %v7_1363c, { 1, 0 }
  uselistorder i32 %v4_13634, { 1, 0 }
  uselistorder i32 %v1_13634, { 1, 0, 2, 3 }
  uselistorder i32 %v4_13628, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_13628, { 1, 0, 2, 3 }
  uselistorder i32 %v4_13618, { 1, 0 }
  uselistorder i32 %v0_135f0, { 1, 0 }
  uselistorder i32 %v4_135e4, { 1, 0 }
  uselistorder i32 %v1_135ec, { 1, 2, 0 }
  uselistorder i32 %v4_135d8, { 1, 0 }
  uselistorder i32 %v1_135e0, { 1, 2, 0 }
  uselistorder i32 %v4_135cc, { 1, 0 }
  uselistorder i32 %v1_135d4, { 1, 2, 0 }
  uselistorder i32 %v1_135f8, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_135c8, { 1, 0 }
  uselistorder i32 %v1_135f4, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_135b4, { 1, 0 }
  uselistorder i32 %v3_135b0, { 1, 0 }
  uselistorder i32 %v1_135b0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_135b4, { 1, 2, 0, 3 }
  uselistorder i32 %v4_135a0, { 1, 0 }
  uselistorder i32 %v4_1359c, { 2, 1, 0 }
  uselistorder i32 %v1_135a0, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_135a8.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v0_13574, { 2, 5, 3, 1, 4, 0 }
  uselistorder i1 true, { 0, 1, 308, 2, 3, 4, 5, 6, 562, 278, 309, 320, 563, 540, 333, 541, 542, 120, 121, 122, 543, 310, 123, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 124, 125, 279, 280, 560, 561, 332, 307, 321, 564, 118, 119, 331, 117, 565, 127, 126, 322, 326, 323, 327, 324, 328, 325, 330, 566, 128, 567, 116, 568, 334, 335, 283, 569, 336, 337, 129, 570, 338, 339, 130, 131, 571, 340, 341, 132, 133, 572, 134, 135, 136, 573, 342, 343, 137, 138, 574, 344, 345, 139, 575, 346, 347, 113, 114, 115, 576, 348, 349, 284, 112, 577, 578, 311, 312, 140, 141, 579, 350, 351, 142, 580, 143, 144, 581, 145, 146, 582, 147, 148, 583, 149, 150, 151, 152, 584, 352, 353, 153, 154, 585, 155, 156, 586, 354, 355, 109, 110, 111, 108, 587, 356, 357, 285, 282, 281, 588, 358, 359, 105, 106, 107, 286, 589, 360, 361, 590, 362, 363, 102, 103, 104, 591, 364, 365, 592, 366, 367, 99, 100, 101, 593, 368, 369, 96, 97, 98, 594, 370, 371, 595, 372, 373, 93, 94, 95, 596, 374, 375, 157, 597, 376, 377, 90, 91, 92, 598, 378, 379, 599, 380, 381, 87, 88, 89, 600, 382, 383, 601, 384, 385, 84, 85, 86, 287, 602, 386, 387, 603, 388, 389, 81, 82, 83, 288, 604, 390, 391, 79, 80, 605, 392, 393, 78, 606, 394, 395, 607, 396, 397, 158, 159, 160, 608, 398, 399, 75, 76, 77, 609, 400, 401, 610, 402, 403, 72, 73, 74, 611, 404, 405, 70, 71, 289, 612, 406, 407, 613, 408, 409, 614, 410, 411, 615, 412, 413, 616, 414, 415, 617, 416, 417, 618, 418, 419, 619, 620, 420, 421, 621, 422, 423, 161, 162, 163, 622, 424, 425, 67, 68, 69, 623, 426, 427, 624, 428, 429, 64, 65, 66, 625, 430, 431, 61, 62, 63, 626, 432, 433, 58, 59, 60, 57, 627, 434, 435, 628, 436, 437, 54, 55, 56, 290, 629, 438, 439, 630, 440, 441, 51, 52, 53, 631, 442, 443, 632, 444, 445, 164, 165, 166, 633, 446, 447, 167, 168, 169, 634, 448, 449, 170, 171, 172, 635, 450, 451, 48, 49, 50, 636, 452, 453, 291, 637, 46, 47, 638, 454, 455, 639, 456, 457, 45, 299, 300, 640, 641, 458, 459, 173, 174, 642, 460, 461, 42, 43, 44, 643, 462, 463, 41, 301, 302, 644, 645, 464, 465, 39, 40, 292, 646, 466, 467, 647, 468, 469, 36, 37, 38, 648, 470, 471, 175, 176, 177, 649, 472, 473, 33, 34, 35, 650, 474, 475, 651, 476, 477, 32, 303, 304, 652, 653, 30, 31, 654, 478, 479, 28, 29, 655, 480, 481, 656, 482, 483, 25, 26, 27, 293, 657, 484, 485, 24, 305, 306, 658, 178, 659, 486, 487, 21, 22, 23, 660, 488, 489, 661, 490, 491, 18, 19, 20, 662, 492, 493, 294, 663, 494, 495, 664, 17, 665, 666, 496, 497, 179, 180, 181, 15, 16, 667, 498, 499, 668, 500, 501, 669, 502, 503, 670, 671, 504, 505, 672, 295, 673, 182, 674, 183, 184, 14, 675, 506, 507, 185, 676, 186, 187, 188, 677, 189, 190, 191, 678, 192, 193, 194, 195, 679, 196, 197, 198, 199, 680, 200, 201, 681, 508, 509, 202, 203, 682, 204, 205, 206, 683, 207, 208, 209, 684, 210, 211, 212, 685, 213, 214, 215, 686, 216, 217, 218, 219, 687, 510, 511, 220, 221, 688, 222, 223, 224, 689, 225, 226, 690, 227, 228, 229, 691, 230, 231, 232, 692, 233, 234, 235, 236, 237, 238, 239, 693, 240, 241, 242, 694, 512, 513, 243, 13, 695, 514, 515, 244, 245, 12, 696, 313, 314, 697, 246, 698, 247, 248, 249, 699, 250, 251, 252, 700, 516, 517, 253, 11, 701, 518, 519, 254, 255, 10, 702, 520, 521, 9, 703, 256, 257, 258, 704, 522, 523, 259, 705, 524, 525, 260, 8, 706, 526, 527, 261, 262, 263, 707, 264, 265, 266, 708, 267, 268, 7, 709, 315, 316, 269, 270, 271, 272, 273, 296, 710, 528, 529, 298, 297, 711, 530, 531, 712, 532, 533, 713, 714, 534, 535, 715, 536, 537, 716, 717, 718, 538, 539, 719, 319, 720, 721, 329, 722, 317, 274, 318, 275, 276, 277 }
  uselistorder i32 15, { 13, 14, 15, 2, 16, 3, 17, 4, 5, 6, 7, 8, 9, 10, 11, 18, 19, 12, 20, 21, 22, 23, 0, 24, 25, 26, 27, 1, 28 }
  uselistorder i32 256, { 0, 1, 2, 5, 6, 7, 3, 4, 8, 11, 12, 13, 9, 10, 14, 15, 16, 17, 18, 416, 417, 19, 20, 21, 22, 23, 24, 25, 419, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 40, 39, 42, 415, 420, 47, 43, 46, 44, 45, 418, 49, 48, 50, 51, 52, 55, 54, 53, 56, 58, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 74, 83, 79, 84, 80, 76, 77, 81, 78, 85, 86, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 102, 101, 109, 104, 115, 116, 110, 105, 117, 118, 111, 106, 119, 112, 113, 120, 114, 121, 107, 122, 108, 123, 124, 125, 126, 127, 128, 129, 132, 133, 136, 134, 130, 137, 135, 131, 140, 139, 138, 143, 144, 141, 145, 142, 146, 151, 149, 152, 150, 147, 148, 153, 413, 421, 154, 155, 156, 157, 161, 158, 159, 160, 163, 164, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 184, 182, 178, 185, 183, 179, 188, 187, 186, 191, 192, 189, 193, 190, 194, 199, 197, 200, 198, 195, 196, 201, 414, 422, 202, 203, 204, 205, 209, 206, 207, 208, 211, 212, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 229, 231, 232, 233, 237, 243, 238, 234, 239, 244, 240, 245, 241, 235, 246, 236, 247, 248, 242, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 259, 262, 265, 266, 264, 263, 267, 270, 269, 268, 277, 274, 278, 275, 271, 279, 276, 272, 273, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 290, 292, 293, 295, 294, 296, 297, 298, 299, 302, 309, 303, 304, 300, 305, 306, 307, 301, 310, 308, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 323, 325, 326, 327, 331, 338, 332, 333, 339, 334, 328, 329, 335, 330, 336, 340, 337, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 358, 360, 361, 362, 373, 368, 363, 374, 369, 370, 375, 371, 364, 365, 366, 376, 377, 378, 379, 372, 367, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 391, 393, 394, 395, 396, 397, 398, 399, 401, 400, 402, 403, 404, 405, 406, 407, 409, 408, 410, 411, 412 }
  uselistorder i32 128, { 15, 16, 17, 24, 10, 25, 0, 18, 19, 20, 1, 2, 3, 4, 5, 6, 7, 8, 9, 26, 21, 22, 23, 27, 11, 28, 12, 13, 29, 30, 31, 14 }
  uselistorder i32 255, { 19, 20, 16, 21, 17, 22, 23, 2, 18, 24, 4, 25, 3, 1, 5, 6, 26, 0, 27, 7, 10, 11, 9, 12, 8, 13, 14, 15 }
  uselistorder i32 65536, { 9, 10, 11, 14, 12, 13, 15, 17, 16, 18, 1, 20, 19, 21, 2, 22, 0, 3, 23, 24, 25, 26, 27, 30, 28, 29, 31, 32, 4, 36, 37, 33, 34, 38, 35, 39, 40, 41, 42, 43, 110, 45, 44, 111, 46, 47, 49, 48, 51, 50, 112, 53, 52, 113, 54, 55, 57, 56, 59, 58, 60, 61, 66, 67, 68, 69, 62, 63, 64, 65, 70, 73, 74, 75, 71, 72, 76, 5, 77, 80, 81, 82, 78, 79, 83, 6, 84, 88, 89, 90, 85, 86, 87, 91, 92, 93, 94, 95, 96, 98, 97, 99, 7, 100, 102, 103, 101, 104, 8, 105, 107, 108, 106, 109 }
  uselistorder i32 65535, { 100, 0, 1, 53, 12, 54, 24, 28, 55, 25, 56, 26, 57, 27, 58, 59, 13, 60, 2, 61, 62, 32, 63, 31, 64, 29, 65, 30, 66, 14, 15, 3, 67, 33, 68, 34, 69, 16, 17, 4, 70, 35, 71, 36, 72, 18, 73, 39, 74, 38, 75, 37, 76, 19, 20, 5, 41, 77, 40, 78, 79, 80, 21, 81, 82, 6, 44, 83, 42, 84, 43, 85, 86, 22, 87, 7, 8, 47, 88, 45, 89, 46, 90, 91, 23, 92, 9, 48, 93, 49, 94, 50, 95, 96, 10, 51, 97, 98, 11, 52, 99 }
  uselistorder i32 %arg2, { 7, 12, 6, 5, 4, 10, 11, 8, 9, 0, 3, 1, 2 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb98, { 1, 0 }
  uselistorder label %dec_label_pc_13600, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_135bc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_135a8thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @__aeabi_uidivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_13664 = udiv i32 %arg1, %arg2
  ret i32 %v2_13664
}

define i32 @__umodsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_13678 = add i32 %arg2, -1
  %v2_13678 = icmp eq i32 %arg2, 0
  br i1 %v2_13678, label %dec_label_pc_13734, label %dec_label_pc_13680

dec_label_pc_13680:                               ; preds = %entry
  %v7_13678 = icmp eq i32 %arg2, 1
  br i1 %v7_13678, label %.thread65, label %bb

bb:                                               ; preds = %dec_label_pc_13680
  %v1_13680 = load i32, i32* @r0, align 4
  %v10_13680 = icmp eq i32 %v1_13680, %arg2
  br i1 %v10_13680, label %.thread65, label %bb74

.thread65:                                        ; preds = %dec_label_pc_13680, %bb
  br label %.thread67

bb74:                                             ; preds = %bb
  %v4_13680 = icmp ult i32 %v1_13680, %arg2
  br i1 %v4_13680, label %bb76, label %bb75

bb75:                                             ; preds = %bb74
  %v6_13688 = and i32 %v1_13678, %arg2
  %v8_13688 = icmp eq i32 %v6_13688, 0
  br i1 %v8_13688, label %.thread67, label %dec_label_pc_13698.preheader

.thread67:                                        ; preds = %bb75, %.thread65
  %v1_1368c = phi i32 [ %v1_13680, %bb75 ], [ 0, %.thread65 ]
  %v3_1368c = and i32 %v1_1368c, %v1_13678
  br label %bb76

dec_label_pc_13698.preheader:                     ; preds = %bb75
  %v2_1369897 = icmp ugt i32 %arg2, 268435455
  br i1 %v2_1369897, label %.thread, label %bb77

bb76:                                             ; preds = %dec_label_pc_13728, %bb74, %bb89, %bb84, %dec_label_pc_136f8, %.thread67
  %v5_13690 = phi i32 [ %v1_13680, %bb74 ], [ %v3_1368c, %.thread67 ], [ %v1_136d4.v6_136d4.v6_136dc.v6_136e4, %dec_label_pc_136f8 ], [ 0, %bb84 ], [ %v1_1372c, %dec_label_pc_13728 ], [ %v2_13728, %bb89 ]
  ret i32 %v5_13690

.thread:                                          ; preds = %.thread1.thread9, %dec_label_pc_13698.preheader
  %v0_136ac.pr33.lcssa = phi i32 [ %arg2, %dec_label_pc_13698.preheader ], [ %v4_136a0, %.thread1.thread9 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_13698.preheader ], [ %v2_136a411, %.thread1.thread9 ]
  br label %dec_label_pc_136acthread-pre-split.loopexit

bb77:                                             ; preds = %dec_label_pc_13698.preheader, %.thread1.thread9
  %storemerge99 = phi i32 [ %v2_136a411, %.thread1.thread9 ], [ 0, %dec_label_pc_13698.preheader ]
  %v0_136ac.pr3398 = phi i32 [ %v4_136a0, %.thread1.thread9 ], [ %arg2, %dec_label_pc_13698.preheader ]
  %v4_1369c = icmp ult i32 %v0_136ac.pr3398, %v1_13680
  br i1 %v4_1369c, label %bb78, label %dec_label_pc_136acthread-pre-split.loopexit.loopexit

bb78:                                             ; preds = %bb77
  %v2_136a0 = and i32 %v0_136ac.pr3398, 268435456
  %v3_136a0 = icmp eq i32 %v2_136a0, 0
  %v4_136a0 = mul i32 %v0_136ac.pr3398, 16
  br i1 %v3_136a0, label %.thread1.thread9, label %dec_label_pc_136ac.loopexit

.thread1.thread9:                                 ; preds = %bb78
  %v2_136a411 = add i32 %storemerge99, 4
  %v2_13698 = icmp ugt i32 %v4_136a0, 268435455
  br i1 %v2_13698, label %.thread, label %bb77

dec_label_pc_136acthread-pre-split.loopexit.loopexit: ; preds = %bb77
  br label %dec_label_pc_136acthread-pre-split.loopexit

dec_label_pc_136acthread-pre-split.loopexit:      ; preds = %dec_label_pc_136acthread-pre-split.loopexit.loopexit, %.thread
  %v0_136ac.pr3396 = phi i32 [ %v0_136ac.pr33.lcssa, %.thread ], [ %v0_136ac.pr3398, %dec_label_pc_136acthread-pre-split.loopexit.loopexit ]
  %storemerge93 = phi i32 [ %storemerge.lcssa, %.thread ], [ %storemerge99, %dec_label_pc_136acthread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_136acthread-pre-split

dec_label_pc_136acthread-pre-split:               ; preds = %.thread4, %dec_label_pc_136acthread-pre-split.loopexit
  %v1_136b839 = phi i32 [ %storemerge93, %dec_label_pc_136acthread-pre-split.loopexit ], [ %v2_136b8, %.thread4 ]
  %v0_136ac.pr = phi i32 [ %v0_136ac.pr3396, %dec_label_pc_136acthread-pre-split.loopexit ], [ %v3_136b4, %.thread4 ]
  br label %dec_label_pc_136ac

dec_label_pc_136ac.loopexit:                      ; preds = %bb78
  br label %dec_label_pc_136ac

dec_label_pc_136ac:                               ; preds = %dec_label_pc_136ac.loopexit, %dec_label_pc_136acthread-pre-split
  %v0_136c0.pr = phi i32 [ %v1_136b839, %dec_label_pc_136acthread-pre-split ], [ %storemerge99, %dec_label_pc_136ac.loopexit ]
  %v1_136b4 = phi i32 [ %v0_136ac.pr, %dec_label_pc_136acthread-pre-split ], [ %v4_136a0, %dec_label_pc_136ac.loopexit ]
  %v2_136ac = icmp slt i32 %v1_136b4, 0
  br i1 %v2_136ac, label %dec_label_pc_136c0, label %bb79

bb79:                                             ; preds = %dec_label_pc_136ac
  %v4_136b0 = icmp ult i32 %v1_136b4, %v1_13680
  br i1 %v4_136b0, label %.thread4, label %dec_label_pc_136c0

.thread4:                                         ; preds = %bb79
  %v3_136b4 = mul i32 %v1_136b4, 2
  %v2_136b8 = add i32 %v0_136c0.pr, 1
  br label %dec_label_pc_136acthread-pre-split

dec_label_pc_136c0:                               ; preds = %bb79, %dec_label_pc_136ac
  %v2_136c0 = add i32 %v0_136c0.pr, -3
  %v5_136c4 = icmp slt i32 %v0_136c0.pr, 3
  br i1 %v5_136c4, label %dec_label_pc_13704, label %dec_label_pc_136c8

dec_label_pc_136c8:                               ; preds = %dec_label_pc_136c0, %bb83
  %v6_136f0 = phi i32 [ %v0_136f8, %bb83 ], [ %v2_136c0, %dec_label_pc_136c0 ]
  %v1_136cc = phi i32 [ %v1_136d4.v6_136d4.v6_136dc.v6_136e4, %bb83 ], [ %v1_13680, %dec_label_pc_136c0 ]
  %v3_136ec12 = phi i32 [ %v3_136ec, %bb83 ], [ %v1_136b4, %dec_label_pc_136c0 ]
  %v3_136c8 = icmp ult i32 %v1_136cc, %v3_136ec12
  %v3_136cc = select i1 %v3_136c8, i32 0, i32 %v3_136ec12
  %v1_136d4 = sub i32 %v1_136cc, %v3_136cc
  %v4_136d0 = udiv i32 %v3_136ec12, 2
  %v6_136d0 = icmp ult i32 %v1_136d4, %v4_136d0
  %v6_136d4 = select i1 %v6_136d0, i32 0, i32 %v4_136d0
  %v1_136d4.v6_136d4 = sub i32 %v1_136d4, %v6_136d4
  %.demorgan = and i1 %v3_136c8, %v6_136d0
  %v4_136d8 = udiv i32 %v3_136ec12, 4
  %v6_136d8 = icmp ult i32 %v1_136d4.v6_136d4, %v4_136d8
  %v6_136dc = select i1 %v6_136d8, i32 0, i32 %v4_136d8
  %v1_136d4.v6_136d4.v6_136dc = sub i32 %v1_136d4.v6_136d4, %v6_136dc
  %.demorgan71 = and i1 %.demorgan, %v6_136d8
  %v4_136e0 = udiv i32 %v3_136ec12, 8
  %v6_136e0 = icmp ult i32 %v1_136d4.v6_136d4.v6_136dc, %v4_136e0
  %v6_136e4 = select i1 %v6_136e0, i32 0, i32 %v4_136e0
  %v1_136d4.v6_136d4.v6_136dc.v6_136e4 = sub i32 %v1_136d4.v6_136d4.v6_136dc, %v6_136e4
  %.demorgan72 = and i1 %.demorgan71, %v6_136e0
  br i1 %.demorgan72, label %bb81, label %bb80

bb80:                                             ; preds = %dec_label_pc_136c8
  br label %bb81

bb81:                                             ; preds = %dec_label_pc_136c8, %bb80
  %v2_136e8 = add i32 %v1_136d4.v6_136d4.v6_136dc.v6_136e4, -1
  %v4_136e8 = sub i32 0, %v1_136d4.v6_136d4.v6_136dc.v6_136e4
  %v5_136e8 = and i32 %v1_136d4.v6_136d4.v6_136dc.v6_136e4, %v4_136e8
  %v3_136ec = udiv i32 %v3_136ec12, 16
  %v5_136f0 = icmp slt i32 %v1_136d4.v6_136d4.v6_136dc.v6_136e4, 1
  br i1 %v5_136f0, label %bb83, label %bb82

bb82:                                             ; preds = %bb81
  %v7_136f0 = add i32 %v6_136f0, -4
  %v9_136f0 = sub i32 3, %v6_136f0
  %v10_136f0 = and i32 %v9_136f0, %v6_136f0
  br label %bb83

bb83:                                             ; preds = %bb81, %bb82
  %v0_136f8 = phi i32 [ %v6_136f0, %bb81 ], [ %v7_136f0, %bb82 ]
  %v0_136f415.in = phi i32 [ %v2_136e8, %bb81 ], [ %v7_136f0, %bb82 ]
  %v1_136f414.in = phi i32 [ %v5_136e8, %bb81 ], [ %v10_136f0, %bb82 ]
  %v1_136f414 = icmp slt i32 %v1_136f414.in, 0
  %v0_136f415 = icmp slt i32 %v0_136f415.in, 0
  %v2_136f4 = xor i1 %v0_136f415, %v1_136f414
  br i1 %v2_136f4, label %dec_label_pc_136f8, label %dec_label_pc_136c8

dec_label_pc_136f8:                               ; preds = %bb83
  %v1_136f8 = urem i32 %v0_136f8, 4
  %v2_136f8 = icmp eq i32 %v1_136f8, 0
  br i1 %v2_136f8, label %bb76, label %bb84

bb84:                                             ; preds = %dec_label_pc_136f8
  %v3_136fc = icmp eq i32 %v1_136d4.v6_136d4.v6_136dc.v6_136e4, 0
  br i1 %v3_136fc, label %bb76, label %dec_label_pc_13704

dec_label_pc_13704:                               ; preds = %bb84, %dec_label_pc_136c0
  %v0_13718 = phi i32 [ %v3_136ec, %bb84 ], [ %v1_136b4, %dec_label_pc_136c0 ]
  %v1_13714 = phi i32 [ %v1_136d4.v6_136d4.v6_136dc.v6_136e4, %bb84 ], [ %v1_13680, %dec_label_pc_136c0 ]
  %v0_13704 = phi i32 [ %v0_136f8, %bb84 ], [ %v2_136c0, %dec_label_pc_136c0 ]
  %v5_13708 = icmp slt i32 %v0_13704, -2
  br i1 %v5_13708, label %dec_label_pc_13728, label %dec_label_pc_1370c

dec_label_pc_1370c:                               ; preds = %dec_label_pc_13704
  %v8_13704 = icmp eq i32 %v0_13704, -2
  br i1 %v8_13704, label %dec_label_pc_1371c, label %dec_label_pc_13710

dec_label_pc_13710:                               ; preds = %dec_label_pc_1370c
  %v3_13710 = icmp ult i32 %v1_13714, %v0_13718
  br i1 %v3_13710, label %bb86, label %bb85

bb85:                                             ; preds = %dec_label_pc_13710
  %v2_13710 = sub i32 %v1_13714, %v0_13718
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_13710, %bb85
  %v0_1371c52 = phi i32 [ %v1_13714, %dec_label_pc_13710 ], [ %v2_13710, %bb85 ]
  %v3_13718 = udiv i32 %v0_13718, 2
  br label %dec_label_pc_1371c

dec_label_pc_1371c:                               ; preds = %dec_label_pc_1370c, %bb86
  %v0_13724 = phi i32 [ %v0_13718, %dec_label_pc_1370c ], [ %v3_13718, %bb86 ]
  %v1_13720 = phi i32 [ %v1_13714, %dec_label_pc_1370c ], [ %v0_1371c52, %bb86 ]
  %v3_1371c = icmp ult i32 %v1_13720, %v0_13724
  br i1 %v3_1371c, label %bb88, label %bb87

bb87:                                             ; preds = %dec_label_pc_1371c
  %v2_1371c = sub i32 %v1_13720, %v0_13724
  br label %bb88

bb88:                                             ; preds = %dec_label_pc_1371c, %bb87
  %v0_1372855 = phi i32 [ %v1_13720, %dec_label_pc_1371c ], [ %v2_1371c, %bb87 ]
  %v3_13724 = udiv i32 %v0_13724, 2
  br label %dec_label_pc_13728

dec_label_pc_13728:                               ; preds = %dec_label_pc_13704, %bb88
  %v2_1372c = phi i32 [ %v0_13718, %dec_label_pc_13704 ], [ %v3_13724, %bb88 ]
  %v1_1372c = phi i32 [ %v1_13714, %dec_label_pc_13704 ], [ %v0_1372855, %bb88 ]
  %v3_13728 = icmp ult i32 %v1_1372c, %v2_1372c
  br i1 %v3_13728, label %bb76, label %bb89

bb89:                                             ; preds = %dec_label_pc_13728
  %v2_13728 = sub i32 %v1_1372c, %v2_1372c
  br label %bb76

dec_label_pc_13734:                               ; preds = %entry
  %v0_13734 = load i32, i32* @lr, align 4
  %v0_13738 = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_13734)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_1372c, { 1, 2, 0 }
  uselistorder i32 %v0_13718, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_136f8, { 1, 0, 2 }
  uselistorder i32 %v7_136f0, { 1, 0 }
  uselistorder i32 %v3_136ec, { 1, 0 }
  uselistorder i32 %v1_136d4.v6_136d4.v6_136dc.v6_136e4, { 1, 2, 7, 5, 6, 4, 0, 3 }
  uselistorder i32 %v4_136e0, { 1, 0 }
  uselistorder i32 %v4_136d8, { 1, 0 }
  uselistorder i32 %v4_136d0, { 1, 0 }
  uselistorder i32 %v6_136f0, { 3, 0, 2, 1 }
  uselistorder i32 %v2_136c0, { 1, 0 }
  uselistorder i32 %v1_136b4, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v4_136a0, { 1, 0, 3, 2 }
  uselistorder i32 %v0_136ac.pr3398, { 1, 0, 2, 3 }
  uselistorder i32 %v1_13680, { 4, 1, 5, 3, 0, 2, 6, 7 }
  uselistorder i32 %arg2, { 7, 8, 6, 5, 3, 4, 0, 2, 1 }
  uselistorder label %dec_label_pc_13728, { 1, 0 }
  uselistorder label %bb88, { 1, 0 }
  uselistorder label %dec_label_pc_1371c, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %bb83, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %dec_label_pc_136c8, { 1, 0 }
  uselistorder label %bb77, { 1, 0 }
  uselistorder label %bb76, { 2, 0, 3, 4, 5, 1 }
  uselistorder label %.thread65, { 1, 0 }
}

define i32 @__modsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v2_13744 = icmp eq i32 %arg2, 0
  br i1 %v2_13744, label %dec_label_pc_13818, label %dec_label_pc_1374c

dec_label_pc_1374c:                               ; preds = %entry
  %v1_13744 = icmp slt i32 %arg2, 0
  br i1 %v1_13744, label %bb, label %bb79

bb:                                               ; preds = %dec_label_pc_1374c
  %v2_1374c = sub i32 0, %arg2
  br label %bb79

bb79:                                             ; preds = %dec_label_pc_1374c, %bb
  %v4_13764 = phi i32 [ %arg2, %dec_label_pc_1374c ], [ %v2_1374c, %bb ]
  %v0_13750 = load i32, i32* @r0, align 4
  %v1_13750 = icmp slt i32 %v0_13750, 0
  br i1 %v1_13750, label %bb80, label %bb81

bb80:                                             ; preds = %bb79
  %v2_13754 = sub i32 0, %v0_13750
  br label %bb81

bb81:                                             ; preds = %bb79, %bb80
  %v1_1375c = phi i32 [ %v0_13750, %bb79 ], [ %v2_13754, %bb80 ]
  %v1_13758 = add i32 %v4_13764, -1
  %v7_13758 = icmp eq i32 %v4_13764, 1
  br i1 %v7_13758, label %.thread70, label %bb82

bb82:                                             ; preds = %bb81
  %v10_1375c = icmp eq i32 %v1_1375c, %v4_13764
  br i1 %v10_1375c, label %.thread70, label %bb83

.thread70:                                        ; preds = %bb81, %bb82
  br label %.thread72

bb83:                                             ; preds = %bb82
  %v4_1375c = icmp ult i32 %v1_1375c, %v4_13764
  br i1 %v4_1375c, label %.thread6, label %bb84

bb84:                                             ; preds = %bb83
  %v6_13764 = and i32 %v1_13758, %v4_13764
  %v8_13764 = icmp eq i32 %v6_13764, 0
  br i1 %v8_13764, label %.thread72, label %dec_label_pc_13774.preheader

dec_label_pc_13774.preheader:                     ; preds = %bb84
  %v2_13774107 = icmp ugt i32 %v4_13764, 268435455
  br i1 %v2_13774107, label %.thread1, label %bb85

.thread72:                                        ; preds = %bb84, %.thread70
  %v1_1376864 = phi i32 [ %v1_1375c, %bb84 ], [ 0, %.thread70 ]
  %v3_13768 = and i32 %v1_1376864, %v1_13758
  br label %.thread6

.thread1:                                         ; preds = %.thread2.thread7, %dec_label_pc_13774.preheader
  %v0_13788.pr35.lcssa = phi i32 [ %v4_13764, %dec_label_pc_13774.preheader ], [ %v4_1377c, %.thread2.thread7 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_13774.preheader ], [ %v2_137809, %.thread2.thread7 ]
  br label %dec_label_pc_13788thread-pre-split.loopexit

bb85:                                             ; preds = %dec_label_pc_13774.preheader, %.thread2.thread7
  %storemerge109 = phi i32 [ %v2_137809, %.thread2.thread7 ], [ 0, %dec_label_pc_13774.preheader ]
  %v0_13788.pr35108 = phi i32 [ %v4_1377c, %.thread2.thread7 ], [ %v4_13764, %dec_label_pc_13774.preheader ]
  %v4_13778 = icmp ult i32 %v0_13788.pr35108, %v1_1375c
  br i1 %v4_13778, label %bb86, label %dec_label_pc_13788thread-pre-split.loopexit.loopexit

bb86:                                             ; preds = %bb85
  %v2_1377c = and i32 %v0_13788.pr35108, 268435456
  %v3_1377c = icmp eq i32 %v2_1377c, 0
  %v4_1377c = mul i32 %v0_13788.pr35108, 16
  br i1 %v3_1377c, label %.thread2.thread7, label %dec_label_pc_13788.loopexit

.thread2.thread7:                                 ; preds = %bb86
  %v2_137809 = add i32 %storemerge109, 4
  %v2_13774 = icmp ugt i32 %v4_1377c, 268435455
  br i1 %v2_13774, label %.thread1, label %bb85

dec_label_pc_13788thread-pre-split.loopexit.loopexit: ; preds = %bb85
  br label %dec_label_pc_13788thread-pre-split.loopexit

dec_label_pc_13788thread-pre-split.loopexit:      ; preds = %dec_label_pc_13788thread-pre-split.loopexit.loopexit, %.thread1
  %v0_13788.pr35106 = phi i32 [ %v0_13788.pr35.lcssa, %.thread1 ], [ %v0_13788.pr35108, %dec_label_pc_13788thread-pre-split.loopexit.loopexit ]
  %storemerge103 = phi i32 [ %storemerge.lcssa, %.thread1 ], [ %storemerge109, %dec_label_pc_13788thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_13788thread-pre-split

dec_label_pc_13788thread-pre-split:               ; preds = %.thread4, %dec_label_pc_13788thread-pre-split.loopexit
  %v1_1379441 = phi i32 [ %storemerge103, %dec_label_pc_13788thread-pre-split.loopexit ], [ %v2_13794, %.thread4 ]
  %v2_1378c36 = phi i32 [ %v1_1375c, %dec_label_pc_13788thread-pre-split.loopexit ], [ %v2_1378c, %.thread4 ]
  %v0_13788.pr = phi i32 [ %v0_13788.pr35106, %dec_label_pc_13788thread-pre-split.loopexit ], [ %v3_13790, %.thread4 ]
  br label %dec_label_pc_13788

dec_label_pc_13788.loopexit:                      ; preds = %bb86
  br label %dec_label_pc_13788

dec_label_pc_13788:                               ; preds = %dec_label_pc_13788.loopexit, %dec_label_pc_13788thread-pre-split
  %v0_1379c.pr = phi i32 [ %v1_1379441, %dec_label_pc_13788thread-pre-split ], [ %storemerge109, %dec_label_pc_13788.loopexit ]
  %v2_1378c = phi i32 [ %v2_1378c36, %dec_label_pc_13788thread-pre-split ], [ %v1_1375c, %dec_label_pc_13788.loopexit ]
  %v1_13790 = phi i32 [ %v0_13788.pr, %dec_label_pc_13788thread-pre-split ], [ %v4_1377c, %dec_label_pc_13788.loopexit ]
  %v2_13788 = icmp slt i32 %v1_13790, 0
  br i1 %v2_13788, label %dec_label_pc_1379c, label %bb87

bb87:                                             ; preds = %dec_label_pc_13788
  %v4_1378c = icmp ult i32 %v1_13790, %v2_1378c
  br i1 %v4_1378c, label %.thread4, label %dec_label_pc_1379c

.thread4:                                         ; preds = %bb87
  %v3_13790 = mul i32 %v1_13790, 2
  %v2_13794 = add i32 %v0_1379c.pr, 1
  br label %dec_label_pc_13788thread-pre-split

dec_label_pc_1379c:                               ; preds = %bb87, %dec_label_pc_13788
  %v2_1379c = add i32 %v0_1379c.pr, -3
  %v5_137a0 = icmp slt i32 %v0_1379c.pr, 3
  br i1 %v5_137a0, label %dec_label_pc_137e0, label %dec_label_pc_137a4

dec_label_pc_137a4:                               ; preds = %dec_label_pc_1379c, %bb91
  %v6_137cc = phi i32 [ %v0_137d4, %bb91 ], [ %v2_1379c, %dec_label_pc_1379c ]
  %v1_137a8 = phi i32 [ %v1_137b0.v6_137b0.v6_137b8.v6_137c0, %bb91 ], [ %v2_1378c, %dec_label_pc_1379c ]
  %v3_137c810 = phi i32 [ %v3_137c8, %bb91 ], [ %v1_13790, %dec_label_pc_1379c ]
  %v3_137a4 = icmp ult i32 %v1_137a8, %v3_137c810
  %v3_137a8 = select i1 %v3_137a4, i32 0, i32 %v3_137c810
  %v1_137b0 = sub i32 %v1_137a8, %v3_137a8
  %v4_137ac = udiv i32 %v3_137c810, 2
  %v6_137ac = icmp ult i32 %v1_137b0, %v4_137ac
  %v6_137b0 = select i1 %v6_137ac, i32 0, i32 %v4_137ac
  %v1_137b0.v6_137b0 = sub i32 %v1_137b0, %v6_137b0
  %.demorgan = and i1 %v3_137a4, %v6_137ac
  %v4_137b4 = udiv i32 %v3_137c810, 4
  %v6_137b4 = icmp ult i32 %v1_137b0.v6_137b0, %v4_137b4
  %v6_137b8 = select i1 %v6_137b4, i32 0, i32 %v4_137b4
  %v1_137b0.v6_137b0.v6_137b8 = sub i32 %v1_137b0.v6_137b0, %v6_137b8
  %.demorgan76 = and i1 %.demorgan, %v6_137b4
  %v4_137bc = udiv i32 %v3_137c810, 8
  %v6_137bc = icmp ult i32 %v1_137b0.v6_137b0.v6_137b8, %v4_137bc
  %v6_137c0 = select i1 %v6_137bc, i32 0, i32 %v4_137bc
  %v1_137b0.v6_137b0.v6_137b8.v6_137c0 = sub i32 %v1_137b0.v6_137b0.v6_137b8, %v6_137c0
  %.demorgan77 = and i1 %.demorgan76, %v6_137bc
  br i1 %.demorgan77, label %bb89, label %bb88

bb88:                                             ; preds = %dec_label_pc_137a4
  br label %bb89

bb89:                                             ; preds = %dec_label_pc_137a4, %bb88
  %v2_137c4 = add i32 %v1_137b0.v6_137b0.v6_137b8.v6_137c0, -1
  %v4_137c4 = sub i32 0, %v1_137b0.v6_137b0.v6_137b8.v6_137c0
  %v5_137c4 = and i32 %v1_137b0.v6_137b0.v6_137b8.v6_137c0, %v4_137c4
  %v3_137c8 = udiv i32 %v3_137c810, 16
  %v5_137cc = icmp slt i32 %v1_137b0.v6_137b0.v6_137b8.v6_137c0, 1
  br i1 %v5_137cc, label %bb91, label %bb90

bb90:                                             ; preds = %bb89
  %v7_137cc = add i32 %v6_137cc, -4
  %v9_137cc = sub i32 3, %v6_137cc
  %v10_137cc = and i32 %v9_137cc, %v6_137cc
  br label %bb91

bb91:                                             ; preds = %bb89, %bb90
  %v0_137d4 = phi i32 [ %v6_137cc, %bb89 ], [ %v7_137cc, %bb90 ]
  %v0_137d013.in = phi i32 [ %v2_137c4, %bb89 ], [ %v7_137cc, %bb90 ]
  %v1_137d012.in = phi i32 [ %v5_137c4, %bb89 ], [ %v10_137cc, %bb90 ]
  %v1_137d012 = icmp slt i32 %v1_137d012.in, 0
  %v0_137d013 = icmp slt i32 %v0_137d013.in, 0
  %v2_137d0 = xor i1 %v0_137d013, %v1_137d012
  br i1 %v2_137d0, label %dec_label_pc_137d4, label %dec_label_pc_137a4

dec_label_pc_137d4:                               ; preds = %bb91
  %v1_137d4 = urem i32 %v0_137d4, 4
  %v2_137d4 = icmp eq i32 %v1_137d4, 0
  br i1 %v2_137d4, label %.thread6, label %bb92

bb92:                                             ; preds = %dec_label_pc_137d4
  %v3_137d8 = icmp eq i32 %v1_137b0.v6_137b0.v6_137b8.v6_137c0, 0
  br i1 %v3_137d8, label %.thread6, label %dec_label_pc_137e0

dec_label_pc_137e0:                               ; preds = %bb92, %dec_label_pc_1379c
  %v0_137f4 = phi i32 [ %v3_137c8, %bb92 ], [ %v1_13790, %dec_label_pc_1379c ]
  %v1_137f0 = phi i32 [ %v1_137b0.v6_137b0.v6_137b8.v6_137c0, %bb92 ], [ %v2_1378c, %dec_label_pc_1379c ]
  %v0_137e0 = phi i32 [ %v0_137d4, %bb92 ], [ %v2_1379c, %dec_label_pc_1379c ]
  %v5_137e4 = icmp slt i32 %v0_137e0, -2
  br i1 %v5_137e4, label %dec_label_pc_13804, label %dec_label_pc_137e8

dec_label_pc_137e8:                               ; preds = %dec_label_pc_137e0
  %v8_137e0 = icmp eq i32 %v0_137e0, -2
  br i1 %v8_137e0, label %dec_label_pc_137f8, label %dec_label_pc_137ec

dec_label_pc_137ec:                               ; preds = %dec_label_pc_137e8
  %v3_137ec = icmp ult i32 %v1_137f0, %v0_137f4
  br i1 %v3_137ec, label %bb94, label %bb93

bb93:                                             ; preds = %dec_label_pc_137ec
  %v2_137ec = sub i32 %v1_137f0, %v0_137f4
  br label %bb94

bb94:                                             ; preds = %dec_label_pc_137ec, %bb93
  %v0_137f854 = phi i32 [ %v1_137f0, %dec_label_pc_137ec ], [ %v2_137ec, %bb93 ]
  %v3_137f4 = udiv i32 %v0_137f4, 2
  br label %dec_label_pc_137f8

dec_label_pc_137f8:                               ; preds = %dec_label_pc_137e8, %bb94
  %v0_13800 = phi i32 [ %v0_137f4, %dec_label_pc_137e8 ], [ %v3_137f4, %bb94 ]
  %v1_137fc = phi i32 [ %v1_137f0, %dec_label_pc_137e8 ], [ %v0_137f854, %bb94 ]
  %v3_137f8 = icmp ult i32 %v1_137fc, %v0_13800
  br i1 %v3_137f8, label %bb96, label %bb95

bb95:                                             ; preds = %dec_label_pc_137f8
  %v2_137f8 = sub i32 %v1_137fc, %v0_13800
  br label %bb96

bb96:                                             ; preds = %dec_label_pc_137f8, %bb95
  %v0_1380457 = phi i32 [ %v1_137fc, %dec_label_pc_137f8 ], [ %v2_137f8, %bb95 ]
  %v3_13800 = udiv i32 %v0_13800, 2
  br label %dec_label_pc_13804

dec_label_pc_13804:                               ; preds = %dec_label_pc_137e0, %bb96
  %v2_13808 = phi i32 [ %v0_137f4, %dec_label_pc_137e0 ], [ %v3_13800, %bb96 ]
  %v1_13808 = phi i32 [ %v1_137f0, %dec_label_pc_137e0 ], [ %v0_1380457, %bb96 ]
  %v3_13804 = icmp ult i32 %v1_13808, %v2_13808
  br i1 %v3_13804, label %.thread6, label %bb97

bb97:                                             ; preds = %dec_label_pc_13804
  %v2_13804 = sub i32 %v1_13808, %v2_13808
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_13804, %bb83, %.thread72, %dec_label_pc_137d4, %bb92, %bb97
  %v1_13810 = phi i32 [ %v1_137b0.v6_137b0.v6_137b8.v6_137c0, %dec_label_pc_137d4 ], [ 0, %bb92 ], [ %v1_13808, %dec_label_pc_13804 ], [ %v2_13804, %bb97 ], [ %v3_13768, %.thread72 ], [ %v1_1375c, %bb83 ]
  br i1 %v1_13750, label %bb98, label %bb99

bb98:                                             ; preds = %.thread6
  %v2_13810 = sub i32 0, %v1_13810
  br label %bb99

bb99:                                             ; preds = %.thread6, %bb98
  %v1_13814 = phi i32 [ %v1_13810, %.thread6 ], [ %v2_13810, %bb98 ]
  ret i32 %v1_13814

dec_label_pc_13818:                               ; preds = %entry
  %v0_13818 = load i32, i32* @lr, align 4
  %v0_1381c = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_13818)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_137f4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_137d4, { 1, 0, 2 }
  uselistorder i32 %v7_137cc, { 1, 0 }
  uselistorder i32 %v3_137c8, { 1, 0 }
  uselistorder i32 %v1_137b0.v6_137b0.v6_137b8.v6_137c0, { 0, 1, 2, 7, 5, 6, 4, 3 }
  uselistorder i32 %v4_137bc, { 1, 0 }
  uselistorder i32 %v4_137b4, { 1, 0 }
  uselistorder i32 %v4_137ac, { 1, 0 }
  uselistorder i32 %v6_137cc, { 3, 0, 2, 1 }
  uselistorder i32 %v2_1379c, { 1, 0 }
  uselistorder i32 %v1_13790, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_1378c, { 1, 0, 3, 2 }
  uselistorder i32 %v4_1377c, { 1, 0, 3, 2 }
  uselistorder i32 %v0_13788.pr35108, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1375c, { 0, 2, 3, 1, 4, 6, 5 }
  uselistorder i32 %v4_13764, { 1, 0, 2, 3, 5, 4, 6, 7 }
  uselistorder i32 ()* @__aeabi_ldiv0, { 2, 1, 0 }
  uselistorder i32* @lr, { 16, 17, 18, 14, 9, 10, 11, 12, 13, 0, 1, 2, 3, 4, 5, 6, 7, 15, 8 }
  uselistorder i32 -2, { 0, 12, 1, 13, 2, 3, 10, 8, 9, 7, 6, 5, 4, 14, 15, 16, 17, 11 }
  uselistorder i32 8, { 7, 8, 34, 16, 9, 10, 15, 11, 18, 43, 19, 12, 13, 14, 36, 25, 39, 26, 40, 27, 41, 24, 42, 17, 44, 45, 46, 47, 49, 50, 37, 38, 35, 28, 51, 29, 52, 30, 53, 54, 48, 55, 56, 57, 3, 58, 59, 60, 4, 61, 62, 63, 64, 65, 66, 67, 5, 68, 69, 70, 71, 72, 73, 74, 6, 78, 20, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 21, 97, 22, 98, 23, 99, 31, 100, 0, 1, 33, 75, 76, 32, 77, 2 }
  uselistorder i32 3, { 59, 20, 60, 21, 145, 61, 38, 22, 25, 63, 41, 64, 1, 65, 66, 67, 68, 39, 3, 69, 62, 70, 42, 71, 23, 72, 24, 73, 40, 74, 43, 26, 44, 45, 46, 47, 0, 75, 76, 77, 78, 79, 80, 81, 5, 4, 48, 82, 27, 83, 84, 85, 86, 87, 7, 6, 49, 88, 28, 89, 90, 91, 92, 50, 93, 9, 8, 30, 94, 29, 95, 96, 97, 98, 51, 99, 11, 10, 32, 100, 31, 101, 52, 103, 104, 105, 106, 107, 108, 53, 109, 54, 110, 33, 111, 112, 113, 114, 115, 13, 12, 55, 34, 116, 117, 118, 119, 120, 121, 15, 14, 56, 122, 35, 123, 124, 125, 126, 127, 128, 129, 17, 16, 57, 130, 36, 131, 132, 133, 134, 135, 136, 137, 19, 18, 58, 138, 37, 139, 140, 141, 143, 144, 142, 2, 102 }
  uselistorder i32 2, { 6, 7, 8, 9, 10, 11, 12, 13, 14, 133, 15, 16, 17, 18, 19, 77, 78, 60, 61, 79, 150, 80, 1, 0, 81, 136, 82, 137, 83, 138, 144, 75, 135, 74, 139, 73, 140, 72, 141, 71, 142, 70, 143, 69, 149, 145, 146, 147, 148, 66, 84, 151, 20, 21, 152, 153, 154, 85, 22, 23, 24, 25, 26, 155, 27, 28, 134, 156, 86, 157, 29, 87, 240, 89, 158, 91, 159, 90, 160, 88, 92, 161, 30, 31, 93, 162, 67, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 62, 65, 163, 164, 165, 227, 228, 166, 167, 168, 169, 170, 171, 2, 32, 33, 34, 35, 36, 37, 104, 172, 76, 173, 174, 175, 176, 177, 3, 38, 39, 40, 41, 42, 43, 106, 105, 178, 179, 44, 180, 181, 108, 183, 63, 182, 56, 57, 4, 45, 46, 47, 48, 49, 109, 184, 107, 185, 186, 50, 187, 188, 111, 190, 64, 189, 58, 59, 5, 51, 52, 53, 54, 55, 112, 191, 110, 192, 194, 195, 196, 197, 198, 199, 200, 114, 201, 113, 202, 203, 204, 205, 206, 116, 115, 207, 208, 209, 210, 211, 212, 213, 214, 118, 215, 117, 216, 217, 218, 219, 120, 220, 121, 221, 222, 223, 224, 122, 225, 119, 226, 229, 230, 231, 232, 233, 234, 124, 235, 123, 236, 237, 125, 126, 127, 238, 241, 128, 129, 130, 242, 239, 131, 68, 193, 132 }
  uselistorder i32 4, { 5, 6, 44, 7, 8, 45, 330, 331, 135, 9, 10, 70, 53, 254, 244, 38, 165, 166, 167, 139, 75, 140, 141, 142, 159, 160, 168, 169, 137, 138, 143, 144, 72, 145, 146, 147, 73, 148, 74, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 71, 162, 163, 164, 161, 46, 170, 43, 42, 171, 11, 172, 12, 173, 174, 13, 14, 175, 176, 33, 177, 34, 182, 136, 183, 76, 184, 77, 186, 78, 187, 188, 185, 178, 79, 179, 180, 181, 321, 189, 41, 40, 39, 190, 80, 15, 16, 17, 18, 19, 191, 35, 192, 36, 193, 194, 195, 196, 197, 94, 198, 199, 200, 201, 95, 96, 1, 202, 81, 203, 54, 204, 205, 206, 97, 207, 208, 98, 99, 2, 47, 209, 55, 210, 56, 211, 212, 100, 213, 214, 215, 216, 217, 101, 102, 218, 219, 82, 220, 3, 48, 221, 57, 222, 83, 223, 224, 103, 225, 226, 227, 228, 229, 104, 105, 230, 231, 84, 232, 4, 49, 233, 58, 234, 85, 235, 20, 245, 246, 106, 247, 248, 249, 107, 108, 87, 250, 86, 252, 59, 253, 255, 109, 256, 257, 110, 111, 258, 60, 259, 61, 260, 261, 262, 263, 112, 264, 265, 266, 113, 114, 88, 267, 50, 62, 268, 63, 269, 270, 271, 272, 273, 274, 89, 275, 90, 276, 115, 277, 278, 279, 116, 117, 91, 280, 51, 281, 64, 282, 65, 283, 284, 285, 118, 119, 286, 120, 287, 288, 121, 122, 52, 289, 66, 290, 67, 291, 292, 293, 294, 295, 92, 296, 68, 297, 322, 323, 324, 325, 93, 327, 69, 328, 123, 298, 299, 21, 124, 300, 301, 22, 125, 302, 303, 23, 126, 304, 305, 24, 127, 306, 307, 25, 128, 308, 309, 26, 310, 129, 311, 312, 27, 130, 313, 314, 28, 131, 315, 316, 29, 132, 317, 318, 30, 133, 319, 320, 31, 326, 236, 237, 238, 239, 32, 240, 241, 0, 242, 134, 243, 251, 329, 37 }
  uselistorder i32 16, { 5, 6, 7, 8, 9, 25, 10, 11, 0, 12, 13, 42, 72, 31, 73, 32, 43, 70, 71, 74, 76, 77, 27, 26, 69, 78, 14, 15, 24, 66, 16, 79, 17, 44, 75, 33, 80, 45, 81, 46, 82, 47, 83, 48, 84, 49, 85, 50, 51, 86, 52, 53, 87, 88, 55, 89, 90, 91, 92, 93, 1, 54, 94, 95, 96, 57, 97, 98, 99, 100, 101, 2, 56, 102, 58, 103, 104, 105, 18, 106, 19, 107, 67, 20, 59, 60, 108, 109, 3, 35, 110, 34, 111, 61, 112, 113, 114, 21, 115, 22, 116, 68, 23, 62, 63, 117, 118, 4, 37, 119, 36, 120, 28, 122, 123, 124, 125, 64, 126, 127, 128, 129, 130, 131, 132, 29, 133, 134, 135, 136, 138, 137, 139, 140, 141, 142, 143, 144, 145, 30, 146, 147, 148, 149, 150, 152, 151, 153, 154, 155, 156, 157, 158, 65, 159, 160, 161, 39, 162, 38, 41, 163, 40, 121 }
  uselistorder i32 268435455, { 2, 0, 3, 1, 4 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
  uselistorder label %bb99, { 1, 0 }
  uselistorder label %.thread6, { 5, 0, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_13804, { 1, 0 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_137f8, { 1, 0 }
  uselistorder label %bb94, { 1, 0 }
  uselistorder label %bb91, { 1, 0 }
  uselistorder label %bb89, { 1, 0 }
  uselistorder label %dec_label_pc_137a4, { 1, 0 }
  uselistorder label %bb85, { 1, 0 }
  uselistorder label %.thread70, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
}

define i32 @__aeabi_ldiv0() local_unnamed_addr {
entry:
  %v1_13828 = load i32, i32* @r0, align 4
  ret i32 %v1_13828
}

define i32 @function_1382c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1382c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13830 = load i32, i32* @global_var_1bb10.448, align 4
  %v2_13834 = icmp eq i32 %v3_13830, -1
  %v3_13838 = load i32, i32* @r4, align 4
  store i32 %v3_13838, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_1bb10.448 to i32), i32* %r4.global-to-local, align 4
  br i1 %v2_13834, label %bb, label %.preheader

bb:                                               ; preds = %dec_label_pc_1382c
  store i32 %v3_13838, i32* %r4.global-to-local, align 4
  %v9_13840 = load i32, i32* @r0, align 4
  ret i32 %v9_13840

.preheader:                                       ; preds = %dec_label_pc_1382c, %.preheader
  %v0_13848 = phi i32 [ %v3_1384c, %.preheader ], [ %v3_13830, %dec_label_pc_1382c ]
  call void @__pseudo_branch(i32 %v0_13848)
  %v0_1384c = load i32, i32* %r4.global-to-local, align 4
  %v1_1384c = add i32 %v0_1384c, -4
  %v2_1384c = inttoptr i32 %v1_1384c to i32*
  %v3_1384c = load i32, i32* %v2_1384c, align 4
  store i32 %v1_1384c, i32* %r4.global-to-local, align 4
  %v3_13850 = icmp eq i32 %v3_1384c, -1
  br i1 %v3_13850, label %dec_label_pc_13858, label %.preheader

dec_label_pc_13858:                               ; preds = %.preheader
  %v2_13858 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13858, i32* %r4.global-to-local, align 4
  %v8_13858 = load i32, i32* @r0, align 4
  ret i32 %v8_13858

; uselistorder directives
  uselistorder i32 %v3_1384c, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32 -4, { 4, 0, 1, 3, 2 }
  uselistorder i32 -1, { 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 0, 1, 2, 36, 39, 40, 3, 63, 176, 64, 45, 170, 65, 66, 67, 177, 68, 69, 70, 71, 173, 174, 72, 73, 12, 29, 74, 171, 41, 172, 75, 76, 77, 78, 13, 30, 79, 80, 81, 14, 31, 82, 83, 84, 15, 32, 85, 86, 87, 16, 33, 88, 89, 34, 90, 91, 92, 35, 93, 94, 175, 95, 4, 96, 97, 5, 98, 99, 100, 101, 102, 42, 178, 103, 179, 104, 105, 6, 46, 180, 48, 181, 106, 47, 182, 7, 107, 108, 109, 49, 183, 8, 110, 111, 112, 113, 114, 115, 9, 44, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 19, 129, 130, 131, 132, 133, 134, 20, 135, 136, 137, 21, 138, 139, 140, 22, 142, 141, 17, 143, 144, 23, 146, 145, 18, 147, 148, 24, 149, 150, 151, 152, 25, 43, 153, 154, 26, 155, 156, 157, 27, 158, 159, 160, 28, 161, 162, 163, 10, 37, 11, 38, 164, 165, 166, 167, 168, 169, 50, 51, 52 }
  uselistorder i32 1, { 484, 101, 345, 867, 868, 346, 869, 870, 273, 871, 712, 713, 714, 284, 715, 487, 486, 485, 197, 195, 191, 192, 194, 193, 190, 189, 196, 0, 692, 693, 694, 695, 296, 785, 786, 297, 787, 489, 488, 263, 264, 716, 717, 718, 383, 490, 115, 114, 113, 111, 112, 858, 309, 310, 1, 2, 859, 603, 605, 604, 384, 719, 274, 269, 268, 829, 218, 720, 721, 722, 127, 126, 128, 788, 491, 198, 199, 200, 202, 203, 205, 204, 201, 814, 815, 492, 174, 173, 172, 171, 175, 176, 789, 790, 493, 99, 98, 97, 96, 100, 400, 580, 401, 581, 348, 582, 583, 402, 584, 403, 404, 606, 594, 595, 600, 398, 578, 579, 399, 585, 394, 586, 587, 395, 396, 588, 589, 397, 392, 590, 591, 393, 390, 592, 593, 391, 388, 596, 597, 389, 386, 598, 599, 387, 385, 601, 602, 607, 405, 288, 608, 347, 609, 611, 612, 610, 312, 613, 614, 615, 576, 311, 618, 616, 406, 617, 313, 619, 621, 622, 407, 623, 291, 28, 624, 27, 625, 26, 626, 25, 627, 24, 628, 23, 629, 22, 630, 21, 631, 20, 632, 19, 633, 18, 634, 314, 635, 29, 636, 17, 637, 16, 638, 315, 639, 30, 640, 15, 641, 14, 642, 13, 643, 12, 644, 11, 645, 10, 646, 31, 647, 32, 648, 33, 649, 9, 650, 316, 651, 652, 317, 653, 8, 654, 655, 318, 656, 7, 657, 34, 658, 6, 659, 660, 319, 661, 320, 662, 5, 663, 664, 4, 665, 3, 666, 321, 667, 668, 35, 669, 322, 670, 323, 671, 289, 324, 672, 290, 325, 673, 326, 674, 327, 675, 577, 328, 676, 329, 677, 330, 678, 331, 684, 685, 285, 408, 505, 504, 503, 502, 501, 500, 499, 498, 497, 477, 496, 495, 494, 241, 233, 243, 242, 239, 246, 235, 236, 237, 240, 234, 238, 244, 245, 679, 680, 409, 681, 682, 410, 683, 506, 170, 168, 169, 162, 161, 165, 167, 166, 164, 160, 163, 620, 411, 508, 507, 266, 267, 265, 861, 298, 860, 340, 509, 134, 135, 133, 131, 130, 137, 138, 129, 132, 136, 791, 511, 510, 209, 210, 208, 207, 206, 211, 512, 350, 686, 687, 349, 688, 412, 414, 413, 415, 689, 690, 416, 417, 418, 420, 419, 421, 422, 423, 523, 522, 521, 520, 519, 518, 517, 516, 515, 482, 514, 513, 139, 142, 140, 141, 143, 144, 286, 424, 351, 691, 425, 426, 524, 427, 696, 334, 697, 698, 428, 275, 332, 699, 429, 700, 430, 701, 431, 702, 432, 703, 433, 704, 434, 705, 435, 706, 436, 707, 437, 708, 438, 709, 439, 710, 440, 711, 287, 441, 540, 539, 538, 537, 536, 535, 534, 533, 532, 531, 530, 529, 528, 527, 526, 525, 53, 54, 55, 57, 56, 58, 728, 37, 723, 442, 724, 36, 725, 341, 726, 292, 293, 727, 729, 342, 730, 545, 544, 543, 478, 542, 479, 541, 124, 125, 838, 352, 839, 353, 840, 38, 841, 39, 40, 731, 732, 733, 734, 735, 736, 443, 737, 299, 444, 445, 738, 354, 739, 546, 45, 42, 41, 43, 44, 49, 50, 51, 52, 47, 48, 46, 740, 741, 335, 742, 743, 744, 446, 745, 300, 447, 356, 355, 448, 746, 449, 747, 547, 59, 62, 63, 64, 61, 60, 748, 749, 336, 750, 751, 752, 450, 753, 276, 277, 301, 451, 361, 360, 452, 754, 357, 755, 358, 756, 359, 757, 552, 551, 550, 549, 548, 104, 106, 107, 109, 108, 103, 105, 110, 758, 759, 337, 760, 761, 762, 453, 763, 278, 279, 302, 454, 369, 368, 455, 764, 367, 765, 366, 766, 362, 767, 363, 768, 364, 769, 456, 770, 365, 771, 557, 556, 555, 554, 553, 89, 91, 92, 94, 93, 88, 90, 95, 792, 793, 794, 795, 796, 797, 294, 295, 798, 799, 800, 801, 802, 803, 804, 805, 457, 806, 807, 458, 808, 809, 812, 810, 811, 560, 559, 558, 150, 148, 155, 152, 146, 149, 147, 158, 159, 156, 157, 153, 151, 145, 154, 816, 817, 818, 819, 820, 459, 303, 460, 562, 561, 188, 184, 180, 178, 179, 177, 186, 187, 181, 185, 182, 183, 821, 822, 823, 338, 824, 825, 826, 304, 461, 372, 371, 462, 827, 370, 828, 563, 70, 69, 68, 66, 65, 72, 73, 75, 74, 67, 71, 830, 831, 832, 339, 833, 834, 835, 305, 463, 375, 374, 464, 836, 373, 837, 568, 567, 566, 565, 564, 225, 224, 223, 222, 220, 219, 228, 229, 231, 230, 221, 227, 226, 842, 843, 844, 465, 845, 846, 847, 848, 849, 850, 466, 851, 306, 467, 377, 376, 468, 852, 569, 79, 78, 86, 77, 76, 83, 84, 85, 87, 82, 80, 81, 853, 343, 281, 854, 469, 856, 855, 280, 470, 379, 378, 480, 570, 116, 117, 119, 118, 862, 344, 283, 863, 471, 865, 864, 282, 472, 381, 380, 481, 571, 120, 121, 123, 122, 857, 382, 473, 572, 248, 247, 253, 251, 254, 250, 252, 255, 249, 866, 102, 772, 232, 773, 474, 776, 475, 777, 778, 774, 775, 779, 780, 781, 782, 307, 783, 308, 256, 260, 262, 257, 258, 259, 261, 784, 333, 476, 573, 214, 215, 213, 212, 216, 813, 217, 574, 575, 272, 271, 270, 483 }
  uselistorder label %.preheader, { 1, 0 }
}

define i32 @function_13860() local_unnamed_addr {
dec_label_pc_13860:
  %v5_13864 = load i32, i32* @r0, align 4
  ret i32 %v5_13864

; uselistorder directives
  uselistorder i32* @r0, { 5, 6, 7, 13, 79, 14, 80, 15, 81, 17, 16, 8, 49, 0, 9, 50, 51, 2, 22, 23, 24, 27, 28, 29, 30, 31, 3, 25, 26, 32, 33, 34, 35, 36, 12, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 52, 53, 54, 55, 56, 57, 58, 1, 59, 60, 61, 62, 63, 64, 65, 76, 77, 4, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 11, 10, 18, 19, 20, 21 }
}

define i32 @function_13868() local_unnamed_addr {
entry:
  %v3_1386c = load i32, i32* @r4, align 4
  %v0_13874 = call i32 @function_8dac()
  call void @__pseudo_branch(i32 %v3_1386c)
  ret i32 %v0_13874

; uselistorder directives
  uselistorder void (i32)* @__pseudo_branch, { 1, 6, 8, 9, 10, 2, 3, 4, 0, 5, 7 }
  uselistorder i32 0, { 0, 1172, 71, 1173, 1174, 269, 268, 513, 59, 60, 61, 62, 515, 514, 33, 32, 72, 1175, 1176, 1177, 1178, 1180, 1179, 1, 1181, 1182, 271, 270, 516, 63, 64, 65, 66, 518, 517, 35, 34, 31, 40, 1183, 519, 2, 1184, 1185, 67, 1186, 1187, 1188, 1189, 1190, 102, 520, 523, 521, 522, 1191, 524, 85, 103, 972, 973, 68, 974, 975, 976, 526, 3, 274, 104, 105, 308, 36, 106, 4, 6, 5, 314, 58, 977, 978, 1162, 1161, 1163, 1164, 29, 107, 1165, 110, 109, 108, 309, 310, 311, 112, 111, 315, 979, 980, 113, 1131, 1132, 86, 114, 981, 115, 564, 116, 1106, 1107, 117, 1077, 1078, 570, 565, 73, 566, 539, 118, 119, 540, 541, 542, 543, 567, 554, 537, 527, 538, 560, 561, 544, 545, 546, 528, 547, 548, 529, 549, 550, 530, 551, 552, 531, 553, 555, 532, 556, 563, 533, 557, 562, 558, 37, 272, 273, 559, 525, 568, 316, 569, 276, 571, 317, 572, 575, 576, 130, 275, 573, 574, 318, 319, 577, 578, 579, 580, 534, 46, 320, 581, 582, 584, 585, 586, 587, 588, 589, 590, 321, 591, 592, 593, 594, 595, 69, 53, 596, 597, 598, 599, 600, 601, 602, 603, 131, 604, 605, 606, 607, 608, 132, 609, 610, 611, 612, 613, 133, 614, 615, 134, 616, 617, 135, 618, 619, 620, 136, 621, 622, 623, 624, 137, 625, 626, 627, 138, 628, 74, 75, 629, 630, 631, 139, 632, 633, 634, 635, 140, 636, 637, 638, 639, 120, 640, 641, 642, 141, 643, 644, 645, 646, 142, 647, 648, 649, 650, 651, 143, 652, 653, 654, 655, 144, 656, 657, 658, 659, 145, 660, 661, 662, 663, 146, 664, 665, 666, 667, 147, 668, 669, 670, 671, 672, 148, 673, 674, 675, 676, 149, 677, 678, 679, 680, 150, 681, 682, 683, 684, 151, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 121, 702, 703, 704, 705, 152, 706, 707, 708, 709, 153, 710, 54, 55, 711, 712, 154, 713, 122, 155, 714, 715, 156, 716, 76, 77, 717, 718, 719, 157, 720, 721, 722, 723, 158, 724, 725, 726, 727, 159, 728, 729, 730, 731, 123, 732, 733, 734, 735, 124, 736, 737, 738, 739, 160, 740, 741, 742, 743, 744, 161, 745, 746, 747, 748, 749, 750, 751, 162, 752, 753, 754, 755, 163, 756, 757, 758, 759, 760, 761, 164, 762, 763, 764, 765, 125, 766, 767, 768, 126, 769, 770, 771, 772, 165, 773, 774, 775, 776, 777, 778, 166, 779, 780, 781, 782, 167, 783, 784, 785, 786, 168, 787, 56, 57, 788, 789, 790, 791, 792, 169, 793, 794, 795, 796, 170, 797, 798, 799, 800, 801, 802, 803, 804, 805, 127, 806, 807, 808, 809, 171, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 172, 823, 824, 825, 826, 173, 827, 828, 174, 829, 830, 175, 831, 832, 833, 176, 834, 835, 836, 177, 837, 838, 839, 178, 840, 841, 179, 842, 843, 844, 180, 845, 846, 181, 847, 848, 182, 849, 850, 851, 852, 183, 853, 854, 184, 855, 856, 185, 857, 858, 186, 859, 860, 187, 861, 862, 188, 863, 864, 865, 189, 866, 128, 190, 867, 868, 869, 191, 870, 70, 78, 871, 872, 129, 873, 874, 192, 875, 876, 193, 877, 878, 879, 880, 194, 881, 882, 883, 885, 884, 195, 886, 887, 888, 889, 890, 196, 891, 892, 197, 893, 894, 198, 895, 896, 897, 898, 199, 899, 900, 200, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 322, 927, 323, 928, 931, 932, 933, 934, 935, 201, 929, 202, 930, 7, 203, 583, 1079, 1080, 936, 937, 204, 938, 939, 940, 941, 942, 943, 944, 324, 47, 325, 945, 8, 946, 280, 947, 948, 326, 327, 949, 950, 951, 312, 208, 207, 535, 536, 313, 206, 205, 277, 279, 328, 952, 209, 210, 953, 954, 955, 956, 957, 958, 959, 960, 329, 961, 330, 962, 331, 963, 332, 964, 333, 965, 966, 334, 967, 968, 969, 281, 970, 971, 211, 212, 335, 982, 983, 984, 985, 986, 81, 987, 989, 988, 79, 80, 213, 278, 336, 990, 282, 283, 284, 82, 214, 41, 215, 992, 993, 90, 87, 88, 89, 43, 991, 994, 995, 996, 997, 998, 999, 9, 10, 11, 12, 13, 1000, 1001, 216, 337, 1002, 338, 1003, 339, 1004, 340, 1005, 341, 1006, 342, 1007, 343, 1008, 285, 1009, 217, 218, 219, 1011, 1012, 1010, 1014, 1015, 1013, 14, 15, 16, 17, 18, 1016, 220, 1017, 1018, 287, 1019, 344, 1020, 345, 1021, 346, 1022, 347, 1023, 348, 1024, 349, 1025, 286, 1026, 350, 1027, 222, 221, 223, 1029, 1030, 1028, 1031, 1032, 38, 351, 1038, 1034, 1035, 1036, 1037, 48, 49, 19, 20, 21, 22, 23, 1033, 224, 83, 1039, 1040, 292, 1041, 291, 1042, 290, 1043, 289, 1044, 288, 1045, 352, 1046, 353, 1047, 226, 225, 227, 1049, 1050, 1048, 1051, 1052, 39, 354, 1058, 1054, 1055, 1056, 1057, 50, 51, 24, 25, 26, 27, 28, 1053, 228, 84, 1059, 1060, 294, 1061, 293, 1062, 355, 1063, 1081, 94, 93, 91, 92, 1082, 1083, 42, 1084, 1085, 1086, 1087, 1088, 229, 1089, 1090, 356, 1091, 1092, 1093, 1094, 233, 230, 231, 232, 1095, 1096, 1097, 1098, 357, 1099, 1100, 297, 1102, 296, 1103, 295, 1104, 358, 1105, 1108, 1109, 97, 95, 96, 44, 1110, 1111, 1112, 1113, 234, 1114, 1115, 359, 298, 1116, 360, 1117, 235, 238, 237, 236, 1120, 1121, 1119, 1118, 361, 1123, 1122, 1124, 239, 1125, 1126, 301, 1127, 300, 1128, 299, 1129, 362, 1130, 240, 243, 242, 241, 1135, 1136, 1134, 1133, 363, 1138, 1137, 1139, 1140, 244, 304, 1141, 303, 1142, 302, 1143, 364, 1144, 1145, 1146, 1147, 1148, 101, 98, 99, 100, 45, 1149, 1150, 1151, 245, 1152, 246, 1153, 1154, 307, 1155, 306, 1156, 305, 1157, 365, 1158, 251, 367, 249, 250, 247, 248, 1159, 253, 252, 368, 369, 254, 366, 259, 371, 257, 258, 255, 256, 1166, 261, 260, 262, 370, 1160, 1167, 263, 1168, 1064, 264, 1065, 1066, 265, 1067, 1068, 266, 372, 1069, 1070, 30, 1071, 1072, 1073, 1074, 1075, 373, 1076, 267, 1101, 1171, 1169, 52, 1170, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204 }
  uselistorder i32* @r4, { 21, 410, 106, 107, 108, 109, 47, 48, 319, 320, 321, 281, 282, 283, 49, 50, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 51, 52, 35, 36, 34, 37, 38, 39, 40, 41, 42, 43, 44, 53, 54, 45, 46, 55, 56, 57, 58, 61, 62, 63, 64, 65, 0, 66, 59, 60, 394, 395, 396, 397, 284, 285, 286, 287, 288, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 2, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 20, 99, 100, 101, 102, 103, 104, 105, 110, 111, 112, 1, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 3, 126, 4, 127, 5, 128, 6, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 7, 149, 8, 150, 9, 151, 10, 152, 153, 154, 11, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 12, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 13, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 14, 338, 15, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 16, 354, 17, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 18, 370, 19, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 398, 399, 400, 401, 402, 406, 407, 408, 392, 393, 403, 404, 405, 274, 272, 273, 275, 276, 277, 278, 279, 280, 409, 411 }
}

declare i8* @strcpy(i8*, i8*) local_unnamed_addr

declare i32 @ioctl(i32, i32, ...) local_unnamed_addr

declare i32 @recv(i32, i32*, i32, i32) local_unnamed_addr

declare i32 @connect(i32, %sockaddr*, i32) local_unnamed_addr

declare i32 @sigemptyset(%_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32* @memmove(i32*, i32*, i32) local_unnamed_addr

declare i32 @getpid() local_unnamed_addr

declare i32 @prctl(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32* @memcpy(i32*, i32*, i32) local_unnamed_addr

declare i32 @readlink(i8*, i8*, i32) local_unnamed_addr

declare i32* @malloc(i32) local_unnamed_addr

declare i32 @sleep(i32) local_unnamed_addr

declare i32 @recvfrom(i32, i32*, i32, i32, %sockaddr*, i32*) local_unnamed_addr

declare i32 @socket(i32, i32, i32) local_unnamed_addr

declare i32 @select(i32, %_TYPEDEF_fd_set*, %_TYPEDEF_fd_set*, %_TYPEDEF_fd_set*, %timeval*) local_unnamed_addr

declare %dirent* @readdir(%__dirstream*) local_unnamed_addr

declare i32 @sigaddset(%_TYPEDEF_sigset_t*, i32) local_unnamed_addr

declare i32 @send(i32, i32*, i32, i32) local_unnamed_addr

declare void @abort() local_unnamed_addr

declare i32* @calloc(i32, i32) local_unnamed_addr

declare i32 @write(i32, i32*, i32) local_unnamed_addr

declare i32 @kill(i32, i32) local_unnamed_addr

declare i32 @bind(i32, %sockaddr*, i32) local_unnamed_addr

declare i32 @inet_addr(i8*) local_unnamed_addr

declare i32 @setsockopt(i32, i32, i32, i32*, i32) local_unnamed_addr

declare void (i32)* @signal(i32, void (i32)*) local_unnamed_addr

declare i32 @read(i32, i32*, i32) local_unnamed_addr

declare i32 @unlink(i8*) local_unnamed_addr

declare i32 @sendto(i32, i32*, i32, i32, %sockaddr*, i32) local_unnamed_addr

declare i32* @realloc(i32*, i32) local_unnamed_addr

declare i32 @listen(i32, i32) local_unnamed_addr

declare i32 @fork() local_unnamed_addr

declare i32 @__uClibc_main() local_unnamed_addr

declare i32* @memset(i32*, i32, i32) local_unnamed_addr

declare i32 @getppid() local_unnamed_addr

declare i32 @time(i32*) local_unnamed_addr

declare %__dirstream* @opendir(i8*) local_unnamed_addr

declare i32 @getsockopt(i32, i32, i32, i32*, i32*) local_unnamed_addr

declare i32* @__errno_location() local_unnamed_addr

declare void @exit(i32) local_unnamed_addr

declare i32 @atoi(i8*) local_unnamed_addr

declare i32 @open(i8*, i32, ...) local_unnamed_addr

declare i32 @clock() local_unnamed_addr

declare i32 @setsid() local_unnamed_addr

declare i32 @closedir(%__dirstream*) local_unnamed_addr

declare i32 @fcntl(i32, i32, ...) local_unnamed_addr

declare i32 @close(i32) local_unnamed_addr

declare void @free(i32*) local_unnamed_addr

declare i32 @sigprocmask(i32, %_TYPEDEF_sigset_t*, %_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @getsockname(i32, %sockaddr*, i32*) local_unnamed_addr

define i32 @__data_start(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_1bc98 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1bc98, label %bb, label %bb1

bb:                                               ; preds = %entry
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  ret i32 %arg1

; uselistorder directives
  uselistorder i1 false, { 0, 87, 8, 166, 148, 170, 167, 1, 9, 2, 10, 3, 11, 4, 12, 5, 13, 14, 15, 165, 168, 16, 17, 18, 19, 20, 149, 150, 151, 152, 153, 147, 21, 146, 145, 144, 154, 143, 23, 22, 142, 26, 24, 25, 141, 140, 27, 28, 139, 138, 6, 7, 137, 29, 136, 30, 135, 31, 32, 134, 133, 132, 33, 34, 131, 35, 130, 129, 128, 127, 126, 125, 124, 36, 37, 123, 122, 121, 38, 39, 40, 41, 120, 42, 119, 43, 44, 118, 117, 45, 116, 115, 82, 114, 83, 113, 46, 112, 47, 48, 111, 49, 50, 84, 110, 109, 51, 52, 108, 53, 85, 107, 54, 55, 106, 56, 105, 57, 58, 86, 59, 60, 104, 103, 102, 61, 62, 101, 100, 63, 64, 99, 65, 98, 66, 67, 155, 156, 157, 158, 68, 69, 159, 160, 70, 97, 71, 96, 95, 72, 73, 94, 93, 92, 74, 75, 91, 76, 77, 90, 89, 78, 79, 88, 80, 81, 169, 161, 162, 164, 163, 171 }
  uselistorder i1* @cpsr_z, { 5, 1, 2, 0, 3, 4 }
  uselistorder label %bb1, { 1, 0 }
}

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8 @__decompiler_undefined_function_1() local_unnamed_addr

declare %sockaddr* @__decompiler_undefined_function_2() local_unnamed_addr

declare i8* @__decompiler_undefined_function_3() local_unnamed_addr

declare %timeval* @__decompiler_undefined_function_4() local_unnamed_addr

declare %_TYPEDEF_fd_set* @__decompiler_undefined_function_5() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
