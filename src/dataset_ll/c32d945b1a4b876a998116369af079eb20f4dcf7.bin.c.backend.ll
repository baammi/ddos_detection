source_filename = "test"
target datalayout = "E-p:32:32:32-f80:32:32"

%0 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }

@r1 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r9 = internal unnamed_addr global i32 0
@r11 = internal unnamed_addr global i32 0
@r14 = internal unnamed_addr global i32 0
@r21 = internal unnamed_addr global i32 0
@r22 = internal unnamed_addr global i32 0
@r23 = internal unnamed_addr global i32 0
@r24 = internal unnamed_addr global i32 0
@r25 = internal unnamed_addr global i32 0
@r26 = internal unnamed_addr global i32 0
@r27 = internal unnamed_addr global i32 0
@r28 = internal unnamed_addr global i32 0
@r29 = internal unnamed_addr global i32 0
@r30 = internal unnamed_addr global i32 0
@r31 = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@global_var_100000a4.1 = constant i32 1208003765
@global_var_1001b38c.3 = global i32 0
@global_var_1001b39c.4 = local_unnamed_addr global i32* @global_var_1001b38c.3
@global_var_1001b570.6 = global i32 0
@global_var_10000314.7 = constant i32 1207992797
@global_var_10000320.8 = constant [3 x i8] c"8`\00"
@global_var_1001b4fc.10 = local_unnamed_addr global i32 0
@global_var_10000588.11 = constant [3 x i8] c";{\00"
@global_var_100005b4.12 = constant i32 939524096
@global_var_10000bdc.14 = constant i32 939524096
@global_var_10000f14.15 = constant i32 939524096
@global_var_1001b500.16 = local_unnamed_addr global i32 0
@global_var_10001aa0.17 = constant [3 x i8] c"8~\00"
@global_var_10001ab0.18 = constant [3 x i8] c"8~\00"
@global_var_10001ac0.19 = constant [3 x i8] c"8~\00"
@global_var_100026fc.20 = constant [3 x i8] c"8`\00"
@global_var_100027ec.21 = constant [3 x i8] c"9!\00"
@global_var_10002e78.22 = constant [3 x i8] c"8`\00"
@global_var_100034c0.23 = constant [3 x i8] c"8`\00"
@global_var_10004174.24 = constant i32 939524104
@global_var_100041a4.25 = constant i32 939524096
@global_var_1000459c.26 = constant [3 x i8] c"8`\00"
@global_var_100045a4.27 = constant [3 x i8] c"8`\00"
@global_var_100045ac.28 = constant [3 x i8] c"8`\00"
@global_var_100046ac.29 = constant i32 956301312
@global_var_1000ade4.30 = constant i32 788529152
@global_var_100049f8.31 = constant [3 x i8] c"8`\00"
@global_var_10004a00.32 = constant [3 x i8] c"8`\00"
@global_var_10004a08.33 = constant [3 x i8] c"8`\00"
@global_var_10004a10.34 = constant [3 x i8] c"8`\00"
@global_var_10004a7c.35 = constant [3 x i8] c"8`\00"
@global_var_10004a84.36 = constant [3 x i8] c"8`\00"
@global_var_10004a8c.37 = constant [3 x i8] c"8`\00"
@global_var_1001b50c.38 = local_unnamed_addr global i32 0
@global_var_10004ba8.39 = constant i32 939524096
@global_var_1001b508.40 = local_unnamed_addr global i32 0
@global_var_1001b504.41 = local_unnamed_addr global i32 0
@global_var_10004bcc.42 = constant [3 x i8] c"8`\00"
@global_var_10004c4c.43 = constant [3 x i8] c"8`\00"
@global_var_10004c54.44 = constant [3 x i8] c"8`\00"
@global_var_10004cb8.45 = constant i32 1207975085
@global_var_10004ccc.46 = constant [3 x i8] c"8`\00"
@global_var_10004d70.47 = constant [3 x i8] c"8`\00"
@global_var_10004e00.48 = constant [3 x i8] c"8`\00"
@global_var_10004e08.49 = constant [3 x i8] c"8`\00"
@global_var_10004e78.50 = constant [3 x i8] c"8`\00"
@global_var_10004e80.51 = constant i32 1207973417
@global_var_10004f30.52 = constant [3 x i8] c"8`\00"
@global_var_10005004.53 = constant [3 x i8] c"8`\00"
@global_var_1000503c.54 = constant [3 x i8] c"8`\00"
@global_var_10005060.55 = constant [3 x i8] c"8`\00"
@global_var_1001b4e0.56 = local_unnamed_addr global i32 268468060
@global_var_1001b5d8.57 = global i32 0
@global_var_1000ade8.58 = constant [13 x i8] c"174.138.8.34\00"
@global_var_1001b5dc.59 = local_unnamed_addr global i32 0
@global_var_1001b5da.60 = local_unnamed_addr global i32 0
@global_var_1001b510.61 = local_unnamed_addr global i32 0
@global_var_10005148.62 = constant [3 x i8] c"8`\00"
@global_var_100051a4.63 = constant [3 x i8] c"8`\00"
@global_var_100051dc.64 = constant [3 x i8] c"8`\00"
@global_var_100051e4.65 = constant [3 x i8] c"8`\00"
@global_var_100052a4.66 = constant i32 1207971001
@global_var_100052f8.67 = constant [3 x i8] c";a\00"
@global_var_1000535c.68 = constant i32 1207961037
@global_var_100053b0.69 = constant [3 x i8] c"8`\00"
@global_var_1000adf8.70 = constant i32 167772160
@global_var_100053e8.71 = constant [3 x i8] c"8`\00"
@global_var_100053fc.72 = constant i32 1207971941
@global_var_100054a0.73 = constant [3 x i8] c"8`\00"
@global_var_100054a8.74 = constant [3 x i8] c"8`\00"
@global_var_100054b0.75 = constant [3 x i8] c"8`\00"
@global_var_100054b8.76 = constant i32 989855744
@global_var_100054c8.77 = constant [3 x i8] c";a\00"
@global_var_1001b4d8.78 = local_unnamed_addr global i32 -1
@global_var_1001b4dc.79 = local_unnamed_addr global i32 -1
@global_var_10005654.81 = constant i32 939589631
@global_var_10005738.82 = constant i32 939589631
@global_var_10005818.83 = constant i32 939589631
@global_var_10005824.84 = constant i32 1006685388
@global_var_1000adfc.85 = constant i32 1
@global_var_100058dc.86 = constant i32 939589631
@global_var_1001b594.87 = local_unnamed_addr global i32 0
@global_var_1001b588.88 = local_unnamed_addr global i32 0
@global_var_1001b590.89 = local_unnamed_addr global i32 0
@global_var_1001b58c.90 = local_unnamed_addr global i32 0
@global_var_1001b524.91 = local_unnamed_addr global i32 0
@global_var_1001b518.92 = local_unnamed_addr global i32 0
@global_var_1001b51c.93 = local_unnamed_addr global i32 0
@global_var_1001b530.95 = local_unnamed_addr global i32 0
@global_var_10005f88.96 = constant [3 x i8] c"8`\00"
@global_var_10005fa4.97 = constant i32 939524096
@global_var_1001b528.98 = local_unnamed_addr global i32 0
@global_var_1001b52c.99 = local_unnamed_addr global i32 0
@global_var_1001b598.100 = global i32 0
@global_var_1001b5ac.101 = global i32 0
@global_var_1000ae8c.102 = constant i32 0
@global_var_1001b59a.103 = local_unnamed_addr global i32 0
@global_var_1001b5b8.104 = local_unnamed_addr global i32 0
@global_var_1001b5a0.105 = local_unnamed_addr global i32 0
@global_var_1001b5a1.106 = local_unnamed_addr global i32 0
@global_var_1001b59c.107 = local_unnamed_addr global i32 0
@global_var_1000ae88.108 = constant [5 x i8] c"&;; \00"
@global_var_1000ae20.110 = constant [8 x i8] c"0125!8 \00"
@global_var_1001b5ba.111 = local_unnamed_addr global i32 0
@global_var_1000ae04.112 = constant [5 x i8] c"5:?;\00"
@global_var_1000ae0c.113 = constant [9 x i8] c"<!: acam\00"
@global_var_1000ae18.114 = constant [7 x i8] c" 18:1 \00"
@global_var_1000ae28.115 = constant [9 x i8] c"$5''#;&0\00"
@global_var_1000ae34.116 = constant [6 x i8] c"509=:\00"
@global_var_1000ae5c.117 = constant [6 x i8] c"efg`a\00"
@global_var_1000ae3c.118 = constant [6 x i8] c"\22=.,\22\00"
@global_var_1000ae44.119 = constant [8 x i8] c"'!$$;& \00"
@global_var_1000ae4c.120 = constant i32 1663122969
@global_var_1000ae64.121 = constant [5 x i8] c"!'1&\00"
@global_var_1000ae6c.122 = constant i32 455883832
@global_var_1000ae78.123 = constant i32 124138003
@global_var_1001b5a4.124 = local_unnamed_addr global i32 0
@global_var_1001b5a8.125 = local_unnamed_addr global i32 0
@global_var_1001b5a2.126 = local_unnamed_addr global i32 0
@global_var_1001b5bc.127 = local_unnamed_addr global i32 0
@global_var_1001b5b0.128 = local_unnamed_addr global i32 0
@global_var_1000687c.130 = constant [3 x i8] c"8`\00"
@global_var_10006884.131 = constant i32 939524096
@global_var_1000ae90.132 = constant i32 -17804
@global_var_1001b5e8.152 = global i32 0
@global_var_1001b4e4.153 = local_unnamed_addr global i32 -555811921
@global_var_1000aecc.154 = constant i32 1475215360
@global_var_100077dc.155 = constant [3 x i8] c"8`\00"
@global_var_1001b5f0.156 = local_unnamed_addr global i32 0
@global_var_1001b5f4.157 = local_unnamed_addr global i32 0
@global_var_1000aed0.158 = constant i32 1407844352
@global_var_10007800.159 = constant [3 x i8] c"8`\00"
@global_var_1001b5f8.160 = local_unnamed_addr global i32 0
@global_var_1001b5fc.161 = local_unnamed_addr global i32 0
@global_var_1000b038.162 = constant i32 271921200
@global_var_10007824.163 = constant i32 939524125
@global_var_1001b604.164 = local_unnamed_addr global i32 0
@global_var_1001b600.165 = local_unnamed_addr global i32 0
@global_var_1000aed4.166 = constant [7 x i8] c"'<188T\00"
@global_var_1000784c.167 = constant [3 x i8] c"8`\00"
@global_var_1001b608.168 = local_unnamed_addr global i32 0
@global_var_1001b60c.169 = local_unnamed_addr global i32 0
@global_var_1000aedc.170 = constant [8 x i8] c"1:5681T\00"
@global_var_10007874.171 = constant [3 x i8] c"8`\00"
@global_var_1001b610.172 = local_unnamed_addr global i32 0
@global_var_1001b614.173 = local_unnamed_addr global i32 0
@global_var_1000aee4.174 = constant [8 x i8] c"'-' 19T\00"
@global_var_10007898.175 = constant [3 x i8] c"8`\00"
@global_var_1001b618.176 = local_unnamed_addr global i32 0
@global_var_1001b61c.177 = local_unnamed_addr global i32 0
@global_var_1000aeec.178 = constant [4 x i8] c"'<T\00"
@global_var_100078bc.179 = constant i32 939524099
@global_var_1001b624.180 = local_unnamed_addr global i32 0
@global_var_1001b620.181 = local_unnamed_addr global i32 0
@global_var_1000aef0.182 = constant i32 2067152186
@global_var_100078e4.183 = constant [3 x i8] c"8`\00"
@global_var_1001b628.184 = local_unnamed_addr global i32 0
@global_var_1001b62c.185 = local_unnamed_addr global i32 0
@global_var_1000af04.186 = constant i32 505087772
@global_var_10007908.187 = constant i32 939524120
@global_var_1001b634.188 = local_unnamed_addr global i32 0
@global_var_1001b630.189 = local_unnamed_addr global i32 0
@global_var_1000af20.190 = constant [10 x i8] c":7;&&17 T\00"
@global_var_10007930.191 = constant i32 939524105
@global_var_1001b63c.192 = local_unnamed_addr global i32 0
@global_var_1001b638.193 = local_unnamed_addr global i32 0
@global_var_1000af2c.194 = constant [17 x i8] c"{6=:{6!'-6;,t$'T\00"
@global_var_10007958.195 = constant [3 x i8] c"8`\00"
@global_var_1001b640.196 = local_unnamed_addr global i32 0
@global_var_1001b644.197 = local_unnamed_addr global i32 0
@global_var_1000af40.198 = constant [23 x i8] c"{6=:{6!'-6;,t?=88tymtT\00"
@global_var_1000797c.199 = constant i32 939524118
@global_var_1001b64c.200 = local_unnamed_addr global i32 0
@global_var_1001b648.201 = local_unnamed_addr global i32 0
@global_var_1000af58.202 = constant [8 x i8] c"{$&;7{T\00"
@global_var_100079a4.203 = constant [3 x i8] c"8`\00"
@global_var_1001b650.204 = local_unnamed_addr global i32 0
@global_var_1001b654.205 = local_unnamed_addr global i32 0
@global_var_1000af60.206 = constant [6 x i8] c"{1,1T\00"
@global_var_100079c8.207 = constant [3 x i8] c"8`\00"
@global_var_1001b658.208 = local_unnamed_addr global i32 0
@global_var_1001b65c.209 = local_unnamed_addr global i32 0
@global_var_1000af68.210 = constant [5 x i8] c"{20T\00"
@global_var_100079ec.211 = constant i32 939524100
@global_var_1001b664.212 = local_unnamed_addr global i32 0
@global_var_1001b660.213 = local_unnamed_addr global i32 0
@global_var_1000af70.214 = constant [7 x i8] c"{95$'T\00"
@global_var_10007a14.215 = constant [3 x i8] c"8`\00"
@global_var_1001b668.216 = local_unnamed_addr global i32 0
@global_var_1001b66c.217 = local_unnamed_addr global i32 0
@global_var_1000af78.218 = constant [15 x i8] c"{$&;7{:1 { 7$T\00"
@global_var_10007a38.219 = constant [3 x i8] c"8`\00"
@global_var_1001b670.220 = local_unnamed_addr global i32 0
@global_var_1001b674.221 = local_unnamed_addr global i32 0
@global_var_1000af88.222 = constant [9 x i8] c"{' 5 !'T\00"
@global_var_10007a5c.223 = constant [3 x i8] c"8`\00"
@global_var_1001b6d0.224 = local_unnamed_addr global i32 0
@global_var_1001b6d4.225 = local_unnamed_addr global i32 0
@global_var_1000af94.226 = constant [8 x i8] c"z5:=91T\00"
@global_var_10007a80.227 = constant [3 x i8] c"8`\00"
@global_var_1001b6d8.228 = local_unnamed_addr global i32 0
@global_var_1001b6dc.229 = local_unnamed_addr global i32 0
@global_var_1000af9c.230 = constant [17 x i8] c"{$&;7{:1 {&;! 1T\00"
@global_var_10007aa4.231 = constant [3 x i8] c"8`\00"
@global_var_1001b678.232 = local_unnamed_addr global i32 0
@global_var_1001b67c.233 = local_unnamed_addr global i32 0
@global_var_1000afb0.234 = constant [9 x i8] c"5''#;&0T\00"
@global_var_10007ac8.235 = constant [3 x i8] c"8`\00"
@global_var_1001b680.236 = local_unnamed_addr global i32 0
@global_var_1001b684.237 = local_unnamed_addr global i32 0
@global_var_1000b058.238 = constant i32 473889
@global_var_10007aec.239 = constant i32 939524117
@global_var_1001b68c.240 = local_unnamed_addr global i32 0
@global_var_1001b688.241 = local_unnamed_addr global i32 0
@global_var_1000afbc.242 = constant [18 x i8] c"{1 7{&1';8\22z7;:2T\00"
@global_var_10007b14.243 = constant i32 939524113
@global_var_1001b694.244 = local_unnamed_addr global i32 0
@global_var_1001b690.245 = local_unnamed_addr global i32 0
@global_var_1000afd0.246 = constant [13 x i8] c":591'1&\221&tT\00"
@global_var_10007b3c.247 = constant i32 939524108
@global_var_1001b69c.248 = local_unnamed_addr global i32 0
@global_var_1001b698.249 = local_unnamed_addr global i32 0
@global_var_1000afe0.250 = constant [15 x i8] c"{01\22{#5 7<0;3T\00"
@global_var_10007b64.251 = constant [3 x i8] c"8`\00"
@global_var_1001b6a0.252 = local_unnamed_addr global i32 0
@global_var_1001b6a4.253 = local_unnamed_addr global i32 0
@global_var_1000aff0.254 = constant [20 x i8] c"{01\22{9='7{#5 7<0;3T\00"
@global_var_10007b88.255 = constant [3 x i8] c"8`\00"
@global_var_1001b6a8.256 = local_unnamed_addr global i32 0
@global_var_1001b6ac.257 = local_unnamed_addr global i32 0
@global_var_1000b004.258 = constant [9 x i8] c"$662*7!E\00"
@global_var_10007bac.259 = constant [3 x i8] c"8`\00"
@global_var_1001b6b0.260 = local_unnamed_addr global i32 0
@global_var_1001b6b4.261 = local_unnamed_addr global i32 0
@global_var_1000b010.262 = constant [6 x i8] c";3=:T\00"
@global_var_10007bd0.263 = constant [3 x i8] c"8`\00"
@global_var_1001b6b8.264 = local_unnamed_addr global i32 0
@global_var_1001b6bc.265 = local_unnamed_addr global i32 0
@global_var_1000b018.266 = constant [7 x i8] c"1: 1&T\00"
@global_var_10007bf4.267 = constant [3 x i8] c"8`\00"
@global_var_1001b6c0.268 = local_unnamed_addr global i32 0
@global_var_1001b6c4.269 = local_unnamed_addr global i32 0
@global_var_1000b020.270 = constant [24 x i8] c"e365`70;9ag:<$ef1=d?2>T\00"
@global_var_10007c18.271 = constant i32 939524119
@global_var_1001b6cc.272 = local_unnamed_addr global i32 0
@global_var_1001b6c8.273 = local_unnamed_addr global i32 0
@global_var_10007f80.274 = constant i32 939524096
@global_var_100082c8.275 = constant i32 1207959564
@global_var_100087a4.276 = constant i32 939524118
@global_var_10009e64.277 = constant [3 x i8] c"8`\00"
@global_var_100088fc.278 = constant i32 939524105
@global_var_10008918.279 = constant i32 939589631
@global_var_10008a40.280 = constant i32 1207959797
@global_var_10008a44.281 = constant i32 939524108
@global_var_1001b554.282 = global i32 0
@global_var_10009158.283 = constant i32 939524118
@global_var_100091e0.284 = constant i32 939524118
@global_var_1001b6e0.285 = global i32 0
@global_var_1001b5c0.286 = global i32 0
@global_var_1001b4e8 = external global i32
@global_var_1000b17c.288 = constant i32 33554944
@global_var_1001b544.289 = local_unnamed_addr global i32 0
@global_var_1001b760.290 = global i32 0
@global_var_1000943c.291 = constant i32 939524108
@global_var_10009490.292 = constant i32 939524108
@global_var_10009544.293 = constant [3 x i8] c"8`\00"
@global_var_100095f0.294 = constant [3 x i8] c"8`\00"
@global_var_10009918.295 = constant i32 1207959640
@global_var_10009954.296 = constant i32 1207959580
@global_var_1001b4f4.297 = local_unnamed_addr global i32* @global_var_1000b17c.288
@global_var_10009b48.298 = constant i32 939524130
@global_var_1001b4a8.299 = global i32 0
@global_var_1001b538.300 = local_unnamed_addr global i32 0
@global_var_10009bdc.301 = constant i32 1207960053
@global_var_10009be0.302 = constant [3 x i8] c"= \00"
@global_var_1001b380.303 = global i32 -1
@global_var_1001b548.304 = local_unnamed_addr global i32 0
@global_var_1001b54c.305 = local_unnamed_addr global i32 0
@global_var_1000b070.306 = constant [10 x i8] c"/dev/null\00"
@global_var_1001b550.307 = local_unnamed_addr global i32 0
@global_var_1001b53c.309 = local_unnamed_addr global i32 0
@global_var_1001b540.310 = local_unnamed_addr global i32 0
@global_var_1000a17c.311 = constant i32 939524096
@global_var_1000a408.313 = constant i32 939524118
@global_var_1000a604.314 = constant i32 939589631
@global_var_1001b568.315 = local_unnamed_addr global i32 0
@global_var_1001b4c0.316 = global i32 0
@global_var_1000ab28.317 = constant i32 939524129
@global_var_1001b55c.318 = local_unnamed_addr global i32 0
@global_var_1000ab9c.319 = constant [3 x i8] c"8`\00"
@global_var_1000abd4.320 = constant i32 939524129
@global_var_1001b560.321 = local_unnamed_addr global i32 0
@global_var_1001b564.322 = local_unnamed_addr global i32 0
@global_var_1001b384.323 = global i32 0
@global_var_1001b56c.2 = local_unnamed_addr global i8 0
@global_var_1001b4f8.9 = local_unnamed_addr global i8 0
@global_var_1001b4f9.13 = global i8 0
@global_var_1001b514.80 = local_unnamed_addr global i16 0
@global_var_1001b520.94 = global i16 0
@global_var_1001b5ae.109 = local_unnamed_addr global i16 0

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_10000094() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_100000a4.1 to i32), i32* @lr, align 4
  %v0_100000a0 = call i32 @function_10000168()
  store i32 %v0_100000a0, i32* @r3, align 4
  store i32 268435624, i32* @lr, align 4
  %v1_100000a4 = call i32 @function_1000ad58(i32 %v0_100000a0)
  ret i32 %v1_100000a4
}

define i32 @function_100000b8() local_unnamed_addr {
entry:
  %v3_100000cc = load i8, i8* @global_var_1001b56c.2, align 1
  %v3_100000d4 = icmp eq i8 %v3_100000cc, 0
  br i1 %v3_100000d4, label %dec_label_pc_100000dc, label %dec_label_pc_10000134

dec_label_pc_100000dc:                            ; preds = %entry
  %v3_100000e0 = load i32, i32* bitcast (i32** @global_var_1001b39c.4 to i32*), align 4
  %v3_100000e8 = icmp eq i32 %v3_100000e0, 0
  br i1 %v3_100000e8, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_100000f0:                            ; preds = %dec_label_pc_100000dc, %dec_label_pc_100000f0
  %v0_100000f4 = phi i32 [ %v3_10000100, %dec_label_pc_100000f0 ], [ %v3_100000e0, %dec_label_pc_100000dc ]
  %v1_100000f0 = add i32 %v0_100000f4, 4
  store i32 %v1_100000f0, i32* bitcast (i32** @global_var_1001b39c.4 to i32*), align 4
  call void @__pseudo_call(i32 %v0_100000f4)
  %v3_10000100 = load i32, i32* bitcast (i32** @global_var_1001b39c.4 to i32*), align 4
  %v3_10000108 = icmp eq i32 %v3_10000100, 0
  br i1 %v3_10000108, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_10000110:                            ; preds = %dec_label_pc_100000f0, %dec_label_pc_100000dc
  store i8 1, i8* @global_var_1001b56c.2, align 1
  br label %dec_label_pc_10000134

dec_label_pc_10000134:                            ; preds = %entry, %dec_label_pc_10000110
  ret i32 undef

; uselistorder directives
  uselistorder i32 %v3_10000100, { 1, 0 }
  uselistorder i8* @global_var_1001b56c.2, { 1, 0 }
  uselistorder label %dec_label_pc_10000134, { 1, 0 }
  uselistorder label %dec_label_pc_100000f0, { 1, 0 }
}

define i32 @function_1000014c() local_unnamed_addr {
dec_label_pc_1000014c:
  %v0_10000164 = load i32, i32* @r3, align 4
  ret i32 %v0_10000164
}

define i32 @function_10000168() local_unnamed_addr {
dec_label_pc_10000168:
  %v3_100001a0 = load i32, i32* inttoptr (i32 268546960 to i32*), align 16
  %v3_100001ac = icmp eq i32 %v3_100001a0, 0
  br i1 %v3_100001ac, label %dec_label_pc_100001c4, label %dec_label_pc_100001b4

dec_label_pc_100001b4:                            ; preds = %dec_label_pc_10000168
  br label %dec_label_pc_100001c4

dec_label_pc_100001c4:                            ; preds = %dec_label_pc_100001b4, %dec_label_pc_10000168
  ret i32 268546960
}

define i32 @function_100001d4() local_unnamed_addr {
dec_label_pc_100001d4:
  %v0_100001ec = load i32, i32* @r3, align 4
  ret i32 %v0_100001ec
}

define i32 @entry_point(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_0, align 4
  %v0_100001f4 = load i32, i32* @r1, align 4
  %v1_100001f4 = call i32 @__asm_rlwinm(i32 %v0_100001f4, i32 0, i32 0, i32 27)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10000204 = add i32 %v1_100001f4, -16
  %v3_10000204 = inttoptr i32 %v2_10000204 to i32*
  store i32 %v1_100001f4, i32* %v3_10000204, align 4
  %v0_10000208 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10000208, i32* %v3_10000204, align 4
  %v2_10000210 = load i32, i32* %stack_var_0, align 4
  %v7_10000234 = call i32 @function_10009f50(i32 268456428, i32 %v2_10000210, i32* nonnull %stack_var_4, i32 268435604, i32 268479940, i32 %arg1)
  ret i32 %v7_10000234

; uselistorder directives
  uselistorder i32 %v1_100001f4, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
}

define i32 @function_10000238(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10000238:
  %ctr.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %ctr.global-to-local, align 4
  %v0_10000244 = load i32, i32* @lr, align 4
  %tmp4 = icmp slt i32 %arg1, 1
  call void @__pseudo_cond_branch(i1 %tmp4, i32 %v0_10000244)
  %v1_10000248 = add i32 %tmp, 4
  %v2_10000248 = inttoptr i32 %v1_10000248 to i8*
  %v3_10000248 = load i8, i8* %v2_10000248, align 1
  %v4_10000248 = zext i8 %v3_10000248 to i32
  %v4_10000250 = icmp eq i32 %v4_10000248, %arg3
  br i1 %v4_10000250, label %dec_label_pc_10000278, label %dec_label_pc_1000026c.preheader

dec_label_pc_1000026c.preheader:                  ; preds = %dec_label_pc_10000238
  %v0_10000270.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000026c

dec_label_pc_1000025c:                            ; preds = %dec_label_pc_1000026c
  %v1_1000025c = add i32 %v0_1000025c.in, 12
  %v2_1000025c = inttoptr i32 %v1_1000025c to i8*
  %v3_1000025c = load i8, i8* %v2_1000025c, align 1
  %v4_1000025c = zext i8 %v3_1000025c to i32
  %v4_10000264 = icmp eq i32 %v4_1000025c, %arg3
  br i1 %v4_10000264, label %dec_label_pc_10000278, label %dec_label_pc_1000026c

dec_label_pc_1000026c:                            ; preds = %dec_label_pc_1000026c.preheader, %dec_label_pc_1000025c
  %v0_10000270 = phi i32 [ %v0_10000270.pre, %dec_label_pc_1000026c.preheader ], [ %v1_10000270, %dec_label_pc_1000025c ]
  %v0_1000025c.in = phi i32 [ %tmp, %dec_label_pc_1000026c.preheader ], [ %v0_1000025c, %dec_label_pc_1000025c ]
  %v0_1000025c = add i32 %v0_1000025c.in, 8
  %v1_10000270 = add i32 %v0_10000270, -1
  store i32 %v1_10000270, i32* %ctr.global-to-local, align 4
  %v2_10000270 = icmp eq i32 %v1_10000270, 0
  br i1 %v2_10000270, label %dec_label_pc_10000274, label %dec_label_pc_1000025c

dec_label_pc_10000274:                            ; preds = %dec_label_pc_1000026c
  ret i32 %arg4

dec_label_pc_10000278:                            ; preds = %dec_label_pc_1000025c, %dec_label_pc_10000238
  %v0_10000278 = phi i32 [ %tmp, %dec_label_pc_10000238 ], [ %v0_1000025c, %dec_label_pc_1000025c ]
  %v1_10000278 = inttoptr i32 %v0_10000278 to i32*
  %v2_10000278 = load i32, i32* %v1_10000278, align 4
  ret i32 %v2_10000278

; uselistorder directives
  uselistorder i32 %v1_10000270, { 2, 1, 0 }
  uselistorder i32 %v0_1000025c.in, { 1, 0 }
  uselistorder i32 %tmp, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000026c, { 1, 0 }
}

define i32 @function_10000280(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_10000280:
  store i32 %arg4, i32* @r28, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 %arg2, i32* @r30, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268436160, i32* @lr, align 4
  %v0_100002bc = call i32 @function_10008460()
  %v3_100002c0 = icmp eq i32 %v0_100002bc, -1
  br i1 %v3_100002c0, label %dec_label_pc_100002d0, label %dec_label_pc_100002c8

dec_label_pc_100002c8:                            ; preds = %dec_label_pc_10000280
  %tmp14 = icmp slt i32 %v0_100002bc, 1
  br i1 %tmp14, label %dec_label_pc_100002f8, label %dec_label_pc_100002d0

dec_label_pc_100002d0:                            ; preds = %dec_label_pc_100002c8, %dec_label_pc_10000280
  ret i32 %v0_100002bc

dec_label_pc_100002f8:                            ; preds = %dec_label_pc_100002c8
  store i32 268436220, i32* @lr, align 4
  %v0_100002f8 = call i32 @function_10008460()
  %v3_100002fc = icmp eq i32 %v0_100002f8, -1
  br i1 %v3_100002fc, label %dec_label_pc_10000320, label %dec_label_pc_10000304

dec_label_pc_10000304:                            ; preds = %dec_label_pc_100002f8
  %v3_10000304 = icmp eq i32 %v0_100002f8, 0
  br i1 %v3_10000304, label %dec_label_pc_1000030c, label %dec_label_pc_10000328

dec_label_pc_1000030c:                            ; preds = %dec_label_pc_10000304
  %v0_1000030c = load i32, i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_10000314.7 to i32), i32* @lr, align 4
  %v1_10000310 = call i32 @function_10009bfc(i32 %v0_1000030c)
  store i32 268436248, i32* @lr, align 4
  %v0_10000314 = call i32 @function_100084f0()
  store i32 ptrtoint ([3 x i8]* @global_var_10000320.8 to i32), i32* @lr, align 4
  %v2_1000031c = call i32 @function_10008538(i32 %v0_10000314, i32 9)
  br label %dec_label_pc_10000320

dec_label_pc_10000320:                            ; preds = %dec_label_pc_10000358, %dec_label_pc_10000328, %dec_label_pc_100002f8, %dec_label_pc_10000374, %dec_label_pc_1000030c
  %v0_10000324 = call i32 @function_10009b78()
  br label %dec_label_pc_10000328

dec_label_pc_10000328:                            ; preds = %dec_label_pc_10000304, %dec_label_pc_10000320
  %v3_1000032c = load i8, i8* @global_var_1001b4f8.9, align 1
  %v3_10000330 = icmp eq i8 %v3_1000032c, 0
  br i1 %v3_10000330, label %dec_label_pc_10000320, label %dec_label_pc_10000338

dec_label_pc_10000338:                            ; preds = %dec_label_pc_10000328
  %v4_1000032c = zext i8 %v3_1000032c to i32
  %v3_10000340 = load i32, i32* @global_var_1001b4fc.10, align 4
  %v1_10000348 = inttoptr i32 %v3_10000340 to i32*
  %v2_10000348 = load i32, i32* %v1_10000348, align 4
  %v1_1000034c = add i32 %v2_10000348, 4
  %v2_1000034c = inttoptr i32 %v1_1000034c to i8*
  %v3_1000034c = load i8, i8* %v2_1000034c, align 1
  %v4_1000034c = zext i8 %v3_1000034c to i32
  %v1_10000350 = load i32, i32* @r30, align 4
  %v4_10000350 = icmp eq i32 %v4_1000034c, %v1_10000350
  br i1 %v4_10000350, label %dec_label_pc_10000374, label %dec_label_pc_10000358

dec_label_pc_10000358:                            ; preds = %dec_label_pc_10000338, %dec_label_pc_10000360
  %v0_1000035c = phi i32 [ %v1_1000035c, %dec_label_pc_10000360 ], [ %v4_1000032c, %dec_label_pc_10000338 ]
  %v0_10000358 = phi i32 [ %v1_10000358, %dec_label_pc_10000360 ], [ 0, %dec_label_pc_10000338 ]
  %v1_10000358 = add i32 %v0_10000358, 1
  %v1_1000035c = add i32 %v0_1000035c, -1
  %v2_1000035c = icmp eq i32 %v1_1000035c, 0
  br i1 %v2_1000035c, label %dec_label_pc_10000320, label %dec_label_pc_10000360

dec_label_pc_10000360:                            ; preds = %dec_label_pc_10000358
  %v1_10000360 = mul i32 %v1_10000358, 4
  %v2_10000364 = add i32 %v1_10000360, %v3_10000340
  %v3_10000364 = inttoptr i32 %v2_10000364 to i32*
  %v4_10000364 = load i32, i32* %v3_10000364, align 4
  %v1_10000368 = add i32 %v4_10000364, 4
  %v2_10000368 = inttoptr i32 %v1_10000368 to i8*
  %v3_10000368 = load i8, i8* %v2_10000368, align 1
  %v4_10000368 = zext i8 %v3_10000368 to i32
  %v4_1000036c = icmp eq i32 %v4_10000368, %v1_10000350
  br i1 %v4_1000036c, label %dec_label_pc_10000374, label %dec_label_pc_10000358

dec_label_pc_10000374:                            ; preds = %dec_label_pc_10000360, %dec_label_pc_10000338
  %v0_10000374 = phi i32 [ %v2_10000348, %dec_label_pc_10000338 ], [ %v4_10000364, %dec_label_pc_10000360 ]
  %v1_10000374 = inttoptr i32 %v0_10000374 to i32*
  %v2_10000374 = load i32, i32* %v1_10000374, align 4
  call void @__pseudo_call(i32 %v2_10000374)
  br label %dec_label_pc_10000320

; uselistorder directives
  uselistorder i32 %v1_1000035c, { 1, 0 }
  uselistorder i8 %v3_1000032c, { 1, 0 }
  uselistorder label %dec_label_pc_10000358, { 1, 0 }
  uselistorder label %dec_label_pc_10000328, { 1, 0 }
  uselistorder label %dec_label_pc_10000320, { 3, 0, 1, 4, 2 }
}

define i32 @function_10000394(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10000394:
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v0_10000394 = call i32 @__asm_mfcr()
  store i32 %v0_10000394, i32* %r3.global-to-local, align 4
  %v0_100003a4 = load i32, i32* @r30, align 4
  %v0_100003ac = load i32, i32* @r31, align 4
  %v0_100003c4 = load i32, i32* @r24, align 4
  %v0_100003d0 = load i32, i32* @r27, align 4
  %v0_100003d4 = load i32, i32* @r28, align 4
  %tmp25 = icmp ult i32 %arg2, 4
  br i1 %tmp25, label %dec_label_pc_100003f4, label %dec_label_pc_100003e8

dec_label_pc_100003e8:                            ; preds = %dec_label_pc_10000394
  %v3_100003e8 = icmp eq i32 %arg2, 4
  %v1_100003ec = inttoptr i32 %v0_10000394 to i32*
  %v2_100003ec = load i32, i32* %v1_100003ec, align 4
  store i32 %v2_100003ec, i32* %r25.global-to-local, align 4
  br i1 %v3_100003e8, label %dec_label_pc_100003f4, label %dec_label_pc_1000043c

dec_label_pc_100003f4:                            ; preds = %dec_label_pc_100003e8, %dec_label_pc_100005e8, %dec_label_pc_10000454, %dec_label_pc_10000448, %dec_label_pc_1000043c, %dec_label_pc_10000394, %dec_label_pc_1000061c
  %v1_10000408 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10000394)
  store i32 %v0_100003c4, i32* @r24, align 4
  store i32 %v0_100003d0, i32* @r27, align 4
  store i32 %v0_100003d4, i32* @r28, align 4
  store i32 %v0_100003a4, i32* @r30, align 4
  store i32 %v0_100003ac, i32* @r31, align 4
  %v0_10000438 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10000438

dec_label_pc_1000043c:                            ; preds = %dec_label_pc_100003e8
  %v3_1000043c = icmp eq i32 %arg2, 5
  %v1_10000440 = add i32 %v0_10000394, 4
  %v2_10000440 = inttoptr i32 %v1_10000440 to i8*
  %v3_10000440 = load i8, i8* %v2_10000440, align 1
  %v4_10000440 = zext i8 %v3_10000440 to i32
  store i32 %v4_10000440, i32* %r22.global-to-local, align 4
  br i1 %v3_1000043c, label %dec_label_pc_100003f4, label %dec_label_pc_10000448

dec_label_pc_10000448:                            ; preds = %dec_label_pc_1000043c
  %v1_10000448 = add i32 %v0_10000394, 5
  %v2_10000448 = inttoptr i32 %v1_10000448 to i8*
  %v3_10000448 = load i8, i8* %v2_10000448, align 1
  %v4_10000448 = zext i8 %v3_10000448 to i32
  store i32 %v4_10000448, i32* @r26, align 4
  %v3_1000044c = icmp eq i8 %v3_10000448, 0
  store i1 false, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_1000044c, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_1000044c, label %dec_label_pc_100003f4, label %dec_label_pc_10000454

dec_label_pc_10000454:                            ; preds = %dec_label_pc_10000448
  %v1_10000454 = mul nuw nsw i32 %v4_10000448, 5
  store i32 %v1_10000454, i32* @r27, align 4
  %v1_10000458 = add i32 %arg2, -6
  store i32 %v1_10000458, i32* @r28, align 4
  %v2_1000045c = icmp ult i32 %v1_10000458, %v1_10000454
  br i1 %v2_1000045c, label %dec_label_pc_100003f4, label %dec_label_pc_10000464

dec_label_pc_10000464:                            ; preds = %dec_label_pc_10000454
  store i32 %v4_10000448, i32* %r3.global-to-local, align 4
  store i32 268436592, i32* @lr, align 4
  %v2_1000046c = call i32 @function_10009460(i32 %v4_10000448, i32 24)
  store i32 %v2_1000046c, i32* %r3.global-to-local, align 4
  %v0_10000470 = load i32, i32* @r31, align 4
  %v1_10000470 = add i32 %v0_10000470, 6
  store i32 %v1_10000470, i32* @r29, align 4
  store i32 %v2_1000046c, i32* %r20.global-to-local, align 4
  %v0_10000478 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10000478 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10000478 = or i1 %v0_10000478, %v1_10000478
  br i1 %v2_10000478, label %dec_label_pc_100004d4thread-pre-split, label %dec_label_pc_1000047c

dec_label_pc_1000047c:                            ; preds = %dec_label_pc_10000464
  %v0_1000047c = load i32, i32* @r27, align 4
  store i32 %v2_1000046c, i32* %r11.global-to-local, align 4
  %tmp29 = mul i32 %v0_1000047c, -858993459
  store i32 2, i32* %r10.global-to-local, align 4
  store i32 %tmp29, i32* %r9.global-to-local, align 4
  store i32 %tmp29, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100004a4

dec_label_pc_100004a4:                            ; preds = %dec_label_pc_100004a4.dec_label_pc_100004a4_crit_edge, %dec_label_pc_1000047c
  %v2_100004b0 = phi i32 [ %v1_100004c0, %dec_label_pc_100004a4.dec_label_pc_100004a4_crit_edge ], [ %v2_1000046c, %dec_label_pc_1000047c ]
  %v0_100004ac = phi i32 [ %v0_100004a4.pre, %dec_label_pc_100004a4.dec_label_pc_100004a4_crit_edge ], [ %v1_10000470, %dec_label_pc_1000047c ]
  %v1_100004a4 = add i32 %v0_100004ac, 4
  %v2_100004a4 = inttoptr i32 %v1_100004a4 to i8*
  %v3_100004a4 = load i8, i8* %v2_100004a4, align 1
  %v1_100004a8 = inttoptr i32 %v0_100004ac to i32*
  %v2_100004a8 = load i32, i32* %v1_100004a8, align 4
  store i32 %v2_100004a8, i32* %r9.global-to-local, align 4
  %v1_100004ac = add i32 %v0_100004ac, 5
  store i32 %v1_100004ac, i32* @r29, align 4
  %v3_100004b0 = add i32 %v2_100004b0, 20
  %v4_100004b0 = inttoptr i32 %v3_100004b0 to i8*
  store i8 %v3_100004a4, i8* %v4_100004b0, align 1
  %v0_100004b4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100004b4 = load i32, i32* %r11.global-to-local, align 4
  %v2_100004b4 = add i32 %v1_100004b4, 4
  %v3_100004b4 = inttoptr i32 %v2_100004b4 to i32*
  store i32 %v0_100004b4, i32* %v3_100004b4, align 4
  %v0_100004b8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100004b8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100004b8 = add i32 %v1_100004b8, 16
  %v3_100004b8 = inttoptr i32 %v2_100004b8 to i32*
  store i32 %v0_100004b8, i32* %v3_100004b8, align 4
  %v0_100004bc = load i32, i32* %r10.global-to-local, align 4
  %v1_100004bc = trunc i32 %v0_100004bc to i16
  %v2_100004bc = load i32, i32* %r11.global-to-local, align 4
  %v3_100004bc = inttoptr i32 %v2_100004bc to i16*
  store i16 %v1_100004bc, i16* %v3_100004bc, align 2
  %v0_100004c0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100004c0 = add i32 %v0_100004c0, 24
  store i32 %v1_100004c0, i32* %r11.global-to-local, align 4
  %v0_100004c4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100004c4 = add i32 %v0_100004c4, -1
  store i32 %v1_100004c4, i32* %ctr.global-to-local, align 4
  %v2_100004c4 = icmp eq i32 %v1_100004c4, 0
  br i1 %v2_100004c4, label %dec_label_pc_100004c8, label %dec_label_pc_100004a4.dec_label_pc_100004a4_crit_edge

dec_label_pc_100004a4.dec_label_pc_100004a4_crit_edge: ; preds = %dec_label_pc_100004a4
  %v0_100004a4.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100004a4

dec_label_pc_100004c8:                            ; preds = %dec_label_pc_100004a4
  %v0_100004c8 = load i32, i32* @r26, align 4
  %v1_100004c8 = mul i32 %v0_100004c8, -5
  %v0_100004cc = load i32, i32* @r30, align 4
  %v2_100004cc = add i32 %v0_100004cc, %v1_100004c8
  store i32 %v2_100004cc, i32* %r9.global-to-local, align 4
  %v1_100004d0 = add i32 %v2_100004cc, -6
  store i32 %v1_100004d0, i32* @r28, align 4
  br label %dec_label_pc_100004d4

dec_label_pc_100004d4thread-pre-split:            ; preds = %dec_label_pc_10000464
  %v0_100004d4.pr = load i32, i32* @r28, align 4
  br label %dec_label_pc_100004d4

dec_label_pc_100004d4:                            ; preds = %dec_label_pc_100004d4thread-pre-split, %dec_label_pc_100004c8
  %v0_100004d4 = phi i32 [ %v0_100004d4.pr, %dec_label_pc_100004d4thread-pre-split ], [ %v1_100004d0, %dec_label_pc_100004c8 ]
  %v3_100004d4 = icmp eq i32 %v0_100004d4, 0
  store i32 0, i32* %r21.global-to-local, align 4
  br i1 %v3_100004d4, label %dec_label_pc_100005d8, label %dec_label_pc_100004e0

dec_label_pc_100004e0:                            ; preds = %dec_label_pc_100004d4
  %v0_100004e0 = load i32, i32* @r29, align 4
  %v1_100004e0 = inttoptr i32 %v0_100004e0 to i8*
  %v2_100004e0 = load i8, i8* %v1_100004e0, align 1
  %v3_100004e0 = zext i8 %v2_100004e0 to i32
  store i32 %v3_100004e0, i32* @r24, align 4
  %v3_100004e4 = icmp eq i8 %v2_100004e0, 0
  store i1 false, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_100004e4, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_100004e4, label %dec_label_pc_100005b0, label %dec_label_pc_100004ec

dec_label_pc_100004ec:                            ; preds = %dec_label_pc_100004e0
  store i32 %v3_100004e0, i32* %r3.global-to-local, align 4
  store i32 268436728, i32* @lr, align 4
  %v2_100004f4 = call i32 @function_10009460(i32 %v3_100004e0, i32 8)
  store i32 %v2_100004f4, i32* %r3.global-to-local, align 4
  store i32 %v2_100004f4, i32* %r21.global-to-local, align 4
  %v0_100004fc = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100004fc = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_100004fc = or i1 %v0_100004fc, %v1_100004fc
  br i1 %v2_100004fc, label %dec_label_pc_100005b0, label %dec_label_pc_10000500

dec_label_pc_10000500:                            ; preds = %dec_label_pc_100004ec
  %v0_10000500 = load i32, i32* @r28, align 4
  %v1_10000500 = add i32 %v0_10000500, -1
  %v4_10000500 = icmp eq i32 %v1_10000500, 0
  store i32 %v1_10000500, i32* %ctr.global-to-local, align 4
  br i1 %v4_10000500, label %dec_label_pc_100005d8, label %dec_label_pc_1000050c

dec_label_pc_1000050c:                            ; preds = %dec_label_pc_10000500
  %v0_1000050c = load i32, i32* @r29, align 4
  %v1_1000050c = add i32 %v0_1000050c, 1
  %v2_1000050c = inttoptr i32 %v1_1000050c to i8*
  %v3_1000050c = load i8, i8* %v2_1000050c, align 1
  store i32 %v1_1000050c, i32* %r9.global-to-local, align 4
  %v3_10000514 = add i32 %v2_100004f4, 4
  %v4_10000514 = inttoptr i32 %v3_10000514 to i8*
  store i8 %v3_1000050c, i8* %v4_10000514, align 1
  %v0_10000518 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10000518 = add i32 %v0_10000518, -1
  store i32 %v1_10000518, i32* %ctr.global-to-local, align 4
  %v2_10000518 = icmp eq i32 %v1_10000518, 0
  br i1 %v2_10000518, label %dec_label_pc_100005d8, label %dec_label_pc_1000051c

dec_label_pc_1000051c:                            ; preds = %dec_label_pc_1000050c
  store i32 %v1_10000518, i32* %r11.global-to-local, align 4
  %v0_10000520 = load i32, i32* %r9.global-to-local, align 4
  %v1_10000520 = add i32 %v0_10000520, 1
  %v2_10000520 = inttoptr i32 %v1_10000520 to i8*
  %v3_10000520 = load i8, i8* %v2_10000520, align 1
  %v4_10000520 = zext i8 %v3_10000520 to i32
  %v1_10000528 = add i32 %v0_10000518, -2
  store i32 %v1_10000528, i32* @r29, align 4
  %v2_1000052c = icmp slt i32 %v1_10000528, %v4_10000520
  br i1 %v2_1000052c, label %dec_label_pc_100005d8, label %dec_label_pc_10000534

dec_label_pc_10000534:                            ; preds = %dec_label_pc_1000051c
  %v1_10000534 = add i32 %v0_10000520, 2
  store i32 %v1_10000534, i32* @r28, align 4
  %v0_10000538 = load i32, i32* %r3.global-to-local, align 4
  %v1_10000538 = add i32 %v0_10000538, 8
  store i32 %v1_10000538, i32* %r23.global-to-local, align 4
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_1000057c

dec_label_pc_10000548:                            ; preds = %dec_label_pc_1000057c
  %v5_100005a4 = icmp eq i32 %v2_100005a4, 0
  br i1 %v5_100005a4, label %dec_label_pc_100005d8, label %dec_label_pc_1000054c

dec_label_pc_1000054c:                            ; preds = %dec_label_pc_10000548
  %v1_1000054c = load i32, i32* @r28, align 4
  %v2_1000054c = add i32 %v1_1000054c, %v0_100005a4
  %v3_1000054c = inttoptr i32 %v2_1000054c to i8*
  %v4_1000054c = load i8, i8* %v3_1000054c, align 1
  store i32 %v2_1000054c, i32* %r3.global-to-local, align 4
  %v1_10000554 = add i32 %v2_1000054c, 1
  store i32 %v1_10000554, i32* %r9.global-to-local, align 4
  %v2_10000558 = load i32, i32* @r30, align 4
  %v3_10000558 = add i32 %v2_10000558, 4
  %v4_10000558 = inttoptr i32 %v3_10000558 to i8*
  store i8 %v4_1000054c, i8* %v4_10000558, align 1
  %v0_1000055c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000055c = add i32 %v0_1000055c, -1
  %v4_1000055c = icmp eq i32 %v1_1000055c, 0
  %v0_10000560 = load i32, i32* %r9.global-to-local, align 4
  %v1_10000560 = add i32 %v0_10000560, 1
  store i32 %v1_10000560, i32* @r28, align 4
  br i1 %v4_1000055c, label %dec_label_pc_100005d8, label %dec_label_pc_10000568

dec_label_pc_10000568:                            ; preds = %dec_label_pc_1000054c
  %v0_10000568 = load i32, i32* %r3.global-to-local, align 4
  %v1_10000568 = add i32 %v0_10000568, 1
  %v2_10000568 = inttoptr i32 %v1_10000568 to i8*
  %v3_10000568 = load i8, i8* %v2_10000568, align 1
  %v4_10000568 = zext i8 %v3_10000568 to i32
  store i32 %v1_1000055c, i32* %r9.global-to-local, align 4
  %v1_10000570 = add i32 %v0_1000055c, -2
  store i32 %v1_10000570, i32* @r29, align 4
  %v2_10000574 = icmp slt i32 %v1_10000570, %v4_10000568
  br i1 %v2_10000574, label %dec_label_pc_100005d8, label %dec_label_pc_1000057c

dec_label_pc_1000057c:                            ; preds = %dec_label_pc_10000568, %dec_label_pc_10000534
  %v0_10000580 = phi i32 [ %v4_10000568, %dec_label_pc_10000568 ], [ %v4_10000520, %dec_label_pc_10000534 ]
  %v1_10000580 = add nuw nsw i32 %v0_10000580, 1
  store i32 %v1_10000580, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000588.11 to i32), i32* @lr, align 4
  %v2_10000584 = call i32 @function_10009460(i32 %v1_10000580, i32 1)
  store i32 %v2_10000584, i32* %r3.global-to-local, align 4
  %v0_10000588 = load i32, i32* @r27, align 4
  %v1_10000588 = add i32 %v0_10000588, 1
  store i32 %v1_10000588, i32* @r27, align 4
  %v1_1000058c = load i32, i32* @r30, align 4
  %v2_1000058c = inttoptr i32 %v1_1000058c to i32*
  store i32 %v2_10000584, i32* %v2_1000058c, align 4
  %v0_10000590 = load i32, i32* @r28, align 4
  %v0_10000594 = load i32, i32* @r31, align 4
  %v0_10000598 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10000598, i32* @r30, align 4
  store i32 268436896, i32* @lr, align 4
  %v3_1000059c = call i32 @function_10007cdc(i32 %v2_10000584, i32 %v0_10000590, i32 %v0_10000594)
  store i32 %v3_1000059c, i32* %r3.global-to-local, align 4
  %v0_100005a0 = load i32, i32* @r27, align 4
  %v1_100005a0 = load i32, i32* @r24, align 4
  %v4_100005a0 = icmp eq i32 %v0_100005a0, %v1_100005a0
  %v0_100005a4 = load i32, i32* @r31, align 4
  %v1_100005a4 = load i32, i32* @r29, align 4
  %v2_100005a4 = sub i32 %v1_100005a4, %v0_100005a4
  store i32 %v2_100005a4, i32* %r11.global-to-local, align 4
  %v0_100005a8 = load i32, i32* %r23.global-to-local, align 4
  %v1_100005a8 = add i32 %v0_100005a8, 8
  store i32 %v1_100005a8, i32* %r23.global-to-local, align 4
  br i1 %v4_100005a0, label %dec_label_pc_100005b0, label %dec_label_pc_10000548

dec_label_pc_100005b0:                            ; preds = %dec_label_pc_1000057c, %dec_label_pc_100004ec, %dec_label_pc_100004e0
  %v0_100005b0 = call i32 @function_10008b34()
  %v2_100005b8 = inttoptr i32 %v0_100005b0 to i32*
  store i32 0, i32* %v2_100005b8, align 4
  %v0_100005bc = load i32, i32* %r22.global-to-local, align 4
  %v0_100005c0 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100005c0, i32* %r3.global-to-local, align 4
  %v0_100005c4 = load i32, i32* @r26, align 4
  %v0_100005c8 = load i32, i32* %r20.global-to-local, align 4
  %v0_100005cc = load i32, i32* @r24, align 4
  %v0_100005d0 = load i32, i32* %r21.global-to-local, align 4
  store i32 268436952, i32* @lr, align 4
  %v6_100005d4 = call i32 @function_10000280(i32 %v0_100005c0, i32 %v0_100005bc, i32 %v0_100005c4, i32 %v0_100005c8, i32 %v0_100005cc, i32 %v0_100005d0)
  store i32 %v6_100005d4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100005d8

dec_label_pc_100005d8:                            ; preds = %dec_label_pc_10000568, %dec_label_pc_1000054c, %dec_label_pc_10000548, %dec_label_pc_1000051c, %dec_label_pc_1000050c, %dec_label_pc_10000500, %dec_label_pc_100004d4, %dec_label_pc_100005b0
  %v0_100005d8 = load i32, i32* %r20.global-to-local, align 4
  %v3_100005d8 = icmp eq i32 %v0_100005d8, 0
  br i1 %v3_100005d8, label %dec_label_pc_100005e8, label %dec_label_pc_100005e0

dec_label_pc_100005e0:                            ; preds = %dec_label_pc_100005d8
  store i32 %v0_100005d8, i32* @r3, align 4
  store i32 268436968, i32* @lr, align 4
  %v0_100005e4 = call i32 @function_100094d0()
  store i32 %v0_100005e4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100005e8

dec_label_pc_100005e8:                            ; preds = %dec_label_pc_100005d8, %dec_label_pc_100005e0
  %v0_100005e8 = load i32, i32* %r21.global-to-local, align 4
  %v3_100005e8 = icmp eq i32 %v0_100005e8, 0
  br i1 %v3_100005e8, label %dec_label_pc_100003f4, label %dec_label_pc_100005f0

dec_label_pc_100005f0:                            ; preds = %dec_label_pc_100005e8
  %v0_100005f0 = load i32, i32* @r24, align 4
  %tmp27 = icmp slt i32 %v0_100005f0, 1
  br i1 %tmp27, label %dec_label_pc_1000061c, label %dec_label_pc_100005f8

dec_label_pc_100005f8:                            ; preds = %dec_label_pc_100005f0
  br label %dec_label_pc_100005fc

dec_label_pc_100005fc:                            ; preds = %dec_label_pc_10000614, %dec_label_pc_100005f8
  %v0_100006146 = phi i32 [ %v0_100005f0, %dec_label_pc_100005f8 ], [ %v0_10000614, %dec_label_pc_10000614 ]
  %v0_10000604 = phi i32 [ %v0_100005e8, %dec_label_pc_100005f8 ], [ %v0_1000061c.pre, %dec_label_pc_10000614 ]
  %v0_100005fc = phi i32 [ 0, %dec_label_pc_100005f8 ], [ %v1_10000614, %dec_label_pc_10000614 ]
  %v1_100005fc = mul i32 %v0_100005fc, 8
  %v1_10000600 = add i32 %v0_100005fc, 1
  store i32 %v1_10000600, i32* @r31, align 4
  %v2_10000604 = add i32 %v1_100005fc, %v0_10000604
  %v3_10000604 = inttoptr i32 %v2_10000604 to i32*
  %v4_10000604 = load i32, i32* %v3_10000604, align 4
  store i32 %v4_10000604, i32* @r3, align 4
  %v3_10000608 = icmp eq i32 %v4_10000604, 0
  br i1 %v3_10000608, label %dec_label_pc_10000614, label %dec_label_pc_10000610

dec_label_pc_10000610:                            ; preds = %dec_label_pc_100005fc
  store i32 268437012, i32* @lr, align 4
  %v0_10000610 = call i32 @function_100094d0()
  store i32 %v0_10000610, i32* %r3.global-to-local, align 4
  %v0_10000614.pre = load i32, i32* @r24, align 4
  %v1_10000614.pre = load i32, i32* @r31, align 4
  %v0_1000061c.pre.pre = load i32, i32* %r21.global-to-local, align 4
  br label %dec_label_pc_10000614

dec_label_pc_10000614:                            ; preds = %dec_label_pc_100005fc, %dec_label_pc_10000610
  %v0_1000061c.pre = phi i32 [ %v0_10000604, %dec_label_pc_100005fc ], [ %v0_1000061c.pre.pre, %dec_label_pc_10000610 ]
  %v1_10000614 = phi i32 [ %v1_10000600, %dec_label_pc_100005fc ], [ %v1_10000614.pre, %dec_label_pc_10000610 ]
  %v0_10000614 = phi i32 [ %v0_100006146, %dec_label_pc_100005fc ], [ %v0_10000614.pre, %dec_label_pc_10000610 ]
  %v4_10000614 = icmp eq i32 %v0_10000614, %v1_10000614
  br i1 %v4_10000614, label %dec_label_pc_1000061c, label %dec_label_pc_100005fc

dec_label_pc_1000061c:                            ; preds = %dec_label_pc_10000614, %dec_label_pc_100005f0
  %v0_1000061c = phi i32 [ %v0_100005e8, %dec_label_pc_100005f0 ], [ %v0_1000061c.pre, %dec_label_pc_10000614 ]
  store i32 %v0_1000061c, i32* @r3, align 4
  store i32 268437028, i32* @lr, align 4
  %v0_10000620 = call i32 @function_100094d0()
  store i32 %v0_10000620, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100003f4

; uselistorder directives
  uselistorder i32 %v0_10000614, { 1, 0 }
  uselistorder i32 %v1_10000614, { 1, 0 }
  uselistorder i32 %v0_100005fc, { 1, 0 }
  uselistorder i32 %v2_100005a4, { 1, 0 }
  uselistorder i32 %v0_100005a4, { 1, 0 }
  uselistorder i32 %v2_1000054c, { 1, 0, 2 }
  uselistorder i32 %v1_10000518, { 0, 2, 1 }
  uselistorder i32 %v3_100004e0, { 1, 0, 2 }
  uselistorder i32 %v1_100004c4, { 1, 0 }
  uselistorder i32 %v1_100004c0, { 1, 0 }
  uselistorder i32 %v0_100004ac, { 0, 2, 1 }
  uselistorder i32 %tmp29, { 1, 0 }
  uselistorder i32 %v4_10000448, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10000394, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 2, 5, 6, 9, 10, 11, 7, 8, 12, 13, 14, 16, 17, 15, 0, 1 }
  uselistorder i32* %r21.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder i32* %r20.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10000614, { 1, 0 }
  uselistorder label %dec_label_pc_100005e8, { 1, 0 }
  uselistorder label %dec_label_pc_100005d8, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_100003f4, { 6, 1, 2, 3, 4, 0, 5 }
}

define i32 @function_10000628(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10000628:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %tmp7 = icmp slt i32 %arg1, 1
  br i1 %tmp7, label %dec_label_pc_1000066c, label %dec_label_pc_10000640

dec_label_pc_10000640:                            ; preds = %dec_label_pc_10000628
  %v0_10000640 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000640 = add i32 %v0_10000640, 4
  %v2_10000640 = inttoptr i32 %v1_10000640 to i8*
  %v3_10000640 = load i8, i8* %v2_10000640, align 1
  %v4_10000640 = zext i8 %v3_10000640 to i32
  %v4_10000648 = icmp eq i32 %v4_10000640, %arg3
  br i1 %v4_10000648, label %dec_label_pc_10000680, label %dec_label_pc_10000664

dec_label_pc_10000654:                            ; preds = %dec_label_pc_10000664
  %v1_10000654 = add i32 %v0_10000654.in, 12
  %v2_10000654 = inttoptr i32 %v1_10000654 to i8*
  %v3_10000654 = load i8, i8* %v2_10000654, align 1
  %v4_10000654 = zext i8 %v3_10000654 to i32
  %v4_1000065c = icmp eq i32 %v4_10000654, %arg3
  br i1 %v4_1000065c, label %dec_label_pc_10000680, label %dec_label_pc_10000664

dec_label_pc_10000664:                            ; preds = %dec_label_pc_10000640, %dec_label_pc_10000654
  %v0_10000668 = phi i32 [ %v1_10000668, %dec_label_pc_10000654 ], [ %arg1, %dec_label_pc_10000640 ]
  %v0_10000654.in = phi i32 [ %v0_10000654, %dec_label_pc_10000654 ], [ %v0_10000640, %dec_label_pc_10000640 ]
  %v0_10000654 = add i32 %v0_10000654.in, 8
  store i32 %v0_10000654, i32* %r4.global-to-local, align 4
  %v1_10000668 = add i32 %v0_10000668, -1
  %v2_10000668 = icmp eq i32 %v1_10000668, 0
  br i1 %v2_10000668, label %dec_label_pc_1000066c, label %dec_label_pc_10000654

dec_label_pc_1000066c:                            ; preds = %dec_label_pc_10000664, %dec_label_pc_10000680, %dec_label_pc_10000628
  ret i32 %arg4

dec_label_pc_10000680:                            ; preds = %dec_label_pc_10000654, %dec_label_pc_10000640
  %v0_10000680 = phi i32 [ %v0_10000640, %dec_label_pc_10000640 ], [ %v0_10000654, %dec_label_pc_10000654 ]
  %v1_10000680 = inttoptr i32 %v0_10000680 to i32*
  %v2_10000680 = load i32, i32* %v1_10000680, align 4
  %v3_10000684 = icmp eq i32 %v2_10000680, 0
  br i1 %v3_10000684, label %dec_label_pc_1000066c, label %dec_label_pc_1000068c

dec_label_pc_1000068c:                            ; preds = %dec_label_pc_10000680
  store i32 268437136, i32* @lr, align 4
  %v1_1000068c = call i32 @function_10008ecc(i32 %v2_10000680)
  ret i32 %v1_1000068c

; uselistorder directives
  uselistorder i32 %v1_10000668, { 1, 0 }
  uselistorder i32 %v0_10000654, { 1, 0, 2 }
  uselistorder i32 %v0_10000654.in, { 1, 0 }
  uselistorder i32 %v0_10000640, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000066c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000664, { 1, 0 }
}

define i32 @function_100006a8(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100006a8:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %tmp7 = icmp slt i32 %arg1, 1
  br i1 %tmp7, label %dec_label_pc_100006ec, label %dec_label_pc_100006c0

dec_label_pc_100006c0:                            ; preds = %dec_label_pc_100006a8
  %v0_100006c0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100006c0 = add i32 %v0_100006c0, 4
  %v2_100006c0 = inttoptr i32 %v1_100006c0 to i8*
  %v3_100006c0 = load i8, i8* %v2_100006c0, align 1
  %v4_100006c0 = zext i8 %v3_100006c0 to i32
  %v4_100006c8 = icmp eq i32 %v4_100006c0, %arg3
  br i1 %v4_100006c8, label %dec_label_pc_10000700, label %dec_label_pc_100006e4

dec_label_pc_100006d4:                            ; preds = %dec_label_pc_100006e4
  %v1_100006d4 = add i32 %v0_100006d4.in, 12
  %v2_100006d4 = inttoptr i32 %v1_100006d4 to i8*
  %v3_100006d4 = load i8, i8* %v2_100006d4, align 1
  %v4_100006d4 = zext i8 %v3_100006d4 to i32
  %v4_100006dc = icmp eq i32 %v4_100006d4, %arg3
  br i1 %v4_100006dc, label %dec_label_pc_10000700, label %dec_label_pc_100006e4

dec_label_pc_100006e4:                            ; preds = %dec_label_pc_100006c0, %dec_label_pc_100006d4
  %v0_100006e8 = phi i32 [ %v1_100006e8, %dec_label_pc_100006d4 ], [ %arg1, %dec_label_pc_100006c0 ]
  %v0_100006d4.in = phi i32 [ %v0_100006d4, %dec_label_pc_100006d4 ], [ %v0_100006c0, %dec_label_pc_100006c0 ]
  %v0_100006d4 = add i32 %v0_100006d4.in, 8
  store i32 %v0_100006d4, i32* %r4.global-to-local, align 4
  %v1_100006e8 = add i32 %v0_100006e8, -1
  %v2_100006e8 = icmp eq i32 %v1_100006e8, 0
  br i1 %v2_100006e8, label %dec_label_pc_100006ec, label %dec_label_pc_100006d4

dec_label_pc_100006ec:                            ; preds = %dec_label_pc_100006e4, %dec_label_pc_10000700, %dec_label_pc_100006a8
  ret i32 %arg4

dec_label_pc_10000700:                            ; preds = %dec_label_pc_100006d4, %dec_label_pc_100006c0
  %v0_10000700 = phi i32 [ %v0_100006c0, %dec_label_pc_100006c0 ], [ %v0_100006d4, %dec_label_pc_100006d4 ]
  %v1_10000700 = inttoptr i32 %v0_10000700 to i32*
  %v2_10000700 = load i32, i32* %v1_10000700, align 4
  store i32 %v2_10000700, i32* @r3, align 4
  %v3_10000704 = icmp eq i32 %v2_10000700, 0
  br i1 %v3_10000704, label %dec_label_pc_100006ec, label %dec_label_pc_1000070c

dec_label_pc_1000070c:                            ; preds = %dec_label_pc_10000700
  store i32 10, i32* %r4.global-to-local, align 4
  store i32 268437268, i32* @lr, align 4
  %v2_10000710 = call i32 @function_10007d80(i32 %v2_10000700, i32 10)
  ret i32 %v2_10000710

; uselistorder directives
  uselistorder i32 %v1_100006e8, { 1, 0 }
  uselistorder i32 %v0_100006d4, { 1, 0, 2 }
  uselistorder i32 %v0_100006d4.in, { 1, 0 }
  uselistorder i32 %v0_100006c0, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_100006ec, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100006e4, { 1, 0 }
}

define i32 @function_1000072c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000072c:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v0_10000730 = load i32, i32* @lr, align 4
  store i32 %v0_10000730, i32* %r0.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  %v0_1000074c = load i32, i32* @r28, align 4
  store i32 268437336, i32* @lr, align 4
  %v2_10000754 = call i32 @function_10009460(i32 1, i32 8)
  %v3_10000758 = load i8, i8* @global_var_1001b4f8.9, align 1
  %v4_10000758 = zext i8 %v3_10000758 to i32
  store i32 %v4_10000758, i32* %r4.global-to-local, align 4
  store i32 %v2_10000754, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_1000076c = load i32, i32* @global_var_1001b4fc.10, align 4
  %v2_10000770 = inttoptr i32 %v2_10000754 to i32*
  store i32 268439924, i32* %v2_10000770, align 4
  %v0_10000774 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000774 = mul i32 %v0_10000774, 4
  store i32 %v1_10000774, i32* %r4.global-to-local, align 4
  %v0_10000778 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000778 = trunc i32 %v0_10000778 to i8
  %v2_10000778 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000778 = add i32 %v2_10000778, 4
  %v4_10000778 = inttoptr i32 %v3_10000778 to i8*
  store i8 %v1_10000778, i8* %v4_10000778, align 1
  %v0_1000077c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000077c = add i32 %v0_1000077c, 4
  store i32 %v1_1000077c, i32* %r4.global-to-local, align 4
  store i32 268437380, i32* @lr, align 4
  %v3_10000780 = call i32 @function_100095d0(i32 %v3_1000076c, i32 %v1_1000077c, i32 268439924)
  %v3_10000784 = load i8, i8* @global_var_1001b4f8.9, align 1
  %v4_10000784 = zext i8 %v3_10000784 to i32
  store i32 %v3_10000780, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001b4f9.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000794 = mul nuw nsw i32 %v4_10000784, 4
  %v0_10000798 = load i32, i32* @r28, align 4
  %v3_10000798 = add i32 %v1_10000794, %v3_10000780
  %v4_10000798 = inttoptr i32 %v3_10000798 to i32*
  store i32 %v0_10000798, i32* %v4_10000798, align 4
  %v0_100007a0 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100007a0, i32* @global_var_1001b4fc.10, align 4
  %v0_100007a4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100007a4 = trunc i32 %v0_100007a4 to i8
  store i8 %v1_100007a4, i8* @global_var_1001b4f8.9, align 1
  store i32 268437420, i32* @lr, align 4
  %v2_100007a8 = call i32 @function_10009460(i32 1, i32 8)
  %v3_100007ac = load i8, i8* @global_var_1001b4f8.9, align 1
  %v4_100007ac = zext i8 %v3_100007ac to i32
  store i32 %v4_100007ac, i32* %r4.global-to-local, align 4
  store i32 %v2_100007a8, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_100007c0 = load i32, i32* @global_var_1001b4fc.10, align 4
  %v2_100007c4 = inttoptr i32 %v2_100007a8 to i32*
  store i32 268444004, i32* %v2_100007c4, align 4
  %v0_100007c8 = load i32, i32* %r4.global-to-local, align 4
  %v1_100007c8 = mul i32 %v0_100007c8, 4
  store i32 %v1_100007c8, i32* %r4.global-to-local, align 4
  %v0_100007cc = load i32, i32* %r0.global-to-local, align 4
  %v1_100007cc = trunc i32 %v0_100007cc to i8
  %v2_100007cc = load i32, i32* %r28.global-to-local, align 4
  %v3_100007cc = add i32 %v2_100007cc, 4
  %v4_100007cc = inttoptr i32 %v3_100007cc to i8*
  store i8 %v1_100007cc, i8* %v4_100007cc, align 1
  %v0_100007d0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100007d0 = add i32 %v0_100007d0, 4
  store i32 %v1_100007d0, i32* %r4.global-to-local, align 4
  store i32 268437464, i32* @lr, align 4
  %v3_100007d4 = call i32 @function_100095d0(i32 %v3_100007c0, i32 %v1_100007d0, i32 268444004)
  %v3_100007d8 = load i8, i8* @global_var_1001b4f8.9, align 1
  %v4_100007d8 = zext i8 %v3_100007d8 to i32
  store i32 %v3_100007d4, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001b4f9.13 to i32), i32* %r0.global-to-local, align 4
  %v1_100007e8 = mul nuw nsw i32 %v4_100007d8, 4
  %v0_100007ec = load i32, i32* @r28, align 4
  %v3_100007ec = add i32 %v1_100007e8, %v3_100007d4
  %v4_100007ec = inttoptr i32 %v3_100007ec to i32*
  store i32 %v0_100007ec, i32* %v4_100007ec, align 4
  %v0_100007f4 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100007f4, i32* @global_var_1001b4fc.10, align 4
  %v0_100007f8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100007f8 = trunc i32 %v0_100007f8 to i8
  store i8 %v1_100007f8, i8* @global_var_1001b4f8.9, align 1
  store i32 268437504, i32* @lr, align 4
  %v2_100007fc = call i32 @function_10009460(i32 1, i32 8)
  %v3_10000800 = load i8, i8* @global_var_1001b4f8.9, align 1
  %v4_10000800 = zext i8 %v3_10000800 to i32
  store i32 %v4_10000800, i32* %r4.global-to-local, align 4
  store i32 %v2_100007fc, i32* %r28.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_10000814 = load i32, i32* @global_var_1001b4fc.10, align 4
  %v2_10000818 = inttoptr i32 %v2_100007fc to i32*
  store i32 268444996, i32* %v2_10000818, align 4
  %v0_1000081c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000081c = mul i32 %v0_1000081c, 4
  store i32 %v1_1000081c, i32* %r4.global-to-local, align 4
  %v0_10000820 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000820 = trunc i32 %v0_10000820 to i8
  %v2_10000820 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000820 = add i32 %v2_10000820, 4
  %v4_10000820 = inttoptr i32 %v3_10000820 to i8*
  store i8 %v1_10000820, i8* %v4_10000820, align 1
  %v0_10000824 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000824 = add i32 %v0_10000824, 4
  store i32 %v1_10000824, i32* %r4.global-to-local, align 4
  store i32 268437548, i32* @lr, align 4
  %v3_10000828 = call i32 @function_100095d0(i32 %v3_10000814, i32 %v1_10000824, i32 268444996)
  %v3_1000082c = load i8, i8* @global_var_1001b4f8.9, align 1
  %v4_1000082c = zext i8 %v3_1000082c to i32
  store i32 %v3_10000828, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001b4f9.13 to i32), i32* %r0.global-to-local, align 4
  %v1_1000083c = mul nuw nsw i32 %v4_1000082c, 4
  %v0_10000840 = load i32, i32* @r28, align 4
  %v3_10000840 = add i32 %v1_1000083c, %v3_10000828
  %v4_10000840 = inttoptr i32 %v3_10000840 to i32*
  store i32 %v0_10000840, i32* %v4_10000840, align 4
  %v0_10000848 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000848, i32* @global_var_1001b4fc.10, align 4
  %v0_1000084c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000084c = trunc i32 %v0_1000084c to i8
  store i8 %v1_1000084c, i8* @global_var_1001b4f8.9, align 1
  store i32 268437588, i32* @lr, align 4
  %v2_10000850 = call i32 @function_10009460(i32 1, i32 8)
  %v3_10000854 = load i8, i8* @global_var_1001b4f8.9, align 1
  %v4_10000854 = zext i8 %v3_10000854 to i32
  store i32 %v4_10000854, i32* %r4.global-to-local, align 4
  store i32 %v2_10000850, i32* %r28.global-to-local, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v3_10000868 = load i32, i32* @global_var_1001b4fc.10, align 4
  %v2_1000086c = inttoptr i32 %v2_10000850 to i32*
  store i32 268438276, i32* %v2_1000086c, align 4
  %v0_10000870 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000870 = mul i32 %v0_10000870, 4
  store i32 %v1_10000870, i32* %r4.global-to-local, align 4
  %v0_10000874 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000874 = trunc i32 %v0_10000874 to i8
  %v2_10000874 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000874 = add i32 %v2_10000874, 4
  %v4_10000874 = inttoptr i32 %v3_10000874 to i8*
  store i8 %v1_10000874, i8* %v4_10000874, align 1
  %v0_10000878 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000878 = add i32 %v0_10000878, 4
  store i32 %v1_10000878, i32* %r4.global-to-local, align 4
  store i32 268437632, i32* @lr, align 4
  %v3_1000087c = call i32 @function_100095d0(i32 %v3_10000868, i32 %v1_10000878, i32 268438276)
  %v3_10000880 = load i8, i8* @global_var_1001b4f8.9, align 1
  %v4_10000880 = zext i8 %v3_10000880 to i32
  store i32 %v3_1000087c, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001b4f9.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000890 = mul nuw nsw i32 %v4_10000880, 4
  %v0_10000894 = load i32, i32* @r28, align 4
  %v3_10000894 = add i32 %v1_10000890, %v3_1000087c
  %v4_10000894 = inttoptr i32 %v3_10000894 to i32*
  store i32 %v0_10000894, i32* %v4_10000894, align 4
  %v0_1000089c = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000089c, i32* @global_var_1001b4fc.10, align 4
  %v0_100008a0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100008a0 = trunc i32 %v0_100008a0 to i8
  store i8 %v1_100008a0, i8* @global_var_1001b4f8.9, align 1
  store i32 268437672, i32* @lr, align 4
  %v2_100008a4 = call i32 @function_10009460(i32 1, i32 8)
  %v3_100008a8 = load i8, i8* @global_var_1001b4f8.9, align 1
  %v4_100008a8 = zext i8 %v3_100008a8 to i32
  store i32 %v4_100008a8, i32* %r4.global-to-local, align 4
  store i32 %v2_100008a4, i32* %r28.global-to-local, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  %v3_100008bc = load i32, i32* @global_var_1001b4fc.10, align 4
  %v2_100008c0 = inttoptr i32 %v2_100008a4 to i32*
  store i32 268451368, i32* %v2_100008c0, align 4
  %v0_100008c4 = load i32, i32* %r4.global-to-local, align 4
  %v1_100008c4 = mul i32 %v0_100008c4, 4
  store i32 %v1_100008c4, i32* %r4.global-to-local, align 4
  %v0_100008c8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100008c8 = trunc i32 %v0_100008c8 to i8
  %v2_100008c8 = load i32, i32* %r28.global-to-local, align 4
  %v3_100008c8 = add i32 %v2_100008c8, 4
  %v4_100008c8 = inttoptr i32 %v3_100008c8 to i8*
  store i8 %v1_100008c8, i8* %v4_100008c8, align 1
  %v0_100008cc = load i32, i32* %r4.global-to-local, align 4
  %v1_100008cc = add i32 %v0_100008cc, 4
  store i32 %v1_100008cc, i32* %r4.global-to-local, align 4
  store i32 268437716, i32* @lr, align 4
  %v3_100008d0 = call i32 @function_100095d0(i32 %v3_100008bc, i32 %v1_100008cc, i32 268451368)
  %v3_100008d4 = load i8, i8* @global_var_1001b4f8.9, align 1
  %v4_100008d4 = zext i8 %v3_100008d4 to i32
  store i32 %v3_100008d0, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001b4f9.13 to i32), i32* %r0.global-to-local, align 4
  %v1_100008e4 = mul nuw nsw i32 %v4_100008d4, 4
  %v0_100008e8 = load i32, i32* @r28, align 4
  %v3_100008e8 = add i32 %v1_100008e4, %v3_100008d0
  %v4_100008e8 = inttoptr i32 %v3_100008e8 to i32*
  store i32 %v0_100008e8, i32* %v4_100008e8, align 4
  %v0_100008f0 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100008f0, i32* @global_var_1001b4fc.10, align 4
  %v0_100008f4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100008f4 = trunc i32 %v0_100008f4 to i8
  store i8 %v1_100008f4, i8* @global_var_1001b4f8.9, align 1
  store i32 268437756, i32* @lr, align 4
  %v2_100008f8 = call i32 @function_10009460(i32 1, i32 8)
  %v3_100008fc = load i8, i8* @global_var_1001b4f8.9, align 1
  %v4_100008fc = zext i8 %v3_100008fc to i32
  store i32 %v4_100008fc, i32* %r4.global-to-local, align 4
  store i32 %v2_100008f8, i32* %r28.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v3_10000910 = load i32, i32* @global_var_1001b4fc.10, align 4
  %v2_10000914 = inttoptr i32 %v2_100008f8 to i32*
  store i32 268449860, i32* %v2_10000914, align 4
  %v0_10000918 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000918 = mul i32 %v0_10000918, 4
  store i32 %v1_10000918, i32* %r4.global-to-local, align 4
  %v0_1000091c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000091c = trunc i32 %v0_1000091c to i8
  %v2_1000091c = load i32, i32* %r28.global-to-local, align 4
  %v3_1000091c = add i32 %v2_1000091c, 4
  %v4_1000091c = inttoptr i32 %v3_1000091c to i8*
  store i8 %v1_1000091c, i8* %v4_1000091c, align 1
  %v0_10000920 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000920 = add i32 %v0_10000920, 4
  store i32 %v1_10000920, i32* %r4.global-to-local, align 4
  store i32 268437800, i32* @lr, align 4
  %v3_10000924 = call i32 @function_100095d0(i32 %v3_10000910, i32 %v1_10000920, i32 268449860)
  %v3_10000928 = load i8, i8* @global_var_1001b4f8.9, align 1
  %v4_10000928 = zext i8 %v3_10000928 to i32
  store i32 %v3_10000924, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001b4f9.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000938 = mul nuw nsw i32 %v4_10000928, 4
  %v0_1000093c = load i32, i32* @r28, align 4
  %v3_1000093c = add i32 %v1_10000938, %v3_10000924
  %v4_1000093c = inttoptr i32 %v3_1000093c to i32*
  store i32 %v0_1000093c, i32* %v4_1000093c, align 4
  %v0_10000944 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000944, i32* @global_var_1001b4fc.10, align 4
  %v0_10000948 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000948 = trunc i32 %v0_10000948 to i8
  store i8 %v1_10000948, i8* @global_var_1001b4f8.9, align 1
  store i32 268437840, i32* @lr, align 4
  %v2_1000094c = call i32 @function_10009460(i32 1, i32 8)
  %v3_10000950 = load i8, i8* @global_var_1001b4f8.9, align 1
  %v4_10000950 = zext i8 %v3_10000950 to i32
  store i32 %v4_10000950, i32* %r4.global-to-local, align 4
  store i32 %v2_1000094c, i32* %r28.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v3_10000964 = load i32, i32* @global_var_1001b4fc.10, align 4
  %v2_10000968 = inttoptr i32 %v2_1000094c to i32*
  store i32 268448252, i32* %v2_10000968, align 4
  %v0_1000096c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000096c = mul i32 %v0_1000096c, 4
  store i32 %v1_1000096c, i32* %r4.global-to-local, align 4
  %v0_10000970 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000970 = trunc i32 %v0_10000970 to i8
  %v2_10000970 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000970 = add i32 %v2_10000970, 4
  %v4_10000970 = inttoptr i32 %v3_10000970 to i8*
  store i8 %v1_10000970, i8* %v4_10000970, align 1
  %v0_10000974 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000974 = add i32 %v0_10000974, 4
  store i32 %v1_10000974, i32* %r4.global-to-local, align 4
  store i32 268437884, i32* @lr, align 4
  %v3_10000978 = call i32 @function_100095d0(i32 %v3_10000964, i32 %v1_10000974, i32 268448252)
  %v3_1000097c = load i8, i8* @global_var_1001b4f8.9, align 1
  %v4_1000097c = zext i8 %v3_1000097c to i32
  store i32 %v3_10000978, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001b4f9.13 to i32), i32* %r0.global-to-local, align 4
  %v1_1000098c = mul nuw nsw i32 %v4_1000097c, 4
  %v0_10000990 = load i32, i32* @r28, align 4
  %v3_10000990 = add i32 %v1_1000098c, %v3_10000978
  %v4_10000990 = inttoptr i32 %v3_10000990 to i32*
  store i32 %v0_10000990, i32* %v4_10000990, align 4
  %v0_10000998 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000998, i32* @global_var_1001b4fc.10, align 4
  %v0_1000099c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000099c = trunc i32 %v0_1000099c to i8
  store i8 %v1_1000099c, i8* @global_var_1001b4f8.9, align 1
  store i32 268437924, i32* @lr, align 4
  %v2_100009a0 = call i32 @function_10009460(i32 1, i32 8)
  %v3_100009a4 = load i8, i8* @global_var_1001b4f8.9, align 1
  %v4_100009a4 = zext i8 %v3_100009a4 to i32
  store i32 %v4_100009a4, i32* %r4.global-to-local, align 4
  store i32 %v2_100009a0, i32* %r28.global-to-local, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v3_100009b8 = load i32, i32* @global_var_1001b4fc.10, align 4
  %v2_100009bc = inttoptr i32 %v2_100009a0 to i32*
  store i32 268446644, i32* %v2_100009bc, align 4
  %v0_100009c0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100009c0 = mul i32 %v0_100009c0, 4
  store i32 %v1_100009c0, i32* %r4.global-to-local, align 4
  %v0_100009c4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100009c4 = trunc i32 %v0_100009c4 to i8
  %v2_100009c4 = load i32, i32* %r28.global-to-local, align 4
  %v3_100009c4 = add i32 %v2_100009c4, 4
  %v4_100009c4 = inttoptr i32 %v3_100009c4 to i8*
  store i8 %v1_100009c4, i8* %v4_100009c4, align 1
  %v0_100009c8 = load i32, i32* %r4.global-to-local, align 4
  %v1_100009c8 = add i32 %v0_100009c8, 4
  store i32 %v1_100009c8, i32* %r4.global-to-local, align 4
  store i32 268437968, i32* @lr, align 4
  %v3_100009cc = call i32 @function_100095d0(i32 %v3_100009b8, i32 %v1_100009c8, i32 268446644)
  %v3_100009d0 = load i8, i8* @global_var_1001b4f8.9, align 1
  %v4_100009d0 = zext i8 %v3_100009d0 to i32
  store i32 %v3_100009cc, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001b4f9.13 to i32), i32* %r0.global-to-local, align 4
  %v1_100009e0 = mul nuw nsw i32 %v4_100009d0, 4
  %v0_100009e4 = load i32, i32* @r28, align 4
  %v3_100009e4 = add i32 %v1_100009e0, %v3_100009cc
  %v4_100009e4 = inttoptr i32 %v3_100009e4 to i32*
  store i32 %v0_100009e4, i32* %v4_100009e4, align 4
  %v0_100009ec = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100009ec, i32* @global_var_1001b4fc.10, align 4
  %v0_100009f0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100009f0 = trunc i32 %v0_100009f0 to i8
  store i8 %v1_100009f0, i8* @global_var_1001b4f8.9, align 1
  store i32 268438008, i32* @lr, align 4
  %v2_100009f4 = call i32 @function_10009460(i32 1, i32 8)
  %v3_100009f8 = load i8, i8* @global_var_1001b4f8.9, align 1
  %v4_100009f8 = zext i8 %v3_100009f8 to i32
  store i32 %v4_100009f8, i32* %r4.global-to-local, align 4
  store i32 %v2_100009f4, i32* %r28.global-to-local, align 4
  store i32 6, i32* %r0.global-to-local, align 4
  %v3_10000a0c = load i32, i32* @global_var_1001b4fc.10, align 4
  %v2_10000a10 = inttoptr i32 %v2_100009f4 to i32*
  store i32 268442640, i32* %v2_10000a10, align 4
  %v0_10000a14 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000a14 = mul i32 %v0_10000a14, 4
  store i32 %v1_10000a14, i32* %r4.global-to-local, align 4
  %v0_10000a18 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000a18 = trunc i32 %v0_10000a18 to i8
  %v2_10000a18 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000a18 = add i32 %v2_10000a18, 4
  %v4_10000a18 = inttoptr i32 %v3_10000a18 to i8*
  store i8 %v1_10000a18, i8* %v4_10000a18, align 1
  %v0_10000a1c = load i32, i32* %r4.global-to-local, align 4
  %v1_10000a1c = add i32 %v0_10000a1c, 4
  store i32 %v1_10000a1c, i32* %r4.global-to-local, align 4
  store i32 268438052, i32* @lr, align 4
  %v3_10000a20 = call i32 @function_100095d0(i32 %v3_10000a0c, i32 %v1_10000a1c, i32 268442640)
  %v3_10000a24 = load i8, i8* @global_var_1001b4f8.9, align 1
  %v4_10000a24 = zext i8 %v3_10000a24 to i32
  store i32 %v3_10000a20, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001b4f9.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000a34 = mul nuw nsw i32 %v4_10000a24, 4
  %v0_10000a38 = load i32, i32* @r28, align 4
  %v3_10000a38 = add i32 %v1_10000a34, %v3_10000a20
  %v4_10000a38 = inttoptr i32 %v3_10000a38 to i32*
  store i32 %v0_10000a38, i32* %v4_10000a38, align 4
  %v0_10000a40 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000a40, i32* @global_var_1001b4fc.10, align 4
  %v0_10000a44 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000a44 = trunc i32 %v0_10000a44 to i8
  store i8 %v1_10000a44, i8* @global_var_1001b4f8.9, align 1
  store i32 268438092, i32* @lr, align 4
  %v2_10000a48 = call i32 @function_10009460(i32 1, i32 8)
  %v3_10000a4c = load i8, i8* @global_var_1001b4f8.9, align 1
  %v4_10000a4c = zext i8 %v3_10000a4c to i32
  store i32 %v4_10000a4c, i32* %r4.global-to-local, align 4
  store i32 %v2_10000a48, i32* %r28.global-to-local, align 4
  store i32 7, i32* %r0.global-to-local, align 4
  %v3_10000a60 = load i32, i32* @global_var_1001b4fc.10, align 4
  %v2_10000a64 = inttoptr i32 %v2_10000a48 to i32*
  store i32 268441168, i32* %v2_10000a64, align 4
  %v0_10000a68 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000a68 = mul i32 %v0_10000a68, 4
  store i32 %v1_10000a68, i32* %r4.global-to-local, align 4
  %v0_10000a6c = load i32, i32* %r0.global-to-local, align 4
  %v1_10000a6c = trunc i32 %v0_10000a6c to i8
  %v2_10000a6c = load i32, i32* %r28.global-to-local, align 4
  %v3_10000a6c = add i32 %v2_10000a6c, 4
  %v4_10000a6c = inttoptr i32 %v3_10000a6c to i8*
  store i8 %v1_10000a6c, i8* %v4_10000a6c, align 1
  %v0_10000a70 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000a70 = add i32 %v0_10000a70, 4
  store i32 %v1_10000a70, i32* %r4.global-to-local, align 4
  store i32 268438136, i32* @lr, align 4
  %v3_10000a74 = call i32 @function_100095d0(i32 %v3_10000a60, i32 %v1_10000a70, i32 268441168)
  %v3_10000a78 = load i8, i8* @global_var_1001b4f8.9, align 1
  %v4_10000a78 = zext i8 %v3_10000a78 to i32
  store i32 %v3_10000a74, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001b4f9.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000a88 = mul nuw nsw i32 %v4_10000a78, 4
  %v0_10000a8c = load i32, i32* @r28, align 4
  %v3_10000a8c = add i32 %v1_10000a88, %v3_10000a74
  %v4_10000a8c = inttoptr i32 %v3_10000a8c to i32*
  store i32 %v0_10000a8c, i32* %v4_10000a8c, align 4
  %v0_10000a94 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000a94 = trunc i32 %v0_10000a94 to i8
  store i8 %v1_10000a94, i8* @global_var_1001b4f8.9, align 1
  %v0_10000a98 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000a98, i32* @global_var_1001b4fc.10, align 4
  store i32 268438176, i32* @lr, align 4
  %v2_10000a9c = call i32 @function_10009460(i32 1, i32 8)
  %v3_10000aa0 = load i8, i8* @global_var_1001b4f8.9, align 1
  %v4_10000aa0 = zext i8 %v3_10000aa0 to i32
  store i32 %v4_10000aa0, i32* %r4.global-to-local, align 4
  store i32 %v2_10000a9c, i32* %r28.global-to-local, align 4
  store i32 9, i32* %r0.global-to-local, align 4
  %v3_10000ab4 = load i32, i32* @global_var_1001b4fc.10, align 4
  %v2_10000ab8 = inttoptr i32 %v2_10000a9c to i32*
  store i32 268439100, i32* %v2_10000ab8, align 4
  %v0_10000abc = load i32, i32* %r4.global-to-local, align 4
  %v1_10000abc = mul i32 %v0_10000abc, 4
  store i32 %v1_10000abc, i32* %r4.global-to-local, align 4
  %v0_10000ac0 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000ac0 = trunc i32 %v0_10000ac0 to i8
  %v2_10000ac0 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000ac0 = add i32 %v2_10000ac0, 4
  %v4_10000ac0 = inttoptr i32 %v3_10000ac0 to i8*
  store i8 %v1_10000ac0, i8* %v4_10000ac0, align 1
  %v0_10000ac4 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000ac4 = add i32 %v0_10000ac4, 4
  store i32 %v1_10000ac4, i32* %r4.global-to-local, align 4
  store i32 268438220, i32* @lr, align 4
  %v3_10000ac8 = call i32 @function_100095d0(i32 %v3_10000ab4, i32 %v1_10000ac4, i32 268439100)
  %v3_10000acc = load i8, i8* @global_var_1001b4f8.9, align 1
  %v4_10000acc = zext i8 %v3_10000acc to i32
  store i32 %v3_10000ac8, i32* @global_var_1001b4fc.10, align 4
  store i32 ptrtoint (i8* @global_var_1001b4f9.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000ad8 = mul nuw nsw i32 %v4_10000acc, 4
  %v0_10000adc = load i32, i32* @r28, align 4
  %v3_10000adc = add i32 %v1_10000ad8, %v3_10000ac8
  %v4_10000adc = inttoptr i32 %v3_10000adc to i32*
  store i32 %v0_10000adc, i32* %v4_10000adc, align 4
  %v0_10000ae4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000ae4 = trunc i32 %v0_10000ae4 to i8
  store i8 %v1_10000ae4, i8* @global_var_1001b4f8.9, align 1
  store i32 %v0_10000730, i32* %r0.global-to-local, align 4
  store i32 %v0_1000074c, i32* @r28, align 4
  ret i32 1

; uselistorder directives
  uselistorder i32 ptrtoint (i8* @global_var_1001b4f9.13 to i32), { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_1001b4f8.9, { 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_10000b04(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10000b04:
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v0_10000b0c = call i32 @__asm_mfcr()
  store i32 %v0_10000b0c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r25.global-to-local, align 4
  %v0_10000b38 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10000b40 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 268438372, i32* @lr, align 4
  %v2_10000b60 = call i32 @function_10009460(i32 4, i32 4)
  store i32 %v2_10000b60, i32* %r27.global-to-local, align 4
  %v0_10000b6c = load i32, i32* @r30, align 4
  store i32 %v0_10000b6c, i32* %r3.global-to-local, align 4
  store i32 268438388, i32* @lr, align 4
  %v2_10000b70 = call i32 @function_10009460(i32 %v0_10000b6c, i32 4)
  %v0_10000b78 = load i32, i32* @r28, align 4
  store i32 %v2_10000b70, i32* %r26.global-to-local, align 4
  %v0_10000b88 = load i32, i32* @r29, align 4
  store i32 %v0_10000b88, i32* %r3.global-to-local, align 4
  store i32 268438416, i32* @lr, align 4
  %v4_10000b8c = inttoptr i32 %v0_10000b78 to i32*
  %v5_10000b8c = call i32 @function_100006a8(i32 %v0_10000b88, i32* %v4_10000b8c, i32 7, i32 65535)
  %v0_10000b98 = load i32, i32* @r28, align 4
  %v1_10000ba0 = urem i32 %v5_10000b8c, 65536
  store i32 %v1_10000ba0, i32* %r21.global-to-local, align 4
  %v0_10000ba4 = load i32, i32* @r29, align 4
  store i32 %v0_10000ba4, i32* %r3.global-to-local, align 4
  store i32 268438444, i32* @lr, align 4
  %v4_10000ba8 = inttoptr i32 %v0_10000b98 to i32*
  %v5_10000ba8 = call i32 @function_100006a8(i32 %v0_10000ba4, i32* %v4_10000ba8, i32 6, i32 65535)
  %v0_10000bac = load i32, i32* @r28, align 4
  %v1_10000bb0 = urem i32 %v5_10000ba8, 65536
  store i32 %v1_10000bb0, i32* %r22.global-to-local, align 4
  %v0_10000bbc = load i32, i32* @r29, align 4
  store i32 %v0_10000bbc, i32* %r3.global-to-local, align 4
  store i32 268438468, i32* @lr, align 4
  %v4_10000bc0 = inttoptr i32 %v0_10000bac to i32*
  %v5_10000bc0 = call i32 @function_100006a8(i32 %v0_10000bbc, i32* %v4_10000bc0, i32 0, i32 512)
  %v0_10000bc4 = load i32, i32* @r28, align 4
  %v1_10000bc8 = urem i32 %v5_10000bc0, 65536
  store i32 %v1_10000bc8, i32* @r31, align 4
  %v0_10000bd0 = load i32, i32* @r29, align 4
  store i32 %v0_10000bd0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10000bdc.14 to i32), i32* @lr, align 4
  %v4_10000bd8 = inttoptr i32 %v0_10000bc4 to i32*
  %v5_10000bd8 = call i32 @function_100006a8(i32 %v0_10000bd0, i32* %v4_10000bd8, i32 1, i32 1)
  store i32 %v5_10000bd8, i32* %r3.global-to-local, align 4
  %v0_10000be8 = load i32, i32* %r22.global-to-local, align 4
  %v4_10000be8 = icmp eq i32 %v0_10000be8, 65535
  %v1_10000bf0 = urem i32 %v5_10000bd8, 256
  store i32 %v1_10000bf0, i32* %r23.global-to-local, align 4
  store i32 0, i32* %stack_var_-72, align 4
  br i1 %v4_10000be8, label %dec_label_pc_10000dec, label %dec_label_pc_10000c04

dec_label_pc_10000c04:                            ; preds = %dec_label_pc_10000b04, %dec_label_pc_10000dec
  %v0_10000c04 = load i32, i32* @r30, align 4
  %v1_10000c04 = icmp slt i32 %v0_10000c04, 0
  %v3_10000c04 = icmp eq i32 %v0_10000c04, 0
  store i1 %v1_10000c04, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10000c04, i1* %cr4_eq.global-to-local, align 1
  %tmp38 = icmp slt i32 %v0_10000c04, 1
  br i1 %tmp38, label %dec_label_pc_10000cc4, label %dec_label_pc_10000c0c

dec_label_pc_10000c0c:                            ; preds = %dec_label_pc_10000c04
  %v0_10000c10 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10000c10, i32* @r28, align 4
  store i32 0, i32* %r24.global-to-local, align 4
  %v0_10000c1c = load i32, i32* %r21.global-to-local, align 4
  %v4_10000c1c = icmp eq i32 %v0_10000c1c, 65535
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 2, i32* %r20.global-to-local, align 4
  %v2_10000d6c = ptrtoint i32* %stack_var_-72 to i32
  br i1 %v4_10000c1c, label %dec_label_pc_10000d3c, label %dec_label_pc_10000c30

dec_label_pc_10000c30:                            ; preds = %dec_label_pc_10000c0c, %dec_label_pc_10000ca4
  %v0_10000c3c = phi i32 [ %v0_10000cb8, %dec_label_pc_10000ca4 ], [ 0, %dec_label_pc_10000c0c ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_10000c3c = add i32 %v0_10000c3c, 1
  store i32 %v1_10000c3c, i32* %r24.global-to-local, align 4
  store i32 268438596, i32* @lr, align 4
  %v2_10000c40 = call i32 @function_10009460(i32 65535, i32 1)
  %v0_10000c44 = load i32, i32* %r21.global-to-local, align 4
  %v1_10000c44 = trunc i32 %v0_10000c44 to i16
  %v2_10000c44 = load i32, i32* @r28, align 4
  %v3_10000c44 = add i32 %v2_10000c44, 2
  %v4_10000c44 = inttoptr i32 %v3_10000c44 to i16*
  store i16 %v1_10000c44, i16* %v4_10000c44, align 2
  %v1_10000c48 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000c48 = load i32, i32* %r27.global-to-local, align 4
  %v3_10000c48 = add i32 %v2_10000c48, %v1_10000c48
  %v4_10000c48 = inttoptr i32 %v3_10000c48 to i32*
  store i32 %v2_10000c40, i32* %v4_10000c48, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268438620, i32* @lr, align 4
  %v3_10000c58 = call i32 @function_10009104(i32 2, i32 2, i32 17)
  store i32 %v3_10000c58, i32* %r3.global-to-local, align 4
  %v3_10000c60 = icmp eq i32 %v3_10000c58, -1
  %v1_10000c68 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000c68 = load i32, i32* %r26.global-to-local, align 4
  %v3_10000c68 = add i32 %v2_10000c68, %v1_10000c68
  %v4_10000c68 = inttoptr i32 %v3_10000c68 to i32*
  store i32 %v3_10000c58, i32* %v4_10000c68, align 4
  br i1 %v3_10000c60, label %dec_label_pc_10000da0, label %dec_label_pc_10000c70

dec_label_pc_10000c70:                            ; preds = %dec_label_pc_10000c30
  %v0_10000c70 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000c70, i32* %stack_var_-72, align 4
  store i32 268438656, i32* @lr, align 4
  %v0_10000c7c = load i32, i32* %r3.global-to-local, align 4
  %v3_10000c7c = call i32 @function_10008f00(i32 %v0_10000c7c, i32 %v2_10000d6c, i32 16)
  store i32 %v3_10000c7c, i32* %r3.global-to-local, align 4
  %v0_10000c80 = load i32, i32* @r28, align 4
  %v1_10000c80 = add i32 %v0_10000c80, 20
  %v2_10000c80 = inttoptr i32 %v1_10000c80 to i8*
  %v3_10000c80 = load i8, i8* %v2_10000c80, align 1
  %v2_10000c84 = icmp ugt i8 %v3_10000c80, 31
  br i1 %v2_10000c84, label %dec_label_pc_10000ca4, label %dec_label_pc_10000c8c

dec_label_pc_10000c8c:                            ; preds = %dec_label_pc_10000c70
  %v1_10000c8c = add i32 %v0_10000c80, 16
  %v2_10000c8c = inttoptr i32 %v1_10000c8c to i32*
  %v3_10000c8c = load i32, i32* %v2_10000c8c, align 4
  store i32 %v3_10000c8c, i32* %r29.global-to-local, align 4
  %v0_10000c90 = call i32 @function_10005928()
  store i32 %v0_10000c90, i32* %r3.global-to-local, align 4
  %v0_10000c94 = load i32, i32* @r28, align 4
  %v1_10000c94 = add i32 %v0_10000c94, 20
  %v2_10000c94 = inttoptr i32 %v1_10000c94 to i8*
  %v3_10000c94 = load i8, i8* %v2_10000c94, align 1
  %tmp = urem i8 %v3_10000c94, 64
  %v2_10000c98 = zext i8 %tmp to i32
  %v3_10000c98 = lshr i32 %v0_10000c90, %v2_10000c98
  %v0_10000c9c = load i32, i32* %r29.global-to-local, align 4
  %v2_10000c9c = add i32 %v3_10000c98, %v0_10000c9c
  store i32 %v2_10000c9c, i32* %r3.global-to-local, align 4
  %v2_10000ca0 = add i32 %v0_10000c94, 4
  %v3_10000ca0 = inttoptr i32 %v2_10000ca0 to i32*
  store i32 %v2_10000c9c, i32* %v3_10000ca0, align 4
  %v0_10000ca8.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10000ca4

dec_label_pc_10000ca4:                            ; preds = %dec_label_pc_10000c70, %dec_label_pc_10000c8c
  %v0_10000ca8 = phi i32 [ %v0_10000c80, %dec_label_pc_10000c70 ], [ %v0_10000ca8.pre, %dec_label_pc_10000c8c ]
  %v0_10000ca4 = load i32, i32* %r25.global-to-local, align 4
  %v1_10000ca4 = load i32, i32* %r26.global-to-local, align 4
  %v2_10000ca4 = add i32 %v1_10000ca4, %v0_10000ca4
  %v3_10000ca4 = inttoptr i32 %v2_10000ca4 to i32*
  %v4_10000ca4 = load i32, i32* %v3_10000ca4, align 4
  store i32 %v4_10000ca4, i32* %r3.global-to-local, align 4
  %v1_10000cb0 = add i32 %v0_10000ca4, 4
  store i32 %v1_10000cb0, i32* %r25.global-to-local, align 4
  store i32 268438712, i32* @lr, align 4
  %v3_10000cb4 = call i32 @function_10008f34(i32 %v4_10000ca4, i32 %v0_10000ca8, i32 16)
  store i32 %v3_10000cb4, i32* %r3.global-to-local, align 4
  %v0_10000cb8 = load i32, i32* %r24.global-to-local, align 4
  %v1_10000cb8 = load i32, i32* @r30, align 4
  %v4_10000cb8 = icmp eq i32 %v0_10000cb8, %v1_10000cb8
  %v0_10000cbc = load i32, i32* @r28, align 4
  %v1_10000cbc = add i32 %v0_10000cbc, 24
  store i32 %v1_10000cbc, i32* @r28, align 4
  br i1 %v4_10000cb8, label %dec_label_pc_10000cc4, label %dec_label_pc_10000c30

dec_label_pc_10000cc4:                            ; preds = %dec_label_pc_10000ca4, %dec_label_pc_10000d1c, %dec_label_pc_10000c04
  %v0_10000cc4 = load i32, i32* %r23.global-to-local, align 4
  %v3_10000cc4 = icmp eq i32 %v0_10000cc4, 0
  store i1 %v3_10000cc4, i1* %cr3_eq.global-to-local, align 1
  %v0_10000cc8.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10000cc8.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10000cc8.outer

dec_label_pc_10000cc8.outer:                      ; preds = %dec_label_pc_10000cfc, %dec_label_pc_10000e34, %dec_label_pc_10000cc4
  %v1_10000cc8.ph39 = phi i1 [ %v1_10000cc8.pre, %dec_label_pc_10000cc4 ], [ %v1_10000e34, %dec_label_pc_10000e34 ], [ %v1_10000cfc, %dec_label_pc_10000cfc ]
  %v0_10000cc8.ph40 = phi i1 [ %v0_10000cc8.pre, %dec_label_pc_10000cc4 ], [ %v0_10000e34, %dec_label_pc_10000e34 ], [ %v0_10000cfc, %dec_label_pc_10000cfc ]
  %v2_10000cc8 = or i1 %v1_10000cc8.ph39, %v0_10000cc8.ph40
  br label %dec_label_pc_10000cc8

dec_label_pc_10000cc8:                            ; preds = %dec_label_pc_10000cc8.outer, %dec_label_pc_10000cc8
  br i1 %v2_10000cc8, label %dec_label_pc_10000cc8, label %dec_label_pc_10000ccc

dec_label_pc_10000ccc:                            ; preds = %dec_label_pc_10000e34, %dec_label_pc_10000cfc, %dec_label_pc_10000cc8
  %v0_10000ccc = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10000ccc, label %dec_label_pc_10000cd0, label %dec_label_pc_10000df8

dec_label_pc_10000cd0:                            ; preds = %dec_label_pc_10000ccc
  store i32 0, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10000cd8

dec_label_pc_10000cd8:                            ; preds = %dec_label_pc_10000cd8.dec_label_pc_10000cd8_crit_edge, %dec_label_pc_10000cd0
  %v0_10000cdc = phi i32 [ %v0_10000cf4, %dec_label_pc_10000cd8.dec_label_pc_10000cd8_crit_edge ], [ 0, %dec_label_pc_10000cd0 ]
  %v0_10000cec = phi i32 [ %v0_10000cd8.pre, %dec_label_pc_10000cd8.dec_label_pc_10000cd8_crit_edge ], [ 0, %dec_label_pc_10000cd0 ]
  %v1_10000cd8 = load i32, i32* %r26.global-to-local, align 4
  %v2_10000cd8 = add i32 %v1_10000cd8, %v0_10000cec
  %v3_10000cd8 = inttoptr i32 %v2_10000cd8 to i32*
  %v4_10000cd8 = load i32, i32* %v3_10000cd8, align 4
  store i32 %v4_10000cd8, i32* %r3.global-to-local, align 4
  %v1_10000cdc = add i32 %v0_10000cdc, 1
  store i32 %v1_10000cdc, i32* %r28.global-to-local, align 4
  %v1_10000ce0 = load i32, i32* %r27.global-to-local, align 4
  %v2_10000ce0 = add i32 %v1_10000ce0, %v0_10000cec
  %v3_10000ce0 = inttoptr i32 %v2_10000ce0 to i32*
  %v4_10000ce0 = load i32, i32* %v3_10000ce0, align 4
  %v0_10000ce4 = load i32, i32* @r31, align 4
  %v1_10000cec = add i32 %v0_10000cec, 4
  store i32 %v1_10000cec, i32* %r29.global-to-local, align 4
  store i32 268438772, i32* @lr, align 4
  %v4_10000cf0 = call i32 @function_10009050(i32 %v4_10000cd8, i32 %v4_10000ce0, i32 %v0_10000ce4, i32 16384)
  store i32 %v4_10000cf0, i32* %r3.global-to-local, align 4
  %v0_10000cf4 = load i32, i32* %r28.global-to-local, align 4
  %v1_10000cf4 = load i32, i32* @r30, align 4
  %v4_10000cf4 = icmp eq i32 %v0_10000cf4, %v1_10000cf4
  br i1 %v4_10000cf4, label %dec_label_pc_10000cfc, label %dec_label_pc_10000cd8.dec_label_pc_10000cd8_crit_edge

dec_label_pc_10000cd8.dec_label_pc_10000cd8_crit_edge: ; preds = %dec_label_pc_10000cd8
  %v0_10000cd8.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10000cd8

dec_label_pc_10000cfc:                            ; preds = %dec_label_pc_10000cd8
  %v0_10000cfc = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10000cfc = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10000cfc = or i1 %v0_10000cfc, %v1_10000cfc
  br i1 %v2_10000cfc, label %dec_label_pc_10000cc8.outer, label %dec_label_pc_10000ccc

dec_label_pc_10000d1c:                            ; preds = %dec_label_pc_10000d80, %dec_label_pc_10000d9c
  %v0_10000d20 = phi i32 [ %v0_10000d90, %dec_label_pc_10000d80 ], [ %v0_10000d20.pre, %dec_label_pc_10000d9c ]
  %v0_10000d1c = load i32, i32* %r25.global-to-local, align 4
  %v1_10000d1c = load i32, i32* %r26.global-to-local, align 4
  %v2_10000d1c = add i32 %v1_10000d1c, %v0_10000d1c
  %v3_10000d1c = inttoptr i32 %v2_10000d1c to i32*
  %v4_10000d1c = load i32, i32* %v3_10000d1c, align 4
  store i32 %v4_10000d1c, i32* %r3.global-to-local, align 4
  %v1_10000d28 = add i32 %v0_10000d1c, 4
  store i32 %v1_10000d28, i32* %r25.global-to-local, align 4
  store i32 268438832, i32* @lr, align 4
  %v3_10000d2c = call i32 @function_10008f34(i32 %v4_10000d1c, i32 %v0_10000d20, i32 16)
  store i32 %v3_10000d2c, i32* %r3.global-to-local, align 4
  %v0_10000d30 = load i32, i32* %r24.global-to-local, align 4
  %v1_10000d30 = load i32, i32* @r30, align 4
  %v4_10000d30 = icmp eq i32 %v0_10000d30, %v1_10000d30
  %v0_10000d34 = load i32, i32* @r28, align 4
  %v1_10000d34 = add i32 %v0_10000d34, 24
  store i32 %v1_10000d34, i32* @r28, align 4
  br i1 %v4_10000d30, label %dec_label_pc_10000cc4, label %dec_label_pc_10000d3c

dec_label_pc_10000d3c:                            ; preds = %dec_label_pc_10000c0c, %dec_label_pc_10000d1c
  %v0_10000d48 = phi i32 [ %v0_10000d30, %dec_label_pc_10000d1c ], [ 0, %dec_label_pc_10000c0c ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_10000d48 = add i32 %v0_10000d48, 1
  store i32 %v1_10000d48, i32* %r24.global-to-local, align 4
  store i32 268438864, i32* @lr, align 4
  %v2_10000d4c = call i32 @function_10009460(i32 65535, i32 1)
  store i32 %v2_10000d4c, i32* %r3.global-to-local, align 4
  %v1_10000d50 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000d50 = load i32, i32* %r27.global-to-local, align 4
  %v3_10000d50 = add i32 %v2_10000d50, %v1_10000d50
  %v4_10000d50 = inttoptr i32 %v3_10000d50 to i32*
  store i32 %v2_10000d4c, i32* %v4_10000d50, align 4
  %v0_10000d54 = call i32 @function_10005928()
  %v1_10000d54 = trunc i32 %v0_10000d54 to i16
  %v3_10000d58 = load i32, i32* @r28, align 4
  %v4_10000d58 = add i32 %v3_10000d58, 2
  %v5_10000d58 = inttoptr i32 %v4_10000d58 to i16*
  store i16 %v1_10000d54, i16* %v5_10000d58, align 2
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268438892, i32* @lr, align 4
  %v3_10000d68 = call i32 @function_10009104(i32 2, i32 2, i32 17)
  store i32 %v3_10000d68, i32* %r3.global-to-local, align 4
  %v3_10000d70 = icmp eq i32 %v3_10000d68, -1
  %v1_10000d78 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000d78 = load i32, i32* %r26.global-to-local, align 4
  %v3_10000d78 = add i32 %v2_10000d78, %v1_10000d78
  %v4_10000d78 = inttoptr i32 %v3_10000d78 to i32*
  store i32 %v3_10000d68, i32* %v4_10000d78, align 4
  br i1 %v3_10000d70, label %dec_label_pc_10000da0, label %dec_label_pc_10000d80

dec_label_pc_10000d80:                            ; preds = %dec_label_pc_10000d3c
  %v0_10000d80 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000d80, i32* %stack_var_-72, align 4
  store i32 268438928, i32* @lr, align 4
  %v0_10000d8c = load i32, i32* %r3.global-to-local, align 4
  %v3_10000d8c = call i32 @function_10008f00(i32 %v0_10000d8c, i32 %v2_10000d6c, i32 16)
  store i32 %v3_10000d8c, i32* %r3.global-to-local, align 4
  %v0_10000d90 = load i32, i32* @r28, align 4
  %v1_10000d90 = add i32 %v0_10000d90, 20
  %v2_10000d90 = inttoptr i32 %v1_10000d90 to i8*
  %v3_10000d90 = load i8, i8* %v2_10000d90, align 1
  %v2_10000d94 = icmp ugt i8 %v3_10000d90, 31
  br i1 %v2_10000d94, label %dec_label_pc_10000d1c, label %dec_label_pc_10000d9c

dec_label_pc_10000d9c:                            ; preds = %dec_label_pc_10000d80
  %v1_10000d04 = add i32 %v0_10000d90, 16
  %v2_10000d04 = inttoptr i32 %v1_10000d04 to i32*
  %v3_10000d04 = load i32, i32* %v2_10000d04, align 4
  store i32 %v3_10000d04, i32* %r29.global-to-local, align 4
  %v0_10000d08 = call i32 @function_10005928()
  store i32 %v0_10000d08, i32* %r3.global-to-local, align 4
  %v0_10000d0c = load i32, i32* @r28, align 4
  %v1_10000d0c = add i32 %v0_10000d0c, 20
  %v2_10000d0c = inttoptr i32 %v1_10000d0c to i8*
  %v3_10000d0c = load i8, i8* %v2_10000d0c, align 1
  %tmp43 = urem i8 %v3_10000d0c, 64
  %v2_10000d10 = zext i8 %tmp43 to i32
  %v3_10000d10 = lshr i32 %v0_10000d08, %v2_10000d10
  %v0_10000d14 = load i32, i32* %r29.global-to-local, align 4
  %v2_10000d14 = add i32 %v3_10000d10, %v0_10000d14
  store i32 %v2_10000d14, i32* %r3.global-to-local, align 4
  %v2_10000d18 = add i32 %v0_10000d0c, 4
  %v3_10000d18 = inttoptr i32 %v2_10000d18 to i32*
  store i32 %v2_10000d14, i32* %v3_10000d18, align 4
  %v0_10000d20.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10000d1c

dec_label_pc_10000da0:                            ; preds = %dec_label_pc_10000c30, %dec_label_pc_10000d3c
  %v1_10000db4 = call %0 @__asm_mtcrf(i32 24, i32 %v0_10000b0c)
  store i32 %v0_10000b38, i32* %r28.global-to-local, align 4
  store i32 %v0_10000b40, i32* %r29.global-to-local, align 4
  %v0_10000de8 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10000de8

dec_label_pc_10000dec:                            ; preds = %dec_label_pc_10000b04
  %v0_10000dec = call i32 @function_10005928()
  store i32 %v0_10000dec, i32* %r3.global-to-local, align 4
  %v1_10000df0 = urem i32 %v0_10000dec, 65536
  store i32 %v1_10000df0, i32* %r22.global-to-local, align 4
  br label %dec_label_pc_10000c04

dec_label_pc_10000df8:                            ; preds = %dec_label_pc_10000ccc
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10000e00

dec_label_pc_10000e00:                            ; preds = %dec_label_pc_10000e00.dec_label_pc_10000e00_crit_edge, %dec_label_pc_10000df8
  %v0_10000e08 = phi i32 [ %v0_10000e2c, %dec_label_pc_10000e00.dec_label_pc_10000e00_crit_edge ], [ 0, %dec_label_pc_10000df8 ]
  %v0_10000e00 = phi i32 [ %v0_10000e00.pre, %dec_label_pc_10000e00.dec_label_pc_10000e00_crit_edge ], [ 0, %dec_label_pc_10000df8 ]
  %v1_10000e00 = load i32, i32* %r27.global-to-local, align 4
  %v2_10000e00 = add i32 %v1_10000e00, %v0_10000e00
  %v3_10000e00 = inttoptr i32 %v2_10000e00 to i32*
  %v4_10000e00 = load i32, i32* %v3_10000e00, align 4
  store i32 %v4_10000e00, i32* @r29, align 4
  %v0_10000e04 = load i32, i32* @r31, align 4
  store i32 %v0_10000e04, i32* @r4, align 4
  %v1_10000e08 = add i32 %v0_10000e08, 1
  store i32 %v1_10000e08, i32* %r25.global-to-local, align 4
  store i32 %v4_10000e00, i32* @r3, align 4
  %v0_10000e10 = call i32 @function_10005afc()
  store i32 %v0_10000e10, i32* %r3.global-to-local, align 4
  %v0_10000e14 = load i32, i32* %r28.global-to-local, align 4
  %v1_10000e14 = load i32, i32* %r26.global-to-local, align 4
  %v2_10000e14 = add i32 %v1_10000e14, %v0_10000e14
  %v3_10000e14 = inttoptr i32 %v2_10000e14 to i32*
  %v4_10000e14 = load i32, i32* %v3_10000e14, align 4
  store i32 %v4_10000e14, i32* %r3.global-to-local, align 4
  %v0_10000e18 = load i32, i32* @r29, align 4
  %v0_10000e1c = load i32, i32* @r31, align 4
  %v1_10000e24 = add i32 %v0_10000e14, 4
  store i32 %v1_10000e24, i32* %r28.global-to-local, align 4
  store i32 268439084, i32* @lr, align 4
  %v4_10000e28 = call i32 @function_10009050(i32 %v4_10000e14, i32 %v0_10000e18, i32 %v0_10000e1c, i32 16384)
  store i32 %v4_10000e28, i32* %r3.global-to-local, align 4
  %v0_10000e2c = load i32, i32* %r25.global-to-local, align 4
  %v1_10000e2c = load i32, i32* @r30, align 4
  %v4_10000e2c = icmp eq i32 %v0_10000e2c, %v1_10000e2c
  br i1 %v4_10000e2c, label %dec_label_pc_10000e34, label %dec_label_pc_10000e00.dec_label_pc_10000e00_crit_edge

dec_label_pc_10000e00.dec_label_pc_10000e00_crit_edge: ; preds = %dec_label_pc_10000e00
  %v0_10000e00.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10000e00

dec_label_pc_10000e34:                            ; preds = %dec_label_pc_10000e00
  %v0_10000e34 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10000e34 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10000e34 = or i1 %v0_10000e34, %v1_10000e34
  br i1 %v2_10000e34, label %dec_label_pc_10000cc8.outer, label %dec_label_pc_10000ccc

; uselistorder directives
  uselistorder i1 %v1_10000e34, { 1, 0 }
  uselistorder i1 %v0_10000e34, { 1, 0 }
  uselistorder i32 %v0_10000e2c, { 1, 0 }
  uselistorder i32 %v0_10000e14, { 1, 0 }
  uselistorder i32 %v0_10000d90, { 1, 2, 0 }
  uselistorder i32 %v0_10000d1c, { 1, 0 }
  uselistorder i1 %v1_10000cfc, { 1, 0 }
  uselistorder i1 %v0_10000cfc, { 1, 0 }
  uselistorder i32 %v0_10000cf4, { 1, 0 }
  uselistorder i32 %v0_10000cec, { 2, 0, 1 }
  uselistorder i32 %v0_10000cb8, { 1, 0 }
  uselistorder i32 %v0_10000ca4, { 1, 0 }
  uselistorder i32 %v2_10000d6c, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 0, 1, 3, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 23, 6, 7, 10, 11, 12, 13, 14, 15, 8, 9, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 1, 0 }
  uselistorder i32* %r26.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r25.global-to-local, { 0, 1, 2, 6, 7, 3, 5, 4, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r24.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r21.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 2, 0, 3 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_10000da0, { 1, 0 }
  uselistorder label %dec_label_pc_10000d3c, { 1, 0 }
  uselistorder label %dec_label_pc_10000d1c, { 1, 0 }
  uselistorder label %dec_label_pc_10000cc8, { 1, 0 }
  uselistorder label %dec_label_pc_10000cc8.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000cc4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000ca4, { 1, 0 }
  uselistorder label %dec_label_pc_10000c30, { 1, 0 }
  uselistorder label %dec_label_pc_10000c04, { 1, 0 }
}

define i32 @function_10000e3c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10000e3c:
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v0_10000e44 = call i32 @__asm_mfcr()
  store i32 %v0_10000e44, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r25.global-to-local, align 4
  %v0_10000e70 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10000e78 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 268439196, i32* @lr, align 4
  %v2_10000e98 = call i32 @function_10009460(i32 4, i32 4)
  store i32 %v2_10000e98, i32* %r27.global-to-local, align 4
  %v0_10000ea4 = load i32, i32* @r30, align 4
  store i32 %v0_10000ea4, i32* %r3.global-to-local, align 4
  store i32 268439212, i32* @lr, align 4
  %v2_10000ea8 = call i32 @function_10009460(i32 %v0_10000ea4, i32 4)
  %v0_10000eb0 = load i32, i32* @r28, align 4
  store i32 %v2_10000ea8, i32* %r26.global-to-local, align 4
  %v0_10000ec0 = load i32, i32* @r29, align 4
  store i32 %v0_10000ec0, i32* %r3.global-to-local, align 4
  store i32 268439240, i32* @lr, align 4
  %v4_10000ec4 = inttoptr i32 %v0_10000eb0 to i32*
  %v5_10000ec4 = call i32 @function_100006a8(i32 %v0_10000ec0, i32* %v4_10000ec4, i32 7, i32 65535)
  %v0_10000ed0 = load i32, i32* @r28, align 4
  %v1_10000ed8 = urem i32 %v5_10000ec4, 65536
  store i32 %v1_10000ed8, i32* %r21.global-to-local, align 4
  %v0_10000edc = load i32, i32* @r29, align 4
  store i32 %v0_10000edc, i32* %r3.global-to-local, align 4
  store i32 268439268, i32* @lr, align 4
  %v4_10000ee0 = inttoptr i32 %v0_10000ed0 to i32*
  %v5_10000ee0 = call i32 @function_100006a8(i32 %v0_10000edc, i32* %v4_10000ee0, i32 6, i32 65535)
  %v0_10000ee4 = load i32, i32* @r28, align 4
  %v1_10000ee8 = urem i32 %v5_10000ee0, 65536
  store i32 %v1_10000ee8, i32* %r22.global-to-local, align 4
  %v0_10000ef4 = load i32, i32* @r29, align 4
  store i32 %v0_10000ef4, i32* %r3.global-to-local, align 4
  store i32 268439292, i32* @lr, align 4
  %v4_10000ef8 = inttoptr i32 %v0_10000ee4 to i32*
  %v5_10000ef8 = call i32 @function_100006a8(i32 %v0_10000ef4, i32* %v4_10000ef8, i32 0, i32 1024)
  %v0_10000efc = load i32, i32* @r28, align 4
  %v1_10000f00 = urem i32 %v5_10000ef8, 65536
  store i32 %v1_10000f00, i32* @r31, align 4
  %v0_10000f08 = load i32, i32* @r29, align 4
  store i32 %v0_10000f08, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10000f14.15 to i32), i32* @lr, align 4
  %v4_10000f10 = inttoptr i32 %v0_10000efc to i32*
  %v5_10000f10 = call i32 @function_100006a8(i32 %v0_10000f08, i32* %v4_10000f10, i32 1, i32 1)
  store i32 %v5_10000f10, i32* %r3.global-to-local, align 4
  %v0_10000f20 = load i32, i32* %r22.global-to-local, align 4
  %v4_10000f20 = icmp eq i32 %v0_10000f20, 65535
  %v1_10000f28 = urem i32 %v5_10000f10, 256
  store i32 %v1_10000f28, i32* %r23.global-to-local, align 4
  store i32 0, i32* %stack_var_-72, align 4
  br i1 %v4_10000f20, label %dec_label_pc_10001124, label %dec_label_pc_10000f3c

dec_label_pc_10000f3c:                            ; preds = %dec_label_pc_10000e3c, %dec_label_pc_10001124
  %v0_10000f3c = load i32, i32* @r30, align 4
  %v1_10000f3c = icmp slt i32 %v0_10000f3c, 0
  %v3_10000f3c = icmp eq i32 %v0_10000f3c, 0
  store i1 %v1_10000f3c, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10000f3c, i1* %cr4_eq.global-to-local, align 1
  %tmp38 = icmp slt i32 %v0_10000f3c, 1
  br i1 %tmp38, label %dec_label_pc_10000ffc, label %dec_label_pc_10000f44

dec_label_pc_10000f44:                            ; preds = %dec_label_pc_10000f3c
  %v0_10000f48 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10000f48, i32* @r28, align 4
  store i32 0, i32* %r24.global-to-local, align 4
  %v0_10000f54 = load i32, i32* %r21.global-to-local, align 4
  %v4_10000f54 = icmp eq i32 %v0_10000f54, 65535
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 2, i32* %r20.global-to-local, align 4
  %v2_100010a4 = ptrtoint i32* %stack_var_-72 to i32
  br i1 %v4_10000f54, label %dec_label_pc_10001074, label %dec_label_pc_10000f68

dec_label_pc_10000f68:                            ; preds = %dec_label_pc_10000f44, %dec_label_pc_10000fdc
  %v0_10000f74 = phi i32 [ %v0_10000ff0, %dec_label_pc_10000fdc ], [ 0, %dec_label_pc_10000f44 ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_10000f74 = add i32 %v0_10000f74, 1
  store i32 %v1_10000f74, i32* %r24.global-to-local, align 4
  store i32 268439420, i32* @lr, align 4
  %v2_10000f78 = call i32 @function_10009460(i32 65535, i32 1)
  %v0_10000f7c = load i32, i32* %r21.global-to-local, align 4
  %v1_10000f7c = trunc i32 %v0_10000f7c to i16
  %v2_10000f7c = load i32, i32* @r28, align 4
  %v3_10000f7c = add i32 %v2_10000f7c, 2
  %v4_10000f7c = inttoptr i32 %v3_10000f7c to i16*
  store i16 %v1_10000f7c, i16* %v4_10000f7c, align 2
  %v1_10000f80 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000f80 = load i32, i32* %r27.global-to-local, align 4
  %v3_10000f80 = add i32 %v2_10000f80, %v1_10000f80
  %v4_10000f80 = inttoptr i32 %v3_10000f80 to i32*
  store i32 %v2_10000f78, i32* %v4_10000f80, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268439444, i32* @lr, align 4
  %v3_10000f90 = call i32 @function_10009104(i32 2, i32 2, i32 0)
  store i32 %v3_10000f90, i32* %r3.global-to-local, align 4
  %v3_10000f98 = icmp eq i32 %v3_10000f90, -1
  %v1_10000fa0 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000fa0 = load i32, i32* %r26.global-to-local, align 4
  %v3_10000fa0 = add i32 %v2_10000fa0, %v1_10000fa0
  %v4_10000fa0 = inttoptr i32 %v3_10000fa0 to i32*
  store i32 %v3_10000f90, i32* %v4_10000fa0, align 4
  br i1 %v3_10000f98, label %dec_label_pc_100010d8, label %dec_label_pc_10000fa8

dec_label_pc_10000fa8:                            ; preds = %dec_label_pc_10000f68
  %v0_10000fa8 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000fa8, i32* %stack_var_-72, align 4
  store i32 268439480, i32* @lr, align 4
  %v0_10000fb4 = load i32, i32* %r3.global-to-local, align 4
  %v3_10000fb4 = call i32 @function_10008f00(i32 %v0_10000fb4, i32 %v2_100010a4, i32 16)
  store i32 %v3_10000fb4, i32* %r3.global-to-local, align 4
  %v0_10000fb8 = load i32, i32* @r28, align 4
  %v1_10000fb8 = add i32 %v0_10000fb8, 20
  %v2_10000fb8 = inttoptr i32 %v1_10000fb8 to i8*
  %v3_10000fb8 = load i8, i8* %v2_10000fb8, align 1
  %v2_10000fbc = icmp ugt i8 %v3_10000fb8, 31
  br i1 %v2_10000fbc, label %dec_label_pc_10000fdc, label %dec_label_pc_10000fc4

dec_label_pc_10000fc4:                            ; preds = %dec_label_pc_10000fa8
  %v1_10000fc4 = add i32 %v0_10000fb8, 16
  %v2_10000fc4 = inttoptr i32 %v1_10000fc4 to i32*
  %v3_10000fc4 = load i32, i32* %v2_10000fc4, align 4
  store i32 %v3_10000fc4, i32* %r29.global-to-local, align 4
  %v0_10000fc8 = call i32 @function_10005928()
  store i32 %v0_10000fc8, i32* %r3.global-to-local, align 4
  %v0_10000fcc = load i32, i32* @r28, align 4
  %v1_10000fcc = add i32 %v0_10000fcc, 20
  %v2_10000fcc = inttoptr i32 %v1_10000fcc to i8*
  %v3_10000fcc = load i8, i8* %v2_10000fcc, align 1
  %tmp = urem i8 %v3_10000fcc, 64
  %v2_10000fd0 = zext i8 %tmp to i32
  %v3_10000fd0 = lshr i32 %v0_10000fc8, %v2_10000fd0
  %v0_10000fd4 = load i32, i32* %r29.global-to-local, align 4
  %v2_10000fd4 = add i32 %v3_10000fd0, %v0_10000fd4
  store i32 %v2_10000fd4, i32* %r3.global-to-local, align 4
  %v2_10000fd8 = add i32 %v0_10000fcc, 4
  %v3_10000fd8 = inttoptr i32 %v2_10000fd8 to i32*
  store i32 %v2_10000fd4, i32* %v3_10000fd8, align 4
  %v0_10000fe0.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10000fdc

dec_label_pc_10000fdc:                            ; preds = %dec_label_pc_10000fa8, %dec_label_pc_10000fc4
  %v0_10000fe0 = phi i32 [ %v0_10000fb8, %dec_label_pc_10000fa8 ], [ %v0_10000fe0.pre, %dec_label_pc_10000fc4 ]
  %v0_10000fdc = load i32, i32* %r25.global-to-local, align 4
  %v1_10000fdc = load i32, i32* %r26.global-to-local, align 4
  %v2_10000fdc = add i32 %v1_10000fdc, %v0_10000fdc
  %v3_10000fdc = inttoptr i32 %v2_10000fdc to i32*
  %v4_10000fdc = load i32, i32* %v3_10000fdc, align 4
  store i32 %v4_10000fdc, i32* %r3.global-to-local, align 4
  %v1_10000fe8 = add i32 %v0_10000fdc, 4
  store i32 %v1_10000fe8, i32* %r25.global-to-local, align 4
  store i32 268439536, i32* @lr, align 4
  %v3_10000fec = call i32 @function_10008f34(i32 %v4_10000fdc, i32 %v0_10000fe0, i32 16)
  store i32 %v3_10000fec, i32* %r3.global-to-local, align 4
  %v0_10000ff0 = load i32, i32* %r24.global-to-local, align 4
  %v1_10000ff0 = load i32, i32* @r30, align 4
  %v4_10000ff0 = icmp eq i32 %v0_10000ff0, %v1_10000ff0
  %v0_10000ff4 = load i32, i32* @r28, align 4
  %v1_10000ff4 = add i32 %v0_10000ff4, 24
  store i32 %v1_10000ff4, i32* @r28, align 4
  br i1 %v4_10000ff0, label %dec_label_pc_10000ffc, label %dec_label_pc_10000f68

dec_label_pc_10000ffc:                            ; preds = %dec_label_pc_10000fdc, %dec_label_pc_10001054, %dec_label_pc_10000f3c
  %v0_10000ffc = load i32, i32* %r23.global-to-local, align 4
  %v3_10000ffc = icmp eq i32 %v0_10000ffc, 0
  store i1 %v3_10000ffc, i1* %cr3_eq.global-to-local, align 1
  %v0_10001000.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10001000.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10001000.outer

dec_label_pc_10001000.outer:                      ; preds = %dec_label_pc_10001034, %dec_label_pc_1000116c, %dec_label_pc_10000ffc
  %v1_10001000.ph39 = phi i1 [ %v1_10001000.pre, %dec_label_pc_10000ffc ], [ %v1_1000116c, %dec_label_pc_1000116c ], [ %v1_10001034, %dec_label_pc_10001034 ]
  %v0_10001000.ph40 = phi i1 [ %v0_10001000.pre, %dec_label_pc_10000ffc ], [ %v0_1000116c, %dec_label_pc_1000116c ], [ %v0_10001034, %dec_label_pc_10001034 ]
  %v2_10001000 = or i1 %v1_10001000.ph39, %v0_10001000.ph40
  br label %dec_label_pc_10001000

dec_label_pc_10001000:                            ; preds = %dec_label_pc_10001000.outer, %dec_label_pc_10001000
  br i1 %v2_10001000, label %dec_label_pc_10001000, label %dec_label_pc_10001004

dec_label_pc_10001004:                            ; preds = %dec_label_pc_1000116c, %dec_label_pc_10001034, %dec_label_pc_10001000
  %v0_10001004 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10001004, label %dec_label_pc_10001008, label %dec_label_pc_10001130

dec_label_pc_10001008:                            ; preds = %dec_label_pc_10001004
  store i32 0, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10001010

dec_label_pc_10001010:                            ; preds = %dec_label_pc_10001010.dec_label_pc_10001010_crit_edge, %dec_label_pc_10001008
  %v0_10001014 = phi i32 [ %v0_1000102c, %dec_label_pc_10001010.dec_label_pc_10001010_crit_edge ], [ 0, %dec_label_pc_10001008 ]
  %v0_10001024 = phi i32 [ %v0_10001010.pre, %dec_label_pc_10001010.dec_label_pc_10001010_crit_edge ], [ 0, %dec_label_pc_10001008 ]
  %v1_10001010 = load i32, i32* %r26.global-to-local, align 4
  %v2_10001010 = add i32 %v1_10001010, %v0_10001024
  %v3_10001010 = inttoptr i32 %v2_10001010 to i32*
  %v4_10001010 = load i32, i32* %v3_10001010, align 4
  store i32 %v4_10001010, i32* %r3.global-to-local, align 4
  %v1_10001014 = add i32 %v0_10001014, 1
  store i32 %v1_10001014, i32* %r28.global-to-local, align 4
  %v1_10001018 = load i32, i32* %r27.global-to-local, align 4
  %v2_10001018 = add i32 %v1_10001018, %v0_10001024
  %v3_10001018 = inttoptr i32 %v2_10001018 to i32*
  %v4_10001018 = load i32, i32* %v3_10001018, align 4
  %v0_1000101c = load i32, i32* @r31, align 4
  %v1_10001024 = add i32 %v0_10001024, 4
  store i32 %v1_10001024, i32* %r29.global-to-local, align 4
  store i32 268439596, i32* @lr, align 4
  %v4_10001028 = call i32 @function_10009050(i32 %v4_10001010, i32 %v4_10001018, i32 %v0_1000101c, i32 16384)
  store i32 %v4_10001028, i32* %r3.global-to-local, align 4
  %v0_1000102c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000102c = load i32, i32* @r30, align 4
  %v4_1000102c = icmp eq i32 %v0_1000102c, %v1_1000102c
  br i1 %v4_1000102c, label %dec_label_pc_10001034, label %dec_label_pc_10001010.dec_label_pc_10001010_crit_edge

dec_label_pc_10001010.dec_label_pc_10001010_crit_edge: ; preds = %dec_label_pc_10001010
  %v0_10001010.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10001010

dec_label_pc_10001034:                            ; preds = %dec_label_pc_10001010
  %v0_10001034 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10001034 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10001034 = or i1 %v0_10001034, %v1_10001034
  br i1 %v2_10001034, label %dec_label_pc_10001000.outer, label %dec_label_pc_10001004

dec_label_pc_10001054:                            ; preds = %dec_label_pc_100010b8, %dec_label_pc_100010d4
  %v0_10001058 = phi i32 [ %v0_100010c8, %dec_label_pc_100010b8 ], [ %v0_10001058.pre, %dec_label_pc_100010d4 ]
  %v0_10001054 = load i32, i32* %r25.global-to-local, align 4
  %v1_10001054 = load i32, i32* %r26.global-to-local, align 4
  %v2_10001054 = add i32 %v1_10001054, %v0_10001054
  %v3_10001054 = inttoptr i32 %v2_10001054 to i32*
  %v4_10001054 = load i32, i32* %v3_10001054, align 4
  store i32 %v4_10001054, i32* %r3.global-to-local, align 4
  %v1_10001060 = add i32 %v0_10001054, 4
  store i32 %v1_10001060, i32* %r25.global-to-local, align 4
  store i32 268439656, i32* @lr, align 4
  %v3_10001064 = call i32 @function_10008f34(i32 %v4_10001054, i32 %v0_10001058, i32 16)
  store i32 %v3_10001064, i32* %r3.global-to-local, align 4
  %v0_10001068 = load i32, i32* %r24.global-to-local, align 4
  %v1_10001068 = load i32, i32* @r30, align 4
  %v4_10001068 = icmp eq i32 %v0_10001068, %v1_10001068
  %v0_1000106c = load i32, i32* @r28, align 4
  %v1_1000106c = add i32 %v0_1000106c, 24
  store i32 %v1_1000106c, i32* @r28, align 4
  br i1 %v4_10001068, label %dec_label_pc_10000ffc, label %dec_label_pc_10001074

dec_label_pc_10001074:                            ; preds = %dec_label_pc_10000f44, %dec_label_pc_10001054
  %v0_10001080 = phi i32 [ %v0_10001068, %dec_label_pc_10001054 ], [ 0, %dec_label_pc_10000f44 ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_10001080 = add i32 %v0_10001080, 1
  store i32 %v1_10001080, i32* %r24.global-to-local, align 4
  store i32 268439688, i32* @lr, align 4
  %v2_10001084 = call i32 @function_10009460(i32 65535, i32 1)
  store i32 %v2_10001084, i32* %r3.global-to-local, align 4
  %v1_10001088 = load i32, i32* %r25.global-to-local, align 4
  %v2_10001088 = load i32, i32* %r27.global-to-local, align 4
  %v3_10001088 = add i32 %v2_10001088, %v1_10001088
  %v4_10001088 = inttoptr i32 %v3_10001088 to i32*
  store i32 %v2_10001084, i32* %v4_10001088, align 4
  %v0_1000108c = call i32 @function_10005928()
  %v1_1000108c = trunc i32 %v0_1000108c to i16
  %v3_10001090 = load i32, i32* @r28, align 4
  %v4_10001090 = add i32 %v3_10001090, 2
  %v5_10001090 = inttoptr i32 %v4_10001090 to i16*
  store i16 %v1_1000108c, i16* %v5_10001090, align 2
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268439716, i32* @lr, align 4
  %v3_100010a0 = call i32 @function_10009104(i32 2, i32 2, i32 0)
  store i32 %v3_100010a0, i32* %r3.global-to-local, align 4
  %v3_100010a8 = icmp eq i32 %v3_100010a0, -1
  %v1_100010b0 = load i32, i32* %r25.global-to-local, align 4
  %v2_100010b0 = load i32, i32* %r26.global-to-local, align 4
  %v3_100010b0 = add i32 %v2_100010b0, %v1_100010b0
  %v4_100010b0 = inttoptr i32 %v3_100010b0 to i32*
  store i32 %v3_100010a0, i32* %v4_100010b0, align 4
  br i1 %v3_100010a8, label %dec_label_pc_100010d8, label %dec_label_pc_100010b8

dec_label_pc_100010b8:                            ; preds = %dec_label_pc_10001074
  %v0_100010b8 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_100010b8, i32* %stack_var_-72, align 4
  store i32 268439752, i32* @lr, align 4
  %v0_100010c4 = load i32, i32* %r3.global-to-local, align 4
  %v3_100010c4 = call i32 @function_10008f00(i32 %v0_100010c4, i32 %v2_100010a4, i32 16)
  store i32 %v3_100010c4, i32* %r3.global-to-local, align 4
  %v0_100010c8 = load i32, i32* @r28, align 4
  %v1_100010c8 = add i32 %v0_100010c8, 20
  %v2_100010c8 = inttoptr i32 %v1_100010c8 to i8*
  %v3_100010c8 = load i8, i8* %v2_100010c8, align 1
  %v2_100010cc = icmp ugt i8 %v3_100010c8, 31
  br i1 %v2_100010cc, label %dec_label_pc_10001054, label %dec_label_pc_100010d4

dec_label_pc_100010d4:                            ; preds = %dec_label_pc_100010b8
  %v1_1000103c = add i32 %v0_100010c8, 16
  %v2_1000103c = inttoptr i32 %v1_1000103c to i32*
  %v3_1000103c = load i32, i32* %v2_1000103c, align 4
  store i32 %v3_1000103c, i32* %r29.global-to-local, align 4
  %v0_10001040 = call i32 @function_10005928()
  store i32 %v0_10001040, i32* %r3.global-to-local, align 4
  %v0_10001044 = load i32, i32* @r28, align 4
  %v1_10001044 = add i32 %v0_10001044, 20
  %v2_10001044 = inttoptr i32 %v1_10001044 to i8*
  %v3_10001044 = load i8, i8* %v2_10001044, align 1
  %tmp43 = urem i8 %v3_10001044, 64
  %v2_10001048 = zext i8 %tmp43 to i32
  %v3_10001048 = lshr i32 %v0_10001040, %v2_10001048
  %v0_1000104c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000104c = add i32 %v3_10001048, %v0_1000104c
  store i32 %v2_1000104c, i32* %r3.global-to-local, align 4
  %v2_10001050 = add i32 %v0_10001044, 4
  %v3_10001050 = inttoptr i32 %v2_10001050 to i32*
  store i32 %v2_1000104c, i32* %v3_10001050, align 4
  %v0_10001058.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10001054

dec_label_pc_100010d8:                            ; preds = %dec_label_pc_10000f68, %dec_label_pc_10001074
  %v1_100010ec = call %0 @__asm_mtcrf(i32 24, i32 %v0_10000e44)
  store i32 %v0_10000e70, i32* %r28.global-to-local, align 4
  store i32 %v0_10000e78, i32* %r29.global-to-local, align 4
  %v0_10001120 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10001120

dec_label_pc_10001124:                            ; preds = %dec_label_pc_10000e3c
  %v0_10001124 = call i32 @function_10005928()
  store i32 %v0_10001124, i32* %r3.global-to-local, align 4
  %v1_10001128 = urem i32 %v0_10001124, 65536
  store i32 %v1_10001128, i32* %r22.global-to-local, align 4
  br label %dec_label_pc_10000f3c

dec_label_pc_10001130:                            ; preds = %dec_label_pc_10001004
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10001138

dec_label_pc_10001138:                            ; preds = %dec_label_pc_10001138.dec_label_pc_10001138_crit_edge, %dec_label_pc_10001130
  %v0_10001140 = phi i32 [ %v0_10001164, %dec_label_pc_10001138.dec_label_pc_10001138_crit_edge ], [ 0, %dec_label_pc_10001130 ]
  %v0_10001138 = phi i32 [ %v0_10001138.pre, %dec_label_pc_10001138.dec_label_pc_10001138_crit_edge ], [ 0, %dec_label_pc_10001130 ]
  %v1_10001138 = load i32, i32* %r27.global-to-local, align 4
  %v2_10001138 = add i32 %v1_10001138, %v0_10001138
  %v3_10001138 = inttoptr i32 %v2_10001138 to i32*
  %v4_10001138 = load i32, i32* %v3_10001138, align 4
  store i32 %v4_10001138, i32* @r29, align 4
  %v0_1000113c = load i32, i32* @r31, align 4
  store i32 %v0_1000113c, i32* @r4, align 4
  %v1_10001140 = add i32 %v0_10001140, 1
  store i32 %v1_10001140, i32* %r25.global-to-local, align 4
  store i32 %v4_10001138, i32* @r3, align 4
  %v0_10001148 = call i32 @function_10005afc()
  store i32 %v0_10001148, i32* %r3.global-to-local, align 4
  %v0_1000114c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000114c = load i32, i32* %r26.global-to-local, align 4
  %v2_1000114c = add i32 %v1_1000114c, %v0_1000114c
  %v3_1000114c = inttoptr i32 %v2_1000114c to i32*
  %v4_1000114c = load i32, i32* %v3_1000114c, align 4
  store i32 %v4_1000114c, i32* %r3.global-to-local, align 4
  %v0_10001150 = load i32, i32* @r29, align 4
  %v0_10001154 = load i32, i32* @r31, align 4
  %v1_1000115c = add i32 %v0_1000114c, 4
  store i32 %v1_1000115c, i32* %r28.global-to-local, align 4
  store i32 268439908, i32* @lr, align 4
  %v4_10001160 = call i32 @function_10009050(i32 %v4_1000114c, i32 %v0_10001150, i32 %v0_10001154, i32 16384)
  store i32 %v4_10001160, i32* %r3.global-to-local, align 4
  %v0_10001164 = load i32, i32* %r25.global-to-local, align 4
  %v1_10001164 = load i32, i32* @r30, align 4
  %v4_10001164 = icmp eq i32 %v0_10001164, %v1_10001164
  br i1 %v4_10001164, label %dec_label_pc_1000116c, label %dec_label_pc_10001138.dec_label_pc_10001138_crit_edge

dec_label_pc_10001138.dec_label_pc_10001138_crit_edge: ; preds = %dec_label_pc_10001138
  %v0_10001138.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10001138

dec_label_pc_1000116c:                            ; preds = %dec_label_pc_10001138
  %v0_1000116c = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_1000116c = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_1000116c = or i1 %v0_1000116c, %v1_1000116c
  br i1 %v2_1000116c, label %dec_label_pc_10001000.outer, label %dec_label_pc_10001004

; uselistorder directives
  uselistorder i1 %v1_1000116c, { 1, 0 }
  uselistorder i1 %v0_1000116c, { 1, 0 }
  uselistorder i32 %v0_10001164, { 1, 0 }
  uselistorder i32 %v0_1000114c, { 1, 0 }
  uselistorder i32 %v0_100010c8, { 1, 2, 0 }
  uselistorder i32 %v0_10001054, { 1, 0 }
  uselistorder i1 %v1_10001034, { 1, 0 }
  uselistorder i1 %v0_10001034, { 1, 0 }
  uselistorder i32 %v0_1000102c, { 1, 0 }
  uselistorder i32 %v0_10001024, { 2, 0, 1 }
  uselistorder i32 %v0_10000ff0, { 1, 0 }
  uselistorder i32 %v0_10000fdc, { 1, 0 }
  uselistorder i32 %v2_100010a4, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 0, 1, 3, 2 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 23, 7, 8, 10, 11, 12, 13, 14, 15, 2, 9, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 1, 0 }
  uselistorder i32* %r26.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r25.global-to-local, { 0, 1, 2, 6, 7, 3, 5, 4, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r24.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r21.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 2, 0, 3 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32 (i32, i32, i32)* @function_10008f00, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_100010d8, { 1, 0 }
  uselistorder label %dec_label_pc_10001074, { 1, 0 }
  uselistorder label %dec_label_pc_10001054, { 1, 0 }
  uselistorder label %dec_label_pc_10001000, { 1, 0 }
  uselistorder label %dec_label_pc_10001000.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000ffc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000fdc, { 1, 0 }
  uselistorder label %dec_label_pc_10000f68, { 1, 0 }
  uselistorder label %dec_label_pc_10000f3c, { 1, 0 }
}

define i32 @function_10001174(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10001174:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_10001178 = load i32, i32* @lr, align 4
  store i32 %v0_10001178, i32* %r0.global-to-local, align 4
  %v0_1000117c = call i32 @__asm_mfcr()
  store i32 %v0_1000117c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r27.global-to-local, align 4
  %v0_1000118c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1000117c, i32* %r19.global-to-local, align 4
  %v0_100011c0 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100011c8 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_100011d0 = load i32, i32* @r30, align 4
  %v0_100011d4 = load i32, i32* @r31, align 4
  store i32 268440040, i32* @lr, align 4
  %v2_100011e4 = call i32 @function_10009460(i32 4, i32 4)
  store i32 %v2_100011e4, i32* %r20.global-to-local, align 4
  %v0_100011ec = load i32, i32* @r28, align 4
  %v0_100011f8 = load i32, i32* @r29, align 4
  store i32 %v0_100011f8, i32* %r3.global-to-local, align 4
  store i32 268440064, i32* @lr, align 4
  %v4_100011fc = inttoptr i32 %v0_100011ec to i32*
  %v5_100011fc = call i32 @function_100006a8(i32 %v0_100011f8, i32* %v4_100011fc, i32 2, i32 0)
  %v0_1000120c = load i32, i32* @r28, align 4
  %v1_10001210 = urem i32 %v5_100011fc, 256
  store i32 %v1_10001210, i32* %r15.global-to-local, align 4
  %v0_10001214 = load i32, i32* @r29, align 4
  store i32 %v0_10001214, i32* %r3.global-to-local, align 4
  store i32 268440092, i32* @lr, align 4
  %v4_10001218 = inttoptr i32 %v0_1000120c to i32*
  %v5_10001218 = call i32 @function_100006a8(i32 %v0_10001214, i32* %v4_10001218, i32 3, i32 65535)
  %v0_1000121c = load i32, i32* @r28, align 4
  store i32 %v5_10001218, i32* %r23.global-to-local, align 4
  %v0_1000122c = load i32, i32* @r29, align 4
  store i32 %v0_1000122c, i32* %r3.global-to-local, align 4
  store i32 268440116, i32* @lr, align 4
  %v4_10001230 = inttoptr i32 %v0_1000121c to i32*
  %v5_10001230 = call i32 @function_100006a8(i32 %v0_1000122c, i32* %v4_10001230, i32 4, i32 64)
  %v0_10001234 = load i32, i32* @r28, align 4
  %v1_10001240 = urem i32 %v5_10001230, 256
  store i32 %v1_10001240, i32* %r16.global-to-local, align 4
  %v0_10001244 = load i32, i32* @r29, align 4
  store i32 %v0_10001244, i32* %r3.global-to-local, align 4
  store i32 268440140, i32* @lr, align 4
  %v4_10001248 = inttoptr i32 %v0_10001234 to i32*
  %v5_10001248 = call i32 @function_100006a8(i32 %v0_10001244, i32* %v4_10001248, i32 5, i32 0)
  %v0_10001258 = load i32, i32* @r28, align 4
  %v1_1000125c = urem i32 %v5_10001248, 256
  store i32 %v1_1000125c, i32* @r31, align 4
  %v0_10001260 = load i32, i32* @r29, align 4
  store i32 %v0_10001260, i32* %r3.global-to-local, align 4
  store i32 268440168, i32* @lr, align 4
  %v4_10001264 = inttoptr i32 %v0_10001258 to i32*
  %v5_10001264 = call i32 @function_100006a8(i32 %v0_10001260, i32* %v4_10001264, i32 6, i32 65535)
  %v0_1000126c = load i32, i32* @r28, align 4
  store i32 %v5_10001264, i32* %r24.global-to-local, align 4
  %v0_1000127c = load i32, i32* @r29, align 4
  store i32 %v0_1000127c, i32* %r3.global-to-local, align 4
  store i32 268440196, i32* @lr, align 4
  %v4_10001280 = inttoptr i32 %v0_1000126c to i32*
  %v5_10001280 = call i32 @function_100006a8(i32 %v0_1000127c, i32* %v4_10001280, i32 7, i32 65535)
  %v0_10001284 = load i32, i32* @r28, align 4
  store i32 %v5_10001280, i32* %r25.global-to-local, align 4
  %v0_10001294 = load i32, i32* @r29, align 4
  store i32 %v0_10001294, i32* %r3.global-to-local, align 4
  store i32 268440220, i32* @lr, align 4
  %v4_10001298 = inttoptr i32 %v0_10001284 to i32*
  %v5_10001298 = call i32 @function_100006a8(i32 %v0_10001294, i32* %v4_10001298, i32 0, i32 512)
  %v0_1000129c = load i32, i32* @r28, align 4
  store i32 %v5_10001298, i32* %r26.global-to-local, align 4
  %v0_100012ac = load i32, i32* @r29, align 4
  store i32 %v0_100012ac, i32* %r3.global-to-local, align 4
  store i32 268440244, i32* @lr, align 4
  %v4_100012b0 = inttoptr i32 %v0_1000129c to i32*
  %v5_100012b0 = call i32 @function_100006a8(i32 %v0_100012ac, i32* %v4_100012b0, i32 1, i32 1)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_100012b8 = load i32, i32* @global_var_1001b500.16, align 4
  %v0_100012bc = load i32, i32* @r28, align 4
  %v1_100012c4 = urem i32 %v5_100012b0, 256
  store i32 %v1_100012c4, i32* %r17.global-to-local, align 4
  %v0_100012c8 = load i32, i32* @r29, align 4
  store i32 %v0_100012c8, i32* %r3.global-to-local, align 4
  store i32 268440272, i32* @lr, align 4
  %v4_100012cc = inttoptr i32 %v0_100012bc to i32*
  %v5_100012cc = call i32 @function_100006a8(i32 %v0_100012c8, i32* %v4_100012cc, i32 25, i32 %v3_100012b8)
  store i32 %v5_100012cc, i32* %r30.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268440292, i32* @lr, align 4
  %v3_100012e0 = call i32 @function_10009104(i32 2, i32 3, i32 17)
  store i32 %v3_100012e0, i32* %r3.global-to-local, align 4
  %v3_100012e4 = icmp eq i32 %v3_100012e0, -1
  store i32 %v3_100012e0, i32* %r21.global-to-local, align 4
  br i1 %v3_100012e4, label %dec_label_pc_10001540, label %dec_label_pc_100012f0

dec_label_pc_100012f0:                            ; preds = %dec_label_pc_10001174
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_100012fc = ptrtoint i32* %stack_var_-104 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-104, align 4
  store i32 268440332, i32* @lr, align 4
  %v4_10001308 = call i32 @function_100090c8(i32 0, i32 3, i32 %v2_100012fc, i32 4)
  store i32 %v4_10001308, i32* %r3.global-to-local, align 4
  %v3_1000130c = icmp eq i32 %v4_10001308, -1
  br i1 %v3_1000130c, label %dec_label_pc_10001538, label %dec_label_pc_10001314

dec_label_pc_10001314:                            ; preds = %dec_label_pc_100012f0
  %v0_10001314 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001314 = urem i32 %v0_10001314, 65536
  store i32 %v1_10001314, i32* %r18.global-to-local, align 4
  %v0_10001318 = load i32, i32* %r23.global-to-local, align 4
  %v1_10001318 = urem i32 %v0_10001318, 65536
  store i32 %v1_10001318, i32* %r22.global-to-local, align 4
  %v0_10001320 = load i32, i32* %r24.global-to-local, align 4
  %v1_10001320 = urem i32 %v0_10001320, 65536
  store i32 %v1_10001320, i32* %r23.global-to-local, align 4
  %v0_10001324 = load i32, i32* %r25.global-to-local, align 4
  %v1_10001324 = urem i32 %v0_10001324, 65536
  store i32 %v1_10001324, i32* %r24.global-to-local, align 4
  %tmp30 = icmp ult i32 %v1_10001314, 1461
  br i1 %tmp30, label %dec_label_pc_10001330, label %dec_label_pc_1000132c

dec_label_pc_1000132c:                            ; preds = %dec_label_pc_10001314
  store i32 1460, i32* %r18.global-to-local, align 4
  br label %dec_label_pc_10001330

dec_label_pc_10001330:                            ; preds = %dec_label_pc_10001314, %dec_label_pc_1000132c
  %v0_10001640 = phi i32 [ %v1_10001314, %dec_label_pc_10001314 ], [ 1460, %dec_label_pc_1000132c ]
  %v0_10001330 = load i32, i32* %r19.global-to-local, align 4
  %v1_10001330 = icmp slt i32 %v0_10001330, 0
  %v3_10001330 = icmp eq i32 %v0_10001330, 0
  store i1 %v1_10001330, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10001330, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %tmp31 = icmp slt i32 %v0_10001330, 1
  br i1 %tmp31, label %dec_label_pc_10001638, label %dec_label_pc_10001340

dec_label_pc_10001340:                            ; preds = %dec_label_pc_10001330
  %v0_10001340 = load i32, i32* @r31, align 4
  %v3_10001340 = icmp eq i32 %v0_10001340, 0
  %v1_10001344 = add nuw nsw i32 %v0_10001640, 28
  store i32 %v1_10001344, i32* %r25.global-to-local, align 4
  %v1_10001348 = add nuw nsw i32 %v0_10001640, 8
  store i32 %v1_10001348, i32* %r26.global-to-local, align 4
  %v1_1000134c = urem i32 %v1_10001344, 65536
  store i32 %v1_1000134c, i32* @r28, align 4
  %v1_10001350 = urem i32 %v1_10001348, 65536
  store i32 %v1_10001350, i32* @r29, align 4
  br i1 %v3_10001340, label %dec_label_pc_10001358, label %dec_label_pc_100015a0

dec_label_pc_10001358:                            ; preds = %dec_label_pc_10001340
  br label %dec_label_pc_1000135c

dec_label_pc_1000135c:                            ; preds = %dec_label_pc_1000135c, %dec_label_pc_10001358
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268440424, i32* @lr, align 4
  %v2_10001364 = call i32 @function_10009460(i32 1510, i32 1)
  store i32 %v2_10001364, i32* %r3.global-to-local, align 4
  %v3_10001368 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10001368, i32* %r9.global-to-local, align 4
  %v0_1000136c = load i32, i32* @r31, align 4
  %v1_1000136c = mul i32 %v0_1000136c, 4
  store i32 %v1_1000136c, i32* %r0.global-to-local, align 4
  %v1_10001370 = load i32, i32* %r20.global-to-local, align 4
  %v3_10001370 = add i32 %v1_10001370, %v1_1000136c
  %v4_10001370 = inttoptr i32 %v3_10001370 to i32*
  store i32 %v2_10001364, i32* %v4_10001370, align 4
  %v0_10001374 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001374 = mul i32 %v0_10001374, 4
  store i32 %v1_10001374, i32* %r9.global-to-local, align 4
  %v1_10001378 = load i32, i32* %r20.global-to-local, align 4
  %v2_10001378 = add i32 %v1_10001378, %v1_10001374
  %v3_10001378 = inttoptr i32 %v2_10001378 to i32*
  %v4_10001378 = load i32, i32* %v3_10001378, align 4
  store i32 %v4_10001378, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10001380 = inttoptr i32 %v4_10001378 to i32*
  %v2_10001380 = load i32, i32* %v1_10001380, align 4
  store i32 %v2_10001380, i32* %r0.global-to-local, align 4
  %v1_10001384 = add i32 %v4_10001378, 20
  store i32 %v1_10001384, i32* %r10.global-to-local, align 4
  %v0_10001388 = load i32, i32* %r16.global-to-local, align 4
  %v1_10001388 = trunc i32 %v0_10001388 to i8
  %v3_10001388 = add i32 %v4_10001378, 8
  %v4_10001388 = inttoptr i32 %v3_10001388 to i8*
  store i8 %v1_10001388, i8* %v4_10001388, align 1
  %v1_1000138c = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_1000138c, i32* %r0.global-to-local, align 4
  %v0_10001390 = load i32, i32* @r30, align 4
  %v1_10001390 = load i32, i32* %r11.global-to-local, align 4
  %v2_10001390 = add i32 %v1_10001390, 12
  %v3_10001390 = inttoptr i32 %v2_10001390 to i32*
  store i32 %v0_10001390, i32* %v3_10001390, align 4
  %v1_10001394 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_10001398 = load i32, i32* %r22.global-to-local, align 4
  %v1_10001398 = trunc i32 %v0_10001398 to i16
  %v2_10001398 = load i32, i32* %r11.global-to-local, align 4
  %v3_10001398 = add i32 %v2_10001398, 4
  %v4_10001398 = inttoptr i32 %v3_10001398 to i16*
  store i16 %v1_10001398, i16* %v4_10001398, align 2
  %v1_1000139c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000139c = inttoptr i32 %v1_1000139c to i32*
  store i32 %v1_10001394, i32* %v2_1000139c, align 4
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_100013a4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100013a4 = add i32 %v2_100013a4, 9
  %v4_100013a4 = inttoptr i32 %v3_100013a4 to i8*
  store i8 17, i8* %v4_100013a4, align 1
  %v0_100013a8 = load i32, i32* %r15.global-to-local, align 4
  %v1_100013a8 = trunc i32 %v0_100013a8 to i8
  %v2_100013a8 = load i32, i32* %r11.global-to-local, align 4
  %v3_100013a8 = add i32 %v2_100013a8, 1
  %v4_100013a8 = inttoptr i32 %v3_100013a8 to i8*
  store i8 %v1_100013a8, i8* %v4_100013a8, align 1
  %v0_100013ac = load i32, i32* @r28, align 4
  %v1_100013ac = trunc i32 %v0_100013ac to i16
  %v2_100013ac = load i32, i32* %r11.global-to-local, align 4
  %v3_100013ac = add i32 %v2_100013ac, 2
  %v4_100013ac = inttoptr i32 %v3_100013ac to i16*
  store i16 %v1_100013ac, i16* %v4_100013ac, align 2
  %v3_100013b0 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100013b0, i32* %r9.global-to-local, align 4
  %v0_100013b4 = load i32, i32* %r23.global-to-local, align 4
  %v1_100013b4 = trunc i32 %v0_100013b4 to i16
  %v2_100013b4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100013b4 = add i32 %v2_100013b4, 20
  %v4_100013b4 = inttoptr i32 %v3_100013b4 to i16*
  store i16 %v1_100013b4, i16* %v4_100013b4, align 2
  %v0_100013b8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100013b8 = add i32 %v0_100013b8, 1
  store i32 %v1_100013b8, i32* %r31.global-to-local, align 4
  %v1_100013bc = mul i32 %v0_100013b8, 24
  store i32 %v1_100013bc, i32* %r9.global-to-local, align 4
  %v1_100013c0 = load i32, i32* %r19.global-to-local, align 4
  %v2_100013c0 = icmp slt i32 %v1_100013b8, %v1_100013c0
  %v0_100013c4 = load i32, i32* @r29, align 4
  %v1_100013c4 = trunc i32 %v0_100013c4 to i16
  %v2_100013c4 = load i32, i32* %r10.global-to-local, align 4
  %v3_100013c4 = add i32 %v2_100013c4, 4
  %v4_100013c4 = inttoptr i32 %v3_100013c4 to i16*
  store i16 %v1_100013c4, i16* %v4_100013c4, align 2
  %v0_100013c8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100013c8 = load i32, i32* %r27.global-to-local, align 4
  %v2_100013c8 = add i32 %v1_100013c8, %v0_100013c8
  store i32 %v2_100013c8, i32* %r9.global-to-local, align 4
  %v0_100013cc = load i32, i32* %r24.global-to-local, align 4
  %v1_100013cc = trunc i32 %v0_100013cc to i16
  %v2_100013cc = load i32, i32* %r10.global-to-local, align 4
  %v3_100013cc = add i32 %v2_100013cc, 2
  %v4_100013cc = inttoptr i32 %v3_100013cc to i16*
  store i16 %v1_100013cc, i16* %v4_100013cc, align 2
  %v0_100013d0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100013d0 = add i32 %v0_100013d0, 16
  %v2_100013d0 = inttoptr i32 %v1_100013d0 to i32*
  %v3_100013d0 = load i32, i32* %v2_100013d0, align 4
  store i32 %v3_100013d0, i32* %r0.global-to-local, align 4
  %v1_100013d4 = load i32, i32* %r11.global-to-local, align 4
  %v2_100013d4 = add i32 %v1_100013d4, 16
  %v3_100013d4 = inttoptr i32 %v2_100013d4 to i32*
  store i32 %v3_100013d0, i32* %v3_100013d4, align 4
  %v0_100013d8 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_100013d8, i32* %stack_var_-104, align 4
  br i1 %v2_100013c0, label %dec_label_pc_1000135c, label %dec_label_pc_100013e0

dec_label_pc_100013e0:                            ; preds = %dec_label_pc_100015a8, %dec_label_pc_1000135c
  %v0_100013e0 = load i32, i32* @r30, align 4
  %v3_100013e0 = icmp eq i32 %v0_100013e0, -1
  store i1 %v3_100013e0, i1* %cr2_eq.global-to-local, align 1
  %v0_100013e4 = load i32, i32* %r17.global-to-local, align 4
  %v3_100013e4 = icmp eq i32 %v0_100013e4, 0
  store i1 %v3_100013e4, i1* %cr3_eq.global-to-local, align 1
  %v0_100013e8.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100013e8.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_100013e8.preheader

dec_label_pc_100013e8.preheader:                  ; preds = %dec_label_pc_100014b4, %dec_label_pc_10001638, %dec_label_pc_100013e0
  %v1_100013e8 = phi i1 [ %v1_10001330, %dec_label_pc_10001638 ], [ %v1_100013e8.pre, %dec_label_pc_100013e0 ], [ %v1_100014b4, %dec_label_pc_100014b4 ]
  %v0_100013e8 = phi i1 [ %v3_10001330, %dec_label_pc_10001638 ], [ %v0_100013e8.pre, %dec_label_pc_100013e0 ], [ %v0_100014b4, %dec_label_pc_100014b4 ]
  %v2_100013e8 = or i1 %v1_100013e8, %v0_100013e8
  br label %dec_label_pc_100013e8

dec_label_pc_100013e8:                            ; preds = %dec_label_pc_100013e8.preheader, %dec_label_pc_100013e8
  br i1 %v2_100013e8, label %dec_label_pc_100013e8, label %dec_label_pc_100013ec

dec_label_pc_100013ec:                            ; preds = %dec_label_pc_100013e8, %dec_label_pc_100014b4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  store i32 0, i32* @r30, align 4
  br label %dec_label_pc_100013fc

dec_label_pc_100013fc:                            ; preds = %dec_label_pc_10001444, %dec_label_pc_100013ec
  %v0_100013fc = phi i32 [ %v1_100014a4, %dec_label_pc_10001444 ], [ 0, %dec_label_pc_100013ec ]
  %v1_100013fc = mul i32 %v0_100013fc, 24
  store i32 %v1_100013fc, i32* %r0.global-to-local, align 4
  %v1_10001400 = mul i32 %v0_100013fc, 4
  store i32 %v1_10001400, i32* %r11.global-to-local, align 4
  %v1_10001404 = load i32, i32* %r20.global-to-local, align 4
  %v2_10001404 = add i32 %v1_10001404, %v1_10001400
  %v3_10001404 = inttoptr i32 %v2_10001404 to i32*
  %v4_10001404 = load i32, i32* %v3_10001404, align 4
  store i32 %v4_10001404, i32* %r28.global-to-local, align 4
  %v1_10001408 = load i32, i32* %r27.global-to-local, align 4
  %v2_10001408 = add i32 %v1_10001408, %v1_100013fc
  store i32 %v2_10001408, i32* %r10.global-to-local, align 4
  %v1_1000140c = add i32 %v2_10001408, 20
  %v2_1000140c = inttoptr i32 %v1_1000140c to i8*
  %v3_1000140c = load i8, i8* %v2_1000140c, align 1
  %v4_1000140c = zext i8 %v3_1000140c to i32
  store i32 %v4_1000140c, i32* %r9.global-to-local, align 4
  %v1_10001410 = add i32 %v4_10001404, 20
  store i32 %v1_10001410, i32* @r31, align 4
  %tmp32 = icmp ult i8 %v3_1000140c, 32
  br i1 %tmp32, label %dec_label_pc_100014bc, label %dec_label_pc_1000141c

dec_label_pc_1000141c:                            ; preds = %dec_label_pc_100013fc
  %v0_1000141c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_1000141c, label %dec_label_pc_100014e4, label %dec_label_pc_10001420

dec_label_pc_10001420:                            ; preds = %dec_label_pc_100014bc, %dec_label_pc_1000141c
  store i32 65535, i32* @r29, align 4
  %v0_10001428 = load i32, i32* %r22.global-to-local, align 4
  %v4_10001428 = icmp eq i32 %v0_10001428, 65535
  br i1 %v4_10001428, label %dec_label_pc_100014fc, label %dec_label_pc_10001430

dec_label_pc_10001430:                            ; preds = %dec_label_pc_100014e4, %dec_label_pc_10001420
  %v1_10001430 = phi i32 [ %v1_100014f4, %dec_label_pc_100014e4 ], [ 65535, %dec_label_pc_10001420 ]
  %v0_10001430 = load i32, i32* %r23.global-to-local, align 4
  %v4_10001430 = icmp eq i32 %v0_10001430, %v1_10001430
  br i1 %v4_10001430, label %dec_label_pc_1000150c, label %dec_label_pc_10001438

dec_label_pc_10001438:                            ; preds = %dec_label_pc_100014fc.dec_label_pc_10001438_crit_edge, %dec_label_pc_10001430
  %v1_10001438 = phi i32 [ %v1_10001438.pre, %dec_label_pc_100014fc.dec_label_pc_10001438_crit_edge ], [ %v1_10001430, %dec_label_pc_10001430 ]
  %v0_10001438 = load i32, i32* %r24.global-to-local, align 4
  %v4_10001438 = icmp eq i32 %v0_10001438, %v1_10001438
  br i1 %v4_10001438, label %dec_label_pc_1000151c, label %dec_label_pc_10001440

dec_label_pc_10001440:                            ; preds = %dec_label_pc_1000150c, %dec_label_pc_10001438
  %v0_10001440 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10001440, label %dec_label_pc_10001444, label %dec_label_pc_10001528

dec_label_pc_10001444:                            ; preds = %dec_label_pc_10001440, %dec_label_pc_1000151c, %dec_label_pc_10001528
  %v0_10001444 = load i32, i32* @r30, align 4
  %v1_10001444 = trunc i32 %v0_10001444 to i16
  %v2_10001444 = load i32, i32* %r28.global-to-local, align 4
  %v3_10001444 = add i32 %v2_10001444, 10
  %v4_10001444 = inttoptr i32 %v3_10001444 to i16*
  store i16 %v1_10001444, i16* %v4_10001444, align 2
  %v0_1000144c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000144c, i32* @r3, align 4
  %v2_10001450 = call i32 @function_100043cc(i32 %v0_1000144c, i32 20)
  %v3_10001450 = trunc i32 %v2_10001450 to i16
  %v0_10001454 = load i32, i32* @r31, align 4
  store i32 %v0_10001454, i32* @r4, align 4
  %v4_10001458 = add i32 %v0_1000144c, 10
  %v5_10001458 = inttoptr i32 %v4_10001458 to i16*
  store i16 %v3_10001450, i16* %v5_10001458, align 2
  %v0_1000145c = load i32, i32* %r26.global-to-local, align 4
  %v0_10001460 = load i32, i32* @r30, align 4
  %v1_10001460 = trunc i32 %v0_10001460 to i16
  %v2_10001460 = load i32, i32* @r31, align 4
  %v3_10001460 = add i32 %v2_10001460, 6
  %v4_10001460 = inttoptr i32 %v3_10001460 to i16*
  store i16 %v1_10001460, i16* %v4_10001460, align 2
  %v0_10001464 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10001464, i32* %r3.global-to-local, align 4
  %v0_10001468 = load i32, i32* @r31, align 4
  %v1_10001468 = add i32 %v0_10001468, 4
  %v2_10001468 = inttoptr i32 %v1_10001468 to i16*
  %v3_10001468 = load i16, i16* %v2_10001468, align 2
  %v4_10001468 = zext i16 %v3_10001468 to i32
  %v4_1000146c = call i32 @function_10004430(i32 %v0_10001464, i32 %v0_10001454, i32 %v4_10001468, i32 %v0_1000145c)
  %v5_1000146c = trunc i32 %v4_1000146c to i16
  store i32 %v4_1000146c, i32* %r3.global-to-local, align 4
  %v3_10001470 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10001470, i32* %r7.global-to-local, align 4
  %v0_10001474 = load i32, i32* @r31, align 4
  %v1_10001474 = add i32 %v0_10001474, 2
  %v2_10001474 = inttoptr i32 %v1_10001474 to i16*
  %v3_10001474 = load i16, i16* %v2_10001474, align 2
  %v4_10001474 = zext i16 %v3_10001474 to i32
  store i32 %v4_10001474, i32* %r0.global-to-local, align 4
  %v0_10001478 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000147c = mul i32 %v3_10001470, 24
  store i32 %v1_1000147c, i32* %r7.global-to-local, align 4
  %v4_10001480 = add i32 %v0_10001474, 6
  %v5_10001480 = inttoptr i32 %v4_10001480 to i16*
  store i16 %v5_1000146c, i16* %v5_10001480, align 2
  %v0_10001484 = load i32, i32* %r25.global-to-local, align 4
  %v0_10001488 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10001488, i32* %r3.global-to-local, align 4
  %v0_1000148c = load i32, i32* %r7.global-to-local, align 4
  %v1_1000148c = load i32, i32* %r27.global-to-local, align 4
  %v2_1000148c = add i32 %v1_1000148c, %v0_1000148c
  store i32 %v2_1000148c, i32* %r7.global-to-local, align 4
  %v0_10001494 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001494 = trunc i32 %v0_10001494 to i16
  %v3_10001494 = add i32 %v2_1000148c, 2
  %v4_10001494 = inttoptr i32 %v3_10001494 to i16*
  store i16 %v1_10001494, i16* %v4_10001494, align 2
  store i32 268440736, i32* @lr, align 4
  %v6_1000149c = call i32 @function_10009088(i32 %v0_10001488, i32 %v0_10001478, i32 %v0_10001484, i32 16384, i32 %v2_1000148c, i32 16)
  store i32 %v6_1000149c, i32* %r3.global-to-local, align 4
  %v3_100014a0 = load i32, i32* %stack_var_-104, align 4
  %v1_100014a4 = add i32 %v3_100014a0, 1
  store i32 %v1_100014a4, i32* %r9.global-to-local, align 4
  %v1_100014a8 = load i32, i32* %r19.global-to-local, align 4
  %v2_100014a8 = icmp slt i32 %v1_100014a4, %v1_100014a8
  store i32 %v1_100014a4, i32* %stack_var_-104, align 4
  br i1 %v2_100014a8, label %dec_label_pc_100013fc, label %dec_label_pc_100014b4

dec_label_pc_100014b4:                            ; preds = %dec_label_pc_10001444
  %v0_100014b4 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100014b4 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_100014b4 = or i1 %v0_100014b4, %v1_100014b4
  br i1 %v2_100014b4, label %dec_label_pc_100013e8.preheader, label %dec_label_pc_100013ec

dec_label_pc_100014bc:                            ; preds = %dec_label_pc_100013fc
  %v1_100014bc = add i32 %v2_10001408, 16
  %v2_100014bc = inttoptr i32 %v1_100014bc to i32*
  %v3_100014bc = load i32, i32* %v2_100014bc, align 4
  store i32 %v3_100014bc, i32* %r29.global-to-local, align 4
  %v0_100014c0 = call i32 @function_10005928()
  store i32 %v0_100014c0, i32* %r3.global-to-local, align 4
  %v3_100014c4 = load i32, i32* %stack_var_-104, align 4
  %v1_100014c8 = mul i32 %v3_100014c4, 24
  %v1_100014cc = load i32, i32* %r27.global-to-local, align 4
  %v2_100014cc = add i32 %v1_100014cc, %v1_100014c8
  store i32 %v2_100014cc, i32* %r9.global-to-local, align 4
  %v1_100014d0 = add i32 %v2_100014cc, 20
  %v2_100014d0 = inttoptr i32 %v1_100014d0 to i8*
  %v3_100014d0 = load i8, i8* %v2_100014d0, align 1
  %v4_100014d0 = zext i8 %v3_100014d0 to i32
  store i32 %v4_100014d0, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_100014d0, 64
  %v2_100014d4 = zext i8 %tmp to i32
  %v3_100014d4 = lshr i32 %v0_100014c0, %v2_100014d4
  store i32 %v3_100014d4, i32* %r3.global-to-local, align 4
  %v0_100014d8 = load i32, i32* %r29.global-to-local, align 4
  %v2_100014d8 = add i32 %v3_100014d4, %v0_100014d8
  store i32 %v2_100014d8, i32* %r29.global-to-local, align 4
  %v1_100014dc = load i32, i32* %r28.global-to-local, align 4
  %v2_100014dc = add i32 %v1_100014dc, 16
  %v3_100014dc = inttoptr i32 %v2_100014dc to i32*
  store i32 %v2_100014d8, i32* %v3_100014dc, align 4
  %v0_100014e0 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100014e0, label %dec_label_pc_100014e4, label %dec_label_pc_10001420

dec_label_pc_100014e4:                            ; preds = %dec_label_pc_100014bc, %dec_label_pc_1000141c
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_100014e8 = call i32 @function_10005928()
  store i32 %v0_100014e8, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_100014f0 = load i32, i32* %r28.global-to-local, align 4
  %v2_100014f0 = add i32 %v1_100014f0, 12
  %v3_100014f0 = inttoptr i32 %v2_100014f0 to i32*
  store i32 %v0_100014e8, i32* %v3_100014f0, align 4
  %v0_100014f4 = load i32, i32* %r22.global-to-local, align 4
  %v1_100014f4 = load i32, i32* @r29, align 4
  %v4_100014f4 = icmp eq i32 %v0_100014f4, %v1_100014f4
  br i1 %v4_100014f4, label %dec_label_pc_100014fc, label %dec_label_pc_10001430

dec_label_pc_100014fc:                            ; preds = %dec_label_pc_100014e4, %dec_label_pc_10001420
  %v0_100014fc = call i32 @function_10005928()
  %v1_100014fc = trunc i32 %v0_100014fc to i16
  store i32 %v0_100014fc, i32* %r3.global-to-local, align 4
  %v0_10001500 = load i32, i32* %r23.global-to-local, align 4
  %v1_10001500 = load i32, i32* @r29, align 4
  %v4_10001500 = icmp eq i32 %v0_10001500, %v1_10001500
  %v3_10001504 = load i32, i32* %r28.global-to-local, align 4
  %v4_10001504 = add i32 %v3_10001504, 4
  %v5_10001504 = inttoptr i32 %v4_10001504 to i16*
  store i16 %v1_100014fc, i16* %v5_10001504, align 2
  br i1 %v4_10001500, label %dec_label_pc_1000150c, label %dec_label_pc_100014fc.dec_label_pc_10001438_crit_edge

dec_label_pc_100014fc.dec_label_pc_10001438_crit_edge: ; preds = %dec_label_pc_100014fc
  %v1_10001438.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10001438

dec_label_pc_1000150c:                            ; preds = %dec_label_pc_100014fc, %dec_label_pc_10001430
  %v0_1000150c = call i32 @function_10005928()
  %v1_1000150c = trunc i32 %v0_1000150c to i16
  store i32 %v0_1000150c, i32* %r3.global-to-local, align 4
  %v0_10001510 = load i32, i32* %r24.global-to-local, align 4
  %v1_10001510 = load i32, i32* @r29, align 4
  %v4_10001510 = icmp eq i32 %v0_10001510, %v1_10001510
  %v3_10001514 = load i32, i32* %r28.global-to-local, align 4
  %v4_10001514 = add i32 %v3_10001514, 20
  %v5_10001514 = inttoptr i32 %v4_10001514 to i16*
  store i16 %v1_1000150c, i16* %v5_10001514, align 2
  br i1 %v4_10001510, label %dec_label_pc_1000151c, label %dec_label_pc_10001440

dec_label_pc_1000151c:                            ; preds = %dec_label_pc_1000150c, %dec_label_pc_10001438
  %v0_1000151c = call i32 @function_10005928()
  %v1_1000151c = trunc i32 %v0_1000151c to i16
  store i32 %v0_1000151c, i32* %r3.global-to-local, align 4
  %v3_10001520 = load i32, i32* @r31, align 4
  %v4_10001520 = add i32 %v3_10001520, 2
  %v5_10001520 = inttoptr i32 %v4_10001520 to i16*
  store i16 %v1_1000151c, i16* %v5_10001520, align 2
  %v0_10001524 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10001524, label %dec_label_pc_10001444, label %dec_label_pc_10001528

dec_label_pc_10001528:                            ; preds = %dec_label_pc_10001440, %dec_label_pc_1000151c
  %v0_10001528 = load i32, i32* %r28.global-to-local, align 4
  %v1_10001528 = add i32 %v0_10001528, 28
  store i32 %v1_10001528, i32* @r3, align 4
  %v0_1000152c = load i32, i32* %r18.global-to-local, align 4
  store i32 %v0_1000152c, i32* @r4, align 4
  %v0_10001530 = call i32 @function_10005afc()
  store i32 %v0_10001530, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001444

dec_label_pc_10001538:                            ; preds = %dec_label_pc_100012f0
  %v0_10001538 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10001538, i32* %r3.global-to-local, align 4
  store i32 268440896, i32* @lr, align 4
  %v0_1000153c = call i32 @function_10008418()
  store i32 %v0_1000153c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001540

dec_label_pc_10001540:                            ; preds = %dec_label_pc_10001174, %dec_label_pc_10001538
  store i32 %v0_1000118c, i32* %r0.global-to-local, align 4
  %v1_10001554 = call %0 @__asm_mtcrf(i32 56, i32 %v0_1000117c)
  store i32 %v0_100011c0, i32* %r28.global-to-local, align 4
  store i32 %v0_100011c8, i32* %r29.global-to-local, align 4
  store i32 %v0_100011d0, i32* %r30.global-to-local, align 4
  store i32 %v0_100011d4, i32* %r31.global-to-local, align 4
  %v0_1000159c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000159c

dec_label_pc_100015a0:                            ; preds = %dec_label_pc_10001340
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100015a8

dec_label_pc_100015a8:                            ; preds = %dec_label_pc_100015a8, %dec_label_pc_100015a0
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268441012, i32* @lr, align 4
  %v2_100015b0 = call i32 @function_10009460(i32 1510, i32 1)
  store i32 %v2_100015b0, i32* %r3.global-to-local, align 4
  %v3_100015b4 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100015b4, i32* %r9.global-to-local, align 4
  %v0_100015b8 = load i32, i32* @r31, align 4
  %v1_100015b8 = mul i32 %v0_100015b8, 4
  store i32 %v1_100015b8, i32* %r0.global-to-local, align 4
  %v1_100015bc = load i32, i32* %r20.global-to-local, align 4
  %v3_100015bc = add i32 %v1_100015bc, %v1_100015b8
  %v4_100015bc = inttoptr i32 %v3_100015bc to i32*
  store i32 %v2_100015b0, i32* %v4_100015bc, align 4
  %v0_100015c0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100015c0 = mul i32 %v0_100015c0, 4
  store i32 %v1_100015c0, i32* %r9.global-to-local, align 4
  %v1_100015c4 = load i32, i32* %r20.global-to-local, align 4
  %v2_100015c4 = add i32 %v1_100015c4, %v1_100015c0
  %v3_100015c4 = inttoptr i32 %v2_100015c4 to i32*
  %v4_100015c4 = load i32, i32* %v3_100015c4, align 4
  store i32 %v4_100015c4, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_100015cc = inttoptr i32 %v4_100015c4 to i32*
  %v2_100015cc = load i32, i32* %v1_100015cc, align 4
  store i32 %v2_100015cc, i32* %r0.global-to-local, align 4
  %v1_100015d0 = add i32 %v4_100015c4, 20
  store i32 %v1_100015d0, i32* %r10.global-to-local, align 4
  %v0_100015d4 = load i32, i32* %r16.global-to-local, align 4
  %v1_100015d4 = trunc i32 %v0_100015d4 to i8
  %v3_100015d4 = add i32 %v4_100015c4, 8
  %v4_100015d4 = inttoptr i32 %v3_100015d4 to i8*
  store i8 %v1_100015d4, i8* %v4_100015d4, align 1
  %v1_100015d8 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100015d8, i32* %r0.global-to-local, align 4
  %v0_100015dc = load i32, i32* @r30, align 4
  %v1_100015dc = load i32, i32* %r11.global-to-local, align 4
  %v2_100015dc = add i32 %v1_100015dc, 12
  %v3_100015dc = inttoptr i32 %v2_100015dc to i32*
  store i32 %v0_100015dc, i32* %v3_100015dc, align 4
  %v1_100015e0 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_100015e4 = load i32, i32* %r22.global-to-local, align 4
  %v1_100015e4 = trunc i32 %v0_100015e4 to i16
  %v2_100015e4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100015e4 = add i32 %v2_100015e4, 4
  %v4_100015e4 = inttoptr i32 %v3_100015e4 to i16*
  store i16 %v1_100015e4, i16* %v4_100015e4, align 2
  %v1_100015e8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100015e8 = inttoptr i32 %v1_100015e8 to i32*
  store i32 %v1_100015e0, i32* %v2_100015e8, align 4
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_100015f0 = load i32, i32* %r11.global-to-local, align 4
  %v3_100015f0 = add i32 %v2_100015f0, 9
  %v4_100015f0 = inttoptr i32 %v3_100015f0 to i8*
  store i8 17, i8* %v4_100015f0, align 1
  %v0_100015f4 = load i32, i32* %r15.global-to-local, align 4
  %v1_100015f4 = trunc i32 %v0_100015f4 to i8
  %v2_100015f4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100015f4 = add i32 %v2_100015f4, 1
  %v4_100015f4 = inttoptr i32 %v3_100015f4 to i8*
  store i8 %v1_100015f4, i8* %v4_100015f4, align 1
  %v0_100015f8 = load i32, i32* @r28, align 4
  %v1_100015f8 = trunc i32 %v0_100015f8 to i16
  %v2_100015f8 = load i32, i32* %r11.global-to-local, align 4
  %v3_100015f8 = add i32 %v2_100015f8, 2
  %v4_100015f8 = inttoptr i32 %v3_100015f8 to i16*
  store i16 %v1_100015f8, i16* %v4_100015f8, align 2
  %v3_100015fc = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100015fc, i32* %r9.global-to-local, align 4
  %v0_10001600 = load i32, i32* %r23.global-to-local, align 4
  %v1_10001600 = trunc i32 %v0_10001600 to i16
  %v2_10001600 = load i32, i32* %r11.global-to-local, align 4
  %v3_10001600 = add i32 %v2_10001600, 20
  %v4_10001600 = inttoptr i32 %v3_10001600 to i16*
  store i16 %v1_10001600, i16* %v4_10001600, align 2
  %v0_10001604 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001604 = add i32 %v0_10001604, 1
  store i32 %v1_10001604, i32* %r31.global-to-local, align 4
  %v1_10001608 = mul i32 %v0_10001604, 24
  %v1_1000160c = load i32, i32* %r19.global-to-local, align 4
  %v2_1000160c = icmp slt i32 %v1_10001604, %v1_1000160c
  %v1_10001610 = load i32, i32* %r27.global-to-local, align 4
  %v2_10001610 = add i32 %v1_10001610, %v1_10001608
  store i32 %v2_10001610, i32* %r9.global-to-local, align 4
  %v1_10001614 = add i32 %v2_10001610, 16
  %v2_10001614 = inttoptr i32 %v1_10001614 to i32*
  %v3_10001614 = load i32, i32* %v2_10001614, align 4
  store i32 %v3_10001614, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r9.global-to-local, align 4
  %v2_1000161c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000161c = add i32 %v2_1000161c, 6
  %v4_1000161c = inttoptr i32 %v3_1000161c to i16*
  store i16 16384, i16* %v4_1000161c, align 2
  %v0_10001620 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001620 = load i32, i32* %r11.global-to-local, align 4
  %v2_10001620 = add i32 %v1_10001620, 16
  %v3_10001620 = inttoptr i32 %v2_10001620 to i32*
  store i32 %v0_10001620, i32* %v3_10001620, align 4
  %v0_10001624 = load i32, i32* @r29, align 4
  %v1_10001624 = trunc i32 %v0_10001624 to i16
  %v2_10001624 = load i32, i32* %r10.global-to-local, align 4
  %v3_10001624 = add i32 %v2_10001624, 4
  %v4_10001624 = inttoptr i32 %v3_10001624 to i16*
  store i16 %v1_10001624, i16* %v4_10001624, align 2
  %v0_10001628 = load i32, i32* %r24.global-to-local, align 4
  %v1_10001628 = trunc i32 %v0_10001628 to i16
  %v2_10001628 = load i32, i32* %r10.global-to-local, align 4
  %v3_10001628 = add i32 %v2_10001628, 2
  %v4_10001628 = inttoptr i32 %v3_10001628 to i16*
  store i16 %v1_10001628, i16* %v4_10001628, align 2
  %v0_1000162c = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_1000162c, i32* %stack_var_-104, align 4
  br i1 %v2_1000160c, label %dec_label_pc_100015a8, label %dec_label_pc_100013e0

dec_label_pc_10001638:                            ; preds = %dec_label_pc_10001330
  %v0_10001638 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001638 = icmp eq i32 %v0_10001638, -1
  store i1 %v3_10001638, i1* %cr2_eq.global-to-local, align 1
  %v0_1000163c = load i32, i32* %r17.global-to-local, align 4
  %v3_1000163c = icmp eq i32 %v0_1000163c, 0
  store i1 %v3_1000163c, i1* %cr3_eq.global-to-local, align 1
  %v1_10001640 = add nuw nsw i32 %v0_10001640, 28
  store i32 %v1_10001640, i32* %r25.global-to-local, align 4
  %v1_10001644 = add nuw nsw i32 %v0_10001640, 8
  store i32 %v1_10001644, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_100013e8.preheader

; uselistorder directives
  uselistorder i32 %v1_100015c0, { 1, 0 }
  uselistorder i32 %v1_100015b8, { 1, 0 }
  uselistorder i32 %v0_1000151c, { 1, 0 }
  uselistorder i32 %v0_1000150c, { 1, 0 }
  uselistorder i32 %v0_100014fc, { 1, 0 }
  uselistorder i32 %v1_100014f4, { 1, 0 }
  uselistorder i1 %v1_100014b4, { 1, 0 }
  uselistorder i1 %v0_100014b4, { 1, 0 }
  uselistorder i32 %v1_100014a4, { 0, 2, 3, 1 }
  uselistorder i32 %v4_1000146c, { 1, 0 }
  uselistorder i32 %v1_10001400, { 1, 0 }
  uselistorder i32 %v1_10001374, { 1, 0 }
  uselistorder i32 %v1_1000136c, { 1, 0 }
  uselistorder i32 %v0_10001640, { 1, 0, 3, 2 }
  uselistorder i32 %v1_10001314, { 1, 2, 0 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32* %r30.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 20, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 0, 1 }
  uselistorder i32* %r29.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r28.global-to-local, { 0, 9, 1, 2, 3, 4, 5, 6, 7, 8, 10 }
  uselistorder i32* %r18.global-to-local, { 1, 2, 0 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10001540, { 1, 0 }
  uselistorder label %dec_label_pc_10001528, { 1, 0 }
  uselistorder label %dec_label_pc_10001444, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100013ec, { 1, 0 }
  uselistorder label %dec_label_pc_100013e8, { 1, 0 }
  uselistorder label %dec_label_pc_100013e8.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10001330, { 1, 0 }
}

define i32 @function_10001650(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10001650:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-90 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_10001654 = load i32, i32* @lr, align 4
  store i32 %v0_10001654, i32* %r0.global-to-local, align 4
  %v0_10001658 = call i32 @__asm_mfcr()
  store i32 %v0_10001658, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r25.global-to-local, align 4
  %v0_10001668 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10001658, i32* %r18.global-to-local, align 4
  %v0_1000169c = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100016a4 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_100016ac = load i32, i32* @r30, align 4
  %v0_100016b0 = load i32, i32* @r31, align 4
  store i32 268441284, i32* @lr, align 4
  %v2_100016c0 = call i32 @function_10009460(i32 4, i32 4)
  store i32 %v2_100016c0, i32* %r19.global-to-local, align 4
  %v0_100016c8 = load i32, i32* @r28, align 4
  %v0_100016d4 = load i32, i32* @r29, align 4
  store i32 %v0_100016d4, i32* %r3.global-to-local, align 4
  store i32 268441308, i32* @lr, align 4
  %v4_100016d8 = inttoptr i32 %v0_100016c8 to i32*
  %v5_100016d8 = call i32 @function_100006a8(i32 %v0_100016d4, i32* %v4_100016d8, i32 2, i32 0)
  %v0_100016e8 = load i32, i32* @r28, align 4
  %v1_100016ec = urem i32 %v5_100016d8, 256
  store i32 %v1_100016ec, i32* %r14.global-to-local, align 4
  %v0_100016f0 = load i32, i32* @r29, align 4
  store i32 %v0_100016f0, i32* %r3.global-to-local, align 4
  store i32 268441336, i32* @lr, align 4
  %v4_100016f4 = inttoptr i32 %v0_100016e8 to i32*
  %v5_100016f4 = call i32 @function_100006a8(i32 %v0_100016f0, i32* %v4_100016f4, i32 3, i32 65535)
  %v0_100016f8 = load i32, i32* @r28, align 4
  store i32 %v5_100016f4, i32* %r24.global-to-local, align 4
  %v0_10001708 = load i32, i32* @r29, align 4
  store i32 %v0_10001708, i32* %r3.global-to-local, align 4
  store i32 268441360, i32* @lr, align 4
  %v4_1000170c = inttoptr i32 %v0_100016f8 to i32*
  %v5_1000170c = call i32 @function_100006a8(i32 %v0_10001708, i32* %v4_1000170c, i32 4, i32 64)
  %v0_10001710 = load i32, i32* @r28, align 4
  %v1_1000171c = urem i32 %v5_1000170c, 256
  store i32 %v1_1000171c, i32* %r20.global-to-local, align 4
  %v0_10001720 = load i32, i32* @r29, align 4
  store i32 %v0_10001720, i32* %r3.global-to-local, align 4
  store i32 268441384, i32* @lr, align 4
  %v4_10001724 = inttoptr i32 %v0_10001710 to i32*
  %v5_10001724 = call i32 @function_100006a8(i32 %v0_10001720, i32* %v4_10001724, i32 5, i32 1)
  %v0_10001734 = load i32, i32* @r28, align 4
  %v1_10001738 = urem i32 %v5_10001724, 256
  store i32 %v1_10001738, i32* @r31, align 4
  %v0_1000173c = load i32, i32* @r29, align 4
  store i32 %v0_1000173c, i32* %r3.global-to-local, align 4
  store i32 268441412, i32* @lr, align 4
  %v4_10001740 = inttoptr i32 %v0_10001734 to i32*
  %v5_10001740 = call i32 @function_100006a8(i32 %v0_1000173c, i32* %v4_10001740, i32 6, i32 65535)
  %v0_10001748 = load i32, i32* @r28, align 4
  store i32 %v5_10001740, i32* %r26.global-to-local, align 4
  %v0_10001758 = load i32, i32* @r29, align 4
  store i32 %v0_10001758, i32* %r3.global-to-local, align 4
  store i32 268441440, i32* @lr, align 4
  %v4_1000175c = inttoptr i32 %v0_10001748 to i32*
  %v5_1000175c = call i32 @function_100006a8(i32 %v0_10001758, i32* %v4_1000175c, i32 7, i32 65535)
  %v0_10001760 = load i32, i32* @r28, align 4
  store i32 %v5_1000175c, i32* %r27.global-to-local, align 4
  %v0_10001770 = load i32, i32* @r29, align 4
  store i32 %v0_10001770, i32* %r3.global-to-local, align 4
  store i32 268441464, i32* @lr, align 4
  %v4_10001774 = inttoptr i32 %v0_10001760 to i32*
  %v5_10001774 = call i32 @function_100006a8(i32 %v0_10001770, i32* %v4_10001774, i32 0, i32 512)
  %v0_10001778 = load i32, i32* @r28, align 4
  store i32 %v5_10001774, i32* %r15.global-to-local, align 4
  %v0_10001788 = load i32, i32* @r29, align 4
  store i32 %v0_10001788, i32* %r3.global-to-local, align 4
  store i32 268441488, i32* @lr, align 4
  %v4_1000178c = inttoptr i32 %v0_10001778 to i32*
  %v5_1000178c = call i32 @function_100006a8(i32 %v0_10001788, i32* %v4_1000178c, i32 1, i32 1)
  %v0_10001790 = load i32, i32* @r28, align 4
  %v1_1000179c = urem i32 %v5_1000178c, 256
  store i32 %v1_1000179c, i32* %r21.global-to-local, align 4
  %v0_100017a0 = load i32, i32* @r29, align 4
  store i32 %v0_100017a0, i32* %r3.global-to-local, align 4
  store i32 268441512, i32* @lr, align 4
  %v4_100017a4 = inttoptr i32 %v0_10001790 to i32*
  %v5_100017a4 = call i32 @function_100006a8(i32 %v0_100017a0, i32* %v4_100017a4, i32 19, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_100017ac = load i32, i32* @global_var_1001b500.16, align 4
  %v0_100017b0 = load i32, i32* @r28, align 4
  store i32 %v5_100017a4, i32* %r30.global-to-local, align 4
  %v0_100017bc = load i32, i32* @r29, align 4
  store i32 %v0_100017bc, i32* %r3.global-to-local, align 4
  store i32 268441540, i32* @lr, align 4
  %v4_100017c0 = inttoptr i32 %v0_100017b0 to i32*
  %v5_100017c0 = call i32 @function_100006a8(i32 %v0_100017bc, i32* %v4_100017c0, i32 25, i32 %v3_100017ac)
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268441560, i32* @lr, align 4
  %v3_100017d4 = call i32 @function_10009104(i32 2, i32 3, i32 6)
  store i32 %v3_100017d4, i32* %r3.global-to-local, align 4
  %v3_100017d8 = icmp eq i32 %v3_100017d4, -1
  store i1 %v3_100017d8, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_100017d4, i32* %r23.global-to-local, align 4
  br i1 %v3_100017d8, label %dec_label_pc_1000197c, label %dec_label_pc_100017e4

dec_label_pc_100017e4:                            ; preds = %dec_label_pc_10001650
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_100017f0 = ptrtoint i32* %stack_var_-104 to i32
  store i32 1, i32* %stack_var_-104, align 4
  store i32 268441600, i32* @lr, align 4
  %v4_100017fc = call i32 @function_100090c8(i32 0, i32 3, i32 %v2_100017f0, i32 4)
  store i32 %v4_100017fc, i32* %r3.global-to-local, align 4
  %v3_10001800 = icmp eq i32 %v4_100017fc, -1
  store i1 %v3_10001800, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001800, label %dec_label_pc_10001974, label %dec_label_pc_10001808

dec_label_pc_10001808:                            ; preds = %dec_label_pc_100017e4
  %v0_10001808 = load i32, i32* %r18.global-to-local, align 4
  %v1_10001808 = icmp slt i32 %v0_10001808, 0
  %v3_10001808 = icmp eq i32 %v0_10001808, 0
  store i1 %v1_10001808, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10001808, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %v0_10001814 = load i32, i32* %r24.global-to-local, align 4
  %v1_10001814 = urem i32 %v0_10001814, 65536
  store i32 %v1_10001814, i32* %r24.global-to-local, align 4
  %v0_10001818 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001818 = urem i32 %v0_10001818, 65536
  store i32 %v1_10001818, i32* %r16.global-to-local, align 4
  %v0_1000181c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000181c = urem i32 %v0_1000181c, 65536
  store i32 %v1_1000181c, i32* %r17.global-to-local, align 4
  %v0_10001820 = load i32, i32* %r30.global-to-local, align 4
  %v1_10001820 = urem i32 %v0_10001820, 256
  store i32 %v1_10001820, i32* %r3.global-to-local, align 4
  %tmp37 = icmp slt i32 %v0_10001808, 1
  br i1 %tmp37, label %dec_label_pc_100019dc, label %dec_label_pc_10001828

dec_label_pc_10001828:                            ; preds = %dec_label_pc_10001808
  %v0_10001828 = load i32, i32* @r31, align 4
  %v3_10001828 = icmp eq i32 %v0_10001828, 0
  store i1 %v3_10001828, i1* %cr2_eq.global-to-local, align 1
  %v3_1000182c = icmp eq i32 %v1_10001820, 0
  store i1 %v3_1000182c, i1* %cr3_eq.global-to-local, align 1
  %v0_10001830 = load i32, i32* %r15.global-to-local, align 4
  %v1_10001830 = urem i32 %v0_10001830, 65536
  %v0_10001814.not = or i32 %v0_10001814, -65536
  %v1_10001834 = xor i32 %v0_10001814.not, 65535
  store i32 %v1_10001834, i32* %r11.global-to-local, align 4
  %v1_1000183c = add nuw nsw i32 %v1_10001830, 66
  store i32 %v1_1000183c, i32* %r0.global-to-local, align 4
  %v1_10001840 = add nuw nsw i32 %v1_10001830, 28
  store i32 %v1_10001840, i32* %r9.global-to-local, align 4
  %fold = add i32 %v0_10001830, 66
  %v1_10001844 = urem i32 %fold, 65536
  store i32 %v1_10001844, i32* %r22.global-to-local, align 4
  %fold8 = add i32 %v0_10001830, 28
  %v1_10001848 = urem i32 %fold8, 65536
  store i32 %v1_10001848, i32* %r26.global-to-local, align 4
  %v1_1000184c = urem i32 %v1_10001834, 65536
  store i32 %v1_1000184c, i32* %r27.global-to-local, align 4
  %fold9 = add i32 %v0_10001830, 8
  %v1_10001850 = urem i32 %fold9, 65536
  store i32 %v1_10001850, i32* @r28, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10001884

dec_label_pc_1000185c:                            ; preds = %dec_label_pc_10001950
  %v0_1000185c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000185c = add i32 %v0_1000185c, 16
  %v2_1000185c = inttoptr i32 %v1_1000185c to i32*
  %v3_1000185c = load i32, i32* %v2_1000185c, align 4
  store i32 %v3_1000185c, i32* %r0.global-to-local, align 4
  %v1_10001860 = load i32, i32* %r30.global-to-local, align 4
  %v2_10001860 = add i32 %v1_10001860, 16
  %v3_10001860 = inttoptr i32 %v2_10001860 to i32*
  store i32 %v3_1000185c, i32* %v3_10001860, align 4
  br label %dec_label_pc_10001864

dec_label_pc_10001864:                            ; preds = %dec_label_pc_1000196c, %dec_label_pc_1000185c
  %v3_10001864 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10001864, i32* %r9.global-to-local, align 4
  %v0_10001868 = load i32, i32* @r28, align 4
  %v1_10001868 = trunc i32 %v0_10001868 to i16
  %v2_10001868 = load i32, i32* %r29.global-to-local, align 4
  %v3_10001868 = add i32 %v2_10001868, 4
  %v4_10001868 = inttoptr i32 %v3_10001868 to i16*
  store i16 %v1_10001868, i16* %v4_10001868, align 2
  %v0_1000186c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000186c = add i32 %v0_1000186c, 1
  store i32 %v1_1000186c, i32* %r31.global-to-local, align 4
  %v0_10001870 = load i32, i32* %r16.global-to-local, align 4
  %v1_10001870 = trunc i32 %v0_10001870 to i16
  %v2_10001870 = load i32, i32* %r29.global-to-local, align 4
  %v3_10001870 = inttoptr i32 %v2_10001870 to i16*
  store i16 %v1_10001870, i16* %v3_10001870, align 2
  %v0_10001874 = load i32, i32* %r31.global-to-local, align 4
  %v1_10001874 = load i32, i32* %r18.global-to-local, align 4
  %v2_10001874 = icmp slt i32 %v0_10001874, %v1_10001874
  %v4_10001874 = icmp eq i32 %v0_10001874, %v1_10001874
  store i1 %v4_10001874, i1* %cr7_eq.global-to-local, align 1
  %v0_10001878 = load i32, i32* %r17.global-to-local, align 4
  %v1_10001878 = trunc i32 %v0_10001878 to i16
  %v2_10001878 = load i32, i32* %r29.global-to-local, align 4
  %v3_10001878 = add i32 %v2_10001878, 2
  %v4_10001878 = inttoptr i32 %v3_10001878 to i16*
  store i16 %v1_10001878, i16* %v4_10001878, align 2
  %v0_1000187c = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_1000187c, i32* %stack_var_-104, align 4
  br i1 %v2_10001874, label %dec_label_pc_10001884, label %dec_label_pc_100019e0

dec_label_pc_10001884:                            ; preds = %dec_label_pc_10001864, %dec_label_pc_10001828
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268441744, i32* @lr, align 4
  %v2_1000188c = call i32 @function_10009460(i32 1510, i32 4)
  store i32 %v2_1000188c, i32* %r3.global-to-local, align 4
  %v3_10001890 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10001890, i32* %r9.global-to-local, align 4
  %v0_10001894 = load i32, i32* @r31, align 4
  %v1_10001894 = mul i32 %v0_10001894, 4
  store i32 %v1_10001894, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r11.global-to-local, align 4
  %v1_1000189c = load i32, i32* %r19.global-to-local, align 4
  %v3_1000189c = add i32 %v1_1000189c, %v1_10001894
  %v4_1000189c = inttoptr i32 %v3_1000189c to i32*
  store i32 %v2_1000188c, i32* %v4_1000189c, align 4
  %v0_100018a0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100018a0 = mul i32 %v0_100018a0, 4
  store i32 %v1_100018a0, i32* %r9.global-to-local, align 4
  %v1_100018a4 = load i32, i32* %r19.global-to-local, align 4
  %v2_100018a4 = add i32 %v1_100018a4, %v1_100018a0
  %v3_100018a4 = inttoptr i32 %v2_100018a4 to i32*
  %v4_100018a4 = load i32, i32* %v3_100018a4, align 4
  store i32 %v4_100018a4, i32* %r31.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_100018ac = inttoptr i32 %v4_100018a4 to i32*
  %v2_100018ac = load i32, i32* %v1_100018ac, align 4
  store i32 %v2_100018ac, i32* %r0.global-to-local, align 4
  %v1_100018b0 = add i32 %v4_100018a4, 38
  store i32 %v1_100018b0, i32* %r30.global-to-local, align 4
  %v0_100018b4 = load i32, i32* %r20.global-to-local, align 4
  %v1_100018b4 = trunc i32 %v0_100018b4 to i8
  %v3_100018b4 = add i32 %v4_100018a4, 8
  %v4_100018b4 = inttoptr i32 %v3_100018b4 to i8*
  store i8 %v1_100018b4, i8* %v4_100018b4, align 1
  %v0_100018b8 = load i32, i32* %r31.global-to-local, align 4
  %v1_100018b8 = add i32 %v0_100018b8, 58
  store i32 %v1_100018b8, i32* %r29.global-to-local, align 4
  %v1_100018bc = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100018bc, i32* %r0.global-to-local, align 4
  %v0_100018c0 = load i32, i32* %r24.global-to-local, align 4
  %v1_100018c0 = trunc i32 %v0_100018c0 to i16
  %v2_100018c0 = load i32, i32* %r31.global-to-local, align 4
  %v3_100018c0 = add i32 %v2_100018c0, 4
  %v4_100018c0 = inttoptr i32 %v3_100018c0 to i16*
  store i16 %v1_100018c0, i16* %v4_100018c0, align 2
  %v1_100018c4 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_100018c4, i32* %r0.global-to-local, align 4
  %v0_100018c8 = load i32, i32* %r31.global-to-local, align 4
  %v1_100018c8 = add i32 %v0_100018c8, 20
  store i32 %v1_100018c8, i32* %r9.global-to-local, align 4
  %v2_100018cc = inttoptr i32 %v0_100018c8 to i32*
  store i32 %v1_100018c4, i32* %v2_100018cc, align 4
  %v0_100018d0 = load i32, i32* %r31.global-to-local, align 4
  %v1_100018d0 = add i32 %v0_100018d0, 24
  store i32 %v1_100018d0, i32* %r11.global-to-local, align 4
  %v0_100018d4 = load i32, i32* %r14.global-to-local, align 4
  %v1_100018d4 = trunc i32 %v0_100018d4 to i8
  %v3_100018d4 = add i32 %v0_100018d0, 1
  %v4_100018d4 = inttoptr i32 %v3_100018d4 to i8*
  store i8 %v1_100018d4, i8* %v4_100018d4, align 1
  %v0_100018d8 = load i32, i32* %r22.global-to-local, align 4
  %v1_100018d8 = trunc i32 %v0_100018d8 to i16
  %v2_100018d8 = load i32, i32* %r31.global-to-local, align 4
  %v3_100018d8 = add i32 %v2_100018d8, 2
  %v4_100018d8 = inttoptr i32 %v3_100018d8 to i16*
  store i16 %v1_100018d8, i16* %v4_100018d8, align 2
  %v0_100018dc = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100018dc, label %dec_label_pc_100018e8, label %dec_label_pc_100018e0

dec_label_pc_100018e0:                            ; preds = %dec_label_pc_10001884
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_100018e4 = load i32, i32* %r31.global-to-local, align 4
  %v3_100018e4 = add i32 %v2_100018e4, 6
  %v4_100018e4 = inttoptr i32 %v3_100018e4 to i16*
  store i16 16384, i16* %v4_100018e4, align 2
  br label %dec_label_pc_100018e8

dec_label_pc_100018e8:                            ; preds = %dec_label_pc_10001884, %dec_label_pc_100018e0
  %v2_100018ec = load i32, i32* %r31.global-to-local, align 4
  %v3_100018ec = add i32 %v2_100018ec, 9
  %v4_100018ec = inttoptr i32 %v3_100018ec to i8*
  store i8 47, i8* %v4_100018ec, align 1
  store i32 25944, i32* %r0.global-to-local, align 4
  %v2_100018f4 = load i32, i32* %r9.global-to-local, align 4
  %v3_100018f4 = add i32 %v2_100018f4, 2
  %v4_100018f4 = inttoptr i32 %v3_100018f4 to i16*
  store i16 25944, i16* %v4_100018f4, align 2
  %v2_100018fc = load i32, i32* %r11.global-to-local, align 4
  %v3_100018fc = add i32 %v2_100018fc, 12
  %v4_100018fc = inttoptr i32 %v3_100018fc to i16*
  store i16 2048, i16* %v4_100018fc, align 2
  %v3_10001900 = load i32, i32* %stack_var_-104, align 4
  store i32 %v5_100017c0, i32* %r11.global-to-local, align 4
  %v1_10001908 = mul i32 %v3_10001900, 24
  store i32 %v1_10001908, i32* %r9.global-to-local, align 4
  %v0_1000190c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000190c = add i32 %v0_1000190c, 38
  %v2_1000190c = inttoptr i32 %v1_1000190c to i32*
  %v3_1000190c = load i32, i32* %v2_1000190c, align 4
  store i32 %v3_1000190c, i32* %r0.global-to-local, align 4
  %v2_10001910 = add i32 %v0_1000190c, 12
  %v3_10001910 = inttoptr i32 %v2_10001910 to i32*
  store i32 %v5_100017c0, i32* %v3_10001910, align 4
  store i32 4, i32* %r11.global-to-local, align 4
  %v0_10001918 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001918 = load i32, i32* %r25.global-to-local, align 4
  %v2_10001918 = add i32 %v1_10001918, %v0_10001918
  store i32 %v2_10001918, i32* %r9.global-to-local, align 4
  %v1_1000191c = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_1000191c, i32* %r0.global-to-local, align 4
  %v0_10001920 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001920 = add i32 %v0_10001920, 16
  %v2_10001920 = inttoptr i32 %v1_10001920 to i32*
  %v3_10001920 = load i32, i32* %v2_10001920, align 4
  store i32 %v3_10001920, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10001928 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10001928, i32* %r0.global-to-local, align 4
  %v1_1000192c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000192c = add i32 %v1_1000192c, 38
  %v3_1000192c = inttoptr i32 %v2_1000192c to i32*
  store i32 %v1_10001928, i32* %v3_1000192c, align 4
  %v0_10001930 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001930 = load i32, i32* %r31.global-to-local, align 4
  %v2_10001930 = add i32 %v1_10001930, 16
  %v3_10001930 = inttoptr i32 %v2_10001930 to i32*
  store i32 %v0_10001930, i32* %v3_10001930, align 4
  %v0_10001934 = load i32, i32* %r14.global-to-local, align 4
  %v1_10001934 = trunc i32 %v0_10001934 to i8
  %v2_10001934 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001934 = add i32 %v2_10001934, 1
  %v4_10001934 = inttoptr i32 %v3_10001934 to i8*
  store i8 %v1_10001934, i8* %v4_10001934, align 1
  %v0_10001938 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001938 = trunc i32 %v0_10001938 to i16
  %v2_10001938 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001938 = add i32 %v2_10001938, 2
  %v4_10001938 = inttoptr i32 %v3_10001938 to i16*
  store i16 %v1_10001938, i16* %v4_10001938, align 2
  %v0_1000193c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000193c = trunc i32 %v0_1000193c to i16
  %v2_1000193c = load i32, i32* %r30.global-to-local, align 4
  %v3_1000193c = add i32 %v2_1000193c, 4
  %v4_1000193c = inttoptr i32 %v3_1000193c to i16*
  store i16 %v1_1000193c, i16* %v4_1000193c, align 2
  %v0_10001940 = load i32, i32* %r20.global-to-local, align 4
  %v1_10001940 = trunc i32 %v0_10001940 to i8
  %v2_10001940 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001940 = add i32 %v2_10001940, 8
  %v4_10001940 = inttoptr i32 %v3_10001940 to i8*
  store i8 %v1_10001940, i8* %v4_10001940, align 1
  %v0_10001944 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10001944, label %dec_label_pc_10001950, label %dec_label_pc_10001948

dec_label_pc_10001948:                            ; preds = %dec_label_pc_100018e8
  store i32 16384, i32* %r11.global-to-local, align 4
  %v2_1000194c = load i32, i32* %r30.global-to-local, align 4
  %v3_1000194c = add i32 %v2_1000194c, 6
  %v4_1000194c = inttoptr i32 %v3_1000194c to i16*
  store i16 16384, i16* %v4_1000194c, align 2
  br label %dec_label_pc_10001950

dec_label_pc_10001950:                            ; preds = %dec_label_pc_100018e8, %dec_label_pc_10001948
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_10001954 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001954 = add i32 %v2_10001954, 9
  %v4_10001954 = inttoptr i32 %v3_10001954 to i8*
  store i8 17, i8* %v4_10001954, align 1
  %v0_10001958 = call i32 @function_10005928()
  store i32 %v0_10001958, i32* %r3.global-to-local, align 4
  %v1_1000195c = add i32 %v0_10001958, -1024
  store i32 %v1_1000195c, i32* %r0.global-to-local, align 4
  %v1_10001960 = load i32, i32* %r30.global-to-local, align 4
  %v2_10001960 = add i32 %v1_10001960, 12
  %v3_10001960 = inttoptr i32 %v2_10001960 to i32*
  store i32 %v0_10001958, i32* %v3_10001960, align 4
  %v0_10001964 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001964 = sub i32 -1, %v0_10001964
  store i32 %v1_10001964, i32* %r0.global-to-local, align 4
  %v0_10001968 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10001968, label %dec_label_pc_1000196c, label %dec_label_pc_1000185c

dec_label_pc_1000196c:                            ; preds = %dec_label_pc_10001950
  %v1_1000196c = load i32, i32* %r30.global-to-local, align 4
  %v2_1000196c = add i32 %v1_1000196c, 16
  %v3_1000196c = inttoptr i32 %v2_1000196c to i32*
  store i32 %v1_10001964, i32* %v3_1000196c, align 4
  br label %dec_label_pc_10001864

dec_label_pc_10001974:                            ; preds = %dec_label_pc_100017e4
  %v0_10001974 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10001974, i32* %r3.global-to-local, align 4
  store i32 268441980, i32* @lr, align 4
  %v0_10001978 = call i32 @function_10008418()
  store i32 %v0_10001978, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000197c

dec_label_pc_1000197c:                            ; preds = %dec_label_pc_10001650, %dec_label_pc_10001974
  store i32 %v0_10001668, i32* %r0.global-to-local, align 4
  %v1_10001990 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10001658)
  store i32 %v0_1000169c, i32* %r28.global-to-local, align 4
  store i32 %v0_100016a4, i32* %r29.global-to-local, align 4
  store i32 %v0_100016ac, i32* %r30.global-to-local, align 4
  store i32 %v0_100016b0, i32* %r31.global-to-local, align 4
  %v0_100019d8 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100019d8

dec_label_pc_100019dc:                            ; preds = %dec_label_pc_10001808
  %v3_100019dc = icmp eq i32 %v1_10001820, 0
  store i1 %v3_100019dc, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_100019e0

dec_label_pc_100019e0:                            ; preds = %dec_label_pc_10001864, %dec_label_pc_100019dc
  store i32 %v5_100017c0, i32* %r0.global-to-local, align 4
  %v0_100019e4 = load i32, i32* %r21.global-to-local, align 4
  %v3_100019e4 = icmp eq i32 %v0_100019e4, 0
  store i1 %v3_100019e4, i1* %cr2_eq.global-to-local, align 1
  %v2_100019e8 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_100019e8, i32* %r14.global-to-local, align 4
  %v0_100019ec = load i32, i32* %r15.global-to-local, align 4
  %v1_100019ec = add i32 %v0_100019ec, 8
  store i32 %v1_100019ec, i32* %r21.global-to-local, align 4
  %v3_100019f0 = icmp eq i32 %v5_100017c0, -1
  store i1 %v3_100019f0, i1* %cr7_eq.global-to-local, align 1
  %v1_100019f4 = add i32 %v0_100019ec, 66
  store i32 %v1_100019f4, i32* %r22.global-to-local, align 4
  %v0_100019f8 = call i32 @__asm_mfcr()
  store i32 %v0_100019f8, i32* %r3.global-to-local, align 4
  %v1_100019fc = mul i32 %v0_100019f8, 268435456
  store i32 %v1_100019fc, i32* %r20.global-to-local, align 4
  %v2_10001a90 = ptrtoint i32* %stack_var_-100 to i32
  %v2_10001ab4 = ptrtoint i32* %stack_var_-92 to i32
  %v2_10001ac4 = ptrtoint i32* %stack_var_-90 to i32
  %v0_10001a00.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10001a00.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10001a00.outer

dec_label_pc_10001a00.outer:                      ; preds = %dec_label_pc_10001b64, %dec_label_pc_100019e0
  %v1_10001a00.ph = phi i1 [ %v1_10001a00.pre, %dec_label_pc_100019e0 ], [ %v1_10001b64, %dec_label_pc_10001b64 ]
  %v0_10001a00.ph = phi i1 [ %v0_10001a00.pre, %dec_label_pc_100019e0 ], [ %v0_10001b64, %dec_label_pc_10001b64 ]
  %v2_10001a00 = or i1 %v1_10001a00.ph, %v0_10001a00.ph
  br label %dec_label_pc_10001a00

dec_label_pc_10001a00:                            ; preds = %dec_label_pc_10001a00.outer, %dec_label_pc_10001a00
  br i1 %v2_10001a00, label %dec_label_pc_10001a00, label %dec_label_pc_10001a04

dec_label_pc_10001a04:                            ; preds = %dec_label_pc_10001a00, %dec_label_pc_10001b64
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10001a14

dec_label_pc_10001a14:                            ; preds = %dec_label_pc_10001ad4, %dec_label_pc_10001a04
  %v0_10001a14 = phi i32 [ %v1_10001b54, %dec_label_pc_10001ad4 ], [ 0, %dec_label_pc_10001a04 ]
  %v1_10001a14 = mul i32 %v0_10001a14, 24
  store i32 %v1_10001a14, i32* %r0.global-to-local, align 4
  %v1_10001a18 = mul i32 %v0_10001a14, 4
  store i32 %v1_10001a18, i32* %r11.global-to-local, align 4
  %v1_10001a1c = load i32, i32* %r19.global-to-local, align 4
  %v2_10001a1c = add i32 %v1_10001a1c, %v1_10001a18
  %v3_10001a1c = inttoptr i32 %v2_10001a1c to i32*
  %v4_10001a1c = load i32, i32* %v3_10001a1c, align 4
  store i32 %v4_10001a1c, i32* %r28.global-to-local, align 4
  %v1_10001a20 = load i32, i32* %r25.global-to-local, align 4
  %v2_10001a20 = add i32 %v1_10001a20, %v1_10001a14
  %v1_10001a24 = add i32 %v2_10001a20, 20
  %v2_10001a24 = inttoptr i32 %v1_10001a24 to i8*
  %v3_10001a24 = load i8, i8* %v2_10001a24, align 1
  %v4_10001a24 = zext i8 %v3_10001a24 to i32
  store i32 %v4_10001a24, i32* %r9.global-to-local, align 4
  %v1_10001a28 = add i32 %v4_10001a1c, 24
  store i32 %v1_10001a28, i32* @r30, align 4
  %v1_10001a2c = add i32 %v4_10001a1c, 38
  store i32 %v1_10001a2c, i32* @r31, align 4
  %v1_10001a30 = add i32 %v4_10001a1c, 58
  store i32 %v1_10001a30, i32* %r27.global-to-local, align 4
  %v3_10001a34 = icmp eq i8 %v3_10001a24, 31
  store i1 %v3_10001a34, i1* %cr7_eq.global-to-local, align 1
  %tmp39 = icmp ult i8 %v3_10001a24, 32
  br i1 %tmp39, label %dec_label_pc_10001b6c, label %dec_label_pc_10001a3c

dec_label_pc_10001a3c:                            ; preds = %dec_label_pc_10001a14
  %v0_10001a3c = load i32, i32* %r20.global-to-local, align 4
  %v1_10001a3c = mul i32 %v0_10001a3c, 16
  %v2_10001a3c = udiv i32 %v0_10001a3c, 268435456
  %v3_10001a3c = or i32 %v2_10001a3c, %v1_10001a3c
  store i32 %v3_10001a3c, i32* %r20.global-to-local, align 4
  %v1_10001a40 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10001a3c)
  %v1_10001a44 = mul nuw i32 %v2_10001a3c, 268435456
  %v2_10001a44 = urem i32 %v0_10001a3c, 268435456
  %v3_10001a44 = or i32 %v1_10001a44, %v2_10001a44
  store i32 %v3_10001a44, i32* %r20.global-to-local, align 4
  %v0_10001a48 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10001a48, label %dec_label_pc_10001ba0, label %dec_label_pc_10001a4c

dec_label_pc_10001a4c:                            ; preds = %dec_label_pc_10001b6c, %dec_label_pc_10001a3c
  store i32 65535, i32* @r29, align 4
  %v0_10001a54 = load i32, i32* %r24.global-to-local, align 4
  %v4_10001a54 = icmp eq i32 %v0_10001a54, 65535
  store i1 %v4_10001a54, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10001a54, label %dec_label_pc_10001bb8, label %dec_label_pc_10001a5c

dec_label_pc_10001a5c:                            ; preds = %dec_label_pc_10001ba0, %dec_label_pc_10001a4c
  %v1_10001a5c = phi i32 [ %v1_10001bb0, %dec_label_pc_10001ba0 ], [ 65535, %dec_label_pc_10001a4c ]
  %v0_10001a5c = load i32, i32* %r16.global-to-local, align 4
  %v4_10001a5c = icmp eq i32 %v0_10001a5c, %v1_10001a5c
  store i1 %v4_10001a5c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10001a5c, label %dec_label_pc_10001bd8, label %dec_label_pc_10001a64

dec_label_pc_10001a64:                            ; preds = %dec_label_pc_10001bb8.dec_label_pc_10001a64_crit_edge, %dec_label_pc_10001a5c
  %v1_10001a64 = phi i32 [ %v1_10001a64.pre, %dec_label_pc_10001bb8.dec_label_pc_10001a64_crit_edge ], [ %v1_10001a5c, %dec_label_pc_10001a5c ]
  %v0_10001a64 = load i32, i32* %r17.global-to-local, align 4
  %v4_10001a64 = icmp eq i32 %v0_10001a64, %v1_10001a64
  store i1 %v4_10001a64, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10001a64, label %dec_label_pc_10001be8, label %dec_label_pc_10001a6c

dec_label_pc_10001a6c:                            ; preds = %dec_label_pc_10001bd8, %dec_label_pc_10001a64
  %v0_10001a6c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10001a6c, label %dec_label_pc_10001bf4, label %dec_label_pc_10001a70

dec_label_pc_10001a70:                            ; preds = %dec_label_pc_10001be8, %dec_label_pc_10001a6c
  %v0_10001a70 = load i32, i32* %r28.global-to-local, align 4
  %v1_10001a70 = add i32 %v0_10001a70, 16
  %v2_10001a70 = inttoptr i32 %v1_10001a70 to i32*
  %v3_10001a70 = load i32, i32* %v2_10001a70, align 4
  store i32 %v3_10001a70, i32* %r0.global-to-local, align 4
  %v1_10001a74 = load i32, i32* @r31, align 4
  %v2_10001a74 = add i32 %v1_10001a74, 16
  %v3_10001a74 = inttoptr i32 %v2_10001a74 to i32*
  store i32 %v3_10001a70, i32* %v3_10001a74, align 4
  br label %dec_label_pc_10001a78

dec_label_pc_10001a78:                            ; preds = %dec_label_pc_10001bf4, %dec_label_pc_10001a70
  %v0_10001a78 = call i32 @function_10005928()
  store i32 %v0_10001a78, i32* %r3.global-to-local, align 4
  store i32 %v0_10001a78, i32* %stack_var_-100, align 4
  %v0_10001a80 = call i32 @function_10005928()
  store i32 %v0_10001a80, i32* %r3.global-to-local, align 4
  store i32 %v0_10001a80, i32* %stack_var_-96, align 4
  %v0_10001a88 = call i32 @function_10005928()
  store i32 %v0_10001a88, i32* %stack_var_-92, align 4
  %v0_10001a94 = load i32, i32* @r30, align 4
  store i32 %v0_10001a94, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10001aa0.17 to i32), i32* @lr, align 4
  %v3_10001a9c = call i32 @function_10007cdc(i32 %v0_10001a94, i32 %v2_10001a90, i32 4)
  %v0_10001aa0 = load i32, i32* @r30, align 4
  %v1_10001aa0 = add i32 %v0_10001aa0, 6
  store i32 %v1_10001aa0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10001ab0.18 to i32), i32* @lr, align 4
  %v3_10001aac = call i32 @function_10007cdc(i32 %v1_10001aa0, i32 %v2_100019e8, i32 4)
  %v0_10001ab0 = load i32, i32* @r30, align 4
  %v1_10001ab0 = add i32 %v0_10001ab0, 4
  store i32 %v1_10001ab0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10001ac0.19 to i32), i32* @lr, align 4
  %v3_10001abc = call i32 @function_10007cdc(i32 %v1_10001ab0, i32 %v2_10001ab4, i32 2)
  %v0_10001ac0 = load i32, i32* @r30, align 4
  %v1_10001ac0 = add i32 %v0_10001ac0, 10
  store i32 %v1_10001ac0, i32* %r3.global-to-local, align 4
  store i32 268442320, i32* @lr, align 4
  %v3_10001acc = call i32 @function_10007cdc(i32 %v1_10001ac0, i32 %v2_10001ac4, i32 2)
  store i32 %v3_10001acc, i32* %r3.global-to-local, align 4
  %v0_10001ad0 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10001ad0, label %dec_label_pc_10001ad4, label %dec_label_pc_10001c00

dec_label_pc_10001ad4:                            ; preds = %dec_label_pc_10001a78, %dec_label_pc_10001c00
  %v0_10001ad4 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001ad4 = trunc i32 %v0_10001ad4 to i16
  %v2_10001ad4 = load i32, i32* %r28.global-to-local, align 4
  %v3_10001ad4 = add i32 %v2_10001ad4, 10
  %v4_10001ad4 = inttoptr i32 %v3_10001ad4 to i16*
  store i16 %v1_10001ad4, i16* %v4_10001ad4, align 2
  %v0_10001adc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10001adc, i32* @r3, align 4
  %v2_10001ae0 = call i32 @function_100043cc(i32 %v0_10001adc, i32 20)
  %v3_10001ae0 = trunc i32 %v2_10001ae0 to i16
  %v4_10001ae8 = add i32 %v0_10001adc, 10
  %v5_10001ae8 = inttoptr i32 %v4_10001ae8 to i16*
  store i16 %v3_10001ae0, i16* %v5_10001ae8, align 2
  %v0_10001aec = load i32, i32* @r31, align 4
  store i32 %v0_10001aec, i32* @r3, align 4
  %v0_10001af0 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001af0 = trunc i32 %v0_10001af0 to i16
  %v3_10001af0 = add i32 %v0_10001aec, 10
  %v4_10001af0 = inttoptr i32 %v3_10001af0 to i16*
  store i16 %v1_10001af0, i16* %v4_10001af0, align 2
  %v2_10001af4 = call i32 @function_100043cc(i32 %v0_10001aec, i32 20)
  %v3_10001af4 = trunc i32 %v2_10001af4 to i16
  %v0_10001af8 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10001af8, i32* @r4, align 4
  %v3_10001afc = load i32, i32* @r31, align 4
  %v4_10001afc = add i32 %v3_10001afc, 10
  %v5_10001afc = inttoptr i32 %v4_10001afc to i16*
  store i16 %v3_10001af4, i16* %v5_10001afc, align 2
  %v0_10001b00 = load i32, i32* %r21.global-to-local, align 4
  %v0_10001b04 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001b04 = trunc i32 %v0_10001b04 to i16
  %v2_10001b04 = load i32, i32* %r27.global-to-local, align 4
  %v3_10001b04 = add i32 %v2_10001b04, 6
  %v4_10001b04 = inttoptr i32 %v3_10001b04 to i16*
  store i16 %v1_10001b04, i16* %v4_10001b04, align 2
  %v0_10001b08 = load i32, i32* @r31, align 4
  store i32 %v0_10001b08, i32* %r3.global-to-local, align 4
  %v0_10001b0c = load i32, i32* %r27.global-to-local, align 4
  %v1_10001b0c = add i32 %v0_10001b0c, 4
  %v2_10001b0c = inttoptr i32 %v1_10001b0c to i16*
  %v3_10001b0c = load i16, i16* %v2_10001b0c, align 2
  %v4_10001b0c = zext i16 %v3_10001b0c to i32
  %v4_10001b10 = call i32 @function_10004430(i32 %v0_10001b08, i32 %v0_10001af8, i32 %v4_10001b0c, i32 %v0_10001b00)
  %v5_10001b10 = trunc i32 %v4_10001b10 to i16
  store i32 %v4_10001b10, i32* %r3.global-to-local, align 4
  %v3_10001b14 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10001b14, i32* %r0.global-to-local, align 4
  %v0_10001b18 = load i32, i32* %r28.global-to-local, align 4
  %v1_10001b18 = add i32 %v0_10001b18, 16
  %v2_10001b18 = inttoptr i32 %v1_10001b18 to i32*
  %v3_10001b18 = load i32, i32* %v2_10001b18, align 4
  store i32 %v3_10001b18, i32* %r11.global-to-local, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10001b20 = mul i32 %v3_10001b14, 24
  store i32 %v1_10001b20, i32* %r0.global-to-local, align 4
  %v3_10001b24 = load i32, i32* %r27.global-to-local, align 4
  %v4_10001b24 = add i32 %v3_10001b24, 6
  %v5_10001b24 = inttoptr i32 %v4_10001b24 to i16*
  store i16 %v5_10001b10, i16* %v5_10001b24, align 2
  %v0_10001b28 = load i32, i32* %r28.global-to-local, align 4
  %v0_10001b2c = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10001b2c, i32* %r3.global-to-local, align 4
  %v0_10001b30 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001b30 = load i32, i32* %r25.global-to-local, align 4
  %v2_10001b30 = add i32 %v1_10001b30, %v0_10001b30
  %v0_10001b34 = load i32, i32* %r9.global-to-local, align 4
  %v3_10001b34 = trunc i32 %v0_10001b34 to i16
  %v5_10001b34 = inttoptr i32 %v2_10001b30 to i16*
  store i16 %v3_10001b34, i16* %v5_10001b34, align 2
  %v0_10001b38 = load i32, i32* %r11.global-to-local, align 4
  %v2_10001b38 = add i32 %v2_10001b30, 4
  %v3_10001b38 = inttoptr i32 %v2_10001b38 to i32*
  store i32 %v0_10001b38, i32* %v3_10001b38, align 4
  %v0_10001b3c = load i32, i32* %r22.global-to-local, align 4
  %v0_10001b40 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001b40 = trunc i32 %v0_10001b40 to i16
  %v3_10001b40 = add i32 %v2_10001b30, 2
  %v4_10001b40 = inttoptr i32 %v3_10001b40 to i16*
  store i16 %v1_10001b40, i16* %v4_10001b40, align 2
  store i32 268442448, i32* @lr, align 4
  %v6_10001b4c = call i32 @function_10009088(i32 %v0_10001b2c, i32 %v0_10001b28, i32 %v0_10001b3c, i32 16384, i32 %v2_10001b30, i32 16)
  store i32 %v6_10001b4c, i32* %r3.global-to-local, align 4
  %v3_10001b50 = load i32, i32* %stack_var_-104, align 4
  %v1_10001b54 = add i32 %v3_10001b50, 1
  store i32 %v1_10001b54, i32* %r9.global-to-local, align 4
  %v1_10001b58 = load i32, i32* %r18.global-to-local, align 4
  %v2_10001b58 = icmp slt i32 %v1_10001b54, %v1_10001b58
  %v4_10001b58 = icmp eq i32 %v1_10001b54, %v1_10001b58
  store i1 %v4_10001b58, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10001b54, i32* %stack_var_-104, align 4
  br i1 %v2_10001b58, label %dec_label_pc_10001a14, label %dec_label_pc_10001b64

dec_label_pc_10001b64:                            ; preds = %dec_label_pc_10001ad4
  %v0_10001b64 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10001b64 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10001b64 = or i1 %v0_10001b64, %v1_10001b64
  br i1 %v2_10001b64, label %dec_label_pc_10001a00.outer, label %dec_label_pc_10001a04

dec_label_pc_10001b6c:                            ; preds = %dec_label_pc_10001a14
  %v1_10001b6c = add i32 %v2_10001a20, 16
  %v2_10001b6c = inttoptr i32 %v1_10001b6c to i32*
  %v3_10001b6c = load i32, i32* %v2_10001b6c, align 4
  store i32 %v3_10001b6c, i32* %r29.global-to-local, align 4
  %v0_10001b70 = call i32 @function_10005928()
  store i32 %v0_10001b70, i32* %r3.global-to-local, align 4
  %v3_10001b74 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10001b74, i32* %r9.global-to-local, align 4
  %v0_10001b78 = load i32, i32* %r20.global-to-local, align 4
  %v1_10001b78 = mul i32 %v0_10001b78, 16
  %v2_10001b78 = udiv i32 %v0_10001b78, 268435456
  %v3_10001b78 = or i32 %v2_10001b78, %v1_10001b78
  store i32 %v3_10001b78, i32* %r20.global-to-local, align 4
  %v1_10001b7c = call %0 @__asm_mtcrf(i32 1, i32 %v3_10001b78)
  %v1_10001b80 = mul nuw i32 %v2_10001b78, 268435456
  %v2_10001b80 = urem i32 %v0_10001b78, 268435456
  %v3_10001b80 = or i32 %v1_10001b80, %v2_10001b80
  store i32 %v3_10001b80, i32* %r20.global-to-local, align 4
  %v0_10001b84 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001b84 = mul i32 %v0_10001b84, 24
  %v1_10001b88 = load i32, i32* %r25.global-to-local, align 4
  %v2_10001b88 = add i32 %v1_10001b88, %v1_10001b84
  store i32 %v2_10001b88, i32* %r9.global-to-local, align 4
  %v1_10001b8c = add i32 %v2_10001b88, 20
  %v2_10001b8c = inttoptr i32 %v1_10001b8c to i8*
  %v3_10001b8c = load i8, i8* %v2_10001b8c, align 1
  %v4_10001b8c = zext i8 %v3_10001b8c to i32
  store i32 %v4_10001b8c, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10001b8c, 64
  %v2_10001b90 = zext i8 %tmp to i32
  %v3_10001b90 = lshr i32 %v0_10001b70, %v2_10001b90
  store i32 %v3_10001b90, i32* %r3.global-to-local, align 4
  %v0_10001b94 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001b94 = add i32 %v3_10001b90, %v0_10001b94
  store i32 %v2_10001b94, i32* %r29.global-to-local, align 4
  %v1_10001b98 = load i32, i32* %r28.global-to-local, align 4
  %v2_10001b98 = add i32 %v1_10001b98, 16
  %v3_10001b98 = inttoptr i32 %v2_10001b98 to i32*
  store i32 %v2_10001b94, i32* %v3_10001b98, align 4
  %v0_10001b9c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10001b9c, label %dec_label_pc_10001ba0, label %dec_label_pc_10001a4c

dec_label_pc_10001ba0:                            ; preds = %dec_label_pc_10001b6c, %dec_label_pc_10001a3c
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10001ba4 = call i32 @function_10005928()
  store i32 %v0_10001ba4, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_10001bac = load i32, i32* %r28.global-to-local, align 4
  %v2_10001bac = add i32 %v1_10001bac, 12
  %v3_10001bac = inttoptr i32 %v2_10001bac to i32*
  store i32 %v0_10001ba4, i32* %v3_10001bac, align 4
  %v0_10001bb0 = load i32, i32* %r24.global-to-local, align 4
  %v1_10001bb0 = load i32, i32* @r29, align 4
  %v4_10001bb0 = icmp eq i32 %v0_10001bb0, %v1_10001bb0
  store i1 %v4_10001bb0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10001bb0, label %dec_label_pc_10001bb8, label %dec_label_pc_10001a5c

dec_label_pc_10001bb8:                            ; preds = %dec_label_pc_10001ba0, %dec_label_pc_10001a4c
  %v0_10001bb8 = call i32 @function_10005928()
  %v0_10001bbc = load i32, i32* %r16.global-to-local, align 4
  %v1_10001bbc = load i32, i32* @r29, align 4
  %v4_10001bbc = icmp eq i32 %v0_10001bbc, %v1_10001bbc
  store i1 %v4_10001bbc, i1* %cr7_eq.global-to-local, align 1
  %v1_10001bc0 = urem i32 %v0_10001bb8, 65536
  store i32 %v1_10001bc0, i32* %r3.global-to-local, align 4
  %v1_10001bc4 = add nsw i32 %v1_10001bc0, -1000
  store i32 %v1_10001bc4, i32* %r0.global-to-local, align 4
  %v1_10001bc8 = trunc i32 %v0_10001bb8 to i16
  %v2_10001bc8 = load i32, i32* %r28.global-to-local, align 4
  %v3_10001bc8 = add i32 %v2_10001bc8, 4
  %v4_10001bc8 = inttoptr i32 %v3_10001bc8 to i16*
  store i16 %v1_10001bc8, i16* %v4_10001bc8, align 2
  %v0_10001bcc = load i32, i32* %r0.global-to-local, align 4
  %v1_10001bcc = sub i32 -1, %v0_10001bcc
  store i32 %v1_10001bcc, i32* %r0.global-to-local, align 4
  %v1_10001bd0 = trunc i32 %v1_10001bcc to i16
  %v2_10001bd0 = load i32, i32* @r31, align 4
  %v3_10001bd0 = add i32 %v2_10001bd0, 4
  %v4_10001bd0 = inttoptr i32 %v3_10001bd0 to i16*
  store i16 %v1_10001bd0, i16* %v4_10001bd0, align 2
  br i1 %v4_10001bbc, label %dec_label_pc_10001bd8, label %dec_label_pc_10001bb8.dec_label_pc_10001a64_crit_edge

dec_label_pc_10001bb8.dec_label_pc_10001a64_crit_edge: ; preds = %dec_label_pc_10001bb8
  %v1_10001a64.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10001a64

dec_label_pc_10001bd8:                            ; preds = %dec_label_pc_10001bb8, %dec_label_pc_10001a5c
  %v0_10001bd8 = call i32 @function_10005928()
  %v1_10001bd8 = trunc i32 %v0_10001bd8 to i16
  store i32 %v0_10001bd8, i32* %r3.global-to-local, align 4
  %v0_10001bdc = load i32, i32* %r17.global-to-local, align 4
  %v1_10001bdc = load i32, i32* @r29, align 4
  %v4_10001bdc = icmp eq i32 %v0_10001bdc, %v1_10001bdc
  store i1 %v4_10001bdc, i1* %cr7_eq.global-to-local, align 1
  %v3_10001be0 = load i32, i32* %r28.global-to-local, align 4
  %v4_10001be0 = add i32 %v3_10001be0, 58
  %v5_10001be0 = inttoptr i32 %v4_10001be0 to i16*
  store i16 %v1_10001bd8, i16* %v5_10001be0, align 2
  br i1 %v4_10001bdc, label %dec_label_pc_10001be8, label %dec_label_pc_10001a6c

dec_label_pc_10001be8:                            ; preds = %dec_label_pc_10001bd8, %dec_label_pc_10001a64
  %v0_10001be8 = call i32 @function_10005928()
  %v1_10001be8 = trunc i32 %v0_10001be8 to i16
  store i32 %v0_10001be8, i32* %r3.global-to-local, align 4
  %v3_10001bec = load i32, i32* %r27.global-to-local, align 4
  %v4_10001bec = add i32 %v3_10001bec, 2
  %v5_10001bec = inttoptr i32 %v4_10001bec to i16*
  store i16 %v1_10001be8, i16* %v5_10001bec, align 2
  %v0_10001bf0 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10001bf0, label %dec_label_pc_10001bf4, label %dec_label_pc_10001a70

dec_label_pc_10001bf4:                            ; preds = %dec_label_pc_10001be8, %dec_label_pc_10001a6c
  %v0_10001bf4 = call i32 @function_10005928()
  store i32 %v0_10001bf4, i32* %r3.global-to-local, align 4
  %v1_10001bf8 = load i32, i32* @r31, align 4
  %v2_10001bf8 = add i32 %v1_10001bf8, 16
  %v3_10001bf8 = inttoptr i32 %v2_10001bf8 to i32*
  store i32 %v0_10001bf4, i32* %v3_10001bf8, align 4
  br label %dec_label_pc_10001a78

dec_label_pc_10001c00:                            ; preds = %dec_label_pc_10001a78
  %v0_10001c00 = load i32, i32* %r27.global-to-local, align 4
  %v1_10001c00 = add i32 %v0_10001c00, 8
  store i32 %v1_10001c00, i32* @r3, align 4
  %v0_10001c04 = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_10001c04, i32* @r4, align 4
  %v0_10001c08 = call i32 @function_10005afc()
  store i32 %v0_10001c08, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001ad4

; uselistorder directives
  uselistorder i32 %v0_10001be8, { 1, 0 }
  uselistorder i32 %v0_10001bd8, { 1, 0 }
  uselistorder i32 %v1_10001bcc, { 1, 0 }
  uselistorder i32 %v1_10001bc0, { 1, 0 }
  uselistorder i32 %v0_10001bb8, { 1, 0 }
  uselistorder i32 %v1_10001bb0, { 1, 0 }
  uselistorder i32 %v0_10001b78, { 2, 1, 0 }
  uselistorder i1 %v1_10001b64, { 1, 0 }
  uselistorder i1 %v0_10001b64, { 1, 0 }
  uselistorder i32 %v1_10001b54, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v2_10001b30, { 0, 2, 1, 3 }
  uselistorder i32 %v4_10001b10, { 1, 0 }
  uselistorder i32 %v0_10001a3c, { 2, 1, 0 }
  uselistorder i32 %v4_10001a1c, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10001a18, { 1, 0 }
  uselistorder i32 %v1_10001964, { 1, 0 }
  uselistorder i32 %v1_100018a0, { 1, 0 }
  uselistorder i32 %v1_10001894, { 1, 0 }
  uselistorder i32 %v1_10001830, { 1, 0 }
  uselistorder i32 %v0_10001830, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10001820, { 1, 2, 0 }
  uselistorder i32 %v0_10001814, { 1, 0 }
  uselistorder i32 %v5_100017c0, { 0, 3, 1, 2 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 8, 9, 21, 22 }
  uselistorder i32* %r31.global-to-local, { 0, 9, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 1, 2, 3, 4, 16 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 2, 11, 12 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 2, 35, 22, 23, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 24, 25, 26, 27, 28, 29, 0, 1 }
  uselistorder i32* %r29.global-to-local, { 1, 0, 2, 3, 4, 8, 5, 6, 7 }
  uselistorder i32* %r27.global-to-local, { 5, 0, 1, 2, 3, 4, 6, 7, 8, 9, 10 }
  uselistorder i32* %r26.global-to-local, { 0, 1, 2, 3, 4, 7, 8, 5, 6 }
  uselistorder i32* %r24.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r20.global-to-local, { 0, 1, 4, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 16, 17, 18, 19, 20, 21, 22, 27, 23, 24, 25, 26, 14, 28, 29, 30, 12, 13 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 2, 7, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr3_eq.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32 66, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10001ad4, { 1, 0 }
  uselistorder label %dec_label_pc_10001a04, { 1, 0 }
  uselistorder label %dec_label_pc_10001a00, { 1, 0 }
  uselistorder label %dec_label_pc_100019e0, { 1, 0 }
  uselistorder label %dec_label_pc_1000197c, { 1, 0 }
  uselistorder label %dec_label_pc_10001950, { 1, 0 }
  uselistorder label %dec_label_pc_100018e8, { 1, 0 }
}

define i32 @function_10001c10(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10001c10:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_10001c14 = load i32, i32* @lr, align 4
  store i32 %v0_10001c14, i32* %r0.global-to-local, align 4
  %v0_10001c18 = call i32 @__asm_mfcr()
  store i32 %v0_10001c18, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r26.global-to-local, align 4
  %v0_10001c28 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10001c18, i32* %r19.global-to-local, align 4
  %v0_10001c5c = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10001c64 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_10001c6c = load i32, i32* @r30, align 4
  %v0_10001c70 = load i32, i32* @r31, align 4
  store i32 268442756, i32* @lr, align 4
  %v2_10001c80 = call i32 @function_10009460(i32 4, i32 4)
  store i32 %v2_10001c80, i32* %r20.global-to-local, align 4
  %v0_10001c88 = load i32, i32* @r28, align 4
  %v0_10001c94 = load i32, i32* @r29, align 4
  store i32 %v0_10001c94, i32* %r3.global-to-local, align 4
  store i32 268442780, i32* @lr, align 4
  %v4_10001c98 = inttoptr i32 %v0_10001c88 to i32*
  %v5_10001c98 = call i32 @function_100006a8(i32 %v0_10001c94, i32* %v4_10001c98, i32 2, i32 0)
  %v0_10001ca8 = load i32, i32* @r28, align 4
  %v1_10001cac = urem i32 %v5_10001c98, 256
  store i32 %v1_10001cac, i32* %r14.global-to-local, align 4
  %v0_10001cb0 = load i32, i32* @r29, align 4
  store i32 %v0_10001cb0, i32* %r3.global-to-local, align 4
  store i32 268442808, i32* @lr, align 4
  %v4_10001cb4 = inttoptr i32 %v0_10001ca8 to i32*
  %v5_10001cb4 = call i32 @function_100006a8(i32 %v0_10001cb0, i32* %v4_10001cb4, i32 3, i32 65535)
  %v0_10001cb8 = load i32, i32* @r28, align 4
  store i32 %v5_10001cb4, i32* %r25.global-to-local, align 4
  %v0_10001cc8 = load i32, i32* @r29, align 4
  store i32 %v0_10001cc8, i32* %r3.global-to-local, align 4
  store i32 268442832, i32* @lr, align 4
  %v4_10001ccc = inttoptr i32 %v0_10001cb8 to i32*
  %v5_10001ccc = call i32 @function_100006a8(i32 %v0_10001cc8, i32* %v4_10001ccc, i32 4, i32 64)
  %v0_10001cd0 = load i32, i32* @r28, align 4
  %v1_10001cdc = urem i32 %v5_10001ccc, 256
  store i32 %v1_10001cdc, i32* %r21.global-to-local, align 4
  %v0_10001ce0 = load i32, i32* @r29, align 4
  store i32 %v0_10001ce0, i32* %r3.global-to-local, align 4
  store i32 268442856, i32* @lr, align 4
  %v4_10001ce4 = inttoptr i32 %v0_10001cd0 to i32*
  %v5_10001ce4 = call i32 @function_100006a8(i32 %v0_10001ce0, i32* %v4_10001ce4, i32 5, i32 1)
  %v0_10001cf4 = load i32, i32* @r28, align 4
  %v1_10001cf8 = urem i32 %v5_10001ce4, 256
  store i32 %v1_10001cf8, i32* @r31, align 4
  %v0_10001cfc = load i32, i32* @r29, align 4
  store i32 %v0_10001cfc, i32* %r3.global-to-local, align 4
  store i32 268442884, i32* @lr, align 4
  %v4_10001d00 = inttoptr i32 %v0_10001cf4 to i32*
  %v5_10001d00 = call i32 @function_100006a8(i32 %v0_10001cfc, i32* %v4_10001d00, i32 6, i32 65535)
  %v0_10001d08 = load i32, i32* @r28, align 4
  store i32 %v5_10001d00, i32* %r24.global-to-local, align 4
  %v0_10001d18 = load i32, i32* @r29, align 4
  store i32 %v0_10001d18, i32* %r3.global-to-local, align 4
  store i32 268442912, i32* @lr, align 4
  %v4_10001d1c = inttoptr i32 %v0_10001d08 to i32*
  %v5_10001d1c = call i32 @function_100006a8(i32 %v0_10001d18, i32* %v4_10001d1c, i32 7, i32 65535)
  %v0_10001d20 = load i32, i32* @r28, align 4
  store i32 %v5_10001d1c, i32* %r27.global-to-local, align 4
  %v0_10001d30 = load i32, i32* @r29, align 4
  store i32 %v0_10001d30, i32* %r3.global-to-local, align 4
  store i32 268442936, i32* @lr, align 4
  %v4_10001d34 = inttoptr i32 %v0_10001d20 to i32*
  %v5_10001d34 = call i32 @function_100006a8(i32 %v0_10001d30, i32* %v4_10001d34, i32 0, i32 512)
  %v0_10001d38 = load i32, i32* @r28, align 4
  store i32 %v5_10001d34, i32* %r16.global-to-local, align 4
  %v0_10001d48 = load i32, i32* @r29, align 4
  store i32 %v0_10001d48, i32* %r3.global-to-local, align 4
  store i32 268442960, i32* @lr, align 4
  %v4_10001d4c = inttoptr i32 %v0_10001d38 to i32*
  %v5_10001d4c = call i32 @function_100006a8(i32 %v0_10001d48, i32* %v4_10001d4c, i32 1, i32 1)
  %v0_10001d50 = load i32, i32* @r28, align 4
  %v1_10001d5c = urem i32 %v5_10001d4c, 256
  store i32 %v1_10001d5c, i32* %r15.global-to-local, align 4
  %v0_10001d60 = load i32, i32* @r29, align 4
  store i32 %v0_10001d60, i32* %r3.global-to-local, align 4
  store i32 268442984, i32* @lr, align 4
  %v4_10001d64 = inttoptr i32 %v0_10001d50 to i32*
  %v5_10001d64 = call i32 @function_100006a8(i32 %v0_10001d60, i32* %v4_10001d64, i32 19, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10001d6c = load i32, i32* @global_var_1001b500.16, align 4
  %v0_10001d70 = load i32, i32* @r28, align 4
  store i32 %v5_10001d64, i32* %r30.global-to-local, align 4
  %v0_10001d7c = load i32, i32* @r29, align 4
  store i32 %v0_10001d7c, i32* %r3.global-to-local, align 4
  store i32 268443012, i32* @lr, align 4
  %v4_10001d80 = inttoptr i32 %v0_10001d70 to i32*
  %v5_10001d80 = call i32 @function_100006a8(i32 %v0_10001d7c, i32* %v4_10001d80, i32 25, i32 %v3_10001d6c)
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268443032, i32* @lr, align 4
  %v3_10001d94 = call i32 @function_10009104(i32 2, i32 3, i32 6)
  store i32 %v3_10001d94, i32* %r3.global-to-local, align 4
  %v3_10001d98 = icmp eq i32 %v3_10001d94, -1
  store i1 %v3_10001d98, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10001d94, i32* %r23.global-to-local, align 4
  br i1 %v3_10001d98, label %dec_label_pc_10001f30, label %dec_label_pc_10001da4

dec_label_pc_10001da4:                            ; preds = %dec_label_pc_10001c10
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10001db0 = ptrtoint i32* %stack_var_-104 to i32
  store i32 1, i32* %stack_var_-104, align 4
  store i32 268443072, i32* @lr, align 4
  %v4_10001dbc = call i32 @function_100090c8(i32 0, i32 3, i32 %v2_10001db0, i32 4)
  store i32 %v4_10001dbc, i32* %r3.global-to-local, align 4
  %v3_10001dc0 = icmp eq i32 %v4_10001dbc, -1
  store i1 %v3_10001dc0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001dc0, label %dec_label_pc_10001f28, label %dec_label_pc_10001dc8

dec_label_pc_10001dc8:                            ; preds = %dec_label_pc_10001da4
  %v0_10001dc8 = load i32, i32* %r19.global-to-local, align 4
  %v1_10001dc8 = icmp slt i32 %v0_10001dc8, 0
  %v3_10001dc8 = icmp eq i32 %v0_10001dc8, 0
  store i1 %v1_10001dc8, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10001dc8, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %v0_10001dd4 = load i32, i32* %r25.global-to-local, align 4
  %v1_10001dd4 = urem i32 %v0_10001dd4, 65536
  store i32 %v1_10001dd4, i32* %r25.global-to-local, align 4
  %v0_10001dd8 = load i32, i32* %r24.global-to-local, align 4
  %v1_10001dd8 = urem i32 %v0_10001dd8, 65536
  store i32 %v1_10001dd8, i32* %r17.global-to-local, align 4
  %v0_10001ddc = load i32, i32* %r27.global-to-local, align 4
  %v1_10001ddc = urem i32 %v0_10001ddc, 65536
  store i32 %v1_10001ddc, i32* %r18.global-to-local, align 4
  %v0_10001de0 = load i32, i32* %r30.global-to-local, align 4
  %v1_10001de0 = urem i32 %v0_10001de0, 256
  store i32 %v1_10001de0, i32* %r3.global-to-local, align 4
  %tmp33 = icmp slt i32 %v0_10001dc8, 1
  br i1 %tmp33, label %dec_label_pc_10001f90, label %dec_label_pc_10001de8

dec_label_pc_10001de8:                            ; preds = %dec_label_pc_10001dc8
  %v0_10001de8 = load i32, i32* @r31, align 4
  %v3_10001de8 = icmp eq i32 %v0_10001de8, 0
  store i1 %v3_10001de8, i1* %cr2_eq.global-to-local, align 1
  %v3_10001dec = icmp eq i32 %v1_10001de0, 0
  store i1 %v3_10001dec, i1* %cr3_eq.global-to-local, align 1
  %v0_10001df0 = load i32, i32* %r16.global-to-local, align 4
  %v1_10001df0 = urem i32 %v0_10001df0, 65536
  %v0_10001dd4.not = or i32 %v0_10001dd4, -65536
  %v1_10001df4 = xor i32 %v0_10001dd4.not, 65535
  store i32 %v1_10001df4, i32* %r11.global-to-local, align 4
  %v1_10001dfc = add nuw nsw i32 %v1_10001df0, 52
  store i32 %v1_10001dfc, i32* %r0.global-to-local, align 4
  %v1_10001e00 = add nuw nsw i32 %v1_10001df0, 28
  store i32 %v1_10001e00, i32* %r9.global-to-local, align 4
  %fold = add i32 %v0_10001df0, 52
  %v1_10001e04 = urem i32 %fold, 65536
  store i32 %v1_10001e04, i32* %r22.global-to-local, align 4
  %fold8 = add i32 %v0_10001df0, 28
  %v1_10001e08 = urem i32 %fold8, 65536
  store i32 %v1_10001e08, i32* %r24.global-to-local, align 4
  %v1_10001e0c = urem i32 %v1_10001df4, 65536
  store i32 %v1_10001e0c, i32* %r27.global-to-local, align 4
  %fold9 = add i32 %v0_10001df0, 8
  %v1_10001e10 = urem i32 %fold9, 65536
  store i32 %v1_10001e10, i32* @r28, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10001e44

dec_label_pc_10001e1c:                            ; preds = %dec_label_pc_10001f04
  %v0_10001e1c = load i32, i32* %r31.global-to-local, align 4
  %v1_10001e1c = add i32 %v0_10001e1c, 16
  %v2_10001e1c = inttoptr i32 %v1_10001e1c to i32*
  %v3_10001e1c = load i32, i32* %v2_10001e1c, align 4
  store i32 %v3_10001e1c, i32* %r0.global-to-local, align 4
  %v1_10001e20 = load i32, i32* %r30.global-to-local, align 4
  %v2_10001e20 = add i32 %v1_10001e20, 16
  %v3_10001e20 = inttoptr i32 %v2_10001e20 to i32*
  store i32 %v3_10001e1c, i32* %v3_10001e20, align 4
  br label %dec_label_pc_10001e24

dec_label_pc_10001e24:                            ; preds = %dec_label_pc_10001f20, %dec_label_pc_10001e1c
  %v3_10001e24 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10001e24, i32* %r9.global-to-local, align 4
  %v0_10001e28 = load i32, i32* @r28, align 4
  %v1_10001e28 = trunc i32 %v0_10001e28 to i16
  %v2_10001e28 = load i32, i32* %r29.global-to-local, align 4
  %v3_10001e28 = add i32 %v2_10001e28, 4
  %v4_10001e28 = inttoptr i32 %v3_10001e28 to i16*
  store i16 %v1_10001e28, i16* %v4_10001e28, align 2
  %v0_10001e2c = load i32, i32* %r9.global-to-local, align 4
  %v1_10001e2c = add i32 %v0_10001e2c, 1
  store i32 %v1_10001e2c, i32* %r31.global-to-local, align 4
  %v0_10001e30 = load i32, i32* %r17.global-to-local, align 4
  %v1_10001e30 = trunc i32 %v0_10001e30 to i16
  %v2_10001e30 = load i32, i32* %r29.global-to-local, align 4
  %v3_10001e30 = inttoptr i32 %v2_10001e30 to i16*
  store i16 %v1_10001e30, i16* %v3_10001e30, align 2
  %v0_10001e34 = load i32, i32* %r31.global-to-local, align 4
  %v1_10001e34 = load i32, i32* %r19.global-to-local, align 4
  %v2_10001e34 = icmp slt i32 %v0_10001e34, %v1_10001e34
  %v4_10001e34 = icmp eq i32 %v0_10001e34, %v1_10001e34
  store i1 %v4_10001e34, i1* %cr7_eq.global-to-local, align 1
  %v0_10001e38 = load i32, i32* %r18.global-to-local, align 4
  %v1_10001e38 = trunc i32 %v0_10001e38 to i16
  %v2_10001e38 = load i32, i32* %r29.global-to-local, align 4
  %v3_10001e38 = add i32 %v2_10001e38, 2
  %v4_10001e38 = inttoptr i32 %v3_10001e38 to i16*
  store i16 %v1_10001e38, i16* %v4_10001e38, align 2
  %v0_10001e3c = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10001e3c, i32* %stack_var_-104, align 4
  br i1 %v2_10001e34, label %dec_label_pc_10001e44, label %dec_label_pc_10001f94

dec_label_pc_10001e44:                            ; preds = %dec_label_pc_10001e24, %dec_label_pc_10001de8
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268443216, i32* @lr, align 4
  %v2_10001e4c = call i32 @function_10009460(i32 1510, i32 4)
  store i32 %v2_10001e4c, i32* %r3.global-to-local, align 4
  %v3_10001e50 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10001e50, i32* %r9.global-to-local, align 4
  %v0_10001e54 = load i32, i32* @r31, align 4
  %v1_10001e54 = mul i32 %v0_10001e54, 4
  store i32 %v1_10001e54, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r11.global-to-local, align 4
  %v1_10001e5c = load i32, i32* %r20.global-to-local, align 4
  %v3_10001e5c = add i32 %v1_10001e5c, %v1_10001e54
  %v4_10001e5c = inttoptr i32 %v3_10001e5c to i32*
  store i32 %v2_10001e4c, i32* %v4_10001e5c, align 4
  %v0_10001e60 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001e60 = mul i32 %v0_10001e60, 4
  store i32 %v1_10001e60, i32* %r9.global-to-local, align 4
  %v1_10001e64 = load i32, i32* %r20.global-to-local, align 4
  %v2_10001e64 = add i32 %v1_10001e64, %v1_10001e60
  %v3_10001e64 = inttoptr i32 %v2_10001e64 to i32*
  %v4_10001e64 = load i32, i32* %v3_10001e64, align 4
  store i32 %v4_10001e64, i32* %r31.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10001e6c = inttoptr i32 %v4_10001e64 to i32*
  %v2_10001e6c = load i32, i32* %v1_10001e6c, align 4
  store i32 %v2_10001e6c, i32* %r0.global-to-local, align 4
  %v1_10001e70 = add i32 %v4_10001e64, 24
  store i32 %v1_10001e70, i32* %r30.global-to-local, align 4
  %v0_10001e74 = load i32, i32* %r21.global-to-local, align 4
  %v1_10001e74 = trunc i32 %v0_10001e74 to i8
  %v3_10001e74 = add i32 %v4_10001e64, 8
  %v4_10001e74 = inttoptr i32 %v3_10001e74 to i8*
  store i8 %v1_10001e74, i8* %v4_10001e74, align 1
  %v0_10001e78 = load i32, i32* %r31.global-to-local, align 4
  %v1_10001e78 = add i32 %v0_10001e78, 44
  store i32 %v1_10001e78, i32* %r29.global-to-local, align 4
  %v1_10001e7c = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10001e7c, i32* %r0.global-to-local, align 4
  %v0_10001e80 = load i32, i32* %r25.global-to-local, align 4
  %v1_10001e80 = trunc i32 %v0_10001e80 to i16
  %v2_10001e80 = load i32, i32* %r31.global-to-local, align 4
  %v3_10001e80 = add i32 %v2_10001e80, 4
  %v4_10001e80 = inttoptr i32 %v3_10001e80 to i16*
  store i16 %v1_10001e80, i16* %v4_10001e80, align 2
  %v1_10001e84 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10001e84, i32* %r0.global-to-local, align 4
  %v0_10001e88 = load i32, i32* %r31.global-to-local, align 4
  %v1_10001e88 = add i32 %v0_10001e88, 20
  store i32 %v1_10001e88, i32* %r9.global-to-local, align 4
  %v2_10001e8c = inttoptr i32 %v0_10001e88 to i32*
  store i32 %v1_10001e84, i32* %v2_10001e8c, align 4
  %v0_10001e90 = load i32, i32* %r14.global-to-local, align 4
  %v1_10001e90 = trunc i32 %v0_10001e90 to i8
  %v2_10001e90 = load i32, i32* %r31.global-to-local, align 4
  %v3_10001e90 = add i32 %v2_10001e90, 1
  %v4_10001e90 = inttoptr i32 %v3_10001e90 to i8*
  store i8 %v1_10001e90, i8* %v4_10001e90, align 1
  %v0_10001e94 = load i32, i32* %r22.global-to-local, align 4
  %v1_10001e94 = trunc i32 %v0_10001e94 to i16
  %v2_10001e94 = load i32, i32* %r31.global-to-local, align 4
  %v3_10001e94 = add i32 %v2_10001e94, 2
  %v4_10001e94 = inttoptr i32 %v3_10001e94 to i16*
  store i16 %v1_10001e94, i16* %v4_10001e94, align 2
  %v0_10001e98 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10001e98, label %dec_label_pc_10001ea4, label %dec_label_pc_10001e9c

dec_label_pc_10001e9c:                            ; preds = %dec_label_pc_10001e44
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10001ea0 = load i32, i32* %r31.global-to-local, align 4
  %v3_10001ea0 = add i32 %v2_10001ea0, 6
  %v4_10001ea0 = inttoptr i32 %v3_10001ea0 to i16*
  store i16 16384, i16* %v4_10001ea0, align 2
  br label %dec_label_pc_10001ea4

dec_label_pc_10001ea4:                            ; preds = %dec_label_pc_10001e44, %dec_label_pc_10001e9c
  store i32 2048, i32* %r0.global-to-local, align 4
  %v2_10001eac = load i32, i32* %r31.global-to-local, align 4
  %v3_10001eac = add i32 %v2_10001eac, 9
  %v4_10001eac = inttoptr i32 %v3_10001eac to i8*
  store i8 47, i8* %v4_10001eac, align 1
  %v0_10001eb0 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001eb0 = trunc i32 %v0_10001eb0 to i16
  %v2_10001eb0 = load i32, i32* %r9.global-to-local, align 4
  %v3_10001eb0 = add i32 %v2_10001eb0, 2
  %v4_10001eb0 = inttoptr i32 %v3_10001eb0 to i16*
  store i16 %v1_10001eb0, i16* %v4_10001eb0, align 2
  %v3_10001eb4 = load i32, i32* %stack_var_-104, align 4
  store i32 %v5_10001d80, i32* %r11.global-to-local, align 4
  %v1_10001ebc = mul i32 %v3_10001eb4, 24
  store i32 %v1_10001ebc, i32* %r9.global-to-local, align 4
  %v0_10001ec0 = load i32, i32* %r31.global-to-local, align 4
  %v1_10001ec0 = add i32 %v0_10001ec0, 24
  %v2_10001ec0 = inttoptr i32 %v1_10001ec0 to i32*
  %v3_10001ec0 = load i32, i32* %v2_10001ec0, align 4
  store i32 %v3_10001ec0, i32* %r0.global-to-local, align 4
  %v2_10001ec4 = add i32 %v0_10001ec0, 12
  %v3_10001ec4 = inttoptr i32 %v2_10001ec4 to i32*
  store i32 %v5_10001d80, i32* %v3_10001ec4, align 4
  store i32 4, i32* %r11.global-to-local, align 4
  %v0_10001ecc = load i32, i32* %r9.global-to-local, align 4
  %v1_10001ecc = load i32, i32* %r26.global-to-local, align 4
  %v2_10001ecc = add i32 %v1_10001ecc, %v0_10001ecc
  store i32 %v2_10001ecc, i32* %r9.global-to-local, align 4
  %v1_10001ed0 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10001ed0, i32* %r0.global-to-local, align 4
  %v0_10001ed4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001ed4 = add i32 %v0_10001ed4, 16
  %v2_10001ed4 = inttoptr i32 %v1_10001ed4 to i32*
  %v3_10001ed4 = load i32, i32* %v2_10001ed4, align 4
  store i32 %v3_10001ed4, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10001edc = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10001edc, i32* %r0.global-to-local, align 4
  %v1_10001ee0 = load i32, i32* %r31.global-to-local, align 4
  %v2_10001ee0 = add i32 %v1_10001ee0, 24
  %v3_10001ee0 = inttoptr i32 %v2_10001ee0 to i32*
  store i32 %v1_10001edc, i32* %v3_10001ee0, align 4
  %v0_10001ee4 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001ee4 = load i32, i32* %r31.global-to-local, align 4
  %v2_10001ee4 = add i32 %v1_10001ee4, 16
  %v3_10001ee4 = inttoptr i32 %v2_10001ee4 to i32*
  store i32 %v0_10001ee4, i32* %v3_10001ee4, align 4
  %v0_10001ee8 = load i32, i32* %r14.global-to-local, align 4
  %v1_10001ee8 = trunc i32 %v0_10001ee8 to i8
  %v2_10001ee8 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001ee8 = add i32 %v2_10001ee8, 1
  %v4_10001ee8 = inttoptr i32 %v3_10001ee8 to i8*
  store i8 %v1_10001ee8, i8* %v4_10001ee8, align 1
  %v0_10001eec = load i32, i32* %r24.global-to-local, align 4
  %v1_10001eec = trunc i32 %v0_10001eec to i16
  %v2_10001eec = load i32, i32* %r30.global-to-local, align 4
  %v3_10001eec = add i32 %v2_10001eec, 2
  %v4_10001eec = inttoptr i32 %v3_10001eec to i16*
  store i16 %v1_10001eec, i16* %v4_10001eec, align 2
  %v0_10001ef0 = load i32, i32* %r27.global-to-local, align 4
  %v1_10001ef0 = trunc i32 %v0_10001ef0 to i16
  %v2_10001ef0 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001ef0 = add i32 %v2_10001ef0, 4
  %v4_10001ef0 = inttoptr i32 %v3_10001ef0 to i16*
  store i16 %v1_10001ef0, i16* %v4_10001ef0, align 2
  %v0_10001ef4 = load i32, i32* %r21.global-to-local, align 4
  %v1_10001ef4 = trunc i32 %v0_10001ef4 to i8
  %v2_10001ef4 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001ef4 = add i32 %v2_10001ef4, 8
  %v4_10001ef4 = inttoptr i32 %v3_10001ef4 to i8*
  store i8 %v1_10001ef4, i8* %v4_10001ef4, align 1
  %v0_10001ef8 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10001ef8, label %dec_label_pc_10001f04, label %dec_label_pc_10001efc

dec_label_pc_10001efc:                            ; preds = %dec_label_pc_10001ea4
  store i32 16384, i32* %r11.global-to-local, align 4
  %v2_10001f00 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001f00 = add i32 %v2_10001f00, 6
  %v4_10001f00 = inttoptr i32 %v3_10001f00 to i16*
  store i16 16384, i16* %v4_10001f00, align 2
  br label %dec_label_pc_10001f04

dec_label_pc_10001f04:                            ; preds = %dec_label_pc_10001ea4, %dec_label_pc_10001efc
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_10001f08 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001f08 = add i32 %v2_10001f08, 9
  %v4_10001f08 = inttoptr i32 %v3_10001f08 to i8*
  store i8 17, i8* %v4_10001f08, align 1
  %v0_10001f0c = call i32 @function_10005928()
  store i32 %v0_10001f0c, i32* %r3.global-to-local, align 4
  %v1_10001f10 = add i32 %v0_10001f0c, -1024
  store i32 %v1_10001f10, i32* %r0.global-to-local, align 4
  %v1_10001f14 = load i32, i32* %r30.global-to-local, align 4
  %v2_10001f14 = add i32 %v1_10001f14, 12
  %v3_10001f14 = inttoptr i32 %v2_10001f14 to i32*
  store i32 %v0_10001f0c, i32* %v3_10001f14, align 4
  %v0_10001f18 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001f18 = sub i32 -1, %v0_10001f18
  store i32 %v1_10001f18, i32* %r0.global-to-local, align 4
  %v0_10001f1c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10001f1c, label %dec_label_pc_10001f20, label %dec_label_pc_10001e1c

dec_label_pc_10001f20:                            ; preds = %dec_label_pc_10001f04
  %v1_10001f20 = load i32, i32* %r30.global-to-local, align 4
  %v2_10001f20 = add i32 %v1_10001f20, 16
  %v3_10001f20 = inttoptr i32 %v2_10001f20 to i32*
  store i32 %v1_10001f18, i32* %v3_10001f20, align 4
  br label %dec_label_pc_10001e24

dec_label_pc_10001f28:                            ; preds = %dec_label_pc_10001da4
  %v0_10001f28 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10001f28, i32* %r3.global-to-local, align 4
  store i32 268443440, i32* @lr, align 4
  %v0_10001f2c = call i32 @function_10008418()
  store i32 %v0_10001f2c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001f30

dec_label_pc_10001f30:                            ; preds = %dec_label_pc_10001c10, %dec_label_pc_10001f28
  store i32 %v0_10001c28, i32* %r0.global-to-local, align 4
  %v1_10001f44 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10001c18)
  store i32 %v0_10001c5c, i32* %r28.global-to-local, align 4
  store i32 %v0_10001c64, i32* %r29.global-to-local, align 4
  store i32 %v0_10001c6c, i32* %r30.global-to-local, align 4
  store i32 %v0_10001c70, i32* %r31.global-to-local, align 4
  %v0_10001f8c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10001f8c

dec_label_pc_10001f90:                            ; preds = %dec_label_pc_10001dc8
  %v3_10001f90 = icmp eq i32 %v1_10001de0, 0
  store i1 %v3_10001f90, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_10001f94

dec_label_pc_10001f94:                            ; preds = %dec_label_pc_10001e24, %dec_label_pc_10001f90
  store i32 %v5_10001d80, i32* %r0.global-to-local, align 4
  %v0_10001f98 = load i32, i32* %r15.global-to-local, align 4
  %v3_10001f98 = icmp eq i32 %v0_10001f98, 0
  store i1 %v3_10001f98, i1* %cr2_eq.global-to-local, align 1
  %v0_10001f9c = load i32, i32* %r16.global-to-local, align 4
  %v1_10001f9c = add i32 %v0_10001f9c, 8
  store i32 %v1_10001f9c, i32* %r22.global-to-local, align 4
  %v1_10001fa0 = add i32 %v0_10001f9c, 52
  store i32 %v1_10001fa0, i32* %r24.global-to-local, align 4
  %v3_10001fa4 = icmp eq i32 %v5_10001d80, -1
  store i1 %v3_10001fa4, i1* %cr7_eq.global-to-local, align 1
  %v0_10001fa8 = call i32 @__asm_mfcr()
  store i32 %v0_10001fa8, i32* %r3.global-to-local, align 4
  %v1_10001fac = mul i32 %v0_10001fa8, 268435456
  store i32 %v1_10001fac, i32* %r21.global-to-local, align 4
  %v0_10001fb0.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10001fb0.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10001fb0.outer

dec_label_pc_10001fb0.outer:                      ; preds = %dec_label_pc_100020b8, %dec_label_pc_10001f94
  %v1_10001fb0.ph = phi i1 [ %v1_10001fb0.pre, %dec_label_pc_10001f94 ], [ %v1_100020b8, %dec_label_pc_100020b8 ]
  %v0_10001fb0.ph = phi i1 [ %v0_10001fb0.pre, %dec_label_pc_10001f94 ], [ %v0_100020b8, %dec_label_pc_100020b8 ]
  %v2_10001fb0 = or i1 %v1_10001fb0.ph, %v0_10001fb0.ph
  br label %dec_label_pc_10001fb0

dec_label_pc_10001fb0:                            ; preds = %dec_label_pc_10001fb0.outer, %dec_label_pc_10001fb0
  br i1 %v2_10001fb0, label %dec_label_pc_10001fb0, label %dec_label_pc_10001fb4

dec_label_pc_10001fb4:                            ; preds = %dec_label_pc_10001fb0, %dec_label_pc_100020b8
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10001fc4

dec_label_pc_10001fc4:                            ; preds = %dec_label_pc_10002028, %dec_label_pc_10001fb4
  %v0_10001fc4 = phi i32 [ %v1_100020a8, %dec_label_pc_10002028 ], [ 0, %dec_label_pc_10001fb4 ]
  %v1_10001fc4 = mul i32 %v0_10001fc4, 24
  store i32 %v1_10001fc4, i32* %r0.global-to-local, align 4
  %v1_10001fc8 = mul i32 %v0_10001fc4, 4
  store i32 %v1_10001fc8, i32* %r11.global-to-local, align 4
  %v1_10001fcc = load i32, i32* %r20.global-to-local, align 4
  %v2_10001fcc = add i32 %v1_10001fcc, %v1_10001fc8
  %v3_10001fcc = inttoptr i32 %v2_10001fcc to i32*
  %v4_10001fcc = load i32, i32* %v3_10001fcc, align 4
  store i32 %v4_10001fcc, i32* %r28.global-to-local, align 4
  %v1_10001fd0 = load i32, i32* %r26.global-to-local, align 4
  %v2_10001fd0 = add i32 %v1_10001fd0, %v1_10001fc4
  %v1_10001fd4 = add i32 %v2_10001fd0, 20
  %v2_10001fd4 = inttoptr i32 %v1_10001fd4 to i8*
  %v3_10001fd4 = load i8, i8* %v2_10001fd4, align 1
  %v4_10001fd4 = zext i8 %v3_10001fd4 to i32
  store i32 %v4_10001fd4, i32* %r9.global-to-local, align 4
  %v1_10001fd8 = add i32 %v4_10001fcc, 24
  store i32 %v1_10001fd8, i32* @r31, align 4
  %v1_10001fdc = add i32 %v4_10001fcc, 44
  store i32 %v1_10001fdc, i32* @r30, align 4
  %v3_10001fe0 = icmp eq i8 %v3_10001fd4, 31
  store i1 %v3_10001fe0, i1* %cr7_eq.global-to-local, align 1
  %tmp35 = icmp ult i8 %v3_10001fd4, 32
  br i1 %tmp35, label %dec_label_pc_100020c0, label %dec_label_pc_10001fe8

dec_label_pc_10001fe8:                            ; preds = %dec_label_pc_10001fc4
  %v0_10001fe8 = load i32, i32* %r21.global-to-local, align 4
  %v1_10001fe8 = mul i32 %v0_10001fe8, 16
  %v2_10001fe8 = udiv i32 %v0_10001fe8, 268435456
  %v3_10001fe8 = or i32 %v2_10001fe8, %v1_10001fe8
  store i32 %v3_10001fe8, i32* %r21.global-to-local, align 4
  %v1_10001fec = call %0 @__asm_mtcrf(i32 1, i32 %v3_10001fe8)
  %v1_10001ff0 = mul nuw i32 %v2_10001fe8, 268435456
  %v2_10001ff0 = urem i32 %v0_10001fe8, 268435456
  %v3_10001ff0 = or i32 %v1_10001ff0, %v2_10001ff0
  store i32 %v3_10001ff0, i32* %r21.global-to-local, align 4
  %v0_10001ff4 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10001ff4, label %dec_label_pc_100020f4, label %dec_label_pc_10001ff8

dec_label_pc_10001ff8:                            ; preds = %dec_label_pc_100020c0, %dec_label_pc_10001fe8
  store i32 65535, i32* @r29, align 4
  %v0_10002000 = load i32, i32* %r25.global-to-local, align 4
  %v4_10002000 = icmp eq i32 %v0_10002000, 65535
  store i1 %v4_10002000, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10002000, label %dec_label_pc_1000210c, label %dec_label_pc_10002008

dec_label_pc_10002008:                            ; preds = %dec_label_pc_100020f4, %dec_label_pc_10001ff8
  %v1_10002008 = phi i32 [ %v1_10002104, %dec_label_pc_100020f4 ], [ 65535, %dec_label_pc_10001ff8 ]
  %v0_10002008 = load i32, i32* %r17.global-to-local, align 4
  %v4_10002008 = icmp eq i32 %v0_10002008, %v1_10002008
  store i1 %v4_10002008, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10002008, label %dec_label_pc_1000212c, label %dec_label_pc_10002010

dec_label_pc_10002010:                            ; preds = %dec_label_pc_1000210c.dec_label_pc_10002010_crit_edge, %dec_label_pc_10002008
  %v1_10002010 = phi i32 [ %v1_10002010.pre, %dec_label_pc_1000210c.dec_label_pc_10002010_crit_edge ], [ %v1_10002008, %dec_label_pc_10002008 ]
  %v0_10002010 = load i32, i32* %r18.global-to-local, align 4
  %v4_10002010 = icmp eq i32 %v0_10002010, %v1_10002010
  store i1 %v4_10002010, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10002010, label %dec_label_pc_1000213c, label %dec_label_pc_10002018

dec_label_pc_10002018:                            ; preds = %dec_label_pc_1000212c, %dec_label_pc_10002010
  %v0_10002018 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002018, label %dec_label_pc_10002148, label %dec_label_pc_1000201c

dec_label_pc_1000201c:                            ; preds = %dec_label_pc_1000213c, %dec_label_pc_10002018
  %v0_1000201c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000201c = add i32 %v0_1000201c, 16
  %v2_1000201c = inttoptr i32 %v1_1000201c to i32*
  %v3_1000201c = load i32, i32* %v2_1000201c, align 4
  store i32 %v3_1000201c, i32* %r0.global-to-local, align 4
  %v1_10002020 = load i32, i32* @r31, align 4
  %v2_10002020 = add i32 %v1_10002020, 16
  %v3_10002020 = inttoptr i32 %v2_10002020 to i32*
  store i32 %v3_1000201c, i32* %v3_10002020, align 4
  %v0_10002024 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002024, label %dec_label_pc_10002028, label %dec_label_pc_10002154

dec_label_pc_10002028:                            ; preds = %dec_label_pc_1000201c, %dec_label_pc_10002148, %dec_label_pc_10002154
  %v0_10002028 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002028 = trunc i32 %v0_10002028 to i16
  %v2_10002028 = load i32, i32* %r28.global-to-local, align 4
  %v3_10002028 = add i32 %v2_10002028, 10
  %v4_10002028 = inttoptr i32 %v3_10002028 to i16*
  store i16 %v1_10002028, i16* %v4_10002028, align 2
  %v0_10002030 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002030, i32* @r3, align 4
  %v2_10002034 = call i32 @function_100043cc(i32 %v0_10002030, i32 20)
  %v3_10002034 = trunc i32 %v2_10002034 to i16
  %v4_1000203c = add i32 %v0_10002030, 10
  %v5_1000203c = inttoptr i32 %v4_1000203c to i16*
  store i16 %v3_10002034, i16* %v5_1000203c, align 2
  %v0_10002040 = load i32, i32* @r31, align 4
  store i32 %v0_10002040, i32* @r3, align 4
  %v0_10002044 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002044 = trunc i32 %v0_10002044 to i16
  %v3_10002044 = add i32 %v0_10002040, 10
  %v4_10002044 = inttoptr i32 %v3_10002044 to i16*
  store i16 %v1_10002044, i16* %v4_10002044, align 2
  %v2_10002048 = call i32 @function_100043cc(i32 %v0_10002040, i32 20)
  %v3_10002048 = trunc i32 %v2_10002048 to i16
  %v0_1000204c = load i32, i32* @r30, align 4
  store i32 %v0_1000204c, i32* @r4, align 4
  %v3_10002050 = load i32, i32* @r31, align 4
  %v4_10002050 = add i32 %v3_10002050, 10
  %v5_10002050 = inttoptr i32 %v4_10002050 to i16*
  store i16 %v3_10002048, i16* %v5_10002050, align 2
  %v0_10002054 = load i32, i32* %r22.global-to-local, align 4
  %v0_10002058 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002058 = trunc i32 %v0_10002058 to i16
  %v2_10002058 = load i32, i32* @r30, align 4
  %v3_10002058 = add i32 %v2_10002058, 6
  %v4_10002058 = inttoptr i32 %v3_10002058 to i16*
  store i16 %v1_10002058, i16* %v4_10002058, align 2
  %v0_1000205c = load i32, i32* @r31, align 4
  store i32 %v0_1000205c, i32* %r3.global-to-local, align 4
  %v0_10002060 = load i32, i32* @r30, align 4
  %v1_10002060 = add i32 %v0_10002060, 4
  %v2_10002060 = inttoptr i32 %v1_10002060 to i16*
  %v3_10002060 = load i16, i16* %v2_10002060, align 2
  %v4_10002060 = zext i16 %v3_10002060 to i32
  %v4_10002064 = call i32 @function_10004430(i32 %v0_1000205c, i32 %v0_1000204c, i32 %v4_10002060, i32 %v0_10002054)
  %v5_10002064 = trunc i32 %v4_10002064 to i16
  store i32 %v4_10002064, i32* %r3.global-to-local, align 4
  %v3_10002068 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10002068, i32* %r0.global-to-local, align 4
  %v0_1000206c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000206c = add i32 %v0_1000206c, 16
  %v2_1000206c = inttoptr i32 %v1_1000206c to i32*
  %v3_1000206c = load i32, i32* %v2_1000206c, align 4
  store i32 %v3_1000206c, i32* %r11.global-to-local, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10002074 = mul i32 %v3_10002068, 24
  store i32 %v1_10002074, i32* %r0.global-to-local, align 4
  %v3_10002078 = load i32, i32* @r30, align 4
  %v4_10002078 = add i32 %v3_10002078, 6
  %v5_10002078 = inttoptr i32 %v4_10002078 to i16*
  store i16 %v5_10002064, i16* %v5_10002078, align 2
  %v0_1000207c = load i32, i32* %r28.global-to-local, align 4
  %v0_10002080 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10002080, i32* %r3.global-to-local, align 4
  %v0_10002084 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002084 = load i32, i32* %r26.global-to-local, align 4
  %v2_10002084 = add i32 %v1_10002084, %v0_10002084
  %v0_10002088 = load i32, i32* %r9.global-to-local, align 4
  %v3_10002088 = trunc i32 %v0_10002088 to i16
  %v5_10002088 = inttoptr i32 %v2_10002084 to i16*
  store i16 %v3_10002088, i16* %v5_10002088, align 2
  %v0_1000208c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000208c = add i32 %v2_10002084, 4
  %v3_1000208c = inttoptr i32 %v2_1000208c to i32*
  store i32 %v0_1000208c, i32* %v3_1000208c, align 4
  %v0_10002090 = load i32, i32* %r24.global-to-local, align 4
  %v0_10002094 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002094 = trunc i32 %v0_10002094 to i16
  %v3_10002094 = add i32 %v2_10002084, 2
  %v4_10002094 = inttoptr i32 %v3_10002094 to i16*
  store i16 %v1_10002094, i16* %v4_10002094, align 2
  store i32 268443812, i32* @lr, align 4
  %v6_100020a0 = call i32 @function_10009088(i32 %v0_10002080, i32 %v0_1000207c, i32 %v0_10002090, i32 16384, i32 %v2_10002084, i32 16)
  store i32 %v6_100020a0, i32* %r3.global-to-local, align 4
  %v3_100020a4 = load i32, i32* %stack_var_-104, align 4
  %v1_100020a8 = add i32 %v3_100020a4, 1
  store i32 %v1_100020a8, i32* %r9.global-to-local, align 4
  %v1_100020ac = load i32, i32* %r19.global-to-local, align 4
  %v2_100020ac = icmp slt i32 %v1_100020a8, %v1_100020ac
  %v4_100020ac = icmp eq i32 %v1_100020a8, %v1_100020ac
  store i1 %v4_100020ac, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_100020a8, i32* %stack_var_-104, align 4
  br i1 %v2_100020ac, label %dec_label_pc_10001fc4, label %dec_label_pc_100020b8

dec_label_pc_100020b8:                            ; preds = %dec_label_pc_10002028
  %v0_100020b8 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100020b8 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_100020b8 = or i1 %v0_100020b8, %v1_100020b8
  br i1 %v2_100020b8, label %dec_label_pc_10001fb0.outer, label %dec_label_pc_10001fb4

dec_label_pc_100020c0:                            ; preds = %dec_label_pc_10001fc4
  %v1_100020c0 = add i32 %v2_10001fd0, 16
  %v2_100020c0 = inttoptr i32 %v1_100020c0 to i32*
  %v3_100020c0 = load i32, i32* %v2_100020c0, align 4
  store i32 %v3_100020c0, i32* %r29.global-to-local, align 4
  %v0_100020c4 = call i32 @function_10005928()
  store i32 %v0_100020c4, i32* %r3.global-to-local, align 4
  %v3_100020c8 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100020c8, i32* %r9.global-to-local, align 4
  %v0_100020cc = load i32, i32* %r21.global-to-local, align 4
  %v1_100020cc = mul i32 %v0_100020cc, 16
  %v2_100020cc = udiv i32 %v0_100020cc, 268435456
  %v3_100020cc = or i32 %v2_100020cc, %v1_100020cc
  store i32 %v3_100020cc, i32* %r21.global-to-local, align 4
  %v1_100020d0 = call %0 @__asm_mtcrf(i32 1, i32 %v3_100020cc)
  %v1_100020d4 = mul nuw i32 %v2_100020cc, 268435456
  %v2_100020d4 = urem i32 %v0_100020cc, 268435456
  %v3_100020d4 = or i32 %v1_100020d4, %v2_100020d4
  store i32 %v3_100020d4, i32* %r21.global-to-local, align 4
  %v0_100020d8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100020d8 = mul i32 %v0_100020d8, 24
  %v1_100020dc = load i32, i32* %r26.global-to-local, align 4
  %v2_100020dc = add i32 %v1_100020dc, %v1_100020d8
  store i32 %v2_100020dc, i32* %r9.global-to-local, align 4
  %v1_100020e0 = add i32 %v2_100020dc, 20
  %v2_100020e0 = inttoptr i32 %v1_100020e0 to i8*
  %v3_100020e0 = load i8, i8* %v2_100020e0, align 1
  %v4_100020e0 = zext i8 %v3_100020e0 to i32
  store i32 %v4_100020e0, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_100020e0, 64
  %v2_100020e4 = zext i8 %tmp to i32
  %v3_100020e4 = lshr i32 %v0_100020c4, %v2_100020e4
  store i32 %v3_100020e4, i32* %r3.global-to-local, align 4
  %v0_100020e8 = load i32, i32* %r29.global-to-local, align 4
  %v2_100020e8 = add i32 %v3_100020e4, %v0_100020e8
  store i32 %v2_100020e8, i32* %r29.global-to-local, align 4
  %v1_100020ec = load i32, i32* %r28.global-to-local, align 4
  %v2_100020ec = add i32 %v1_100020ec, 16
  %v3_100020ec = inttoptr i32 %v2_100020ec to i32*
  store i32 %v2_100020e8, i32* %v3_100020ec, align 4
  %v0_100020f0 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100020f0, label %dec_label_pc_100020f4, label %dec_label_pc_10001ff8

dec_label_pc_100020f4:                            ; preds = %dec_label_pc_100020c0, %dec_label_pc_10001fe8
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_100020f8 = call i32 @function_10005928()
  store i32 %v0_100020f8, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_10002100 = load i32, i32* %r28.global-to-local, align 4
  %v2_10002100 = add i32 %v1_10002100, 12
  %v3_10002100 = inttoptr i32 %v2_10002100 to i32*
  store i32 %v0_100020f8, i32* %v3_10002100, align 4
  %v0_10002104 = load i32, i32* %r25.global-to-local, align 4
  %v1_10002104 = load i32, i32* @r29, align 4
  %v4_10002104 = icmp eq i32 %v0_10002104, %v1_10002104
  store i1 %v4_10002104, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10002104, label %dec_label_pc_1000210c, label %dec_label_pc_10002008

dec_label_pc_1000210c:                            ; preds = %dec_label_pc_100020f4, %dec_label_pc_10001ff8
  %v0_1000210c = call i32 @function_10005928()
  %v0_10002110 = load i32, i32* %r17.global-to-local, align 4
  %v1_10002110 = load i32, i32* @r29, align 4
  %v4_10002110 = icmp eq i32 %v0_10002110, %v1_10002110
  store i1 %v4_10002110, i1* %cr7_eq.global-to-local, align 1
  %v1_10002114 = urem i32 %v0_1000210c, 65536
  store i32 %v1_10002114, i32* %r3.global-to-local, align 4
  %v1_10002118 = add nsw i32 %v1_10002114, -1000
  store i32 %v1_10002118, i32* %r0.global-to-local, align 4
  %v1_1000211c = trunc i32 %v0_1000210c to i16
  %v2_1000211c = load i32, i32* %r28.global-to-local, align 4
  %v3_1000211c = add i32 %v2_1000211c, 4
  %v4_1000211c = inttoptr i32 %v3_1000211c to i16*
  store i16 %v1_1000211c, i16* %v4_1000211c, align 2
  %v0_10002120 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002120 = sub i32 -1, %v0_10002120
  store i32 %v1_10002120, i32* %r0.global-to-local, align 4
  %v1_10002124 = trunc i32 %v1_10002120 to i16
  %v2_10002124 = load i32, i32* @r31, align 4
  %v3_10002124 = add i32 %v2_10002124, 4
  %v4_10002124 = inttoptr i32 %v3_10002124 to i16*
  store i16 %v1_10002124, i16* %v4_10002124, align 2
  br i1 %v4_10002110, label %dec_label_pc_1000212c, label %dec_label_pc_1000210c.dec_label_pc_10002010_crit_edge

dec_label_pc_1000210c.dec_label_pc_10002010_crit_edge: ; preds = %dec_label_pc_1000210c
  %v1_10002010.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10002010

dec_label_pc_1000212c:                            ; preds = %dec_label_pc_1000210c, %dec_label_pc_10002008
  %v0_1000212c = call i32 @function_10005928()
  %v1_1000212c = trunc i32 %v0_1000212c to i16
  store i32 %v0_1000212c, i32* %r3.global-to-local, align 4
  %v0_10002130 = load i32, i32* %r18.global-to-local, align 4
  %v1_10002130 = load i32, i32* @r29, align 4
  %v4_10002130 = icmp eq i32 %v0_10002130, %v1_10002130
  store i1 %v4_10002130, i1* %cr7_eq.global-to-local, align 1
  %v3_10002134 = load i32, i32* %r28.global-to-local, align 4
  %v4_10002134 = add i32 %v3_10002134, 44
  %v5_10002134 = inttoptr i32 %v4_10002134 to i16*
  store i16 %v1_1000212c, i16* %v5_10002134, align 2
  br i1 %v4_10002130, label %dec_label_pc_1000213c, label %dec_label_pc_10002018

dec_label_pc_1000213c:                            ; preds = %dec_label_pc_1000212c, %dec_label_pc_10002010
  %v0_1000213c = call i32 @function_10005928()
  %v1_1000213c = trunc i32 %v0_1000213c to i16
  store i32 %v0_1000213c, i32* %r3.global-to-local, align 4
  %v3_10002140 = load i32, i32* @r30, align 4
  %v4_10002140 = add i32 %v3_10002140, 2
  %v5_10002140 = inttoptr i32 %v4_10002140 to i16*
  store i16 %v1_1000213c, i16* %v5_10002140, align 2
  %v0_10002144 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002144, label %dec_label_pc_10002148, label %dec_label_pc_1000201c

dec_label_pc_10002148:                            ; preds = %dec_label_pc_1000213c, %dec_label_pc_10002018
  %v0_10002148 = call i32 @function_10005928()
  store i32 %v0_10002148, i32* %r3.global-to-local, align 4
  %v1_1000214c = load i32, i32* @r31, align 4
  %v2_1000214c = add i32 %v1_1000214c, 16
  %v3_1000214c = inttoptr i32 %v2_1000214c to i32*
  store i32 %v0_10002148, i32* %v3_1000214c, align 4
  %v0_10002150 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002150, label %dec_label_pc_10002028, label %dec_label_pc_10002154

dec_label_pc_10002154:                            ; preds = %dec_label_pc_1000201c, %dec_label_pc_10002148
  %v0_10002154 = load i32, i32* @r30, align 4
  %v1_10002154 = add i32 %v0_10002154, 8
  store i32 %v1_10002154, i32* @r3, align 4
  %v0_10002158 = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_10002158, i32* @r4, align 4
  %v0_1000215c = call i32 @function_10005afc()
  store i32 %v0_1000215c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002028

; uselistorder directives
  uselistorder i32 %v0_1000213c, { 1, 0 }
  uselistorder i32 %v0_1000212c, { 1, 0 }
  uselistorder i32 %v1_10002120, { 1, 0 }
  uselistorder i32 %v1_10002114, { 1, 0 }
  uselistorder i32 %v0_1000210c, { 1, 0 }
  uselistorder i32 %v1_10002104, { 1, 0 }
  uselistorder i32 %v0_100020cc, { 2, 1, 0 }
  uselistorder i1 %v1_100020b8, { 1, 0 }
  uselistorder i1 %v0_100020b8, { 1, 0 }
  uselistorder i32 %v1_100020a8, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v2_10002084, { 0, 2, 1, 3 }
  uselistorder i32 %v4_10002064, { 1, 0 }
  uselistorder i32 %v0_10001fe8, { 2, 1, 0 }
  uselistorder i32 %v4_10001fcc, { 1, 0, 2 }
  uselistorder i32 %v1_10001fc8, { 1, 0 }
  uselistorder i32 %v1_10001f18, { 1, 0 }
  uselistorder i32 %v1_10001e60, { 1, 0 }
  uselistorder i32 %v1_10001e54, { 1, 0 }
  uselistorder i32 %v1_10001df0, { 1, 0 }
  uselistorder i32 %v0_10001df0, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10001de0, { 1, 2, 0 }
  uselistorder i32 %v0_10001dd4, { 1, 0 }
  uselistorder i32 %v5_10001d80, { 0, 3, 1, 2 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 8, 9, 21, 22 }
  uselistorder i32* %r31.global-to-local, { 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1, 2, 3, 4, 16 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 3, 4, 5, 6, 7, 9, 8, 10, 2, 11, 12 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 2, 22, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 1, 0 }
  uselistorder i32* %r29.global-to-local, { 1, 0, 2, 3, 4, 8, 5, 6, 7 }
  uselistorder i32* %r21.global-to-local, { 0, 1, 4, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 22, 23, 24, 25, 12, 27, 28, 29, 30, 31 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 2, 7, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr3_eq.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_10002154, { 1, 0 }
  uselistorder label %dec_label_pc_10002028, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10001fb4, { 1, 0 }
  uselistorder label %dec_label_pc_10001fb0, { 1, 0 }
  uselistorder label %dec_label_pc_10001f94, { 1, 0 }
  uselistorder label %dec_label_pc_10001f30, { 1, 0 }
  uselistorder label %dec_label_pc_10001f04, { 1, 0 }
  uselistorder label %dec_label_pc_10001ea4, { 1, 0 }
}

define i32 @function_10002164(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10002164:
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %v0_10002168 = load i32, i32* @lr, align 4
  store i32 %v0_10002168, i32* %r0.global-to-local, align 4
  %v0_1000216c = call i32 @__asm_mfcr()
  store i32 %v0_1000216c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r27.global-to-local, align 4
  store i32 %v0_1000216c, i32* %r23.global-to-local, align 4
  %v0_100021a4 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100021ac = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_100021b4 = load i32, i32* @r30, align 4
  store i32 268444116, i32* @lr, align 4
  %v2_100021d0 = call i32 @function_10009460(i32 4, i32 4)
  store i32 %v2_100021d0, i32* %r24.global-to-local, align 4
  %v0_100021d8 = load i32, i32* @r28, align 4
  %v0_100021dc = load i32, i32* @r29, align 4
  store i32 %v0_100021dc, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 268444140, i32* @lr, align 4
  %v4_100021e8 = inttoptr i32 %v0_100021d8 to i32*
  %v5_100021e8 = call i32 @function_100006a8(i32 %v0_100021dc, i32* %v4_100021e8, i32 2, i32 0)
  store i32 65535, i32* %r6.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  %v0_100021f8 = load i32, i32* @r28, align 4
  %v1_100021fc = urem i32 %v5_100021e8, 256
  store i32 %v1_100021fc, i32* %r19.global-to-local, align 4
  %v0_10002200 = load i32, i32* @r29, align 4
  store i32 %v0_10002200, i32* %r3.global-to-local, align 4
  store i32 268444168, i32* @lr, align 4
  %v4_10002204 = inttoptr i32 %v0_100021f8 to i32*
  %v5_10002204 = call i32 @function_100006a8(i32 %v0_10002200, i32* %v4_10002204, i32 3, i32 65535)
  %v0_10002208 = load i32, i32* @r28, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 64, i32* %r6.global-to-local, align 4
  store i32 %v5_10002204, i32* %r21.global-to-local, align 4
  %v0_10002218 = load i32, i32* @r29, align 4
  store i32 %v0_10002218, i32* %r3.global-to-local, align 4
  store i32 268444192, i32* @lr, align 4
  %v4_1000221c = inttoptr i32 %v0_10002208 to i32*
  %v5_1000221c = call i32 @function_100006a8(i32 %v0_10002218, i32* %v4_1000221c, i32 4, i32 64)
  %v0_10002220 = load i32, i32* @r28, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v1_1000222c = urem i32 %v5_1000221c, 256
  store i32 %v1_1000222c, i32* %r26.global-to-local, align 4
  %v0_10002230 = load i32, i32* @r29, align 4
  store i32 %v0_10002230, i32* %r3.global-to-local, align 4
  store i32 268444216, i32* @lr, align 4
  %v4_10002234 = inttoptr i32 %v0_10002220 to i32*
  %v5_10002234 = call i32 @function_100006a8(i32 %v0_10002230, i32* %v4_10002234, i32 5, i32 0)
  store i32 65535, i32* %r6.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  %v0_10002244 = load i32, i32* @r28, align 4
  %v1_10002248 = urem i32 %v5_10002234, 256
  store i32 %v1_10002248, i32* @r31, align 4
  %v0_1000224c = load i32, i32* @r29, align 4
  store i32 %v0_1000224c, i32* %r3.global-to-local, align 4
  store i32 268444244, i32* @lr, align 4
  %v4_10002250 = inttoptr i32 %v0_10002244 to i32*
  %v5_10002250 = call i32 @function_100006a8(i32 %v0_1000224c, i32* %v4_10002250, i32 6, i32 65535)
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 27015, i32* %r6.global-to-local, align 4
  %v0_1000225c = load i32, i32* @r28, align 4
  store i32 %v5_10002250, i32* %r22.global-to-local, align 4
  %v0_10002264 = load i32, i32* @r29, align 4
  store i32 %v0_10002264, i32* %r3.global-to-local, align 4
  store i32 268444268, i32* @lr, align 4
  %v4_10002268 = inttoptr i32 %v0_1000225c to i32*
  %v5_10002268 = call i32 @function_100006a8(i32 %v0_10002264, i32* %v4_10002268, i32 7, i32 27015)
  store i32 %v5_10002268, i32* %r29.global-to-local, align 4
  store i32 20, i32* %r3.global-to-local, align 4
  store i32 268444280, i32* @lr, align 4
  %v1_10002274 = call i32 @function_100076e0(i32 20)
  store i32 20, i32* %r3.global-to-local, align 4
  %v3_10002280 = call i32 @function_1000762c(i32 20, i32* nonnull %stack_var_-84)
  store i32 %v3_10002280, i32* %r30.global-to-local, align 4
  store i32 17, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268444312, i32* @lr, align 4
  %v3_10002294 = call i32 @function_10009104(i32 2, i32 3, i32 17)
  store i32 %v3_10002294, i32* %r3.global-to-local, align 4
  %v3_10002298 = icmp eq i32 %v3_10002294, -1
  store i32 %v3_10002294, i32* %r25.global-to-local, align 4
  br i1 %v3_10002298, label %dec_label_pc_100024e8, label %dec_label_pc_100022a4

dec_label_pc_100022a4:                            ; preds = %dec_label_pc_10002164
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  %v2_100022b0 = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v2_100022b0, i32* %r6.global-to-local, align 4
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-88, align 4
  store i32 268444352, i32* @lr, align 4
  %v4_100022bc = call i32 @function_100090c8(i32 0, i32 3, i32 %v2_100022b0, i32 4)
  store i32 %v4_100022bc, i32* %r3.global-to-local, align 4
  %v3_100022c0 = icmp eq i32 %v4_100022bc, -1
  br i1 %v3_100022c0, label %dec_label_pc_100024e0, label %dec_label_pc_100022c8

dec_label_pc_100022c8:                            ; preds = %dec_label_pc_100022a4
  %v0_100022c8 = load i32, i32* %r23.global-to-local, align 4
  %v1_100022c8 = icmp slt i32 %v0_100022c8, 0
  %v3_100022c8 = icmp eq i32 %v0_100022c8, 0
  store i1 %v1_100022c8, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_100022c8, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_100022d0 = load i32, i32* %r21.global-to-local, align 4
  %v1_100022d0 = urem i32 %v0_100022d0, 65536
  store i32 %v1_100022d0, i32* %r20.global-to-local, align 4
  store i32 0, i32* %stack_var_-88, align 4
  %v0_100022d8 = load i32, i32* %r22.global-to-local, align 4
  %v1_100022d8 = urem i32 %v0_100022d8, 65536
  store i32 %v1_100022d8, i32* %r21.global-to-local, align 4
  %v0_100022dc = load i32, i32* %r29.global-to-local, align 4
  %v1_100022dc = urem i32 %v0_100022dc, 65536
  store i32 %v1_100022dc, i32* %r22.global-to-local, align 4
  %tmp32 = icmp slt i32 %v0_100022c8, 1
  br i1 %tmp32, label %dec_label_pc_100023b4.outer, label %dec_label_pc_100022e4

dec_label_pc_100022e4:                            ; preds = %dec_label_pc_100022c8
  %v0_100022e4 = load i32, i32* @r31, align 4
  %v3_100022e4 = icmp eq i32 %v0_100022e4, 0
  store i1 %v3_100022e4, i1* %cr3_eq.global-to-local, align 1
  store i32 4, i32* %r29.global-to-local, align 4
  store i32 5, i32* %r28.global-to-local, align 4
  store i32 16384, i32* %r18.global-to-local, align 4
  store i32 17, i32* %r17.global-to-local, align 4
  store i32 -1, i32* %r16.global-to-local, align 4
  br label %dec_label_pc_10002304

dec_label_pc_10002304:                            ; preds = %dec_label_pc_10002360, %dec_label_pc_100022e4
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 268444432, i32* @lr, align 4
  %v2_1000230c = call i32 @function_10009460(i32 128, i32 1)
  store i32 %v2_1000230c, i32* %r3.global-to-local, align 4
  %v3_10002310 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_10002310, i32* %r0.global-to-local, align 4
  %v0_10002314 = load i32, i32* @r31, align 4
  %v1_10002314 = mul i32 %v0_10002314, 4
  store i32 %v1_10002314, i32* %r9.global-to-local, align 4
  %v0_10002318 = load i32, i32* @r30, align 4
  %v2_1000231c = load i32, i32* %r24.global-to-local, align 4
  %v3_1000231c = add i32 %v2_1000231c, %v1_10002314
  %v4_1000231c = inttoptr i32 %v3_1000231c to i32*
  store i32 %v2_1000230c, i32* %v4_1000231c, align 4
  %v0_10002320 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002320 = mul i32 %v0_10002320, 4
  store i32 %v1_10002320, i32* %r0.global-to-local, align 4
  %v0_10002324 = load i32, i32* %r24.global-to-local, align 4
  %v2_10002324 = add i32 %v0_10002324, %v1_10002320
  %v3_10002324 = inttoptr i32 %v2_10002324 to i32*
  %v4_10002324 = load i32, i32* %v3_10002324, align 4
  store i32 %v4_10002324, i32* %r10.global-to-local, align 4
  %v1_10002328 = inttoptr i32 %v4_10002324 to i32*
  %v2_10002328 = load i32, i32* %v1_10002328, align 4
  store i32 %v2_10002328, i32* %r0.global-to-local, align 4
  %v1_1000232c = add i32 %v4_10002324, 32
  store i32 %v1_1000232c, i32* %r3.global-to-local, align 4
  %v0_10002330 = load i32, i32* %r20.global-to-local, align 4
  %v1_10002330 = trunc i32 %v0_10002330 to i16
  %v3_10002330 = add i32 %v4_10002324, 4
  %v4_10002330 = inttoptr i32 %v3_10002330 to i16*
  store i16 %v1_10002330, i16* %v4_10002330, align 2
  %v0_10002334 = load i32, i32* %r10.global-to-local, align 4
  %v1_10002334 = add i32 %v0_10002334, 20
  store i32 %v1_10002334, i32* %r8.global-to-local, align 4
  %v1_10002338 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10002338, i32* %r0.global-to-local, align 4
  %v1_1000233c = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_1000233c, i32* %r0.global-to-local, align 4
  %v1_10002340 = load i32, i32* %r10.global-to-local, align 4
  %v2_10002340 = inttoptr i32 %v1_10002340 to i32*
  store i32 %v1_1000233c, i32* %v2_10002340, align 4
  %v0_10002344 = load i32, i32* %r19.global-to-local, align 4
  %v1_10002344 = trunc i32 %v0_10002344 to i8
  %v2_10002344 = load i32, i32* %r10.global-to-local, align 4
  %v3_10002344 = add i32 %v2_10002344, 1
  %v4_10002344 = inttoptr i32 %v3_10002344 to i8*
  store i8 %v1_10002344, i8* %v4_10002344, align 1
  %v3_10002348 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10002348, i32* %r9.global-to-local, align 4
  %v0_1000234c = load i32, i32* %r26.global-to-local, align 4
  %v1_1000234c = trunc i32 %v0_1000234c to i8
  %v2_1000234c = load i32, i32* %r10.global-to-local, align 4
  %v3_1000234c = add i32 %v2_1000234c, 8
  %v4_1000234c = inttoptr i32 %v3_1000234c to i8*
  store i8 %v1_1000234c, i8* %v4_1000234c, align 1
  %v0_10002350 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002350 = add i32 %v0_10002350, 32
  store i32 %v1_10002350, i32* %r9.global-to-local, align 4
  %v1_10002354 = trunc i32 %v1_10002350 to i16
  %v2_10002354 = load i32, i32* %r10.global-to-local, align 4
  %v3_10002354 = add i32 %v2_10002354, 2
  %v4_10002354 = inttoptr i32 %v3_10002354 to i16*
  store i16 %v1_10002354, i16* %v4_10002354, align 2
  %v0_10002358 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002358, label %dec_label_pc_10002360, label %dec_label_pc_1000235c

dec_label_pc_1000235c:                            ; preds = %dec_label_pc_10002304
  %v0_1000235c = load i32, i32* %r18.global-to-local, align 4
  %v1_1000235c = trunc i32 %v0_1000235c to i16
  %v2_1000235c = load i32, i32* %r10.global-to-local, align 4
  %v3_1000235c = add i32 %v2_1000235c, 6
  %v4_1000235c = inttoptr i32 %v3_1000235c to i16*
  store i16 %v1_1000235c, i16* %v4_1000235c, align 2
  br label %dec_label_pc_10002360

dec_label_pc_10002360:                            ; preds = %dec_label_pc_10002304, %dec_label_pc_1000235c
  %v0_10002360 = load i32, i32* %r17.global-to-local, align 4
  %v1_10002360 = trunc i32 %v0_10002360 to i8
  %v2_10002360 = load i32, i32* %r10.global-to-local, align 4
  %v3_10002360 = add i32 %v2_10002360, 9
  %v4_10002360 = inttoptr i32 %v3_10002360 to i8*
  store i8 %v1_10002360, i8* %v4_10002360, align 1
  %v0_10002364 = load i32, i32* %r21.global-to-local, align 4
  %v1_10002364 = trunc i32 %v0_10002364 to i16
  %v2_10002364 = load i32, i32* %r10.global-to-local, align 4
  %v3_10002364 = add i32 %v2_10002364, 20
  %v4_10002364 = inttoptr i32 %v3_10002364 to i16*
  store i16 %v1_10002364, i16* %v4_10002364, align 2
  %v3_10002368 = load i32, i32* %stack_var_-88, align 4
  %v3_1000236c = load i32, i32* @global_var_1001b500.16, align 4
  store i32 %v3_1000236c, i32* %r0.global-to-local, align 4
  %v1_10002370 = mul i32 %v3_10002368, 24
  store i32 %v1_10002370, i32* %r9.global-to-local, align 4
  %v0_10002374 = load i32, i32* %r22.global-to-local, align 4
  %v1_10002374 = trunc i32 %v0_10002374 to i16
  %v2_10002374 = load i32, i32* %r8.global-to-local, align 4
  %v3_10002374 = add i32 %v2_10002374, 2
  %v4_10002374 = inttoptr i32 %v3_10002374 to i16*
  store i16 %v1_10002374, i16* %v4_10002374, align 2
  %v0_10002378 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002378 = load i32, i32* %r10.global-to-local, align 4
  %v2_10002378 = add i32 %v1_10002378, 12
  %v3_10002378 = inttoptr i32 %v2_10002378 to i32*
  store i32 %v0_10002378, i32* %v3_10002378, align 4
  %v0_1000237c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000237c = load i32, i32* %r27.global-to-local, align 4
  %v2_1000237c = add i32 %v1_1000237c, %v0_1000237c
  store i32 %v2_1000237c, i32* %r9.global-to-local, align 4
  %v1_10002380 = add i32 %v2_1000237c, 16
  %v2_10002380 = inttoptr i32 %v1_10002380 to i32*
  %v3_10002380 = load i32, i32* %v2_10002380, align 4
  store i32 %v3_10002380, i32* %r0.global-to-local, align 4
  %v3_10002384 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10002384, i32* %r11.global-to-local, align 4
  %v0_10002388 = load i32, i32* %r16.global-to-local, align 4
  %v1_10002388 = load i32, i32* %r10.global-to-local, align 4
  %v2_10002388 = add i32 %v1_10002388, 28
  %v3_10002388 = inttoptr i32 %v2_10002388 to i32*
  store i32 %v0_10002388, i32* %v3_10002388, align 4
  %v0_1000238c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000238c = load i32, i32* %r10.global-to-local, align 4
  %v2_1000238c = add i32 %v1_1000238c, 16
  %v3_1000238c = inttoptr i32 %v2_1000238c to i32*
  store i32 %v0_1000238c, i32* %v3_1000238c, align 4
  %v0_10002390 = load i32, i32* %r11.global-to-local, align 4
  %v1_10002390 = add i32 %v0_10002390, 12
  store i32 %v1_10002390, i32* %r11.global-to-local, align 4
  %v1_10002394 = trunc i32 %v1_10002390 to i16
  %v2_10002394 = load i32, i32* %r8.global-to-local, align 4
  %v3_10002394 = add i32 %v2_10002394, 4
  %v4_10002394 = inttoptr i32 %v3_10002394 to i16*
  store i16 %v1_10002394, i16* %v4_10002394, align 2
  %v3_10002398 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10002398, i32* %r5.global-to-local, align 4
  store i32 268444576, i32* @lr, align 4
  %v3_1000239c = call i32 @function_10007cdc(i32 %v3_10002398, i32 %v0_10002318, i32 %v3_10002398)
  store i32 %v3_1000239c, i32* %r3.global-to-local, align 4
  %v3_100023a0 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_100023a0, i32* %r9.global-to-local, align 4
  %v1_100023a4 = add i32 %v3_100023a0, 1
  %v1_100023a8 = load i32, i32* %r23.global-to-local, align 4
  %v2_100023a8 = icmp slt i32 %v1_100023a4, %v1_100023a8
  store i32 %v1_100023a4, i32* %stack_var_-88, align 4
  br i1 %v2_100023a8, label %dec_label_pc_10002304, label %dec_label_pc_100023b4.preheader.loopexit

dec_label_pc_100023b4.preheader.loopexit:         ; preds = %dec_label_pc_10002360
  %v0_100023b4.pre.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100023b4.pre.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_100023b4.outer

dec_label_pc_100023b4.outer:                      ; preds = %dec_label_pc_10002480, %dec_label_pc_100022c8, %dec_label_pc_100023b4.preheader.loopexit
  %v1_100023b4.ph34 = phi i1 [ %v1_100022c8, %dec_label_pc_100022c8 ], [ %v1_100023b4.pre.pre, %dec_label_pc_100023b4.preheader.loopexit ], [ %v1_10002480, %dec_label_pc_10002480 ]
  %v0_100023b4.ph35 = phi i1 [ %v3_100022c8, %dec_label_pc_100022c8 ], [ %v0_100023b4.pre.pre, %dec_label_pc_100023b4.preheader.loopexit ], [ %v0_10002480, %dec_label_pc_10002480 ]
  %v2_100023b4 = or i1 %v1_100023b4.ph34, %v0_100023b4.ph35
  br label %dec_label_pc_100023b4

dec_label_pc_100023b4:                            ; preds = %dec_label_pc_100023b4.outer, %dec_label_pc_100023b4
  br i1 %v2_100023b4, label %dec_label_pc_100023b4, label %dec_label_pc_100023b8

dec_label_pc_100023b8:                            ; preds = %dec_label_pc_100023b4, %dec_label_pc_10002480
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 0, i32* %stack_var_-88, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_100023c8

dec_label_pc_100023c8:                            ; preds = %dec_label_pc_10002408, %dec_label_pc_100023b8
  %v0_100023d8 = phi i32 [ %v1_10002470, %dec_label_pc_10002408 ], [ 0, %dec_label_pc_100023b8 ]
  %v1_100023c8 = mul i32 %v0_100023d8, 24
  store i32 65535, i32* %r30.global-to-local, align 4
  %v1_100023d4 = load i32, i32* %r27.global-to-local, align 4
  %v2_100023d4 = add i32 %v1_100023d4, %v1_100023c8
  store i32 %v2_100023d4, i32* %r10.global-to-local, align 4
  %v1_100023d8 = mul i32 %v0_100023d8, 4
  store i32 %v1_100023d8, i32* %r0.global-to-local, align 4
  %v1_100023dc = add i32 %v2_100023d4, 20
  %v2_100023dc = inttoptr i32 %v1_100023dc to i8*
  %v3_100023dc = load i8, i8* %v2_100023dc, align 1
  %v4_100023dc = zext i8 %v3_100023dc to i32
  store i32 %v4_100023dc, i32* %r9.global-to-local, align 4
  %v0_100023e0 = load i32, i32* %r24.global-to-local, align 4
  %v2_100023e0 = add i32 %v0_100023e0, %v1_100023d8
  %v3_100023e0 = inttoptr i32 %v2_100023e0 to i32*
  %v4_100023e0 = load i32, i32* %v3_100023e0, align 4
  store i32 %v4_100023e0, i32* %r28.global-to-local, align 4
  %v1_100023e8 = add i32 %v4_100023e0, 20
  store i32 %v1_100023e8, i32* @r31, align 4
  %tmp33 = icmp ult i8 %v3_100023dc, 32
  br i1 %tmp33, label %dec_label_pc_10002488, label %dec_label_pc_100023f0

dec_label_pc_100023f0:                            ; preds = %dec_label_pc_100023c8
  %v0_100023f0 = load i32, i32* %r20.global-to-local, align 4
  %v4_100023f0 = icmp eq i32 %v0_100023f0, 65535
  br i1 %v4_100023f0, label %dec_label_pc_100024b4, label %dec_label_pc_100023f8

dec_label_pc_100023f8:                            ; preds = %dec_label_pc_10002488.dec_label_pc_100023f8_crit_edge, %dec_label_pc_100023f0
  %v1_100023f8 = phi i32 [ %v1_100023f8.pre, %dec_label_pc_10002488.dec_label_pc_100023f8_crit_edge ], [ 65535, %dec_label_pc_100023f0 ]
  %v0_100023f8 = load i32, i32* %r21.global-to-local, align 4
  %v4_100023f8 = icmp eq i32 %v0_100023f8, %v1_100023f8
  br i1 %v4_100023f8, label %dec_label_pc_100024c4, label %dec_label_pc_10002400

dec_label_pc_10002400:                            ; preds = %dec_label_pc_100024b4.dec_label_pc_10002400_crit_edge, %dec_label_pc_100023f8
  %v1_10002400 = phi i32 [ %v1_10002400.pre, %dec_label_pc_100024b4.dec_label_pc_10002400_crit_edge ], [ %v1_100023f8, %dec_label_pc_100023f8 ]
  %v0_10002400 = load i32, i32* %r22.global-to-local, align 4
  %v4_10002400 = icmp eq i32 %v0_10002400, %v1_10002400
  br i1 %v4_10002400, label %dec_label_pc_100024d4, label %dec_label_pc_10002408

dec_label_pc_10002408:                            ; preds = %dec_label_pc_100024c4, %dec_label_pc_10002400, %dec_label_pc_100024d4
  %v0_10002408 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002408 = trunc i32 %v0_10002408 to i16
  %v2_10002408 = load i32, i32* %r28.global-to-local, align 4
  %v3_10002408 = add i32 %v2_10002408, 10
  %v4_10002408 = inttoptr i32 %v3_10002408 to i16*
  store i16 %v1_10002408, i16* %v4_10002408, align 2
  %v0_10002410 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002410, i32* @r3, align 4
  %v2_10002414 = call i32 @function_100043cc(i32 %v0_10002410, i32 20)
  %v3_10002414 = trunc i32 %v2_10002414 to i16
  store i32 %v2_10002414, i32* %r3.global-to-local, align 4
  %v3_10002418 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10002418, i32* %r6.global-to-local, align 4
  %v3_1000241c = load i32, i32* %r28.global-to-local, align 4
  %v4_1000241c = add i32 %v3_1000241c, 10
  %v5_1000241c = inttoptr i32 %v4_1000241c to i16*
  store i16 %v3_10002414, i16* %v5_1000241c, align 2
  %v0_10002420 = load i32, i32* @r31, align 4
  store i32 %v0_10002420, i32* @r4, align 4
  %v0_10002424 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002424 = trunc i32 %v0_10002424 to i16
  %v3_10002424 = add i32 %v0_10002420, 6
  %v4_10002424 = inttoptr i32 %v3_10002424 to i16*
  store i16 %v1_10002424, i16* %v4_10002424, align 2
  %v0_10002428 = load i32, i32* %r6.global-to-local, align 4
  %v1_10002428 = add i32 %v0_10002428, 12
  store i32 %v1_10002428, i32* %r6.global-to-local, align 4
  %v0_1000242c = load i32, i32* @r31, align 4
  %v1_1000242c = add i32 %v0_1000242c, 4
  %v2_1000242c = inttoptr i32 %v1_1000242c to i16*
  %v3_1000242c = load i16, i16* %v2_1000242c, align 2
  %v4_1000242c = zext i16 %v3_1000242c to i32
  store i32 %v4_1000242c, i32* %r5.global-to-local, align 4
  %v0_10002430 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002430, i32* %r3.global-to-local, align 4
  %v4_10002434 = call i32 @function_10004430(i32 %v0_10002430, i32 %v0_10002420, i32 %v4_1000242c, i32 %v1_10002428)
  %v5_10002434 = trunc i32 %v4_10002434 to i16
  store i32 %v4_10002434, i32* %r3.global-to-local, align 4
  %v3_10002438 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_10002438, i32* %r7.global-to-local, align 4
  %v0_1000243c = load i32, i32* @r31, align 4
  %v1_1000243c = add i32 %v0_1000243c, 2
  %v2_1000243c = inttoptr i32 %v1_1000243c to i16*
  %v3_1000243c = load i16, i16* %v2_1000243c, align 2
  %v4_1000243c = zext i16 %v3_1000243c to i32
  store i32 %v4_1000243c, i32* %r0.global-to-local, align 4
  %v0_10002440 = load i32, i32* %r28.global-to-local, align 4
  %v1_10002444 = mul i32 %v3_10002438, 24
  store i32 %v1_10002444, i32* %r7.global-to-local, align 4
  %v3_10002448 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10002448, i32* %r5.global-to-local, align 4
  %v4_1000244c = add i32 %v0_1000243c, 6
  %v5_1000244c = inttoptr i32 %v4_1000244c to i16*
  store i16 %v5_10002434, i16* %v5_1000244c, align 2
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_10002454 = load i32, i32* %r7.global-to-local, align 4
  %v1_10002454 = load i32, i32* %r27.global-to-local, align 4
  %v2_10002454 = add i32 %v1_10002454, %v0_10002454
  store i32 %v2_10002454, i32* %r7.global-to-local, align 4
  %v0_10002458 = load i32, i32* %r5.global-to-local, align 4
  %v1_10002458 = add i32 %v0_10002458, 32
  store i32 %v1_10002458, i32* %r5.global-to-local, align 4
  %v0_1000245c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000245c = trunc i32 %v0_1000245c to i16
  %v3_1000245c = add i32 %v2_10002454, 2
  %v4_1000245c = inttoptr i32 %v3_1000245c to i16*
  store i16 %v1_1000245c, i16* %v4_1000245c, align 2
  %v0_10002460 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10002460, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 268444780, i32* @lr, align 4
  %v6_10002468 = call i32 @function_10009088(i32 %v0_10002460, i32 %v0_10002440, i32 %v1_10002458, i32 16384, i32 %v2_10002454, i32 16)
  store i32 %v6_10002468, i32* %r3.global-to-local, align 4
  %v3_1000246c = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_1000246c, i32* %r9.global-to-local, align 4
  %v1_10002470 = add i32 %v3_1000246c, 1
  store i32 %v1_10002470, i32* %r11.global-to-local, align 4
  %v1_10002474 = load i32, i32* %r23.global-to-local, align 4
  %v2_10002474 = icmp slt i32 %v1_10002470, %v1_10002474
  store i32 %v1_10002470, i32* %stack_var_-88, align 4
  br i1 %v2_10002474, label %dec_label_pc_100023c8, label %dec_label_pc_10002480

dec_label_pc_10002480:                            ; preds = %dec_label_pc_10002408
  %v0_10002480 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10002480 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10002480 = or i1 %v0_10002480, %v1_10002480
  br i1 %v2_10002480, label %dec_label_pc_100023b4.outer, label %dec_label_pc_100023b8

dec_label_pc_10002488:                            ; preds = %dec_label_pc_100023c8
  %v1_10002488 = add i32 %v2_100023d4, 16
  %v2_10002488 = inttoptr i32 %v1_10002488 to i32*
  %v3_10002488 = load i32, i32* %v2_10002488, align 4
  store i32 %v3_10002488, i32* %r29.global-to-local, align 4
  %v0_1000248c = call i32 @function_10005928()
  store i32 %v0_1000248c, i32* %r3.global-to-local, align 4
  %v3_10002490 = load i32, i32* %stack_var_-88, align 4
  %v0_10002494 = load i32, i32* %r20.global-to-local, align 4
  %v1_10002494 = load i32, i32* %r30.global-to-local, align 4
  %v4_10002494 = icmp eq i32 %v0_10002494, %v1_10002494
  %v1_10002498 = mul i32 %v3_10002490, 24
  %v1_1000249c = load i32, i32* %r27.global-to-local, align 4
  %v2_1000249c = add i32 %v1_1000249c, %v1_10002498
  store i32 %v2_1000249c, i32* %r9.global-to-local, align 4
  %v1_100024a0 = add i32 %v2_1000249c, 20
  %v2_100024a0 = inttoptr i32 %v1_100024a0 to i8*
  %v3_100024a0 = load i8, i8* %v2_100024a0, align 1
  %v4_100024a0 = zext i8 %v3_100024a0 to i32
  store i32 %v4_100024a0, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_100024a0, 64
  %v2_100024a4 = zext i8 %tmp to i32
  %v3_100024a4 = lshr i32 %v0_1000248c, %v2_100024a4
  store i32 %v3_100024a4, i32* %r3.global-to-local, align 4
  %v0_100024a8 = load i32, i32* %r29.global-to-local, align 4
  %v2_100024a8 = add i32 %v3_100024a4, %v0_100024a8
  store i32 %v2_100024a8, i32* %r29.global-to-local, align 4
  %v1_100024ac = load i32, i32* %r28.global-to-local, align 4
  %v2_100024ac = add i32 %v1_100024ac, 16
  %v3_100024ac = inttoptr i32 %v2_100024ac to i32*
  store i32 %v2_100024a8, i32* %v3_100024ac, align 4
  br i1 %v4_10002494, label %dec_label_pc_100024b4, label %dec_label_pc_10002488.dec_label_pc_100023f8_crit_edge

dec_label_pc_10002488.dec_label_pc_100023f8_crit_edge: ; preds = %dec_label_pc_10002488
  %v1_100023f8.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_100023f8

dec_label_pc_100024b4:                            ; preds = %dec_label_pc_10002488, %dec_label_pc_100023f0
  %v0_100024b4 = call i32 @function_10005928()
  %v1_100024b4 = trunc i32 %v0_100024b4 to i16
  store i32 %v0_100024b4, i32* %r3.global-to-local, align 4
  %v0_100024b8 = load i32, i32* %r21.global-to-local, align 4
  %v1_100024b8 = load i32, i32* %r30.global-to-local, align 4
  %v4_100024b8 = icmp eq i32 %v0_100024b8, %v1_100024b8
  %v3_100024bc = load i32, i32* %r28.global-to-local, align 4
  %v4_100024bc = add i32 %v3_100024bc, 4
  %v5_100024bc = inttoptr i32 %v4_100024bc to i16*
  store i16 %v1_100024b4, i16* %v5_100024bc, align 2
  br i1 %v4_100024b8, label %dec_label_pc_100024c4, label %dec_label_pc_100024b4.dec_label_pc_10002400_crit_edge

dec_label_pc_100024b4.dec_label_pc_10002400_crit_edge: ; preds = %dec_label_pc_100024b4
  %v1_10002400.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10002400

dec_label_pc_100024c4:                            ; preds = %dec_label_pc_100024b4, %dec_label_pc_100023f8
  %v0_100024c4 = call i32 @function_10005928()
  %v1_100024c4 = trunc i32 %v0_100024c4 to i16
  store i32 %v0_100024c4, i32* %r3.global-to-local, align 4
  %v0_100024c8 = load i32, i32* %r22.global-to-local, align 4
  %v1_100024c8 = load i32, i32* %r30.global-to-local, align 4
  %v4_100024c8 = icmp eq i32 %v0_100024c8, %v1_100024c8
  %v3_100024cc = load i32, i32* %r28.global-to-local, align 4
  %v4_100024cc = add i32 %v3_100024cc, 20
  %v5_100024cc = inttoptr i32 %v4_100024cc to i16*
  store i16 %v1_100024c4, i16* %v5_100024cc, align 2
  br i1 %v4_100024c8, label %dec_label_pc_100024d4, label %dec_label_pc_10002408

dec_label_pc_100024d4:                            ; preds = %dec_label_pc_100024c4, %dec_label_pc_10002400
  %v0_100024d4 = call i32 @function_10005928()
  %v1_100024d4 = trunc i32 %v0_100024d4 to i16
  store i32 %v0_100024d4, i32* %r3.global-to-local, align 4
  %v3_100024d8 = load i32, i32* @r31, align 4
  %v4_100024d8 = add i32 %v3_100024d8, 2
  %v5_100024d8 = inttoptr i32 %v4_100024d8 to i16*
  store i16 %v1_100024d4, i16* %v5_100024d8, align 2
  br label %dec_label_pc_10002408

dec_label_pc_100024e0:                            ; preds = %dec_label_pc_100022a4
  %v0_100024e0 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100024e0, i32* %r3.global-to-local, align 4
  store i32 268444904, i32* @lr, align 4
  %v0_100024e4 = call i32 @function_10008418()
  store i32 %v0_100024e4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100024e8

dec_label_pc_100024e8:                            ; preds = %dec_label_pc_10002164, %dec_label_pc_100024e0
  store i32 %v0_10002168, i32* %r0.global-to-local, align 4
  %v1_100024fc = call %0 @__asm_mtcrf(i32 24, i32 %v0_1000216c)
  store i32 %v0_100021a4, i32* %r28.global-to-local, align 4
  store i32 %v0_100021ac, i32* %r29.global-to-local, align 4
  store i32 %v0_100021b4, i32* %r30.global-to-local, align 4
  %v0_10002540 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10002540

; uselistorder directives
  uselistorder i32 %v0_100024d4, { 1, 0 }
  uselistorder i32 %v0_100024c4, { 1, 0 }
  uselistorder i32 %v0_100024b4, { 1, 0 }
  uselistorder i1 %v1_10002480, { 1, 0 }
  uselistorder i1 %v0_10002480, { 1, 0 }
  uselistorder i32 %v1_10002470, { 0, 2, 3, 1 }
  uselistorder i32 %v4_10002434, { 1, 0 }
  uselistorder i32 %v2_10002414, { 1, 0 }
  uselistorder i32 %v1_100023d8, { 1, 0 }
  uselistorder i32 %v1_10002320, { 1, 0 }
  uselistorder i32 %v1_10002314, { 1, 0 }
  uselistorder i32* %stack_var_-84, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 0 }
  uselistorder i32* %r30.global-to-local, { 0, 3, 1, 4, 2, 5, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 19, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 0, 1 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100024e8, { 1, 0 }
  uselistorder label %dec_label_pc_10002408, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100023b8, { 1, 0 }
  uselistorder label %dec_label_pc_100023b4, { 1, 0 }
  uselistorder label %dec_label_pc_100023b4.outer, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10002360, { 1, 0 }
}

define i32 @function_10002544(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10002544:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr3_lt.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-2184 = alloca i32, align 4
  %stack_var_-2180 = alloca i32, align 4
  %stack_var_-2148 = alloca i32, align 4
  %v0_10002548 = load i32, i32* @lr, align 4
  store i32 %v0_10002548, i32* %r0.global-to-local, align 4
  %v0_1000254c = call i32 @__asm_mfcr()
  store i32 %v0_1000254c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r14.global-to-local, align 4
  %v0_1000255c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1000254c, i32* %r15.global-to-local, align 4
  %v0_1000257c = load i32, i32* @r24, align 4
  %v0_10002580 = load i32, i32* @r25, align 4
  %v0_10002584 = load i32, i32* @r26, align 4
  %v0_10002588 = load i32, i32* @r27, align 4
  %v0_1000258c = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_1000259c = load i32, i32* @r31, align 4
  %v0_100025b0 = load i32, i32* @r30, align 4
  store i32 268445112, i32* @lr, align 4
  %v2_100025b4 = call i32 @function_10009460(i32 4, i32 4)
  store i32 %v2_100025b4, i32* %r16.global-to-local, align 4
  %v0_100025bc = load i32, i32* @r28, align 4
  %v0_100025c8 = load i32, i32* @r29, align 4
  store i32 %v0_100025c8, i32* %r3.global-to-local, align 4
  store i32 268445136, i32* @lr, align 4
  %v4_100025cc = inttoptr i32 %v0_100025bc to i32*
  %v5_100025cc = call i32 @function_100006a8(i32 %v0_100025c8, i32* %v4_100025cc, i32 2, i32 0)
  %v5_100025dc = trunc i32 %v5_100025cc to i8
  %v0_100025e4 = load i32, i32* @r28, align 4
  %v0_100025e8 = load i32, i32* @r29, align 4
  store i32 %v0_100025e8, i32* %r3.global-to-local, align 4
  store i32 268445168, i32* @lr, align 4
  %v4_100025ec = inttoptr i32 %v0_100025e4 to i32*
  %v5_100025ec = call i32 @function_100006a8(i32 %v0_100025e8, i32* %v4_100025ec, i32 3, i32 65535)
  %v0_100025f0 = load i32, i32* @r28, align 4
  store i32 %v5_100025ec, i32* %r19.global-to-local, align 4
  %v0_10002600 = load i32, i32* @r29, align 4
  store i32 %v0_10002600, i32* %r3.global-to-local, align 4
  store i32 268445192, i32* @lr, align 4
  %v4_10002604 = inttoptr i32 %v0_100025f0 to i32*
  %v5_10002604 = call i32 @function_100006a8(i32 %v0_10002600, i32* %v4_10002604, i32 4, i32 64)
  %v0_10002608 = load i32, i32* @r28, align 4
  %v5_10002614 = trunc i32 %v5_10002604 to i8
  %v0_1000261c = load i32, i32* @r29, align 4
  store i32 %v0_1000261c, i32* %r3.global-to-local, align 4
  store i32 268445220, i32* @lr, align 4
  %v4_10002620 = inttoptr i32 %v0_10002608 to i32*
  %v5_10002620 = call i32 @function_100006a8(i32 %v0_1000261c, i32* %v4_10002620, i32 5, i32 0)
  %v0_10002630 = load i32, i32* @r28, align 4
  %v1_10002634 = urem i32 %v5_10002620, 256
  store i32 %v1_10002634, i32* %r27.global-to-local, align 4
  %v0_10002638 = load i32, i32* @r29, align 4
  store i32 %v0_10002638, i32* %r3.global-to-local, align 4
  store i32 268445248, i32* @lr, align 4
  %v4_1000263c = inttoptr i32 %v0_10002630 to i32*
  %v5_1000263c = call i32 @function_100006a8(i32 %v0_10002638, i32* %v4_1000263c, i32 6, i32 65535)
  %v0_10002640 = load i32, i32* @r28, align 4
  store i32 %v5_1000263c, i32* %r20.global-to-local, align 4
  %v0_10002650 = load i32, i32* @r29, align 4
  store i32 %v0_10002650, i32* %r3.global-to-local, align 4
  store i32 268445272, i32* @lr, align 4
  %v4_10002654 = inttoptr i32 %v0_10002640 to i32*
  %v5_10002654 = call i32 @function_100006a8(i32 %v0_10002650, i32* %v4_10002654, i32 7, i32 53)
  %v0_1000265c = load i32, i32* @r28, align 4
  store i32 %v5_10002654, i32* %r23.global-to-local, align 4
  %v0_1000266c = load i32, i32* @r29, align 4
  store i32 %v0_1000266c, i32* %r3.global-to-local, align 4
  store i32 268445300, i32* @lr, align 4
  %v4_10002670 = inttoptr i32 %v0_1000265c to i32*
  %v5_10002670 = call i32 @function_100006a8(i32 %v0_1000266c, i32* %v4_10002670, i32 9, i32 65535)
  %v0_10002674 = load i32, i32* @r28, align 4
  store i32 %v5_10002670, i32* %r24.global-to-local, align 4
  %v0_10002684 = load i32, i32* @r29, align 4
  store i32 %v0_10002684, i32* %r3.global-to-local, align 4
  store i32 268445324, i32* @lr, align 4
  %v4_10002688 = inttoptr i32 %v0_10002674 to i32*
  %v5_10002688 = call i32 @function_100006a8(i32 %v0_10002684, i32* %v4_10002688, i32 0, i32 12)
  %v0_10002694 = load i32, i32* @r28, align 4
  store i32 %v5_10002688, i32* %r26.global-to-local, align 4
  %v0_1000269c = load i32, i32* @r29, align 4
  store i32 %v0_1000269c, i32* %r3.global-to-local, align 4
  store i32 268445348, i32* @lr, align 4
  %v4_100026a0 = inttoptr i32 %v0_10002694 to i32*
  %v5_100026a0 = call i32 @function_10000238(i32 %v0_1000269c, i32* %v4_100026a0, i32 8, i32 0)
  store i32 %v5_100026a0, i32* %r25.global-to-local, align 4
  store i32 21, i32* %r3.global-to-local, align 4
  store i32 268445360, i32* @lr, align 4
  %v1_100026ac = call i32 @function_100076e0(i32 21)
  store i32 21, i32* %r3.global-to-local, align 4
  %v3_100026b8 = call i32 @function_1000762c(i32 21, i32* null)
  store i32 %v3_100026b8, i32* %r3.global-to-local, align 4
  store i32 268445384, i32* @lr, align 4
  %v2_100026c4 = call i32 @function_10008580(i32 %v3_100026b8, i32 0)
  store i32 %v2_100026c4, i32* @r31, align 4
  store i32 21, i32* %r3.global-to-local, align 4
  store i32 268445396, i32* @lr, align 4
  %v1_100026d0 = call i32 @function_10007654(i32 21)
  store i32 %v1_100026d0, i32* %r3.global-to-local, align 4
  %v0_100026d4 = load i32, i32* @r31, align 4
  %v1_100026d4 = icmp slt i32 %v0_100026d4, 0
  %v3_100026d4 = icmp eq i32 %v0_100026d4, 0
  store i1 %v3_100026d4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_100026d4, label %dec_label_pc_100027a4, label %dec_label_pc_100026dc

dec_label_pc_100026dc:                            ; preds = %dec_label_pc_10002544
  %v2_100026dc = ptrtoint i32* %stack_var_-2148 to i32
  store i32 %v2_100026dc, i32* %r28.global-to-local, align 4
  store i32 %v0_100026d4, i32* %r3.global-to-local, align 4
  store i32 268445424, i32* @lr, align 4
  %v3_100026ec = call i32 @function_10008650(i32 %v0_100026d4, i32 %v2_100026dc, i32 2048)
  store i32 %v3_100026ec, i32* %r30.global-to-local, align 4
  %v0_100026f4 = load i32, i32* @r31, align 4
  store i32 %v0_100026f4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100026fc.20 to i32), i32* @lr, align 4
  %v0_100026f8 = call i32 @function_10008418()
  store i32 22, i32* %r3.global-to-local, align 4
  store i32 268445444, i32* @lr, align 4
  %v1_10002700 = call i32 @function_100076e0(i32 22)
  store i32 22, i32* %r3.global-to-local, align 4
  %v3_1000270c = call i32 @function_1000762c(i32 22, i32* null)
  %v0_10002710 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v2_100026dc, i32* %r3.global-to-local, align 4
  %v3_1000271c = bitcast i32* %stack_var_-2148 to i8*
  %v4_1000271c = call i32 @function_10008008(i8* %v3_1000271c, i32 %v0_10002710, i32 %v3_1000270c)
  store i32 %v4_1000271c, i32* @r31, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  store i32 268445484, i32* @lr, align 4
  %v1_10002728 = call i32 @function_10007654(i32 22)
  store i32 %v1_10002728, i32* %r3.global-to-local, align 4
  %v0_1000272c = load i32, i32* @r31, align 4
  %v3_1000272c = icmp eq i32 %v0_1000272c, -1
  store i1 %v3_1000272c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000272c, label %dec_label_pc_100027a4, label %dec_label_pc_10002734

dec_label_pc_10002734:                            ; preds = %dec_label_pc_100026dc
  %v0_10002734 = load i32, i32* %r30.global-to-local, align 4
  %v3_10002734 = icmp sgt i32 %v0_10002734, %v0_1000272c
  %v4_10002734 = icmp eq i32 %v0_10002734, %v0_1000272c
  store i1 %v4_10002734, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10002734, label %dec_label_pc_1000273c, label %dec_label_pc_100027a4

dec_label_pc_1000273c:                            ; preds = %dec_label_pc_10002734
  %v2_1000273c = sub i32 %v0_10002734, %v0_1000272c
  store i32 %v2_1000273c, i32* %r0.global-to-local, align 4
  %v1_10002740 = add i32 %v0_10002734, -1
  store i32 %v1_10002740, i32* %r3.global-to-local, align 4
  store i32 %v2_1000273c, i32* %ctr.global-to-local, align 4
  %v0_1000274c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000274c = add i32 %v0_1000274c, %v0_1000272c
  store i32 %v2_1000274c, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v2_10002754 = ptrtoint i32* %stack_var_-2180 to i32
  store i32 %v2_10002754, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10002758

dec_label_pc_10002758:                            ; preds = %dec_label_pc_1000279c, %dec_label_pc_1000273c
  %v0_100027a0 = phi i32 [ %v1_100027a0, %dec_label_pc_1000279c ], [ %v2_1000273c, %dec_label_pc_1000273c ]
  %v0_1000279c = phi i32 [ %v1_1000279c, %dec_label_pc_1000279c ], [ %v0_1000272c, %dec_label_pc_1000273c ]
  %v0_10002764 = phi i32 [ %v1_10002764, %dec_label_pc_1000279c ], [ %v2_1000274c, %dec_label_pc_1000273c ]
  %v0_10002758 = phi i32 [ %v0_100027584, %dec_label_pc_1000279c ], [ 0, %dec_label_pc_1000273c ]
  %v3_10002758 = icmp eq i32 %v0_10002758, 0
  store i1 %v3_10002758, i1* %cr7_eq.global-to-local, align 1
  %v1_1000275c = inttoptr i32 %v0_10002764 to i8*
  %v2_1000275c = load i8, i8* %v1_1000275c, align 1
  %v3_1000275c = zext i8 %v2_1000275c to i32
  store i32 %v3_1000275c, i32* %r9.global-to-local, align 4
  %v4_10002760 = icmp eq i32 %v1_10002740, %v0_1000279c
  %v1_10002764 = add i32 %v0_10002764, 1
  store i32 %v1_10002764, i32* %r11.global-to-local, align 4
  br i1 %v3_10002758, label %dec_label_pc_10002774, label %dec_label_pc_10002784

dec_label_pc_10002774:                            ; preds = %dec_label_pc_10002758
  %v3_10002774 = icmp eq i8 %v2_1000275c, 9
  store i1 %v3_10002774, i1* %cr7_eq.global-to-local, align 1
  switch i8 %v2_1000275c, label %dec_label_pc_10002780 [
    i8 32, label %dec_label_pc_1000279c
    i8 9, label %dec_label_pc_1000279c
  ]

dec_label_pc_10002780:                            ; preds = %dec_label_pc_10002774
  store i32 1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10002784

dec_label_pc_10002784:                            ; preds = %dec_label_pc_10002758, %dec_label_pc_10002780
  %v0_100027585 = phi i32 [ %v0_10002758, %dec_label_pc_10002758 ], [ 1, %dec_label_pc_10002780 ]
  %v1_10002784 = add nuw nsw i32 %v3_1000275c, 208
  %v1_10002788 = urem i32 %v1_10002784, 256
  store i32 %v1_10002788, i32* %r0.global-to-local, align 4
  %v2_1000278c = icmp ugt i32 %v1_10002788, 9
  %v3_1000278c = icmp eq i32 %v1_10002788, 9
  store i1 %v3_1000278c, i1* %cr7_eq.global-to-local, align 1
  %v3_10002768.not = icmp ne i8 %v2_1000275c, 46
  %brmerge.not = and i1 %v3_10002768.not, %v2_1000278c
  %brmerge26 = or i1 %v4_10002760, %brmerge.not
  br i1 %brmerge26, label %dec_label_pc_100027d8, label %dec_label_pc_1000279c

dec_label_pc_1000279c:                            ; preds = %dec_label_pc_10002784, %dec_label_pc_10002774, %dec_label_pc_10002774
  %v0_100027584 = phi i32 [ 0, %dec_label_pc_10002774 ], [ 0, %dec_label_pc_10002774 ], [ %v0_100027585, %dec_label_pc_10002784 ]
  %v1_1000279c = add i32 %v0_1000279c, 1
  %v1_100027a0 = add i32 %v0_100027a0, -1
  store i32 %v1_100027a0, i32* %ctr.global-to-local, align 4
  %v2_100027a0 = icmp eq i32 %v1_100027a0, 0
  br i1 %v2_100027a0, label %dec_label_pc_100027a4, label %dec_label_pc_10002758

dec_label_pc_100027a4:                            ; preds = %dec_label_pc_1000279c, %dec_label_pc_10002734, %dec_label_pc_100026dc, %dec_label_pc_10002544
  %v0_100027a4 = call i32 @function_10005928()
  %v1_100027a8 = urem i32 %v0_100027a4, 4
  store i32 %v1_100027a8, i32* %r3.global-to-local, align 4
  %v3_100027ac = icmp eq i32 %v1_100027a8, 1
  store i1 %v3_100027ac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100027ac, label %dec_label_pc_10002b90, label %dec_label_pc_100027b4

dec_label_pc_100027b4:                            ; preds = %dec_label_pc_100027a4
  %v1_100027ac = icmp eq i32 %v1_100027a8, 0
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_100027ac, label %dec_label_pc_10002ba8, label %dec_label_pc_100027bc

dec_label_pc_100027bc:                            ; preds = %dec_label_pc_100027b4
  %v2_100027bc = icmp eq i32 %v1_100027a8, 3
  %v3_100027bc = icmp eq i32 %v1_100027a8, 2
  store i1 %v3_100027bc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100027bc, label %dec_label_pc_10002b9c, label %dec_label_pc_100027c4

dec_label_pc_100027c4:                            ; preds = %dec_label_pc_100027bc
  store i1 %v2_100027bc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100027bc, label %dec_label_pc_100027cc, label %dec_label_pc_10002808

dec_label_pc_100027cc:                            ; preds = %dec_label_pc_100027c4
  store i32 67240450, i32* @r21, align 4
  br label %dec_label_pc_10002808

dec_label_pc_100027d8:                            ; preds = %dec_label_pc_10002784
  %v2_100027d8 = sub i32 %v0_1000279c, %v0_1000272c
  store i32 %v2_10002754, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100027ec.21 to i32), i32* @lr, align 4
  %v3_100027e8 = call i32 @function_10007cdc(i32 %v2_10002754, i32 %v2_1000274c, i32 %v2_100027d8)
  %v2_100027ec = ptrtoint i32* %stack_var_-2184 to i32
  %v2_100027f0 = add i32 %v2_100027d8, %v2_100027ec
  store i32 %v2_100027f0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_100027f8 = add i32 %v2_100027f0, 4
  %v4_100027f8 = inttoptr i32 %v3_100027f8 to i8*
  store i8 0, i8* %v4_100027f8, align 1
  store i32 %v2_10002754, i32* %r3.global-to-local, align 4
  store i32 268445700, i32* @lr, align 4
  %v1_10002800 = call i32 @function_10008ecc(i32 %v2_10002754)
  store i32 %v1_10002800, i32* %r3.global-to-local, align 4
  store i32 %v1_10002800, i32* @r21, align 4
  br label %dec_label_pc_10002808

dec_label_pc_10002808:                            ; preds = %dec_label_pc_100027c4, %dec_label_pc_10002ba8, %dec_label_pc_10002b9c, %dec_label_pc_10002b90, %dec_label_pc_100027cc, %dec_label_pc_100027d8
  %v0_10002808 = load i32, i32* %r25.global-to-local, align 4
  %v3_10002808 = icmp eq i32 %v0_10002808, 0
  store i1 %v3_10002808, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10002808, label %dec_label_pc_10002b30, label %dec_label_pc_10002810

dec_label_pc_10002810:                            ; preds = %dec_label_pc_10002808
  store i32 %v0_10002808, i32* %r3.global-to-local, align 4
  store i32 268445720, i32* @lr, align 4
  %v1_10002814 = inttoptr i32 %v0_10002808 to i8*
  %v2_10002814 = call i32 @function_10007c58(i8* %v1_10002814)
  store i32 %v2_10002814, i32* @r29, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268445740, i32* @lr, align 4
  %v3_10002828 = call i32 @function_10009104(i32 2, i32 3, i32 17)
  store i32 %v3_10002828, i32* %r3.global-to-local, align 4
  %v3_1000282c = icmp eq i32 %v3_10002828, -1
  store i1 %v3_1000282c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10002828, i32* %r22.global-to-local, align 4
  br i1 %v3_1000282c, label %dec_label_pc_10002b30, label %dec_label_pc_10002838

dec_label_pc_10002838:                            ; preds = %dec_label_pc_10002810
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10002844 = ptrtoint i32* %stack_var_-2184 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-2184, align 4
  store i32 268445780, i32* @lr, align 4
  %v4_10002850 = call i32 @function_100090c8(i32 0, i32 3, i32 %v2_10002844, i32 4)
  store i32 %v4_10002850, i32* %r3.global-to-local, align 4
  %v3_10002854 = icmp eq i32 %v4_10002850, -1
  store i1 %v3_10002854, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10002854, label %dec_label_pc_10002b28, label %dec_label_pc_1000285c

dec_label_pc_1000285c:                            ; preds = %dec_label_pc_10002838
  %v0_1000285c = load i32, i32* %r15.global-to-local, align 4
  %v1_1000285c = icmp slt i32 %v0_1000285c, 0
  %v3_1000285c = icmp eq i32 %v0_1000285c, 0
  store i1 %v1_1000285c, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_1000285c, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10002864 = load i32, i32* %r19.global-to-local, align 4
  %v1_10002864 = urem i32 %v0_10002864, 65536
  store i32 %v1_10002864, i32* %r17.global-to-local, align 4
  %v0_10002868 = load i32, i32* %r20.global-to-local, align 4
  %v1_10002868 = urem i32 %v0_10002868, 65536
  store i32 %v1_10002868, i32* %r18.global-to-local, align 4
  %v0_1000286c = load i32, i32* %r23.global-to-local, align 4
  %v1_1000286c = urem i32 %v0_1000286c, 65536
  store i32 %v1_1000286c, i32* %r19.global-to-local, align 4
  store i32 0, i32* %stack_var_-2184, align 4
  %v0_10002874 = load i32, i32* %r24.global-to-local, align 4
  %v1_10002874 = urem i32 %v0_10002874, 65536
  store i32 %v1_10002874, i32* %r20.global-to-local, align 4
  %v0_10002878 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002878 = urem i32 %v0_10002878, 256
  store i32 %v1_10002878, i32* %r23.global-to-local, align 4
  %tmp53 = icmp slt i32 %v0_1000285c, 1
  %v1_10002b1c = load i32, i32* @r29, align 4
  %v2_10002b1c = add i32 %v1_10002b1c, %v1_10002878
  store i32 %v2_10002b1c, i32* @r24, align 4
  br i1 %tmp53, label %dec_label_pc_100029e0.preheader, label %dec_label_pc_10002880

dec_label_pc_10002880:                            ; preds = %dec_label_pc_1000285c
  %v1_10002884 = icmp slt i32 %v1_10002b1c, 0
  %v3_10002884 = icmp eq i32 %v1_10002b1c, 0
  store i1 %v1_10002884, i1* %cr3_lt.global-to-local, align 1
  store i1 %v3_10002884, i1* %cr3_eq.global-to-local, align 1
  %v1_10002888 = urem i32 %v2_10002b1c, 65536
  %v0_1000288c = load i32, i32* %r27.global-to-local, align 4
  %v3_1000288c = icmp eq i32 %v0_1000288c, 0
  store i1 %v3_1000288c, i1* %cr2_eq.global-to-local, align 1
  %v1_10002890 = add nuw nsw i32 %v1_10002888, 27
  store i32 %v1_10002890, i32* %r0.global-to-local, align 4
  %v1_10002894 = add nuw nsw i32 %v1_10002888, 47
  store i32 %v1_10002894, i32* %r9.global-to-local, align 4
  %fold = add i32 %v2_10002b1c, 47
  %v1_10002898 = urem i32 %fold, 65536
  store i32 %v1_10002898, i32* %r26.global-to-local, align 4
  %fold3 = add i32 %v2_10002b1c, 27
  %v1_1000289c = urem i32 %fold3, 65536
  store i32 %v1_1000289c, i32* %r27.global-to-local, align 4
  %v1_100028a0 = add i32 %v1_10002b1c, 1
  store i32 %v1_100028a0, i32* @r28, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v4_100028f0 = sext i8 %v5_100025dc to i32
  %v4_100028f8 = sext i8 %v5_10002614 to i32
  br label %dec_label_pc_100028a8

dec_label_pc_100028a8:                            ; preds = %dec_label_pc_100029b8, %dec_label_pc_10002880
  store i32 600, i32* %r3.global-to-local, align 4
  store i32 268445876, i32* @lr, align 4
  %v2_100028b0 = call i32 @function_10009460(i32 600, i32 1)
  store i32 %v2_100028b0, i32* %r3.global-to-local, align 4
  %v3_100028b4 = load i32, i32* %stack_var_-2184, align 4
  store i32 %v3_100028b4, i32* %r0.global-to-local, align 4
  %v0_100028b8 = load i32, i32* @r31, align 4
  %v1_100028b8 = mul i32 %v0_100028b8, 4
  store i32 %v1_100028b8, i32* %r9.global-to-local, align 4
  %v2_100028bc = load i32, i32* %r16.global-to-local, align 4
  %v3_100028bc = add i32 %v2_100028bc, %v1_100028b8
  %v4_100028bc = inttoptr i32 %v3_100028bc to i32*
  store i32 %v2_100028b0, i32* %v4_100028bc, align 4
  %v0_100028c0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100028c0 = mul i32 %v0_100028c0, 4
  store i32 %v1_100028c0, i32* %r0.global-to-local, align 4
  %v0_100028c4 = load i32, i32* %r16.global-to-local, align 4
  %v2_100028c4 = add i32 %v0_100028c4, %v1_100028c0
  %v3_100028c4 = inttoptr i32 %v2_100028c4 to i32*
  %v4_100028c4 = load i32, i32* %v3_100028c4, align 4
  store i32 %v4_100028c4, i32* %r11.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_100028cc = inttoptr i32 %v4_100028c4 to i32*
  %v2_100028cc = load i32, i32* %v1_100028cc, align 4
  store i32 %v2_100028cc, i32* %r9.global-to-local, align 4
  %v1_100028d0 = add i32 %v4_100028c4, 20
  store i32 %v1_100028d0, i32* %r10.global-to-local, align 4
  %v0_100028d4 = load i32, i32* %r17.global-to-local, align 4
  %v1_100028d4 = trunc i32 %v0_100028d4 to i16
  %v3_100028d4 = add i32 %v4_100028c4, 4
  %v4_100028d4 = inttoptr i32 %v3_100028d4 to i16*
  store i16 %v1_100028d4, i16* %v4_100028d4, align 2
  %v0_100028d8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100028d8 = add i32 %v0_100028d8, 28
  store i32 %v1_100028d8, i32* %r8.global-to-local, align 4
  %v1_100028dc = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100028dc, i32* %r9.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_100028e4 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_100028e4, i32* %r9.global-to-local, align 4
  %v1_100028e8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100028e8 = inttoptr i32 %v1_100028e8 to i32*
  store i32 %v1_100028e4, i32* %v2_100028e8, align 4
  %v0_100028ec = load i32, i32* %r26.global-to-local, align 4
  %v1_100028ec = trunc i32 %v0_100028ec to i16
  %v2_100028ec = load i32, i32* %r11.global-to-local, align 4
  %v3_100028ec = add i32 %v2_100028ec, 2
  %v4_100028ec = inttoptr i32 %v3_100028ec to i16*
  store i16 %v1_100028ec, i16* %v4_100028ec, align 2
  store i32 %v4_100028f0, i32* %r0.global-to-local, align 4
  %v2_100028f4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100028f4 = add i32 %v2_100028f4, 1
  %v4_100028f4 = inttoptr i32 %v3_100028f4 to i8*
  store i8 %v5_100025dc, i8* %v4_100028f4, align 1
  store i32 %v4_100028f8, i32* %r7.global-to-local, align 4
  %v2_100028fc = load i32, i32* %r11.global-to-local, align 4
  %v3_100028fc = add i32 %v2_100028fc, 8
  %v4_100028fc = inttoptr i32 %v3_100028fc to i8*
  store i8 %v5_10002614, i8* %v4_100028fc, align 1
  %v0_10002900 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002900, label %dec_label_pc_1000290c, label %dec_label_pc_10002904

dec_label_pc_10002904:                            ; preds = %dec_label_pc_100028a8
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10002908 = load i32, i32* %r11.global-to-local, align 4
  %v3_10002908 = add i32 %v2_10002908, 6
  %v4_10002908 = inttoptr i32 %v3_10002908 to i16*
  store i16 16384, i16* %v4_10002908, align 2
  br label %dec_label_pc_1000290c

dec_label_pc_1000290c:                            ; preds = %dec_label_pc_100028a8, %dec_label_pc_10002904
  store i32 268566528, i32* %r7.global-to-local, align 4
  %v2_10002914 = load i32, i32* %r11.global-to-local, align 4
  %v3_10002914 = add i32 %v2_10002914, 9
  %v4_10002914 = inttoptr i32 %v3_10002914 to i8*
  store i8 17, i8* %v4_10002914, align 1
  %v0_10002918 = load i32, i32* %r11.global-to-local, align 4
  %v1_10002918 = add i32 %v0_10002918, 41
  store i32 %v1_10002918, i32* %r9.global-to-local, align 4
  %v0_1000291c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000291c = trunc i32 %v0_1000291c to i16
  %v2_1000291c = load i32, i32* %r10.global-to-local, align 4
  %v3_1000291c = add i32 %v2_1000291c, 4
  %v4_1000291c = inttoptr i32 %v3_1000291c to i16*
  store i16 %v1_1000291c, i16* %v4_1000291c, align 2
  %v0_10002920 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002920 = load i32, i32* %r23.global-to-local, align 4
  %v2_10002920 = add i32 %v1_10002920, %v0_10002920
  store i32 %v2_10002920, i32* %r30.global-to-local, align 4
  %v3_10002924 = load i32, i32* @global_var_1001b500.16, align 4
  store i32 %v3_10002924, i32* %r0.global-to-local, align 4
  %v1_10002928 = add i32 %v2_10002920, 1
  store i32 %v1_10002928, i32* %r31.global-to-local, align 4
  %v0_1000292c = load i32, i32* %r19.global-to-local, align 4
  %v1_1000292c = trunc i32 %v0_1000292c to i16
  %v2_1000292c = load i32, i32* %r10.global-to-local, align 4
  %v3_1000292c = add i32 %v2_1000292c, 2
  %v4_1000292c = inttoptr i32 %v3_1000292c to i16*
  store i16 %v1_1000292c, i16* %v4_1000292c, align 2
  %v0_10002930 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10002930, i32* %r3.global-to-local, align 4
  %v0_10002934 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002934 = load i32, i32* %r11.global-to-local, align 4
  %v2_10002934 = add i32 %v1_10002934, 12
  %v3_10002934 = inttoptr i32 %v2_10002934 to i32*
  store i32 %v0_10002934, i32* %v3_10002934, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  %v0_1000293c = load i32, i32* %r18.global-to-local, align 4
  %v1_1000293c = trunc i32 %v0_1000293c to i16
  %v2_1000293c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000293c = add i32 %v2_1000293c, 20
  %v4_1000293c = inttoptr i32 %v3_1000293c to i16*
  store i16 %v1_1000293c, i16* %v4_1000293c, align 2
  %v0_10002940 = load i32, i32* %r25.global-to-local, align 4
  %v0_10002944 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002944 = trunc i32 %v0_10002944 to i16
  %v2_10002944 = load i32, i32* %r8.global-to-local, align 4
  %v3_10002944 = add i32 %v2_10002944, 2
  %v4_10002944 = inttoptr i32 %v3_10002944 to i16*
  store i16 %v1_10002944, i16* %v4_10002944, align 2
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_1000294c = load i32, i32* %r8.global-to-local, align 4
  %v3_1000294c = add i32 %v2_1000294c, 4
  %v4_1000294c = inttoptr i32 %v3_1000294c to i16*
  store i16 1, i16* %v4_1000294c, align 2
  %v0_10002950 = load i32, i32* @r28, align 4
  %v0_10002954 = load i32, i32* @r21, align 4
  %v1_10002954 = load i32, i32* %r11.global-to-local, align 4
  %v2_10002954 = add i32 %v1_10002954, 16
  %v3_10002954 = inttoptr i32 %v2_10002954 to i32*
  store i32 %v0_10002954, i32* %v3_10002954, align 4
  %v0_10002958 = load i32, i32* %r20.global-to-local, align 4
  %v1_10002958 = trunc i32 %v0_10002958 to i16
  %v2_10002958 = load i32, i32* %r11.global-to-local, align 4
  %v3_10002958 = add i32 %v2_10002958, 28
  %v4_10002958 = inttoptr i32 %v3_10002958 to i16*
  store i16 %v1_10002958, i16* %v4_10002958, align 2
  %v0_1000295c = load i32, i32* %r23.global-to-local, align 4
  %v1_1000295c = trunc i32 %v0_1000295c to i8
  %v2_1000295c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000295c = add i32 %v2_1000295c, 40
  %v4_1000295c = inttoptr i32 %v3_1000295c to i8*
  store i8 %v1_1000295c, i8* %v4_1000295c, align 1
  store i32 268446052, i32* @lr, align 4
  %v3_10002960 = call i32 @function_10007cdc(i32 %v0_10002930, i32 %v0_10002940, i32 %v0_10002950)
  store i32 %v3_10002960, i32* %r3.global-to-local, align 4
  %v0_10002964 = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_10002964 = load i1, i1* %cr3_lt.global-to-local, align 1
  %v2_10002964 = or i1 %v0_10002964, %v1_10002964
  br i1 %v2_10002964, label %dec_label_pc_100029b0, label %dec_label_pc_10002968

dec_label_pc_10002968:                            ; preds = %dec_label_pc_1000290c
  %v0_10002968 = load i32, i32* @r29, align 4
  store i32 %v0_10002968, i32* %ctr.global-to-local, align 4
  %v0_1000296c = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_1000296c, i32* %r3.global-to-local, align 4
  %v0_10002970 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_10002970, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10002990

dec_label_pc_10002980:                            ; preds = %dec_label_pc_10002990
  %v1_10002980 = urem i32 %v1_10002994, 256
  br label %dec_label_pc_10002984

dec_label_pc_10002984:                            ; preds = %dec_label_pc_100029a0, %dec_label_pc_10002980
  %v0_1000298c = phi i32 [ %v0_1000298c.pre, %dec_label_pc_100029a0 ], [ %v0_1000298c18, %dec_label_pc_10002980 ]
  %v0_10002988 = phi i32 [ %v0_100029a4, %dec_label_pc_100029a0 ], [ %v0_1000298816, %dec_label_pc_10002980 ]
  %v2_100029a013 = phi i32 [ %v0_100029a4, %dec_label_pc_100029a0 ], [ %v2_100029a0, %dec_label_pc_10002980 ]
  %v0_10002984 = phi i32 [ %v0_10002984.pre, %dec_label_pc_100029a0 ], [ %v0_10002990, %dec_label_pc_10002980 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_100029a0 ], [ %v1_10002980, %dec_label_pc_10002980 ]
  store i32 %storemerge, i32* %r8.global-to-local, align 4
  %v1_10002984 = add i32 %v0_10002984, 1
  store i32 %v1_10002984, i32* %r10.global-to-local, align 4
  %v1_10002988 = add i32 %v0_10002988, 1
  store i32 %v1_10002988, i32* %r3.global-to-local, align 4
  %v1_1000298c = add i32 %v0_1000298c, -1
  store i32 %v1_1000298c, i32* %ctr.global-to-local, align 4
  %v2_1000298c = icmp eq i32 %v1_1000298c, 0
  br i1 %v2_1000298c, label %dec_label_pc_100029b8.loopexit, label %dec_label_pc_10002990

dec_label_pc_10002990:                            ; preds = %dec_label_pc_10002984, %dec_label_pc_10002968
  %v0_1000298c18 = phi i32 [ %v1_1000298c, %dec_label_pc_10002984 ], [ %v0_10002968, %dec_label_pc_10002968 ]
  %v0_1000298816 = phi i32 [ %v1_10002988, %dec_label_pc_10002984 ], [ %v0_1000296c, %dec_label_pc_10002968 ]
  %v2_100029a0 = phi i32 [ %v2_100029a013, %dec_label_pc_10002984 ], [ %v0_10002970, %dec_label_pc_10002968 ]
  %v0_100029a0 = phi i32 [ %storemerge, %dec_label_pc_10002984 ], [ 0, %dec_label_pc_10002968 ]
  %v0_10002990 = phi i32 [ %v1_10002984, %dec_label_pc_10002984 ], [ 0, %dec_label_pc_10002968 ]
  %v1_10002990 = load i32, i32* %r25.global-to-local, align 4
  %v2_10002990 = add i32 %v1_10002990, %v0_10002990
  %v3_10002990 = inttoptr i32 %v2_10002990 to i8*
  %v4_10002990 = load i8, i8* %v3_10002990, align 1
  %v5_10002990 = zext i8 %v4_10002990 to i32
  store i32 %v5_10002990, i32* %r0.global-to-local, align 4
  %v1_10002994 = add nsw i32 %v0_100029a0, 1
  store i32 %v1_10002994, i32* %r11.global-to-local, align 4
  %v3_10002998 = icmp eq i8 %v4_10002990, 46
  store i1 %v3_10002998, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10002998, label %dec_label_pc_100029a0, label %dec_label_pc_10002980

dec_label_pc_100029a0:                            ; preds = %dec_label_pc_10002990
  %v1_100029a0 = trunc i32 %v0_100029a0 to i8
  %v3_100029a0 = inttoptr i32 %v2_100029a0 to i8*
  store i8 %v1_100029a0, i8* %v3_100029a0, align 1
  %v0_100029a4 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_100029a4, i32* %r9.global-to-local, align 4
  %v0_10002984.pre = load i32, i32* %r10.global-to-local, align 4
  %v0_1000298c.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10002984

dec_label_pc_100029b0:                            ; preds = %dec_label_pc_1000290c
  %v0_100029b0 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_100029b0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100029b8

dec_label_pc_100029b8.loopexit:                   ; preds = %dec_label_pc_10002984
  %extract.t = trunc i32 %storemerge to i8
  br label %dec_label_pc_100029b8

dec_label_pc_100029b8:                            ; preds = %dec_label_pc_100029b8.loopexit, %dec_label_pc_100029b0
  %v2_100029b8 = phi i32 [ %v2_100029a013, %dec_label_pc_100029b8.loopexit ], [ %v0_100029b0, %dec_label_pc_100029b0 ]
  %v0_100029b8.off0 = phi i8 [ %extract.t, %dec_label_pc_100029b8.loopexit ], [ 0, %dec_label_pc_100029b0 ]
  %v3_100029b8 = inttoptr i32 %v2_100029b8 to i8*
  store i8 %v0_100029b8.off0, i8* %v3_100029b8, align 1
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_100029c0 = load i32, i32* %r30.global-to-local, align 4
  %v1_100029c0 = load i32, i32* @r29, align 4
  %v2_100029c0 = add i32 %v1_100029c0, %v0_100029c0
  store i32 %v2_100029c0, i32* %r9.global-to-local, align 4
  %v3_100029c4 = load i32, i32* %stack_var_-2184, align 4
  store i32 %v3_100029c4, i32* %r11.global-to-local, align 4
  %v3_100029c8 = add i32 %v2_100029c0, 4
  %v4_100029c8 = inttoptr i32 %v3_100029c8 to i16*
  store i16 1, i16* %v4_100029c8, align 2
  %v0_100029cc = load i32, i32* %r11.global-to-local, align 4
  %v1_100029cc = add i32 %v0_100029cc, 1
  store i32 %v1_100029cc, i32* %r31.global-to-local, align 4
  %v0_100029d0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100029d0 = trunc i32 %v0_100029d0 to i16
  %v2_100029d0 = load i32, i32* %r9.global-to-local, align 4
  %v3_100029d0 = add i32 %v2_100029d0, 2
  %v4_100029d0 = inttoptr i32 %v3_100029d0 to i16*
  store i16 %v1_100029d0, i16* %v4_100029d0, align 2
  %v0_100029d4 = load i32, i32* %r31.global-to-local, align 4
  %v1_100029d4 = load i32, i32* %r15.global-to-local, align 4
  %v2_100029d4 = icmp slt i32 %v0_100029d4, %v1_100029d4
  %v4_100029d4 = icmp eq i32 %v0_100029d4, %v1_100029d4
  store i1 %v4_100029d4, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_100029d4, i32* %stack_var_-2184, align 4
  br i1 %v2_100029d4, label %dec_label_pc_100028a8, label %dec_label_pc_100029e0.preheader.loopexit

dec_label_pc_100029e0.preheader.loopexit:         ; preds = %dec_label_pc_100029b8
  %v0_100029e0.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100029e0.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_100029e0.preheader

dec_label_pc_100029e0.preheader:                  ; preds = %dec_label_pc_10002ad8, %dec_label_pc_1000285c, %dec_label_pc_100029e0.preheader.loopexit
  %v1_100029e0 = phi i1 [ %v1_1000285c, %dec_label_pc_1000285c ], [ %v1_100029e0.pre, %dec_label_pc_100029e0.preheader.loopexit ], [ %v1_10002ad8, %dec_label_pc_10002ad8 ]
  %v0_100029e0 = phi i1 [ %v3_1000285c, %dec_label_pc_1000285c ], [ %v0_100029e0.pre, %dec_label_pc_100029e0.preheader.loopexit ], [ %v0_10002ad8, %dec_label_pc_10002ad8 ]
  %v2_100029e0 = or i1 %v1_100029e0, %v0_100029e0
  br label %dec_label_pc_100029e0

dec_label_pc_100029e0:                            ; preds = %dec_label_pc_100029e0.preheader, %dec_label_pc_100029e0
  br i1 %v2_100029e0, label %dec_label_pc_100029e0, label %dec_label_pc_100029e4

dec_label_pc_100029e4:                            ; preds = %dec_label_pc_100029e0, %dec_label_pc_10002ad8
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 65535, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-2184, align 4
  %v0_100029f4 = load i32, i32* %r19.global-to-local, align 4
  %v4_100029f4 = icmp eq i32 %v0_100029f4, 65535
  store i1 %v4_100029f4, i1* %cr7_eq.global-to-local, align 1
  %v0_100029f8 = load i32, i32* %r18.global-to-local, align 4
  %v2_100029f8 = icmp slt i32 %v0_100029f8, 65535
  %v4_100029f8 = icmp eq i32 %v0_100029f8, 65535
  store i1 %v2_100029f8, i1* %cr3_lt.global-to-local, align 1
  store i1 %v4_100029f8, i1* %cr3_eq.global-to-local, align 1
  %v0_100029fc = load i32, i32* %r20.global-to-local, align 4
  %v4_100029fc = icmp eq i32 %v0_100029fc, 65535
  store i1 %v4_100029fc, i1* %cr2_eq.global-to-local, align 1
  %v0_10002a00 = load i32, i32* @r24, align 4
  %v1_10002a00 = add i32 %v0_10002a00, 27
  store i32 %v1_10002a00, i32* @r30, align 4
  %v0_10002a04 = call i32 @__asm_mfcr()
  store i32 %v0_10002a04, i32* %r3.global-to-local, align 4
  %v1_10002a08 = mul i32 %v0_10002a04, 268435456
  store i32 %v1_10002a08, i32* @r26, align 4
  %v0_10002a0c = load i32, i32* %r17.global-to-local, align 4
  %v1_10002a0c = load i32, i32* %r0.global-to-local, align 4
  %v4_10002a0c = icmp eq i32 %v0_10002a0c, %v1_10002a0c
  store i1 %v4_10002a0c, i1* %cr7_eq.global-to-local, align 1
  %v0_10002a10 = load i32, i32* @r24, align 4
  %v1_10002a10 = add i32 %v0_10002a10, 47
  store i32 %v1_10002a10, i32* @r31, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10002a18 = call i32 @__asm_mfcr()
  store i32 %v0_10002a18, i32* %r3.global-to-local, align 4
  %v1_10002a1c = mul i32 %v0_10002a18, 268435456
  store i32 %v1_10002a1c, i32* %r27.global-to-local, align 4
  store i32 0, i32* @r25, align 4
  %v0_10002a24.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10002a24

dec_label_pc_10002a24:                            ; preds = %dec_label_pc_10002a58.dec_label_pc_10002a24_crit_edge, %dec_label_pc_100029e4
  %v0_10002a28 = phi i32 [ %v0_10002a28.pre, %dec_label_pc_10002a58.dec_label_pc_10002a24_crit_edge ], [ %v1_10002a1c, %dec_label_pc_100029e4 ]
  %v0_10002a24 = phi i32 [ %v1_10002ac8, %dec_label_pc_10002a58.dec_label_pc_10002a24_crit_edge ], [ %v0_10002a24.pre, %dec_label_pc_100029e4 ]
  %v1_10002a24 = mul i32 %v0_10002a24, 4
  store i32 %v1_10002a24, i32* %r0.global-to-local, align 4
  %v1_10002a28 = mul i32 %v0_10002a28, 16
  %v2_10002a28 = udiv i32 %v0_10002a28, 268435456
  %v3_10002a28 = or i32 %v2_10002a28, %v1_10002a28
  store i32 %v3_10002a28, i32* %r27.global-to-local, align 4
  %v1_10002a2c = call %0 @__asm_mtcrf(i32 1, i32 %v3_10002a28)
  %v1_10002a30 = mul nuw i32 %v2_10002a28, 268435456
  %v2_10002a30 = urem i32 %v0_10002a28, 268435456
  %v3_10002a30 = or i32 %v1_10002a30, %v2_10002a30
  store i32 %v3_10002a30, i32* @r27, align 4
  %v0_10002a34 = load i32, i32* %r16.global-to-local, align 4
  %v1_10002a34 = load i32, i32* %r0.global-to-local, align 4
  %v2_10002a34 = add i32 %v1_10002a34, %v0_10002a34
  %v3_10002a34 = inttoptr i32 %v2_10002a34 to i32*
  %v4_10002a34 = load i32, i32* %v3_10002a34, align 4
  store i32 %v4_10002a34, i32* @r29, align 4
  %v1_10002a38 = add i32 %v4_10002a34, 20
  store i32 %v1_10002a38, i32* @r28, align 4
  %v0_10002a3c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10002a3c, label %dec_label_pc_10002ae0, label %dec_label_pc_10002a40

dec_label_pc_10002a40:                            ; preds = %dec_label_pc_10002a24
  %v0_10002a40 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002a40, label %dec_label_pc_10002aec, label %dec_label_pc_10002a44

dec_label_pc_10002a44:                            ; preds = %dec_label_pc_10002ae0, %dec_label_pc_10002a40
  %v0_10002a44 = load i32, i32* @r26, align 4
  %v1_10002a44 = mul i32 %v0_10002a44, 16
  %v2_10002a44 = udiv i32 %v0_10002a44, 268435456
  %v3_10002a44 = or i32 %v2_10002a44, %v1_10002a44
  store i32 %v3_10002a44, i32* %r26.global-to-local, align 4
  %v1_10002a48 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10002a44)
  %v1_10002a4c = mul nuw i32 %v2_10002a44, 268435456
  %v2_10002a4c = urem i32 %v0_10002a44, 268435456
  %v3_10002a4c = or i32 %v1_10002a4c, %v2_10002a4c
  store i32 %v3_10002a4c, i32* @r26, align 4
  %v0_10002a50 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10002a50, label %dec_label_pc_10002b04, label %dec_label_pc_10002a54

dec_label_pc_10002a54:                            ; preds = %dec_label_pc_10002aec, %dec_label_pc_10002a44
  %v0_10002a54 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002a54, label %dec_label_pc_10002b10, label %dec_label_pc_10002a58

dec_label_pc_10002a58:                            ; preds = %dec_label_pc_10002b04, %dec_label_pc_10002a54, %dec_label_pc_10002b10
  %v0_10002a58 = load i32, i32* @r29, align 4
  %v1_10002a58 = add i32 %v0_10002a58, 41
  store i32 %v1_10002a58, i32* %r3.global-to-local, align 4
  %v0_10002a5c = load i32, i32* %r23.global-to-local, align 4
  store i32 268446308, i32* @lr, align 4
  %v2_10002a60 = inttoptr i32 %v1_10002a58 to i8*
  %v3_10002a60 = call i32 @function_100059e8(i8* %v2_10002a60, i32 %v0_10002a5c)
  %v0_10002a64 = load i32, i32* @r25, align 4
  %v1_10002a64 = trunc i32 %v0_10002a64 to i16
  %v2_10002a64 = load i32, i32* @r29, align 4
  %v3_10002a64 = add i32 %v2_10002a64, 10
  %v4_10002a64 = inttoptr i32 %v3_10002a64 to i16*
  store i16 %v1_10002a64, i16* %v4_10002a64, align 2
  %v0_10002a6c = load i32, i32* @r29, align 4
  store i32 %v0_10002a6c, i32* @r3, align 4
  %v2_10002a70 = call i32 @function_100043cc(i32 %v0_10002a6c, i32 20)
  %v3_10002a70 = trunc i32 %v2_10002a70 to i16
  %v0_10002a74 = load i32, i32* @r28, align 4
  store i32 %v0_10002a74, i32* @r4, align 4
  %v3_10002a78 = load i32, i32* @r29, align 4
  %v4_10002a78 = add i32 %v3_10002a78, 10
  %v5_10002a78 = inttoptr i32 %v4_10002a78 to i16*
  store i16 %v3_10002a70, i16* %v5_10002a78, align 2
  %v0_10002a7c = load i32, i32* @r30, align 4
  %v0_10002a80 = load i32, i32* @r25, align 4
  %v1_10002a80 = trunc i32 %v0_10002a80 to i16
  %v2_10002a80 = load i32, i32* @r28, align 4
  %v3_10002a80 = add i32 %v2_10002a80, 6
  %v4_10002a80 = inttoptr i32 %v3_10002a80 to i16*
  store i16 %v1_10002a80, i16* %v4_10002a80, align 2
  %v0_10002a84 = load i32, i32* @r29, align 4
  store i32 %v0_10002a84, i32* %r3.global-to-local, align 4
  %v0_10002a88 = load i32, i32* @r28, align 4
  %v1_10002a88 = add i32 %v0_10002a88, 4
  %v2_10002a88 = inttoptr i32 %v1_10002a88 to i16*
  %v3_10002a88 = load i16, i16* %v2_10002a88, align 2
  %v4_10002a88 = zext i16 %v3_10002a88 to i32
  %v4_10002a8c = call i32 @function_10004430(i32 %v0_10002a84, i32 %v0_10002a74, i32 %v4_10002a88, i32 %v0_10002a7c)
  %v5_10002a8c = trunc i32 %v4_10002a8c to i16
  store i32 %v4_10002a8c, i32* %r3.global-to-local, align 4
  %v3_10002a90 = load i32, i32* %stack_var_-2184, align 4
  store i32 %v3_10002a90, i32* %r7.global-to-local, align 4
  %v0_10002a94 = load i32, i32* @r28, align 4
  %v1_10002a94 = add i32 %v0_10002a94, 2
  %v2_10002a94 = inttoptr i32 %v1_10002a94 to i16*
  %v3_10002a94 = load i16, i16* %v2_10002a94, align 2
  %v4_10002a94 = zext i16 %v3_10002a94 to i32
  store i32 %v4_10002a94, i32* %r0.global-to-local, align 4
  %v0_10002a98 = load i32, i32* @r29, align 4
  %v1_10002a9c = mul i32 %v3_10002a90, 24
  store i32 %v1_10002a9c, i32* %r7.global-to-local, align 4
  %v4_10002aa0 = add i32 %v0_10002a94, 6
  %v5_10002aa0 = inttoptr i32 %v4_10002aa0 to i16*
  store i16 %v5_10002a8c, i16* %v5_10002aa0, align 2
  %v0_10002aa4 = load i32, i32* @r31, align 4
  %v0_10002aa8 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10002aa8, i32* %r3.global-to-local, align 4
  %v0_10002aac = load i32, i32* %r7.global-to-local, align 4
  %v1_10002aac = load i32, i32* %r14.global-to-local, align 4
  %v2_10002aac = add i32 %v1_10002aac, %v0_10002aac
  store i32 %v2_10002aac, i32* %r7.global-to-local, align 4
  %v0_10002ab4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002ab4 = trunc i32 %v0_10002ab4 to i16
  %v3_10002ab4 = add i32 %v2_10002aac, 2
  %v4_10002ab4 = inttoptr i32 %v3_10002ab4 to i16*
  store i16 %v1_10002ab4, i16* %v4_10002ab4, align 2
  store i32 16, i32* %r8.global-to-local, align 4
  %v0_10002abc = load i32, i32* @r21, align 4
  %v2_10002abc = add i32 %v2_10002aac, 4
  %v3_10002abc = inttoptr i32 %v2_10002abc to i32*
  store i32 %v0_10002abc, i32* %v3_10002abc, align 4
  store i32 268446404, i32* @lr, align 4
  %v6_10002ac0 = call i32 @function_10009088(i32 %v0_10002aa8, i32 %v0_10002a98, i32 %v0_10002aa4, i32 16384, i32 %v2_10002aac, i32 16)
  store i32 %v6_10002ac0, i32* %r3.global-to-local, align 4
  %v3_10002ac4 = load i32, i32* %stack_var_-2184, align 4
  store i32 %v3_10002ac4, i32* %r9.global-to-local, align 4
  %v1_10002ac8 = add i32 %v3_10002ac4, 1
  store i32 %v1_10002ac8, i32* %r0.global-to-local, align 4
  %v1_10002acc = load i32, i32* %r15.global-to-local, align 4
  %v2_10002acc = icmp slt i32 %v1_10002ac8, %v1_10002acc
  %v4_10002acc = icmp eq i32 %v1_10002ac8, %v1_10002acc
  store i1 %v4_10002acc, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10002ac8, i32* %stack_var_-2184, align 4
  br i1 %v2_10002acc, label %dec_label_pc_10002a58.dec_label_pc_10002a24_crit_edge, label %dec_label_pc_10002ad8

dec_label_pc_10002a58.dec_label_pc_10002a24_crit_edge: ; preds = %dec_label_pc_10002a58
  %v0_10002a28.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_10002a24

dec_label_pc_10002ad8:                            ; preds = %dec_label_pc_10002a58
  %v0_10002ad8 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10002ad8 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10002ad8 = or i1 %v0_10002ad8, %v1_10002ad8
  br i1 %v2_10002ad8, label %dec_label_pc_100029e0.preheader, label %dec_label_pc_100029e4

dec_label_pc_10002ae0:                            ; preds = %dec_label_pc_10002a24
  %v0_10002ae0 = call i32 @function_10005928()
  %v1_10002ae0 = trunc i32 %v0_10002ae0 to i16
  store i32 %v0_10002ae0, i32* %r3.global-to-local, align 4
  %v3_10002ae4 = load i32, i32* @r29, align 4
  %v4_10002ae4 = add i32 %v3_10002ae4, 4
  %v5_10002ae4 = inttoptr i32 %v4_10002ae4 to i16*
  store i16 %v1_10002ae0, i16* %v5_10002ae4, align 2
  %v0_10002ae8 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002ae8, label %dec_label_pc_10002aec, label %dec_label_pc_10002a44

dec_label_pc_10002aec:                            ; preds = %dec_label_pc_10002ae0, %dec_label_pc_10002a40
  %v0_10002aec = call i32 @function_10005928()
  %v1_10002aec = trunc i32 %v0_10002aec to i16
  store i32 %v0_10002aec, i32* %r3.global-to-local, align 4
  %v0_10002af0 = load i32, i32* @r26, align 4
  %v1_10002af0 = mul i32 %v0_10002af0, 16
  %v2_10002af0 = udiv i32 %v0_10002af0, 268435456
  %v3_10002af0 = or i32 %v2_10002af0, %v1_10002af0
  store i32 %v3_10002af0, i32* %r26.global-to-local, align 4
  %v1_10002af4 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10002af0)
  %v1_10002af8 = mul nuw i32 %v2_10002af0, 268435456
  %v2_10002af8 = urem i32 %v0_10002af0, 268435456
  %v3_10002af8 = or i32 %v1_10002af8, %v2_10002af8
  store i32 %v3_10002af8, i32* @r26, align 4
  %v3_10002afc = load i32, i32* @r29, align 4
  %v4_10002afc = add i32 %v3_10002afc, 20
  %v5_10002afc = inttoptr i32 %v4_10002afc to i16*
  store i16 %v1_10002aec, i16* %v5_10002afc, align 2
  %v0_10002b00 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10002b00, label %dec_label_pc_10002b04, label %dec_label_pc_10002a54

dec_label_pc_10002b04:                            ; preds = %dec_label_pc_10002aec, %dec_label_pc_10002a44
  %v0_10002b04 = call i32 @function_10005928()
  %v1_10002b04 = trunc i32 %v0_10002b04 to i16
  store i32 %v0_10002b04, i32* %r3.global-to-local, align 4
  %v3_10002b08 = load i32, i32* @r28, align 4
  %v4_10002b08 = add i32 %v3_10002b08, 2
  %v5_10002b08 = inttoptr i32 %v4_10002b08 to i16*
  store i16 %v1_10002b04, i16* %v5_10002b08, align 2
  %v0_10002b0c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002b0c, label %dec_label_pc_10002b10, label %dec_label_pc_10002a58

dec_label_pc_10002b10:                            ; preds = %dec_label_pc_10002b04, %dec_label_pc_10002a54
  %v0_10002b10 = call i32 @function_10005928()
  %v1_10002b10 = trunc i32 %v0_10002b10 to i16
  store i32 %v0_10002b10, i32* %r3.global-to-local, align 4
  %v3_10002b14 = load i32, i32* @r29, align 4
  %v4_10002b14 = add i32 %v3_10002b14, 28
  %v5_10002b14 = inttoptr i32 %v4_10002b14 to i16*
  store i16 %v1_10002b10, i16* %v5_10002b14, align 2
  br label %dec_label_pc_10002a58

dec_label_pc_10002b28:                            ; preds = %dec_label_pc_10002838
  %v0_10002b28 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10002b28, i32* %r3.global-to-local, align 4
  store i32 268446512, i32* @lr, align 4
  %v0_10002b2c = call i32 @function_10008418()
  store i32 %v0_10002b2c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002b30

dec_label_pc_10002b30:                            ; preds = %dec_label_pc_10002810, %dec_label_pc_10002808, %dec_label_pc_10002b28
  store i32 %v0_1000255c, i32* %r0.global-to-local, align 4
  %v1_10002b44 = call %0 @__asm_mtcrf(i32 56, i32 %v0_1000254c)
  store i32 %v0_1000257c, i32* %r24.global-to-local, align 4
  store i32 %v0_10002580, i32* %r25.global-to-local, align 4
  store i32 %v0_10002584, i32* %r26.global-to-local, align 4
  store i32 %v0_10002588, i32* %r27.global-to-local, align 4
  store i32 %v0_1000258c, i32* %r28.global-to-local, align 4
  store i32 %v0_100025b0, i32* %r30.global-to-local, align 4
  store i32 %v0_1000259c, i32* %r31.global-to-local, align 4
  %v0_10002b8c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10002b8c

dec_label_pc_10002b90:                            ; preds = %dec_label_pc_100027a4
  store i32 1246898730, i32* @r21, align 4
  br label %dec_label_pc_10002808

dec_label_pc_10002b9c:                            ; preds = %dec_label_pc_100027bc
  store i32 1074151430, i32* @r21, align 4
  br label %dec_label_pc_10002808

dec_label_pc_10002ba8:                            ; preds = %dec_label_pc_100027b4
  store i32 134744072, i32* @r21, align 4
  br label %dec_label_pc_10002808

; uselistorder directives
  uselistorder i32 %v0_10002b10, { 1, 0 }
  uselistorder i32 %v0_10002b04, { 1, 0 }
  uselistorder i32 %v0_10002af0, { 2, 1, 0 }
  uselistorder i32 %v0_10002aec, { 1, 0 }
  uselistorder i32 %v0_10002ae0, { 1, 0 }
  uselistorder i1 %v1_10002ad8, { 1, 0 }
  uselistorder i1 %v0_10002ad8, { 1, 0 }
  uselistorder i32 %v1_10002ac8, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v4_10002a8c, { 1, 0 }
  uselistorder i32 %v0_10002a44, { 2, 1, 0 }
  uselistorder i32 %v0_10002a28, { 2, 1, 0 }
  uselistorder i32 %v1_10002a1c, { 1, 0 }
  uselistorder i32 %v0_100029a4, { 2, 0, 1 }
  uselistorder i32 %v1_10002994, { 1, 0 }
  uselistorder i32 %v1_1000298c, { 0, 2, 1 }
  uselistorder i32 %v1_100028c0, { 1, 0 }
  uselistorder i32 %v1_100028b8, { 1, 0 }
  uselistorder i32 %v2_10002b1c, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10002b1c, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10002878, { 1, 0 }
  uselistorder i32 %v0_10002808, { 1, 0, 2 }
  uselistorder i1 %v2_100027bc, { 1, 0 }
  uselistorder i32 %v1_100027a8, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_100027a0, { 2, 1, 0 }
  uselistorder i32 %v1_10002788, { 1, 2, 0 }
  uselistorder i32 %v1_10002764, { 1, 0 }
  uselistorder i32 %v0_10002758, { 1, 0 }
  uselistorder i32 %v2_10002754, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_10002734, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1000272c, { 1, 2, 0, 3, 5, 4, 6 }
  uselistorder i32 %v0_100026d4, { 1, 0, 2, 3 }
  uselistorder i8 %v5_10002614, { 1, 0 }
  uselistorder i8 %v5_100025dc, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8 }
  uselistorder i32* %r3.global-to-local, { 29, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 3, 2, 16, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 1, 0 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 10, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 24, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32* %ctr.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i1* %cr7_eq.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10002b30, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10002a58, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100029e4, { 1, 0 }
  uselistorder label %dec_label_pc_100029e0, { 1, 0 }
  uselistorder label %dec_label_pc_100029e0.preheader, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000290c, { 1, 0 }
  uselistorder label %dec_label_pc_10002808, { 1, 2, 3, 5, 4, 0 }
  uselistorder label %dec_label_pc_10002784, { 1, 0 }
}

define i32 @function_10002bb4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10002bb4:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr3_lt.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp13 = call i16 @__decompiler_undefined_function_1()
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-404 = alloca i32, align 4
  %stack_var_-384 = alloca i32, align 4
  %stack_var_-368 = alloca i32, align 4
  %stack_var_-400 = alloca i32, align 4
  %stack_var_-408 = alloca i32, align 4
  %v0_10002bb8 = load i32, i32* @lr, align 4
  store i32 %v0_10002bb8, i32* %r0.global-to-local, align 4
  %v0_10002bbc = call i32 @__asm_mfcr()
  store i32 %v0_10002bbc, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r20.global-to-local, align 4
  %v0_10002bcc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10002bbc, i32* %r21.global-to-local, align 4
  %v0_10002c04 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10002c0c = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 268446760, i32* @lr, align 4
  %v2_10002c24 = call i32 @function_10009460(i32 16, i32 16)
  store i32 %v2_10002c24, i32* %r22.global-to-local, align 4
  %v0_10002c30 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10002c30, i32* %r3.global-to-local, align 4
  store i32 268446776, i32* @lr, align 4
  %v2_10002c34 = call i32 @function_10009460(i32 %v0_10002c30, i32 4)
  %v0_10002c38 = load i32, i32* @r28, align 4
  store i32 %v2_10002c34, i32* %r23.global-to-local, align 4
  %v0_10002c48 = load i32, i32* @r29, align 4
  store i32 %v0_10002c48, i32* %r3.global-to-local, align 4
  store i32 268446800, i32* @lr, align 4
  %v4_10002c4c = inttoptr i32 %v0_10002c38 to i32*
  %v5_10002c4c = call i32 @function_100006a8(i32 %v0_10002c48, i32* %v4_10002c4c, i32 2, i32 0)
  %v5_10002c5c = trunc i32 %v5_10002c4c to i8
  %v0_10002c64 = load i32, i32* @r28, align 4
  %v0_10002c68 = load i32, i32* @r29, align 4
  store i32 %v0_10002c68, i32* %r3.global-to-local, align 4
  store i32 268446832, i32* @lr, align 4
  %v4_10002c6c = inttoptr i32 %v0_10002c64 to i32*
  %v5_10002c6c = call i32 @function_100006a8(i32 %v0_10002c68, i32* %v4_10002c6c, i32 3, i32 65535)
  %v0_10002c70 = load i32, i32* @r28, align 4
  store i32 %v5_10002c6c, i32* @r31, align 4
  %v0_10002c80 = load i32, i32* @r29, align 4
  store i32 %v0_10002c80, i32* %r3.global-to-local, align 4
  store i32 268446856, i32* @lr, align 4
  %v4_10002c84 = inttoptr i32 %v0_10002c70 to i32*
  %v5_10002c84 = call i32 @function_100006a8(i32 %v0_10002c80, i32* %v4_10002c84, i32 4, i32 64)
  %v0_10002c88 = load i32, i32* @r28, align 4
  %v5_10002c94 = trunc i32 %v5_10002c84 to i8
  %v0_10002c9c = load i32, i32* @r29, align 4
  store i32 %v0_10002c9c, i32* %r3.global-to-local, align 4
  store i32 268446884, i32* @lr, align 4
  %v4_10002ca0 = inttoptr i32 %v0_10002c88 to i32*
  %v5_10002ca0 = call i32 @function_100006a8(i32 %v0_10002c9c, i32* %v4_10002ca0, i32 5, i32 1)
  %v1_10002ca8 = urem i32 %v5_10002ca0, 256
  %v0_10002cb4 = load i32, i32* @r28, align 4
  %v0_10002cbc = load i32, i32* @r29, align 4
  store i32 %v0_10002cbc, i32* %r3.global-to-local, align 4
  store i32 268446916, i32* @lr, align 4
  %v4_10002cc0 = inttoptr i32 %v0_10002cb4 to i32*
  %v5_10002cc0 = call i32 @function_100006a8(i32 %v0_10002cbc, i32* %v4_10002cc0, i32 7, i32 65535)
  %v0_10002cc4 = load i32, i32* @r28, align 4
  %v5_10002cd0 = trunc i32 %v5_10002cc0 to i16
  %v0_10002cd8 = load i32, i32* @r29, align 4
  store i32 %v0_10002cd8, i32* %r3.global-to-local, align 4
  store i32 268446944, i32* @lr, align 4
  %v4_10002cdc = inttoptr i32 %v0_10002cc4 to i32*
  %v5_10002cdc = call i32 @function_100006a8(i32 %v0_10002cd8, i32* %v4_10002cdc, i32 11, i32 1)
  %v0_10002ce0 = load i32, i32* @r28, align 4
  %v1_10002ce4 = urem i32 %v5_10002cdc, 256
  %v0_10002cf4 = load i32, i32* @r29, align 4
  store i32 %v0_10002cf4, i32* %r3.global-to-local, align 4
  store i32 268446972, i32* @lr, align 4
  %v4_10002cf8 = inttoptr i32 %v0_10002ce0 to i32*
  %v5_10002cf8 = call i32 @function_100006a8(i32 %v0_10002cf4, i32* %v4_10002cf8, i32 12, i32 1)
  %v0_10002cfc = load i32, i32* @r28, align 4
  %v1_10002d08 = urem i32 %v5_10002cf8, 256
  %v0_10002d0c = load i32, i32* @r29, align 4
  store i32 %v0_10002d0c, i32* %r3.global-to-local, align 4
  store i32 268446996, i32* @lr, align 4
  %v4_10002d10 = inttoptr i32 %v0_10002cfc to i32*
  %v5_10002d10 = call i32 @function_100006a8(i32 %v0_10002d0c, i32* %v4_10002d10, i32 13, i32 1)
  %v0_10002d14 = load i32, i32* @r28, align 4
  %v1_10002d20 = urem i32 %v5_10002d10, 256
  %v0_10002d24 = load i32, i32* @r29, align 4
  store i32 %v0_10002d24, i32* %r3.global-to-local, align 4
  store i32 268447020, i32* @lr, align 4
  %v4_10002d28 = inttoptr i32 %v0_10002d14 to i32*
  %v5_10002d28 = call i32 @function_100006a8(i32 %v0_10002d24, i32* %v4_10002d28, i32 14, i32 1)
  %v0_10002d2c = load i32, i32* @r28, align 4
  %v1_10002d38 = urem i32 %v5_10002d28, 256
  %v0_10002d3c = load i32, i32* @r29, align 4
  store i32 %v0_10002d3c, i32* %r3.global-to-local, align 4
  store i32 268447044, i32* @lr, align 4
  %v4_10002d40 = inttoptr i32 %v0_10002d2c to i32*
  %v5_10002d40 = call i32 @function_100006a8(i32 %v0_10002d3c, i32* %v4_10002d40, i32 15, i32 1)
  %v0_10002d44 = load i32, i32* @r28, align 4
  %v1_10002d50 = urem i32 %v5_10002d40, 256
  %v0_10002d54 = load i32, i32* @r29, align 4
  store i32 %v0_10002d54, i32* %r3.global-to-local, align 4
  store i32 268447068, i32* @lr, align 4
  %v4_10002d58 = inttoptr i32 %v0_10002d44 to i32*
  %v5_10002d58 = call i32 @function_100006a8(i32 %v0_10002d54, i32* %v4_10002d58, i32 16, i32 1)
  %v0_10002d64 = load i32, i32* @r28, align 4
  %v1_10002d68 = urem i32 %v5_10002d58, 256
  %v0_10002d6c = load i32, i32* @r29, align 4
  store i32 %v0_10002d6c, i32* %r3.global-to-local, align 4
  store i32 268447092, i32* @lr, align 4
  %v4_10002d70 = inttoptr i32 %v0_10002d64 to i32*
  %v5_10002d70 = call i32 @function_100006a8(i32 %v0_10002d6c, i32* %v4_10002d70, i32 0, i32 768)
  %v0_10002d74 = load i32, i32* @r28, align 4
  store i32 %v5_10002d70, i32* %r25.global-to-local, align 4
  %v0_10002d84 = load i32, i32* @r29, align 4
  store i32 %v0_10002d84, i32* %r3.global-to-local, align 4
  store i32 268447116, i32* @lr, align 4
  %v4_10002d88 = inttoptr i32 %v0_10002d74 to i32*
  %v5_10002d88 = call i32 @function_100006a8(i32 %v0_10002d84, i32* %v4_10002d88, i32 1, i32 1)
  %v1_10002d90 = urem i32 %v5_10002d88, 256
  store i32 %v1_10002d90, i32* %r27.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268447136, i32* @lr, align 4
  %v3_10002d9c = call i32 @function_10009104(i32 2, i32 3, i32 6)
  store i32 %v3_10002d9c, i32* %r3.global-to-local, align 4
  %v3_10002da0 = icmp eq i32 %v3_10002d9c, -1
  store i1 %v3_10002da0, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10002d9c, i32* %r24.global-to-local, align 4
  br i1 %v3_10002da0, label %dec_label_pc_10002f60, label %dec_label_pc_10002dac

dec_label_pc_10002dac:                            ; preds = %dec_label_pc_10002bb4
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10002db8 = ptrtoint i32* %stack_var_-408 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-408, align 4
  store i32 268447176, i32* @lr, align 4
  %v4_10002dc4 = call i32 @function_100090c8(i32 0, i32 3, i32 %v2_10002db8, i32 4)
  store i32 %v4_10002dc4, i32* %r3.global-to-local, align 4
  %v3_10002dc8 = icmp eq i32 %v4_10002dc4, -1
  store i1 %v3_10002dc8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10002dc8, label %dec_label_pc_10002f58, label %dec_label_pc_10002dd0

dec_label_pc_10002dd0:                            ; preds = %dec_label_pc_10002dac
  %v0_10002dd0 = load i32, i32* %r21.global-to-local, align 4
  %v1_10002dd0 = icmp slt i32 %v0_10002dd0, 0
  %v3_10002dd0 = icmp eq i32 %v0_10002dd0, 0
  store i1 %v1_10002dd0, i1* %cr3_lt.global-to-local, align 1
  store i1 %v3_10002dd0, i1* %cr3_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-408, align 4
  %v0_10002ddc = load i32, i32* @r31, align 4
  %v1_10002ddc = urem i32 %v0_10002ddc, 65536
  store i32 %v1_10002ddc, i32* %r19.global-to-local, align 4
  %tmp49 = icmp slt i32 %v0_10002dd0, 1
  br i1 %tmp49, label %dec_label_pc_100030f8, label %dec_label_pc_10002de4

dec_label_pc_10002de4:                            ; preds = %dec_label_pc_10002dd0
  %v4_10002de4 = sext i16 %v5_10002cd0 to i32
  store i32 %v4_10002de4, i32* %r9.global-to-local, align 4
  store i32 65535, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cr4_eq.global-to-local, align 1
  %v2_10002e68 = ptrtoint i32* %stack_var_-400 to i32
  %v2_10002e88 = ptrtoint i32* %stack_var_-368 to i32
  %v2_10002e94 = ptrtoint i32* %stack_var_-384 to i32
  %v2_10002e98 = ptrtoint i32* %stack_var_-404 to i32
  %v4_10002ed0 = zext i16 %tmp13 to i32
  %v1_10002f00 = and i32 %tmp, 1179648
  %v3_10003014 = icmp eq i32 %v1_10002ca8, 0
  %v4_10003034 = sext i8 %v5_10002c5c to i32
  %v4_1000303c = sext i8 %v5_10002c94 to i32
  %v1_10002f04 = and i32 %tmp, 327680
  %v3_10002f04 = icmp eq i32 %v1_10002f04, 0
  %v4_10002f0c = icmp eq i32 %v1_10002f00, 1179648
  br label %dec_label_pc_10002df0

dec_label_pc_10002df0:                            ; preds = %dec_label_pc_100030e4, %dec_label_pc_10002f18, %dec_label_pc_10002de4
  %v0_10002df0 = load i32, i32* %r25.global-to-local, align 4
  %v1_10002df0 = add i32 %v0_10002df0, 40
  store i32 %v1_10002df0, i32* %r26.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268447236, i32* @lr, align 4
  %v3_10002e0053 = call i32 @function_10009104(i32 2, i32 1, i32 0)
  store i32 %v3_10002e0053, i32* %r3.global-to-local, align 4
  %v3_10002e0455 = icmp eq i32 %v3_10002e0053, -1
  store i1 %v3_10002e0455, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10002e0053, i32* %r28.global-to-local, align 4
  br i1 %v3_10002e0455, label %dec_label_pc_100030e4, label %dec_label_pc_10002e10

dec_label_pc_10002e10:                            ; preds = %dec_label_pc_10002df0, %dec_label_pc_10002ef0
  store i32 3, i32* @r4, align 4
  store i32 268447264, i32* @lr, align 4
  %v1_10002e1c = call i32 @function_10008330(i32 3)
  store i32 4, i32* @r4, align 4
  %v0_10002e28 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002e28, i32* %r3.global-to-local, align 4
  store i32 268447284, i32* @lr, align 4
  %v2_10002e30 = call i32 @function_10008330(i32 %v0_10002e28)
  store i32 %v2_10002e30, i32* %r3.global-to-local, align 4
  %v3_10002e34 = load i32, i32* %stack_var_-408, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10002e3c = mul i32 %v3_10002e34, 24
  store i32 %v1_10002e3c, i32* %r0.global-to-local, align 4
  store i32 2, i32* %stack_var_-400, align 4
  %v0_10002e44 = load i32, i32* %r20.global-to-local, align 4
  %v2_10002e44 = add i32 %v0_10002e44, %v1_10002e3c
  store i32 %v2_10002e44, i32* %r11.global-to-local, align 4
  %v1_10002e48 = add i32 %v2_10002e44, 20
  %v2_10002e48 = inttoptr i32 %v1_10002e48 to i8*
  %v3_10002e48 = load i8, i8* %v2_10002e48, align 1
  %v4_10002e48 = zext i8 %v3_10002e48 to i32
  store i32 %v4_10002e48, i32* %r9.global-to-local, align 4
  %v3_10002e4c = icmp eq i8 %v3_10002e48, 31
  store i1 %v3_10002e4c, i1* %cr7_eq.global-to-local, align 1
  %tmp50 = icmp ult i8 %v3_10002e48, 32
  %v1_10002f24 = add i32 %v2_10002e44, 16
  %v2_10002f24 = inttoptr i32 %v1_10002f24 to i32*
  %v3_10002f24 = load i32, i32* %v2_10002f24, align 4
  br i1 %tmp50, label %dec_label_pc_10002f24, label %dec_label_pc_10002e54

dec_label_pc_10002e54:                            ; preds = %dec_label_pc_10002e10
  store i32 %v3_10002f24, i32* %r0.global-to-local, align 4
  %v0_10002e5c = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10002e5c, label %dec_label_pc_10002f4c, label %dec_label_pc_10002e60

dec_label_pc_10002e60:                            ; preds = %dec_label_pc_10002f24, %dec_label_pc_10002e54
  %stack_var_-396.0 = phi i32 [ %v2_10002f40, %dec_label_pc_10002f24 ], [ %v3_10002f24, %dec_label_pc_10002e54 ]
  store i32 %v4_10002de4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10002e68

dec_label_pc_10002e68:                            ; preds = %dec_label_pc_10002f4c, %dec_label_pc_10002e60
  %stack_var_-396.1 = phi i32 [ %stack_var_-396.2, %dec_label_pc_10002f4c ], [ %stack_var_-396.0, %dec_label_pc_10002e60 ]
  %storemerge = phi i16 [ %v1_10002f4c, %dec_label_pc_10002f4c ], [ %v5_10002cd0, %dec_label_pc_10002e60 ]
  %v0_10002e70 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002e70, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10002e78.22 to i32), i32* @lr, align 4
  %v3_10002e74 = call i32 @function_10008f34(i32 %v0_10002e70, i32 %v2_10002e68, i32 16)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268447360, i32* @lr, align 4
  %v0_10002e7c = call i32 @function_100087e8()
  store i32 %v0_10002e7c, i32* %r3.global-to-local, align 4
  store i32 %v0_10002e7c, i32* @r31, align 4
  %v4_10002ec4 = icmp eq i32 %tmp14, %stack_var_-396.1
  %v4_10002ed4 = zext i16 %storemerge to i32
  %v4_10002ed8 = icmp eq i16 %storemerge, %tmp13
  %v4_10002ec4.not = xor i1 %v4_10002ec4, true
  br label %dec_label_pc_10002e84

dec_label_pc_10002e84:                            ; preds = %dec_label_pc_10002ee0, %dec_label_pc_10002e68
  store i32 16, i32* %r0.global-to-local, align 4
  store i32 %v2_10002e94, i32* %r7.global-to-local, align 4
  store i32 %v2_10002e98, i32* %r8.global-to-local, align 4
  %v0_10002e9c = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10002e9c, i32* %r3.global-to-local, align 4
  store i32 16, i32* %stack_var_-404, align 4
  store i32 268447400, i32* @lr, align 4
  %v6_10002ea4 = call i32 @function_10009010(i32 %v0_10002e9c, i32 %v2_10002e88, i32 256, i32 16384, i32 %v2_10002e94, i32 %v2_10002e98)
  store i32 %v6_10002ea4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_10002eb0 = icmp eq i32 %v6_10002ea4, -1
  store i1 %v3_10002eb0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10002eb0, label %dec_label_pc_10002f60, label %dec_label_pc_10002ebc

dec_label_pc_10002ebc:                            ; preds = %dec_label_pc_10002e84
  store i32 %tmp14, i32* %r10.global-to-local, align 4
  store i32 %stack_var_-396.1, i32* %r0.global-to-local, align 4
  store i1 %v4_10002ec4, i1* %cr7_eq.global-to-local, align 1
  %tmp51 = icmp ult i32 %v6_10002ea4, 41
  %or.cond = or i1 %tmp51, %v4_10002ec4.not
  br i1 %or.cond, label %dec_label_pc_10002ee0, label %dec_label_pc_10002ed0

dec_label_pc_10002ed0:                            ; preds = %dec_label_pc_10002ebc
  store i32 %v4_10002ed0, i32* %r0.global-to-local, align 4
  store i32 %v4_10002ed4, i32* %r8.global-to-local, align 4
  store i1 %v4_10002ed8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10002ed8, label %dec_label_pc_10002efc, label %dec_label_pc_10002ee0

dec_label_pc_10002ee0:                            ; preds = %dec_label_pc_10002ebc, %dec_label_pc_10002f14, %dec_label_pc_10002ed0
  store i32 268447460, i32* @lr, align 4
  %v0_10002ee0 = call i32 @function_100087e8()
  %v0_10002ee4 = load i32, i32* @r31, align 4
  %v2_10002ee4 = sub i32 %v0_10002ee0, %v0_10002ee4
  store i32 %v2_10002ee4, i32* %r3.global-to-local, align 4
  %v3_10002ee8 = icmp eq i32 %v2_10002ee4, 10
  store i1 %v3_10002ee8, i1* %cr7_eq.global-to-local, align 1
  %tmp52 = icmp slt i32 %v2_10002ee4, 11
  br i1 %tmp52, label %dec_label_pc_10002e84, label %dec_label_pc_10002ef0

dec_label_pc_10002ef0:                            ; preds = %dec_label_pc_10002ee0
  %v0_10002ef0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002ef0, i32* %r3.global-to-local, align 4
  store i32 268447480, i32* @lr, align 4
  %v0_10002ef4 = call i32 @function_10008418()
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268447236, i32* @lr, align 4
  %v3_10002e00 = call i32 @function_10009104(i32 2, i32 1, i32 0)
  store i32 %v3_10002e00, i32* %r3.global-to-local, align 4
  %v3_10002e04 = icmp eq i32 %v3_10002e00, -1
  store i1 %v3_10002e04, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10002e00, i32* %r28.global-to-local, align 4
  br i1 %v3_10002e04, label %dec_label_pc_100030e4, label %dec_label_pc_10002e10

dec_label_pc_10002efc:                            ; preds = %dec_label_pc_10002ed0
  store i32 %tmp, i32* %r9.global-to-local, align 4
  store i32 %v1_10002f00, i32* %r11.global-to-local, align 4
  store i32 1179648, i32* %r0.global-to-local, align 4
  store i1 %v4_10002f0c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10002f0c, label %dec_label_pc_10002fc0, label %dec_label_pc_10002f14

dec_label_pc_10002f14:                            ; preds = %dec_label_pc_10002efc
  br i1 %v3_10002f04, label %dec_label_pc_10002ee0, label %dec_label_pc_10002f18

dec_label_pc_10002f18:                            ; preds = %dec_label_pc_10002f14
  %v0_10002f18 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002f18, i32* %r3.global-to-local, align 4
  store i32 268447520, i32* @lr, align 4
  %v0_10002f1c = call i32 @function_10008418()
  store i32 %v0_10002f1c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002df0

dec_label_pc_10002f24:                            ; preds = %dec_label_pc_10002e10
  store i32 %v3_10002f24, i32* %r29.global-to-local, align 4
  %v0_10002f28 = call i32 @function_10005928()
  store i32 %v0_10002f28, i32* %r3.global-to-local, align 4
  %v3_10002f2c = load i32, i32* %stack_var_-408, align 4
  %v1_10002f30 = mul i32 %v3_10002f2c, 24
  %v1_10002f34 = load i32, i32* %r20.global-to-local, align 4
  %v2_10002f34 = add i32 %v1_10002f34, %v1_10002f30
  store i32 %v2_10002f34, i32* %r9.global-to-local, align 4
  %v1_10002f38 = add i32 %v2_10002f34, 20
  %v2_10002f38 = inttoptr i32 %v1_10002f38 to i8*
  %v3_10002f38 = load i8, i8* %v2_10002f38, align 1
  %v4_10002f38 = zext i8 %v3_10002f38 to i32
  store i32 %v4_10002f38, i32* %r0.global-to-local, align 4
  %tmp56 = urem i8 %v3_10002f38, 64
  %v2_10002f3c = zext i8 %tmp56 to i32
  %v3_10002f3c = lshr i32 %v0_10002f28, %v2_10002f3c
  store i32 %v3_10002f3c, i32* %r3.global-to-local, align 4
  %v0_10002f40 = load i32, i32* %r29.global-to-local, align 4
  %v2_10002f40 = add i32 %v3_10002f3c, %v0_10002f40
  store i32 %v2_10002f40, i32* %r29.global-to-local, align 4
  %v0_10002f48 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10002f48, label %dec_label_pc_10002f4c, label %dec_label_pc_10002e60

dec_label_pc_10002f4c:                            ; preds = %dec_label_pc_10002f24, %dec_label_pc_10002e54
  %stack_var_-396.2 = phi i32 [ %v2_10002f40, %dec_label_pc_10002f24 ], [ %v3_10002f24, %dec_label_pc_10002e54 ]
  %v0_10002f4c = call i32 @function_10005928()
  %v1_10002f4c = trunc i32 %v0_10002f4c to i16
  store i32 %v0_10002f4c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002e68

dec_label_pc_10002f58:                            ; preds = %dec_label_pc_10002dac
  %v0_10002f58 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10002f58, i32* %r3.global-to-local, align 4
  store i32 268447584, i32* @lr, align 4
  %v0_10002f5c = call i32 @function_10008418()
  store i32 %v0_10002f5c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002f60

dec_label_pc_10002f60:                            ; preds = %dec_label_pc_10002e84, %dec_label_pc_10002bb4, %dec_label_pc_10002f58
  store i32 %v0_10002bcc, i32* %r0.global-to-local, align 4
  %v1_10002f74 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10002bbc)
  store i32 %v0_10002c04, i32* %r28.global-to-local, align 4
  store i32 %v0_10002c0c, i32* %r29.global-to-local, align 4
  %v0_10002fbc = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10002fbc

dec_label_pc_10002fc0:                            ; preds = %dec_label_pc_10002efc
  %v3_10002fc0 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10002fc0, i32* %r29.global-to-local, align 4
  %v0_10002fc4 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10002fc4, i32* @r3, align 4
  %v0_10002fc8 = load i32, i32* @r30, align 4
  %v1_10002fc8 = add i32 %v0_10002fc8, 2
  %v2_10002fc8 = inttoptr i32 %v1_10002fc8 to i16*
  %v3_10002fc8 = load i16, i16* %v2_10002fc8, align 2
  %v4_10002fc8 = zext i16 %v3_10002fc8 to i32
  store i32 %v4_10002fc8, i32* %r11.global-to-local, align 4
  %v1_10002fcc = mul i32 %v3_10002fc0, 16
  store i32 %v1_10002fcc, i32* %r9.global-to-local, align 4
  %v1_10002fd0 = mul i32 %v3_10002fc0, 4
  store i32 %v1_10002fd0, i32* @r29, align 4
  %v1_10002fd4 = load i32, i32* %r22.global-to-local, align 4
  %v3_10002fd4 = add i32 %v1_10002fd4, %v1_10002fcc
  %v4_10002fd4 = inttoptr i32 %v3_10002fd4 to i32*
  store i32 %tmp14, i32* %v4_10002fd4, align 4
  %v0_10002fd8 = load i32, i32* %r22.global-to-local, align 4
  %v1_10002fd8 = load i32, i32* %r9.global-to-local, align 4
  %v2_10002fd8 = add i32 %v1_10002fd8, %v0_10002fd8
  store i32 %v2_10002fd8, i32* %r9.global-to-local, align 4
  %v0_10002fdc = load i32, i32* %r8.global-to-local, align 4
  %v1_10002fdc = trunc i32 %v0_10002fdc to i16
  %v3_10002fdc = add i32 %v2_10002fd8, 14
  %v4_10002fdc = inttoptr i32 %v3_10002fdc to i16*
  store i16 %v1_10002fdc, i16* %v4_10002fdc, align 2
  %v0_10002fe0 = load i32, i32* @r30, align 4
  %v1_10002fe0 = add i32 %v0_10002fe0, 4
  %v2_10002fe0 = inttoptr i32 %v1_10002fe0 to i32*
  %v3_10002fe0 = load i32, i32* %v2_10002fe0, align 4
  store i32 %v3_10002fe0, i32* %r0.global-to-local, align 4
  %v0_10002fe4 = load i32, i32* %r11.global-to-local, align 4
  %v1_10002fe4 = trunc i32 %v0_10002fe4 to i16
  %v2_10002fe4 = load i32, i32* %r9.global-to-local, align 4
  %v3_10002fe4 = add i32 %v2_10002fe4, 12
  %v4_10002fe4 = inttoptr i32 %v3_10002fe4 to i16*
  store i16 %v1_10002fe4, i16* %v4_10002fe4, align 2
  %v0_10002fe8 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002fe8 = load i32, i32* %r9.global-to-local, align 4
  %v2_10002fe8 = add i32 %v1_10002fe8, 4
  %v3_10002fe8 = inttoptr i32 %v2_10002fe8 to i32*
  store i32 %v0_10002fe8, i32* %v3_10002fe8, align 4
  %v0_10002fec = load i32, i32* @r30, align 4
  %v1_10002fec = add i32 %v0_10002fec, 8
  %v2_10002fec = inttoptr i32 %v1_10002fec to i32*
  %v3_10002fec = load i32, i32* %v2_10002fec, align 4
  store i32 %v3_10002fec, i32* %r0.global-to-local, align 4
  %v1_10002ff0 = load i32, i32* %r9.global-to-local, align 4
  %v2_10002ff0 = add i32 %v1_10002ff0, 8
  %v3_10002ff0 = inttoptr i32 %v2_10002ff0 to i32*
  store i32 %v3_10002fec, i32* %v3_10002ff0, align 4
  store i32 268447736, i32* @lr, align 4
  %v0_10002ff4 = call i32 @function_10009308()
  store i32 %v0_10002ff4, i32* %r3.global-to-local, align 4
  %v3_10002ff8 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10002ff8, i32* %r0.global-to-local, align 4
  %v1_10002ffc = load i32, i32* @r29, align 4
  %v2_10002ffc = load i32, i32* %r23.global-to-local, align 4
  %v3_10002ffc = add i32 %v2_10002ffc, %v1_10002ffc
  %v4_10002ffc = inttoptr i32 %v3_10002ffc to i32*
  store i32 %v0_10002ff4, i32* %v4_10002ffc, align 4
  %v0_10003000 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003000 = mul i32 %v0_10003000, 4
  store i32 %v1_10003000, i32* %r0.global-to-local, align 4
  %v0_10003004 = load i32, i32* %r23.global-to-local, align 4
  %v2_10003004 = add i32 %v0_10003004, %v1_10003000
  %v3_10003004 = inttoptr i32 %v2_10003004 to i32*
  %v4_10003004 = load i32, i32* %v3_10003004, align 4
  store i32 %v4_10003004, i32* @r31, align 4
  store i32 %v1_10002ca8, i32* %r0.global-to-local, align 4
  %v1_1000300c = inttoptr i32 %v4_10003004 to i32*
  %v2_1000300c = load i32, i32* %v1_1000300c, align 4
  store i32 %v2_1000300c, i32* %r9.global-to-local, align 4
  %v1_10003010 = add i32 %v4_10003004, 20
  store i32 %v1_10003010, i32* @r30, align 4
  store i1 %v3_10003014, i1* %cr7_eq.global-to-local, align 1
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_1000301c = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_1000301c, i32* %r9.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_10003024 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_10003028 = load i32, i32* %r19.global-to-local, align 4
  %v1_10003028 = trunc i32 %v0_10003028 to i16
  %v2_10003028 = load i32, i32* @r31, align 4
  %v3_10003028 = add i32 %v2_10003028, 4
  %v4_10003028 = inttoptr i32 %v3_10003028 to i16*
  store i16 %v1_10003028, i16* %v4_10003028, align 2
  %v1_1000302c = load i32, i32* @r31, align 4
  %v2_1000302c = inttoptr i32 %v1_1000302c to i32*
  store i32 %v1_10003024, i32* %v2_1000302c, align 4
  %v0_10003030 = load i32, i32* %r26.global-to-local, align 4
  %v1_10003030 = trunc i32 %v0_10003030 to i16
  %v2_10003030 = load i32, i32* @r31, align 4
  %v3_10003030 = add i32 %v2_10003030, 2
  %v4_10003030 = inttoptr i32 %v3_10003030 to i16*
  store i16 %v1_10003030, i16* %v4_10003030, align 2
  store i32 %v4_10003034, i32* %r9.global-to-local, align 4
  %v2_10003038 = load i32, i32* @r31, align 4
  %v3_10003038 = add i32 %v2_10003038, 1
  %v4_10003038 = inttoptr i32 %v3_10003038 to i8*
  store i8 %v5_10002c5c, i8* %v4_10003038, align 1
  store i32 %v4_1000303c, i32* %r0.global-to-local, align 4
  %v2_10003040 = load i32, i32* @r31, align 4
  %v3_10003040 = add i32 %v2_10003040, 8
  %v4_10003040 = inttoptr i32 %v3_10003040 to i8*
  store i8 %v5_10002c94, i8* %v4_10003040, align 1
  %v0_10003044 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10003044, label %dec_label_pc_10003050, label %dec_label_pc_10003048

dec_label_pc_10003048:                            ; preds = %dec_label_pc_10002fc0
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_1000304c = load i32, i32* @r31, align 4
  %v3_1000304c = add i32 %v2_1000304c, 6
  %v4_1000304c = inttoptr i32 %v3_1000304c to i16*
  store i16 16384, i16* %v4_1000304c, align 2
  br label %dec_label_pc_10003050

dec_label_pc_10003050:                            ; preds = %dec_label_pc_10002fc0, %dec_label_pc_10003048
  %v2_10003058 = load i32, i32* @r31, align 4
  %v3_10003058 = add i32 %v2_10003058, 9
  %v4_10003058 = inttoptr i32 %v3_10003058 to i8*
  store i8 6, i8* %v4_10003058, align 1
  %v3_1000305c = load i32, i32* @global_var_1001b500.16, align 4
  store i32 %v3_1000305c, i32* %r0.global-to-local, align 4
  %v1_10003060 = load i32, i32* @r31, align 4
  %v2_10003060 = add i32 %v1_10003060, 12
  %v3_10003060 = inttoptr i32 %v2_10003060 to i32*
  store i32 %v3_1000305c, i32* %v3_10003060, align 4
  %v3_10003064 = load i32, i32* %stack_var_-408, align 4
  %v1_10003068 = mul i32 %v3_10003064, 16
  store i32 %v1_10003068, i32* %r9.global-to-local, align 4
  %v1_1000306c = load i32, i32* %r22.global-to-local, align 4
  %v2_1000306c = add i32 %v1_1000306c, %v1_10003068
  %v3_1000306c = inttoptr i32 %v2_1000306c to i32*
  %v4_1000306c = load i32, i32* %v3_1000306c, align 4
  store i32 %v4_1000306c, i32* %r0.global-to-local, align 4
  store i32 %v2_1000306c, i32* %r9.global-to-local, align 4
  %v1_10003074 = add i32 %v2_1000306c, 12
  %v2_10003074 = inttoptr i32 %v1_10003074 to i16*
  %v3_10003074 = load i16, i16* %v2_10003074, align 2
  %v4_10003074 = zext i16 %v3_10003074 to i32
  store i32 %v4_10003074, i32* %r11.global-to-local, align 4
  %v1_10003078 = load i32, i32* @r31, align 4
  %v2_10003078 = add i32 %v1_10003078, 16
  %v3_10003078 = inttoptr i32 %v2_10003078 to i32*
  store i32 %v4_1000306c, i32* %v3_10003078, align 4
  %v0_1000307c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000307c = trunc i32 %v0_1000307c to i16
  %v2_1000307c = load i32, i32* @r31, align 4
  %v3_1000307c = add i32 %v2_1000307c, 20
  %v4_1000307c = inttoptr i32 %v3_1000307c to i16*
  store i16 %v1_1000307c, i16* %v4_1000307c, align 2
  %v0_10003080 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003080 = add i32 %v0_10003080, 8
  %v2_10003080 = inttoptr i32 %v1_10003080 to i32*
  %v3_10003080 = load i32, i32* %v2_10003080, align 4
  store i32 %v3_10003080, i32* %r0.global-to-local, align 4
  %v0_10003084 = load i32, i32* @r30, align 4
  %v1_10003084 = add i32 %v0_10003084, 12
  %v2_10003084 = inttoptr i32 %v1_10003084 to i32*
  %v3_10003084 = load i32, i32* %v2_10003084, align 4
  store i32 %v3_10003084, i32* %r11.global-to-local, align 4
  %v2_10003088 = add i32 %v0_10003084, 4
  %v3_10003088 = inttoptr i32 %v2_10003088 to i32*
  store i32 %v3_10003080, i32* %v3_10003088, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_10003090 = call i32 @__asm_rlwimi(i32 8, i32 28, i32 0, i32 3)
  store i32 %v1_10003090, i32* %r11.global-to-local, align 4
  %v0_10003094 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003094 = add i32 %v0_10003094, 14
  %v2_10003094 = inttoptr i32 %v1_10003094 to i16*
  %v3_10003094 = load i16, i16* %v2_10003094, align 2
  %v4_10003094 = zext i16 %v3_10003094 to i32
  store i32 %v4_10003094, i32* %r0.global-to-local, align 4
  %v1_10003098 = add i32 %v0_10003094, 4
  %v2_10003098 = inttoptr i32 %v1_10003098 to i32*
  %v3_10003098 = load i32, i32* %v2_10003098, align 4
  store i32 %v3_10003098, i32* %r10.global-to-local, align 4
  %v1_1000309c = or i32 %v1_10003090, 1114112
  store i32 %v1_1000309c, i32* %r11.global-to-local, align 4
  %v2_100030a0 = load i32, i32* @r30, align 4
  %v3_100030a0 = add i32 %v2_100030a0, 2
  %v4_100030a0 = inttoptr i32 %v3_100030a0 to i16*
  store i16 %v3_10003094, i16* %v4_100030a0, align 2
  %v0_100030a4 = load i32, i32* %r10.global-to-local, align 4
  %v1_100030a4 = load i32, i32* @r30, align 4
  %v2_100030a4 = add i32 %v1_100030a4, 8
  %v3_100030a4 = inttoptr i32 %v2_100030a4 to i32*
  store i32 %v0_100030a4, i32* %v3_100030a4, align 4
  %v0_100030a8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100030a8 = load i32, i32* @r30, align 4
  %v2_100030a8 = add i32 %v1_100030a8, 12
  %v3_100030a8 = inttoptr i32 %v2_100030a8 to i32*
  store i32 %v0_100030a8, i32* %v3_100030a8, align 4
  %v0_100030ac = call i32 @function_10005928()
  %v1_100030ac = trunc i32 %v0_100030ac to i16
  store i32 %v1_10002ce4, i32* %r9.global-to-local, align 4
  %v3_100030b4 = load i32, i32* @r30, align 4
  %v4_100030b4 = add i32 %v3_100030b4, 14
  %v5_100030b4 = inttoptr i32 %v4_100030b4 to i16*
  store i16 %v1_100030ac, i16* %v5_100030b4, align 2
  %v0_100030b8 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100030b8, i32* @r4, align 4
  %v0_100030bc = load i32, i32* @r31, align 4
  %v1_100030bc = add i32 %v0_100030bc, 40
  store i32 %v1_100030bc, i32* @r3, align 4
  %v0_100030c0 = load i32, i32* @r30, align 4
  %v1_100030c0 = add i32 %v0_100030c0, 12
  %v2_100030c0 = inttoptr i32 %v1_100030c0 to i32*
  %v3_100030c0 = load i32, i32* %v2_100030c0, align 4
  store i32 %v3_100030c0, i32* %r0.global-to-local, align 4
  %v1_100030c4 = call i32 @__asm_rlwimi(i32 %v1_10002ce4, i32 21, i32 10, i32 10)
  store i32 %v1_100030c4, i32* %r0.global-to-local, align 4
  %v1_100030c8 = call i32 @__asm_rlwimi(i32 %v1_10002d08, i32 20, i32 11, i32 11)
  store i32 %v1_100030c8, i32* %r0.global-to-local, align 4
  %v1_100030cc = call i32 @__asm_rlwimi(i32 %v1_10002d20, i32 19, i32 12, i32 12)
  store i32 %v1_100030cc, i32* %r0.global-to-local, align 4
  %v1_100030d0 = call i32 @__asm_rlwimi(i32 %v1_10002d38, i32 18, i32 13, i32 13)
  store i32 %v1_100030d0, i32* %r0.global-to-local, align 4
  %v1_100030d4 = call i32 @__asm_rlwimi(i32 %v1_10002d50, i32 17, i32 14, i32 14)
  store i32 %v1_100030d4, i32* %r0.global-to-local, align 4
  %v1_100030d8 = call i32 @__asm_rlwimi(i32 %v1_10002d68, i32 16, i32 15, i32 15)
  store i32 %v1_100030d8, i32* %r0.global-to-local, align 4
  %v1_100030dc = load i32, i32* @r30, align 4
  %v2_100030dc = add i32 %v1_100030dc, 12
  %v3_100030dc = inttoptr i32 %v2_100030dc to i32*
  store i32 %v1_100030d8, i32* %v3_100030dc, align 4
  %v0_100030e0 = call i32 @function_10005afc()
  store i32 %v0_100030e0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100030e4

dec_label_pc_100030e4:                            ; preds = %dec_label_pc_10002df0, %dec_label_pc_10002ef0, %dec_label_pc_10003050
  %v3_100030e4 = load i32, i32* %stack_var_-408, align 4
  %v1_100030e8 = add i32 %v3_100030e4, 1
  store i32 %v1_100030e8, i32* %r9.global-to-local, align 4
  %v1_100030ec = load i32, i32* %r21.global-to-local, align 4
  %v2_100030ec = icmp slt i32 %v1_100030e8, %v1_100030ec
  %v4_100030ec = icmp eq i32 %v1_100030e8, %v1_100030ec
  store i1 %v4_100030ec, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_100030e8, i32* %stack_var_-408, align 4
  br i1 %v2_100030ec, label %dec_label_pc_10002df0, label %dec_label_pc_100030f8.loopexit

dec_label_pc_100030f8.loopexit:                   ; preds = %dec_label_pc_100030e4
  %v0_10003104.pre.pre = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_10003104.pre.pre = load i1, i1* %cr3_lt.global-to-local, align 1
  br label %dec_label_pc_100030f8

dec_label_pc_100030f8:                            ; preds = %dec_label_pc_100030f8.loopexit, %dec_label_pc_10002dd0
  %v1_10003104.pre = phi i1 [ %v1_10003104.pre.pre, %dec_label_pc_100030f8.loopexit ], [ %v1_10002dd0, %dec_label_pc_10002dd0 ]
  %v0_10003104.pre = phi i1 [ %v0_10003104.pre.pre, %dec_label_pc_100030f8.loopexit ], [ %v3_10002dd0, %dec_label_pc_10002dd0 ]
  %v0_100030f8 = load i32, i32* %r27.global-to-local, align 4
  %v3_100030f8 = icmp eq i32 %v0_100030f8, 0
  store i1 %v3_100030f8, i1* %cr2_eq.global-to-local, align 1
  %v0_100030fc = load i32, i32* %r25.global-to-local, align 4
  %v1_100030fc = add i32 %v0_100030fc, 40
  store i32 %v1_100030fc, i32* %r26.global-to-local, align 4
  %v1_10003100 = add i32 %v0_100030fc, 20
  store i32 %v1_10003100, i32* @r31, align 4
  br label %dec_label_pc_10003104.outer

dec_label_pc_10003104.outer:                      ; preds = %dec_label_pc_100031d8, %dec_label_pc_100030f8
  %v1_10003104.ph = phi i1 [ %v1_10003104.pre, %dec_label_pc_100030f8 ], [ %v1_100031d8, %dec_label_pc_100031d8 ]
  %v0_10003104.ph = phi i1 [ %v0_10003104.pre, %dec_label_pc_100030f8 ], [ %v0_100031d8, %dec_label_pc_100031d8 ]
  %v2_10003104 = or i1 %v1_10003104.ph, %v0_10003104.ph
  br label %dec_label_pc_10003104

dec_label_pc_10003104:                            ; preds = %dec_label_pc_10003104.outer, %dec_label_pc_10003104
  br i1 %v2_10003104, label %dec_label_pc_10003104, label %dec_label_pc_10003108

dec_label_pc_10003108:                            ; preds = %dec_label_pc_10003104, %dec_label_pc_100031d8
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-408, align 4
  %v0_10003118 = load i32, i32* %r19.global-to-local, align 4
  %v4_10003118 = icmp eq i32 %v0_10003118, 65535
  store i1 %v4_10003118, i1* %cr4_eq.global-to-local, align 1
  %v0_1000311c = load i32, i32* @r31, align 4
  %v1_1000311c = urem i32 %v0_1000311c, 65536
  store i32 %v1_1000311c, i32* @r30, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10003128

dec_label_pc_10003128:                            ; preds = %dec_label_pc_10003144.dec_label_pc_10003128_crit_edge, %dec_label_pc_10003108
  %v0_10003134 = phi i1 [ %v0_10003134.pre, %dec_label_pc_10003144.dec_label_pc_10003128_crit_edge ], [ %v4_10003118, %dec_label_pc_10003108 ]
  %v0_10003128 = phi i32 [ %v1_100031c8, %dec_label_pc_10003144.dec_label_pc_10003128_crit_edge ], [ 0, %dec_label_pc_10003108 ]
  %v1_10003128 = mul i32 %v0_10003128, 4
  store i32 %v1_10003128, i32* %r0.global-to-local, align 4
  %v0_1000312c = load i32, i32* %r23.global-to-local, align 4
  %v2_1000312c = add i32 %v0_1000312c, %v1_10003128
  %v3_1000312c = inttoptr i32 %v2_1000312c to i32*
  %v4_1000312c = load i32, i32* %v3_1000312c, align 4
  store i32 %v4_1000312c, i32* @r29, align 4
  %v1_10003130 = add i32 %v4_1000312c, 20
  store i32 %v1_10003130, i32* %r28.global-to-local, align 4
  br i1 %v0_10003134, label %dec_label_pc_100031e0, label %dec_label_pc_10003138

dec_label_pc_10003138:                            ; preds = %dec_label_pc_10003128
  %v1_10003138 = add i32 %v4_1000312c, 40
  store i32 %v1_10003138, i32* @r3, align 4
  %v0_1000313c = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_1000313c, i32* @r4, align 4
  %v0_10003140 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003140, label %dec_label_pc_10003144, label %dec_label_pc_100031f4

dec_label_pc_10003144:                            ; preds = %dec_label_pc_10003138, %dec_label_pc_100031e0, %dec_label_pc_100031f4
  %v2_10003144 = phi i32 [ %v4_1000312c, %dec_label_pc_10003138 ], [ %v0_100031ec, %dec_label_pc_100031e0 ], [ %v2_10003144.pre, %dec_label_pc_100031f4 ]
  %v0_10003144 = load i32, i32* %r27.global-to-local, align 4
  %v1_10003144 = trunc i32 %v0_10003144 to i16
  %v3_10003144 = add i32 %v2_10003144, 10
  %v4_10003144 = inttoptr i32 %v3_10003144 to i16*
  store i16 %v1_10003144, i16* %v4_10003144, align 2
  %v0_1000314c = load i32, i32* @r29, align 4
  store i32 %v0_1000314c, i32* @r3, align 4
  %v2_10003150 = call i32 @function_100043cc(i32 %v0_1000314c, i32 20)
  %v3_10003150 = trunc i32 %v2_10003150 to i16
  store i32 %v2_10003150, i32* %r3.global-to-local, align 4
  %v3_10003154 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10003154, i32* %r9.global-to-local, align 4
  %v3_10003158 = load i32, i32* @r29, align 4
  %v4_10003158 = add i32 %v3_10003158, 10
  %v5_10003158 = inttoptr i32 %v4_10003158 to i16*
  store i16 %v3_10003150, i16* %v5_10003158, align 2
  %v0_1000315c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000315c, i32* @r4, align 4
  %v0_10003160 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003160 = mul i32 %v0_10003160, 16
  store i32 %v1_10003160, i32* %r9.global-to-local, align 4
  %v0_10003164 = load i32, i32* %r27.global-to-local, align 4
  %v1_10003164 = trunc i32 %v0_10003164 to i16
  %v3_10003164 = add i32 %v0_1000315c, 16
  %v4_10003164 = inttoptr i32 %v3_10003164 to i16*
  store i16 %v1_10003164, i16* %v4_10003164, align 2
  %v0_10003168 = load i32, i32* %r22.global-to-local, align 4
  %v1_10003168 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003168 = add i32 %v1_10003168, %v0_10003168
  store i32 %v2_10003168, i32* %r9.global-to-local, align 4
  %v0_1000316c = load i32, i32* @r30, align 4
  %v1_10003170 = add i32 %v2_10003168, 4
  %v2_10003170 = inttoptr i32 %v1_10003170 to i32*
  %v3_10003170 = load i32, i32* %v2_10003170, align 4
  store i32 %v3_10003170, i32* %r11.global-to-local, align 4
  %v0_10003174 = load i32, i32* @r31, align 4
  %v0_10003178 = load i32, i32* @r29, align 4
  store i32 %v0_10003178, i32* %r3.global-to-local, align 4
  %v1_1000317c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000317c = add i32 %v1_1000317c, 4
  %v3_1000317c = inttoptr i32 %v2_1000317c to i32*
  store i32 %v3_10003170, i32* %v3_1000317c, align 4
  %v0_10003180 = load i32, i32* %r11.global-to-local, align 4
  %v1_10003180 = add i32 %v0_10003180, 1
  store i32 %v1_10003180, i32* %r11.global-to-local, align 4
  %v1_10003184 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003184 = add i32 %v1_10003184, 4
  %v3_10003184 = inttoptr i32 %v2_10003184 to i32*
  store i32 %v1_10003180, i32* %v3_10003184, align 4
  %v0_10003188 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003188 = add i32 %v0_10003188, 8
  %v2_10003188 = inttoptr i32 %v1_10003188 to i32*
  %v3_10003188 = load i32, i32* %v2_10003188, align 4
  store i32 %v3_10003188, i32* %r0.global-to-local, align 4
  %v1_1000318c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000318c = add i32 %v1_1000318c, 8
  %v3_1000318c = inttoptr i32 %v2_1000318c to i32*
  store i32 %v3_10003188, i32* %v3_1000318c, align 4
  %v4_10003190 = call i32 @function_10004430(i32 %v0_10003178, i32 %v0_1000315c, i32 %v0_1000316c, i32 %v0_10003174)
  %v5_10003190 = trunc i32 %v4_10003190 to i16
  store i32 %v4_10003190, i32* %r3.global-to-local, align 4
  %v3_10003194 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10003194, i32* %r7.global-to-local, align 4
  %v0_10003198 = load i32, i32* %r28.global-to-local, align 4
  %v1_10003198 = add i32 %v0_10003198, 2
  %v2_10003198 = inttoptr i32 %v1_10003198 to i16*
  %v3_10003198 = load i16, i16* %v2_10003198, align 2
  %v4_10003198 = zext i16 %v3_10003198 to i32
  store i32 %v4_10003198, i32* %r0.global-to-local, align 4
  %v0_1000319c = load i32, i32* @r29, align 4
  %v1_100031a0 = mul i32 %v3_10003194, 24
  store i32 %v1_100031a0, i32* %r7.global-to-local, align 4
  %v4_100031a4 = add i32 %v0_10003198, 16
  %v5_100031a4 = inttoptr i32 %v4_100031a4 to i16*
  store i16 %v5_10003190, i16* %v5_100031a4, align 2
  %v0_100031a8 = load i32, i32* %r26.global-to-local, align 4
  %v0_100031ac = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_100031ac, i32* %r3.global-to-local, align 4
  %v0_100031b0 = load i32, i32* %r7.global-to-local, align 4
  %v1_100031b0 = load i32, i32* %r20.global-to-local, align 4
  %v2_100031b0 = add i32 %v1_100031b0, %v0_100031b0
  store i32 %v2_100031b0, i32* %r7.global-to-local, align 4
  %v0_100031b8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100031b8 = trunc i32 %v0_100031b8 to i16
  %v3_100031b8 = add i32 %v2_100031b0, 2
  %v4_100031b8 = inttoptr i32 %v3_100031b8 to i16*
  store i16 %v1_100031b8, i16* %v4_100031b8, align 2
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 268448196, i32* @lr, align 4
  %v6_100031c0 = call i32 @function_10009088(i32 %v0_100031ac, i32 %v0_1000319c, i32 %v0_100031a8, i32 16384, i32 %v2_100031b0, i32 16)
  store i32 %v6_100031c0, i32* %r3.global-to-local, align 4
  %v3_100031c4 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_100031c4, i32* %r9.global-to-local, align 4
  %v1_100031c8 = add i32 %v3_100031c4, 1
  store i32 %v1_100031c8, i32* %r0.global-to-local, align 4
  %v1_100031cc = load i32, i32* %r21.global-to-local, align 4
  %v2_100031cc = icmp slt i32 %v1_100031c8, %v1_100031cc
  %v4_100031cc = icmp eq i32 %v1_100031c8, %v1_100031cc
  store i1 %v4_100031cc, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_100031c8, i32* %stack_var_-408, align 4
  br i1 %v2_100031cc, label %dec_label_pc_10003144.dec_label_pc_10003128_crit_edge, label %dec_label_pc_100031d8

dec_label_pc_10003144.dec_label_pc_10003128_crit_edge: ; preds = %dec_label_pc_10003144
  %v0_10003134.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  br label %dec_label_pc_10003128

dec_label_pc_100031d8:                            ; preds = %dec_label_pc_10003144
  %v0_100031d8 = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_100031d8 = load i1, i1* %cr3_lt.global-to-local, align 1
  %v2_100031d8 = or i1 %v0_100031d8, %v1_100031d8
  br i1 %v2_100031d8, label %dec_label_pc_10003104.outer, label %dec_label_pc_10003108

dec_label_pc_100031e0:                            ; preds = %dec_label_pc_10003128
  %v0_100031e0 = call i32 @function_10005928()
  %v1_100031e0 = trunc i32 %v0_100031e0 to i16
  %v0_100031e4 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100031e4, i32* @r4, align 4
  %v3_100031e8 = load i32, i32* @r29, align 4
  %v4_100031e8 = add i32 %v3_100031e8, 4
  %v5_100031e8 = inttoptr i32 %v4_100031e8 to i16*
  store i16 %v1_100031e0, i16* %v5_100031e8, align 2
  %v0_100031ec = load i32, i32* @r29, align 4
  %v1_100031ec = add i32 %v0_100031ec, 40
  store i32 %v1_100031ec, i32* @r3, align 4
  %v0_100031f0 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100031f0, label %dec_label_pc_10003144, label %dec_label_pc_100031f4

dec_label_pc_100031f4:                            ; preds = %dec_label_pc_10003138, %dec_label_pc_100031e0
  %v0_100031f4 = call i32 @function_10005afc()
  store i32 %v0_100031f4, i32* %r3.global-to-local, align 4
  %v2_10003144.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10003144

; uselistorder directives
  uselistorder i32 %v0_100031ec, { 1, 0 }
  uselistorder i1 %v1_100031d8, { 1, 0 }
  uselistorder i1 %v0_100031d8, { 1, 0 }
  uselistorder i32 %v1_100031c8, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v4_10003190, { 1, 0 }
  uselistorder i32 %v0_1000315c, { 1, 0, 2 }
  uselistorder i32 %v2_10003150, { 1, 0 }
  uselistorder i32 %v1_10003128, { 1, 0 }
  uselistorder i32 %v1_100030e8, { 0, 2, 1, 3 }
  uselistorder i32 %v2_1000306c, { 1, 0, 2 }
  uselistorder i32 %v1_10003068, { 1, 0 }
  uselistorder i32 %v1_10003000, { 1, 0 }
  uselistorder i32 %v1_10002fcc, { 1, 0 }
  uselistorder i32 %v0_10002f4c, { 1, 0 }
  uselistorder i32 %v2_10002f40, { 1, 2, 0 }
  uselistorder i1 %v4_10002ec4, { 1, 0 }
  uselistorder i16 %storemerge, { 1, 0 }
  uselistorder i32 %v3_10002f24, { 1, 3, 0, 2 }
  uselistorder i32 %v1_10002f00, { 1, 0 }
  uselistorder i32 %v1_10002ca8, { 1, 0 }
  uselistorder i8 %v5_10002c94, { 1, 0 }
  uselistorder i8 %v5_10002c5c, { 1, 0 }
  uselistorder i16 %tmp13, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 5, 6, 7, 8, 9, 10, 11, 12, 31, 13, 14, 15, 16, 17, 18, 19, 28, 29, 21, 20, 22, 23, 2, 25, 24, 26, 27, 4, 3, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 1, 0 }
  uselistorder i32* %r28.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 11, 8, 9, 10, 0 }
  uselistorder i32* %r25.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r24.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 25, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 34, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i1* %cr7_eq.global-to-local, { 1, 2, 3, 4, 5, 11, 6, 7, 8, 9, 10, 0, 12, 13 }
  uselistorder i1* %cr3_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr3_eq.global-to-local, { 1, 0, 2 }
  uselistorder i32 268447236, { 1, 0 }
  uselistorder label %dec_label_pc_100031f4, { 1, 0 }
  uselistorder label %dec_label_pc_10003144, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10003108, { 1, 0 }
  uselistorder label %dec_label_pc_10003104, { 1, 0 }
  uselistorder label %dec_label_pc_100030e4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10003050, { 1, 0 }
  uselistorder label %dec_label_pc_10002f60, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10002ee0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10002e10, { 1, 0 }
}

define i32 @function_100031fc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100031fc:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr3_lt.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp13 = call i16 @__decompiler_undefined_function_1()
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-404 = alloca i32, align 4
  %stack_var_-384 = alloca i32, align 4
  %stack_var_-368 = alloca i32, align 4
  %stack_var_-400 = alloca i32, align 4
  %stack_var_-408 = alloca i32, align 4
  %v0_10003200 = load i32, i32* @lr, align 4
  store i32 %v0_10003200, i32* %r0.global-to-local, align 4
  %v0_10003204 = call i32 @__asm_mfcr()
  store i32 %v0_10003204, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r20.global-to-local, align 4
  %v0_10003214 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10003204, i32* %r21.global-to-local, align 4
  %v0_1000324c = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10003254 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 268448368, i32* @lr, align 4
  %v2_1000326c = call i32 @function_10009460(i32 16, i32 16)
  store i32 %v2_1000326c, i32* %r22.global-to-local, align 4
  %v0_10003278 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10003278, i32* %r3.global-to-local, align 4
  store i32 268448384, i32* @lr, align 4
  %v2_1000327c = call i32 @function_10009460(i32 %v0_10003278, i32 4)
  %v0_10003280 = load i32, i32* @r28, align 4
  store i32 %v2_1000327c, i32* %r23.global-to-local, align 4
  %v0_10003290 = load i32, i32* @r29, align 4
  store i32 %v0_10003290, i32* %r3.global-to-local, align 4
  store i32 268448408, i32* @lr, align 4
  %v4_10003294 = inttoptr i32 %v0_10003280 to i32*
  %v5_10003294 = call i32 @function_100006a8(i32 %v0_10003290, i32* %v4_10003294, i32 2, i32 0)
  %v5_100032a4 = trunc i32 %v5_10003294 to i8
  %v0_100032ac = load i32, i32* @r28, align 4
  %v0_100032b0 = load i32, i32* @r29, align 4
  store i32 %v0_100032b0, i32* %r3.global-to-local, align 4
  store i32 268448440, i32* @lr, align 4
  %v4_100032b4 = inttoptr i32 %v0_100032ac to i32*
  %v5_100032b4 = call i32 @function_100006a8(i32 %v0_100032b0, i32* %v4_100032b4, i32 3, i32 65535)
  %v0_100032b8 = load i32, i32* @r28, align 4
  store i32 %v5_100032b4, i32* @r31, align 4
  %v0_100032c8 = load i32, i32* @r29, align 4
  store i32 %v0_100032c8, i32* %r3.global-to-local, align 4
  store i32 268448464, i32* @lr, align 4
  %v4_100032cc = inttoptr i32 %v0_100032b8 to i32*
  %v5_100032cc = call i32 @function_100006a8(i32 %v0_100032c8, i32* %v4_100032cc, i32 4, i32 64)
  %v0_100032d0 = load i32, i32* @r28, align 4
  %v5_100032dc = trunc i32 %v5_100032cc to i8
  %v0_100032e4 = load i32, i32* @r29, align 4
  store i32 %v0_100032e4, i32* %r3.global-to-local, align 4
  store i32 268448492, i32* @lr, align 4
  %v4_100032e8 = inttoptr i32 %v0_100032d0 to i32*
  %v5_100032e8 = call i32 @function_100006a8(i32 %v0_100032e4, i32* %v4_100032e8, i32 5, i32 1)
  %v1_100032f0 = urem i32 %v5_100032e8, 256
  %v0_100032fc = load i32, i32* @r28, align 4
  %v0_10003304 = load i32, i32* @r29, align 4
  store i32 %v0_10003304, i32* %r3.global-to-local, align 4
  store i32 268448524, i32* @lr, align 4
  %v4_10003308 = inttoptr i32 %v0_100032fc to i32*
  %v5_10003308 = call i32 @function_100006a8(i32 %v0_10003304, i32* %v4_10003308, i32 7, i32 65535)
  %v0_1000330c = load i32, i32* @r28, align 4
  %v5_10003318 = trunc i32 %v5_10003308 to i16
  %v0_10003320 = load i32, i32* @r29, align 4
  store i32 %v0_10003320, i32* %r3.global-to-local, align 4
  store i32 268448552, i32* @lr, align 4
  %v4_10003324 = inttoptr i32 %v0_1000330c to i32*
  %v5_10003324 = call i32 @function_100006a8(i32 %v0_10003320, i32* %v4_10003324, i32 11, i32 0)
  %v0_10003328 = load i32, i32* @r28, align 4
  %v1_1000332c = urem i32 %v5_10003324, 256
  %v0_1000333c = load i32, i32* @r29, align 4
  store i32 %v0_1000333c, i32* %r3.global-to-local, align 4
  store i32 268448580, i32* @lr, align 4
  %v4_10003340 = inttoptr i32 %v0_10003328 to i32*
  %v5_10003340 = call i32 @function_100006a8(i32 %v0_1000333c, i32* %v4_10003340, i32 12, i32 1)
  %v0_10003344 = load i32, i32* @r28, align 4
  %v1_10003350 = urem i32 %v5_10003340, 256
  %v0_10003354 = load i32, i32* @r29, align 4
  store i32 %v0_10003354, i32* %r3.global-to-local, align 4
  store i32 268448604, i32* @lr, align 4
  %v4_10003358 = inttoptr i32 %v0_10003344 to i32*
  %v5_10003358 = call i32 @function_100006a8(i32 %v0_10003354, i32* %v4_10003358, i32 13, i32 1)
  %v0_1000335c = load i32, i32* @r28, align 4
  %v1_10003368 = urem i32 %v5_10003358, 256
  %v0_1000336c = load i32, i32* @r29, align 4
  store i32 %v0_1000336c, i32* %r3.global-to-local, align 4
  store i32 268448628, i32* @lr, align 4
  %v4_10003370 = inttoptr i32 %v0_1000335c to i32*
  %v5_10003370 = call i32 @function_100006a8(i32 %v0_1000336c, i32* %v4_10003370, i32 14, i32 0)
  %v0_10003374 = load i32, i32* @r28, align 4
  %v1_10003380 = urem i32 %v5_10003370, 256
  %v0_10003384 = load i32, i32* @r29, align 4
  store i32 %v0_10003384, i32* %r3.global-to-local, align 4
  store i32 268448652, i32* @lr, align 4
  %v4_10003388 = inttoptr i32 %v0_10003374 to i32*
  %v5_10003388 = call i32 @function_100006a8(i32 %v0_10003384, i32* %v4_10003388, i32 15, i32 0)
  %v0_1000338c = load i32, i32* @r28, align 4
  %v1_10003398 = urem i32 %v5_10003388, 256
  %v0_1000339c = load i32, i32* @r29, align 4
  store i32 %v0_1000339c, i32* %r3.global-to-local, align 4
  store i32 268448676, i32* @lr, align 4
  %v4_100033a0 = inttoptr i32 %v0_1000338c to i32*
  %v5_100033a0 = call i32 @function_100006a8(i32 %v0_1000339c, i32* %v4_100033a0, i32 16, i32 0)
  %v0_100033ac = load i32, i32* @r28, align 4
  %v1_100033b0 = urem i32 %v5_100033a0, 256
  %v0_100033b4 = load i32, i32* @r29, align 4
  store i32 %v0_100033b4, i32* %r3.global-to-local, align 4
  store i32 268448700, i32* @lr, align 4
  %v4_100033b8 = inttoptr i32 %v0_100033ac to i32*
  %v5_100033b8 = call i32 @function_100006a8(i32 %v0_100033b4, i32* %v4_100033b8, i32 0, i32 768)
  %v0_100033bc = load i32, i32* @r28, align 4
  store i32 %v5_100033b8, i32* %r25.global-to-local, align 4
  %v0_100033cc = load i32, i32* @r29, align 4
  store i32 %v0_100033cc, i32* %r3.global-to-local, align 4
  store i32 268448724, i32* @lr, align 4
  %v4_100033d0 = inttoptr i32 %v0_100033bc to i32*
  %v5_100033d0 = call i32 @function_100006a8(i32 %v0_100033cc, i32* %v4_100033d0, i32 1, i32 1)
  %v1_100033d8 = urem i32 %v5_100033d0, 256
  store i32 %v1_100033d8, i32* %r27.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268448744, i32* @lr, align 4
  %v3_100033e4 = call i32 @function_10009104(i32 2, i32 3, i32 6)
  store i32 %v3_100033e4, i32* %r3.global-to-local, align 4
  %v3_100033e8 = icmp eq i32 %v3_100033e4, -1
  store i1 %v3_100033e8, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_100033e4, i32* %r24.global-to-local, align 4
  br i1 %v3_100033e8, label %dec_label_pc_100035a8, label %dec_label_pc_100033f4

dec_label_pc_100033f4:                            ; preds = %dec_label_pc_100031fc
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10003400 = ptrtoint i32* %stack_var_-408 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-408, align 4
  store i32 268448784, i32* @lr, align 4
  %v4_1000340c = call i32 @function_100090c8(i32 0, i32 3, i32 %v2_10003400, i32 4)
  store i32 %v4_1000340c, i32* %r3.global-to-local, align 4
  %v3_10003410 = icmp eq i32 %v4_1000340c, -1
  store i1 %v3_10003410, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10003410, label %dec_label_pc_100035a0, label %dec_label_pc_10003418

dec_label_pc_10003418:                            ; preds = %dec_label_pc_100033f4
  %v0_10003418 = load i32, i32* %r21.global-to-local, align 4
  %v1_10003418 = icmp slt i32 %v0_10003418, 0
  %v3_10003418 = icmp eq i32 %v0_10003418, 0
  store i1 %v1_10003418, i1* %cr3_lt.global-to-local, align 1
  store i1 %v3_10003418, i1* %cr3_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-408, align 4
  %v0_10003424 = load i32, i32* @r31, align 4
  %v1_10003424 = urem i32 %v0_10003424, 65536
  store i32 %v1_10003424, i32* %r19.global-to-local, align 4
  %tmp49 = icmp slt i32 %v0_10003418, 1
  br i1 %tmp49, label %dec_label_pc_10003740, label %dec_label_pc_1000342c

dec_label_pc_1000342c:                            ; preds = %dec_label_pc_10003418
  %v4_1000342c = sext i16 %v5_10003318 to i32
  store i32 %v4_1000342c, i32* %r9.global-to-local, align 4
  store i32 65535, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cr4_eq.global-to-local, align 1
  %v2_100034b0 = ptrtoint i32* %stack_var_-400 to i32
  %v2_100034d0 = ptrtoint i32* %stack_var_-368 to i32
  %v2_100034dc = ptrtoint i32* %stack_var_-384 to i32
  %v2_100034e0 = ptrtoint i32* %stack_var_-404 to i32
  %v4_10003518 = zext i16 %tmp13 to i32
  %v1_10003548 = and i32 %tmp, 1179648
  %v3_1000365c = icmp eq i32 %v1_100032f0, 0
  %v4_1000367c = sext i8 %v5_100032a4 to i32
  %v4_10003684 = sext i8 %v5_100032dc to i32
  %v1_1000354c = and i32 %tmp, 327680
  %v3_1000354c = icmp eq i32 %v1_1000354c, 0
  %v4_10003554 = icmp eq i32 %v1_10003548, 1179648
  br label %dec_label_pc_10003438

dec_label_pc_10003438:                            ; preds = %dec_label_pc_1000372c, %dec_label_pc_10003560, %dec_label_pc_1000342c
  %v0_10003438 = load i32, i32* %r25.global-to-local, align 4
  %v1_10003438 = add i32 %v0_10003438, 40
  store i32 %v1_10003438, i32* %r26.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268448844, i32* @lr, align 4
  %v3_1000344853 = call i32 @function_10009104(i32 2, i32 1, i32 0)
  store i32 %v3_1000344853, i32* %r3.global-to-local, align 4
  %v3_1000344c55 = icmp eq i32 %v3_1000344853, -1
  store i1 %v3_1000344c55, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_1000344853, i32* %r28.global-to-local, align 4
  br i1 %v3_1000344c55, label %dec_label_pc_1000372c, label %dec_label_pc_10003458

dec_label_pc_10003458:                            ; preds = %dec_label_pc_10003438, %dec_label_pc_10003538
  store i32 3, i32* @r4, align 4
  store i32 268448872, i32* @lr, align 4
  %v1_10003464 = call i32 @function_10008330(i32 3)
  store i32 4, i32* @r4, align 4
  %v0_10003470 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003470, i32* %r3.global-to-local, align 4
  store i32 268448892, i32* @lr, align 4
  %v2_10003478 = call i32 @function_10008330(i32 %v0_10003470)
  store i32 %v2_10003478, i32* %r3.global-to-local, align 4
  %v3_1000347c = load i32, i32* %stack_var_-408, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10003484 = mul i32 %v3_1000347c, 24
  store i32 %v1_10003484, i32* %r0.global-to-local, align 4
  store i32 2, i32* %stack_var_-400, align 4
  %v0_1000348c = load i32, i32* %r20.global-to-local, align 4
  %v2_1000348c = add i32 %v0_1000348c, %v1_10003484
  store i32 %v2_1000348c, i32* %r11.global-to-local, align 4
  %v1_10003490 = add i32 %v2_1000348c, 20
  %v2_10003490 = inttoptr i32 %v1_10003490 to i8*
  %v3_10003490 = load i8, i8* %v2_10003490, align 1
  %v4_10003490 = zext i8 %v3_10003490 to i32
  store i32 %v4_10003490, i32* %r9.global-to-local, align 4
  %v3_10003494 = icmp eq i8 %v3_10003490, 31
  store i1 %v3_10003494, i1* %cr7_eq.global-to-local, align 1
  %tmp50 = icmp ult i8 %v3_10003490, 32
  %v1_1000356c = add i32 %v2_1000348c, 16
  %v2_1000356c = inttoptr i32 %v1_1000356c to i32*
  %v3_1000356c = load i32, i32* %v2_1000356c, align 4
  br i1 %tmp50, label %dec_label_pc_1000356c, label %dec_label_pc_1000349c

dec_label_pc_1000349c:                            ; preds = %dec_label_pc_10003458
  store i32 %v3_1000356c, i32* %r0.global-to-local, align 4
  %v0_100034a4 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_100034a4, label %dec_label_pc_10003594, label %dec_label_pc_100034a8

dec_label_pc_100034a8:                            ; preds = %dec_label_pc_1000356c, %dec_label_pc_1000349c
  %stack_var_-396.0 = phi i32 [ %v2_10003588, %dec_label_pc_1000356c ], [ %v3_1000356c, %dec_label_pc_1000349c ]
  store i32 %v4_1000342c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_100034b0

dec_label_pc_100034b0:                            ; preds = %dec_label_pc_10003594, %dec_label_pc_100034a8
  %stack_var_-396.1 = phi i32 [ %stack_var_-396.2, %dec_label_pc_10003594 ], [ %stack_var_-396.0, %dec_label_pc_100034a8 ]
  %storemerge = phi i16 [ %v1_10003594, %dec_label_pc_10003594 ], [ %v5_10003318, %dec_label_pc_100034a8 ]
  %v0_100034b8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100034b8, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100034c0.23 to i32), i32* @lr, align 4
  %v3_100034bc = call i32 @function_10008f34(i32 %v0_100034b8, i32 %v2_100034b0, i32 16)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268448968, i32* @lr, align 4
  %v0_100034c4 = call i32 @function_100087e8()
  store i32 %v0_100034c4, i32* %r3.global-to-local, align 4
  store i32 %v0_100034c4, i32* @r31, align 4
  %v4_1000350c = icmp eq i32 %tmp14, %stack_var_-396.1
  %v4_1000351c = zext i16 %storemerge to i32
  %v4_10003520 = icmp eq i16 %storemerge, %tmp13
  %v4_1000350c.not = xor i1 %v4_1000350c, true
  br label %dec_label_pc_100034cc

dec_label_pc_100034cc:                            ; preds = %dec_label_pc_10003528, %dec_label_pc_100034b0
  store i32 16, i32* %r0.global-to-local, align 4
  store i32 %v2_100034dc, i32* %r7.global-to-local, align 4
  store i32 %v2_100034e0, i32* %r8.global-to-local, align 4
  %v0_100034e4 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_100034e4, i32* %r3.global-to-local, align 4
  store i32 16, i32* %stack_var_-404, align 4
  store i32 268449008, i32* @lr, align 4
  %v6_100034ec = call i32 @function_10009010(i32 %v0_100034e4, i32 %v2_100034d0, i32 256, i32 16384, i32 %v2_100034dc, i32 %v2_100034e0)
  store i32 %v6_100034ec, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_100034f8 = icmp eq i32 %v6_100034ec, -1
  store i1 %v3_100034f8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100034f8, label %dec_label_pc_100035a8, label %dec_label_pc_10003504

dec_label_pc_10003504:                            ; preds = %dec_label_pc_100034cc
  store i32 %tmp14, i32* %r10.global-to-local, align 4
  store i32 %stack_var_-396.1, i32* %r0.global-to-local, align 4
  store i1 %v4_1000350c, i1* %cr7_eq.global-to-local, align 1
  %tmp51 = icmp ult i32 %v6_100034ec, 41
  %or.cond = or i1 %tmp51, %v4_1000350c.not
  br i1 %or.cond, label %dec_label_pc_10003528, label %dec_label_pc_10003518

dec_label_pc_10003518:                            ; preds = %dec_label_pc_10003504
  store i32 %v4_10003518, i32* %r0.global-to-local, align 4
  store i32 %v4_1000351c, i32* %r8.global-to-local, align 4
  store i1 %v4_10003520, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10003520, label %dec_label_pc_10003544, label %dec_label_pc_10003528

dec_label_pc_10003528:                            ; preds = %dec_label_pc_10003504, %dec_label_pc_1000355c, %dec_label_pc_10003518
  store i32 268449068, i32* @lr, align 4
  %v0_10003528 = call i32 @function_100087e8()
  %v0_1000352c = load i32, i32* @r31, align 4
  %v2_1000352c = sub i32 %v0_10003528, %v0_1000352c
  store i32 %v2_1000352c, i32* %r3.global-to-local, align 4
  %v3_10003530 = icmp eq i32 %v2_1000352c, 10
  store i1 %v3_10003530, i1* %cr7_eq.global-to-local, align 1
  %tmp52 = icmp slt i32 %v2_1000352c, 11
  br i1 %tmp52, label %dec_label_pc_100034cc, label %dec_label_pc_10003538

dec_label_pc_10003538:                            ; preds = %dec_label_pc_10003528
  %v0_10003538 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003538, i32* %r3.global-to-local, align 4
  store i32 268449088, i32* @lr, align 4
  %v0_1000353c = call i32 @function_10008418()
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268448844, i32* @lr, align 4
  %v3_10003448 = call i32 @function_10009104(i32 2, i32 1, i32 0)
  store i32 %v3_10003448, i32* %r3.global-to-local, align 4
  %v3_1000344c = icmp eq i32 %v3_10003448, -1
  store i1 %v3_1000344c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10003448, i32* %r28.global-to-local, align 4
  br i1 %v3_1000344c, label %dec_label_pc_1000372c, label %dec_label_pc_10003458

dec_label_pc_10003544:                            ; preds = %dec_label_pc_10003518
  store i32 %tmp, i32* %r9.global-to-local, align 4
  store i32 %v1_10003548, i32* %r11.global-to-local, align 4
  store i32 1179648, i32* %r0.global-to-local, align 4
  store i1 %v4_10003554, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10003554, label %dec_label_pc_10003608, label %dec_label_pc_1000355c

dec_label_pc_1000355c:                            ; preds = %dec_label_pc_10003544
  br i1 %v3_1000354c, label %dec_label_pc_10003528, label %dec_label_pc_10003560

dec_label_pc_10003560:                            ; preds = %dec_label_pc_1000355c
  %v0_10003560 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003560, i32* %r3.global-to-local, align 4
  store i32 268449128, i32* @lr, align 4
  %v0_10003564 = call i32 @function_10008418()
  store i32 %v0_10003564, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003438

dec_label_pc_1000356c:                            ; preds = %dec_label_pc_10003458
  store i32 %v3_1000356c, i32* %r29.global-to-local, align 4
  %v0_10003570 = call i32 @function_10005928()
  store i32 %v0_10003570, i32* %r3.global-to-local, align 4
  %v3_10003574 = load i32, i32* %stack_var_-408, align 4
  %v1_10003578 = mul i32 %v3_10003574, 24
  %v1_1000357c = load i32, i32* %r20.global-to-local, align 4
  %v2_1000357c = add i32 %v1_1000357c, %v1_10003578
  store i32 %v2_1000357c, i32* %r9.global-to-local, align 4
  %v1_10003580 = add i32 %v2_1000357c, 20
  %v2_10003580 = inttoptr i32 %v1_10003580 to i8*
  %v3_10003580 = load i8, i8* %v2_10003580, align 1
  %v4_10003580 = zext i8 %v3_10003580 to i32
  store i32 %v4_10003580, i32* %r0.global-to-local, align 4
  %tmp56 = urem i8 %v3_10003580, 64
  %v2_10003584 = zext i8 %tmp56 to i32
  %v3_10003584 = lshr i32 %v0_10003570, %v2_10003584
  store i32 %v3_10003584, i32* %r3.global-to-local, align 4
  %v0_10003588 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003588 = add i32 %v3_10003584, %v0_10003588
  store i32 %v2_10003588, i32* %r29.global-to-local, align 4
  %v0_10003590 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10003590, label %dec_label_pc_10003594, label %dec_label_pc_100034a8

dec_label_pc_10003594:                            ; preds = %dec_label_pc_1000356c, %dec_label_pc_1000349c
  %stack_var_-396.2 = phi i32 [ %v2_10003588, %dec_label_pc_1000356c ], [ %v3_1000356c, %dec_label_pc_1000349c ]
  %v0_10003594 = call i32 @function_10005928()
  %v1_10003594 = trunc i32 %v0_10003594 to i16
  store i32 %v0_10003594, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100034b0

dec_label_pc_100035a0:                            ; preds = %dec_label_pc_100033f4
  %v0_100035a0 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_100035a0, i32* %r3.global-to-local, align 4
  store i32 268449192, i32* @lr, align 4
  %v0_100035a4 = call i32 @function_10008418()
  store i32 %v0_100035a4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100035a8

dec_label_pc_100035a8:                            ; preds = %dec_label_pc_100034cc, %dec_label_pc_100031fc, %dec_label_pc_100035a0
  store i32 %v0_10003214, i32* %r0.global-to-local, align 4
  %v1_100035bc = call %0 @__asm_mtcrf(i32 56, i32 %v0_10003204)
  store i32 %v0_1000324c, i32* %r28.global-to-local, align 4
  store i32 %v0_10003254, i32* %r29.global-to-local, align 4
  %v0_10003604 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10003604

dec_label_pc_10003608:                            ; preds = %dec_label_pc_10003544
  %v3_10003608 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10003608, i32* %r29.global-to-local, align 4
  %v0_1000360c = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_1000360c, i32* @r3, align 4
  %v0_10003610 = load i32, i32* @r30, align 4
  %v1_10003610 = add i32 %v0_10003610, 2
  %v2_10003610 = inttoptr i32 %v1_10003610 to i16*
  %v3_10003610 = load i16, i16* %v2_10003610, align 2
  %v4_10003610 = zext i16 %v3_10003610 to i32
  store i32 %v4_10003610, i32* %r11.global-to-local, align 4
  %v1_10003614 = mul i32 %v3_10003608, 16
  store i32 %v1_10003614, i32* %r9.global-to-local, align 4
  %v1_10003618 = mul i32 %v3_10003608, 4
  store i32 %v1_10003618, i32* @r29, align 4
  %v1_1000361c = load i32, i32* %r22.global-to-local, align 4
  %v3_1000361c = add i32 %v1_1000361c, %v1_10003614
  %v4_1000361c = inttoptr i32 %v3_1000361c to i32*
  store i32 %tmp14, i32* %v4_1000361c, align 4
  %v0_10003620 = load i32, i32* %r22.global-to-local, align 4
  %v1_10003620 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003620 = add i32 %v1_10003620, %v0_10003620
  store i32 %v2_10003620, i32* %r9.global-to-local, align 4
  %v0_10003624 = load i32, i32* %r8.global-to-local, align 4
  %v1_10003624 = trunc i32 %v0_10003624 to i16
  %v3_10003624 = add i32 %v2_10003620, 14
  %v4_10003624 = inttoptr i32 %v3_10003624 to i16*
  store i16 %v1_10003624, i16* %v4_10003624, align 2
  %v0_10003628 = load i32, i32* @r30, align 4
  %v1_10003628 = add i32 %v0_10003628, 4
  %v2_10003628 = inttoptr i32 %v1_10003628 to i32*
  %v3_10003628 = load i32, i32* %v2_10003628, align 4
  store i32 %v3_10003628, i32* %r0.global-to-local, align 4
  %v0_1000362c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000362c = trunc i32 %v0_1000362c to i16
  %v2_1000362c = load i32, i32* %r9.global-to-local, align 4
  %v3_1000362c = add i32 %v2_1000362c, 12
  %v4_1000362c = inttoptr i32 %v3_1000362c to i16*
  store i16 %v1_1000362c, i16* %v4_1000362c, align 2
  %v0_10003630 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003630 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003630 = add i32 %v1_10003630, 4
  %v3_10003630 = inttoptr i32 %v2_10003630 to i32*
  store i32 %v0_10003630, i32* %v3_10003630, align 4
  %v0_10003634 = load i32, i32* @r30, align 4
  %v1_10003634 = add i32 %v0_10003634, 8
  %v2_10003634 = inttoptr i32 %v1_10003634 to i32*
  %v3_10003634 = load i32, i32* %v2_10003634, align 4
  store i32 %v3_10003634, i32* %r0.global-to-local, align 4
  %v1_10003638 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003638 = add i32 %v1_10003638, 8
  %v3_10003638 = inttoptr i32 %v2_10003638 to i32*
  store i32 %v3_10003634, i32* %v3_10003638, align 4
  store i32 268449344, i32* @lr, align 4
  %v0_1000363c = call i32 @function_10009308()
  store i32 %v0_1000363c, i32* %r3.global-to-local, align 4
  %v3_10003640 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10003640, i32* %r0.global-to-local, align 4
  %v1_10003644 = load i32, i32* @r29, align 4
  %v2_10003644 = load i32, i32* %r23.global-to-local, align 4
  %v3_10003644 = add i32 %v2_10003644, %v1_10003644
  %v4_10003644 = inttoptr i32 %v3_10003644 to i32*
  store i32 %v0_1000363c, i32* %v4_10003644, align 4
  %v0_10003648 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003648 = mul i32 %v0_10003648, 4
  store i32 %v1_10003648, i32* %r0.global-to-local, align 4
  %v0_1000364c = load i32, i32* %r23.global-to-local, align 4
  %v2_1000364c = add i32 %v0_1000364c, %v1_10003648
  %v3_1000364c = inttoptr i32 %v2_1000364c to i32*
  %v4_1000364c = load i32, i32* %v3_1000364c, align 4
  store i32 %v4_1000364c, i32* @r31, align 4
  store i32 %v1_100032f0, i32* %r0.global-to-local, align 4
  %v1_10003654 = inttoptr i32 %v4_1000364c to i32*
  %v2_10003654 = load i32, i32* %v1_10003654, align 4
  store i32 %v2_10003654, i32* %r9.global-to-local, align 4
  %v1_10003658 = add i32 %v4_1000364c, 20
  store i32 %v1_10003658, i32* @r30, align 4
  store i1 %v3_1000365c, i1* %cr7_eq.global-to-local, align 1
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_10003664 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10003664, i32* %r9.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_1000366c = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_10003670 = load i32, i32* %r19.global-to-local, align 4
  %v1_10003670 = trunc i32 %v0_10003670 to i16
  %v2_10003670 = load i32, i32* @r31, align 4
  %v3_10003670 = add i32 %v2_10003670, 4
  %v4_10003670 = inttoptr i32 %v3_10003670 to i16*
  store i16 %v1_10003670, i16* %v4_10003670, align 2
  %v1_10003674 = load i32, i32* @r31, align 4
  %v2_10003674 = inttoptr i32 %v1_10003674 to i32*
  store i32 %v1_1000366c, i32* %v2_10003674, align 4
  %v0_10003678 = load i32, i32* %r26.global-to-local, align 4
  %v1_10003678 = trunc i32 %v0_10003678 to i16
  %v2_10003678 = load i32, i32* @r31, align 4
  %v3_10003678 = add i32 %v2_10003678, 2
  %v4_10003678 = inttoptr i32 %v3_10003678 to i16*
  store i16 %v1_10003678, i16* %v4_10003678, align 2
  store i32 %v4_1000367c, i32* %r9.global-to-local, align 4
  %v2_10003680 = load i32, i32* @r31, align 4
  %v3_10003680 = add i32 %v2_10003680, 1
  %v4_10003680 = inttoptr i32 %v3_10003680 to i8*
  store i8 %v5_100032a4, i8* %v4_10003680, align 1
  store i32 %v4_10003684, i32* %r0.global-to-local, align 4
  %v2_10003688 = load i32, i32* @r31, align 4
  %v3_10003688 = add i32 %v2_10003688, 8
  %v4_10003688 = inttoptr i32 %v3_10003688 to i8*
  store i8 %v5_100032dc, i8* %v4_10003688, align 1
  %v0_1000368c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000368c, label %dec_label_pc_10003698, label %dec_label_pc_10003690

dec_label_pc_10003690:                            ; preds = %dec_label_pc_10003608
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10003694 = load i32, i32* @r31, align 4
  %v3_10003694 = add i32 %v2_10003694, 6
  %v4_10003694 = inttoptr i32 %v3_10003694 to i16*
  store i16 16384, i16* %v4_10003694, align 2
  br label %dec_label_pc_10003698

dec_label_pc_10003698:                            ; preds = %dec_label_pc_10003608, %dec_label_pc_10003690
  %v2_100036a0 = load i32, i32* @r31, align 4
  %v3_100036a0 = add i32 %v2_100036a0, 9
  %v4_100036a0 = inttoptr i32 %v3_100036a0 to i8*
  store i8 6, i8* %v4_100036a0, align 1
  %v3_100036a4 = load i32, i32* @global_var_1001b500.16, align 4
  store i32 %v3_100036a4, i32* %r0.global-to-local, align 4
  %v1_100036a8 = load i32, i32* @r31, align 4
  %v2_100036a8 = add i32 %v1_100036a8, 12
  %v3_100036a8 = inttoptr i32 %v2_100036a8 to i32*
  store i32 %v3_100036a4, i32* %v3_100036a8, align 4
  %v3_100036ac = load i32, i32* %stack_var_-408, align 4
  %v1_100036b0 = mul i32 %v3_100036ac, 16
  store i32 %v1_100036b0, i32* %r9.global-to-local, align 4
  %v1_100036b4 = load i32, i32* %r22.global-to-local, align 4
  %v2_100036b4 = add i32 %v1_100036b4, %v1_100036b0
  %v3_100036b4 = inttoptr i32 %v2_100036b4 to i32*
  %v4_100036b4 = load i32, i32* %v3_100036b4, align 4
  store i32 %v4_100036b4, i32* %r0.global-to-local, align 4
  store i32 %v2_100036b4, i32* %r9.global-to-local, align 4
  %v1_100036bc = add i32 %v2_100036b4, 12
  %v2_100036bc = inttoptr i32 %v1_100036bc to i16*
  %v3_100036bc = load i16, i16* %v2_100036bc, align 2
  %v4_100036bc = zext i16 %v3_100036bc to i32
  store i32 %v4_100036bc, i32* %r11.global-to-local, align 4
  %v1_100036c0 = load i32, i32* @r31, align 4
  %v2_100036c0 = add i32 %v1_100036c0, 16
  %v3_100036c0 = inttoptr i32 %v2_100036c0 to i32*
  store i32 %v4_100036b4, i32* %v3_100036c0, align 4
  %v0_100036c4 = load i32, i32* %r11.global-to-local, align 4
  %v1_100036c4 = trunc i32 %v0_100036c4 to i16
  %v2_100036c4 = load i32, i32* @r31, align 4
  %v3_100036c4 = add i32 %v2_100036c4, 20
  %v4_100036c4 = inttoptr i32 %v3_100036c4 to i16*
  store i16 %v1_100036c4, i16* %v4_100036c4, align 2
  %v0_100036c8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100036c8 = add i32 %v0_100036c8, 8
  %v2_100036c8 = inttoptr i32 %v1_100036c8 to i32*
  %v3_100036c8 = load i32, i32* %v2_100036c8, align 4
  store i32 %v3_100036c8, i32* %r0.global-to-local, align 4
  %v0_100036cc = load i32, i32* @r30, align 4
  %v1_100036cc = add i32 %v0_100036cc, 12
  %v2_100036cc = inttoptr i32 %v1_100036cc to i32*
  %v3_100036cc = load i32, i32* %v2_100036cc, align 4
  store i32 %v3_100036cc, i32* %r11.global-to-local, align 4
  %v2_100036d0 = add i32 %v0_100036cc, 4
  %v3_100036d0 = inttoptr i32 %v2_100036d0 to i32*
  store i32 %v3_100036c8, i32* %v3_100036d0, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_100036d8 = call i32 @__asm_rlwimi(i32 8, i32 28, i32 0, i32 3)
  store i32 %v1_100036d8, i32* %r11.global-to-local, align 4
  %v0_100036dc = load i32, i32* %r9.global-to-local, align 4
  %v1_100036dc = add i32 %v0_100036dc, 14
  %v2_100036dc = inttoptr i32 %v1_100036dc to i16*
  %v3_100036dc = load i16, i16* %v2_100036dc, align 2
  %v4_100036dc = zext i16 %v3_100036dc to i32
  store i32 %v4_100036dc, i32* %r0.global-to-local, align 4
  %v1_100036e0 = add i32 %v0_100036dc, 4
  %v2_100036e0 = inttoptr i32 %v1_100036e0 to i32*
  %v3_100036e0 = load i32, i32* %v2_100036e0, align 4
  store i32 %v3_100036e0, i32* %r10.global-to-local, align 4
  %v1_100036e4 = or i32 %v1_100036d8, 1114112
  store i32 %v1_100036e4, i32* %r11.global-to-local, align 4
  %v2_100036e8 = load i32, i32* @r30, align 4
  %v3_100036e8 = add i32 %v2_100036e8, 2
  %v4_100036e8 = inttoptr i32 %v3_100036e8 to i16*
  store i16 %v3_100036dc, i16* %v4_100036e8, align 2
  %v0_100036ec = load i32, i32* %r10.global-to-local, align 4
  %v1_100036ec = load i32, i32* @r30, align 4
  %v2_100036ec = add i32 %v1_100036ec, 8
  %v3_100036ec = inttoptr i32 %v2_100036ec to i32*
  store i32 %v0_100036ec, i32* %v3_100036ec, align 4
  %v0_100036f0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100036f0 = load i32, i32* @r30, align 4
  %v2_100036f0 = add i32 %v1_100036f0, 12
  %v3_100036f0 = inttoptr i32 %v2_100036f0 to i32*
  store i32 %v0_100036f0, i32* %v3_100036f0, align 4
  %v0_100036f4 = call i32 @function_10005928()
  %v1_100036f4 = trunc i32 %v0_100036f4 to i16
  store i32 %v1_1000332c, i32* %r9.global-to-local, align 4
  %v3_100036fc = load i32, i32* @r30, align 4
  %v4_100036fc = add i32 %v3_100036fc, 14
  %v5_100036fc = inttoptr i32 %v4_100036fc to i16*
  store i16 %v1_100036f4, i16* %v5_100036fc, align 2
  %v0_10003700 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10003700, i32* @r4, align 4
  %v0_10003704 = load i32, i32* @r31, align 4
  %v1_10003704 = add i32 %v0_10003704, 40
  store i32 %v1_10003704, i32* @r3, align 4
  %v0_10003708 = load i32, i32* @r30, align 4
  %v1_10003708 = add i32 %v0_10003708, 12
  %v2_10003708 = inttoptr i32 %v1_10003708 to i32*
  %v3_10003708 = load i32, i32* %v2_10003708, align 4
  store i32 %v3_10003708, i32* %r0.global-to-local, align 4
  %v1_1000370c = call i32 @__asm_rlwimi(i32 %v1_1000332c, i32 21, i32 10, i32 10)
  store i32 %v1_1000370c, i32* %r0.global-to-local, align 4
  %v1_10003710 = call i32 @__asm_rlwimi(i32 %v1_10003350, i32 20, i32 11, i32 11)
  store i32 %v1_10003710, i32* %r0.global-to-local, align 4
  %v1_10003714 = call i32 @__asm_rlwimi(i32 %v1_10003368, i32 19, i32 12, i32 12)
  store i32 %v1_10003714, i32* %r0.global-to-local, align 4
  %v1_10003718 = call i32 @__asm_rlwimi(i32 %v1_10003380, i32 18, i32 13, i32 13)
  store i32 %v1_10003718, i32* %r0.global-to-local, align 4
  %v1_1000371c = call i32 @__asm_rlwimi(i32 %v1_10003398, i32 17, i32 14, i32 14)
  store i32 %v1_1000371c, i32* %r0.global-to-local, align 4
  %v1_10003720 = call i32 @__asm_rlwimi(i32 %v1_100033b0, i32 16, i32 15, i32 15)
  store i32 %v1_10003720, i32* %r0.global-to-local, align 4
  %v1_10003724 = load i32, i32* @r30, align 4
  %v2_10003724 = add i32 %v1_10003724, 12
  %v3_10003724 = inttoptr i32 %v2_10003724 to i32*
  store i32 %v1_10003720, i32* %v3_10003724, align 4
  %v0_10003728 = call i32 @function_10005afc()
  store i32 %v0_10003728, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000372c

dec_label_pc_1000372c:                            ; preds = %dec_label_pc_10003438, %dec_label_pc_10003538, %dec_label_pc_10003698
  %v3_1000372c = load i32, i32* %stack_var_-408, align 4
  %v1_10003730 = add i32 %v3_1000372c, 1
  store i32 %v1_10003730, i32* %r9.global-to-local, align 4
  %v1_10003734 = load i32, i32* %r21.global-to-local, align 4
  %v2_10003734 = icmp slt i32 %v1_10003730, %v1_10003734
  %v4_10003734 = icmp eq i32 %v1_10003730, %v1_10003734
  store i1 %v4_10003734, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10003730, i32* %stack_var_-408, align 4
  br i1 %v2_10003734, label %dec_label_pc_10003438, label %dec_label_pc_10003740.loopexit

dec_label_pc_10003740.loopexit:                   ; preds = %dec_label_pc_1000372c
  %v0_1000374c.pre.pre = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_1000374c.pre.pre = load i1, i1* %cr3_lt.global-to-local, align 1
  br label %dec_label_pc_10003740

dec_label_pc_10003740:                            ; preds = %dec_label_pc_10003740.loopexit, %dec_label_pc_10003418
  %v1_1000374c.pre = phi i1 [ %v1_1000374c.pre.pre, %dec_label_pc_10003740.loopexit ], [ %v1_10003418, %dec_label_pc_10003418 ]
  %v0_1000374c.pre = phi i1 [ %v0_1000374c.pre.pre, %dec_label_pc_10003740.loopexit ], [ %v3_10003418, %dec_label_pc_10003418 ]
  %v0_10003740 = load i32, i32* %r27.global-to-local, align 4
  %v3_10003740 = icmp eq i32 %v0_10003740, 0
  store i1 %v3_10003740, i1* %cr2_eq.global-to-local, align 1
  %v0_10003744 = load i32, i32* %r25.global-to-local, align 4
  %v1_10003744 = add i32 %v0_10003744, 40
  store i32 %v1_10003744, i32* %r26.global-to-local, align 4
  %v1_10003748 = add i32 %v0_10003744, 20
  store i32 %v1_10003748, i32* @r31, align 4
  br label %dec_label_pc_1000374c.outer

dec_label_pc_1000374c.outer:                      ; preds = %dec_label_pc_10003820, %dec_label_pc_10003740
  %v1_1000374c.ph = phi i1 [ %v1_1000374c.pre, %dec_label_pc_10003740 ], [ %v1_10003820, %dec_label_pc_10003820 ]
  %v0_1000374c.ph = phi i1 [ %v0_1000374c.pre, %dec_label_pc_10003740 ], [ %v0_10003820, %dec_label_pc_10003820 ]
  %v2_1000374c = or i1 %v1_1000374c.ph, %v0_1000374c.ph
  br label %dec_label_pc_1000374c

dec_label_pc_1000374c:                            ; preds = %dec_label_pc_1000374c.outer, %dec_label_pc_1000374c
  br i1 %v2_1000374c, label %dec_label_pc_1000374c, label %dec_label_pc_10003750

dec_label_pc_10003750:                            ; preds = %dec_label_pc_1000374c, %dec_label_pc_10003820
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-408, align 4
  %v0_10003760 = load i32, i32* %r19.global-to-local, align 4
  %v4_10003760 = icmp eq i32 %v0_10003760, 65535
  store i1 %v4_10003760, i1* %cr4_eq.global-to-local, align 1
  %v0_10003764 = load i32, i32* @r31, align 4
  %v1_10003764 = urem i32 %v0_10003764, 65536
  store i32 %v1_10003764, i32* @r30, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10003770

dec_label_pc_10003770:                            ; preds = %dec_label_pc_1000378c.dec_label_pc_10003770_crit_edge, %dec_label_pc_10003750
  %v0_1000377c = phi i1 [ %v0_1000377c.pre, %dec_label_pc_1000378c.dec_label_pc_10003770_crit_edge ], [ %v4_10003760, %dec_label_pc_10003750 ]
  %v0_10003770 = phi i32 [ %v1_10003810, %dec_label_pc_1000378c.dec_label_pc_10003770_crit_edge ], [ 0, %dec_label_pc_10003750 ]
  %v1_10003770 = mul i32 %v0_10003770, 4
  store i32 %v1_10003770, i32* %r0.global-to-local, align 4
  %v0_10003774 = load i32, i32* %r23.global-to-local, align 4
  %v2_10003774 = add i32 %v0_10003774, %v1_10003770
  %v3_10003774 = inttoptr i32 %v2_10003774 to i32*
  %v4_10003774 = load i32, i32* %v3_10003774, align 4
  store i32 %v4_10003774, i32* @r29, align 4
  %v1_10003778 = add i32 %v4_10003774, 20
  store i32 %v1_10003778, i32* %r28.global-to-local, align 4
  br i1 %v0_1000377c, label %dec_label_pc_10003828, label %dec_label_pc_10003780

dec_label_pc_10003780:                            ; preds = %dec_label_pc_10003770
  %v1_10003780 = add i32 %v4_10003774, 40
  store i32 %v1_10003780, i32* @r3, align 4
  %v0_10003784 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10003784, i32* @r4, align 4
  %v0_10003788 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003788, label %dec_label_pc_1000378c, label %dec_label_pc_1000383c

dec_label_pc_1000378c:                            ; preds = %dec_label_pc_10003780, %dec_label_pc_10003828, %dec_label_pc_1000383c
  %v2_1000378c = phi i32 [ %v4_10003774, %dec_label_pc_10003780 ], [ %v0_10003834, %dec_label_pc_10003828 ], [ %v2_1000378c.pre, %dec_label_pc_1000383c ]
  %v0_1000378c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000378c = trunc i32 %v0_1000378c to i16
  %v3_1000378c = add i32 %v2_1000378c, 10
  %v4_1000378c = inttoptr i32 %v3_1000378c to i16*
  store i16 %v1_1000378c, i16* %v4_1000378c, align 2
  %v0_10003794 = load i32, i32* @r29, align 4
  store i32 %v0_10003794, i32* @r3, align 4
  %v2_10003798 = call i32 @function_100043cc(i32 %v0_10003794, i32 20)
  %v3_10003798 = trunc i32 %v2_10003798 to i16
  store i32 %v2_10003798, i32* %r3.global-to-local, align 4
  %v3_1000379c = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_1000379c, i32* %r9.global-to-local, align 4
  %v3_100037a0 = load i32, i32* @r29, align 4
  %v4_100037a0 = add i32 %v3_100037a0, 10
  %v5_100037a0 = inttoptr i32 %v4_100037a0 to i16*
  store i16 %v3_10003798, i16* %v5_100037a0, align 2
  %v0_100037a4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100037a4, i32* @r4, align 4
  %v0_100037a8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100037a8 = mul i32 %v0_100037a8, 16
  store i32 %v1_100037a8, i32* %r9.global-to-local, align 4
  %v0_100037ac = load i32, i32* %r27.global-to-local, align 4
  %v1_100037ac = trunc i32 %v0_100037ac to i16
  %v3_100037ac = add i32 %v0_100037a4, 16
  %v4_100037ac = inttoptr i32 %v3_100037ac to i16*
  store i16 %v1_100037ac, i16* %v4_100037ac, align 2
  %v0_100037b0 = load i32, i32* %r22.global-to-local, align 4
  %v1_100037b0 = load i32, i32* %r9.global-to-local, align 4
  %v2_100037b0 = add i32 %v1_100037b0, %v0_100037b0
  store i32 %v2_100037b0, i32* %r9.global-to-local, align 4
  %v0_100037b4 = load i32, i32* @r30, align 4
  %v1_100037b8 = add i32 %v2_100037b0, 4
  %v2_100037b8 = inttoptr i32 %v1_100037b8 to i32*
  %v3_100037b8 = load i32, i32* %v2_100037b8, align 4
  store i32 %v3_100037b8, i32* %r11.global-to-local, align 4
  %v0_100037bc = load i32, i32* @r31, align 4
  %v0_100037c0 = load i32, i32* @r29, align 4
  store i32 %v0_100037c0, i32* %r3.global-to-local, align 4
  %v1_100037c4 = load i32, i32* %r28.global-to-local, align 4
  %v2_100037c4 = add i32 %v1_100037c4, 4
  %v3_100037c4 = inttoptr i32 %v2_100037c4 to i32*
  store i32 %v3_100037b8, i32* %v3_100037c4, align 4
  %v0_100037c8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100037c8 = add i32 %v0_100037c8, 1
  store i32 %v1_100037c8, i32* %r11.global-to-local, align 4
  %v1_100037cc = load i32, i32* %r9.global-to-local, align 4
  %v2_100037cc = add i32 %v1_100037cc, 4
  %v3_100037cc = inttoptr i32 %v2_100037cc to i32*
  store i32 %v1_100037c8, i32* %v3_100037cc, align 4
  %v0_100037d0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100037d0 = add i32 %v0_100037d0, 8
  %v2_100037d0 = inttoptr i32 %v1_100037d0 to i32*
  %v3_100037d0 = load i32, i32* %v2_100037d0, align 4
  store i32 %v3_100037d0, i32* %r0.global-to-local, align 4
  %v1_100037d4 = load i32, i32* %r28.global-to-local, align 4
  %v2_100037d4 = add i32 %v1_100037d4, 8
  %v3_100037d4 = inttoptr i32 %v2_100037d4 to i32*
  store i32 %v3_100037d0, i32* %v3_100037d4, align 4
  %v4_100037d8 = call i32 @function_10004430(i32 %v0_100037c0, i32 %v0_100037a4, i32 %v0_100037b4, i32 %v0_100037bc)
  %v5_100037d8 = trunc i32 %v4_100037d8 to i16
  store i32 %v4_100037d8, i32* %r3.global-to-local, align 4
  %v3_100037dc = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_100037dc, i32* %r7.global-to-local, align 4
  %v0_100037e0 = load i32, i32* %r28.global-to-local, align 4
  %v1_100037e0 = add i32 %v0_100037e0, 2
  %v2_100037e0 = inttoptr i32 %v1_100037e0 to i16*
  %v3_100037e0 = load i16, i16* %v2_100037e0, align 2
  %v4_100037e0 = zext i16 %v3_100037e0 to i32
  store i32 %v4_100037e0, i32* %r0.global-to-local, align 4
  %v0_100037e4 = load i32, i32* @r29, align 4
  %v1_100037e8 = mul i32 %v3_100037dc, 24
  store i32 %v1_100037e8, i32* %r7.global-to-local, align 4
  %v4_100037ec = add i32 %v0_100037e0, 16
  %v5_100037ec = inttoptr i32 %v4_100037ec to i16*
  store i16 %v5_100037d8, i16* %v5_100037ec, align 2
  %v0_100037f0 = load i32, i32* %r26.global-to-local, align 4
  %v0_100037f4 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_100037f4, i32* %r3.global-to-local, align 4
  %v0_100037f8 = load i32, i32* %r7.global-to-local, align 4
  %v1_100037f8 = load i32, i32* %r20.global-to-local, align 4
  %v2_100037f8 = add i32 %v1_100037f8, %v0_100037f8
  store i32 %v2_100037f8, i32* %r7.global-to-local, align 4
  %v0_10003800 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003800 = trunc i32 %v0_10003800 to i16
  %v3_10003800 = add i32 %v2_100037f8, 2
  %v4_10003800 = inttoptr i32 %v3_10003800 to i16*
  store i16 %v1_10003800, i16* %v4_10003800, align 2
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 268449804, i32* @lr, align 4
  %v6_10003808 = call i32 @function_10009088(i32 %v0_100037f4, i32 %v0_100037e4, i32 %v0_100037f0, i32 16384, i32 %v2_100037f8, i32 16)
  store i32 %v6_10003808, i32* %r3.global-to-local, align 4
  %v3_1000380c = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_1000380c, i32* %r9.global-to-local, align 4
  %v1_10003810 = add i32 %v3_1000380c, 1
  store i32 %v1_10003810, i32* %r0.global-to-local, align 4
  %v1_10003814 = load i32, i32* %r21.global-to-local, align 4
  %v2_10003814 = icmp slt i32 %v1_10003810, %v1_10003814
  %v4_10003814 = icmp eq i32 %v1_10003810, %v1_10003814
  store i1 %v4_10003814, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10003810, i32* %stack_var_-408, align 4
  br i1 %v2_10003814, label %dec_label_pc_1000378c.dec_label_pc_10003770_crit_edge, label %dec_label_pc_10003820

dec_label_pc_1000378c.dec_label_pc_10003770_crit_edge: ; preds = %dec_label_pc_1000378c
  %v0_1000377c.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  br label %dec_label_pc_10003770

dec_label_pc_10003820:                            ; preds = %dec_label_pc_1000378c
  %v0_10003820 = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_10003820 = load i1, i1* %cr3_lt.global-to-local, align 1
  %v2_10003820 = or i1 %v0_10003820, %v1_10003820
  br i1 %v2_10003820, label %dec_label_pc_1000374c.outer, label %dec_label_pc_10003750

dec_label_pc_10003828:                            ; preds = %dec_label_pc_10003770
  %v0_10003828 = call i32 @function_10005928()
  %v1_10003828 = trunc i32 %v0_10003828 to i16
  %v0_1000382c = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_1000382c, i32* @r4, align 4
  %v3_10003830 = load i32, i32* @r29, align 4
  %v4_10003830 = add i32 %v3_10003830, 4
  %v5_10003830 = inttoptr i32 %v4_10003830 to i16*
  store i16 %v1_10003828, i16* %v5_10003830, align 2
  %v0_10003834 = load i32, i32* @r29, align 4
  %v1_10003834 = add i32 %v0_10003834, 40
  store i32 %v1_10003834, i32* @r3, align 4
  %v0_10003838 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003838, label %dec_label_pc_1000378c, label %dec_label_pc_1000383c

dec_label_pc_1000383c:                            ; preds = %dec_label_pc_10003780, %dec_label_pc_10003828
  %v0_1000383c = call i32 @function_10005afc()
  store i32 %v0_1000383c, i32* %r3.global-to-local, align 4
  %v2_1000378c.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000378c

; uselistorder directives
  uselistorder i32 %v0_10003834, { 1, 0 }
  uselistorder i1 %v1_10003820, { 1, 0 }
  uselistorder i1 %v0_10003820, { 1, 0 }
  uselistorder i32 %v1_10003810, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v4_100037d8, { 1, 0 }
  uselistorder i32 %v0_100037a4, { 1, 0, 2 }
  uselistorder i32 %v2_10003798, { 1, 0 }
  uselistorder i32 %v1_10003770, { 1, 0 }
  uselistorder i32 %v1_10003730, { 0, 2, 1, 3 }
  uselistorder i32 %v2_100036b4, { 1, 0, 2 }
  uselistorder i32 %v1_100036b0, { 1, 0 }
  uselistorder i32 %v1_10003648, { 1, 0 }
  uselistorder i32 %v1_10003614, { 1, 0 }
  uselistorder i32 %v0_10003594, { 1, 0 }
  uselistorder i32 %v2_10003588, { 1, 2, 0 }
  uselistorder i1 %v4_1000350c, { 1, 0 }
  uselistorder i16 %storemerge, { 1, 0 }
  uselistorder i32 %v3_1000356c, { 1, 3, 0, 2 }
  uselistorder i32 %v1_10003548, { 1, 0 }
  uselistorder i32 %v1_100032f0, { 1, 0 }
  uselistorder i8 %v5_100032dc, { 1, 0 }
  uselistorder i8 %v5_100032a4, { 1, 0 }
  uselistorder i16 %tmp13, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 31, 12, 13, 14, 15, 16, 17, 18, 28, 29, 20, 19, 21, 22, 23, 25, 24, 26, 27, 3, 2, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 0, 1 }
  uselistorder i32* %r28.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 11, 8, 9, 10, 0 }
  uselistorder i32* %r25.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r24.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 25, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 34, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i1* %cr7_eq.global-to-local, { 1, 2, 3, 4, 5, 11, 6, 7, 8, 9, 10, 0, 12, 13 }
  uselistorder i1* %cr3_eq.global-to-local, { 1, 0, 2 }
  uselistorder i8 31, { 1, 2, 3, 0, 4, 5, 6, 7 }
  uselistorder i32 268448844, { 1, 0 }
  uselistorder i32 1179648, { 2, 0, 3, 4, 1, 5 }
  uselistorder label %dec_label_pc_1000383c, { 1, 0 }
  uselistorder label %dec_label_pc_1000378c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10003750, { 1, 0 }
  uselistorder label %dec_label_pc_1000374c, { 1, 0 }
  uselistorder label %dec_label_pc_1000372c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10003698, { 1, 0 }
  uselistorder label %dec_label_pc_100035a8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10003528, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10003458, { 1, 0 }
}

define i32 @function_10003844(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10003844:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-136 = alloca i32, align 4
  %v0_10003848 = load i32, i32* @lr, align 4
  store i32 %v0_10003848, i32* %r0.global-to-local, align 4
  %v0_1000384c = call i32 @__asm_mfcr()
  store i32 %v0_1000384c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r25.global-to-local, align 4
  %v0_1000385c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1000384c, i32* %r21.global-to-local, align 4
  %v0_1000389c = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100038a4 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_100038ac = load i32, i32* @r30, align 4
  store i32 268449976, i32* @lr, align 4
  %v2_100038b4 = call i32 @function_10009460(i32 4, i32 4)
  store i32 %v2_100038b4, i32* %r22.global-to-local, align 4
  %v0_100038bc = load i32, i32* @r28, align 4
  %v0_100038c8 = load i32, i32* @r29, align 4
  store i32 %v0_100038c8, i32* %r3.global-to-local, align 4
  store i32 268450000, i32* @lr, align 4
  %v4_100038cc = inttoptr i32 %v0_100038bc to i32*
  %v5_100038cc = call i32 @function_100006a8(i32 %v0_100038c8, i32* %v4_100038cc, i32 2, i32 0)
  %v5_100038dc = trunc i32 %v5_100038cc to i8
  %v0_100038e4 = load i32, i32* @r28, align 4
  %v0_100038e8 = load i32, i32* @r29, align 4
  store i32 %v0_100038e8, i32* %r3.global-to-local, align 4
  store i32 268450032, i32* @lr, align 4
  %v4_100038ec = inttoptr i32 %v0_100038e4 to i32*
  %v5_100038ec = call i32 @function_100006a8(i32 %v0_100038e8, i32* %v4_100038ec, i32 3, i32 65535)
  %v0_100038f0 = load i32, i32* @r28, align 4
  store i32 %v5_100038ec, i32* %r18.global-to-local, align 4
  %v0_10003900 = load i32, i32* @r29, align 4
  store i32 %v0_10003900, i32* %r3.global-to-local, align 4
  store i32 268450056, i32* @lr, align 4
  %v4_10003904 = inttoptr i32 %v0_100038f0 to i32*
  %v5_10003904 = call i32 @function_100006a8(i32 %v0_10003900, i32* %v4_10003904, i32 4, i32 64)
  %v0_10003908 = load i32, i32* @r28, align 4
  %v5_10003914 = trunc i32 %v5_10003904 to i8
  %v0_1000391c = load i32, i32* @r29, align 4
  store i32 %v0_1000391c, i32* %r3.global-to-local, align 4
  store i32 268450084, i32* @lr, align 4
  %v4_10003920 = inttoptr i32 %v0_10003908 to i32*
  %v5_10003920 = call i32 @function_100006a8(i32 %v0_1000391c, i32* %v4_10003920, i32 5, i32 0)
  %v0_10003930 = load i32, i32* @r28, align 4
  %v1_10003934 = urem i32 %v5_10003920, 256
  store i32 %v1_10003934, i32* @r31, align 4
  %v0_10003938 = load i32, i32* @r29, align 4
  store i32 %v0_10003938, i32* %r3.global-to-local, align 4
  store i32 268450112, i32* @lr, align 4
  %v4_1000393c = inttoptr i32 %v0_10003930 to i32*
  %v5_1000393c = call i32 @function_100006a8(i32 %v0_10003938, i32* %v4_1000393c, i32 6, i32 65535)
  %v0_10003944 = load i32, i32* @r28, align 4
  store i32 %v5_1000393c, i32* %r19.global-to-local, align 4
  %v0_10003954 = load i32, i32* @r29, align 4
  store i32 %v0_10003954, i32* %r3.global-to-local, align 4
  store i32 268450140, i32* @lr, align 4
  %v4_10003958 = inttoptr i32 %v0_10003944 to i32*
  %v5_10003958 = call i32 @function_100006a8(i32 %v0_10003954, i32* %v4_10003958, i32 7, i32 65535)
  %v0_10003960 = load i32, i32* @r28, align 4
  store i32 %v5_10003958, i32* %r20.global-to-local, align 4
  %v0_10003970 = load i32, i32* @r29, align 4
  store i32 %v0_10003970, i32* %r3.global-to-local, align 4
  store i32 268450168, i32* @lr, align 4
  %v4_10003974 = inttoptr i32 %v0_10003960 to i32*
  %v5_10003974 = call i32 @function_100006a8(i32 %v0_10003970, i32* %v4_10003974, i32 17, i32 65535)
  %v0_1000397c = load i32, i32* @r28, align 4
  store i32 %v5_10003974, i32* %r15.global-to-local, align 4
  %v0_1000398c = load i32, i32* @r29, align 4
  store i32 %v0_1000398c, i32* %r3.global-to-local, align 4
  store i32 268450196, i32* @lr, align 4
  %v4_10003990 = inttoptr i32 %v0_1000397c to i32*
  %v5_10003990 = call i32 @function_100006a8(i32 %v0_1000398c, i32* %v4_10003990, i32 18, i32 65535)
  %v0_10003994 = load i32, i32* @r28, align 4
  store i32 %v5_10003990, i32* %r17.global-to-local, align 4
  %v0_100039a4 = load i32, i32* @r29, align 4
  store i32 %v0_100039a4, i32* %r3.global-to-local, align 4
  store i32 268450220, i32* @lr, align 4
  %v4_100039a8 = inttoptr i32 %v0_10003994 to i32*
  %v5_100039a8 = call i32 @function_100006a8(i32 %v0_100039a4, i32* %v4_100039a8, i32 11, i32 0)
  %v0_100039ac = load i32, i32* @r28, align 4
  %v0_100039bc = load i32, i32* @r29, align 4
  store i32 %v0_100039bc, i32* %r3.global-to-local, align 4
  store i32 268450244, i32* @lr, align 4
  %v4_100039c0 = inttoptr i32 %v0_100039ac to i32*
  %v5_100039c0 = call i32 @function_100006a8(i32 %v0_100039bc, i32* %v4_100039c0, i32 12, i32 1)
  %v0_100039c4 = load i32, i32* @r28, align 4
  store i32 %v5_100039c0, i32* %r14.global-to-local, align 4
  %v0_100039d4 = load i32, i32* @r29, align 4
  store i32 %v0_100039d4, i32* %r3.global-to-local, align 4
  store i32 268450268, i32* @lr, align 4
  %v4_100039d8 = inttoptr i32 %v0_100039c4 to i32*
  %v5_100039d8 = call i32 @function_100006a8(i32 %v0_100039d4, i32* %v4_100039d8, i32 13, i32 0)
  %v0_100039dc = load i32, i32* @r28, align 4
  store i32 %v5_100039d8, i32* %r24.global-to-local, align 4
  %v0_100039ec = load i32, i32* @r29, align 4
  store i32 %v0_100039ec, i32* %r3.global-to-local, align 4
  store i32 268450292, i32* @lr, align 4
  %v4_100039f0 = inttoptr i32 %v0_100039dc to i32*
  %v5_100039f0 = call i32 @function_100006a8(i32 %v0_100039ec, i32* %v4_100039f0, i32 14, i32 0)
  %v0_100039f4 = load i32, i32* @r28, align 4
  store i32 %v5_100039f0, i32* %r27.global-to-local, align 4
  %v0_10003a04 = load i32, i32* @r29, align 4
  store i32 %v0_10003a04, i32* %r3.global-to-local, align 4
  store i32 268450316, i32* @lr, align 4
  %v4_10003a08 = inttoptr i32 %v0_100039f4 to i32*
  %v5_10003a08 = call i32 @function_100006a8(i32 %v0_10003a04, i32* %v4_10003a08, i32 15, i32 0)
  %v0_10003a0c = load i32, i32* @r28, align 4
  store i32 %v5_10003a08, i32* %r26.global-to-local, align 4
  %v0_10003a1c = load i32, i32* @r29, align 4
  store i32 %v0_10003a1c, i32* %r3.global-to-local, align 4
  store i32 268450340, i32* @lr, align 4
  %v4_10003a20 = inttoptr i32 %v0_10003a0c to i32*
  %v5_10003a20 = call i32 @function_100006a8(i32 %v0_10003a1c, i32* %v4_10003a20, i32 16, i32 0)
  %v0_10003a24 = load i32, i32* @r28, align 4
  store i32 %v5_10003a20, i32* %r30.global-to-local, align 4
  %v0_10003a34 = load i32, i32* @r29, align 4
  store i32 %v0_10003a34, i32* %r3.global-to-local, align 4
  store i32 268450364, i32* @lr, align 4
  %v4_10003a38 = inttoptr i32 %v0_10003a24 to i32*
  %v5_10003a38 = call i32 @function_100006a8(i32 %v0_10003a34, i32* %v4_10003a38, i32 0, i32 512)
  %v0_10003a3c = load i32, i32* @r28, align 4
  store i32 %v5_10003a38, i32* %r16.global-to-local, align 4
  %v0_10003a4c = load i32, i32* @r29, align 4
  store i32 %v0_10003a4c, i32* %r3.global-to-local, align 4
  store i32 268450388, i32* @lr, align 4
  %v4_10003a50 = inttoptr i32 %v0_10003a3c to i32*
  %v5_10003a50 = call i32 @function_100006a8(i32 %v0_10003a4c, i32* %v4_10003a50, i32 1, i32 1)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10003a58 = load i32, i32* @global_var_1001b500.16, align 4
  %v1_10003a5c = urem i32 %v5_10003a50, 256
  %v0_10003a60 = load i32, i32* @r28, align 4
  %v0_10003a6c = load i32, i32* @r29, align 4
  store i32 %v0_10003a6c, i32* %r3.global-to-local, align 4
  store i32 268450420, i32* @lr, align 4
  %v5_10003a70 = inttoptr i32 %v0_10003a60 to i32*
  %v6_10003a70 = call i32 @function_10000628(i32 %v0_10003a6c, i32* %v5_10003a70, i32 25, i32 %v3_10003a58, i32 268566528)
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268450440, i32* @lr, align 4
  %v3_10003a84 = call i32 @function_10009104(i32 2, i32 3, i32 6)
  store i32 %v3_10003a84, i32* %r3.global-to-local, align 4
  %v3_10003a88 = icmp eq i32 %v3_10003a84, -1
  store i32 %v3_10003a84, i32* %r23.global-to-local, align 4
  br i1 %v3_10003a88, label %dec_label_pc_10003dc8, label %dec_label_pc_10003a94

dec_label_pc_10003a94:                            ; preds = %dec_label_pc_10003844
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10003aa0 = ptrtoint i32* %stack_var_-136 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-136, align 4
  store i32 268450480, i32* @lr, align 4
  %v4_10003aac = call i32 @function_100090c8(i32 0, i32 3, i32 %v2_10003aa0, i32 4)
  store i32 %v4_10003aac, i32* %r3.global-to-local, align 4
  %v3_10003ab0 = icmp eq i32 %v4_10003aac, -1
  br i1 %v3_10003ab0, label %dec_label_pc_10003dc0, label %dec_label_pc_10003ab8

dec_label_pc_10003ab8:                            ; preds = %dec_label_pc_10003a94
  %v0_10003ab8 = load i32, i32* %r21.global-to-local, align 4
  %v1_10003ab8 = icmp slt i32 %v0_10003ab8, 0
  %v3_10003ab8 = icmp eq i32 %v0_10003ab8, 0
  store i1 %v1_10003ab8, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10003ab8, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-136, align 4
  %v0_10003ac4 = load i32, i32* %r18.global-to-local, align 4
  %v1_10003ac4 = urem i32 %v0_10003ac4, 65536
  store i32 %v1_10003ac4, i32* %r18.global-to-local, align 4
  %v0_10003ac8 = load i32, i32* %r19.global-to-local, align 4
  %v1_10003ac8 = urem i32 %v0_10003ac8, 65536
  store i32 %v1_10003ac8, i32* %r19.global-to-local, align 4
  %v0_10003acc = load i32, i32* %r20.global-to-local, align 4
  %v1_10003acc = urem i32 %v0_10003acc, 65536
  store i32 %v1_10003acc, i32* %r20.global-to-local, align 4
  %tmp40 = icmp slt i32 %v0_10003ab8, 1
  br i1 %tmp40, label %dec_label_pc_10003da0, label %dec_label_pc_10003ad4

dec_label_pc_10003ad4:                            ; preds = %dec_label_pc_10003ab8
  %v0_10003ad8 = load i32, i32* %r24.global-to-local, align 4
  %v1_10003ad8 = urem i32 %v0_10003ad8, 256
  %v0_10003adc = load i32, i32* %r16.global-to-local, align 4
  %v1_10003adc = add i32 %v0_10003adc, 40
  store i32 %v1_10003adc, i32* %r24.global-to-local, align 4
  %v3_10003ae0 = icmp eq i32 %v1_10003ad8, 0
  store i1 %v3_10003ae0, i1* %cr3_eq.global-to-local, align 1
  %v1_10003ae4 = urem i32 %v5_100039a8, 2
  store i32 %v1_10003ae4, i32* %r9.global-to-local, align 4
  %v0_10003ae8 = load i32, i32* %r26.global-to-local, align 4
  %v1_10003ae8 = urem i32 %v0_10003ae8, 2
  store i32 %v1_10003ae8, i32* %r28.global-to-local, align 4
  %v1_10003aec = urem i32 %v0_10003ad8, 2
  store i32 %v1_10003aec, i32* %r26.global-to-local, align 4
  %v1_10003af0 = urem i32 %v1_10003adc, 65536
  store i32 %v1_10003af0, i32* %r0.global-to-local, align 4
  %v0_10003af8 = load i32, i32* @r31, align 4
  %v3_10003af8 = icmp eq i32 %v0_10003af8, 0
  store i1 %v3_10003af8, i1* %cr2_eq.global-to-local, align 1
  %v5_10003afc = trunc i32 %v1_10003adc to i16
  %v0_10003b00 = load i32, i32* %r14.global-to-local, align 4
  %v1_10003b00 = urem i32 %v0_10003b00, 2
  store i32 %v1_10003b00, i32* %r14.global-to-local, align 4
  %v0_10003b04 = load i32, i32* %r27.global-to-local, align 4
  %v1_10003b04 = urem i32 %v0_10003b04, 2
  store i32 %v1_10003b04, i32* %r27.global-to-local, align 4
  %v0_10003b08 = load i32, i32* %r30.global-to-local, align 4
  %v1_10003b08 = urem i32 %v0_10003b08, 2
  %v4_10003b58 = sext i8 %v5_100038dc to i32
  br label %dec_label_pc_10003b10

dec_label_pc_10003b10:                            ; preds = %dec_label_pc_10003bf0, %dec_label_pc_10003ad4
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268450588, i32* @lr, align 4
  %v2_10003b18 = call i32 @function_10009460(i32 1510, i32 1)
  store i32 %v2_10003b18, i32* %r3.global-to-local, align 4
  %v3_10003b1c = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_10003b1c, i32* %r9.global-to-local, align 4
  %v0_10003b20 = load i32, i32* @r31, align 4
  %v1_10003b20 = mul i32 %v0_10003b20, 4
  store i32 %v1_10003b20, i32* %r0.global-to-local, align 4
  %v1_10003b24 = load i32, i32* %r22.global-to-local, align 4
  %v3_10003b24 = add i32 %v1_10003b24, %v1_10003b20
  %v4_10003b24 = inttoptr i32 %v3_10003b24 to i32*
  store i32 %v2_10003b18, i32* %v4_10003b24, align 4
  %v0_10003b28 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003b28 = mul i32 %v0_10003b28, 4
  store i32 %v1_10003b28, i32* %r9.global-to-local, align 4
  %v1_10003b2c = load i32, i32* %r22.global-to-local, align 4
  %v2_10003b2c = add i32 %v1_10003b2c, %v1_10003b28
  %v3_10003b2c = inttoptr i32 %v2_10003b2c to i32*
  %v4_10003b2c = load i32, i32* %v3_10003b2c, align 4
  store i32 %v4_10003b2c, i32* @r31, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10003b34 = inttoptr i32 %v4_10003b2c to i32*
  %v2_10003b34 = load i32, i32* %v1_10003b34, align 4
  store i32 %v2_10003b34, i32* %r0.global-to-local, align 4
  %v1_10003b38 = add i32 %v4_10003b2c, 20
  store i32 %v1_10003b38, i32* @r30, align 4
  %v0_10003b3c = load i32, i32* %r18.global-to-local, align 4
  %v1_10003b3c = trunc i32 %v0_10003b3c to i16
  %v3_10003b3c = add i32 %v4_10003b2c, 4
  %v4_10003b3c = inttoptr i32 %v3_10003b3c to i16*
  store i16 %v1_10003b3c, i16* %v4_10003b3c, align 2
  %v1_10003b40 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10003b40, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10003b48 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v1_10003b4c = load i32, i32* @r31, align 4
  %v2_10003b4c = inttoptr i32 %v1_10003b4c to i32*
  store i32 %v1_10003b48, i32* %v2_10003b4c, align 4
  %v2_10003b54 = load i32, i32* @r31, align 4
  %v3_10003b54 = add i32 %v2_10003b54, 8
  %v4_10003b54 = inttoptr i32 %v3_10003b54 to i8*
  store i8 %v5_10003914, i8* %v4_10003b54, align 1
  store i32 %v4_10003b58, i32* %r9.global-to-local, align 4
  %v2_10003b5c = load i32, i32* @r31, align 4
  %v3_10003b5c = add i32 %v2_10003b5c, 1
  %v4_10003b5c = inttoptr i32 %v3_10003b5c to i8*
  store i8 %v5_100038dc, i8* %v4_10003b5c, align 1
  store i32 %v1_10003adc, i32* %r0.global-to-local, align 4
  %v2_10003b64 = load i32, i32* @r31, align 4
  %v3_10003b64 = add i32 %v2_10003b64, 2
  %v4_10003b64 = inttoptr i32 %v3_10003b64 to i16*
  store i16 %v5_10003afc, i16* %v4_10003b64, align 2
  %v0_10003b68 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003b68, label %dec_label_pc_10003b74, label %dec_label_pc_10003b6c

dec_label_pc_10003b6c:                            ; preds = %dec_label_pc_10003b10
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10003b70 = load i32, i32* @r31, align 4
  %v3_10003b70 = add i32 %v2_10003b70, 6
  %v4_10003b70 = inttoptr i32 %v3_10003b70 to i16*
  store i16 16384, i16* %v4_10003b70, align 2
  br label %dec_label_pc_10003b74

dec_label_pc_10003b74:                            ; preds = %dec_label_pc_10003b10, %dec_label_pc_10003b6c
  store i32 6, i32* %r0.global-to-local, align 4
  %v0_10003b78 = load i32, i32* %r19.global-to-local, align 4
  %v1_10003b78 = trunc i32 %v0_10003b78 to i16
  %v2_10003b78 = load i32, i32* @r31, align 4
  %v3_10003b78 = add i32 %v2_10003b78, 20
  %v4_10003b78 = inttoptr i32 %v3_10003b78 to i16*
  store i16 %v1_10003b78, i16* %v4_10003b78, align 2
  %v0_10003b7c = load i32, i32* %r0.global-to-local, align 4
  %v1_10003b7c = trunc i32 %v0_10003b7c to i8
  %v2_10003b7c = load i32, i32* @r31, align 4
  %v3_10003b7c = add i32 %v2_10003b7c, 9
  %v4_10003b7c = inttoptr i32 %v3_10003b7c to i8*
  store i8 %v1_10003b7c, i8* %v4_10003b7c, align 1
  %v0_10003b80 = load i32, i32* %r20.global-to-local, align 4
  %v1_10003b80 = trunc i32 %v0_10003b80 to i16
  %v2_10003b80 = load i32, i32* @r30, align 4
  %v3_10003b80 = add i32 %v2_10003b80, 2
  %v4_10003b80 = inttoptr i32 %v3_10003b80 to i16*
  store i16 %v1_10003b80, i16* %v4_10003b80, align 2
  %v1_10003b88 = load i32, i32* @r31, align 4
  %v2_10003b88 = add i32 %v1_10003b88, 12
  %v3_10003b88 = inttoptr i32 %v2_10003b88 to i32*
  store i32 %v6_10003a70, i32* %v3_10003b88, align 4
  %v3_10003b8c = load i32, i32* %stack_var_-136, align 4
  %v1_10003b90 = mul i32 %v3_10003b8c, 24
  %v1_10003b94 = load i32, i32* %r25.global-to-local, align 4
  %v2_10003b94 = add i32 %v1_10003b94, %v1_10003b90
  store i32 %v2_10003b94, i32* %r9.global-to-local, align 4
  %v1_10003b98 = add i32 %v2_10003b94, 16
  %v2_10003b98 = inttoptr i32 %v1_10003b98 to i32*
  %v3_10003b98 = load i32, i32* %v2_10003b98, align 4
  store i32 %v3_10003b98, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10003ba0 = load i32, i32* @r31, align 4
  %v2_10003ba0 = add i32 %v1_10003ba0, 16
  %v3_10003ba0 = inttoptr i32 %v2_10003ba0 to i32*
  store i32 %v3_10003b98, i32* %v3_10003ba0, align 4
  %v0_10003ba4 = load i32, i32* %r15.global-to-local, align 4
  %v1_10003ba4 = load i32, i32* @r30, align 4
  %v2_10003ba4 = add i32 %v1_10003ba4, 4
  %v3_10003ba4 = inttoptr i32 %v2_10003ba4 to i32*
  store i32 %v0_10003ba4, i32* %v3_10003ba4, align 4
  %v0_10003ba8 = load i32, i32* @r30, align 4
  %v1_10003ba8 = add i32 %v0_10003ba8, 12
  %v2_10003ba8 = inttoptr i32 %v1_10003ba8 to i32*
  %v3_10003ba8 = load i32, i32* %v2_10003ba8, align 4
  store i32 %v3_10003ba8, i32* %r0.global-to-local, align 4
  %v1_10003bac = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  store i32 %v1_10003bac, i32* %r0.global-to-local, align 4
  store i32 %v1_10003ae4, i32* %r9.global-to-local, align 4
  %v1_10003bb4 = call i32 @__asm_rlwimi(i32 %v1_10003ae4, i32 21, i32 10, i32 10)
  store i32 %v1_10003bb4, i32* %r0.global-to-local, align 4
  %v1_10003bb8 = call i32 @__asm_rlwimi(i32 %v1_10003b00, i32 20, i32 11, i32 11)
  store i32 %v1_10003bb8, i32* %r0.global-to-local, align 4
  %v1_10003bbc = call i32 @__asm_rlwimi(i32 %v1_10003aec, i32 19, i32 12, i32 12)
  store i32 %v1_10003bbc, i32* %r0.global-to-local, align 4
  %v1_10003bc0 = call i32 @__asm_rlwimi(i32 %v1_10003b04, i32 18, i32 13, i32 13)
  store i32 %v1_10003bc0, i32* %r0.global-to-local, align 4
  %v1_10003bc4 = call i32 @__asm_rlwimi(i32 %v1_10003ae8, i32 17, i32 14, i32 14)
  store i32 %v1_10003bc4, i32* %r0.global-to-local, align 4
  %v1_10003bc8 = call i32 @__asm_rlwimi(i32 %v1_10003b08, i32 16, i32 15, i32 15)
  store i32 %v1_10003bc8, i32* %r0.global-to-local, align 4
  %v1_10003bcc = load i32, i32* @r30, align 4
  %v2_10003bcc = add i32 %v1_10003bcc, 12
  %v3_10003bcc = inttoptr i32 %v2_10003bcc to i32*
  store i32 %v1_10003bc8, i32* %v3_10003bcc, align 4
  %v0_10003bd0 = call i32 @function_10005928()
  %v1_10003bd0 = trunc i32 %v0_10003bd0 to i16
  %v0_10003bd4 = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_10003bd4, i32* @r4, align 4
  %v3_10003bd8 = load i32, i32* @r30, align 4
  %v4_10003bd8 = add i32 %v3_10003bd8, 14
  %v5_10003bd8 = inttoptr i32 %v4_10003bd8 to i16*
  store i16 %v1_10003bd0, i16* %v5_10003bd8, align 2
  %v0_10003bdc = load i32, i32* @r31, align 4
  %v1_10003bdc = add i32 %v0_10003bdc, 40
  store i32 %v1_10003bdc, i32* @r3, align 4
  %v0_10003be0 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003be0, label %dec_label_pc_10003bf0, label %dec_label_pc_10003be4

dec_label_pc_10003be4:                            ; preds = %dec_label_pc_10003b74
  %v0_10003be4 = load i32, i32* @r30, align 4
  %v1_10003be4 = add i32 %v0_10003be4, 12
  %v2_10003be4 = inttoptr i32 %v1_10003be4 to i32*
  %v3_10003be4 = load i32, i32* %v2_10003be4, align 4
  %v1_10003be8 = or i32 %v3_10003be4, 524288
  store i32 %v1_10003be8, i32* %r0.global-to-local, align 4
  store i32 %v1_10003be8, i32* %v2_10003be4, align 4
  br label %dec_label_pc_10003bf0

dec_label_pc_10003bf0:                            ; preds = %dec_label_pc_10003b74, %dec_label_pc_10003be4
  %v0_10003bf0 = call i32 @function_10005afc()
  store i32 %v0_10003bf0, i32* %r3.global-to-local, align 4
  %v3_10003bf4 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_10003bf4, i32* %r9.global-to-local, align 4
  %v1_10003bf8 = add i32 %v3_10003bf4, 1
  %v1_10003bfc = load i32, i32* %r21.global-to-local, align 4
  %v2_10003bfc = icmp slt i32 %v1_10003bf8, %v1_10003bfc
  store i32 %v1_10003bf8, i32* %stack_var_-136, align 4
  br i1 %v2_10003bfc, label %dec_label_pc_10003b10, label %dec_label_pc_10003c08

dec_label_pc_10003c08:                            ; preds = %dec_label_pc_10003bf0
  store i32 %v6_10003a70, i32* %r0.global-to-local, align 4
  %v0_10003c0c = load i32, i32* %r16.global-to-local, align 4
  %v1_10003c0c = add i32 %v0_10003c0c, 20
  store i32 %v1_10003c0c, i32* @r30, align 4
  store i32 %v1_10003a5c, i32* %r9.global-to-local, align 4
  %v3_10003c14 = icmp eq i32 %v6_10003a70, -1
  store i1 %v3_10003c14, i1* %cr2_eq.global-to-local, align 1
  %v3_10003c18 = icmp eq i32 %v1_10003a5c, 0
  store i1 %v3_10003c18, i1* %cr3_eq.global-to-local, align 1
  %v0_10003c1c.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10003c1c.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10003c1c.preheader

dec_label_pc_10003c1c.preheader:                  ; preds = %dec_label_pc_10003cfc, %dec_label_pc_10003da0, %dec_label_pc_10003c08
  %v1_10003c1c = phi i1 [ %v1_10003ab8, %dec_label_pc_10003da0 ], [ %v1_10003c1c.pre, %dec_label_pc_10003c08 ], [ %v1_10003cfc, %dec_label_pc_10003cfc ]
  %v0_10003c1c = phi i1 [ %v3_10003ab8, %dec_label_pc_10003da0 ], [ %v0_10003c1c.pre, %dec_label_pc_10003c08 ], [ %v0_10003cfc, %dec_label_pc_10003cfc ]
  %v2_10003c1c = or i1 %v1_10003c1c, %v0_10003c1c
  br label %dec_label_pc_10003c1c

dec_label_pc_10003c1c:                            ; preds = %dec_label_pc_10003c1c.preheader, %dec_label_pc_10003c1c
  br i1 %v2_10003c1c, label %dec_label_pc_10003c1c, label %dec_label_pc_10003c20

dec_label_pc_10003c20:                            ; preds = %dec_label_pc_10003c1c, %dec_label_pc_10003cfc
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10003c24 = load i32, i32* @r30, align 4
  %v1_10003c24 = urem i32 %v0_10003c24, 65536
  store i32 %v1_10003c24, i32* %r27.global-to-local, align 4
  store i32 0, i32* %stack_var_-136, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10003c34

dec_label_pc_10003c34:                            ; preds = %dec_label_pc_10003c8c, %dec_label_pc_10003c20
  %v0_10003c34 = phi i32 [ %v1_10003cec, %dec_label_pc_10003c8c ], [ 0, %dec_label_pc_10003c20 ]
  %v1_10003c34 = mul i32 %v0_10003c34, 24
  store i32 %v1_10003c34, i32* %r0.global-to-local, align 4
  %v1_10003c38 = mul i32 %v0_10003c34, 4
  %v1_10003c3c = load i32, i32* %r22.global-to-local, align 4
  %v2_10003c3c = add i32 %v1_10003c3c, %v1_10003c38
  %v3_10003c3c = inttoptr i32 %v2_10003c3c to i32*
  %v4_10003c3c = load i32, i32* %v3_10003c3c, align 4
  store i32 %v4_10003c3c, i32* %r28.global-to-local, align 4
  %v1_10003c40 = load i32, i32* %r25.global-to-local, align 4
  %v2_10003c40 = add i32 %v1_10003c40, %v1_10003c34
  %v1_10003c44 = add i32 %v2_10003c40, 20
  %v2_10003c44 = inttoptr i32 %v1_10003c44 to i8*
  %v3_10003c44 = load i8, i8* %v2_10003c44, align 1
  %v4_10003c44 = zext i8 %v3_10003c44 to i32
  store i32 %v4_10003c44, i32* %r9.global-to-local, align 4
  %v1_10003c48 = add i32 %v4_10003c3c, 20
  store i32 %v1_10003c48, i32* @r31, align 4
  %tmp41 = icmp ult i8 %v3_10003c44, 32
  br i1 %tmp41, label %dec_label_pc_10003d04, label %dec_label_pc_10003c54

dec_label_pc_10003c54:                            ; preds = %dec_label_pc_10003c34
  %v0_10003c54 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003c54, label %dec_label_pc_10003d2c, label %dec_label_pc_10003c58

dec_label_pc_10003c58:                            ; preds = %dec_label_pc_10003d04, %dec_label_pc_10003c54
  store i32 65535, i32* @r29, align 4
  %v0_10003c60 = load i32, i32* %r18.global-to-local, align 4
  %v4_10003c60 = icmp eq i32 %v0_10003c60, 65535
  br i1 %v4_10003c60, label %dec_label_pc_10003d44, label %dec_label_pc_10003c68

dec_label_pc_10003c68:                            ; preds = %dec_label_pc_10003d2c, %dec_label_pc_10003c58
  %v1_10003c68 = phi i32 [ %v1_10003d3c, %dec_label_pc_10003d2c ], [ 65535, %dec_label_pc_10003c58 ]
  %v0_10003c68 = load i32, i32* %r19.global-to-local, align 4
  %v4_10003c68 = icmp eq i32 %v0_10003c68, %v1_10003c68
  br i1 %v4_10003c68, label %dec_label_pc_10003d54, label %dec_label_pc_10003c70

dec_label_pc_10003c70:                            ; preds = %dec_label_pc_10003d44.dec_label_pc_10003c70_crit_edge, %dec_label_pc_10003c68
  %v1_10003c70 = phi i32 [ %v1_10003c70.pre, %dec_label_pc_10003d44.dec_label_pc_10003c70_crit_edge ], [ %v1_10003c68, %dec_label_pc_10003c68 ]
  %v0_10003c70 = load i32, i32* %r20.global-to-local, align 4
  %v4_10003c70 = icmp eq i32 %v0_10003c70, %v1_10003c70
  br i1 %v4_10003c70, label %dec_label_pc_10003d64, label %dec_label_pc_10003c78

dec_label_pc_10003c78:                            ; preds = %dec_label_pc_10003d54.dec_label_pc_10003c78_crit_edge, %dec_label_pc_10003c70
  %v1_10003c78 = phi i32 [ %v1_10003c78.pre, %dec_label_pc_10003d54.dec_label_pc_10003c78_crit_edge ], [ %v1_10003c70, %dec_label_pc_10003c70 ]
  %v0_10003c78 = load i32, i32* %r15.global-to-local, align 4
  %v4_10003c78 = icmp eq i32 %v0_10003c78, %v1_10003c78
  br i1 %v4_10003c78, label %dec_label_pc_10003d74, label %dec_label_pc_10003c80

dec_label_pc_10003c80:                            ; preds = %dec_label_pc_10003d64.dec_label_pc_10003c80_crit_edge, %dec_label_pc_10003c78
  %v1_10003c80 = phi i32 [ %v1_10003c80.pre, %dec_label_pc_10003d64.dec_label_pc_10003c80_crit_edge ], [ %v1_10003c78, %dec_label_pc_10003c78 ]
  %v0_10003c80 = load i32, i32* %r17.global-to-local, align 4
  %v4_10003c80 = icmp eq i32 %v0_10003c80, %v1_10003c80
  br i1 %v4_10003c80, label %dec_label_pc_10003d84, label %dec_label_pc_10003c88

dec_label_pc_10003c88:                            ; preds = %dec_label_pc_10003d74, %dec_label_pc_10003c80
  %v0_10003c88 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003c88, label %dec_label_pc_10003c8c, label %dec_label_pc_10003d90

dec_label_pc_10003c8c:                            ; preds = %dec_label_pc_10003c88, %dec_label_pc_10003d84, %dec_label_pc_10003d90
  %v0_10003c8c = load i32, i32* %r26.global-to-local, align 4
  %v1_10003c8c = trunc i32 %v0_10003c8c to i16
  %v2_10003c8c = load i32, i32* %r28.global-to-local, align 4
  %v3_10003c8c = add i32 %v2_10003c8c, 10
  %v4_10003c8c = inttoptr i32 %v3_10003c8c to i16*
  store i16 %v1_10003c8c, i16* %v4_10003c8c, align 2
  %v0_10003c94 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003c94, i32* @r3, align 4
  %v2_10003c98 = call i32 @function_100043cc(i32 %v0_10003c94, i32 20)
  %v3_10003c98 = trunc i32 %v2_10003c98 to i16
  %v0_10003c9c = load i32, i32* @r31, align 4
  store i32 %v0_10003c9c, i32* @r4, align 4
  %v4_10003ca0 = add i32 %v0_10003c94, 10
  %v5_10003ca0 = inttoptr i32 %v4_10003ca0 to i16*
  store i16 %v3_10003c98, i16* %v5_10003ca0, align 2
  %v0_10003ca4 = load i32, i32* %r27.global-to-local, align 4
  %v0_10003ca8 = load i32, i32* %r26.global-to-local, align 4
  %v1_10003ca8 = trunc i32 %v0_10003ca8 to i16
  %v2_10003ca8 = load i32, i32* @r31, align 4
  %v3_10003ca8 = add i32 %v2_10003ca8, 16
  %v4_10003ca8 = inttoptr i32 %v3_10003ca8 to i16*
  store i16 %v1_10003ca8, i16* %v4_10003ca8, align 2
  %v0_10003cac = load i32, i32* @r30, align 4
  %v0_10003cb0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003cb0, i32* %r3.global-to-local, align 4
  %v4_10003cb4 = call i32 @function_10004430(i32 %v0_10003cb0, i32 %v0_10003c9c, i32 %v0_10003ca4, i32 %v0_10003cac)
  %v5_10003cb4 = trunc i32 %v4_10003cb4 to i16
  store i32 %v4_10003cb4, i32* %r3.global-to-local, align 4
  %v3_10003cb8 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_10003cb8, i32* %r7.global-to-local, align 4
  %v0_10003cbc = load i32, i32* @r31, align 4
  %v1_10003cbc = add i32 %v0_10003cbc, 2
  %v2_10003cbc = inttoptr i32 %v1_10003cbc to i16*
  %v3_10003cbc = load i16, i16* %v2_10003cbc, align 2
  %v4_10003cbc = zext i16 %v3_10003cbc to i32
  store i32 %v4_10003cbc, i32* %r0.global-to-local, align 4
  %v0_10003cc0 = load i32, i32* %r28.global-to-local, align 4
  %v1_10003cc4 = mul i32 %v3_10003cb8, 24
  store i32 %v1_10003cc4, i32* %r7.global-to-local, align 4
  %v4_10003cc8 = add i32 %v0_10003cbc, 16
  %v5_10003cc8 = inttoptr i32 %v4_10003cc8 to i16*
  store i16 %v5_10003cb4, i16* %v5_10003cc8, align 2
  %v0_10003ccc = load i32, i32* %r24.global-to-local, align 4
  %v0_10003cd0 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10003cd0, i32* %r3.global-to-local, align 4
  %v0_10003cd4 = load i32, i32* %r7.global-to-local, align 4
  %v1_10003cd4 = load i32, i32* %r25.global-to-local, align 4
  %v2_10003cd4 = add i32 %v1_10003cd4, %v0_10003cd4
  store i32 %v2_10003cd4, i32* %r7.global-to-local, align 4
  %v0_10003cdc = load i32, i32* %r0.global-to-local, align 4
  %v1_10003cdc = trunc i32 %v0_10003cdc to i16
  %v3_10003cdc = add i32 %v2_10003cd4, 2
  %v4_10003cdc = inttoptr i32 %v3_10003cdc to i16*
  store i16 %v1_10003cdc, i16* %v4_10003cdc, align 2
  store i32 268451048, i32* @lr, align 4
  %v6_10003ce4 = call i32 @function_10009088(i32 %v0_10003cd0, i32 %v0_10003cc0, i32 %v0_10003ccc, i32 16384, i32 %v2_10003cd4, i32 16)
  store i32 %v6_10003ce4, i32* %r3.global-to-local, align 4
  %v3_10003ce8 = load i32, i32* %stack_var_-136, align 4
  %v1_10003cec = add i32 %v3_10003ce8, 1
  store i32 %v1_10003cec, i32* %r9.global-to-local, align 4
  %v1_10003cf0 = load i32, i32* %r21.global-to-local, align 4
  %v2_10003cf0 = icmp slt i32 %v1_10003cec, %v1_10003cf0
  store i32 %v1_10003cec, i32* %stack_var_-136, align 4
  br i1 %v2_10003cf0, label %dec_label_pc_10003c34, label %dec_label_pc_10003cfc

dec_label_pc_10003cfc:                            ; preds = %dec_label_pc_10003c8c
  %v0_10003cfc = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10003cfc = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10003cfc = or i1 %v0_10003cfc, %v1_10003cfc
  br i1 %v2_10003cfc, label %dec_label_pc_10003c1c.preheader, label %dec_label_pc_10003c20

dec_label_pc_10003d04:                            ; preds = %dec_label_pc_10003c34
  %v1_10003d04 = add i32 %v2_10003c40, 16
  %v2_10003d04 = inttoptr i32 %v1_10003d04 to i32*
  %v3_10003d04 = load i32, i32* %v2_10003d04, align 4
  store i32 %v3_10003d04, i32* %r29.global-to-local, align 4
  %v0_10003d08 = call i32 @function_10005928()
  store i32 %v0_10003d08, i32* %r3.global-to-local, align 4
  %v3_10003d0c = load i32, i32* %stack_var_-136, align 4
  %v1_10003d10 = mul i32 %v3_10003d0c, 24
  %v1_10003d14 = load i32, i32* %r25.global-to-local, align 4
  %v2_10003d14 = add i32 %v1_10003d14, %v1_10003d10
  store i32 %v2_10003d14, i32* %r9.global-to-local, align 4
  %v1_10003d18 = add i32 %v2_10003d14, 20
  %v2_10003d18 = inttoptr i32 %v1_10003d18 to i8*
  %v3_10003d18 = load i8, i8* %v2_10003d18, align 1
  %v4_10003d18 = zext i8 %v3_10003d18 to i32
  store i32 %v4_10003d18, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10003d18, 64
  %v2_10003d1c = zext i8 %tmp to i32
  %v3_10003d1c = lshr i32 %v0_10003d08, %v2_10003d1c
  store i32 %v3_10003d1c, i32* %r3.global-to-local, align 4
  %v0_10003d20 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003d20 = add i32 %v3_10003d1c, %v0_10003d20
  store i32 %v2_10003d20, i32* %r29.global-to-local, align 4
  %v1_10003d24 = load i32, i32* %r28.global-to-local, align 4
  %v2_10003d24 = add i32 %v1_10003d24, 16
  %v3_10003d24 = inttoptr i32 %v2_10003d24 to i32*
  store i32 %v2_10003d20, i32* %v3_10003d24, align 4
  %v0_10003d28 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003d28, label %dec_label_pc_10003d2c, label %dec_label_pc_10003c58

dec_label_pc_10003d2c:                            ; preds = %dec_label_pc_10003d04, %dec_label_pc_10003c54
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10003d30 = call i32 @function_10005928()
  store i32 %v0_10003d30, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_10003d38 = load i32, i32* %r28.global-to-local, align 4
  %v2_10003d38 = add i32 %v1_10003d38, 12
  %v3_10003d38 = inttoptr i32 %v2_10003d38 to i32*
  store i32 %v0_10003d30, i32* %v3_10003d38, align 4
  %v0_10003d3c = load i32, i32* %r18.global-to-local, align 4
  %v1_10003d3c = load i32, i32* @r29, align 4
  %v4_10003d3c = icmp eq i32 %v0_10003d3c, %v1_10003d3c
  br i1 %v4_10003d3c, label %dec_label_pc_10003d44, label %dec_label_pc_10003c68

dec_label_pc_10003d44:                            ; preds = %dec_label_pc_10003d2c, %dec_label_pc_10003c58
  %v0_10003d44 = call i32 @function_10005928()
  %v1_10003d44 = trunc i32 %v0_10003d44 to i16
  store i32 %v0_10003d44, i32* %r3.global-to-local, align 4
  %v0_10003d48 = load i32, i32* %r19.global-to-local, align 4
  %v1_10003d48 = load i32, i32* @r29, align 4
  %v4_10003d48 = icmp eq i32 %v0_10003d48, %v1_10003d48
  %v3_10003d4c = load i32, i32* %r28.global-to-local, align 4
  %v4_10003d4c = add i32 %v3_10003d4c, 4
  %v5_10003d4c = inttoptr i32 %v4_10003d4c to i16*
  store i16 %v1_10003d44, i16* %v5_10003d4c, align 2
  br i1 %v4_10003d48, label %dec_label_pc_10003d54, label %dec_label_pc_10003d44.dec_label_pc_10003c70_crit_edge

dec_label_pc_10003d44.dec_label_pc_10003c70_crit_edge: ; preds = %dec_label_pc_10003d44
  %v1_10003c70.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10003c70

dec_label_pc_10003d54:                            ; preds = %dec_label_pc_10003d44, %dec_label_pc_10003c68
  %v0_10003d54 = call i32 @function_10005928()
  %v1_10003d54 = trunc i32 %v0_10003d54 to i16
  store i32 %v0_10003d54, i32* %r3.global-to-local, align 4
  %v0_10003d58 = load i32, i32* %r20.global-to-local, align 4
  %v1_10003d58 = load i32, i32* @r29, align 4
  %v4_10003d58 = icmp eq i32 %v0_10003d58, %v1_10003d58
  %v3_10003d5c = load i32, i32* %r28.global-to-local, align 4
  %v4_10003d5c = add i32 %v3_10003d5c, 20
  %v5_10003d5c = inttoptr i32 %v4_10003d5c to i16*
  store i16 %v1_10003d54, i16* %v5_10003d5c, align 2
  br i1 %v4_10003d58, label %dec_label_pc_10003d64, label %dec_label_pc_10003d54.dec_label_pc_10003c78_crit_edge

dec_label_pc_10003d54.dec_label_pc_10003c78_crit_edge: ; preds = %dec_label_pc_10003d54
  %v1_10003c78.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10003c78

dec_label_pc_10003d64:                            ; preds = %dec_label_pc_10003d54, %dec_label_pc_10003c70
  %v0_10003d64 = call i32 @function_10005928()
  %v1_10003d64 = trunc i32 %v0_10003d64 to i16
  store i32 %v0_10003d64, i32* %r3.global-to-local, align 4
  %v0_10003d68 = load i32, i32* %r15.global-to-local, align 4
  %v1_10003d68 = load i32, i32* @r29, align 4
  %v4_10003d68 = icmp eq i32 %v0_10003d68, %v1_10003d68
  %v3_10003d6c = load i32, i32* @r31, align 4
  %v4_10003d6c = add i32 %v3_10003d6c, 2
  %v5_10003d6c = inttoptr i32 %v4_10003d6c to i16*
  store i16 %v1_10003d64, i16* %v5_10003d6c, align 2
  br i1 %v4_10003d68, label %dec_label_pc_10003d74, label %dec_label_pc_10003d64.dec_label_pc_10003c80_crit_edge

dec_label_pc_10003d64.dec_label_pc_10003c80_crit_edge: ; preds = %dec_label_pc_10003d64
  %v1_10003c80.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10003c80

dec_label_pc_10003d74:                            ; preds = %dec_label_pc_10003d64, %dec_label_pc_10003c78
  %v0_10003d74 = call i32 @function_10005928()
  store i32 %v0_10003d74, i32* %r3.global-to-local, align 4
  %v0_10003d78 = load i32, i32* %r17.global-to-local, align 4
  %v1_10003d78 = load i32, i32* @r29, align 4
  %v4_10003d78 = icmp eq i32 %v0_10003d78, %v1_10003d78
  %v1_10003d7c = load i32, i32* @r31, align 4
  %v2_10003d7c = add i32 %v1_10003d7c, 4
  %v3_10003d7c = inttoptr i32 %v2_10003d7c to i32*
  store i32 %v0_10003d74, i32* %v3_10003d7c, align 4
  br i1 %v4_10003d78, label %dec_label_pc_10003d84, label %dec_label_pc_10003c88

dec_label_pc_10003d84:                            ; preds = %dec_label_pc_10003d74, %dec_label_pc_10003c80
  %v0_10003d84 = call i32 @function_10005928()
  store i32 %v0_10003d84, i32* %r3.global-to-local, align 4
  %v1_10003d88 = load i32, i32* @r31, align 4
  %v2_10003d88 = add i32 %v1_10003d88, 8
  %v3_10003d88 = inttoptr i32 %v2_10003d88 to i32*
  store i32 %v0_10003d84, i32* %v3_10003d88, align 4
  %v0_10003d8c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003d8c, label %dec_label_pc_10003c8c, label %dec_label_pc_10003d90

dec_label_pc_10003d90:                            ; preds = %dec_label_pc_10003c88, %dec_label_pc_10003d84
  %v0_10003d90 = load i32, i32* %r28.global-to-local, align 4
  %v1_10003d90 = add i32 %v0_10003d90, 40
  store i32 %v1_10003d90, i32* @r3, align 4
  %v0_10003d94 = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_10003d94, i32* @r4, align 4
  %v0_10003d98 = call i32 @function_10005afc()
  store i32 %v0_10003d98, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003c8c

dec_label_pc_10003da0:                            ; preds = %dec_label_pc_10003ab8
  store i32 %v6_10003a70, i32* %r0.global-to-local, align 4
  %v0_10003da4 = load i32, i32* %r16.global-to-local, align 4
  %v1_10003da4 = add i32 %v0_10003da4, 40
  store i32 %v1_10003da4, i32* %r24.global-to-local, align 4
  store i32 %v1_10003a5c, i32* %r9.global-to-local, align 4
  %v1_10003dac = add i32 %v0_10003da4, 20
  store i32 %v1_10003dac, i32* @r30, align 4
  %v3_10003db0 = icmp eq i32 %v6_10003a70, -1
  store i1 %v3_10003db0, i1* %cr2_eq.global-to-local, align 1
  %v3_10003db4 = icmp eq i32 %v1_10003a5c, 0
  store i1 %v3_10003db4, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_10003c1c.preheader

dec_label_pc_10003dc0:                            ; preds = %dec_label_pc_10003a94
  %v0_10003dc0 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10003dc0, i32* %r3.global-to-local, align 4
  store i32 268451272, i32* @lr, align 4
  %v0_10003dc4 = call i32 @function_10008418()
  store i32 %v0_10003dc4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003dc8

dec_label_pc_10003dc8:                            ; preds = %dec_label_pc_10003844, %dec_label_pc_10003dc0
  store i32 %v0_1000385c, i32* %r0.global-to-local, align 4
  %v1_10003ddc = call %0 @__asm_mtcrf(i32 56, i32 %v0_1000384c)
  store i32 %v0_1000389c, i32* %r28.global-to-local, align 4
  store i32 %v0_100038a4, i32* %r29.global-to-local, align 4
  store i32 %v0_100038ac, i32* %r30.global-to-local, align 4
  %v0_10003e24 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10003e24

; uselistorder directives
  uselistorder i32 %v0_10003d64, { 1, 0 }
  uselistorder i32 %v0_10003d54, { 1, 0 }
  uselistorder i32 %v0_10003d44, { 1, 0 }
  uselistorder i32 %v1_10003d3c, { 1, 0 }
  uselistorder i1 %v1_10003cfc, { 1, 0 }
  uselistorder i1 %v0_10003cfc, { 1, 0 }
  uselistorder i32 %v1_10003cec, { 0, 2, 3, 1 }
  uselistorder i32 %v4_10003cb4, { 1, 0 }
  uselistorder i32 %v1_10003b28, { 1, 0 }
  uselistorder i32 %v1_10003b20, { 1, 0 }
  uselistorder i32 %v1_10003b04, { 1, 0 }
  uselistorder i32 %v1_10003b00, { 1, 0 }
  uselistorder i32 %v1_10003aec, { 1, 0 }
  uselistorder i32 %v1_10003ae8, { 1, 0 }
  uselistorder i32 %v1_10003ae4, { 2, 1, 0 }
  uselistorder i32 %v1_10003adc, { 1, 2, 0, 3 }
  uselistorder i32 %v6_10003a70, { 0, 4, 2, 1, 3 }
  uselistorder i32 %v1_10003a5c, { 3, 0, 2, 1 }
  uselistorder i8 %v5_100038dc, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 21, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0, 1 }
  uselistorder i32* %r29.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r28.global-to-local, { 0, 9, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 20, 21, 22, 23, 25, 26, 27, 28, 29 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder i32 ()* @function_10005afc, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 1510, { 0, 5, 1, 6, 2, 7, 3, 8, 4, 9 }
  uselistorder label %dec_label_pc_10003dc8, { 1, 0 }
  uselistorder label %dec_label_pc_10003d90, { 1, 0 }
  uselistorder label %dec_label_pc_10003c8c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10003c20, { 1, 0 }
  uselistorder label %dec_label_pc_10003c1c, { 1, 0 }
  uselistorder label %dec_label_pc_10003c1c.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10003bf0, { 1, 0 }
  uselistorder label %dec_label_pc_10003b74, { 1, 0 }
}

define i32 @function_10003e28(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10003e28:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-120 = alloca i32, align 4
  %v0_10003e2c = load i32, i32* @lr, align 4
  store i32 %v0_10003e2c, i32* %r0.global-to-local, align 4
  %v0_10003e30 = call i32 @__asm_mfcr()
  store i32 %v0_10003e30, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r27.global-to-local, align 4
  %v0_10003e40 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10003e30, i32* %r24.global-to-local, align 4
  %v0_10003e80 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10003e88 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_10003e94 = load i32, i32* @r31, align 4
  store i32 268451484, i32* @lr, align 4
  %v2_10003e98 = call i32 @function_10009460(i32 4, i32 4)
  store i32 %v2_10003e98, i32* %r25.global-to-local, align 4
  %v0_10003ea0 = load i32, i32* @r28, align 4
  %v0_10003eac = load i32, i32* @r29, align 4
  store i32 %v0_10003eac, i32* %r3.global-to-local, align 4
  store i32 268451508, i32* @lr, align 4
  %v4_10003eb0 = inttoptr i32 %v0_10003ea0 to i32*
  %v5_10003eb0 = call i32 @function_100006a8(i32 %v0_10003eac, i32* %v4_10003eb0, i32 2, i32 0)
  %v5_10003ec0 = trunc i32 %v5_10003eb0 to i8
  %v0_10003ec8 = load i32, i32* @r28, align 4
  %v0_10003ecc = load i32, i32* @r29, align 4
  store i32 %v0_10003ecc, i32* %r3.global-to-local, align 4
  store i32 268451540, i32* @lr, align 4
  %v4_10003ed0 = inttoptr i32 %v0_10003ec8 to i32*
  %v5_10003ed0 = call i32 @function_100006a8(i32 %v0_10003ecc, i32* %v4_10003ed0, i32 3, i32 65535)
  %v0_10003ed4 = load i32, i32* @r28, align 4
  store i32 %v5_10003ed0, i32* %r21.global-to-local, align 4
  %v0_10003ee4 = load i32, i32* @r29, align 4
  store i32 %v0_10003ee4, i32* %r3.global-to-local, align 4
  store i32 268451564, i32* @lr, align 4
  %v4_10003ee8 = inttoptr i32 %v0_10003ed4 to i32*
  %v5_10003ee8 = call i32 @function_100006a8(i32 %v0_10003ee4, i32* %v4_10003ee8, i32 4, i32 64)
  %v0_10003eec = load i32, i32* @r28, align 4
  %v5_10003ef8 = trunc i32 %v5_10003ee8 to i8
  %v0_10003f00 = load i32, i32* @r29, align 4
  store i32 %v0_10003f00, i32* %r3.global-to-local, align 4
  store i32 268451592, i32* @lr, align 4
  %v4_10003f04 = inttoptr i32 %v0_10003eec to i32*
  %v5_10003f04 = call i32 @function_100006a8(i32 %v0_10003f00, i32* %v4_10003f04, i32 5, i32 1)
  %v0_10003f14 = load i32, i32* @r28, align 4
  %v1_10003f18 = urem i32 %v5_10003f04, 256
  store i32 %v1_10003f18, i32* @r31, align 4
  %v0_10003f1c = load i32, i32* @r29, align 4
  store i32 %v0_10003f1c, i32* %r3.global-to-local, align 4
  store i32 268451620, i32* @lr, align 4
  %v4_10003f20 = inttoptr i32 %v0_10003f14 to i32*
  %v5_10003f20 = call i32 @function_100006a8(i32 %v0_10003f1c, i32* %v4_10003f20, i32 6, i32 65535)
  %v0_10003f28 = load i32, i32* @r28, align 4
  store i32 %v5_10003f20, i32* %r22.global-to-local, align 4
  %v0_10003f38 = load i32, i32* @r29, align 4
  store i32 %v0_10003f38, i32* %r3.global-to-local, align 4
  store i32 268451648, i32* @lr, align 4
  %v4_10003f3c = inttoptr i32 %v0_10003f28 to i32*
  %v5_10003f3c = call i32 @function_100006a8(i32 %v0_10003f38, i32* %v4_10003f3c, i32 7, i32 65535)
  %v0_10003f44 = load i32, i32* @r28, align 4
  store i32 %v5_10003f3c, i32* %r23.global-to-local, align 4
  %v0_10003f54 = load i32, i32* @r29, align 4
  store i32 %v0_10003f54, i32* %r3.global-to-local, align 4
  store i32 268451676, i32* @lr, align 4
  %v4_10003f58 = inttoptr i32 %v0_10003f44 to i32*
  %v5_10003f58 = call i32 @function_100006a8(i32 %v0_10003f54, i32* %v4_10003f58, i32 17, i32 65535)
  %v0_10003f5c = load i32, i32* @r28, align 4
  store i32 %v5_10003f58, i32* %r19.global-to-local, align 4
  %v0_10003f6c = load i32, i32* @r29, align 4
  store i32 %v0_10003f6c, i32* %r3.global-to-local, align 4
  store i32 268451700, i32* @lr, align 4
  %v4_10003f70 = inttoptr i32 %v0_10003f5c to i32*
  %v5_10003f70 = call i32 @function_100006a8(i32 %v0_10003f6c, i32* %v4_10003f70, i32 18, i32 0)
  %v0_10003f74 = load i32, i32* @r28, align 4
  store i32 %v5_10003f70, i32* %r20.global-to-local, align 4
  %v0_10003f84 = load i32, i32* @r29, align 4
  store i32 %v0_10003f84, i32* %r3.global-to-local, align 4
  store i32 268451724, i32* @lr, align 4
  %v4_10003f88 = inttoptr i32 %v0_10003f74 to i32*
  %v5_10003f88 = call i32 @function_100006a8(i32 %v0_10003f84, i32* %v4_10003f88, i32 11, i32 0)
  %v0_10003f8c = load i32, i32* @r28, align 4
  store i32 %v5_10003f88, i32* %r14.global-to-local, align 4
  %v0_10003f9c = load i32, i32* @r29, align 4
  store i32 %v0_10003f9c, i32* %r3.global-to-local, align 4
  store i32 268451748, i32* @lr, align 4
  %v4_10003fa0 = inttoptr i32 %v0_10003f8c to i32*
  %v5_10003fa0 = call i32 @function_100006a8(i32 %v0_10003f9c, i32* %v4_10003fa0, i32 12, i32 0)
  %v0_10003fa4 = load i32, i32* @r28, align 4
  store i32 %v5_10003fa0, i32* %r17.global-to-local, align 4
  %v0_10003fb4 = load i32, i32* @r29, align 4
  store i32 %v0_10003fb4, i32* %r3.global-to-local, align 4
  store i32 268451772, i32* @lr, align 4
  %v4_10003fb8 = inttoptr i32 %v0_10003fa4 to i32*
  %v5_10003fb8 = call i32 @function_100006a8(i32 %v0_10003fb4, i32* %v4_10003fb8, i32 13, i32 0)
  %v0_10003fbc = load i32, i32* @r28, align 4
  store i32 %v5_10003fb8, i32* %r18.global-to-local, align 4
  %v0_10003fcc = load i32, i32* @r29, align 4
  store i32 %v0_10003fcc, i32* %r3.global-to-local, align 4
  store i32 268451796, i32* @lr, align 4
  %v4_10003fd0 = inttoptr i32 %v0_10003fbc to i32*
  %v5_10003fd0 = call i32 @function_100006a8(i32 %v0_10003fcc, i32* %v4_10003fd0, i32 14, i32 0)
  %v0_10003fd4 = load i32, i32* @r28, align 4
  %v0_10003fe4 = load i32, i32* @r29, align 4
  store i32 %v0_10003fe4, i32* %r3.global-to-local, align 4
  store i32 268451820, i32* @lr, align 4
  %v4_10003fe8 = inttoptr i32 %v0_10003fd4 to i32*
  %v5_10003fe8 = call i32 @function_100006a8(i32 %v0_10003fe4, i32* %v4_10003fe8, i32 15, i32 1)
  %v0_10003fec = load i32, i32* @r28, align 4
  store i32 %v5_10003fe8, i32* %r16.global-to-local, align 4
  %v0_10003ffc = load i32, i32* @r29, align 4
  store i32 %v0_10003ffc, i32* %r3.global-to-local, align 4
  store i32 268451844, i32* @lr, align 4
  %v4_10004000 = inttoptr i32 %v0_10003fec to i32*
  %v5_10004000 = call i32 @function_100006a8(i32 %v0_10003ffc, i32* %v4_10004000, i32 16, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10004008 = load i32, i32* @global_var_1001b500.16, align 4
  %v0_1000400c = load i32, i32* @r28, align 4
  store i32 %v5_10004000, i32* %r30.global-to-local, align 4
  %v0_10004018 = load i32, i32* @r29, align 4
  store i32 %v0_10004018, i32* %r3.global-to-local, align 4
  store i32 268451872, i32* @lr, align 4
  %v5_1000401c = inttoptr i32 %v0_1000400c to i32*
  %v6_1000401c = call i32 @function_10000628(i32 %v0_10004018, i32* %v5_1000401c, i32 25, i32 %v3_10004008, i32 268566528)
  store i32 %v6_1000401c, i32* %r15.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268451892, i32* @lr, align 4
  %v3_10004030 = call i32 @function_10009104(i32 2, i32 3, i32 6)
  store i32 %v3_10004030, i32* %r3.global-to-local, align 4
  %v3_10004034 = icmp eq i32 %v3_10004030, -1
  store i32 %v3_10004030, i32* %r26.global-to-local, align 4
  br i1 %v3_10004034, label %dec_label_pc_1000436c, label %dec_label_pc_10004040

dec_label_pc_10004040:                            ; preds = %dec_label_pc_10003e28
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_1000404c = ptrtoint i32* %stack_var_-120 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-120, align 4
  store i32 268451932, i32* @lr, align 4
  %v4_10004058 = call i32 @function_100090c8(i32 0, i32 3, i32 %v2_1000404c, i32 4)
  store i32 %v4_10004058, i32* %r3.global-to-local, align 4
  %v3_1000405c = icmp eq i32 %v4_10004058, -1
  br i1 %v3_1000405c, label %dec_label_pc_10004364, label %dec_label_pc_10004064

dec_label_pc_10004064:                            ; preds = %dec_label_pc_10004040
  %v0_10004064 = load i32, i32* %r24.global-to-local, align 4
  %v1_10004064 = icmp slt i32 %v0_10004064, 0
  %v3_10004064 = icmp eq i32 %v0_10004064, 0
  store i1 %v1_10004064, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10004064, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-120, align 4
  %v0_10004070 = load i32, i32* %r21.global-to-local, align 4
  %v1_10004070 = urem i32 %v0_10004070, 65536
  store i32 %v1_10004070, i32* %r21.global-to-local, align 4
  %v0_10004074 = load i32, i32* %r22.global-to-local, align 4
  %v1_10004074 = urem i32 %v0_10004074, 65536
  store i32 %v1_10004074, i32* %r22.global-to-local, align 4
  %v0_10004078 = load i32, i32* %r23.global-to-local, align 4
  %v1_10004078 = urem i32 %v0_10004078, 65536
  store i32 %v1_10004078, i32* %r23.global-to-local, align 4
  %v0_1000407c = load i32, i32* %r14.global-to-local, align 4
  %v1_1000407c = urem i32 %v0_1000407c, 256
  store i32 %v1_1000407c, i32* %r14.global-to-local, align 4
  %tmp40 = icmp slt i32 %v0_10004064, 1
  br i1 %tmp40, label %dec_label_pc_100041e0, label %dec_label_pc_10004084

dec_label_pc_10004084:                            ; preds = %dec_label_pc_10004064
  store i32 %v5_10003fd0, i32* %r0.global-to-local, align 4
  %v0_10004088 = load i32, i32* @r31, align 4
  %v3_10004088 = icmp eq i32 %v0_10004088, 0
  store i1 %v3_10004088, i1* %cr3_eq.global-to-local, align 1
  %v0_1000408c = load i32, i32* %r16.global-to-local, align 4
  %v1_1000408c = urem i32 %v0_1000408c, 2
  store i32 %v1_1000408c, i32* %r29.global-to-local, align 4
  %v0_10004090 = load i32, i32* %r17.global-to-local, align 4
  %v1_10004090 = urem i32 %v0_10004090, 2
  store i32 %v1_10004090, i32* %r17.global-to-local, align 4
  %v0_10004094 = load i32, i32* %r18.global-to-local, align 4
  %v1_10004094 = urem i32 %v0_10004094, 2
  store i32 %v1_10004094, i32* %r18.global-to-local, align 4
  %v1_10004098 = urem i32 %v5_10003fd0, 2
  store i32 %v1_10004098, i32* %r28.global-to-local, align 4
  %v0_1000409c = load i32, i32* %r30.global-to-local, align 4
  %v1_1000409c = urem i32 %v0_1000409c, 2
  store i32 %v1_1000409c, i32* %r30.global-to-local, align 4
  %v1_100040a0 = urem i32 %v0_1000407c, 2
  store i32 %v1_100040a0, i32* %r16.global-to-local, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v4_100040f0 = sext i8 %v5_10003ec0 to i32
  %v4_100040f8 = sext i8 %v5_10003ef8 to i32
  br label %dec_label_pc_100040a8

dec_label_pc_100040a8:                            ; preds = %dec_label_pc_1000410c, %dec_label_pc_10004084
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 268452020, i32* @lr, align 4
  %v2_100040b0 = call i32 @function_10009460(i32 128, i32 1)
  store i32 %v2_100040b0, i32* %r3.global-to-local, align 4
  %v3_100040b4 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_100040b4, i32* %r9.global-to-local, align 4
  %v0_100040b8 = load i32, i32* @r31, align 4
  %v1_100040b8 = mul i32 %v0_100040b8, 4
  store i32 %v1_100040b8, i32* %r0.global-to-local, align 4
  %v1_100040bc = load i32, i32* %r25.global-to-local, align 4
  %v3_100040bc = add i32 %v1_100040bc, %v1_100040b8
  %v4_100040bc = inttoptr i32 %v3_100040bc to i32*
  store i32 %v2_100040b0, i32* %v4_100040bc, align 4
  %v0_100040c0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100040c0 = mul i32 %v0_100040c0, 4
  store i32 %v1_100040c0, i32* %r9.global-to-local, align 4
  %v1_100040c4 = load i32, i32* %r25.global-to-local, align 4
  %v2_100040c4 = add i32 %v1_100040c4, %v1_100040c0
  %v3_100040c4 = inttoptr i32 %v2_100040c4 to i32*
  %v4_100040c4 = load i32, i32* %v3_100040c4, align 4
  store i32 %v4_100040c4, i32* %r31.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_100040cc = inttoptr i32 %v4_100040c4 to i32*
  %v2_100040cc = load i32, i32* %v1_100040cc, align 4
  store i32 %v2_100040cc, i32* %r0.global-to-local, align 4
  %v1_100040d0 = add i32 %v4_100040c4, 20
  store i32 %v1_100040d0, i32* %r11.global-to-local, align 4
  %v0_100040d4 = load i32, i32* %r21.global-to-local, align 4
  %v1_100040d4 = trunc i32 %v0_100040d4 to i16
  %v3_100040d4 = add i32 %v4_100040c4, 4
  %v4_100040d4 = inttoptr i32 %v3_100040d4 to i16*
  store i16 %v1_100040d4, i16* %v4_100040d4, align 2
  %v1_100040d8 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100040d8, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_100040e0 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 60, i32* %r9.global-to-local, align 4
  %v1_100040e8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100040e8 = inttoptr i32 %v1_100040e8 to i32*
  store i32 %v1_100040e0, i32* %v2_100040e8, align 4
  %v0_100040ec = load i32, i32* %r9.global-to-local, align 4
  %v1_100040ec = trunc i32 %v0_100040ec to i16
  %v2_100040ec = load i32, i32* %r31.global-to-local, align 4
  %v3_100040ec = add i32 %v2_100040ec, 2
  %v4_100040ec = inttoptr i32 %v3_100040ec to i16*
  store i16 %v1_100040ec, i16* %v4_100040ec, align 2
  store i32 %v4_100040f0, i32* %r0.global-to-local, align 4
  %v2_100040f4 = load i32, i32* %r31.global-to-local, align 4
  %v3_100040f4 = add i32 %v2_100040f4, 1
  %v4_100040f4 = inttoptr i32 %v3_100040f4 to i8*
  store i8 %v5_10003ec0, i8* %v4_100040f4, align 1
  store i32 %v4_100040f8, i32* %r9.global-to-local, align 4
  %v2_100040fc = load i32, i32* %r31.global-to-local, align 4
  %v3_100040fc = add i32 %v2_100040fc, 8
  %v4_100040fc = inttoptr i32 %v3_100040fc to i8*
  store i8 %v5_10003ef8, i8* %v4_100040fc, align 1
  %v0_10004100 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10004100, label %dec_label_pc_1000410c, label %dec_label_pc_10004104

dec_label_pc_10004104:                            ; preds = %dec_label_pc_100040a8
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10004108 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004108 = add i32 %v2_10004108, 6
  %v4_10004108 = inttoptr i32 %v3_10004108 to i16*
  store i16 16384, i16* %v4_10004108, align 2
  br label %dec_label_pc_1000410c

dec_label_pc_1000410c:                            ; preds = %dec_label_pc_100040a8, %dec_label_pc_10004104
  store i32 6, i32* %r0.global-to-local, align 4
  %v0_10004110 = load i32, i32* %r15.global-to-local, align 4
  %v1_10004110 = load i32, i32* %r31.global-to-local, align 4
  %v2_10004110 = add i32 %v1_10004110, 12
  %v3_10004110 = inttoptr i32 %v2_10004110 to i32*
  store i32 %v0_10004110, i32* %v3_10004110, align 4
  %v0_10004114 = load i32, i32* %r0.global-to-local, align 4
  %v1_10004114 = trunc i32 %v0_10004114 to i8
  %v2_10004114 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004114 = add i32 %v2_10004114, 9
  %v4_10004114 = inttoptr i32 %v3_10004114 to i8*
  store i8 %v1_10004114, i8* %v4_10004114, align 1
  %v0_10004118 = load i32, i32* %r22.global-to-local, align 4
  %v1_10004118 = trunc i32 %v0_10004118 to i16
  %v2_10004118 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004118 = add i32 %v2_10004118, 20
  %v4_10004118 = inttoptr i32 %v3_10004118 to i16*
  store i16 %v1_10004118, i16* %v4_10004118, align 2
  %v3_1000411c = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_1000411c, i32* %r9.global-to-local, align 4
  %v0_10004120 = load i32, i32* %r23.global-to-local, align 4
  %v1_10004120 = trunc i32 %v0_10004120 to i16
  %v2_10004120 = load i32, i32* %r11.global-to-local, align 4
  %v3_10004120 = add i32 %v2_10004120, 2
  %v4_10004120 = inttoptr i32 %v3_10004120 to i16*
  store i16 %v1_10004120, i16* %v4_10004120, align 2
  %v0_10004124 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004124 = mul i32 %v0_10004124, 24
  %v1_10004128 = load i32, i32* %r27.global-to-local, align 4
  %v2_10004128 = add i32 %v1_10004128, %v1_10004124
  store i32 %v2_10004128, i32* %r9.global-to-local, align 4
  %v1_1000412c = add i32 %v2_10004128, 16
  %v2_1000412c = inttoptr i32 %v1_1000412c to i32*
  %v3_1000412c = load i32, i32* %v2_1000412c, align 4
  store i32 %v3_1000412c, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r9.global-to-local, align 4
  %v1_10004134 = load i32, i32* %r31.global-to-local, align 4
  %v2_10004134 = add i32 %v1_10004134, 16
  %v3_10004134 = inttoptr i32 %v2_10004134 to i32*
  store i32 %v3_1000412c, i32* %v3_10004134, align 4
  %v0_10004138 = load i32, i32* %r19.global-to-local, align 4
  %v1_10004138 = load i32, i32* %r11.global-to-local, align 4
  %v2_10004138 = add i32 %v1_10004138, 4
  %v3_10004138 = inttoptr i32 %v2_10004138 to i32*
  store i32 %v0_10004138, i32* %v3_10004138, align 4
  %v0_1000413c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000413c = add i32 %v0_1000413c, 12
  %v2_1000413c = inttoptr i32 %v1_1000413c to i32*
  %v3_1000413c = load i32, i32* %v2_1000413c, align 4
  store i32 %v3_1000413c, i32* %r0.global-to-local, align 4
  %v1_10004140 = call i32 @__asm_rlwimi(i32 10, i32 28, i32 0, i32 3)
  store i32 %v1_10004140, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10004148 = call i32 @__asm_rlwimi(i32 %v1_100040a0, i32 21, i32 10, i32 10)
  store i32 %v1_10004148, i32* %r0.global-to-local, align 4
  %v1_1000414c = call i32 @__asm_rlwimi(i32 %v1_10004090, i32 20, i32 11, i32 11)
  store i32 %v1_1000414c, i32* %r0.global-to-local, align 4
  %v1_10004150 = call i32 @__asm_rlwimi(i32 %v1_10004094, i32 19, i32 12, i32 12)
  store i32 %v1_10004150, i32* %r0.global-to-local, align 4
  %v1_10004154 = call i32 @__asm_rlwimi(i32 %v1_10004098, i32 18, i32 13, i32 13)
  store i32 %v1_10004154, i32* %r0.global-to-local, align 4
  %v1_10004158 = call i32 @__asm_rlwimi(i32 %v1_1000408c, i32 17, i32 14, i32 14)
  store i32 %v1_10004158, i32* %r0.global-to-local, align 4
  %v1_1000415c = call i32 @__asm_rlwimi(i32 %v1_1000409c, i32 16, i32 15, i32 15)
  %v1_10004160 = load i32, i32* %r11.global-to-local, align 4
  %v2_10004160 = add i32 %v1_10004160, 12
  %v3_10004160 = inttoptr i32 %v2_10004160 to i32*
  store i32 %v1_1000415c, i32* %v3_10004160, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_10004168 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004168 = add i32 %v2_10004168, 40
  %v4_10004168 = inttoptr i32 %v3_10004168 to i8*
  store i8 2, i8* %v4_10004168, align 1
  %v0_1000416c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000416c = trunc i32 %v0_1000416c to i8
  %v2_1000416c = load i32, i32* %r31.global-to-local, align 4
  %v3_1000416c = add i32 %v2_1000416c, 41
  %v4_1000416c = inttoptr i32 %v3_1000416c to i8*
  store i8 %v1_1000416c, i8* %v4_1000416c, align 1
  %v0_10004170 = call i32 @function_10005928()
  %v2_10004178 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004178 = add i32 %v2_10004178, 46
  %v4_10004178 = inttoptr i32 %v3_10004178 to i8*
  store i8 8, i8* %v4_10004178, align 1
  %v1_1000417c = urem i32 %v0_10004170, 16
  store i32 %v1_1000417c, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v2_10004188 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004188 = add i32 %v2_10004188, 44
  %v4_10004188 = inttoptr i32 %v3_10004188 to i8*
  store i8 4, i8* %v4_10004188, align 1
  %v0_1000418c = load i32, i32* %r3.global-to-local, align 4
  %v1_1000418c = add i32 %v0_1000418c, 1400
  store i32 %v1_1000418c, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_10004194 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004194 = trunc i32 %v0_10004194 to i8
  %v2_10004194 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004194 = add i32 %v2_10004194, 45
  %v4_10004194 = inttoptr i32 %v3_10004194 to i8*
  store i8 %v1_10004194, i8* %v4_10004194, align 1
  %v0_10004198 = load i32, i32* %r0.global-to-local, align 4
  %v1_10004198 = trunc i32 %v0_10004198 to i8
  %v2_10004198 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004198 = add i32 %v2_10004198, 47
  %v4_10004198 = inttoptr i32 %v3_10004198 to i8*
  store i8 %v1_10004198, i8* %v4_10004198, align 1
  %v0_1000419c = load i32, i32* %r3.global-to-local, align 4
  %v1_1000419c = trunc i32 %v0_1000419c to i16
  %v2_1000419c = load i32, i32* %r31.global-to-local, align 4
  %v3_1000419c = add i32 %v2_1000419c, 42
  %v4_1000419c = inttoptr i32 %v3_1000419c to i16*
  store i16 %v1_1000419c, i16* %v4_1000419c, align 2
  %v0_100041a0 = call i32 @function_10005928()
  store i32 %v0_100041a0, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  %v1_100041ac = load i32, i32* %r31.global-to-local, align 4
  %v2_100041ac = add i32 %v1_100041ac, 52
  %v3_100041ac = inttoptr i32 %v2_100041ac to i32*
  store i32 0, i32* %v3_100041ac, align 4
  %v0_100041b0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100041b0 = trunc i32 %v0_100041b0 to i8
  %v2_100041b0 = load i32, i32* %r31.global-to-local, align 4
  %v3_100041b0 = add i32 %v2_100041b0, 56
  %v4_100041b0 = inttoptr i32 %v3_100041b0 to i8*
  store i8 %v1_100041b0, i8* %v4_100041b0, align 1
  store i32 6, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r9.global-to-local, align 4
  %v1_100041bc = load i32, i32* %r31.global-to-local, align 4
  %v2_100041bc = add i32 %v1_100041bc, 48
  %v3_100041bc = inttoptr i32 %v2_100041bc to i32*
  store i32 %v0_100041a0, i32* %v3_100041bc, align 4
  %v0_100041c0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100041c0 = trunc i32 %v0_100041c0 to i8
  %v2_100041c0 = load i32, i32* %r31.global-to-local, align 4
  %v3_100041c0 = add i32 %v2_100041c0, 59
  %v4_100041c0 = inttoptr i32 %v3_100041c0 to i8*
  store i8 %v1_100041c0, i8* %v4_100041c0, align 1
  %v0_100041c4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100041c4 = trunc i32 %v0_100041c4 to i8
  %v2_100041c4 = load i32, i32* %r31.global-to-local, align 4
  %v3_100041c4 = add i32 %v2_100041c4, 57
  %v4_100041c4 = inttoptr i32 %v3_100041c4 to i8*
  store i8 %v1_100041c4, i8* %v4_100041c4, align 1
  %v0_100041c8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100041c8 = trunc i32 %v0_100041c8 to i8
  %v2_100041c8 = load i32, i32* %r31.global-to-local, align 4
  %v3_100041c8 = add i32 %v2_100041c8, 58
  %v4_100041c8 = inttoptr i32 %v3_100041c8 to i8*
  store i8 %v1_100041c8, i8* %v4_100041c8, align 1
  %v3_100041cc = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_100041cc, i32* %r9.global-to-local, align 4
  %v1_100041d0 = add i32 %v3_100041cc, 1
  store i32 %v1_100041d0, i32* %r31.global-to-local, align 4
  %v1_100041d4 = load i32, i32* %r24.global-to-local, align 4
  %v2_100041d4 = icmp slt i32 %v1_100041d0, %v1_100041d4
  store i32 %v1_100041d0, i32* %stack_var_-120, align 4
  br i1 %v2_100041d4, label %dec_label_pc_100040a8, label %dec_label_pc_100041e0.loopexit

dec_label_pc_100041e0.loopexit:                   ; preds = %dec_label_pc_1000410c
  %v0_100041e4.pre = load i32, i32* %r14.global-to-local, align 4
  %v0_100041e8.pre.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100041e8.pre.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_100041e0

dec_label_pc_100041e0:                            ; preds = %dec_label_pc_100041e0.loopexit, %dec_label_pc_10004064
  %v1_100041e8.pre = phi i1 [ %v1_100041e8.pre.pre, %dec_label_pc_100041e0.loopexit ], [ %v1_10004064, %dec_label_pc_10004064 ]
  %v0_100041e8.pre = phi i1 [ %v0_100041e8.pre.pre, %dec_label_pc_100041e0.loopexit ], [ %v3_10004064, %dec_label_pc_10004064 ]
  %v0_100041e4 = phi i32 [ %v0_100041e4.pre, %dec_label_pc_100041e0.loopexit ], [ %v1_1000407c, %dec_label_pc_10004064 ]
  %v0_100041e0 = load i32, i32* %r15.global-to-local, align 4
  %v3_100041e0 = icmp eq i32 %v0_100041e0, -1
  store i1 %v3_100041e0, i1* %cr2_eq.global-to-local, align 1
  %v3_100041e4 = icmp eq i32 %v0_100041e4, 0
  store i1 %v3_100041e4, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_100041e8.outer

dec_label_pc_100041e8.outer:                      ; preds = %dec_label_pc_100042c4, %dec_label_pc_100041e0
  %v1_100041e8.ph = phi i1 [ %v1_100041e8.pre, %dec_label_pc_100041e0 ], [ %v1_100042c4, %dec_label_pc_100042c4 ]
  %v0_100041e8.ph = phi i1 [ %v0_100041e8.pre, %dec_label_pc_100041e0 ], [ %v0_100042c4, %dec_label_pc_100042c4 ]
  %v2_100041e8 = or i1 %v1_100041e8.ph, %v0_100041e8.ph
  br label %dec_label_pc_100041e8

dec_label_pc_100041e8:                            ; preds = %dec_label_pc_100041e8.outer, %dec_label_pc_100041e8
  br i1 %v2_100041e8, label %dec_label_pc_100041e8, label %dec_label_pc_100041ec

dec_label_pc_100041ec:                            ; preds = %dec_label_pc_100041e8, %dec_label_pc_100042c4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-120, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_100041fc

dec_label_pc_100041fc:                            ; preds = %dec_label_pc_10004254, %dec_label_pc_100041ec
  %v0_100041fc = phi i32 [ %v1_100042b4, %dec_label_pc_10004254 ], [ 0, %dec_label_pc_100041ec ]
  %v1_100041fc = mul i32 %v0_100041fc, 24
  store i32 %v1_100041fc, i32* %r0.global-to-local, align 4
  %v1_10004200 = mul i32 %v0_100041fc, 4
  store i32 %v1_10004200, i32* %r11.global-to-local, align 4
  %v1_10004204 = load i32, i32* %r25.global-to-local, align 4
  %v2_10004204 = add i32 %v1_10004204, %v1_10004200
  %v3_10004204 = inttoptr i32 %v2_10004204 to i32*
  %v4_10004204 = load i32, i32* %v3_10004204, align 4
  store i32 %v4_10004204, i32* %r28.global-to-local, align 4
  %v1_10004208 = load i32, i32* %r27.global-to-local, align 4
  %v2_10004208 = add i32 %v1_10004208, %v1_100041fc
  %v1_1000420c = add i32 %v2_10004208, 20
  %v2_1000420c = inttoptr i32 %v1_1000420c to i8*
  %v3_1000420c = load i8, i8* %v2_1000420c, align 1
  %v4_1000420c = zext i8 %v3_1000420c to i32
  store i32 %v4_1000420c, i32* %r9.global-to-local, align 4
  %v1_10004210 = add i32 %v4_10004204, 20
  store i32 %v1_10004210, i32* @r31, align 4
  %tmp41 = icmp ult i8 %v3_1000420c, 32
  br i1 %tmp41, label %dec_label_pc_100042cc, label %dec_label_pc_1000421c

dec_label_pc_1000421c:                            ; preds = %dec_label_pc_100041fc
  %v0_1000421c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_1000421c, label %dec_label_pc_100042f4, label %dec_label_pc_10004220

dec_label_pc_10004220:                            ; preds = %dec_label_pc_100042cc, %dec_label_pc_1000421c
  store i32 65535, i32* %r29.global-to-local, align 4
  %v0_10004228 = load i32, i32* %r21.global-to-local, align 4
  %v4_10004228 = icmp eq i32 %v0_10004228, 65535
  br i1 %v4_10004228, label %dec_label_pc_1000430c, label %dec_label_pc_10004230

dec_label_pc_10004230:                            ; preds = %dec_label_pc_100042f4, %dec_label_pc_10004220
  %v1_10004230 = phi i32 [ %v1_10004304, %dec_label_pc_100042f4 ], [ 65535, %dec_label_pc_10004220 ]
  %v0_10004230 = load i32, i32* %r22.global-to-local, align 4
  %v4_10004230 = icmp eq i32 %v0_10004230, %v1_10004230
  br i1 %v4_10004230, label %dec_label_pc_1000431c, label %dec_label_pc_10004238

dec_label_pc_10004238:                            ; preds = %dec_label_pc_1000430c.dec_label_pc_10004238_crit_edge, %dec_label_pc_10004230
  %v1_10004238 = phi i32 [ %v1_10004238.pre, %dec_label_pc_1000430c.dec_label_pc_10004238_crit_edge ], [ %v1_10004230, %dec_label_pc_10004230 ]
  %v0_10004238 = load i32, i32* %r23.global-to-local, align 4
  %v4_10004238 = icmp eq i32 %v0_10004238, %v1_10004238
  br i1 %v4_10004238, label %dec_label_pc_1000432c, label %dec_label_pc_10004240

dec_label_pc_10004240:                            ; preds = %dec_label_pc_1000431c.dec_label_pc_10004240_crit_edge, %dec_label_pc_10004238
  %v1_10004240 = phi i32 [ %v1_10004240.pre, %dec_label_pc_1000431c.dec_label_pc_10004240_crit_edge ], [ %v1_10004238, %dec_label_pc_10004238 ]
  %v0_10004240 = load i32, i32* %r19.global-to-local, align 4
  %v4_10004240 = icmp eq i32 %v0_10004240, %v1_10004240
  br i1 %v4_10004240, label %dec_label_pc_1000433c, label %dec_label_pc_10004248

dec_label_pc_10004248:                            ; preds = %dec_label_pc_1000432c.dec_label_pc_10004248_crit_edge, %dec_label_pc_10004240
  %v1_10004248 = phi i32 [ %v1_10004248.pre, %dec_label_pc_1000432c.dec_label_pc_10004248_crit_edge ], [ %v1_10004240, %dec_label_pc_10004240 ]
  %v0_10004248 = load i32, i32* %r20.global-to-local, align 4
  %v4_10004248 = icmp eq i32 %v0_10004248, %v1_10004248
  br i1 %v4_10004248, label %dec_label_pc_1000434c, label %dec_label_pc_10004250

dec_label_pc_10004250:                            ; preds = %dec_label_pc_1000433c, %dec_label_pc_10004248
  %v0_10004250 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10004250, label %dec_label_pc_10004254, label %dec_label_pc_10004358

dec_label_pc_10004254:                            ; preds = %dec_label_pc_10004250, %dec_label_pc_1000434c, %dec_label_pc_10004358
  %v0_10004254 = load i32, i32* %r30.global-to-local, align 4
  %v1_10004254 = trunc i32 %v0_10004254 to i16
  %v2_10004254 = load i32, i32* %r28.global-to-local, align 4
  %v3_10004254 = add i32 %v2_10004254, 10
  %v4_10004254 = inttoptr i32 %v3_10004254 to i16*
  store i16 %v1_10004254, i16* %v4_10004254, align 2
  %v0_1000425c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000425c, i32* @r3, align 4
  %v2_10004260 = call i32 @function_100043cc(i32 %v0_1000425c, i32 20)
  %v3_10004260 = trunc i32 %v2_10004260 to i16
  %v0_10004264 = load i32, i32* @r31, align 4
  store i32 %v0_10004264, i32* @r4, align 4
  %v4_10004268 = add i32 %v0_1000425c, 10
  %v5_10004268 = inttoptr i32 %v4_10004268 to i16*
  store i16 %v3_10004260, i16* %v5_10004268, align 2
  %v0_10004270 = load i32, i32* %r30.global-to-local, align 4
  %v1_10004270 = trunc i32 %v0_10004270 to i16
  %v2_10004270 = load i32, i32* @r31, align 4
  %v3_10004270 = add i32 %v2_10004270, 16
  %v4_10004270 = inttoptr i32 %v3_10004270 to i16*
  store i16 %v1_10004270, i16* %v4_10004270, align 2
  %v0_10004278 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10004278, i32* %r3.global-to-local, align 4
  %v4_1000427c = call i32 @function_10004430(i32 %v0_10004278, i32 %v0_10004264, i32 40, i32 40)
  %v5_1000427c = trunc i32 %v4_1000427c to i16
  store i32 %v4_1000427c, i32* %r3.global-to-local, align 4
  %v3_10004280 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10004280, i32* %r7.global-to-local, align 4
  %v0_10004284 = load i32, i32* @r31, align 4
  %v1_10004284 = add i32 %v0_10004284, 2
  %v2_10004284 = inttoptr i32 %v1_10004284 to i16*
  %v3_10004284 = load i16, i16* %v2_10004284, align 2
  %v4_10004284 = zext i16 %v3_10004284 to i32
  store i32 %v4_10004284, i32* %r0.global-to-local, align 4
  %v0_10004288 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000428c = mul i32 %v3_10004280, 24
  store i32 %v1_1000428c, i32* %r7.global-to-local, align 4
  %v4_10004290 = add i32 %v0_10004284, 16
  %v5_10004290 = inttoptr i32 %v4_10004290 to i16*
  store i16 %v5_1000427c, i16* %v5_10004290, align 2
  %v0_10004298 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10004298, i32* %r3.global-to-local, align 4
  %v0_1000429c = load i32, i32* %r7.global-to-local, align 4
  %v1_1000429c = load i32, i32* %r27.global-to-local, align 4
  %v2_1000429c = add i32 %v1_1000429c, %v0_1000429c
  store i32 %v2_1000429c, i32* %r7.global-to-local, align 4
  %v0_100042a4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100042a4 = trunc i32 %v0_100042a4 to i16
  %v3_100042a4 = add i32 %v2_1000429c, 2
  %v4_100042a4 = inttoptr i32 %v3_100042a4 to i16*
  store i16 %v1_100042a4, i16* %v4_100042a4, align 2
  store i32 268452528, i32* @lr, align 4
  %v6_100042ac = call i32 @function_10009088(i32 %v0_10004298, i32 %v0_10004288, i32 60, i32 16384, i32 %v2_1000429c, i32 16)
  store i32 %v6_100042ac, i32* %r3.global-to-local, align 4
  %v3_100042b0 = load i32, i32* %stack_var_-120, align 4
  %v1_100042b4 = add i32 %v3_100042b0, 1
  store i32 %v1_100042b4, i32* %r9.global-to-local, align 4
  %v1_100042b8 = load i32, i32* %r24.global-to-local, align 4
  %v2_100042b8 = icmp slt i32 %v1_100042b4, %v1_100042b8
  store i32 %v1_100042b4, i32* %stack_var_-120, align 4
  br i1 %v2_100042b8, label %dec_label_pc_100041fc, label %dec_label_pc_100042c4

dec_label_pc_100042c4:                            ; preds = %dec_label_pc_10004254
  %v0_100042c4 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100042c4 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_100042c4 = or i1 %v0_100042c4, %v1_100042c4
  br i1 %v2_100042c4, label %dec_label_pc_100041e8.outer, label %dec_label_pc_100041ec

dec_label_pc_100042cc:                            ; preds = %dec_label_pc_100041fc
  %v1_100042cc = add i32 %v2_10004208, 16
  %v2_100042cc = inttoptr i32 %v1_100042cc to i32*
  %v3_100042cc = load i32, i32* %v2_100042cc, align 4
  store i32 %v3_100042cc, i32* %r29.global-to-local, align 4
  %v0_100042d0 = call i32 @function_10005928()
  store i32 %v0_100042d0, i32* %r3.global-to-local, align 4
  %v3_100042d4 = load i32, i32* %stack_var_-120, align 4
  %v1_100042d8 = mul i32 %v3_100042d4, 24
  %v1_100042dc = load i32, i32* %r27.global-to-local, align 4
  %v2_100042dc = add i32 %v1_100042dc, %v1_100042d8
  store i32 %v2_100042dc, i32* %r9.global-to-local, align 4
  %v1_100042e0 = add i32 %v2_100042dc, 20
  %v2_100042e0 = inttoptr i32 %v1_100042e0 to i8*
  %v3_100042e0 = load i8, i8* %v2_100042e0, align 1
  %v4_100042e0 = zext i8 %v3_100042e0 to i32
  store i32 %v4_100042e0, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_100042e0, 64
  %v2_100042e4 = zext i8 %tmp to i32
  %v3_100042e4 = lshr i32 %v0_100042d0, %v2_100042e4
  store i32 %v3_100042e4, i32* %r3.global-to-local, align 4
  %v0_100042e8 = load i32, i32* %r29.global-to-local, align 4
  %v2_100042e8 = add i32 %v3_100042e4, %v0_100042e8
  store i32 %v2_100042e8, i32* %r29.global-to-local, align 4
  %v1_100042ec = load i32, i32* %r28.global-to-local, align 4
  %v2_100042ec = add i32 %v1_100042ec, 16
  %v3_100042ec = inttoptr i32 %v2_100042ec to i32*
  store i32 %v2_100042e8, i32* %v3_100042ec, align 4
  %v0_100042f0 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100042f0, label %dec_label_pc_100042f4, label %dec_label_pc_10004220

dec_label_pc_100042f4:                            ; preds = %dec_label_pc_100042cc, %dec_label_pc_1000421c
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_100042f8 = call i32 @function_10005928()
  store i32 %v0_100042f8, i32* %r3.global-to-local, align 4
  store i32 65535, i32* %r29.global-to-local, align 4
  %v1_10004300 = load i32, i32* %r28.global-to-local, align 4
  %v2_10004300 = add i32 %v1_10004300, 12
  %v3_10004300 = inttoptr i32 %v2_10004300 to i32*
  store i32 %v0_100042f8, i32* %v3_10004300, align 4
  %v0_10004304 = load i32, i32* %r21.global-to-local, align 4
  %v1_10004304 = load i32, i32* %r29.global-to-local, align 4
  %v4_10004304 = icmp eq i32 %v0_10004304, %v1_10004304
  br i1 %v4_10004304, label %dec_label_pc_1000430c, label %dec_label_pc_10004230

dec_label_pc_1000430c:                            ; preds = %dec_label_pc_100042f4, %dec_label_pc_10004220
  %v0_1000430c = call i32 @function_10005928()
  %v1_1000430c = trunc i32 %v0_1000430c to i16
  store i32 %v0_1000430c, i32* %r3.global-to-local, align 4
  %v0_10004310 = load i32, i32* %r22.global-to-local, align 4
  %v1_10004310 = load i32, i32* %r29.global-to-local, align 4
  %v4_10004310 = icmp eq i32 %v0_10004310, %v1_10004310
  %v3_10004314 = load i32, i32* %r28.global-to-local, align 4
  %v4_10004314 = add i32 %v3_10004314, 4
  %v5_10004314 = inttoptr i32 %v4_10004314 to i16*
  store i16 %v1_1000430c, i16* %v5_10004314, align 2
  br i1 %v4_10004310, label %dec_label_pc_1000431c, label %dec_label_pc_1000430c.dec_label_pc_10004238_crit_edge

dec_label_pc_1000430c.dec_label_pc_10004238_crit_edge: ; preds = %dec_label_pc_1000430c
  %v1_10004238.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10004238

dec_label_pc_1000431c:                            ; preds = %dec_label_pc_1000430c, %dec_label_pc_10004230
  %v0_1000431c = call i32 @function_10005928()
  %v1_1000431c = trunc i32 %v0_1000431c to i16
  store i32 %v0_1000431c, i32* %r3.global-to-local, align 4
  %v0_10004320 = load i32, i32* %r23.global-to-local, align 4
  %v1_10004320 = load i32, i32* %r29.global-to-local, align 4
  %v4_10004320 = icmp eq i32 %v0_10004320, %v1_10004320
  %v3_10004324 = load i32, i32* %r28.global-to-local, align 4
  %v4_10004324 = add i32 %v3_10004324, 20
  %v5_10004324 = inttoptr i32 %v4_10004324 to i16*
  store i16 %v1_1000431c, i16* %v5_10004324, align 2
  br i1 %v4_10004320, label %dec_label_pc_1000432c, label %dec_label_pc_1000431c.dec_label_pc_10004240_crit_edge

dec_label_pc_1000431c.dec_label_pc_10004240_crit_edge: ; preds = %dec_label_pc_1000431c
  %v1_10004240.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10004240

dec_label_pc_1000432c:                            ; preds = %dec_label_pc_1000431c, %dec_label_pc_10004238
  %v0_1000432c = call i32 @function_10005928()
  %v1_1000432c = trunc i32 %v0_1000432c to i16
  store i32 %v0_1000432c, i32* %r3.global-to-local, align 4
  %v0_10004330 = load i32, i32* %r19.global-to-local, align 4
  %v1_10004330 = load i32, i32* %r29.global-to-local, align 4
  %v4_10004330 = icmp eq i32 %v0_10004330, %v1_10004330
  %v3_10004334 = load i32, i32* @r31, align 4
  %v4_10004334 = add i32 %v3_10004334, 2
  %v5_10004334 = inttoptr i32 %v4_10004334 to i16*
  store i16 %v1_1000432c, i16* %v5_10004334, align 2
  br i1 %v4_10004330, label %dec_label_pc_1000433c, label %dec_label_pc_1000432c.dec_label_pc_10004248_crit_edge

dec_label_pc_1000432c.dec_label_pc_10004248_crit_edge: ; preds = %dec_label_pc_1000432c
  %v1_10004248.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10004248

dec_label_pc_1000433c:                            ; preds = %dec_label_pc_1000432c, %dec_label_pc_10004240
  %v0_1000433c = call i32 @function_10005928()
  store i32 %v0_1000433c, i32* %r3.global-to-local, align 4
  %v0_10004340 = load i32, i32* %r20.global-to-local, align 4
  %v1_10004340 = load i32, i32* %r29.global-to-local, align 4
  %v4_10004340 = icmp eq i32 %v0_10004340, %v1_10004340
  %v1_10004344 = load i32, i32* @r31, align 4
  %v2_10004344 = add i32 %v1_10004344, 4
  %v3_10004344 = inttoptr i32 %v2_10004344 to i32*
  store i32 %v0_1000433c, i32* %v3_10004344, align 4
  br i1 %v4_10004340, label %dec_label_pc_1000434c, label %dec_label_pc_10004250

dec_label_pc_1000434c:                            ; preds = %dec_label_pc_1000433c, %dec_label_pc_10004248
  %v0_1000434c = call i32 @function_10005928()
  store i32 %v0_1000434c, i32* %r3.global-to-local, align 4
  %v1_10004350 = load i32, i32* @r31, align 4
  %v2_10004350 = add i32 %v1_10004350, 8
  %v3_10004350 = inttoptr i32 %v2_10004350 to i32*
  store i32 %v0_1000434c, i32* %v3_10004350, align 4
  %v0_10004354 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10004354, label %dec_label_pc_10004254, label %dec_label_pc_10004358

dec_label_pc_10004358:                            ; preds = %dec_label_pc_10004250, %dec_label_pc_1000434c
  %v0_10004358 = call i32 @function_10005928()
  %v1_10004358 = trunc i32 %v0_10004358 to i16
  store i32 %v0_10004358, i32* %r3.global-to-local, align 4
  %v3_1000435c = load i32, i32* @r31, align 4
  %v4_1000435c = add i32 %v3_1000435c, 18
  %v5_1000435c = inttoptr i32 %v4_1000435c to i16*
  store i16 %v1_10004358, i16* %v5_1000435c, align 2
  br label %dec_label_pc_10004254

dec_label_pc_10004364:                            ; preds = %dec_label_pc_10004040
  %v0_10004364 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10004364, i32* %r3.global-to-local, align 4
  store i32 268452716, i32* @lr, align 4
  %v0_10004368 = call i32 @function_10008418()
  store i32 %v0_10004368, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000436c

dec_label_pc_1000436c:                            ; preds = %dec_label_pc_10003e28, %dec_label_pc_10004364
  store i32 %v0_10003e40, i32* %r0.global-to-local, align 4
  %v1_10004380 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10003e30)
  store i32 %v0_10003e80, i32* %r28.global-to-local, align 4
  store i32 %v0_10003e88, i32* %r29.global-to-local, align 4
  store i32 %v0_10003e94, i32* %r31.global-to-local, align 4
  %v0_100043c8 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100043c8

; uselistorder directives
  uselistorder i32 %v0_10004358, { 1, 0 }
  uselistorder i32 %v0_1000432c, { 1, 0 }
  uselistorder i32 %v0_1000431c, { 1, 0 }
  uselistorder i32 %v0_1000430c, { 1, 0 }
  uselistorder i32 %v1_10004304, { 1, 0 }
  uselistorder i1 %v1_100042c4, { 1, 0 }
  uselistorder i1 %v0_100042c4, { 1, 0 }
  uselistorder i32 %v1_100042b4, { 0, 2, 3, 1 }
  uselistorder i32 %v4_1000427c, { 1, 0 }
  uselistorder i32 %v1_10004200, { 1, 0 }
  uselistorder i32 %v1_100040c0, { 1, 0 }
  uselistorder i32 %v1_100040b8, { 1, 0 }
  uselistorder i32 %v1_100040a0, { 1, 0 }
  uselistorder i32 %v1_1000409c, { 1, 0 }
  uselistorder i32 %v1_10004098, { 1, 0 }
  uselistorder i32 %v1_10004094, { 1, 0 }
  uselistorder i32 %v1_10004090, { 1, 0 }
  uselistorder i32 %v1_1000408c, { 1, 0 }
  uselistorder i32 %v1_1000407c, { 1, 0 }
  uselistorder i8 %v5_10003ef8, { 1, 0 }
  uselistorder i8 %v5_10003ec0, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r30.global-to-local, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32* %r3.global-to-local, { 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0, 1 }
  uselistorder i32* %r29.global-to-local, { 1, 10, 9, 11, 8, 12, 14, 13, 2, 3, 5, 4, 6, 7, 15, 0 }
  uselistorder i32* %r28.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder i32* %r24.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r0.global-to-local, { 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 26, 27, 28, 29, 0, 1, 2, 3, 4 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr3_eq.global-to-local, { 2, 3, 4, 0, 1 }
  uselistorder i32 47, { 1, 2, 0, 3 }
  uselistorder i32 41, { 2, 0, 1, 3, 4 }
  uselistorder i32 (i32, i32*, i32, i32)* @function_100006a8, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 102, 103, 104, 105, 106, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101 }
  uselistorder label %dec_label_pc_1000436c, { 1, 0 }
  uselistorder label %dec_label_pc_10004358, { 1, 0 }
  uselistorder label %dec_label_pc_10004254, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100041ec, { 1, 0 }
  uselistorder label %dec_label_pc_100041e8, { 1, 0 }
  uselistorder label %dec_label_pc_1000410c, { 1, 0 }
}

define i32 @function_100043cc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100043cc:
  %tmp = or i32 %arg1, 1
  %tmp8 = icmp eq i32 %tmp, 1
  br i1 %tmp8, label %dec_label_pc_10004400, label %dec_label_pc_100043d8

dec_label_pc_100043d8:                            ; preds = %dec_label_pc_100043cc
  %v1_100043d8 = add i32 %arg1, -2
  %v1_100043dc = udiv i32 %v1_100043d8, 2
  %v1_100043e0 = add nuw i32 %v1_100043dc, 1
  %v0_100043ec.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_100043ec

dec_label_pc_100043ec:                            ; preds = %dec_label_pc_100043ec, %dec_label_pc_100043d8
  %v0_100043fc = phi i32 [ %v1_100043fc, %dec_label_pc_100043ec ], [ %v1_100043e0, %dec_label_pc_100043d8 ]
  %v0_100043f8 = phi i32 [ %v2_100043f8, %dec_label_pc_100043ec ], [ 0, %dec_label_pc_100043d8 ]
  %v0_100043f4 = phi i32 [ %v1_100043f4, %dec_label_pc_100043ec ], [ %v0_100043ec.pre, %dec_label_pc_100043d8 ]
  %v1_100043ec = inttoptr i32 %v0_100043f4 to i16*
  %v2_100043ec = load i16, i16* %v1_100043ec, align 2
  %v3_100043ec = zext i16 %v2_100043ec to i32
  %v1_100043f4 = add i32 %v0_100043f4, 2
  store i32 %v1_100043f4, i32* @r3, align 4
  %v2_100043f8 = add i32 %v3_100043ec, %v0_100043f8
  %v1_100043fc = add i32 %v0_100043fc, -1
  %v2_100043fc = icmp eq i32 %v1_100043fc, 0
  br i1 %v2_100043fc, label %dec_label_pc_10004400.loopexit, label %dec_label_pc_100043ec

dec_label_pc_10004400.loopexit:                   ; preds = %dec_label_pc_100043ec
  %tmp11 = mul i32 %v1_100043dc, -2
  %tmp10 = add i32 %v1_100043d8, %tmp11
  br label %dec_label_pc_10004400

dec_label_pc_10004400:                            ; preds = %dec_label_pc_10004400.loopexit, %dec_label_pc_100043cc
  %v0_1000440c = phi i32 [ 0, %dec_label_pc_100043cc ], [ %v2_100043f8, %dec_label_pc_10004400.loopexit ]
  %v0_10004400 = phi i32 [ %arg1, %dec_label_pc_100043cc ], [ %tmp10, %dec_label_pc_10004400.loopexit ]
  %v3_10004400 = icmp eq i32 %v0_10004400, 1
  br i1 %v3_10004400, label %dec_label_pc_10004408, label %dec_label_pc_10004410

dec_label_pc_10004408:                            ; preds = %dec_label_pc_10004400
  %v0_10004408 = load i32, i32* @r3, align 4
  %v1_10004408 = add i32 %v0_10004408, 1
  %v2_10004408 = inttoptr i32 %v1_10004408 to i8*
  %v3_10004408 = load i8, i8* %v2_10004408, align 1
  %v4_10004408 = zext i8 %v3_10004408 to i32
  %v2_1000440c = add i32 %v4_10004408, %v0_1000440c
  br label %dec_label_pc_10004410

dec_label_pc_10004410:                            ; preds = %dec_label_pc_10004400, %dec_label_pc_10004408
  %v0_10004410 = phi i32 [ %v0_1000440c, %dec_label_pc_10004400 ], [ %v2_1000440c, %dec_label_pc_10004408 ]
  %v1_10004410 = urem i32 %v0_10004410, 65536
  %v1_10004414 = udiv i32 %v0_10004410, 65536
  %v2_10004418 = add nuw nsw i32 %v1_10004410, %v1_10004414
  %v1_1000441c = udiv i32 %v2_10004418, 65536
  %v2_10004420 = add nuw nsw i32 %v1_1000441c, %v2_10004418
  %v1_10004424 = urem i32 %v2_10004420, 65536
  %v1_10004428 = xor i32 %v1_10004424, 65535
  ret i32 %v1_10004428

; uselistorder directives
  uselistorder i32 %v2_10004418, { 1, 0 }
  uselistorder i32 %v0_1000440c, { 1, 0 }
  uselistorder i32 %v1_100043fc, { 1, 0 }
  uselistorder i32 %v1_100043f4, { 1, 0 }
  uselistorder label %dec_label_pc_10004410, { 1, 0 }
}

define i32 @function_10004430(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10004430:
  %r0.global-to-local = alloca i32, align 4
  %v1_10004434 = add i32 %arg1, 12
  %v2_10004434 = inttoptr i32 %v1_10004434 to i32*
  %v3_10004434 = load i32, i32* %v2_10004434, align 4
  %v1_10004438 = add i32 %arg1, 16
  %v2_10004438 = inttoptr i32 %v1_10004438 to i32*
  %v3_10004438 = load i32, i32* %v2_10004438, align 4
  %tmp = icmp slt i32 %arg3, 2
  br i1 %tmp, label %dec_label_pc_10004474, label %dec_label_pc_10004440

dec_label_pc_10004440:                            ; preds = %dec_label_pc_10004430
  %v1_10004440 = add i32 %arg3, -2
  %v1_10004448 = icmp slt i32 %v1_10004440, 0
  %v1_1000444c = udiv i32 %v1_10004440, 2
  %v1_10004450 = add nuw i32 %v1_1000444c, 1
  br i1 %v1_10004448, label %dec_label_pc_100044dc, label %dec_label_pc_1000445c.preheader

dec_label_pc_1000445c.preheader:                  ; preds = %dec_label_pc_100044dc, %dec_label_pc_10004440
  %v0_100044704 = phi i32 [ 1, %dec_label_pc_100044dc ], [ %v1_10004450, %dec_label_pc_10004440 ]
  %v0_1000445c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1000445c

dec_label_pc_1000445c:                            ; preds = %dec_label_pc_1000445c.preheader, %dec_label_pc_1000445c
  %v0_10004470 = phi i32 [ %v0_100044704, %dec_label_pc_1000445c.preheader ], [ %v1_10004470, %dec_label_pc_1000445c ]
  %v0_1000446c = phi i32 [ 0, %dec_label_pc_1000445c.preheader ], [ %v2_1000446c, %dec_label_pc_1000445c ]
  %v0_10004464 = phi i32 [ %v0_1000445c.pre, %dec_label_pc_1000445c.preheader ], [ %v1_10004464, %dec_label_pc_1000445c ]
  %v1_1000445c = inttoptr i32 %v0_10004464 to i16*
  %v2_1000445c = load i16, i16* %v1_1000445c, align 2
  %v3_1000445c = zext i16 %v2_1000445c to i32
  store i32 %v3_1000445c, i32* %r0.global-to-local, align 4
  %v1_10004464 = add i32 %v0_10004464, 2
  %v2_1000446c = add i32 %v3_1000445c, %v0_1000446c
  %v1_10004470 = add i32 %v0_10004470, -1
  %v2_10004470 = icmp eq i32 %v1_10004470, 0
  br i1 %v2_10004470, label %dec_label_pc_10004474.loopexit, label %dec_label_pc_1000445c

dec_label_pc_10004474.loopexit:                   ; preds = %dec_label_pc_1000445c
  %tmp14 = mul i32 %v0_100044704, -2
  %tmp13 = add i32 %tmp14, %arg3
  %v3_10004468 = icmp eq i32 %tmp13, 1
  br i1 %v3_10004468, label %dec_label_pc_100044c8, label %dec_label_pc_10004478

dec_label_pc_10004474:                            ; preds = %dec_label_pc_10004430
  %v3_10004430 = icmp eq i32 %arg3, 1
  br i1 %v3_10004430, label %dec_label_pc_10004474.dec_label_pc_100044c8_crit_edge, label %dec_label_pc_10004478

dec_label_pc_10004474.dec_label_pc_100044c8_crit_edge: ; preds = %dec_label_pc_10004474
  %v0_100044c8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_100044c8

dec_label_pc_10004478:                            ; preds = %dec_label_pc_10004474.loopexit, %dec_label_pc_10004474, %dec_label_pc_100044c8
  %v0_10004490 = phi i32 [ 0, %dec_label_pc_10004474 ], [ %v2_100044cc, %dec_label_pc_100044c8 ], [ %v2_1000446c, %dec_label_pc_10004474.loopexit ]
  %v1_10004478 = urem i32 %v3_10004434, 65536
  %v1_1000447c = udiv i32 %v3_10004434, 65536
  %v2_10004480 = add nuw nsw i32 %v1_10004478, %v1_1000447c
  store i32 %v2_10004480, i32* %r0.global-to-local, align 4
  %v1_10004484 = urem i32 %v3_10004438, 65536
  %v1_10004488 = add i32 %arg1, 9
  %v2_10004488 = inttoptr i32 %v1_10004488 to i8*
  %v3_10004488 = load i8, i8* %v2_10004488, align 1
  %v4_10004488 = zext i8 %v3_10004488 to i32
  %v1_1000448c = udiv i32 %v3_10004438, 65536
  %v2_10004490 = add i32 %v0_10004490, %v1_1000448c
  %v2_10004498 = add i32 %v2_10004490, %v4_10004488
  %v2_10004494 = add i32 %v2_10004480, %arg2
  %v2_1000449c = add i32 %v2_10004494, %v1_10004484
  %v2_100044a0 = add i32 %v2_1000449c, %v2_10004498
  store i32 %v2_100044a0, i32* %r0.global-to-local, align 4
  %v1_100044a4 = call i32 @__asm_rlwinm.(i32 %v2_100044a0, i32 16, i32 16, i32 31)
  %v4_100044a4 = icmp eq i32 %v1_100044a4, 0
  br i1 %v4_100044a4, label %dec_label_pc_100044bc, label %dec_label_pc_100044ac

dec_label_pc_100044ac:                            ; preds = %dec_label_pc_10004478, %dec_label_pc_100044ac
  %v1_100044b0 = phi i32 [ %v1_100044b4, %dec_label_pc_100044ac ], [ %v1_100044a4, %dec_label_pc_10004478 ]
  %v0_100044ac = load i32, i32* %r0.global-to-local, align 4
  %v1_100044ac = urem i32 %v0_100044ac, 65536
  %v2_100044b0 = add i32 %v1_100044ac, %v1_100044b0
  store i32 %v2_100044b0, i32* %r0.global-to-local, align 4
  %v1_100044b4 = call i32 @__asm_rlwinm.(i32 %v2_100044b0, i32 16, i32 16, i32 31)
  %v4_100044b4 = icmp eq i32 %v1_100044b4, 0
  br i1 %v4_100044b4, label %dec_label_pc_100044bc, label %dec_label_pc_100044ac

dec_label_pc_100044bc:                            ; preds = %dec_label_pc_100044ac, %dec_label_pc_10004478
  %v0_100044bc = load i32, i32* %r0.global-to-local, align 4
  %v1_100044bc = urem i32 %v0_100044bc, 65536
  %v1_100044c0 = xor i32 %v1_100044bc, 65535
  ret i32 %v1_100044c0

dec_label_pc_100044c8:                            ; preds = %dec_label_pc_10004474.dec_label_pc_100044c8_crit_edge, %dec_label_pc_10004474.loopexit
  %v0_100044c8 = phi i32 [ %v1_10004464, %dec_label_pc_10004474.loopexit ], [ %v0_100044c8.pre, %dec_label_pc_10004474.dec_label_pc_100044c8_crit_edge ]
  %v0_100044cc10 = phi i32 [ %v2_1000446c, %dec_label_pc_10004474.loopexit ], [ 0, %dec_label_pc_10004474.dec_label_pc_100044c8_crit_edge ]
  %v1_100044c8 = inttoptr i32 %v0_100044c8 to i8*
  %v2_100044c8 = load i8, i8* %v1_100044c8, align 1
  %v3_100044c8 = zext i8 %v2_100044c8 to i32
  store i32 %v3_100044c8, i32* %r0.global-to-local, align 4
  %v2_100044cc = add i32 %v3_100044c8, %v0_100044cc10
  br label %dec_label_pc_10004478

dec_label_pc_100044dc:                            ; preds = %dec_label_pc_10004440
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000445c.preheader

; uselistorder directives
  uselistorder i32 %v1_100044b4, { 1, 0 }
  uselistorder i32 %v1_10004470, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7 }
  uselistorder i32 65535, { 50, 51, 0, 7, 52, 53, 19, 20, 21, 22, 1, 8, 54, 55, 23, 24, 25, 26, 27, 56, 9, 28, 29, 57, 10, 30, 31, 13, 12, 11, 58, 59, 32, 33, 34, 14, 15, 60, 35, 61, 36, 62, 2, 16, 63, 64, 5, 37, 38, 39, 3, 17, 65, 66, 6, 40, 41, 42, 4, 18, 67, 68, 43, 44, 45, 69, 70, 71, 72, 73, 74, 46, 47, 75, 76, 77, 78, 79, 80, 48, 49 }
  uselistorder i32 %arg3, { 3, 0, 2, 1 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100044ac, { 1, 0 }
  uselistorder label %dec_label_pc_10004478, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000445c, { 1, 0 }
}

define i32 @function_100044e8(i32 %arg1) local_unnamed_addr {
dec_label_pc_100044e8:
  %r26.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-8792 = alloca i32, align 4
  %stack_var_-8760 = alloca i8, align 1
  %stack_var_-8776 = alloca i8, align 1
  %stack_var_-4151 = alloca i32, align 4
  %stack_var_-8247 = alloca i32, align 4
  %v0_100044f8 = load i32, i32* @r27, align 4
  %v2_100044fc = ptrtoint i32* %stack_var_-8247 to i32
  store i32 %v2_100044fc, i32* @r27, align 4
  %v2_10004504 = ptrtoint i32* %stack_var_-4151 to i32
  %v0_10004508 = load i32, i32* @r29, align 4
  store i32 %arg1, i32* @r29, align 4
  %v0_10004518 = load i32, i32* @r25, align 4
  %v2_1000451c = ptrtoint i8* %stack_var_-8776 to i32
  %v0_10004520 = load i32, i32* @r30, align 4
  %v2_10004524 = ptrtoint i8* %stack_var_-8760 to i32
  store i32 %v2_10004524, i32* @r30, align 4
  %v0_10004528 = load i32, i32* @r31, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v0_10004530 = load i32, i32* @r23, align 4
  %v0_10004538 = load i32, i32* @r28, align 4
  store i32 268453184, i32* @lr, align 4
  %v3_1000453c = call i32 @function_10008c1c(i32 %v2_100044fc, i32 0, i32 4096)
  store i32 268453200, i32* @lr, align 4
  %v3_1000454c = call i32 @function_10008c1c(i32 %v2_10004504, i32 0, i32 4096)
  store i32 268453216, i32* @lr, align 4
  %v3_1000455c = call i32 @function_10008c1c(i32 %v2_10004524, i32 0, i32 513)
  %v0_10004568 = load i32, i32* @r29, align 4
  %v0_1000456c = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_1000456c, i32* %stack_var_-8792, align 4
  %v3_1000457c = trunc i32 %v0_10004568 to i8
  %v4_1000457c = call i32 @function_10008134(i8 %v3_1000457c, i32 16, i32 %v2_1000451c)
  store i32 268453256, i32* @lr, align 4
  %v2_10004584 = call i32 @function_10007c58(i8* nonnull %stack_var_-8776)
  %v3_10004588 = icmp eq i32 %v2_10004584, 2
  br i1 %v3_10004588, label %dec_label_pc_10004acc, label %dec_label_pc_10004590

dec_label_pc_10004590:                            ; preds = %dec_label_pc_100044e8, %dec_label_pc_10004acc
  store i32 0, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000459c.26 to i32), i32* @lr, align 4
  %v1_10004598 = call i32 @function_100076e0(i32 13)
  store i32 ptrtoint ([3 x i8]* @global_var_100045a4.27 to i32), i32* @lr, align 4
  %v1_100045a0 = call i32 @function_100076e0(i32 14)
  store i32 ptrtoint ([3 x i8]* @global_var_100045ac.28 to i32), i32* @lr, align 4
  %v1_100045a8 = call i32 @function_100076e0(i32 15)
  store i32 268453300, i32* @lr, align 4
  %v1_100045b0 = call i32 @function_100076e0(i32 17)
  %v3_100045bc = call i32 @function_1000762c(i32 17, i32* null)
  store i32 268453324, i32* @lr, align 4
  %v2_100045c8 = call i32 @function_10008580(i32 %v3_100045bc, i32 0)
  %v3_100045cc = icmp eq i32 %v2_100045c8, -1
  store i32 %v2_100045c8, i32* @r28, align 4
  br i1 %v3_100045cc, label %dec_label_pc_10004a18, label %dec_label_pc_100045d8

dec_label_pc_100045d8:                            ; preds = %dec_label_pc_10004590
  %v2_100045d8 = ptrtoint i32* %stack_var_-8792 to i32
  store i32 %v2_100045d8, i32* %r26.global-to-local, align 4
  store i32 268453356, i32* @lr, align 4
  %v4_100045e899 = call i32 @function_10007eb8(i8* nonnull %stack_var_-8760, i32 512, i32 %v2_100045c8)
  %v3_100045ec101 = icmp eq i32 %v4_100045e899, 0
  br i1 %v3_100045ec101, label %dec_label_pc_10004798.loopexit, label %dec_label_pc_100045f4

dec_label_pc_100045f4:                            ; preds = %dec_label_pc_100045d8, %dec_label_pc_100045dc.backedge
  %v3_100045f4 = load i8, i8* %stack_var_-8760, align 1
  %v3_100045f8 = icmp eq i8 %v3_100045f4, 0
  br i1 %v3_100045f8, label %dec_label_pc_100045dc.backedge, label %dec_label_pc_10004600

dec_label_pc_100045dc.backedge:                   ; preds = %dec_label_pc_10004614, %dec_label_pc_100045f4, %dec_label_pc_10004684, %dec_label_pc_1000471c, %dec_label_pc_1000476c
  %v0_100045e4.pre = load i32, i32* @r28, align 4
  store i32 268453356, i32* @lr, align 4
  %v4_100045e8 = call i32 @function_10007eb8(i8* nonnull %stack_var_-8760, i32 512, i32 %v0_100045e4.pre)
  %v3_100045ec = icmp eq i32 %v4_100045e8, 0
  br i1 %v3_100045ec, label %dec_label_pc_10004798.loopexit, label %dec_label_pc_100045f4

dec_label_pc_10004600:                            ; preds = %dec_label_pc_100045f4
  %v3_10004600 = icmp eq i8 %v3_100045f4, 58
  store i32 3, i32* @r31, align 4
  br i1 %v3_10004600, label %dec_label_pc_10004634, label %dec_label_pc_10004610

dec_label_pc_10004610:                            ; preds = %dec_label_pc_10004600
  %v1_10004618.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10004614

dec_label_pc_10004614:                            ; preds = %dec_label_pc_10004628, %dec_label_pc_10004610
  %v0_10004614 = phi i32 [ %v1_10004614, %dec_label_pc_10004628 ], [ 0, %dec_label_pc_10004610 ]
  %v1_10004614 = add i32 %v0_10004614, 1
  %v2_10004618 = add i32 %v1_10004614, %v1_10004618.pre
  %v3_10004618 = inttoptr i32 %v2_10004618 to i8*
  %v4_10004618 = load i8, i8* %v3_10004618, align 1
  %v3_1000461c = icmp eq i8 %v4_10004618, 0
  br i1 %v3_1000461c, label %dec_label_pc_100045dc.backedge, label %dec_label_pc_10004628

dec_label_pc_10004628:                            ; preds = %dec_label_pc_10004614
  %v3_10004620 = icmp eq i8 %v4_10004618, 58
  br i1 %v3_10004620, label %dec_label_pc_1000462c, label %dec_label_pc_10004614

dec_label_pc_1000462c:                            ; preds = %dec_label_pc_10004628
  %v1_1000462c = add i32 %v0_10004614, 4
  store i32 %v1_1000462c, i32* @r31, align 4
  %v1_10004630 = add i32 %v0_10004614, 3
  br label %dec_label_pc_10004634

dec_label_pc_10004634:                            ; preds = %dec_label_pc_10004600, %dec_label_pc_1000462c
  %v1_1000468c = phi i32 [ 2, %dec_label_pc_10004600 ], [ %v1_10004630, %dec_label_pc_1000462c ]
  %v0_10004634 = load i32, i32* %r26.global-to-local, align 4
  %v2_10004634 = add i32 %v0_10004634, %v1_1000468c
  %v1_1000463c = add i32 %v2_10004634, 32
  %v2_1000463c = inttoptr i32 %v1_1000463c to i8*
  %v3_1000463c = load i8, i8* %v2_1000463c, align 1
  %v3_10004640 = icmp eq i8 %v3_1000463c, 0
  br i1 %v3_10004640, label %dec_label_pc_10004684, label %dec_label_pc_10004648

dec_label_pc_10004648:                            ; preds = %dec_label_pc_10004634
  %v3_10004648 = icmp eq i8 %v3_1000463c, 32
  %v1_1000464c = add i32 %v1_1000468c, 1
  store i32 %v1_1000464c, i32* @r31, align 4
  br i1 %v3_10004648, label %dec_label_pc_10004684, label %dec_label_pc_10004654

dec_label_pc_10004654:                            ; preds = %dec_label_pc_10004648
  %v0_1000465c = load i32, i32* @r30, align 4
  %v2_1000465c = add i32 %v0_1000465c, %v1_1000464c
  br label %dec_label_pc_10004668

dec_label_pc_10004668:                            ; preds = %dec_label_pc_10004668, %dec_label_pc_10004654
  %v0_1000466c = phi i32 [ %v1_1000466c, %dec_label_pc_10004668 ], [ %v1_1000468c, %dec_label_pc_10004654 ]
  %v0_10004670 = phi i32 [ %v1_10004670, %dec_label_pc_10004668 ], [ %v2_1000465c, %dec_label_pc_10004654 ]
  %v1_10004668 = inttoptr i32 %v0_10004670 to i8*
  %v2_10004668 = load i8, i8* %v1_10004668, align 1
  %v1_1000466c = add i32 %v0_1000466c, 1
  %v1_10004670 = add i32 %v0_10004670, 1
  %tmp60 = or i8 %v2_10004668, 32
  %tmp61 = icmp eq i8 %tmp60, 32
  br i1 %tmp61, label %dec_label_pc_10004680, label %dec_label_pc_10004668

dec_label_pc_10004680:                            ; preds = %dec_label_pc_10004668
  %v1_10004680 = add i32 %v0_1000466c, 2
  store i32 %v1_10004680, i32* @r31, align 4
  br label %dec_label_pc_10004684

dec_label_pc_10004684:                            ; preds = %dec_label_pc_10004648, %dec_label_pc_10004634, %dec_label_pc_10004680
  %v1_10004684 = phi i32 [ %v1_1000468c, %dec_label_pc_10004648 ], [ %v1_1000468c, %dec_label_pc_10004634 ], [ %v1_1000466c, %dec_label_pc_10004680 ]
  %v2_10004684 = add i32 %v1_10004684, %v0_10004634
  %v0_1000468c = load i32, i32* @r30, align 4
  %v2_1000468c = add i32 %v0_1000468c, %v1_1000468c
  store i32 %v2_1000468c, i32* @r29, align 4
  %v3_10004690 = add i32 %v2_10004684, 32
  %v4_10004690 = inttoptr i32 %v3_10004690 to i8*
  store i8 0, i8* %v4_10004690, align 1
  %v0_10004694 = load i32, i32* @r29, align 4
  store i32 268453532, i32* @lr, align 4
  %v1_10004698 = inttoptr i32 %v0_10004694 to i8*
  %v2_10004698 = call i32 @function_10007c58(i8* %v1_10004698)
  %v0_100046a4 = load i32, i32* @r29, align 4
  %v3_100046a8 = inttoptr i32 %v0_100046a4 to i8*
  %v4_100046a8 = call i32 @function_10008008(i8* %v3_100046a8, i32 %v2_10004698, i32 %v2_1000451c)
  %v3_100046b0 = icmp eq i32 %v4_100046a8, -1
  br i1 %v3_100046b0, label %dec_label_pc_100045dc.backedge, label %dec_label_pc_100046bc.preheader

dec_label_pc_100046bc.preheader:                  ; preds = %dec_label_pc_10004684
  %v0_100046bc.pre = load i32, i32* @r31, align 4
  %v0_100046c4.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100046bc.outer

dec_label_pc_100046bc.outer:                      ; preds = %dec_label_pc_10004a68, %dec_label_pc_100046bc.preheader
  %v0_100046d828.ph = phi i32 [ %v1_10004a50, %dec_label_pc_10004a68 ], [ 0, %dec_label_pc_100046bc.preheader ]
  %v0_100046bc.ph = phi i32 [ %v1_1000477476, %dec_label_pc_10004a68 ], [ %v0_100046bc.pre, %dec_label_pc_100046bc.preheader ]
  %v0_1000471c.ph = phi i32 [ 1, %dec_label_pc_10004a68 ], [ 0, %dec_label_pc_100046bc.preheader ]
  br label %dec_label_pc_100046bc

dec_label_pc_100046bc:                            ; preds = %dec_label_pc_100046bc.outer, %dec_label_pc_10004a58
  %v0_100046d828 = phi i32 [ %v1_10004a50, %dec_label_pc_10004a58 ], [ %v0_100046d828.ph, %dec_label_pc_100046bc.outer ]
  %v0_100046bc = phi i32 [ %v1_1000477476, %dec_label_pc_10004a58 ], [ %v0_100046bc.ph, %dec_label_pc_100046bc.outer ]
  %v1_100046bc = add i32 %v0_100046bc, 1
  %v2_100046c4 = add i32 %v1_100046bc, %v0_100046c4.pre
  %v1_100046f068 = inttoptr i32 %v2_100046c4 to i8*
  %v2_100046f069 = load i8, i8* %v1_100046f068, align 1
  store i32 %v1_100046bc, i32* @r31, align 4
  %v3_100046f871 = icmp eq i8 %v2_100046f069, 0
  br i1 %v3_100046f871, label %dec_label_pc_1000471c, label %dec_label_pc_10004708

dec_label_pc_100046cc:                            ; preds = %dec_label_pc_10004708
  %v3_100046fc79 = icmp eq i8 %v3_100046fc79.in, 9
  br i1 %v3_100046fc79, label %dec_label_pc_1000470c, label %dec_label_pc_100046d8

dec_label_pc_100046d8:                            ; preds = %dec_label_pc_100046cc
  %v3_100046cc = icmp eq i32 %v0_100046cc75, 1
  br i1 %v3_100046cc, label %dec_label_pc_10004a50, label %dec_label_pc_100046e0

dec_label_pc_100046e0:                            ; preds = %dec_label_pc_100046d8, %dec_label_pc_10004a50
  %v0_100046e0 = phi i32 [ %v1_10004a50, %dec_label_pc_10004a50 ], [ %v0_1000470c74, %dec_label_pc_100046d8 ]
  %v2_100046e0 = icmp sgt i32 %v0_100046e0, 6
  br i1 %v2_100046e0, label %dec_label_pc_1000471c, label %dec_label_pc_100046ec

dec_label_pc_100046ec:                            ; preds = %dec_label_pc_1000470c, %dec_label_pc_100046e0
  %v0_100046d827 = phi i32 [ %v0_1000470c74, %dec_label_pc_1000470c ], [ %v0_100046e0, %dec_label_pc_100046e0 ]
  %v0_100046cc25 = phi i32 [ 1, %dec_label_pc_1000470c ], [ 0, %dec_label_pc_100046e0 ]
  %v0_100046f022 = add i32 %v0_1000471478, 1
  %v1_100046ec = add i32 %v1_1000477476, 1
  %v1_100046f0 = inttoptr i32 %v0_100046f022 to i8*
  %v2_100046f0 = load i8, i8* %v1_100046f0, align 1
  store i32 %v1_100046ec, i32* @r31, align 4
  %v3_100046f8 = icmp eq i8 %v2_100046f0, 0
  br i1 %v3_100046f8, label %dec_label_pc_1000471c, label %dec_label_pc_10004708

dec_label_pc_10004708:                            ; preds = %dec_label_pc_100046bc, %dec_label_pc_100046ec
  %v3_100046fc79.in = phi i8 [ %v2_100046f0, %dec_label_pc_100046ec ], [ %v2_100046f069, %dec_label_pc_100046bc ]
  %v3_1000470080.in = phi i8 [ %v2_100046f0, %dec_label_pc_100046ec ], [ %v2_100046f069, %dec_label_pc_100046bc ]
  %v0_1000471478 = phi i32 [ %v0_100046f022, %dec_label_pc_100046ec ], [ %v2_100046c4, %dec_label_pc_100046bc ]
  %v1_1000477476 = phi i32 [ %v1_100046ec, %dec_label_pc_100046ec ], [ %v1_100046bc, %dec_label_pc_100046bc ]
  %v0_100046cc75 = phi i32 [ %v0_100046cc25, %dec_label_pc_100046ec ], [ 0, %dec_label_pc_100046bc ]
  %v0_1000470c74 = phi i32 [ %v0_100046d827, %dec_label_pc_100046ec ], [ %v0_100046d828, %dec_label_pc_100046bc ]
  %v3_1000470080 = icmp eq i8 %v3_1000470080.in, 32
  br i1 %v3_1000470080, label %dec_label_pc_1000470c, label %dec_label_pc_100046cc

dec_label_pc_1000470c:                            ; preds = %dec_label_pc_10004708, %dec_label_pc_100046cc
  %tmp62 = icmp slt i32 %v0_1000470c74, 7
  br i1 %tmp62, label %dec_label_pc_100046ec, label %dec_label_pc_1000471c

dec_label_pc_1000471c:                            ; preds = %dec_label_pc_100046ec, %dec_label_pc_100046e0, %dec_label_pc_1000470c, %dec_label_pc_100046bc
  %v1_10004774.lcssa = phi i32 [ %v1_100046bc, %dec_label_pc_100046bc ], [ %v1_1000477476, %dec_label_pc_1000470c ], [ %v1_1000477476, %dec_label_pc_100046e0 ], [ %v1_100046ec, %dec_label_pc_100046ec ]
  %v3_1000471c = icmp eq i32 %v0_1000471c.ph, 0
  br i1 %v3_1000471c, label %dec_label_pc_100045dc.backedge, label %dec_label_pc_10004728

dec_label_pc_10004728:                            ; preds = %dec_label_pc_1000471c
  %v0_10004728 = load i32, i32* %r26.global-to-local, align 4
  %v2_10004728 = add i32 %v0_10004728, %v1_10004774.lcssa
  %v1_1000472c = add i32 %v2_10004728, 32
  %v2_1000472c = inttoptr i32 %v1_1000472c to i8*
  %v3_1000472c = load i8, i8* %v2_1000472c, align 1
  %v3_10004730 = icmp eq i8 %v3_1000472c, 0
  br i1 %v3_10004730, label %dec_label_pc_1000476c, label %dec_label_pc_10004738

dec_label_pc_10004738:                            ; preds = %dec_label_pc_10004728
  %v3_10004738 = icmp eq i8 %v3_1000472c, 32
  br i1 %v3_10004738, label %dec_label_pc_1000476c, label %dec_label_pc_10004740

dec_label_pc_10004740:                            ; preds = %dec_label_pc_10004738
  %v1_10004740 = add i32 %v1_10004774.lcssa, 1
  %v2_10004744 = add i32 %v1_10004740, %v0_100046c4.pre
  %v1_1000475488 = inttoptr i32 %v2_10004744 to i8*
  %v2_1000475489 = load i8, i8* %v1_1000475488, align 1
  store i32 %v1_10004740, i32* %r31.global-to-local, align 4
  %tmp6394 = or i8 %v2_1000475489, 32
  %tmp6495 = icmp eq i8 %tmp6394, 32
  br i1 %tmp6495, label %dec_label_pc_1000476c, label %dec_label_pc_10004750

dec_label_pc_10004750:                            ; preds = %dec_label_pc_10004740, %dec_label_pc_10004750
  %v1_1000475c97.in = phi i32 [ %v1_1000475c97, %dec_label_pc_10004750 ], [ %v2_10004744, %dec_label_pc_10004740 ]
  %v0_1000475096 = phi i32 [ %v1_10004750, %dec_label_pc_10004750 ], [ %v1_10004740, %dec_label_pc_10004740 ]
  %v1_1000475c97 = add i32 %v1_1000475c97.in, 1
  %v1_10004750 = add i32 %v0_1000475096, 1
  %v1_10004754 = inttoptr i32 %v1_1000475c97 to i8*
  %v2_10004754 = load i8, i8* %v1_10004754, align 1
  store i32 %v1_10004750, i32* %r31.global-to-local, align 4
  %tmp63 = or i8 %v2_10004754, 32
  %tmp64 = icmp eq i8 %tmp63, 32
  br i1 %tmp64, label %dec_label_pc_1000476c, label %dec_label_pc_10004750

dec_label_pc_1000476c:                            ; preds = %dec_label_pc_10004740, %dec_label_pc_10004750, %dec_label_pc_10004738, %dec_label_pc_10004728
  %v1_1000476c = phi i32 [ %v1_10004774.lcssa, %dec_label_pc_10004738 ], [ %v1_10004774.lcssa, %dec_label_pc_10004728 ], [ %v1_10004740, %dec_label_pc_10004740 ], [ %v1_10004750, %dec_label_pc_10004750 ]
  %v2_1000476c = add i32 %v1_1000476c, %v0_10004728
  %v2_10004774 = add i32 %v1_10004774.lcssa, %v0_100046c4.pre
  store i32 %v2_10004774, i32* @r31, align 4
  %v3_10004778 = add i32 %v2_1000476c, 32
  %v4_10004778 = inttoptr i32 %v3_10004778 to i8*
  store i8 0, i8* %v4_10004778, align 1
  %v0_1000477c = load i32, i32* @r31, align 4
  store i32 268453764, i32* @lr, align 4
  %v1_10004780 = inttoptr i32 %v0_1000477c to i8*
  %v2_10004780 = call i32 @function_10007c58(i8* %v1_10004780)
  %v2_10004784 = icmp sgt i32 %v2_10004780, 15
  br i1 %v2_10004784, label %dec_label_pc_100045dc.backedge, label %dec_label_pc_1000478c

dec_label_pc_1000478c:                            ; preds = %dec_label_pc_1000476c
  %v0_1000478c = load i32, i32* @r31, align 4
  store i32 %v2_100045d8, i32* @r3, align 4
  %v2_10004794 = bitcast i32* %stack_var_-8792 to i8*
  %v3_10004794 = call i32 @function_10007c80(i8* %v2_10004794, i32 %v0_1000478c)
  br label %dec_label_pc_10004798

dec_label_pc_10004798.loopexit:                   ; preds = %dec_label_pc_100045dc.backedge, %dec_label_pc_100045d8
  %.pre = bitcast i32* %stack_var_-8792 to i8*
  br label %dec_label_pc_10004798

dec_label_pc_10004798:                            ; preds = %dec_label_pc_10004798.loopexit, %dec_label_pc_1000478c
  %v1_100047a4.pre-phi = phi i8* [ %.pre, %dec_label_pc_10004798.loopexit ], [ %v2_10004794, %dec_label_pc_1000478c ]
  store i32 268453792, i32* @lr, align 4
  %v0_1000479c = call i32 @function_10008418()
  store i32 268453800, i32* @lr, align 4
  %v2_100047a4 = call i32 @function_10007c58(i8* %v1_100047a4.pre-phi)
  %v3_100047a8 = icmp eq i32 %v2_100047a4, 0
  br i1 %v3_100047a8, label %dec_label_pc_10004a70, label %dec_label_pc_100047b0

dec_label_pc_100047b0:                            ; preds = %dec_label_pc_10004798
  %v3_100047b8 = call i32 @function_1000762c(i32 13, i32* null)
  store i32 0, i32* %r31.global-to-local, align 4
  store i32 268453828, i32* @lr, align 4
  %v1_100047c0 = call i32 @function_10008964(i32 %v3_100047b8)
  store i32 %v1_100047c0, i32* @r23, align 4
  %v3_100047c4 = icmp eq i32 %v1_100047c0, 0
  br i1 %v3_100047c4, label %dec_label_pc_100049f8, label %dec_label_pc_100047cc

dec_label_pc_100047cc:                            ; preds = %dec_label_pc_100047b0
  store i32 0, i32* @r28, align 4
  store i32 268453848, i32* @lr, align 4
  %v1_100047d47 = inttoptr i32 %v1_100047c0 to i32*
  %v2_100047d48 = call i32 @function_10008a74(i32* %v1_100047d47)
  %v3_100047d811 = icmp eq i32 %v2_100047d48, 0
  br i1 %v3_100047d811, label %dec_label_pc_100049ec, label %dec_label_pc_100047e0.preheader.lr.ph

dec_label_pc_100047e0.preheader.lr.ph:            ; preds = %dec_label_pc_100047cc
  %v2_10004814 = bitcast i32* %stack_var_-8247 to i8*
  %v1_10004984 = bitcast i32* %stack_var_-4151 to i8*
  br label %dec_label_pc_100047e0.preheader

dec_label_pc_100047d0.loopexit:                   ; preds = %dec_label_pc_100047e8, %dec_label_pc_10004800, %dec_label_pc_10004868
  %v0_100047d0 = load i32, i32* @r23, align 4
  store i32 268453848, i32* @lr, align 4
  %v1_100047d4 = inttoptr i32 %v0_100047d0 to i32*
  %v2_100047d4 = call i32 @function_10008a74(i32* %v1_100047d4)
  %v3_100047d8 = icmp eq i32 %v2_100047d4, 0
  br i1 %v3_100047d8, label %dec_label_pc_100049ec, label %dec_label_pc_100047e0.preheader

dec_label_pc_100047e0.preheader:                  ; preds = %dec_label_pc_100047e0.preheader.lr.ph, %dec_label_pc_100047d0.loopexit
  %v0_100047e835 = phi i32 [ %v2_100047d48, %dec_label_pc_100047e0.preheader.lr.ph ], [ %v2_100047d4, %dec_label_pc_100047d0.loopexit ]
  br label %dec_label_pc_100047e0

dec_label_pc_100047e0:                            ; preds = %dec_label_pc_100047e0.preheader, %dec_label_pc_100049d4
  %v0_100047e8 = phi i32 [ %v0_100047e835, %dec_label_pc_100047e0.preheader ], [ %v2_100049e0, %dec_label_pc_100049d4 ]
  %v0_100047e0 = load i32, i32* @r28, align 4
  %v3_100047e0 = icmp eq i32 %v0_100047e0, 0
  br i1 %v3_100047e0, label %dec_label_pc_100047e8, label %dec_label_pc_100049ec

dec_label_pc_100047e8:                            ; preds = %dec_label_pc_100047e0
  %v1_100047e8 = add i32 %v0_100047e8, 11
  %v2_100047e8 = inttoptr i32 %v1_100047e8 to i8*
  %v3_100047e8 = load i8, i8* %v2_100047e8, align 1
  %v4_100047e8 = zext i8 %v3_100047e8 to i32
  store i32 %v1_100047e8, i32* @r30, align 4
  %v1_100047f0 = add nuw nsw i32 %v4_100047e8, 208
  %v1_100047f4 = urem i32 %v1_100047f0, 256
  %v2_100047f8 = icmp ugt i32 %v1_100047f4, 9
  br i1 %v2_100047f8, label %dec_label_pc_100047d0.loopexit, label %dec_label_pc_10004800

dec_label_pc_10004800:                            ; preds = %dec_label_pc_100047e8
  %v3_10004808 = call i32 @function_1000762c(i32 13, i32* null)
  store i32 %v2_100044fc, i32* @r3, align 4
  %v3_10004814 = call i32 @function_10007c80(i8* %v2_10004814, i32 %v3_10004808)
  store i32 268453920, i32* @lr, align 4
  %v2_1000481c = call i32 @function_10007c58(i8* %v2_10004814)
  %v0_10004820 = load i32, i32* @r30, align 4
  %v0_10004824 = load i32, i32* @r27, align 4
  %v2_10004824 = add i32 %v0_10004824, %v2_1000481c
  store i32 %v2_10004824, i32* @r3, align 4
  %v2_10004828 = inttoptr i32 %v2_10004824 to i8*
  %v3_10004828 = call i32 @function_10007c80(i8* %v2_10004828, i32 %v0_10004820)
  store i32 268453940, i32* @lr, align 4
  %v2_10004830 = call i32 @function_10007c58(i8* %v2_10004814)
  %v3_10004840 = call i32 @function_1000762c(i32 14, i32* null)
  %v0_10004848 = load i32, i32* @r27, align 4
  %v2_10004848 = add i32 %v2_10004830, %v0_10004848
  store i32 %v2_10004848, i32* @r3, align 4
  %v2_1000484c = inttoptr i32 %v2_10004848 to i8*
  %v3_1000484c = call i32 @function_10007c80(i8* %v2_1000484c, i32 %v3_10004840)
  store i32 4096, i32* @r5, align 4
  store i32 268453984, i32* @lr, align 4
  %v3_1000485c = call i32 @function_10008698(i32 %v2_100044fc, i32 %v2_10004504, i32 4096)
  %v3_10004860 = icmp eq i32 %v3_1000485c, -1
  br i1 %v3_10004860, label %dec_label_pc_100047d0.loopexit, label %dec_label_pc_10004868

dec_label_pc_10004868:                            ; preds = %dec_label_pc_10004800
  %v3_10004870 = call i32 @function_1000762c(i32 13, i32* null)
  store i32 %v2_100044fc, i32* @r3, align 4
  %v3_1000487c = call i32 @function_10007c80(i8* %v2_10004814, i32 %v3_10004870)
  store i32 268454024, i32* @lr, align 4
  %v2_10004884 = call i32 @function_10007c58(i8* %v2_10004814)
  %v0_10004888 = load i32, i32* @r30, align 4
  %v0_1000488c = load i32, i32* @r27, align 4
  %v2_1000488c = add i32 %v0_1000488c, %v2_10004884
  store i32 %v2_1000488c, i32* @r3, align 4
  %v2_10004890 = inttoptr i32 %v2_1000488c to i8*
  %v3_10004890 = call i32 @function_10007c80(i8* %v2_10004890, i32 %v0_10004888)
  store i32 268454044, i32* @lr, align 4
  %v2_10004898 = call i32 @function_10007c58(i8* %v2_10004814)
  %v3_100048a8 = call i32 @function_1000762c(i32 15, i32* null)
  %v0_100048b0 = load i32, i32* @r27, align 4
  %v2_100048b0 = add i32 %v2_10004898, %v0_100048b0
  store i32 %v2_100048b0, i32* @r3, align 4
  %v2_100048b4 = inttoptr i32 %v2_100048b0 to i8*
  %v3_100048b4 = call i32 @function_10007c80(i8* %v2_100048b4, i32 %v3_100048a8)
  store i32 268454080, i32* @lr, align 4
  %v1_100048bc = call i32 @function_10008964(i32 %v2_100044fc)
  store i32 %v1_100048bc, i32* @r25, align 4
  %v3_100048c0 = icmp eq i32 %v1_100048bc, 0
  br i1 %v3_100048c0, label %dec_label_pc_100047d0.loopexit, label %dec_label_pc_100048c8

dec_label_pc_100048c8.loopexit:                   ; preds = %dec_label_pc_100048e8, %dec_label_pc_10004984
  %v0_100048c8.pre = load i32, i32* @r25, align 4
  br label %dec_label_pc_100048c8

dec_label_pc_100048c8:                            ; preds = %dec_label_pc_10004868, %dec_label_pc_100048c8.loopexit
  %v0_100048c8 = phi i32 [ %v0_100048c8.pre, %dec_label_pc_100048c8.loopexit ], [ %v1_100048bc, %dec_label_pc_10004868 ]
  store i32 268454096, i32* @lr, align 4
  %v1_100048cc = inttoptr i32 %v0_100048c8 to i32*
  %v2_100048cc = call i32 @function_10008a74(i32* %v1_100048cc)
  store i32 4096, i32* @r4, align 4
  store i32 %v2_100048cc, i32* @r31, align 4
  %v3_100048d4 = icmp eq i32 %v2_100048cc, 0
  %v0_100048d8 = load i32, i32* @r28, align 4
  store i32 %v2_10004504, i32* @r3, align 4
  %v3_100048d8.not = icmp ne i32 %v0_100048d8, 0
  %brmerge = or i1 %v3_100048d4, %v3_100048d8.not
  br i1 %brmerge, label %dec_label_pc_100049d4, label %dec_label_pc_100048e8

dec_label_pc_100048e8:                            ; preds = %dec_label_pc_100048c8
  store i32 268454124, i32* @lr, align 4
  %v0_100048e8 = call i32 @function_10007d00()
  %v3_100048f4 = call i32 @function_1000762c(i32 13, i32* null)
  store i32 %v2_100044fc, i32* @r3, align 4
  %v3_10004900 = call i32 @function_10007c80(i8* %v2_10004814, i32 %v3_100048f4)
  store i32 268454156, i32* @lr, align 4
  %v2_10004908 = call i32 @function_10007c58(i8* %v2_10004814)
  %v0_1000490c = load i32, i32* @r30, align 4
  %v0_10004910 = load i32, i32* @r27, align 4
  %v2_10004910 = add i32 %v0_10004910, %v2_10004908
  store i32 %v2_10004910, i32* @r3, align 4
  %v2_10004914 = inttoptr i32 %v2_10004910 to i8*
  %v3_10004914 = call i32 @function_10007c80(i8* %v2_10004914, i32 %v0_1000490c)
  store i32 268454176, i32* @lr, align 4
  %v2_1000491c = call i32 @function_10007c58(i8* %v2_10004814)
  %v3_1000492c = call i32 @function_1000762c(i32 15, i32* null)
  %v0_10004934 = load i32, i32* @r27, align 4
  %v2_10004934 = add i32 %v2_1000491c, %v0_10004934
  store i32 %v2_10004934, i32* @r3, align 4
  %v2_10004938 = inttoptr i32 %v2_10004934 to i8*
  %v3_10004938 = call i32 @function_10007c80(i8* %v2_10004938, i32 %v3_1000492c)
  store i32 268454212, i32* @lr, align 4
  %v2_10004940 = call i32 @function_10007c58(i8* %v2_10004814)
  %v0_1000494c = load i32, i32* @r27, align 4
  %v2_1000494c = add i32 %v0_1000494c, %v2_10004940
  store i32 %v2_1000494c, i32* @r3, align 4
  %v2_10004950 = inttoptr i32 %v2_1000494c to i8*
  %v3_10004950 = call i32 @function_10007c80(i8* %v2_10004950, i32 ptrtoint (i32* @global_var_1000ade4.30 to i32))
  store i32 268454236, i32* @lr, align 4
  %v2_10004958 = call i32 @function_10007c58(i8* %v2_10004814)
  %v0_1000495c = load i32, i32* @r31, align 4
  %v1_1000495c = add i32 %v0_1000495c, 11
  %v0_10004960 = load i32, i32* @r27, align 4
  %v2_10004960 = add i32 %v0_10004960, %v2_10004958
  store i32 %v2_10004960, i32* @r3, align 4
  %v2_10004964 = inttoptr i32 %v2_10004960 to i8*
  %v3_10004964 = call i32 @function_10007c80(i8* %v2_10004964, i32 %v1_1000495c)
  store i32 268454264, i32* @lr, align 4
  %v3_10004974 = call i32 @function_10008698(i32 %v2_100044fc, i32 %v2_10004504, i32 4096)
  %v3_10004978 = icmp eq i32 %v3_10004974, -1
  br i1 %v3_10004978, label %dec_label_pc_100048c8.loopexit, label %dec_label_pc_10004984

dec_label_pc_10004984:                            ; preds = %dec_label_pc_100048e8
  store i32 268454280, i32* @lr, align 4
  %v2_10004984 = call i32 @function_10007c58(i8* %v1_10004984)
  %v4_10004994 = call i32 @function_10008008(i8* %v1_10004984, i32 %v2_10004984, i32 %v2_100045d8)
  %v3_1000499c = icmp eq i32 %v4_10004994, -1
  %v0_100049a0 = load i32, i32* @r30, align 4
  store i32 %v0_100049a0, i32* @r3, align 4
  br i1 %v3_1000499c, label %dec_label_pc_100048c8.loopexit, label %dec_label_pc_100049a8

dec_label_pc_100049a8:                            ; preds = %dec_label_pc_10004984
  store i32 268454316, i32* @lr, align 4
  %v2_100049a8 = call i32 @function_10007d80(i32 %v0_100049a0, i32 10)
  store i32 268454324, i32* @lr, align 4
  %v2_100049b0 = call i32 @function_10008538(i32 %v2_100049a8, i32 9)
  %v0_100049b4 = load i32, i32* @r25, align 4
  store i32 268454332, i32* @lr, align 4
  %v1_100049b8 = inttoptr i32 %v0_100049b4 to i32*
  %v2_100049b8 = call i32 @function_10008a74(i32* %v1_100049b8)
  store i32 1, i32* @r28, align 4
  store i32 %v2_100049b8, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100049d4

dec_label_pc_100049d4:                            ; preds = %dec_label_pc_100048c8, %dec_label_pc_100049a8
  %v0_100049d4 = load i32, i32* @r25, align 4
  store i32 268454364, i32* @lr, align 4
  %v1_100049d8 = inttoptr i32 %v0_100049d4 to i32*
  %v2_100049d8 = call i32 @function_100088c0(i32* %v1_100049d8)
  %v0_100049dc = load i32, i32* @r23, align 4
  store i32 268454372, i32* @lr, align 4
  %v1_100049e0 = inttoptr i32 %v0_100049dc to i32*
  %v2_100049e0 = call i32 @function_10008a74(i32* %v1_100049e0)
  %v3_100049e4 = icmp eq i32 %v2_100049e0, 0
  br i1 %v3_100049e4, label %dec_label_pc_100049ec, label %dec_label_pc_100047e0

dec_label_pc_100049ec:                            ; preds = %dec_label_pc_100047d0.loopexit, %dec_label_pc_100049d4, %dec_label_pc_100047e0, %dec_label_pc_100047cc
  %v0_100049ec = load i32, i32* @r23, align 4
  %v0_100049f0 = load i32, i32* @r28, align 4
  %v1_100049f0 = urem i32 %v0_100049f0, 256
  store i32 %v1_100049f0, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100049f8.31 to i32), i32* @lr, align 4
  %v1_100049f4 = inttoptr i32 %v0_100049ec to i32*
  %v2_100049f4 = call i32 @function_100088c0(i32* %v1_100049f4)
  br label %dec_label_pc_100049f8

dec_label_pc_100049f8:                            ; preds = %dec_label_pc_100047b0, %dec_label_pc_100049ec
  store i32 ptrtoint ([3 x i8]* @global_var_10004a00.32 to i32), i32* @lr, align 4
  %v1_100049fc = call i32 @function_10009bfc(i32 1)
  store i32 ptrtoint ([3 x i8]* @global_var_10004a08.33 to i32), i32* @lr, align 4
  %v1_10004a04 = call i32 @function_10007654(i32 13)
  store i32 ptrtoint ([3 x i8]* @global_var_10004a10.34 to i32), i32* @lr, align 4
  %v1_10004a0c = call i32 @function_10007654(i32 14)
  store i32 268454424, i32* @lr, align 4
  %v1_10004a14 = call i32 @function_10007654(i32 15)
  br label %dec_label_pc_10004a18

dec_label_pc_10004a18:                            ; preds = %dec_label_pc_10004590, %dec_label_pc_100049f8
  %v0_10004a1c = load i32, i32* @r31, align 4
  store i32 %v0_10004530, i32* @r23, align 4
  store i32 %v0_10004518, i32* @r25, align 4
  store i32 %v0_100044f8, i32* @r27, align 4
  store i32 %v0_10004538, i32* @r28, align 4
  store i32 %v0_10004508, i32* @r29, align 4
  store i32 %v0_10004520, i32* @r30, align 4
  store i32 %v0_10004528, i32* @r31, align 4
  ret i32 %v0_10004a1c

dec_label_pc_10004a50:                            ; preds = %dec_label_pc_100046d8
  %v3_100046d8 = icmp eq i32 %v0_1000470c74, 0
  %v1_10004a50 = add i32 %v0_1000470c74, 1
  br i1 %v3_100046d8, label %dec_label_pc_10004a58, label %dec_label_pc_100046e0

dec_label_pc_10004a58:                            ; preds = %dec_label_pc_10004a50
  %v0_10004a58 = load i32, i32* %r26.global-to-local, align 4
  %v2_10004a58 = add i32 %v0_10004a58, %v1_1000477476
  %v1_10004a5c = add i32 %v2_10004a58, 33
  %v2_10004a5c = inttoptr i32 %v1_10004a5c to i8*
  %v3_10004a5c = load i8, i8* %v2_10004a5c, align 1
  %v3_10004a60 = icmp eq i8 %v3_10004a5c, 65
  br i1 %v3_10004a60, label %dec_label_pc_10004a68, label %dec_label_pc_100046bc

dec_label_pc_10004a68:                            ; preds = %dec_label_pc_10004a58
  br label %dec_label_pc_100046bc.outer

dec_label_pc_10004a70:                            ; preds = %dec_label_pc_10004798
  store i32 0, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004a7c.35 to i32), i32* @lr, align 4
  %v1_10004a78 = call i32 @function_10007654(i32 13)
  store i32 ptrtoint ([3 x i8]* @global_var_10004a84.36 to i32), i32* @lr, align 4
  %v1_10004a80 = call i32 @function_10007654(i32 14)
  store i32 ptrtoint ([3 x i8]* @global_var_10004a8c.37 to i32), i32* @lr, align 4
  %v1_10004a88 = call i32 @function_10007654(i32 15)
  store i32 268454548, i32* @lr, align 4
  %v1_10004a90 = call i32 @function_10007654(i32 17)
  %v0_10004a98 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10004530, i32* @r23, align 4
  store i32 %v0_10004518, i32* @r25, align 4
  store i32 %v0_100044f8, i32* @r27, align 4
  store i32 %v0_10004538, i32* @r28, align 4
  store i32 %v0_10004508, i32* @r29, align 4
  store i32 %v0_10004520, i32* @r30, align 4
  store i32 %v0_10004528, i32* @r31, align 4
  ret i32 %v0_10004a98

dec_label_pc_10004acc:                            ; preds = %dec_label_pc_100044e8
  store i8 48, i8* %stack_var_-8776, align 1
  br label %dec_label_pc_10004590

; uselistorder directives
  uselistorder i32 %v2_100049e0, { 1, 0 }
  uselistorder i32 %v1_10004750, { 0, 2, 1 }
  uselistorder i32 %v1_10004774.lcssa, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v0_1000470c74, { 2, 0, 4, 1, 3 }
  uselistorder i32 %v1_1000477476, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_100046f022, { 1, 0 }
  uselistorder i32 %v1_1000468c, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 %v2_100045d8, { 1, 0, 2 }
  uselistorder i32 %v2_1000451c, { 1, 0 }
  uselistorder i32 %v2_100044fc, { 1, 2, 3, 4, 5, 6, 0, 7 }
  uselistorder i8* %stack_var_-8776, { 2, 0, 1 }
  uselistorder i8* %stack_var_-8760, { 1, 3, 0, 2 }
  uselistorder i32* %stack_var_-8792, { 0, 1, 3, 2 }
  uselistorder i32 (i32, i32)* @function_10007d80, { 1, 0 }
  uselistorder i32 268453848, { 1, 0 }
  uselistorder i8 58, { 1, 0 }
  uselistorder i32 (i8*, i32, i32)* @function_10007eb8, { 1, 0 }
  uselistorder i32 268453356, { 1, 0 }
  uselistorder label %dec_label_pc_10004a18, { 1, 0 }
  uselistorder label %dec_label_pc_100049f8, { 1, 0 }
  uselistorder label %dec_label_pc_100049ec, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_100049d4, { 1, 0 }
  uselistorder label %dec_label_pc_100048c8, { 1, 0 }
  uselistorder label %dec_label_pc_100048c8.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_100047e0, { 1, 0 }
  uselistorder label %dec_label_pc_100047e0.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_100047d0.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000476c, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10004750, { 1, 0 }
  uselistorder label %dec_label_pc_1000471c, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10004708, { 1, 0 }
  uselistorder label %dec_label_pc_100046e0, { 1, 0 }
  uselistorder label %dec_label_pc_100046bc, { 1, 0 }
  uselistorder label %dec_label_pc_10004684, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10004634, { 1, 0 }
  uselistorder label %dec_label_pc_100045dc.backedge, { 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_100045f4, { 1, 0 }
  uselistorder label %dec_label_pc_10004590, { 1, 0 }
}

define i32 @function_10004af0(i32 %arg1) local_unnamed_addr {
dec_label_pc_10004af0:
  %r11.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %stack_var_-8404 = alloca i32, align 4
  %stack_var_-8408 = alloca i32, align 4
  %stack_var_-4160 = alloca i32, align 4
  %stack_var_-8384 = alloca i32, align 4
  %stack_var_-8320 = alloca i32, align 4
  %stack_var_-8400 = alloca i32, align 4
  %stack_var_-8256 = alloca i32, align 4
  %v0_10004afc = load i32, i32* @r30, align 4
  %v0_10004b0c = load i32, i32* @r22, align 4
  %v0_10004b10 = load i32, i32* @r23, align 4
  %v0_10004b14 = load i32, i32* @r24, align 4
  %v0_10004b18 = load i32, i32* @r25, align 4
  %v0_10004b1c = load i32, i32* @r26, align 4
  %v0_10004b20 = load i32, i32* @r27, align 4
  %v0_10004b24 = load i32, i32* @r28, align 4
  %v0_10004b28 = load i32, i32* @r29, align 4
  %v0_10004b2c = load i32, i32* @r31, align 4
  store i32 268454708, i32* @lr, align 4
  %v0_10004b30 = call i32 @function_100087e8()
  store i32 %v0_10004b30, i32* @r30, align 4
  store i32 268454716, i32* @lr, align 4
  %v0_10004b38 = call i32 @function_10008460()
  store i32 %v0_10004b38, i32* @global_var_1001b50c.38, align 4
  %tmp52 = icmp slt i32 %v0_10004b38, 1
  br i1 %tmp52, label %dec_label_pc_10004b8c, label %dec_label_pc_10004b4c

dec_label_pc_10004b4c:                            ; preds = %dec_label_pc_10004ca4, %dec_label_pc_10004b94, %dec_label_pc_10004b8c, %dec_label_pc_10004af0
  %v0_10004b88 = phi i32 [ -1, %dec_label_pc_10004b94 ], [ -1, %dec_label_pc_10004b8c ], [ %v0_10004b38, %dec_label_pc_10004af0 ], [ 0, %dec_label_pc_10004ca4 ]
  store i32 %v0_10004b0c, i32* @r22, align 4
  store i32 %v0_10004b10, i32* @r23, align 4
  store i32 %v0_10004b14, i32* @r24, align 4
  store i32 %v0_10004b18, i32* @r25, align 4
  store i32 %v0_10004b1c, i32* @r26, align 4
  store i32 %v0_10004b20, i32* @r27, align 4
  store i32 %v0_10004b24, i32* @r28, align 4
  store i32 %v0_10004b28, i32* @r29, align 4
  store i32 %v0_10004afc, i32* @r30, align 4
  store i32 %v0_10004b2c, i32* @r31, align 4
  ret i32 %v0_10004b88

dec_label_pc_10004b8c:                            ; preds = %dec_label_pc_10004af0
  %v3_10004b8c = icmp eq i32 %v0_10004b38, -1
  br i1 %v3_10004b8c, label %dec_label_pc_10004b4c, label %dec_label_pc_10004b94

dec_label_pc_10004b94:                            ; preds = %dec_label_pc_10004b8c
  store i32 268454816, i32* @lr, align 4
  %v1_10004b9c = call i32 @function_10009bfc(i32 5)
  store i32 4096, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10004ba8.39 to i32), i32* @lr, align 4
  %v0_10004ba4 = call i32 @function_10009308()
  store i32 %v0_10004ba4, i32* %r11.global-to-local, align 4
  %v3_10004bb4 = inttoptr i32 %v0_10004ba4 to i8*
  store i8 0, i8* %v3_10004bb4, align 1
  store i32 0, i32* %r28.global-to-local, align 4
  %v0_10004bc0 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10004bc0, i32* @global_var_1001b508.40, align 4
  store i32 0, i32* @global_var_1001b504.41, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004bcc.42 to i32), i32* @lr, align 4
  %v1_10004bc8 = call i32 @function_100076e0(i32 13)
  %v2_10004bd0 = ptrtoint i32* %stack_var_-8256 to i32
  store i32 %v2_10004bd0, i32* @r25, align 4
  store i32 268454872, i32* @lr, align 4
  %v1_10004bd4 = call i32 @function_100076e0(i32 14)
  %v3_10004be0 = call i32 @function_1000762c(i32 13, i32* null)
  store i32 %v2_10004bd0, i32* @r3, align 4
  %v2_10004bec = bitcast i32* %stack_var_-8256 to i8*
  %v3_10004bec = call i32 @function_10007c80(i8* %v2_10004bec, i32 %v3_10004be0)
  %v0_10004bf0 = load i32, i32* @r25, align 4
  %v2_10004bf0 = add i32 %v0_10004bf0, %v3_10004bec
  store i32 %v2_10004bf0, i32* %r29.global-to-local, align 4
  store i32 268454904, i32* @lr, align 4
  %v0_10004bf4 = call i32 @function_100084a8()
  %v2_10004bf8 = ptrtoint i32* %stack_var_-8400 to i32
  %v3_10004c00 = trunc i32 %v0_10004bf4 to i8
  %v4_10004c00 = call i32 @function_10008134(i8 %v3_10004c00, i32 10, i32 %v2_10004bf8)
  store i32 %v2_10004bf0, i32* @r3, align 4
  %v2_10004c0c = inttoptr i32 %v2_10004bf0 to i8*
  %v3_10004c0c = call i32 @function_10007c80(i8* %v2_10004c0c, i32 %v4_10004c00)
  %v0_10004c14 = load i32, i32* %r29.global-to-local, align 4
  %v2_10004c14 = add i32 %v0_10004c14, %v3_10004c0c
  store i32 %v2_10004c14, i32* %r29.global-to-local, align 4
  %v3_10004c1c = call i32 @function_1000762c(i32 14, i32* null)
  store i32 %v2_10004c14, i32* @r3, align 4
  %v2_10004c28 = inttoptr i32 %v2_10004c14 to i8*
  %v3_10004c28 = call i32 @function_10007c80(i8* %v2_10004c28, i32 %v3_10004c1c)
  store i32 %v3_10004c28, i32* @r31, align 4
  store i32 268454976, i32* @lr, align 4
  %v2_10004c3c = call i32 @function_10008580(i32 %v2_10004bd0, i32 0)
  %v3_10004c40 = icmp eq i32 %v2_10004c3c, -1
  br i1 %v3_10004c40, label %dec_label_pc_10004b4c, label %dec_label_pc_10004c48

dec_label_pc_10004c48:                            ; preds = %dec_label_pc_10004b94
  store i32 ptrtoint ([3 x i8]* @global_var_10004c4c.43 to i32), i32* @lr, align 4
  %v0_10004c48 = call i32 @function_10008418()
  store i32 ptrtoint ([3 x i8]* @global_var_10004c54.44 to i32), i32* @lr, align 4
  %v1_10004c50 = call i32 @function_10007654(i32 13)
  store i32 268455004, i32* @lr, align 4
  %v1_10004c58 = call i32 @function_10007654(i32 14)
  %v3_10004c5c = load i32, i32* @global_var_1001b508.40, align 4
  store i32 268455020, i32* @lr, align 4
  %v3_10004c68 = call i32 @function_10008698(i32 %v2_10004bd0, i32 %v3_10004c5c, i32 4095)
  %v3_10004c6c = icmp eq i32 %v3_10004c68, -1
  br i1 %v3_10004c6c, label %dec_label_pc_10004c7c, label %dec_label_pc_10004c74

dec_label_pc_10004c74:                            ; preds = %dec_label_pc_10004c48
  %v3_10004c74 = load i32, i32* @global_var_1001b508.40, align 4
  %v0_10004c78 = load i32, i32* %r28.global-to-local, align 4
  %v3_10004c78 = trunc i32 %v0_10004c78 to i8
  %v4_10004c78 = add i32 %v3_10004c74, %v3_10004c68
  %v5_10004c78 = inttoptr i32 %v4_10004c78 to i8*
  store i8 %v3_10004c78, i8* %v5_10004c78, align 1
  br label %dec_label_pc_10004c7c

dec_label_pc_10004c7c:                            ; preds = %dec_label_pc_10004c48, %dec_label_pc_10004c74
  %v0_10004c7c = load i32, i32* %r29.global-to-local, align 4
  %v1_10004c7c = load i32, i32* @r31, align 4
  %v2_10004c7c = add i32 %v1_10004c7c, %v0_10004c7c
  store i32 %v2_10004bd0, i32* @r3, align 4
  %v0_10004c84 = load i32, i32* @r25, align 4
  %v2_10004c84 = sub i32 %v2_10004c7c, %v0_10004c84
  store i32 %v2_10004c84, i32* @r4, align 4
  %v0_10004c88 = load i32, i32* @r30, align 4
  store i32 %v0_10004c88, i32* %r29.global-to-local, align 4
  store i32 268455056, i32* @lr, align 4
  %v0_10004c8c = call i32 @function_10007d00()
  store i32 400, i32* @r28, align 4
  store i32 0, i32* @r26, align 4
  %v2_10004c98 = ptrtoint i32* %stack_var_-8320 to i32
  store i32 %v2_10004c98, i32* @r24, align 4
  %v2_10004c9c = ptrtoint i32* %stack_var_-8384 to i32
  store i32 %v2_10004c9c, i32* @r22, align 4
  %v2_10004ca0 = ptrtoint i32* %stack_var_-4160 to i32
  %v2_10004d8c = bitcast i32* %stack_var_-8320 to i8*
  %v2_10004dd0 = bitcast i32* %stack_var_-8384 to i8*
  br label %dec_label_pc_10004ca4

dec_label_pc_10004ca4:                            ; preds = %dec_label_pc_10004d50, %dec_label_pc_10004c7c
  store i32 268455084, i32* @lr, align 4
  %v1_10004ca8 = call i32 @function_100076e0(i32 13)
  %v3_10004cb4 = call i32 @function_1000762c(i32 13, i32* null)
  store i32 268455100, i32* @lr, align 4
  %v1_10004cb8 = call i32 @function_10008964(i32 %v3_10004cb4)
  store i32 %v1_10004cb8, i32* @r27, align 4
  %v3_10004cbc = icmp eq i32 %v1_10004cb8, 0
  br i1 %v3_10004cbc, label %dec_label_pc_10004b4c, label %dec_label_pc_10004cc4

dec_label_pc_10004cc4:                            ; preds = %dec_label_pc_10004ca4
  store i32 ptrtoint ([3 x i8]* @global_var_10004ccc.46 to i32), i32* @lr, align 4
  %v1_10004cc8 = call i32 @function_10007654(i32 13)
  store i32 268455128, i32* @lr, align 4
  %v1_10004cd4 = call i32 @function_100044e8(i32 48101)
  store i32 268455136, i32* @lr, align 4
  %v1_10004cdc = call i32 @function_100044e8(i32 1991)
  store i32 268455144, i32* @lr, align 4
  %v1_10004ce4 = call i32 @function_100044e8(i32 1338)
  %v0_10004ce88 = load i32, i32* @r27, align 4
  store i32 268455152, i32* @lr, align 4
  %v1_10004cec9 = inttoptr i32 %v0_10004ce88 to i32*
  %v2_10004cec10 = call i32 @function_10008a74(i32* %v1_10004cec9)
  %v3_10004cf013 = icmp eq i32 %v2_10004cec10, 0
  br i1 %v3_10004cf013, label %dec_label_pc_10004d50, label %dec_label_pc_10004cf8.preheader

dec_label_pc_10004cf8.preheader:                  ; preds = %dec_label_pc_10004cc4, %dec_label_pc_10004ce8.backedge
  %v0_10004cf815 = phi i32 [ %v2_10004cec, %dec_label_pc_10004ce8.backedge ], [ %v2_10004cec10, %dec_label_pc_10004cc4 ]
  br label %dec_label_pc_10004cf8

dec_label_pc_10004cf8:                            ; preds = %dec_label_pc_10004cf8.preheader, %dec_label_pc_10004d3c
  %v0_10004d0c = phi i32 [ %v0_10004cf815, %dec_label_pc_10004cf8.preheader ], [ %v2_10004d44, %dec_label_pc_10004d3c ]
  %v1_10004cf8 = add i32 %v0_10004d0c, 11
  %v2_10004cf8 = inttoptr i32 %v1_10004cf8 to i8*
  %v3_10004cf8 = load i8, i8* %v2_10004cf8, align 1
  %v4_10004cf8 = zext i8 %v3_10004cf8 to i32
  %v1_10004cfc = add nuw nsw i32 %v4_10004cf8, 208
  %v1_10004d00 = urem i32 %v1_10004cfc, 256
  %v2_10004d04 = icmp ugt i32 %v1_10004d00, 9
  br i1 %v2_10004d04, label %dec_label_pc_10004ce8.backedge, label %dec_label_pc_10004d0c

dec_label_pc_10004d0c:                            ; preds = %dec_label_pc_10004cf8
  store i32 268455196, i32* @lr, align 4
  %v3_10004d18 = call i32 @function_100099b0(i8* %v2_10004cf8, i32 %v1_10004d00)
  %v0_10004d1c = load i32, i32* @r28, align 4
  %v2_10004d1c = icmp slt i32 %v0_10004d1c, %v3_10004d18
  store i32 %v3_10004d18, i32* %r30.global-to-local, align 4
  br i1 %v2_10004d1c, label %dec_label_pc_10004d5c, label %dec_label_pc_10004d28

dec_label_pc_10004d28:                            ; preds = %dec_label_pc_10004d0c
  store i32 268455216, i32* @lr, align 4
  %v0_10004d2c = call i32 @function_100087e8()
  %v0_10004d30 = load i32, i32* @r29, align 4
  %v2_10004d30 = sub i32 %v0_10004d2c, %v0_10004d30
  %tmp53 = icmp slt i32 %v2_10004d30, 601
  br i1 %tmp53, label %dec_label_pc_10004eb8, label %dec_label_pc_10004d3c

dec_label_pc_10004d3c:                            ; preds = %dec_label_pc_10004d28
  %v0_10004d3c = load i32, i32* @r27, align 4
  store i32 400, i32* @r28, align 4
  store i32 268455240, i32* @lr, align 4
  %v1_10004d44 = inttoptr i32 %v0_10004d3c to i32*
  %v2_10004d44 = call i32 @function_10008a74(i32* %v1_10004d44)
  %v3_10004d48 = icmp eq i32 %v2_10004d44, 0
  br i1 %v3_10004d48, label %dec_label_pc_10004d50, label %dec_label_pc_10004cf8

dec_label_pc_10004d50:                            ; preds = %dec_label_pc_10004ce8.backedge, %dec_label_pc_10004d3c, %dec_label_pc_10004cc4
  %v0_10004d50 = load i32, i32* @r27, align 4
  store i32 268455256, i32* @lr, align 4
  %v1_10004d54 = inttoptr i32 %v0_10004d50 to i32*
  %v2_10004d54 = call i32 @function_100088c0(i32* %v1_10004d54)
  br label %dec_label_pc_10004ca4

dec_label_pc_10004d5c:                            ; preds = %dec_label_pc_10004d0c
  store i32 268455268, i32* @lr, align 4
  %v0_10004d60 = call i32 @function_100087e8()
  store i32 %v0_10004d60, i32* @r23, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004d70.47 to i32), i32* @lr, align 4
  %v1_10004d6c = call i32 @function_100076e0(i32 13)
  store i32 268455288, i32* @lr, align 4
  %v1_10004d74 = call i32 @function_100076e0(i32 14)
  %v3_10004d80 = call i32 @function_1000762c(i32 13, i32* null)
  store i32 %v2_10004c98, i32* @r3, align 4
  %v3_10004d8c = call i32 @function_10007c80(i8* %v2_10004d8c, i32 %v3_10004d80)
  %v0_10004d90 = load i32, i32* @r31, align 4
  %v0_10004d94 = load i32, i32* @r24, align 4
  %v2_10004d94 = add i32 %v0_10004d94, %v3_10004d8c
  store i32 %v2_10004d94, i32* %r28.global-to-local, align 4
  store i32 %v2_10004d94, i32* @r3, align 4
  %v2_10004d9c = inttoptr i32 %v2_10004d94 to i8*
  %v3_10004d9c = call i32 @function_10007c80(i8* %v2_10004d9c, i32 %v0_10004d90)
  store i32 %v3_10004d9c, i32* %r29.global-to-local, align 4
  %v3_10004dac = call i32 @function_1000762c(i32 14, i32* null)
  %v2_10004db4 = add i32 %v3_10004d9c, %v2_10004d94
  store i32 %v2_10004db4, i32* @r3, align 4
  %v2_10004db8 = inttoptr i32 %v2_10004db4 to i8*
  %v3_10004db8 = call i32 @function_10007c80(i8* %v2_10004db8, i32 %v3_10004dac)
  %v3_10004dc4 = call i32 @function_1000762c(i32 13, i32* null)
  store i32 %v2_10004c9c, i32* @r3, align 4
  %v3_10004dd0 = call i32 @function_10007c80(i8* %v2_10004dd0, i32 %v3_10004dc4)
  %v0_10004dd4 = load i32, i32* @r31, align 4
  %v0_10004dd8 = load i32, i32* @r22, align 4
  %v2_10004dd8 = add i32 %v0_10004dd8, %v3_10004dd0
  store i32 %v2_10004dd8, i32* %r28.global-to-local, align 4
  store i32 %v2_10004dd8, i32* @r3, align 4
  %v2_10004de0 = inttoptr i32 %v2_10004dd8 to i8*
  %v3_10004de0 = call i32 @function_10007c80(i8* %v2_10004de0, i32 %v0_10004dd4)
  store i32 %v3_10004de0, i32* %r29.global-to-local, align 4
  %v3_10004df0 = call i32 @function_1000762c(i32 29, i32* null)
  %v2_10004df8 = add i32 %v3_10004de0, %v2_10004dd8
  store i32 %v2_10004df8, i32* @r3, align 4
  %v2_10004dfc = inttoptr i32 %v2_10004df8 to i8*
  %v3_10004dfc = call i32 @function_10007c80(i8* %v2_10004dfc, i32 %v3_10004df0)
  store i32 ptrtoint ([3 x i8]* @global_var_10004e08.49 to i32), i32* @lr, align 4
  %v1_10004e04 = call i32 @function_10007654(i32 13)
  store i32 268455440, i32* @lr, align 4
  %v1_10004e0c = call i32 @function_10007654(i32 14)
  store i32 4095, i32* @r5, align 4
  store i32 268455456, i32* @lr, align 4
  %v3_10004e1c = call i32 @function_10008698(i32 %v2_10004c98, i32 %v2_10004bd0, i32 4095)
  %v3_10004e20 = icmp eq i32 %v3_10004e1c, -1
  store i32 %v3_10004e1c, i32* %r29.global-to-local, align 4
  br i1 %v3_10004e20, label %dec_label_pc_10004f0c, label %dec_label_pc_10004e2c

dec_label_pc_10004e2c:                            ; preds = %dec_label_pc_10004d5c
  %v0_10004e2c = load i32, i32* @r1, align 4
  %v2_10004e2c = add i32 %v0_10004e2c, %v3_10004e1c
  %v3_10004e34 = add i32 %v2_10004e2c, 160
  %v4_10004e34 = inttoptr i32 %v3_10004e34 to i8*
  store i8 0, i8* %v4_10004e34, align 1
  store i32 268455488, i32* @lr, align 4
  %v1_10004e3c = call i32 @function_100076e0(i32 30)
  %v3_10004e48 = call i32 @function_1000762c(i32 30, i32* null)
  %v0_10004e4c = load i32, i32* %r29.global-to-local, align 4
  %v1_10004e4c = add i32 %v0_10004e4c, -1
  %v4_10004e58 = call i32 @function_10008008(i8* %v2_10004bec, i32 %v1_10004e4c, i32 %v3_10004e48)
  %v3_10004e5c = icmp eq i32 %v4_10004e58, -1
  br i1 %v3_10004e5c, label %dec_label_pc_10004e78, label %dec_label_pc_10004e64

dec_label_pc_10004e64:                            ; preds = %dec_label_pc_10004e2c
  store i32 268455532, i32* @lr, align 4
  %v1_10004e68 = call i32 @function_10008830(i32 %v2_10004bd0)
  %v0_10004e6c = load i32, i32* %r30.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004e78.50 to i32), i32* @lr, align 4
  %v2_10004e74 = call i32 @function_10008538(i32 %v0_10004e6c, i32 9)
  br label %dec_label_pc_10004e78

dec_label_pc_10004e78:                            ; preds = %dec_label_pc_10004e2c, %dec_label_pc_10004e64
  store i32 ptrtoint (i32* @global_var_10004e80.51 to i32), i32* @lr, align 4
  %v1_10004e7c = call i32 @function_10007654(i32 30)
  store i32 268455556, i32* @lr, align 4
  %v0_10004e80 = call i32 @function_100084a8()
  %v0_10004e84 = load i32, i32* %r30.global-to-local, align 4
  %v4_10004e84 = icmp eq i32 %v0_10004e84, %v0_10004e80
  br i1 %v4_10004e84, label %dec_label_pc_10004eac, label %dec_label_pc_10004e8c

dec_label_pc_10004e8c:                            ; preds = %dec_label_pc_10004e78
  store i32 268455568, i32* @lr, align 4
  %v0_10004e8c = call i32 @function_100084f0()
  %v0_10004e90 = load i32, i32* %r30.global-to-local, align 4
  %v4_10004e90 = icmp eq i32 %v0_10004e90, %v0_10004e8c
  br i1 %v4_10004e90, label %dec_label_pc_10004eac, label %dec_label_pc_10004e98

dec_label_pc_10004e98:                            ; preds = %dec_label_pc_10004e8c
  %v3_10004e98 = load i32, i32* @global_var_1001b508.40, align 4
  %v3_10004ea0 = call i32 @function_100080b4(i8* %v2_10004bec, i32 %v3_10004e98)
  %v3_10004ea4 = icmp eq i32 %v3_10004ea0, 0
  br i1 %v3_10004ea4, label %dec_label_pc_10004ee8, label %dec_label_pc_10004e98.dec_label_pc_10004eac_crit_edge

dec_label_pc_10004e98.dec_label_pc_10004eac_crit_edge: ; preds = %dec_label_pc_10004e98
  %v0_10004eac.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10004eac

dec_label_pc_10004eac:                            ; preds = %dec_label_pc_10004e98.dec_label_pc_10004eac_crit_edge, %dec_label_pc_10004e8c, %dec_label_pc_10004e78
  %v0_10004eac = phi i32 [ %v0_10004eac.pre, %dec_label_pc_10004e98.dec_label_pc_10004eac_crit_edge ], [ %v0_10004e8c, %dec_label_pc_10004e8c ], [ %v0_10004e80, %dec_label_pc_10004e78 ]
  store i32 %v0_10004eac, i32* @r28, align 4
  %v0_10004eb0 = load i32, i32* @r23, align 4
  store i32 %v0_10004eb0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10004ce8.backedge

dec_label_pc_10004ce8.backedge:                   ; preds = %dec_label_pc_10004cf8, %dec_label_pc_10004eac, %dec_label_pc_10004edc, %dec_label_pc_10005020, %dec_label_pc_10004eb8, %dec_label_pc_10004ec0
  %v0_10004ce8 = load i32, i32* @r27, align 4
  store i32 268455152, i32* @lr, align 4
  %v1_10004cec = inttoptr i32 %v0_10004ce8 to i32*
  %v2_10004cec = call i32 @function_10008a74(i32* %v1_10004cec)
  %v3_10004cf0 = icmp eq i32 %v2_10004cec, 0
  br i1 %v3_10004cf0, label %dec_label_pc_10004d50, label %dec_label_pc_10004cf8.preheader

dec_label_pc_10004eb8:                            ; preds = %dec_label_pc_10004d28
  %v0_10004eb8 = load i32, i32* %r30.global-to-local, align 4
  %tmp54 = icmp slt i32 %v0_10004eb8, 401
  br i1 %tmp54, label %dec_label_pc_10004ce8.backedge, label %dec_label_pc_10004ec0

dec_label_pc_10004ec0:                            ; preds = %dec_label_pc_10004eb8
  %v0_10004ec8 = load i32, i32* @r26, align 4
  %v1_10004ecc = urem i32 %v0_10004ec8, 10
  %v4_10004ed4 = icmp eq i32 %v1_10004ecc, 0
  br i1 %v4_10004ed4, label %dec_label_pc_10004edc, label %dec_label_pc_10004ce8.backedge

dec_label_pc_10004edc:                            ; preds = %dec_label_pc_10004ec0
  store i32 268455652, i32* @lr, align 4
  %v1_10004ee0 = call i32 @function_10009bfc(i32 1)
  br label %dec_label_pc_10004ce8.backedge

dec_label_pc_10004ee8:                            ; preds = %dec_label_pc_10004e98
  store i32 268455672, i32* @lr, align 4
  %v2_10004ef4 = call i32 @function_10008580(i32 %v2_10004bd0, i32 0)
  %v3_10004ef8 = icmp eq i32 %v2_10004ef4, -1
  store i32 %v2_10004ef4, i32* @r31, align 4
  br i1 %v3_10004ef8, label %dec_label_pc_10005074, label %dec_label_pc_10004f04

dec_label_pc_10004f04:                            ; preds = %dec_label_pc_10004ee8, %dec_label_pc_10005074
  store i32 268455692, i32* @lr, align 4
  %v0_10004f08 = call i32 @function_10008418()
  br label %dec_label_pc_10004f0c

dec_label_pc_10004f0c:                            ; preds = %dec_label_pc_10004d5c, %dec_label_pc_10004f04
  store i32 268455708, i32* @lr, align 4
  %v2_10004f18 = call i32 @function_10008580(i32 %v2_10004c98, i32 0)
  %v3_10004f1c = icmp eq i32 %v2_10004f18, -1
  store i32 %v2_10004f18, i32* %r28.global-to-local, align 4
  br i1 %v3_10004f1c, label %dec_label_pc_10005020, label %dec_label_pc_10004f28

dec_label_pc_10004f28:                            ; preds = %dec_label_pc_10004f0c
  store i32 ptrtoint ([3 x i8]* @global_var_10004f30.52 to i32), i32* @lr, align 4
  %v1_10004f2c = call i32 @function_100076e0(i32 18)
  store i32 268455736, i32* @lr, align 4
  %v1_10004f34 = call i32 @function_100076e0(i32 19)
  %v3_10004f40 = call i32 @function_1000762c(i32 18, i32* nonnull %stack_var_-8408)
  store i32 %v3_10004f40, i32* @r31, align 4
  %v3_10004f50 = call i32 @function_1000762c(i32 19, i32* nonnull %stack_var_-8404)
  store i32 %v3_10004f50, i32* %r29.global-to-local, align 4
  %v0_10004f5858 = load i32, i32* %r28.global-to-local, align 4
  store i32 268455784, i32* @lr, align 4
  %v3_10004f6459 = call i32 @function_10008650(i32 %v0_10004f5858, i32 %v2_10004ca0, i32 4096)
  %tmp5561 = icmp slt i32 %v3_10004f6459, 1
  br i1 %tmp5561, label %dec_label_pc_10005058, label %dec_label_pc_10004f70

dec_label_pc_10004f70:                            ; preds = %dec_label_pc_10004f28, %dec_label_pc_10004f58.backedge
  %v3_10004f6462 = phi i32 [ %v3_10004f64, %dec_label_pc_10004f58.backedge ], [ %v3_10004f6459, %dec_label_pc_10004f28 ]
  %v3_10004f6863.in = phi i32 [ %v3_10004f64, %dec_label_pc_10004f58.backedge ], [ %v3_10004f6459, %dec_label_pc_10004f28 ]
  %v3_10004f6863 = icmp eq i32 %v3_10004f6863.in, 0
  %v3_10004f70 = load i32, i32* %stack_var_-8408, align 4
  %v2_10004f74 = icmp slt i32 %v3_10004f6462, %v3_10004f70
  br i1 %v2_10004f74, label %dec_label_pc_10004fb4, label %dec_label_pc_10004f7c

dec_label_pc_10004f7c:                            ; preds = %dec_label_pc_10004f70
  store i32 0, i32* %r11.global-to-local, align 4
  %v0_10004f90.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10004f90

dec_label_pc_10004f90:                            ; preds = %dec_label_pc_10004f7c, %dec_label_pc_10004fac
  %v0_10004fb0 = phi i32 [ %v3_10004f6462, %dec_label_pc_10004f7c ], [ %v1_10004fb0, %dec_label_pc_10004fac ]
  %v0_10004fac = phi i32 [ %v2_10004ca0, %dec_label_pc_10004f7c ], [ %v1_10004fac, %dec_label_pc_10004fac ]
  %v1_10004f90 = phi i32 [ 0, %dec_label_pc_10004f7c ], [ %v1_10004f9019, %dec_label_pc_10004fac ]
  %v2_10004f90 = add i32 %v1_10004f90, %v0_10004f90.pre
  %v3_10004f90 = inttoptr i32 %v2_10004f90 to i8*
  %v4_10004f90 = load i8, i8* %v3_10004f90, align 1
  %v1_10004f94 = add i32 %v1_10004f90, 1
  store i32 %v1_10004f94, i32* %r11.global-to-local, align 4
  %v1_10004f98 = inttoptr i32 %v0_10004fac to i8*
  %v2_10004f98 = load i8, i8* %v1_10004f98, align 1
  %v4_10004fa0 = icmp eq i8 %v2_10004f98, %v4_10004f90
  br i1 %v4_10004fa0, label %dec_label_pc_10004ff8, label %dec_label_pc_10004fa8

dec_label_pc_10004fa8:                            ; preds = %dec_label_pc_10004f90
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10004fac

dec_label_pc_10004fac:                            ; preds = %dec_label_pc_10004ff8, %dec_label_pc_10004fa8
  %v1_10004f9019 = phi i32 [ %v1_10004f94, %dec_label_pc_10004ff8 ], [ 0, %dec_label_pc_10004fa8 ]
  %v1_10004fac = add i32 %v0_10004fac, 1
  %v1_10004fb0 = add i32 %v0_10004fb0, -1
  %v2_10004fb0 = icmp eq i32 %v1_10004fb0, 0
  br i1 %v2_10004fb0, label %dec_label_pc_10004fb4, label %dec_label_pc_10004f90

dec_label_pc_10004fb4:                            ; preds = %dec_label_pc_10004fac, %dec_label_pc_10004f70
  %v3_10004fb4 = load i32, i32* %stack_var_-8404, align 4
  %v2_10004fb8 = icmp slt i32 %v3_10004f6462, %v3_10004fb4
  br i1 %v2_10004fb8, label %dec_label_pc_10004f58.backedge, label %dec_label_pc_10004fc0

dec_label_pc_10004fc0:                            ; preds = %dec_label_pc_10004fb4
  store i32 0, i32* %r11.global-to-local, align 4
  br i1 %v3_10004f6863, label %dec_label_pc_10004f58.backedge, label %dec_label_pc_10004fd4.lr.ph

dec_label_pc_10004f58.backedge:                   ; preds = %dec_label_pc_10004fd0.backedge, %dec_label_pc_10004fc0, %dec_label_pc_10004fb4
  %v0_10004f58 = load i32, i32* %r28.global-to-local, align 4
  store i32 268455784, i32* @lr, align 4
  %v3_10004f64 = call i32 @function_10008650(i32 %v0_10004f58, i32 %v2_10004ca0, i32 4096)
  %tmp55 = icmp slt i32 %v3_10004f64, 1
  br i1 %tmp55, label %dec_label_pc_10005058, label %dec_label_pc_10004f70

dec_label_pc_10004fd4.lr.ph:                      ; preds = %dec_label_pc_10004fc0
  %v0_10004fd4.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10004fd4

dec_label_pc_10004fd4:                            ; preds = %dec_label_pc_10004fd4.lr.ph, %dec_label_pc_10004fd0.backedge
  %v0_10004fd0 = phi i32 [ %v3_10004f6462, %dec_label_pc_10004fd4.lr.ph ], [ %v1_10004fd0, %dec_label_pc_10004fd0.backedge ]
  %storemerge.in = phi i32 [ %v2_10004ca0, %dec_label_pc_10004fd4.lr.ph ], [ %storemerge, %dec_label_pc_10004fd0.backedge ]
  %v1_10004fd4 = phi i32 [ 0, %dec_label_pc_10004fd4.lr.ph ], [ %v1_10004fd425, %dec_label_pc_10004fd0.backedge ]
  %v2_10004fd4 = add i32 %v1_10004fd4, %v0_10004fd4.pre
  %v3_10004fd4 = inttoptr i32 %v2_10004fd4 to i8*
  %v4_10004fd4 = load i8, i8* %v3_10004fd4, align 1
  %v1_10004fd8 = add i32 %v1_10004fd4, 1
  store i32 %v1_10004fd8, i32* %r11.global-to-local, align 4
  %v1_10004fdc = inttoptr i32 %storemerge.in to i8*
  %v2_10004fdc = load i8, i8* %v1_10004fdc, align 1
  %v4_10004fe4 = icmp eq i8 %v2_10004fdc, %v4_10004fd4
  br i1 %v4_10004fe4, label %dec_label_pc_1000504c, label %dec_label_pc_10004fec

dec_label_pc_10004fec:                            ; preds = %dec_label_pc_10004fd4
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10004fd0.backedge

dec_label_pc_10004fd0.backedge:                   ; preds = %dec_label_pc_1000504c, %dec_label_pc_10004fec
  %v1_10004fd425 = phi i32 [ 0, %dec_label_pc_10004fec ], [ %v1_10004fd8, %dec_label_pc_1000504c ]
  %storemerge = add i32 %storemerge.in, 1
  %v1_10004fd0 = add i32 %v0_10004fd0, -1
  %v2_10004fd0 = icmp eq i32 %v1_10004fd0, 0
  br i1 %v2_10004fd0, label %dec_label_pc_10004f58.backedge, label %dec_label_pc_10004fd4

dec_label_pc_10004ff8:                            ; preds = %dec_label_pc_10004f90
  %v4_10004f9c = icmp eq i32 %v3_10004f70, %v1_10004f94
  br i1 %v4_10004f9c, label %dec_label_pc_10004ffc, label %dec_label_pc_10004fac

dec_label_pc_10004ffc:                            ; preds = %dec_label_pc_10004ff8, %dec_label_pc_1000504c
  store i32 ptrtoint ([3 x i8]* @global_var_10005004.53 to i32), i32* @lr, align 4
  %v1_10005000 = call i32 @function_10007654(i32 18)
  store i32 268455948, i32* @lr, align 4
  %v1_10005008 = call i32 @function_10007654(i32 19)
  store i32 268455956, i32* @lr, align 4
  %v0_10005010 = call i32 @function_10008418()
  %v0_10005014 = load i32, i32* %r30.global-to-local, align 4
  store i32 268455968, i32* @lr, align 4
  %v2_1000501c = call i32 @function_10008538(i32 %v0_10005014, i32 9)
  br label %dec_label_pc_10005020

dec_label_pc_10005020:                            ; preds = %dec_label_pc_10004f0c, %dec_label_pc_10005058, %dec_label_pc_10004ffc
  store i32 64, i32* @r4, align 4
  store i32 %v2_10004c98, i32* @r3, align 4
  store i32 268455980, i32* @lr, align 4
  %v0_10005028 = call i32 @function_10007d00()
  store i32 %v2_10004c9c, i32* @r3, align 4
  store i32 64, i32* @r4, align 4
  %v0_10005034 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_10005034, i32* @r28, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000503c.54 to i32), i32* @lr, align 4
  %v0_10005038 = call i32 @function_10007d00()
  store i32 268456004, i32* @lr, align 4
  %v1_10005040 = call i32 @function_10009bfc(i32 1)
  %v0_10005044 = load i32, i32* @r23, align 4
  store i32 %v0_10005044, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10004ce8.backedge

dec_label_pc_1000504c:                            ; preds = %dec_label_pc_10004fd4
  %v4_10004fe0 = icmp eq i32 %v3_10004fb4, %v1_10004fd8
  br i1 %v4_10004fe0, label %dec_label_pc_10004ffc, label %dec_label_pc_10004fd0.backedge

dec_label_pc_10005058:                            ; preds = %dec_label_pc_10004f58.backedge, %dec_label_pc_10004f28
  store i32 ptrtoint ([3 x i8]* @global_var_10005060.55 to i32), i32* @lr, align 4
  %v1_1000505c = call i32 @function_10007654(i32 18)
  store i32 268456040, i32* @lr, align 4
  %v1_10005064 = call i32 @function_10007654(i32 19)
  store i32 268456048, i32* @lr, align 4
  %v0_1000506c = call i32 @function_10008418()
  br label %dec_label_pc_10005020

dec_label_pc_10005074:                            ; preds = %dec_label_pc_10004ee8
  %v0_10005074 = load i32, i32* %r30.global-to-local, align 4
  store i32 268456064, i32* @lr, align 4
  %v2_1000507c = call i32 @function_10008538(i32 %v0_10005074, i32 9)
  br label %dec_label_pc_10004f04

; uselistorder directives
  uselistorder i32 %v1_10004fd0, { 1, 0 }
  uselistorder i32 %v1_10004fd8, { 1, 0, 2 }
  uselistorder i32 %v1_10004fd4, { 1, 0 }
  uselistorder i32 %v3_10004f64, { 2, 1, 0 }
  uselistorder i32 %v1_10004fb0, { 1, 0 }
  uselistorder i32 %v1_10004f90, { 1, 0 }
  uselistorder i32 %v3_10004f6462, { 3, 0, 2, 1 }
  uselistorder i32 %v2_10004cec, { 1, 0 }
  uselistorder i32 %v2_10004d44, { 1, 0 }
  uselistorder i32 %v1_10004d00, { 1, 0 }
  uselistorder i32 %v2_10004ca0, { 1, 3, 2, 0 }
  uselistorder i32 %v2_10004c14, { 1, 0, 2 }
  uselistorder i32 %v2_10004bf0, { 1, 0, 2 }
  uselistorder i32 %v2_10004bd0, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 %v0_10004b38, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-8408, { 1, 0 }
  uselistorder i32* %stack_var_-8404, { 1, 0 }
  uselistorder i32* %r30.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2, 4, 3, 5, 6, 7 }
  uselistorder i32 268455784, { 1, 0 }
  uselistorder i32 (i32*)* @function_10008a74, { 3, 2, 0, 4, 5, 6, 7, 1 }
  uselistorder i32 268455152, { 1, 0 }
  uselistorder i32 (i32)* @function_100044e8, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_10008964, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10008698, { 3, 2, 1, 0 }
  uselistorder i32 4095, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10005020, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10004ffc, { 1, 0 }
  uselistorder label %dec_label_pc_10004fd4, { 1, 0 }
  uselistorder label %dec_label_pc_10004f90, { 1, 0 }
  uselistorder label %dec_label_pc_10004f70, { 1, 0 }
  uselistorder label %dec_label_pc_10004f0c, { 1, 0 }
  uselistorder label %dec_label_pc_10004f04, { 1, 0 }
  uselistorder label %dec_label_pc_10004ce8.backedge, { 3, 2, 5, 4, 1, 0 }
  uselistorder label %dec_label_pc_10004e78, { 1, 0 }
  uselistorder label %dec_label_pc_10004cf8, { 1, 0 }
  uselistorder label %dec_label_pc_10004cf8.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10004c7c, { 1, 0 }
}

define i32 @function_10005084() local_unnamed_addr {
dec_label_pc_10005084:
  store i32 268456088, i32* @global_var_1001b4e0.56, align 4
  %v0_10005094 = load i32, i32* @r3, align 4
  ret i32 %v0_10005094
}

define i32 @function_10005098() local_unnamed_addr {
dec_label_pc_10005098:
  store i32 268456116, i32* @lr, align 4
  %v1_100050b0 = call i32 @function_100076e0(i32 1)
  store i32 268456132, i32* @lr, align 4
  %v2_100050c0 = call i32 @function_10008ecc(i32 ptrtoint ([13 x i8]* @global_var_1000ade8.58 to i32))
  store i32 %v2_100050c0, i32* @global_var_1001b5dc.59, align 4
  %v3_100050d0 = call i32 @function_1000762c(i32 1, i32* null)
  %v4_100050d0 = inttoptr i32 %v3_100050d0 to i16*
  %v3_100050d4 = load i16, i16* %v4_100050d0, align 2
  store i16 %v3_100050d4, i16* bitcast (i32* @global_var_1001b5da.60 to i16*), align 4
  store i32 268456164, i32* @lr, align 4
  %v1_100050e0 = call i32 @function_10007654(i32 1)
  ret i32 %v1_100050e0

; uselistorder directives
  uselistorder i32 (i32)* @function_10008ecc, { 2, 1, 0 }
}

define i32 @function_100050f8(i32 %arg1) local_unnamed_addr {
dec_label_pc_100050f8:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 0, i32* %r20.global-to-local, align 4
  store i32 0, i32* %r19.global-to-local, align 4
  store i32 0, i32* %r18.global-to-local, align 4
  store i32 0, i32* %r17.global-to-local, align 4
  store i32 0, i32* %r16.global-to-local, align 4
  store i32 0, i32* %r15.global-to-local, align 4
  %stack_var_-1592 = alloca i32, align 4
  %stack_var_-1136 = alloca i32, align 4
  %stack_var_-1600 = alloca i32, align 4
  %stack_var_-1604 = alloca i32, align 4
  %stack_var_-1392 = alloca i32, align 4
  %stack_var_-1520 = alloca i32, align 4
  %stack_var_-1596 = alloca i32, align 4
  %stack_var_-1608 = alloca i16, align 2
  %stack_var_-1584 = alloca i32, align 4
  %stack_var_-1552 = alloca i32, align 4
  %stack_var_-1264 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_100050f8 = load i32, i32* @lr, align 4
  store i32 %v0_100050f8, i32* %r0.global-to-local, align 4
  %v0_10005100 = load i32, i32* @r31, align 4
  store i32 268456204, i32* @lr, align 4
  %v0_10005108 = call i32 @function_10008460()
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v0_10005108, i32* @global_var_1001b510.61, align 4
  %tmp47 = icmp slt i32 %v0_10005108, 1
  br i1 %tmp47, label %dec_label_pc_10005130, label %dec_label_pc_1000511c

dec_label_pc_1000511c:                            ; preds = %dec_label_pc_10005130, %dec_label_pc_100050f8
  store i32 %v0_100050f8, i32* %r0.global-to-local, align 4
  store i32 %v0_10005100, i32* @r31, align 4
  ret i32 %v0_10005108

dec_label_pc_10005130:                            ; preds = %dec_label_pc_100050f8
  %v3_10005130 = icmp eq i32 %v0_10005108, -1
  br i1 %v3_10005130, label %dec_label_pc_1000511c, label %dec_label_pc_10005138

dec_label_pc_10005138:                            ; preds = %dec_label_pc_10005130
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* %stack_var_-24, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005148.62 to i32), i32* @lr, align 4
  %v1_10005144 = call i32 @function_100076e0(i32 23)
  store i32 268456272, i32* @lr, align 4
  %v1_1000514c = call i32 @function_100076e0(i32 24)
  %v3_10005158 = call i32 @function_1000762c(i32 23, i32* null)
  store i32 268456296, i32* @lr, align 4
  %v2_10005164 = call i32 @function_10008580(i32 %v3_10005158, i32 2)
  %v3_10005168 = icmp eq i32 %v2_10005164, -1
  store i32 %v2_10005164, i32* @r31, align 4
  br i1 %v3_10005168, label %dec_label_pc_100051b0, label %dec_label_pc_10005174

dec_label_pc_10005174:                            ; preds = %dec_label_pc_100051b0, %dec_label_pc_10005138
  %v0_10005178 = phi i32 [ %v2_100051c4, %dec_label_pc_100051b0 ], [ %v2_10005164, %dec_label_pc_10005138 ]
  %v2_10005180 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268456332, i32* @lr, align 4
  %v3_10005188 = call i32 @function_10008248(i32 %v0_10005178, i32 -2147199228, i32 %v2_10005180)
  br label %dec_label_pc_1000518c

dec_label_pc_1000518c:                            ; preds = %dec_label_pc_1000518c, %dec_label_pc_10005174
  %v0_10005190 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100051a4.63 to i32), i32* @lr, align 4
  %v3_100051a0 = call i32 @function_10008248(i32 %v0_10005190, i32 -2147199227, i32 0)
  store i32 268456364, i32* @lr, align 4
  %v1_100051a8 = call i32 @function_10009bfc(i32 10)
  br label %dec_label_pc_1000518c

dec_label_pc_100051b0:                            ; preds = %dec_label_pc_10005138
  %v3_100051b8 = call i32 @function_1000762c(i32 24, i32* null)
  store i32 268456392, i32* @lr, align 4
  %v2_100051c4 = call i32 @function_10008580(i32 %v3_100051b8, i32 2)
  %v3_100051c8 = icmp eq i32 %v2_100051c4, -1
  store i32 %v2_100051c4, i32* @r31, align 4
  br i1 %v3_100051c8, label %dec_label_pc_100051d4, label %dec_label_pc_10005174

dec_label_pc_100051d4:                            ; preds = %dec_label_pc_100051b0
  store i32 ptrtoint ([3 x i8]* @global_var_100051dc.64 to i32), i32* @lr, align 4
  %v1_100051d8 = call i32 @function_10007654(i32 23)
  store i32 ptrtoint ([3 x i8]* @global_var_100051e4.65 to i32), i32* @lr, align 4
  %v1_100051e0 = call i32 @function_10007654(i32 24)
  %v0_100051e8 = call i32 @function_10009b78()
  %v0_100051f0 = load i32, i32* @lr, align 4
  %v0_100051f4 = load i32, i32* @r29, align 4
  %v2_100051f8 = ptrtoint i32* %stack_var_-1264 to i32
  %v0_100051fc = load i32, i32* @r28, align 4
  store i32 %v0_100051e8, i32* @r28, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10005210 = load i32, i32* %r17.global-to-local, align 4
  store i32 0, i32* %stack_var_-1596, align 4
  store i32 268566528, i32* %r17.global-to-local, align 4
  %v0_1000521c = load i32, i32* %r18.global-to-local, align 4
  %v2_10005220 = ptrtoint i32* %stack_var_-1552 to i32
  store i32 %v2_10005220, i32* %r18.global-to-local, align 4
  %v0_10005224 = load i32, i32* %r19.global-to-local, align 4
  store i32 268566528, i32* %r19.global-to-local, align 4
  %v0_1000522c = load i32, i32* %r20.global-to-local, align 4
  store i32 268566528, i32* %r20.global-to-local, align 4
  %v0_10005234 = load i32, i32* @r31, align 4
  store i32 2, i32* @r31, align 4
  %v0_1000523c = load i32, i32* @r14, align 4
  %v0_10005240 = load i32, i32* %r15.global-to-local, align 4
  %v0_10005244 = load i32, i32* %r16.global-to-local, align 4
  %v0_1000524c = load i32, i32* @r22, align 4
  %v0_10005250 = load i32, i32* @r23, align 4
  %v0_10005254 = load i32, i32* @r24, align 4
  %v0_10005258 = load i32, i32* @r25, align 4
  %v0_1000525c = load i32, i32* @r26, align 4
  %v0_10005260 = load i32, i32* @r27, align 4
  %v0_10005264 = load i32, i32* @r30, align 4
  store i32 268456556, i32* @lr, align 4
  %v1_10005268 = call i32 @function_10009184(i32 %v2_100051f8)
  store i32 %v2_100051f8, i32* @r3, align 4
  store i32 268456568, i32* @lr, align 4
  %v2_10005274 = call i32 @function_10009138(i32 %v2_100051f8, i32 2)
  store i32 268456584, i32* @lr, align 4
  %v3_10005284 = call i32 @function_10008770(i32 0, i32 %v2_100051f8, i32 0)
  store i32 268456596, i32* @lr, align 4
  %v2_10005290 = call i32 @function_100091b0(i32 17, i32 1)
  store i32 ptrtoint (i32* @global_var_100052a4.66 to i32), i32* @lr, align 4
  %v2_100052a0 = call i32 @function_100091b0(i32 5, i32 268456068)
  store i32 268456616, i32* @lr, align 4
  %v1_100052a4 = call i32 @function_10007f5c(i32 %v2_100052a0)
  store i32 -1334109607, i32* %r9.global-to-local, align 4
  store i32 -1334109607, i32* @global_var_1001b5dc.59, align 4
  store i16 23, i16* bitcast (i32* @global_var_1001b5da.60 to i16*), align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 %v1_100052a4, i32* @global_var_1001b500.16, align 4
  store i16 2, i16* bitcast (i32* @global_var_1001b5d8.57 to i16*), align 4
  store i32 268456656, i32* @lr, align 4
  %v2_100052cc = call i32 @function_1000776c(i32 %v1_100052a4, i32 -1334109607)
  store i32 268456088, i32* %r9.global-to-local, align 4
  store i32 268456088, i32* @global_var_1001b4e0.56, align 4
  store i32 268456672, i32* @lr, align 4
  %v2_100052dc = call i32 @function_10005978(i32 %v2_100052cc, i32 268456088)
  store i32 %v2_10005220, i32* @r3, align 4
  store i32 32, i32* @r4, align 4
  store i32 268456684, i32* @lr, align 4
  %v0_100052e8 = call i32 @function_10007d00()
  %v0_100052ec = load i32, i32* @r28, align 4
  %v3_100052ec = icmp eq i32 %v0_100052ec, 2
  br i1 %v3_100052ec, label %dec_label_pc_10005464, label %dec_label_pc_100052f4

dec_label_pc_100052f4:                            ; preds = %dec_label_pc_10005464, %dec_label_pc_100051d4, %dec_label_pc_10005474
  %v0_100052f4 = call i32 @function_10005928()
  %v2_100052f8 = ptrtoint i32* %stack_var_-1584 to i32
  store i32 %v2_100052f8, i32* @r27, align 4
  store i32 %v0_100052f4, i32* %r29.global-to-local, align 4
  %v0_10005300 = load i32, i32* @r31, align 4
  %v1_10005300 = inttoptr i32 %v0_10005300 to i32*
  %v2_10005300 = load i32, i32* %v1_10005300, align 4
  %v2_10005304 = ptrtoint i16* %stack_var_-1608 to i32
  store i32 %v2_10005304, i32* @r25, align 4
  store i32 0, i32* @r26, align 4
  store i32 268456720, i32* @lr, align 4
  %v1_1000530c = inttoptr i32 %v2_10005300 to i8*
  %v2_1000530c = call i32 @function_10007c58(i8* %v1_1000530c)
  store i32 %v2_1000530c, i32* %r28.global-to-local, align 4
  %v0_10005314 = load i32, i32* @r31, align 4
  %v1_10005314 = inttoptr i32 %v0_10005314 to i32*
  %v2_10005314 = load i32, i32* %v1_10005314, align 4
  %v1_10005318 = sub i32 20, %v2_1000530c
  store i32 %v1_10005318, i32* @r28, align 4
  store i32 268456736, i32* @lr, align 4
  %v1_1000531c = inttoptr i32 %v2_10005314 to i8*
  %v2_1000531c = call i32 @function_10007c58(i8* %v1_1000531c)
  %v0_10005320 = load i32, i32* %r29.global-to-local, align 4
  %v1_10005320 = load i32, i32* @r28, align 4
  %v2_10005320 = urem i32 %v0_10005320, %v1_10005320
  %v2_10005324 = sub i32 %v0_10005320, %v2_10005320
  store i32 %v2_10005324, i32* %r0.global-to-local, align 4
  %v2_1000532c = add i32 %v2_10005320, %v2_1000531c
  %v0_10005338 = load i32, i32* @r25, align 4
  %v2_10005338 = add i32 %v0_10005338, %v2_1000532c
  store i32 %v2_10005338, i32* @r29, align 4
  store i32 268456768, i32* @lr, align 4
  %v2_1000533c = bitcast i32* %stack_var_-1584 to i8*
  %v3_1000533c = call i32 @function_100059e8(i8* %v2_1000533c, i32 %v2_1000532c)
  %v0_10005340 = load i32, i32* @r31, align 4
  %v1_10005340 = inttoptr i32 %v0_10005340 to i32*
  %v2_10005340 = load i32, i32* %v1_10005340, align 4
  store i32 %v2_10005340, i32* @r3, align 4
  %v0_10005344 = load i32, i32* @r26, align 4
  %v1_10005344 = trunc i32 %v0_10005344 to i8
  %v2_10005344 = load i32, i32* @r29, align 4
  %v3_10005344 = add i32 %v2_10005344, 24
  %v4_10005344 = inttoptr i32 %v3_10005344 to i8*
  store i8 %v1_10005344, i8* %v4_10005344, align 1
  %v2_1000534c = inttoptr i32 %v2_10005340 to i8*
  %v3_1000534c = call i32 @function_10007c80(i8* %v2_1000534c, i32 %v2_100052f8)
  store i32 32, i32* @r4, align 4
  store i32 %v2_100052f8, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1000535c.68 to i32), i32* @lr, align 4
  %v0_10005358 = call i32 @function_10007d00()
  %v0_1000535c = call i32 @function_10005928()
  store i32 %v0_1000535c, i32* %r28.global-to-local, align 4
  %v0_10005364 = load i32, i32* @r31, align 4
  %v1_10005364 = inttoptr i32 %v0_10005364 to i32*
  %v2_10005364 = load i32, i32* %v1_10005364, align 4
  store i32 268456812, i32* @lr, align 4
  %v1_10005368 = inttoptr i32 %v2_10005364 to i8*
  %v2_10005368 = call i32 @function_10007c58(i8* %v1_10005368)
  store i32 %v2_10005368, i32* %r29.global-to-local, align 4
  %v0_10005370 = load i32, i32* @r31, align 4
  %v1_10005370 = inttoptr i32 %v0_10005370 to i32*
  %v2_10005370 = load i32, i32* %v1_10005370, align 4
  %v1_10005374 = sub i32 20, %v2_10005368
  store i32 %v1_10005374, i32* @r29, align 4
  store i32 268456828, i32* @lr, align 4
  %v1_10005378 = inttoptr i32 %v2_10005370 to i8*
  %v2_10005378 = call i32 @function_10007c58(i8* %v1_10005378)
  %v0_1000537c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000537c = load i32, i32* @r29, align 4
  %v2_1000537c = urem i32 %v0_1000537c, %v1_1000537c
  %v2_10005380 = sub i32 %v0_1000537c, %v2_1000537c
  store i32 %v2_10005380, i32* %r0.global-to-local, align 4
  %v2_10005388 = add i32 %v2_1000537c, %v2_10005378
  %v0_10005394 = load i32, i32* @r25, align 4
  %v2_10005394 = add i32 %v0_10005394, %v2_10005388
  store i32 %v2_10005394, i32* @r28, align 4
  store i32 268456860, i32* @lr, align 4
  %v3_10005398 = call i32 @function_100059e8(i8* %v2_1000533c, i32 %v2_10005388)
  %v0_1000539c = load i32, i32* @r26, align 4
  %v1_1000539c = trunc i32 %v0_1000539c to i8
  %v2_1000539c = load i32, i32* @r28, align 4
  %v3_1000539c = add i32 %v2_1000539c, 24
  %v4_1000539c = inttoptr i32 %v3_1000539c to i8*
  store i8 %v1_1000539c, i8* %v4_1000539c, align 1
  store i32 ptrtoint ([3 x i8]* @global_var_100053b0.69 to i32), i32* @lr, align 4
  %v2_100053ac = call i32 @function_10008608(i32 15, i32 %v2_100052f8)
  store i32 268456888, i32* @lr, align 4
  %v1_100053b4 = call i32 @function_100076e0(i32 3)
  %v3_100053c0 = call i32 @function_1000762c(i32 3, i32* nonnull %stack_var_-1596)
  %v3_100053c4 = load i32, i32* %stack_var_-1596, align 4
  store i32 268456916, i32* @lr, align 4
  %v3_100053d0 = call i32 @function_10008878(i32 1, i32 %v3_100053c0, i32 %v3_100053c4)
  store i32 ptrtoint ([3 x i8]* @global_var_100053e8.71 to i32), i32* @lr, align 4
  %v3_100053e4 = call i32 @function_10008878(i32 1, i32 ptrtoint (i32* @global_var_1000adf8.70 to i32), i32 1)
  store i32 268456944, i32* @lr, align 4
  %v1_100053ec = call i32 @function_10007654(i32 3)
  store i32 268456948, i32* @lr, align 4
  %v1_100053f0 = call i32 @function_1000072c(i32 %v1_100053ec)
  store i32 268456952, i32* @lr, align 4
  %v1_100053f4 = call i32 @function_10004af0(i32 %v1_100053f0)
  store i32 ptrtoint (i32* @global_var_100053fc.72 to i32), i32* @lr, align 4
  %v1_100053f8 = call i32 @function_100050f8(i32 %v1_100053f4)
  store i32 268456960, i32* @lr, align 4
  %v0_100053fc = call i32 @function_10008460()
  %tmp48 = icmp slt i32 %v0_100053fc, 1
  br i1 %tmp48, label %dec_label_pc_1000549c, label %dec_label_pc_10005408

dec_label_pc_10005408:                            ; preds = %dec_label_pc_100052f4
  store i32 %v0_100051f0, i32* %r0.global-to-local, align 4
  store i32 %v0_1000523c, i32* @r14, align 4
  store i32 %v0_10005240, i32* %r15.global-to-local, align 4
  store i32 %v0_10005244, i32* %r16.global-to-local, align 4
  store i32 %v0_10005210, i32* %r17.global-to-local, align 4
  store i32 %v0_1000521c, i32* %r18.global-to-local, align 4
  store i32 %v0_10005224, i32* %r19.global-to-local, align 4
  store i32 %v0_1000522c, i32* %r20.global-to-local, align 4
  store i32 %v0_1000524c, i32* @r22, align 4
  store i32 %v0_10005250, i32* @r23, align 4
  store i32 %v0_10005254, i32* @r24, align 4
  store i32 %v0_10005258, i32* @r25, align 4
  store i32 %v0_1000525c, i32* @r26, align 4
  store i32 %v0_10005260, i32* @r27, align 4
  store i32 %v0_100051fc, i32* @r28, align 4
  store i32 %v0_100051f4, i32* @r29, align 4
  store i32 %v0_10005264, i32* @r30, align 4
  store i32 %v0_10005234, i32* @r31, align 4
  ret i32 0

dec_label_pc_10005464:                            ; preds = %dec_label_pc_100051d4
  %v0_10005464 = load i32, i32* @r31, align 4
  %v1_10005464 = add i32 %v0_10005464, 4
  %v2_10005464 = inttoptr i32 %v1_10005464 to i32*
  %v3_10005464 = load i32, i32* %v2_10005464, align 4
  store i32 268457068, i32* @lr, align 4
  %v1_10005468 = inttoptr i32 %v3_10005464 to i8*
  %v2_10005468 = call i32 @function_10007c58(i8* %v1_10005468)
  %v2_1000546c = icmp sgt i32 %v2_10005468, 31
  br i1 %v2_1000546c, label %dec_label_pc_100052f4, label %dec_label_pc_10005474

dec_label_pc_10005474:                            ; preds = %dec_label_pc_10005464
  %v0_10005474 = load i32, i32* @r31, align 4
  %v1_10005474 = add i32 %v0_10005474, 4
  %v2_10005474 = inttoptr i32 %v1_10005474 to i32*
  %v3_10005474 = load i32, i32* %v2_10005474, align 4
  store i32 %v2_10005220, i32* @r3, align 4
  %v2_1000547c = bitcast i32* %stack_var_-1552 to i8*
  %v3_1000547c = call i32 @function_10007c80(i8* %v2_1000547c, i32 %v3_10005474)
  %v0_10005480 = load i32, i32* @r31, align 4
  %v1_10005480 = add i32 %v0_10005480, 4
  %v2_10005480 = inttoptr i32 %v1_10005480 to i32*
  %v3_10005480 = load i32, i32* %v2_10005480, align 4
  store i32 %v3_10005480, i32* %r29.global-to-local, align 4
  store i32 268457100, i32* @lr, align 4
  %v1_10005488 = inttoptr i32 %v3_10005480 to i8*
  %v2_10005488 = call i32 @function_10007c58(i8* %v1_10005488)
  store i32 %v2_10005488, i32* @r4, align 4
  store i32 %v3_10005480, i32* @r3, align 4
  store i32 268457112, i32* @lr, align 4
  %v0_10005494 = call i32 @function_10007d00()
  br label %dec_label_pc_100052f4

dec_label_pc_1000549c:                            ; preds = %dec_label_pc_100052f4
  store i32 ptrtoint ([3 x i8]* @global_var_100054a0.73 to i32), i32* @lr, align 4
  %v1_1000549c = call i32 @function_10008728(i32 %v0_100053fc)
  store i32 ptrtoint ([3 x i8]* @global_var_100054a8.74 to i32), i32* @lr, align 4
  %v0_100054a4 = call i32 @function_10008418()
  store i32 ptrtoint ([3 x i8]* @global_var_100054b0.75 to i32), i32* @lr, align 4
  %v0_100054ac = call i32 @function_10008418()
  store i32 ptrtoint (i32* @global_var_100054b8.76 to i32), i32* @lr, align 4
  %v0_100054b4 = call i32 @function_10008418()
  store i32 0, i32* @r24, align 4
  store i32 268457152, i32* @lr, align 4
  %v1_100054bc = call i32 @function_1000072c(i32 %v0_100054b4)
  %v2_100054c0 = ptrtoint i32* %stack_var_-1520 to i32
  store i32 %v2_100054c0, i32* @r28, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100054c8.77 to i32), i32* @lr, align 4
  %v1_100054c4 = call i32 @function_10004af0(i32 %v1_100054bc)
  %v2_100054c8 = ptrtoint i32* %stack_var_-1392 to i32
  store i32 %v2_100054c8, i32* @r27, align 4
  store i32 268457168, i32* @lr, align 4
  %v1_100054cc = call i32 @function_100050f8(i32 %v1_100054c4)
  store i32 268566528, i32* @r23, align 4
  store i32 268457176, i32* @lr, align 4
  %v1_100054d4 = call i32 @function_10005ea0(i32 %v1_100054cc)
  store i32 268566528, i32* @r30, align 4
  %v2_100054e0 = ptrtoint i32* %stack_var_-1604 to i32
  store i32 %v2_100054e0, i32* %r15.global-to-local, align 4
  %v2_100054e4 = ptrtoint i32* %stack_var_-1600 to i32
  %v2_100054ec = ptrtoint i32* %stack_var_-1136 to i32
  store i32 %v2_100054ec, i32* %r16.global-to-local, align 4
  %v2_100055c0 = ptrtoint i32* %stack_var_-1592 to i32
  %v1_1000584c = bitcast i32* %stack_var_-1552 to i8*
  br label %dec_label_pc_100054f0

dec_label_pc_100054f0:                            ; preds = %dec_label_pc_100058b0, %dec_label_pc_100058e8, %dec_label_pc_100058a4, %dec_label_pc_10005848, %dec_label_pc_100056a0, %dec_label_pc_10005690, %dec_label_pc_100055a8, %dec_label_pc_1000591c, %dec_label_pc_100058d4, %dec_label_pc_100058bc, %dec_label_pc_10005890, %dec_label_pc_10005810, %dec_label_pc_10005738, %dec_label_pc_10005654, %dec_label_pc_1000549c
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000550049 = load i32, i32* @r28, align 4
  %v4_1000550051 = inttoptr i32 %v2_1000550049 to i32*
  store i32 0, i32* %v4_1000550051, align 4
  %v0_1000550452 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000550453 = add i32 %v0_1000550452, 4
  store i32 %v1_1000550453, i32* %r9.global-to-local, align 4
  %v0_1000550854 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000550855 = add i32 %v0_1000550854, -1
  store i32 %v1_1000550855, i32* %ctr.global-to-local, align 4
  %v2_1000550856 = icmp eq i32 %v1_1000550855, 0
  br i1 %v2_1000550856, label %dec_label_pc_1000550c, label %dec_label_pc_10005500.dec_label_pc_10005500_crit_edge

dec_label_pc_10005500.dec_label_pc_10005500_crit_edge: ; preds = %dec_label_pc_100054f0, %dec_label_pc_10005500.dec_label_pc_10005500_crit_edge
  %v1_1000550457 = phi i32 [ %v1_10005504, %dec_label_pc_10005500.dec_label_pc_10005500_crit_edge ], [ %v1_1000550453, %dec_label_pc_100054f0 ]
  %v0_10005500.pre = load i32, i32* %r0.global-to-local, align 4
  %v2_10005500 = load i32, i32* @r28, align 4
  %v3_10005500 = add i32 %v2_10005500, %v1_1000550457
  %v4_10005500 = inttoptr i32 %v3_10005500 to i32*
  store i32 %v0_10005500.pre, i32* %v4_10005500, align 4
  %v0_10005504 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005504 = add i32 %v0_10005504, 4
  store i32 %v1_10005504, i32* %r9.global-to-local, align 4
  %v0_10005508 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10005508 = add i32 %v0_10005508, -1
  store i32 %v1_10005508, i32* %ctr.global-to-local, align 4
  %v2_10005508 = icmp eq i32 %v1_10005508, 0
  br i1 %v2_10005508, label %dec_label_pc_1000550c, label %dec_label_pc_10005500.dec_label_pc_10005500_crit_edge

dec_label_pc_1000550c:                            ; preds = %dec_label_pc_10005500.dec_label_pc_10005500_crit_edge, %dec_label_pc_100054f0
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000551c58 = load i32, i32* @r27, align 4
  %v4_1000551c60 = inttoptr i32 %v2_1000551c58 to i32*
  store i32 0, i32* %v4_1000551c60, align 4
  %v0_1000552061 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000552062 = add i32 %v0_1000552061, 4
  store i32 %v1_1000552062, i32* %r9.global-to-local, align 4
  %v0_1000552463 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000552464 = add i32 %v0_1000552463, -1
  store i32 %v1_1000552464, i32* %ctr.global-to-local, align 4
  %v2_1000552465 = icmp eq i32 %v1_1000552464, 0
  br i1 %v2_1000552465, label %dec_label_pc_10005528, label %dec_label_pc_1000551c.dec_label_pc_1000551c_crit_edge

dec_label_pc_1000551c.dec_label_pc_1000551c_crit_edge: ; preds = %dec_label_pc_1000550c, %dec_label_pc_1000551c.dec_label_pc_1000551c_crit_edge
  %v1_1000552066 = phi i32 [ %v1_10005520, %dec_label_pc_1000551c.dec_label_pc_1000551c_crit_edge ], [ %v1_1000552062, %dec_label_pc_1000550c ]
  %v0_1000551c.pre = load i32, i32* %r0.global-to-local, align 4
  %v2_1000551c = load i32, i32* @r27, align 4
  %v3_1000551c = add i32 %v2_1000551c, %v1_1000552066
  %v4_1000551c = inttoptr i32 %v3_1000551c to i32*
  store i32 %v0_1000551c.pre, i32* %v4_1000551c, align 4
  %v0_10005520 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005520 = add i32 %v0_10005520, 4
  store i32 %v1_10005520, i32* %r9.global-to-local, align 4
  %v0_10005524 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10005524 = add i32 %v0_10005524, -1
  store i32 %v1_10005524, i32* %ctr.global-to-local, align 4
  %v2_10005524 = icmp eq i32 %v1_10005524, 0
  br i1 %v2_10005524, label %dec_label_pc_10005528, label %dec_label_pc_1000551c.dec_label_pc_1000551c_crit_edge

dec_label_pc_10005528:                            ; preds = %dec_label_pc_1000551c.dec_label_pc_1000551c_crit_edge, %dec_label_pc_1000550c
  %v3_10005528 = load i32, i32* @global_var_1001b4d8.78, align 4
  %v3_1000552c = icmp eq i32 %v3_10005528, -1
  br i1 %v3_1000552c, label %dec_label_pc_10005554, label %dec_label_pc_10005534

dec_label_pc_10005534:                            ; preds = %dec_label_pc_10005528
  %v1_10005534 = call i32 @__asm_rlwinm(i32 %v3_10005528, i32 29, i32 3, i32 29)
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1000553c = load i32, i32* @r25, align 4
  %v2_1000553c = add i32 %v1_1000553c, %v1_10005534
  %v1_10005540 = urem i32 %v3_10005528, 32
  %v1_10005544 = add i32 %v2_1000553c, 88
  %v2_10005544 = inttoptr i32 %v1_10005544 to i32*
  %v3_10005544 = load i32, i32* %v2_10005544, align 4
  %v3_10005548 = shl i32 1, %v1_10005540
  store i32 %v3_10005548, i32* %r0.global-to-local, align 4
  %v2_1000554c = or i32 %v3_10005544, %v3_10005548
  store i32 %v2_1000554c, i32* %r9.global-to-local, align 4
  store i32 %v2_1000554c, i32* %v2_10005544, align 4
  br label %dec_label_pc_10005554

dec_label_pc_10005554:                            ; preds = %dec_label_pc_10005528, %dec_label_pc_10005534
  %v3_10005554 = load i32, i32* @global_var_1001b4dc.79, align 4
  store i32 %v3_10005554, i32* %r0.global-to-local, align 4
  %v3_1000555c = icmp eq i32 %v3_10005554, -1
  br i1 %v3_1000555c, label %dec_label_pc_10005750, label %dec_label_pc_10005564

dec_label_pc_10005564:                            ; preds = %dec_label_pc_10005750, %dec_label_pc_10005554, %dec_label_pc_100057a8
  %v3_10005668 = phi i32 [ -1, %dec_label_pc_10005750 ], [ %v3_10005554, %dec_label_pc_10005554 ], [ %v3_10005668.pre, %dec_label_pc_100057a8 ]
  %v3_10005564 = load i8, i8* bitcast (i16* @global_var_1001b514.80 to i8*), align 2
  %v3_10005568 = icmp eq i8 %v3_10005564, 0
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10005670 = call i32 @__asm_rlwinm(i32 %v3_10005668, i32 29, i32 3, i32 29)
  %v1_10005674 = urem i32 %v3_10005668, 32
  %v1_10005678 = load i32, i32* @r25, align 4
  %v2_10005678 = add i32 %v1_10005678, %v1_10005670
  %v0_1000567c = load i32, i32* %r0.global-to-local, align 4
  %v3_1000567c = shl i32 %v0_1000567c, %v1_10005674
  store i32 %v3_1000567c, i32* %r0.global-to-local, align 4
  br i1 %v3_10005568, label %dec_label_pc_10005668, label %dec_label_pc_10005570

dec_label_pc_10005570:                            ; preds = %dec_label_pc_10005564
  %v1_10005588 = add i32 %v2_10005678, 216
  %v2_10005588 = inttoptr i32 %v1_10005588 to i32*
  %v3_10005588 = load i32, i32* %v2_10005588, align 4
  %v2_1000558c = or i32 %v3_10005588, %v3_1000567c
  store i32 %v2_1000558c, i32* %r9.global-to-local, align 4
  store i32 %v2_1000558c, i32* %v2_10005588, align 4
  br label %dec_label_pc_10005594

dec_label_pc_10005594:                            ; preds = %dec_label_pc_10005668, %dec_label_pc_10005570
  %v3_10005594 = load i32, i32* @global_var_1001b4dc.79, align 4
  store i32 %v3_10005594, i32* %r0.global-to-local, align 4
  %v3_10005598 = load i32, i32* @global_var_1001b4d8.78, align 4
  %v2_1000559c = icmp slt i32 %v3_10005598, %v3_10005594
  br i1 %v2_1000559c, label %dec_label_pc_100055a4, label %dec_label_pc_100055a8

dec_label_pc_100055a4:                            ; preds = %dec_label_pc_10005594
  br label %dec_label_pc_100055a8

dec_label_pc_100055a8:                            ; preds = %dec_label_pc_10005594, %dec_label_pc_100055a4
  %v0_100055b0 = phi i32 [ %v3_10005598, %dec_label_pc_10005594 ], [ %v3_10005594, %dec_label_pc_100055a4 ]
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r9.global-to-local, align 4
  %v1_100055b0 = add i32 %v0_100055b0, 1
  store i32 10, i32* %stack_var_-1592, align 4
  store i32 268457424, i32* @lr, align 4
  %v5_100055cc = call i32 @function_100086e0(i32 %v1_100055b0, i32 %v2_100054c0, i32 %v2_100054c8, i32 0, i32 %v2_100055c0)
  %v6_100055cc = trunc i32 %v5_100055cc to i16
  %v4_100055d0 = icmp eq i16 %v6_100055cc, -1
  br i1 %v4_100055d0, label %dec_label_pc_100054f0, label %dec_label_pc_100055d8

dec_label_pc_100055d8:                            ; preds = %dec_label_pc_100055a8
  %v4_100055d8 = icmp eq i16 %v6_100055cc, 0
  br i1 %v4_100055d8, label %dec_label_pc_100055e0, label %dec_label_pc_1000560c

dec_label_pc_100055e0:                            ; preds = %dec_label_pc_100055d8
  %v0_100055e4 = load i32, i32* @r24, align 4
  store i16 0, i16* %stack_var_-1608, align 2
  %v2_100055f4 = srem i32 %v0_100055e4, 6
  %v1_100055f8 = sub i32 %v0_100055e4, %v2_100055f4
  store i32 %v1_100055f8, i32* %r9.global-to-local, align 4
  store i32 %v2_100055f4, i32* %r0.global-to-local, align 4
  %v1_10005600 = add i32 %v0_100055e4, 1
  store i32 %v1_10005600, i32* @r24, align 4
  %v3_10005604 = icmp eq i32 %v2_100055f4, 0
  br i1 %v3_10005604, label %dec_label_pc_100057c4, label %dec_label_pc_1000560c

dec_label_pc_1000560c:                            ; preds = %dec_label_pc_100055d8, %dec_label_pc_100055e0, %dec_label_pc_100057c4
  %v3_1000560c = load i8, i8* bitcast (i16* @global_var_1001b514.80 to i8*), align 2
  %v4_1000560c = zext i8 %v3_1000560c to i32
  store i32 %v4_1000560c, i32* @r29, align 4
  %v3_10005610 = icmp eq i8 %v3_1000560c, 0
  %v3_10005690 = load i32, i32* @global_var_1001b4dc.79, align 4
  br i1 %v3_10005610, label %dec_label_pc_10005690, label %dec_label_pc_10005618

dec_label_pc_10005618:                            ; preds = %dec_label_pc_1000560c
  store i32 268566528, i32* %r29.global-to-local, align 4
  %v1_10005620 = call i32 @__asm_rlwinm(i32 %v3_10005690, i32 29, i32 3, i32 29)
  %v1_10005624 = urem i32 %v3_10005690, 32
  %v1_10005628 = load i32, i32* @r25, align 4
  %v2_10005628 = add i32 %v1_10005628, %v1_10005620
  store i32 %v2_10005628, i32* %r9.global-to-local, align 4
  %v1_1000562c = add i32 %v2_10005628, 216
  %v2_1000562c = inttoptr i32 %v1_1000562c to i32*
  %v3_1000562c = load i32, i32* %v2_1000562c, align 4
  %v3_10005630 = lshr i32 %v3_1000562c, %v1_10005624
  store i32 %v3_10005630, i32* %r0.global-to-local, align 4
  %v1_10005638 = urem i32 %v3_10005630, 2
  %v3_10005638 = icmp eq i32 %v1_10005638, 0
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i8 0, i8* bitcast (i16* @global_var_1001b514.80 to i8*), align 2
  br i1 %v3_10005638, label %dec_label_pc_10005648, label %dec_label_pc_100057e0

dec_label_pc_10005648:                            ; preds = %dec_label_pc_10005618
  %v3_10005648 = icmp eq i32 %v3_10005690, -1
  br i1 %v3_10005648, label %dec_label_pc_10005654, label %dec_label_pc_10005650

dec_label_pc_10005650:                            ; preds = %dec_label_pc_10005648
  store i32 ptrtoint (i32* @global_var_10005654.81 to i32), i32* @lr, align 4
  %v0_10005650 = call i32 @function_10008418()
  br label %dec_label_pc_10005654

dec_label_pc_10005654:                            ; preds = %dec_label_pc_10005648, %dec_label_pc_10005650
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @global_var_1001b4dc.79, align 4
  store i32 268457572, i32* @lr, align 4
  %v1_10005660 = call i32 @function_10009bfc(i32 1)
  br label %dec_label_pc_100054f0

dec_label_pc_10005668:                            ; preds = %dec_label_pc_10005564
  %v1_10005680 = add i32 %v2_10005678, 88
  %v2_10005680 = inttoptr i32 %v1_10005680 to i32*
  %v3_10005680 = load i32, i32* %v2_10005680, align 4
  %v2_10005684 = or i32 %v3_10005680, %v3_1000567c
  store i32 %v2_10005684, i32* %r9.global-to-local, align 4
  store i32 %v2_10005684, i32* %v2_10005680, align 4
  br label %dec_label_pc_10005594

dec_label_pc_10005690:                            ; preds = %dec_label_pc_1000560c
  store i32 268566528, i32* @r31, align 4
  %v3_10005698 = icmp eq i32 %v3_10005690, -1
  br i1 %v3_10005698, label %dec_label_pc_100054f0, label %dec_label_pc_100056a0

dec_label_pc_100056a0:                            ; preds = %dec_label_pc_10005690
  %v1_100056a0 = call i32 @__asm_rlwinm(i32 %v3_10005690, i32 29, i32 3, i32 29)
  %v1_100056a4 = urem i32 %v3_10005690, 32
  %v1_100056a8 = load i32, i32* @r25, align 4
  %v2_100056a8 = add i32 %v1_100056a8, %v1_100056a0
  store i32 %v2_100056a8, i32* %r9.global-to-local, align 4
  %v1_100056ac = add i32 %v2_100056a8, 88
  %v2_100056ac = inttoptr i32 %v1_100056ac to i32*
  %v3_100056ac = load i32, i32* %v2_100056ac, align 4
  %v3_100056b0 = lshr i32 %v3_100056ac, %v1_100056a4
  store i32 %v3_100056b0, i32* %r0.global-to-local, align 4
  %v1_100056b4 = urem i32 %v3_100056b0, 2
  store i32 %v1_100056b4, i32* %r9.global-to-local, align 4
  %v3_100056b4 = icmp eq i32 %v1_100056b4, 0
  br i1 %v3_100056b4, label %dec_label_pc_100054f0, label %dec_label_pc_100056bc

dec_label_pc_100056bc:                            ; preds = %dec_label_pc_100056a0
  %v0_100056bc = load i32, i32* @r29, align 4
  %v6_100056bc = trunc i32 %v0_100056bc to i16
  store i16 %v6_100056bc, i16* %stack_var_-1608, align 2
  %v0_100056c0 = call i32 @function_10008b34()
  %v0_100056c4 = load i32, i32* @r29, align 4
  %v2_100056c4 = inttoptr i32 %v0_100056c0 to i32*
  store i32 %v0_100056c4, i32* %v2_100056c4, align 4
  store i32 %v0_100056c0, i32* @r26, align 4
  %v3_100056d4 = load i32, i32* @global_var_1001b4dc.79, align 4
  store i32 268457696, i32* @lr, align 4
  %v4_100056dc = call i32 @function_10008fd8(i32 %v3_100056d4, i32 %v2_10005304, i32 2, i32 16386)
  %v3_100056e0 = icmp eq i32 %v4_100056dc, -1
  br i1 %v3_100056e0, label %dec_label_pc_100058a4, label %dec_label_pc_100056e8

dec_label_pc_100056e8:                            ; preds = %dec_label_pc_100056bc
  %v3_100056e8 = icmp eq i32 %v4_100056dc, 0
  br i1 %v3_100056e8, label %dec_label_pc_10005728, label %dec_label_pc_100056f0

dec_label_pc_100056f0:                            ; preds = %dec_label_pc_100056e8
  %v3_100056f0 = load i16, i16* %stack_var_-1608, align 2
  %v4_100056f0 = sext i16 %v3_100056f0 to i32
  %v4_100056f4 = icmp eq i16 %v3_100056f0, 0
  br i1 %v4_100056f4, label %dec_label_pc_100058bc, label %dec_label_pc_100056fc

dec_label_pc_100056fc:                            ; preds = %dec_label_pc_100056f0
  %v3_100056fc = icmp ugt i16 %v3_100056f0, 1024
  br i1 %v3_100056fc, label %dec_label_pc_100058d4, label %dec_label_pc_10005704

dec_label_pc_10005704:                            ; preds = %dec_label_pc_100056fc
  %v0_10005704 = load i32, i32* @r29, align 4
  %v1_10005704 = load i32, i32* @r26, align 4
  %v2_10005704 = inttoptr i32 %v1_10005704 to i32*
  store i32 %v0_10005704, i32* %v2_10005704, align 4
  %v3_10005710 = load i32, i32* @global_var_1001b4dc.79, align 4
  store i32 268457752, i32* @lr, align 4
  %v5_10005714 = call i32 @function_10008fd8(i32 %v3_10005710, i32 %v2_100054ec, i32 %v4_100056f0, i32 16386)
  %v3_10005718 = icmp eq i32 %v5_10005714, -1
  br i1 %v3_10005718, label %dec_label_pc_100058a4, label %dec_label_pc_10005720

dec_label_pc_10005720:                            ; preds = %dec_label_pc_10005704
  %v3_10005720 = icmp eq i32 %v5_10005714, 0
  br i1 %v3_10005720, label %dec_label_pc_10005728, label %dec_label_pc_100058e8

dec_label_pc_10005728:                            ; preds = %dec_label_pc_100058b0, %dec_label_pc_10005720, %dec_label_pc_100056e8
  %v3_10005728 = load i32, i32* @global_var_1001b4dc.79, align 4
  %v3_1000572c = icmp eq i32 %v3_10005728, -1
  br i1 %v3_1000572c, label %dec_label_pc_10005738, label %dec_label_pc_10005734

dec_label_pc_10005734:                            ; preds = %dec_label_pc_10005728
  store i32 ptrtoint (i32* @global_var_10005738.82 to i32), i32* @lr, align 4
  %v0_10005734 = call i32 @function_10008418()
  br label %dec_label_pc_10005738

dec_label_pc_10005738:                            ; preds = %dec_label_pc_10005728, %dec_label_pc_10005734
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 -1, i32* @global_var_1001b4dc.79, align 4
  store i32 268457804, i32* @lr, align 4
  %v1_10005748 = call i32 @function_10009bfc(i32 1)
  br label %dec_label_pc_100054f0

dec_label_pc_10005750:                            ; preds = %dec_label_pc_10005554
  store i32 268457824, i32* @lr, align 4
  %v3_1000575c = call i32 @function_10009104(i32 2, i32 1, i32 0)
  %v3_10005760 = icmp eq i32 %v3_1000575c, -1
  store i32 %v3_1000575c, i32* %r29.global-to-local, align 4
  store i32 %v3_1000575c, i32* @global_var_1001b4dc.79, align 4
  br i1 %v3_10005760, label %dec_label_pc_10005564, label %dec_label_pc_10005770

dec_label_pc_10005770:                            ; preds = %dec_label_pc_10005750
  store i32 3, i32* @r4, align 4
  store i32 268457856, i32* @lr, align 4
  %v1_1000577c = call i32 @function_10008330(i32 3)
  store i32 4, i32* @r4, align 4
  %v0_10005788 = load i32, i32* %r29.global-to-local, align 4
  store i32 268457876, i32* @lr, align 4
  %v2_10005790 = call i32 @function_10008330(i32 %v0_10005788)
  %v3_10005794 = load i32, i32* @global_var_1001b4e0.56, align 4
  store i32 %v3_10005794, i32* %r0.global-to-local, align 4
  %v3_10005798 = icmp eq i32 %v3_10005794, 0
  br i1 %v3_10005798, label %dec_label_pc_100057a8, label %dec_label_pc_100057a0

dec_label_pc_100057a0:                            ; preds = %dec_label_pc_10005770
  store i32 %v3_10005794, i32* %ctr.global-to-local, align 4
  store i32 268457896, i32* @lr, align 4
  %v2_100057a4 = call i32 @function_10007f5c(i32 %v2_10005790)
  br label %dec_label_pc_100057a8

dec_label_pc_100057a8:                            ; preds = %dec_label_pc_10005770, %dec_label_pc_100057a0
  %v3_100057a8 = load i32, i32* @global_var_1001b4dc.79, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i8 1, i8* bitcast (i16* @global_var_1001b514.80 to i8*), align 2
  store i32 268457920, i32* @lr, align 4
  %v3_100057bc = call i32 @function_10008f34(i32 %v3_100057a8, i32 ptrtoint (i32* @global_var_1001b5d8.57 to i32), i32 16)
  %v3_10005668.pre = load i32, i32* @global_var_1001b4dc.79, align 4
  br label %dec_label_pc_10005564

dec_label_pc_100057c4:                            ; preds = %dec_label_pc_100055e0
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_100057cc = load i32, i32* @global_var_1001b4dc.79, align 4
  store i32 268457948, i32* @lr, align 4
  %v4_100057d8 = call i32 @function_10009050(i32 %v3_100057cc, i32 %v2_10005304, i32 2, i32 16384)
  br label %dec_label_pc_1000560c

dec_label_pc_100057e0:                            ; preds = %dec_label_pc_10005618
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-1604, align 4
  store i32 4, i32* %stack_var_-1600, align 4
  store i32 268457988, i32* @lr, align 4
  %v5_10005800 = call i32 @function_10008f9c(i32 1, i32 4, i32 %v2_100054e0, i32 %v2_100054e4, i32 4)
  %v3_10005804 = load i32, i32* %stack_var_-1604, align 4
  store i32 %v3_10005804, i32* %r0.global-to-local, align 4
  %v3_10005808 = icmp eq i32 %v3_10005804, 0
  br i1 %v3_10005808, label %dec_label_pc_10005848, label %dec_label_pc_10005810

dec_label_pc_10005810:                            ; preds = %dec_label_pc_100057e0
  store i32 ptrtoint (i32* @global_var_10005818.83 to i32), i32* @lr, align 4
  %v0_10005814 = call i32 @function_10008418()
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @global_var_1001b4dc.79, align 4
  %v0_10005820 = call i32 @function_10005928()
  %v1_10005820 = sext i32 %v0_10005820 to i64
  %v5_1000582c = mul nuw nsw i64 %v1_10005820, 3435973837
  %v1_100058302 = udiv i64 %v5_1000582c, 34359738368
  %v1_10005830 = trunc i64 %v1_100058302 to i32
  %v1_10005834 = mul i32 %v1_10005830, 10
  store i32 %v1_10005834, i32* %r0.global-to-local, align 4
  %v3_10005838 = sub i32 %v0_10005820, %v1_10005834
  %v1_1000583c = add i32 %v3_10005838, 1
  store i32 268458052, i32* @lr, align 4
  %v1_10005840 = call i32 @function_10009bfc(i32 %v1_1000583c)
  br label %dec_label_pc_100054f0

dec_label_pc_10005848:                            ; preds = %dec_label_pc_100057e0
  store i32 268458064, i32* @lr, align 4
  %v2_1000584c = call i32 @function_10007c58(i8* %v1_1000584c)
  %v3_1000584c = trunc i32 %v2_1000584c to i8
  %v7_10005850 = sext i8 %v3_1000584c to i16
  store i16 %v7_10005850, i16* %stack_var_-1608, align 2
  store i32 268458072, i32* @lr, align 4
  %v2_10005854 = call i32 @function_10007f5c(i32 %v2_1000584c)
  store i32 %v2_10005854, i32* @global_var_1001b500.16, align 4
  %v3_10005860 = load i32, i32* @global_var_1001b4dc.79, align 4
  store i32 268458096, i32* @lr, align 4
  %v4_1000586c = call i32 @function_10009050(i32 %v3_10005860, i32 ptrtoint (i32* @global_var_1000adfc.85 to i32), i32 4, i32 16384)
  %v3_10005870 = load i32, i32* @global_var_1001b4dc.79, align 4
  store i32 268458116, i32* @lr, align 4
  %v4_10005880 = call i32 @function_10009050(i32 %v3_10005870, i32 %v2_10005304, i32 1, i32 16384)
  %v3_10005884 = load i16, i16* %stack_var_-1608, align 2
  %v4_10005888 = icmp eq i16 %v3_10005884, 0
  br i1 %v4_10005888, label %dec_label_pc_100054f0, label %dec_label_pc_10005890

dec_label_pc_10005890:                            ; preds = %dec_label_pc_10005848
  %v4_10005884 = sext i16 %v3_10005884 to i32
  %v3_10005890 = load i32, i32* @global_var_1001b4dc.79, align 4
  store i32 268458144, i32* @lr, align 4
  %v5_1000589c = call i32 @function_10009050(i32 %v3_10005890, i32 %v2_10005220, i32 %v4_10005884, i32 16384)
  br label %dec_label_pc_100054f0

dec_label_pc_100058a4:                            ; preds = %dec_label_pc_10005704, %dec_label_pc_100056bc
  %v0_100058a4 = load i32, i32* @r26, align 4
  %v1_100058a4 = inttoptr i32 %v0_100058a4 to i32*
  %v2_100058a4 = load i32, i32* %v1_100058a4, align 4
  %v3_100058a8 = icmp eq i32 %v2_100058a4, 11
  br i1 %v3_100058a8, label %dec_label_pc_100054f0, label %dec_label_pc_100058b0

dec_label_pc_100058b0:                            ; preds = %dec_label_pc_100058a4
  %v3_100058b0 = icmp eq i32 %v2_100058a4, 4
  br i1 %v3_100058b0, label %dec_label_pc_100054f0, label %dec_label_pc_10005728

dec_label_pc_100058bc:                            ; preds = %dec_label_pc_100056f0
  %v3_100058bc = load i32, i32* @global_var_1001b4dc.79, align 4
  store i32 268458192, i32* @lr, align 4
  %v4_100058cc = call i32 @function_10008fd8(i32 %v3_100058bc, i32 %v2_10005304, i32 2, i32 16384)
  br label %dec_label_pc_100054f0

dec_label_pc_100058d4:                            ; preds = %dec_label_pc_100056fc
  store i32 ptrtoint (i32* @global_var_100058dc.86 to i32), i32* @lr, align 4
  %v0_100058d8 = call i32 @function_10008418()
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @global_var_1001b4dc.79, align 4
  br label %dec_label_pc_100054f0

dec_label_pc_100058e8:                            ; preds = %dec_label_pc_10005720
  %v3_100058e8 = load i32, i32* @global_var_1001b4dc.79, align 4
  store i32 268458236, i32* @lr, align 4
  %v4_100058f8 = call i32 @function_10008fd8(i32 %v3_100058e8, i32 %v2_10005304, i32 2, i32 16384)
  %v3_100058fc = load i32, i32* @global_var_1001b4dc.79, align 4
  %v3_10005900 = load i16, i16* %stack_var_-1608, align 2
  %v4_10005900 = sext i16 %v3_10005900 to i32
  store i32 268458256, i32* @lr, align 4
  %v5_1000590c = call i32 @function_10008fd8(i32 %v3_100058fc, i32 %v2_100054ec, i32 %v4_10005900, i32 16384)
  %v3_10005910 = load i16, i16* %stack_var_-1608, align 2
  %v4_10005914 = icmp eq i16 %v3_10005910, 0
  br i1 %v4_10005914, label %dec_label_pc_100054f0, label %dec_label_pc_1000591c

dec_label_pc_1000591c:                            ; preds = %dec_label_pc_100058e8
  %v4_10005910 = sext i16 %v3_10005910 to i32
  store i32 268458276, i32* @lr, align 4
  %v3_10005920 = call i32 @function_10000394(i32 %v2_100054ec, i32 %v4_10005910)
  br label %dec_label_pc_100054f0

; uselistorder directives
  uselistorder i16 %v3_10005910, { 1, 0 }
  uselistorder i16 %v3_10005884, { 1, 0 }
  uselistorder i32 %v3_1000575c, { 1, 0, 2 }
  uselistorder i32 %v1_100056b4, { 1, 0 }
  uselistorder i32 %v3_10005690, { 0, 2, 5, 3, 1, 4 }
  uselistorder i32 %v2_100055f4, { 1, 0, 2 }
  uselistorder i32 %v0_100055e4, { 2, 0, 1 }
  uselistorder i32 %v2_10005678, { 1, 0 }
  uselistorder i32 %v1_10005524, { 1, 0 }
  uselistorder i32 %v1_10005520, { 1, 0 }
  uselistorder i32 %v1_10005508, { 1, 0 }
  uselistorder i32 %v1_10005504, { 1, 0 }
  uselistorder i32 %v2_100054ec, { 1, 2, 0, 3 }
  uselistorder i32 %v2_10005388, { 1, 0 }
  uselistorder i32 %v2_1000532c, { 1, 0 }
  uselistorder i32 %v2_10005304, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32 %v1_100052a4, { 1, 0 }
  uselistorder i32 %v2_100051f8, { 1, 3, 2, 0 }
  uselistorder i32 %v2_100051c4, { 1, 2, 0 }
  uselistorder i32 %v0_10005108, { 1, 3, 0, 2 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-1552, { 1, 0, 2 }
  uselistorder i16* %stack_var_-1608, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %stack_var_-1596, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 23, 24, 13, 14, 15, 21, 22, 16, 17, 18, 19, 20 }
  uselistorder i32* %r16.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32* %r15.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 9, 10, 11, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i32* %ctr.global-to-local, { 0, 1, 9, 10, 2, 3, 4, 7, 8, 5, 6 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10009050, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* bitcast (i16* @global_var_1001b514.80 to i8*), { 3, 2, 1, 0 }
  uselistorder i32* @global_var_1001b4dc.79, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13, 14, 15, 17, 16, 18, 19 }
  uselistorder i32 (i32)* @function_100050f8, { 1, 0 }
  uselistorder i32 (i32)* @function_10004af0, { 1, 0 }
  uselistorder i32 (i32)* @function_1000072c, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10008878, { 1, 0 }
  uselistorder i32* @global_var_1001b5d8.57, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_100091b0, { 1, 0 }
  uselistorder i32 (i32)* @function_10009bfc, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_100057a8, { 1, 0 }
  uselistorder label %dec_label_pc_10005738, { 1, 0 }
  uselistorder label %dec_label_pc_10005654, { 1, 0 }
  uselistorder label %dec_label_pc_1000560c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100055a8, { 1, 0 }
  uselistorder label %dec_label_pc_10005564, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10005554, { 1, 0 }
  uselistorder label %dec_label_pc_1000551c.dec_label_pc_1000551c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10005500.dec_label_pc_10005500_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_100054f0, { 7, 1, 8, 9, 0, 2, 10, 3, 11, 12, 4, 5, 13, 6, 14 }
  uselistorder label %dec_label_pc_100052f4, { 2, 0, 1 }
}

define i32 @function_10005928() local_unnamed_addr {
dec_label_pc_10005928:
  %v3_10005930 = load i32, i32* @global_var_1001b594.87, align 4
  %v3_10005938 = load i32, i32* @global_var_1001b588.88, align 4
  %v1_10005940 = udiv i32 %v3_10005930, 524288
  %v3_10005944 = load i32, i32* @global_var_1001b590.89, align 4
  %v1_10005948 = mul i32 %v3_10005938, 2048
  %v2_1000594c = xor i32 %v1_10005940, %v3_10005930
  %v2_10005950 = xor i32 %v1_10005948, %v3_10005938
  %v3_10005954 = load i32, i32* @global_var_1001b58c.90, align 4
  %v2_10005958 = xor i32 %v2_1000594c, %v2_10005950
  %v1_1000595c = udiv i32 %v2_10005950, 256
  %v2_10005960 = xor i32 %v2_10005958, %v1_1000595c
  store i32 %v3_10005954, i32* @global_var_1001b588.88, align 4
  store i32 %v3_10005944, i32* @global_var_1001b58c.90, align 4
  store i32 %v3_10005930, i32* @global_var_1001b590.89, align 4
  store i32 %v2_10005960, i32* @global_var_1001b594.87, align 4
  ret i32 %v2_10005960

; uselistorder directives
  uselistorder i32 %v2_10005960, { 1, 0 }
  uselistorder i32 %v3_10005938, { 1, 0 }
  uselistorder i32 %v3_10005930, { 2, 1, 0 }
}

define i32 @function_10005978(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10005978:
  store i32 268458392, i32* @lr, align 4
  %v0_10005994 = call i32 @function_100087e8()
  store i32 %v0_10005994, i32* @global_var_1001b588.88, align 4
  store i32 268458404, i32* @lr, align 4
  %v0_100059a0 = call i32 @function_100084a8()
  store i32 268458412, i32* @lr, align 4
  %v0_100059a8 = call i32 @function_100084f0()
  %v2_100059ac = xor i32 %v0_100059a0, %v0_100059a8
  store i32 %v2_100059ac, i32* @global_var_1001b58c.90, align 4
  store i32 268458424, i32* @lr, align 4
  %v1_100059b4 = call i32 @function_10008b40(i32 %v0_100059a8)
  %v3_100059b8 = load i32, i32* @global_var_1001b58c.90, align 4
  %v2_100059c8 = xor i32 %v3_100059b8, %v1_100059b4
  store i32 %v2_100059c8, i32* @global_var_1001b594.87, align 4
  store i32 %v1_100059b4, i32* @global_var_1001b590.89, align 4
  ret i32 %v1_100059b4

; uselistorder directives
  uselistorder i32 %v1_100059b4, { 2, 1, 0 }
  uselistorder i32 %v0_100059a8, { 1, 0 }
  uselistorder i32 ()* @function_100084f0, { 2, 1, 0 }
}

define i32 @function_100059e8(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100059e8:
  %r26.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-72 = alloca i32, align 4
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v2_10005a04 = ptrtoint i32* %stack_var_-72 to i32
  store i32 268458536, i32* @lr, align 4
  %v1_10005a24 = call i32 @function_100076e0(i32 28)
  %v3_10005a30 = call i32 @function_1000762c(i32 28, i32* null)
  %v2_10005a3c = inttoptr i32 %v3_10005a30 to i8*
  %v3_10005a3c = call i32 @function_10008cac(i32 %v2_10005a04, i8* %v2_10005a3c)
  %v3_10005a40 = icmp eq i32 %arg2, 0
  br i1 %v3_10005a40, label %dec_label_pc_10005ac4, label %dec_label_pc_10005a48

dec_label_pc_10005a48:                            ; preds = %dec_label_pc_100059e8
  %v1_10005a48 = load i32, i32* %r31.global-to-local, align 4
  %v2_10005a48 = add i32 %v1_10005a48, %arg2
  store i32 %v2_10005a48, i32* %r26.global-to-local, align 4
  %v1_10005a9c = bitcast i32* %stack_var_-72 to i8*
  br label %dec_label_pc_10005a5c

dec_label_pc_10005a5c:                            ; preds = %dec_label_pc_10005a5c, %dec_label_pc_10005a48
  %v3_10005a5c = load i32, i32* @global_var_1001b594.87, align 4
  %v3_10005a64 = load i32, i32* @global_var_1001b588.88, align 4
  %v1_10005a68 = udiv i32 %v3_10005a5c, 524288
  %v3_10005a6c = load i32, i32* @global_var_1001b590.89, align 4
  %v1_10005a70 = mul i32 %v3_10005a64, 2048
  %v2_10005a74 = xor i32 %v1_10005a68, %v3_10005a5c
  %v2_10005a78 = xor i32 %v1_10005a70, %v3_10005a64
  %v3_10005a7c = load i32, i32* @global_var_1001b58c.90, align 4
  %v2_10005a80 = xor i32 %v2_10005a74, %v2_10005a78
  %v1_10005a84 = udiv i32 %v2_10005a78, 256
  %v2_10005a88 = xor i32 %v2_10005a80, %v1_10005a84
  store i32 %v2_10005a88, i32* %r29.global-to-local, align 4
  store i32 %v3_10005a7c, i32* @global_var_1001b588.88, align 4
  store i32 %v2_10005a88, i32* @global_var_1001b594.87, align 4
  store i32 %v3_10005a6c, i32* @global_var_1001b58c.90, align 4
  store i32 %v3_10005a5c, i32* @global_var_1001b590.89, align 4
  store i32 268458656, i32* @lr, align 4
  %v2_10005a9c = call i32 @function_10007c58(i8* %v1_10005a9c)
  %v0_10005aa0 = load i32, i32* %r29.global-to-local, align 4
  %v2_10005aa0 = urem i32 %v0_10005aa0, %v2_10005a9c
  store i32 %v2_10005aa0, i32* %r29.global-to-local, align 4
  %v0_10005aac = load i32, i32* @r1, align 4
  %v2_10005aac = add i32 %v0_10005aac, %v2_10005aa0
  %v1_10005ab0 = add i32 %v2_10005aac, 8
  %v2_10005ab0 = inttoptr i32 %v1_10005ab0 to i8*
  %v3_10005ab0 = load i8, i8* %v2_10005ab0, align 1
  %v2_10005ab4 = load i32, i32* %r31.global-to-local, align 4
  %v3_10005ab4 = inttoptr i32 %v2_10005ab4 to i8*
  store i8 %v3_10005ab0, i8* %v3_10005ab4, align 1
  %v0_10005ab8 = load i32, i32* %r31.global-to-local, align 4
  %v1_10005ab8 = add i32 %v0_10005ab8, 1
  store i32 %v1_10005ab8, i32* %r31.global-to-local, align 4
  %v1_10005abc = load i32, i32* %r26.global-to-local, align 4
  %v4_10005abc = icmp eq i32 %v1_10005ab8, %v1_10005abc
  br i1 %v4_10005abc, label %dec_label_pc_10005ac4, label %dec_label_pc_10005a5c

dec_label_pc_10005ac4:                            ; preds = %dec_label_pc_10005a5c, %dec_label_pc_100059e8
  store i32 268458700, i32* @lr, align 4
  %v1_10005ac8 = call i32 @function_10007654(i32 28)
  ret i32 %v1_10005ac8

; uselistorder directives
  uselistorder i32 %v3_10005a64, { 1, 0 }
  uselistorder i32 %v3_10005a5c, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_10007654, { 2, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 1, 0 }
  uselistorder i32 (i32, i32*)* @function_1000762c, { 22, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25 }
  uselistorder i32 (i32)* @function_100076e0, { 3, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_10005afc() local_unnamed_addr {
dec_label_pc_10005afc:
  %r0.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %v0_10005afc = load i32, i32* @r4, align 4
  %tmp19 = icmp slt i32 %v0_10005afc, 1
  br i1 %tmp19, label %dec_label_pc_10005afc.dec_label_pc_10005bb0_crit_edge, label %dec_label_pc_10005b14

dec_label_pc_10005afc.dec_label_pc_10005bb0_crit_edge: ; preds = %dec_label_pc_10005afc
  %v0_10005bc0.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10005bb0

dec_label_pc_10005b14:                            ; preds = %dec_label_pc_10005afc
  %v3_10005b24 = load i32, i32* @global_var_1001b594.87, align 4
  store i32 %v3_10005b24, i32* %r7.global-to-local, align 4
  %v3_10005b28 = load i32, i32* @global_var_1001b590.89, align 4
  store i32 %v3_10005b28, i32* %r5.global-to-local, align 4
  %v3_10005b2c = load i32, i32* @global_var_1001b58c.90, align 4
  store i32 %v3_10005b2c, i32* %r6.global-to-local, align 4
  %v3_10005b30 = load i32, i32* @global_var_1001b588.88, align 4
  br label %dec_label_pc_10005b5c

dec_label_pc_10005b38:                            ; preds = %dec_label_pc_10005b5c
  %v1_10005b38 = load i32, i32* @r3, align 4
  %v2_10005b38 = inttoptr i32 %v1_10005b38 to i32*
  store i32 %v2_10005b80, i32* %v2_10005b38, align 4
  %v0_10005b3c = load i32, i32* @r4, align 4
  %v1_10005b3c = add i32 %v0_10005b3c, -4
  store i32 %v1_10005b3c, i32* @r4, align 4
  %v0_10005b40 = load i32, i32* @r3, align 4
  %v1_10005b40 = add i32 %v0_10005b40, 4
  br label %dec_label_pc_10005b44

dec_label_pc_10005b44:                            ; preds = %dec_label_pc_10005b94, %dec_label_pc_10005b38
  %v0_10005b44 = phi i32 [ %v0_10005b44.pr, %dec_label_pc_10005b94 ], [ %v1_10005b3c, %dec_label_pc_10005b38 ]
  %storemerge = phi i32 [ %v1_10005b98, %dec_label_pc_10005b94 ], [ %v1_10005b40, %dec_label_pc_10005b38 ]
  store i32 %storemerge, i32* @r3, align 4
  %v0_10005b48 = load i32, i32* %r6.global-to-local, align 4
  %tmp20 = icmp slt i32 %v0_10005b44, 1
  br i1 %tmp20, label %dec_label_pc_10005ba0, label %dec_label_pc_10005b50

dec_label_pc_10005b50:                            ; preds = %dec_label_pc_10005b44
  %v0_10005b50 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10005b50, i32* %r6.global-to-local, align 4
  %v0_10005b54 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_10005b54, i32* %r5.global-to-local, align 4
  %v0_10005b58 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10005b58, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10005b5c

dec_label_pc_10005b5c:                            ; preds = %dec_label_pc_10005b14, %dec_label_pc_10005b50
  %v0_10005bfc = phi i32 [ %v3_10005b2c, %dec_label_pc_10005b14 ], [ %v0_10005b50, %dec_label_pc_10005b50 ]
  %v0_10005be0 = phi i32 [ %v3_10005b28, %dec_label_pc_10005b14 ], [ %v0_10005b54, %dec_label_pc_10005b50 ]
  %v0_10005be4 = phi i32 [ %v3_10005b24, %dec_label_pc_10005b14 ], [ %v0_10005b58, %dec_label_pc_10005b50 ]
  %v0_10005bc4 = phi i32 [ %v3_10005b30, %dec_label_pc_10005b14 ], [ %v0_10005b48, %dec_label_pc_10005b50 ]
  %v0_10005b8c = phi i32 [ %v0_10005afc, %dec_label_pc_10005b14 ], [ %v0_10005b44, %dec_label_pc_10005b50 ]
  %v2_10005b5c = icmp sgt i32 %v0_10005b8c, 3
  %v1_10005b60 = mul i32 %v0_10005bc4, 2048
  %v1_10005b64 = udiv i32 %v0_10005be4, 524288
  %v2_10005b68 = xor i32 %v1_10005b60, %v0_10005bc4
  %v2_10005b6c = xor i32 %v1_10005b64, %v0_10005be4
  %v2_10005b74 = xor i32 %v2_10005b6c, %v2_10005b68
  %v1_10005b78 = udiv i32 %v2_10005b68, 256
  %v2_10005b80 = xor i32 %v2_10005b74, %v1_10005b78
  store i32 %v2_10005b80, i32* %r0.global-to-local, align 4
  br i1 %v2_10005b5c, label %dec_label_pc_10005b38, label %dec_label_pc_10005b88

dec_label_pc_10005b88:                            ; preds = %dec_label_pc_10005b5c
  %v3_10005b70 = icmp eq i32 %v0_10005b8c, 1
  store i32 %v2_10005b80, i32* %r0.global-to-local, align 4
  %v1_10005b8c = add i32 %v0_10005b8c, -2
  store i32 %v1_10005b8c, i32* @r4, align 4
  br i1 %v3_10005b70, label %dec_label_pc_10005bc4, label %dec_label_pc_10005b94

dec_label_pc_10005b94:                            ; preds = %dec_label_pc_10005b88
  %v1_10005b94 = trunc i32 %v2_10005b80 to i16
  %v2_10005b94 = load i32, i32* @r3, align 4
  %v3_10005b94 = inttoptr i32 %v2_10005b94 to i16*
  store i16 %v1_10005b94, i16* %v3_10005b94, align 2
  %v0_10005b98 = load i32, i32* @r3, align 4
  %v1_10005b98 = add i32 %v0_10005b98, 2
  %v0_10005b44.pr = load i32, i32* @r4, align 4
  br label %dec_label_pc_10005b44

dec_label_pc_10005ba0:                            ; preds = %dec_label_pc_10005b44
  %v0_10005ba0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10005ba0, i32* @global_var_1001b594.87, align 4
  %v0_10005ba4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_10005ba4, i32* @global_var_1001b590.89, align 4
  %v0_10005ba8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10005ba8, i32* @global_var_1001b58c.90, align 4
  store i32 %v0_10005b48, i32* @global_var_1001b588.88, align 4
  br label %dec_label_pc_10005bb0

dec_label_pc_10005bb0:                            ; preds = %dec_label_pc_10005afc.dec_label_pc_10005bb0_crit_edge, %dec_label_pc_10005ba0
  %v0_10005bc0 = phi i32 [ %v0_10005bc0.pre, %dec_label_pc_10005afc.dec_label_pc_10005bb0_crit_edge ], [ %storemerge, %dec_label_pc_10005ba0 ]
  ret i32 %v0_10005bc0

dec_label_pc_10005bc4:                            ; preds = %dec_label_pc_10005b88
  store i32 %v2_10005b80, i32* %r0.global-to-local, align 4
  store i32 %v0_10005be0, i32* @global_var_1001b58c.90, align 4
  store i32 %v0_10005be4, i32* @global_var_1001b590.89, align 4
  store i32 %v2_10005b80, i32* @global_var_1001b594.87, align 4
  store i32 %v0_10005bfc, i32* @global_var_1001b588.88, align 4
  %v1_10005c00 = trunc i32 %v2_10005b80 to i8
  %v2_10005c00 = load i32, i32* @r3, align 4
  %v3_10005c00 = inttoptr i32 %v2_10005c00 to i8*
  store i8 %v1_10005c00, i8* %v3_10005c00, align 1
  %v0_10005c04 = load i32, i32* @r3, align 4
  ret i32 %v0_10005c04

; uselistorder directives
  uselistorder i32 %v2_10005b80, { 2, 1, 0, 3, 4, 6, 5 }
  uselistorder i32 %v0_10005bc4, { 1, 0 }
  uselistorder i32 %v0_10005be4, { 1, 2, 0 }
  uselistorder i32 %v0_10005afc, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 4, 2 }
  uselistorder label %dec_label_pc_10005bb0, { 1, 0 }
  uselistorder label %dec_label_pc_10005b5c, { 1, 0 }
}

define i32 @function_10005c08() local_unnamed_addr {
dec_label_pc_10005c08:
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_10005c10 = load i32, i32* @r31, align 4
  %v0_10005c14 = load i32, i32* @r3, align 4
  store i32 %v0_10005c14, i32* @r31, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  %v1_10005c24 = add i32 %v0_10005c14, 4
  %v2_10005c24 = inttoptr i32 %v1_10005c24 to i32*
  %v3_10005c24 = load i32, i32* %v2_10005c24, align 4
  store i32 0, i32* %stack_var_-40, align 4
  %v3_10005c2c = icmp eq i32 %v3_10005c24, -1
  br i1 %v3_10005c2c, label %dec_label_pc_10005c44, label %dec_label_pc_10005c40

dec_label_pc_10005c40:                            ; preds = %dec_label_pc_10005c08
  store i32 268459076, i32* @lr, align 4
  %v0_10005c40 = call i32 @function_10008418()
  br label %dec_label_pc_10005c44

dec_label_pc_10005c44:                            ; preds = %dec_label_pc_10005c08, %dec_label_pc_10005c40
  store i32 268459092, i32* @lr, align 4
  %v3_10005c50 = call i32 @function_10009104(i32 2, i32 1, i32 0)
  store i32 256, i32* @r4, align 4
  %v0_10005c5c = load i32, i32* @r31, align 4
  %v1_10005c5c = add i32 %v0_10005c5c, 28
  store i32 %v1_10005c5c, i32* @r3, align 4
  %v3_10005c60 = icmp eq i32 %v3_10005c50, -1
  %v2_10005c64 = add i32 %v0_10005c5c, 4
  %v3_10005c64 = inttoptr i32 %v2_10005c64 to i32*
  store i32 %v3_10005c50, i32* %v3_10005c64, align 4
  br i1 %v3_10005c60, label %dec_label_pc_10005c44.dec_label_pc_10005cdc_crit_edge, label %dec_label_pc_10005c6c

dec_label_pc_10005c44.dec_label_pc_10005cdc_crit_edge: ; preds = %dec_label_pc_10005c44
  %v0_10005cf0.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10005cdc

dec_label_pc_10005c6c:                            ; preds = %dec_label_pc_10005c44
  %v0_10005c6c = load i32, i32* %r29.global-to-local, align 4
  %v1_10005c6c = load i32, i32* @r31, align 4
  %v2_10005c6c = add i32 %v1_10005c6c, 24
  %v3_10005c6c = inttoptr i32 %v2_10005c6c to i32*
  store i32 %v0_10005c6c, i32* %v3_10005c6c, align 4
  store i32 268459124, i32* @lr, align 4
  %v0_10005c70 = call i32 @function_10007d00()
  %v0_10005c74 = load i32, i32* @r31, align 4
  %v1_10005c74 = add i32 %v0_10005c74, 4
  %v2_10005c74 = inttoptr i32 %v1_10005c74 to i32*
  %v3_10005c74 = load i32, i32* %v2_10005c74, align 4
  store i32 %v3_10005c74, i32* %r29.global-to-local, align 4
  store i32 3, i32* @r4, align 4
  store i32 268459148, i32* @lr, align 4
  %v2_10005c88 = call i32 @function_10008330(i32 %v3_10005c74)
  store i32 4, i32* @r4, align 4
  store i32 268459168, i32* @lr, align 4
  %v2_10005c9c = call i32 @function_10008330(i32 %v3_10005c74)
  %v3_10005ca4 = load i32, i32* @global_var_1001b524.91, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  %v0_10005cac = load i32, i32* @r31, align 4
  %v2_10005cb0 = ptrtoint i32* %stack_var_-40 to i32
  %v2_10005cb4 = add i32 %v0_10005cac, 8
  %v3_10005cb4 = inttoptr i32 %v2_10005cb4 to i32*
  store i32 %v3_10005ca4, i32* %v3_10005cb4, align 4
  %v0_10005cbc = load i32, i32* %r9.global-to-local, align 4
  %v1_10005cbc = load i32, i32* @r31, align 4
  %v2_10005cbc = add i32 %v1_10005cbc, 12
  %v3_10005cbc = inttoptr i32 %v2_10005cbc to i32*
  store i32 %v0_10005cbc, i32* %v3_10005cbc, align 4
  %v0_10005cc4 = load i32, i32* @r31, align 4
  %v1_10005cc4 = add i32 %v0_10005cc4, 4
  %v2_10005cc4 = inttoptr i32 %v1_10005cc4 to i32*
  %v3_10005cc4 = load i32, i32* %v2_10005cc4, align 4
  %v1_10005cc8 = add i32 %v0_10005cc4, 16
  %v2_10005cc8 = inttoptr i32 %v1_10005cc8 to i32*
  %v3_10005cc8 = load i32, i32* %v2_10005cc8, align 4
  store i32 %v3_10005cc8, i32* %r9.global-to-local, align 4
  store i32 2, i32* %stack_var_-40, align 4
  store i32 268459228, i32* @lr, align 4
  %v3_10005cd8 = call i32 @function_10008f34(i32 %v3_10005cc4, i32 %v2_10005cb0, i32 16)
  br label %dec_label_pc_10005cdc

dec_label_pc_10005cdc:                            ; preds = %dec_label_pc_10005c44.dec_label_pc_10005cdc_crit_edge, %dec_label_pc_10005c6c
  %v0_10005cf0 = phi i32 [ %v0_10005cf0.pre, %dec_label_pc_10005c44.dec_label_pc_10005cdc_crit_edge ], [ %v3_10005cd8, %dec_label_pc_10005c6c ]
  store i32 %v0_10005c10, i32* @r31, align 4
  ret i32 %v0_10005cf0

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 0, 2, 1 }
  uselistorder i32 ()* @function_10007d00, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10005cdc, { 1, 0 }
  uselistorder label %dec_label_pc_10005c44, { 1, 0 }
}

define i32 @function_10005cf4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10005cf4:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10005cf8 = load i32, i32* @lr, align 4
  store i32 %v0_10005cf8, i32* %r0.global-to-local, align 4
  %v3_10005d04 = load i32, i32* @global_var_1001b518.92, align 4
  %v1_10005d10 = mul i32 %v3_10005d04, 16
  store i32 %v1_10005d10, i32* %r9.global-to-local, align 4
  %v0_10005d14 = load i32, i32* @r28, align 4
  %v3_10005d1c = load i32, i32* @global_var_1001b51c.93, align 4
  store i32 %arg2, i32* %r23.global-to-local, align 4
  %v1_10005d28 = add i32 %v1_10005d10, 16
  %v0_10005d40 = load i32, i32* @r29, align 4
  %v0_10005d44 = load i32, i32* @r30, align 4
  store i32 268459344, i32* @lr, align 4
  %v3_10005d4c = call i32 @function_100095d0(i32 %v3_10005d1c, i32 %v1_10005d28, i32 %v1_10005d10)
  store i32 %v3_10005d4c, i32* %r25.global-to-local, align 4
  %v0_10005d54 = load i32, i32* @r28, align 4
  store i32 %v3_10005d4c, i32* @global_var_1001b51c.93, align 4
  %v3_10005d5c = load i32, i32* @global_var_1001b518.92, align 4
  store i32 %v3_10005d5c, i32* %r24.global-to-local, align 4
  store i32 268459364, i32* @lr, align 4
  %v1_10005d60 = inttoptr i32 %v0_10005d54 to i8*
  %v2_10005d60 = call i32 @function_10007c58(i8* %v1_10005d60)
  %sext = mul i32 %v2_10005d60, 16777216
  %v1_10005d64 = sdiv i32 %sext, 16777216
  %v2_10005d64 = add nsw i32 %v1_10005d64, 1
  store i32 %v2_10005d64, i32* @r29, align 4
  store i32 %v1_10005d64, i32* @r30, align 4
  store i32 %v2_10005d64, i32* @r3, align 4
  store i32 268459380, i32* @lr, align 4
  %v0_10005d70 = call i32 @function_10009308()
  %v0_10005d74 = load i32, i32* @r28, align 4
  %v0_10005d78 = load i32, i32* @r29, align 4
  store i32 %v0_10005d70, i32* %r31.global-to-local, align 4
  store i32 268459396, i32* @lr, align 4
  %v3_10005d80 = call i32 @function_10007cdc(i32 %v0_10005d74, i32 %v0_10005d78, i32 %v0_10005d78)
  %v0_10005d84 = load i32, i32* @r30, align 4
  %tmp21 = icmp slt i32 %v0_10005d84, 1
  %extract.t6 = trunc i32 %v0_10005d84 to i8
  br i1 %tmp21, label %dec_label_pc_10005da8, label %dec_label_pc_10005d8c

dec_label_pc_10005d8c:                            ; preds = %dec_label_pc_10005cf4
  store i32 %v0_10005d84, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10005d94

dec_label_pc_10005d94:                            ; preds = %dec_label_pc_10005d94, %dec_label_pc_10005d8c
  %v1_10005d9c = phi i32 [ %v1_10005da0, %dec_label_pc_10005d94 ], [ 0, %dec_label_pc_10005d8c ]
  %v1_10005d94 = load i32, i32* %r31.global-to-local, align 4
  %v2_10005d94 = add i32 %v1_10005d94, %v1_10005d9c
  %v3_10005d94 = inttoptr i32 %v2_10005d94 to i8*
  %v4_10005d94 = load i8, i8* %v3_10005d94, align 1
  %v5_10005d94 = zext i8 %v4_10005d94 to i32
  %v1_10005d98 = xor i32 %v5_10005d94, 84
  store i32 %v1_10005d98, i32* %r0.global-to-local, align 4
  %v3_10005d9c = trunc i32 %v1_10005d98 to i8
  store i8 %v3_10005d9c, i8* %v3_10005d94, align 1
  %v0_10005da0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005da0 = add i32 %v0_10005da0, 1
  store i32 %v1_10005da0, i32* %r9.global-to-local, align 4
  %v0_10005da4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10005da4 = add i32 %v0_10005da4, -1
  store i32 %v1_10005da4, i32* %ctr.global-to-local, align 4
  %v2_10005da4 = icmp eq i32 %v1_10005da4, 0
  br i1 %v2_10005da4, label %dec_label_pc_10005da8.loopexit, label %dec_label_pc_10005d94

dec_label_pc_10005da8.loopexit:                   ; preds = %dec_label_pc_10005d94
  %v0_10005dc0.pre = load i32, i32* @r30, align 4
  %extract.t = trunc i32 %v0_10005dc0.pre to i8
  br label %dec_label_pc_10005da8

dec_label_pc_10005da8:                            ; preds = %dec_label_pc_10005da8.loopexit, %dec_label_pc_10005cf4
  %v0_10005dc0.off0 = phi i8 [ %extract.t, %dec_label_pc_10005da8.loopexit ], [ %extract.t6, %dec_label_pc_10005cf4 ]
  %v3_10005da8 = load i32, i32* @global_var_1001b518.92, align 4
  %v0_10005dac = load i32, i32* %r23.global-to-local, align 4
  %v3_10005db0 = load i32, i32* @global_var_1001b51c.93, align 4
  %v1_10005db4 = mul i32 %v3_10005da8, 16
  %v2_10005db8 = add i32 %v3_10005db0, %v1_10005db4
  store i32 %v2_10005db8, i32* %r9.global-to-local, align 4
  %v0_10005dbc = load i32, i32* %r24.global-to-local, align 4
  %v1_10005dbc = mul i32 %v0_10005dbc, 16
  store i32 %v1_10005dbc, i32* %r0.global-to-local, align 4
  %v3_10005dc0 = add i32 %v2_10005db8, 12
  %v4_10005dc0 = inttoptr i32 %v3_10005dc0 to i8*
  store i8 %v0_10005dc0.off0, i8* %v4_10005dc0, align 1
  %v0_10005dc4 = load i32, i32* %r31.global-to-local, align 4
  %v1_10005dc4 = load i32, i32* %r25.global-to-local, align 4
  %v2_10005dc4 = load i32, i32* %r0.global-to-local, align 4
  %v3_10005dc4 = add i32 %v2_10005dc4, %v1_10005dc4
  %v4_10005dc4 = inttoptr i32 %v3_10005dc4 to i32*
  store i32 %v0_10005dc4, i32* %v4_10005dc4, align 4
  %v3_10005dc8 = load i32, i32* @global_var_1001b518.92, align 4
  store i32 %v3_10005dc8, i32* @r30, align 4
  %v3_10005dcc = load i32, i32* @global_var_1001b51c.93, align 4
  store i32 %v3_10005dcc, i32* %r25.global-to-local, align 4
  store i32 268459476, i32* @lr, align 4
  %v1_10005dd0 = inttoptr i32 %v0_10005dac to i8*
  %v2_10005dd0 = call i32 @function_10007c58(i8* %v1_10005dd0)
  %sext1 = mul i32 %v2_10005dd0, 16777216
  %v1_10005dd4 = sdiv i32 %sext1, 16777216
  %v2_10005dd4 = add nsw i32 %v1_10005dd4, 1
  store i32 %v2_10005dd4, i32* @r29, align 4
  store i32 %v1_10005dd4, i32* @r28, align 4
  store i32 %v2_10005dd4, i32* @r3, align 4
  store i32 268459492, i32* @lr, align 4
  %v0_10005de0 = call i32 @function_10009308()
  %v0_10005de4 = load i32, i32* %r23.global-to-local, align 4
  %v0_10005de8 = load i32, i32* @r29, align 4
  store i32 %v0_10005de0, i32* %r31.global-to-local, align 4
  store i32 268459508, i32* @lr, align 4
  %v3_10005df0 = call i32 @function_10007cdc(i32 %v0_10005de4, i32 %v0_10005de8, i32 %v0_10005de8)
  %v0_10005df4 = load i32, i32* @r28, align 4
  %tmp22 = icmp slt i32 %v0_10005df4, 1
  %extract.t8 = trunc i32 %v0_10005df4 to i8
  br i1 %tmp22, label %dec_label_pc_10005e18, label %dec_label_pc_10005dfc

dec_label_pc_10005dfc:                            ; preds = %dec_label_pc_10005da8
  store i32 %v0_10005df4, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10005e04

dec_label_pc_10005e04:                            ; preds = %dec_label_pc_10005e04, %dec_label_pc_10005dfc
  %v1_10005e0c = phi i32 [ %v1_10005e10, %dec_label_pc_10005e04 ], [ 0, %dec_label_pc_10005dfc ]
  %v1_10005e04 = load i32, i32* %r31.global-to-local, align 4
  %v2_10005e04 = add i32 %v1_10005e04, %v1_10005e0c
  %v3_10005e04 = inttoptr i32 %v2_10005e04 to i8*
  %v4_10005e04 = load i8, i8* %v3_10005e04, align 1
  %v5_10005e04 = zext i8 %v4_10005e04 to i32
  %v1_10005e08 = xor i32 %v5_10005e04, 84
  store i32 %v1_10005e08, i32* %r0.global-to-local, align 4
  %v3_10005e0c = trunc i32 %v1_10005e08 to i8
  store i8 %v3_10005e0c, i8* %v3_10005e04, align 1
  %v0_10005e10 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005e10 = add i32 %v0_10005e10, 1
  store i32 %v1_10005e10, i32* %r9.global-to-local, align 4
  %v0_10005e14 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10005e14 = add i32 %v0_10005e14, -1
  store i32 %v1_10005e14, i32* %ctr.global-to-local, align 4
  %v2_10005e14 = icmp eq i32 %v1_10005e14, 0
  br i1 %v2_10005e14, label %dec_label_pc_10005e18.loopexit, label %dec_label_pc_10005e04

dec_label_pc_10005e18.loopexit:                   ; preds = %dec_label_pc_10005e04
  %v0_10005e2c.pre = load i32, i32* @r28, align 4
  %extract.t7 = trunc i32 %v0_10005e2c.pre to i8
  br label %dec_label_pc_10005e18

dec_label_pc_10005e18:                            ; preds = %dec_label_pc_10005e18.loopexit, %dec_label_pc_10005da8
  %v0_10005e2c.off0 = phi i8 [ %extract.t7, %dec_label_pc_10005e18.loopexit ], [ %extract.t8, %dec_label_pc_10005da8 ]
  %v3_10005e18 = load i32, i32* @global_var_1001b518.92, align 4
  %v3_10005e20 = load i32, i32* @global_var_1001b51c.93, align 4
  %v1_10005e24 = mul i32 %v3_10005e18, 16
  %v2_10005e28 = or i32 %v1_10005e24, 13
  %v3_10005e2c = add i32 %v2_10005e28, %v3_10005e20
  %v4_10005e2c = inttoptr i32 %v3_10005e2c to i8*
  store i8 %v0_10005e2c.off0, i8* %v4_10005e2c, align 1
  %v0_10005e30 = load i32, i32* @r30, align 4
  %v1_10005e30 = mul i32 %v0_10005e30, 16
  %v1_10005e34 = load i32, i32* %r25.global-to-local, align 4
  %v2_10005e34 = add i32 %v1_10005e34, %v1_10005e30
  store i32 %v2_10005e34, i32* %r9.global-to-local, align 4
  %v3_10005e38 = load i32, i32* @global_var_1001b518.92, align 4
  %v3_10005e3c = load i32, i32* @global_var_1001b51c.93, align 4
  %v1_10005e40 = mul i32 %v3_10005e38, 16
  %v3_10005e44 = load i16, i16* @global_var_1001b520.94, align 2
  %v4_10005e44 = zext i16 %v3_10005e44 to i32
  store i32 %v4_10005e44, i32* %r7.global-to-local, align 4
  %v2_10005e48 = add i32 %v3_10005e3c, %v1_10005e40
  store i32 %v2_10005e48, i32* %r11.global-to-local, align 4
  store i32 %v0_10005cf8, i32* %r0.global-to-local, align 4
  %v1_10005e50 = add i32 %v3_10005e38, 1
  store i32 %v1_10005e50, i32* %r10.global-to-local, align 4
  store i32 ptrtoint (i16* @global_var_1001b520.94 to i32), i32* %r8.global-to-local, align 4
  %v0_10005e58 = load i32, i32* %r31.global-to-local, align 4
  %v2_10005e58 = add i32 %v2_10005e34, 4
  %v3_10005e58 = inttoptr i32 %v2_10005e58 to i32*
  store i32 %v0_10005e58, i32* %v3_10005e58, align 4
  %v0_10005e60 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10005e60, i32* @global_var_1001b518.92, align 4
  store i32 %v0_10005d14, i32* @r28, align 4
  store i32 %v0_10005d40, i32* @r29, align 4
  store i32 %v0_10005d44, i32* @r30, align 4
  %v0_10005e90 = load i32, i32* %r8.global-to-local, align 4
  %v1_10005e90 = trunc i32 %v0_10005e90 to i16
  %v2_10005e90 = load i32, i32* %r11.global-to-local, align 4
  %v3_10005e90 = add i32 %v2_10005e90, 10
  %v4_10005e90 = inttoptr i32 %v3_10005e90 to i16*
  store i16 %v1_10005e90, i16* %v4_10005e90, align 2
  %v0_10005e94 = load i32, i32* %r7.global-to-local, align 4
  %v1_10005e94 = trunc i32 %v0_10005e94 to i16
  %v2_10005e94 = load i32, i32* %r11.global-to-local, align 4
  %v3_10005e94 = add i32 %v2_10005e94, 8
  %v4_10005e94 = inttoptr i32 %v3_10005e94 to i16*
  store i16 %v1_10005e94, i16* %v4_10005e94, align 2
  %v0_10005e98 = load i32, i32* %r8.global-to-local, align 4
  %v1_10005e98 = trunc i32 %v0_10005e98 to i16
  store i16 %v1_10005e98, i16* @global_var_1001b520.94, align 2
  ret i32 %v3_10005df0

; uselistorder directives
  uselistorder i32 %v3_10005e38, { 1, 0 }
  uselistorder i32 %v1_10005e14, { 1, 0 }
  uselistorder i32 %v1_10005e10, { 1, 0 }
  uselistorder i32 %v0_10005df4, { 1, 0, 2 }
  uselistorder i32 %v1_10005da4, { 1, 0 }
  uselistorder i32 %v1_10005da0, { 1, 0 }
  uselistorder i32 %v0_10005d84, { 1, 0, 2 }
  uselistorder i32 %v1_10005d10, { 2, 1, 0 }
  uselistorder i32* %r23.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i8*)* @function_10007c58, { 0, 1, 22, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23 }
  uselistorder i32 (i32, i32, i32)* @function_100095d0, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_10005ea0(i32 %arg1) local_unnamed_addr {
dec_label_pc_10005ea0:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp51 = call i32 @__decompiler_undefined_function_0()
  %tmp52 = call i32 @__decompiler_undefined_function_0()
  %tmp53 = call i32 @__decompiler_undefined_function_0()
  %tmp54 = call i16 @__decompiler_undefined_function_1()
  %tmp55 = call i16 @__decompiler_undefined_function_1()
  %tmp56 = call i8 @__decompiler_undefined_function_2()
  %tmp57 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-1912 = alloca i32, align 4
  %stack_var_-1920 = alloca i32, align 4
  %stack_var_-1908 = alloca i32, align 4
  %stack_var_-1744 = alloca i32, align 4
  %stack_var_-1872 = alloca i32, align 4
  %stack_var_-1616 = alloca i32, align 4
  %stack_var_-1888 = alloca i32, align 4
  %stack_var_-1928 = alloca i32, align 4
  %stack_var_-1916 = alloca i64, align 8
  %v0_10005ea0 = load i32, i32* @lr, align 4
  store i32 %v0_10005ea0, i32* %r0.global-to-local, align 4
  %v0_10005ea8 = call i32 @__asm_mfcr()
  store i32 %v0_10005ea8, i32* %r3.global-to-local, align 4
  %v0_10005ed4 = load i32, i32* @r24, align 4
  %v0_10005ed8 = load i32, i32* @r25, align 4
  %v0_10005ee0 = load i32, i32* @r27, align 4
  %v0_10005ee4 = load i32, i32* @r28, align 4
  %v0_10005ee8 = load i32, i32* @r29, align 4
  %v0_10005eec = load i32, i32* @r30, align 4
  %v0_10005ef0 = load i32, i32* @r31, align 4
  %v0_10005ef4 = load i32, i32* %r0.global-to-local, align 4
  store i32 268459776, i32* @lr, align 4
  %v0_10005efc = call i32 @function_10008460()
  store i32 %v0_10005efc, i32* %r3.global-to-local, align 4
  %v1_10005f00 = icmp slt i32 %v0_10005efc, 0
  %v3_10005f00 = icmp eq i32 %v0_10005efc, 0
  store i1 %v1_10005f00, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10005f00, i1* %cr7_eq.global-to-local, align 1
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v0_10005efc, i32* @global_var_1001b530.95, align 4
  %tmp98 = icmp slt i32 %v0_10005efc, 1
  br i1 %tmp98, label %dec_label_pc_10005f70, label %dec_label_pc_10005f10

dec_label_pc_10005f10:                            ; preds = %dec_label_pc_10005f70, %dec_label_pc_10005ea0
  store i32 %v0_10005ef4, i32* %r0.global-to-local, align 4
  %v1_10005f24 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10005ea8)
  store i32 %v0_10005ed4, i32* @r24, align 4
  store i32 %v0_10005ed8, i32* @r25, align 4
  store i32 %v0_10005ee0, i32* @r27, align 4
  store i32 %v0_10005ee4, i32* @r28, align 4
  store i32 %v0_10005ee8, i32* %r29.global-to-local, align 4
  store i32 %v0_10005eec, i32* %r30.global-to-local, align 4
  store i32 %v0_10005ef0, i32* @r31, align 4
  ret i32 %v0_10005efc

dec_label_pc_10005f70:                            ; preds = %dec_label_pc_10005ea0
  %v1_10005f70 = icmp slt i32 %v0_10005efc, -1
  %v3_10005f70 = icmp eq i32 %v0_10005efc, -1
  store i1 %v1_10005f70, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10005f70, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10005f70, label %dec_label_pc_10005f10, label %dec_label_pc_10005f78

dec_label_pc_10005f78:                            ; preds = %dec_label_pc_10005f70
  store i32 268459900, i32* @lr, align 4
  %v1_10005f78 = call i32 @function_10007f5c(i32 %v0_10005efc)
  store i32 %v1_10005f78, i32* %r3.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v1_10005f78, i32* @global_var_1001b500.16, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005f88.96 to i32), i32* @lr, align 4
  %v2_10005f84 = call i32 @function_10005978(i32 %v1_10005f78, i32 268566528)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268459924, i32* @lr, align 4
  %v0_10005f90 = call i32 @function_100087e8()
  store i32 %v0_10005f90, i32* @global_var_1001b524.91, align 4
  store i32 256, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10005fa4.97 to i32), i32* @lr, align 4
  %v2_10005fa0 = call i32 @function_10009460(i32 256, i32 288)
  store i32 %v2_10005fa0, i32* %r3.global-to-local, align 4
  store i64 0, i64* %stack_var_-1916, align 8
  store i32 256, i32* %r0.global-to-local, align 4
  store i32 256, i32* %ctr.global-to-local, align 4
  store i32 %v2_10005fa0, i32* @global_var_1001b528.98, align 4
  store i32 %v2_10005fa0, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 -1, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_10005fd0 = add i32 %v2_10005fa0, 4
  store i32 %v1_10005fd0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10005fd4

dec_label_pc_10005fd4:                            ; preds = %dec_label_pc_10005fd4.dec_label_pc_10005fd4_crit_edge, %dec_label_pc_10005f78
  %v1_10005fe8 = phi i32 [ %v1_10005ff0, %dec_label_pc_10005fd4.dec_label_pc_10005fd4_crit_edge ], [ %v1_10005fd0, %dec_label_pc_10005f78 ]
  %v0_10005fe8 = phi i32 [ %v0_10005fe8.pre, %dec_label_pc_10005fd4.dec_label_pc_10005fd4_crit_edge ], [ -1, %dec_label_pc_10005f78 ]
  %v1_10005fe4 = phi i32 [ %v1_10005fe4.pre, %dec_label_pc_10005fd4.dec_label_pc_10005fd4_crit_edge ], [ %v2_10005fa0, %dec_label_pc_10005f78 ]
  %v0_10005fe0 = phi i32 [ %v0_10005ff4, %dec_label_pc_10005fd4.dec_label_pc_10005fd4_crit_edge ], [ 0, %dec_label_pc_10005f78 ]
  %v1_10005fd4 = mul i32 %v0_10005fe0, 256
  store i32 %v1_10005fd4, i32* %r0.global-to-local, align 4
  %v2_10005fdc = mul i32 %v0_10005fe0, 288
  %v1_10005fe0 = add i32 %v0_10005fe0, 1
  store i32 %v1_10005fe0, i32* %r10.global-to-local, align 4
  %v2_10005fe4 = add i32 %v2_10005fdc, %v1_10005fe4
  store i32 %v2_10005fe4, i32* %r9.global-to-local, align 4
  %v2_10005fe8 = inttoptr i32 %v1_10005fe8 to i32*
  store i32 %v0_10005fe8, i32* %v2_10005fe8, align 4
  %v0_10005fec = load i32, i32* %r7.global-to-local, align 4
  %v1_10005fec = load i32, i32* %r9.global-to-local, align 4
  %v2_10005fec = add i32 %v1_10005fec, 12
  %v3_10005fec = inttoptr i32 %v2_10005fec to i32*
  store i32 %v0_10005fec, i32* %v3_10005fec, align 4
  %v0_10005ff0 = load i32, i32* %r11.global-to-local, align 4
  %v1_10005ff0 = add i32 %v0_10005ff0, 288
  store i32 %v1_10005ff0, i32* %r11.global-to-local, align 4
  %v0_10005ff4 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10005ff4, i32* %r9.global-to-local, align 4
  %v0_10005ff8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10005ff8 = add i32 %v0_10005ff8, -1
  store i32 %v1_10005ff8, i32* %ctr.global-to-local, align 4
  %v2_10005ff8 = icmp eq i32 %v1_10005ff8, 0
  br i1 %v2_10005ff8, label %dec_label_pc_10005ffc, label %dec_label_pc_10005fd4.dec_label_pc_10005fd4_crit_edge

dec_label_pc_10005fd4.dec_label_pc_10005fd4_crit_edge: ; preds = %dec_label_pc_10005fd4
  %v1_10005fe4.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_10005fe8.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10005fd4

dec_label_pc_10005ffc:                            ; preds = %dec_label_pc_10005fd4
  store i32 256, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i64 256, i64* %stack_var_-1916, align 8
  store i32 268460052, i32* @lr, align 4
  %v3_10006010 = call i32 @function_10009104(i32 2, i32 3, i32 6)
  %v4_10006010 = trunc i32 %v3_10006010 to i16
  store i32 %v3_10006010, i32* %r3.global-to-local, align 4
  %v2_10006014 = icmp slt i16 %v4_10006010, -1
  %v4_10006014 = icmp eq i16 %v4_10006010, -1
  store i1 %v2_10006014, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006014, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10006010, i32* %r29.global-to-local, align 4
  store i32 %v3_10006010, i32* @global_var_1001b52c.99, align 4
  br i1 %v4_10006014, label %dec_label_pc_10006634, label %dec_label_pc_10006028

dec_label_pc_10006028:                            ; preds = %dec_label_pc_10005ffc
  store i32 3, i32* @r4, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 268460088, i32* @lr, align 4
  %v1_10006034 = call i32 @function_10008330(i32 3)
  store i32 4, i32* @r4, align 4
  %v1_1000603c = or i32 %v1_10006034, 2048
  store i32 %v1_1000603c, i32* %r5.global-to-local, align 4
  %v0_10006040 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10006040, i32* %r3.global-to-local, align 4
  store i32 268460108, i32* @lr, align 4
  %v2_10006048 = call i32 @function_10008330(i32 %v0_10006040)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10006050 = load i32, i32* @global_var_1001b52c.99, align 4
  store i32 %v3_10006050, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  %v2_10006060 = ptrtoint i64* %stack_var_-1916 to i32
  store i32 %v2_10006060, i32* %r6.global-to-local, align 4
  store i32 4, i32* %r7.global-to-local, align 4
  store i64 1, i64* %stack_var_-1916, align 8
  store i32 268460144, i32* @lr, align 4
  %v5_1000606c = call i32 @function_100090c8(i32 %v3_10006050, i32 0, i32 3, i32 %v2_10006060)
  store i32 %v5_1000606c, i32* %r3.global-to-local, align 4
  %v1_10006070 = icmp slt i32 %v5_1000606c, 0
  %v3_10006070 = icmp eq i32 %v5_1000606c, 0
  store i1 %v1_10006070, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006070, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006070, label %dec_label_pc_10006078, label %dec_label_pc_10007604

dec_label_pc_10006078:                            ; preds = %dec_label_pc_10006028, %dec_label_pc_10006078
  %v0_10006078 = call i32 @function_10005928()
  store i32 %v0_10006078, i32* %r3.global-to-local, align 4
  %v1_1000607c = urem i32 %v0_10006078, 65536
  store i32 %v1_1000607c, i32* @r22, align 4
  %v1_10006080 = icmp ult i32 %v1_1000607c, 1023
  %v3_10006080 = icmp eq i32 %v1_1000607c, 1023
  store i1 %v1_10006080, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006080, i1* %cr7_eq.global-to-local, align 1
  %tmp99 = icmp ult i32 %v1_1000607c, 1024
  br i1 %tmp99, label %dec_label_pc_10006078, label %dec_label_pc_10006088

dec_label_pc_10006088:                            ; preds = %dec_label_pc_10006078
  store i32 268566528, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r29.global-to-local, align 4
  %v3_10006090 = load i32, i32* @global_var_1001b598.100, align 4
  store i32 %v3_10006090, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001b598.100 to i32), i32* @r23, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001b5ac.101 to i32), i32* @r24, align 4
  %v1_100060a0 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_100060a0, i32* %r0.global-to-local, align 4
  store i32 268500992, i32* %r28.global-to-local, align 4
  %v1_100060a8 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100060a8, i32* %r0.global-to-local, align 4
  store i32 40, i32* %r9.global-to-local, align 4
  store i32 %v1_100060a8, i32* @global_var_1001b598.100, align 4
  store i32 ptrtoint (i32* @global_var_1000ae8c.102 to i32), i32* @r28, align 4
  store i16 40, i16* bitcast (i32* @global_var_1001b59a.103 to i16*), align 4
  %v0_100060bc = call i32 @function_10005928()
  %v1_100060bc = trunc i32 %v0_100060bc to i16
  store i32 %v0_100060bc, i32* %r3.global-to-local, align 4
  %v3_100060c0 = load i32, i32* @global_var_1001b5b8.104, align 4
  store i32 %v3_100060c0, i32* %r11.global-to-local, align 4
  store i32 64, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r9.global-to-local, align 4
  store i8 64, i8* bitcast (i32* @global_var_1001b5a0.105 to i8*), align 4
  %v1_100060d0 = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  store i32 %v1_100060d0, i32* %r11.global-to-local, align 4
  store i32 23, i32* %r0.global-to-local, align 4
  %v0_100060d8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100060d8 = trunc i32 %v0_100060d8 to i8
  store i8 %v1_100060d8, i8* bitcast (i32* @global_var_1001b5a1.106 to i8*), align 4
  store i16 %v1_100060bc, i16* bitcast (i32* @global_var_1001b59c.107 to i16*), align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1000ae88.108 to i32), i32* @r29, align 4
  store i32 %v1_100060d0, i32* @global_var_1001b5b8.104, align 4
  store i16 23, i16* @global_var_1001b5ae.109, align 2
  store i32 ptrtoint ([8 x i8]* @global_var_1000ae20.110 to i32), i32* @r27, align 4
  %v0_100060f8 = load i32, i32* @r22, align 4
  %v1_100060f8 = trunc i32 %v0_100060f8 to i16
  store i16 %v1_100060f8, i16* bitcast (i32* @global_var_1001b5ac.101 to i16*), align 4
  %v2_100060fc = ptrtoint i32* %stack_var_-1928 to i32
  store i32 %v2_100060fc, i32* @r14, align 4
  %v0_10006100 = call i32 @function_10005928()
  %v1_10006100 = trunc i32 %v0_10006100 to i16
  %v0_10006104 = load i32, i32* @r28, align 4
  store i16 %v1_10006100, i16* bitcast (i32* @global_var_1001b5ba.111 to i16*), align 4
  store i32 4, i32* %r5.global-to-local, align 4
  %v0_10006110 = load i32, i32* @r29, align 4
  store i32 %v0_10006110, i32* %r3.global-to-local, align 4
  %v3_10006114 = load i32, i32* @global_var_1001b5b8.104, align 4
  %v1_10006118 = or i32 %v3_10006114, 131072
  store i32 %v1_10006118, i32* %r0.global-to-local, align 4
  store i32 %v1_10006118, i32* @global_var_1001b5b8.104, align 4
  store i32 268460324, i32* @lr, align 4
  %v4_10006120 = call i32 @function_10005cf4(i32 %v0_10006110, i32 %v0_10006104, i32 4)
  %v0_10006128 = load i32, i32* @r29, align 4
  store i32 %v0_10006128, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268460344, i32* @lr, align 4
  %v5_10006134 = call i32 @function_10005cf4(i32 %v0_10006128, i32 ptrtoint ([5 x i8]* @global_var_1000ae04.112 to i32), i32 8)
  %v0_1000613c = load i32, i32* @r29, align 4
  store i32 %v0_1000613c, i32* %r3.global-to-local, align 4
  store i32 12, i32* %r5.global-to-local, align 4
  store i32 268460364, i32* @lr, align 4
  %v5_10006148 = call i32 @function_10005cf4(i32 %v0_1000613c, i32 ptrtoint ([9 x i8]* @global_var_1000ae0c.113 to i32), i32 12)
  store i32 ptrtoint ([7 x i8]* @global_var_1000ae18.114 to i32), i32* %r3.global-to-local, align 4
  store i32 12, i32* %r5.global-to-local, align 4
  store i32 268460384, i32* @lr, align 4
  %v4_1000615c = call i32 @function_10005cf4(i32 ptrtoint ([7 x i8]* @global_var_1000ae18.114 to i32), i32 12, i32 12)
  %v0_10006160 = load i32, i32* @r28, align 4
  %v0_10006164 = load i32, i32* @r27, align 4
  store i32 %v0_10006164, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 268460400, i32* @lr, align 4
  %v4_1000616c = call i32 @function_10005cf4(i32 %v0_10006164, i32 %v0_10006160, i32 7)
  %v0_10006174 = load i32, i32* @r29, align 4
  store i32 %v0_10006174, i32* %r3.global-to-local, align 4
  store i32 12, i32* %r5.global-to-local, align 4
  store i32 268500992, i32* @r28, align 4
  store i32 268460424, i32* @lr, align 4
  %v5_10006184 = call i32 @function_10005cf4(i32 %v0_10006174, i32 ptrtoint ([9 x i8]* @global_var_1000ae28.115 to i32), i32 12)
  store i32 ptrtoint ([6 x i8]* @global_var_1000ae34.116 to i32), i32* %r3.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1000ae5c.117 to i32), i32* @r28, align 4
  store i32 268460448, i32* @lr, align 4
  %v4_1000619c = call i32 @function_10005cf4(i32 ptrtoint ([6 x i8]* @global_var_1000ae34.116 to i32), i32 10, i32 10)
  %v0_100061a4 = load i32, i32* @r29, align 4
  store i32 %v0_100061a4, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r5.global-to-local, align 4
  store i32 268460468, i32* @lr, align 4
  %v5_100061b0 = call i32 @function_10005cf4(i32 %v0_100061a4, i32 ptrtoint ([6 x i8]* @global_var_1000ae3c.118 to i32), i32 9)
  store i32 ptrtoint ([8 x i8]* @global_var_1000ae44.119 to i32), i32* %r3.global-to-local, align 4
  store i32 14, i32* %r5.global-to-local, align 4
  store i32 268460488, i32* @lr, align 4
  %v4_100061c4 = call i32 @function_10005cf4(i32 ptrtoint ([8 x i8]* @global_var_1000ae44.119 to i32), i32 14, i32 14)
  %v0_100061c8 = load i32, i32* @r29, align 4
  store i32 %v0_100061c8, i32* %r3.global-to-local, align 4
  %v0_100061cc = load i32, i32* @r27, align 4
  store i32 11, i32* %r5.global-to-local, align 4
  store i32 268460504, i32* @lr, align 4
  %v5_100061d4 = call i32 @function_10005cf4(i32 %v0_100061c8, i32 %v0_100061cc, i32 11)
  %v0_100061dc = load i32, i32* @r29, align 4
  store i32 %v0_100061dc, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r5.global-to-local, align 4
  store i32 268460524, i32* @lr, align 4
  %v4_100061e8 = call i32 @function_10005cf4(i32 %v0_100061dc, i32 ptrtoint (i32* @global_var_1000ae4c.120 to i32), i32 17)
  %v0_100061ec = load i32, i32* @r29, align 4
  store i32 %v0_100061ec, i32* %r3.global-to-local, align 4
  %v0_100061f4 = load i32, i32* @r28, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1000ae64.121 to i32), i32* @r29, align 4
  store i32 9, i32* %r5.global-to-local, align 4
  store i32 268460548, i32* @lr, align 4
  %v5_10006200 = call i32 @function_10005cf4(i32 %v0_100061ec, i32 %v0_100061f4, i32 9)
  store i32 8, i32* %r5.global-to-local, align 4
  %v0_10006208 = load i32, i32* @r29, align 4
  store i32 %v0_10006208, i32* %r3.global-to-local, align 4
  store i32 268460564, i32* @lr, align 4
  %v5_10006210 = call i32 @function_10005cf4(i32 %v0_10006208, i32 %v0_10006208, i32 8)
  %v0_10006214 = load i32, i32* @r29, align 4
  store i32 %v0_10006214, i32* %r3.global-to-local, align 4
  %v0_10006218 = load i32, i32* @r28, align 4
  store i32 9, i32* %r5.global-to-local, align 4
  store i32 268460580, i32* @lr, align 4
  %v5_10006220 = call i32 @function_10005cf4(i32 %v0_10006214, i32 %v0_10006218, i32 9)
  %v0_1000622c = load i32, i32* @r27, align 4
  store i32 %v0_1000622c, i32* %r3.global-to-local, align 4
  store i32 15, i32* %r5.global-to-local, align 4
  store i32 268460600, i32* @lr, align 4
  %v4_10006234 = call i32 @function_10005cf4(i32 %v0_1000622c, i32 ptrtoint (i32* @global_var_1000ae6c.122 to i32), i32 15)
  %v0_1000623c = load i32, i32* @r27, align 4
  store i32 %v0_1000623c, i32* %r3.global-to-local, align 4
  store i32 15, i32* %r5.global-to-local, align 4
  store i32 268460620, i32* @lr, align 4
  %v4_10006248 = call i32 @function_10005cf4(i32 %v0_1000623c, i32 ptrtoint (i32* @global_var_1000ae78.123 to i32), i32 15)
  store i32 %v4_10006248, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000624c

dec_label_pc_1000624c:                            ; preds = %dec_label_pc_10006894, %dec_label_pc_10006088
  %v3_1000624c = load i32, i32* @global_var_1001b524.91, align 4
  store i32 %v3_1000624c, i32* @r31, align 4
  %v0_10006250 = load i32, i32* @r25, align 4
  %v2_10006250 = icmp slt i32 %v0_10006250, %v3_1000624c
  %v4_10006250 = icmp eq i32 %v0_10006250, %v3_1000624c
  store i1 %v2_10006250, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006250, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10006250, label %dec_label_pc_10006470, label %dec_label_pc_10006258

dec_label_pc_10006258:                            ; preds = %dec_label_pc_1000624c
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000625c = ptrtoint i32* %stack_var_-1888 to i32
  store i32 %v2_1000625c, i32* %r28.global-to-local, align 4
  store i64 0, i64* %stack_var_-1916, align 8
  store i32 0, i32* @r30, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000626c

dec_label_pc_1000626c:                            ; preds = %dec_label_pc_1000639c.dec_label_pc_1000626c_crit_edge, %dec_label_pc_10006258
  %v0_1000626c = phi i32 [ %v0_1000626c.pre, %dec_label_pc_1000639c.dec_label_pc_1000626c_crit_edge ], [ 0, %dec_label_pc_10006258 ]
  store i32 %v0_1000626c, i32* %stack_var_-1888, align 4
  %v0_1000627c = call i32 @function_10005928()
  %v1_1000627c = trunc i32 %v0_1000627c to i16
  store i32 %v0_1000627c, i32* %r3.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i16 %v1_1000627c, i16* bitcast (i32* @global_var_1001b59c.107 to i16*), align 4
  %v3_10006288 = load i32, i32* @global_var_1001b500.16, align 4
  store i32 %v3_10006288, i32* %r0.global-to-local, align 4
  store i32 %v3_10006288, i32* @global_var_1001b5a4.124, align 4
  br label %dec_label_pc_10006290.preheader

dec_label_pc_10006290.preheader:                  ; preds = %dec_label_pc_1000626c, %dec_label_pc_1000663c
  br label %dec_label_pc_10006290

dec_label_pc_10006290:                            ; preds = %dec_label_pc_100066d8, %dec_label_pc_100066cc, %dec_label_pc_100066c0, %dec_label_pc_100066b4, %dec_label_pc_100066a8, %dec_label_pc_100066a0, %dec_label_pc_10006698, %dec_label_pc_10006690, %dec_label_pc_10006684, %dec_label_pc_10006670, %dec_label_pc_10006664, %dec_label_pc_10006650, %dec_label_pc_10006394, %dec_label_pc_1000638c, %dec_label_pc_10006384, %dec_label_pc_1000637c, %dec_label_pc_10006374, %dec_label_pc_1000636c, %dec_label_pc_10006364, %dec_label_pc_1000635c, %dec_label_pc_10006354, %dec_label_pc_1000634c, %dec_label_pc_10006344, %dec_label_pc_10006334, %dec_label_pc_10006304, %dec_label_pc_100062d4, %dec_label_pc_100062cc, %dec_label_pc_100062bc, %dec_label_pc_100062b4, %dec_label_pc_100062ac, %dec_label_pc_10006290, %dec_label_pc_10006290.preheader
  %v0_10006290 = call i32 @function_10005928()
  store i32 %v0_10006290, i32* %r3.global-to-local, align 4
  %v1_10006294 = urem i32 %v0_10006290, 256
  store i32 %v1_10006294, i32* %r11.global-to-local, align 4
  %v1_10006298 = udiv i32 %v0_10006290, 16777216
  store i32 %v1_10006298, i32* %r10.global-to-local, align 4
  %v1_1000629c = icmp ult i32 %v1_10006294, 127
  %v3_1000629c = icmp eq i32 %v1_10006294, 127
  store i1 %v1_1000629c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000629c, i1* %cr7_eq.global-to-local, align 1
  %v1_100062a0 = call i32 @__asm_rlwinm(i32 %v0_10006290, i32 24, i32 24, i32 31)
  store i32 %v1_100062a0, i32* @r9, align 4
  %v1_100062a4 = call i32 @__asm_rlwinm(i32 %v0_10006290, i32 16, i32 24, i32 31)
  store i32 %v1_100062a4, i32* %r3.global-to-local, align 4
  %v0_100062a8 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100062a8, label %dec_label_pc_10006290, label %dec_label_pc_100062ac

dec_label_pc_100062ac:                            ; preds = %dec_label_pc_10006290
  %v0_100062ac = load i32, i32* %r11.global-to-local, align 4
  %v1_100062ac = icmp slt i32 %v0_100062ac, 0
  %v3_100062ac = icmp eq i32 %v0_100062ac, 0
  store i1 %v1_100062ac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100062ac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100062ac, label %dec_label_pc_10006290, label %dec_label_pc_100062b4

dec_label_pc_100062b4:                            ; preds = %dec_label_pc_100062ac
  %v1_100062b4 = icmp slt i32 %v0_100062ac, 3
  %v3_100062b4 = icmp eq i32 %v0_100062ac, 3
  store i1 %v1_100062b4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100062b4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100062b4, label %dec_label_pc_10006290, label %dec_label_pc_100062bc

dec_label_pc_100062bc:                            ; preds = %dec_label_pc_100062b4
  %v1_100062bc = add i32 %v0_100062ac, 241
  %v1_100062c0 = urem i32 %v1_100062bc, 256
  store i32 %v1_100062c0, i32* %r0.global-to-local, align 4
  %v1_100062c4 = icmp eq i32 %v1_100062c0, 0
  %v3_100062c4 = icmp eq i32 %v1_100062c0, 1
  store i1 %v1_100062c4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100062c4, i1* %cr7_eq.global-to-local, align 1
  %tmp100 = or i32 %v1_100062c0, 1
  %tmp101 = icmp eq i32 %tmp100, 1
  br i1 %tmp101, label %dec_label_pc_10006290, label %dec_label_pc_100062cc

dec_label_pc_100062cc:                            ; preds = %dec_label_pc_100062bc
  %v1_100062cc = icmp slt i32 %v0_100062ac, 56
  %v3_100062cc = icmp eq i32 %v0_100062ac, 56
  store i1 %v1_100062cc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100062cc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100062cc, label %dec_label_pc_10006290, label %dec_label_pc_100062d4

dec_label_pc_100062d4:                            ; preds = %dec_label_pc_100062cc
  %v1_100062d4 = icmp slt i32 %v0_100062ac, 10
  %v3_100062d4 = icmp eq i32 %v0_100062ac, 10
  store i1 %v1_100062d4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100062d4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100062d4, label %dec_label_pc_10006290, label %dec_label_pc_100062dc

dec_label_pc_100062dc:                            ; preds = %dec_label_pc_100062d4
  %v1_100062dc = icmp slt i32 %v0_100062ac, 192
  %v3_100062dc = icmp eq i32 %v0_100062ac, 192
  store i1 %v1_100062dc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100062dc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100062dc, label %dec_label_pc_1000663c, label %dec_label_pc_100062e4

dec_label_pc_100062e4:                            ; preds = %dec_label_pc_100062dc
  %v1_100062e4 = icmp slt i32 %v0_100062ac, 172
  %v3_100062e4 = icmp eq i32 %v0_100062ac, 172
  store i1 %v1_100062e4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100062e4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100062e4, label %dec_label_pc_10006648, label %dec_label_pc_100062ec

dec_label_pc_100062ec:                            ; preds = %dec_label_pc_100062e4
  %v1_100062ec = icmp slt i32 %v0_100062ac, 100
  %v3_100062ec = icmp eq i32 %v0_100062ac, 100
  store i1 %v1_100062ec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100062ec, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100062ec, label %dec_label_pc_1000665c, label %dec_label_pc_100062f4

dec_label_pc_100062f4:                            ; preds = %dec_label_pc_100062ec
  %v1_100062f4 = icmp slt i32 %v0_100062ac, 169
  %v3_100062f4 = icmp eq i32 %v0_100062ac, 169
  store i1 %v1_100062f4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100062f4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100062f4, label %dec_label_pc_10006670, label %dec_label_pc_100062fc

dec_label_pc_100062fc:                            ; preds = %dec_label_pc_100062f4
  %v1_100062fc = icmp slt i32 %v0_100062ac, 198
  %v3_100062fc = icmp eq i32 %v0_100062ac, 198
  store i1 %v1_100062fc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100062fc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100062fc, label %dec_label_pc_1000667c, label %dec_label_pc_10006304

dec_label_pc_10006304:                            ; preds = %dec_label_pc_100062fc
  %v1_10006304 = icmp ult i32 %v0_100062ac, 223
  %v2_10006304 = icmp ugt i32 %v0_100062ac, 223
  %v3_10006304 = icmp eq i32 %v0_100062ac, 223
  store i1 %v1_10006304, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006304, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10006304, label %dec_label_pc_10006290, label %dec_label_pc_1000630c

dec_label_pc_1000630c:                            ; preds = %dec_label_pc_10006304
  %v1_1000630c = icmp slt i32 %v0_100062ac, 106
  %v3_1000630c = icmp eq i32 %v0_100062ac, 106
  store i1 %v1_1000630c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000630c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000630c, label %dec_label_pc_10006690, label %dec_label_pc_10006314

dec_label_pc_10006314:                            ; preds = %dec_label_pc_1000630c
  %v1_10006314 = icmp slt i32 %v0_100062ac, 150
  %v3_10006314 = icmp eq i32 %v0_100062ac, 150
  store i1 %v1_10006314, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006314, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006314, label %dec_label_pc_100066b4, label %dec_label_pc_1000631c

dec_label_pc_1000631c:                            ; preds = %dec_label_pc_10006314
  %v1_1000631c = icmp slt i32 %v0_100062ac, 49
  %v3_1000631c = icmp eq i32 %v0_100062ac, 49
  store i1 %v1_1000631c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000631c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000631c, label %dec_label_pc_100066c0, label %dec_label_pc_10006324

dec_label_pc_10006324:                            ; preds = %dec_label_pc_1000631c
  %v1_10006324 = icmp slt i32 %v0_100062ac, 178
  %v3_10006324 = icmp eq i32 %v0_100062ac, 178
  store i1 %v1_10006324, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006324, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006324, label %dec_label_pc_100066cc, label %dec_label_pc_1000632c

dec_label_pc_1000632c:                            ; preds = %dec_label_pc_10006324
  %v1_1000632c = icmp slt i32 %v0_100062ac, 160
  %v3_1000632c = icmp eq i32 %v0_100062ac, 160
  store i1 %v1_1000632c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000632c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000632c, label %dec_label_pc_100066d8, label %dec_label_pc_10006334

dec_label_pc_10006334:                            ; preds = %dec_label_pc_1000632c
  %v1_10006334 = add i32 %v0_100062ac, 250
  %v1_10006338 = urem i32 %v1_10006334, 256
  store i32 %v1_10006338, i32* %r0.global-to-local, align 4
  %v1_1000633c = icmp eq i32 %v1_10006338, 0
  %v3_1000633c = icmp eq i32 %v1_10006338, 1
  store i1 %v1_1000633c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000633c, i1* %cr7_eq.global-to-local, align 1
  %tmp102 = or i32 %v1_10006338, 1
  %tmp103 = icmp eq i32 %tmp102, 1
  br i1 %tmp103, label %dec_label_pc_10006290, label %dec_label_pc_10006344

dec_label_pc_10006344:                            ; preds = %dec_label_pc_10006334
  %v1_10006344 = icmp slt i32 %v0_100062ac, 11
  %v3_10006344 = icmp eq i32 %v0_100062ac, 11
  store i1 %v1_10006344, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006344, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006344, label %dec_label_pc_10006290, label %dec_label_pc_1000634c

dec_label_pc_1000634c:                            ; preds = %dec_label_pc_10006344
  %v1_1000634c = icmp slt i32 %v0_100062ac, 21
  %v3_1000634c = icmp eq i32 %v0_100062ac, 21
  store i1 %v1_1000634c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000634c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000634c, label %dec_label_pc_10006290, label %dec_label_pc_10006354

dec_label_pc_10006354:                            ; preds = %dec_label_pc_1000634c
  %v1_10006354 = icmp slt i32 %v0_100062ac, 22
  %v3_10006354 = icmp eq i32 %v0_100062ac, 22
  store i1 %v1_10006354, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006354, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006354, label %dec_label_pc_10006290, label %dec_label_pc_1000635c

dec_label_pc_1000635c:                            ; preds = %dec_label_pc_10006354
  %v1_1000635c = icmp slt i32 %v0_100062ac, 26
  %v3_1000635c = icmp eq i32 %v0_100062ac, 26
  store i1 %v1_1000635c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000635c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000635c, label %dec_label_pc_10006290, label %dec_label_pc_10006364

dec_label_pc_10006364:                            ; preds = %dec_label_pc_1000635c
  %v1_10006364 = icmp slt i32 %v0_100062ac, 28
  %v3_10006364 = icmp eq i32 %v0_100062ac, 28
  store i1 %v1_10006364, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006364, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006364, label %dec_label_pc_10006290, label %dec_label_pc_1000636c

dec_label_pc_1000636c:                            ; preds = %dec_label_pc_10006364
  %v1_1000636c = icmp slt i32 %v0_100062ac, 29
  %v3_1000636c = icmp eq i32 %v0_100062ac, 29
  store i1 %v1_1000636c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000636c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000636c, label %dec_label_pc_10006290, label %dec_label_pc_10006374

dec_label_pc_10006374:                            ; preds = %dec_label_pc_1000636c
  %v1_10006374 = icmp slt i32 %v0_100062ac, 30
  %v3_10006374 = icmp eq i32 %v0_100062ac, 30
  store i1 %v1_10006374, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006374, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006374, label %dec_label_pc_10006290, label %dec_label_pc_1000637c

dec_label_pc_1000637c:                            ; preds = %dec_label_pc_10006374
  %v1_1000637c = icmp slt i32 %v0_100062ac, 33
  %v3_1000637c = icmp eq i32 %v0_100062ac, 33
  store i1 %v1_1000637c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000637c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000637c, label %dec_label_pc_10006290, label %dec_label_pc_10006384

dec_label_pc_10006384:                            ; preds = %dec_label_pc_1000637c
  %v1_10006384 = icmp slt i32 %v0_100062ac, 55
  %v3_10006384 = icmp eq i32 %v0_100062ac, 55
  store i1 %v1_10006384, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006384, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006384, label %dec_label_pc_10006290, label %dec_label_pc_1000638c

dec_label_pc_1000638c:                            ; preds = %dec_label_pc_10006384
  %v1_1000638c = icmp slt i32 %v0_100062ac, 214
  %v3_1000638c = icmp eq i32 %v0_100062ac, 214
  store i1 %v1_1000638c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000638c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000638c, label %dec_label_pc_10006290, label %dec_label_pc_10006394

dec_label_pc_10006394:                            ; preds = %dec_label_pc_1000638c
  %v1_10006394 = icmp slt i32 %v0_100062ac, 215
  %v3_10006394 = icmp eq i32 %v0_100062ac, 215
  store i1 %v1_10006394, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006394, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006394, label %dec_label_pc_10006290, label %dec_label_pc_10006394.dec_label_pc_1000639c.loopexit_crit_edge

dec_label_pc_10006394.dec_label_pc_1000639c.loopexit_crit_edge: ; preds = %dec_label_pc_10006394
  %v0_100063a0.pre.pre = load i32, i32* @r9, align 4
  br label %dec_label_pc_1000639c

dec_label_pc_1000639c:                            ; preds = %dec_label_pc_100066d8, %dec_label_pc_100066cc, %dec_label_pc_100066c0, %dec_label_pc_100066b4, %dec_label_pc_100066a8, %dec_label_pc_10006684, %dec_label_pc_10006670, %dec_label_pc_10006664, %dec_label_pc_10006650, %dec_label_pc_1000667c, %dec_label_pc_1000665c, %dec_label_pc_10006648, %dec_label_pc_10006394.dec_label_pc_1000639c.loopexit_crit_edge, %dec_label_pc_1000663c.dec_label_pc_1000639c_crit_edge
  %v0_100063a8 = phi i32 [ %v0_100063a815, %dec_label_pc_1000663c.dec_label_pc_1000639c_crit_edge ], [ %v1_100062a4, %dec_label_pc_10006394.dec_label_pc_1000639c.loopexit_crit_edge ], [ %v1_100062a4, %dec_label_pc_10006648 ], [ %v1_100062a4, %dec_label_pc_1000665c ], [ %v1_100062a4, %dec_label_pc_1000667c ], [ %v1_100062a4, %dec_label_pc_10006650 ], [ %v1_100062a4, %dec_label_pc_10006664 ], [ %v1_100062a4, %dec_label_pc_10006670 ], [ %v1_100062a4, %dec_label_pc_10006684 ], [ %v1_100062a4, %dec_label_pc_100066a8 ], [ %v1_100062a4, %dec_label_pc_100066b4 ], [ %v1_100062a4, %dec_label_pc_100066c0 ], [ %v1_100062a4, %dec_label_pc_100066cc ], [ %v1_100062a4, %dec_label_pc_100066d8 ]
  %v0_100063a0 = phi i32 [ %v0_1000663c, %dec_label_pc_1000663c.dec_label_pc_1000639c_crit_edge ], [ %v0_100063a0.pre.pre, %dec_label_pc_10006394.dec_label_pc_1000639c.loopexit_crit_edge ], [ %v0_10006648, %dec_label_pc_10006648 ], [ %v0_1000665c, %dec_label_pc_1000665c ], [ %v0_1000667c, %dec_label_pc_1000667c ], [ %v0_10006648, %dec_label_pc_10006650 ], [ %v0_1000665c, %dec_label_pc_10006664 ], [ %v0_10006670, %dec_label_pc_10006670 ], [ %v0_1000667c, %dec_label_pc_10006684 ], [ %v0_10006690, %dec_label_pc_100066a8 ], [ %v0_100066b4, %dec_label_pc_100066b4 ], [ %v0_100066c0, %dec_label_pc_100066c0 ], [ %v0_100066cc, %dec_label_pc_100066cc ], [ %v0_100066d8, %dec_label_pc_100066d8 ]
  %v0_1000639c = phi i32 [ %v0_1000639c.pre, %dec_label_pc_1000663c.dec_label_pc_1000639c_crit_edge ], [ %v0_100062ac, %dec_label_pc_10006394.dec_label_pc_1000639c.loopexit_crit_edge ], [ 172, %dec_label_pc_10006648 ], [ 100, %dec_label_pc_1000665c ], [ 198, %dec_label_pc_1000667c ], [ 172, %dec_label_pc_10006650 ], [ 100, %dec_label_pc_10006664 ], [ 169, %dec_label_pc_10006670 ], [ 198, %dec_label_pc_10006684 ], [ 106, %dec_label_pc_100066a8 ], [ 150, %dec_label_pc_100066b4 ], [ 49, %dec_label_pc_100066c0 ], [ 178, %dec_label_pc_100066cc ], [ 160, %dec_label_pc_100066d8 ]
  %v1_1000639c = mul i32 %v0_1000639c, 16777216
  %v1_100063a0 = mul i32 %v0_100063a0, 65536
  %v2_100063a4 = or i32 %v1_1000639c, %v1_100063a0
  %v1_100063a8 = mul i32 %v0_100063a8, 256
  %v1_100063ac = load i32, i32* %r10.global-to-local, align 4
  %v2_100063ac = or i32 %v2_100063a4, %v1_100063ac
  store i32 %v2_100063ac, i32* %r0.global-to-local, align 4
  %v0_100063b0 = load i32, i32* @r23, align 4
  store i32 %v0_100063b0, i32* @r3, align 4
  %v2_100063b4 = or i32 %v2_100063ac, %v1_100063a8
  store i32 %v2_100063b4, i32* %r9.global-to-local, align 4
  store i32 %v2_100063b4, i32* @global_var_1001b5a8.125, align 4
  %v0_100063c0 = load i32, i32* %r29.global-to-local, align 4
  %v1_100063c0 = trunc i32 %v0_100063c0 to i16
  store i16 %v1_100063c0, i16* bitcast (i32* @global_var_1001b5a2.126 to i16*), align 4
  %v2_100063c4 = call i32 @function_100043cc(i32 %v0_100063b0, i32 20)
  %v3_100063c4 = trunc i32 %v2_100063c4 to i16
  %v3_100063c8 = load i64, i64* %stack_var_-1916, align 8
  %v4_100063c8 = trunc i64 %v3_100063c8 to i32
  store i32 %v4_100063c8, i32* %r9.global-to-local, align 4
  store i16 %v3_100063c4, i16* bitcast (i32* @global_var_1001b5a2.126 to i16*), align 4
  %v4_100063d8 = mul nsw i64 %v3_100063c8, 1717986919
  %v5_100063d8 = udiv i64 %v4_100063d8, 4294967296
  %v6_100063d8 = trunc i64 %v5_100063d8 to i32
  %tmp = icmp slt i32 %v4_100063c8, 0
  %v1_100063dc = zext i1 %tmp to i32
  %v2_100063dc = ashr i32 %v4_100063c8, 31
  %v3_100063dc = and i32 %v2_100063dc, -2
  %v4_100063dc = or i32 %v3_100063dc, %v1_100063dc
  store i32 %v4_100063dc, i32* %r11.global-to-local, align 4
  %v1_100063e043 = udiv i64 %v4_100063d8, 17179869184
  %v1_100063e0 = trunc i64 %v1_100063e043 to i32
  %v2_100063e0 = ashr i32 %v6_100063d8, 31
  %v3_100063e0 = and i32 %v2_100063e0, -1073741824
  %v4_100063e0 = or i32 %v3_100063e0, %v1_100063e0
  %v2_100063e4 = sub nsw i32 %v4_100063e0, %v4_100063dc
  %v1_100063e8 = mul i32 %v2_100063e4, 10
  %v2_100063ec = icmp slt i32 %v4_100063c8, %v1_100063e8
  %v4_100063ec = icmp eq i32 %v4_100063c8, %v1_100063e8
  store i1 %v2_100063ec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100063ec, i1* %cr7_eq.global-to-local, align 1
  %.3 = select i1 %v4_100063ec, i16 2323, i16 23
  store i16 %.3, i16* @global_var_1001b5ae.109, align 2
  %v3_100063fc = load i32, i32* @global_var_1001b5a8.125, align 4
  store i32 %v3_100063fc, i32* %r0.global-to-local, align 4
  %v0_10006400 = load i32, i32* @r24, align 4
  store i32 %v0_10006400, i32* @r4, align 4
  %v0_10006404 = load i32, i32* %r29.global-to-local, align 4
  %v1_10006404 = trunc i32 %v0_10006404 to i16
  store i16 %v1_10006404, i16* bitcast (i32* @global_var_1001b5bc.127 to i16*), align 4
  store i32 20, i32* %r5.global-to-local, align 4
  store i32 %v3_100063fc, i32* @global_var_1001b5b0.128, align 4
  store i32 20, i32* %r6.global-to-local, align 4
  %v0_10006414 = load i32, i32* @r23, align 4
  store i32 %v0_10006414, i32* %r3.global-to-local, align 4
  %v4_10006418 = call i32 @function_10004430(i32 %v0_10006414, i32 %v0_10006400, i32 20, i32 20)
  %v5_10006418 = trunc i32 %v4_10006418 to i16
  store i32 268566528, i32* %r10.global-to-local, align 4
  store i16 %v5_10006418, i16* bitcast (i32* @global_var_1001b5bc.127 to i16*), align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_10006428 = load i32, i32* @global_var_1001b5a8.125, align 4
  store i32 %v3_10006428, i32* %r9.global-to-local, align 4
  %v0_1000642c = load i32, i32* @r23, align 4
  %v3_10006430 = load i16, i16* @global_var_1001b5ae.109, align 2
  %v4_10006430 = zext i16 %v3_10006430 to i32
  store i32 %v4_10006430, i32* %r11.global-to-local, align 4
  store i32 40, i32* %r5.global-to-local, align 4
  %v3_10006438 = load i32, i32* @global_var_1001b52c.99, align 4
  store i32 %v3_10006438, i32* %r3.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v1_10006440 = ptrtoint i32* %stack_var_-1888 to i32
  store i32 %v1_10006440, i32* %r7.global-to-local, align 4
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 2, i32* %stack_var_-1888, align 4
  store i32 268461144, i32* @lr, align 4
  %v6_10006454 = call i32 @function_10009088(i32 %v3_10006438, i32 %v0_1000642c, i32 40, i32 16384, i32 %v1_10006440, i32 16)
  store i32 %v6_10006454, i32* %r3.global-to-local, align 4
  %v3_10006458 = load i64, i64* %stack_var_-1916, align 8
  %v4_10006458 = trunc i64 %v3_10006458 to i32
  %v1_1000645c = add i32 %v4_10006458, 1
  store i32 %v1_1000645c, i32* %r9.global-to-local, align 4
  %v1_10006460 = icmp slt i32 %v1_1000645c, 383
  %v3_10006460 = icmp eq i32 %v1_1000645c, 383
  store i1 %v1_10006460, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006460, i1* %cr7_eq.global-to-local, align 1
  %v5_10006464 = sext i32 %v1_1000645c to i64
  store i64 %v5_10006464, i64* %stack_var_-1916, align 8
  %tmp104 = icmp slt i32 %v1_1000645c, 384
  br i1 %tmp104, label %dec_label_pc_1000639c.dec_label_pc_1000626c_crit_edge, label %dec_label_pc_1000646c

dec_label_pc_1000639c.dec_label_pc_1000626c_crit_edge: ; preds = %dec_label_pc_1000639c
  %v0_1000626c.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000626c

dec_label_pc_1000646c:                            ; preds = %dec_label_pc_1000639c
  %v0_1000646c = load i32, i32* @r31, align 4
  store i32 %v0_1000646c, i32* @r25, align 4
  br label %dec_label_pc_10006470

dec_label_pc_10006470:                            ; preds = %dec_label_pc_1000624c, %dec_label_pc_1000646c
  %v0_10006470 = call i32 @function_10008b34()
  store i32 %v0_10006470, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 %v0_10006470, i32* %r26.global-to-local, align 4
  %v2_10006488 = ptrtoint i32* %stack_var_-1616 to i32
  %v4_100064d4 = zext i8 %tmp56 to i32
  %v1_100064d8 = icmp ult i8 %tmp56, 6
  %v3_100064d8 = icmp eq i8 %tmp56, 6
  %v4_100064e0 = zext i16 %tmp55 to i32
  %v1_100064e8 = icmp ult i16 %tmp55, 23
  %v3_100064e8 = icmp eq i16 %tmp55, 23
  %v4_100064f8 = zext i16 %tmp54 to i32
  %v1_10006508 = and i32 %tmp53, 131072
  %v3_10006508 = icmp eq i32 %v1_10006508, 0
  %v1_10006530 = add i32 %tmp52, -1
  %v2_10006534 = icmp slt i32 %v1_10006530, %tmp51
  %v4_10006534 = icmp eq i32 %v1_10006530, %tmp51
  %v1_10006510 = and i32 %tmp53, 1048576
  %v3_10006510 = icmp eq i32 %v1_10006510, 0
  %v1_10006518 = and i32 %tmp53, 262144
  %v3_10006518 = icmp eq i32 %v1_10006518, 0
  %v1_10006520 = and i32 %tmp53, 65536
  %v3_10006520 = icmp eq i32 %v1_10006520, 0
  %v1_100064f0 = icmp ult i16 %tmp55, 2323
  %v3_100064f0 = icmp eq i16 %tmp55, 2323
  br label %dec_label_pc_1000647c

dec_label_pc_1000647c:                            ; preds = %dec_label_pc_10006528, %dec_label_pc_10006520, %dec_label_pc_10006518, %dec_label_pc_100064f8, %dec_label_pc_100064f0, %dec_label_pc_100064d4, %dec_label_pc_100064c0, %dec_label_pc_10006510, %dec_label_pc_10006504, %dec_label_pc_100064b8, %dec_label_pc_10007618, %dec_label_pc_10006470
  %v1_10006484 = phi i32 [ %v0_10006470, %dec_label_pc_10006470 ], [ %v1_10006484.pre.pre, %dec_label_pc_10007618 ], [ %v0_100064ac, %dec_label_pc_100064b8 ], [ %v0_100064ac, %dec_label_pc_10006504 ], [ %v0_100064ac, %dec_label_pc_10006510 ], [ %v0_100064ac, %dec_label_pc_100064c0 ], [ %v0_100064ac, %dec_label_pc_100064d4 ], [ %v0_100064ac, %dec_label_pc_100064f0 ], [ %v0_100064ac, %dec_label_pc_100064f8 ], [ %v0_100064ac, %dec_label_pc_10006518 ], [ %v0_100064ac, %dec_label_pc_10006520 ], [ %v0_100064ac, %dec_label_pc_10006528 ]
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v2_10006484 = inttoptr i32 %v1_10006484 to i32*
  store i32 0, i32* %v2_10006484, align 4
  store i32 1514, i32* %r5.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v3_10006494 = load i32, i32* @global_var_1001b52c.99, align 4
  store i32 %v3_10006494, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 268461220, i32* @lr, align 4
  %v6_100064a0 = call i32 @function_10009010(i32 %v3_10006494, i32 %v2_10006488, i32 1514, i32 16384, i32 0, i32 0)
  store i32 %v6_100064a0, i32* %r3.global-to-local, align 4
  %tmp105 = icmp slt i32 %v6_100064a0, 1
  br i1 %tmp105, label %dec_label_pc_100066f0, label %dec_label_pc_100064ac

dec_label_pc_100064ac:                            ; preds = %dec_label_pc_1000647c
  %v0_100064ac = load i32, i32* %r26.global-to-local, align 4
  %v1_100064ac = inttoptr i32 %v0_100064ac to i32*
  %v2_100064ac = load i32, i32* %v1_100064ac, align 4
  store i32 %v2_100064ac, i32* %r0.global-to-local, align 4
  %v1_100064b0 = icmp slt i32 %v2_100064ac, 11
  %v3_100064b0 = icmp eq i32 %v2_100064ac, 11
  store i1 %v1_100064b0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100064b0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100064b0, label %dec_label_pc_100066f0, label %dec_label_pc_100064b8

dec_label_pc_100064b8:                            ; preds = %dec_label_pc_100064ac
  %v1_100064b8 = icmp ult i32 %v6_100064a0, 39
  %v3_100064b8 = icmp eq i32 %v6_100064a0, 39
  store i1 %v1_100064b8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100064b8, i1* %cr7_eq.global-to-local, align 1
  %tmp106 = icmp ult i32 %v6_100064a0, 40
  br i1 %tmp106, label %dec_label_pc_1000647c, label %dec_label_pc_100064c0

dec_label_pc_100064c0:                            ; preds = %dec_label_pc_100064b8
  %v3_100064c4 = load i32, i32* @global_var_1001b500.16, align 4
  store i32 %v3_100064c4, i32* %r0.global-to-local, align 4
  store i32 %tmp57, i32* %r9.global-to-local, align 4
  %v2_100064cc = icmp slt i32 %tmp57, %v3_100064c4
  %v4_100064cc = icmp eq i32 %tmp57, %v3_100064c4
  store i1 %v2_100064cc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100064cc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100064cc, label %dec_label_pc_100064d4, label %dec_label_pc_1000647c

dec_label_pc_100064d4:                            ; preds = %dec_label_pc_100064c0
  store i32 %v4_100064d4, i32* %r0.global-to-local, align 4
  store i1 %v1_100064d8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100064d8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100064d8, label %dec_label_pc_100064e0, label %dec_label_pc_1000647c

dec_label_pc_100064e0:                            ; preds = %dec_label_pc_100064d4
  store i32 %v4_100064e0, i32* %r8.global-to-local, align 4
  store i32 %v4_100064e0, i32* %r0.global-to-local, align 4
  store i1 %v1_100064e8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100064e8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100064e8, label %dec_label_pc_100064f8, label %dec_label_pc_100064f0

dec_label_pc_100064f0:                            ; preds = %dec_label_pc_100064e0
  store i1 %v1_100064f0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100064f0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100064f0, label %dec_label_pc_100064f8, label %dec_label_pc_1000647c

dec_label_pc_100064f8:                            ; preds = %dec_label_pc_100064f0, %dec_label_pc_100064e0
  store i32 %v4_100064f8, i32* %r0.global-to-local, align 4
  %v1_100064fc = load i32, i32* @r22, align 4
  %v2_100064fc = icmp slt i32 %v4_100064f8, %v1_100064fc
  %v4_100064fc = icmp eq i32 %v4_100064f8, %v1_100064fc
  store i1 %v2_100064fc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100064fc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100064fc, label %dec_label_pc_10006504, label %dec_label_pc_1000647c

dec_label_pc_10006504:                            ; preds = %dec_label_pc_100064f8
  store i32 %tmp53, i32* %r0.global-to-local, align 4
  store i32 %v1_10006508, i32* %r10.global-to-local, align 4
  br i1 %v3_10006508, label %dec_label_pc_1000647c, label %dec_label_pc_10006510

dec_label_pc_10006510:                            ; preds = %dec_label_pc_10006504
  store i32 %v1_10006510, i32* %r11.global-to-local, align 4
  br i1 %v3_10006510, label %dec_label_pc_1000647c, label %dec_label_pc_10006518

dec_label_pc_10006518:                            ; preds = %dec_label_pc_10006510
  store i32 %v1_10006518, i32* %r9.global-to-local, align 4
  br i1 %v3_10006518, label %dec_label_pc_10006520, label %dec_label_pc_1000647c

dec_label_pc_10006520:                            ; preds = %dec_label_pc_10006518
  store i32 %v1_10006520, i32* %r10.global-to-local, align 4
  br i1 %v3_10006520, label %dec_label_pc_10006528, label %dec_label_pc_1000647c

dec_label_pc_10006528:                            ; preds = %dec_label_pc_10006520
  store i32 %tmp52, i32* %r9.global-to-local, align 4
  store i32 %tmp51, i32* %r0.global-to-local, align 4
  store i32 %v1_10006530, i32* %r10.global-to-local, align 4
  store i1 %v2_10006534, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006534, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10006534, label %dec_label_pc_1000653c, label %dec_label_pc_1000647c

dec_label_pc_1000653c:                            ; preds = %dec_label_pc_10006528
  %v0_1000653c = load i32, i32* @r31, align 4
  %v1_1000653c = icmp slt i32 %v0_1000653c, 255
  %v2_1000653c = icmp sgt i32 %v0_1000653c, 255
  %v3_1000653c = icmp eq i32 %v0_1000653c, 255
  store i1 %v1_1000653c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000653c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000653c, label %dec_label_pc_100066f0, label %dec_label_pc_10006544

dec_label_pc_10006544:                            ; preds = %dec_label_pc_1000653c
  %v3_1000654c = load i32, i32* @global_var_1001b528.98, align 4
  store i32 %v3_1000654c, i32* %r11.global-to-local, align 4
  %v1_10006550 = mul i32 %v0_1000653c, 256
  store i32 %v1_10006550, i32* %r9.global-to-local, align 4
  %v2_10006554 = mul i32 %v0_1000653c, 288
  store i32 %v2_10006554, i32* %r0.global-to-local, align 4
  %v2_10006558 = add i32 %v3_1000654c, %v2_10006554
  store i32 %v2_10006558, i32* @r3, align 4
  %v1_1000655c = add i32 %v2_10006558, 12
  %v2_1000655c = inttoptr i32 %v1_1000655c to i32*
  %v3_1000655c = load i32, i32* %v2_1000655c, align 4
  store i32 %v3_1000655c, i32* %r9.global-to-local, align 4
  %v1_10006560 = icmp slt i32 %v3_1000655c, 0
  %v3_10006560 = icmp eq i32 %v3_1000655c, 0
  store i1 %v1_10006560, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006560, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006560, label %dec_label_pc_10007614, label %dec_label_pc_10006568

dec_label_pc_10006568:                            ; preds = %dec_label_pc_10006544
  %v1_10006568 = sub i32 256, %v0_1000653c
  store i32 %v1_10006568, i32* %r11.global-to-local, align 4
  store i32 %v0_1000653c, i32* %r29.global-to-local, align 4
  store i32 %v1_10006568, i32* %ctr.global-to-local, align 4
  %v1_10006574 = add i32 %v2_10006558, 288
  store i32 %v1_10006574, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10006578

dec_label_pc_10006578:                            ; preds = %dec_label_pc_10006580, %dec_label_pc_10006568
  %v0_10006580 = phi i32 [ %v1_10006588, %dec_label_pc_10006580 ], [ %v1_10006574, %dec_label_pc_10006568 ]
  %v0_1000657c = phi i32 [ %v1_1000657c, %dec_label_pc_10006580 ], [ %v1_10006568, %dec_label_pc_10006568 ]
  %v0_10006578 = phi i32 [ %v1_10006578, %dec_label_pc_10006580 ], [ %v0_1000653c, %dec_label_pc_10006568 ]
  %v1_10006578 = add i32 %v0_10006578, 1
  store i32 %v1_10006578, i32* @r29, align 4
  %v1_1000657c = add i32 %v0_1000657c, -1
  store i32 %v1_1000657c, i32* %ctr.global-to-local, align 4
  %v2_1000657c = icmp eq i32 %v1_1000657c, 0
  br i1 %v2_1000657c, label %dec_label_pc_100066f0, label %dec_label_pc_10006580

dec_label_pc_10006580:                            ; preds = %dec_label_pc_10006578
  %v1_10006580 = add i32 %v0_10006580, 12
  %v2_10006580 = inttoptr i32 %v1_10006580 to i32*
  %v3_10006580 = load i32, i32* %v2_10006580, align 4
  store i32 %v3_10006580, i32* %r0.global-to-local, align 4
  store i32 %v0_10006580, i32* @r3, align 4
  %v1_10006588 = add i32 %v0_10006580, 288
  store i32 %v1_10006588, i32* %r9.global-to-local, align 4
  %v1_1000658c = icmp slt i32 %v3_10006580, 0
  %v3_1000658c = icmp eq i32 %v3_10006580, 0
  store i1 %v1_1000658c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000658c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000658c, label %dec_label_pc_10007618, label %dec_label_pc_10006578

dec_label_pc_10006634:                            ; preds = %dec_label_pc_10005ffc, %dec_label_pc_10007604
  %v0_10006638 = call i32 @function_10009b78()
  store i32 %v0_10006638, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000663c

dec_label_pc_1000663c:                            ; preds = %dec_label_pc_100062dc, %dec_label_pc_10006634
  %v0_100063a815 = phi i32 [ %v0_10006638, %dec_label_pc_10006634 ], [ %v1_100062a4, %dec_label_pc_100062dc ]
  %v0_1000663c = load i32, i32* @r9, align 4
  %v1_1000663c = icmp slt i32 %v0_1000663c, 168
  %v3_1000663c = icmp eq i32 %v0_1000663c, 168
  store i1 %v1_1000663c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000663c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000663c, label %dec_label_pc_10006290.preheader, label %dec_label_pc_1000663c.dec_label_pc_1000639c_crit_edge

dec_label_pc_1000663c.dec_label_pc_1000639c_crit_edge: ; preds = %dec_label_pc_1000663c
  %v0_1000639c.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000639c

dec_label_pc_10006648:                            ; preds = %dec_label_pc_100062e4
  %v0_10006648 = load i32, i32* @r9, align 4
  %v1_10006648 = icmp ult i32 %v0_10006648, 15
  %v3_10006648 = icmp eq i32 %v0_10006648, 15
  store i1 %v1_10006648, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006648, i1* %cr7_eq.global-to-local, align 1
  %tmp107 = icmp ult i32 %v0_10006648, 16
  br i1 %tmp107, label %dec_label_pc_1000639c, label %dec_label_pc_10006650

dec_label_pc_10006650:                            ; preds = %dec_label_pc_10006648
  %v1_10006650 = icmp ult i32 %v0_10006648, 31
  %v3_10006650 = icmp eq i32 %v0_10006648, 31
  store i1 %v1_10006650, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006650, i1* %cr7_eq.global-to-local, align 1
  %tmp108 = icmp ult i32 %v0_10006648, 32
  br i1 %tmp108, label %dec_label_pc_10006290, label %dec_label_pc_1000639c

dec_label_pc_1000665c:                            ; preds = %dec_label_pc_100062ec
  %v0_1000665c = load i32, i32* @r9, align 4
  %v1_1000665c = icmp ult i32 %v0_1000665c, 63
  %v3_1000665c = icmp eq i32 %v0_1000665c, 63
  store i1 %v1_1000665c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000665c, i1* %cr7_eq.global-to-local, align 1
  %tmp109 = icmp ult i32 %v0_1000665c, 64
  br i1 %tmp109, label %dec_label_pc_1000639c, label %dec_label_pc_10006664

dec_label_pc_10006664:                            ; preds = %dec_label_pc_1000665c
  %v1_10006664 = icmp ult i32 %v0_1000665c, 126
  %v3_10006664 = icmp eq i32 %v0_1000665c, 126
  store i1 %v1_10006664, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006664, i1* %cr7_eq.global-to-local, align 1
  %tmp110 = icmp ult i32 %v0_1000665c, 127
  br i1 %tmp110, label %dec_label_pc_10006290, label %dec_label_pc_1000639c

dec_label_pc_10006670:                            ; preds = %dec_label_pc_100062f4
  %v0_10006670 = load i32, i32* @r9, align 4
  %v1_10006670 = icmp slt i32 %v0_10006670, 255
  %v3_10006670 = icmp eq i32 %v0_10006670, 255
  store i1 %v1_10006670, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006670, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006670, label %dec_label_pc_10006290, label %dec_label_pc_1000639c

dec_label_pc_1000667c:                            ; preds = %dec_label_pc_100062fc
  %v0_1000667c = load i32, i32* @r9, align 4
  %v1_1000667c = icmp ult i32 %v0_1000667c, 17
  %v3_1000667c = icmp eq i32 %v0_1000667c, 17
  store i1 %v1_1000667c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000667c, i1* %cr7_eq.global-to-local, align 1
  %tmp111 = icmp ult i32 %v0_1000667c, 18
  br i1 %tmp111, label %dec_label_pc_1000639c, label %dec_label_pc_10006684

dec_label_pc_10006684:                            ; preds = %dec_label_pc_1000667c
  %v1_10006684 = icmp eq i32 %v0_1000667c, 18
  %v3_10006684 = icmp eq i32 %v0_1000667c, 19
  store i1 %v1_10006684, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006684, i1* %cr7_eq.global-to-local, align 1
  %tmp112 = icmp ult i32 %v0_1000667c, 20
  br i1 %tmp112, label %dec_label_pc_10006290, label %dec_label_pc_1000639c

dec_label_pc_10006690:                            ; preds = %dec_label_pc_1000630c
  %v0_10006690 = load i32, i32* @r9, align 4
  %v1_10006690 = icmp slt i32 %v0_10006690, 186
  %v3_10006690 = icmp eq i32 %v0_10006690, 186
  store i1 %v1_10006690, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006690, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006690, label %dec_label_pc_10006290, label %dec_label_pc_10006698

dec_label_pc_10006698:                            ; preds = %dec_label_pc_10006690
  %v1_10006698 = icmp slt i32 %v0_10006690, 187
  %v3_10006698 = icmp eq i32 %v0_10006690, 187
  store i1 %v1_10006698, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006698, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006698, label %dec_label_pc_10006290, label %dec_label_pc_100066a0

dec_label_pc_100066a0:                            ; preds = %dec_label_pc_10006698
  %v1_100066a0 = icmp slt i32 %v0_10006690, 185
  %v3_100066a0 = icmp eq i32 %v0_10006690, 185
  store i1 %v1_100066a0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100066a0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100066a0, label %dec_label_pc_10006290, label %dec_label_pc_100066a8

dec_label_pc_100066a8:                            ; preds = %dec_label_pc_100066a0
  %v1_100066a8 = icmp slt i32 %v0_10006690, 184
  %v3_100066a8 = icmp eq i32 %v0_10006690, 184
  store i1 %v1_100066a8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100066a8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100066a8, label %dec_label_pc_10006290, label %dec_label_pc_1000639c

dec_label_pc_100066b4:                            ; preds = %dec_label_pc_10006314
  %v0_100066b4 = load i32, i32* @r9, align 4
  %v1_100066b4 = icmp slt i32 %v0_100066b4, 31
  %v3_100066b4 = icmp eq i32 %v0_100066b4, 31
  store i1 %v1_100066b4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100066b4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100066b4, label %dec_label_pc_10006290, label %dec_label_pc_1000639c

dec_label_pc_100066c0:                            ; preds = %dec_label_pc_1000631c
  %v0_100066c0 = load i32, i32* @r9, align 4
  %v1_100066c0 = icmp slt i32 %v0_100066c0, 51
  %v3_100066c0 = icmp eq i32 %v0_100066c0, 51
  store i1 %v1_100066c0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100066c0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100066c0, label %dec_label_pc_10006290, label %dec_label_pc_1000639c

dec_label_pc_100066cc:                            ; preds = %dec_label_pc_10006324
  %v0_100066cc = load i32, i32* @r9, align 4
  %v1_100066cc = icmp slt i32 %v0_100066cc, 62
  %v3_100066cc = icmp eq i32 %v0_100066cc, 62
  store i1 %v1_100066cc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100066cc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100066cc, label %dec_label_pc_10006290, label %dec_label_pc_1000639c

dec_label_pc_100066d8:                            ; preds = %dec_label_pc_1000632c
  %v0_100066d8 = load i32, i32* @r9, align 4
  %v1_100066d8 = icmp slt i32 %v0_100066d8, 13
  %v3_100066d8 = icmp eq i32 %v0_100066d8, 13
  store i1 %v1_100066d8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100066d8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100066d8, label %dec_label_pc_10006290, label %dec_label_pc_1000639c

dec_label_pc_100066f0:                            ; preds = %dec_label_pc_1000653c, %dec_label_pc_100064ac, %dec_label_pc_1000647c, %dec_label_pc_10006578
  store i32 32, i32* %r10.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 64, i32* %r11.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v2_10006708133 = load i32, i32* @r1, align 4
  %v3_10006708134 = add i32 %v2_10006708133, 64
  %v4_10006708135 = inttoptr i32 %v3_10006708134 to i32*
  store i32 0, i32* %v4_10006708135, align 4
  %v0_1000670c136 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000670c137 = add i32 %v0_1000670c136, -1
  store i32 %v1_1000670c137, i32* %ctr.global-to-local, align 4
  %v2_1000670c138 = icmp eq i32 %v1_1000670c137, 0
  br i1 %v2_1000670c138, label %dec_label_pc_10006710, label %dec_label_pc_10006700.dec_label_pc_10006700_crit_edge

dec_label_pc_10006700.dec_label_pc_10006700_crit_edge: ; preds = %dec_label_pc_100066f0, %dec_label_pc_10006700.dec_label_pc_10006700_crit_edge
  %v0_10006700.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10006708.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_10006700 = add i32 %v0_10006700.pre, 64
  store i32 %v1_10006700, i32* %r11.global-to-local, align 4
  %v1_10006704 = add i32 %v0_10006700.pre, 4
  store i32 %v1_10006704, i32* %r9.global-to-local, align 4
  %v2_10006708 = load i32, i32* @r1, align 4
  %v3_10006708 = add i32 %v2_10006708, %v1_10006700
  %v4_10006708 = inttoptr i32 %v3_10006708 to i32*
  store i32 %v0_10006708.pre, i32* %v4_10006708, align 4
  %v0_1000670c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000670c = add i32 %v0_1000670c, -1
  store i32 %v1_1000670c, i32* %ctr.global-to-local, align 4
  %v2_1000670c = icmp eq i32 %v1_1000670c, 0
  br i1 %v2_1000670c, label %dec_label_pc_10006710, label %dec_label_pc_10006700.dec_label_pc_10006700_crit_edge

dec_label_pc_10006710:                            ; preds = %dec_label_pc_10006700.dec_label_pc_10006700_crit_edge, %dec_label_pc_100066f0
  store i32 32, i32* %r10.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 192, i32* %r11.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v2_10006728127 = load i32, i32* @r1, align 4
  %v3_10006728128 = add i32 %v2_10006728127, 192
  %v4_10006728129 = inttoptr i32 %v3_10006728128 to i32*
  store i32 0, i32* %v4_10006728129, align 4
  %v0_1000672c130 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000672c131 = add i32 %v0_1000672c130, -1
  store i32 %v1_1000672c131, i32* %ctr.global-to-local, align 4
  %v2_1000672c132 = icmp eq i32 %v1_1000672c131, 0
  br i1 %v2_1000672c132, label %dec_label_pc_10006730, label %dec_label_pc_10006720.dec_label_pc_10006720_crit_edge

dec_label_pc_10006720.dec_label_pc_10006720_crit_edge: ; preds = %dec_label_pc_10006710, %dec_label_pc_10006720.dec_label_pc_10006720_crit_edge
  %v0_10006720.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10006728.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_10006720 = add i32 %v0_10006720.pre, 192
  store i32 %v1_10006720, i32* %r11.global-to-local, align 4
  %v1_10006724 = add i32 %v0_10006720.pre, 4
  store i32 %v1_10006724, i32* %r9.global-to-local, align 4
  %v2_10006728 = load i32, i32* @r1, align 4
  %v3_10006728 = add i32 %v2_10006728, %v1_10006720
  %v4_10006728 = inttoptr i32 %v3_10006728 to i32*
  store i32 %v0_10006728.pre, i32* %v4_10006728, align 4
  %v0_1000672c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000672c = add i32 %v0_1000672c, -1
  store i32 %v1_1000672c, i32* %ctr.global-to-local, align 4
  %v2_1000672c = icmp eq i32 %v1_1000672c, 0
  br i1 %v2_1000672c, label %dec_label_pc_10006730, label %dec_label_pc_10006720.dec_label_pc_10006720_crit_edge

dec_label_pc_10006730:                            ; preds = %dec_label_pc_10006720.dec_label_pc_10006720_crit_edge, %dec_label_pc_10006710
  %v0_10006730 = load i32, i32* %r0.global-to-local, align 4
  %v5_10006730 = sext i32 %v0_10006730 to i64
  store i64 %v5_10006730, i64* %stack_var_-1916, align 8
  store i32 0, i32* %r30.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  %v2_10006864 = ptrtoint i32* %stack_var_-1872 to i32
  %v2_10006868 = ptrtoint i32* %stack_var_-1744 to i32
  %v2_10006870 = ptrtoint i32* %stack_var_-1908 to i32
  %v2_1000745c = ptrtoint i32* %stack_var_-1920 to i32
  %v2_10007460 = ptrtoint i32* %stack_var_-1912 to i32
  br label %dec_label_pc_100067ac

dec_label_pc_1000674c:                            ; preds = %dec_label_pc_100067ac
  %v3_1000674c = load i32, i32* @global_var_1001b524.91, align 4
  store i32 %v3_1000674c, i32* %r0.global-to-local, align 4
  %v1_10006750 = add i32 %v2_100067c4, 8
  %v2_10006750 = inttoptr i32 %v1_10006750 to i32*
  %v3_10006750 = load i32, i32* %v2_10006750, align 4
  store i32 %v3_10006750, i32* %r9.global-to-local, align 4
  %v2_10006754 = sub i32 %v3_1000674c, %v3_10006750
  store i32 %v2_10006754, i32* %r0.global-to-local, align 4
  %v2_10006758 = icmp ult i32 %v2_10006754, 30
  %v3_10006758 = icmp ugt i32 %v2_10006754, 30
  %v4_10006758 = icmp eq i32 %v2_10006754, 30
  store i1 %v2_10006758, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006758, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006758, label %dec_label_pc_100067f4, label %dec_label_pc_10006760

dec_label_pc_10006760:                            ; preds = %dec_label_pc_100067dc, %dec_label_pc_1000674c
  %v1_10006760 = icmp slt i32 %v3_100067c8, 1
  store i1 %v1_10006760, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100067cc, i1* %cr7_eq.global-to-local, align 1
  %v1_100069b8 = add i32 %v2_100067c4, 4
  %v2_100069b8 = inttoptr i32 %v1_100069b8 to i32*
  %v3_100069b8 = load i32, i32* %v2_100069b8, align 4
  store i32 %v3_100069b8, i32* %r3.global-to-local, align 4
  br i1 %v3_100067cc, label %dec_label_pc_100069b8, label %dec_label_pc_10006768

dec_label_pc_10006768:                            ; preds = %dec_label_pc_10006760
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10006770 = call i32 @__asm_rlwinm(i32 %v3_100069b8, i32 29, i32 3, i32 29)
  %v0_10006774 = load i32, i32* %r30.global-to-local, align 4
  %v2_10006774 = icmp slt i32 %v0_10006774, %v3_100069b8
  %v4_10006774 = icmp eq i32 %v0_10006774, %v3_100069b8
  store i1 %v2_10006774, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006774, i1* %cr7_eq.global-to-local, align 1
  %v1_10006778 = load i32, i32* @r14, align 4
  %v2_10006778 = add i32 %v1_10006778, %v1_10006770
  store i32 %v2_10006778, i32* %r11.global-to-local, align 4
  %v1_1000677c = urem i32 %v3_100069b8, 32
  store i32 %v1_1000677c, i32* %r10.global-to-local, align 4
  %v1_10006780 = add i32 %v2_10006778, 56
  %v2_10006780 = inttoptr i32 %v1_10006780 to i32*
  %v3_10006780 = load i32, i32* %v2_10006780, align 4
  %v0_10006784 = load i32, i32* %r0.global-to-local, align 4
  %v3_10006784 = shl i32 %v0_10006784, %v1_1000677c
  store i32 %v3_10006784, i32* %r0.global-to-local, align 4
  %v2_10006788 = or i32 %v3_10006784, %v3_10006780
  store i32 %v2_10006788, i32* %r9.global-to-local, align 4
  store i32 %v2_10006788, i32* %v2_10006780, align 4
  br i1 %v2_10006774, label %dec_label_pc_10006794, label %dec_label_pc_10006798

dec_label_pc_10006794:                            ; preds = %dec_label_pc_10006768
  store i32 %v3_100069b8, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10006798

dec_label_pc_10006798:                            ; preds = %dec_label_pc_100069b8, %dec_label_pc_10006768, %dec_label_pc_100067d4, %dec_label_pc_100069e0, %dec_label_pc_100069ac, %dec_label_pc_10006794
  %v3_10006798 = load i64, i64* %stack_var_-1916, align 8
  %v4_10006798 = trunc i64 %v3_10006798 to i32
  store i32 %v4_10006798, i32* %r9.global-to-local, align 4
  %v1_1000679c = add i32 %v4_10006798, 1
  store i32 %v1_1000679c, i32* %r0.global-to-local, align 4
  %v1_100067a0 = icmp slt i32 %v1_1000679c, 255
  %v2_100067a0 = icmp sgt i32 %v1_1000679c, 255
  %v3_100067a0 = icmp eq i32 %v1_1000679c, 255
  store i1 %v1_100067a0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100067a0, i1* %cr7_eq.global-to-local, align 1
  %v5_100067a4 = sext i32 %v1_1000679c to i64
  store i64 %v5_100067a4, i64* %stack_var_-1916, align 8
  br i1 %v2_100067a0, label %dec_label_pc_10006844, label %dec_label_pc_100067ac

dec_label_pc_100067ac:                            ; preds = %dec_label_pc_10006828, %dec_label_pc_10006798, %dec_label_pc_10006730
  %v0_100067b0 = phi i32 [ 0, %dec_label_pc_10006730 ], [ %v1_1000679c, %dec_label_pc_10006798 ], [ %v1_10006834, %dec_label_pc_10006828 ]
  store i32 268566528, i32* %r10.global-to-local, align 4
  %v3_100067b4 = load i32, i32* @global_var_1001b528.98, align 4
  store i32 %v3_100067b4, i32* %r9.global-to-local, align 4
  %v2_100067bc = mul i32 %v0_100067b0, 288
  store i32 %v2_100067bc, i32* %r0.global-to-local, align 4
  store i32 30, i32* %r11.global-to-local, align 4
  %v2_100067c4 = add i32 %v3_100067b4, %v2_100067bc
  store i32 %v2_100067c4, i32* @r29, align 4
  %v1_100067c8 = add i32 %v2_100067c4, 12
  %v2_100067c8 = inttoptr i32 %v1_100067c8 to i32*
  %v3_100067c8 = load i32, i32* %v2_100067c8, align 4
  store i32 %v3_100067c8, i32* %r10.global-to-local, align 4
  %v1_100067cc = icmp eq i32 %v3_100067c8, 0
  %v2_100067cc = icmp ugt i32 %v3_100067c8, 1
  %v3_100067cc = icmp eq i32 %v3_100067c8, 1
  store i1 %v1_100067cc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100067cc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100067cc, label %dec_label_pc_1000674c, label %dec_label_pc_100067d4

dec_label_pc_100067d4:                            ; preds = %dec_label_pc_100067ac
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v1_100067cc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_100067cc, label %dec_label_pc_10006798, label %dec_label_pc_100067dc

dec_label_pc_100067dc:                            ; preds = %dec_label_pc_100067d4
  %v3_100067dc = load i32, i32* @global_var_1001b524.91, align 4
  store i32 %v3_100067dc, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r11.global-to-local, align 4
  %v1_100067e4 = add i32 %v2_100067c4, 8
  %v2_100067e4 = inttoptr i32 %v1_100067e4 to i32*
  %v3_100067e4 = load i32, i32* %v2_100067e4, align 4
  store i32 %v3_100067e4, i32* %r9.global-to-local, align 4
  %v2_100067e8 = sub i32 %v3_100067dc, %v3_100067e4
  store i32 %v2_100067e8, i32* %r0.global-to-local, align 4
  %v2_100067ec = icmp ult i32 %v2_100067e8, 5
  %v3_100067ec = icmp ugt i32 %v2_100067e8, 5
  %v4_100067ec = icmp eq i32 %v2_100067e8, 5
  store i1 %v2_100067ec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100067ec, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100067ec, label %dec_label_pc_100067f4, label %dec_label_pc_10006760

dec_label_pc_100067f4:                            ; preds = %dec_label_pc_100067dc, %dec_label_pc_1000674c
  %v1_100067f4 = add i32 %v2_100067c4, 4
  %v2_100067f4 = inttoptr i32 %v1_100067f4 to i32*
  %v3_100067f4 = load i32, i32* %v2_100067f4, align 4
  store i32 %v3_100067f4, i32* %r3.global-to-local, align 4
  store i32 268462076, i32* @lr, align 4
  %v0_100067f8 = call i32 @function_10008418()
  store i32 %v0_100067f8, i32* %r3.global-to-local, align 4
  %v0_100067fc = load i32, i32* @r29, align 4
  %v1_100067fc = add i32 %v0_100067fc, 12
  %v2_100067fc = inttoptr i32 %v1_100067fc to i32*
  %v3_100067fc = load i32, i32* %v2_100067fc, align 4
  store i32 %v3_100067fc, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  %v1_10006804 = icmp ult i32 %v3_100067fc, 2
  %v3_10006804 = icmp eq i32 %v3_100067fc, 2
  store i1 %v1_10006804, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006804, i1* %cr7_eq.global-to-local, align 1
  %v2_10006808 = add i32 %v0_100067fc, 4
  %v3_10006808 = inttoptr i32 %v2_10006808 to i32*
  store i32 -1, i32* %v3_10006808, align 4
  %tmp114 = icmp ult i32 %v3_100067fc, 3
  br i1 %tmp114, label %dec_label_pc_100069ac, label %dec_label_pc_10006810

dec_label_pc_10006810:                            ; preds = %dec_label_pc_100067f4
  %v0_10006810 = load i32, i32* @r29, align 4
  %v1_10006810 = add i32 %v0_10006810, 284
  %v2_10006810 = inttoptr i32 %v1_10006810 to i8*
  %v3_10006810 = load i8, i8* %v2_10006810, align 1
  %v4_10006810 = zext i8 %v3_10006810 to i32
  %v1_10006814 = add nuw nsw i32 %v4_10006810, 1
  %v1_10006818 = urem i32 %v1_10006814, 256
  store i32 %v1_10006818, i32* %r9.global-to-local, align 4
  %v1_1000681c = icmp ult i32 %v1_10006818, 10
  %v3_1000681c = icmp eq i32 %v1_10006818, 10
  store i1 %v1_1000681c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000681c, i1* %cr7_eq.global-to-local, align 1
  %v1_10006820 = trunc i32 %v1_10006814 to i8
  store i8 %v1_10006820, i8* %v2_10006810, align 1
  %v0_10006824 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10006824, label %dec_label_pc_100069ac, label %dec_label_pc_10006828

dec_label_pc_10006828:                            ; preds = %dec_label_pc_10006810
  %v0_10006828 = load i32, i32* @r29, align 4
  store i32 %v0_10006828, i32* @r3, align 4
  store i32 268462128, i32* @lr, align 4
  %v0_1000682c = call i32 @function_10005c08()
  store i32 %v0_1000682c, i32* %r3.global-to-local, align 4
  %v3_10006830 = load i64, i64* %stack_var_-1916, align 8
  %v4_10006830 = trunc i64 %v3_10006830 to i32
  store i32 %v4_10006830, i32* %r9.global-to-local, align 4
  %v1_10006834 = add i32 %v4_10006830, 1
  store i32 %v1_10006834, i32* %r0.global-to-local, align 4
  %v1_10006838 = icmp slt i32 %v1_10006834, 255
  %v3_10006838 = icmp eq i32 %v1_10006834, 255
  store i1 %v1_10006838, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006838, i1* %cr7_eq.global-to-local, align 1
  %v5_1000683c = sext i32 %v1_10006834 to i64
  store i64 %v5_1000683c, i64* %stack_var_-1916, align 8
  %tmp115 = icmp slt i32 %v1_10006834, 256
  br i1 %tmp115, label %dec_label_pc_100067ac, label %dec_label_pc_10006844

dec_label_pc_10006844:                            ; preds = %dec_label_pc_10006828, %dec_label_pc_10006798
  %v0_10006844 = load i32, i32* %r30.global-to-local, align 4
  %v1_10006844 = load i32, i32* @r31, align 4
  %v2_10006844 = icmp slt i32 %v0_10006844, %v1_10006844
  %v4_10006844 = icmp eq i32 %v0_10006844, %v1_10006844
  store i1 %v2_10006844, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006844, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_10006844, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  store i32 1, i32* %stack_var_-1908, align 4
  br i1 %v2_10006844, label %dec_label_pc_10006860, label %dec_label_pc_10006864

dec_label_pc_10006860:                            ; preds = %dec_label_pc_10006844
  store i32 %v1_10006844, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006864

dec_label_pc_10006864:                            ; preds = %dec_label_pc_10006844, %dec_label_pc_10006860
  %v0_10006874 = phi i32 [ %v0_10006844, %dec_label_pc_10006844 ], [ %v1_10006844, %dec_label_pc_10006860 ]
  store i32 %v2_10006868, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %v2_10006870, i32* %r7.global-to-local, align 4
  %v1_10006874 = add i32 %v0_10006874, 1
  store i32 %v1_10006874, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000687c.130 to i32), i32* @lr, align 4
  %v5_10006878 = call i32 @function_100086e0(i32 %v1_10006874, i32 %v2_10006864, i32 %v2_10006868, i32 0, i32 %v2_10006870)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10006884.131 to i32), i32* @lr, align 4
  %v0_10006880 = call i32 @function_100087e8()
  store i32 %v0_10006880, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_10006880, i32* @global_var_1001b524.91, align 4
  %v0_1000688c = load i32, i32* %r30.global-to-local, align 4
  %v5_1000688c = sext i32 %v0_1000688c to i64
  store i64 %v5_1000688c, i64* %stack_var_-1916, align 8
  br label %dec_label_pc_100068a8

dec_label_pc_10006894:                            ; preds = %dec_label_pc_10006904, %dec_label_pc_10007324, %dec_label_pc_100068e8, %dec_label_pc_100068a8, %dec_label_pc_100075d8, %dec_label_pc_1000750c, %dec_label_pc_10007358
  %v3_10006894 = load i64, i64* %stack_var_-1916, align 8
  %v4_10006894 = trunc i64 %v3_10006894 to i32
  store i32 %v4_10006894, i32* %r9.global-to-local, align 4
  %v1_10006898 = add i32 %v4_10006894, 1
  store i32 %v1_10006898, i32* %r0.global-to-local, align 4
  %v1_1000689c = icmp slt i32 %v1_10006898, 255
  %v2_1000689c = icmp sgt i32 %v1_10006898, 255
  %v3_1000689c = icmp eq i32 %v1_10006898, 255
  store i1 %v1_1000689c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000689c, i1* %cr7_eq.global-to-local, align 1
  %v5_100068a0 = sext i32 %v1_10006898 to i64
  store i64 %v5_100068a0, i64* %stack_var_-1916, align 8
  br i1 %v2_1000689c, label %dec_label_pc_1000624c, label %dec_label_pc_100068a8

dec_label_pc_100068a8:                            ; preds = %dec_label_pc_10006894, %dec_label_pc_10006864
  %v0_100068ac = phi i32 [ %v1_10006898, %dec_label_pc_10006894 ], [ 0, %dec_label_pc_10006864 ]
  store i32 268566528, i32* %r10.global-to-local, align 4
  %v1_100068ac = mul i32 %v0_100068ac, 256
  store i32 %v1_100068ac, i32* %r11.global-to-local, align 4
  %v3_100068b0 = load i32, i32* @global_var_1001b528.98, align 4
  store i32 %v3_100068b0, i32* %r9.global-to-local, align 4
  %v2_100068b8 = mul i32 %v0_100068ac, 288
  store i32 %v2_100068b8, i32* %r0.global-to-local, align 4
  %v2_100068bc = add i32 %v3_100068b0, %v2_100068b8
  store i32 %v2_100068bc, i32* %r28.global-to-local, align 4
  %v1_100068c0 = add i32 %v2_100068bc, 4
  %v2_100068c0 = inttoptr i32 %v1_100068c0 to i32*
  %v3_100068c0 = load i32, i32* %v2_100068c0, align 4
  store i32 %v3_100068c0, i32* %r3.global-to-local, align 4
  %v1_100068c4 = icmp slt i32 %v3_100068c0, -1
  %v3_100068c4 = icmp eq i32 %v3_100068c0, -1
  store i1 %v1_100068c4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100068c4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100068c4, label %dec_label_pc_10006894, label %dec_label_pc_100068cc

dec_label_pc_100068cc:                            ; preds = %dec_label_pc_100068a8
  %v1_100068cc = call i32 @__asm_rlwinm(i32 %v3_100068c0, i32 29, i32 3, i32 29)
  %v0_100068d0 = load i32, i32* %r3.global-to-local, align 4
  %v1_100068d0 = urem i32 %v0_100068d0, 32
  store i32 %v1_100068d0, i32* %r11.global-to-local, align 4
  %v1_100068d4 = load i32, i32* @r14, align 4
  %v2_100068d4 = add i32 %v1_100068d4, %v1_100068cc
  store i32 %v2_100068d4, i32* %r9.global-to-local, align 4
  %v1_100068d8 = add i32 %v2_100068d4, 184
  %v2_100068d8 = inttoptr i32 %v1_100068d8 to i32*
  %v3_100068d8 = load i32, i32* %v2_100068d8, align 4
  %v3_100068dc = lshr i32 %v3_100068d8, %v1_100068d0
  store i32 %v3_100068dc, i32* %r0.global-to-local, align 4
  %v1_100068e0 = urem i32 %v3_100068dc, 2
  store i32 %v1_100068e0, i32* %r11.global-to-local, align 4
  %v3_100068e0 = icmp eq i32 %v1_100068e0, 0
  br i1 %v3_100068e0, label %dec_label_pc_100068e8, label %dec_label_pc_1000744c

dec_label_pc_100068e8:                            ; preds = %dec_label_pc_100068cc, %dec_label_pc_100074e4
  %v0_100068e8 = phi i32 [ %v0_100068d0, %dec_label_pc_100068cc ], [ %v0_100068e8.pre, %dec_label_pc_100074e4 ]
  %v1_100068e8 = call i32 @__asm_rlwinm(i32 %v0_100068e8, i32 29, i32 3, i32 29)
  %v0_100068ec = load i32, i32* %r3.global-to-local, align 4
  %v1_100068ec = urem i32 %v0_100068ec, 32
  store i32 %v1_100068ec, i32* %r11.global-to-local, align 4
  %v1_100068f0 = load i32, i32* @r14, align 4
  %v2_100068f0 = add i32 %v1_100068f0, %v1_100068e8
  store i32 %v2_100068f0, i32* %r9.global-to-local, align 4
  %v1_100068f4 = add i32 %v2_100068f0, 56
  %v2_100068f4 = inttoptr i32 %v1_100068f4 to i32*
  %v3_100068f4 = load i32, i32* %v2_100068f4, align 4
  %v3_100068f8 = lshr i32 %v3_100068f4, %v1_100068ec
  store i32 %v3_100068f8, i32* %r0.global-to-local, align 4
  %v1_100068fc = urem i32 %v3_100068f8, 2
  store i32 %v1_100068fc, i32* %r9.global-to-local, align 4
  %v3_100068fc = icmp eq i32 %v1_100068fc, 0
  br i1 %v3_100068fc, label %dec_label_pc_10006894, label %dec_label_pc_10006904.preheader

dec_label_pc_10006904.preheader:                  ; preds = %dec_label_pc_100068e8
  %v0_10006904.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10006904

dec_label_pc_10006904:                            ; preds = %dec_label_pc_10006904.preheader, %dec_label_pc_10006970
  %v0_10007374 = phi i32 [ %v0_10006904.pre, %dec_label_pc_10006904.preheader ], [ %v0_10006984, %dec_label_pc_10006970 ]
  %v1_10006904 = add i32 %v0_10007374, 12
  %v2_10006904 = inttoptr i32 %v1_10006904 to i32*
  %v3_10006904 = load i32, i32* %v2_10006904, align 4
  store i32 %v3_10006904, i32* %r10.global-to-local, align 4
  %v1_10006908 = icmp slt i32 %v3_10006904, 0
  %v3_10006908 = icmp eq i32 %v3_10006904, 0
  store i1 %v1_10006908, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006908, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006908, label %dec_label_pc_10006894, label %dec_label_pc_10006910

dec_label_pc_10006910:                            ; preds = %dec_label_pc_10006904
  %v1_10006910 = add i32 %v0_10007374, 24
  %v2_10006910 = inttoptr i32 %v1_10006910 to i32*
  %v3_10006910 = load i32, i32* %v2_10006910, align 4
  store i32 %v3_10006910, i32* %r0.global-to-local, align 4
  %v1_10006914 = add i32 %v0_10007374, 28
  store i32 %v1_10006914, i32* %r30.global-to-local, align 4
  %v1_10006918 = icmp slt i32 %v3_10006910, 256
  %v3_10006918 = icmp eq i32 %v3_10006910, 256
  store i1 %v1_10006918, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006918, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006918, label %dec_label_pc_1000736c, label %dec_label_pc_10006920

dec_label_pc_10006920:                            ; preds = %dec_label_pc_10006910, %dec_label_pc_1000736c
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v1_10006928 = load i32, i32* %r26.global-to-local, align 4
  %v2_10006928 = inttoptr i32 %v1_10006928 to i32*
  store i32 0, i32* %v2_10006928, align 4
  %v0_1000692c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000692c = add i32 %v0_1000692c, 24
  %v2_1000692c = inttoptr i32 %v1_1000692c to i32*
  %v3_1000692c = load i32, i32* %v2_1000692c, align 4
  store i32 %v3_1000692c, i32* %r5.global-to-local, align 4
  %v1_10006930 = add i32 %v0_1000692c, 4
  %v2_10006930 = inttoptr i32 %v1_10006930 to i32*
  %v3_10006930 = load i32, i32* %v2_10006930, align 4
  store i32 %v3_10006930, i32* %r3.global-to-local, align 4
  %v0_10006934 = load i32, i32* %r30.global-to-local, align 4
  %v2_10006934 = add i32 %v0_10006934, %v3_1000692c
  store i32 %v2_10006934, i32* @r29, align 4
  %v1_10006938 = sub i32 256, %v3_1000692c
  store i32 %v1_10006938, i32* %r5.global-to-local, align 4
  store i32 268462404, i32* @lr, align 4
  %v4_10006940 = call i32 @function_10008fd8(i32 %v3_10006930, i32 %v2_10006934, i32 %v1_10006938, i32 16384)
  store i32 %v4_10006940, i32* %r3.global-to-local, align 4
  %tmp117 = icmp slt i32 %v4_10006940, 1
  br i1 %tmp117, label %dec_label_pc_10007318, label %dec_label_pc_1000694c

dec_label_pc_1000694c:                            ; preds = %dec_label_pc_10006920
  store i32 %v4_10006940, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 65, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006958

dec_label_pc_10006958:                            ; preds = %dec_label_pc_10006968, %dec_label_pc_1000694c
  %v0_1000696c39 = phi i32 [ %v1_1000696c, %dec_label_pc_10006968 ], [ %v4_10006940, %dec_label_pc_1000694c ]
  %v1_10006964 = phi i32 [ %v1_10006968, %dec_label_pc_10006968 ], [ 0, %dec_label_pc_1000694c ]
  %v1_10006958 = load i32, i32* @r29, align 4
  %v2_10006958 = add i32 %v1_10006958, %v1_10006964
  %v3_10006958 = inttoptr i32 %v2_10006958 to i8*
  %v4_10006958 = load i8, i8* %v3_10006958, align 1
  %v5_10006958 = zext i8 %v4_10006958 to i32
  store i32 %v5_10006958, i32* %r0.global-to-local, align 4
  %v3_1000695c = icmp eq i8 %v4_10006958, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000695c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000695c, label %dec_label_pc_10006964, label %dec_label_pc_10006968

dec_label_pc_10006964:                            ; preds = %dec_label_pc_10006958
  %v0_10006964 = load i32, i32* %r11.global-to-local, align 4
  %v3_10006964 = trunc i32 %v0_10006964 to i8
  store i8 %v3_10006964, i8* %v3_10006958, align 1
  %v0_10006968.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_1000696c.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10006968

dec_label_pc_10006968:                            ; preds = %dec_label_pc_10006958, %dec_label_pc_10006964
  %v0_1000696c = phi i32 [ %v0_1000696c39, %dec_label_pc_10006958 ], [ %v0_1000696c.pre, %dec_label_pc_10006964 ]
  %v0_10006968 = phi i32 [ %v1_10006964, %dec_label_pc_10006958 ], [ %v0_10006968.pre, %dec_label_pc_10006964 ]
  %v1_10006968 = add i32 %v0_10006968, 1
  store i32 %v1_10006968, i32* %r9.global-to-local, align 4
  %v1_1000696c = add i32 %v0_1000696c, -1
  store i32 %v1_1000696c, i32* %ctr.global-to-local, align 4
  %v2_1000696c = icmp eq i32 %v1_1000696c, 0
  br i1 %v2_1000696c, label %dec_label_pc_10006970, label %dec_label_pc_10006958

dec_label_pc_10006970:                            ; preds = %dec_label_pc_10006968, %dec_label_pc_1000731c
  %v0_10006970 = load i32, i32* %r28.global-to-local, align 4
  %v1_10006970 = add i32 %v0_10006970, 24
  %v2_10006970 = inttoptr i32 %v1_10006970 to i32*
  %v3_10006970 = load i32, i32* %v2_10006970, align 4
  %v3_10006974 = load i32, i32* @global_var_1001b524.91, align 4
  store i32 %v3_10006974, i32* %r0.global-to-local, align 4
  %v2_10006978 = add i32 %v3_10006970, %v4_10006940
  store i32 %v2_10006978, i32* %r5.global-to-local, align 4
  store i32 %v2_10006978, i32* %v2_10006970, align 4
  %v0_10006980 = load i32, i32* %r0.global-to-local, align 4
  %v1_10006980 = load i32, i32* %r28.global-to-local, align 4
  %v2_10006980 = add i32 %v1_10006980, 8
  %v3_10006980 = inttoptr i32 %v2_10006980 to i32*
  store i32 %v0_10006980, i32* %v3_10006980, align 4
  %v0_10006984 = load i32, i32* %r28.global-to-local, align 4
  %v1_10006984 = add i32 %v0_10006984, 12
  %v2_10006984 = inttoptr i32 %v1_10006984 to i32*
  %v3_10006984 = load i32, i32* %v2_10006984, align 4
  store i32 %v3_10006984, i32* %r10.global-to-local, align 4
  %v1_10006988 = icmp ult i32 %v3_10006984, 10
  %v2_10006988 = icmp ugt i32 %v3_10006984, 10
  %v3_10006988 = icmp eq i32 %v3_10006984, 10
  store i1 %v1_10006988, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006988, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10006988, label %dec_label_pc_10006904, label %dec_label_pc_10006990

dec_label_pc_10006990:                            ; preds = %dec_label_pc_10006970
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v1_10006994 = mul i32 %v3_10006984, 4
  store i32 %v1_10006994, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000ae90.132 to i32), i32* %r11.global-to-local, align 4
  %v2_1000699c = add i32 %v1_10006994, ptrtoint (i32* @global_var_1000ae90.132 to i32)
  %v3_1000699c = inttoptr i32 %v2_1000699c to i32*
  %v4_1000699c = load i32, i32* %v3_1000699c, align 4
  %v2_100069a0 = add i32 %v4_1000699c, ptrtoint (i32* @global_var_1000ae90.132 to i32)
  store i32 %v2_100069a0, i32* %r9.global-to-local, align 4
  store i32 %v2_100069a0, i32* %ctr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v2_100069a0)
  br label %dec_label_pc_100069ac

dec_label_pc_100069ac:                            ; preds = %dec_label_pc_10006810, %dec_label_pc_100067f4, %dec_label_pc_10006990
  %v0_100069ac = load i32, i32* %r27.global-to-local, align 4
  %v1_100069ac = load i32, i32* @r29, align 4
  %v2_100069ac = add i32 %v1_100069ac, 12
  %v3_100069ac = inttoptr i32 %v2_100069ac to i32*
  store i32 %v0_100069ac, i32* %v3_100069ac, align 4
  %v0_100069b0 = load i32, i32* %r28.global-to-local, align 4
  %v1_100069b0 = trunc i32 %v0_100069b0 to i8
  %v2_100069b0 = load i32, i32* @r29, align 4
  %v3_100069b0 = add i32 %v2_100069b0, 284
  %v4_100069b0 = inttoptr i32 %v3_100069b0 to i8*
  store i8 %v1_100069b0, i8* %v4_100069b0, align 1
  br label %dec_label_pc_10006798

dec_label_pc_100069b8:                            ; preds = %dec_label_pc_10006760
  %v1_100069bc = call i32 @__asm_rlwinm(i32 %v3_100069b8, i32 29, i32 3, i32 29)
  %v0_100069c0 = load i32, i32* @r31, align 4
  %v2_100069c0 = icmp slt i32 %v0_100069c0, %v3_100069b8
  %v4_100069c0 = icmp eq i32 %v0_100069c0, %v3_100069b8
  store i1 %v2_100069c0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100069c0, i1* %cr7_eq.global-to-local, align 1
  %v1_100069c4 = load i32, i32* @r14, align 4
  %v2_100069c4 = add i32 %v1_100069c4, %v1_100069bc
  store i32 %v2_100069c4, i32* %r11.global-to-local, align 4
  %v1_100069c8 = urem i32 %v3_100069b8, 32
  store i32 %v1_100069c8, i32* %r0.global-to-local, align 4
  %v1_100069cc = add i32 %v2_100069c4, 184
  %v2_100069cc = inttoptr i32 %v1_100069cc to i32*
  %v3_100069cc = load i32, i32* %v2_100069cc, align 4
  %v0_100069d0 = load i32, i32* %r10.global-to-local, align 4
  %v3_100069d0 = shl i32 %v0_100069d0, %v1_100069c8
  store i32 %v3_100069d0, i32* %r0.global-to-local, align 4
  %v2_100069d4 = or i32 %v3_100069d0, %v3_100069cc
  store i32 %v2_100069d4, i32* %r9.global-to-local, align 4
  store i32 %v2_100069d4, i32* %v2_100069cc, align 4
  br i1 %v2_100069c0, label %dec_label_pc_100069e0, label %dec_label_pc_10006798

dec_label_pc_100069e0:                            ; preds = %dec_label_pc_100069b8
  store i32 %v3_100069b8, i32* @r31, align 4
  br label %dec_label_pc_10006798

dec_label_pc_10007318:                            ; preds = %dec_label_pc_10006920
  %v3_10006944 = icmp eq i32 %v4_10006940, 0
  br i1 %v3_10006944, label %dec_label_pc_1000752c, label %dec_label_pc_1000731c

dec_label_pc_1000731c:                            ; preds = %dec_label_pc_10007318
  %v1_1000731c = icmp slt i32 %v4_10006940, -1
  %v3_1000731c = icmp eq i32 %v4_10006940, -1
  store i1 %v1_1000731c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000731c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000731c, label %dec_label_pc_10007324, label %dec_label_pc_10006970

dec_label_pc_10007324:                            ; preds = %dec_label_pc_1000731c
  %v0_10007324 = load i32, i32* %r26.global-to-local, align 4
  %v1_10007324 = inttoptr i32 %v0_10007324 to i32*
  %v2_10007324 = load i32, i32* %v1_10007324, align 4
  store i32 %v2_10007324, i32* %r0.global-to-local, align 4
  %v1_10007328 = icmp slt i32 %v2_10007324, 11
  %v3_10007328 = icmp eq i32 %v2_10007324, 11
  store i1 %v1_10007328, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007328, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007328, label %dec_label_pc_10006894, label %dec_label_pc_10007330

dec_label_pc_10007330:                            ; preds = %dec_label_pc_10007324, %dec_label_pc_1000752c
  %v0_10007330 = load i32, i32* %r28.global-to-local, align 4
  %v1_10007330 = add i32 %v0_10007330, 4
  %v2_10007330 = inttoptr i32 %v1_10007330 to i32*
  %v3_10007330 = load i32, i32* %v2_10007330, align 4
  store i32 %v3_10007330, i32* %r3.global-to-local, align 4
  store i32 268464952, i32* @lr, align 4
  %v0_10007334 = call i32 @function_10008418()
  store i32 %v0_10007334, i32* %r3.global-to-local, align 4
  %v0_10007338 = load i32, i32* %r28.global-to-local, align 4
  %v1_10007338 = add i32 %v0_10007338, 284
  %v2_10007338 = inttoptr i32 %v1_10007338 to i8*
  %v3_10007338 = load i8, i8* %v2_10007338, align 1
  %v4_10007338 = zext i8 %v3_10007338 to i32
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_10007340 = add nuw nsw i32 %v4_10007338, 1
  store i32 %v1_10007340, i32* %r9.global-to-local, align 4
  %v2_10007344 = add i32 %v0_10007338, 4
  %v3_10007344 = inttoptr i32 %v2_10007344 to i32*
  store i32 -1, i32* %v3_10007344, align 4
  %v0_10007348 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007348 = urem i32 %v0_10007348, 256
  store i32 %v1_10007348, i32* %r9.global-to-local, align 4
  %v1_1000734c = icmp ult i32 %v1_10007348, 9
  %v3_1000734c = icmp eq i32 %v1_10007348, 9
  store i1 %v1_1000734c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000734c, i1* %cr7_eq.global-to-local, align 1
  %v1_10007350 = trunc i32 %v0_10007348 to i8
  %v2_10007350 = load i32, i32* %r28.global-to-local, align 4
  %v3_10007350 = add i32 %v2_10007350, 284
  %v4_10007350 = inttoptr i32 %v3_10007350 to i8*
  store i8 %v1_10007350, i8* %v4_10007350, align 1
  %v0_10007354 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_10007354 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_10007354 = or i1 %v0_10007354, %v1_10007354
  br i1 %v2_10007354, label %dec_label_pc_100075d8, label %dec_label_pc_10007358

dec_label_pc_10007358:                            ; preds = %dec_label_pc_10007330
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10007360 = load i32, i32* %r28.global-to-local, align 4
  %v2_10007360 = add i32 %v1_10007360, 12
  %v3_10007360 = inttoptr i32 %v2_10007360 to i32*
  store i32 0, i32* %v3_10007360, align 4
  %v0_10007364 = load i32, i32* %r0.global-to-local, align 4
  %v1_10007364 = trunc i32 %v0_10007364 to i8
  %v2_10007364 = load i32, i32* %r28.global-to-local, align 4
  %v3_10007364 = add i32 %v2_10007364, 284
  %v4_10007364 = inttoptr i32 %v3_10007364 to i8*
  store i8 %v1_10007364, i8* %v4_10007364, align 1
  br label %dec_label_pc_10006894

dec_label_pc_1000736c:                            ; preds = %dec_label_pc_10006910
  store i32 192, i32* %r5.global-to-local, align 4
  store i32 %v1_10006914, i32* %r3.global-to-local, align 4
  %v1_10007374 = add i32 %v0_10007374, 92
  store i32 268465020, i32* @lr, align 4
  %v3_10007378 = call i32 @function_10008b78(i32 %v1_10006914, i32 %v1_10007374, i32 192)
  store i32 %v3_10007378, i32* %r3.global-to-local, align 4
  %v0_1000737c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000737c = add i32 %v0_1000737c, 24
  %v2_1000737c = inttoptr i32 %v1_1000737c to i32*
  %v3_1000737c = load i32, i32* %v2_1000737c, align 4
  store i32 %v3_1000737c, i32* %r9.global-to-local, align 4
  %v1_10007380 = add i32 %v3_1000737c, -64
  store i32 %v1_10007380, i32* %r5.global-to-local, align 4
  store i32 %v1_10007380, i32* %v2_1000737c, align 4
  br label %dec_label_pc_10006920

dec_label_pc_1000744c:                            ; preds = %dec_label_pc_100068cc
  store i32 4, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 %v2_1000745c, i32* %r6.global-to-local, align 4
  store i32 %v2_10007460, i32* %r7.global-to-local, align 4
  store i32 4, i32* %stack_var_-1912, align 4
  store i32 0, i32* %stack_var_-1920, align 4
  store i32 268465264, i32* @lr, align 4
  %v5_1000746c = call i32 @function_10008f9c(i32 1, i32 4, i32 %v2_1000745c, i32 %v2_10007460, i32 %v2_100068d4)
  store i32 %v5_1000746c, i32* %r3.global-to-local, align 4
  %v3_10007470 = load i32, i32* %stack_var_-1920, align 4
  store i32 %v3_10007470, i32* %r0.global-to-local, align 4
  %v2_10007474 = or i32 %v3_10007470, %v5_1000746c
  store i32 %v2_10007474, i32* %r9.global-to-local, align 4
  %v5_10007474 = icmp eq i32 %v2_10007474, 0
  br i1 %v5_10007474, label %dec_label_pc_1000747c, label %dec_label_pc_1000750c

dec_label_pc_1000747c:                            ; preds = %dec_label_pc_1000744c
  store i32 2, i32* %r10.global-to-local, align 4
  %v1_10007480 = load i32, i32* %r28.global-to-local, align 4
  %v2_10007480 = add i32 %v1_10007480, 12
  %v3_10007480 = inttoptr i32 %v2_10007480 to i32*
  store i32 2, i32* %v3_10007480, align 4
  %v0_10007484 = call i32 @function_10005928()
  %v3_1000748c = load i16, i16* @global_var_1001b520.94, align 2
  %v4_1000748c = zext i16 %v3_1000748c to i32
  store i32 %v4_1000748c, i32* %r11.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10007494 = load i32, i32* @global_var_1001b518.92, align 4
  store i32 %v3_10007494, i32* %r10.global-to-local, align 4
  %v1_1000749c = icmp slt i32 %v3_10007494, 0
  %v3_1000749c = icmp eq i32 %v3_10007494, 0
  store i1 %v1_1000749c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000749c, i1* %cr7_eq.global-to-local, align 1
  %v2_10007498 = urem i32 %v0_10007484, %v4_1000748c
  %v2_100074a0 = sub i32 %v0_10007484, %v2_10007498
  store i32 %v2_100074a0, i32* %r0.global-to-local, align 4
  store i32 %v2_10007498, i32* %r3.global-to-local, align 4
  %tmp119 = icmp slt i32 %v3_10007494, 1
  br i1 %tmp119, label %dec_label_pc_100074e0, label %dec_label_pc_100074b0

dec_label_pc_100074b0:                            ; preds = %dec_label_pc_1000747c
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v3_10007494, i32* %ctr.global-to-local, align 4
  %v3_100074b8 = load i32, i32* @global_var_1001b51c.93, align 4
  store i32 %v3_100074b8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_100074bc

dec_label_pc_100074bc:                            ; preds = %dec_label_pc_100074d8, %dec_label_pc_100074b0
  %v0_100074dc = phi i32 [ %v1_100074dc, %dec_label_pc_100074d8 ], [ %v3_10007494, %dec_label_pc_100074b0 ]
  %v0_100074d8 = phi i32 [ %v1_100074d8, %dec_label_pc_100074d8 ], [ %v3_100074b8, %dec_label_pc_100074b0 ]
  store i32 %v0_100074d8, i32* %r9.global-to-local, align 4
  %v1_100074c0 = add i32 %v0_100074d8, 8
  %v2_100074c0 = inttoptr i32 %v1_100074c0 to i16*
  %v3_100074c0 = load i16, i16* %v2_100074c0, align 2
  %v4_100074c0 = zext i16 %v3_100074c0 to i32
  store i32 %v4_100074c0, i32* %r0.global-to-local, align 4
  %v2_100074c4 = icmp ult i32 %v4_100074c0, %v2_10007498
  %v3_100074c4 = icmp ugt i32 %v4_100074c0, %v2_10007498
  %v4_100074c4 = icmp eq i32 %v4_100074c0, %v2_10007498
  br i1 %v3_100074c4, label %dec_label_pc_100074d8, label %dec_label_pc_100074cc

dec_label_pc_100074cc:                            ; preds = %dec_label_pc_100074bc
  %v1_100074cc = add i32 %v0_100074d8, 10
  %v2_100074cc = inttoptr i32 %v1_100074cc to i16*
  %v3_100074cc = load i16, i16* %v2_100074cc, align 2
  %v4_100074cc = zext i16 %v3_100074cc to i32
  store i32 %v4_100074cc, i32* %r0.global-to-local, align 4
  %v2_100074d0 = icmp ult i32 %v4_100074cc, %v2_10007498
  %v3_100074d0 = icmp ugt i32 %v4_100074cc, %v2_10007498
  %v4_100074d0 = icmp eq i32 %v4_100074cc, %v2_10007498
  br i1 %v3_100074d0, label %dec_label_pc_100074e4.loopexit, label %dec_label_pc_100074d8

dec_label_pc_100074d8:                            ; preds = %dec_label_pc_100074cc, %dec_label_pc_100074bc
  %v4_100074d07 = phi i1 [ %v4_100074d0, %dec_label_pc_100074cc ], [ %v4_100074c4, %dec_label_pc_100074bc ]
  %v2_100074d05 = phi i1 [ %v2_100074d0, %dec_label_pc_100074cc ], [ %v2_100074c4, %dec_label_pc_100074bc ]
  %v1_100074d8 = add i32 %v0_100074d8, 16
  store i32 %v1_100074d8, i32* %r0.global-to-local, align 4
  %v1_100074dc = add i32 %v0_100074dc, -1
  store i32 %v1_100074dc, i32* %ctr.global-to-local, align 4
  %v2_100074dc = icmp eq i32 %v1_100074dc, 0
  br i1 %v2_100074dc, label %dec_label_pc_100074e0.loopexit, label %dec_label_pc_100074bc

dec_label_pc_100074e0.loopexit:                   ; preds = %dec_label_pc_100074d8
  store i1 %v2_100074d05, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100074d07, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_100074e0

dec_label_pc_100074e0:                            ; preds = %dec_label_pc_100074e0.loopexit, %dec_label_pc_1000747c
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100074e4

dec_label_pc_100074e4.loopexit:                   ; preds = %dec_label_pc_100074cc
  store i1 %v2_100074d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100074d0, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_100074e4

dec_label_pc_100074e4:                            ; preds = %dec_label_pc_100074e4.loopexit, %dec_label_pc_100074e0
  %v0_100074ec = phi i32 [ %v0_100074d8, %dec_label_pc_100074e4.loopexit ], [ 0, %dec_label_pc_100074e0 ]
  %v0_100074e4 = load i32, i32* %r28.global-to-local, align 4
  %v1_100074e4 = add i32 %v0_100074e4, 4
  %v2_100074e4 = inttoptr i32 %v1_100074e4 to i32*
  %v3_100074e4 = load i32, i32* %v2_100074e4, align 4
  store i32 %v3_100074e4, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  %v2_100074ec = inttoptr i32 %v0_100074e4 to i32*
  store i32 %v0_100074ec, i32* %v2_100074ec, align 4
  %v0_100074f0 = load i32, i32* %r5.global-to-local, align 4
  %v1_100074f0 = load i32, i32* %r28.global-to-local, align 4
  %v2_100074f0 = add i32 %v1_100074f0, 24
  %v3_100074f0 = inttoptr i32 %v2_100074f0 to i32*
  store i32 %v0_100074f0, i32* %v3_100074f0, align 4
  %v0_100068e8.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100068e8

dec_label_pc_1000750c:                            ; preds = %dec_label_pc_1000744c
  %v0_1000750c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000750c = add i32 %v0_1000750c, 4
  %v2_1000750c = inttoptr i32 %v1_1000750c to i32*
  %v3_1000750c = load i32, i32* %v2_1000750c, align 4
  store i32 %v3_1000750c, i32* %r3.global-to-local, align 4
  store i32 268465428, i32* @lr, align 4
  %v0_10007510 = call i32 @function_10008418()
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_1000751c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000751c = add i32 %v1_1000751c, 4
  %v3_1000751c = inttoptr i32 %v2_1000751c to i32*
  store i32 -1, i32* %v3_1000751c, align 4
  %v0_10007520 = load i32, i32* %r10.global-to-local, align 4
  %v1_10007520 = load i32, i32* %r28.global-to-local, align 4
  %v2_10007520 = add i32 %v1_10007520, 12
  %v3_10007520 = inttoptr i32 %v2_10007520 to i32*
  store i32 %v0_10007520, i32* %v3_10007520, align 4
  %v0_10007524 = load i32, i32* @r31, align 4
  %v1_10007524 = trunc i32 %v0_10007524 to i8
  %v2_10007524 = load i32, i32* %r28.global-to-local, align 4
  %v3_10007524 = add i32 %v2_10007524, 284
  %v4_10007524 = inttoptr i32 %v3_10007524 to i8*
  store i8 %v1_10007524, i8* %v4_10007524, align 1
  br label %dec_label_pc_10006894

dec_label_pc_1000752c:                            ; preds = %dec_label_pc_10007318
  store i32 104, i32* %r0.global-to-local, align 4
  %v1_10007530 = load i32, i32* %r26.global-to-local, align 4
  %v2_10007530 = inttoptr i32 %v1_10007530 to i32*
  store i32 104, i32* %v2_10007530, align 4
  br label %dec_label_pc_10007330

dec_label_pc_100075d8:                            ; preds = %dec_label_pc_10007330
  %v0_100075d8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100075d8, i32* @r3, align 4
  store i32 268465632, i32* @lr, align 4
  %v0_100075dc = call i32 @function_10005c08()
  store i32 %v0_100075dc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006894

dec_label_pc_10007604:                            ; preds = %dec_label_pc_10006028
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10007608 = load i32, i32* @global_var_1001b52c.99, align 4
  store i32 %v3_10007608, i32* %r3.global-to-local, align 4
  store i32 268465680, i32* @lr, align 4
  %v0_1000760c = call i32 @function_10008418()
  store i32 %v0_1000760c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006634

dec_label_pc_10007614:                            ; preds = %dec_label_pc_10006544
  store i32 %v0_1000653c, i32* @r29, align 4
  br label %dec_label_pc_10007618

dec_label_pc_10007618:                            ; preds = %dec_label_pc_10006580, %dec_label_pc_10007614
  %v1_10007618 = phi i32 [ %v2_10006558, %dec_label_pc_10007614 ], [ %v0_10006580, %dec_label_pc_10006580 ]
  %v2_10007618 = add i32 %v1_10007618, 16
  %v3_10007618 = inttoptr i32 %v2_10007618 to i32*
  store i32 %tmp51, i32* %v3_10007618, align 4
  %v0_1000761c = load i32, i32* @r29, align 4
  store i32 %v0_1000761c, i32* @r31, align 4
  %v0_10007620 = load i32, i32* %r8.global-to-local, align 4
  %v1_10007620 = trunc i32 %v0_10007620 to i16
  %v2_10007620 = load i32, i32* @r3, align 4
  %v3_10007620 = add i32 %v2_10007620, 20
  %v4_10007620 = inttoptr i32 %v3_10007620 to i16*
  store i16 %v1_10007620, i16* %v4_10007620, align 2
  store i32 268465704, i32* @lr, align 4
  %v0_10007624 = call i32 @function_10005c08()
  store i32 %v0_10007624, i32* %r3.global-to-local, align 4
  %v1_10006484.pre.pre = load i32, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_1000647c

; uselistorder directives
  uselistorder i32 %v1_100074dc, { 2, 1, 0 }
  uselistorder i32 %v1_100074d8, { 1, 0 }
  uselistorder i32 %v4_100074cc, { 2, 1, 0, 3 }
  uselistorder i32 %v4_100074c0, { 2, 1, 0, 3 }
  uselistorder i32 %v0_100074d8, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v2_10007498, { 3, 2, 1, 6, 5, 4, 0, 7 }
  uselistorder i32 %v3_10007494, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32 %v1_10007348, { 1, 2, 0 }
  uselistorder i32 %v0_10007348, { 1, 0 }
  uselistorder i32 %v2_10007324, { 1, 0, 2 }
  uselistorder i32 %v1_100069c8, { 1, 0 }
  uselistorder i32 %v1_10006994, { 1, 0 }
  uselistorder i32 %v3_10006984, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v0_10006984, { 1, 0 }
  uselistorder i32 %v1_1000696c, { 2, 1, 0 }
  uselistorder i32 %v1_10006968, { 1, 0 }
  uselistorder i32 %v1_10006964, { 1, 0 }
  uselistorder i32 %v4_10006940, { 4, 3, 6, 0, 1, 2, 5, 7 }
  uselistorder i32 %v3_1000692c, { 1, 0, 2 }
  uselistorder i32 %v1_10006914, { 1, 0, 2 }
  uselistorder i32 %v3_10006910, { 1, 0, 2 }
  uselistorder i32 %v3_10006904, { 1, 0, 2 }
  uselistorder i32 %v0_10007374, { 0, 2, 1, 3 }
  uselistorder i32 %v1_100068fc, { 1, 0 }
  uselistorder i32 %v1_100068ec, { 1, 0 }
  uselistorder i32 %v1_100068e0, { 1, 0 }
  uselistorder i32 %v1_100068d0, { 1, 0 }
  uselistorder i32 %v0_100068d0, { 1, 0 }
  uselistorder i32 %v3_100068c0, { 0, 2, 1, 3 }
  uselistorder i32 %v0_100068ac, { 1, 0 }
  uselistorder i32 %v1_10006898, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32 %v1_10006834, { 2, 1, 4, 3, 5, 0 }
  uselistorder i32 %v1_10006818, { 1, 2, 0 }
  uselistorder i32 %v1_10006814, { 1, 0 }
  uselistorder i32 %v3_100067fc, { 0, 2, 1, 3 }
  uselistorder i32 %v2_100067e8, { 2, 1, 0, 3 }
  uselistorder i1 %v3_100067cc, { 2, 0, 1 }
  uselistorder i1 %v1_100067cc, { 1, 0, 2 }
  uselistorder i32 %v3_100067c8, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v2_100067c4, { 0, 3, 4, 5, 2, 1 }
  uselistorder i32 %v1_1000679c, { 0, 1, 4, 3, 2, 5 }
  uselistorder i32 %v1_1000677c, { 1, 0 }
  uselistorder i32 %v3_100069b8, { 5, 0, 8, 7, 9, 2, 1, 4, 3, 6, 10 }
  uselistorder i32 %v2_10006754, { 2, 1, 0, 3 }
  uselistorder i32 %v1_1000672c, { 1, 0 }
  uselistorder i32 %v1_1000670c, { 1, 0 }
  uselistorder i32 %v0_100066d8, { 1, 2, 0 }
  uselistorder i32 %v0_100066cc, { 1, 2, 0 }
  uselistorder i32 %v0_100066c0, { 1, 2, 0 }
  uselistorder i32 %v0_100066b4, { 1, 2, 0 }
  uselistorder i32 %v0_10006690, { 2, 1, 4, 3, 6, 5, 7, 8, 0 }
  uselistorder i32 %v0_1000667c, { 4, 3, 2, 5, 6, 7, 1, 0 }
  uselistorder i32 %v0_10006670, { 1, 2, 0 }
  uselistorder i32 %v0_1000665c, { 4, 3, 2, 5, 6, 7, 1, 0 }
  uselistorder i32 %v0_10006648, { 4, 3, 2, 5, 6, 7, 1, 0 }
  uselistorder i32 %v0_1000663c, { 1, 2, 0 }
  uselistorder i32 %v1_10006588, { 1, 0 }
  uselistorder i32 %v3_10006580, { 1, 0, 2 }
  uselistorder i32 %v1_1000657c, { 2, 1, 0 }
  uselistorder i32 %v1_10006578, { 1, 0 }
  uselistorder i32 %v0_10006580, { 0, 3, 2, 1 }
  uselistorder i32 %v3_1000655c, { 1, 0, 2 }
  uselistorder i32 %v0_1000653c, { 3, 1, 2, 4, 5, 0, 6, 7, 8 }
  uselistorder i32 %v3_100064c4, { 1, 0, 2 }
  uselistorder i32 %v2_100064ac, { 1, 0, 2 }
  uselistorder i32 %v0_100064ac, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v6_100064a0, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v3_100064f0, { 1, 0 }
  uselistorder i32 %v1_10006520, { 1, 0 }
  uselistorder i32 %v1_10006518, { 1, 0 }
  uselistorder i32 %v1_10006510, { 1, 0 }
  uselistorder i32 %v1_10006530, { 2, 1, 0 }
  uselistorder i32 %v1_10006508, { 1, 0 }
  uselistorder i32 %v4_100064f8, { 1, 0, 2 }
  uselistorder i32 %v1_1000645c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_100063e8, { 1, 0 }
  uselistorder i32 %v4_100063c8, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v1_10006338, { 3, 1, 2, 0 }
  uselistorder i32 %v1_100062c0, { 3, 1, 2, 0 }
  uselistorder i32 %v0_100062ac, { 0, 2, 1, 4, 3, 6, 5, 8, 7, 10, 9, 12, 11, 14, 13, 16, 15, 18, 17, 20, 19, 22, 21, 23, 25, 24, 27, 26, 29, 28, 31, 30, 33, 32, 36, 35, 34, 38, 37, 40, 39, 42, 41, 44, 43, 46, 45, 48, 47, 50, 49, 51, 53, 52, 54, 55 }
  uselistorder i32 %v1_10006294, { 1, 2, 0 }
  uselistorder i32 %v0_10006290, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_1000627c, { 1, 0 }
  uselistorder i32 %v3_1000624c, { 1, 0, 2 }
  uselistorder i32 %v0_100060bc, { 1, 0 }
  uselistorder i32 %v1_1000607c, { 3, 1, 2, 0 }
  uselistorder i32 %v5_1000606c, { 1, 0, 2 }
  uselistorder i32 %v3_10006010, { 1, 0, 3, 2 }
  uselistorder i32 %v1_10005ff8, { 1, 0 }
  uselistorder i32 %v0_10005ff4, { 1, 0 }
  uselistorder i32 %v1_10005ff0, { 1, 0 }
  uselistorder i32 %v0_10005fe0, { 1, 2, 0 }
  uselistorder i32 %v2_10005fa0, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_10005efc, { 2, 4, 3, 5, 0, 1, 7, 6, 8 }
  uselistorder i64* %stack_var_-1916, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 0, 2, 1 }
  uselistorder i32* %stack_var_-1888, { 0, 2, 1, 3 }
  uselistorder i32 %tmp57, { 1, 2, 0 }
  uselistorder i8 %tmp56, { 2, 1, 0 }
  uselistorder i16 %tmp55, { 0, 1, 4, 3, 2 }
  uselistorder i32 %tmp53, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 20, 19, 21, 22, 23, 24, 28, 25, 26, 27, 29, 55, 56, 42, 57, 58, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 30, 31, 32, 33, 34, 35, 39, 36, 37, 38, 40, 41 }
  uselistorder i32* %r8.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 5, 6, 2, 3, 4 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 6, 7, 8, 3, 4, 5 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 29, 30, 31, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 8, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 26, 25, 28, 27, 29, 30, 31, 18, 63, 2, 64, 65, 66, 67, 68, 69, 32, 33, 34, 35, 36, 38, 37, 40, 39, 42, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 1, 0 }
  uselistorder i32* %r29.global-to-local, { 7, 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32* %r28.global-to-local, { 4, 1, 2, 3, 5, 6, 7, 8, 11, 9, 10, 12, 13, 14, 20, 15, 16, 17, 18, 0, 19, 21, 22, 23 }
  uselistorder i32* %r26.global-to-local, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 28, 19, 29, 25, 20, 21, 22, 23, 24, 26, 27, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 2, 3, 4, 9, 5, 6, 7, 10, 11, 8, 15, 16, 17, 18, 19, 20, 21, 22, 12, 13, 14 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 17, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28, 35, 29, 30, 31, 32, 33, 34, 36, 38, 37, 39, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54 }
  uselistorder i32* %ctr.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 17, 18, 7, 8, 12, 19, 20, 13, 14, 15, 16, 9, 10, 11 }
  uselistorder i1* %cr7_lt.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 24, 20, 21, 22, 23, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 25, 26, 27, 28, 29, 30 }
  uselistorder i1* %cr7_eq.global-to-local, { 30, 31, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 18, 23, 19, 20, 21, 22, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 24, 25, 26, 27, 28, 29 }
  uselistorder i16* @global_var_1001b520.94, { 2, 1, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_10008f9c, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10008fd8, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_100086e0, { 1, 0 }
  uselistorder i32 ()* @function_10005c08, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_10009010, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_10009088, { 2, 1, 9, 8, 7, 6, 5, 4, 3, 0 }
  uselistorder i32 16384, { 2, 25, 0, 26, 1, 27, 20, 21, 19, 22, 23, 24, 18, 3, 28, 4, 29, 6, 30, 5, 8, 31, 7, 9, 32, 10, 33, 34, 11, 35, 36, 12, 37, 38, 39, 13, 15, 14, 17, 16 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10004430, { 2, 1, 9, 8, 7, 6, 5, 4, 3, 0 }
  uselistorder i32 (i32, i32)* @function_100043cc, { 2, 1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 0 }
  uselistorder i32 192, { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32 (i32, i32, i32)* @function_10005cf4, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i16* @global_var_1001b5ae.109, { 2, 0, 1 }
  uselistorder i8 64, { 12, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 1024, { 1, 0 }
  uselistorder i32 65536, { 66, 0, 1, 2, 3, 4, 6, 5, 7, 10, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65 }
  uselistorder i32 ()* @function_10005928, { 73, 72, 71, 70, 69, 68, 67, 66, 65, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 0, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @function_100090c8, { 9, 8, 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 2048, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 288, { 0, 1, 5, 6, 2, 7, 3, 4 }
  uselistorder i32 ()* @function_100087e8, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_10005978, { 1, 0 }
  uselistorder i32 (i32)* @function_10007f5c, { 2, 1, 3, 0 }
  uselistorder i32 ()* @function_10008460, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10007618, { 1, 0 }
  uselistorder label %dec_label_pc_10007330, { 1, 0 }
  uselistorder label %dec_label_pc_100069ac, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10006970, { 1, 0 }
  uselistorder label %dec_label_pc_10006968, { 1, 0 }
  uselistorder label %dec_label_pc_10006920, { 1, 0 }
  uselistorder label %dec_label_pc_10006904, { 1, 0 }
  uselistorder label %dec_label_pc_100068e8, { 1, 0 }
  uselistorder label %dec_label_pc_10006894, { 4, 5, 6, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10006864, { 1, 0 }
  uselistorder label %dec_label_pc_10006798, { 3, 0, 4, 2, 5, 1 }
  uselistorder label %dec_label_pc_10006720.dec_label_pc_10006720_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10006700.dec_label_pc_10006700_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_100066f0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000663c, { 1, 0 }
  uselistorder label %dec_label_pc_10006634, { 1, 0 }
  uselistorder label %dec_label_pc_1000647c, { 10, 0, 1, 2, 7, 8, 3, 4, 5, 6, 9, 11 }
  uselistorder label %dec_label_pc_10006470, { 1, 0 }
  uselistorder label %dec_label_pc_1000639c, { 0, 1, 2, 3, 4, 5, 9, 6, 7, 10, 8, 11, 13, 12 }
  uselistorder label %dec_label_pc_10006290.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10006078, { 1, 0 }
}

define i32 @function_1000762c(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_1000762c:
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_1000762c = icmp eq i32* %arg2, null
  %v1_10007634 = mul i32 %arg1, 8
  store i32 %v1_10007634, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001b5e8.152 to i32), i32* %r9.global-to-local, align 4
  br i1 %v3_1000762c, label %dec_label_pc_1000764c, label %dec_label_pc_10007644

dec_label_pc_10007644:                            ; preds = %dec_label_pc_1000762c
  %v1_10007644 = add i32 %v1_10007634, add (i32 ptrtoint (i32* @global_var_1001b5e8.152 to i32), i32 4)
  %v2_10007644 = inttoptr i32 %v1_10007644 to i16*
  %v3_10007644 = load i16, i16* %v2_10007644, align 4
  %v4_10007644 = zext i16 %v3_10007644 to i32
  store i32 %v4_10007644, i32* %arg2, align 4
  %v0_1000764c.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_1000764c.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000764c

dec_label_pc_1000764c:                            ; preds = %dec_label_pc_1000762c, %dec_label_pc_10007644
  %v1_1000764c = phi i32 [ ptrtoint (i32* @global_var_1001b5e8.152 to i32), %dec_label_pc_1000762c ], [ %v1_1000764c.pre, %dec_label_pc_10007644 ]
  %v0_1000764c = phi i32 [ %v1_10007634, %dec_label_pc_1000762c ], [ %v0_1000764c.pre, %dec_label_pc_10007644 ]
  %v2_1000764c = add i32 %v0_1000764c, %v1_1000764c
  %v3_1000764c = inttoptr i32 %v2_1000764c to i32*
  %v4_1000764c = load i32, i32* %v3_1000764c, align 4
  store i32 %v4_1000764c, i32* %r3.global-to-local, align 4
  ret i32 %v4_1000764c

; uselistorder directives
  uselistorder i32 %v1_10007634, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000764c, { 1, 0 }
}

define i32 @function_10007654(i32 %arg1) local_unnamed_addr {
dec_label_pc_10007654:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %r10.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %v1_10007658 = mul i32 %arg1, 8
  %v2_10007660 = add i32 %v1_10007658, ptrtoint (i32* @global_var_1001b5e8.152 to i32)
  %v1_10007668 = add i32 %v1_10007658, add (i32 ptrtoint (i32* @global_var_1001b5e8.152 to i32), i32 4)
  %v2_10007668 = inttoptr i32 %v1_10007668 to i16*
  %v3_10007668 = load i16, i16* %v2_10007668, align 4
  %v3_1000766c = icmp eq i16 %v3_10007668, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000766c, i1* %cr7_eq.global-to-local, align 1
  %v3_10007670 = load i32, i32* @global_var_1001b4e4.153, align 4
  %v1_10007674 = udiv i32 %v3_10007670, 16777216
  store i32 %v1_10007674, i32* @r5, align 4
  %v1_10007678 = urem i32 %v3_10007670, 256
  store i32 %v1_10007678, i32* %r6.global-to-local, align 4
  %v1_1000767c = call i32 @__asm_rlwinm(i32 %v3_10007670, i32 24, i32 24, i32 31)
  %v1_10007680 = call i32 @__asm_rlwinm(i32 %v3_10007670, i32 16, i32 24, i32 31)
  %v0_10007684 = load i32, i32* @lr, align 4
  %v1_10007684 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v2_10007684 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v3_10007684 = or i1 %v1_10007684, %v2_10007684
  call void @__pseudo_cond_branch(i1 %v3_10007684, i32 %v0_10007684)
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_1000768c = inttoptr i32 %v2_10007660 to i32*
  br label %dec_label_pc_1000768c

dec_label_pc_1000768c:                            ; preds = %dec_label_pc_1000768c, %dec_label_pc_10007654
  %v1_10007698 = phi i32 [ %v1_100076cc, %dec_label_pc_1000768c ], [ 0, %dec_label_pc_10007654 ]
  %v2_1000768c = load i32, i32* %v1_1000768c, align 4
  %v2_10007690 = add i32 %v2_1000768c, %v1_10007698
  %v3_10007690 = inttoptr i32 %v2_10007690 to i8*
  %v4_10007690 = load i8, i8* %v3_10007690, align 1
  %v5_10007690 = zext i8 %v4_10007690 to i32
  %v0_10007694 = load i32, i32* %r6.global-to-local, align 4
  %v2_10007694 = xor i32 %v0_10007694, %v5_10007690
  %v3_10007698 = trunc i32 %v2_10007694 to i8
  store i8 %v3_10007698, i8* %v3_10007690, align 1
  %v2_1000769c = load i32, i32* %v1_1000768c, align 4
  %v0_100076a0 = load i32, i32* %r10.global-to-local, align 4
  %v2_100076a0 = add i32 %v0_100076a0, %v2_1000769c
  %v3_100076a0 = inttoptr i32 %v2_100076a0 to i8*
  %v4_100076a0 = load i8, i8* %v3_100076a0, align 1
  %v5_100076a0 = zext i8 %v4_100076a0 to i32
  %v2_100076a4 = xor i32 %v5_100076a0, %v1_1000767c
  %v3_100076a8 = trunc i32 %v2_100076a4 to i8
  store i8 %v3_100076a8, i8* %v3_100076a0, align 1
  %v2_100076ac = load i32, i32* %v1_1000768c, align 4
  %v0_100076b0 = load i32, i32* %r10.global-to-local, align 4
  %v2_100076b0 = add i32 %v0_100076b0, %v2_100076ac
  %v3_100076b0 = inttoptr i32 %v2_100076b0 to i8*
  %v4_100076b0 = load i8, i8* %v3_100076b0, align 1
  %v5_100076b0 = zext i8 %v4_100076b0 to i32
  %v2_100076b4 = xor i32 %v5_100076b0, %v1_10007680
  %v3_100076b8 = trunc i32 %v2_100076b4 to i8
  store i8 %v3_100076b8, i8* %v3_100076b0, align 1
  %v2_100076bc = load i32, i32* %v1_1000768c, align 4
  %v0_100076c0 = load i32, i32* %r10.global-to-local, align 4
  %v2_100076c0 = add i32 %v0_100076c0, %v2_100076bc
  %v3_100076c0 = inttoptr i32 %v2_100076c0 to i8*
  %v4_100076c0 = load i8, i8* %v3_100076c0, align 1
  %v5_100076c0 = zext i8 %v4_100076c0 to i32
  %v0_100076c4 = load i32, i32* @r5, align 4
  %v2_100076c4 = xor i32 %v0_100076c4, %v5_100076c0
  %v3_100076c8 = trunc i32 %v2_100076c4 to i8
  store i8 %v3_100076c8, i8* %v3_100076c0, align 1
  %v0_100076cc = load i32, i32* %r10.global-to-local, align 4
  %v1_100076cc = add i32 %v0_100076cc, 1
  store i32 %v1_100076cc, i32* %r10.global-to-local, align 4
  %v3_100076d0 = load i16, i16* %v2_10007668, align 4
  %v4_100076d0 = zext i16 %v3_100076d0 to i32
  %v2_100076d4 = icmp slt i32 %v4_100076d0, %v1_100076cc
  %v3_100076d4 = icmp sgt i32 %v4_100076d0, %v1_100076cc
  %v4_100076d4 = icmp eq i32 %v4_100076d0, %v1_100076cc
  store i1 %v2_100076d4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100076d4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100076d4, label %dec_label_pc_1000768c, label %dec_label_pc_100076dc

dec_label_pc_100076dc:                            ; preds = %dec_label_pc_1000768c
  ret i32 %v2_10007660

; uselistorder directives
  uselistorder i32 %v4_100076d0, { 2, 1, 0 }
  uselistorder i32 %v1_100076cc, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v3_10007670, { 2, 3, 1, 0 }
  uselistorder i32 %v1_10007658, { 1, 0 }
}

define i32 @function_100076e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_100076e0:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %r10.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %v1_100076e4 = mul i32 %arg1, 8
  %v2_100076ec = add i32 %v1_100076e4, ptrtoint (i32* @global_var_1001b5e8.152 to i32)
  %v1_100076f4 = add i32 %v1_100076e4, add (i32 ptrtoint (i32* @global_var_1001b5e8.152 to i32), i32 4)
  %v2_100076f4 = inttoptr i32 %v1_100076f4 to i16*
  %v3_100076f4 = load i16, i16* %v2_100076f4, align 4
  %v3_100076f8 = icmp eq i16 %v3_100076f4, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100076f8, i1* %cr7_eq.global-to-local, align 1
  %v3_100076fc = load i32, i32* @global_var_1001b4e4.153, align 4
  %v1_10007700 = udiv i32 %v3_100076fc, 16777216
  store i32 %v1_10007700, i32* @r5, align 4
  %v1_10007704 = urem i32 %v3_100076fc, 256
  store i32 %v1_10007704, i32* %r6.global-to-local, align 4
  %v1_10007708 = call i32 @__asm_rlwinm(i32 %v3_100076fc, i32 24, i32 24, i32 31)
  %v1_1000770c = call i32 @__asm_rlwinm(i32 %v3_100076fc, i32 16, i32 24, i32 31)
  %v0_10007710 = load i32, i32* @lr, align 4
  %v1_10007710 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v2_10007710 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v3_10007710 = or i1 %v1_10007710, %v2_10007710
  call void @__pseudo_cond_branch(i1 %v3_10007710, i32 %v0_10007710)
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_10007718 = inttoptr i32 %v2_100076ec to i32*
  br label %dec_label_pc_10007718

dec_label_pc_10007718:                            ; preds = %dec_label_pc_10007718, %dec_label_pc_100076e0
  %v1_10007724 = phi i32 [ %v1_10007758, %dec_label_pc_10007718 ], [ 0, %dec_label_pc_100076e0 ]
  %v2_10007718 = load i32, i32* %v1_10007718, align 4
  %v2_1000771c = add i32 %v2_10007718, %v1_10007724
  %v3_1000771c = inttoptr i32 %v2_1000771c to i8*
  %v4_1000771c = load i8, i8* %v3_1000771c, align 1
  %v5_1000771c = zext i8 %v4_1000771c to i32
  %v0_10007720 = load i32, i32* %r6.global-to-local, align 4
  %v2_10007720 = xor i32 %v0_10007720, %v5_1000771c
  %v3_10007724 = trunc i32 %v2_10007720 to i8
  store i8 %v3_10007724, i8* %v3_1000771c, align 1
  %v2_10007728 = load i32, i32* %v1_10007718, align 4
  %v0_1000772c = load i32, i32* %r10.global-to-local, align 4
  %v2_1000772c = add i32 %v0_1000772c, %v2_10007728
  %v3_1000772c = inttoptr i32 %v2_1000772c to i8*
  %v4_1000772c = load i8, i8* %v3_1000772c, align 1
  %v5_1000772c = zext i8 %v4_1000772c to i32
  %v2_10007730 = xor i32 %v5_1000772c, %v1_10007708
  %v3_10007734 = trunc i32 %v2_10007730 to i8
  store i8 %v3_10007734, i8* %v3_1000772c, align 1
  %v2_10007738 = load i32, i32* %v1_10007718, align 4
  %v0_1000773c = load i32, i32* %r10.global-to-local, align 4
  %v2_1000773c = add i32 %v0_1000773c, %v2_10007738
  %v3_1000773c = inttoptr i32 %v2_1000773c to i8*
  %v4_1000773c = load i8, i8* %v3_1000773c, align 1
  %v5_1000773c = zext i8 %v4_1000773c to i32
  %v2_10007740 = xor i32 %v5_1000773c, %v1_1000770c
  %v3_10007744 = trunc i32 %v2_10007740 to i8
  store i8 %v3_10007744, i8* %v3_1000773c, align 1
  %v2_10007748 = load i32, i32* %v1_10007718, align 4
  %v0_1000774c = load i32, i32* %r10.global-to-local, align 4
  %v2_1000774c = add i32 %v0_1000774c, %v2_10007748
  %v3_1000774c = inttoptr i32 %v2_1000774c to i8*
  %v4_1000774c = load i8, i8* %v3_1000774c, align 1
  %v5_1000774c = zext i8 %v4_1000774c to i32
  %v0_10007750 = load i32, i32* @r5, align 4
  %v2_10007750 = xor i32 %v0_10007750, %v5_1000774c
  %v3_10007754 = trunc i32 %v2_10007750 to i8
  store i8 %v3_10007754, i8* %v3_1000774c, align 1
  %v0_10007758 = load i32, i32* %r10.global-to-local, align 4
  %v1_10007758 = add i32 %v0_10007758, 1
  store i32 %v1_10007758, i32* %r10.global-to-local, align 4
  %v3_1000775c = load i16, i16* %v2_100076f4, align 4
  %v4_1000775c = zext i16 %v3_1000775c to i32
  %v2_10007760 = icmp slt i32 %v4_1000775c, %v1_10007758
  %v3_10007760 = icmp sgt i32 %v4_1000775c, %v1_10007758
  %v4_10007760 = icmp eq i32 %v4_1000775c, %v1_10007758
  store i1 %v2_10007760, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10007760, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007760, label %dec_label_pc_10007718, label %dec_label_pc_10007768

dec_label_pc_10007768:                            ; preds = %dec_label_pc_10007718
  ret i32 %v2_100076ec

; uselistorder directives
  uselistorder i32 %v4_1000775c, { 2, 1, 0 }
  uselistorder i32 %v1_10007758, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v3_100076fc, { 2, 3, 1, 0 }
  uselistorder i32 %v1_100076e4, { 1, 0 }
  uselistorder i32 16777216, { 0, 1, 2, 3, 5, 4, 7, 6 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_1001b5e8.152 to i32), i32 4), { 1, 2, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1001b5e8.152 to i32), { 1, 3, 0, 2, 4 }
}

define i32 @function_1000776c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000776c:
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  store i32 2, i32* @r3, align 4
  store i32 19, i32* %r21.global-to-local, align 4
  store i32 5, i32* %r22.global-to-local, align 4
  store i32 6, i32* %r23.global-to-local, align 4
  store i32 16, i32* %r24.global-to-local, align 4
  store i32 14, i32* %r25.global-to-local, align 4
  store i32 7, i32* %r26.global-to-local, align 4
  store i32 2, i32* %r27.global-to-local, align 4
  store i32 268466112, i32* @lr, align 4
  %v0_100077bc = call i32 @function_10009308()
  store i32 %v0_100077bc, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100077dc.155 to i32), i32* @lr, align 4
  %v3_100077d8 = call i32 @function_10007cdc(i32 ptrtoint (i32* @global_var_1000aecc.154 to i32), i32 2, i32 2)
  store i32 2, i32* @r3, align 4
  %v0_100077e0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100077e0, i32* @global_var_1001b5f0.156, align 4
  %v0_100077e4 = load i32, i32* %r27.global-to-local, align 4
  %v1_100077e4 = trunc i32 %v0_100077e4 to i16
  store i16 %v1_100077e4, i16* bitcast (i32* @global_var_1001b5f4.157 to i16*), align 4
  store i32 268466156, i32* @lr, align 4
  %v0_100077e8 = call i32 @function_10009308()
  store i32 %v0_100077e8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007800.159 to i32), i32* @lr, align 4
  %v3_100077fc = call i32 @function_10007cdc(i32 ptrtoint (i32* @global_var_1000aed0.158 to i32), i32 2, i32 2)
  store i32 29, i32* @r3, align 4
  %v0_10007804 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007804, i32* @global_var_1001b5f8.160, align 4
  %v0_10007808 = load i32, i32* %r27.global-to-local, align 4
  %v1_10007808 = trunc i32 %v0_10007808 to i16
  store i16 %v1_10007808, i16* bitcast (i32* @global_var_1001b5fc.161 to i16*), align 4
  store i32 268466192, i32* @lr, align 4
  %v0_1000780c = call i32 @function_10009308()
  store i32 %v0_1000780c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007824.163 to i32), i32* @lr, align 4
  %v3_10007820 = call i32 @function_10007cdc(i32 ptrtoint (i32* @global_var_1000b038.162 to i32), i32 29, i32 29)
  store i32 6, i32* @r3, align 4
  store i16 29, i16* bitcast (i32* @global_var_1001b604.164 to i16*), align 4
  %v0_10007830 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007830, i32* @global_var_1001b600.165, align 4
  store i32 268466232, i32* @lr, align 4
  %v0_10007834 = call i32 @function_10009308()
  store i32 %v0_10007834, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000784c.167 to i32), i32* @lr, align 4
  %v4_10007848 = call i32 @function_10007cdc(i32 ptrtoint ([7 x i8]* @global_var_1000aed4.166 to i32), i32 6, i32 6)
  store i32 7, i32* @r3, align 4
  %v0_10007850 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007850, i32* @global_var_1001b608.168, align 4
  store i32 8, i32* %r27.global-to-local, align 4
  %v0_10007858 = load i32, i32* %r23.global-to-local, align 4
  %v1_10007858 = trunc i32 %v0_10007858 to i16
  store i16 %v1_10007858, i16* bitcast (i32* @global_var_1001b60c.169 to i16*), align 4
  store i32 268466272, i32* @lr, align 4
  %v0_1000785c = call i32 @function_10009308()
  store i32 %v0_1000785c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007874.171 to i32), i32* @lr, align 4
  %v4_10007870 = call i32 @function_10007cdc(i32 ptrtoint ([8 x i8]* @global_var_1000aedc.170 to i32), i32 7, i32 7)
  store i32 7, i32* @r3, align 4
  %v0_10007878 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007878, i32* @global_var_1001b610.172, align 4
  %v0_1000787c = load i32, i32* %r26.global-to-local, align 4
  %v1_1000787c = trunc i32 %v0_1000787c to i16
  store i16 %v1_1000787c, i16* bitcast (i32* @global_var_1001b614.173 to i16*), align 4
  store i32 268466308, i32* @lr, align 4
  %v0_10007880 = call i32 @function_10009308()
  store i32 %v0_10007880, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007898.175 to i32), i32* @lr, align 4
  %v4_10007894 = call i32 @function_10007cdc(i32 ptrtoint ([8 x i8]* @global_var_1000aee4.174 to i32), i32 7, i32 7)
  store i32 3, i32* @r3, align 4
  %v0_1000789c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000789c, i32* @global_var_1001b618.176, align 4
  %v0_100078a0 = load i32, i32* %r26.global-to-local, align 4
  %v1_100078a0 = trunc i32 %v0_100078a0 to i16
  store i16 %v1_100078a0, i16* bitcast (i32* @global_var_1001b61c.177 to i16*), align 4
  store i32 268466344, i32* @lr, align 4
  %v0_100078a4 = call i32 @function_10009308()
  store i32 %v0_100078a4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100078bc.179 to i32), i32* @lr, align 4
  %v4_100078b8 = call i32 @function_10007cdc(i32 ptrtoint ([4 x i8]* @global_var_1000aeec.178 to i32), i32 3, i32 3)
  store i32 19, i32* @r3, align 4
  store i16 3, i16* bitcast (i32* @global_var_1001b624.180 to i16*), align 4
  %v0_100078c8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100078c8, i32* @global_var_1001b620.181, align 4
  store i32 268466384, i32* @lr, align 4
  %v0_100078cc = call i32 @function_10009308()
  store i32 %v0_100078cc, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100078e4.183 to i32), i32* @lr, align 4
  %v3_100078e0 = call i32 @function_10007cdc(i32 ptrtoint (i32* @global_var_1000aef0.182 to i32), i32 19, i32 19)
  store i32 24, i32* @r3, align 4
  %v0_100078e8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100078e8, i32* @global_var_1001b628.184, align 4
  %v0_100078ec = load i32, i32* %r21.global-to-local, align 4
  %v1_100078ec = trunc i32 %v0_100078ec to i16
  store i16 %v1_100078ec, i16* bitcast (i32* @global_var_1001b62c.185 to i16*), align 4
  store i32 268466420, i32* @lr, align 4
  %v0_100078f0 = call i32 @function_10009308()
  store i32 %v0_100078f0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007908.187 to i32), i32* @lr, align 4
  %v3_10007904 = call i32 @function_10007cdc(i32 ptrtoint (i32* @global_var_1000af04.186 to i32), i32 24, i32 24)
  store i32 9, i32* @r3, align 4
  store i16 24, i16* bitcast (i32* @global_var_1001b634.188 to i16*), align 4
  %v0_10007914 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007914, i32* @global_var_1001b630.189, align 4
  store i32 268466460, i32* @lr, align 4
  %v0_10007918 = call i32 @function_10009308()
  store i32 %v0_10007918, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007930.191 to i32), i32* @lr, align 4
  %v4_1000792c = call i32 @function_10007cdc(i32 ptrtoint ([10 x i8]* @global_var_1000af20.190 to i32), i32 9, i32 9)
  store i32 16, i32* @r3, align 4
  store i16 9, i16* bitcast (i32* @global_var_1001b63c.192 to i16*), align 4
  %v0_1000793c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000793c, i32* @global_var_1001b638.193, align 4
  store i32 268466500, i32* @lr, align 4
  %v0_10007940 = call i32 @function_10009308()
  store i32 %v0_10007940, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007958.195 to i32), i32* @lr, align 4
  %v4_10007954 = call i32 @function_10007cdc(i32 ptrtoint ([17 x i8]* @global_var_1000af2c.194 to i32), i32 16, i32 16)
  store i32 22, i32* @r3, align 4
  %v0_1000795c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000795c, i32* @global_var_1001b640.196, align 4
  %v0_10007960 = load i32, i32* %r24.global-to-local, align 4
  %v1_10007960 = trunc i32 %v0_10007960 to i16
  store i16 %v1_10007960, i16* bitcast (i32* @global_var_1001b644.197 to i16*), align 4
  store i32 268466536, i32* @lr, align 4
  %v0_10007964 = call i32 @function_10009308()
  store i32 %v0_10007964, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000797c.199 to i32), i32* @lr, align 4
  %v4_10007978 = call i32 @function_10007cdc(i32 ptrtoint ([23 x i8]* @global_var_1000af40.198 to i32), i32 22, i32 22)
  store i32 7, i32* @r3, align 4
  store i16 22, i16* bitcast (i32* @global_var_1001b64c.200 to i16*), align 4
  %v0_10007988 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007988, i32* @global_var_1001b648.201, align 4
  store i32 268466576, i32* @lr, align 4
  %v0_1000798c = call i32 @function_10009308()
  store i32 %v0_1000798c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100079a4.203 to i32), i32* @lr, align 4
  %v4_100079a0 = call i32 @function_10007cdc(i32 ptrtoint ([8 x i8]* @global_var_1000af58.202 to i32), i32 7, i32 7)
  store i32 5, i32* @r3, align 4
  %v0_100079a8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100079a8, i32* @global_var_1001b650.204, align 4
  %v0_100079ac = load i32, i32* %r26.global-to-local, align 4
  %v1_100079ac = trunc i32 %v0_100079ac to i16
  store i16 %v1_100079ac, i16* bitcast (i32* @global_var_1001b654.205 to i16*), align 4
  store i32 268466612, i32* @lr, align 4
  %v0_100079b0 = call i32 @function_10009308()
  store i32 %v0_100079b0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100079c8.207 to i32), i32* @lr, align 4
  %v4_100079c4 = call i32 @function_10007cdc(i32 ptrtoint ([6 x i8]* @global_var_1000af60.206 to i32), i32 5, i32 5)
  store i32 4, i32* @r3, align 4
  %v0_100079cc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100079cc, i32* @global_var_1001b658.208, align 4
  %v0_100079d0 = load i32, i32* %r22.global-to-local, align 4
  %v1_100079d0 = trunc i32 %v0_100079d0 to i16
  store i16 %v1_100079d0, i16* bitcast (i32* @global_var_1001b65c.209 to i16*), align 4
  store i32 268466648, i32* @lr, align 4
  %v0_100079d4 = call i32 @function_10009308()
  store i32 %v0_100079d4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100079ec.211 to i32), i32* @lr, align 4
  %v4_100079e8 = call i32 @function_10007cdc(i32 ptrtoint ([5 x i8]* @global_var_1000af68.210 to i32), i32 4, i32 4)
  store i32 6, i32* @r3, align 4
  store i16 4, i16* bitcast (i32* @global_var_1001b664.212 to i16*), align 4
  %v0_100079f8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100079f8, i32* @global_var_1001b660.213, align 4
  store i32 268466688, i32* @lr, align 4
  %v0_100079fc = call i32 @function_10009308()
  store i32 %v0_100079fc, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007a14.215 to i32), i32* @lr, align 4
  %v4_10007a10 = call i32 @function_10007cdc(i32 ptrtoint ([7 x i8]* @global_var_1000af70.214 to i32), i32 6, i32 6)
  store i32 14, i32* @r3, align 4
  %v0_10007a18 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007a18, i32* @global_var_1001b668.216, align 4
  %v0_10007a1c = load i32, i32* %r23.global-to-local, align 4
  %v1_10007a1c = trunc i32 %v0_10007a1c to i16
  store i16 %v1_10007a1c, i16* bitcast (i32* @global_var_1001b66c.217 to i16*), align 4
  store i32 268466724, i32* @lr, align 4
  %v0_10007a20 = call i32 @function_10009308()
  store i32 %v0_10007a20, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007a38.219 to i32), i32* @lr, align 4
  %v4_10007a34 = call i32 @function_10007cdc(i32 ptrtoint ([15 x i8]* @global_var_1000af78.218 to i32), i32 14, i32 14)
  store i32 8, i32* @r3, align 4
  %v0_10007a3c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007a3c, i32* @global_var_1001b670.220, align 4
  %v0_10007a40 = load i32, i32* %r25.global-to-local, align 4
  %v1_10007a40 = trunc i32 %v0_10007a40 to i16
  store i16 %v1_10007a40, i16* bitcast (i32* @global_var_1001b674.221 to i16*), align 4
  store i32 268466760, i32* @lr, align 4
  %v0_10007a44 = call i32 @function_10009308()
  store i32 %v0_10007a44, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007a5c.223 to i32), i32* @lr, align 4
  %v4_10007a58 = call i32 @function_10007cdc(i32 ptrtoint ([9 x i8]* @global_var_1000af88.222 to i32), i32 8, i32 8)
  store i32 7, i32* @r3, align 4
  %v0_10007a60 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007a60, i32* @global_var_1001b6d0.224, align 4
  %v0_10007a64 = load i32, i32* %r27.global-to-local, align 4
  %v1_10007a64 = trunc i32 %v0_10007a64 to i16
  store i16 %v1_10007a64, i16* bitcast (i32* @global_var_1001b6d4.225 to i16*), align 4
  store i32 268466796, i32* @lr, align 4
  %v0_10007a68 = call i32 @function_10009308()
  store i32 %v0_10007a68, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007a80.227 to i32), i32* @lr, align 4
  %v4_10007a7c = call i32 @function_10007cdc(i32 ptrtoint ([8 x i8]* @global_var_1000af94.226 to i32), i32 7, i32 7)
  store i32 16, i32* @r3, align 4
  %v0_10007a84 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007a84, i32* @global_var_1001b6d8.228, align 4
  %v0_10007a88 = load i32, i32* %r26.global-to-local, align 4
  %v1_10007a88 = trunc i32 %v0_10007a88 to i16
  store i16 %v1_10007a88, i16* bitcast (i32* @global_var_1001b6dc.229 to i16*), align 4
  store i32 268466832, i32* @lr, align 4
  %v0_10007a8c = call i32 @function_10009308()
  store i32 %v0_10007a8c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007aa4.231 to i32), i32* @lr, align 4
  %v4_10007aa0 = call i32 @function_10007cdc(i32 ptrtoint ([17 x i8]* @global_var_1000af9c.230 to i32), i32 16, i32 16)
  store i32 8, i32* @r3, align 4
  %v0_10007aa8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007aa8, i32* @global_var_1001b678.232, align 4
  %v0_10007aac = load i32, i32* %r24.global-to-local, align 4
  %v1_10007aac = trunc i32 %v0_10007aac to i16
  store i16 %v1_10007aac, i16* bitcast (i32* @global_var_1001b67c.233 to i16*), align 4
  store i32 268466868, i32* @lr, align 4
  %v0_10007ab0 = call i32 @function_10009308()
  store i32 %v0_10007ab0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007ac8.235 to i32), i32* @lr, align 4
  %v4_10007ac4 = call i32 @function_10007cdc(i32 ptrtoint ([9 x i8]* @global_var_1000afb0.234 to i32), i32 8, i32 8)
  store i32 21, i32* @r3, align 4
  %v0_10007acc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007acc, i32* @global_var_1001b680.236, align 4
  %v0_10007ad0 = load i32, i32* %r27.global-to-local, align 4
  %v1_10007ad0 = trunc i32 %v0_10007ad0 to i16
  store i16 %v1_10007ad0, i16* bitcast (i32* @global_var_1001b684.237 to i16*), align 4
  store i32 268466904, i32* @lr, align 4
  %v0_10007ad4 = call i32 @function_10009308()
  store i32 %v0_10007ad4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007aec.239 to i32), i32* @lr, align 4
  %v3_10007ae8 = call i32 @function_10007cdc(i32 ptrtoint (i32* @global_var_1000b058.238 to i32), i32 21, i32 21)
  store i32 17, i32* @r3, align 4
  store i16 21, i16* bitcast (i32* @global_var_1001b68c.240 to i16*), align 4
  %v0_10007af8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007af8, i32* @global_var_1001b688.241, align 4
  store i32 268466944, i32* @lr, align 4
  %v0_10007afc = call i32 @function_10009308()
  store i32 %v0_10007afc, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007b14.243 to i32), i32* @lr, align 4
  %v4_10007b10 = call i32 @function_10007cdc(i32 ptrtoint ([18 x i8]* @global_var_1000afbc.242 to i32), i32 17, i32 17)
  store i32 12, i32* @r3, align 4
  store i16 17, i16* bitcast (i32* @global_var_1001b694.244 to i16*), align 4
  %v0_10007b20 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007b20, i32* @global_var_1001b690.245, align 4
  store i32 268466984, i32* @lr, align 4
  %v0_10007b24 = call i32 @function_10009308()
  store i32 %v0_10007b24, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007b3c.247 to i32), i32* @lr, align 4
  %v4_10007b38 = call i32 @function_10007cdc(i32 ptrtoint ([13 x i8]* @global_var_1000afd0.246 to i32), i32 12, i32 12)
  store i32 14, i32* @r3, align 4
  store i16 12, i16* bitcast (i32* @global_var_1001b69c.248 to i16*), align 4
  %v0_10007b48 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007b48, i32* @global_var_1001b698.249, align 4
  store i32 268467024, i32* @lr, align 4
  %v0_10007b4c = call i32 @function_10009308()
  store i32 %v0_10007b4c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007b64.251 to i32), i32* @lr, align 4
  %v4_10007b60 = call i32 @function_10007cdc(i32 ptrtoint ([15 x i8]* @global_var_1000afe0.250 to i32), i32 14, i32 14)
  store i32 19, i32* @r3, align 4
  %v0_10007b68 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007b68, i32* @global_var_1001b6a0.252, align 4
  %v0_10007b6c = load i32, i32* %r25.global-to-local, align 4
  %v1_10007b6c = trunc i32 %v0_10007b6c to i16
  store i16 %v1_10007b6c, i16* bitcast (i32* @global_var_1001b6a4.253 to i16*), align 4
  store i32 268467060, i32* @lr, align 4
  %v0_10007b70 = call i32 @function_10009308()
  store i32 %v0_10007b70, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007b88.255 to i32), i32* @lr, align 4
  %v4_10007b84 = call i32 @function_10007cdc(i32 ptrtoint ([20 x i8]* @global_var_1000aff0.254 to i32), i32 19, i32 19)
  store i32 8, i32* @r3, align 4
  %v0_10007b8c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007b8c, i32* @global_var_1001b6a8.256, align 4
  %v0_10007b90 = load i32, i32* %r21.global-to-local, align 4
  %v1_10007b90 = trunc i32 %v0_10007b90 to i16
  store i16 %v1_10007b90, i16* bitcast (i32* @global_var_1001b6ac.257 to i16*), align 4
  store i32 268467096, i32* @lr, align 4
  %v0_10007b94 = call i32 @function_10009308()
  store i32 %v0_10007b94, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007bac.259 to i32), i32* @lr, align 4
  %v4_10007ba8 = call i32 @function_10007cdc(i32 ptrtoint ([9 x i8]* @global_var_1000b004.258 to i32), i32 8, i32 8)
  store i32 5, i32* @r3, align 4
  %v0_10007bb0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007bb0, i32* @global_var_1001b6b0.260, align 4
  %v0_10007bb4 = load i32, i32* %r27.global-to-local, align 4
  %v1_10007bb4 = trunc i32 %v0_10007bb4 to i16
  store i16 %v1_10007bb4, i16* bitcast (i32* @global_var_1001b6b4.261 to i16*), align 4
  store i32 268467132, i32* @lr, align 4
  %v0_10007bb8 = call i32 @function_10009308()
  store i32 %v0_10007bb8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007bd0.263 to i32), i32* @lr, align 4
  %v4_10007bcc = call i32 @function_10007cdc(i32 ptrtoint ([6 x i8]* @global_var_1000b010.262 to i32), i32 5, i32 5)
  store i32 6, i32* @r3, align 4
  %v0_10007bd4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007bd4, i32* @global_var_1001b6b8.264, align 4
  %v0_10007bd8 = load i32, i32* %r22.global-to-local, align 4
  %v1_10007bd8 = trunc i32 %v0_10007bd8 to i16
  store i16 %v1_10007bd8, i16* bitcast (i32* @global_var_1001b6bc.265 to i16*), align 4
  store i32 268467168, i32* @lr, align 4
  %v0_10007bdc = call i32 @function_10009308()
  store i32 %v0_10007bdc, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007bf4.267 to i32), i32* @lr, align 4
  %v4_10007bf0 = call i32 @function_10007cdc(i32 ptrtoint ([7 x i8]* @global_var_1000b018.266 to i32), i32 6, i32 6)
  store i32 23, i32* @r3, align 4
  %v0_10007bf8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007bf8, i32* @global_var_1001b6c0.268, align 4
  %v0_10007bfc = load i32, i32* %r23.global-to-local, align 4
  %v1_10007bfc = trunc i32 %v0_10007bfc to i16
  store i16 %v1_10007bfc, i16* bitcast (i32* @global_var_1001b6c4.269 to i16*), align 4
  store i32 268467204, i32* @lr, align 4
  %v0_10007c00 = call i32 @function_10009308()
  store i32 %v0_10007c00, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007c18.271 to i32), i32* @lr, align 4
  %v4_10007c14 = call i32 @function_10007cdc(i32 ptrtoint ([24 x i8]* @global_var_1000b020.270 to i32), i32 23, i32 23)
  store i16 23, i16* bitcast (i32* @global_var_1001b6cc.272 to i16*), align 4
  %v0_10007c24 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007c24, i32* @global_var_1001b6c8.273, align 4
  ret i32 %v4_10007c14

; uselistorder directives
  uselistorder i16 23, { 2, 3, 4, 1, 0, 5 }
  uselistorder i32 21, { 0, 1, 5, 6, 7, 8, 9, 10, 11, 2, 12, 3, 13, 4, 14 }
  uselistorder i32 (i32, i32, i32)* @function_10007cdc, { 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_10007c58(i8* %arg1) local_unnamed_addr {
dec_label_pc_10007c58:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_10007c58 = load i8, i8* %arg1, align 1
  %v3_10007c64 = icmp eq i8 %v3_10007c58, 0
  %v0_10007c68 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10007c64, i32 %v0_10007c68)
  br label %dec_label_pc_10007c6c

dec_label_pc_10007c6c:                            ; preds = %dec_label_pc_10007c6c, %dec_label_pc_10007c58
  %v0_10007c6c = phi i32 [ %v1_10007c6c, %dec_label_pc_10007c6c ], [ 0, %dec_label_pc_10007c58 ]
  %v1_10007c6c = add i32 %v0_10007c6c, 1
  %v2_10007c70 = add i32 %v1_10007c6c, %tmp
  %v3_10007c70 = inttoptr i32 %v2_10007c70 to i8*
  %v4_10007c70 = load i8, i8* %v3_10007c70, align 1
  %v3_10007c74 = icmp eq i8 %v4_10007c70, 0
  br i1 %v3_10007c74, label %dec_label_pc_10007c7c, label %dec_label_pc_10007c6c

dec_label_pc_10007c7c:                            ; preds = %dec_label_pc_10007c6c
  ret i32 %v1_10007c6c
}

define i32 @function_10007c80(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10007c80:
  %ctr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_10007c80 = load i8, i8* %arg1, align 1
  %v3_10007c84 = icmp eq i8 %v2_10007c80, 0
  br i1 %v3_10007c84, label %dec_label_pc_10007cd0, label %dec_label_pc_10007c8c

dec_label_pc_10007c8c:                            ; preds = %dec_label_pc_10007c80
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10007c90

dec_label_pc_10007c90:                            ; preds = %dec_label_pc_10007c90, %dec_label_pc_10007c8c
  %v0_10007c90 = phi i32 [ %v1_10007c90, %dec_label_pc_10007c90 ], [ 0, %dec_label_pc_10007c8c ]
  %v1_10007c90 = add i32 %v0_10007c90, 1
  store i32 %v1_10007c90, i32* %r9.global-to-local, align 4
  %v2_10007c94 = add i32 %v1_10007c90, %tmp
  %v3_10007c94 = inttoptr i32 %v2_10007c94 to i8*
  %v4_10007c94 = load i8, i8* %v3_10007c94, align 1
  %v3_10007c98 = icmp eq i8 %v4_10007c94, 0
  br i1 %v3_10007c98, label %dec_label_pc_10007ca0, label %dec_label_pc_10007c90

dec_label_pc_10007ca0:                            ; preds = %dec_label_pc_10007c90
  %v3_10007ca0 = icmp eq i32 %v1_10007c90, -1
  br i1 %v3_10007ca0, label %dec_label_pc_10007cc8, label %dec_label_pc_10007ca8

dec_label_pc_10007ca8:                            ; preds = %dec_label_pc_10007ca0
  %phitmp = add i32 %v0_10007c90, 2
  br label %dec_label_pc_10007cac

dec_label_pc_10007cac:                            ; preds = %dec_label_pc_10007cd0, %dec_label_pc_10007ca8
  %v0_10007cac = phi i32 [ 1, %dec_label_pc_10007cd0 ], [ %phitmp, %dec_label_pc_10007ca8 ]
  store i32 %v0_10007cac, i32* %ctr.global-to-local, align 4
  %v2_10007cbc.pre = load i32, i32* @r3, align 4
  %v2_10007cb48 = load i8, i8* %arg1, align 1
  %v1_10007cb810 = add i32 %tmp, 1
  store i32 %v1_10007cb810, i32* %r4.global-to-local, align 4
  %v3_10007cbc11 = inttoptr i32 %v2_10007cbc.pre to i8*
  store i8 %v2_10007cb48, i8* %v3_10007cbc11, align 1
  %v0_10007cc012 = load i32, i32* @r3, align 4
  %v1_10007cc013 = add i32 %v0_10007cc012, 1
  store i32 %v1_10007cc013, i32* %r3.global-to-local, align 4
  %v0_10007cc414 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007cc415 = add i32 %v0_10007cc414, -1
  store i32 %v1_10007cc415, i32* %ctr.global-to-local, align 4
  %v2_10007cc416 = icmp eq i32 %v1_10007cc415, 0
  br i1 %v2_10007cc416, label %dec_label_pc_10007cc8.loopexit, label %dec_label_pc_10007cb4.dec_label_pc_10007cb4_crit_edge

dec_label_pc_10007cb4.dec_label_pc_10007cb4_crit_edge: ; preds = %dec_label_pc_10007cac, %dec_label_pc_10007cb4.dec_label_pc_10007cb4_crit_edge
  %v1_10007cc017 = phi i32 [ %v1_10007cc0, %dec_label_pc_10007cb4.dec_label_pc_10007cb4_crit_edge ], [ %v1_10007cc013, %dec_label_pc_10007cac ]
  %v0_10007cb4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_10007cb4 = inttoptr i32 %v0_10007cb4.pre to i8*
  %v2_10007cb4 = load i8, i8* %v1_10007cb4, align 1
  %v1_10007cb8 = add i32 %v0_10007cb4.pre, 1
  store i32 %v1_10007cb8, i32* %r4.global-to-local, align 4
  %v3_10007cbc = inttoptr i32 %v1_10007cc017 to i8*
  store i8 %v2_10007cb4, i8* %v3_10007cbc, align 1
  %v0_10007cc0 = load i32, i32* %r3.global-to-local, align 4
  %v1_10007cc0 = add i32 %v0_10007cc0, 1
  store i32 %v1_10007cc0, i32* %r3.global-to-local, align 4
  %v0_10007cc4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007cc4 = add i32 %v0_10007cc4, -1
  store i32 %v1_10007cc4, i32* %ctr.global-to-local, align 4
  %v2_10007cc4 = icmp eq i32 %v1_10007cc4, 0
  br i1 %v2_10007cc4, label %dec_label_pc_10007cc8.loopexit, label %dec_label_pc_10007cb4.dec_label_pc_10007cb4_crit_edge

dec_label_pc_10007cc8.loopexit:                   ; preds = %dec_label_pc_10007cb4.dec_label_pc_10007cb4_crit_edge, %dec_label_pc_10007cac
  %v0_10007cc8.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10007cc8

dec_label_pc_10007cc8:                            ; preds = %dec_label_pc_10007cc8.loopexit, %dec_label_pc_10007ca0
  %v0_10007cc8 = phi i32 [ %v0_10007cc8.pre, %dec_label_pc_10007cc8.loopexit ], [ -1, %dec_label_pc_10007ca0 ]
  store i32 %v0_10007cc8, i32* %r3.global-to-local, align 4
  ret i32 %v0_10007cc8

dec_label_pc_10007cd0:                            ; preds = %dec_label_pc_10007c80
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10007cac

; uselistorder directives
  uselistorder i32 %v0_10007cc8, { 1, 0 }
  uselistorder i32 %v1_10007cc4, { 1, 0 }
  uselistorder i32 %v1_10007cc0, { 1, 0 }
  uselistorder i32 %v1_10007c90, { 0, 1, 3, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder label %dec_label_pc_10007cb4.dec_label_pc_10007cb4_crit_edge, { 1, 0 }
}

define i32 @function_10007cdc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10007cdc:
  %ctr.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_10007cdc = icmp eq i32 %arg3, 0
  store i32 %arg3, i32* %ctr.global-to-local, align 4
  %v0_10007ce4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10007cdc, i32 %v0_10007ce4)
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10007cec

dec_label_pc_10007cec:                            ; preds = %dec_label_pc_10007cec, %dec_label_pc_10007cdc
  %v0_10007cec = phi i32 [ %v1_10007cf4, %dec_label_pc_10007cec ], [ 0, %dec_label_pc_10007cdc ]
  %v2_10007cec = add i32 %v0_10007cec, %arg2
  %v3_10007cec = inttoptr i32 %v2_10007cec to i8*
  %v4_10007cec = load i8, i8* %v3_10007cec, align 1
  %v4_10007cf0 = add i32 %v0_10007cec, %arg1
  %v5_10007cf0 = inttoptr i32 %v4_10007cf0 to i8*
  store i8 %v4_10007cec, i8* %v5_10007cf0, align 1
  %v0_10007cf4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007cf4 = add i32 %v0_10007cf4, 1
  store i32 %v1_10007cf4, i32* %r9.global-to-local, align 4
  %v0_10007cf8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007cf8 = add i32 %v0_10007cf8, -1
  store i32 %v1_10007cf8, i32* %ctr.global-to-local, align 4
  %v2_10007cf8 = icmp eq i32 %v1_10007cf8, 0
  br i1 %v2_10007cf8, label %dec_label_pc_10007cfc, label %dec_label_pc_10007cec

dec_label_pc_10007cfc:                            ; preds = %dec_label_pc_10007cec
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_10007cf8, { 1, 0 }
  uselistorder i32 %v1_10007cf4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_10007d00() local_unnamed_addr {
dec_label_pc_10007d00:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10007d00 = load i32, i32* @r4, align 4
  store i32 %v0_10007d00, i32* %r0.global-to-local, align 4
  %v3_10007d00 = icmp eq i32 %v0_10007d00, 0
  store i32 %v0_10007d00, i32* %ctr.global-to-local, align 4
  %v0_10007d08 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10007d00, i32 %v0_10007d08)
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10007d143 = load i32, i32* @r3, align 4
  %v5_10007d144 = inttoptr i32 %v2_10007d143 to i8*
  store i8 0, i8* %v5_10007d144, align 1
  %v0_10007d185 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007d186 = add i32 %v0_10007d185, 1
  store i32 %v1_10007d186, i32* %r9.global-to-local, align 4
  %v0_10007d1c7 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007d1c8 = add i32 %v0_10007d1c7, -1
  store i32 %v1_10007d1c8, i32* %ctr.global-to-local, align 4
  %v2_10007d1c9 = icmp eq i32 %v1_10007d1c8, 0
  br i1 %v2_10007d1c9, label %dec_label_pc_10007d20, label %dec_label_pc_10007d14.dec_label_pc_10007d14_crit_edge

dec_label_pc_10007d14.dec_label_pc_10007d14_crit_edge: ; preds = %dec_label_pc_10007d00, %dec_label_pc_10007d14.dec_label_pc_10007d14_crit_edge
  %v1_10007d1810 = phi i32 [ %v1_10007d18, %dec_label_pc_10007d14.dec_label_pc_10007d14_crit_edge ], [ %v1_10007d186, %dec_label_pc_10007d00 ]
  %v0_10007d14.pre = load i32, i32* %r0.global-to-local, align 4
  %extract.t = trunc i32 %v0_10007d14.pre to i8
  %v2_10007d14 = load i32, i32* @r3, align 4
  %v4_10007d14 = add i32 %v2_10007d14, %v1_10007d1810
  %v5_10007d14 = inttoptr i32 %v4_10007d14 to i8*
  store i8 %extract.t, i8* %v5_10007d14, align 1
  %v0_10007d18 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007d18 = add i32 %v0_10007d18, 1
  store i32 %v1_10007d18, i32* %r9.global-to-local, align 4
  %v0_10007d1c = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007d1c = add i32 %v0_10007d1c, -1
  store i32 %v1_10007d1c, i32* %ctr.global-to-local, align 4
  %v2_10007d1c = icmp eq i32 %v1_10007d1c, 0
  br i1 %v2_10007d1c, label %dec_label_pc_10007d20, label %dec_label_pc_10007d14.dec_label_pc_10007d14_crit_edge

dec_label_pc_10007d20:                            ; preds = %dec_label_pc_10007d14.dec_label_pc_10007d14_crit_edge, %dec_label_pc_10007d00
  %v0_10007d20 = load i32, i32* @r3, align 4
  ret i32 %v0_10007d20

; uselistorder directives
  uselistorder i32 %v1_10007d1c, { 1, 0 }
  uselistorder i32 %v1_10007d18, { 1, 0 }
  uselistorder i32 %v0_10007d00, { 0, 2, 1 }
  uselistorder i32* %r9.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder label %dec_label_pc_10007d14.dec_label_pc_10007d14_crit_edge, { 1, 0 }
}

define i32 @function_10007d24(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10007d24:
  %v3_10007d24 = icmp sgt i32 %arg4, %arg2
  br i1 %v3_10007d24, label %dec_label_pc_10007d30, label %dec_label_pc_10007d38

dec_label_pc_10007d30:                            ; preds = %dec_label_pc_10007d54, %dec_label_pc_10007d24, %dec_label_pc_10007d38
  ret i32 -1

dec_label_pc_10007d38:                            ; preds = %dec_label_pc_10007d24
  %tmp = icmp slt i32 %arg2, 1
  br i1 %tmp, label %dec_label_pc_10007d30, label %dec_label_pc_10007d40

dec_label_pc_10007d40:                            ; preds = %dec_label_pc_10007d38
  br label %dec_label_pc_10007d5c

dec_label_pc_10007d50:                            ; preds = %dec_label_pc_10007d5c
  br label %dec_label_pc_10007d54

dec_label_pc_10007d54:                            ; preds = %dec_label_pc_10007d74, %dec_label_pc_10007d50
  %v0_10007d5c1 = phi i32 [ %v1_10007d60, %dec_label_pc_10007d74 ], [ 0, %dec_label_pc_10007d50 ]
  %v1_10007d54 = add i32 %v0_10007d78, 1
  %v1_10007d58 = add i32 %v0_10007d58, -1
  %v2_10007d58 = icmp eq i32 %v1_10007d58, 0
  br i1 %v2_10007d58, label %dec_label_pc_10007d30, label %dec_label_pc_10007d5c

dec_label_pc_10007d5c:                            ; preds = %dec_label_pc_10007d54, %dec_label_pc_10007d40
  %v0_10007d58 = phi i32 [ %v1_10007d58, %dec_label_pc_10007d54 ], [ %arg2, %dec_label_pc_10007d40 ]
  %v0_10007d78 = phi i32 [ %v1_10007d54, %dec_label_pc_10007d54 ], [ 0, %dec_label_pc_10007d40 ]
  %v0_10007d5c = phi i32 [ %v0_10007d5c1, %dec_label_pc_10007d54 ], [ 0, %dec_label_pc_10007d40 ]
  %v2_10007d5c = add i32 %v0_10007d5c, %arg3
  %v3_10007d5c = inttoptr i32 %v2_10007d5c to i8*
  %v4_10007d5c = load i8, i8* %v3_10007d5c, align 1
  %v1_10007d60 = add i32 %v0_10007d5c, 1
  %v2_10007d64 = add i32 %v0_10007d78, %arg1
  %v3_10007d64 = inttoptr i32 %v2_10007d64 to i8*
  %v4_10007d64 = load i8, i8* %v3_10007d64, align 1
  %v4_10007d6c = icmp eq i8 %v4_10007d64, %v4_10007d5c
  br i1 %v4_10007d6c, label %dec_label_pc_10007d74, label %dec_label_pc_10007d50

dec_label_pc_10007d74:                            ; preds = %dec_label_pc_10007d5c
  %v4_10007d68 = icmp eq i32 %v1_10007d60, %arg4
  br i1 %v4_10007d68, label %dec_label_pc_10007d78, label %dec_label_pc_10007d54

dec_label_pc_10007d78:                            ; preds = %dec_label_pc_10007d74
  %v1_10007d78 = add i32 %v0_10007d78, 1
  ret i32 %v1_10007d78

; uselistorder directives
  uselistorder i32 %v0_10007d5c, { 1, 0 }
  uselistorder label %dec_label_pc_10007d30, { 0, 2, 1 }
}

define i32 @function_10007d80(i32 %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %r5.global-to-local = alloca i32, align 4
  %v0_10007d80.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10007d80

dec_label_pc_10007d80:                            ; preds = %dec_label_pc_10007d9c, %dec_label_pc_10007d80, %bb
  %v0_10007d80 = phi i32 [ %v0_10007d80.pre, %bb ], [ %v1_10007d84, %dec_label_pc_10007d80 ], [ %v1_10007d84, %dec_label_pc_10007d9c ]
  %v1_10007d80 = inttoptr i32 %v0_10007d80 to i8*
  %v2_10007d80 = load i8, i8* %v1_10007d80, align 1
  %v1_10007d84 = add i32 %v0_10007d80, 1
  %v3_10007d90 = icmp eq i8 %v2_10007d80, 32
  br i1 %v3_10007d90, label %dec_label_pc_10007d80, label %dec_label_pc_10007d9c

dec_label_pc_10007d9c:                            ; preds = %dec_label_pc_10007d80
  %v2_10007d80.off = add i8 %v2_10007d80, -9
  %tmp = icmp ult i8 %v2_10007d80.off, 2
  br i1 %tmp, label %dec_label_pc_10007d80, label %dec_label_pc_10007da8

dec_label_pc_10007da8:                            ; preds = %dec_label_pc_10007d9c
  %v3_10007da8 = icmp eq i8 %v2_10007d80, 45
  br i1 %v3_10007da8, label %dec_label_pc_10007e54, label %dec_label_pc_10007db0

dec_label_pc_10007db0:                            ; preds = %dec_label_pc_10007da8
  %v3_10007db0 = icmp eq i8 %v2_10007d80, 43
  br i1 %v3_10007db0, label %dec_label_pc_10007eac, label %dec_label_pc_10007db8

dec_label_pc_10007db8:                            ; preds = %dec_label_pc_10007db0, %dec_label_pc_10007eac
  %v0_10007e4826 = phi i32 [ %v1_10007d84, %dec_label_pc_10007db0 ], [ %v1_10007eb0, %dec_label_pc_10007eac ]
  %v0_10007dd85.in = phi i8 [ %v2_10007d80, %dec_label_pc_10007db0 ], [ %v2_10007eac, %dec_label_pc_10007eac ]
  br label %dec_label_pc_10007dc4

dec_label_pc_10007dc4:                            ; preds = %dec_label_pc_10007e54, %dec_label_pc_10007db8
  %v0_10007e4825 = phi i32 [ %v1_10007e5c, %dec_label_pc_10007e54 ], [ %v0_10007e4826, %dec_label_pc_10007db8 ]
  %v0_10007dd84.in = phi i8 [ %v2_10007e54, %dec_label_pc_10007e54 ], [ %v0_10007dd85.in, %dec_label_pc_10007db8 ]
  %v0_10007e9c = phi i32 [ 1, %dec_label_pc_10007e54 ], [ 0, %dec_label_pc_10007db8 ]
  %v1_10007dd4 = phi i32 [ -2147483648, %dec_label_pc_10007e54 ], [ 2147483647, %dec_label_pc_10007db8 ]
  %v2_10007dc4 = udiv i32 %v1_10007dd4, %arg1
  store i32 0, i32* %r5.global-to-local, align 4
  %v2_10007dd0 = mul i32 %v2_10007dc4, %arg1
  %v2_10007dd4 = sub i32 %v1_10007dd4, %v2_10007dd0
  br label %dec_label_pc_10007dd8

dec_label_pc_10007dd8:                            ; preds = %dec_label_pc_10007e48, %dec_label_pc_10007dc4
  %v0_10007e48 = phi i32 [ %v1_10007e4c, %dec_label_pc_10007e48 ], [ %v0_10007e4825, %dec_label_pc_10007dc4 ]
  %v0_10007e3c = phi i32 [ %v0_10007e3417, %dec_label_pc_10007e48 ], [ 0, %dec_label_pc_10007dc4 ]
  %v0_10007e2c = phi i32 [ %v0_10007e8c11, %dec_label_pc_10007e48 ], [ 0, %dec_label_pc_10007dc4 ]
  %v0_10007e24 = phi i32 [ %v0_10007e809, %dec_label_pc_10007e48 ], [ 0, %dec_label_pc_10007dc4 ]
  %v1_10007e18.in = phi i8 [ %v2_10007e48, %dec_label_pc_10007e48 ], [ %v0_10007dd84.in, %dec_label_pc_10007dc4 ]
  %v1_10007e18 = zext i8 %v1_10007e18.in to i32
  %v1_10007ddc = add nsw i32 %v1_10007e18, -48
  %fold = add nuw nsw i32 %v1_10007e18, 208
  %v1_10007de4 = urem i32 %fold, 256
  %tmp27 = icmp ult i32 %v1_10007de4, 10
  br i1 %tmp27, label %dec_label_pc_10007e1c, label %dec_label_pc_10007df0

dec_label_pc_10007df0:                            ; preds = %dec_label_pc_10007dd8
  %v1_10007df0 = add nuw nsw i32 %v1_10007e18, 191
  %v1_10007df4 = urem i32 %v1_10007df0, 256
  %tmp28 = icmp ult i32 %v1_10007df4, 26
  br i1 %tmp28, label %dec_label_pc_10007e18, label %dec_label_pc_10007e04

dec_label_pc_10007e04:                            ; preds = %dec_label_pc_10007df0
  %v1_10007e04 = add nuw nsw i32 %v1_10007e18, 159
  %v1_10007e08 = urem i32 %v1_10007e04, 256
  %v2_10007e0c = icmp ugt i32 %v1_10007e08, 25
  br i1 %v2_10007e0c, label %dec_label_pc_10007e80, label %dec_label_pc_10007e14

dec_label_pc_10007e14:                            ; preds = %dec_label_pc_10007e04
  br label %dec_label_pc_10007e18

dec_label_pc_10007e18:                            ; preds = %dec_label_pc_10007df0, %dec_label_pc_10007e14
  %v0_10007e18 = phi i32 [ 55, %dec_label_pc_10007df0 ], [ 87, %dec_label_pc_10007e14 ]
  %v2_10007e18 = sub nsw i32 %v1_10007e18, %v0_10007e18
  br label %dec_label_pc_10007e1c

dec_label_pc_10007e1c:                            ; preds = %dec_label_pc_10007dd8, %dec_label_pc_10007e18
  %v1_10007e44 = phi i32 [ %v1_10007ddc, %dec_label_pc_10007dd8 ], [ %v2_10007e18, %dec_label_pc_10007e18 ]
  %v2_10007e1c = icmp slt i32 %v1_10007e44, %arg1
  br i1 %v2_10007e1c, label %dec_label_pc_10007e24, label %dec_label_pc_10007e80

dec_label_pc_10007e24:                            ; preds = %dec_label_pc_10007e1c
  %v1_10007e24 = icmp slt i32 %v0_10007e24, 0
  br i1 %v1_10007e24, label %dec_label_pc_10007e68, label %dec_label_pc_10007e2c

dec_label_pc_10007e2c:                            ; preds = %dec_label_pc_10007e24
  %v3_10007e2c = icmp ugt i32 %v0_10007e2c, %v2_10007dc4
  br i1 %v3_10007e2c, label %dec_label_pc_10007e68, label %dec_label_pc_10007e34

dec_label_pc_10007e34:                            ; preds = %dec_label_pc_10007e2c
  %v4_10007e34 = icmp eq i32 %v0_10007e3c, %v2_10007dc4
  br i1 %v4_10007e34, label %dec_label_pc_10007e70, label %dec_label_pc_10007e3c

dec_label_pc_10007e3c:                            ; preds = %dec_label_pc_10007e70, %dec_label_pc_10007e34
  %v2_10007e3c = mul i32 %v0_10007e3c, %arg1
  %v2_10007e44 = add i32 %v1_10007e44, %v2_10007e3c
  store i32 %v2_10007e44, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10007e48

dec_label_pc_10007e48:                            ; preds = %dec_label_pc_10007e70, %dec_label_pc_10007e68, %dec_label_pc_10007e3c
  %v0_10007e3417 = phi i32 [ %v2_10007dc4, %dec_label_pc_10007e70 ], [ %v0_10007e3c, %dec_label_pc_10007e68 ], [ %v2_10007e44, %dec_label_pc_10007e3c ]
  %v0_10007e8c11 = phi i32 [ %v2_10007dc4, %dec_label_pc_10007e70 ], [ %v0_10007e2c, %dec_label_pc_10007e68 ], [ %v2_10007e44, %dec_label_pc_10007e3c ]
  %v0_10007e809 = phi i32 [ -1, %dec_label_pc_10007e70 ], [ -1, %dec_label_pc_10007e68 ], [ 1, %dec_label_pc_10007e3c ]
  %v1_10007e48 = inttoptr i32 %v0_10007e48 to i8*
  %v2_10007e48 = load i8, i8* %v1_10007e48, align 1
  %v1_10007e4c = add i32 %v0_10007e48, 1
  br label %dec_label_pc_10007dd8

dec_label_pc_10007e54:                            ; preds = %dec_label_pc_10007da8
  %v1_10007e54 = inttoptr i32 %v1_10007d84 to i8*
  %v2_10007e54 = load i8, i8* %v1_10007e54, align 1
  %v1_10007e5c = add i32 %v0_10007d80, 2
  br label %dec_label_pc_10007dc4

dec_label_pc_10007e68:                            ; preds = %dec_label_pc_10007e2c, %dec_label_pc_10007e24
  br label %dec_label_pc_10007e48

dec_label_pc_10007e70:                            ; preds = %dec_label_pc_10007e34
  %v3_10007e70 = icmp sgt i32 %v1_10007e44, %v2_10007dd4
  br i1 %v3_10007e70, label %dec_label_pc_10007e48, label %dec_label_pc_10007e3c

dec_label_pc_10007e80:                            ; preds = %dec_label_pc_10007e1c, %dec_label_pc_10007e04
  %v1_10007e80 = icmp slt i32 %v0_10007e24, 0
  br i1 %v1_10007e80, label %dec_label_pc_10007e9c, label %dec_label_pc_10007e88

dec_label_pc_10007e88:                            ; preds = %dec_label_pc_10007e80
  %v3_10007e88 = icmp eq i32 %v0_10007e9c, 0
  %v0_10007e90 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10007e88, i32 %v0_10007e90)
  %v0_10007e94 = load i32, i32* %r5.global-to-local, align 4
  %v1_10007e94 = sub i32 0, %v0_10007e94
  ret i32 %v1_10007e94

dec_label_pc_10007e9c:                            ; preds = %dec_label_pc_10007e80
  %v1_10007e9c = xor i32 %v0_10007e9c, 1
  %v2_10007ea4 = sub nuw i32 -2147483648, %v1_10007e9c
  ret i32 %v2_10007ea4

dec_label_pc_10007eac:                            ; preds = %dec_label_pc_10007db0
  %v1_10007eac = inttoptr i32 %v1_10007d84 to i8*
  %v2_10007eac = load i8, i8* %v1_10007eac, align 1
  %v1_10007eb0 = add i32 %v0_10007d80, 2
  br label %dec_label_pc_10007db8

; uselistorder directives
  uselistorder i32 %v2_10007e44, { 1, 0, 2 }
  uselistorder i32 %v1_10007e44, { 1, 0, 2 }
  uselistorder i32 %v1_10007e18, { 2, 4, 3, 0, 1 }
  uselistorder i32 %v0_10007e3c, { 2, 0, 1 }
  uselistorder i32 %v0_10007e48, { 1, 0 }
  uselistorder i32 %v2_10007dc4, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_10007d84, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_10007d80, { 1, 0, 3, 2 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32 208, { 1, 0, 2, 3 }
  uselistorder i32 -2147483648, { 1, 0 }
  uselistorder i8 32, { 12, 4, 5, 1, 2, 6, 0, 7, 8, 9, 13, 14, 15, 16, 3, 10, 17, 11, 18 }
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_10007e1c, { 1, 0 }
  uselistorder label %dec_label_pc_10007e18, { 1, 0 }
  uselistorder label %dec_label_pc_10007db8, { 1, 0 }
}

define i32 @function_10007eb8(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10007eb8:
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r27.global-to-local, align 4
  store i32 %arg2, i32* %r28.global-to-local, align 4
  store i32 %arg3, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  %v0_10007ee4 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  br label %dec_label_pc_10007eec

dec_label_pc_10007eec:                            ; preds = %dec_label_pc_10007f18.dec_label_pc_10007eec_crit_edge, %dec_label_pc_10007eb8
  %v0_10007ef0 = phi i32 [ %v0_10007ef0.pre, %dec_label_pc_10007f18.dec_label_pc_10007eec_crit_edge ], [ %arg3, %dec_label_pc_10007eb8 ]
  %v0_10007eec = phi i32 [ %v1_10007f04, %dec_label_pc_10007f18.dec_label_pc_10007eec_crit_edge ], [ %tmp, %dec_label_pc_10007eb8 ]
  store i32 1, i32* @r5, align 4
  store i32 268467964, i32* @lr, align 4
  %v4_10007ef8 = call i32 @function_10008650(i32 %v0_10007ef0, i32 %v0_10007eec, i32 1)
  %v0_10007efc = load i32, i32* @r31, align 4
  %v3_10007f00 = icmp eq i32 %v4_10007ef8, 1
  %v1_10007f04 = add i32 %v0_10007efc, 1
  store i32 %v1_10007f04, i32* @r31, align 4
  %v0_10007f0c = load i32, i32* %r30.global-to-local, align 4
  br i1 %v3_10007f00, label %dec_label_pc_10007f0c, label %dec_label_pc_10007f24

dec_label_pc_10007f0c:                            ; preds = %dec_label_pc_10007eec
  %v1_10007f0c = add i32 %v0_10007f0c, 1
  store i32 %v1_10007f0c, i32* %r30.global-to-local, align 4
  %v0_10007f10 = load i32, i32* %r28.global-to-local, align 4
  %v3_10007f10 = icmp sgt i32 %v0_10007f10, %v1_10007f0c
  br i1 %v3_10007f10, label %dec_label_pc_10007f18, label %dec_label_pc_10007f24

dec_label_pc_10007f18:                            ; preds = %dec_label_pc_10007f0c
  %v1_10007f18 = inttoptr i32 %v0_10007efc to i8*
  %v2_10007f18 = load i8, i8* %v1_10007f18, align 1
  %v3_10007f1c = icmp eq i8 %v2_10007f18, 10
  br i1 %v3_10007f1c, label %dec_label_pc_10007f24, label %dec_label_pc_10007f18.dec_label_pc_10007eec_crit_edge

dec_label_pc_10007f18.dec_label_pc_10007eec_crit_edge: ; preds = %dec_label_pc_10007f18
  %v0_10007ef0.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10007eec

dec_label_pc_10007f24:                            ; preds = %dec_label_pc_10007eec, %dec_label_pc_10007f18, %dec_label_pc_10007f0c
  %v1_10007f2c = phi i32 [ %v1_10007f0c, %dec_label_pc_10007f18 ], [ %v1_10007f0c, %dec_label_pc_10007f0c ], [ %v0_10007f0c, %dec_label_pc_10007eec ]
  %tmp12 = icmp slt i32 %v1_10007f2c, 0
  %v1_10007f24 = zext i1 %tmp12 to i32
  %v2_10007f24 = ashr i32 %v1_10007f2c, 31
  %v3_10007f24 = and i32 %v2_10007f24, -2
  %v4_10007f24 = or i32 %v3_10007f24, %v1_10007f24
  %v2_10007f2c = xor i32 %v4_10007f24, %v1_10007f2c
  %v2_10007f34 = sub i32 %v4_10007f24, %v2_10007f2c
  %tmp13 = icmp slt i32 %v2_10007f34, 0
  %v1_10007f3c = zext i1 %tmp13 to i32
  %v2_10007f3c = ashr i32 %v2_10007f34, 31
  %v3_10007f3c = and i32 %v2_10007f3c, -2
  %v4_10007f3c = or i32 %v3_10007f3c, %v1_10007f3c
  %v0_10007f44 = load i32, i32* %r27.global-to-local, align 4
  %v2_10007f44 = and i32 %v4_10007f3c, %v0_10007f44
  store i32 %v0_10007ee4, i32* @r31, align 4
  ret i32 %v2_10007f44

; uselistorder directives
  uselistorder i32 %v2_10007f34, { 1, 0 }
  uselistorder i32 %v4_10007f24, { 1, 0 }
  uselistorder i32 %v1_10007f2c, { 1, 2, 0 }
  uselistorder i32 %v1_10007f04, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10008650, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_10007f24, { 1, 2, 0 }
}

define i32 @function_10007f5c(i32 %arg1) local_unnamed_addr {
dec_label_pc_10007f5c:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v2_10007f68 = ptrtoint i32* %stack_var_-36 to i32
  %v0_10007f74 = load i32, i32* @r31, align 4
  store i32 16, i32* %stack_var_-40, align 4
  %v0_10007f7c = call i32 @function_10008b34()
  %v2_10007f88 = inttoptr i32 %v0_10007f7c to i32*
  store i32 0, i32* %v2_10007f88, align 4
  store i32 268468120, i32* @lr, align 4
  %v3_10007f94 = call i32 @function_10009104(i32 2, i32 2, i32 0)
  %v3_10007f9c = icmp eq i32 %v3_10007f94, -1
  store i32 %v3_10007f94, i32* @r31, align 4
  br i1 %v3_10007f9c, label %dec_label_pc_10007fec, label %dec_label_pc_10007fb8

dec_label_pc_10007fb8:                            ; preds = %dec_label_pc_10007f5c
  store i32 2, i32* %stack_var_-36, align 4
  store i32 268468176, i32* @lr, align 4
  %v3_10007fcc = call i32 @function_10008f34(i32 %v2_10007f68, i32 16, i32 16)
  %v2_10007fd4 = ptrtoint i32* %stack_var_-40 to i32
  %v0_10007fd8 = load i32, i32* @r31, align 4
  store i32 268468192, i32* @lr, align 4
  %v3_10007fdc = call i32 @function_10008f68(i32 %v0_10007fd8, i32 %v2_10007f68, i32 %v2_10007fd4)
  store i32 268468200, i32* @lr, align 4
  %v0_10007fe4 = call i32 @function_10008418()
  br label %dec_label_pc_10007fec

dec_label_pc_10007fec:                            ; preds = %dec_label_pc_10007f5c, %dec_label_pc_10007fb8
  %v0_10007fec = phi i32 [ 0, %dec_label_pc_10007f5c ], [ 134744072, %dec_label_pc_10007fb8 ]
  store i32 %v0_10007f74, i32* @r31, align 4
  ret i32 %v0_10007fec

; uselistorder directives
  uselistorder i32 %v2_10007f68, { 1, 0 }
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10008f34, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10009104, { 20, 18, 19, 17, 16, 15, 14, 0, 13, 12, 1, 11, 10, 9, 8, 2, 7, 6, 5, 4, 3 }
  uselistorder label %dec_label_pc_10007fec, { 1, 0 }
}

define i32 @function_10008008(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008008:
  %tmp = inttoptr i32 %arg3 to i8*
  store i32 %arg3, i32* @r5, align 4
  %tmp16 = ptrtoint i8* %arg1 to i32
  %v3_10008008 = load i8, i8* %tmp, align 1
  %v3_10008014 = icmp eq i8 %v3_10008008, 0
  br i1 %v3_10008014, label %dec_label_pc_1000802c, label %dec_label_pc_1000801c

dec_label_pc_1000801c:                            ; preds = %dec_label_pc_10008008, %dec_label_pc_1000801c
  %v0_1000801c = phi i32 [ %v1_1000801c, %dec_label_pc_1000801c ], [ 0, %dec_label_pc_10008008 ]
  %v1_1000801c = add i32 %v0_1000801c, 1
  %v3_10008020 = add i32 %v1_1000801c, %arg3
  %v4_10008020 = inttoptr i32 %v3_10008020 to i8*
  %v5_10008020 = load i8, i8* %v4_10008020, align 1
  %v3_10008024 = icmp eq i8 %v5_10008020, 0
  br i1 %v3_10008024, label %dec_label_pc_1000802c, label %dec_label_pc_1000801c

dec_label_pc_1000802c:                            ; preds = %dec_label_pc_1000801c, %dec_label_pc_10008008
  %v0_1000805c11 = phi i32 [ 0, %dec_label_pc_10008008 ], [ %v1_1000801c, %dec_label_pc_1000801c ]
  %v1_1000802c = icmp slt i32 %arg2, 0
  %v1_10008030 = add i32 %arg2, 1
  br i1 %v1_1000802c, label %dec_label_pc_100080a8, label %dec_label_pc_10008044

dec_label_pc_10008044:                            ; preds = %dec_label_pc_1000802c, %dec_label_pc_100080a8, %dec_label_pc_1000809c
  %v2_100080508 = phi i32 [ %v1_10008054, %dec_label_pc_1000809c ], [ 0, %dec_label_pc_100080a8 ], [ 0, %dec_label_pc_1000802c ]
  %v0_100080486 = phi i32 [ %v1_1000804c, %dec_label_pc_1000809c ], [ %tmp16, %dec_label_pc_100080a8 ], [ %tmp16, %dec_label_pc_1000802c ]
  %v0_10008044 = phi i32 [ %v0_10008090, %dec_label_pc_1000809c ], [ 1, %dec_label_pc_100080a8 ], [ %v1_10008030, %dec_label_pc_1000802c ]
  %v1_10008044 = add i32 %v0_10008044, -1
  %v2_10008044 = icmp eq i32 %v1_10008044, 0
  br i1 %v2_10008044, label %dec_label_pc_10008094, label %dec_label_pc_10008048

dec_label_pc_10008048:                            ; preds = %dec_label_pc_10008044, %dec_label_pc_1000808c
  %v2_10008050 = phi i32 [ 0, %dec_label_pc_1000808c ], [ %v2_100080508, %dec_label_pc_10008044 ]
  %v0_10008048 = phi i32 [ %v1_1000804c, %dec_label_pc_1000808c ], [ %v0_100080486, %dec_label_pc_10008044 ]
  %v0_10008090 = phi i32 [ %v1_10008090, %dec_label_pc_1000808c ], [ %v1_10008044, %dec_label_pc_10008044 ]
  %v1_10008048 = inttoptr i32 %v0_10008048 to i8*
  %v2_10008048 = load i8, i8* %v1_10008048, align 1
  %v3_10008048 = zext i8 %v2_10008048 to i32
  %v1_1000804c = add i32 %v0_10008048, 1
  %v3_10008050 = add i32 %v2_10008050, %arg3
  %v4_10008050 = inttoptr i32 %v3_10008050 to i8*
  %v5_10008050 = load i8, i8* %v4_10008050, align 1
  %v6_10008050 = zext i8 %v5_10008050 to i32
  %v1_10008054 = add i32 %v2_10008050, 1
  %v1_10008058 = add nuw nsw i32 %v3_10008048, 191
  %v1_10008060 = urem i32 %v1_10008058, 256
  %v2_10008064 = icmp ugt i32 %v1_10008060, 25
  %v1_10008068 = add nuw nsw i32 %v6_10008050, 191
  %v1_1000806c = urem i32 %v1_10008068, 256
  %v2_10008070 = icmp ugt i32 %v1_1000806c, 25
  br i1 %v2_10008064, label %dec_label_pc_1000807c, label %dec_label_pc_10008078

dec_label_pc_10008078:                            ; preds = %dec_label_pc_10008048
  %v1_10008078 = or i32 %v3_10008048, 96
  br i1 %v2_10008070, label %dec_label_pc_10008084, label %dec_label_pc_10008080

dec_label_pc_1000807c:                            ; preds = %dec_label_pc_10008048
  br i1 %v2_10008070, label %dec_label_pc_10008084, label %dec_label_pc_10008080

dec_label_pc_10008080:                            ; preds = %dec_label_pc_10008078, %dec_label_pc_1000807c
  %v1_1000808414 = phi i32 [ %v1_10008078, %dec_label_pc_10008078 ], [ %v3_10008048, %dec_label_pc_1000807c ]
  %v1_10008080 = or i32 %v6_10008050, 96
  br label %dec_label_pc_10008084

dec_label_pc_10008084:                            ; preds = %dec_label_pc_10008078, %dec_label_pc_1000807c, %dec_label_pc_10008080
  %v1_10008084 = phi i32 [ %v1_10008078, %dec_label_pc_10008078 ], [ %v3_10008048, %dec_label_pc_1000807c ], [ %v1_1000808414, %dec_label_pc_10008080 ]
  %v0_10008084 = phi i32 [ %v6_10008050, %dec_label_pc_10008078 ], [ %v6_10008050, %dec_label_pc_1000807c ], [ %v1_10008080, %dec_label_pc_10008080 ]
  %v4_10008084 = icmp eq i32 %v0_10008084, %v1_10008084
  br i1 %v4_10008084, label %dec_label_pc_1000809c, label %dec_label_pc_1000808c

dec_label_pc_1000808c:                            ; preds = %dec_label_pc_10008084
  %v1_10008090 = add i32 %v0_10008090, -1
  %v2_10008090 = icmp eq i32 %v1_10008090, 0
  br i1 %v2_10008090, label %dec_label_pc_10008094, label %dec_label_pc_10008048

dec_label_pc_10008094:                            ; preds = %dec_label_pc_10008044, %dec_label_pc_1000808c
  ret i32 -1

dec_label_pc_1000809c:                            ; preds = %dec_label_pc_10008084
  %v4_1000805c.le = icmp eq i32 %v0_1000805c11, %v1_10008054
  br i1 %v4_1000805c.le, label %dec_label_pc_100080a0, label %dec_label_pc_10008044

dec_label_pc_100080a0:                            ; preds = %dec_label_pc_1000809c
  %v2_100080a0 = sub i32 %v1_1000804c, %tmp16
  ret i32 %v2_100080a0

dec_label_pc_100080a8:                            ; preds = %dec_label_pc_1000802c
  br label %dec_label_pc_10008044

; uselistorder directives
  uselistorder i32 %v1_10008090, { 1, 0 }
  uselistorder i32 %v1_10008078, { 1, 0 }
  uselistorder i1 %v2_10008070, { 1, 0 }
  uselistorder i32 %v1_10008054, { 1, 0 }
  uselistorder i32 %v3_10008048, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10008090, { 1, 0 }
  uselistorder i32 %v0_10008048, { 1, 0 }
  uselistorder i32 %v2_10008050, { 1, 0 }
  uselistorder i32 %tmp16, { 2, 0, 1 }
  uselistorder i32 25, { 5, 6, 7, 0, 4, 1, 2, 3 }
  uselistorder i32 191, { 1, 0, 2 }
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_10008094, { 1, 0 }
  uselistorder label %dec_label_pc_10008084, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10008080, { 1, 0 }
  uselistorder label %dec_label_pc_10008048, { 1, 0 }
  uselistorder label %dec_label_pc_10008044, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000801c, { 1, 0 }
}

define i32 @function_100080b4(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100080b4:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_100080b4 = load i8, i8* %arg1, align 1
  %v3_100080bc = icmp eq i8 %v2_100080b4, 0
  br i1 %v3_100080bc, label %dec_label_pc_100080d4, label %dec_label_pc_100080c4

dec_label_pc_100080c4:                            ; preds = %dec_label_pc_100080b4, %dec_label_pc_100080c4
  %v0_100080c4 = phi i32 [ %v1_100080c4, %dec_label_pc_100080c4 ], [ 0, %dec_label_pc_100080b4 ]
  %v1_100080c4 = add i32 %v0_100080c4, 1
  %v2_100080c8 = add i32 %v1_100080c4, %tmp
  %v3_100080c8 = inttoptr i32 %v2_100080c8 to i8*
  %v4_100080c8 = load i8, i8* %v3_100080c8, align 1
  %v3_100080cc = icmp eq i8 %v4_100080c8, 0
  br i1 %v3_100080cc, label %dec_label_pc_100080d4, label %dec_label_pc_100080c4

dec_label_pc_100080d4:                            ; preds = %dec_label_pc_100080c4, %dec_label_pc_100080b4
  %v0_100080f4 = phi i32 [ 0, %dec_label_pc_100080b4 ], [ %v1_100080c4, %dec_label_pc_100080c4 ]
  %v1_100080d4 = inttoptr i32 %arg2 to i8*
  %v2_100080d4 = load i8, i8* %v1_100080d4, align 1
  %v3_100080dc = icmp eq i8 %v2_100080d4, 0
  br i1 %v3_100080dc, label %dec_label_pc_100080f4, label %dec_label_pc_100080e4

dec_label_pc_100080e4:                            ; preds = %dec_label_pc_100080d4, %dec_label_pc_100080e4
  %v0_100080e4 = phi i32 [ %v1_100080e4, %dec_label_pc_100080e4 ], [ 0, %dec_label_pc_100080d4 ]
  %v1_100080e4 = add i32 %v0_100080e4, 1
  %v2_100080e8 = add i32 %v1_100080e4, %arg2
  %v3_100080e8 = inttoptr i32 %v2_100080e8 to i8*
  %v4_100080e8 = load i8, i8* %v3_100080e8, align 1
  %v3_100080ec = icmp eq i8 %v4_100080e8, 0
  br i1 %v3_100080ec, label %dec_label_pc_100080f4, label %dec_label_pc_100080e4

dec_label_pc_100080f4:                            ; preds = %dec_label_pc_100080e4, %dec_label_pc_100080d4
  %v0_100080f8 = phi i32 [ 0, %dec_label_pc_100080d4 ], [ %v1_100080e4, %dec_label_pc_100080e4 ]
  %v4_100080f4 = icmp eq i32 %v0_100080f4, %v0_100080f8
  br i1 %v4_100080f4, label %dec_label_pc_1000810c, label %dec_label_pc_10008104

dec_label_pc_10008104:                            ; preds = %dec_label_pc_10008110, %dec_label_pc_100080f4
  ret i32 0

dec_label_pc_1000810c:                            ; preds = %dec_label_pc_100080f4
  %v2_1000810c = icmp eq i32 %v0_100080f4, 0
  br i1 %v2_1000810c, label %dec_label_pc_1000812c, label %dec_label_pc_10008110

dec_label_pc_10008110:                            ; preds = %dec_label_pc_1000810c, %dec_label_pc_10008128
  %v0_10008128 = phi i32 [ %v1_10008128, %dec_label_pc_10008128 ], [ %v0_100080f4, %dec_label_pc_1000810c ]
  %v0_10008118 = phi i32 [ %v1_1000811c, %dec_label_pc_10008128 ], [ %arg2, %dec_label_pc_1000810c ]
  %v0_10008110 = phi i32 [ %v1_10008114, %dec_label_pc_10008128 ], [ %tmp, %dec_label_pc_1000810c ]
  %v1_10008110 = inttoptr i32 %v0_10008110 to i8*
  %v2_10008110 = load i8, i8* %v1_10008110, align 1
  %v1_10008118 = inttoptr i32 %v0_10008118 to i8*
  %v2_10008118 = load i8, i8* %v1_10008118, align 1
  %v4_10008120 = icmp eq i8 %v2_10008110, %v2_10008118
  br i1 %v4_10008120, label %dec_label_pc_10008128, label %dec_label_pc_10008104

dec_label_pc_10008128:                            ; preds = %dec_label_pc_10008110
  %v1_1000811c = add i32 %v0_10008118, 1
  %v1_10008114 = add i32 %v0_10008110, 1
  %v1_10008128 = add i32 %v0_10008128, -1
  %v2_10008128 = icmp eq i32 %v1_10008128, 0
  br i1 %v2_10008128, label %dec_label_pc_1000812c, label %dec_label_pc_10008110

dec_label_pc_1000812c:                            ; preds = %dec_label_pc_10008128, %dec_label_pc_1000810c
  ret i32 1

; uselistorder directives
  uselistorder i32 %v1_10008128, { 1, 0 }
  uselistorder i32 %v0_10008110, { 1, 0 }
  uselistorder i32 %v0_10008118, { 1, 0 }
  uselistorder label %dec_label_pc_10008110, { 1, 0 }
  uselistorder label %dec_label_pc_100080e4, { 1, 0 }
  uselistorder label %dec_label_pc_100080c4, { 1, 0 }
}

define i32 @function_10008134(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008134:
  %cr6_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg3 to i8*
  store i32 %arg3, i32* @r5, align 4
  %tmp17 = sext i8 %arg1 to i32
  store i32 %tmp17, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10008134 = icmp eq i32 %arg3, 0
  %v4_10008138 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10008138, i32* %stack_var_-64, align 4
  %v5_10008138 = ptrtoint i32* %stack_var_-64 to i32
  br i1 %v4_10008134, label %dec_label_pc_10008154, label %dec_label_pc_10008140

dec_label_pc_10008140:                            ; preds = %dec_label_pc_10008134
  %v0_10008140 = load i32, i32* %r3.global-to-local, align 4
  %v3_10008140 = icmp eq i32 %v0_10008140, 0
  store i1 %v3_10008140, i1* %cr6_eq.global-to-local, align 1
  br i1 %v3_10008140, label %dec_label_pc_10008148, label %dec_label_pc_10008160

dec_label_pc_10008148:                            ; preds = %dec_label_pc_10008140
  store i32 48, i32* %r0.global-to-local, align 4
  %v4_1000814c = add i32 %arg3, 1
  %v5_1000814c = inttoptr i32 %v4_1000814c to i8*
  store i8 0, i8* %v5_1000814c, align 1
  %v0_10008150 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008150 = trunc i32 %v0_10008150 to i8
  store i8 %v1_10008150, i8* %tmp, align 1
  br label %dec_label_pc_10008154

dec_label_pc_10008154:                            ; preds = %dec_label_pc_100081e0, %dec_label_pc_10008134, %dec_label_pc_10008148
  store i32 %arg3, i32* %r3.global-to-local, align 4
  ret i32 %arg3

dec_label_pc_10008160:                            ; preds = %dec_label_pc_10008140
  %v2_10008140 = icmp sgt i32 %v0_10008140, 0
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10008160.not = icmp ne i32 %arg2, 10
  %brmerge = or i1 %v2_10008140, %v3_10008160.not
  br i1 %brmerge, label %dec_label_pc_10008174, label %dec_label_pc_10008228

dec_label_pc_10008174:                            ; preds = %dec_label_pc_10008160, %dec_label_pc_10008228
  %v0_100081782 = phi i32 [ %v0_10008140, %dec_label_pc_10008160 ], [ %v1_10008228, %dec_label_pc_10008228 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_10008160 ], [ 1, %dec_label_pc_10008228 ]
  store i32 %storemerge, i32* %r8.global-to-local, align 4
  store i32 32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008178

dec_label_pc_10008178:                            ; preds = %dec_label_pc_100081a4.dec_label_pc_10008178_crit_edge, %dec_label_pc_10008174
  %v1_1000817c = phi i32 [ %v1_1000817c.pre, %dec_label_pc_100081a4.dec_label_pc_10008178_crit_edge ], [ 32, %dec_label_pc_10008174 ]
  %v0_1000817c = phi i32 [ %v0_1000817c.pre, %dec_label_pc_100081a4.dec_label_pc_10008178_crit_edge ], [ %v5_10008138, %dec_label_pc_10008174 ]
  %v1_1000818c = phi i32 [ %v0_10008178.pre, %dec_label_pc_100081a4.dec_label_pc_10008178_crit_edge ], [ %v0_100081782, %dec_label_pc_10008174 ]
  %v2_10008178 = udiv i32 %v1_1000818c, %arg2
  %v2_1000817c = add i32 %v0_1000817c, %v1_1000817c
  store i32 %v2_1000817c, i32* %r11.global-to-local, align 4
  %v1_10008180 = add i32 %v1_1000817c, -1
  store i32 %v1_10008180, i32* %r10.global-to-local, align 4
  %v2_10008184 = mul i32 %v2_10008178, %arg2
  %v3_10008188 = icmp ult i32 %v1_1000818c, %arg2
  store i1 %v3_10008188, i1* %cr6_eq.global-to-local, align 1
  %v2_1000818c = sub i32 %v1_1000818c, %v2_10008184
  store i32 %v2_1000818c, i32* %r9.global-to-local, align 4
  store i32 %v2_10008178, i32* %r3.global-to-local, align 4
  %tmp22 = icmp slt i32 %v2_1000818c, 10
  %storemerge15.v = select i1 %tmp22, i32 48, i32 55
  %storemerge15 = add i32 %storemerge15.v, %v2_1000818c
  %v0_100081a4.off0 = trunc i32 %storemerge15 to i8
  store i32 %storemerge15, i32* %r0.global-to-local, align 4
  %v3_100081a4 = add i32 %v2_1000817c, 8
  %v4_100081a4 = inttoptr i32 %v3_100081a4 to i8*
  store i8 %v0_100081a4.off0, i8* %v4_100081a4, align 1
  %v0_100081a8 = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_100081a8, label %dec_label_pc_100081ac, label %dec_label_pc_100081a4.dec_label_pc_10008178_crit_edge

dec_label_pc_100081a4.dec_label_pc_10008178_crit_edge: ; preds = %dec_label_pc_10008178
  %v0_10008178.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_1000817c.pre = load i32, i32* @r1, align 4
  %v1_1000817c.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008178

dec_label_pc_100081ac:                            ; preds = %dec_label_pc_10008178
  %v0_100081ac = load i32, i32* %r8.global-to-local, align 4
  %v3_100081ac = icmp eq i32 %v0_100081ac, 0
  br i1 %v3_100081ac, label %dec_label_pc_100081b4, label %dec_label_pc_10008214

dec_label_pc_100081b4:                            ; preds = %dec_label_pc_100081ac
  %v0_100081b4 = load i32, i32* %r10.global-to-local, align 4
  %v1_100081b4 = add i32 %v0_100081b4, 1
  store i32 %v1_100081b4, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100081b8

dec_label_pc_100081b8:                            ; preds = %dec_label_pc_10008214, %dec_label_pc_100081b4
  %v1_100081c0 = phi i32 [ %v1_100081bc.pre, %dec_label_pc_10008214 ], [ %v1_100081b4, %dec_label_pc_100081b4 ]
  %v2_100081b8 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_100081b8, i32* %r9.global-to-local, align 4
  %v2_100081bc = add i32 %v1_100081c0, %v2_100081b8
  %v3_100081bc = inttoptr i32 %v2_100081bc to i8*
  %v4_100081bc = load i8, i8* %v3_100081bc, align 1
  %v5_100081bc = zext i8 %v4_100081bc to i32
  store i32 %v5_100081bc, i32* %r0.global-to-local, align 4
  store i32 %v2_100081bc, i32* %r9.global-to-local, align 4
  %v3_100081c4 = icmp eq i8 %v4_100081bc, 0
  br i1 %v3_100081c4, label %dec_label_pc_1000823c, label %dec_label_pc_100081cc

dec_label_pc_100081cc:                            ; preds = %dec_label_pc_100081b8
  store i32 0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100081d0

dec_label_pc_100081d0:                            ; preds = %dec_label_pc_100081d0, %dec_label_pc_100081cc
  %v0_100081d0 = phi i32 [ %v1_100081d0, %dec_label_pc_100081d0 ], [ 0, %dec_label_pc_100081cc ]
  %v1_100081d0 = add i32 %v0_100081d0, 1
  store i32 %v1_100081d0, i32* %r10.global-to-local, align 4
  %v2_100081d4 = add i32 %v1_100081d0, %v2_100081bc
  %v3_100081d4 = inttoptr i32 %v2_100081d4 to i8*
  %v4_100081d4 = load i8, i8* %v3_100081d4, align 1
  %v5_100081d4 = zext i8 %v4_100081d4 to i32
  store i32 %v5_100081d4, i32* %r0.global-to-local, align 4
  %v3_100081d8 = icmp eq i8 %v4_100081d4, 0
  br i1 %v3_100081d8, label %dec_label_pc_100081e0, label %dec_label_pc_100081d0

dec_label_pc_100081e0:                            ; preds = %dec_label_pc_100081d0
  %v3_100081e0 = icmp eq i32 %v1_100081d0, -1
  br i1 %v3_100081e0, label %dec_label_pc_10008154, label %dec_label_pc_100081e8

dec_label_pc_100081e8:                            ; preds = %dec_label_pc_100081e0
  store i32 %arg3, i32* %r11.global-to-local, align 4
  %phitmp = add i32 %v0_100081d0, 2
  br label %dec_label_pc_100081ec

dec_label_pc_100081ec:                            ; preds = %dec_label_pc_1000823c, %dec_label_pc_100081e8
  %v0_100081ec = phi i32 [ 1, %dec_label_pc_1000823c ], [ %phitmp, %dec_label_pc_100081e8 ]
  store i32 %v0_100081ec, i32* %r10.global-to-local, align 4
  store i32 %v0_100081ec, i32* %ctr.global-to-local, align 4
  %v2_100081f424 = load i8, i8* %v3_100081bc, align 1
  %v3_100081f425 = zext i8 %v2_100081f424 to i32
  store i32 %v3_100081f425, i32* %r0.global-to-local, align 4
  %v1_100081f826 = add i32 %v2_100081bc, 1
  store i32 %v1_100081f826, i32* %r9.global-to-local, align 4
  store i8 %v2_100081f424, i8* %tmp, align 1
  %v0_1000820028 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000820029 = add i32 %v0_1000820028, 1
  store i32 %v1_1000820029, i32* %r11.global-to-local, align 4
  %v0_1000820430 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000820431 = add i32 %v0_1000820430, -1
  store i32 %v1_1000820431, i32* %ctr.global-to-local, align 4
  %v2_1000820432 = icmp eq i32 %v1_1000820431, 0
  br i1 %v2_1000820432, label %dec_label_pc_10008208, label %dec_label_pc_100081f4.dec_label_pc_100081f4_crit_edge

dec_label_pc_100081f4.dec_label_pc_100081f4_crit_edge: ; preds = %dec_label_pc_100081ec, %dec_label_pc_100081f4.dec_label_pc_100081f4_crit_edge
  %v1_1000820033 = phi i32 [ %v1_10008200, %dec_label_pc_100081f4.dec_label_pc_100081f4_crit_edge ], [ %v1_1000820029, %dec_label_pc_100081ec ]
  %v0_100081f4.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_100081f4 = inttoptr i32 %v0_100081f4.pre to i8*
  %v2_100081f4 = load i8, i8* %v1_100081f4, align 1
  %v3_100081f4 = zext i8 %v2_100081f4 to i32
  store i32 %v3_100081f4, i32* %r0.global-to-local, align 4
  %v1_100081f8 = add i32 %v0_100081f4.pre, 1
  store i32 %v1_100081f8, i32* %r9.global-to-local, align 4
  %v3_100081fc = inttoptr i32 %v1_1000820033 to i8*
  store i8 %v2_100081f4, i8* %v3_100081fc, align 1
  %v0_10008200 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008200 = add i32 %v0_10008200, 1
  store i32 %v1_10008200, i32* %r11.global-to-local, align 4
  %v0_10008204 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008204 = add i32 %v0_10008204, -1
  store i32 %v1_10008204, i32* %ctr.global-to-local, align 4
  %v2_10008204 = icmp eq i32 %v1_10008204, 0
  br i1 %v2_10008204, label %dec_label_pc_10008208, label %dec_label_pc_100081f4.dec_label_pc_100081f4_crit_edge

dec_label_pc_10008208:                            ; preds = %dec_label_pc_100081f4.dec_label_pc_100081f4_crit_edge, %dec_label_pc_100081ec
  store i32 %arg3, i32* %r3.global-to-local, align 4
  ret i32 %arg3

dec_label_pc_10008214:                            ; preds = %dec_label_pc_100081ac
  %v0_10008214.pre = load i32, i32* @r1, align 4
  %v1_10008214.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_10008214 = add i32 %v1_10008214.pre, %v0_10008214.pre
  store i32 %v2_10008214, i32* %r9.global-to-local, align 4
  store i32 45, i32* %r0.global-to-local, align 4
  %v3_1000821c = add i32 %v2_10008214, 8
  %v4_1000821c = inttoptr i32 %v3_1000821c to i8*
  store i8 45, i8* %v4_1000821c, align 1
  %v1_100081bc.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100081b8

dec_label_pc_10008228:                            ; preds = %dec_label_pc_10008160
  %v1_10008228 = sub i32 0, %v0_10008140
  store i32 %v1_10008228, i32* %r3.global-to-local, align 4
  store i32 32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008174

dec_label_pc_1000823c:                            ; preds = %dec_label_pc_100081b8
  store i32 %arg3, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100081ec

; uselistorder directives
  uselistorder i32 %v1_10008228, { 1, 0 }
  uselistorder i32 %v1_10008204, { 1, 0 }
  uselistorder i32 %v1_10008200, { 1, 0 }
  uselistorder i32 %v0_100081ec, { 1, 0 }
  uselistorder i32 %v1_100081d0, { 0, 1, 3, 2 }
  uselistorder i32 %v2_10008178, { 1, 0 }
  uselistorder i32 %v1_1000818c, { 1, 0, 2 }
  uselistorder i32 %v1_1000817c, { 1, 0 }
  uselistorder i32 %v0_10008140, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 5, 6, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 5, 6, 2, 3, 4 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 8, 9, 2, 3, 5, 4, 7, 6, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 8, 2, 3, 4, 5, 6, 7 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32 %arg3, { 1, 4, 5, 6, 2, 3, 0, 7, 9, 8 }
  uselistorder i32 %arg2, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_100081f4.dec_label_pc_100081f4_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10008174, { 1, 0 }
  uselistorder label %dec_label_pc_10008154, { 0, 2, 1 }
}

define i32 @function_10008248(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008248:
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-32 = alloca i32, align 4
  %v4_10008258 = icmp eq i32 %arg2, -2143521772
  %v2_1000826c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000826c, i32* %stack_var_-32, align 4
  br i1 %v4_10008258, label %dec_label_pc_100082cc, label %dec_label_pc_1000828c

dec_label_pc_1000828c:                            ; preds = %dec_label_pc_10008248
  %v3_1000828c = icmp ugt i32 %arg2, -2143521772
  br i1 %v3_1000828c, label %dec_label_pc_100082a4, label %dec_label_pc_10008294

dec_label_pc_10008294:                            ; preds = %dec_label_pc_1000828c
  %v3_10008298 = icmp eq i32 %arg2, 1077703699
  br i1 %v3_10008298, label %dec_label_pc_100082c0, label %dec_label_pc_100082ec

dec_label_pc_100082a4:                            ; preds = %dec_label_pc_1000828c
  %v1_100082a4 = xor i32 %arg2, -2143551488
  %v3_100082a8 = icmp eq i32 %v1_100082a4, 29717
  br i1 %v3_100082a8, label %dec_label_pc_100082dc, label %dec_label_pc_100082b0

dec_label_pc_100082b0:                            ; preds = %dec_label_pc_100082a4
  %v3_100082b4 = icmp eq i32 %v1_100082a4, 29718
  br i1 %v3_100082b4, label %dec_label_pc_100082e4, label %dec_label_pc_100082ec

dec_label_pc_100082c0:                            ; preds = %dec_label_pc_10008294
  store i32 ptrtoint (i32* @global_var_100082c8.275 to i32), i32* @lr, align 4
  %v2_100082c4 = inttoptr i32 %arg3 to i32*
  %v3_100082c4 = call i32 @function_10008ccc(i32* %v2_100082c4, i32 %arg1)
  br label %dec_label_pc_100082d4

dec_label_pc_100082cc:                            ; preds = %dec_label_pc_10008248
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_100082d0

dec_label_pc_100082d0:                            ; preds = %dec_label_pc_100082e4, %dec_label_pc_100082dc, %dec_label_pc_100082cc
  store i32 268468948, i32* @lr, align 4
  %v0_100082d0 = call i32 @function_10008d68()
  br label %dec_label_pc_100082d4

dec_label_pc_100082d4:                            ; preds = %dec_label_pc_100082c0, %dec_label_pc_100082d0
  %storemerge = phi i32 [ %v0_100082d0, %dec_label_pc_100082d0 ], [ %v3_100082c4, %dec_label_pc_100082c0 ]
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008318

dec_label_pc_100082dc:                            ; preds = %dec_label_pc_100082a4
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_100082d0

dec_label_pc_100082e4:                            ; preds = %dec_label_pc_100082b0
  store i32 2, i32* @r4, align 4
  br label %dec_label_pc_100082d0

dec_label_pc_100082ec:                            ; preds = %dec_label_pc_100082b0, %dec_label_pc_10008294
  %v0_100082fc = call i32 @__asm_mfcr()
  %v1_10008300 = and i32 %v0_100082fc, 268435456
  %v3_10008300 = icmp eq i32 %v1_10008300, 0
  store i32 %v0_100082fc, i32* %r31.global-to-local, align 4
  br i1 %v3_10008300, label %dec_label_pc_10008318, label %dec_label_pc_1000830c

dec_label_pc_1000830c:                            ; preds = %dec_label_pc_100082ec
  %v0_1000830c = call i32 @function_10008b34()
  %v0_10008310 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008310 = inttoptr i32 %v0_1000830c to i32*
  store i32 %v0_10008310, i32* %v2_10008310, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008318

dec_label_pc_10008318:                            ; preds = %dec_label_pc_100082ec, %dec_label_pc_100082d4, %dec_label_pc_1000830c
  %v0_1000831c = phi i32 [ %v0_100082fc, %dec_label_pc_100082ec ], [ %storemerge, %dec_label_pc_100082d4 ], [ -1, %dec_label_pc_1000830c ]
  ret i32 %v0_1000831c

; uselistorder directives
  uselistorder i32 %arg2, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10008318, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100082d4, { 1, 0 }
}

define i32 @function_10008330(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008330:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_10008344 = load i32, i32* @r4, align 4
  %v1_10008344 = add i32 %v0_10008344, -12
  %v2_10008348 = icmp ugt i32 %v1_10008344, 2
  %v2_10008350 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10008350, i32* %stack_var_-32, align 4
  br i1 %v2_10008348, label %dec_label_pc_1000837c, label %dec_label_pc_1000836c

dec_label_pc_1000836c:                            ; preds = %dec_label_pc_10008330
  store i32 268469108, i32* @lr, align 4
  %v2_10008370 = call i32 @function_100083b4(i32 3)
  store i32 %v2_10008370, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000839c

dec_label_pc_1000837c:                            ; preds = %dec_label_pc_10008330
  %v0_10008380 = call i32 @__asm_mfcr()
  %v1_10008384 = and i32 %v0_10008380, 268435456
  %v3_10008384 = icmp eq i32 %v1_10008384, 0
  store i32 %v0_10008380, i32* %r31.global-to-local, align 4
  br i1 %v3_10008384, label %dec_label_pc_1000839c, label %dec_label_pc_10008390

dec_label_pc_10008390:                            ; preds = %dec_label_pc_1000837c
  %v0_10008390 = call i32 @function_10008b34()
  %v0_10008394 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008394 = inttoptr i32 %v0_10008390 to i32*
  store i32 %v0_10008394, i32* %v2_10008394, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000839c

dec_label_pc_1000839c:                            ; preds = %dec_label_pc_1000837c, %dec_label_pc_1000836c, %dec_label_pc_10008390
  %v0_100083a0 = phi i32 [ %v0_10008380, %dec_label_pc_1000837c ], [ %v2_10008370, %dec_label_pc_1000836c ], [ -1, %dec_label_pc_10008390 ]
  ret i32 %v0_100083a0

; uselistorder directives
  uselistorder label %dec_label_pc_1000839c, { 2, 0, 1 }
}

define i32 @function_100083b4(i32 %arg1) local_unnamed_addr {
dec_label_pc_100083b4:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_100083cc = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_100083cc, i32* %stack_var_-32, align 4
  %v0_100083e8 = call i32 @__asm_mfcr()
  %v1_100083ec = and i32 %v0_100083e8, 268435456
  %v3_100083ec = icmp eq i32 %v1_100083ec, 0
  store i32 %v0_100083e8, i32* %r31.global-to-local, align 4
  br i1 %v3_100083ec, label %dec_label_pc_10008404, label %dec_label_pc_100083f8

dec_label_pc_100083f8:                            ; preds = %dec_label_pc_100083b4
  %v0_100083f8 = call i32 @function_10008b34()
  %v0_100083fc = load i32, i32* %r31.global-to-local, align 4
  %v2_100083fc = inttoptr i32 %v0_100083f8 to i32*
  store i32 %v0_100083fc, i32* %v2_100083fc, align 4
  br label %dec_label_pc_10008404

dec_label_pc_10008404:                            ; preds = %dec_label_pc_100083b4, %dec_label_pc_100083f8
  %v0_10008414 = phi i32 [ %v0_100083e8, %dec_label_pc_100083b4 ], [ -1, %dec_label_pc_100083f8 ]
  ret i32 %v0_10008414

; uselistorder directives
  uselistorder label %dec_label_pc_10008404, { 1, 0 }
}

define i32 @function_10008418() local_unnamed_addr {
dec_label_pc_10008418:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008430 = call i32 @__asm_mfcr()
  %v1_10008434 = and i32 %v0_10008430, 268435456
  %v3_10008434 = icmp eq i32 %v1_10008434, 0
  store i32 %v0_10008430, i32* %r31.global-to-local, align 4
  br i1 %v3_10008434, label %dec_label_pc_1000844c, label %dec_label_pc_10008440

dec_label_pc_10008440:                            ; preds = %dec_label_pc_10008418
  %v0_10008440 = call i32 @function_10008b34()
  %v0_10008444 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008444 = inttoptr i32 %v0_10008440 to i32*
  store i32 %v0_10008444, i32* %v2_10008444, align 4
  br label %dec_label_pc_1000844c

dec_label_pc_1000844c:                            ; preds = %dec_label_pc_10008418, %dec_label_pc_10008440
  %v0_1000845c = phi i32 [ %v0_10008430, %dec_label_pc_10008418 ], [ -1, %dec_label_pc_10008440 ]
  ret i32 %v0_1000845c

; uselistorder directives
  uselistorder label %dec_label_pc_1000844c, { 1, 0 }
}

define i32 @function_10008460() local_unnamed_addr {
dec_label_pc_10008460:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008478 = call i32 @__asm_mfcr()
  %v1_1000847c = and i32 %v0_10008478, 268435456
  %v3_1000847c = icmp eq i32 %v1_1000847c, 0
  store i32 %v0_10008478, i32* %r31.global-to-local, align 4
  br i1 %v3_1000847c, label %dec_label_pc_10008494, label %dec_label_pc_10008488

dec_label_pc_10008488:                            ; preds = %dec_label_pc_10008460
  %v0_10008488 = call i32 @function_10008b34()
  %v0_1000848c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000848c = inttoptr i32 %v0_10008488 to i32*
  store i32 %v0_1000848c, i32* %v2_1000848c, align 4
  br label %dec_label_pc_10008494

dec_label_pc_10008494:                            ; preds = %dec_label_pc_10008460, %dec_label_pc_10008488
  %v0_100084a4 = phi i32 [ %v0_10008478, %dec_label_pc_10008460 ], [ -1, %dec_label_pc_10008488 ]
  ret i32 %v0_100084a4

; uselistorder directives
  uselistorder label %dec_label_pc_10008494, { 1, 0 }
}

define i32 @function_100084a8() local_unnamed_addr {
dec_label_pc_100084a8:
  %r31.global-to-local = alloca i32, align 4
  %v0_100084c0 = call i32 @__asm_mfcr()
  %v1_100084c4 = and i32 %v0_100084c0, 268435456
  %v3_100084c4 = icmp eq i32 %v1_100084c4, 0
  store i32 %v0_100084c0, i32* %r31.global-to-local, align 4
  br i1 %v3_100084c4, label %dec_label_pc_100084dc, label %dec_label_pc_100084d0

dec_label_pc_100084d0:                            ; preds = %dec_label_pc_100084a8
  %v0_100084d0 = call i32 @function_10008b34()
  %v0_100084d4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100084d4 = inttoptr i32 %v0_100084d0 to i32*
  store i32 %v0_100084d4, i32* %v2_100084d4, align 4
  br label %dec_label_pc_100084dc

dec_label_pc_100084dc:                            ; preds = %dec_label_pc_100084a8, %dec_label_pc_100084d0
  %v0_100084ec = phi i32 [ %v0_100084c0, %dec_label_pc_100084a8 ], [ -1, %dec_label_pc_100084d0 ]
  ret i32 %v0_100084ec

; uselistorder directives
  uselistorder label %dec_label_pc_100084dc, { 1, 0 }
}

define i32 @function_100084f0() local_unnamed_addr {
dec_label_pc_100084f0:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008508 = call i32 @__asm_mfcr()
  %v1_1000850c = and i32 %v0_10008508, 268435456
  %v3_1000850c = icmp eq i32 %v1_1000850c, 0
  store i32 %v0_10008508, i32* %r31.global-to-local, align 4
  br i1 %v3_1000850c, label %dec_label_pc_10008524, label %dec_label_pc_10008518

dec_label_pc_10008518:                            ; preds = %dec_label_pc_100084f0
  %v0_10008518 = call i32 @function_10008b34()
  %v0_1000851c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000851c = inttoptr i32 %v0_10008518 to i32*
  store i32 %v0_1000851c, i32* %v2_1000851c, align 4
  br label %dec_label_pc_10008524

dec_label_pc_10008524:                            ; preds = %dec_label_pc_100084f0, %dec_label_pc_10008518
  %v0_10008534 = phi i32 [ %v0_10008508, %dec_label_pc_100084f0 ], [ -1, %dec_label_pc_10008518 ]
  ret i32 %v0_10008534

; uselistorder directives
  uselistorder label %dec_label_pc_10008524, { 1, 0 }
}

define i32 @function_10008538(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10008538:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008550 = call i32 @__asm_mfcr()
  %v1_10008554 = and i32 %v0_10008550, 268435456
  %v3_10008554 = icmp eq i32 %v1_10008554, 0
  store i32 %v0_10008550, i32* %r31.global-to-local, align 4
  br i1 %v3_10008554, label %dec_label_pc_1000856c, label %dec_label_pc_10008560

dec_label_pc_10008560:                            ; preds = %dec_label_pc_10008538
  %v0_10008560 = call i32 @function_10008b34()
  %v0_10008564 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008564 = inttoptr i32 %v0_10008560 to i32*
  store i32 %v0_10008564, i32* %v2_10008564, align 4
  br label %dec_label_pc_1000856c

dec_label_pc_1000856c:                            ; preds = %dec_label_pc_10008538, %dec_label_pc_10008560
  %v0_1000857c = phi i32 [ %v0_10008550, %dec_label_pc_10008538 ], [ -1, %dec_label_pc_10008560 ]
  ret i32 %v0_1000857c

; uselistorder directives
  uselistorder label %dec_label_pc_1000856c, { 1, 0 }
}

define i32 @function_10008580(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10008580:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v1_10008594 = and i32 %arg2, 64
  %v3_10008594 = icmp eq i32 %v1_10008594, 0
  br i1 %v3_10008594, label %dec_label_pc_100085c0, label %dec_label_pc_100085a4

dec_label_pc_100085a4:                            ; preds = %dec_label_pc_10008580
  %v2_100085ac = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_100085ac, i32* %stack_var_-32, align 4
  %v0_100085bc = load i32, i32* @r5, align 4
  br label %dec_label_pc_100085c0

dec_label_pc_100085c0:                            ; preds = %dec_label_pc_10008580, %dec_label_pc_100085a4
  %v0_100085c0 = phi i32 [ 0, %dec_label_pc_10008580 ], [ %v0_100085bc, %dec_label_pc_100085a4 ]
  store i32 %v0_100085c0, i32* @r5, align 4
  %v0_100085c8 = call i32 @__asm_mfcr()
  %v1_100085cc = and i32 %v0_100085c8, 268435456
  %v3_100085cc = icmp eq i32 %v1_100085cc, 0
  store i32 %v0_100085c8, i32* %r31.global-to-local, align 4
  br i1 %v3_100085cc, label %dec_label_pc_100085e4, label %dec_label_pc_100085d8

dec_label_pc_100085d8:                            ; preds = %dec_label_pc_100085c0
  %v0_100085d8 = call i32 @function_10008b34()
  %v0_100085dc = load i32, i32* %r31.global-to-local, align 4
  %v2_100085dc = inttoptr i32 %v0_100085d8 to i32*
  store i32 %v0_100085dc, i32* %v2_100085dc, align 4
  br label %dec_label_pc_100085e4

dec_label_pc_100085e4:                            ; preds = %dec_label_pc_100085c0, %dec_label_pc_100085d8
  %v0_100085f4 = phi i32 [ %v0_100085c8, %dec_label_pc_100085c0 ], [ -1, %dec_label_pc_100085d8 ]
  ret i32 %v0_100085f4

; uselistorder directives
  uselistorder label %dec_label_pc_100085e4, { 1, 0 }
  uselistorder label %dec_label_pc_100085c0, { 1, 0 }
}

define i32 @function_100085f8(i32 %arg1) local_unnamed_addr {
dec_label_pc_100085f8:
  store i32 %arg1, i32* @r5, align 4
  %v2_10008604 = call i32 @function_10008580(i32 577, i32 577)
  ret i32 %v2_10008604
}

define i32 @function_10008608(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10008608:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008620 = call i32 @__asm_mfcr()
  %v1_10008624 = and i32 %v0_10008620, 268435456
  %v3_10008624 = icmp eq i32 %v1_10008624, 0
  store i32 %v0_10008620, i32* %r31.global-to-local, align 4
  br i1 %v3_10008624, label %dec_label_pc_1000863c, label %dec_label_pc_10008630

dec_label_pc_10008630:                            ; preds = %dec_label_pc_10008608
  %v0_10008630 = call i32 @function_10008b34()
  %v0_10008634 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008634 = inttoptr i32 %v0_10008630 to i32*
  store i32 %v0_10008634, i32* %v2_10008634, align 4
  br label %dec_label_pc_1000863c

dec_label_pc_1000863c:                            ; preds = %dec_label_pc_10008608, %dec_label_pc_10008630
  %v0_1000864c = phi i32 [ %v0_10008620, %dec_label_pc_10008608 ], [ -1, %dec_label_pc_10008630 ]
  ret i32 %v0_1000864c

; uselistorder directives
  uselistorder label %dec_label_pc_1000863c, { 1, 0 }
}

define i32 @function_10008650(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008650:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008668 = call i32 @__asm_mfcr()
  %v1_1000866c = and i32 %v0_10008668, 268435456
  %v3_1000866c = icmp eq i32 %v1_1000866c, 0
  store i32 %v0_10008668, i32* %r31.global-to-local, align 4
  br i1 %v3_1000866c, label %dec_label_pc_10008684, label %dec_label_pc_10008678

dec_label_pc_10008678:                            ; preds = %dec_label_pc_10008650
  %v0_10008678 = call i32 @function_10008b34()
  %v0_1000867c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000867c = inttoptr i32 %v0_10008678 to i32*
  store i32 %v0_1000867c, i32* %v2_1000867c, align 4
  br label %dec_label_pc_10008684

dec_label_pc_10008684:                            ; preds = %dec_label_pc_10008650, %dec_label_pc_10008678
  %v0_10008694 = phi i32 [ %v0_10008668, %dec_label_pc_10008650 ], [ -1, %dec_label_pc_10008678 ]
  ret i32 %v0_10008694

; uselistorder directives
  uselistorder label %dec_label_pc_10008684, { 1, 0 }
}

define i32 @function_10008698(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008698:
  %r31.global-to-local = alloca i32, align 4
  %v0_100086b0 = call i32 @__asm_mfcr()
  %v1_100086b4 = and i32 %v0_100086b0, 268435456
  %v3_100086b4 = icmp eq i32 %v1_100086b4, 0
  store i32 %v0_100086b0, i32* %r31.global-to-local, align 4
  br i1 %v3_100086b4, label %dec_label_pc_100086cc, label %dec_label_pc_100086c0

dec_label_pc_100086c0:                            ; preds = %dec_label_pc_10008698
  %v0_100086c0 = call i32 @function_10008b34()
  %v0_100086c4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100086c4 = inttoptr i32 %v0_100086c0 to i32*
  store i32 %v0_100086c4, i32* %v2_100086c4, align 4
  br label %dec_label_pc_100086cc

dec_label_pc_100086cc:                            ; preds = %dec_label_pc_10008698, %dec_label_pc_100086c0
  %v0_100086dc = phi i32 [ %v0_100086b0, %dec_label_pc_10008698 ], [ -1, %dec_label_pc_100086c0 ]
  ret i32 %v0_100086dc

; uselistorder directives
  uselistorder label %dec_label_pc_100086cc, { 1, 0 }
}

define i32 @function_100086e0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_100086e0:
  %r31.global-to-local = alloca i32, align 4
  %v0_100086f8 = call i32 @__asm_mfcr()
  %v1_100086fc = and i32 %v0_100086f8, 268435456
  %v3_100086fc = icmp eq i32 %v1_100086fc, 0
  store i32 %v0_100086f8, i32* %r31.global-to-local, align 4
  br i1 %v3_100086fc, label %dec_label_pc_10008714, label %dec_label_pc_10008708

dec_label_pc_10008708:                            ; preds = %dec_label_pc_100086e0
  %v0_10008708 = call i32 @function_10008b34()
  %v0_1000870c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000870c = inttoptr i32 %v0_10008708 to i32*
  store i32 %v0_1000870c, i32* %v2_1000870c, align 4
  br label %dec_label_pc_10008714

dec_label_pc_10008714:                            ; preds = %dec_label_pc_100086e0, %dec_label_pc_10008708
  %v0_10008724 = phi i32 [ %v0_100086f8, %dec_label_pc_100086e0 ], [ -1, %dec_label_pc_10008708 ]
  ret i32 %v0_10008724

; uselistorder directives
  uselistorder label %dec_label_pc_10008714, { 1, 0 }
}

define i32 @function_10008728(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008728:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008740 = call i32 @__asm_mfcr()
  %v1_10008744 = and i32 %v0_10008740, 268435456
  %v3_10008744 = icmp eq i32 %v1_10008744, 0
  store i32 %v0_10008740, i32* %r31.global-to-local, align 4
  br i1 %v3_10008744, label %dec_label_pc_1000875c, label %dec_label_pc_10008750

dec_label_pc_10008750:                            ; preds = %dec_label_pc_10008728
  %v0_10008750 = call i32 @function_10008b34()
  %v0_10008754 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008754 = inttoptr i32 %v0_10008750 to i32*
  store i32 %v0_10008754, i32* %v2_10008754, align 4
  br label %dec_label_pc_1000875c

dec_label_pc_1000875c:                            ; preds = %dec_label_pc_10008728, %dec_label_pc_10008750
  %v0_1000876c = phi i32 [ %v0_10008740, %dec_label_pc_10008728 ], [ -1, %dec_label_pc_10008750 ]
  ret i32 %v0_1000876c

; uselistorder directives
  uselistorder label %dec_label_pc_1000875c, { 1, 0 }
}

define i32 @function_10008770(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008770:
  %r31.global-to-local = alloca i32, align 4
  %v3_10008770 = icmp eq i32 %arg2, 0
  br i1 %v3_10008770, label %dec_label_pc_100087b0, label %dec_label_pc_10008798

dec_label_pc_10008798:                            ; preds = %dec_label_pc_10008770
  store i32 -1, i32* %r31.global-to-local, align 4
  %tmp5 = icmp ult i32 %arg1, 3
  br i1 %tmp5, label %dec_label_pc_100087b0, label %dec_label_pc_100087a0

dec_label_pc_100087a0:                            ; preds = %dec_label_pc_10008798
  %v0_100087a0 = call i32 @function_10008b34()
  %v2_100087a8 = inttoptr i32 %v0_100087a0 to i32*
  store i32 22, i32* %v2_100087a8, align 4
  %v0_100087d4.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100087d0

dec_label_pc_100087b0:                            ; preds = %dec_label_pc_10008798, %dec_label_pc_10008770
  %v0_100087b4 = call i32 @__asm_mfcr()
  %v1_100087b8 = and i32 %v0_100087b4, 268435456
  %v3_100087b8 = icmp eq i32 %v1_100087b8, 0
  store i32 %v0_100087b4, i32* %r31.global-to-local, align 4
  br i1 %v3_100087b8, label %dec_label_pc_100087d0, label %dec_label_pc_100087c4

dec_label_pc_100087c4:                            ; preds = %dec_label_pc_100087b0
  %v0_100087c4 = call i32 @function_10008b34()
  %v0_100087c8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100087c8 = inttoptr i32 %v0_100087c4 to i32*
  store i32 %v0_100087c8, i32* %v2_100087c8, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100087d0

dec_label_pc_100087d0:                            ; preds = %dec_label_pc_100087b0, %dec_label_pc_100087a0, %dec_label_pc_100087c4
  %v0_100087d4 = phi i32 [ %v0_100087b4, %dec_label_pc_100087b0 ], [ %v0_100087d4.pre, %dec_label_pc_100087a0 ], [ -1, %dec_label_pc_100087c4 ]
  ret i32 %v0_100087d4

; uselistorder directives
  uselistorder i32* %r31.global-to-local, { 2, 3, 4, 0, 1 }
  uselistorder label %dec_label_pc_100087d0, { 2, 0, 1 }
}

define i32 @function_100087e8() local_unnamed_addr {
dec_label_pc_100087e8:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008800 = call i32 @__asm_mfcr()
  %v1_10008804 = and i32 %v0_10008800, 268435456
  %v3_10008804 = icmp eq i32 %v1_10008804, 0
  store i32 %v0_10008800, i32* %r31.global-to-local, align 4
  br i1 %v3_10008804, label %dec_label_pc_1000881c, label %dec_label_pc_10008810

dec_label_pc_10008810:                            ; preds = %dec_label_pc_100087e8
  %v0_10008810 = call i32 @function_10008b34()
  %v0_10008814 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008814 = inttoptr i32 %v0_10008810 to i32*
  store i32 %v0_10008814, i32* %v2_10008814, align 4
  br label %dec_label_pc_1000881c

dec_label_pc_1000881c:                            ; preds = %dec_label_pc_100087e8, %dec_label_pc_10008810
  %v0_1000882c = phi i32 [ %v0_10008800, %dec_label_pc_100087e8 ], [ -1, %dec_label_pc_10008810 ]
  ret i32 %v0_1000882c

; uselistorder directives
  uselistorder label %dec_label_pc_1000881c, { 1, 0 }
}

define i32 @function_10008830(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008830:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008848 = call i32 @__asm_mfcr()
  %v1_1000884c = and i32 %v0_10008848, 268435456
  %v3_1000884c = icmp eq i32 %v1_1000884c, 0
  store i32 %v0_10008848, i32* %r31.global-to-local, align 4
  br i1 %v3_1000884c, label %dec_label_pc_10008864, label %dec_label_pc_10008858

dec_label_pc_10008858:                            ; preds = %dec_label_pc_10008830
  %v0_10008858 = call i32 @function_10008b34()
  %v0_1000885c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000885c = inttoptr i32 %v0_10008858 to i32*
  store i32 %v0_1000885c, i32* %v2_1000885c, align 4
  br label %dec_label_pc_10008864

dec_label_pc_10008864:                            ; preds = %dec_label_pc_10008830, %dec_label_pc_10008858
  %v0_10008874 = phi i32 [ %v0_10008848, %dec_label_pc_10008830 ], [ -1, %dec_label_pc_10008858 ]
  ret i32 %v0_10008874

; uselistorder directives
  uselistorder label %dec_label_pc_10008864, { 1, 0 }
}

define i32 @function_10008878(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008878:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008890 = call i32 @__asm_mfcr()
  %v1_10008894 = and i32 %v0_10008890, 268435456
  %v3_10008894 = icmp eq i32 %v1_10008894, 0
  store i32 %v0_10008890, i32* %r31.global-to-local, align 4
  br i1 %v3_10008894, label %dec_label_pc_100088ac, label %dec_label_pc_100088a0

dec_label_pc_100088a0:                            ; preds = %dec_label_pc_10008878
  %v0_100088a0 = call i32 @function_10008b34()
  %v0_100088a4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100088a4 = inttoptr i32 %v0_100088a0 to i32*
  store i32 %v0_100088a4, i32* %v2_100088a4, align 4
  br label %dec_label_pc_100088ac

dec_label_pc_100088ac:                            ; preds = %dec_label_pc_10008878, %dec_label_pc_100088a0
  %v0_100088bc = phi i32 [ %v0_10008890, %dec_label_pc_10008878 ], [ -1, %dec_label_pc_100088a0 ]
  ret i32 %v0_100088bc

; uselistorder directives
  uselistorder label %dec_label_pc_100088ac, { 1, 0 }
}

define i32 @function_100088c0(i32* %arg1) local_unnamed_addr {
dec_label_pc_100088c0:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_100088dc = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_100088dc, i32* @r30, align 4
  %v2_100088e4 = load i32, i32* %arg1, align 4
  store i32 %v2_100088dc, i32* @r3, align 4
  %v3_100088f0 = icmp eq i32 %v2_100088e4, -1
  br i1 %v3_100088f0, label %dec_label_pc_100088f8, label %dec_label_pc_1000890c

dec_label_pc_100088f8:                            ; preds = %dec_label_pc_100088c0
  %v0_100088f8 = call i32 @function_10008b34()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_10008904 = inttoptr i32 %v0_100088f8 to i32*
  store i32 9, i32* %v2_10008904, align 4
  %v0_10008950.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000894c

dec_label_pc_1000890c:                            ; preds = %dec_label_pc_100088c0
  %v3_1000890c = call i32 @function_10009e6c(i32 %v2_100088dc, i32 ptrtoint ([3 x i8]* @global_var_10009e64.277 to i32))
  %v0_10008914 = call i32 @function_10009e64()
  %v0_1000891c = load i32, i32* @r31, align 4
  %v1_1000891c = inttoptr i32 %v0_1000891c to i32*
  %v2_1000891c = load i32, i32* %v1_1000891c, align 4
  store i32 %v2_1000891c, i32* @r29, align 4
  store i32 -1, i32* %v1_1000891c, align 4
  store i32 %v2_100088dc, i32* @r3, align 4
  %v2_1000892c = call i32 @function_10009e6c(i32 %v2_100088dc, i32 1)
  %v0_10008930 = load i32, i32* @r31, align 4
  %v1_10008930 = add i32 %v0_10008930, 12
  %v2_10008930 = inttoptr i32 %v1_10008930 to i32*
  %v3_10008930 = load i32, i32* %v2_10008930, align 4
  store i32 %v3_10008930, i32* @r3, align 4
  store i32 268470584, i32* @lr, align 4
  %v0_10008934 = call i32 @function_100094d0()
  %v0_10008938 = load i32, i32* @r31, align 4
  store i32 %v0_10008938, i32* @r3, align 4
  store i32 268470592, i32* @lr, align 4
  %v0_1000893c = call i32 @function_100094d0()
  store i32 268470600, i32* @lr, align 4
  %v0_10008944 = call i32 @function_10008418()
  store i32 %v0_10008944, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000894c

dec_label_pc_1000894c:                            ; preds = %dec_label_pc_100088f8, %dec_label_pc_1000890c
  %v0_10008950 = phi i32 [ %v0_10008950.pre, %dec_label_pc_100088f8 ], [ %v0_10008944, %dec_label_pc_1000890c ]
  ret i32 %v0_10008950

; uselistorder directives
  uselistorder i32 %v2_100088dc, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_1000894c, { 1, 0 }
}

define i32 @function_10008964(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008964:
  %r0.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-120 = alloca i32, align 4
  %v0_10008964 = load i32, i32* @lr, align 4
  store i32 %v0_10008964, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 268470660, i32* @lr, align 4
  %v2_10008980 = call i32 @function_10008580(i32 18432, i32 18432)
  store i32 %v2_10008980, i32* @r29, align 4
  %v1_10008984 = icmp slt i32 %v2_10008980, 0
  br i1 %v1_10008984, label %dec_label_pc_10008a5c, label %dec_label_pc_1000898c

dec_label_pc_1000898c:                            ; preds = %dec_label_pc_10008964
  %v2_1000898c = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_1000898c, i32* @r4, align 4
  store i32 268470676, i32* @lr, align 4
  %v1_10008990 = call i32 @function_1000a240(i32 %v2_1000898c)
  %v1_10008994 = icmp slt i32 %v1_10008990, 0
  br i1 %v1_10008994, label %dec_label_pc_100089b8, label %dec_label_pc_1000899c

dec_label_pc_1000899c:                            ; preds = %dec_label_pc_1000898c
  %v0_1000899c = load i32, i32* @r29, align 4
  store i32 2, i32* @r4, align 4
  store i32 268470704, i32* @lr, align 4
  %v2_100089ac = call i32 @function_10008330(i32 %v0_1000899c)
  %tmp5 = icmp sgt i32 %v2_100089ac, -1
  br i1 %tmp5, label %dec_label_pc_100089d8, label %dec_label_pc_100089b8

dec_label_pc_100089b8:                            ; preds = %dec_label_pc_1000899c, %dec_label_pc_1000898c
  %v0_100089b8 = call i32 @function_10008b34()
  store i32 0, i32* @r31, align 4
  store i32 %v0_100089b8, i32* @r28, align 4
  %v1_100089c8 = inttoptr i32 %v0_100089b8 to i32*
  %v2_100089c8 = load i32, i32* %v1_100089c8, align 4
  store i32 %v2_100089c8, i32* @r29, align 4
  store i32 268470736, i32* @lr, align 4
  %v0_100089cc = call i32 @function_10008418()
  %v0_100089d0 = load i32, i32* @r29, align 4
  %v1_100089d0 = load i32, i32* @r28, align 4
  %v2_100089d0 = inttoptr i32 %v1_100089d0 to i32*
  store i32 %v0_100089d0, i32* %v2_100089d0, align 4
  br label %dec_label_pc_10008a5c

dec_label_pc_100089d8:                            ; preds = %dec_label_pc_1000899c
  store i32 48, i32* @r3, align 4
  store i32 268470752, i32* @lr, align 4
  %v0_100089dc = call i32 @function_10009308()
  store i32 %v0_100089dc, i32* %r31.global-to-local, align 4
  %v3_100089e0 = icmp eq i32 %v0_100089dc, 0
  br i1 %v3_100089e0, label %dec_label_pc_10008a34, label %dec_label_pc_100089e8

dec_label_pc_100089e8:                            ; preds = %dec_label_pc_100089d8
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_100089ec = load i32, i32* @r29, align 4
  %v2_100089ec = inttoptr i32 %v0_100089dc to i32*
  store i32 %v0_100089ec, i32* %v2_100089ec, align 4
  %v0_100089f0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100089f0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100089f0 = add i32 %v1_100089f0, 4
  %v3_100089f0 = inttoptr i32 %v2_100089f0 to i32*
  store i32 %v0_100089f0, i32* %v3_100089f0, align 4
  %v0_100089f4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100089f4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100089f4 = add i32 %v1_100089f4, 16
  %v3_100089f4 = inttoptr i32 %v2_100089f4 to i32*
  store i32 %v0_100089f4, i32* %v3_100089f4, align 4
  %v0_100089f8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100089f8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100089f8 = add i32 %v1_100089f8, 8
  %v3_100089f8 = inttoptr i32 %v2_100089f8 to i32*
  store i32 %v0_100089f8, i32* %v3_100089f8, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_10008a00 = icmp ugt i32 %tmp, 511
  %v1_10008a04 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008a04 = add i32 %v1_10008a04, 20
  %v3_10008a04 = inttoptr i32 %v2_10008a04 to i32*
  store i32 %tmp, i32* %v3_10008a04, align 4
  br i1 %v2_10008a00, label %dec_label_pc_10008a14, label %dec_label_pc_10008a0c

dec_label_pc_10008a0c:                            ; preds = %dec_label_pc_100089e8
  store i32 512, i32* %r0.global-to-local, align 4
  %v1_10008a10 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008a10 = add i32 %v1_10008a10, 20
  %v3_10008a10 = inttoptr i32 %v2_10008a10 to i32*
  store i32 512, i32* %v3_10008a10, align 4
  br label %dec_label_pc_10008a14

dec_label_pc_10008a14:                            ; preds = %dec_label_pc_100089e8, %dec_label_pc_10008a0c
  %v0_10008a14 = load i32, i32* %r31.global-to-local, align 4
  %v1_10008a14 = add i32 %v0_10008a14, 20
  %v2_10008a14 = inttoptr i32 %v1_10008a14 to i32*
  %v3_10008a14 = load i32, i32* %v2_10008a14, align 4
  store i32 268470816, i32* @lr, align 4
  %v2_10008a1c = call i32 @function_10009460(i32 1, i32 %v3_10008a14)
  %v3_10008a20 = icmp eq i32 %v2_10008a1c, 0
  %v1_10008a24 = load i32, i32* @r31, align 4
  %v2_10008a24 = add i32 %v1_10008a24, 12
  %v3_10008a24 = inttoptr i32 %v2_10008a24 to i32*
  store i32 %v2_10008a1c, i32* %v3_10008a24, align 4
  br i1 %v3_10008a20, label %dec_label_pc_10008a2c, label %dec_label_pc_10008a50

dec_label_pc_10008a2c:                            ; preds = %dec_label_pc_10008a14
  %v0_10008a2c = load i32, i32* @r31, align 4
  store i32 %v0_10008a2c, i32* @r3, align 4
  store i32 268470836, i32* @lr, align 4
  %v0_10008a30 = call i32 @function_100094d0()
  br label %dec_label_pc_10008a34

dec_label_pc_10008a34:                            ; preds = %dec_label_pc_100089d8, %dec_label_pc_10008a2c
  store i32 0, i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_10008a40.280 to i32), i32* @lr, align 4
  %v0_10008a3c = call i32 @function_10008418()
  %v0_10008a40 = call i32 @function_10008b34()
  store i32 12, i32* %r0.global-to-local, align 4
  %v2_10008a48 = inttoptr i32 %v0_10008a40 to i32*
  store i32 12, i32* %v2_10008a48, align 4
  br label %dec_label_pc_10008a5c

dec_label_pc_10008a50:                            ; preds = %dec_label_pc_10008a14
  %v0_10008a58 = call i32 @function_10009e64()
  br label %dec_label_pc_10008a5c

dec_label_pc_10008a5c:                            ; preds = %dec_label_pc_10008964, %dec_label_pc_10008a34, %dec_label_pc_100089b8, %dec_label_pc_10008a50
  store i32 %v0_10008964, i32* %r0.global-to-local, align 4
  %v0_10008a60 = load i32, i32* @r31, align 4
  ret i32 %v0_10008a60

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8 }
  uselistorder i32 (i32, i32)* @function_10009460, { 41, 42, 26, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 0, 27, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 512, { 6, 8, 7, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 ()* @function_10008418, { 17, 16, 15, 34, 33, 32, 31, 29, 30, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 14, 1, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 0 }
  uselistorder i32 18432, { 1, 0 }
  uselistorder label %dec_label_pc_10008a5c, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10008a34, { 1, 0 }
  uselistorder label %dec_label_pc_10008a14, { 1, 0 }
}

define i32 @function_10008a74(i32* %arg1) local_unnamed_addr {
dec_label_pc_10008a74:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  %v0_10008a78 = load i32, i32* @lr, align 4
  store i32 %v0_10008a78, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_10008a90 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10008a90, i32* @r3, align 4
  %v3_10008a9c = call i32 @function_10009e6c(i32 %v2_10008a90, i32 ptrtoint ([3 x i8]* @global_var_10009e64.277 to i32))
  %v0_10008aa4 = call i32 @function_10009e64()
  br label %dec_label_pc_10008aa8

dec_label_pc_10008aa8:                            ; preds = %dec_label_pc_10008ae4, %dec_label_pc_10008a74
  %v0_10008aa8 = load i32, i32* @r31, align 4
  %v1_10008aa8 = add i32 %v0_10008aa8, 4
  %v2_10008aa8 = inttoptr i32 %v1_10008aa8 to i32*
  %v3_10008aa8 = load i32, i32* %v2_10008aa8, align 4
  store i32 %v3_10008aa8, i32* %r0.global-to-local, align 4
  %v1_10008aac = add i32 %v0_10008aa8, 8
  %v2_10008aac = inttoptr i32 %v1_10008aac to i32*
  %v3_10008aac = load i32, i32* %v2_10008aac, align 4
  store i32 %v3_10008aac, i32* %r9.global-to-local, align 4
  %v3_10008ab0 = icmp ugt i32 %v3_10008aac, %v3_10008aa8
  br i1 %v3_10008ab0, label %dec_label_pc_10008ae4, label %dec_label_pc_10008ab8

dec_label_pc_10008ab8:                            ; preds = %dec_label_pc_10008aa8
  %v1_10008ab8 = inttoptr i32 %v0_10008aa8 to i32*
  %v2_10008ab8 = load i32, i32* %v1_10008ab8, align 4
  store i32 %v2_10008ab8, i32* @r3, align 4
  %v1_10008abc = add i32 %v0_10008aa8, 12
  %v2_10008abc = inttoptr i32 %v1_10008abc to i32*
  %v3_10008abc = load i32, i32* %v2_10008abc, align 4
  %v1_10008ac0 = add i32 %v0_10008aa8, 20
  %v2_10008ac0 = inttoptr i32 %v1_10008ac0 to i32*
  %v3_10008ac0 = load i32, i32* %v2_10008ac0, align 4
  store i32 %v3_10008ac0, i32* @r5, align 4
  store i32 268470984, i32* @lr, align 4
  %v4_10008ac4 = inttoptr i32 %v2_10008ab8 to i32*
  %v5_10008ac4 = call i32 @function_1000a2b4(i32* %v4_10008ac4, i32 %v3_10008abc, i32 %v3_10008ac0, i32 %v3_10008aac)
  %v2_10008ac8 = icmp sgt i32 %v5_10008ac4, 0
  br i1 %v2_10008ac8, label %dec_label_pc_10008ad8, label %dec_label_pc_10008ad0

dec_label_pc_10008ad0:                            ; preds = %dec_label_pc_10008ab8
  store i32 0, i32* @r29, align 4
  br label %dec_label_pc_10008b10

dec_label_pc_10008ad8:                            ; preds = %dec_label_pc_10008ab8
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10008adc = load i32, i32* @r31, align 4
  %v2_10008adc = add i32 %v1_10008adc, 8
  %v3_10008adc = inttoptr i32 %v2_10008adc to i32*
  store i32 %v5_10008ac4, i32* %v3_10008adc, align 4
  %v0_10008ae0 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008ae0 = load i32, i32* @r31, align 4
  %v2_10008ae0 = add i32 %v1_10008ae0, 4
  %v3_10008ae0 = inttoptr i32 %v2_10008ae0 to i32*
  store i32 %v0_10008ae0, i32* %v3_10008ae0, align 4
  %v0_10008ae4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10008ae4

dec_label_pc_10008ae4:                            ; preds = %dec_label_pc_10008aa8, %dec_label_pc_10008ad8
  %v1_10008af8 = phi i32 [ %v0_10008aa8, %dec_label_pc_10008aa8 ], [ %v0_10008ae4.pre, %dec_label_pc_10008ad8 ]
  %v1_10008ae4 = add i32 %v1_10008af8, 4
  %v2_10008ae4 = inttoptr i32 %v1_10008ae4 to i32*
  %v3_10008ae4 = load i32, i32* %v2_10008ae4, align 4
  store i32 %v3_10008ae4, i32* %r9.global-to-local, align 4
  %v1_10008ae8 = add i32 %v1_10008af8, 12
  %v2_10008ae8 = inttoptr i32 %v1_10008ae8 to i32*
  %v3_10008ae8 = load i32, i32* %v2_10008ae8, align 4
  store i32 %v3_10008ae8, i32* %r11.global-to-local, align 4
  %v2_10008aec = add i32 %v3_10008ae8, %v3_10008ae4
  store i32 %v2_10008aec, i32* @r29, align 4
  %v1_10008af0 = add i32 %v2_10008aec, 8
  %v2_10008af0 = inttoptr i32 %v1_10008af0 to i16*
  %v3_10008af0 = load i16, i16* %v2_10008af0, align 2
  %v4_10008af0 = zext i16 %v3_10008af0 to i32
  %v2_10008af4 = add i32 %v4_10008af0, %v3_10008ae4
  store i32 %v2_10008af4, i32* %r0.global-to-local, align 4
  store i32 %v2_10008af4, i32* %v2_10008ae4, align 4
  %v0_10008afc = load i32, i32* @r29, align 4
  %v1_10008afc = add i32 %v0_10008afc, 4
  %v2_10008afc = inttoptr i32 %v1_10008afc to i32*
  %v3_10008afc = load i32, i32* %v2_10008afc, align 4
  store i32 %v3_10008afc, i32* %r0.global-to-local, align 4
  %v1_10008b00 = load i32, i32* @r31, align 4
  %v2_10008b00 = add i32 %v1_10008b00, 16
  %v3_10008b00 = inttoptr i32 %v2_10008b00 to i32*
  store i32 %v3_10008afc, i32* %v3_10008b00, align 4
  %v0_10008b04 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008b04 = load i32, i32* %r11.global-to-local, align 4
  %v2_10008b04 = add i32 %v1_10008b04, %v0_10008b04
  %v3_10008b04 = inttoptr i32 %v2_10008b04 to i32*
  %v4_10008b04 = load i32, i32* %v3_10008b04, align 4
  store i32 %v4_10008b04, i32* %r0.global-to-local, align 4
  %v3_10008b08 = icmp eq i32 %v4_10008b04, 0
  br i1 %v3_10008b08, label %dec_label_pc_10008aa8, label %dec_label_pc_10008b10

dec_label_pc_10008b10:                            ; preds = %dec_label_pc_10008ae4, %dec_label_pc_10008ad0
  store i32 %v2_10008a90, i32* @r3, align 4
  %v2_10008b18 = call i32 @function_10009e6c(i32 %v2_10008a90, i32 1)
  store i32 %v0_10008a78, i32* %r0.global-to-local, align 4
  %v0_10008b20 = load i32, i32* @r29, align 4
  ret i32 %v0_10008b20

; uselistorder directives
  uselistorder i32 %v1_10008af8, { 1, 0 }
  uselistorder i32 %v0_10008aa8, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v2_10008a90, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10008ae4, { 1, 0 }
}

define i32 @function_10008b34() local_unnamed_addr {
dec_label_pc_10008b34:
  ret i32 ptrtoint (i32* @global_var_1001b554.282 to i32)
}

define i32 @function_10008b40(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008b40:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %v2_10008b48 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268471124, i32* @lr, align 4
  %v1_10008b50 = call i32 @function_1000a6f4(i32 %v2_10008b48)
  %v3_10008b58 = load i32, i32* %stack_var_-24, align 4
  %v2_10008b5c = add i32 %v3_10008b58, %tmp
  %v1_10008b64 = mul i32 %v2_10008b5c, 10000
  %v1_10008b70 = and i32 %v1_10008b64, 2147483632
  ret i32 %v1_10008b70
}

define i32 @function_10008b78(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008b78:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  %v2_10008b78 = icmp ult i32 %arg2, %arg1
  store i32 %arg1, i32* %r8.global-to-local, align 4
  store i32 %arg3, i32* @r11, align 4
  br i1 %v2_10008b78, label %dec_label_pc_10008b8c, label %dec_label_pc_10008b88

dec_label_pc_10008b88:                            ; preds = %dec_label_pc_10008b78
  %v0_10008b88 = call i32 @function_1000a8b8()
  store i32 %v0_10008b88, i32* @r3, align 4
  br label %dec_label_pc_10008b8c

dec_label_pc_10008b8c:                            ; preds = %dec_label_pc_10008b78, %dec_label_pc_10008b88
  %v1_10008b8c = call i32 @__asm_rlwinm.(i32 %arg3, i32 29, i32 3, i32 31)
  store i32 %v1_10008b8c, i32* %r9.global-to-local, align 4
  %v4_10008b8c = icmp eq i32 %v1_10008b8c, 0
  %v2_10008b90 = add i32 %arg3, %arg2
  store i32 %v2_10008b90, i32* %r4.global-to-local, align 4
  %v0_10008b94 = load i32, i32* @r3, align 4
  %v2_10008b94 = add i32 %v0_10008b94, %arg3
  store i32 %v2_10008b94, i32* %r10.global-to-local, align 4
  br i1 %v4_10008b8c, label %dec_label_pc_10008bbc, label %dec_label_pc_10008b9c

dec_label_pc_10008b9c:                            ; preds = %dec_label_pc_10008b8c
  %v1_10008b9c = urem i32 %v2_10008b94, 4
  %v3_10008b9c = icmp eq i32 %v1_10008b9c, 0
  br i1 %v3_10008b9c, label %dec_label_pc_10008ba4, label %dec_label_pc_10008bf0

dec_label_pc_10008ba4:                            ; preds = %dec_label_pc_10008c08.dec_label_pc_10008ba4_crit_edge, %dec_label_pc_10008b9c
  %v1_10008bb0.pre = phi i32 [ %v1_10008bb0.pre.pre, %dec_label_pc_10008c08.dec_label_pc_10008ba4_crit_edge ], [ %v2_10008b94, %dec_label_pc_10008b9c ]
  %v0_10008ba4 = phi i32 [ %v1_10008c08, %dec_label_pc_10008c08.dec_label_pc_10008ba4_crit_edge ], [ %v1_10008b8c, %dec_label_pc_10008b9c ]
  store i32 %v0_10008ba4, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10008ba8

dec_label_pc_10008ba8:                            ; preds = %dec_label_pc_10008ba8, %dec_label_pc_10008ba4
  %v1_10008bb0 = phi i32 [ %v2_10008bb4, %dec_label_pc_10008ba8 ], [ %v1_10008bb0.pre, %dec_label_pc_10008ba4 ]
  %v0_10008ba8 = load i32, i32* %r4.global-to-local, align 4
  %v1_10008ba8 = add i32 %v0_10008ba8, -4
  %v2_10008ba8 = inttoptr i32 %v1_10008ba8 to i32*
  %v3_10008ba8 = load i32, i32* %v2_10008ba8, align 4
  %v1_10008bac = add i32 %v0_10008ba8, -8
  %v2_10008bac = inttoptr i32 %v1_10008bac to i32*
  %v3_10008bac = load i32, i32* %v2_10008bac, align 4
  store i32 %v3_10008bac, i32* %r9.global-to-local, align 4
  store i32 %v1_10008bac, i32* %r4.global-to-local, align 4
  %v2_10008bb0 = add i32 %v1_10008bb0, -4
  %v3_10008bb0 = inttoptr i32 %v2_10008bb0 to i32*
  store i32 %v3_10008ba8, i32* %v3_10008bb0, align 4
  %v0_10008bb4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008bb4 = load i32, i32* %r10.global-to-local, align 4
  %v2_10008bb4 = add i32 %v1_10008bb4, -8
  %v3_10008bb4 = inttoptr i32 %v2_10008bb4 to i32*
  store i32 %v0_10008bb4, i32* %v3_10008bb4, align 4
  store i32 %v2_10008bb4, i32* %r10.global-to-local, align 4
  %v0_10008bb8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008bb8 = add i32 %v0_10008bb8, -1
  store i32 %v1_10008bb8, i32* %ctr.global-to-local, align 4
  %v2_10008bb8 = icmp eq i32 %v1_10008bb8, 0
  br i1 %v2_10008bb8, label %dec_label_pc_10008bbc, label %dec_label_pc_10008ba8

dec_label_pc_10008bbc:                            ; preds = %dec_label_pc_10008ba8, %dec_label_pc_10008c08, %dec_label_pc_10008b8c
  %v0_10008bbc = load i32, i32* @r11, align 4
  %v1_10008bbc = urem i32 %v0_10008bbc, 8
  store i32 %v1_10008bbc, i32* %r5.global-to-local, align 4
  %tmp = icmp ult i32 %v1_10008bbc, 4
  br i1 %tmp, label %dec_label_pc_10008bd4, label %dec_label_pc_10008bc8

dec_label_pc_10008bc8:                            ; preds = %dec_label_pc_10008bbc
  %v0_10008bc8 = load i32, i32* %r4.global-to-local, align 4
  %v1_10008bc8 = add i32 %v0_10008bc8, -4
  %v2_10008bc8 = inttoptr i32 %v1_10008bc8 to i32*
  %v3_10008bc8 = load i32, i32* %v2_10008bc8, align 4
  store i32 %v1_10008bc8, i32* %r4.global-to-local, align 4
  %v1_10008bcc = add nsw i32 %v1_10008bbc, -4
  store i32 %v1_10008bcc, i32* %r5.global-to-local, align 4
  %v1_10008bd0 = load i32, i32* %r10.global-to-local, align 4
  %v2_10008bd0 = add i32 %v1_10008bd0, -4
  %v3_10008bd0 = inttoptr i32 %v2_10008bd0 to i32*
  store i32 %v3_10008bc8, i32* %v3_10008bd0, align 4
  store i32 %v2_10008bd0, i32* %r10.global-to-local, align 4
  %v0_10008bd4.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10008bd4

dec_label_pc_10008bd4:                            ; preds = %dec_label_pc_10008bbc, %dec_label_pc_10008bc8
  %v0_10008bdc = phi i32 [ %v1_10008bbc, %dec_label_pc_10008bbc ], [ %v0_10008bd4.pre, %dec_label_pc_10008bc8 ]
  %v3_10008bd4 = icmp eq i32 %v0_10008bdc, 0
  br i1 %v3_10008bd4, label %dec_label_pc_10008c14, label %dec_label_pc_10008bdc

dec_label_pc_10008bdc:                            ; preds = %dec_label_pc_10008bd4
  store i32 %v0_10008bdc, i32* %ctr.global-to-local, align 4
  %v2_10008be4.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008be0

dec_label_pc_10008be0:                            ; preds = %dec_label_pc_10008be0, %dec_label_pc_10008bdc
  %v2_10008be4 = phi i32 [ %v3_10008be4, %dec_label_pc_10008be0 ], [ %v2_10008be4.pre, %dec_label_pc_10008bdc ]
  %v0_10008be0 = load i32, i32* %r4.global-to-local, align 4
  %v1_10008be0 = add i32 %v0_10008be0, -1
  %v2_10008be0 = inttoptr i32 %v1_10008be0 to i8*
  %v3_10008be0 = load i8, i8* %v2_10008be0, align 1
  store i32 %v1_10008be0, i32* %r4.global-to-local, align 4
  %v3_10008be4 = add i32 %v2_10008be4, -1
  %v4_10008be4 = inttoptr i32 %v3_10008be4 to i8*
  store i8 %v3_10008be0, i8* %v4_10008be4, align 1
  store i32 %v3_10008be4, i32* %r10.global-to-local, align 4
  %v0_10008be8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008be8 = add i32 %v0_10008be8, -1
  store i32 %v1_10008be8, i32* %ctr.global-to-local, align 4
  %v2_10008be8 = icmp eq i32 %v1_10008be8, 0
  br i1 %v2_10008be8, label %dec_label_pc_10008c14, label %dec_label_pc_10008be0

dec_label_pc_10008bf0:                            ; preds = %dec_label_pc_10008b9c
  %v1_10008bf0 = sub nsw i32 4, %v1_10008b9c
  store i32 %v1_10008bf0, i32* %ctr.global-to-local, align 4
  %v2_10008bf8 = sub i32 %arg3, %v1_10008bf0
  store i32 %v2_10008bf8, i32* @r11, align 4
  %v1_10008bfc8 = add i32 %v2_10008b90, -1
  %v2_10008bfc9 = inttoptr i32 %v1_10008bfc8 to i8*
  %v3_10008bfc10 = load i8, i8* %v2_10008bfc9, align 1
  store i32 %v1_10008bfc8, i32* %r4.global-to-local, align 4
  %v3_10008c0012 = add i32 %v2_10008b94, -1
  %v4_10008c0013 = inttoptr i32 %v3_10008c0012 to i8*
  store i8 %v3_10008bfc10, i8* %v4_10008c0013, align 1
  store i32 %v3_10008c0012, i32* %r10.global-to-local, align 4
  %v0_10008c0414 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008c0415 = add i32 %v0_10008c0414, -1
  store i32 %v1_10008c0415, i32* %ctr.global-to-local, align 4
  %v2_10008c0416 = icmp eq i32 %v1_10008c0415, 0
  br i1 %v2_10008c0416, label %dec_label_pc_10008c08, label %dec_label_pc_10008bfc.dec_label_pc_10008bfc_crit_edge

dec_label_pc_10008bfc.dec_label_pc_10008bfc_crit_edge: ; preds = %dec_label_pc_10008bf0, %dec_label_pc_10008bfc.dec_label_pc_10008bfc_crit_edge
  %v3_10008c0017 = phi i32 [ %v3_10008c00, %dec_label_pc_10008bfc.dec_label_pc_10008bfc_crit_edge ], [ %v3_10008c0012, %dec_label_pc_10008bf0 ]
  %v0_10008bfc.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_10008bfc = add i32 %v0_10008bfc.pre, -1
  %v2_10008bfc = inttoptr i32 %v1_10008bfc to i8*
  %v3_10008bfc = load i8, i8* %v2_10008bfc, align 1
  store i32 %v1_10008bfc, i32* %r4.global-to-local, align 4
  %v3_10008c00 = add i32 %v3_10008c0017, -1
  %v4_10008c00 = inttoptr i32 %v3_10008c00 to i8*
  store i8 %v3_10008bfc, i8* %v4_10008c00, align 1
  store i32 %v3_10008c00, i32* %r10.global-to-local, align 4
  %v0_10008c04 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008c04 = add i32 %v0_10008c04, -1
  store i32 %v1_10008c04, i32* %ctr.global-to-local, align 4
  %v2_10008c04 = icmp eq i32 %v1_10008c04, 0
  br i1 %v2_10008c04, label %dec_label_pc_10008c08, label %dec_label_pc_10008bfc.dec_label_pc_10008bfc_crit_edge

dec_label_pc_10008c08:                            ; preds = %dec_label_pc_10008bfc.dec_label_pc_10008bfc_crit_edge, %dec_label_pc_10008bf0
  %v0_10008c08 = load i32, i32* @r11, align 4
  %v1_10008c08 = call i32 @__asm_rlwinm.(i32 %v0_10008c08, i32 29, i32 3, i32 31)
  store i32 %v1_10008c08, i32* %r9.global-to-local, align 4
  %v4_10008c08 = icmp eq i32 %v1_10008c08, 0
  br i1 %v4_10008c08, label %dec_label_pc_10008bbc, label %dec_label_pc_10008c08.dec_label_pc_10008ba4_crit_edge

dec_label_pc_10008c08.dec_label_pc_10008ba4_crit_edge: ; preds = %dec_label_pc_10008c08
  %v1_10008bb0.pre.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008ba4

dec_label_pc_10008c14:                            ; preds = %dec_label_pc_10008be0, %dec_label_pc_10008bd4
  %v0_10008c14 = load i32, i32* %r8.global-to-local, align 4
  ret i32 %v0_10008c14

; uselistorder directives
  uselistorder i32 %v1_10008c08, { 1, 2, 0 }
  uselistorder i32 %v1_10008c04, { 1, 0 }
  uselistorder i32 %v3_10008c00, { 1, 2, 0 }
  uselistorder i32 %v1_10008be8, { 1, 0 }
  uselistorder i32 %v3_10008be4, { 1, 2, 0 }
  uselistorder i32 %v1_10008bbc, { 3, 2, 1, 0 }
  uselistorder i32 %v1_10008bb8, { 1, 0 }
  uselistorder i32 %v2_10008bb4, { 1, 2, 0 }
  uselistorder i32 %v1_10008b9c, { 1, 0 }
  uselistorder i32 %v2_10008b94, { 1, 2, 0, 3 }
  uselistorder i32* %r4.global-to-local, { 0, 8, 9, 1, 5, 2, 7, 3, 6, 4 }
  uselistorder i32* %r10.global-to-local, { 8, 0, 9, 1, 7, 2, 5, 3, 6, 4 }
  uselistorder i32* %ctr.global-to-local, { 0, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 %arg3, { 2, 0, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_10008bfc.dec_label_pc_10008bfc_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10008bd4, { 1, 0 }
  uselistorder label %dec_label_pc_10008bbc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10008b8c, { 1, 0 }
}

define i32 @function_10008c1c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008c1c:
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v1_10008c1c = call i32 @__asm_rlwinm.(i32 %arg3, i32 29, i32 3, i32 31)
  store i32 %v1_10008c1c, i32* %r9.global-to-local, align 4
  %v4_10008c1c = icmp eq i32 %v1_10008c1c, 0
  %v1_10008c24 = add i32 %arg1, -4
  store i32 %v1_10008c24, i32* %r11.global-to-local, align 4
  %v1_10008c28 = call i32 @__asm_rlwimi(i32 %arg2, i32 8, i32 16, i32 23)
  %v1_10008c2c = call i32 @__asm_rlwimi(i32 %v1_10008c28, i32 16, i32 0, i32 15)
  %v2_10008c2c = trunc i32 %v1_10008c2c to i8
  br i1 %v4_10008c1c, label %dec_label_pc_10008c54, label %dec_label_pc_10008c34

dec_label_pc_10008c34:                            ; preds = %dec_label_pc_10008c1c
  %v0_10008c34 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008c34 = urem i32 %v0_10008c34, 4
  %v3_10008c34 = icmp eq i32 %v1_10008c34, 0
  br i1 %v3_10008c34, label %dec_label_pc_10008c34.dec_label_pc_10008c3c_crit_edge, label %dec_label_pc_10008c84

dec_label_pc_10008c34.dec_label_pc_10008c3c_crit_edge: ; preds = %dec_label_pc_10008c34
  %v0_10008c3c.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008c3c

dec_label_pc_10008c3c:                            ; preds = %dec_label_pc_10008c9c.dec_label_pc_10008c3c_crit_edge, %dec_label_pc_10008c34.dec_label_pc_10008c3c_crit_edge
  %v0_10008c40.pre = phi i32 [ %v0_10008c34, %dec_label_pc_10008c34.dec_label_pc_10008c3c_crit_edge ], [ %v0_10008c40.pre.pre, %dec_label_pc_10008c9c.dec_label_pc_10008c3c_crit_edge ]
  %v0_10008c3c = phi i32 [ %v0_10008c3c.pre, %dec_label_pc_10008c34.dec_label_pc_10008c3c_crit_edge ], [ %v1_10008c9c, %dec_label_pc_10008c9c.dec_label_pc_10008c3c_crit_edge ]
  store i32 %v0_10008c3c, i32* %ctr.global-to-local, align 4
  %v1_10008c44 = sext i8 %v2_10008c2c to i32
  br label %dec_label_pc_10008c40

dec_label_pc_10008c40:                            ; preds = %dec_label_pc_10008c40, %dec_label_pc_10008c3c
  %v0_10008c40 = phi i32 [ %v1_10008c4c, %dec_label_pc_10008c40 ], [ %v0_10008c40.pre, %dec_label_pc_10008c3c ]
  %v1_10008c40 = add i32 %v0_10008c40, 4
  store i32 %v1_10008c40, i32* %r9.global-to-local, align 4
  %v4_10008c44 = inttoptr i32 %v1_10008c40 to i32*
  store i32 %v1_10008c44, i32* %v4_10008c44, align 4
  %v2_10008c48 = load i32, i32* %r9.global-to-local, align 4
  %v3_10008c48 = add i32 %v2_10008c48, 4
  %v4_10008c48 = inttoptr i32 %v3_10008c48 to i32*
  store i32 %v1_10008c44, i32* %v4_10008c48, align 4
  %v0_10008c4c = load i32, i32* %r9.global-to-local, align 4
  %v1_10008c4c = add i32 %v0_10008c4c, 4
  store i32 %v1_10008c4c, i32* %r11.global-to-local, align 4
  %v0_10008c50 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008c50 = add i32 %v0_10008c50, -1
  store i32 %v1_10008c50, i32* %ctr.global-to-local, align 4
  %v2_10008c50 = icmp eq i32 %v1_10008c50, 0
  br i1 %v2_10008c50, label %dec_label_pc_10008c54, label %dec_label_pc_10008c40

dec_label_pc_10008c54:                            ; preds = %dec_label_pc_10008c40, %dec_label_pc_10008c9c, %dec_label_pc_10008c1c
  %v0_10008c54 = load i32, i32* %r5.global-to-local, align 4
  %v1_10008c54 = urem i32 %v0_10008c54, 8
  store i32 %v1_10008c54, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_10008c54, 4
  br i1 %tmp, label %dec_label_pc_10008c68, label %dec_label_pc_10008c60

dec_label_pc_10008c60:                            ; preds = %dec_label_pc_10008c54
  %v1_10008c60 = sext i8 %v2_10008c2c to i32
  %v2_10008c60 = load i32, i32* %r11.global-to-local, align 4
  %v3_10008c60 = add i32 %v2_10008c60, 4
  %v4_10008c60 = inttoptr i32 %v3_10008c60 to i32*
  store i32 %v1_10008c60, i32* %v4_10008c60, align 4
  store i32 %v3_10008c60, i32* %r11.global-to-local, align 4
  %v0_10008c64 = load i32, i32* @r5, align 4
  %v1_10008c64 = add i32 %v0_10008c64, -4
  store i32 %v1_10008c64, i32* @r5, align 4
  br label %dec_label_pc_10008c68

dec_label_pc_10008c68:                            ; preds = %dec_label_pc_10008c54, %dec_label_pc_10008c60
  %v0_10008c68 = phi i32 [ %v1_10008c54, %dec_label_pc_10008c54 ], [ %v1_10008c64, %dec_label_pc_10008c60 ]
  %v3_10008c68 = icmp eq i32 %v0_10008c68, 0
  %v0_10008c6c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10008c68, i32 %v0_10008c6c)
  %v0_10008c70 = load i32, i32* @r5, align 4
  store i32 %v0_10008c70, i32* %ctr.global-to-local, align 4
  %v0_10008c74 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008c74 = add i32 %v0_10008c74, 3
  store i32 %v1_10008c74, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008c78

dec_label_pc_10008c78:                            ; preds = %dec_label_pc_10008c78, %dec_label_pc_10008c68
  %v3_10008c78 = phi i32 [ %v4_10008c78, %dec_label_pc_10008c78 ], [ %v1_10008c74, %dec_label_pc_10008c68 ]
  %v4_10008c78 = add i32 %v3_10008c78, 1
  %v5_10008c78 = inttoptr i32 %v4_10008c78 to i8*
  store i8 %v2_10008c2c, i8* %v5_10008c78, align 1
  store i32 %v4_10008c78, i32* %r9.global-to-local, align 4
  %v0_10008c7c = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008c7c = add i32 %v0_10008c7c, -1
  store i32 %v1_10008c7c, i32* %ctr.global-to-local, align 4
  %v2_10008c7c = icmp eq i32 %v1_10008c7c, 0
  br i1 %v2_10008c7c, label %dec_label_pc_10008ca8, label %dec_label_pc_10008c78

dec_label_pc_10008c84:                            ; preds = %dec_label_pc_10008c34
  %v1_10008c84 = sub nsw i32 4, %v1_10008c34
  store i32 %v1_10008c84, i32* %ctr.global-to-local, align 4
  %v1_10008c8c = load i32, i32* %r5.global-to-local, align 4
  %v2_10008c8c = sub i32 %v1_10008c8c, %v1_10008c84
  store i32 %v2_10008c8c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10008c90

dec_label_pc_10008c90:                            ; preds = %dec_label_pc_10008c90, %dec_label_pc_10008c84
  %v3_10008c90 = phi i32 [ %v1_10008c94, %dec_label_pc_10008c90 ], [ %v0_10008c34, %dec_label_pc_10008c84 ]
  %v4_10008c90 = add i32 %v3_10008c90, 4
  %v5_10008c90 = inttoptr i32 %v4_10008c90 to i8*
  store i8 %v2_10008c2c, i8* %v5_10008c90, align 1
  %v0_10008c94 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008c94 = add i32 %v0_10008c94, 1
  store i32 %v1_10008c94, i32* %r11.global-to-local, align 4
  %v0_10008c98 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008c98 = add i32 %v0_10008c98, -1
  store i32 %v1_10008c98, i32* %ctr.global-to-local, align 4
  %v2_10008c98 = icmp eq i32 %v1_10008c98, 0
  br i1 %v2_10008c98, label %dec_label_pc_10008c9c, label %dec_label_pc_10008c90

dec_label_pc_10008c9c:                            ; preds = %dec_label_pc_10008c90
  %v0_10008c9c = load i32, i32* %r5.global-to-local, align 4
  %v1_10008c9c = call i32 @__asm_rlwinm.(i32 %v0_10008c9c, i32 29, i32 3, i32 31)
  store i32 %v1_10008c9c, i32* %r9.global-to-local, align 4
  %v4_10008c9c = icmp eq i32 %v1_10008c9c, 0
  br i1 %v4_10008c9c, label %dec_label_pc_10008c54, label %dec_label_pc_10008c9c.dec_label_pc_10008c3c_crit_edge

dec_label_pc_10008c9c.dec_label_pc_10008c3c_crit_edge: ; preds = %dec_label_pc_10008c9c
  %v0_10008c40.pre.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10008c3c

dec_label_pc_10008ca8:                            ; preds = %dec_label_pc_10008c78
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_10008c9c, { 1, 2, 0 }
  uselistorder i32 %v1_10008c98, { 1, 0 }
  uselistorder i32 %v1_10008c94, { 1, 0 }
  uselistorder i32 %v1_10008c7c, { 1, 0 }
  uselistorder i32 %v4_10008c78, { 1, 2, 0 }
  uselistorder i32 %v1_10008c54, { 2, 1, 0 }
  uselistorder i32 %v1_10008c50, { 1, 0 }
  uselistorder i32 %v1_10008c4c, { 1, 0 }
  uselistorder i32 %v1_10008c34, { 1, 0 }
  uselistorder i32 %v0_10008c34, { 2, 1, 0 }
  uselistorder i8 %v2_10008c2c, { 1, 2, 0, 3 }
  uselistorder i32* %r5.global-to-local, { 2, 4, 0, 3, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 4, 5, 2, 6, 3, 7, 8 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwimi, { 55, 56, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54 }
  uselistorder label %dec_label_pc_10008c68, { 1, 0 }
  uselistorder label %dec_label_pc_10008c54, { 1, 0, 2 }
}

define i32 @function_10008cac(i32 %arg1, i8* %arg2) local_unnamed_addr {
dec_label_pc_10008cac:
  %cr7_eq.global-to-local = alloca i1, align 1
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_10008cac = add i32 %arg1, -1
  %v1_10008cb0 = sub i32 %v2_10008cac, %tmp
  store i32 %v1_10008cb0, i32* %r9.global-to-local, align 4
  %v2_10008cb44 = load i8, i8* %arg2, align 1
  %v1_10008cb86 = add i32 %tmp, 1
  store i32 %v1_10008cb86, i32* %r4.global-to-local, align 4
  %v3_10008cbc7 = icmp eq i8 %v2_10008cb44, 0
  store i1 %v3_10008cbc7, i1* %cr7_eq.global-to-local, align 1
  %v5_10008cc08 = inttoptr i32 %arg1 to i8*
  store i8 %v2_10008cb44, i8* %v5_10008cc08, align 1
  %v0_10008cc49 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10008cc49, label %dec_label_pc_10008cc8, label %dec_label_pc_10008cb4.dec_label_pc_10008cb4_crit_edge

dec_label_pc_10008cb4.dec_label_pc_10008cb4_crit_edge: ; preds = %dec_label_pc_10008cac, %dec_label_pc_10008cb4.dec_label_pc_10008cb4_crit_edge
  %v0_10008cb4.pre = load i32, i32* %r4.global-to-local, align 4
  %v2_10008cc0.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_10008cb4 = inttoptr i32 %v0_10008cb4.pre to i8*
  %v2_10008cb4 = load i8, i8* %v1_10008cb4, align 1
  %v1_10008cb8 = add i32 %v0_10008cb4.pre, 1
  store i32 %v1_10008cb8, i32* %r4.global-to-local, align 4
  %v3_10008cbc = icmp eq i8 %v2_10008cb4, 0
  store i1 %v3_10008cbc, i1* %cr7_eq.global-to-local, align 1
  %v4_10008cc0 = add i32 %v1_10008cb8, %v2_10008cc0.pre
  %v5_10008cc0 = inttoptr i32 %v4_10008cc0 to i8*
  store i8 %v2_10008cb4, i8* %v5_10008cc0, align 1
  %v0_10008cc4 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10008cc4, label %dec_label_pc_10008cc8, label %dec_label_pc_10008cb4.dec_label_pc_10008cb4_crit_edge

dec_label_pc_10008cc8:                            ; preds = %dec_label_pc_10008cb4.dec_label_pc_10008cb4_crit_edge, %dec_label_pc_10008cac
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10008cb4.dec_label_pc_10008cb4_crit_edge, { 1, 0 }
}

define i32 @function_10008ccc(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10008ccc:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8 @__decompiler_undefined_function_2()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_10008cd0 = load i32, i32* @lr, align 4
  store i32 %v0_10008cd0, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_10008ce0 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268471540, i32* @lr, align 4
  %v3_10008cf0 = call i32 @function_10008248(i32 1076655123, i32 %v2_10008ce0, i32 %v2_10008ce0)
  %v2_10008cf4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10008cf4, i32* @r4, align 4
  store i32 %v3_10008cf0, i32* @r30, align 4
  %v3_10008cf8 = icmp eq i32 %v3_10008cf0, 0
  %v0_10008d00 = load i32, i32* @r31, align 4
  br i1 %v3_10008cf8, label %dec_label_pc_10008d08, label %dec_label_pc_10008d50

dec_label_pc_10008d08:                            ; preds = %dec_label_pc_10008ccc
  %v1_10008d00 = add i32 %v0_10008d00, 17
  %v3_10008d20 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_10008d20, i32* %r0.global-to-local, align 4
  %v2_10008d24 = add i32 %v0_10008d00, 4
  %v3_10008d24 = inttoptr i32 %v2_10008d24 to i32*
  store i32 %tmp7, i32* %v3_10008d24, align 4
  %v0_10008d28 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008d28 = load i32, i32* @r31, align 4
  %v2_10008d28 = inttoptr i32 %v1_10008d28 to i32*
  store i32 %v0_10008d28, i32* %v2_10008d28, align 4
  %v0_10008d2c = load i32, i32* %r11.global-to-local, align 4
  %v1_10008d2c = load i32, i32* @r31, align 4
  %v2_10008d2c = add i32 %v1_10008d2c, 8
  %v3_10008d2c = inttoptr i32 %v2_10008d2c to i32*
  store i32 %v0_10008d2c, i32* %v3_10008d2c, align 4
  %v0_10008d30 = load i32, i32* %r10.global-to-local, align 4
  %v1_10008d30 = load i32, i32* @r31, align 4
  %v2_10008d30 = add i32 %v1_10008d30, 12
  %v3_10008d30 = inttoptr i32 %v2_10008d30 to i32*
  store i32 %v0_10008d30, i32* %v3_10008d30, align 4
  %v3_10008d34 = load i32, i32* @r31, align 4
  %v4_10008d34 = add i32 %v3_10008d34, 16
  %v5_10008d34 = inttoptr i32 %v4_10008d34 to i8*
  store i8 %tmp4, i8* %v5_10008d34, align 1
  %v1_10008d38 = load i32, i32* @r31, align 4
  %v2_10008d38 = add i32 %v1_10008d38, 52
  %v3_10008d38 = inttoptr i32 %v2_10008d38 to i32*
  store i32 %tmp3, i32* %v3_10008d38, align 4
  %v1_10008d3c = load i32, i32* @r31, align 4
  %v2_10008d3c = add i32 %v1_10008d3c, 56
  %v3_10008d3c = inttoptr i32 %v2_10008d3c to i32*
  store i32 %tmp2, i32* %v3_10008d3c, align 4
  store i32 268471620, i32* @lr, align 4
  %v6_10008d40 = sext i8 %tmp4 to i32
  %v8_10008d40 = call i32 @function_1000a954(i32 %v1_10008d00, i32 %v2_10008cf4, i32 19, i32 %tmp2, i32 %tmp3, i32 %v6_10008d40, i32 %tmp7)
  store i32 268471632, i32* @lr, align 4
  %v3_10008d4c = call i32 @function_10008c1c(i32 %v8_10008d40, i32 0, i32 13)
  %v0_10008d54.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10008d50

dec_label_pc_10008d50:                            ; preds = %dec_label_pc_10008ccc, %dec_label_pc_10008d08
  %v0_10008d54 = phi i32 [ %v3_10008cf0, %dec_label_pc_10008ccc ], [ %v0_10008d54.pre, %dec_label_pc_10008d08 ]
  store i32 %v0_10008cd0, i32* %r0.global-to-local, align 4
  ret i32 %v0_10008d54

; uselistorder directives
  uselistorder i32 %v2_10008ce0, { 1, 0 }
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder i32 13, { 6, 23, 24, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1, 16, 17, 18, 19, 20, 21, 22, 25, 26, 2, 27, 28, 3, 29, 30, 4, 31, 32, 5 }
  uselistorder label %dec_label_pc_10008d50, { 1, 0 }
}

define i32 @function_10008d68() local_unnamed_addr {
dec_label_pc_10008d68:
  %r27.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_10008d68 = load i32, i32* @r4, align 4
  %v3_10008d68 = icmp eq i32 %v0_10008d68, 1
  %v0_10008d78 = load i32, i32* @r3, align 4
  store i32 %v0_10008d78, i32* %r27.global-to-local, align 4
  %v0_10008d80 = load i32, i32* @r5, align 4
  store i32 %v0_10008d80, i32* @r31, align 4
  br i1 %v3_10008d68, label %dec_label_pc_10008da4, label %dec_label_pc_10008d88

dec_label_pc_10008d88:                            ; preds = %dec_label_pc_10008d68
  %v3_10008d88 = icmp eq i32 %v0_10008d68, 2
  br i1 %v3_10008d88, label %dec_label_pc_10008dc4, label %dec_label_pc_10008d90

dec_label_pc_10008d90:                            ; preds = %dec_label_pc_10008d88
  %v3_10008d90 = icmp eq i32 %v0_10008d68, 0
  store i32 -2144570348, i32* @r30, align 4
  br i1 %v3_10008d90, label %dec_label_pc_10008dcc, label %dec_label_pc_10008db0

dec_label_pc_10008da4:                            ; preds = %dec_label_pc_10008d68
  store i32 -2144570347, i32* @r30, align 4
  br label %dec_label_pc_10008dcc

dec_label_pc_10008db0:                            ; preds = %dec_label_pc_10008d90
  %v0_10008db0 = call i32 @function_10008b34()
  store i32 -1, i32* @r28, align 4
  %v2_10008dbc = inttoptr i32 %v0_10008db0 to i32*
  store i32 22, i32* %v2_10008dbc, align 4
  br label %dec_label_pc_10008eb4

dec_label_pc_10008dc4:                            ; preds = %dec_label_pc_10008d88
  store i32 -2144570346, i32* @r30, align 4
  br label %dec_label_pc_10008dcc

dec_label_pc_10008dcc:                            ; preds = %dec_label_pc_10008d90, %dec_label_pc_10008da4, %dec_label_pc_10008dc4
  %v1_10008dcc = inttoptr i32 %v0_10008d80 to i32*
  %v2_10008dcc = load i32, i32* %v1_10008dcc, align 4
  store i32 19, i32* @r5, align 4
  %v1_10008dd4 = add i32 %v0_10008d80, 4
  %v2_10008dd4 = inttoptr i32 %v1_10008dd4 to i32*
  %v3_10008dd4 = load i32, i32* %v2_10008dd4, align 4
  store i32 %v3_10008dd4, i32* %r9.global-to-local, align 4
  %v1_10008dd8 = add i32 %v0_10008d80, 17
  store i32 %v1_10008dd8, i32* @r4, align 4
  %v1_10008ddc = add i32 %v0_10008d80, 8
  %v2_10008ddc = inttoptr i32 %v1_10008ddc to i32*
  %v3_10008ddc = load i32, i32* %v2_10008ddc, align 4
  %v2_10008de0 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10008de0, i32* @r3, align 4
  %v2_10008de8 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_10008dcc, i32* %stack_var_-72, align 4
  store i32 268471832, i32* @lr, align 4
  %v0_10008e14 = call i32 @function_1000a8b8()
  %v0_10008e18 = load i32, i32* %r27.global-to-local, align 4
  %v0_10008e1c = load i32, i32* @r30, align 4
  store i32 268471852, i32* @lr, align 4
  %v3_10008e28 = call i32 @function_10008248(i32 %v0_10008e18, i32 %v0_10008e1c, i32 %v2_10008de8)
  store i32 %v3_10008e28, i32* @r28, align 4
  %v3_10008e2c = icmp eq i32 %v3_10008e28, 0
  br i1 %v3_10008e2c, label %dec_label_pc_10008e34, label %dec_label_pc_10008eb4

dec_label_pc_10008e34:                            ; preds = %dec_label_pc_10008dcc
  %v0_10008e34 = load i32, i32* @r30, align 4
  %v3_10008e38 = icmp eq i32 %v0_10008e34, -2144570348
  br i1 %v3_10008e38, label %dec_label_pc_10008e40, label %dec_label_pc_10008eb0

dec_label_pc_10008e40:                            ; preds = %dec_label_pc_10008e34
  %v0_10008e40 = call i32 @function_10008b34()
  store i32 %v0_10008e40, i32* @r29, align 4
  %v0_10008e50 = load i32, i32* %r27.global-to-local, align 4
  %v1_10008e58 = inttoptr i32 %v0_10008e40 to i32*
  %v2_10008e58 = load i32, i32* %v1_10008e58, align 4
  store i32 %v2_10008e58, i32* @r30, align 4
  store i32 268471908, i32* @lr, align 4
  %v3_10008e60 = call i32 @function_10008248(i32 %v0_10008e50, i32 1076655123, i32 %v2_10008de8)
  %v3_10008e64 = icmp eq i32 %v3_10008e60, 0
  br i1 %v3_10008e64, label %dec_label_pc_10008e74, label %dec_label_pc_10008e6c

dec_label_pc_10008e6c:                            ; preds = %dec_label_pc_10008e40
  %v0_10008e6c = load i32, i32* @r30, align 4
  %v1_10008e6c = load i32, i32* @r29, align 4
  %v2_10008e6c = inttoptr i32 %v1_10008e6c to i32*
  store i32 %v0_10008e6c, i32* %v2_10008e6c, align 4
  br label %dec_label_pc_10008eb4

dec_label_pc_10008e74:                            ; preds = %dec_label_pc_10008e40
  %v0_10008e74 = load i32, i32* @r31, align 4
  %v1_10008e74 = add i32 %v0_10008e74, 8
  %v2_10008e74 = inttoptr i32 %v1_10008e74 to i32*
  %v3_10008e74 = load i32, i32* %v2_10008e74, align 4
  %v1_10008e7c = call i32 @__asm_rlwinm(i32 %v3_10008e74, i32 0, i32 19, i32 20)
  %v1_10008e80 = call i32 @__asm_rlwinm(i32 %v3_10008ddc, i32 0, i32 19, i32 20)
  store i32 %v1_10008e80, i32* %r9.global-to-local, align 4
  %v4_10008e84 = icmp eq i32 %v1_10008e7c, %v1_10008e80
  br i1 %v4_10008e84, label %dec_label_pc_10008e8c, label %dec_label_pc_10008ea0

dec_label_pc_10008e8c:                            ; preds = %dec_label_pc_10008e74
  %v1_10008e8c = and i32 %v3_10008e74, 768
  store i32 %v1_10008e8c, i32* %r9.global-to-local, align 4
  %v3_10008e8c = icmp eq i32 %v1_10008e8c, 0
  br i1 %v3_10008e8c, label %dec_label_pc_10008eb0, label %dec_label_pc_10008e94

dec_label_pc_10008e94:                            ; preds = %dec_label_pc_10008e8c
  %v1_10008e94 = call i32 @__asm_rlwinm(i32 %v3_10008ddc, i32 0, i32 22, i32 23)
  %v0_10008e98 = load i32, i32* %r9.global-to-local, align 4
  %v4_10008e98 = icmp eq i32 %v0_10008e98, %v1_10008e94
  br i1 %v4_10008e98, label %dec_label_pc_10008eb0, label %dec_label_pc_10008ea0

dec_label_pc_10008ea0:                            ; preds = %dec_label_pc_10008e74, %dec_label_pc_10008e94
  store i32 -1, i32* @r28, align 4
  %v1_10008ea8 = load i32, i32* @r29, align 4
  %v2_10008ea8 = inttoptr i32 %v1_10008ea8 to i32*
  store i32 22, i32* %v2_10008ea8, align 4
  br label %dec_label_pc_10008eb4

dec_label_pc_10008eb0:                            ; preds = %dec_label_pc_10008e34, %dec_label_pc_10008e94, %dec_label_pc_10008e8c
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_10008eb4

dec_label_pc_10008eb4:                            ; preds = %dec_label_pc_10008dcc, %dec_label_pc_10008ea0, %dec_label_pc_10008e6c, %dec_label_pc_10008db0, %dec_label_pc_10008eb0
  %v0_10008eb8 = load i32, i32* @r28, align 4
  ret i32 %v0_10008eb8

; uselistorder directives
  uselistorder i32 %v0_10008d80, { 1, 0, 3, 2, 4 }
  uselistorder i32 768, { 2, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @function_10008248, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10008eb4, { 4, 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_10008eb0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10008ea0, { 1, 0 }
  uselistorder label %dec_label_pc_10008dcc, { 2, 1, 0 }
}

define i32 @function_10008ecc(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008ecc:
  %stack_var_-24 = alloca i32, align 4
  %v2_10008ed4 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_10008ed4, i32* @r4, align 4
  store i32 268472032, i32* @lr, align 4
  %v1_10008edc = bitcast i32* %stack_var_-24 to i8*
  %v2_10008edc = call i32 @function_1000a988(i8* %v1_10008edc)
  %v3_10008ee0 = icmp eq i32 %v2_10008edc, 0
  br i1 %v3_10008ee0, label %dec_label_pc_10008ef0, label %dec_label_pc_10008eec

dec_label_pc_10008eec:                            ; preds = %dec_label_pc_10008ecc
  %v3_10008eec = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_10008ef0

dec_label_pc_10008ef0:                            ; preds = %dec_label_pc_10008ecc, %dec_label_pc_10008eec
  %v0_10008efc = phi i32 [ -1, %dec_label_pc_10008ecc ], [ %v3_10008eec, %dec_label_pc_10008eec ]
  ret i32 %v0_10008efc

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10008ef0, { 1, 0 }
}

define i32 @function_10008f00(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008f00:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10008f14 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268472100, i32* @lr, align 4
  %v2_10008f20 = call i32 @function_1000a1bc(i32 2, i32 %v2_10008f14)
  ret i32 %v2_10008f20

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10008f34(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008f34:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10008f48 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268472152, i32* @lr, align 4
  %v2_10008f54 = call i32 @function_1000a1bc(i32 3, i32 %v2_10008f48)
  ret i32 %v2_10008f54

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10008f68(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008f68:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10008f7c = ptrtoint i32* %stack_var_-24 to i32
  store i32 268472204, i32* @lr, align 4
  %v2_10008f88 = call i32 @function_1000a1bc(i32 6, i32 %v2_10008f7c)
  ret i32 %v2_10008f88

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10008f9c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10008f9c:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_10008fb0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268472264, i32* @lr, align 4
  %v2_10008fc4 = call i32 @function_1000a1bc(i32 15, i32 %v2_10008fb0)
  ret i32 %v2_10008fc4

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32 15, { 0, 26, 13, 14, 5, 15, 6, 16, 7, 8, 9, 10, 11, 17, 12, 18, 19, 1, 20, 21, 2, 22, 23, 3, 24, 25, 4 }
}

define i32 @function_10008fd8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10008fd8:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10008fec = ptrtoint i32* %stack_var_-24 to i32
  store i32 268472320, i32* @lr, align 4
  %v2_10008ffc = call i32 @function_1000a1bc(i32 10, i32 %v2_10008fec)
  ret i32 %v2_10008ffc

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10009010(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_10009010:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_10009024 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268472384, i32* @lr, align 4
  %v2_1000903c = call i32 @function_1000a1bc(i32 12, i32 %v2_10009024)
  ret i32 %v2_1000903c

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_10009050(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10009050:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10009064 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268472440, i32* @lr, align 4
  %v2_10009074 = call i32 @function_1000a1bc(i32 9, i32 %v2_10009064)
  ret i32 %v2_10009074

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 9, { 0, 5, 6, 7, 13, 14, 15, 1, 16, 2, 17, 3, 18, 8, 9, 10, 19, 11, 20, 33, 21, 22, 23, 24, 25, 26, 27, 4, 28, 29, 30, 31, 32, 34, 35, 36, 12 }
}

define i32 @function_10009088(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_10009088:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000909c = ptrtoint i32* %stack_var_-40 to i32
  store i32 268472504, i32* @lr, align 4
  %v2_100090b4 = call i32 @function_1000a1bc(i32 11, i32 %v2_1000909c)
  ret i32 %v2_100090b4

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_100090c8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100090c8:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_100090dc = ptrtoint i32* %stack_var_-40 to i32
  store i32 268472564, i32* @lr, align 4
  %v2_100090f0 = call i32 @function_1000a1bc(i32 14, i32 %v2_100090dc)
  ret i32 %v2_100090f0

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_10009104(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009104:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10009118 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268472616, i32* @lr, align 4
  %v2_10009124 = call i32 @function_1000a1bc(i32 1, i32 %v2_10009118)
  ret i32 %v2_10009124

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_1000a1bc, { 5, 1, 0, 4, 6, 9, 8, 7, 3, 2 }
}

define i32 @function_10009138(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009138:
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %arg1.off = add i32 %arg1, -1
  %tmp4 = icmp ult i32 %arg1.off, 64
  br i1 %tmp4, label %dec_label_pc_10009168, label %dec_label_pc_10009154

dec_label_pc_10009154:                            ; preds = %dec_label_pc_10009138
  %v0_10009154 = call i32 @function_10008b34()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_10009160 = inttoptr i32 %v0_10009154 to i32*
  store i32 22, i32* %v2_10009160, align 4
  %v0_10009174.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009170

dec_label_pc_10009168:                            ; preds = %dec_label_pc_10009138
  %v0_10009168 = call i32 @function_100092b8()
  store i32 %v0_10009168, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009170

dec_label_pc_10009170:                            ; preds = %dec_label_pc_10009154, %dec_label_pc_10009168
  %v0_10009174 = phi i32 [ %v0_10009174.pre, %dec_label_pc_10009154 ], [ %v0_10009168, %dec_label_pc_10009168 ]
  ret i32 %v0_10009174

; uselistorder directives
  uselistorder label %dec_label_pc_10009170, { 1, 0 }
}

define i32 @function_10009184(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009184:
  store i32 268472732, i32* @lr, align 4
  %v3_10009198 = call i32 @function_10008c1c(i32 0, i32 128, i32 128)
  ret i32 0
}

define i32 @function_100091b0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100091b0:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v3_100091b0 = icmp eq i32 %arg2, -1
  store i32 %arg1, i32* %r31.global-to-local, align 4
  br i1 %v3_100091b0, label %dec_label_pc_100091dc, label %dec_label_pc_100091cc

dec_label_pc_100091cc:                            ; preds = %dec_label_pc_100091b0
  %tmp20 = icmp slt i32 %arg1, 1
  br i1 %tmp20, label %dec_label_pc_100091dc, label %dec_label_pc_100091d4

dec_label_pc_100091d4:                            ; preds = %dec_label_pc_100091cc
  %tmp21 = icmp slt i32 %arg1, 65
  br i1 %tmp21, label %dec_label_pc_1000920c.lr.ph, label %dec_label_pc_100091dc

dec_label_pc_100091dc:                            ; preds = %dec_label_pc_100091d4, %dec_label_pc_100091cc, %dec_label_pc_100091b0
  %v0_100091dc = call i32 @function_10008b34()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_100091e8 = inttoptr i32 %v0_100091dc to i32*
  store i32 22, i32* %v2_100091e8, align 4
  %v0_1000927c.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009278

dec_label_pc_1000920c.lr.ph:                      ; preds = %dec_label_pc_100091d4
  %v2_100091fc = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_100091fc, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-296, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_1000920c22 = add i32 %v2_100091fc, 128
  %v3_1000920c23 = inttoptr i32 %v2_1000920c22 to i32*
  store i32 0, i32* %v3_1000920c23, align 4
  %v0_1000921024 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000921025 = add i32 %v0_1000921024, -1
  store i32 %v1_1000921025, i32* %r11.global-to-local, align 4
  %v1_1000921426 = mul i32 %v1_1000921025, 4
  %v1_1000921827 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000921828 = add i32 %v1_1000921827, %v1_1000921426
  store i32 %v2_1000921828, i32* %r9.global-to-local, align 4
  %v0_1000921c29 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000921c30 = add i32 %v0_1000921c29, -1
  store i32 %v1_1000921c30, i32* %ctr.global-to-local, align 4
  %v2_1000921c31 = icmp eq i32 %v1_1000921c30, 0
  br i1 %v2_1000921c31, label %dec_label_pc_10009220, label %dec_label_pc_1000920c.dec_label_pc_1000920c_crit_edge

dec_label_pc_1000920c.dec_label_pc_1000920c_crit_edge: ; preds = %dec_label_pc_1000920c.lr.ph, %dec_label_pc_1000920c.dec_label_pc_1000920c_crit_edge
  %v2_1000921832 = phi i32 [ %v2_10009218, %dec_label_pc_1000920c.dec_label_pc_1000920c_crit_edge ], [ %v2_1000921828, %dec_label_pc_1000920c.lr.ph ]
  %v0_1000920c.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000920c = add i32 %v2_1000921832, 4
  %v3_1000920c = inttoptr i32 %v2_1000920c to i32*
  store i32 %v0_1000920c.pre, i32* %v3_1000920c, align 4
  %v0_10009210 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009210 = add i32 %v0_10009210, -1
  store i32 %v1_10009210, i32* %r11.global-to-local, align 4
  %v1_10009214 = mul i32 %v1_10009210, 4
  %v1_10009218 = load i32, i32* %r8.global-to-local, align 4
  %v2_10009218 = add i32 %v1_10009218, %v1_10009214
  store i32 %v2_10009218, i32* %r9.global-to-local, align 4
  %v0_1000921c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000921c = add i32 %v0_1000921c, -1
  store i32 %v1_1000921c, i32* %ctr.global-to-local, align 4
  %v2_1000921c = icmp eq i32 %v1_1000921c, 0
  br i1 %v2_1000921c, label %dec_label_pc_10009220, label %dec_label_pc_1000920c.dec_label_pc_1000920c_crit_edge

dec_label_pc_10009220:                            ; preds = %dec_label_pc_1000920c.dec_label_pc_1000920c_crit_edge, %dec_label_pc_1000920c.lr.ph
  %v0_10009224.pre = load i32, i32* %r31.global-to-local, align 4
  %v2_10009220 = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v2_10009220, i32* @r3, align 4
  store i32 %v0_10009224.pre, i32* @r4, align 4
  %v0_10009228 = call i32 @function_100092b8()
  %v1_1000922c = icmp slt i32 %v0_10009228, 0
  br i1 %v1_1000922c, label %dec_label_pc_10009274, label %dec_label_pc_10009234

dec_label_pc_10009234:                            ; preds = %dec_label_pc_10009220
  %v0_10009238 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009240 = call i32 @function_10009290(i32 ptrtoint (i32* @global_var_1001b6e0.285 to i32), i32 %v0_10009238)
  %v2_1000924c = ptrtoint i32* %stack_var_-156 to i32
  store i32 268472932, i32* @lr, align 4
  %v4_10009260 = call i32 @function_1000aa48(i32 %v0_10009238, i32* nonnull %stack_var_-296, i32 %v2_1000924c)
  %v1_10009264 = icmp slt i32 %v4_10009260, 0
  br i1 %v1_10009264, label %dec_label_pc_10009274, label %dec_label_pc_1000926c

dec_label_pc_1000926c:                            ; preds = %dec_label_pc_10009234
  %v3_1000926c = load i32, i32* %stack_var_-156, align 4
  store i32 %v3_1000926c, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009278

dec_label_pc_10009274:                            ; preds = %dec_label_pc_10009234, %dec_label_pc_10009220
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009278

dec_label_pc_10009278:                            ; preds = %dec_label_pc_1000926c, %dec_label_pc_100091dc, %dec_label_pc_10009274
  %v0_1000927c = phi i32 [ %v3_1000926c, %dec_label_pc_1000926c ], [ %v0_1000927c.pre, %dec_label_pc_100091dc ], [ -1, %dec_label_pc_10009274 ]
  ret i32 %v0_1000927c

; uselistorder directives
  uselistorder i32 %v1_1000921c, { 1, 0 }
  uselistorder i32 %v2_10009218, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 5, 3, 4 }
  uselistorder i32* %r11.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10009278, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000920c.dec_label_pc_1000920c_crit_edge, { 1, 0 }
}

define i32 @function_10009290(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009290:
  %v1_10009290 = add i32 %arg2, -1
  %v1_10009294 = call i32 @__asm_rlwinm(i32 %v1_10009290, i32 29, i32 3, i32 29)
  %v1_10009298 = urem i32 %v1_10009290, 32
  %v2_1000929c = add i32 %v1_10009294, %arg1
  %v3_1000929c = inttoptr i32 %v2_1000929c to i32*
  %v4_1000929c = load i32, i32* %v3_1000929c, align 4
  %v3_100092a4 = shl i32 1, %v1_10009298
  %v2_100092a8 = and i32 %v4_1000929c, %v3_100092a4
  %v2_100092ac = icmp ne i32 %v2_100092a8, 0
  %v5_100092b0 = zext i1 %v2_100092ac to i32
  ret i32 %v5_100092b0
}

define i32 @function_100092b8() local_unnamed_addr {
dec_label_pc_100092b8:
  %r0.global-to-local = alloca i32, align 4
  %v0_100092b8 = load i32, i32* @r4, align 4
  %v1_100092b8 = add i32 %v0_100092b8, -1
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_100092c0 = call i32 @__asm_rlwinm(i32 %v1_100092b8, i32 29, i32 3, i32 29)
  %v1_100092c4 = urem i32 %v1_100092b8, 32
  %v1_100092c8 = load i32, i32* @r3, align 4
  %v2_100092c8 = add i32 %v1_100092c8, %v1_100092c0
  %v3_100092c8 = inttoptr i32 %v2_100092c8 to i32*
  %v4_100092c8 = load i32, i32* %v3_100092c8, align 4
  %v0_100092cc = load i32, i32* %r0.global-to-local, align 4
  %v3_100092cc = shl i32 %v0_100092cc, %v1_100092c4
  store i32 %v3_100092cc, i32* %r0.global-to-local, align 4
  %v2_100092d0 = or i32 %v3_100092cc, %v4_100092c8
  store i32 %v2_100092d0, i32* %v3_100092c8, align 4
  ret i32 0
}

define i32 @function_100092e0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100092e0:
  %v1_100092e0 = add i32 %arg2, -1
  %v1_100092e8 = call i32 @__asm_rlwinm(i32 %v1_100092e0, i32 29, i32 3, i32 29)
  %v1_100092ec = urem i32 %v1_100092e0, 32
  %v2_100092f0 = add i32 %v1_100092e8, %arg1
  %v3_100092f0 = inttoptr i32 %v2_100092f0 to i32*
  %v4_100092f0 = load i32, i32* %v3_100092f0, align 4
  %v3_100092f4 = shl i32 -2, %v1_100092ec
  %v4_100092f4 = sub nsw i32 32, %v1_100092ec
  %v5_100092f4 = lshr i32 -2, %v4_100092f4
  %v6_100092f4 = or i32 %v5_100092f4, %v3_100092f4
  %v2_100092f8 = and i32 %v6_100092f4, %v4_100092f0
  store i32 %v2_100092f8, i32* %v3_100092f0, align 4
  ret i32 0
}

define i32 @function_10009308() local_unnamed_addr {
dec_label_pc_10009308:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_10009308 = load i32, i32* @r3, align 4
  %v3_10009308 = icmp eq i32 %v0_10009308, 0
  br i1 %v3_10009308, label %dec_label_pc_10009324.thread, label %dec_label_pc_10009324

dec_label_pc_10009324.thread:                     ; preds = %dec_label_pc_10009308
  br label %dec_label_pc_10009330

dec_label_pc_10009324:                            ; preds = %dec_label_pc_10009308
  %v3_10009328 = icmp ugt i32 %v0_10009308, -8
  br i1 %v3_10009328, label %dec_label_pc_10009438, label %dec_label_pc_10009330

dec_label_pc_10009330:                            ; preds = %dec_label_pc_10009324.thread, %dec_label_pc_10009324
  %v0_1000933416 = phi i32 [ 1, %dec_label_pc_10009324.thread ], [ %v0_10009308, %dec_label_pc_10009324 ]
  %v1_10009334 = add i32 %v0_1000933416, 4
  store i32 ptrtoint (i32* @global_var_1001b5c0.286 to i32), i32* @r29, align 4
  store i32 %v1_10009334, i32* %stack_var_-40, align 4
  %v0_10009344 = call i32 @function_10009e64()
  %v2_1000934c = ptrtoint i32* %stack_var_-40 to i32
  %v3_10009354 = call i32 @function_10009700(i32* inttoptr (i32 268547304 to i32*), i32 %v2_1000934c)
  store i32 %v3_10009354, i32* %r31.global-to-local, align 4
  %v0_10009360 = call i32 @function_10009e64()
  %v3_10009364 = icmp eq i32 %v3_10009354, 0
  br i1 %v3_10009364, label %dec_label_pc_1000936c, label %dec_label_pc_1000941c.thread

dec_label_pc_1000941c.thread:                     ; preds = %dec_label_pc_10009330
  br label %dec_label_pc_10009430

dec_label_pc_1000936c:                            ; preds = %dec_label_pc_10009330
  %v3_10009370 = load i32, i32* @global_var_1001b544.289, align 4
  store i32 %v3_10009370, i32* %r31.global-to-local, align 4
  %v3_10009374 = load i32, i32* %stack_var_-40, align 4
  %v2_10009378 = icmp ult i32 %v3_10009374, %v3_10009370
  br i1 %v2_10009378, label %dec_label_pc_10009390, label %dec_label_pc_10009380

dec_label_pc_10009380:                            ; preds = %dec_label_pc_1000936c
  %v1_10009384 = sub i32 0, %v3_10009370
  %v2_10009380 = add i32 %v3_10009370, -1
  %v1_10009388 = add i32 %v2_10009380, %v3_10009374
  %v2_1000938c = and i32 %v1_10009388, %v1_10009384
  store i32 %v2_1000938c, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009390

dec_label_pc_10009390:                            ; preds = %dec_label_pc_1000936c, %dec_label_pc_10009380
  %v0_1000939c = call i32 @function_10009e64()
  %v0_100093a0 = load i32, i32* %r31.global-to-local, align 4
  store i32 268473256, i32* @lr, align 4
  %v1_100093a4 = call i32 @function_1000a684(i32 %v0_100093a0)
  %v3_100093a8 = icmp eq i32 %v1_100093a4, -1
  br i1 %v3_100093a8, label %dec_label_pc_100093c8, label %dec_label_pc_100093b0

dec_label_pc_100093b0:                            ; preds = %dec_label_pc_10009390
  %v1_100093b0 = add i32 %v1_100093a4, 3
  %v1_100093b4 = call i32 @__asm_rlwinm(i32 %v1_100093b0, i32 0, i32 0, i32 29)
  store i32 %v1_100093b4, i32* @r30, align 4
  %v4_100093b8 = icmp eq i32 %v1_100093b4, %v1_100093a4
  br i1 %v4_100093b8, label %dec_label_pc_100093c8, label %dec_label_pc_100093c0

dec_label_pc_100093c0:                            ; preds = %dec_label_pc_100093b0
  %v2_100093c0 = sub i32 %v1_100093b4, %v1_100093a4
  store i32 268473288, i32* @lr, align 4
  %v1_100093c4 = call i32 @function_1000a684(i32 %v2_100093c0)
  br label %dec_label_pc_100093c8

dec_label_pc_100093c8:                            ; preds = %dec_label_pc_100093b0, %dec_label_pc_10009390, %dec_label_pc_100093c0
  %v0_100093d0 = call i32 @function_10009e64()
  %v0_100093d4 = load i32, i32* @r30, align 4
  %v3_100093d4 = icmp eq i32 %v0_100093d4, -1
  br i1 %v3_100093d4, label %dec_label_pc_10009438, label %dec_label_pc_1000941c

dec_label_pc_1000941c:                            ; preds = %dec_label_pc_100093c8
  store i32 ptrtoint (i32* @global_var_1001b5c0.286 to i32), i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_1001b4e8 to i32), i32* @r29, align 4
  %v0_100093f0 = call i32 @function_10009e64()
  %v0_100093f4 = load i32, i32* @r31, align 4
  %v0_100093f8 = load i32, i32* @r30, align 4
  %v0_100093fc = load i32, i32* @r29, align 4
  store i32 268473348, i32* @lr, align 4
  %v3_10009400 = inttoptr i32 %v0_100093fc to i32*
  %v4_10009400 = call i32 @function_10009884(i32* %v3_10009400, i32 %v0_100093f8, i32 %v0_100093f4)
  %v0_10009404 = load i32, i32* @r29, align 4
  %v2_1000940c = inttoptr i32 %v0_10009404 to i32*
  %v3_1000940c = call i32 @function_10009700(i32* %v2_1000940c, i32 %v2_1000934c)
  store i32 %v3_1000940c, i32* %r31.global-to-local, align 4
  %v0_10009418 = call i32 @function_10009e64()
  %v3_1000941c = icmp eq i32 %v3_1000940c, 0
  br i1 %v3_1000941c, label %dec_label_pc_10009430.thread, label %dec_label_pc_10009430

dec_label_pc_10009430.thread:                     ; preds = %dec_label_pc_1000941c
  br label %dec_label_pc_10009438

dec_label_pc_10009430:                            ; preds = %dec_label_pc_1000941c, %dec_label_pc_1000941c.thread
  %v0_10009430.pr6 = phi i32 [ %v3_10009354, %dec_label_pc_1000941c.thread ], [ %v3_1000940c, %dec_label_pc_1000941c ]
  %v3_10009424 = load i32, i32* %stack_var_-40, align 4
  %v2_10009428 = inttoptr i32 %v0_10009430.pr6 to i32*
  store i32 %v3_10009424, i32* %v2_10009428, align 4
  %v0_1000942c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000942c = add i32 %v0_1000942c, 4
  store i32 %v1_1000942c, i32* @r31, align 4
  %v3_10009430 = icmp eq i32 %v1_1000942c, 0
  br i1 %v3_10009430, label %dec_label_pc_10009438, label %dec_label_pc_10009448

dec_label_pc_10009438:                            ; preds = %dec_label_pc_10009430.thread, %dec_label_pc_10009430, %dec_label_pc_100093c8, %dec_label_pc_10009324
  %v0_10009438 = call i32 @function_10008b34()
  %v2_10009440 = inttoptr i32 %v0_10009438 to i32*
  store i32 12, i32* %v2_10009440, align 4
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_10009448

dec_label_pc_10009448:                            ; preds = %dec_label_pc_10009430, %dec_label_pc_10009438
  %v0_1000944c = phi i32 [ %v1_1000942c, %dec_label_pc_10009430 ], [ 0, %dec_label_pc_10009438 ]
  ret i32 %v0_1000944c

; uselistorder directives
  uselistorder i32 %v1_1000942c, { 1, 0, 2 }
  uselistorder i32 %v1_100093b4, { 1, 0, 2 }
  uselistorder i32 %v1_100093a4, { 1, 0, 2, 3 }
  uselistorder i32 %v3_10009370, { 1, 0, 2, 3 }
  uselistorder i32 %v3_10009354, { 1, 0, 2 }
  uselistorder i32 %v0_10009308, { 1, 0, 2 }
  uselistorder i32* %stack_var_-40, { 0, 1, 3, 2 }
  uselistorder i32* %r31.global-to-local, { 4, 0, 2, 1, 3, 5 }
  uselistorder label %dec_label_pc_10009448, { 1, 0 }
  uselistorder label %dec_label_pc_10009438, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_100093c8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009390, { 1, 0 }
  uselistorder label %dec_label_pc_10009330, { 1, 0 }
}

define i32 @function_10009460(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009460:
  %v3_10009460 = icmp eq i32 %arg1, 0
  %v2_10009470 = mul i32 %arg2, %arg1
  store i32 %v2_10009470, i32* @r31, align 4
  br i1 %v3_10009460, label %dec_label_pc_1000949c, label %dec_label_pc_1000947c

dec_label_pc_1000947c:                            ; preds = %dec_label_pc_10009460
  %v2_1000947c = udiv i32 %v2_10009470, %arg1
  store i32 0, i32* @r30, align 4
  %v4_10009484 = icmp eq i32 %v2_1000947c, %arg2
  br i1 %v4_10009484, label %dec_label_pc_1000949c, label %dec_label_pc_1000948c

dec_label_pc_1000948c:                            ; preds = %dec_label_pc_1000947c
  %v0_1000948c = call i32 @function_10008b34()
  %v2_10009494 = inttoptr i32 %v0_1000948c to i32*
  store i32 12, i32* %v2_10009494, align 4
  br label %dec_label_pc_100094b8

dec_label_pc_1000949c:                            ; preds = %dec_label_pc_1000947c, %dec_label_pc_10009460
  store i32 %v2_10009470, i32* @r3, align 4
  store i32 268473508, i32* @lr, align 4
  %v0_100094a0 = call i32 @function_10009308()
  %v0_100094a4 = load i32, i32* @r31, align 4
  store i32 %v0_100094a0, i32* @r30, align 4
  %v3_100094a8 = icmp eq i32 %v0_100094a0, 0
  br i1 %v3_100094a8, label %dec_label_pc_100094b8, label %dec_label_pc_100094b4

dec_label_pc_100094b4:                            ; preds = %dec_label_pc_1000949c
  store i32 268473528, i32* @lr, align 4
  %v3_100094b4 = call i32 @function_10008c1c(i32 0, i32 %v0_100094a4, i32 %v0_100094a4)
  br label %dec_label_pc_100094b8

dec_label_pc_100094b8:                            ; preds = %dec_label_pc_1000949c, %dec_label_pc_1000948c, %dec_label_pc_100094b4
  %v0_100094bc = load i32, i32* @r30, align 4
  ret i32 %v0_100094bc

; uselistorder directives
  uselistorder i32 %v0_100094a4, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100094b8, { 2, 0, 1 }
}

define i32 @function_100094d0() local_unnamed_addr {
dec_label_pc_100094d0:
  %v0_100094d0 = load i32, i32* @r3, align 4
  %v3_100094d0 = icmp eq i32 %v0_100094d0, 0
  br i1 %v3_100094d0, label %dec_label_pc_100095bc, label %dec_label_pc_100094e8

dec_label_pc_100094e8:                            ; preds = %dec_label_pc_100094d0
  %v1_100094ec = add i32 %v0_100094d0, -4
  %v2_100094ec = inttoptr i32 %v1_100094ec to i32*
  %v3_100094ec = load i32, i32* %v2_100094ec, align 4
  store i32 %v3_100094ec, i32* @r28, align 4
  store i32 268566528, i32* @r26, align 4
  %v0_10009500 = call i32 @function_10009e64()
  %v0_10009508 = load i32, i32* @r28, align 4
  store i32 268473620, i32* @lr, align 4
  %v4_10009510 = call i32 @function_10009884(i32* nonnull @global_var_1001b4e8, i32 %v1_100094ec, i32 %v0_10009508)
  %v3_10009518 = load i32, i32* @global_var_1001b544.289, align 4
  store i32 %v4_10009510, i32* @r29, align 4
  %v1_10009520 = inttoptr i32 %v4_10009510 to i32*
  %v2_10009520 = load i32, i32* %v1_10009520, align 4
  store i32 %v2_10009520, i32* @r27, align 4
  %v1_10009524 = mul i32 %v3_10009518, 8
  %v2_10009528 = icmp ult i32 %v2_10009520, %v1_10009524
  br i1 %v2_10009528, label %dec_label_pc_1000955c, label %dec_label_pc_10009530

dec_label_pc_10009530:                            ; preds = %dec_label_pc_100094e8
  store i32 ptrtoint (i32* @global_var_1001b760.290 to i32), i32* @r28, align 4
  %v0_10009540 = call i32 @function_10009e64()
  store i32 268473676, i32* @lr, align 4
  %v1_10009548 = call i32 @function_1000a684(i32 0)
  %v0_1000954c = load i32, i32* @r31, align 4
  %v4_1000954c = icmp eq i32 %v0_1000954c, %v1_10009548
  br i1 %v4_1000954c, label %dec_label_pc_10009564, label %dec_label_pc_10009554

dec_label_pc_10009554:                            ; preds = %dec_label_pc_10009530
  %v0_10009558 = call i32 @function_10009e64()
  br label %dec_label_pc_1000955c

dec_label_pc_1000955c:                            ; preds = %dec_label_pc_100094e8, %dec_label_pc_10009554
  br label %dec_label_pc_100095b8

dec_label_pc_10009564:                            ; preds = %dec_label_pc_10009530
  %v0_10009564 = load i32, i32* @r29, align 4
  %v1_10009564 = add i32 %v0_10009564, 4
  %v2_10009564 = inttoptr i32 %v1_10009564 to i32*
  %v3_10009564 = load i32, i32* %v2_10009564, align 4
  %v3_10009568 = icmp eq i32 %v3_10009564, 0
  br i1 %v3_10009568, label %dec_label_pc_10009578, label %dec_label_pc_10009570

dec_label_pc_10009570:                            ; preds = %dec_label_pc_10009564
  %v1_10009570 = add i32 %v0_10009564, 8
  %v2_10009570 = inttoptr i32 %v1_10009570 to i32*
  %v3_10009570 = load i32, i32* %v2_10009570, align 4
  %v2_10009574 = add i32 %v3_10009564, 8
  %v3_10009574 = inttoptr i32 %v2_10009574 to i32*
  store i32 %v3_10009570, i32* %v3_10009574, align 4
  %v0_10009578.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10009578

dec_label_pc_10009578:                            ; preds = %dec_label_pc_10009564, %dec_label_pc_10009570
  %v0_10009578 = phi i32 [ %v0_10009564, %dec_label_pc_10009564 ], [ %v0_10009578.pre, %dec_label_pc_10009570 ]
  %v1_10009578 = add i32 %v0_10009578, 8
  %v2_10009578 = inttoptr i32 %v1_10009578 to i32*
  %v3_10009578 = load i32, i32* %v2_10009578, align 4
  %v1_1000957c = add i32 %v0_10009578, 4
  %v2_1000957c = inttoptr i32 %v1_1000957c to i32*
  %v3_1000957c = load i32, i32* %v2_1000957c, align 4
  %v3_10009580 = icmp eq i32 %v3_10009578, 0
  br i1 %v3_10009580, label %dec_label_pc_10009590, label %dec_label_pc_10009588

dec_label_pc_10009588:                            ; preds = %dec_label_pc_10009578
  %v2_10009588 = add i32 %v3_10009578, 4
  %v3_10009588 = inttoptr i32 %v2_10009588 to i32*
  store i32 %v3_1000957c, i32* %v3_10009588, align 4
  br label %dec_label_pc_10009594

dec_label_pc_10009590:                            ; preds = %dec_label_pc_10009578
  store i32 %v3_1000957c, i32* @global_var_1001b4e8, align 4
  br label %dec_label_pc_10009594

dec_label_pc_10009594:                            ; preds = %dec_label_pc_10009588, %dec_label_pc_10009590
  %v0_1000959c = call i32 @function_10009e64()
  %v0_100095a0 = load i32, i32* @r27, align 4
  %v1_100095a0 = load i32, i32* @r29, align 4
  %v0_100095a8 = load i32, i32* @r31, align 4
  %v2_100095a0 = sub i32 12, %v0_100095a0
  %v1_100095a4 = add i32 %v2_100095a0, %v1_100095a0
  %v2_100095a8 = sub i32 %v1_100095a4, %v0_100095a8
  store i32 268473776, i32* @lr, align 4
  %v1_100095ac = call i32 @function_1000a684(i32 %v2_100095a8)
  br label %dec_label_pc_100095b8

dec_label_pc_100095b8:                            ; preds = %dec_label_pc_1000955c, %dec_label_pc_10009594
  %v0_100095b8 = call i32 @function_10009e64()
  br label %dec_label_pc_100095bc

dec_label_pc_100095bc:                            ; preds = %dec_label_pc_100094d0, %dec_label_pc_100095b8
  %.0 = phi i32 [ undef, %dec_label_pc_100094d0 ], [ %v0_100095b8, %dec_label_pc_100095b8 ]
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v0_10009578, { 1, 0 }
  uselistorder i32 (i32)* @function_1000a684, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_100095bc, { 1, 0 }
  uselistorder label %dec_label_pc_100095b8, { 1, 0 }
  uselistorder label %dec_label_pc_10009594, { 1, 0 }
  uselistorder label %dec_label_pc_10009578, { 1, 0 }
  uselistorder label %dec_label_pc_1000955c, { 1, 0 }
}

define i32 @function_100095d0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100095d0:
  %r27.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v3_100095d0 = icmp eq i32 %arg2, 0
  store i32 %arg1, i32* @r28, align 4
  br i1 %v3_100095d0, label %dec_label_pc_100095ec, label %dec_label_pc_100095f8

dec_label_pc_100095ec:                            ; preds = %dec_label_pc_100095d0
  store i32 ptrtoint ([3 x i8]* @global_var_100095f0.294 to i32), i32* @lr, align 4
  %v0_100095ec = call i32 @function_100094d0()
  br label %dec_label_pc_10009604

dec_label_pc_100095f8:                            ; preds = %dec_label_pc_100095d0
  %v3_100095f8 = icmp eq i32 %arg1, 0
  br i1 %v3_100095f8, label %dec_label_pc_10009604, label %dec_label_pc_10009610

dec_label_pc_10009604:                            ; preds = %dec_label_pc_100095f8, %dec_label_pc_100095ec
  %storemerge = phi i32 [ 0, %dec_label_pc_100095ec ], [ %arg2, %dec_label_pc_100095f8 ]
  store i32 %storemerge, i32* @r3, align 4
  store i32 268473864, i32* @lr, align 4
  %v0_10009604 = call i32 @function_10009308()
  store i32 %v0_10009604, i32* @r28, align 4
  br label %dec_label_pc_100096e8

dec_label_pc_10009610:                            ; preds = %dec_label_pc_100095f8
  %v1_10009610 = add i32 %arg2, 7
  %v1_10009614 = add i32 %arg1, -4
  store i32 %v1_10009614, i32* %r27.global-to-local, align 4
  %v1_10009618 = call i32 @__asm_rlwinm(i32 %v1_10009610, i32 0, i32 0, i32 29)
  store i32 %v1_10009618, i32* @r31, align 4
  %v2_1000961c = inttoptr i32 %v1_10009614 to i32*
  %v3_1000961c = load i32, i32* %v2_1000961c, align 4
  store i32 %v3_1000961c, i32* @r30, align 4
  %v2_10009620 = icmp ugt i32 %v1_10009618, 11
  br i1 %v2_10009620, label %dec_label_pc_1000962c, label %dec_label_pc_10009628

dec_label_pc_10009628:                            ; preds = %dec_label_pc_10009610
  store i32 12, i32* @r31, align 4
  br label %dec_label_pc_1000962c

dec_label_pc_1000962c:                            ; preds = %dec_label_pc_10009610, %dec_label_pc_10009628
  %v0_100096ac = phi i32 [ %v1_10009618, %dec_label_pc_10009610 ], [ 12, %dec_label_pc_10009628 ]
  %v3_1000962c = icmp ugt i32 %v0_100096ac, %v3_1000961c
  br i1 %v3_1000962c, label %dec_label_pc_10009634, label %dec_label_pc_100096ac

dec_label_pc_10009634:                            ; preds = %dec_label_pc_1000962c
  %v0_10009640 = call i32 @function_10009e64()
  %v0_10009648 = load i32, i32* %r27.global-to-local, align 4
  %v1_10009648 = load i32, i32* @r30, align 4
  %v2_10009648 = add i32 %v1_10009648, %v0_10009648
  %v1_1000964c = load i32, i32* @r31, align 4
  %v2_1000964c = sub i32 %v1_1000964c, %v1_10009648
  %v4_10009654 = call i32 @function_100097a0(i32* nonnull @global_var_1001b4e8, i32 %v2_10009648, i32 %v2_1000964c)
  store i32 %v4_10009654, i32* %r27.global-to-local, align 4
  %v0_10009660 = call i32 @function_10009e64()
  %v3_10009664 = icmp eq i32 %v4_10009654, 0
  br i1 %v3_10009664, label %dec_label_pc_10009678, label %dec_label_pc_1000966c

dec_label_pc_1000966c:                            ; preds = %dec_label_pc_10009634
  %v0_1000966c = load i32, i32* @r30, align 4
  %v2_1000966c = add i32 %v0_1000966c, %v4_10009654
  %v1_10009670 = load i32, i32* @r28, align 4
  %v2_10009670 = add i32 %v1_10009670, -4
  %v3_10009670 = inttoptr i32 %v2_10009670 to i32*
  store i32 %v2_1000966c, i32* %v3_10009670, align 4
  br label %dec_label_pc_100096e8

dec_label_pc_10009678:                            ; preds = %dec_label_pc_10009634
  %v0_10009678 = load i32, i32* @r31, align 4
  %v1_10009678 = add i32 %v0_10009678, -4
  store i32 %v1_10009678, i32* @r3, align 4
  store i32 268473984, i32* @lr, align 4
  %v0_1000967c = call i32 @function_10009308()
  store i32 %v0_1000967c, i32* @r3, align 4
  store i32 %v0_1000967c, i32* @r31, align 4
  %v3_10009680 = icmp eq i32 %v0_1000967c, 0
  br i1 %v3_10009680, label %dec_label_pc_10009688, label %dec_label_pc_10009690

dec_label_pc_10009688:                            ; preds = %dec_label_pc_10009678
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_100096e8

dec_label_pc_10009690:                            ; preds = %dec_label_pc_10009678
  %v0_10009690 = load i32, i32* @r28, align 4
  store i32 %v0_10009690, i32* @r4, align 4
  %v0_10009694 = load i32, i32* @r30, align 4
  %v1_10009694 = add i32 %v0_10009694, -4
  store i32 %v1_10009694, i32* @r5, align 4
  store i32 268474012, i32* @lr, align 4
  %v0_10009698 = call i32 @function_1000a8b8()
  %v0_1000969c = load i32, i32* @r28, align 4
  store i32 %v0_1000969c, i32* @r3, align 4
  store i32 268474020, i32* @lr, align 4
  %v0_100096a0 = call i32 @function_100094d0()
  %v0_100096a4 = load i32, i32* @r31, align 4
  store i32 %v0_100096a4, i32* @r28, align 4
  br label %dec_label_pc_100096e8

dec_label_pc_100096ac:                            ; preds = %dec_label_pc_1000962c
  %v1_100096ac = add i32 %v0_100096ac, 28
  %v3_100096b0 = icmp ugt i32 %v1_100096ac, %v3_1000961c
  br i1 %v3_100096b0, label %dec_label_pc_100096e8, label %dec_label_pc_100096b8

dec_label_pc_100096b8:                            ; preds = %dec_label_pc_100096ac
  store i32 ptrtoint (i32* @global_var_1001b5c0.286 to i32), i32* @r29, align 4
  %v0_100096c4 = call i32 @function_10009e64()
  %v0_100096cc = load i32, i32* %r27.global-to-local, align 4
  %v1_100096cc = load i32, i32* @r31, align 4
  %v2_100096cc = add i32 %v1_100096cc, %v0_100096cc
  %v1_100096d0 = load i32, i32* @r30, align 4
  %v2_100096d0 = sub i32 %v1_100096d0, %v1_100096cc
  store i32 268474076, i32* @lr, align 4
  %v4_100096d8 = call i32 @function_10009884(i32* nonnull @global_var_1001b4e8, i32 %v2_100096cc, i32 %v2_100096d0)
  %v0_100096e0 = call i32 @function_10009e64()
  %v0_100096e4 = load i32, i32* @r31, align 4
  %v1_100096e4 = load i32, i32* @r28, align 4
  %v2_100096e4 = add i32 %v1_100096e4, -4
  %v3_100096e4 = inttoptr i32 %v2_100096e4 to i32*
  store i32 %v0_100096e4, i32* %v3_100096e4, align 4
  br label %dec_label_pc_100096e8

dec_label_pc_100096e8:                            ; preds = %dec_label_pc_100096ac, %dec_label_pc_10009690, %dec_label_pc_10009688, %dec_label_pc_1000966c, %dec_label_pc_10009604, %dec_label_pc_100096b8
  %v0_100096ec = load i32, i32* @r28, align 4
  ret i32 %v0_100096ec

; uselistorder directives
  uselistorder i32 %v1_100096cc, { 1, 0 }
  uselistorder i32 %v4_10009654, { 1, 0, 2 }
  uselistorder i32 %v1_10009648, { 1, 0 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* @global_var_1001b4e8, { 0, 1, 3, 2, 4 }
  uselistorder i32 ()* @function_10009308, { 2, 1, 0, 5, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 4, 3 }
  uselistorder i32 ()* @function_100094d0, { 4, 3, 7, 6, 5, 2, 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_100096e8, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_1000962c, { 1, 0 }
}

define i32 @function_10009700(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009700:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v1_10009700 = inttoptr i32 %arg2 to i32*
  %v2_10009700 = load i32, i32* %v1_10009700, align 4
  %v1_10009704 = add i32 %v2_10009700, 3
  store i32 %v1_10009704, i32* %r9.global-to-local, align 4
  %v1_10009708 = call i32 @__asm_rlwinm(i32 %v1_10009704, i32 0, i32 0, i32 29)
  %v2_1000970c = icmp ugt i32 %v1_10009708, 11
  br i1 %v2_1000970c, label %dec_label_pc_10009790.preheader, label %dec_label_pc_10009714

dec_label_pc_10009714:                            ; preds = %dec_label_pc_10009700
  br label %dec_label_pc_10009790.preheader

dec_label_pc_10009790.preheader:                  ; preds = %dec_label_pc_10009700, %dec_label_pc_10009714
  %storemerge20 = phi i32 [ 12, %dec_label_pc_10009714 ], [ %v1_10009708, %dec_label_pc_10009700 ]
  %v0_10009774 = phi i32 [ 12, %dec_label_pc_10009714 ], [ %v1_10009708, %dec_label_pc_10009700 ]
  store i32 %storemerge20, i32* %r11.global-to-local, align 4
  %storemerge2 = load i32, i32* %arg1, align 4
  store i32 %storemerge2, i32* %r9.global-to-local, align 4
  %v3_100097905 = icmp eq i32 %storemerge2, 0
  br i1 %v3_100097905, label %dec_label_pc_10009798, label %dec_label_pc_10009720

dec_label_pc_10009720:                            ; preds = %dec_label_pc_10009790.preheader, %dec_label_pc_1000978c
  %v0_1000978c = phi i32 [ %storemerge, %dec_label_pc_1000978c ], [ %storemerge2, %dec_label_pc_10009790.preheader ]
  %v1_10009720 = inttoptr i32 %v0_1000978c to i32*
  %v2_10009720 = load i32, i32* %v1_10009720, align 4
  store i32 %v2_10009720, i32* %r10.global-to-local, align 4
  %v2_10009724 = icmp ult i32 %v2_10009720, %v0_10009774
  br i1 %v2_10009724, label %dec_label_pc_1000978c, label %dec_label_pc_1000972c

dec_label_pc_1000972c:                            ; preds = %dec_label_pc_10009720
  %v1_1000972c = add i32 %v0_10009774, 44
  %v2_10009730 = icmp ult i32 %v2_10009720, %v1_1000972c
  br i1 %v2_10009730, label %dec_label_pc_10009738, label %dec_label_pc_10009774

dec_label_pc_10009738:                            ; preds = %dec_label_pc_1000972c
  %v1_10009738 = add i32 %v0_1000978c, 4
  %v2_10009738 = inttoptr i32 %v1_10009738 to i32*
  %v3_10009738 = load i32, i32* %v2_10009738, align 4
  store i32 %v3_10009738, i32* %r11.global-to-local, align 4
  %v3_1000973c = icmp eq i32 %v3_10009738, 0
  br i1 %v3_1000973c, label %dec_label_pc_1000974c, label %dec_label_pc_10009744

dec_label_pc_10009744:                            ; preds = %dec_label_pc_10009738
  %v1_10009744 = add i32 %v0_1000978c, 8
  %v2_10009744 = inttoptr i32 %v1_10009744 to i32*
  %v3_10009744 = load i32, i32* %v2_10009744, align 4
  %v2_10009748 = add i32 %v3_10009738, 8
  %v3_10009748 = inttoptr i32 %v2_10009748 to i32*
  store i32 %v3_10009744, i32* %v3_10009748, align 4
  %v0_1000974c.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10009768.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000974c

dec_label_pc_1000974c:                            ; preds = %dec_label_pc_10009738, %dec_label_pc_10009744
  %v0_10009768 = phi i32 [ %v2_10009720, %dec_label_pc_10009738 ], [ %v0_10009768.pre, %dec_label_pc_10009744 ]
  %v0_1000974c = phi i32 [ %v0_1000978c, %dec_label_pc_10009738 ], [ %v0_1000974c.pre, %dec_label_pc_10009744 ]
  %v1_1000974c = add i32 %v0_1000974c, 8
  %v2_1000974c = inttoptr i32 %v1_1000974c to i32*
  %v3_1000974c = load i32, i32* %v2_1000974c, align 4
  %v1_10009750 = add i32 %v0_1000974c, 4
  %v2_10009750 = inttoptr i32 %v1_10009750 to i32*
  %v3_10009750 = load i32, i32* %v2_10009750, align 4
  %v3_10009754 = icmp eq i32 %v3_1000974c, 0
  store i32 %v0_10009768, i32* %r11.global-to-local, align 4
  br i1 %v3_10009754, label %dec_label_pc_10009768, label %dec_label_pc_1000975c

dec_label_pc_1000975c:                            ; preds = %dec_label_pc_1000974c
  %v2_10009760 = add i32 %v3_1000974c, 4
  %v3_10009760 = inttoptr i32 %v2_10009760 to i32*
  store i32 %v3_10009750, i32* %v3_10009760, align 4
  br label %dec_label_pc_1000977c

dec_label_pc_10009768:                            ; preds = %dec_label_pc_1000974c
  store i32 %v3_10009750, i32* %arg1, align 4
  br label %dec_label_pc_1000977c

dec_label_pc_10009774:                            ; preds = %dec_label_pc_1000972c
  %v2_10009774 = sub i32 %v2_10009720, %v0_10009774
  store i32 %v2_10009774, i32* %v1_10009720, align 4
  br label %dec_label_pc_1000977c

dec_label_pc_1000977c:                            ; preds = %dec_label_pc_10009768, %dec_label_pc_1000975c, %dec_label_pc_10009774
  %v0_1000977c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000977c = load i32, i32* %r9.global-to-local, align 4
  %v2_1000977c = sub i32 %v1_1000977c, %v0_1000977c
  store i32 %v2_1000977c, i32* %r9.global-to-local, align 4
  %v0_10009780 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10009780, i32* %v1_10009700, align 4
  %v0_10009784 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009784 = add i32 %v0_10009784, 12
  ret i32 %v1_10009784

dec_label_pc_1000978c:                            ; preds = %dec_label_pc_10009720
  %v1_1000978c = add i32 %v0_1000978c, 4
  %storemerge.in = inttoptr i32 %v1_1000978c to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v3_10009790 = icmp eq i32 %storemerge, 0
  br i1 %v3_10009790, label %dec_label_pc_10009790.dec_label_pc_10009798_crit_edge, label %dec_label_pc_10009720

dec_label_pc_10009790.dec_label_pc_10009798_crit_edge: ; preds = %dec_label_pc_1000978c
  br label %dec_label_pc_10009798

dec_label_pc_10009798:                            ; preds = %dec_label_pc_10009790.dec_label_pc_10009798_crit_edge, %dec_label_pc_10009790.preheader
  ret i32 0

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_1000974c, { 1, 0 }
  uselistorder i32 %v2_10009720, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_1000978c, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_10009774, { 1, 2, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 4, 5, 2, 1, 3, 6 }
  uselistorder i32* %r11.global-to-local, { 3, 1, 2, 0 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2 }
  uselistorder i32* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000977c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000974c, { 1, 0 }
  uselistorder label %dec_label_pc_10009720, { 1, 0 }
  uselistorder label %dec_label_pc_10009790.preheader, { 1, 0 }
}

define i32 @function_100097a0(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100097a0:
  %r11.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_100097a0 = load i32, i32* %arg1, align 4
  store i32 %v2_100097a0, i32* %r11.global-to-local, align 4
  store i32 %tmp, i32* %r8.global-to-local, align 4
  %v1_100097a8 = add i32 %arg3, 3
  %v3_1000982c3 = icmp eq i32 %v2_100097a0, 0
  br i1 %v3_1000982c3, label %dec_label_pc_10009834, label %dec_label_pc_100097b0

dec_label_pc_100097b0:                            ; preds = %dec_label_pc_100097a0, %dec_label_pc_10009828
  %v0_10009828 = phi i32 [ %v3_10009828, %dec_label_pc_10009828 ], [ %v2_100097a0, %dec_label_pc_100097a0 ]
  %v1_100097b0 = inttoptr i32 %v0_10009828 to i32*
  %v2_100097b0 = load i32, i32* %v1_100097b0, align 4
  %v2_100097b4 = sub i32 %v0_10009828, %v2_100097b0
  %v1_100097b8 = add i32 %v2_100097b4, 12
  %v3_100097bc = icmp ugt i32 %v1_100097b8, %arg2
  br i1 %v3_100097bc, label %dec_label_pc_10009828, label %dec_label_pc_100097c4

dec_label_pc_100097c4:                            ; preds = %dec_label_pc_100097b0
  %v4_100097bc = icmp eq i32 %v1_100097b8, %arg2
  br i1 %v4_100097bc, label %dec_label_pc_100097cc, label %dec_label_pc_10009834

dec_label_pc_100097cc:                            ; preds = %dec_label_pc_100097c4
  %v1_100097cc = call i32 @__asm_rlwinm(i32 %v1_100097a8, i32 0, i32 0, i32 29)
  %v2_100097d0 = icmp ult i32 %v2_100097b0, %v1_100097cc
  br i1 %v2_100097d0, label %dec_label_pc_10009834, label %dec_label_pc_100097d8

dec_label_pc_100097d8:                            ; preds = %dec_label_pc_100097cc
  %v1_100097d8 = add i32 %v1_100097cc, 44
  %v2_100097dc = icmp ult i32 %v2_100097b0, %v1_100097d8
  br i1 %v2_100097dc, label %dec_label_pc_100097e4, label %dec_label_pc_10009818

dec_label_pc_100097e4:                            ; preds = %dec_label_pc_100097d8
  %v0_100097e4 = load i32, i32* %r11.global-to-local, align 4
  %v1_100097e4 = add i32 %v0_100097e4, 4
  %v2_100097e4 = inttoptr i32 %v1_100097e4 to i32*
  %v3_100097e4 = load i32, i32* %v2_100097e4, align 4
  %v3_100097e8 = icmp eq i32 %v3_100097e4, 0
  br i1 %v3_100097e8, label %dec_label_pc_100097f8, label %dec_label_pc_100097f0

dec_label_pc_100097f0:                            ; preds = %dec_label_pc_100097e4
  %v1_100097f0 = add i32 %v0_100097e4, 8
  %v2_100097f0 = inttoptr i32 %v1_100097f0 to i32*
  %v3_100097f0 = load i32, i32* %v2_100097f0, align 4
  %v2_100097f4 = add i32 %v3_100097e4, 8
  %v3_100097f4 = inttoptr i32 %v2_100097f4 to i32*
  store i32 %v3_100097f0, i32* %v3_100097f4, align 4
  %v0_100097f8.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100097f8

dec_label_pc_100097f8:                            ; preds = %dec_label_pc_100097e4, %dec_label_pc_100097f0
  %v0_100097f8 = phi i32 [ %v0_100097e4, %dec_label_pc_100097e4 ], [ %v0_100097f8.pre, %dec_label_pc_100097f0 ]
  %v1_100097f8 = add i32 %v0_100097f8, 8
  %v2_100097f8 = inttoptr i32 %v1_100097f8 to i32*
  %v3_100097f8 = load i32, i32* %v2_100097f8, align 4
  %v1_100097fc = add i32 %v0_100097f8, 4
  %v2_100097fc = inttoptr i32 %v1_100097fc to i32*
  %v3_100097fc = load i32, i32* %v2_100097fc, align 4
  %v3_10009800 = icmp eq i32 %v3_100097f8, 0
  br i1 %v3_10009800, label %dec_label_pc_10009810, label %dec_label_pc_10009808

dec_label_pc_10009808:                            ; preds = %dec_label_pc_100097f8
  %v2_10009808 = add i32 %v3_100097f8, 4
  %v3_10009808 = inttoptr i32 %v2_10009808 to i32*
  store i32 %v3_100097fc, i32* %v3_10009808, align 4
  ret i32 %v2_100097b0

dec_label_pc_10009810:                            ; preds = %dec_label_pc_100097f8
  %v1_10009810 = load i32, i32* %r8.global-to-local, align 4
  %v2_10009810 = inttoptr i32 %v1_10009810 to i32*
  store i32 %v3_100097fc, i32* %v2_10009810, align 4
  ret i32 %v2_100097b0

dec_label_pc_10009818:                            ; preds = %dec_label_pc_100097d8
  %v2_10009818 = sub i32 %v2_100097b0, %v1_100097cc
  %v1_10009820 = load i32, i32* %r11.global-to-local, align 4
  %v2_10009820 = inttoptr i32 %v1_10009820 to i32*
  store i32 %v2_10009818, i32* %v2_10009820, align 4
  ret i32 %v1_100097cc

dec_label_pc_10009828:                            ; preds = %dec_label_pc_100097b0
  %v1_10009828 = add i32 %v0_10009828, 4
  %v2_10009828 = inttoptr i32 %v1_10009828 to i32*
  %v3_10009828 = load i32, i32* %v2_10009828, align 4
  store i32 %v3_10009828, i32* %r11.global-to-local, align 4
  %v3_1000982c = icmp eq i32 %v3_10009828, 0
  br i1 %v3_1000982c, label %dec_label_pc_1000982c.dec_label_pc_10009834.loopexit_crit_edge, label %dec_label_pc_100097b0

dec_label_pc_1000982c.dec_label_pc_10009834.loopexit_crit_edge: ; preds = %dec_label_pc_10009828
  br label %dec_label_pc_10009834

dec_label_pc_10009834:                            ; preds = %dec_label_pc_100097a0, %dec_label_pc_1000982c.dec_label_pc_10009834.loopexit_crit_edge, %dec_label_pc_100097c4, %dec_label_pc_100097cc
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_10009828, { 1, 2, 0 }
  uselistorder i32 %v0_100097f8, { 1, 0 }
  uselistorder i32 %v1_100097cc, { 1, 0, 2, 3 }
  uselistorder i32 %v2_100097b0, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_10009828, { 0, 2, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_10009834, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_100097f8, { 1, 0 }
  uselistorder label %dec_label_pc_100097b0, { 1, 0 }
}

define i32 @function_1000983c(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000983c:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1000983c = icmp eq i32 %arg3, 0
  %v2_10009840 = add i32 %arg2, 4
  %v3_10009840 = inttoptr i32 %v2_10009840 to i32*
  store i32 %arg4, i32* %v3_10009840, align 4
  %v2_10009844 = add i32 %arg2, 8
  %v3_10009844 = inttoptr i32 %v2_10009844 to i32*
  store i32 %arg3, i32* %v3_10009844, align 4
  br i1 %v3_1000983c, label %dec_label_pc_10009854, label %dec_label_pc_1000984c

dec_label_pc_1000984c:                            ; preds = %dec_label_pc_1000983c
  %v2_1000984c = add i32 %arg3, 4
  %v3_1000984c = inttoptr i32 %v2_1000984c to i32*
  store i32 %arg2, i32* %v3_1000984c, align 4
  br label %dec_label_pc_10009858

dec_label_pc_10009854:                            ; preds = %dec_label_pc_1000983c
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_10009858

dec_label_pc_10009858:                            ; preds = %dec_label_pc_1000984c, %dec_label_pc_10009854
  %v3_10009858 = icmp eq i32 %arg4, 0
  %v0_1000985c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10009858, i32 %v0_1000985c)
  %v2_10009860 = add i32 %arg4, 8
  %v3_10009860 = inttoptr i32 %v2_10009860 to i32*
  store i32 %arg2, i32* %v3_10009860, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg4, { 0, 2, 1 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg2, { 3, 0, 1, 4, 2 }
  uselistorder label %dec_label_pc_10009858, { 1, 0 }
}

define i32 @function_10009868(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10009868:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_10009868 = icmp eq i32 %arg3, 0
  br i1 %v3_10009868, label %dec_label_pc_10009878, label %dec_label_pc_10009870

dec_label_pc_10009870:                            ; preds = %dec_label_pc_10009868
  %v2_10009870 = add i32 %arg3, 4
  %v3_10009870 = inttoptr i32 %v2_10009870 to i32*
  store i32 %arg2, i32* %v3_10009870, align 4
  br label %dec_label_pc_1000987c

dec_label_pc_10009878:                            ; preds = %dec_label_pc_10009868
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_1000987c

dec_label_pc_1000987c:                            ; preds = %dec_label_pc_10009870, %dec_label_pc_10009878
  %v2_1000987c = add i32 %arg2, 8
  %v3_1000987c = inttoptr i32 %v2_1000987c to i32*
  store i32 %arg3, i32* %v3_1000987c, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000987c, { 1, 0 }
}

define i32 @function_10009884(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009884:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_1000989c = load i32, i32* %arg1, align 4
  store i32 %v2_1000989c, i32* @r31, align 4
  %v2_100098a0 = add i32 %arg3, %arg2
  store i32 %v2_100098a0, i32* %r3.global-to-local, align 4
  %v3_100098b47 = icmp eq i32 %v2_1000989c, 0
  %v1_100098b88 = add i32 %v2_1000989c, 12
  %tmp69 = icmp uge i32 %v1_100098b88, %arg2
  %or.cond10 = or i1 %v3_100098b47, %tmp69
  br i1 %or.cond10, label %dec_label_pc_100098c4, label %dec_label_pc_100098ac

dec_label_pc_100098ac:                            ; preds = %dec_label_pc_10009884, %dec_label_pc_100098ac
  %v0_1000990c11 = phi i32 [ %v3_100098b0, %dec_label_pc_100098ac ], [ %v2_1000989c, %dec_label_pc_10009884 ]
  store i32 %v0_1000990c11, i32* %r11.global-to-local, align 4
  %v1_100098b0 = add i32 %v0_1000990c11, 4
  %v2_100098b0 = inttoptr i32 %v1_100098b0 to i32*
  %v3_100098b0 = load i32, i32* %v2_100098b0, align 4
  store i32 %v3_100098b0, i32* @r31, align 4
  %v3_100098b4 = icmp eq i32 %v3_100098b0, 0
  %v1_100098b8 = add i32 %v3_100098b0, 12
  %tmp6 = icmp uge i32 %v1_100098b8, %arg2
  %or.cond = or i1 %v3_100098b4, %tmp6
  br i1 %or.cond, label %dec_label_pc_100098c4, label %dec_label_pc_100098ac

dec_label_pc_100098c4:                            ; preds = %dec_label_pc_100098ac, %dec_label_pc_10009884
  %v0_10009900.lcssa = phi i32 [ 0, %dec_label_pc_10009884 ], [ %v0_1000990c11, %dec_label_pc_100098ac ]
  %v0_1000990c.lcssa = phi i32 [ %v2_1000989c, %dec_label_pc_10009884 ], [ %v3_100098b0, %dec_label_pc_100098ac ]
  %v3_100098b4.lcssa = phi i1 [ %v3_100098b47, %dec_label_pc_10009884 ], [ %v3_100098b4, %dec_label_pc_100098ac ]
  br i1 %v3_100098b4.lcssa, label %dec_label_pc_1000997c, label %dec_label_pc_100098cc

dec_label_pc_100098cc:                            ; preds = %dec_label_pc_100098c4
  %v1_100098cc = inttoptr i32 %v0_1000990c.lcssa to i32*
  %v2_100098cc = load i32, i32* %v1_100098cc, align 4
  %v2_100098d0 = sub i32 %v0_1000990c.lcssa, %v2_100098cc
  %v1_100098d4 = add i32 %v2_100098d0, 12
  %v3_100098d8 = icmp ugt i32 %v1_100098d4, %v2_100098a0
  br i1 %v3_100098d8, label %dec_label_pc_1000997c, label %dec_label_pc_100098e0

dec_label_pc_100098e0:                            ; preds = %dec_label_pc_100098cc
  %v4_100098d8 = icmp eq i32 %v1_100098d4, %v2_100098a0
  %v2_100098e4 = add i32 %v2_100098cc, %arg3
  store i32 %v2_100098e4, i32* @r29, align 4
  br i1 %v4_100098d8, label %dec_label_pc_100098ec, label %dec_label_pc_1000991c

dec_label_pc_100098ec:                            ; preds = %dec_label_pc_100098e0
  %v3_100098ec = icmp eq i32 %v0_10009900.lcssa, 0
  br i1 %v3_100098ec, label %dec_label_pc_10009970, label %dec_label_pc_100098f4

dec_label_pc_100098f4:                            ; preds = %dec_label_pc_100098ec
  %v1_100098f4 = add i32 %v0_10009900.lcssa, 12
  %v4_100098f8 = icmp eq i32 %v1_100098f4, %arg2
  br i1 %v4_100098f8, label %dec_label_pc_10009900, label %dec_label_pc_10009970

dec_label_pc_10009900:                            ; preds = %dec_label_pc_100098f4
  %v1_10009900 = inttoptr i32 %v0_10009900.lcssa to i32*
  %v2_10009900 = load i32, i32* %v1_10009900, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v1_10009908 = add i32 %v0_10009900.lcssa, 8
  %v2_10009908 = inttoptr i32 %v1_10009908 to i32*
  %v3_10009908 = load i32, i32* %v2_10009908, align 4
  %v2_10009910 = add i32 %v2_10009900, %v2_100098e4
  store i32 %v2_10009910, i32* @r29, align 4
  %v5_10009914 = call i32 @function_10009868(i32* %arg1, i32 %v0_1000990c.lcssa, i32 %v3_10009908, i32 %v2_100098a0)
  store i32 %v5_10009914, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10009970

dec_label_pc_1000991c:                            ; preds = %dec_label_pc_100098e0
  %v1_1000991c = add i32 %v0_1000990c.lcssa, 4
  %v2_1000991c = inttoptr i32 %v1_1000991c to i32*
  %v3_1000991c = load i32, i32* %v2_1000991c, align 4
  %v3_10009920 = icmp eq i32 %v3_1000991c, 0
  br i1 %v3_10009920, label %dec_label_pc_10009958, label %dec_label_pc_10009928

dec_label_pc_10009928:                            ; preds = %dec_label_pc_1000991c
  %v1_10009928 = inttoptr i32 %v3_1000991c to i32*
  %v2_10009928 = load i32, i32* %v1_10009928, align 4
  %v2_1000992c = sub i32 %v3_1000991c, %v2_10009928
  %v1_10009930 = add i32 %v2_1000992c, 12
  %v4_10009934 = icmp eq i32 %v2_100098a0, %v1_10009930
  br i1 %v4_10009934, label %dec_label_pc_1000993c, label %dec_label_pc_10009958

dec_label_pc_1000993c:                            ; preds = %dec_label_pc_10009928
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_10009948 = add i32 %v2_10009928, %v2_100098e4
  store i32 %v2_10009948, i32* @r29, align 4
  store i32 %v3_1000991c, i32* @r31, align 4
  %v5_10009950 = call i32 @function_10009868(i32* %arg1, i32 %v3_1000991c, i32 %v0_10009900.lcssa, i32 %v2_100098a0)
  store i32 %v5_10009950, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10009970

dec_label_pc_10009958:                            ; preds = %dec_label_pc_10009928, %dec_label_pc_1000991c
  %v2_10009958 = add i32 %v0_1000990c.lcssa, %arg3
  store i32 %v2_10009958, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268474736, i32* @lr, align 4
  %v5_1000996c = call i32 @function_1000983c(i32* %arg1, i32 %v2_10009958, i32 %v0_10009900.lcssa, i32 %v3_1000991c)
  store i32 %v5_1000996c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10009970

dec_label_pc_10009970:                            ; preds = %dec_label_pc_100098f4, %dec_label_pc_100098ec, %dec_label_pc_1000993c, %dec_label_pc_10009900, %dec_label_pc_10009958
  %v0_10009970 = load i32, i32* @r31, align 4
  store i32 %v0_10009970, i32* @r30, align 4
  %v0_10009974 = load i32, i32* @r29, align 4
  %v2_10009974 = inttoptr i32 %v0_10009970 to i32*
  store i32 %v0_10009974, i32* %v2_10009974, align 4
  br label %dec_label_pc_10009998

dec_label_pc_1000997c:                            ; preds = %dec_label_pc_100098cc, %dec_label_pc_100098c4
  %v2_1000997c = add i32 %v2_100098a0, -12
  %v3_1000997c = inttoptr i32 %v2_1000997c to i32*
  store i32 %arg3, i32* %v3_1000997c, align 4
  %v0_10009980 = load i32, i32* %r3.global-to-local, align 4
  %v1_10009980 = add i32 %v0_10009980, -12
  store i32 %v1_10009980, i32* @r30, align 4
  %v0_10009984 = load i32, i32* %r11.global-to-local, align 4
  %v0_10009988 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10009988, i32* %r3.global-to-local, align 4
  %v0_1000998c = load i32, i32* @r31, align 4
  store i32 268474776, i32* @lr, align 4
  %v4_10009994 = inttoptr i32 %v0_10009988 to i32*
  %v5_10009994 = call i32 @function_1000983c(i32* %v4_10009994, i32 %v1_10009980, i32 %v0_10009984, i32 %v0_1000998c)
  store i32 %v5_10009994, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10009998

dec_label_pc_10009998:                            ; preds = %dec_label_pc_10009970, %dec_label_pc_1000997c
  %v0_1000999c = load i32, i32* @r30, align 4
  store i32 %v0_1000999c, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000999c

; uselistorder directives
  uselistorder i32 %v3_1000991c, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_100098d4, { 1, 0 }
  uselistorder i32 %v0_1000990c.lcssa, { 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_10009900.lcssa, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %v3_100098b0, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v2_100098a0, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %tmp, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 6, 7, 8, 4, 9, 10, 11, 1, 2, 3, 5, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i32*, i32, i32, i32)* @function_10009868, { 1, 0 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 3, 2, 0, 1 }
  uselistorder i32* %arg1, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_10009998, { 1, 0 }
  uselistorder label %dec_label_pc_10009970, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_100098ac, { 1, 0 }
}

define i32 @function_100099b0(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100099b0:
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* @r25, align 4
  store i32 10, i32* %r30.global-to-local, align 4
  store i32 1, i32* @r26, align 4
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v3_100099e8 = load i32, i32* bitcast (i32** @global_var_1001b4f4.297 to i32*), align 4
  %v2_100099f427 = load i8, i8* %arg1, align 1
  %v3_100099f428 = zext i8 %v2_100099f427 to i32
  %v1_100099f829 = mul nuw nsw i32 %v3_100099f428, 2
  %v2_100099fc30 = add i32 %v1_100099f829, %v3_100099e8
  %v3_100099fc31 = inttoptr i32 %v2_100099fc30 to i16*
  %v4_100099fc32 = load i16, i16* %v3_100099fc31, align 2
  %v1_10009a0034 = and i16 %v4_100099fc32, 32
  %v3_10009a0035 = icmp eq i16 %v1_10009a0034, 0
  br i1 %v3_10009a0035, label %dec_label_pc_10009a08, label %dec_label_pc_100099f0

dec_label_pc_100099f0:                            ; preds = %dec_label_pc_100099b0, %dec_label_pc_100099f0
  %v0_10009a2836 = phi i32 [ %v1_100099f0, %dec_label_pc_100099f0 ], [ %tmp, %dec_label_pc_100099b0 ]
  %v1_100099f0 = add i32 %v0_10009a2836, 1
  store i32 %v1_100099f0, i32* %r31.global-to-local, align 4
  %v1_100099f4 = inttoptr i32 %v1_100099f0 to i8*
  %v2_100099f4 = load i8, i8* %v1_100099f4, align 1
  %v3_100099f4 = zext i8 %v2_100099f4 to i32
  %v1_100099f8 = mul nuw nsw i32 %v3_100099f4, 2
  %v2_100099fc = add i32 %v1_100099f8, %v3_100099e8
  %v3_100099fc = inttoptr i32 %v2_100099fc to i16*
  %v4_100099fc = load i16, i16* %v3_100099fc, align 2
  %v1_10009a00 = and i16 %v4_100099fc, 32
  %v3_10009a00 = icmp eq i16 %v1_10009a00, 0
  br i1 %v3_10009a00, label %dec_label_pc_10009a08, label %dec_label_pc_100099f0

dec_label_pc_10009a08:                            ; preds = %dec_label_pc_100099f0, %dec_label_pc_100099b0
  %v0_10009a28.lcssa = phi i32 [ %tmp, %dec_label_pc_100099b0 ], [ %v1_100099f0, %dec_label_pc_100099f0 ]
  %v2_100099f4.lcssa = phi i8 [ %v2_100099f427, %dec_label_pc_100099b0 ], [ %v2_100099f4, %dec_label_pc_100099f0 ]
  %v3_10009a08 = icmp eq i8 %v2_100099f4.lcssa, 43
  br i1 %v3_10009a08, label %dec_label_pc_10009a28, label %dec_label_pc_10009a10

dec_label_pc_10009a10:                            ; preds = %dec_label_pc_10009a08
  %v3_10009a10 = icmp eq i8 %v2_100099f4.lcssa, 45
  store i32 0, i32* @r28, align 4
  br i1 %v3_10009a10, label %dec_label_pc_10009a28, label %dec_label_pc_10009a2c

dec_label_pc_10009a28:                            ; preds = %dec_label_pc_10009a08, %dec_label_pc_10009a10
  %storemerge = phi i32 [ 1, %dec_label_pc_10009a10 ], [ 0, %dec_label_pc_10009a08 ]
  store i32 %storemerge, i32* @r28, align 4
  %v1_10009a28 = add i32 %v0_10009a28.lcssa, 1
  store i32 %v1_10009a28, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009a2c

dec_label_pc_10009a2c:                            ; preds = %dec_label_pc_10009a10, %dec_label_pc_10009a28
  %v1_10009a2c = call i32 @__asm_rlwinm.(i32 10, i32 0, i32 28, i32 26)
  %v4_10009a2c = icmp eq i32 %v1_10009a2c, 0
  br i1 %v4_10009a2c, label %dec_label_pc_10009a38, label %dec_label_pc_10009a2c.dec_label_pc_10009a74_crit_edge

dec_label_pc_10009a2c.dec_label_pc_10009a74_crit_edge: ; preds = %dec_label_pc_10009a2c
  %v0_10009a74.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10009a74

dec_label_pc_10009a38:                            ; preds = %dec_label_pc_10009a2c
  %v0_10009a38 = load i32, i32* %r31.global-to-local, align 4
  %v1_10009a38 = inttoptr i32 %v0_10009a38 to i8*
  %v2_10009a38 = load i8, i8* %v1_10009a38, align 1
  %v0_10009a3c = load i32, i32* %r30.global-to-local, align 4
  %v1_10009a3c = add i32 %v0_10009a3c, 10
  store i32 %v1_10009a3c, i32* %r30.global-to-local, align 4
  %v3_10009a40 = icmp eq i8 %v2_10009a38, 48
  br i1 %v3_10009a40, label %dec_label_pc_10009a48, label %dec_label_pc_10009a68

dec_label_pc_10009a48:                            ; preds = %dec_label_pc_10009a38
  %v1_10009a48 = add i32 %v0_10009a38, 1
  %v2_10009a48 = inttoptr i32 %v1_10009a48 to i8*
  %v3_10009a48 = load i8, i8* %v2_10009a48, align 1
  %v4_10009a48 = zext i8 %v3_10009a48 to i32
  store i32 %v1_10009a48, i32* %r31.global-to-local, align 4
  %v1_10009a4c = add i32 %v0_10009a3c, 8
  store i32 %v1_10009a4c, i32* %r30.global-to-local, align 4
  %v1_10009a50 = or i32 %v4_10009a48, 32
  %v3_10009a58 = icmp eq i32 %v1_10009a50, 120
  br i1 %v3_10009a58, label %dec_label_pc_10009a60, label %dec_label_pc_10009a68

dec_label_pc_10009a60:                            ; preds = %dec_label_pc_10009a48
  %v1_10009a60 = mul i32 %v1_10009a4c, 2
  store i32 %v1_10009a60, i32* %r30.global-to-local, align 4
  %v1_10009a64 = add i32 %v0_10009a38, 2
  store i32 %v1_10009a64, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009a68

dec_label_pc_10009a68:                            ; preds = %dec_label_pc_10009a48, %dec_label_pc_10009a38, %dec_label_pc_10009a60
  %v0_10009b1c15 = phi i32 [ %v1_10009a48, %dec_label_pc_10009a60 ], [ %tmp, %dec_label_pc_10009a38 ], [ %v1_10009a48, %dec_label_pc_10009a48 ]
  %v0_10009a68 = phi i32 [ %v1_10009a60, %dec_label_pc_10009a60 ], [ %v1_10009a3c, %dec_label_pc_10009a38 ], [ %v1_10009a4c, %dec_label_pc_10009a48 ]
  %tmp22 = icmp slt i32 %v0_10009a68, 17
  br i1 %tmp22, label %dec_label_pc_10009a74, label %dec_label_pc_10009a70

dec_label_pc_10009a70:                            ; preds = %dec_label_pc_10009a68
  store i32 16, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10009a74

dec_label_pc_10009a74:                            ; preds = %dec_label_pc_10009a2c.dec_label_pc_10009a74_crit_edge, %dec_label_pc_10009a68, %dec_label_pc_10009a70
  %v0_10009b1c14 = phi i32 [ %tmp, %dec_label_pc_10009a2c.dec_label_pc_10009a74_crit_edge ], [ %v0_10009b1c15, %dec_label_pc_10009a68 ], [ %v0_10009b1c15, %dec_label_pc_10009a70 ]
  %v1_10009a88 = phi i32 [ %v0_10009a74.pre, %dec_label_pc_10009a2c.dec_label_pc_10009a74_crit_edge ], [ %v0_10009a68, %dec_label_pc_10009a68 ], [ 16, %dec_label_pc_10009a70 ]
  %v1_10009a74 = add i32 %v1_10009a88, -2
  store i32 0, i32* %r8.global-to-local, align 4
  %v2_10009a7c = icmp ugt i32 %v1_10009a74, 34
  br i1 %v2_10009a7c, label %dec_label_pc_10009b14, label %dec_label_pc_10009a84

dec_label_pc_10009a84:                            ; preds = %dec_label_pc_10009a74
  %v2_10009a88 = udiv i32 -1, %v1_10009a88
  store i32 %v2_10009a88, i32* @r29, align 4
  %v2_10009a8c = mul i32 %v2_10009a88, %v1_10009a88
  %v1_10009a90 = sub i32 -1, %v2_10009a8c
  %v1_10009a94 = urem i32 %v1_10009a90, 256
  store i32 %v1_10009a94, i32* @r27, align 4
  %v0_10009aa0.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009aa0

dec_label_pc_10009a9c:                            ; preds = %dec_label_pc_10009b08, %dec_label_pc_10009af0
  %v1_10009aa4.pre = phi i32 [ %v1_10009aa8, %dec_label_pc_10009b08 ], [ %v1_10009aa4.pre.pre, %dec_label_pc_10009af0 ]
  %v0_10009aa4.pre = phi i32 [ %v2_10009b0c, %dec_label_pc_10009b08 ], [ %v0_10009aa4.pre.pre, %dec_label_pc_10009af0 ]
  %v0_10009a9c = phi i32 [ %v1_10009aac, %dec_label_pc_10009b08 ], [ %v0_10009a9c.pre, %dec_label_pc_10009af0 ]
  br label %dec_label_pc_10009aa0

dec_label_pc_10009aa0:                            ; preds = %dec_label_pc_10009a84, %dec_label_pc_10009a9c
  %v0_10009b1c12 = phi i32 [ %v0_10009b1c14, %dec_label_pc_10009a84 ], [ %v0_10009a9c, %dec_label_pc_10009a9c ]
  %v0_10009aac = phi i32 [ %v0_10009aa0.pre, %dec_label_pc_10009a84 ], [ %v0_10009a9c, %dec_label_pc_10009a9c ]
  %v1_10009aa8 = phi i32 [ %v2_10009a88, %dec_label_pc_10009a84 ], [ %v1_10009aa4.pre, %dec_label_pc_10009a9c ]
  %v0_10009b08 = phi i32 [ 0, %dec_label_pc_10009a84 ], [ %v0_10009aa4.pre, %dec_label_pc_10009a9c ]
  %v1_10009aa0 = inttoptr i32 %v0_10009aac to i8*
  %v2_10009aa0 = load i8, i8* %v1_10009aa0, align 1
  %v3_10009aa0 = zext i8 %v2_10009aa0 to i32
  %v3_10009aa4 = icmp ugt i32 %v0_10009b08, %v1_10009aa8
  %v1_10009aac = add i32 %v0_10009aac, 1
  store i32 %v1_10009aac, i32* %r31.global-to-local, align 4
  %v1_10009ab0 = add nsw i32 %v3_10009aa0, -48
  %v1_10009ab4 = or i32 %v3_10009aa0, 32
  %v1_10009ab8 = urem i32 %v1_10009ab0, 256
  %tmp23 = icmp ult i32 %v1_10009ab8, 10
  br i1 %tmp23, label %dec_label_pc_10009ad8, label %dec_label_pc_10009ac8

dec_label_pc_10009ac8:                            ; preds = %dec_label_pc_10009aa0
  %tmp24 = icmp ult i32 %v1_10009ab4, 97
  br i1 %tmp24, label %dec_label_pc_10009ad8, label %dec_label_pc_10009ad4

dec_label_pc_10009ad4:                            ; preds = %dec_label_pc_10009ac8
  %v1_10009ac8 = add nsw i32 %v1_10009ab4, -87
  %v1_10009ad4 = urem i32 %v1_10009ac8, 256
  br label %dec_label_pc_10009ad8

dec_label_pc_10009ad8:                            ; preds = %dec_label_pc_10009ac8, %dec_label_pc_10009aa0, %dec_label_pc_10009ad4
  %v1_10009b0c = phi i32 [ 40, %dec_label_pc_10009ac8 ], [ %v1_10009ab8, %dec_label_pc_10009aa0 ], [ %v1_10009ad4, %dec_label_pc_10009ad4 ]
  %v1_10009ad8 = load i32, i32* %r30.global-to-local, align 4
  %v2_10009ad8 = icmp slt i32 %v1_10009b0c, %v1_10009ad8
  br i1 %v2_10009ad8, label %dec_label_pc_10009ae0, label %dec_label_pc_10009b14

dec_label_pc_10009ae0:                            ; preds = %dec_label_pc_10009ad8
  br i1 %v3_10009aa4, label %dec_label_pc_10009af0, label %dec_label_pc_10009ae4

dec_label_pc_10009ae4:                            ; preds = %dec_label_pc_10009ae0
  %v1_10009ae4 = load i32, i32* @r27, align 4
  %v0_10009ae8.not = icmp ne i32 %v0_10009b08, %v1_10009aa8
  %tmp25 = icmp ule i32 %v1_10009b0c, %v1_10009ae4
  %or.cond = or i1 %tmp25, %v0_10009ae8.not
  br i1 %or.cond, label %dec_label_pc_10009b08, label %dec_label_pc_10009af0

dec_label_pc_10009af0:                            ; preds = %dec_label_pc_10009ae4, %dec_label_pc_10009ae0
  %v0_10009af0 = call i32 @function_10008b34()
  %v0_10009af4 = load i32, i32* @r28, align 4
  %v1_10009af4 = load i32, i32* @r26, align 4
  %v2_10009af4 = and i32 %v1_10009af4, %v0_10009af4
  store i32 %v2_10009af4, i32* @r28, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  %v2_10009b00 = inttoptr i32 %v0_10009af0 to i32*
  store i32 34, i32* %v2_10009b00, align 4
  %v0_10009a9c.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_10009aa4.pre.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_10009aa4.pre.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10009a9c

dec_label_pc_10009b08:                            ; preds = %dec_label_pc_10009ae4
  %v2_10009b08 = mul i32 %v1_10009ad8, %v0_10009b08
  %v2_10009b0c = add i32 %v2_10009b08, %v1_10009b0c
  store i32 %v2_10009b0c, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10009a9c

dec_label_pc_10009b14:                            ; preds = %dec_label_pc_10009ad8, %dec_label_pc_10009a74
  %v0_10009b1c = phi i32 [ %v0_10009b1c14, %dec_label_pc_10009a74 ], [ %v0_10009b1c12, %dec_label_pc_10009ad8 ]
  %v0_10009b14 = load i32, i32* @r25, align 4
  %v3_10009b14 = icmp eq i32 %v0_10009b14, 0
  br i1 %v3_10009b14, label %dec_label_pc_10009b20, label %dec_label_pc_10009b1c

dec_label_pc_10009b1c:                            ; preds = %dec_label_pc_10009b14
  %v2_10009b1c = inttoptr i32 %v0_10009b14 to i32*
  store i32 %v0_10009b1c, i32* %v2_10009b1c, align 4
  br label %dec_label_pc_10009b20

dec_label_pc_10009b20:                            ; preds = %dec_label_pc_10009b14, %dec_label_pc_10009b1c
  %v0_10009b20 = load i32, i32* @r26, align 4
  %v3_10009b20 = icmp eq i32 %v0_10009b20, 0
  %v0_10009b24 = load i32, i32* @r28, align 4
  %v1_10009b24 = sub i32 0, %v0_10009b24
  %tmp40 = lshr i32 %v1_10009b24, 31
  %tmp41 = add nuw i32 %tmp40, 2147483647
  store i32 %tmp41, i32* @r31, align 4
  %v0_10009b64.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v3_10009b20, label %dec_label_pc_10009b54, label %dec_label_pc_10009b3c

dec_label_pc_10009b3c:                            ; preds = %dec_label_pc_10009b20
  %v3_10009b3c = icmp ugt i32 %v0_10009b64.pre.pre, %tmp41
  br i1 %v3_10009b3c, label %dec_label_pc_10009b44, label %dec_label_pc_10009b54

dec_label_pc_10009b44:                            ; preds = %dec_label_pc_10009b3c
  %v0_10009b44 = call i32 @function_10008b34()
  %v2_10009b4c = inttoptr i32 %v0_10009b44 to i32*
  store i32 34, i32* %v2_10009b4c, align 4
  %v0_10009b50 = load i32, i32* @r31, align 4
  store i32 %v0_10009b50, i32* %r8.global-to-local, align 4
  %v0_10009b54.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10009b54

dec_label_pc_10009b54:                            ; preds = %dec_label_pc_10009b20, %dec_label_pc_10009b3c, %dec_label_pc_10009b44
  %v0_10009b64.pre = phi i32 [ %v0_10009b64.pre.pre, %dec_label_pc_10009b3c ], [ %v0_10009b50, %dec_label_pc_10009b44 ], [ %v0_10009b64.pre.pre, %dec_label_pc_10009b20 ]
  %v0_10009b54 = phi i32 [ %v0_10009b24, %dec_label_pc_10009b3c ], [ %v0_10009b54.pre, %dec_label_pc_10009b44 ], [ %v0_10009b24, %dec_label_pc_10009b20 ]
  %v3_10009b54 = icmp eq i32 %v0_10009b54, 0
  br i1 %v3_10009b54, label %dec_label_pc_10009b60, label %dec_label_pc_10009b5c

dec_label_pc_10009b5c:                            ; preds = %dec_label_pc_10009b54
  %v1_10009b5c = sub i32 0, %v0_10009b64.pre
  store i32 %v1_10009b5c, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10009b60

dec_label_pc_10009b60:                            ; preds = %dec_label_pc_10009b54, %dec_label_pc_10009b5c
  %v0_10009b64 = phi i32 [ %v1_10009b5c, %dec_label_pc_10009b5c ], [ %v0_10009b64.pre, %dec_label_pc_10009b54 ]
  ret i32 %v0_10009b64

; uselistorder directives
  uselistorder i32 %v0_10009b64.pre, { 1, 0 }
  uselistorder i32 %v0_10009b64.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v2_10009b0c, { 1, 0 }
  uselistorder i32 %v1_10009ab8, { 1, 0 }
  uselistorder i32 %v1_10009ab4, { 1, 0 }
  uselistorder i32 %v1_10009aac, { 1, 0 }
  uselistorder i32 %v3_10009aa0, { 1, 0 }
  uselistorder i32 %v0_10009b08, { 1, 0, 2 }
  uselistorder i32 %v1_10009aa8, { 0, 2, 1 }
  uselistorder i32 %v0_10009a9c, { 1, 0 }
  uselistorder i32 %v2_10009a88, { 1, 0, 2 }
  uselistorder i32 %v1_10009a60, { 1, 0 }
  uselistorder i32 %v1_10009a4c, { 1, 0, 2 }
  uselistorder i8 %v2_100099f4.lcssa, { 1, 0 }
  uselistorder i32 %v1_100099f0, { 0, 2, 3, 1 }
  uselistorder i32 %v3_100099e8, { 1, 0 }
  uselistorder i32 %tmp, { 3, 2, 0, 1, 4 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 5, 2, 3, 4, 6 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 7, 2, 3, 6, 4, 5, 8 }
  uselistorder i32* %r30.global-to-local, { 5, 1, 0, 2, 3, 6, 4, 7 }
  uselistorder i32 26, { 3, 0, 1, 2 }
  uselistorder i8 45, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10009b60, { 1, 0 }
  uselistorder label %dec_label_pc_10009b54, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10009b20, { 1, 0 }
  uselistorder label %dec_label_pc_10009ad8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009aa0, { 1, 0 }
  uselistorder label %dec_label_pc_10009a74, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10009a68, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009a2c, { 1, 0 }
  uselistorder label %dec_label_pc_10009a28, { 1, 0 }
  uselistorder label %dec_label_pc_100099f0, { 1, 0 }
}

define i32 @function_10009b78() local_unnamed_addr {
dec_label_pc_10009b78:
  %stack_var_-40 = alloca i32, align 4
  %v2_10009b90 = ptrtoint i32* %stack_var_-40 to i32
  %v0_10009b9c = load i32, i32* @r3, align 4
  store i32 %v0_10009b9c, i32* @r31, align 4
  store i32 %v2_10009b90, i32* @r3, align 4
  %v3_10009ba8 = call i32 @function_10009e6c(i32 %v2_10009b90, i32 ptrtoint ([3 x i8]* @global_var_10009e64.277 to i32))
  %v0_10009bb0 = call i32 @function_10009e64()
  %v3_10009bb8 = load i32, i32* @global_var_1001b538.300, align 4
  %v3_10009bbc = icmp eq i32 %v3_10009bb8, 0
  br i1 %v3_10009bbc, label %dec_label_pc_10009bd0, label %dec_label_pc_10009bc4

dec_label_pc_10009bc4:                            ; preds = %dec_label_pc_10009b78
  %v0_10009bc4 = load i32, i32* @r31, align 4
  %v3_10009bcc = call i32 @unknown_0(i32 %v0_10009bc4, i32 268566528)
  br label %dec_label_pc_10009bd0

dec_label_pc_10009bd0:                            ; preds = %dec_label_pc_10009b78, %dec_label_pc_10009bc4
  store i32 %v2_10009b90, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v2_10009bd8 = call i32 @function_10009e6c(i32 %v2_10009b90, i32 1)
  store i32 %v2_10009bd8, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009be0.302 to i32), i32* @lr, align 4
  %v1_10009bdc = call i32 @function_10009dd0(i32 %v2_10009bd8)
  %v0_10009bf4 = load i32, i32* @r31, align 4
  %v1_10009bf8 = call i32 @function_1000a204(i32 %v0_10009bf4)
  ret i32 %v1_10009bf8

; uselistorder directives
  uselistorder i32 %v2_10009b90, { 1, 0, 3, 2 }
  uselistorder i32 (i32, i32)* @function_10009e6c, { 1, 0, 5, 4, 3, 2 }
  uselistorder label %dec_label_pc_10009bd0, { 1, 0 }
}

define i32 @function_10009bfc(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009bfc:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-432 = alloca i32, align 4
  %stack_var_-440 = alloca i32, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  %v3_10009bfc = icmp eq i32 %arg1, 0
  br i1 %v3_10009bfc, label %dec_label_pc_10009db0, label %dec_label_pc_10009c2c.lr.ph

dec_label_pc_10009c2c.lr.ph:                      ; preds = %dec_label_pc_10009bfc
  %v2_10009c20 = ptrtoint i32* %stack_var_-440 to i32
  store i32 %v2_10009c20, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_10009c2c42 = add i32 %v2_10009c20, 132
  %v3_10009c2c43 = inttoptr i32 %v2_10009c2c42 to i32*
  store i32 0, i32* %v3_10009c2c43, align 4
  %v0_10009c3044 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009c3045 = add i32 %v0_10009c3044, -1
  store i32 %v1_10009c3045, i32* %r11.global-to-local, align 4
  %v1_10009c3446 = mul i32 %v1_10009c3045, 4
  %v1_10009c3847 = load i32, i32* %r7.global-to-local, align 4
  %v2_10009c3848 = add i32 %v1_10009c3847, %v1_10009c3446
  %v0_10009c3c49 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009c3c50 = add i32 %v0_10009c3c49, -1
  store i32 %v1_10009c3c50, i32* %ctr.global-to-local, align 4
  %v2_10009c3c51 = icmp eq i32 %v1_10009c3c50, 0
  br i1 %v2_10009c3c51, label %dec_label_pc_10009c40, label %dec_label_pc_10009c2c.dec_label_pc_10009c2c_crit_edge

dec_label_pc_10009c2c.dec_label_pc_10009c2c_crit_edge: ; preds = %dec_label_pc_10009c2c.lr.ph, %dec_label_pc_10009c2c.dec_label_pc_10009c2c_crit_edge
  %v2_10009c3852 = phi i32 [ %v2_10009c38, %dec_label_pc_10009c2c.dec_label_pc_10009c2c_crit_edge ], [ %v2_10009c3848, %dec_label_pc_10009c2c.lr.ph ]
  %v0_10009c2c.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_10009c2c = add i32 %v2_10009c3852, 8
  %v3_10009c2c = inttoptr i32 %v2_10009c2c to i32*
  store i32 %v0_10009c2c.pre, i32* %v3_10009c2c, align 4
  %v0_10009c30 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009c30 = add i32 %v0_10009c30, -1
  store i32 %v1_10009c30, i32* %r11.global-to-local, align 4
  %v1_10009c34 = mul i32 %v1_10009c30, 4
  %v1_10009c38 = load i32, i32* %r7.global-to-local, align 4
  %v2_10009c38 = add i32 %v1_10009c38, %v1_10009c34
  %v0_10009c3c = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009c3c = add i32 %v0_10009c3c, -1
  store i32 %v1_10009c3c, i32* %ctr.global-to-local, align 4
  %v2_10009c3c = icmp eq i32 %v1_10009c3c, 0
  br i1 %v2_10009c3c, label %dec_label_pc_10009c40, label %dec_label_pc_10009c2c.dec_label_pc_10009c2c_crit_edge

dec_label_pc_10009c40:                            ; preds = %dec_label_pc_10009c2c.dec_label_pc_10009c2c_crit_edge, %dec_label_pc_10009c2c.lr.ph
  %v0_10009c54.pre = load i32, i32* %r8.global-to-local, align 4
  %v2_10009c40 = ptrtoint i32* %stack_var_-432 to i32
  store i32 %v2_10009c40, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  store i32 %v0_10009c54.pre, i32* %stack_var_-440, align 4
  %v0_10009c58 = call i32 @function_100092b8()
  store i32 %v0_10009c58, i32* %r3.global-to-local, align 4
  %v1_10009c5c = icmp slt i32 %v0_10009c58, 0
  br i1 %v1_10009c5c, label %dec_label_pc_10009db8, label %dec_label_pc_10009c64

dec_label_pc_10009c64:                            ; preds = %dec_label_pc_10009c40
  %v2_10009c64 = ptrtoint i32* %stack_var_-304 to i32
  store i32 %v2_10009c64, i32* @r31, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268475512, i32* @lr, align 4
  %v3_10009c74 = call i32 @function_10008770(i32 0, i32 %v2_10009c40, i32 %v2_10009c64)
  store i32 %v3_10009c74, i32* %r3.global-to-local, align 4
  %v3_10009c78 = icmp eq i32 %v3_10009c74, 0
  br i1 %v3_10009c78, label %dec_label_pc_10009c80, label %dec_label_pc_10009db8

dec_label_pc_10009c80:                            ; preds = %dec_label_pc_10009c64
  store i32 %v2_10009c64, i32* %r3.global-to-local, align 4
  %v2_10009c88 = call i32 @function_10009290(i32 %v2_10009c64, i32 17)
  store i32 %v2_10009c88, i32* %r3.global-to-local, align 4
  %v3_10009c8c = icmp eq i32 %v2_10009c88, 0
  br i1 %v3_10009c8c, label %dec_label_pc_10009cac.lr.ph, label %dec_label_pc_10009d78

dec_label_pc_10009cac.lr.ph:                      ; preds = %dec_label_pc_10009c80
  store i32 %v2_10009c20, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %v3_10009c2c43, align 4
  %v0_10009cb033 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009cb034 = add i32 %v0_10009cb033, -1
  store i32 %v1_10009cb034, i32* %r11.global-to-local, align 4
  %v1_10009cb435 = mul i32 %v1_10009cb034, 4
  %v1_10009cb836 = load i32, i32* %r8.global-to-local, align 4
  %v2_10009cb837 = add i32 %v1_10009cb836, %v1_10009cb435
  %v0_10009cbc38 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009cbc39 = add i32 %v0_10009cbc38, -1
  store i32 %v1_10009cbc39, i32* %ctr.global-to-local, align 4
  %v2_10009cbc40 = icmp eq i32 %v1_10009cbc39, 0
  br i1 %v2_10009cbc40, label %dec_label_pc_10009cc0, label %dec_label_pc_10009cac.dec_label_pc_10009cac_crit_edge

dec_label_pc_10009cac.dec_label_pc_10009cac_crit_edge: ; preds = %dec_label_pc_10009cac.lr.ph, %dec_label_pc_10009cac.dec_label_pc_10009cac_crit_edge
  %v2_10009cb841 = phi i32 [ %v2_10009cb8, %dec_label_pc_10009cac.dec_label_pc_10009cac_crit_edge ], [ %v2_10009cb837, %dec_label_pc_10009cac.lr.ph ]
  %v0_10009cac.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_10009cac = add i32 %v2_10009cb841, 8
  %v3_10009cac = inttoptr i32 %v2_10009cac to i32*
  store i32 %v0_10009cac.pre, i32* %v3_10009cac, align 4
  %v0_10009cb0 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009cb0 = add i32 %v0_10009cb0, -1
  store i32 %v1_10009cb0, i32* %r11.global-to-local, align 4
  %v1_10009cb4 = mul i32 %v1_10009cb0, 4
  %v1_10009cb8 = load i32, i32* %r8.global-to-local, align 4
  %v2_10009cb8 = add i32 %v1_10009cb8, %v1_10009cb4
  %v0_10009cbc = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009cbc = add i32 %v0_10009cbc, -1
  store i32 %v1_10009cbc, i32* %ctr.global-to-local, align 4
  %v2_10009cbc = icmp eq i32 %v1_10009cbc, 0
  br i1 %v2_10009cbc, label %dec_label_pc_10009cc0, label %dec_label_pc_10009cac.dec_label_pc_10009cac_crit_edge

dec_label_pc_10009cc0:                            ; preds = %dec_label_pc_10009cac.dec_label_pc_10009cac_crit_edge, %dec_label_pc_10009cac.lr.ph
  store i32 %v2_10009c40, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  %v0_10009cc8 = call i32 @function_100092b8()
  store i32 %v0_10009cc8, i32* %r3.global-to-local, align 4
  %v1_10009ccc = icmp slt i32 %v0_10009cc8, 0
  br i1 %v1_10009ccc, label %dec_label_pc_10009db8, label %dec_label_pc_10009cd4

dec_label_pc_10009cd4:                            ; preds = %dec_label_pc_10009cc0
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_10009cdc = ptrtoint i32* %stack_var_-176 to i32
  store i32 268475620, i32* @lr, align 4
  %v4_10009ce0 = call i32 @function_1000aa48(i32 17, i32* null, i32 %v2_10009cdc)
  store i32 %v4_10009ce0, i32* %r3.global-to-local, align 4
  %tmp30 = icmp sgt i32 %v4_10009ce0, -1
  br i1 %tmp30, label %dec_label_pc_10009d14, label %dec_label_pc_10009cec

dec_label_pc_10009cec:                            ; preds = %dec_label_pc_10009cd4
  %v0_10009cec = call i32 @function_10008b34()
  store i32 %v0_10009cec, i32* %r3.global-to-local, align 4
  %v1_10009cf4 = inttoptr i32 %v0_10009cec to i32*
  %v2_10009cf4 = load i32, i32* %v1_10009cf4, align 4
  store i32 %v2_10009cf4, i32* @r28, align 4
  store i32 %v0_10009cec, i32* @r29, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268475656, i32* @lr, align 4
  %v3_10009d04 = call i32 @function_10008770(i32 2, i32 %v2_10009c64, i32 0)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_10009d0c = load i32, i32* @r28, align 4
  %v1_10009d0c = load i32, i32* @r29, align 4
  %v2_10009d0c = inttoptr i32 %v1_10009d0c to i32*
  store i32 %v0_10009d0c, i32* %v2_10009d0c, align 4
  %v0_10009dcc.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10009dbc

dec_label_pc_10009d14:                            ; preds = %dec_label_pc_10009cd4
  %v3_10009d14 = load i32, i32* %stack_var_-176, align 4
  store i32 %v2_10009c64, i32* @r28, align 4
  %v3_10009d20 = icmp eq i32 %v3_10009d14, 1
  br i1 %v3_10009d20, label %dec_label_pc_10009d28, label %dec_label_pc_10009d5c

dec_label_pc_10009d28:                            ; preds = %dec_label_pc_10009d14
  store i32 %v2_10009c20, i32* %r3.global-to-local, align 4
  store i32 268475700, i32* @lr, align 4
  %v2_10009d30 = call i32 @function_1000a63c(i32 %v2_10009c20, i32 %v2_10009c20)
  store i32 %v2_10009d30, i32* %r3.global-to-local, align 4
  store i32 %v2_10009d30, i32* @r31, align 4
  %v0_10009d38 = call i32 @function_10008b34()
  store i32 %v0_10009d38, i32* %r3.global-to-local, align 4
  store i32 %v0_10009d38, i32* @r29, align 4
  %v1_10009d48 = inttoptr i32 %v0_10009d38 to i32*
  %v2_10009d48 = load i32, i32* %v1_10009d48, align 4
  store i32 %v2_10009d48, i32* @r28, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268475732, i32* @lr, align 4
  %v3_10009d50 = call i32 @function_10008770(i32 2, i32 %v2_10009c64, i32 0)
  store i32 %v3_10009d50, i32* %r3.global-to-local, align 4
  %v0_10009d54 = load i32, i32* @r28, align 4
  %v1_10009d54 = load i32, i32* @r29, align 4
  %v2_10009d54 = inttoptr i32 %v1_10009d54 to i32*
  store i32 %v0_10009d54, i32* %v2_10009d54, align 4
  %v0_10009d84.pr = load i32, i32* @r31, align 4
  br label %dec_label_pc_10009d84

dec_label_pc_10009d5c:                            ; preds = %dec_label_pc_10009d14
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268475756, i32* @lr, align 4
  %v3_10009d68 = call i32 @function_10008770(i32 2, i32 %v2_10009c64, i32 0)
  br label %dec_label_pc_10009d78

dec_label_pc_10009d78:                            ; preds = %dec_label_pc_10009c80, %dec_label_pc_10009d5c
  store i32 %v2_10009c20, i32* %r3.global-to-local, align 4
  store i32 268475776, i32* @lr, align 4
  %v2_10009d7c = call i32 @function_1000a63c(i32 %v2_10009c20, i32 %v2_10009c20)
  store i32 %v2_10009d7c, i32* %r3.global-to-local, align 4
  store i32 %v2_10009d7c, i32* @r31, align 4
  br label %dec_label_pc_10009d84

dec_label_pc_10009d84:                            ; preds = %dec_label_pc_10009d28, %dec_label_pc_10009d78
  %v0_10009d84 = phi i32 [ %v0_10009d84.pr, %dec_label_pc_10009d28 ], [ %v2_10009d7c, %dec_label_pc_10009d78 ]
  %v3_10009d84 = icmp eq i32 %v0_10009d84, 0
  br i1 %v3_10009d84, label %dec_label_pc_10009db0, label %dec_label_pc_10009d8c

dec_label_pc_10009d8c:                            ; preds = %dec_label_pc_10009d84
  %v3_10009d9c = load i32, i32* %stack_var_-440, align 4
  %v0_10009da0 = call i32 @__asm_mfcr()
  store i32 %v0_10009da0, i32* %r3.global-to-local, align 4
  %v1_10009da4 = call i32 @__asm_rlwinm(i32 %v0_10009da0, i32 30, i32 31, i32 31)
  %v2_10009da8 = add i32 %v3_10009d9c, %v1_10009da4
  store i32 %v2_10009da8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10009dbc

dec_label_pc_10009db0:                            ; preds = %dec_label_pc_10009d84, %dec_label_pc_10009bfc
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10009dbc

dec_label_pc_10009db8:                            ; preds = %dec_label_pc_10009c64, %dec_label_pc_10009c40, %dec_label_pc_10009cc0
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10009dbc

dec_label_pc_10009dbc:                            ; preds = %dec_label_pc_10009db0, %dec_label_pc_10009d8c, %dec_label_pc_10009cec, %dec_label_pc_10009db8
  %v0_10009dcc = phi i32 [ 0, %dec_label_pc_10009db0 ], [ %v2_10009da8, %dec_label_pc_10009d8c ], [ %v0_10009dcc.pre, %dec_label_pc_10009cec ], [ -1, %dec_label_pc_10009db8 ]
  ret i32 %v0_10009dcc

; uselistorder directives
  uselistorder i32 %v1_10009cbc, { 1, 0 }
  uselistorder i32 %v2_10009c64, { 2, 1, 3, 0, 5, 4, 6, 7 }
  uselistorder i32 %v1_10009c3c, { 1, 0 }
  uselistorder i32 %v2_10009c20, { 2, 1, 3, 6, 5, 4, 7, 0, 8 }
  uselistorder i32* %r8.global-to-local, { 3, 2, 4, 0, 1 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 5, 7, 6, 1, 8, 0, 9, 10, 11, 12, 13, 14, 19, 20, 15, 4, 21, 22, 3, 24, 23, 16, 17, 18, 2 }
  uselistorder i32* %r11.global-to-local, { 9, 8, 4, 0, 1, 7, 6, 5, 2, 3 }
  uselistorder i32* %r10.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32* %ctr.global-to-local, { 9, 8, 4, 0, 1, 7, 6, 5, 2, 3 }
  uselistorder i32 (i32, i32)* @function_1000a63c, { 1, 0 }
  uselistorder i32 17, { 2, 33, 34, 3, 35, 4, 17, 18, 5, 6, 19, 20, 21, 7, 22, 8, 9, 10, 11, 23, 0, 24, 1, 25, 26, 12, 27, 13, 28, 29, 30, 31, 32, 14, 15, 16 }
  uselistorder label %dec_label_pc_10009dbc, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10009db8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009d84, { 1, 0 }
  uselistorder label %dec_label_pc_10009d78, { 1, 0 }
  uselistorder label %dec_label_pc_10009cac.dec_label_pc_10009cac_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10009c2c.dec_label_pc_10009c2c_crit_edge, { 1, 0 }
}

define i32 @function_10009dd0(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009e20:
  %v3_10009e24 = load i32, i32* @global_var_1001b548.304, align 4
  %v3_10009e28 = icmp eq i32 %v3_10009e24, 0
  br i1 %v3_10009e28, label %dec_label_pc_10009e38, label %dec_label_pc_10009e30

dec_label_pc_10009e30:                            ; preds = %dec_label_pc_10009e20
  %v2_10009e34 = load i32, i32* @r4, align 4
  %v3_10009e34 = call i32 @unknown_0(i32 268566528, i32 %v2_10009e34)
  store i32 %v3_10009e34, i32* @r3, align 4
  br label %dec_label_pc_10009e38

dec_label_pc_10009e38:                            ; preds = %dec_label_pc_10009e20, %dec_label_pc_10009e30
  %v3_10009e3c = load i32, i32* @global_var_1001b54c.305, align 4
  %v3_10009e40 = icmp eq i32 %v3_10009e3c, 0
  br i1 %v3_10009e40, label %dec_label_pc_10009e38.dec_label_pc_10009e50_crit_edge, label %dec_label_pc_10009e48

dec_label_pc_10009e38.dec_label_pc_10009e50_crit_edge: ; preds = %dec_label_pc_10009e38
  %v0_10009e60.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10009e50

dec_label_pc_10009e48:                            ; preds = %dec_label_pc_10009e38
  %v2_10009e4c = load i32, i32* @r4, align 4
  %v3_10009e4c = call i32 @unknown_0(i32 268566528, i32 %v2_10009e4c)
  br label %dec_label_pc_10009e50

dec_label_pc_10009e50:                            ; preds = %dec_label_pc_10009e38.dec_label_pc_10009e50_crit_edge, %dec_label_pc_10009e48
  %v0_10009e60 = phi i32 [ %v0_10009e60.pre, %dec_label_pc_10009e38.dec_label_pc_10009e50_crit_edge ], [ %v3_10009e4c, %dec_label_pc_10009e48 ]
  ret i32 %v0_10009e60

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10009e50, { 1, 0 }
  uselistorder label %dec_label_pc_10009e38, { 1, 0 }
}

define i32 @function_10009e64() local_unnamed_addr {
dec_label_pc_10009e64:
  ret i32 0
}

define i32 @function_10009e6c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009e6c:
  %v0_10009e6c = load i32, i32* @r3, align 4
  ret i32 %v0_10009e6c
}

define i32 @function_10009e70(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009e70:
  store i32 %arg2, i32* @r30, align 4
  store i32 1, i32* @r4, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268476052, i32* @lr, align 4
  %v1_10009e90 = call i32 @function_10008330(i32 1)
  %v3_10009e94 = icmp eq i32 %v1_10009e90, -1
  br i1 %v3_10009e94, label %dec_label_pc_10009e9c, label %dec_label_pc_10009ebc

dec_label_pc_10009e9c:                            ; preds = %dec_label_pc_10009e70
  %v0_10009ea0 = load i32, i32* @r30, align 4
  store i32 268476080, i32* @lr, align 4
  %v3_10009eac = call i32 @function_10008580(i32 ptrtoint ([10 x i8]* @global_var_1000b070.306 to i32), i32 %v0_10009ea0)
  %v1_10009eb0 = load i32, i32* @r31, align 4
  %v4_10009eb0 = icmp eq i32 %v3_10009eac, %v1_10009eb0
  br i1 %v4_10009eb0, label %dec_label_pc_10009ebc, label %dec_label_pc_10009eb8

dec_label_pc_10009eb8:                            ; preds = %dec_label_pc_10009e9c
  %v1_10009eb8 = call i32 @function_1000ab0c(i32 %v3_10009eac)
  br label %dec_label_pc_10009ebc

dec_label_pc_10009ebc:                            ; preds = %dec_label_pc_10009e70, %dec_label_pc_10009e9c, %dec_label_pc_10009eb8
  %v0_10009ecc = phi i32 [ %v1_10009e90, %dec_label_pc_10009e70 ], [ %v3_10009eac, %dec_label_pc_10009e9c ], [ %v1_10009eb8, %dec_label_pc_10009eb8 ]
  ret i32 %v0_10009ecc

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_10008580, { 0, 3, 9, 8, 7, 6, 5, 4, 2, 1 }
  uselistorder i32 (i32)* @function_10008330, { 0, 5, 9, 8, 11, 10, 7, 6, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_10009ebc, { 2, 1, 0 }
}

define i32 @function_10009ed0(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009ed0:
  %v3_10009ef0 = load i32, i32* @global_var_1001b550.307, align 4
  %v3_10009ef4 = icmp eq i32 %v3_10009ef0, 0
  br i1 %v3_10009ef4, label %dec_label_pc_10009f18, label %dec_label_pc_10009f3c

dec_label_pc_10009f18:                            ; preds = %dec_label_pc_10009ed0
  store i32 1, i32* @global_var_1001b550.307, align 4
  store i32 4096, i32* @global_var_1001b544.289, align 4
  br label %dec_label_pc_10009f3c

dec_label_pc_10009f3c:                            ; preds = %dec_label_pc_10009f18, %dec_label_pc_10009ed0
  %v0_10009f4c = load i32, i32* @r3, align 4
  ret i32 %v0_10009f4c
}

define i32 @function_10009f50(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_10009f50:
  %r25.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  store i32 %tmp, i32* @r30, align 4
  %v1_10009f68 = mul i32 %arg2, 4
  %v2_10009f6c = add i32 %tmp, %v1_10009f68
  %v0_10009f70 = load i32, i32* @r9, align 4
  store i32 %v0_10009f70, i32* @global_var_1001b53c.309, align 4
  %v1_10009f74 = add i32 %v2_10009f6c, 4
  store i32 268566528, i32* %r29.global-to-local, align 4
  store i32 %v1_10009f74, i32* @global_var_1001b540.310, align 4
  store i32 %arg6, i32* @global_var_1001b54c.305, align 4
  store i32 %arg1, i32* %r25.global-to-local, align 4
  store i32 %arg4, i32* %r28.global-to-local, align 4
  %v2_10009f94 = load i32, i32* %arg3, align 4
  store i32 %arg5, i32* %r27.global-to-local, align 4
  %v4_10009f9c = icmp eq i32 %v1_10009f74, %v2_10009f94
  br i1 %v4_10009f9c, label %dec_label_pc_10009fa4, label %dec_label_pc_10009fa8

dec_label_pc_10009fa4:                            ; preds = %dec_label_pc_10009f50
  store i32 %v2_10009f6c, i32* @global_var_1001b540.310, align 4
  br label %dec_label_pc_10009fa8

dec_label_pc_10009fa8:                            ; preds = %dec_label_pc_10009f50, %dec_label_pc_10009fa4
  %v2_10009fa8 = ptrtoint i32* %stack_var_-168 to i32
  store i32 268476344, i32* @lr, align 4
  %v3_10009fb4 = call i32 @function_10008c1c(i32 %v2_10009fa8, i32 0, i32 120)
  %storemerge.pre = load i32, i32* @global_var_1001b540.310, align 4
  br label %dec_label_pc_10009fc4

dec_label_pc_10009fc4:                            ; preds = %dec_label_pc_10009fc4, %dec_label_pc_10009fa8
  %storemerge = phi i32 [ %storemerge.pre, %dec_label_pc_10009fa8 ], [ %v1_10009fc8, %dec_label_pc_10009fc4 ]
  %v1_10009fc4 = inttoptr i32 %storemerge to i32*
  %v2_10009fc4 = load i32, i32* %v1_10009fc4, align 4
  %v1_10009fc8 = add i32 %storemerge, 4
  %v3_10009fcc = icmp eq i32 %v2_10009fc4, 0
  br i1 %v3_10009fcc, label %dec_label_pc_10009fd4, label %dec_label_pc_10009fc4

dec_label_pc_10009fd4:                            ; preds = %dec_label_pc_10009fc4
  store i32 %v1_10009fc8, i32* %r29.global-to-local, align 4
  %v1_1000a00012 = inttoptr i32 %v1_10009fc8 to i32*
  %v2_1000a00013 = load i32, i32* %v1_1000a00012, align 4
  %v3_1000a00416 = icmp eq i32 %v2_1000a00013, 0
  br i1 %v3_1000a00416, label %dec_label_pc_1000a00c, label %dec_label_pc_10009fdc

dec_label_pc_10009fdc:                            ; preds = %dec_label_pc_10009fd4, %dec_label_pc_10009ffc
  %v0_10009ff0 = phi i32 [ %v1_10009ffc, %dec_label_pc_10009ffc ], [ %v1_10009fc8, %dec_label_pc_10009fd4 ]
  %v0_10009fe4 = phi i32 [ %v2_1000a000, %dec_label_pc_10009ffc ], [ %v2_1000a00013, %dec_label_pc_10009fd4 ]
  %v2_10009fdc = icmp ugt i32 %v0_10009fe4, 14
  br i1 %v2_10009fdc, label %dec_label_pc_10009ffc, label %dec_label_pc_10009fe4

dec_label_pc_10009fe4:                            ; preds = %dec_label_pc_10009fdc
  %v1_10009fe4 = mul i32 %v0_10009fe4, 8
  %v2_10009fec = add i32 %v1_10009fe4, %v2_10009fa8
  store i32 %v2_10009fec, i32* @r3, align 4
  store i32 %v0_10009ff0, i32* @r4, align 4
  store i32 8, i32* @r5, align 4
  store i32 268476412, i32* @lr, align 4
  %v0_10009ff8 = call i32 @function_1000a8b8()
  %v0_10009ffc.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10009ffc

dec_label_pc_10009ffc:                            ; preds = %dec_label_pc_10009fdc, %dec_label_pc_10009fe4
  %v0_10009ffc = phi i32 [ %v0_10009ff0, %dec_label_pc_10009fdc ], [ %v0_10009ffc.pre, %dec_label_pc_10009fe4 ]
  %v1_10009ffc = add i32 %v0_10009ffc, 8
  store i32 %v1_10009ffc, i32* %r29.global-to-local, align 4
  %v1_1000a000 = inttoptr i32 %v1_10009ffc to i32*
  %v2_1000a000 = load i32, i32* %v1_1000a000, align 4
  %v3_1000a004 = icmp eq i32 %v2_1000a000, 0
  br i1 %v3_1000a004, label %dec_label_pc_1000a00c, label %dec_label_pc_10009fdc

dec_label_pc_1000a00c:                            ; preds = %dec_label_pc_10009ffc, %dec_label_pc_10009fd4
  %v1_1000a010 = call i32 @function_1000ac5c(i32 %v2_10009fa8)
  store i32 %v1_1000a010, i32* @r3, align 4
  store i32 268476440, i32* @lr, align 4
  %v1_1000a014 = call i32 @function_10009ed0(i32 %v1_1000a010)
  %v3_1000a01c = icmp eq i32 %tmp27, 0
  br i1 %v3_1000a01c, label %dec_label_pc_1000a024, label %dec_label_pc_1000a028

dec_label_pc_1000a024:                            ; preds = %dec_label_pc_1000a00c
  br label %dec_label_pc_1000a028

dec_label_pc_1000a028:                            ; preds = %dec_label_pc_1000a00c, %dec_label_pc_1000a024
  %v0_1000a030 = phi i32 [ %tmp27, %dec_label_pc_1000a00c ], [ 4096, %dec_label_pc_1000a024 ]
  store i32 %v0_1000a030, i32* @global_var_1001b544.289, align 4
  %v3_1000a034 = icmp eq i32 %tmp26, -1
  br i1 %v3_1000a034, label %dec_label_pc_1000a03c, label %dec_label_pc_1000a070

dec_label_pc_1000a03c:                            ; preds = %dec_label_pc_1000a028
  store i32 268476480, i32* @lr, align 4
  %v1_1000a03c = call i32 @function_1000a574(i32 268566528)
  store i32 %v1_1000a03c, i32* %r29.global-to-local, align 4
  store i32 268476488, i32* @lr, align 4
  %v0_1000a044 = call i32 @function_1000a4e4()
  %v4_1000a048 = icmp eq i32 %v1_1000a03c, %v0_1000a044
  br i1 %v4_1000a048, label %dec_label_pc_1000a050, label %dec_label_pc_1000a08c

dec_label_pc_1000a050:                            ; preds = %dec_label_pc_1000a03c
  store i32 268476500, i32* @lr, align 4
  %v1_1000a050 = call i32 @function_1000a52c(i32 %v0_1000a044)
  store i32 %v1_1000a050, i32* %r29.global-to-local, align 4
  store i32 268476508, i32* @lr, align 4
  %v0_1000a058 = call i32 @function_1000a49c()
  %v4_1000a05c = icmp eq i32 %v1_1000a050, %v0_1000a058
  br i1 %v4_1000a05c, label %dec_label_pc_1000a064.thread, label %dec_label_pc_1000a08c

dec_label_pc_1000a064.thread:                     ; preds = %dec_label_pc_1000a050
  br label %dec_label_pc_1000a0bc

dec_label_pc_1000a070:                            ; preds = %dec_label_pc_1000a028
  %v4_1000a074 = icmp eq i32 %tmp26, %tmp25
  br i1 %v4_1000a074, label %dec_label_pc_1000a07c, label %dec_label_pc_1000a08c

dec_label_pc_1000a07c:                            ; preds = %dec_label_pc_1000a070
  br label %dec_label_pc_1000a08c

dec_label_pc_1000a08c:                            ; preds = %dec_label_pc_1000a07c, %dec_label_pc_1000a070, %dec_label_pc_1000a050, %dec_label_pc_1000a03c
  store i32 268476572, i32* @lr, align 4
  %v2_1000a098 = call i32 @function_10009e70(i32 0, i32 32768)
  store i32 268476588, i32* @lr, align 4
  %v2_1000a0a8 = call i32 @function_10009e70(i32 1, i32 32770)
  store i32 268476604, i32* @lr, align 4
  %v2_1000a0b8 = call i32 @function_10009e70(i32 2, i32 32770)
  br label %dec_label_pc_1000a0bc

dec_label_pc_1000a0bc:                            ; preds = %dec_label_pc_1000a064.thread, %dec_label_pc_1000a08c
  %v0_1000a0c8 = load i32, i32* @r30, align 4
  %v1_1000a0c8 = inttoptr i32 %v0_1000a0c8 to i32*
  %v2_1000a0c8 = load i32, i32* %v1_1000a0c8, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v2_1000a0c8, i32* inttoptr (i32 268547308 to i32*), align 4
  %v0_1000a0e8 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_1000a0e8, i32* @global_var_1001b548.304, align 4
  br i1 false, label %dec_label_pc_1000a0f0, label %dec_label_pc_1000a168

dec_label_pc_1000a0f0:                            ; preds = %dec_label_pc_1000a0bc, %dec_label_pc_1000a0f0
  br i1 undef, label %dec_label_pc_1000a0f0, label %dec_label_pc_1000a168

dec_label_pc_1000a168:                            ; preds = %dec_label_pc_1000a0f0, %dec_label_pc_1000a0bc
  %v0_1000a114 = load i32, i32* %r28.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_1000a114)
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_1000a178 = call i32 @function_10008b34()
  %v2_1000a180 = inttoptr i32 %v0_1000a178 to i32*
  store i32 0, i32* %v2_1000a180, align 4
  %v0_1000a1ac = load i32, i32* %r25.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_1000a1ac)
  %v0_1000a1b8 = call i32 @function_10009b78()
  ret i32 %v0_1000a1b8

; uselistorder directives
  uselistorder i32 %v2_1000a000, { 1, 0 }
  uselistorder i32 %v1_10009ffc, { 2, 1, 0 }
  uselistorder i32 %v1_10009fc8, { 0, 2, 1, 3 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v2_10009fa8, { 1, 0, 2 }
  uselistorder i32* %r29.global-to-local, { 1, 2, 3, 4, 6, 5, 0, 7 }
  uselistorder i32 ()* @function_10009b78, { 0, 2, 3, 1 }
  uselistorder i1 false, { 0, 5, 6, 7, 1, 2, 3, 4, 8, 9 }
  uselistorder i32 (i32, i32)* @function_10009e70, { 2, 1, 0 }
  uselistorder i32 4096, { 1, 3, 4, 0, 8, 5, 9, 6, 10, 7, 2 }
  uselistorder i32 14, { 40, 0, 5, 6, 21, 7, 8, 22, 23, 9, 10, 24, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 26, 1, 27, 28, 29, 2, 30, 31, 32, 33, 34, 3, 35, 36, 37, 38, 39, 4 }
  uselistorder i32* @r9, { 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 11 }
  uselistorder label %dec_label_pc_1000a0f0, { 1, 0 }
  uselistorder label %dec_label_pc_1000a0bc, { 1, 0 }
  uselistorder label %dec_label_pc_1000a028, { 1, 0 }
  uselistorder label %dec_label_pc_10009ffc, { 1, 0 }
  uselistorder label %dec_label_pc_10009fdc, { 1, 0 }
  uselistorder label %dec_label_pc_10009fa8, { 1, 0 }
}

define i32 @function_1000a1bc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a1bc:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a1d4 = call i32 @__asm_mfcr()
  %v1_1000a1d8 = and i32 %v0_1000a1d4, 268435456
  %v3_1000a1d8 = icmp eq i32 %v1_1000a1d8, 0
  store i32 %v0_1000a1d4, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a1d8, label %dec_label_pc_1000a1f0, label %dec_label_pc_1000a1e4

dec_label_pc_1000a1e4:                            ; preds = %dec_label_pc_1000a1bc
  %v0_1000a1e4 = call i32 @function_10008b34()
  %v0_1000a1e8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a1e8 = inttoptr i32 %v0_1000a1e4 to i32*
  store i32 %v0_1000a1e8, i32* %v2_1000a1e8, align 4
  br label %dec_label_pc_1000a1f0

dec_label_pc_1000a1f0:                            ; preds = %dec_label_pc_1000a1bc, %dec_label_pc_1000a1e4
  %v0_1000a200 = phi i32 [ %v0_1000a1d4, %dec_label_pc_1000a1bc ], [ -1, %dec_label_pc_1000a1e4 ]
  ret i32 %v0_1000a200

; uselistorder directives
  uselistorder label %dec_label_pc_1000a1f0, { 1, 0 }
}

define i32 @function_1000a204(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a204:
  %r31.global-to-local = alloca i32, align 4
  br label %dec_label_pc_1000a218

dec_label_pc_1000a218:                            ; preds = %dec_label_pc_1000a218.backedge, %dec_label_pc_1000a204
  %v0_1000a224 = call i32 @__asm_mfcr()
  %v1_1000a228 = and i32 %v0_1000a224, 268435456
  %v3_1000a228 = icmp eq i32 %v1_1000a228, 0
  store i32 %v0_1000a224, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a228, label %dec_label_pc_1000a218.backedge, label %dec_label_pc_1000a234

dec_label_pc_1000a234:                            ; preds = %dec_label_pc_1000a218
  %v0_1000a234 = call i32 @function_10008b34()
  %v0_1000a238 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a238 = inttoptr i32 %v0_1000a234 to i32*
  store i32 %v0_1000a238, i32* %v2_1000a238, align 4
  br label %dec_label_pc_1000a218.backedge

dec_label_pc_1000a218.backedge:                   ; preds = %dec_label_pc_1000a234, %dec_label_pc_1000a218
  br label %dec_label_pc_1000a218
}

define i32 @function_1000a240(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a240:
  %stack_var_-104 = alloca i32, align 4
  %v2_1000a24c = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1000a24c, i32* @r29, align 4
  %v0_1000a254 = load i32, i32* @r4, align 4
  store i32 %v0_1000a254, i32* @r30, align 4
  %v0_1000a264 = call i32 @__asm_mfcr()
  %v1_1000a268 = and i32 %v0_1000a264, 268435456
  %v3_1000a268 = icmp eq i32 %v1_1000a268, 0
  store i32 -1, i32* @r28, align 4
  store i32 %v0_1000a264, i32* @r31, align 4
  br i1 %v3_1000a268, label %dec_label_pc_1000a284, label %dec_label_pc_1000a278

dec_label_pc_1000a278:                            ; preds = %dec_label_pc_1000a240
  %v0_1000a278 = call i32 @function_10008b34()
  %v0_1000a27c = load i32, i32* @r31, align 4
  %v2_1000a27c = inttoptr i32 %v0_1000a278 to i32*
  store i32 %v0_1000a27c, i32* %v2_1000a27c, align 4
  br label %dec_label_pc_1000a29c

dec_label_pc_1000a284:                            ; preds = %dec_label_pc_1000a240
  %v3_1000a284 = icmp eq i32 %v0_1000a264, 0
  store i32 %v0_1000a264, i32* @r28, align 4
  br i1 %v3_1000a284, label %dec_label_pc_1000a298, label %dec_label_pc_1000a29c

dec_label_pc_1000a298:                            ; preds = %dec_label_pc_1000a284
  %v0_1000a28c = load i32, i32* @r30, align 4
  store i32 268477084, i32* @lr, align 4
  %v4_1000a298 = call i32 @function_1000a808(i32* nonnull %stack_var_-104, i32 %v0_1000a28c, i32 0)
  br label %dec_label_pc_1000a29c

dec_label_pc_1000a29c:                            ; preds = %dec_label_pc_1000a284, %dec_label_pc_1000a278, %dec_label_pc_1000a298
  %v0_1000a2a0 = load i32, i32* @r28, align 4
  ret i32 %v0_1000a2a0

; uselistorder directives
  uselistorder i32 %v0_1000a264, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1000a29c, { 2, 0, 1 }
}

define i32 @function_1000a2b4(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000a2b4:
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v0_1000a2c8 = call i32 @function_1000a344()
  store i32 %v0_1000a2c8, i32* @r30, align 4
  %tmp18 = icmp slt i32 %v0_1000a2c8, 1
  br i1 %tmp18, label %dec_label_pc_1000a32c, label %dec_label_pc_1000a2d4

dec_label_pc_1000a2d4:                            ; preds = %dec_label_pc_1000a2b4
  %v0_1000a2d4 = load i32, i32* @r31, align 4
  %v2_1000a2d4 = add i32 %v0_1000a2d4, %v0_1000a2c8
  store i32 %v2_1000a2d4, i32* %r29.global-to-local, align 4
  %v2_1000a31c3 = icmp ult i32 %v0_1000a2d4, %v2_1000a2d4
  br i1 %v2_1000a31c3, label %dec_label_pc_1000a2dc, label %dec_label_pc_1000a32c

dec_label_pc_1000a2dc:                            ; preds = %dec_label_pc_1000a2d4, %dec_label_pc_1000a2dc
  %v1_1000a2ec = phi i32 [ %v2_1000a318, %dec_label_pc_1000a2dc ], [ %v0_1000a2d4, %dec_label_pc_1000a2d4 ]
  %v1_1000a32010.in = phi i32 [ %v2_1000a318, %dec_label_pc_1000a2dc ], [ %v0_1000a2d4, %dec_label_pc_1000a2d4 ]
  %v1_1000a32411.in = phi i32 [ %v2_1000a318, %dec_label_pc_1000a2dc ], [ %v0_1000a2d4, %dec_label_pc_1000a2d4 ]
  %v1_1000a32010 = add i32 %v1_1000a32010.in, 11
  %v1_1000a32411 = add i32 %v1_1000a32411.in, 19
  %v1_1000a2dc = add i32 %v1_1000a2ec, 4
  %v2_1000a2dc = inttoptr i32 %v1_1000a2dc to i32*
  %v3_1000a2dc = load i32, i32* %v2_1000a2dc, align 4
  store i32 %v3_1000a2dc, i32* %r11.global-to-local, align 4
  %v1_1000a2e0 = add i32 %v1_1000a2ec, 12
  %v2_1000a2e0 = inttoptr i32 %v1_1000a2e0 to i32*
  %v3_1000a2e0 = load i32, i32* %v2_1000a2e0, align 4
  %v1_1000a2e4 = add i32 %v1_1000a2ec, 16
  %v2_1000a2e4 = inttoptr i32 %v1_1000a2e4 to i16*
  %v3_1000a2e4 = load i16, i16* %v2_1000a2e4, align 2
  %v4_1000a2e4 = zext i16 %v3_1000a2e4 to i32
  store i32 %v4_1000a2e4, i32* %r5.global-to-local, align 4
  %v1_1000a2e8 = add i32 %v1_1000a2ec, 18
  %v2_1000a2e8 = inttoptr i32 %v1_1000a2e8 to i8*
  %v3_1000a2e8 = load i8, i8* %v2_1000a2e8, align 1
  %v4_1000a2e8 = zext i8 %v3_1000a2e8 to i32
  store i32 %v4_1000a2e8, i32* %r9.global-to-local, align 4
  store i32 %v3_1000a2e0, i32* %v2_1000a2dc, align 4
  %v0_1000a2f0 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a2f0 = load i32, i32* @r31, align 4
  %v2_1000a2f0 = inttoptr i32 %v1_1000a2f0 to i32*
  store i32 %v0_1000a2f0, i32* %v2_1000a2f0, align 4
  %v0_1000a2f4 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a2f4 = trunc i32 %v0_1000a2f4 to i8
  %v2_1000a2f4 = load i32, i32* @r31, align 4
  %v3_1000a2f4 = add i32 %v2_1000a2f4, 10
  %v4_1000a2f4 = inttoptr i32 %v3_1000a2f4 to i8*
  store i8 %v1_1000a2f4, i8* %v4_1000a2f4, align 1
  %v0_1000a2f8 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000a2f8 = trunc i32 %v0_1000a2f8 to i16
  %v2_1000a2f8 = load i32, i32* @r31, align 4
  %v3_1000a2f8 = add i32 %v2_1000a2f8, 8
  %v4_1000a2f8 = inttoptr i32 %v3_1000a2f8 to i16*
  store i16 %v1_1000a2f8, i16* %v4_1000a2f8, align 2
  %v0_1000a2fc = load i32, i32* %r5.global-to-local, align 4
  %v1_1000a2fc = add i32 %v0_1000a2fc, -19
  store i32 %v1_1000a2fc, i32* %r5.global-to-local, align 4
  store i32 268477188, i32* @lr, align 4
  %v3_1000a300 = call i32 @function_10008b78(i32 %v1_1000a32010, i32 %v1_1000a32411, i32 %v1_1000a2fc)
  %v0_1000a304 = load i32, i32* @r31, align 4
  %v1_1000a304 = add i32 %v0_1000a304, 8
  %v2_1000a304 = inttoptr i32 %v1_1000a304 to i16*
  %v3_1000a304 = load i16, i16* %v2_1000a304, align 2
  %v4_1000a304 = zext i16 %v3_1000a304 to i32
  store i32 %v4_1000a304, i32* %r5.global-to-local, align 4
  store i32 268477204, i32* @lr, align 4
  %v3_1000a310 = call i32 @function_10008b78(i32 %v0_1000a304, i32 %v0_1000a304, i32 %v4_1000a304)
  %v0_1000a314 = load i32, i32* @r31, align 4
  %v1_1000a314 = add i32 %v0_1000a314, 8
  %v2_1000a314 = inttoptr i32 %v1_1000a314 to i16*
  %v3_1000a314 = load i16, i16* %v2_1000a314, align 2
  %v4_1000a314 = zext i16 %v3_1000a314 to i32
  %v2_1000a318 = add i32 %v4_1000a314, %v0_1000a314
  store i32 %v2_1000a318, i32* @r31, align 4
  %v1_1000a31c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a31c = icmp ult i32 %v2_1000a318, %v1_1000a31c
  br i1 %v2_1000a31c, label %dec_label_pc_1000a2dc, label %dec_label_pc_1000a31c.dec_label_pc_1000a32c.loopexit_crit_edge

dec_label_pc_1000a31c.dec_label_pc_1000a32c.loopexit_crit_edge: ; preds = %dec_label_pc_1000a2dc
  %v0_1000a330.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000a32c

dec_label_pc_1000a32c:                            ; preds = %dec_label_pc_1000a2d4, %dec_label_pc_1000a31c.dec_label_pc_1000a32c.loopexit_crit_edge, %dec_label_pc_1000a2b4
  %v0_1000a330 = phi i32 [ %v0_1000a2c8, %dec_label_pc_1000a2b4 ], [ %v0_1000a330.pre.pre, %dec_label_pc_1000a31c.dec_label_pc_1000a32c.loopexit_crit_edge ], [ %v0_1000a2c8, %dec_label_pc_1000a2d4 ]
  ret i32 %v0_1000a330

; uselistorder directives
  uselistorder i32 %v2_1000a318, { 3, 4, 2, 0, 1 }
  uselistorder i32 %v0_1000a304, { 1, 0, 2 }
  uselistorder i32 %v1_1000a2ec, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1000a2d4, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v0_1000a2c8, { 1, 2, 0, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @function_10008b78, { 1, 0, 2 }
  uselistorder i32 11, { 0, 29, 28, 1, 9, 10, 11, 12, 13, 14, 2, 15, 16, 17, 18, 19, 20, 21, 3, 22, 23, 4, 24, 25, 7, 5, 26, 27, 8, 6 }
  uselistorder label %dec_label_pc_1000a32c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000a2dc, { 1, 0 }
}

define i32 @function_1000a344() local_unnamed_addr {
dec_label_pc_1000a344:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000a348 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1000a348, i32* %stack_var_-48, align 4
  %v5_1000a348 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v4_1000a348, i32* %r9.global-to-local, align 4
  %v0_1000a354 = load i32, i32* @r5, align 4
  %v1_1000a354 = add i32 %v0_1000a354, 30
  %v1_1000a358 = call i32 @__asm_rlwinm(i32 %v1_1000a354, i32 0, i32 0, i32 27)
  store i32 %v5_1000a348, i32* @r31, align 4
  %v1_1000a368 = load i32, i32* @r1, align 4
  %v3_1000a368 = sub i32 %v1_1000a368, %v1_1000a358
  %v4_1000a368 = inttoptr i32 %v3_1000a368 to i32*
  store i32 %v4_1000a348, i32* %v4_1000a368, align 4
  %v0_1000a36c = load i32, i32* @r4, align 4
  store i32 %v0_1000a36c, i32* @r28, align 4
  %v0_1000a370 = load i32, i32* @r5, align 4
  store i32 %v0_1000a370, i32* @r23, align 4
  %v0_1000a374 = load i32, i32* @r3, align 4
  store i32 %v0_1000a374, i32* @r22, align 4
  %v1_1000a378 = add i32 %v3_1000a368, 23
  %v1_1000a37c = call i32 @__asm_rlwinm(i32 %v1_1000a378, i32 0, i32 0, i32 27)
  store i32 %v1_1000a37c, i32* @r27, align 4
  store i32 %v1_1000a37c, i32* %r4.global-to-local, align 4
  %v0_1000a38c = call i32 @__asm_mfcr()
  %v1_1000a390 = and i32 %v0_1000a38c, 268435456
  store i32 %v1_1000a390, i32* %r9.global-to-local, align 4
  %v3_1000a390 = icmp eq i32 %v1_1000a390, 0
  store i32 %v0_1000a38c, i32* %r30.global-to-local, align 4
  br i1 %v3_1000a390, label %dec_label_pc_1000a3a8, label %dec_label_pc_1000a39c

dec_label_pc_1000a39c:                            ; preds = %dec_label_pc_1000a344
  %v0_1000a39c = call i32 @function_10008b34()
  %v0_1000a3a0 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000a3a0 = inttoptr i32 %v0_1000a39c to i32*
  store i32 %v0_1000a3a0, i32* %v2_1000a3a0, align 4
  br label %dec_label_pc_1000a3b4

dec_label_pc_1000a3a8:                            ; preds = %dec_label_pc_1000a344
  %v3_1000a3a8 = icmp eq i32 %v0_1000a38c, -1
  store i32 %v0_1000a38c, i32* @r24, align 4
  br i1 %v3_1000a3a8, label %dec_label_pc_1000a3b4, label %dec_label_pc_1000a3bc

dec_label_pc_1000a3b4:                            ; preds = %dec_label_pc_1000a3a8, %dec_label_pc_1000a39c
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000a480

dec_label_pc_1000a3bc:                            ; preds = %dec_label_pc_1000a3a8
  %v0_1000a3bc = load i32, i32* @r28, align 4
  store i32 %v0_1000a3bc, i32* %r29.global-to-local, align 4
  store i32 %v1_1000a37c, i32* %r30.global-to-local, align 4
  store i32 -1, i32* @r25, align 4
  store i32 -1, i32* @r26, align 4
  %v2_1000a46412 = add i32 %v0_1000a38c, %v1_1000a37c
  %v1_1000a46813 = load i32, i32* @r23, align 4
  %v2_1000a46814 = add i32 %v1_1000a46813, %v0_1000a3bc
  store i32 %v2_1000a46814, i32* %r10.global-to-local, align 4
  %v2_1000a46c15 = icmp ult i32 %v1_1000a37c, %v2_1000a46412
  %v1_1000a47017 = add i32 %v0_1000a3bc, 19
  store i32 %v1_1000a47017, i32* @r3, align 4
  %v1_1000a47418 = add i32 %v1_1000a37c, 19
  store i32 %v1_1000a47418, i32* @r4, align 4
  br i1 %v2_1000a46c15, label %dec_label_pc_1000a3d0, label %dec_label_pc_1000a47c

dec_label_pc_1000a3d0:                            ; preds = %dec_label_pc_1000a3bc, %dec_label_pc_1000a418
  %v0_1000a3d019 = phi i32 [ %v2_1000a460, %dec_label_pc_1000a418 ], [ %v1_1000a37c, %dec_label_pc_1000a3bc ]
  %v1_1000a3d0 = add i32 %v0_1000a3d019, 16
  %v2_1000a3d0 = inttoptr i32 %v1_1000a3d0 to i16*
  %v3_1000a3d0 = load i16, i16* %v2_1000a3d0, align 2
  %v4_1000a3d0 = zext i16 %v3_1000a3d0 to i32
  %v1_1000a3d4 = add nuw nsw i32 %v4_1000a3d0, 7
  store i32 %v1_1000a3d4, i32* %r9.global-to-local, align 4
  %v1_1000a3d8 = call i32 @__asm_rlwinm(i32 %v1_1000a3d4, i32 0, i32 0, i32 28)
  %v0_1000a3dc = load i32, i32* %r29.global-to-local, align 4
  %v3_1000a3dc = add i32 %v1_1000a3d8, %v0_1000a3dc
  store i32 %v3_1000a3dc, i32* %r11.global-to-local, align 4
  %v1_1000a3e0 = load i32, i32* %r10.global-to-local, align 4
  %v3_1000a3e0 = icmp ugt i32 %v3_1000a3dc, %v1_1000a3e0
  br i1 %v3_1000a3e0, label %dec_label_pc_1000a3e8, label %dec_label_pc_1000a418

dec_label_pc_1000a3e8:                            ; preds = %dec_label_pc_1000a3d0
  %v0_1000a3e8 = load i32, i32* @r22, align 4
  %v0_1000a3ec = load i32, i32* @r25, align 4
  %v0_1000a3f0 = load i32, i32* @r26, align 4
  store i32 268477436, i32* @lr, align 4
  %v4_1000a3f8 = call i32 @function_1000a5bc(i32 %v0_1000a3e8, i32 %v0_1000a3ec, i32 %v0_1000a3f0, i32 0)
  %v0_1000a3fc = load i32, i32* %r29.global-to-local, align 4
  %v1_1000a3fc = load i32, i32* @r28, align 4
  %v4_1000a3fc = icmp eq i32 %v0_1000a3fc, %v1_1000a3fc
  br i1 %v4_1000a3fc, label %dec_label_pc_1000a404, label %dec_label_pc_1000a47c

dec_label_pc_1000a404:                            ; preds = %dec_label_pc_1000a3e8
  %v0_1000a404 = call i32 @function_10008b34()
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1000a410 = inttoptr i32 %v0_1000a404 to i32*
  store i32 22, i32* %v2_1000a410, align 4
  %v0_1000a484.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000a480

dec_label_pc_1000a418:                            ; preds = %dec_label_pc_1000a3d0
  %v2_1000a3d8 = trunc i32 %v1_1000a3d8 to i16
  %v0_1000a418 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000a418 = inttoptr i32 %v0_1000a418 to i32*
  %v2_1000a418 = load i32, i32* %v1_1000a418, align 4
  store i32 %v2_1000a418, i32* %r9.global-to-local, align 4
  %v1_1000a41c = add i32 %v0_1000a418, 4
  %v2_1000a41c = inttoptr i32 %v1_1000a41c to i32*
  %v3_1000a41c = load i32, i32* %v2_1000a41c, align 4
  store i32 %v3_1000a41c, i32* %r10.global-to-local, align 4
  %v1_1000a420 = add i32 %v0_1000a418, 8
  %v2_1000a420 = inttoptr i32 %v1_1000a420 to i32*
  %v3_1000a420 = load i32, i32* %v2_1000a420, align 4
  store i32 %v3_1000a420, i32* @r25, align 4
  %v1_1000a424 = add i32 %v0_1000a418, 12
  %v2_1000a424 = inttoptr i32 %v1_1000a424 to i32*
  %v3_1000a424 = load i32, i32* %v2_1000a424, align 4
  store i32 %v3_1000a424, i32* @r26, align 4
  %v2_1000a428 = inttoptr i32 %v0_1000a3dc to i32*
  store i32 %v2_1000a418, i32* %v2_1000a428, align 4
  %v0_1000a42c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a42c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a42c = add i32 %v1_1000a42c, 4
  %v3_1000a42c = inttoptr i32 %v2_1000a42c to i32*
  store i32 %v0_1000a42c, i32* %v3_1000a42c, align 4
  %v0_1000a430 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000a430 = add i32 %v0_1000a430, 8
  %v2_1000a430 = inttoptr i32 %v1_1000a430 to i32*
  %v3_1000a430 = load i32, i32* %v2_1000a430, align 4
  store i32 %v3_1000a430, i32* %r9.global-to-local, align 4
  %v1_1000a434 = add i32 %v0_1000a430, 12
  %v2_1000a434 = inttoptr i32 %v1_1000a434 to i32*
  %v3_1000a434 = load i32, i32* %v2_1000a434, align 4
  store i32 %v3_1000a434, i32* %r10.global-to-local, align 4
  %v3_1000a438 = load i32, i32* %r29.global-to-local, align 4
  %v4_1000a438 = add i32 %v3_1000a438, 16
  %v5_1000a438 = inttoptr i32 %v4_1000a438 to i16*
  store i16 %v2_1000a3d8, i16* %v5_1000a438, align 2
  %v0_1000a43c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a43c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a43c = add i32 %v1_1000a43c, 8
  %v3_1000a43c = inttoptr i32 %v2_1000a43c to i32*
  store i32 %v0_1000a43c, i32* %v3_1000a43c, align 4
  %v0_1000a440 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a440 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a440 = add i32 %v1_1000a440, 12
  %v3_1000a440 = inttoptr i32 %v2_1000a440 to i32*
  store i32 %v0_1000a440, i32* %v3_1000a440, align 4
  %v0_1000a444 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000a444 = add i32 %v0_1000a444, 18
  %v2_1000a444 = inttoptr i32 %v1_1000a444 to i8*
  %v3_1000a444 = load i8, i8* %v2_1000a444, align 1
  %v2_1000a448 = load i32, i32* %r29.global-to-local, align 4
  %v3_1000a448 = add i32 %v2_1000a448, 18
  %v4_1000a448 = inttoptr i32 %v3_1000a448 to i8*
  store i8 %v3_1000a444, i8* %v4_1000a448, align 1
  %v0_1000a44c = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000a44c, i32* %r29.global-to-local, align 4
  %v0_1000a450 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000a450 = add i32 %v0_1000a450, 16
  %v2_1000a450 = inttoptr i32 %v1_1000a450 to i16*
  %v3_1000a450 = load i16, i16* %v2_1000a450, align 2
  %v4_1000a450 = zext i16 %v3_1000a450 to i32
  %v1_1000a454 = add nsw i32 %v4_1000a450, -19
  store i32 %v1_1000a454, i32* @r5, align 4
  store i32 268477532, i32* @lr, align 4
  %v0_1000a458 = call i32 @function_1000a8b8()
  %v0_1000a45c = load i32, i32* %r30.global-to-local, align 4
  %v1_1000a45c = add i32 %v0_1000a45c, 16
  %v2_1000a45c = inttoptr i32 %v1_1000a45c to i16*
  %v3_1000a45c = load i16, i16* %v2_1000a45c, align 2
  %v4_1000a45c = zext i16 %v3_1000a45c to i32
  %v2_1000a460 = add i32 %v4_1000a45c, %v0_1000a45c
  store i32 %v2_1000a460, i32* %r30.global-to-local, align 4
  %v1_1000a464.pre = load i32, i32* @r24, align 4
  %v0_1000a468.pre = load i32, i32* @r28, align 4
  %v0_1000a470.pre = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a464 = add i32 %v1_1000a464.pre, %v1_1000a37c
  %v1_1000a468 = load i32, i32* @r23, align 4
  %v2_1000a468 = add i32 %v1_1000a468, %v0_1000a468.pre
  store i32 %v2_1000a468, i32* %r10.global-to-local, align 4
  %v2_1000a46c = icmp ult i32 %v2_1000a460, %v2_1000a464
  %v1_1000a470 = add i32 %v0_1000a470.pre, 19
  store i32 %v1_1000a470, i32* @r3, align 4
  %v1_1000a474 = add i32 %v2_1000a460, 19
  store i32 %v1_1000a474, i32* @r4, align 4
  br i1 %v2_1000a46c, label %dec_label_pc_1000a3d0, label %dec_label_pc_1000a47c

dec_label_pc_1000a47c:                            ; preds = %dec_label_pc_1000a3bc, %dec_label_pc_1000a418, %dec_label_pc_1000a3e8
  %v1_1000a47c = phi i32 [ %v0_1000a3fc, %dec_label_pc_1000a3e8 ], [ %v0_1000a3bc, %dec_label_pc_1000a3bc ], [ %v0_1000a470.pre, %dec_label_pc_1000a418 ]
  %v0_1000a47c = phi i32 [ %v1_1000a3fc, %dec_label_pc_1000a3e8 ], [ %v0_1000a3bc, %dec_label_pc_1000a3bc ], [ %v0_1000a468.pre, %dec_label_pc_1000a418 ]
  %v2_1000a47c = sub i32 %v1_1000a47c, %v0_1000a47c
  store i32 %v2_1000a47c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000a480

dec_label_pc_1000a480:                            ; preds = %dec_label_pc_1000a404, %dec_label_pc_1000a3b4, %dec_label_pc_1000a47c
  %v0_1000a484 = phi i32 [ %v0_1000a484.pre, %dec_label_pc_1000a404 ], [ -1, %dec_label_pc_1000a3b4 ], [ %v2_1000a47c, %dec_label_pc_1000a47c ]
  %v0_1000a480 = load i32, i32* @r1, align 4
  %v1_1000a480 = inttoptr i32 %v0_1000a480 to i32*
  %v2_1000a480 = load i32, i32* %v1_1000a480, align 4
  store i32 %v2_1000a480, i32* %r11.global-to-local, align 4
  ret i32 %v0_1000a484

; uselistorder directives
  uselistorder i32 %v2_1000a460, { 2, 1, 3, 0 }
  uselistorder i32 %v0_1000a418, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1000a3d8, { 1, 0 }
  uselistorder i32 %v0_1000a38c, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v1_1000a37c, { 4, 0, 1, 2, 3, 5, 6, 7 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32* %r30.global-to-local, { 0, 4, 1, 2, 3, 5, 6, 7, 8 }
  uselistorder i32* %r29.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32* %r10.global-to-local, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32 18, { 8, 9, 10, 0, 3, 4, 5, 6, 7, 11, 12, 1, 13, 2, 14, 15 }
  uselistorder i32 22, { 0, 1, 2, 3, 11, 4, 5, 6, 7, 12, 13, 14, 8, 15, 9, 16, 10, 17 }
  uselistorder i32 7, { 28, 42, 10, 11, 21, 12, 13, 22, 14, 15, 23, 16, 17, 24, 25, 18, 26, 27, 0, 29, 1, 30, 2, 31, 19, 32, 20, 33, 3, 34, 4, 35, 36, 37, 5, 38, 39, 6, 40, 41, 7, 8, 9, 43 }
  uselistorder i32 19, { 21, 22, 1, 2, 0, 14, 15, 16, 3, 6, 7, 17, 8, 9, 18, 19, 20, 10, 11, 12, 13, 23, 24, 25, 26, 4, 5 }
  uselistorder i32* @r26, { 15, 16, 17, 8, 9, 10, 24, 0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 18, 19, 20, 21, 22, 23, 25, 26, 27 }
  uselistorder i32* @r25, { 21, 22, 23, 14, 15, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 24, 25, 26, 27, 0, 28, 29, 30, 31, 32, 33 }
  uselistorder i32* @r24, { 0, 15, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 16, 19, 1, 20, 21, 22, 23, 24, 25 }
  uselistorder i32* @r27, { 23, 15, 16, 38, 39, 3, 4, 5, 6, 7, 8, 9, 10, 0, 11, 12, 13, 14, 19, 17, 18, 2, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 1, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47 }
  uselistorder i32 23, { 8, 5, 9, 0, 1, 6, 7, 2, 3, 4 }
  uselistorder i32* @r22, { 9, 10, 0, 1, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32* @r23, { 13, 0, 14, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32* @r1, { 7, 8, 2, 3, 4, 1, 5, 0, 9, 6, 10 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm, { 14, 15, 16, 25, 21, 23, 22, 24, 0, 27, 26, 1, 2, 3, 19, 20, 17, 18, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 28 }
  uselistorder i32 27, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 30, { 9, 10, 6, 2, 1, 0, 7, 8, 3, 4, 5 }
  uselistorder label %dec_label_pc_1000a480, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a47c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000a3d0, { 1, 0 }
}

define i32 @function_1000a49c() local_unnamed_addr {
dec_label_pc_1000a49c:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a4b4 = call i32 @__asm_mfcr()
  %v1_1000a4b8 = and i32 %v0_1000a4b4, 268435456
  %v3_1000a4b8 = icmp eq i32 %v1_1000a4b8, 0
  store i32 %v0_1000a4b4, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a4b8, label %dec_label_pc_1000a4d0, label %dec_label_pc_1000a4c4

dec_label_pc_1000a4c4:                            ; preds = %dec_label_pc_1000a49c
  %v0_1000a4c4 = call i32 @function_10008b34()
  %v0_1000a4c8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a4c8 = inttoptr i32 %v0_1000a4c4 to i32*
  store i32 %v0_1000a4c8, i32* %v2_1000a4c8, align 4
  br label %dec_label_pc_1000a4d0

dec_label_pc_1000a4d0:                            ; preds = %dec_label_pc_1000a49c, %dec_label_pc_1000a4c4
  %v0_1000a4e0 = phi i32 [ %v0_1000a4b4, %dec_label_pc_1000a49c ], [ -1, %dec_label_pc_1000a4c4 ]
  ret i32 %v0_1000a4e0

; uselistorder directives
  uselistorder label %dec_label_pc_1000a4d0, { 1, 0 }
}

define i32 @function_1000a4e4() local_unnamed_addr {
dec_label_pc_1000a4e4:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a4fc = call i32 @__asm_mfcr()
  %v1_1000a500 = and i32 %v0_1000a4fc, 268435456
  %v3_1000a500 = icmp eq i32 %v1_1000a500, 0
  store i32 %v0_1000a4fc, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a500, label %dec_label_pc_1000a518, label %dec_label_pc_1000a50c

dec_label_pc_1000a50c:                            ; preds = %dec_label_pc_1000a4e4
  %v0_1000a50c = call i32 @function_10008b34()
  %v0_1000a510 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a510 = inttoptr i32 %v0_1000a50c to i32*
  store i32 %v0_1000a510, i32* %v2_1000a510, align 4
  br label %dec_label_pc_1000a518

dec_label_pc_1000a518:                            ; preds = %dec_label_pc_1000a4e4, %dec_label_pc_1000a50c
  %v0_1000a528 = phi i32 [ %v0_1000a4fc, %dec_label_pc_1000a4e4 ], [ -1, %dec_label_pc_1000a50c ]
  ret i32 %v0_1000a528

; uselistorder directives
  uselistorder label %dec_label_pc_1000a518, { 1, 0 }
}

define i32 @function_1000a52c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a52c:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a544 = call i32 @__asm_mfcr()
  %v1_1000a548 = and i32 %v0_1000a544, 268435456
  %v3_1000a548 = icmp eq i32 %v1_1000a548, 0
  store i32 %v0_1000a544, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a548, label %dec_label_pc_1000a560, label %dec_label_pc_1000a554

dec_label_pc_1000a554:                            ; preds = %dec_label_pc_1000a52c
  %v0_1000a554 = call i32 @function_10008b34()
  %v0_1000a558 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a558 = inttoptr i32 %v0_1000a554 to i32*
  store i32 %v0_1000a558, i32* %v2_1000a558, align 4
  br label %dec_label_pc_1000a560

dec_label_pc_1000a560:                            ; preds = %dec_label_pc_1000a52c, %dec_label_pc_1000a554
  %v0_1000a570 = phi i32 [ %v0_1000a544, %dec_label_pc_1000a52c ], [ -1, %dec_label_pc_1000a554 ]
  ret i32 %v0_1000a570

; uselistorder directives
  uselistorder label %dec_label_pc_1000a560, { 1, 0 }
}

define i32 @function_1000a574(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a574:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a58c = call i32 @__asm_mfcr()
  %v1_1000a590 = and i32 %v0_1000a58c, 268435456
  %v3_1000a590 = icmp eq i32 %v1_1000a590, 0
  store i32 %v0_1000a58c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a590, label %dec_label_pc_1000a5a8, label %dec_label_pc_1000a59c

dec_label_pc_1000a59c:                            ; preds = %dec_label_pc_1000a574
  %v0_1000a59c = call i32 @function_10008b34()
  %v0_1000a5a0 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a5a0 = inttoptr i32 %v0_1000a59c to i32*
  store i32 %v0_1000a5a0, i32* %v2_1000a5a0, align 4
  br label %dec_label_pc_1000a5a8

dec_label_pc_1000a5a8:                            ; preds = %dec_label_pc_1000a574, %dec_label_pc_1000a59c
  %v0_1000a5b8 = phi i32 [ %v0_1000a58c, %dec_label_pc_1000a574 ], [ -1, %dec_label_pc_1000a59c ]
  ret i32 %v0_1000a5b8

; uselistorder directives
  uselistorder label %dec_label_pc_1000a5a8, { 1, 0 }
}

define i32 @function_1000a5bc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000a5bc:
  %r0.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1000a5bc = load i32, i32* @lr, align 4
  store i32 140, i32* %r0.global-to-local, align 4
  %v0_1000a5e8 = call i32 @__asm_mfcr()
  %v1_1000a5ec = and i32 %v0_1000a5e8, 268435456
  %v3_1000a5ec = icmp eq i32 %v1_1000a5ec, 0
  store i32 %v0_1000a5e8, i32* %r31.global-to-local, align 4
  store i32 %v0_1000a5e8, i32* %r0.global-to-local, align 4
  br i1 %v3_1000a5ec, label %dec_label_pc_1000a610, label %dec_label_pc_1000a600

dec_label_pc_1000a600:                            ; preds = %dec_label_pc_1000a5bc
  %v0_1000a600 = call i32 @function_10008b34()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_1000a608 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a608 = inttoptr i32 %v0_1000a600 to i32*
  store i32 %v0_1000a608, i32* %v2_1000a608, align 4
  %v0_1000a614.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000a614

dec_label_pc_1000a610:                            ; preds = %dec_label_pc_1000a5bc
  %v3_1000a5f8 = icmp eq i32 %v0_1000a5e8, 0
  br i1 %v3_1000a5f8, label %dec_label_pc_1000a620, label %dec_label_pc_1000a614

dec_label_pc_1000a614:                            ; preds = %dec_label_pc_1000a610, %dec_label_pc_1000a600
  %v0_1000a614 = phi i32 [ %v0_1000a5e8, %dec_label_pc_1000a610 ], [ %v0_1000a614.pre, %dec_label_pc_1000a600 ]
  %tmp = icmp slt i32 %v0_1000a614, 0
  %v1_1000a618 = zext i1 %tmp to i32
  %v2_1000a618 = ashr i32 %v0_1000a614, 31
  %v3_1000a618 = and i32 %v2_1000a618, -2
  %v4_1000a618 = or i32 %v3_1000a618, %v1_1000a618
  br label %dec_label_pc_1000a628

dec_label_pc_1000a620:                            ; preds = %dec_label_pc_1000a610
  %v3_1000a620 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000a628

dec_label_pc_1000a628:                            ; preds = %dec_label_pc_1000a614, %dec_label_pc_1000a620
  %v0_1000a638 = phi i32 [ %v4_1000a618, %dec_label_pc_1000a614 ], [ %v3_1000a620, %dec_label_pc_1000a620 ]
  store i32 %v0_1000a5bc, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000a638

; uselistorder directives
  uselistorder i32 %v0_1000a614, { 1, 0 }
  uselistorder i32 %v0_1000a5e8, { 0, 3, 2, 1, 4 }
  uselistorder i32 -2, { 8, 7, 1, 0, 9, 10, 6, 13, 2, 11, 3, 12, 4, 5 }
  uselistorder label %dec_label_pc_1000a628, { 1, 0 }
}

define i32 @function_1000a63c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a63c:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a654 = call i32 @__asm_mfcr()
  %v1_1000a658 = and i32 %v0_1000a654, 268435456
  %v3_1000a658 = icmp eq i32 %v1_1000a658, 0
  store i32 %v0_1000a654, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a658, label %dec_label_pc_1000a670, label %dec_label_pc_1000a664

dec_label_pc_1000a664:                            ; preds = %dec_label_pc_1000a63c
  %v0_1000a664 = call i32 @function_10008b34()
  %v0_1000a668 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a668 = inttoptr i32 %v0_1000a664 to i32*
  store i32 %v0_1000a668, i32* %v2_1000a668, align 4
  br label %dec_label_pc_1000a670

dec_label_pc_1000a670:                            ; preds = %dec_label_pc_1000a63c, %dec_label_pc_1000a664
  %v0_1000a680 = phi i32 [ %v0_1000a654, %dec_label_pc_1000a63c ], [ -1, %dec_label_pc_1000a664 ]
  ret i32 %v0_1000a680

; uselistorder directives
  uselistorder label %dec_label_pc_1000a670, { 1, 0 }
}

define i32 @function_1000a684(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a684:
  store i32 %arg1, i32* @r30, align 4
  %v3_1000a6a0 = load i32, i32* @global_var_1001b568.315, align 4
  %v3_1000a6a4 = icmp eq i32 %v3_1000a6a0, 0
  br i1 %v3_1000a6a4, label %dec_label_pc_1000a6ac, label %dec_label_pc_1000a6b8

dec_label_pc_1000a6ac:                            ; preds = %dec_label_pc_1000a684
  store i32 268478128, i32* @lr, align 4
  %v1_1000a6ac = call i32 @function_1000ac78(i32 0)
  %v1_1000a6b0 = icmp slt i32 %v1_1000a6ac, 0
  br i1 %v1_1000a6b0, label %dec_label_pc_1000a6d8, label %dec_label_pc_1000a6ac.dec_label_pc_1000a6b8_crit_edge

dec_label_pc_1000a6ac.dec_label_pc_1000a6b8_crit_edge: ; preds = %dec_label_pc_1000a6ac
  %v0_1000a6b8.pre = load i32, i32* @r30, align 4
  %v3_1000a6bc.pre = load i32, i32* @global_var_1001b568.315, align 4
  br label %dec_label_pc_1000a6b8

dec_label_pc_1000a6b8:                            ; preds = %dec_label_pc_1000a6ac.dec_label_pc_1000a6b8_crit_edge, %dec_label_pc_1000a684
  %v3_1000a6bc = phi i32 [ %v3_1000a6bc.pre, %dec_label_pc_1000a6ac.dec_label_pc_1000a6b8_crit_edge ], [ %v3_1000a6a0, %dec_label_pc_1000a684 ]
  %v1_1000a6c4 = phi i32 [ %v0_1000a6b8.pre, %dec_label_pc_1000a6ac.dec_label_pc_1000a6b8_crit_edge ], [ %arg1, %dec_label_pc_1000a684 ]
  %v3_1000a6b8 = icmp eq i32 %v1_1000a6c4, 0
  store i32 %v3_1000a6bc, i32* @r31, align 4
  br i1 %v3_1000a6b8, label %dec_label_pc_1000a6dc, label %dec_label_pc_1000a6cc

dec_label_pc_1000a6cc:                            ; preds = %dec_label_pc_1000a6b8
  %v2_1000a6c4 = add i32 %v1_1000a6c4, %v3_1000a6bc
  store i32 268478160, i32* @lr, align 4
  %v1_1000a6cc = call i32 @function_1000ac78(i32 %v2_1000a6c4)
  %tmp6 = icmp sgt i32 %v1_1000a6cc, -1
  br i1 %tmp6, label %dec_label_pc_1000a6cc.dec_label_pc_1000a6dc_crit_edge, label %dec_label_pc_1000a6d8

dec_label_pc_1000a6cc.dec_label_pc_1000a6dc_crit_edge: ; preds = %dec_label_pc_1000a6cc
  %v0_1000a6e0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000a6dc

dec_label_pc_1000a6d8:                            ; preds = %dec_label_pc_1000a6cc, %dec_label_pc_1000a6ac
  store i32 -1, i32* @r31, align 4
  br label %dec_label_pc_1000a6dc

dec_label_pc_1000a6dc:                            ; preds = %dec_label_pc_1000a6cc.dec_label_pc_1000a6dc_crit_edge, %dec_label_pc_1000a6b8, %dec_label_pc_1000a6d8
  %v0_1000a6e0 = phi i32 [ %v0_1000a6e0.pre, %dec_label_pc_1000a6cc.dec_label_pc_1000a6dc_crit_edge ], [ %v3_1000a6bc, %dec_label_pc_1000a6b8 ], [ -1, %dec_label_pc_1000a6d8 ]
  ret i32 %v0_1000a6e0

; uselistorder directives
  uselistorder i32 %v3_1000a6bc, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_1000ac78, { 1, 0 }
  uselistorder label %dec_label_pc_1000a6dc, { 2, 0, 1 }
}

define i32 @function_1000a6f4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a6f4:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a70c = call i32 @__asm_mfcr()
  %v1_1000a710 = and i32 %v0_1000a70c, 268435456
  %v3_1000a710 = icmp eq i32 %v1_1000a710, 0
  store i32 %v0_1000a70c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a710, label %dec_label_pc_1000a728, label %dec_label_pc_1000a71c

dec_label_pc_1000a71c:                            ; preds = %dec_label_pc_1000a6f4
  %v0_1000a71c = call i32 @function_10008b34()
  %v0_1000a720 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a720 = inttoptr i32 %v0_1000a71c to i32*
  store i32 %v0_1000a720, i32* %v2_1000a720, align 4
  br label %dec_label_pc_1000a728

dec_label_pc_1000a728:                            ; preds = %dec_label_pc_1000a6f4, %dec_label_pc_1000a71c
  %v0_1000a738 = phi i32 [ %v0_1000a70c, %dec_label_pc_1000a6f4 ], [ -1, %dec_label_pc_1000a71c ]
  ret i32 %v0_1000a738

; uselistorder directives
  uselistorder label %dec_label_pc_1000a728, { 1, 0 }
}

define i32 @function_1000a73c(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a73c:
  %r10.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* %r28.global-to-local, align 4
  store i32 268478308, i32* @lr, align 4
  %v3_1000a760 = call i32 @function_10008c1c(i32 %arg2, i32 0, i32 104)
  %v2_1000a764 = load i32, i32* %arg1, align 4
  %v1_1000a768 = add i32 %tmp, 4
  %v2_1000a768 = inttoptr i32 %v1_1000a768 to i32*
  %v3_1000a768 = load i32, i32* %v2_1000a768, align 4
  store i32 %v3_1000a768, i32* %r10.global-to-local, align 4
  %v1_1000a76c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a76c = inttoptr i32 %v1_1000a76c to i32*
  store i32 %v2_1000a764, i32* %v2_1000a76c, align 4
  %v0_1000a770 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a770 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a770 = add i32 %v1_1000a770, 4
  %v3_1000a770 = inttoptr i32 %v2_1000a770 to i32*
  store i32 %v0_1000a770, i32* %v3_1000a770, align 4
  %v0_1000a774 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000a774 = add i32 %v0_1000a774, 8
  %v2_1000a774 = inttoptr i32 %v1_1000a774 to i32*
  %v3_1000a774 = load i32, i32* %v2_1000a774, align 4
  %v1_1000a778 = add i32 %v0_1000a774, 12
  %v2_1000a778 = inttoptr i32 %v1_1000a778 to i32*
  %v3_1000a778 = load i32, i32* %v2_1000a778, align 4
  store i32 %v3_1000a778, i32* %r10.global-to-local, align 4
  %v1_1000a77c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a77c = add i32 %v1_1000a77c, 8
  %v3_1000a77c = inttoptr i32 %v2_1000a77c to i32*
  store i32 %v3_1000a774, i32* %v3_1000a77c, align 4
  %v0_1000a780 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a780 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a780 = add i32 %v1_1000a780, 12
  %v3_1000a780 = inttoptr i32 %v2_1000a780 to i32*
  store i32 %v0_1000a780, i32* %v3_1000a780, align 4
  %v0_1000a784 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000a784 = add i32 %v0_1000a784, 16
  %v2_1000a784 = inttoptr i32 %v1_1000a784 to i32*
  %v3_1000a784 = load i32, i32* %v2_1000a784, align 4
  %v1_1000a788 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a788 = add i32 %v1_1000a788, 16
  %v3_1000a788 = inttoptr i32 %v2_1000a788 to i32*
  store i32 %v3_1000a784, i32* %v3_1000a788, align 4
  %v0_1000a78c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000a78c = add i32 %v0_1000a78c, 20
  %v2_1000a78c = inttoptr i32 %v1_1000a78c to i32*
  %v3_1000a78c = load i32, i32* %v2_1000a78c, align 4
  %v1_1000a790 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a790 = add i32 %v1_1000a790, 20
  %v3_1000a790 = inttoptr i32 %v2_1000a790 to i32*
  store i32 %v3_1000a78c, i32* %v3_1000a790, align 4
  %v0_1000a794 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000a794 = add i32 %v0_1000a794, 24
  %v2_1000a794 = inttoptr i32 %v1_1000a794 to i32*
  %v3_1000a794 = load i32, i32* %v2_1000a794, align 4
  %v1_1000a798 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a798 = add i32 %v1_1000a798, 24
  %v3_1000a798 = inttoptr i32 %v2_1000a798 to i32*
  store i32 %v3_1000a794, i32* %v3_1000a798, align 4
  %v0_1000a79c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000a79c = add i32 %v0_1000a79c, 28
  %v2_1000a79c = inttoptr i32 %v1_1000a79c to i32*
  %v3_1000a79c = load i32, i32* %v2_1000a79c, align 4
  %v1_1000a7a0 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a7a0 = add i32 %v1_1000a7a0, 28
  %v3_1000a7a0 = inttoptr i32 %v2_1000a7a0 to i32*
  store i32 %v3_1000a79c, i32* %v3_1000a7a0, align 4
  %v0_1000a7a4 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000a7a4 = add i32 %v0_1000a7a4, 32
  %v2_1000a7a4 = inttoptr i32 %v1_1000a7a4 to i32*
  %v3_1000a7a4 = load i32, i32* %v2_1000a7a4, align 4
  %v1_1000a7a8 = add i32 %v0_1000a7a4, 36
  %v2_1000a7a8 = inttoptr i32 %v1_1000a7a8 to i32*
  %v3_1000a7a8 = load i32, i32* %v2_1000a7a8, align 4
  store i32 %v3_1000a7a8, i32* %r10.global-to-local, align 4
  %v1_1000a7ac = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a7ac = add i32 %v1_1000a7ac, 32
  %v3_1000a7ac = inttoptr i32 %v2_1000a7ac to i32*
  store i32 %v3_1000a7a4, i32* %v3_1000a7ac, align 4
  %v0_1000a7b0 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a7b0 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a7b0 = add i32 %v1_1000a7b0, 36
  %v3_1000a7b0 = inttoptr i32 %v2_1000a7b0 to i32*
  store i32 %v0_1000a7b0, i32* %v3_1000a7b0, align 4
  %v0_1000a7b4 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000a7b4 = add i32 %v0_1000a7b4, 48
  %v2_1000a7b4 = inttoptr i32 %v1_1000a7b4 to i32*
  %v3_1000a7b4 = load i32, i32* %v2_1000a7b4, align 4
  %v1_1000a7b8 = add i32 %v0_1000a7b4, 52
  %v2_1000a7b8 = inttoptr i32 %v1_1000a7b8 to i32*
  %v3_1000a7b8 = load i32, i32* %v2_1000a7b8, align 4
  store i32 %v3_1000a7b8, i32* %r10.global-to-local, align 4
  %v1_1000a7bc = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a7bc = add i32 %v1_1000a7bc, 48
  %v3_1000a7bc = inttoptr i32 %v2_1000a7bc to i32*
  store i32 %v3_1000a7b4, i32* %v3_1000a7bc, align 4
  %v0_1000a7c0 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a7c0 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a7c0 = add i32 %v1_1000a7c0, 52
  %v3_1000a7c0 = inttoptr i32 %v2_1000a7c0 to i32*
  store i32 %v0_1000a7c0, i32* %v3_1000a7c0, align 4
  %v0_1000a7c4 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000a7c4 = add i32 %v0_1000a7c4, 56
  %v2_1000a7c4 = inttoptr i32 %v1_1000a7c4 to i32*
  %v3_1000a7c4 = load i32, i32* %v2_1000a7c4, align 4
  %v1_1000a7c8 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a7c8 = add i32 %v1_1000a7c8, 56
  %v3_1000a7c8 = inttoptr i32 %v2_1000a7c8 to i32*
  store i32 %v3_1000a7c4, i32* %v3_1000a7c8, align 4
  %v0_1000a7cc = load i32, i32* %r28.global-to-local, align 4
  %v1_1000a7cc = add i32 %v0_1000a7cc, 64
  %v2_1000a7cc = inttoptr i32 %v1_1000a7cc to i32*
  %v3_1000a7cc = load i32, i32* %v2_1000a7cc, align 4
  %v1_1000a7d0 = add i32 %v0_1000a7cc, 68
  %v2_1000a7d0 = inttoptr i32 %v1_1000a7d0 to i32*
  %v3_1000a7d0 = load i32, i32* %v2_1000a7d0, align 4
  store i32 %v3_1000a7d0, i32* %r10.global-to-local, align 4
  %v1_1000a7d4 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a7d4 = add i32 %v1_1000a7d4, 64
  %v3_1000a7d4 = inttoptr i32 %v2_1000a7d4 to i32*
  store i32 %v3_1000a7cc, i32* %v3_1000a7d4, align 4
  %v0_1000a7d8 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a7d8 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a7d8 = add i32 %v1_1000a7d8, 68
  %v3_1000a7d8 = inttoptr i32 %v2_1000a7d8 to i32*
  store i32 %v0_1000a7d8, i32* %v3_1000a7d8, align 4
  %v0_1000a7dc = load i32, i32* %r28.global-to-local, align 4
  %v1_1000a7dc = add i32 %v0_1000a7dc, 72
  %v2_1000a7dc = inttoptr i32 %v1_1000a7dc to i32*
  %v3_1000a7dc = load i32, i32* %v2_1000a7dc, align 4
  %v1_1000a7e0 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a7e0 = add i32 %v1_1000a7e0, 72
  %v3_1000a7e0 = inttoptr i32 %v2_1000a7e0 to i32*
  store i32 %v3_1000a7dc, i32* %v3_1000a7e0, align 4
  %v0_1000a7e4 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000a7e4 = add i32 %v0_1000a7e4, 80
  %v2_1000a7e4 = inttoptr i32 %v1_1000a7e4 to i32*
  %v3_1000a7e4 = load i32, i32* %v2_1000a7e4, align 4
  %v1_1000a7e8 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a7e8 = add i32 %v1_1000a7e8, 80
  %v3_1000a7e8 = inttoptr i32 %v2_1000a7e8 to i32*
  store i32 %v3_1000a7e4, i32* %v3_1000a7e8, align 4
  %v0_1000a7ec = load i32, i32* %r28.global-to-local, align 4
  %v1_1000a7ec = add i32 %v0_1000a7ec, 88
  %v2_1000a7ec = inttoptr i32 %v1_1000a7ec to i32*
  %v3_1000a7ec = load i32, i32* %v2_1000a7ec, align 4
  %v1_1000a7f0 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a7f0 = add i32 %v1_1000a7f0, 88
  %v3_1000a7f0 = inttoptr i32 %v2_1000a7f0 to i32*
  store i32 %v3_1000a7ec, i32* %v3_1000a7f0, align 4
  ret i32 %v3_1000a760

; uselistorder directives
  uselistorder i32* %r29.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 15, 16, 18 }
  uselistorder i32* %r28.global-to-local, { 0, 1, 2, 3, 4, 10, 5, 6, 7, 8, 9, 11, 12 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1000a808(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a808:
  %r0.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_1000a80c = load i32, i32* @lr, align 4
  store i32 %v0_1000a80c, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %tmp, i32* @r28, align 4
  store i32 268478512, i32* @lr, align 4
  %v3_1000a82c = call i32 @function_10008c1c(i32 %arg2, i32 0, i32 88)
  %v0_1000a830 = load i32, i32* @r28, align 4
  %v1_1000a830 = inttoptr i32 %v0_1000a830 to i32*
  %v2_1000a830 = load i32, i32* %v1_1000a830, align 4
  store i32 %v2_1000a830, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v1_1000a838 = load i32, i32* @r29, align 4
  %v2_1000a838 = add i32 %v1_1000a838, 4
  %v3_1000a838 = inttoptr i32 %v2_1000a838 to i32*
  store i32 %v2_1000a830, i32* %v3_1000a838, align 4
  %v0_1000a83c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a83c = load i32, i32* @r29, align 4
  %v2_1000a83c = inttoptr i32 %v1_1000a83c to i32*
  store i32 %v0_1000a83c, i32* %v2_1000a83c, align 4
  %v0_1000a840 = load i32, i32* @r28, align 4
  %v1_1000a840 = add i32 %v0_1000a840, 4
  %v2_1000a840 = inttoptr i32 %v1_1000a840 to i32*
  %v3_1000a840 = load i32, i32* %v2_1000a840, align 4
  store i32 %v3_1000a840, i32* %r0.global-to-local, align 4
  %v1_1000a844 = load i32, i32* @r29, align 4
  %v2_1000a844 = add i32 %v1_1000a844, 12
  %v3_1000a844 = inttoptr i32 %v2_1000a844 to i32*
  store i32 %v3_1000a840, i32* %v3_1000a844, align 4
  %v0_1000a848 = load i32, i32* @r28, align 4
  %v1_1000a848 = add i32 %v0_1000a848, 8
  %v2_1000a848 = inttoptr i32 %v1_1000a848 to i32*
  %v3_1000a848 = load i32, i32* %v2_1000a848, align 4
  store i32 %v3_1000a848, i32* %r0.global-to-local, align 4
  %v1_1000a84c = load i32, i32* @r29, align 4
  %v2_1000a84c = add i32 %v1_1000a84c, 16
  %v3_1000a84c = inttoptr i32 %v2_1000a84c to i32*
  store i32 %v3_1000a848, i32* %v3_1000a84c, align 4
  %v0_1000a850 = load i32, i32* @r28, align 4
  %v1_1000a850 = add i32 %v0_1000a850, 12
  %v2_1000a850 = inttoptr i32 %v1_1000a850 to i16*
  %v3_1000a850 = load i16, i16* %v2_1000a850, align 2
  %v4_1000a850 = zext i16 %v3_1000a850 to i32
  store i32 %v4_1000a850, i32* %r0.global-to-local, align 4
  %v1_1000a854 = load i32, i32* @r29, align 4
  %v2_1000a854 = add i32 %v1_1000a854, 20
  %v3_1000a854 = inttoptr i32 %v2_1000a854 to i32*
  store i32 %v4_1000a850, i32* %v3_1000a854, align 4
  %v0_1000a858 = load i32, i32* @r28, align 4
  %v1_1000a858 = add i32 %v0_1000a858, 16
  %v2_1000a858 = inttoptr i32 %v1_1000a858 to i32*
  %v3_1000a858 = load i32, i32* %v2_1000a858, align 4
  store i32 %v3_1000a858, i32* %r0.global-to-local, align 4
  %v1_1000a85c = load i32, i32* @r29, align 4
  %v2_1000a85c = add i32 %v1_1000a85c, 24
  %v3_1000a85c = inttoptr i32 %v2_1000a85c to i32*
  store i32 %v3_1000a858, i32* %v3_1000a85c, align 4
  %v0_1000a860 = load i32, i32* @r28, align 4
  %v1_1000a860 = add i32 %v0_1000a860, 20
  %v2_1000a860 = inttoptr i32 %v1_1000a860 to i32*
  %v3_1000a860 = load i32, i32* %v2_1000a860, align 4
  store i32 %v3_1000a860, i32* %r0.global-to-local, align 4
  %v1_1000a864 = load i32, i32* @r29, align 4
  %v2_1000a864 = add i32 %v1_1000a864, 28
  %v3_1000a864 = inttoptr i32 %v2_1000a864 to i32*
  store i32 %v3_1000a860, i32* %v3_1000a864, align 4
  %v0_1000a868 = load i32, i32* @r28, align 4
  %v1_1000a868 = add i32 %v0_1000a868, 24
  %v2_1000a868 = inttoptr i32 %v1_1000a868 to i32*
  %v3_1000a868 = load i32, i32* %v2_1000a868, align 4
  store i32 %v3_1000a868, i32* %r0.global-to-local, align 4
  %v0_1000a86c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a86c = load i32, i32* @r29, align 4
  %v2_1000a86c = add i32 %v1_1000a86c, 32
  %v3_1000a86c = inttoptr i32 %v2_1000a86c to i32*
  store i32 %v0_1000a86c, i32* %v3_1000a86c, align 4
  %v0_1000a870 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a870 = load i32, i32* @r29, align 4
  %v2_1000a870 = add i32 %v1_1000a870, 36
  %v3_1000a870 = inttoptr i32 %v2_1000a870 to i32*
  store i32 %v0_1000a870, i32* %v3_1000a870, align 4
  %v0_1000a874 = load i32, i32* @r28, align 4
  %v1_1000a874 = add i32 %v0_1000a874, 28
  %v2_1000a874 = inttoptr i32 %v1_1000a874 to i32*
  %v3_1000a874 = load i32, i32* %v2_1000a874, align 4
  store i32 %v3_1000a874, i32* %r0.global-to-local, align 4
  %v1_1000a878 = load i32, i32* @r29, align 4
  %v2_1000a878 = add i32 %v1_1000a878, 44
  %v3_1000a878 = inttoptr i32 %v2_1000a878 to i32*
  store i32 %v3_1000a874, i32* %v3_1000a878, align 4
  %v0_1000a87c = load i32, i32* @r28, align 4
  %v1_1000a87c = add i32 %v0_1000a87c, 32
  %v2_1000a87c = inttoptr i32 %v1_1000a87c to i32*
  %v3_1000a87c = load i32, i32* %v2_1000a87c, align 4
  store i32 %v3_1000a87c, i32* %r0.global-to-local, align 4
  %v1_1000a880 = load i32, i32* @r29, align 4
  %v2_1000a880 = add i32 %v1_1000a880, 48
  %v3_1000a880 = inttoptr i32 %v2_1000a880 to i32*
  store i32 %v3_1000a87c, i32* %v3_1000a880, align 4
  %v0_1000a884 = load i32, i32* @r28, align 4
  %v1_1000a884 = add i32 %v0_1000a884, 36
  %v2_1000a884 = inttoptr i32 %v1_1000a884 to i32*
  %v3_1000a884 = load i32, i32* %v2_1000a884, align 4
  store i32 %v3_1000a884, i32* %r0.global-to-local, align 4
  %v1_1000a888 = load i32, i32* @r29, align 4
  %v2_1000a888 = add i32 %v1_1000a888, 52
  %v3_1000a888 = inttoptr i32 %v2_1000a888 to i32*
  store i32 %v3_1000a884, i32* %v3_1000a888, align 4
  %v0_1000a88c = load i32, i32* @r28, align 4
  %v1_1000a88c = add i32 %v0_1000a88c, 40
  %v2_1000a88c = inttoptr i32 %v1_1000a88c to i32*
  %v3_1000a88c = load i32, i32* %v2_1000a88c, align 4
  store i32 %v3_1000a88c, i32* %r0.global-to-local, align 4
  %v1_1000a890 = load i32, i32* @r29, align 4
  %v2_1000a890 = add i32 %v1_1000a890, 56
  %v3_1000a890 = inttoptr i32 %v2_1000a890 to i32*
  store i32 %v3_1000a88c, i32* %v3_1000a890, align 4
  %v0_1000a894 = load i32, i32* @r28, align 4
  %v1_1000a894 = add i32 %v0_1000a894, 48
  %v2_1000a894 = inttoptr i32 %v1_1000a894 to i32*
  %v3_1000a894 = load i32, i32* %v2_1000a894, align 4
  store i32 %v3_1000a894, i32* %r0.global-to-local, align 4
  %v1_1000a898 = load i32, i32* @r29, align 4
  %v2_1000a898 = add i32 %v1_1000a898, 64
  %v3_1000a898 = inttoptr i32 %v2_1000a898 to i32*
  store i32 %v3_1000a894, i32* %v3_1000a898, align 4
  %v0_1000a89c = load i32, i32* @r28, align 4
  %v1_1000a89c = add i32 %v0_1000a89c, 56
  %v2_1000a89c = inttoptr i32 %v1_1000a89c to i32*
  %v3_1000a89c = load i32, i32* %v2_1000a89c, align 4
  %v1_1000a8a0 = load i32, i32* @r29, align 4
  %v2_1000a8a0 = add i32 %v1_1000a8a0, 72
  %v3_1000a8a0 = inttoptr i32 %v2_1000a8a0 to i32*
  store i32 %v3_1000a89c, i32* %v3_1000a8a0, align 4
  store i32 %v0_1000a80c, i32* %r0.global-to-local, align 4
  ret i32 %v3_1000a82c

; uselistorder directives
  uselistorder i32 72, { 2, 0, 1 }
  uselistorder i32 64, { 19, 13, 14, 2, 21, 15, 0, 1, 12, 16, 17, 18, 3, 4, 5, 6, 7, 8, 20, 9, 10, 11 }
  uselistorder i32 56, { 7, 8, 0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32 40, { 7, 0, 4, 1, 5, 6, 3, 2, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i32 52, { 4, 1, 2, 3, 5, 6, 0, 7 }
  uselistorder i32 48, { 3, 4, 1, 2, 5, 0, 6, 7 }
  uselistorder i32 36, { 2, 3, 0, 1 }
  uselistorder i32 24, { 21, 22, 6, 7, 0, 1, 8, 46, 47, 48, 41, 42, 43, 9, 10, 11, 12, 13, 15, 16, 17, 18, 14, 19, 20, 2, 3, 4, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 45, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 5 }
  uselistorder i32 20, { 26, 27, 17, 18, 19, 20, 28, 29, 30, 31, 21, 5, 0, 1, 22, 23, 2, 24, 25, 32, 33, 6, 34, 35, 36, 37, 38, 39, 40, 41, 7, 42, 43, 44, 45, 46, 47, 8, 48, 49, 50, 51, 52, 53, 54, 9, 55, 56, 57, 58, 59, 60, 61, 62, 10, 63, 64, 65, 66, 67, 11, 68, 69, 70, 71, 12, 72, 13, 73, 74, 3, 14, 75, 76, 77, 4, 15, 78, 79, 80, 81, 82, 83, 16, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96 }
  uselistorder i32 16, { 75, 76, 62, 63, 77, 78, 79, 80, 81, 20, 74, 64, 159, 160, 82, 83, 24, 23, 53, 54, 55, 65, 56, 57, 66, 67, 115, 112, 68, 69, 58, 25, 71, 72, 18, 0, 19, 1, 2, 73, 3, 26, 70, 59, 27, 143, 144, 145, 146, 147, 84, 85, 29, 86, 87, 4, 88, 89, 90, 28, 91, 92, 31, 93, 94, 95, 96, 97, 30, 35, 98, 99, 100, 5, 101, 102, 6, 7, 21, 104, 60, 103, 32, 34, 33, 39, 105, 106, 107, 8, 108, 109, 9, 10, 22, 111, 61, 110, 36, 38, 37, 11, 40, 113, 12, 13, 114, 116, 117, 41, 118, 119, 120, 121, 122, 14, 123, 42, 124, 125, 126, 15, 127, 130, 131, 128, 129, 132, 133, 16, 134, 43, 135, 136, 137, 17, 138, 141, 142, 139, 140, 148, 149, 150, 151, 44, 152, 153, 154, 48, 47, 45, 155, 46, 156, 52, 51, 49, 157, 50, 158 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1000a8b8() local_unnamed_addr {
dec_label_pc_1000a8b8:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_1000a8b8 = load i32, i32* @r5, align 4
  %v1_1000a8b8 = call i32 @__asm_rlwinm.(i32 %v0_1000a8b8, i32 29, i32 3, i32 31)
  store i32 %v1_1000a8b8, i32* %r9.global-to-local, align 4
  %v4_1000a8b8 = icmp eq i32 %v1_1000a8b8, 0
  %v0_1000a8bc = load i32, i32* @r4, align 4
  %v1_1000a8bc = add i32 %v0_1000a8bc, -4
  store i32 %v1_1000a8bc, i32* %r4.global-to-local, align 4
  %v0_1000a8c0 = load i32, i32* @r3, align 4
  %v1_1000a8c0 = add i32 %v0_1000a8c0, -4
  store i32 %v1_1000a8c0, i32* @r11, align 4
  br i1 %v4_1000a8b8, label %dec_label_pc_1000a8e8, label %dec_label_pc_1000a8c8

dec_label_pc_1000a8c8:                            ; preds = %dec_label_pc_1000a8b8
  %v1_1000a8c8 = urem i32 %v1_1000a8c0, 4
  %v3_1000a8c8 = icmp eq i32 %v1_1000a8c8, 0
  br i1 %v3_1000a8c8, label %dec_label_pc_1000a8d0, label %dec_label_pc_1000a924

dec_label_pc_1000a8d0:                            ; preds = %dec_label_pc_1000a944.dec_label_pc_1000a8d0_crit_edge, %dec_label_pc_1000a8c8
  %v1_1000a8dc.pre = phi i32 [ %v1_1000a8c0, %dec_label_pc_1000a8c8 ], [ %v1_1000a8dc.pre.pre, %dec_label_pc_1000a944.dec_label_pc_1000a8d0_crit_edge ]
  %v0_1000a8d0 = phi i32 [ %v1_1000a8b8, %dec_label_pc_1000a8c8 ], [ %v1_1000a944, %dec_label_pc_1000a944.dec_label_pc_1000a8d0_crit_edge ]
  %.0 = phi i32 [ undef, %dec_label_pc_1000a8c8 ], [ %v2_1000a92c, %dec_label_pc_1000a944.dec_label_pc_1000a8d0_crit_edge ]
  store i32 %v0_1000a8d0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000a8d4

dec_label_pc_1000a8d4:                            ; preds = %dec_label_pc_1000a8d4, %dec_label_pc_1000a8d0
  %v1_1000a8dc = phi i32 [ %v2_1000a8e0, %dec_label_pc_1000a8d4 ], [ %v1_1000a8dc.pre, %dec_label_pc_1000a8d0 ]
  %v0_1000a8d4 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000a8d4 = add i32 %v0_1000a8d4, 4
  %v2_1000a8d4 = inttoptr i32 %v1_1000a8d4 to i32*
  %v3_1000a8d4 = load i32, i32* %v2_1000a8d4, align 4
  %v1_1000a8d8 = add i32 %v0_1000a8d4, 8
  %v2_1000a8d8 = inttoptr i32 %v1_1000a8d8 to i32*
  %v3_1000a8d8 = load i32, i32* %v2_1000a8d8, align 4
  store i32 %v3_1000a8d8, i32* %r9.global-to-local, align 4
  store i32 %v1_1000a8d8, i32* %r4.global-to-local, align 4
  %v2_1000a8dc = add i32 %v1_1000a8dc, 4
  %v3_1000a8dc = inttoptr i32 %v2_1000a8dc to i32*
  store i32 %v3_1000a8d4, i32* %v3_1000a8dc, align 4
  %v0_1000a8e0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a8e0 = load i32, i32* @r11, align 4
  %v2_1000a8e0 = add i32 %v1_1000a8e0, 8
  %v3_1000a8e0 = inttoptr i32 %v2_1000a8e0 to i32*
  store i32 %v0_1000a8e0, i32* %v3_1000a8e0, align 4
  store i32 %v2_1000a8e0, i32* @r11, align 4
  %v0_1000a8e4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a8e4 = add i32 %v0_1000a8e4, -1
  store i32 %v1_1000a8e4, i32* %ctr.global-to-local, align 4
  %v2_1000a8e4 = icmp eq i32 %v1_1000a8e4, 0
  br i1 %v2_1000a8e4, label %dec_label_pc_1000a8e8, label %dec_label_pc_1000a8d4

dec_label_pc_1000a8e8:                            ; preds = %dec_label_pc_1000a8d4, %dec_label_pc_1000a944, %dec_label_pc_1000a8b8
  %.1 = phi i32 [ undef, %dec_label_pc_1000a8b8 ], [ %v2_1000a92c, %dec_label_pc_1000a944 ], [ %.0, %dec_label_pc_1000a8d4 ]
  %v1_1000a8e8 = urem i32 %.1, 8
  store i32 %v1_1000a8e8, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_1000a8e8, 4
  br i1 %tmp, label %dec_label_pc_1000a900, label %dec_label_pc_1000a8f4

dec_label_pc_1000a8f4:                            ; preds = %dec_label_pc_1000a8e8
  %v0_1000a8f4 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000a8f4 = add i32 %v0_1000a8f4, 4
  %v2_1000a8f4 = inttoptr i32 %v1_1000a8f4 to i32*
  %v3_1000a8f4 = load i32, i32* %v2_1000a8f4, align 4
  store i32 %v1_1000a8f4, i32* %r4.global-to-local, align 4
  %v1_1000a8f8 = add nsw i32 %v1_1000a8e8, -4
  store i32 %v1_1000a8f8, i32* @r5, align 4
  %v1_1000a8fc = load i32, i32* @r11, align 4
  %v2_1000a8fc = add i32 %v1_1000a8fc, 4
  %v3_1000a8fc = inttoptr i32 %v2_1000a8fc to i32*
  store i32 %v3_1000a8f4, i32* %v3_1000a8fc, align 4
  store i32 %v2_1000a8fc, i32* @r11, align 4
  %v0_1000a900.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1000a900

dec_label_pc_1000a900:                            ; preds = %dec_label_pc_1000a8e8, %dec_label_pc_1000a8f4
  %v0_1000a900 = phi i32 [ %v1_1000a8e8, %dec_label_pc_1000a8e8 ], [ %v0_1000a900.pre, %dec_label_pc_1000a8f4 ]
  %v3_1000a900 = icmp eq i32 %v0_1000a900, 0
  %v0_1000a904 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000a900, i32 %v0_1000a904)
  %v0_1000a908 = load i32, i32* @r5, align 4
  store i32 %v0_1000a908, i32* %ctr.global-to-local, align 4
  %v0_1000a90c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000a90c = add i32 %v0_1000a90c, 3
  store i32 %v1_1000a90c, i32* %r4.global-to-local, align 4
  %v0_1000a910 = load i32, i32* @r11, align 4
  %v1_1000a910 = add i32 %v0_1000a910, 3
  store i32 %v1_1000a910, i32* %r9.global-to-local, align 4
  %v1_1000a9149 = add i32 %v0_1000a90c, 4
  %v2_1000a91410 = inttoptr i32 %v1_1000a9149 to i8*
  %v3_1000a91411 = load i8, i8* %v2_1000a91410, align 1
  store i32 %v1_1000a9149, i32* %r4.global-to-local, align 4
  %v3_1000a91813 = add i32 %v0_1000a910, 4
  %v4_1000a91814 = inttoptr i32 %v3_1000a91813 to i8*
  store i8 %v3_1000a91411, i8* %v4_1000a91814, align 1
  store i32 %v3_1000a91813, i32* %r9.global-to-local, align 4
  %v0_1000a91c15 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a91c16 = add i32 %v0_1000a91c15, -1
  store i32 %v1_1000a91c16, i32* %ctr.global-to-local, align 4
  %v2_1000a91c17 = icmp eq i32 %v1_1000a91c16, 0
  br i1 %v2_1000a91c17, label %dec_label_pc_1000a950, label %dec_label_pc_1000a914.dec_label_pc_1000a914_crit_edge

dec_label_pc_1000a914.dec_label_pc_1000a914_crit_edge: ; preds = %dec_label_pc_1000a900, %dec_label_pc_1000a914.dec_label_pc_1000a914_crit_edge
  %v3_1000a91818 = phi i32 [ %v3_1000a918, %dec_label_pc_1000a914.dec_label_pc_1000a914_crit_edge ], [ %v3_1000a91813, %dec_label_pc_1000a900 ]
  %v0_1000a914.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1000a914 = add i32 %v0_1000a914.pre, 1
  %v2_1000a914 = inttoptr i32 %v1_1000a914 to i8*
  %v3_1000a914 = load i8, i8* %v2_1000a914, align 1
  store i32 %v1_1000a914, i32* %r4.global-to-local, align 4
  %v3_1000a918 = add i32 %v3_1000a91818, 1
  %v4_1000a918 = inttoptr i32 %v3_1000a918 to i8*
  store i8 %v3_1000a914, i8* %v4_1000a918, align 1
  store i32 %v3_1000a918, i32* %r9.global-to-local, align 4
  %v0_1000a91c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a91c = add i32 %v0_1000a91c, -1
  store i32 %v1_1000a91c, i32* %ctr.global-to-local, align 4
  %v2_1000a91c = icmp eq i32 %v1_1000a91c, 0
  br i1 %v2_1000a91c, label %dec_label_pc_1000a950, label %dec_label_pc_1000a914.dec_label_pc_1000a914_crit_edge

dec_label_pc_1000a924:                            ; preds = %dec_label_pc_1000a8c8
  %v1_1000a924 = sub nsw i32 4, %v1_1000a8c8
  store i32 %v1_1000a924, i32* %ctr.global-to-local, align 4
  %v1_1000a92c = load i32, i32* @r5, align 4
  %v2_1000a92c = sub i32 %v1_1000a92c, %v1_1000a924
  br label %dec_label_pc_1000a930

dec_label_pc_1000a930:                            ; preds = %dec_label_pc_1000a930.dec_label_pc_1000a930_crit_edge, %dec_label_pc_1000a924
  %v2_1000a938 = phi i32 [ %v1_1000a93c, %dec_label_pc_1000a930.dec_label_pc_1000a930_crit_edge ], [ %v1_1000a8c0, %dec_label_pc_1000a924 ]
  %v0_1000a930 = phi i32 [ %v0_1000a930.pre, %dec_label_pc_1000a930.dec_label_pc_1000a930_crit_edge ], [ %v1_1000a8bc, %dec_label_pc_1000a924 ]
  %v1_1000a930 = add i32 %v0_1000a930, 4
  %v2_1000a930 = inttoptr i32 %v1_1000a930 to i8*
  %v3_1000a930 = load i8, i8* %v2_1000a930, align 1
  %v1_1000a934 = add i32 %v0_1000a930, 1
  store i32 %v1_1000a934, i32* %r4.global-to-local, align 4
  %v3_1000a938 = add i32 %v2_1000a938, 4
  %v4_1000a938 = inttoptr i32 %v3_1000a938 to i8*
  store i8 %v3_1000a930, i8* %v4_1000a938, align 1
  %v0_1000a93c = load i32, i32* @r11, align 4
  %v1_1000a93c = add i32 %v0_1000a93c, 1
  store i32 %v1_1000a93c, i32* @r11, align 4
  %v0_1000a940 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a940 = add i32 %v0_1000a940, -1
  store i32 %v1_1000a940, i32* %ctr.global-to-local, align 4
  %v2_1000a940 = icmp eq i32 %v1_1000a940, 0
  br i1 %v2_1000a940, label %dec_label_pc_1000a944, label %dec_label_pc_1000a930.dec_label_pc_1000a930_crit_edge

dec_label_pc_1000a930.dec_label_pc_1000a930_crit_edge: ; preds = %dec_label_pc_1000a930
  %v0_1000a930.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000a930

dec_label_pc_1000a944:                            ; preds = %dec_label_pc_1000a930
  %v1_1000a944 = call i32 @__asm_rlwinm.(i32 %v2_1000a92c, i32 29, i32 3, i32 31)
  store i32 %v1_1000a944, i32* %r9.global-to-local, align 4
  %v4_1000a944 = icmp eq i32 %v1_1000a944, 0
  br i1 %v4_1000a944, label %dec_label_pc_1000a8e8, label %dec_label_pc_1000a944.dec_label_pc_1000a8d0_crit_edge

dec_label_pc_1000a944.dec_label_pc_1000a8d0_crit_edge: ; preds = %dec_label_pc_1000a944
  %v1_1000a8dc.pre.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_1000a8d0

dec_label_pc_1000a950:                            ; preds = %dec_label_pc_1000a914.dec_label_pc_1000a914_crit_edge, %dec_label_pc_1000a900
  %v0_1000a950 = load i32, i32* @r3, align 4
  ret i32 %v0_1000a950

; uselistorder directives
  uselistorder i32 %v1_1000a944, { 1, 2, 0 }
  uselistorder i32 %v1_1000a940, { 1, 0 }
  uselistorder i32 %v1_1000a93c, { 1, 0 }
  uselistorder i32 %v0_1000a930, { 1, 0 }
  uselistorder i32 %v2_1000a92c, { 2, 1, 0 }
  uselistorder i32 %v1_1000a91c, { 1, 0 }
  uselistorder i32 %v3_1000a918, { 1, 2, 0 }
  uselistorder i32 %v1_1000a8e8, { 3, 2, 1, 0 }
  uselistorder i32 %v1_1000a8e4, { 1, 0 }
  uselistorder i32 %v2_1000a8e0, { 1, 2, 0 }
  uselistorder i32 %v1_1000a8c8, { 1, 0 }
  uselistorder i32 %v1_1000a8c0, { 2, 1, 0, 3 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 4, 3, 0, 5, 8, 6, 10, 7, 9, 11 }
  uselistorder i32* %ctr.global-to-local, { 1, 2, 3, 5, 4, 0, 6, 7, 8, 9, 10 }
  uselistorder i32 undef, { 1, 0, 2, 3 }
  uselistorder i32* @r11, { 0, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm., { 5, 6, 0, 7, 8, 1, 2, 3, 4 }
  uselistorder i32 29, { 30, 31, 26, 28, 27, 29, 3, 4, 34, 35, 32, 33, 36, 37, 24, 25, 0, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 18, 19, 22, 23, 2 }
  uselistorder label %dec_label_pc_1000a914.dec_label_pc_1000a914_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000a900, { 1, 0 }
  uselistorder label %dec_label_pc_1000a8e8, { 1, 0, 2 }
}

define i32 @function_1000a954(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_1000a954:
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 268478832, i32* @lr, align 4
  %v0_1000a96c = call i32 @function_1000a8b8()
  %v0_1000a974 = load i32, i32* @r28, align 4
  %v1_1000a974 = load i32, i32* @r29, align 4
  %v2_1000a974 = add i32 %v1_1000a974, %v0_1000a974
  ret i32 %v2_1000a974

; uselistorder directives
  uselistorder i32* @r28, { 11, 12, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 1, 68, 69, 70, 71, 72, 73, 290, 291, 292, 293, 294, 2, 43, 44, 45, 10, 46, 254, 255, 256, 257, 258, 259, 260, 261, 262, 276, 277, 278, 279, 13, 14, 15, 16, 17, 74, 75, 18, 19, 20, 21, 22, 29, 30, 31, 32, 23, 3, 24, 25, 26, 27, 28, 33, 0, 34, 35, 36, 37, 38, 39, 40, 41, 42, 47, 48, 49, 50, 51, 52, 53, 76, 77, 78, 79, 80, 81, 82, 4, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 5, 220, 223, 224, 221, 222, 225, 226, 6, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 7, 237, 240, 241, 238, 239, 242, 243, 8, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 282, 280, 281, 283, 284, 9, 285, 286, 287, 288, 289 }
}

define i32 @function_1000a988(i8* %arg1) local_unnamed_addr {
dec_label_pc_1000a988:
  %r5.global-to-local = alloca i32, align 4
  %v3_1000a988 = icmp eq i8* %arg1, null
  br i1 %v3_1000a988, label %dec_label_pc_1000aa40, label %dec_label_pc_1000a990

dec_label_pc_1000a990:                            ; preds = %dec_label_pc_1000a988
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_1000a9a4.pre = load i32, i32* bitcast (i32** @global_var_1001b4f4.297 to i32*), align 4
  br label %dec_label_pc_1000a9a0

dec_label_pc_1000a9a0:                            ; preds = %dec_label_pc_1000a990, %dec_label_pc_1000aa18
  %v0_1000aa18 = phi i32 [ 0, %dec_label_pc_1000a990 ], [ %v2_1000aa20, %dec_label_pc_1000aa18 ]
  %v0_1000aa1c = phi i32 [ 1, %dec_label_pc_1000a990 ], [ %v1_1000aa1c, %dec_label_pc_1000aa18 ]
  %v0_1000a9a0 = phi i32 [ %tmp, %dec_label_pc_1000a990 ], [ %v0_1000a9a03, %dec_label_pc_1000aa18 ]
  %v1_1000a9a0 = inttoptr i32 %v0_1000a9a0 to i8*
  %v2_1000a9a0 = load i8, i8* %v1_1000a9a0, align 1
  %v3_1000a9a0 = zext i8 %v2_1000a9a0 to i32
  %v1_1000a9a8 = mul nuw nsw i32 %v3_1000a9a0, 2
  %v2_1000a9ac = add i32 %v1_1000a9a8, %v3_1000a9a4.pre
  %v3_1000a9ac = inttoptr i32 %v2_1000a9ac to i16*
  %v4_1000a9ac = load i16, i16* %v3_1000a9ac, align 2
  %v1_1000a9b0 = and i16 %v4_1000a9ac, 8
  %v3_1000a9b0 = icmp eq i16 %v1_1000a9b0, 0
  br i1 %v3_1000a9b0, label %dec_label_pc_1000aa40, label %dec_label_pc_1000a9b8

dec_label_pc_1000a9b8:                            ; preds = %dec_label_pc_1000a9a0
  br label %dec_label_pc_1000a9d0

dec_label_pc_1000a9c0:                            ; preds = %dec_label_pc_1000a9d0
  %v1_1000a9d4 = mul i32 %v1_1000aa20, 10
  %v2_1000a9dc = add i32 %v3_1000a9d0, %v1_1000a9d4
  %v1_1000a9c0 = add i32 %v2_1000a9dc, -48
  %v1_1000a9c4 = add i32 %v0_1000aa08, 1
  %v2_1000a9c8 = icmp sgt i32 %v1_1000a9c0, 255
  br i1 %v2_1000a9c8, label %dec_label_pc_1000aa40, label %dec_label_pc_1000a9d0

dec_label_pc_1000a9d0:                            ; preds = %dec_label_pc_1000a9c0, %dec_label_pc_1000a9b8
  %v1_1000aa20 = phi i32 [ %v1_1000a9c0, %dec_label_pc_1000a9c0 ], [ 0, %dec_label_pc_1000a9b8 ]
  %v0_1000aa08 = phi i32 [ %v1_1000a9c4, %dec_label_pc_1000a9c0 ], [ %v0_1000a9a0, %dec_label_pc_1000a9b8 ]
  %v1_1000a9d0 = inttoptr i32 %v0_1000aa08 to i8*
  %v2_1000a9d0 = load i8, i8* %v1_1000a9d0, align 1
  %v3_1000a9d0 = zext i8 %v2_1000a9d0 to i32
  %v1_1000a9d8 = mul nuw nsw i32 %v3_1000a9d0, 2
  %v2_1000a9e0 = add i32 %v1_1000a9d8, %v3_1000a9a4.pre
  %v3_1000a9e0 = inttoptr i32 %v2_1000a9e0 to i16*
  %v4_1000a9e0 = load i16, i16* %v3_1000a9e0, align 2
  %v5_1000a9e0 = zext i16 %v4_1000a9e0 to i32
  %v1_1000a9e4 = and i32 %v5_1000a9e0, 8
  %v3_1000a9e4 = icmp eq i32 %v1_1000a9e4, 0
  br i1 %v3_1000a9e4, label %dec_label_pc_1000a9ec, label %dec_label_pc_1000a9c0

dec_label_pc_1000a9ec:                            ; preds = %dec_label_pc_1000a9d0
  %v2_1000a9ec = icmp sgt i32 %v0_1000aa1c, 3
  br i1 %v2_1000a9ec, label %dec_label_pc_1000aa04, label %dec_label_pc_1000a9f4

dec_label_pc_1000a9f4:                            ; preds = %dec_label_pc_1000a9ec
  %v3_1000a9f4 = icmp eq i8 %v2_1000a9d0, 46
  br i1 %v3_1000a9f4, label %dec_label_pc_1000a9fc, label %dec_label_pc_1000aa40

dec_label_pc_1000a9fc:                            ; preds = %dec_label_pc_1000a9f4
  %v1_1000a9fc = add i32 %v0_1000aa08, 1
  br label %dec_label_pc_1000aa18

dec_label_pc_1000aa04:                            ; preds = %dec_label_pc_1000a9ec
  %v3_1000aa04 = icmp eq i8 %v2_1000a9d0, 0
  %v1_1000aa08 = add i32 %v0_1000aa08, 1
  br i1 %v3_1000aa04, label %dec_label_pc_1000aa18, label %dec_label_pc_1000aa10

dec_label_pc_1000aa10:                            ; preds = %dec_label_pc_1000aa04
  %v1_1000aa10 = and i32 %v5_1000a9e0, 32
  %v3_1000aa10 = icmp eq i32 %v1_1000aa10, 0
  br i1 %v3_1000aa10, label %dec_label_pc_1000aa40, label %dec_label_pc_1000aa18

dec_label_pc_1000aa18:                            ; preds = %dec_label_pc_1000aa10, %dec_label_pc_1000aa04, %dec_label_pc_1000a9fc
  %v0_1000a9a03 = phi i32 [ %v1_1000aa08, %dec_label_pc_1000aa10 ], [ %v1_1000aa08, %dec_label_pc_1000aa04 ], [ %v1_1000a9fc, %dec_label_pc_1000a9fc ]
  %v1_1000aa18 = mul i32 %v0_1000aa18, 256
  %v1_1000aa1c = add nuw nsw i32 %v0_1000aa1c, 1
  %v2_1000aa20 = or i32 %v1_1000aa20, %v1_1000aa18
  store i32 %v2_1000aa20, i32* %r5.global-to-local, align 4
  %tmp10 = icmp slt i32 %v1_1000aa1c, 5
  br i1 %tmp10, label %dec_label_pc_1000a9a0, label %dec_label_pc_1000aa2c

dec_label_pc_1000aa2c:                            ; preds = %dec_label_pc_1000aa18
  %v0_1000aa2c = load i32, i32* @r4, align 4
  %v3_1000aa2c = icmp eq i32 %v0_1000aa2c, 0
  %v0_1000aa34 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000aa2c, i32 %v0_1000aa34)
  %v0_1000aa38 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000aa38 = load i32, i32* @r4, align 4
  %v2_1000aa38 = inttoptr i32 %v1_1000aa38 to i32*
  store i32 %v0_1000aa38, i32* %v2_1000aa38, align 4
  ret i32 1

dec_label_pc_1000aa40:                            ; preds = %dec_label_pc_1000a9f4, %dec_label_pc_1000aa10, %dec_label_pc_1000a9a0, %dec_label_pc_1000a9c0, %dec_label_pc_1000a988
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_1000aa20, { 1, 0 }
  uselistorder i32 %v1_1000aa1c, { 1, 0 }
  uselistorder i32 %v0_1000aa08, { 0, 1, 3, 2 }
  uselistorder i32 5, { 20, 21, 22, 34, 23, 24, 35, 36, 2, 1, 0, 37, 3, 4, 38, 25, 26, 27, 39, 5, 7, 40, 28, 41, 6, 29, 42, 8, 30, 43, 9, 31, 44, 10, 12, 45, 11, 46, 32, 47, 14, 48, 13, 33, 49, 16, 50, 15, 19, 51, 18, 52, 17, 53, 54, 55, 56, 57 }
  uselistorder i8 0, { 3, 7, 0, 8, 9, 5, 10, 11, 12, 13, 14, 15, 1, 16, 17, 18, 19, 20, 6, 21, 22, 23, 24, 25, 26, 27, 2, 28, 29, 30, 31, 4, 32, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder i8 46, { 1, 2, 0 }
  uselistorder i32 8, { 119, 3, 133, 134, 56, 38, 39, 57, 58, 59, 60, 61, 62, 137, 138, 11, 135, 136, 12, 123, 122, 120, 121, 104, 105, 106, 124, 125, 126, 127, 128, 129, 4, 40, 41, 42, 5, 139, 6, 63, 64, 65, 66, 67, 68, 28, 29, 43, 30, 31, 44, 32, 33, 45, 46, 7, 8, 9, 47, 48, 50, 51, 34, 52, 15, 53, 55, 54, 49, 89, 69, 70, 71, 72, 73, 74, 75, 35, 76, 77, 78, 79, 80, 81, 82, 83, 36, 84, 85, 86, 87, 88, 90, 16, 91, 92, 93, 94, 95, 13, 96, 97, 98, 99, 14, 100, 101, 102, 103, 17, 107, 18, 108, 19, 109, 20, 110, 21, 111, 22, 112, 23, 113, 114, 24, 115, 25, 116, 26, 117, 27, 118, 0, 1, 10, 130, 131, 37, 132, 2 }
  uselistorder i32 255, { 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 -48, { 2, 0, 1 }
  uselistorder i32 10, { 68, 30, 9, 29, 2, 3, 6, 5, 0, 10, 17, 18, 19, 20, 21, 11, 22, 23, 24, 12, 13, 25, 26, 27, 4, 28, 14, 1, 15, 7, 31, 32, 33, 34, 35, 8, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 16, 67 }
  uselistorder i16 0, { 0, 1, 2, 4, 5, 6, 8, 7, 3, 9, 10, 11, 12 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000aa40, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_1000a9a0, { 1, 0 }
}

define i32 @function_1000aa48(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000aa48:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-172 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_1000aa4c = load i32, i32* @lr, align 4
  store i32 %v0_1000aa4c, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_1000aa58 = icmp eq i32* %arg2, null
  store i32 %arg3, i32* @r30, align 4
  store i32 %arg1, i32* @r29, align 4
  %v1_1000aa68 = add i32 %tmp, 4
  store i32 %v1_1000aa68, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  %v2_1000aa70 = ptrtoint i32* %stack_var_-300 to i32
  store i32 %v2_1000aa70, i32* @r3, align 4
  br i1 %v3_1000aa58, label %dec_label_pc_1000aa98, label %dec_label_pc_1000aa78

dec_label_pc_1000aa78:                            ; preds = %dec_label_pc_1000aa48
  %v2_1000aa78 = load i32, i32* %arg2, align 4
  store i32 %v2_1000aa78, i32* %r0.global-to-local, align 4
  store i32 268479108, i32* @lr, align 4
  %v0_1000aa80 = call i32 @function_1000a8b8()
  %v0_1000aa84 = load i32, i32* @r31, align 4
  %v1_1000aa84 = add i32 %v0_1000aa84, 132
  %v2_1000aa84 = inttoptr i32 %v1_1000aa84 to i32*
  %v3_1000aa84 = load i32, i32* %v2_1000aa84, align 4
  store i32 %v3_1000aa84, i32* %r0.global-to-local, align 4
  %v1_1000aa90 = add i32 %v0_1000aa84, 136
  %v2_1000aa90 = inttoptr i32 %v1_1000aa90 to i32*
  %v3_1000aa90 = load i32, i32* %v2_1000aa90, align 4
  store i32 %v3_1000aa90, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000aa98

dec_label_pc_1000aa98:                            ; preds = %dec_label_pc_1000aa48, %dec_label_pc_1000aa78
  store i32 268479160, i32* @lr, align 4
  %v0_1000aab4 = call i32 @function_1000acac()
  %v0_1000aab8 = load i32, i32* @r30, align 4
  %v3_1000aab8 = icmp eq i32 %v0_1000aab8, 0
  store i32 %v0_1000aab4, i32* @r31, align 4
  br i1 %v3_1000aab8, label %dec_label_pc_1000aaf4, label %dec_label_pc_1000aac8

dec_label_pc_1000aac8:                            ; preds = %dec_label_pc_1000aa98
  %v1_1000aac0 = icmp slt i32 %v0_1000aab4, 0
  %v1_1000aac8 = add i32 %v0_1000aab8, 4
  store i32 %v1_1000aac8, i32* @r3, align 4
  %v2_1000aacc = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_1000aacc, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  br i1 %v1_1000aac0, label %dec_label_pc_1000aaf4, label %dec_label_pc_1000aad8

dec_label_pc_1000aad8:                            ; preds = %dec_label_pc_1000aac8
  %v3_1000aad8 = load i32, i32* %stack_var_-172, align 4
  store i32 %v3_1000aad8, i32* %r0.global-to-local, align 4
  %v2_1000aadc = inttoptr i32 %v0_1000aab8 to i32*
  store i32 %v3_1000aad8, i32* %v2_1000aadc, align 4
  store i32 268479204, i32* @lr, align 4
  %v0_1000aae0 = call i32 @function_1000a8b8()
  %v1_1000aaec = load i32, i32* @r30, align 4
  %v2_1000aaec = add i32 %v1_1000aaec, 136
  %v3_1000aaec = inttoptr i32 %v2_1000aaec to i32*
  %v0_1000aaf0 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000aaf0 = load i32, i32* @r30, align 4
  %v2_1000aaf0 = add i32 %v1_1000aaf0, 132
  %v3_1000aaf0 = inttoptr i32 %v2_1000aaf0 to i32*
  store i32 %v0_1000aaf0, i32* %v3_1000aaf0, align 4
  %v0_1000aaf8.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000aaf4

dec_label_pc_1000aaf4:                            ; preds = %dec_label_pc_1000aac8, %dec_label_pc_1000aa98, %dec_label_pc_1000aad8
  %v0_1000aaf8 = phi i32 [ %v0_1000aab4, %dec_label_pc_1000aac8 ], [ %v0_1000aab4, %dec_label_pc_1000aa98 ], [ %v0_1000aaf8.pre, %dec_label_pc_1000aad8 ]
  store i32 %v0_1000aa4c, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000aaf8

; uselistorder directives
  uselistorder i32 %v0_1000aab4, { 0, 1, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 4, 5, 6, 2 }
  uselistorder i32 ()* @function_1000a8b8, { 2, 1, 6, 4, 0, 3, 5, 7 }
  uselistorder i32* @r5, { 21, 22, 1, 23, 24, 0, 25, 26, 27, 10, 11, 12, 30, 20, 7, 8, 31, 32, 33, 34, 3, 13, 6, 28, 29, 2, 4, 5, 14, 18, 19, 16, 17, 9, 15 }
  uselistorder i32 128, { 7, 8, 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32* @r30, { 144, 145, 146, 147, 0, 126, 1, 30, 31, 32, 148, 151, 149, 150, 127, 128, 129, 121, 122, 123, 124, 125, 130, 131, 135, 132, 133, 134, 7, 8, 9, 10, 11, 12, 13, 2, 14, 33, 3, 15, 22, 16, 17, 18, 4, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 37, 38, 39, 40, 5, 41, 42, 6, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 137, 138, 136, 139, 140, 141, 142, 143 }
  uselistorder i32* null, { 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 1, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* @r31, { 1, 276, 277, 278, 253, 2, 254, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 285, 286, 279, 7, 280, 281, 282, 283, 284, 61, 62, 255, 256, 257, 258, 259, 260, 245, 246, 247, 248, 249, 250, 251, 252, 261, 262, 263, 267, 264, 265, 266, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 81, 3, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 18, 19, 20, 21, 96, 97, 98, 99, 100, 22, 23, 24, 25, 26, 27, 37, 38, 39, 40, 41, 42, 43, 28, 29, 30, 31, 32, 33, 34, 35, 36, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 4, 63, 64, 65, 66, 67, 68, 69, 70, 101, 102, 103, 104, 105, 106, 107, 108, 109, 0, 5, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 6, 268, 269, 270, 271, 272, 273, 274, 275 }
  uselistorder label %dec_label_pc_1000aaf4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000aa98, { 1, 0 }
}

define i32 @function_1000ab0c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000ab40.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v0_1000ab24 = call i32 @function_10009e64()
  %v2_1000ab2c = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_1000ab2c, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 31, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v3_1000ab4433 = add i32 %v2_1000ab2c, 124
  %v4_1000ab4434 = inttoptr i32 %v3_1000ab4433 to i32*
  store i32 0, i32* %v4_1000ab4434, align 4
  %v0_1000ab4835 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ab4836 = add i32 %v0_1000ab4835, -1
  store i32 %v1_1000ab4836, i32* %r9.global-to-local, align 4
  %v0_1000ab4c37 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ab4c38 = add i32 %v0_1000ab4c37, -1
  store i32 %v1_1000ab4c38, i32* %ctr.global-to-local, align 4
  %v2_1000ab4c39 = icmp eq i32 %v1_1000ab4c38, 0
  br i1 %v2_1000ab4c39, label %dec_label_pc_1000ab50, label %dec_label_pc_1000ab40.dec_label_pc_1000ab40_crit_edge

dec_label_pc_1000ab40.dec_label_pc_1000ab40_crit_edge: ; preds = %dec_label_pc_1000ab40.lr.ph, %dec_label_pc_1000ab40.dec_label_pc_1000ab40_crit_edge
  %v1_1000ab4840 = phi i32 [ %v1_1000ab48, %dec_label_pc_1000ab40.dec_label_pc_1000ab40_crit_edge ], [ %v1_1000ab4836, %dec_label_pc_1000ab40.lr.ph ]
  %v0_1000ab44.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ab44.pre = load i32, i32* %r29.global-to-local, align 4
  %v1_1000ab40 = mul i32 %v1_1000ab4840, 4
  %v3_1000ab44 = add i32 %v1_1000ab40, %v1_1000ab44.pre
  %v4_1000ab44 = inttoptr i32 %v3_1000ab44 to i32*
  store i32 %v0_1000ab44.pre, i32* %v4_1000ab44, align 4
  %v0_1000ab48 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ab48 = add i32 %v0_1000ab48, -1
  store i32 %v1_1000ab48, i32* %r9.global-to-local, align 4
  %v0_1000ab4c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ab4c = add i32 %v0_1000ab4c, -1
  store i32 %v1_1000ab4c, i32* %ctr.global-to-local, align 4
  %v2_1000ab4c = icmp eq i32 %v1_1000ab4c, 0
  br i1 %v2_1000ab4c, label %dec_label_pc_1000ab50, label %dec_label_pc_1000ab40.dec_label_pc_1000ab40_crit_edge

dec_label_pc_1000ab50:                            ; preds = %dec_label_pc_1000ab40.dec_label_pc_1000ab40_crit_edge, %dec_label_pc_1000ab40.lr.ph
  store i32 %v2_1000ab2c, i32* @r3, align 4
  store i32 6, i32* @r4, align 4
  %v0_1000ab58 = call i32 @function_100092b8()
  %v3_1000ab5c = icmp eq i32 %v0_1000ab58, 0
  br i1 %v3_1000ab5c, label %dec_label_pc_1000ab64, label %dec_label_pc_1000ab74

dec_label_pc_1000ab64:                            ; preds = %dec_label_pc_1000ab50
  store i32 268479348, i32* @lr, align 4
  %v3_1000ab70 = call i32 @function_10008770(i32 1, i32 %v2_1000ab2c, i32 0)
  br label %dec_label_pc_1000ab74

dec_label_pc_1000ab74:                            ; preds = %dec_label_pc_1000ab50, %dec_label_pc_1000ab64
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000ab78 = load i32, i32* @global_var_1001b55c.318, align 4
  %v3_1000ab7c = icmp eq i32 %v3_1000ab78, 0
  br i1 %v3_1000ab7c, label %dec_label_pc_1000ab84, label %dec_label_pc_1000abac

dec_label_pc_1000ab84:                            ; preds = %dec_label_pc_1000ab74
  store i32 1, i32* @global_var_1001b55c.318, align 4
  br label %dec_label_pc_1000ab8c

dec_label_pc_1000ab8c:                            ; preds = %dec_label_pc_1000ac08, %dec_label_pc_1000ab84
  store i32 ptrtoint (i32* @global_var_1001b4c0.316 to i32), i32* %r29.global-to-local, align 4
  %v0_1000ab98 = call i32 @function_10009e64()
  store i32 268479396, i32* @lr, align 4
  %v1_1000aba0 = call i32 @function_1000acf4(i32 6)
  %v0_1000aba8 = call i32 @function_10009e64()
  %v3_1000abb0.pre = load i32, i32* @global_var_1001b55c.318, align 4
  br label %dec_label_pc_1000abac

dec_label_pc_1000abac:                            ; preds = %dec_label_pc_1000ab74, %dec_label_pc_1000ab8c
  %v0_1000ac24 = phi i32 [ %v3_1000ab78, %dec_label_pc_1000ab74 ], [ %v3_1000abb0.pre, %dec_label_pc_1000ab8c ]
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000abb4 = icmp eq i32 %v0_1000ac24, 1
  br i1 %v3_1000abb4, label %dec_label_pc_1000abf4.lr.ph, label %dec_label_pc_1000ac24

dec_label_pc_1000abf4.lr.ph:                      ; preds = %dec_label_pc_1000abac
  %v2_1000abc0 = ptrtoint i32* %stack_var_-168 to i32
  store i32 2, i32* @global_var_1001b55c.318, align 4
  store i32 ptrtoint (i32* @global_var_1000abd4.320 to i32), i32* @lr, align 4
  %v3_1000abd0 = call i32 @function_10008c1c(i32 %v2_1000abc0, i32 0, i32 140)
  store i32 %v2_1000ab2c, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  store i32 0, i32* %stack_var_-168, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 %v3_1000ab4433, i32* %r9.global-to-local, align 4
  %v2_1000abfc25 = add i32 %v2_1000ab2c, 256
  %v3_1000abfc26 = inttoptr i32 %v2_1000abfc25 to i32*
  store i32 -1, i32* %v3_1000abfc26, align 4
  %v0_1000ac0027 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ac0028 = add i32 %v0_1000ac0027, -1
  store i32 %v1_1000ac0028, i32* %r11.global-to-local, align 4
  %v0_1000ac0429 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ac0430 = add i32 %v0_1000ac0429, -1
  store i32 %v1_1000ac0430, i32* %ctr.global-to-local, align 4
  %v2_1000ac0431 = icmp eq i32 %v1_1000ac0430, 0
  br i1 %v2_1000ac0431, label %dec_label_pc_1000ac08, label %dec_label_pc_1000abf4.dec_label_pc_1000abf4_crit_edge

dec_label_pc_1000abf4.dec_label_pc_1000abf4_crit_edge: ; preds = %dec_label_pc_1000abf4.lr.ph, %dec_label_pc_1000abf4.dec_label_pc_1000abf4_crit_edge
  %v1_1000ac0032 = phi i32 [ %v1_1000ac00, %dec_label_pc_1000abf4.dec_label_pc_1000abf4_crit_edge ], [ %v1_1000ac0028, %dec_label_pc_1000abf4.lr.ph ]
  %v1_1000abf8.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_1000abfc.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_1000abf4 = mul i32 %v1_1000ac0032, 4
  %v2_1000abf8 = add i32 %v1_1000abf4, %v1_1000abf8.pre
  store i32 %v2_1000abf8, i32* %r9.global-to-local, align 4
  %v2_1000abfc = add i32 %v2_1000abf8, 132
  %v3_1000abfc = inttoptr i32 %v2_1000abfc to i32*
  store i32 %v0_1000abfc.pre, i32* %v3_1000abfc, align 4
  %v0_1000ac00 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ac00 = add i32 %v0_1000ac00, -1
  store i32 %v1_1000ac00, i32* %r11.global-to-local, align 4
  %v0_1000ac04 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ac04 = add i32 %v0_1000ac04, -1
  store i32 %v1_1000ac04, i32* %ctr.global-to-local, align 4
  %v2_1000ac04 = icmp eq i32 %v1_1000ac04, 0
  br i1 %v2_1000ac04, label %dec_label_pc_1000ac08, label %dec_label_pc_1000abf4.dec_label_pc_1000abf4_crit_edge

dec_label_pc_1000ac08:                            ; preds = %dec_label_pc_1000abf4.dec_label_pc_1000abf4_crit_edge, %dec_label_pc_1000abf4.lr.ph
  store i32 268479520, i32* @lr, align 4
  %v4_1000ac1c = call i32 @function_1000aa48(i32 6, i32* nonnull %stack_var_-168, i32 0)
  br label %dec_label_pc_1000ab8c

dec_label_pc_1000ac24:                            ; preds = %dec_label_pc_1000abac
  %v3_1000ac24 = icmp eq i32 %v0_1000ac24, 2
  br i1 %v3_1000ac24, label %dec_label_pc_1000ac2c, label %dec_label_pc_1000ac38

dec_label_pc_1000ac2c:                            ; preds = %dec_label_pc_1000ac24
  store i32 3, i32* @global_var_1001b55c.318, align 4
  br label %dec_label_pc_1000ac38

dec_label_pc_1000ac38:                            ; preds = %dec_label_pc_1000ac24, %dec_label_pc_1000ac2c
  %v3_1000ac38 = phi i32 [ %v0_1000ac24, %dec_label_pc_1000ac24 ], [ 3, %dec_label_pc_1000ac2c ]
  %v1_1000ac40 = icmp ne i32 %v3_1000ac38, 3
  call void @__pseudo_cond_branch(i1 %v1_1000ac40, i32 268479572)
  store i32 4, i32* @global_var_1001b55c.318, align 4
  %v1_1000ac50 = call i32 @function_1000a204(i32 127)
  ret i32 %v1_1000ac50

; uselistorder directives
  uselistorder i32 %v1_1000ac04, { 1, 0 }
  uselistorder i32 %v1_1000ac00, { 1, 0 }
  uselistorder i32 %v1_1000ab4c, { 1, 0 }
  uselistorder i32 %v1_1000ab48, { 1, 0 }
  uselistorder i32 %v2_1000ab2c, { 0, 2, 3, 4, 1, 5 }
  uselistorder i32* %r9.global-to-local, { 4, 2, 5, 6, 8, 7, 3, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 4, 3, 2, 0, 1, 5, 6 }
  uselistorder i32* %ctr.global-to-local, { 7, 6, 4, 0, 1, 9, 8, 5, 2, 3 }
  uselistorder i32 (i32)* @function_1000a204, { 1, 0 }
  uselistorder i32 127, { 0, 1, 3, 2 }
  uselistorder i32 3, { 0, 5, 30, 92, 95, 96, 97, 98, 90, 93, 94, 47, 100, 99, 7, 101, 102, 103, 65, 66, 1, 6, 31, 32, 48, 49, 50, 51, 2, 53, 54, 55, 56, 57, 8, 58, 33, 59, 9, 52, 89, 34, 60, 61, 63, 62, 64, 35, 36, 37, 3, 67, 68, 69, 70, 10, 38, 11, 71, 72, 13, 39, 12, 73, 74, 40, 75, 14, 15, 16, 76, 77, 41, 78, 17, 18, 19, 79, 21, 42, 4, 20, 80, 23, 81, 43, 22, 82, 83, 84, 24, 44, 25, 85, 86, 26, 45, 27, 87, 88, 28, 46, 29, 91 }
  uselistorder i32 (i32, i32*, i32)* @function_1000aa48, { 1, 2, 0 }
  uselistorder i32 132, { 1, 2, 3, 0 }
  uselistorder i32 256, { 70, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 76, 77, 78, 12, 71, 13, 80, 14, 15, 16, 17, 18, 81, 19, 74, 82, 75, 83, 79, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 72, 31, 32, 33, 34, 35, 36, 37, 38, 73, 39, 40, 41, 42, 43, 44, 45, 46, 47, 84, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69 }
  uselistorder i32 (i32, i32, i32)* @function_10008c1c, { 1, 6, 9, 0, 2, 8, 7, 5, 4, 3 }
  uselistorder i32 2, { 194, 38, 0, 1, 54, 55, 195, 56, 196, 57, 197, 27, 2, 3, 4, 39, 95, 107, 198, 96, 28, 58, 40, 59, 30, 29, 31, 60, 61, 97, 42, 41, 98, 99, 62, 100, 5, 6, 101, 102, 35, 103, 43, 104, 36, 63, 186, 67, 66, 65, 64, 44, 7, 8, 105, 106, 68, 45, 69, 70, 32, 37, 108, 171, 9, 33, 172, 10, 109, 110, 111, 112, 113, 114, 115, 11, 12, 13, 14, 15, 16, 71, 116, 46, 117, 118, 119, 120, 121, 17, 18, 19, 20, 21, 22, 72, 122, 47, 123, 124, 125, 126, 127, 73, 129, 74, 128, 23, 24, 75, 130, 48, 131, 132, 133, 134, 135, 76, 137, 77, 136, 25, 26, 78, 138, 49, 139, 140, 141, 142, 143, 144, 145, 79, 146, 147, 50, 148, 149, 150, 151, 152, 81, 153, 80, 154, 155, 156, 157, 159, 160, 161, 158, 82, 162, 51, 163, 164, 165, 83, 84, 167, 168, 169, 166, 85, 170, 52, 173, 174, 175, 176, 177, 178, 179, 86, 180, 53, 87, 88, 181, 182, 89, 90, 183, 184, 185, 91, 92, 187, 188, 93, 94, 189, 190, 191, 192, 34, 193 }
  uselistorder i32* @global_var_1001b55c.318, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 268566528, { 37, 38, 0, 39, 2, 1, 3, 36, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 6, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 4, 30, 5, 31, 32, 33, 34, 35 }
  uselistorder i32 (i32, i32, i32)* @function_10008770, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 ()* @function_100092b8, { 2, 0, 1, 4, 3 }
  uselistorder i32* @r4, { 71, 72, 73, 68, 69, 74, 30, 1, 31, 8, 32, 81, 80, 4, 5, 75, 77, 78, 67, 76, 9, 6, 70, 10, 11, 12, 7, 33, 34, 79, 13, 14, 15, 35, 19, 20, 21, 16, 17, 18, 3, 62, 63, 64, 65, 22, 23, 24, 25, 26, 27, 28, 29, 36, 0, 2, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 66 }
  uselistorder i32 6, { 12, 13, 61, 1, 14, 15, 26, 16, 17, 27, 18, 19, 28, 29, 30, 2, 31, 0, 32, 33, 34, 35, 20, 3, 36, 37, 21, 4, 38, 22, 39, 23, 40, 41, 42, 5, 43, 44, 45, 6, 46, 47, 48, 49, 50, 24, 7, 51, 52, 53, 54, 55, 25, 8, 56, 57, 58, 9, 10, 11, 59, 60 }
  uselistorder i32 4, { 125, 0, 1, 354, 355, 356, 357, 358, 66, 67, 359, 360, 126, 361, 362, 2, 186, 187, 146, 147, 188, 189, 191, 363, 370, 3, 4, 5, 6, 7, 333, 335, 334, 331, 332, 302, 303, 304, 305, 336, 337, 338, 339, 340, 341, 342, 343, 344, 8, 148, 9, 149, 150, 364, 365, 366, 127, 367, 368, 369, 10, 190, 128, 11, 192, 193, 194, 195, 196, 129, 130, 151, 131, 152, 153, 154, 77, 74, 155, 156, 157, 158, 12, 160, 161, 167, 168, 159, 169, 69, 170, 68, 75, 172, 76, 173, 174, 175, 176, 177, 171, 162, 163, 164, 165, 166, 295, 178, 132, 79, 78, 80, 179, 180, 181, 70, 182, 71, 183, 184, 185, 72, 197, 198, 13, 199, 200, 201, 81, 202, 203, 14, 15, 82, 204, 83, 85, 84, 205, 206, 16, 207, 208, 90, 209, 210, 17, 18, 89, 211, 86, 88, 87, 212, 213, 214, 215, 19, 216, 217, 218, 219, 133, 220, 20, 221, 222, 21, 223, 92, 224, 91, 134, 225, 226, 227, 228, 22, 229, 230, 231, 232, 135, 233, 23, 234, 235, 24, 236, 94, 237, 93, 136, 238, 239, 240, 25, 241, 242, 243, 244, 99, 245, 246, 26, 27, 98, 247, 248, 28, 95, 97, 96, 249, 250, 29, 251, 252, 104, 253, 30, 31, 254, 103, 255, 100, 256, 102, 101, 257, 258, 259, 260, 32, 262, 263, 137, 264, 265, 266, 109, 267, 33, 34, 138, 261, 108, 105, 107, 106, 268, 269, 270, 271, 272, 139, 140, 35, 274, 275, 141, 276, 277, 278, 114, 279, 36, 37, 142, 273, 113, 110, 112, 111, 280, 281, 282, 120, 38, 39, 283, 284, 40, 285, 286, 287, 119, 41, 42, 115, 288, 116, 118, 117, 289, 290, 291, 292, 293, 294, 143, 122, 121, 296, 297, 298, 299, 300, 301, 144, 124, 123, 43, 306, 307, 44, 45, 308, 309, 46, 47, 310, 311, 48, 49, 312, 313, 50, 51, 314, 315, 52, 53, 316, 317, 54, 318, 55, 319, 320, 56, 57, 321, 322, 58, 59, 323, 324, 60, 61, 325, 326, 62, 63, 327, 328, 64, 329, 330, 345, 346, 347, 348, 349, 350, 73, 351, 65, 352, 353, 145 }
  uselistorder i32 32, { 15, 16, 42, 31, 32, 22, 23, 11, 12, 29, 30, 24, 0, 1, 2, 13, 33, 14, 34, 3, 4, 5, 6, 18, 25, 19, 26, 17, 7, 8, 9, 10, 20, 21, 27, 28, 35, 36, 37, 38, 39, 40, 41 }
  uselistorder i32 31, { 1, 2, 26, 27, 15, 28, 29, 3, 4, 0, 5, 30, 31, 16, 17, 18, 19, 22, 23, 20, 21, 6, 7, 8, 9, 10, 11, 12, 13, 14, 24, 25 }
  uselistorder i32 ()* @function_10009e64, { 3, 2, 1, 0, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 21, 20, 19 }
  uselistorder label %dec_label_pc_1000ac38, { 1, 0 }
  uselistorder label %dec_label_pc_1000abf4.dec_label_pc_1000abf4_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000abac, { 1, 0 }
  uselistorder label %dec_label_pc_1000ab74, { 1, 0 }
  uselistorder label %dec_label_pc_1000ab40.dec_label_pc_1000ab40_crit_edge, { 1, 0 }
}

define i32 @function_1000ac5c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000ac5c:
  %v1_1000ac5c = add i32 %arg1, 28
  %v2_1000ac5c = inttoptr i32 %v1_1000ac5c to i32*
  %v3_1000ac5c = load i32, i32* %v2_1000ac5c, align 4
  store i32 %v3_1000ac5c, i32* @global_var_1001b560.321, align 4
  %v1_1000ac6c = add i32 %arg1, 44
  %v2_1000ac6c = inttoptr i32 %v1_1000ac6c to i32*
  %v3_1000ac6c = load i32, i32* %v2_1000ac6c, align 4
  store i32 %v3_1000ac6c, i32* @global_var_1001b564.322, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 44, { 7, 0, 5, 6, 1, 2, 3, 4 }
  uselistorder i32 28, { 43, 14, 15, 5, 6, 16, 13, 42, 7, 9, 10, 11, 12, 8, 3, 4, 2, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 0, 33, 34, 35, 1, 36, 37, 38, 39, 40, 41 }
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @function_1000ac78(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000ac78:
  store i32 %arg1, i32* @global_var_1001b568.315, align 4
  %v0_1000aca0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 true, i32 %v0_1000aca0)
  %v1_1000aca8 = call i32 @function_1000ad24(i32 12)
  ret i32 %v1_1000aca8

; uselistorder directives
  uselistorder i32 12, { 16, 44, 45, 24, 25, 46, 47, 48, 49, 103, 104, 105, 106, 6, 101, 107, 0, 1, 7, 102, 5, 17, 18, 8, 26, 50, 51, 19, 52, 53, 54, 20, 21, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 9, 39, 22, 23, 40, 10, 41, 43, 42, 34, 97, 55, 56, 57, 58, 59, 60, 11, 61, 62, 63, 64, 65, 66, 67, 12, 68, 69, 70, 71, 72, 73, 74, 75, 76, 13, 77, 78, 79, 80, 81, 82, 83, 84, 85, 14, 86, 15, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 2, 3, 4 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 6, 10, 5, 11, 7, 12, 4, 0, 8, 1, 3, 2, 9 }
  uselistorder i1 true, { 2, 0, 1 }
  uselistorder i32* @global_var_1001b568.315, { 1, 0, 2 }
}

define i32 @function_1000acac() local_unnamed_addr {
dec_label_pc_1000acac:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000acc4 = call i32 @__asm_mfcr()
  %v1_1000acc8 = and i32 %v0_1000acc4, 268435456
  %v3_1000acc8 = icmp eq i32 %v1_1000acc8, 0
  store i32 %v0_1000acc4, i32* %r31.global-to-local, align 4
  br i1 %v3_1000acc8, label %dec_label_pc_1000ace0, label %dec_label_pc_1000acd4

dec_label_pc_1000acd4:                            ; preds = %dec_label_pc_1000acac
  %v0_1000acd4 = call i32 @function_10008b34()
  %v0_1000acd8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000acd8 = inttoptr i32 %v0_1000acd4 to i32*
  store i32 %v0_1000acd8, i32* %v2_1000acd8, align 4
  br label %dec_label_pc_1000ace0

dec_label_pc_1000ace0:                            ; preds = %dec_label_pc_1000acac, %dec_label_pc_1000acd4
  %v0_1000acf0 = phi i32 [ %v0_1000acc4, %dec_label_pc_1000acac ], [ -1, %dec_label_pc_1000acd4 ]
  ret i32 %v0_1000acf0

; uselistorder directives
  uselistorder i32 268435456, { 43, 25, 44, 32, 45, 46, 47, 48, 33, 34, 49, 50, 26, 31, 36, 51, 27, 28, 35, 37, 29, 52, 41, 39, 42, 40, 38, 53, 54, 30, 2, 0, 1, 5, 3, 4, 8, 6, 7, 9, 10, 13, 11, 12, 16, 14, 15, 17, 20, 18, 19, 23, 21, 22, 24 }
  uselistorder i32 ()* @__asm_mfcr, { 12, 47, 11, 39, 10, 9, 8, 7, 38, 37, 6, 5, 4, 46, 40, 32, 3, 45, 44, 36, 30, 43, 2, 14, 16, 13, 15, 21, 1, 0, 42, 41, 35, 34, 33, 31, 29, 28, 27, 26, 25, 24, 23, 22, 20, 19, 18, 17 }
  uselistorder label %dec_label_pc_1000ace0, { 1, 0 }
}

define i32 @function_1000acf4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000acf4:
  %v0_1000acf4 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 268479756, i32* @lr, align 4
  %v0_1000ad08 = call i32 @function_100084a8()
  %v0_1000ad10 = load i32, i32* @r29, align 4
  store i32 %v0_1000acf4, i32* @lr, align 4
  %v2_1000ad20 = call i32 @function_10008538(i32 %v0_1000ad08, i32 %v0_1000ad10)
  ret i32 %v2_1000ad20

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_10008538, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @function_100084a8, { 0, 3, 2, 1 }
}

define i32 @function_1000ad24(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000ad24:
  store i32 %arg1, i32* @r29, align 4
  %v0_1000ad38 = call i32 @function_10008b34()
  %v0_1000ad3c = load i32, i32* @r29, align 4
  %v2_1000ad3c = inttoptr i32 %v0_1000ad38 to i32*
  store i32 %v0_1000ad3c, i32* %v2_1000ad3c, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 ()* @function_10008b34, { 24, 15, 50, 14, 35, 13, 12, 11, 10, 34, 33, 32, 9, 8, 6, 7, 2, 38, 37, 21, 22, 49, 48, 47, 46, 31, 30, 29, 45, 36, 27, 1, 0, 44, 43, 28, 26, 42, 5, 17, 19, 16, 18, 23, 4, 3, 41, 40, 25, 39, 20 }
  uselistorder i32* @r29, { 288, 289, 309, 310, 311, 11, 12, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 312, 313, 314, 315, 0, 56, 290, 291, 292, 293, 287, 294, 1, 295, 296, 297, 298, 299, 300, 13, 14, 15, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 43, 44, 45, 37, 38, 39, 40, 41, 42, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 2, 113, 3, 114, 4, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 5, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 6, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 186, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 7, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 8, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 9, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 302, 301, 303, 304, 305, 10, 306, 307, 308 }
}

define i32 @function_1000ad58(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000ad58:
  %r31.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1001b380.303 to i32), i32* %r31.global-to-local, align 4
  %v3_1000ad74 = load i32, i32* @global_var_1001b380.303, align 4
  %v3_1000ad78 = icmp eq i32 %v3_1000ad74, -1
  br i1 %v3_1000ad78, label %dec_label_pc_1000ad94, label %dec_label_pc_1000ad80

dec_label_pc_1000ad80:                            ; preds = %dec_label_pc_1000ad58, %dec_label_pc_1000ad80
  %v0_1000ad80 = phi i32 [ %v3_1000ad88, %dec_label_pc_1000ad80 ], [ %v3_1000ad74, %dec_label_pc_1000ad58 ]
  call void @__pseudo_call(i32 %v0_1000ad80)
  %v0_1000ad88 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000ad88 = add i32 %v0_1000ad88, -4
  %v2_1000ad88 = inttoptr i32 %v1_1000ad88 to i32*
  %v3_1000ad88 = load i32, i32* %v2_1000ad88, align 4
  store i32 %v1_1000ad88, i32* %r31.global-to-local, align 4
  %v3_1000ad8c = icmp eq i32 %v3_1000ad88, -1
  br i1 %v3_1000ad8c, label %dec_label_pc_1000ad94, label %dec_label_pc_1000ad80

dec_label_pc_1000ad94:                            ; preds = %dec_label_pc_1000ad80, %dec_label_pc_1000ad58
  %v0_1000ada4 = load i32, i32* @r3, align 4
  ret i32 %v0_1000ada4

; uselistorder directives
  uselistorder i32 %v3_1000ad88, { 1, 0 }
  uselistorder i32 -4, { 0, 13, 14, 15, 7, 8, 9, 10, 11, 12, 16, 17, 1, 2, 3, 4, 5, 6 }
  uselistorder void (i32)* @__pseudo_call, { 1, 3, 4, 2, 0 }
  uselistorder i32 -1, { 132, 133, 0, 36, 88, 245, 10, 11, 12, 246, 89, 247, 8, 9, 90, 91, 13, 92, 37, 38, 238, 75, 39, 181, 40, 41, 42, 43, 44, 182, 183, 184, 185, 186, 191, 45, 258, 256, 46, 248, 249, 76, 93, 250, 16, 17, 94, 255, 14, 15, 172, 3, 77, 239, 240, 32, 134, 254, 251, 47, 135, 95, 136, 18, 19, 137, 138, 139, 35, 48, 140, 141, 73, 96, 97, 98, 99, 187, 188, 20, 21, 22, 100, 189, 190, 101, 78, 74, 192, 193, 49, 50, 51, 52, 252, 253, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 257, 66, 142, 102, 23, 194, 195, 103, 1, 104, 105, 143, 67, 68, 106, 2, 107, 24, 108, 69, 109, 25, 196, 79, 144, 110, 80, 145, 146, 147, 111, 148, 149, 70, 152, 112, 27, 113, 26, 114, 153, 115, 71, 154, 155, 156, 116, 117, 150, 151, 81, 157, 83, 158, 159, 82, 160, 161, 162, 163, 164, 84, 165, 166, 72, 167, 168, 118, 28, 119, 29, 169, 170, 171, 120, 121, 173, 174, 175, 176, 177, 178, 179, 180, 33, 34, 197, 198, 199, 200, 201, 122, 123, 202, 203, 204, 205, 206, 207, 208, 210, 209, 30, 211, 212, 214, 213, 31, 215, 216, 124, 217, 218, 125, 219, 220, 221, 222, 223, 4, 224, 5, 225, 226, 6, 227, 7, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 126, 127, 241, 128, 242, 129, 130, 243, 244, 131, 85, 86, 87 }
  uselistorder i32 1, { 59, 477, 938, 596, 597, 658, 657, 304, 300, 303, 302, 299, 301, 661, 660, 659, 17, 0, 924, 925, 926, 927, 523, 132, 939, 940, 941, 942, 482, 481, 480, 133, 134, 136, 137, 135, 386, 167, 662, 191, 192, 343, 164, 479, 478, 664, 663, 462, 461, 463, 460, 459, 464, 598, 127, 128, 130, 129, 665, 193, 345, 599, 666, 40, 38, 37, 39, 600, 544, 946, 943, 670, 669, 668, 667, 381, 378, 383, 382, 380, 379, 601, 945, 671, 799, 800, 801, 595, 802, 524, 416, 417, 418, 170, 168, 169, 26, 27, 29, 30, 28, 151, 506, 672, 473, 944, 483, 602, 603, 675, 674, 673, 156, 153, 154, 155, 152, 157, 131, 545, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 766, 688, 687, 447, 448, 690, 689, 32, 31, 33, 853, 497, 13, 14, 15, 947, 948, 175, 173, 176, 174, 140, 141, 139, 142, 143, 144, 691, 604, 692, 494, 493, 495, 605, 693, 162, 163, 546, 694, 16, 451, 56, 484, 150, 446, 344, 138, 57, 58, 695, 166, 145, 474, 475, 476, 468, 696, 387, 697, 165, 767, 698, 55, 810, 811, 498, 499, 508, 812, 813, 507, 814, 701, 700, 699, 23, 19, 20, 24, 18, 22, 25, 21, 1, 804, 803, 805, 806, 854, 855, 496, 856, 857, 703, 702, 815, 816, 817, 606, 818, 46, 47, 48, 49, 921, 922, 526, 525, 923, 342, 763, 765, 764, 607, 819, 500, 466, 465, 467, 928, 172, 171, 820, 821, 501, 502, 509, 822, 42, 43, 44, 45, 858, 485, 486, 487, 488, 489, 490, 491, 492, 879, 158, 161, 160, 159, 859, 363, 366, 365, 364, 34, 35, 510, 547, 768, 769, 608, 770, 771, 609, 772, 773, 775, 779, 780, 776, 777, 778, 781, 610, 782, 611, 612, 783, 613, 614, 784, 790, 791, 532, 652, 711, 710, 709, 708, 707, 706, 705, 704, 361, 351, 352, 353, 354, 348, 356, 349, 347, 346, 350, 360, 359, 355, 362, 358, 357, 785, 786, 615, 787, 788, 616, 789, 376, 367, 370, 372, 374, 373, 375, 369, 368, 377, 371, 774, 617, 712, 449, 450, 915, 618, 511, 472, 470, 471, 469, 860, 713, 12, 10, 11, 549, 792, 548, 793, 619, 620, 621, 795, 796, 794, 527, 797, 622, 623, 624, 625, 626, 627, 798, 533, 724, 723, 722, 721, 655, 720, 719, 718, 717, 716, 715, 714, 457, 454, 455, 6, 7, 8, 9, 452, 453, 456, 458, 628, 629, 550, 630, 531, 807, 631, 808, 809, 503, 632, 534, 731, 730, 729, 728, 727, 726, 725, 146, 147, 148, 149, 823, 633, 824, 825, 3, 826, 827, 4, 528, 828, 829, 2, 830, 831, 832, 833, 734, 733, 653, 654, 732, 385, 384, 898, 901, 899, 529, 900, 50, 902, 903, 904, 634, 635, 834, 835, 836, 837, 636, 512, 535, 838, 551, 552, 735, 412, 405, 415, 408, 414, 406, 407, 404, 391, 402, 403, 399, 400, 401, 397, 398, 394, 395, 393, 392, 396, 411, 413, 390, 389, 409, 410, 839, 840, 841, 637, 513, 536, 842, 553, 554, 555, 736, 314, 311, 315, 325, 305, 307, 317, 316, 328, 318, 312, 326, 327, 322, 323, 324, 320, 313, 321, 319, 329, 310, 309, 308, 306, 843, 844, 845, 846, 638, 504, 514, 537, 847, 556, 557, 558, 559, 560, 741, 740, 739, 738, 737, 257, 252, 261, 267, 250, 254, 264, 255, 265, 262, 266, 268, 269, 270, 258, 253, 251, 271, 263, 256, 260, 259, 249, 848, 849, 850, 851, 639, 505, 515, 538, 852, 561, 562, 563, 564, 565, 566, 567, 568, 569, 746, 745, 744, 743, 742, 82, 77, 86, 92, 75, 79, 89, 80, 90, 87, 91, 93, 94, 95, 83, 78, 76, 96, 88, 81, 85, 84, 74, 861, 862, 863, 864, 865, 866, 869, 867, 868, 870, 871, 872, 640, 873, 516, 539, 874, 875, 876, 530, 877, 878, 749, 748, 747, 108, 97, 106, 98, 113, 122, 112, 120, 115, 116, 117, 118, 107, 119, 121, 102, 103, 123, 124, 125, 110, 109, 126, 111, 114, 105, 104, 101, 100, 99, 880, 881, 882, 641, 517, 540, 883, 751, 750, 224, 222, 233, 241, 242, 235, 243, 237, 228, 246, 238, 234, 244, 245, 236, 239, 230, 240, 227, 226, 225, 221, 223, 247, 232, 231, 229, 884, 885, 886, 888, 889, 887, 518, 541, 890, 570, 571, 572, 752, 287, 274, 285, 294, 273, 272, 289, 297, 292, 290, 283, 275, 291, 295, 296, 279, 280, 288, 286, 293, 276, 298, 284, 282, 281, 277, 278, 891, 892, 893, 895, 896, 894, 519, 542, 897, 573, 574, 575, 757, 756, 755, 754, 753, 442, 426, 440, 444, 425, 419, 445, 427, 424, 434, 437, 428, 441, 420, 422, 423, 432, 433, 443, 421, 429, 439, 438, 436, 435, 430, 431, 905, 906, 642, 907, 908, 909, 643, 644, 543, 910, 576, 577, 758, 210, 205, 198, 207, 216, 194, 195, 219, 209, 211, 212, 214, 203, 206, 217, 218, 204, 208, 213, 215, 200, 199, 220, 202, 201, 196, 197, 911, 580, 912, 913, 578, 914, 645, 646, 579, 759, 188, 179, 177, 189, 187, 190, 181, 184, 185, 186, 180, 183, 182, 178, 916, 583, 917, 918, 581, 919, 647, 648, 582, 760, 71, 62, 60, 72, 70, 73, 64, 67, 68, 69, 63, 66, 65, 61, 5, 584, 585, 586, 587, 588, 589, 590, 591, 592, 920, 593, 594, 53, 52, 51, 54, 520, 388, 521, 36, 929, 649, 933, 650, 934, 930, 931, 932, 935, 936, 333, 337, 341, 330, 340, 331, 336, 335, 334, 332, 339, 338, 937, 651, 522, 41, 762, 761, 248, 656 }
  uselistorder label %dec_label_pc_1000ad80, { 1, 0 }
}

define i32 @function_1000ada8() local_unnamed_addr {
dec_label_pc_1000ada8:
  %v0_1000adc0 = load i32, i32* @r3, align 4
  ret i32 %v0_1000adc0

; uselistorder directives
  uselistorder i32* @r3, { 23, 12, 162, 163, 164, 13, 21, 165, 93, 0, 94, 30, 172, 19, 20, 3, 25, 166, 168, 29, 169, 170, 171, 153, 28, 154, 9, 18, 156, 158, 157, 167, 31, 32, 33, 95, 26, 15, 96, 97, 98, 99, 100, 101, 102, 103, 104, 14, 4, 16, 105, 1, 2, 5, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 6, 66, 67, 17, 147, 148, 149, 10, 150, 151, 7, 74, 75, 76, 77, 78, 79, 11, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 142, 143, 8, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 152, 155, 159, 160, 161, 22, 24, 27 }
}

define i32 @function_1000adc4() local_unnamed_addr {
entry:
  store i32 268479956, i32* @lr, align 4
  %v0_1000add0 = call i32 @function_100000b8()
  ret i32 %v0_1000add0

; uselistorder directives
  uselistorder i32 0, { 809, 202, 810, 38, 203, 142, 811, 204, 812, 813, 36, 37, 814, 815, 816, 0, 752, 753, 754, 77, 76, 755, 817, 818, 819, 39, 820, 821, 822, 823, 513, 205, 206, 385, 759, 760, 143, 761, 824, 19, 514, 515, 825, 826, 827, 828, 207, 516, 517, 518, 519, 520, 521, 522, 78, 530, 531, 829, 830, 208, 848, 849, 209, 854, 856, 135, 857, 210, 855, 1, 831, 832, 79, 833, 834, 211, 144, 212, 835, 836, 42, 43, 837, 838, 839, 213, 842, 843, 844, 40, 41, 845, 846, 847, 489, 490, 491, 492, 493, 80, 494, 495, 496, 201, 497, 81, 764, 766, 23, 767, 44, 768, 765, 762, 763, 2, 736, 732, 733, 734, 735, 136, 3, 771, 769, 770, 137, 772, 773, 737, 738, 739, 740, 741, 214, 742, 743, 774, 775, 215, 776, 145, 777, 786, 787, 82, 778, 779, 780, 781, 782, 783, 784, 785, 4, 5, 377, 386, 387, 388, 45, 46, 389, 6, 216, 756, 390, 391, 392, 393, 394, 395, 396, 397, 217, 398, 858, 859, 860, 861, 862, 863, 864, 865, 523, 524, 47, 525, 526, 527, 528, 529, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 399, 498, 614, 840, 841, 400, 401, 544, 628, 402, 850, 83, 851, 807, 802, 808, 803, 695, 852, 853, 403, 404, 545, 546, 547, 48, 84, 548, 549, 64, 550, 552, 551, 140, 499, 500, 7, 68, 24, 69, 25, 629, 70, 630, 26, 27, 631, 71, 28, 85, 218, 219, 20, 21, 553, 745, 746, 747, 748, 89, 87, 86, 749, 88, 91, 90, 384, 92, 554, 49, 555, 556, 557, 788, 93, 789, 790, 558, 559, 50, 94, 560, 8, 95, 656, 96, 632, 405, 406, 99, 407, 408, 409, 410, 411, 134, 412, 220, 413, 414, 417, 415, 98, 416, 221, 418, 419, 420, 421, 422, 100, 423, 424, 149, 425, 426, 378, 72, 428, 429, 430, 431, 432, 433, 53, 54, 434, 435, 51, 52, 436, 437, 438, 439, 440, 441, 148, 146, 446, 447, 222, 448, 442, 443, 444, 445, 449, 22, 379, 380, 450, 451, 97, 452, 453, 454, 459, 460, 461, 462, 147, 463, 464, 101, 465, 466, 467, 468, 469, 470, 455, 102, 456, 457, 103, 458, 223, 224, 427, 633, 471, 141, 472, 473, 225, 474, 475, 476, 477, 478, 150, 479, 480, 55, 56, 481, 482, 483, 57, 58, 484, 485, 486, 9, 487, 226, 227, 228, 488, 229, 17, 16, 15, 14, 13, 12, 502, 105, 501, 104, 503, 504, 107, 505, 106, 506, 10, 230, 231, 18, 509, 507, 508, 138, 510, 511, 151, 232, 512, 29, 561, 572, 562, 11, 563, 564, 565, 566, 139, 567, 568, 569, 570, 571, 30, 108, 63, 62, 109, 573, 59, 235, 574, 233, 234, 152, 575, 74, 696, 697, 73, 698, 110, 699, 75, 700, 111, 576, 112, 577, 236, 578, 579, 580, 237, 581, 582, 583, 584, 238, 585, 586, 587, 153, 154, 155, 156, 157, 158, 159, 160, 588, 589, 113, 590, 591, 239, 592, 593, 594, 595, 596, 597, 240, 598, 599, 600, 169, 161, 162, 163, 164, 165, 166, 167, 168, 114, 601, 602, 241, 603, 604, 605, 606, 242, 609, 610, 60, 608, 607, 243, 611, 612, 613, 170, 171, 172, 173, 174, 175, 176, 115, 615, 616, 244, 617, 618, 619, 620, 245, 623, 624, 61, 622, 621, 246, 625, 626, 627, 177, 178, 179, 634, 635, 247, 636, 637, 117, 116, 638, 248, 639, 640, 641, 642, 643, 644, 645, 118, 646, 647, 648, 180, 649, 650, 249, 651, 65, 66, 652, 119, 653, 654, 655, 250, 181, 182, 183, 184, 120, 657, 251, 658, 659, 660, 661, 252, 662, 663, 664, 186, 185, 665, 253, 666, 667, 121, 668, 254, 669, 670, 671, 672, 673, 674, 675, 676, 677, 255, 678, 679, 680, 187, 188, 189, 190, 681, 122, 682, 256, 683, 684, 685, 686, 687, 688, 689, 690, 691, 257, 692, 693, 694, 191, 192, 193, 194, 701, 702, 703, 704, 123, 705, 258, 706, 707, 708, 709, 710, 259, 711, 712, 713, 195, 196, 197, 198, 127, 126, 714, 715, 260, 31, 125, 124, 716, 717, 718, 261, 32, 719, 720, 721, 722, 128, 199, 132, 131, 723, 724, 33, 130, 129, 725, 726, 727, 34, 728, 729, 730, 731, 133, 200, 744, 750, 751, 757, 758, 791, 67, 792, 793, 262, 794, 795, 796, 797, 798, 799, 800, 801, 804, 35, 805, 806, 866, 867, 868, 381, 382, 383, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887 }
  uselistorder i32* @lr, { 8, 659, 660, 661, 630, 662, 663, 664, 665, 666, 667, 668, 669, 627, 10, 670, 279, 280, 9, 631, 632, 281, 282, 283, 284, 285, 286, 679, 680, 684, 685, 686, 687, 688, 689, 690, 692, 681, 683, 671, 672, 673, 674, 675, 676, 677, 678, 633, 635, 634, 596, 597, 598, 599, 600, 601, 636, 637, 638, 639, 643, 640, 641, 642, 11, 12, 576, 541, 542, 577, 423, 13, 14, 15, 578, 579, 628, 16, 17, 18, 19, 20, 21, 22, 691, 23, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 682, 24, 25, 26, 27, 28, 29, 301, 625, 302, 644, 454, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 487, 455, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 125, 126, 127, 128, 129, 130, 131, 132, 100, 101, 102, 103, 104, 105, 456, 457, 458, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 0, 237, 238, 239, 240, 241, 242, 259, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 4, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 5, 332, 333, 334, 335, 336, 337, 1, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 404, 397, 398, 399, 400, 401, 402, 403, 2, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 435, 428, 429, 430, 431, 432, 433, 434, 3, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 561, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 580, 582, 583, 584, 581, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 629, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 6, 7 }
}

declare i32 @__asm_rlwinm(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwinm.(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwimi(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_mfcr() local_unnamed_addr

declare %0 @__asm_mtcrf(i32, i32) local_unnamed_addr

declare i32 @unknown_0(i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i16 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8 @__decompiler_undefined_function_2() local_unnamed_addr

declare i64 @__decompiler_undefined_function_3() local_unnamed_addr
